import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_105 = relay.var("var_105", dtype = "float32", shape = (12, 7, 13))#candidate|105|(12, 7, 13)|var|float32
uop_106 = relay.cos(var_105.astype('float32')) # shape=(12, 7, 13)
output = uop_106
output2 = uop_106
func_109 = relay.Function([var_105,], output)
mod['func_109'] = func_109
mod = relay.transform.InferType()(mod)
mutated_mod['func_109'] = func_109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_110 = relay.var("var_110", dtype = "float32", shape = (12, 7, 13))#candidate|110|(12, 7, 13)|var|float32
func_109_call = mutated_mod.get_global_var('func_109')
call_111 = func_109_call(var_110)
output = call_111
func_112 = relay.Function([var_110], output)
mutated_mod['func_112'] = func_112
mutated_mod = relay.transform.InferType()(mutated_mod)
var_119 = relay.var("var_119", dtype = "float32", shape = (12, 6, 4))#candidate|119|(12, 6, 4)|var|float32
uop_120 = relay.cosh(var_119.astype('float32')) # shape=(12, 6, 4)
output = uop_120
output2 = uop_120
func_130 = relay.Function([var_119,], output)
mod['func_130'] = func_130
mod = relay.transform.InferType()(mod)
mutated_mod['func_130'] = func_130
mutated_mod = relay.transform.InferType()(mutated_mod)
var_131 = relay.var("var_131", dtype = "float32", shape = (12, 6, 4))#candidate|131|(12, 6, 4)|var|float32
func_130_call = mutated_mod.get_global_var('func_130')
call_132 = func_130_call(var_131)
output = call_132
func_133 = relay.Function([var_131], output)
mutated_mod['func_133'] = func_133
mutated_mod = relay.transform.InferType()(mutated_mod)
const_672 = relay.const([[[5,8,-1,-7],[10,-8,-1,-3],[-4,-7,-4,8],[-10,-3,-2,-5],[-6,-10,-8,9],[-2,-10,1,-5],[-4,8,7,-6],[-6,3,5,-6],[1,-9,4,-6]],[[-6,9,-2,4],[7,4,9,-2],[-2,-4,3,9],[7,2,9,-8],[-4,2,-3,4],[8,5,-1,-4],[-4,-1,2,2],[9,3,-1,2],[-9,-5,-9,-4]],[[8,-6,-8,1],[9,-2,1,10],[-7,-9,5,-8],[-4,-9,-10,3],[6,-7,10,-10],[-8,-9,4,1],[4,2,9,-6],[-2,9,-1,10],[-2,4,4,8]],[[-4,-1,10,-2],[1,-6,3,-7],[-8,-7,-9,-6],[5,-10,2,1],[8,-4,5,5],[-9,8,4,1],[2,-10,-6,-9],[-6,9,8,6],[1,2,-8,-2]],[[9,-3,5,-2],[-9,-7,1,-7],[4,7,-4,-8],[2,3,-9,7],[6,9,-3,10],[3,8,-3,3],[10,1,-10,1],[9,4,-10,3],[2,-9,3,6]],[[9,2,-10,1],[-2,4,-1,7],[-10,7,-3,-5],[-2,-9,-6,-3],[-10,6,9,-10],[10,-4,-8,1],[4,-7,8,-2],[-6,5,8,6],[-2,-10,10,1]],[[-3,-2,-8,8],[-1,-8,4,-1],[-3,-4,-6,-10],[3,-9,-9,4],[7,-2,9,6],[-2,-10,4,-9],[-8,7,3,2],[9,-2,4,-2],[-2,-8,2,-10]],[[10,-3,1,-1],[-4,5,-8,-7],[8,7,3,-5],[-4,7,-6,-2],[-7,1,6,-1],[2,10,-2,-1],[4,4,-9,-4],[1,9,-8,-4],[-6,7,8,-4]],[[3,-4,-9,-7],[3,2,-2,3],[8,3,-4,3],[3,-4,7,3],[10,-4,2,-3],[5,-5,4,10],[-1,-1,1,5],[-3,7,4,9],[9,6,7,4]],[[-7,-8,-8,-6],[-3,-4,-1,10],[-7,-6,-9,7],[-10,-9,4,-8],[-4,-3,-7,3],[-6,-6,-3,2],[3,1,5,-2],[-10,-2,6,-7],[-8,-5,9,-7]],[[-5,3,1,-8],[-3,10,8,3],[-3,-4,6,-1],[2,-9,6,-8],[-3,8,8,10],[-4,9,2,-2],[8,-4,-7,-7],[1,-10,4,-7],[-8,-2,-1,-8]],[[-3,-7,-1,-10],[6,1,8,-10],[6,5,7,8],[7,2,2,-2],[-8,-10,1,10],[-1,-9,-1,-8],[-1,8,9,3],[-5,3,-6,-4],[8,-7,-3,4]],[[-8,-5,-4,-9],[-7,10,4,-1],[8,-8,-1,-1],[6,7,5,-3],[4,5,10,10],[-10,5,-6,4],[-2,-10,-5,-3],[-1,8,2,10],[-1,4,8,1]],[[6,1,-4,-6],[7,1,-1,1],[-7,-7,-4,4],[3,-7,2,10],[-3,2,7,-6],[-5,6,-3,7],[10,6,-2,-7],[10,5,-3,-2],[7,-6,1,7]],[[-6,2,-2,9],[3,-3,-8,10],[-6,10,2,-8],[5,3,3,-1],[-5,-10,2,-8],[-5,-9,-3,10],[6,1,-1,6],[10,-1,-9,3],[7,-10,5,3]]], dtype = "int64")#candidate|672|(15, 9, 4)|const|int64
const_673 = relay.const([[[-4,1,3,-8],[-3,-6,4,-3],[-5,-2,1,5],[-6,9,7,-3],[2,-4,-8,-1],[9,-4,-1,5],[4,-3,5,-2],[-2,-6,-10,1],[5,-10,8,-7]],[[-9,10,-10,5],[2,-8,7,8],[2,2,3,5],[-9,-2,-8,-5],[-2,6,10,3],[-1,-9,-2,2],[10,-7,7,4],[8,-4,7,-1],[4,8,-3,4]],[[-3,-4,9,-10],[-10,-6,8,3],[-6,-10,6,-9],[-3,4,7,9],[2,-6,1,-4],[2,8,-7,-5],[7,3,9,8],[8,-7,2,4],[1,-9,-5,-3]],[[-10,-4,1,-10],[-7,6,5,-7],[5,-8,9,-5],[10,-5,6,10],[1,4,7,4],[7,7,3,-6],[7,-9,6,1],[7,-10,5,8],[-8,-10,6,-7]],[[4,-8,-10,-9],[-10,7,10,1],[3,-10,-3,-4],[3,-6,-10,6],[10,2,10,-9],[10,4,4,-7],[9,7,8,-3],[-7,-9,-5,-2],[-9,-5,8,9]],[[9,-7,-1,2],[-2,9,2,10],[-4,-8,-6,-2],[-7,-5,-10,-2],[-8,-4,5,-6],[-6,-8,9,-10],[7,-2,10,-9],[2,3,-6,2],[8,-10,3,10]],[[3,10,6,-6],[9,7,3,-10],[7,4,-10,7],[2,1,-3,7],[-10,9,8,-8],[-3,-8,-8,9],[2,1,2,2],[-5,-9,7,-6],[2,3,-1,7]],[[-6,8,3,-3],[1,-9,-10,-6],[5,5,3,8],[-7,7,2,9],[1,5,-5,9],[10,10,10,-7],[1,-4,3,2],[-3,-7,-3,4],[-4,-9,5,6]],[[7,-9,9,-9],[-10,-7,-7,3],[9,4,8,7],[-6,10,4,1],[1,-8,6,5],[2,-8,-2,-10],[3,-3,1,1],[-4,-1,9,2],[9,-4,-5,10]],[[-10,8,-9,3],[2,1,5,3],[6,-10,3,9],[-9,-7,-10,4],[7,-4,-2,-10],[-2,-8,-4,-8],[2,-7,9,-8],[-9,-5,-4,-10],[2,-9,2,9]],[[-10,-3,-7,-7],[9,5,-10,-8],[-10,7,-1,6],[3,-10,-3,-9],[5,7,2,-2],[-10,1,-1,-8],[-10,-4,-3,6],[6,-3,4,-1],[-5,-10,4,8]],[[-10,1,-5,-2],[-5,-8,7,-8],[-2,1,2,-3],[-2,-4,7,-8],[2,-8,-2,4],[9,8,7,-10],[-7,-5,2,-6],[10,-1,-3,-4],[10,-1,-2,-10]],[[8,6,5,4],[-6,-3,-4,-3],[10,-3,-2,-9],[9,-5,-7,-2],[4,-8,-4,3],[1,6,-4,4],[-2,-8,-6,-5],[8,-7,-4,8],[9,-6,-10,10]],[[-4,7,-7,3],[-9,-4,-9,1],[-10,10,7,3],[-6,8,-10,9],[9,2,-8,7],[-6,-2,1,-2],[-10,-6,-10,5],[-10,4,-3,1],[-9,-8,-10,4]],[[-6,-2,-8,10],[7,-8,-7,-5],[-8,-6,-1,1],[-2,9,-3,-7],[-9,-10,3,8],[-7,7,9,-2],[2,-8,-7,-5],[9,10,-8,3],[-7,-6,-4,-10]]], dtype = "int64")#candidate|673|(15, 9, 4)|const|int64
bop_674 = relay.less(const_672.astype('bool'), relay.reshape(const_673.astype('bool'), relay.shape_of(const_672))) # shape=(15, 9, 4)
func_130_call = mod.get_global_var('func_130')
func_133_call = mutated_mod.get_global_var('func_133')
var_685 = relay.var("var_685", dtype = "float32", shape = (288, 1))#candidate|685|(288, 1)|var|float32
call_684 = func_130_call(relay.reshape(var_685.astype('float32'), [12, 6, 4]))
call_686 = func_130_call(relay.reshape(var_685.astype('float32'), [12, 6, 4]))
output = relay.Tuple([bop_674,call_684,var_685,])
output2 = relay.Tuple([bop_674,call_686,var_685,])
func_692 = relay.Function([var_685,], output)
mod['func_692'] = func_692
mod = relay.transform.InferType()(mod)
mutated_mod['func_692'] = func_692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_693 = relay.var("var_693", dtype = "float32", shape = (288, 1))#candidate|693|(288, 1)|var|float32
func_692_call = mutated_mod.get_global_var('func_692')
call_694 = func_692_call(var_693)
output = call_694
func_695 = relay.Function([var_693], output)
mutated_mod['func_695'] = func_695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1006 = relay.var("var_1006", dtype = "int8", shape = (15, 5, 16))#candidate|1006|(15, 5, 16)|var|int8
var_1007 = relay.var("var_1007", dtype = "int8", shape = (15, 5, 16))#candidate|1007|(15, 5, 16)|var|int8
bop_1008 = relay.multiply(var_1006.astype('int8'), relay.reshape(var_1007.astype('int8'), relay.shape_of(var_1006))) # shape=(15, 5, 16)
uop_1011 = relay.sinh(var_1007.astype('float64')) # shape=(15, 5, 16)
output = relay.Tuple([bop_1008,uop_1011,])
output2 = relay.Tuple([bop_1008,uop_1011,])
func_1027 = relay.Function([var_1006,var_1007,], output)
mod['func_1027'] = func_1027
mod = relay.transform.InferType()(mod)
var_1028 = relay.var("var_1028", dtype = "int8", shape = (15, 5, 16))#candidate|1028|(15, 5, 16)|var|int8
var_1029 = relay.var("var_1029", dtype = "int8", shape = (15, 5, 16))#candidate|1029|(15, 5, 16)|var|int8
output = func_1027(var_1028,var_1029,)
func_1030 = relay.Function([var_1028,var_1029,], output)
mutated_mod['func_1030'] = func_1030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1229 = relay.var("var_1229", dtype = "float64", shape = (2, 10, 12))#candidate|1229|(2, 10, 12)|var|float64
uop_1230 = relay.acos(var_1229.astype('float64')) # shape=(2, 10, 12)
const_1244 = relay.const([[[2.571620,3.678260,-9.553825,7.110551,9.039011,8.556569,-3.529017,0.646387,8.634505,-7.501977,2.155366,-3.886389],[8.708703,-8.391066,-7.227419,0.333189,5.553878,6.224790,-1.989423,-0.167438,-1.931888,4.848079,-3.449603,-3.291603],[0.106869,-9.236542,-0.786381,-6.560364,7.141305,-4.944991,0.558780,9.786641,-4.677938,-9.944914,0.622184,-8.050995],[-3.541718,3.827891,7.302612,8.174952,-1.821712,4.332832,-4.138699,-1.262354,-7.283709,2.940905,-3.349415,-7.187146],[6.267002,9.619475,8.385775,4.519443,7.454018,1.902185,-9.044890,9.854684,-9.775749,2.639834,5.198696,6.294007],[-8.260494,2.916914,4.873478,-2.814768,-1.695227,-7.766526,0.332165,7.113296,-5.946076,9.761985,3.625606,3.149717],[3.107806,-9.630824,-9.053788,-6.233903,8.256729,7.418102,3.523364,6.670027,0.821116,-0.895812,9.821301,2.452918],[-0.934393,-4.323212,7.424676,3.079984,7.210006,1.727406,5.136993,-4.782233,1.889512,-9.094499,4.380127,-2.622670],[1.945307,-5.724609,0.008846,-2.639514,-6.717691,0.964996,-2.902747,4.092997,1.647174,7.976145,-5.857240,0.146668],[1.789179,9.811132,3.548411,7.143257,-1.971585,-9.631578,7.839661,7.649497,9.772076,4.928676,6.531387,6.249600]],[[-9.953049,-9.780891,6.823314,-6.297814,4.025336,8.727308,-9.643616,9.221394,-7.010187,-0.034126,-4.220808,-7.404637],[-0.929961,2.270550,-5.195649,-3.255089,9.664216,1.761376,-9.663254,2.516483,0.970842,2.214844,8.529784,-5.049580],[-4.230480,4.928515,-1.582515,-1.555630,0.844079,5.928158,2.497127,-7.980066,-1.784817,0.140553,-9.870754,-6.284717],[8.391579,6.100826,-4.715025,0.085234,-0.478484,7.612901,-9.383301,9.281263,7.603853,4.692537,5.936981,7.070980],[6.343980,-0.339894,4.479553,-3.749003,-5.870414,6.744767,1.617771,0.074225,4.675791,1.609742,3.438012,8.150624],[7.246091,0.821104,8.553353,-5.701959,0.779703,-1.329739,0.549926,9.416032,-4.920627,-3.896197,4.952191,9.838637],[-3.566376,-8.175678,2.021752,-7.818068,-8.648329,7.522975,-5.830380,3.528310,6.916121,-3.316685,-3.049215,-7.283455],[-0.047518,-3.740816,1.405739,-1.569154,-5.695356,4.220039,-1.875036,-9.383085,0.218735,-6.507985,9.384959,5.219515],[0.576824,8.131714,4.784937,-6.772738,-8.306866,-0.271450,-2.717383,7.940246,4.170970,6.590940,-3.655278,0.338798],[0.591866,9.393360,0.315627,0.814769,-0.895337,-5.225709,1.630031,0.142341,8.468377,1.244969,-1.553137,6.356745]]], dtype = "float64")#candidate|1244|(2, 10, 12)|const|float64
bop_1245 = relay.logical_and(var_1229.astype('bool'), relay.reshape(const_1244.astype('bool'), relay.shape_of(var_1229))) # shape=(2, 10, 12)
bop_1249 = relay.floor_mod(uop_1230.astype('float64'), relay.reshape(var_1229.astype('float64'), relay.shape_of(uop_1230))) # shape=(2, 10, 12)
func_130_call = mod.get_global_var('func_130')
func_133_call = mutated_mod.get_global_var('func_133')
var_1269 = relay.var("var_1269", dtype = "float32", shape = (288,))#candidate|1269|(288,)|var|float32
call_1268 = func_130_call(relay.reshape(var_1269.astype('float32'), [12, 6, 4]))
call_1270 = func_130_call(relay.reshape(var_1269.astype('float32'), [12, 6, 4]))
output = relay.Tuple([bop_1245,bop_1249,call_1268,var_1269,])
output2 = relay.Tuple([bop_1245,bop_1249,call_1270,var_1269,])
func_1277 = relay.Function([var_1229,var_1269,], output)
mod['func_1277'] = func_1277
mod = relay.transform.InferType()(mod)
var_1278 = relay.var("var_1278", dtype = "float64", shape = (2, 10, 12))#candidate|1278|(2, 10, 12)|var|float64
var_1279 = relay.var("var_1279", dtype = "float32", shape = (288,))#candidate|1279|(288,)|var|float32
output = func_1277(var_1278,var_1279,)
func_1280 = relay.Function([var_1278,var_1279,], output)
mutated_mod['func_1280'] = func_1280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1287 = relay.var("var_1287", dtype = "int16", shape = (13, 2, 5))#candidate|1287|(13, 2, 5)|var|int16
const_1288 = relay.const([[[-7,-8,-4,-4,-6],[6,-3,4,3,2]],[[-6,-1,6,3,-1],[9,-9,-1,-5,-3]],[[-4,-8,3,3,-1],[-1,-1,-8,-2,-4]],[[-9,1,3,1,8],[10,3,1,9,2]],[[-10,-8,7,-9,-6],[-2,-9,3,8,9]],[[-7,8,-8,-8,4],[6,4,6,-8,10]],[[9,9,6,9,5],[10,10,6,8,4]],[[1,-7,-5,-6,-9],[9,10,-5,9,2]],[[3,-7,-9,-10,4],[-8,-5,2,7,3]],[[6,-3,9,3,-1],[1,5,4,3,-1]],[[-9,4,4,-2,-5],[7,6,-6,-8,-2]],[[-3,3,-2,-6,-3],[2,7,-6,3,2]],[[-4,9,-10,6,5],[-9,2,8,10,-3]]], dtype = "int16")#candidate|1288|(13, 2, 5)|const|int16
bop_1289 = relay.right_shift(var_1287.astype('int16'), relay.reshape(const_1288.astype('int16'), relay.shape_of(var_1287))) # shape=(13, 2, 5)
func_130_call = mod.get_global_var('func_130')
func_133_call = mutated_mod.get_global_var('func_133')
var_1296 = relay.var("var_1296", dtype = "float32", shape = (8, 36))#candidate|1296|(8, 36)|var|float32
call_1295 = func_130_call(relay.reshape(var_1296.astype('float32'), [12, 6, 4]))
call_1297 = func_130_call(relay.reshape(var_1296.astype('float32'), [12, 6, 4]))
output = relay.Tuple([bop_1289,call_1295,var_1296,])
output2 = relay.Tuple([bop_1289,call_1297,var_1296,])
func_1300 = relay.Function([var_1287,var_1296,], output)
mod['func_1300'] = func_1300
mod = relay.transform.InferType()(mod)
mutated_mod['func_1300'] = func_1300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1300_call = mutated_mod.get_global_var('func_1300')
var_1302 = relay.var("var_1302", dtype = "int16", shape = (13, 2, 5))#candidate|1302|(13, 2, 5)|var|int16
var_1303 = relay.var("var_1303", dtype = "float32", shape = (8, 36))#candidate|1303|(8, 36)|var|float32
call_1301 = func_1300_call(var_1302,var_1303,)
output = call_1301
func_1304 = relay.Function([var_1302,var_1303,], output)
mutated_mod['func_1304'] = func_1304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1489 = relay.var("var_1489", dtype = "int64", shape = ())#candidate|1489|()|var|int64
var_1490 = relay.var("var_1490", dtype = "int64", shape = (9, 1, 10))#candidate|1490|(9, 1, 10)|var|int64
bop_1491 = relay.bitwise_or(var_1489.astype('int64'), var_1490.astype('int64')) # shape=(9, 1, 10)
output = relay.Tuple([bop_1491,])
output2 = relay.Tuple([bop_1491,])
func_1496 = relay.Function([var_1489,var_1490,], output)
mod['func_1496'] = func_1496
mod = relay.transform.InferType()(mod)
var_1497 = relay.var("var_1497", dtype = "int64", shape = ())#candidate|1497|()|var|int64
var_1498 = relay.var("var_1498", dtype = "int64", shape = (9, 1, 10))#candidate|1498|(9, 1, 10)|var|int64
output = func_1496(var_1497,var_1498,)
func_1499 = relay.Function([var_1497,var_1498,], output)
mutated_mod['func_1499'] = func_1499
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1540 = relay.var("var_1540", dtype = "float32", shape = ())#candidate|1540|()|var|float32
var_1541 = relay.var("var_1541", dtype = "float32", shape = (11, 5, 8))#candidate|1541|(11, 5, 8)|var|float32
bop_1542 = relay.floor_divide(var_1540.astype('float32'), var_1541.astype('float32')) # shape=(11, 5, 8)
output = bop_1542
output2 = bop_1542
func_1549 = relay.Function([var_1540,var_1541,], output)
mod['func_1549'] = func_1549
mod = relay.transform.InferType()(mod)
var_1550 = relay.var("var_1550", dtype = "float32", shape = ())#candidate|1550|()|var|float32
var_1551 = relay.var("var_1551", dtype = "float32", shape = (11, 5, 8))#candidate|1551|(11, 5, 8)|var|float32
output = func_1549(var_1550,var_1551,)
func_1552 = relay.Function([var_1550,var_1551,], output)
mutated_mod['func_1552'] = func_1552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1596 = relay.var("var_1596", dtype = "int8", shape = (8, 7, 9))#candidate|1596|(8, 7, 9)|var|int8
const_1597 = relay.const([[[-7,2,-7,-4,-4,9,7,9,4],[6,4,4,4,-6,-7,4,-3,7],[-9,7,4,-7,9,-10,2,4,9],[-5,9,5,8,-9,6,-10,-9,-10],[3,3,-5,-7,-10,-5,1,4,-1],[-8,-8,9,5,3,-8,-6,-2,5],[5,-6,-2,-5,-1,3,-10,1,9]],[[6,-1,9,-1,10,-5,3,-6,-4],[8,-1,10,10,-6,10,5,1,-4],[-5,5,-10,-2,-2,-2,5,8,10],[2,8,5,3,-5,-7,-5,5,10],[2,-10,10,-1,-3,-3,-6,7,2],[5,3,2,-8,2,6,-1,-6,1],[5,3,2,3,2,4,-1,1,-9]],[[-3,9,2,-1,-4,-4,-5,8,6],[-3,-7,-10,-10,2,-6,4,9,7],[3,-4,5,3,-8,-7,10,-5,6],[10,8,-7,2,-4,-7,2,-6,-6],[-6,-10,-9,-1,6,7,-1,8,-8],[2,6,-3,-4,2,3,3,-6,-6],[-10,5,-2,10,7,1,-2,-7,10]],[[1,5,5,5,7,-1,-8,9,6],[4,-5,3,8,2,4,-7,5,2],[10,-8,-9,-2,-1,-8,4,-5,5],[-6,5,-10,9,6,7,-4,5,6],[4,-1,-10,-1,1,3,6,-10,-9],[-10,8,-10,5,-4,9,-4,-5,-5],[-2,-9,-2,10,4,-9,-10,1,4]],[[-3,-9,-9,6,-9,-6,7,-1,-2],[1,-1,4,9,-8,2,-4,-2,3],[-9,-5,-1,1,1,-4,-4,-7,-7],[-4,6,7,-3,4,-1,-7,5,9],[4,-4,1,-10,-1,10,9,-6,-4],[-3,-3,-4,-6,-7,2,-7,-7,1],[-8,-2,7,9,-6,1,8,-10,-2]],[[9,5,7,3,4,-6,7,6,-3],[3,-1,6,2,-5,-7,7,3,4],[-9,-7,-7,8,6,-3,-8,-10,-7],[10,-2,-2,-2,-7,-8,8,-7,10],[7,-6,-3,4,5,-2,-4,-2,7],[-7,10,7,-2,5,9,1,-3,-1],[-8,-2,2,-7,-8,3,4,6,2]],[[4,-8,5,-4,5,5,-8,2,-10],[-5,3,8,9,-5,-6,8,-5,10],[-4,-8,6,7,-8,3,5,5,-1],[3,-6,5,-9,3,9,-4,8,4],[-7,7,9,-3,9,-2,2,-10,-8],[-2,8,-1,-7,-4,8,10,-8,-1],[8,-1,4,7,1,-6,-2,5,2]],[[-9,-4,-7,-10,8,-3,-6,4,9],[-3,6,4,4,-8,8,-9,-10,-1],[-5,-3,8,5,8,1,7,-4,9],[-5,-7,-4,-3,-3,5,-2,-4,7],[-5,-8,-2,-2,3,2,-7,-7,-9],[1,-5,9,-8,-2,9,6,2,9],[-3,2,9,9,10,10,6,-3,6]]], dtype = "int8")#candidate|1597|(8, 7, 9)|const|int8
bop_1598 = relay.not_equal(var_1596.astype('bool'), relay.reshape(const_1597.astype('bool'), relay.shape_of(var_1596))) # shape=(8, 7, 9)
func_130_call = mod.get_global_var('func_130')
func_133_call = mutated_mod.get_global_var('func_133')
const_1626 = relay.const([-1.459601,7.356730,0.180457,3.902033,8.859865,9.090964,-1.465556,9.553031,-5.556968,2.266610,-6.646443,-2.542471,8.269203,1.954874,3.102504,7.757627,3.130328,1.220617,-6.269294,7.296131,-8.881504,2.056467,6.613487,-8.845672,-7.354557,3.854505,5.608897,6.276003,-5.741101,4.057099,-4.284542,8.238583,9.551499,-4.115687,9.045958,1.741302,-9.775793,-8.532255,0.301902,-3.683425,4.827095,-9.567803,9.919172,1.018383,1.211651,-8.739176,0.335951,3.753885,-0.312634,2.307807,5.786275,8.087105,9.425688,-6.061079,-2.113086,5.757654,-8.834461,-6.338249,7.023277,4.151819,-8.132124,-5.490444,8.595405,-8.027947,4.829492,1.040752,-9.807014,9.961041,-4.380438,3.044602,-0.994240,-4.345982,-7.278992,-4.263151,-7.360665,-6.877542,2.893706,3.981278,-5.996340,-6.572753,2.660242,5.331847,0.534789,6.291808,-2.195559,-7.558896,8.102111,5.951325,-5.977698,2.989982,2.608416,4.546013,-9.504454,5.811724,6.367148,9.435816,6.697241,-1.942086,7.305548,-2.190989,-8.782238,-3.013660,-4.783824,-3.943031,7.158181,7.107360,5.930641,-9.470523,1.334292,4.499460,4.393237,2.339489,0.330269,5.148534,-9.331142,-4.790621,7.893494,-8.079907,-4.584001,-2.644752,8.621576,-2.478417,-2.224451,-7.673554,-1.940805,-1.943510,-3.666839,-4.230044,-6.980121,-9.713972,5.583691,7.968404,8.380746,-8.085868,-4.358184,-1.719709,0.973458,0.613875,7.383584,1.414950,8.213281,8.643431,-6.071789,8.282792,-4.675388,4.902182,-5.043987,-8.839564,-0.068585,7.516229,0.479183,-7.330447,-8.044167,-2.764618,-0.124881,6.921458,-8.850649,6.865820,-6.766191,5.791291,7.525473,-9.145872,6.637241,1.677946,-9.880213,8.829773,-2.451661,-0.367219,2.903131,-9.929136,-7.017298,0.056721,4.278405,4.546942,0.084455,-0.915700,8.522214,-0.869337,6.837093,8.538801,-9.018210,7.072045,-9.141857,2.280222,-1.776825,2.377151,9.160109,1.552480,-4.947183,-6.534082,6.658911,-8.502626,4.409145,-9.968348,-5.603915,-8.426642,-2.603849,-6.994729,7.332965,-5.187470,2.856152,9.459738,-4.773733,6.226703,5.169706,-7.247592,-9.398453,-5.858311,5.371982,-9.559504,-1.006390,-2.349123,-7.496515,9.715426,-3.537711,-7.420851,-6.634850,-6.228372,-3.183229,3.114256,3.085845,6.915367,-7.654882,7.585619,-7.885009,7.582672,5.127667,9.930406,-0.424251,2.063118,-7.002092,5.094281,3.393035,3.593677,2.189782,-6.444915,-3.004814,4.247547,3.098812,-1.903519,-0.580752,-3.059219,3.742177,-2.001779,-4.972512,-8.499663,9.667616,4.882975,6.574263,-7.704195,0.370487,4.037757,-9.344416,-2.073493,2.460066,0.499071,8.769476,6.295975,1.447866,-0.659448,-4.729469,-7.382322,-4.605085,-5.194630,-1.583663,8.927491,3.923396,4.167096,2.947579,6.792582,-1.650962,-7.665048,-6.224446,-0.766962,4.248058,-0.140904,0.996583,0.903090,-9.930409,7.910661,2.202655,5.433690,8.664641,-3.666518,-5.644788,-6.790074,7.772981,-5.675779], dtype = "float32")#candidate|1626|(288,)|const|float32
call_1625 = func_130_call(relay.reshape(const_1626.astype('float32'), [12, 6, 4]))
call_1627 = func_130_call(relay.reshape(const_1626.astype('float32'), [12, 6, 4]))
uop_1628 = relay.log2(const_1597.astype('float64')) # shape=(8, 7, 9)
uop_1632 = relay.erf(uop_1628.astype('float32')) # shape=(8, 7, 9)
output = relay.Tuple([bop_1598,call_1625,const_1626,uop_1632,])
output2 = relay.Tuple([bop_1598,call_1627,const_1626,uop_1632,])
func_1639 = relay.Function([var_1596,], output)
mod['func_1639'] = func_1639
mod = relay.transform.InferType()(mod)
mutated_mod['func_1639'] = func_1639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1640 = relay.var("var_1640", dtype = "int8", shape = (8, 7, 9))#candidate|1640|(8, 7, 9)|var|int8
func_1639_call = mutated_mod.get_global_var('func_1639')
call_1641 = func_1639_call(var_1640)
output = call_1641
func_1642 = relay.Function([var_1640], output)
mutated_mod['func_1642'] = func_1642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1810 = relay.var("var_1810", dtype = "float64", shape = (1, 14, 11))#candidate|1810|(1, 14, 11)|var|float64
uop_1811 = relay.rsqrt(var_1810.astype('float64')) # shape=(1, 14, 11)
func_1300_call = mod.get_global_var('func_1300')
func_1304_call = mutated_mod.get_global_var('func_1304')
const_1818 = relay.const([-9,-3,-4,8,-1,-3,-1,-4,5,-4,1,-9,5,-10,-9,4,-9,1,-5,5,-3,4,5,5,-6,-6,9,7,-1,8,8,-7,8,-2,9,1,-8,-8,-3,-3,-1,5,4,-3,-10,4,2,9,-1,3,10,2,6,-3,4,-7,6,-5,7,5,9,-5,5,9,5,-8,5,-5,1,-10,-5,-9,3,1,-10,-5,-10,-1,6,-2,1,8,-9,7,-2,-4,7,7,-5,-8,-7,-7,-5,1,-8,4,5,7,6,6,4,4,3,-9,-2,-7,-10,-5,3,-6,-2,-2,4,-1,-5,8,-4,9,6,8,-5,-8,-9,1,10,3,-10,7,4,4], dtype = "int16")#candidate|1818|(130,)|const|int16
var_1819 = relay.var("var_1819", dtype = "float32", shape = (288,))#candidate|1819|(288,)|var|float32
call_1817 = relay.TupleGetItem(func_1300_call(relay.reshape(const_1818.astype('int16'), [13, 2, 5]), relay.reshape(var_1819.astype('float32'), [8, 36]), ), 0)
call_1820 = relay.TupleGetItem(func_1304_call(relay.reshape(const_1818.astype('int16'), [13, 2, 5]), relay.reshape(var_1819.astype('float32'), [8, 36]), ), 0)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
const_1822 = relay.const([2.468051,-6.559027,7.577093,-0.964273,-8.357974,2.629690,-7.097086,9.461933,-6.431040,-5.442017,-0.870929,9.881091,8.941032,3.036957,8.799204,2.226294,6.310193,-9.992201,-7.281639,8.132417,-4.854011,-7.931423,0.313128,-8.635684,-2.481105,-4.830028,8.463039,-1.266555,8.832044,4.746505,-3.654656,8.386574,-0.154032,-2.389722,1.658828,0.262459,1.810616,-6.980233,7.023308,-4.327646,7.608908,-5.494886,-2.930840,8.717406,-4.197470,-2.042289,3.999874,-8.041183,0.296081,2.264502,9.552387,5.718530,-8.415311,2.639701,-0.234737,3.972856,8.224300,-5.507996,-1.098734,2.915863,-3.615262,0.110645,6.360760,7.605406,-1.200919,1.994926,2.368413,-2.883211,-3.460225,9.483483,-4.707213,1.580205,-6.894449,1.532155,1.358660,0.132629,8.428623,-6.350776,-4.373020,4.148485,-6.801454,-9.207994,6.847971,9.408712,7.479011,-6.509112,3.733459,2.016905,6.074223,-2.017113,1.045073,-1.658808,-3.275467,7.938915,-0.582223,6.909050,-0.791482,-8.647960,2.160982,0.829986,-4.360722,-9.566040,2.087445,7.460010,-4.804134,-5.595138,8.085697,-6.299562,2.162725,8.300477,4.908650,-0.936883,-6.698054,1.369455,-6.905969,-8.010350,0.670171,-2.013889,-5.049488,2.877160,5.369502,-3.588059,2.314371,-2.256442,0.366245,-1.650179,-4.051375,-9.870045,-1.734102,-6.795395,-2.145695,6.805127,6.491228,1.109945,-6.290259,7.689380,-8.518112,-6.014804,-9.276410,-2.327230,-7.659296,-8.562504,5.808513,-7.799107,7.152990,-1.317520,1.019330,8.603043,1.437134,0.342242,9.786670,9.424549,-0.235224,4.974613,-3.775850,-8.095001,2.287712,4.958242,2.956346,-5.458793,4.105675,4.394250,-3.383674,7.991647,4.925391,3.718484,0.285270,-3.317973,3.026849,4.479207,8.104370,-7.024692,-7.801145,4.564735,7.341736,-6.464544,-4.757787,-9.724067,-9.443764,-2.490130,-7.232691,9.628067,-1.207143,6.930001,7.908350,1.863720,6.202879,0.668956,8.932660,4.779131,-4.561286,2.729616,4.084005,-1.122977,-5.815210,0.027603,-4.596125,-8.391200,-9.186874,-3.600785,-7.106321,-3.592579,-8.179038,-8.367511,-0.688234,-4.226950,0.722532,8.830887,9.212858,6.071733,-0.357460,-8.871243,3.166038,7.406351,2.896767,1.647110,6.396311,0.871023,-2.581273,-5.630884,7.813439,6.359368,-7.075196,-3.365823,-7.619380,2.491574,-0.370533,-1.803744,9.669911,-0.425595,1.663225,-7.515265,2.618408,-9.344225,0.291065,3.398062,-6.895455,-3.761972,6.982865,-5.143984,-9.094056,2.359274,-9.841210,-5.567424,4.770997,-0.889024,-5.869968,-1.427278,-4.154718,1.361259,4.559651,-9.063066,-2.107807,-2.146721,5.447415,8.641530,7.728074,2.682565,-7.147903,3.638781,-4.985114,4.831771,-0.087211,-1.716348,-6.122307,1.771557,-0.853845,6.287238,-9.551294,3.168322,4.981945,0.058801,0.825606,-8.074319,-4.771447,3.053027,4.333490,5.263807,-5.161306,-0.563431,-7.985998,-5.100137,4.004545,4.392364,-9.937818,-8.980146,1.226832,-4.733189,-4.845456,3.789432,-5.055101,8.681751,2.920569,1.284560,-5.572812,-3.842366,6.472695,-0.082391,7.398396,-6.675441,-1.144648,3.230501,-2.638414,-1.132243,-9.349279,0.520737,-5.244204,-9.436301,-4.993366,-0.854430,3.945253,8.384209,2.500142,2.400155,9.297826,-2.910279,-9.420791,5.479282,6.244896,1.740566,3.627421,-9.979793,8.538628,6.274364,4.744652,7.345627,0.324579,5.119189,-1.906576,4.221898,6.310109,2.665293,0.150538,-2.279121,-7.501865,-6.734289,4.876673,3.589062,3.408927,-3.158608,-9.524520,2.116791,-7.264432,7.435395,6.328380,-2.381011,-8.132206,0.457707,-4.910392,4.714114,5.719423,3.623055,-2.582455,-2.972328,1.716680,-6.191073,-5.068510,9.603007,2.055971,9.057117,3.970253,0.524041,6.945992,7.395756,-9.506888,-1.532783,-7.372561,-4.986261,-5.700972,-6.696661,2.664702,-4.931139,-5.102306,-0.827501,-1.971815,1.422908,5.911081,6.022498,1.386760,5.579964,1.909697,1.016697,6.069923,2.325621,-1.271519,7.145070,-5.971965,9.336371,-7.222870,-4.140136,4.264970,-5.114979,-5.837794,8.257163,3.889235,-1.229662,-5.004147,-2.789974,4.057029,-8.584591,-4.602162,-8.567396,0.278093,8.094960,1.224874,-4.271821,4.208291,-5.421311,-5.810223,7.704202,-9.560279,7.411707,-8.259345,-9.711921,9.925256,7.644772,-1.659460,-5.044138,-1.895599,7.021519,-8.785492,-9.361955,5.493363,6.344000,5.140472,9.896882,-5.846201,-3.711450,-4.596173,7.768063,8.389093,4.770864,-1.335692,5.602604,-9.980408,-8.701340,-0.695529,-4.816085,2.677336,-6.613001,1.079345,-1.911853,-2.594777,-2.830107,0.220559,-6.135141,-5.152946,3.459489,1.512997,9.617928,8.125216,-8.097554,5.297356,2.608876,2.994351,0.909833,6.083214,-2.608937,-4.175044,5.482880,-1.117354,6.683924,3.835229,5.404043,1.901739,-8.332312,7.522271,3.824267,-3.110906,2.488644,-1.706359,-9.743690,4.465542,1.291385,6.217714,0.136811,-3.064488,-4.375235,5.334751,-3.061220,4.792609,-8.360272,-3.409147,9.453348,-3.724458,-5.073559,6.160282,6.720978,6.270539,-6.985542,7.888362,1.965487,-9.284777,4.202514,0.854196,9.683894,6.931903,0.370036,2.310755,-2.731453,-2.076395,-4.867048,1.591009,-5.328019,-5.823894,4.944471,-3.747146,0.804514,-1.368866,3.183909,-5.207078,-6.036688,-8.219343,3.577083,-4.378776,3.546244,-8.682864,-0.477858,5.521467,5.395585,-8.760068,8.048940,5.781762,4.440234,-7.931745,3.560622,8.984404,-0.276976,-1.368447,6.528328,9.786141,3.552475,-9.144001,7.796146,-8.005041,1.541497,9.274073,8.851475,5.791511,-3.501192,5.595787,7.245537,-0.028113,-6.622988,9.008152,2.194484,4.240754,8.550692,3.127927,3.005157,3.937796,-4.209468,-4.519000,3.266040,-9.193004,4.589589,2.746516,8.166510,-2.899473,-4.589737,8.367161,-9.858824,-8.032776,1.640200,-1.750513,2.145979,8.532240,-3.416760,-5.349472,-9.289451,7.942819,-7.668573,-1.807036,-8.126332,-1.829066,-2.909374,2.358420,-8.864812,-8.605651,9.242222,-7.192911,-5.798758,-9.393538,0.052826,-0.572596,0.374177,4.894699,7.311654,6.127035,-3.077697,-4.075150,-7.829623,1.694869,-7.211077,-5.989457,-2.446260,-0.179786,-5.459064,5.064068,6.818559,8.699988,-5.800376,7.712490,-0.515393,3.946000,-8.320537,-7.164415,0.469143,5.519334,5.030668,5.006778,-2.896146,1.309444,-2.341800,8.283654,-3.506567,3.771083,4.363696,-5.183444,0.577960,0.988258,-6.438431,-8.868094,5.855888,9.146494,4.666078,4.105488,-0.332984,6.419689,8.473431,4.980811,5.056359,-1.740144,5.018251,7.579053,9.448200,-3.021707,-8.199613,1.230914,-2.601541,-8.271529,-8.128035,2.237460,-9.517049,8.651559,4.580565,-1.755071,2.113269,-5.176014,5.414102,-1.598186,-1.527388,-6.649707,6.467848,-3.959019,-6.135428,-6.990460,-6.972832,-2.333442,-9.205135,9.473479,-9.206555,-7.802042,-0.554097,-3.796384,-8.859952,-0.318664,5.707839,9.825338,8.993874,-8.652074,5.463324,-4.404207,-8.578612,-5.643498,-4.937873,1.818718,9.471804,5.709053,-0.095813,-4.617371,-2.510685,3.864549,1.128246,-7.801024,-4.299596,0.835005,8.797656,-5.525212,-1.401762,-2.785831,-8.911201,1.197222,-3.709904,7.117899,-2.301722,9.450988,0.725543,-4.186808,-9.848168,7.952199,0.431263,-4.339870,-0.656293,-9.355128,1.210104,8.750635,-8.061616,-1.757108,9.455624,3.175301,9.634402,-1.717567,3.595369,3.419735,-5.587530,6.079448,2.902756,-1.390218,-7.587873,-7.757210,-3.748552,1.856841,-6.594579,9.276926,9.858275,3.721772,2.005415,2.990574,-0.943743,-4.151777,6.215147,-4.090943,0.320653,-6.491090,-6.868020,-9.138183,6.531733,6.286789,4.816518,5.941703,-4.361591,2.126915,2.813619,-6.582076,9.760695,-2.810575,-6.711233,-2.499226,9.566672,1.719806,3.941184,-1.060438,8.139270,2.846546,-6.358441,-0.078199,3.310775,6.919410,-2.657171,1.352466,-6.370461,6.187975,-6.827954,5.841447,-9.442761,2.468346,-3.439986,-7.917471,-8.849693,-6.195689,0.314502,3.786747,-4.873147,5.434262,-9.071963,-3.527774,-3.787176,-8.888289,4.586990,-3.131338,-6.771941,-5.260608,-4.499439,5.106729,-8.573247,7.049292,-7.299634,-3.305554,0.389137,3.746556,-6.479191,5.086883,9.642415,-5.900659,8.521181,4.253837,-7.489470,-2.920428,-2.787527,6.719498,2.628223,-7.602236,7.549769,-7.085200,-8.536419,4.146335,1.812943,6.945187,-6.910460,-9.198347,9.010680,4.777197,3.489354,-1.884073,8.450347,-1.024273,-3.998372,-5.669558,9.386123,0.105686,3.746950,5.258492,0.378860,6.201403,-7.174084,7.238957,1.733806,7.406207,-7.755608,5.533783,-0.404184,-9.373571,-2.101328,-9.798252,6.652307,-8.240378,-9.214500,1.744488,-9.459715,7.691707,-4.537584,-4.303158,-9.815760,-2.578500,7.780352,-9.765079,3.030601,7.113623,-2.564338,-6.771071,0.744051,-7.701074,-1.803852,8.875579,-0.325922,1.635569,8.776491,7.616533,1.756201,-6.023810,7.019158,-9.728879,8.536022,-7.575980,-4.841412,5.340024,8.428720,5.728212,0.075986,1.973857,-8.004155,9.653629,-6.472547,4.561864,-1.869797,2.773809,-0.919345,8.877023,0.879535,4.024304,-3.119632,4.530276,-8.295949,3.071738,1.187505,-4.464390,6.373738,6.444459,-9.609326,0.968978,-7.652708,-9.971706,4.257021,-2.350992,3.612053,-8.511353,-1.881779,-7.053543,-5.744303,-8.000899,-3.818569,9.728554,-9.020568,4.528653,8.785903,-5.788133,7.968143,3.016595,-7.095113,6.914470,2.736506,9.421835,7.981118,3.027946,8.502061,5.048910,-9.388012,9.124847,5.994437,8.541785,0.504786,-0.796752,-2.077287,9.223843,8.717343,-6.354085,-1.510987,-4.202284,6.818922,-8.523703,-5.546634,-4.801400,-3.500857,8.616464,5.753782,2.609424,-8.163624,3.089437,1.863776,4.186887,-7.968088,6.304655,2.676011,-5.824595,1.720559,6.895107,7.974127,-5.919029,2.596472,5.636756,-9.168134,-6.759263,8.983414,1.376082,-9.374018,7.857425,1.565771,-5.158916,4.379408,2.212539,9.141873,-4.569823,0.979543,-8.129776,-1.707965,2.100520,-2.846252,-7.975027,3.942741,-0.885659,-1.017713,-2.982021,0.386481,3.656328,-2.507324,7.256310,4.661361,-5.174276,6.839782,-9.466788,-9.352987,-2.303140,5.558745,-9.476916,4.935313,-9.564727,4.041936,1.072206,9.012930,6.662842,5.726917,1.247770,-3.138298,5.219744,4.011233,2.650134,0.529196,-9.433226,-6.717404,-6.966898,-5.205582,-2.878599,6.204688,-4.529501,-6.749098,-1.692311,-3.555447,-7.530531,5.036457,-9.652283,3.076829,0.581504,-1.992305,5.339647,-6.589542,-4.911414,8.793619,-0.372857,-5.439324,1.989126,-3.860006,-1.684625,-7.183202,8.346844,7.554874,-7.887921,-6.052428,2.645525,6.805511,0.946099,-5.232401,-8.344595,-7.694404,2.284057,4.326106,3.739426,-4.013765,3.459404,7.579281,2.614051,-6.646449,3.314908,4.203445,5.820029,-1.572117,-8.891219,-3.493447,-3.836677,-8.671805,1.753013,-0.513544,5.447076,2.214556,8.799690,-6.502188,0.973911,-2.197738,6.765468,8.841883,9.184487,8.302452,1.966350,-4.262124,0.234838,6.415560,1.236620,4.211059,-5.076137,4.764518,4.719210,-2.903659,-5.106625,-3.397638,-6.925474,5.934495,0.590056,-3.075572,-7.518014,-5.248613,0.128308,8.336354,4.458646,8.948083,9.089314,-5.309812,-8.640731,8.788249,7.258838,-2.191422,3.618736,0.227514], dtype = "float32")#candidate|1822|(1092,)|const|float32
call_1821 = func_109_call(relay.reshape(const_1822.astype('float32'), [12, 7, 13]))
call_1823 = func_109_call(relay.reshape(const_1822.astype('float32'), [12, 7, 13]))
var_1828 = relay.var("var_1828", dtype = "float64", shape = (4, 14, 11))#candidate|1828|(4, 14, 11)|var|float64
bop_1829 = relay.minimum(uop_1811.astype('float64'), var_1828.astype('float64')) # shape=(4, 14, 11)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
call_1839 = func_109_call(relay.reshape(const_1822.astype('float32'), [12, 7, 13]))
call_1840 = func_109_call(relay.reshape(const_1822.astype('float32'), [12, 7, 13]))
output = relay.Tuple([call_1817,const_1818,var_1819,call_1821,const_1822,bop_1829,call_1839,])
output2 = relay.Tuple([call_1820,const_1818,var_1819,call_1823,const_1822,bop_1829,call_1840,])
func_1844 = relay.Function([var_1810,var_1819,var_1828,], output)
mod['func_1844'] = func_1844
mod = relay.transform.InferType()(mod)
mutated_mod['func_1844'] = func_1844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mutated_mod.get_global_var('func_1844')
var_1846 = relay.var("var_1846", dtype = "float64", shape = (1, 14, 11))#candidate|1846|(1, 14, 11)|var|float64
var_1847 = relay.var("var_1847", dtype = "float32", shape = (288,))#candidate|1847|(288,)|var|float32
var_1848 = relay.var("var_1848", dtype = "float64", shape = (4, 14, 11))#candidate|1848|(4, 14, 11)|var|float64
call_1845 = func_1844_call(var_1846,var_1847,var_1848,)
output = call_1845
func_1849 = relay.Function([var_1846,var_1847,var_1848,], output)
mutated_mod['func_1849'] = func_1849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1976 = relay.var("var_1976", dtype = "uint8", shape = (10, 4, 4))#candidate|1976|(10, 4, 4)|var|uint8
var_1977 = relay.var("var_1977", dtype = "uint8", shape = (10, 4, 4))#candidate|1977|(10, 4, 4)|var|uint8
bop_1978 = relay.bitwise_xor(var_1976.astype('uint8'), relay.reshape(var_1977.astype('uint8'), relay.shape_of(var_1976))) # shape=(10, 4, 4)
bop_1981 = relay.not_equal(bop_1978.astype('bool'), relay.reshape(var_1977.astype('bool'), relay.shape_of(bop_1978))) # shape=(10, 4, 4)
uop_1987 = relay.asinh(var_1976.astype('float64')) # shape=(10, 4, 4)
uop_1989 = relay.acosh(var_1977.astype('float32')) # shape=(10, 4, 4)
output = relay.Tuple([bop_1981,uop_1987,uop_1989,])
output2 = relay.Tuple([bop_1981,uop_1987,uop_1989,])
func_1996 = relay.Function([var_1976,var_1977,], output)
mod['func_1996'] = func_1996
mod = relay.transform.InferType()(mod)
var_1997 = relay.var("var_1997", dtype = "uint8", shape = (10, 4, 4))#candidate|1997|(10, 4, 4)|var|uint8
var_1998 = relay.var("var_1998", dtype = "uint8", shape = (10, 4, 4))#candidate|1998|(10, 4, 4)|var|uint8
output = func_1996(var_1997,var_1998,)
func_1999 = relay.Function([var_1997,var_1998,], output)
mutated_mod['func_1999'] = func_1999
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2033 = relay.const([[[-4.358531,-0.307099,-7.878121,-8.167343,-0.438347],[9.529648,7.071002,8.875989,7.009881,-5.631516],[-1.076325,-9.736962,-0.254266,-5.668466,0.338681],[4.373591,2.434815,0.428432,-1.790351,-7.892635]],[[5.083838,-1.824480,5.606682,7.849128,-8.377315],[-8.422816,-4.800149,8.260232,2.321918,-2.169019],[6.592855,-7.363148,2.656976,0.330179,1.332513],[-0.734229,8.804221,7.049900,-1.010923,6.606909]],[[5.999405,-5.141396,-7.630748,-1.766913,1.780004],[-7.986642,-5.594329,8.871446,-9.496357,-9.718771],[-2.614111,2.012017,0.349945,-0.113720,6.218996],[8.667709,0.902584,-5.966564,7.091450,2.232840]],[[0.323448,1.501322,-2.451171,-2.692845,4.947238],[-0.005243,3.094676,-1.240068,0.617091,8.895292],[-3.842470,0.804987,-9.950741,-1.568950,-0.402226],[-1.078612,5.586808,-8.785414,-9.996668,0.324514]],[[7.439801,2.016308,6.397708,2.509927,-5.499025],[8.003140,7.350866,-3.405617,-3.179140,8.715232],[-1.711793,-6.194321,-8.916820,5.117711,4.690268],[-2.704071,-5.548314,-6.653172,5.563709,-1.958801]]], dtype = "float32")#candidate|2033|(5, 4, 5)|const|float32
uop_2034 = relay.sigmoid(const_2033.astype('float32')) # shape=(5, 4, 5)
bop_2039 = relay.floor_mod(uop_2034.astype('float64'), relay.reshape(const_2033.astype('float64'), relay.shape_of(uop_2034))) # shape=(5, 4, 5)
uop_2048 = relay.atan(const_2033.astype('float64')) # shape=(5, 4, 5)
uop_2053 = relay.acos(const_2033.astype('float64')) # shape=(5, 4, 5)
func_1549_call = mod.get_global_var('func_1549')
func_1552_call = mutated_mod.get_global_var('func_1552')
var_2056 = relay.var("var_2056", dtype = "float32", shape = ())#candidate|2056|()|var|float32
var_2057 = relay.var("var_2057", dtype = "float32", shape = (440, 1))#candidate|2057|(440, 1)|var|float32
call_2055 = func_1549_call(relay.reshape(var_2056.astype('float32'), []), relay.reshape(var_2057.astype('float32'), [11, 5, 8]), )
call_2058 = func_1549_call(relay.reshape(var_2056.astype('float32'), []), relay.reshape(var_2057.astype('float32'), [11, 5, 8]), )
output = relay.Tuple([bop_2039,uop_2048,uop_2053,call_2055,var_2056,var_2057,])
output2 = relay.Tuple([bop_2039,uop_2048,uop_2053,call_2058,var_2056,var_2057,])
func_2059 = relay.Function([var_2056,var_2057,], output)
mod['func_2059'] = func_2059
mod = relay.transform.InferType()(mod)
mutated_mod['func_2059'] = func_2059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2059_call = mutated_mod.get_global_var('func_2059')
var_2061 = relay.var("var_2061", dtype = "float32", shape = ())#candidate|2061|()|var|float32
var_2062 = relay.var("var_2062", dtype = "float32", shape = (440, 1))#candidate|2062|(440, 1)|var|float32
call_2060 = func_2059_call(var_2061,var_2062,)
output = call_2060
func_2063 = relay.Function([var_2061,var_2062,], output)
mutated_mod['func_2063'] = func_2063
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2399 = relay.var("var_2399", dtype = "int32", shape = (15, 15, 7))#candidate|2399|(15, 15, 7)|var|int32
var_2400 = relay.var("var_2400", dtype = "int32", shape = (15, 15, 7))#candidate|2400|(15, 15, 7)|var|int32
bop_2401 = relay.minimum(var_2399.astype('int32'), relay.reshape(var_2400.astype('int32'), relay.shape_of(var_2399))) # shape=(15, 15, 7)
bop_2405 = relay.maximum(bop_2401.astype('uint64'), relay.reshape(var_2399.astype('uint64'), relay.shape_of(bop_2401))) # shape=(15, 15, 7)
func_1996_call = mod.get_global_var('func_1996')
func_1999_call = mutated_mod.get_global_var('func_1999')
const_2411 = relay.const([-6,-8,1,3,-7,-9,9,-7,3,7,-9,10,-3,-6,-3,7,-4,-2,-9,8,-3,-2,-2,-7,3,3,-3,3,9,2,-10,3,2,-6,2,10,2,6,-2,-9,1,7,4,-9,3,6,10,7,7,-4,9,4,7,5,7,4,-7,-1,5,5,1,3,-3,3,4,-8,-5,-6,6,-2,7,-10,-1,5,-1,5,-2,-3,-9,-4,8,-5,8,-5,-5,7,5,6,8,-3,2,3,8,-10,6,9,-7,7,8,-10,-1,4,-4,-3,4,5,5,1,-6,8,6,-6,-4,10,6,-4,7,-4,-2,5,-2,1,6,1,-4,4,8,5,-2,3,-5,5,-7,-2,4,5,6,7,8,6,9,-4,-9,-9,3,6,-1,9,10,6,-7,-1,-7,-6,6,-6,3,4,-8,10], dtype = "uint8")#candidate|2411|(160,)|const|uint8
call_2410 = relay.TupleGetItem(func_1996_call(relay.reshape(const_2411.astype('uint8'), [10, 4, 4]), relay.reshape(const_2411.astype('uint8'), [10, 4, 4]), ), 1)
call_2412 = relay.TupleGetItem(func_1999_call(relay.reshape(const_2411.astype('uint8'), [10, 4, 4]), relay.reshape(const_2411.astype('uint8'), [10, 4, 4]), ), 1)
uop_2422 = relay.atan(var_2400.astype('float64')) # shape=(15, 15, 7)
func_1300_call = mod.get_global_var('func_1300')
func_1304_call = mutated_mod.get_global_var('func_1304')
const_2425 = relay.const([9,9,1,-9,3,-5,-10,4,-9,10,-7,5,6,9,3,-4,-9,10,-10,2,2,-8,-4,8,5,7,5,-9,7,-8,3,-5,-6,2,-3,-1,2,7,-2,-9,5,10,-6,-10,9,5,1,-6,-4,-2,3,-2,-3,-10,4,-1,-5,-10,9,6,-7,2,1,-2,6,-4,7,5,6,6,-7,10,9,-3,-9,8,9,3,-6,7,-1,3,8,2,3,4,5,2,-2,-2,-5,7,8,6,-9,8,-5,-9,-6,4,9,1,-2,7,9,4,-8,8,5,2,6,-3,8,3,-5,7,-5,-5,3,-2,1,-6,9,9,-9,-7,10,7,3,5], dtype = "int16")#candidate|2425|(130,)|const|int16
const_2426 = relay.const([4.412887,3.261981,9.450276,7.982907,-4.915746,3.540149,-3.069272,5.613720,-2.966571,-9.855325,9.772962,-3.447577,-0.358328,3.281781,-8.570607,-0.493844,1.975408,5.025213,2.817546,0.795141,-1.771971,-3.255197,9.441659,4.935337,-3.059272,-1.214199,1.725300,-4.805533,-3.731600,0.579522,1.126610,0.844706,5.860546,7.383151,2.069408,-0.065660,-7.219312,-6.952220,-5.007508,7.475437,-0.581323,1.638027,-1.326267,0.849515,8.445397,-6.014282,-7.293698,-5.469368,-3.260989,-6.784561,-9.253555,3.097226,0.656806,6.759952,3.279645,-7.130072,-1.710676,-2.161659,4.191609,8.219476,-2.135893,-5.373444,0.631757,7.720885,-2.907125,-8.922630,-7.352159,6.308446,3.845843,-7.242658,-6.790579,-3.354613,-4.167599,4.376802,-3.262260,-4.778382,-1.240802,3.203478,7.064948,0.354871,-5.731754,4.809951,-2.394228,-5.416707,1.386242,-9.024160,8.504371,-4.202492,3.784183,-6.880154,-1.143335,4.133401,4.869761,4.271451,3.939995,-1.298618,-5.662428,-5.199608,3.778304,-6.254780,2.632449,-8.438402,-3.308757,-6.280585,-7.622655,0.968337,-4.956147,-3.119573,-6.889395,-7.652498,-9.886049,5.103685,-8.596873,2.506998,5.484362,-8.845133,9.647733,1.642987,7.434709,0.228820,-1.321145,8.142623,8.054404,-2.947754,5.520620,1.572371,-1.893848,-3.753077,3.425750,-7.989064,0.126481,2.721996,8.502164,-7.710505,8.731380,-8.990106,2.303830,-3.081795,8.792546,-9.972154,7.238329,2.544077,-0.149339,1.145112,9.549564,-5.658321,-6.107771,6.041882,8.817996,0.714799,-1.130508,-4.455156,6.101844,-0.348015,-6.529238,5.169631,9.588435,0.195205,-7.222828,7.275660,-5.353515,-5.656272,4.726425,-8.624335,-9.040758,5.250524,9.152385,-6.754347,-1.223325,-7.062726,9.525641,9.463796,-2.362934,-4.759224,9.322155,-7.438096,-6.305619,-7.817709,2.156665,-5.043752,-6.083021,-6.508104,0.768993,-1.535940,7.176082,-9.811981,-7.316586,0.514969,-5.277344,9.349798,1.241145,6.784232,9.831269,-9.837126,-9.557209,-4.610563,-6.049794,2.870193,7.353268,-8.507495,-8.040071,4.802591,-0.067546,5.154178,-0.246093,-9.201799,-3.722707,1.546806,5.286181,-4.105014,-2.886469,6.858150,1.511131,8.049756,-6.751441,-5.007216,-3.156763,-8.362230,-9.162811,-4.919361,-7.550557,8.521380,-6.924323,-6.102705,-3.783738,-4.677201,8.345939,7.016959,-6.851689,5.230196,-5.389859,1.745269,7.157935,1.114522,7.834496,3.388077,-6.843898,-3.842482,5.179178,8.144990,-8.543120,6.152972,6.428494,-1.664321,3.071547,-6.512001,3.092915,-3.738101,0.226029,3.618867,7.310125,1.018630,8.232928,4.570014,-6.045066,-2.977419,-1.221291,9.158750,-7.624703,3.567956,4.524618,-0.198943,1.731692,-4.337425,-4.161858,1.880352,-0.455854,-3.486995,-2.830915,-5.182215,-5.194377,5.690696,-8.344549,-4.998596,0.758282,-0.302948,7.904476,9.087305,-7.007699,-8.344042,3.251321,-9.453333,-9.442271,8.831321,-8.453503,8.654787,-0.715054,2.746333], dtype = "float32")#candidate|2426|(288,)|const|float32
call_2424 = relay.TupleGetItem(func_1300_call(relay.reshape(const_2425.astype('int16'), [13, 2, 5]), relay.reshape(const_2426.astype('float32'), [8, 36]), ), 1)
call_2427 = relay.TupleGetItem(func_1304_call(relay.reshape(const_2425.astype('int16'), [13, 2, 5]), relay.reshape(const_2426.astype('float32'), [8, 36]), ), 1)
output = relay.Tuple([bop_2405,call_2410,const_2411,uop_2422,call_2424,const_2425,const_2426,])
output2 = relay.Tuple([bop_2405,call_2412,const_2411,uop_2422,call_2427,const_2425,const_2426,])
func_2436 = relay.Function([var_2399,var_2400,], output)
mod['func_2436'] = func_2436
mod = relay.transform.InferType()(mod)
mutated_mod['func_2436'] = func_2436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2436_call = mutated_mod.get_global_var('func_2436')
var_2438 = relay.var("var_2438", dtype = "int32", shape = (15, 15, 7))#candidate|2438|(15, 15, 7)|var|int32
var_2439 = relay.var("var_2439", dtype = "int32", shape = (15, 15, 7))#candidate|2439|(15, 15, 7)|var|int32
call_2437 = func_2436_call(var_2438,var_2439,)
output = call_2437
func_2440 = relay.Function([var_2438,var_2439,], output)
mutated_mod['func_2440'] = func_2440
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2469 = relay.const([[[2.662217,-2.183416,-0.274023,-8.142289,3.893516,7.230438,6.772202,4.965786,-7.916625,-0.657419],[5.238810,1.007033,8.448130,-8.375034,-0.915711,4.599508,6.530510,0.857601,-9.171433,-3.134293],[-7.107648,8.101117,-5.073761,1.817215,-4.192531,-9.548790,-0.546959,8.976412,8.622794,-1.161021],[9.961468,8.227900,1.114159,-2.468273,-4.935990,-6.200299,-9.741642,-2.192073,-4.033049,5.485651],[3.244875,-0.878729,1.521995,8.178389,2.860815,6.155203,5.190311,2.258863,1.655746,-2.714014]],[[3.482921,6.331662,-0.009557,-0.592937,5.588119,0.208525,8.967071,7.191600,1.046503,7.117902],[-6.759665,6.860848,0.444480,-1.462860,-1.874197,-1.817016,6.906703,4.176913,0.088084,-2.687902],[-1.254849,6.974402,2.450621,-8.712145,-4.062663,3.819909,-6.777960,-2.424360,-9.355745,1.554063],[-6.150392,-7.591742,4.098387,1.755449,8.939112,0.320083,-9.760763,3.198612,9.010414,-0.376932],[-2.039609,-4.647737,0.332109,-5.105461,-3.826583,-4.754715,-2.498010,-7.764511,8.158116,-4.612221]],[[-2.641302,-1.646594,6.049754,-1.272521,3.539864,-5.699731,8.385485,9.735628,8.642700,-1.814983],[7.353583,-3.168770,9.826590,8.522847,2.290999,9.988460,5.690249,-2.403158,6.780078,-7.099072],[7.471598,-7.405340,0.189797,6.941853,-2.370263,-7.028226,2.101690,7.636639,-1.131344,8.451341],[-6.509283,9.106454,-3.192894,-6.729566,-5.602412,-1.859520,0.956127,-0.522686,-6.488603,-5.209855],[8.682535,-0.461792,7.606418,4.448754,-2.388594,0.890827,3.086300,7.110468,-6.859127,-9.297928]],[[-9.176780,3.570396,9.498972,-5.209711,7.648786,-9.403127,-7.471152,7.746691,-7.558315,1.591792],[7.647093,-5.995461,7.635172,-0.439107,3.294563,-3.560538,-4.675970,-2.040245,-8.428784,8.864618],[2.498793,-9.874790,7.605933,8.246302,8.556435,-7.149977,-9.597819,2.439145,-7.005600,0.614735],[-7.203351,0.244349,1.084422,5.375509,2.947879,-1.684866,-6.417083,-0.068819,-6.377711,-9.067526],[-4.677016,7.968325,4.752454,-5.194096,-1.189022,6.734936,1.591205,1.818958,-6.156588,-2.952521]],[[-2.474387,-1.809885,-7.670038,-6.887163,4.876536,-1.161010,8.653674,-2.131100,-6.227106,3.071097],[-7.955118,-5.770964,1.615706,6.607938,-2.257401,2.151333,-5.066843,8.175514,-8.852602,3.651537],[-1.338120,8.698651,2.874947,-5.084212,-2.459843,5.477117,2.769832,2.332697,2.200702,-6.200021],[-2.635514,-4.715964,-4.611486,6.904157,4.694571,-9.087609,-7.933827,-4.770092,3.182424,-4.163506],[-7.905377,-4.676653,9.094060,-1.624865,-8.182622,-0.839885,6.186939,9.815223,-5.073529,-8.073100]],[[-6.652321,-2.494800,4.808438,-6.428316,9.308189,-7.581900,-2.849674,8.778139,-1.770854,7.083584],[6.493116,-6.157942,-5.301557,-3.438870,-4.290699,3.180148,7.011784,-9.652594,-0.383564,2.043180],[0.255401,9.240515,-0.807646,7.470037,-1.228068,-5.291148,-5.444768,-9.986268,-9.727047,3.478084],[-5.048331,1.273346,-2.272010,-1.726931,4.225748,3.583164,1.359837,-8.269901,0.562061,3.401503],[-1.992763,9.094039,-6.601977,-0.132467,-4.410066,4.381689,-4.706599,-3.839746,-3.880211,2.620221]],[[-9.744676,-5.037712,5.050830,-7.855930,-0.889106,-0.878138,3.779917,6.570766,-6.101740,-0.260401],[-0.349138,3.117313,0.130177,5.394212,-9.051859,2.566644,5.144669,-4.101472,-2.583277,-4.003272],[-3.058168,-2.064616,-1.869093,2.570636,2.946475,-0.092687,-1.366872,-4.360190,0.054656,5.191249],[-5.145306,2.186520,2.368258,-9.576373,-7.640162,-7.323175,0.662358,-6.016436,6.515197,-7.234751],[6.567331,-9.444448,-0.638580,1.358709,-0.362475,5.268902,6.317211,1.430255,6.066507,6.745557]],[[-8.781332,-9.201665,-4.139046,5.531509,7.148527,-5.633511,-6.852059,-6.912618,4.332372,4.181737],[-7.425608,-4.996497,7.669626,-4.078678,7.389979,-1.978779,-2.622546,4.081724,0.046797,-0.064969],[3.979545,4.602134,3.264475,-9.719403,-6.636799,-4.487088,4.161138,-6.092714,-0.007452,0.389973],[-1.474570,5.036377,-1.553303,2.910306,-1.240191,-8.996098,-8.073429,2.068864,5.572679,-5.892568],[8.686076,4.346038,7.844665,9.992403,-4.164434,2.791499,-7.962505,6.661613,-6.273764,-6.464435]],[[-7.926859,-3.820661,0.220666,-8.031861,2.834919,-9.635246,-1.427708,5.199149,1.463029,7.462581],[9.819940,7.247372,-8.880542,2.834232,6.544893,0.090557,-7.975032,9.377904,9.364842,5.900765],[-5.920425,-1.874236,0.151301,4.389670,-8.275848,-4.536799,0.726005,-1.904727,5.365815,-4.759439],[3.038465,-6.451002,5.726916,9.216347,-3.361718,-1.482098,-9.190716,3.224435,-2.648747,0.253928],[4.830102,0.485964,9.612354,-5.524776,1.665144,4.443150,-5.161552,-7.418517,8.149471,3.876977]],[[-6.267550,4.833409,-8.874895,-4.689951,8.124703,2.721430,-8.098319,3.486218,-2.254130,-7.743030],[6.307908,9.816246,5.848773,5.263546,8.967328,-5.535581,-8.085353,7.217272,-3.470261,-2.822903],[8.568924,0.209087,-0.157732,9.685962,-2.276893,-0.442486,1.124469,-1.592531,2.714505,-1.947666],[-7.987140,7.014874,-7.467060,0.198461,-3.600186,-3.601546,3.985165,4.419103,-9.128083,8.097752],[-4.484594,-1.298120,9.954288,9.158321,7.389917,0.506627,-5.307220,-3.437736,1.885891,-1.722740]],[[1.204006,0.591725,-9.837743,-9.498469,5.145197,3.250322,9.203642,-6.213471,-3.196168,-2.873438],[8.504089,0.784812,-5.536016,-9.283796,7.878463,0.386456,1.604144,-1.767194,-1.790506,-8.972420],[-7.246482,9.073790,-5.503458,-3.490881,0.994014,-8.223081,-2.148165,7.567037,2.927353,2.403915],[-3.748330,-1.120570,0.952234,7.624526,8.089620,-6.963494,5.165076,-2.650686,6.181323,6.203604],[0.753880,1.169798,3.780424,-0.584934,-3.049100,-4.435906,-9.897114,-9.651863,3.016815,2.222789]],[[1.243549,-4.772580,-9.882924,-6.414751,5.076018,-7.937927,6.735991,-2.238691,-8.986763,-9.331835],[-7.725733,4.107746,8.007739,7.092130,4.232378,9.314249,-8.269198,-9.722039,-5.911262,-7.068052],[-2.639262,-2.464195,-5.731862,-4.064325,8.623972,7.633451,3.262227,5.730811,-7.131494,0.451048],[1.457906,-1.271750,-3.706391,-2.340677,-9.510012,-8.753038,-2.891048,-0.345686,-2.557217,3.641632],[0.122749,3.343198,-2.435927,5.051071,9.549192,-0.757368,-5.166537,-4.467988,0.723064,1.264461]],[[1.239466,-5.034673,8.994088,-7.226089,-1.965368,9.162371,-7.508205,-8.783023,5.753928,9.177136],[2.044659,-0.559213,3.500823,-6.283836,3.644827,-2.551656,-1.789457,-0.878129,2.191912,4.412646],[7.747972,-4.073995,4.146040,-9.376168,-3.662681,-8.909665,9.759111,4.818522,1.383776,-0.543782],[-7.387242,-1.911737,7.154048,-1.500115,2.912606,-0.125190,-1.529980,7.152790,-0.036311,8.899994],[5.228889,-1.592158,-1.620518,7.988240,3.982475,-1.303192,-0.798669,-4.308775,-2.887866,0.969083]],[[-5.277641,-1.669409,-1.669170,1.426858,7.247875,7.191230,-3.235942,3.550566,-5.405386,-5.642451],[-1.468066,1.576071,2.063455,6.529632,-3.383739,-5.651240,-8.194748,6.423531,-4.360032,3.073640],[4.422452,-9.409881,-7.968739,-2.366084,4.600608,5.039226,-0.786133,-8.517250,-6.846332,3.519696],[-4.952664,-4.449738,-1.095904,2.657842,-7.303578,-1.843010,-6.778706,6.257547,-5.055678,9.960860],[-9.165134,-4.487383,9.720530,4.989276,-4.604579,-7.074579,-9.773905,9.977281,-1.577898,2.360843]],[[-5.935871,9.027918,-8.479517,8.592406,-4.824108,-9.938739,9.350548,4.782462,-2.934514,4.271101],[8.372282,5.247203,-3.565762,-0.754646,-4.082301,0.325580,6.476723,7.863858,1.958529,7.635737],[9.508965,-9.261448,-7.216026,5.548216,-7.619940,8.479146,-5.172706,2.572588,5.530672,7.283631],[6.878727,-3.653480,9.923884,9.853605,5.681978,0.730799,-0.537665,8.235848,7.715494,0.677422],[2.956530,-0.677783,-3.968042,-5.766661,8.984977,6.505646,-7.097926,-5.376329,3.669195,-6.030571]],[[-3.460971,1.617160,-8.624745,8.015920,1.555382,4.996756,0.731445,-5.620109,-6.064383,7.043442],[-7.039499,-9.691112,5.137293,8.543700,-5.788757,2.855998,6.746774,-4.812215,5.501661,0.516060],[-6.314894,-8.536413,-2.842032,0.497267,4.014547,0.989288,7.284506,3.293249,-6.326291,0.892557],[-2.355018,8.044244,6.342232,5.437320,0.460523,5.386127,-8.511295,0.022492,-1.552810,0.747429],[8.461432,-9.818823,-1.216717,8.575340,-0.363654,-3.837226,5.493395,-7.377941,9.248583,-6.839722]]], dtype = "float64")#candidate|2469|(16, 5, 10)|const|float64
var_2470 = relay.var("var_2470", dtype = "float64", shape = (16, 5, 10))#candidate|2470|(16, 5, 10)|var|float64
bop_2471 = relay.power(const_2469.astype('float64'), relay.reshape(var_2470.astype('float64'), relay.shape_of(const_2469))) # shape=(16, 5, 10)
output = relay.Tuple([bop_2471,])
output2 = relay.Tuple([bop_2471,])
func_2479 = relay.Function([var_2470,], output)
mod['func_2479'] = func_2479
mod = relay.transform.InferType()(mod)
mutated_mod['func_2479'] = func_2479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2480 = relay.var("var_2480", dtype = "float64", shape = (16, 5, 10))#candidate|2480|(16, 5, 10)|var|float64
func_2479_call = mutated_mod.get_global_var('func_2479')
call_2481 = func_2479_call(var_2480)
output = call_2481
func_2482 = relay.Function([var_2480], output)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2625 = relay.var("var_2625", dtype = "float64", shape = (14, 7, 4))#candidate|2625|(14, 7, 4)|var|float64
uop_2626 = relay.asin(var_2625.astype('float64')) # shape=(14, 7, 4)
func_2436_call = mod.get_global_var('func_2436')
func_2440_call = mutated_mod.get_global_var('func_2440')
const_2636 = relay.const([2,-4,-9,1,-9,-3,4,-3,1,6,4,-8,6,-4,-3,-2,-6,10,-1,5,-1,-10,-10,-5,3,-10,9,-5,5,5,-4,-3,-3,6,-5,3,-9,-5,4,-9,-3,5,7,8,-9,2,-10,-2,9,5,8,1,3,-8,6,-5,6,-3,-9,-5,-4,10,1,6,-1,-5,1,10,-2,10,-6,8,-4,-7,4,9,-8,-1,-2,-8,-10,-4,8,4,2,9,8,4,-10,2,10,1,10,-6,1,-7,-4,9,-5,-2,-6,7,-10,-5,-9,-4,8,-8,7,3,5,-6,-1,2,9,-10,-7,-10,-7,7,2,6,5,10,-7,10,3,2,-3,9,-8,-9,-6,-2,-6,1,-10,-9,1,9,-4,-8,6,-2,-4,-3,8,7,-10,8,-8,3,-6,-3,2,2,2,3,-10,7,6,6,1,-9,-2,9,8,8,-4,8,4,2,-2,3,1,-7,3,10,-7,-7,8,9,-5,9,-7,-5,-8,6,-3,-3,-3,1,6,-10,-2,3,10,-7,8,-6,4,-5,-10,4,2,-10,-10,10,4,-10,-6,6,5,-1,-9,8,-10,-6,2,4,9,-8,6,-4,10,5,-7,10,-6,6,9,9,-5,-2,4,2,1,-2,-1,-5,2,-5,-3,-2,-9,2,-2,-9,-5,5,-6,-5,-10,2,-5,2,-9,6,-3,10,-7,-10,-5,-6,-10,2,-10,5,-5,-3,5,8,2,5,2,-9,-8,-8,10,5,-4,7,5,-8,-10,3,-6,-9,-4,-6,-10,5,-4,10,6,-3,4,6,4,4,-5,-9,-9,-9,-1,-9,-8,8,7,5,7,4,9,-3,-6,-9,3,1,-6,-4,5,-9,-8,-6,-9,10,10,7,6,4,-4,-4,-3,-8,-5,-8,-8,5,6,-2,-2,-8,6,2,5,7,-3,8,-4,-6,1,-1,-3,-4,8,3,-8,-2,8,10,4,-3,-6,2,1,1,4,-10,8,5,2,6,10,-6,-4,2,-2,4,9,-10,-5,-10,-4,-5,6,10,7,8,8,8,8,9,-6,-10,2,-3,2,8,-6,2,-5,10,2,1,-1,1,8,1,-4,7,10,3,-5,-10,5,3,-6,-2,-4,-8,2,4,9,4,-8,-9,2,2,2,8,-6,7,-7,-2,-2,6,8,-5,-7,10,9,4,1,1,-8,3,2,-5,9,-10,8,6,-5,-4,-10,-6,6,-2,-5,-4,-2,6,7,4,1,-8,7,-6,6,5,-6,5,-2,-3,-2,8,4,-9,-5,8,7,4,1,-6,-2,3,1,-4,-8,8,1,-5,1,-7,-9,4,-2,-9,10,10,-6,2,2,10,10,-10,-5,-8,-1,5,-10,5,7,7,-9,1,-1,-3,-8,2,3,3,-7,4,-5,-9,8,-1,7,-4,4,-4,-10,-7,-1,8,-1,10,1,-7,5,-5,7,9,1,-2,1,-1,4,1,9,7,-2,7,3,2,-9,10,-1,1,2,-9,1,4,-10,-1,6,-6,-7,2,8,-7,-8,-2,-7,3,8,2,3,-9,3,-9,-9,7,-9,-5,10,-3,-10,9,10,7,-5,-1,7,3,-9,-10,9,-4,4,-7,-3,5,7,-3,8,-9,10,-3,-10,-8,-1,7,6,10,9,4,-10,-7,3,-6,-7,3,-4,4,-5,1,1,-5,7,6,-3,-10,-9,1,-5,2,3,1,6,-9,10,-6,-10,-9,-4,-7,-5,-9,-5,10,-9,-4,-10,10,-2,6,1,-2,-10,-1,6,-3,-4,9,5,9,-10,8,10,7,-7,2,4,10,-5,-10,9,-3,-8,-4,10,8,-8,1,4,-10,2,8,7,9,1,2,5,-4,-8,7,-4,7,1,2,9,-6,-3,4,-4,-2,4,-6,-1,-9,9,-6,-3,6,4,-1,9,1,-4,2,10,3,-1,-1,9,3,10,-2,-4,-6,6,3,-5,-7,-1,-6,-4,7,8,-8,-1,-7,-10,-1,7,5,7,9,4,2,3,-8,-7,-2,2,5,9,-4,3,5,5,5,10,3,-8,-9,2,-9,2,-7,-1,10,6,-1,9,9,8,5,8,9,-4,-8,-6,7,-10,6,9,-5,10,-2,-4,5,6,7,8,1,-4,8,8,2,10,-3,-4,3,-6,6,-9,9,9,-9,-2,8,-1,-10,2,1,9,-2,-4,-8,-2,-10,5,6,7,-2,-8,-7,-7,-10,-8,-2,4,-10,10,9,-2,5,-8,3,8,4,-6,-5,-9,-3,-5,-2,2,9,9,6,-7,-1,1,2,-9,-5,9,-7,4,-3,-6,2,-8,8,1,1,4,-4,-5,-4,3,7,-7,10,4,-4,10,-6,9,6,-9,-9,-6,-8,1,5,-1,-8,7,-2,3,9,6,-2,1,-4,-4,5,-9,-10,7,6,8,-6,2,-5,-6,8,2,-6,7,-5,-4,-10,-5,3,8,8,3,-10,-2,2,9,-1,-10,-8,-6,8,5,-4,8,2,9,1,-4,1,-4,-7,2,8,4,9,-8,1,-4,-4,4,-10,6,9,10,7,2,1,-1,-8,-2,4,-5,-3,-1,3,1,-10,-3,-8,-8,1,8,-6,10,3,-10,-3,-1,3,-1,9,10,-10,8,-7,2,10,7,-8,-9,-8,9,3,-8,-4,-3,-3,-10,-5,3,-9,-10,-5,-5,6,8,-5,5,-7,-6,-4,-1,3,3,4,-2,1,1,10,10,2,-10,-5,6,-10,10,-3,-2,-4,6,9,10,9,5,-9,-3,-5,9,10,9,-10,-3,-1,1,9,5,5,-9,9,4,-1,9,2,3,5,-9,4,-8,-8,-2,6,5,5,6,8,-9,6,4,-6,-7,10,6,1,-8,-2,-4,-10,-8,10,8,-3,-6,5,-7,8,3,-4,-1,2,-2,2,3,-4,6,6,-2,10,-9,10,7,-2,6,-1,10,6,10,-7,-9,-5,-7,-8,-9,8,3,-4,6,5,1,-8,-1,-5,2,3,5,6,-8,-2,3,5,-10,10,-4,-9,-3,7,1,5,6,-5,-8,4,7,5,7,-10,8,4,-5,10,-2,-1,1,-8,-6,9,-6,-9,8,-5,-3,-4,4,-4,3,-8,1,9,7,-8,-10,6,1,-1,1,-3,-10,7,7,5,-5,4,-2,9,-2,-4,-5,10,-8,-4,8,5,-6,-2,-4,-2,9,9,1,-3,-7,5,9,-8,8,-8,-1,4,7,-10,-4,4,-10,-5,10,-4,-8,9,-8,-6,10,5,-9,1,-9,-7,-3,4,-3,-6,10,-8,-3,-6,5,-9,6,-8,-7,8,-10,-6,-7,8,-1,3,-4,-2,9,8,-7,-8,-3,7,5,-5,-4,8,1,-1,8,-8,4,-1,-5,4,-8,-7,1,2,-1,9,-7,-7,2,-3,-2,5,8,-9,-5,-8,-7,7,-1,6,-5,9,3,-10,-6,5,5,-5,6,-7,7,7,10,-4,2,-3,4,-6,-10,1,-1,-5,8,9,-2,-8,-2,6,8,1,9,-4,-7,-1,-9,4,-1,-6,9,-5,-2,1,-8,5,7,4,3,-3,10,-9,8,-1,-2,-10,-2,3,7,-9,-3,1,-10,9,4,-4,-6,5,8,-5,-3,-3,-1,9,2,-3,2,-6,10,6,5,-10,6,-7,1,7,10,-9,8,-6,-5,5,4,2,5,8,9,-3,3,-9,5,-8,-6,3,-4,4,10,9,-1,8,8,-7,5,-3,-3,5,-8,2,-10,8,8,5,3,3,-4,1,-8,10,10,6,-6,3,5,-8,4,1,9,-9,-2,6,5,2,6,1,-5,-3,-7,7,-4,7,2,-8,-5,-3,1,-5,-9,-2,-8,4,9,6,-4,5,7,-3,-9,-2,-2,-9,6,-1,-10,-1,5,4,3,-9,-3,4,-4,1,-10,6,-7,4,3,-10,10,3,-9,1,-9,8,3,-3,8,10,4,1,3,7,-3,-8,10,-8,10,-2,8,-10,3,7,7,1,-5,5,8,-5,8,-3,7,-9,1,-8,1,-9,1,-6,-5,-10,-9,-2,6,9,-3,4,4,-8,5,3,2,-10,9,-1,-5,9,-7,-3,6,-9,-4,8,-6,-2,-2,7,-10,9,5,6,-5,3,5,5,6,2,-6,-10,9,-5,9,-7,1,10,7,5,2,4,-4,1,-2,1,-5,10,3,5,9,2,-7,7,8], dtype = "int32")#candidate|2636|(1575,)|const|int32
call_2635 = relay.TupleGetItem(func_2436_call(relay.reshape(const_2636.astype('int32'), [15, 15, 7]), relay.reshape(const_2636.astype('int32'), [15, 15, 7]), ), 4)
call_2637 = relay.TupleGetItem(func_2440_call(relay.reshape(const_2636.astype('int32'), [15, 15, 7]), relay.reshape(const_2636.astype('int32'), [15, 15, 7]), ), 4)
bop_2639 = relay.multiply(uop_2626.astype('int8'), relay.reshape(var_2625.astype('int8'), relay.shape_of(uop_2626))) # shape=(14, 7, 4)
func_1549_call = mod.get_global_var('func_1549')
func_1552_call = mutated_mod.get_global_var('func_1552')
const_2645 = relay.const(7.994625, dtype = "float32")#candidate|2645|()|const|float32
const_2646 = relay.const([[-7.061083,-8.616407,2.501611,-4.121854],[7.202942,-5.990553,-5.300237,0.171496],[-6.321615,-1.980024,4.430154,5.905591],[-7.270530,8.890151,6.319387,-3.964572],[0.294147,-4.294682,-3.166209,-6.336326],[-1.506709,-3.451304,0.337037,4.063510],[-9.139817,-6.652159,5.793565,-9.312394],[-9.390122,-7.410153,3.355924,6.347490],[5.459496,4.747190,-7.789204,2.709557],[-3.826680,6.127571,1.266483,-3.313247],[5.312842,-5.748781,-6.986717,-0.530224],[-2.452795,-6.286285,-0.084509,6.442882],[-3.900959,0.121931,-4.919908,5.176321],[-8.771104,-6.073350,0.669538,-8.539232],[3.533160,-9.194727,9.204405,3.689164],[1.133942,-8.203227,3.548870,-1.773333],[-4.505150,8.654514,-0.263138,-9.920604],[9.874177,2.445036,6.778834,6.099711],[-2.871531,-9.437619,3.552909,9.510335],[-5.396319,-0.073124,5.876000,0.248398],[-1.088826,-0.561362,3.007620,-7.764314],[5.615449,9.237082,4.312542,-1.735431],[-6.868357,0.278835,-7.654923,2.434444],[-4.042085,-9.158538,-7.504446,-9.448364],[-7.470695,9.146863,0.766397,9.859127],[6.855429,2.807019,4.565419,-5.696577],[-1.975054,9.620268,7.866717,7.845717],[-9.808942,0.960050,2.329222,-8.090942],[8.869652,4.286159,7.812084,6.044674],[-1.967292,2.040070,-8.887265,6.682141],[0.852448,6.310263,9.791566,6.372537],[9.365609,-3.581121,-1.721462,-1.173327],[6.850449,-0.638868,-7.474392,6.167584],[-3.615183,9.291814,7.708732,1.017345],[9.992813,4.000346,-0.761436,2.719415],[5.909375,-9.835046,-4.104644,5.812407],[2.097773,-0.167509,-0.017565,-9.356781],[-6.743659,3.914176,-9.577559,-8.678127],[-6.480474,6.524032,-4.275777,-9.298387],[-4.176969,5.152426,6.328956,-7.202412],[-1.141481,0.003178,5.558689,0.560191],[5.409281,7.869208,-2.380643,8.704304],[8.473516,0.369711,5.975912,9.281077],[-4.539785,-4.916631,-9.673497,-4.538658],[2.571187,8.593980,1.323452,-9.240714],[9.332288,8.950333,-9.526815,-8.431280],[6.135724,9.063174,9.796768,-0.380082],[-7.970767,-5.549126,-2.258898,6.077768],[-6.728714,-4.145272,-4.483609,-4.127594],[-4.856886,3.752107,-1.926737,-4.933293],[6.267655,1.636953,-9.959590,-9.637461],[-2.949209,2.299742,-8.026581,0.279228],[2.469807,-2.199034,-2.541907,-8.338146],[-4.666815,8.082383,0.459135,-0.214248],[-5.078451,-9.624947,-5.877181,0.755966],[0.531568,8.117967,9.199896,-3.887760],[-8.567608,-8.606693,1.002295,6.882766],[-2.467433,-0.114971,-5.934739,-3.681456],[-2.819019,1.653722,-9.761851,-6.875065],[-3.740872,3.872361,-7.359167,-8.032652],[-5.022643,6.898294,1.274789,-6.349814],[-5.410416,-8.364588,9.535197,1.839650],[7.623578,-5.172125,8.633078,3.136007],[-6.683717,9.431351,-7.555901,1.200166],[2.318832,-1.026524,8.850589,-1.323048],[5.740769,-0.138104,-7.326540,5.524693],[3.201815,0.896046,-1.989550,-1.526108],[5.878022,6.545741,4.115029,-5.982592],[1.274587,-3.231224,0.401762,-5.188456],[1.843204,-2.552251,-0.392548,7.586678],[8.398761,-0.919618,4.540490,4.033813],[4.029706,-3.579327,6.297678,2.174718],[3.402891,-2.377904,-4.168350,5.242714],[9.231416,3.557878,7.407203,5.318154],[8.362281,-5.093811,-1.978210,8.379925],[-8.416728,3.910619,9.462921,9.202448],[-9.326096,3.039907,-9.823009,-7.384624],[-2.882516,-0.881501,-8.427901,8.877258],[9.827336,-6.067314,3.806025,2.380459],[6.857294,0.900279,9.427888,5.693572],[-6.463190,7.095692,4.543114,9.949948],[7.338983,-6.043316,1.982418,-9.534846],[2.541104,2.767571,-5.957350,6.125163],[4.915192,-9.279970,0.105019,-8.313007],[7.702655,-9.680968,9.857397,-4.449097],[3.862080,-2.878415,-8.992268,-9.608245],[4.286779,-1.700863,-0.831414,9.457333],[9.480641,1.784097,1.646542,-8.909371],[1.438764,4.489193,-2.525843,4.331126],[-0.593596,7.775839,-5.656658,9.445198],[6.624586,-9.725910,2.939673,0.563703],[1.930726,7.927854,-0.532965,0.293447],[-9.468723,-7.819633,3.928245,0.763685],[2.745825,-5.666202,-1.604947,0.334624],[-4.828744,4.093147,9.765862,-1.761483],[9.015672,4.598700,0.800876,1.409027],[8.638384,5.427636,-7.480240,5.575255],[1.951665,0.666792,8.798944,4.399121],[-9.459798,7.075378,5.919226,4.799631],[7.833896,-9.913659,2.345891,-5.778078],[2.111994,5.425095,-0.622443,3.248410],[8.327028,5.603313,8.225969,-7.417188],[-0.070405,1.226583,7.216932,-0.698175],[2.407488,2.552392,1.951849,1.216553],[4.944660,-0.744297,7.897003,5.905588],[-5.992524,6.729871,9.847246,-8.422720],[3.125027,2.279570,-4.999023,3.697920],[-3.522507,-8.467314,6.755562,-4.208571],[2.362066,-3.761816,-2.438589,5.518465],[6.119119,-7.450112,-5.437591,-7.037158]], dtype = "float32")#candidate|2646|(110, 4)|const|float32
call_2644 = func_1549_call(relay.reshape(const_2645.astype('float32'), []), relay.reshape(const_2646.astype('float32'), [11, 5, 8]), )
call_2647 = func_1549_call(relay.reshape(const_2645.astype('float32'), []), relay.reshape(const_2646.astype('float32'), [11, 5, 8]), )
output = relay.Tuple([call_2635,const_2636,bop_2639,call_2644,const_2645,const_2646,])
output2 = relay.Tuple([call_2637,const_2636,bop_2639,call_2647,const_2645,const_2646,])
func_2664 = relay.Function([var_2625,], output)
mod['func_2664'] = func_2664
mod = relay.transform.InferType()(mod)
var_2665 = relay.var("var_2665", dtype = "float64", shape = (14, 7, 4))#candidate|2665|(14, 7, 4)|var|float64
output = func_2664(var_2665)
func_2666 = relay.Function([var_2665], output)
mutated_mod['func_2666'] = func_2666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2807 = relay.var("var_2807", dtype = "float64", shape = (8, 13, 13))#candidate|2807|(8, 13, 13)|var|float64
var_2808 = relay.var("var_2808", dtype = "float64", shape = (8, 13, 13))#candidate|2808|(8, 13, 13)|var|float64
bop_2809 = relay.floor_divide(var_2807.astype('float64'), relay.reshape(var_2808.astype('float64'), relay.shape_of(var_2807))) # shape=(8, 13, 13)
output = relay.Tuple([bop_2809,])
output2 = relay.Tuple([bop_2809,])
func_2816 = relay.Function([var_2807,var_2808,], output)
mod['func_2816'] = func_2816
mod = relay.transform.InferType()(mod)
var_2817 = relay.var("var_2817", dtype = "float64", shape = (8, 13, 13))#candidate|2817|(8, 13, 13)|var|float64
var_2818 = relay.var("var_2818", dtype = "float64", shape = (8, 13, 13))#candidate|2818|(8, 13, 13)|var|float64
output = func_2816(var_2817,var_2818,)
func_2819 = relay.Function([var_2817,var_2818,], output)
mutated_mod['func_2819'] = func_2819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2942 = relay.var("var_2942", dtype = "uint32", shape = (6, 9, 7))#candidate|2942|(6, 9, 7)|var|uint32
var_2943 = relay.var("var_2943", dtype = "uint32", shape = (6, 9, 7))#candidate|2943|(6, 9, 7)|var|uint32
bop_2944 = relay.less_equal(var_2942.astype('bool'), relay.reshape(var_2943.astype('bool'), relay.shape_of(var_2942))) # shape=(6, 9, 7)
bop_2948 = relay.left_shift(var_2943.astype('uint16'), relay.reshape(bop_2944.astype('uint16'), relay.shape_of(var_2943))) # shape=(6, 9, 7)
uop_2952 = relay.exp(var_2943.astype('float32')) # shape=(6, 9, 7)
bop_2965 = relay.bitwise_xor(uop_2952.astype('uint8'), relay.reshape(bop_2948.astype('uint8'), relay.shape_of(uop_2952))) # shape=(6, 9, 7)
output = bop_2965
output2 = bop_2965
func_2975 = relay.Function([var_2942,var_2943,], output)
mod['func_2975'] = func_2975
mod = relay.transform.InferType()(mod)
mutated_mod['func_2975'] = func_2975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2975_call = mutated_mod.get_global_var('func_2975')
var_2977 = relay.var("var_2977", dtype = "uint32", shape = (6, 9, 7))#candidate|2977|(6, 9, 7)|var|uint32
var_2978 = relay.var("var_2978", dtype = "uint32", shape = (6, 9, 7))#candidate|2978|(6, 9, 7)|var|uint32
call_2976 = func_2975_call(var_2977,var_2978,)
output = call_2976
func_2979 = relay.Function([var_2977,var_2978,], output)
mutated_mod['func_2979'] = func_2979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3196 = relay.var("var_3196", dtype = "float64", shape = (13, 16, 7))#candidate|3196|(13, 16, 7)|var|float64
uop_3197 = relay.sinh(var_3196.astype('float64')) # shape=(13, 16, 7)
uop_3203 = relay.cosh(uop_3197.astype('float32')) # shape=(13, 16, 7)
output = relay.Tuple([uop_3203,])
output2 = relay.Tuple([uop_3203,])
func_3213 = relay.Function([var_3196,], output)
mod['func_3213'] = func_3213
mod = relay.transform.InferType()(mod)
var_3214 = relay.var("var_3214", dtype = "float64", shape = (13, 16, 7))#candidate|3214|(13, 16, 7)|var|float64
output = func_3213(var_3214)
func_3215 = relay.Function([var_3214], output)
mutated_mod['func_3215'] = func_3215
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3236 = relay.const(6, dtype = "uint32")#candidate|3236|()|const|uint32
var_3237 = relay.var("var_3237", dtype = "uint32", shape = (16, 6, 3))#candidate|3237|(16, 6, 3)|var|uint32
bop_3238 = relay.logical_xor(const_3236.astype('uint32'), var_3237.astype('uint32')) # shape=(16, 6, 3)
func_2479_call = mod.get_global_var('func_2479')
func_2482_call = mutated_mod.get_global_var('func_2482')
var_3249 = relay.var("var_3249", dtype = "float64", shape = (800,))#candidate|3249|(800,)|var|float64
call_3248 = relay.TupleGetItem(func_2479_call(relay.reshape(var_3249.astype('float64'), [16, 5, 10])), 0)
call_3250 = relay.TupleGetItem(func_2482_call(relay.reshape(var_3249.astype('float64'), [16, 5, 10])), 0)
func_2664_call = mod.get_global_var('func_2664')
func_2666_call = mutated_mod.get_global_var('func_2666')
const_3257 = relay.const([[-3.985738],[-3.140817],[-0.105421],[-2.131665],[-9.842773],[9.433819],[5.874287],[-8.623613],[9.680292],[-9.350876],[4.309694],[-4.862502],[-8.784918],[4.524635],[5.967117],[-0.312129],[4.207438],[2.522597],[-7.955788],[1.542514],[1.354996],[4.941277],[1.483474],[-0.645589],[-4.273056],[-3.941400],[-8.017421],[-8.266784],[-9.827642],[8.936077],[1.683314],[-1.332192],[-2.125865],[-8.554842],[4.253356],[-8.434685],[4.309977],[9.659088],[6.463247],[1.844723],[0.571881],[9.616018],[-0.730294],[-0.604082],[8.562015],[-5.183552],[1.806007],[1.425046],[-3.046500],[-1.556002],[2.342559],[-4.251621],[-0.717101],[-9.661588],[8.023786],[3.557087],[6.956216],[5.008086],[-0.857149],[4.928202],[1.366035],[8.961988],[-1.487850],[6.278963],[-9.626088],[-8.575215],[-9.660815],[-7.654226],[6.901310],[-1.602618],[7.804557],[5.764932],[-1.707775],[-0.080177],[-8.097011],[-6.847282],[-1.370334],[-5.019640],[-4.451075],[8.182994],[-7.549200],[4.747556],[4.358684],[4.870311],[-0.724465],[7.839099],[-8.076655],[-5.867144],[2.702365],[0.836704],[-9.341629],[-9.422221],[3.262941],[7.084729],[-0.601746],[0.235218],[3.081733],[3.146087],[-4.184976],[4.353482],[-7.194632],[-3.847736],[1.364605],[0.202018],[-1.092104],[-2.059328],[-2.646509],[4.201545],[1.548916],[2.577886],[9.286007],[-0.279360],[8.262090],[2.202600],[5.864197],[-8.898906],[-1.176769],[-9.306172],[-9.006280],[-1.287524],[-1.261907],[4.270116],[5.756459],[4.654985],[-6.129554],[-1.456455],[7.514373],[-9.985908],[-4.228095],[-5.843042],[-8.992471],[3.135839],[-9.055860],[-8.456798],[0.663139],[3.447089],[0.550897],[-9.403290],[4.142833],[3.604272],[6.075467],[3.443178],[8.058580],[8.051160],[-5.262474],[8.675179],[3.615559],[5.618530],[-1.636046],[-6.536050],[-2.061954],[3.066850],[-2.776879],[7.526623],[1.079870],[4.603321],[-2.564498],[5.271322],[-6.430909],[-7.840638],[3.990269],[4.373592],[-7.602310],[-8.689580],[-9.728854],[4.647216],[-8.185641],[-1.088688],[-0.582609],[-9.035372],[4.359637],[-7.930281],[-6.357878],[1.201019],[5.079527],[3.844905],[0.919284],[3.615000],[4.064102],[-4.625945],[-1.383717],[7.365493],[-5.369136],[6.543180],[9.825954],[7.283686],[-9.328266],[-2.226539],[1.113814],[4.663407],[7.640380],[4.487481],[-3.109005],[4.379793],[-4.473078],[8.981561],[8.844992],[8.206928],[1.233467],[-2.652822],[-0.348558],[5.994592],[-1.178585],[-3.703462],[4.716677],[-9.309386],[-7.262578],[2.557522],[-8.643652],[3.571462],[-8.138193],[7.389942],[7.439290],[3.408634],[3.262914],[5.526604],[3.531639],[-5.640286],[-4.668900],[-1.842605],[6.829823],[0.050530],[-6.863881],[-3.108519],[5.531664],[-8.705535],[-4.927252],[3.945422],[-4.909864],[-1.068336],[-1.138923],[-3.140656],[-0.192754],[9.027720],[3.091961],[-2.411249],[-6.882674],[-8.990306],[-1.313632],[5.872471],[-2.940723],[1.364721],[5.208751],[-3.975134],[-9.180048],[-7.430118],[-4.285688],[-9.974152],[1.517284],[-6.416767],[9.355230],[5.616449],[-8.199892],[5.968307],[-2.626065],[-4.692131],[-0.179971],[-4.169672],[-3.411861],[4.679876],[9.711194],[8.067556],[-6.394221],[7.925678],[-7.901845],[-8.015970],[-8.639343],[9.690414],[-3.845385],[-6.910601],[-3.986849],[2.953272],[-2.097464],[-3.222602],[7.340153],[7.697211],[0.224366],[-0.221258],[8.062676],[-5.343779],[5.507733],[5.937431],[-5.130394],[-9.961849],[5.124097],[-3.374511],[9.717070],[-4.742534],[2.970417],[-7.683015],[2.944964],[9.828203],[9.778183],[-3.898158],[2.746227],[-6.011613],[-5.418206],[4.536163],[-2.854293],[5.029505],[-8.602386],[7.936169],[5.587427],[1.706910],[3.729952],[6.626368],[-5.749431],[4.186314],[4.142396],[-7.586012],[-4.992055],[5.351518],[-8.329106],[-9.746373],[5.457487],[8.455406],[5.380681],[6.081999],[-7.167360],[7.177359],[5.928095],[-0.504170],[0.821977],[5.716698],[-4.321617],[-4.090452],[-1.955618],[7.534877],[-3.058475],[4.930858],[2.994495],[9.089769],[-2.143567],[6.826103],[5.320602],[-8.330142],[-9.539936],[-8.075596],[-0.015240],[-9.222954],[6.263594],[-6.503477],[-4.831755],[5.814704],[3.226871],[-6.005055],[1.304637],[9.959928],[1.338146],[-0.170637],[6.674399],[4.331986],[-9.559133],[1.185916],[2.680485],[4.493585],[-7.356498],[-4.645701],[8.133421],[7.042351],[-4.579335],[8.158168],[0.497031],[4.770668],[9.164345],[-7.846029],[-6.128020],[-1.991360],[7.251258],[-2.014498],[9.835312],[-9.739315],[5.219337],[7.754564],[-1.065255],[3.034940],[-8.713164],[-3.032961],[7.132519],[-4.444746],[1.674345],[5.903623],[-0.753016],[-8.501873],[0.509239],[-9.639974],[-0.285707],[7.849449],[5.125960],[-0.556230],[5.549836],[7.115067]], dtype = "float64")#candidate|3257|(392, 1)|const|float64
call_3256 = relay.TupleGetItem(func_2664_call(relay.reshape(const_3257.astype('float64'), [14, 7, 4])), 4)
call_3258 = relay.TupleGetItem(func_2666_call(relay.reshape(const_3257.astype('float64'), [14, 7, 4])), 4)
func_1027_call = mod.get_global_var('func_1027')
func_1030_call = mutated_mod.get_global_var('func_1030')
var_3264 = relay.var("var_3264", dtype = "int8", shape = (1200,))#candidate|3264|(1200,)|var|int8
call_3263 = relay.TupleGetItem(func_1027_call(relay.reshape(var_3264.astype('int8'), [15, 5, 16]), relay.reshape(var_3264.astype('int8'), [15, 5, 16]), ), 0)
call_3265 = relay.TupleGetItem(func_1030_call(relay.reshape(var_3264.astype('int8'), [15, 5, 16]), relay.reshape(var_3264.astype('int8'), [15, 5, 16]), ), 0)
output = relay.Tuple([bop_3238,call_3248,var_3249,call_3256,const_3257,call_3263,var_3264,])
output2 = relay.Tuple([bop_3238,call_3250,var_3249,call_3258,const_3257,call_3265,var_3264,])
func_3268 = relay.Function([var_3237,var_3249,var_3264,], output)
mod['func_3268'] = func_3268
mod = relay.transform.InferType()(mod)
mutated_mod['func_3268'] = func_3268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3268_call = mutated_mod.get_global_var('func_3268')
var_3270 = relay.var("var_3270", dtype = "uint32", shape = (16, 6, 3))#candidate|3270|(16, 6, 3)|var|uint32
var_3271 = relay.var("var_3271", dtype = "float64", shape = (800,))#candidate|3271|(800,)|var|float64
var_3272 = relay.var("var_3272", dtype = "int8", shape = (1200,))#candidate|3272|(1200,)|var|int8
call_3269 = func_3268_call(var_3270,var_3271,var_3272,)
output = call_3269
func_3273 = relay.Function([var_3270,var_3271,var_3272,], output)
mutated_mod['func_3273'] = func_3273
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3869 = relay.var("var_3869", dtype = "float64", shape = (14, 13, 11))#candidate|3869|(14, 13, 11)|var|float64
uop_3870 = relay.erf(var_3869.astype('float64')) # shape=(14, 13, 11)
output = uop_3870
output2 = uop_3870
func_3887 = relay.Function([var_3869,], output)
mod['func_3887'] = func_3887
mod = relay.transform.InferType()(mod)
var_3888 = relay.var("var_3888", dtype = "float64", shape = (14, 13, 11))#candidate|3888|(14, 13, 11)|var|float64
output = func_3887(var_3888)
func_3889 = relay.Function([var_3888], output)
mutated_mod['func_3889'] = func_3889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4116 = relay.var("var_4116", dtype = "uint32", shape = (10, 15, 3))#candidate|4116|(10, 15, 3)|var|uint32
var_4117 = relay.var("var_4117", dtype = "uint32", shape = (10, 15, 3))#candidate|4117|(10, 15, 3)|var|uint32
bop_4118 = relay.left_shift(var_4116.astype('uint32'), relay.reshape(var_4117.astype('uint32'), relay.shape_of(var_4116))) # shape=(10, 15, 3)
var_4140 = relay.var("var_4140", dtype = "uint32", shape = (10, 15, 3))#candidate|4140|(10, 15, 3)|var|uint32
bop_4141 = relay.power(var_4116.astype('float32'), relay.reshape(var_4140.astype('float32'), relay.shape_of(var_4116))) # shape=(10, 15, 3)
func_1027_call = mod.get_global_var('func_1027')
func_1030_call = mutated_mod.get_global_var('func_1030')
const_4145 = relay.const([-9,-10,9,2,6,-8,-7,-2,-1,6,-3,-6,-2,10,8,-6,4,-7,-4,8,-7,10,-3,3,-3,1,4,7,-6,3,-10,2,-6,8,-7,4,3,8,-8,-8,-1,-9,8,2,-4,-9,-5,10,-9,-3,-5,4,1,-3,-2,2,-4,10,-8,8,-9,-6,-10,-8,-5,7,8,-9,3,9,-7,-1,-3,-4,5,-3,-9,-9,-5,7,-7,-1,8,-7,-4,-6,-9,-1,-8,-3,5,7,5,4,-2,2,-7,-8,3,-8,4,-7,3,-7,-10,-3,-4,-2,6,-9,-9,10,3,3,-5,-2,-6,-4,-8,-9,-1,7,3,-6,-5,7,-5,-10,-9,4,-5,-5,-9,10,-1,-6,-3,10,2,5,1,1,-1,4,-5,3,9,9,-6,5,-9,-10,4,6,-5,3,-5,2,7,-5,6,-10,-6,3,9,-1,-9,-3,-10,8,2,-1,-6,-2,-9,-5,6,10,-6,8,-10,-6,-8,9,7,-5,-1,-5,-7,1,-3,1,-2,5,-3,-3,-10,2,-7,-9,-10,-5,-9,7,-7,-4,-5,-2,-7,2,10,2,6,1,5,-2,-2,-6,-7,-9,-1,7,-7,2,-7,-3,-4,8,-9,5,-9,-10,4,-4,-9,5,5,8,10,5,8,4,-2,-2,-3,6,-4,7,-10,-6,3,3,-1,1,2,-9,-3,-2,7,-8,1,-6,-8,-2,3,1,9,-5,4,-2,-9,9,-5,-9,-7,5,-8,-4,2,-9,1,-1,4,1,-10,-6,-5,3,8,-2,-8,4,6,4,-3,2,-5,-4,-9,-6,-1,9,9,-6,5,-5,-5,-9,-6,-10,8,-3,-5,9,-4,-4,-9,-1,-9,9,-4,-5,3,9,-8,8,-9,6,-10,1,-2,-10,-9,3,-7,2,-5,10,2,7,8,-4,6,4,-9,-3,1,-3,-4,8,7,7,-8,9,-6,-8,2,3,5,8,-2,4,2,-4,4,-2,-4,4,-5,10,1,-8,-3,5,-8,-2,1,2,3,-4,7,-7,-4,-3,-4,-2,4,-10,-3,-6,5,1,-4,-3,-8,6,-4,8,-4,7,-5,-4,1,5,8,-4,9,-1,8,-4,1,-4,2,3,3,7,10,-7,5,6,-3,-6,-8,9,-1,2,2,-8,-10,-2,2,-10,-3,7,1,3,6,10,8,-9,10,-2,-1,-7,-3,3,10,-8,-2,-3,10,9,-5,9,-6,-4,-4,-9,9,4,-8,-7,-10,-3,2,7,2,-8,-5,-2,-7,-9,5,6,7,5,-6,-4,-9,-1,3,-3,-4,-5,7,-3,-6,-5,-2,4,-10,-5,-3,-5,7,5,3,-6,8,9,-1,-2,-5,-9,-8,8,-5,-4,-3,-3,4,10,-8,6,10,-3,-8,-9,4,9,4,-9,2,9,2,-6,2,6,2,7,-9,-4,-7,-7,-4,10,6,7,3,-3,-8,1,-3,-9,1,9,-6,5,8,2,-10,8,-2,-4,-10,1,-6,-7,1,5,2,2,-7,-9,10,-6,4,8,10,-2,-1,-10,5,-5,3,-8,2,-3,8,-3,-3,-1,-5,-6,3,5,1,10,-5,4,-2,3,4,-4,-9,-1,8,-1,2,-7,-5,10,10,-2,4,-2,-8,-2,-2,5,3,-4,-9,-5,-2,8,7,-5,-10,3,-5,-10,-4,7,7,9,-7,5,10,9,-2,-1,-6,9,3,10,1,-3,10,-2,2,-1,4,7,5,6,-4,10,3,-8,3,4,-5,10,-7,-4,-4,7,10,2,9,-5,-4,5,-4,4,8,-3,7,10,-6,2,-1,9,-3,9,10,-7,6,-2,4,10,-7,6,-6,9,-5,1,-2,-9,3,10,-9,8,10,8,9,7,10,-2,-2,-8,6,2,2,-4,7,-6,3,-4,3,7,1,-8,7,-7,2,5,5,-5,-7,1,5,2,3,-10,-1,10,9,3,7,5,5,9,-7,8,5,2,9,9,4,-8,-4,-7,6,9,9,-5,5,-4,-8,10,2,-5,-8,2,-2,4,-9,-9,2,8,-5,6,9,-6,-4,2,8,6,-2,7,9,1,2,-2,-9,6,7,6,3,3,-10,-3,2,4,8,-9,-3,-6,10,1,-10,5,-8,5,5,-9,3,-3,1,-1,1,7,-2,-10,1,-4,-8,-2,2,-10,-3,3,-2,5,6,-4,7,10,4,-2,3,8,4,10,7,-6,2,8,-4,7,8,6,3,-5,-7,-2,2,4,9,-4,5,-7,-7,-8,10,2,7,5,3,-6,6,1,-7,-4,8,-5,7,-9,-8,7,4,-10,-5,-2,-5,-9,4,1,-6,10,-2,-6,-6,5,-3,6,2,-8,-8,-7,7,-8,-9,-4,3,-8,8,5,-8,2,5,-7,-3,-5,-7,6,2,7,-2,-6,-7,-1,6,-1,-6,-6,-2,-7,-9,-5,-7,-10,-6,10,-10,-4,-9,-3,1,-1,-10,10,-9,-4,1,5,-2,-7,-4,10,-3,2,-9,9,1,-1,-5,3,-9,-4,-8,-10,-6,1,-8,-5,-5,-3,3,4,-1,7,5,-2,6,-7,-7,-5,8,2,-6,6,-3,6,10,2,-7,7,-6,8,-7,4,-4,6,4,-7,-6,-2,2,6,7,3,-4,6,3,2,9,-5,-7,-8,-8,1,-9,-2,-10,3,6,-1,-10,10,1,3,-10,-6,9,7,-8,-3,3,8,-4,1,10,-10,-1,2,-4,3,-3,-10,10,10,-8,-4,8,4,-4,-4,9,5,-6,-1,3,-6,-10,9,-4,9,-1,2,-9,-3,-1,7,1,-7,8,9,1,-8,-4,4,-5,1,-8,-5,-7,-9,-3,8,10,-5,5,-2,1,-9,6,-2,-6,4,6,-10,8,-1,8,7,5,6,5,-8,7,-3,3,-3,8,7,-9,-7,8,7,7,4,5,-4,8,-9,1,10,-7,5,2,-1,8,-7,-8,-4,8,7,-8,6,-4,4,6,1,7,-1,9,2,-10,6,3,2,-8,7,-3,3,-9,-5,9,10,-6,-6,3,-4,7,2,2,1,7,5,2,-7,2,-6,10,10,-9,2,-6,-6,8,1,5,9,2,10,-1,5,-1,-8,-8,-8,7,-8,8,-4,-5,-8,10,2,3,-8,-1,10,5,-2,8,-10,1,6,4,-6,8,1,3,-10,5,3,-10,-7,-2,-7,-10,5,-7,-9,-4,1], dtype = "int8")#candidate|4145|(1200,)|const|int8
call_4144 = relay.TupleGetItem(func_1027_call(relay.reshape(const_4145.astype('int8'), [15, 5, 16]), relay.reshape(const_4145.astype('int8'), [15, 5, 16]), ), 0)
call_4146 = relay.TupleGetItem(func_1030_call(relay.reshape(const_4145.astype('int8'), [15, 5, 16]), relay.reshape(const_4145.astype('int8'), [15, 5, 16]), ), 0)
func_1277_call = mod.get_global_var('func_1277')
func_1280_call = mutated_mod.get_global_var('func_1280')
const_4149 = relay.const([[7.867697,2.733762],[-4.349211,1.332086],[8.167842,5.343515],[-6.933213,5.557952],[-8.952084,-6.920094],[6.164919,7.588767],[-4.829242,-8.280263],[9.892582,1.962446],[-0.417592,2.130028],[1.561628,7.851794],[-9.291510,0.634788],[-6.840382,-9.160064],[-0.409662,-1.259566],[-6.045652,9.958928],[-2.736487,5.452695],[6.489486,-4.660203],[0.834647,-1.265802],[-3.152585,-5.550091],[8.902633,-5.316706],[-6.926737,-3.259567],[7.560275,-8.825561],[-1.969972,7.606164],[6.698083,-8.365528],[1.762713,-7.852831],[8.340204,9.633732],[4.864373,-1.009208],[7.455239,-0.859502],[-8.400869,-7.712260],[5.319032,5.792262],[-6.332594,-2.444721],[-8.349535,-7.949205],[-1.077342,-7.653343],[-6.863932,1.158682],[0.378004,-8.878160],[-7.205491,-1.485696],[2.795307,5.475608],[7.610449,-2.389168],[4.272495,2.541985],[-2.305613,4.222395],[6.451537,-2.187405],[-3.611354,5.945367],[6.694040,-7.649690],[-2.917935,-8.825591],[-4.092693,8.336351],[5.455293,4.642748],[-3.626046,-6.872486],[3.094661,0.546627],[6.599815,-4.657671],[-5.238858,-8.945138],[7.741748,2.173070],[1.207388,7.012968],[3.626257,-3.568769],[-3.953888,2.000836],[-7.559943,2.488478],[-3.058583,-2.324192],[-4.267903,7.563726],[-4.403385,3.577805],[-6.964705,-5.414072],[-1.559381,1.474966],[-0.110785,-9.498038],[-2.199613,6.302882],[8.203197,-5.137973],[-1.862088,-4.334610],[3.721886,4.327907],[1.080742,3.879203],[8.941794,2.810442],[5.340358,-0.554643],[-1.173512,-5.714151],[-8.482836,-5.719029],[6.423801,8.396545],[9.971452,-3.976868],[7.492169,0.067498],[-5.247229,9.160142],[-9.913415,-5.444095],[5.227782,2.705464],[1.927623,-4.248364],[4.578755,-7.085313],[2.737106,-6.375093],[8.372647,9.021602],[-1.957060,0.740606],[1.147081,3.691088],[0.437480,3.844795],[-8.301829,0.015648],[2.282754,4.215993],[-3.501061,0.983552],[-3.620467,-5.046617],[-9.817205,-1.633594],[-2.253435,-2.744258],[-2.321891,1.095659],[6.458224,0.230114],[7.880535,6.832212],[-7.377483,-9.436089],[-6.005575,5.668831],[2.449709,-7.994934],[6.283883,0.453181],[-4.365069,-7.725385],[9.392093,0.538111],[-3.550883,-6.515054],[2.369487,-4.566171],[-9.332617,-8.861384],[-1.559456,2.527833],[3.272219,-1.947416],[8.252337,8.442661],[8.695003,-3.181941],[1.878833,0.229385],[-5.788480,-5.121733],[9.301280,-1.201327],[5.153596,6.952257],[-6.065935,6.635449],[-9.091691,-1.145502],[0.400128,-8.982463],[2.339910,6.453587],[-9.292318,2.264308],[-3.429249,-2.845790],[-1.698118,-1.704185],[4.420424,-5.194836],[-2.408683,5.079326],[3.465051,-7.020392],[3.270654,8.025122],[-8.022243,-3.339769]], dtype = "float64")#candidate|4149|(120, 2)|const|float64
const_4150 = relay.const([3.524647,3.638437,-3.541232,7.102608,2.526409,6.100032,6.134673,4.270464,3.457407,-5.400926,-8.386109,2.430935,-4.329210,8.456112,6.888969,-7.056728,-9.753511,4.418602,8.571360,-1.025559,-7.139047,-3.114920,-3.467768,-7.049895,-8.410010,5.126095,-5.199796,0.824061,-7.011712,-1.259900,1.695772,-0.185305,-8.107125,4.506597,-4.839792,5.551120,1.603856,-4.676393,1.370008,4.640561,7.135372,-1.724345,-6.248216,9.522379,-7.699879,-2.286697,-5.066623,7.089620,-5.101653,-1.237949,-1.835614,3.651680,3.244701,2.662483,-7.603911,-4.928855,4.115184,4.189887,-9.698692,-5.136719,-9.633724,4.517179,6.688446,-6.037020,2.972950,-1.029866,-7.147534,4.199266,-3.379984,-5.729438,-5.513879,-9.651414,5.753304,2.394049,-1.357840,-3.667201,-0.098398,2.736083,-0.058735,-2.651999,-0.950867,3.520736,-2.180616,5.529940,9.412890,-6.261418,-3.324026,-8.477862,-0.866435,-4.009724,3.410149,-9.397665,-8.709272,-8.947018,4.020249,-1.942402,0.730112,-3.948437,-0.426068,-2.373198,1.435597,7.202869,-7.345020,3.273150,1.665428,4.359519,-9.347853,6.492788,-8.727809,1.245579,-4.422829,3.894749,1.833658,1.477563,3.016545,6.993564,-0.207721,3.116726,-2.091268,-3.748363,-4.580242,9.333859,4.658432,3.519990,-6.858022,2.740584,-8.130218,-0.190039,-3.387664,2.212517,-9.803776,-6.140507,-3.227021,2.075919,-4.447305,-9.238494,7.872010,4.920332,-1.057183,-3.201853,0.458656,2.246734,7.799530,3.086726,-2.933957,0.893858,1.553540,8.733618,1.415876,4.850283,-4.425292,-4.770368,6.724888,-9.476434,-5.996589,-9.719132,-2.155706,6.819407,2.466376,2.965627,-8.871480,-6.180317,-7.395443,4.873274,-0.045586,9.882244,-9.159314,9.014940,1.356111,-8.877907,-7.726393,4.919558,-7.536416,-6.282196,1.009071,9.123754,3.250393,-2.762629,-2.537639,8.522767,-1.203698,1.801965,3.131361,-3.950064,9.444958,-4.860670,0.650586,-8.492363,7.323637,6.266425,6.410516,-8.254512,1.402571,-4.487205,-1.398594,-0.379502,9.927750,8.942707,-6.729725,5.884700,-7.126215,-0.982286,-2.201922,-8.363778,8.224950,-6.718462,-6.773713,9.014497,9.383990,0.439573,-1.781165,-5.042364,-4.574069,-9.469519,5.636928,-5.837906,4.720494,0.521447,4.478813,3.625583,-5.870272,9.118407,-2.138489,-6.083473,5.120325,0.430953,1.954488,3.128276,-9.109807,0.990598,3.429903,9.719108,-8.767251,-8.854177,-3.167155,-4.054149,-0.106547,-5.557781,9.787890,-2.736306,-8.040037,-8.079075,-5.002851,5.343599,0.001737,-6.311677,-7.716012,7.103323,9.855755,4.054125,-9.427866,-4.724286,9.606599,1.140953,5.853596,7.896112,-1.480746,1.184418,0.821527,1.404894,8.774198,-9.228131,8.715972,-6.862340,4.631006,1.592835,-7.254499,-6.672216,-5.526573,-7.622154,-6.102781,8.535853,3.622814,6.126236,-1.155697,9.577510,-1.516842,7.752637,7.359645,-9.867713,4.395023,-0.305976,0.689027,-1.257058,2.265816,1.499380,-4.119693,-6.972853], dtype = "float32")#candidate|4150|(288,)|const|float32
call_4148 = relay.TupleGetItem(func_1277_call(relay.reshape(const_4149.astype('float64'), [2, 10, 12]), relay.reshape(const_4150.astype('float32'), [288,]), ), 1)
call_4151 = relay.TupleGetItem(func_1280_call(relay.reshape(const_4149.astype('float64'), [2, 10, 12]), relay.reshape(const_4150.astype('float32'), [288,]), ), 1)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
var_4153 = relay.var("var_4153", dtype = "float32", shape = (1092,))#candidate|4153|(1092,)|var|float32
call_4152 = func_109_call(relay.reshape(var_4153.astype('float32'), [12, 7, 13]))
call_4154 = func_109_call(relay.reshape(var_4153.astype('float32'), [12, 7, 13]))
func_2479_call = mod.get_global_var('func_2479')
func_2482_call = mutated_mod.get_global_var('func_2482')
const_4162 = relay.const([-5.643075,5.119620,4.726754,-6.985935,-0.642067,8.214622,0.747800,-7.524554,-5.790088,-2.386890,-6.827353,-8.616110,2.393171,0.793517,8.202458,7.868341,-0.910843,-7.965341,-7.385422,-2.279027,-5.485121,8.851051,-3.755410,7.252175,7.294083,9.661959,4.670838,-0.292951,7.559378,5.528960,-9.839682,3.720362,7.298085,-8.686499,-7.997850,-7.599839,1.005280,9.124476,7.340665,-9.504089,-6.396863,-0.344812,-8.522388,1.821076,3.317756,-1.965358,3.941320,-3.361092,0.499549,-7.874747,4.091499,-1.306438,-7.361758,-9.174385,-9.777338,-2.501977,-6.580123,-5.915291,0.135502,2.313592,1.498160,-6.906197,1.540094,8.654303,-3.669990,-1.279751,7.287004,-1.883558,-8.325678,6.673002,8.631815,-2.890458,7.070267,-1.358515,-1.971706,1.452021,5.997137,-2.691370,-8.648925,6.530867,3.999343,8.310555,-1.609411,-6.198961,-9.326098,-8.501668,1.688495,-2.419471,4.431805,7.192243,-9.354384,0.823338,-0.012661,-2.903086,-0.689591,7.558746,7.992243,-4.688112,-1.642416,7.697835,-2.983885,3.418383,-3.875361,-7.637682,-8.827087,6.945183,-5.698792,7.809479,-2.876787,-1.635668,5.520755,-8.650057,-5.242780,6.566811,9.437057,2.589113,-1.885121,3.268918,-3.549136,-2.584952,7.325571,2.659319,0.664519,-6.908867,-4.643222,-5.027468,3.341250,7.749072,0.688316,-5.559852,5.873112,-2.190480,-7.569623,-9.841424,-1.256840,-8.552122,-7.868455,2.997227,-8.249800,2.880393,-5.310963,-2.424387,-7.736252,4.270669,-4.389001,-5.742700,-7.118277,5.959884,-2.900883,2.017065,1.117509,-2.237591,-0.312011,3.556254,0.445601,2.831876,-5.110535,0.177811,5.410200,-3.296780,5.944087,7.183202,9.472225,-3.987926,-6.070202,-9.405721,0.605002,7.235710,4.698213,-6.119719,3.002645,-6.020859,-3.341737,-5.380500,6.309385,5.234977,4.804363,-8.337787,-7.394376,-7.582112,-4.731201,-2.090969,8.403959,0.286838,-4.360412,-2.214244,-0.030864,9.635053,-6.443066,-5.002382,-2.158606,-0.990969,3.069462,-2.370372,-7.671239,-6.185119,-7.624131,-2.285865,8.005414,-1.634208,-5.315188,8.641742,5.552208,1.234510,2.960750,9.495184,6.948254,3.798101,-0.022884,-9.057379,0.749097,-6.137494,4.257015,2.435561,-3.912406,-8.526377,-7.999382,8.430461,-8.628205,-0.312801,2.117689,8.869314,6.620921,1.708483,1.538920,-7.187469,-6.762121,-0.983942,-1.289718,-4.777080,3.331388,2.515183,2.867590,0.178699,7.361488,9.044158,-9.042253,3.446404,4.351869,8.526303,5.426337,9.544582,-6.305829,8.801356,-8.011695,-4.547889,9.821184,3.689437,-4.974867,-5.443119,-6.220802,-2.655610,3.889942,9.045799,-5.619694,3.368536,-0.532513,-0.798699,-2.423460,1.122193,3.056955,-1.963159,4.895606,3.959311,-5.139600,9.919795,3.835194,1.743385,-7.644890,-0.908183,-2.433785,-9.989794,-3.699361,8.728219,-5.301587,6.984031,-8.510570,-3.708103,-9.864317,-4.336653,-2.095953,8.688625,0.098760,-4.420948,2.861851,5.045803,-0.909652,9.314214,-8.991993,9.732510,4.464192,-3.290413,-3.337329,-8.329811,5.406472,3.284560,-9.718689,9.182907,-5.662566,7.402121,-4.298266,8.020535,-8.270248,-4.843862,5.215325,-1.246965,-5.012532,4.254596,5.689086,9.191830,-9.832947,-4.600898,-8.466729,-0.994427,3.630487,-0.972828,-6.901534,-1.032541,-6.361736,9.934341,-3.686940,4.423470,2.611989,4.777799,-3.118619,0.841605,-6.567707,3.706921,4.460845,7.560731,-7.824361,1.885316,1.794573,8.129503,-6.590731,8.655790,-4.094995,0.564427,5.968235,3.604818,-7.790863,-3.985742,-4.601508,3.641104,-7.509821,0.970440,-6.670184,3.650240,-0.816196,-0.636149,-6.181649,-5.617074,-9.015038,-8.761737,-5.353847,6.057601,-7.871046,1.770118,1.691716,-8.168345,7.112766,-4.946717,-5.869036,9.773410,9.377921,4.495952,-7.566995,-8.942275,-5.546439,-1.751353,-6.831884,4.050616,-1.118494,-0.589882,6.393837,7.936160,-6.781583,-4.802377,3.361466,6.690701,1.967223,-8.397094,-8.235167,-8.970965,0.487836,-0.404043,-8.503200,-1.165539,-2.564110,6.963487,-3.618029,4.720293,-5.067040,5.690046,7.418619,-1.669941,-2.350913,-6.542318,-0.318087,6.400238,-8.510746,3.901177,1.956070,7.503908,-2.305019,2.232752,3.111547,1.654536,-6.317535,1.714115,-1.004747,5.223271,6.514983,4.067770,-9.241133,8.462299,-9.482493,-6.711900,0.075526,-3.616362,-2.205076,-8.091454,-6.634054,0.217008,-8.162922,-6.470318,6.439121,7.138949,-2.070010,-6.218552,7.501919,9.587075,-7.706499,0.081390,2.108566,-3.335116,3.096364,1.931606,-2.674108,8.785903,3.769037,7.327974,4.803397,8.943517,-4.660191,-8.393372,-4.636585,9.505084,9.652769,-4.398577,-7.150907,-2.088129,7.918235,1.703713,9.679157,-5.372474,7.564012,9.266308,5.847759,-2.718864,-0.732374,6.635251,-4.886051,5.055591,-2.295690,-2.625806,-1.584892,-7.690614,-0.941409,-1.597410,-5.622905,-1.229204,-9.096660,-7.314094,2.741559,9.335241,-2.081705,-5.065725,-0.924855,-3.853559,7.047847,3.261882,-2.475609,0.965327,-9.295549,-0.833238,-2.021985,-9.238231,-5.535793,-6.633014,4.932727,9.030548,4.061930,-8.047170,0.857264,-7.433389,5.083784,7.892113,8.047950,-1.563551,-1.785277,5.291050,2.913329,6.008534,-3.020061,4.078328,-7.851845,6.467298,-4.073281,8.071652,4.557013,-3.692617,4.689925,-6.423176,-0.902273,-5.980883,3.467512,-1.722559,1.382659,-8.684738,7.351270,9.490945,-5.778456,4.285296,-7.484613,-4.384720,-5.515493,-8.390972,-2.459612,5.707239,8.144672,2.158624,1.212940,-3.033386,-5.743506,-2.753473,-5.619203,4.799793,5.373559,-3.691078,0.866810,2.483544,8.100688,8.067819,-6.230775,0.349986,4.043706,-0.719084,-6.401356,1.834448,7.970705,-9.411393,-7.226819,-0.662153,8.642691,6.546454,2.160101,-1.677678,1.456855,5.909517,-2.518180,1.174947,9.651465,-8.908896,-1.095629,-6.051598,-4.676841,-5.819620,-5.942434,-1.005505,1.700500,-4.566498,-3.953670,6.606419,4.516664,0.371037,0.356165,6.416331,-5.024732,-9.067681,2.683518,-7.229436,-6.772152,-7.061253,9.039500,-9.013298,1.045427,6.127675,6.033936,4.872998,1.581760,5.646890,6.623963,-4.149088,-0.545918,8.586494,9.379138,2.411022,-9.374040,5.267962,-3.687418,-3.005432,-8.579229,7.828004,-5.582982,-7.057579,0.797566,7.855102,-2.162044,-4.618676,-2.462221,6.370503,3.310017,9.174182,-7.033661,3.567935,-4.014400,-7.078807,-3.741017,5.276536,-1.307537,-6.165978,5.382576,5.238375,7.146695,-1.833719,0.241648,-3.045256,6.458027,-5.380158,-8.037988,-5.367601,1.506960,3.600399,8.913580,-5.016379,0.282325,6.854008,-7.804708,-5.408325,6.823005,-2.877943,-0.212299,8.458693,-4.354164,-6.329074,-4.980044,-2.655116,6.974246,4.869269,-3.198199,4.077375,-8.189268,-0.548070,1.949471,8.327257,8.423892,7.631932,-0.801727,4.828353,-6.441091,6.623494,7.075118,-0.250822,1.359416,9.177815,3.013399,5.859813,5.961351,0.787084,1.386132,5.283040,-9.159420,-3.451551,-6.023652,2.445915,2.563619,3.134471,-1.634996,-6.509159,5.913266,8.509369,-7.857381,-4.080017,-6.144769,-7.537530,-2.064035,7.099789,-1.924152,9.173503,9.243278,4.753240,7.433323,4.549482,-6.765280,-9.477429,3.432782,-8.174512,-3.283648,-3.428685,-5.852106,-6.959386,-0.056618,3.009175,-8.265095,1.926773,-1.780710,-3.354529,5.835132,3.363094,9.604341,6.368782,-4.784743,-4.311174,2.584669,3.945716,1.733764,-3.201537,5.149104,-4.148238,4.589637,-9.177221,-9.730283,2.482874,-9.314789,0.024560,-4.157857,5.615030,8.005709,-3.984383,-8.883400,-3.201427,4.744888,2.258883,8.214570,-7.685239,-2.918979,-4.874810,-7.656494,-7.939149,-6.285666,-1.633378,5.565500,0.200105,-5.026488,6.129602,-3.169799,-5.976645,-3.464563,-3.621348,-2.409443,-3.924999,6.293508,5.829951,3.871191,0.117394,-4.829239,-0.545344,7.403677,-0.933857,0.235828,-4.684786,8.287585,-6.852904,-1.771722,2.651496,3.196705,2.438576,-3.114118,-6.315132,2.553132,-7.736743,-5.847544,7.942925,-0.689920,3.374710,6.897115,7.842693,-9.419585,-3.006669,3.334882,0.866497,-9.596388,7.160572,-1.629073,-9.967999,5.826602,1.915582,2.105578,9.820220,-6.094541,-0.424091,-0.935403,-4.076403,9.744871,-9.673280,7.949776,0.509217,-8.046079,-7.752154], dtype = "float64")#candidate|4162|(800,)|const|float64
call_4161 = relay.TupleGetItem(func_2479_call(relay.reshape(const_4162.astype('float64'), [16, 5, 10])), 0)
call_4163 = relay.TupleGetItem(func_2482_call(relay.reshape(const_4162.astype('float64'), [16, 5, 10])), 0)
output = relay.Tuple([bop_4118,bop_4141,call_4144,const_4145,call_4148,const_4149,const_4150,call_4152,var_4153,call_4161,const_4162,])
output2 = relay.Tuple([bop_4118,bop_4141,call_4146,const_4145,call_4151,const_4149,const_4150,call_4154,var_4153,call_4163,const_4162,])
func_4168 = relay.Function([var_4116,var_4117,var_4140,var_4153,], output)
mod['func_4168'] = func_4168
mod = relay.transform.InferType()(mod)
mutated_mod['func_4168'] = func_4168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mutated_mod.get_global_var('func_4168')
var_4170 = relay.var("var_4170", dtype = "uint32", shape = (10, 15, 3))#candidate|4170|(10, 15, 3)|var|uint32
var_4171 = relay.var("var_4171", dtype = "uint32", shape = (10, 15, 3))#candidate|4171|(10, 15, 3)|var|uint32
var_4172 = relay.var("var_4172", dtype = "uint32", shape = (10, 15, 3))#candidate|4172|(10, 15, 3)|var|uint32
var_4173 = relay.var("var_4173", dtype = "float32", shape = (1092,))#candidate|4173|(1092,)|var|float32
call_4169 = func_4168_call(var_4170,var_4171,var_4172,var_4173,)
output = call_4169
func_4174 = relay.Function([var_4170,var_4171,var_4172,var_4173,], output)
mutated_mod['func_4174'] = func_4174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4485 = relay.var("var_4485", dtype = "float64", shape = (5, 9, 5))#candidate|4485|(5, 9, 5)|var|float64
uop_4486 = relay.asinh(var_4485.astype('float64')) # shape=(5, 9, 5)
func_1300_call = mod.get_global_var('func_1300')
func_1304_call = mutated_mod.get_global_var('func_1304')
var_4489 = relay.var("var_4489", dtype = "int16", shape = (1, 130))#candidate|4489|(1, 130)|var|int16
const_4490 = relay.const([[-2.665009,-8.065033,0.607634,-4.134814,4.047748,-9.585182,7.543405,-1.103551,2.704500,-8.948080,9.908707,6.254322],[-1.398175,-2.834010,-0.070762,-5.355055,9.780628,-9.738032,-0.815967,5.336386,9.437932,-1.026768,-4.342701,-5.552972],[-9.966149,0.590641,8.919671,-0.088988,5.664736,-0.357107,4.225732,-9.835859,-5.380628,5.560467,1.727130,-4.401553],[-8.900700,3.017844,0.793149,-7.692807,1.591392,7.657564,-1.595839,-3.124620,3.476596,5.104038,7.368722,3.124444],[-7.329796,2.414183,-5.520404,-4.805590,-9.355723,6.050615,-4.434112,9.212629,7.597719,-7.760884,8.334482,-8.433212],[-6.502448,5.365914,6.068991,2.810884,1.804127,-8.358088,-5.280927,-1.049893,-0.923621,-8.973247,-8.311829,-0.995305],[-0.590090,1.810741,9.445280,-9.959287,-4.034369,-8.035596,7.431801,9.342205,-3.793059,-4.532530,6.709396,2.198169],[-0.192168,-0.416293,7.679141,-6.823300,6.641602,2.197018,7.697613,-7.135450,5.473417,-7.090581,-3.896614,7.301410],[8.710384,3.723302,4.811792,-9.634590,-6.669558,-6.408523,-8.264757,-8.474937,-4.086221,-4.665961,7.454503,0.286929],[2.425636,3.515801,-6.463619,-9.974027,-1.930035,-5.091711,-7.844371,6.395980,0.840629,7.170151,7.337041,0.007477],[8.186926,8.356445,8.041337,-4.512458,-2.071366,-6.589759,-2.546160,-8.685738,9.269570,-1.773141,-6.643414,-8.466551],[3.608712,7.691613,7.891079,7.564804,-6.124694,-6.563163,1.719840,9.696515,-5.962045,-8.310340,-8.182371,-0.227543],[9.219042,-7.409497,-5.821452,7.069803,-3.052842,-4.825190,-7.875150,-7.772259,4.401161,-8.050785,4.203404,-6.946719],[6.770673,5.658528,-4.299692,0.309734,-3.065733,2.439268,4.694112,0.760200,9.471573,5.155678,9.150817,-1.853879],[-9.765701,6.455434,-2.992034,-5.831337,6.969822,-9.614526,6.422462,3.570193,3.938033,-6.403636,-2.359385,-6.256354],[-3.034862,6.960255,3.365341,-9.015339,-6.513333,-3.551119,1.264416,-0.195967,-1.166967,-3.839140,2.382582,6.793808],[-2.032702,9.666469,0.223031,-7.544803,5.765467,8.304043,-6.166539,9.238073,-4.046464,1.096150,-0.252988,-7.191966],[-1.398035,-0.367870,-0.079790,-6.389501,6.007387,2.719059,5.569921,-7.328167,4.233918,-2.278999,8.287573,-6.765854],[8.668362,-2.499320,-6.624853,-7.511849,6.097387,-2.351299,-4.279490,9.593464,-2.277067,8.817329,-4.476853,-6.635185],[1.530928,3.566479,-5.195071,-2.940227,-7.429875,6.423169,5.682752,5.660432,-3.539782,3.632156,3.469838,1.715921],[2.398972,9.879568,-3.699837,-4.073790,-6.886573,4.410623,1.768986,-5.548297,-0.760916,-7.796524,5.231080,-4.169897],[0.789978,7.136802,-0.537952,-3.449732,0.673653,-7.895243,-0.713797,0.503598,-2.290348,1.259437,4.117317,7.761109],[-7.274102,8.569073,-7.713340,8.372338,5.290793,-0.006965,5.756390,-7.328713,-3.499931,2.219846,0.486813,-6.515972],[2.180879,5.193907,5.286643,-5.008422,6.965659,-4.997027,6.015508,3.606125,-5.991975,7.274452,2.452318,-9.752059]], dtype = "float32")#candidate|4490|(24, 12)|const|float32
call_4488 = relay.TupleGetItem(func_1300_call(relay.reshape(var_4489.astype('int16'), [13, 2, 5]), relay.reshape(const_4490.astype('float32'), [8, 36]), ), 0)
call_4491 = relay.TupleGetItem(func_1304_call(relay.reshape(var_4489.astype('int16'), [13, 2, 5]), relay.reshape(const_4490.astype('float32'), [8, 36]), ), 0)
output = relay.Tuple([uop_4486,call_4488,var_4489,const_4490,])
output2 = relay.Tuple([uop_4486,call_4491,var_4489,const_4490,])
func_4519 = relay.Function([var_4485,var_4489,], output)
mod['func_4519'] = func_4519
mod = relay.transform.InferType()(mod)
var_4520 = relay.var("var_4520", dtype = "float64", shape = (5, 9, 5))#candidate|4520|(5, 9, 5)|var|float64
var_4521 = relay.var("var_4521", dtype = "int16", shape = (1, 130))#candidate|4521|(1, 130)|var|int16
output = func_4519(var_4520,var_4521,)
func_4522 = relay.Function([var_4520,var_4521,], output)
mutated_mod['func_4522'] = func_4522
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4605 = relay.const([[[-0.765294,-9.045092,2.495616,3.109316,-9.122124,3.489424,8.951455,-6.587969,3.116670],[3.469796,-4.099699,8.614781,-9.591469,-3.688311,3.436308,-0.926051,-9.379227,9.592680],[7.970337,4.538556,2.239315,1.869446,-2.431607,-1.472261,-8.069912,4.835875,9.032077],[9.637317,-6.431371,6.374199,8.393619,6.212509,-1.573130,-8.224222,7.066311,7.103156],[-6.368676,0.585604,9.528258,-1.875751,-9.001864,-3.419182,-7.043931,5.927399,3.572663],[8.257898,1.919998,-4.511679,4.713012,1.112133,8.443580,7.174986,-5.587581,-0.687909]],[[-7.966570,6.493779,8.236952,-6.103871,1.321120,-7.330454,-4.857417,3.564318,0.721523],[-5.362524,-1.307406,0.381945,-2.371871,6.468149,-3.135209,-0.252717,-6.008619,1.916608],[-2.169713,-2.641272,9.682689,-9.533928,-1.694626,1.612959,-9.908500,-6.176210,-5.087774],[-1.724656,-9.378004,3.526553,2.569711,6.777625,3.983335,4.215784,-0.111528,1.161383],[8.617014,2.960841,0.936160,9.498795,-0.049875,7.548585,8.158766,-3.766373,4.477488],[-7.450648,7.078339,9.564329,-4.008294,-1.776393,-7.534901,3.935326,-2.239926,0.141252]]], dtype = "float32")#candidate|4605|(2, 6, 9)|const|float32
const_4606 = relay.const([[[1.241452,-1.769363,-1.489470,-5.459593,4.953732,-3.538271,-4.168414,8.828769,-1.481464],[9.872451,-5.037671,-3.744416,0.313100,-8.027976,5.599882,8.588635,-0.046414,3.524483],[3.957492,5.559756,6.062260,1.973030,2.825791,3.115778,-9.802265,1.082289,-3.067768],[-3.062861,-3.123546,-5.521435,3.010678,-1.441764,6.757965,-4.210546,8.430614,8.920299],[-4.954178,-2.698396,6.430117,0.312451,-9.381674,-2.329451,3.163467,-9.340280,-7.375097],[1.004159,-7.555544,1.945860,4.552545,7.719342,3.394915,6.634409,5.987037,0.243088]],[[-1.467827,-0.342668,2.643092,9.379204,-6.885951,-3.663561,7.183275,-2.212967,5.427048],[8.270476,7.731008,1.183105,-0.941890,-6.651607,5.174761,-4.647554,3.309427,-0.722533],[-6.168630,3.272316,-8.366724,6.416496,6.566341,6.233941,8.325412,9.409635,9.011854],[3.743728,0.828406,3.130665,0.079818,-9.134323,5.645401,-4.925264,2.372980,-7.000528],[7.315883,7.797033,8.532893,-7.886335,1.259719,1.973077,-2.901129,-9.368693,4.258457],[-6.434718,-1.722530,6.626434,-0.978094,6.479169,6.612527,5.885429,3.915762,5.393770]]], dtype = "float32")#candidate|4606|(2, 6, 9)|const|float32
bop_4607 = relay.greater(const_4605.astype('bool'), relay.reshape(const_4606.astype('bool'), relay.shape_of(const_4605))) # shape=(2, 6, 9)
output = relay.Tuple([bop_4607,])
output2 = relay.Tuple([bop_4607,])
func_4611 = relay.Function([], output)
mod['func_4611'] = func_4611
mod = relay.transform.InferType()(mod)
mutated_mod['func_4611'] = func_4611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4611_call = mutated_mod.get_global_var('func_4611')
call_4612 = func_4611_call()
output = call_4612
func_4613 = relay.Function([], output)
mutated_mod['func_4613'] = func_4613
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4631 = relay.const([[[-3,4,-5,6,-5,10,-4],[-9,-3,-1,7,10,-1,-1],[10,4,2,-3,-2,-9,-5],[5,9,4,-8,-7,-4,7],[9,-2,1,-4,5,-10,-10]],[[4,-7,-5,-10,2,-4,3],[3,5,-1,3,-6,-4,8],[-8,2,2,-8,8,5,-7],[7,9,3,4,-3,-5,5],[10,1,10,7,-3,-8,-6]],[[-2,-6,-5,1,-8,-4,-3],[10,6,1,-7,1,4,10],[8,9,-8,-9,7,-3,-6],[-8,3,8,7,7,2,-7],[-3,-8,-2,10,-1,5,10]],[[5,-4,-4,-10,-8,-2,2],[-4,-10,-5,-9,7,-6,-10],[-6,-10,6,-3,-3,-5,-3],[-10,10,-3,3,9,4,-3],[4,-3,4,1,-7,10,-1]],[[-3,-3,7,-6,-4,-10,-3],[8,-5,9,-3,1,-3,-2],[8,-10,-8,-5,6,7,2],[-2,-2,-3,3,6,5,3],[6,2,1,-9,5,-5,-5]],[[1,-10,2,-3,10,7,5],[-3,-1,-6,-7,5,5,7],[-10,-2,10,4,-3,-9,5],[7,1,10,1,2,-4,-3],[6,-9,-2,9,-3,8,-2]],[[-7,6,-8,-5,6,6,-5],[7,-9,8,1,-9,6,5],[-5,2,5,7,-4,4,2],[1,10,7,-3,7,7,-8],[5,-8,10,2,9,-9,-4]],[[4,-10,-5,-5,10,-7,5],[1,8,7,-6,-5,2,-10],[8,1,3,-9,4,1,5],[10,-6,3,7,-10,-9,-3],[-1,-2,-10,9,6,2,-3]],[[3,4,7,-4,-4,4,-6],[-10,-6,6,8,-10,-9,-6],[-6,5,8,-5,-9,-7,2],[10,-4,8,1,-7,10,-7],[-6,10,-3,-3,6,6,-7]],[[-10,-4,-8,1,8,10,1],[3,-8,1,2,5,-3,-3],[6,-1,2,7,6,6,1],[9,7,-8,-2,-3,2,-10],[-8,-3,-7,-1,2,7,-9]],[[3,-10,-10,6,-1,6,5],[-3,3,1,4,-4,7,6],[-5,-8,2,1,-4,-1,-7],[9,7,10,1,-7,9,3],[-7,-1,-3,1,8,9,-8]],[[7,9,1,7,-5,-1,5],[-4,-10,-7,-5,2,6,-7],[4,-5,-5,8,-8,5,3],[-8,10,9,4,10,6,7],[-4,5,2,-10,4,-10,4]],[[8,3,-8,-7,-2,-2,-2],[4,8,-4,7,-5,-2,8],[-3,-9,-10,6,-7,2,6],[2,2,-7,-8,-7,6,6],[3,10,-6,7,-3,-1,-8]]], dtype = "int8")#candidate|4631|(13, 5, 7)|const|int8
var_4632 = relay.var("var_4632", dtype = "int8", shape = (13, 5, 7))#candidate|4632|(13, 5, 7)|var|int8
bop_4633 = relay.bitwise_xor(const_4631.astype('int8'), relay.reshape(var_4632.astype('int8'), relay.shape_of(const_4631))) # shape=(13, 5, 7)
func_1277_call = mod.get_global_var('func_1277')
func_1280_call = mutated_mod.get_global_var('func_1280')
const_4643 = relay.const([[6.529450],[9.740116],[2.773660],[4.724981],[-2.298537],[2.669713],[-9.781800],[0.223340],[8.565274],[-3.789074],[4.401680],[-4.895586],[8.829785],[-4.222917],[8.278333],[4.427061],[-8.197427],[-4.382950],[2.537766],[-2.305015],[-2.709477],[1.522943],[9.809260],[-4.519439],[7.419514],[-0.990655],[-0.985033],[-3.934160],[-0.975220],[1.900118],[5.239266],[-9.505137],[8.707890],[7.191546],[0.252796],[5.670977],[2.706053],[-7.453315],[0.984741],[-5.362351],[1.311552],[-1.779587],[7.713891],[-4.053803],[7.973148],[7.841995],[-0.180344],[-1.190906],[3.509898],[6.953246],[4.808125],[-2.158028],[4.373364],[-1.404186],[5.041440],[9.365110],[6.957514],[-0.284864],[-4.959828],[-2.370815],[3.900489],[-8.857803],[-2.501936],[0.313601],[-7.345118],[-2.654485],[6.572431],[5.232704],[5.414505],[-6.501859],[-7.815222],[-5.496383],[3.804509],[-2.851049],[0.538337],[7.545636],[-8.984845],[-2.252358],[-0.472049],[-3.974055],[-4.844834],[-4.991780],[3.910824],[-8.625721],[5.284873],[-3.354236],[1.169705],[6.267908],[5.318703],[-9.321253],[0.430863],[8.236567],[-2.768934],[-9.161889],[-5.160971],[4.804182],[7.272581],[-9.018201],[8.010368],[3.616351],[1.069071],[-8.757874],[-8.828421],[9.872296],[0.779430],[-2.440055],[5.430870],[3.095691],[-9.284071],[-5.538265],[-3.567887],[6.261117],[-4.555844],[6.995485],[9.331119],[-3.671695],[-9.621588],[3.624121],[8.071355],[-5.713882],[-9.938453],[8.870325],[1.682850],[7.905577],[-6.908254],[-9.237827],[-4.834275],[-9.543851],[8.647716],[-3.884498],[-6.221175],[-2.019093],[-0.330941],[-9.448084],[-7.277622],[-7.970531],[1.840378],[9.826535],[-5.443331],[-7.732011],[-9.640173],[-1.397401],[7.543999],[2.847506],[-4.110156],[5.986126],[6.250122],[8.172051],[4.450915],[5.705968],[-6.817863],[-7.614756],[6.961451],[-8.879672],[3.054951],[-3.233732],[6.733599],[-3.958190],[7.777173],[-8.642215],[7.061139],[-4.586313],[5.030952],[-5.477318],[9.013656],[-3.888408],[-2.162189],[-2.021948],[-1.084358],[4.514958],[5.321001],[-9.926623],[-5.472761],[8.198443],[-6.921035],[1.660841],[1.117801],[-5.540197],[1.751366],[8.080015],[-8.284977],[8.054453],[0.336718],[-3.196054],[-9.428084],[8.145530],[1.415637],[5.918152],[-3.127245],[9.494562],[-5.754575],[-7.232128],[7.443054],[-3.656384],[-7.879561],[3.581889],[7.225248],[1.945445],[-3.994750],[8.578949],[6.654952],[9.203977],[-5.021358],[1.181137],[1.013273],[5.480498],[1.496831],[-1.077183],[2.238991],[-2.989154],[-2.244330],[-9.751775],[-5.322293],[-5.119433],[-9.222455],[0.801220],[-3.128795],[-3.109339],[5.270465],[4.392123],[5.468047],[-1.017038],[4.042559],[4.718997],[1.509700],[-7.244185],[4.872237],[-4.120753],[-1.891923],[6.313220],[-3.506976],[-5.360547],[5.138818],[2.208782],[-6.929957],[6.135699],[1.732365],[4.546073],[-1.011634],[9.923177]], dtype = "float64")#candidate|4643|(240, 1)|const|float64
var_4644 = relay.var("var_4644", dtype = "float32", shape = (288,))#candidate|4644|(288,)|var|float32
call_4642 = relay.TupleGetItem(func_1277_call(relay.reshape(const_4643.astype('float64'), [2, 10, 12]), relay.reshape(var_4644.astype('float32'), [288,]), ), 0)
call_4645 = relay.TupleGetItem(func_1280_call(relay.reshape(const_4643.astype('float64'), [2, 10, 12]), relay.reshape(var_4644.astype('float32'), [288,]), ), 0)
output = relay.Tuple([bop_4633,call_4642,const_4643,var_4644,])
output2 = relay.Tuple([bop_4633,call_4645,const_4643,var_4644,])
func_4648 = relay.Function([var_4632,var_4644,], output)
mod['func_4648'] = func_4648
mod = relay.transform.InferType()(mod)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mutated_mod.get_global_var('func_4648')
var_4650 = relay.var("var_4650", dtype = "int8", shape = (13, 5, 7))#candidate|4650|(13, 5, 7)|var|int8
var_4651 = relay.var("var_4651", dtype = "float32", shape = (288,))#candidate|4651|(288,)|var|float32
call_4649 = func_4648_call(var_4650,var_4651,)
output = call_4649
func_4652 = relay.Function([var_4650,var_4651,], output)
mutated_mod['func_4652'] = func_4652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4611_call = mod.get_global_var('func_4611')
func_4613_call = mutated_mod.get_global_var('func_4613')
call_4806 = relay.TupleGetItem(func_4611_call(), 0)
call_4807 = relay.TupleGetItem(func_4613_call(), 0)
output = relay.Tuple([call_4806,])
output2 = relay.Tuple([call_4807,])
func_4810 = relay.Function([], output)
mod['func_4810'] = func_4810
mod = relay.transform.InferType()(mod)
mutated_mod['func_4810'] = func_4810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mutated_mod.get_global_var('func_4810')
call_4811 = func_4810_call()
output = call_4811
func_4812 = relay.Function([], output)
mutated_mod['func_4812'] = func_4812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_4872 = relay.TupleGetItem(func_4810_call(), 0)
call_4873 = relay.TupleGetItem(func_4812_call(), 0)
output = call_4872
output2 = call_4873
func_4898 = relay.Function([], output)
mod['func_4898'] = func_4898
mod = relay.transform.InferType()(mod)
mutated_mod['func_4898'] = func_4898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mutated_mod.get_global_var('func_4898')
call_4899 = func_4898_call()
output = call_4899
func_4900 = relay.Function([], output)
mutated_mod['func_4900'] = func_4900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_4929 = relay.TupleGetItem(func_4810_call(), 0)
call_4930 = relay.TupleGetItem(func_4812_call(), 0)
func_4648_call = mod.get_global_var('func_4648')
func_4652_call = mutated_mod.get_global_var('func_4652')
var_4932 = relay.var("var_4932", dtype = "int8", shape = (455,))#candidate|4932|(455,)|var|int8
const_4933 = relay.const([-2.411135,-0.536149,5.081141,7.115473,-6.354056,3.113776,-1.141908,-6.666213,-8.851696,-5.470467,3.963283,7.540747,-9.103391,-9.898807,1.756045,-9.172227,4.971891,-1.785837,7.637222,4.012893,-7.962625,6.250519,2.752098,8.419795,6.133169,9.861770,-0.654411,5.655286,8.947064,-3.492120,9.184430,0.857834,-5.444669,-9.546877,1.606424,3.895329,-0.016104,-3.781156,3.981641,2.031217,-1.604919,0.644182,0.569608,1.844764,4.695760,-9.249059,-9.637486,5.023711,2.793651,-3.934205,2.945568,-1.795503,-3.895064,4.043308,-2.232109,5.145027,6.846488,-3.133304,8.500188,-5.039372,9.653989,6.186281,-5.840266,-4.574597,-2.660974,-9.083022,2.355590,-7.682285,-4.246673,7.635477,-5.171023,4.670928,2.434225,7.305165,4.717144,2.784638,-2.598957,-0.426801,0.632217,-1.659907,2.525225,5.459953,9.641747,1.447910,-4.584748,5.455988,0.667107,-6.470048,-4.914993,4.048260,5.034258,-7.662705,0.705196,-8.615402,-1.018986,0.941485,-5.278726,-5.556825,-3.128991,4.389029,-4.544262,4.966002,6.780812,-1.699886,0.448718,7.203365,9.991656,-0.617109,-9.727479,1.838854,6.037596,-4.408401,-8.604651,-1.710722,-6.067466,6.408926,-8.159859,-2.583724,-3.216280,4.668391,-0.802245,0.657280,-5.290154,2.701274,-7.349897,5.673302,2.889334,4.489527,-4.563920,-2.294555,5.612694,4.108674,-6.266288,6.725836,7.245391,6.550929,6.801628,6.538123,-1.107698,-4.553026,8.711660,7.312127,-7.361457,-2.564563,-6.002263,6.789476,-2.394685,9.892612,0.001539,-4.620695,0.410533,-9.426895,-3.953683,-6.648198,-3.460344,8.286895,3.284340,-1.809383,-2.481573,-1.321165,1.234067,-8.937272,8.276289,7.152837,9.167547,5.846921,1.853416,4.721614,1.726808,-2.619364,7.855438,6.398338,-6.485492,-8.551695,5.656494,5.399564,-6.489362,-7.973123,9.759739,-2.031992,3.550402,1.938767,-8.189231,-0.570991,6.426466,0.135446,8.703640,5.898492,9.462697,-0.747685,-2.950388,6.190439,6.917642,-1.365896,3.982388,6.353850,-1.813716,6.277718,-3.598475,-7.357795,6.023507,-5.072945,2.482815,-5.156324,3.976931,6.733680,9.772349,-4.177166,-7.764349,3.803759,-2.599583,9.936325,-6.533633,6.775547,-2.240207,-2.091481,8.360435,-9.476982,-8.028753,5.837777,0.854897,1.303098,-6.612616,-8.283141,3.238537,-2.066518,-3.050122,-3.557563,9.495255,8.516021,-5.032092,0.343675,-9.995734,-8.639143,-1.940373,-4.692795,-5.367584,-3.927303,-0.798463,0.561181,8.217942,9.348547,0.499327,-5.163479,6.373971,2.278020,0.883579,4.418719,-1.558288,-5.304586,-2.776141,0.587824,-8.577094,2.107708,-6.399652,-3.603228,-7.285412,4.639601,-3.191032,-5.891653,-1.722772,0.670367,-3.447610,9.610024,-1.637407,-7.929874,5.595827,4.478674,0.719094,-6.160180,7.659364,4.615589,-3.237342,-3.271706,-2.947531,-1.940609,-5.441491,-0.169236,-5.781287,1.042783,7.147103,6.027124,9.974710,7.134791,6.625559,-3.499637,-0.499613,2.766126], dtype = "float32")#candidate|4933|(288,)|const|float32
call_4931 = relay.TupleGetItem(func_4648_call(relay.reshape(var_4932.astype('int8'), [13, 5, 7]), relay.reshape(const_4933.astype('float32'), [288,]), ), 1)
call_4934 = relay.TupleGetItem(func_4652_call(relay.reshape(var_4932.astype('int8'), [13, 5, 7]), relay.reshape(const_4933.astype('float32'), [288,]), ), 1)
output = relay.Tuple([call_4929,call_4931,var_4932,const_4933,])
output2 = relay.Tuple([call_4930,call_4934,var_4932,const_4933,])
func_4958 = relay.Function([var_4932,], output)
mod['func_4958'] = func_4958
mod = relay.transform.InferType()(mod)
mutated_mod['func_4958'] = func_4958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4959 = relay.var("var_4959", dtype = "int8", shape = (455,))#candidate|4959|(455,)|var|int8
func_4958_call = mutated_mod.get_global_var('func_4958')
call_4960 = func_4958_call(var_4959)
output = call_4960
func_4961 = relay.Function([var_4959], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5032 = func_4898_call()
call_5033 = func_4898_call()
output = call_5032
output2 = call_5033
func_5060 = relay.Function([], output)
mod['func_5060'] = func_5060
mod = relay.transform.InferType()(mod)
output = func_5060()
func_5061 = relay.Function([], output)
mutated_mod['func_5061'] = func_5061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5060_call = mod.get_global_var('func_5060')
func_5061_call = mutated_mod.get_global_var('func_5061')
call_5083 = func_5060_call()
call_5084 = func_5060_call()
output = call_5083
output2 = call_5084
func_5085 = relay.Function([], output)
mod['func_5085'] = func_5085
mod = relay.transform.InferType()(mod)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mutated_mod.get_global_var('func_5085')
call_5086 = func_5085_call()
output = call_5086
func_5087 = relay.Function([], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5091 = func_4898_call()
call_5092 = func_4898_call()
func_1027_call = mod.get_global_var('func_1027')
func_1030_call = mutated_mod.get_global_var('func_1030')
const_5097 = relay.const([[10,-5],[3,-3],[5,4],[-6,8],[-7,-7],[-10,-6],[4,8],[9,-5],[9,1],[-8,-10],[8,-4],[-2,-4],[-7,-2],[2,3],[-5,9],[-2,-3],[4,2],[10,-5],[-7,1],[-1,6],[7,-6],[4,-7],[2,-3],[2,-5],[1,8],[-9,-8],[-4,-4],[5,5],[-6,1],[4,-10],[-5,3],[2,4],[3,-5],[-9,-7],[-3,7],[10,1],[7,-7],[9,-7],[4,-2],[6,-8],[-9,3],[5,8],[2,-7],[1,10],[10,-9],[9,-5],[-6,7],[-2,2],[9,7],[7,5],[3,4],[10,2],[-5,2],[6,7],[4,-3],[3,6],[-5,8],[-2,-3],[-7,-9],[-3,8],[1,-2],[-7,9],[2,-6],[1,7],[-6,-8],[-9,3],[8,-2],[6,-10],[10,-4],[-8,-6],[6,5],[5,3],[-8,2],[-4,3],[1,-4],[7,-4],[4,4],[2,4],[6,-9],[-3,4],[5,-1],[3,10],[3,-10],[8,7],[-3,-5],[5,-5],[1,1],[6,9],[3,10],[-6,-1],[4,1],[-7,-3],[-1,5],[10,-6],[4,6],[5,3],[5,-8],[-4,2],[-2,2],[-1,-10],[-5,-10],[-5,-5],[8,-10],[7,2],[9,-5],[-1,-2],[9,-2],[9,7],[-7,9],[7,-2],[5,7],[9,2],[-1,10],[-5,5],[-4,-6],[-1,9],[2,-1],[-9,-2],[-8,6],[10,3],[6,-1],[6,5],[-5,5],[4,3],[9,4],[8,2],[-9,-3],[-6,-10],[10,1],[9,5],[7,-7],[1,8],[5,-8],[2,-7],[10,-7],[6,9],[1,1],[-8,-2],[-4,7],[-1,7],[-6,9],[7,-8],[7,3],[3,9],[-4,3],[-7,-6],[-6,-10],[5,-4],[-4,-1],[-8,8],[-4,-9],[5,-2],[10,-10],[10,10],[6,-4],[-7,5],[1,2],[7,-7],[3,10],[5,6],[5,4],[9,-1],[6,-9],[6,-6],[-10,-10],[-10,-9],[-4,10],[9,7],[-1,9],[-7,-6],[-8,7],[9,-2],[-4,7],[1,9],[-3,5],[7,7],[-4,-10],[7,-3],[-3,10],[6,10],[-6,5],[2,-3],[5,10],[3,-9],[-2,-8],[-7,7],[-1,-1],[-10,-8],[9,-6],[-5,8],[8,-1],[-5,-5],[-3,9],[4,-9],[2,-4],[2,-1],[-5,-2],[5,-2],[9,-3],[6,-3],[-3,-1],[8,-3],[-2,3],[9,3],[-8,-6],[-6,-5],[2,1],[-5,6],[-9,-4],[7,-7],[6,-2],[-3,-9],[-1,-5],[3,-4],[-7,-2],[-3,2],[-7,9],[4,4],[-6,-5],[1,-10],[-10,1],[-5,8],[-2,-6],[-3,7],[5,-6],[1,-8],[-6,4],[10,-2],[-10,-6],[8,9],[-6,-6],[-1,9],[-10,6],[-4,-6],[1,10],[5,2],[4,10],[-3,3],[4,-8],[-4,-3],[-1,4],[3,-6],[10,-6],[7,-10],[-7,3],[9,-7],[5,8],[-2,4],[9,-7],[-7,-9],[-8,-4],[4,-7],[4,8],[8,-6],[1,-2],[4,4],[-5,-10],[-5,-3],[-3,-1],[-1,-7],[-10,8],[-10,-9],[-8,-4],[1,10],[3,10],[8,-3],[10,-7],[2,-6],[8,-8],[-8,-1],[-2,-3],[-5,8],[-2,5],[2,10],[-4,1],[-2,10],[-10,-10],[7,-9],[6,-3],[6,8],[2,7],[-3,-5],[5,-5],[-4,-8],[-3,-7],[10,3],[-7,-7],[-10,10],[-10,7],[5,10],[-10,6],[10,-2],[-4,7],[-4,-10],[-9,-5],[-3,2],[-3,5],[-10,7],[-2,6],[9,-8],[7,-9],[-8,-2],[-7,5],[-4,-1],[5,-3],[5,-7],[-3,2],[2,-4],[-7,-10],[1,1],[10,8],[-4,-9],[9,8],[-3,10],[9,-9],[1,-2],[6,3],[-5,-9],[-2,-9],[8,-9],[-1,8],[3,2],[-1,5],[-4,-10],[8,-2],[-10,7],[8,2],[5,2],[8,2],[9,3],[4,-1],[4,1],[-9,-8],[5,-2],[-1,-8],[6,2],[1,5],[-7,1],[-8,-10],[-8,-8],[-7,5],[-10,-3],[-1,-9],[3,3],[5,-4],[-8,-6],[9,-1],[-8,-1],[3,-4],[-5,6],[-10,-5],[8,6],[9,8],[9,6],[-9,-5],[3,-3],[-4,-1],[-6,6],[-4,10],[10,7],[-10,-9],[-10,-6],[-9,7],[9,-8],[9,-1],[-6,2],[10,4],[-1,-9],[6,9],[10,-5],[4,-1],[-4,-5],[8,-9],[-5,-6],[6,-4],[9,-6],[-1,2],[-10,-2],[-1,-9],[-4,9],[2,-8],[-10,1],[4,-10],[9,9],[3,-3],[8,-7],[-8,3],[1,-4],[9,-10],[-8,-4],[-4,-5],[-2,-3],[8,10],[-1,5],[5,1],[-2,-9],[-9,-10],[1,7],[-8,-8],[-9,-7],[-9,10],[-6,-7],[-7,-7],[3,9],[-6,-7],[3,-2],[-8,-3],[-3,1],[7,-2],[-8,-4],[-7,-3],[-6,2],[-9,8],[-7,-3],[3,10],[-6,10],[2,-8],[10,7],[-4,10],[3,3],[5,6],[-4,-4],[4,-2],[5,-8],[3,9],[-2,3],[-9,6],[-4,-5],[-10,10],[-9,10],[-8,-8],[6,10],[-5,-5],[9,1],[-10,1],[-5,3],[-7,-9],[7,4],[2,8],[9,7],[1,1],[7,-8],[-8,-1],[7,-8],[8,3],[-5,-3],[-10,-2],[1,2],[-1,-1],[-4,5],[10,-5],[-3,1],[8,-9],[2,9],[2,-2],[-1,2],[7,10],[4,3],[3,-1],[1,-8],[-10,2],[-8,6],[2,-1],[-2,5],[-6,-1],[2,4],[-4,-4],[9,-5],[-8,10],[10,3],[2,7],[7,-3],[8,-5],[2,8],[4,-2],[-3,-1],[4,6],[-7,-7],[5,5],[7,6],[6,8],[1,-3],[-9,10],[-3,-4],[4,2],[10,-2],[-3,-6],[-7,-8],[4,-10],[-5,1],[-9,5],[-2,9],[-10,7],[10,5],[-6,-6],[5,-5],[-3,5],[-7,1],[7,-8],[-8,7],[7,7],[5,3],[-5,4],[6,-9],[4,6],[-2,7],[-6,10],[-1,-1],[3,8],[-10,-9],[1,-4],[-5,-5],[-9,-10],[1,-10],[-2,10],[-9,4],[6,10],[-4,-10],[-4,-3],[7,10],[2,-7],[-7,9],[-9,-5],[-7,-10],[2,9],[-1,-4],[-3,-6],[8,6],[-5,-2],[-10,-4],[-7,9],[7,-8],[-1,8],[10,-9],[-10,3],[10,-7],[-10,7],[-7,1],[9,1],[-1,-6],[10,6],[-5,-10],[1,-10],[-3,-6],[-5,5],[4,-7],[5,-9],[-9,-1],[-1,8],[4,-1],[-1,6],[8,-7],[4,5],[7,3],[4,-2],[-8,-1],[-2,5],[8,2],[6,3],[9,7],[3,3],[7,-4],[9,3],[9,-6],[-4,-8],[4,-2],[-6,-4],[-7,10],[6,10],[1,-4],[9,8],[3,10],[3,-10],[8,9],[8,-10],[-6,-5],[-6,-8],[10,-7],[-9,-1],[-7,2],[9,-10],[3,-2],[3,-8],[-4,3],[-1,-7],[3,1],[9,6],[3,7],[-7,8],[6,-5],[-1,8],[-5,5],[2,-6],[-8,-6],[-9,4],[-8,3],[-9,9],[10,-2],[6,-6],[3,-6]], dtype = "int8")#candidate|5097|(600, 2)|const|int8
call_5096 = relay.TupleGetItem(func_1027_call(relay.reshape(const_5097.astype('int8'), [15, 5, 16]), relay.reshape(const_5097.astype('int8'), [15, 5, 16]), ), 0)
call_5098 = relay.TupleGetItem(func_1030_call(relay.reshape(const_5097.astype('int8'), [15, 5, 16]), relay.reshape(const_5097.astype('int8'), [15, 5, 16]), ), 0)
output = relay.Tuple([call_5091,call_5096,const_5097,])
output2 = relay.Tuple([call_5092,call_5098,const_5097,])
func_5117 = relay.Function([], output)
mod['func_5117'] = func_5117
mod = relay.transform.InferType()(mod)
output = func_5117()
func_5118 = relay.Function([], output)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_5127 = relay.TupleGetItem(func_4810_call(), 0)
call_5128 = relay.TupleGetItem(func_4812_call(), 0)
func_1996_call = mod.get_global_var('func_1996')
func_1999_call = mutated_mod.get_global_var('func_1999')
var_5136 = relay.var("var_5136", dtype = "uint8", shape = (160,))#candidate|5136|(160,)|var|uint8
call_5135 = relay.TupleGetItem(func_1996_call(relay.reshape(var_5136.astype('uint8'), [10, 4, 4]), relay.reshape(var_5136.astype('uint8'), [10, 4, 4]), ), 2)
call_5137 = relay.TupleGetItem(func_1999_call(relay.reshape(var_5136.astype('uint8'), [10, 4, 4]), relay.reshape(var_5136.astype('uint8'), [10, 4, 4]), ), 2)
output = relay.Tuple([call_5127,call_5135,var_5136,])
output2 = relay.Tuple([call_5128,call_5137,var_5136,])
func_5143 = relay.Function([var_5136,], output)
mod['func_5143'] = func_5143
mod = relay.transform.InferType()(mod)
var_5144 = relay.var("var_5144", dtype = "uint8", shape = (160,))#candidate|5144|(160,)|var|uint8
output = func_5143(var_5144)
func_5145 = relay.Function([var_5144], output)
mutated_mod['func_5145'] = func_5145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_5243 = relay.TupleGetItem(func_4810_call(), 0)
call_5244 = relay.TupleGetItem(func_4812_call(), 0)
func_1027_call = mod.get_global_var('func_1027')
func_1030_call = mutated_mod.get_global_var('func_1030')
var_5253 = relay.var("var_5253", dtype = "int8", shape = (1200,))#candidate|5253|(1200,)|var|int8
call_5252 = relay.TupleGetItem(func_1027_call(relay.reshape(var_5253.astype('int8'), [15, 5, 16]), relay.reshape(var_5253.astype('int8'), [15, 5, 16]), ), 0)
call_5254 = relay.TupleGetItem(func_1030_call(relay.reshape(var_5253.astype('int8'), [15, 5, 16]), relay.reshape(var_5253.astype('int8'), [15, 5, 16]), ), 0)
func_130_call = mod.get_global_var('func_130')
func_133_call = mutated_mod.get_global_var('func_133')
const_5256 = relay.const([[-3.215620,-6.808091,-9.769970,-1.942891,-6.513434,-5.126443,6.853108,-1.908865,1.347362,-1.198430,2.347875,-9.898137],[5.797051,-1.782042,-7.202165,3.810119,2.025694,5.258341,-3.119811,-2.022967,-7.772240,-4.286175,-5.846129,6.346911],[9.956234,-7.771643,-2.822906,2.650610,-9.445242,3.793770,9.949990,-0.191180,-6.872486,-0.877565,1.179585,7.102329],[7.415749,9.231955,9.620177,9.770752,-9.874277,6.089327,-3.185987,-6.002814,-7.406357,9.299478,5.331528,-2.498431],[-4.293929,-5.280248,-2.543141,6.286752,-5.733057,5.037232,8.318287,-5.586575,0.318574,-2.939868,-0.007964,-5.356065],[-7.927144,-2.833461,3.910065,2.743013,-6.346665,8.847471,-0.600565,-7.725169,-0.767050,-4.433874,7.803905,5.502675],[-8.276628,-4.284660,6.100954,6.705539,9.553370,2.060074,-4.436806,-4.359988,-7.986660,1.937757,-9.767823,1.235959],[-1.305804,-4.363262,-5.386796,-6.851516,-5.768741,0.124514,2.853341,5.248936,9.195457,-4.693223,-8.518448,-4.420943],[-1.689520,1.512592,2.533959,7.843207,-7.610847,1.230973,-3.662871,1.534597,5.275686,-5.449813,6.757828,5.108690],[-0.118436,-7.803131,-0.917189,4.936747,6.107204,5.498082,-9.734225,-4.452565,-2.108973,0.912862,7.050744,8.382715],[-5.786257,9.557798,-8.732950,-5.204423,-9.662243,5.941027,1.455468,-8.150140,2.336691,3.218417,-1.469466,-7.791717],[-2.669331,5.952602,-0.705130,-5.087550,-7.020957,-3.001664,-4.272107,8.493967,5.442667,1.143606,-2.875382,3.199244],[9.525109,6.616874,-1.138423,-1.163722,5.944729,-0.458538,8.000000,-4.975658,2.846276,-0.105203,2.524319,-2.893976],[-0.613125,2.734236,2.922751,-2.297003,-8.811803,6.172177,6.786823,9.845911,6.817040,-7.229570,-2.664020,4.919282],[6.781117,5.657626,9.075245,0.946499,7.680188,-6.965344,-8.853645,6.481421,-1.808886,5.595357,-1.919498,8.433434],[8.532658,-7.220123,-2.558784,4.045083,2.179137,1.889339,-9.984606,-1.872608,0.780924,1.865864,8.216103,-2.986349],[3.363866,1.198685,-0.119299,1.659217,-3.745191,1.097234,8.519755,-8.994827,4.020955,-2.600997,7.410991,1.346142],[6.959517,-3.397545,0.596008,8.150584,-3.893462,5.384034,9.945477,-1.464129,-9.653088,-0.222356,-1.152757,9.914838],[-3.742227,-6.836832,-5.716781,0.085201,-5.262920,4.023965,-0.035573,-6.110745,3.931561,-3.591310,-0.730819,4.021297],[-9.454782,9.772276,-3.886118,9.805723,-3.526596,-9.509031,2.547842,-0.392424,2.188938,-3.460623,-0.028702,7.453792],[-3.664930,-6.844417,-3.463333,1.582733,-3.644627,-6.077839,7.756754,7.099775,5.094592,6.780523,9.822880,-0.598383],[0.087738,8.080383,1.864915,1.796259,-1.172205,-0.904964,2.500369,3.414108,-1.763545,3.682515,2.503224,5.583864],[-5.254941,-3.959512,9.141332,9.764537,2.901128,-0.633788,5.748955,-9.197585,-0.869727,-8.321316,-8.495297,4.772666],[0.618012,0.350113,7.909355,8.897630,2.635209,-2.725864,-7.328730,5.460702,-8.955067,-7.096753,1.955063,5.398511]], dtype = "float32")#candidate|5256|(24, 12)|const|float32
call_5255 = func_130_call(relay.reshape(const_5256.astype('float32'), [12, 6, 4]))
call_5257 = func_130_call(relay.reshape(const_5256.astype('float32'), [12, 6, 4]))
func_2436_call = mod.get_global_var('func_2436')
func_2440_call = mutated_mod.get_global_var('func_2440')
var_5265 = relay.var("var_5265", dtype = "int32", shape = (1575,))#candidate|5265|(1575,)|var|int32
call_5264 = relay.TupleGetItem(func_2436_call(relay.reshape(var_5265.astype('int32'), [15, 15, 7]), relay.reshape(var_5265.astype('int32'), [15, 15, 7]), ), 0)
call_5266 = relay.TupleGetItem(func_2440_call(relay.reshape(var_5265.astype('int32'), [15, 15, 7]), relay.reshape(var_5265.astype('int32'), [15, 15, 7]), ), 0)
var_5270 = relay.var("var_5270", dtype = "int8", shape = (15, 5, 16))#candidate|5270|(15, 5, 16)|var|int8
bop_5271 = relay.add(call_5252.astype('int64'), relay.reshape(var_5270.astype('int64'), relay.shape_of(call_5252))) # shape=(15, 5, 16)
bop_5274 = relay.add(call_5254.astype('int64'), relay.reshape(var_5270.astype('int64'), relay.shape_of(call_5254))) # shape=(15, 5, 16)
func_130_call = mod.get_global_var('func_130')
func_133_call = mutated_mod.get_global_var('func_133')
call_5278 = func_130_call(relay.reshape(call_5255.astype('float32'), [12, 6, 4]))
call_5279 = func_130_call(relay.reshape(call_5255.astype('float32'), [12, 6, 4]))
func_3213_call = mod.get_global_var('func_3213')
func_3215_call = mutated_mod.get_global_var('func_3215')
const_5283 = relay.const([6.813398,-8.866363,8.436215,8.237949,1.881158,-9.125775,-5.140152,-4.697660,4.041114,-5.684443,-1.194334,5.424424,3.611723,7.379131,5.948372,-4.943139,-4.108383,2.863466,-5.792600,-9.689835,-3.069523,-9.836024,-9.672908,-7.396799,-3.114794,-9.760467,-8.208816,-5.935740,0.059008,2.007781,7.824493,2.110636,-9.445119,9.813773,-0.285603,-6.659029,-0.432215,8.636374,-8.516596,-1.378058,-3.532054,7.580008,-4.809053,-7.282795,9.323168,-2.569185,-3.821918,-4.708964,1.796654,8.072732,6.403623,-4.619107,-7.556305,-4.342334,-1.459533,-4.133524,-2.169653,5.721771,7.254706,-8.672817,0.778872,5.855039,-6.089914,-6.768832,8.826898,2.583723,-0.936763,6.276653,3.489534,5.766759,-5.818458,-6.253173,3.030870,-9.211539,-8.761841,5.063605,4.823133,8.682274,-6.934036,8.705453,0.569091,-7.944803,8.256873,-5.710770,-0.847966,-2.771417,3.915685,2.497342,-4.062125,-2.569364,-9.207287,1.119813,-8.322194,9.214885,-7.141384,8.576332,-5.044476,3.367554,4.054706,-8.591410,2.601832,-2.963346,-5.229553,3.445568,2.116510,3.341459,2.867531,-7.479333,2.407660,-4.450349,-4.353626,6.580092,-3.778742,-2.593228,-0.794327,1.634519,0.050969,7.542535,4.816220,7.447601,-7.042271,-8.676378,3.812003,9.351878,-1.766113,-1.182539,3.946826,5.733317,5.814582,6.906775,9.067309,0.639030,9.090399,-7.338956,-3.614961,8.156078,-4.086203,-5.164625,-2.896770,-5.915954,-3.916454,-9.793934,-5.845513,7.624139,5.781554,9.687397,0.973220,-1.516640,7.702762,8.140785,-0.458049,-9.574959,-5.262082,-4.732881,5.960508,1.219875,4.447273,2.830714,-5.751953,6.404336,-7.832395,-3.763102,-9.824882,-7.589434,7.469146,0.933149,-9.874218,-2.496782,-6.841636,-1.366221,0.646799,9.989256,8.830243,-5.316238,4.234119,4.361498,-6.364503,5.054589,-4.147698,0.506828,4.356534,4.894923,-3.290893,-5.542936,-1.936294,-2.559808,1.583964,1.969149,6.882322,-2.939817,5.512232,-2.306122,6.320891,-7.984046,3.005892,2.273600,-3.588793,-9.936845,-3.676555,-6.138089,0.121377,-0.268382,-6.643090,7.687609,6.185477,2.531998,-8.254243,-0.164316,1.777094,9.366204,-1.569946,-0.801348,-0.952803,-0.721333,9.907435,6.155362,3.977641,4.178365,7.724885,5.411555,-9.305495,-2.375330,-2.120201,-2.969762,9.534126,-7.050556,-0.418234,3.698996,-3.375128,3.465923,-9.576080,-4.606260,-1.987815,8.295993,5.715461,-7.454271,9.317127,-1.562917,-0.642243,-9.643972,-9.364055,3.936085,7.323551,1.920347,-5.029816,7.727703,-7.062062,1.434429,-3.879805,-6.129656,9.123053,5.425335,6.692157,6.732322,2.233046,-1.039850,-9.260435,-2.098317,-5.086173,7.614885,6.183618,8.015474,6.251130,-2.377982,6.771536,8.650943,-0.353363,-0.167255,-4.874104,8.142369,1.073459,8.207949,2.758656,9.872619,-8.900312,3.496631,8.626057,2.907874,0.883018,-5.589305,-3.683845,5.109987,3.699076,5.396960,6.980493,5.962319,-5.636177,3.129267,-6.814869,9.518323,6.812438,-8.183649,6.108311,1.559429,-1.408867,1.138358,4.707386,8.796693,-4.736100,-7.639478,1.406843,-2.097957,4.754183,2.128940,-8.766487,-9.178913,5.425685,5.094388,-7.140751,8.872693,-9.173014,5.512027,-7.564160,-8.913374,0.514695,-9.626862,-5.436956,-2.076194,-4.619673,-9.179383,-1.584471,8.218588,0.022030,-0.935470,9.219393,-6.926431,4.324402,-6.439627,-7.001768,-5.100432,2.062007,-1.614693,-0.514552,7.806281,8.553876,3.154798,-1.708854,5.003688,6.723087,7.273886,-3.454561,5.129205,-7.168039,0.821793,-6.484145,-6.192142,-4.253614,-5.600555,-2.818750,-0.989942,1.875861,2.317117,-9.752759,6.367201,5.585911,-9.969529,0.901578,6.216914,4.495887,-3.789145,-8.589522,-3.814804,-2.653111,8.160426,-8.092351,-9.297152,-9.854244,-6.284338,-3.520573,-5.286701,-4.830262,5.487188,-0.445138,5.173191,9.699262,-7.560184,5.766852,4.949120,1.915812,-6.385359,-0.559977,0.903528,-7.607494,9.481332,1.638892,-1.243424,-9.847798,8.979595,-7.477871,9.408423,6.448291,-4.201524,-6.031746,-5.389443,-3.600615,4.243562,8.637968,6.276238,-6.421933,-7.190447,7.249403,-6.666229,7.881851,-3.899628,-7.936381,0.491990,0.259852,-7.330936,5.738936,7.451762,3.248205,-0.145031,2.157532,6.883163,-3.958972,-1.302247,-2.809845,-9.282216,-2.850158,-7.556566,-3.692411,-1.536486,4.590495,9.773385,3.312187,-8.862744,7.087181,6.280822,0.556239,3.056016,3.300025,9.153877,-5.130854,4.758001,-5.985531,7.225827,6.353206,4.212554,4.997621,-5.644929,7.288915,2.261292,0.674056,-9.275139,4.261311,8.776465,5.021221,1.183313,-8.159505,-8.661597,-9.665101,3.709240,-8.295721,-2.317962,2.020270,-1.884717,1.660028,4.128525,6.892167,6.198026,0.432133,0.950189,2.249767,-8.034040,0.360777,7.259171,7.442715,6.361741,6.339556,1.341466,-0.827787,2.022070,0.931724,0.430985,-6.640261,-8.518191,0.469912,-4.638929,-0.383860,-9.605490,-5.589321,3.688239,-3.426198,4.464778,-2.734999,-3.367313,-0.828631,-8.604235,-4.600153,-5.884945,4.928358,8.129305,-3.446235,1.699506,-6.096724,-9.553664,4.150301,-7.551996,0.570353,2.936507,-6.869329,-5.193723,-7.322511,1.507985,-1.209117,1.965450,-9.687650,-2.117413,6.021199,0.373734,6.337297,-8.402018,2.197368,-7.279849,-6.197391,-3.517936,9.711843,4.063999,1.403931,2.050194,7.589110,0.143696,5.496162,-3.477841,-0.477932,-5.087854,-4.595779,-1.716473,-9.899106,-6.678270,7.587475,3.581395,2.766339,-3.672091,6.917332,9.638439,-4.940574,-5.587403,-6.558536,-6.030356,-8.782998,5.837907,9.157391,-7.281781,-6.817213,-0.546729,0.461183,3.840366,9.213063,-1.418006,6.038779,8.826824,-0.703704,7.545065,-0.274946,0.318151,-0.944334,4.322499,8.104316,9.711936,-0.534961,1.761334,-1.011971,1.740460,-2.273162,-5.112056,2.283743,3.790962,-4.270470,-0.447843,1.342519,1.002849,-5.934993,1.609280,7.763235,-1.003474,6.783786,0.088885,-5.145275,9.448282,-8.491234,-5.062514,5.007811,-3.373075,-8.839879,-3.067663,-3.940234,7.940237,5.508594,-9.885910,-8.827608,-2.485330,-9.388895,1.349379,-2.842624,4.366699,-2.297943,-1.577526,-2.601769,3.854778,-2.886995,-1.334211,-0.502783,0.796707,-2.772363,-4.856713,-8.399109,-4.647628,-6.170114,1.784194,-2.937076,-0.098331,-0.612042,-9.436881,8.145668,1.052758,-3.308430,-3.875052,-9.861502,-9.303155,-2.050591,2.605958,2.215110,2.244796,0.114962,2.255398,-4.057955,-1.166147,-4.669568,9.089128,7.707816,8.872751,-2.414188,-9.869858,-8.912888,8.766305,6.769341,4.277341,4.260286,-0.376829,-9.468199,-7.366393,4.961408,9.306239,-3.317696,3.303167,-5.511375,7.455544,1.629113,1.345553,-4.779413,-8.845881,6.960724,-2.369711,-4.869638,2.092739,-3.638787,8.348538,-7.114251,-8.826898,9.588106,-2.949981,-9.371304,-8.961606,9.261356,2.003911,5.745104,4.151077,-4.860879,3.847853,1.727622,3.282398,-7.955338,6.181681,0.943457,0.212169,-2.878232,-5.031557,7.680809,-6.753147,-6.793587,-0.626577,9.106570,-4.993375,-6.744376,-3.237635,-8.998454,5.021115,3.993969,-4.200632,-1.391996,1.051565,7.167551,-2.915693,5.334056,-9.963228,-9.835497,6.087345,-8.963702,9.457815,0.935510,-9.762218,3.882500,-3.994162,2.618601,-9.799366,9.527834,-7.666810,1.522759,8.072690,3.308513,1.696686,7.422553,6.936346,-0.275961,-6.636448,-8.194281,-4.978931,-6.347444,-1.825874,5.971522,-3.321867,3.856288,8.797507,2.136002,8.159457,-8.191963,-3.645003,5.705198,-2.631673,5.165667,9.157104,3.835330,1.299636,-8.712168,9.997681,-0.332320,-7.696469,-8.715463,3.977002,4.947829,-3.026311,9.221620,1.848622,-7.618912,-3.901869,-3.639502,-1.385952,0.043560,9.785965,7.829791,1.152882,-6.485241,3.271040,-2.862201,-6.069795,3.935147,3.163549,-6.705877,9.170102,-9.556347,-1.203435,4.205397,2.613190,-8.662148,4.987915,0.459954,-2.941535,-5.602132,4.893209,-8.365669,-1.899680,-9.643675,-7.828928,-0.858051,-2.961124,9.594271,1.198118,6.602207,-7.175591,-0.353880,5.946789,-0.989588,4.061214,-3.808108,8.706421,9.885698,-5.712697,-3.868468,-4.003218,4.199377,9.716393,6.961835,0.902141,0.802424,-8.840437,0.864820,-7.379866,3.977509,4.423198,-0.857039,-4.581980,-2.063676,6.592659,1.588792,-3.901894,-4.776309,-3.621631,-7.076899,-1.542975,6.245788,0.919218,2.600255,-1.036022,-5.648138,-7.967839,3.690292,-0.857797,0.749620,-0.821225,3.059781,4.206689,-5.410754,5.681674,-1.938440,8.980146,-8.172115,-4.116759,-3.374627,0.365710,-5.147575,6.974170,-8.666298,-8.635982,1.623138,0.316591,0.937894,5.065641,-6.438784,-3.698692,-3.427302,-4.528671,8.514363,-9.335812,4.594384,-8.044477,4.501989,7.455541,2.468164,-9.113237,-0.291831,0.639177,-7.072255,-8.791400,9.962597,2.276461,-2.326983,-3.513433,6.109914,2.236672,-0.017731,-0.948321,6.331838,-6.814688,1.033590,9.845910,-0.096093,3.848449,0.177492,1.891266,8.657805,6.810497,-8.419563,1.143126,-9.452008,-8.330291,-8.693219,9.900897,3.105685,-1.851388,-6.426545,-9.609186,-0.369458,7.690844,3.535123,-0.935806,-8.360788,-4.698736,2.997239,-6.449661,-4.983557,4.535084,3.913089,-0.749620,-2.044522,-5.270883,9.299123,6.203621,-7.410807,3.909525,1.947529,-9.949289,2.614866,-0.017163,-6.105690,8.122267,7.476892,0.374100,4.365435,0.157959,-4.871011,-9.264531,2.292419,4.860472,-1.988767,2.825978,-6.393388,8.852881,7.436628,9.142232,-8.228053,-3.023400,0.816555,5.726478,-0.251476,-1.440863,-9.823929,-1.887719,-6.952917,5.636023,-8.741210,-2.088188,1.837438,5.110304,5.504136,-7.842274,6.536851,6.590410,8.905846,4.352909,-4.708033,-6.130920,-3.819085,-8.828416,0.786574,7.817607,-4.843162,-3.889089,-7.962403,-6.028707,-1.489997,3.648971,-4.503157,-7.038263,7.393925,3.935284,0.573482,-6.267495,-3.502129,-6.617733,6.844334,2.215357,2.167850,6.097730,7.931814,4.096600,-8.317715,7.777452,-9.988194,-0.500160,0.879351,2.904991,-3.501927,-0.710130,-8.393572,-0.099221,2.857081,9.052799,3.194830,-0.892952,3.727188,6.318210,-3.325160,-0.387858,-6.110917,1.060160,-2.464204,0.032627,-3.364880,0.412463,-0.845624,-0.671171,6.227373,4.840104,-0.359090,-0.525990,1.966885,-3.087837,-0.364033,-9.339329,4.278039,7.557765,-4.247948,-7.814186,-1.980608,0.197468,4.339107,-8.153339,-4.877726,-9.735958,2.877041,-5.974217,-3.911512,1.430586,9.966330,3.570307,2.708555,-5.017912,7.777315,-3.500438,-4.718895,8.680140,-9.811257,-3.819762,4.120446,6.056932,4.389738,1.166688,-3.690228,1.410351,5.922162,2.127387,1.367774,-0.076394,-8.441579,-4.530790,5.502861,3.596907,-6.697420,-9.585932,-2.336642,-5.619680,9.747976,1.399209,-1.151328,6.073193,7.346618,-7.598590,-2.217530,-1.023724,-3.372401,5.760980,-1.634977,4.533102,-4.612146,-8.923810,7.714012,3.470952,-9.415277,6.166971,0.046623,-4.493044,9.882919,1.467108,-6.253578,-4.979977,-0.622302,-5.160878,-8.579236,0.944519,4.482809,6.581595,1.762024,2.721776,9.319828,-6.962725,6.793474,-0.891334,-9.444955,-4.987978,1.413660,2.373091,-3.068147,-1.304904,4.154315,5.972387,2.741908,7.798305,6.190867,-5.928434,8.644261,8.572750,-5.209252,0.836427,2.023989,1.190970,2.170895,3.602244,-5.720233,-6.860821,0.163599,-5.680460,0.590597,2.381456,-0.767032,4.841908,8.010194,-5.931588,-3.949070,-1.877448,8.605100,-5.031259,-0.498910,-2.688603,0.234180,-9.598893,-2.236657,8.375712,-2.124702,2.212532,4.328223,7.402768,7.650041,-3.617522,0.588816,-8.430777,-0.430647,4.001934,-8.959318,7.295635,5.766940,-9.650908,-2.899806,9.991476,5.711591,1.794064,7.303793,6.567232,-2.841769,7.101498,-9.294522,-9.838411,-0.918092,2.965496,9.650493,4.517076,-5.582043,-9.752674,0.655615,7.282849,-4.396938,7.297956,5.984822,1.122866,-5.613015,-5.933442,-0.015816,6.047221,-7.533223,0.636371,7.654764,-9.138915,-0.548278,-7.075980,-3.710476,-0.983485,-3.067812,6.982153,-3.057013,2.894485,7.410420,5.282637,-2.210657,-4.819301,4.500983,-0.451328,-3.161131,-0.873432,-5.974706,9.628351,1.875365,4.735340,8.150365,8.674138,8.781182,2.533973,-6.189065,-7.702662,2.797608,-2.693823,-8.278183,-4.178314,7.936751,-2.285640,2.356576,0.938335,6.248573,9.747771,7.647602,7.381901,6.996105,2.428934,5.566914,0.804891,-6.371054,-6.900789,-3.540736,-0.698514,4.763475,5.495721,-3.643971,5.841579,-2.834952,-2.896629,-3.601055,-8.710198,-8.207295,4.266967,-3.050283,7.843404,-8.435655,5.470766,-7.633799,2.920982,-0.446603,-8.478686,1.413644,5.022676,-7.110610,9.769677,5.190691,8.863453,2.130061,7.202990,5.798139,-3.550614,-6.987364,-5.805959,3.485757,2.184804,4.586440,-7.490097,9.038844,-1.798839,-1.156178,-5.012076,9.609942,1.386233,4.731620,-1.164793,3.255830,-5.981023,8.359277,-4.997302,-4.069999,-2.978345,-3.795178,-6.307084,-3.215248,8.975321,-3.357102,-9.742633,6.258797,-0.084197,6.416564,8.569213,-2.914512,-1.311488,0.315391,-5.049586,-8.237372,5.444994,-5.646222,0.062317,-3.426975,5.904403,-6.153189,-4.052408,8.081345,-4.829367,-9.254258,-6.430255,-6.524822,-5.112067,6.862418,9.872120,6.002450,-1.158112,5.353834,6.473441,0.160677,-1.727591,-0.436624,5.920836,-0.301096,-2.487264,-7.746900,0.177102,-8.068529,-9.794065,-9.328939,0.405975,-2.022706,2.022038,1.661450,9.845627,3.397029,7.201863,-6.718074,-1.680498,-8.243239,6.286740,1.063736,8.301782,-1.664438,6.732585,-1.117850,0.714592,0.460692,-5.806383,3.832212,8.665234,6.106147,-8.462105,5.131675,-7.224273,-2.120940,-2.023914,-6.734122,9.874589,0.316960,-4.025768,4.855103,-5.992103,-1.755838,-6.733259,-7.461428,4.890782,-0.141128,-9.925109,-6.309127,6.516579,-4.991399,-5.873768,-4.461001,-6.907380,-2.229657,9.410003,-7.616245,-5.981654,-2.760253,-9.775137,-4.491121,-0.080130,6.222109,5.427159,-4.501036,-9.136094,-5.539057,7.321760,-2.282989,9.987817,-7.754475,6.035131,-6.366351,-4.075786,-7.413613,-1.129932,-6.047883,2.869095,4.344512,1.025388,4.563499,-5.093873,-3.548175,-9.440016,4.419193,6.436195,-6.404330,-5.702926,4.751338,4.069094,0.064506,-1.251967,5.800074,-5.766915,-2.952217,-5.693390,7.928891,-9.401405,-5.960560,6.168617,-6.477212,-1.233429,7.290919,0.286107,2.040353,-7.120417,-7.934117,-8.651241,-1.347692,-1.088852,-3.712548,-7.370512,-3.395829,7.124649,-8.550843,-4.525242,6.987279,9.235314,-4.149455,3.697758,-4.983554,-3.267898,1.919400,-3.288172,1.220566,-0.953633,5.664447,-4.782863,3.259070,-3.527026,-1.210827,-2.561219,2.300400,-6.882756,2.318791,2.710494,3.185020,-3.849545,-3.698476,-6.010664,-0.803230,1.292817,4.545420,9.247166,4.158636,-4.853781,-3.828503,-3.391148,6.692335,7.544555,-7.099052,-2.612005,6.386647,-7.023119,6.691630,3.125617,-5.490928,8.821048,-5.840120,-7.706189,-6.767001,6.000632,-7.646535,2.960709], dtype = "float64")#candidate|5283|(1456,)|const|float64
call_5282 = relay.TupleGetItem(func_3213_call(relay.reshape(const_5283.astype('float64'), [13, 16, 7])), 0)
call_5284 = relay.TupleGetItem(func_3215_call(relay.reshape(const_5283.astype('float64'), [13, 16, 7])), 0)
uop_5286 = relay.asin(var_5265.astype('float32')) # shape=(1575,)
output = relay.Tuple([call_5243,var_5253,call_5255,const_5256,call_5264,bop_5271,call_5278,call_5282,const_5283,uop_5286,])
output2 = relay.Tuple([call_5244,var_5253,call_5257,const_5256,call_5266,bop_5274,call_5279,call_5284,const_5283,uop_5286,])
func_5301 = relay.Function([var_5253,var_5265,var_5270,], output)
mod['func_5301'] = func_5301
mod = relay.transform.InferType()(mod)
mutated_mod['func_5301'] = func_5301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5301_call = mutated_mod.get_global_var('func_5301')
var_5303 = relay.var("var_5303", dtype = "int8", shape = (1200,))#candidate|5303|(1200,)|var|int8
var_5304 = relay.var("var_5304", dtype = "int32", shape = (1575,))#candidate|5304|(1575,)|var|int32
var_5305 = relay.var("var_5305", dtype = "int8", shape = (15, 5, 16))#candidate|5305|(15, 5, 16)|var|int8
call_5302 = func_5301_call(var_5303,var_5304,var_5305,)
output = call_5302
func_5306 = relay.Function([var_5303,var_5304,var_5305,], output)
mutated_mod['func_5306'] = func_5306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_5322 = relay.TupleGetItem(func_4810_call(), 0)
call_5323 = relay.TupleGetItem(func_4812_call(), 0)
output = call_5322
output2 = call_5323
func_5328 = relay.Function([], output)
mod['func_5328'] = func_5328
mod = relay.transform.InferType()(mod)
mutated_mod['func_5328'] = func_5328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mutated_mod.get_global_var('func_5328')
call_5329 = func_5328_call()
output = call_5329
func_5330 = relay.Function([], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5117_call = mod.get_global_var('func_5117')
func_5118_call = mutated_mod.get_global_var('func_5118')
call_5348 = relay.TupleGetItem(func_5117_call(), 2)
call_5349 = relay.TupleGetItem(func_5118_call(), 2)
output = relay.Tuple([call_5348,])
output2 = relay.Tuple([call_5349,])
func_5356 = relay.Function([], output)
mod['func_5356'] = func_5356
mod = relay.transform.InferType()(mod)
output = func_5356()
func_5357 = relay.Function([], output)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5358 = func_5085_call()
call_5359 = func_5085_call()
var_5367 = relay.var("var_5367", dtype = "bool", shape = (2, 6, 9))#candidate|5367|(2, 6, 9)|var|bool
bop_5368 = relay.multiply(call_5358.astype('uint32'), relay.reshape(var_5367.astype('uint32'), relay.shape_of(call_5358))) # shape=(2, 6, 9)
bop_5371 = relay.multiply(call_5359.astype('uint32'), relay.reshape(var_5367.astype('uint32'), relay.shape_of(call_5359))) # shape=(2, 6, 9)
uop_5374 = relay.log(bop_5368.astype('float32')) # shape=(2, 6, 9)
uop_5376 = relay.log(bop_5371.astype('float32')) # shape=(2, 6, 9)
func_1639_call = mod.get_global_var('func_1639')
func_1642_call = mutated_mod.get_global_var('func_1642')
var_5388 = relay.var("var_5388", dtype = "int8", shape = (1, 504))#candidate|5388|(1, 504)|var|int8
call_5387 = relay.TupleGetItem(func_1639_call(relay.reshape(var_5388.astype('int8'), [8, 7, 9])), 3)
call_5389 = relay.TupleGetItem(func_1642_call(relay.reshape(var_5388.astype('int8'), [8, 7, 9])), 3)
output = relay.Tuple([uop_5374,call_5387,var_5388,])
output2 = relay.Tuple([uop_5376,call_5389,var_5388,])
func_5409 = relay.Function([var_5367,var_5388,], output)
mod['func_5409'] = func_5409
mod = relay.transform.InferType()(mod)
mutated_mod['func_5409'] = func_5409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5409_call = mutated_mod.get_global_var('func_5409')
var_5411 = relay.var("var_5411", dtype = "bool", shape = (2, 6, 9))#candidate|5411|(2, 6, 9)|var|bool
var_5412 = relay.var("var_5412", dtype = "int8", shape = (1, 504))#candidate|5412|(1, 504)|var|int8
call_5410 = func_5409_call(var_5411,var_5412,)
output = call_5410
func_5413 = relay.Function([var_5411,var_5412,], output)
mutated_mod['func_5413'] = func_5413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_5675 = func_4898_call()
call_5676 = func_4898_call()
output = relay.Tuple([call_5675,])
output2 = relay.Tuple([call_5676,])
func_5679 = relay.Function([], output)
mod['func_5679'] = func_5679
mod = relay.transform.InferType()(mod)
output = func_5679()
func_5680 = relay.Function([], output)
mutated_mod['func_5680'] = func_5680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_5737 = relay.TupleGetItem(func_4810_call(), 0)
call_5738 = relay.TupleGetItem(func_4812_call(), 0)
output = relay.Tuple([call_5737,])
output2 = relay.Tuple([call_5738,])
func_5745 = relay.Function([], output)
mod['func_5745'] = func_5745
mod = relay.transform.InferType()(mod)
mutated_mod['func_5745'] = func_5745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5745_call = mutated_mod.get_global_var('func_5745')
call_5746 = func_5745_call()
output = call_5746
func_5747 = relay.Function([], output)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mod.get_global_var('func_5328')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_5773 = func_5328_call()
call_5774 = func_5328_call()
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
var_5791 = relay.var("var_5791", dtype = "float32", shape = (1092,))#candidate|5791|(1092,)|var|float32
call_5790 = func_109_call(relay.reshape(var_5791.astype('float32'), [12, 7, 13]))
call_5792 = func_109_call(relay.reshape(var_5791.astype('float32'), [12, 7, 13]))
output = relay.Tuple([call_5773,call_5790,var_5791,])
output2 = relay.Tuple([call_5774,call_5792,var_5791,])
func_5797 = relay.Function([var_5791,], output)
mod['func_5797'] = func_5797
mod = relay.transform.InferType()(mod)
mutated_mod['func_5797'] = func_5797
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5798 = relay.var("var_5798", dtype = "float32", shape = (1092,))#candidate|5798|(1092,)|var|float32
func_5797_call = mutated_mod.get_global_var('func_5797')
call_5799 = func_5797_call(var_5798)
output = call_5799
func_5800 = relay.Function([var_5798], output)
mutated_mod['func_5800'] = func_5800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4611_call = mod.get_global_var('func_4611')
func_4613_call = mutated_mod.get_global_var('func_4613')
call_5864 = relay.TupleGetItem(func_4611_call(), 0)
call_5865 = relay.TupleGetItem(func_4613_call(), 0)
output = relay.Tuple([call_5864,])
output2 = relay.Tuple([call_5865,])
func_5876 = relay.Function([], output)
mod['func_5876'] = func_5876
mod = relay.transform.InferType()(mod)
mutated_mod['func_5876'] = func_5876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5876_call = mutated_mod.get_global_var('func_5876')
call_5877 = func_5876_call()
output = call_5877
func_5878 = relay.Function([], output)
mutated_mod['func_5878'] = func_5878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4611_call = mod.get_global_var('func_4611')
func_4613_call = mutated_mod.get_global_var('func_4613')
call_5888 = relay.TupleGetItem(func_4611_call(), 0)
call_5889 = relay.TupleGetItem(func_4613_call(), 0)
func_5301_call = mod.get_global_var('func_5301')
func_5306_call = mutated_mod.get_global_var('func_5306')
var_5930 = relay.var("var_5930", dtype = "int8", shape = (1200,))#candidate|5930|(1200,)|var|int8
const_5931 = relay.const([-3,7,-5,-3,-4,-9,3,-6,10,6,1,3,-6,-6,-7,7,8,-5,4,9,10,10,-1,8,2,1,5,5,-4,-6,-2,3,1,-2,8,5,-9,-3,-3,2,-4,1,6,9,-6,10,-9,7,3,-5,9,8,4,8,2,-5,2,6,-1,-7,9,5,2,-10,-1,5,4,8,7,-5,6,5,-5,6,-5,5,2,-6,3,-9,-8,4,8,-9,-10,5,-8,3,-1,-1,4,4,7,-10,3,-5,-4,4,3,-8,-2,8,-3,-3,-2,3,-8,3,7,6,-3,-1,-9,10,10,4,10,10,-5,-8,-7,4,-9,1,-10,-6,-7,9,-3,8,4,-7,-6,-8,10,-7,-8,-2,-9,5,-1,2,9,4,8,-7,-7,-9,-1,-3,4,10,2,10,-7,1,-7,8,2,-8,-5,7,9,-3,4,3,-8,1,-7,3,8,-3,-7,-1,-2,-3,3,-7,5,-5,9,-8,-1,9,2,3,8,-6,-9,-5,-5,-8,-8,3,8,-6,-5,2,-5,-7,4,10,-8,-6,3,-5,-2,9,9,-7,1,2,8,-6,-6,2,3,-2,8,5,1,-10,-3,7,2,-9,-7,-10,4,10,9,9,-3,10,-1,1,-6,-7,1,-3,9,-7,-10,3,-5,5,6,5,-7,9,1,-1,4,-6,-3,-9,8,1,6,-5,9,-6,-5,4,-5,1,-4,3,-2,2,-5,-8,-10,-4,-2,-7,8,-6,4,7,5,-7,10,-9,-8,-8,4,9,-4,2,9,-9,-5,-10,-6,-10,4,-4,-9,1,-3,-4,4,5,-6,5,6,-2,10,-10,10,-9,-7,-3,3,-6,10,7,3,5,7,-3,-6,4,9,-2,1,-3,4,7,-9,-8,-2,6,-7,3,1,-6,2,-2,-3,-2,-8,5,3,9,-4,1,-2,-9,8,-2,9,7,-10,-4,5,-7,3,5,3,-7,3,-3,5,-3,-4,-3,2,6,-10,5,10,-10,-6,-8,9,6,-3,6,-10,2,-3,-9,-4,-9,9,10,7,-2,-3,2,6,-5,-8,9,-9,4,-4,6,-9,-10,8,8,10,-10,10,8,-1,-7,3,9,-4,3,-7,6,4,4,8,9,4,4,1,-10,-4,-5,2,8,-6,-4,7,-9,-7,-7,7,-6,5,-4,9,-3,2,9,-2,2,5,-1,7,7,4,-1,-10,-3,7,5,5,1,6,3,-5,5,2,-6,9,5,5,-6,4,-2,-9,7,5,-3,-7,8,-1,4,3,2,-1,-7,4,-3,-5,7,4,-9,-1,-9,-9,10,3,5,4,-10,-4,-3,-2,-7,5,-2,8,-5,4,-5,4,4,9,-5,-7,-8,-2,9,1,-1,-10,3,-6,4,6,-4,-5,8,-6,-7,-8,5,-9,-5,10,7,3,-7,2,-9,-3,9,-9,-3,1,-9,-6,10,9,-8,-5,3,6,-5,3,7,6,5,-2,-4,8,-2,8,-4,9,-9,6,2,-2,-2,-2,-1,4,6,4,-9,-3,-1,-4,9,-4,8,8,5,9,-3,8,-9,-1,8,-7,10,-7,1,3,-5,-6,-10,-2,-4,-4,-2,-4,3,-8,-9,-10,-4,-9,8,-5,-10,7,9,6,-2,2,-3,7,-10,-8,1,-1,7,-10,-1,-10,-9,-4,10,-2,2,-8,-10,2,-1,2,-10,-5,-2,-2,1,5,-2,-8,1,-5,-4,8,8,-6,10,-9,1,-7,-2,-6,-2,-2,-2,-5,10,3,-2,8,1,-9,9,1,-5,-3,-7,9,-9,-2,-3,1,-8,7,-7,2,-6,9,2,-5,6,3,6,3,-4,6,3,-3,4,-4,3,-1,8,6,9,6,-1,9,10,-3,-8,-4,-6,3,-6,-3,3,-10,3,1,-7,-7,6,4,-9,-2,5,7,4,-1,9,1,-7,4,-5,10,-4,10,5,5,2,1,7,9,10,-4,-6,-4,8,-3,-5,-6,-1,8,-2,-10,-10,2,-8,1,-10,10,1,-9,4,-1,6,-7,-4,3,-7,10,5,-7,10,-3,-2,-6,-1,-2,-8,3,2,1,6,-2,8,-2,-4,5,8,6,-5,5,-9,10,-1,1,6,9,-5,-6,-5,-7,-9,2,-4,-9,3,4,10,1,-8,5,2,5,7,2,2,-8,4,10,10,-7,-3,7,7,-5,10,-9,5,2,5,-3,-7,-8,1,-9,5,-6,-8,-2,-2,-10,-8,-7,-2,7,4,2,9,2,-8,-4,8,-1,-4,-3,-9,-1,1,2,-8,1,-8,-5,3,-10,-8,-3,-4,-5,7,-9,3,5,-9,-7,7,10,1,4,-3,-6,-7,-9,3,-1,4,-7,1,8,1,8,-5,3,2,-3,-2,-5,-8,-1,-8,3,4,8,-2,-7,4,-10,2,7,1,-8,-1,-3,9,1,-6,-9,4,6,-4,6,-8,8,-2,-5,-7,7,6,-8,-1,2,3,10,1,-1,10,-6,6,8,1,2,-6,7,-6,-9,-3,-6,4,-4,-3,1,-6,2,1,1,-3,1,9,-3,4,-6,5,-3,-10,-6,-6,4,6,-4,-8,-10,-8,-2,10,6,1,10,3,-5,-4,6,9,-10,8,3,-10,6,-7,-7,-8,-2,-2,-3,8,10,10,-10,5,-6,-7,-6,-6,-5,5,-2,4,9,6,4,1,-6,7,-2,7,5,8,10,-8,-7,-6,5,2,-7,8,-2,5,-2,5,7,1,-3,7,-5,8,-7,2,6,6,4,-5,4,6,2,-9,3,-3,3,10,3,9,-4,-2,6,-6,-5,-9,-10,-7,8,1,8,-8,2,-8,-9,6,9,-4,9,7,10,3,3,-2,5,-2,9,-5,-9,-7,9,2,5,-5,5,-10,-8,-4,-2,1,2,-2,3,-2,-8,1,-6,7,8,-8,2,7,-1,-2,-9,-10,-6,4,8,2,-6,-7,-3,-6,6,3,1,9,-2,3,-4,4,5,-9,-5,3,3,6,4,-6,-5,10,10,-8,-2,6,5,-6,-2,-5,6,-8,8,7,-5,2,-4,10,6,8,10,-4,8,7,-4,4,-10,1,8,10,10,5,-6,10,2,10,4,1,3,-1,-2,-1,9,2,9,-1,6,5,-3,-6,2,1,9,7,9,2,-3,4,6,-1,8,6,-2,-7,-5,-1,8,-5,5,-10,-10,-6,5,8,5,-6,1,-8,4,-7,-8,-8,-2,3,4,2,8,-8,-7,4,-4,-7,-4,-8,-8,-7,-3,3,7,5,-1,-5,4,-2,2,4,-8,-2,6,1,5,2,-3,5,3,1,-8,1,-2,4,-10,-9,-1,-3,3,1,-1,5,-10,-6,-2,-4,-3,-2,-9,8,-5,10,-10,-3,4,-10,-8,1,-7,10,-3,-8,3,-1,6,-4,8,7,4,2,5,-4,-9,3,-3,-3,-9,-5,3,-5,-7,10,-10,5,6,-1,-1,5,4,-6,-1,5,4,-2,-6,-3,-5,-8,7,-8,-3,5,-8,4,10,-10,2,3,-7,-10,4,-8,4,4,1,8,3,-8,6,2,5,-9,9,-1,-8,1,-4,-1,-5,2,6,-8,5,-9,-1,9,3,10,-9,-10,2,7,8,-2,10,9,-8,-5,4,-6,-7,8,2,-3,9,-5,3,-4,-9,-6,-4,7,1,-5,-7,9,-5,-3,-4,-5,2,-5,2,-7,-8,2,-5,4,-10,-10,-1,3,5,4,-4,4,8,10,1,-3,-10,10,3,-1,6,-3,10,2,2,7,-4,-2,2,-6,-1,1,5,9,7,2,3,10,-9,-9,10,-9,-6,-9,-2,1,-6,-7,4,-9,-5,-6,-6,10,-9,-8,-4,5,7,10,1,-5,4,9,5,10,-3,-8,1,6,-6,10,1,-4,1,10,-7,-10,6,-8,-9,2,-5,1,-8,-7,-3,-8,4,5,-8,-9,1,-6,1,1,-4,-4,-5,4,-3,-10,2,3,2,3,-6,-4,6,-5,6,8,8,9,-8,7,-8,10,-6,7,-4,9,7,-6,-5,-9,-4,1,1,-5,6,2,2,-5,-8,8,3,9,-1,2,-3,-9,7,1,1,-9,-2,3,5,-2,-10,-5,8,-4,9,6,-6,3,6,-3,3,-6,-7,9,-6,-6,-1,-9,5,7,9,9,10,-9,7,-3,-8,-5,7,6,3,10,-3,3,2,3,5,7,6,-2,-1,-3,-4], dtype = "int32")#candidate|5931|(1575,)|const|int32
call_5929 = relay.TupleGetItem(func_5301_call(relay.reshape(var_5930.astype('int8'), [1200,]), relay.reshape(const_5931.astype('int32'), [1575,]), relay.reshape(var_5930.astype('int8'), [15, 5, 16]), ), 5)
call_5932 = relay.TupleGetItem(func_5306_call(relay.reshape(var_5930.astype('int8'), [1200,]), relay.reshape(const_5931.astype('int32'), [1575,]), relay.reshape(var_5930.astype('int8'), [15, 5, 16]), ), 5)
output = relay.Tuple([call_5888,call_5929,var_5930,const_5931,])
output2 = relay.Tuple([call_5889,call_5932,var_5930,const_5931,])
func_5947 = relay.Function([var_5930,], output)
mod['func_5947'] = func_5947
mod = relay.transform.InferType()(mod)
mutated_mod['func_5947'] = func_5947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5948 = relay.var("var_5948", dtype = "int8", shape = (1200,))#candidate|5948|(1200,)|var|int8
func_5947_call = mutated_mod.get_global_var('func_5947')
call_5949 = func_5947_call(var_5948)
output = call_5949
func_5950 = relay.Function([var_5948], output)
mutated_mod['func_5950'] = func_5950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5679_call = mod.get_global_var('func_5679')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_5967 = relay.TupleGetItem(func_5679_call(), 0)
call_5968 = relay.TupleGetItem(func_5680_call(), 0)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5979 = func_5085_call()
call_5980 = func_5085_call()
func_2664_call = mod.get_global_var('func_2664')
func_2666_call = mutated_mod.get_global_var('func_2666')
const_6018 = relay.const([-5.182615,-8.106416,-1.762746,-1.028993,3.082579,1.782666,-3.186497,3.323725,0.362263,-5.420487,4.911512,1.626804,-8.287356,7.720559,4.016426,-4.214073,-2.923725,5.121309,-8.053063,5.305828,-0.703083,-6.121148,-8.326951,-6.329653,-0.633306,-5.522769,-9.221497,-6.401813,2.193527,-6.979894,1.174034,-2.839203,5.749417,-4.928207,7.556670,9.537869,9.554689,-4.897837,9.209099,5.362662,-2.515732,6.579402,-8.265616,3.992509,-2.299773,-0.443708,-7.912823,8.203244,3.219808,-1.677638,3.459526,-7.560611,8.633264,-0.323570,-8.047845,-8.128040,3.417087,2.966400,-0.023183,-8.713325,-9.062386,-8.320191,6.024965,-5.061719,1.370717,-4.716754,-5.543860,3.737110,5.443560,7.893791,-0.073270,-4.129873,3.768368,6.918876,3.314008,-0.165519,-3.693098,-7.414102,-1.760831,-5.101203,0.495678,7.196062,-8.511336,-6.929351,-1.533453,6.794616,9.306939,8.652320,5.872793,-3.048624,-3.035404,-9.995925,2.848268,-6.561490,6.455674,-5.105376,0.263739,-7.173745,-0.201744,-0.062154,-8.414844,6.998450,3.865242,2.082249,1.996715,5.468429,-0.607034,5.791304,0.667699,-1.642024,-8.534523,5.908272,-0.142183,1.654839,-5.721169,7.711054,3.558810,5.196677,2.418521,2.866187,-2.496963,-2.232230,-7.518458,4.998498,-8.861068,-8.857441,-6.178457,-2.344877,-2.614259,5.881231,1.903053,0.325754,-2.997304,-4.211870,6.070579,-7.928764,-4.363152,8.730971,-2.344556,-0.257984,-7.063259,-8.535603,7.826708,2.630217,-0.191106,-8.849146,6.027808,8.430619,-7.167269,-4.142529,7.521436,-7.633172,7.588594,3.955997,-9.293728,-7.491373,-5.622680,5.740262,-3.381238,0.099756,0.060330,-1.884872,-8.523762,-5.939262,0.398623,-1.253027,-5.997543,2.600503,-6.561703,3.951658,-2.307991,3.017423,-3.390194,-7.459672,3.603472,-7.630248,-3.975850,-8.471325,-0.727819,1.543381,3.146779,-1.148552,-5.271044,7.287461,-2.571064,9.524961,1.589370,-8.549265,3.334619,-0.865790,-7.354874,-8.680648,5.226122,1.220483,3.903339,-8.805424,5.313172,-3.354179,-4.154575,-3.144177,7.228198,5.509260,4.948396,-7.490470,0.806335,6.583209,6.091058,-0.134595,-2.147503,-3.015697,-1.391940,-8.019508,-7.705391,-2.320769,7.062043,1.166451,-0.765461,2.008871,-7.716515,4.038010,-6.324314,-6.959356,-0.927588,-2.513096,-2.931037,-1.947719,1.233618,-8.092869,-1.714709,-9.486933,-4.380089,-1.333553,9.348144,-6.832300,4.168250,6.943313,-6.883481,-5.581009,-7.625464,-8.464254,9.526667,7.688412,2.160475,-3.876906,-0.400509,3.131988,2.264127,-3.360564,3.774444,-7.497372,-6.609266,-6.321929,1.010483,7.440588,-4.668261,7.590921,-4.024009,-1.113567,-3.649328,3.203984,-4.963509,9.762968,-1.871090,-9.690350,-0.815320,1.249431,-5.715459,-5.321285,-6.891165,9.788919,1.025188,-4.572257,0.225353,7.964489,-0.051714,9.481656,-0.085438,-1.800505,-8.802924,-9.984723,5.847193,8.147403,-0.116766,-5.026151,9.052835,4.758797,-7.745693,-3.677751,-0.370337,3.624615,7.818579,7.240651,-3.921625,-0.765117,-3.167757,5.174167,-2.948650,8.810009,-7.870415,0.306066,6.761902,-7.186300,1.352563,-7.426763,1.024468,-5.380368,-1.949865,-6.333545,1.038951,1.445341,7.711566,3.606811,2.561958,-8.688154,-6.662980,4.149599,-5.865822,8.710960,-4.593343,-6.075052,-7.346593,-5.390023,-6.384349,0.206311,-7.769376,-8.102423,1.662539,7.063803,-9.429376,7.967919,-4.918596,0.441788,-8.417725,-9.035477,-0.323359,-3.117644,0.488845,6.362062,5.020780,8.495613,8.339183,-3.292713,3.316037,1.783669,2.620797,6.217761,3.381245,5.224898,7.760743,-1.460625,-2.034106,-6.248038,-2.418100,2.907670,-2.590695,7.024917,-9.953343,8.006259,6.477192,-1.848587,4.627117,-9.805595,-6.841534,-9.808320,2.074816,8.877373,-7.614377,4.430378,2.871480,-5.555769,3.052314,2.750753,3.274968,-2.004451,4.153858,-5.878597,-9.889150,0.271118,-9.413051,-4.200002,-1.250337,3.789005,-7.313473,7.280310,7.632406,0.208543,5.783572,8.248297,8.715573,-0.303981,-8.339131,0.037885], dtype = "float64")#candidate|6018|(392,)|const|float64
call_6017 = relay.TupleGetItem(func_2664_call(relay.reshape(const_6018.astype('float64'), [14, 7, 4])), 1)
call_6019 = relay.TupleGetItem(func_2666_call(relay.reshape(const_6018.astype('float64'), [14, 7, 4])), 1)
output = relay.Tuple([call_5967,call_5979,call_6017,const_6018,])
output2 = relay.Tuple([call_5968,call_5980,call_6019,const_6018,])
func_6045 = relay.Function([], output)
mod['func_6045'] = func_6045
mod = relay.transform.InferType()(mod)
output = func_6045()
func_6046 = relay.Function([], output)
mutated_mod['func_6046'] = func_6046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_6085 = relay.TupleGetItem(func_4810_call(), 0)
call_6086 = relay.TupleGetItem(func_4812_call(), 0)
func_5797_call = mod.get_global_var('func_5797')
func_5800_call = mutated_mod.get_global_var('func_5800')
const_6093 = relay.const([-8.805848,2.499092,-0.636860,-2.364359,-9.346354,1.152503,-4.360900,-6.615266,-7.738850,2.643463,-4.636288,1.922231,3.984175,2.261255,9.463751,-3.567541,1.715070,1.862669,-6.316319,-9.858073,-1.057826,-9.116388,8.734835,1.801475,0.287018,-0.882545,8.038589,-1.409689,-7.815222,8.217880,-4.034226,5.931358,1.706358,9.602280,-0.156296,-2.899579,-7.004428,-2.318554,-7.274474,9.258554,-3.201770,6.979707,5.669726,3.200599,8.673170,5.923488,-0.004154,2.630253,8.773615,5.197260,-2.653962,7.436496,-3.818282,-3.796525,9.320511,-6.025259,2.940283,8.552173,-6.900796,-1.787426,6.941442,5.433002,9.125274,8.487365,-9.576739,-9.676552,0.551690,9.791214,8.771520,-2.312225,5.146646,2.477470,-8.110596,9.007820,9.551238,-6.978914,8.831120,-7.599964,-8.164005,7.180858,-2.665577,2.210183,7.859442,6.203724,-2.411656,7.563159,9.815737,-0.109532,1.384807,-6.841953,-8.209613,1.956287,-6.216422,-3.106541,-4.712711,9.412220,5.702967,-5.831835,3.222080,-1.980100,3.257075,6.979744,-3.018836,-6.707502,3.879866,-3.008492,1.921875,5.311129,7.834568,-8.466462,-0.012658,-2.509248,-7.950500,-6.442056,-9.726815,3.586397,1.795534,-7.831207,-3.284445,9.627846,1.255593,1.171117,-3.462045,1.341422,-8.721466,6.853667,4.891723,8.714015,-5.114636,-8.093507,-6.247235,-7.966245,-9.036375,6.325033,5.546165,0.491296,-2.701256,4.284158,4.159720,-3.401393,-5.912949,-6.863511,6.123226,8.325162,-8.653140,-4.206944,4.320230,-0.074198,-8.795102,-0.423960,-3.038709,-3.363594,4.845446,8.959766,-5.925651,-9.123758,9.567278,8.226547,-1.219413,-2.405568,-5.443423,1.824127,4.089741,6.068373,0.872135,2.702236,4.271385,-4.242202,0.204798,-8.557625,4.418244,-7.445889,4.046880,9.058857,-7.659136,-5.425723,9.824499,-7.416004,5.093220,-2.377053,-0.138437,2.649312,0.898709,-4.126736,1.088025,6.963981,0.866316,-7.505792,4.030211,2.092451,4.150650,-6.777962,4.874692,-3.373080,-5.044942,-4.540083,-2.696424,0.683856,8.189350,6.846699,-0.588279,-2.317016,-6.776276,-1.922595,-7.051027,-3.699834,-5.416102,-6.928350,4.219965,-3.087362,2.588605,-6.174388,-8.872673,-4.273907,3.429411,4.929924,-2.274048,-3.907132,-1.866470,-7.302959,-5.435682,-6.506522,2.713478,-4.980578,0.560900,-2.149591,4.860597,6.269519,-6.161693,-6.272583,3.491568,7.108318,4.366611,-9.339226,8.912682,-7.654942,3.091426,-0.747373,-7.739224,-7.224520,1.229516,-5.213623,2.420538,2.478628,6.970268,-3.702470,1.784406,-3.517064,3.960160,-0.855505,9.123641,-9.435184,7.786116,8.069955,1.405504,-6.750528,2.043058,-3.187481,-6.436586,-9.858218,1.050407,-1.042067,4.959130,3.597361,4.701019,7.075823,-9.577260,-0.346986,-6.430408,0.123516,2.437169,-1.372468,6.418690,5.533904,-5.718532,7.326234,-4.948452,-6.115053,4.922643,-0.919038,8.531500,3.633184,3.223050,-8.192174,-8.908767,-5.220659,5.234332,-4.348586,5.810474,-4.546327,7.593801,9.228770,5.706177,7.690206,3.322980,8.485566,8.337054,-5.118485,-3.587839,-6.514627,3.748749,-3.047011,-6.519651,3.091025,4.351203,8.438465,2.158239,-2.022412,8.751890,2.225357,-2.678494,3.600220,-5.763106,-1.842732,-3.538903,9.318304,3.728067,-2.555238,-5.411714,6.481790,5.557798,-2.621016,5.330563,0.511587,3.213298,1.296679,-1.829361,7.892472,4.039027,9.722450,4.451410,7.977433,7.031142,-7.689098,1.748897,2.325796,-9.061119,6.982971,-4.765477,-7.039897,-8.741415,3.353202,2.398078,6.771460,6.648487,-6.024667,5.017970,1.813157,-8.812999,-7.171359,-6.370738,-6.717843,2.792661,-1.184914,8.227670,1.776151,0.984604,-4.936895,-8.703016,1.170868,-3.063574,-6.211669,2.679378,-2.411026,6.954645,6.737860,-8.811263,-9.160886,6.379393,-1.012395,-8.192397,-7.369712,-5.476200,-9.577470,-9.541048,-0.580117,5.133290,-2.204486,9.080843,-0.537587,8.433191,-8.953458,-0.561813,-7.566350,2.362804,-6.161664,-7.547084,4.151137,0.716461,6.743013,3.191136,-2.862718,-9.598277,9.061307,-6.147836,-3.083016,1.580995,1.507596,-4.387469,-1.362314,-0.390793,9.559727,4.762567,-9.965475,-4.474444,4.290055,8.962507,-3.716504,-9.036048,1.312313,-6.654736,3.363738,-0.934930,9.521654,-9.439323,2.944385,-2.683697,4.818524,9.537319,-2.574730,-6.407544,-8.616794,6.011415,8.344538,-4.483732,-6.708541,8.039711,1.696960,8.474478,-3.229150,-1.872502,-8.473880,-9.407166,-4.889844,8.321923,1.032874,-8.975544,-4.940754,-0.360460,-8.974349,-3.800230,8.013212,-1.746093,-8.661303,3.724939,8.405974,-4.777047,-6.110899,7.964993,-7.011186,1.125646,-2.368004,4.468065,-5.752725,4.977905,7.940653,1.344289,8.316844,1.500261,7.598497,-4.316097,-8.762735,9.371561,4.050918,1.417876,3.904750,4.226515,7.741755,-5.606903,-3.452836,-5.545316,-5.683793,1.136129,2.326413,5.284254,9.416985,7.976401,-7.153206,4.204462,7.938355,7.842929,0.645506,0.682644,-3.869282,-8.613478,2.429425,-9.979322,1.199066,4.145263,-8.201793,3.538211,-0.869890,9.345888,9.679693,-8.835119,4.386842,-2.010037,-3.360444,8.839377,8.721013,6.123941,-2.242008,-8.160353,8.325441,-0.304285,-9.501672,-7.480562,-3.096887,0.333477,-4.428432,1.676230,-6.616442,-5.354124,0.598663,1.166994,-8.186198,0.381589,-9.201815,-2.055811,5.786672,5.385528,-9.630907,-4.631124,6.408016,5.296221,4.597583,9.093847,-7.994017,-5.454439,-8.908917,-3.295355,-3.527250,6.824581,-0.020147,8.135056,7.554639,4.220002,-0.321459,-9.907992,-1.554271,1.486762,-2.399096,1.795069,-5.066463,-7.924702,8.516642,0.404417,-1.135836,-9.862510,-7.202995,-3.470563,-8.109189,-2.531115,1.381558,-0.643161,-3.766800,1.652924,-0.234334,5.912832,-0.064451,6.078397,-8.863121,-5.737055,-1.655160,8.373468,-2.653872,-1.241287,-1.484857,5.627887,4.855623,1.509858,4.878066,0.825509,5.037164,-2.393207,-6.860214,0.972188,7.349069,-3.390413,-7.053031,-0.276643,8.915536,1.712691,3.879620,-7.541619,-5.481797,-8.992422,-6.388110,9.373094,-7.470253,-1.709827,-6.003116,-5.558047,6.256284,7.695900,-5.811652,-4.978280,-7.156180,7.258994,-5.607801,-6.182255,3.088553,-4.798768,-7.818092,0.768234,6.071411,-5.793335,5.609789,8.523577,8.233750,-6.681707,5.435367,3.165551,-8.216581,4.766451,-2.823142,8.609943,2.677874,-5.892041,-4.384444,-1.559926,9.906220,4.665701,9.314611,3.247638,5.192635,6.621636,-4.903806,-5.890333,0.339753,8.359254,2.693185,-4.595528,-8.369340,0.915486,-2.097324,-2.302131,-6.065346,7.143990,4.374610,-7.036680,-2.297164,4.562958,-6.895497,-2.400873,5.440671,-7.573082,-5.459738,9.235482,4.298146,1.926489,6.236186,4.157634,4.419229,7.429601,2.021334,3.353160,7.859670,-2.347079,-3.405441,-2.165631,-8.266234,4.778898,1.574504,7.898484,9.655992,-7.899901,-6.689708,-4.496929,-5.791726,-0.452454,0.980632,-1.782708,-4.485628,-7.397791,0.127208,6.682292,8.405314,-4.014714,0.655649,2.940161,2.206488,6.461708,5.209766,6.868188,-7.979666,6.104285,-7.224528,-2.088736,-1.976154,6.669492,1.936338,0.816804,2.459734,0.218682,4.379486,4.159943,0.111459,4.198005,-7.437650,-7.549826,-8.004704,-6.167093,7.518270,-1.186251,-1.911345,8.123566,-1.544117,-6.138374,4.069553,-8.077426,4.166358,7.032669,6.158358,7.179154,4.769067,-7.831113,-3.330074,-4.385450,5.093920,0.630653,5.519626,-0.429714,-2.858186,4.919823,-4.944635,-9.914503,-9.055775,-6.067517,-3.173646,5.902308,-5.472448,-5.260422,3.955461,-9.089879,9.148435,-9.961700,3.394306,-2.823103,0.476086,3.816292,4.825319,4.345069,5.271585,5.774214,-6.996143,0.460697,-3.099609,5.961485,5.210968,4.176604,3.232838,4.439917,-3.639248,-1.260744,6.158525,3.548326,-7.026147,-9.579346,3.176699,5.609586,5.200923,-4.158126,-6.278802,0.146492,8.850367,-1.612981,-2.528155,2.310259,0.253226,-1.394129,5.168921,-0.560616,1.359658,9.731990,-9.517928,-8.241472,-8.845621,-8.256193,-3.290136,-2.707663,-2.982907,-1.795146,-1.587571,1.651729,-8.859676,-1.462807,9.855018,7.697482,-1.829170,3.427819,4.993099,-5.817166,-7.261500,5.939782,-8.873920,6.145351,-4.837577,7.798953,7.125893,2.340374,-9.079756,-1.107718,-3.464416,-5.973944,-0.873451,9.913377,1.659110,0.591232,-9.680781,-7.607880,-5.753528,3.105968,-5.647290,5.621061,6.626205,3.149604,8.494350,-8.383398,6.867940,-7.073455,-4.350576,2.072678,7.055720,-3.952597,6.664912,-1.075343,-6.136580,0.959591,-5.570866,-8.014216,9.113505,6.033255,9.113166,-9.887005,9.849678,9.601692,-9.785004,2.114558,6.042585,-7.191770,1.238080,3.583727,-2.644900,-7.514253,5.216732,2.751215,-9.669396,8.470352,-6.949673,-1.779472,-7.339226,2.411270,-8.221895,-9.202556,-9.824062,1.963122,3.122137,9.755780,2.124323,-7.441957,2.241801,2.634106,0.081051,6.208436,-2.912751,0.167909,7.480948,1.026031,0.403381,-5.346560,-4.883557,4.206144,-7.480088,-4.750939,-9.659893,-3.130060,-1.350556,3.357479,3.615248,8.825005,-4.641005,-5.601507,7.633904,-4.347702,-1.273259,1.987548,-7.378494,-6.107452,0.997235,-2.935602,-8.810685,4.895278,-9.670447,-5.295511,-5.335789,7.170123,-7.794467,-6.067154,6.438311,-2.976455,5.997500,4.278514,3.293694,-4.715184,-0.915187,-6.957712,-7.331335,2.210340,1.858391,-0.746188,2.581852,-6.064806,6.470293,3.013840,4.897872,-5.114547,7.718191,-9.986652,-7.873887,-1.087747,9.591553,0.110749,-4.602602,-9.602446,-0.263877,4.268119,-4.317624,0.907457,1.201806,9.756065,-9.687307,4.263954,7.838120,-1.206975,9.764224,-2.127144,-6.621847,-3.651231,-8.694276,-2.258881,6.916597,-9.004606,6.733386,6.481645,-6.972250,-7.851993,0.404623,6.932579,6.309195,-6.433487,-7.951692,-8.276678,-8.770544,0.791906,7.708752,8.094456,-4.375023,6.394705,7.415783,-6.470974,5.468457,-3.044346,-2.695043,9.668109,-1.176658,-3.262592,-7.903607,5.736839,8.532108,4.381437,-9.496819,1.201799,-7.385438,-3.821182,-6.868634,2.035956,1.358496,-4.331335,6.979081,-8.446221,2.966901,-6.268464,8.328591,-7.724335,7.076207,6.369276,-7.390995,-7.086642,8.116579,-1.061822,0.518913,6.354208,8.524689,-7.014189,8.590896,-3.884964,-8.177582,-6.066707,-5.297246,-2.433204,-0.135077,4.850354,5.361115,4.099645,5.548934,-6.559774,-6.846735,6.740058,2.713511,-5.219781,-8.505374,6.022572,-8.925792,-2.961724,-6.384150,-7.600086,8.224704,7.781739,8.646081,8.746326,-0.910580,1.784618,-1.225422,-2.914398,-1.126107,-2.926902,-7.997609,2.766006,-4.667830,1.907198,5.491375,9.602761,-7.408593,1.933506,-4.473615,-5.803399,-1.453242,5.987606,-7.869369,-5.897450,-1.085657,-1.838674,-0.750882,3.229029,5.908540,3.876575,-0.395888,9.011296,9.441968,-1.287875,-4.588666,-0.176526,-2.988698,7.415025,5.511196,-7.450525,-0.489574,-9.606360,-2.947789,0.269432,0.270405,-4.455108,-8.022663,-4.162835,-4.845852,2.248824,5.429383,8.687704,1.871625,-5.201694,-6.110325,-1.029772,2.832360,4.518746,6.436214,-5.691365,8.713713,-1.360614,-9.343190,8.544065,-4.952021,5.107458,-4.608114,8.585834,1.144772,8.969382,-4.229525,6.162127,-2.464666,-4.403041,3.070881], dtype = "float32")#candidate|6093|(1092,)|const|float32
call_6092 = relay.TupleGetItem(func_5797_call(relay.reshape(const_6093.astype('float32'), [1092,])), 0)
call_6094 = relay.TupleGetItem(func_5800_call(relay.reshape(const_6093.astype('float32'), [1092,])), 0)
output = relay.Tuple([call_6085,call_6092,const_6093,])
output2 = relay.Tuple([call_6086,call_6094,const_6093,])
func_6120 = relay.Function([], output)
mod['func_6120'] = func_6120
mod = relay.transform.InferType()(mod)
output = func_6120()
func_6121 = relay.Function([], output)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_6141 = relay.TupleGetItem(func_4810_call(), 0)
call_6142 = relay.TupleGetItem(func_4812_call(), 0)
func_2059_call = mod.get_global_var('func_2059')
func_2063_call = mutated_mod.get_global_var('func_2063')
const_6154 = relay.const(5.781101, dtype = "float32")#candidate|6154|()|const|float32
var_6155 = relay.var("var_6155", dtype = "float32", shape = (440,))#candidate|6155|(440,)|var|float32
call_6153 = relay.TupleGetItem(func_2059_call(relay.reshape(const_6154.astype('float32'), []), relay.reshape(var_6155.astype('float32'), [440, 1]), ), 0)
call_6156 = relay.TupleGetItem(func_2063_call(relay.reshape(const_6154.astype('float32'), []), relay.reshape(var_6155.astype('float32'), [440, 1]), ), 0)
func_3213_call = mod.get_global_var('func_3213')
func_3215_call = mutated_mod.get_global_var('func_3215')
var_6178 = relay.var("var_6178", dtype = "float64", shape = (1456,))#candidate|6178|(1456,)|var|float64
call_6177 = relay.TupleGetItem(func_3213_call(relay.reshape(var_6178.astype('float64'), [13, 16, 7])), 0)
call_6179 = relay.TupleGetItem(func_3215_call(relay.reshape(var_6178.astype('float64'), [13, 16, 7])), 0)
output = relay.Tuple([call_6141,call_6153,const_6154,var_6155,call_6177,var_6178,])
output2 = relay.Tuple([call_6142,call_6156,const_6154,var_6155,call_6179,var_6178,])
func_6189 = relay.Function([var_6155,var_6178,], output)
mod['func_6189'] = func_6189
mod = relay.transform.InferType()(mod)
mutated_mod['func_6189'] = func_6189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6189_call = mutated_mod.get_global_var('func_6189')
var_6191 = relay.var("var_6191", dtype = "float32", shape = (440,))#candidate|6191|(440,)|var|float32
var_6192 = relay.var("var_6192", dtype = "float64", shape = (1456,))#candidate|6192|(1456,)|var|float64
call_6190 = func_6189_call(var_6191,var_6192,)
output = call_6190
func_6193 = relay.Function([var_6191,var_6192,], output)
mutated_mod['func_6193'] = func_6193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_6310 = func_5085_call()
call_6311 = func_5085_call()
func_2436_call = mod.get_global_var('func_2436')
func_2440_call = mutated_mod.get_global_var('func_2440')
const_6315 = relay.const([[6],[-7],[2],[-1],[-4],[9],[-6],[4],[-4],[-1],[-6],[5],[1],[-3],[-5],[-4],[-6],[7],[6],[-8],[6],[10],[10],[10],[-4],[4],[-5],[10],[-3],[2],[9],[-9],[8],[-2],[-4],[5],[-10],[2],[10],[4],[2],[-6],[7],[4],[8],[-7],[4],[1],[-2],[6],[-3],[-5],[-5],[-3],[-8],[1],[-4],[-8],[10],[10],[8],[4],[-3],[-3],[5],[-10],[2],[1],[2],[-4],[-8],[-2],[-9],[-3],[4],[8],[3],[5],[-6],[3],[-10],[2],[-6],[-1],[7],[-9],[-10],[9],[-3],[10],[-8],[-9],[-8],[-10],[-3],[-6],[4],[6],[10],[-10],[-1],[-4],[-2],[-10],[-5],[-2],[9],[-7],[6],[-3],[-8],[1],[-6],[-6],[4],[-5],[-7],[-8],[2],[-5],[10],[-4],[-7],[-6],[-8],[-1],[8],[10],[10],[-2],[4],[-9],[-8],[3],[7],[-9],[-3],[4],[3],[2],[-10],[10],[4],[-2],[8],[9],[3],[6],[-7],[1],[6],[10],[4],[9],[5],[1],[-4],[-1],[-10],[5],[1],[3],[-1],[7],[-9],[1],[10],[-3],[5],[-2],[-3],[4],[-3],[-6],[-2],[-5],[4],[-8],[9],[3],[4],[1],[5],[-8],[8],[-1],[-4],[-8],[1],[-10],[-6],[7],[4],[-5],[9],[-9],[1],[-8],[-6],[7],[8],[-2],[-2],[-7],[-6],[-8],[-3],[2],[-10],[-10],[-4],[3],[9],[-4],[-8],[8],[8],[8],[2],[-4],[6],[3],[-1],[-9],[-10],[10],[-8],[-1],[-6],[3],[-7],[-2],[4],[-6],[-7],[7],[6],[-5],[2],[6],[2],[10],[-10],[-8],[-6],[-2],[5],[8],[4],[-6],[-6],[-6],[-2],[7],[-4],[-8],[10],[-6],[-8],[9],[-7],[-9],[-7],[-2],[2],[-3],[10],[9],[10],[-5],[-9],[-1],[-2],[-1],[3],[-6],[-5],[3],[-3],[2],[-2],[2],[-4],[-3],[6],[-1],[3],[-6],[-8],[9],[9],[4],[-2],[5],[-1],[-9],[-9],[4],[-3],[-10],[-4],[-4],[2],[4],[-6],[-3],[-8],[-10],[-3],[6],[-9],[-6],[7],[6],[4],[-6],[8],[7],[-9],[9],[-6],[4],[-9],[-6],[9],[-6],[-6],[-9],[-2],[-2],[-2],[9],[10],[7],[9],[-9],[-10],[10],[-7],[-4],[6],[-5],[2],[-7],[10],[3],[8],[9],[7],[9],[5],[10],[-9],[7],[-7],[-2],[-10],[-9],[-2],[1],[4],[3],[5],[9],[-9],[-10],[6],[-2],[-2],[-3],[-1],[-6],[-4],[7],[1],[-8],[-1],[8],[3],[10],[8],[8],[1],[9],[2],[-6],[8],[6],[-9],[6],[1],[5],[-4],[-8],[10],[1],[-1],[2],[-1],[-7],[4],[6],[7],[2],[6],[-6],[-1],[-9],[-3],[2],[-8],[-3],[-3],[10],[5],[-9],[-3],[1],[-8],[6],[10],[-1],[4],[-7],[-8],[2],[3],[-2],[10],[2],[-9],[6],[-5],[-2],[9],[-7],[1],[-3],[-7],[-3],[1],[-8],[3],[-5],[-1],[-10],[-10],[-4],[3],[-8],[-7],[5],[-4],[-4],[9],[3],[-3],[8],[-2],[-10],[-10],[5],[7],[4],[7],[-4],[10],[2],[-6],[-2],[-2],[-6],[-7],[-4],[7],[-4],[-4],[-6],[-10],[1],[-6],[-10],[2],[8],[-8],[4],[-7],[-8],[7],[5],[-4],[3],[-10],[9],[3],[5],[-4],[-4],[9],[-6],[-4],[9],[-3],[8],[-9],[-7],[4],[2],[-1],[3],[-10],[-3],[-5],[1],[-9],[-3],[9],[4],[8],[-3],[-5],[-1],[10],[-4],[-6],[-7],[3],[-3],[7],[4],[-2],[8],[-6],[-3],[-6],[-5],[-7],[-1],[-2],[10],[-2],[-6],[-6],[-5],[4],[-8],[-4],[-8],[-3],[-7],[7],[10],[-10],[3],[-6],[2],[7],[-2],[9],[-6],[7],[-1],[-4],[-1],[2],[-4],[2],[5],[6],[4],[8],[-1],[3],[9],[-3],[7],[1],[-10],[7],[-2],[1],[-9],[1],[-7],[-3],[-1],[6],[-7],[-5],[3],[3],[7],[5],[9],[-9],[4],[8],[-5],[9],[-5],[4],[3],[-8],[-10],[-9],[1],[2],[6],[-3],[1],[5],[-2],[-9],[1],[10],[10],[2],[3],[-6],[-2],[-8],[4],[9],[7],[-4],[-6],[4],[-1],[6],[2],[-10],[9],[8],[1],[-6],[8],[6],[-2],[-2],[8],[9],[-5],[1],[-7],[10],[2],[-6],[3],[4],[-9],[-8],[4],[8],[10],[-7],[6],[-4],[9],[8],[4],[-7],[-9],[9],[8],[-7],[4],[3],[1],[6],[-1],[-4],[8],[-9],[3],[5],[7],[-4],[-7],[-2],[6],[4],[-7],[10],[10],[1],[-10],[10],[3],[7],[7],[5],[-5],[4],[-4],[9],[-6],[-10],[1],[10],[5],[-5],[-8],[-2],[-4],[-9],[10],[9],[-3],[-7],[9],[-6],[2],[9],[5],[7],[3],[-4],[-6],[-2],[-5],[1],[2],[-1],[3],[3],[6],[1],[5],[-3],[1],[10],[-1],[5],[-3],[8],[-5],[-3],[9],[6],[-2],[5],[8],[5],[-6],[-2],[8],[1],[8],[-7],[-2],[-9],[3],[7],[-4],[5],[-2],[3],[8],[3],[-8],[-3],[1],[-8],[-1],[-10],[-9],[1],[8],[8],[-3],[-9],[5],[6],[2],[9],[8],[-6],[7],[6],[8],[-10],[-4],[3],[-3],[6],[-3],[-2],[7],[-2],[-9],[10],[-3],[6],[2],[-8],[9],[-9],[1],[5],[-2],[9],[-5],[4],[10],[10],[-6],[-7],[-7],[-9],[-7],[1],[-4],[-9],[4],[-10],[-4],[-4],[1],[1],[-3],[-1],[3],[10],[-2],[-1],[5],[-3],[2],[-6],[5],[-3],[-7],[9],[4],[-9],[3],[7],[-7],[8],[-3],[8],[-10],[-1],[-4],[-9],[4],[-9],[-8],[9],[6],[-10],[-6],[-5],[-2],[-4],[-3],[-5],[3],[5],[2],[6],[7],[-7],[4],[8],[3],[-1],[3],[-2],[10],[-1],[8],[5],[-3],[-9],[-4],[3],[2],[8],[-7],[8],[-4],[-7],[-6],[1],[-6],[-8],[-10],[6],[-3],[10],[-1],[3],[-2],[-1],[-7],[9],[7],[-8],[6],[8],[4],[8],[1],[7],[10],[3],[10],[-7],[7],[3],[7],[3],[7],[-7],[-1],[-9],[-1],[8],[1],[-5],[-3],[-2],[-4],[-7],[-9],[5],[2],[9],[9],[6],[-9],[6],[-2],[-3],[2],[-3],[8],[-9],[-6],[-5],[7],[-10],[6],[-10],[-5],[7],[-3],[-5],[7],[-7],[-6],[3],[-6],[6],[9],[9],[-9],[-6],[-10],[4],[-5],[9],[-3],[-3],[2],[9],[-10],[2],[7],[10],[-1],[-3],[-1],[7],[-7],[7],[1],[-2],[-2],[-5],[6],[-4],[8],[-2],[6],[-10],[-4],[9],[-4],[-9],[9],[-7],[-3],[5],[5],[-2],[5],[5],[4],[8],[-1],[8],[3],[-1],[4],[-10],[-5],[3],[5],[5],[-7],[-2],[3],[-6],[7],[8],[2],[3],[5],[-2],[3],[2],[-8],[-8],[-5],[6],[-10],[-6],[8],[-1],[-6],[2],[6],[5],[9],[-10],[1],[2],[9],[6],[-1],[-5],[1],[-5],[3],[-3],[-4],[9],[10],[1],[1],[-4],[5],[4],[6],[-9],[-2],[-9],[8],[-1],[9],[-2],[-1],[-4],[4],[4],[9],[10],[6],[10],[-3],[10],[-3],[-8],[4],[-2],[5],[5],[-6],[9],[-6],[-5],[-3],[-1],[-10],[2],[1],[-7],[-2],[5],[-6],[8],[-2],[9],[1],[8],[-3],[4],[-10],[4],[5],[-3],[7],[-1],[7],[-4],[7],[-8],[2],[-7],[-7],[2],[-9],[-5],[-1],[-1],[6],[-3],[6],[-1],[-1],[9],[6],[9],[5],[5],[-2],[-2],[-3],[-4],[-8],[1],[10],[9],[9],[2],[7],[-10],[-9],[3],[4],[3],[-4],[8],[4],[2],[-6],[-7],[8],[-4],[-8],[-6],[8],[-9],[4],[8],[-9],[3],[8],[1],[-3],[5],[5],[-6],[10],[7],[-6],[4],[-1],[-10],[7],[3],[3],[-9],[9],[-4],[-10],[-2],[10],[7],[9],[7],[-1],[1],[6],[-6],[-3],[6],[7],[8],[5],[8],[10],[-2],[7],[-10],[5],[2],[-8],[7],[6],[6],[-4],[-3],[8],[-9],[-3],[10],[-7],[6],[4],[-10],[3],[7],[7],[-5],[7],[10],[4],[4],[-7],[8],[-10],[-5],[-3],[-10],[-7],[7],[4],[-1],[-6],[-4],[8],[6],[-7],[7],[-3],[-6],[-3],[9],[2],[-2],[4],[6],[1],[-1],[-6],[2],[6],[7],[10],[9],[-8],[6],[4],[7],[9],[-4],[9],[2],[-9],[-9],[-5],[10],[-10],[-9],[2],[-4],[1],[-2],[-7],[2],[8],[-10],[-7],[-5],[5],[-1],[6],[4],[-10],[-8],[10],[-3],[-2],[-7],[-3],[7],[-8],[6],[-9],[-2],[-6],[5],[-6],[-2],[3],[-9],[10],[6],[-8],[-2],[-6],[2],[-8],[-7],[-1],[1],[6],[3],[-8],[-8],[-3],[-6],[10],[6],[6],[9],[-1],[-6],[-1],[-7],[-4],[2],[-6],[-1],[10],[-5],[-8],[-7],[-4],[-8],[-4],[-2],[10],[-3],[-3],[-5],[-9],[-8],[-4],[1],[-10],[-6],[-9],[9],[-7],[-4],[8],[6],[-6],[-10],[1],[9],[-2],[7],[5],[9],[-4],[4],[-9],[7],[-1],[-9],[-8],[6],[-5],[-4],[-2],[6],[-9],[-8],[-9],[-10],[2],[-8],[-6],[-9],[5],[8],[2],[-7],[10],[3],[6],[6],[10],[-10],[2],[6],[1],[-7],[7],[7],[-5],[-5],[-9],[-3],[-8],[3],[-6],[9],[-4],[7],[-6],[-10],[-4],[-7],[-6],[-7],[7],[7],[6],[7],[6],[8],[-8],[8],[-6],[5],[-7],[-3],[5],[-6],[-4],[9],[4],[-9],[6],[6],[5],[-6],[3],[-2],[10],[-4],[-4],[1],[-9],[-10],[9],[6],[5],[-8],[1],[-5],[-10],[-9],[4],[5],[-9],[-10],[-8],[-4],[-8],[-1],[6],[-2],[5],[4],[-6],[4],[7],[-10],[-3],[2],[5],[-6],[-2],[1],[-7],[-7],[-4],[-5],[-1],[-4],[-5],[4],[2],[-2],[10],[-8],[7],[8],[-8],[-9],[3],[-7],[-9],[5],[1],[-8],[10],[8],[-7],[-6],[8],[1],[-9],[5],[10],[-2],[4],[-2],[-4],[-2],[8],[1],[1],[1],[-4],[4],[-2],[7],[4],[1],[-8],[8],[6],[2],[7],[-7],[3],[7],[9],[-1],[-5],[-5],[7],[-10],[-4],[4],[-8],[3],[-4],[-6],[-8],[-8],[-10],[2],[-2],[-4],[-7],[6],[9],[-7],[-9],[-4],[-5],[10],[1],[-10],[8],[-7],[-2],[-10],[5],[1],[-3],[5],[3],[6],[3],[10],[6],[-7],[6],[5],[5],[2],[4],[-4],[-8],[-8]], dtype = "int32")#candidate|6315|(1575, 1)|const|int32
call_6314 = relay.TupleGetItem(func_2436_call(relay.reshape(const_6315.astype('int32'), [15, 15, 7]), relay.reshape(const_6315.astype('int32'), [15, 15, 7]), ), 4)
call_6316 = relay.TupleGetItem(func_2440_call(relay.reshape(const_6315.astype('int32'), [15, 15, 7]), relay.reshape(const_6315.astype('int32'), [15, 15, 7]), ), 4)
output = relay.Tuple([call_6310,call_6314,const_6315,])
output2 = relay.Tuple([call_6311,call_6316,const_6315,])
func_6321 = relay.Function([], output)
mod['func_6321'] = func_6321
mod = relay.transform.InferType()(mod)
output = func_6321()
func_6322 = relay.Function([], output)
mutated_mod['func_6322'] = func_6322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6120_call = mod.get_global_var('func_6120')
func_6121_call = mutated_mod.get_global_var('func_6121')
call_6332 = relay.TupleGetItem(func_6120_call(), 1)
call_6333 = relay.TupleGetItem(func_6121_call(), 1)
func_6321_call = mod.get_global_var('func_6321')
func_6322_call = mutated_mod.get_global_var('func_6322')
call_6342 = relay.TupleGetItem(func_6321_call(), 2)
call_6343 = relay.TupleGetItem(func_6322_call(), 2)
func_692_call = mod.get_global_var('func_692')
func_695_call = mutated_mod.get_global_var('func_695')
const_6367 = relay.const([[2.833493,6.331586],[-5.706950,-2.582534],[5.032276,4.988645],[2.679882,-0.757202],[-1.197483,4.113440],[6.875898,-1.096862],[9.326962,4.616193],[-0.609854,0.672806],[-9.024118,9.873348],[-6.658038,2.204083],[-7.524984,7.742854],[-8.900363,-0.944741],[9.775495,2.864151],[-3.006307,2.331084],[8.111077,0.281966],[-5.262683,2.007169],[-4.041926,9.777896],[2.457840,-5.189435],[3.742910,1.141770],[4.006252,-1.845121],[1.521510,5.591949],[7.503806,-6.902560],[2.067271,6.165384],[-1.534076,-8.990378],[6.971773,4.502724],[-8.413116,-0.899684],[2.694884,9.545525],[0.818496,7.054726],[4.693775,-4.534219],[-2.127010,2.645834],[8.931341,4.503927],[-7.400683,-3.172172],[4.841980,-0.429281],[8.633536,4.083613],[-5.268200,5.005335],[6.026355,0.875350],[2.570207,0.940943],[-1.402391,5.450310],[0.598542,6.731300],[-5.152367,0.196533],[6.073153,6.891179],[6.745524,0.959006],[-2.043007,2.094312],[-2.242347,-3.608328],[9.756886,7.910531],[4.952557,7.303968],[2.520756,-3.066327],[-4.666669,1.709794],[3.773797,-3.806013],[6.515596,-6.495174],[-9.203523,5.443070],[-3.561531,-3.579716],[-4.984360,3.514570],[-1.691434,-2.662566],[8.851728,4.257571],[3.355555,4.303366],[2.707963,5.759653],[-6.398279,-4.756843],[4.474415,0.711071],[-7.600244,6.965804],[5.351556,-7.602889],[1.727499,9.903212],[4.029898,-7.055339],[3.796498,1.836019],[9.513263,8.980538],[-2.795951,-1.080056],[-1.146755,-8.655986],[4.160826,0.853947],[-9.714489,-5.336598],[-8.390914,6.900941],[-3.904913,-0.449102],[1.119951,0.566165],[-8.814479,-8.145690],[-4.547759,6.873598],[-2.615540,6.636259],[6.916472,-9.852477],[-1.310049,-3.216158],[-0.177016,-2.861181],[2.666640,-6.195550],[-0.472702,-2.231224],[0.286355,-8.431186],[8.378372,-1.222365],[7.287471,-3.615557],[-8.360834,-6.709991],[6.141944,3.032487],[-3.408281,4.976530],[9.935928,8.406899],[5.600266,-4.145742],[-7.990393,-9.286902],[-2.702813,-6.027086],[5.854432,2.962698],[2.405440,-2.838872],[-5.448522,5.334740],[-6.245035,-4.186783],[-8.334426,6.351352],[5.852262,-3.980019],[-6.159826,-2.884317],[9.979281,-0.277689],[7.313179,-3.885074],[-3.889280,0.555173],[6.929572,5.181431],[0.895029,8.283622],[6.787626,9.727510],[-5.077089,3.477891],[0.081546,-9.522160],[-7.077604,1.720835],[-4.045204,-5.285056],[-1.128900,0.187165],[-3.092209,9.665721],[-3.573957,-2.024441],[-6.819232,5.693200],[3.106955,1.811252],[-2.380396,-1.258862],[3.756545,-3.590435],[1.631633,-6.075389],[-9.895023,6.860731],[-7.023288,0.067371],[9.642418,7.555087],[1.396162,4.109516],[0.531944,7.219622],[-9.824844,-1.917186],[1.286458,1.441374],[0.851235,3.420812],[8.845131,5.241827],[3.977636,-0.343828],[-1.720508,-9.889404],[-0.536260,-2.287274],[4.305718,1.669146],[0.998580,2.358184],[-4.478482,-2.344528],[-6.710448,-9.620366],[-1.908261,2.504656],[-3.760789,6.602372],[6.899605,-9.741396],[3.910232,8.566793],[1.855465,-0.843483],[-8.674000,6.217157],[-1.856872,8.559922],[8.468007,-5.863432],[8.294298,-9.230557],[8.549489,-5.549708],[6.149135,4.809133],[9.168220,6.865264],[3.087172,-3.093259]], dtype = "float32")#candidate|6367|(144, 2)|const|float32
call_6366 = relay.TupleGetItem(func_692_call(relay.reshape(const_6367.astype('float32'), [288, 1])), 1)
call_6368 = relay.TupleGetItem(func_695_call(relay.reshape(const_6367.astype('float32'), [288, 1])), 1)
output = relay.Tuple([call_6332,call_6342,call_6366,const_6367,])
output2 = relay.Tuple([call_6333,call_6343,call_6368,const_6367,])
func_6376 = relay.Function([], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
mutated_mod['func_6376'] = func_6376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mutated_mod.get_global_var('func_6376')
call_6377 = func_6376_call()
output = call_6377
func_6378 = relay.Function([], output)
mutated_mod['func_6378'] = func_6378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6120_call = mod.get_global_var('func_6120')
func_6121_call = mutated_mod.get_global_var('func_6121')
call_6379 = relay.TupleGetItem(func_6120_call(), 0)
call_6380 = relay.TupleGetItem(func_6121_call(), 0)
func_2059_call = mod.get_global_var('func_2059')
func_2063_call = mutated_mod.get_global_var('func_2063')
const_6396 = relay.const(9.755420, dtype = "float32")#candidate|6396|()|const|float32
var_6397 = relay.var("var_6397", dtype = "float32", shape = (440,))#candidate|6397|(440,)|var|float32
call_6395 = relay.TupleGetItem(func_2059_call(relay.reshape(const_6396.astype('float32'), []), relay.reshape(var_6397.astype('float32'), [440, 1]), ), 5)
call_6398 = relay.TupleGetItem(func_2063_call(relay.reshape(const_6396.astype('float32'), []), relay.reshape(var_6397.astype('float32'), [440, 1]), ), 5)
output = relay.Tuple([call_6379,call_6395,const_6396,var_6397,])
output2 = relay.Tuple([call_6380,call_6398,const_6396,var_6397,])
func_6416 = relay.Function([var_6397,], output)
mod['func_6416'] = func_6416
mod = relay.transform.InferType()(mod)
var_6417 = relay.var("var_6417", dtype = "float32", shape = (440,))#candidate|6417|(440,)|var|float32
output = func_6416(var_6417)
func_6418 = relay.Function([var_6417], output)
mutated_mod['func_6418'] = func_6418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5117_call = mod.get_global_var('func_5117')
func_5118_call = mutated_mod.get_global_var('func_5118')
call_6420 = relay.TupleGetItem(func_5117_call(), 2)
call_6421 = relay.TupleGetItem(func_5118_call(), 2)
uop_6426 = relay.sigmoid(call_6420.astype('float32')) # shape=(600, 2)
uop_6428 = relay.sigmoid(call_6421.astype('float32')) # shape=(600, 2)
func_1844_call = mod.get_global_var('func_1844')
func_1849_call = mutated_mod.get_global_var('func_1849')
var_6436 = relay.var("var_6436", dtype = "float64", shape = (154,))#candidate|6436|(154,)|var|float64
var_6437 = relay.var("var_6437", dtype = "float32", shape = (288,))#candidate|6437|(288,)|var|float32
const_6438 = relay.const([7.340156,-4.867907,3.612915,-6.905318,5.925483,1.136089,2.442720,-7.826265,9.303534,-4.557560,-3.846915,-9.339354,-5.423498,-9.697252,5.246392,-2.865215,8.960071,8.527456,-2.397685,4.430473,0.710355,8.959469,2.939922,-3.721670,-6.501084,2.447992,1.860340,-1.455926,-8.242383,8.617553,3.708267,-2.691882,-0.550525,3.460835,9.878072,-9.407257,2.234480,-8.698787,-0.161026,-0.556364,0.118067,4.803897,6.236225,-6.096155,-1.725071,4.637874,7.142964,-4.887737,7.604438,-4.121482,-3.732644,-1.404266,-0.344464,6.609808,0.829713,-3.497023,1.897852,3.262626,9.699842,-0.035661,-8.834764,9.050863,8.561922,0.403096,4.267811,-0.653322,3.384835,9.114888,1.250860,-3.850370,-5.623369,5.000244,-7.435523,5.136541,-0.526063,6.078043,3.989838,-8.271126,-4.358324,-5.617639,-4.065847,6.293895,3.995432,8.356848,2.684731,9.962320,-5.927916,9.836954,-3.618908,-6.927568,-8.429495,6.335834,-9.082020,6.722736,4.555074,-5.187240,-5.952465,5.267863,2.521088,-3.638153,-0.500353,-3.636892,-3.152677,7.391316,-9.748455,6.600110,1.146148,3.053410,-9.650346,-6.668249,-8.750992,3.625683,8.707925,-0.803747,-8.051582,2.901951,-1.623745,6.306770,-3.270031,2.762746,1.551698,6.813921,2.095834,-7.817231,7.071619,-4.965705,-2.902752,-4.166099,-7.996956,-3.948289,2.022813,-7.064294,0.370490,-2.223736,-9.943346,7.784297,-9.644578,1.504870,2.314678,-2.934206,-7.055451,-0.761383,-9.682540,-5.534840,7.278760,4.481632,8.627735,-7.466235,-5.291249,-8.346251,1.806066,-5.281581,-1.606126,9.791847,0.623816,1.154557,-4.645318,-3.894285,-4.138013,-4.060734,2.102565,4.986985,6.310263,-1.485129,-0.308836,-3.632365,-2.722542,-1.225704,-5.723591,-9.285555,8.182788,-9.164358,5.876547,-1.143038,7.553006,1.404120,7.185032,1.833031,-7.883284,-7.668408,-2.498580,-5.008507,6.756227,-4.440246,3.617252,5.206526,-3.980135,-8.487012,8.758932,4.822169,7.803991,1.143778,3.481416,0.992129,-7.145160,7.670497,6.518063,4.291637,-5.475301,-0.529063,-8.291725,-9.054168,9.726403,-8.037872,0.947716,-6.814062,-5.866734,9.838193,-0.860179,-0.057957,-9.406265,-4.974092,7.928696,-9.710775,1.542793,5.968896,0.805291,-9.543242,5.825983,0.966708,-7.259209,1.116825,9.669494,3.877934,-8.777976,9.648384,7.207860,-8.255678,6.956598,-2.761085,9.332425,3.441828,3.958669,-6.675818,-3.537155,1.053401,7.308350,-2.331273,-3.937270,-6.134519,0.794939,7.384250,8.287664,3.933128,5.050238,6.382650,-2.402180,5.700690,-9.795577,-9.170076,1.251988,-6.533265,-4.752824,6.631879,-1.269851,6.895108,0.448678,-9.314908,-7.571180,-5.391204,6.387795,4.471232,-1.410399,0.092317,-1.529418,1.559212,1.180237,-1.063347,-7.331572,-9.211778,8.819983,-2.698104,3.795036,-5.781085,9.057721,7.695429,-1.089153,-9.826515,7.775077,-3.944177,2.662166,2.185144,4.512961,-1.934816,5.619443,-6.343484,1.700413,-5.456869,2.085838,-6.706297,4.471458,0.462853,-3.815405,-0.899184,1.835644,0.728489,-5.775837,9.388857,-1.985530,-5.032430,3.097901,4.341653,1.596497,0.232707,-0.517176,5.679487,4.143974,0.891452,-6.215335,9.668348,-7.613024,-6.434744,8.530056,-3.552437,-1.552040,1.190129,0.263870,-0.219986,-5.785395,9.966231,9.810529,-2.593445,8.469221,3.212585,2.432762,2.023625,9.245768,1.015864,-8.899456,7.092790,-9.536701,-0.598687,7.103313,-4.947997,-8.303524,-0.950708,7.579132,-8.224741,-1.118178,-0.243585,-7.961954,-7.226905,-0.031810,-9.261337,8.565835,1.083060,-9.089179,-8.603024,-5.901862,-7.012665,-4.916120,-7.368643,5.991610,6.814816,-6.339549,-6.305284,2.922053,2.880293,-0.626413,-8.521340,1.976323,4.028769,9.744562,9.496877,-5.521990,-2.145778,-4.296068,-4.123566,3.268769,4.413925,-3.436861,-7.955874,-1.048874,0.036743,3.639633,4.875121,8.885619,4.843552,-2.159681,-8.776194,-7.797921,0.746504,0.180126,-3.668545,8.832640,3.763418,7.953763,-8.586416,0.595967,-5.773343,7.039110,5.767124,-1.419115,-6.885075,8.440814,-7.404424,4.650249,-2.617291,0.809831,-5.455735,-8.717024,-3.233264,3.212020,-3.496096,-7.702599,-2.075594,-8.856422,-8.413365,-8.683431,0.909907,3.348442,5.469342,6.675735,-8.782437,-3.181731,-4.405163,-7.920589,0.473054,0.775801,-1.409187,-9.250973,0.840054,-6.439016,-1.946007,-3.680544,-6.433269,9.607906,6.214967,5.078973,4.892338,-6.091201,-2.068597,6.618150,-6.725902,2.840281,-2.643091,9.600729,-0.607440,-8.277732,-2.229943,-1.317801,-0.246602,-1.202162,8.650318,2.956091,-2.363829,-1.681296,-4.277913,-7.987237,-7.743266,7.539473,9.678546,-8.335976,-9.767284,-1.867785,-9.281471,1.759709,-2.344511,-3.457912,3.369558,9.712836,3.715782,9.956055,4.051821,-8.073169,3.972609,-4.624696,7.225626,5.737713,6.868170,-1.513032,-4.111612,7.550813,-2.514618,-2.962771,8.453300,1.870926,6.045805,7.999397,-5.413784,-7.800375,5.540456,-7.294038,-4.567550,0.384440,-7.681025,3.912612,3.407050,2.940441,-5.805435,-7.537522,1.683051,-6.225821,-6.779517,7.380941,0.371212,-3.332361,6.033384,0.083607,-8.872936,6.415841,8.464155,-7.646884,4.136762,-8.472866,6.651380,-4.501075,-5.582971,-4.499774,-8.456106,0.792810,2.434058,-9.043665,-3.045896,-9.567664,-8.206897,4.364248,-7.592216,4.565088,-8.220988,0.826451,-6.786227,-1.853046,-7.451191,7.492802,6.958290,6.266618,-3.973930,7.475720,1.448142,-4.130710,6.521846,4.196023,4.568216,-5.287918,-4.196788,7.908140,6.142511,7.049430,-9.728649,-9.581559,1.555824,8.616200,5.566988,7.449764,-5.891711,9.395383,3.892604,-5.816262,8.058656,-4.831224,-2.509147,-4.342160,-7.514147,-5.305131,-5.280882,-4.541059,-9.865179,6.514556,-9.719616,-5.330854,-5.844794,-5.444960,3.319293,-5.630189,1.179618,-0.758930,6.679881,8.772810,2.773010,-9.690644,-4.552597,5.948232,-0.592667,3.737373,3.429528,-7.640375,8.093947,-6.629278,1.010685,6.700861,2.431239,-7.856664,-2.003768,-2.215367,4.884067,0.673488,8.067398,-0.457049,9.722981,-1.962617,-3.071963,4.933506,-5.789729,-1.024522,-1.328556,-6.014789,1.014060,-3.215455,2.157616,5.412615,-3.288315,-8.890019,-6.263234,2.285465,-5.792579,-1.944998,-4.329705,-3.029563,0.030577,-7.603478,-6.635204,-3.526945,-7.696287,8.680791,9.839392], dtype = "float64")#candidate|6438|(616,)|const|float64
call_6435 = relay.TupleGetItem(func_1844_call(relay.reshape(var_6436.astype('float64'), [1, 14, 11]), relay.reshape(var_6437.astype('float32'), [288,]), relay.reshape(const_6438.astype('float64'), [4, 14, 11]), ), 6)
call_6439 = relay.TupleGetItem(func_1849_call(relay.reshape(var_6436.astype('float64'), [1, 14, 11]), relay.reshape(var_6437.astype('float32'), [288,]), relay.reshape(const_6438.astype('float64'), [4, 14, 11]), ), 6)
output = relay.Tuple([uop_6426,call_6435,var_6436,var_6437,const_6438,])
output2 = relay.Tuple([uop_6428,call_6439,var_6436,var_6437,const_6438,])
func_6442 = relay.Function([var_6436,var_6437,], output)
mod['func_6442'] = func_6442
mod = relay.transform.InferType()(mod)
var_6443 = relay.var("var_6443", dtype = "float64", shape = (154,))#candidate|6443|(154,)|var|float64
var_6444 = relay.var("var_6444", dtype = "float32", shape = (288,))#candidate|6444|(288,)|var|float32
output = func_6442(var_6443,var_6444,)
func_6445 = relay.Function([var_6443,var_6444,], output)
mutated_mod['func_6445'] = func_6445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6045_call = mod.get_global_var('func_6045')
func_6046_call = mutated_mod.get_global_var('func_6046')
call_6453 = relay.TupleGetItem(func_6045_call(), 1)
call_6454 = relay.TupleGetItem(func_6046_call(), 1)
output = relay.Tuple([call_6453,])
output2 = relay.Tuple([call_6454,])
func_6479 = relay.Function([], output)
mod['func_6479'] = func_6479
mod = relay.transform.InferType()(mod)
mutated_mod['func_6479'] = func_6479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6479_call = mutated_mod.get_global_var('func_6479')
call_6480 = func_6479_call()
output = call_6480
func_6481 = relay.Function([], output)
mutated_mod['func_6481'] = func_6481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5745_call = mod.get_global_var('func_5745')
func_5747_call = mutated_mod.get_global_var('func_5747')
call_6510 = relay.TupleGetItem(func_5745_call(), 0)
call_6511 = relay.TupleGetItem(func_5747_call(), 0)
output = relay.Tuple([call_6510,])
output2 = relay.Tuple([call_6511,])
func_6512 = relay.Function([], output)
mod['func_6512'] = func_6512
mod = relay.transform.InferType()(mod)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6512_call = mutated_mod.get_global_var('func_6512')
call_6513 = func_6512_call()
output = call_6513
func_6514 = relay.Function([], output)
mutated_mod['func_6514'] = func_6514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5679_call = mod.get_global_var('func_5679')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_6555 = relay.TupleGetItem(func_5679_call(), 0)
call_6556 = relay.TupleGetItem(func_5680_call(), 0)
func_4611_call = mod.get_global_var('func_4611')
func_4613_call = mutated_mod.get_global_var('func_4613')
call_6576 = relay.TupleGetItem(func_4611_call(), 0)
call_6577 = relay.TupleGetItem(func_4613_call(), 0)
output = relay.Tuple([call_6555,call_6576,])
output2 = relay.Tuple([call_6556,call_6577,])
func_6580 = relay.Function([], output)
mod['func_6580'] = func_6580
mod = relay.transform.InferType()(mod)
mutated_mod['func_6580'] = func_6580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6580_call = mutated_mod.get_global_var('func_6580')
call_6581 = func_6580_call()
output = call_6581
func_6582 = relay.Function([], output)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5679_call = mod.get_global_var('func_5679')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_6637 = relay.TupleGetItem(func_5679_call(), 0)
call_6638 = relay.TupleGetItem(func_5680_call(), 0)
output = relay.Tuple([call_6637,])
output2 = relay.Tuple([call_6638,])
func_6645 = relay.Function([], output)
mod['func_6645'] = func_6645
mod = relay.transform.InferType()(mod)
output = func_6645()
func_6646 = relay.Function([], output)
mutated_mod['func_6646'] = func_6646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4812_call = mutated_mod.get_global_var('func_4812')
call_6650 = relay.TupleGetItem(func_4810_call(), 0)
call_6651 = relay.TupleGetItem(func_4812_call(), 0)
output = call_6650
output2 = call_6651
func_6654 = relay.Function([], output)
mod['func_6654'] = func_6654
mod = relay.transform.InferType()(mod)
output = func_6654()
func_6655 = relay.Function([], output)
mutated_mod['func_6655'] = func_6655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6697 = relay.var("var_6697", dtype = "float32", shape = (4, 14, 11))#candidate|6697|(4, 14, 11)|var|float32
var_6698 = relay.var("var_6698", dtype = "float32", shape = (4, 14, 11))#candidate|6698|(4, 14, 11)|var|float32
bop_6699 = relay.greater(var_6697.astype('bool'), relay.reshape(var_6698.astype('bool'), relay.shape_of(var_6697))) # shape=(4, 14, 11)
uop_6702 = relay.log2(bop_6699.astype('float32')) # shape=(4, 14, 11)
func_2816_call = mod.get_global_var('func_2816')
func_2819_call = mutated_mod.get_global_var('func_2819')
var_6705 = relay.var("var_6705", dtype = "float64", shape = (26, 52))#candidate|6705|(26, 52)|var|float64
call_6704 = relay.TupleGetItem(func_2816_call(relay.reshape(var_6705.astype('float64'), [8, 13, 13]), relay.reshape(var_6705.astype('float64'), [8, 13, 13]), ), 0)
call_6706 = relay.TupleGetItem(func_2819_call(relay.reshape(var_6705.astype('float64'), [8, 13, 13]), relay.reshape(var_6705.astype('float64'), [8, 13, 13]), ), 0)
func_5301_call = mod.get_global_var('func_5301')
func_5306_call = mutated_mod.get_global_var('func_5306')
const_6714 = relay.const([1,-5,-8,-3,-6,-4,-9,-2,-7,-4,4,7,9,-2,-8,-4,8,9,-4,-10,-3,9,-9,4,10,9,7,2,9,-8,-4,5,2,8,4,-4,4,10,6,1,5,-2,7,8,-9,-2,-9,-4,1,-4,-2,4,6,1,-10,-10,4,7,7,7,2,-8,6,-1,-8,2,5,-7,-9,-5,-3,-4,-8,-6,4,8,5,-6,-1,-8,2,-8,5,10,-6,-3,-9,-3,5,9,-5,9,4,-10,4,4,7,5,-7,-8,-9,1,-7,4,-6,-5,-9,-2,10,9,-10,-10,-5,3,-9,7,1,5,-2,9,-9,8,7,-2,-2,10,4,-10,-4,-2,-3,10,-7,-1,-3,5,-5,1,-3,-10,6,6,8,2,1,5,-3,10,-10,-8,-9,5,6,-7,-1,-5,-7,-8,8,-6,-3,7,-6,7,5,-8,-8,10,1,6,-6,-10,1,7,7,2,-6,10,-5,-9,4,-7,-2,-10,-8,-6,5,-7,-3,8,10,4,1,10,-2,-6,-8,-1,-2,5,5,-4,7,-9,-8,4,8,-3,-1,7,-2,2,-8,2,1,-9,1,9,5,-10,-6,10,-10,7,6,7,-4,9,9,1,-9,10,-6,-9,8,5,-2,2,-7,-5,10,4,10,-8,-5,1,-1,-5,10,7,1,-4,6,9,2,8,-8,7,-6,-9,6,-6,-8,4,-2,8,5,-10,-5,-6,-5,-10,-7,-2,-4,5,-10,-6,9,-8,3,6,-5,6,-7,8,7,6,-5,-10,-1,10,3,10,8,-4,-4,-6,9,9,-4,-10,5,8,6,10,10,-9,-7,-6,-8,3,-1,9,1,-5,-4,-10,1,-10,6,8,-1,-1,-7,1,-5,5,3,5,-3,1,-5,8,-8,5,-6,10,-10,-6,-7,-2,1,-8,3,-10,-4,-4,3,7,8,-5,-6,4,5,-5,-6,7,-4,6,10,4,9,5,1,1,-5,-6,1,-9,1,-1,10,-6,4,-4,8,-8,-7,6,6,-7,-6,-2,-4,-5,4,2,5,10,10,2,1,2,5,-4,-9,-2,4,4,-6,5,-7,5,4,1,-9,-1,-5,8,5,2,3,-9,-7,-6,-1,2,7,10,-3,7,-6,-2,-3,2,2,-4,-8,-3,3,8,2,4,7,1,6,2,8,4,4,-3,-2,1,-7,4,4,6,4,-5,3,-5,-8,3,-2,-9,-5,-5,7,-6,10,6,4,2,-1,2,-7,-7,5,10,6,-4,-10,-7,-4,-3,3,-10,1,-6,1,10,-7,2,6,-9,-9,-5,-3,10,-5,2,2,4,6,-8,2,-4,7,-10,7,-9,-2,7,-7,3,-10,10,8,5,-8,2,3,6,1,-4,5,5,8,-5,9,-6,4,10,2,8,10,-7,-6,-4,-10,7,4,5,4,-6,7,-3,-10,2,8,-3,10,3,4,2,6,1,1,-3,-7,9,2,6,-7,-7,8,5,-9,-3,6,9,7,3,8,-5,4,3,-8,-2,-7,1,-9,5,-3,-1,6,-10,-9,-2,-8,6,-5,-1,-5,-9,4,-8,-6,-10,-1,-7,-10,3,3,-8,4,-4,2,3,10,10,10,8,-2,5,1,4,3,3,-3,-9,-7,-6,-10,-6,1,-8,-5,8,-5,3,-7,9,4,-7,5,4,9,-2,-8,-1,6,9,6,-3,10,-8,2,-8,9,3,-1,9,6,-1,2,3,-1,-3,10,7,1,9,-3,2,-4,10,-10,5,10,2,8,-4,-8,8,-3,9,2,-7,-9,-9,-4,8,5,1,1,-1,-7,-10,2,-4,-2,-8,5,9,4,4,-4,3,-8,-7,6,-8,1,-9,-3,-9,-9,9,-2,-7,4,-6,6,8,-2,2,2,-10,-7,7,3,7,1,-6,-4,-1,4,7,-7,-5,9,-8,9,-4,-8,-8,-7,4,3,-2,5,-5,3,1,8,-2,5,-8,9,-5,-4,-9,-10,-10,-5,9,-8,-8,-8,-2,7,3,-3,10,-6,-10,-8,1,3,10,-4,7,5,2,6,-8,-9,7,-4,5,-2,10,3,5,-5,-4,-3,-10,6,-2,9,7,2,3,3,-8,2,-4,-1,10,3,6,5,-6,9,5,-9,7,8,-9,-7,-7,-7,5,9,6,7,10,8,-3,6,-9,10,-6,8,-3,-4,-6,-1,-3,-4,2,2,5,10,9,8,10,-5,-8,2,10,2,-9,4,-3,10,4,-9,-2,-1,-4,-10,-8,-1,-10,10,8,-3,-6,6,9,-7,8,6,-7,-2,5,-7,8,9,-8,-5,10,-3,7,8,-7,-1,-2,-6,3,2,-1,8,5,-7,-6,-1,-2,-5,-4,-7,7,-8,4,-10,4,-4,10,-4,9,10,-6,4,-5,-9,9,2,3,-6,3,-5,-7,2,2,4,1,-9,-7,5,9,3,-9,5,-6,-2,-7,6,7,-3,7,-2,-5,5,1,6,-5,9,5,-5,-3,9,-5,5,-4,1,-10,-10,-4,-7,-7,7,1,6,-8,-6,-10,-4,-10,7,9,-7,-2,2,-6,-3,1,4,3,-9,-1,-5,-1,-5,8,-7,3,6,5,-3,8,-3,-3,-2,-7,1,-7,10,-5,-9,9,2,1,7,-5,-6,-6,1,-6,-8,-5,10,5,-1,4,-5,-7,-5,4,-4,-4,-3,1,-10,8,-9,-6,6,8,-4,-9,-5,6,5,-6,1,1,-8,8,9,-5,9,-5,3,-2,8,-3,-8,-5,-1,3,-8,-5,-9,6,9,6,3,2,-7,-10,-6,7,6,-6,-2,-8,-5,1,-8,-2,8,-2,9,6,10,10,1,-9,-1,3,-6,-4,-5,-5,-1,9,-6,2,-7,-3,4,-3,3,1,9,-5,-6,5,5,-6,8,-10,6,-10,-10,-10,-6,-1,-4,-1,8,-5,-9,8,10,-2,9,3,-4,8,3,10,8,-8,-4,5,-9,6,1,-1,10,-1,7,-2,-6,7,-8,-1,-6,9,2,-2,4,-8,-4,8,-4,2,-3,-4,-7,-10,-6,1,4,4,4,6,5,-5,-2,-4,-3,10,1,7,-3,-2,10,2,3,-1,-1,-7,10,7,4,-8,8,-3,2,-8,8,5,-1,-3,5,3,10,4,1,-2,3,-4,-10,3,-8,8,-10,6,-1,8,-5,-4,1,5,-1,9,-8,6,-9,-1,-9,4,3,-3], dtype = "int8")#candidate|6714|(1200,)|const|int8
const_6715 = relay.const([2,1,10,-6,-6,-3,1,-7,3,-8,-2,5,-8,-6,-3,-1,-4,3,-4,1,3,4,-9,-3,-6,7,7,6,10,-6,2,10,-10,1,9,6,8,-8,-3,-1,1,9,-2,3,10,5,-7,-7,7,2,10,1,-8,-8,1,9,9,-10,-6,3,4,-7,4,-9,4,8,-7,-3,-10,-5,-10,1,-4,-10,-5,4,10,2,7,-6,1,6,-5,-3,2,5,2,-3,8,7,-6,-3,-4,2,-6,-4,-4,-5,9,-3,-7,5,4,-6,-1,6,-3,6,5,1,-8,-8,-7,-1,-2,9,5,-9,-2,-1,-7,10,9,-9,4,8,7,4,1,-10,10,-2,-5,-3,-5,10,5,-4,-8,1,-3,5,4,-3,5,-10,5,1,3,9,-10,2,2,2,-8,-3,-1,-10,8,-2,9,9,3,5,5,8,2,-3,-7,-4,7,8,8,2,1,10,-5,-5,-10,-8,4,-10,-7,3,-7,1,-6,1,6,9,-7,-9,-7,-1,-7,-2,5,9,7,6,-9,-10,-5,-9,4,10,5,4,-4,-1,-5,1,-6,-2,2,-9,-6,-8,-3,1,4,-1,-1,-3,1,7,6,8,10,-7,9,-5,-6,-7,9,6,-1,2,-1,8,-8,10,5,-6,-7,9,-8,4,-7,-4,-10,10,7,-3,7,-4,6,-9,-1,8,-7,-5,-9,-10,1,3,-6,1,6,-4,5,8,-2,-4,3,3,7,8,9,4,-3,1,1,3,-6,-10,6,4,-6,-3,10,-2,3,7,-7,-4,-10,-10,-7,-10,-1,-5,10,-5,10,9,3,9,1,-10,6,1,-8,-7,-5,9,-7,2,-6,6,-4,-7,6,5,-3,6,-10,5,7,3,1,7,-6,9,-6,7,-10,7,2,1,-6,5,5,5,6,-5,2,8,3,-2,-10,8,-5,6,-6,3,8,-9,-1,-5,2,5,4,-4,1,-5,-4,3,-8,7,7,-8,-1,8,-3,1,4,1,-1,4,-10,-3,10,4,-4,-3,-2,-6,10,-6,-8,10,5,10,6,-6,-3,-9,-4,2,-5,-8,8,1,-9,-10,-6,-9,-2,8,2,-2,-4,9,-3,5,6,6,-9,-1,-6,5,3,-6,2,-1,-8,1,-4,-10,-1,-5,-8,4,-10,10,-8,-9,-1,-4,-6,9,-7,-6,1,8,-10,-3,-5,-8,2,8,-2,-10,1,6,-10,1,-7,6,2,-2,-8,1,-3,-6,-6,4,-3,-3,-10,-2,-5,-6,2,10,8,4,-10,9,3,-6,-4,-9,7,-1,-10,-7,-10,7,7,-3,3,2,2,5,-7,-6,-3,7,-8,9,5,-5,9,4,3,-10,5,-8,-3,6,-5,-2,9,10,-10,-7,3,10,6,-7,-3,3,-10,7,-5,-5,5,-1,-9,-2,-10,-7,-1,-6,-1,5,-3,-2,-1,-8,1,-1,5,1,-2,4,-1,8,8,-10,10,-4,4,-8,4,5,1,2,-7,9,-5,3,6,10,7,2,3,-10,4,6,-4,-5,-7,3,1,3,-7,-4,10,-4,1,-4,-5,-5,-2,7,4,-3,9,4,7,6,8,6,1,6,-7,-10,7,-1,8,7,8,-2,-7,6,6,8,1,1,-4,-8,9,5,-5,7,4,7,7,10,-6,7,-2,5,1,-7,-4,9,-3,1,1,-5,-3,9,-2,3,-9,3,7,5,5,-4,7,2,8,-9,-1,-5,9,-4,7,2,-8,-9,2,-5,-6,-5,2,2,-3,10,9,10,-1,8,2,6,-4,6,-7,-10,2,7,-7,6,1,-5,1,-8,-10,10,6,-5,-1,4,-4,2,-2,-1,-7,8,-1,8,-8,6,-3,-3,2,-7,9,-10,10,10,-10,-10,6,-5,-2,-10,-1,2,3,-3,3,10,3,-6,2,4,5,-1,5,9,-10,10,7,3,5,-7,-6,-10,-6,2,2,-2,-4,-7,8,6,7,9,-6,-4,-8,9,7,-5,-8,3,-6,7,7,-7,-2,-4,9,-2,8,5,-8,-2,-8,10,-7,-5,7,1,4,2,2,-4,1,-5,-4,7,-7,-9,-9,8,-1,8,-5,-3,-8,-6,2,1,-5,-4,-7,5,3,8,4,-7,10,-4,-4,-3,-3,-3,8,10,-2,-4,-5,-4,2,10,9,10,3,-4,2,-1,6,-10,10,10,2,3,-5,-10,9,3,-7,9,9,-1,1,-6,6,3,-3,1,7,7,-1,8,-6,9,-6,-7,2,-7,-8,1,-8,3,7,9,8,-5,4,10,-4,3,-9,-8,8,5,-8,-1,1,8,-8,10,-4,4,8,-5,-2,6,-1,-2,8,5,4,-2,10,2,4,1,-9,-5,-8,1,1,9,10,2,-9,-5,1,-9,-5,8,-3,9,-3,-8,7,10,5,-1,-3,6,-10,-6,-6,3,-3,3,9,7,8,-2,5,4,-1,8,8,7,-4,-10,-7,-4,-1,6,2,-3,-1,5,6,9,-6,3,-10,1,-3,-4,3,1,-6,-7,4,-9,4,-4,-5,10,-9,-5,-7,-5,-9,-1,9,-10,2,-3,5,3,8,-2,10,4,6,10,-8,-4,-6,-1,8,1,-9,6,8,3,-5,-9,-6,-6,-4,8,3,-9,8,3,-3,7,1,-6,-3,3,4,4,-6,-4,7,2,-3,-1,3,10,10,-8,3,8,-2,7,-4,4,1,2,-10,-10,-5,6,4,-4,3,5,-5,-3,3,-1,-1,1,-4,2,5,-7,-4,8,8,4,5,9,-2,9,2,-4,-6,5,-6,-4,-2,1,1,-5,3,-2,9,-2,-6,6,-10,1,5,-8,6,4,-10,-5,6,1,9,10,7,-1,-3,-10,-7,-1,-8,7,-10,3,6,10,-6,-3,-6,-7,5,3,4,10,-4,-6,-1,-8,4,10,7,-5,-3,-2,-1,10,-6,5,8,-1,-10,7,-10,10,-6,7,10,-8,10,10,10,9,-4,-4,-2,5,4,3,6,-9,4,8,7,7,-8,1,10,4,6,6,-4,2,-2,-1,8,3,-7,-8,-6,6,-5,-4,8,-8,-5,-4,5,9,1,-10,-2,-3,-3,-7,-9,3,-9,8,4,-2,10,9,4,-7,-8,5,9,2,10,-10,-2,4,1,-1,-8,5,-10,7,4,8,2,-5,1,2,-5,-4,-7,-10,-10,5,-3,10,-7,-7,3,-5,7,6,5,1,2,1,-4,10,-2,-4,7,8,8,-7,1,6,1,-7,-9,10,-4,1,-2,1,-5,-10,-6,-8,-6,-7,-6,4,-4,8,9,-3,9,-2,4,-6,10,-1,4,5,4,-6,7,-10,1,4,-7,5,-2,8,2,-5,10,9,7,4,5,4,8,-5,-3,8,-8,6,10,6,-8,2,-8,1,-4,9,-3,-3,6,-1,-7,-6,2,4,8,1,2,-3,6,-8,-9,10,-9,-6,-1,3,-5,-2,3,-10,8,6,-7,-2,4,-3,-8,-6,8,-3,8,6,3,4,-3,-6,6,-3,-2,5,-7,-1,-3,-4,-3,-7,-3,6,-10,3,-5,-6,-10,3,6,-1,8,9,-3,10,2,-6,-2,-2,-5,10,1,-10,-7,-4,-2,-7,9,2,1,-5,-3,9,-3,10,3,7,-5,6,1,4,-6,-6,7,4,-1,-2,-10,-10,1,5,7,7,-9,6,4,5,-1,5,-8,7,-10,4,9,4,-3,3,1,3,-2,1,-7,5,9,7,9,-7,-2,-8,4,-10,-3,6,-4,5,6,-3,6,2,-8,-3,2,5,-10,4,6,-2,10,2,-6,9,5,-6,1,-4,-8,5,6,3,-4,-3,-2,9,2,-5,8,-4,-7,-6,10,-5,-7,-8,4,-3,10,-9,1,-6,9,3,5,-2,8,1,8,-6,-8,-1,8,1,8,-10,-5,-1,-8,-2,4,7,4,9,4,8,-4,6,-3,-9,4,9,8,6,8,10,3,-3,-3,-8,10,1,-5,5,2,8,-5,-7,-10,-8,-10,8,6,-10,-6,6,-4,-9,1,-8,9,-3,4,-5,3,-3,-4,8,-4,6,5,-5,8,10,7,-6,-4,1,9,4,-1,-6,-10,2,-1,2,-4,-6,1,6,4,6,-1,7,3,3,-10,9,-3,2,3,1,2,-10,5,-3,-7,8,4,-9,9,-10,-1,7,-10,-10,-4,10,10], dtype = "int32")#candidate|6715|(1575,)|const|int32
call_6713 = relay.TupleGetItem(func_5301_call(relay.reshape(const_6714.astype('int8'), [1200,]), relay.reshape(const_6715.astype('int32'), [1575,]), relay.reshape(const_6714.astype('int8'), [15, 5, 16]), ), 3)
call_6716 = relay.TupleGetItem(func_5306_call(relay.reshape(const_6714.astype('int8'), [1200,]), relay.reshape(const_6715.astype('int32'), [1575,]), relay.reshape(const_6714.astype('int8'), [15, 5, 16]), ), 3)
func_5876_call = mod.get_global_var('func_5876')
func_5878_call = mutated_mod.get_global_var('func_5878')
call_6729 = relay.TupleGetItem(func_5876_call(), 0)
call_6730 = relay.TupleGetItem(func_5878_call(), 0)
bop_6734 = relay.add(uop_6702.astype('float32'), relay.reshape(bop_6699.astype('float32'), relay.shape_of(uop_6702))) # shape=(4, 14, 11)
output = relay.Tuple([call_6704,var_6705,call_6713,const_6714,const_6715,call_6729,bop_6734,])
output2 = relay.Tuple([call_6706,var_6705,call_6716,const_6714,const_6715,call_6730,bop_6734,])
func_6750 = relay.Function([var_6697,var_6698,var_6705,], output)
mod['func_6750'] = func_6750
mod = relay.transform.InferType()(mod)
mutated_mod['func_6750'] = func_6750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6750_call = mutated_mod.get_global_var('func_6750')
var_6752 = relay.var("var_6752", dtype = "float32", shape = (4, 14, 11))#candidate|6752|(4, 14, 11)|var|float32
var_6753 = relay.var("var_6753", dtype = "float32", shape = (4, 14, 11))#candidate|6753|(4, 14, 11)|var|float32
var_6754 = relay.var("var_6754", dtype = "float64", shape = (26, 52))#candidate|6754|(26, 52)|var|float64
call_6751 = func_6750_call(var_6752,var_6753,var_6754,)
output = call_6751
func_6755 = relay.Function([var_6752,var_6753,var_6754,], output)
mutated_mod['func_6755'] = func_6755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6045_call = mod.get_global_var('func_6045')
func_6046_call = mutated_mod.get_global_var('func_6046')
call_6776 = relay.TupleGetItem(func_6045_call(), 0)
call_6777 = relay.TupleGetItem(func_6046_call(), 0)
output = relay.Tuple([call_6776,])
output2 = relay.Tuple([call_6777,])
func_6784 = relay.Function([], output)
mod['func_6784'] = func_6784
mod = relay.transform.InferType()(mod)
output = func_6784()
func_6785 = relay.Function([], output)
mutated_mod['func_6785'] = func_6785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6512_call = mod.get_global_var('func_6512')
func_6514_call = mutated_mod.get_global_var('func_6514')
call_6793 = relay.TupleGetItem(func_6512_call(), 0)
call_6794 = relay.TupleGetItem(func_6514_call(), 0)
output = call_6793
output2 = call_6794
func_6803 = relay.Function([], output)
mod['func_6803'] = func_6803
mod = relay.transform.InferType()(mod)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6803_call = mutated_mod.get_global_var('func_6803')
call_6804 = func_6803_call()
output = call_6804
func_6805 = relay.Function([], output)
mutated_mod['func_6805'] = func_6805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6479_call = mod.get_global_var('func_6479')
func_6481_call = mutated_mod.get_global_var('func_6481')
call_6871 = relay.TupleGetItem(func_6479_call(), 0)
call_6872 = relay.TupleGetItem(func_6481_call(), 0)
func_2664_call = mod.get_global_var('func_2664')
func_2666_call = mutated_mod.get_global_var('func_2666')
var_6875 = relay.var("var_6875", dtype = "float64", shape = (7, 56))#candidate|6875|(7, 56)|var|float64
call_6874 = relay.TupleGetItem(func_2664_call(relay.reshape(var_6875.astype('float64'), [14, 7, 4])), 1)
call_6876 = relay.TupleGetItem(func_2666_call(relay.reshape(var_6875.astype('float64'), [14, 7, 4])), 1)
output = relay.Tuple([call_6871,call_6874,var_6875,])
output2 = relay.Tuple([call_6872,call_6876,var_6875,])
func_6878 = relay.Function([var_6875,], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
var_6879 = relay.var("var_6879", dtype = "float64", shape = (7, 56))#candidate|6879|(7, 56)|var|float64
output = func_6878(var_6879)
func_6880 = relay.Function([var_6879], output)
mutated_mod['func_6880'] = func_6880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6580_call = mod.get_global_var('func_6580')
func_6582_call = mutated_mod.get_global_var('func_6582')
call_6918 = relay.TupleGetItem(func_6580_call(), 0)
call_6919 = relay.TupleGetItem(func_6582_call(), 0)
output = call_6918
output2 = call_6919
func_6922 = relay.Function([], output)
mod['func_6922'] = func_6922
mod = relay.transform.InferType()(mod)
mutated_mod['func_6922'] = func_6922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6922_call = mutated_mod.get_global_var('func_6922')
call_6923 = func_6922_call()
output = call_6923
func_6924 = relay.Function([], output)
mutated_mod['func_6924'] = func_6924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_6968 = relay.TupleGetItem(func_6376_call(), 2)
call_6969 = relay.TupleGetItem(func_6378_call(), 2)
output = call_6968
output2 = call_6969
func_6993 = relay.Function([], output)
mod['func_6993'] = func_6993
mod = relay.transform.InferType()(mod)
output = func_6993()
func_6994 = relay.Function([], output)
mutated_mod['func_6994'] = func_6994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mod.get_global_var('func_5328')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_6998 = func_5328_call()
call_6999 = func_5328_call()
func_6922_call = mod.get_global_var('func_6922')
func_6924_call = mutated_mod.get_global_var('func_6924')
call_7024 = func_6922_call()
call_7025 = func_6922_call()
func_1027_call = mod.get_global_var('func_1027')
func_1030_call = mutated_mod.get_global_var('func_1030')
var_7031 = relay.var("var_7031", dtype = "int8", shape = (1200,))#candidate|7031|(1200,)|var|int8
call_7030 = relay.TupleGetItem(func_1027_call(relay.reshape(var_7031.astype('int8'), [15, 5, 16]), relay.reshape(var_7031.astype('int8'), [15, 5, 16]), ), 0)
call_7032 = relay.TupleGetItem(func_1030_call(relay.reshape(var_7031.astype('int8'), [15, 5, 16]), relay.reshape(var_7031.astype('int8'), [15, 5, 16]), ), 0)
func_1996_call = mod.get_global_var('func_1996')
func_1999_call = mutated_mod.get_global_var('func_1999')
var_7048 = relay.var("var_7048", dtype = "uint8", shape = (1, 160))#candidate|7048|(1, 160)|var|uint8
call_7047 = relay.TupleGetItem(func_1996_call(relay.reshape(var_7048.astype('uint8'), [10, 4, 4]), relay.reshape(var_7048.astype('uint8'), [10, 4, 4]), ), 1)
call_7049 = relay.TupleGetItem(func_1999_call(relay.reshape(var_7048.astype('uint8'), [10, 4, 4]), relay.reshape(var_7048.astype('uint8'), [10, 4, 4]), ), 1)
uop_7054 = relay.log10(call_7024.astype('float64')) # shape=(2, 6, 9)
uop_7056 = relay.log10(call_7025.astype('float64')) # shape=(2, 6, 9)
output = relay.Tuple([call_6998,call_7030,var_7031,call_7047,var_7048,uop_7054,])
output2 = relay.Tuple([call_6999,call_7032,var_7031,call_7049,var_7048,uop_7056,])
func_7065 = relay.Function([var_7031,var_7048,], output)
mod['func_7065'] = func_7065
mod = relay.transform.InferType()(mod)
mutated_mod['func_7065'] = func_7065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7065_call = mutated_mod.get_global_var('func_7065')
var_7067 = relay.var("var_7067", dtype = "int8", shape = (1200,))#candidate|7067|(1200,)|var|int8
var_7068 = relay.var("var_7068", dtype = "uint8", shape = (1, 160))#candidate|7068|(1, 160)|var|uint8
call_7066 = func_7065_call(var_7067,var_7068,)
output = call_7066
func_7069 = relay.Function([var_7067,var_7068,], output)
mutated_mod['func_7069'] = func_7069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_7088 = func_4898_call()
call_7089 = func_4898_call()
output = call_7088
output2 = call_7089
func_7108 = relay.Function([], output)
mod['func_7108'] = func_7108
mod = relay.transform.InferType()(mod)
output = func_7108()
func_7109 = relay.Function([], output)
mutated_mod['func_7109'] = func_7109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6321_call = mod.get_global_var('func_6321')
func_6322_call = mutated_mod.get_global_var('func_6322')
call_7116 = relay.TupleGetItem(func_6321_call(), 2)
call_7117 = relay.TupleGetItem(func_6322_call(), 2)
output = relay.Tuple([call_7116,])
output2 = relay.Tuple([call_7117,])
func_7124 = relay.Function([], output)
mod['func_7124'] = func_7124
mod = relay.transform.InferType()(mod)
mutated_mod['func_7124'] = func_7124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mutated_mod.get_global_var('func_7124')
call_7125 = func_7124_call()
output = call_7125
func_7126 = relay.Function([], output)
mutated_mod['func_7126'] = func_7126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5679_call = mod.get_global_var('func_5679')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_7167 = relay.TupleGetItem(func_5679_call(), 0)
call_7168 = relay.TupleGetItem(func_5680_call(), 0)
func_5060_call = mod.get_global_var('func_5060')
func_5061_call = mutated_mod.get_global_var('func_5061')
call_7180 = func_5060_call()
call_7181 = func_5060_call()
output = relay.Tuple([call_7167,call_7180,])
output2 = relay.Tuple([call_7168,call_7181,])
func_7187 = relay.Function([], output)
mod['func_7187'] = func_7187
mod = relay.transform.InferType()(mod)
mutated_mod['func_7187'] = func_7187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7187_call = mutated_mod.get_global_var('func_7187')
call_7188 = func_7187_call()
output = call_7188
func_7189 = relay.Function([], output)
mutated_mod['func_7189'] = func_7189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6654_call = mod.get_global_var('func_6654')
func_6655_call = mutated_mod.get_global_var('func_6655')
call_7235 = func_6654_call()
call_7236 = func_6654_call()
func_6803_call = mod.get_global_var('func_6803')
func_6805_call = mutated_mod.get_global_var('func_6805')
call_7249 = func_6803_call()
call_7250 = func_6803_call()
output = relay.Tuple([call_7235,call_7249,])
output2 = relay.Tuple([call_7236,call_7250,])
func_7253 = relay.Function([], output)
mod['func_7253'] = func_7253
mod = relay.transform.InferType()(mod)
output = func_7253()
func_7254 = relay.Function([], output)
mutated_mod['func_7254'] = func_7254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6512_call = mod.get_global_var('func_6512')
func_6514_call = mutated_mod.get_global_var('func_6514')
call_7279 = relay.TupleGetItem(func_6512_call(), 0)
call_7280 = relay.TupleGetItem(func_6514_call(), 0)
func_2975_call = mod.get_global_var('func_2975')
func_2979_call = mutated_mod.get_global_var('func_2979')
var_7289 = relay.var("var_7289", dtype = "uint32", shape = (378,))#candidate|7289|(378,)|var|uint32
call_7288 = func_2975_call(relay.reshape(var_7289.astype('uint32'), [6, 9, 7]), relay.reshape(var_7289.astype('uint32'), [6, 9, 7]), )
call_7290 = func_2975_call(relay.reshape(var_7289.astype('uint32'), [6, 9, 7]), relay.reshape(var_7289.astype('uint32'), [6, 9, 7]), )
output = relay.Tuple([call_7279,call_7288,var_7289,])
output2 = relay.Tuple([call_7280,call_7290,var_7289,])
func_7292 = relay.Function([var_7289,], output)
mod['func_7292'] = func_7292
mod = relay.transform.InferType()(mod)
var_7293 = relay.var("var_7293", dtype = "uint32", shape = (378,))#candidate|7293|(378,)|var|uint32
output = func_7292(var_7293)
func_7294 = relay.Function([var_7293], output)
mutated_mod['func_7294'] = func_7294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7253_call = mod.get_global_var('func_7253')
func_7254_call = mutated_mod.get_global_var('func_7254')
call_7395 = relay.TupleGetItem(func_7253_call(), 0)
call_7396 = relay.TupleGetItem(func_7254_call(), 0)
func_7292_call = mod.get_global_var('func_7292')
func_7294_call = mutated_mod.get_global_var('func_7294')
const_7409 = relay.const([-5,-9,-10,-1,2,-3,-1,-7,5,-1,-3,-8,5,4,-4,5,1,10,-8,10,-4,3,10,-4,-1,3,-4,-5,-10,8,-4,-5,-8,-8,-5,4,-1,-7,-10,-7,5,-5,2,6,8,6,-9,-1,-6,-3,7,-4,-8,-1,-3,-9,2,-5,-1,6,7,3,5,-2,3,5,5,-2,2,1,-4,2,-2,2,-10,-5,2,-4,4,-1,-3,10,-6,3,6,3,-2,-7,4,10,-8,4,4,9,5,-6,-6,8,-7,-2,-3,-2,-2,9,-8,1,-5,6,-2,-7,6,-5,10,-6,4,-9,-3,-2,-1,10,-2,-5,-7,-6,7,5,-9,-8,6,7,2,-5,-8,-7,-9,-10,9,8,6,4,-9,7,-1,-8,-8,7,10,4,-10,-1,-9,10,4,-3,-3,-6,-8,-4,-9,-8,-7,7,-8,7,4,-6,7,-3,5,-3,-3,-5,-1,1,-1,-7,3,-4,-4,6,-9,3,10,6,1,8,-8,6,1,-7,6,9,-7,10,-7,1,1,-9,9,-8,7,-6,-8,4,2,2,-7,-9,7,6,-6,-10,-1,9,6,-10,-5,10,9,-5,-7,-10,1,9,-7,-3,-3,3,2,4,1,-3,-8,-2,-10,1,5,4,-9,3,9,2,-9,-6,6,8,-1,4,7,10,4,-5,-1,4,-1,9,-4,-1,-3,-3,4,6,4,7,-7,-9,6,-9,-4,-10,-1,4,-7,10,10,1,-7,-1,7,4,-5,-7,8,10,1,6,9,1,5,-8,-5,10,5,2,-9,8,-1,5,-2,-1,6,-7,9,1,-1,8,-7,7,2,-4,8,-5,8,8,6,5,9,7,1,-2,8,-8,10,6,7,-1,3,-5,5,-1,5,4,-9,1,-8,2,-3,-10,-8,-5,6,1,1,2,-9,10,10,-7,-3,-7,-1,9,-9,-9,5,1,9,3,-8,-7,-8,1,8,-7,6,4,-2,3,1,-10,5,8,-5,-3,5,-10,-6,-3], dtype = "uint32")#candidate|7409|(378,)|const|uint32
call_7408 = relay.TupleGetItem(func_7292_call(relay.reshape(const_7409.astype('uint32'), [378,])), 1)
call_7410 = relay.TupleGetItem(func_7294_call(relay.reshape(const_7409.astype('uint32'), [378,])), 1)
func_3268_call = mod.get_global_var('func_3268')
func_3273_call = mutated_mod.get_global_var('func_3273')
var_7412 = relay.var("var_7412", dtype = "uint32", shape = (288,))#candidate|7412|(288,)|var|uint32
var_7413 = relay.var("var_7413", dtype = "float64", shape = (800,))#candidate|7413|(800,)|var|float64
var_7414 = relay.var("var_7414", dtype = "int8", shape = (1200,))#candidate|7414|(1200,)|var|int8
call_7411 = relay.TupleGetItem(func_3268_call(relay.reshape(var_7412.astype('uint32'), [16, 6, 3]), relay.reshape(var_7413.astype('float64'), [800,]), relay.reshape(var_7414.astype('int8'), [1200,]), ), 3)
call_7415 = relay.TupleGetItem(func_3273_call(relay.reshape(var_7412.astype('uint32'), [16, 6, 3]), relay.reshape(var_7413.astype('float64'), [800,]), relay.reshape(var_7414.astype('int8'), [1200,]), ), 3)
output = relay.Tuple([call_7395,call_7408,const_7409,call_7411,var_7412,var_7413,var_7414,])
output2 = relay.Tuple([call_7396,call_7410,const_7409,call_7415,var_7412,var_7413,var_7414,])
func_7441 = relay.Function([var_7412,var_7413,var_7414,], output)
mod['func_7441'] = func_7441
mod = relay.transform.InferType()(mod)
var_7442 = relay.var("var_7442", dtype = "uint32", shape = (288,))#candidate|7442|(288,)|var|uint32
var_7443 = relay.var("var_7443", dtype = "float64", shape = (800,))#candidate|7443|(800,)|var|float64
var_7444 = relay.var("var_7444", dtype = "int8", shape = (1200,))#candidate|7444|(1200,)|var|int8
output = func_7441(var_7442,var_7443,var_7444,)
func_7445 = relay.Function([var_7442,var_7443,var_7444,], output)
mutated_mod['func_7445'] = func_7445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5356_call = mod.get_global_var('func_5356')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_7489 = relay.TupleGetItem(func_5356_call(), 0)
call_7490 = relay.TupleGetItem(func_5357_call(), 0)
output = relay.Tuple([call_7489,])
output2 = relay.Tuple([call_7490,])
func_7491 = relay.Function([], output)
mod['func_7491'] = func_7491
mod = relay.transform.InferType()(mod)
mutated_mod['func_7491'] = func_7491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7491_call = mutated_mod.get_global_var('func_7491')
call_7492 = func_7491_call()
output = call_7492
func_7493 = relay.Function([], output)
mutated_mod['func_7493'] = func_7493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6580_call = mod.get_global_var('func_6580')
func_6582_call = mutated_mod.get_global_var('func_6582')
call_7507 = relay.TupleGetItem(func_6580_call(), 1)
call_7508 = relay.TupleGetItem(func_6582_call(), 1)
func_2436_call = mod.get_global_var('func_2436')
func_2440_call = mutated_mod.get_global_var('func_2440')
const_7540 = relay.const([4,6,4,1,-10,-3,-8,4,9,7,5,2,2,-3,-8,9,-4,2,-9,-4,-2,5,-8,-3,9,7,-2,3,-10,4,-1,-2,2,-4,10,1,3,-1,-3,9,4,9,-4,1,9,4,10,6,3,-2,-6,-5,9,3,2,-3,10,2,4,-10,9,-4,1,1,-8,4,-6,-4,-5,-6,-10,3,2,-4,9,9,7,6,-5,-3,-10,8,6,-10,10,-9,-6,8,8,-2,5,4,9,1,7,-7,-1,-2,7,-1,9,-5,2,2,-7,-8,8,-4,2,-10,-9,5,-10,-8,-2,-5,-9,-5,-6,-5,-1,-3,5,-7,5,7,4,4,10,2,3,2,-8,4,-5,-4,2,-7,-7,5,4,5,-5,-2,3,6,9,-7,-8,-8,-2,1,-2,-2,-5,-10,-2,-4,6,-1,-10,-6,-8,6,7,-8,8,2,8,-8,4,1,-5,-2,-3,-1,-9,-1,-3,2,-1,-7,-8,7,-7,-8,-5,7,-7,10,-10,-10,1,8,8,-1,8,8,-9,3,-1,6,-1,-5,-10,8,-7,10,2,9,-8,9,-10,-4,-3,4,-10,-10,-3,-9,2,-4,-8,7,6,9,8,-2,6,-9,2,5,-6,-3,1,-4,9,-2,-6,-6,6,-4,5,7,1,2,-9,-5,3,-6,2,-9,-7,10,3,4,1,-6,-6,-10,8,2,1,4,5,-2,9,-8,4,10,3,-7,-5,-3,-5,-10,6,-2,-9,-5,-6,1,-8,-2,6,10,-7,6,-1,3,-3,-8,-4,8,-7,-8,-9,6,8,10,9,7,-6,-10,-1,2,5,-5,-2,-2,5,2,9,-1,-8,-4,2,5,-4,6,7,1,10,4,-8,-3,-6,-9,6,3,1,-3,1,-3,-4,-2,5,-6,1,8,-6,-4,-7,9,-3,7,2,-8,-1,-7,8,-5,-3,1,-1,-3,2,-9,-10,-2,1,-10,-3,-5,9,-7,-1,3,7,6,-3,-5,6,-3,2,-1,9,7,10,-6,6,-8,-10,-1,-5,5,5,2,-3,8,-2,-8,2,3,-9,-3,-4,4,-3,1,1,3,-5,7,-10,3,6,3,9,10,-8,-7,-5,6,-3,4,-4,-9,-4,7,1,-5,3,3,-7,4,-7,8,1,9,-3,-9,2,8,-4,9,6,10,-4,-5,-7,6,1,5,-8,-7,9,-9,-4,6,-3,1,3,-1,6,9,7,9,-9,-10,-9,9,-1,-9,-7,-10,4,-2,-5,-3,2,-6,7,-7,-2,-3,-3,8,-5,8,-4,4,4,-4,-10,-1,8,1,5,-2,-4,7,-9,3,4,6,2,7,-8,6,-9,-10,6,-4,1,7,3,5,1,-4,9,-2,-1,-8,9,7,-3,-6,-10,10,-6,-7,3,9,-1,-8,6,-3,8,-4,-7,6,7,9,-10,-9,7,7,9,5,-10,10,2,3,-5,6,7,4,-4,1,3,2,5,2,-5,2,10,3,5,2,2,-6,2,5,2,-9,4,-6,1,3,-7,-3,-6,8,4,-3,-10,7,8,5,8,6,-7,10,-2,-6,-7,5,7,7,5,-2,-9,-4,-1,-7,-3,10,7,8,3,8,4,3,9,5,-8,-7,-5,3,2,-6,7,6,6,-3,9,8,7,5,9,-7,8,-5,-7,-1,-2,-3,-5,-3,5,9,-9,7,8,9,-3,-6,2,-6,-2,7,5,5,1,2,-5,-9,-10,8,8,5,6,2,5,-7,6,2,-4,-3,2,10,-6,2,5,4,-9,-5,-10,-3,5,-1,3,-4,8,-1,-1,-10,2,-3,-3,-8,-5,9,10,-2,3,-7,7,-5,-9,7,-9,-6,-10,8,5,-8,-9,-10,1,3,5,2,1,7,6,-9,5,-6,6,10,9,4,5,6,-5,-9,1,2,-9,-4,-7,9,-8,-8,-10,8,6,-9,5,8,6,-10,-1,9,-1,4,-5,9,2,8,4,3,-7,3,-10,3,8,-1,6,-8,2,-5,7,-10,9,-10,5,5,8,7,-8,-3,4,7,5,-6,-9,4,5,6,-6,-9,2,5,3,-9,10,1,-8,-3,6,-2,10,-3,-3,-9,9,-10,-3,2,-4,-10,5,-10,2,9,-5,-4,-8,8,-8,-8,6,-10,2,-8,5,5,-1,-4,-10,-10,-4,10,3,-3,6,8,9,4,9,10,-9,-3,-1,3,2,8,8,-7,-7,-2,2,-6,9,6,9,-2,-2,9,6,7,-5,-3,3,6,2,3,-9,7,-9,7,-1,-8,-6,6,-1,9,8,-1,-5,8,-6,-1,2,-2,-3,10,-8,6,-7,7,5,-6,-1,3,3,-3,-4,3,-4,-6,-3,-10,-7,8,-9,4,2,-7,6,-1,1,9,8,-1,8,-9,4,-4,6,-4,7,-8,-7,-6,-5,5,8,-3,-5,-9,10,4,9,-4,1,1,8,-9,-6,-10,-1,-9,9,7,4,9,-6,-7,-2,-4,-9,-1,6,-1,-6,-3,8,-5,-4,2,-8,4,-3,-3,-4,-6,-3,9,8,2,-5,-8,-9,-9,-5,2,2,-9,9,-10,8,5,4,1,-7,3,-9,2,-5,-4,-4,6,-4,-2,9,-5,9,-8,-5,-4,-3,-4,-1,-2,-9,-9,-3,-2,-1,10,-8,7,-7,2,-8,-4,-5,-3,7,5,4,-1,-10,-5,-9,1,2,-7,-4,10,-5,-1,5,9,3,-9,9,-3,-3,7,5,-9,5,5,5,1,2,-2,-8,-10,-6,-8,-9,1,-1,-5,-8,3,-2,-3,4,7,-6,4,2,6,2,-3,7,4,4,-4,6,8,-6,5,4,5,-2,7,4,2,-7,7,-8,-10,2,7,-3,-6,-7,-6,-4,5,9,-8,3,-9,4,2,8,-6,-10,-8,9,10,6,9,7,6,3,-1,5,-7,-7,-10,-5,-7,1,-5,-1,8,-1,7,-10,5,6,-2,-7,9,9,1,8,-8,3,-1,10,-4,-8,-2,4,4,5,-3,4,-6,-3,-7,-3,2,-2,-2,4,-5,7,-3,-5,4,-10,4,-1,6,-7,5,-2,8,1,6,8,-10,-9,7,-9,-5,10,-2,8,-6,-5,-7,-7,-10,-6,4,8,-8,-6,-10,-8,3,-4,10,6,-9,7,7,2,4,4,4,1,-6,9,-1,10,-6,10,-6,-1,7,-2,2,2,2,4,-5,-7,4,-8,4,9,-4,-3,-7,-7,2,9,-1,-2,6,-10,2,5,-3,1,2,-7,-2,9,7,-4,-5,-5,-3,-1,4,1,9,2,-8,1,-6,6,-1,5,-1,6,-1,4,9,-4,-7,1,-10,9,-7,-10,1,10,3,9,-6,1,8,-3,3,2,-2,-7,5,4,8,-4,10,-10,-1,8,-6,7,6,-2,7,10,-4,-4,5,-8,2,4,8,-4,5,-8,-2,-4,3,7,10,9,-4,-1,-1,-2,3,-4,9,1,1,-6,2,-1,-8,5,6,9,9,9,-1,2,8,-6,-5,3,-6,-6,9,-5,8,2,-8,-7,1,6,8,5,-3,3,7,3,-2,-4,-8,7,-3,-3,-10,-5,-6,-4,-10,-8,-1,2,-6,-3,-3,1,-8,-9,-7,-1,1,-9,-8,1,3,10,2,-4,-6,-9,6,10,10,4,-4,-6,2,1,-10,7,-4,7,-8,4,-8,2,-5,-7,-4,2,-9,-2,-4,10,-7,-7,-5,-5,-7,-6,4,-10,-10,3,9,1,-4,8,8,-1,-6,-4,-7,1,-9,-1,-7,-3,-10,-3,2,7,-7,-3,5,-9,-4,-10,-3,-5,10,-7,-8,3,9,-7,10,-6,-8,-3,2,-4,5,9,4,4,1,2,4,-7,1,-1,-7,9,5,-10,4,-7,-7,8,-8,7,4,9,5,10,-10,-1,9,6,-2,4,10,4,6,9,4,5,7,7,-2,10,-7,10,-10,1,3,-7,-7,-10,-3,-6,7,7,7,-6,1,10,-6,6,-7,8,-4,-2,-6,-3,3,9,3,4,2,-9,-7,-10,9,10,5,-5,3,-2,-10,-1,6,-5,-8,1,10,-2,10,1,-10,-5,-9,5,-8,2,-2,2,-4,9,5,-1,-1,-1,3,-2,3,9,10,3,-1,-7,-1,-10,-4,-7,10,-4,-9,4,9,6,-3,-3,6,-2,-4,-9,8,7,8,-2,10,-1,-3,2,1,3,10,7], dtype = "int32")#candidate|7540|(1575,)|const|int32
call_7539 = relay.TupleGetItem(func_2436_call(relay.reshape(const_7540.astype('int32'), [15, 15, 7]), relay.reshape(const_7540.astype('int32'), [15, 15, 7]), ), 2)
call_7541 = relay.TupleGetItem(func_2440_call(relay.reshape(const_7540.astype('int32'), [15, 15, 7]), relay.reshape(const_7540.astype('int32'), [15, 15, 7]), ), 2)
var_7544 = relay.var("var_7544", dtype = "int32", shape = (1575,))#candidate|7544|(1575,)|var|int32
bop_7545 = relay.not_equal(const_7540.astype('bool'), relay.reshape(var_7544.astype('bool'), relay.shape_of(const_7540))) # shape=(1575,)
bop_7548 = relay.logical_and(bop_7545.astype('bool'), relay.reshape(const_7540.astype('bool'), relay.shape_of(bop_7545))) # shape=(1575,)
uop_7553 = relay.acosh(bop_7545.astype('float32')) # shape=(1575,)
output = relay.Tuple([call_7507,call_7539,bop_7548,uop_7553,])
output2 = relay.Tuple([call_7508,call_7541,bop_7548,uop_7553,])
func_7562 = relay.Function([var_7544,], output)
mod['func_7562'] = func_7562
mod = relay.transform.InferType()(mod)
mutated_mod['func_7562'] = func_7562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7563 = relay.var("var_7563", dtype = "int32", shape = (1575,))#candidate|7563|(1575,)|var|int32
func_7562_call = mutated_mod.get_global_var('func_7562')
call_7564 = func_7562_call(var_7563)
output = call_7564
func_7565 = relay.Function([var_7563], output)
mutated_mod['func_7565'] = func_7565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6321_call = mod.get_global_var('func_6321')
func_6322_call = mutated_mod.get_global_var('func_6322')
call_7585 = relay.TupleGetItem(func_6321_call(), 1)
call_7586 = relay.TupleGetItem(func_6322_call(), 1)
func_6512_call = mod.get_global_var('func_6512')
func_6514_call = mutated_mod.get_global_var('func_6514')
call_7599 = relay.TupleGetItem(func_6512_call(), 0)
call_7600 = relay.TupleGetItem(func_6514_call(), 0)
output = relay.Tuple([call_7585,call_7599,])
output2 = relay.Tuple([call_7586,call_7600,])
func_7607 = relay.Function([], output)
mod['func_7607'] = func_7607
mod = relay.transform.InferType()(mod)
mutated_mod['func_7607'] = func_7607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7607_call = mutated_mod.get_global_var('func_7607')
call_7608 = func_7607_call()
output = call_7608
func_7609 = relay.Function([], output)
mutated_mod['func_7609'] = func_7609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6654_call = mod.get_global_var('func_6654')
func_6655_call = mutated_mod.get_global_var('func_6655')
call_7682 = func_6654_call()
call_7683 = func_6654_call()
output = call_7682
output2 = call_7683
func_7689 = relay.Function([], output)
mod['func_7689'] = func_7689
mod = relay.transform.InferType()(mod)
output = func_7689()
func_7690 = relay.Function([], output)
mutated_mod['func_7690'] = func_7690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6321_call = mod.get_global_var('func_6321')
func_6322_call = mutated_mod.get_global_var('func_6322')
call_7724 = relay.TupleGetItem(func_6321_call(), 1)
call_7725 = relay.TupleGetItem(func_6322_call(), 1)
output = call_7724
output2 = call_7725
func_7726 = relay.Function([], output)
mod['func_7726'] = func_7726
mod = relay.transform.InferType()(mod)
output = func_7726()
func_7727 = relay.Function([], output)
mutated_mod['func_7727'] = func_7727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_7773 = func_4898_call()
call_7774 = func_4898_call()
output = call_7773
output2 = call_7774
func_7776 = relay.Function([], output)
mod['func_7776'] = func_7776
mod = relay.transform.InferType()(mod)
output = func_7776()
func_7777 = relay.Function([], output)
mutated_mod['func_7777'] = func_7777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6993_call = mod.get_global_var('func_6993')
func_6994_call = mutated_mod.get_global_var('func_6994')
call_7825 = func_6993_call()
call_7826 = func_6993_call()
uop_7833 = relay.log2(call_7825.astype('float32')) # shape=(12, 6, 4)
uop_7835 = relay.log2(call_7826.astype('float32')) # shape=(12, 6, 4)
func_2816_call = mod.get_global_var('func_2816')
func_2819_call = mutated_mod.get_global_var('func_2819')
var_7853 = relay.var("var_7853", dtype = "float64", shape = (1352,))#candidate|7853|(1352,)|var|float64
call_7852 = relay.TupleGetItem(func_2816_call(relay.reshape(var_7853.astype('float64'), [8, 13, 13]), relay.reshape(var_7853.astype('float64'), [8, 13, 13]), ), 0)
call_7854 = relay.TupleGetItem(func_2819_call(relay.reshape(var_7853.astype('float64'), [8, 13, 13]), relay.reshape(var_7853.astype('float64'), [8, 13, 13]), ), 0)
func_5328_call = mod.get_global_var('func_5328')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_7855 = func_5328_call()
call_7856 = func_5328_call()
func_3268_call = mod.get_global_var('func_3268')
func_3273_call = mutated_mod.get_global_var('func_3273')
var_7862 = relay.var("var_7862", dtype = "float64", shape = (1, 800))#candidate|7862|(1, 800)|var|float64
var_7863 = relay.var("var_7863", dtype = "int8", shape = (1200,))#candidate|7863|(1200,)|var|int8
call_7861 = relay.TupleGetItem(func_3268_call(relay.reshape(call_7825.astype('uint32'), [16, 6, 3]), relay.reshape(var_7862.astype('float64'), [800,]), relay.reshape(var_7863.astype('int8'), [1200,]), ), 2)
call_7864 = relay.TupleGetItem(func_3273_call(relay.reshape(call_7825.astype('uint32'), [16, 6, 3]), relay.reshape(var_7862.astype('float64'), [800,]), relay.reshape(var_7863.astype('int8'), [1200,]), ), 2)
bop_7867 = relay.logical_xor(uop_7833.astype('int32'), relay.reshape(call_7825.astype('int32'), relay.shape_of(uop_7833))) # shape=(12, 6, 4)
bop_7870 = relay.logical_xor(uop_7835.astype('int32'), relay.reshape(call_7826.astype('int32'), relay.shape_of(uop_7835))) # shape=(12, 6, 4)
func_1027_call = mod.get_global_var('func_1027')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_7886 = relay.TupleGetItem(func_1027_call(relay.reshape(var_7863.astype('int8'), [15, 5, 16]), relay.reshape(var_7863.astype('int8'), [15, 5, 16]), ), 0)
call_7887 = relay.TupleGetItem(func_1030_call(relay.reshape(var_7863.astype('int8'), [15, 5, 16]), relay.reshape(var_7863.astype('int8'), [15, 5, 16]), ), 0)
func_5060_call = mod.get_global_var('func_5060')
func_5061_call = mutated_mod.get_global_var('func_5061')
call_7897 = func_5060_call()
call_7898 = func_5060_call()
uop_7900 = relay.asinh(bop_7867.astype('float32')) # shape=(12, 6, 4)
uop_7902 = relay.asinh(bop_7870.astype('float32')) # shape=(12, 6, 4)
output = relay.Tuple([call_7852,var_7853,call_7855,call_7861,var_7862,var_7863,call_7886,call_7897,uop_7900,])
output2 = relay.Tuple([call_7854,var_7853,call_7856,call_7864,var_7862,var_7863,call_7887,call_7898,uop_7902,])
func_7904 = relay.Function([var_7853,var_7862,var_7863,], output)
mod['func_7904'] = func_7904
mod = relay.transform.InferType()(mod)
var_7905 = relay.var("var_7905", dtype = "float64", shape = (1352,))#candidate|7905|(1352,)|var|float64
var_7906 = relay.var("var_7906", dtype = "float64", shape = (1, 800))#candidate|7906|(1, 800)|var|float64
var_7907 = relay.var("var_7907", dtype = "int8", shape = (1200,))#candidate|7907|(1200,)|var|int8
output = func_7904(var_7905,var_7906,var_7907,)
func_7908 = relay.Function([var_7905,var_7906,var_7907,], output)
mutated_mod['func_7908'] = func_7908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6993_call = mod.get_global_var('func_6993')
func_6994_call = mutated_mod.get_global_var('func_6994')
call_8067 = func_6993_call()
call_8068 = func_6993_call()
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_8069 = relay.TupleGetItem(func_6376_call(), 1)
call_8070 = relay.TupleGetItem(func_6378_call(), 1)
func_6512_call = mod.get_global_var('func_6512')
func_6514_call = mutated_mod.get_global_var('func_6514')
call_8079 = relay.TupleGetItem(func_6512_call(), 0)
call_8080 = relay.TupleGetItem(func_6514_call(), 0)
const_8088 = relay.const([[-4,5,-4,-7,8,10,7,5,4],[7,5,-1,2,-4,6,6,10,3],[-4,9,-10,-5,-6,2,-2,-8,-3],[-3,2,8,5,-9,7,-10,-4,1],[8,9,-10,-8,2,-9,-4,9,-8],[-7,1,9,-9,7,8,5,5,3],[-9,-8,-6,7,1,-9,3,3,3],[-1,1,-4,-7,-6,-5,10,8,6],[-6,6,-8,-8,3,6,3,6,5],[-2,1,7,-5,-1,-6,10,1,-1],[3,10,9,9,3,-6,7,1,6],[-5,6,5,-6,-3,-1,4,2,-9],[9,-4,3,-1,8,10,1,-4,-3],[8,-5,4,5,-1,3,-9,8,-5],[3,-3,1,6,9,8,10,1,8],[1,-3,-2,2,9,7,5,1,3],[-1,3,-9,-4,-8,6,10,1,2],[10,-5,6,-4,-1,8,8,-3,3],[-5,-2,-2,10,8,7,-3,3,-9],[-1,7,9,-8,-7,1,4,7,-8],[-6,2,10,-1,-8,2,-3,-10,4],[8,-8,2,6,-5,2,3,2,2],[-7,-6,7,-2,-10,1,-4,6,5],[-3,-4,6,-2,7,-6,-5,-4,-8],[8,3,4,3,-4,-4,-9,-2,3],[-2,-6,-8,-6,5,-5,-2,5,-2],[9,9,-6,-2,7,-7,-3,7,8],[2,-8,3,-10,-8,-10,3,8,3],[-6,9,1,6,-7,-3,-8,-8,-2],[2,7,8,-10,7,5,-4,-2,-6],[10,-7,5,-1,-7,-9,-9,-2,1],[-4,-2,-1,-8,8,7,-7,8,-4],[-3,5,-2,-8,5,9,-1,7,5],[-10,2,-7,4,5,-7,4,-2,10],[3,-8,10,-4,-2,4,-10,2,-2],[10,2,-7,-2,9,-10,-9,10,3],[5,-3,-10,-6,-1,2,-9,1,-6],[2,-9,-4,-1,2,-2,-3,2,-8],[5,5,-4,1,-9,-7,-3,5,-10],[-3,-5,6,1,6,7,8,-10,8],[-9,-9,3,5,7,-10,-2,9,9],[7,-5,3,-7,-4,5,-2,10,5],[9,9,-4,2,1,5,9,10,-5],[5,-4,-10,10,-5,3,-4,-2,8],[-4,-3,-4,-5,-10,-8,-7,-6,2],[2,-8,-2,9,-3,1,-8,-4,9],[1,4,8,4,-4,8,6,10,7],[5,2,-8,1,-7,8,6,2,1],[-1,5,7,5,-3,7,9,-7,-2],[-3,8,-2,7,-6,-10,-9,3,-8],[7,-6,-8,-2,9,-9,2,-5,-1],[-9,-9,-7,3,1,10,-10,3,-9],[1,2,-1,-10,-3,5,6,-4,10],[-3,7,-3,-3,6,-9,1,-6,-1],[-3,10,-7,-2,9,-9,9,-4,-6],[-5,-9,9,4,9,10,-7,-10,9],[-1,2,8,9,-3,-4,-9,2,-8],[8,-8,3,7,-2,-6,4,-5,7],[8,-9,-8,-2,1,-9,-4,10,3],[1,-5,7,-8,-7,7,-4,-10,8],[7,-7,3,-5,2,-8,-1,5,5],[-7,2,4,10,8,3,7,5,6],[1,-6,1,8,-4,7,-4,2,10],[9,4,-7,-1,-6,-10,6,-6,-4],[6,-8,-4,2,1,6,-8,1,-10],[10,5,-8,8,8,-6,-10,4,-5],[-5,8,10,7,-7,-1,-7,10,7],[-8,-2,1,-1,-2,-1,5,3,1],[-5,1,-7,3,-5,7,-1,-1,1],[2,-4,-7,1,-2,5,-8,-2,-6],[-3,-2,-10,-2,-3,-3,-4,-6,-7],[-5,7,3,-1,-2,-9,-3,-7,-1],[-3,5,6,2,-3,10,1,10,-5],[10,5,-10,-2,7,7,4,2,7],[9,10,6,-6,9,9,-1,1,-10],[-10,-3,2,6,-9,-9,-10,6,2],[2,-2,-6,-5,7,4,-7,2,3],[10,-1,-10,7,-1,-10,4,-3,-2],[-7,-7,-5,6,7,-1,-3,10,2],[-6,-7,-2,2,-10,-4,5,1,8],[4,7,-1,10,1,-9,9,4,2],[5,-3,8,-7,-1,-4,-4,2,-10],[2,-8,-1,8,2,-5,7,10,-5],[7,1,10,-6,6,6,10,5,10],[5,-5,9,5,2,-6,-4,-8,-1],[-2,3,-3,-3,4,3,5,4,-8],[2,9,-9,-10,7,9,8,-3,1],[-9,-10,-4,9,-4,-1,-5,4,-6],[6,5,6,1,7,-7,9,3,-9],[6,-8,10,-3,-2,-9,-1,6,10],[1,-8,-3,-7,8,-4,6,-6,10],[-4,1,9,4,-6,-5,-4,8,-5],[6,-5,-3,-3,9,-5,-7,4,-5],[-9,5,1,2,8,-7,10,6,-8],[-4,-10,-2,4,2,-9,-2,-7,-4],[7,-4,-5,-10,2,10,-7,-3,-9],[-9,-4,10,-9,-2,9,7,-3,3],[-1,6,-10,-5,3,3,-5,-5,-5],[-4,9,-3,3,8,-2,-7,3,6],[10,-2,1,4,-8,-5,-8,-7,5],[7,3,-6,-6,8,6,7,-7,-8],[-4,2,-5,-5,6,-10,-4,-10,4],[-2,9,-2,-3,-1,-7,9,-5,-3],[8,3,-10,6,2,2,2,-8,3],[-7,10,7,9,9,6,4,8,1],[-2,3,-5,-2,1,9,10,2,-4],[-7,6,-6,-8,8,10,5,8,-6],[4,-9,7,-9,-6,9,10,4,2],[8,-2,7,6,4,9,-7,7,6],[-6,5,3,-1,-1,-9,-4,-4,-5],[-8,10,-5,1,2,9,-6,-2,-6],[-6,-2,-3,10,9,-6,5,-5,8],[-6,3,-9,-7,-7,5,-7,-2,7],[-1,-5,-3,5,6,4,10,-1,9],[5,-4,-8,6,9,4,3,3,6],[-8,-3,-8,6,-7,5,6,6,2],[8,-9,6,-3,9,-7,-1,5,-7],[10,-5,10,-5,-9,6,-2,1,-3],[5,6,-3,8,-5,-7,7,6,6],[-9,-2,-1,10,-5,5,8,8,-5],[-6,-7,7,7,-3,6,-9,-8,5],[-1,5,6,8,1,9,-6,-8,-9],[-9,10,9,9,1,1,1,3,-2],[5,4,-5,-9,-9,6,-5,-4,6],[9,3,7,9,10,1,10,3,1],[8,-10,8,-7,-2,-5,6,6,-7],[-7,-10,-8,-10,-8,-2,-10,-8,9],[10,-8,-9,-3,-1,8,3,-4,-2],[-5,-1,-5,9,-5,-8,2,2,-10],[-2,-10,3,1,-3,10,-7,10,-7],[3,10,2,4,-6,5,9,-1,10],[-9,2,8,-9,-7,5,4,2,3],[10,10,-4,-3,2,-4,-10,7,-6],[3,2,-4,8,2,-2,5,-4,7],[2,3,-6,10,3,-7,2,4,-4],[8,8,9,7,-1,1,-1,10,8],[-4,-1,4,5,9,-8,10,2,-6],[-10,-9,5,1,-2,9,-6,-6,7],[-4,-6,4,6,9,-3,-3,9,-2],[-1,-8,3,-2,-10,5,-8,2,5],[-5,-9,1,1,-3,-5,5,-9,8],[10,-10,-8,-2,7,8,1,3,10],[-1,9,3,2,-1,-9,-2,8,-3],[-8,-1,-10,-7,6,2,3,9,9],[7,8,-2,-4,9,-8,-8,-9,3],[2,2,-9,6,-8,-5,6,10,-9],[-4,7,-7,-6,-3,-8,6,-8,7],[-3,-1,-7,7,10,9,10,-4,-7],[-3,-8,7,3,-5,2,-8,5,3],[10,5,-9,-1,10,-7,-8,9,9],[3,1,-2,-10,-5,4,6,2,-5],[-10,2,-4,4,-1,10,-10,1,1],[-4,8,5,-9,-5,6,4,6,3],[-8,2,3,1,-4,-5,-8,7,10],[7,5,-2,9,7,5,7,-9,5],[2,-5,10,3,-1,-3,2,-4,-1],[-10,-4,8,-6,-5,4,9,5,2],[6,-3,-4,1,8,5,-2,10,1],[-7,2,4,-3,-2,8,6,-7,-2],[7,9,7,-5,-10,-4,4,9,-5],[-2,7,7,-5,-9,1,-5,3,6],[-9,-10,7,-9,-5,-4,3,-9,7],[-6,-8,-5,6,-9,-6,-10,7,4],[-4,-2,-3,-9,2,7,-3,-2,-7],[2,-8,2,-8,-9,-2,9,-5,-5],[7,7,2,-9,-6,-8,9,-6,-10],[3,1,-5,2,-9,2,7,7,-9],[7,-6,8,-6,3,-5,2,-3,7],[-8,-1,-8,-10,-2,-9,4,8,9],[-3,4,8,-8,-7,-5,-10,-5,-1],[-2,10,-6,5,-4,-1,9,-7,9],[-2,8,-10,6,-8,-1,-8,10,8],[-8,7,8,-5,3,1,9,-10,5],[-10,2,-5,-8,7,-2,3,10,2],[-7,6,-10,1,2,-4,1,-1,-3],[5,1,9,-9,-5,-2,8,5,9],[-2,-3,-2,-5,-3,8,-5,9,-7],[9,-1,-4,1,-4,5,-2,-6,5],[-1,2,9,10,-3,9,-7,5,-3],[3,-10,-2,10,3,-6,5,1,1],[-7,3,2,-9,10,-9,2,9,-10],[-6,3,-8,2,-6,1,2,-8,8],[-8,-1,1,-3,3,-5,-1,5,2],[2,-5,6,6,3,-4,-6,-8,-3],[8,-3,6,-3,-1,-2,2,-7,-4],[4,-3,-6,6,1,10,2,-10,8],[-5,4,1,-8,-9,1,-8,-5,-10],[9,-4,1,-4,1,-9,9,-2,-9],[8,6,-10,3,10,8,1,-9,8],[1,4,-6,-1,-9,10,5,-3,7],[6,3,10,-7,9,-7,5,-10,8],[-3,5,-3,8,-2,9,-6,3,-4],[-1,5,-6,-8,8,1,6,-8,-6],[5,-1,6,-10,8,10,-6,2,10],[2,10,-7,-10,6,5,9,5,1],[-1,-2,4,-8,2,2,9,-1,7],[-3,-3,3,1,2,-3,9,-3,2],[4,10,1,9,7,10,-10,-1,1],[2,7,10,-6,3,-10,7,-6,-2],[-8,-6,3,-10,-10,-5,-4,-3,-1],[-2,-3,-6,-9,-9,-9,-9,-3,3],[4,8,-2,-5,10,-9,2,-9,6],[8,-8,8,9,6,6,-10,1,-4],[-1,-1,-8,5,2,7,-9,1,5],[9,-1,-7,-4,-7,3,10,-2,-8],[-1,-4,-6,1,9,5,5,7,-8],[-3,9,9,-3,9,-10,-8,7,6],[-5,9,10,6,-7,-1,7,-9,-6],[-10,5,-4,4,8,4,-7,2,10],[9,9,-9,10,6,2,-8,-3,-2],[10,9,-1,3,-1,-1,10,9,5],[2,5,7,-2,-10,7,-1,1,-4],[-4,-8,5,10,-9,-5,-8,-2,-6],[2,1,4,5,-5,-5,7,-8,-6],[4,8,-4,10,9,7,-8,-3,3],[6,-3,4,-2,9,8,2,-1,7],[-3,-1,8,8,-9,8,-8,-9,5],[-9,6,6,-3,-6,-1,4,-2,8],[3,10,5,-3,2,4,-3,6,-10],[3,-3,2,4,9,10,-7,-3,4],[-3,-1,-9,4,-9,-3,-1,4,5],[-1,1,6,7,-4,-10,-10,-7,10],[7,10,-2,-5,-7,-8,-7,3,9],[1,5,-10,-6,-10,1,-9,-1,4],[-9,-8,-2,-1,7,10,5,6,5],[-5,-4,3,2,-6,10,8,-3,-8],[-5,5,-4,2,6,-9,3,3,-6],[5,-10,-5,-2,-4,1,9,2,10],[1,-7,-9,10,-10,-9,9,6,-4],[-2,4,-1,-7,-1,-6,-6,2,-6],[8,2,6,4,-3,7,-3,-2,-4],[-10,-3,9,-3,-10,6,5,-9,4],[6,3,2,7,-8,10,3,-2,-2],[-8,7,1,2,-9,-5,-10,-3,-2],[-2,10,-9,-3,-2,-1,-9,-1,-6],[10,-10,-3,-6,-6,6,5,7,10],[-6,10,-10,-4,9,5,-10,5,8],[3,-9,-4,-4,-2,4,1,-7,-10],[2,-9,-9,-8,1,-9,9,4,8],[2,-9,-7,10,-3,-8,5,-6,3],[-9,6,-2,3,-4,1,7,8,-10],[8,-10,7,5,10,-8,-9,-1,9],[10,9,8,-8,3,-8,-8,5,9],[-9,-5,6,-1,-8,-1,-8,-8,-5],[-6,9,8,4,-6,-7,10,9,-5],[7,-1,-10,4,5,6,-6,4,2],[5,-1,5,-5,-6,-10,-1,-8,-2],[5,8,-5,10,7,-1,8,-8,-8],[-9,-8,9,-7,-5,-3,5,2,-9],[-8,-2,-5,-7,-8,1,8,9,6],[-3,8,-8,-6,8,6,5,-6,-2],[-8,5,-4,2,-8,-9,10,-5,-2],[9,6,4,-7,-8,7,-6,-9,-3],[-7,6,-7,-10,-6,7,-8,6,6],[-7,-2,-7,-3,4,-4,-6,3,8],[6,10,5,-2,4,8,-1,-4,-8],[-9,-4,4,1,2,-1,-7,8,-10],[5,-5,-1,10,8,2,4,8,6],[7,1,5,-8,10,10,-1,2,-3],[-9,-3,-6,2,8,-6,-3,4,-10],[7,-9,-8,-6,3,4,-1,8,9],[-10,-2,2,-3,-2,-8,-3,-4,3],[1,-8,-9,10,-5,-7,4,9,6],[-7,8,-5,4,3,-2,10,8,-10],[10,1,2,-4,-5,-2,4,-3,9],[-1,8,10,2,7,-8,9,9,-7],[-9,-7,2,7,-9,10,-8,2,5],[-8,-2,9,2,-9,-9,3,-7,-2],[10,-7,-2,10,10,-10,3,-3,4],[6,1,8,2,-8,2,8,-3,-4],[3,-9,-5,9,-6,3,-4,6,6],[5,-5,-7,-7,10,1,7,7,9],[4,10,-8,-9,-3,8,-9,7,10],[-3,-10,-8,-7,7,10,6,1,3],[-8,-4,9,10,6,4,-3,4,-7],[6,-7,8,6,3,-9,-9,-1,9],[6,8,7,10,6,-3,6,9,-2],[-1,10,-8,-2,-5,1,-3,-3,10],[2,2,-4,2,-4,-3,7,-7,-10],[5,3,5,6,-10,10,1,-10,9],[-7,3,-2,-10,-2,8,-1,6,-5],[-7,-10,1,6,1,6,9,-2,7],[-1,-5,-3,5,-5,9,1,-2,2],[10,-7,6,-10,7,9,6,-2,-3],[5,10,-10,-2,4,1,-7,-7,-9],[-8,-10,-10,10,9,8,-8,1,-5],[-8,1,10,1,10,-2,1,-7,-6],[1,3,-7,-1,6,-6,2,-7,-5],[2,2,3,2,-5,-6,8,-6,-7],[-3,-9,-2,-9,8,-7,1,-10,5],[1,1,8,7,-7,6,6,-4,-10],[2,3,5,5,-3,-1,10,8,9],[9,2,9,-1,9,1,-4,-9,5],[10,10,-4,-2,4,-6,-5,-7,2],[-7,10,-8,5,6,-10,-6,10,4],[8,8,5,2,-2,9,6,7,-1],[-9,-7,-2,7,-5,-5,-10,-6,-2],[-6,-3,5,10,-7,9,2,-6,-6],[-5,-6,9,1,4,-2,8,-3,4],[-2,-1,-3,-9,-10,-5,-3,9,-3],[3,-10,9,3,9,8,-6,-10,-9],[9,2,-3,6,-7,9,5,-2,-9],[6,10,-10,9,-1,4,3,-8,-3],[-2,-8,5,-9,-9,7,3,4,7],[4,-3,-4,-6,8,-2,6,-3,-2],[-2,-1,3,-3,-9,2,4,-1,-2],[1,4,2,4,1,-2,6,-6,-9],[2,5,-2,9,-4,10,-7,-4,4],[-8,-5,6,6,5,8,10,7,-3],[-4,-2,7,6,7,-7,-7,-1,-8],[2,-8,5,-1,8,-2,-7,-7,7],[-3,6,-3,2,9,-4,2,-10,-3],[8,10,1,9,2,-7,10,2,-1],[-10,-6,-10,-6,6,-5,-1,-4,1],[6,-3,5,-7,-1,2,3,7,-1],[-10,7,4,-5,-5,9,4,5,4],[-9,-7,-10,-10,-1,2,4,-2,6],[-5,3,1,5,7,-5,1,2,2],[-9,6,-1,-5,-8,8,-4,-8,2],[-1,7,6,-1,-7,9,6,6,-9],[8,-4,2,2,-2,3,2,-10,3],[4,-6,-6,2,2,-4,5,-6,2],[-10,4,-7,-7,-2,-9,-4,9,-3],[7,-7,-3,2,6,-8,8,3,1],[10,8,-6,6,-9,2,-10,-7,-7],[-1,-10,-9,-5,8,8,7,-7,9],[-3,3,-2,2,-3,-10,-9,9,9],[-8,2,10,5,-7,4,6,-3,-7],[-6,-8,10,-9,-10,-10,6,-1,4],[-8,1,-3,-3,2,2,2,10,6],[9,-1,-6,8,-9,-10,-2,-5,-6],[-10,9,-9,-1,8,-1,3,2,9],[-5,9,5,10,-10,10,3,-6,-2],[-3,6,-6,6,8,-3,5,3,-3],[-3,-6,10,-8,-6,5,-1,-10,-10],[5,4,-3,2,7,1,-4,7,-9],[5,-9,-4,-6,-3,-4,-3,-8,-4],[-5,8,-2,6,-3,-7,7,10,1],[-10,-10,5,5,-5,-6,3,-7,-5],[-10,-6,-3,5,-3,6,10,-4,1],[6,-9,1,10,-5,5,-6,1,9],[-3,4,1,3,-7,4,6,4,-9],[-9,10,-5,-5,1,-3,10,5,3],[5,9,-2,-10,3,2,-10,2,-6],[-5,10,-9,-6,-8,-4,-9,8,2],[3,6,7,-1,-10,9,1,-9,1],[1,-6,10,-1,-2,9,9,-6,-9],[5,-4,-2,-1,8,-4,-7,-8,-6],[-6,9,8,-9,-9,3,10,7,-3],[6,2,5,2,-2,8,1,9,-1],[6,-5,7,-3,4,-2,9,-2,-1],[-10,10,5,2,-1,6,9,3,8],[-9,-8,3,1,-7,4,1,-5,5],[-10,-8,9,4,5,-9,-7,6,-5],[-5,-10,3,-2,-7,7,9,-1,10],[-10,-6,-10,-9,-7,-2,1,-1,2],[4,-8,3,3,3,-6,1,-7,-2],[-6,-4,4,-5,3,-6,10,9,9],[5,3,-5,1,6,7,-5,-6,5],[-6,5,-8,6,-10,-10,-6,-2,-3],[7,-5,3,10,-4,-8,-6,-1,6],[3,1,-7,-2,-4,-2,-1,2,-2],[7,-3,-8,-10,-9,-9,-2,5,4],[2,4,2,4,7,-9,-9,2,-7],[-6,9,8,10,-8,5,8,-10,5],[10,-5,-3,7,1,7,2,-5,-9],[-6,-6,4,8,9,4,-2,-3,-3],[-3,2,2,4,-3,4,3,-10,6],[-10,-6,6,5,8,7,8,-2,6],[10,-9,-10,-4,4,-3,8,7,-4],[-5,3,7,-3,-1,-5,-2,-8,5],[-3,-10,3,-9,7,-2,-1,10,-10],[-3,3,-1,-3,-3,-1,7,-7,1],[2,-10,8,-10,1,-2,-6,-6,-10],[-7,-8,-4,-9,3,9,8,5,-8],[2,-1,-7,-3,-1,2,-4,4,7],[2,-8,4,10,9,-1,-8,7,3],[-4,7,-5,-7,-7,-2,-9,-2,7],[6,-9,-3,-4,-1,-10,-6,-3,10],[-1,-7,-5,5,-1,-1,-3,8,-2],[2,1,6,10,-4,5,8,-8,-6],[-4,-9,6,-5,-6,2,-3,-5,-8],[6,5,8,3,-7,3,-7,2,3],[-5,8,-3,-1,-5,-3,-9,10,8],[-3,-5,5,2,6,8,-4,10,-6],[4,-3,6,-1,-6,7,8,6,-8],[1,5,-6,7,-5,3,1,-1,-6],[2,-9,10,-2,-6,2,-1,4,10],[-8,9,3,-7,1,1,-4,-7,-9],[9,-7,-2,-8,2,9,-1,7,10],[-4,-6,-4,4,-8,-9,8,-10,2],[4,3,2,-7,6,-5,-6,3,5],[9,-3,10,5,1,-5,-5,5,-6],[-1,9,9,-6,-4,8,-6,9,-5],[-5,-7,6,-1,2,1,2,10,-1],[-9,5,8,3,2,5,-2,-8,7],[2,6,-6,9,1,3,-10,1,-6],[-3,-10,2,2,8,-5,-5,4,9],[2,-2,-9,5,7,-9,2,5,-6],[-1,-3,2,1,2,-1,-9,-9,6],[-6,-1,8,10,-1,3,-2,-10,1],[-10,9,2,-3,5,-2,1,-3,-2],[2,10,-7,-3,-9,-3,-2,7,-4],[-3,9,-8,10,-8,-2,3,-4,-7],[8,-9,2,-7,4,-8,-2,5,1],[-2,-3,-6,-3,-8,4,8,-7,8],[9,-4,1,1,-2,-7,-10,-6,1],[9,-10,1,-4,5,7,1,-1,9],[6,5,6,3,-1,10,-10,6,-6],[6,-7,1,6,-10,-6,7,8,-10],[-4,-10,-3,-4,9,-4,6,-5,3],[-7,-10,4,-5,-10,4,7,4,-2],[-10,-9,-8,-2,-5,9,4,8,2],[-2,4,-2,-1,-6,-8,9,5,-7],[-2,-7,-7,-6,-2,-7,-6,-3,-8],[-9,-6,3,3,4,-1,-1,1,8],[6,-8,-8,-5,3,-5,3,-9,8],[4,3,9,8,-5,-2,4,-8,-8],[-9,-1,3,3,-9,-6,4,8,8],[3,7,-3,-2,-9,-3,-1,4,-7],[7,4,2,-2,-1,-6,-8,-5,7],[-6,-4,3,3,-2,-5,3,-6,-9],[10,7,-4,10,-1,8,2,-9,8],[6,6,-8,4,5,10,-10,-7,-2],[1,-2,-9,-2,-4,-7,-5,-4,8],[3,3,4,2,-6,3,2,1,6],[-6,-9,1,3,-9,-6,10,1,-7],[-9,-8,-2,2,-5,-9,3,1,-8],[-9,8,-9,-5,4,-2,-10,4,5],[-7,9,2,-2,7,-6,-6,5,3],[8,5,-5,-5,-8,-10,-4,-2,10],[-4,8,8,6,10,-7,7,4,-9],[9,-3,4,1,-4,-4,-8,1,-8],[3,2,-5,-8,-6,4,-1,-1,9],[-10,5,7,10,-6,3,-7,-9,-10],[2,9,-2,3,-6,-10,10,-7,-5],[2,10,-4,3,-9,-2,9,7,-2],[-10,4,9,-1,3,-4,2,4,4],[-7,9,1,3,7,-7,10,-6,-3],[8,6,2,10,3,-8,-1,-6,-10],[-4,-9,4,-2,3,-9,-4,2,8],[9,-2,3,-3,-4,5,-8,-9,-1],[-2,1,4,-6,7,-10,4,5,4],[-5,-2,-6,4,-7,-2,8,-3,1],[-9,8,5,-2,-7,-2,-7,-10,5],[-8,-1,-2,5,-6,10,-8,6,-4],[-3,-9,-7,5,-9,5,-2,-3,-7],[-5,8,3,-9,-5,-8,-6,-9,-5],[-8,-10,-5,1,5,-10,10,7,7],[5,2,2,3,2,5,-6,-10,-1],[9,-4,-7,-9,10,-6,7,-4,1],[10,4,-6,1,-3,8,6,6,-6],[-4,10,2,-10,7,-9,-10,4,4],[4,-2,6,2,1,-4,3,-1,-4],[8,1,10,6,2,-5,-10,2,7],[-5,-2,9,1,-5,-4,5,-3,-9],[-10,-2,-7,-1,-5,10,-10,10,-1],[-9,-10,7,3,6,-2,-8,10,-7],[6,-3,-8,2,-7,-4,-1,1,9],[-5,-1,10,-6,6,-10,-4,-10,7],[9,9,-4,-4,-8,-8,4,1,4],[9,-2,5,-9,-8,5,6,-9,-2],[8,9,3,-4,9,-4,-9,-3,9],[2,-7,6,10,-8,7,-1,5,10],[5,7,-9,9,8,-8,-9,7,-3],[-10,7,1,7,10,1,-2,-3,-2],[-3,-2,-2,8,-3,9,-7,8,-10],[-7,-10,-1,-8,9,5,6,4,-7],[-10,-10,-1,8,2,4,-4,9,10],[7,4,-9,-9,6,-3,-10,9,6],[10,8,2,2,-2,2,-10,8,-6],[2,2,-9,-1,1,-8,10,3,-8],[9,-10,10,3,-4,-5,-9,-8,-4],[-9,-5,-5,-7,10,2,-4,-9,-3],[10,-10,-8,7,-1,2,3,8,-2],[-2,7,-9,-2,-1,-1,10,8,-8],[-5,8,1,1,1,-3,-4,2,-6],[2,7,-9,-6,2,10,-4,6,-3],[2,-2,-3,6,9,-1,-10,-5,6],[5,-4,10,6,1,6,8,5,-10],[2,-8,-5,-8,-3,2,-6,5,-4],[3,9,-2,7,-2,8,3,-10,-3],[-3,10,1,-7,-10,6,-9,6,5],[2,7,-4,-10,7,9,6,2,-8],[-7,1,-9,-3,-7,6,-6,2,4],[10,-5,3,8,6,5,-4,-10,2],[-3,-8,6,2,4,-5,4,-2,2],[-2,5,2,-3,6,3,-5,-5,-9],[-8,-2,7,-1,-3,-9,-8,-5,1],[7,-4,-9,1,5,6,-6,7,7],[3,4,-10,-1,5,3,3,-2,-3],[6,-3,-9,-7,5,10,7,-1,9],[5,2,-6,-6,7,8,8,-3,8],[-10,-4,8,-9,9,-5,3,-10,10],[4,-7,-5,-4,-2,4,8,5,-2],[-7,-8,-3,5,-5,-5,-3,4,-1],[-4,3,-1,-5,4,-10,-3,-7,3],[5,6,-5,6,9,5,-8,6,-6],[-10,-5,-1,1,3,-4,-8,4,-9],[-6,-6,-5,-6,1,-6,-6,-10,-3],[7,4,3,-6,-6,-6,1,8,-8],[8,5,3,-8,10,-1,6,10,-8],[7,6,8,8,6,7,-10,8,-4],[-9,-2,-8,-5,-3,-6,7,-8,-9],[-5,-4,-3,-6,5,10,-5,-2,7],[1,6,-6,8,-10,-4,-1,-5,1],[7,3,-1,9,-10,-2,1,-1,-9],[1,-10,-4,-9,-5,-1,2,-6,-7],[-8,3,-9,6,-2,9,6,1,-3],[10,7,6,-4,5,5,-8,-10,10],[-8,9,5,-3,10,-5,-6,-4,-10],[2,-1,3,9,-1,-2,8,9,-2],[-5,-5,7,-9,7,-6,6,-3,5],[4,-9,4,-8,-3,-10,-1,-10,-10],[-8,-9,-4,4,-5,8,-2,5,-9],[-3,1,-2,-3,-6,1,9,6,-6],[5,10,-4,-1,1,10,-6,7,-10],[-8,5,-5,9,6,2,-4,2,8],[-2,-6,6,5,8,-9,4,-9,-1],[-5,-8,4,5,-8,3,6,-6,10],[-8,-6,-10,5,4,3,10,-4,3],[10,-7,8,6,-5,6,-6,2,-1],[9,-4,-9,6,9,8,9,1,-6],[-6,-2,-7,-6,-3,5,9,-1,4],[-4,-9,-10,6,-7,-5,-5,-7,2],[7,7,8,-5,5,-2,6,-9,10],[6,-1,4,-7,-7,-7,-10,-8,-4],[10,-5,-7,-4,-4,10,6,-1,-8],[-5,3,-1,2,5,-8,-8,2,5],[-10,-2,4,2,9,-1,10,2,-7],[-6,-4,-10,-3,3,2,5,-7,-8],[-1,4,-6,5,-8,-1,-1,5,9],[-10,-6,8,-2,-9,9,3,10,8],[-2,-1,-1,7,-9,-9,-10,9,-3],[3,9,6,1,-8,7,-6,8,-9],[-10,-4,1,-7,2,8,-6,-3,-2],[3,-8,-4,-4,2,-10,4,9,10],[1,2,7,9,10,-8,-10,-6,9],[-3,-2,6,8,-1,10,-7,-1,4],[-1,-1,6,-3,-8,5,1,-2,-3],[-5,2,7,7,3,-5,8,-2,6],[8,-4,-2,-6,9,6,-8,-4,-6],[10,-7,1,-10,9,-10,1,8,-6],[6,-3,-2,8,9,10,-5,9,5],[-7,1,-8,2,-8,-7,-3,8,8],[5,10,10,-9,4,8,-8,-6,-10],[7,-6,-6,-9,5,-3,7,-1,-1],[-9,-7,-8,2,-9,-4,-5,-4,-6],[-5,7,2,3,7,-6,-8,-9,-8],[1,3,-10,-10,8,7,2,8,-2],[-9,-8,10,7,1,-2,-2,-10,-4],[4,7,-7,5,-8,9,1,-6,6],[-5,5,-8,-4,1,-9,-6,8,4],[-10,5,2,-10,5,2,-4,-4,-2],[10,-7,9,8,1,-9,-9,4,8],[9,-8,6,6,6,2,6,-1,-3],[-1,8,-6,6,7,-1,-5,5,-5],[-3,2,4,-7,-6,-3,1,-1,-5],[5,2,3,-8,-4,-2,-3,-3,-4],[9,-5,-10,-7,4,9,2,-3,7],[-10,4,6,-4,-3,-6,-3,-8,1],[9,-10,-5,-4,-4,-3,-3,-4,6],[5,10,8,4,-2,-2,-2,-2,-5],[1,4,-8,-6,10,10,-1,10,2],[7,1,-10,-4,-5,-7,1,-2,5],[2,3,-1,-9,-9,-4,-7,8,-2],[-1,5,3,8,1,-1,-10,-8,-4],[-7,3,-2,-6,10,8,-6,-10,-7],[-4,9,5,-4,2,9,2,10,3],[-2,4,-4,-6,5,3,1,9,3],[-9,-10,-10,8,6,-7,4,7,-3],[-2,3,-5,9,4,-5,1,-3,-6],[9,-4,5,-3,3,9,-1,5,10],[10,5,7,-10,-7,-9,-7,10,-3],[-5,6,-6,-3,7,3,-7,7,9],[-5,2,4,-4,8,-4,-1,-9,8],[3,4,-9,-9,2,-10,10,1,-7],[3,-8,7,4,-3,-2,-2,-2,7],[5,-10,2,9,-5,-5,-5,-4,-1],[-7,7,-10,10,-6,-10,6,10,4],[5,-5,-4,-3,-9,4,-9,5,-10],[7,-8,-4,9,-4,5,-1,1,-3],[6,-4,6,-5,8,1,6,7,4],[-2,3,-1,4,-1,6,8,1,-7],[1,-1,1,-4,-1,-10,-4,7,-8],[6,-10,5,-10,-8,-8,-7,6,-5],[-10,-3,-3,8,-5,5,-5,3,7],[-9,-4,7,3,-8,-1,-7,5,-4],[3,6,-6,1,-3,7,4,-8,-5],[10,-10,-9,3,-4,6,-9,-9,-8],[7,8,-4,1,-1,8,-1,-5,5],[1,-10,8,-2,-6,1,8,3,-7],[1,7,-6,-9,3,7,-10,8,5],[7,-3,10,6,4,-4,-10,-1,-8],[-4,-4,-2,3,-3,-3,8,-6,4],[-9,-6,2,5,6,9,-3,-2,7],[9,-8,-4,-9,-3,-5,4,9,-6],[9,-3,9,10,6,-8,6,7,-8],[-6,-3,-5,-8,-4,-9,8,-4,-3],[-4,5,-5,-4,-8,6,10,-6,-3],[-3,10,-7,-8,6,-7,-4,-4,-10],[-2,1,-5,-8,10,-10,-7,-5,-2],[7,-7,-3,6,5,8,8,-2,-10],[7,-4,5,2,-10,-10,-1,-4,2],[5,7,-7,-7,-7,-5,8,6,-10],[9,-3,-3,1,2,2,-5,9,9],[8,-10,-7,-1,-8,10,-10,-2,-7],[-9,-8,-6,-2,-9,6,6,6,-1],[2,1,-1,-10,9,7,8,6,5],[-8,6,10,7,-6,-6,7,8,-8],[8,-3,1,-3,-6,-2,-5,-1,-10],[-1,-9,-10,-5,-2,7,-4,-9,4],[-7,-6,-7,7,1,-3,9,7,-2],[-4,8,-9,-8,-1,-2,-9,-1,-3],[5,10,-7,6,8,7,-2,6,9],[-4,10,5,10,2,-9,2,6,2],[7,-3,-3,5,-1,5,8,-6,5],[-4,-5,6,1,10,10,-3,3,-1],[4,4,-7,-5,8,-7,1,8,8],[-2,2,8,-5,10,-9,-6,7,10],[9,-10,5,10,1,-3,-1,-9,8],[-8,10,-3,-9,2,9,9,-7,2],[8,-9,-9,-1,-9,5,10,4,-1],[1,-8,-3,6,4,1,-5,-10,-2],[-9,1,-3,-7,10,-5,8,1,8],[10,8,-7,-2,9,-7,10,4,-3],[-8,2,-2,10,-10,6,7,-3,-2],[5,3,5,-7,-5,4,9,-10,9],[5,-2,2,-4,5,-5,10,-10,-6],[-2,-10,3,8,-6,-1,10,6,-3],[-1,-7,-6,5,4,8,2,10,-10],[-6,5,7,-8,-1,1,1,1,-10],[4,-5,-1,-8,-5,-7,-1,5,4],[1,-9,4,-6,-1,7,-8,-7,7],[5,4,-4,-9,1,-3,6,-9,-8],[-4,-10,-5,-8,-5,-5,-4,-10,2],[-7,-8,-5,-7,7,-5,-9,-9,-3],[7,7,-8,-8,3,-1,1,8,-8],[2,-3,1,4,-6,-2,-9,-2,-3],[-7,3,9,8,1,9,10,-5,8],[2,8,7,9,-9,10,-3,4,-10],[-9,-1,4,-2,-9,7,4,1,7],[2,-4,1,6,5,-10,-1,3,1],[-1,-2,-9,10,-8,5,-9,-5,1],[-8,-10,5,8,-10,9,6,4,10],[7,-7,3,4,9,6,5,-7,7],[-6,-9,5,8,9,1,5,3,5],[-2,-7,-10,2,-9,10,-10,-2,-3],[-10,8,4,1,7,1,-10,-3,-5],[2,-8,-6,-8,5,7,6,-10,9],[4,-3,-5,-5,7,-2,10,-2,6],[9,4,3,-3,-3,3,-6,1,10],[-4,-1,-2,5,-8,2,-3,-5,4],[-2,-8,9,6,-8,7,-3,2,1],[-6,10,3,7,3,-5,-1,-6,-4],[10,-2,-7,8,-1,-3,-8,9,4],[-2,-10,-4,-3,-3,-3,6,7,6],[9,3,6,-4,-6,4,7,-10,10],[9,8,-2,1,8,6,-1,8,4],[-1,-10,-1,8,10,-4,-3,-4,7],[5,4,5,7,-4,3,1,-8,2],[7,9,1,8,6,-6,-7,-10,-6],[10,4,-8,-4,2,10,-3,-7,4],[6,1,-5,-7,-10,5,6,7,9],[-9,-4,9,7,9,-6,2,-5,6],[-10,2,9,-7,-3,5,2,9,4],[-8,-9,5,-9,7,-9,-6,7,-2],[7,1,4,4,-1,9,-10,-8,-5],[-4,1,-10,6,3,8,-10,-3,-5],[-1,2,-3,-9,8,-1,4,9,9],[-8,-7,-10,4,-10,-3,3,-7,7],[-6,4,-6,8,2,-5,-9,10,6],[3,-10,-9,1,8,-7,-9,-1,-8],[7,7,5,4,7,-10,-4,4,-5],[10,5,3,2,6,4,-10,-1,-4],[-9,10,2,2,2,-1,-9,4,-8],[-7,-8,4,10,-5,-9,9,7,7],[-7,5,-4,-6,-5,6,-7,4,7],[-1,9,8,-5,7,4,9,-2,-3],[-9,7,9,-9,-6,6,-10,10,3],[9,-3,-7,-2,-10,-3,1,4,-7],[-3,1,-1,5,-4,-1,3,4,-6],[-4,-1,3,7,-5,-3,-4,-3,6],[-6,5,5,8,6,3,4,10,-2],[-9,-6,2,9,6,2,5,-4,-7],[-6,9,6,-6,1,-8,-1,-4,1],[8,1,-1,-7,-3,9,-2,-7,-9],[-4,5,-2,-8,10,-4,7,1,6],[-3,8,-6,7,4,-10,9,7,-9],[9,-6,9,-7,3,-4,-10,4,4],[7,-9,-9,3,2,4,-2,9,1],[7,-4,-6,9,-7,5,4,-5,2],[-1,2,6,-7,8,-6,5,6,6],[-10,-9,-10,8,-8,-7,9,-7,1],[8,2,5,-6,3,-10,4,-6,6],[-7,9,1,6,-2,-10,8,1,5],[-8,-6,3,-2,5,9,-1,8,-2],[6,9,-4,-2,-9,10,9,-5,1],[-1,4,-10,-9,-9,-2,8,-2,-7],[7,7,-10,-2,-7,4,-4,2,10],[2,4,8,4,-6,-2,3,10,-5],[-8,-3,-3,-6,1,6,-1,-3,-10],[3,-7,-2,-1,10,6,-6,-2,3],[6,-4,-9,-10,-9,-7,4,-4,-8],[1,3,3,-7,-8,-7,-4,-10,2],[9,2,-3,-8,9,-7,10,8,-9],[5,-1,-5,-3,5,-9,5,-7,7],[-5,6,-9,-1,-4,2,-4,-1,9],[-7,-7,8,-7,4,-9,5,-8,-8],[-5,5,1,-5,4,10,-2,-8,7],[-4,10,-10,1,-4,6,7,2,3],[7,8,3,-7,-5,1,2,8,-5],[2,4,6,-8,3,3,3,3,-3],[9,1,-4,8,10,-5,-4,1,-3],[-10,-8,-10,9,2,7,10,5,2],[6,5,-5,8,-7,1,-6,10,-4],[-6,6,-8,-7,-8,2,2,-1,-3],[-7,-8,-2,6,-10,1,-9,-10,8],[7,-8,8,7,7,8,6,1,-2],[5,-10,-6,-10,9,-1,7,4,5],[5,-5,1,2,-9,-1,5,-2,-10],[5,5,-9,-5,-4,-4,-3,2,3],[1,9,10,2,-4,2,3,4,-5],[6,-1,-9,1,8,-1,-7,8,-2],[-5,-6,9,3,-7,-1,1,-4,-10],[-9,-6,4,-10,8,6,8,4,-2],[-4,-8,3,-5,9,-7,2,-9,5],[-4,6,-2,-3,4,4,2,-3,1],[2,-8,-7,9,3,8,1,2,5],[10,6,-5,1,10,-8,8,9,10],[-3,5,-4,5,-4,-5,-2,-5,10],[-9,-7,-5,-4,-4,2,-8,2,-2],[-6,-4,-3,9,5,-4,-4,-7,3],[-6,6,-9,6,5,5,-4,4,3],[-10,-5,-6,9,-3,1,-10,-5,10],[7,5,6,1,1,10,5,6,-5],[8,-4,-2,-8,-5,9,9,3,-7],[-2,-9,-4,-6,-8,-10,7,-9,-10],[8,-1,1,8,5,-1,-10,-3,-7],[7,7,-8,-10,-4,7,-8,-1,8],[9,1,-9,8,-7,-8,9,10,3],[-10,6,-2,5,-10,10,-8,5,-5],[-4,-4,6,-7,-9,1,-6,7,-3],[5,-8,6,-4,-9,8,3,-8,4],[3,9,2,-4,-8,-2,-9,-3,-3],[-6,-5,-6,-8,-6,-8,-10,-4,4],[8,-6,-8,-9,7,-5,3,7,-6],[-3,-4,1,-9,-4,10,1,-6,4],[7,-3,7,7,1,10,-9,-4,-1],[-4,5,-3,5,-1,-3,7,8,4],[-1,-5,-5,2,7,-6,10,-9,7],[8,-8,-5,3,10,-5,5,5,8],[5,5,-7,-10,-10,-2,1,-1,10],[-9,-9,4,-3,-7,1,2,7,-9],[8,-3,-10,-5,8,1,1,1,-9],[1,-4,-2,-6,-10,-2,1,-10,-8],[1,3,-9,-7,4,-10,1,-5,-2],[1,-1,-4,1,3,-10,-2,-4,10],[9,6,3,6,-9,-2,-10,-10,-3],[-6,-10,6,9,2,-4,9,-8,-9],[-8,9,-6,10,-4,-8,7,-9,-2],[8,2,-7,2,2,-8,3,3,-7],[4,6,-8,-3,6,-1,-7,-2,-8],[-7,-4,10,-9,-1,-6,-5,4,8],[-4,6,-3,10,5,-10,10,3,8],[5,-8,-2,-3,-7,-6,10,6,-2],[10,-8,4,9,-7,8,-6,3,-1],[8,-1,2,10,1,-5,-4,7,-3],[-1,-4,3,-4,-7,2,-1,4,7],[-1,-6,-10,5,8,-5,-2,-3,5],[-2,-6,-5,9,-1,9,-6,5,-3],[5,-9,2,5,-10,-2,-4,-5,5],[1,7,-6,-1,7,6,-1,9,-5],[-3,5,-9,-10,5,-5,5,-4,-9],[-9,5,-8,-5,4,-8,5,1,5],[-8,5,10,4,6,-10,-10,-9,4],[-8,6,-4,-2,6,-8,-5,5,2],[8,5,-7,2,5,-4,9,-9,-5],[1,-2,1,7,-10,6,2,-9,-9],[-3,4,4,-8,-2,-10,-9,-4,-8],[-3,-3,-1,-7,2,-1,2,5,1],[-8,2,5,-4,-3,-7,5,9,-3],[6,5,-5,10,2,5,-5,-4,2],[-9,6,-7,6,-1,2,7,-3,8],[3,-7,-5,10,-7,7,6,8,-9],[-4,-8,1,-10,-10,5,3,5,-2],[-2,10,-1,-9,-2,-10,1,-7,-1],[-9,-9,6,-6,-1,-10,-3,7,2],[-10,-4,5,3,-8,-4,-9,9,-3],[-1,7,4,-6,8,2,-9,10,-3],[7,-10,6,-3,-9,2,-1,-5,-6],[-4,5,6,-3,-10,-10,9,-8,-4],[4,-9,4,-7,8,-3,-8,-9,-10],[-4,9,7,6,-9,-4,-9,4,1],[3,3,7,-6,-5,-2,9,10,-10],[9,5,-10,-5,-7,-1,7,6,5],[-5,2,5,7,-10,2,-5,5,1],[7,8,-4,-4,-3,10,6,9,7],[4,8,10,5,2,-3,7,10,-6],[6,-7,2,7,3,8,9,-4,5],[8,-9,-1,-5,4,6,2,-2,1],[6,-4,5,1,-1,1,-8,7,9],[-10,6,10,6,4,-8,-3,-4,-3],[8,-4,-8,-8,-4,-6,1,-7,-1],[-9,-8,-6,9,-1,8,-3,-10,7],[2,8,10,-8,1,-8,-4,-3,1],[9,1,-2,-5,-7,-1,-3,-2,8],[-5,3,-4,2,1,10,-5,9,-6],[4,7,6,-8,9,-2,-1,5,-4],[-8,-9,-2,-8,-8,10,9,7,7],[-4,-2,2,1,-10,-9,7,3,-4],[-7,-9,-1,-8,6,8,9,-6,-4],[5,-4,-2,-1,8,-7,8,-5,10],[7,8,-3,7,-6,-3,1,-6,4],[8,6,-9,8,-10,6,1,-8,-9],[5,5,6,4,7,-4,7,-8,10],[10,5,-1,10,6,-2,8,-8,-3],[-2,-6,8,-4,4,1,-9,1,3],[-7,-5,8,6,7,3,-2,6,6],[8,10,-1,-5,2,-2,-8,-7,-2],[10,-2,-3,6,10,3,-7,-7,4],[-8,6,-7,-4,-9,-9,5,-10,8],[-4,9,8,3,5,-10,7,10,-7],[-4,-1,3,6,9,7,-9,2,4],[-2,-5,6,-7,-5,-6,3,5,-7],[-4,-6,-8,2,1,-9,-6,-3,-9],[-6,10,1,-6,-10,-8,9,7,-7],[-8,6,5,-8,6,9,8,10,-9],[-6,7,3,-2,-1,10,5,9,9],[7,-4,-7,-8,10,-5,-1,1,-8],[5,-1,-10,-6,-8,8,-8,5,8],[5,-10,-4,-4,-7,-2,3,4,6],[2,-9,-7,-10,-2,7,10,3,-8],[5,1,9,7,-5,-4,7,2,-10],[2,6,-8,5,-6,8,-7,-6,-4],[-4,-6,2,-9,-10,6,10,2,4],[-8,8,7,-7,-8,3,-7,3,-5],[5,-5,-4,5,-8,1,-6,1,4],[1,-4,-4,1,3,7,2,-1,9],[9,-9,-2,1,1,6,-3,7,-6],[-4,4,-4,7,-5,4,-4,-9,-1],[5,-2,5,-2,-3,-6,9,7,-9],[-4,-6,5,-2,-2,-3,-3,5,7],[-3,10,7,6,-8,-9,3,-5,10],[-6,10,5,-1,2,-4,-9,7,3],[-7,-1,-2,-6,-2,2,1,-6,8],[-4,10,8,-6,-10,-6,10,4,10],[2,2,9,7,4,2,-7,-4,4],[-2,6,-7,7,-8,9,-8,6,-4],[-4,4,8,-1,-4,-1,-6,1,5],[4,3,2,2,2,7,-2,9,-10],[-3,10,-5,-4,-6,-3,-2,2,1],[-9,3,2,9,5,-1,5,-6,-9],[-7,-4,-9,3,-5,1,10,-10,3],[-7,5,8,-4,8,-7,-3,-2,-9],[-3,4,-9,4,5,6,-6,-8,-2],[-7,-1,-10,-3,-7,9,6,10,10],[5,1,-9,-5,10,6,-2,-2,-9],[3,5,-5,-6,8,10,-5,3,-2],[3,-7,-3,-6,-7,9,-9,6,-2],[8,-3,-4,-6,8,5,2,-1,2],[4,-10,4,-7,-2,7,-5,2,5],[10,2,-1,-2,-8,3,-7,-8,10],[-6,5,1,10,10,3,-7,-7,3],[-8,2,-7,6,4,3,-5,10,-5],[-3,4,-8,-1,9,5,-5,-8,1],[-1,-3,10,-6,3,5,6,4,3],[8,6,-1,3,6,-2,9,1,-6],[-8,-5,10,-8,10,-8,-5,-7,6],[-3,-4,10,-3,9,1,-6,2,9],[-1,-10,-10,-4,-7,-7,8,1,9],[10,-2,-8,6,1,5,-10,6,7],[-10,-2,-1,1,-1,3,-6,1,-4],[1,3,10,2,2,1,6,10,8],[9,1,2,9,9,-5,9,6,8],[7,7,-7,-1,-2,3,10,-1,-3],[7,2,3,2,5,-3,-6,-2,2],[-3,-4,-3,5,2,-6,-1,-8,10],[2,3,-10,10,-7,-10,4,1,6],[-7,-7,9,6,6,-4,-5,-10,4],[3,7,6,8,-9,-10,-2,8,-7],[-3,-8,7,7,6,10,-7,-4,4],[2,-2,10,-5,-8,-2,-1,-8,-3],[-9,-8,-6,-7,-5,7,-2,1,9],[-3,-6,9,-6,2,-7,10,3,-5],[6,4,-4,1,10,-8,-7,-3,-4],[10,3,5,-7,8,-10,-1,-4,10],[-7,-3,-4,6,-4,4,-3,7,8],[-4,6,7,6,4,4,-7,6,-8],[1,-4,6,2,-6,-3,-2,9,10],[5,3,-7,7,10,6,-6,3,-1],[-9,8,5,-8,-8,-6,-3,6,4],[5,-9,-5,-2,-1,10,-5,6,-4],[5,-9,-1,3,8,3,5,3,2],[1,10,2,6,1,-3,3,9,10],[9,-5,7,8,8,7,1,6,10],[1,7,7,5,7,4,-5,3,7],[-9,-1,8,7,-6,9,4,9,10],[-1,-8,10,-6,-4,-4,-6,-7,10],[-4,3,1,-5,9,-6,2,5,-6],[1,-9,-10,5,6,4,5,2,-2],[-9,-9,3,-1,-3,-6,-1,-2,1],[3,-9,-9,-4,4,4,10,3,6],[-5,2,1,-8,6,-3,1,4,-5],[-4,9,7,-2,-7,-8,-2,7,-2],[3,-3,1,7,-3,3,-5,-9,7],[-6,-6,-5,-7,1,8,-4,-3,-1],[4,6,10,-7,8,-9,-3,3,9],[8,-2,10,2,2,-1,-2,2,2],[9,7,5,-2,1,2,5,6,8],[-9,9,6,6,-7,-5,-10,-10,4],[1,6,3,-1,-7,-6,-4,5,-8],[-7,8,3,-3,-8,8,-8,9,-10],[-3,1,-2,7,1,9,-3,-4,-10],[-4,9,-8,5,-7,-4,-9,10,9],[6,-7,-7,6,5,-1,-8,10,9],[6,5,-10,-2,6,-8,5,-10,-1],[-1,9,9,-10,6,-6,-9,-1,-6],[5,-2,10,-7,-4,-7,6,-3,3],[6,9,-5,-9,9,-1,2,3,-7],[4,9,-3,-2,-6,5,-7,5,2],[-2,4,-2,-8,-9,10,5,-3,1],[-5,-6,-10,-2,-1,4,5,-6,-9],[4,-3,-10,10,-7,2,-9,-5,-9],[8,-3,-6,-4,-4,10,9,3,-6],[6,-8,10,-3,8,6,2,-9,-2],[-1,-8,7,2,-3,-1,-8,6,10],[-10,7,-2,5,6,8,-1,-6,-7],[6,-10,-4,7,-8,2,10,-2,9],[-9,-7,-10,-3,-7,7,-2,1,1],[5,-9,-10,-2,2,7,-9,6,1],[2,-7,3,-2,7,10,-9,6,7],[-1,-8,4,-2,10,-10,6,-5,2],[-4,-6,8,-9,-9,6,-2,-9,-10],[4,8,2,6,-2,8,10,8,3],[10,-2,-8,8,-7,-10,2,9,-9],[7,-6,8,-1,-5,4,5,-3,-6],[-7,-1,-1,-1,5,2,10,1,8],[-9,-8,10,-6,6,3,-10,-6,7],[2,-2,-10,2,6,6,-1,-5,-1],[10,1,7,-8,6,-8,1,3,-6],[8,2,1,9,3,10,-8,-1,6],[3,-7,-6,-2,-4,2,9,-7,-5],[-7,10,-6,-3,-3,-3,4,-3,-7],[-5,-7,5,10,1,-2,-8,9,-8],[10,-1,-8,2,-2,-5,5,7,3],[-1,-5,10,9,6,-8,4,8,3],[-2,9,1,5,8,-9,-4,-3,3],[6,-3,-1,-7,-1,10,2,-2,-10],[-7,-10,-6,7,9,9,-3,-5,7],[7,9,-10,1,-5,-3,7,-7,-6],[-4,-5,2,7,10,10,-8,-1,5],[7,3,1,6,-7,-3,-8,-7,3],[6,3,-2,3,-9,6,-6,-10,-7],[-5,8,-8,7,1,-8,1,2,9],[-6,3,-7,-9,-6,-3,9,7,-2],[-8,2,10,4,5,-7,2,-9,9],[6,10,-9,4,-5,-5,8,5,-5],[-2,-10,4,3,1,3,-9,-9,2],[2,-6,-8,3,6,-8,6,-9,8],[2,-1,7,-2,-6,3,-7,-3,3],[3,9,-7,10,8,-8,5,2,-2],[4,3,-4,-6,-3,-5,-4,4,10],[10,-5,-1,7,-2,6,5,-9,-9],[-5,6,-8,6,-3,-5,2,-3,4],[-9,-4,9,6,-9,4,-7,-3,-9],[-8,-2,5,-4,-3,-5,2,9,6],[5,3,6,2,-6,-10,7,-10,-9],[-6,-4,-9,-7,5,-7,3,-3,-6],[4,2,-2,-7,-10,-9,3,-9,4],[8,-9,7,-5,7,-9,-7,-10,4],[-3,2,9,-2,7,-1,-1,2,3],[-7,-10,-6,-7,3,-4,-9,8,-8],[-3,9,-2,-10,-1,-3,4,5,-4],[2,-6,7,1,-4,-9,8,-3,-1],[9,-7,8,7,2,3,-6,5,1],[9,2,-3,-8,-3,9,-5,9,-1],[6,6,-1,-1,-7,9,2,2,-3],[-5,7,9,5,-4,-10,1,4,-3],[8,4,-2,-5,-10,10,-3,2,4],[6,7,-2,-7,-2,-2,-8,9,-6],[-2,7,8,-5,2,-1,-1,6,8],[-7,-2,-8,6,-5,-7,-7,-1,-10],[4,2,-5,4,9,-5,7,6,3],[-4,-9,3,9,4,6,1,-3,8],[5,5,-10,-4,4,-6,3,5,8],[-9,-10,7,9,8,10,-2,-7,-10],[9,6,2,-10,4,9,5,-7,1],[1,-3,-3,-4,-7,-2,-10,10,4],[-9,-1,2,-3,7,2,-5,9,-9],[-10,-5,-3,-5,-8,10,1,8,2],[-9,7,-6,-6,-1,8,7,-2,-4],[-1,-10,4,-3,-1,6,-3,10,-2],[10,-9,3,10,5,4,8,6,6],[-10,-6,2,-6,-6,-6,5,8,-6],[1,-3,-9,-4,4,-7,-4,1,-9],[10,9,-2,-6,-10,10,5,1,10],[7,-9,5,-1,-4,-9,-7,-8,6],[-1,6,-9,7,-10,4,-10,-5,1],[-6,9,7,3,-6,10,1,-8,-3],[5,-1,-8,-6,-7,7,1,2,-3],[7,-5,-7,8,-6,-6,1,9,-10],[-8,-5,-7,5,-8,-7,8,-7,10],[-9,3,-3,6,-4,-8,4,-1,5],[3,-8,-6,2,-3,-10,4,-9,7],[-9,8,10,10,-3,2,10,7,8],[7,1,8,10,1,2,3,-10,5],[-6,5,5,-9,-5,-7,4,-1,-3],[-4,-5,-4,2,-8,-8,-6,7,8],[-9,1,5,-4,-9,4,6,-4,-5],[-7,6,1,8,10,9,9,5,1],[-7,1,-2,9,2,-10,-4,4,-2],[-5,4,-6,-3,10,-7,10,-8,10],[-3,-7,-4,4,5,7,-4,-8,8],[-1,10,-9,-4,1,-7,9,1,6],[6,3,-7,9,-3,-2,-2,1,4],[-1,8,-10,6,-4,-7,4,2,5],[6,-3,-10,1,5,5,2,10,1],[-5,-1,-4,1,2,-5,-3,10,1],[8,-3,4,6,4,-7,8,-2,3],[7,-5,-7,7,-1,-3,-6,-4,6],[7,-7,-10,7,-6,-6,6,3,4],[10,-8,-8,-3,6,5,7,-3,-6],[9,-10,-2,-6,-2,10,8,7,2],[1,-4,-5,8,-3,-8,-6,2,-4],[4,3,-10,4,-2,6,-8,9,3],[-3,8,3,-4,-3,-7,-1,8,9],[-8,5,-3,5,-1,5,10,6,5],[2,-8,-8,-3,-6,-4,8,-9,3],[6,-5,-4,-1,-8,2,6,-5,-10],[-9,-3,-1,-1,10,-4,2,-4,-6],[-7,3,-6,1,1,-6,8,-4,-10],[9,-4,1,-3,-7,-10,-5,4,4],[-5,1,10,8,3,-10,-7,-4,7],[10,-10,7,3,-5,-2,-4,4,6],[5,2,4,-10,-1,5,-2,8,-3],[2,-6,1,-5,-6,2,-3,-6,4],[-8,-2,-9,-7,-1,4,9,-7,2],[7,-5,-8,-7,-4,7,4,2,-6],[-4,-3,9,8,-1,7,5,1,-8],[-6,10,-7,-10,6,-8,3,7,-6],[3,-6,-1,10,-8,-5,-9,-1,-3],[-8,1,6,-8,1,7,4,1,6],[7,-5,6,9,-3,4,1,10,8],[1,-7,5,-10,-5,1,3,7,2],[10,-1,-4,-8,9,-6,5,6,10],[5,-10,-10,-2,-10,-1,-4,-6,5],[-10,-4,10,-7,-9,-7,4,-6,-2],[7,7,5,-2,2,-4,9,-9,-4],[-4,6,-5,10,-4,-8,-3,10,-4],[2,6,7,1,5,-8,-9,-1,8],[5,-9,-6,-5,2,1,-2,4,-6],[-7,7,-5,2,-9,-6,-1,5,-1],[-7,-10,-2,6,3,-4,-1,6,-5],[-4,4,10,-10,-2,-2,-6,9,-9],[6,-7,-5,7,-1,5,3,-3,-3],[-8,7,-8,5,10,-9,-5,4,3],[4,-9,-3,1,6,-5,-8,-1,-5],[5,-2,-1,4,5,1,-1,-8,-10],[-7,-8,-6,1,8,-10,-3,-10,-10],[8,-1,3,-1,-7,-5,9,-9,-4],[-2,10,8,-2,4,8,6,-7,-8],[-1,5,7,4,-1,-5,-7,-1,-6],[8,2,3,-6,-7,-8,-3,6,-6],[7,7,4,-4,-8,9,-6,5,8],[9,8,7,2,6,8,-9,3,-7],[-9,-7,8,2,-10,-1,6,2,-7],[-2,9,-9,10,-5,5,10,-3,-2],[1,-4,-4,1,6,-3,-4,-5,3],[-3,-1,7,-8,-1,-4,-9,-10,7],[-9,-3,-6,9,-1,5,6,8,4],[-5,-2,3,-3,2,5,-9,-2,1],[-9,5,5,-6,8,10,1,4,4],[-1,8,-2,5,-9,-6,-2,-1,6],[7,-8,-8,-6,-6,4,6,8,-9],[10,4,10,2,-6,8,-10,4,1],[8,2,-6,3,2,-7,-4,6,6],[9,-5,-10,4,10,-10,3,8,10],[-2,5,4,8,9,-7,7,3,-8],[-8,5,-2,1,-10,1,-3,3,-8],[2,-7,9,5,10,1,-1,10,-7],[10,10,-6,-2,-3,-7,-3,8,-9],[4,4,-2,-1,3,10,6,7,1],[-4,-2,-7,-1,-7,10,5,-8,7],[-3,4,2,6,-5,1,-8,-9,5],[9,-6,-4,-10,10,7,9,-8,3],[-6,-7,4,7,4,-2,1,6,6],[4,8,-8,-3,-4,-10,10,-8,9],[4,3,1,10,5,-7,-3,-10,7],[5,-5,-1,-8,4,-8,9,8,-2],[9,9,8,-6,-1,4,-4,-5,10],[3,9,-5,10,-8,7,-7,4,10],[-4,-2,3,-2,-5,-6,-5,4,-8],[-8,4,-7,8,9,10,3,-6,-10],[3,7,-8,-2,6,4,6,2,-10],[2,5,-1,1,-10,10,-9,9,-10],[1,-8,9,-10,-6,6,-3,5,10],[-4,1,-9,1,4,3,9,-8,-2],[-10,6,5,1,2,8,1,2,-6],[-3,-8,9,2,7,4,9,-10,-10],[-8,-6,7,10,-6,10,-5,8,-7],[-5,4,1,1,-4,6,7,6,-2],[-7,-3,-9,4,-5,7,9,2,-6],[-1,-2,10,-10,-2,10,1,8,-2],[-8,-1,1,4,-2,3,-9,4,1],[9,-1,-8,-5,-10,-5,-10,-9,6],[10,9,-6,9,9,9,7,1,-7],[1,-2,-4,3,9,-6,-3,-5,-8],[7,8,-3,5,-3,10,-9,-3,-1],[-7,-5,-10,9,9,6,-7,-7,8],[-2,-9,-3,-8,-9,-3,-9,7,-7],[7,10,2,-5,8,3,-1,-3,3],[-9,-10,1,-1,6,-6,-4,-8,9],[10,-10,4,-6,-10,5,-7,-2,3],[10,6,1,-6,-3,9,8,-3,-10],[2,4,-7,5,1,8,-3,-9,4],[-8,-5,9,-4,3,-3,-6,1,7],[7,1,-1,4,-9,10,-3,6,-3],[1,-1,-5,-9,9,1,9,10,-7],[-1,5,-6,-5,-5,-6,-7,-6,-5],[-3,1,6,10,9,-7,10,-9,-10],[-10,-5,-8,-5,-10,-3,9,-9,8],[2,3,9,-8,-10,4,4,-6,10],[10,9,4,4,8,6,1,5,7],[-3,-2,4,2,-1,6,2,-7,-5],[5,-8,3,8,-10,-5,6,2,1],[-4,-5,-3,8,-5,6,-10,9,3],[-10,3,3,-8,8,-7,-7,5,-7],[1,2,4,7,-1,2,8,5,3],[-1,-9,1,1,-10,-10,-5,-4,-8],[-6,-2,3,1,5,5,7,9,9],[5,-7,-6,-4,9,-9,8,-2,-4],[-4,6,-2,7,1,7,-5,-9,7],[-3,-8,9,-7,-3,-7,6,2,1],[5,5,-4,-3,5,5,-9,3,9],[5,2,7,-4,1,4,-10,-9,-4],[-7,4,-1,4,-7,9,2,4,-1],[3,3,-1,-5,-8,6,-9,-1,5],[-4,-3,-9,-9,-6,4,7,3,1],[-8,5,-1,8,-3,3,-2,-8,-9],[9,5,4,-3,7,10,-9,4,-4],[6,7,10,7,8,-9,10,7,-3],[9,2,3,-3,8,-10,-4,-4,-4],[-10,8,-6,-7,3,6,-4,4,-10],[-8,1,10,-10,-8,5,9,-2,-7],[4,-7,-9,4,9,-1,-7,9,7],[-1,-8,-1,10,-10,7,-3,3,-7],[-4,-6,-1,9,6,-5,-1,-7,-5],[2,8,-8,-1,-7,10,7,-7,6],[-9,-5,6,7,-6,6,5,-7,-2],[-10,-3,-9,3,6,10,9,8,6],[3,1,10,-1,5,-9,-4,-2,-8],[-9,-9,-2,-8,8,-4,-9,-10,6],[-6,-8,-6,10,8,6,-2,-8,3],[-10,2,8,4,10,-8,7,-3,6],[2,9,7,7,-2,2,6,6,-2],[1,-4,2,-9,-7,-6,4,-1,7],[10,-1,10,8,7,-3,10,5,-6],[5,9,-8,7,2,-4,-7,-4,7],[-2,-7,10,-6,-3,6,1,5,-5],[5,-4,9,-6,2,-3,-4,-5,1],[-1,10,1,5,9,-4,-4,6,5],[-8,2,-3,-1,9,5,3,-1,2],[-1,6,7,-6,-8,-9,-10,6,-6],[-6,-3,3,8,-6,1,1,-4,-1],[6,2,-2,8,9,-3,-2,-2,-5],[-5,-2,-2,-8,4,1,-3,-5,-2],[7,8,-4,10,9,1,8,-8,6],[5,4,-7,7,1,-6,-6,5,-10],[-4,-6,-4,-8,4,7,8,5,-1],[9,2,-7,-5,3,8,8,6,6],[1,-4,-2,5,3,3,2,-2,-2],[-5,6,6,3,-6,7,9,-8,5],[6,-9,1,4,4,2,-7,-2,4],[6,1,6,-6,10,-8,3,6,-2],[5,-2,2,-4,10,-3,-3,4,3],[-4,3,-2,-8,4,8,-2,-1,-2],[10,-1,10,-7,-5,7,-8,-8,6],[3,-6,9,-2,6,9,6,4,10],[-3,6,-7,-5,-5,-10,-2,6,-10],[1,10,-5,7,-8,9,4,-6,-2],[-7,-10,10,5,2,2,-8,6,-2],[5,-4,-10,-1,-7,-9,10,5,-8],[1,-7,-7,-7,-1,3,5,5,-2],[-2,-1,2,7,-4,3,7,7,8],[-2,9,9,-9,9,-6,8,6,9],[1,-9,8,9,7,-9,10,-2,-7],[10,-9,-9,-9,-3,8,2,-7,4],[-4,-3,1,-8,5,9,-2,7,7],[6,-5,-3,-10,2,-8,7,3,3],[-3,-2,-10,2,7,3,7,2,-8],[-5,-9,-8,-7,-9,4,-2,-2,7],[5,-1,-1,8,4,10,-4,10,3],[-10,-10,1,-10,3,7,-3,-9,7],[-1,-10,5,-6,-4,-4,-4,-9,3],[10,-3,7,-3,6,-7,4,10,-4],[3,-5,6,-5,-4,-7,-4,-4,10],[-1,-4,-4,10,10,3,6,-3,4],[10,10,-4,3,-3,-9,8,3,4],[2,9,-3,-5,-8,-2,8,2,8],[-6,-7,7,2,-3,7,4,1,-3],[-6,5,-9,-6,9,-8,7,-7,4],[10,1,-1,-1,10,-8,8,5,8],[8,-4,4,-3,7,5,6,-7,9],[5,-5,-3,2,-9,-5,-3,-2,2],[-7,7,5,-5,-7,5,-10,-7,-7],[-10,-2,-4,-5,-9,-1,3,4,-4],[-3,-1,3,8,6,8,6,10,8],[-2,-2,2,-10,5,-6,-6,-10,-3],[2,-6,-7,-2,4,-8,10,5,-10],[7,-3,-7,-1,-10,-9,4,4,-10],[4,-3,-5,-1,2,-7,5,4,4],[7,-6,8,9,5,-2,6,8,-6],[-10,-8,-5,7,-6,-7,4,-8,2],[4,-8,7,-7,-7,2,-5,-10,-7],[7,6,4,-4,9,7,-9,-5,3],[8,4,-2,-9,-1,10,-6,1,-10],[5,-3,7,-6,-2,-5,2,2,9],[4,-1,-6,4,-7,2,-10,-1,-3],[-3,-7,9,-10,7,7,-4,-3,8],[7,1,-5,-1,-2,-9,5,4,-9],[-5,-6,-8,8,5,-10,-1,3,1],[5,-6,-6,-3,-9,2,2,4,2],[10,-8,1,8,-5,4,-10,7,9],[10,-2,-9,-4,6,8,4,7,-4],[9,10,2,9,-6,-7,8,5,4],[-8,8,8,1,-3,-3,-7,-9,-8],[3,-3,2,2,-5,3,4,8,5],[-7,6,-5,8,-3,8,-8,-7,-8],[10,10,-10,7,-6,5,10,8,-1],[-7,2,6,1,1,-6,6,10,3],[3,-3,4,-8,7,2,-10,8,9],[4,-9,-6,3,-3,2,-4,-8,1],[2,-6,-9,8,7,1,-10,-4,7],[4,-5,-6,4,1,-4,2,4,-6],[8,2,10,1,-8,10,6,7,2],[-8,3,6,2,3,10,10,-5,-3],[-6,8,-9,9,-4,-7,-2,-3,-4],[2,9,-5,7,6,8,9,-4,-7],[-7,10,-5,-8,-4,1,7,6,-1],[4,-6,9,10,7,-9,10,-3,5],[-9,-6,-1,-5,-2,-6,-3,10,3],[-3,-9,8,7,4,-10,9,-2,-4],[-5,3,1,-10,-4,-2,-10,-9,-7],[9,-6,-5,3,-6,10,8,-1,3],[-2,4,5,-2,-3,6,-9,6,-9],[2,5,-7,-9,2,-7,10,10,-5],[2,-10,8,6,4,-5,-1,6,-6],[-2,-7,-5,-1,-4,-10,6,8,-8],[-5,-6,-4,-3,-7,-2,-4,-7,9],[7,-8,-1,-2,2,-6,-6,3,-1],[2,-2,6,3,-8,-3,4,-9,1],[-1,-8,2,-3,8,-10,-3,-6,5],[-8,-2,-1,-5,6,-7,5,-9,3],[8,10,2,-6,2,9,-2,6,-7],[-2,3,-8,3,10,-6,-3,-9,-10],[-3,-7,8,4,4,7,-8,4,5],[2,5,1,-7,6,9,8,-4,-7],[-10,4,1,-5,-8,-10,3,10,6],[-9,-8,-8,3,-7,10,1,4,-3],[-7,-6,9,10,8,10,-1,-4,6],[-6,-9,-7,-8,8,-4,-9,-1,-7],[-10,2,7,1,-1,-9,-8,-5,9],[-5,-10,10,-8,-6,5,7,8,-3],[-1,5,9,8,-8,-4,5,-5,-6],[9,-8,-3,8,-10,9,-3,10,-4],[-1,-6,-5,5,4,3,5,-6,-6],[-7,8,1,1,-10,2,-9,6,10],[-8,9,7,5,-5,6,-9,6,-8],[-5,-2,9,-8,-5,-4,6,-1,5],[9,9,-1,5,-6,7,1,3,8],[-5,10,3,-6,7,3,5,-4,-4],[-9,-6,4,-1,7,8,7,4,-3],[3,-5,7,2,8,8,2,-4,4],[-2,-5,-2,6,6,9,8,-1,10],[-1,-1,8,-4,7,-7,-8,-10,9],[5,1,5,1,10,6,-9,2,-5],[-9,1,7,-1,-8,-9,10,2,5],[9,-1,-9,9,-4,-10,-3,8,-9],[3,-1,10,10,3,-3,-1,8,3],[9,-7,-5,1,-8,-10,-3,8,6],[5,-9,-7,-1,-5,10,-4,10,-9],[-8,2,9,-4,5,-8,9,-6,-4],[-1,1,1,3,-10,9,-9,2,-5],[-3,5,1,10,9,-8,-9,7,4],[3,7,4,5,-3,5,9,-8,-8],[8,-9,-4,-1,8,4,7,-1,3],[10,-1,6,-4,-3,-9,-1,9,-5],[7,-7,-3,-6,10,-7,-5,10,4],[1,1,8,5,7,9,8,-8,-10],[-5,5,8,-8,-1,-8,-4,-2,-2],[-3,10,-2,3,-7,-6,6,-5,-7],[-3,5,-3,10,9,2,-2,10,-6],[3,4,-4,6,10,-1,4,3,-9],[-10,6,10,-3,-3,-4,-5,2,-6],[-8,4,-2,8,-10,-5,9,-7,7],[3,10,2,8,-1,-7,-5,-7,-4],[6,7,2,5,9,6,-9,-5,6],[-3,5,3,10,6,8,8,-1,-10],[-9,6,-8,4,-1,6,-6,-2,-2],[-2,4,10,9,6,5,7,-2,3],[-3,-7,6,4,2,-3,-8,7,-5],[3,-6,-8,-6,6,5,-10,-8,7],[-10,-8,-4,7,7,5,2,8,9],[-1,-10,-5,-8,-7,1,10,2,2],[-8,9,2,7,-2,-1,4,5,9],[-1,4,3,2,7,-9,2,-9,-3],[3,-6,-9,-5,9,7,8,6,7],[-9,1,5,-4,-9,7,5,-6,-6],[-8,-5,9,-6,1,-10,1,7,5],[4,-8,4,9,-5,10,7,2,-6],[6,-9,4,-5,-1,7,-4,-7,5],[8,-3,-6,-4,-1,-7,-7,-9,-1],[-8,-7,9,-4,6,7,-7,5,8],[2,-6,-10,2,-9,-6,5,7,10],[10,10,9,7,-2,5,6,4,2],[7,3,-8,-6,-10,7,-8,-8,-2],[8,5,2,2,7,1,1,-7,6],[3,8,-5,-7,-3,5,-4,-5,-3],[-8,6,-10,-9,7,-9,-9,6,-8],[-4,6,-4,3,4,-6,6,9,-1],[10,-3,-6,-1,5,-4,-8,1,-6],[-5,-10,8,3,2,-9,-4,-3,-6],[-1,3,2,-10,6,4,-6,-4,7],[4,7,3,-9,4,6,-10,-9,-3],[-10,3,6,-9,-6,9,-4,-5,-9],[8,-7,-9,-2,-10,-9,4,-7,7],[-2,-4,-9,4,-5,6,-7,-1,5],[-7,-6,10,1,-5,10,-2,8,3],[-10,-1,-7,-9,1,9,10,5,-5],[1,10,6,10,2,-5,-5,5,-10],[-5,7,8,2,-3,4,-3,-4,3],[-2,-8,-10,1,-8,3,9,8,4],[1,6,2,-2,6,-7,-7,-1,5],[-10,7,3,9,-10,7,4,1,-1],[-1,9,2,6,6,6,9,8,-7],[9,-4,-4,-4,-8,-10,9,6,9],[-5,7,4,-5,-3,-10,5,-6,-8],[-1,-9,-9,-9,-10,-8,1,6,7],[3,-3,-6,-7,-10,-1,3,3,10],[-1,-8,-2,-10,10,-2,5,10,2],[-1,-8,-1,-3,10,6,-6,8,6],[2,4,-1,10,4,6,-5,-4,-1],[-1,-9,8,4,-10,10,4,-1,4],[7,-10,4,-6,4,-4,-4,7,10],[7,-9,-4,-1,9,-7,6,8,4],[1,-3,-9,-7,-3,-4,-10,-5,-8],[-6,-7,2,1,-9,-1,1,4,-4],[10,-4,8,4,-9,-4,9,-5,-8],[-2,3,6,-8,-6,2,3,-5,-4],[5,8,-8,2,-6,-4,3,3,-9],[2,7,-8,-1,-10,-10,-7,4,-10],[10,8,8,-10,9,-1,-4,6,2],[-10,-6,1,-5,-10,6,1,-1,-3],[2,4,-9,-10,7,-4,-1,-5,-5],[5,-5,-8,7,8,-10,-9,-4,-2],[7,6,9,4,-4,-8,-3,10,-8],[-10,8,4,-9,-10,5,6,3,5],[-3,1,8,-8,-2,1,-5,-8,-1],[2,-3,-2,4,2,1,-1,-8,4],[2,9,8,-8,2,-9,6,2,-4],[2,2,7,-1,10,9,-5,5,8],[3,6,2,8,-7,-9,-5,-8,5],[2,4,-5,-7,-7,-4,4,1,-3],[-7,10,1,4,-2,-3,-10,5,9],[8,-2,-8,9,6,-4,-2,-1,-3],[-6,10,-1,-5,10,-6,1,6,-10],[10,6,1,4,-3,8,9,4,1],[2,6,-9,-10,-6,-4,1,-6,-9],[-1,10,9,-9,-3,-6,8,-4,10],[9,-4,8,-1,-1,8,-6,6,-2],[-8,-3,-5,7,7,-10,-7,-8,-3],[-8,-7,-3,-2,5,-7,-10,9,-5],[-4,-8,8,-9,6,-5,-6,-3,-3],[-10,-5,2,2,-6,7,7,-8,2],[2,8,-1,-7,7,9,-6,4,6],[5,9,-10,5,-8,2,-6,1,4],[-8,-10,3,-4,10,2,7,3,9],[2,1,-6,2,-1,7,-7,-8,-1],[-6,-2,4,-2,3,6,-1,7,-10],[6,6,-7,5,-9,10,-4,4,5],[-1,-10,-2,-8,7,-6,-10,-1,2],[-1,-3,-7,-2,-1,10,6,-3,-6],[1,10,1,4,-10,8,-4,-6,1],[10,-8,-10,9,10,10,-8,1,-10],[-4,4,1,6,2,2,9,7,-7],[8,10,-7,-5,5,3,-8,10,-2],[5,8,-4,-9,6,-2,2,8,-7],[4,8,-8,5,-9,-10,-7,1,-2],[-10,9,8,9,-1,-4,2,10,7],[10,-6,6,1,4,-3,-8,9,10],[-9,7,-8,10,-9,9,-8,8,9],[3,1,4,4,-6,-9,10,7,-8],[8,-4,-8,-3,-5,2,6,6,3],[-1,9,-9,6,-6,5,-10,4,10],[-1,8,-3,-10,8,-6,5,9,7],[-4,-7,7,-6,5,-3,2,9,9],[-2,2,-4,-4,-6,-3,-1,5,7],[10,-1,3,-3,7,7,-3,-5,-3],[-5,-8,-2,-3,9,-10,2,-2,-8],[-6,-2,-2,-10,-1,2,-6,1,-8],[-8,-5,-3,-5,-9,-7,-2,10,7],[-6,-7,-4,1,5,-5,-4,-6,-9],[-7,3,1,-5,-4,-8,4,-7,-1],[1,-10,-5,-9,-9,-9,3,3,4],[-7,-7,-3,-1,-1,2,-9,5,9],[-6,8,-5,-4,-2,4,8,-6,-2],[2,-8,2,-4,-2,2,-6,10,-6],[10,1,6,10,9,-9,-7,-4,3],[-4,1,-7,-5,-3,-6,10,-10,9],[-8,-10,-9,10,1,8,4,-2,-5],[-7,-1,-7,-1,4,-8,7,-6,-5],[-5,8,10,9,-9,8,9,6,8],[-6,8,2,7,-4,-6,7,-5,-9],[-4,-1,-9,-8,-6,8,-8,7,-6],[-4,10,-7,8,-10,-2,1,7,-8],[-3,-5,-1,-5,9,6,2,-10,9],[-9,-3,1,-9,-1,6,-3,8,-10],[-4,9,-8,9,-7,2,-8,5,3],[-9,10,-9,3,-5,-3,-1,9,-10],[-7,9,-10,1,4,-3,4,9,4],[-10,9,10,-10,9,-3,8,-8,5],[8,7,-4,8,2,1,5,-5,-7],[-6,-5,8,-4,9,5,-1,10,4],[-10,-1,2,-10,-1,1,9,-7,-4],[2,5,-1,5,-3,2,10,-2,4],[-1,8,9,-4,-9,-3,-7,-1,6],[3,4,8,-3,-7,9,10,-8,-6],[10,-5,10,-1,5,-9,4,2,-8],[-5,9,8,5,-10,8,10,-3,-4],[5,7,-7,-10,-8,2,-5,9,-1],[3,-6,-7,-6,-2,-1,1,-2,-7],[7,-2,2,-5,3,2,-4,7,8],[6,-2,5,5,-1,-6,-7,-6,2],[-7,6,10,1,2,3,4,6,-8],[-9,-8,-1,1,-7,-1,6,5,-5],[9,-8,5,-5,-3,-5,1,-5,8],[-3,-7,5,-1,-5,10,-1,7,-4],[-5,1,7,10,-4,8,2,-9,2],[-9,3,-9,-6,-4,4,-5,-6,-8],[4,2,4,10,-9,-6,-10,-6,-7],[-8,7,-5,-1,-1,-1,-9,-6,3],[-10,7,1,-2,6,-6,5,7,-9],[5,7,6,-5,-2,-5,-3,9,6],[-3,3,-6,-4,4,-3,8,-2,5],[10,2,-3,9,3,7,-8,-8,2],[9,-7,9,-5,-9,1,-4,4,-7],[4,-4,-3,-8,1,-1,2,-9,4],[-10,-7,5,-10,3,4,10,5,7],[-3,9,3,-9,2,5,-7,7,3],[-6,-1,-5,-8,-7,9,10,-10,-7],[1,-1,3,-2,-2,-6,1,6,-10],[8,-7,10,-10,-7,-1,7,-10,8],[-6,-6,7,1,-2,1,1,-10,6],[-4,10,1,8,7,6,-5,-6,-9],[3,-1,1,6,1,10,-8,6,-8],[1,-4,-5,-4,1,1,2,-3,8],[-7,4,2,7,-8,10,-9,1,-1],[-4,-9,4,-6,-4,1,1,-8,-8],[-10,-2,10,-6,3,4,6,-9,-10],[6,1,-5,2,2,2,2,-5,-2],[-6,-5,8,5,5,2,8,3,8],[2,5,-9,6,-3,-6,7,5,-3],[1,-8,1,-4,-8,8,7,5,6],[1,5,-2,-8,3,10,8,-3,6],[6,10,-6,-1,10,5,10,-5,-9],[-8,-5,2,-6,-5,-5,-2,2,9],[2,-1,6,6,3,10,8,10,-8],[9,1,4,4,10,-8,3,9,-2],[-3,10,10,9,10,3,4,-4,5],[-2,6,4,3,5,5,-8,6,4],[9,-5,-7,-9,-2,5,-2,6,-2],[-3,-10,-8,6,1,5,-7,1,3],[4,-8,-6,-2,3,-8,8,2,10],[3,6,-7,1,5,-9,3,-2,-8],[5,9,-7,5,-8,5,8,3,6],[-5,5,-3,10,-6,7,3,5,2],[-6,-1,-5,-4,6,9,7,-9,5],[5,-5,10,-8,-6,4,6,6,-6],[-4,5,8,-2,-7,-5,2,-2,4],[1,-4,4,-4,9,8,4,-8,1],[-3,10,1,-6,7,2,-9,-5,7],[-2,2,4,9,-1,6,-2,3,1],[-7,-9,-3,10,-1,5,-6,2,10],[-7,1,-7,-10,-8,-3,6,-5,8],[5,2,-3,-5,-5,7,2,-6,2],[2,4,-2,8,-9,-5,3,-5,8],[-3,4,-2,7,5,-9,-9,-8,10],[2,-1,10,-7,8,1,7,8,4],[-4,-6,-6,-9,-3,-10,8,10,2],[-7,-7,9,10,-2,1,10,8,-6],[10,-1,-2,-7,-10,2,-9,9,4],[3,-7,-4,-4,-4,2,-9,7,3],[-9,-2,9,1,4,5,-9,4,5],[4,4,-4,-8,-7,2,-6,2,10],[-3,1,-10,-5,-7,6,-9,-3,-8],[9,9,3,-10,10,7,3,-10,7],[-1,2,-3,9,-1,-7,9,-7,4],[8,10,-5,-10,9,5,10,8,5],[10,-5,8,10,-10,6,8,9,3],[-9,6,-1,-3,8,-4,-5,9,-5],[-4,4,3,-9,3,-3,1,7,7],[8,-2,-1,1,1,6,5,-1,3],[9,7,9,8,1,7,5,5,-4],[-4,-4,5,10,-1,10,-7,5,1],[-5,4,-6,3,6,9,-6,-5,7],[-10,1,-10,-5,-10,-4,-4,9,6],[-7,-7,6,-5,2,-3,-1,7,-6],[2,5,-2,2,9,-2,-7,3,3],[3,-4,-9,3,1,1,9,9,-3],[5,4,9,1,4,1,3,-7,-8],[-3,-6,4,-4,-1,9,1,-1,9],[1,-5,2,-4,1,-2,-10,1,1],[-3,8,-5,10,-10,1,3,9,-6],[-4,-6,4,4,-4,7,-10,-2,8],[5,5,1,7,7,1,-7,-6,10],[4,1,10,-5,2,-1,5,8,-5],[6,-2,8,-6,10,1,-1,5,4],[2,8,-7,2,-8,1,-1,5,-10],[9,-1,10,-7,8,-3,-7,-2,-8],[-5,10,-3,5,6,7,5,3,-3],[8,4,-3,-8,3,-7,-8,3,4],[-9,-8,-10,-2,-1,1,-8,5,6],[-2,-8,6,-7,-8,4,-6,4,9],[-1,1,6,5,4,9,-7,6,-5],[3,-9,-4,-6,8,-8,-5,8,10],[-1,-9,4,7,-6,-9,7,6,-4],[1,-3,-1,3,-10,6,-4,-5,-4],[-8,2,-3,-8,-2,8,-5,9,5],[-8,8,1,8,-2,8,-3,6,2],[-6,-2,5,8,9,7,-7,-4,5],[-2,-1,-5,10,-5,3,6,10,-10],[7,4,-3,-2,5,7,9,2,-4],[9,7,10,3,-1,-7,-9,-9,2],[5,-4,8,-10,-3,-9,3,2,-3],[-2,-2,1,-4,-4,5,-4,-8,1],[-10,-4,-7,-9,-10,10,5,2,-5],[-5,-5,-3,-2,1,5,-5,6,7],[4,-2,9,10,4,-9,4,1,2],[-2,-8,6,6,8,3,-3,-3,1],[-9,-6,-2,-5,1,-8,7,-9,2],[10,-9,9,-4,-10,9,1,-4,-2],[-3,5,-10,-7,2,4,5,3,2],[7,4,5,3,-1,2,-5,10,-9],[4,9,-3,-1,9,-4,6,9,1],[5,-1,-10,2,9,5,4,3,-7],[-10,-7,-2,2,-2,-10,-8,-6,-3],[-3,2,-7,-10,-8,8,-3,4,9],[-1,-4,5,-8,8,1,2,6,-8],[5,-8,4,8,4,7,8,6,3],[-7,-2,8,-8,-1,-6,-9,-10,-4],[3,-10,-4,2,-7,5,10,2,8],[-9,-10,-1,1,7,-9,4,3,-2],[-4,-8,-5,-10,4,8,10,8,-8],[-8,1,10,6,-5,-1,7,-3,4],[-7,-2,-6,3,-8,8,10,-6,-1],[4,-2,8,7,-9,-2,6,-9,2],[-1,-1,-6,4,3,10,8,-1,4],[-4,-7,-9,7,-8,-6,-2,-7,-5],[-2,-2,10,-10,5,-9,-3,8,-7],[8,-4,10,9,8,-5,-1,-3,1],[-5,4,-2,-1,-7,4,-7,9,1],[3,1,5,6,2,-1,7,-4,9],[5,1,-8,7,7,1,5,-7,-7],[2,-10,-5,7,-10,4,-7,7,10],[-4,5,4,1,-9,-8,3,-2,-6],[6,10,4,-3,-2,10,-10,-2,6],[-8,-5,-5,5,-5,-3,-5,-4,-4],[8,1,10,3,-6,4,1,10,2],[1,3,4,6,-4,-4,-1,8,4],[3,-9,-4,-2,-8,3,8,-5,9],[-9,-9,-5,1,-7,8,-8,-9,-2],[1,-8,-6,9,2,-5,5,5,-6],[9,6,8,-7,7,-5,-7,-2,-7],[5,-2,-2,-7,10,-3,2,-4,9]], dtype = "int32")#candidate|8088|(1575, 9)|const|int32
bop_8089 = relay.left_shift(call_8069.astype('int64'), const_8088.astype('int64')) # shape=(1575, 9)
bop_8092 = relay.left_shift(call_8070.astype('int64'), const_8088.astype('int64')) # shape=(1575, 9)
output = relay.Tuple([call_8067,call_8079,bop_8089,])
output2 = relay.Tuple([call_8068,call_8080,bop_8092,])
func_8093 = relay.Function([], output)
mod['func_8093'] = func_8093
mod = relay.transform.InferType()(mod)
output = func_8093()
func_8094 = relay.Function([], output)
mutated_mod['func_8094'] = func_8094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7253_call = mod.get_global_var('func_7253')
func_7254_call = mutated_mod.get_global_var('func_7254')
call_8115 = relay.TupleGetItem(func_7253_call(), 0)
call_8116 = relay.TupleGetItem(func_7254_call(), 0)
func_2664_call = mod.get_global_var('func_2664')
func_2666_call = mutated_mod.get_global_var('func_2666')
var_8125 = relay.var("var_8125", dtype = "float64", shape = (392,))#candidate|8125|(392,)|var|float64
call_8124 = relay.TupleGetItem(func_2664_call(relay.reshape(var_8125.astype('float64'), [14, 7, 4])), 0)
call_8126 = relay.TupleGetItem(func_2666_call(relay.reshape(var_8125.astype('float64'), [14, 7, 4])), 0)
output = relay.Tuple([call_8115,call_8124,var_8125,])
output2 = relay.Tuple([call_8116,call_8126,var_8125,])
func_8147 = relay.Function([var_8125,], output)
mod['func_8147'] = func_8147
mod = relay.transform.InferType()(mod)
mutated_mod['func_8147'] = func_8147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8148 = relay.var("var_8148", dtype = "float64", shape = (392,))#candidate|8148|(392,)|var|float64
func_8147_call = mutated_mod.get_global_var('func_8147')
call_8149 = func_8147_call(var_8148)
output = call_8149
func_8150 = relay.Function([var_8148], output)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6803_call = mod.get_global_var('func_6803')
func_6805_call = mutated_mod.get_global_var('func_6805')
call_8161 = func_6803_call()
call_8162 = func_6803_call()
var_8188 = relay.var("var_8188", dtype = "bool", shape = (2, 6, 9))#candidate|8188|(2, 6, 9)|var|bool
bop_8189 = relay.logical_or(call_8161.astype('bool'), relay.reshape(var_8188.astype('bool'), relay.shape_of(call_8161))) # shape=(2, 6, 9)
bop_8192 = relay.logical_or(call_8162.astype('bool'), relay.reshape(var_8188.astype('bool'), relay.shape_of(call_8162))) # shape=(2, 6, 9)
func_6803_call = mod.get_global_var('func_6803')
func_6805_call = mutated_mod.get_global_var('func_6805')
call_8222 = func_6803_call()
call_8223 = func_6803_call()
func_1277_call = mod.get_global_var('func_1277')
func_1280_call = mutated_mod.get_global_var('func_1280')
const_8230 = relay.const([8.568566,6.128096,-2.101936,8.952963,-0.930734,4.938718,-3.443527,-2.226523,-2.507863,-7.671320,1.792080,3.608572,7.047880,-5.648815,9.330061,-6.654459,2.443822,5.777071,-6.562970,4.338510,0.388206,2.455505,-1.374794,-9.963542,-8.541906,-9.965697,3.604667,-2.066870,1.031808,-5.822292,-3.963171,9.856401,-4.552325,1.117762,-7.195935,-7.520072,6.430060,2.116630,9.094608,1.219005,-7.532626,0.824465,3.026659,-4.586796,2.543252,3.732528,-2.751372,6.940340,7.778840,0.954798,-7.377805,4.690515,7.794349,2.657527,-7.858076,-8.699100,-8.486748,1.173753,-8.698741,-4.229215,-8.400123,9.924448,-5.510767,3.722345,-1.316965,1.110990,-2.612182,-8.024606,5.825120,4.052169,-8.760033,-7.932495,4.542173,4.048972,-7.400801,8.509042,5.390976,5.870194,-9.235212,-3.999668,8.259248,6.167052,-2.731409,7.709544,4.936019,-4.004426,-3.132747,-3.571428,-6.898368,4.468667,2.550942,0.325243,-5.153605,-2.344277,5.419380,6.813693,0.058730,0.058125,-8.296365,2.134437,9.525352,-7.078244,7.217135,3.297372,-2.704625,-5.955371,-7.724394,-7.999585,-6.369959,5.082826,2.082732,-7.565830,5.641378,3.699374,-1.262945,1.432419,-1.516396,1.889558,-8.694130,1.667145,-2.890520,-4.559306,2.327495,9.940190,4.045350,9.779980,3.938875,9.419880,5.407069,-2.837384,-8.440973,1.119939,2.061070,-8.534487,-7.677904,-4.926207,9.342886,9.280571,-4.764805,-6.125115,8.051322,-1.516207,3.826219,3.463755,-4.881546,-5.609896,1.283224,5.096140,-1.414809,-0.319242,3.380401,4.214354,3.660189,0.573720,9.028925,3.664806,-1.077720,4.317028,-1.280107,-2.005753,9.179669,1.437883,8.434321,7.694032,-0.908752,-0.472652,0.768549,-4.269109,-0.183120,-8.830132,8.401619,-0.835079,9.211931,2.121061,-4.062301,3.588185,-9.339801,-1.195437,8.584901,5.415740,3.092273,-8.262026,-9.607284,7.476744,-4.741134,-4.859818,2.337500,2.667348,8.859881,-5.164710,1.136374,2.202162,-9.230197,3.344489,5.813240,7.930643,-9.407651,2.135483,-9.823047,0.489605,-9.722802,-5.095666,-1.425157,5.993265,-0.651681,5.862672,6.898417,2.666395,-7.438362,4.726177,-5.134376,-9.127901,-0.013751,9.879335,-3.513762,-9.650772,-2.077451,-6.685595,-3.197366,-9.406693,-1.866071,-6.706867,-9.044558,5.528516,-3.686308,8.140441,-3.773896,2.756051,5.384193,1.639903,0.893061,8.668481,0.637310,-7.921573,4.712685,-9.181645,-2.471478,3.430496,5.942498,9.229923], dtype = "float64")#candidate|8230|(240,)|const|float64
const_8231 = relay.const([[5.565982],[-8.648900],[9.326192],[-8.515584],[3.757245],[7.602278],[1.898526],[5.847996],[-6.170174],[5.032859],[-4.176443],[-4.364346],[-3.503187],[-3.143355],[4.037862],[8.727418],[6.440092],[-3.751739],[1.647664],[2.044663],[-4.514024],[3.834787],[2.458358],[0.122328],[-4.305800],[9.551381],[9.155524],[4.952371],[6.207700],[-5.475050],[-2.059388],[4.388552],[7.479022],[1.467782],[-7.529227],[-3.395319],[0.300737],[4.705815],[-4.364688],[-6.999568],[0.416463],[7.186595],[8.474102],[-7.720805],[4.179637],[-0.407804],[-5.687319],[7.760920],[6.305257],[7.305571],[7.193081],[-1.493737],[5.671451],[5.465327],[-7.174000],[-2.958112],[7.745523],[8.401326],[-9.494842],[4.115028],[-6.763516],[-9.797914],[-8.156472],[2.528484],[-3.448732],[4.819781],[-0.799313],[-5.735093],[8.314821],[2.895755],[3.861116],[9.381799],[1.295546],[1.670226],[8.215969],[8.435518],[-0.229459],[-9.011429],[9.100910],[-8.112815],[-6.442599],[4.313047],[0.832349],[-1.785963],[4.967171],[6.501424],[-1.566084],[4.743797],[9.391397],[1.390941],[-4.197984],[-9.109070],[-6.519408],[1.846339],[-4.729380],[5.984675],[6.249877],[1.722196],[-7.466639],[-4.092822],[4.607508],[-5.118901],[-8.980273],[-0.622070],[8.337160],[-3.063318],[-7.739922],[-4.646844],[-1.279052],[3.210522],[-2.977026],[3.103883],[7.519940],[-5.959630],[3.696780],[-5.851975],[-9.078102],[-2.680586],[-3.442239],[-2.539991],[-7.496217],[8.443515],[-2.330073],[-0.289493],[1.818300],[6.251550],[-6.309302],[-9.219948],[-0.085393],[-1.193956],[3.985596],[-5.543185],[2.653053],[-6.401684],[9.084237],[2.617222],[-8.473570],[3.745878],[8.068382],[8.850557],[1.828062],[-8.533718],[1.703012],[3.839872],[6.693772],[2.045078],[-6.619885],[0.400339],[-7.995864],[-9.365834],[-6.295274],[-9.161261],[-1.728289],[3.135673],[8.818412],[4.999236],[-9.709762],[-6.907696],[-4.935406],[5.699641],[8.734726],[-9.345032],[-0.810167],[-5.651138],[2.611843],[0.886138],[-7.333773],[-3.377618],[6.308563],[-3.034025],[-4.512077],[6.307964],[8.045004],[1.992848],[3.298867],[-0.445745],[1.855082],[0.440275],[-1.698893],[5.642321],[-7.672874],[3.539590],[-2.357253],[4.457636],[-7.183034],[-5.252978],[6.451536],[4.048672],[6.351612],[-6.081263],[1.870405],[-2.544614],[3.543533],[-8.248653],[7.924727],[-2.470594],[-0.906486],[-8.897962],[7.364657],[-7.239944],[-1.563295],[1.848795],[-6.323196],[-5.719231],[4.886007],[9.189628],[0.678280],[0.325668],[5.748026],[-4.658839],[5.387477],[-5.965249],[5.910831],[-9.343005],[-1.423387],[-5.213070],[6.063517],[9.437008],[-2.579254],[-6.937272],[-0.613384],[-5.078979],[5.629764],[5.516011],[3.522148],[1.736400],[-2.662660],[2.379315],[-5.804261],[-5.170130],[-9.702373],[4.535726],[-6.324281],[-5.092966],[6.919548],[-2.996075],[-8.779064],[6.975260],[3.422342],[-9.766468],[5.863812],[1.826854],[4.661623],[1.128927],[9.101303],[-6.446702],[-4.478924],[3.646347],[-5.134015],[9.148239],[-0.007377],[-7.832623],[-8.433286],[-4.810782],[-5.565350],[-1.160212],[-1.828794],[8.384912],[-2.016342],[-7.332671],[-8.662884],[-4.822975],[-5.504423],[-4.278468],[8.016197],[-9.913507],[0.350565],[-8.568541],[9.638863],[8.061088],[8.083548],[7.495009],[-1.000225],[6.981240],[3.583694],[-6.506326],[-0.504111],[-5.167139],[-5.039716],[-5.613881],[-2.178944],[-4.091529],[3.780160],[7.754964],[9.556310],[-1.764484],[-8.026504],[8.959154]], dtype = "float32")#candidate|8231|(288, 1)|const|float32
call_8229 = relay.TupleGetItem(func_1277_call(relay.reshape(const_8230.astype('float64'), [2, 10, 12]), relay.reshape(const_8231.astype('float32'), [288,]), ), 1)
call_8232 = relay.TupleGetItem(func_1280_call(relay.reshape(const_8230.astype('float64'), [2, 10, 12]), relay.reshape(const_8231.astype('float32'), [288,]), ), 1)
bop_8239 = relay.subtract(call_8229.astype('int64'), relay.reshape(const_8230.astype('int64'), relay.shape_of(call_8229))) # shape=(2, 10, 12)
bop_8242 = relay.subtract(call_8232.astype('int64'), relay.reshape(const_8230.astype('int64'), relay.shape_of(call_8232))) # shape=(2, 10, 12)
func_5947_call = mod.get_global_var('func_5947')
func_5950_call = mutated_mod.get_global_var('func_5950')
const_8246 = relay.const([4,1,-3,3,5,-8,4,4,-6,-1,-4,6,-1,-6,-8,2,-4,8,-5,3,8,1,-1,-3,10,10,8,-5,-8,10,2,8,4,-5,-4,7,10,-8,-4,9,-5,-9,-9,-4,3,-1,-7,-1,4,7,4,3,-3,4,2,-3,-4,-1,-5,10,-8,-5,1,-5,-3,4,-6,1,8,7,9,-8,-2,-8,4,9,8,-9,1,3,-6,-3,-3,-10,-8,-2,8,-1,-9,-1,6,4,-5,10,-7,-2,-9,-3,-7,-3,3,5,-5,4,-7,6,-7,7,3,10,10,1,4,2,-9,10,10,3,-2,-1,6,-2,8,-6,7,-1,7,8,9,7,-5,-10,-10,4,4,1,-3,-4,10,-3,6,-4,7,-6,-2,-4,8,5,1,-10,-5,4,1,8,-7,-8,5,8,6,10,-7,-8,-10,-4,2,-5,-4,2,6,9,-3,8,3,-1,10,-8,6,3,-10,-5,3,-7,9,-4,-3,2,-4,-3,-6,5,-8,4,-10,7,4,-2,4,-3,1,9,4,10,-2,4,-7,-6,3,-8,7,-3,-1,-7,4,-7,-9,9,-10,9,1,-1,-2,5,7,8,-9,4,-6,5,10,5,2,3,10,-5,-5,1,-3,3,-8,-3,-2,10,-7,7,9,-7,3,-3,3,-6,-2,8,-3,-5,-3,-1,5,-4,6,-2,-1,-6,-10,-9,-6,-1,-4,-6,-1,-10,-1,-1,2,-9,-5,3,-9,-2,5,1,-8,10,1,-1,-8,7,1,4,-1,2,-5,4,4,-4,-9,10,5,-1,7,9,2,3,-1,-9,-3,2,7,-3,-4,-10,1,-10,2,-5,3,4,-9,1,7,4,-4,-7,4,2,8,3,-1,-8,-6,2,6,-7,7,4,-1,-2,-9,-3,-1,-1,6,10,8,-10,10,4,-10,-10,-2,-8,7,5,3,8,-3,-4,-4,-6,-2,-5,-8,6,-1,-4,-3,5,6,-5,-7,4,-2,1,-3,-6,-1,7,1,9,2,-6,-10,6,-8,5,-3,-9,9,1,-5,9,10,-9,-9,-5,-4,7,-10,9,3,-7,-5,1,4,-8,-1,-9,2,3,4,6,9,-1,-6,8,6,-8,-2,7,-5,9,1,-8,-3,8,-1,7,-8,10,1,-7,-5,-10,-6,-5,1,8,1,8,-8,-3,-1,-10,1,6,8,-8,10,10,-4,-8,10,-8,-3,6,3,2,-10,-6,10,2,7,1,-10,7,7,-1,-3,-9,-7,10,6,5,-4,-6,5,2,-10,3,-3,5,8,-8,-5,9,-6,2,-1,-6,10,-9,2,10,4,3,6,9,2,-4,8,8,2,-4,1,-10,-5,-7,-10,-8,-2,6,-7,-9,6,-7,-9,-8,9,4,5,-10,-2,-7,5,1,-6,-5,-1,5,10,-2,9,9,-4,-7,-8,-9,-5,5,2,9,-2,-3,9,-10,10,-7,4,6,-1,-6,1,9,2,7,-1,-1,1,4,4,10,-8,2,4,-9,-2,-4,-10,10,-9,7,-3,3,-6,5,-2,1,-3,1,10,2,5,-8,3,9,5,1,6,-4,-10,-10,4,-2,4,-4,-3,10,-4,-3,6,-8,9,3,-3,8,5,-8,1,6,5,-4,6,-4,-2,-9,8,1,7,3,-10,7,-10,4,7,1,-2,8,-8,-10,9,9,7,5,4,5,-10,7,7,3,3,-6,10,-3,-6,9,2,-3,9,-2,5,-5,2,-4,5,-3,-3,5,2,-2,-1,-2,-10,-4,2,-2,-5,-1,-10,4,-4,6,-5,-1,-9,5,-5,-4,1,-3,-4,-9,1,4,5,-9,-6,-6,-5,9,-9,5,1,-8,7,-7,-8,10,6,-3,3,-8,6,-3,1,7,6,4,1,-2,-5,1,-5,5,6,-10,7,-9,4,-3,4,4,2,-9,-4,-3,-10,-4,-7,6,-4,-2,8,5,-1,-6,-8,7,2,5,7,-5,-4,3,8,3,-10,7,6,10,10,-4,-6,-10,-7,2,-5,-2,-10,10,-6,1,8,4,8,1,7,8,-6,-2,3,6,5,-7,-3,-2,-10,5,-1,-1,-2,-8,-10,4,5,9,-2,-6,-1,1,-7,-2,-5,4,9,-6,-2,10,1,9,2,3,-1,10,-1,-7,-3,5,10,-4,9,-8,4,-2,-3,-2,9,8,6,3,8,-6,-10,7,-10,-9,-2,-9,-6,-3,4,-6,1,-4,-2,4,8,1,9,-10,-10,10,-5,-8,2,1,-7,8,1,-6,-10,4,-8,-7,-4,8,7,8,8,4,7,7,-4,-3,8,9,8,7,-8,-3,-3,-8,10,2,-2,-10,-4,3,4,5,5,-10,-7,9,3,-10,2,9,-4,1,-9,-4,-8,1,5,3,-9,-3,4,-6,1,-5,3,-6,-5,2,-8,7,5,9,5,10,-7,-4,4,-7,-5,-9,-6,-7,9,-7,8,-4,-5,3,-5,5,7,-2,-1,-5,1,5,6,-2,-1,-4,2,-2,-1,6,9,7,-5,6,-7,-2,-4,8,1,6,9,-3,-10,-8,1,6,-7,7,-1,8,3,-6,7,6,6,-9,4,5,-6,-6,7,8,-6,-6,5,2,-3,4,4,5,-2,4,6,-1,-2,-9,2,5,-10,2,6,-5,4,-7,9,-10,-8,-10,-6,7,9,-9,5,8,8,3,6,10,-9,-10,-3,-3,7,-5,4,2,-10,-6,-6,10,-4,7,5,2,6,-4,4,-10,-3,-5,7,-2,-10,-1,3,-2,6,-9,-9,-5,-2,-6,8,-9,-8,-8,6,3,-10,-4,-6,2,-8,-3,1,-3,-10,-1,-4,-1,-9,-9,-1,-10,-7,-4,3,-6,-6,-9,10,-1,-3,-9,5,1,-9,6,5,8,10,-8,5,-5,5,-7,-10,-5,3,9,-2,-1,-3,10,2,-1,-8,-7,-2,-6,-8,2,-3,2,1,-3,4,-3,-10,-4,-10,5,1,-3,-6,-10,3,-2,-8,-4,8,1,9,8,6,-2,-6,-4,-10,-9,-7,-1,-2,-9,-9,-9,-8,8,6,-9,-9,-9,-1,-1,-2,-7,1,1,3,4,-3,-9,-3,2,-5,2,-5,9,5,-7,2,8,-2,-5,-1,6,-1,-6,-6,-4,1,-4,-6,-10,-3,-2,1,-8,-10,-9,-1,-6,-2,7,-1,8,6,10,-7,4,9,4,-7,4,-5,-8,-8,1,7,9], dtype = "int8")#candidate|8246|(1200,)|const|int8
call_8245 = relay.TupleGetItem(func_5947_call(relay.reshape(const_8246.astype('int8'), [1200,])), 0)
call_8247 = relay.TupleGetItem(func_5950_call(relay.reshape(const_8246.astype('int8'), [1200,])), 0)
func_2479_call = mod.get_global_var('func_2479')
func_2482_call = mutated_mod.get_global_var('func_2482')
const_8277 = relay.const([[-9.714043,6.769377,9.543790,-5.796256,1.938116,-9.721796,8.460425,1.750696,-2.106108,-6.507033,-9.154176,-2.415509,0.288876,-2.255591,9.981811,5.078198,-8.477050,0.612180,1.267296,-3.282169,-0.404741,9.249101,-7.067060,-4.292672,5.996220,-3.712261,4.992683,-9.601154,3.845967,-3.560586,-8.732956,-1.326084,-2.495029,0.325660,-0.047717,5.184160,-7.153380,-7.593103,8.256594,9.881737,5.631116,4.309042,-7.606418,9.974539,-5.263012,-8.804922,-8.753047,4.858550,8.767926,-9.637565,-8.500784,-3.088527,7.854245,-4.839024,4.190653,5.977028,0.821623,4.213053,-7.535879,9.713891,9.229320,5.432107,8.767170,-2.932833,8.471637,-7.625495,-2.892705,-1.781970,5.290574,6.538235,-9.439097,4.577121,7.506593,-7.909890,-1.020682,-4.912879,9.530630,5.624130,-7.228031,9.012692,-2.162396,-0.938420,7.210975,-9.681926,8.591037,8.025277,-5.740649,6.954020,-1.631750,7.858460,-7.264444,-3.491024,-9.129502,-9.894924,3.106472,-9.783318,0.777263,9.417186,-4.032101,6.823777,1.514448,9.417468,6.190430,2.220736,-9.509449,-1.090913,-6.269903,1.652392,-3.640355,1.115006,0.689643,-0.376861,-2.808666,1.776353,4.359583,-6.227595,-9.215202,1.874426,1.869266,2.040037,6.972809,-8.866040,-3.137038,-8.926987,9.901566,-5.513552,-1.053426,5.750836,-8.039840,0.475007,5.486543,-6.215287,2.351574,9.348504,-1.892429,7.774709,4.917750,6.366544,4.260330,-2.338913,-3.237062,4.328752,0.282720,5.360653,-7.784829,-8.339569,2.792046,4.841304,-2.985644,1.535173,4.330921,-1.462725,-6.020390,-3.000747,-9.016102,-1.121213,4.175850,5.931724,-0.991988,6.975463,3.477314,-8.605352,-4.726293,1.482047,-5.330382,-5.133306,7.267377,-3.943194,-6.490035,0.689846,-4.105371,9.548110,-1.419432,-8.014810,-6.494607,0.458428,3.280136,-6.201550,3.068491,-8.311619,-0.121101,7.007064,-7.940302,0.099787,-8.450342,7.228113,-7.009588,-3.066136,0.517314,1.742411,-7.180209,6.597139,-3.332163,-5.012243,4.828596,9.912712,7.578613,-0.486214,9.947479,-5.346846,-9.814420,-0.778547,8.667423,6.422482,6.588320,-5.575635,7.586995,-9.182698,9.356150,2.647540,8.700867,-5.462783,9.940844,-2.117262,-9.015317,-9.152313,-0.709499,6.001310,-2.429776,-6.044677,9.589679,6.452284,-2.916256,-2.162405,-2.347642,7.368072,-9.320499,-4.305977,-7.804720,-8.674379,-0.996726,4.770694,7.987882,-5.960621,-4.591087,-3.277182,9.030805,-3.878842,7.122300,0.803832,7.014403,0.728264,-7.979454,7.256044,7.316797,7.994090,3.856325,-9.423253,2.969458,-0.585861,-4.667492,6.166592,-2.155686,9.467713,-6.080067,-2.679838,4.463588,8.274587,7.916556,-5.118783,4.711107,-2.533309,3.504962,5.710351,8.351142,-8.456939,-8.622329,7.393637,3.212286,-7.620052,1.376851,4.619369,9.014389,-7.244117,-6.055050,1.101163,-3.398101,-2.135185,-3.798726,-6.403567,8.017378,5.719264,-6.545368,-2.418933,-0.003639,8.384963,3.705663,-4.905979,-3.311993,-7.303704,-9.735502,-3.646098,2.771202,-3.524149,-9.683251,-8.579175,5.359079,-3.074435,-5.538248,6.422706,6.807667,1.541087,-4.279304,7.657390,-3.723698,9.220050,0.116465,-2.830871,-6.910437,7.239460,6.095073,-4.998310,3.897220,1.953410,9.892638,-1.937137,1.542047,-9.697103,-1.558870,-6.586363,3.973406,0.175345,2.175945,1.393130,-9.357463,0.737409,-5.966314,-9.355921,-8.631055,-6.983740,-6.672408,-5.745336,-3.967256,7.072069,6.567801,4.140500,9.620945,3.818158,-3.466073,-7.889169,4.522597,9.122353,1.934399,-8.372083,9.420698,-2.225238,1.818907,9.672339,6.126712,-6.829596,1.336951,3.650930,-8.218793,4.256260,8.742286,5.774253,3.276541,3.854819,-9.260489,-0.434551,-8.474214,-7.766031,-2.644771,4.482592,-4.484356,-1.130422,8.003950,9.865392,-9.361737,2.432773,-3.718553,6.679517,7.999646,6.889681,-7.142105,3.909550,-3.027584,-1.023695,0.764015,-8.478867,-0.466822,6.250406,-1.643858,9.117833,-5.708200,-5.149356,-9.110225,-8.980891,-2.117548,9.758689,-7.881936,3.552134,-5.251481,8.212834,5.979689,-9.036442,-4.990465,-6.087464,-1.603944,5.550934,-7.448408,7.052742,7.177472,-4.271901,7.632609,-5.941301,-9.991694,-3.186388,-6.203149,-6.865290,2.462297,3.823961,5.636245,-3.183164,6.980054,-8.806377,-7.953077,-5.448966,9.122110,3.756795,7.134863,-1.470714,-0.351575,-0.308708,-1.899628,-5.352059,1.415845,0.935008,0.221278,-3.985065,-6.765638,-6.354407,5.886916,-6.255700,2.498220,5.835925,-6.938741,-6.353745,9.756420,8.243352,-1.585991,9.020637,6.221399,-1.725950,1.869414,1.053076,8.314238,-6.851483,5.787994,4.272621,-2.478481,3.792816,4.317388,5.310266,-2.230170,-3.197083,3.212087,8.279418,5.347303,8.864136,-0.272692,-9.190363,5.388700,-5.720852,3.888074,1.787865,2.585812,-1.002168,3.419846,0.121855,-7.253260,-5.387033,0.926365,-8.726165,2.277113,6.107813,4.177161,0.370746,-4.920645,0.390632,7.767614,-3.271688,7.380399,7.241622,-6.840043,-6.081133,8.290284,-1.510362,-2.254626,1.423386,6.996900,-5.743026,-1.311954,4.644397,6.272771,-8.114627,8.013966,8.790202,-8.156533,6.208386,6.953881,3.009690,-4.512076,-3.441523,8.695629,-2.650735,-8.964088,2.778733,-0.422920,-8.859103,3.160047,5.399717,3.012048,1.129346,3.624982,-4.480901,-8.227597,6.065767,-1.605971,-2.429803,5.180207,-9.679327,8.433704,-4.970005,-7.599817,9.603424,-8.294951,-7.667076,-1.087435,0.849495,3.330925,-0.502966,2.196382,-1.355564,8.057350,1.826048,-2.724154,8.257391,3.996242,8.621765,-8.915939,1.833814,1.218082,-8.049454,4.083493,-2.132779,9.179625,8.004721,-0.121169,-4.301627,-8.780884,2.921676,4.572188,-7.271247,-3.204473,-5.728010,-4.339718,8.357067,-0.580197,6.575921,1.194604,-1.794307,4.792979,-4.222927,9.213652,7.669236,-0.911414,-0.307843,8.838858,1.226508,7.272671,-8.212110,8.417770,6.759688,2.985872,-8.514669,-3.126906,-0.565150,-5.860709,-5.747150,7.120241,4.560088,-5.976703,-5.863225,-2.306691,7.996370,3.329163,7.162034,-3.445911,-0.207198,-2.606419,-8.213109,4.912809,-3.350799,7.251621,-5.582653,-4.144559,6.877340,0.718221,3.546613,1.637006,5.982590,-6.764133,6.665457,-2.164618,1.702811,-3.586954,8.944055,-5.989963,6.791589,-0.498665,-6.352470,0.292096,9.819161,5.280138,-9.439807,-0.345663,-9.750257,5.066712,4.864803,9.280891,-9.524820,-6.920639,-9.284222,8.102613,4.733011,9.809638,-8.036976,6.419798,3.178355,-3.234120,1.444862,-5.561196,-6.674110,8.288752,9.994684,-9.788834,8.292074,0.483146,2.308672,4.660255,5.419449,-1.335768,-0.064118,2.040224,4.470030,5.709817,-1.380713,-6.344368,2.140573,-8.726056,-2.811728,-2.956574,-4.769293,5.862760,-6.982121,-8.383919,5.262287,-6.963414,-6.119652,-7.588966,8.856883,-8.629402,4.979782,-5.575681,-2.714003,1.983970,9.218776,-1.936935,3.544925,6.820105,4.348147,6.225625,7.785784,-4.633283,-6.121798,7.788688,-5.022312,9.037224,-6.219880,9.508798,9.347550,2.087168,-0.697944,-6.464678,-6.071832,-2.591895,1.376934,-5.753450,9.332607,-8.666272,1.375470,7.599811,3.695159,4.356869,8.588926,-5.330787,0.249105,3.502435,-4.261562,-7.171149,-2.099772,-4.457940,-9.911602,-5.764003,0.147965,8.027957,-5.780108,-7.162190,-8.023895,6.720438,-5.919878,-6.956454,6.980390,-1.528536,3.497354,-4.130704,2.398615,0.105245,-3.662207,9.752732,-0.116870,-1.745318,4.255711,-1.314584,3.933060,7.445731,4.512551,4.675087,-0.409047,-8.037599,-8.832562,9.493755,4.128209,-1.686654,-2.669052,3.590932,-0.298418,5.715222,0.272205,0.058301,9.365920,-5.658604,-3.409796,5.303572,8.939328,-3.812189,4.985593,1.202766,-0.552846,-4.773880,2.446945,8.003381,1.633905,-2.091293,-7.526052,4.991194,-2.214918,9.909625,-5.857573,6.479029,-8.381975,2.633477,7.249260,1.283592,-3.919228,-9.325711,9.066249,-6.862212,-9.610682,2.424759,-5.002893,-9.065968,5.923083,-1.684915,5.310718,8.798934,3.299148,5.420013,-0.756639,9.339952,-3.895103,-4.542631,6.730659,-1.715953,0.822916,1.283525,2.938890,8.333496,2.246801,-0.443521,4.073073,-5.904429,-6.427587,-1.801335,-7.392349,-5.191292,2.103653,2.683283,0.386984]], dtype = "float64")#candidate|8277|(1, 800)|const|float64
call_8276 = relay.TupleGetItem(func_2479_call(relay.reshape(const_8277.astype('float64'), [16, 5, 10])), 0)
call_8278 = relay.TupleGetItem(func_2482_call(relay.reshape(const_8277.astype('float64'), [16, 5, 10])), 0)
func_4648_call = mod.get_global_var('func_4648')
func_4652_call = mutated_mod.get_global_var('func_4652')
var_8287 = relay.var("var_8287", dtype = "int8", shape = (13, 35))#candidate|8287|(13, 35)|var|int8
call_8286 = relay.TupleGetItem(func_4648_call(relay.reshape(var_8287.astype('int8'), [13, 5, 7]), relay.reshape(const_8231.astype('float32'), [288,]), ), 3)
call_8288 = relay.TupleGetItem(func_4652_call(relay.reshape(var_8287.astype('int8'), [13, 5, 7]), relay.reshape(const_8231.astype('float32'), [288,]), ), 3)
func_7904_call = mod.get_global_var('func_7904')
func_7908_call = mutated_mod.get_global_var('func_7908')
const_8291 = relay.const([-3.377231,7.155737,2.122615,3.064896,3.966448,-3.263926,3.950891,2.677881,-2.921854,1.072084,4.150120,4.958326,-5.550063,3.333304,-2.758683,6.835785,-0.002566,0.629888,7.006356,7.499264,-7.350015,3.860427,-9.846946,-1.354005,0.887327,1.116461,-7.155784,-7.831924,-8.362183,-1.000438,-5.702328,9.878624,-2.591948,-9.629007,5.431573,4.198427,2.972671,3.401479,7.666392,4.191731,6.718500,4.235659,1.537730,5.701044,0.193480,-0.219478,0.432846,-2.987255,-9.077619,0.766881,7.126996,2.270198,-9.873874,-3.025484,7.499037,-2.149095,-5.925097,-1.227375,2.763323,4.038345,-2.902123,-4.988112,1.142892,0.602026,-2.523345,3.591775,2.692631,-8.009140,4.921440,4.061788,-2.348701,-2.345049,2.394660,-8.493866,-6.058506,2.477452,6.707327,-0.354398,7.773664,1.488628,0.073784,2.748830,2.443180,-5.670242,-3.366737,0.268233,4.659157,4.195473,6.163896,6.394408,1.122754,-5.366587,-6.660718,9.523727,-0.966573,9.171422,7.264907,3.013518,8.202147,9.720205,8.172574,-9.960933,-2.493605,-3.905853,-5.697682,5.989418,-4.465620,-2.291404,1.281123,-9.841717,-8.754826,5.618037,-4.923895,6.909811,-4.450346,7.496563,5.650266,-7.965919,3.799177,1.028335,-1.174307,2.488399,-6.127901,4.930709,3.007100,-8.206340,-3.358692,0.272991,-4.331684,-9.457709,-2.939657,-4.145127,8.026293,4.599967,6.444341,-7.135956,-6.768127,0.394530,-1.292947,-1.434763,-6.529516,3.070378,-0.807500,-7.166923,8.032371,2.827330,-7.210752,-4.415341,-5.695480,8.463889,-0.515933,5.470143,5.075298,-5.523388,9.554531,-8.279331,3.200553,-9.251239,-3.001218,-0.166618,8.521970,5.829450,2.391970,-3.179029,-2.377618,-4.607752,0.259304,9.740231,-7.454480,-9.673255,-6.780302,9.313706,1.803220,2.639841,-8.250029,9.616213,2.389235,-6.693570,-3.296473,-8.665778,-0.437454,-8.505731,-8.472412,-9.038449,2.911189,-9.227009,4.443413,1.552671,-7.446540,4.360521,-9.031637,-8.103092,8.964675,-2.082333,7.170792,-2.309739,6.295235,-8.490690,-9.437423,-5.315779,5.029696,4.153523,8.973007,4.171313,7.646616,-3.117003,-6.208414,5.998434,6.122640,4.821839,-7.277545,-9.509178,-0.509520,7.755598,-9.874686,-6.185510,7.605785,-8.998514,-6.780792,-0.800538,-5.836250,5.703435,1.322697,4.530308,4.730936,-7.105607,-6.566366,0.407797,3.325988,-7.248928,1.015795,3.320671,-3.141141,0.032108,-6.966143,9.035502,-6.068711,0.923318,3.579405,9.659525,2.712848,0.486264,-7.043453,0.332977,6.168053,6.644004,-1.907613,7.638317,6.737359,-7.092857,-3.558355,-9.056405,-5.369386,8.330957,-2.042515,-3.724994,-5.634509,-8.492087,6.275489,-8.567460,3.899965,8.497700,-3.280178,-2.579027,6.427975,5.617218,-4.063281,-4.573600,2.032469,2.543114,-0.585100,-1.349719,2.227930,-7.775561,-4.515519,2.066566,-5.092011,5.994003,-3.400612,-1.659925,-8.098263,4.528893,-0.259879,-5.695684,7.721969,5.463674,3.521029,-6.353850,-4.141670,5.711873,9.948090,-0.769764,5.719840,6.886918,-5.282892,2.224137,0.001236,8.529868,8.611315,-0.505220,7.580008,-3.891316,8.261557,7.187191,9.653846,-1.110545,-9.404811,3.699747,-7.647200,7.353509,-4.728521,-8.217438,6.150026,5.151181,3.893589,-0.837174,-1.573033,4.333405,8.899816,2.766906,-7.544809,-0.149589,9.723440,-5.482251,-4.693372,-7.666265,2.388665,-7.455011,-2.011953,8.599426,8.543239,5.936843,-2.410332,5.884965,8.471853,8.179576,-0.950093,-4.188892,3.842820,-1.103878,-6.032778,-5.439747,3.360071,9.022323,4.072217,6.323154,-3.994738,-3.191394,9.635561,-1.012586,-6.252223,-8.653503,4.050254,-6.154425,-4.568996,-1.799537,3.823190,-3.422194,-3.949418,3.876004,-7.303660,-7.105878,5.179815,2.880925,4.870064,0.650159,9.915742,-2.391999,0.365726,2.547524,1.804311,-5.661551,9.821783,4.099157,-8.363987,6.872074,2.023086,6.602628,-6.094579,-5.750958,7.113453,5.484525,6.976938,0.491964,1.232904,-4.537655,9.113587,0.803483,5.169479,-8.705655,2.412222,-5.819548,6.724638,0.937162,4.547909,9.518241,-1.847093,8.363753,8.875513,-7.670955,-8.366230,8.084700,6.832926,-6.301400,-2.216445,1.664617,-4.957413,-2.377844,2.072362,4.519325,8.764147,5.795704,6.427877,-5.033683,-3.115989,4.549218,0.431503,-5.410920,-0.091134,-7.437530,1.566936,-4.020310,4.030108,3.230342,6.749422,1.911722,-4.421045,-0.873424,-8.471733,-8.521699,3.884380,6.496165,-5.873366,1.884151,-0.692009,8.607515,5.491942,2.272129,6.106203,-3.113529,8.220579,5.884377,-8.393654,7.821851,-2.091729,3.478752,-9.063521,6.362690,-2.933367,4.217258,-1.983078,-3.234650,-1.678911,-1.490303,6.730121,-7.832464,1.211105,-4.406822,6.058337,-1.369518,2.355837,3.464912,-0.633481,-6.839519,-6.705926,7.496246,2.500189,-7.614273,8.439444,7.525866,7.370098,3.410808,9.524651,4.068052,0.929928,3.608147,1.327537,-8.587871,5.518909,0.257450,-5.505600,-0.275558,-1.336576,-5.908589,4.009575,-9.160031,9.827466,4.021333,9.467452,-7.897251,-7.983030,1.067092,-3.269603,7.165066,4.450811,3.269024,0.490704,7.339690,7.923904,9.053961,4.481933,6.605781,1.300393,3.749565,7.025559,-6.384631,0.986074,-3.097329,4.769220,9.630474,-7.379986,9.107931,-6.559248,1.337374,-8.068161,4.729087,9.356601,-3.049042,3.100895,0.898090,9.669044,7.606588,-2.972056,3.541458,9.888606,-0.985993,3.256265,-1.609702,-2.288118,6.941501,-7.913625,-7.804910,-6.967337,5.227466,-6.282049,-1.952489,-8.453310,3.965663,6.865051,-3.977445,2.451845,-6.756568,-4.314720,7.872627,7.997761,8.063915,1.479683,4.739302,5.895744,1.672483,8.924810,5.120769,4.352708,-2.791814,0.520110,-3.409295,2.952974,-2.576067,9.559756,-5.510105,-9.675443,-1.232046,0.762896,6.245104,-7.316312,1.151993,4.789976,3.896130,6.945732,5.522439,3.498541,7.174415,2.233829,-4.783145,8.448237,7.956962,6.607944,0.518650,5.477773,9.848628,-7.453972,0.098879,0.080491,-6.095870,3.759279,-2.647237,8.664932,2.826620,1.436304,4.442277,8.861209,-4.604655,5.407654,7.686398,2.177108,-2.395737,2.871771,8.747964,3.532611,9.551152,4.149650,0.260183,-9.825768,1.022660,-7.105090,-0.050938,6.103091,-7.520988,7.563732,0.375914,-6.582207,-1.150714,-8.822912,6.869774,0.428691,-1.844261,-2.709183,-7.126384,-2.811051,-6.784088,-7.289673,-9.502947,0.537739,-4.310153,6.776235,2.105863,-0.662227,0.106231,7.054466,-6.998864,-2.662419,-3.808203,-1.068928,6.959376,-6.070005,5.001292,-4.223875,3.932287,0.887441,-7.574486,1.991768,-9.982167,0.166788,-9.955512,-1.874036,-6.743836,6.130195,5.933332,0.142988,8.187094,-2.653976,-6.889424,-2.873972,8.330653,-0.859434,-8.090789,1.103094,5.264419,8.400642,-6.802144,-1.360223,-9.933794,4.307479,6.429293,-5.300419,-6.169569,4.486254,4.384733,-0.513002,4.155575,1.642445,0.653037,1.521683,5.854822,-2.916036,-0.011850,-6.650286,8.007573,1.502468,-2.900056,3.511274,-7.135379,-6.080560,-1.188536,-7.496649,2.597704,-6.980625,4.396030,6.100893,-0.246234,-8.641309,-6.934940,5.158044,-0.652071,-5.591279,-7.291984,3.894728,-2.108310,-5.346455,3.980732,1.671505,-0.630367,9.049447,7.586023,8.411096,-0.067120,-5.337586,-8.301922,-1.601947,-9.012824,-3.678604,-1.225555,-7.170141,6.985761,-9.967763,1.711494,6.176258,7.165722,8.058468,6.592613,-3.400695,-6.570165,-5.938845,-4.517683,1.995208,5.057617,0.381425,-7.343415,-4.119710,-8.611309,-2.912721,-4.770881,-4.417796,-2.179195,-6.657580,-4.919198,0.857500,-1.866563,1.883312,3.780344,6.414503,-1.303330,-6.807873,-9.081673,-1.053201,2.413640,5.698671,-6.237374,0.971518,6.558866,-1.800962,-4.599379,4.267304,4.281680,7.628393,4.659322,5.829369,3.065317,-2.479657,9.340549,8.963146,2.780526,-8.481747,-5.476497,-9.037576,-7.136367,4.922269,8.341720,7.143310,0.516550,4.282472,1.428887,3.552893,-2.957868,4.961822,-9.847169,4.940106,5.356268,-4.748510,0.353922,8.917257,9.766513,1.795243,6.397262,-8.137687,3.640927,-0.669604,-4.240812,-1.672744,2.626315,-0.494464,-5.736050,-9.656547,-1.944100,0.028913,3.575443,1.458921,2.901790,9.913027,0.816770,6.273826,6.348416,7.525659,5.771024,2.082483,4.639083,9.054636,6.394072,0.292298,-2.799408,0.559488,-5.492492,-2.526073,7.694360,-8.326763,5.854759,-3.678645,1.701619,6.957928,2.370871,-0.743960,-8.948685,-4.577367,7.811490,0.826775,-2.813893,3.305869,8.574731,-4.841837,-5.759944,8.361405,-7.104001,-0.884433,-0.619554,7.202870,-4.135216,-0.182367,4.433417,-7.874808,6.058563,-3.191998,9.545297,-9.745322,5.639395,9.515265,0.610771,-8.180998,-3.958581,-4.272192,-0.562389,-9.323156,4.248992,6.007634,1.024133,5.881585,-2.318120,-3.314986,0.220623,-0.263777,3.688508,-3.281239,6.257567,2.088083,-8.185929,-5.600008,5.224880,9.062154,2.548646,9.903294,7.389894,6.584407,-7.279553,6.156337,-0.630890,-3.589202,4.741999,7.096968,4.907230,4.164674,-1.123057,-2.136926,-7.392883,-4.882454,7.302754,9.816340,-1.886572,-7.691756,-7.083050,-8.629206,0.868599,3.411909,-3.294326,2.420655,5.476720,7.142924,-0.355224,6.038565,2.071451,1.728553,4.892343,9.441208,2.220698,-8.731546,8.308609,5.337474,2.251479,-9.391970,3.928861,-6.483359,-5.339680,-0.071851,8.136098,5.738236,1.245965,6.569987,9.484826,-9.665814,-4.715812,0.944382,9.848038,6.968356,8.600771,-6.274540,0.170267,8.410287,-0.157248,1.584135,6.710088,5.941251,9.212334,8.063431,6.895557,9.889159,-0.946714,-2.420439,5.917594,-7.737240,5.612131,8.067617,0.043497,-2.088372,-8.114271,-7.969387,-5.736904,-9.849499,-7.575554,3.412346,2.474809,-8.314345,2.428359,-7.743432,-5.904681,9.766245,6.336216,-2.550603,1.787541,1.407459,-0.009395,5.279559,2.396480,-7.858601,5.425786,0.302593,5.252128,-9.366850,-7.399030,7.570506,6.708034,-1.395155,-9.781374,-1.094868,0.748328,3.343804,3.531167,6.075081,6.158957,-9.178761,3.715972,2.127695,2.161916,4.729411,-0.506659,-8.781876,5.939839,1.224864,-6.429304,8.360033,2.470946,7.174847,5.103337,4.945140,1.489439,8.184168,3.804058,1.453392,-2.823533,9.250329,6.337171,-8.549354,-7.318115,-3.017120,2.594656,5.214919,5.543301,3.042699,8.869031,6.946373,7.111204,8.870463,7.196720,8.607085,5.099627,9.471391,3.996929,9.126245,4.914828,-8.610952,8.058387,1.609263,-3.180469,5.136132,8.544020,-3.809787,1.946653,1.837441,-8.936235,-7.828987,5.706918,5.827000,1.393794,3.839754,-7.453914,-0.239094,7.625677,-5.413959,-8.014229,9.600872,-6.170013,-9.474108,1.707801,0.718757,3.842717,8.714620,9.178408,2.894123,8.271512,6.195806,-6.152230,6.305515,2.542891,9.477088,4.951766,6.425588,0.885992,2.123042,7.565985,-2.269913,-5.032660,-2.258941,-8.587412,-8.279946,-7.907235,-9.443526,7.508579,-1.260963,3.038471,4.110956,-9.653239,2.703313,-6.917557,-7.244477,0.215131,-8.915312,-0.407980,7.808410,-0.087819,-3.677853,7.148249,6.781044,-8.912488,2.377678,-5.803863,-7.729609,5.624739,-3.315951,-7.158823,9.267111,8.827068,4.537952,-5.308358,0.664626,-7.109203,6.587446,-7.084116,9.184499,-3.684801,-4.494716,1.419456,4.956003,-9.457860,-9.092230,-7.017106,-7.958472,-4.967894,5.785454,-8.664473,2.464736,-1.092551,-0.307882,-3.930342,0.169340,-4.649528,6.809506,-8.723173,-4.543276,-4.238638,3.090091,8.363758,-7.194966,5.786817,-5.440921,-1.135254,5.187286,4.462436,1.063686,2.807495,-7.613580,1.898439,9.943615,7.756677,-4.075068,-2.499925,-2.769054,-0.092008,1.850480,2.001227,1.517518,-7.455102,-0.866591,5.302604,5.532403,9.792832,-9.504271,3.849199,-1.884823,-7.664740,-4.938363,5.466709,-8.285241,0.567112,8.732104,2.484637,3.953213,0.656452,5.226324,8.266457,1.354341,8.128055,1.679686,2.997956,3.473851,8.555983,2.737895,-8.583548,-9.830927,9.457431,-0.701594,-6.652891,-2.666072,-7.039070,-3.200777,-1.881830,-6.568905,-8.014342,-1.306256,5.637988,5.802425,4.215559,1.855321,-7.507772,-7.022048,-4.347483,-3.705366,-0.960677,-3.227925,2.088877,-3.049870,7.628459,0.486797,8.755484,2.950737,3.614562,5.844103,3.838861,-5.331288,-2.189966,-6.592317,-4.336912,0.207102,2.941156,5.250778,6.567250,0.764198,-4.308537,-9.930470,-4.927109,-2.767427,-8.516873,7.899997,4.316261,1.752835,-1.015153,-5.314425,-4.033550,1.366358,7.263836,-8.841551,-6.317952,8.445647,-1.876213,-7.875089,-1.570466,-7.687189,-5.472145,-0.201332,-9.163581,7.528916,9.601181,1.192251,-0.757211,-7.190428,4.778375,-4.835762,-1.696873,-0.172170,5.129815,5.694834,5.103946,-8.597374,4.825797,8.908704,-7.292369,-2.716462,-2.008104,2.236745,-1.935462,0.962026,8.253129,-0.496285,5.764530,-9.455188,6.160010,-0.042940,-7.222144,2.809694,-9.665976,0.759205,0.464882,-2.517108,7.072830,-8.222618,5.072905,8.779131,6.434908,-3.938650,-8.278618,3.398853,9.485903,-6.607662,-4.581248,7.473973,0.996275,0.234727,3.493229,-1.778130,-7.868209,-3.496120,-5.914210,-1.809166,8.160397,6.822888,5.752568,-6.916307,-4.918923,-1.944914,-8.489942,2.272666,-0.143280,-6.895622,1.468183,-7.456336,-5.281649,8.934719,-3.948623,-7.941355,3.647630,0.942062,9.355955,9.725691,3.100063,-0.181006,6.744666,1.927698,2.671676,1.566063,-7.986517,-3.991407,4.139626,-4.991272,1.441591,0.184441,-7.854764,2.625977,-8.597335,1.858094,6.579078,5.804554,-6.349288,-3.593929,8.488556,-5.786749,-4.660278,-3.735814,-1.846829,4.102592,8.063467,-7.314736,-6.361111,9.953030,-9.480964,-7.489796,2.354142,2.338807,-0.040352,0.033511,6.921913,6.310913,-0.339351,1.787577,-2.029647,-9.060836,-2.565962,5.229654,-5.056992,9.781303,-0.900068,-6.224173,-2.215812,0.435246,-1.911969,-3.958676,-7.323122], dtype = "float64")#candidate|8291|(1352,)|const|float64
call_8290 = relay.TupleGetItem(func_7904_call(relay.reshape(const_8291.astype('float64'), [1352,]), relay.reshape(const_8277.astype('float64'), [1, 800]), relay.reshape(const_8246.astype('int8'), [1200,]), ), 2)
call_8292 = relay.TupleGetItem(func_7908_call(relay.reshape(const_8291.astype('float64'), [1352,]), relay.reshape(const_8277.astype('float64'), [1, 800]), relay.reshape(const_8246.astype('int8'), [1200,]), ), 2)
func_6645_call = mod.get_global_var('func_6645')
func_6646_call = mutated_mod.get_global_var('func_6646')
call_8297 = relay.TupleGetItem(func_6645_call(), 0)
call_8298 = relay.TupleGetItem(func_6646_call(), 0)
output = relay.Tuple([bop_8189,call_8222,const_8231,bop_8239,call_8245,const_8246,call_8276,const_8277,call_8286,var_8287,call_8290,const_8291,call_8297,])
output2 = relay.Tuple([bop_8192,call_8223,const_8231,bop_8242,call_8247,const_8246,call_8278,const_8277,call_8288,var_8287,call_8292,const_8291,call_8298,])
func_8300 = relay.Function([var_8188,var_8287,], output)
mod['func_8300'] = func_8300
mod = relay.transform.InferType()(mod)
mutated_mod['func_8300'] = func_8300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8300_call = mutated_mod.get_global_var('func_8300')
var_8302 = relay.var("var_8302", dtype = "bool", shape = (2, 6, 9))#candidate|8302|(2, 6, 9)|var|bool
var_8303 = relay.var("var_8303", dtype = "int8", shape = (13, 35))#candidate|8303|(13, 35)|var|int8
call_8301 = func_8300_call(var_8302,var_8303,)
output = call_8301
func_8304 = relay.Function([var_8302,var_8303,], output)
mutated_mod['func_8304'] = func_8304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7689_call = mod.get_global_var('func_7689')
func_7690_call = mutated_mod.get_global_var('func_7690')
call_8365 = func_7689_call()
call_8366 = func_7689_call()
output = relay.Tuple([call_8365,])
output2 = relay.Tuple([call_8366,])
func_8374 = relay.Function([], output)
mod['func_8374'] = func_8374
mod = relay.transform.InferType()(mod)
output = func_8374()
func_8375 = relay.Function([], output)
mutated_mod['func_8375'] = func_8375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7491_call = mod.get_global_var('func_7491')
func_7493_call = mutated_mod.get_global_var('func_7493')
call_8384 = relay.TupleGetItem(func_7491_call(), 0)
call_8385 = relay.TupleGetItem(func_7493_call(), 0)
const_8389 = relay.const([[-1,9],[2,-1],[5,-3],[8,8],[-8,7],[10,-3],[10,-3],[-8,-4],[-10,5],[4,2],[7,-2],[3,-8],[10,4],[-3,-4],[-3,-5],[4,9],[2,-3],[9,8],[3,2],[-9,-8],[-8,-9],[-1,6],[-2,6],[10,-7],[9,-9],[-7,4],[-6,-7],[9,-3],[10,-7],[-7,-5],[-2,4],[-6,4],[-10,2],[1,-9],[-4,-1],[-4,9],[-10,-4],[-7,-5],[-2,1],[-9,1],[-10,-9],[1,-10],[-8,10],[-7,7],[3,-6],[2,1],[10,2],[-7,-1],[6,-9],[-1,3],[-10,-3],[-10,-6],[-4,3],[-4,2],[6,-5],[4,3],[-7,-8],[9,-8],[-4,8],[9,-7],[4,1],[-6,-2],[-4,9],[-3,2],[3,6],[1,3],[-3,9],[4,-9],[8,6],[10,8],[5,5],[-8,-5],[7,4],[-5,3],[-9,4],[-8,2],[10,10],[8,-7],[3,-10],[-9,3],[8,3],[-6,5],[-9,-9],[-1,-5],[-2,4],[-10,2],[3,6],[1,-7],[7,-4],[8,-8],[-10,6],[-1,4],[-5,-3],[9,10],[-1,5],[4,-1],[-4,3],[4,-1],[-10,6],[9,5],[10,8],[-7,-3],[-3,-10],[-10,9],[6,6],[-3,6],[5,5],[4,5],[-1,-3],[-3,7],[-5,-4],[-8,1],[-3,5],[5,9],[5,-3],[5,-1],[4,5],[10,-3],[10,2],[-8,-3],[-3,9],[2,-9],[2,-4],[-1,-5],[10,-10],[5,7],[-1,-5],[-3,2],[-1,-3],[8,9],[-3,9],[1,9],[-8,-2],[-4,-10],[10,-4],[8,-1],[4,1],[6,-2],[-5,5],[8,5],[-6,-1],[-10,5],[-8,4],[-2,2],[-9,-8],[5,5],[4,5],[-5,8],[-9,-2],[-9,8],[-6,1],[5,4],[8,-10],[5,-10],[5,-8],[6,-4],[6,6],[4,1],[6,8],[7,7],[5,8],[-3,8],[4,10],[4,8],[1,5],[10,5],[-10,-9],[-4,-4],[-4,-10],[1,-4],[-4,8],[8,9],[-2,7],[2,7],[-5,-1],[-5,-2],[7,7],[-10,4],[5,3],[8,5],[8,-9],[3,4],[-4,-1],[-2,-9],[4,7],[-7,7],[3,-9],[4,8],[-7,-2],[-6,-2],[-3,-1],[-5,4],[-6,-3],[-3,9],[2,4],[4,-10],[10,-3],[10,7],[8,8],[8,-1],[2,1],[4,-1],[8,4],[9,2],[8,8],[-1,-3],[2,-2],[-3,9],[7,-1],[8,1],[7,-7],[-1,-6],[8,-9],[8,8],[1,-4],[-3,10],[-1,-4],[2,6],[-1,6],[3,1],[7,-2],[1,-6],[-2,-7],[-3,6],[9,-2],[5,2],[2,6],[-3,9],[-8,-4],[-1,-1],[3,7],[-8,-10],[4,10],[2,3],[-2,-9],[9,-3],[-9,6],[-9,2],[-9,-6],[3,-2],[9,-6],[3,-5],[2,10],[-4,-6],[1,-2],[1,10],[4,-4],[3,-5],[9,-3],[3,-9],[-4,4],[-3,-10],[4,-7],[-5,-6],[-5,5],[8,2],[3,2],[-5,-1],[-4,-4],[7,3],[5,10],[-7,8],[-7,-1],[5,4],[1,4],[-9,-5],[-9,-1],[-5,2],[4,-10],[6,-6],[5,8],[3,9],[-10,-1],[7,-3],[5,5],[-8,-9],[-8,-7],[1,7],[-3,5],[9,-1],[7,9],[6,-2],[-5,2],[-3,10],[-4,-6],[-2,-8],[-10,-10],[-8,-9],[3,-1],[-9,3],[-10,-9],[-7,-2],[8,3],[-1,-5],[-7,1],[8,-2],[-7,1],[6,1],[-8,-8],[-1,-4],[-10,-1],[2,-5],[2,4],[-5,2],[-1,-7],[-8,4],[-1,1],[-7,-5],[5,-2],[-1,-4],[3,5],[-6,10],[-2,8],[-7,8],[-7,4],[-5,4],[2,-5],[-3,7],[8,-3],[-1,-4],[10,-4],[6,-7],[-10,-8],[-9,-3],[10,-3],[8,8],[4,-2],[4,7],[-8,3],[5,-7],[-2,-10],[-9,1],[2,4],[-5,-5],[4,3],[3,-4],[-5,7],[10,2],[10,2],[-4,3],[-8,-7],[-9,-4],[-2,-3],[-9,8],[-7,-3],[-8,10],[7,-1],[6,9],[9,8],[10,3],[1,7],[-4,-5],[9,-9],[-2,-8],[2,10],[-3,1],[-6,-2],[-3,6],[-10,3],[7,6],[-5,-4],[-3,-4],[4,-2],[-4,1],[-3,4],[-9,-9],[3,-4],[9,8],[-6,-1],[-7,-5],[-10,7],[1,3],[2,-10],[-10,-9],[-1,5],[6,4],[-8,-2],[-1,-7],[5,4],[-4,10],[6,7],[8,-1],[1,-1],[-1,-9],[-1,5],[10,-2],[6,1],[-4,-5],[10,8],[-8,-7],[9,7],[2,-1],[9,-4],[10,3],[1,-7],[4,7],[4,2],[-6,-4],[-6,5],[9,10],[5,-8],[-9,2],[-5,-4],[3,-3],[-7,-2],[3,-8],[-6,-6],[10,-2],[1,10],[1,9],[-3,6],[-4,-4],[3,2],[3,-4],[2,4],[7,6],[8,-7],[8,-8],[9,-8],[5,2],[9,6],[5,-10],[2,-8],[2,9],[10,2],[2,-10],[5,3],[-9,10],[2,-9],[-9,-3],[-3,-2],[-7,-6],[6,4],[9,10],[1,6],[10,-7],[3,1],[-4,-3],[-7,1],[-3,-10],[6,-7],[-7,1],[-10,-9],[2,-7],[3,6],[-2,2],[3,5],[2,-5],[1,-3],[10,-8],[10,5],[3,-4],[-7,4],[9,-1],[1,10],[-1,-2],[-8,-1],[-1,-1],[6,1],[-5,8],[7,-1],[9,-1],[-8,-4],[6,9],[2,-2],[-9,-2],[-8,-4],[7,-7],[3,-3],[2,3],[-4,8],[4,4],[9,7],[-1,-3],[-3,2],[-9,6],[-8,4],[-2,-7],[3,-4],[3,1],[6,-10],[-10,-5],[-9,2],[-7,10],[7,5],[-9,6],[8,-9],[10,4],[9,-2],[-6,1],[-8,-3],[-1,-10],[7,10],[8,9],[9,-8],[7,6],[6,6],[-7,-7],[-10,-1],[5,1],[-9,-9],[-8,4],[6,8],[-5,-3],[2,-5],[4,5],[-4,5],[8,-3],[-9,-3],[-1,-6],[-2,-2],[9,-8],[-3,-2],[-6,-3],[1,-10],[-7,7],[5,5],[-8,3],[-7,7],[-8,-9],[-7,-2],[-5,-3],[-4,-7],[-8,-9],[4,-9],[6,2],[-6,-1],[3,7],[-10,5],[5,-6],[-3,-2],[-9,3],[4,8],[5,5],[-9,8],[-8,-4],[-6,-6],[6,-10],[4,9],[-10,7],[-6,3],[-4,-5],[-7,-7],[-7,-5],[-1,-4],[2,-8],[-3,-2],[-1,8],[-3,-1],[1,4],[-8,-3],[3,10],[1,-2],[7,1],[-7,4],[1,7],[2,5],[-3,-1],[9,8],[6,-5],[-1,9],[-7,7],[-3,-3],[-2,10],[-8,9],[-3,2],[6,5],[7,8],[9,3],[8,-1],[10,5],[4,-6],[-4,4],[7,1],[-8,-7],[8,-5],[1,-4],[-10,9],[-9,-2],[4,7],[-4,5],[-9,-7],[3,-5],[7,10],[8,8],[9,7],[-4,4],[10,-5],[-2,-8],[-7,9],[-6,2],[4,3],[4,-1],[-1,-2],[9,4],[-7,6],[9,10],[8,7],[6,7],[-9,-4]], dtype = "int8")#candidate|8389|(600, 2)|const|int8
bop_8390 = relay.logical_or(call_8384.astype('bool'), relay.reshape(const_8389.astype('bool'), relay.shape_of(call_8384))) # shape=(600, 2)
bop_8393 = relay.logical_or(call_8385.astype('bool'), relay.reshape(const_8389.astype('bool'), relay.shape_of(call_8385))) # shape=(600, 2)
func_5060_call = mod.get_global_var('func_5060')
func_5061_call = mutated_mod.get_global_var('func_5061')
call_8399 = func_5060_call()
call_8400 = func_5060_call()
func_2479_call = mod.get_global_var('func_2479')
func_2482_call = mutated_mod.get_global_var('func_2482')
const_8409 = relay.const([4.354256,-5.929118,-5.843892,-0.500999,-0.905892,-0.686516,3.160792,-5.968913,0.490748,-3.258452,-1.896336,-0.881010,0.182363,-5.175019,-6.879629,-2.291333,4.352562,-8.434694,-9.175194,-4.397912,4.099802,-2.158469,-0.423157,-3.337481,-2.310633,-5.900173,3.486683,4.788703,-4.723700,7.503165,1.593562,-7.115452,-8.086728,-6.246707,-7.748789,-7.363209,-5.732727,-8.661934,0.797595,-6.627757,-8.293527,-7.374097,8.132402,-0.364200,6.886119,-2.752374,8.556454,2.763946,2.621750,-0.232683,3.216739,-3.326935,3.914727,-6.522809,6.948719,1.566649,-4.763644,7.266966,5.898944,1.111942,3.594561,-0.126899,-1.491756,4.643349,5.574894,2.584598,-8.554645,-0.149845,4.044784,-0.887839,-1.035607,-1.110412,8.316689,-2.448559,9.991300,-2.982154,-2.932057,2.672410,-6.413169,-8.729902,-6.767563,-3.699592,1.851741,8.417250,-5.810171,3.257684,9.092484,8.844298,4.986820,0.364032,5.005946,-5.619357,-9.430367,-9.094415,-1.086235,9.971090,6.639313,0.595384,-3.493784,6.006892,-4.311522,9.578997,-9.725897,-2.075910,1.109533,-1.980574,5.545317,-7.628119,-0.441533,8.675075,4.106298,8.097064,-4.090795,-2.776071,5.797790,8.624616,-2.588227,6.761602,8.345824,3.115864,-0.786903,5.391162,-6.591689,0.334335,3.357142,0.148318,3.112938,6.654892,8.918030,0.006133,1.512073,-8.017546,6.820109,-3.421806,6.128554,5.806991,3.974604,-1.764822,-4.908570,-1.054954,-8.673486,5.426981,-9.933991,1.736927,-4.136117,4.594127,-4.497463,7.771382,4.988965,-3.128729,5.542668,-7.482007,3.362976,-0.355224,2.500680,5.374211,-8.753584,7.403257,2.342356,-2.648209,9.473888,2.052385,0.403667,-6.226691,-3.258186,-7.178501,-8.990965,-1.511310,4.390925,-0.665200,3.336889,-3.530820,-7.628971,-2.502470,-2.001949,2.275499,-1.810257,4.674475,9.289121,2.673096,1.416471,-4.366302,-8.261619,9.451343,3.711709,-7.328544,5.958305,8.287072,3.794030,7.888387,-5.144596,7.144471,0.634239,3.086488,-6.195366,-4.026521,-2.644111,-1.941683,2.411577,-1.525358,1.926153,2.655444,6.646873,-4.837042,-2.839401,-8.842364,-0.781197,-7.427451,1.900993,-1.439340,-4.774544,9.127436,2.458034,3.426086,9.967696,-1.554067,7.593007,5.301564,-0.127119,9.700963,3.233730,1.861127,3.886523,9.236253,6.091309,6.748050,-5.306645,-1.329425,-5.416617,-4.140700,9.132369,-3.791920,-3.287166,9.941079,3.732972,2.034569,6.656484,-3.355186,-0.632143,3.522917,8.170678,7.252564,5.929241,-5.269611,-8.388581,5.051129,4.505936,-6.131946,6.816559,-3.746440,-4.461362,8.077933,-2.716875,-2.769940,9.952123,3.774969,-3.180873,-4.580129,-3.020518,8.186567,4.321921,2.008329,-0.791545,-5.567177,4.911000,-8.279869,-7.870093,6.253970,5.151742,-0.668671,0.624228,-5.078704,-8.233238,3.818365,7.059742,5.101613,3.233551,7.399224,-8.357953,0.809184,-1.286736,6.219538,2.425734,5.124487,7.818976,0.170766,2.288202,-5.002982,-6.639383,0.997502,3.523025,-1.418900,3.665295,-9.819467,4.993480,4.698315,-9.184649,6.017170,-6.005167,-6.183195,-5.298997,-2.643823,6.601096,8.693798,4.922089,7.066275,-5.920245,7.209289,9.252096,0.663441,-4.756323,-8.201497,-2.096233,-1.248343,3.251225,-2.548442,0.442504,9.776407,8.501164,-6.990404,5.321137,8.929020,-8.192656,6.619624,9.419049,-0.113509,-0.977826,-7.044165,-4.482983,4.491642,1.302636,6.052191,-5.630429,-3.142341,-5.502189,-2.341149,-2.621640,6.194385,5.612294,0.138662,1.496259,-2.250436,-2.320280,-0.829996,8.259080,-2.051755,2.829860,4.299612,5.286263,-9.587643,9.934698,2.362529,-9.637346,-7.697939,-7.965421,-0.003192,3.286542,1.770389,9.715944,0.418451,7.008840,-3.592127,0.774309,-5.292868,8.932244,-4.549403,-5.147773,-6.503861,-9.404073,-5.942169,-7.051935,2.201383,0.881510,-0.093515,-0.144980,6.950994,7.837038,5.772637,-8.193981,4.926093,-3.548240,-6.958084,-4.970801,6.947130,4.541563,7.701592,4.913281,4.635493,0.702298,7.720986,0.474444,1.951971,-3.785057,-1.374746,-9.870077,-1.425344,7.161439,1.444748,-5.584501,6.745044,-7.183009,7.860051,9.024294,-7.486638,-9.345471,-2.917491,1.187506,4.769188,-0.603934,-0.802693,5.389296,7.997727,9.144883,-3.923689,-5.948869,6.020933,-4.751410,-0.639152,9.804018,-4.881726,-4.696406,-6.135844,-5.779944,-8.086665,9.174956,-4.481747,7.566915,4.071121,-2.635033,-2.453022,5.358904,-0.981450,2.922185,6.061086,9.548250,-8.468843,5.231093,7.399483,-8.323334,-8.702677,-5.514468,4.792832,6.383756,-0.778279,-4.804169,-1.226924,-9.635797,-7.570620,1.737272,4.725818,3.989930,-5.568341,-1.502372,9.095415,0.051858,-5.718362,-0.007698,-7.667445,-6.963586,2.735116,8.327173,4.829216,-2.934121,7.308862,4.323746,5.027806,6.504162,5.490116,3.994764,-7.873495,9.717256,8.287107,-5.395756,6.342130,-8.772522,-5.439654,-6.020206,-1.951839,9.449054,-1.071481,-2.810838,8.841364,5.308040,2.200529,9.756646,-0.704190,-5.220843,-0.143726,4.554920,0.982737,5.124800,3.263293,5.026345,-3.739627,-2.486184,-7.188864,-3.247888,-4.776868,-1.465551,8.105579,9.834388,-7.093964,7.862907,1.279053,-6.725356,-9.236373,-6.364972,4.085795,3.795095,-7.386725,-6.585581,-9.705530,-0.705520,5.642645,-7.434617,2.309925,-6.804019,1.129775,-1.541501,-1.139150,-6.123418,-8.905201,-2.225817,-3.643334,-5.786161,8.233512,5.130099,4.101430,-1.988063,1.641993,4.598592,5.428320,-0.518070,7.958265,5.985619,-9.321381,4.925259,-9.369468,-3.751220,0.017474,1.024576,-7.548419,3.520462,-0.729019,-7.666714,-8.291348,-5.586162,5.998996,7.102800,-1.742280,-4.324993,-5.830175,3.900086,7.460411,4.667273,-4.072123,-7.140188,-8.417609,0.118194,0.025426,-0.583552,9.124749,6.994615,2.726483,-6.376013,6.352656,-8.276441,-7.629624,-4.205733,-1.581432,-7.243957,-3.096375,9.365676,-9.100149,-9.968693,-7.158238,-4.322784,6.582570,-9.505860,-2.127108,-0.442428,7.843369,4.164614,6.788945,3.402883,1.836546,-8.932329,-8.624632,-2.464850,-0.003638,7.066951,4.661292,2.426727,7.184840,-9.924416,-1.327002,-9.972367,5.334276,4.668133,3.471457,-5.458098,-7.263948,8.782536,-5.549531,-9.442861,-6.748307,4.034254,7.738727,-2.113253,-4.603438,-9.848596,-1.298918,-7.841881,-1.392394,-5.769398,9.100587,-2.894146,4.750691,-2.061764,-5.436621,3.967759,-4.795080,-5.568092,7.572196,8.249865,4.989353,-6.436384,-9.199671,-9.254356,-9.714932,-6.476393,9.544719,4.804762,-5.196371,4.516362,-3.206183,7.312631,0.535130,-4.666050,5.238510,2.967303,8.742508,-0.263357,-1.689110,-9.445945,9.121024,-6.940605,-6.873146,4.272444,-2.900347,4.723239,0.200313,8.825433,-1.753675,2.824278,6.354170,8.524247,-9.688500,-1.266045,-1.591153,5.211759,-1.007632,-7.212839,-8.181260,8.106342,-3.340208,8.263480,-1.615385,3.557174,1.582448,-7.083171,0.556958,8.030158,6.870799,-2.162047,9.553008,9.984447,-6.527298,-0.072269,0.335134,7.317616,-8.286190,-0.570280,3.210946,4.153986,-7.972621,-1.826278,1.069369,-9.599400,2.293515,-2.338167,-3.525706,-4.850067,-1.540089,5.835121,1.642407,2.875339,-3.214051,-5.809656,1.004596,-9.109715,2.915238,2.662819,-5.661469,7.771818,3.412008,-9.201575,7.096122,-5.497667,5.845714,2.666756,-3.144632,-1.213058,-8.296896,-4.187198,3.552148,-8.614518,5.176755,9.982168,1.243304,-6.541830,0.025189,-8.485458,5.415295,-7.529629,6.719849,4.047858,-7.962129,-4.873904,-9.567115,1.726897,4.308528,-7.953676,7.188790,-7.125011,-3.693907,0.019542,-8.712232,-4.470388,-4.744684,-8.524795,0.284628,4.225019,-5.017295,-6.458495,9.035407,-6.845465,8.625916,5.584125,-5.865775,7.472593,-1.148504,-7.689514,5.057685,7.994026,8.260854,1.162565,3.122662,4.835395,-5.128910,4.917529,3.247600,-1.437120,-2.730036,5.499327,3.721399,-0.241593,-8.525389,-0.159440,9.796364,8.586962,-0.555686,1.926614,-3.495395,2.464053,2.935397,-7.446600,-4.244390,2.589074,-0.613084,5.653953,-2.424113,-0.899533,2.400662,-5.757839,-1.762162,8.472943,-9.171066,-2.850314,2.930182,8.780982,-7.005527,9.113425,-3.045456,-4.828357,-1.947811,-0.582064,5.019894,6.708558,-6.278018], dtype = "float64")#candidate|8409|(800,)|const|float64
call_8408 = relay.TupleGetItem(func_2479_call(relay.reshape(const_8409.astype('float64'), [16, 5, 10])), 0)
call_8410 = relay.TupleGetItem(func_2482_call(relay.reshape(const_8409.astype('float64'), [16, 5, 10])), 0)
uop_8432 = relay.acos(bop_8390.astype('float64')) # shape=(600, 2)
uop_8434 = relay.acos(bop_8393.astype('float64')) # shape=(600, 2)
output = relay.Tuple([call_8399,call_8408,const_8409,uop_8432,])
output2 = relay.Tuple([call_8400,call_8410,const_8409,uop_8434,])
func_8454 = relay.Function([], output)
mod['func_8454'] = func_8454
mod = relay.transform.InferType()(mod)
output = func_8454()
func_8455 = relay.Function([], output)
mutated_mod['func_8455'] = func_8455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7776_call = mod.get_global_var('func_7776')
func_7777_call = mutated_mod.get_global_var('func_7777')
call_8461 = func_7776_call()
call_8462 = func_7776_call()
output = relay.Tuple([call_8461,])
output2 = relay.Tuple([call_8462,])
func_8476 = relay.Function([], output)
mod['func_8476'] = func_8476
mod = relay.transform.InferType()(mod)
output = func_8476()
func_8477 = relay.Function([], output)
mutated_mod['func_8477'] = func_8477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6993_call = mod.get_global_var('func_6993')
func_6994_call = mutated_mod.get_global_var('func_6994')
call_8484 = func_6993_call()
call_8485 = func_6993_call()
output = relay.Tuple([call_8484,])
output2 = relay.Tuple([call_8485,])
func_8490 = relay.Function([], output)
mod['func_8490'] = func_8490
mod = relay.transform.InferType()(mod)
output = func_8490()
func_8491 = relay.Function([], output)
mutated_mod['func_8491'] = func_8491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6654_call = mod.get_global_var('func_6654')
func_6655_call = mutated_mod.get_global_var('func_6655')
call_8517 = func_6654_call()
call_8518 = func_6654_call()
func_6580_call = mod.get_global_var('func_6580')
func_6582_call = mutated_mod.get_global_var('func_6582')
call_8519 = relay.TupleGetItem(func_6580_call(), 1)
call_8520 = relay.TupleGetItem(func_6582_call(), 1)
output = relay.Tuple([call_8517,call_8519,])
output2 = relay.Tuple([call_8518,call_8520,])
func_8547 = relay.Function([], output)
mod['func_8547'] = func_8547
mod = relay.transform.InferType()(mod)
output = func_8547()
func_8548 = relay.Function([], output)
mutated_mod['func_8548'] = func_8548
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8646 = relay.var("var_8646", dtype = "float32", shape = (15, 13, 16))#candidate|8646|(15, 13, 16)|var|float32
uop_8647 = relay.cos(var_8646.astype('float32')) # shape=(15, 13, 16)
const_8655 = relay.const([[[3.247131,5.595344,-9.435859,-5.367807,-4.737647,-3.408194,0.197668,9.128748,-7.358748,-6.139689,-9.425900,-1.634150,0.359955,-0.288851,8.357027,0.175941],[-8.121752,3.326367,-5.560371,4.870249,2.916517,-3.130679,-0.256597,2.837082,7.392773,6.768134,4.838747,-5.870053,3.762675,4.928736,3.391616,-8.851067],[8.407694,-5.082762,2.488458,9.334651,3.492215,5.119777,7.592038,1.713068,5.332374,-8.818872,-9.467340,4.393129,7.271167,-4.890152,4.103877,-1.314288],[-3.242470,-7.388023,8.726297,2.782613,5.033998,-1.821381,4.663493,1.717125,-0.066583,8.285157,8.176842,8.729534,-4.592051,3.589117,-2.790515,-5.968415],[-5.728149,-0.198051,-6.272116,0.781013,-4.674583,-8.402723,3.401700,-6.519650,2.542233,-6.838025,-1.616745,-5.948398,5.582604,9.035234,9.770469,4.940979],[-1.068351,3.574934,9.904335,2.026579,0.169099,9.256851,7.277297,-7.881627,6.322442,4.656600,-7.524864,-0.176536,6.597083,4.451030,-4.852544,1.053927],[-7.209557,9.714115,0.383304,-7.467866,2.582075,8.076851,2.975538,5.746332,-0.036312,7.217911,-8.820031,-0.158749,1.349168,4.140008,-1.277457,-7.413181],[9.837449,-7.338290,-9.618647,7.512266,-8.420584,1.458184,4.938842,7.271572,1.419258,-5.693246,-0.877260,-6.400742,3.535689,9.041220,-6.707465,-0.338583],[-8.556715,-7.579227,0.368375,-9.985036,-0.811525,-9.521744,-0.735527,3.029817,-4.970322,-0.713805,-4.302559,-4.285669,-7.309025,-4.870945,0.359090,-4.026874],[2.582330,0.042105,4.416254,7.657867,6.758255,0.529855,2.252767,0.517631,-7.310001,-1.959988,-5.132962,-7.082516,8.502751,7.842189,-5.334678,-9.009035],[-4.826753,-5.507955,9.558506,0.083141,1.839821,-6.433820,1.313615,-6.794285,6.809535,9.721127,0.027562,-6.235235,-7.330723,-2.972118,-4.096912,-3.429612],[-8.348618,-5.715681,-2.981361,-8.901155,-8.079014,-7.264335,-9.301782,5.964355,-8.653708,-1.013452,2.301480,-6.308402,-1.573666,-3.488073,8.493094,-8.151106],[4.676104,6.774699,-1.592706,-4.496633,-3.394742,4.666645,2.034181,3.967094,3.703763,-1.912009,-2.896816,-8.360653,4.527158,9.128175,8.599735,-2.600153]],[[-0.158488,7.832922,3.918950,9.460441,-6.737423,-9.862108,-9.039781,6.360841,8.256258,-9.941576,-5.767369,4.549564,9.702088,-1.804565,-4.284618,0.852424],[-4.848877,5.899519,-9.461492,-5.076090,4.479821,0.987872,-6.209774,0.869567,-2.256441,5.695906,-5.488813,-8.948525,-2.906300,9.017806,2.979218,0.805914],[8.506323,3.795191,-8.096504,-5.299321,-3.453093,7.290329,3.632464,8.535127,-7.604636,-2.572555,5.258401,-6.935186,-9.762325,-5.027660,-8.635303,0.424128],[-4.335314,-1.499834,-0.011769,4.911286,-8.542100,6.017298,1.560502,9.073078,-3.063316,0.413224,-0.579601,9.530817,3.688699,-7.558229,6.299005,8.822090],[-2.166058,-8.137787,-0.517811,1.673482,-1.318054,-4.329828,1.655283,6.048386,-0.412570,0.461666,-4.384161,1.992998,-3.284521,-2.366100,0.729660,-2.888605],[4.411573,3.773682,-7.177420,-6.818247,5.062958,-2.746647,-5.155718,-9.227898,-2.478857,0.054288,-3.552983,-0.595195,-8.065948,8.748336,-8.686048,6.679218],[-0.211821,-5.141998,8.171306,-1.963921,4.925558,-5.878999,-2.307269,-4.730103,-8.909311,-8.484154,-3.606699,-8.225794,0.499658,7.378886,0.707984,0.453524],[6.777016,-4.325522,-1.216601,2.590978,1.707243,2.313286,7.185408,0.258770,3.205751,-9.890904,-9.528630,-6.658057,-8.502940,-0.963470,-4.671425,-9.591055],[4.850771,-1.896199,1.687634,6.860568,4.516193,-9.979932,5.067043,9.411443,4.901929,-4.158429,-6.073840,8.286991,-6.782559,-4.953646,7.755296,-6.018604],[1.818964,-2.196937,6.981782,4.545859,-2.312508,8.852639,6.951887,-6.042134,-0.817402,5.193196,9.722101,-8.862160,-0.161319,-6.408234,9.735192,-6.939665],[-7.835103,7.167922,-3.293852,-3.180719,-6.717599,-1.181857,-8.082954,0.970452,-7.214181,4.804150,5.544014,8.954725,-9.921008,-6.953994,8.052144,-7.848574],[7.642591,2.438227,8.802065,5.537000,5.593650,4.338467,-4.945888,-3.720187,0.580434,4.275149,8.679909,-4.671106,-5.670745,1.991191,5.279487,9.424353],[9.583992,3.361330,0.591431,0.456128,-3.358917,-1.758162,8.557443,3.959526,3.744028,8.173841,-0.276411,-5.579815,-1.640280,-4.635956,-0.710407,0.064918]],[[-4.184454,-0.026169,0.236126,-5.814370,-7.126449,-5.187634,8.261509,0.280311,-6.839998,-4.384316,-5.339261,-1.640353,-9.349485,0.769376,-6.265630,6.109570],[0.645583,-5.631365,4.033228,-5.997645,-7.703210,7.744778,8.184285,-2.811979,3.141135,-5.036950,8.982286,5.278325,4.174484,-3.384639,7.964635,-9.435964],[1.418400,5.029779,4.392032,1.917282,-0.705926,8.771224,7.218064,-6.663947,-6.404145,-3.958163,5.861753,-6.205557,-0.591661,-0.913088,-3.862315,-5.367124],[-4.287930,-4.228882,-4.705134,5.109350,-6.546389,-1.293404,-5.720914,-8.315544,5.565133,-0.169903,-9.521337,1.100279,-9.396385,-1.967208,-0.148371,-2.049372],[-0.427047,-8.532470,-5.499852,-1.906982,-4.039822,-0.410446,9.946739,-7.357291,-5.474154,5.560694,4.024208,7.484702,-2.070018,-9.168153,8.906610,8.304925],[1.786764,-0.676162,5.212716,-3.126719,4.278732,-3.544679,3.358643,8.843268,-6.949713,6.366954,6.083228,1.712757,-5.235624,-2.570498,-3.531312,-5.830694],[7.196111,-3.472865,9.262214,-7.638434,3.502761,9.170792,3.077290,-4.716809,1.208915,4.509367,2.858655,-4.841410,-1.839590,3.500698,9.005537,-7.833300],[-9.453126,8.930070,2.863692,-7.019058,7.278048,-5.228061,-9.557393,-8.457439,-1.447891,-8.710618,-5.050095,2.970590,9.673875,7.078274,-8.138364,1.597845],[-7.723818,-2.490051,-9.542802,1.412274,-5.356549,9.567872,-2.039350,-1.936083,5.388359,-4.242117,-0.111504,2.334715,-5.294819,-2.390641,-0.054249,5.079366],[-7.689996,4.218553,-1.749585,-8.048758,-2.677011,9.857239,3.160521,3.281799,-1.363415,-7.137144,8.843261,-3.882600,0.646332,2.254028,-6.154418,-9.132400],[-0.125680,-1.218849,-2.079842,-8.955422,-5.515795,-6.965581,5.620126,-5.231807,8.440857,-1.404559,-2.544935,9.844250,8.673352,-4.324360,5.391285,9.209064],[-1.253274,3.417880,-0.978842,7.421041,5.963549,9.695709,1.846731,8.120952,-4.483558,9.770511,-5.019421,-9.413400,0.094432,-3.284081,-2.306469,3.382823],[6.112469,5.202732,-1.085479,-7.803958,-7.866437,-0.117145,3.079932,0.864709,-9.911259,1.857957,6.949539,-9.673121,-0.204614,5.558581,-7.499072,9.419890]],[[0.938275,-0.272367,5.363219,-1.216716,-8.887095,6.153438,-4.767438,4.165469,6.808998,1.052711,6.138548,-1.260486,-4.598647,-3.157944,-5.186922,-8.558372],[-0.970934,1.891136,6.867229,-6.930449,-5.933821,-4.242589,-7.337553,6.102937,-6.332337,-1.773041,3.579522,7.968610,-3.681392,-1.371028,8.961499,3.129177],[3.766737,0.342779,-7.711985,-8.956718,2.754237,7.379928,2.149608,3.274869,9.415245,3.072246,-9.211408,7.357901,-9.116050,9.982010,-5.716686,5.789137],[5.182658,8.754642,-7.535487,4.390167,-2.957251,1.697552,4.371011,0.055963,-0.459812,5.936506,2.606233,-3.228160,7.672293,8.966734,-1.161694,8.296233],[4.638571,8.044956,3.211029,3.849682,1.661092,1.007645,2.836373,2.393642,4.427365,0.390504,8.527494,-0.360378,4.861038,7.949169,-3.907712,-9.097188],[9.046440,-4.986037,-0.346366,-8.976051,-9.754875,-8.728328,-9.444253,-0.020842,7.597757,-1.825682,9.292084,1.518784,-5.382274,-1.720329,4.958609,-7.806116],[-4.634260,4.210057,-6.115995,-3.811059,8.402303,-7.842692,-9.594325,8.834747,-5.552049,9.127254,-7.702610,7.713382,0.393760,-4.311247,-5.661946,2.382114],[6.187588,8.965549,-6.628555,-4.088143,-5.995024,5.316116,4.034727,-4.257178,-0.851038,7.421935,-5.438051,5.446153,-9.397439,0.778232,-8.409692,2.631337],[1.051339,1.372733,-4.567271,-3.255661,-3.642024,-6.746216,-3.272781,-1.266488,-4.020831,-9.912896,-4.982125,-0.938622,7.717847,5.816570,-2.085620,4.214086],[5.044508,7.691396,-3.686875,-5.626042,3.441857,6.506179,-9.711741,-0.775461,4.350886,4.712089,-7.709710,4.537024,9.584264,5.715220,4.330420,-5.771454],[2.153819,5.369300,9.995247,-1.995386,-6.148388,-0.644088,1.392161,7.117139,3.533253,-4.956490,-5.810531,8.187401,-9.336476,8.857958,1.474371,-7.357625],[4.848615,2.065161,-0.117121,8.281229,8.689525,3.386952,-5.631335,5.398964,1.804454,9.574641,8.560920,-3.241174,5.085510,-9.791309,3.016030,8.562961],[-0.555684,5.694537,-3.399379,8.763085,-0.106658,5.296382,9.615600,5.244270,-4.587353,-4.018421,2.483782,-5.982822,-3.823901,-7.876880,8.152372,-0.438652]],[[-1.093108,-8.453581,-8.451878,-2.438953,-2.315137,0.435831,-5.348535,1.953257,9.253925,5.685551,-2.194776,9.783606,-0.313635,-3.156746,5.192787,9.876944],[-5.189604,-5.095416,0.842620,0.866338,-2.142929,2.542335,1.273061,-0.847385,-3.457417,-1.761724,4.526275,5.859985,5.743989,7.509764,-1.561802,-2.351480],[8.943224,5.184190,5.785236,-9.811363,5.829101,-9.348371,-7.547731,3.257249,-5.529214,5.294742,9.180514,2.977238,-7.203970,7.087719,4.526633,1.763712],[-3.406226,0.091108,-5.518481,-8.529329,4.119626,-2.181409,4.349944,-7.089727,6.474608,5.283898,-0.200836,8.373489,2.217480,0.699228,-0.252297,2.583611],[1.633676,-8.065052,8.888779,3.703518,-2.494628,-2.967883,6.549188,6.999798,7.185241,2.395868,-8.058076,-1.283706,0.961000,-5.388235,6.318069,6.946681],[9.991959,-4.622904,-7.573624,1.101553,4.740612,-1.237727,3.089182,-6.961975,-0.200119,-1.111858,-9.825657,-3.865129,1.360312,-0.174146,1.616263,5.509147],[3.593841,0.555404,-1.312185,-6.639785,-1.216848,-0.072090,8.068995,-4.444776,8.305922,-3.737326,-1.868564,9.063384,1.876249,-2.011793,5.348561,9.358686],[5.435459,-2.997090,-5.118391,9.293382,8.813347,-3.536373,-3.861691,-4.930326,4.020309,-0.173411,-3.244760,1.086991,2.072522,-8.623982,-3.357678,7.029228],[-2.981471,0.388106,3.175007,9.775678,-4.505939,6.232697,8.095832,-7.555976,-4.441406,-0.581290,8.433744,-8.110322,5.674762,4.846812,8.107180,4.166801],[1.701164,-5.126353,6.753653,3.872147,1.282949,7.626692,5.720609,5.139396,-5.778308,-1.827408,-4.511334,-4.554298,2.271951,0.933011,-9.019662,-8.698094],[8.507502,-2.674126,-2.171681,-4.991270,-5.510709,-2.395903,-7.620026,6.830069,1.496169,-1.197880,3.993852,8.897317,-4.094299,2.090593,8.876751,-8.770212],[-2.409789,-3.034156,8.748466,-6.174903,-3.708082,3.073094,-9.847816,8.687675,-6.271073,9.726035,-1.974722,-7.526258,2.136574,9.630535,6.888614,6.558471],[7.074299,-7.804752,0.712146,-4.194335,-7.663343,-8.065272,6.642035,-5.836692,4.471995,0.231242,6.263747,-8.982142,4.564140,8.418977,-1.991258,-3.486638]],[[-2.900386,-5.209290,0.259249,9.570318,-1.641107,-3.218106,6.074102,1.744950,8.095759,-1.400945,-3.755750,2.439252,0.604379,-3.433477,-2.988004,6.410283],[5.407440,-7.614806,-2.594433,-5.017367,5.547346,-2.244838,-2.173252,8.651987,-9.793277,-1.407179,-0.778847,-4.141184,-1.974484,8.058253,2.852720,-8.396774],[-2.586478,1.232621,-3.235963,5.286460,2.508545,8.596908,3.055508,0.513519,-4.629601,-5.098567,3.161364,-0.407484,6.839068,-6.972714,-4.001155,-5.009604],[5.169027,-9.066951,2.118295,4.436460,9.339625,-6.730729,8.002041,3.308478,2.087204,3.530983,-0.632555,3.383190,9.305599,2.171137,-4.890458,6.462056],[3.660578,9.145073,0.377034,4.154319,6.649175,-2.892028,6.642527,1.262199,4.059090,-1.387400,-5.659233,-3.922615,1.196401,-1.551777,5.978808,-0.560546],[2.754528,7.809131,-1.738916,4.174043,1.904542,0.376976,0.640965,2.722998,0.905849,7.132335,2.919980,4.539108,6.400455,-6.463938,2.404563,2.320136],[8.913094,-3.074498,-0.803098,5.084300,7.413978,-8.039052,0.714948,0.415941,9.464346,5.297952,-3.909043,-2.069165,-6.370917,-1.649758,1.057029,-9.159642],[8.013347,-8.181815,-8.451957,3.168964,-8.314943,4.977349,4.670646,-0.607614,1.424622,-2.682626,7.711997,5.811914,4.816733,9.389254,6.484740,0.643844],[-2.130180,-2.312533,-3.420103,-0.966199,-8.659174,-0.758297,9.891625,-3.187470,-3.977666,-8.916141,7.500550,8.378966,-1.148909,0.486557,-0.699933,-4.112853],[5.667021,-4.026010,-6.741423,-0.261321,-1.777928,-4.258160,-2.531328,-3.830039,4.878784,-4.174311,-8.465581,-0.241283,-4.230062,-4.048087,-8.201577,-6.995018],[-3.349823,7.809163,5.189481,5.648990,4.250869,5.171885,-7.718144,-1.151622,2.437344,4.949998,5.629800,-4.638773,9.865845,-8.128788,1.016742,5.567519],[0.571465,-7.304851,3.867678,-5.575780,6.206624,-4.801919,2.541944,-7.302344,2.023140,-7.365225,8.909851,-7.573289,-0.421637,-3.504841,4.844084,4.780721],[4.804857,-6.312874,5.293761,0.650235,-5.736763,-2.526975,-8.702334,-4.538032,-7.468537,-8.596898,9.197289,5.005658,-6.573472,3.253856,8.773617,-5.620569]],[[-9.066456,1.936994,-1.985922,0.183831,-8.489390,-2.542815,-7.774180,-9.825581,-2.887185,-5.471502,-6.880170,9.943389,0.594980,-2.282476,0.879192,6.744328],[3.546480,8.038286,9.448103,5.854459,-8.703555,8.860364,-7.641887,-4.387092,-3.593562,2.647533,-1.952128,8.942912,3.043942,-3.273355,8.508797,9.549948],[4.456545,-7.930817,9.534997,-4.380166,0.400534,-7.402014,-8.614382,-4.158662,8.125532,6.931783,-8.513147,2.834770,-9.468344,-7.532868,-8.004461,9.292113],[-5.699077,-4.279256,9.482988,-6.038187,-2.636038,-2.681360,6.376220,-3.590227,-8.889841,-7.172374,-6.784691,6.051802,1.390805,-1.664575,4.043578,4.365691],[3.425377,0.835784,2.022163,-4.970697,-2.521502,-5.095456,6.195005,-5.598758,-7.546024,5.989175,-5.299113,3.305581,-8.625049,5.696557,1.763847,-9.598485],[7.034290,0.633866,2.882862,-7.419597,6.447169,2.496383,0.078429,-1.600376,-0.854868,5.353790,-6.054955,-4.866629,-4.597667,-1.195561,2.045730,0.009698],[-1.627832,9.096830,-5.032382,2.388204,-0.120158,-5.115442,-9.131674,8.815044,-7.450111,-2.975541,0.387399,-0.382212,-7.518703,-7.618248,7.301291,-2.389824],[-7.074097,3.617940,-4.763564,-7.850075,5.927957,-1.610103,-0.344188,-9.811782,-6.212238,1.202277,8.509469,-3.301288,0.757023,7.832142,-7.769145,-1.260510],[4.205820,5.745871,3.527013,-5.983090,-4.262317,-9.296371,-6.221359,-7.992594,2.436117,7.503810,1.792659,1.257840,-2.372394,7.574072,-3.588314,2.110367],[4.192976,5.743179,0.903344,2.213539,5.378994,-7.780018,-5.472315,-7.843722,-9.749512,-2.616907,0.005848,-7.617655,0.816980,-8.574444,-7.681950,7.930326],[-9.108356,-1.103201,0.335578,-0.663741,5.506665,-2.946098,6.266534,-2.297958,-4.826074,6.618443,-4.366767,6.466225,3.555822,8.198467,-9.698600,6.893239],[-1.358886,-3.422466,3.922395,-5.102237,7.701734,-4.698750,5.988627,-4.595347,0.767745,-3.592177,-9.378862,5.901314,6.166568,6.031309,-0.220366,3.763830],[-8.310373,-2.160261,-3.534531,-4.575475,5.930678,-4.165581,8.897864,9.545242,-1.282259,-1.400619,5.322704,-9.079066,8.752911,-5.980726,-2.333582,-3.294830]],[[4.866414,-5.631755,2.109814,4.396439,9.123346,7.646344,4.567652,2.867856,-3.769890,-4.963503,-0.886864,2.792288,-4.332055,1.882352,5.040969,9.219318],[-7.010169,-4.387450,-8.896370,-5.922436,9.239135,0.778726,-8.122366,-2.933893,-6.373073,7.911771,8.215645,-3.245447,-5.502747,-2.876738,5.819953,4.801180],[6.908612,2.096274,2.830509,5.713142,-0.773709,4.357059,7.221656,7.980754,-1.111119,-4.001559,6.080682,2.042546,-4.229526,1.980686,7.702432,2.502974],[-1.704101,5.088141,1.132938,-4.724166,5.205592,-2.164105,8.037630,-3.243799,-3.329940,9.034689,-7.841209,-9.722542,-7.568741,-9.827753,-7.039371,-9.264144],[7.745101,-5.442089,-2.578687,-8.000394,4.864058,7.180774,-7.400892,-1.274108,-7.422690,2.462454,2.278979,-4.557813,3.259097,0.743774,-0.466942,1.816196],[6.926451,-5.072214,-0.882542,3.450289,-8.471008,8.294846,3.576827,3.505473,9.992790,-6.678007,-6.879469,2.441755,4.451150,1.114516,-2.951618,9.001407],[0.128800,-2.937786,-0.006380,8.387708,-7.074252,-4.738220,-2.837288,6.684352,-2.194478,-5.770606,-3.972246,-6.324003,5.539370,-6.911466,-0.407721,3.718171],[5.869386,-0.492213,-2.324398,-7.546250,-9.881007,-0.551274,9.737777,-5.224081,1.273844,-6.494208,-2.507289,9.235066,1.404144,-2.596295,-5.938799,9.719123],[1.683709,4.089298,9.748043,-0.463128,-9.120609,-5.625643,-3.373432,0.949183,-3.245658,-9.494805,7.126936,-0.732407,6.660732,-9.822191,-8.818453,9.162609],[8.979009,8.608510,9.442233,-6.663656,-7.318577,3.733665,-0.642348,-0.173345,-4.100280,3.556318,2.168325,-8.724483,-7.377315,-6.172773,-5.416457,-1.694930],[-4.792153,-2.501077,1.684123,-0.080475,-1.970625,9.099047,-9.632363,1.443582,-1.233851,-4.637070,-2.134491,-3.560176,-8.024932,8.470607,-2.393982,-2.382603],[-1.268331,-4.956737,-4.069191,3.337128,-3.649296,5.132086,7.636407,-7.071628,3.079184,5.950620,9.624396,6.547256,-2.125209,6.399053,-2.810740,6.907516],[-1.010346,9.981458,-5.635906,7.546112,0.729876,-0.470674,4.058545,-8.103925,8.509061,-5.621248,9.872250,-8.380876,0.207634,-1.532798,-9.504493,-5.274113]],[[-7.274495,4.228409,-4.118151,0.648082,7.105287,-8.085313,-1.168634,9.132966,-7.373338,2.900381,2.021876,0.836860,2.380286,0.248641,-7.639703,-1.172331],[4.485603,2.395500,9.387551,6.028966,-8.727967,7.405684,-2.133305,2.096476,5.465696,-6.285080,-1.922848,4.248813,9.065610,7.421538,-6.093568,-7.229157],[3.384550,5.779582,5.497546,2.786879,9.601447,-1.134775,-0.421395,-3.772585,-2.535001,-3.617462,4.237235,-5.831337,-3.038415,-5.475404,-3.051535,-3.819704],[-9.490239,-3.212654,-3.317729,-3.637308,-0.368267,8.807173,-6.445097,-9.066711,-0.558013,0.296081,-1.775303,0.340965,-6.082279,2.036495,-8.541132,-0.954409],[-9.473655,-1.467437,3.735484,-0.693049,-3.793892,-4.218413,3.273164,5.150426,3.581343,7.375377,3.718903,8.898598,-9.069408,-8.341977,-5.151623,-1.471318],[8.289473,-4.074021,9.748721,-4.967446,-2.506621,-0.548825,-7.503159,-3.510422,-2.766031,1.318793,-7.874990,3.789960,-8.118694,7.864265,4.155121,5.052895],[4.863971,1.243293,-2.351564,-0.269036,-9.744408,-2.217758,-0.719080,-5.631004,0.884789,-5.877396,-3.874138,-3.710969,1.348393,-1.991483,9.914821,1.905303],[8.001323,9.086369,2.362269,-5.217032,-9.782848,-7.191100,8.999550,-6.740250,-8.338578,-5.458136,-4.354589,1.713710,5.816256,-8.176976,4.357017,5.881382],[-9.432677,-7.988061,-5.476333,3.045986,-2.597394,3.660819,9.319255,-7.555686,4.884734,-4.019226,3.148818,9.697555,3.703763,-1.815875,-5.270221,8.887878],[-6.057873,-0.520287,5.586571,-4.584961,0.404747,2.361215,5.347149,-4.430412,9.120964,-4.066390,6.273547,2.205689,-7.794007,9.598732,7.295910,8.512612],[0.743068,-1.943788,-4.502701,-0.090408,-6.847280,-3.204149,1.607121,-7.278774,0.066661,6.055042,4.667364,-2.774449,-0.778074,-3.803496,-8.523181,-0.380816],[3.145722,-2.320349,2.186716,5.977798,7.983974,7.496359,-8.148374,9.244400,-3.665487,-7.138491,0.721671,0.920872,7.478863,9.022620,-9.232643,3.934047],[-4.813383,6.643218,-0.360560,5.676521,-7.594660,-9.120172,9.401165,-9.635874,-3.608367,9.211887,6.794729,-2.524565,-8.862645,1.620562,6.426751,-0.949994]],[[-1.726380,8.030728,-2.043443,-7.454023,5.450542,6.031659,-3.205194,-8.368309,6.629072,-4.172899,0.454247,7.170200,-9.582768,-9.428836,4.763296,5.500662],[-9.444023,-5.005216,-7.098157,7.402263,6.055178,-9.964190,-9.372782,-9.011715,-4.818124,5.002377,4.198001,6.558929,8.645362,5.913433,-7.485949,-8.476159],[7.915343,1.615610,-2.645341,8.722963,6.313542,2.536082,4.517698,7.311718,1.816767,8.827308,7.859280,-1.032865,-0.118367,8.065502,0.540865,1.872974],[-5.646487,-9.389861,2.788093,-3.720066,6.451382,-2.830850,-8.367196,-6.398744,-8.989901,-5.836346,-9.268004,-6.129236,3.678103,8.595619,-0.548728,6.116179],[4.202711,2.162069,-5.468865,3.991643,4.846317,-9.166087,-8.353845,4.722186,-3.420085,-2.534106,0.558946,5.207001,7.595049,4.181413,1.018756,-7.777237],[-3.799329,0.485484,-4.347816,-5.814434,-4.524392,7.955926,9.871721,-0.335601,-3.671522,-0.163210,0.384653,-4.374878,-3.906189,-1.619377,1.776654,-5.359531],[-6.613630,-9.991938,-6.505315,6.410441,2.670455,5.587148,7.230129,-0.549665,8.273842,3.202879,-3.529001,8.293447,2.468075,-3.564109,-9.504410,-6.082860],[-9.707132,2.143151,2.099984,4.146479,4.446432,6.684832,-3.491085,4.215200,-3.466713,6.418544,-1.034060,4.765068,-5.897548,-9.417036,-3.002644,-9.558196],[3.451575,-3.883615,-3.409250,4.465621,-9.146586,-4.256026,-7.747957,-9.003871,8.657503,4.290428,-6.681095,8.286913,-2.774903,-3.073199,6.967903,7.799690],[-5.186682,1.195429,-7.828667,8.904716,-7.325943,9.447186,7.800510,3.390310,4.324723,-9.754866,-2.196592,3.914478,-8.117303,7.655794,-1.281663,-9.306043],[-2.037058,5.841126,9.914614,-9.319858,-0.554142,-4.398805,9.748267,-7.437412,7.221112,6.203260,3.270207,-4.190342,-7.611109,7.677674,4.105490,7.225424],[4.324568,-8.063362,1.344382,-9.163126,-5.233572,5.826736,9.150077,5.483077,7.941144,-0.297221,6.452301,-7.362869,-1.818559,-6.582078,3.074796,-5.373867],[-3.823961,9.493163,9.522780,2.489486,6.288544,4.522050,9.933936,0.484035,9.058580,9.536275,-0.734754,-5.477483,6.960707,-3.187189,7.271602,2.335704]],[[6.577876,2.636212,0.456384,8.363151,-2.456208,6.374239,7.623076,-5.319832,-5.615088,3.210870,2.215099,9.336399,-5.605512,2.158140,-8.717219,2.105442],[-0.305757,-5.483417,7.611253,-4.516944,4.662151,7.336505,-3.115261,4.376060,3.460693,2.854626,3.400012,0.091909,5.720859,1.631594,-4.544075,1.983355],[2.635523,-7.105860,6.067708,-2.645205,-5.035182,6.585173,0.344313,9.107795,6.504966,5.315596,1.792224,-5.569641,-3.043093,7.449544,-6.554882,9.477389],[-7.751341,8.773710,-9.988067,-3.671019,4.847813,6.636785,5.014414,-1.700594,8.251836,5.482076,-4.095274,2.131222,4.900547,2.605438,-9.614966,2.015283],[-2.188635,-8.515941,4.884762,7.036071,4.439100,5.182138,3.283449,4.976026,-9.638360,-7.367898,4.782800,1.660228,-0.487899,-9.295062,6.995453,4.977939],[-5.136329,-0.479881,5.100113,3.825655,-9.128963,8.825202,-1.699751,-2.548903,0.222090,9.803250,8.124411,4.571327,-6.570008,-6.528284,4.742130,6.279190],[7.997074,6.567554,-2.987204,4.263735,-6.641522,-6.038559,-7.007570,8.768336,9.700215,-7.051976,5.227337,-9.458615,0.510633,9.024635,5.454109,3.535902],[-2.080444,5.664653,4.812893,2.076331,5.457751,-6.496300,-7.027271,6.379350,-1.999969,-4.237879,6.733285,8.365075,2.103341,4.624010,-1.897182,-6.443794],[-8.522889,7.304803,-7.669085,1.457469,-9.625747,0.133076,8.068983,5.965490,-6.204863,9.807835,-2.451581,1.858765,5.862278,-4.333665,7.815437,-5.011180],[-2.359110,5.313649,-2.647628,-3.323547,-3.525239,3.482570,-0.985455,5.076652,9.089239,-8.776117,-5.195165,0.058746,6.037322,0.077224,-4.781976,-5.259776],[8.914392,-2.580570,-6.092859,-9.462782,-2.786500,-5.608499,-5.145633,-7.677537,-4.792596,-3.090301,-0.654316,-4.737687,8.310339,-2.951597,1.215983,9.678677],[-3.948715,-4.235349,-1.145952,6.512136,-1.229590,-8.906537,4.612274,-2.898608,2.500590,-2.199031,7.254169,7.226393,-4.027304,-0.641676,-1.430559,-0.667347],[2.959005,0.493369,-1.855577,3.932774,-8.393504,2.761352,-1.147597,6.010341,-9.301187,3.933515,-3.730661,1.294409,-6.020210,-5.195627,7.021106,9.760437]],[[7.531018,-2.175669,1.506830,7.036461,2.208264,2.738677,-2.976490,-7.308395,9.181369,-9.409453,-6.459430,-3.012229,-8.215130,-9.575398,-6.622544,-3.920613],[-5.465593,4.411732,-7.024056,-5.453525,3.326260,5.911106,-8.270317,3.806895,5.268692,-0.717403,8.066295,-9.542987,5.702988,7.931901,-6.139147,-7.511309],[-3.919345,-8.756554,-1.037118,6.564258,1.564909,9.966060,-0.780104,4.128931,7.954011,2.493993,-4.120800,-5.710529,-0.139401,4.092165,8.449340,-5.288539],[7.479924,0.299092,7.914023,-0.509343,8.898248,-1.900592,-4.787482,-4.345892,3.522133,-8.561703,6.674928,-9.773723,-8.799810,7.243418,9.727992,7.128004],[-5.151377,-8.842123,9.889591,-6.083589,-0.046531,-8.518407,-7.612794,-8.466704,8.309821,-3.576791,2.449490,-8.893535,-5.671677,-5.670800,1.832782,8.569924],[-4.637487,3.393920,-2.462267,-8.294052,6.276527,9.733979,1.581868,8.868807,-8.440873,-5.420465,-7.609279,4.301476,-6.840039,-1.838308,8.785602,5.003046],[4.506259,-1.090604,4.583126,0.414297,0.579089,-0.117652,-1.585990,7.826776,6.262694,3.242625,4.772062,7.197971,-4.639806,7.336380,6.556020,6.052734],[-3.398900,-6.683535,-3.981859,-4.884638,-1.245154,7.964694,-6.611902,9.962311,-4.954147,-4.995009,9.548124,0.250120,3.936738,1.516175,2.679609,-9.938497],[-8.078602,2.603766,-9.396880,1.450709,3.669135,2.159272,6.217098,3.917243,8.193263,5.850412,8.626737,-8.640037,-1.566108,3.836068,-3.918018,8.731422],[-2.447020,-2.874682,-9.035408,3.697927,-2.667177,8.196789,5.902798,4.517510,-5.490963,0.333234,6.262751,9.018599,-4.971577,2.167337,-1.885352,1.947240],[-9.533255,1.150490,3.478102,-1.505446,9.828463,-8.159902,-6.412370,-0.639658,-7.973989,5.470641,3.501298,0.752122,6.408110,4.886480,4.927953,7.262975],[-8.323930,-9.237439,0.255082,1.207798,8.040203,-1.980725,2.528015,-5.296941,-3.716604,4.151099,-2.293266,6.589145,7.952062,7.203843,-8.047029,-7.260597],[2.368152,-2.139147,8.644244,-2.410731,4.528300,3.719486,6.679857,9.019469,9.631781,0.629067,0.988054,3.514995,2.153356,-7.079528,4.724889,-0.224738]],[[6.528939,-5.546007,-0.534161,7.778398,0.422163,-9.955553,1.562678,-9.170270,-8.637915,-1.017409,2.455797,9.710677,6.479794,-8.410476,-9.173852,5.656891],[1.500018,9.170073,-3.700963,-3.598506,6.480872,-3.579621,-2.045920,1.561010,1.222837,-7.990304,8.976135,3.095799,4.873702,-4.027545,9.549130,-9.323577],[8.370449,-8.686646,-9.148165,2.464915,-6.752979,-3.977251,-1.079564,3.309209,-2.928068,-0.801176,3.279030,-8.647695,0.094797,7.540331,-6.789258,-7.616181],[9.038960,-4.869129,4.600453,5.691201,3.149606,-5.988692,6.097177,9.320858,4.962928,8.406797,-4.282153,-1.673694,-2.281619,-6.042408,8.924812,-2.211223],[3.439090,-0.830098,-1.106702,-7.599265,-7.525953,-4.229313,2.148937,2.592571,1.402954,3.554017,-2.304365,-4.044158,1.026736,9.055024,1.864201,6.572265],[-8.385735,5.454414,5.589088,9.450259,-1.140813,9.456559,8.392773,-6.518177,-7.253713,-9.067006,0.475336,4.939075,5.229889,0.079499,2.571114,-6.038580],[9.863192,-0.351535,5.828434,-1.626753,6.836878,5.712145,-9.296971,-8.113139,-4.477215,2.076902,5.199303,-3.401031,8.164442,3.277973,3.650971,1.208066],[8.865428,6.125331,0.647968,-6.464634,-4.328360,1.522996,6.036096,5.934941,9.737330,-9.044906,1.335771,7.050785,-6.285544,6.233720,-8.750180,-7.200380],[9.274078,0.352065,2.545852,9.207989,4.790097,-5.573966,-4.130974,-8.148263,-3.488481,-0.912576,-1.973209,6.820200,-6.272324,-6.167919,1.847838,-0.067452],[-3.257040,8.164961,6.290277,0.943622,5.805307,-9.913709,1.276776,5.693006,7.686974,-2.540091,-5.321691,-8.381127,-8.932162,8.394739,-4.885165,-7.245130],[0.985943,-6.604422,8.234491,-4.253353,-3.861618,-8.729073,3.849069,2.636219,-3.429113,-4.264848,0.927697,8.763437,8.672707,4.733582,5.739300,9.134043],[7.907393,8.242355,7.330055,-3.855518,-2.491944,-2.240756,-6.322741,-0.337489,6.178656,1.898473,-6.165815,-4.360867,-4.531146,6.501812,-4.104292,-3.719512],[-0.833652,-3.320882,8.864782,5.004580,5.822295,-4.839773,-3.720629,-3.541593,3.933259,-8.611729,7.100118,-6.558307,4.363049,5.682001,-8.269832,1.296126]],[[0.265453,-8.949475,-4.293996,7.612488,8.265533,-6.274513,-8.538268,0.872005,-7.588199,5.103980,4.976708,4.744217,6.100213,-3.230412,5.880259,0.250665],[9.749741,1.210156,9.332883,9.083927,-8.158866,-0.180299,3.709707,7.223049,-3.358357,6.278402,-3.445762,-0.876372,6.634895,7.811087,-7.819548,5.353046],[-2.471508,-2.346975,7.888903,6.929254,4.674696,6.411801,0.649816,-6.777554,6.207815,5.469163,5.315925,-5.555069,-0.276660,2.901830,-3.130914,-5.059573],[3.667408,-7.135716,7.818660,5.660404,-4.466508,6.422015,5.885270,6.884970,2.637589,-8.129700,-7.695507,4.991651,-4.359518,0.408494,5.904160,3.057067],[-2.503825,-8.737933,7.425260,-8.465831,-1.440270,-7.699754,-1.627505,-6.501670,-6.507818,-0.435076,6.350918,-6.955529,-9.505317,-0.104819,6.929605,-7.104076],[-4.171328,3.909968,-2.736413,2.626460,2.018944,-7.050212,3.358816,7.890567,3.336334,-3.808937,7.646143,-3.141876,-7.423772,-7.759773,4.022687,-3.738500],[2.192963,2.634531,5.939379,-5.700959,-0.121064,-4.214357,2.380867,-6.689224,2.992056,-4.690680,6.598297,-8.253237,8.398174,5.563526,-1.502627,-4.849202],[-3.689229,7.181706,-4.313454,-8.752241,7.367383,-0.465084,6.806867,3.642174,0.194450,8.413197,9.667473,3.352183,-2.567192,7.538157,-6.498522,-5.183488],[9.103941,-2.622890,8.302611,4.244383,-3.514577,-7.252122,-3.762158,-8.799028,0.443965,-8.120436,-3.995698,0.354465,-5.420242,6.870613,3.445527,3.689167],[4.538651,-0.029340,8.671690,3.839602,-8.234769,8.387678,-3.924286,-5.694369,0.680245,-9.313325,-4.501371,5.762737,-6.404166,7.562766,-0.486715,-3.418003],[1.793160,6.695814,-0.412321,-0.369868,-8.158187,1.298584,7.249132,-9.088398,-9.863293,-3.958330,-2.528641,-9.157295,-8.341128,-9.352601,-0.687174,3.479931],[-6.517921,-5.679087,1.898881,7.623437,-4.957510,-1.752232,-2.345140,5.777866,2.285651,-9.454494,6.954755,-4.241451,-3.106369,-7.089807,-0.750152,-0.974440],[-3.185000,6.424524,0.956348,9.522296,-3.366709,-8.067962,-9.051900,3.317470,5.854549,-6.170701,-2.399606,5.251342,9.401493,-9.417724,9.061032,-9.979361]],[[9.623951,3.409450,-4.423346,1.038942,2.450097,-8.911637,2.574686,5.454850,3.167688,7.109592,9.964336,-7.657188,-6.418960,-2.745555,-7.497350,-5.605900],[-1.653481,-9.391416,-7.294726,6.195854,5.574470,-0.956346,-2.633233,-4.473326,4.503944,2.606735,-9.278119,6.984061,-0.456400,-3.720096,6.181245,4.456940],[-0.488764,-8.831904,0.694745,-2.546575,3.710012,8.187352,3.425113,8.662196,9.020355,9.759740,5.964736,-6.083859,-0.759718,-5.220802,6.770560,9.913098],[6.319966,0.973813,-7.880692,-6.350654,-8.727893,0.333925,4.344528,-0.778711,2.380519,-0.823985,-4.577264,9.409120,3.116109,-6.051496,1.067024,-1.459790],[-0.952076,8.179789,-9.591180,-2.714103,4.435141,-7.081707,1.422789,9.312101,-3.928597,1.664739,-9.219897,9.933472,-2.935510,1.919921,6.500940,-9.841190],[6.257493,-3.559405,3.109540,-0.710553,-2.186247,0.173459,4.341889,1.325302,-0.567330,-6.824604,7.703617,-7.680380,-1.628421,9.061307,-0.504140,5.130341],[8.878924,9.906983,-6.897518,6.788033,-3.879545,-1.221657,5.365706,4.235959,-9.199596,-0.703186,5.277894,0.305136,-0.525741,7.986032,4.740108,-8.310569],[9.245016,3.744320,5.991521,-0.539585,-3.576812,5.124257,-8.065747,2.024286,9.888580,-5.494276,5.743832,-6.157692,-0.951565,-2.858990,-1.998300,-8.646283],[-8.337748,9.096110,-0.914334,7.806872,4.671316,-6.113011,3.606952,-1.332277,-9.412458,2.718913,6.788800,3.541538,3.322055,1.880671,8.120627,9.978045],[0.139914,5.367128,3.922788,-8.191991,-8.540838,-3.318693,8.739923,-4.786619,-6.499459,1.549141,2.318445,4.934388,-8.294736,-0.490354,8.412838,5.974085],[-2.122484,-3.606706,6.273553,-4.741840,-7.518656,0.054152,-6.129466,2.001869,0.977640,-2.171584,9.741013,0.931057,-9.776166,8.841886,-5.141074,-9.281783],[-3.473469,-7.942668,-7.360479,3.381664,8.690059,-4.201791,-1.919318,-3.474485,-6.946432,-6.637435,0.336491,2.066828,3.209765,9.480309,0.045190,-7.846868],[-8.734024,0.486171,-0.340653,4.184896,0.226291,1.295112,2.152466,0.087284,-0.465960,-4.781054,4.570721,8.771831,-8.250441,-0.986016,-0.268767,4.775779]]], dtype = "float32")#candidate|8655|(15, 13, 16)|const|float32
bop_8656 = relay.add(uop_8647.astype('int16'), relay.reshape(const_8655.astype('int16'), relay.shape_of(uop_8647))) # shape=(15, 13, 16)
uop_8665 = relay.sinh(var_8646.astype('float64')) # shape=(15, 13, 16)
func_1496_call = mod.get_global_var('func_1496')
func_1499_call = mutated_mod.get_global_var('func_1499')
const_8668 = relay.const(-10, dtype = "int64")#candidate|8668|()|const|int64
const_8669 = relay.const([-6,1,-10,7,7,4,9,-5,6,-8,9,-9,-3,-5,2,4,-8,-5,3,-6,1,-8,3,-3,5,3,7,2,-9,-4,6,-6,10,5,-5,-2,3,9,3,7,3,3,4,-1,-6,-1,-2,-7,2,6,4,-6,-9,-5,4,2,3,-9,-5,-9,5,1,1,-2,3,10,7,6,-8,-10,-4,2,-10,-4,1,-5,-5,6,6,7,-5,7,-3,-1,6,5,-6,7,8,-2], dtype = "int64")#candidate|8669|(90,)|const|int64
call_8667 = relay.TupleGetItem(func_1496_call(relay.reshape(const_8668.astype('int64'), []), relay.reshape(const_8669.astype('int64'), [9, 1, 10]), ), 0)
call_8670 = relay.TupleGetItem(func_1499_call(relay.reshape(const_8668.astype('int64'), []), relay.reshape(const_8669.astype('int64'), [9, 1, 10]), ), 0)
func_6512_call = mod.get_global_var('func_6512')
func_6514_call = mutated_mod.get_global_var('func_6514')
call_8672 = relay.TupleGetItem(func_6512_call(), 0)
call_8673 = relay.TupleGetItem(func_6514_call(), 0)
func_8374_call = mod.get_global_var('func_8374')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_8677 = relay.TupleGetItem(func_8374_call(), 0)
call_8678 = relay.TupleGetItem(func_8375_call(), 0)
uop_8681 = relay.rsqrt(uop_8647.astype('float64')) # shape=(15, 13, 16)
func_8147_call = mod.get_global_var('func_8147')
func_8150_call = mutated_mod.get_global_var('func_8150')
const_8696 = relay.const([[-3.467423,7.888899],[5.269023,3.674607],[3.896681,9.749340],[-6.402182,9.176887],[-1.697167,-3.175894],[-5.243849,1.592909],[-5.262017,5.191801],[7.794937,-4.949656],[-4.731428,-9.783472],[0.746032,-6.247613],[-8.473483,-4.752172],[-1.565176,5.547167],[-5.642003,-4.481249],[0.511610,-1.550860],[2.767731,-2.676099],[-1.269836,-5.355009],[8.602847,3.616689],[-4.450726,3.816648],[9.179385,1.270908],[-0.303204,0.650534],[-6.782015,1.187482],[0.858535,0.595332],[-9.498964,-3.103602],[-2.349481,5.136629],[7.853214,5.475386],[-4.637561,8.212552],[-9.126019,-3.599854],[1.097440,4.625498],[4.079521,2.827823],[-1.806548,8.065458],[8.276083,-8.388333],[-7.950048,1.840539],[-9.057301,-3.305460],[3.038091,-0.784338],[-7.331559,-1.030607],[-3.454130,-7.677288],[7.750595,1.158692],[-1.383340,-6.837624],[-0.077603,-6.750088],[-1.618807,-7.421742],[-7.221770,4.921144],[-3.680534,5.461998],[-9.297366,3.086696],[5.540462,4.453817],[3.741729,9.122944],[2.586896,0.723997],[-5.658198,1.460994],[4.127135,3.279862],[-9.593098,-1.557608],[-5.797049,1.878443],[0.427670,-2.386621],[-0.457868,8.958799],[-4.245843,-4.021142],[-6.607636,4.761352],[0.250149,5.469830],[-9.126255,-7.285431],[-0.169180,-9.637756],[-7.123595,8.910895],[-5.317728,-0.816955],[9.217187,-1.901593],[-7.604996,-3.548331],[3.143920,3.176852],[-0.475735,5.333101],[5.305535,8.612798],[-0.407676,2.334355],[0.165331,6.612080],[-2.173971,2.403900],[5.169987,9.528613],[-1.988540,0.653768],[9.179373,-3.012518],[5.103183,-7.026997],[4.957150,-9.674725],[8.604580,-1.221080],[8.728397,-3.616453],[2.019383,6.085914],[-1.319894,6.871784],[-0.457980,-8.054225],[1.175389,2.178846],[-1.456094,-7.585814],[6.883267,-1.392323],[-9.640236,-4.836623],[-8.156011,1.560550],[-8.627443,-9.196233],[1.169725,4.163052],[-9.371166,7.074640],[-0.384102,4.968458],[-3.570204,-3.512185],[-7.511897,4.561181],[0.090826,-1.020346],[-7.455548,3.283246],[3.549177,4.169357],[0.532839,-3.575857],[-2.984449,-1.577508],[0.244305,-7.393798],[6.064665,2.035923],[8.446610,-7.571754],[-1.984435,-9.877806],[-2.123407,3.416291],[7.427130,-3.676902],[6.000739,8.544303],[-4.379318,-0.632086],[4.536945,8.668170],[5.770807,-7.308923],[5.940778,7.250805],[-0.194891,4.562835],[-1.728843,-7.723977],[2.698744,-5.324882],[9.661834,7.060658],[7.063541,0.753200],[-5.214119,5.479408],[-9.154227,-4.577968],[-7.202641,5.768562],[4.972266,6.428969],[-2.666149,5.558679],[-0.015741,-4.523562],[1.680246,0.257431],[-9.847157,4.789310],[-9.154374,-9.846007],[2.984662,-3.270499],[7.601886,-1.749041],[-1.940565,-7.110454],[0.430468,5.631868],[2.592572,5.886003],[8.232439,-1.100775],[-1.728759,-1.098115],[-5.806150,7.175642],[0.803591,-3.276615],[6.456050,5.169925],[-9.686637,-0.072452],[6.088853,-4.495746],[-5.844028,-0.931746],[-0.258734,1.976595],[-2.187942,7.225751],[-3.733315,-5.046701],[9.349132,-8.253359],[1.472097,-5.724099],[1.489072,3.278571],[-0.309185,-6.084811],[-1.058529,-7.690945],[6.774508,6.344338],[2.855342,-6.719082],[9.693188,3.390125],[1.126444,4.180336],[6.210004,0.477122],[7.118667,-2.855474],[-5.955474,-1.035683],[7.149939,2.072898],[-9.583001,-6.474497],[-1.310687,5.328874],[-1.880284,-8.440720],[9.073684,-7.839141],[3.372853,2.608120],[7.609149,8.172425],[-9.626409,-8.512613],[-7.112336,-8.895311],[-4.186919,3.660511],[-8.532569,-8.551500],[0.912526,-4.605079],[-2.218112,-2.134543],[-0.134535,-6.925315],[7.244291,9.943348],[7.398775,2.467285],[-4.542625,-9.986413],[-9.240548,3.576811],[6.928469,7.231625],[-2.415176,2.487215],[0.680905,-7.533153],[0.064262,3.694171],[-4.469237,4.933572],[-5.063879,-1.601808],[-7.052837,1.690023],[-0.225406,9.198353],[-4.174757,-8.778491],[8.350527,4.051354],[6.041831,-4.327666],[5.581065,1.036734],[6.232945,8.568735],[8.797401,-6.793950],[7.383733,3.392864],[-7.933847,2.150676],[0.811170,3.968000],[6.516837,8.680333],[-3.755312,6.834697],[4.931572,-6.685615],[9.607256,-7.279246],[7.256360,2.032497],[-8.187822,-1.929307],[8.691299,5.509921],[2.772804,5.196982],[-1.284676,-6.303558],[7.349144,-7.029513],[-5.966027,7.391427],[-0.887476,2.688518],[-5.997514,-3.663122],[8.140520,2.007595],[-2.206103,8.234069]], dtype = "float64")#candidate|8696|(196, 2)|const|float64
call_8695 = relay.TupleGetItem(func_8147_call(relay.reshape(const_8696.astype('float64'), [392,])), 1)
call_8697 = relay.TupleGetItem(func_8150_call(relay.reshape(const_8696.astype('float64'), [392,])), 1)
uop_8702 = relay.sigmoid(bop_8656.astype('float32')) # shape=(15, 13, 16)
output = relay.Tuple([uop_8665,call_8667,const_8668,const_8669,call_8672,call_8677,uop_8681,call_8695,const_8696,uop_8702,])
output2 = relay.Tuple([uop_8665,call_8670,const_8668,const_8669,call_8673,call_8678,uop_8681,call_8697,const_8696,uop_8702,])
func_8705 = relay.Function([var_8646,], output)
mod['func_8705'] = func_8705
mod = relay.transform.InferType()(mod)
mutated_mod['func_8705'] = func_8705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8706 = relay.var("var_8706", dtype = "float32", shape = (15, 13, 16))#candidate|8706|(15, 13, 16)|var|float32
func_8705_call = mutated_mod.get_global_var('func_8705')
call_8707 = func_8705_call(var_8706)
output = call_8707
func_8708 = relay.Function([var_8706], output)
mutated_mod['func_8708'] = func_8708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mod.get_global_var('func_7124')
func_7126_call = mutated_mod.get_global_var('func_7126')
call_8736 = relay.TupleGetItem(func_7124_call(), 0)
call_8737 = relay.TupleGetItem(func_7126_call(), 0)
var_8767 = relay.var("var_8767", dtype = "int32", shape = (1575, 9))#candidate|8767|(1575, 9)|var|int32
bop_8768 = relay.bitwise_xor(call_8736.astype('int64'), var_8767.astype('int64')) # shape=(1575, 9)
bop_8771 = relay.bitwise_xor(call_8737.astype('int64'), var_8767.astype('int64')) # shape=(1575, 9)
output = bop_8768
output2 = bop_8771
func_8776 = relay.Function([var_8767,], output)
mod['func_8776'] = func_8776
mod = relay.transform.InferType()(mod)
var_8777 = relay.var("var_8777", dtype = "int32", shape = (1575, 9))#candidate|8777|(1575, 9)|var|int32
output = func_8776(var_8777)
func_8778 = relay.Function([var_8777], output)
mutated_mod['func_8778'] = func_8778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_8828 = func_4898_call()
call_8829 = func_4898_call()
func_7441_call = mod.get_global_var('func_7441')
func_7445_call = mutated_mod.get_global_var('func_7445')
const_8837 = relay.const([-6,-4,-7,-10,-6,-6,4,-4,-10,-4,8,4,1,3,6,8,3,8,10,-6,8,-9,-7,-7,-4,5,9,1,-5,-1,-10,-4,8,-10,-2,7,10,2,-9,-4,10,-4,-3,10,-9,1,-7,-2,-7,-5,1,-10,-10,-6,-1,-3,-4,-9,-1,-6,-9,2,2,-3,8,-9,-2,8,9,-10,-6,1,-1,6,-1,-4,9,-8,-2,1,7,-7,-9,10,8,-10,4,-6,-4,-6,-7,7,8,9,4,-8,-10,-1,-9,-8,-10,3,10,8,-4,-10,7,-6,-3,-3,-5,-10,-3,3,-4,10,9,-10,3,-2,-4,-9,-10,-4,-10,-9,-7,1,2,3,-4,1,-6,-2,-9,-7,7,-2,9,-7,2,-5,7,-8,-9,-6,-3,10,-8,-8,7,9,-9,8,-10,10,-2,-10,10,-7,-10,6,10,3,-8,-4,-4,8,8,3,10,-10,8,-1,-10,9,-3,-5,1,-2,7,-4,1,-6,8,6,1,-10,8,7,-2,-9,-1,10,2,-1,-8,-2,6,9,-7,2,3,-7,5,-8,-10,4,1,5,5,-4,10,-5,6,-10,1,3,6,-2,1,2,6,5,1,1,-6,3,3,-4,-2,-3,10,6,5,-9,-7,-10,-8,-10,-4,6,-8,-8,5,-3,10,-1,-2,-6,-4,-5,-7,-5,1,5,8,7,-8,-10,-9,-3,9,-9,10,9,-2,8,9,-4,1,-6,-1,-7,-10,-4,-8,-9,-3,-7,4,9,-10,5,2,-10,1,4], dtype = "uint32")#candidate|8837|(288,)|const|uint32
var_8838 = relay.var("var_8838", dtype = "float64", shape = (200, 4))#candidate|8838|(200, 4)|var|float64
const_8839 = relay.const([-5,6,7,-5,-9,-9,8,-7,10,-9,10,-2,-6,6,-5,-3,4,-4,-1,-5,7,9,9,-4,-6,1,-4,3,-9,-7,-5,-5,-10,-1,7,3,1,-1,-10,9,-6,1,7,-2,-4,9,9,-8,2,-10,-7,-4,5,-7,10,2,-10,8,7,-4,-8,10,-6,6,10,-8,7,5,5,8,10,1,-2,-7,-10,-2,3,-8,2,8,10,-1,8,-10,8,8,7,-7,-2,-10,5,-3,-5,9,4,3,3,-2,10,4,1,7,5,9,-8,10,-2,-4,-3,-4,10,3,-3,-6,7,2,-4,-6,-5,-6,3,-8,8,-9,5,-10,-3,10,-7,9,-6,2,2,-1,-2,-1,5,-9,1,6,3,1,-8,-4,-7,9,-5,-7,10,5,-7,6,-8,-4,4,5,5,-5,-6,8,-1,-9,9,-5,-4,-10,9,-4,2,5,8,-5,-7,6,9,-9,10,-9,5,-7,-6,-1,-4,9,-3,-3,-6,5,-9,9,4,10,-7,4,-3,-1,9,-4,-7,8,9,2,-10,-1,8,8,-7,10,9,5,5,3,-8,-9,-1,-4,10,10,-2,10,-8,-4,9,10,-7,10,-3,-8,-1,5,-3,4,6,3,2,2,4,-6,9,10,3,10,2,-4,-6,-5,-1,-2,3,-8,1,-7,-3,7,-1,10,7,-7,-1,-2,-3,5,7,2,7,7,8,-2,-10,-5,-5,4,-6,-1,-5,3,1,1,-9,2,-1,-3,-4,9,5,-7,-10,2,-4,-6,-7,7,9,8,1,6,-8,2,-6,-7,9,-1,5,-9,-8,9,4,-3,-6,-2,2,10,9,-3,-4,-7,-6,-2,-4,1,-5,-7,-8,1,3,2,5,5,-5,10,3,-2,8,10,-6,3,-3,8,3,7,7,1,-1,-6,9,6,3,-8,6,2,9,1,8,-5,-3,4,2,-9,-4,-1,-1,2,7,-3,-8,-4,2,2,9,8,-10,1,8,6,5,4,4,-9,5,-3,9,-1,7,9,-1,-7,1,-4,7,2,5,7,-3,-10,10,-3,-3,10,-10,-5,9,-1,-7,9,2,6,-7,-7,-3,9,2,-4,8,6,-6,6,-10,-4,-3,3,-4,5,5,-2,-10,-2,4,-7,10,10,-4,-9,-5,-3,6,6,-6,3,-2,10,7,4,7,-4,7,-3,10,7,-7,-6,8,-4,2,8,2,7,9,1,-5,3,8,-2,9,6,10,10,-1,-4,4,6,-7,5,4,-2,-2,-10,-2,-9,-4,9,-6,-1,7,-9,-7,-7,7,2,10,2,-10,10,-7,-7,5,-4,-6,7,10,2,-10,2,3,-1,-10,4,-5,4,-5,-2,6,1,-1,-5,2,-8,8,-2,-6,5,5,-5,-6,-4,-1,-1,-4,-1,1,-8,5,7,-8,8,3,-9,3,-1,-7,9,-5,7,3,4,7,-8,8,8,6,9,9,10,-1,10,9,-6,-10,-2,2,-8,8,3,-3,1,9,3,-5,10,5,4,9,-8,2,1,-6,4,7,9,10,-3,7,5,-8,-9,-4,9,-10,2,7,-9,4,-6,-3,-3,4,-10,-4,6,-1,-9,6,8,-2,-2,-6,1,-4,-1,1,-10,3,-7,-4,-1,8,9,7,-1,-10,8,-4,5,8,-7,-3,-6,-6,5,6,6,-5,7,4,1,-1,-1,-9,-4,-4,6,9,-6,-4,6,7,5,7,-4,-2,-5,3,9,-2,-1,-6,-6,6,10,4,-2,-10,-5,-9,-7,5,5,10,1,8,10,8,9,-1,4,6,8,-10,-2,3,1,3,-7,-7,7,-10,-9,5,2,8,-1,1,10,-6,2,4,-9,-9,-2,-5,-2,-5,3,1,-6,-1,-3,8,-6,8,6,-3,-10,9,9,-2,9,3,9,-5,-3,4,9,-9,-8,4,8,-9,10,-4,-2,-9,6,-2,8,-4,6,-6,3,1,-10,-5,2,9,-2,10,-9,-4,3,-2,5,-3,-5,7,2,-9,-3,-3,10,7,-4,5,-8,-10,7,3,9,3,2,-4,-8,-1,9,7,5,-9,-3,-4,-5,1,6,4,-7,-1,-6,7,6,-4,1,4,5,9,-10,-8,-5,7,-10,-7,9,-10,-1,-9,-5,5,4,6,-5,-7,5,-1,2,-2,-10,-1,-8,-4,-8,-7,-5,10,2,-9,10,3,1,6,2,8,-10,1,-10,9,7,2,10,9,8,10,-6,-3,-5,-2,10,10,-1,-10,-5,10,4,-4,-3,-8,-3,-1,9,5,7,-2,-7,9,-5,-10,7,-4,1,-7,1,7,4,-2,-4,-9,-4,7,5,-9,4,-3,-9,-2,-3,7,4,7,-4,1,3,10,-10,9,3,-6,-7,-6,5,9,6,-9,9,-6,-4,2,6,-5,9,2,3,-6,8,-1,9,1,3,6,8,7,-1,-9,1,3,-1,-1,-6,9,1,7,7,7,-9,-3,7,9,1,4,4,-3,6,-9,2,-8,-5,5,4,3,-5,10,-8,-1,-5,-2,-4,-3,-8,-7,-10,5,10,9,-2,-9,9,-10,-6,-8,5,1,-5,-4,-7,-5,-5,-2,10,1,2,-2,7,1,-4,8,9,1,-4,-6,7,5,2,7,7,-8,7,-1,4,10,1,7,5,-3,-6,-9,-2,5,2,-8,9,9,7,-10,3,1,8,-3,8,4,-5,-9,7,-1,-5,9,8,-9,9,-8,-9,-6,6,2,5,10,-8,7,2,-6,10,10,-1,-10,8,3,-6,-6,10,8,5,7,8,9,-3,-8,10,10,-7,-4,-10,-4,-5,1,-8,1,9,-7,4,-9,-2,-2,5,4,2,-6,-2,-1,1,-4,-8,-4,-5,-6,-8,-7,-1,1,-1,-9,2,7,6,-2,-7,9,3,4,6,-8,6,5,6,-5,-2,2,-8,7,-7,4,-7,-1,8,-2,-9,9,8,3,1,-3,-10,4,-3,5,-1,-6,-4,1,-4,6,-3,-9,10,-5,9,1,-2,-9,-7,-7,-5,-9,9,3,-2,9,8,8,-9,9,10,9,-7,7,7,2,-6,-3,10,-10,-6,2,6,-2,-3,-7,10,-5,6,-3,-7,-5,6,7,5,-2,6,-7,-4,-9,1,-9,2,10,-7,1,7,-4,5,3,-9,-2,-9,-9,-9,9,6,1,-10,-6,-3,1,-2,-3,8,-8,10], dtype = "int8")#candidate|8839|(1200,)|const|int8
call_8836 = relay.TupleGetItem(func_7441_call(relay.reshape(const_8837.astype('uint32'), [288,]), relay.reshape(var_8838.astype('float64'), [800,]), relay.reshape(const_8839.astype('int8'), [1200,]), ), 5)
call_8840 = relay.TupleGetItem(func_7445_call(relay.reshape(const_8837.astype('uint32'), [288,]), relay.reshape(var_8838.astype('float64'), [800,]), relay.reshape(const_8839.astype('int8'), [1200,]), ), 5)
output = relay.Tuple([call_8828,call_8836,const_8837,var_8838,const_8839,])
output2 = relay.Tuple([call_8829,call_8840,const_8837,var_8838,const_8839,])
func_8844 = relay.Function([var_8838,], output)
mod['func_8844'] = func_8844
mod = relay.transform.InferType()(mod)
mutated_mod['func_8844'] = func_8844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8845 = relay.var("var_8845", dtype = "float64", shape = (200, 4))#candidate|8845|(200, 4)|var|float64
func_8844_call = mutated_mod.get_global_var('func_8844')
call_8846 = func_8844_call(var_8845)
output = call_8846
func_8847 = relay.Function([var_8845], output)
mutated_mod['func_8847'] = func_8847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8374_call = mod.get_global_var('func_8374')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_8852 = relay.TupleGetItem(func_8374_call(), 0)
call_8853 = relay.TupleGetItem(func_8375_call(), 0)
output = call_8852
output2 = call_8853
func_8854 = relay.Function([], output)
mod['func_8854'] = func_8854
mod = relay.transform.InferType()(mod)
mutated_mod['func_8854'] = func_8854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8854_call = mutated_mod.get_global_var('func_8854')
call_8855 = func_8854_call()
output = call_8855
func_8856 = relay.Function([], output)
mutated_mod['func_8856'] = func_8856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6993_call = mod.get_global_var('func_6993')
func_6994_call = mutated_mod.get_global_var('func_6994')
call_8878 = func_6993_call()
call_8879 = func_6993_call()
func_6922_call = mod.get_global_var('func_6922')
func_6924_call = mutated_mod.get_global_var('func_6924')
call_8885 = func_6922_call()
call_8886 = func_6922_call()
uop_8899 = relay.cos(call_8878.astype('float64')) # shape=(12, 6, 4)
uop_8901 = relay.cos(call_8879.astype('float64')) # shape=(12, 6, 4)
func_7491_call = mod.get_global_var('func_7491')
func_7493_call = mutated_mod.get_global_var('func_7493')
call_8905 = relay.TupleGetItem(func_7491_call(), 0)
call_8906 = relay.TupleGetItem(func_7493_call(), 0)
func_692_call = mod.get_global_var('func_692')
func_695_call = mutated_mod.get_global_var('func_695')
call_8908 = relay.TupleGetItem(func_692_call(relay.reshape(call_8878.astype('float32'), [288, 1])), 0)
call_8909 = relay.TupleGetItem(func_695_call(relay.reshape(call_8878.astype('float32'), [288, 1])), 0)
uop_8911 = relay.sigmoid(uop_8899.astype('float32')) # shape=(12, 6, 4)
uop_8913 = relay.sigmoid(uop_8901.astype('float32')) # shape=(12, 6, 4)
const_8916 = relay.const([[[True,False,True,True],[True,False,True,True],[True,True,False,True],[True,True,False,True],[False,True,True,False],[True,False,True,False],[True,True,True,True],[False,True,True,True],[False,False,False,True]],[[False,True,False,True],[False,False,False,False],[True,True,True,True],[False,False,True,True],[True,False,False,False],[True,True,True,False],[False,False,True,False],[False,False,True,True],[True,True,False,False]],[[True,True,False,False],[False,True,True,False],[False,False,False,True],[False,False,True,False],[True,False,False,True],[False,True,False,False],[True,True,True,True],[True,False,True,False],[True,True,True,True]],[[False,False,True,False],[True,True,True,True],[True,False,True,False],[False,True,False,False],[True,False,True,False],[True,False,True,False],[False,False,True,True],[True,False,False,False],[False,False,False,True]],[[True,False,True,True],[False,False,True,True],[False,True,True,True],[True,False,True,True],[True,True,True,True],[True,False,True,True],[False,True,True,True],[True,True,False,True],[True,True,False,False]],[[False,True,True,False],[True,False,True,False],[True,False,True,False],[True,True,True,True],[True,False,False,False],[False,True,True,True],[False,True,False,False],[True,False,False,True],[False,True,True,True]],[[True,False,True,False],[False,True,False,False],[False,False,True,True],[False,True,True,False],[False,False,False,False],[False,False,False,True],[True,False,False,True],[True,True,False,True],[True,True,True,True]],[[False,False,True,False],[False,False,False,False],[True,True,True,True],[False,True,False,False],[True,False,True,False],[True,True,True,False],[False,True,True,True],[True,True,False,True],[True,False,False,True]],[[False,False,True,False],[True,False,True,True],[True,True,True,True],[False,False,True,True],[True,True,True,True],[False,True,False,True],[False,True,True,True],[True,True,False,True],[True,True,True,False]],[[False,True,False,True],[False,True,False,False],[False,False,True,True],[True,True,True,True],[False,True,True,False],[False,False,True,True],[True,True,True,False],[False,False,False,False],[True,False,False,False]],[[False,False,False,False],[False,False,True,True],[True,False,True,True],[False,False,True,False],[False,False,False,True],[True,True,True,True],[True,True,False,True],[False,False,True,False],[False,True,False,True]],[[True,True,False,False],[False,True,True,False],[True,False,False,True],[False,False,False,True],[True,True,True,True],[True,True,False,True],[True,True,True,True],[False,True,False,False],[False,True,False,False]],[[False,False,False,False],[False,True,True,True],[True,False,False,True],[True,True,False,False],[False,False,True,True],[True,False,True,True],[True,True,True,False],[False,False,False,True],[False,True,True,False]],[[False,False,True,True],[False,False,False,False],[True,False,False,False],[False,False,True,True],[False,False,True,False],[False,False,False,False],[False,False,True,False],[True,False,True,True],[True,False,True,True]],[[False,True,True,False],[False,False,False,False],[False,True,False,False],[False,True,False,False],[True,False,False,False],[True,False,False,False],[False,True,False,True],[False,True,True,False],[False,False,False,False]]], dtype = "bool")#candidate|8916|(15, 9, 4)|const|bool
bop_8917 = relay.minimum(call_8908.astype('int64'), relay.reshape(const_8916.astype('int64'), relay.shape_of(call_8908))) # shape=(15, 9, 4)
bop_8920 = relay.minimum(call_8909.astype('int64'), relay.reshape(const_8916.astype('int64'), relay.shape_of(call_8909))) # shape=(15, 9, 4)
func_7253_call = mod.get_global_var('func_7253')
func_7254_call = mutated_mod.get_global_var('func_7254')
call_8936 = relay.TupleGetItem(func_7253_call(), 1)
call_8937 = relay.TupleGetItem(func_7254_call(), 1)
output = relay.Tuple([call_8885,call_8905,uop_8911,bop_8917,call_8936,])
output2 = relay.Tuple([call_8886,call_8906,uop_8913,bop_8920,call_8937,])
func_8945 = relay.Function([], output)
mod['func_8945'] = func_8945
mod = relay.transform.InferType()(mod)
output = func_8945()
func_8946 = relay.Function([], output)
mutated_mod['func_8946'] = func_8946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6120_call = mod.get_global_var('func_6120')
func_6121_call = mutated_mod.get_global_var('func_6121')
call_8956 = relay.TupleGetItem(func_6120_call(), 2)
call_8957 = relay.TupleGetItem(func_6121_call(), 2)
output = call_8956
output2 = call_8957
func_8963 = relay.Function([], output)
mod['func_8963'] = func_8963
mod = relay.transform.InferType()(mod)
output = func_8963()
func_8964 = relay.Function([], output)
mutated_mod['func_8964'] = func_8964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6045_call = mod.get_global_var('func_6045')
func_6046_call = mutated_mod.get_global_var('func_6046')
call_8989 = relay.TupleGetItem(func_6045_call(), 2)
call_8990 = relay.TupleGetItem(func_6046_call(), 2)
func_8476_call = mod.get_global_var('func_8476')
func_8477_call = mutated_mod.get_global_var('func_8477')
call_9000 = relay.TupleGetItem(func_8476_call(), 0)
call_9001 = relay.TupleGetItem(func_8477_call(), 0)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_9002 = relay.TupleGetItem(func_6376_call(), 1)
call_9003 = relay.TupleGetItem(func_6378_call(), 1)
output = relay.Tuple([call_8989,call_9000,call_9002,])
output2 = relay.Tuple([call_8990,call_9001,call_9003,])
func_9004 = relay.Function([], output)
mod['func_9004'] = func_9004
mod = relay.transform.InferType()(mod)
output = func_9004()
func_9005 = relay.Function([], output)
mutated_mod['func_9005'] = func_9005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5679_call = mod.get_global_var('func_5679')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_9040 = relay.TupleGetItem(func_5679_call(), 0)
call_9041 = relay.TupleGetItem(func_5680_call(), 0)
output = call_9040
output2 = call_9041
func_9056 = relay.Function([], output)
mod['func_9056'] = func_9056
mod = relay.transform.InferType()(mod)
output = func_9056()
func_9057 = relay.Function([], output)
mutated_mod['func_9057'] = func_9057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mod.get_global_var('func_6784')
func_6785_call = mutated_mod.get_global_var('func_6785')
call_9091 = relay.TupleGetItem(func_6784_call(), 0)
call_9092 = relay.TupleGetItem(func_6785_call(), 0)
output = call_9091
output2 = call_9092
func_9100 = relay.Function([], output)
mod['func_9100'] = func_9100
mod = relay.transform.InferType()(mod)
output = func_9100()
func_9101 = relay.Function([], output)
mutated_mod['func_9101'] = func_9101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8945_call = mod.get_global_var('func_8945')
func_8946_call = mutated_mod.get_global_var('func_8946')
call_9104 = relay.TupleGetItem(func_8945_call(), 0)
call_9105 = relay.TupleGetItem(func_8946_call(), 0)
func_9004_call = mod.get_global_var('func_9004')
func_9005_call = mutated_mod.get_global_var('func_9005')
call_9117 = relay.TupleGetItem(func_9004_call(), 1)
call_9118 = relay.TupleGetItem(func_9005_call(), 1)
output = relay.Tuple([call_9104,call_9117,])
output2 = relay.Tuple([call_9105,call_9118,])
func_9119 = relay.Function([], output)
mod['func_9119'] = func_9119
mod = relay.transform.InferType()(mod)
mutated_mod['func_9119'] = func_9119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9119_call = mutated_mod.get_global_var('func_9119')
call_9120 = func_9119_call()
output = call_9120
func_9121 = relay.Function([], output)
mutated_mod['func_9121'] = func_9121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mod.get_global_var('func_5328')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_9230 = func_5328_call()
call_9231 = func_5328_call()
output = call_9230
output2 = call_9231
func_9258 = relay.Function([], output)
mod['func_9258'] = func_9258
mod = relay.transform.InferType()(mod)
mutated_mod['func_9258'] = func_9258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9258_call = mutated_mod.get_global_var('func_9258')
call_9259 = func_9258_call()
output = call_9259
func_9260 = relay.Function([], output)
mutated_mod['func_9260'] = func_9260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6922_call = mod.get_global_var('func_6922')
func_6924_call = mutated_mod.get_global_var('func_6924')
call_9300 = func_6922_call()
call_9301 = func_6922_call()
func_7108_call = mod.get_global_var('func_7108')
func_7109_call = mutated_mod.get_global_var('func_7109')
call_9322 = func_7108_call()
call_9323 = func_7108_call()
output = relay.Tuple([call_9300,call_9322,])
output2 = relay.Tuple([call_9301,call_9323,])
func_9324 = relay.Function([], output)
mod['func_9324'] = func_9324
mod = relay.transform.InferType()(mod)
mutated_mod['func_9324'] = func_9324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9324_call = mutated_mod.get_global_var('func_9324')
call_9325 = func_9324_call()
output = call_9325
func_9326 = relay.Function([], output)
mutated_mod['func_9326'] = func_9326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8547_call = mod.get_global_var('func_8547')
func_8548_call = mutated_mod.get_global_var('func_8548')
call_9336 = relay.TupleGetItem(func_8547_call(), 0)
call_9337 = relay.TupleGetItem(func_8548_call(), 0)
func_6803_call = mod.get_global_var('func_6803')
func_6805_call = mutated_mod.get_global_var('func_6805')
call_9343 = func_6803_call()
call_9344 = func_6803_call()
output = relay.Tuple([call_9336,call_9343,])
output2 = relay.Tuple([call_9337,call_9344,])
func_9351 = relay.Function([], output)
mod['func_9351'] = func_9351
mod = relay.transform.InferType()(mod)
output = func_9351()
func_9352 = relay.Function([], output)
mutated_mod['func_9352'] = func_9352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9414 = relay.var("var_9414", dtype = "float64", shape = (2, 1, 15))#candidate|9414|(2, 1, 15)|var|float64
uop_9415 = relay.sinh(var_9414.astype('float64')) # shape=(2, 1, 15)
bop_9418 = relay.bitwise_xor(uop_9415.astype('int8'), relay.reshape(var_9414.astype('int8'), relay.shape_of(uop_9415))) # shape=(2, 1, 15)
output = relay.Tuple([bop_9418,])
output2 = relay.Tuple([bop_9418,])
func_9438 = relay.Function([var_9414,], output)
mod['func_9438'] = func_9438
mod = relay.transform.InferType()(mod)
var_9439 = relay.var("var_9439", dtype = "float64", shape = (2, 1, 15))#candidate|9439|(2, 1, 15)|var|float64
output = func_9438(var_9439)
func_9440 = relay.Function([var_9439], output)
mutated_mod['func_9440'] = func_9440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6645_call = mod.get_global_var('func_6645')
func_6646_call = mutated_mod.get_global_var('func_6646')
call_9485 = relay.TupleGetItem(func_6645_call(), 0)
call_9486 = relay.TupleGetItem(func_6646_call(), 0)
func_5117_call = mod.get_global_var('func_5117')
func_5118_call = mutated_mod.get_global_var('func_5118')
call_9489 = relay.TupleGetItem(func_5117_call(), 2)
call_9490 = relay.TupleGetItem(func_5118_call(), 2)
func_7491_call = mod.get_global_var('func_7491')
func_7493_call = mutated_mod.get_global_var('func_7493')
call_9491 = relay.TupleGetItem(func_7491_call(), 0)
call_9492 = relay.TupleGetItem(func_7493_call(), 0)
uop_9497 = relay.atan(call_9489.astype('float32')) # shape=(600, 2)
uop_9499 = relay.atan(call_9490.astype('float32')) # shape=(600, 2)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_9500 = func_5085_call()
call_9501 = func_5085_call()
uop_9509 = relay.acosh(uop_9497.astype('float32')) # shape=(600, 2)
uop_9511 = relay.acosh(uop_9499.astype('float32')) # shape=(600, 2)
output = relay.Tuple([call_9485,call_9491,call_9500,uop_9509,])
output2 = relay.Tuple([call_9486,call_9492,call_9501,uop_9511,])
func_9529 = relay.Function([], output)
mod['func_9529'] = func_9529
mod = relay.transform.InferType()(mod)
output = func_9529()
func_9530 = relay.Function([], output)
mutated_mod['func_9530'] = func_9530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9324_call = mod.get_global_var('func_9324')
func_9326_call = mutated_mod.get_global_var('func_9326')
call_9547 = relay.TupleGetItem(func_9324_call(), 0)
call_9548 = relay.TupleGetItem(func_9326_call(), 0)
func_6784_call = mod.get_global_var('func_6784')
func_6785_call = mutated_mod.get_global_var('func_6785')
call_9564 = relay.TupleGetItem(func_6784_call(), 0)
call_9565 = relay.TupleGetItem(func_6785_call(), 0)
func_5117_call = mod.get_global_var('func_5117')
func_5118_call = mutated_mod.get_global_var('func_5118')
call_9576 = relay.TupleGetItem(func_5117_call(), 2)
call_9577 = relay.TupleGetItem(func_5118_call(), 2)
func_5947_call = mod.get_global_var('func_5947')
func_5950_call = mutated_mod.get_global_var('func_5950')
call_9586 = relay.TupleGetItem(func_5947_call(relay.reshape(call_9576.astype('int8'), [1200,])), 3)
call_9587 = relay.TupleGetItem(func_5950_call(relay.reshape(call_9576.astype('int8'), [1200,])), 3)
const_9588 = relay.const([1,3,8,-3,-8,-2,-2,3,1,-8,7,-9,-1,10,6,-3,1,-2,3,-7,10,-10,-2,-10,-10,-6,-2,3,9,-5,-9,3,4,8,1,-10,5,-5,1,-10,4,10,-10,-1,-8,-4,-5,-8,-2,-8,-2,-6,-8,-1,-6,2,6,8,-8,-5,-7,3,7,1,-8,4,9,6,-9,-6,10,7,-1,2,-5,-6,-5,4,-2,3,8,-1,-5,2,-6,1,8,1,-4,-9,-7,1,5,8,-4,9,-6,7,-9,-7,9,10,7,-9,4,10,-4,-7,-8,-8,4,4,-8,-3,-2,-2,10,10,-5,8,8,1,9,-3,-3,-3,6,8,10,9,-4,7,-4,3,6,7,7,8,-7,5,9,6,-5,7,8,1,8,-5,-5,-2,-10,-6,8,-5,2,5,-9,-7,7,-2,-4,4,1,6,10,8,6,6,-10,9,10,5,4,4,8,6,-10,-5,2,8,9,3,-2,9,10,3,-1,1,-2,9,-4,-3,-5,-7,2,-10,-3,-6,2,6,3,-3,-10,2,-3,2,-7,-2,-3,-1,4,6,4,2,-7,-9,-8,7,-1,9,-1,9,-4,-10,10,4,3,-3,9,-5,4,7,10,-9,4,-5,9,-2,-7,-1,-2,-2,2,3,9,-10,-4,6,-2,5,2,-10,5,5,-2,8,-1,2,4,-9,-3,-7,-7,-1,7,-6,7,2,-7,2,5,-5,10,2,-3,8,-1,3,9,10,1,5,-1,9,-5,-7,-3,-7,-10,-9,-1,8,-4,-1,-6,-7,6,-6,2,-2,8,-7,4,4,-4,-8,9,-8,-9,-6,-9,-6,6,1,9,6,5,-8,9,2,4,8,-5,8,5,-1,-6,9,-8,1,6,-5,-3,9,-5,-3,10,-4,-10,-9,6,-9,-6,6,1,-3,7,9,9,1,-8,4,-8,2,-1,-2,2,9,2,-4,-7,3,5,3,9,-9,-8,6,1,3,1,-7,7,-1,-3,3,3,3,9,1,2,6,1,8,-1,4,-6,-5,8,3,10,-3,-3,1,4,9,-2,-8,10,6,8,-3,10,-9,-3,-4,-10,6,-3,7,-8,5,-3,2,-2,-5,8,-3,6,-1,-4,-2,9,-10,-6,2,-5,-6,4,2,-8,-4,-8,7,1,-5,-10,-1,-6,3,-10,-7,-2,3,-3,-1,3,7,2,-7,1,-8,-8,2,-2,7,-10,4,9,9,2,3,3,9,4,-10,6,6,7,-8,-2,10,1,-5,1,10,-2,-1,3,-2,-5,-1,-10,-7,-6,-7,-1,-2,1,1,-1,-7,6,-10,7,-5,4,-5,5,-3,-6,1,7,10,-3,2,-3,-7,-9,7,8,-8,8,-7,3,5,-10,9,-2,-7,-1,8,-10,-3,1,4,-4,2,-6,-4,-8,-10,-5,-6,-7,1,4,2,-6,2,8,7,-8,3,-7,-5,-6,-5,-4,-8,-6,1,-10,-3,-1,-4,-4,-1,9,8,-1,-2,6,9,-8,4,-8,3,9,4,4,-9,6,-1,-3,2,-10,2,2,7,-8,4,-6,-4,3,-5,4,3,3,9,-3,-2,3,-8,-3,5,-7,-7,-5,8,-7,-7,6,-4,-6,-4,2,-1,-8,-2,-7,4,7,9,-2,-4,-9,-3,2,3,-10,8,-1,-9,-9,3,1,2,-1,-3,-7,6,-7,10,-6,-1,7,8,-10,8,1,7,-1,1,-9,6,9,-9,-1,-10,-1,-3,10,-8,-2,2,-10,-5,-8,-2,9,3,10,-6,3,7,-7,-4,-2,7,-3,-7,-8,3,-9,4,-2,7,3,2,9,1,10,3,2,-7,-9,-5,9,6,4,5,9,8,5,-9,1,-10,-7,-6,3,3,10,-10,7,-6,-7,7,-4,7,8,6,6,-2,-9,4,-4,5,-5,2,2,-3,10,5,6,3,-10,5,5,8,8,7,9,5,-10,7,6,2,-1,-1,-1,-3,5,4,5,-5,6,-6,-7,-8,-9,-8,-7,4,7,7,2,-8,5,-9,6,5,10,-8,2,2,2,-8,-2,7,10,7,1,10,-7,-10,5,-6,7,-1,-9,10,-5,-10,-3,-6,8,-4,1,9,-3,5,-2,-6,-5,8,10,-5,8,-3,2,-3,-7,1,1,7,7,-5,-3,10,5,-3,-7,3,-4,8,6,-6,10,-10,-7,8,-9,5,-3,-1,2,-5,-2,8,-5,-4,10,3,-7,-5,-1,8,-6,-3,7,-7,-10,10,1,10,4,6,-3,-8,-3,7,-5,-4,-8,-10,-1,-6,9,2,3,5,-7,-3,-1,3,3,-6,6,9,-6,-9,-4,-7,10,-5,3,-10,3,3,4,8,7,-6,-3,-7,2,8,-10,2,-6,4,-7,4,-8,3,-4,-9,-4,-3,10,8,7,-1,-2,-10,-8,-2,9,-4,-2,10,8,6,-6,1,-3,9,6,9,-3,-8,3,5,-5,-8,-5,-2,10,5,9,2,-6,1,3,1,1,6,-1,-8,9,3,6,9,3,2,1,-1,-6,-8,-2,-2,10,9,-8,-8,-2,-3,6,4,7,1,-9,4,5,-2,-2,-2,-2,-4,9,-7,4,-9,3,10,-7,-5,-5,2,2,-9,-10,-9,-3,3,6,2,2,-10,5,3,3,10,9,-8,-8,7,9,10,-10,3,-5,-6,8,-1,8,-7,-4,-10,1,-5,-4,-6,-10,-4,-1,8,6,2,4,9,9,-4,4,-7,-2,5,7,-1,-8,-1,4,5,-7,-5,2,4,9,6,4,10,8,-3,7,-5,-9,-5,8,-4,-9,-8,3,6,-10,7,8,9,5,2,-6,-8,-3,-1,-5,6,3,8,-5,-8,-7,-10,-2,-10,3,-10,6,5,3,10,10,-5,-1,-9,-7,3,1,10,4,-2,-9,5,10,-7,-7,-4,-5,2,-4,-6,9,9,-3,-3,7,4,-8,3,1,3,-7,7,-8,1,1,4,-7,9,-10,-6,8,4,9,5,9,9,7,-9,-6,-8,8,-6,7,-4,8,5,-2,-3,10,10,-6,-7,-5,-1,-9,-8,2,-3,-9,-7,8,4,-3,-10,5,-2,1,7,8,-8,6,3,2,-9,2,10,10,-2,3,7,4,-10,-1,-4,4,3,10,1,3,-4,8,6,10,-2,-10,10,10,-2,8,9,9,-3,1,2,-6,6,-10,1,-10,2,1,5,-5,-4,2,4,-7,-10,-3,-10,-7,-10,-1,-7,-3,1,3,7,3,-1,-5,4,-6,-10,-7,5,-1,2,-7,2,-10,-7,-1,2,-6,-8,-2,2,-7,4,-7,7,-7,9,-8,7,8,-2,8,2,7,-4,-2,-6,1,2,-10,-5,8,2,-6,5,-2,-2,10,-2,-4,7,-5,5,-2,5,8,2,3,-3,4,-3,-4,5,-7,-3,5,6,-3,-7,10,9,-1,5,7,-5,7,-5,2,-6,-1,1,9,8,-2,6,-7,9,8,-6,-3,5,-2,10,-2,-5,3,9,-7,5,3,1,-8,10,6,2,10,7,8,5,2,-3,8,-1,10,-4,7,3,-8,3,2,1,-3,-3,6,2,-8,6,-6,2,-1,9,4,3,-6,5,-2,-9,9,-9,-9,-4,6,4,-7,8,-5,-5,-10,2,-7,-3,7,5,3,10,4,9,-6,-2,9,2,-8,4,7,5,5,2,-9,6,2,-3,2,6,3,8,7,-6,6,4,-6,-7,6,-2,6,-8,6,5,-1,3,-9,6,2,3,-1,-1,-6,7,8,9,-9,-4,-8,2,-2,-5,-7,-6,-4,5,6,4,6,5,3,10,3,-9,-5,-2,6,-9,-10,-2,-6,4,4,-3,1,4,4,-8,-10,-9,7,-3,1,-8,8,7,-6,5,7,10,-8,4,10,10,-10,-6,-2,-2,10,-2,-9,-4,8,-4,-9,-6,1,-10,3,-3,-1,-2,8,4,3,8,-6,6,2,-10,-6,-8,6,2,-10,-4,3,-5,-9,1,-6,-5,-3,-6,-3,-8,5,-8,5,-2,-4,-7,-2,10,-1,7,-3,-2,5,3,-6,-7,-6,2,4,6,10,-6,8,-6,-8,8,3,-8,-8,6,-2,5,-7,-9,10,-10,-1,-3,-2,-7,9,-4,5,-3,-2,7,2,-2,-8,4,6,-8,-8,-3,-7,-3,-8,-1,8,6,-4,6,4,7,-6,-9,4,-7,-6], dtype = "int32")#candidate|9588|(1575,)|const|int32
bop_9589 = relay.less_equal(call_9586.astype('bool'), relay.reshape(const_9588.astype('bool'), relay.shape_of(call_9586))) # shape=(1575,)
bop_9592 = relay.less_equal(call_9587.astype('bool'), relay.reshape(const_9588.astype('bool'), relay.shape_of(call_9587))) # shape=(1575,)
func_5117_call = mod.get_global_var('func_5117')
func_5118_call = mutated_mod.get_global_var('func_5118')
call_9595 = relay.TupleGetItem(func_5117_call(), 1)
call_9596 = relay.TupleGetItem(func_5118_call(), 1)
output = relay.Tuple([call_9547,call_9564,call_9576,bop_9589,call_9595,])
output2 = relay.Tuple([call_9548,call_9565,call_9577,bop_9592,call_9596,])
func_9607 = relay.Function([], output)
mod['func_9607'] = func_9607
mod = relay.transform.InferType()(mod)
mutated_mod['func_9607'] = func_9607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9607_call = mutated_mod.get_global_var('func_9607')
call_9608 = func_9607_call()
output = call_9608
func_9609 = relay.Function([], output)
mutated_mod['func_9609'] = func_9609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6321_call = mod.get_global_var('func_6321')
func_6322_call = mutated_mod.get_global_var('func_6322')
call_9654 = relay.TupleGetItem(func_6321_call(), 0)
call_9655 = relay.TupleGetItem(func_6322_call(), 0)
output = call_9654
output2 = call_9655
func_9660 = relay.Function([], output)
mod['func_9660'] = func_9660
mod = relay.transform.InferType()(mod)
output = func_9660()
func_9661 = relay.Function([], output)
mutated_mod['func_9661'] = func_9661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5876_call = mod.get_global_var('func_5876')
func_5878_call = mutated_mod.get_global_var('func_5878')
call_9715 = relay.TupleGetItem(func_5876_call(), 0)
call_9716 = relay.TupleGetItem(func_5878_call(), 0)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_9792 = func_4898_call()
call_9793 = func_4898_call()
output = relay.Tuple([call_9715,call_9792,])
output2 = relay.Tuple([call_9716,call_9793,])
func_9795 = relay.Function([], output)
mod['func_9795'] = func_9795
mod = relay.transform.InferType()(mod)
output = func_9795()
func_9796 = relay.Function([], output)
mutated_mod['func_9796'] = func_9796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_9829 = func_4898_call()
call_9830 = func_4898_call()
func_6416_call = mod.get_global_var('func_6416')
func_6418_call = mutated_mod.get_global_var('func_6418')
var_9842 = relay.var("var_9842", dtype = "float32", shape = (440,))#candidate|9842|(440,)|var|float32
call_9841 = relay.TupleGetItem(func_6416_call(relay.reshape(var_9842.astype('float32'), [440,])), 0)
call_9843 = relay.TupleGetItem(func_6418_call(relay.reshape(var_9842.astype('float32'), [440,])), 0)
output = relay.Tuple([call_9829,call_9841,var_9842,])
output2 = relay.Tuple([call_9830,call_9843,var_9842,])
func_9853 = relay.Function([var_9842,], output)
mod['func_9853'] = func_9853
mod = relay.transform.InferType()(mod)
var_9854 = relay.var("var_9854", dtype = "float32", shape = (440,))#candidate|9854|(440,)|var|float32
output = func_9853(var_9854)
func_9855 = relay.Function([var_9854], output)
mutated_mod['func_9855'] = func_9855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9056_call = mod.get_global_var('func_9056')
func_9057_call = mutated_mod.get_global_var('func_9057')
call_9914 = func_9056_call()
call_9915 = func_9056_call()
func_2059_call = mod.get_global_var('func_2059')
func_2063_call = mutated_mod.get_global_var('func_2063')
const_9919 = relay.const(0.562433, dtype = "float32")#candidate|9919|()|const|float32
const_9920 = relay.const([9.109618,-0.641403,-8.813788,-6.241639,2.822200,-5.328508,3.064760,3.924340,4.413059,5.813397,2.804628,1.578294,-6.224325,-6.215128,-4.732798,-2.474589,-8.550482,0.829623,6.689908,-7.278060,1.224516,-9.747050,-4.236950,6.701509,4.151952,0.739156,-8.892783,9.299797,3.433285,9.604262,-9.163569,1.446652,-3.671107,1.628193,-4.331022,-4.482659,9.635146,-0.127443,2.909668,4.415015,6.618211,5.422530,-7.721013,-2.584937,2.564455,3.764185,5.179455,-5.752825,4.258304,4.907211,-8.865808,9.672781,6.958715,5.326840,3.800144,2.746063,8.822554,5.537635,1.611017,3.835663,2.114033,-6.089999,0.535765,-0.589224,6.076455,-5.698095,1.334959,7.918893,-5.227584,4.763516,8.076513,-5.656196,-4.171206,-8.944472,6.552916,-1.281365,8.558100,-5.801631,2.514726,5.325972,-0.493175,-5.239032,-8.757953,-8.913068,-9.224716,-5.299710,-8.518900,-1.745859,-8.096892,-0.595450,-5.372762,-4.131848,-8.626586,-2.838403,4.527630,-2.697521,-0.618734,-8.206658,-0.396029,2.350861,-2.113516,-2.628234,-4.201916,4.739967,-4.486408,-7.650650,-8.777626,-7.869352,6.385330,9.513344,-0.861107,5.437572,-3.766202,5.421626,-3.500674,-1.299131,0.171610,-2.496399,3.252096,-5.259433,1.631380,5.077590,-1.417136,-3.298195,-0.329460,-9.664427,5.599175,1.329124,0.782384,-6.085400,7.297885,5.895833,-2.833304,-6.775741,6.832692,8.324182,-5.442162,7.820375,-2.789995,-5.626851,4.774528,2.769304,-9.169370,-4.467244,-2.967871,-0.695994,0.892267,-9.161147,0.912243,-4.714321,1.067271,7.015491,-9.893690,-2.808686,9.173599,8.750829,-9.555111,6.952730,-0.626706,-4.594735,8.404356,-0.411043,-7.649489,-4.614739,-7.891011,2.880492,-7.554353,9.909501,3.995662,5.473061,-1.100739,8.521165,7.537820,-4.989686,-0.420713,-7.647973,3.234946,0.050562,5.210520,7.387209,-0.578779,-8.042055,2.346399,0.837471,9.978945,4.631444,9.438232,-6.601191,-6.616781,-5.960365,-5.549907,-0.436384,-4.781224,6.261873,0.532272,3.801718,0.074751,-4.631953,0.092611,5.860828,-3.271470,-9.478042,6.293365,-4.274173,8.885273,3.263477,-3.555544,1.203297,4.583769,-2.959200,9.975363,-7.682704,5.091654,-9.987436,-8.625828,-1.207324,-2.354136,-1.640131,3.824273,5.762133,-2.291285,-2.618262,-2.828927,7.904808,7.391396,-4.666146,9.108300,0.550379,8.928234,7.124483,-8.841417,-1.286871,-9.342647,-9.233480,-9.292742,9.801547,-5.209237,2.263816,9.574061,-4.902511,-1.833483,-4.997232,3.700903,5.929745,4.920996,-9.983265,-8.348893,-5.686211,-0.707106,-1.832367,8.195869,9.223991,-9.874411,-6.616173,6.126188,-1.813571,-5.693086,2.047604,-6.918948,-9.801955,4.842379,9.077343,-2.767019,-6.746229,0.856106,6.327446,-4.654469,-4.611104,2.857880,2.678574,-7.841880,-8.373291,-6.396696,-1.694829,-7.958873,-2.148976,-4.563028,4.343744,9.561671,5.092066,1.626410,5.896144,3.365718,-4.233800,9.895942,2.702511,1.630260,-1.090173,5.978890,-1.934657,7.434190,3.570396,0.960618,-5.845772,-6.963712,4.020162,-7.068380,-5.840769,-2.430927,-2.197443,-3.519491,2.462448,-5.959375,2.957301,4.136054,5.546724,-9.496674,-4.792143,-1.681209,-8.314219,-8.558595,-9.606745,8.870557,-5.313970,3.747573,9.174403,-5.906769,8.479506,-3.788400,-6.691274,-9.422617,-8.261146,-0.352912,-4.714424,-3.121452,4.000309,-8.855812,5.778410,-0.505448,-1.481687,1.925186,0.899447,-8.332877,-3.348091,0.589475,-9.636260,-6.319795,-3.394359,4.091727,2.874009,-4.205674,-2.430849,-9.642354,-7.127877,7.271652,-7.606120,-2.435163,-4.238085,-7.588639,5.027837,8.268858,-8.007626,-5.686888,-4.591513,1.708563,4.012289,8.800894,3.211193,-1.952764,-0.594230,-0.441039,-2.538661,5.373130,7.616735,8.239447,6.939618,9.103844,-1.715571,3.292026,0.305476,1.230579,-2.323430,4.361657,-6.280624,9.888440,1.055236,-9.605533,-0.639101,0.312340,5.597832,-7.857708,8.084294,-1.223942,5.392673,0.823009,6.700301,-7.527192,2.601929,4.853958,9.667598,-7.021158,-8.552675,-7.258538,-9.568783,-5.291076,-1.056760,2.741960,-9.273595,0.463894,9.643582,9.650562,1.506448,-5.684219,1.486742,2.104966,-1.459431,6.262948,-2.490801,6.569457,0.427248,-5.398590,-9.433366,-1.617002,-0.828231,-8.929039,-0.046603,-5.654381,5.152942,-0.740458,-9.075069,0.678921,2.529860,2.461942,-4.890084,6.560013,-4.191684,3.761074,3.554611,-4.054588,-8.803111,7.586645,-3.775743,-7.643694,-3.788746,-3.152199,-1.163290,5.079289,-9.328337,1.394974,9.601238], dtype = "float32")#candidate|9920|(440,)|const|float32
call_9918 = relay.TupleGetItem(func_2059_call(relay.reshape(const_9919.astype('float32'), []), relay.reshape(const_9920.astype('float32'), [440, 1]), ), 3)
call_9921 = relay.TupleGetItem(func_2063_call(relay.reshape(const_9919.astype('float32'), []), relay.reshape(const_9920.astype('float32'), [440, 1]), ), 3)
func_7904_call = mod.get_global_var('func_7904')
func_7908_call = mutated_mod.get_global_var('func_7908')
var_9935 = relay.var("var_9935", dtype = "float64", shape = (1352,))#candidate|9935|(1352,)|var|float64
const_9936 = relay.const([-3.349372,8.837577,8.688468,4.283039,-5.364267,-6.170075,-3.281663,-1.816391,-6.232564,-4.465532,8.215825,4.438434,-5.582863,2.226891,-4.666946,0.219869,0.096921,-4.213324,-1.516119,3.672884,-3.921281,1.896855,-8.411830,-5.422294,-2.859323,-9.275307,2.706371,9.106224,6.737871,5.838747,0.894700,-3.860480,-4.603512,-3.318874,-8.278792,1.004654,2.909130,-1.411883,-3.015494,-7.780228,8.732020,6.846997,-6.008047,-6.687807,7.318847,-4.055597,6.934559,7.287404,1.344081,-3.207072,-1.205677,-2.934439,-3.648202,2.861444,-4.998218,8.583506,-0.229616,-2.766307,9.372739,-6.398872,7.420490,-7.920653,-6.760731,-6.816936,3.496658,8.800348,-0.333057,3.219855,-5.933795,-3.276264,-7.189784,-1.542093,-2.163769,6.311502,-2.367603,-8.872108,-5.032166,-5.853078,8.203801,9.995254,1.142588,-2.373594,-9.250376,-6.282320,-4.688824,3.971473,1.661212,1.192229,3.821557,3.446570,5.438096,3.328243,-2.430132,-4.260799,-7.011992,-9.167590,-1.197021,2.695665,-8.799419,-1.802080,-0.804979,2.124708,6.770149,0.820965,-9.412972,-1.122499,2.235324,5.359808,6.663230,7.375506,6.781945,1.137126,-0.728184,9.260508,1.294250,6.867287,6.200221,3.615986,8.499817,9.492286,5.858291,5.400621,4.166695,8.278001,-7.746578,-6.999812,-5.388614,-4.215193,8.925733,-5.351697,5.885331,-7.076250,-0.601891,4.780940,4.969071,5.264548,1.584040,2.709088,-9.401380,7.640786,1.417904,-5.194834,-5.793908,-8.950693,-7.161072,-8.573700,-0.148804,5.761680,-2.861594,-7.756201,6.952692,-0.898653,8.239423,-6.524297,-4.208485,-1.060071,5.141014,-3.100169,3.477845,7.246309,2.090985,8.053067,3.145955,-4.736178,-6.492749,5.336991,9.446316,-5.185555,7.442898,-8.318156,-3.115793,4.878759,8.500212,5.666264,-6.204062,5.412111,-1.802080,4.473096,7.354377,9.462729,-1.558882,2.554592,0.960728,-4.370799,-0.819263,-8.403091,-5.466160,2.217706,1.334286,-0.422328,8.184178,2.869249,7.497644,8.298615,4.580372,-8.073004,4.756848,1.410397,1.586930,2.503606,-1.852443,-1.197212,1.882183,-6.255704,0.471467,-1.658478,-1.403653,-5.176791,-4.029774,-9.173414,1.961784,-7.150521,3.772515,7.776823,0.027946,-6.556753,-4.327875,-8.728005,-1.716349,0.239951,-2.630339,9.823588,8.848145,-2.168283,7.897929,1.362595,7.981125,-3.453903,1.841006,5.531185,-4.525195,-9.258244,-7.083251,2.450892,-9.341477,-0.624334,-2.087745,3.166048,-8.252771,-9.555577,2.757114,-3.545067,4.048217,2.465939,-2.261270,6.699449,-6.862367,1.229190,7.448913,-3.490732,0.002256,-3.423562,-2.258641,-9.791873,6.690163,-4.426607,-7.545300,8.880916,1.635554,5.874296,9.285892,1.577698,-1.982234,-3.127880,4.571183,6.855582,-1.454248,-2.936459,-1.463616,2.108563,3.517287,-4.118542,-3.936786,3.865335,-7.491675,6.244411,-3.389497,2.215171,0.575777,-3.074720,-3.743000,-2.572145,1.679666,2.787025,4.065073,7.322390,8.890706,-2.161871,1.174950,4.746493,-4.038735,8.689163,6.653393,-5.339582,-7.366204,3.998117,-1.460509,7.527227,8.518969,4.136502,9.815729,5.881166,-5.037694,-6.596610,-5.469960,3.370415,-2.156673,8.124518,-8.122911,6.125073,-2.566969,9.957875,-2.508047,-7.661385,-8.490621,-3.939636,-3.348525,-5.021715,7.127676,-8.347592,-2.828355,6.466724,-8.952630,5.003242,-4.122548,1.803199,0.547617,6.272019,-8.869070,4.871308,-7.658945,-6.031105,-6.638003,2.978397,-1.813380,2.197449,-7.893842,6.864863,0.426187,3.759871,3.232015,-2.103519,7.342136,-8.554174,0.272873,-3.534968,2.753779,-7.623889,7.540090,-6.765609,5.183866,2.378466,-4.767651,-3.393877,9.165333,2.777548,-5.387106,7.114082,7.584760,9.828906,-5.045831,-3.218352,1.489304,7.627187,8.385503,-2.931733,6.700695,-8.507260,-4.347361,9.209991,-8.468853,2.229097,-2.307162,-7.607502,-3.244165,-4.312231,-9.806142,7.066827,8.738604,-1.215722,-9.545421,0.412731,-5.467745,7.500290,-7.051508,-8.709231,9.055407,3.632453,6.792988,0.737769,-2.682458,-3.333468,5.454349,-6.290640,-4.362359,2.941088,6.332722,-4.469636,-7.360421,-0.522277,-0.669409,1.437004,-5.468275,7.307003,-5.635200,-5.692151,-7.971993,9.449479,-7.210891,-2.132066,9.852654,9.628014,-3.108250,-4.898185,4.941359,6.754777,-1.474818,9.654347,8.001953,-2.481040,7.987060,-4.204451,9.354349,6.208115,2.544528,-0.664367,7.672395,2.441524,4.771982,-7.517912,5.623156,-5.801362,-0.367527,-3.673819,-8.380614,-7.208172,1.605917,4.001217,-0.174256,-6.618881,-2.544574,-7.500893,-9.982275,0.024302,-7.789732,-4.554853,2.438060,4.284818,-5.160255,6.228050,-8.232160,1.568525,0.413679,-3.255945,5.267993,9.436921,1.451047,-7.561340,-9.969055,7.849689,7.766883,-9.856292,-1.829463,5.407799,8.911395,5.802434,-5.768599,-1.783636,0.072296,2.972603,2.788436,-6.788358,8.794098,9.459673,-6.270426,-5.127429,-5.484392,-5.250710,-1.356685,-3.313391,-4.985060,0.633495,-7.594635,-0.686266,-2.718152,-8.947309,7.741121,-3.041377,6.371569,-9.434195,-4.276394,-8.095906,5.002896,2.368776,-2.014499,0.958707,2.834569,7.246531,-1.419587,2.889035,6.631086,7.035663,-9.964007,1.542918,0.437489,7.371260,-0.087118,-9.264568,-0.760139,4.061981,0.597218,8.439218,2.958818,-6.010027,9.478973,-2.332031,-3.265686,3.981436,4.602334,-7.984077,-3.442493,-9.860305,0.079588,-9.484669,-4.869880,-1.104636,-3.838565,-7.171489,-9.720726,-7.336152,-7.189693,4.765056,-6.763618,9.338758,8.093151,-0.109287,1.682579,6.265908,0.712246,-2.607361,5.324560,-6.866960,3.770794,-9.892652,7.080479,1.474580,5.549070,-8.222334,5.333600,-9.114862,-2.118959,-9.462379,9.275767,-4.970829,3.632492,0.133965,-8.461718,-6.311664,-1.017661,6.020220,4.845287,-2.033596,0.699662,-7.583849,-7.547030,-2.096799,3.207630,2.660359,-9.079793,-3.934186,-8.431332,-6.573169,4.281997,-3.208427,1.260159,3.456964,-1.149671,-3.728403,2.577716,-2.183192,3.267583,-8.850771,0.759072,0.947656,6.266103,5.132611,1.931728,-5.860309,0.563498,8.215269,3.646540,8.582902,-9.944229,7.273163,2.729556,7.469617,-3.514666,2.939707,0.508795,8.155450,-7.449240,3.978859,0.316808,-5.140266,-2.627785,7.082422,8.815453,-8.662753,-4.922213,7.411272,7.941049,-1.344057,-3.769129,-5.107364,0.869905,-4.104694,-2.422990,1.264738,-2.132799,-1.000770,1.625060,-3.198686,7.709632,-9.406175,-0.770891,3.636033,6.620204,-3.526166,0.713221,7.781711,-5.356963,7.920604,0.805462,-3.852425,-3.725705,7.549100,4.422639,-8.870807,-9.311117,-3.186824,-6.759040,-4.337684,-2.518139,6.317159,2.566126,-7.564458,0.248627,8.098786,-4.417529,-8.430510,-8.648908,6.131357,3.885015,-1.301825,-1.185838,-7.114901,-3.140180,-4.752176,1.943684,7.552717,1.736018,0.824503,3.247450,5.089515,-6.417476,-4.915045,1.980689,-5.824123,-2.625556,-8.261101,-2.927779,4.336724,-6.799187,3.028963,-1.382809,-9.142066,-2.359681,-6.011676,-4.713799,8.816290,0.527407,-1.424269,2.157206,7.754173,4.520382,9.318230,-6.363533,7.997715,-1.856805,1.567980,8.866687,-7.307836,1.911535,4.529445,4.894852,-7.886825,-7.090974,2.387317,-6.755268,6.952732,3.166561,2.750015,-8.864785,-6.953860,1.215285,9.920107,0.352616,-1.595087,-9.019310,1.646081,-3.138155,-1.155260,-9.432732,8.643727,-7.875195,-1.870849,7.368986,4.575041,-8.064013,-4.550115,2.285930,-7.493575,-6.268256,7.778348,-2.243244,-1.838281,2.359250,-7.876402,-2.529456,-2.717224,-4.146473,-5.119005,-0.982780,9.281592,2.170784,-7.678238,3.788558,-7.926453,5.429810,-8.136429,-0.311913,-8.023095,6.588746,7.791924,-0.590658,-2.145324,-4.781751,-7.502093,6.421632,-7.552276,-8.693142,5.007598,8.276126,0.690896,-0.608559,8.967736,-5.015827,-4.115826,-9.127438,1.750970,6.613822,7.189791,9.469307,-5.334790,-8.309981,3.702182,4.170446,-8.515776,-2.023152,6.274841,-5.423253,7.803156,-4.365110,-9.015851,9.760409,-0.489996,-4.013305,9.999429,9.653023,-0.262156,-3.910734,-5.318058,-2.399026,-0.018407,-3.932427,4.717847,-2.655391,7.839296,-9.459740,4.343495,-1.436645,-3.746114,-1.543100,-0.292814,2.951334,8.612229,-2.279804,8.194234,-6.991811,-2.561508], dtype = "float64")#candidate|9936|(800,)|const|float64
const_9937 = relay.const([2,1,-4,-1,-9,-10,5,1,-2,9,-10,-10,6,-9,4,-2,-7,-6,-3,6,9,5,1,-9,-10,2,3,3,4,4,7,-6,9,7,-8,-4,-8,1,2,6,-6,6,-2,9,-2,-6,8,-3,-2,1,-5,7,1,-7,-5,8,1,3,4,7,-4,5,5,-1,2,8,-6,-3,10,1,-10,1,5,-3,5,-5,5,10,-9,6,4,9,9,-6,-9,-6,-8,-10,-2,-1,5,7,7,-1,-10,-6,-10,-4,-6,-10,7,-3,5,-7,-8,-6,-6,4,-10,-10,1,5,-2,2,9,-2,-10,-3,-8,-1,-3,-9,10,2,8,10,-7,-1,-6,-4,7,-5,-1,-1,1,5,-1,-2,-10,10,-4,5,7,-10,-1,10,-10,-4,-3,2,-8,-9,3,-9,6,9,10,-3,2,-10,10,10,2,3,-10,1,-1,-9,10,7,7,-7,-2,4,6,6,3,-5,1,-2,2,8,-2,10,-5,1,5,-7,-10,10,6,-1,-1,5,4,-2,1,-2,9,6,-8,-3,4,-9,-4,10,2,-8,8,6,1,8,10,-4,1,10,-8,2,7,-8,-8,-9,-10,5,10,-1,9,-2,9,-5,-7,-10,8,-9,-1,5,5,-10,-1,-6,6,2,7,2,2,-6,2,4,-8,-6,9,-8,5,3,5,-7,-5,4,-4,7,4,5,-1,-8,3,8,5,-8,4,-6,-1,9,5,7,2,5,1,-3,-2,-1,-7,9,-5,-4,-8,-7,5,-4,-1,-10,-9,8,7,-2,4,-4,-2,-5,-9,5,9,-8,-10,-5,-7,4,9,4,3,5,-9,10,-1,8,2,-1,9,-7,4,-2,8,5,-7,-3,6,10,8,-9,-3,-1,2,9,-1,-2,8,-6,-9,-4,-1,-9,-9,-4,-8,-6,-10,7,-8,5,3,-6,1,-9,-2,-9,4,-4,6,7,-1,-5,1,4,10,-1,-7,6,-9,-10,-2,8,8,6,-9,8,-8,-2,-6,-8,-6,-9,-6,-2,-2,5,-3,9,-4,7,-9,-5,9,8,6,10,-7,-6,4,9,10,1,9,-7,6,-6,1,4,3,-3,-1,2,2,2,-5,3,5,3,3,-6,-3,3,-8,-4,-10,9,-10,9,10,-7,10,-4,-3,8,-4,2,-9,-3,-2,7,6,3,-8,7,2,4,-5,9,-3,3,-3,7,1,-8,-9,-5,10,10,-10,5,2,-4,-6,-6,-1,-6,-5,8,-5,9,1,10,3,9,-8,7,-4,6,5,-6,-10,-1,-7,2,-5,-7,-8,10,-8,7,5,-5,-5,6,-2,6,-7,10,-8,-8,-3,1,-6,5,2,-10,-3,4,6,8,4,-4,3,-9,-6,3,-3,-3,7,-3,-9,6,7,-10,1,5,-1,10,-4,-2,5,-2,-2,-7,2,-8,2,2,3,4,-9,-1,9,4,-8,4,6,2,-10,6,7,-2,9,8,-6,-6,-3,-7,8,-6,10,10,5,-3,-8,-6,7,4,3,-8,6,6,-2,-4,6,7,-9,3,6,8,7,9,-3,9,-6,-7,-2,-4,7,7,7,1,-10,1,-10,-9,4,-2,4,-4,-8,-5,-5,-9,6,-6,-9,-8,-3,4,-9,-2,-5,-1,-6,9,8,-6,-2,5,-2,-10,10,-1,-6,-8,-2,-9,3,-5,-7,-4,-10,-7,-7,2,-3,-2,10,-8,2,1,-6,-10,10,-9,10,3,-4,-4,-3,2,-9,-3,-2,5,-8,-8,7,-3,-1,-6,-8,5,-1,4,-5,4,-5,-3,9,-10,4,-9,-6,-10,7,-10,-6,6,3,-3,-8,-4,-5,9,5,-9,7,-2,2,-10,7,-5,-6,-2,3,-9,4,6,-2,-1,4,8,10,6,9,5,7,-10,-3,4,-10,10,10,-3,-9,-9,-6,6,-4,-2,-8,10,-6,-10,5,-8,-1,-8,2,-1,-10,6,7,4,4,-6,-2,10,7,9,-8,-6,5,9,-7,-10,3,5,-10,1,6,8,4,-7,10,2,5,6,-1,-9,5,7,7,-6,-10,1,-6,1,-7,-10,4,-4,7,-1,4,9,9,-5,-6,1,10,2,-1,6,1,4,8,-6,-9,-7,5,10,2,8,8,3,-1,6,8,-9,-9,-6,-2,-4,-9,2,7,-10,9,6,-9,-7,-6,4,4,4,-8,-8,5,1,-5,10,9,10,7,-5,-8,7,-3,9,4,-1,-8,-5,3,8,1,9,-7,-7,-6,1,5,8,-10,-7,10,9,7,10,-9,9,6,7,-6,8,-7,5,-10,3,-8,4,-8,-8,6,6,-6,-3,-2,8,7,1,-8,7,7,-5,10,-7,-4,-5,2,-6,-8,-5,-1,2,10,3,2,-3,4,6,-9,4,7,-4,5,-9,8,5,4,1,-3,-1,8,3,-4,-6,3,6,9,9,9,7,10,9,3,10,-6,-2,5,-6,6,1,10,-9,7,-5,6,4,-7,-1,-6,-8,-2,-7,-8,7,3,-5,-5,-5,2,7,-5,-3,-7,-5,-3,-5,3,-3,5,7,6,-2,-4,-3,9,4,2,-8,-10,-2,-6,-10,-9,2,-1,-1,-8,-7,-1,1,-10,-4,10,3,-5,-5,-4,-9,-5,8,-9,4,3,10,-4,6,3,8,3,7,8,8,6,8,8,9,6,-3,-7,-5,-3,4,-2,-3,-6,1,-2,-8,6,-10,-4,2,-4,-1,9,3,8,1,-10,2,-5,-9,-4,3,-5,-4,6,8,-2,-3,4,6,5,-1,2,-10,8,3,-8,-2,3,-9,6,9,6,-1,-9,-4,6,9,7,-6,3,-7,-8,-4,-6,8,-2,-10,-2,-1,-9,5,-8,-5,6,-2,-9,-9,-9,-7,-8,7,-5,-10,-9,8,-6,5,-9,-3,-10,-5,-3,7,9,-8,-1,9,-1,3,-10,10,-3,-1,5,-9,-8,-3,9,4,-6,-7,7,-2,-2,10,5,-9,-7,1,4,-5,4,-5,10,3,2,-4,3,-9,1,9,1,2,-8,-8,-3,-5,4,10,-7,-9,-2,-10,-9,1,8,5,8,7,-2,-8,-9,2,3,7,-4,1,-1,10,-9,1,-1,-7,4,6,-1,9,-9,5,-2,2,-3,3,-3,6,-3,9,3,-2,-2,-1,5,4,2,4,4,-3,8,-10,6,-2,3,3,-9,-1,5,5,5,-6,1,-2,-7,-1], dtype = "int8")#candidate|9937|(1200,)|const|int8
call_9934 = relay.TupleGetItem(func_7904_call(relay.reshape(var_9935.astype('float64'), [1352,]), relay.reshape(const_9936.astype('float64'), [1, 800]), relay.reshape(const_9937.astype('int8'), [1200,]), ), 5)
call_9938 = relay.TupleGetItem(func_7908_call(relay.reshape(var_9935.astype('float64'), [1352,]), relay.reshape(const_9936.astype('float64'), [1, 800]), relay.reshape(const_9937.astype('int8'), [1200,]), ), 5)
uop_9941 = relay.cos(var_9935.astype('float32')) # shape=(1352,)
func_5679_call = mod.get_global_var('func_5679')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_9949 = relay.TupleGetItem(func_5679_call(), 0)
call_9950 = relay.TupleGetItem(func_5680_call(), 0)
func_6189_call = mod.get_global_var('func_6189')
func_6193_call = mutated_mod.get_global_var('func_6193')
var_9959 = relay.var("var_9959", dtype = "float64", shape = (1456,))#candidate|9959|(1456,)|var|float64
call_9958 = relay.TupleGetItem(func_6189_call(relay.reshape(const_9920.astype('float32'), [440,]), relay.reshape(var_9959.astype('float64'), [1456,]), ), 4)
call_9960 = relay.TupleGetItem(func_6193_call(relay.reshape(const_9920.astype('float32'), [440,]), relay.reshape(var_9959.astype('float64'), [1456,]), ), 4)
func_6784_call = mod.get_global_var('func_6784')
func_6785_call = mutated_mod.get_global_var('func_6785')
call_9962 = relay.TupleGetItem(func_6784_call(), 0)
call_9963 = relay.TupleGetItem(func_6785_call(), 0)
output = relay.Tuple([call_9914,call_9918,const_9919,const_9920,call_9934,const_9936,const_9937,uop_9941,call_9949,call_9958,var_9959,call_9962,])
output2 = relay.Tuple([call_9915,call_9921,const_9919,const_9920,call_9938,const_9936,const_9937,uop_9941,call_9950,call_9960,var_9959,call_9963,])
func_9971 = relay.Function([var_9935,var_9959,], output)
mod['func_9971'] = func_9971
mod = relay.transform.InferType()(mod)
mutated_mod['func_9971'] = func_9971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9971_call = mutated_mod.get_global_var('func_9971')
var_9973 = relay.var("var_9973", dtype = "float64", shape = (1352,))#candidate|9973|(1352,)|var|float64
var_9974 = relay.var("var_9974", dtype = "float64", shape = (1456,))#candidate|9974|(1456,)|var|float64
call_9972 = func_9971_call(var_9973,var_9974,)
output = call_9972
func_9975 = relay.Function([var_9973,var_9974,], output)
mutated_mod['func_9975'] = func_9975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7689_call = mod.get_global_var('func_7689')
func_7690_call = mutated_mod.get_global_var('func_7690')
call_10032 = func_7689_call()
call_10033 = func_7689_call()
func_6878_call = mod.get_global_var('func_6878')
func_6880_call = mutated_mod.get_global_var('func_6880')
var_10064 = relay.var("var_10064", dtype = "float64", shape = (392, 1))#candidate|10064|(392, 1)|var|float64
call_10063 = relay.TupleGetItem(func_6878_call(relay.reshape(var_10064.astype('float64'), [7, 56])), 2)
call_10065 = relay.TupleGetItem(func_6880_call(relay.reshape(var_10064.astype('float64'), [7, 56])), 2)
func_1300_call = mod.get_global_var('func_1300')
func_1304_call = mutated_mod.get_global_var('func_1304')
const_10082 = relay.const([4,6,6,8,-4,6,-5,10,-10,-2,3,6,-2,1,3,5,-3,-7,-8,10,-1,-3,-9,10,-3,-2,2,8,-6,9,7,7,6,1,-9,5,5,-8,-2,-6,1,-3,-7,6,-2,-3,10,8,-3,9,8,-4,1,-9,-10,-7,-2,5,-3,-3,7,-1,5,2,-8,2,4,-9,7,9,-5,-2,9,8,-8,7,6,-2,-7,9,-5,1,6,-6,2,-10,-2,-3,10,2,-2,-5,7,7,10,-1,-6,4,-4,5,-6,2,7,-10,7,-7,1,5,-9,-1,-10,-6,7,-8,-2,7,-8,-7,-4,-4,-7,8,-4,5,5,4,10,-2,2,8], dtype = "int16")#candidate|10082|(130,)|const|int16
const_10083 = relay.const([[-5.077148,4.251369,-9.182040,0.280562,1.795714,-9.716635,-6.349079,-2.970710,-8.053124,3.383504,6.265873,-6.819016,3.744926,8.556311,-9.433000,4.232666,1.953066,-8.640583,-3.092360,9.620881,-1.455786,0.312324,-4.687687,8.679106,-0.626535,9.483660,-8.951343,-1.622957,8.087231,6.089082,3.001876,-2.893877,-2.967709,5.107910,-0.936799,-3.240128,-6.625679,-5.923250,0.545537,3.040052,-7.268571,-7.766330,-6.917289,-4.519759,-5.918650,2.754890,-6.402619,-7.649067,-8.016271,-3.969028,5.834738,4.069160,-1.816758,-2.685587,-4.663714,7.780763,-5.411867,3.015670,-2.889127,-2.526987,-4.743690,8.832305,6.397912,9.516091,1.387672,2.480862,-6.720798,-7.337169,-9.995538,-3.385377,-6.949894,9.694350,0.838377,0.654641,2.827216,-2.626302,5.047425,-3.826828,-4.349361,-5.240171,5.563369,-5.799054,1.021297,-1.403109,8.582124,-9.862350,-6.464268,7.603790,-2.449745,-7.910506,-4.938351,0.514325,-1.768117,0.548131,8.778509,-5.458260,8.221022,-0.254156,3.988840,-4.746934,-2.250040,-0.100387,-4.890585,-1.988886,-0.316971,-7.252873,-0.108941,-4.633579,-9.193617,3.482507,8.263622,-5.629622,-3.690598,9.083803,-9.338555,-8.771851,-4.704419,6.279934,-3.667675,-1.516522,-8.828268,-2.654313,-6.529896,9.357516,-3.686339,3.785416,-2.073462,-6.883059,-1.665170,-0.140070,4.143529,1.793239,1.561000,-1.675093,2.852987,-9.897813,-5.667059,-7.887805,7.203441,8.150030,-4.134484,-3.920180,-0.110236,2.378795],[-7.327621,8.263610,-7.173573,-0.317633,-3.618150,-2.811430,2.792783,7.805254,9.352235,-5.725531,-5.805771,-4.371040,-9.302501,9.056167,9.780105,-9.677582,1.625912,2.413965,-6.752824,4.958819,-8.925807,-3.213814,5.649471,7.263027,2.556501,5.904264,4.193108,-9.220550,-3.893345,8.660291,-6.593842,-5.967123,6.510874,-8.117334,5.342273,-1.402436,0.513529,2.534427,1.635972,2.188486,-2.567594,-0.375269,-6.249006,-4.963358,-7.208908,-4.946063,3.489307,-8.256091,-7.836286,-1.566300,4.232095,6.677924,-0.519833,1.350319,-3.493833,-8.131887,3.366564,-5.464681,-1.460933,9.076497,-8.335562,8.821989,-2.803870,0.348641,-1.974077,-8.161251,-8.124417,-9.765275,-2.774525,-9.608837,-7.189856,2.459869,7.413105,5.437866,-3.340644,8.055587,-9.164198,-1.048850,-3.385389,2.666622,-2.375173,-4.448016,-4.531262,5.823288,-1.335228,5.252006,-1.632988,0.114120,-3.682769,6.382558,1.897172,-9.649774,-6.695902,-6.614283,-9.949603,0.114637,7.329456,7.504917,4.136160,-9.884899,4.685906,-2.727685,-1.232367,1.140961,3.600773,-1.158969,1.888550,-8.237419,8.858303,2.023391,2.835755,-7.421331,-7.528213,-4.746233,-7.974994,-2.709365,-4.126701,-9.040689,-8.672062,4.171127,-7.603428,-6.167540,-6.647946,6.666358,1.584427,4.131751,-1.091910,4.840205,-6.894883,-6.562831,-7.594436,-4.106439,2.209920,2.781381,-6.071692,4.744005,-5.935310,9.026276,2.586798,7.431047,4.886431,7.842396,-3.901812,-5.009519]], dtype = "float32")#candidate|10083|(2, 144)|const|float32
call_10081 = relay.TupleGetItem(func_1300_call(relay.reshape(const_10082.astype('int16'), [13, 2, 5]), relay.reshape(const_10083.astype('float32'), [8, 36]), ), 2)
call_10084 = relay.TupleGetItem(func_1304_call(relay.reshape(const_10082.astype('int16'), [13, 2, 5]), relay.reshape(const_10083.astype('float32'), [8, 36]), ), 2)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
var_10090 = relay.var("var_10090", dtype = "float32", shape = (1092,))#candidate|10090|(1092,)|var|float32
call_10089 = func_109_call(relay.reshape(var_10090.astype('float32'), [12, 7, 13]))
call_10091 = func_109_call(relay.reshape(var_10090.astype('float32'), [12, 7, 13]))
func_9324_call = mod.get_global_var('func_9324')
func_9326_call = mutated_mod.get_global_var('func_9326')
call_10096 = relay.TupleGetItem(func_9324_call(), 0)
call_10097 = relay.TupleGetItem(func_9326_call(), 0)
output = relay.Tuple([call_10032,call_10063,var_10064,call_10081,const_10082,const_10083,call_10089,var_10090,call_10096,])
output2 = relay.Tuple([call_10033,call_10065,var_10064,call_10084,const_10082,const_10083,call_10091,var_10090,call_10097,])
func_10102 = relay.Function([var_10064,var_10090,], output)
mod['func_10102'] = func_10102
mod = relay.transform.InferType()(mod)
var_10103 = relay.var("var_10103", dtype = "float64", shape = (392, 1))#candidate|10103|(392, 1)|var|float64
var_10104 = relay.var("var_10104", dtype = "float32", shape = (1092,))#candidate|10104|(1092,)|var|float32
output = func_10102(var_10103,var_10104,)
func_10105 = relay.Function([var_10103,var_10104,], output)
mutated_mod['func_10105'] = func_10105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7776_call = mod.get_global_var('func_7776')
func_7777_call = mutated_mod.get_global_var('func_7777')
call_10161 = func_7776_call()
call_10162 = func_7776_call()
output = relay.Tuple([call_10161,])
output2 = relay.Tuple([call_10162,])
func_10194 = relay.Function([], output)
mod['func_10194'] = func_10194
mod = relay.transform.InferType()(mod)
mutated_mod['func_10194'] = func_10194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10194_call = mutated_mod.get_global_var('func_10194')
call_10195 = func_10194_call()
output = call_10195
func_10196 = relay.Function([], output)
mutated_mod['func_10196'] = func_10196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mod.get_global_var('func_6784')
func_6785_call = mutated_mod.get_global_var('func_6785')
call_10228 = relay.TupleGetItem(func_6784_call(), 0)
call_10229 = relay.TupleGetItem(func_6785_call(), 0)
func_7491_call = mod.get_global_var('func_7491')
func_7493_call = mutated_mod.get_global_var('func_7493')
call_10230 = relay.TupleGetItem(func_7491_call(), 0)
call_10231 = relay.TupleGetItem(func_7493_call(), 0)
output = relay.Tuple([call_10228,call_10230,])
output2 = relay.Tuple([call_10229,call_10231,])
func_10260 = relay.Function([], output)
mod['func_10260'] = func_10260
mod = relay.transform.InferType()(mod)
mutated_mod['func_10260'] = func_10260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10260_call = mutated_mod.get_global_var('func_10260')
call_10261 = func_10260_call()
output = call_10261
func_10262 = relay.Function([], output)
mutated_mod['func_10262'] = func_10262
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10263 = relay.const([[[4.133331,0.271374,5.607610,-1.817613,1.041416,-0.641533,6.986308,-6.908557,-7.633367,-0.380989,9.902599,-6.291662,5.258245,-9.772000],[2.119103,6.376672,9.665418,-4.288297,-2.336320,-7.109573,-2.934709,0.184243,6.334107,-1.354282,-6.650766,-5.830166,8.488024,-3.578967],[-6.859715,8.676864,-5.430818,-6.744932,2.409150,-7.537405,7.726444,-1.905351,-2.661776,-0.082726,7.958455,1.434947,8.550138,6.212487],[-2.637055,9.561146,0.075970,-1.327138,-2.535590,6.620577,2.961686,3.452552,7.392956,6.836241,1.827828,5.422865,-7.640453,-3.366760],[-9.219414,3.338101,4.761525,5.071449,7.575408,5.217718,-0.924802,2.818271,-4.272526,-3.946764,-7.123504,0.102796,0.964708,-3.266139],[4.240917,9.680357,6.044686,-8.902480,-4.782849,2.654437,-8.819009,0.297568,5.555078,-8.230191,6.932637,0.200539,-9.290957,0.673621],[8.881242,-1.513069,-0.130852,-3.328822,-3.001547,1.074194,-6.446652,-4.419730,1.541656,3.640614,-1.987379,-7.863334,0.552305,-7.196009],[2.566121,4.510388,9.115216,8.653435,-7.941916,7.486843,0.278270,2.465357,7.667528,-1.553483,1.498823,-6.646902,5.363726,1.686875],[-2.568629,2.731292,8.292170,2.265718,-4.924324,-2.584968,-2.890214,9.395556,-9.160661,-5.040574,-5.539245,-7.500091,-0.336295,3.413387],[-6.038979,-6.599725,-9.862223,-7.004296,8.275262,8.712845,-9.458803,-6.033690,6.619074,-9.053059,-7.359596,-0.204213,6.333474,-5.888650],[7.889215,-3.676929,-6.077031,-2.604299,-9.606876,-1.631700,-3.061761,7.231392,6.145014,-0.613921,3.122488,4.918968,6.699700,-3.238889],[-8.856545,-8.960005,-5.566360,5.299785,-9.097650,-1.867961,-1.879431,-7.159258,-1.427794,-4.717439,4.083043,-4.280169,7.685025,-4.122879],[3.085810,-2.859240,9.344218,8.594199,9.782453,-1.856151,0.344115,-6.301451,9.275269,-9.978861,-4.542733,6.977827,6.014382,-0.585117],[0.600770,3.471664,9.245463,5.139534,3.476068,-3.057587,3.139309,-2.200514,7.303464,1.717904,1.951011,-0.717319,-3.409340,3.151537],[-3.768607,-8.598890,-9.097141,-4.978567,1.455067,-9.995562,0.694347,3.396670,5.454198,9.733775,-1.060186,5.070102,-1.710495,2.326429]],[[7.482399,9.029354,-6.211245,-0.453989,9.858081,-3.940530,-3.260722,7.448206,-3.426811,-6.252505,-4.511492,-2.777479,-2.382238,-3.323376],[-3.400569,5.264801,-6.055247,0.013243,6.596220,6.845956,-0.023291,3.812735,-2.666196,-9.311420,-8.586810,-5.422857,-0.854139,4.036156],[-2.388313,-8.910009,-4.680678,3.424889,-8.189834,2.612959,-6.874648,-4.106652,4.838045,3.466107,9.343072,-1.231571,-1.983914,-2.601174],[7.183769,-8.062052,-0.037142,-7.936135,-8.416062,7.841469,-6.608389,-4.343214,-2.549443,-6.276815,8.127730,7.915407,0.419371,-4.067533],[3.121168,0.109796,-6.095803,-6.425876,-4.785903,8.925519,-0.185197,9.347743,-5.327885,6.387038,-0.836593,-3.713677,7.516073,-1.483118],[9.246164,7.689466,-3.652498,9.841219,-9.763259,5.095722,0.797557,3.876494,1.248957,-9.049625,9.585436,-7.295191,3.438582,9.151465],[9.236727,-6.246570,-1.943050,6.112911,-6.102290,4.822160,-7.958522,3.041100,-2.711768,-4.801186,3.497036,2.673283,-0.845111,-4.829329],[-9.842816,5.889596,-7.563136,-7.928347,1.367250,6.832213,-5.001304,-1.636136,1.145806,-9.024695,-3.040007,1.232209,-8.709898,-1.480040],[6.358821,-8.733130,-4.803134,4.241606,5.796533,9.308389,3.760875,-4.175234,-8.735160,-5.938679,-5.736980,6.684378,1.659606,-7.458787],[9.862136,3.172738,-3.925814,-2.465905,4.651291,1.071091,4.519750,0.925229,6.298899,-4.166360,-1.166857,7.139958,-6.509174,4.536832],[1.292439,7.121975,7.016139,2.568032,-8.281769,-2.735899,9.681807,4.408608,8.406001,7.117116,-6.512609,-4.437307,0.962024,-9.975020],[-0.236405,1.204960,0.305773,-4.432735,6.051711,-9.056199,4.349428,4.687643,-2.569767,5.944842,7.278530,-5.574784,-4.129876,-8.466663],[-0.362235,0.078712,1.230462,8.041343,3.933916,7.129614,3.832177,6.678454,-7.427147,-6.115455,0.548047,-6.225415,-3.896871,-3.875896],[0.074565,-0.618960,8.608972,-3.917659,2.300845,-7.973870,9.494426,2.999685,1.949205,0.288027,-5.196180,1.369997,1.715057,-0.736797],[-8.411321,0.517635,-4.202444,-5.224965,6.800939,-6.940653,-3.636580,-6.658689,-6.476833,-8.093978,-5.768125,1.141615,1.781038,-0.602530]],[[4.603712,3.394081,2.786840,4.479382,-2.861667,-1.114826,5.539208,-5.007505,7.619110,4.249448,9.454741,4.116163,-3.820602,-4.962938],[0.670711,-4.703051,8.949584,8.399207,-8.660166,-5.798522,-5.909188,6.750098,5.925047,6.283629,-2.710219,-3.271371,-7.482201,0.345694],[7.814959,6.310492,-1.993285,9.052223,7.027762,-7.272748,8.294928,-5.383479,9.719781,9.818710,-3.828545,8.897971,-4.470433,-7.231984],[-5.107569,6.820624,7.003043,-9.482563,-7.915950,5.860079,-1.901437,-1.485878,4.011841,7.428866,-0.373162,7.594174,5.818667,1.098033],[4.178623,4.006560,4.640106,7.178088,6.791217,-7.602349,1.802254,6.727411,9.664291,2.266339,-4.551413,-6.828464,-2.969137,2.507375],[-0.695470,9.813333,-7.275184,8.471655,5.181563,-4.540358,1.158842,-1.852462,4.032906,-3.332968,5.552094,9.964508,0.996067,-5.733697],[7.264756,4.145082,-1.781136,8.182769,7.780488,-2.628867,2.037137,5.026225,0.610772,4.084395,6.875920,-0.962947,-9.868835,3.258136],[8.134845,6.387397,6.885082,-8.112395,8.321631,4.985816,4.031222,1.146411,-5.673800,1.976504,-3.535216,-0.465300,-5.257528,1.082989],[-2.606046,-4.045181,-5.203720,9.402175,1.050019,-0.526016,7.044300,9.006310,3.616939,-8.440074,-1.778796,-0.100435,-5.172172,-8.325284],[9.094302,2.491451,-7.586659,1.770399,0.901380,3.794959,-5.393688,7.131839,7.902892,-0.505325,1.563027,-7.765772,-6.526416,1.252907],[-9.184200,-4.149588,4.853280,6.841723,7.575901,-9.844488,5.613209,5.208039,4.766940,-6.297870,-8.386464,-8.749801,2.954873,2.135296],[6.495848,-3.597587,-2.321621,6.860050,7.753094,-8.907108,6.480995,3.645652,-2.778268,-9.400362,-1.867157,-0.857917,-1.757411,-5.797012],[8.516052,4.993696,-7.380598,-9.855693,-4.014050,-5.385309,6.318879,5.483255,-6.666638,4.371472,6.332008,-2.027347,-1.151229,-9.190425],[6.082525,-5.672367,-4.476753,7.967202,-5.337318,-7.991744,2.808789,-9.984149,5.548256,6.277422,-6.448537,-9.310991,3.941765,8.023878],[3.284379,-6.583135,0.020357,8.731855,-0.552880,-8.252939,9.464914,-3.836664,-1.740187,8.314200,-9.623156,1.244679,4.352076,-2.883930]],[[-0.609624,9.192625,-6.812261,9.654493,-1.654850,6.104357,6.393779,8.430247,-5.490675,-5.050195,-3.089666,-0.467235,-2.073384,-9.264792],[8.098650,-3.869709,-9.126818,7.251865,8.777697,-0.473310,-4.626441,4.627573,-8.820056,-3.919293,-0.505934,2.502264,-1.833054,0.235564],[0.370120,-9.814924,-5.000845,-4.970392,-8.848329,9.092385,-1.615923,-6.228104,-4.204083,9.787702,-1.676351,3.703285,-5.120514,-3.069762],[7.650801,0.891909,2.782409,3.013895,1.374366,-0.474760,-3.398602,9.381844,-6.983050,1.304580,9.536257,3.091298,-9.692475,-9.019797],[7.871098,6.738133,-8.306923,8.707975,-6.619456,-7.986680,-4.694068,-6.218861,-5.409848,-2.515763,6.472391,8.553994,-3.870911,-8.429889],[-8.131213,5.803601,8.263896,-6.378175,4.682314,1.611148,-1.101075,1.629463,5.495006,7.107626,-5.014056,-1.674253,3.847381,-5.584797],[-6.099268,-7.627589,-1.368651,-4.053500,-7.866141,6.047912,-6.698633,-1.131945,-2.321702,7.380321,3.283526,-4.209687,-7.731624,6.048108],[-7.715305,4.543005,-8.603575,9.475623,6.147750,5.439730,-4.076049,-9.548064,8.610245,-1.767504,-2.241402,6.901511,-2.880096,7.549658],[-8.752136,0.345232,3.841427,3.069830,-5.878477,-3.879395,-0.930527,-3.078147,-3.681319,0.567979,7.975145,-3.429183,-3.236197,1.080742],[0.607420,4.958971,3.221064,-4.525058,-3.655468,-0.534675,2.420737,-1.970645,-7.920783,-7.360200,7.843513,3.275120,8.645066,4.857192],[0.412421,2.438797,5.239391,5.733932,8.892198,5.507939,2.450889,-4.384720,-1.272913,1.215031,2.578561,-1.700048,7.230138,6.617579],[5.364619,-3.608301,5.599772,8.282858,0.083471,6.183616,-2.492871,-8.920903,7.460385,-8.796868,2.887726,-0.806183,-7.669051,-3.652554],[-1.387408,-0.454687,-8.903080,6.119435,-6.715906,-3.619995,5.462698,-9.429226,4.228692,0.297117,-8.369253,-4.988931,7.128135,-7.607546],[8.383823,-6.269915,1.609170,8.136016,4.942753,9.963371,6.259042,3.816839,-4.625806,4.515899,-6.794454,-4.633183,-0.009832,9.892432],[3.754909,3.456748,-5.480016,1.892882,9.085490,0.774157,6.699305,-5.980445,-1.990460,7.557828,-9.624167,-1.389587,6.590864,2.289168]]], dtype = "float32")#candidate|10263|(4, 15, 14)|const|float32
uop_10264 = relay.log(const_10263.astype('float32')) # shape=(4, 15, 14)
output = relay.Tuple([uop_10264,])
output2 = relay.Tuple([uop_10264,])
func_10270 = relay.Function([], output)
mod['func_10270'] = func_10270
mod = relay.transform.InferType()(mod)
mutated_mod['func_10270'] = func_10270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10270_call = mutated_mod.get_global_var('func_10270')
call_10271 = func_10270_call()
output = call_10271
func_10272 = relay.Function([], output)
mutated_mod['func_10272'] = func_10272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_10285 = func_5085_call()
call_10286 = func_5085_call()
func_6922_call = mod.get_global_var('func_6922')
func_6924_call = mutated_mod.get_global_var('func_6924')
call_10341 = func_6922_call()
call_10342 = func_6922_call()
func_9324_call = mod.get_global_var('func_9324')
func_9326_call = mutated_mod.get_global_var('func_9326')
call_10351 = relay.TupleGetItem(func_9324_call(), 1)
call_10352 = relay.TupleGetItem(func_9326_call(), 1)
output = relay.Tuple([call_10285,call_10341,call_10351,])
output2 = relay.Tuple([call_10286,call_10342,call_10352,])
func_10360 = relay.Function([], output)
mod['func_10360'] = func_10360
mod = relay.transform.InferType()(mod)
output = func_10360()
func_10361 = relay.Function([], output)
mutated_mod['func_10361'] = func_10361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4611_call = mod.get_global_var('func_4611')
func_4613_call = mutated_mod.get_global_var('func_4613')
call_10416 = relay.TupleGetItem(func_4611_call(), 0)
call_10417 = relay.TupleGetItem(func_4613_call(), 0)
func_9607_call = mod.get_global_var('func_9607')
func_9609_call = mutated_mod.get_global_var('func_9609')
call_10420 = relay.TupleGetItem(func_9607_call(), 4)
call_10421 = relay.TupleGetItem(func_9609_call(), 4)
output = relay.Tuple([call_10416,call_10420,])
output2 = relay.Tuple([call_10417,call_10421,])
func_10426 = relay.Function([], output)
mod['func_10426'] = func_10426
mod = relay.transform.InferType()(mod)
mutated_mod['func_10426'] = func_10426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10426_call = mutated_mod.get_global_var('func_10426')
call_10427 = func_10426_call()
output = call_10427
func_10428 = relay.Function([], output)
mutated_mod['func_10428'] = func_10428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10451 = relay.var("var_10451", dtype = "float64", shape = (10, 16, 6))#candidate|10451|(10, 16, 6)|var|float64
uop_10452 = relay.acosh(var_10451.astype('float64')) # shape=(10, 16, 6)
func_9660_call = mod.get_global_var('func_9660')
func_9661_call = mutated_mod.get_global_var('func_9661')
call_10458 = func_9660_call()
call_10459 = func_9660_call()
output = relay.Tuple([uop_10452,call_10458,])
output2 = relay.Tuple([uop_10452,call_10459,])
func_10463 = relay.Function([var_10451,], output)
mod['func_10463'] = func_10463
mod = relay.transform.InferType()(mod)
var_10464 = relay.var("var_10464", dtype = "float64", shape = (10, 16, 6))#candidate|10464|(10, 16, 6)|var|float64
output = func_10463(var_10464)
func_10465 = relay.Function([var_10464], output)
mutated_mod['func_10465'] = func_10465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6321_call = mod.get_global_var('func_6321')
func_6322_call = mutated_mod.get_global_var('func_6322')
call_10475 = relay.TupleGetItem(func_6321_call(), 2)
call_10476 = relay.TupleGetItem(func_6322_call(), 2)
uop_10477 = relay.log(call_10475.astype('float64')) # shape=(1575, 1)
uop_10479 = relay.log(call_10476.astype('float64')) # shape=(1575, 1)
func_8454_call = mod.get_global_var('func_8454')
func_8455_call = mutated_mod.get_global_var('func_8455')
call_10480 = relay.TupleGetItem(func_8454_call(), 0)
call_10481 = relay.TupleGetItem(func_8455_call(), 0)
bop_10530 = relay.floor_divide(uop_10477.astype('float32'), relay.reshape(call_10475.astype('float32'), relay.shape_of(uop_10477))) # shape=(1575, 1)
bop_10533 = relay.floor_divide(uop_10479.astype('float32'), relay.reshape(call_10476.astype('float32'), relay.shape_of(uop_10479))) # shape=(1575, 1)
func_5143_call = mod.get_global_var('func_5143')
func_5145_call = mutated_mod.get_global_var('func_5145')
var_10542 = relay.var("var_10542", dtype = "uint8", shape = (160,))#candidate|10542|(160,)|var|uint8
call_10541 = relay.TupleGetItem(func_5143_call(relay.reshape(var_10542.astype('uint8'), [160,])), 2)
call_10543 = relay.TupleGetItem(func_5145_call(relay.reshape(var_10542.astype('uint8'), [160,])), 2)
uop_10546 = relay.sin(bop_10530.astype('float64')) # shape=(1575, 1)
uop_10548 = relay.sin(bop_10533.astype('float64')) # shape=(1575, 1)
func_9660_call = mod.get_global_var('func_9660')
func_9661_call = mutated_mod.get_global_var('func_9661')
call_10571 = func_9660_call()
call_10572 = func_9660_call()
func_5745_call = mod.get_global_var('func_5745')
func_5747_call = mutated_mod.get_global_var('func_5747')
call_10580 = relay.TupleGetItem(func_5745_call(), 0)
call_10581 = relay.TupleGetItem(func_5747_call(), 0)
output = relay.Tuple([call_10480,call_10541,var_10542,uop_10546,call_10571,call_10580,])
output2 = relay.Tuple([call_10481,call_10543,var_10542,uop_10548,call_10572,call_10581,])
func_10582 = relay.Function([var_10542,], output)
mod['func_10582'] = func_10582
mod = relay.transform.InferType()(mod)
mutated_mod['func_10582'] = func_10582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10583 = relay.var("var_10583", dtype = "uint8", shape = (160,))#candidate|10583|(160,)|var|uint8
func_10582_call = mutated_mod.get_global_var('func_10582')
call_10584 = func_10582_call(var_10583)
output = call_10584
func_10585 = relay.Function([var_10583], output)
mutated_mod['func_10585'] = func_10585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4898_call = mod.get_global_var('func_4898')
func_4900_call = mutated_mod.get_global_var('func_4900')
call_10623 = func_4898_call()
call_10624 = func_4898_call()
func_1549_call = mod.get_global_var('func_1549')
func_1552_call = mutated_mod.get_global_var('func_1552')
var_10639 = relay.var("var_10639", dtype = "float32", shape = ())#candidate|10639|()|var|float32
const_10640 = relay.const([-2.963341,-8.851214,5.989611,2.453361,8.182733,-7.827313,-3.302425,5.466090,4.239359,-9.820390,-4.361911,2.298771,3.084203,8.903323,0.741535,6.456268,-8.720219,-7.506704,-8.997691,-2.517252,-9.723359,4.611128,1.655537,6.753396,7.458976,7.097545,-2.356418,-5.922305,-7.819685,-2.332939,-9.685364,4.090739,9.426405,-8.517991,7.293800,6.134017,1.176587,-7.655613,2.601018,8.047876,1.728598,1.259187,8.829827,-1.399117,9.948642,7.968323,-5.682168,-5.834435,-6.692932,5.992265,0.486968,4.587260,3.770042,4.924288,9.648297,-5.168555,7.165908,-3.200911,3.177786,-4.465647,-1.585976,-1.359262,-2.500527,-3.195472,0.490959,-7.238378,0.519534,5.625419,1.095942,0.059628,7.875977,-7.945607,4.940318,2.700408,7.167804,5.614946,5.365218,-8.552455,-2.637602,-7.567594,-5.431371,-1.709875,-8.433072,-6.317910,-8.525202,-1.087260,9.677290,-8.675901,-8.619676,-0.729632,1.902968,9.272465,7.821048,-6.127425,-0.749662,-9.240406,4.156899,-7.682363,-4.003230,-9.405736,3.677815,0.119281,3.184476,1.602962,1.470733,0.075836,-8.847031,-6.101802,-4.073744,5.405006,0.151412,5.037394,0.438611,7.444511,-4.422913,-6.756206,-2.609843,8.066796,-4.513217,1.056188,-7.342853,-9.727352,0.840269,-6.266299,-1.296975,0.651587,5.779715,-3.387000,-8.236616,6.862625,3.491137,-7.746467,9.457895,1.694138,1.920856,3.455704,9.274282,-8.571255,-9.197461,-8.010120,-9.338388,2.674250,-4.909376,-3.549927,1.190740,-2.040779,-9.083216,-8.883334,-9.843610,4.654988,4.914963,7.497599,-1.854649,4.502858,-1.937874,9.466787,5.832853,0.499286,6.658050,3.788386,9.313206,9.912852,-7.127458,7.571901,-7.516188,-8.503679,4.094586,-7.051596,3.599054,2.030839,-8.981995,0.114640,7.890151,4.812300,-3.043731,8.507052,-9.534955,3.156608,-5.134539,5.621565,1.027586,-8.440278,2.831494,8.264704,1.229904,8.466149,3.449185,9.140813,7.497631,5.754282,2.646127,6.306111,-5.240678,4.006983,8.653371,3.741187,-9.201222,6.522217,-9.534175,3.519834,4.657551,0.276906,9.654026,4.749964,-4.377656,-5.925795,7.835626,9.505232,0.663913,6.599443,-0.270353,1.581712,-4.350976,-5.068064,7.871267,-2.952219,-6.879504,-0.061270,5.340611,-8.655508,-6.638288,7.305346,-1.325668,6.598901,3.981581,-9.823567,3.597374,6.450665,7.411372,5.558915,9.494284,3.122379,8.200750,6.264827,-2.057907,-3.406353,-4.416342,-5.791370,0.779783,-2.387331,-0.655466,-6.000670,6.910792,-4.010630,1.725147,9.567006,6.120090,8.879808,-1.166979,9.988818,-8.133756,-7.813237,-8.712766,-5.655147,-4.308696,-7.212157,1.014036,5.119721,-3.927537,7.387088,1.581512,-4.195139,-2.724201,0.636137,-7.695781,5.416355,3.164473,-7.021165,-4.044639,1.168415,0.564467,-2.207130,-9.307227,4.698837,7.756011,-3.096563,-0.078295,2.518753,-4.526834,6.718619,-1.098071,-1.196250,-2.073188,5.523870,4.428181,-2.187827,-3.171059,4.814519,-8.728745,-7.003947,-4.541300,-7.806007,2.091798,2.507106,-2.211237,2.125243,2.158848,-4.086343,-4.226496,-5.590937,-1.361508,-0.532172,5.967035,2.465034,3.345065,5.582857,1.225415,-2.473839,-1.204557,-2.048725,-6.205822,9.116511,3.805568,-5.983465,8.932853,5.138771,3.212976,-6.715382,-6.163363,-4.585634,9.257420,9.356608,7.850707,-9.962798,8.202205,-2.879196,-2.175036,9.046744,-1.317483,2.641523,-0.648112,2.371390,-8.655699,9.028374,-2.393809,-5.709184,5.490488,-5.740661,2.305446,-9.424782,8.194603,5.826798,-5.505676,-0.951213,-1.211992,-2.112206,-1.470668,-0.362294,-0.111464,3.010058,7.445877,-2.834761,0.870178,8.325928,5.062663,1.192792,-1.208834,-9.266068,0.308633,8.927605,-7.126713,4.876972,-6.115255,-4.798346,1.807370,1.911700,2.282141,8.959805,-0.006359,-4.290688,9.388339,-7.325120,-9.238387,-0.443170,9.285689,3.050304,-6.667842,6.441134,-7.882023,7.311663,8.853116,-7.329629,-4.089103,-0.264420,-8.314305,5.031389,-8.937231,3.514498,-3.120527,9.605124,-0.282879,-5.985495,6.377455,9.096006,7.554263,4.845670,0.091494,3.843191,0.737570,-1.052904,-2.225210,2.264856,3.651763,4.679781,5.037346,-7.051479,1.033589,-0.768523,-8.225465,-6.343304,-4.151187,-9.019354,9.980937,3.509646,3.740913,-0.303013,5.167876,9.789723,7.421154,9.111580,5.430227,-1.375643,-2.486057,2.659226,-5.543435,-8.598236,7.151279,-4.873257,-5.537791,2.046032,9.038667,-8.107301,-7.609611,2.579927,-6.929136,-9.840873,-9.291816,5.203315,8.525838,2.018289], dtype = "float32")#candidate|10640|(440,)|const|float32
call_10638 = func_1549_call(relay.reshape(var_10639.astype('float32'), []), relay.reshape(const_10640.astype('float32'), [11, 5, 8]), )
call_10641 = func_1549_call(relay.reshape(var_10639.astype('float32'), []), relay.reshape(const_10640.astype('float32'), [11, 5, 8]), )
output = relay.Tuple([call_10623,call_10638,var_10639,const_10640,])
output2 = relay.Tuple([call_10624,call_10641,var_10639,const_10640,])
func_10645 = relay.Function([var_10639,], output)
mod['func_10645'] = func_10645
mod = relay.transform.InferType()(mod)
var_10646 = relay.var("var_10646", dtype = "float32", shape = ())#candidate|10646|()|var|float32
output = func_10645(var_10646)
func_10647 = relay.Function([var_10646], output)
mutated_mod['func_10647'] = func_10647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10686 = relay.var("var_10686", dtype = "uint32", shape = (5, 8, 16))#candidate|10686|(5, 8, 16)|var|uint32
var_10687 = relay.var("var_10687", dtype = "uint32", shape = (5, 8, 16))#candidate|10687|(5, 8, 16)|var|uint32
bop_10688 = relay.less_equal(var_10686.astype('bool'), relay.reshape(var_10687.astype('bool'), relay.shape_of(var_10686))) # shape=(5, 8, 16)
func_130_call = mod.get_global_var('func_130')
func_133_call = mutated_mod.get_global_var('func_133')
const_10692 = relay.const([1.473355,5.171907,-8.931060,-0.412192,2.532014,4.192740,0.031018,2.605640,-1.117028,2.108692,7.439780,2.556295,-0.110932,-8.465333,-7.334744,5.672690,1.441362,8.203856,-4.020844,1.192611,-7.256776,-9.218225,-6.530097,2.409402,5.223865,1.745723,7.768172,-2.682369,-7.275655,9.788504,9.863880,1.005953,-5.445133,-4.660408,-9.540006,-3.399721,-7.584199,-0.056398,-8.374064,-3.828444,-6.487572,9.121493,-9.751069,9.168895,-0.788372,7.250336,5.430677,-8.646487,5.051519,-2.824386,-5.596741,8.224107,0.368711,2.799795,8.068143,-1.176534,3.674651,-7.719509,5.104558,-0.648704,-2.591660,0.813598,-8.542873,0.039342,-5.001655,-2.986413,-6.590555,-1.126707,7.007550,-6.533093,1.732022,5.048445,-0.551735,-4.452408,4.702564,3.586774,-0.633112,-8.221971,-5.863493,-0.622091,7.279455,8.744527,-4.840771,-0.889875,2.122115,6.770883,9.317736,3.969031,-0.974511,1.965658,-0.594739,4.970903,-5.946542,-0.383255,-7.523995,6.353774,8.283840,5.821405,-8.082279,3.660107,-7.495748,-3.430919,4.773206,0.040552,9.020013,-9.848064,5.480074,-5.311222,0.583560,-6.359457,-6.748438,1.028324,-3.620218,2.413317,-4.804295,-1.659251,1.604097,-9.353983,-8.911527,-1.468636,9.570285,-5.881147,7.674904,-8.461936,9.221589,-4.227045,-2.589812,1.152282,-5.027160,-2.064070,0.182312,-2.257347,2.471581,-7.603882,-5.875882,-5.331435,5.738477,9.059967,0.888091,2.860620,-9.450943,-8.846147,9.170009,-3.716280,9.236958,0.962279,0.450067,7.433370,-9.066227,7.416483,7.194288,-5.941191,-1.113957,0.792972,2.850889,-9.919726,-3.787905,7.255578,-3.708130,2.433044,-3.551319,-8.957573,-8.362187,-1.873844,6.682246,-6.431608,7.138238,4.715899,-1.428557,-8.195089,5.855032,6.500256,3.651526,-9.128242,-5.039278,3.166193,-1.801670,6.095444,-7.169662,5.176202,0.706003,-8.433430,9.971074,-4.005695,-1.448859,0.509148,1.658940,9.512632,7.005691,-1.498754,2.535968,-4.949170,3.198713,2.221344,-8.324453,-9.987482,-5.323487,-3.082607,-0.190277,1.948781,1.248953,6.885098,6.579370,-7.136003,-5.028943,3.061861,-3.273885,4.394123,1.793346,3.267593,0.379884,5.987158,-2.686584,3.835056,-8.618821,1.289137,-3.681155,-1.362110,7.531577,-8.457823,9.322290,-1.241101,-3.951220,3.335804,-2.503609,6.060684,-0.114577,1.539344,-6.274294,-5.771742,5.904487,7.648471,-9.785595,7.196999,-3.224531,3.647731,8.548439,4.971261,9.330045,4.645429,-1.783585,5.641478,9.787740,5.320745,-7.267736,-3.401601,-3.527700,6.150433,5.723160,-5.264151,-5.517544,5.033569,1.137916,6.666786,-3.134544,-3.821680,3.395400,1.862224,-9.784630,0.450867,-7.714160,-2.924655,6.419201,7.605114,4.304531,-3.438388,6.698969,5.003708,-5.507214,8.788276,-6.816551,7.327528,-2.690307,-2.490138,-4.935582,3.763528,-9.837463,0.055468,9.290396,-6.837813,-3.440129,-9.269355,3.647086,7.232215,3.158455,-1.803653,-6.425482,1.502892], dtype = "float32")#candidate|10692|(288,)|const|float32
call_10691 = func_130_call(relay.reshape(const_10692.astype('float32'), [12, 6, 4]))
call_10693 = func_130_call(relay.reshape(const_10692.astype('float32'), [12, 6, 4]))
func_2975_call = mod.get_global_var('func_2975')
func_2979_call = mutated_mod.get_global_var('func_2979')
const_10699 = relay.const([10,-3,-6,2,1,-2,-7,8,10,-4,1,10,6,-5,7,-6,-7,-3,-4,-3,-4,3,7,-5,-3,-2,8,10,-5,3,-1,8,-10,3,6,10,2,3,7,8,8,-2,5,-8,-7,10,-4,7,9,-7,-7,7,2,-1,-10,7,-1,2,-1,6,-5,-5,7,2,-4,-3,8,10,-1,-7,10,-7,-4,-8,-3,-4,-3,5,3,-7,6,7,1,-4,-8,3,8,2,-3,9,-7,2,4,-9,5,-5,10,-7,-3,5,-3,-1,10,-2,-6,-7,-6,10,-6,-8,-6,2,-8,9,1,3,10,-4,9,-3,9,-5,-9,-6,7,6,10,1,8,-1,2,2,10,-4,3,4,-5,10,8,-9,-1,-8,4,1,7,-2,8,3,-1,6,2,8,1,-3,6,-3,8,10,-1,5,-6,9,10,-9,8,-5,-7,10,-2,6,7,-7,-1,9,1,-1,1,-9,1,2,-5,-10,9,-10,-4,-1,8,-10,-4,-2,-4,-1,1,8,10,-9,-6,-1,10,-7,10,9,-5,-6,7,5,-10,-8,8,3,7,-7,3,-9,-9,-9,-4,6,5,-10,1,6,4,2,-2,-2,-9,2,-6,4,7,4,-10,-3,-6,1,-8,9,-3,-6,8,-5,-6,6,10,-7,3,-10,-6,2,-6,9,10,-8,1,-1,1,-3,-7,-10,10,5,3,-8,10,8,3,-2,5,9,3,2,-7,4,5,10,5,9,-5,-6,-7,3,-2,-2,-4,-5,-10,-4,4,-1,-3,-2,-10,-6,-8,-10,-7,-4,7,-9,6,9,-1,-2,-10,-3,8,9,8,3,-10,-10,7,7,9,-4,-2,-2,-3,-7,1,-5,-7,7,2,1,2,-8,-5,-2,4,3,6,-8,-10,-3,7,10,-2,7,-6,5,-10,-6,1,3,-3,-1,2,9,4,-4,7,5,8,5,-10,1,-7,-7,6,-4,-8,7,2,-1,5,-9,9,6,-6,1,-5,-8,-3,1,-6,-8], dtype = "uint32")#candidate|10699|(378,)|const|uint32
call_10698 = func_2975_call(relay.reshape(const_10699.astype('uint32'), [6, 9, 7]), relay.reshape(const_10699.astype('uint32'), [6, 9, 7]), )
call_10700 = func_2975_call(relay.reshape(const_10699.astype('uint32'), [6, 9, 7]), relay.reshape(const_10699.astype('uint32'), [6, 9, 7]), )
output = relay.Tuple([bop_10688,call_10691,const_10692,call_10698,const_10699,])
output2 = relay.Tuple([bop_10688,call_10693,const_10692,call_10700,const_10699,])
func_10707 = relay.Function([var_10686,var_10687,], output)
mod['func_10707'] = func_10707
mod = relay.transform.InferType()(mod)
var_10708 = relay.var("var_10708", dtype = "uint32", shape = (5, 8, 16))#candidate|10708|(5, 8, 16)|var|uint32
var_10709 = relay.var("var_10709", dtype = "uint32", shape = (5, 8, 16))#candidate|10709|(5, 8, 16)|var|uint32
output = func_10707(var_10708,var_10709,)
func_10710 = relay.Function([var_10708,var_10709,], output)
mutated_mod['func_10710'] = func_10710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7726_call = mod.get_global_var('func_7726')
func_7727_call = mutated_mod.get_global_var('func_7727')
call_10725 = func_7726_call()
call_10726 = func_7726_call()
const_10733 = relay.const([[[-0.884055,1.545516,3.859675,-5.766161],[-7.235284,3.753556,0.725270,6.292480],[4.936787,3.644978,-3.521284,-4.613649],[-6.092048,-4.799952,-0.786880,-3.195150],[-8.815727,6.310838,0.737333,-5.948344],[1.141368,0.128789,-7.484885,5.563736]],[[-3.580870,-8.184239,9.177249,4.493617],[3.969169,9.064855,-0.912983,-1.260329],[7.436946,-9.887766,7.795345,-0.076242],[6.372920,-3.254263,-7.736946,8.952315],[-4.742812,2.912686,2.817705,-7.086250],[1.884779,-0.415727,8.102556,-7.852207]],[[4.349852,-9.266772,8.080308,0.558123],[-9.950877,-3.284893,3.214490,3.934690],[1.609786,3.068396,5.971359,5.831080],[7.922586,-6.688674,1.984287,0.156799],[-8.130901,1.533460,-8.427392,-5.914420],[-5.852146,-9.631883,-0.858190,-2.297747]],[[-0.209717,-4.701087,3.353122,-9.770469],[-1.474565,5.136106,2.800226,-2.102017],[-4.264126,9.472891,-3.725564,4.917316],[-3.002049,-0.920005,1.591134,-3.403683],[9.132029,-7.091870,7.089356,1.988989],[9.469902,0.946879,-6.172997,-8.757142]],[[2.042087,6.496859,1.294296,5.267089],[-9.580949,6.532663,-3.090075,-3.388039],[-9.890216,-8.431035,2.815466,0.257444],[-9.987552,-2.028109,-7.260251,-1.155900],[-3.972760,3.876148,-3.260760,-9.900859],[3.769590,8.265748,4.843206,6.372191]],[[-3.165096,1.222425,2.191828,-0.459073],[1.644542,-8.057915,-3.767235,-2.356675],[2.286570,-3.464820,-5.892472,-6.522822],[-2.860673,4.225143,5.648614,-8.526442],[-4.778227,-0.963747,-4.785032,5.297338],[6.737921,-8.931567,-3.312923,-4.951168]],[[-1.092113,-1.555177,3.297489,-6.675592],[-3.560816,-2.745032,-5.329053,6.653333],[-5.365194,9.928577,-5.818017,0.110666],[-7.320392,0.272180,-6.752747,-9.504868],[3.785940,4.300671,-3.329448,-3.366504],[5.275165,-7.448540,8.548162,-5.427097]],[[3.299529,3.137113,-1.748955,5.538059],[-1.659332,-2.075503,7.245054,5.681879],[0.581990,5.676548,2.444594,-3.717140],[-9.290842,-1.833058,-0.699181,-9.122702],[-6.640551,8.471941,-1.357519,-5.703928],[-8.177651,8.600096,2.815133,-9.643950]],[[2.466930,-5.403189,7.075437,5.688861],[-3.945972,-1.203980,-2.577730,-8.816503],[-9.283572,0.453905,1.808289,8.472797],[-4.081276,6.058922,5.687001,-6.121128],[4.836474,1.697749,7.283789,4.110569],[4.588856,-0.300394,-6.009384,-8.594678]],[[7.846481,4.697111,7.931373,-9.796534],[0.724731,-9.294776,2.661550,9.237509],[1.800397,9.195293,6.515522,-5.101141],[-6.173641,-7.791485,-6.192528,4.985133],[-6.639941,-4.949398,5.727178,-0.114697],[-4.966343,-7.703866,6.919502,-8.749514]],[[-9.649701,-8.367197,-0.737250,-8.349853],[4.903191,6.038112,-0.653422,5.951610],[8.076154,-8.658067,-2.464947,3.810991],[1.474067,-5.875483,6.236532,-9.313023],[1.628260,2.621330,1.438415,-0.642596],[-2.558328,-0.986250,0.381659,-5.549447]],[[1.034905,5.355038,4.921902,-5.677217],[-9.889986,5.379340,-4.382184,-4.156495],[-2.216331,1.493281,6.234669,5.386678],[-0.901669,-0.790474,9.696805,-8.652578],[-0.322662,0.062167,6.991866,-7.618593],[-6.613311,7.913915,7.580302,-2.477735]]], dtype = "float32")#candidate|10733|(12, 6, 4)|const|float32
bop_10734 = relay.multiply(call_10725.astype('uint64'), relay.reshape(const_10733.astype('uint64'), relay.shape_of(call_10725))) # shape=(12, 6, 4)
bop_10737 = relay.multiply(call_10726.astype('uint64'), relay.reshape(const_10733.astype('uint64'), relay.shape_of(call_10726))) # shape=(12, 6, 4)
output = relay.Tuple([bop_10734,])
output2 = relay.Tuple([bop_10737,])
func_10738 = relay.Function([], output)
mod['func_10738'] = func_10738
mod = relay.transform.InferType()(mod)
mutated_mod['func_10738'] = func_10738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10738_call = mutated_mod.get_global_var('func_10738')
call_10739 = func_10738_call()
output = call_10739
func_10740 = relay.Function([], output)
mutated_mod['func_10740'] = func_10740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5356_call = mod.get_global_var('func_5356')
func_5357_call = mutated_mod.get_global_var('func_5357')
call_10802 = relay.TupleGetItem(func_5356_call(), 0)
call_10803 = relay.TupleGetItem(func_5357_call(), 0)
output = call_10802
output2 = call_10803
func_10829 = relay.Function([], output)
mod['func_10829'] = func_10829
mod = relay.transform.InferType()(mod)
output = func_10829()
func_10830 = relay.Function([], output)
mutated_mod['func_10830'] = func_10830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8963_call = mod.get_global_var('func_8963')
func_8964_call = mutated_mod.get_global_var('func_8964')
call_10831 = func_8963_call()
call_10832 = func_8963_call()
func_7441_call = mod.get_global_var('func_7441')
func_7445_call = mutated_mod.get_global_var('func_7445')
const_10835 = relay.const([4,8,-2,-3,2,-1,-2,3,9,-7,-9,-7,-8,-8,-4,9,-1,-1,2,3,3,2,-8,9,-6,6,-3,-10,3,8,-5,5,-3,-10,-4,9,-7,-3,6,4,-8,7,3,-6,5,4,-10,7,-9,8,-10,-1,8,1,7,5,-6,-9,-10,-7,-1,-7,4,-6,-1,-6,-3,-7,2,6,3,-5,6,2,-10,-2,-4,4,3,2,-8,4,-7,4,-8,7,4,2,7,-7,-5,-10,8,-6,7,4,6,5,-10,3,1,-9,3,6,-7,6,2,8,1,-10,4,2,-3,-5,9,-8,9,5,1,1,4,10,7,-7,-4,7,-2,-7,-9,7,10,8,7,3,-5,-5,-6,-9,5,-1,5,-8,-8,-4,-9,5,-8,-1,8,-2,10,4,-4,-9,10,-1,-8,4,6,-3,8,-6,-2,-9,3,-3,-9,-1,1,4,-7,-8,4,1,1,4,-3,-6,-9,7,-8,-7,9,-2,5,6,10,7,8,-5,3,10,2,-2,3,-5,2,-10,9,5,-9,-9,5,-7,5,3,1,-5,1,4,-9,-5,-10,-3,-10,-6,-7,9,1,8,8,-4,-7,2,8,-10,-4,7,-3,-4,9,1,4,-10,8,3,-9,6,7,2,3,-10,10,-2,10,-5,7,4,7,-8,-2,-2,-9,-9,-8,2,4,10,-1,-6,-2,7,6,-3,-7,-10,2,-2,-2,-9,-1,-4,3,10,8,-7,8,10,-7,-8,3,-3,-2,8,-5,6,6,-2], dtype = "uint32")#candidate|10835|(288,)|const|uint32
var_10836 = relay.var("var_10836", dtype = "float64", shape = (800,))#candidate|10836|(800,)|var|float64
var_10837 = relay.var("var_10837", dtype = "int8", shape = (1200,))#candidate|10837|(1200,)|var|int8
call_10834 = relay.TupleGetItem(func_7441_call(relay.reshape(const_10835.astype('uint32'), [288,]), relay.reshape(var_10836.astype('float64'), [800,]), relay.reshape(var_10837.astype('int8'), [1200,]), ), 3)
call_10838 = relay.TupleGetItem(func_7445_call(relay.reshape(const_10835.astype('uint32'), [288,]), relay.reshape(var_10836.astype('float64'), [800,]), relay.reshape(var_10837.astype('int8'), [1200,]), ), 3)
bop_10839 = relay.logical_or(call_10831.astype('bool'), call_10834.astype('bool')) # shape=(1092,)
bop_10842 = relay.logical_or(call_10832.astype('bool'), call_10838.astype('bool')) # shape=(1092,)
func_9004_call = mod.get_global_var('func_9004')
func_9005_call = mutated_mod.get_global_var('func_9005')
call_10857 = relay.TupleGetItem(func_9004_call(), 2)
call_10858 = relay.TupleGetItem(func_9005_call(), 2)
output = relay.Tuple([const_10835,var_10836,var_10837,bop_10839,call_10857,])
output2 = relay.Tuple([const_10835,var_10836,var_10837,bop_10842,call_10858,])
func_10863 = relay.Function([var_10836,var_10837,], output)
mod['func_10863'] = func_10863
mod = relay.transform.InferType()(mod)
var_10864 = relay.var("var_10864", dtype = "float64", shape = (800,))#candidate|10864|(800,)|var|float64
var_10865 = relay.var("var_10865", dtype = "int8", shape = (1200,))#candidate|10865|(1200,)|var|int8
output = func_10863(var_10864,var_10865,)
func_10866 = relay.Function([var_10864,var_10865,], output)
mutated_mod['func_10866'] = func_10866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10194_call = mod.get_global_var('func_10194')
func_10196_call = mutated_mod.get_global_var('func_10196')
call_10898 = relay.TupleGetItem(func_10194_call(), 0)
call_10899 = relay.TupleGetItem(func_10196_call(), 0)
func_8776_call = mod.get_global_var('func_8776')
func_8778_call = mutated_mod.get_global_var('func_8778')
const_10911 = relay.const([3,-10,-2,-9,-10,8,-6,-4,1,10,-3,-10,9,9,8,-7,-9,8,-10,4,1,-3,-4,-5,1,2,6,-8,10,5,3,-10,8,6,2,7,3,-10,9,5,-3,-3,8,5,7,7,1,4,7,7,-1,5,-4,-2,-10,-2,3,3,-7,1,-10,5,10,-3,9,-6,-4,-6,-4,3,5,-9,1,2,-2,-1,3,-8,-5,-10,10,-7,-7,-7,3,-6,-5,7,-7,-5,1,-3,-4,-9,-1,3,3,8,-5,2,6,6,-3,9,-1,-10,2,1,4,5,7,9,-10,-1,-3,-4,-2,-10,3,-6,-6,1,4,4,-1,5,8,7,10,-4,-2,-2,9,9,1,-10,-6,5,-2,7,-7,-1,-6,-3,-8,-1,-7,5,3,10,3,-1,1,-8,2,-8,10,1,8,4,3,6,-6,-6,5,5,5,7,-9,-3,-2,9,8,8,6,-2,9,8,9,6,-9,-3,6,-2,-7,-7,4,1,-8,10,4,4,1,9,-6,-5,-6,9,8,-9,6,6,-2,4,7,-5,-7,4,-4,8,-10,5,9,9,7,6,2,5,-8,-3,2,-8,10,7,-5,-4,-7,-2,-4,6,7,-7,2,4,-9,-9,-6,2,-8,-9,-3,9,-1,6,2,-9,4,9,-5,9,9,-7,-2,-10,-9,5,-2,-1,5,-2,-1,-5,6,4,4,-9,1,7,-4,-6,-8,4,5,-4,-7,7,-9,7,-6,-9,4,5,-4,1,-1,-3,-7,-8,-4,-7,9,1,8,-3,8,-7,10,10,-4,3,7,2,-1,-8,-3,8,-9,-1,-8,1,8,10,8,3,-8,-7,10,-1,-2,-10,4,-8,-8,1,-5,3,10,1,-1,2,-1,-6,-10,4,6,6,1,-4,-3,6,-9,1,-10,9,-9,3,-2,10,8,4,5,3,-4,-6,5,-4,9,-4,-8,-2,-4,6,6,7,-10,-7,3,-3,-8,-5,-9,7,-6,8,-4,10,7,-3,4,8,-5,10,-6,6,-2,-9,1,10,7,-1,8,8,-9,-10,-2,-6,-3,4,9,-5,10,3,-10,-7,1,-7,-9,-6,-5,-9,7,6,2,-1,-10,2,-10,1,8,-6,-6,-9,7,5,-2,-1,-2,8,8,4,6,8,-1,-6,9,-7,5,1,-1,-4,-3,-3,5,-8,1,-3,-8,-4,1,9,2,-4,3,-6,6,-7,-8,-3,-2,-6,-4,1,-9,2,-5,-10,8,1,-3,-6,-1,-7,3,-4,2,-9,10,-10,-7,10,5,6,-8,-7,-7,2,-5,-7,-3,-5,-2,3,8,-10,6,-6,2,6,-10,10,3,-3,3,9,2,10,10,-3,-7,-3,3,-3,1,4,10,7,8,-4,-4,8,8,-10,-3,7,8,-10,7,-7,-3,-10,-6,8,8,8,6,-8,6,-3,2,9,-9,-10,-4,-7,-7,2,5,-9,4,7,-3,-4,-2,8,-8,4,5,8,-1,6,3,1,-10,10,-10,-5,1,-4,8,-9,-8,-6,6,-4,-10,-3,10,10,8,5,-9,1,-8,5,6,4,6,8,-3,-7,5,-5,-7,7,9,1,10,7,8,6,5,-7,10,-1,10,-6,-7,1,10,-9,-10,4,-4,-10,3,6,5,-7,3,-8,5,9,6,5,-8,4,7,-9,-1,5,4,9,7,2,3,2,-3,1,-10,7,3,7,-9,2,5,1,-3,9,-10,1,-1,1,-3,-5,-9,3,4,-3,-8,3,6,-3,8,-8,-2,-2,-3,9,7,1,8,9,5,7,1,-7,7,6,1,-4,5,6,-10,4,-10,-3,-8,-4,-8,-6,-2,4,4,-5,-3,6,4,6,6,1,-2,8,-9,-2,-1,6,3,3,9,2,6,2,9,-3,-5,-5,-1,8,3,-8,10,10,-5,1,-10,8,1,7,9,7,6,-2,2,8,-9,10,10,3,4,1,-8,-1,10,-1,1,2,9,-6,-3,-6,1,-2,-7,-6,2,4,-6,-1,6,5,9,5,-3,-8,-5,9,-4,7,-7,-2,-2,-8,-3,7,10,-7,1,-6,-2,1,1,-1,10,-6,-3,-5,-7,5,2,1,6,-1,-7,1,1,7,3,-9,-10,-9,5,9,-9,-4,-6,2,-3,1,10,-1,6,-7,8,2,-2,10,-7,1,-3,8,2,-3,5,-6,6,7,5,-10,1,10,3,1,9,7,-9,-3,-6,-7,-8,5,-8,5,8,6,-5,1,8,-1,5,9,2,-6,-8,-9,-6,10,7,-9,1,4,-4,6,-10,9,5,-1,9,7,-10,2,1,2,-9,4,-6,6,5,2,-10,-1,6,-4,-9,2,9,9,-8,-1,10,7,-6,-8,6,6,-8,1,-9,10,-9,-1,-8,2,9,-5,9,-7,-4,5,4,5,10,-7,-2,1,1,2,2,7,5,2,-3,-10,5,-8,9,-10,-1,2,-4,-7,-4,-4,10,10,5,-1,5,5,9,9,-9,8,4,5,10,-4,-8,-3,-2,-6,-6,-5,-10,-1,6,-6,-6,4,2,-9,1,1,4,10,8,2,6,-5,10,5,3,-10,6,1,5,-4,-5,-8,8,6,-7,-10,-8,1,-2,-3,-10,5,8,5,8,-2,6,-4,9,2,8,8,8,3,8,4,10,-3,5,-6,1,6,7,2,9,3,-8,3,-2,4,6,-5,9,-9,-8,-7,-2,-6,4,6,-4,1,9,5,-2,-1,-1,7,6,2,10,5,-4,-2,1,-2,-6,-4,-6,-10,10,-9,8,8,-5,-2,-2,8,7,4,7,-2,8,-1,5,-3,3,-5,-1,6,5,-10,4,5,-7,1,5,-8,-9,5,10,-10,-3,3,10,-9,-9,4,-8,-9,5,8,3,-3,7,-8,-10,-2,-1,-9,6,6,9,-1,8,-2,9,-5,8,-7,-7,-1,-1,-2,-10,5,-8,-1,2,4,3,-3,5,-7,5,7,-8,9,-3,-4,-1,-7,2,8,4,-4,-9,9,4,-7,9,10,-4,9,-9,8,-1,-1,-5,-7,-2,-5,-7,-6,-2,7,-9,-1,6,-8,-10,-7,1,6,-8,6,3,2,8,10,-3,1,5,-4,-1,-8,-9,4,4,10,4,-3,-7,-8,2,-5,8,-8,-8,-4,5,2,8,7,-7,-5,1,9,-2,3,6,1,-3,-6,9,2,3,-9,-9,2,-3,6,-4,2,-1,-2,-4,-10,1,-10,6,-6,5,10,4,-3,-1,-1,-5,1,-9,-2,5,1,-7,-8,-4,-10,2,6,-1,2,-7,7,5,7,-10,-8,10,2,-2,-10,5,-7,9,-4,2,4,-7,3,-10,6,9,6,-3,9,-9,4,-1,2,4,-2,-1,10,-9,8,3,-9,7,-4,-6,-8,3,10,2,-6,9,5,-6,6,7,-7,9,3,-3,-10,1,1,-9,10,4,-8,-3,3,-9,7,4,-4,-9,-10,-5,1,-8,2,5,9,-9,2,-1,3,3,-5,5,-1,6,9,4,9,-4,1,4,-1,-8,-7,8,-10,4,-10,-5,-5,2,4,6,8,-4,-1,9,-1,5,-8,10,5,-5,2,6,3,-3,-4,10,-1,10,-3,4,-6,6,5,3,-9,-7,-10,-10,10,10,4,-5,4,-9,-4,3,-3,7,-4,-7,1,-5,6,-4,1,-2,1,10,-5,-4,-1,3,7,-1,10,-5,-4,2,8,-8,-7,3,-10,-5,1,5,6,7,6,6,8,7,-4,1,2,-10,-10,8,8,-6,-3,-3,9,-4,-10,2,-4,1,7,-9,-3,-1,3,-2,5,10,-9,8,-4,6,5,-5,7,6,-10,-7,5,6,7,1,-8,-9,5,-6,10,-7,9,3,-6,2,-5,8,6,9,2,5,-2,-6,2,8,-3,8,-6,10,9,7,10,3,9,-1,-2,8,1,-3,-7,6,7,-4,4,-5,5,-6,-9,-10,10,7,8,-8,-1,-5,-3,8,4,2,-5,2,1,4,-6,8,8,2,3,6,-10,-2,-1,-2,4,4,9,1,5,-1,2,8,5,5,-9,-1,1,1,-6,8,7,3,-9,7,10,4,5,1,4,-9,-6,-4,-6,10,10,-5,-9,4,-3,-9,-8,6,-6,5,-4,5,-5,-8,5,-4,-3,3,-5,9,5,2,10,9,4,6,-8,-7,-9,3,-4,-3,6,-10,-3,9,-4,3,9,-10,4,1,8,-5,5,-2,-5,-6,1,1,5,-1,-1,5,-6,2,-2,2,-3,8,4,-6,7,1,-8,-1,2,-1,8,-4,-2,4,1,5,-2,-1,3,7,-9,-7,1,-9,-3,10,8,-8,2,4,8,7,-2,-8,6,-6,-6,-2,-2,3,-3,9,-9,-2,10,8,7,10,6,6,-7,-6,5,3,-1,5,1,7,-2,5,-7,2,8,5,1,-3,2,-3,-9,4,-3,6,-4,4,-2,-8,1,4,1,3,-1,-2,8,-9,10,-7,-2,-6,5,-4,8,7,3,9,3,8,8,4,-3,-3,8,-7,2,-9,-5,4,-7,5,4,-4,5,8,1,-1,7,-1,-1,-5,2,-10,9,2,-6,-3,-10,7,10,1,9,8,-6,-3,9,-2,4,-10,5,-8,-7,-1,-10,4,-6,-3,-9,-3,4,-1,-7,-4,4,-5,-3,2,-4,9,-3,-5,-10,-4,-3,-1,4,-8,7,-4,-3,4,2,8,-10,1,9,-2,6,5,4,4,10,-1,-3,1,-3,-4,2,-10,-6,-8,7,-4,-6,10,-5,-10,-8,5,5,7,-5,-3,-10,1,-4,-3,-9,-1,3,6,8,6,-6,-7,-9,9,5,10,6,5,10,-10,2,5,5,-7,5,8,6,-2,-2,-8,-2,-4,10,6,-7,1,8,-9,5,-5,-1,2,8,10,-5,-7,-9,-3,2,10,-8,3,5,10,-9,-2,7,6,8,-7,6,-9,-7,-5,4,2,-6,-9,-8,3,-3,6,1,-7,-1,1,10,-4,4,10,3,-9,7,-2,-8,-2,9,3,1,-10,-6,-2,3,-5,-3,3,7,7,-4,8,-3,3,8,4,7,4,5,2,-9,-2,-4,-10,-9,-4,5,4,-4,-2,2,6,7,3,-5,9,1,-8,-6,-5,-7,-9,5,-10,8,-3,-7,-10,-8,-6,7,7,-7,-5,5,-10,-1,5,-2,-6,7,3,-10,-8,-7,1,2,-3,7,1,-8,-2,-4,6,2,-8,-1,4,-5,10,-7,-5,-1,7,6,9,3,-2,8,2,-10,-10,-1,-2,7,8,3,2,-4,1,8,-4,1,7,6,1,8,-6,-6,-7,8,-8,1,-6,-10,4,7,1,4,1,-5,-5,-4,4,-9,6,6,-8,-3,-9,3,2,-1,-10,-1,6,-3,-1,-4,-10,3,10,-7,6,5,6,-1,8,3,9,-10,2,-10,2,-5,6,-6,9,7,7,3,1,-4,-7,8,-3,-3,-2,5,6,4,-9,-10,-6,-6,-10,6,4,-10,-9,9,9,-6,-6,2,-2,-5,9,-1,-4,-7,7,-6,5,2,-8,-5,-2,5,3,-9,6,-8,-9,9,8,-8,1,-6,3,10,8,8,8,7,3,-6,9,-3,3,-4,9,-5,-7,7,-6,1,4,-3,5,4,5,-6,-4,-5,-2,-7,10,-1,3,-6,5,-5,9,1,-8,-1,-5,-9,5,-5,4,5,-5,10,-4,-7,6,-8,-7,-10,-4,-2,-5,9,7,-4,-7,5,-7,10,-3,-2,8,-5,-9,-2,3,5,4,-7,-7,4,-2,-7,-5,-2,-5,-7,-4,-8,7,-7,3,-10,5,10,10,7,-4,-3,-5,-5,-1,1,-7,8,8,-6,-9,-2,4,6,7,-6,-10,-7,-5,-5,-5,10,7,7,5,-8,10,9,-3,7,-8,8,3,-7,8,-5,-10,6,-4,5,-6,6,-5,1,-9,6,1,-9,9,-3,6,1,-2,5,2,9,-3,6,-9,-3,-5,-8,-3,3,1,-1,3,-4,1,-2,9,10,6,7,-5,4,1,8,-6,-8,-6,-5,10,-3,9,3,7,-10,-1,8,9,-8,5,4,7,-8,8,-2,-5,9,-4,-1,-6,-6,8,-5,-8,-5,10,-4,-1,2,8,-8,-10,-6,-9,-7,-10,6,-7,-4,5,-9,1,4,8,1,-9,-10,8,-5,-6,4,3,3,2,-6,9,3,-1,-1,-10,-8,1,-2,-7,-8,9,-9,3,-4,-9,3,8,-5,-1,-9,-9,4,6,-3,-10,3,4,-2,4,-3,8,1,9,6,-4,-5,-3,-7,2,9,-8,1,-6,10,-1,-5,8,-9,-5,1,2,-4,-2,2,-8,7,-5,9,-5,1,3,-7,3,-8,-10,8,4,5,-3,-1,9,-1,6,4,-1,9,5,5,-1,8,3,-5,10,-2,-8,5,10,-10,8,-10,-2,-2,-3,5,-1,9,-1,-2,4,-3,8,-10,6,5,-7,-2,1,6,-5,2,-5,2,3,6,-10,2,1,-4,-3,2,5,-8,9,2,6,10,7,9,7,-9,-4,-3,-2,-3,-8,-4,-8,9,8,-1,-7,8,-4,6,-10,-8,-6,1,-8,5,-9,8,1,5,1,4,1,-2,6,-8,-4,3,7,-8,-8,2,-1,-5,8,-2,9,6,7,-7,-7,1,3,-1,-8,7,3,-3,10,9,-1,-8,8,-10,-4,-9,-4,-4,2,7,-4,8,-4,4,-1,5,-3,-2,-6,5,9,-3,-2,-2,-2,-6,3,-4,5,4,-10,-7,1,3,2,-9,1,6,1,-10,6,9,-10,-8,-2,2,-1,-4,-8,10,-4,3,-1,1,-6,4,8,3,8,-4,4,-2,-3,-7,-1,1,4,-3,2,10,4,1,-7,2,8,6,10,-8,2,7,10,1,1,-2,7,-2,6,-4,2,8,2,3,-2,8,-6,-1,3,4,-7,9,-8,4,-6,7,-6,7,1,-1,-1,-10,2,-5,5,-8,-6,4,-8,6,-9,-2,-7,3,9,2,-1,-8,4,-9,-3,-9,4,10,6,-5,-10,1,6,-7,8,-6,2,3,5,4,8,6,-1,-3,-4,-3,7,-4,-8,9,-10,4,-7,9,10,2,1,2,-4,-8,-5,-3,-4,7,-7,5,-9,1,-9,-2,8,-9,-1,10,9,-2,-8,9,1,4,-2,5,-10,-9,-9,-8,-4,5,-1,9,-2,4,-7,3,-9,-5,-6,2,7,4,2,-2,-10,-2,-9,-1,-5,2,-10,-1,2,7,6,-5,-3,-10,1,-3,-8,-4,-7,9,-1,-5,8,7,-4,9,8,-5,-2,-5,-7,-8,3,-2,-6,-4,2,8,-5,-9,3,-9,1,-9,-8,-8,5,8,7,-8,-10,1,-2,-9,6,-6,-5,8,-10,1,-5,3,-4,-6,2,5,8,2,-7,-9,-1,1,-1,-4,-10,-10,-3,-3,-5,-1,4,-7,-3,4,-1,2,7,10,4,10,-8,-7,3,-1,10,5,7,8,-2,10,3,-7,-7,8,-2,7,9,2,-5,-2,2,-1,-1,1,-9,-9,4,5,-7,-5,3,9,-10,-6,4,2,-9,-7,9,-6,-8,5,4,-3,2,8,-4,7,-7,-8,3,7,10,2,1,-2,-2,-10,4,7,-3,-1,-1,-10,-1,9,6,-6,9,10,6,8,-8,6,2,-9,-8,2,9,8,-10,-6,3,5,-9,-4,6,3,-2,7,2,-9,-6,-10,4,-9,-4,-1,4,-1,-2,8,-8,-3,9,4,-5,10,7,10,-7,-6,-1,-8,-6,10,5,-5,8,-3,7,8,2,3,7,3,-2,5,-7,-8,3,10,-3,-2,4,-8,3,-2,4,-6,-1,-7,9,4,-6,-10,10,8,6,6,3,10,-2,5,-10,-8,-2,-1,4,7,-10,10,7,-7,6,-3,-9,-7,7,-8,-4,7,-9,5,6,5,8,-7,-3,-8,-8,-8,-7,-10,8,1,-2,10,-9,-7,6,10,-9,-9,-3,-1,-1,8,5,-2,5,7,-4,-1,1,-5,-1,-2,-3,-3,9,7,-3,8,4,1,3,-5,4,-7,3,1,-10,6,-4,-2,-5,3,-6,7,10,7,7,-10,7,5,3,8,9,-7,-7,7,7,-1,2,-1,8,-6,10,-6,-5,-1,-9,10,-4,-2,-5,2,-1,-5,3,-3,-5,-7,-5,6,-6,-6,7,-4,4,-2,6,-3,9,10,-5,4,-4,-7,-6,8,-1,8,4,-8,9,-7,4,-10,7,4,4,4,-8,6,-5,7,-3,-3,-6,-3,-1,-8,8,5,-9,-7,-6,1,-3,8,-3,5,10,1,1,1,-4,-6,-10,-8,-1,-3,8,-10,3,9,5,-2,-2,-2,-6,-4,3,-5,-2,-3,-9,-7,-2,-8,-7,1,-10,6,5,-4,1,3,7,-1,10,1,2,-8,5,1,4,-3,-4,-6,-8,-10,-8,5,1,-6,9,4,-5,8,-8,-3,1,-7,-6,-4,3,5,8,-1,-5,-2,4,8,8,-1,-6,-1,2,-2,10,3,3,-9,8,-2,8,-9,-1,2,-4,-8,-7,7,-6,8,-8,-3,10,2,3,3,7,4,9,-7,-8,5,-1,-7,-3,5,7,-2,10,-7,7,4,1,2,-3,5,2,-1,2,2,-2,-7,-6,7,3,1,-3,-4,3,4,-2,9,9,-9,-9,-8,-9,-1,-6,-1,2,8,6,-10,7,5,3,5,8,-2,-8,-8,-7,-2,-7,1,6,7,-3,-1,10,-2,-3,-4,-3,-6,9,10,2,7,6,3,7,-1,6,3,-9,-9,-1,1,-9,7,-2,-2,-8,8,-6,3,10,6,-8,-1,3,7,-3,10,-7,10,5,-6,2,6,-2,5,-6,9,9,1,10,-8,8,6,4,-5,-9,-3,-4,1,9,-9,9,9,9,-2,7,3,7,-1,5,-1,8,5,2,-9,4,-5,7,2,3,-5,3,6,-7,-2,-4,7,6,3,2,8,9,10,9,-9,6,-7,-2,-1,-1,-1,6,6,-2,10,8,-9,-3,-2,-10,9,9,-7,8,-1,-8,5,-2,6,9,-9,3,-5,-8,-1,1,4,-5,-10,8,-5,4,10,10,-2,-1,-5,9,-1,8,-5,3,9,-10,-4,-10,5,-8,2,1,6,-4,-6,-2,2,-10,-10,-6,-4,8,7,6,6,8,-1,-3,-3,-9,-2,8,10,-10,-3,-1,-5,5,-9,-5,-5,2,-4,-7,1,-5,-7,-6,-1,9,-3,2,-9,1,8,-2,8,2,-8,8,5,4,-6,-10,7,2,-10,-1,3,-9,-7,-5,7,-7,-6,-6,-8,-2,-1,3,2,1,2,-2,-3,6,-2,-6,-10,-5,10,9,4,-4,6,2,-3,-1,-4,-1,-4,6,10,6,-5,-8,4,4,-3,-10,4,-6,-6,3,9,-8,3,-8,6,-4,-5,-7,-2,-7,-9,-3,-3,-1,5,1,-10,-7,-3,-7,-9,1,3,-2,-8,9,8,-10,10,-9,7,-9,9,1,10,-10,-7,2,-8,7,5,-3,10,3,-9,7,4,-5,3,-4,4,-2,2,2,-8,6,-7,-8,6,-8,-8,1,2,-5,-1,-6,1,-5,1,5,-6,-7,-3,1,8,4,-6,-8,-8,1,-1,4,6,7,7,-9,4,-8,-2,-6,-2,-6,3,5,6,3,-5,-1,6,-10,-1,-6,6,-2,6,-9,-6,5,7,-5,7,2,4,-5,-3,-3,-4,9,-4,-8,-9,-7,10,-6,-3,3,8,-4,-9,5,1,-6,7,-7,-6,-1,10,4,3,10,-3,-8,8,-5,10,-9,-8,-6,-10,-7,-7,-3,-10,10,7,1,-3,-10,10,10,-5,-1,-3,9,-9,2,-9,-5,-2,-2,5,8,2,-8,5,-2,-6,5,-9,3,-3,8,-9,-10,-7,9,-8,9,9,4,-5,6,9,-1,6,-10,10,-2,8,10,-6,7,-10,-8,6,-2,-8,4,-10,10,10,6,6,9,-9,1,-7,-3,-7,-5,3,-5,8,10,4,-5,-10,6,-10,-1,-3,-6,3,9,-10,-4,-4,6,8,-9,8,9,-6,3,2,-4,-6,-7,-2,10,3,-7,-5,-8,-10,7,4,3,3,-5,-10,1,-3,-5,-7,9,3,8,10,2,4,8,-7,7,9,-6,4,2,-8,-2,-6,-6,10,8,1,-2,9,-4,-2,-6,-4,7,10,5,10,4,10,-4,3,10,2,-10,1,9,6,4,10,7,-3,-9,-10,9,-2,-10,-5,-10,2,9,-5,-9,-6,10,-6,-5,7,-4,-6,7,-5,4,7,8,7,5,6,4,8,-5,10,7,-5,-6,-3,-10,8,-8,-1,4,-4,1,-4,-1,8,9,9,5,7,6,2,8,-1,7,-5,-1,2,10,-4,10,-10,-9,-7,2,6,5,5,10,-4,-9,1,-9,-1,-1,-1,-8,-2,-9,-1,-2,-10,-5,-4,2,-5,6,-2,-1,3,9,-2,4,-5,-2,3,-3,5,-5,-4,-5,-9,-5,6,-3,7,-3,-10,5,-8,-2,-5,4,-1,-6,-6,-4,-4,6,-6,-8,-3,-3,6,8,9,6,5,1,-9,-2,10,1,-6,3,-6,-4,10,1,9,1,-1,9,7,1,9,-2,-9,2,-2,7,3,-6,-1,10,-8,6,-2,-3,-9,6,10,-6,2,6,4,-1,-5,4,6,3,-7,-1,-8,-9,-3,-4,2,1,9,-8,-1,1,-6,9,9,5,-5,-6,-5,9,-9,-10,-2,-4,10,-5,3,-6,-3,10,-9,9,-1,6,-9,3,-7,-8,4,1,8,-5,-3,9,-6,-9,3,-2,2,-2,2,-10,8,9,4,6,-5,10,-1,-6,-7,5,-3,-6,-4,10,4,6,-10,4,4,-3,-2,-9,-3,2,-1,9,4,1,-2,4,10,7,-7,-3,10,10,-10,-5,-7,10,3,-4,-5,-5,-5,-4,-2,-5,2,8,4,4,-8,-7,-7,4,8,-9,2,-9,-6,2,-4,5,-4,7,-2,2,-1,6,5,8,-8,4,2,9,-8,5,9,-7,-6,1,-5,-9,-1,4,7,-9,2,6,-1,-3,-7,9,10,-9,10,4,4,-4,8,-10,2,9,5,8,-10,4,-9,3,1,-6,3,-8,3,1,2,8,3,9,-5,-5,-8,-4,2,-8,1,-3,8,-1,-5,-4,-6,-10,10,-8,-6,9,1,-3,-3,5,-9,-8,4,-7,4,4,4,10,1,10,-10,-1,2,-4,-7,9,-1,-10,-6,2,8,1,-9,-7,-8,8,-6,9,-3,3,5,-3,-10,-3,-9,8,2,1,-10,-2,3,-6,-6,-7,1,-8,-3,-5,3,-1,3,-4,-9,-6,1,-9,5,5,2,10,-3,10,-9,-1,4,-9,-1,4,5,-1,8,-5,5,4,-10,-1,-5,1,9,-8,-3,-10,9,-6,-3,-5,9,4,7,-3,4,-2,-8,-5,-4,-8,2,-1,3,9,6,-7,-1,-1,8,-7,-2,1,1,-7,-1,-2,-4,-7,-10,-2,-10,3,9,2,-2,8,-10,-3,9,8,6,4,-2,-8,-7,1,1,-9,-8,6,1,-3,6,-6,6,4,5,-4,9,9,4,3,4,4,4,3,7,-8,1,-8,7,3,-2,-9,8,-8,8,8,5,7,5,3,-5,4,5,7,6,4,-6,8,10,10,7,-3,1,10,-9,5,5,4,-3,-4,2,4,2,3,8,-2,-1,-5,-5,6,9,-10,3,6,6,5,-9,-5,1,-3,-1,-3,-1,7,-5,-2,6,-3,-7,-7,1,8,-2,-1,10,3,-8,-8,-5,9,-7,6,-4,-4,-8,-3,-4,-8,-5,-3,-10,8,1,1,10,7,10,1,-2,4,-6,10,-9,10,7,8,-8,-7,4,-6,-7,-10,-8,-2,5,-2,-4,-3,-1,8,-6,5,-5,-4,2,1,-3,-10,-1,-1,8,-9,6,-7,7,-4,2,-7,-4,3,-1,7,7,-6,10,5,3,-2,8,-9,-7,-7,2,7,5,4,-6,3,-10,2,-8,-8,2,3,3,4,5,-10,-7,5,-7,-9,1,6,1,-9,-6,-2,-1,10,-7,4,6,-10,-1,5,5,-10,-8,-6,-6,-9,-6,-3,-8,-8,9,-10,6,-10,-5,4,10,6,4,-6,9,-5,8,1,-2,4,3,-8,2,-7,-2,-10,-6,-8,-8,-1,2,3,7,-10,5,10,-6,10,-4,-8,7,-9,-2,-1,5,-1,-9,9,-10,-5,-10,6,5,5,-10,-8,-1,-10,-5,-7,-5,7,5,-10,-4,-2,1,-2,2,8,2,-1,-2,-8,-3,5,-3,2,8,-3,-8,-7,-2,7,-8,-8,-10,5,-1,9,10,-10,8,-1,5,-9,8,1,-6,-4,3,7,2,-7,9,-4,4,1,7,8,-7,-4,4,-5,-8,-5,2,6,7,6,1,-2,6,-7,-7,-7,-4,7,8,6,-4,7,-6,1,-8,9,7,-6,-7,7,10,6,5,-9,9,1,10,-9,-2,-10,-7,2,2,-8,3,-3,-1,6,-6,1,2,-9,1,-9,-8,5,-9,9,7,2,-5,2,6,2,-2,-9,6,-7,6,1,-8,-9,-3,10,-6,-9,-9,-6,6,-9,2,3,4,6,7,-5,-4,-3,1,-7,6,-9,-7,-10,-5,-1,4,7,-3,9,-2,6,9,3,3,-8,-7,5,-3,7,3,7,10,-7,-6,-7,-3,4,-4,-1,-8,9,-7,1,9,-10,-4,10,-10,8,-3,4,-10,7,7,3,8,-3,6,7,-2,6,3,-9,-2,6,-4,3,-1,9,10,-5,4,3,4,3,-6,-9,4,-9,6,4,-10,-3,-9,10,2,6,-5,-8,-1,-4,-10,6,-2,-4,4,6,5,6,-10,3,-2,-10,10,-6,8,7,-3,-6,2,1,8,-2,7,-8,4,10,10,5,-9,10,10,-7,-10,8,-5,-8,8,-5,-7,1,4,-9,1,-4,-4,-8,-2,7,-2,-6,6,9,3,9,6,-1,-1,-7,-2,-3,-5,-1,9,-1,-3,-5,10,-2,-7,2,1,6,-4,4,-5,-4,-9,-9,3,9,-6,6,10,8,-1,3,-4,3,3,5,6,8,6,-4,-9,6,9,3,4,-7,4,6,-10,-7,6,-10,-5,8,8,-10,-6,4,2,5,3,-8,3,-6,-3,-5,-8,1,-5,-5,-2,-2,3,6,-5,1,2,-6,5,9,4,-9,10,6,-1,-8,5,-5,-8,-4,-9,-3,-6,7,1,-1,1,9,-2,-7,-5,-7,-7,-1,-1,-9,1,5,-1,9,8,6,10,1,2,4,-2,-10,-5,-3,-5,1,4,-5,8,-6,-6,8,-10,7,-4,9,-5,-5,9,9,2,-2,-5,3,1,-10,4,2,-6,7,-3,7,5,-8,-4,10,8,2,9,5,-5,-6,4,4,-10,-1,7,-10,-2,9,-7,1,3,9,9,3,-10,2,8,3,6,10,3,-10,-10,2,9,5,7,3,7,-9,-4,10,-8,1,-8,-1,-3,-8,9,-2,-3,10,10,-5,9,3,-8,9,-9,-2,-1,8,2,-7,-7,-9,6,10,5,3,3,9,-3,7,-9,7,-2,4,-4,-4,9,-1,5,1,9,3,-3,3,-1,8,-9,-9,-1,-4,-5,-5,-4,-9,8,-8,-7,-10,5,8,6,-7,-10,-6,1,-7,-10,1,9,-4,4,-7,-5,3,2,8,-7,5,-1,-8,10,-1,10,-4,-3,-9,2,-10,-4,-7,-6,6,-9,-1,-9,7,8,10,9,8,-4,-1,-2,-3,7,3,-6,7,10,-8,-10,-10,10,-6,-6,2,-3,6,5,-4,-1,4,-7,-3,-2,8,5,-8,-10,7,-1,7,2,-9,-3,7,-1,-1,5,-5,-4,-9,-1,-7,1,8,-1,-6,-8,-9,-8,-7,9,-7,-10,1,5,5,7,8,4,-2,3,-7,4,4,-2,3,6,8,-2,2,-9,3,6,5,-7,6,-6,-1,-1,-2,-5,-6,5,-7,-1,4,5,-5,9,3,-9,-8,-4,-3,3,5,2,-8,-5,6,3,7,9,9,4,-6,2,7,-2,-8,8,4,7,9,-9,8,-6,10,-9,-3,-2,7,2,8,4,2,1,4,-10,-10,7,-2,6,-8,2,9,10,-8,10,10,-3,-6,10,2,2,-10,-3,3,4,-4,3,-10,9,-7,3,-1,-10,1,-6,2,9,8,-4,-9,2,-3,-7,8,-1,3,10,10,-2,2,6,-7,-5,4,5,6,-9,10,3,1,1,-8,9,-3,-1,-10,-8,-1,-1,-2,2,-2,8,6,10,-7,-1,-3,5,3,2,4,-2,5,-3,10,5,-6,-5,-6,10,-7,-10,-3,-8,-4,4,4,-4,1,-6,-3,-4,3,3,-6,5,-6,-4,4,9,-4,-8,9,7,-9,1,-3,-3,4,-10,-9,-4,1,-5,-1,5,-5,6,-4,2,-8,-7,7,9,-8,-4,3,-1,7,1,10,5,-8,-9,-8,6,-5,-6,7,-6,4,1,7,4,-9,3,-3,-5,1,-3,-7,4,-6,-4,6,5,9,9,-9,1,-8,-7,5,1,-10,-5,-5,-8,-9,-3,4,7,5,3,-7,-2,-1,5,5,-9,2,1,-3,10,3,9,3,-5,1,2,4,-4,-5,8,7,-4,-3,8,-3,-10,-2,-6,-6,-3,10,-5,-1,7,8,-7,-5,3,5,-8,2,5,-8,10,5,-8,-9,9,-2,6,-4,-4,-4,-10,10,7,5,-5,4,-6,-7,4,-9,-7,-9,-8,6,5,9,-8,3,-1,7,1,9,2,4,-5,-9,4,5,-5,6,-2,-3,-5,10,-5,2,-10,-7,-9,8,-6,4,7,3,-2,-9,-5,-9,-1,6,5,5,-9,8,5,-1,5,2,7,-3,6,7,6,-4,4,6,8,-7,-8,-6,-2,-6,2,-8,-5,10,-3,-5,-3,-10,8,8,-1,-4,1,2,9,-10,-9,-2,1,8,-8,-5,-9,-8,2,3,-1,2,9,5,5,-8,6,-9,-1,1,9,8,2,2,-2,-7,6,-6,3,-4,9,-3,2,-3,8,-4,-1,-4,10,7,3,-6,-1,-5,-4,-5,10,9,1,-7,-6,-7,-3,10,-6,-7,8,9,6,8,-10,-4,-2,-4,-2,3,10,-5,-10,8,9,-7,9,-8,2,6,10,4,-10,6,-7,-10,-10,4,9,6,-7,6,-2,10,2,-6,3,-6,-8,7,-1,6,3,1,-2,-1,-1,5,-3,7,-3,8,5,-1,4,2,-4,-7,10,8,-7,3,5,-1,-4,-2,3,3,3,3,-1,-5,5,9,-1,7,5,6,-7,8,7,-10,-1,-10,-6,-4,-10,-1,2,-10,8,-3,-7,-5,-7,-10,5,7,-3,-2,2,8,-6,10,-1,-3,8,-4,-4,-3,-3,5,3,8,1,-6,8,8,5,4,-6,4,2,3,8,6,9,1,-5,7,-1,-10,9,4,4,7,-4,8,-3,-3,6,-4,3,8,-6,-6,10,-5,4,10,-9,9,-1,1,-7,5,-4,-10,-6,-8,3,-9,-10,1,-6,-1,9,-8,7,6,-6,7,10,8,6,-8,10,10,-2,3,2,-2,-3,5,2,4,-2,7,-10,10,10,3,-3,-1,5,-2,-7,-2,-7,-2,6,-8,-9,-2,1,-5,8,-3,4,-8,6,-8,6,-5,6,-3,-5,3,-5,5,5,-7,9,-3,-3,-1,-1,-6,-10,-10,-10,1,4,-9,6,-5,3,3,-3,6,7,7,-8,-5,-3,7,7,-9,1,-10,-4,-8,-8,-1,-7,-8,-4,-2,-5,-1,9,-2,-5,7,-10,2,3,-1,1,3,8,-2,-4,3,9,-10,3,5,4,5,-1,6,-9,7,8,7,9,6,-2,-5,-6,-1,10,8,-10,-7,-2,-4,-9,-2,-1,5,-8,3,2,3,6,9,-10,7,-2,10,9,-6,5,7,6,-5,-3,-6,-10,-4,-3,-10,10,2,4,-7,-5,3,-10,5,-4,-10,-1,-3,7,5,2,4,7,-5,7,-5,-4,2,9,-10,10,-10,-8,1,-4,-7,4,-10,7,-1,7,9,-2,-5,-10,6,7,-8,2,-2,8,3,-3,10,-8,6,-6,-9,8,3,-1,8,6,-6,-7,-3,10,-4,10,-2,-8,-6,-5,-5,8,-3,-7,-10,-6,1,5,-8,-1,7,-8,-2,9,-3,2,9,7,1,-2,-9,5,2,4,-4,-4,-8,2,-9,7,-7,-1,9,8,-2,-10,9,-2,7,2,-3,-4,9,3,7,1,1,10,-9,-1,-9,3,8,10,1,9,-8,-7,1,4,-3,3,6,3,4,-6,5,-2,5,10,-5,2,-4,-8,-2,-6,-9,9,6,3,-6,-4,10,-3,9,-3,-2,8,5,-4,2,1,3,-9,2,9,-2,-8,-9,9,6,-4,8,-6,-10,1,-4,-3,2,4,-3,3,-5,8,-4,4,9,-8,-2,10,-9,-3,-3,10,10,1,-6,-1,-5,-3,-5,1,-6,1,-7,9,-1,-9,-1,-10,-2,6,-7,-6,-7,-3,7,6,-5,3,-7,-8,-7,3,-5,-10,-5,-2,3,-7,9,3,-6,-1,-8,-2,7,3,6,-9,-10,7,-5,-10,-9,1,8,3,-4,4,-9,7,8,-7,6,7,-6,3,-7,4,-9,3,-10,1,3,6,-4,9,2,6,3,-8,-8,-4,4,-1,4,10,4,-8,7,-10,-8,2,-4,-10,2,10,8,4,-2,5,-3,-8,6,-4,1,-5,5,-10,6,8,7,7,-1,-7,8,-9,-9,-7,-4,-2,-7,5,-4,2,5,7,9,-9,-7,-3,10,-5,8,4,3,8,-2,-3,-8,-8,5,4,1,4,10,10,-1,9,-9,3,8,3,4,8,-10,-4,-4,-1,-4,1,-4,3,10,-7,4,10,-1,6,10,9,2,5,4,1,10,-1,6,2,-6,2,10,4,8,7,5,6,-1,-3,6,4,-9,2,1,-9,6,-8,7,6,-1,-1,-2,4,-9,-10,-5,1,-9,9,-1,-6,-2,-1,-6,6,3,6,4,9,-8,-8,-3,-7,4,-2,-6,1,-3,-9,-1,-6,2,-10,-1,10,7,-4,-9,-3,-9,-7,3,3,10,3,-6,-8,3,5,-8,-5,4,-5,4,-5,5,8,-2,2,-6,3,-7,2,-8,4,-3,1,10,-2,8,-9,-1,-8,9,-5,6,9,-1,-3,-8,-7,8,10,-5,-4,2,-3,10,8,-3,6,-4,-5,6,6,-7,-6,-10,-4,-1,-8,-2,9,-4,3,1,9,8,2,1,9,10,2,-2,-7,-7,-7,7,2,3,1,9,-9,1,1,9,2,5,-9,10,-1,2,7,4,-3,5,10,1,10,-3,5,-1,1,-1,-3,8,-10,-10,10,-6,-10,6,-6,-1,10,-7,8,-4,-2,-3,7,-6,4,6,3,-8,5,-5,10,7,-2,6,2,10,4,8,-7,-2,2,6,2,-8,-5,-7,-1,-6,1,-4,10,5,-9,9,7,6,9,-5,-5,7,-8,-6,3,3,-2,4,-10,7,-4,-7,8,-2,-5,-8,-2,10,-1,10,-6,7,9,-1,-2,10,7,-7,-9,1,-6,4,-4,-7,-9,-1,9,7,1,6,-8,-7,4,-9,-3,-8,-9,-6,-5,2,-1,10,-2,7,-5,-5,9,-10,-10,-5,9,-1,-4,-1,-1,4,7,1,3,1,10,2,1,-2,1,1,9,-8,10,-3,-4,2,-2,-1,4,-4,-9,4,10,-9,3,3,-4,8,-4,-7,-9,10,-4,8,-2,-2,1,-10,-4,-2,-3,-3,-7,2,-2,-10,8,4,-2,1,5,6,1,-4,7,6,-2,8,9,-9,-9,-4,10,10,-10,-5,-6,10,-6,-6,2,-4,10,4,-4,-10,3,-1,-2,2,-3,7,-7,-9,-3,10,9,-10,6,8,-8,-2,-2,3,-5,6,-1,7,9,-4,3,8,6,10,-3,-3,-7,-1,9,5,-8,-9,-3,10,6,-6,6,10,-3,5,9,6,-4,-6,-2,6,-1,2,3,10,6,8,-2,-5,1,1,-9,-7,-6,5,-4,-8,5,-1,-10,8,6,9,6,-3,3,6,-10,6,-8,4,3,8,-9,-8,9,6,-4,3,8,-7,-1,2,8,7,-10,-1,-2,3,-10,-2,-7,-6,5,10,-7,-4,-2,10,-6,-7,10,9,8,3,3,7,-6,-2,2,4,-9,-8,7,-10,-6,1,-6,10,-2,-2,-10,6,9,9,-8,-3,-1,9,-10,3,7,-6,4,-8,8,-3,6,6,-5,-9,8,-3,4,9,10,-1,-3,1,10,-4,-7,7,-6,1,8,6,1,-4,-9,8,-4,6,4,5,-7,2,-7,7,4,5,-7,5,-10,4,2,9,-9,-5,4,-8,-10,5,1,-1,10,-4,-6,-5,-10,6,-1,9,-3,4,6,-8,-2,4,-3,-8,-10,9,3,-2,5,4,4,7,-10,5,-2,-2,4,-10,2,9,10,10,4,-6,-2,6,-8,5,3,-3,3,-1,-1,3,7,-7,-3,-2,-1,-7,-3,-2,3,6,-5,1,4,4,-1,1,2,8,-9,2,3,4,2,4,1,-3,8,-6,-6,-10,-9,8,10,-7,-8,-8,8,-4,8,-8,-9,7,5,-10,4,-1,-10,4,-4,-9,-10,5,9,-10,9,-7,-9,6,10,6,-7,-8,-5,-8,-3,-5,-2,-1,-10,-7,7,7,-8,1,-10,-3,5,5,4,-10,8,8,-4,10,-9,4,3,-3,6,-1,4,-5,-5,-8,-4,6,4,2,4,-3,-3,1,10,-8,-2,5,5,5,-10,1,-3,-6,2,4,-3,10,-4,3,9,-10,-10,-6,-5,-5,6,-1,-2,4,8,-1,-5,-9,4,-2,-3,5,-7,10,-4,1,2,8,10,9,2,-10,-1,-5,-3,9,9,-1,4,2,-8,-7,4,6,1,-3,5,1,4,-10,-5,5,2,-4,-9,2,7,2,9,7,-3,-7,6,4,-6,-9,5,8,-1,-2,7,10,7,7,-9,-8,-5,-1,-2,2,-9,-2,-4,10,3,6,7,-5,-9,2,9,8,-4,-4,4,-6,-7,-7,-9,6,10,1,9,4,10,-6,6,2,5,-10,-4,-1,-5,3,7,5,1,-7,-1,10,6,10,-10,-6,2,3,2,-6,2,10,-9,9,10,2,-4,5,-8,4,9,2,-3,7,9,-2,-5,2,-9,5,6,5,2,2,6,8,7,9,7,7,1,8,-4,-1,-1,6,-4,9,-10,-5,-8,-4,-7,5,10,9,-3,-9,-7,-2,5,-8,-9,-6,-8,7,-8,-1,5,8,-9,-9,1,-9,-8,-9,-1,5,-5,-2,2,1,2,4,9,5,6,-10,3,7,4,-8,6,6,-4,4,-8,7,-6,-9,10,3,-9,-7,6,-8,2,5,9,9,10,1,-8,-9,-7,1,2,5,9,-6,8,3,-9,-9,-10,2,-2,7,9,-6,4,-6,-3,10,5,-7,7,2,-10,4,9,-1,1,1,-6,8,6,6,5,1,1,4,10,6,6,2,-8,-6,-1,-10,-6,6,-2,-3,-10,8,2,1,-7,4,7,-1,-8,-7,-4,7,3,5,-8,4,-1,-1,-4,9,-7,7,10,2,-4,9,4,-9,-1,-4,-3,9,3,-8,-10,8,-1,-3,2,-9,2,4,5,-7,-10,-5,1,6,4,9,-5,1,-6,7,10,4,-3,2,-6,4,9,-8,3,-2,-9,1,2,10,-8,5,2,-2,2,4,-2,-3,-8,-1,4,-10,-4,7,-2,-3,-3,-8,10,9,-5,-7,1,-8,-10,2,2,-8,-2,4,3,4,-6,10,-4,7,4,-8,3,-6,5,-8,1,-5,1,6,-9,-8,5,-10,-9,-10,-10,-9,-4,-7,-4,-8,-8,-7,2,-1,-6,-5,-10,-9,3,-3,-6,5,9,9,-6,-8,9,3,1,-2,6,-7,6,3,-3,-10,9,1,9,1,4,-2,-9,6,-1,-8,-8,1,-10,1,3,4,-9,1,-4,5,-4,-3,-4,-2,7,-1,-4,1,9,9,5,7,10,-6,-10,2,-8,8,4,-8,-1,-8,-1,1,2,5,5,3,-10,10,10,8,9,-1,-6,-7,-5,-2,-5,10,4,5,7,-3,-7,-9,-6,-4,-10,9,-1,5,-3,-6,-1,-4,-2,-2,-6,-6,-1,7,-1,-2,5,9,10,-6,2,-1,-8,5,3,9,-6,2,9,5,-4,10,-10,7,-4,5,5,-6,1,3,3,-5,6,-6,-1,-6,10,4,7,-2,-4,-5,-2,-2,-6,-9,6,8,3,10,7,-9,-1,6,4,-9,6,-5,-6,-3,3,-1,-6,-2,5,5,9,-10,6,-8,-6,9,2,-10,3,9,5,-5,-9,2,-3,7,-2,2,-2,8,-9,10,3,8,-5,-1,6,-3,-7,2,-3,-9,5,1,-2,-7,-8,-10,9,6,-6,-4,5,1,4,1,2,10,-9,-7,4,2,1,2,4,5,6,-4,9,-4,-7,-8,-5,6,-3,-7,-7,6,2,9,7,6,5,8,-5,7,-7,1,-5,-6,-10,-5,1,-4,-1,-1,-8,4,6,7,2,5,1,1,-3,-6,7,7,-3,1,7,-2,8,10,6,7,-1,9,-8,-10,5,-1,5,8,-10,-2,10,2,8,2,-9,-3,-3,4,1,10,10,-8,-1,3,-7,8,8,5,-2,-1,-8,-3,9,2,-1,-5,6,-6,-2,-2,-5,-8,2,1,10,7,8,-1,-7,-6,7,-9,-7,-2,3,9,6,-1,1,-2,-3,1,9,8,-6,6,8,-6,10,5,4,1,3,6,-3,-7,9,8,1,-6,2,8,-7,4,-4,3,5,8,8,-4,-4,7,-8,-3,-3,-7,3,5,-10,9,10,-4,6,4,5,4,8,5,8,-6,7,8,-9,-1,-3,-4,2,7,9,-3,9,4,-3,-3,6,-4,5,4,6,-2,6,2,-6,-10,-2,9,-2,-7,3,8,3,4,-5,-9,-4,1,-1,-7,-4,1,-10,7,7,-9,-8,-2,8,-7,2,5,1,5,-3,-8,-1,-4,3,-5,5,-1,-10,4,-6,-2,-8,-6,4,-10,4,-5,9,8,-9,10,-8,9,-3,7,-5,-10,5,-2,7,-8,-10,-8,2,-8,-8,7,1,-3,2,-4,8,-9,-7,-3,-3,-7,-6,1,-8,9,9,-3,3,-3,-7,-1,10,-9,-1,3,-7,-6,-3,9,5,-1,-3,5,2,2,-4,6,10,-2,10,-4,6,-8,-8,2,6,-10,-10,8,10,1,10,9,-3,-3,-4,9,-9,-9,-7,-2,6,3,-4,8,-10,9,8,-4,-7,-5,-7,3,3,-5,-6,-5,-9,-10,1,7,9,-3,-4,-2,-5,-5,1,-8,-1,7,10,-2,2,1,10,-5,6,9,-7,2,-8,-4,-5,7,7,-5,-8,7,-9,-3,6,1,8,-3,-1,-6,-4,-9,-5,6,2,9,8,-10,-4,-7,1,-4,8,-1,-4,9,7,8,-4,-4,-8,6,8,-5,7,5,-10,6,-6,-6,-5,-8,-2,-4,1,-3,-2,-4,-5,5,1,-1,-8,-8,5,5,-8,2,-9,6,-8,-8,-10,-1,1,6,-5,-2,3,7,3,-7,5,1,-10,4,8,6,-2,2,2,-5,6,-10,-7,-6,-9,9,4,5,-7,-2,9,-4,5,-6,5,-6,1,9,-4,-8,7,4,9,5,-8,-2,3,2,1,8,3,6,-3,4,9,-8,-1,-8,-2,6,-8,-1,-4,2,4,3,6,-3,-6,4,-9,4,5,-8,-2,10,-1,-2,7,2,4,9,7,-8,-7,10,5,5,5,8,6,-9,1,3,7,-9,3,2,-10,-4,-3,2,-10,9,-10,5,6,-6,9,-7,7,9,4,9,-4,-10,7,6,-10,-5,3,-8,-5,-8,-4,-1,10,8,-1,-7,-9,-3,-8,-6,-5,9,-10,-9,-1,-7,3,-5,-8,-9,9,-6,-1,-7,-8,-9,5,-1,7,9,-8,-3,6,3,1,5,-6,-2,-9,-9,-3,10,-8,-2,10,3,2,8,-3,4,-3,-8,1,7,7,9,-6,-8,1,-9,5,-10,7,-7,-8,-6,1,1,2,-3,6,10,2,-8,2,-5,-9,-4,-2,-9,-3,3,-9,-9,2,9,-6,4,9,-1,9,-7,-9,-7,3,3,-10,-3,1,-7,2,5,-7,5,8,8,-2,-6,-8,-3,-8,9,3,5,2,8,-10,-3,9,4,4,5,-8,6,-5,-5,5,8,-5,-3,5,-10,-2,3,-9,-1,10,8,10,-2,-2,5,-2,-5,-6,-2,10,7,5,5,8,8,3,-3,-9,-7,5,-6,5,-4,2,3,9,3,-9,-1,-6,2,-4,-4,4,-4,3,4,5,-8,-5,8,8,-8,-10,3,-8,5,4,9,-1,4,4,2,7,6,-9,-6,6,6,-4,1,-6,6,-8,-7,-7,-2,3,2,-4,-2,5,-1,-3,-6,-8,9,-5,-3,9,3,2,-10,-1,-5,-3,5,-6,-8,5,-5,2,4,-8,-2,8,-4,-1,5,7,5,8,7,-10,2,2,6,-9,1,9,4,-9,8,-5,3,3,-1,10,5,-6,5,2,1,-2,-1,-8,-8,5,8,-9,1,9,-2,-1,-10,4,4,7,-9,8,1,7,2,5,4,-10,-7,9,1,6,9,-9,6,-6,6,-7,7,-6,9,-10,-7,-10,-1,-4,10,-6,-10,10,2,10,-10,-6,-2,8,6,-4,8,9,-6,-4,5,-7,-8,8,5,-9,-7,-3,-7,-10,-9,-8,-2,-10,2,-5,7,-1,-9,4,-8,-10,-8,-4,4,-8,10,-3,4,1,9,-2,-7,9,3,1,-6,8,4,9,-8,2,-4,10,-8,4,6,2,-1,1,-8,-7,5,-10,-7,-6,7,-5,-3,-1,-6,6,4,-9,-3,-1,5,5,1,-1,-6,5,7,8,-5,-8,-7,4,6,-6,-4,-2,-5,2,-4,-6,10,-4,9,4,3,6,-10,-9,4,7,-4,-10,6,5,-3,-8,2,9,-6,-7,8,-6,4,5,5,-9,-1,-8,-8,-4,-5,5,4,1,10,-8,-3,-7,2,-6,-5,7,-3,10,-9,-2,5,-4,-1,1,-4,10,-5,-4,-10,-5,-7,-1,-5,-10,5,1,-9,-1,9,-4,2,8,-2,4,5,8,-10,-10,10,-1,4,-5,6,-5,-9,-6,4,6,-8,-7,8,5,-4,4,5,-9,7,3,-1,8,9,2,-10,1,-9,-1,6,6,8,-4,-5,-5,-8,-6,9,10,8,3,-10,-5,5,-7,-1,10,5,4,8,4,8,-4,6,6,6,1,6,-5,2,-1,-9,2,-5,-3,8,1,-9,-6,1,-8,-1,-2,-5,-7,3,9,9,3,2,10,-5,-9,-6,-9,4,3,-6,-4,4,-9,-1,8,-4,7,8,7,6,10,-8,6,-8,-1,4,7,-1,6,5,-4,-4,4,-10,-5,-4,8,-6,5,-5,-8,4,-8,10,-6,7,-5,-5,-1,9,-1,3,-6,-6,-2,-1,-2,4,9,6,-2,-7,2,-7,7,10,-10,7,-1,10,6,2,4,7,-1,-9,6,9,10,-2,1,-4,5,8,6,9,-7,7,-8,-7,1,-3,3,-4,7,9,10,-10,7,-2,6,-3,4,-6,-8,3,-10,6,-10,6,8,7,9,2,-7,-8,-6,6,3,-2,7,-8,-4,10,-5,-1,-2,-1,-6,-8,5,-6,7,1,-7,10,-10,1,-5,8,-7,-4,-7,-3,-8,-8,9,4,-7,7,-7,8,-7,1,-9,-3,8,-9,-2,10,5,3,-1,9,1,3,-3,5,-9,-6,-5,-9,6,-10,10,10,-5,9,-9,7,4,-8,-9,9,-3,-8,-3,3,-5,-2,10,-10,5,4,-8,4,9,9,8,7,4,-10,-2,-8,6,4,10,-3,-5,-8,8,-5,7,6,-3,-7,-10,-5,1,-9,-1,-5,7,7,6,5,9,-2,5,2,-3,-6,-7,5,-4,7,7,8,9,-8,-3,9,-2,-10,9,6,2,-4,2,-9,4,-2,7,5,-7,8,-5,-4,8,-3,-6,8,10,9,1,-8,3,6,-2,-3,-5,1,-10,6,-8,6,9,-4,-7,-2,-10,-7,-4,2,-5,7,9,-1,-4,8,9,6,9,-8,-2,9,5,-6,9,5,4,-8,-1,-6,8,-6,10,-5,-3,-9,5,8,4,-9,1,-10,7,2,5,-2,1,-9,2,-2,-9,10,7,-6,-2,-5,-10,-2,1,4,1,10,-7,-3,-5,4,3,9,-3,-4,-9,-10,4,-5,-7,4,6,9,4,-4,6,2,3,-1,6,1,-4,4,4,-4,8,-6,3,2,7,8,-4,-5,4,1,-1,7,5,5,1,-10,-9,-7,-4,-4,3,-6,-4,3,-7,2,-9,5,-10,-3,10,-10,-10,5,-6,-6,-1,-7,3,7,-4,-8,-7,7,3,-6,3,-4,-7,-8,-8,-1,9,7,7,2,2,4,-4,7,-1,10,1,9,-5,-10,-3,3,10,-4,4,8,-5,-7,3,6,-7,10,-2,-7,-7,-9,9,-10,2,5,9,5,-6,-5,-4,-5,-7,10,-3,6,5,8,-7,-2,4,8,3,-9,6,1,7,3,-8,-3,2,-9,-5,3,-9,5,-4,-9,6,9,-4,-4,-4,-4,1,-5,7,2,-3,5,9,5,3,-4,2,3,-6,8,1,4,1,7,-3,1,-3,6,-8,-7,5,-2,-7,-6,9,2,-5,-3,6,-6,6,-5,-6,1,3,7,-1,8,1,2,-7,-1,1,-1,-2,7,6,9,2,10,-9,-5,3,10,-5,-5,7,7,9,-8,-4,-1,5,-6,1,6,10,-2,-5,10,-5,4,-10,1,-6,-2,-1,5,-4,-7,-7,-5,-4,-4,9,1,-9,-5,6,10,-4,6,-7,5,4,-6,-7,-9,-8,-2,-7,1,1,-6,-4,1,-1,7,-10,7,8,-6,-4,8,10,-9,4,-4,9,-2,-8,-5,1,-7,6,-6,9,9,-9,-7,6,7,-7,-5,-2,-9,1,1,6,7,-6,-6,7,8,2,-4,-1,-10,-3,-3,5,7,-6,2,-10,3,3,1,-5,-7,-6,9,3,6,-8,1,2,1,-10,-9,-1,-4,-2,-6,6,7,-6,7,-8,7,3,9,-8,5,-1,-6,-9,-9,-7,-1,10,-5,4,6,-7,8,-1,-7,-5,-6,-1,1,3,2,-4,-5,10,-1,-1,6,1,8,-9,2,-1,2,-1,9,-2,-5,3,3,7,-8,4,-6,6,-9,-3,8,-9,4,-3,5,-6,-6,-10,2,4,6,4,4,-8,-4,6,-4,4,7,5,-7,-2,-1,1,-10,3,-4,9,-6,3,-9,6,7,3,9,8,8,8,-2,3,5,-7,-3,-9,5,-1,-2,-8,-8,5,-9,-5,4,-4,-4,8,3,10,-4,-6,-2,3,-5,5,2,-1,4,5,1,4,-6,-7,-8,4,-8,10,7,-4,-4,6,-10,6,4,1,5,-3,8,10,6,9,-4,4,2,-6,6,2,-8,9,4,-7,7,-9,-9,2,-5,-1,-10,2,10,8,-7,-1,3,-7,10,-5,2,-4,7,8,9,-2,-2,-2,-2,10,5,6,-1,-4,-7,-10,4,-1,9,2,-7,-10,-9,-3,5,2,-7,7,-1,9,-1,-8,2,-8,7,1,-4,-4,3,6,1,9,6,5,6,-7,4,2,3,7,9,5,-10,8,6,-5,-10,6,10,-5,-7,3,-6,-7,6,10,-5,1,-5,1,1,-8,-10,-8,8,-9,4,8,9,-10,3,-10,-8,-6,-8,-4,-4,-1,-9,-7,2,5,7,7,-1,9,-10,2,2,1,-6,-10,-7,5,1,4,7,9,-3,8,-5,7,9,-3,9,10,7,6,-2,10,4,-7,3,4,4,9,-2,5,6,-10,-2,-10,2,-2,8,10,-8,-4,-4,-9,2,-8,-4,4,10,7,-8,-10,-5,-7,-6,7,-5,-7,9,7,-3,4,7,7,5,9,3,4,-4,10,-9,6,-8,-4,10,-8,6,10,3,-3,3,10,1,-3,6,-5,-4,10,5,-9,-7,9,3,9,9,4,3,-8,-9,-9,8,-9,-6,-4,-5,7,-4,-5,6,-2,-5,-6,10,3,7,-4,6,7,4,-3,6,1,6,6,-8,-8,-7,-1,10,-8,-6,4,-8,3,4,-1,6,2,-7,-8,1,10,-2,-4,-7,-9,-5,-4,-6,4,-5,-4,-8,6,9,10,10,5,-1,4,9,10,10,6,-2,-10,7,9,10,-9,-9,-8,-7,3,-2,-5,-2,-7,-8,10,3,-9,2,4,-5,-5,-1,5,6,7,5,-10,-6,1,8,-6,-1,-3,-4,9,1,-4,-6,2,7,9,1,10,4,3,-5,7,5,1,7,1,-3,-10,-3,1,2,-3,7,2,5,7,6,5,2,-1,5,6,-8,-7,9,-3,7,-5,9,10,-3,-3,-1,-10,-4,3,-4,7,5,3,3,-6,3,-5,-9,4,1,10,-6,4,-3,9,-6,-7,4,5,-9,-6,-2,-3,-7,2,-6,10,5,4,-1,-3,-3,7,4,3,-5,-4,-3,6,5,9,-2,-3,-5,5,2,-4,-10,-10,-7,8,3,8,10,-5,-4,6,5,3,8,7,-7,5,-6,-4,10,-2,7,-9,4,1,10,5,7,-5,-7,-5,5,-2,4,1,-9,7,5,-2,-1,8,-8,-5,1,2,-4,10,6,10,9,6,-8,-3,-10,-1,-6,10,-2,-3,-7,-8,-9,-2,-2,6,6,9,-4,5,5,-3,-7,-9,10,-1,-4,-9,9,9,-4,3,7,-3,4,3,6,-4,-2,3,4,10,4,2,-1,-9,8,-6,-5,3,7,-1,-5,9,8,7,7,-4,9,8,-9,-6,8,9,8,-3,10,-9,8,10,1,10,7,1,-1,5,-6,6,-10,7,9,-5,3,5,6,-7,-5,5,2,9,6,3,6,8,-4,-5,5,3,-8,9,-4,-10,-7,4,-2,-5,8,2,7,1,5,6,8,7,-10,9,-3,4,4,9,10,6,-2,-3,10,-2,-9,-4,10,2,-8,-5,-2,10,6,3,3,-7,10,4,1,3,-6,7,-10,5,4,8,-10,1,10,-5,5,-8,9,3,9,10,-4,-1,-9,-2,-8,-6,-9,-6,3,1,-1,-3,4,2,3,-9,10,3,8,-10,-8,-7,-5,5,2,6,-9,-4,4,-6,-10,5,-7,-9,6,1,8,-10,-9,-5,-4,-6,9,-4,8,1,7,5,-6,8,6,5,-9,10,-1,1,-5,6,7,-8,-2,-10,-9,-4,3,-7,1,-4,-7,8,-7,-3,8,-6,-1,-9,-7,5,-7,-9,9,7,9,2,-6,-6,-1,-5,10,3,8,-6,2,1,8,-8,-7,9,-8,4,1,-7,10,-1,-5,-2,8,-10,-9,10,10,-6,-4,-4,6,-6,-9,1,-7,10,9,-5,-1,-7,-5,-2,4,-1,-3,-3,-3,7,-4,-1,-3,2,-6,8,3,10,10,-2,-9,3,8,-2,4,4,10,-8,-8,-2,7,-2,5,8,-5,10,-5,-10,8,5,3,-2,5,-5,-10,7,-7,10,4,-7,-10,5,-1,-8,8,1,-1,4,2,-10,6,-2,10,-7,1,3,3,5,-2,-1,6,-2,6,4,-7,2,4,8,-7,-8,1,10,-9,5,7,4,1,-10,-3,-7,-1,-4,3,10,-1,8,10,-5,2,4,8,-3,-3,-8,-9,7,-3,4,-4,-8,5,-6,-4,5,3,-7,7,-1,-3,7,3,-2,6,4,2,-7,-10,1,-4,-9,-8,-7,6,-5,9,1,-5,-10,-10,-3,8,9,-2,1,-1,-4,-7,-3,-1,2,-10,3,7,-8,-10,7,-2,-8,-1,2,-9,10,-9,1,-1,1,-7,9,-10,10,10,1,-8,-6,-6,-10,7,3,2,8,-8,-5,7,-2,2,10,9,-2,8,5,-8,-3,4,-3,-1,-2,-3,-7,-2,7,8,4,9,-6,7,3,6,-2,-1,9,-7,-2,-7,-9,7,-2,5,4,-3,-1,2,8,1,10,-5,5,-9,2,-7,4,-1,8,-4,8,-3,-10,4,-4,-7,6,-3,-6,9,8,-3,7,-1,-9,-7,2,7,-6,-9,-3,-5,8,1,10,-4,-3,3,2,-7,6,-8,-6,10,6,-2,-6,2,-7,-10,3,7,2,8,-3,4,8,10,9,-6,1,-7,-7,3,-10,-2,8,10,1,-5,-2,-6,3,4,9,-10,-8,-9,4,10,4,8,3,-3,6,9,-7,10,-2,-5,-4,1,-9,-6,2,-8,8,-10,6,7,1,1,2,9,6,5,6,2,8,-10,-6,7,-4,6,10,3,-1,1,-6,7,4,-3,-2,8,5,-8,-6,-6,4,2,7,-7,-10,2,-9,-7,5,-3,-7,4,-9,-4,1,-9,3,-1,7,-9,-6,-2,-1,8,-8,-2,-4,-6,1,9,-9,-7,10,-3,5,3,-4,-8,3,-3,-9,-6,9,7,10,-2,-4,1,4,-2,-5,-4,-1,4,-8,-5,-9,-9,2,10,2,3,8,2,8,-5,-3,10,9,8,-10,-4,5,-1,9,-1,3,7,-9,-7,6,-10,1,3,-5,-9,5,7,-7,8,-10,-7,4,6,4,10,5,1,9,6,-6,-10,8,-2,6,3,1,-8,-5,-10,-8,-2,-10,7,-6,7,7,4,5,-4,-8,-4,8,-3,6,5,4,5,10,-7,-6,-2,-2,-8,-4,5,-9,8,10,-4,7,-10,-7,-6,8,7,10,7,-6,6,-9,-10,9,-8,3,7,1,10,-4,-7,4,8,-3,-5,-2,-7,-1,9,-8,10,1,1,5,-2,-10,5,4,7,8,4,-2,-9,1,2,9,1,1,3,-3,-7,5,8,-5,7,-6,1,6,-2,10,-6,-8,-10,-9,5,10,-7,-5,-6,-2,2,-6,8,5,-10,-4,5,-1,10,-7,-4,-8,2,7,-2,1,-7,-8,-10,4,7,6,1,4,9,-6,-8,3,-6,8,-9,3,-7,-2,-4,-8,-6,3,-2,-9,-10,-4,-9,-8,9,-4,-6,-4,-8,9,5,-2,-2,10,-2,6,4,-10,-9,8,6,-6,-9,-5,-1,6,4,8,-1,-9,-7,-6,-5,4,7,-3,3,7,-4,-6,9,-10,2,-10,-6,7,-5,4,9,5,-9,-1,8,2,-2,-6,2,5,-1,6,-5,-9,-6,-10,1,3,2,10,-1,3,-3,-4,2,-1,-6,10,-2,10,4,-4,-3,-4,-8,8,-1,3,-7,-10,-8,-4,8,6,5,-7,-5,-5,-6,5,7,5,2,1,5,-10,4,7,-10,-1,8,5,9,-2,-10,10,8,-5,-3,2,10,3,8,6,-5,-2,-5,6,10,2,5,-9,-9,-5,-1,-2,-1,-4,9,6,7,8,-6,7,-4,-7,-2,2,-1,4,6,-4,3,5,-8,-7,-8,6,-9,1,3,-2,4,-6,5,-8,8,-7,8,4,-10,10,5,-3,8,-8,3,5,8,-4,-3,-1,2,3,-9,-5,-7,-6,-8,7,-4,-8,6,4,-5,6,-9,-9,4,-1,9,1,-1,-10,-7,-9,-3,8,10,-5,2,-1,8,-4,-1,7,-4,-10,5,-6,-9,5,-1,3,-7,-6,-2,2,6,4,4,1,-10,-3,-1,1,-5,3,-9,7,7,-7,-10,-10,-8,8,-8,7,10,-6,8,-2,-4,-9,3,1,9,10,-8,8,7,-7,2,4,4,4,5,-5,3,2,-1,-8,10,10,8,-5,1,-1,-7,-7,-3,5,9,7,-5,9,-1,-6,5,-10,-3,10,-8,-9,4,-6,-8,-6,-10,-2,1,2,-6,-4,4,6,10,9,6,3,-5,8,-1,-2,-7,-7,-4,2,-7,3,-10,-9,4,10,-8,-4,3,6,-8,6,-1,-4,2,-6,-10,-2,-9,-3,-9,-7,-6,-9,2,-5,-4,-6,4,1,-5,8,-8,-8,-1,2,-3,-8,7,-10,-3,-1,-5,-1,8,6,-10,1,-5,7,-1,6,5,5,-3,4,9,2,-2,-3,-6,-4,-5,6,-3,4,9,9,5,-9,8,-4,-9,-1,3,1,-4,6,9,7,-5,7,-2,2,-10,-8,4,-5,2,4,-1,3,-10,-5,2,-1,5,-3,-6,-6,7,5,8,4,6,-5,1,-2,-10,-9,9,1,10,2,-10,2,-4,9,-7,-4,-9,1,9,-2,-10,-1,-3,-2,-6,-8,-3,-4,-7,1,-5,8,5,5,-3,-1,8,-2,4,-5,-8,-7,-3,-10,-7,4,-7,6,-4,-4,-8,9,-6,-8,-9,-1,5,-10,2,-9,-2,-10,7,-8,7,-7,-8,-2,9,7,4,-5,-9,-7,6,1,-9,4,5,7,8,8,10,2,-9,-9,10,-3,-10,1,6,-1,-3,3,1,-1,-3,4,-8,-5,9,1,8,10,4,-2,-5,7,10,-7,1,-7,-8,8,-9,-4,-4,6,9,-10,9,-7,-4,4,6,2,-1,10,10,-3,10,7,-2,-8,1,8,-7,-4,-9,5,-10,-3,-8,8,2,6,1,-9,-6,-8,4,-9,-10,2,-1,-5,5,-2,2,10,-5,7,10,3,-3,-5,6,8,6,5,8,-10,7,-4,6,-4,-10,9,7,8,-2,6,6,1,-3,-1,6,2,3,-6,-7,10,-1,7,-10,7,7,-9,7,-7,8,-9,-7,-10,6,1,-6,3,1,-5,-5,2,-8,-7,3,-5,-9,-5,-5,1,3,-5,7,6,7,9,-6,6,-2,-10,6,-5,-8,-5,7,2,-10,-7,-6,4,-4,5,-4,5,5,-2,-1,-8,-7,-1,9,-4,-2,-5,-4,2,-2,10,-10,-3,-2,-8,3,-1,-8,-7,-8,7,2,10,1,-5,-1,-10,-2,7,-9,7,2,-4,-2,9,-4,2,10,-3,4,-5,-7,-5,7,4,-9,-10,9,-3,-5,-1,-9,-6,-4,10,-8,-2,-10,-3,1,3,-8,-2,6,-10,-10,-1,-3,-7,-5,3,-4,8,4,-10,-1,-6,5,8,7,-4,8,-5,-2,7,3,-3,-7,-10,-6,-7,-3,-6,4,2,3,-6,1,1,8,-3,10,-8,8,-7,8,9,-6,2,2,-1,9,-5,1,-6,-6,9,-4,2,-3,-4,2,2,2,-7,-7,-7,-6,-9,-10,5,5,-1,-1,2,-9,-4,-2,8,10,8,4,4,-10,8,-1,6,-8,-6,10,-10,-6,10,1,-4,3,-8,7,-8,6,-7,-8,-4,1,-5,8,10,2,-2,7,-3,7,-7,3,1,1,8,-4,8,-2,6,2,4,5,-6,3,3,1,4,7,-3,7,2,4,9,-4,-8,1,10,-9,8,-6,-1,5,10,3,2,7,-3,3,8,7,6,7,3,2,7,-6,-6,-4,-1,-10,-6,9,9,-1,1,-1,3,-3,-4,-2,5,-7,-7,7,-9,2,-5,5,3,1,4,-1,1,-7,-2,-4,-5,8,-4,-1,-4,-8,-4,-3,1,-2,-7,3,-8,-1,-9,7,-7,-7,4,4,1,-6,-5,3,-4,-2,-10,9,7,-10,4,-10,6,2,5,7,5,2,-4,-9,-2,1,8,-1,7,-9,1,-2,7,7,9,8,7,6,-7,-2,-8,2,-1,10,4,-1,-1,4,-6,-9,-4,10,9,3,-3,-4,7,8,8,-8,-7,1,-1,-7,-5,3,-5,3,9,1,-2,-4,10,-9,-9,-3,3,6,9,2,-2,-7,5,3,5,-9,-1,-8,-6,1,3,4,10,-1,-5,-6,5,8,-3,-8,-6,-5,-10,10,-1,3,-7,-1,9,9,-2,-3,-8,1,-1,-10,-3,-4,10,-1,4,-5,1,9,6,3,3,-9,6,-2,6,-6,7,-6,-5,-7,2,-2,-8,4,9,3,5,2,-1,-10,4,-10,7,7,-4,3,-6,3,-5,7,-4,5,4,3,-10,6,9,7,3,-10,-8,-5,7,10,4,-4,-10,2,-6,1,7,4,-3,-6,4,-3,8,-9,-7,4,8,4,9,-4,-10,-5,-2,5,-7,-2,-6,3,5,6,3,-5,-10,-9,-6,5,7,3,6,-3,-8,4,-9,7,-9,6,-4,2,-2,2,3,-4,-5,10,-6,6,9,9,7,2,8,9,-10,6,4,-10,5,-9,-10,4,3,9,10,-10,3,-6,-1,-4,7,-3,-8,-2,-8,3,-2,-1,7,-7,-9,3,-10,-2,3,1,8,3,-8,6,7,-3,6,-4,-5,7,7,-5,-10,-7,5,-5,4,6,4,-8,-3,10,5,10,4,-6,-1,7,10,-6,-3,-7,-10,7,-8,5,-7,9,-8,4,8,10,-10,1,-4,-4,-8,2,-5,2,-5,3,3,-4,10,-10,7,-8,-10,5,-5,-8,10,-1,-10,-6,-3,7,-10,-6,8,-1,-9,-1,1,2,7,-9,2,1,6,-7,8,-6,6,1,9,10,-4,-6,9,10,-7,-2,-10,9,10,-6,1,-7,3,10,3,-7,-10,-1,-10,6,10,4,-3,-8,10,-1,4,-7,-9,9,8,-8,-1,-9,10,8,-5,9,-7,1,9,-2,4,-1,8,-5,-6,-5,2,7,1,-1,8,-2,-7,6,-7,-10,-8,1,9,-2,-9,-3,1,10,-5,-8,-10,-2,5,2,8,10,3,2,7,10,-1,6,2,3,8,-4,4,-5,6,9,-9,10,2,5,-7,7,7,9,-1,9,-4,8,-1,-6,-10,2,6,3,-7,-9,-3,-10,10,-2,-2,8,5,5,-9,-4,-6,8,10,1,-2,-10,5,-7,-1,-5,9,-10,-1,2,-6,7,-5,-5,8,2,6,-5,4,-5,-9,10,6,-4,-5,-5,3,4,-10,-2,-6,-8,-6,3,-5,5,-9,-3,4,-9,4,-1,-7,4,5,6,10,-4,-9,4,-5,9,5,8,1,-10,3,-3,-6,8,5,-5,-9,9,5,-1,6,6,-2,-1,-2,-10,-2,-5,-2,-2,-8,1,-5,7,-6,2,-8,3,3,-7,-7,-7,-9,-9,-7,9,-7,5,3,-6,2,-10,6,-2,-9,3,-5,-7,5,7,-5,9,9,6,6,10,9,8,-5,-6,9,-2,-4,-9,3,2,4,-1,-5,-4,10,1,-6,-7,-9,-7,4,5,8,-10,-1,10,6,-10,-2,-4,-10,10,-3,-9,9,5,7,5,5,6,-8,3,2,4,8,4,2,8,-2,2,-4,9,6,-7,-9,-6,3,-10,-1,-9,-2,-10,9,-2,4,-4,-10,2,-7,4,3,-1,-7,1,5,10,-5,4,8,-4,-1,-1,-1,4,1,4,-5,-10,7,-2,-3,2,3,-1,1,3,8,-2,8,-9,-3,5,-9,2,-8,8,9,1,-5,2,2,9,-9,8,-6,-6,-9,7,-6,4,5,9,-4,-5,3,-7,3,4,7,-1,9,10,-10,8,5,-4,-7,-4,1,2,-9,2,4,-5,-8,-4,8,8,2,-6,1,-9,10,9,-3,9,9,5,7,-6,8,3,5,-2,7,-6,-7,-7,8,-10,7,4,-1,1,9,-3,9,-3,-5,-3,-4,-1,6,9,5,7,-1,10,-10,-9,10,7,8,-8,-4,7,2,8,5,-3,7,2,3,-9,5,-3,10,8,10,10,7,-4,5,-8,-9,1,-1,3,9,6,-10,10,-10,7,-4,-6,4,9,-1,-10,-10,-6,5,4,3,-7,2,4,-6,2,8,1,7,1,-1,-8,-1,-1,-6,-2,6,4,7,-9,-1,-4,-10,-10,9,5,-2,8,-9,-10,5,-6,1,8,-9,4,-2,8,-7,9,10,5,-8,5,-3,2,9,8,9,-10,5,-6,-4,8,-3,-7,-4,-4,7,-10,6,-8,-2,-7,-4,-7,2,-5,8,-10,-2,-3,-1,-9,-8,-9,-2,1,5,5,4,-8,7,-7,-7,-5,3,-7,7,-3,6,-1,-8,2,-10,-1,-1,3,2,-3,6,-10,-8,-3,5,-9,-7,9,3,-7,10,-9,6,-9,1,-9,-9,-8,-8,-3,-7,3,-5,7,4,10,3,5,1,-10,-5,1,-10,3,10,-10,-8,-10,5,-10,-3,-1,10,-6,9,7,-6,7,9,-5,-4,7,10,-5,-5,2,-5,-2,10,-10,-7,2,-7,-1,-7,-7,-3,-2,-10,-6,4,-2,-4,6,6,2,4,5,2,-10,-2,9,9,-8,2,5,5,-5,-6,2,8,3,9,5,-6,8,10,-5,3,-2,-7,-1,8,1,6,4,-9,-7,-7,-8,7,-2,7,8,9,7,8,-10,1,-10,5,2,-1,2,1,-10,10,-7,-7,9,6,-4,3,3,-5,2,7,4,4,5,-10,6,-6,8,-10,3,-4,-4,-9,2,10,-4,9,4,-5,-3,-5,-4,-3,-8,1,3,-6,-10,-4,1,-6,10,4,-3,4,-6,6,-1,4,4,-9,-9,-1,-2,-3,8,1,-7,5,-5,-5,-7,-3,-9,-8,-2,-7,-3,-4,-5,9,6,-5,-4,4,-9,-2,-9,-7,-2,1,-3,9,-9,1,9,7,-2,2,-3,5,5,-10,-2,3,3,2,-2,-2,-5,3,4,3,4,-2,-2,-9,-6,-1,8,-6,8,9,-10,-1,5,-9,5,5,-7,-6,-7,6,-4,4,3,-6,-8,10,-5,3,6,9,5,-1,-4,-1,-2,4,6,-1,-8,9,-2,-3,2,9,9,-1,3,-7,9,-5,7,-8,-7,-9,3,-8,10,2,-9,-2,-10,-3,5,9,9,4,5,-8,-8,-5,6,-8,7,10,2,4,-5,4,-8,3,-6,5,6,2,-10,-6,2,-7,-3,-7,-9,6,10,5,2,-7,-2,10,8,1,-10,-6,-1,5,10,-9,-3,-4,-5,-10,6,5,-2,7,8,-7,6,-5,8,3,10,-6,8,-3,-2,2,-2,7,2,3,-5,2,-6,10,-5,-2,8,-9,2,1,-6,-2,-10,2,5,3,10,3,2,-1,-8,-5,3,-3,3,6,7,-8,7,10,-9,-3,-10,-6,10,1,-10,-4,-8,7,3,5,-3,6,4,3,-10,-4,-3,-3,8,2,-2,-3,7,6,-5,-7,-3,-10,10,-10,-2,-9,5,-1,-9,2,-1,-2,7,8,8,-4,-10,-7,10,1,4,-8,-3,3,-1,-3,-4,-3,-4,4,-6,-2,3,-7,9,-4,7,1,8,-3,-10,3,3,4,-5,-9,7,9,3,2,5,2,-7,-3,-8,5,-3,2,4,-5,-6,-2,-8,-6,9,2,5,6,-8,8,5,5,-4,8,-5,-9,-7,-8,1,5,-4,-4,10,1,-8,5,-4,3,-9,8,-4,-7,-7,4,-10,10,6,1,1,-6,-2,-2,1,-4,8,4,-10,-1,-7,7,-5,-1,8,-9,-5,9,7,-4,9,-1,-2,1,8,-9,8,-4,10,6,-9,-10,-1,10,10,-8,-1,-8,-4,5,2,10,-7,-4,10,-8,4,-3,-4,-5,-6,5,-2,2,-3,-9,-10,-4,-3,-7,-8,-4,-2,-9,2,3,7,-9,3,6,-10,-9,-5,-9,-1,3,-1,4,-8,10,-7,9,-2,-4,10,1,4,-10,2,7,-6,-5,-9,-10,1,6,4,-3,-4,3,4,3,3,7,3,-1,6,5,4,-4,-5,5,6,10,-3,-5,7,7,3,7,1,4,7,-3,-5,8,-7,-3,-8,-4,-6,-2,-1,4,6,-10,3,-4,-3,1,-6,-10,-1,8,6,2,3,6,2,7,-3,-5,-9,9,6,2,9,4,4,9,4,-3,-5,2,-1,7,4,-4,-1,-6,3,10,9,1,-6,3,-2,-10,7,6,10,4,7,8,-9,6,2,3,2,3,4,1,-6,3,-2,3,-2,8,5,9,10,-7,3,-2,-5,4,-4,-3,3,-4,-5,-9,-4,-8,2,-6,-3,5,-4,-3,-3,-6,10,-7,-5,2,-8,9,-5,-2,2,-9,10,3,10,-2,-10,10,-8,-7,-8,5,7,9,-10,-10,8,9,3,3,-7,6,3,-1,3,-6,-4,-6,-4,6,-5,-8,8,-2,-1,-4,-1,-10,-8,-5,-7,-3,-1,-6,5,9,-8,4,6,7,-2,10,3,6,-10,-6,2,-10,10,8,-9,5,7,3,5,3,-1,1,-2,9,9,-1,-5,-6,8,-2,4,-4,9,6,-7,3,3,-6,-2,9,10,-6,10,4,7,-6,-5,4,8,-2,-9,7,-1,-9,7,6,-7,-4,4,6,6,-4,2,7,-6,-9,3,6,-8,-7,-4,-4,-5,7,-10,3,-7,-7,3,-1,2,-5,-5,-7,8,9,6,3,6,3,5,2,-2,-2,-2,7,2,-6,-5,-1,-8,-6,-6,8,-1,7,-8,9,-7,-9,4,2,-8,-5,3,7,-4,6,2,-3,-6,8,-1,-7,9,-7,2,1,10,-2,-9,4,1,-7,-5,-5,-1,6,1,-10,9,-3,9,-2,9,-1,4,6,-5,-8,1,3,8,4,3,10,-1,7,-9,8,5,-10,5,4,-9,10,8,2,3,7,-9,-1,2,-2,-7,2,-8,-8,-8,-2,-9,-7,-8,-4,6,-8,-8,7,9,2,-8,5,-7,-10,9,2,-8,4,-9,-8,10,1,-7,8,8,1,4,-5,-2,6,8,-9,8,-4,-4,1,10,-1,-10,4,-9,-5,2,-4,4,-8,-7,-3,-2,1,1,9,-1,10,-9,9,-1,1,-4,-2,4,-3,6,-5,2,6,7,7,-6,-9,-3,-3,3,-2,6,5,3,-10,-3,9,2,-1,1,-6,4,1,4,-2,5,-3,-7,2,8,10,8,9,7,8,-7,-6,-10,8,3,2,-5,1,-7,3,3,-9,7,1,-9,3,-5,-6,-9,10,6,10,-1,7,-1,3,6,-9,1,8,-10,7,3,10,-10,4,6,-1,-4,-5,9,-1,2,-9,-1,-3,7,6,-5,-1,-1,-3,6,2,-2,-7,4,7,9,9,2,-8,-1,-8,5,1,4,-10,10,10,-8,-3,4,-8,-8,2,-8,1,-7,8,-8,-7,-7,-3,-9,-8,-2,1,3,-1,-6,-2,-5,6,10,3,4,-2,-7,7,2,2,6,-1,3,-1,5,5,-4,2,-4,-6,5,1,-5,-7,-6,10,-4,-3,5,8,-9,9,-4,9,-8,-10,5,6,-2,6,3,9,8,-6,8,-2,7,-10,4,10,-6,-4,4,2,2,3,5,3,-6,6,-3,8,-10,10,8,6,2,7,-10,1,7,9,6,7,3,5,-2,7,-9,-5,-8,-3,1,-6,8,-4,1,-7,9,10,-7,-9,6,-10,2,-4,-6,-3,-6,9,6,7,1,6,-9,-2,-9,-7,5,-2,7,-7,2,2,-9,-1,6,-2,-5,-7,-3,3,7,9,-1,9,8,1,-8,-7,3,1,8,-6,-2,-7,9,-10,-4,-8,-1,-1,5,-8,-4,-1,5,-6,-7,-5,-7,-7,6,5,-6,3,2,-6,-5,-1,1,5,3,-10,6,-1,-10,9,6,6,-9,-1,2,-7,4,-5,7,3,-3,-2,8,2,-4,4,5,1,-8], dtype = "int32")#candidate|10911|(14175,)|const|int32
call_10910 = func_8776_call(relay.reshape(const_10911.astype('int32'), [1575, 9]))
call_10912 = func_8776_call(relay.reshape(const_10911.astype('int32'), [1575, 9]))
bop_10913 = relay.add(call_10910.astype('int64'), relay.reshape(const_10911.astype('int64'), relay.shape_of(call_10910))) # shape=(1575, 9)
bop_10916 = relay.add(call_10912.astype('int64'), relay.reshape(const_10911.astype('int64'), relay.shape_of(call_10912))) # shape=(1575, 9)
func_8147_call = mod.get_global_var('func_8147')
func_8150_call = mutated_mod.get_global_var('func_8150')
const_10920 = relay.const([2.589710,1.368161,2.730105,0.682755,-4.944203,-1.607650,-4.100410,-7.232403,4.149764,1.182227,0.729744,1.549095,-7.735600,-3.363628,9.730400,4.698412,1.001290,-6.222410,-1.760706,1.010564,5.364347,2.692244,2.134314,-7.109949,-5.195489,5.148723,7.470922,-6.338019,3.788323,1.357353,-7.135218,8.876678,1.176150,3.609853,7.607888,-1.136940,-4.603422,-2.069522,9.319233,3.685586,-7.897970,3.749948,4.221688,2.770251,-6.044214,9.449450,0.861404,-8.828848,4.710011,7.571420,6.270951,6.861520,8.491283,2.922936,-9.616421,7.662145,5.793866,-6.727685,-5.099117,-7.340936,-1.169295,-9.831343,-6.722104,-9.790601,-5.571217,4.828539,4.282239,4.927385,-4.577206,5.787112,9.398938,-1.778284,9.687509,-1.814312,-0.737187,-3.289189,-8.628938,4.178546,-3.366914,-4.491198,6.430299,-0.477633,7.413609,4.815505,-0.502858,-9.302630,8.393667,-4.602103,-7.962450,9.159089,9.820765,4.306458,-3.899801,7.913036,2.652718,9.470305,8.439898,0.690746,7.052216,-6.492389,-2.714873,-8.930653,1.937482,-7.594242,4.684912,6.885101,-3.002813,-2.398798,6.773874,3.248338,-4.905803,3.304089,-9.514611,-5.874947,5.047554,9.125225,2.464380,-9.254290,-9.837766,-6.321665,-6.586541,7.812595,3.353749,0.086726,6.383088,9.621357,1.681870,5.643139,3.506074,1.619394,-6.717204,-4.811068,-3.088130,6.461493,-2.851914,-2.252665,9.247240,6.632532,-9.498054,7.143064,2.018380,7.487971,1.772453,-7.895357,-8.574637,9.210612,-1.751643,-8.294223,-8.693591,5.532626,-7.336660,4.326023,3.383403,-4.999121,1.046728,1.125914,-2.949065,4.786514,5.257672,-7.448882,-9.599183,1.937673,-4.701694,4.476916,1.479111,0.813023,1.467371,4.898965,1.153833,-9.847318,4.241135,7.729408,-8.361105,9.186304,-0.105940,9.541100,9.172970,8.510395,-2.381816,6.337756,3.701384,5.062465,0.297133,-4.294448,-3.221551,-8.854726,-9.962966,5.294299,-9.590482,0.037357,0.685026,4.344121,3.292951,-3.973243,-8.790887,1.915461,-2.504977,-5.192823,1.169710,-1.363777,7.551194,7.022115,-4.249241,-3.884520,1.991545,7.004726,-0.022935,7.642153,5.754483,7.631247,6.107961,0.464023,-7.731777,-3.771047,-9.511135,0.653491,2.743047,-8.343012,-3.252202,-1.891943,-6.272776,-6.296299,1.825933,-1.354847,1.954461,-2.673889,-1.585547,-1.554587,5.466733,-8.830846,5.957487,7.537060,-3.302402,-3.323998,-0.089154,-8.177884,-3.389482,1.811557,-0.775575,-1.381928,9.663670,6.071357,-9.885676,-1.733621,-3.560566,-4.332184,9.234789,-5.063791,0.768291,-4.690982,7.784756,-2.309660,6.177790,2.534296,7.471452,4.791164,-4.513030,-4.026395,-9.415981,-4.621586,2.644543,-0.519670,-3.599709,-6.926397,8.931612,8.110279,5.487369,-7.153119,7.742817,-4.469541,1.302793,-2.825362,-7.211724,-9.834863,5.584609,3.820139,3.111117,9.549562,-1.056035,4.149650,-1.779101,6.252980,-5.304300,-4.814301,1.583280,-3.117838,-6.083369,9.662344,4.090333,8.802015,-0.267376,9.497148,-0.027155,-0.468358,-3.251392,-2.880584,-7.238530,-4.859996,0.810701,3.394321,-7.108214,3.018212,-3.028368,2.449085,4.523004,-9.728532,-6.356735,2.962902,8.481119,1.326709,-0.249996,-9.221131,8.351978,5.176103,-4.449265,-2.553369,1.384852,0.237183,-4.822031,3.250178,-4.689006,7.837632,-9.901381,8.257457,-7.420223,5.754971,5.620614,-0.716512,7.445809,3.985359,-5.000446,-3.318404,-6.492237,6.466796,-3.972366,-0.848585,-8.233689,5.229536,-5.621189,-5.296008,-5.767596,3.772226,-8.571855,-1.878016,-6.212310,6.340935,5.055237,-1.741396,3.039617,-1.602152,-3.617728,-1.985453,8.574463,8.731688,7.424784,-3.409814,-2.941193,7.960776,7.663479,-8.092006,9.763829,-0.218458,3.370308,-6.026629,-9.596643,-7.369985,8.790952,-7.195976,3.763715,1.279854,7.781987,-6.631927,8.230948,-7.254392,5.306174,-3.617637,-5.961688,-9.463901,1.654451,6.670989,0.520158,5.817488,-4.348051,4.386382,6.291009,-6.446560,1.395970,-3.877236,-0.592321,1.484970,0.273971,9.687275], dtype = "float64")#candidate|10920|(392,)|const|float64
call_10919 = relay.TupleGetItem(func_8147_call(relay.reshape(const_10920.astype('float64'), [392,])), 2)
call_10921 = relay.TupleGetItem(func_8150_call(relay.reshape(const_10920.astype('float64'), [392,])), 2)
output = relay.Tuple([call_10898,bop_10913,call_10919,const_10920,])
output2 = relay.Tuple([call_10899,bop_10916,call_10921,const_10920,])
func_10922 = relay.Function([], output)
mod['func_10922'] = func_10922
mod = relay.transform.InferType()(mod)
mutated_mod['func_10922'] = func_10922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10922_call = mutated_mod.get_global_var('func_10922')
call_10923 = func_10922_call()
output = call_10923
func_10924 = relay.Function([], output)
mutated_mod['func_10924'] = func_10924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9607_call = mod.get_global_var('func_9607')
func_9609_call = mutated_mod.get_global_var('func_9609')
call_10938 = relay.TupleGetItem(func_9607_call(), 3)
call_10939 = relay.TupleGetItem(func_9609_call(), 3)
output = relay.Tuple([call_10938,])
output2 = relay.Tuple([call_10939,])
func_10950 = relay.Function([], output)
mod['func_10950'] = func_10950
mod = relay.transform.InferType()(mod)
output = func_10950()
func_10951 = relay.Function([], output)
mutated_mod['func_10951'] = func_10951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5085_call = mod.get_global_var('func_5085')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_10994 = func_5085_call()
call_10995 = func_5085_call()
func_9971_call = mod.get_global_var('func_9971')
func_9975_call = mutated_mod.get_global_var('func_9975')
const_11047 = relay.const([-1.641384,-9.315057,7.072749,8.386428,9.367056,-0.110303,-2.633080,-6.561385,-2.612411,9.781581,3.178770,6.774235,-2.218099,1.711453,4.974257,3.455418,-5.083813,1.613274,-1.520188,2.429027,-5.837637,-4.576781,-2.374989,6.563356,1.665969,-6.388326,-0.052608,3.051935,9.604758,0.932717,-3.255370,-4.520170,-0.659131,-8.714737,5.187830,-8.627236,-7.060494,-4.025480,4.205263,0.308809,-4.437405,3.028703,3.910456,4.456374,7.485595,9.470488,-7.527786,8.729233,-7.157360,8.090940,0.355268,3.811456,6.241040,-4.896337,-2.863748,9.619463,1.124240,5.399607,6.661395,-3.173965,5.515537,-4.299185,5.563335,-0.155658,5.428530,8.963768,0.792088,-8.950024,-5.584895,6.200991,-8.210818,-9.341235,-9.652585,-0.243446,-5.183087,-6.201791,3.143479,6.004890,-1.512461,-2.404585,-8.723569,7.595753,-7.296052,-4.083575,-9.234219,8.598671,-9.116893,7.607814,-6.849472,-0.505958,-0.120579,-5.077217,9.728595,-9.622230,-2.317724,1.719542,4.590512,-3.574275,1.250518,-5.388635,3.752622,-0.756589,2.603723,-8.987716,-3.415058,0.129035,6.032213,-5.113019,0.306283,5.693599,6.580449,-4.909243,4.926730,-1.218403,7.979920,-5.745577,7.169296,-6.271681,-5.427854,-1.596626,5.225934,0.061280,4.248946,8.955997,9.931798,-4.588208,-9.103733,1.612359,-0.489077,-6.423957,-5.475102,-7.846286,7.966012,5.972664,2.302770,-9.568903,3.883262,0.859777,0.844303,8.420832,9.178503,2.146703,2.150739,7.992137,4.625759,1.503253,5.197214,0.008624,5.482797,-4.964940,-1.225527,6.139451,2.952265,-2.818047,-3.957730,5.528731,-1.138399,3.430988,4.099375,5.847853,-1.869583,-7.915188,-9.145084,-5.769140,-2.406790,-1.614824,-9.159398,-1.269804,-2.412695,-2.974424,2.947470,7.543610,3.623470,5.054875,6.368628,1.524687,9.740625,7.717925,0.151859,1.864124,8.653518,-5.276038,-5.929748,6.785662,9.952264,5.554024,9.732375,-3.941991,4.700398,6.175854,-6.648762,-5.204377,-2.513179,1.765210,4.553078,-6.964297,-0.114641,-1.406871,6.632733,-6.200002,-2.484641,8.624334,-9.194251,-9.111968,2.233207,-6.524657,-3.616215,-0.222185,5.613762,-0.397960,-8.118415,8.174781,6.027810,2.171103,0.112210,9.385976,3.247944,9.330355,5.326505,6.593545,3.960216,-5.036665,-6.995144,-5.889178,1.705984,1.443532,3.343220,-5.562665,-7.463037,-3.205181,5.033540,2.086867,-8.314514,-7.674313,-3.873608,0.670365,-1.800983,0.450667,-0.628842,-3.234655,-4.609855,3.009024,-1.331673,-0.494428,-9.702077,-1.758952,9.243457,-0.106178,-7.302233,1.646313,3.650561,-3.461746,-8.888216,-4.918160,3.898496,-6.266319,-7.385551,-2.491017,-2.905273,-0.334270,0.320164,-7.382990,-0.758693,-3.272041,-6.079719,-4.566292,-1.376544,1.277521,-6.740739,0.931542,-5.471925,-7.571998,-7.417162,1.143171,1.811704,3.725404,-8.510689,0.885490,-5.494930,8.605346,1.382791,-0.925459,-3.215289,9.604739,-1.336939,-3.023001,-0.819620,9.474816,6.439688,3.544167,-3.284631,7.849866,9.465405,-3.191274,9.138194,-3.734479,1.409225,-8.109786,-7.975055,-6.877526,4.159065,7.329601,4.635565,-5.788351,9.514463,-8.097562,-9.717784,-6.721214,-2.770426,8.849604,-1.320440,8.014213,3.984034,5.408998,2.068354,-2.692581,-6.009246,-0.331163,-1.617471,3.770031,1.018042,-2.544467,3.526749,2.331593,8.608877,0.440420,-9.477730,0.034685,9.111707,9.752050,-4.337688,7.883231,9.781605,4.017126,-7.555436,6.441223,-1.169664,3.250436,-2.543913,9.821223,5.241338,0.750827,3.149284,9.023780,6.645986,3.921904,-9.307523,-3.269921,1.114480,-2.868230,-4.184275,2.308440,1.161485,7.300809,5.794623,6.852409,7.156647,-2.490820,4.905261,2.638857,-2.363585,-3.468259,3.182977,-5.293336,-8.862971,-4.828258,-2.231061,0.910917,-0.906208,4.308870,-7.686021,3.519112,1.890573,-2.383810,8.140155,8.395389,8.037037,9.485989,-4.041861,0.393142,-1.223972,-9.719955,9.179444,-3.733945,-3.881000,9.694575,-5.545099,-1.228296,-5.003786,-1.694682,9.389532,2.104736,2.065462,6.075556,-7.116155,0.215305,6.466879,9.883583,1.131416,-3.615204,9.233479,-4.944981,-0.511868,9.342513,-3.394950,1.091267,7.296258,-2.461342,3.460265,-1.027182,-7.367947,-5.191266,4.824811,-3.023095,6.704987,-1.318967,-8.077201,-9.376959,-4.607350,3.420956,8.553684,-9.390968,4.018120,4.996348,-5.704297,-5.167550,9.578492,-5.574532,-8.288198,-3.861805,-6.982853,-4.626507,1.290389,0.994669,-3.353074,-1.848166,1.312696,-1.143404,3.661605,6.025524,0.672525,-1.058513,-8.693528,-8.045773,0.386737,-0.296886,7.489725,-6.005313,8.082107,-5.900623,-6.978899,0.408669,6.777365,-4.787625,-2.161515,7.581029,0.634961,-8.461514,-3.295695,-1.195526,2.847411,6.840260,9.954694,-6.802808,-6.919729,-6.028384,3.713609,-8.811801,2.905797,-8.482989,4.846230,-0.458808,7.808343,-7.129897,2.256749,-4.093836,-2.934197,5.996674,5.569763,-1.699902,9.665222,3.943205,3.850200,0.619344,-2.216873,-6.430610,3.624455,9.391209,1.194569,8.823857,-9.131265,-2.182749,5.759848,2.135258,9.069513,-1.824421,-5.220008,1.428562,-9.316709,9.641969,-9.274192,-5.344346,-6.008684,5.484852,9.324366,-3.884614,-6.856948,-7.993661,-0.927835,-6.647750,-4.712526,-6.830829,-6.815256,-1.746866,6.166427,-7.050944,6.361597,4.507561,-5.819683,8.688802,8.981968,4.956405,-2.211844,-8.140620,0.266755,-5.148078,2.835593,6.227844,0.894656,-6.092049,3.294991,-2.355295,7.783781,-1.320096,-4.035676,-5.563278,1.504889,7.650872,3.827090,-1.387158,2.815264,-8.771726,-7.662799,-2.873387,7.084193,-4.374067,1.391359,5.043702,-6.882425,-5.044842,-7.057501,3.493947,9.976750,9.286570,-4.567466,6.072638,9.966200,-2.456750,7.666371,7.180134,-6.653119,0.417588,-9.275027,-4.376140,-3.966589,-9.630983,1.039680,-4.764428,-4.647818,-4.212297,-8.022657,-5.194043,0.485665,0.428847,-6.112028,-4.334417,-2.308524,-5.693375,-4.174950,8.842453,-5.911094,3.808895,8.811617,-1.175869,-1.468034,-6.229504,-2.305207,-4.097445,-4.072039,8.849647,-2.734978,7.192905,9.208430,1.664060,-2.986394,2.967456,-1.849949,4.699992,-4.292035,-8.055844,-3.412995,9.001841,9.135844,-1.863654,2.563596,-4.822840,6.948769,-9.614788,-3.522644,3.153215,4.051706,9.385159,9.468378,0.900275,-5.091581,-4.403510,1.633881,7.724583,3.242113,-0.468678,3.170082,-3.115070,-3.308641,-7.814692,7.339643,4.800567,-1.533157,-8.166087,9.506091,1.948973,9.958857,-4.648193,-5.835196,-8.764474,-9.393818,-4.506677,1.884329,-3.961319,-5.450926,-3.632928,-4.190589,-3.181490,-2.327944,6.415489,-8.283713,2.760465,-5.576247,-3.348156,-9.316259,8.830995,2.170829,-1.936916,-1.304443,-6.004356,0.373314,-4.753400,4.699150,-6.407688,-4.828276,4.422906,9.364120,-4.867415,6.532957,-8.242472,6.800604,-5.362889,4.882864,-6.672228,5.425503,-2.715175,8.375454,6.630702,0.371051,2.242018,9.228312,0.914252,1.291255,-4.817904,-5.740641,-4.235596,-6.158230,6.564867,-3.374165,-3.972644,-5.258983,-7.186997,1.286829,-4.642968,-3.461333,-4.303957,3.408083,-3.162595,-1.718234,5.754407,2.960674,-6.740407,-6.476556,2.836543,9.243529,-0.281064,6.761837,-7.815715,-2.041415,7.475916,-0.597298,-3.249472,3.568081,-9.018186,-4.348803,1.553824,-3.550241,4.474183,0.247024,9.280798,-3.927291,-1.301149,-8.006360,1.348466,-9.805470,4.235659,-2.536398,-0.782518,-3.690298,8.654201,-9.873472,-7.306494,4.330584,0.401568,1.158722,7.874999,-0.097106,2.936583,-9.061625,-8.275730,8.679299,6.435602,8.803944,-9.118532,8.248918,-8.406818,-8.981771,-3.178034,8.441381,-3.228924,-6.300338,-8.524980,2.252937,3.873550,-2.354364,-5.586553,-1.328285,-7.689756,1.145880,1.399420,-0.217415,-9.760961,1.392110,-8.669510,-6.507951,4.304247,6.458833,-6.083041,8.194100,-8.048183,8.252855,6.830771,1.672815,2.452192,-6.646811,8.316694,0.450388,5.348071,-0.593309,3.851090,-5.966235,6.580245,-8.107443,0.603124,4.383599,-7.552424,-3.416118,-9.766607,8.293309,5.671906,5.526498,-0.297819,-1.231840,4.692771,-3.831513,-7.336210,6.929844,-2.830184,0.065682,9.291976,5.955577,3.665558,6.199244,2.663660,4.681291,2.956631,5.812786,7.272207,1.498687,-3.363276,6.350026,0.516682,-9.336118,1.884855,6.163797,3.961290,-1.158567,-3.968641,-5.723790,-8.934175,-0.897276,-2.092173,2.500656,-8.131624,-9.967257,-7.971971,9.935040,-1.369621,1.721851,9.787851,-8.779538,-3.836099,0.392847,0.557602,-8.799190,8.218044,2.045419,2.299030,-7.384078,5.724153,-1.648035,-8.071234,1.153553,-6.141719,-1.511080,9.065417,-9.812244,1.145319,4.066587,5.353976,-1.478236,-0.053544,7.292504,3.592231,7.368282,-1.421121,-3.011986,0.937541,-9.414351,5.698820,6.540959,5.032852,-0.873373,7.357234,0.101917,7.246289,-2.086955,3.031031,6.809969,8.458707,-2.658427,6.082094,-7.868793,-0.206306,-7.663409,-6.735774,8.160039,1.276483,-4.807088,0.541141,4.763531,-0.179704,-3.136904,6.814757,-3.301604,7.103485,0.420015,5.724303,7.531835,-8.095268,7.411159,-4.547518,-5.552429,-0.025957,-8.942543,0.626490,5.303745,5.635742,7.943246,4.473534,5.562402,-4.008570,8.380707,1.899061,-7.815393,-7.180783,-3.294626,-3.155309,-2.518053,2.136736,-5.684280,1.084776,-5.102459,7.255692,0.113230,2.070028,5.027650,9.273996,-1.397202,-7.894901,-0.767115,-9.026958,1.771830,-0.102381,-5.641796,-7.030464,-2.914898,-5.495573,8.987297,-7.515954,-2.640419,0.346756,-3.601625,8.906913,9.538227,8.410102,-4.940753,-6.847430,-9.489331,-3.596717,0.510320,4.589881,-4.342421,-9.021733,4.357279,-4.803778,3.827387,-4.180562,9.326959,-0.428964,9.706969,-8.072993,6.340744,6.053320,6.769850,-1.919650,-2.340180,-5.625427,7.412472,-8.626245,-1.199204,3.874614,5.488958,5.659885,4.862492,9.481650,1.715287,-8.506790,7.247035,-5.848374,3.322052,8.597952,-0.263624,-2.598617,-2.621048,-1.071879,-7.728347,-3.914879,7.503369,-9.728683,3.782083,9.184632,5.131250,-7.911247,9.441993,-8.537063,4.943403,2.045720,5.373209,-5.249032,-5.470375,-0.537412,-5.045328,-5.717880,-6.025947,-8.319772,1.520527,-0.342830,5.580530,4.812579,3.111177,-4.914258,8.099085,-8.023929,4.585105,-8.775608,-1.925324,-0.750301,-0.260755,-6.482411,5.990461,-3.303033,8.103664,-8.362654,2.547792,2.331942,9.560272,-9.579034,6.793955,3.207135,8.860152,2.448336,1.596706,-2.748130,-7.909347,-1.354096,0.324112,-6.361335,-9.463250,1.999343,-8.784216,-2.393940,-5.479085,-4.990172,-4.500759,5.545841,-7.200277,7.884236,-2.328096,9.987622,-6.493416,5.508551,-1.119446,-5.740605,-1.375759,5.955214,3.133961,-0.560037,-7.059329,7.690053,-6.842571,-3.974256,7.867580,-7.385582,6.420117,9.334032,-7.120540,8.351296,-6.996705,1.174753,4.509511,-5.985575,-5.249450,6.657314,5.340919,3.021061,3.873690,-2.169340,3.637092,-8.245936,-5.091874,7.622675,-8.906466,-3.816253,-0.355388,8.839419,-0.601866,-4.477028,-8.941504,5.599941,7.576858,-0.294440,-0.913082,8.496860,6.693416,-8.075373,6.556917,-7.343366,-4.046874,5.015536,-0.146168,-8.130647,-1.519135,-7.154050,-4.702384,-8.199483,-4.581721,-2.364280,-8.244363,4.749845,-0.320346,1.551940,5.894354,6.433227,-3.553741,-1.725587,-2.000879,5.398324,-6.489346,8.678878,2.106296,-2.914660,-2.753535,-4.413747,-6.328997,8.958439,6.471740,5.750670,-2.899740,-9.461795,6.435264,-5.536688,-7.788037,-5.268366,3.423479,8.752649,0.541555,-0.458934,5.172260,-4.437707,-8.053903,-5.049485,2.397630,-1.569170,-6.758536,-0.026341,-9.368345,6.357020,8.642817,8.769123,-2.438694,3.510234,-7.565938,4.978659,9.536321,3.376708,4.046825,7.586981,4.817223,3.155549,2.796236,1.161375,-4.682455,-3.981835,-8.095178,-7.154896,-2.041422,6.579432,1.617858,-5.582341,-5.118031,5.208738,0.809594,-1.357524,-7.868803,9.180070,-7.654070,2.601472,6.323826,-4.938769,4.925063,-7.589100,-2.450416,-7.255511,6.815277,-3.986653,2.360394,3.244595,8.463633,0.357709,1.927733,7.553340,-9.280927,-5.939471,-0.858443,7.955066,6.931888,5.858935,0.923398,-1.859679,1.430384,2.469005,-8.694250,1.544155,-5.658583,7.711325,2.362420,1.484905,-4.501840,-7.920810,-3.657520,-8.669361,9.663228,-4.553059,-2.145130,2.810114,8.685458,-3.614390,-2.203082,4.382142,-0.676274,-7.421130,2.829604,2.651744,-9.835843,-3.212787,-1.164373,-8.010789,2.970862,-7.765173,4.942785,8.576695,-1.050066,-9.982945,8.738484,-4.103704,7.512237,-8.333957,-7.773676,-0.845850,2.741436,-7.489334,0.548066,2.829058,7.361635,-9.107474,-2.553385,7.140482,0.715112,7.663966,-5.195190,1.691526,-4.598751,-1.414427,5.465532,5.698074,-2.985841,-3.340670,6.586059,-0.500945,-0.318865,7.925984,-1.741166,5.023313,4.835300,-7.923592,-1.007467,2.666218,8.178379,-6.613946,-5.672414,8.517284,3.312508,-1.187476,-0.499179,9.001483,-9.064994,6.738652,3.545337,-7.615171,5.209861,-5.098166,-4.742554,-0.303983,-4.494149,0.749699,6.129837,4.211296,-3.141680,7.711293,-1.076993,4.049351,7.805359,2.112589,-0.974742,7.139484,-1.216200,9.293840,3.715205,2.462005,-6.947523,-7.168332,2.739099,-1.214328,-9.414063,-3.282018,-1.845464,0.083955,-8.823984,1.646083,-0.900387,-1.988031,-9.473475,-5.597563,-3.614933,1.972763,-6.310423,-3.239477,2.453834,7.725937,-8.228984,-2.701579,-8.951647,-8.797841,-7.421025,9.853912,8.635181,-5.666602,3.102135,2.385492,-0.202944,6.825560,9.026164,-2.972958,-6.897260,-2.494351,-0.585041,-2.338151,-8.749732,9.365697,-8.661565,6.513562,0.789654,8.883126,-0.772176,-2.822696,-4.028261,9.240463,9.126031,-8.019699,-3.307762,-5.910081,-1.723005,9.261377,8.727053,7.294112,7.932755,7.181640,-2.331840,2.136617,-4.807564,4.985758,1.547700,-0.357781,8.439764,7.426334,6.479923,-6.605495], dtype = "float64")#candidate|11047|(1352,)|const|float64
var_11048 = relay.var("var_11048", dtype = "float64", shape = (1, 1456))#candidate|11048|(1, 1456)|var|float64
call_11046 = relay.TupleGetItem(func_9971_call(relay.reshape(const_11047.astype('float64'), [1352,]), relay.reshape(var_11048.astype('float64'), [1456,]), ), 3)
call_11049 = relay.TupleGetItem(func_9975_call(relay.reshape(const_11047.astype('float64'), [1352,]), relay.reshape(var_11048.astype('float64'), [1456,]), ), 3)
output = relay.Tuple([call_10994,call_11046,const_11047,var_11048,])
output2 = relay.Tuple([call_10995,call_11049,const_11047,var_11048,])
func_11067 = relay.Function([var_11048,], output)
mod['func_11067'] = func_11067
mod = relay.transform.InferType()(mod)
var_11068 = relay.var("var_11068", dtype = "float64", shape = (1, 1456))#candidate|11068|(1, 1456)|var|float64
output = func_11067(var_11068)
func_11069 = relay.Function([var_11068], output)
mutated_mod['func_11069'] = func_11069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6803_call = mod.get_global_var('func_6803')
func_6805_call = mutated_mod.get_global_var('func_6805')
call_11148 = func_6803_call()
call_11149 = func_6803_call()
output = relay.Tuple([call_11148,])
output2 = relay.Tuple([call_11149,])
func_11150 = relay.Function([], output)
mod['func_11150'] = func_11150
mod = relay.transform.InferType()(mod)
mutated_mod['func_11150'] = func_11150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11150_call = mutated_mod.get_global_var('func_11150')
call_11151 = func_11150_call()
output = call_11151
func_11152 = relay.Function([], output)
mutated_mod['func_11152'] = func_11152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9607_call = mod.get_global_var('func_9607')
func_9609_call = mutated_mod.get_global_var('func_9609')
call_11197 = relay.TupleGetItem(func_9607_call(), 3)
call_11198 = relay.TupleGetItem(func_9609_call(), 3)
func_8374_call = mod.get_global_var('func_8374')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_11199 = relay.TupleGetItem(func_8374_call(), 0)
call_11200 = relay.TupleGetItem(func_8375_call(), 0)
uop_11208 = relay.sin(call_11197.astype('float32')) # shape=(1575,)
uop_11210 = relay.sin(call_11198.astype('float32')) # shape=(1575,)
uop_11230 = relay.log2(call_11197.astype('float64')) # shape=(1575,)
uop_11232 = relay.log2(call_11198.astype('float64')) # shape=(1575,)
output = relay.Tuple([call_11199,uop_11208,uop_11230,])
output2 = relay.Tuple([call_11200,uop_11210,uop_11232,])
func_11233 = relay.Function([], output)
mod['func_11233'] = func_11233
mod = relay.transform.InferType()(mod)
mutated_mod['func_11233'] = func_11233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11233_call = mutated_mod.get_global_var('func_11233')
call_11234 = func_11233_call()
output = call_11234
func_11235 = relay.Function([], output)
mutated_mod['func_11235'] = func_11235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11293 = relay.var("var_11293", dtype = "float64", shape = (12, 16, 15))#candidate|11293|(12, 16, 15)|var|float64
var_11294 = relay.var("var_11294", dtype = "float64", shape = (12, 16, 15))#candidate|11294|(12, 16, 15)|var|float64
bop_11295 = relay.floor_mod(var_11293.astype('float64'), relay.reshape(var_11294.astype('float64'), relay.shape_of(var_11293))) # shape=(12, 16, 15)
func_130_call = mod.get_global_var('func_130')
func_133_call = mutated_mod.get_global_var('func_133')
var_11304 = relay.var("var_11304", dtype = "float32", shape = (288,))#candidate|11304|(288,)|var|float32
call_11303 = func_130_call(relay.reshape(var_11304.astype('float32'), [12, 6, 4]))
call_11305 = func_130_call(relay.reshape(var_11304.astype('float32'), [12, 6, 4]))
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_11310 = relay.TupleGetItem(func_6376_call(), 1)
call_11311 = relay.TupleGetItem(func_6378_call(), 1)
func_6376_call = mod.get_global_var('func_6376')
func_6378_call = mutated_mod.get_global_var('func_6378')
call_11315 = relay.TupleGetItem(func_6376_call(), 0)
call_11316 = relay.TupleGetItem(func_6378_call(), 0)
bop_11317 = relay.subtract(call_11303.astype('float64'), relay.reshape(var_11304.astype('float64'), relay.shape_of(call_11303))) # shape=(12, 6, 4)
bop_11320 = relay.subtract(call_11305.astype('float64'), relay.reshape(var_11304.astype('float64'), relay.shape_of(call_11305))) # shape=(12, 6, 4)
output = relay.Tuple([bop_11295,call_11310,call_11315,bop_11317,])
output2 = relay.Tuple([bop_11295,call_11311,call_11316,bop_11320,])
func_11357 = relay.Function([var_11293,var_11294,var_11304,], output)
mod['func_11357'] = func_11357
mod = relay.transform.InferType()(mod)
mutated_mod['func_11357'] = func_11357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11357_call = mutated_mod.get_global_var('func_11357')
var_11359 = relay.var("var_11359", dtype = "float64", shape = (12, 16, 15))#candidate|11359|(12, 16, 15)|var|float64
var_11360 = relay.var("var_11360", dtype = "float64", shape = (12, 16, 15))#candidate|11360|(12, 16, 15)|var|float64
var_11361 = relay.var("var_11361", dtype = "float32", shape = (288,))#candidate|11361|(288,)|var|float32
call_11358 = func_11357_call(var_11359,var_11360,var_11361,)
output = call_11358
func_11362 = relay.Function([var_11359,var_11360,var_11361,], output)
mutated_mod['func_11362'] = func_11362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6045_call = mod.get_global_var('func_6045')
func_6046_call = mutated_mod.get_global_var('func_6046')
call_11364 = relay.TupleGetItem(func_6045_call(), 1)
call_11365 = relay.TupleGetItem(func_6046_call(), 1)
func_9119_call = mod.get_global_var('func_9119')
func_9121_call = mutated_mod.get_global_var('func_9121')
call_11372 = relay.TupleGetItem(func_9119_call(), 0)
call_11373 = relay.TupleGetItem(func_9121_call(), 0)
func_6442_call = mod.get_global_var('func_6442')
func_6445_call = mutated_mod.get_global_var('func_6445')
var_11379 = relay.var("var_11379", dtype = "float64", shape = (11, 14))#candidate|11379|(11, 14)|var|float64
const_11380 = relay.const([-2.008519,8.772974,4.577737,5.230539,-3.558323,6.413246,2.379756,6.520656,-9.924036,-8.826792,-6.272620,-0.006153,6.489923,-5.955295,-4.917618,4.594544,-2.025883,-5.125962,9.320965,-6.988512,-3.774956,-8.272288,7.351394,-4.387596,-4.835701,-3.218756,-3.065548,-2.760043,9.294213,-1.658483,-7.236999,-5.789524,-2.995872,-6.465303,-7.624874,3.843343,-3.014809,-6.845027,6.352795,-0.998392,9.906153,4.968862,2.171688,4.940097,-0.567301,1.715707,9.422468,-3.973274,-0.225238,0.203540,8.200560,7.342541,-6.603947,2.845745,-1.020450,-1.948967,-3.328673,9.786812,7.950663,-7.370167,-0.835493,-8.815661,0.533693,-3.918242,1.512444,-0.964751,-2.162714,5.550098,-6.751176,9.407966,-6.404648,-1.605524,5.228892,-2.784199,4.934399,-3.437954,-4.575210,2.835316,6.109214,7.913433,-4.536411,4.610591,6.309011,7.699307,-3.210212,5.901040,-1.476239,7.105611,0.825504,-5.174445,4.890686,3.842779,5.130051,7.639926,-6.826605,-6.096478,3.702586,8.546342,-9.947446,-9.987697,2.394899,9.409020,1.595009,1.200881,-9.222113,3.879011,2.928064,-2.057068,-8.174902,7.597892,-8.316856,3.687271,-2.502306,9.920599,1.885775,1.084914,0.827010,7.060948,4.905602,4.343809,-5.047773,6.442785,9.522376,5.625963,-5.101228,-7.447093,-8.424680,-0.124941,3.156252,2.489505,9.926135,5.188507,9.331542,1.042535,-2.291059,-0.665469,-7.830050,-6.628460,3.781841,1.748716,-0.168042,5.846655,2.893989,5.121005,0.404232,3.855163,9.545646,8.295344,6.734889,-6.932787,9.567246,0.628078,-0.381265,-9.341368,1.037514,8.372883,2.334735,-9.849546,-7.776382,0.026710,-1.113358,-6.195106,-3.774944,-3.004865,0.861270,5.319599,3.683649,-4.860212,-8.125659,-8.589232,-8.062076,3.662875,-7.380915,-8.181162,-4.308141,-5.548699,-1.540839,-0.991994,-5.358664,7.180917,8.503157,-3.886773,9.358239,3.064643,8.720499,6.108558,8.369992,-0.951248,-6.224298,9.046824,-2.296738,5.184608,-4.880517,5.814898,-6.303451,-0.498715,4.843425,-1.073707,6.986706,-0.307617,1.056514,-0.263383,0.696296,-2.315220,4.922005,-6.159430,2.469346,9.495548,7.781165,-7.158748,8.395329,-2.589220,-0.243927,9.207460,-0.536269,-5.519780,0.183580,-8.222452,0.251727,-5.703425,-9.945143,6.581130,-6.797868,-8.272501,1.319368,6.271567,0.058101,-4.648798,-7.669907,-1.558679,8.586891,1.643393,1.201792,2.878444,-8.360939,-3.669357,-6.180329,6.342569,-7.840638,1.564665,-8.631160,-0.735799,-2.099273,7.889560,-6.926084,5.728716,4.145844,-3.857873,-0.934660,1.663948,5.118547,-6.528235,2.676904,-8.535442,5.439833,-3.518981,-7.234098,5.911988,5.739757,8.816162,-3.510996,6.783892,4.469644,6.305084,-2.581129,9.051881,-4.936585,7.365138,8.067606,0.231099,6.977349,-4.389457,-0.520757,-3.355082,8.195071,2.327562,-6.407964,2.984059,-4.004588,-2.655422,2.533987,-1.313222,3.891928,-5.549199,0.371390,1.938298,2.173925,-4.425723], dtype = "float32")#candidate|11380|(288,)|const|float32
call_11378 = relay.TupleGetItem(func_6442_call(relay.reshape(var_11379.astype('float64'), [154,]), relay.reshape(const_11380.astype('float32'), [288,]), ), 0)
call_11381 = relay.TupleGetItem(func_6445_call(relay.reshape(var_11379.astype('float64'), [154,]), relay.reshape(const_11380.astype('float32'), [288,]), ), 0)
var_11385 = relay.var("var_11385", dtype = "float32", shape = (600, 2))#candidate|11385|(600, 2)|var|float32
bop_11386 = relay.logical_and(call_11378.astype('bool'), relay.reshape(var_11385.astype('bool'), relay.shape_of(call_11378))) # shape=(600, 2)
bop_11389 = relay.logical_and(call_11381.astype('bool'), relay.reshape(var_11385.astype('bool'), relay.shape_of(call_11381))) # shape=(600, 2)
output = relay.Tuple([call_11364,call_11372,var_11379,const_11380,bop_11386,])
output2 = relay.Tuple([call_11365,call_11373,var_11379,const_11380,bop_11389,])
func_11395 = relay.Function([var_11379,var_11385,], output)
mod['func_11395'] = func_11395
mod = relay.transform.InferType()(mod)
var_11396 = relay.var("var_11396", dtype = "float64", shape = (11, 14))#candidate|11396|(11, 14)|var|float64
var_11397 = relay.var("var_11397", dtype = "float32", shape = (600, 2))#candidate|11397|(600, 2)|var|float32
output = func_11395(var_11396,var_11397,)
func_11398 = relay.Function([var_11396,var_11397,], output)
mutated_mod['func_11398'] = func_11398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7253_call = mod.get_global_var('func_7253')
func_7254_call = mutated_mod.get_global_var('func_7254')
call_11479 = relay.TupleGetItem(func_7253_call(), 0)
call_11480 = relay.TupleGetItem(func_7254_call(), 0)
func_10463_call = mod.get_global_var('func_10463')
func_10465_call = mutated_mod.get_global_var('func_10465')
const_11484 = relay.const([[8.979882],[7.282240],[-9.231433],[0.799331],[3.197112],[8.025939],[0.828024],[8.285809],[-1.326554],[7.366487],[-2.780385],[-5.405210],[4.686116],[6.899693],[0.049719],[-4.769962],[9.995129],[0.123825],[-2.250733],[-0.322964],[-9.644734],[5.795409],[9.366015],[-6.887003],[-2.678325],[8.894893],[-4.196967],[9.836417],[9.914871],[4.515532],[9.161853],[3.810345],[2.550268],[-2.864948],[-6.333310],[4.110040],[-9.097758],[-2.572333],[5.116308],[9.029409],[8.305568],[8.476572],[-6.311864],[5.056502],[9.694139],[-5.687065],[-3.542106],[0.780327],[-2.831660],[0.889581],[-9.561600],[8.222596],[-4.270505],[-9.313000],[-6.910351],[1.276524],[-6.756605],[3.559454],[3.738218],[4.898567],[3.756624],[9.110407],[0.333411],[2.057287],[-0.761252],[-1.898367],[1.962832],[5.120782],[-0.657382],[-8.161969],[2.327838],[-9.827675],[-4.005944],[-7.140557],[-5.932145],[-1.824382],[3.886864],[2.698082],[-4.777025],[-8.288235],[5.051187],[-9.907304],[-2.348664],[-7.326363],[6.551507],[4.932212],[-0.342125],[6.330663],[5.518067],[-3.154656],[3.841689],[1.925678],[-9.855636],[3.722468],[0.946292],[4.613642],[1.739920],[4.227500],[5.568482],[-4.978810],[-9.189953],[3.458973],[7.781037],[5.551952],[-9.590521],[-8.916434],[-1.712619],[-9.787797],[-3.645206],[-3.447744],[9.449491],[-4.354624],[1.601019],[-4.786313],[-4.385470],[1.234818],[-0.784093],[2.231199],[7.561072],[-0.444724],[6.744054],[3.493120],[-6.538937],[-8.360636],[-9.693633],[-9.464847],[9.888470],[-7.069031],[8.381118],[6.713792],[4.855689],[-6.769755],[-8.000076],[1.561268],[5.871696],[5.755035],[-3.393214],[-4.857848],[5.825362],[8.871418],[2.210608],[3.783312],[-9.641723],[1.052661],[7.333263],[9.043162],[-2.879457],[-1.696418],[-9.043663],[-9.243004],[-2.589039],[-7.202789],[3.150674],[4.724005],[0.245558],[-7.738467],[6.631613],[3.990603],[0.390298],[1.618788],[-5.258102],[9.696207],[-5.036029],[9.135039],[8.482834],[-3.789354],[4.518071],[-4.578683],[-8.308500],[9.042434],[-6.592164],[-6.364325],[-0.907279],[1.418682],[6.584189],[-0.320454],[-4.306057],[-7.852764],[8.694660],[9.078928],[3.129665],[-1.413316],[-2.126185],[4.011762],[7.755633],[-5.093874],[-5.088842],[4.620221],[2.545420],[-8.393008],[2.927739],[-6.416687],[-6.706816],[-4.899651],[-0.569258],[-3.977385],[-7.644046],[-7.107172],[5.899155],[3.696320],[6.071179],[-6.928226],[-0.460774],[-5.855755],[2.158253],[-8.140106],[5.698726],[-5.417353],[1.869620],[2.141190],[-1.464510],[-4.063566],[8.188496],[2.995096],[-9.228080],[5.422937],[-1.436865],[-1.580514],[7.986814],[-8.518998],[9.073758],[3.075713],[0.469287],[8.221508],[-5.788651],[-0.994796],[-2.483595],[6.221486],[-5.780900],[0.556566],[3.270353],[-8.422816],[-1.164416],[2.024225],[8.497314],[-7.695778],[-8.261530],[6.427009],[6.580681],[5.697996],[7.312365],[-7.278054],[-9.119515],[4.608835],[-8.655174],[0.815684],[0.960005],[-0.949026],[-4.852728],[3.785870],[5.714442],[6.503224],[7.948937],[-0.809833],[6.711169],[5.811671],[4.612647],[-4.004863],[5.261376],[-4.260397],[-5.530259],[-3.750008],[0.157440],[-3.254168],[-1.768457],[6.864150],[9.552966],[2.281712],[3.662762],[-1.318409],[8.460342],[-2.112403],[8.127051],[-9.597972],[-0.391419],[6.373012],[4.771465],[6.578494],[-9.307091],[-3.133402],[2.321295],[-3.180173],[-8.131685],[-1.496885],[6.678992],[-9.546327],[-1.886051],[-2.497285],[-5.014525],[-0.686171],[1.200971],[6.842419],[3.846580],[-8.036528],[-0.021513],[-8.385178],[-9.329268],[6.051422],[2.677353],[9.843795],[-4.939390],[6.921896],[-1.023527],[-0.482609],[0.363489],[4.889805],[-4.963247],[3.669251],[8.040649],[6.953644],[-3.942523],[-7.503389],[6.932454],[-6.378792],[3.721356],[4.557964],[8.326539],[-4.375710],[-7.739532],[-7.237274],[0.497020],[9.027336],[3.581296],[-0.105546],[-6.223758],[-0.409994],[3.096875],[3.853762],[-8.645190],[2.048663],[7.124904],[5.203652],[-7.401291],[-5.968918],[1.316099],[-5.689865],[7.074740],[-7.913181],[-1.864098],[8.139133],[4.067540],[2.455351],[-7.137173],[0.192822],[-0.440375],[-6.684310],[8.370857],[0.887257],[3.122245],[0.533670],[-9.946732],[-8.465261],[1.795384],[-0.309620],[8.123218],[-5.538372],[-3.286314],[3.215558],[-8.270454],[9.396783],[-9.871758],[9.981536],[-1.528567],[6.212018],[-7.404843],[-8.277776],[-8.710441],[-4.595714],[4.955705],[3.459141],[6.314195],[8.845547],[4.531196],[-7.120804],[0.031665],[8.948049],[-2.557373],[-1.993892],[8.656812],[-8.447191],[-1.061357],[-3.682121],[6.176835],[-6.065840],[-2.590586],[3.955551],[1.657747],[6.628527],[-2.879531],[-9.805114],[2.255863],[7.344786],[-3.935517],[-8.672159],[2.053041],[-1.271328],[1.095905],[-1.308520],[3.318625],[-1.607316],[-9.254201],[5.195274],[-5.067860],[-3.799504],[5.026916],[2.823098],[-4.941228],[-3.659702],[-1.995668],[-1.422146],[3.766006],[3.268064],[-1.425897],[-1.303773],[-6.913808],[7.316819],[-2.666842],[-5.642832],[4.662620],[3.494773],[6.435798],[8.913353],[8.764359],[0.174300],[1.326784],[9.902152],[-0.790576],[8.917294],[-6.249616],[-4.968149],[-8.938920],[9.182391],[8.731349],[-2.020851],[9.506881],[0.097450],[-4.386628],[-9.070222],[-9.733570],[4.934543],[-8.404931],[-1.389018],[4.205736],[9.847241],[6.382673],[-6.112276],[2.161464],[7.161337],[5.107940],[8.720737],[7.634644],[1.823004],[9.255602],[-3.117932],[8.087199],[7.315650],[-6.963563],[-9.083657],[-7.093166],[-9.725951],[-9.209633],[0.562347],[-2.522214],[-1.371607],[-5.094663],[-3.783571],[-0.646407],[3.187720],[-2.025182],[2.003390],[7.169787],[2.042194],[-3.617118],[0.074810],[1.747151],[9.429306],[-8.153258],[4.149423],[7.836356],[-2.932467],[1.165245],[0.114731],[8.286359],[0.303673],[-7.872695],[3.708206],[-2.925495],[-6.817145],[1.511877],[4.827198],[2.484956],[-8.630904],[7.612811],[-0.244115],[1.483271],[0.849328],[-2.512689],[-7.433338],[1.646939],[8.183551],[-7.633284],[-3.845669],[0.331100],[6.170015],[-0.296065],[0.291834],[4.048292],[-4.460778],[5.551307],[6.618173],[0.063066],[4.721249],[-6.057587],[5.122866],[2.524425],[3.245862],[-8.859082],[-6.936516],[-3.162121],[-5.606890],[-4.392194],[-7.584467],[2.410521],[1.658841],[-7.461889],[8.891424],[3.299014],[5.240104],[-8.001134],[8.930546],[5.659076],[3.684666],[-3.279988],[3.627004],[5.651846],[-6.465283],[9.045113],[-7.876881],[3.493809],[7.910605],[-5.581817],[9.012251],[2.477057],[5.844688],[-4.287276],[1.986186],[-4.870688],[1.793247],[0.014072],[8.091065],[-1.495361],[-0.247535],[4.298023],[-5.175574],[-8.057982],[-4.086001],[-7.019963],[-9.285710],[-4.678748],[7.348542],[5.014628],[-9.907235],[4.609201],[-3.538903],[-0.839273],[1.641737],[2.756714],[-9.726419],[-3.710368],[1.679579],[-7.182952],[-2.149575],[-4.061989],[-8.047292],[-6.907659],[2.770428],[-3.399780],[0.433752],[9.705107],[-2.675569],[-9.301196],[-8.724819],[-1.071904],[-4.714154],[8.555949],[2.657458],[0.958025],[-9.427444],[7.733378],[-7.631729],[-1.436315],[9.910473],[9.440283],[-5.684514],[-5.518809],[-0.269290],[-7.098736],[4.578379],[8.772037],[-4.046125],[7.454832],[-2.109169],[4.932640],[-8.446354],[8.334814],[-0.256154],[-1.618827],[-1.838517],[9.315747],[-1.640895],[-4.060051],[-4.550522],[9.759750],[8.800550],[9.025301],[0.985587],[6.711744],[1.786462],[-6.870586],[3.324830],[-5.225191],[9.572462],[4.055379],[-6.751901],[-6.101927],[1.850445],[2.484888],[-6.646454],[0.170876],[4.086979],[9.089818],[8.429706],[-3.473689],[0.926735],[4.690495],[-1.643422],[-5.990270],[-3.943841],[7.501128],[-5.517440],[-2.476877],[-8.303610],[0.501902],[-9.166359],[-9.149230],[9.758941],[8.707540],[4.955971],[4.923020],[-7.937649],[5.006224],[-1.087936],[8.642329],[-1.966230],[4.327945],[-9.366498],[-4.513020],[5.880436],[5.625042],[-6.776211],[3.789929],[2.706533],[-3.195129],[-1.438006],[0.986779],[-7.232049],[8.486400],[7.431891],[-7.475394],[-8.285575],[-8.483159],[2.309616],[9.835277],[1.687294],[-3.077064],[7.908247],[6.435637],[-3.446504],[6.070871],[-3.882426],[-9.706668],[2.642690],[3.370464],[-2.271611],[-7.465845],[-3.605566],[7.214544],[6.903083],[-1.399130],[-6.809436],[-3.148210],[0.128721],[-0.052093],[-6.925240],[-1.217072],[8.253446],[1.683240],[5.796061],[0.638218],[-7.111375],[-3.550365],[-7.731191],[-4.683355],[-0.428721],[-0.154671],[-3.941466],[-6.814228],[6.448623],[5.503476],[-4.183410],[-9.640217],[-6.467642],[2.044304],[-0.652009],[9.953170],[-4.323606],[9.802867],[-9.409168],[3.016644],[1.402216],[1.136395],[-8.394443],[8.575911],[-3.275516],[8.347130],[-1.218681],[-8.790270],[-4.228637],[-2.734958],[-2.334148],[4.880074],[6.862925],[-4.024664],[5.281382],[4.407039],[7.119115],[-6.232650],[-2.595488],[4.778272],[-7.359890],[-8.403241],[-2.472474],[-4.639383],[-4.697896],[-4.660822],[-4.168708],[6.659648],[-0.265327],[3.704917],[8.895835],[-5.590473],[2.655914],[7.722975],[-4.567544],[6.878634],[9.041482],[-1.963978],[-7.230894],[-3.035887],[5.686501],[-9.033898],[9.453073],[-4.942429],[0.365275],[8.256554],[-1.933601],[8.578100],[-3.344036],[2.071858],[-6.182178],[0.152919],[-1.032411],[2.094633],[-3.824808],[6.347529],[-1.181911],[-8.237637],[-1.330564],[-6.573038],[-0.059308],[-4.029557],[5.793709],[3.752959],[-3.006339],[2.509961],[1.854168],[7.350500],[-6.077959],[-7.621456],[-6.350753],[-3.311375],[8.906403],[-6.122135],[9.383747],[1.210666],[-5.059274],[-7.484723],[-3.452076],[6.274778],[1.105913],[5.350688],[-0.857550],[-9.109889],[3.645743],[2.859580],[9.956232],[3.922998],[-8.498619],[-8.559982],[-0.689691],[-5.692643],[8.710253],[-3.523424],[-7.317454],[3.152822],[-5.504279],[-6.989615],[9.690838],[7.926811],[6.768701],[-4.422127],[5.573344],[-5.683019],[-8.517218],[2.135145],[-0.352806],[3.882652],[8.651861],[7.331421],[-3.613550],[5.239620],[8.958302],[9.894896],[-9.387287],[-9.170094],[4.695729],[-4.991231],[-1.164989],[5.699162],[0.816019],[5.534093],[-6.525001],[-5.105162],[-2.247127],[6.534045],[-9.516826],[-5.133567],[-0.531962],[-5.620271],[-2.804973],[-9.287188],[8.451280],[-0.072673],[5.487339],[-5.557764],[9.336101],[1.736386],[1.824009],[5.289684],[2.000992],[-0.347215],[9.958657],[-5.300596],[-8.736489],[-0.722277],[0.658604],[-9.681875],[-5.155877],[-0.979383],[-8.436837],[-9.414109],[-6.451934],[7.850488],[0.055756],[4.200409],[9.878464],[-2.933093],[-6.624337],[-2.497126],[0.815785],[-2.305153],[-3.052106],[-3.577410],[0.898023],[-1.914805],[9.394810],[6.813318],[-0.665624],[2.276057],[9.309445],[5.941497],[-7.902030],[8.629614],[-1.500090],[8.355974],[5.938973],[-9.173545],[5.493486],[-7.776865],[9.486351],[-8.941087],[6.288255],[-6.745918],[3.278940],[-6.451048],[-4.413280],[1.717578],[1.050565],[-7.468365],[2.070412],[-7.469621],[5.271498],[-9.121040],[9.026552],[2.162394],[1.394946],[5.102157],[-3.051930],[3.088432],[-4.688576],[-0.115790],[7.481389],[2.559813],[6.228955],[-9.519798],[-0.488405],[2.010513],[9.284585],[-2.716875],[-2.635061],[5.822389],[2.670038],[-3.163038],[-7.962749],[8.480331],[8.928001],[2.018532],[-2.363092],[-6.400946],[-0.178143],[-4.272278],[0.394193],[-9.715841],[4.932932],[9.077836],[9.261003],[2.502653],[0.447911],[-1.469870],[7.213218],[-0.488209],[2.077389],[7.143700],[7.098909],[8.169930],[-6.950111],[-4.266100],[6.654688],[-0.655730],[8.406987]], dtype = "float64")#candidate|11484|(960, 1)|const|float64
call_11483 = relay.TupleGetItem(func_10463_call(relay.reshape(const_11484.astype('float64'), [10, 16, 6])), 1)
call_11485 = relay.TupleGetItem(func_10465_call(relay.reshape(const_11484.astype('float64'), [10, 16, 6])), 1)
uop_11488 = relay.acosh(const_11484.astype('float32')) # shape=(960, 1)
uop_11496 = relay.acos(uop_11488.astype('float32')) # shape=(960, 1)
bop_11498 = relay.bitwise_or(uop_11496.astype('uint16'), relay.reshape(uop_11488.astype('uint16'), relay.shape_of(uop_11496))) # shape=(960, 1)
func_10260_call = mod.get_global_var('func_10260')
func_10262_call = mutated_mod.get_global_var('func_10262')
call_11503 = relay.TupleGetItem(func_10260_call(), 1)
call_11504 = relay.TupleGetItem(func_10262_call(), 1)
func_9795_call = mod.get_global_var('func_9795')
func_9796_call = mutated_mod.get_global_var('func_9796')
call_11505 = relay.TupleGetItem(func_9795_call(), 0)
call_11506 = relay.TupleGetItem(func_9796_call(), 0)
output = relay.Tuple([call_11479,call_11483,bop_11498,call_11503,call_11505,])
output2 = relay.Tuple([call_11480,call_11485,bop_11498,call_11504,call_11506,])
func_11510 = relay.Function([], output)
mod['func_11510'] = func_11510
mod = relay.transform.InferType()(mod)
output = func_11510()
func_11511 = relay.Function([], output)
mutated_mod['func_11511'] = func_11511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9660_call = mod.get_global_var('func_9660')
func_9661_call = mutated_mod.get_global_var('func_9661')
call_11527 = func_9660_call()
call_11528 = func_9660_call()
func_5745_call = mod.get_global_var('func_5745')
func_5747_call = mutated_mod.get_global_var('func_5747')
call_11534 = relay.TupleGetItem(func_5745_call(), 0)
call_11535 = relay.TupleGetItem(func_5747_call(), 0)
output = relay.Tuple([call_11527,call_11534,])
output2 = relay.Tuple([call_11528,call_11535,])
func_11545 = relay.Function([], output)
mod['func_11545'] = func_11545
mod = relay.transform.InferType()(mod)
mutated_mod['func_11545'] = func_11545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11545_call = mutated_mod.get_global_var('func_11545')
call_11546 = func_11545_call()
output = call_11546
func_11547 = relay.Function([], output)
mutated_mod['func_11547'] = func_11547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8476_call = mod.get_global_var('func_8476')
func_8477_call = mutated_mod.get_global_var('func_8477')
call_11669 = relay.TupleGetItem(func_8476_call(), 0)
call_11670 = relay.TupleGetItem(func_8477_call(), 0)
output = relay.Tuple([call_11669,])
output2 = relay.Tuple([call_11670,])
func_11719 = relay.Function([], output)
mod['func_11719'] = func_11719
mod = relay.transform.InferType()(mod)
output = func_11719()
func_11720 = relay.Function([], output)
mutated_mod['func_11720'] = func_11720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7776_call = mod.get_global_var('func_7776')
func_7777_call = mutated_mod.get_global_var('func_7777')
call_11756 = func_7776_call()
call_11757 = func_7776_call()
func_8945_call = mod.get_global_var('func_8945')
func_8946_call = mutated_mod.get_global_var('func_8946')
call_11772 = relay.TupleGetItem(func_8945_call(), 1)
call_11773 = relay.TupleGetItem(func_8946_call(), 1)
output = relay.Tuple([call_11756,call_11772,])
output2 = relay.Tuple([call_11757,call_11773,])
func_11787 = relay.Function([], output)
mod['func_11787'] = func_11787
mod = relay.transform.InferType()(mod)
mutated_mod['func_11787'] = func_11787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11787_call = mutated_mod.get_global_var('func_11787')
call_11788 = func_11787_call()
output = call_11788
func_11789 = relay.Function([], output)
mutated_mod['func_11789'] = func_11789
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11834 = relay.const([[[2,-6,-10,-9,7],[-8,-2,-2,5,4],[6,8,10,6,-3],[-6,5,-2,-8,-8],[6,3,-2,-3,-4],[-8,6,8,5,6],[5,3,-5,6,7]],[[10,1,-3,8,-3],[-3,-3,-9,5,-2],[-4,-2,-10,-3,10],[-2,3,-4,10,2],[-4,-4,-6,-5,9],[-1,-8,-1,9,5],[-1,-10,4,-3,-5]]], dtype = "int8")#candidate|11834|(2, 7, 5)|const|int8
var_11835 = relay.var("var_11835", dtype = "int8", shape = (2, 7, 5))#candidate|11835|(2, 7, 5)|var|int8
bop_11836 = relay.bitwise_and(const_11834.astype('int8'), relay.reshape(var_11835.astype('int8'), relay.shape_of(const_11834))) # shape=(2, 7, 5)
func_10863_call = mod.get_global_var('func_10863')
func_10866_call = mutated_mod.get_global_var('func_10866')
var_11843 = relay.var("var_11843", dtype = "float64", shape = (800,))#candidate|11843|(800,)|var|float64
var_11844 = relay.var("var_11844", dtype = "int8", shape = (1200,))#candidate|11844|(1200,)|var|int8
call_11842 = relay.TupleGetItem(func_10863_call(relay.reshape(var_11843.astype('float64'), [800,]), relay.reshape(var_11844.astype('int8'), [1200,]), ), 4)
call_11845 = relay.TupleGetItem(func_10866_call(relay.reshape(var_11843.astype('float64'), [800,]), relay.reshape(var_11844.astype('int8'), [1200,]), ), 4)
output = relay.Tuple([bop_11836,call_11842,var_11843,var_11844,])
output2 = relay.Tuple([bop_11836,call_11845,var_11843,var_11844,])
func_11847 = relay.Function([var_11835,var_11843,var_11844,], output)
mod['func_11847'] = func_11847
mod = relay.transform.InferType()(mod)
var_11848 = relay.var("var_11848", dtype = "int8", shape = (2, 7, 5))#candidate|11848|(2, 7, 5)|var|int8
var_11849 = relay.var("var_11849", dtype = "float64", shape = (800,))#candidate|11849|(800,)|var|float64
var_11850 = relay.var("var_11850", dtype = "int8", shape = (1200,))#candidate|11850|(1200,)|var|int8
output = func_11847(var_11848,var_11849,var_11850,)
func_11851 = relay.Function([var_11848,var_11849,var_11850,], output)
mutated_mod['func_11851'] = func_11851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9119_call = mod.get_global_var('func_9119')
func_9121_call = mutated_mod.get_global_var('func_9121')
call_11859 = relay.TupleGetItem(func_9119_call(), 0)
call_11860 = relay.TupleGetItem(func_9121_call(), 0)
output = relay.Tuple([call_11859,])
output2 = relay.Tuple([call_11860,])
func_11867 = relay.Function([], output)
mod['func_11867'] = func_11867
mod = relay.transform.InferType()(mod)
mutated_mod['func_11867'] = func_11867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11867_call = mutated_mod.get_global_var('func_11867')
call_11868 = func_11867_call()
output = call_11868
func_11869 = relay.Function([], output)
mutated_mod['func_11869'] = func_11869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6654_call = mod.get_global_var('func_6654')
func_6655_call = mutated_mod.get_global_var('func_6655')
call_11892 = func_6654_call()
call_11893 = func_6654_call()
func_2436_call = mod.get_global_var('func_2436')
func_2440_call = mutated_mod.get_global_var('func_2440')
const_11907 = relay.const([4,-6,-3,-3,-3,2,-7,-4,2,-9,-6,-3,-9,4,-5,-7,-8,-5,10,-4,3,8,-10,10,8,6,-4,-6,8,-6,-9,-3,8,6,8,-2,-9,10,-7,-1,2,10,-8,9,-6,-8,-8,10,9,-5,-7,7,-9,3,-1,-10,-4,1,9,-6,2,2,3,9,9,8,-3,1,-5,-8,1,-1,10,-4,9,6,4,-5,-9,8,8,-5,4,-3,-2,-5,-2,-7,8,3,-3,-1,6,-3,-10,-6,-10,9,9,-3,4,-4,-4,-9,4,10,-3,-4,8,-6,10,-7,5,4,-10,2,7,-10,-9,-3,-1,2,-7,2,4,4,-4,-6,-8,10,7,2,2,-5,1,5,5,7,-2,7,-1,-1,3,1,-8,-9,-4,9,5,6,5,9,9,-2,-6,-8,-10,-9,6,4,2,-9,6,-4,-5,8,-4,-10,2,-3,-2,5,-9,5,-6,-9,6,-7,-7,5,3,-2,10,-7,5,-3,2,9,2,-7,4,-7,4,-3,4,1,-1,4,4,-8,-3,5,8,-7,7,1,7,-2,-3,-2,-2,6,-7,-9,-4,-1,7,-2,-10,-9,2,8,9,2,4,-3,-8,-4,-1,-9,7,4,8,10,5,-4,-9,-6,-10,-4,-2,-3,-8,-7,-9,6,6,1,-7,9,10,1,-6,10,5,2,-1,-10,-3,9,-3,9,6,3,-1,-5,6,2,3,9,6,-9,-6,9,6,-1,-5,-10,10,-4,6,4,5,5,8,8,-3,2,-6,1,8,-2,-4,-2,4,5,-5,-3,5,-10,9,-6,5,-6,-10,2,10,-1,-6,9,8,1,5,6,9,-4,4,-5,-9,-9,-9,-4,-6,-3,7,4,10,-3,-7,-6,6,7,1,10,-2,-6,1,9,-7,4,8,3,3,-4,4,-9,1,2,-9,-9,-1,-3,7,4,6,-9,-5,-2,-8,-9,6,5,-5,9,-9,-4,-3,5,-10,-5,-6,-3,-9,-9,3,3,5,9,7,3,-6,6,-5,1,-9,-4,-5,8,-1,-4,7,6,-5,2,-2,-8,4,-10,-5,4,1,1,-4,1,7,2,1,6,4,10,4,6,1,9,-9,10,-1,-6,-3,4,10,-2,5,-1,-7,-7,-6,-1,1,3,-2,-9,-5,2,2,7,-2,-7,8,-6,-6,8,-5,8,-8,5,-5,7,-9,-9,-2,5,5,1,-7,-8,9,6,4,10,-7,4,-7,-4,-9,-9,7,-5,7,6,4,-8,10,6,10,-6,9,10,10,-6,7,9,3,-6,3,-6,-8,9,10,3,-1,10,-10,8,6,-10,1,-7,-5,-5,-7,-3,-7,6,-8,-9,10,9,-2,2,2,1,9,-10,-2,-3,7,-5,-10,4,-10,7,2,9,-2,2,-1,1,-10,6,-7,-1,7,-1,-9,-5,7,6,-9,-5,-6,-6,9,-6,-8,1,1,2,-9,7,7,6,5,3,-9,-4,7,-9,-7,7,9,-3,-1,-10,-7,10,-10,-7,-10,-10,1,3,6,-6,9,10,-9,-8,-7,3,-7,7,-9,6,-7,8,10,7,3,9,-5,10,2,-4,-8,5,10,-7,-8,-8,-9,2,8,-3,1,3,-1,-9,10,-3,2,8,-4,3,-7,-7,-7,-4,-10,-6,-1,8,1,-6,-5,-1,-9,-1,3,-6,-4,7,-4,8,9,9,-4,-1,-8,-6,-6,-2,-6,-9,-8,9,8,7,10,9,1,9,-5,-2,9,-6,5,-1,2,9,-7,-3,-6,-8,-6,-6,-3,4,-7,-2,2,-3,-7,-7,-6,-8,7,-5,-10,9,-10,-2,-2,-2,3,-7,-2,-4,-5,-6,9,4,-5,-9,4,10,-7,-6,9,9,-9,-6,9,10,1,4,1,-6,-9,-1,6,-4,4,-3,-5,4,1,7,-2,-5,-2,-4,9,9,-8,-8,10,9,-1,8,5,1,3,-7,4,9,10,-7,5,6,6,8,-5,9,-7,5,-10,9,4,-10,5,4,-3,6,-9,-3,-6,1,8,-1,-9,-9,3,-2,-4,-7,2,-8,-4,-4,5,-8,-8,4,10,-1,2,-6,9,-3,-10,4,4,6,-6,-1,-6,4,9,-10,-3,-6,4,-9,-1,8,3,-3,5,4,-8,2,5,9,-4,-1,-1,-2,-2,-10,3,4,9,4,-7,-3,3,-2,-1,-10,-10,-4,1,-8,8,6,5,9,9,7,-2,-2,10,-3,5,-8,6,9,-9,-8,4,-8,6,-4,3,-3,-4,1,-1,4,8,2,-5,1,8,9,-5,-3,-8,-8,-10,9,-7,7,3,-3,-5,-6,6,2,-7,7,2,5,-9,-5,3,3,2,-10,-3,-9,8,9,-3,9,6,3,6,-9,10,-3,6,5,-8,-5,7,-1,9,10,-3,-3,-3,-6,-4,-7,9,-7,8,6,-6,8,7,10,-9,8,-7,10,7,2,-3,4,-9,-8,5,-2,7,6,-7,-9,-7,8,-8,-6,4,-6,5,8,1,10,4,-8,-1,-4,-1,7,-10,3,-3,4,-7,4,-10,-7,-2,6,-8,-6,9,9,1,-7,1,10,9,3,4,-9,4,7,2,2,8,-2,6,-6,-9,9,-4,-6,-4,-8,-8,7,4,8,7,-7,9,-1,-3,3,3,2,2,-2,-8,-9,9,8,9,-9,-7,-1,-10,-1,-1,-2,10,-4,3,1,8,8,7,1,4,-10,8,9,-4,-10,-7,-3,-8,9,3,-5,-3,8,-10,6,9,-7,7,-7,-6,-8,-9,2,-8,-3,5,1,2,8,6,-6,-9,-4,-10,-9,-7,-1,-6,8,-6,-4,-8,8,4,-1,-1,-9,-1,9,5,-8,-3,-1,-4,4,9,-10,4,-6,-6,-1,4,-7,5,6,4,-2,-5,-7,-1,10,8,6,9,-2,-9,-4,-5,9,9,-7,9,9,2,4,4,5,3,-7,5,9,-4,-6,6,-8,1,7,7,-6,1,-4,4,-8,-3,1,-4,-10,5,-9,1,7,7,4,9,4,-1,-4,10,-4,-7,-10,5,-1,-8,-1,-10,-3,-2,2,8,-3,8,6,9,10,-4,9,10,2,-4,9,1,2,10,7,2,8,7,-8,3,4,-8,-9,-7,-8,-5,-5,-10,2,-1,-9,10,2,9,-6,10,2,-5,8,-1,10,-5,2,2,-5,-6,-9,-2,-4,3,-5,-9,10,-5,3,5,4,10,5,-4,8,-7,-6,8,-9,-9,-1,-9,-10,9,4,9,-2,-8,3,-9,9,8,4,5,-6,-8,-1,-7,-5,6,-8,9,-6,-1,6,9,-6,3,10,5,-2,-2,2,-6,6,8,9,-8,-4,-3,8,8,-7,-4,-8,-5,-4,7,-8,4,-7,10,10,10,-8,4,4,-10,2,-10,-2,3,1,3,5,5,-10,7,-4,1,1,-8,7,8,1,-2,-2,-1,4,-4,1,-10,-6,-8,7,2,7,5,-7,5,-10,3,1,8,-7,-6,-4,7,5,-10,-9,2,-4,1,-1,-1,5,-4,-7,-4,5,-1,6,8,-5,6,3,-9,-7,2,9,9,-7,-10,5,1,4,10,-9,-5,-7,8,9,10,-10,-3,6,-4,-7,1,8,6,3,-6,-4,-9,-2,-2,-6,8,-5,-8,-5,7,-7,-7,-8,9,-9,-4,-3,-4,9,5,-2,-3,6,-9,-4,-6,-5,-3,6,-4,6,5,-10,4,9,-9,4,8,-3,-2,3,7,-1,-1,-4,-1,5,-8,7,8,-3,6,9,7,3,1,9,4,-8,-8,-1,3,-7,3,-4,1,-6,-3,5,8,-3,-3,-7,-4,-3,-7,3,10,-10,-5,4,2,-7,4,8,9,1,4,1,2,2,10,-9,7,-5,-6,2,-6,6,2,-2,-3,-3,10,5,-9,1,-4,10,-2,8,2,7,-9,-10,6,2,-6,6,-10,-7,-2,6,7,-9,-9,-8,-7,10,9,-8,3,-4,-6,6,3,-5,-10,-3,7,9,-9,10,3,3,-2,-6,-3,-6,3,7,3,-3,4,-3,7,8,6,-3,8,2,-9,4,3,10,-2,-1,8,-10,-1,-3,5,-6,1,-2,5,8,-6,-5,2,2,4,-1,-1,-5,5,1,-3,-3,-6,3,10,-7,-6,3,10,4,-3,8,-9,6,-5,6,-6,10,3,-3,-5,-9,-5,-10,2,-10,-10,-8,-3,3,-3], dtype = "int32")#candidate|11907|(1575,)|const|int32
call_11906 = relay.TupleGetItem(func_2436_call(relay.reshape(const_11907.astype('int32'), [15, 15, 7]), relay.reshape(const_11907.astype('int32'), [15, 15, 7]), ), 6)
call_11908 = relay.TupleGetItem(func_2440_call(relay.reshape(const_11907.astype('int32'), [15, 15, 7]), relay.reshape(const_11907.astype('int32'), [15, 15, 7]), ), 6)
func_5409_call = mod.get_global_var('func_5409')
func_5413_call = mutated_mod.get_global_var('func_5413')
const_11930 = relay.const([-1,-5,3,1,-9,7,3,-6,9,-4,3,3,-10,-1,10,-5,10,-6,-1,2,-7,-9,4,-5,-1,5,1,-3,7,-2,-5,2,8,-6,-4,-7,7,1,-3,-4,7,2,5,3,-7,-3,-1,-10,2,9,6,6,4,-5,-6,-3,6,1,1,7,8,-2,4,1,10,9,4,9,5,-6,1,-1,7,2,7,-5,9,7,1,-9,-6,7,8,-9,-10,-1,6,-9,8,-10,1,4,-5,5,-7,-7,5,-4,-1,-5,9,3,-9,-10,-4,-4,8,-6,8,-10,-8,-9,-10,7,7,-4,7,4,10,7,-6,10,8,6,-9,-3,3,9,5,7,-5,10,8,2,-8,1,-9,-8,9,4,-2,3,9,1,8,-7,10,-9,-1,-4,7,3,-8,-4,6,-5,7,6,-1,-1,6,4,-5,-4,-1,5,8,5,-8,-3,10,-3,-5,2,-5,-5,-3,8,-9,2,5,-9,5,8,-4,8,-8,-1,-1,9,8,-8,10,-8,-10,-10,-8,-9,2,8,8,-1,8,-9,9,-4,1,-9,-10,1,-7,-7,7,-10,1,8,4,8,-3,3,-7,10,-1,-9,4,-10,-1,8,3,9,-5,-5,-8,3,10,-5,4,-4,-2,5,3,9,-4,-3,4,-1,1,-8,-9,-2,8,7,-3,-7,4,-1,9,2,-6,8,-7,8,7,8,-8,6,-10,-10,-3,-7,8,5,-9,-1,-4,-4,-10,-10,8,-4,10,6,2,-2,10,-6,-9,-8,-10,5,7,-4,2,5,-3,8,-8,5,10,-9,-9,1,-5,-8,5,8,1,-1,7,-2,-5,-6,-7,-5,8,-7,6,-5,-6,-6,6,-5,6,-1,3,3,-6,-1,10,9,-7,-5,6,-3,-2,-5,3,-7,-7,-3,-2,8,-5,-2,-2,-3,9,3,-7,-8,-7,7,-5,10,3,-4,-10,-2,1,2,-6,4,2,-1,-4,-9,-3,3,-3,4,8,8,2,5,-5,-7,-3,-6,-6,5,7,-5,2,-2,10,-8,6,8,-7,9,9,3,-7,-8,-6,-5,9,-5,7,-6,3,-7,2,-7,8,3,2,-1,4,3,4,-7,9,6,9,-5,7,-3,7,8,-8,5,8,10,-7,4,-3,6,4,10,-5,-8,-8,1,-3,-3,1,-10,3,-1,-2,-4,9,-9,-4,-6,5,-3,-7,10,-7,-10,10,9,1,-6,6,-2,-1,-8,9,8,-8,-6,-7,-6,9,3,7,5,-2,2,4,-5,-4,-2,6,8,-10,8,3,2,-1,3,8,7,2,10,-3,1,-9,-2,-4,9,-7,3,-3,3,-1,2,-4,-9,-6,2], dtype = "int8")#candidate|11930|(504,)|const|int8
call_11929 = relay.TupleGetItem(func_5409_call(relay.reshape(call_11892.astype('bool'), [2, 6, 9]), relay.reshape(const_11930.astype('int8'), [1, 504]), ), 2)
call_11931 = relay.TupleGetItem(func_5413_call(relay.reshape(call_11892.astype('bool'), [2, 6, 9]), relay.reshape(const_11930.astype('int8'), [1, 504]), ), 2)
output = relay.Tuple([call_11892,call_11906,const_11907,call_11929,const_11930,])
output2 = relay.Tuple([call_11893,call_11908,const_11907,call_11931,const_11930,])
func_11940 = relay.Function([], output)
mod['func_11940'] = func_11940
mod = relay.transform.InferType()(mod)
output = func_11940()
func_11941 = relay.Function([], output)
mutated_mod['func_11941'] = func_11941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10194_call = mod.get_global_var('func_10194')
func_10196_call = mutated_mod.get_global_var('func_10196')
call_12008 = relay.TupleGetItem(func_10194_call(), 0)
call_12009 = relay.TupleGetItem(func_10196_call(), 0)
output = call_12008
output2 = call_12009
func_12027 = relay.Function([], output)
mod['func_12027'] = func_12027
mod = relay.transform.InferType()(mod)
output = func_12027()
func_12028 = relay.Function([], output)
mutated_mod['func_12028'] = func_12028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10738_call = mod.get_global_var('func_10738')
func_10740_call = mutated_mod.get_global_var('func_10740')
call_12035 = relay.TupleGetItem(func_10738_call(), 0)
call_12036 = relay.TupleGetItem(func_10740_call(), 0)
output = relay.Tuple([call_12035,])
output2 = relay.Tuple([call_12036,])
func_12039 = relay.Function([], output)
mod['func_12039'] = func_12039
mod = relay.transform.InferType()(mod)
mutated_mod['func_12039'] = func_12039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12039_call = mutated_mod.get_global_var('func_12039')
call_12040 = func_12039_call()
output = call_12040
func_12041 = relay.Function([], output)
mutated_mod['func_12041'] = func_12041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10194_call = mod.get_global_var('func_10194')
func_10196_call = mutated_mod.get_global_var('func_10196')
call_12107 = relay.TupleGetItem(func_10194_call(), 0)
call_12108 = relay.TupleGetItem(func_10196_call(), 0)
output = call_12107
output2 = call_12108
func_12109 = relay.Function([], output)
mod['func_12109'] = func_12109
mod = relay.transform.InferType()(mod)
mutated_mod['func_12109'] = func_12109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12109_call = mutated_mod.get_global_var('func_12109')
call_12110 = func_12109_call()
output = call_12110
func_12111 = relay.Function([], output)
mutated_mod['func_12111'] = func_12111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10360_call = mod.get_global_var('func_10360')
func_10361_call = mutated_mod.get_global_var('func_10361')
call_12256 = relay.TupleGetItem(func_10360_call(), 0)
call_12257 = relay.TupleGetItem(func_10361_call(), 0)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
const_12272 = relay.const([-3.952268,6.375621,0.622540,3.416305,-7.487253,1.234438,8.727362,-0.499793,-2.691543,-8.611972,-7.899709,-4.952008,0.230596,8.420185,-5.482964,4.520396,-0.854930,7.344979,-3.657811,5.203832,-4.402733,4.642302,-5.481665,1.536326,4.932468,-5.935786,2.286040,-5.893033,-8.892741,6.169189,-4.883015,9.284985,6.631289,-5.974277,0.980089,-2.703254,-0.904091,9.501928,0.160565,3.476286,1.395986,2.424482,5.043718,3.008207,8.038201,-5.954342,-2.088968,-3.376429,4.143029,2.034342,-6.776321,-8.938615,-9.604201,9.612400,-8.652879,-7.988785,-0.285031,6.206545,8.572809,3.591657,8.717798,-5.971065,-3.158130,-5.073294,9.852839,-5.609909,2.874011,-0.384649,2.745646,-8.956521,6.166705,4.193849,-9.709591,3.491029,4.014521,-1.877060,-9.994238,-8.421908,8.913140,-4.891740,9.784087,-6.810543,-4.554645,-8.111700,0.871827,2.209811,2.405440,-3.562809,5.021382,9.035119,8.911577,-7.414219,-2.081342,-4.509065,6.428393,-1.466291,2.654764,7.049875,4.158693,1.351818,-0.910190,8.215842,3.029958,2.439268,1.361930,-5.050399,-5.760729,1.953927,5.865052,-7.474182,-8.909505,1.732549,-9.636990,3.981455,-7.562816,-3.801810,-8.727402,-4.456968,0.493893,-6.818638,-1.119614,8.309778,9.290207,5.408592,-4.933797,9.801425,-7.261930,1.206601,-0.272908,9.173688,2.974797,8.994434,4.863459,-5.856281,-3.975714,-2.616047,7.882791,6.315881,-3.377617,8.453807,6.225891,0.129547,-9.742603,-5.306058,-0.213800,8.526544,9.820959,7.405723,7.566863,1.542665,-0.660960,-6.577052,-3.585803,7.140310,4.257186,0.516618,1.912958,-8.239914,6.932765,-2.584495,-7.196911,-8.831926,7.654471,4.668749,8.852967,-2.314305,-4.829838,4.271545,-1.992645,9.937885,3.904878,-3.348220,9.730178,-0.554245,6.160308,-7.351295,6.032548,8.649045,-0.646617,2.210643,-5.090363,-7.737914,-2.157725,4.378483,-9.393019,-7.653611,8.141450,-7.258352,-4.439279,-2.438324,-5.240674,9.531599,6.486372,-2.316424,3.209759,7.959803,5.967465,-8.677250,9.362057,-1.772857,-9.583881,1.924890,-3.541498,6.048159,2.711533,-1.714864,-0.678045,2.311418,3.657274,-9.172037,9.843148,-1.276118,3.502510,-4.257116,-4.934936,-0.874819,-4.586943,-9.812857,3.321393,5.474455,5.627614,-8.665538,8.107381,4.184886,6.923131,-3.850645,3.918381,8.913620,2.014447,2.051439,1.339216,9.813456,-7.270957,-5.634166,7.581783,-1.303596,6.038130,-5.983394,-4.659994,2.859470,0.721608,-8.808339,-8.090182,1.642404,1.353560,5.387275,-6.809128,-9.432607,0.806526,1.243756,-3.767817,6.368752,-4.547206,3.095022,-9.884746,4.850400,-9.686366,-2.148953,0.072671,-9.638278,1.657198,0.517074,-3.676043,-2.571085,-3.273996,-0.133048,9.629976,8.260593,-6.805088,-2.401739,8.477855,-5.684613,5.517957,1.431384,7.800020,5.265813,4.910894,-3.402051,7.985015,0.060715,-5.226393,-0.318667,-6.298231,-5.640435,-2.581007,7.362898,-0.871652,4.207840,-6.594408,-7.854708,1.086067,-0.126215,7.255193,-8.619305,9.577261,-6.288629,-4.767716,1.425592,-6.022534,5.088099,-6.919025,1.688511,-4.820640,-4.517282,0.920911,-0.565864,3.218394,2.130390,-5.466602,4.024490,-1.041830,8.402292,-0.967942,5.678367,-7.634365,-0.116396,5.624666,3.529485,-7.849486,-0.388148,4.250581,-7.991849,-1.649708,2.400514,-5.929456,-8.523397,-7.227010,3.492869,4.331820,-8.742589,1.686601,-3.445934,-4.852248,-7.064811,-8.897708,-3.483802,-3.528258,-3.016827,-6.649949,0.972383,-3.134282,1.254510,1.016830,2.433991,9.735664,9.940638,-9.835498,8.465703,9.562688,-4.217544,9.219192,4.357701,5.205959,-5.720774,1.567477,-3.503636,3.175717,5.137651,-4.453574,9.890513,-4.908908,-4.959122,5.256837,2.403238,-5.161108,-2.000551,-1.860479,7.474976,2.883944,4.881784,1.380941,-0.791567,-2.207748,6.205919,-6.253394,-3.063658,5.026673,-7.441543,7.584186,-4.741600,6.451028,4.922135,-3.813479,2.518556,-4.093576,8.304885,4.520811,-6.625598,6.764350,-8.415525,2.567633,-2.125825,-1.254144,5.302381,-1.352765,0.061813,-5.858121,4.373740,1.844637,-9.248574,3.664208,9.864916,9.894360,-7.226283,0.045197,-5.313874,-0.574690,-6.131402,6.680729,-3.134108,4.370345,3.049571,-4.486063,-6.067395,-2.535054,8.774384,-0.807999,-2.490356,-1.352817,-7.870280,1.451274,-6.856313,8.389274,-7.991205,-0.479224,-6.198372,-7.086796,5.300669,-5.154447,-6.033249,-6.220201,8.146313,-9.454150,-4.090160,-0.838740,3.070066,-8.278386,5.516333,-6.967341,-3.668957,-6.205427,-4.584862,5.075176,3.705878,3.616178,-7.993644,9.857608,9.956419,2.791548,1.323429,-3.329731,0.304622,-6.982818,4.581222,6.511956,-4.490639,-7.526713,-2.905216,-6.780729,-3.996465,-9.784107,-9.867746,-8.585146,4.638699,8.067267,6.105843,0.182980,-0.177788,-6.762911,-6.123266,-4.965888,1.163515,0.398631,-1.581908,-0.557476,-0.778591,3.142419,-1.354743,-2.924416,1.754560,-5.306207,7.595274,6.671899,-9.604254,2.125672,5.288997,7.836034,4.436176,6.533861,-1.195971,-0.637651,-2.181136,5.219302,9.561753,-9.159220,-7.877961,8.416996,9.278341,6.356339,-3.398837,-4.484382,-7.483331,7.151874,5.927471,8.569186,-5.306242,-0.272224,6.552032,4.508664,3.551944,0.436471,6.620477,8.596184,-9.242948,-3.202311,-0.396113,-5.801619,-8.689921,-2.854068,-2.116509,2.739606,0.738058,0.749531,-9.424137,2.305395,2.984370,3.825415,5.903487,7.771494,7.241836,0.784385,-9.836892,2.188209,4.681206,-0.884439,6.845668,-9.842317,0.312480,-0.182371,-3.887525,8.075013,-6.062049,-2.882683,-9.435766,1.524114,5.033631,5.522692,1.059932,-6.821974,-5.221714,-6.725888,5.930992,-2.412991,4.187194,-5.207847,-8.293426,3.712647,-9.011634,-4.883238,3.956803,-9.427346,-5.106220,-4.706841,-8.947412,-9.732792,-0.614099,6.851633,8.642118,-5.395473,-3.876991,5.145071,3.896721,8.651690,-1.613060,-6.380844,-1.464956,8.171773,-8.963837,-5.142913,-1.850939,9.886298,1.156795,-7.813340,-1.669268,6.787996,2.688408,8.442951,8.460038,-1.171839,-2.248420,1.391289,-7.667938,-6.620389,1.792497,7.706366,2.034692,-3.436174,1.947549,-3.848263,5.768052,-7.071497,-3.137071,9.681375,8.979321,6.500401,-1.450170,-3.262146,1.564231,7.633092,7.258853,2.430254,0.544172,4.668297,-9.444307,-0.443203,-9.564424,9.101481,-1.021835,-6.026122,-2.345095,-0.316936,6.414483,1.848597,5.582373,1.274296,-6.196565,5.100303,-9.515154,-1.926952,-6.362046,-8.186242,-8.910269,2.209451,1.821055,-1.143453,-5.274418,-5.306277,4.041515,-7.644352,6.904802,5.347039,-6.089881,9.900370,0.040033,-4.029073,9.952846,-1.297162,-8.933830,-0.294582,-7.389711,0.138223,0.936736,-8.018219,-3.980504,9.438842,-5.169562,6.501045,-7.621875,9.334353,-6.571938,8.161157,-5.858679,7.987108,-9.417765,-0.744995,-4.828560,5.030015,-9.543771,-2.715063,-3.438927,-3.794744,-8.003619,-1.122266,-8.679727,3.428154,5.652100,-0.855962,-5.821127,-9.008520,-4.980374,6.999450,-2.984441,-2.303047,-9.207171,6.073245,3.722770,3.934171,5.583866,-3.510125,1.922534,7.274839,-3.180697,9.572319,2.496970,2.100743,-3.111284,7.127128,7.366664,4.581865,-3.324457,6.201397,-5.583546,-8.518273,-4.063722,-0.622868,-5.846083,-6.386331,5.786432,0.243028,6.602404,-1.856294,-5.589821,-9.665948,-9.414262,6.490918,2.596700,-1.331128,-0.753625,8.895782,1.632184,-3.719656,3.213252,-4.589190,-9.316860,-5.587684,7.114704,-5.164391,-1.325396,6.439378,-0.874246,3.527668,0.425855,-4.440616,-8.829169,-5.428271,5.441483,3.446395,3.994806,6.585956,-4.465560,0.930011,9.688408,6.882615,9.310956,-0.829687,3.161646,6.811970,1.674105,-4.127077,7.425571,3.396225,-7.632102,-1.621673,-0.380936,0.312980,3.947560,-0.742502,-0.140033,-7.342001,3.647053,-9.430623,-3.822509,7.909497,8.283945,-4.649852,7.988846,5.940692,-1.289405,5.652553,7.673590,9.496996,-9.623988,6.842391,4.118844,-2.029833,-7.822682,-4.927208,-3.183608,-6.907740,1.794364,-7.828952,-6.799806,-7.960899,9.038095,-9.898207,7.867429,7.440804,2.186828,-0.247516,-3.607662,6.413753,4.274558,-9.990340,-6.081539,0.658174,5.044617,-1.754876,7.061046,-3.475146,-9.444881,-1.741486,8.178192,0.899824,-8.870674,9.239111,-2.640356,-0.982701,-8.487699,0.434960,4.145875,8.849777,0.239762,7.964868,-8.733386,3.464958,-0.741561,-9.362233,-6.781117,-2.905582,-9.227053,6.012204,6.217341,-0.373122,-4.228504,-7.949959,8.575988,-8.997198,1.211234,4.334662,-5.084095,-9.057246,-0.385387,-1.696047,6.407425,-6.364754,-2.989774,-5.411939,1.491187,-8.952016,3.971811,3.851503,-0.994644,4.575773,2.543595,0.086048,1.584973,-8.562682,6.207404,-1.138250,-6.835990,-7.437211,0.219565,-6.536790,8.449217,-0.171182,2.737871,1.827825,-0.240738,3.076857,-6.523986,0.928317,-0.349868,7.532218,-3.580497,-2.366069,-5.416625,0.456739,-8.879389,-0.376070,-4.523628,-5.332933,0.313307,2.981847,-7.755391,9.160287,-9.509157,-5.651157,9.154018,-7.278649,-8.698164,-7.867727,3.577014,-0.697627,4.331043,1.934483,1.672920,3.405865,-3.919408,-4.465793,9.648570,5.460085,-9.754925,-1.319019,0.553565,0.402561,-0.795078,6.352123,-1.541724,4.026364,-8.487438,0.898834,-0.777724,-6.019740,-7.005372,9.624447,0.116628,9.654285,-6.846186,0.132036,-6.768724,7.237551,-6.416699,-2.886934,-5.037743,-8.694519,-9.061322,8.092712,-2.210318,3.769466,-4.161066,-0.072870,9.581666,-4.322923,0.900564,-9.793727,-0.149585,-3.017042,-6.272436,1.811043,-8.599156,5.028864,-1.091547,0.737645,0.227544,8.043341,7.890348,6.286889,7.243443,9.940970,6.208898,-5.600796,9.075562,-4.432193,4.233248,8.026372,9.783662,-1.978757,6.538770,-4.404606,1.708596,-1.903575,2.398031,0.150928,7.458283,8.969059,-5.951624,6.155587,0.279122,6.839273,4.459791,-8.819975,-3.461767,-5.010916,3.878248,-9.001155,-2.457329,3.124934,-8.735820,-7.399166,8.538104,-0.199928,0.403813,-2.062616,7.879066,7.051929,-3.958053,5.878388,0.832882,-1.789310,-1.536128,3.540063,7.552454,-4.977171,9.585233,-0.156231,-9.240630,6.222840,-7.823512,-5.925447,5.047376,-0.172304,-2.820488,-5.721571,-0.552697,-2.849350,3.790253,5.860623,-8.681247,-5.704805,9.173902,1.134341,1.995604,2.962592,-1.715630,6.988477,-5.020518,4.458425,3.996757,-0.894802,-4.198404,-4.559166,-2.162007,-0.618445,0.893822,-8.309790,0.480074,1.675385,-5.313545,-7.811123,-2.838270,0.969740,-4.940145,4.630529,-5.354813,5.766034,-3.518984,8.093077,8.082411,-8.677247,-6.411107,7.003762,-2.108626,1.967759,-5.926507,7.710526,5.011406,5.241305,2.710327,-2.293804,-8.966861,-7.659233,8.910739,7.392117,8.255795,-7.503924,-2.130516,-2.448411,-9.584798,-4.808583,2.869824,0.387101,-1.721416,-7.545736,-4.027176,8.189083,-8.834831,2.194154,7.766681,5.169158,-5.137908,7.047129,3.780989,3.053625,5.989054,-7.538291,6.892106,2.630583,-5.840005,4.264027,-1.124648,2.842748,-9.110242,5.726002,5.310207,1.561491,-3.407185,6.526788,-8.084448,1.988247,-4.757450,-8.330931,8.441459,5.244659,-5.029915,-8.833267,8.793611,0.655019,7.125561,-1.716569,7.686333,-3.682518,-2.095106], dtype = "float32")#candidate|12272|(1092,)|const|float32
call_12271 = func_109_call(relay.reshape(const_12272.astype('float32'), [12, 7, 13]))
call_12273 = func_109_call(relay.reshape(const_12272.astype('float32'), [12, 7, 13]))
func_10645_call = mod.get_global_var('func_10645')
func_10647_call = mutated_mod.get_global_var('func_10647')
var_12283 = relay.var("var_12283", dtype = "float32", shape = ())#candidate|12283|()|var|float32
call_12282 = relay.TupleGetItem(func_10645_call(relay.reshape(var_12283.astype('float32'), [])), 1)
call_12284 = relay.TupleGetItem(func_10647_call(relay.reshape(var_12283.astype('float32'), [])), 1)
func_1844_call = mod.get_global_var('func_1844')
func_1849_call = mutated_mod.get_global_var('func_1849')
var_12295 = relay.var("var_12295", dtype = "float64", shape = (154, 1))#candidate|12295|(154, 1)|var|float64
const_12296 = relay.const([5.718897,-4.562523,0.055815,6.351677,-3.728929,3.102333,-3.886162,4.585290,-9.871957,3.323751,6.322081,-2.457388,3.028821,5.617676,-2.447137,-2.783109,7.809220,-8.666413,9.867226,-7.087831,-9.317844,1.442557,6.332279,-4.627989,-7.268177,8.120895,4.361543,5.496632,-7.940333,5.151471,-9.240242,-9.971260,-2.444006,-7.598783,8.475541,7.691978,0.396445,-6.593776,-5.112948,-6.932334,-5.429325,-8.673999,-4.025827,7.727204,-6.792915,3.094535,-5.075628,-3.999078,-1.611435,-6.672077,-1.674242,-1.129116,-4.822577,-4.267892,9.442549,-6.193116,-0.018773,1.105470,-6.274089,2.004130,5.230984,-8.128475,-1.249452,-6.393146,4.778077,-1.825080,-3.163223,7.960011,5.507741,6.212760,3.058101,4.468474,-0.968425,-1.407933,8.620831,2.620288,-4.451622,-4.340062,4.128291,3.926025,9.464698,-5.918990,-3.209806,-3.015096,0.940104,-1.190021,6.309791,-4.570649,-5.216876,7.017044,-3.750668,-6.451948,-0.908565,7.232989,7.982371,-8.331722,1.028084,6.942579,7.800795,1.610004,7.825450,8.877573,4.703819,1.371948,-4.276471,8.580618,8.237445,2.089370,-6.555073,1.010582,2.397237,-8.342435,-9.062403,5.932923,-3.775033,-1.594938,-3.259409,-3.709230,6.994400,-6.461214,-1.740955,-8.214221,5.063231,2.623135,3.452110,-4.424752,8.149429,7.147084,-7.953873,5.137620,1.288106,-6.444221,1.561917,-9.340509,-5.886814,-2.750579,-7.133852,7.461080,-0.789911,-8.824833,8.692257,-0.348797,7.642256,5.831938,-0.933743,-4.788778,-4.490180,-2.388150,-1.051053,7.667022,4.434455,9.775523,-2.764516,9.829009,-6.726368,-5.341291,-9.795966,-9.095627,-4.696494,0.121965,-1.725249,7.206184,9.753571,-8.100726,-5.188015,-9.994269,8.702870,3.790618,-5.900200,-7.604869,-1.997908,4.302368,0.460072,2.147589,2.279278,4.197754,-1.159929,-6.191109,-5.897521,2.017016,-8.455989,-0.151291,-4.190579,-4.435183,-0.365747,9.815652,3.165554,-7.376017,-1.647218,3.406676,-8.723435,0.014291,2.627946,-0.564733,-0.631960,-9.183871,-9.591599,-2.107959,-5.137537,6.201680,7.219822,-5.216218,4.007156,6.371346,-7.178615,2.874870,1.924465,7.675414,1.502494,-8.441240,-9.502821,-1.489675,2.316161,1.859930,0.204193,1.579597,6.635789,-3.915500,-0.552534,-9.841862,-0.915539,7.102043,-3.068773,-2.012834,4.910613,9.854901,7.583302,-7.752966,-4.549623,-5.403799,-6.498908,-2.560058,0.698123,2.371411,-5.481127,-8.657039,9.117648,1.866192,3.742281,8.487301,-2.442522,-4.381077,6.778046,4.149229,-1.661674,9.821233,7.855437,-5.450164,-2.350454,-3.120358,4.950202,6.650884,-8.137723,-9.798297,-2.201097,-0.903217,-0.107467,-7.559759,4.369118,3.014139,-0.828548,2.975166,-0.772293,-8.414768,2.764806,6.103324,-2.352002,3.877254,4.754598,-1.532969,-8.902238,1.896559,1.288824,-8.617451,5.464086,-9.672802,-2.366780,6.879997,3.969300,-9.878849,-8.065115,1.051342,-9.636414,6.547862,-0.963564,-0.857793,9.316786,0.322698], dtype = "float32")#candidate|12296|(288,)|const|float32
const_12297 = relay.const([2.745435,-9.766678,1.254219,-3.604502,-5.908575,5.806564,-2.456009,3.111548,-5.603967,9.851928,-7.058531,8.394381,7.795084,-9.528161,-3.820558,0.009615,9.303473,9.658220,1.650794,9.178886,-2.528644,-5.161413,8.848629,-6.745180,-6.141469,-6.834585,9.485578,-7.853687,-3.648294,3.291672,8.190406,-6.687208,3.265032,4.284957,3.932990,-6.300881,-7.613507,-0.553830,-1.491630,3.416306,-8.496375,8.457786,7.030437,-4.443318,-7.634988,-2.318154,-7.261644,-3.183408,-4.631897,-0.046950,-0.269605,-1.111205,9.410655,-6.499443,2.621779,6.777410,1.131201,3.552721,-9.748572,-6.774508,2.671181,-5.997373,0.870250,8.531838,1.270672,9.901519,-7.021362,-0.152990,-2.776463,6.193838,-5.368834,-1.321194,5.366684,-0.648875,3.734122,-3.916607,5.536561,8.943990,3.613700,-3.113447,-6.019518,-8.814579,7.082594,9.206704,9.820857,8.228135,8.638544,3.123033,8.801479,-4.511687,-4.775116,-7.514594,-7.002317,-7.597973,-1.534586,-0.975718,-0.425657,-8.295134,3.816789,-6.837727,-0.570820,-2.423459,6.839391,8.757226,7.982994,0.520931,-2.787736,5.805057,8.146704,3.777121,-6.836079,8.597845,-6.503846,1.075750,1.946085,1.632662,3.833738,4.169121,8.333202,-3.810753,-1.320581,7.691606,4.719775,4.578110,-6.487984,-2.569654,-4.837092,-6.256661,8.914548,-4.504958,9.766500,3.061398,5.622216,6.639213,0.454127,5.282787,5.905590,-2.298311,1.030246,-2.861756,-6.905330,4.518761,-1.712058,-8.449557,2.857425,-8.479690,-9.747886,5.146217,-3.606336,-8.207736,-3.953888,8.414584,-9.766774,-6.243447,-7.126550,-2.697278,-7.545995,5.231694,8.190659,-5.714022,1.582064,6.386600,-0.674716,0.208078,9.041427,-4.381275,-4.616844,9.284578,-9.433574,-0.487118,-9.384530,9.987121,-7.271060,4.490155,-1.848541,-3.175981,-0.320560,2.045773,1.105355,1.486549,0.110707,-8.975141,-4.593570,-0.316756,-0.256145,9.409427,3.117267,0.313233,3.073441,3.531246,-5.270954,4.504569,1.827201,-0.672435,-5.260420,7.706002,8.040224,7.757004,-6.140572,-3.232234,-3.787534,6.638505,3.598749,-3.974578,-6.407545,-6.581141,9.377016,3.001846,7.897050,8.034951,-2.873952,2.346477,6.113981,4.767451,-7.854390,-0.779403,8.683012,8.923194,-7.584439,3.321447,5.747502,3.766533,-8.304601,-2.389485,-9.462477,7.833848,-6.923485,2.716149,8.045683,8.392280,-7.048426,-2.830724,-5.476852,-7.718598,2.768867,4.182571,-7.874710,-3.070588,0.241723,-0.461804,-1.467554,-8.081906,-3.178601,-1.890427,-9.289129,0.121353,4.304877,-8.033544,4.123295,-1.240351,9.559150,-6.975529,1.303749,-3.489538,7.262512,-0.860648,-0.715226,-9.926267,-2.790007,-1.926216,0.438212,-4.584308,0.643429,-6.763970,3.169016,-8.706218,-1.695978,-2.795014,1.174681,-2.491811,4.802374,-4.167061,-0.141976,-1.020373,-4.116992,8.902993,8.139647,-3.455120,8.436089,0.219909,-0.778136,7.743770,-6.149766,-5.931711,-3.310672,-9.324255,2.300995,9.696237,-4.997342,7.578020,-4.020280,-3.589809,-2.463200,-6.627027,8.417310,-8.433385,7.596537,-7.252338,-7.049236,1.907400,6.826997,-7.961881,4.677338,-1.809282,-3.277288,-7.085380,5.299451,-1.093309,6.766716,7.930147,-2.760773,-0.558965,1.805222,-1.963668,1.819724,-1.630221,2.269808,-9.555619,-3.029414,-8.399555,-1.559935,7.950805,5.694701,6.511054,-7.167770,5.910374,-7.556550,3.153060,-5.012291,6.352512,8.275753,5.937426,3.068457,9.287830,-8.114461,-3.018669,-0.631381,-0.576792,8.078834,6.811867,-1.731063,-0.058902,-2.286445,-5.946343,4.761781,3.957614,6.076207,-8.181865,-0.576463,-0.104514,3.891718,6.415066,-1.943527,-9.582765,9.705380,-5.777567,-9.062360,-0.843292,-9.012132,-3.235196,9.120153,-3.112674,-1.514335,2.718634,8.154191,8.198030,-8.579605,-2.521735,2.989943,-7.674085,-4.262417,-7.677076,3.802668,-2.289334,-4.923771,-1.788853,-8.614830,-6.088076,9.402715,1.454449,-4.159251,4.343475,9.015498,7.287933,-8.989930,1.203372,-8.501155,-5.787836,-1.113113,2.407356,8.524318,-9.485265,9.918478,-1.181110,-9.473074,0.139599,-3.318555,8.027870,-3.675600,-8.851068,-3.840458,-2.322871,-3.957542,5.012380,9.380654,9.202535,-2.821348,-1.376122,-0.686615,-6.951489,-3.878195,4.378614,-3.296041,-2.911751,-2.999259,-0.385464,-4.807294,3.578372,1.637548,7.547161,-7.038488,6.585769,8.793878,-1.189914,-3.228150,-5.632547,-5.107316,4.502885,3.375934,7.079242,3.755060,-8.207906,-9.436293,-4.286885,-6.523253,-2.413286,-3.555502,6.364160,3.008777,8.729236,-7.445497,-5.526862,-6.799054,-2.871256,5.510149,9.238687,4.141174,-0.824581,1.134872,2.944344,0.165861,-5.184722,9.743126,1.774348,1.375612,-2.491630,-1.332084,-9.626965,-8.718927,-3.726642,3.508288,-7.891181,-5.136349,-2.249204,9.139688,9.179069,-3.270223,-3.292613,-5.296298,-0.333360,3.761449,3.486894,-7.785583,-0.380209,-1.085418,-1.230419,-2.610604,-2.136007,-0.067530,-7.117691,-7.117387,-6.573201,-3.157471,-7.538556,-4.097297,-5.694195,9.539836,6.014709,-8.786788,0.786395,6.548216,-9.619463,-5.041914,-6.926877,9.417152,1.899781,-1.341950,-5.381586,-1.208118,6.456778,-2.399358,-0.718813,-1.791020,8.304744,6.218368,8.360090,-4.268360,-6.968765,1.124638,1.370280,-0.406678,-7.099519,-8.488392,5.774065,-0.522356,8.949776,-1.353420,-4.547672,-4.147016,5.802748,-0.302993,-1.067824,-2.976579,-4.611077,1.703756,8.125619,-4.230658,-1.350068,-5.286171,1.000708,7.509672,9.850297,5.988066,-5.091452,4.800581,3.563294,-4.872710,7.109343,7.308100,-8.912623,5.106769,-1.051748,-6.993641,2.824095,-7.376865,1.994820,8.493967,6.256936,-4.284291,-0.654100,-7.597453,-7.108725,8.236199,1.301304,2.066531,5.510941,1.444941,-6.648565,1.085544,0.420778,-9.789462,5.836018,7.536906,-6.699532,-6.878847,-6.097972,4.982660,4.043303,-4.924997,1.202556,3.285891,-5.657937,-8.686905,-9.045224,-7.163355,7.692587,-8.561461,3.814212,8.435047,1.531856,-4.725244,-1.968295,-0.209702,0.979467,5.027318,-8.846954,6.793466,7.354847,7.978815,2.341501,1.944978,2.961356,7.245336,-2.898830,-1.881728,-6.980527,4.904815,-0.689615,0.806655,-1.426115,-8.563231,6.167910,1.959727,9.831425,-3.794403,2.462513,6.303896,4.827566,4.764534,-7.070131,0.196565,-6.466907,1.229018,7.947982,-5.382131,0.217740], dtype = "float64")#candidate|12297|(616,)|const|float64
call_12294 = relay.TupleGetItem(func_1844_call(relay.reshape(var_12295.astype('float64'), [1, 14, 11]), relay.reshape(const_12296.astype('float32'), [288,]), relay.reshape(const_12297.astype('float64'), [4, 14, 11]), ), 3)
call_12298 = relay.TupleGetItem(func_1849_call(relay.reshape(var_12295.astype('float64'), [1, 14, 11]), relay.reshape(const_12296.astype('float32'), [288,]), relay.reshape(const_12297.astype('float64'), [4, 14, 11]), ), 3)
output = relay.Tuple([call_12256,call_12271,const_12272,call_12282,var_12283,call_12294,var_12295,const_12296,const_12297,])
output2 = relay.Tuple([call_12257,call_12273,const_12272,call_12284,var_12283,call_12298,var_12295,const_12296,const_12297,])
func_12300 = relay.Function([var_12283,var_12295,], output)
mod['func_12300'] = func_12300
mod = relay.transform.InferType()(mod)
var_12301 = relay.var("var_12301", dtype = "float32", shape = ())#candidate|12301|()|var|float32
var_12302 = relay.var("var_12302", dtype = "float64", shape = (154, 1))#candidate|12302|(154, 1)|var|float64
output = func_12300(var_12301,var_12302,)
func_12303 = relay.Function([var_12301,var_12302,], output)
mutated_mod['func_12303'] = func_12303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10270_call = mod.get_global_var('func_10270')
func_10272_call = mutated_mod.get_global_var('func_10272')
call_12329 = relay.TupleGetItem(func_10270_call(), 0)
call_12330 = relay.TupleGetItem(func_10272_call(), 0)
func_8844_call = mod.get_global_var('func_8844')
func_8847_call = mutated_mod.get_global_var('func_8847')
const_12332 = relay.const([1.424536,-2.414946,-1.036742,-1.324507,-9.497722,1.897627,-2.515403,-6.154180,1.271900,-2.701420,0.207856,-1.100601,9.900455,8.219813,-4.252040,2.545615,-2.892354,2.051217,6.088170,-9.021732,0.082413,-3.882511,8.509994,6.828275,-1.974708,2.137312,3.568390,6.958501,6.049646,9.827999,1.649168,-7.324788,-4.959416,-0.345239,5.651613,4.885508,6.317738,-3.591732,-6.093399,7.239802,-4.366870,7.228383,-7.611937,-5.338068,6.125555,-0.526441,9.135783,-7.942709,-7.767803,8.878333,0.551610,3.509114,-3.289969,6.129628,9.277120,9.793914,0.381430,0.837145,6.506375,-5.707465,-5.207826,-3.060488,7.369054,7.847209,5.733551,0.616876,-9.088581,8.700704,-5.193068,1.098427,6.570487,1.963116,2.995434,1.647015,5.863636,2.623021,-5.417133,9.151241,-9.938141,0.390097,4.906175,-6.933674,6.468834,-4.921662,-9.555036,-3.841525,-6.143680,6.810940,-2.684266,1.118041,-5.778710,5.527395,-9.121681,-0.170188,-1.840657,-7.753197,-6.764321,7.130383,3.359601,3.012268,9.078909,3.905597,-5.890510,-7.648490,5.564111,-5.351160,-8.163684,-5.986664,-2.827507,-5.754544,4.775391,-8.688986,6.690750,1.332064,9.331636,8.349228,-8.067058,-8.956264,9.687059,-9.769502,-8.433134,-1.724359,-8.152813,3.191077,9.512625,5.568684,7.708547,-9.575931,3.561163,5.096739,-1.741333,-9.778442,7.950801,6.819437,0.063948,-5.464973,-0.970933,-7.626885,8.332183,9.001670,1.767423,7.779756,-5.915635,-6.230617,-2.224794,-7.977271,-0.401733,8.196720,-0.442271,-4.650225,-6.690389,7.811445,0.343896,-5.004407,-9.111840,6.910454,-3.764501,-3.786580,-8.561171,4.534057,-9.087687,3.441958,-8.912227,-4.676703,-7.961615,-1.652157,0.106013,8.970552,3.532279,-3.976710,-6.066354,-8.099546,-9.372192,7.321940,0.287999,7.344835,7.797456,-9.544487,-9.435011,-6.191368,1.418949,9.777621,-4.323834,3.015046,-2.571114,4.970062,7.905485,-5.260628,-3.712354,-0.249001,-9.507018,7.474015,-7.354654,2.652397,0.267042,4.857096,-2.157894,2.707440,-6.047610,-4.401057,-2.676470,1.754384,8.360320,-1.581051,0.243184,5.101069,-3.000574,0.013064,-5.384686,4.607326,-8.912848,-5.795800,-1.838613,-5.811668,-6.811790,4.166512,-1.910306,-5.057578,-4.750345,-7.347661,5.313091,8.804052,-6.277137,5.075762,7.837350,-4.649102,4.462813,-4.909347,4.917420,-7.328565,-1.338384,-8.828953,-3.622156,-2.217682,1.785840,2.512246,9.085935,4.202739,0.060947,-6.808354,1.878309,1.328918,-3.351594,-9.883217,-9.608595,2.777165,0.922396,0.732402,9.228856,-0.404176,-4.533074,4.463157,9.652933,-6.840545,1.731994,9.175254,0.793975,-9.823139,3.081221,3.248779,1.262666,-1.268986,7.497670,4.001125,4.149105,9.689677,9.790532,8.271320,9.231139,6.452590,9.226990,-2.053554,4.660373,-3.154828,3.811792,-8.351500,-0.478491,3.086815,3.014192,-8.044629,8.224998,-8.082477,5.734784,7.632266,4.752257,8.367927,9.829867,-7.197685,-3.189495,9.090581,-0.298602,6.332025,-5.259451,-4.448532,0.878714,0.840759,9.125170,1.183047,9.549489,7.661072,0.421273,5.396504,-6.637317,-0.972599,-0.647529,4.424937,9.154913,-9.004153,6.723551,1.329755,3.749181,8.500184,7.913088,4.947414,1.998975,7.897465,-4.496375,-2.517973,-2.330855,1.150810,-1.357732,-5.609002,1.910810,-4.949099,6.804714,3.356205,-2.221891,6.321928,9.413366,-0.352643,-2.078762,-0.452740,0.569292,5.996541,0.172032,-2.108510,9.515845,2.538412,4.520494,-6.035619,-6.709439,-4.506428,-5.200988,-1.688010,-9.753006,7.232443,-0.039315,3.419595,-5.034575,-9.870313,-3.336221,9.074716,1.545942,-5.664488,-3.602926,3.715654,3.267878,8.775980,-2.391791,5.589300,9.813354,2.234780,-6.078702,6.081590,6.611360,-2.118172,-7.033581,-9.319602,3.050646,3.378554,2.446526,-6.286693,-6.063712,-2.766452,7.142757,3.800377,-9.815196,-9.101063,-7.034818,2.978375,9.224919,6.047174,-3.328209,3.256885,-6.603325,0.454537,-5.649206,-3.415994,-6.763342,8.859893,9.806665,-6.083822,1.291795,-2.947025,-7.449449,7.626776,-2.510978,0.253620,-0.029106,-9.229903,0.313905,-1.501378,6.718648,-3.607057,-7.836370,4.725218,5.745725,7.146324,-9.827963,-3.852891,-9.859597,6.769998,-5.845126,2.151508,8.332463,6.550609,8.382716,-7.444291,4.427488,-8.355157,-1.682361,4.267403,1.840638,-7.022049,-0.187254,-4.199220,3.434487,0.053494,0.159448,-8.275065,-3.758937,6.329975,-8.729423,-8.510416,6.843264,9.930824,-5.045360,2.573820,6.084278,-2.293157,-7.538585,-6.132568,-0.405418,8.628758,-5.854114,-3.482625,4.886006,8.601981,-8.872975,9.662205,-7.072150,4.342855,4.603451,2.053025,3.343151,1.695976,-0.486622,8.240097,8.687607,-9.661238,-1.564321,2.494672,0.534665,4.798059,-9.518197,0.908378,9.554676,-9.996285,7.606673,-6.365974,8.802330,-5.600297,9.138162,-9.222849,-5.105920,4.123104,3.336417,-1.517358,0.676763,-1.712114,6.647659,-4.880303,4.330305,5.947537,-8.751361,1.332777,4.081973,-8.059923,5.284012,-6.586971,9.325862,-8.723929,-6.597025,6.686561,6.313362,2.569084,0.425833,7.746443,-2.989114,7.111716,-0.456742,-2.618328,-1.568291,2.033528,5.900030,4.640198,8.950286,-3.668112,7.306158,8.956117,0.369705,6.805955,-9.445721,5.944729,1.784296,-4.795277,3.205924,-9.558827,1.889470,5.726891,6.323470,9.089365,0.399378,-8.303894,-3.124910,9.946267,-2.352728,-8.426934,0.012152,-8.867842,7.981067,5.884588,1.274546,-7.787464,2.024415,-9.640555,5.544926,4.809844,9.650819,6.043788,3.410971,7.400458,6.044112,-6.379323,-0.893684,9.558110,4.568396,-9.580070,-3.448378,1.042087,3.394642,-3.318074,-6.564025,5.540457,1.891448,4.042793,4.859247,3.468203,-8.858735,1.584224,-4.859871,-9.543528,8.877116,-9.067535,-6.103398,8.326291,5.894535,-2.485101,9.514913,4.671488,-6.411912,5.298547,-0.388944,-1.718979,9.017879,9.776842,-6.528690,1.864323,-8.349719,-0.811003,-5.735636,-7.948000,5.270507,9.508524,-5.799072,-0.696713,0.557138,-3.986405,-2.438582,-6.680022,4.094761,5.195339,-8.507437,1.622852,-1.819717,7.776719,-4.641352,3.814951,-4.809593,-7.205531,6.930505,9.896878,8.414815,-6.641081,-5.093977,9.867766,-4.302197,2.181004,3.964488,-2.487477,-5.349550,-9.320976,6.373574,1.978909,-2.718009,7.074011,-4.310287,-5.382961,-9.628512,9.963363,-2.050914,-6.626414,0.228502,5.137325,5.751570,-7.504470,1.999095,-8.813792,-9.427795,-1.712959,7.922778,0.591065,-8.064276,8.406819,-6.299987,2.123334,1.853598,-8.834441,0.567477,-5.633824,4.745768,9.135015,5.613448,5.755147,8.117974,0.247191,3.126010,-3.521388,-3.478220,3.494906,-1.865300,5.264485,-5.948314,-1.659743,8.511122,-5.956872,9.571851,5.518033,7.132830,3.913913,-7.029306,-3.165772,7.471354,8.663189,-8.936132,-0.598465,4.908593,6.524933,8.109353,-1.671540,-5.298407,0.853888,-1.066821,-1.741567,-1.804202,-5.336941,-5.536822,-3.960269,7.782226,-0.411399,-7.278593,-8.700388,-0.552421,-7.506859,2.150458,0.832517,2.439945,5.759434,0.153436,-8.813008,8.356963,3.786569,8.916331,9.594529,0.712056,-2.492216,9.546148,-9.549120,-4.796351,1.247793,1.549193,0.185961,-2.273756,-2.323670,0.784960,1.645265,2.963870,-1.493140,-0.614479,9.911928,8.274970,-5.233047,-6.749206,8.119204,4.636636,-2.763902,0.277414,3.886243,-1.473022,2.736350,-0.617095,3.799622,1.929577,-7.457606,1.096854,-2.408922,-4.864751,2.218906,7.153045,4.914085,-5.330068,8.383313,-8.643929,8.690696,-7.076039,-2.668827,4.958350,-4.116531,9.711286,-9.608936,-9.269278,-3.841934,9.906482,9.819206,-2.786423,3.127420,-5.327636,-8.954459,-6.542197,9.252374,-9.942418,2.625816,1.999574,2.545479,0.480259,-0.301649,-3.092831,-5.442251,-2.082667,-2.784676,-4.498295,7.115822,-3.594334,1.982975,5.043588,4.578194,-3.833409,1.843994,-1.668103,2.165495,8.293176,5.619062,-4.306518,1.616901,5.644126,7.347684,-7.348352,-1.745687,-0.790554,3.190068,-9.310764,7.907866,6.075623,3.003353,5.639502,1.342049,-4.858126,-5.656431,-3.562072,2.524613,7.985757,-1.102013,-3.569417,-3.917748,-8.283365,-4.798462,-5.248463,-8.589021,4.399091,3.100508], dtype = "float64")#candidate|12332|(800,)|const|float64
call_12331 = relay.TupleGetItem(func_8844_call(relay.reshape(const_12332.astype('float64'), [200, 4])), 1)
call_12333 = relay.TupleGetItem(func_8847_call(relay.reshape(const_12332.astype('float64'), [200, 4])), 1)
output = relay.Tuple([call_12329,call_12331,const_12332,])
output2 = relay.Tuple([call_12330,call_12333,const_12332,])
func_12334 = relay.Function([], output)
mod['func_12334'] = func_12334
mod = relay.transform.InferType()(mod)
mutated_mod['func_12334'] = func_12334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12334_call = mutated_mod.get_global_var('func_12334')
call_12335 = func_12334_call()
output = call_12335
func_12336 = relay.Function([], output)
mutated_mod['func_12336'] = func_12336
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12422 = relay.var("var_12422", dtype = "float32", shape = (13, 6, 4))#candidate|12422|(13, 6, 4)|var|float32
var_12423 = relay.var("var_12423", dtype = "float32", shape = (13, 6, 4))#candidate|12423|(13, 6, 4)|var|float32
bop_12424 = relay.divide(var_12422.astype('float32'), relay.reshape(var_12423.astype('float32'), relay.shape_of(var_12422))) # shape=(13, 6, 4)
uop_12433 = relay.rsqrt(bop_12424.astype('float64')) # shape=(13, 6, 4)
bop_12438 = relay.greater_equal(uop_12433.astype('bool'), relay.reshape(bop_12424.astype('bool'), relay.shape_of(uop_12433))) # shape=(13, 6, 4)
output = relay.Tuple([bop_12438,])
output2 = relay.Tuple([bop_12438,])
F = relay.Function([var_12422,var_12423,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12422,var_12423,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

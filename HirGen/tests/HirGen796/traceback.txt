==========mod==========
#[version = "0.0.5"]
def @func_16998() -> Tensor[(13, 7, 8), float32] {
  @func_12375() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_8845() -> (Tensor[(13, 7, 8), float32],) {
  %0 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  (%0,)
}

def @func_10123() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1 = @func_10037() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %2 = @func_8132() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %3 = %1.0;
  %4 = %2.0;
  (%3, %4)
}

def @func_21023() -> Tensor[(13, 7, 8), float32] {
  %5 = @func_13983() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %5.0
}

def @func_5466(%var_5422: Tensor[(10, 1, 15), float64]) -> (Tensor[(10, 1, 15), float64], Tensor[(13, 7, 8), float32]) {
  %6 = cast(%var_5422, dtype="float64") /* ty=Tensor[(10, 1, 15), float64] */;
  %7 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %8 = %7.0;
  %9 = cast(%8, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %10 = sqrt(%9) /* ty=Tensor[(13, 7, 8), float32] */;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %12 = rsqrt(%6) /* ty=Tensor[(10, 1, 15), float64] */;
  %13 = exp(%11) /* ty=Tensor[(13, 7, 8), float32] */;
  (%12, %13)
}

def @func_11742() -> Tensor[(192, 1), int64] {
  %14 = @func_11537() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192, 1), int64]) */;
  %14.3
}

def @func_12925() -> Tensor[(13, 7, 8), float32] {
  @func_12186() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_2307(%var_2293: bool, %var_2294: Tensor[(1, 8, 6), bool]) -> (Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) {
  %15 = cast(%var_2293, dtype="bool") /* ty=bool */;
  %16 = cast(%var_2294, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  %17 = cast(%var_2293, dtype="float64") /* ty=float64 */;
  %18 = cast(%var_2294, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %19 = logical_or(%15, %16) /* ty=Tensor[(1, 8, 6), bool] */;
  %20 = divide(%17, %18) /* ty=Tensor[(1, 8, 6), float64] */;
  (%19, %20)
}

def @func_15591() -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) {
  %21 = @func_14083() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 4), bool] */, dtype="bool") /* ty=Tensor[(12, 4), bool] */;
  %23 = reshape(%22, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %24 = @func_4977(%23) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %25 = %21.0;
  %26 = %24.3;
  %27 = @func_11755() /* ty=Tensor[(13, 7, 8), float32] */;
  (%25, %26, meta[relay.Constant][0] /* ty=Tensor[(12, 4), bool] */, %27)
}

def @func_14715(%var_14694: Tensor[(448), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(14, 8, 4), float32], Tensor[(448), float32], Tensor[(13, 7, 8), float32]) {
  %28 = @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %29 = @func_7641() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %30 = cast(%var_14694, dtype="float32") /* ty=Tensor[(448), float32] */;
  %31 = reshape(%30, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float32] */;
  %32 = @func_10485(%31) /* ty=(Tensor[(14, 8, 4), float32], Tensor[(13, 7, 8), float32]) */;
  %33 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %34 = %28.1;
  %35 = %29.0;
  %36 = %32.0;
  %37 = %33.0;
  (%34, %35, %36, %var_14694, %37)
}

def @func_17388() -> (Tensor[(1, 8, 6), float64],) {
  %38 = @func_14130() /* ty=Tensor[(1, 8, 6), float64] */;
  (%38,)
}

def @func_18503() -> (Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64]) {
  %39 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %41 = reshape(%40, newshape=[1, 270]) /* ty=Tensor[(1, 270), int64] */;
  %42 = @func_6876(%41) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) */;
  %43 = %39.0;
  %44 = %42.5;
  (%43, %44, meta[relay.Constant][1] /* ty=Tensor[(270), int64] */)
}

def @func_16297(%var_16270: Tensor[(270), int64]) -> (Tensor[(528), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(13, 7, 8), float32], Tensor[(720), int32]) {
  %45 = cast(%var_16270, dtype="int64") /* ty=Tensor[(270), int64] */;
  %46 = reshape(%45, newshape=[1, 270]) /* ty=Tensor[(1, 270), int64] */;
  %47 = @func_6876(%46) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) */;
  %48 = @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %49 = @func_12773() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(13, 7, 8), float32]) */;
  %50 = @func_7620() /* ty=Tensor[(528), float32] */;
  %51 = %47.5;
  %52 = %48.0;
  %53 = %49.1;
  (%50, %51, %var_16270, %52, %53)
}

def @func_10088() -> (Tensor[(13, 7, 8), float32],) {
  %54 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %55 = %54.0;
  (%55,)
}

def @func_8979() -> Tensor[(13, 7, 8), float32] {
  %56 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %56.0
}

def @func_10155(%var_10152: Tensor[(2, 96), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(2, 96), int64], Tensor[(28), float32]) {
  %57 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %58 = cast(%var_10152, dtype="int64") /* ty=Tensor[(2, 96), int64] */;
  %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %60 = reshape(%58, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %61 = reshape(%59, newshape=[1, 28]) /* ty=Tensor[(1, 28), float32] */;
  %62 = @func_6582(%60, %61) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) */;
  %63 = %57.0;
  %64 = %62.2;
  (%63, %64, %var_10152, meta[relay.Constant][2] /* ty=Tensor[(28), float32] */)
}

def @func_17486() -> (Tensor[(13, 7, 8), float32],) {
  %65 = @func_14386() /* ty=Tensor[(13, 7, 8), float32] */;
  (%65,)
}

def @func_12874() -> (Tensor[(48), bool],) {
  %66 = @func_9588() /* ty=(Tensor[(48), bool],) */;
  %67 = %66.0;
  (%67,)
}

def @func_17741() -> (Tensor[(13, 7, 8), float32],) {
  %68 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %69 = %68.0;
  (%69,)
}

def @func_13532() -> (Tensor[(13, 7, 8), float32],) {
  %70 = @func_12005() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %71 = %70.0;
  (%71,)
}

def @func_19806() -> (Tensor[(48), bool],) {
  %72 = @func_15086() /* ty=Tensor[(48), bool] */;
  (%72,)
}

def @func_20457() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %73 = @func_15591() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) */;
  %74 = @func_17741() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %75 = %73.0;
  %76 = @func_11167() /* ty=Tensor[(13, 7, 8), float32] */;
  %77 = %74.0;
  %78 = @func_11755() /* ty=Tensor[(13, 7, 8), float32] */;
  (%75, %76, %77, %78)
}

def @func_9308() -> Tensor[(48), bool] {
  @func_7197() /* ty=Tensor[(48), bool] */
}

def @func_10898() -> Tensor[(13, 7, 8), float32] {
  %79 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %79.0
}

def @func_19904(%var_19896: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(270), int64], Tensor[(96), float32]) {
  %80 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %81 = cast(%var_19896, dtype="int64") /* ty=Tensor[(270), int64] */;
  %82 = cast(meta[relay.Constant][3] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %83 = reshape(%81, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %84 = reshape(%82, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %85 = @func_5634(%83, %84) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(270), int64], Tensor[(2, 48), float32]) */;
  %86 = %80.0;
  %87 = %85.2;
  (%86, %87, %var_19896, meta[relay.Constant][3] /* ty=Tensor[(96), float32] */)
}

def @func_8832() -> (Tensor[(13, 7, 8), float32],) {
  %88 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  (%88,)
}

def @func_7438() -> (Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %91 = reshape(%89, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %92 = reshape(%90, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %93 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %94 = %93.0;
  %95 = cast(%94, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %97 = reshape(%96, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), float32] */;
  %98 = @func_3260(%97) /* ty=(Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) */;
  %99 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %100 = @func_3603(%91, %92) /* ty=Tensor[(16, 3, 11), float32] */;
  %101 = acos(%95) /* ty=Tensor[(13, 7, 8), float32] */;
  %102 = %98.1;
  %103 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %104 = %99.0;
  (%100, meta[relay.Constant][4] /* ty=Tensor[(528), float32] */, %101, %102, meta[relay.Constant][5] /* ty=Tensor[(96), float32] */, %103, %104)
}

def @func_14324() -> (Tensor[(13, 7, 8), int64], Tensor[(96), float32], Tensor[(90, 3), int64], Tensor[(96), float32]) {
  %105 = @func_10791() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */;
  %106 = cast(meta[relay.Constant][6] /* ty=Tensor[(90, 3), int64] */, dtype="int64") /* ty=Tensor[(90, 3), int64] */;
  %107 = cast(meta[relay.Constant][7] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %108 = reshape(%106, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %109 = reshape(%107, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %110 = @func_4618(%108, %109) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %111 = %105.1;
  %112 = %110.3;
  (%111, %112, meta[relay.Constant][6] /* ty=Tensor[(90, 3), int64] */, meta[relay.Constant][7] /* ty=Tensor[(96), float32] */)
}

def @func_16600(%var_16595: Tensor[(3072), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(192, 16), float32], Tensor[(3072), int64]) {
  %113 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %114 = cast(%var_16595, dtype="int64") /* ty=Tensor[(3072), int64] */;
  %115 = reshape(%114, newshape=[192, 16]) /* ty=Tensor[(192, 16), int64] */;
  %116 = @func_14836(%115) /* ty=(Tensor[(192, 16), float32], Tensor[(192, 16), bool]) */;
  %117 = %113.0;
  %118 = %116.0;
  (%117, %118, %var_16595)
}

def @func_5619() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) {
  %119 = cast(meta[relay.Constant][8] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %120 = reshape(%119, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %121 = @func_4977(%120) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %122 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %123 = %121.1;
  (%122, %123, meta[relay.Constant][8] /* ty=Tensor[(48), bool] */)
}

def @func_7686(%var_7672: Tensor[(13, 7, 8), float32], %var_7681: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], Tensor[(720), int32]) {
  %124 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %125 = %124.0;
  %126 = cast(%var_7672, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%125, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %130 = cast(%var_7681, dtype="float32") /* ty=Tensor[(28), float32] */;
  %131 = cast(meta[relay.Constant][9] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %132 = reshape(%130, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %133 = reshape(%131, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %134 = @func_7361(%132, %133) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */;
  %135 = floor_mod(%128, %129) /* ty=Tensor[(13, 7, 8), float32] */;
  %136 = %134.5;
  (%135, %136, %var_7681, meta[relay.Constant][9] /* ty=Tensor[(720), int32] */)
}

def @func_4804(%var_4765: Tensor[(28), float32], %var_4779: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) {
  %137 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %138 = cast(%var_4765, dtype="float32") /* ty=Tensor[(28), float32] */;
  %139 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %140 = reshape(%138, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %141 = reshape(%139, newshape=[]) /* ty=int64 */;
  %142 = @func_2704(%140, %141) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %143 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %144 = %142.4;
  %145 = cast(%144, dtype="int64") /* ty=Tensor[(192), int64] */;
  %146 = cast(%var_4779, dtype="int32") /* ty=Tensor[(720), int32] */;
  %147 = reshape(%143, newshape=[]) /* ty=int64 */;
  %148 = reshape(%145, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %149 = reshape(%146, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %150 = @func_2257(%147, %148, %149) /* ty=(Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) */;
  %151 = %137.0;
  %152 = %150.1;
  (%151, %144, %var_4765, 10 /* ty=int64 */, %152, %var_4779)
}

def @func_12539() -> (Tensor[(13, 7, 8), float32],) {
  %153 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %154 = %153.0;
  (%154,)
}

def @func_21896() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %155 = @func_16726() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) */;
  %156 = %155.0;
  %157 = cast(%156, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  %158 = reshape(%157, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %159 = @func_4977(%158) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %160 = %159.0;
  (%156, %160)
}

def @func_15365() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %161 = @func_12539() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %162 = @func_10399() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %163 = %161.0;
  %164 = %162.0;
  (%163, %164)
}

def @func_7641() -> (Tensor[(13, 7, 8), float32],) {
  %165 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
  (%165,)
}

def @func_13687() -> Tensor[(13, 7, 8), float32] {
  %166 = @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */;
  %166.0
}

def @func_17469() -> Tensor[(48), bool] {
  %167 = @func_12874() /* ty=(Tensor[(48), bool],) */;
  %167.0
}

def @func_18936() -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
  %168 = @func_12522() /* ty=(Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) */;
  %169 = %168.0;
  %170 = @func_18138() /* ty=Tensor[(13, 7, 8), float32] */;
  (%169, %170)
}

def @func_11948() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) {
  %171 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %172 = @func_6311() /* ty=Tensor[(13, 7, 8), float64] */;
  (%171, %172)
}

def @func_12312() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %173 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %174 = %173.0;
  %175 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  %176 = @func_7112() /* ty=Tensor[(13, 7, 8), float32] */;
  (%174, %175, %176)
}

def @func_9464(%var_9454: Tensor[(7, 10, 11), float32]) -> Tensor[(7, 10, 11), float64] {
  %177 = cast(%var_9454, dtype="float32") /* ty=Tensor[(7, 10, 11), float32] */;
  %178 = log2(%177) /* ty=Tensor[(7, 10, 11), float32] */;
  %179 = cast(%178, dtype="float64") /* ty=Tensor[(7, 10, 11), float64] */;
  atanh(%179) /* ty=Tensor[(7, 10, 11), float64] */
}

def @func_20914(%var_20887: Tensor[(378), uint32], %var_20888: Tensor[(14), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 63), uint32], Tensor[(378), uint32], Tensor[(14), float32], Tensor[(126), float64], Tensor[(13, 7, 8), float32]) {
  %180 = @func_12662() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %181 = cast(%var_20887, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %182 = cast(%var_20888, dtype="float32") /* ty=Tensor[(14), float32] */;
  %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %184 = reshape(%181, newshape=[378, 1]) /* ty=Tensor[(378, 1), uint32] */;
  %185 = reshape(%182, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %186 = reshape(%183, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %187 = @func_15805(%184, %185, %186) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(24, 22), float32], Tensor[(1, 63), uint32], Tensor[(378, 1), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32]) */;
  %188 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %189 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  %190 = %180.1;
  %191 = %187.3;
  %192 = %188.0;
  (%189, %190, %191, %var_20887, %var_20888, meta[relay.Constant][10] /* ty=Tensor[(126), float64] */, %192)
}

def @func_9444(%var_9334: Tensor[(63), uint32], %var_9335: Tensor[(378), uint32], %var_9346: Tensor[(720), int32], %var_9347: Tensor[(14), float32], %var_9386: Tensor[(28), float32], %var_9387: int64, %var_9429: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) {
  %193 = cast(%var_9334, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %194 = cast(%var_9335, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %195 = reshape(%193, newshape=[9, 1, 7]) /* ty=Tensor[(9, 1, 7), uint32] */;
  %196 = reshape(%194, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %197 = @func_7158(%195, %196) /* ty=(Tensor[(9, 6, 7), bool], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64]) */;
  %198 = @func_8905() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %199 = @func_8251() /* ty=(Tensor[(13, 7, 8), bool],) */;
  %200 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %201 = cast(%var_9386, dtype="float32") /* ty=Tensor[(28), float32] */;
  %202 = cast(%var_9387, dtype="int64") /* ty=int64 */;
  %203 = reshape(%201, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %204 = reshape(%202, newshape=[]) /* ty=int64 */;
  %205 = @func_2704(%203, %204) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %206 = cast(%var_9346, dtype="int32") /* ty=Tensor[(720), int32] */;
  %207 = cast(%var_9347, dtype="float32") /* ty=Tensor[(14), float32] */;
  %208 = reshape(%206, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), int32] */;
  %209 = reshape(%207, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %210 = @func_607(%208, %209) /* ty=(Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) */;
  %211 = %210.0;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(8, 6, 15), float64] */;
  %213 = cast(meta[relay.Constant][11] /* ty=Tensor[(24, 22), float32] */, dtype="float32") /* ty=Tensor[(24, 22), float32] */;
  %214 = cast(meta[relay.Constant][11] /* ty=Tensor[(24, 22), float32] */, dtype="float32") /* ty=Tensor[(24, 22), float32] */;
  %215 = reshape(%213, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %216 = reshape(%214, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %217 = cast(%var_9429, dtype="float64") /* ty=Tensor[(126), float64] */;
  %218 = reshape(%217, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %219 = @func_6956(%218) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], Tensor[(1, 9, 14), float64], Tensor[(126), float64]) */;
  %220 = @func_9157() /* ty=Tensor[(13, 7, 8), float32] */;
  %221 = %197.0;
  %222 = %198.1;
  %223 = %199.0;
  %224 = %200.0;
  %225 = %205.2;
  %226 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  %227 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  %228 = tan(%212) /* ty=Tensor[(8, 6, 15), float64] */;
  %229 = @func_3603(%215, %216) /* ty=Tensor[(16, 3, 11), float32] */;
  %230 = %219.2;
  (%220, %221, %var_9334, %var_9335, %var_9346, %var_9347, %222, %223, %224, %225, %var_9386, %var_9387, %226, %227, %228, %229, meta[relay.Constant][11] /* ty=Tensor[(24, 22), float32] */, %230, %var_9429)
}

def @func_13928() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %231 = @func_12539() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %232 = %231.0;
  %233 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  (%232, %233)
}

def @func_5125(%var_5106: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) {
  %234 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %236 = cast(%var_5106, dtype="float32") /* ty=Tensor[(28), float32] */;
  %237 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %238 = reshape(%236, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %239 = reshape(%237, newshape=[]) /* ty=int64 */;
  %240 = @func_2704(%238, %239) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %241 = tan(%235) /* ty=Tensor[(13, 7, 8), float32] */;
  %242 = %240.2;
  (%241, %242, %var_5106, -8 /* ty=int64 */)
}

def @func_15232() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) {
  %243 = @func_12539() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %244 = @func_7278() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %245 = @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %246 = @func_14245() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %247 = %243.0;
  %248 = %244.0;
  %249 = %245.1;
  %250 = %246.2;
  (%247, %248, %249, %250)
}

def @func_19087() -> (Tensor[(13, 7, 8), float32], Tensor[(192, 4), bool], Tensor[(192, 1), float64], Tensor[(192, 1), int64], Tensor[(192, 4), float64]) {
  %251 = @func_15365() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %252 = @func_11742() /* ty=Tensor[(192, 1), int64] */;
  %253 = cast(%252, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %254 = acosh(%253) /* ty=Tensor[(192, 1), float64] */;
  %255 = cast(%254, dtype="bool") /* ty=Tensor[(192, 1), bool] */;
  %256 = cast(meta[relay.Constant][12] /* ty=Tensor[(192, 4), float64] */, dtype="bool") /* ty=Tensor[(192, 4), bool] */;
  %257 = cast(%254, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %258 = cast(%252, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %259 = shape_of(%254, dtype="int32") /* ty=Tensor[(2), int32] */;
  %260 = cast(%254, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %262 = minimum(%260, %261) /* ty=Tensor[(192, ?), uint32] */;
  %263 = cast(%262, dtype="bool") /* ty=Tensor[(192, ?), bool] */;
  %264 = cast(meta[relay.Constant][12] /* ty=Tensor[(192, 4), float64] */, dtype="bool") /* ty=Tensor[(192, 4), bool] */;
  %265 = not_equal(%263, %264) /* ty=Tensor[(192, 4), bool] */;
  %266 = cast(%265, dtype="float64") /* ty=Tensor[(192, 4), float64] */;
  %267 = log(%266) /* ty=Tensor[(192, 4), float64] */;
  %268 = cast(%267, dtype="float64") /* ty=Tensor[(192, 4), float64] */;
  %269 = %251.0;
  %270 = equal(%255, %256) /* ty=Tensor[(192, 4), bool] */;
  %271 = log10(%257) /* ty=Tensor[(192, 1), float64] */;
  %272 = @func_18642() /* ty=Tensor[(192, 1), int64] */;
  %273 = sinh(%268) /* ty=Tensor[(192, 4), float64] */;
  (%269, %270, %271, %272, %273)
}

def @func_19261() -> Tensor[(1, 8, 6), float64] {
  %274 = @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %274.0
}

def @func_19445(%var_19436: Tensor[(14, 4, 6), float32], %var_19437: Tensor[(14, 4, 6), float32]) -> (Tensor[(14, 4, 6), float32],) {
  %275 = cast(%var_19437, dtype="float32") /* ty=Tensor[(14, 4, 6), float32] */;
  %276 = shape_of(%var_19436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_19436, dtype="float32") /* ty=Tensor[(14, 4, 6), float32] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %279 = floor_mod(%277, %278) /* ty=Tensor[(14, 4, 6), float32] */;
  (%279,)
}

def @func_9588() -> (Tensor[(48), bool],) {
  %280 = @func_9308() /* ty=Tensor[(48), bool] */;
  (%280,)
}

def @func_17592() -> Tensor[(48), bool] {
  %281 = @func_12874() /* ty=(Tensor[(48), bool],) */;
  %281.0
}

def @func_12773() -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(13, 7, 8), float32]) {
  %282 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %283 = cast(meta[relay.Constant][13] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %284 = cast(meta[relay.Constant][14] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %285 = reshape(%283, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %286 = reshape(%284, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %287 = @func_7361(%285, %286) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */;
  %288 = @func_8327() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) */;
  %289 = %288.1;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %291 = %282.0;
  %292 = %287.4;
  %293 = log10(%290) /* ty=Tensor[(13, 7, 8), float32] */;
  (%291, %292, meta[relay.Constant][13] /* ty=Tensor[(28), float32] */, meta[relay.Constant][14] /* ty=Tensor[(720), int32] */, %293)
}

def @func_17693() -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32]) {
  %294 = @func_11351() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %295 = @func_17592() /* ty=Tensor[(48), bool] */;
  %296 = %294.1;
  (%295, %296)
}

def @func_14210() -> Tensor[(16, 1, 12), int64] {
  %297 = @func_11537() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192, 1), int64]) */;
  %297.1
}

def @func_18973() -> (Tensor[(13, 7, 8), float32], Tensor[(192, 1), int64]) {
  %298 = @func_14848() /* ty=Tensor[(13, 7, 8), float32] */;
  %299 = @func_18642() /* ty=Tensor[(192, 1), int64] */;
  (%298, %299)
}

def @func_19309() -> Tensor[(13, 7, 8), float32] {
  %300 = @func_14721() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %300.0
}

def @func_10498() -> (Tensor[(13, 7, 8), float32],) {
  %301 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %302 = %301.0;
  (%302,)
}

def @func_18766() -> (Tensor[(13, 7, 8), float32],) {
  %303 = @func_16676() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %304 = %303.0;
  (%304,)
}

def @func_9982() -> Tensor[(13, 7, 8), float32] {
  %305 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %305.0
}

def @func_5675(%var_5664: Tensor[(96), float32], %var_5671: Tensor[(48), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(1, 8, 6), bool], bool, Tensor[(48), bool]) {
  %306 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 90), int64] */, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %307 = cast(%var_5664, dtype="float32") /* ty=Tensor[(96), float32] */;
  %308 = reshape(%306, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %309 = reshape(%307, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %310 = @func_4618(%308, %309) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %311 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %312 = cast(%var_5671, dtype="bool") /* ty=Tensor[(48), bool] */;
  %313 = reshape(%311, newshape=[]) /* ty=bool */;
  %314 = reshape(%312, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
  %315 = @func_2307(%313, %314) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
  %316 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %317 = %310.1;
  %318 = %315.0;
  (%316, %317, meta[relay.Constant][15] /* ty=Tensor[(3, 90), int64] */, %var_5664, %318, False /* ty=bool */, %var_5671)
}

def @func_21772() -> (Tensor[(13, 7, 8), float32],) {
  %319 = @func_12067() /* ty=(bool, Tensor[(13, 7, 8), float32]) */;
  %320 = %319.1;
  (%320,)
}

def @func_8681(%var_8675: Tensor[(28), float32], %var_8676: int64) -> (Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) {
  %321 = @func_8251() /* ty=(Tensor[(13, 7, 8), bool],) */;
  %322 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %323 = cast(%var_8675, dtype="float32") /* ty=Tensor[(28), float32] */;
  %324 = cast(%var_8676, dtype="int64") /* ty=int64 */;
  %325 = reshape(%323, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %326 = reshape(%324, newshape=[]) /* ty=int64 */;
  %327 = @func_2704(%325, %326) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %328 = %321.0;
  %329 = %322.5;
  %330 = %327.2;
  (%328, %329, %330, %var_8675, %var_8676)
}

def @func_20137() -> Tensor[(13, 7, 8), float32] {
  @func_14048() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_18001() -> (Tensor[(13, 7, 8), float32],) {
  %331 = @func_14886() /* ty=Tensor[(13, 7, 8), float32] */;
  (%331,)
}

def @func_13667(%var_13656: int64, %var_13657: Tensor[(192, 1), int64], %var_13658: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], int64, Tensor[(192, 720), bool]) {
  %332 = @func_7188() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %333 = cast(%var_13656, dtype="int64") /* ty=int64 */;
  %334 = cast(%var_13657, dtype="int64") /* ty=Tensor[(192, 1), int64] */;
  %335 = cast(%var_13658, dtype="int32") /* ty=Tensor[(720), int32] */;
  %336 = reshape(%333, newshape=[]) /* ty=int64 */;
  %337 = reshape(%334, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %338 = reshape(%335, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %339 = @func_2257(%336, %337, %338) /* ty=(Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) */;
  %340 = cast(%var_13658, dtype="bool") /* ty=Tensor[(720), bool] */;
  %341 = cast(%var_13657, dtype="bool") /* ty=Tensor[(192, 1), bool] */;
  %342 = %332.0;
  %343 = %339.2;
  %344 = greater(%340, %341) /* ty=Tensor[(192, 720), bool] */;
  (%342, %343, %var_13656, %344)
}

def @func_10791() -> (Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) {
  %345 = cast(meta[relay.Constant][16] /* ty=Tensor[(720, 1), int32] */, dtype="float64") /* ty=Tensor[(720, 1), float64] */;
  %346 = cast(meta[relay.Constant][17] /* ty=Tensor[(720, 10), int32] */, dtype="float64") /* ty=Tensor[(720, 10), float64] */;
  %347 = cast(meta[relay.Constant][16] /* ty=Tensor[(720, 1), int32] */, dtype="int32") /* ty=Tensor[(720, 1), int32] */;
  %348 = reshape(%347, newshape=[12, 60]) /* ty=Tensor[(12, 60), int32] */;
  %349 = @func_10210(%348) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(12, 60), int32]) */;
  %350 = %349.1;
  %351 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  %352 = cast(%351, dtype="int64") /* ty=Tensor[(13, 7, 8), int64] */;
  %353 = shape_of(%350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%350, dtype="int64") /* ty=Tensor[(13, 7, 8), int64] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %356 = power(%345, %346) /* ty=Tensor[(720, 10), float64] */;
  %357 = bitwise_and(%354, %355) /* ty=Tensor[(13, 7, 8), int64] */;
  (%356, %357)
}

def @func_20694() -> (Tensor[(13, 7, 8), float32],) {
  %358 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  (%358,)
}

def @func_8643() -> Tensor[(13, 7, 8), float32] {
  %359 = @func_6266() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %359.0
}

def @func_9916() -> Tensor[(13, 7, 8), float32] {
  %360 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %360.0
}

def @func_607(%var_574: Tensor[(8, 6, 15), int32], %var_595: Tensor[(14), float32]) -> (Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) {
  %361 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 6, 15), int32] */, dtype="int32") /* ty=Tensor[(8, 6, 15), int32] */;
  %362 = shape_of(%var_574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_574, dtype="int32") /* ty=Tensor[(8, 6, 15), int32] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %365 = cast(%var_574, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
  %366 = cast(%var_595, dtype="float32") /* ty=Tensor[(14), float32] */;
  %367 = reshape(%366, newshape=[1, 7, 2]) /* ty=Tensor[(1, 7, 2), float32] */;
  %368 = @func_428(%367) /* ty=(Tensor[(1, 7, 2), float32],) */;
  %369 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %370 = cast(meta[relay.Constant][19] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %371 = reshape(%369, newshape=[]) /* ty=int64 */;
  %372 = reshape(%370, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %373 = @func_203(%371, %372) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %374 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %375 = cast(meta[relay.Constant][19] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %376 = reshape(%374, newshape=[]) /* ty=int64 */;
  %377 = reshape(%375, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %378 = @func_203(%376, %377) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %379 = bitwise_xor(%363, %364) /* ty=Tensor[(8, 6, 15), int32] */;
  %380 = atan(%365) /* ty=Tensor[(8, 6, 15), float32] */;
  %381 = %368.0;
  %382 = %373.0;
  %383 = %378.0;
  (%379, %380, %381, %var_595, %382, 5 /* ty=int64 */, meta[relay.Constant][19] /* ty=Tensor[(192), int64] */, %383)
}

def @func_9867() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool]) {
  %384 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %385 = @func_8251() /* ty=(Tensor[(13, 7, 8), bool],) */;
  %386 = %384.0;
  %387 = %385.0;
  (%386, %387)
}

def @main(%var_22018: Tensor[(192, 12), int64]) -> Tensor[(192, 12), float64] {
  %388 = @func_18642() /* ty=Tensor[(192, 1), int64] */;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %390 = cast(%var_22018, dtype="float64") /* ty=Tensor[(192, 12), float64] */;
  floor_mod(%389, %390) /* ty=Tensor[(192, 12), float64] */
}

def @func_17437() -> Tensor[(13, 7, 8), float32] {
  %391 = @func_15177() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %391.0
}

def @func_9024(%var_8993: Tensor[(9, 4, 8), float32]) -> Tensor[(9, 4, 8), float32] {
  %392 = cast(%var_8993, dtype="float32") /* ty=Tensor[(9, 4, 8), float32] */;
  %393 = rsqrt(%392) /* ty=Tensor[(9, 4, 8), float32] */;
  %394 = cast(%393, dtype="float32") /* ty=Tensor[(9, 4, 8), float32] */;
  sin(%394) /* ty=Tensor[(9, 4, 8), float32] */
}

def @func_17443() -> (Tensor[(13, 7, 8), float32],) {
  %395 = @func_8819() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %396 = %395.0;
  (%396,)
}

def @func_14130() -> Tensor[(1, 8, 6), float64] {
  %397 = @func_6370() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %397.0
}

def @func_18246() -> (Tensor[(13, 7, 8), float32],) {
  %398 = @func_10647() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %399 = %398.0;
  (%399,)
}

def @func_20075() -> (Tensor[(13, 7, 8), float32],) {
  %400 = @func_12925() /* ty=Tensor[(13, 7, 8), float32] */;
  (%400,)
}

def @func_9560() -> (Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) {
  %401 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %402 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 90), int64] */, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %403 = reshape(%402, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %404 = @func_8310(%403) /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(1, 8, 6), float64], Tensor[(270), int64]) */;
  %405 = %401.0;
  %406 = %404.4;
  (%405, %406, meta[relay.Constant][20] /* ty=Tensor[(3, 90), int64] */)
}

def @func_21378() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %407 = @func_20166() /* ty=(Tensor[(270), int64], Tensor[(13, 7, 8), float32]) */;
  %408 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %409 = %407.1;
  %410 = %408.0;
  (%409, %410)
}

def @func_15932() -> (Tensor[(192, 48), float32],) {
  %411 = @func_15591() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) */;
  %412 = %411.1;
  %413 = @func_11742() /* ty=Tensor[(192, 1), int64] */;
  %414 = cast(%412, dtype="float32") /* ty=Tensor[(48), float32] */;
  %415 = cast(%413, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %416 = power(%414, %415) /* ty=Tensor[(192, 48), float32] */;
  (%416,)
}

def @func_12348() -> (Tensor[(13, 7, 8), float32],) {
  %417 = @func_8979() /* ty=Tensor[(13, 7, 8), float32] */;
  (%417,)
}

def @func_12375() -> Tensor[(13, 7, 8), float32] {
  %418 = @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %418.2
}

def @func_5634(%var_5631: Tensor[(270), int64], %var_5632: Tensor[(2, 48), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(270), int64], Tensor[(2, 48), float32]) {
  %419 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %420 = cast(%var_5631, dtype="int64") /* ty=Tensor[(270), int64] */;
  %421 = cast(%var_5632, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %422 = reshape(%420, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %423 = reshape(%421, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %424 = @func_3580(%422, %423) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
  %425 = %419.0;
  %426 = %424.1;
  (%425, %426, %var_5631, %var_5632)
}

def @func_8041() -> (Tensor[(13, 7, 8), float32],) {
  %427 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
  %428 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%427, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %432 = divide(%430, %431) /* ty=Tensor[(13, 7, 8), float32] */;
  (%432,)
}

def @func_7970() -> Tensor[(1, 8, 6), float64] {
  %433 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %433.1
}

def @func_12864(%var_12846: Tensor[(3, 6), float32]) -> (Tensor[(1, 8, 6), float64], Tensor[(?, 3, 6), bool], Tensor[(3, 6), float32]) {
  %434 = cast(%var_12846, dtype="float32") /* ty=Tensor[(3, 6), float32] */;
  %435 = reshape(%434, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %436 = @func_8057() /* ty=Tensor[(1, 8, 6), float64] */;
  %437 = @func_9128(%435) /* ty=Tensor[(?, 3, 6), bool] */;
  (%436, %437, %var_12846)
}

def @func_16162() -> Tensor[(13, 7, 8), int64] {
  %438 = @func_10791() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */;
  %438.1
}

def @func_12232() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %439 = @func_9945() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %440 = %439.0;
  %441 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
  %442 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
  (%440, %441, %442)
}

def @func_8057() -> Tensor[(1, 8, 6), float64] {
  @func_7970() /* ty=Tensor[(1, 8, 6), float64] */
}

def @func_18730(%var_18686: Tensor[(990), int64]) -> (Tensor[(13, 7, 8), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(1, 28), float32], Tensor[(1, 7, 2), float32], Tensor[(990), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %443 = @func_14992() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), int64]) */;
  %444 = cast(meta[relay.Constant][22] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %445 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 28), float32] */, dtype="float32") /* ty=Tensor[(1, 28), float32] */;
  %446 = reshape(%444, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %447 = reshape(%445, newshape=[1, 28]) /* ty=Tensor[(1, 28), float32] */;
  %448 = @func_6582(%446, %447) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) */;
  %449 = cast(%var_18686, dtype="int64") /* ty=Tensor[(990), int64] */;
  %450 = cast(%var_18686, dtype="int64") /* ty=Tensor[(990), int64] */;
  %451 = reshape(%449, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), int64] */;
  %452 = reshape(%450, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), int64] */;
  %453 = @func_5172(%451, %452) /* ty=(Tensor[(15, 6, 11), int64], Tensor[(1, 7, 2), float32], Tensor[(14), float32]) */;
  %454 = @func_10681() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %455 = %443.1;
  %456 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  %457 = @func_9157() /* ty=Tensor[(13, 7, 8), float32] */;
  %458 = %448.6;
  %459 = %453.1;
  %460 = @func_18426() /* ty=Tensor[(13, 7, 8), float32] */;
  %461 = %454.0;
  (%455, %456, %457, %458, meta[relay.Constant][22] /* ty=Tensor[(192), int64] */, meta[relay.Constant][23] /* ty=Tensor[(1, 28), float32] */, %459, %var_18686, %460, %461)
}

def @func_19600() -> (Tensor[(13, 7, 8), float32],) {
  %462 = @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %463 = %462.0;
  (%463,)
}

def @func_8586() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %464 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %465 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %466 = %464.0;
  %467 = %465.0;
  (%466, %467)
}

def @func_8153(%var_8143: Tensor[(2, 8, 6), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %468 = @func_6741() /* ty=Tensor[(1, 8, 6), float64] */;
  %469 = cast(%468, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %470 = cast(%var_8143, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
  %471 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %472 = power(%469, %470) /* ty=Tensor[(2, 8, 6), float64] */;
  %473 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  (%471, %472, %473)
}

def @func_18426() -> Tensor[(13, 7, 8), float32] {
  %474 = @func_10980() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %474.0
}

def @func_19780(%var_19775: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(270), int64], Tensor[(4, 24), float32]) {
  %475 = @func_11891() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %476 = @func_17921() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */;
  %477 = @func_12897() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %478 = cast(%var_19775, dtype="int64") /* ty=Tensor[(270), int64] */;
  %479 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 24), float32] */, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %480 = reshape(%478, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
  %481 = reshape(%479, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %482 = @func_5258(%480, %481) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) */;
  %483 = %475.0;
  %484 = %476.1;
  %485 = %477.0;
  %486 = %482.2;
  (%483, %484, %485, %486, %var_19775, meta[relay.Constant][24] /* ty=Tensor[(4, 24), float32] */)
}

def @func_17092() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %487 = @func_6741() /* ty=Tensor[(1, 8, 6), float64] */;
  %488 = @func_11195() /* ty=Tensor[(13, 7, 8), float32] */;
  (%487, %488)
}

def @func_11925() -> (Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) {
  %489 = @func_9867() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool]) */;
  %490 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %491 = %489.0;
  %492 = @func_7620() /* ty=Tensor[(528), float32] */;
  %493 = %490.0;
  (%491, %492, %493)
}

def @func_16102() -> (Tensor[(4, 6, 15), float64], Tensor[(13, 7, 8), float32]) {
  %494 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 15), float64] */;
  %495 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(4, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 15), float64] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %498 = power(%496, %497) /* ty=Tensor[(4, 6, 15), float64] */;
  %499 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  (%498, %499)
}

def @func_6582(%var_6518: Tensor[(192), int64], %var_6536: Tensor[(1, 28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) {
  %500 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 90), int64] */, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %501 = cast(meta[relay.Constant][28] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %502 = reshape(%500, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %503 = reshape(%501, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %504 = @func_3580(%502, %503) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
  %505 = cast(meta[relay.Constant][29] /* ty=Tensor[(260, 1), float32] */, dtype="float32") /* ty=Tensor[(260, 1), float32] */;
  %506 = cast(%var_6518, dtype="int64") /* ty=Tensor[(192), int64] */;
  %507 = cast(meta[relay.Constant][28] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %508 = reshape(%505, newshape=[13, 2, 10]) /* ty=Tensor[(13, 2, 10), float32] */;
  %509 = reshape(%506, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %510 = reshape(%507, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %511 = @func_6174(%508, %509, %510) /* ty=(Tensor[(13, 2, 10), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %512 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %513 = cast(%var_6536, dtype="float32") /* ty=Tensor[(1, 28), float32] */;
  %514 = reshape(%513, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %515 = @func_5125(%514) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) */;
  %516 = cast(%var_6536, dtype="uint32") /* ty=Tensor[(1, 28), uint32] */;
  %517 = cast(meta[relay.Constant][29] /* ty=Tensor[(260, 1), float32] */, dtype="uint32") /* ty=Tensor[(260, 1), uint32] */;
  %518 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %519 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %520 = %504.1;
  %521 = %511.3;
  %522 = %512.0;
  %523 = %515.1;
  %524 = left_shift(%516, %517) /* ty=Tensor[(260, 28), uint32] */;
  %525 = %518.2;
  (%519, %520, meta[relay.Constant][27] /* ty=Tensor[(3, 90), int64] */, meta[relay.Constant][28] /* ty=Tensor[(96), float32] */, %521, %var_6518, %522, %523, %524, %525)
}

def @func_7620() -> Tensor[(528), float32] {
  %526 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %526.1
}

def @func_14848() -> Tensor[(13, 7, 8), float32] {
  %527 = @func_12609() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %527.0
}

def @func_14612() -> Tensor[(13, 7, 8), float32] {
  %528 = @func_13532() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %528.0
}

def @func_15426() -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64]) {
  %529 = @func_13983() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %530 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %531 = %529.1;
  %532 = %530.3;
  (%531, %532)
}

def @func_17197() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %533 = @func_8586() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %534 = @func_14721() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %535 = @func_8057() /* ty=Tensor[(1, 8, 6), float64] */;
  %536 = %533.0;
  %537 = %534.0;
  (%535, %536, %537)
}

def @func_18583() -> (Tensor[(728), float32], Tensor[(28), float32], Tensor[(16, ?, 12), float64]) {
  %538 = cast(meta[relay.Constant][30] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %539 = cast(meta[relay.Constant][31] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %540 = reshape(%538, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %541 = reshape(%539, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %542 = @func_7686(%540, %541) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], Tensor[(720), int32]) */;
  %543 = %542.1;
  %544 = @func_8774() /* ty=(Tensor[(192), int64],) */;
  %545 = %544.0;
  %546 = cast(%545, dtype="float64") /* ty=Tensor[(192), float64] */;
  %547 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%543, dtype="float64") /* ty=Tensor[(16, 1, 12), float64] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %550 = divide(%548, %549) /* ty=Tensor[(16, ?, 12), float64] */;
  (meta[relay.Constant][30] /* ty=Tensor[(728), float32] */, meta[relay.Constant][31] /* ty=Tensor[(28), float32] */, %550)
}

def @func_21998(%var_21952: Tensor[(588), uint8]) -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(384, 8), uint16], Tensor[(13, 7, 8), float32], Tensor[(588), uint8], Tensor[(13, 7, 8), float32], Tensor[(192, 16), float64]) {
  %551 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %552 = @func_10399() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %553 = cast(meta[relay.Constant][32] /* ty=Tensor[(384, 8), int64] */, dtype="int64") /* ty=Tensor[(384, 8), int64] */;
  %554 = reshape(%553, newshape=[192, 16]) /* ty=Tensor[(192, 16), int64] */;
  %555 = @func_14836(%554) /* ty=(Tensor[(192, 16), float32], Tensor[(192, 16), bool]) */;
  %556 = %555.1;
  %557 = cast(%556, dtype="uint16") /* ty=Tensor[(192, 16), uint16] */;
  %558 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(384, 8), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %559 = cast(meta[relay.Constant][32] /* ty=Tensor[(384, 8), int64] */, dtype="uint16") /* ty=Tensor[(384, 8), uint16] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %561 = cast(%var_21952, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %562 = reshape(%561, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), uint8] */;
  %563 = @func_19834(%562) /* ty=(Tensor[(7, 7, 12), uint8], Tensor[(13, 7, 8), float32], Tensor[(7, 7, 12), int16]) */;
  %564 = @func_11238() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %565 = cast(meta[relay.Constant][32] /* ty=Tensor[(384, 8), int64] */, dtype="float64") /* ty=Tensor[(384, 8), float64] */;
  %566 = shape_of(%556, dtype="int32") /* ty=Tensor[(2), int32] */;
  %567 = cast(%556, dtype="float64") /* ty=Tensor[(192, 16), float64] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %569 = @func_6258() /* ty=Tensor[(13, 7, 8), float32] */;
  %570 = %551.3;
  %571 = %552.0;
  %572 = right_shift(%559, %560) /* ty=Tensor[(384, 8), uint16] */;
  %573 = %563.1;
  %574 = %564.1;
  %575 = floor_mod(%567, %568) /* ty=Tensor[(192, 16), float64] */;
  (%569, %570, %571, %572, %573, %var_21952, %574, %575)
}

def @func_20412() -> Tensor[(13, 7, 8), float32] {
  %576 = @func_16946() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %576.0
}

def @func_16726() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %577 = @func_14130() /* ty=Tensor[(1, 8, 6), float64] */;
  %578 = @func_6258() /* ty=Tensor[(13, 7, 8), float32] */;
  (%577, %578)
}

def @func_9044() -> (Tensor[(13, 7, 8), float32],) {
  %579 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %580 = %579.0;
  (%580,)
}

def @func_14245() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %581 = @func_8819() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %582 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %583 = %581.0;
  %584 = %582.0;
  %585 = @func_13687() /* ty=Tensor[(13, 7, 8), float32] */;
  %586 = @func_9157() /* ty=Tensor[(13, 7, 8), float32] */;
  (%583, %584, %585, %586)
}

def @func_10232() -> (Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) {
  %587 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %588 = cast(meta[relay.Constant][33] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %589 = cast(meta[relay.Constant][33] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %590 = reshape(%588, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %591 = reshape(%589, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %592 = %587.0;
  %593 = @func_3603(%590, %591) /* ty=Tensor[(16, 3, 11), float32] */;
  (%592, %593, meta[relay.Constant][33] /* ty=Tensor[(528), float32] */)
}

def @func_18642() -> Tensor[(192, 1), int64] {
  @func_11742() /* ty=Tensor[(192, 1), int64] */
}

def @func_16946() -> (Tensor[(13, 7, 8), float32],) {
  %594 = @func_12312() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %595 = %594.2;
  (%595,)
}

def @func_20544() -> Tensor[(13, 7, 8), float32] {
  @func_14386() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_6418() -> Tensor[(13, 7, 8), float32] {
  %596 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %596.0
}

def @func_17723() -> Tensor[(13, 7, 8), float32] {
  @func_4693() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_11416(%var_11405: Tensor[(10, 10, 5), int64], %var_11406: Tensor[(10, 10, 5), int64]) -> (Tensor[(10, 10, 5), bool],) {
  %597 = cast(%var_11406, dtype="bool") /* ty=Tensor[(10, 10, 5), bool] */;
  %598 = shape_of(%var_11405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_11405, dtype="bool") /* ty=Tensor[(10, 10, 5), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = less(%599, %600) /* ty=Tensor[(10, 10, 5), bool] */;
  (%601,)
}

def @func_19744() -> (Tensor[(13, 7, 8), float32],) {
  %602 = @func_8979() /* ty=Tensor[(13, 7, 8), float32] */;
  (%602,)
}

def @func_18176() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %603 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %604 = %603.0;
  %605 = @func_17723() /* ty=Tensor[(13, 7, 8), float32] */;
  (%604, %605)
}

def @func_5316() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) {
  %606 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %607 = cast(meta[relay.Constant][34] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %608 = reshape(%606, newshape=[]) /* ty=bool */;
  %609 = reshape(%607, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
  %610 = @func_2307(%608, %609) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
  %611 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
  %612 = %610.1;
  (%611, %612, True /* ty=bool */, meta[relay.Constant][34] /* ty=Tensor[(48), bool] */)
}

def @func_6370() -> (Tensor[(1, 8, 6), float64],) {
  %613 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %614 = %613.1;
  (%614,)
}

def @func_17908() -> Tensor[(13, 7, 8), float32] {
  @func_13687() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_4977(%var_4965: Tensor[(48), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) {
  %615 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %616 = cast(%var_4965, dtype="bool") /* ty=Tensor[(48), bool] */;
  %617 = reshape(%615, newshape=[]) /* ty=bool */;
  %618 = reshape(%616, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
  %619 = @func_2307(%617, %618) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
  %620 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %621 = %619.1;
  (%620, %621, False /* ty=bool */, %var_4965)
}

def @func_9542() -> (bool,) {
  %622 = @func_7488() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) */;
  %623 = %622.2;
  (%623,)
}

def @func_14182(%var_14178: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32]) {
  %624 = @func_11351() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %625 = %624.0;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %627 = cast(%var_14178, dtype="float32") /* ty=Tensor[(28), float32] */;
  %628 = reshape(%626, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %629 = reshape(%627, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %630 = @func_7686(%628, %629) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], Tensor[(720), int32]) */;
  %631 = %630.3;
  (%625, %631, %var_14178)
}

def @func_14147() -> (Tensor[(13, 7, 8), float32],) {
  %632 = @func_10557() /* ty=Tensor[(13, 7, 8), float32] */;
  (%632,)
}

def @func_4830() -> (Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(6, 15, 3), int64]) {
  %633 = cast(meta[relay.Constant][35] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %634 = cast(meta[relay.Constant][36] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %635 = reshape(%633, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %636 = reshape(%634, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %637 = @func_4618(%635, %636) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %638 = cast(meta[relay.Constant][35] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %639 = %637.3;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(96), float32] */;
  %641 = reshape(%638, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %642 = reshape(%640, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %643 = @func_3580(%641, %642) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
  %644 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %645 = %643.0;
  (%644, %639, meta[relay.Constant][35] /* ty=Tensor[(270), int64] */, meta[relay.Constant][36] /* ty=Tensor[(96), float32] */, %645)
}

def @func_7499() -> Tensor[(13, 7, 8), float32] {
  %646 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %646.0
}

def @func_6876(%var_6867: Tensor[(1, 270), int64]) -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) {
  %647 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %649 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %650 = cast(%var_6867, dtype="int64") /* ty=Tensor[(1, 270), int64] */;
  %651 = cast(meta[relay.Constant][37] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %652 = reshape(%650, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
  %653 = reshape(%651, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %654 = @func_5258(%652, %653) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) */;
  %655 = cast(%var_6867, dtype="int64") /* ty=Tensor[(1, 270), int64] */;
  %656 = cast(meta[relay.Constant][37] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %657 = reshape(%655, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %658 = reshape(%656, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %659 = @func_4618(%657, %658) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %660 = @func_6741() /* ty=Tensor[(1, 8, 6), float64] */;
  %661 = atanh(%648) /* ty=Tensor[(13, 7, 8), float64] */;
  %662 = %649.0;
  %663 = %654.1;
  %664 = %659.0;
  (%660, %661, %662, %663, %var_6867, meta[relay.Constant][37] /* ty=Tensor[(96), float32] */, %664)
}

def @func_3580(%var_3561: Tensor[(6, 15, 3), int64], %var_3576: Tensor[(2, 48), float32]) -> (Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) {
  %665 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %666 = cast(%var_3561, dtype="int64") /* ty=Tensor[(6, 15, 3), int64] */;
  %667 = cast(meta[relay.Constant][38] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %668 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %669 = reshape(%667, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %670 = reshape(%668, newshape=[]) /* ty=int64 */;
  %671 = @func_2704(%669, %670) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %672 = cast(%var_3576, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
  %673 = reshape(%672, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), float32] */;
  %674 = @func_3260(%673) /* ty=(Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) */;
  %675 = left_shift(%665, %666) /* ty=Tensor[(6, 15, 3), int64] */;
  %676 = %671.5;
  %677 = %674.0;
  (%675, %676, meta[relay.Constant][38] /* ty=Tensor[(28), float32] */, %677, %var_3576)
}

def @func_11318(%var_11280: Tensor[(96), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(96), float64], bool, Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
  %678 = @func_7278() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %679 = cast(%var_11280, dtype="float64") /* ty=Tensor[(96), float64] */;
  %680 = reshape(%679, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %681 = @func_8210(%680) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64]) */;
  %682 = @func_9542() /* ty=(bool,) */;
  %683 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %684 = %683.5;
  %685 = cast(%684, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %686 = @func_8327() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) */;
  %687 = %678.1;
  %688 = %681.2;
  %689 = %682.0;
  %690 = log2(%685) /* ty=Tensor[(13, 7, 8), float64] */;
  %691 = %686.1;
  (%687, %688, %var_11280, %689, %690, %691)
}

def @func_4429() -> Tensor[(13, 7, 8), float32] {
  %692 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  sin(%692) /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_19652() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(48), bool]) {
  %693 = @func_16946() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %694 = @func_15863() /* ty=(Tensor[(48), bool],) */;
  %695 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %696 = %693.0;
  %697 = @func_7197() /* ty=Tensor[(48), bool] */;
  %698 = %694.0;
  (%695, %696, %697, %698)
}

def @func_17135() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %699 = @func_16515() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */;
  %700 = @func_14245() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %701 = %699.0;
  %702 = %700.3;
  (%701, %702)
}

def @func_19834(%var_19830: Tensor[(7, 7, 12), uint8]) -> (Tensor[(7, 7, 12), uint8], Tensor[(13, 7, 8), float32], Tensor[(7, 7, 12), int16]) {
  %703 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="uint8") /* ty=Tensor[(7, 7, 12), uint8] */;
  %704 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="uint8") /* ty=Tensor[(7, 7, 12), uint8] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %707 = cast(%var_19830, dtype="int16") /* ty=Tensor[(7, 7, 12), int16] */;
  %708 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="int16") /* ty=Tensor[(7, 7, 12), int16] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %711 = logical_xor(%705, %706) /* ty=Tensor[(7, 7, 12), uint8] */;
  %712 = @func_14848() /* ty=Tensor[(13, 7, 8), float32] */;
  %713 = bitwise_and(%709, %710) /* ty=Tensor[(7, 7, 12), int16] */;
  (%711, %712, %713)
}

def @func_14992() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), int64]) {
  %714 = @func_10791() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */;
  %715 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %716 = %714.1;
  (%715, %716)
}

def @func_4618(%var_4609: Tensor[(270), int64], %var_4610: Tensor[(96), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) {
  %717 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %718 = cast(%var_4609, dtype="int64") /* ty=Tensor[(270), int64] */;
  %719 = cast(%var_4610, dtype="float32") /* ty=Tensor[(96), float32] */;
  %720 = reshape(%718, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %721 = reshape(%719, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %722 = @func_3580(%720, %721) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
  %723 = %717.0;
  %724 = %722.4;
  (%723, %724, %var_4609, %var_4610)
}

def @func_14048() -> Tensor[(13, 7, 8), float32] {
  %725 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %725.0
}

def @func_10621() -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %726 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %727 = @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */;
  %728 = %726.2;
  %729 = %727.0;
  %730 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  (%728, %729, %730)
}

def @func_15863() -> (Tensor[(48), bool],) {
  %731 = @func_9308() /* ty=Tensor[(48), bool] */;
  (%731,)
}

def @func_9271(%var_9261: Tensor[(13, 7, 8), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(13, 7, 8), float64]) {
  %732 = @func_8774() /* ty=(Tensor[(192), int64],) */;
  %733 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %735 = log(%734) /* ty=Tensor[(13, 7, 8), float32] */;
  %736 = cast(%var_9261, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %740 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %741 = @func_7970() /* ty=Tensor[(1, 8, 6), float64] */;
  %742 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  %743 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  %744 = %732.0;
  %745 = minimum(%738, %739) /* ty=Tensor[(13, 7, 8), float64] */;
  (%740, %741, %742, %743, %744, %745)
}

def @func_2257(%var_2208: int64, %var_2209: Tensor[(192), int64], %var_2254: Tensor[(720), int32]) -> (Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) {
  %746 = cast(%var_2208, dtype="int64") /* ty=int64 */;
  %747 = cast(%var_2209, dtype="int64") /* ty=Tensor[(192), int64] */;
  %748 = reshape(%746, newshape=[]) /* ty=int64 */;
  %749 = reshape(%747, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %750 = @func_203(%748, %749) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %751 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 1, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 1, 12), float64] */;
  %752 = asin(%751) /* ty=Tensor[(6, 1, 12), float64] */;
  %753 = cast(%752, dtype="float32") /* ty=Tensor[(6, 1, 12), float32] */;
  %754 = sin(%753) /* ty=Tensor[(6, 1, 12), float32] */;
  %755 = cast(%754, dtype="float64") /* ty=Tensor[(6, 1, 12), float64] */;
  %756 = cast(%var_2208, dtype="int64") /* ty=int64 */;
  %757 = %750.0;
  %758 = cast(%757, dtype="int64") /* ty=Tensor[(16, 1, 12), int64] */;
  %759 = reshape(%756, newshape=[]) /* ty=int64 */;
  %760 = reshape(%758, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %761 = @func_203(%759, %760) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %762 = cast(%754, dtype="float32") /* ty=Tensor[(6, 1, 12), float32] */;
  %763 = cast(%var_2254, dtype="int32") /* ty=Tensor[(720), int32] */;
  %764 = cast(meta[relay.Constant][43] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %765 = reshape(%763, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), int32] */;
  %766 = reshape(%764, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %767 = @func_607(%765, %766) /* ty=(Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) */;
  %768 = atanh(%755) /* ty=Tensor[(6, 1, 12), float64] */;
  %769 = %761.0;
  %770 = acosh(%762) /* ty=Tensor[(6, 1, 12), float32] */;
  %771 = %767.3;
  (%757, %var_2208, %var_2209, %768, %769, %770, %771, %var_2254, meta[relay.Constant][43] /* ty=Tensor[(14), float32] */)
}

def @func_12975() -> (Tensor[(13, 7, 8), float32],) {
  %772 = @func_12773() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(13, 7, 8), float32]) */;
  %773 = %772.4;
  (%773,)
}

def @func_7807(%var_7771: Tensor[(150), float64], %var_7802: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(24, 2), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(150), float64], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), bool], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32]) {
  %774 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %775 = cast(%var_7771, dtype="float64") /* ty=Tensor[(150), float64] */;
  %776 = reshape(%775, newshape=[10, 1, 15]) /* ty=Tensor[(10, 1, 15), float64] */;
  %777 = @func_5466(%776) /* ty=(Tensor[(10, 1, 15), float64], Tensor[(13, 7, 8), float32]) */;
  %778 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %779 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %780 = cast(meta[relay.Constant][44] /* ty=Tensor[(24, 2), bool] */, dtype="bool") /* ty=Tensor[(24, 2), bool] */;
  %781 = reshape(%779, newshape=[]) /* ty=bool */;
  %782 = reshape(%780, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
  %783 = @func_2307(%781, %782) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
  %784 = %783.1;
  %785 = cast(%784, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  %786 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %787 = cast(meta[relay.Constant][45] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %788 = cast(%var_7802, dtype="int32") /* ty=Tensor[(720), int32] */;
  %789 = reshape(%787, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %790 = reshape(%788, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %791 = @func_4804(%789, %790) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) */;
  %792 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
  %793 = %774.0;
  %794 = %777.1;
  %795 = %778.0;
  %796 = not_equal(%785, %786) /* ty=Tensor[(1, 8, 6), bool] */;
  %797 = %791.0;
  (%792, meta[relay.Constant][44] /* ty=Tensor[(24, 2), bool] */, %793, %794, %var_7771, %795, %796, %797, meta[relay.Constant][45] /* ty=Tensor[(28), float32] */, %var_7802)
}

def @func_10294() -> (Tensor[(13, 7, 8), float32],) {
  %798 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %799 = %798.0;
  (%799,)
}

def @func_20865(%var_20851: Tensor[(1, 363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(1, 363), bool], Tensor[(13, 7, 8), float32]) {
  %800 = @func_20075() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %801 = cast(%var_20851, dtype="bool") /* ty=Tensor[(1, 363), bool] */;
  %802 = cast(%var_20851, dtype="bool") /* ty=Tensor[(1, 363), bool] */;
  %803 = reshape(%801, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), bool] */;
  %804 = reshape(%802, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), bool] */;
  %805 = %800.0;
  %806 = @func_7725(%803, %804) /* ty=Tensor[(11, 3, 11), bool] */;
  %807 = @func_15818() /* ty=Tensor[(13, 7, 8), float32] */;
  (%805, %806, %var_20851, %807)
}

def @func_10980() -> (Tensor[(13, 7, 8), float32],) {
  %808 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  (%808,)
}

def @func_19693() -> (Tensor[(13, 7, 8), float32],) {
  %809 = @func_12232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %810 = %809.2;
  (%810,)
}

def @func_6051() -> (Tensor[(13, 7, 8), float32],) {
  %811 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  (%811,)
}

def @func_5717() -> Tensor[(13, 7, 8), float32] {
  %812 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %812.0
}

def @func_16043(%var_16011: int64, %var_16012: Tensor[(14, 8, 2), int64], %var_16020: Tensor[(18), float32]) -> (Tensor[(14, 8, 2), bool], Tensor[(?, 3, 6), bool], Tensor[(18), float32], bool, Tensor[(13, 7, 8), float32]) {
  %813 = cast(%var_16011, dtype="bool") /* ty=bool */;
  %814 = cast(%var_16012, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %815 = cast(%var_16020, dtype="float32") /* ty=Tensor[(18), float32] */;
  %816 = reshape(%815, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %817 = @func_9542() /* ty=(bool,) */;
  %818 = @func_12897() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %819 = greater(%813, %814) /* ty=Tensor[(14, 8, 2), bool] */;
  %820 = @func_9128(%816) /* ty=Tensor[(?, 3, 6), bool] */;
  %821 = %817.0;
  %822 = %818.0;
  (%819, %820, %var_16020, %821, %822)
}

def @func_17366() -> (Tensor[(1, 8, 6), float64],) {
  %823 = @func_17197() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %824 = %823.0;
  (%824,)
}

def @func_21433(%var_21428: Tensor[(10, 7, 10), int64], %var_21429: Tensor[(10, 7, 10), int64]) -> (Tensor[(10, 7, 10), int64],) {
  %825 = cast(%var_21429, dtype="int64") /* ty=Tensor[(10, 7, 10), int64] */;
  %826 = shape_of(%var_21428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%var_21428, dtype="int64") /* ty=Tensor[(10, 7, 10), int64] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %829 = subtract(%827, %828) /* ty=Tensor[(10, 7, 10), int64] */;
  (%829,)
}

def @func_12609() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %830 = @func_10498() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %831 = @func_7188() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %832 = %830.0;
  %833 = %831.0;
  (%832, %833)
}

def @func_11755() -> Tensor[(13, 7, 8), float32] {
  %834 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %834.0
}

def @func_21841() -> (Tensor[(13, 7, 8), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) {
  %835 = @func_17262() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(?, 9, 14), float32]) */;
  %836 = @func_14147() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %837 = cast(meta[relay.Constant][46] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %838 = cast(meta[relay.Constant][47] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %839 = reshape(%837, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
  %840 = reshape(%838, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %841 = @func_5258(%839, %840) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) */;
  %842 = cast(meta[relay.Constant][48] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %843 = cast(meta[relay.Constant][48] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %844 = reshape(%842, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %845 = reshape(%843, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %846 = @func_16162() /* ty=Tensor[(13, 7, 8), int64] */;
  %847 = %835.0;
  %848 = %836.0;
  %849 = %841.0;
  %850 = @func_3603(%844, %845) /* ty=Tensor[(16, 3, 11), float32] */;
  (%846, %847, %848, %849, meta[relay.Constant][46] /* ty=Tensor[(270), int64] */, meta[relay.Constant][47] /* ty=Tensor[(96), float32] */, %850, meta[relay.Constant][48] /* ty=Tensor[(528), float32] */)
}

def @func_11351() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %851 = @func_7488() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) */;
  %852 = @func_10898() /* ty=Tensor[(13, 7, 8), float32] */;
  %853 = %851.3;
  (%852, %853)
}

def @func_5374() -> (Tensor[(13, 7, 8), float32],) {
  %854 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %855 = %854.0;
  (%855,)
}

def @func_11682() -> bool {
  %856 = @func_9542() /* ty=(bool,) */;
  %856.0
}

def @func_4471() -> (Tensor[(13, 7, 8), float32],) {
  %857 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  (%857,)
}

def @func_21211() -> Tensor[(13, 7, 8), float32] {
  %858 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %858.0
}

def @func_18205() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) {
  %859 = @func_17366() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %860 = @func_15232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %861 = %859.0;
  %862 = %860.3;
  %863 = @func_6311() /* ty=Tensor[(13, 7, 8), float64] */;
  (%861, %862, %863)
}

def @func_6897() -> Tensor[(13, 7, 8), float32] {
  %864 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %864.0
}

def @func_15527() -> Tensor[(13, 7, 8), float32] {
  %865 = @func_10621() /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %865.2
}

def @func_10681() -> (Tensor[(13, 7, 8), float32],) {
  %866 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  (%866,)
}

def @func_13717() -> Tensor[(13, 7, 8), float32] {
  %867 = @func_8586() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %867.0
}

def @func_15632() -> (Tensor[(48), bool],) {
  %868 = @func_15591() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) */;
  %869 = %868.1;
  (%869,)
}

def @func_16212(%var_16202: Tensor[(7, 4), float32], %var_16203: Tensor[(720, 1), int32]) -> (bool, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(7, 4), float32], Tensor[(720, 1), int32]) {
  %870 = @func_9542() /* ty=(bool,) */;
  %871 = @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %872 = cast(%var_16202, dtype="float32") /* ty=Tensor[(7, 4), float32] */;
  %873 = cast(%var_16203, dtype="int32") /* ty=Tensor[(720, 1), int32] */;
  %874 = reshape(%872, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %875 = reshape(%873, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %876 = @func_7361(%874, %875) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */;
  %877 = %870.0;
  %878 = %871.2;
  %879 = %876.0;
  (%877, %878, %879, %var_16202, %var_16203)
}

def @func_7488() -> (Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) {
  %880 = @func_6370() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %881 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %882 = %880.0;
  %883 = cast(%882, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  %884 = reshape(%881, newshape=[]) /* ty=bool */;
  %885 = reshape(%883, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
  %886 = @func_2307(%884, %885) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
  %887 = @func_6266() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %888 = %886.1;
  %889 = %887.0;
  (%882, %888, False /* ty=bool */, %889)
}

def @func_12522() -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
  %890 = @func_12312() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %891 = @func_6311() /* ty=Tensor[(13, 7, 8), float64] */;
  %892 = %890.0;
  (%891, %892)
}

def @func_20637() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %893 = @func_20544() /* ty=Tensor[(13, 7, 8), float32] */;
  %894 = @func_19384() /* ty=Tensor[(13, 7, 8), float32] */;
  (%893, %894)
}

def @func_11238() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %895 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %896 = %895.0;
  %897 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  (%896, %897)
}

def @func_20573() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %898 = @func_10621() /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %899 = @func_7112() /* ty=Tensor[(13, 7, 8), float32] */;
  %900 = %898.1;
  %901 = @func_16158() /* ty=Tensor[(13, 7, 8), float32] */;
  (%899, %900, %901)
}

def @func_6956(%var_6952: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], Tensor[(1, 9, 14), float64], Tensor[(126), float64]) {
  %902 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %903 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %904 = @func_6370() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %905 = cast(%var_6952, dtype="float64") /* ty=Tensor[(126), float64] */;
  %906 = reshape(%905, newshape=[1, 9, 14]) /* ty=Tensor[(1, 9, 14), float64] */;
  %907 = %902.0;
  %908 = %903.0;
  %909 = %904.0;
  %910 = @func_6741() /* ty=Tensor[(1, 8, 6), float64] */;
  %911 = @func_4754(%906) /* ty=Tensor[(1, 9, 14), float64] */;
  (%907, %908, %909, %910, %911, %var_6952)
}

def @func_203(%var_159: int64, %var_160: Tensor[(16, 1, 12), int64]) -> (Tensor[(16, 1, 12), int64],) {
  %912 = cast(%var_159, dtype="int64") /* ty=int64 */;
  %913 = cast(%var_160, dtype="int64") /* ty=Tensor[(16, 1, 12), int64] */;
  %914 = right_shift(%912, %913) /* ty=Tensor[(16, 1, 12), int64] */;
  (%914,)
}

def @func_13074() -> (Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(448), float32]) {
  %915 = @func_10232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) */;
  %916 = cast(meta[relay.Constant][49] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %917 = reshape(%916, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float32] */;
  %918 = @func_10485(%917) /* ty=(Tensor[(14, 8, 4), float32], Tensor[(13, 7, 8), float32]) */;
  %919 = %915.2;
  %920 = %918.1;
  (%919, %920, meta[relay.Constant][49] /* ty=Tensor[(448), float32] */)
}

def @func_4754(%var_4751: Tensor[(1, 9, 14), float64]) -> Tensor[(1, 9, 14), float64] {
  %921 = cast(%var_4751, dtype="float64") /* ty=Tensor[(1, 9, 14), float64] */;
  sigmoid(%921) /* ty=Tensor[(1, 9, 14), float64] */
}

def @func_10557() -> Tensor[(13, 7, 8), float32] {
  %922 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %922.0
}

def @func_11101() -> Tensor[(13, 7, 8), float32] {
  %923 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %923.0
}

def @func_12067() -> (bool, Tensor[(13, 7, 8), float32]) {
  %924 = @func_9542() /* ty=(bool,) */;
  %925 = @func_6266() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %926 = %924.0;
  %927 = %925.0;
  (%926, %927)
}

def @func_13889() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %928 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %929 = @func_7499() /* ty=Tensor[(13, 7, 8), float32] */;
  %930 = %928.0;
  (%929, %930)
}

def @func_6311() -> Tensor[(13, 7, 8), float64] {
  %931 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %932 = cast(%931, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  asinh(%932) /* ty=Tensor[(13, 7, 8), float64] */
}

def @func_14560(%var_14533: Tensor[(7, 1, 11), float64], %var_14541: int64, %var_14542: Tensor[(96, 2), int64], %var_14543: Tensor[(720), int32]) -> (int64, Tensor[(96, 2), int64], Tensor[(720), int32], Tensor[(7, 1, 11), uint64]) {
  %933 = cast(%var_14541, dtype="int64") /* ty=int64 */;
  %934 = cast(%var_14542, dtype="int64") /* ty=Tensor[(96, 2), int64] */;
  %935 = cast(%var_14543, dtype="int32") /* ty=Tensor[(720), int32] */;
  %936 = reshape(%933, newshape=[]) /* ty=int64 */;
  %937 = reshape(%934, newshape=[192, 1]) /* ty=Tensor[(192, 1), int64] */;
  %938 = reshape(%935, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %939 = @func_13667(%936, %937, %938) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], int64, Tensor[(192, 720), bool]) */;
  %940 = cast(%var_14533, dtype="float64") /* ty=Tensor[(7, 1, 11), float64] */;
  %941 = acos(%940) /* ty=Tensor[(7, 1, 11), float64] */;
  %942 = cast(%941, dtype="uint64") /* ty=Tensor[(7, 1, 11), uint64] */;
  %943 = cast(%var_14541, dtype="uint64") /* ty=uint64 */;
  %944 = %939.2;
  %945 = left_shift(%942, %943) /* ty=Tensor[(7, 1, 11), uint64] */;
  (%944, %var_14542, %var_14543, %945)
}

def @func_19010(%var_19004: Tensor[(16, 9, 12), float32]) -> Tensor[(16, 9, 12), float32] {
  %946 = cast(%var_19004, dtype="float32") /* ty=Tensor[(16, 9, 12), float32] */;
  sqrt(%946) /* ty=Tensor[(16, 9, 12), float32] */
}

def @func_17148() -> Tensor[(13, 7, 8), float32] {
  %947 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %947.0
}

def @func_14431(%var_14395: Tensor[(15, 5, 6), int8]) -> (Tensor[(15, 5, 6), uint32], Tensor[(15, 5, 6), float32], Tensor[(13, 7, 8), float32]) {
  %948 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 5, 6), int8] */, dtype="uint32") /* ty=Tensor[(15, 5, 6), uint32] */;
  %949 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(15, 5, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 5, 6), int8] */, dtype="uint32") /* ty=Tensor[(15, 5, 6), uint32] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %952 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 5, 6), int8] */, dtype="int8") /* ty=Tensor[(15, 5, 6), int8] */;
  %953 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(15, 5, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 5, 6), int8] */, dtype="int8") /* ty=Tensor[(15, 5, 6), int8] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %956 = subtract(%954, %955) /* ty=Tensor[(15, 5, 6), int8] */;
  %957 = cast(%var_14395, dtype="uint32") /* ty=Tensor[(15, 5, 6), uint32] */;
  %958 = shape_of(%956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%956, dtype="uint32") /* ty=Tensor[(15, 5, 6), uint32] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %961 = bitwise_or(%959, %960) /* ty=Tensor[(15, 5, 6), uint32] */;
  %962 = cast(%961, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %963 = @func_12348() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %964 = left_shift(%950, %951) /* ty=Tensor[(15, 5, 6), uint32] */;
  %965 = cosh(%962) /* ty=Tensor[(15, 5, 6), float32] */;
  %966 = %963.0;
  (%964, %965, %966)
}

def @func_14360(%var_14352: Tensor[(4, 15, 8), int32]) -> (Tensor[(4, 15, 8), int32], Tensor[(13, 7, 8), float32]) {
  %967 = cast(%var_14352, dtype="int32") /* ty=Tensor[(4, 15, 8), int32] */;
  %968 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(4, 15, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 15, 8), int32] */, dtype="int32") /* ty=Tensor[(4, 15, 8), int32] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %971 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %972 = right_shift(%969, %970) /* ty=Tensor[(4, 15, 8), int32] */;
  %973 = %971.0;
  (%972, %973)
}

def @func_10399() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %974 = @func_7112() /* ty=Tensor[(13, 7, 8), float32] */;
  %975 = @func_9982() /* ty=Tensor[(13, 7, 8), float32] */;
  (%974, %975)
}

def @func_3603(%var_3593: Tensor[(16, 3, 11), float32], %var_3594: Tensor[(16, 3, 11), float32]) -> Tensor[(16, 3, 11), float32] {
  %976 = cast(%var_3594, dtype="float32") /* ty=Tensor[(16, 3, 11), float32] */;
  %977 = shape_of(%var_3593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %978 = cast(%var_3593, dtype="float32") /* ty=Tensor[(16, 3, 11), float32] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%978, %979) /* ty=Tensor[(16, 3, 11), float32] */
}

def @func_7197() -> Tensor[(48), bool] {
  %980 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %980.2
}

def @func_10485(%var_10472: Tensor[(14, 8, 4), float32]) -> (Tensor[(14, 8, 4), float32], Tensor[(13, 7, 8), float32]) {
  %981 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 8, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
  %982 = shape_of(%var_10472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %983 = cast(%var_10472, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %985 = @func_8905() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %986 = power(%983, %984) /* ty=Tensor[(14, 8, 4), float32] */;
  %987 = %985.0;
  (%986, %987)
}

def @func_15942() -> bool {
  %988 = @func_9542() /* ty=(bool,) */;
  %988.0
}

def @func_21263() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  %989 = @func_8586() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %990 = @func_17197() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %991 = %989.1;
  %992 = %990.0;
  (%991, %992)
}

def @func_5898() -> (Tensor[(13, 7, 8), float32],) {
  %993 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %994 = %993.0;
  (%994,)
}

def @func_3260(%var_3235: Tensor[(12, 2, 4), float32]) -> (Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) {
  %995 = cast(%var_3235, dtype="float32") /* ty=Tensor[(12, 2, 4), float32] */;
  %996 = cast(meta[relay.Constant][54] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %997 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %998 = reshape(%996, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %999 = reshape(%997, newshape=[]) /* ty=int64 */;
  %1000 = @func_2704(%998, %999) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %1001 = rsqrt(%995) /* ty=Tensor[(12, 2, 4), float32] */;
  %1002 = %1000.4;
  (%1001, %1002, meta[relay.Constant][54] /* ty=Tensor[(28), float32] */, -6 /* ty=int64 */)
}

def @func_20166() -> (Tensor[(270), int64], Tensor[(13, 7, 8), float32]) {
  %1003 = @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */;
  %1004 = @func_17135() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1005 = %1003.1;
  %1006 = %1004.0;
  (%1005, %1006)
}

def @func_8774() -> (Tensor[(192), int64],) {
  %1007 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1008 = %1007.3;
  (%1008,)
}

def @func_18230(%var_18222: Tensor[(192, 1), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(192, 1), int64]) {
  %1009 = @func_9648() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(720), int32], Tensor[(14), float32]) */;
  %1010 = cast(%var_18222, dtype="int64") /* ty=Tensor[(192, 1), int64] */;
  %1011 = reshape(%1010, newshape=[2, 96]) /* ty=Tensor[(2, 96), int64] */;
  %1012 = @func_10155(%1011) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(2, 96), int64], Tensor[(28), float32]) */;
  %1013 = %1009.0;
  %1014 = %1012.1;
  (%1013, %1014, %var_18222)
}

def @func_17714() -> (Tensor[(13, 7, 8), float32],) {
  %1015 = @func_15818() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1015,)
}

def @func_21578(%var_21543: Tensor[(720), int32], %var_21553: Tensor[(363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], Tensor[(720), int32], Tensor[(11, 3, 11), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32], Tensor[(2), float32], Tensor[(363), float32]) {
  %1016 = @func_12087() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1017 = cast(meta[relay.Constant][55] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1018 = cast(%var_21543, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1019 = reshape(%1017, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1020 = reshape(%1018, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1021 = @func_7361(%1019, %1020) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */;
  %1022 = cast(%var_21553, dtype="bool") /* ty=Tensor[(363), bool] */;
  %1023 = reshape(%1022, newshape=[363]) /* ty=Tensor[(363), bool] */;
  %1024 = @func_14502(%1023) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(363), bool]) */;
  %1025 = @func_16424() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(3, 90), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32]) */;
  %1026 = cast(meta[relay.Constant][56] /* ty=Tensor[(2), float32] */, dtype="float32") /* ty=Tensor[(2), float32] */;
  %1027 = reshape(%1026, newshape=[1, 2, 1]) /* ty=Tensor[(1, 2, 1), float32] */;
  %1028 = @func_11653(%1027) /* ty=(Tensor[(1, 2, 1), float32], Tensor[(13, 7, 8), float32]) */;
  %1029 = cast(%var_21553, dtype="float32") /* ty=Tensor[(363), float32] */;
  %1030 = %1016.0;
  %1031 = %1021.7;
  %1032 = %1024.1;
  %1033 = %1025.2;
  %1034 = %1028.1;
  %1035 = cos(%1029) /* ty=Tensor[(363), float32] */;
  (%1030, %1031, meta[relay.Constant][55] /* ty=Tensor[(28), float32] */, %var_21543, %1032, %1033, %1034, meta[relay.Constant][56] /* ty=Tensor[(2), float32] */, %1035)
}

def @func_11653(%var_11648: Tensor[(1, 2, 1), float32]) -> (Tensor[(1, 2, 1), float32], Tensor[(13, 7, 8), float32]) {
  %1036 = cast(%var_11648, dtype="float32") /* ty=Tensor[(1, 2, 1), float32] */;
  %1037 = @func_8905() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1038 = log(%1036) /* ty=Tensor[(1, 2, 1), float32] */;
  %1039 = %1037.0;
  (%1038, %1039)
}

def @func_17129() -> Tensor[(13, 7, 8), float32] {
  %1040 = @func_10037() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1040.0
}

def @func_14386() -> Tensor[(13, 7, 8), float32] {
  @func_9157() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_19384() -> Tensor[(13, 7, 8), float32] {
  @func_7112() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_7278() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1041 = @func_6266() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1042 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1043 = %1042.0;
  %1044 = cast(%1043, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1045 = %1041.0;
  %1046 = cos(%1044) /* ty=Tensor[(13, 7, 8), float32] */;
  (%1045, %1046)
}

def @func_17921() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  %1047 = @func_17388() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1048 = @func_9916() /* ty=Tensor[(13, 7, 8), float32] */;
  %1049 = %1047.0;
  (%1048, %1049)
}

def @func_16676() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1050 = @func_11830() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1051 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  %1052 = %1050.0;
  (%1051, %1052)
}

def @func_21009(%var_21006: Tensor[(450), int8]) -> (Tensor[(192, 1), int64], Tensor[(192, 1), float64], Tensor[(13, 7, 8), float32], Tensor[(450), int8]) {
  %1053 = @func_19966() /* ty=(Tensor[(192, 1), int64], Tensor[(13, 7, 8), float32]) */;
  %1054 = @func_18642() /* ty=Tensor[(192, 1), int64] */;
  %1055 = cast(%1054, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %1056 = cast(%var_21006, dtype="int8") /* ty=Tensor[(450), int8] */;
  %1057 = reshape(%1056, newshape=[15, 5, 6]) /* ty=Tensor[(15, 5, 6), int8] */;
  %1058 = @func_14431(%1057) /* ty=(Tensor[(15, 5, 6), uint32], Tensor[(15, 5, 6), float32], Tensor[(13, 7, 8), float32]) */;
  %1059 = %1053.0;
  %1060 = rsqrt(%1055) /* ty=Tensor[(192, 1), float64] */;
  %1061 = %1058.2;
  (%1059, %1060, %1061, %var_21006)
}

def @func_12186() -> Tensor[(13, 7, 8), float32] {
  %1062 = @func_12067() /* ty=(bool, Tensor[(13, 7, 8), float32]) */;
  %1062.1
}

def @func_8310(%var_8303: Tensor[(270), int64]) -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(1, 8, 6), float64], Tensor[(270), int64]) {
  %1063 = cast(meta[relay.Constant][57] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1064 = reshape(%1063, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %1065 = @func_8210(%1064) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64]) */;
  %1066 = cast(%var_8303, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1067 = reshape(%1066, newshape=[1, 270]) /* ty=Tensor[(1, 270), int64] */;
  %1068 = @func_6876(%1067) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) */;
  %1069 = @func_7197() /* ty=Tensor[(48), bool] */;
  %1070 = %1065.0;
  %1071 = %1068.0;
  (%1069, %1070, meta[relay.Constant][57] /* ty=Tensor[(96), float64] */, %1071, %var_8303)
}

def @func_14836(%var_14817: Tensor[(192, 16), int64]) -> (Tensor[(192, 16), float32], Tensor[(192, 16), bool]) {
  %1072 = @func_11742() /* ty=Tensor[(192, 1), int64] */;
  %1073 = cast(%1072, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %1074 = cast(%var_14817, dtype="float32") /* ty=Tensor[(192, 16), float32] */;
  %1075 = cast(%var_14817, dtype="bool") /* ty=Tensor[(192, 16), bool] */;
  %1076 = cast(%1072, dtype="bool") /* ty=Tensor[(192, 1), bool] */;
  %1077 = power(%1073, %1074) /* ty=Tensor[(192, 16), float32] */;
  %1078 = greater(%1075, %1076) /* ty=Tensor[(192, 16), bool] */;
  (%1077, %1078)
}

def @func_5172(%var_5150: Tensor[(15, 6, 11), int64], %var_5151: Tensor[(15, 6, 11), int64]) -> (Tensor[(15, 6, 11), int64], Tensor[(1, 7, 2), float32], Tensor[(14), float32]) {
  %1079 = cast(%var_5151, dtype="int64") /* ty=Tensor[(15, 6, 11), int64] */;
  %1080 = shape_of(%var_5150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1081 = cast(%var_5150, dtype="int64") /* ty=Tensor[(15, 6, 11), int64] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1083 = cast(meta[relay.Constant][58] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1084 = reshape(%1083, newshape=[1, 7, 2]) /* ty=Tensor[(1, 7, 2), float32] */;
  %1085 = @func_428(%1084) /* ty=(Tensor[(1, 7, 2), float32],) */;
  %1086 = left_shift(%1081, %1082) /* ty=Tensor[(15, 6, 11), int64] */;
  %1087 = %1085.0;
  (%1086, %1087, meta[relay.Constant][58] /* ty=Tensor[(14), float32] */)
}

def @func_13189(%var_13181: Tensor[(11, 6, 9), float64]) -> Tensor[(11, 6, 9), float64] {
  %1088 = cast(%var_13181, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %1089 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(11, 6, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(meta[relay.Constant][59] /* ty=Tensor[(11, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  add(%1090, %1091) /* ty=Tensor[(11, 6, 9), float64] */
}

def @func_13983() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1092 = @func_10123() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1093 = @func_12609() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1094 = %1092.0;
  %1095 = %1093.0;
  (%1094, %1095)
}

def @func_11195() -> Tensor[(13, 7, 8), float32] {
  %1096 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1096.0
}

def @func_11715() -> Tensor[(48), bool] {
  @func_9308() /* ty=Tensor[(48), bool] */
}

def @func_18138() -> Tensor[(13, 7, 8), float32] {
  @func_13717() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_9128(%var_9096: Tensor[(1, 3, 6), float32]) -> Tensor[(?, 3, 6), bool] {
  %1097 = cast(%var_9096, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %1098 = tan(%1097) /* ty=Tensor[(1, 3, 6), float32] */;
  %1099 = cast(%1098, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %1100 = atanh(%1099) /* ty=Tensor[(1, 3, 6), float32] */;
  %1101 = cast(%var_9096, dtype="bool") /* ty=Tensor[(1, 3, 6), bool] */;
  %1102 = shape_of(%1100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1103 = cast(%1100, dtype="bool") /* ty=Tensor[(1, 3, 6), bool] */;
  %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1103, %1104) /* ty=Tensor[(?, 3, 6), bool] */
}

def @func_9945() -> (Tensor[(13, 7, 8), float32],) {
  %1105 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1106 = %1105.0;
  (%1106,)
}

def @func_8498(%var_8460: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(270), int64], Tensor[(1, 8, 9), uint32], uint32, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1107 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %1108 = cast(%var_8460, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1109 = reshape(%1108, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %1110 = @func_8310(%1109) /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(1, 8, 6), float64], Tensor[(270), int64]) */;
  %1111 = cast(meta[relay.Constant][60] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1112 = reshape(%1111, newshape=[]) /* ty=uint32 */;
  %1113 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1114 = @func_7488() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) */;
  %1115 = %1107.0;
  %1116 = %1110.3;
  %1117 = @func_4371(%1112) /* ty=Tensor[(1, 8, 9), uint32] */;
  %1118 = %1113.0;
  %1119 = %1114.3;
  (%1115, %1116, %var_8460, %1117, meta[relay.Constant][60] /* ty=uint32 */, %1118, %1119)
}

def @func_8819() -> (Tensor[(13, 7, 8), float32],) {
  %1120 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1121 = %1120.0;
  (%1121,)
}

def @func_10597() -> (Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1122 = @func_10088() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1123 = cast(meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1124 = cast(meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1125 = reshape(%1123, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %1126 = reshape(%1124, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %1127 = @func_10088() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1128 = %1122.0;
  %1129 = @func_3603(%1125, %1126) /* ty=Tensor[(16, 3, 11), float32] */;
  %1130 = %1127.0;
  %1131 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1128, %1129, meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, %1130, %1131)
}

def @func_10719() -> (Tensor[(1, 8, 6), float64],) {
  %1132 = @func_8057() /* ty=Tensor[(1, 8, 6), float64] */;
  (%1132,)
}

def @func_15466() -> Tensor[(13, 7, 8), float32] {
  %1133 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %1133.0
}

def @func_4524() -> Tensor[(13, 7, 8), float32] {
  %1134 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1134.0
}

def @func_20517() -> Tensor[(13, 7, 8), float32] {
  %1135 = @func_17921() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */;
  %1135.0
}

def @func_7188() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1136 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1137 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
  %1138 = cast(%1137, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1139 = %1136.0;
  %1140 = sinh(%1138) /* ty=Tensor[(13, 7, 8), float32] */;
  (%1139, %1140)
}

def @func_14502(%var_14499: Tensor[(363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(363), bool]) {
  %1141 = @func_12087() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1142 = cast(%var_14499, dtype="bool") /* ty=Tensor[(363), bool] */;
  %1143 = cast(%var_14499, dtype="bool") /* ty=Tensor[(363), bool] */;
  %1144 = reshape(%1142, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), bool] */;
  %1145 = reshape(%1143, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), bool] */;
  %1146 = %1141.0;
  %1147 = @func_7725(%1144, %1145) /* ty=Tensor[(11, 3, 11), bool] */;
  (%1146, %1147, %var_14499)
}

def @func_6266() -> (Tensor[(13, 7, 8), float32],) {
  %1148 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1149 = %1148.0;
  (%1149,)
}

def @func_11830() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1150 = @func_10980() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1151 = @func_9945() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1152 = %1150.0;
  %1153 = %1151.0;
  (%1152, %1153)
}

def @func_13268(%var_13248: Tensor[(1, 378), uint32], %var_13259: Tensor[(720), int32], %var_13260: Tensor[(14), float32], %var_13262: int64) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(63), uint32], Tensor[(1, 378), uint32], Tensor[(9, 6, 7), bool], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64]) {
  %1154 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1155 = cast(meta[relay.Constant][62] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1156 = cast(%var_13248, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %1157 = reshape(%1155, newshape=[9, 1, 7]) /* ty=Tensor[(9, 1, 7), uint32] */;
  %1158 = reshape(%1156, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %1159 = @func_7158(%1157, %1158) /* ty=(Tensor[(9, 6, 7), bool], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64]) */;
  %1160 = cast(meta[relay.Constant][62] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1161 = cast(%var_13248, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %1162 = cast(%var_13259, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1163 = cast(%var_13260, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1164 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 4), float32] */;
  %1165 = cast(%var_13262, dtype="int64") /* ty=int64 */;
  %1166 = cast(meta[relay.Constant][64] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1167 = reshape(%1160, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1168 = reshape(%1161, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %1169 = reshape(%1162, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1170 = reshape(%1163, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %1171 = reshape(%1164, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1172 = reshape(%1165, newshape=[]) /* ty=int64 */;
  %1173 = reshape(%1166, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1174 = @func_9444(%1167, %1168, %1169, %1170, %1171, %1172, %1173) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) */;
  %1175 = %1154.0;
  %1176 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  %1177 = %1159.2;
  %1178 = %1174.1;
  (%1175, %1176, %1177, meta[relay.Constant][62] /* ty=Tensor[(63), uint32] */, %var_13248, %1178, %var_13259, %var_13260, meta[relay.Constant][63] /* ty=Tensor[(7, 4), float32] */, %var_13262, meta[relay.Constant][64] /* ty=Tensor[(126), float64] */)
}

def @func_15177() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1179 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1180 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
  %1181 = %1179.0;
  (%1180, %1181)
}

def @func_19709() -> (Tensor[(13, 7, 8), float32],) {
  %1182 = @func_18001() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1183 = %1182.0;
  (%1183,)
}

def @func_20767() -> Tensor[(13, 7, 8), float32] {
  %1184 = @func_10647() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1184.0
}

def @func_21085() -> (Tensor[(13, 7, 8), float32],) {
  %1185 = @func_18973() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192, 1), int64]) */;
  %1186 = %1185.0;
  (%1186,)
}

def @func_14792() -> Tensor[(13, 7, 8), float32] {
  %1187 = @func_12087() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1187.0
}

def @func_18888() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(48), bool]) {
  %1188 = @func_12312() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1189 = @func_9867() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool]) */;
  %1190 = @func_12874() /* ty=(Tensor[(48), bool],) */;
  %1191 = %1188.2;
  %1192 = %1189.1;
  %1193 = %1190.0;
  (%1191, %1192, %1193)
}

def @func_8132() -> (Tensor[(13, 7, 8), float32],) {
  %1194 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_15805(%var_15793: Tensor[(378, 1), uint32], %var_15795: Tensor[(14), float32], %var_15798: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(24, 22), float32], Tensor[(1, 63), uint32], Tensor[(378, 1), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32]) {
  %1196 = @func_14083() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1197 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 63), uint32] */, dtype="uint32") /* ty=Tensor[(1, 63), uint32] */;
  %1198 = cast(%var_15793, dtype="uint32") /* ty=Tensor[(378, 1), uint32] */;
  %1199 = cast(meta[relay.Constant][66] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1200 = cast(%var_15795, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1201 = cast(meta[relay.Constant][67] /* ty=Tensor[(7, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 4), float32] */;
  %1202 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1203 = cast(%var_15798, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1204 = reshape(%1197, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1205 = reshape(%1198, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %1206 = reshape(%1199, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1207 = reshape(%1200, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %1208 = reshape(%1201, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1209 = reshape(%1202, newshape=[]) /* ty=int64 */;
  %1210 = reshape(%1203, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1211 = @func_9444(%1204, %1205, %1206, %1207, %1208, %1209, %1210) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) */;
  %1212 = %1196.0;
  %1213 = @func_7197() /* ty=Tensor[(48), bool] */;
  %1214 = %1211.16;
  %1215 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1212, %1213, %1214, meta[relay.Constant][65] /* ty=Tensor[(1, 63), uint32] */, %var_15793, meta[relay.Constant][66] /* ty=Tensor[(720), int32] */, %var_15795, meta[relay.Constant][67] /* ty=Tensor[(7, 4), float32] */, -5 /* ty=int64 */, %var_15798, %1215)
}

def @func_9157() -> Tensor[(13, 7, 8), float32] {
  %1216 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1216.0
}

def @func_4693() -> Tensor[(13, 7, 8), float32] {
  %1217 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1217.0
}

def @func_5551() -> (Tensor[(13, 7, 8), float32],) {
  %1218 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1218,)
}

def @func_7112() -> Tensor[(13, 7, 8), float32] {
  %1219 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1219.0
}

def @func_10387() -> (Tensor[(270), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(13, 7, 8), float32]) {
  %1220 = @func_4830() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(6, 15, 3), int64]) */;
  %1221 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1222 = cast(meta[relay.Constant][68] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1223 = reshape(%1222, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float64] */;
  %1224 = @func_8153(%1223) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) */;
  %1225 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1226 = %1220.2;
  %1227 = %1221.0;
  %1228 = %1224.0;
  %1229 = %1225.0;
  (%1226, %1227, %1228, meta[relay.Constant][68] /* ty=Tensor[(96), float64] */, %1229)
}

def @func_10530() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1230 = @func_8327() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) */;
  %1231 = %1230.1;
  %1232 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1231, %1232)
}

def @func_11537() -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192, 1), int64]) {
  %1233 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1234 = cast(meta[relay.Constant][69] /* ty=Tensor[(192, 1), int64] */, dtype="int64") /* ty=Tensor[(192, 1), int64] */;
  %1235 = reshape(%1233, newshape=[]) /* ty=int64 */;
  %1236 = reshape(%1234, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1237 = @func_203(%1235, %1236) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1238 = @func_9982() /* ty=Tensor[(13, 7, 8), float32] */;
  %1239 = %1237.0;
  (%1238, %1239, 10 /* ty=int64 */, meta[relay.Constant][69] /* ty=Tensor[(192, 1), int64] */)
}

def @func_15743(%var_15724: Tensor[(1, 8, 6), float64]) -> (Tensor[(?, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %1240 = @func_7970() /* ty=Tensor[(1, 8, 6), float64] */;
  %1241 = cast(%var_15724, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %1242 = shape_of(%1240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1243 = cast(%1240, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %1244 = dyn.reshape(%1241, %1242, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1245 = maximum(%1243, %1244) /* ty=Tensor[(?, 8, 6), float64] */;
  %1246 = @func_11755() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1245, %1246)
}

def @func_12662() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1247 = @func_11351() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1248 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  %1249 = %1247.1;
  (%1248, %1249)
}

def @func_20809() -> (Tensor[(13, 7, 8), float32],) {
  %1250 = @func_19384() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1250,)
}

def @func_18364(%var_18336: float32, %var_18337: Tensor[(15, 10, 2), float32], %var_18351: Tensor[(15, 10, 2), float32]) -> (Tensor[(48), bool], Tensor[(15, 10, 2), bool]) {
  %1251 = cast(%var_18336, dtype="float32") /* ty=float32 */;
  %1252 = cast(%var_18337, dtype="float32") /* ty=Tensor[(15, 10, 2), float32] */;
  %1253 = subtract(%1251, %1252) /* ty=Tensor[(15, 10, 2), float32] */;
  %1254 = cast(%var_18351, dtype="bool") /* ty=Tensor[(15, 10, 2), bool] */;
  %1255 = shape_of(%1253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1256 = cast(%1253, dtype="bool") /* ty=Tensor[(15, 10, 2), bool] */;
  %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1258 = @func_17469() /* ty=Tensor[(48), bool] */;
  %1259 = less(%1256, %1257) /* ty=Tensor[(15, 10, 2), bool] */;
  (%1258, %1259)
}

def @func_21200() -> (Tensor[(13, 7, 8), float32],) {
  %1260 = @func_11195() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1260,)
}

def @func_6174(%var_6138: Tensor[(13, 2, 10), float32], %var_6147: Tensor[(192), int64], %var_6169: Tensor[(96), float32]) -> (Tensor[(13, 2, 10), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32]) {
  %1261 = cast(%var_6138, dtype="float32") /* ty=Tensor[(13, 2, 10), float32] */;
  %1262 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1263 = cast(%var_6147, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1264 = reshape(%1262, newshape=[]) /* ty=int64 */;
  %1265 = reshape(%1263, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1266 = @func_203(%1264, %1265) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1267 = cast(meta[relay.Constant][70] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1268 = cast(%var_6169, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1269 = reshape(%1267, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %1270 = reshape(%1268, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %1271 = @func_5634(%1269, %1270) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(270), int64], Tensor[(2, 48), float32]) */;
  %1272 = log10(%1261) /* ty=Tensor[(13, 2, 10), float32] */;
  %1273 = %1266.0;
  %1274 = %1271.0;
  (%1272, %1273, 4 /* ty=int64 */, %var_6147, %1274, meta[relay.Constant][70] /* ty=Tensor[(270), int64] */, %var_6169)
}

def @func_18076() -> (Tensor[(13, 7, 8), float32],) {
  %1275 = @func_15818() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1275,)
}

def @func_18461() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1276 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
  %1277 = @func_13717() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1276, %1277)
}

def @func_20948() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1278 = @func_17443() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1279 = @func_15426() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64]) */;
  %1280 = @func_13100() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1281 = %1278.0;
  %1282 = %1279.0;
  %1283 = %1280.0;
  (%1281, %1282, %1283)
}

def @func_13407() -> (Tensor[(1, 8, 6), float64], Tensor[(28), float32], Tensor[(12, 60), int32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], bool) {
  %1284 = @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1285 = cast(meta[relay.Constant][71] /* ty=Tensor[(12, 60), int32] */, dtype="int32") /* ty=Tensor[(12, 60), int32] */;
  %1286 = reshape(%1285, newshape=[12, 60]) /* ty=Tensor[(12, 60), int32] */;
  %1287 = @func_10210(%1286) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(12, 60), int32]) */;
  %1288 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1289 = @func_9542() /* ty=(bool,) */;
  %1290 = %1284.0;
  %1291 = %1287.3;
  %1292 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  %1293 = @func_11195() /* ty=Tensor[(13, 7, 8), float32] */;
  %1294 = %1288.0;
  %1295 = %1289.0;
  (%1290, %1291, meta[relay.Constant][71] /* ty=Tensor[(12, 60), int32] */, %1292, %1293, %1294, %1295)
}

def @func_14886() -> Tensor[(13, 7, 8), float32] {
  %1296 = @func_11891() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1296.0
}

def @func_4371(%var_4359: uint32) -> Tensor[(1, 8, 9), uint32] {
  %1297 = cast(%var_4359, dtype="uint32") /* ty=uint32 */;
  %1298 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 8, 9), uint32] */, dtype="uint32") /* ty=Tensor[(1, 8, 9), uint32] */;
  bitwise_and(%1297, %1298) /* ty=Tensor[(1, 8, 9), uint32] */
}

def @func_10647() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1299 = @func_10557() /* ty=Tensor[(13, 7, 8), float32] */;
  %1300 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1299, %1300)
}

def @func_10102() -> (Tensor[(13, 7, 8), float32],) {
  %1301 = @func_7188() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1302 = %1301.1;
  (%1302,)
}

def @func_17262() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(?, 9, 14), float32]) {
  %1303 = @func_13889() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1304 = @func_10498() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1305 = cast(meta[relay.Constant][73] /* ty=Tensor[(21, 6), float64] */, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %1306 = reshape(%1305, newshape=[1, 9, 14]) /* ty=Tensor[(1, 9, 14), float64] */;
  %1307 = @func_4754(%1306) /* ty=Tensor[(1, 9, 14), float64] */;
  %1308 = cast(meta[relay.Constant][73] /* ty=Tensor[(21, 6), float64] */, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %1309 = shape_of(%1307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1310 = cast(%1307, dtype="float32") /* ty=Tensor[(1, 9, 14), float32] */;
  %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1312 = @func_10898() /* ty=Tensor[(13, 7, 8), float32] */;
  %1313 = %1303.1;
  %1314 = %1304.0;
  %1315 = divide(%1310, %1311) /* ty=Tensor[(?, 9, 14), float32] */;
  (%1312, %1313, %1314, %1315)
}

def @func_12005() -> (Tensor[(13, 7, 8), float32],) {
  %1316 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1317 = %1316.0;
  (%1317,)
}

def @func_15818() -> Tensor[(13, 7, 8), float32] {
  @func_8979() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_16424() -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32]) {
  %1318 = @func_12232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1319 = @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */;
  %1320 = %1319.2;
  %1321 = cast(meta[relay.Constant][74] /* ty=Tensor[(3, 90), int64] */, dtype="bool") /* ty=Tensor[(3, 90), bool] */;
  %1322 = shape_of(%1320, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1323 = cast(%1320, dtype="bool") /* ty=Tensor[(3, 90), bool] */;
  %1324 = dyn.reshape(%1321, %1322, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1325 = cast(meta[relay.Constant][74] /* ty=Tensor[(3, 90), int64] */, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %1326 = @func_11891() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1327 = %1318.0;
  %1328 = less_equal(%1323, %1324) /* ty=Tensor[(3, 90), bool] */;
  %1329 = acosh(%1325) /* ty=Tensor[(3, 90), float64] */;
  %1330 = %1326.1;
  (%1327, %1328, %1329, %1330)
}

def @func_9695(%var_9661: Tensor[(378), uint32], %var_9662: Tensor[(720), int32]) -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(7, 9), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(28), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1331 = cast(meta[relay.Constant][75] /* ty=Tensor[(7, 9), uint32] */, dtype="uint32") /* ty=Tensor[(7, 9), uint32] */;
  %1332 = cast(%var_9661, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %1333 = cast(%var_9662, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1334 = cast(meta[relay.Constant][76] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1335 = cast(meta[relay.Constant][77] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1336 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1337 = cast(meta[relay.Constant][78] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1338 = reshape(%1331, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1339 = reshape(%1332, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %1340 = reshape(%1333, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1341 = reshape(%1334, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %1342 = reshape(%1335, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1343 = reshape(%1336, newshape=[]) /* ty=int64 */;
  %1344 = reshape(%1337, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1345 = @func_9444(%1338, %1339, %1340, %1341, %1342, %1343, %1344) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) */;
  %1346 = cast(meta[relay.Constant][79] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1347 = reshape(%1346, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float64] */;
  %1348 = @func_8153(%1347) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) */;
  %1349 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1350 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1351 = @func_8057() /* ty=Tensor[(1, 8, 6), float64] */;
  %1352 = %1345.0;
  %1353 = %1348.0;
  %1354 = %1349.0;
  %1355 = %1350.0;
  %1356 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1351, %1352, meta[relay.Constant][75] /* ty=Tensor[(7, 9), uint32] */, %var_9661, %var_9662, meta[relay.Constant][76] /* ty=Tensor[(14), float32] */, meta[relay.Constant][77] /* ty=Tensor[(28), float32] */, 7 /* ty=int64 */, meta[relay.Constant][78] /* ty=Tensor[(126), float64] */, %1353, meta[relay.Constant][79] /* ty=Tensor[(96), float64] */, %1354, %1355, %1356)
}

def @func_9648() -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(720), int32], Tensor[(14), float32]) {
  %1357 = @func_8819() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1358 = cast(meta[relay.Constant][80] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1359 = cast(meta[relay.Constant][81] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1360 = reshape(%1358, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), int32] */;
  %1361 = reshape(%1359, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %1362 = @func_607(%1360, %1361) /* ty=(Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) */;
  %1363 = %1357.0;
  %1364 = %1362.6;
  (%1363, %1364, meta[relay.Constant][80] /* ty=Tensor[(720), int32] */, meta[relay.Constant][81] /* ty=Tensor[(14), float32] */)
}

def @func_6741() -> Tensor[(1, 8, 6), float64] {
  %1365 = @func_6370() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1366 = %1365.0;
  %1367 = cast(%1366, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %1368 = atan(%1367) /* ty=Tensor[(1, 8, 6), float64] */;
  %1369 = cast(%1368, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  sigmoid(%1369) /* ty=Tensor[(1, 8, 6), float64] */
}

def @func_5258(%var_5252: Tensor[(3, 90), int64], %var_5253: Tensor[(96), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) {
  %1370 = cast(%var_5252, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %1371 = cast(%var_5253, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1372 = reshape(%1370, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %1373 = reshape(%1371, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %1374 = @func_3580(%1372, %1373) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
  %1375 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  %1376 = %1374.0;
  (%1375, %1376, %var_5252, %var_5253)
}

def @func_14083() -> (Tensor[(13, 7, 8), float32],) {
  %1377 = @func_11101() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1377,)
}

def @func_11891() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1378 = @func_8132() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1379 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1380 = %1378.0;
  %1381 = %1379.0;
  (%1380, %1381)
}

def @func_14646() -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  %1382 = @func_9588() /* ty=(Tensor[(48), bool],) */;
  %1383 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1384 = @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1385 = %1382.0;
  %1386 = %1383.0;
  %1387 = %1384.0;
  (%1385, %1386, %1387)
}

def @func_20239() -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool]) {
  %1388 = @func_9588() /* ty=(Tensor[(48), bool],) */;
  %1389 = @func_11195() /* ty=Tensor[(13, 7, 8), float32] */;
  %1390 = %1388.0;
  (%1389, %1390)
}

def @func_20002() -> (Tensor[(1, 8, 6), float64],) {
  %1391 = @func_19216() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1392 = %1391.0;
  (%1392,)
}

def @func_2704(%var_2669: Tensor[(7, 1, 4), float32], %var_2690: int64) -> (Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) {
  %1393 = cast(%var_2669, dtype="float32") /* ty=Tensor[(7, 1, 4), float32] */;
  %1394 = cast(meta[relay.Constant][82] /* ty=Tensor[(7, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
  %1395 = cast(%var_2669, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
  %1396 = cast(%var_2690, dtype="int64") /* ty=int64 */;
  %1397 = cast(meta[relay.Constant][83] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1398 = cast(meta[relay.Constant][84] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1399 = reshape(%1396, newshape=[]) /* ty=int64 */;
  %1400 = reshape(%1397, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %1401 = reshape(%1398, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1402 = @func_2257(%1399, %1400, %1401) /* ty=(Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) */;
  %1403 = floor_mod(%1393, %1394) /* ty=Tensor[(7, 15, 4), float32] */;
  %1404 = asin(%1395) /* ty=Tensor[(7, 1, 4), float64] */;
  %1405 = %1402.0;
  (%1403, %1404, %1405, %var_2690, meta[relay.Constant][83] /* ty=Tensor[(192), int64] */, meta[relay.Constant][84] /* ty=Tensor[(720), int32] */)
}

def @func_7944(%var_7876: int64) -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, Tensor[(16, 1, 12), int64], Tensor[(1, 8, 9), uint32]) {
  %1406 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1407 = cast(meta[relay.Constant][85] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1408 = cast(%var_7876, dtype="int64") /* ty=int64 */;
  %1409 = reshape(%1407, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %1410 = reshape(%1408, newshape=[]) /* ty=int64 */;
  %1411 = @func_2704(%1409, %1410) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %1412 = cast(%var_7876, dtype="int64") /* ty=int64 */;
  %1413 = %1411.4;
  %1414 = cast(%1413, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1415 = reshape(%1412, newshape=[]) /* ty=int64 */;
  %1416 = reshape(%1414, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1417 = @func_203(%1415, %1416) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1418 = cast(%var_7876, dtype="uint32") /* ty=uint32 */;
  %1419 = reshape(%1418, newshape=[]) /* ty=uint32 */;
  %1420 = @func_7197() /* ty=Tensor[(48), bool] */;
  %1421 = %1406.0;
  %1422 = %1417.0;
  %1423 = @func_4371(%1419) /* ty=Tensor[(1, 8, 9), uint32] */;
  (%1420, %1421, %1413, meta[relay.Constant][85] /* ty=Tensor[(28), float32] */, %var_7876, %1422, %1423)
}

def @func_7089() -> (Tensor[(13, 7, 8), float32],) {
  %1424 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1424,)
}

def @func_19966() -> (Tensor[(192, 1), int64], Tensor[(13, 7, 8), float32]) {
  %1425 = @func_11742() /* ty=Tensor[(192, 1), int64] */;
  %1426 = @func_8979() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1425, %1426)
}

def @func_16349() -> (Tensor[(13, 7, 8), float32],) {
  %1427 = @func_15466() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1427,)
}

def @func_14721() -> (Tensor[(13, 7, 8), float32],) {
  %1428 = @func_11948() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) */;
  %1429 = %1428.0;
  (%1429,)
}

def @func_5882() -> (Tensor[(13, 7, 8), float32],) {
  %1430 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1431 = %1430.0;
  (%1431,)
}

def @func_12087() -> (Tensor[(13, 7, 8), float32],) {
  %1432 = @func_8586() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1433 = %1432.1;
  (%1433,)
}

def @func_17399() -> Tensor[(720, 10), float64] {
  %1434 = @func_10791() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */;
  %1434.0
}

def @func_6258() -> Tensor[(13, 7, 8), float32] {
  %1435 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1435.0
}

def @func_8251() -> (Tensor[(13, 7, 8), bool],) {
  %1436 = @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1437 = %1436.0;
  %1438 = cast(meta[relay.Constant][86] /* ty=Tensor[(13, 7, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 7, 8), bool] */;
  %1439 = shape_of(%1437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1440 = cast(%1437, dtype="bool") /* ty=Tensor[(13, 7, 8), bool] */;
  %1441 = dyn.reshape(%1438, %1439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1442 = less_equal(%1440, %1441) /* ty=Tensor[(13, 7, 8), bool] */;
  (%1442,)
}

def @func_10037() -> (Tensor[(13, 7, 8), float32],) {
  %1443 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_7361(%var_7343: Tensor[(28), float32], %var_7344: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) {
  %1445 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1446 = cast(%var_7343, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1447 = cast(%var_7344, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1448 = reshape(%1446, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1449 = reshape(%1447, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1450 = @func_4804(%1448, %1449) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) */;
  %1451 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1452 = cast(meta[relay.Constant][87] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1453 = reshape(%1451, newshape=[]) /* ty=int64 */;
  %1454 = reshape(%1452, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1455 = @func_203(%1453, %1454) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1456 = %1445.0;
  %1457 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  %1458 = %1450.0;
  %1459 = %1455.0;
  (%1456, %1457, %1458, %var_7343, %var_7344, %1459, 5 /* ty=int64 */, meta[relay.Constant][87] /* ty=Tensor[(192), int64] */)
}

def @func_9755(%var_9722: int64) -> (Tensor[(48), bool], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(48), bool], Tensor[(13, 7, 8), float32]) {
  %1460 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %1461 = cast(%var_9722, dtype="int64") /* ty=int64 */;
  %1462 = cast(meta[relay.Constant][88] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1463 = reshape(%1461, newshape=[]) /* ty=int64 */;
  %1464 = reshape(%1462, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1465 = @func_203(%1463, %1464) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1466 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %1467 = %1460.3;
  %1468 = %1465.0;
  %1469 = %1466.2;
  %1470 = @func_9157() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1467, %1468, %var_9722, meta[relay.Constant][88] /* ty=Tensor[(192), int64] */, %1469, %1470)
}

def @func_12897() -> (Tensor[(13, 7, 8), float32],) {
  %1471 = @func_9945() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1472 = %1471.0;
  (%1472,)
}

def @func_15086() -> Tensor[(48), bool] {
  %1473 = @func_9588() /* ty=(Tensor[(48), bool],) */;
  %1473.0
}

def @func_16515() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  %1474 = @func_12087() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1475 = %1474.0;
  %1476 = @func_14130() /* ty=Tensor[(1, 8, 6), float64] */;
  (%1475, %1476)
}

def @func_16158() -> Tensor[(13, 7, 8), float32] {
  %1477 = @func_15232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %1477.0
}

def @func_8210(%var_8203: Tensor[(96), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64]) {
  %1478 = cast(%var_8203, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1479 = reshape(%1478, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float64] */;
  %1480 = @func_8153(%1479) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) */;
  %1481 = @func_7499() /* ty=Tensor[(13, 7, 8), float32] */;
  %1482 = %1480.2;
  (%1481, %1482, %var_8203)
}

def @func_19153(%var_19139: Tensor[(13, 8, 6), float64]) -> (Tensor[(13, 8, 6), float32],) {
  %1483 = @func_17388() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1484 = %1483.0;
  %1485 = cast(%1484, dtype="float32") /* ty=Tensor[(1, 8, 6), float32] */;
  %1486 = cast(%var_19139, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
  %1487 = power(%1485, %1486) /* ty=Tensor[(13, 8, 6), float32] */;
  (%1487,)
}

def @func_11167() -> Tensor[(13, 7, 8), float32] {
  %1488 = @func_10088() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1488.0
}

def @func_10210(%var_10194: Tensor[(12, 60), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(12, 60), int32]) {
  %1489 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1490 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %1491 = cast(meta[relay.Constant][89] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1492 = cast(%var_10194, dtype="int32") /* ty=Tensor[(12, 60), int32] */;
  %1493 = reshape(%1491, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1494 = reshape(%1492, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1495 = @func_4804(%1493, %1494) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) */;
  %1496 = %1489.0;
  %1497 = %1490.0;
  %1498 = %1495.0;
  (%1496, %1497, %1498, meta[relay.Constant][89] /* ty=Tensor[(28), float32] */, %var_10194)
}

def @func_8905() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1499 = @func_7278() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1500 = %1499.1;
  %1501 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1500, %1501)
}

def @func_16800() -> Tensor[(13, 7, 8), float32] {
  %1502 = @func_10681() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1502.0
}

def @func_19216() -> (Tensor[(1, 8, 6), float64],) {
  %1503 = @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1504 = %1503.0;
  (%1504,)
}

def @func_13565() -> (Tensor[(13, 7, 8), float32],) {
  %1505 = @func_10102() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1506 = %1505.0;
  (%1506,)
}

def @func_21401() -> (Tensor[(13, 7, 8), float32],) {
  %1507 = @func_17714() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1508 = %1507.0;
  (%1508,)
}

def @func_7725(%var_7707: Tensor[(11, 3, 11), bool], %var_7708: Tensor[(11, 3, 11), bool]) -> Tensor[(11, 3, 11), bool] {
  %1509 = cast(%var_7708, dtype="bool") /* ty=Tensor[(11, 3, 11), bool] */;
  %1510 = shape_of(%var_7707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1511 = cast(%var_7707, dtype="bool") /* ty=Tensor[(11, 3, 11), bool] */;
  %1512 = dyn.reshape(%1509, %1510, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1511, %1512) /* ty=Tensor[(11, 3, 11), bool] */
}

def @func_7158(%var_7131: Tensor[(9, 1, 7), uint32], %var_7132: Tensor[(9, 6, 7), uint32]) -> (Tensor[(9, 6, 7), bool], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64]) {
  %1513 = cast(%var_7131, dtype="bool") /* ty=Tensor[(9, 1, 7), bool] */;
  %1514 = cast(%var_7132, dtype="bool") /* ty=Tensor[(9, 6, 7), bool] */;
  %1515 = @func_4830() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(6, 15, 3), int64]) */;
  %1516 = less(%1513, %1514) /* ty=Tensor[(9, 6, 7), bool] */;
  %1517 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
  %1518 = %1515.4;
  (%1516, %1517, %1518)
}

def @func_17837(%var_17775: Tensor[(260), float32], %var_17776: Tensor[(192), int64], %var_17795: int64) -> (Tensor[(13, 7, 8), float32], Tensor[(260), float32], Tensor[(192), int64], int64, int64, Tensor[(?, 96), float64], Tensor[(1, 96), float32], Tensor[(13, 7, 8), float32]) {
  %1519 = @func_12232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1520 = cast(%var_17795, dtype="int64") /* ty=int64 */;
  %1521 = reshape(%1520, newshape=[]) /* ty=int64 */;
  %1522 = @func_7944(%1521) /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, Tensor[(16, 1, 12), int64], Tensor[(1, 8, 9), uint32]) */;
  %1523 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 96), float32] */, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %1524 = asin(%1523) /* ty=Tensor[(1, 96), float32] */;
  %1525 = cast(%var_17775, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1526 = cast(%var_17776, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1527 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 96), float32] */, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %1528 = reshape(%1525, newshape=[13, 2, 10]) /* ty=Tensor[(13, 2, 10), float32] */;
  %1529 = reshape(%1526, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %1530 = reshape(%1527, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %1531 = @func_6174(%1528, %1529, %1530) /* ty=(Tensor[(13, 2, 10), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %1532 = %1531.6;
  %1533 = cast(%1532, dtype="bool") /* ty=Tensor[(96), bool] */;
  %1534 = shape_of(%1524, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1535 = cast(%1524, dtype="bool") /* ty=Tensor[(1, 96), bool] */;
  %1536 = dyn.reshape(%1533, %1534, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1537 = less_equal(%1535, %1536) /* ty=Tensor[(?, 96), bool] */;
  %1538 = cast(%1537, dtype="float64") /* ty=Tensor[(?, 96), float64] */;
  %1539 = shape_of(%1524, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1540 = cast(%1524, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %1541 = dyn.reshape(%1538, %1539, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1542 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 96), float32] */, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %1543 = @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1544 = %1519.1;
  %1545 = %1522.4;
  %1546 = power(%1540, %1541) /* ty=Tensor[(?, 96), float64] */;
  %1547 = erf(%1542) /* ty=Tensor[(1, 96), float32] */;
  %1548 = %1543.0;
  (%1544, %var_17775, %var_17776, %1545, %var_17795, %1546, %1547, %1548)
}

def @func_428(%var_423: Tensor[(1, 7, 2), float32]) -> (Tensor[(1, 7, 2), float32],) {
  %1549 = cast(%var_423, dtype="float32") /* ty=Tensor[(1, 7, 2), float32] */;
  %1550 = asin(%1549) /* ty=Tensor[(1, 7, 2), float32] */;
  (%1550,)
}

def @func_6761() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1551 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %1552 = @func_6258() /* ty=Tensor[(13, 7, 8), float32] */;
  %1553 = %1551.0;
  (%1552, %1553)
}

def @func_18632() -> (Tensor[(48), bool],) {
  %1554 = @func_17592() /* ty=Tensor[(48), bool] */;
  (%1554,)
}

def @func_8327() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) {
  %1555 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1556 = cast(meta[relay.Constant][91] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1557 = cast(meta[relay.Constant][92] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1558 = reshape(%1556, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %1559 = reshape(%1557, newshape=[1, 28]) /* ty=Tensor[(1, 28), float32] */;
  %1560 = @func_6582(%1558, %1559) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) */;
  %1561 = %1555.0;
  %1562 = %1560.6;
  (%1561, %1562, meta[relay.Constant][91] /* ty=Tensor[(192), int64] */, meta[relay.Constant][92] /* ty=Tensor[(28), float32] */)
}

def @func_13100() -> (Tensor[(13, 7, 8), float32],) {
  %1563 = @func_12348() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1564 = %1563.0;
  (%1564,)
}

def @func_21042() -> Tensor[(13, 7, 8), float32] {
  @func_11101() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_6611() -> (Tensor[(13, 7, 8), float32],) {
  %1565 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1566 = %1565.0;
  (%1566,)
}

def @func_8356(%var_8344: Tensor[(11, 11, 11), int32], %var_8345: Tensor[(11, 11, 11), int32]) -> (Tensor[(11, 11, 11), int32], Tensor[(12, 2, 4), float32], Tensor[(96), float32]) {
  %1567 = cast(%var_8345, dtype="int32") /* ty=Tensor[(11, 11, 11), int32] */;
  %1568 = shape_of(%var_8344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1569 = cast(%var_8344, dtype="int32") /* ty=Tensor[(11, 11, 11), int32] */;
  %1570 = dyn.reshape(%1567, %1568, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1571 = cast(meta[relay.Constant][93] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1572 = reshape(%1571, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), float32] */;
  %1573 = @func_3260(%1572) /* ty=(Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) */;
  %1574 = subtract(%1569, %1570) /* ty=Tensor[(11, 11, 11), int32] */;
  %1575 = %1573.0;
  (%1574, %1575, meta[relay.Constant][93] /* ty=Tensor[(96), float32] */)
}

def @func_14769() -> Tensor[(13, 7, 8), float32] {
  %1576 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1576.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_16602(%var_16601: Tensor[(3072), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(192, 16), float32], Tensor[(3072), int64]) {
  %6 = fn (%var_16595: Tensor[(3072), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(192, 16), float32], Tensor[(3072), int64]) {
    %0 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1 = cast(%var_16595, dtype="int64") /* ty=Tensor[(3072), int64] */;
    %2 = reshape(%1, newshape=[192, 16]) /* ty=Tensor[(192, 16), int64] */;
    %3 = @func_14836(%2) /* ty=(Tensor[(192, 16), float32], Tensor[(192, 16), bool]) */;
    %4 = %0.0;
    %5 = %3.0;
    (%4, %5, %var_16595)
  };
  %6(%var_16601) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192, 16), float32], Tensor[(3072), int64]) */
}

def @func_10498() -> (Tensor[(13, 7, 8), float32],) {
  %7 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %8 = %7.0;
  (%8,)
}

def @func_5551() -> (Tensor[(13, 7, 8), float32],) {
  %9 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  (%9,)
}

def @func_17923() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  @func_17921() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */
}

def @func_13667(%var_13656: int64, %var_13657: Tensor[(192, 1), int64], %var_13658: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], int64, Tensor[(192, 720), bool]) {
  %10 = @func_7188() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %11 = cast(%var_13656, dtype="int64") /* ty=int64 */;
  %12 = cast(%var_13657, dtype="int64") /* ty=Tensor[(192, 1), int64] */;
  %13 = cast(%var_13658, dtype="int32") /* ty=Tensor[(720), int32] */;
  %14 = reshape(%11, newshape=[]) /* ty=int64 */;
  %15 = reshape(%12, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %16 = reshape(%13, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %17 = @func_2257(%14, %15, %16) /* ty=(Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) */;
  %18 = cast(%var_13658, dtype="bool") /* ty=Tensor[(720), bool] */;
  %19 = cast(%var_13657, dtype="bool") /* ty=Tensor[(192, 1), bool] */;
  %20 = %10.0;
  %21 = %17.2;
  %22 = greater(%18, %19) /* ty=Tensor[(192, 720), bool] */;
  (%20, %21, %var_13656, %22)
}

def @func_21896() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %23 = @func_16726() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  %26 = reshape(%25, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %27 = @func_4977(%26) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %28 = %27.0;
  (%24, %28)
}

def @func_5637(%var_5635: Tensor[(270), int64], %var_5636: Tensor[(2, 48), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(270), int64], Tensor[(2, 48), float32]) {
  %37 = fn (%var_5631: Tensor[(270), int64], %var_5632: Tensor[(2, 48), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(270), int64], Tensor[(2, 48), float32]) {
    %29 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %30 = cast(%var_5631, dtype="int64") /* ty=Tensor[(270), int64] */;
    %31 = cast(%var_5632, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
    %32 = reshape(%30, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
    %33 = reshape(%31, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
    %34 = @func_3580(%32, %33) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
    %35 = %29.0;
    %36 = %34.1;
    (%35, %36, %var_5631, %var_5632)
  };
  %37(%var_5635, %var_5636) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(270), int64], Tensor[(2, 48), float32]) */
}

def @func_11892() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %42 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %38 = @func_8132() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %39 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %40 = %38.0;
    %41 = %39.0;
    (%40, %41)
  };
  %42() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_12377() -> Tensor[(13, 7, 8), float32] {
  @func_12375() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_19089() -> (Tensor[(13, 7, 8), float32], Tensor[(192, 4), bool], Tensor[(192, 1), float64], Tensor[(192, 1), int64], Tensor[(192, 4), float64]) {
  @func_19087() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192, 4), bool], Tensor[(192, 1), float64], Tensor[(192, 1), int64], Tensor[(192, 4), float64]) */
}

def @func_13719() -> Tensor[(13, 7, 8), float32] {
  @func_13717() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_6179(%var_6176: Tensor[(13, 2, 10), float32], %var_6177: Tensor[(192), int64], %var_6178: Tensor[(96), float32]) -> (Tensor[(13, 2, 10), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32]) {
  @func_6174(%var_6176, %var_6177, %var_6178) /* ty=(Tensor[(13, 2, 10), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32]) */
}

def @func_4524() -> Tensor[(13, 7, 8), float32] {
  %43 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %43.0
}

def @func_6313() -> Tensor[(13, 7, 8), float64] {
  @func_6311() /* ty=Tensor[(13, 7, 8), float64] */
}

def @func_19968() -> (Tensor[(192, 1), int64], Tensor[(13, 7, 8), float32]) {
  @func_19966() /* ty=(Tensor[(192, 1), int64], Tensor[(13, 7, 8), float32]) */
}

def @func_9045() -> (Tensor[(13, 7, 8), float32],) {
  %46 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %44 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %45 = %44.0;
    (%45,)
  };
  %46() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_7161(%var_7159: Tensor[(9, 1, 7), uint32], %var_7160: Tensor[(9, 6, 7), uint32]) -> (Tensor[(9, 6, 7), bool], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64]) {
  %53 = fn (%var_7131: Tensor[(9, 1, 7), uint32], %var_7132: Tensor[(9, 6, 7), uint32]) -> (Tensor[(9, 6, 7), bool], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64]) {
    %47 = cast(%var_7131, dtype="bool") /* ty=Tensor[(9, 1, 7), bool] */;
    %48 = cast(%var_7132, dtype="bool") /* ty=Tensor[(9, 6, 7), bool] */;
    %49 = @func_4830() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(6, 15, 3), int64]) */;
    %50 = less(%47, %48) /* ty=Tensor[(9, 6, 7), bool] */;
    %51 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
    %52 = %49.4;
    (%50, %51, %52)
  };
  %53(%var_7159, %var_7160) /* ty=(Tensor[(9, 6, 7), bool], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64]) */
}

def @func_8833() -> (Tensor[(13, 7, 8), float32],) {
  %55 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %54 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
    (%54,)
  };
  %55() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_11320(%var_11319: Tensor[(96), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(96), float64], bool, Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
  %70 = fn (%var_11280: Tensor[(96), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(96), float64], bool, Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
    %56 = @func_7278() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %57 = cast(%var_11280, dtype="float64") /* ty=Tensor[(96), float64] */;
    %58 = reshape(%57, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %59 = @func_8210(%58) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64]) */;
    %60 = @func_9542() /* ty=(bool,) */;
    %61 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %62 = %61.5;
    %63 = cast(%62, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
    %64 = @func_8327() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) */;
    %65 = %56.1;
    %66 = %59.2;
    %67 = %60.0;
    %68 = log2(%63) /* ty=Tensor[(13, 7, 8), float64] */;
    %69 = %64.1;
    (%65, %66, %var_11280, %67, %68, %69)
  };
  %70(%var_11319) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(96), float64], bool, Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_14613() -> Tensor[(13, 7, 8), float32] {
  %72 = fn () -> Tensor[(13, 7, 8), float32] {
    %71 = @func_13532() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %71.0
  };
  %72() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_15366() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %77 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %73 = @func_12539() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %74 = @func_10399() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %75 = %73.0;
    %76 = %74.0;
    (%75, %76)
  };
  %77() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_10212(%var_10211: Tensor[(12, 60), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(12, 60), int32]) {
  %88 = fn (%var_10194: Tensor[(12, 60), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(12, 60), int32]) {
    %78 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %79 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
    %80 = cast(meta[relay.Constant][0] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %81 = cast(%var_10194, dtype="int32") /* ty=Tensor[(12, 60), int32] */;
    %82 = reshape(%80, newshape=[28]) /* ty=Tensor[(28), float32] */;
    %83 = reshape(%81, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %84 = @func_4804(%82, %83) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) */;
    %85 = %78.0;
    %86 = %79.0;
    %87 = %84.0;
    (%85, %86, %87, meta[relay.Constant][0] /* ty=Tensor[(28), float32] */, %var_10194)
  };
  %88(%var_10211) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(12, 60), int32]) */
}

def @func_11420(%var_11418: Tensor[(10, 10, 5), int64], %var_11419: Tensor[(10, 10, 5), int64]) -> (Tensor[(10, 10, 5), bool],) {
  @func_11416(%var_11418, %var_11419) /* ty=(Tensor[(10, 10, 5), bool],) */
}

def @func_10981() -> (Tensor[(13, 7, 8), float32],) {
  %90 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %89 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    (%89,)
  };
  %90() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_7729(%var_7727: Tensor[(11, 3, 11), bool], %var_7728: Tensor[(11, 3, 11), bool]) -> Tensor[(11, 3, 11), bool] {
  @func_7725(%var_7727, %var_7728) /* ty=Tensor[(11, 3, 11), bool] */
}

def @func_13890() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %94 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %91 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %92 = @func_7499() /* ty=Tensor[(13, 7, 8), float32] */;
    %93 = %91.0;
    (%92, %93)
  };
  %94() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_12006() -> (Tensor[(13, 7, 8), float32],) {
  %97 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %95 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %96 = %95.0;
    (%96,)
  };
  %97() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_17263() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(?, 9, 14), float32]) {
  %111 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(?, 9, 14), float32]) {
    %98 = @func_13889() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %99 = @func_10498() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %100 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 6), float64] */, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
    %101 = reshape(%100, newshape=[1, 9, 14]) /* ty=Tensor[(1, 9, 14), float64] */;
    %102 = @func_4754(%101) /* ty=Tensor[(1, 9, 14), float64] */;
    %103 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 6), float64] */, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
    %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
    %105 = cast(%102, dtype="float32") /* ty=Tensor[(1, 9, 14), float32] */;
    %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %107 = @func_10898() /* ty=Tensor[(13, 7, 8), float32] */;
    %108 = %98.1;
    %109 = %99.0;
    %110 = divide(%105, %106) /* ty=Tensor[(?, 9, 14), float32] */;
    (%107, %108, %109, %110)
  };
  %111() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(?, 9, 14), float32]) */
}

def @func_8681(%var_8675: Tensor[(28), float32], %var_8676: int64) -> (Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) {
  %112 = @func_8251() /* ty=(Tensor[(13, 7, 8), bool],) */;
  %113 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %114 = cast(%var_8675, dtype="float32") /* ty=Tensor[(28), float32] */;
  %115 = cast(%var_8676, dtype="int64") /* ty=int64 */;
  %116 = reshape(%114, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %117 = reshape(%115, newshape=[]) /* ty=int64 */;
  %118 = @func_2704(%116, %117) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %119 = %112.0;
  %120 = %113.5;
  %121 = %118.2;
  (%119, %120, %121, %var_8675, %var_8676)
}

def @func_10233() -> (Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) {
  %129 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) {
    %122 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %123 = cast(meta[relay.Constant][2] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %124 = cast(meta[relay.Constant][2] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %125 = reshape(%123, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %126 = reshape(%124, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %127 = %122.0;
    %128 = @func_3603(%125, %126) /* ty=Tensor[(16, 3, 11), float32] */;
    (%127, %128, meta[relay.Constant][2] /* ty=Tensor[(528), float32] */)
  };
  %129() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) */
}

def @func_8775() -> (Tensor[(192), int64],) {
  %132 = fn () -> (Tensor[(192), int64],) {
    %130 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %131 = %130.3;
    (%131,)
  };
  %132() /* ty=(Tensor[(192), int64],) */
}

def @func_17908() -> Tensor[(13, 7, 8), float32] {
  @func_13687() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_18139() -> Tensor[(13, 7, 8), float32] {
  %133 = fn () -> Tensor[(13, 7, 8), float32] {
    @func_13717() /* ty=Tensor[(13, 7, 8), float32] */
  };
  %133() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_11743() -> Tensor[(192, 1), int64] {
  %135 = fn () -> Tensor[(192, 1), int64] {
    %134 = @func_11537() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192, 1), int64]) */;
    %134.3
  };
  %135() /* ty=Tensor[(192, 1), int64] */
}

def @func_206(%var_204: int64, %var_205: Tensor[(16, 1, 12), int64]) -> (Tensor[(16, 1, 12), int64],) {
  %139 = fn (%var_159: int64, %var_160: Tensor[(16, 1, 12), int64]) -> (Tensor[(16, 1, 12), int64],) {
    %136 = cast(%var_159, dtype="int64") /* ty=int64 */;
    %137 = cast(%var_160, dtype="int64") /* ty=Tensor[(16, 1, 12), int64] */;
    %138 = right_shift(%136, %137) /* ty=Tensor[(16, 1, 12), int64] */;
    (%138,)
  };
  %139(%var_204, %var_205) /* ty=(Tensor[(16, 1, 12), int64],) */
}

def @func_21212() -> Tensor[(13, 7, 8), float32] {
  %141 = fn () -> Tensor[(13, 7, 8), float32] {
    %140 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %140.0
  };
  %141() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_10792() -> (Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) {
  %155 = fn () -> (Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) {
    %142 = cast(meta[relay.Constant][3] /* ty=Tensor[(720, 1), int32] */, dtype="float64") /* ty=Tensor[(720, 1), float64] */;
    %143 = cast(meta[relay.Constant][4] /* ty=Tensor[(720, 10), int32] */, dtype="float64") /* ty=Tensor[(720, 10), float64] */;
    %144 = cast(meta[relay.Constant][3] /* ty=Tensor[(720, 1), int32] */, dtype="int32") /* ty=Tensor[(720, 1), int32] */;
    %145 = reshape(%144, newshape=[12, 60]) /* ty=Tensor[(12, 60), int32] */;
    %146 = @func_10210(%145) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(12, 60), int32]) */;
    %147 = %146.1;
    %148 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    %149 = cast(%148, dtype="int64") /* ty=Tensor[(13, 7, 8), int64] */;
    %150 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %151 = cast(%147, dtype="int64") /* ty=Tensor[(13, 7, 8), int64] */;
    %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %153 = power(%142, %143) /* ty=Tensor[(720, 10), float64] */;
    %154 = bitwise_and(%151, %152) /* ty=Tensor[(13, 7, 8), int64] */;
    (%153, %154)
  };
  %155() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */
}

def @func_12314() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_12312() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_13717() -> Tensor[(13, 7, 8), float32] {
  %156 = @func_8586() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %156.0
}

def @func_20077() -> (Tensor[(13, 7, 8), float32],) {
  @func_20075() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_15818() -> Tensor[(13, 7, 8), float32] {
  @func_8979() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_11716() -> Tensor[(48), bool] {
  %157 = fn () -> Tensor[(48), bool] {
    @func_9308() /* ty=Tensor[(48), bool] */
  };
  %157() /* ty=Tensor[(48), bool] */
}

def @func_20544() -> Tensor[(13, 7, 8), float32] {
  @func_14386() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_8327() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) {
  %158 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %159 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %160 = cast(meta[relay.Constant][6] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %161 = reshape(%159, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %162 = reshape(%160, newshape=[1, 28]) /* ty=Tensor[(1, 28), float32] */;
  %163 = @func_6582(%161, %162) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) */;
  %164 = %158.0;
  %165 = %163.6;
  (%164, %165, meta[relay.Constant][5] /* ty=Tensor[(192), int64] */, meta[relay.Constant][6] /* ty=Tensor[(28), float32] */)
}

def @func_5261(%var_5259: Tensor[(3, 90), int64], %var_5260: Tensor[(96), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) {
  %173 = fn (%var_5252: Tensor[(3, 90), int64], %var_5253: Tensor[(96), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) {
    %166 = cast(%var_5252, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
    %167 = cast(%var_5253, dtype="float32") /* ty=Tensor[(96), float32] */;
    %168 = reshape(%166, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
    %169 = reshape(%167, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
    %170 = @func_3580(%168, %169) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
    %171 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
    %172 = %170.0;
    (%171, %172, %var_5252, %var_5253)
  };
  %173(%var_5259, %var_5260) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) */
}

def @func_7500() -> Tensor[(13, 7, 8), float32] {
  %175 = fn () -> Tensor[(13, 7, 8), float32] {
    %174 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %174.0
  };
  %175() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_14848() -> Tensor[(13, 7, 8), float32] {
  %176 = @func_12609() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %176.0
}

def @func_8212(%var_8211: Tensor[(96), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64]) {
  %182 = fn (%var_8203: Tensor[(96), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64]) {
    %177 = cast(%var_8203, dtype="float64") /* ty=Tensor[(96), float64] */;
    %178 = reshape(%177, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float64] */;
    %179 = @func_8153(%178) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) */;
    %180 = @func_7499() /* ty=Tensor[(13, 7, 8), float32] */;
    %181 = %179.2;
    (%180, %181, %var_8203)
  };
  %182(%var_8211) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64]) */
}

def @func_8153(%var_8143: Tensor[(2, 8, 6), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %183 = @func_6741() /* ty=Tensor[(1, 8, 6), float64] */;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %185 = cast(%var_8143, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
  %186 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %187 = power(%184, %185) /* ty=Tensor[(2, 8, 6), float64] */;
  %188 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  (%186, %187, %188)
}

def @func_17135() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %189 = @func_16515() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */;
  %190 = @func_14245() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %191 = %189.0;
  %192 = %190.3;
  (%191, %192)
}

def @func_17130() -> Tensor[(13, 7, 8), float32] {
  %194 = fn () -> Tensor[(13, 7, 8), float32] {
    %193 = @func_10037() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %193.0
  };
  %194() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_18583() -> (Tensor[(728), float32], Tensor[(28), float32], Tensor[(16, ?, 12), float64]) {
  %195 = cast(meta[relay.Constant][7] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %196 = cast(meta[relay.Constant][8] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %197 = reshape(%195, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %198 = reshape(%196, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %199 = @func_7686(%197, %198) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], Tensor[(720), int32]) */;
  %200 = %199.1;
  %201 = @func_8774() /* ty=(Tensor[(192), int64],) */;
  %202 = %201.0;
  %203 = cast(%202, dtype="float64") /* ty=Tensor[(192), float64] */;
  %204 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%200, dtype="float64") /* ty=Tensor[(16, 1, 12), float64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %207 = divide(%205, %206) /* ty=Tensor[(16, ?, 12), float64] */;
  (meta[relay.Constant][7] /* ty=Tensor[(728), float32] */, meta[relay.Constant][8] /* ty=Tensor[(28), float32] */, %207)
}

def @func_6958(%var_6957: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], Tensor[(1, 9, 14), float64], Tensor[(126), float64]) {
  %218 = fn (%var_6952: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], Tensor[(1, 9, 14), float64], Tensor[(126), float64]) {
    %208 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %209 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %210 = @func_6370() /* ty=(Tensor[(1, 8, 6), float64],) */;
    %211 = cast(%var_6952, dtype="float64") /* ty=Tensor[(126), float64] */;
    %212 = reshape(%211, newshape=[1, 9, 14]) /* ty=Tensor[(1, 9, 14), float64] */;
    %213 = %208.0;
    %214 = %209.0;
    %215 = %210.0;
    %216 = @func_6741() /* ty=Tensor[(1, 8, 6), float64] */;
    %217 = @func_4754(%212) /* ty=Tensor[(1, 9, 14), float64] */;
    (%213, %214, %215, %216, %217, %var_6952)
  };
  %218(%var_6957) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], Tensor[(1, 9, 14), float64], Tensor[(126), float64]) */
}

def @func_17366() -> (Tensor[(1, 8, 6), float64],) {
  %219 = @func_17197() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %220 = %219.0;
  (%220,)
}

def @func_20767() -> Tensor[(13, 7, 8), float32] {
  %221 = @func_10647() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %221.0
}

def @func_13930() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_13928() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_6371() -> (Tensor[(1, 8, 6), float64],) {
  %224 = fn () -> (Tensor[(1, 8, 6), float64],) {
    %222 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
    %223 = %222.1;
    (%223,)
  };
  %224() /* ty=(Tensor[(1, 8, 6), float64],) */
}

def @func_17388() -> (Tensor[(1, 8, 6), float64],) {
  %225 = @func_14130() /* ty=Tensor[(1, 8, 6), float64] */;
  (%225,)
}

def @func_19837(%var_19835: Tensor[(7, 7, 12), uint8]) -> (Tensor[(7, 7, 12), uint8], Tensor[(13, 7, 8), float32], Tensor[(7, 7, 12), int16]) {
  @func_19834(%var_19835) /* ty=(Tensor[(7, 7, 12), uint8], Tensor[(13, 7, 8), float32], Tensor[(7, 7, 12), int16]) */
}

def @func_12899() -> (Tensor[(13, 7, 8), float32],) {
  @func_12897() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_19746() -> (Tensor[(13, 7, 8), float32],) {
  @func_19744() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_13189(%var_13181: Tensor[(11, 6, 9), float64]) -> Tensor[(11, 6, 9), float64] {
  %226 = cast(%var_13181, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %227 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(11, 6, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %228 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 9), float64] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  add(%228, %229) /* ty=Tensor[(11, 6, 9), float64] */
}

def @func_5468(%var_5467: Tensor[(10, 1, 15), float64]) -> (Tensor[(10, 1, 15), float64], Tensor[(13, 7, 8), float32]) {
  %238 = fn (%var_5422: Tensor[(10, 1, 15), float64]) -> (Tensor[(10, 1, 15), float64], Tensor[(13, 7, 8), float32]) {
    %230 = cast(%var_5422, dtype="float64") /* ty=Tensor[(10, 1, 15), float64] */;
    %231 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %232 = %231.0;
    %233 = cast(%232, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
    %234 = sqrt(%233) /* ty=Tensor[(13, 7, 8), float32] */;
    %235 = cast(%234, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
    %236 = rsqrt(%230) /* ty=Tensor[(10, 1, 15), float64] */;
    %237 = exp(%235) /* ty=Tensor[(13, 7, 8), float32] */;
    (%236, %237)
  };
  %238(%var_5467) /* ty=(Tensor[(10, 1, 15), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_20167() -> (Tensor[(270), int64], Tensor[(13, 7, 8), float32]) {
  %243 = fn () -> (Tensor[(270), int64], Tensor[(13, 7, 8), float32]) {
    %239 = @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */;
    %240 = @func_17135() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %241 = %239.1;
    %242 = %240.0;
    (%241, %242)
  };
  %243() /* ty=(Tensor[(270), int64], Tensor[(13, 7, 8), float32]) */
}

def @func_6761() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %244 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %245 = @func_6258() /* ty=Tensor[(13, 7, 8), float32] */;
  %246 = %244.0;
  (%245, %246)
}

def @func_16726() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %247 = @func_14130() /* ty=Tensor[(1, 8, 6), float64] */;
  %248 = @func_6258() /* ty=Tensor[(13, 7, 8), float32] */;
  (%247, %248)
}

def @func_16299(%var_16298: Tensor[(270), int64]) -> (Tensor[(528), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(13, 7, 8), float32], Tensor[(720), int32]) {
  %258 = fn (%var_16270: Tensor[(270), int64]) -> (Tensor[(528), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(13, 7, 8), float32], Tensor[(720), int32]) {
    %249 = cast(%var_16270, dtype="int64") /* ty=Tensor[(270), int64] */;
    %250 = reshape(%249, newshape=[1, 270]) /* ty=Tensor[(1, 270), int64] */;
    %251 = @func_6876(%250) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) */;
    %252 = @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %253 = @func_12773() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(13, 7, 8), float32]) */;
    %254 = @func_7620() /* ty=Tensor[(528), float32] */;
    %255 = %251.5;
    %256 = %252.0;
    %257 = %253.1;
    (%254, %255, %var_16270, %256, %257)
  };
  %258(%var_16298) /* ty=(Tensor[(528), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(13, 7, 8), float32], Tensor[(720), int32]) */
}

def @func_17741() -> (Tensor[(13, 7, 8), float32],) {
  %259 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %260 = %259.0;
  (%260,)
}

def @func_10157(%var_10156: Tensor[(2, 96), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(2, 96), int64], Tensor[(28), float32]) {
  %269 = fn (%var_10152: Tensor[(2, 96), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(2, 96), int64], Tensor[(28), float32]) {
    %261 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %262 = cast(%var_10152, dtype="int64") /* ty=Tensor[(2, 96), int64] */;
    %263 = cast(meta[relay.Constant][10] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %264 = reshape(%262, newshape=[192]) /* ty=Tensor[(192), int64] */;
    %265 = reshape(%263, newshape=[1, 28]) /* ty=Tensor[(1, 28), float32] */;
    %266 = @func_6582(%264, %265) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) */;
    %267 = %261.0;
    %268 = %266.2;
    (%267, %268, %var_10152, meta[relay.Constant][10] /* ty=Tensor[(28), float32] */)
  };
  %269(%var_10156) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(2, 96), int64], Tensor[(28), float32]) */
}

def @func_20810() -> (Tensor[(13, 7, 8), float32],) {
  %271 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %270 = @func_19384() /* ty=Tensor[(13, 7, 8), float32] */;
    (%270,)
  };
  %271() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_7489() -> (Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) {
  %282 = fn () -> (Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) {
    %272 = @func_6370() /* ty=(Tensor[(1, 8, 6), float64],) */;
    %273 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %274 = %272.0;
    %275 = cast(%274, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
    %276 = reshape(%273, newshape=[]) /* ty=bool */;
    %277 = reshape(%275, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
    %278 = @func_2307(%276, %277) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
    %279 = @func_6266() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %280 = %278.1;
    %281 = %279.0;
    (%274, %280, False /* ty=bool */, %281)
  };
  %282() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) */
}

def @func_16163() -> Tensor[(13, 7, 8), int64] {
  %284 = fn () -> Tensor[(13, 7, 8), int64] {
    %283 = @func_10791() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */;
    %283.1
  };
  %284() /* ty=Tensor[(13, 7, 8), int64] */
}

def @func_10598() -> (Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %295 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %285 = @func_10088() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %286 = cast(meta[relay.Constant][11] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %287 = cast(meta[relay.Constant][11] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %288 = reshape(%286, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %289 = reshape(%287, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %290 = @func_10088() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %291 = %285.0;
    %292 = @func_3603(%288, %289) /* ty=Tensor[(16, 3, 11), float32] */;
    %293 = %290.0;
    %294 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
    (%291, %292, meta[relay.Constant][11] /* ty=Tensor[(528), float32] */, %293, %294)
  };
  %295() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_15527() -> Tensor[(13, 7, 8), float32] {
  %296 = @func_10621() /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %296.2
}

def @func_21401() -> (Tensor[(13, 7, 8), float32],) {
  %297 = @func_17714() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %298 = %297.0;
  (%298,)
}

def @func_20239() -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool]) {
  %299 = @func_9588() /* ty=(Tensor[(48), bool],) */;
  %300 = @func_11195() /* ty=Tensor[(13, 7, 8), float32] */;
  %301 = %299.0;
  (%300, %301)
}

def @func_14387() -> Tensor[(13, 7, 8), float32] {
  %302 = fn () -> Tensor[(13, 7, 8), float32] {
    @func_9157() /* ty=Tensor[(13, 7, 8), float32] */
  };
  %302() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_15632() -> (Tensor[(48), bool],) {
  %303 = @func_15591() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) */;
  %304 = %303.1;
  (%304,)
}

def @func_7690(%var_7688: Tensor[(13, 7, 8), float32], %var_7689: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], Tensor[(720), int32]) {
  @func_7686(%var_7688, %var_7689) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], Tensor[(720), int32]) */
}

def @func_8133() -> (Tensor[(13, 7, 8), float32],) {
  %307 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %305 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %306 = %305.0;
    (%306,)
  };
  %307() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_18634() -> (Tensor[(48), bool],) {
  @func_18632() /* ty=(Tensor[(48), bool],) */
}

def @func_20868(%var_20866: Tensor[(1, 363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(1, 363), bool], Tensor[(13, 7, 8), float32]) {
  @func_20865(%var_20866) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(1, 363), bool], Tensor[(13, 7, 8), float32]) */
}

def @func_11830() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %308 = @func_10980() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %309 = @func_9945() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %310 = %308.0;
  %311 = %309.0;
  (%310, %311)
}

def @func_4430() -> Tensor[(13, 7, 8), float32] {
  %313 = fn () -> Tensor[(13, 7, 8), float32] {
    %312 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
    sin(%312) /* ty=Tensor[(13, 7, 8), float32] */
  };
  %313() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_11950() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) {
  @func_11948() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) */
}

def @func_5678(%var_5676: Tensor[(96), float32], %var_5677: Tensor[(48), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(1, 8, 6), bool], bool, Tensor[(48), bool]) {
  %327 = fn (%var_5664: Tensor[(96), float32], %var_5671: Tensor[(48), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(1, 8, 6), bool], bool, Tensor[(48), bool]) {
    %314 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 90), int64] */, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
    %315 = cast(%var_5664, dtype="float32") /* ty=Tensor[(96), float32] */;
    %316 = reshape(%314, newshape=[270]) /* ty=Tensor[(270), int64] */;
    %317 = reshape(%315, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %318 = @func_4618(%316, %317) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
    %319 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %320 = cast(%var_5671, dtype="bool") /* ty=Tensor[(48), bool] */;
    %321 = reshape(%319, newshape=[]) /* ty=bool */;
    %322 = reshape(%320, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
    %323 = @func_2307(%321, %322) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
    %324 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
    %325 = %318.1;
    %326 = %323.0;
    (%324, %325, meta[relay.Constant][13] /* ty=Tensor[(3, 90), int64] */, %var_5664, %326, False /* ty=bool */, %var_5671)
  };
  %327(%var_5676, %var_5677) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(1, 8, 6), bool], bool, Tensor[(48), bool]) */
}

def @func_9562() -> (Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) {
  @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */
}

def @func_14324() -> (Tensor[(13, 7, 8), int64], Tensor[(96), float32], Tensor[(90, 3), int64], Tensor[(96), float32]) {
  %328 = @func_10791() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */;
  %329 = cast(meta[relay.Constant][14] /* ty=Tensor[(90, 3), int64] */, dtype="int64") /* ty=Tensor[(90, 3), int64] */;
  %330 = cast(meta[relay.Constant][15] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %331 = reshape(%329, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %332 = reshape(%330, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %333 = @func_4618(%331, %332) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %334 = %328.1;
  %335 = %333.3;
  (%334, %335, meta[relay.Constant][14] /* ty=Tensor[(90, 3), int64] */, meta[relay.Constant][15] /* ty=Tensor[(96), float32] */)
}

def @func_9983() -> Tensor[(13, 7, 8), float32] {
  %337 = fn () -> Tensor[(13, 7, 8), float32] {
    %336 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %336.0
  };
  %337() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_19780(%var_19775: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(270), int64], Tensor[(4, 24), float32]) {
  %338 = @func_11891() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %339 = @func_17921() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */;
  %340 = @func_12897() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %341 = cast(%var_19775, dtype="int64") /* ty=Tensor[(270), int64] */;
  %342 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 24), float32] */, dtype="float32") /* ty=Tensor[(4, 24), float32] */;
  %343 = reshape(%341, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
  %344 = reshape(%342, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %345 = @func_5258(%343, %344) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) */;
  %346 = %338.0;
  %347 = %339.1;
  %348 = %340.0;
  %349 = %345.2;
  (%346, %347, %348, %349, %var_19775, meta[relay.Constant][16] /* ty=Tensor[(4, 24), float32] */)
}

def @func_10531() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %353 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %350 = @func_8327() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) */;
    %351 = %350.1;
    %352 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    (%351, %352)
  };
  %353() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_7197() -> Tensor[(48), bool] {
  %354 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %354.2
}

def @func_10682() -> (Tensor[(13, 7, 8), float32],) {
  %356 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %355 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
    (%355,)
  };
  %356() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_16728() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  @func_16726() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_14505(%var_14503: Tensor[(363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(363), bool]) {
  @func_14502(%var_14503) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(363), bool]) */
}

def @func_8312(%var_8311: Tensor[(270), int64]) -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(1, 8, 6), float64], Tensor[(270), int64]) {
  %366 = fn (%var_8303: Tensor[(270), int64]) -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(1, 8, 6), float64], Tensor[(270), int64]) {
    %357 = cast(meta[relay.Constant][17] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %358 = reshape(%357, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %359 = @func_8210(%358) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64]) */;
    %360 = cast(%var_8303, dtype="int64") /* ty=Tensor[(270), int64] */;
    %361 = reshape(%360, newshape=[1, 270]) /* ty=Tensor[(1, 270), int64] */;
    %362 = @func_6876(%361) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) */;
    %363 = @func_7197() /* ty=Tensor[(48), bool] */;
    %364 = %359.0;
    %365 = %362.0;
    (%363, %364, meta[relay.Constant][17] /* ty=Tensor[(96), float64] */, %365, %var_8303)
  };
  %366(%var_8311) /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(1, 8, 6), float64], Tensor[(270), int64]) */
}

def @func_2310(%var_2308: bool, %var_2309: Tensor[(1, 8, 6), bool]) -> (Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) {
  %373 = fn (%var_2293: bool, %var_2294: Tensor[(1, 8, 6), bool]) -> (Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) {
    %367 = cast(%var_2293, dtype="bool") /* ty=bool */;
    %368 = cast(%var_2294, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
    %369 = cast(%var_2293, dtype="float64") /* ty=float64 */;
    %370 = cast(%var_2294, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
    %371 = logical_or(%367, %368) /* ty=Tensor[(1, 8, 6), bool] */;
    %372 = divide(%369, %370) /* ty=Tensor[(1, 8, 6), float64] */;
    (%371, %372)
  };
  %373(%var_2308, %var_2309) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */
}

def @func_7190() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_7188() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_21403() -> (Tensor[(13, 7, 8), float32],) {
  @func_21401() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_5882() -> (Tensor[(13, 7, 8), float32],) {
  %374 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %375 = %374.0;
  (%375,)
}

def @func_17438() -> Tensor[(13, 7, 8), float32] {
  %377 = fn () -> Tensor[(13, 7, 8), float32] {
    %376 = @func_15177() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %376.0
  };
  %377() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_9027(%var_9025: Tensor[(9, 4, 8), float32]) -> Tensor[(9, 4, 8), float32] {
  @func_9024(%var_9025) /* ty=Tensor[(9, 4, 8), float32] */
}

def @func_9945() -> (Tensor[(13, 7, 8), float32],) {
  %378 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %379 = %378.0;
  (%379,)
}

def @func_7365(%var_7363: Tensor[(28), float32], %var_7364: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) {
  @func_7361(%var_7363, %var_7364) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */
}

def @func_12523() -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
  %383 = fn () -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
    %380 = @func_12312() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %381 = @func_6311() /* ty=Tensor[(13, 7, 8), float64] */;
    %382 = %380.0;
    (%381, %382)
  };
  %383() /* ty=(Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_17593() -> Tensor[(48), bool] {
  %385 = fn () -> Tensor[(48), bool] {
    %384 = @func_12874() /* ty=(Tensor[(48), bool],) */;
    %384.0
  };
  %385() /* ty=Tensor[(48), bool] */
}

def @func_6052() -> (Tensor[(13, 7, 8), float32],) {
  %387 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %386 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
    (%386,)
  };
  %387() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_14083() -> (Tensor[(13, 7, 8), float32],) {
  %388 = @func_11101() /* ty=Tensor[(13, 7, 8), float32] */;
  (%388,)
}

def @func_19807() -> (Tensor[(48), bool],) {
  %390 = fn () -> (Tensor[(48), bool],) {
    %389 = @func_15086() /* ty=Tensor[(48), bool] */;
    (%389,)
  };
  %390() /* ty=(Tensor[(48), bool],) */
}

def @func_7946(%var_7945: int64) -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, Tensor[(16, 1, 12), int64], Tensor[(1, 8, 9), uint32]) {
  %409 = fn (%var_7876: int64) -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, Tensor[(16, 1, 12), int64], Tensor[(1, 8, 9), uint32]) {
    %391 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %392 = cast(meta[relay.Constant][18] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %393 = cast(%var_7876, dtype="int64") /* ty=int64 */;
    %394 = reshape(%392, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
    %395 = reshape(%393, newshape=[]) /* ty=int64 */;
    %396 = @func_2704(%394, %395) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
    %397 = cast(%var_7876, dtype="int64") /* ty=int64 */;
    %398 = %396.4;
    %399 = cast(%398, dtype="int64") /* ty=Tensor[(192), int64] */;
    %400 = reshape(%397, newshape=[]) /* ty=int64 */;
    %401 = reshape(%399, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
    %402 = @func_203(%400, %401) /* ty=(Tensor[(16, 1, 12), int64],) */;
    %403 = cast(%var_7876, dtype="uint32") /* ty=uint32 */;
    %404 = reshape(%403, newshape=[]) /* ty=uint32 */;
    %405 = @func_7197() /* ty=Tensor[(48), bool] */;
    %406 = %391.0;
    %407 = %402.0;
    %408 = @func_4371(%404) /* ty=Tensor[(1, 8, 9), uint32] */;
    (%405, %406, %398, meta[relay.Constant][18] /* ty=Tensor[(28), float32] */, %var_7876, %407, %408)
  };
  %409(%var_7945) /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, Tensor[(16, 1, 12), int64], Tensor[(1, 8, 9), uint32]) */
}

def @func_18205() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) {
  %410 = @func_17366() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %411 = @func_15232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %412 = %410.0;
  %413 = %411.3;
  %414 = @func_6311() /* ty=Tensor[(13, 7, 8), float64] */;
  (%412, %413, %414)
}

def @func_14887() -> Tensor[(13, 7, 8), float32] {
  %416 = fn () -> Tensor[(13, 7, 8), float32] {
    %415 = @func_11891() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %415.0
  };
  %416() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_14793() -> Tensor[(13, 7, 8), float32] {
  %418 = fn () -> Tensor[(13, 7, 8), float32] {
    %417 = @func_12087() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %417.0
  };
  %418() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_21998(%var_21952: Tensor[(588), uint8]) -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(384, 8), uint16], Tensor[(13, 7, 8), float32], Tensor[(588), uint8], Tensor[(13, 7, 8), float32], Tensor[(192, 16), float64]) {
  %419 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %420 = @func_10399() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %421 = cast(meta[relay.Constant][19] /* ty=Tensor[(384, 8), int64] */, dtype="int64") /* ty=Tensor[(384, 8), int64] */;
  %422 = reshape(%421, newshape=[192, 16]) /* ty=Tensor[(192, 16), int64] */;
  %423 = @func_14836(%422) /* ty=(Tensor[(192, 16), float32], Tensor[(192, 16), bool]) */;
  %424 = %423.1;
  %425 = cast(%424, dtype="uint16") /* ty=Tensor[(192, 16), uint16] */;
  %426 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(384, 8), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %427 = cast(meta[relay.Constant][19] /* ty=Tensor[(384, 8), int64] */, dtype="uint16") /* ty=Tensor[(384, 8), uint16] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %429 = cast(%var_21952, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %430 = reshape(%429, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), uint8] */;
  %431 = @func_19834(%430) /* ty=(Tensor[(7, 7, 12), uint8], Tensor[(13, 7, 8), float32], Tensor[(7, 7, 12), int16]) */;
  %432 = @func_11238() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %433 = cast(meta[relay.Constant][19] /* ty=Tensor[(384, 8), int64] */, dtype="float64") /* ty=Tensor[(384, 8), float64] */;
  %434 = shape_of(%424, dtype="int32") /* ty=Tensor[(2), int32] */;
  %435 = cast(%424, dtype="float64") /* ty=Tensor[(192, 16), float64] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %437 = @func_6258() /* ty=Tensor[(13, 7, 8), float32] */;
  %438 = %419.3;
  %439 = %420.0;
  %440 = right_shift(%427, %428) /* ty=Tensor[(384, 8), uint16] */;
  %441 = %431.1;
  %442 = %432.1;
  %443 = floor_mod(%435, %436) /* ty=Tensor[(192, 16), float64] */;
  (%437, %438, %439, %440, %441, %var_21952, %442, %443)
}

def @func_15865() -> (Tensor[(48), bool],) {
  @func_15863() /* ty=(Tensor[(48), bool],) */
}

def @func_15634() -> (Tensor[(48), bool],) {
  @func_15632() /* ty=(Tensor[(48), bool],) */
}

def @func_13928() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %444 = @func_12539() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %445 = %444.0;
  %446 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  (%445, %446)
}

def @func_6742() -> Tensor[(1, 8, 6), float64] {
  %452 = fn () -> Tensor[(1, 8, 6), float64] {
    %447 = @func_6370() /* ty=(Tensor[(1, 8, 6), float64],) */;
    %448 = %447.0;
    %449 = cast(%448, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
    %450 = atan(%449) /* ty=Tensor[(1, 8, 6), float64] */;
    %451 = cast(%450, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
    sigmoid(%451) /* ty=Tensor[(1, 8, 6), float64] */
  };
  %452() /* ty=Tensor[(1, 8, 6), float64] */
}

def @func_13566() -> (Tensor[(13, 7, 8), float32],) {
  %455 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %453 = @func_10102() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %454 = %453.0;
    (%454,)
  };
  %455() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_7970() -> Tensor[(1, 8, 6), float64] {
  %456 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %456.1
}

def @func_18207() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) {
  @func_18205() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) */
}

def @func_17488() -> (Tensor[(13, 7, 8), float32],) {
  @func_17486() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_12312() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %457 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %458 = %457.0;
  %459 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  %460 = @func_7112() /* ty=Tensor[(13, 7, 8), float32] */;
  (%458, %459, %460)
}

def @func_15234() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) {
  @func_15232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_18504() -> (Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64]) {
  %467 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64]) {
    %461 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %462 = cast(meta[relay.Constant][20] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %463 = reshape(%462, newshape=[1, 270]) /* ty=Tensor[(1, 270), int64] */;
    %464 = @func_6876(%463) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) */;
    %465 = %461.0;
    %466 = %464.5;
    (%465, %466, meta[relay.Constant][20] /* ty=Tensor[(270), int64] */)
  };
  %467() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64]) */
}

def @func_18644() -> Tensor[(192, 1), int64] {
  @func_18642() /* ty=Tensor[(192, 1), int64] */
}

def @func_7810(%var_7808: Tensor[(150), float64], %var_7809: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(24, 2), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(150), float64], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), bool], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32]) {
  %492 = fn (%var_7771: Tensor[(150), float64], %var_7802: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(24, 2), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(150), float64], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), bool], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32]) {
    %468 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %469 = cast(%var_7771, dtype="float64") /* ty=Tensor[(150), float64] */;
    %470 = reshape(%469, newshape=[10, 1, 15]) /* ty=Tensor[(10, 1, 15), float64] */;
    %471 = @func_5466(%470) /* ty=(Tensor[(10, 1, 15), float64], Tensor[(13, 7, 8), float32]) */;
    %472 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %473 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %474 = cast(meta[relay.Constant][21] /* ty=Tensor[(24, 2), bool] */, dtype="bool") /* ty=Tensor[(24, 2), bool] */;
    %475 = reshape(%473, newshape=[]) /* ty=bool */;
    %476 = reshape(%474, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
    %477 = @func_2307(%475, %476) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
    %478 = %477.1;
    %479 = cast(%478, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
    %480 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %481 = cast(meta[relay.Constant][22] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %482 = cast(%var_7802, dtype="int32") /* ty=Tensor[(720), int32] */;
    %483 = reshape(%481, newshape=[28]) /* ty=Tensor[(28), float32] */;
    %484 = reshape(%482, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %485 = @func_4804(%483, %484) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) */;
    %486 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
    %487 = %468.0;
    %488 = %471.1;
    %489 = %472.0;
    %490 = not_equal(%479, %480) /* ty=Tensor[(1, 8, 6), bool] */;
    %491 = %485.0;
    (%486, meta[relay.Constant][21] /* ty=Tensor[(24, 2), bool] */, %487, %488, %var_7771, %489, %490, %491, meta[relay.Constant][22] /* ty=Tensor[(28), float32] */, %var_7802)
  };
  %492(%var_7808, %var_7809) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(24, 2), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(150), float64], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), bool], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32]) */
}

def @func_5376() -> (Tensor[(13, 7, 8), float32],) {
  @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_19652() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(48), bool]) {
  %493 = @func_16946() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %494 = @func_15863() /* ty=(Tensor[(48), bool],) */;
  %495 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %496 = %493.0;
  %497 = @func_7197() /* ty=Tensor[(48), bool] */;
  %498 = %494.0;
  (%495, %496, %497, %498)
}

def @func_10649() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_10647() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_9757(%var_9756: int64) -> (Tensor[(48), bool], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(48), bool], Tensor[(13, 7, 8), float32]) {
  %510 = fn (%var_9722: int64) -> (Tensor[(48), bool], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(48), bool], Tensor[(13, 7, 8), float32]) {
    %499 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
    %500 = cast(%var_9722, dtype="int64") /* ty=int64 */;
    %501 = cast(meta[relay.Constant][23] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
    %502 = reshape(%500, newshape=[]) /* ty=int64 */;
    %503 = reshape(%501, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
    %504 = @func_203(%502, %503) /* ty=(Tensor[(16, 1, 12), int64],) */;
    %505 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
    %506 = %499.3;
    %507 = %504.0;
    %508 = %505.2;
    %509 = @func_9157() /* ty=Tensor[(13, 7, 8), float32] */;
    (%506, %507, %var_9722, meta[relay.Constant][23] /* ty=Tensor[(192), int64] */, %508, %509)
  };
  %510(%var_9756) /* ty=(Tensor[(48), bool], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(48), bool], Tensor[(13, 7, 8), float32]) */
}

def @func_15232() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) {
  %511 = @func_12539() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %512 = @func_7278() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %513 = @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %514 = @func_14245() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %515 = %511.0;
  %516 = %512.0;
  %517 = %513.1;
  %518 = %514.2;
  (%515, %516, %517, %518)
}

def @func_20459() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_20457() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_15820() -> Tensor[(13, 7, 8), float32] {
  @func_15818() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_8252() -> (Tensor[(13, 7, 8), bool],) {
  %526 = fn () -> (Tensor[(13, 7, 8), bool],) {
    %519 = @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %520 = %519.0;
    %521 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 7, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 7, 8), bool] */;
    %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
    %523 = cast(%520, dtype="bool") /* ty=Tensor[(13, 7, 8), bool] */;
    %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %525 = less_equal(%523, %524) /* ty=Tensor[(13, 7, 8), bool] */;
    (%525,)
  };
  %526() /* ty=(Tensor[(13, 7, 8), bool],) */
}

def @func_7972() -> Tensor[(1, 8, 6), float64] {
  @func_7970() /* ty=Tensor[(1, 8, 6), float64] */
}

def @func_4977(%var_4965: Tensor[(48), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) {
  %527 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %528 = cast(%var_4965, dtype="bool") /* ty=Tensor[(48), bool] */;
  %529 = reshape(%527, newshape=[]) /* ty=bool */;
  %530 = reshape(%528, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
  %531 = @func_2307(%529, %530) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
  %532 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %533 = %531.1;
  (%532, %533, False /* ty=bool */, %var_4965)
}

def @func_9648() -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(720), int32], Tensor[(14), float32]) {
  %534 = @func_8819() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %535 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %536 = cast(meta[relay.Constant][26] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %537 = reshape(%535, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), int32] */;
  %538 = reshape(%536, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %539 = @func_607(%537, %538) /* ty=(Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) */;
  %540 = %534.0;
  %541 = %539.6;
  (%540, %541, meta[relay.Constant][25] /* ty=Tensor[(720), int32] */, meta[relay.Constant][26] /* ty=Tensor[(14), float32] */)
}

def @func_19966() -> (Tensor[(192, 1), int64], Tensor[(13, 7, 8), float32]) {
  %542 = @func_11742() /* ty=Tensor[(192, 1), int64] */;
  %543 = @func_8979() /* ty=Tensor[(13, 7, 8), float32] */;
  (%542, %543)
}

def @func_7089() -> (Tensor[(13, 7, 8), float32],) {
  %544 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  (%544,)
}

def @func_14850() -> Tensor[(13, 7, 8), float32] {
  @func_14848() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_12232() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %545 = @func_9945() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %546 = %545.0;
  %547 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
  %548 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
  (%546, %547, %548)
}

def @func_17743() -> (Tensor[(13, 7, 8), float32],) {
  @func_17741() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_8905() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %549 = @func_7278() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %550 = %549.1;
  %551 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  (%550, %551)
}

def @func_20574() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %556 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %552 = @func_10621() /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %553 = @func_7112() /* ty=Tensor[(13, 7, 8), float32] */;
    %554 = %552.1;
    %555 = @func_16158() /* ty=Tensor[(13, 7, 8), float32] */;
    (%553, %554, %555)
  };
  %556() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_18247() -> (Tensor[(13, 7, 8), float32],) {
  %559 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %557 = @func_10647() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %558 = %557.0;
    (%558,)
  };
  %559() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_18642() -> Tensor[(192, 1), int64] {
  @func_11742() /* ty=Tensor[(192, 1), int64] */
}

def @func_14363(%var_14361: Tensor[(4, 15, 8), int32]) -> (Tensor[(4, 15, 8), int32], Tensor[(13, 7, 8), float32]) {
  @func_14360(%var_14361) /* ty=(Tensor[(4, 15, 8), int32], Tensor[(13, 7, 8), float32]) */
}

def @func_10104() -> (Tensor[(13, 7, 8), float32],) {
  @func_10102() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_11927() -> (Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) {
  @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_18730(%var_18686: Tensor[(990), int64]) -> (Tensor[(13, 7, 8), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(1, 28), float32], Tensor[(1, 7, 2), float32], Tensor[(990), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %560 = @func_14992() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), int64]) */;
  %561 = cast(meta[relay.Constant][27] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %562 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 28), float32] */, dtype="float32") /* ty=Tensor[(1, 28), float32] */;
  %563 = reshape(%561, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %564 = reshape(%562, newshape=[1, 28]) /* ty=Tensor[(1, 28), float32] */;
  %565 = @func_6582(%563, %564) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) */;
  %566 = cast(%var_18686, dtype="int64") /* ty=Tensor[(990), int64] */;
  %567 = cast(%var_18686, dtype="int64") /* ty=Tensor[(990), int64] */;
  %568 = reshape(%566, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), int64] */;
  %569 = reshape(%567, newshape=[15, 6, 11]) /* ty=Tensor[(15, 6, 11), int64] */;
  %570 = @func_5172(%568, %569) /* ty=(Tensor[(15, 6, 11), int64], Tensor[(1, 7, 2), float32], Tensor[(14), float32]) */;
  %571 = @func_10681() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %572 = %560.1;
  %573 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  %574 = @func_9157() /* ty=Tensor[(13, 7, 8), float32] */;
  %575 = %565.6;
  %576 = %570.1;
  %577 = @func_18426() /* ty=Tensor[(13, 7, 8), float32] */;
  %578 = %571.0;
  (%572, %573, %574, %575, meta[relay.Constant][27] /* ty=Tensor[(192), int64] */, meta[relay.Constant][28] /* ty=Tensor[(1, 28), float32] */, %576, %var_18686, %577, %578)
}

def @func_4526() -> Tensor[(13, 7, 8), float32] {
  @func_4524() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_9947() -> (Tensor[(13, 7, 8), float32],) {
  @func_9945() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_5128(%var_5126: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) {
  @func_5125(%var_5126) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) */
}

def @func_19156(%var_19154: Tensor[(13, 8, 6), float64]) -> (Tensor[(13, 8, 6), float32],) {
  @func_19153(%var_19154) /* ty=(Tensor[(13, 8, 6), float32],) */
}

def @func_11653(%var_11648: Tensor[(1, 2, 1), float32]) -> (Tensor[(1, 2, 1), float32], Tensor[(13, 7, 8), float32]) {
  %579 = cast(%var_11648, dtype="float32") /* ty=Tensor[(1, 2, 1), float32] */;
  %580 = @func_8905() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %581 = log(%579) /* ty=Tensor[(1, 2, 1), float32] */;
  %582 = %580.0;
  (%581, %582)
}

def @func_14721() -> (Tensor[(13, 7, 8), float32],) {
  %583 = @func_11948() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) */;
  %584 = %583.0;
  (%584,)
}

def @func_4694() -> Tensor[(13, 7, 8), float32] {
  %586 = fn () -> Tensor[(13, 7, 8), float32] {
    %585 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %585.0
  };
  %586() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_18461() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %587 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
  %588 = @func_13717() /* ty=Tensor[(13, 7, 8), float32] */;
  (%587, %588)
}

def @func_13409() -> (Tensor[(1, 8, 6), float64], Tensor[(28), float32], Tensor[(12, 60), int32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], bool) {
  @func_13407() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(28), float32], Tensor[(12, 60), int32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], bool) */
}

def @func_20694() -> (Tensor[(13, 7, 8), float32],) {
  %589 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  (%589,)
}

def @func_11196() -> Tensor[(13, 7, 8), float32] {
  %591 = fn () -> Tensor[(13, 7, 8), float32] {
    %590 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %590.0
  };
  %591() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_14994() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), int64]) {
  @func_14992() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), int64]) */
}

def @func_18176() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %592 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %593 = %592.0;
  %594 = @func_17723() /* ty=Tensor[(13, 7, 8), float32] */;
  (%593, %594)
}

def @func_4832() -> (Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(6, 15, 3), int64]) {
  @func_4830() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(6, 15, 3), int64]) */
}

def @func_10557() -> Tensor[(13, 7, 8), float32] {
  %595 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %595.0
}

def @func_21023() -> Tensor[(13, 7, 8), float32] {
  %596 = @func_13983() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %596.0
}

def @func_6311() -> Tensor[(13, 7, 8), float64] {
  %597 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  asinh(%598) /* ty=Tensor[(13, 7, 8), float64] */
}

def @func_17724() -> Tensor[(13, 7, 8), float32] {
  %599 = fn () -> Tensor[(13, 7, 8), float32] {
    @func_4693() /* ty=Tensor[(13, 7, 8), float32] */
  };
  %599() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_10088() -> (Tensor[(13, 7, 8), float32],) {
  %600 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %601 = %600.0;
  (%601,)
}

def @func_20638() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %604 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %602 = @func_20544() /* ty=Tensor[(13, 7, 8), float32] */;
    %603 = @func_19384() /* ty=Tensor[(13, 7, 8), float32] */;
    (%602, %603)
  };
  %604() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_6258() -> Tensor[(13, 7, 8), float32] {
  %605 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %605.0
}

def @func_8329() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) {
  @func_8327() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) */
}

def @func_17486() -> (Tensor[(13, 7, 8), float32],) {
  %606 = @func_14386() /* ty=Tensor[(13, 7, 8), float32] */;
  (%606,)
}

def @func_11925() -> (Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) {
  %607 = @func_9867() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool]) */;
  %608 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %609 = %607.0;
  %610 = @func_7620() /* ty=Tensor[(528), float32] */;
  %611 = %608.0;
  (%609, %610, %611)
}

def @func_11238() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %612 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %613 = %612.0;
  %614 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  (%613, %614)
}

def @func_6763() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_8820() -> (Tensor[(13, 7, 8), float32],) {
  %617 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %615 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %616 = %615.0;
    (%616,)
  };
  %617() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_11756() -> Tensor[(13, 7, 8), float32] {
  %619 = fn () -> Tensor[(13, 7, 8), float32] {
    %618 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
    %618.0
  };
  %619() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_9867() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool]) {
  %620 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %621 = @func_8251() /* ty=(Tensor[(13, 7, 8), bool],) */;
  %622 = %620.0;
  %623 = %621.0;
  (%622, %623)
}

def @func_20546() -> Tensor[(13, 7, 8), float32] {
  @func_20544() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_12540() -> (Tensor[(13, 7, 8), float32],) {
  %626 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %624 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %625 = %624.0;
    (%625,)
  };
  %626() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_12611() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_12609() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_10721() -> (Tensor[(1, 8, 6), float64],) {
  @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */
}

def @func_14050() -> Tensor[(13, 7, 8), float32] {
  @func_14048() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_7279() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %633 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %627 = @func_6266() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %628 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %629 = %628.0;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
    %631 = %627.0;
    %632 = cos(%630) /* ty=Tensor[(13, 7, 8), float32] */;
    (%631, %632)
  };
  %633() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_13274(%var_13270: Tensor[(1, 378), uint32], %var_13271: Tensor[(720), int32], %var_13272: Tensor[(14), float32], %var_13273: int64) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(63), uint32], Tensor[(1, 378), uint32], Tensor[(9, 6, 7), bool], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64]) {
  @func_13268(%var_13270, %var_13271, %var_13272, %var_13273) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(63), uint32], Tensor[(1, 378), uint32], Tensor[(9, 6, 7), bool], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64]) */
}

def @func_12609() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %634 = @func_10498() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %635 = @func_7188() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %636 = %634.0;
  %637 = %635.0;
  (%636, %637)
}

def @func_8500(%var_8499: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(270), int64], Tensor[(1, 8, 9), uint32], uint32, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %651 = fn (%var_8460: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(270), int64], Tensor[(1, 8, 9), uint32], uint32, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %638 = @func_5316() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
    %639 = cast(%var_8460, dtype="int64") /* ty=Tensor[(270), int64] */;
    %640 = reshape(%639, newshape=[270]) /* ty=Tensor[(270), int64] */;
    %641 = @func_8310(%640) /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(1, 8, 6), float64], Tensor[(270), int64]) */;
    %642 = cast(meta[relay.Constant][29] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %643 = reshape(%642, newshape=[]) /* ty=uint32 */;
    %644 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %645 = @func_7488() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) */;
    %646 = %638.0;
    %647 = %641.3;
    %648 = @func_4371(%643) /* ty=Tensor[(1, 8, 9), uint32] */;
    %649 = %644.0;
    %650 = %645.3;
    (%646, %647, %var_8460, %648, meta[relay.Constant][29] /* ty=uint32 */, %649, %650)
  };
  %651(%var_8499) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(270), int64], Tensor[(1, 8, 9), uint32], uint32, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_15178() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %655 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %652 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %653 = @func_6897() /* ty=Tensor[(13, 7, 8), float32] */;
    %654 = %652.0;
    (%653, %654)
  };
  %655() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_16800() -> Tensor[(13, 7, 8), float32] {
  %656 = @func_10681() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %656.0
}

def @func_17714() -> (Tensor[(13, 7, 8), float32],) {
  %657 = @func_15818() /* ty=Tensor[(13, 7, 8), float32] */;
  (%657,)
}

def @func_18889() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(48), bool]) {
  %664 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(48), bool]) {
    %658 = @func_12312() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %659 = @func_9867() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool]) */;
    %660 = @func_12874() /* ty=(Tensor[(48), bool],) */;
    %661 = %658.2;
    %662 = %659.1;
    %663 = %660.0;
    (%661, %662, %663)
  };
  %664() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(48), bool]) */
}

def @func_19709() -> (Tensor[(13, 7, 8), float32],) {
  %665 = @func_18001() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %666 = %665.0;
  (%666,)
}

def @func_7113() -> Tensor[(13, 7, 8), float32] {
  %668 = fn () -> Tensor[(13, 7, 8), float32] {
    %667 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %667.0
  };
  %668() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_11537() -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192, 1), int64]) {
  %669 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %670 = cast(meta[relay.Constant][30] /* ty=Tensor[(192, 1), int64] */, dtype="int64") /* ty=Tensor[(192, 1), int64] */;
  %671 = reshape(%669, newshape=[]) /* ty=int64 */;
  %672 = reshape(%670, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %673 = @func_203(%671, %672) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %674 = @func_9982() /* ty=Tensor[(13, 7, 8), float32] */;
  %675 = %673.0;
  (%674, %675, 10 /* ty=int64 */, meta[relay.Constant][30] /* ty=Tensor[(192, 1), int64] */)
}

def @func_20003() -> (Tensor[(1, 8, 6), float64],) {
  %678 = fn () -> (Tensor[(1, 8, 6), float64],) {
    %676 = @func_19216() /* ty=(Tensor[(1, 8, 6), float64],) */;
    %677 = %676.0;
    (%677,)
  };
  %678() /* ty=(Tensor[(1, 8, 6), float64],) */
}

def @func_17716() -> (Tensor[(13, 7, 8), float32],) {
  @func_17714() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_16678() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_16676() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_10296() -> (Tensor[(13, 7, 8), float32],) {
  @func_10294() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_611(%var_609: Tensor[(8, 6, 15), int32], %var_610: Tensor[(14), float32]) -> (Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) {
  @func_607(%var_609, %var_610) /* ty=(Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) */
}

def @func_7440() -> (Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_20518() -> Tensor[(13, 7, 8), float32] {
  %680 = fn () -> Tensor[(13, 7, 8), float32] {
    %679 = @func_17921() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */;
    %679.0
  };
  %680() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_15805(%var_15793: Tensor[(378, 1), uint32], %var_15795: Tensor[(14), float32], %var_15798: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(24, 22), float32], Tensor[(1, 63), uint32], Tensor[(378, 1), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32]) {
  %681 = @func_14083() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %682 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 63), uint32] */, dtype="uint32") /* ty=Tensor[(1, 63), uint32] */;
  %683 = cast(%var_15793, dtype="uint32") /* ty=Tensor[(378, 1), uint32] */;
  %684 = cast(meta[relay.Constant][32] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %685 = cast(%var_15795, dtype="float32") /* ty=Tensor[(14), float32] */;
  %686 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 4), float32] */;
  %687 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %688 = cast(%var_15798, dtype="float64") /* ty=Tensor[(126), float64] */;
  %689 = reshape(%682, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %690 = reshape(%683, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %691 = reshape(%684, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %692 = reshape(%685, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %693 = reshape(%686, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %694 = reshape(%687, newshape=[]) /* ty=int64 */;
  %695 = reshape(%688, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %696 = @func_9444(%689, %690, %691, %692, %693, %694, %695) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) */;
  %697 = %681.0;
  %698 = @func_7197() /* ty=Tensor[(48), bool] */;
  %699 = %696.16;
  %700 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  (%697, %698, %699, meta[relay.Constant][31] /* ty=Tensor[(1, 63), uint32] */, %var_15793, meta[relay.Constant][32] /* ty=Tensor[(720), int32] */, %var_15795, meta[relay.Constant][33] /* ty=Tensor[(7, 4), float32] */, -5 /* ty=int64 */, %var_15798, %700)
}

def @func_12234() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_12232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_8907() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_8905() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_17842(%var_17839: Tensor[(260), float32], %var_17840: Tensor[(192), int64], %var_17841: int64) -> (Tensor[(13, 7, 8), float32], Tensor[(260), float32], Tensor[(192), int64], int64, int64, Tensor[(?, 96), float64], Tensor[(1, 96), float32], Tensor[(13, 7, 8), float32]) {
  @func_17837(%var_17839, %var_17840, %var_17841) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(260), float32], Tensor[(192), int64], int64, int64, Tensor[(?, 96), float64], Tensor[(1, 96), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_6612() -> (Tensor[(13, 7, 8), float32],) {
  %703 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %701 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %702 = %701.0;
    (%702,)
  };
  %703() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_14048() -> Tensor[(13, 7, 8), float32] {
  %704 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %704.0
}

def @func_18733(%var_18731: Tensor[(990), int64]) -> (Tensor[(13, 7, 8), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(1, 28), float32], Tensor[(1, 7, 2), float32], Tensor[(990), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_18730(%var_18731) /* ty=(Tensor[(13, 7, 8), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(1, 28), float32], Tensor[(1, 7, 2), float32], Tensor[(990), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_9464(%var_9454: Tensor[(7, 10, 11), float32]) -> Tensor[(7, 10, 11), float64] {
  %705 = cast(%var_9454, dtype="float32") /* ty=Tensor[(7, 10, 11), float32] */;
  %706 = log2(%705) /* ty=Tensor[(7, 10, 11), float32] */;
  %707 = cast(%706, dtype="float64") /* ty=Tensor[(7, 10, 11), float64] */;
  atanh(%707) /* ty=Tensor[(7, 10, 11), float64] */
}

def @func_13192(%var_13190: Tensor[(11, 6, 9), float64]) -> Tensor[(11, 6, 9), float64] {
  @func_13189(%var_13190) /* ty=Tensor[(11, 6, 9), float64] */
}

def @func_17390() -> (Tensor[(1, 8, 6), float64],) {
  @func_17388() /* ty=(Tensor[(1, 8, 6), float64],) */
}

def @func_17137() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_17135() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_14431(%var_14395: Tensor[(15, 5, 6), int8]) -> (Tensor[(15, 5, 6), uint32], Tensor[(15, 5, 6), float32], Tensor[(13, 7, 8), float32]) {
  %708 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 5, 6), int8] */, dtype="uint32") /* ty=Tensor[(15, 5, 6), uint32] */;
  %709 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(15, 5, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 5, 6), int8] */, dtype="uint32") /* ty=Tensor[(15, 5, 6), uint32] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %712 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 5, 6), int8] */, dtype="int8") /* ty=Tensor[(15, 5, 6), int8] */;
  %713 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(15, 5, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %714 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 5, 6), int8] */, dtype="int8") /* ty=Tensor[(15, 5, 6), int8] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %716 = subtract(%714, %715) /* ty=Tensor[(15, 5, 6), int8] */;
  %717 = cast(%var_14395, dtype="uint32") /* ty=Tensor[(15, 5, 6), uint32] */;
  %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%716, dtype="uint32") /* ty=Tensor[(15, 5, 6), uint32] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %721 = bitwise_or(%719, %720) /* ty=Tensor[(15, 5, 6), uint32] */;
  %722 = cast(%721, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %723 = @func_12348() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %724 = left_shift(%710, %711) /* ty=Tensor[(15, 5, 6), uint32] */;
  %725 = cosh(%722) /* ty=Tensor[(15, 5, 6), float32] */;
  %726 = %723.0;
  (%724, %725, %726)
}

def @func_17469() -> Tensor[(48), bool] {
  %727 = @func_12874() /* ty=(Tensor[(48), bool],) */;
  %727.0
}

def @func_5125(%var_5106: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) {
  %728 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  %729 = cast(%728, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %730 = cast(%var_5106, dtype="float32") /* ty=Tensor[(28), float32] */;
  %731 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %732 = reshape(%730, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
  %733 = reshape(%731, newshape=[]) /* ty=int64 */;
  %734 = @func_2704(%732, %733) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
  %735 = tan(%729) /* ty=Tensor[(13, 7, 8), float32] */;
  %736 = %734.2;
  (%735, %736, %var_5106, -8 /* ty=int64 */)
}

def @func_19694() -> (Tensor[(13, 7, 8), float32],) {
  %739 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %737 = @func_12232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %738 = %737.2;
    (%738,)
  };
  %739() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_21085() -> (Tensor[(13, 7, 8), float32],) {
  %740 = @func_18973() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192, 1), int64]) */;
  %741 = %740.0;
  (%741,)
}

def @func_18938() -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
  @func_18936() /* ty=(Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_15944() -> bool {
  @func_15942() /* ty=bool */
}

def @func_19310() -> Tensor[(13, 7, 8), float32] {
  %743 = fn () -> Tensor[(13, 7, 8), float32] {
    %742 = @func_14721() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %742.0
  };
  %743() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_20241() -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool]) {
  @func_20239() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool]) */
}

def @func_2707(%var_2705: Tensor[(7, 1, 4), float32], %var_2706: int64) -> (Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) {
  %757 = fn (%var_2669: Tensor[(7, 1, 4), float32], %var_2690: int64) -> (Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) {
    %744 = cast(%var_2669, dtype="float32") /* ty=Tensor[(7, 1, 4), float32] */;
    %745 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
    %746 = cast(%var_2669, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
    %747 = cast(%var_2690, dtype="int64") /* ty=int64 */;
    %748 = cast(meta[relay.Constant][37] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
    %749 = cast(meta[relay.Constant][38] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %750 = reshape(%747, newshape=[]) /* ty=int64 */;
    %751 = reshape(%748, newshape=[192]) /* ty=Tensor[(192), int64] */;
    %752 = reshape(%749, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %753 = @func_2257(%750, %751, %752) /* ty=(Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) */;
    %754 = floor_mod(%744, %745) /* ty=Tensor[(7, 15, 4), float32] */;
    %755 = asin(%746) /* ty=Tensor[(7, 1, 4), float64] */;
    %756 = %753.0;
    (%754, %755, %756, %var_2690, meta[relay.Constant][37] /* ty=Tensor[(192), int64] */, meta[relay.Constant][38] /* ty=Tensor[(720), int32] */)
  };
  %757(%var_2705, %var_2706) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */
}

def @func_10719() -> (Tensor[(1, 8, 6), float64],) {
  %758 = @func_8057() /* ty=Tensor[(1, 8, 6), float64] */;
  (%758,)
}

def @func_9543() -> (bool,) {
  %761 = fn () -> (bool,) {
    %759 = @func_7488() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) */;
    %760 = %759.2;
    (%760,)
  };
  %761() /* ty=(bool,) */
}

def @func_20769() -> Tensor[(13, 7, 8), float32] {
  @func_20767() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_5898() -> (Tensor[(13, 7, 8), float32],) {
  %762 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %763 = %762.0;
  (%763,)
}

def @func_15810(%var_15807: Tensor[(378, 1), uint32], %var_15808: Tensor[(14), float32], %var_15809: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(24, 22), float32], Tensor[(1, 63), uint32], Tensor[(378, 1), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32]) {
  @func_15805(%var_15807, %var_15808, %var_15809) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(24, 22), float32], Tensor[(1, 63), uint32], Tensor[(378, 1), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_21263() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  %764 = @func_8586() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %765 = @func_17197() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %766 = %764.1;
  %767 = %765.0;
  (%766, %767)
}

def @func_21774() -> (Tensor[(13, 7, 8), float32],) {
  @func_21772() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_8847() -> (Tensor[(13, 7, 8), float32],) {
  @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_11683() -> bool {
  %769 = fn () -> bool {
    %768 = @func_9542() /* ty=(bool,) */;
    %768.0
  };
  %769() /* ty=bool */
}

def @func_5374() -> (Tensor[(13, 7, 8), float32],) {
  %770 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %771 = %770.0;
  (%771,)
}

def @func_7188() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %772 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %773 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %775 = %772.0;
  %776 = sinh(%774) /* ty=Tensor[(13, 7, 8), float32] */;
  (%775, %776)
}

def @func_17471() -> Tensor[(48), bool] {
  @func_17469() /* ty=Tensor[(48), bool] */
}

def @func_18632() -> (Tensor[(48), bool],) {
  %777 = @func_17592() /* ty=Tensor[(48), bool] */;
  (%777,)
}

def @func_17444() -> (Tensor[(13, 7, 8), float32],) {
  %780 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %778 = @func_8819() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %779 = %778.0;
    (%779,)
  };
  %780() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_12187() -> Tensor[(13, 7, 8), float32] {
  %782 = fn () -> Tensor[(13, 7, 8), float32] {
    %781 = @func_12067() /* ty=(bool, Tensor[(13, 7, 8), float32]) */;
    %781.1
  };
  %782() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_4373(%var_4372: uint32) -> Tensor[(1, 8, 9), uint32] {
  %785 = fn (%var_4359: uint32) -> Tensor[(1, 8, 9), uint32] {
    %783 = cast(%var_4359, dtype="uint32") /* ty=uint32 */;
    %784 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 8, 9), uint32] */, dtype="uint32") /* ty=Tensor[(1, 8, 9), uint32] */;
    bitwise_and(%783, %784) /* ty=Tensor[(1, 8, 9), uint32] */
  };
  %785(%var_4372) /* ty=Tensor[(1, 8, 9), uint32] */
}

def @func_15863() -> (Tensor[(48), bool],) {
  %786 = @func_9308() /* ty=Tensor[(48), bool] */;
  (%786,)
}

def @func_14326() -> (Tensor[(13, 7, 8), int64], Tensor[(96), float32], Tensor[(90, 3), int64], Tensor[(96), float32]) {
  @func_14324() /* ty=(Tensor[(13, 7, 8), int64], Tensor[(96), float32], Tensor[(90, 3), int64], Tensor[(96), float32]) */
}

def @func_2261(%var_2258: int64, %var_2259: Tensor[(192), int64], %var_2260: Tensor[(720), int32]) -> (Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) {
  %813 = fn (%var_2208: int64, %var_2209: Tensor[(192), int64], %var_2254: Tensor[(720), int32]) -> (Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) {
    %787 = cast(%var_2208, dtype="int64") /* ty=int64 */;
    %788 = cast(%var_2209, dtype="int64") /* ty=Tensor[(192), int64] */;
    %789 = reshape(%787, newshape=[]) /* ty=int64 */;
    %790 = reshape(%788, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
    %791 = @func_203(%789, %790) /* ty=(Tensor[(16, 1, 12), int64],) */;
    %792 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 1, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 1, 12), float64] */;
    %793 = asin(%792) /* ty=Tensor[(6, 1, 12), float64] */;
    %794 = cast(%793, dtype="float32") /* ty=Tensor[(6, 1, 12), float32] */;
    %795 = sin(%794) /* ty=Tensor[(6, 1, 12), float32] */;
    %796 = cast(%795, dtype="float64") /* ty=Tensor[(6, 1, 12), float64] */;
    %797 = cast(%var_2208, dtype="int64") /* ty=int64 */;
    %798 = %791.0;
    %799 = cast(%798, dtype="int64") /* ty=Tensor[(16, 1, 12), int64] */;
    %800 = reshape(%797, newshape=[]) /* ty=int64 */;
    %801 = reshape(%799, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
    %802 = @func_203(%800, %801) /* ty=(Tensor[(16, 1, 12), int64],) */;
    %803 = cast(%795, dtype="float32") /* ty=Tensor[(6, 1, 12), float32] */;
    %804 = cast(%var_2254, dtype="int32") /* ty=Tensor[(720), int32] */;
    %805 = cast(meta[relay.Constant][41] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %806 = reshape(%804, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), int32] */;
    %807 = reshape(%805, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %808 = @func_607(%806, %807) /* ty=(Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) */;
    %809 = atanh(%796) /* ty=Tensor[(6, 1, 12), float64] */;
    %810 = %802.0;
    %811 = acosh(%803) /* ty=Tensor[(6, 1, 12), float32] */;
    %812 = %808.3;
    (%798, %var_2208, %var_2209, %809, %810, %811, %812, %var_2254, meta[relay.Constant][41] /* ty=Tensor[(14), float32] */)
  };
  %813(%var_2258, %var_2259, %var_2260) /* ty=(Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) */
}

def @func_17694() -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32]) {
  %817 = fn () -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32]) {
    %814 = @func_11351() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %815 = @func_17592() /* ty=Tensor[(48), bool] */;
    %816 = %814.1;
    (%815, %816)
  };
  %817() /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32]) */
}

def @func_18002() -> (Tensor[(13, 7, 8), float32],) {
  %819 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %818 = @func_14886() /* ty=Tensor[(13, 7, 8), float32] */;
    (%818,)
  };
  %819() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_4756(%var_4755: Tensor[(1, 9, 14), float64]) -> Tensor[(1, 9, 14), float64] {
  %821 = fn (%var_4751: Tensor[(1, 9, 14), float64]) -> Tensor[(1, 9, 14), float64] {
    %820 = cast(%var_4751, dtype="float64") /* ty=Tensor[(1, 9, 14), float64] */;
    sigmoid(%820) /* ty=Tensor[(1, 9, 14), float64] */
  };
  %821(%var_4755) /* ty=Tensor[(1, 9, 14), float64] */
}

def @func_11351() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %822 = @func_7488() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], bool, Tensor[(13, 7, 8), float32]) */;
  %823 = @func_10898() /* ty=Tensor[(13, 7, 8), float32] */;
  %824 = %822.3;
  (%823, %824)
}

def @func_9308() -> Tensor[(48), bool] {
  @func_7197() /* ty=Tensor[(48), bool] */
}

def @func_5317() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) {
  %832 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) {
    %825 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %826 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %827 = reshape(%825, newshape=[]) /* ty=bool */;
    %828 = reshape(%826, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), bool] */;
    %829 = @func_2307(%827, %828) /* ty=(Tensor[(1, 8, 6), bool], Tensor[(1, 8, 6), float64]) */;
    %830 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
    %831 = %829.1;
    (%830, %831, True /* ty=bool */, meta[relay.Constant][42] /* ty=Tensor[(48), bool] */)
  };
  %832() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */
}

def @func_16351() -> (Tensor[(13, 7, 8), float32],) {
  @func_16349() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_428(%var_423: Tensor[(1, 7, 2), float32]) -> (Tensor[(1, 7, 2), float32],) {
  %833 = cast(%var_423, dtype="float32") /* ty=Tensor[(1, 7, 2), float32] */;
  %834 = asin(%833) /* ty=Tensor[(1, 7, 2), float32] */;
  (%834,)
}

def @func_11240() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_11238() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_6267() -> (Tensor[(13, 7, 8), float32],) {
  %837 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %835 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %836 = %835.0;
    (%836,)
  };
  %837() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_14360(%var_14352: Tensor[(4, 15, 8), int32]) -> (Tensor[(4, 15, 8), int32], Tensor[(13, 7, 8), float32]) {
  %838 = cast(%var_14352, dtype="int32") /* ty=Tensor[(4, 15, 8), int32] */;
  %839 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(4, 15, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 15, 8), int32] */, dtype="int32") /* ty=Tensor[(4, 15, 8), int32] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %842 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %843 = right_shift(%840, %841) /* ty=Tensor[(4, 15, 8), int32] */;
  %844 = %842.0;
  (%843, %844)
}

def @func_10294() -> (Tensor[(13, 7, 8), float32],) {
  %845 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %846 = %845.0;
  (%846,)
}

def @func_6420() -> Tensor[(13, 7, 8), float32] {
  @func_6418() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_6898() -> Tensor[(13, 7, 8), float32] {
  %848 = fn () -> Tensor[(13, 7, 8), float32] {
    %847 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %847.0
  };
  %848() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_9128(%var_9096: Tensor[(1, 3, 6), float32]) -> Tensor[(?, 3, 6), bool] {
  %849 = cast(%var_9096, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %850 = tan(%849) /* ty=Tensor[(1, 3, 6), float32] */;
  %851 = cast(%850, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %852 = atanh(%851) /* ty=Tensor[(1, 3, 6), float32] */;
  %853 = cast(%var_9096, dtype="bool") /* ty=Tensor[(1, 3, 6), bool] */;
  %854 = shape_of(%852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%852, dtype="bool") /* ty=Tensor[(1, 3, 6), bool] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%855, %856) /* ty=Tensor[(?, 3, 6), bool] */
}

def @func_9589() -> (Tensor[(48), bool],) {
  %858 = fn () -> (Tensor[(48), bool],) {
    %857 = @func_9308() /* ty=Tensor[(48), bool] */;
    (%857,)
  };
  %858() /* ty=(Tensor[(48), bool],) */
}

def @func_10487(%var_10486: Tensor[(14, 8, 4), float32]) -> (Tensor[(14, 8, 4), float32], Tensor[(13, 7, 8), float32]) {
  %866 = fn (%var_10472: Tensor[(14, 8, 4), float32]) -> (Tensor[(14, 8, 4), float32], Tensor[(13, 7, 8), float32]) {
    %859 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 8, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
    %860 = shape_of(%var_10472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %861 = cast(%var_10472, dtype="float32") /* ty=Tensor[(14, 8, 4), float32] */;
    %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %863 = @func_8905() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %864 = power(%861, %862) /* ty=Tensor[(14, 8, 4), float32] */;
    %865 = %863.0;
    (%864, %865)
  };
  %866(%var_10486) /* ty=(Tensor[(14, 8, 4), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_15466() -> Tensor[(13, 7, 8), float32] {
  %867 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
  %867.0
}

def @func_8685(%var_8683: Tensor[(28), float32], %var_8684: int64) -> (Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) {
  @func_8681(%var_8683, %var_8684) /* ty=(Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) */
}

def @func_13533() -> (Tensor[(13, 7, 8), float32],) {
  %870 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %868 = @func_12005() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %869 = %868.0;
    (%869,)
  };
  %870() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_14502(%var_14499: Tensor[(363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(363), bool]) {
  %871 = @func_12087() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %872 = cast(%var_14499, dtype="bool") /* ty=Tensor[(363), bool] */;
  %873 = cast(%var_14499, dtype="bool") /* ty=Tensor[(363), bool] */;
  %874 = reshape(%872, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), bool] */;
  %875 = reshape(%873, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), bool] */;
  %876 = %871.0;
  %877 = @func_7725(%874, %875) /* ty=Tensor[(11, 3, 11), bool] */;
  (%876, %877, %var_14499)
}

def @func_20948() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %878 = @func_17443() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %879 = @func_15426() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64]) */;
  %880 = @func_13100() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %881 = %878.0;
  %882 = %879.0;
  %883 = %880.0;
  (%881, %882, %883)
}

def @func_15427() -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64]) {
  %888 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64]) {
    %884 = @func_13983() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %885 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %886 = %884.1;
    %887 = %885.3;
    (%886, %887)
  };
  %888() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64]) */
}

def @func_14717(%var_14716: Tensor[(448), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(14, 8, 4), float32], Tensor[(448), float32], Tensor[(13, 7, 8), float32]) {
  %899 = fn (%var_14694: Tensor[(448), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(14, 8, 4), float32], Tensor[(448), float32], Tensor[(13, 7, 8), float32]) {
    %889 = @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %890 = @func_7641() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %891 = cast(%var_14694, dtype="float32") /* ty=Tensor[(448), float32] */;
    %892 = reshape(%891, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float32] */;
    %893 = @func_10485(%892) /* ty=(Tensor[(14, 8, 4), float32], Tensor[(13, 7, 8), float32]) */;
    %894 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %895 = %889.1;
    %896 = %890.0;
    %897 = %893.0;
    %898 = %894.0;
    (%895, %896, %897, %var_14694, %898)
  };
  %899(%var_14716) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(14, 8, 4), float32], Tensor[(448), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_7091() -> (Tensor[(13, 7, 8), float32],) {
  @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_17910() -> Tensor[(13, 7, 8), float32] {
  @func_17908() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_18428() -> Tensor[(13, 7, 8), float32] {
  @func_18426() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_18076() -> (Tensor[(13, 7, 8), float32],) {
  %900 = @func_15818() /* ty=Tensor[(13, 7, 8), float32] */;
  (%900,)
}

def @func_13407() -> (Tensor[(1, 8, 6), float64], Tensor[(28), float32], Tensor[(12, 60), int32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], bool) {
  %901 = @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %902 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 60), int32] */, dtype="int32") /* ty=Tensor[(12, 60), int32] */;
  %903 = reshape(%902, newshape=[12, 60]) /* ty=Tensor[(12, 60), int32] */;
  %904 = @func_10210(%903) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(12, 60), int32]) */;
  %905 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %906 = @func_9542() /* ty=(bool,) */;
  %907 = %901.0;
  %908 = %904.3;
  %909 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  %910 = @func_11195() /* ty=Tensor[(13, 7, 8), float32] */;
  %911 = %905.0;
  %912 = %906.0;
  (%907, %908, meta[relay.Constant][45] /* ty=Tensor[(12, 60), int32] */, %909, %910, %911, %912)
}

def @func_12375() -> Tensor[(13, 7, 8), float32] {
  %913 = @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %913.2
}

def @func_13688() -> Tensor[(13, 7, 8), float32] {
  %915 = fn () -> Tensor[(13, 7, 8), float32] {
    %914 = @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */;
    %914.0
  };
  %915() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_4621(%var_4619: Tensor[(270), int64], %var_4620: Tensor[(96), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) {
  %924 = fn (%var_4609: Tensor[(270), int64], %var_4610: Tensor[(96), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) {
    %916 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %917 = cast(%var_4609, dtype="int64") /* ty=Tensor[(270), int64] */;
    %918 = cast(%var_4610, dtype="float32") /* ty=Tensor[(96), float32] */;
    %919 = reshape(%917, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
    %920 = reshape(%918, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
    %921 = @func_3580(%919, %920) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
    %922 = %916.0;
    %923 = %921.4;
    (%922, %923, %var_4609, %var_4610)
  };
  %924(%var_4619, %var_4620) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */
}

def @func_15591() -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) {
  %925 = @func_14083() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %926 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 4), bool] */, dtype="bool") /* ty=Tensor[(12, 4), bool] */;
  %927 = reshape(%926, newshape=[48]) /* ty=Tensor[(48), bool] */;
  %928 = @func_4977(%927) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
  %929 = %925.0;
  %930 = %928.3;
  %931 = @func_11755() /* ty=Tensor[(13, 7, 8), float32] */;
  (%929, %930, meta[relay.Constant][46] /* ty=Tensor[(12, 4), bool] */, %931)
}

def @func_18463() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_18461() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_11832() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_11830() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_17399() -> Tensor[(720, 10), float64] {
  %932 = @func_10791() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */;
  %932.0
}

def @func_9273(%var_9272: Tensor[(13, 7, 8), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(13, 7, 8), float64]) {
  %947 = fn (%var_9261: Tensor[(13, 7, 8), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(13, 7, 8), float64]) {
    %933 = @func_8774() /* ty=(Tensor[(192), int64],) */;
    %934 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
    %935 = cast(%934, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
    %936 = log(%935) /* ty=Tensor[(13, 7, 8), float32] */;
    %937 = cast(%var_9261, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
    %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
    %939 = cast(%936, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
    %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %941 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
    %942 = @func_7970() /* ty=Tensor[(1, 8, 6), float64] */;
    %943 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
    %944 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    %945 = %933.0;
    %946 = minimum(%939, %940) /* ty=Tensor[(13, 7, 8), float64] */;
    (%941, %942, %943, %944, %945, %946)
  };
  %947(%var_9272) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(13, 7, 8), float64]) */
}

def @func_12068() -> (bool, Tensor[(13, 7, 8), float32]) {
  %952 = fn () -> (bool, Tensor[(13, 7, 8), float32]) {
    %948 = @func_9542() /* ty=(bool,) */;
    %949 = @func_6266() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %950 = %948.0;
    %951 = %949.0;
    (%950, %951)
  };
  %952() /* ty=(bool, Tensor[(13, 7, 8), float32]) */
}

def @func_20457() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %953 = @func_15591() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) */;
  %954 = @func_17741() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %955 = %953.0;
  %956 = @func_11167() /* ty=Tensor[(13, 7, 8), float32] */;
  %957 = %954.0;
  %958 = @func_11755() /* ty=Tensor[(13, 7, 8), float32] */;
  (%955, %956, %957, %958)
}

def @func_21581(%var_21579: Tensor[(720), int32], %var_21580: Tensor[(363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], Tensor[(720), int32], Tensor[(11, 3, 11), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32], Tensor[(2), float32], Tensor[(363), float32]) {
  %979 = fn (%var_21543: Tensor[(720), int32], %var_21553: Tensor[(363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], Tensor[(720), int32], Tensor[(11, 3, 11), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32], Tensor[(2), float32], Tensor[(363), float32]) {
    %959 = @func_12087() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %960 = cast(meta[relay.Constant][47] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %961 = cast(%var_21543, dtype="int32") /* ty=Tensor[(720), int32] */;
    %962 = reshape(%960, newshape=[28]) /* ty=Tensor[(28), float32] */;
    %963 = reshape(%961, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %964 = @func_7361(%962, %963) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */;
    %965 = cast(%var_21553, dtype="bool") /* ty=Tensor[(363), bool] */;
    %966 = reshape(%965, newshape=[363]) /* ty=Tensor[(363), bool] */;
    %967 = @func_14502(%966) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(363), bool]) */;
    %968 = @func_16424() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(3, 90), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32]) */;
    %969 = cast(meta[relay.Constant][48] /* ty=Tensor[(2), float32] */, dtype="float32") /* ty=Tensor[(2), float32] */;
    %970 = reshape(%969, newshape=[1, 2, 1]) /* ty=Tensor[(1, 2, 1), float32] */;
    %971 = @func_11653(%970) /* ty=(Tensor[(1, 2, 1), float32], Tensor[(13, 7, 8), float32]) */;
    %972 = cast(%var_21553, dtype="float32") /* ty=Tensor[(363), float32] */;
    %973 = %959.0;
    %974 = %964.7;
    %975 = %967.1;
    %976 = %968.2;
    %977 = %971.1;
    %978 = cos(%972) /* ty=Tensor[(363), float32] */;
    (%973, %974, meta[relay.Constant][47] /* ty=Tensor[(28), float32] */, %var_21543, %975, %976, %977, meta[relay.Constant][48] /* ty=Tensor[(2), float32] */, %978)
  };
  %979(%var_21579, %var_21580) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], Tensor[(720), int32], Tensor[(11, 3, 11), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32], Tensor[(2), float32], Tensor[(363), float32]) */
}

def @func_18585() -> (Tensor[(728), float32], Tensor[(28), float32], Tensor[(16, ?, 12), float64]) {
  @func_18583() /* ty=(Tensor[(728), float32], Tensor[(28), float32], Tensor[(16, ?, 12), float64]) */
}

def @func_19449(%var_19447: Tensor[(14, 4, 6), float32], %var_19448: Tensor[(14, 4, 6), float32]) -> (Tensor[(14, 4, 6), float32],) {
  @func_19445(%var_19447, %var_19448) /* ty=(Tensor[(14, 4, 6), float32],) */
}

def @func_9698(%var_9696: Tensor[(378), uint32], %var_9697: Tensor[(720), int32]) -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(7, 9), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(28), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1006 = fn (%var_9661: Tensor[(378), uint32], %var_9662: Tensor[(720), int32]) -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(7, 9), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(28), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %980 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 9), uint32] */, dtype="uint32") /* ty=Tensor[(7, 9), uint32] */;
    %981 = cast(%var_9661, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %982 = cast(%var_9662, dtype="int32") /* ty=Tensor[(720), int32] */;
    %983 = cast(meta[relay.Constant][50] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %984 = cast(meta[relay.Constant][51] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %985 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %986 = cast(meta[relay.Constant][52] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %987 = reshape(%980, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %988 = reshape(%981, newshape=[378]) /* ty=Tensor[(378), uint32] */;
    %989 = reshape(%982, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %990 = reshape(%983, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %991 = reshape(%984, newshape=[28]) /* ty=Tensor[(28), float32] */;
    %992 = reshape(%985, newshape=[]) /* ty=int64 */;
    %993 = reshape(%986, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %994 = @func_9444(%987, %988, %989, %990, %991, %992, %993) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) */;
    %995 = cast(meta[relay.Constant][53] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %996 = reshape(%995, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float64] */;
    %997 = @func_8153(%996) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) */;
    %998 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %999 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1000 = @func_8057() /* ty=Tensor[(1, 8, 6), float64] */;
    %1001 = %994.0;
    %1002 = %997.0;
    %1003 = %998.0;
    %1004 = %999.0;
    %1005 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1000, %1001, meta[relay.Constant][49] /* ty=Tensor[(7, 9), uint32] */, %var_9661, %var_9662, meta[relay.Constant][50] /* ty=Tensor[(14), float32] */, meta[relay.Constant][51] /* ty=Tensor[(28), float32] */, 7 /* ty=int64 */, meta[relay.Constant][52] /* ty=Tensor[(126), float64] */, %1002, meta[relay.Constant][53] /* ty=Tensor[(96), float64] */, %1003, %1004, %1005)
  };
  %1006(%var_9696, %var_9697) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(7, 9), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(28), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_10123() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1007 = @func_10037() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1008 = @func_8132() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1009 = %1007.0;
  %1010 = %1008.0;
  (%1009, %1010)
}

def @func_16048(%var_16045: int64, %var_16046: Tensor[(14, 8, 2), int64], %var_16047: Tensor[(18), float32]) -> (Tensor[(14, 8, 2), bool], Tensor[(?, 3, 6), bool], Tensor[(18), float32], bool, Tensor[(13, 7, 8), float32]) {
  @func_16043(%var_16045, %var_16046, %var_16047) /* ty=(Tensor[(14, 8, 2), bool], Tensor[(?, 3, 6), bool], Tensor[(18), float32], bool, Tensor[(13, 7, 8), float32]) */
}

def @func_16947() -> (Tensor[(13, 7, 8), float32],) {
  %1013 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1011 = @func_12312() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %1012 = %1011.2;
    (%1012,)
  };
  %1013() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_19711() -> (Tensor[(13, 7, 8), float32],) {
  @func_19709() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_9158() -> Tensor[(13, 7, 8), float32] {
  %1015 = fn () -> Tensor[(13, 7, 8), float32] {
    %1014 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1014.0
  };
  %1015() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_15746(%var_15744: Tensor[(1, 8, 6), float64]) -> (Tensor[(?, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  @func_15743(%var_15744) /* ty=(Tensor[(?, 8, 6), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_18936() -> (Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) {
  %1016 = @func_12522() /* ty=(Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32]) */;
  %1017 = %1016.0;
  %1018 = @func_18138() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1017, %1018)
}

def @func_16212(%var_16202: Tensor[(7, 4), float32], %var_16203: Tensor[(720, 1), int32]) -> (bool, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(7, 4), float32], Tensor[(720, 1), int32]) {
  %1019 = @func_9542() /* ty=(bool,) */;
  %1020 = @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
  %1021 = cast(%var_16202, dtype="float32") /* ty=Tensor[(7, 4), float32] */;
  %1022 = cast(%var_16203, dtype="int32") /* ty=Tensor[(720, 1), int32] */;
  %1023 = reshape(%1021, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1024 = reshape(%1022, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1025 = @func_7361(%1023, %1024) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */;
  %1026 = %1019.0;
  %1027 = %1020.2;
  %1028 = %1025.0;
  (%1026, %1027, %1028, %var_16202, %var_16203)
}

def @func_19601() -> (Tensor[(13, 7, 8), float32],) {
  %1031 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1029 = @func_11925() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
    %1030 = %1029.0;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_21087() -> (Tensor[(13, 7, 8), float32],) {
  @func_21085() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_20138() -> Tensor[(13, 7, 8), float32] {
  %1032 = fn () -> Tensor[(13, 7, 8), float32] {
    @func_14048() /* ty=Tensor[(13, 7, 8), float32] */
  };
  %1032() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_16676() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1033 = @func_11830() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1034 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  %1035 = %1033.0;
  (%1034, %1035)
}

def @func_19654() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(48), bool]) {
  @func_19652() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(48), bool]) */
}

def @func_21378() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1036 = @func_20166() /* ty=(Tensor[(270), int64], Tensor[(13, 7, 8), float32]) */;
  %1037 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1038 = %1036.1;
  %1039 = %1037.0;
  (%1038, %1039)
}

def @func_17921() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  %1040 = @func_17388() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1041 = @func_9916() /* ty=Tensor[(13, 7, 8), float32] */;
  %1042 = %1040.0;
  (%1041, %1042)
}

def @func_7642() -> (Tensor[(13, 7, 8), float32],) {
  %1044 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1043 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_14132() -> Tensor[(1, 8, 6), float64] {
  @func_14130() /* ty=Tensor[(1, 8, 6), float64] */
}

def @func_17368() -> (Tensor[(1, 8, 6), float64],) {
  @func_17366() /* ty=(Tensor[(1, 8, 6), float64],) */
}

def @func_7686(%var_7672: Tensor[(13, 7, 8), float32], %var_7681: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], Tensor[(720), int32]) {
  %1045 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1046 = %1045.0;
  %1047 = cast(%var_7672, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1048 = shape_of(%1046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1049 = cast(%1046, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1051 = cast(%var_7681, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1052 = cast(meta[relay.Constant][54] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1053 = reshape(%1051, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1054 = reshape(%1052, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1055 = @func_7361(%1053, %1054) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */;
  %1056 = floor_mod(%1049, %1050) /* ty=Tensor[(13, 7, 8), float32] */;
  %1057 = %1055.5;
  (%1056, %1057, %var_7681, meta[relay.Constant][54] /* ty=Tensor[(720), int32] */)
}

def @func_9310() -> Tensor[(48), bool] {
  @func_9308() /* ty=Tensor[(48), bool] */
}

def @func_16349() -> (Tensor[(13, 7, 8), float32],) {
  %1058 = @func_15466() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1058,)
}

def @func_19834(%var_19830: Tensor[(7, 7, 12), uint8]) -> (Tensor[(7, 7, 12), uint8], Tensor[(13, 7, 8), float32], Tensor[(7, 7, 12), int16]) {
  %1059 = cast(meta[relay.Constant][56] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="uint8") /* ty=Tensor[(7, 7, 12), uint8] */;
  %1060 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1061 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="uint8") /* ty=Tensor[(7, 7, 12), uint8] */;
  %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1063 = cast(%var_19830, dtype="int16") /* ty=Tensor[(7, 7, 12), int16] */;
  %1064 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1065 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 7, 12), uint8] */, dtype="int16") /* ty=Tensor[(7, 7, 12), int16] */;
  %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1067 = logical_xor(%1061, %1062) /* ty=Tensor[(7, 7, 12), uint8] */;
  %1068 = @func_14848() /* ty=Tensor[(13, 7, 8), float32] */;
  %1069 = bitwise_and(%1065, %1066) /* ty=Tensor[(7, 7, 12), int16] */;
  (%1067, %1068, %1069)
}

def @func_17401() -> Tensor[(720, 10), float64] {
  @func_17399() /* ty=Tensor[(720, 10), float64] */
}

def @func_16999() -> Tensor[(13, 7, 8), float32] {
  %1070 = fn () -> Tensor[(13, 7, 8), float32] {
    @func_12375() /* ty=Tensor[(13, 7, 8), float32] */
  };
  %1070() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_21842() -> (Tensor[(13, 7, 8), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) {
  %1087 = fn () -> (Tensor[(13, 7, 8), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) {
    %1071 = @func_17262() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(?, 9, 14), float32]) */;
    %1072 = @func_14147() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1073 = cast(meta[relay.Constant][57] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
    %1074 = cast(meta[relay.Constant][58] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %1075 = reshape(%1073, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
    %1076 = reshape(%1074, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %1077 = @func_5258(%1075, %1076) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) */;
    %1078 = cast(meta[relay.Constant][59] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %1079 = cast(meta[relay.Constant][59] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %1080 = reshape(%1078, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %1081 = reshape(%1079, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %1082 = @func_16162() /* ty=Tensor[(13, 7, 8), int64] */;
    %1083 = %1071.0;
    %1084 = %1072.0;
    %1085 = %1077.0;
    %1086 = @func_3603(%1080, %1081) /* ty=Tensor[(16, 3, 11), float32] */;
    (%1082, %1083, %1084, %1085, meta[relay.Constant][57] /* ty=Tensor[(270), int64] */, meta[relay.Constant][58] /* ty=Tensor[(96), float32] */, %1086, meta[relay.Constant][59] /* ty=Tensor[(528), float32] */)
  };
  %1087() /* ty=(Tensor[(13, 7, 8), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) */
}

def @func_4980(%var_4978: Tensor[(48), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) {
  @func_4977(%var_4978) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */
}

def @func_19010(%var_19004: Tensor[(16, 9, 12), float32]) -> Tensor[(16, 9, 12), float32] {
  %1088 = cast(%var_19004, dtype="float32") /* ty=Tensor[(16, 9, 12), float32] */;
  sqrt(%1088) /* ty=Tensor[(16, 9, 12), float32] */
}

def @func_19087() -> (Tensor[(13, 7, 8), float32], Tensor[(192, 4), bool], Tensor[(192, 1), float64], Tensor[(192, 1), int64], Tensor[(192, 4), float64]) {
  %1089 = @func_15365() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1090 = @func_11742() /* ty=Tensor[(192, 1), int64] */;
  %1091 = cast(%1090, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %1092 = acosh(%1091) /* ty=Tensor[(192, 1), float64] */;
  %1093 = cast(%1092, dtype="bool") /* ty=Tensor[(192, 1), bool] */;
  %1094 = cast(meta[relay.Constant][60] /* ty=Tensor[(192, 4), float64] */, dtype="bool") /* ty=Tensor[(192, 4), bool] */;
  %1095 = cast(%1092, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %1096 = cast(%1090, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %1097 = shape_of(%1092, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1098 = cast(%1092, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1100 = minimum(%1098, %1099) /* ty=Tensor[(192, ?), uint32] */;
  %1101 = cast(%1100, dtype="bool") /* ty=Tensor[(192, ?), bool] */;
  %1102 = cast(meta[relay.Constant][60] /* ty=Tensor[(192, 4), float64] */, dtype="bool") /* ty=Tensor[(192, 4), bool] */;
  %1103 = not_equal(%1101, %1102) /* ty=Tensor[(192, 4), bool] */;
  %1104 = cast(%1103, dtype="float64") /* ty=Tensor[(192, 4), float64] */;
  %1105 = log(%1104) /* ty=Tensor[(192, 4), float64] */;
  %1106 = cast(%1105, dtype="float64") /* ty=Tensor[(192, 4), float64] */;
  %1107 = %1089.0;
  %1108 = equal(%1093, %1094) /* ty=Tensor[(192, 4), bool] */;
  %1109 = log10(%1095) /* ty=Tensor[(192, 1), float64] */;
  %1110 = @func_18642() /* ty=Tensor[(192, 1), int64] */;
  %1111 = sinh(%1106) /* ty=Tensor[(192, 4), float64] */;
  (%1107, %1108, %1109, %1110, %1111)
}

def @func_12976() -> (Tensor[(13, 7, 8), float32],) {
  %1114 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1112 = @func_12773() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(13, 7, 8), float32]) */;
    %1113 = %1112.4;
    (%1113,)
  };
  %1114() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_16516() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  %1118 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
    %1115 = @func_12087() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1116 = %1115.0;
    %1117 = @func_14130() /* ty=Tensor[(1, 8, 6), float64] */;
    (%1116, %1117)
  };
  %1118() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */
}

def @func_15593() -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) {
  @func_15591() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) */
}

def @func_14646() -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  %1119 = @func_9588() /* ty=(Tensor[(48), bool],) */;
  %1120 = @func_6051() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1121 = @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1122 = %1119.0;
  %1123 = %1120.0;
  %1124 = %1121.0;
  (%1122, %1123, %1124)
}

def @func_19261() -> Tensor[(1, 8, 6), float64] {
  %1125 = @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1125.0
}

def @func_5553() -> (Tensor[(13, 7, 8), float32],) {
  @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_13268(%var_13248: Tensor[(1, 378), uint32], %var_13259: Tensor[(720), int32], %var_13260: Tensor[(14), float32], %var_13262: int64) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(63), uint32], Tensor[(1, 378), uint32], Tensor[(9, 6, 7), bool], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64]) {
  %1126 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1127 = cast(meta[relay.Constant][61] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1128 = cast(%var_13248, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %1129 = reshape(%1127, newshape=[9, 1, 7]) /* ty=Tensor[(9, 1, 7), uint32] */;
  %1130 = reshape(%1128, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
  %1131 = @func_7158(%1129, %1130) /* ty=(Tensor[(9, 6, 7), bool], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64]) */;
  %1132 = cast(meta[relay.Constant][61] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1133 = cast(%var_13248, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %1134 = cast(%var_13259, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1135 = cast(%var_13260, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1136 = cast(meta[relay.Constant][62] /* ty=Tensor[(7, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 4), float32] */;
  %1137 = cast(%var_13262, dtype="int64") /* ty=int64 */;
  %1138 = cast(meta[relay.Constant][63] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1139 = reshape(%1132, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1140 = reshape(%1133, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %1141 = reshape(%1134, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1142 = reshape(%1135, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %1143 = reshape(%1136, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1144 = reshape(%1137, newshape=[]) /* ty=int64 */;
  %1145 = reshape(%1138, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1146 = @func_9444(%1139, %1140, %1141, %1142, %1143, %1144, %1145) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) */;
  %1147 = %1126.0;
  %1148 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  %1149 = %1131.2;
  %1150 = %1146.1;
  (%1147, %1148, %1149, meta[relay.Constant][61] /* ty=Tensor[(63), uint32] */, %var_13248, %1150, %var_13259, %var_13260, meta[relay.Constant][62] /* ty=Tensor[(7, 4), float32] */, %var_13262, meta[relay.Constant][63] /* ty=Tensor[(126), float64] */)
}

def @func_12773() -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(13, 7, 8), float32]) {
  %1151 = @func_7089() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1152 = cast(meta[relay.Constant][64] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1153 = cast(meta[relay.Constant][65] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1154 = reshape(%1152, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1155 = reshape(%1153, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1156 = @func_7361(%1154, %1155) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) */;
  %1157 = @func_8327() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32]) */;
  %1158 = %1157.1;
  %1159 = cast(%1158, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1160 = %1151.0;
  %1161 = %1156.4;
  %1162 = log10(%1159) /* ty=Tensor[(13, 7, 8), float32] */;
  (%1160, %1161, meta[relay.Constant][64] /* ty=Tensor[(28), float32] */, meta[relay.Constant][65] /* ty=Tensor[(720), int32] */, %1162)
}

def @func_6585(%var_6583: Tensor[(192), int64], %var_6584: Tensor[(1, 28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) {
  %1189 = fn (%var_6518: Tensor[(192), int64], %var_6536: Tensor[(1, 28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) {
    %1163 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 90), int64] */, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
    %1164 = cast(meta[relay.Constant][67] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %1165 = reshape(%1163, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
    %1166 = reshape(%1164, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
    %1167 = @func_3580(%1165, %1166) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
    %1168 = cast(meta[relay.Constant][68] /* ty=Tensor[(260, 1), float32] */, dtype="float32") /* ty=Tensor[(260, 1), float32] */;
    %1169 = cast(%var_6518, dtype="int64") /* ty=Tensor[(192), int64] */;
    %1170 = cast(meta[relay.Constant][67] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %1171 = reshape(%1168, newshape=[13, 2, 10]) /* ty=Tensor[(13, 2, 10), float32] */;
    %1172 = reshape(%1169, newshape=[192]) /* ty=Tensor[(192), int64] */;
    %1173 = reshape(%1170, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %1174 = @func_6174(%1171, %1172, %1173) /* ty=(Tensor[(13, 2, 10), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
    %1175 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1176 = cast(%var_6536, dtype="float32") /* ty=Tensor[(1, 28), float32] */;
    %1177 = reshape(%1176, newshape=[28]) /* ty=Tensor[(28), float32] */;
    %1178 = @func_5125(%1177) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64) */;
    %1179 = cast(%var_6536, dtype="uint32") /* ty=Tensor[(1, 28), uint32] */;
    %1180 = cast(meta[relay.Constant][68] /* ty=Tensor[(260, 1), float32] */, dtype="uint32") /* ty=Tensor[(260, 1), uint32] */;
    %1181 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
    %1182 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
    %1183 = %1167.1;
    %1184 = %1174.3;
    %1185 = %1175.0;
    %1186 = %1178.1;
    %1187 = left_shift(%1179, %1180) /* ty=Tensor[(260, 28), uint32] */;
    %1188 = %1181.2;
    (%1182, %1183, meta[relay.Constant][66] /* ty=Tensor[(3, 90), int64] */, meta[relay.Constant][67] /* ty=Tensor[(96), float32] */, %1184, %var_6518, %1185, %1186, %1187, %1188)
  };
  %1189(%var_6583, %var_6584) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(3, 90), int64], Tensor[(96), float32], Tensor[(192), int64], Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(260, 28), uint32], Tensor[(48), bool]) */
}

def @func_12897() -> (Tensor[(13, 7, 8), float32],) {
  %1190 = @func_9945() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1191 = %1190.0;
  (%1191,)
}

def @func_17093() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %1194 = fn () -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
    %1192 = @func_6741() /* ty=Tensor[(1, 8, 6), float64] */;
    %1193 = @func_11195() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1192, %1193)
  };
  %1194() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_14648() -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  @func_14646() /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */
}

def @func_15086() -> Tensor[(48), bool] {
  %1195 = @func_9588() /* ty=(Tensor[(48), bool],) */;
  %1195.0
}

def @main(%var_22018: Tensor[(192, 12), int64]) -> Tensor[(192, 12), float64] {
  %1196 = @func_18642() /* ty=Tensor[(192, 1), int64] */;
  %1197 = cast(%1196, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
  %1198 = cast(%var_22018, dtype="float64") /* ty=Tensor[(192, 12), float64] */;
  floor_mod(%1197, %1198) /* ty=Tensor[(192, 12), float64] */
}

def @func_16426() -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32]) {
  @func_16424() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(3, 90), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_11656(%var_11654: Tensor[(1, 2, 1), float32]) -> (Tensor[(1, 2, 1), float32], Tensor[(13, 7, 8), float32]) {
  @func_11653(%var_11654) /* ty=(Tensor[(1, 2, 1), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_18364(%var_18336: float32, %var_18337: Tensor[(15, 10, 2), float32], %var_18351: Tensor[(15, 10, 2), float32]) -> (Tensor[(48), bool], Tensor[(15, 10, 2), bool]) {
  %1199 = cast(%var_18336, dtype="float32") /* ty=float32 */;
  %1200 = cast(%var_18337, dtype="float32") /* ty=Tensor[(15, 10, 2), float32] */;
  %1201 = subtract(%1199, %1200) /* ty=Tensor[(15, 10, 2), float32] */;
  %1202 = cast(%var_18351, dtype="bool") /* ty=Tensor[(15, 10, 2), bool] */;
  %1203 = shape_of(%1201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1204 = cast(%1201, dtype="bool") /* ty=Tensor[(15, 10, 2), bool] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1206 = @func_17469() /* ty=Tensor[(48), bool] */;
  %1207 = less(%1204, %1205) /* ty=Tensor[(15, 10, 2), bool] */;
  (%1206, %1207)
}

def @func_13076() -> (Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(448), float32]) {
  @func_13074() /* ty=(Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(448), float32]) */
}

def @func_10899() -> Tensor[(13, 7, 8), float32] {
  %1209 = fn () -> Tensor[(13, 7, 8), float32] {
    %1208 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1208.0
  };
  %1209() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_5900() -> (Tensor[(13, 7, 8), float32],) {
  @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_12088() -> (Tensor[(13, 7, 8), float32],) {
  %1212 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1210 = @func_8586() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %1211 = %1210.1;
    (%1211,)
  };
  %1212() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_10090() -> (Tensor[(13, 7, 8), float32],) {
  @func_10088() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_13985() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_13983() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_15743(%var_15724: Tensor[(1, 8, 6), float64]) -> (Tensor[(?, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  %1213 = @func_7970() /* ty=Tensor[(1, 8, 6), float64] */;
  %1214 = cast(%var_15724, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %1215 = shape_of(%1213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%1213, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1218 = maximum(%1216, %1217) /* ty=Tensor[(?, 8, 6), float64] */;
  %1219 = @func_11755() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1218, %1219)
}

def @func_13101() -> (Tensor[(13, 7, 8), float32],) {
  %1222 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1220 = @func_12348() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1221 = %1220.0;
    (%1221,)
  };
  %1222() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_19744() -> (Tensor[(13, 7, 8), float32],) {
  %1223 = @func_8979() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1223,)
}

def @func_19263() -> Tensor[(1, 8, 6), float64] {
  @func_19261() /* ty=Tensor[(1, 8, 6), float64] */
}

def @func_6174(%var_6138: Tensor[(13, 2, 10), float32], %var_6147: Tensor[(192), int64], %var_6169: Tensor[(96), float32]) -> (Tensor[(13, 2, 10), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32]) {
  %1224 = cast(%var_6138, dtype="float32") /* ty=Tensor[(13, 2, 10), float32] */;
  %1225 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1226 = cast(%var_6147, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1227 = reshape(%1225, newshape=[]) /* ty=int64 */;
  %1228 = reshape(%1226, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1229 = @func_203(%1227, %1228) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1230 = cast(meta[relay.Constant][69] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1231 = cast(%var_6169, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1232 = reshape(%1230, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %1233 = reshape(%1231, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %1234 = @func_5634(%1232, %1233) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(270), int64], Tensor[(2, 48), float32]) */;
  %1235 = log10(%1224) /* ty=Tensor[(13, 2, 10), float32] */;
  %1236 = %1229.0;
  %1237 = %1234.0;
  (%1235, %1236, 4 /* ty=int64 */, %var_6147, %1237, meta[relay.Constant][69] /* ty=Tensor[(270), int64] */, %var_6169)
}

def @func_13672(%var_13669: int64, %var_13670: Tensor[(192, 1), int64], %var_13671: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], int64, Tensor[(192, 720), bool]) {
  @func_13667(%var_13669, %var_13670, %var_13671) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], int64, Tensor[(192, 720), bool]) */
}

def @func_6418() -> Tensor[(13, 7, 8), float32] {
  %1238 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1238.0
}

def @func_8644() -> Tensor[(13, 7, 8), float32] {
  %1240 = fn () -> Tensor[(13, 7, 8), float32] {
    %1239 = @func_6266() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1239.0
  };
  %1240() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_11948() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float64]) {
  %1241 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %1242 = @func_6311() /* ty=Tensor[(13, 7, 8), float64] */;
  (%1241, %1242)
}

def @func_7621() -> Tensor[(528), float32] {
  %1244 = fn () -> Tensor[(528), float32] {
    %1243 = @func_7438() /* ty=(Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %1243.1
  };
  %1244() /* ty=Tensor[(528), float32] */
}

def @func_13074() -> (Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(448), float32]) {
  %1245 = @func_10232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 3, 11), float32], Tensor[(528), float32]) */;
  %1246 = cast(meta[relay.Constant][70] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1247 = reshape(%1246, newshape=[14, 8, 4]) /* ty=Tensor[(14, 8, 4), float32] */;
  %1248 = @func_10485(%1247) /* ty=(Tensor[(14, 8, 4), float32], Tensor[(13, 7, 8), float32]) */;
  %1249 = %1245.2;
  %1250 = %1248.1;
  (%1249, %1250, meta[relay.Constant][70] /* ty=Tensor[(448), float32] */)
}

def @func_21011(%var_21010: Tensor[(450), int8]) -> (Tensor[(192, 1), int64], Tensor[(192, 1), float64], Tensor[(13, 7, 8), float32], Tensor[(450), int8]) {
  %1260 = fn (%var_21006: Tensor[(450), int8]) -> (Tensor[(192, 1), int64], Tensor[(192, 1), float64], Tensor[(13, 7, 8), float32], Tensor[(450), int8]) {
    %1251 = @func_19966() /* ty=(Tensor[(192, 1), int64], Tensor[(13, 7, 8), float32]) */;
    %1252 = @func_18642() /* ty=Tensor[(192, 1), int64] */;
    %1253 = cast(%1252, dtype="float64") /* ty=Tensor[(192, 1), float64] */;
    %1254 = cast(%var_21006, dtype="int8") /* ty=Tensor[(450), int8] */;
    %1255 = reshape(%1254, newshape=[15, 5, 6]) /* ty=Tensor[(15, 5, 6), int8] */;
    %1256 = @func_14431(%1255) /* ty=(Tensor[(15, 5, 6), uint32], Tensor[(15, 5, 6), float32], Tensor[(13, 7, 8), float32]) */;
    %1257 = %1251.0;
    %1258 = rsqrt(%1253) /* ty=Tensor[(192, 1), float64] */;
    %1259 = %1256.2;
    (%1257, %1258, %1259, %var_21006)
  };
  %1260(%var_21010) /* ty=(Tensor[(192, 1), int64], Tensor[(192, 1), float64], Tensor[(13, 7, 8), float32], Tensor[(450), int8]) */
}

def @func_21898() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  @func_21896() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_19217() -> (Tensor[(1, 8, 6), float64],) {
  %1263 = fn () -> (Tensor[(1, 8, 6), float64],) {
    %1261 = @func_10719() /* ty=(Tensor[(1, 8, 6), float64],) */;
    %1262 = %1261.0;
    (%1262,)
  };
  %1263() /* ty=(Tensor[(1, 8, 6), float64],) */
}

def @func_19013(%var_19011: Tensor[(16, 9, 12), float32]) -> Tensor[(16, 9, 12), float32] {
  @func_19010(%var_19011) /* ty=Tensor[(16, 9, 12), float32] */
}

def @func_17837(%var_17775: Tensor[(260), float32], %var_17776: Tensor[(192), int64], %var_17795: int64) -> (Tensor[(13, 7, 8), float32], Tensor[(260), float32], Tensor[(192), int64], int64, int64, Tensor[(?, 96), float64], Tensor[(1, 96), float32], Tensor[(13, 7, 8), float32]) {
  %1264 = @func_12232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1265 = cast(%var_17795, dtype="int64") /* ty=int64 */;
  %1266 = reshape(%1265, newshape=[]) /* ty=int64 */;
  %1267 = @func_7944(%1266) /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, Tensor[(16, 1, 12), int64], Tensor[(1, 8, 9), uint32]) */;
  %1268 = cast(meta[relay.Constant][71] /* ty=Tensor[(1, 96), float32] */, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %1269 = asin(%1268) /* ty=Tensor[(1, 96), float32] */;
  %1270 = cast(%var_17775, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1271 = cast(%var_17776, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1272 = cast(meta[relay.Constant][71] /* ty=Tensor[(1, 96), float32] */, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %1273 = reshape(%1270, newshape=[13, 2, 10]) /* ty=Tensor[(13, 2, 10), float32] */;
  %1274 = reshape(%1271, newshape=[192]) /* ty=Tensor[(192), int64] */;
  %1275 = reshape(%1272, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %1276 = @func_6174(%1273, %1274, %1275) /* ty=(Tensor[(13, 2, 10), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %1277 = %1276.6;
  %1278 = cast(%1277, dtype="bool") /* ty=Tensor[(96), bool] */;
  %1279 = shape_of(%1269, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1280 = cast(%1269, dtype="bool") /* ty=Tensor[(1, 96), bool] */;
  %1281 = dyn.reshape(%1278, %1279, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1282 = less_equal(%1280, %1281) /* ty=Tensor[(?, 96), bool] */;
  %1283 = cast(%1282, dtype="float64") /* ty=Tensor[(?, 96), float64] */;
  %1284 = shape_of(%1269, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1285 = cast(%1269, dtype="float64") /* ty=Tensor[(1, 96), float64] */;
  %1286 = dyn.reshape(%1283, %1284, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1287 = cast(meta[relay.Constant][71] /* ty=Tensor[(1, 96), float32] */, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %1288 = @func_6761() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1289 = %1264.1;
  %1290 = %1267.4;
  %1291 = power(%1285, %1286) /* ty=Tensor[(?, 96), float64] */;
  %1292 = erf(%1287) /* ty=Tensor[(1, 96), float32] */;
  %1293 = %1288.0;
  (%1289, %var_17775, %var_17776, %1290, %var_17795, %1291, %1292, %1293)
}

def @func_18369(%var_18366: float32, %var_18367: Tensor[(15, 10, 2), float32], %var_18368: Tensor[(15, 10, 2), float32]) -> (Tensor[(48), bool], Tensor[(15, 10, 2), bool]) {
  @func_18364(%var_18366, %var_18367, %var_18368) /* ty=(Tensor[(48), bool], Tensor[(15, 10, 2), bool]) */
}

def @func_18178() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_18176() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_10400() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1296 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %1294 = @func_7112() /* ty=Tensor[(13, 7, 8), float32] */;
    %1295 = @func_9982() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1294, %1295)
  };
  %1296() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_21772() -> (Tensor[(13, 7, 8), float32],) {
  %1297 = @func_12067() /* ty=(bool, Tensor[(13, 7, 8), float32]) */;
  %1298 = %1297.1;
  (%1298,)
}

def @func_11539() -> (Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192, 1), int64]) {
  @func_11537() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192, 1), int64]) */
}

def @func_12349() -> (Tensor[(13, 7, 8), float32],) {
  %1300 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1299 = @func_8979() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1299,)
  };
  %1300() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_20917(%var_20915: Tensor[(378), uint32], %var_20916: Tensor[(14), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 63), uint32], Tensor[(378), uint32], Tensor[(14), float32], Tensor[(126), float64], Tensor[(13, 7, 8), float32]) {
  %1314 = fn (%var_20887: Tensor[(378), uint32], %var_20888: Tensor[(14), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 63), uint32], Tensor[(378), uint32], Tensor[(14), float32], Tensor[(126), float64], Tensor[(13, 7, 8), float32]) {
    %1301 = @func_12662() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %1302 = cast(%var_20887, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %1303 = cast(%var_20888, dtype="float32") /* ty=Tensor[(14), float32] */;
    %1304 = cast(meta[relay.Constant][72] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1305 = reshape(%1302, newshape=[378, 1]) /* ty=Tensor[(378, 1), uint32] */;
    %1306 = reshape(%1303, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %1307 = reshape(%1304, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %1308 = @func_15805(%1305, %1306, %1307) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(24, 22), float32], Tensor[(1, 63), uint32], Tensor[(378, 1), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(7, 4), float32], int64, Tensor[(126), float64], Tensor[(13, 7, 8), float32]) */;
    %1309 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1310 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    %1311 = %1301.1;
    %1312 = %1308.3;
    %1313 = %1309.0;
    (%1310, %1311, %1312, %var_20887, %var_20888, meta[relay.Constant][72] /* ty=Tensor[(126), float64] */, %1313)
  };
  %1314(%var_20915, %var_20916) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 63), uint32], Tensor[(378), uint32], Tensor[(14), float32], Tensor[(126), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_14085() -> (Tensor[(13, 7, 8), float32],) {
  @func_14083() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_9467(%var_9465: Tensor[(7, 10, 11), float32]) -> Tensor[(7, 10, 11), float64] {
  @func_9464(%var_9465) /* ty=Tensor[(7, 10, 11), float64] */
}

def @func_8359(%var_8357: Tensor[(11, 11, 11), int32], %var_8358: Tensor[(11, 11, 11), int32]) -> (Tensor[(11, 11, 11), int32], Tensor[(12, 2, 4), float32], Tensor[(96), float32]) {
  %1324 = fn (%var_8344: Tensor[(11, 11, 11), int32], %var_8345: Tensor[(11, 11, 11), int32]) -> (Tensor[(11, 11, 11), int32], Tensor[(12, 2, 4), float32], Tensor[(96), float32]) {
    %1315 = cast(%var_8345, dtype="int32") /* ty=Tensor[(11, 11, 11), int32] */;
    %1316 = shape_of(%var_8344, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1317 = cast(%var_8344, dtype="int32") /* ty=Tensor[(11, 11, 11), int32] */;
    %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1319 = cast(meta[relay.Constant][73] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %1320 = reshape(%1319, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), float32] */;
    %1321 = @func_3260(%1320) /* ty=(Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) */;
    %1322 = subtract(%1317, %1318) /* ty=Tensor[(11, 11, 11), int32] */;
    %1323 = %1321.0;
    (%1322, %1323, meta[relay.Constant][73] /* ty=Tensor[(96), float32] */)
  };
  %1324(%var_8357, %var_8358) /* ty=(Tensor[(11, 11, 11), int32], Tensor[(12, 2, 4), float32], Tensor[(96), float32]) */
}

def @func_21265() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) {
  @func_21263() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64]) */
}

def @func_19783(%var_19781: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(270), int64], Tensor[(4, 24), float32]) {
  @func_19780(%var_19781) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(270), int64], Tensor[(4, 24), float32]) */
}

def @func_10622() -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1330 = fn () -> (Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %1325 = @func_5619() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */;
    %1326 = @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */;
    %1327 = %1325.2;
    %1328 = %1326.0;
    %1329 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1327, %1328, %1329)
  };
  %1330() /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_22001(%var_21999: Tensor[(588), uint8]) -> (Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(384, 8), uint16], Tensor[(13, 7, 8), float32], Tensor[(588), uint8], Tensor[(13, 7, 8), float32], Tensor[(192, 16), float64]) {
  @func_21998(%var_21999) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(384, 8), uint16], Tensor[(13, 7, 8), float32], Tensor[(588), uint8], Tensor[(13, 7, 8), float32], Tensor[(192, 16), float64]) */
}

def @func_17149() -> Tensor[(13, 7, 8), float32] {
  %1332 = fn () -> Tensor[(13, 7, 8), float32] {
    %1331 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1331.0
  };
  %1332() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_3583(%var_3581: Tensor[(6, 15, 3), int64], %var_3582: Tensor[(2, 48), float32]) -> (Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) {
  %1346 = fn (%var_3561: Tensor[(6, 15, 3), int64], %var_3576: Tensor[(2, 48), float32]) -> (Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) {
    %1333 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1334 = cast(%var_3561, dtype="int64") /* ty=Tensor[(6, 15, 3), int64] */;
    %1335 = cast(meta[relay.Constant][74] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %1336 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1337 = reshape(%1335, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
    %1338 = reshape(%1336, newshape=[]) /* ty=int64 */;
    %1339 = @func_2704(%1337, %1338) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
    %1340 = cast(%var_3576, dtype="float32") /* ty=Tensor[(2, 48), float32] */;
    %1341 = reshape(%1340, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), float32] */;
    %1342 = @func_3260(%1341) /* ty=(Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) */;
    %1343 = left_shift(%1333, %1334) /* ty=Tensor[(6, 15, 3), int64] */;
    %1344 = %1339.5;
    %1345 = %1342.0;
    (%1343, %1344, meta[relay.Constant][74] /* ty=Tensor[(28), float32] */, %1345, %var_3576)
  };
  %1346(%var_3581, %var_3582) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */
}

def @func_19385() -> Tensor[(13, 7, 8), float32] {
  %1347 = fn () -> Tensor[(13, 7, 8), float32] {
    @func_7112() /* ty=Tensor[(13, 7, 8), float32] */
  };
  %1347() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_14770() -> Tensor[(13, 7, 8), float32] {
  %1349 = fn () -> Tensor[(13, 7, 8), float32] {
    %1348 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1348.0
  };
  %1349() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_14723() -> (Tensor[(13, 7, 8), float32],) {
  @func_14721() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_18426() -> Tensor[(13, 7, 8), float32] {
  %1350 = @func_10980() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1350.0
}

def @func_18767() -> (Tensor[(13, 7, 8), float32],) {
  %1353 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1351 = @func_16676() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %1352 = %1351.0;
    (%1352,)
  };
  %1353() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_9131(%var_9129: Tensor[(1, 3, 6), float32]) -> Tensor[(?, 3, 6), bool] {
  @func_9128(%var_9129) /* ty=Tensor[(?, 3, 6), bool] */
}

def @func_12875() -> (Tensor[(48), bool],) {
  %1356 = fn () -> (Tensor[(48), bool],) {
    %1354 = @func_9588() /* ty=(Tensor[(48), bool],) */;
    %1355 = %1354.0;
    (%1355,)
  };
  %1356() /* ty=(Tensor[(48), bool],) */
}

def @func_14434(%var_14432: Tensor[(15, 5, 6), int8]) -> (Tensor[(15, 5, 6), uint32], Tensor[(15, 5, 6), float32], Tensor[(13, 7, 8), float32]) {
  @func_14431(%var_14432) /* ty=(Tensor[(15, 5, 6), uint32], Tensor[(15, 5, 6), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_18078() -> (Tensor[(13, 7, 8), float32],) {
  @func_18076() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_15942() -> bool {
  %1357 = @func_9542() /* ty=(bool,) */;
  %1357.0
}

def @func_9917() -> Tensor[(13, 7, 8), float32] {
  %1359 = fn () -> Tensor[(13, 7, 8), float32] {
    %1358 = @func_9044() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1358.0
  };
  %1359() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_8587() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1364 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %1360 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1361 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1362 = %1360.0;
    %1363 = %1361.0;
    (%1362, %1363)
  };
  %1364() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_3606(%var_3604: Tensor[(16, 3, 11), float32], %var_3605: Tensor[(16, 3, 11), float32]) -> Tensor[(16, 3, 11), float32] {
  %1369 = fn (%var_3593: Tensor[(16, 3, 11), float32], %var_3594: Tensor[(16, 3, 11), float32]) -> Tensor[(16, 3, 11), float32] {
    %1365 = cast(%var_3594, dtype="float32") /* ty=Tensor[(16, 3, 11), float32] */;
    %1366 = shape_of(%var_3593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1367 = cast(%var_3593, dtype="float32") /* ty=Tensor[(16, 3, 11), float32] */;
    %1368 = dyn.reshape(%1365, %1366, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%1367, %1368) /* ty=Tensor[(16, 3, 11), float32] */
  };
  %1369(%var_3604, %var_3605) /* ty=Tensor[(16, 3, 11), float32] */
}

def @func_4807(%var_4805: Tensor[(28), float32], %var_4806: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) {
  %1386 = fn (%var_4765: Tensor[(28), float32], %var_4779: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) {
    %1370 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1371 = cast(%var_4765, dtype="float32") /* ty=Tensor[(28), float32] */;
    %1372 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1373 = reshape(%1371, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
    %1374 = reshape(%1372, newshape=[]) /* ty=int64 */;
    %1375 = @func_2704(%1373, %1374) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
    %1376 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1377 = %1375.4;
    %1378 = cast(%1377, dtype="int64") /* ty=Tensor[(192), int64] */;
    %1379 = cast(%var_4779, dtype="int32") /* ty=Tensor[(720), int32] */;
    %1380 = reshape(%1376, newshape=[]) /* ty=int64 */;
    %1381 = reshape(%1378, newshape=[192]) /* ty=Tensor[(192), int64] */;
    %1382 = reshape(%1379, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %1383 = @func_2257(%1380, %1381, %1382) /* ty=(Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(6, 1, 12), float64], Tensor[(16, 1, 12), int64], Tensor[(6, 1, 12), float32], Tensor[(14), float32], Tensor[(720), int32], Tensor[(14), float32]) */;
    %1384 = %1370.0;
    %1385 = %1383.1;
    (%1384, %1377, %var_4765, 10 /* ty=int64 */, %1385, %var_4779)
  };
  %1386(%var_4805, %var_4806) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) */
}

def @func_14130() -> Tensor[(1, 8, 6), float64] {
  %1387 = @func_6370() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1387.0
}

def @func_18232(%var_18231: Tensor[(192, 1), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(192, 1), int64]) {
  %1394 = fn (%var_18222: Tensor[(192, 1), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(192, 1), int64]) {
    %1388 = @func_9648() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(720), int32], Tensor[(14), float32]) */;
    %1389 = cast(%var_18222, dtype="int64") /* ty=Tensor[(192, 1), int64] */;
    %1390 = reshape(%1389, newshape=[2, 96]) /* ty=Tensor[(2, 96), int64] */;
    %1391 = @func_10155(%1390) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(2, 96), int64], Tensor[(28), float32]) */;
    %1392 = %1388.0;
    %1393 = %1391.1;
    (%1392, %1393, %var_18222)
  };
  %1394(%var_18231) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(3, 90), int64], Tensor[(192, 1), int64]) */
}

def @func_10388() -> (Tensor[(270), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(13, 7, 8), float32]) {
  %1405 = fn () -> (Tensor[(270), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(13, 7, 8), float32]) {
    %1395 = @func_4830() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(6, 15, 3), int64]) */;
    %1396 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1397 = cast(meta[relay.Constant][75] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %1398 = reshape(%1397, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float64] */;
    %1399 = @func_8153(%1398) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) */;
    %1400 = @func_8832() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1401 = %1395.2;
    %1402 = %1396.0;
    %1403 = %1399.0;
    %1404 = %1400.0;
    (%1401, %1402, %1403, meta[relay.Constant][75] /* ty=Tensor[(96), float64] */, %1404)
  };
  %1405() /* ty=(Tensor[(270), int64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_14211() -> Tensor[(16, 1, 12), int64] {
  %1407 = fn () -> Tensor[(16, 1, 12), int64] {
    %1406 = @func_11537() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192, 1), int64]) */;
    %1406.1
  };
  %1407() /* ty=Tensor[(16, 1, 12), int64] */
}

def @func_5718() -> Tensor[(13, 7, 8), float32] {
  %1409 = fn () -> Tensor[(13, 7, 8), float32] {
    %1408 = @func_5374() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1408.0
  };
  %1409() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_6879(%var_6877: Tensor[(1, 270), int64]) -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) {
  @func_6876(%var_6877) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_5175(%var_5173: Tensor[(15, 6, 11), int64], %var_5174: Tensor[(15, 6, 11), int64]) -> (Tensor[(15, 6, 11), int64], Tensor[(1, 7, 2), float32], Tensor[(14), float32]) {
  %1419 = fn (%var_5150: Tensor[(15, 6, 11), int64], %var_5151: Tensor[(15, 6, 11), int64]) -> (Tensor[(15, 6, 11), int64], Tensor[(1, 7, 2), float32], Tensor[(14), float32]) {
    %1410 = cast(%var_5151, dtype="int64") /* ty=Tensor[(15, 6, 11), int64] */;
    %1411 = shape_of(%var_5150, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1412 = cast(%var_5150, dtype="int64") /* ty=Tensor[(15, 6, 11), int64] */;
    %1413 = dyn.reshape(%1410, %1411, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1414 = cast(meta[relay.Constant][76] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %1415 = reshape(%1414, newshape=[1, 7, 2]) /* ty=Tensor[(1, 7, 2), float32] */;
    %1416 = @func_428(%1415) /* ty=(Tensor[(1, 7, 2), float32],) */;
    %1417 = left_shift(%1412, %1413) /* ty=Tensor[(15, 6, 11), int64] */;
    %1418 = %1416.0;
    (%1417, %1418, meta[relay.Constant][76] /* ty=Tensor[(14), float32] */)
  };
  %1419(%var_5173, %var_5174) /* ty=(Tensor[(15, 6, 11), int64], Tensor[(1, 7, 2), float32], Tensor[(14), float32]) */
}

def @func_431(%var_429: Tensor[(1, 7, 2), float32]) -> (Tensor[(1, 7, 2), float32],) {
  @func_428(%var_429) /* ty=(Tensor[(1, 7, 2), float32],) */
}

def @func_6876(%var_6867: Tensor[(1, 270), int64]) -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float64], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(1, 270), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32]) {
  %1420 = @func_5717() /* ty=Tensor[(13, 7, 8), float32] */;
  %1421 = cast(%1420, dtype="float64") /* ty=Tensor[(13, 7, 8), float64] */;
  %1422 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1423 = cast(%var_6867, dtype="int64") /* ty=Tensor[(1, 270), int64] */;
  %1424 = cast(meta[relay.Constant][77] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1425 = reshape(%1423, newshape=[3, 90]) /* ty=Tensor[(3, 90), int64] */;
  %1426 = reshape(%1424, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %1427 = @func_5258(%1425, %1426) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64], Tensor[(3, 90), int64], Tensor[(96), float32]) */;
  %1428 = cast(%var_6867, dtype="int64") /* ty=Tensor[(1, 270), int64] */;
  %1429 = cast(meta[relay.Constant][77] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1430 = reshape(%1428, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %1431 = reshape(%1429, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %1432 = @func_4618(%1430, %1431) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %1433 = @func_6741() /* ty=Tensor[(1, 8, 6), float64] */;
  %1434 = atanh(%1421) /* ty=Tensor[(13, 7, 8), float64] */;
  %1435 = %1422.0;
  %1436 = %1427.1;
  %1437 = %1432.0;
  (%1433, %1434, %1435, %1436, %var_6867, meta[relay.Constant][77] /* ty=Tensor[(96), float32] */, %1437)
}

def @func_4830() -> (Tensor[(13, 7, 8), float32], Tensor[(96), float32], Tensor[(270), int64], Tensor[(96), float32], Tensor[(6, 15, 3), int64]) {
  %1438 = cast(meta[relay.Constant][78] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1439 = cast(meta[relay.Constant][79] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1440 = reshape(%1438, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %1441 = reshape(%1439, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %1442 = @func_4618(%1440, %1441) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 48), float32], Tensor[(270), int64], Tensor[(96), float32]) */;
  %1443 = cast(meta[relay.Constant][78] /* ty=Tensor[(270), int64] */, dtype="int64") /* ty=Tensor[(270), int64] */;
  %1444 = %1442.3;
  %1445 = cast(%1444, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1446 = reshape(%1443, newshape=[6, 15, 3]) /* ty=Tensor[(6, 15, 3), int64] */;
  %1447 = reshape(%1445, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
  %1448 = @func_3580(%1446, %1447) /* ty=(Tensor[(6, 15, 3), int64], Tensor[(720), int32], Tensor[(28), float32], Tensor[(12, 2, 4), float32], Tensor[(2, 48), float32]) */;
  %1449 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %1450 = %1448.0;
  (%1449, %1444, meta[relay.Constant][78] /* ty=Tensor[(270), int64] */, meta[relay.Constant][79] /* ty=Tensor[(96), float32] */, %1450)
}

def @func_14565(%var_14561: Tensor[(7, 1, 11), float64], %var_14562: int64, %var_14563: Tensor[(96, 2), int64], %var_14564: Tensor[(720), int32]) -> (int64, Tensor[(96, 2), int64], Tensor[(720), int32], Tensor[(7, 1, 11), uint64]) {
  %1464 = fn (%var_14533: Tensor[(7, 1, 11), float64], %var_14541: int64, %var_14542: Tensor[(96, 2), int64], %var_14543: Tensor[(720), int32]) -> (int64, Tensor[(96, 2), int64], Tensor[(720), int32], Tensor[(7, 1, 11), uint64]) {
    %1451 = cast(%var_14541, dtype="int64") /* ty=int64 */;
    %1452 = cast(%var_14542, dtype="int64") /* ty=Tensor[(96, 2), int64] */;
    %1453 = cast(%var_14543, dtype="int32") /* ty=Tensor[(720), int32] */;
    %1454 = reshape(%1451, newshape=[]) /* ty=int64 */;
    %1455 = reshape(%1452, newshape=[192, 1]) /* ty=Tensor[(192, 1), int64] */;
    %1456 = reshape(%1453, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %1457 = @func_13667(%1454, %1455, %1456) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], int64, Tensor[(192, 720), bool]) */;
    %1458 = cast(%var_14533, dtype="float64") /* ty=Tensor[(7, 1, 11), float64] */;
    %1459 = acos(%1458) /* ty=Tensor[(7, 1, 11), float64] */;
    %1460 = cast(%1459, dtype="uint64") /* ty=Tensor[(7, 1, 11), uint64] */;
    %1461 = cast(%var_14541, dtype="uint64") /* ty=uint64 */;
    %1462 = %1457.2;
    %1463 = left_shift(%1460, %1461) /* ty=Tensor[(7, 1, 11), uint64] */;
    (%1462, %var_14542, %var_14543, %1463)
  };
  %1464(%var_14561, %var_14562, %var_14563, %var_14564) /* ty=(int64, Tensor[(96, 2), int64], Tensor[(720), int32], Tensor[(7, 1, 11), uint64]) */
}

def @func_4472() -> (Tensor[(13, 7, 8), float32],) {
  %1466 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1465 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1465,)
  };
  %1466() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_10125() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_10123() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_14182(%var_14178: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32]) {
  %1467 = @func_11351() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1468 = %1467.0;
  %1469 = cast(%1468, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1470 = cast(%var_14178, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1471 = reshape(%1469, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %1472 = reshape(%1470, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1473 = @func_7686(%1471, %1472) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], Tensor[(720), int32]) */;
  %1474 = %1473.3;
  (%1468, %1474, %var_14178)
}

def @func_16424() -> (Tensor[(13, 7, 8), float32], Tensor[(3, 90), bool], Tensor[(3, 90), float64], Tensor[(13, 7, 8), float32]) {
  %1475 = @func_12232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1476 = @func_9560() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) */;
  %1477 = %1476.2;
  %1478 = cast(meta[relay.Constant][80] /* ty=Tensor[(3, 90), int64] */, dtype="bool") /* ty=Tensor[(3, 90), bool] */;
  %1479 = shape_of(%1477, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1480 = cast(%1477, dtype="bool") /* ty=Tensor[(3, 90), bool] */;
  %1481 = dyn.reshape(%1478, %1479, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1482 = cast(meta[relay.Constant][80] /* ty=Tensor[(3, 90), int64] */, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %1483 = @func_11891() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1484 = %1475.0;
  %1485 = less_equal(%1480, %1481) /* ty=Tensor[(3, 90), bool] */;
  %1486 = acosh(%1482) /* ty=Tensor[(3, 90), float64] */;
  %1487 = %1483.1;
  (%1484, %1485, %1486, %1487)
}

def @func_16103() -> (Tensor[(4, 6, 15), float64], Tensor[(13, 7, 8), float32]) {
  %1494 = fn () -> (Tensor[(4, 6, 15), float64], Tensor[(13, 7, 8), float32]) {
    %1488 = cast(meta[relay.Constant][82] /* ty=Tensor[(4, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 15), float64] */;
    %1489 = shape_of(meta[relay.Constant][81] /* ty=Tensor[(4, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1490 = cast(meta[relay.Constant][81] /* ty=Tensor[(4, 6, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 15), float64] */;
    %1491 = dyn.reshape(%1488, %1489, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1492 = power(%1490, %1491) /* ty=Tensor[(4, 6, 15), float64] */;
    %1493 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1492, %1493)
  };
  %1494() /* ty=(Tensor[(4, 6, 15), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_12926() -> Tensor[(13, 7, 8), float32] {
  %1495 = fn () -> Tensor[(13, 7, 8), float32] {
    @func_12186() /* ty=Tensor[(13, 7, 8), float32] */
  };
  %1495() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_20950() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_20948() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_12663() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1499 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %1496 = @func_11351() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %1497 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    %1498 = %1496.1;
    (%1497, %1498)
  };
  %1499() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_17198() -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1505 = fn () -> (Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %1500 = @func_8586() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %1501 = @func_14721() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1502 = @func_8057() /* ty=Tensor[(1, 8, 6), float64] */;
    %1503 = %1500.0;
    %1504 = %1501.0;
    (%1502, %1503, %1504)
  };
  %1505() /* ty=(Tensor[(1, 8, 6), float64], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_14246() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1512 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
    %1506 = @func_8819() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1507 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1508 = %1506.0;
    %1509 = %1507.0;
    %1510 = @func_13687() /* ty=Tensor[(13, 7, 8), float32] */;
    %1511 = @func_9157() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1508, %1509, %1510, %1511)
  };
  %1512() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_21025() -> Tensor[(13, 7, 8), float32] {
  @func_21023() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_9869() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool]) {
  @func_9867() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool]) */
}

def @func_21380() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_21378() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_15468() -> Tensor[(13, 7, 8), float32] {
  @func_15466() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_7438() -> (Tensor[(16, 3, 11), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(96), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1513 = cast(meta[relay.Constant][83] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1514 = cast(meta[relay.Constant][83] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1515 = reshape(%1513, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %1516 = reshape(%1514, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
  %1517 = @func_5898() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1518 = %1517.0;
  %1519 = cast(%1518, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1520 = cast(meta[relay.Constant][84] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1521 = reshape(%1520, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), float32] */;
  %1522 = @func_3260(%1521) /* ty=(Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) */;
  %1523 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1524 = @func_3603(%1515, %1516) /* ty=Tensor[(16, 3, 11), float32] */;
  %1525 = acos(%1519) /* ty=Tensor[(13, 7, 8), float32] */;
  %1526 = %1522.1;
  %1527 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %1528 = %1523.0;
  (%1524, meta[relay.Constant][83] /* ty=Tensor[(528), float32] */, %1525, %1526, meta[relay.Constant][84] /* ty=Tensor[(96), float32] */, %1527, %1528)
}

def @func_8042() -> (Tensor[(13, 7, 8), float32],) {
  %1535 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1529 = @func_4524() /* ty=Tensor[(13, 7, 8), float32] */;
    %1530 = cast(meta[relay.Constant][85] /* ty=Tensor[(13, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
    %1531 = shape_of(%1529, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1532 = cast(%1529, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
    %1533 = dyn.reshape(%1530, %1531, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1534 = divide(%1532, %1533) /* ty=Tensor[(13, 7, 8), float32] */;
    (%1534,)
  };
  %1535() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_7361(%var_7343: Tensor[(28), float32], %var_7344: Tensor[(720), int32]) -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64]) {
  %1536 = @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1537 = cast(%var_7343, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1538 = cast(%var_7344, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1539 = reshape(%1537, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %1540 = reshape(%1538, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1541 = @func_4804(%1539, %1540) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(28), float32], int64, int64, Tensor[(720), int32]) */;
  %1542 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1543 = cast(meta[relay.Constant][86] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1544 = reshape(%1542, newshape=[]) /* ty=int64 */;
  %1545 = reshape(%1543, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1546 = @func_203(%1544, %1545) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1547 = %1536.0;
  %1548 = @func_4429() /* ty=Tensor[(13, 7, 8), float32] */;
  %1549 = %1541.0;
  %1550 = %1546.0;
  (%1547, %1548, %1549, %var_7343, %var_7344, %1550, 5 /* ty=int64 */, meta[relay.Constant][86] /* ty=Tensor[(192), int64] */)
}

def @func_14839(%var_14837: Tensor[(192, 16), int64]) -> (Tensor[(192, 16), float32], Tensor[(192, 16), bool]) {
  @func_14836(%var_14837) /* ty=(Tensor[(192, 16), float32], Tensor[(192, 16), bool]) */
}

def @func_10559() -> Tensor[(13, 7, 8), float32] {
  @func_10557() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_8845() -> (Tensor[(13, 7, 8), float32],) {
  %1551 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1551,)
}

def @func_16159() -> Tensor[(13, 7, 8), float32] {
  %1553 = fn () -> Tensor[(13, 7, 8), float32] {
    %1552 = @func_15232() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(528), float32], Tensor[(13, 7, 8), float32]) */;
    %1552.0
  };
  %1553() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_12775() -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(13, 7, 8), float32]) {
  @func_12773() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32], Tensor[(720), int32], Tensor[(13, 7, 8), float32]) */
}

def @func_9452(%var_9445: Tensor[(63), uint32], %var_9446: Tensor[(378), uint32], %var_9447: Tensor[(720), int32], %var_9448: Tensor[(14), float32], %var_9449: Tensor[(28), float32], %var_9450: int64, %var_9451: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) {
  %1592 = fn (%var_9334: Tensor[(63), uint32], %var_9335: Tensor[(378), uint32], %var_9346: Tensor[(720), int32], %var_9347: Tensor[(14), float32], %var_9386: Tensor[(28), float32], %var_9387: int64, %var_9429: Tensor[(126), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) {
    %1554 = cast(%var_9334, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %1555 = cast(%var_9335, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %1556 = reshape(%1554, newshape=[9, 1, 7]) /* ty=Tensor[(9, 1, 7), uint32] */;
    %1557 = reshape(%1555, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), uint32] */;
    %1558 = @func_7158(%1556, %1557) /* ty=(Tensor[(9, 6, 7), bool], Tensor[(13, 7, 8), float32], Tensor[(6, 15, 3), int64]) */;
    %1559 = @func_8905() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
    %1560 = @func_8251() /* ty=(Tensor[(13, 7, 8), bool],) */;
    %1561 = @func_8041() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1562 = cast(%var_9386, dtype="float32") /* ty=Tensor[(28), float32] */;
    %1563 = cast(%var_9387, dtype="int64") /* ty=int64 */;
    %1564 = reshape(%1562, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
    %1565 = reshape(%1563, newshape=[]) /* ty=int64 */;
    %1566 = @func_2704(%1564, %1565) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
    %1567 = cast(%var_9346, dtype="int32") /* ty=Tensor[(720), int32] */;
    %1568 = cast(%var_9347, dtype="float32") /* ty=Tensor[(14), float32] */;
    %1569 = reshape(%1567, newshape=[8, 6, 15]) /* ty=Tensor[(8, 6, 15), int32] */;
    %1570 = reshape(%1568, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %1571 = @func_607(%1569, %1570) /* ty=(Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) */;
    %1572 = %1571.0;
    %1573 = cast(%1572, dtype="float64") /* ty=Tensor[(8, 6, 15), float64] */;
    %1574 = cast(meta[relay.Constant][87] /* ty=Tensor[(24, 22), float32] */, dtype="float32") /* ty=Tensor[(24, 22), float32] */;
    %1575 = cast(meta[relay.Constant][87] /* ty=Tensor[(24, 22), float32] */, dtype="float32") /* ty=Tensor[(24, 22), float32] */;
    %1576 = reshape(%1574, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %1577 = reshape(%1575, newshape=[16, 3, 11]) /* ty=Tensor[(16, 3, 11), float32] */;
    %1578 = cast(%var_9429, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1579 = reshape(%1578, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %1580 = @func_6956(%1579) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(1, 8, 6), float64], Tensor[(1, 9, 14), float64], Tensor[(126), float64]) */;
    %1581 = @func_9157() /* ty=Tensor[(13, 7, 8), float32] */;
    %1582 = %1558.0;
    %1583 = %1559.1;
    %1584 = %1560.0;
    %1585 = %1561.0;
    %1586 = %1566.2;
    %1587 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    %1588 = @func_8643() /* ty=Tensor[(13, 7, 8), float32] */;
    %1589 = tan(%1573) /* ty=Tensor[(8, 6, 15), float64] */;
    %1590 = @func_3603(%1576, %1577) /* ty=Tensor[(16, 3, 11), float32] */;
    %1591 = %1580.2;
    (%1581, %1582, %var_9334, %var_9335, %var_9346, %var_9347, %1583, %1584, %1585, %1586, %var_9386, %var_9387, %1587, %1588, %1589, %1590, meta[relay.Constant][87] /* ty=Tensor[(24, 22), float32] */, %1591, %var_9429)
  };
  %1592(%var_9445, %var_9446, %var_9447, %var_9448, %var_9449, %var_9450, %var_9451) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(9, 6, 7), bool], Tensor[(63), uint32], Tensor[(378), uint32], Tensor[(720), int32], Tensor[(14), float32], Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), bool], Tensor[(13, 7, 8), float32], Tensor[(16, 1, 12), int64], Tensor[(28), float32], int64, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(8, 6, 15), float64], Tensor[(16, 3, 11), float32], Tensor[(24, 22), float32], Tensor[(1, 8, 6), float64], Tensor[(126), float64]) */
}

def @func_8058() -> Tensor[(1, 8, 6), float64] {
  %1593 = fn () -> Tensor[(1, 8, 6), float64] {
    @func_7970() /* ty=Tensor[(1, 8, 6), float64] */
  };
  %1593() /* ty=Tensor[(1, 8, 6), float64] */
}

def @func_14992() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), int64]) {
  %1594 = @func_10791() /* ty=(Tensor[(720, 10), float64], Tensor[(13, 7, 8), int64]) */;
  %1595 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
  %1596 = %1594.1;
  (%1595, %1596)
}

def @func_18974() -> (Tensor[(13, 7, 8), float32], Tensor[(192, 1), int64]) {
  %1599 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(192, 1), int64]) {
    %1597 = @func_14848() /* ty=Tensor[(13, 7, 8), float32] */;
    %1598 = @func_18642() /* ty=Tensor[(192, 1), int64] */;
    (%1597, %1598)
  };
  %1599() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192, 1), int64]) */
}

def @func_15529() -> Tensor[(13, 7, 8), float32] {
  @func_15527() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_10647() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1600 = @func_10557() /* ty=Tensor[(13, 7, 8), float32] */;
  %1601 = @func_6418() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1600, %1601)
}

def @func_11353() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  @func_11351() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */
}

def @func_20696() -> (Tensor[(13, 7, 8), float32],) {
  @func_20694() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_15088() -> Tensor[(48), bool] {
  @func_15086() /* ty=Tensor[(48), bool] */
}

def @func_8156(%var_8154: Tensor[(2, 8, 6), float64]) -> (Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) {
  @func_8153(%var_8154) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(2, 8, 6), float64], Tensor[(13, 7, 8), float32]) */
}

def @func_8980() -> Tensor[(13, 7, 8), float32] {
  %1603 = fn () -> Tensor[(13, 7, 8), float32] {
    %1602 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1602.0
  };
  %1603() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_15933() -> (Tensor[(192, 48), float32],) {
  %1610 = fn () -> (Tensor[(192, 48), float32],) {
    %1604 = @func_15591() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(48), bool], Tensor[(12, 4), bool], Tensor[(13, 7, 8), float32]) */;
    %1605 = %1604.1;
    %1606 = @func_11742() /* ty=Tensor[(192, 1), int64] */;
    %1607 = cast(%1605, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1608 = cast(%1606, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
    %1609 = power(%1607, %1608) /* ty=Tensor[(192, 48), float32] */;
    (%1609,)
  };
  %1610() /* ty=(Tensor[(192, 48), float32],) */
}

def @func_9650() -> (Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(720), int32], Tensor[(14), float32]) {
  @func_9648() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(192), int64], Tensor[(720), int32], Tensor[(14), float32]) */
}

def @func_21201() -> (Tensor[(13, 7, 8), float32],) {
  %1612 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1611 = @func_11195() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1611,)
  };
  %1612() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_9560() -> (Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(3, 90), int64]) {
  %1613 = @func_6611() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1614 = cast(meta[relay.Constant][88] /* ty=Tensor[(3, 90), int64] */, dtype="int64") /* ty=Tensor[(3, 90), int64] */;
  %1615 = reshape(%1614, newshape=[270]) /* ty=Tensor[(270), int64] */;
  %1616 = @func_8310(%1615) /* ty=(Tensor[(48), bool], Tensor[(13, 7, 8), float32], Tensor[(96), float64], Tensor[(1, 8, 6), float64], Tensor[(270), int64]) */;
  %1617 = %1613.0;
  %1618 = %1616.4;
  (%1617, %1618, meta[relay.Constant][88] /* ty=Tensor[(3, 90), int64] */)
}

def @func_21436(%var_21434: Tensor[(10, 7, 10), int64], %var_21435: Tensor[(10, 7, 10), int64]) -> (Tensor[(10, 7, 10), int64],) {
  %1624 = fn (%var_21428: Tensor[(10, 7, 10), int64], %var_21429: Tensor[(10, 7, 10), int64]) -> (Tensor[(10, 7, 10), int64],) {
    %1619 = cast(%var_21429, dtype="int64") /* ty=Tensor[(10, 7, 10), int64] */;
    %1620 = shape_of(%var_21428, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1621 = cast(%var_21428, dtype="int64") /* ty=Tensor[(10, 7, 10), int64] */;
    %1622 = dyn.reshape(%1619, %1620, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1623 = subtract(%1621, %1622) /* ty=Tensor[(10, 7, 10), int64] */;
    (%1623,)
  };
  %1624(%var_21434, %var_21435) /* ty=(Tensor[(10, 7, 10), int64],) */
}

def @func_14185(%var_14183: Tensor[(28), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32]) {
  @func_14182(%var_14183) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(28), float32]) */
}

def @func_11103() -> Tensor[(13, 7, 8), float32] {
  @func_11101() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_20865(%var_20851: Tensor[(1, 363), bool]) -> (Tensor[(13, 7, 8), float32], Tensor[(11, 3, 11), bool], Tensor[(1, 363), bool], Tensor[(13, 7, 8), float32]) {
  %1625 = @func_20075() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1626 = cast(%var_20851, dtype="bool") /* ty=Tensor[(1, 363), bool] */;
  %1627 = cast(%var_20851, dtype="bool") /* ty=Tensor[(1, 363), bool] */;
  %1628 = reshape(%1626, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), bool] */;
  %1629 = reshape(%1627, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), bool] */;
  %1630 = %1625.0;
  %1631 = @func_7725(%1628, %1629) /* ty=Tensor[(11, 3, 11), bool] */;
  %1632 = @func_15818() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1630, %1631, %var_20851, %1632)
}

def @func_12866(%var_12865: Tensor[(3, 6), float32]) -> (Tensor[(1, 8, 6), float64], Tensor[(?, 3, 6), bool], Tensor[(3, 6), float32]) {
  %1637 = fn (%var_12846: Tensor[(3, 6), float32]) -> (Tensor[(1, 8, 6), float64], Tensor[(?, 3, 6), bool], Tensor[(3, 6), float32]) {
    %1633 = cast(%var_12846, dtype="float32") /* ty=Tensor[(3, 6), float32] */;
    %1634 = reshape(%1633, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
    %1635 = @func_8057() /* ty=Tensor[(1, 8, 6), float64] */;
    %1636 = @func_9128(%1634) /* ty=Tensor[(?, 3, 6), bool] */;
    (%1635, %1636, %var_12846)
  };
  %1637(%var_12865) /* ty=(Tensor[(1, 8, 6), float64], Tensor[(?, 3, 6), bool], Tensor[(3, 6), float32]) */
}

def @func_16802() -> Tensor[(13, 7, 8), float32] {
  @func_16800() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_19153(%var_19139: Tensor[(13, 8, 6), float64]) -> (Tensor[(13, 8, 6), float32],) {
  %1638 = @func_17388() /* ty=(Tensor[(1, 8, 6), float64],) */;
  %1639 = %1638.0;
  %1640 = cast(%1639, dtype="float32") /* ty=Tensor[(1, 8, 6), float32] */;
  %1641 = cast(%var_19139, dtype="float32") /* ty=Tensor[(13, 8, 6), float32] */;
  %1642 = power(%1640, %1641) /* ty=Tensor[(13, 8, 6), float32] */;
  (%1642,)
}

def @func_20413() -> Tensor[(13, 7, 8), float32] {
  %1644 = fn () -> Tensor[(13, 7, 8), float32] {
    %1643 = @func_16946() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1643.0
  };
  %1644() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_3262(%var_3261: Tensor[(12, 2, 4), float32]) -> (Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) {
  %1653 = fn (%var_3235: Tensor[(12, 2, 4), float32]) -> (Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) {
    %1645 = cast(%var_3235, dtype="float32") /* ty=Tensor[(12, 2, 4), float32] */;
    %1646 = cast(meta[relay.Constant][89] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %1647 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1648 = reshape(%1646, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float32] */;
    %1649 = reshape(%1647, newshape=[]) /* ty=int64 */;
    %1650 = @func_2704(%1648, %1649) /* ty=(Tensor[(7, 15, 4), float32], Tensor[(7, 1, 4), float64], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(720), int32]) */;
    %1651 = rsqrt(%1645) /* ty=Tensor[(12, 2, 4), float32] */;
    %1652 = %1650.4;
    (%1651, %1652, meta[relay.Constant][89] /* ty=Tensor[(28), float32] */, -6 /* ty=int64 */)
  };
  %1653(%var_3261) /* ty=(Tensor[(12, 2, 4), float32], Tensor[(192), int64], Tensor[(28), float32], int64) */
}

def @func_7199() -> Tensor[(48), bool] {
  @func_7197() /* ty=Tensor[(48), bool] */
}

def @func_19445(%var_19436: Tensor[(14, 4, 6), float32], %var_19437: Tensor[(14, 4, 6), float32]) -> (Tensor[(14, 4, 6), float32],) {
  %1654 = cast(%var_19437, dtype="float32") /* ty=Tensor[(14, 4, 6), float32] */;
  %1655 = shape_of(%var_19436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1656 = cast(%var_19436, dtype="float32") /* ty=Tensor[(14, 4, 6), float32] */;
  %1657 = dyn.reshape(%1654, %1655, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1658 = floor_mod(%1656, %1657) /* ty=Tensor[(14, 4, 6), float32] */;
  (%1658,)
}

def @func_9024(%var_8993: Tensor[(9, 4, 8), float32]) -> Tensor[(9, 4, 8), float32] {
  %1659 = cast(%var_8993, dtype="float32") /* ty=Tensor[(9, 4, 8), float32] */;
  %1660 = rsqrt(%1659) /* ty=Tensor[(9, 4, 8), float32] */;
  %1661 = cast(%1660, dtype="float32") /* ty=Tensor[(9, 4, 8), float32] */;
  sin(%1661) /* ty=Tensor[(9, 4, 8), float32] */
}

def @func_14836(%var_14817: Tensor[(192, 16), int64]) -> (Tensor[(192, 16), float32], Tensor[(192, 16), bool]) {
  %1662 = @func_11742() /* ty=Tensor[(192, 1), int64] */;
  %1663 = cast(%1662, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %1664 = cast(%var_14817, dtype="float32") /* ty=Tensor[(192, 16), float32] */;
  %1665 = cast(%var_14817, dtype="bool") /* ty=Tensor[(192, 16), bool] */;
  %1666 = cast(%1662, dtype="bool") /* ty=Tensor[(192, 1), bool] */;
  %1667 = power(%1663, %1664) /* ty=Tensor[(192, 16), float32] */;
  %1668 = greater(%1665, %1666) /* ty=Tensor[(192, 16), bool] */;
  (%1667, %1668)
}

def @func_19906(%var_19905: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(270), int64], Tensor[(96), float32]) {
  %1677 = fn (%var_19896: Tensor[(270), int64]) -> (Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(270), int64], Tensor[(96), float32]) {
    %1669 = @func_8845() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1670 = cast(%var_19896, dtype="int64") /* ty=Tensor[(270), int64] */;
    %1671 = cast(meta[relay.Constant][90] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %1672 = reshape(%1670, newshape=[270]) /* ty=Tensor[(270), int64] */;
    %1673 = reshape(%1671, newshape=[2, 48]) /* ty=Tensor[(2, 48), float32] */;
    %1674 = @func_5634(%1672, %1673) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(720), int32], Tensor[(270), int64], Tensor[(2, 48), float32]) */;
    %1675 = %1669.0;
    %1676 = %1674.2;
    (%1675, %1676, %var_19896, meta[relay.Constant][90] /* ty=Tensor[(96), float32] */)
  };
  %1677(%var_19905) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(270), int64], Tensor[(270), int64], Tensor[(96), float32]) */
}

def @func_11416(%var_11405: Tensor[(10, 10, 5), int64], %var_11406: Tensor[(10, 10, 5), int64]) -> (Tensor[(10, 10, 5), bool],) {
  %1678 = cast(%var_11406, dtype="bool") /* ty=Tensor[(10, 10, 5), bool] */;
  %1679 = shape_of(%var_11405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1680 = cast(%var_11405, dtype="bool") /* ty=Tensor[(10, 10, 5), bool] */;
  %1681 = dyn.reshape(%1678, %1679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1682 = less(%1680, %1681) /* ty=Tensor[(10, 10, 5), bool] */;
  (%1682,)
}

def @func_20075() -> (Tensor[(13, 7, 8), float32],) {
  %1683 = @func_12925() /* ty=Tensor[(13, 7, 8), float32] */;
  (%1683,)
}

def @func_16216(%var_16214: Tensor[(7, 4), float32], %var_16215: Tensor[(720, 1), int32]) -> (bool, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(7, 4), float32], Tensor[(720, 1), int32]) {
  @func_16212(%var_16214, %var_16215) /* ty=(bool, Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32], Tensor[(7, 4), float32], Tensor[(720, 1), int32]) */
}

def @func_14148() -> (Tensor[(13, 7, 8), float32],) {
  %1685 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1684 = @func_10557() /* ty=Tensor[(13, 7, 8), float32] */;
    (%1684,)
  };
  %1685() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_6260() -> Tensor[(13, 7, 8), float32] {
  @func_6258() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_21043() -> Tensor[(13, 7, 8), float32] {
  %1686 = fn () -> Tensor[(13, 7, 8), float32] {
    @func_11101() /* ty=Tensor[(13, 7, 8), float32] */
  };
  %1686() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_5620() -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) {
  %1692 = fn () -> (Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) {
    %1687 = cast(meta[relay.Constant][91] /* ty=Tensor[(48), bool] */, dtype="bool") /* ty=Tensor[(48), bool] */;
    %1688 = reshape(%1687, newshape=[48]) /* ty=Tensor[(48), bool] */;
    %1689 = @func_4977(%1688) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], bool, Tensor[(48), bool]) */;
    %1690 = @func_4693() /* ty=Tensor[(13, 7, 8), float32] */;
    %1691 = %1689.1;
    (%1690, %1691, meta[relay.Constant][91] /* ty=Tensor[(48), bool] */)
  };
  %1692() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(1, 8, 6), float64], Tensor[(48), bool]) */
}

def @func_11101() -> Tensor[(13, 7, 8), float32] {
  %1693 = @func_4471() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1693.0
}

def @func_11168() -> Tensor[(13, 7, 8), float32] {
  %1695 = fn () -> Tensor[(13, 7, 8), float32] {
    %1694 = @func_10088() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1694.0
  };
  %1695() /* ty=Tensor[(13, 7, 8), float32] */
}

def @func_10102() -> (Tensor[(13, 7, 8), float32],) {
  %1696 = @func_7188() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1697 = %1696.1;
  (%1697,)
}

def @func_7725(%var_7707: Tensor[(11, 3, 11), bool], %var_7708: Tensor[(11, 3, 11), bool]) -> Tensor[(11, 3, 11), bool] {
  %1698 = cast(%var_7708, dtype="bool") /* ty=Tensor[(11, 3, 11), bool] */;
  %1699 = shape_of(%var_7707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1700 = cast(%var_7707, dtype="bool") /* ty=Tensor[(11, 3, 11), bool] */;
  %1701 = dyn.reshape(%1698, %1699, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1700, %1701) /* ty=Tensor[(11, 3, 11), bool] */
}

def @func_16043(%var_16011: int64, %var_16012: Tensor[(14, 8, 2), int64], %var_16020: Tensor[(18), float32]) -> (Tensor[(14, 8, 2), bool], Tensor[(?, 3, 6), bool], Tensor[(18), float32], bool, Tensor[(13, 7, 8), float32]) {
  %1702 = cast(%var_16011, dtype="bool") /* ty=bool */;
  %1703 = cast(%var_16012, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %1704 = cast(%var_16020, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1705 = reshape(%1704, newshape=[1, 3, 6]) /* ty=Tensor[(1, 3, 6), float32] */;
  %1706 = @func_9542() /* ty=(bool,) */;
  %1707 = @func_12897() /* ty=(Tensor[(13, 7, 8), float32],) */;
  %1708 = greater(%1702, %1703) /* ty=Tensor[(14, 8, 2), bool] */;
  %1709 = @func_9128(%1705) /* ty=Tensor[(?, 3, 6), bool] */;
  %1710 = %1706.0;
  %1711 = %1707.0;
  (%1708, %1709, %var_16020, %1710, %1711)
}

def @func_10500() -> (Tensor[(13, 7, 8), float32],) {
  @func_10498() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_13983() -> (Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) {
  %1712 = @func_10123() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1713 = @func_12609() /* ty=(Tensor[(13, 7, 8), float32], Tensor[(13, 7, 8), float32]) */;
  %1714 = %1712.0;
  %1715 = %1713.0;
  (%1714, %1715)
}

def @func_10038() -> (Tensor[(13, 7, 8), float32],) {
  %1718 = fn () -> (Tensor[(13, 7, 8), float32],) {
    %1716 = @func_5551() /* ty=(Tensor[(13, 7, 8), float32],) */;
    %1717 = %1716.0;
    (%1717,)
  };
  %1718() /* ty=(Tensor[(13, 7, 8), float32],) */
}

def @func_607(%var_574: Tensor[(8, 6, 15), int32], %var_595: Tensor[(14), float32]) -> (Tensor[(8, 6, 15), int32], Tensor[(8, 6, 15), float32], Tensor[(1, 7, 2), float32], Tensor[(14), float32], Tensor[(16, 1, 12), int64], int64, Tensor[(192), int64], Tensor[(16, 1, 12), int64]) {
  %1719 = cast(meta[relay.Constant][92] /* ty=Tensor[(8, 6, 15), int32] */, dtype="int32") /* ty=Tensor[(8, 6, 15), int32] */;
  %1720 = shape_of(%var_574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1721 = cast(%var_574, dtype="int32") /* ty=Tensor[(8, 6, 15), int32] */;
  %1722 = dyn.reshape(%1719, %1720, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1723 = cast(%var_574, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
  %1724 = cast(%var_595, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1725 = reshape(%1724, newshape=[1, 7, 2]) /* ty=Tensor[(1, 7, 2), float32] */;
  %1726 = @func_428(%1725) /* ty=(Tensor[(1, 7, 2), float32],) */;
  %1727 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1728 = cast(meta[relay.Constant][93] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1729 = reshape(%1727, newshape=[]) /* ty=int64 */;
  %1730 = reshape(%1728, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1731 = @func_203(%1729, %1730) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1732 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1733 = cast(meta[relay.Constant][93] /* ty=Tensor[(192), int64] */, dtype="int64") /* ty=Tensor[(192), int64] */;
  %1734 = reshape(%1732, newshape=[]) /* ty=int64 */;
  %1735 = reshape(%1733, newshape=[16, 1, 12]) /* ty=Tensor[(16, 1, 12), int64] */;
  %1736 = @func_203(%1734, %1735) /* ty=(Tensor[(16, 1, 12), int64],) */;
  %1737 = bitwise_xor(%1721, %1722) /* ty=Tensor[(8, 6, 15), int32] */;
  %1738 = atan(%1723) /* ty=Tensor[(8, 6, 15), float32] */;
  %1739 = %1726.0;
  %1740 = %1731.0;
  %1741 = %1736.0;
  (%1737, %1738, %1739, %var_595, %1740, 5 /* ty=int64 */, meta[relay.Constant][93] /* ty=Tensor[(192), int64] */, %1741)
}

def @func_5884() -> (Tensor[(13, 7, 8), float32],) {
  @func_5882() /* ty=(Tensor[(13, 7, 8), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen796/build/output.py", line 6177, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:15:03] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


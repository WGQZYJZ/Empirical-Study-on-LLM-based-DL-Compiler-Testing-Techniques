==========mod==========
#[version = "0.0.5"]
def @func_7482() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  %0 = @func_6177() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %2 = reshape(%1, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %3 = @func_3661(%2) /* ty=(Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) */;
  %4 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %5 = @func_4446() /* ty=Tensor[(13, 3, 16), float32] */;
  %6 = @func_6871() /* ty=Tensor[(5, 3, 8), float64] */;
  %7 = %0.0;
  %8 = @func_7215() /* ty=Tensor[(13, 3, 16), float32] */;
  %9 = %3.1;
  %10 = %4.2;
  (%5, %6, %7, %8, %9, meta[relay.Constant][0] /* ty=Tensor[(208), uint8] */, %10)
}

def @func_22544(%var_22531: Tensor[(1, 8, 7), float64], %var_22532: Tensor[(1, 8, 7), float64]) -> Tensor[(?, 8, 7), float64] {
  %11 = cast(%var_22532, dtype="float64") /* ty=Tensor[(1, 8, 7), float64] */;
  %12 = shape_of(%var_22531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%var_22531, dtype="float64") /* ty=Tensor[(1, 8, 7), float64] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%13, %14) /* ty=Tensor[(?, 8, 7), float64] */
}

def @func_15798(%var_15780: float32, %var_15781: Tensor[(11, 1, 8), float32]) -> (Tensor[(11, 1, 8), float32], Tensor[(5, 3, 8), float64]) {
  %15 = cast(%var_15780, dtype="float32") /* ty=float32 */;
  %16 = cast(%var_15781, dtype="float32") /* ty=Tensor[(11, 1, 8), float32] */;
  %17 = @func_6440() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %18 = floor_divide(%15, %16) /* ty=Tensor[(11, 1, 8), float32] */;
  %19 = %17.1;
  (%18, %19)
}

def @func_12079() -> Tensor[(13, 3, 16), float32] {
  @func_3313() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_19208() -> (Tensor[(13, 3, 16), float32],) {
  %20 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
  %21 = %20.1;
  (%21,)
}

def @func_4391() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %22 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %23 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %24 = %22.1;
  %25 = %23.0;
  (%24, %25)
}

def @func_23254() -> (Tensor[(5, 3, 8), float32],) {
  %26 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
  %27 = %26.1;
  (%27,)
}

def @func_2131() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %28 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %29 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %30 = %28.1;
  %31 = %29.0;
  (%30, %31)
}

def @func_2644() -> Tensor[(5, 3, 8), float64] {
  @func_2010() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_13620() -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) {
  %32 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %33 = @func_3332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %34 = %32.0;
  %35 = %33.1;
  (%34, %35)
}

def @func_17918(%var_17909: Tensor[(10, 7, 11), float32]) -> (Tensor[(10, 7, 11), float32],) {
  %36 = cast(%var_17909, dtype="float32") /* ty=Tensor[(10, 7, 11), float32] */;
  %37 = acos(%36) /* ty=Tensor[(10, 7, 11), float32] */;
  (%37,)
}

def @func_9747() -> (Tensor[(13, 3, 16), float32], Tensor[(208), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %38 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %39 = @func_7559() /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(312, 2), float32]) */;
  %40 = %39.0;
  %41 = cast(%40, dtype="float64") /* ty=Tensor[(208), float64] */;
  %42 = @func_8576() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %43 = %38.1;
  %44 = cast(%43, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %45 = reshape(%44, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %46 = @func_4171(%45) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
  %47 = acos(%41) /* ty=Tensor[(208), float64] */;
  %48 = %42.0;
  %49 = %46.1;
  (%43, %47, %48, %49)
}

def @func_6177() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %50 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  %51 = @func_2286() /* ty=Tensor[(13, 3, 16), float32] */;
  (%50, %51)
}

def @func_20955() -> Tensor[(5, 3, 8), float64] {
  @func_6897() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_18264() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %52 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %53 = %52.0;
  %54 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  (%53, %54)
}

def @func_7559() -> (Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(312, 2), float32]) {
  %55 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %56 = cast(meta[relay.Constant][1] /* ty=Tensor[(312, 2), float32] */, dtype="float32") /* ty=Tensor[(312, 2), float32] */;
  %57 = reshape(%56, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %58 = @func_2541(%57) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %59 = %55.2;
  %60 = %58.0;
  (%59, %60, meta[relay.Constant][1] /* ty=Tensor[(312, 2), float32] */)
}

def @func_5224(%var_5214: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32]) {
  %61 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %62 = cast(%var_5214, dtype="float32") /* ty=Tensor[(624), float32] */;
  %63 = reshape(%62, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %64 = @func_4123(%63) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %65 = %61.0;
  %66 = %64.1;
  (%65, %66, %var_5214)
}

def @func_2010() -> Tensor[(5, 3, 8), float64] {
  @func_1956() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_10960() -> Tensor[(48), float64] {
  %67 = @func_4959() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(8, 2, 3), int32], Tensor[(48), float64]) */;
  %67.2
}

def @func_13156() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %68 = @func_6332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int64]) */;
  %69 = %68.0;
  %70 = @func_3313() /* ty=Tensor[(13, 3, 16), float32] */;
  (%69, %70)
}

def @func_7896() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %71 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %72 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %73 = %71.1;
  %74 = %72.1;
  (%73, %74)
}

def @func_9136() -> (Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) {
  %75 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
  %76 = %75.0;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(5, 10, 4), float64] */;
  %78 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %79 = log10(%77) /* ty=Tensor[(5, 10, 4), float64] */;
  %80 = %78.0;
  (%79, %80)
}

def @func_15348() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(80), float64], Tensor[(720), float64]) {
  %81 = @func_7752() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %82 = @func_5103() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %83 = cast(meta[relay.Constant][2] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %84 = cast(meta[relay.Constant][2] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %85 = reshape(%83, newshape=[4, 20]) /* ty=Tensor[(4, 20), float64] */;
  %86 = reshape(%84, newshape=[4, 20]) /* ty=Tensor[(4, 20), float64] */;
  %87 = @func_14459(%85, %86) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 20), uint64], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64]) */;
  %88 = @func_10725() /* ty=Tensor[(5, 3, 8), float64] */;
  %89 = %81.0;
  %90 = %82.0;
  %91 = %87.0;
  %92 = @func_4246() /* ty=Tensor[(720), float64] */;
  (%88, %89, %90, %91, meta[relay.Constant][2] /* ty=Tensor[(80), float64] */, %92)
}

def @func_20656() -> (Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) {
  %93 = @func_13293() /* ty=(Tensor[(8, 78), float32],) */;
  %94 = @func_8649() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %95 = %93.0;
  %96 = %94.1;
  (%95, %96)
}

def @func_10069(%var_10066: Tensor[(7, 1), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7, 1), float64]) {
  %97 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %98 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
  %99 = cast(%var_10066, dtype="float64") /* ty=Tensor[(7, 1), float64] */;
  %100 = reshape(%99, newshape=[1, 7, 1]) /* ty=Tensor[(1, 7, 1), float64] */;
  %101 = @func_2458(%100) /* ty=(Tensor[(1, 7, 1), float64],) */;
  %102 = %97.2;
  %103 = %98.1;
  %104 = %101.0;
  (%102, %103, %104, %var_10066)
}

def @func_23185() -> (Tensor[(5, 3, 8), float64],) {
  %105 = @func_7202() /* ty=Tensor[(5, 3, 8), float64] */;
  (%105,)
}

def @func_19582() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %106 = @func_11302() /* ty=Tensor[(5, 3, 8), float64] */;
  %107 = @func_10559() /* ty=Tensor[(5, 3, 8), float64] */;
  %108 = @func_12469() /* ty=Tensor[(5, 3, 8), float64] */;
  (%106, %107, %108)
}

def @func_1821(%var_1786: Tensor[(8, 2, 3), float64], %var_1812: Tensor[(8, 2, 3), float64]) -> (Tensor[(8, 2, 3), int32],) {
  %109 = cast(%var_1786, dtype="float64") /* ty=Tensor[(8, 2, 3), float64] */;
  %110 = log(%109) /* ty=Tensor[(8, 2, 3), float64] */;
  %111 = cast(%var_1812, dtype="int32") /* ty=Tensor[(8, 2, 3), int32] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%110, dtype="int32") /* ty=Tensor[(8, 2, 3), int32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %115 = bitwise_or(%113, %114) /* ty=Tensor[(8, 2, 3), int32] */;
  (%115,)
}

def @func_16049() -> (Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  %116 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
  %117 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %118 = @func_6107() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %119 = %116.1;
  %120 = %117.1;
  %121 = %118.0;
  (%119, %120, %121)
}

def @func_18343() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(208), uint8]) {
  %122 = @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %123 = @func_11070() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %124 = @func_11693() /* ty=Tensor[(5, 3, 8), float64] */;
  %125 = %122.1;
  %126 = %123.1;
  (%124, %125, %126)
}

def @func_11385() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64], Tensor[(5, 3, 8), float64]) {
  %127 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %128 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %129 = %127.0;
  %130 = %128.0;
  %131 = @func_6929() /* ty=Tensor[(5, 3, 8), float64] */;
  (%129, %130, %131)
}

def @func_8231(%var_8194: Tensor[(48), float64], %var_8223: float32) -> (Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(48), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(208), uint8], Tensor[(208), uint8], Tensor[(11, 15, 5), float32], float32, Tensor[(825), float32]) {
  %132 = cast(%var_8194, dtype="float64") /* ty=Tensor[(48), float64] */;
  %133 = cast(%var_8194, dtype="float64") /* ty=Tensor[(48), float64] */;
  %134 = reshape(%132, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %135 = reshape(%133, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %136 = @func_1821(%134, %135) /* ty=(Tensor[(8, 2, 3), int32],) */;
  %137 = cast(meta[relay.Constant][3] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %138 = reshape(%137, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %139 = @func_4171(%138) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
  %140 = cast(meta[relay.Constant][4] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %141 = reshape(%140, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %142 = @func_4733(%141) /* ty=(Tensor[(13, 3, 16), uint8], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(13, 3, 16), float32]) */;
  %143 = cast(%var_8223, dtype="float32") /* ty=float32 */;
  %144 = cast(meta[relay.Constant][5] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %145 = reshape(%143, newshape=[]) /* ty=float32 */;
  %146 = reshape(%144, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %147 = @func_4978(%145, %146) /* ty=(Tensor[(11, 15, 5), float32],) */;
  %148 = @func_5314() /* ty=Tensor[(5, 3, 8), float64] */;
  %149 = %136.0;
  %150 = %139.1;
  %151 = %142.2;
  %152 = %147.0;
  (%148, %149, %var_8194, %150, meta[relay.Constant][3] /* ty=Tensor[(624), float32] */, %151, meta[relay.Constant][4] /* ty=Tensor[(208), uint8] */, %152, %var_8223, meta[relay.Constant][5] /* ty=Tensor[(825), float32] */)
}

def @func_11678() -> Tensor[(13, 3, 16), float32] {
  %153 = @func_5730() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %154 = %153.1;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  sinh(%155) /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_19632() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(6, 10, 11), float64]) {
  %156 = @func_4391() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %157 = @func_16659() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %158 = @func_17108() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %159 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
  %160 = atan(%159) /* ty=Tensor[(6, 10, 11), float32] */;
  %161 = cast(%160, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
  %162 = %156.1;
  %163 = %157.0;
  %164 = %158.1;
  %165 = log2(%161) /* ty=Tensor[(6, 10, 11), float64] */;
  (%162, %163, %164, %165)
}

def @func_7202() -> Tensor[(5, 3, 8), float64] {
  %166 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %166.0
}

def @func_16403() -> Tensor[(5, 3, 8), float64] {
  %167 = @func_15567() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %167.2
}

def @func_20341(%var_20336: Tensor[(9, 14, 12), int64], %var_20337: Tensor[(9, 14, 12), int64]) -> Tensor[(9, 14, 12), int64] {
  %168 = cast(%var_20337, dtype="int64") /* ty=Tensor[(9, 14, 12), int64] */;
  %169 = shape_of(%var_20336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_20336, dtype="int64") /* ty=Tensor[(9, 14, 12), int64] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%170, %171) /* ty=Tensor[(9, 14, 12), int64] */
}

def @func_16106() -> Tensor[(5, 3, 8), float64] {
  @func_14348() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_10302(%var_10227: Tensor[(3, 180), float64], %var_10263: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(6, 6, 15), bool], Tensor[(208), bool], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(5, 3, 8), float64]) {
  %172 = cast(%var_10227, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %173 = reshape(%172, newshape=[6, 6, 15]) /* ty=Tensor[(6, 6, 15), float64] */;
  %174 = @func_8558(%173) /* ty=(Tensor[(6, 6, 15), float32],) */;
  %175 = %174.0;
  %176 = cast(%var_10227, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%175, dtype="bool") /* ty=Tensor[(6, 6, 15), bool] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %180 = @func_7250() /* ty=(Tensor[(208), bool],) */;
  %181 = cast(%var_10263, dtype="float32") /* ty=Tensor[(624), float32] */;
  %182 = reshape(%181, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %183 = @func_3888(%182) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(2, 13, 8), float32], Tensor[(2, 13, 8), uint64], Tensor[(5, 3, 8), float64]) */;
  %184 = cast(meta[relay.Constant][7] /* ty=Tensor[(1690), float64] */, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %185 = reshape(%184, newshape=[1690]) /* ty=Tensor[(1690), float64] */;
  %186 = @func_9015(%185) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), float64], Tensor[(624), float32], Tensor[(624), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(13, 3, 16), float32]) */;
  %187 = @func_10173() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %188 = @func_2644() /* ty=Tensor[(5, 3, 8), float64] */;
  %189 = less_equal(%178, %179) /* ty=Tensor[(6, 6, 15), bool] */;
  %190 = %180.0;
  %191 = %183.1;
  %192 = %186.8;
  %193 = %187.3;
  (%188, %189, %190, %191, %var_10263, %192, meta[relay.Constant][7] /* ty=Tensor[(1690), float64] */, %193)
}

def @func_4624() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %194 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %195 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %196 = @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */;
  %197 = %194.1;
  %198 = %195.2;
  %199 = %196.0;
  (%197, %198, %199)
}

def @func_5620() -> (Tensor[(13, 3, 16), float32],) {
  %200 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %201 = %200.0;
  (%201,)
}

def @func_21303(%var_21298: Tensor[(10, 5, 15), float64]) -> (Tensor[(10, 5, 15), float64],) {
  %202 = cast(%var_21298, dtype="float64") /* ty=Tensor[(10, 5, 15), float64] */;
  %203 = erf(%202) /* ty=Tensor[(10, 5, 15), float64] */;
  (%203,)
}

def @func_8918() -> (Tensor[(5, 3, 8), float64],) {
  %204 = @func_7896() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %205 = %204.1;
  (%205,)
}

def @func_12867() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(720), float64]) {
  %206 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %207 = @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %208 = @func_11424() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %209 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %210 = %206.1;
  %211 = %207.0;
  %212 = %208.0;
  %213 = %209.0;
  %214 = @func_4246() /* ty=Tensor[(720), float64] */;
  (%210, %211, %212, %213, %214)
}

def @func_21372() -> (Tensor[(5, 3, 8), float32], Tensor[(208), uint8], Tensor[(720), float64]) {
  %215 = @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %216 = @func_12867() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(720), float64]) */;
  %217 = @func_13947() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */;
  %218 = %215.1;
  %219 = %216.3;
  %220 = %217.2;
  (%218, %219, %220)
}

def @func_19418() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %221 = @func_16807() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */;
  %222 = @func_14077() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %223 = @func_16381() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %224 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %225 = %221.1;
  %226 = %222.1;
  %227 = %223.0;
  (%224, %225, %226, %227)
}

def @func_8897(%var_8807: float32, %var_8808: Tensor[(5, 165), float32], %var_8863: Tensor[(88), float64], %var_8864: Tensor[(60, 12), float64]) -> (Tensor[(5, 3, 8), float32], Tensor[(11, 15, 5), float32], float32, Tensor[(5, 165), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(?, 11, 8), bool], Tensor[(88), float64], Tensor[(60, 12), float64]) {
  %228 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %229 = %228.0;
  %230 = cast(%229, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %231 = cast(%var_8807, dtype="float32") /* ty=float32 */;
  %232 = cast(%var_8808, dtype="float32") /* ty=Tensor[(5, 165), float32] */;
  %233 = reshape(%231, newshape=[]) /* ty=float32 */;
  %234 = reshape(%232, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %235 = @func_4978(%233, %234) /* ty=(Tensor[(11, 15, 5), float32],) */;
  %236 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %237 = cast(%var_8863, dtype="float64") /* ty=Tensor[(88), float64] */;
  %238 = cast(%var_8864, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %239 = reshape(%237, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %240 = reshape(%238, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %241 = @func_4514(%239, %240) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %242 = sqrt(%230) /* ty=Tensor[(5, 3, 8), float32] */;
  %243 = %235.0;
  %244 = %236.0;
  %245 = @func_7010() /* ty=Tensor[(13, 3, 16), bool] */;
  %246 = %241.0;
  (%242, %243, %var_8807, %var_8808, %244, %245, %246, %var_8863, %var_8864)
}

def @func_4686() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) {
  %247 = @func_3375() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %248 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 78), float32] */, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
  %249 = reshape(%248, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %250 = @func_1610(%249) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %251 = %247.0;
  %252 = %250.0;
  (%251, %252, meta[relay.Constant][8] /* ty=Tensor[(8, 78), float32] */)
}

def @func_18764() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %253 = @func_7752() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %254 = @func_12079() /* ty=Tensor[(13, 3, 16), float32] */;
  %255 = %253.0;
  (%254, %255)
}

def @func_2356() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %256 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %257 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %258 = %256.1;
  (%257, %258)
}

def @func_11693() -> Tensor[(5, 3, 8), float64] {
  @func_4270() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_2458(%var_2452: Tensor[(1, 7, 1), float64]) -> (Tensor[(1, 7, 1), float64],) {
  %259 = cast(%var_2452, dtype="float64") /* ty=Tensor[(1, 7, 1), float64] */;
  %260 = tan(%259) /* ty=Tensor[(1, 7, 1), float64] */;
  (%260,)
}

def @func_10742() -> (Tensor[(5, 3, 8), float64],) {
  %261 = @func_7896() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %262 = %261.1;
  (%262,)
}

def @func_2741() -> (Tensor[(5, 3, 8), float64],) {
  %263 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %264 = %263.1;
  (%264,)
}

def @func_3135() -> (Tensor[(5, 3, 8), float64],) {
  %265 = @func_2644() /* ty=Tensor[(5, 3, 8), float64] */;
  (%265,)
}

def @func_12698() -> Tensor[(5, 3, 8), float64] {
  %266 = @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %266.0
}

def @func_10338() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %267 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %268 = %267.1;
  %269 = @func_6897() /* ty=Tensor[(5, 3, 8), float64] */;
  (%268, %269)
}

def @func_10604() -> Tensor[(13, 3, 16), float32] {
  %270 = @func_8058() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %270.1
}

def @func_19916() -> Tensor[(5, 10, 4), float64] {
  %271 = @func_9136() /* ty=(Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) */;
  %271.0
}

def @func_14773(%var_14734: Tensor[(7), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(7), float64], Tensor[(5, 3, 8), float64]) {
  %272 = @func_11893() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %273 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %274 = cast(%var_14734, dtype="float64") /* ty=Tensor[(7), float64] */;
  %275 = reshape(%274, newshape=[7, 1]) /* ty=Tensor[(7, 1), float64] */;
  %276 = @func_10069(%275) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7, 1), float64]) */;
  %277 = %272.0;
  %278 = %273.0;
  %279 = %276.0;
  %280 = @func_12469() /* ty=Tensor[(5, 3, 8), float64] */;
  (%277, %278, %279, %var_14734, %280)
}

def @func_6716() -> (Tensor[(5, 3, 8), float64],) {
  %281 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %282 = %281.0;
  (%282,)
}

def @func_20695() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
  %283 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %284 = @func_13947() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */;
  %285 = %283.0;
  %286 = %284.2;
  (%285, %286)
}

def @func_16198() -> (Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %287 = @func_9609() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */;
  %288 = %287.3;
  %289 = cast(%288, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %290 = reshape(%289, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %291 = @func_5224(%290) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32]) */;
  %292 = %291.2;
  (%288, %292)
}

def @func_11842() -> (Tensor[(720), float64],) {
  %293 = @func_4246() /* ty=Tensor[(720), float64] */;
  (%293,)
}

def @func_21538() -> (Tensor[(5, 3, 8), float64],) {
  %294 = @func_13947() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */;
  %295 = %294.1;
  (%295,)
}

def @func_3538() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) {
  %296 = @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %297 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %298 = @func_2644() /* ty=Tensor[(5, 3, 8), float64] */;
  %299 = %296.0;
  %300 = %297.1;
  (%298, %299, %300)
}

def @func_15281() -> (Tensor[(13, 3, 16), bool],) {
  %301 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
  %302 = %301.2;
  (%302,)
}

def @func_2174() -> (Tensor[(13, 3, 16), float32],) {
  %303 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %304 = %303.2;
  (%304,)
}

def @func_20407() -> Tensor[(15, 16, 12), float64] {
  %305 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 16, 12), float64] */;
  sqrt(%305) /* ty=Tensor[(15, 16, 12), float64] */
}

def @func_15828(%var_15809: Tensor[(10, 10, 1), float64]) -> (Tensor[(13, 3, 16), float64], Tensor[(10, 10, ?), bool]) {
  %306 = cast(%var_15809, dtype="float64") /* ty=Tensor[(10, 10, 1), float64] */;
  %307 = exp(%306) /* ty=Tensor[(10, 10, 1), float64] */;
  %308 = cast(%var_15809, dtype="int64") /* ty=Tensor[(10, 10, 1), int64] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="int64") /* ty=Tensor[(10, 10, 1), int64] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %312 = minimum(%310, %311) /* ty=Tensor[(10, 10, ?), int64] */;
  %313 = cast(%312, dtype="bool") /* ty=Tensor[(10, 10, ?), bool] */;
  %314 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%307, dtype="bool") /* ty=Tensor[(10, 10, 1), bool] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %317 = @func_12133() /* ty=Tensor[(13, 3, 16), float64] */;
  %318 = logical_and(%315, %316) /* ty=Tensor[(10, 10, ?), bool] */;
  (%317, %318)
}

def @func_2822() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) {
  %319 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %320 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %321 = %320.0;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %323 = reshape(%322, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %324 = @func_2541(%323) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %325 = %319.0;
  %326 = %324.0;
  (%325, %321, %326)
}

def @func_14459(%var_14403: Tensor[(4, 20), float64], %var_14405: Tensor[(4, 20), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 20), uint64], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64]) {
  %327 = cast(%var_14403, dtype="float64") /* ty=Tensor[(4, 20), float64] */;
  %328 = reshape(%327, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %329 = @func_13686(%328) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(2, 13, 8), float32]) */;
  %330 = cast(%var_14405, dtype="uint64") /* ty=Tensor[(4, 20), uint64] */;
  %331 = shape_of(%var_14403, dtype="int32") /* ty=Tensor[(2), int32] */;
  %332 = cast(%var_14403, dtype="uint64") /* ty=Tensor[(4, 20), uint64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %334 = @func_7250() /* ty=(Tensor[(208), bool],) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %337 = reshape(%336, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %338 = @func_8123(%337) /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64]) */;
  %339 = add(%332, %333) /* ty=Tensor[(4, 20), uint64] */;
  %340 = cast(%339, dtype="float64") /* ty=Tensor[(4, 20), float64] */;
  %341 = reshape(%340, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %342 = @func_13686(%341) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(2, 13, 8), float32]) */;
  %343 = @func_6950() /* ty=Tensor[(13, 3, 16), float32] */;
  %344 = %329.0;
  %345 = %338.1;
  %346 = %342.2;
  (%343, %344, %339, %335, %345, %346)
}

def @func_15567() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %347 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %348 = @func_11797() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %349 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %350 = %347.0;
  %351 = %348.0;
  %352 = %349.0;
  (%350, %351, %352)
}

def @func_3816() -> (Tensor[(13, 3, 16), float32],) {
  %353 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %354 = %353.1;
  (%354,)
}

def @func_7373() -> Tensor[(5, 3, 8), float32] {
  %355 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %355.1
}

def @func_16139() -> Tensor[(5, 3, 8), float64] {
  @func_10725() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_13394() -> (Tensor[(5, 3, 8), float64],) {
  %356 = @func_10633() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %357 = %356.0;
  (%357,)
}

def @func_6702() -> Tensor[(208), uint8] {
  %358 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
  %358.2
}

def @func_21451() -> Tensor[(5, 3, 8), float64] {
  %359 = @func_17048() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %359.0
}

def @func_20179() -> Tensor[(13, 3, 16), float32] {
  @func_14615() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_1610(%var_1584: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), float32],) {
  %360 = cast(%var_1584, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %361 = rsqrt(%360) /* ty=Tensor[(13, 3, 16), float32] */;
  (%361,)
}

def @func_8753() -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) {
  %362 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %363 = @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */;
  %364 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %365 = @func_7373() /* ty=Tensor[(5, 3, 8), float32] */;
  %366 = %362.0;
  %367 = %363.2;
  %368 = %364.2;
  (%365, %366, %367, %368)
}

def @func_16381() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %369 = @func_10338() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %370 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %371 = %369.0;
  %372 = %370.3;
  (%371, %372)
}

def @func_20512(%var_20467: Tensor[(208), bool], %var_20487: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), int32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
  %373 = @func_11797() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %374 = @func_7250() /* ty=(Tensor[(208), bool],) */;
  %375 = %374.0;
  %376 = cast(%var_20467, dtype="int32") /* ty=Tensor[(208), int32] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(1), int32] */;
  %378 = cast(%375, dtype="int32") /* ty=Tensor[(208), int32] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?), int32] */;
  %380 = cast(%var_20487, dtype="float32") /* ty=Tensor[(624), float32] */;
  %381 = reshape(%380, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %382 = @func_1610(%381) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %383 = @func_13499() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %384 = @func_17465() /* ty=Tensor[(5, 3, 8), float64] */;
  %385 = %373.0;
  %386 = add(%378, %379) /* ty=Tensor[(208), int32] */;
  %387 = %382.0;
  %388 = %383.0;
  (%384, %385, %386, %387, %var_20487, %388)
}

def @func_11787() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %389 = @func_7215() /* ty=Tensor[(13, 3, 16), float32] */;
  %390 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 3, 16), float32] */, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %394 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %395 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %396 = logical_and(%392, %393) /* ty=Tensor[(13, 3, 16), bool] */;
  %397 = %394.1;
  (%395, %396, %397)
}

def @func_7752() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) {
  %398 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %399 = @func_5730() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %400 = %398.0;
  %401 = @func_6950() /* ty=Tensor[(13, 3, 16), float32] */;
  %402 = %399.2;
  (%400, %401, %402)
}

def @func_2916() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %403 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %404 = %403.0;
  %405 = @func_2884() /* ty=Tensor[(5, 3, 8), float64] */;
  %406 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  (%404, %405, %406)
}

def @func_3117() -> (Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) {
  %407 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %408 = cast(%407, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %409 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %410 = atan(%408) /* ty=Tensor[(5, 3, 8), float32] */;
  %411 = %409.0;
  (%410, %411)
}

def @func_7980() -> (Tensor[(5, 3, 8), float64],) {
  %412 = @func_6929() /* ty=Tensor[(5, 3, 8), float64] */;
  (%412,)
}

def @func_23363(%var_23358: Tensor[(2, 11, 13), int32]) -> Tensor[(2, 11, 13), int32] {
  %413 = cast(%var_23358, dtype="int32") /* ty=Tensor[(2, 11, 13), int32] */;
  %414 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(2, 11, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 11, 13), int32] */, dtype="int32") /* ty=Tensor[(2, 11, 13), int32] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  subtract(%415, %416) /* ty=Tensor[(2, 11, 13), int32] */
}

def @func_15022() -> (Tensor[(5, 3, 8), float64],) {
  %417 = @func_13394() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %418 = %417.0;
  (%418,)
}

def @func_6217() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(7), float64]) {
  %419 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %420 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
  %421 = @func_3578() /* ty=Tensor[(13, 3, 16), float32] */;
  %422 = %419.0;
  %423 = %420.2;
  (%421, %422, %423)
}

def @func_7351() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %424 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %425 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %426 = %425.0;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %428 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %429 = %424.0;
  %430 = erf(%427) /* ty=Tensor[(5, 3, 8), float64] */;
  %431 = %428.2;
  (%429, %430, %431)
}

def @func_3049() -> (Tensor[(5, 3, 8), float64],) {
  %432 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %433 = %432.0;
  (%433,)
}

def @func_3936() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %434 = @func_3816() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %435 = %434.0;
  %436 = cast(%435, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %437 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %438 = log(%436) /* ty=Tensor[(13, 3, 16), float32] */;
  %439 = %437.2;
  (%438, %439)
}

def @func_1956() -> Tensor[(5, 3, 8), float64] {
  %440 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  log(%440) /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_10640() -> Tensor[(13, 3, 16), float32] {
  %441 = @func_7242() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %441.1
}

def @func_18992() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64], Tensor[(5, 3, 8), int8]) {
  %442 = @func_15022() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %443 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %444 = %442.0;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %446 = reshape(%445, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %447 = @func_2624(%446) /* ty=(Tensor[(5, 3, 8), int8],) */;
  %448 = %443.0;
  %449 = %447.0;
  (%444, %448, %449)
}

def @func_22126() -> (Tensor[(5, 3, 8), float64],) {
  %450 = @func_13394() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %451 = %450.0;
  (%451,)
}

def @func_12133() -> Tensor[(13, 3, 16), float64] {
  %452 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %452.1
}

def @func_12382(%var_12372: Tensor[(48), float64], %var_12373: float32) -> (Tensor[(208), uint8], Tensor[(13, 3, 16), float32], Tensor[(825), float32], Tensor[(48), float64], float32) {
  %453 = @func_7107() /* ty=(Tensor[(720), float64], Tensor[(208), uint8]) */;
  %454 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %455 = cast(%var_12372, dtype="float64") /* ty=Tensor[(48), float64] */;
  %456 = cast(%var_12373, dtype="float32") /* ty=float32 */;
  %457 = reshape(%455, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %458 = reshape(%456, newshape=[]) /* ty=float32 */;
  %459 = @func_8231(%457, %458) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(48), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(208), uint8], Tensor[(208), uint8], Tensor[(11, 15, 5), float32], float32, Tensor[(825), float32]) */;
  %460 = %453.1;
  %461 = %454.1;
  %462 = %459.9;
  (%460, %461, %462, %var_12372, %var_12373)
}

def @func_2286() -> Tensor[(13, 3, 16), float32] {
  %463 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %463.1
}

def @func_4032() -> (Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  %464 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %465 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %466 = %464.2;
  %467 = %465.0;
  (%466, %467)
}

def @func_16659() -> (Tensor[(5, 3, 8), float64],) {
  %468 = @func_7834() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %469 = %468.0;
  (%469,)
}

def @func_10173() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) {
  %470 = @func_8649() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %471 = @func_4419() /* ty=(Tensor[(13, 3, 16), float64],) */;
  %472 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %473 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %474 = %470.1;
  %475 = %471.0;
  %476 = %472.0;
  (%473, %474, %475, %476)
}

def @func_13089() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %477 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %478 = @func_11476() /* ty=Tensor[(13, 3, 16), float32] */;
  %479 = %477.0;
  (%478, %479)
}

def @func_22243() -> Tensor[(13, 3, 16), float64] {
  %480 = @func_11591() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) */;
  %481 = %480.1;
  %482 = cast(%481, dtype="float64") /* ty=Tensor[(13, 3, 16), float64] */;
  tan(%482) /* ty=Tensor[(13, 3, 16), float64] */
}

def @func_15260() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %483 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %484 = %483.0;
  %485 = @func_13964() /* ty=Tensor[(5, 3, 8), float64] */;
  %486 = @func_4270() /* ty=Tensor[(5, 3, 8), float64] */;
  (%484, %485, %486)
}

def @func_1776(%var_1747: Tensor[(6, 15, 8), float64]) -> (Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
  %487 = cast(%var_1747, dtype="float64") /* ty=Tensor[(6, 15, 8), float64] */;
  %488 = cast(meta[relay.Constant][13] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %489 = reshape(%488, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %490 = @func_1610(%489) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %491 = cast(meta[relay.Constant][13] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %492 = reshape(%491, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %493 = @func_1610(%492) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %494 = sinh(%487) /* ty=Tensor[(6, 15, 8), float64] */;
  %495 = %490.0;
  %496 = %493.0;
  (%494, %495, meta[relay.Constant][13] /* ty=Tensor[(624), float32] */, %496)
}

def @func_1973() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) {
  %497 = cast(meta[relay.Constant][14] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %498 = reshape(%497, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %499 = @func_1776(%498) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
  %500 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  %501 = %499.3;
  (%500, %501, meta[relay.Constant][14] /* ty=Tensor[(720), float64] */)
}

def @func_7506() -> (Tensor[(720), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %502 = @func_7107() /* ty=(Tensor[(720), float64], Tensor[(208), uint8]) */;
  %503 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %504 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %505 = %502.0;
  %506 = %503.0;
  %507 = %504.1;
  (%505, %506, %507)
}

def @func_16413() -> Tensor[(208), uint8] {
  %508 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %508.0
}

def @func_4270() -> Tensor[(5, 3, 8), float64] {
  %509 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %509.1
}

def @func_6107() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %510 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %511 = @func_3816() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %512 = %510.0;
  %513 = %511.0;
  (%512, %513)
}

def @func_21973(%var_21916: Tensor[(11, 6, 13), int64], %var_21917: Tensor[(11, 6, 13), int64]) -> (Tensor[(11, 6, 13), bool], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int8], Tensor[(3, 40), float64]) {
  %514 = cast(%var_21917, dtype="bool") /* ty=Tensor[(11, 6, 13), bool] */;
  %515 = shape_of(%var_21916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_21916, dtype="bool") /* ty=Tensor[(11, 6, 13), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 40), float64] */, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
  %519 = reshape(%518, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %520 = @func_2624(%519) /* ty=(Tensor[(5, 3, 8), int8],) */;
  %521 = greater_equal(%516, %517) /* ty=Tensor[(11, 6, 13), bool] */;
  %522 = @func_14615() /* ty=Tensor[(13, 3, 16), float32] */;
  %523 = %520.0;
  (%521, %522, %523, meta[relay.Constant][15] /* ty=Tensor[(3, 40), float64] */)
}

def @func_22170() -> Tensor[(5, 3, 8), float64] {
  %524 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %524.1
}

def @func_2624(%var_2582: Tensor[(5, 3, 8), float64]) -> (Tensor[(5, 3, 8), int8],) {
  %525 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %526 = %525.0;
  %527 = cast(%var_2582, dtype="int8") /* ty=Tensor[(5, 3, 8), int8] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="int8") /* ty=Tensor[(5, 3, 8), int8] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %531 = logical_xor(%529, %530) /* ty=Tensor[(5, 3, 8), int8] */;
  (%531,)
}

def @func_11152() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %532 = @func_7752() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %533 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %534 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %535 = @func_10640() /* ty=Tensor[(13, 3, 16), float32] */;
  %536 = %532.0;
  %537 = %533.0;
  %538 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
  %539 = %534.2;
  (%535, %536, %537, %538, %539)
}

def @func_22999() -> Tensor[(5, 3, 8), float64] {
  @func_19728() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_16977() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) {
  %540 = @func_15260() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %541 = @func_15978() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %542 = %540.0;
  %543 = @func_7373() /* ty=Tensor[(5, 3, 8), float32] */;
  %544 = %541.2;
  %545 = @func_11693() /* ty=Tensor[(5, 3, 8), float64] */;
  (%542, %543, %544, %545)
}

def @func_20270() -> Tensor[(5, 3, 8), float32] {
  %546 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
  %546.1
}

def @func_5172() -> (Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) {
  %547 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %548 = %547.2;
  %549 = cast(meta[relay.Constant][16] /* ty=Tensor[(208), uint8] */, dtype="bool") /* ty=Tensor[(208), bool] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(1), int32] */;
  %551 = cast(%548, dtype="bool") /* ty=Tensor[(208), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?), bool] */;
  %553 = cast(meta[relay.Constant][17] /* ty=Tensor[(208), uint8] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %554 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(208), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %555 = cast(meta[relay.Constant][16] /* ty=Tensor[(208), uint8] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %557 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %558 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
  %559 = logical_and(%551, %552) /* ty=Tensor[(208), bool] */;
  %560 = right_shift(%555, %556) /* ty=Tensor[(208), uint32] */;
  %561 = %557.2;
  %562 = %558.2;
  (%559, %560, %561, %562)
}

def @func_7526() -> (Tensor[(5, 3, 8), float64],) {
  %563 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %564 = %563.0;
  (%564,)
}

def @func_18864() -> Tensor[(5, 3, 8), float64] {
  %565 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %565.0
}

def @func_20910(%var_20858: Tensor[(770), float32]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(10, 7, 11), float32], Tensor[(770), float32], Tensor[(13, 3, 16), float32], Tensor[(14, 14, 4), bool], Tensor[(14, 4), uint8], Tensor[(5, 3, 8), float64]) {
  %566 = @func_6332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int64]) */;
  %567 = @func_17108() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %568 = @func_8397() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %569 = cast(%var_20858, dtype="float32") /* ty=Tensor[(770), float32] */;
  %570 = reshape(%569, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float32] */;
  %571 = @func_17918(%570) /* ty=(Tensor[(10, 7, 11), float32],) */;
  %572 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %573 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 4), uint8] */, dtype="uint8") /* ty=Tensor[(14, 4), uint8] */;
  %574 = reshape(%573, newshape=[14, 1, 4]) /* ty=Tensor[(14, 1, 4), uint8] */;
  %575 = @func_8696(%574) /* ty=(Tensor[(14, 14, 4), uint8], Tensor[(2, 13, 8), uint8], Tensor[(720), float64], Tensor[(14, 14, 4), bool], Tensor[(5, 3, 8), float64]) */;
  %576 = %566.0;
  %577 = %567.0;
  %578 = %568.0;
  %579 = %571.0;
  %580 = %572.1;
  %581 = %575.3;
  %582 = @func_20586() /* ty=Tensor[(5, 3, 8), float64] */;
  (%576, %577, %578, %579, %var_20858, %580, %581, meta[relay.Constant][18] /* ty=Tensor[(14, 4), uint8] */, %582)
}

def @func_12469() -> Tensor[(5, 3, 8), float64] {
  @func_5963() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_16483() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  %583 = @func_11787() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %584 = %583.0;
  %585 = @func_7202() /* ty=Tensor[(5, 3, 8), float64] */;
  %586 = @func_4270() /* ty=Tensor[(5, 3, 8), float64] */;
  %587 = @func_7802() /* ty=Tensor[(5, 3, 8), float32] */;
  (%584, %585, %586, %587)
}

def @func_16493(%var_16486: Tensor[(1, 12, 9), float64]) -> (Tensor[(1, 12, 9), float64], Tensor[(720), float64]) {
  %588 = cast(%var_16486, dtype="float64") /* ty=Tensor[(1, 12, 9), float64] */;
  %589 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %590 = sqrt(%588) /* ty=Tensor[(1, 12, 9), float64] */;
  %591 = %589.2;
  (%590, %591)
}

def @func_16544() -> (Tensor[(5, 3, 8), float64], Tensor[(208), bool], Tensor[(1690), float64]) {
  %592 = @func_11152() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %593 = cast(meta[relay.Constant][19] /* ty=Tensor[(1690), float64] */, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %594 = reshape(%593, newshape=[13, 10, 13]) /* ty=Tensor[(13, 10, 13), float64] */;
  %595 = @func_7676(%594) /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 10, 13), float32]) */;
  %596 = %592.3;
  %597 = %595.2;
  (%596, %597, meta[relay.Constant][19] /* ty=Tensor[(1690), float64] */)
}

def @func_19165() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %598 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %599 = %598.0;
  %600 = @func_15066() /* ty=Tensor[(5, 3, 8), float64] */;
  %601 = @func_6897() /* ty=Tensor[(5, 3, 8), float64] */;
  (%599, %600, %601)
}

def @func_7067() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %602 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %603 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %604 = %602.2;
  %605 = %603.0;
  %606 = @func_7010() /* ty=Tensor[(13, 3, 16), bool] */;
  (%604, %605, %606)
}

def @func_11476() -> Tensor[(13, 3, 16), float32] {
  %607 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %607.1
}

def @func_9034() -> Tensor[(13, 3, 16), float32] {
  %608 = @func_7896() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %608.0
}

def @func_13499() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %609 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %610 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %611 = %609.0;
  %612 = %610.1;
  (%611, %612)
}

def @func_10707() -> Tensor[(5, 3, 8), float64] {
  %613 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %613.2
}

def @func_2201() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %614 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %615 = %614.1;
  %616 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  (%615, %616)
}

def @func_21897() -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(15, 16, 12), float64]) {
  %617 = @func_18225() /* ty=Tensor[(5, 3, 8), float32] */;
  %618 = @func_16403() /* ty=Tensor[(5, 3, 8), float64] */;
  %619 = @func_20407() /* ty=Tensor[(15, 16, 12), float64] */;
  (%617, %618, %619)
}

def @func_22156() -> Tensor[(13, 3, 16), float32] {
  @func_4446() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_23011() -> Tensor[(13, 3, 16), float32] {
  @func_21090() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_6631(%var_6622: Tensor[(14, 10, 9), float64]) -> Tensor[(14, 10, 9), float64] {
  %620 = cast(%var_6622, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  log(%620) /* ty=Tensor[(14, 10, 9), float64] */
}

def @func_5877() -> (Tensor[(13, 3, 16), float32],) {
  %621 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
  %622 = %621.0;
  (%622,)
}

def @func_12935() -> (Tensor[(5, 3, 8), float64],) {
  %623 = @func_12223() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %624 = %623.1;
  (%624,)
}

def @func_16927() -> (Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %625 = @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %626 = @func_16517() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %627 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %628 = %625.1;
  %629 = %626.1;
  %630 = %627.0;
  (%628, %629, %630)
}

def @func_23339(%var_23326: Tensor[(1512), int64]) -> (Tensor[(5, 3, 8), float64], Tensor[(9, 14, 12), int64], Tensor[(1512), int64], Tensor[(624), float32], Tensor[(624), float32]) {
  %631 = cast(%var_23326, dtype="int64") /* ty=Tensor[(1512), int64] */;
  %632 = cast(%var_23326, dtype="int64") /* ty=Tensor[(1512), int64] */;
  %633 = reshape(%631, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), int64] */;
  %634 = reshape(%632, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), int64] */;
  %635 = cast(meta[relay.Constant][20] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %636 = reshape(%635, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %637 = @func_21154(%636) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
  %638 = @func_13964() /* ty=Tensor[(5, 3, 8), float64] */;
  %639 = @func_20341(%633, %634) /* ty=Tensor[(9, 14, 12), int64] */;
  %640 = %637.6;
  (%638, %639, %var_23326, %640, meta[relay.Constant][20] /* ty=Tensor[(624), float32] */)
}

def @func_11893() -> (Tensor[(5, 3, 8), float64],) {
  %641 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %642 = %641.0;
  (%642,)
}

def @func_18225() -> Tensor[(5, 3, 8), float32] {
  @func_15759() /* ty=Tensor[(5, 3, 8), float32] */
}

def @func_2945() -> (Tensor[(13, 3, 16), float32],) {
  %643 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %644 = %643.1;
  (%644,)
}

def @func_8649() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %645 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %646 = @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %647 = %645.0;
  %648 = %646.1;
  (%647, %648)
}

def @func_8576() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %649 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %650 = %649.0;
  %651 = @func_6871() /* ty=Tensor[(5, 3, 8), float64] */;
  (%650, %651)
}

def @func_19272() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %652 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %653 = %652.1;
  %654 = @func_18692() /* ty=Tensor[(5, 3, 8), float64] */;
  (%653, %654)
}

def @func_3661(%var_3657: Tensor[(2, 13, 8), uint8]) -> (Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) {
  %655 = @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */;
  %656 = %655.2;
  %657 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %658 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%656, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %661 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %662 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %663 = @func_3375() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %664 = cast(%var_3657, dtype="uint64") /* ty=Tensor[(2, 13, 8), uint64] */;
  %665 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="uint64") /* ty=Tensor[(2, 13, 8), uint64] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %668 = mod(%659, %660) /* ty=Tensor[(2, 13, 8), float32] */;
  %669 = %661.0;
  %670 = %662.0;
  %671 = %663.0;
  %672 = add(%666, %667) /* ty=Tensor[(2, 13, 8), uint64] */;
  (%668, %669, %670, %671, %672)
}

def @func_4651() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) {
  %673 = @func_3816() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %674 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %675 = %673.0;
  %676 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
  %677 = %674.2;
  (%675, %676, %677)
}

def @func_22335() -> (Tensor[(13, 3, 16), float32],) {
  %678 = @func_17108() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %679 = %678.1;
  (%679,)
}

def @func_14862() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) {
  %680 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %681 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %682 = @func_10640() /* ty=Tensor[(13, 3, 16), float32] */;
  %683 = %680.1;
  %684 = %681.0;
  (%682, %683, %684)
}

def @func_12259() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %685 = @func_11437() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %686 = %685.0;
  %687 = @func_9258() /* ty=Tensor[(5, 3, 8), float64] */;
  (%686, %687)
}

def @func_10493() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) {
  %688 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %689 = @func_10415() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %690 = %688.2;
  %691 = cast(%690, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %692 = reshape(%691, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %693 = @func_2541(%692) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %694 = %689.0;
  %695 = %693.0;
  (%690, %694, %695)
}

def @func_17465() -> Tensor[(5, 3, 8), float64] {
  %696 = @func_11424() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %696.0
}

def @func_23161() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float64], Tensor[(720), float64]) {
  %697 = @func_17302() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %698 = @func_14077() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %699 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %700 = @func_20656() /* ty=(Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */;
  %701 = %700.0;
  %702 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %703 = %702.1;
  %704 = cast(%703, dtype="int32") /* ty=Tensor[(13, 3, 16), int32] */;
  %705 = shape_of(%701, dtype="int32") /* ty=Tensor[(2), int32] */;
  %706 = cast(%701, dtype="int32") /* ty=Tensor[(8, 78), int32] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %708 = left_shift(%706, %707) /* ty=Tensor[(8, 78), int32] */;
  %709 = cast(%708, dtype="float64") /* ty=Tensor[(8, 78), float64] */;
  %710 = @func_11842() /* ty=(Tensor[(720), float64],) */;
  %711 = %697.0;
  %712 = %698.0;
  %713 = %699.0;
  %714 = sin(%709) /* ty=Tensor[(8, 78), float64] */;
  %715 = %710.0;
  (%711, %712, %713, %714, %715)
}

def @func_18041(%var_18028: Tensor[(132), int16]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 180), float64], Tensor[(132), int16]) {
  %716 = @func_10681() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %717 = @func_16483() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */;
  %718 = cast(%var_18028, dtype="int16") /* ty=Tensor[(132), int16] */;
  %719 = %717.2;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %721 = reshape(%718, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), int16] */;
  %722 = reshape(%720, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %723 = @func_5461(%721, %722) /* ty=(Tensor[(16, 11, 12), int16], Tensor[(5, 3, 8), bool], Tensor[(120), float64], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64]) */;
  %724 = %716.0;
  %725 = %723.4;
  (%724, %719, %725, %var_18028)
}

def @func_18193() -> Tensor[(5, 3, 8), float64] {
  %726 = @func_7351() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %726.1
}

def @func_14647() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %727 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %728 = @func_9034() /* ty=Tensor[(13, 3, 16), float32] */;
  %729 = %727.0;
  (%728, %729)
}

def @func_15477() -> Tensor[(5, 3, 8), float64] {
  @func_14348() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_9890(%var_9887: Tensor[(2, 104), uint8]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), bool], Tensor[(2, 104), uint8]) {
  %730 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %731 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %732 = cast(%var_9887, dtype="uint8") /* ty=Tensor[(2, 104), uint8] */;
  %733 = reshape(%732, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %734 = %730.0;
  %735 = %731.0;
  %736 = @func_6382(%733) /* ty=Tensor[(208), bool] */;
  (%734, %735, %736, %var_9887)
}

def @func_12223() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %737 = @func_5620() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %738 = @func_11424() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %739 = %737.0;
  %740 = %738.0;
  (%739, %740)
}

def @func_14988(%var_14983: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), bool] {
  %741 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %742 = %741.0;
  %743 = cast(%var_14983, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%742, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%745, %746) /* ty=Tensor[(5, 3, 8), bool] */
}

def @func_20120() -> Tensor[(5, 3, 8), float64] {
  %747 = @func_19632() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(6, 10, 11), float64]) */;
  %747.0
}

def @func_17551(%var_17540: Tensor[(9, 7, 9), float32]) -> (Tensor[(9, 7, 9), float32], Tensor[(13, 3, 16), float32]) {
  %748 = cast(%var_17540, dtype="float32") /* ty=Tensor[(9, 7, 9), float32] */;
  %749 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %750 = tan(%748) /* ty=Tensor[(9, 7, 9), float32] */;
  %751 = %749.1;
  (%750, %751)
}

def @func_3499() -> (Tensor[(5, 3, 8), float64],) {
  %752 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %753 = %752.3;
  (%753,)
}

def @func_13191() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %754 = @func_8397() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %755 = @func_8918() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %756 = %754.0;
  %757 = %755.0;
  (%756, %757)
}

def @func_9258() -> Tensor[(5, 3, 8), float64] {
  %758 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
  %758.0
}

def @func_9440() -> (Tensor[(5, 3, 8), float64],) {
  %759 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %760 = %759.0;
  (%760,)
}

def @func_18469() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %761 = @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %762 = @func_11476() /* ty=Tensor[(13, 3, 16), float32] */;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %764 = reshape(%763, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %765 = @func_3035(%764) /* ty=(Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %766 = %761.1;
  %767 = %765.1;
  (%762, %766, %767)
}

def @func_13686(%var_13665: Tensor[(80), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(2, 13, 8), float32]) {
  %768 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %769 = cast(%var_13665, dtype="float64") /* ty=Tensor[(80), float64] */;
  %770 = reshape(%769, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %771 = cast(meta[relay.Constant][22] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %772 = reshape(%771, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %773 = @func_503(%772) /* ty=Tensor[(2, 13, 8), uint8] */;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %775 = %768.0;
  %776 = @func_4776(%770) /* ty=Tensor[(?, 16, 5), float64] */;
  %777 = cos(%774) /* ty=Tensor[(2, 13, 8), float32] */;
  (%775, meta[relay.Constant][22] /* ty=Tensor[(208), uint8] */, %776, %var_13665, %777)
}

def @func_11591() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) {
  %778 = @func_9149() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %779 = @func_6750() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32]) */;
  %780 = %778.0;
  %781 = %779.1;
  (%780, %781)
}

def @func_20941() -> Tensor[(5, 3, 8), float64] {
  @func_7202() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_8397() -> (Tensor[(5, 3, 8), float64],) {
  %782 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
  %783 = %782.0;
  (%783,)
}

def @func_21048() -> Tensor[(6, 11, 4), float64] {
  %784 = @func_17514() /* ty=(Tensor[(6, 11, 4), float64],) */;
  %784.0
}

def @func_17798() -> Tensor[(13, 3, 16), bool] {
  %785 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %785.2
}

def @func_22974() -> (Tensor[(5, 3, 8), float64],) {
  %786 = @func_10633() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %787 = %786.0;
  (%787,)
}

def @func_11070() -> (Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
  %788 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %789 = %788.0;
  %790 = @func_6702() /* ty=Tensor[(208), uint8] */;
  (%789, %790)
}

def @func_4514(%var_4481: Tensor[(1, 11, 8), float64], %var_4506: Tensor[(720), float64]) -> (Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) {
  %791 = cast(%var_4481, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
  %792 = exp(%791) /* ty=Tensor[(1, 11, 8), float64] */;
  %793 = cast(%var_4481, dtype="bool") /* ty=Tensor[(1, 11, 8), bool] */;
  %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%792, dtype="bool") /* ty=Tensor[(1, 11, 8), bool] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %797 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %798 = cast(%var_4506, dtype="float64") /* ty=Tensor[(720), float64] */;
  %799 = reshape(%798, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %800 = @func_1776(%799) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
  %801 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %802 = greater_equal(%795, %796) /* ty=Tensor[(?, 11, 8), bool] */;
  %803 = %797.0;
  %804 = %800.2;
  %805 = @func_4446() /* ty=Tensor[(13, 3, 16), float32] */;
  %806 = %801.1;
  (%802, %803, %804, %var_4506, %805, %806)
}

def @func_11634(%var_11627: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(624), float32]) {
  %807 = @func_7834() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %808 = cast(%var_11627, dtype="float32") /* ty=Tensor[(624), float32] */;
  %809 = reshape(%808, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %810 = @func_4171(%809) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
  %811 = %807.0;
  %812 = %810.3;
  (%811, %812, %var_11627)
}

def @func_7107() -> (Tensor[(720), float64], Tensor[(208), uint8]) {
  %813 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %814 = @func_4246() /* ty=Tensor[(720), float64] */;
  %815 = %813.1;
  (%814, %815)
}

def @func_14615() -> Tensor[(13, 3, 16), float32] {
  @func_10640() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_19728() -> Tensor[(5, 3, 8), float64] {
  %816 = @func_15348() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(80), float64], Tensor[(720), float64]) */;
  %816.2
}

def @func_12018(%var_11951: Tensor[(2, 13, 8), float64], %var_11970: Tensor[(5, 165), float32], %var_11976: Tensor[(80), float64]) -> (Tensor[(2, 13, 8), float32], Tensor[(11, 15, 5), float32], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool], Tensor[(5, 165), int64]) {
  %817 = @func_10206() /* ty=(Tensor[(2, 13, 8), float32],) */;
  %818 = %817.0;
  %819 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 13, 8), float32] */, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %820 = shape_of(%818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%818, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %823 = floor_divide(%821, %822) /* ty=Tensor[(2, 13, 8), float64] */;
  %824 = cast(%var_11951, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %828 = cast(-2.13611f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %829 = cast(%var_11970, dtype="float32") /* ty=Tensor[(5, 165), float32] */;
  %830 = reshape(%828, newshape=[]) /* ty=float32 */;
  %831 = reshape(%829, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %832 = @func_4978(%830, %831) /* ty=(Tensor[(11, 15, 5), float32],) */;
  %833 = cast(%var_11976, dtype="float64") /* ty=Tensor[(80), float64] */;
  %834 = reshape(%833, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %835 = @func_5730() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %836 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %837 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 13, 8), float32] */, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
  %838 = shape_of(%var_11951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%var_11951, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %841 = cast(%var_11970, dtype="int64") /* ty=Tensor[(5, 165), int64] */;
  %842 = cast(-2.13611f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %843 = divide(%826, %827) /* ty=Tensor[(2, 13, 8), float32] */;
  %844 = %832.0;
  %845 = @func_4776(%834) /* ty=Tensor[(?, 16, 5), float64] */;
  %846 = %835.0;
  %847 = %836.0;
  %848 = less_equal(%839, %840) /* ty=Tensor[(2, 13, 8), bool] */;
  %849 = bitwise_or(%841, %842) /* ty=Tensor[(5, 165), int64] */;
  (%843, %844, %845, %var_11976, %846, %847, %848, %849)
}

def @func_7215() -> Tensor[(13, 3, 16), float32] {
  @func_4446() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_21090() -> Tensor[(13, 3, 16), float32] {
  %850 = @func_19208() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %850.0
}

def @func_6950() -> Tensor[(13, 3, 16), float32] {
  %851 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %851.1
}

def @func_14566() -> (Tensor[(5, 3, 8), float64],) {
  %852 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %853 = %852.0;
  (%853,)
}

def @func_21003(%var_20974: Tensor[(3, 1, 10), uint32], %var_20975: Tensor[(3, 1, 10), uint32]) -> (Tensor[(3, ?, 10), float64], Tensor[(13, 3, 16), float32]) {
  %854 = cast(%var_20975, dtype="bool") /* ty=Tensor[(3, 1, 10), bool] */;
  %855 = shape_of(%var_20974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%var_20974, dtype="bool") /* ty=Tensor[(3, 1, 10), bool] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %858 = greater(%856, %857) /* ty=Tensor[(3, ?, 10), bool] */;
  %859 = cast(%var_20975, dtype="float64") /* ty=Tensor[(3, 1, 10), float64] */;
  %860 = shape_of(%858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%858, dtype="float64") /* ty=Tensor[(3, ?, 10), float64] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %863 = @func_16517() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %864 = floor_mod(%861, %862) /* ty=Tensor[(3, ?, 10), float64] */;
  %865 = %863.0;
  (%864, %865)
}

def @func_7242() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %866 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %867 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %868 = %866.1;
  %869 = %867.0;
  (%868, %869)
}

def @func_4123(%var_4117: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %870 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %871 = %870.1;
  %872 = cast(%871, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %873 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %874 = cast(%var_4117, dtype="float32") /* ty=Tensor[(624), float32] */;
  %875 = reshape(%874, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %876 = @func_1610(%875) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %877 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %878 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %879 = acosh(%872) /* ty=Tensor[(5, 3, 8), float64] */;
  %880 = %873.1;
  %881 = %876.0;
  %882 = %877.1;
  %883 = %878.0;
  (%879, %880, %881, %var_4117, %882, %883)
}

def @func_5103() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %884 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %885 = %884.0;
  %886 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
  (%885, %886)
}

def @func_13021(%var_12980: Tensor[(8, 78), float32], %var_12999: Tensor[(48), float64]) -> (Tensor[(208), uint8], float32, Tensor[(48), float64], float32, Tensor[(8, 78), bool], Tensor[(8, 78), float32]) {
  %887 = @func_9827() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %888 = cast(%var_12999, dtype="float64") /* ty=Tensor[(48), float64] */;
  %889 = cast(0.287869f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %890 = reshape(%888, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %891 = reshape(%889, newshape=[]) /* ty=float32 */;
  %892 = @func_12382(%890, %891) /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), float32], Tensor[(825), float32], Tensor[(48), float64], float32) */;
  %893 = @func_9609() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */;
  %894 = %893.2;
  %895 = cast(%var_12980, dtype="uint64") /* ty=Tensor[(8, 78), uint64] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(2), int32] */;
  %897 = cast(%894, dtype="uint64") /* ty=Tensor[(8, 78), uint64] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %899 = minimum(%897, %898) /* ty=Tensor[(8, 78), uint64] */;
  %900 = cast(%899, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
  %901 = cos(%900) /* ty=Tensor[(8, 78), float32] */;
  %902 = cast(%899, dtype="bool") /* ty=Tensor[(8, 78), bool] */;
  %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(2), int32] */;
  %904 = cast(%901, dtype="bool") /* ty=Tensor[(8, 78), bool] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %906 = less_equal(%904, %905) /* ty=Tensor[(8, 78), bool] */;
  %907 = cast(%901, dtype="bool") /* ty=Tensor[(8, 78), bool] */;
  %908 = shape_of(%906, dtype="int32") /* ty=Tensor[(2), int32] */;
  %909 = cast(%906, dtype="bool") /* ty=Tensor[(8, 78), bool] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %911 = cast(%906, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
  %912 = %887.1;
  %913 = %892.4;
  %914 = less(%909, %910) /* ty=Tensor[(8, 78), bool] */;
  %915 = exp(%911) /* ty=Tensor[(8, 78), float32] */;
  (%912, %913, %var_12999, 0.287869f /* ty=float32 */, %914, %915)
}

def @func_15759() -> Tensor[(5, 3, 8), float32] {
  %916 = @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %916.0
}

def @func_9177() -> (Tensor[(13, 3, 16), float32],) {
  %917 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %918 = %917.0;
  (%918,)
}

def @func_17741(%var_17724: float32, %var_17728: Tensor[(1690), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(11, 1, 8), float32], float32, Tensor[(88), float32], Tensor[(13, 3, 16), float32], Tensor[(1690), float64]) {
  %919 = @func_10633() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %920 = cast(%var_17724, dtype="float32") /* ty=float32 */;
  %921 = cast(meta[relay.Constant][24] /* ty=Tensor[(88), float32] */, dtype="float32") /* ty=Tensor[(88), float32] */;
  %922 = reshape(%920, newshape=[]) /* ty=float32 */;
  %923 = reshape(%921, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float32] */;
  %924 = @func_15798(%922, %923) /* ty=(Tensor[(11, 1, 8), float32], Tensor[(5, 3, 8), float64]) */;
  %925 = cast(%var_17728, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %926 = reshape(%925, newshape=[1690]) /* ty=Tensor[(1690), float64] */;
  %927 = @func_9015(%926) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), float64], Tensor[(624), float32], Tensor[(624), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(13, 3, 16), float32]) */;
  %928 = @func_14615() /* ty=Tensor[(13, 3, 16), float32] */;
  %929 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
  %930 = %919.0;
  %931 = %924.0;
  %932 = %927.8;
  (%928, %929, %930, %931, %var_17724, meta[relay.Constant][24] /* ty=Tensor[(88), float32] */, %932, %var_17728)
}

def @func_20837() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %933 = @func_19582() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %934 = %933.1;
  %935 = @func_20175() /* ty=Tensor[(13, 3, 16), bool] */;
  (%934, %935)
}

def @func_6871() -> Tensor[(5, 3, 8), float64] {
  %936 = @func_6716() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %936.0
}

def @func_6656(%var_6651: Tensor[(1260), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(14, 10, 9), float64], Tensor[(1260), float64]) {
  %937 = cast(%var_6651, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %938 = reshape(%937, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), float64] */;
  %939 = @func_2884() /* ty=Tensor[(5, 3, 8), float64] */;
  %940 = @func_6631(%938) /* ty=Tensor[(14, 10, 9), float64] */;
  (%939, %940, %var_6651)
}

def @func_15095() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %941 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %942 = @func_10725() /* ty=Tensor[(5, 3, 8), float64] */;
  %943 = %941.0;
  (%942, %943)
}

def @func_16333(%var_16322: Tensor[(5, 20), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 20), float64], Tensor[(13, 3, 16), bool]) {
  %944 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %945 = cast(%var_16322, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %946 = reshape(%945, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), float64] */;
  %947 = @func_15828(%946) /* ty=(Tensor[(13, 3, 16), float64], Tensor[(10, 10, ?), bool]) */;
  %948 = @func_10951() /* ty=(Tensor[(13, 3, 16), bool],) */;
  %949 = %944.1;
  %950 = %947.0;
  %951 = %948.0;
  (%949, %950, %var_16322, %951)
}

def @func_6750() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32]) {
  %952 = @func_5877() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %953 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %954 = reshape(%953, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %955 = @func_1776(%954) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
  %956 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %957 = %952.0;
  %958 = %955.3;
  %959 = %956.0;
  (%957, %958, meta[relay.Constant][25] /* ty=Tensor[(4, 180), float64] */, %959)
}

def @func_2541(%var_2527: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), bool],) {
  %960 = @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %961 = %960.1;
  %962 = cast(%var_2527, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %963 = shape_of(%961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%961, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %966 = logical_or(%964, %965) /* ty=Tensor[(13, 3, 16), bool] */;
  (%966,)
}

def @func_21803() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %967 = @func_8372() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %968 = @func_13439() /* ty=(Tensor[(13, 3, 16), bool],) */;
  %969 = @func_17859() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %970 = %967.3;
  %971 = %968.0;
  %972 = %969.1;
  (%970, %971, %972)
}

def @func_5963() -> Tensor[(5, 3, 8), float64] {
  %973 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %973.1
}

def @func_6929() -> Tensor[(5, 3, 8), float64] {
  %974 = @func_6177() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %975 = %974.0;
  %976 = cast(%975, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  sigmoid(%976) /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_9310() -> (Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %977 = @func_4419() /* ty=(Tensor[(13, 3, 16), float64],) */;
  %978 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %979 = @func_5103() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %980 = %977.0;
  %981 = %978.0;
  %982 = %979.0;
  (%980, %981, %982)
}

def @func_8252() -> (Tensor[(5, 3, 8), float64],) {
  %983 = @func_6716() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %984 = %983.0;
  (%984,)
}

def @func_10951() -> (Tensor[(13, 3, 16), bool],) {
  %985 = @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %986 = %985.3;
  (%986,)
}

def @func_15668() -> (Tensor[(11, 7, 1), int16], Tensor[(11, 7, 1), bool], Tensor[(5, 3, 8), float64]) {
  %987 = cast(meta[relay.Constant][26] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %988 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 7, 1), int16] */, dtype="int16") /* ty=Tensor[(11, 7, 1), int16] */;
  %989 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 7, 1), int16] */, dtype="float64") /* ty=Tensor[(11, 7, 1), float64] */;
  %990 = atan(%989) /* ty=Tensor[(11, 7, 1), float64] */;
  %991 = cast(%990, dtype="bool") /* ty=Tensor[(11, 7, 1), bool] */;
  %992 = cast(meta[relay.Constant][26] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %993 = add(%987, %988) /* ty=Tensor[(11, 7, 1), int16] */;
  %994 = greater(%991, %992) /* ty=Tensor[(11, 7, 1), bool] */;
  %995 = @func_10559() /* ty=Tensor[(5, 3, 8), float64] */;
  (%993, %994, %995)
}

def @func_14348() -> Tensor[(5, 3, 8), float64] {
  @func_12496() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_22415() -> Tensor[(208), uint8] {
  @func_16413() /* ty=Tensor[(208), uint8] */
}

def @func_16587(%var_16585: Tensor[(720), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
  %996 = @func_15022() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %997 = @func_11437() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %998 = %997.2;
  %999 = cast(%998, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %1000 = reshape(%999, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1001 = @func_2541(%1000) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %1002 = cast(meta[relay.Constant][28] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1003 = cast(%var_16585, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1004 = reshape(%1002, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %1005 = reshape(%1003, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1006 = @func_4514(%1004, %1005) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1007 = %996.0;
  %1008 = %1001.0;
  %1009 = %1006.1;
  (%1007, %998, %1008, %1009, meta[relay.Constant][28] /* ty=Tensor[(88), float64] */, %var_16585)
}

def @func_10725() -> Tensor[(5, 3, 8), float64] {
  @func_6871() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_5730() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) {
  %1010 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1011 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1012 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %1013 = %1012.1;
  %1014 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
  %1015 = shape_of(%1013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(%1013, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1018 = %1010.0;
  %1019 = %1011.1;
  %1020 = less(%1016, %1017) /* ty=Tensor[(2, 13, 8), bool] */;
  (%1018, %1019, %1020)
}

def @func_3888(%var_3837: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(2, 13, 8), float32], Tensor[(2, 13, 8), uint64], Tensor[(5, 3, 8), float64]) {
  %1021 = @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1022 = cast(%var_3837, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1023 = reshape(%1022, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1024 = @func_3035(%1023) /* ty=(Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %1025 = %1024.0;
  %1026 = cast(%1025, dtype="uint8") /* ty=Tensor[(2, 13, 8), uint8] */;
  %1027 = reshape(%1026, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1028 = @func_3661(%1027) /* ty=(Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) */;
  %1029 = %1028.0;
  %1030 = cast(%1029, dtype="uint8") /* ty=Tensor[(2, 13, 8), uint8] */;
  %1031 = reshape(%1030, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1032 = @func_3661(%1031) /* ty=(Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) */;
  %1033 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1034 = %1021.0;
  %1035 = %1032.4;
  %1036 = %1033.0;
  (%1034, %1025, %var_3837, %1029, %1035, %1036)
}

def @func_12621(%var_12613: Tensor[(5, 14, 16), int16], %var_12614: Tensor[(5, 14, 16), int16]) -> (Tensor[(5, 14, 16), int16],) {
  %1037 = cast(%var_12614, dtype="int16") /* ty=Tensor[(5, 14, 16), int16] */;
  %1038 = shape_of(%var_12613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1039 = cast(%var_12613, dtype="int16") /* ty=Tensor[(5, 14, 16), int16] */;
  %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1041 = maximum(%1039, %1040) /* ty=Tensor[(5, 14, 16), int16] */;
  (%1041,)
}

def @func_2099() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1042 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %1043 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %1044 = %1042.1;
  %1045 = cast(%1044, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %1046 = reshape(%1045, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1047 = @func_1610(%1046) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1048 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %1050 = %1043.0;
  %1051 = %1047.0;
  %1052 = asinh(%1049) /* ty=Tensor[(5, 3, 8), float64] */;
  (%1044, %1050, %1051, %1052)
}

def @func_21504() -> (Tensor[(13, 3, 16), float32],) {
  %1053 = @func_10640() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1053,)
}

def @func_13550() -> Tensor[(13, 3, 16), bool] {
  %1054 = @func_9149() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1054.0
}

def @func_503(%var_496: Tensor[(2, 13, 8), uint8]) -> Tensor[(2, 13, 8), uint8] {
  %1055 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(2, 13, 8), uint8] */;
  %1056 = shape_of(%var_496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%var_496, dtype="uint8") /* ty=Tensor[(2, 13, 8), uint8] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%1057, %1058) /* ty=Tensor[(2, 13, 8), uint8] */
}

def @func_4733(%var_4725: Tensor[(208), uint8]) -> (Tensor[(13, 3, 16), uint8], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(13, 3, 16), float32]) {
  %1059 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %1060 = %1059.0;
  %1061 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 3, 16), float32] */, dtype="uint8") /* ty=Tensor[(13, 3, 16), uint8] */;
  %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%1060, dtype="uint8") /* ty=Tensor[(13, 3, 16), uint8] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1065 = cast(%var_4725, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1066 = reshape(%1065, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1067 = bitwise_xor(%1063, %1064) /* ty=Tensor[(13, 3, 16), uint8] */;
  %1068 = @func_503(%1066) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1069 = @func_2286() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1067, %1068, %var_4725, %1069)
}

def @func_22697() -> (Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1070 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %1071 = @func_10173() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %1072 = @func_20175() /* ty=Tensor[(13, 3, 16), bool] */;
  %1073 = %1070.2;
  %1074 = %1071.1;
  (%1072, %1073, %1074)
}

def @func_17859() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1075 = @func_17302() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1076 = %1075.0;
  %1077 = @func_17465() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1076, %1077)
}

def @func_22275() -> Tensor[(2, 13, 8), uint8] {
  %1078 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %1078.1
}

def @func_4171(%var_4169: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %1079 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %1080 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1081 = cast(%var_4169, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1082 = reshape(%1081, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1083 = @func_1610(%1082) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1084 = %1079.1;
  %1085 = %1080.0;
  %1086 = %1083.0;
  (%1084, %1085, %1086, %var_4169)
}

def @func_20175() -> Tensor[(13, 3, 16), bool] {
  %1087 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
  %1087.2
}

def @func_10559() -> Tensor[(5, 3, 8), float64] {
  %1088 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %1088.0
}

def @func_4446() -> Tensor[(13, 3, 16), float32] {
  %1089 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1089.0
}

def @func_20673() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %1090 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1091 = @func_6177() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1092 = %1090.1;
  %1093 = %1091.1;
  (%1092, %1093)
}

def @func_5919() -> (Tensor[(5, 3, 8), float64],) {
  %1094 = @func_3981() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) */;
  %1095 = %1094.0;
  (%1095,)
}

def @func_18692() -> Tensor[(5, 3, 8), float64] {
  @func_5963() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_9231() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %1096 = cast(meta[relay.Constant][32] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1097 = reshape(%1096, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1098 = @func_4123(%1097) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1099 = @func_6929() /* ty=Tensor[(5, 3, 8), float64] */;
  %1100 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %1101 = %1098.2;
  (%1099, %1100, %1101, meta[relay.Constant][32] /* ty=Tensor[(624), float32] */)
}

def @func_7959() -> Tensor[(5, 3, 8), float64] {
  @func_1956() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_17376() -> (Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), float32]) {
  %1102 = @func_7482() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %1103 = @func_10206() /* ty=(Tensor[(2, 13, 8), float32],) */;
  %1104 = %1102.3;
  %1105 = %1103.0;
  (%1104, %1105)
}

def @func_11253() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
  %1106 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
  %1107 = %1106.0;
  %1108 = @func_4246() /* ty=Tensor[(720), float64] */;
  (%1107, %1108)
}

def @func_5314() -> Tensor[(5, 3, 8), float64] {
  %1109 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1109.0
}

def @func_21154(%var_21148: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %1110 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1111 = @func_14115() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1112 = @func_17859() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1113 = cast(%var_21148, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1114 = reshape(%1113, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1115 = @func_1610(%1114) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1116 = %1110.0;
  %1117 = %1111.0;
  %1118 = @func_7202() /* ty=Tensor[(5, 3, 8), float64] */;
  %1119 = %1112.1;
  %1120 = @func_12698() /* ty=Tensor[(5, 3, 8), float64] */;
  %1121 = %1115.0;
  (%1116, %1117, %1118, %1119, %1120, %1121, %var_21148)
}

def @func_13712() -> Tensor[(13, 3, 16), float32] {
  @func_7215() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_5057() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %1122 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %1123 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1124 = %1123.0;
  %1125 = cast(%1124, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %1126 = reshape(%1125, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1127 = @func_2541(%1126) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %1128 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %1129 = %1122.0;
  %1130 = %1127.0;
  %1131 = %1128.0;
  (%1129, %1124, %1130, %1131)
}

def @func_20047() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1132 = @func_11893() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1133 = @func_19582() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1134 = %1132.0;
  %1135 = %1133.1;
  (%1134, %1135)
}

def @func_10681() -> (Tensor[(13, 3, 16), float32],) {
  %1136 = @func_10640() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1136,)
}

def @func_10848() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) {
  %1137 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %1138 = @func_2286() /* ty=Tensor[(13, 3, 16), float32] */;
  %1139 = %1137.1;
  (%1138, %1139)
}

def @func_7802() -> Tensor[(5, 3, 8), float32] {
  %1140 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1140.0
}

def @func_21249() -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(11, 7, 1), int16], Tensor[(5, 3, 8), float64]) {
  %1141 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %1142 = @func_15668() /* ty=(Tensor[(11, 7, 1), int16], Tensor[(11, 7, 1), bool], Tensor[(5, 3, 8), float64]) */;
  %1143 = @func_18264() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1144 = @func_2644() /* ty=Tensor[(5, 3, 8), float64] */;
  %1145 = %1141.1;
  %1146 = %1142.0;
  %1147 = %1143.0;
  (%1144, %1145, %1146, %1147)
}

def @func_6816() -> (Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) {
  %1148 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
  %1149 = @func_4419() /* ty=(Tensor[(13, 3, 16), float64],) */;
  %1150 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1151 = %1148.1;
  %1152 = %1149.0;
  %1153 = %1150.0;
  (%1151, %1152, %1153)
}

def @func_4246() -> Tensor[(720), float64] {
  %1154 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %1154.2
}

def @func_7834() -> (Tensor[(5, 3, 8), float64],) {
  %1155 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
  %1156 = %1155.0;
  (%1156,)
}

def @func_11505() -> (Tensor[(13, 3, 16), float32], float32, Tensor[(48), float64], float32, Tensor[(13, 3, 16), float32]) {
  %1157 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1158 = cast(meta[relay.Constant][33] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1159 = cast(-5.40894f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1160 = reshape(%1158, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1161 = reshape(%1159, newshape=[]) /* ty=float32 */;
  %1162 = @func_8231(%1160, %1161) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(48), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(208), uint8], Tensor[(208), uint8], Tensor[(11, 15, 5), float32], float32, Tensor[(825), float32]) */;
  %1163 = @func_3332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1164 = %1157.1;
  %1165 = %1162.8;
  %1166 = %1163.0;
  (%1164, %1165, meta[relay.Constant][33] /* ty=Tensor[(48), float64] */, -5.40894f /* ty=float32 */, %1166)
}

def @func_5789() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) {
  %1167 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1168 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
  %1169 = cast(%1168, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %1170 = %1167.1;
  %1171 = cos(%1169) /* ty=Tensor[(5, 3, 8), float32] */;
  (%1170, %1171)
}

def @func_16517() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %1172 = @func_9747() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1173 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1174 = %1172.0;
  %1175 = %1173.1;
  (%1174, %1175)
}

def @func_3035(%var_3022: Tensor[(13, 3, 16), float32]) -> (Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) {
  %1176 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %1177 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1178 = %1177.0;
  %1179 = cast(%var_3022, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %1180 = shape_of(%1178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1181 = cast(%1178, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1183 = %1176.1;
  %1184 = less(%1181, %1182) /* ty=Tensor[(13, 3, 16), bool] */;
  (%1183, %1184)
}

def @func_21440() -> (Tensor[(5, 3, 8), float64], Tensor[(15, 16, 12), float64]) {
  %1185 = @func_11893() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1186 = %1185.0;
  %1187 = @func_20407() /* ty=Tensor[(15, 16, 12), float64] */;
  (%1186, %1187)
}

def @func_20586() -> Tensor[(5, 3, 8), float64] {
  @func_9258() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_4776(%var_4764: Tensor[(1, 16, 5), float64]) -> Tensor[(?, 16, 5), float64] {
  %1188 = cast(%var_4764, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %1189 = atan(%1188) /* ty=Tensor[(1, 16, 5), float64] */;
  %1190 = cast(%var_4764, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %1191 = shape_of(%1189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1192 = cast(%1189, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %1193 = dyn.reshape(%1190, %1191, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%1192, %1193) /* ty=Tensor[(?, 16, 5), float64] */
}

def @func_6332() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int64]) {
  %1194 = @func_3332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1195 = @func_3981() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) */;
  %1196 = %1194.0;
  %1197 = %1195.1;
  (%1196, %1197)
}

def @main(%var_23492: Tensor[(16, 12, 7), float64]) -> Tensor[(16, 12, 7), float64] {
  %1198 = cast(%var_23492, dtype="float64") /* ty=Tensor[(16, 12, 7), float64] */;
  atan(%1198) /* ty=Tensor[(16, 12, 7), float64] */
}

def @func_7010() -> Tensor[(13, 3, 16), bool] {
  %1199 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1199.2
}

def @func_8123(%var_8099: Tensor[(208), uint8]) -> (Tensor[(208), uint32], Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64]) {
  %1200 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
  %1201 = %1200.3;
  %1202 = cast(%var_8099, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %1203 = shape_of(%1201, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1204 = cast(%1201, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1206 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1207 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
  %1208 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
  %1209 = subtract(%1204, %1205) /* ty=Tensor[(208), uint32] */;
  %1210 = %1206.0;
  %1211 = %1207.1;
  %1212 = @func_7229() /* ty=Tensor[(1, 7, 1), float64] */;
  %1213 = %1208.1;
  (%1209, %1210, %1211, %1212, %1213)
}

def @func_9827() -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  %1214 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1215 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %1216 = %1214.0;
  %1217 = %1215.0;
  %1218 = @func_9258() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1216, %1217, %1218)
}

def @func_4978(%var_4962: float32, %var_4963: Tensor[(11, 15, 5), float32]) -> (Tensor[(11, 15, 5), float32],) {
  %1219 = cast(%var_4962, dtype="float32") /* ty=float32 */;
  %1220 = cast(%var_4963, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
  %1221 = floor_mod(%1219, %1220) /* ty=Tensor[(11, 15, 5), float32] */;
  (%1221,)
}

def @func_15700() -> Tensor[(5, 3, 8), float64] {
  %1222 = @func_11152() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1222.1
}

def @func_18302() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1223 = @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1224 = @func_7506() /* ty=(Tensor[(720), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1225 = %1223.0;
  %1226 = %1224.2;
  (%1225, %1226)
}

def @func_20295() -> Tensor[(5, 3, 8), float64] {
  %1227 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1227.1
}

def @func_6897() -> Tensor[(5, 3, 8), float64] {
  %1228 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1228.0
}

def @func_14077() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %1229 = @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %1230 = @func_11152() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1231 = %1229.1;
  %1232 = @func_7215() /* ty=Tensor[(13, 3, 16), float32] */;
  %1233 = %1230.4;
  (%1231, %1232, %1233)
}

def @func_12532() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %1234 = cast(meta[relay.Constant][34] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1235 = reshape(%1234, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1236 = @func_1610(%1235) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1237 = @func_11693() /* ty=Tensor[(5, 3, 8), float64] */;
  %1238 = @func_10725() /* ty=Tensor[(5, 3, 8), float64] */;
  %1239 = %1236.0;
  (%1237, %1238, %1239, meta[relay.Constant][34] /* ty=Tensor[(624), float32] */)
}

def @func_15066() -> Tensor[(5, 3, 8), float64] {
  %1240 = @func_8397() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1240.0
}

def @func_2309() -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) {
  %1241 = @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1242 = cast(meta[relay.Constant][35] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1243 = reshape(%1242, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1244 = %1241.0;
  %1245 = @func_503(%1243) /* ty=Tensor[(2, 13, 8), uint8] */;
  (%1244, %1245, meta[relay.Constant][35] /* ty=Tensor[(208), uint8] */)
}

def @func_16745() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  %1246 = @func_6107() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1247 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1248 = %1246.0;
  %1249 = %1247.0;
  (%1248, %1249)
}

def @func_6007(%var_5980: Tensor[(13, 3, 16), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), int8], Tensor[(13, 3, 16), float64]) {
  %1250 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1251 = @func_3332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1252 = %1251.0;
  %1253 = cast(%var_5980, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %1254 = shape_of(%1252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1255 = cast(%1252, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %1256 = dyn.reshape(%1253, %1254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1257 = not_equal(%1255, %1256) /* ty=Tensor[(13, 3, 16), bool] */;
  %1258 = cast(%1257, dtype="int8") /* ty=Tensor[(13, 3, 16), int8] */;
  %1259 = shape_of(%var_5980, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1260 = cast(%var_5980, dtype="int8") /* ty=Tensor[(13, 3, 16), int8] */;
  %1261 = dyn.reshape(%1258, %1259, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1262 = cast(%1257, dtype="float64") /* ty=Tensor[(13, 3, 16), float64] */;
  %1263 = %1250.0;
  %1264 = bitwise_and(%1260, %1261) /* ty=Tensor[(13, 3, 16), int8] */;
  %1265 = sin(%1262) /* ty=Tensor[(13, 3, 16), float64] */;
  (%1263, %1264, %1265)
}

def @func_18808() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %1266 = @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1267 = %1266.1;
  %1268 = @func_17798() /* ty=Tensor[(13, 3, 16), bool] */;
  (%1267, %1268)
}

def @func_9963(%var_9932: Tensor[(104, 2), uint8]) -> (Tensor[(13, 3, 16), float32], Tensor[(104, 2), float32]) {
  %1269 = @func_9609() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */;
  %1270 = %1269.0;
  %1271 = cast(%1270, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %1272 = cast(%var_9932, dtype="uint8") /* ty=Tensor[(104, 2), uint8] */;
  %1273 = reshape(%1272, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1274 = @func_6382(%1273) /* ty=Tensor[(208), bool] */;
  %1275 = cast(%1274, dtype="float32") /* ty=Tensor[(208), float32] */;
  %1276 = shape_of(%var_9932, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1277 = cast(%var_9932, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %1278 = dyn.reshape(%1275, %1276, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1279 = exp(%1271) /* ty=Tensor[(13, 3, 16), float32] */;
  %1280 = floor_mod(%1277, %1278) /* ty=Tensor[(104, 2), float32] */;
  (%1279, %1280)
}

def @func_19068(%var_19047: Tensor[(720), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) {
  %1281 = @func_9177() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1282 = cast(%var_19047, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1283 = reshape(%1282, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %1284 = @func_1776(%1283) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
  %1285 = @func_10559() /* ty=Tensor[(5, 3, 8), float64] */;
  %1286 = %1281.0;
  %1287 = %1284.3;
  (%1285, %1286, %1287, %var_19047)
}

def @func_13269() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) {
  %1288 = @func_7559() /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(312, 2), float32]) */;
  %1289 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %1290 = %1288.1;
  %1291 = %1289.0;
  (%1290, %1291)
}

def @func_18164() -> Tensor[(13, 3, 16), float32] {
  @func_11678() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_8058() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1292 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1293 = %1292.0;
  %1294 = @func_3578() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1293, %1294)
}

def @func_22770(%var_22748: Tensor[(208), uint8]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %1295 = cast(%var_22748, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1296 = reshape(%1295, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1297 = @func_16483() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */;
  %1298 = @func_11591() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) */;
  %1299 = @func_6440() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1300 = @func_6929() /* ty=Tensor[(5, 3, 8), float64] */;
  %1301 = @func_503(%1296) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1302 = %1297.2;
  %1303 = %1298.0;
  %1304 = %1299.0;
  (%1300, %1301, %var_22748, %1302, %1303, %1304)
}

def @func_9093() -> (Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) {
  %1305 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 10, 4), int64] */, dtype="int64") /* ty=Tensor[(5, 10, 4), int64] */;
  %1306 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(5, 10, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1307 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 10, 4), int64] */, dtype="int64") /* ty=Tensor[(5, 10, 4), int64] */;
  %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1309 = add(%1307, %1308) /* ty=Tensor[(5, 10, 4), int64] */;
  %1310 = @func_7802() /* ty=Tensor[(5, 3, 8), float32] */;
  (%1309, %1310)
}

def @func_3313() -> Tensor[(13, 3, 16), float32] {
  %1311 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1311.0
}

def @func_6440() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1312 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1313 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %1314 = %1312.3;
  (%1313, %1314)
}

def @func_4959() -> (Tensor[(13, 3, 16), float32], Tensor[(8, 2, 3), int32], Tensor[(48), float64]) {
  %1315 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1316 = cast(meta[relay.Constant][38] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1317 = cast(meta[relay.Constant][38] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1318 = reshape(%1316, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %1319 = reshape(%1317, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %1320 = @func_1821(%1318, %1319) /* ty=(Tensor[(8, 2, 3), int32],) */;
  %1321 = %1315.1;
  %1322 = %1320.0;
  (%1321, %1322, meta[relay.Constant][38] /* ty=Tensor[(48), float64] */)
}

def @func_10206() -> (Tensor[(2, 13, 8), float32],) {
  %1323 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
  %1324 = %1323.1;
  %1325 = cast(%1324, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %1326 = exp(%1325) /* ty=Tensor[(2, 13, 8), float32] */;
  (%1326,)
}

def @func_11525() -> (Tensor[(5, 3, 8), float64],) {
  %1327 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1328 = %1327.0;
  (%1328,)
}

def @func_16088() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %1329 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1330 = @func_13269() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) */;
  %1331 = @func_14077() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1332 = %1329.1;
  %1333 = %1330.1;
  %1334 = %1331.1;
  (%1332, %1333, %1334)
}

def @func_11797() -> (Tensor[(5, 3, 8), float64],) {
  %1335 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1336 = %1335.0;
  (%1336,)
}

def @func_17239() -> (Tensor[(5, 3, 8), float64],) {
  %1337 = @func_17048() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1338 = %1337.1;
  (%1338,)
}

def @func_3332() -> (Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) {
  %1339 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1340 = %1339.0;
  %1341 = cast(%1340, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %1342 = reshape(%1341, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1343 = @func_3035(%1342) /* ty=(Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %1344 = %1343.0;
  (%1340, %1344)
}

def @func_14000() -> Tensor[(208), bool] {
  %1345 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
  %1345.0
}

def @func_17302() -> (Tensor[(13, 3, 16), float32],) {
  %1346 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %1347 = %1346.1;
  (%1347,)
}

def @func_22375() -> (Tensor[(5, 3, 8), float64],) {
  %1348 = @func_21573() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1349 = %1348.1;
  (%1349,)
}

def @func_5647() -> (Tensor[(5, 3, 8), float64],) {
  %1350 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1351 = %1350.2;
  (%1351,)
}

def @func_3375() -> (Tensor[(5, 3, 8), float64],) {
  %1352 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1353 = %1352.2;
  (%1353,)
}

def @func_8696(%var_8654: Tensor[(14, 1, 4), uint8]) -> (Tensor[(14, 14, 4), uint8], Tensor[(2, 13, 8), uint8], Tensor[(720), float64], Tensor[(14, 14, 4), bool], Tensor[(5, 3, 8), float64]) {
  %1354 = cast(%var_8654, dtype="uint8") /* ty=Tensor[(14, 1, 4), uint8] */;
  %1355 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 14, 4), uint8] */, dtype="uint8") /* ty=Tensor[(14, 14, 4), uint8] */;
  %1356 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
  %1357 = @func_7107() /* ty=(Tensor[(720), float64], Tensor[(208), uint8]) */;
  %1358 = cast(%var_8654, dtype="bool") /* ty=Tensor[(14, 1, 4), bool] */;
  %1359 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 14, 4), uint8] */, dtype="bool") /* ty=Tensor[(14, 14, 4), bool] */;
  %1360 = @func_7834() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1361 = subtract(%1354, %1355) /* ty=Tensor[(14, 14, 4), uint8] */;
  %1362 = %1356.1;
  %1363 = %1357.0;
  %1364 = less_equal(%1358, %1359) /* ty=Tensor[(14, 14, 4), bool] */;
  %1365 = %1360.0;
  (%1361, %1362, %1363, %1364, %1365)
}

def @func_7676(%var_7619: Tensor[(13, 10, 13), float64]) -> (Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 10, 13), float32]) {
  %1366 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %1367 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %1368 = %1366.1;
  %1369 = cast(%1368, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1370 = reshape(%1369, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1371 = cast(%1368, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1372 = reshape(%1371, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1373 = @func_4733(%1372) /* ty=(Tensor[(13, 3, 16), uint8], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(13, 3, 16), float32]) */;
  %1374 = cast(%var_7619, dtype="float64") /* ty=Tensor[(13, 10, 13), float64] */;
  %1375 = sigmoid(%1374) /* ty=Tensor[(13, 10, 13), float64] */;
  %1376 = cast(%1375, dtype="float32") /* ty=Tensor[(13, 10, 13), float32] */;
  %1377 = %1367.2;
  %1378 = @func_6382(%1370) /* ty=Tensor[(208), bool] */;
  %1379 = %1373.3;
  %1380 = acosh(%1376) /* ty=Tensor[(13, 10, 13), float32] */;
  (%1368, %1377, %1378, %1379, %1380)
}

def @func_8009() -> (Tensor[(720), float64],) {
  %1381 = @func_4246() /* ty=Tensor[(720), float64] */;
  (%1381,)
}

def @func_13293() -> (Tensor[(8, 78), float32],) {
  %1382 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
  %1383 = %1382.2;
  (%1383,)
}

def @func_20022(%var_20004: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
  %1384 = cast(%var_20004, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1385 = reshape(%1384, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1386 = @func_2541(%1385) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %1387 = @func_4270() /* ty=Tensor[(5, 3, 8), float64] */;
  %1388 = %1386.0;
  %1389 = @func_13712() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1387, %1388, %var_20004, %1389)
}

def @func_22935(%var_22928: Tensor[(10, 7, 7), int8], %var_22929: Tensor[(10, 7, 7), int8]) -> Tensor[(10, 7, 7), int8] {
  %1390 = cast(%var_22929, dtype="int8") /* ty=Tensor[(10, 7, 7), int8] */;
  %1391 = shape_of(%var_22928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1392 = cast(%var_22928, dtype="int8") /* ty=Tensor[(10, 7, 7), int8] */;
  %1393 = dyn.reshape(%1390, %1391, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%1392, %1393) /* ty=Tensor[(10, 7, 7), int8] */
}

def @func_7250() -> (Tensor[(208), bool],) {
  %1394 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
  %1395 = %1394.0;
  (%1395,)
}

def @func_4879() -> (Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) {
  %1396 = cast(meta[relay.Constant][40] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %1397 = reshape(%1396, newshape=[1, 7, 1]) /* ty=Tensor[(1, 7, 1), float64] */;
  %1398 = @func_2458(%1397) /* ty=(Tensor[(1, 7, 1), float64],) */;
  %1399 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  %1400 = %1398.0;
  (%1399, %1400, meta[relay.Constant][40] /* ty=Tensor[(7), float64] */)
}

def @func_13821(%var_13774: Tensor[(4, 3, 4), float64], %var_13775: Tensor[(4, 3, 4), float64]) -> (Tensor[(4, 3, 4), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int8]) {
  %1401 = cast(%var_13775, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
  %1402 = shape_of(%var_13774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1403 = cast(%var_13774, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
  %1404 = dyn.reshape(%1401, %1402, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1405 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1406 = %1405.0;
  %1407 = cast(%1406, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %1408 = reshape(%1407, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %1409 = @func_2624(%1408) /* ty=(Tensor[(5, 3, 8), int8],) */;
  %1410 = divide(%1403, %1404) /* ty=Tensor[(4, 3, 4), float64] */;
  %1411 = %1409.0;
  (%1410, %1406, %1411)
}

def @func_22004() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1412 = @func_8252() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1413 = %1412.0;
  %1414 = @func_3578() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1413, %1414)
}

def @func_22589() -> (Tensor[(5, 3, 8), float64],) {
  %1415 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1416 = %1415.0;
  (%1416,)
}

def @func_6620() -> (Tensor[(5, 3, 8), float64],) {
  %1417 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1418 = %1417.3;
  (%1418,)
}

def @func_20376() -> (Tensor[(5, 3, 8), float64],) {
  %1419 = @func_12935() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1420 = %1419.0;
  (%1420,)
}

def @func_17180(%var_17114: Tensor[(3, 180), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(6, 6, 15), float32], Tensor[(3, 180), float64], Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1421 = @func_7242() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1422 = cast(%var_17114, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %1423 = reshape(%1422, newshape=[6, 6, 15]) /* ty=Tensor[(6, 6, 15), float64] */;
  %1424 = @func_8558(%1423) /* ty=(Tensor[(6, 6, 15), float32],) */;
  %1425 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
  %1426 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %1427 = @func_13156() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1428 = @func_11525() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1429 = %1421.1;
  %1430 = %1424.0;
  %1431 = %1425.0;
  %1432 = %1426.1;
  %1433 = %1427.1;
  %1434 = @func_3578() /* ty=Tensor[(13, 3, 16), float32] */;
  %1435 = %1428.0;
  (%1429, %1430, %var_17114, %1431, %1432, %1433, %1434, %1435)
}

def @func_19830(%var_19821: Tensor[(5, 10, 4), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 10, 4), bool]) {
  %1436 = @func_8649() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1437 = @func_3816() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1438 = @func_9136() /* ty=(Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) */;
  %1439 = %1438.0;
  %1440 = cast(%var_19821, dtype="bool") /* ty=Tensor[(5, 10, 4), bool] */;
  %1441 = shape_of(%1439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1442 = cast(%1439, dtype="bool") /* ty=Tensor[(5, 10, 4), bool] */;
  %1443 = dyn.reshape(%1440, %1441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1444 = %1436.1;
  %1445 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %1446 = %1437.0;
  %1447 = logical_or(%1442, %1443) /* ty=Tensor[(5, 10, 4), bool] */;
  (%1444, %1445, %1446, %1447)
}

def @func_5864() -> (Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1448 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1449 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1450 = @func_4246() /* ty=Tensor[(720), float64] */;
  %1451 = %1448.1;
  %1452 = %1449.3;
  (%1450, %1451, %1452)
}

def @func_9015(%var_9002: Tensor[(1690), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), float64], Tensor[(624), float32], Tensor[(624), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(13, 3, 16), float32]) {
  %1453 = @func_5730() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %1454 = %1453.2;
  %1455 = cast(%1454, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %1456 = cast(meta[relay.Constant][41] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1457 = reshape(%1456, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1458 = @func_4171(%1457) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
  %1459 = @func_8576() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1460 = @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1461 = cast(%var_9002, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %1462 = reshape(%1461, newshape=[13, 10, 13]) /* ty=Tensor[(13, 10, 13), float64] */;
  %1463 = @func_7676(%1462) /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 10, 13), float32]) */;
  %1464 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %1465 = @func_5314() /* ty=Tensor[(5, 3, 8), float64] */;
  %1466 = asinh(%1455) /* ty=Tensor[(2, 13, 8), float64] */;
  %1467 = %1458.3;
  %1468 = %1459.1;
  %1469 = %1460.0;
  %1470 = %1463.3;
  %1471 = %1464.1;
  (%1465, %1466, %1467, meta[relay.Constant][41] /* ty=Tensor[(624), float32] */, %1468, %1469, %1470, %var_9002, %1471)
}

def @func_9995(%var_9988: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(624), float32]) {
  %1472 = @func_8576() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1473 = cast(%var_9988, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1474 = reshape(%1473, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1475 = @func_2541(%1474) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %1476 = %1472.0;
  %1477 = %1475.0;
  (%1476, %1477, %var_9988)
}

def @func_13947() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
  %1478 = @func_8576() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1479 = @func_9258() /* ty=Tensor[(5, 3, 8), float64] */;
  %1480 = %1478.1;
  %1481 = @func_4246() /* ty=Tensor[(720), float64] */;
  (%1479, %1480, %1481)
}

def @func_7229() -> Tensor[(1, 7, 1), float64] {
  %1482 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
  %1482.1
}

def @func_22906() -> (Tensor[(5, 3, 8), float64], Tensor[(10, 5, 15), float64], Tensor[(750), float64], Tensor[(5, 3, 8), float64]) {
  %1483 = @func_18469() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %1484 = cast(meta[relay.Constant][42] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
  %1485 = reshape(%1484, newshape=[10, 5, 15]) /* ty=Tensor[(10, 5, 15), float64] */;
  %1486 = @func_21303(%1485) /* ty=(Tensor[(10, 5, 15), float64],) */;
  %1487 = %1483.1;
  %1488 = %1486.0;
  %1489 = @func_6897() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1487, %1488, meta[relay.Constant][42] /* ty=Tensor[(750), float64] */, %1489)
}

def @func_3206() -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) {
  %1490 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1491 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %1492 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1493 = %1490.2;
  %1494 = %1491.1;
  %1495 = %1492.0;
  (%1493, %1494, %1495)
}

def @func_9609() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) {
  %1496 = @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1497 = @func_6440() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1498 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
  %1499 = @func_9177() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1500 = %1496.1;
  %1501 = %1497.0;
  %1502 = %1498.2;
  %1503 = %1499.0;
  (%1500, %1501, %1502, %1503)
}

def @func_19469(%var_19461: Tensor[(208), uint8]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(208), bool], Tensor[(208), uint8]) {
  %1504 = @func_8058() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1505 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1506 = cast(%var_19461, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1507 = reshape(%1506, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1508 = %1504.1;
  %1509 = %1505.1;
  %1510 = @func_6382(%1507) /* ty=Tensor[(208), bool] */;
  (%1508, %1509, %1510, %var_19461)
}

def @func_23169() -> Tensor[(13, 3, 16), float32] {
  %1511 = @func_19208() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1511.0
}

def @func_7919() -> (Tensor[(13, 3, 16), float64],) {
  %1512 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %1513 = %1512.1;
  (%1513,)
}

def @func_17108() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1514 = @func_17048() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1515 = @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %1516 = %1514.0;
  %1517 = %1515.0;
  (%1516, %1517)
}

def @func_5461(%var_5422: Tensor[(1, 11, 12), int16], %var_5446: Tensor[(120), float64]) -> (Tensor[(16, 11, 12), int16], Tensor[(5, 3, 8), bool], Tensor[(120), float64], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64]) {
  %1518 = cast(%var_5422, dtype="int16") /* ty=Tensor[(1, 11, 12), int16] */;
  %1519 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 12), int16] */, dtype="int16") /* ty=Tensor[(16, 11, 12), int16] */;
  %1520 = cast(%var_5446, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1521 = reshape(%1520, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %1522 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %1523 = reshape(%1522, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %1524 = @func_1776(%1523) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
  %1525 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1526 = @func_4419() /* ty=(Tensor[(13, 3, 16), float64],) */;
  %1527 = bitwise_or(%1518, %1519) /* ty=Tensor[(16, 11, 12), int16] */;
  %1528 = @func_4213(%1521) /* ty=Tensor[(5, 3, 8), bool] */;
  %1529 = %1524.1;
  %1530 = %1525.0;
  %1531 = %1526.0;
  (%1527, %1528, %var_5446, %1529, meta[relay.Constant][44] /* ty=Tensor[(4, 180), float64] */, %1530, %1531)
}

def @func_4419() -> (Tensor[(13, 3, 16), float64],) {
  %1532 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1533 = %1532.2;
  %1534 = cast(%1533, dtype="float64") /* ty=Tensor[(13, 3, 16), float64] */;
  %1535 = atanh(%1534) /* ty=Tensor[(13, 3, 16), float64] */;
  (%1535,)
}

def @func_12496() -> Tensor[(5, 3, 8), float64] {
  @func_1956() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_22467() -> Tensor[(13, 3, 16), float32] {
  @func_18164() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_13964() -> Tensor[(5, 3, 8), float64] {
  %1536 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1536.0
}

def @func_10415() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1537 = @func_6217() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(7), float64]) */;
  %1538 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1539 = %1537.0;
  %1540 = %1538.0;
  (%1539, %1540)
}

def @func_4360() -> Tensor[(5, 3, 8), float64] {
  @func_2884() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_15978() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %1541 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %1542 = @func_11525() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1543 = @func_13439() /* ty=(Tensor[(13, 3, 16), bool],) */;
  %1544 = @func_7980() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1545 = %1541.0;
  %1546 = @func_11476() /* ty=Tensor[(13, 3, 16), float32] */;
  %1547 = @func_7802() /* ty=Tensor[(5, 3, 8), float32] */;
  %1548 = %1542.0;
  %1549 = @func_15700() /* ty=Tensor[(5, 3, 8), float64] */;
  %1550 = @func_5314() /* ty=Tensor[(5, 3, 8), float64] */;
  %1551 = %1543.0;
  %1552 = %1544.0;
  (%1545, %1546, %1547, %1548, %1549, %1550, %1551, %1552)
}

def @func_16807() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  %1553 = @func_15095() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1554 = @func_16745() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */;
  %1555 = %1553.1;
  %1556 = %1554.1;
  (%1555, %1556)
}

def @func_4213(%var_4202: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), bool] {
  %1557 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %1558 = %1557.1;
  %1559 = cast(%var_4202, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %1560 = shape_of(%1558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1561 = cast(%1558, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %1562 = dyn.reshape(%1559, %1560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1561, %1562) /* ty=Tensor[(5, 3, 8), bool] */
}

def @func_2884() -> Tensor[(5, 3, 8), float64] {
  %1563 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1563.0
}

def @func_8558(%var_8526: Tensor[(6, 6, 15), float64]) -> (Tensor[(6, 6, 15), float32],) {
  %1564 = cast(%var_8526, dtype="float64") /* ty=Tensor[(6, 6, 15), float64] */;
  %1565 = log10(%1564) /* ty=Tensor[(6, 6, 15), float64] */;
  %1566 = cast(%1565, dtype="float32") /* ty=Tensor[(6, 6, 15), float32] */;
  %1567 = acos(%1566) /* ty=Tensor[(6, 6, 15), float32] */;
  (%1567,)
}

def @func_11302() -> Tensor[(5, 3, 8), float64] {
  %1568 = @func_7351() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %1568.1
}

def @func_18129() -> (Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(12, 4), float64]) {
  %1569 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1570 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %1571 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %1572 = reshape(%1570, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %1573 = reshape(%1571, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %1574 = @func_1821(%1572, %1573) /* ty=(Tensor[(8, 2, 3), int32],) */;
  %1575 = %1569.0;
  %1576 = %1574.0;
  (%1575, %1576, meta[relay.Constant][45] /* ty=Tensor[(12, 4), float64] */)
}

def @func_5018(%var_5005: Tensor[(80, 1), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64], Tensor[(80, 1), float64], Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
  %1577 = cast(%var_5005, dtype="float64") /* ty=Tensor[(80, 1), float64] */;
  %1578 = reshape(%1577, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %1579 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1580 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
  %1581 = @func_4446() /* ty=Tensor[(13, 3, 16), float32] */;
  %1582 = @func_4776(%1578) /* ty=Tensor[(?, 16, 5), float64] */;
  %1583 = %1579.1;
  %1584 = %1580.2;
  (%1581, %1582, %var_5005, %1583, %1584)
}

def @func_21573() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1585 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1586 = @func_7215() /* ty=Tensor[(13, 3, 16), float32] */;
  %1587 = %1585.0;
  (%1586, %1587)
}

def @func_14115() -> (Tensor[(5, 3, 8), float64],) {
  %1588 = @func_10173() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %1589 = %1588.0;
  (%1589,)
}

def @func_17048() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1590 = @func_6871() /* ty=Tensor[(5, 3, 8), float64] */;
  %1591 = @func_10559() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1590, %1591)
}

def @func_15414() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1592 = @func_7482() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %1593 = @func_7202() /* ty=Tensor[(5, 3, 8), float64] */;
  %1594 = %1592.4;
  (%1593, %1594)
}

def @func_17000(%var_16990: Tensor[(88), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
  %1595 = cast(%var_16990, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1596 = cast(meta[relay.Constant][46] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1597 = reshape(%1595, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %1598 = reshape(%1596, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1599 = @func_4514(%1597, %1598) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1600 = @func_11476() /* ty=Tensor[(13, 3, 16), float32] */;
  %1601 = %1599.4;
  (%1600, %1601, %var_16990, meta[relay.Constant][46] /* ty=Tensor[(720), float64] */)
}

def @func_4348() -> (Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
  %1602 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %1603 = @func_2286() /* ty=Tensor[(13, 3, 16), float32] */;
  %1604 = %1602.0;
  (%1603, %1604)
}

def @func_17977(%var_17959: Tensor[(270, 2), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(6, 6, 15), float32], Tensor[(270, 2), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 10, 4), int64]) {
  %1605 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1606 = cast(%var_17959, dtype="float64") /* ty=Tensor[(270, 2), float64] */;
  %1607 = reshape(%1606, newshape=[6, 6, 15]) /* ty=Tensor[(6, 6, 15), float64] */;
  %1608 = @func_8558(%1607) /* ty=(Tensor[(6, 6, 15), float32],) */;
  %1609 = @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %1610 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
  %1611 = %1605.0;
  %1612 = %1608.0;
  %1613 = %1609.3;
  %1614 = %1610.0;
  (%1611, %1612, %var_17959, %1613, %1614)
}

def @func_18726() -> Tensor[(5, 3, 8), float64] {
  @func_16139() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_3981() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) {
  %1615 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %1616 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %1617 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 3, 8), float64] */, dtype="int64") /* ty=Tensor[(5, 3, 8), int64] */;
  %1618 = shape_of(%1616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1619 = cast(%1616, dtype="int64") /* ty=Tensor[(5, 3, 8), int64] */;
  %1620 = dyn.reshape(%1617, %1618, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1621 = @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */;
  %1622 = %1615.0;
  %1623 = multiply(%1619, %1620) /* ty=Tensor[(5, 3, 8), int64] */;
  %1624 = %1621.1;
  (%1622, %1623, %1624)
}

def @func_3578() -> Tensor[(13, 3, 16), float32] {
  %1625 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1625.1
}

def @func_10633() -> (Tensor[(5, 3, 8), float64],) {
  %1626 = @func_4391() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1627 = %1626.0;
  (%1627,)
}

def @func_22567() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
  %1628 = cast(meta[relay.Constant][48] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1629 = cast(meta[relay.Constant][49] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1630 = reshape(%1628, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %1631 = reshape(%1629, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1632 = @func_4514(%1630, %1631) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1633 = @func_13550() /* ty=Tensor[(13, 3, 16), bool] */;
  %1634 = %1632.4;
  (%1633, %1634, meta[relay.Constant][48] /* ty=Tensor[(88), float64] */, meta[relay.Constant][49] /* ty=Tensor[(720), float64] */)
}

def @func_9149() -> (Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %1635 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1636 = @func_3981() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) */;
  %1637 = %1635.2;
  %1638 = %1636.0;
  (%1637, %1638)
}

def @func_13439() -> (Tensor[(13, 3, 16), bool],) {
  %1639 = @func_9149() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1640 = %1639.0;
  (%1640,)
}

def @func_11437() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1641 = @func_9747() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1642 = @func_6716() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1643 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
  %1644 = %1641.2;
  %1645 = %1642.0;
  %1646 = %1643.2;
  (%1644, %1645, %1646)
}

def @func_8372() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1647 = @func_6107() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1648 = @func_3375() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1649 = @func_6177() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1650 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1651 = %1647.1;
  %1652 = %1648.0;
  %1653 = %1649.1;
  %1654 = %1650.0;
  (%1651, %1652, %1653, %1654)
}

def @func_6116() -> Tensor[(5, 3, 8), float64] {
  %1655 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1655.1
}

def @func_6382(%var_6366: Tensor[(208), uint8]) -> Tensor[(208), bool] {
  %1656 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %1657 = %1656.1;
  %1658 = cast(%var_6366, dtype="bool") /* ty=Tensor[(208), bool] */;
  %1659 = shape_of(%1657, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1660 = cast(%1657, dtype="bool") /* ty=Tensor[(208), bool] */;
  %1661 = dyn.reshape(%1658, %1659, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater_equal(%1660, %1661) /* ty=Tensor[(208), bool] */
}

def @func_17514() -> (Tensor[(6, 11, 4), float64],) {
  %1662 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 11, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 4), float32] */;
  %1663 = sigmoid(%1662) /* ty=Tensor[(6, 11, 4), float32] */;
  %1664 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 11, 4), float32] */, dtype="float64") /* ty=Tensor[(6, 11, 4), float64] */;
  %1665 = shape_of(%1663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1666 = cast(%1663, dtype="float64") /* ty=Tensor[(6, 11, 4), float64] */;
  %1667 = dyn.reshape(%1664, %1665, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1668 = floor_mod(%1666, %1667) /* ty=Tensor[(6, 11, 4), float64] */;
  (%1668,)
}

def @func_20746() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1669 = @func_18129() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(12, 4), float64]) */;
  %1670 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1671 = %1669.0;
  %1672 = %1670.0;
  %1673 = @func_9034() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1671, %1672, %1673)
}

def @func_19606() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1674 = @func_8252() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1675 = %1674.0;
  %1676 = @func_15066() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1675, %1676)
}

def @func_14238() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), bool], Tensor[(6, 15, 8), int16], Tensor[(5, 10, 4), float64]) {
  %1677 = @func_7351() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %1678 = @func_11302() /* ty=Tensor[(5, 3, 8), float64] */;
  %1679 = cast(%1678, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %1680 = reshape(%1679, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %1681 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 8), float64] */;
  %1682 = log10(%1681) /* ty=Tensor[(6, 15, 8), float64] */;
  %1683 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 15, 8), float64] */, dtype="int16") /* ty=Tensor[(6, 15, 8), int16] */;
  %1684 = shape_of(%1682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1685 = cast(%1682, dtype="int16") /* ty=Tensor[(6, 15, 8), int16] */;
  %1686 = dyn.reshape(%1683, %1684, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1687 = @func_9136() /* ty=(Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) */;
  %1688 = %1677.0;
  %1689 = @func_4213(%1680) /* ty=Tensor[(5, 3, 8), bool] */;
  %1690 = bitwise_and(%1685, %1686) /* ty=Tensor[(6, 15, 8), int16] */;
  %1691 = %1687.0;
  (%1678, %1688, %1689, %1690, %1691)
}

def @func_11424() -> (Tensor[(5, 3, 8), float64],) {
  %1692 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1693 = %1692.3;
  (%1693,)
}

def @func_5591() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1694 = @func_5103() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1695 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
  %1696 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %1697 = %1694.1;
  %1698 = %1695.0;
  (%1696, %1697, %1698)
}

def @func_21702() -> (Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(208), uint8]) {
  %1699 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1700 = cast(meta[relay.Constant][52] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1701 = reshape(%1700, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1702 = @func_8123(%1701) /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64]) */;
  %1703 = %1699.0;
  %1704 = %1702.3;
  (%1703, %1704, meta[relay.Constant][52] /* ty=Tensor[(208), uint8] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6621() -> (Tensor[(5, 3, 8), float64],) {
  %2 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %0 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %1 = %0.3;
    (%1,)
  };
  %2() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_8561(%var_8559: Tensor[(6, 6, 15), float64]) -> (Tensor[(6, 6, 15), float32],) {
  @func_8558(%var_8559) /* ty=(Tensor[(6, 6, 15), float32],) */
}

def @func_22006() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  @func_22004() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_18471() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  @func_18469() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */
}

def @func_12869() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(720), float64]) {
  @func_12867() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(720), float64]) */
}

def @func_4393() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_4391() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_16483() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  %3 = @func_11787() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %4 = %3.0;
  %5 = @func_7202() /* ty=Tensor[(5, 3, 8), float64] */;
  %6 = @func_4270() /* ty=Tensor[(5, 3, 8), float64] */;
  %7 = @func_7802() /* ty=Tensor[(5, 3, 8), float32] */;
  (%4, %5, %6, %7)
}

def @func_2824() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) {
  @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */
}

def @func_8903(%var_8899: float32, %var_8900: Tensor[(5, 165), float32], %var_8901: Tensor[(88), float64], %var_8902: Tensor[(60, 12), float64]) -> (Tensor[(5, 3, 8), float32], Tensor[(11, 15, 5), float32], float32, Tensor[(5, 165), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(?, 11, 8), bool], Tensor[(88), float64], Tensor[(60, 12), float64]) {
  @func_8897(%var_8899, %var_8900, %var_8901, %var_8902) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(11, 15, 5), float32], float32, Tensor[(5, 165), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(?, 11, 8), bool], Tensor[(88), float64], Tensor[(60, 12), float64]) */
}

def @func_20839() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  @func_20837() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */
}

def @func_19606() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %8 = @func_8252() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %9 = %8.0;
  %10 = @func_15066() /* ty=Tensor[(5, 3, 8), float64] */;
  (%9, %10)
}

def @func_4688() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) {
  @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */
}

def @func_20180() -> Tensor[(13, 3, 16), float32] {
  %11 = fn () -> Tensor[(13, 3, 16), float32] {
    @func_14615() /* ty=Tensor[(13, 3, 16), float32] */
  };
  %11() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_4517(%var_4515: Tensor[(1, 11, 8), float64], %var_4516: Tensor[(720), float64]) -> (Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) {
  %28 = fn (%var_4481: Tensor[(1, 11, 8), float64], %var_4506: Tensor[(720), float64]) -> (Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) {
    %12 = cast(%var_4481, dtype="float64") /* ty=Tensor[(1, 11, 8), float64] */;
    %13 = exp(%12) /* ty=Tensor[(1, 11, 8), float64] */;
    %14 = cast(%var_4481, dtype="bool") /* ty=Tensor[(1, 11, 8), bool] */;
    %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
    %16 = cast(%13, dtype="bool") /* ty=Tensor[(1, 11, 8), bool] */;
    %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %18 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %19 = cast(%var_4506, dtype="float64") /* ty=Tensor[(720), float64] */;
    %20 = reshape(%19, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
    %21 = @func_1776(%20) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
    %22 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %23 = greater_equal(%16, %17) /* ty=Tensor[(?, 11, 8), bool] */;
    %24 = %18.0;
    %25 = %21.2;
    %26 = @func_4446() /* ty=Tensor[(13, 3, 16), float32] */;
    %27 = %22.1;
    (%23, %24, %25, %var_4506, %26, %27)
  };
  %28(%var_4515, %var_4516) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */
}

def @func_4447() -> Tensor[(13, 3, 16), float32] {
  %30 = fn () -> Tensor[(13, 3, 16), float32] {
    %29 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %29.0
  };
  %30() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_16198() -> (Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %31 = @func_9609() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */;
  %32 = %31.3;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %34 = reshape(%33, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %35 = @func_5224(%34) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32]) */;
  %36 = %35.2;
  (%32, %36)
}

def @func_7560() -> (Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(312, 2), float32]) {
  %43 = fn () -> (Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(312, 2), float32]) {
    %37 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %38 = cast(meta[relay.Constant][0] /* ty=Tensor[(312, 2), float32] */, dtype="float32") /* ty=Tensor[(312, 2), float32] */;
    %39 = reshape(%38, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %40 = @func_2541(%39) /* ty=(Tensor[(13, 3, 16), bool],) */;
    %41 = %37.2;
    %42 = %40.0;
    (%41, %42, meta[relay.Constant][0] /* ty=Tensor[(312, 2), float32] */)
  };
  %43() /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(312, 2), float32]) */
}

def @func_14775(%var_14774: Tensor[(7), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(7), float64], Tensor[(5, 3, 8), float64]) {
  %53 = fn (%var_14734: Tensor[(7), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(7), float64], Tensor[(5, 3, 8), float64]) {
    %44 = @func_11893() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %45 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %46 = cast(%var_14734, dtype="float64") /* ty=Tensor[(7), float64] */;
    %47 = reshape(%46, newshape=[7, 1]) /* ty=Tensor[(7, 1), float64] */;
    %48 = @func_10069(%47) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7, 1), float64]) */;
    %49 = %44.0;
    %50 = %45.0;
    %51 = %48.0;
    %52 = @func_12469() /* ty=Tensor[(5, 3, 8), float64] */;
    (%49, %50, %51, %var_14734, %52)
  };
  %53(%var_14774) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(7), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_10962() -> Tensor[(48), float64] {
  @func_10960() /* ty=Tensor[(48), float64] */
}

def @func_15978() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %54 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %55 = @func_11525() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %56 = @func_13439() /* ty=(Tensor[(13, 3, 16), bool],) */;
  %57 = @func_7980() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %58 = %54.0;
  %59 = @func_11476() /* ty=Tensor[(13, 3, 16), float32] */;
  %60 = @func_7802() /* ty=Tensor[(5, 3, 8), float32] */;
  %61 = %55.0;
  %62 = @func_15700() /* ty=Tensor[(5, 3, 8), float64] */;
  %63 = @func_5314() /* ty=Tensor[(5, 3, 8), float64] */;
  %64 = %56.0;
  %65 = %57.0;
  (%58, %59, %60, %61, %62, %63, %64, %65)
}

def @func_11797() -> (Tensor[(5, 3, 8), float64],) {
  %66 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %67 = %66.0;
  (%67,)
}

def @func_18766() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  @func_18764() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_16809() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  @func_16807() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */
}

def @func_16544() -> (Tensor[(5, 3, 8), float64], Tensor[(208), bool], Tensor[(1690), float64]) {
  %68 = @func_11152() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %69 = cast(meta[relay.Constant][1] /* ty=Tensor[(1690), float64] */, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %70 = reshape(%69, newshape=[13, 10, 13]) /* ty=Tensor[(13, 10, 13), float64] */;
  %71 = @func_7676(%70) /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 10, 13), float32]) */;
  %72 = %68.3;
  %73 = %71.2;
  (%72, %73, meta[relay.Constant][1] /* ty=Tensor[(1690), float64] */)
}

def @func_6334() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int64]) {
  @func_6332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int64]) */
}

def @func_2742() -> (Tensor[(5, 3, 8), float64],) {
  %76 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %74 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %75 = %74.1;
    (%75,)
  };
  %76() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_20516(%var_20514: Tensor[(208), bool], %var_20515: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), int32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
  @func_20512(%var_20514, %var_20515) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), int32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_2358() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_14002() -> Tensor[(208), bool] {
  @func_14000() /* ty=Tensor[(208), bool] */
}

def @func_5592() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %82 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %77 = @func_5103() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %78 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
    %79 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
    %80 = %77.1;
    %81 = %78.0;
    (%79, %80, %81)
  };
  %82() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_4652() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) {
  %88 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) {
    %83 = @func_3816() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %84 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %85 = %83.0;
    %86 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
    %87 = %84.2;
    (%85, %86, %87)
  };
  %88() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */
}

def @func_17467() -> Tensor[(5, 3, 8), float64] {
  @func_17465() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_20022(%var_20004: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
  %89 = cast(%var_20004, dtype="float32") /* ty=Tensor[(624), float32] */;
  %90 = reshape(%89, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %91 = @func_2541(%90) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %92 = @func_4270() /* ty=Tensor[(5, 3, 8), float64] */;
  %93 = %91.0;
  %94 = @func_13712() /* ty=Tensor[(13, 3, 16), float32] */;
  (%92, %93, %var_20004, %94)
}

def @func_7351() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %95 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %96 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %97 = %96.0;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %99 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %100 = %95.0;
  %101 = erf(%98) /* ty=Tensor[(5, 3, 8), float64] */;
  %102 = %99.2;
  (%100, %101, %102)
}

def @func_16108() -> Tensor[(5, 3, 8), float64] {
  @func_16106() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_6750() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32]) {
  %103 = @func_5877() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %104 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %105 = reshape(%104, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %106 = @func_1776(%105) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
  %107 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %108 = %103.0;
  %109 = %106.3;
  %110 = %107.0;
  (%108, %109, meta[relay.Constant][2] /* ty=Tensor[(4, 180), float64] */, %110)
}

def @func_2543(%var_2542: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), bool],) {
  %118 = fn (%var_2527: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), bool],) {
    %111 = @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %112 = %111.1;
    %113 = cast(%var_2527, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
    %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
    %115 = cast(%112, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
    %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %117 = logical_or(%115, %116) /* ty=Tensor[(13, 3, 16), bool] */;
    (%117,)
  };
  %118(%var_2542) /* ty=(Tensor[(13, 3, 16), bool],) */
}

def @func_16589(%var_16588: Tensor[(720), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
  %133 = fn (%var_16585: Tensor[(720), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
    %119 = @func_15022() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %120 = @func_11437() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %121 = %120.2;
    %122 = cast(%121, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
    %123 = reshape(%122, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %124 = @func_2541(%123) /* ty=(Tensor[(13, 3, 16), bool],) */;
    %125 = cast(meta[relay.Constant][3] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
    %126 = cast(%var_16585, dtype="float64") /* ty=Tensor[(720), float64] */;
    %127 = reshape(%125, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
    %128 = reshape(%126, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %129 = @func_4514(%127, %128) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
    %130 = %119.0;
    %131 = %124.0;
    %132 = %129.1;
    (%130, %121, %131, %132, meta[relay.Constant][3] /* ty=Tensor[(88), float64] */, %var_16585)
  };
  %133(%var_16588) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) */
}

def @func_19418() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %134 = @func_16807() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */;
  %135 = @func_14077() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %136 = @func_16381() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %137 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %138 = %134.1;
  %139 = %135.1;
  %140 = %136.0;
  (%137, %138, %139, %140)
}

def @func_18866() -> Tensor[(5, 3, 8), float64] {
  @func_18864() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_14117() -> (Tensor[(5, 3, 8), float64],) {
  @func_14115() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_8235(%var_8233: Tensor[(48), float64], %var_8234: float32) -> (Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(48), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(208), uint8], Tensor[(208), uint8], Tensor[(11, 15, 5), float32], float32, Tensor[(825), float32]) {
  @func_8231(%var_8233, %var_8234) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(48), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(208), uint8], Tensor[(208), uint8], Tensor[(11, 15, 5), float32], float32, Tensor[(825), float32]) */
}

def @func_20049() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_20047() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_23013() -> Tensor[(13, 3, 16), float32] {
  @func_23011() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_21453() -> Tensor[(5, 3, 8), float64] {
  @func_21451() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_15568() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %147 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %141 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %142 = @func_11797() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %143 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %144 = %141.0;
    %145 = %142.0;
    %146 = %143.0;
    (%144, %145, %146)
  };
  %147() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_5224(%var_5214: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32]) {
  %148 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %149 = cast(%var_5214, dtype="float32") /* ty=Tensor[(624), float32] */;
  %150 = reshape(%149, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %151 = @func_4123(%150) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %152 = %148.0;
  %153 = %151.1;
  (%152, %153, %var_5214)
}

def @func_22172() -> Tensor[(5, 3, 8), float64] {
  @func_22170() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_7012() -> Tensor[(13, 3, 16), bool] {
  @func_7010() /* ty=Tensor[(13, 3, 16), bool] */
}

def @func_10725() -> Tensor[(5, 3, 8), float64] {
  @func_6871() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_11437() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %154 = @func_9747() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %155 = @func_6716() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %156 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
  %157 = %154.2;
  %158 = %155.0;
  %159 = %156.2;
  (%157, %158, %159)
}

def @func_20025(%var_20023: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
  @func_20022(%var_20023) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_21976(%var_21974: Tensor[(11, 6, 13), int64], %var_21975: Tensor[(11, 6, 13), int64]) -> (Tensor[(11, 6, 13), bool], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int8], Tensor[(3, 40), float64]) {
  %170 = fn (%var_21916: Tensor[(11, 6, 13), int64], %var_21917: Tensor[(11, 6, 13), int64]) -> (Tensor[(11, 6, 13), bool], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int8], Tensor[(3, 40), float64]) {
    %160 = cast(%var_21917, dtype="bool") /* ty=Tensor[(11, 6, 13), bool] */;
    %161 = shape_of(%var_21916, dtype="int32") /* ty=Tensor[(3), int32] */;
    %162 = cast(%var_21916, dtype="bool") /* ty=Tensor[(11, 6, 13), bool] */;
    %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %164 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 40), float64] */, dtype="float64") /* ty=Tensor[(3, 40), float64] */;
    %165 = reshape(%164, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
    %166 = @func_2624(%165) /* ty=(Tensor[(5, 3, 8), int8],) */;
    %167 = greater_equal(%162, %163) /* ty=Tensor[(11, 6, 13), bool] */;
    %168 = @func_14615() /* ty=Tensor[(13, 3, 16), float32] */;
    %169 = %166.0;
    (%167, %168, %169, meta[relay.Constant][4] /* ty=Tensor[(3, 40), float64] */)
  };
  %170(%var_21974, %var_21975) /* ty=(Tensor[(11, 6, 13), bool], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int8], Tensor[(3, 40), float64]) */
}

def @func_2202() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %174 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %171 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %172 = %171.1;
    %173 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
    (%172, %173)
  };
  %174() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_13620() -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) {
  %175 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %176 = @func_3332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %177 = %175.0;
  %178 = %176.1;
  (%177, %178)
}

def @func_19070(%var_19069: Tensor[(720), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) {
  %186 = fn (%var_19047: Tensor[(720), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) {
    %179 = @func_9177() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %180 = cast(%var_19047, dtype="float64") /* ty=Tensor[(720), float64] */;
    %181 = reshape(%180, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
    %182 = @func_1776(%181) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
    %183 = @func_10559() /* ty=Tensor[(5, 3, 8), float64] */;
    %184 = %179.0;
    %185 = %182.3;
    (%183, %184, %185, %var_19047)
  };
  %186(%var_19069) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */
}

def @func_20674() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %191 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
    %187 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
    %188 = @func_6177() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %189 = %187.1;
    %190 = %188.1;
    (%189, %190)
  };
  %191() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_12621(%var_12613: Tensor[(5, 14, 16), int16], %var_12614: Tensor[(5, 14, 16), int16]) -> (Tensor[(5, 14, 16), int16],) {
  %192 = cast(%var_12614, dtype="int16") /* ty=Tensor[(5, 14, 16), int16] */;
  %193 = shape_of(%var_12613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_12613, dtype="int16") /* ty=Tensor[(5, 14, 16), int16] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %196 = maximum(%194, %195) /* ty=Tensor[(5, 14, 16), int16] */;
  (%196,)
}

def @func_22907() -> (Tensor[(5, 3, 8), float64], Tensor[(10, 5, 15), float64], Tensor[(750), float64], Tensor[(5, 3, 8), float64]) {
  %204 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(10, 5, 15), float64], Tensor[(750), float64], Tensor[(5, 3, 8), float64]) {
    %197 = @func_18469() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
    %198 = cast(meta[relay.Constant][5] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
    %199 = reshape(%198, newshape=[10, 5, 15]) /* ty=Tensor[(10, 5, 15), float64] */;
    %200 = @func_21303(%199) /* ty=(Tensor[(10, 5, 15), float64],) */;
    %201 = %197.1;
    %202 = %200.0;
    %203 = @func_6897() /* ty=Tensor[(5, 3, 8), float64] */;
    (%201, %202, meta[relay.Constant][5] /* ty=Tensor[(750), float64] */, %203)
  };
  %204() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(10, 5, 15), float64], Tensor[(750), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_3208() -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) {
  @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */
}

def @func_4778(%var_4777: Tensor[(1, 16, 5), float64]) -> Tensor[(?, 16, 5), float64] {
  %211 = fn (%var_4764: Tensor[(1, 16, 5), float64]) -> Tensor[(?, 16, 5), float64] {
    %205 = cast(%var_4764, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
    %206 = atan(%205) /* ty=Tensor[(1, 16, 5), float64] */;
    %207 = cast(%var_4764, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
    %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(3), int32] */;
    %209 = cast(%206, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%209, %210) /* ty=Tensor[(?, 16, 5), float64] */
  };
  %211(%var_4777) /* ty=Tensor[(?, 16, 5), float64] */
}

def @func_10561() -> Tensor[(5, 3, 8), float64] {
  @func_10559() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_9827() -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  %212 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %213 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %214 = %212.0;
  %215 = %213.0;
  %216 = @func_9258() /* ty=Tensor[(5, 3, 8), float64] */;
  (%214, %215, %216)
}

def @func_17980(%var_17978: Tensor[(270, 2), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(6, 6, 15), float32], Tensor[(270, 2), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 10, 4), int64]) {
  @func_17977(%var_17978) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(6, 6, 15), float32], Tensor[(270, 2), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 10, 4), int64]) */
}

def @func_3206() -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) {
  %217 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %218 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %219 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %220 = %217.2;
  %221 = %218.1;
  %222 = %219.0;
  (%220, %221, %222)
}

def @func_18810() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  @func_18808() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */
}

def @func_11439() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  @func_11437() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_3315() -> Tensor[(13, 3, 16), float32] {
  @func_3313() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_6116() -> Tensor[(5, 3, 8), float64] {
  %223 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %223.1
}

def @func_11425() -> (Tensor[(5, 3, 8), float64],) {
  %226 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %224 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %225 = %224.3;
    (%225,)
  };
  %226() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_6897() -> Tensor[(5, 3, 8), float64] {
  %227 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %227.0
}

def @func_16661() -> (Tensor[(5, 3, 8), float64],) {
  @func_16659() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_17554(%var_17552: Tensor[(9, 7, 9), float32]) -> (Tensor[(9, 7, 9), float32], Tensor[(13, 3, 16), float32]) {
  @func_17551(%var_17552) /* ty=(Tensor[(9, 7, 9), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_18195() -> Tensor[(5, 3, 8), float64] {
  @func_18193() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_3538() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) {
  %228 = @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %229 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
  %230 = @func_2644() /* ty=Tensor[(5, 3, 8), float64] */;
  %231 = %228.0;
  %232 = %229.1;
  (%230, %231, %232)
}

def @func_18225() -> Tensor[(5, 3, 8), float32] {
  @func_15759() /* ty=Tensor[(5, 3, 8), float32] */
}

def @func_20956() -> Tensor[(5, 3, 8), float64] {
  %233 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_6897() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %233() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_8252() -> (Tensor[(5, 3, 8), float64],) {
  %234 = @func_6716() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %235 = %234.0;
  (%235,)
}

def @func_10952() -> (Tensor[(13, 3, 16), bool],) {
  %238 = fn () -> (Tensor[(13, 3, 16), bool],) {
    %236 = @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
    %237 = %236.3;
    (%237,)
  };
  %238() /* ty=(Tensor[(13, 3, 16), bool],) */
}

def @func_9259() -> Tensor[(5, 3, 8), float64] {
  %240 = fn () -> Tensor[(5, 3, 8), float64] {
    %239 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
    %239.0
  };
  %240() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_19608() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_19606() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_5461(%var_5422: Tensor[(1, 11, 12), int16], %var_5446: Tensor[(120), float64]) -> (Tensor[(16, 11, 12), int16], Tensor[(5, 3, 8), bool], Tensor[(120), float64], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64]) {
  %241 = cast(%var_5422, dtype="int16") /* ty=Tensor[(1, 11, 12), int16] */;
  %242 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 11, 12), int16] */, dtype="int16") /* ty=Tensor[(16, 11, 12), int16] */;
  %243 = cast(%var_5446, dtype="float64") /* ty=Tensor[(120), float64] */;
  %244 = reshape(%243, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %245 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %246 = reshape(%245, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %247 = @func_1776(%246) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
  %248 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %249 = @func_4419() /* ty=(Tensor[(13, 3, 16), float64],) */;
  %250 = bitwise_or(%241, %242) /* ty=Tensor[(16, 11, 12), int16] */;
  %251 = @func_4213(%244) /* ty=Tensor[(5, 3, 8), bool] */;
  %252 = %247.1;
  %253 = %248.0;
  %254 = %249.0;
  (%250, %251, %var_5446, %252, meta[relay.Constant][7] /* ty=Tensor[(4, 180), float64] */, %253, %254)
}

def @func_14240() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), bool], Tensor[(6, 15, 8), int16], Tensor[(5, 10, 4), float64]) {
  @func_14238() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), bool], Tensor[(6, 15, 8), int16], Tensor[(5, 10, 4), float64]) */
}

def @func_2356() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %255 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %256 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %257 = %255.1;
  (%256, %257)
}

def @func_9149() -> (Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %258 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %259 = @func_3981() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) */;
  %260 = %258.2;
  %261 = %259.0;
  (%260, %261)
}

def @func_2461(%var_2459: Tensor[(1, 7, 1), float64]) -> (Tensor[(1, 7, 1), float64],) {
  @func_2458(%var_2459) /* ty=(Tensor[(1, 7, 1), float64],) */
}

def @func_9311() -> (Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %268 = fn () -> (Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %262 = @func_4419() /* ty=(Tensor[(13, 3, 16), float64],) */;
    %263 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %264 = @func_5103() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %265 = %262.0;
    %266 = %263.0;
    %267 = %264.0;
    (%265, %266, %267)
  };
  %268() /* ty=(Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_23339(%var_23326: Tensor[(1512), int64]) -> (Tensor[(5, 3, 8), float64], Tensor[(9, 14, 12), int64], Tensor[(1512), int64], Tensor[(624), float32], Tensor[(624), float32]) {
  %269 = cast(%var_23326, dtype="int64") /* ty=Tensor[(1512), int64] */;
  %270 = cast(%var_23326, dtype="int64") /* ty=Tensor[(1512), int64] */;
  %271 = reshape(%269, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), int64] */;
  %272 = reshape(%270, newshape=[9, 14, 12]) /* ty=Tensor[(9, 14, 12), int64] */;
  %273 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %274 = reshape(%273, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %275 = @func_21154(%274) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
  %276 = @func_13964() /* ty=Tensor[(5, 3, 8), float64] */;
  %277 = @func_20341(%271, %272) /* ty=Tensor[(9, 14, 12), int64] */;
  %278 = %275.6;
  (%276, %277, %var_23326, %278, meta[relay.Constant][8] /* ty=Tensor[(624), float32] */)
}

def @func_3117() -> (Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) {
  %279 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %280 = cast(%279, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %281 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %282 = atan(%280) /* ty=Tensor[(5, 3, 8), float32] */;
  %283 = %281.0;
  (%282, %283)
}

def @func_21250() -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(11, 7, 1), int16], Tensor[(5, 3, 8), float64]) {
  %291 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(11, 7, 1), int16], Tensor[(5, 3, 8), float64]) {
    %284 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
    %285 = @func_15668() /* ty=(Tensor[(11, 7, 1), int16], Tensor[(11, 7, 1), bool], Tensor[(5, 3, 8), float64]) */;
    %286 = @func_18264() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %287 = @func_2644() /* ty=Tensor[(5, 3, 8), float64] */;
    %288 = %284.1;
    %289 = %285.0;
    %290 = %286.0;
    (%287, %288, %289, %290)
  };
  %291() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(11, 7, 1), int16], Tensor[(5, 3, 8), float64]) */
}

def @func_21373() -> (Tensor[(5, 3, 8), float32], Tensor[(208), uint8], Tensor[(720), float64]) {
  %298 = fn () -> (Tensor[(5, 3, 8), float32], Tensor[(208), uint8], Tensor[(720), float64]) {
    %292 = @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
    %293 = @func_12867() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(720), float64]) */;
    %294 = @func_13947() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */;
    %295 = %292.1;
    %296 = %293.3;
    %297 = %294.2;
    (%295, %296, %297)
  };
  %298() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(208), uint8], Tensor[(720), float64]) */
}

def @func_4215(%var_4214: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), bool] {
  %305 = fn (%var_4202: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), bool] {
    %299 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
    %300 = %299.1;
    %301 = cast(%var_4202, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
    %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
    %303 = cast(%300, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
    %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%303, %304) /* ty=Tensor[(5, 3, 8), bool] */
  };
  %305(%var_4214) /* ty=Tensor[(5, 3, 8), bool] */
}

def @func_21049() -> Tensor[(6, 11, 4), float64] {
  %307 = fn () -> Tensor[(6, 11, 4), float64] {
    %306 = @func_17514() /* ty=(Tensor[(6, 11, 4), float64],) */;
    %306.0
  };
  %307() /* ty=Tensor[(6, 11, 4), float64] */
}

def @func_20408() -> Tensor[(15, 16, 12), float64] {
  %309 = fn () -> Tensor[(15, 16, 12), float64] {
    %308 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(15, 16, 12), float64] */;
    sqrt(%308) /* ty=Tensor[(15, 16, 12), float64] */
  };
  %309() /* ty=Tensor[(15, 16, 12), float64] */
}

def @func_10848() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) {
  %310 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %311 = @func_2286() /* ty=Tensor[(13, 3, 16), float32] */;
  %312 = %310.1;
  (%311, %312)
}

def @func_14459(%var_14403: Tensor[(4, 20), float64], %var_14405: Tensor[(4, 20), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 20), uint64], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64]) {
  %313 = cast(%var_14403, dtype="float64") /* ty=Tensor[(4, 20), float64] */;
  %314 = reshape(%313, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %315 = @func_13686(%314) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(2, 13, 8), float32]) */;
  %316 = cast(%var_14405, dtype="uint64") /* ty=Tensor[(4, 20), uint64] */;
  %317 = shape_of(%var_14403, dtype="int32") /* ty=Tensor[(2), int32] */;
  %318 = cast(%var_14403, dtype="uint64") /* ty=Tensor[(4, 20), uint64] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %320 = @func_7250() /* ty=(Tensor[(208), bool],) */;
  %321 = %320.0;
  %322 = cast(%321, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %323 = reshape(%322, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %324 = @func_8123(%323) /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64]) */;
  %325 = add(%318, %319) /* ty=Tensor[(4, 20), uint64] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(4, 20), float64] */;
  %327 = reshape(%326, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %328 = @func_13686(%327) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(2, 13, 8), float32]) */;
  %329 = @func_6950() /* ty=Tensor[(13, 3, 16), float32] */;
  %330 = %315.0;
  %331 = %324.1;
  %332 = %328.2;
  (%329, %330, %325, %321, %331, %332)
}

def @func_8011() -> (Tensor[(720), float64],) {
  @func_8009() /* ty=(Tensor[(720), float64],) */
}

def @func_18343() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(208), uint8]) {
  %333 = @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %334 = @func_11070() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %335 = @func_11693() /* ty=Tensor[(5, 3, 8), float64] */;
  %336 = %333.1;
  %337 = %334.1;
  (%335, %336, %337)
}

def @func_23256() -> (Tensor[(5, 3, 8), float32],) {
  @func_23254() /* ty=(Tensor[(5, 3, 8), float32],) */
}

def @func_15023() -> (Tensor[(5, 3, 8), float64],) {
  %340 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %338 = @func_13394() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %339 = %338.0;
    (%339,)
  };
  %340() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_16518() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %345 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
    %341 = @func_9747() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %342 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %343 = %341.0;
    %344 = %342.1;
    (%343, %344)
  };
  %345() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_1975() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) {
  @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */
}

def @func_21897() -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(15, 16, 12), float64]) {
  %346 = @func_18225() /* ty=Tensor[(5, 3, 8), float32] */;
  %347 = @func_16403() /* ty=Tensor[(5, 3, 8), float64] */;
  %348 = @func_20407() /* ty=Tensor[(15, 16, 12), float64] */;
  (%346, %347, %348)
}

def @func_19272() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %349 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %350 = %349.1;
  %351 = @func_18692() /* ty=Tensor[(5, 3, 8), float64] */;
  (%350, %351)
}

def @func_12936() -> (Tensor[(5, 3, 8), float64],) {
  %354 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %352 = @func_12223() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %353 = %352.1;
    (%353,)
  };
  %354() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_8231(%var_8194: Tensor[(48), float64], %var_8223: float32) -> (Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(48), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(208), uint8], Tensor[(208), uint8], Tensor[(11, 15, 5), float32], float32, Tensor[(825), float32]) {
  %355 = cast(%var_8194, dtype="float64") /* ty=Tensor[(48), float64] */;
  %356 = cast(%var_8194, dtype="float64") /* ty=Tensor[(48), float64] */;
  %357 = reshape(%355, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %358 = reshape(%356, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %359 = @func_1821(%357, %358) /* ty=(Tensor[(8, 2, 3), int32],) */;
  %360 = cast(meta[relay.Constant][10] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %361 = reshape(%360, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %362 = @func_4171(%361) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
  %363 = cast(meta[relay.Constant][11] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %364 = reshape(%363, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %365 = @func_4733(%364) /* ty=(Tensor[(13, 3, 16), uint8], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(13, 3, 16), float32]) */;
  %366 = cast(%var_8223, dtype="float32") /* ty=float32 */;
  %367 = cast(meta[relay.Constant][12] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %368 = reshape(%366, newshape=[]) /* ty=float32 */;
  %369 = reshape(%367, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %370 = @func_4978(%368, %369) /* ty=(Tensor[(11, 15, 5), float32],) */;
  %371 = @func_5314() /* ty=Tensor[(5, 3, 8), float64] */;
  %372 = %359.0;
  %373 = %362.1;
  %374 = %365.2;
  %375 = %370.0;
  (%371, %372, %var_8194, %373, meta[relay.Constant][10] /* ty=Tensor[(624), float32] */, %374, meta[relay.Constant][11] /* ty=Tensor[(208), uint8] */, %375, %var_8223, meta[relay.Constant][12] /* ty=Tensor[(825), float32] */)
}

def @func_18164() -> Tensor[(13, 3, 16), float32] {
  @func_11678() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_16977() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) {
  %376 = @func_15260() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %377 = @func_15978() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %378 = %376.0;
  %379 = @func_7373() /* ty=Tensor[(5, 3, 8), float32] */;
  %380 = %377.2;
  %381 = @func_11693() /* ty=Tensor[(5, 3, 8), float64] */;
  (%378, %379, %380, %381)
}

def @func_4246() -> Tensor[(720), float64] {
  %382 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %382.2
}

def @func_19582() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %383 = @func_11302() /* ty=Tensor[(5, 3, 8), float64] */;
  %384 = @func_10559() /* ty=Tensor[(5, 3, 8), float64] */;
  %385 = @func_12469() /* ty=Tensor[(5, 3, 8), float64] */;
  (%383, %384, %385)
}

def @func_20296() -> Tensor[(5, 3, 8), float64] {
  %387 = fn () -> Tensor[(5, 3, 8), float64] {
    %386 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %386.1
  };
  %387() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_16141() -> Tensor[(5, 3, 8), float64] {
  @func_16139() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_23342(%var_23340: Tensor[(1512), int64]) -> (Tensor[(5, 3, 8), float64], Tensor[(9, 14, 12), int64], Tensor[(1512), int64], Tensor[(624), float32], Tensor[(624), float32]) {
  @func_23339(%var_23340) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(9, 14, 12), int64], Tensor[(1512), int64], Tensor[(624), float32], Tensor[(624), float32]) */
}

def @func_17110() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  @func_17108() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_19584() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_19582() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_3313() -> Tensor[(13, 3, 16), float32] {
  %388 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %388.0
}

def @func_15828(%var_15809: Tensor[(10, 10, 1), float64]) -> (Tensor[(13, 3, 16), float64], Tensor[(10, 10, ?), bool]) {
  %389 = cast(%var_15809, dtype="float64") /* ty=Tensor[(10, 10, 1), float64] */;
  %390 = exp(%389) /* ty=Tensor[(10, 10, 1), float64] */;
  %391 = cast(%var_15809, dtype="int64") /* ty=Tensor[(10, 10, 1), int64] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%390, dtype="int64") /* ty=Tensor[(10, 10, 1), int64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %395 = minimum(%393, %394) /* ty=Tensor[(10, 10, ?), int64] */;
  %396 = cast(%395, dtype="bool") /* ty=Tensor[(10, 10, ?), bool] */;
  %397 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%390, dtype="bool") /* ty=Tensor[(10, 10, 1), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %400 = @func_12133() /* ty=Tensor[(13, 3, 16), float64] */;
  %401 = logical_and(%398, %399) /* ty=Tensor[(10, 10, ?), bool] */;
  (%400, %401)
}

def @func_15066() -> Tensor[(5, 3, 8), float64] {
  %402 = @func_8397() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %402.0
}

def @func_3051() -> (Tensor[(5, 3, 8), float64],) {
  @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_19728() -> Tensor[(5, 3, 8), float64] {
  %403 = @func_15348() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(80), float64], Tensor[(720), float64]) */;
  %403.2
}

def @func_4961() -> (Tensor[(13, 3, 16), float32], Tensor[(8, 2, 3), int32], Tensor[(48), float64]) {
  @func_4959() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(8, 2, 3), int32], Tensor[(48), float64]) */
}

def @func_17303() -> (Tensor[(13, 3, 16), float32],) {
  %406 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %404 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
    %405 = %404.1;
    (%405,)
  };
  %406() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_12382(%var_12372: Tensor[(48), float64], %var_12373: float32) -> (Tensor[(208), uint8], Tensor[(13, 3, 16), float32], Tensor[(825), float32], Tensor[(48), float64], float32) {
  %407 = @func_7107() /* ty=(Tensor[(720), float64], Tensor[(208), uint8]) */;
  %408 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %409 = cast(%var_12372, dtype="float64") /* ty=Tensor[(48), float64] */;
  %410 = cast(%var_12373, dtype="float32") /* ty=float32 */;
  %411 = reshape(%409, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %412 = reshape(%410, newshape=[]) /* ty=float32 */;
  %413 = @func_8231(%411, %412) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(48), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(208), uint8], Tensor[(208), uint8], Tensor[(11, 15, 5), float32], float32, Tensor[(825), float32]) */;
  %414 = %407.1;
  %415 = %408.1;
  %416 = %413.9;
  (%414, %415, %416, %var_12372, %var_12373)
}

def @func_18041(%var_18028: Tensor[(132), int16]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 180), float64], Tensor[(132), int16]) {
  %417 = @func_10681() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %418 = @func_16483() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */;
  %419 = cast(%var_18028, dtype="int16") /* ty=Tensor[(132), int16] */;
  %420 = %418.2;
  %421 = cast(%420, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %422 = reshape(%419, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), int16] */;
  %423 = reshape(%421, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %424 = @func_5461(%422, %423) /* ty=(Tensor[(16, 11, 12), int16], Tensor[(5, 3, 8), bool], Tensor[(120), float64], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64]) */;
  %425 = %417.0;
  %426 = %424.4;
  (%425, %420, %426, %var_18028)
}

def @func_3501() -> (Tensor[(5, 3, 8), float64],) {
  @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_6118() -> Tensor[(5, 3, 8), float64] {
  @func_6116() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_5227(%var_5225: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32]) {
  @func_5224(%var_5225) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32]) */
}

def @func_10173() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) {
  %427 = @func_8649() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %428 = @func_4419() /* ty=(Tensor[(13, 3, 16), float64],) */;
  %429 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %430 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %431 = %427.1;
  %432 = %428.0;
  %433 = %429.0;
  (%430, %431, %432, %433)
}

def @func_12223() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %434 = @func_5620() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %435 = @func_11424() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %436 = %434.0;
  %437 = %435.0;
  (%436, %437)
}

def @func_5878() -> (Tensor[(13, 3, 16), float32],) {
  %440 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %438 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
    %439 = %438.0;
    (%439,)
  };
  %440() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_503(%var_496: Tensor[(2, 13, 8), uint8]) -> Tensor[(2, 13, 8), uint8] {
  %441 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(2, 13, 8), uint8] */;
  %442 = shape_of(%var_496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_496, dtype="uint8") /* ty=Tensor[(2, 13, 8), uint8] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%443, %444) /* ty=Tensor[(2, 13, 8), uint8] */
}

def @func_7507() -> (Tensor[(720), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %451 = fn () -> (Tensor[(720), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
    %445 = @func_7107() /* ty=(Tensor[(720), float64], Tensor[(208), uint8]) */;
    %446 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %447 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %448 = %445.0;
    %449 = %446.0;
    %450 = %447.1;
    (%448, %449, %450)
  };
  %451() /* ty=(Tensor[(720), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_7834() -> (Tensor[(5, 3, 8), float64],) {
  %452 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
  %453 = %452.0;
  (%453,)
}

def @func_2133() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_9036() -> Tensor[(13, 3, 16), float32] {
  @func_9034() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_19167() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_19165() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_7679(%var_7677: Tensor[(13, 10, 13), float64]) -> (Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 10, 13), float32]) {
  @func_7676(%var_7677) /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 10, 13), float32]) */
}

def @func_14649() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  @func_14647() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_13440() -> (Tensor[(13, 3, 16), bool],) {
  %456 = fn () -> (Tensor[(13, 3, 16), bool],) {
    %454 = @func_9149() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %455 = %454.0;
    (%455,)
  };
  %456() /* ty=(Tensor[(13, 3, 16), bool],) */
}

def @func_17048() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %457 = @func_6871() /* ty=Tensor[(5, 3, 8), float64] */;
  %458 = @func_10559() /* ty=Tensor[(5, 3, 8), float64] */;
  (%457, %458)
}

def @func_23185() -> (Tensor[(5, 3, 8), float64],) {
  %459 = @func_7202() /* ty=Tensor[(5, 3, 8), float64] */;
  (%459,)
}

def @func_18992() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64], Tensor[(5, 3, 8), int8]) {
  %460 = @func_15022() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %461 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %462 = %460.0;
  %463 = cast(%462, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %464 = reshape(%463, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %465 = @func_2624(%464) /* ty=(Tensor[(5, 3, 8), int8],) */;
  %466 = %461.0;
  %467 = %465.0;
  (%462, %466, %467)
}

def @func_4982(%var_4980: float32, %var_4981: Tensor[(11, 15, 5), float32]) -> (Tensor[(11, 15, 5), float32],) {
  @func_4978(%var_4980, %var_4981) /* ty=(Tensor[(11, 15, 5), float32],) */
}

def @func_9177() -> (Tensor[(13, 3, 16), float32],) {
  %468 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %469 = %468.0;
  (%469,)
}

def @func_2644() -> Tensor[(5, 3, 8), float64] {
  @func_2010() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_17551(%var_17540: Tensor[(9, 7, 9), float32]) -> (Tensor[(9, 7, 9), float32], Tensor[(13, 3, 16), float32]) {
  %470 = cast(%var_17540, dtype="float32") /* ty=Tensor[(9, 7, 9), float32] */;
  %471 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %472 = tan(%470) /* ty=Tensor[(9, 7, 9), float32] */;
  %473 = %471.1;
  (%472, %473)
}

def @func_3333() -> (Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) {
  %480 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) {
    %474 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %475 = %474.0;
    %476 = cast(%475, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
    %477 = reshape(%476, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %478 = @func_3035(%477) /* ty=(Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
    %479 = %478.0;
    (%475, %479)
  };
  %480() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */
}

def @func_11843() -> (Tensor[(720), float64],) {
  %482 = fn () -> (Tensor[(720), float64],) {
    %481 = @func_4246() /* ty=Tensor[(720), float64] */;
    (%481,)
  };
  %482() /* ty=(Tensor[(720), float64],) */
}

def @func_11678() -> Tensor[(13, 3, 16), float32] {
  %483 = @func_5730() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %484 = %483.1;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  sinh(%485) /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_21805() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  @func_21803() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_4033() -> (Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  %490 = fn () -> (Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
    %486 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %487 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %488 = %486.2;
    %489 = %487.0;
    (%488, %489)
  };
  %490() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */
}

def @func_16405() -> Tensor[(5, 3, 8), float64] {
  @func_16403() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_12134() -> Tensor[(13, 3, 16), float64] {
  %492 = fn () -> Tensor[(13, 3, 16), float64] {
    %491 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
    %491.1
  };
  %492() /* ty=Tensor[(13, 3, 16), float64] */
}

def @func_6107() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %493 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %494 = @func_3816() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %495 = %493.0;
  %496 = %494.0;
  (%495, %496)
}

def @func_13158() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  @func_13156() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_15068() -> Tensor[(5, 3, 8), float64] {
  @func_15066() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_6218() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(7), float64]) {
  %502 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(7), float64]) {
    %497 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
    %498 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
    %499 = @func_3578() /* ty=Tensor[(13, 3, 16), float32] */;
    %500 = %497.0;
    %501 = %498.2;
    (%499, %500, %501)
  };
  %502() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(7), float64]) */
}

def @func_13294() -> (Tensor[(8, 78), float32],) {
  %505 = fn () -> (Tensor[(8, 78), float32],) {
    %503 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
    %504 = %503.2;
    (%504,)
  };
  %505() /* ty=(Tensor[(8, 78), float32],) */
}

def @func_22156() -> Tensor[(13, 3, 16), float32] {
  @func_4446() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_8919() -> (Tensor[(5, 3, 8), float64],) {
  %508 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %506 = @func_7896() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %507 = %506.1;
    (%507,)
  };
  %508() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_12471() -> Tensor[(5, 3, 8), float64] {
  @func_12469() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_10339() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %512 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
    %509 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %510 = %509.1;
    %511 = @func_6897() /* ty=Tensor[(5, 3, 8), float64] */;
    (%510, %511)
  };
  %512() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_13686(%var_13665: Tensor[(80), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(2, 13, 8), float32]) {
  %513 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %514 = cast(%var_13665, dtype="float64") /* ty=Tensor[(80), float64] */;
  %515 = reshape(%514, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
  %516 = cast(meta[relay.Constant][14] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %517 = reshape(%516, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %518 = @func_503(%517) /* ty=Tensor[(2, 13, 8), uint8] */;
  %519 = cast(%518, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %520 = %513.0;
  %521 = @func_4776(%515) /* ty=Tensor[(?, 16, 5), float64] */;
  %522 = cos(%519) /* ty=Tensor[(2, 13, 8), float32] */;
  (%520, meta[relay.Constant][14] /* ty=Tensor[(208), uint8] */, %521, %var_13665, %522)
}

def @func_8753() -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) {
  %523 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %524 = @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */;
  %525 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %526 = @func_7373() /* ty=Tensor[(5, 3, 8), float32] */;
  %527 = %523.0;
  %528 = %524.2;
  %529 = %525.2;
  (%526, %527, %528, %529)
}

def @func_9179() -> (Tensor[(13, 3, 16), float32],) {
  @func_9177() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_15700() -> Tensor[(5, 3, 8), float64] {
  %530 = @func_11152() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %530.1
}

def @func_13089() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %531 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %532 = @func_11476() /* ty=Tensor[(13, 3, 16), float32] */;
  %533 = %531.0;
  (%532, %533)
}

def @func_4391() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %534 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %535 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %536 = %534.1;
  %537 = %535.0;
  (%536, %537)
}

def @func_6109() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  @func_6107() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_1821(%var_1786: Tensor[(8, 2, 3), float64], %var_1812: Tensor[(8, 2, 3), float64]) -> (Tensor[(8, 2, 3), int32],) {
  %538 = cast(%var_1786, dtype="float64") /* ty=Tensor[(8, 2, 3), float64] */;
  %539 = log(%538) /* ty=Tensor[(8, 2, 3), float64] */;
  %540 = cast(%var_1812, dtype="int32") /* ty=Tensor[(8, 2, 3), int32] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="int32") /* ty=Tensor[(8, 2, 3), int32] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %544 = bitwise_or(%542, %543) /* ty=Tensor[(8, 2, 3), int32] */;
  (%544,)
}

def @func_21803() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %545 = @func_8372() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %546 = @func_13439() /* ty=(Tensor[(13, 3, 16), bool],) */;
  %547 = @func_17859() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %548 = %545.3;
  %549 = %546.0;
  %550 = %547.1;
  (%548, %549, %550)
}

def @func_10305(%var_10303: Tensor[(3, 180), float64], %var_10304: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(6, 6, 15), bool], Tensor[(208), bool], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(5, 3, 8), float64]) {
  %573 = fn (%var_10227: Tensor[(3, 180), float64], %var_10263: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(6, 6, 15), bool], Tensor[(208), bool], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(5, 3, 8), float64]) {
    %551 = cast(%var_10227, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
    %552 = reshape(%551, newshape=[6, 6, 15]) /* ty=Tensor[(6, 6, 15), float64] */;
    %553 = @func_8558(%552) /* ty=(Tensor[(6, 6, 15), float32],) */;
    %554 = %553.0;
    %555 = cast(%var_10227, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
    %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
    %557 = cast(%554, dtype="bool") /* ty=Tensor[(6, 6, 15), bool] */;
    %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %559 = @func_7250() /* ty=(Tensor[(208), bool],) */;
    %560 = cast(%var_10263, dtype="float32") /* ty=Tensor[(624), float32] */;
    %561 = reshape(%560, newshape=[624]) /* ty=Tensor[(624), float32] */;
    %562 = @func_3888(%561) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(2, 13, 8), float32], Tensor[(2, 13, 8), uint64], Tensor[(5, 3, 8), float64]) */;
    %563 = cast(meta[relay.Constant][15] /* ty=Tensor[(1690), float64] */, dtype="float64") /* ty=Tensor[(1690), float64] */;
    %564 = reshape(%563, newshape=[1690]) /* ty=Tensor[(1690), float64] */;
    %565 = @func_9015(%564) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), float64], Tensor[(624), float32], Tensor[(624), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(13, 3, 16), float32]) */;
    %566 = @func_10173() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
    %567 = @func_2644() /* ty=Tensor[(5, 3, 8), float64] */;
    %568 = less_equal(%557, %558) /* ty=Tensor[(6, 6, 15), bool] */;
    %569 = %559.0;
    %570 = %562.1;
    %571 = %565.8;
    %572 = %566.3;
    (%567, %568, %569, %570, %var_10263, %571, meta[relay.Constant][15] /* ty=Tensor[(1690), float64] */, %572)
  };
  %573(%var_10303, %var_10304) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(6, 6, 15), bool], Tensor[(208), bool], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_2310() -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) {
  %579 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) {
    %574 = @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %575 = cast(meta[relay.Constant][16] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
    %576 = reshape(%575, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
    %577 = %574.0;
    %578 = @func_503(%576) /* ty=Tensor[(2, 13, 8), uint8] */;
    (%577, %578, meta[relay.Constant][16] /* ty=Tensor[(208), uint8] */)
  };
  %579() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */
}

def @func_11693() -> Tensor[(5, 3, 8), float64] {
  @func_4270() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_23000() -> Tensor[(5, 3, 8), float64] {
  %580 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_19728() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %580() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_4270() -> Tensor[(5, 3, 8), float64] {
  %581 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %581.1
}

def @func_2099() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %582 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %583 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %584 = %582.1;
  %585 = cast(%584, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %586 = reshape(%585, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %587 = @func_1610(%586) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %588 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %589 = cast(%588, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %590 = %583.0;
  %591 = %587.0;
  %592 = asinh(%589) /* ty=Tensor[(5, 3, 8), float64] */;
  (%584, %590, %591, %592)
}

def @func_22376() -> (Tensor[(5, 3, 8), float64],) {
  %595 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %593 = @func_21573() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %594 = %593.1;
    (%594,)
  };
  %595() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_21573() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %596 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %597 = @func_7215() /* ty=Tensor[(13, 3, 16), float32] */;
  %598 = %596.0;
  (%597, %598)
}

def @func_2175() -> (Tensor[(13, 3, 16), float32],) {
  %601 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %599 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %600 = %599.2;
    (%600,)
  };
  %601() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_17745(%var_17743: float32, %var_17744: Tensor[(1690), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(11, 1, 8), float32], float32, Tensor[(88), float32], Tensor[(13, 3, 16), float32], Tensor[(1690), float64]) {
  @func_17741(%var_17743, %var_17744) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(11, 1, 8), float32], float32, Tensor[(88), float32], Tensor[(13, 3, 16), float32], Tensor[(1690), float64]) */
}

def @func_11152() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %602 = @func_7752() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %603 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %604 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %605 = @func_10640() /* ty=Tensor[(13, 3, 16), float32] */;
  %606 = %602.0;
  %607 = %603.0;
  %608 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
  %609 = %604.2;
  (%605, %606, %607, %608, %609)
}

def @func_21305(%var_21304: Tensor[(10, 5, 15), float64]) -> (Tensor[(10, 5, 15), float64],) {
  %612 = fn (%var_21298: Tensor[(10, 5, 15), float64]) -> (Tensor[(10, 5, 15), float64],) {
    %610 = cast(%var_21298, dtype="float64") /* ty=Tensor[(10, 5, 15), float64] */;
    %611 = erf(%610) /* ty=Tensor[(10, 5, 15), float64] */;
    (%611,)
  };
  %612(%var_21304) /* ty=(Tensor[(10, 5, 15), float64],) */
}

def @func_12079() -> Tensor[(13, 3, 16), float32] {
  @func_3313() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_15349() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(80), float64], Tensor[(720), float64]) {
  %625 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(80), float64], Tensor[(720), float64]) {
    %613 = @func_7752() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
    %614 = @func_5103() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %615 = cast(meta[relay.Constant][17] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %616 = cast(meta[relay.Constant][17] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %617 = reshape(%615, newshape=[4, 20]) /* ty=Tensor[(4, 20), float64] */;
    %618 = reshape(%616, newshape=[4, 20]) /* ty=Tensor[(4, 20), float64] */;
    %619 = @func_14459(%617, %618) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 20), uint64], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64]) */;
    %620 = @func_10725() /* ty=Tensor[(5, 3, 8), float64] */;
    %621 = %613.0;
    %622 = %614.0;
    %623 = %619.0;
    %624 = @func_4246() /* ty=Tensor[(720), float64] */;
    (%620, %621, %622, %623, meta[relay.Constant][17] /* ty=Tensor[(80), float64] */, %624)
  };
  %625() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(80), float64], Tensor[(720), float64]) */
}

def @func_6716() -> (Tensor[(5, 3, 8), float64],) {
  %626 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %627 = %626.0;
  (%627,)
}

def @func_20658() -> (Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) {
  @func_20656() /* ty=(Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_12700() -> Tensor[(5, 3, 8), float64] {
  @func_12698() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_7375() -> Tensor[(5, 3, 8), float32] {
  @func_7373() /* ty=Tensor[(5, 3, 8), float32] */
}

def @func_21157(%var_21155: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  @func_21154(%var_21155) /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */
}

def @func_2626(%var_2625: Tensor[(5, 3, 8), float64]) -> (Tensor[(5, 3, 8), int8],) {
  %635 = fn (%var_2582: Tensor[(5, 3, 8), float64]) -> (Tensor[(5, 3, 8), int8],) {
    %628 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %629 = %628.0;
    %630 = cast(%var_2582, dtype="int8") /* ty=Tensor[(5, 3, 8), int8] */;
    %631 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
    %632 = cast(%629, dtype="int8") /* ty=Tensor[(5, 3, 8), int8] */;
    %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %634 = logical_xor(%632, %633) /* ty=Tensor[(5, 3, 8), int8] */;
    (%634,)
  };
  %635(%var_2625) /* ty=(Tensor[(5, 3, 8), int8],) */
}

def @func_10683() -> (Tensor[(13, 3, 16), float32],) {
  @func_10681() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_13156() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %636 = @func_6332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int64]) */;
  %637 = %636.0;
  %638 = @func_3313() /* ty=Tensor[(13, 3, 16), float32] */;
  (%637, %638)
}

def @func_16403() -> Tensor[(5, 3, 8), float64] {
  %639 = @func_15567() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %639.2
}

def @func_19420() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  @func_19418() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_13395() -> (Tensor[(5, 3, 8), float64],) {
  %642 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %640 = @func_10633() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %641 = %640.0;
    (%641,)
  };
  %642() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_9233() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  @func_9231() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */
}

def @func_7836() -> (Tensor[(5, 3, 8), float64],) {
  @func_7834() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_13689(%var_13687: Tensor[(80), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(2, 13, 8), float32]) {
  @func_13686(%var_13687) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(2, 13, 8), float32]) */
}

def @func_6440() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %643 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %644 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %645 = %643.3;
  (%644, %645)
}

def @func_2458(%var_2452: Tensor[(1, 7, 1), float64]) -> (Tensor[(1, 7, 1), float64],) {
  %646 = cast(%var_2452, dtype="float64") /* ty=Tensor[(1, 7, 1), float64] */;
  %647 = tan(%646) /* ty=Tensor[(1, 7, 1), float64] */;
  (%647,)
}

def @func_19633() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(6, 10, 11), float64]) {
  %658 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(6, 10, 11), float64]) {
    %648 = @func_4391() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %649 = @func_16659() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %650 = @func_17108() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %651 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 10, 11), float32] */, dtype="float32") /* ty=Tensor[(6, 10, 11), float32] */;
    %652 = atan(%651) /* ty=Tensor[(6, 10, 11), float32] */;
    %653 = cast(%652, dtype="float64") /* ty=Tensor[(6, 10, 11), float64] */;
    %654 = %648.1;
    %655 = %649.0;
    %656 = %650.1;
    %657 = log2(%653) /* ty=Tensor[(6, 10, 11), float64] */;
    (%654, %655, %656, %657)
  };
  %658() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(6, 10, 11), float64]) */
}

def @func_6871() -> Tensor[(5, 3, 8), float64] {
  %659 = @func_6716() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %659.0
}

def @func_6873() -> Tensor[(5, 3, 8), float64] {
  @func_6871() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_14077() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %660 = @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %661 = @func_11152() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %662 = %660.1;
  %663 = @func_7215() /* ty=Tensor[(13, 3, 16), float32] */;
  %664 = %661.4;
  (%662, %663, %664)
}

def @func_17921(%var_17919: Tensor[(10, 7, 11), float32]) -> (Tensor[(10, 7, 11), float32],) {
  @func_17918(%var_17919) /* ty=(Tensor[(10, 7, 11), float32],) */
}

def @func_9966(%var_9964: Tensor[(104, 2), uint8]) -> (Tensor[(13, 3, 16), float32], Tensor[(104, 2), float32]) {
  @func_9963(%var_9964) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(104, 2), float32]) */
}

def @func_18303() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %669 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
    %665 = @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %666 = @func_7506() /* ty=(Tensor[(720), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %667 = %665.0;
    %668 = %666.2;
    (%667, %668)
  };
  %669() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_3375() -> (Tensor[(5, 3, 8), float64],) {
  %670 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %671 = %670.2;
  (%671,)
}

def @func_12261() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_20341(%var_20336: Tensor[(9, 14, 12), int64], %var_20337: Tensor[(9, 14, 12), int64]) -> Tensor[(9, 14, 12), int64] {
  %672 = cast(%var_20337, dtype="int64") /* ty=Tensor[(9, 14, 12), int64] */;
  %673 = shape_of(%var_20336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%var_20336, dtype="int64") /* ty=Tensor[(9, 14, 12), int64] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%674, %675) /* ty=Tensor[(9, 14, 12), int64] */
}

def @func_23254() -> (Tensor[(5, 3, 8), float32],) {
  %676 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
  %677 = %676.1;
  (%677,)
}

def @func_5465(%var_5463: Tensor[(1, 11, 12), int16], %var_5464: Tensor[(120), float64]) -> (Tensor[(16, 11, 12), int16], Tensor[(5, 3, 8), bool], Tensor[(120), float64], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64]) {
  @func_5461(%var_5463, %var_5464) /* ty=(Tensor[(16, 11, 12), int16], Tensor[(5, 3, 8), bool], Tensor[(120), float64], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64]) */
}

def @func_22974() -> (Tensor[(5, 3, 8), float64],) {
  %678 = @func_10633() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %679 = %678.0;
  (%679,)
}

def @func_4125(%var_4124: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %694 = fn (%var_4117: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
    %680 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %681 = %680.1;
    %682 = cast(%681, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
    %683 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %684 = cast(%var_4117, dtype="float32") /* ty=Tensor[(624), float32] */;
    %685 = reshape(%684, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %686 = @func_1610(%685) /* ty=(Tensor[(13, 3, 16), float32],) */;
    %687 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
    %688 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %689 = acosh(%682) /* ty=Tensor[(5, 3, 8), float64] */;
    %690 = %683.1;
    %691 = %686.0;
    %692 = %687.1;
    %693 = %688.0;
    (%689, %690, %691, %var_4117, %692, %693)
  };
  %694(%var_4124) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_20695() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
  %695 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %696 = @func_13947() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */;
  %697 = %695.0;
  %698 = %696.2;
  (%697, %698)
}

def @func_21704() -> (Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(208), uint8]) {
  @func_21702() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(208), uint8]) */
}

def @func_22468() -> Tensor[(13, 3, 16), float32] {
  %699 = fn () -> Tensor[(13, 3, 16), float32] {
    @func_18164() /* ty=Tensor[(13, 3, 16), float32] */
  };
  %699() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_2885() -> Tensor[(5, 3, 8), float64] {
  %701 = fn () -> Tensor[(5, 3, 8), float64] {
    %700 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %700.0
  };
  %701() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_3817() -> (Tensor[(13, 3, 16), float32],) {
  %704 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %702 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
    %703 = %702.1;
    (%703,)
  };
  %704() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_11477() -> Tensor[(13, 3, 16), float32] {
  %706 = fn () -> Tensor[(13, 3, 16), float32] {
    %705 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %705.1
  };
  %706() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_10415() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %707 = @func_6217() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(7), float64]) */;
  %708 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %709 = %707.0;
  %710 = %708.0;
  (%709, %710)
}

def @func_11386() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64], Tensor[(5, 3, 8), float64]) {
  %716 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64], Tensor[(5, 3, 8), float64]) {
    %711 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %712 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %713 = %711.0;
    %714 = %712.0;
    %715 = @func_6929() /* ty=Tensor[(5, 3, 8), float64] */;
    (%713, %714, %715)
  };
  %716() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(720), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_10069(%var_10066: Tensor[(7, 1), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7, 1), float64]) {
  %717 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %718 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
  %719 = cast(%var_10066, dtype="float64") /* ty=Tensor[(7, 1), float64] */;
  %720 = reshape(%719, newshape=[1, 7, 1]) /* ty=Tensor[(1, 7, 1), float64] */;
  %721 = @func_2458(%720) /* ty=(Tensor[(1, 7, 1), float64],) */;
  %722 = %717.2;
  %723 = %718.1;
  %724 = %721.0;
  (%722, %723, %724, %var_10066)
}

def @func_18764() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %725 = @func_7752() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %726 = @func_12079() /* ty=Tensor[(13, 3, 16), float32] */;
  %727 = %725.0;
  (%726, %727)
}

def @func_6332() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int64]) {
  %728 = @func_3332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %729 = @func_3981() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) */;
  %730 = %728.0;
  %731 = %729.1;
  (%730, %731)
}

def @func_11787() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %732 = @func_7215() /* ty=Tensor[(13, 3, 16), float32] */;
  %733 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 3, 16), float32] */, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%732, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %737 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %738 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %739 = logical_and(%735, %736) /* ty=Tensor[(13, 3, 16), bool] */;
  %740 = %737.1;
  (%738, %739, %740)
}

def @func_11505() -> (Tensor[(13, 3, 16), float32], float32, Tensor[(48), float64], float32, Tensor[(13, 3, 16), float32]) {
  %741 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %742 = cast(meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %743 = cast(-5.40894f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %744 = reshape(%742, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %745 = reshape(%743, newshape=[]) /* ty=float32 */;
  %746 = @func_8231(%744, %745) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(48), float64], Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(208), uint8], Tensor[(208), uint8], Tensor[(11, 15, 5), float32], float32, Tensor[(825), float32]) */;
  %747 = @func_3332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %748 = %741.1;
  %749 = %746.8;
  %750 = %747.0;
  (%748, %749, meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, -5.40894f /* ty=float32 */, %750)
}

def @func_18166() -> Tensor[(13, 3, 16), float32] {
  @func_18164() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_4978(%var_4962: float32, %var_4963: Tensor[(11, 15, 5), float32]) -> (Tensor[(11, 15, 5), float32],) {
  %751 = cast(%var_4962, dtype="float32") /* ty=float32 */;
  %752 = cast(%var_4963, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
  %753 = floor_mod(%751, %752) /* ty=Tensor[(11, 15, 5), float32] */;
  (%753,)
}

def @func_22938(%var_22936: Tensor[(10, 7, 7), int8], %var_22937: Tensor[(10, 7, 7), int8]) -> Tensor[(10, 7, 7), int8] {
  %758 = fn (%var_22928: Tensor[(10, 7, 7), int8], %var_22929: Tensor[(10, 7, 7), int8]) -> Tensor[(10, 7, 7), int8] {
    %754 = cast(%var_22929, dtype="int8") /* ty=Tensor[(10, 7, 7), int8] */;
    %755 = shape_of(%var_22928, dtype="int32") /* ty=Tensor[(3), int32] */;
    %756 = cast(%var_22928, dtype="int8") /* ty=Tensor[(10, 7, 7), int8] */;
    %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_and(%756, %757) /* ty=Tensor[(10, 7, 7), int8] */
  };
  %758(%var_22936, %var_22937) /* ty=Tensor[(10, 7, 7), int8] */
}

def @func_11695() -> Tensor[(5, 3, 8), float64] {
  @func_11693() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_14567() -> (Tensor[(5, 3, 8), float64],) {
  %761 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %759 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %760 = %759.0;
    (%760,)
  };
  %761() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_6010(%var_6008: Tensor[(13, 3, 16), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), int8], Tensor[(13, 3, 16), float64]) {
  @func_6007(%var_6008) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), int8], Tensor[(13, 3, 16), float64]) */
}

def @func_13551() -> Tensor[(13, 3, 16), bool] {
  %763 = fn () -> Tensor[(13, 3, 16), bool] {
    %762 = @func_9149() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %762.0
  };
  %763() /* ty=Tensor[(13, 3, 16), bool] */
}

def @func_8699(%var_8697: Tensor[(14, 1, 4), uint8]) -> (Tensor[(14, 14, 4), uint8], Tensor[(2, 13, 8), uint8], Tensor[(720), float64], Tensor[(14, 14, 4), bool], Tensor[(5, 3, 8), float64]) {
  @func_8696(%var_8697) /* ty=(Tensor[(14, 14, 4), uint8], Tensor[(2, 13, 8), uint8], Tensor[(720), float64], Tensor[(14, 14, 4), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_5020(%var_5019: Tensor[(80, 1), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64], Tensor[(80, 1), float64], Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
  %772 = fn (%var_5005: Tensor[(80, 1), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64], Tensor[(80, 1), float64], Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
    %764 = cast(%var_5005, dtype="float64") /* ty=Tensor[(80, 1), float64] */;
    %765 = reshape(%764, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
    %766 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %767 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
    %768 = @func_4446() /* ty=Tensor[(13, 3, 16), float32] */;
    %769 = @func_4776(%765) /* ty=Tensor[(?, 16, 5), float64] */;
    %770 = %766.1;
    %771 = %767.2;
    (%768, %769, %var_5005, %770, %771)
  };
  %772(%var_5019) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64], Tensor[(80, 1), float64], Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */
}

def @func_19730() -> Tensor[(5, 3, 8), float64] {
  @func_19728() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_8558(%var_8526: Tensor[(6, 6, 15), float64]) -> (Tensor[(6, 6, 15), float32],) {
  %773 = cast(%var_8526, dtype="float64") /* ty=Tensor[(6, 6, 15), float64] */;
  %774 = log10(%773) /* ty=Tensor[(6, 6, 15), float64] */;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(6, 6, 15), float32] */;
  %776 = acos(%775) /* ty=Tensor[(6, 6, 15), float32] */;
  (%776,)
}

def @func_6703() -> Tensor[(208), uint8] {
  %778 = fn () -> Tensor[(208), uint8] {
    %777 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
    %777.2
  };
  %778() /* ty=Tensor[(208), uint8] */
}

def @func_19469(%var_19461: Tensor[(208), uint8]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(208), bool], Tensor[(208), uint8]) {
  %779 = @func_8058() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %780 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %781 = cast(%var_19461, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %782 = reshape(%781, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %783 = %779.1;
  %784 = %780.1;
  %785 = @func_6382(%782) /* ty=Tensor[(208), bool] */;
  (%783, %784, %785, %var_19461)
}

def @func_17182(%var_17181: Tensor[(3, 180), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(6, 6, 15), float32], Tensor[(3, 180), float64], Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %801 = fn (%var_17114: Tensor[(3, 180), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(6, 6, 15), float32], Tensor[(3, 180), float64], Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
    %786 = @func_7242() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %787 = cast(%var_17114, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
    %788 = reshape(%787, newshape=[6, 6, 15]) /* ty=Tensor[(6, 6, 15), float64] */;
    %789 = @func_8558(%788) /* ty=(Tensor[(6, 6, 15), float32],) */;
    %790 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
    %791 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
    %792 = @func_13156() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %793 = @func_11525() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %794 = %786.1;
    %795 = %789.0;
    %796 = %790.0;
    %797 = %791.1;
    %798 = %792.1;
    %799 = @func_3578() /* ty=Tensor[(13, 3, 16), float32] */;
    %800 = %793.0;
    (%794, %795, %var_17114, %796, %797, %798, %799, %800)
  };
  %801(%var_17181) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(6, 6, 15), float32], Tensor[(3, 180), float64], Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_20943() -> Tensor[(5, 3, 8), float64] {
  @func_20941() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_7108() -> (Tensor[(720), float64], Tensor[(208), uint8]) {
  %805 = fn () -> (Tensor[(720), float64], Tensor[(208), uint8]) {
    %802 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
    %803 = @func_4246() /* ty=Tensor[(720), float64] */;
    %804 = %802.1;
    (%803, %804)
  };
  %805() /* ty=(Tensor[(720), float64], Tensor[(208), uint8]) */
}

def @func_16496(%var_16494: Tensor[(1, 12, 9), float64]) -> (Tensor[(1, 12, 9), float64], Tensor[(720), float64]) {
  @func_16493(%var_16494) /* ty=(Tensor[(1, 12, 9), float64], Tensor[(720), float64]) */
}

def @func_11154() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  @func_11152() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_13948() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
  %810 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
    %806 = @func_8576() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %807 = @func_9258() /* ty=Tensor[(5, 3, 8), float64] */;
    %808 = %806.1;
    %809 = @func_4246() /* ty=Tensor[(720), float64] */;
    (%807, %808, %809)
  };
  %810() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */
}

def @func_5621() -> (Tensor[(13, 3, 16), float32],) {
  %813 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %811 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %812 = %811.0;
    (%812,)
  };
  %813() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_7802() -> Tensor[(5, 3, 8), float32] {
  %814 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %814.0
}

def @func_12698() -> Tensor[(5, 3, 8), float64] {
  %815 = @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %815.0
}

def @func_18469() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %816 = @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %817 = @func_11476() /* ty=Tensor[(13, 3, 16), float32] */;
  %818 = cast(%817, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %819 = reshape(%818, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %820 = @func_3035(%819) /* ty=(Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %821 = %816.1;
  %822 = %820.1;
  (%817, %821, %822)
}

def @func_17514() -> (Tensor[(6, 11, 4), float64],) {
  %823 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 11, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 4), float32] */;
  %824 = sigmoid(%823) /* ty=Tensor[(6, 11, 4), float32] */;
  %825 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 11, 4), float32] */, dtype="float64") /* ty=Tensor[(6, 11, 4), float64] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="float64") /* ty=Tensor[(6, 11, 4), float64] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %829 = floor_mod(%827, %828) /* ty=Tensor[(6, 11, 4), float64] */;
  (%829,)
}

def @func_4248() -> Tensor[(720), float64] {
  @func_4246() /* ty=Tensor[(720), float64] */
}

def @func_8254() -> (Tensor[(5, 3, 8), float64],) {
  @func_8252() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_14079() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  @func_14077() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_21505() -> (Tensor[(13, 3, 16), float32],) {
  %831 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %830 = @func_10640() /* ty=Tensor[(13, 3, 16), float32] */;
    (%830,)
  };
  %831() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_11526() -> (Tensor[(5, 3, 8), float64],) {
  %834 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %832 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %833 = %832.0;
    (%833,)
  };
  %834() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_8009() -> (Tensor[(720), float64],) {
  %835 = @func_4246() /* ty=Tensor[(720), float64] */;
  (%835,)
}

def @func_14349() -> Tensor[(5, 3, 8), float64] {
  %836 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_12496() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %836() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_15096() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %840 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %837 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %838 = @func_10725() /* ty=Tensor[(5, 3, 8), float64] */;
    %839 = %837.0;
    (%838, %839)
  };
  %840() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_22589() -> (Tensor[(5, 3, 8), float64],) {
  %841 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %842 = %841.0;
  (%842,)
}

def @func_9749() -> (Tensor[(13, 3, 16), float32], Tensor[(208), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_9747() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_15668() -> (Tensor[(11, 7, 1), int16], Tensor[(11, 7, 1), bool], Tensor[(5, 3, 8), float64]) {
  %843 = cast(meta[relay.Constant][22] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %844 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 7, 1), int16] */, dtype="int16") /* ty=Tensor[(11, 7, 1), int16] */;
  %845 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 7, 1), int16] */, dtype="float64") /* ty=Tensor[(11, 7, 1), float64] */;
  %846 = atan(%845) /* ty=Tensor[(11, 7, 1), float64] */;
  %847 = cast(%846, dtype="bool") /* ty=Tensor[(11, 7, 1), bool] */;
  %848 = cast(meta[relay.Constant][22] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %849 = add(%843, %844) /* ty=Tensor[(11, 7, 1), int16] */;
  %850 = greater(%847, %848) /* ty=Tensor[(11, 7, 1), bool] */;
  %851 = @func_10559() /* ty=Tensor[(5, 3, 8), float64] */;
  (%849, %850, %851)
}

def @func_18726() -> Tensor[(5, 3, 8), float64] {
  @func_16139() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_17108() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %852 = @func_17048() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %853 = @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %854 = %852.0;
  %855 = %853.0;
  (%854, %855)
}

def @func_4735(%var_4734: Tensor[(208), uint8]) -> (Tensor[(13, 3, 16), uint8], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(13, 3, 16), float32]) {
  %867 = fn (%var_4725: Tensor[(208), uint8]) -> (Tensor[(13, 3, 16), uint8], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(13, 3, 16), float32]) {
    %856 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
    %857 = %856.0;
    %858 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 3, 16), float32] */, dtype="uint8") /* ty=Tensor[(13, 3, 16), uint8] */;
    %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
    %860 = cast(%857, dtype="uint8") /* ty=Tensor[(13, 3, 16), uint8] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %862 = cast(%var_4725, dtype="uint8") /* ty=Tensor[(208), uint8] */;
    %863 = reshape(%862, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
    %864 = bitwise_xor(%860, %861) /* ty=Tensor[(13, 3, 16), uint8] */;
    %865 = @func_503(%863) /* ty=Tensor[(2, 13, 8), uint8] */;
    %866 = @func_2286() /* ty=Tensor[(13, 3, 16), float32] */;
    (%864, %865, %var_4725, %866)
  };
  %867(%var_4734) /* ty=(Tensor[(13, 3, 16), uint8], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(13, 3, 16), float32]) */
}

def @func_14617() -> Tensor[(13, 3, 16), float32] {
  @func_14615() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_16088() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %868 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %869 = @func_13269() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) */;
  %870 = @func_14077() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %871 = %868.1;
  %872 = %869.1;
  %873 = %870.1;
  (%871, %872, %873)
}

def @func_7527() -> (Tensor[(5, 3, 8), float64],) {
  %876 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %874 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %875 = %874.0;
    (%875,)
  };
  %876() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_10960() -> Tensor[(48), float64] {
  %877 = @func_4959() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(8, 2, 3), int32], Tensor[(48), float64]) */;
  %877.2
}

def @func_20941() -> Tensor[(5, 3, 8), float64] {
  @func_7202() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_22004() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %878 = @func_8252() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %879 = %878.0;
  %880 = @func_3578() /* ty=Tensor[(13, 3, 16), float32] */;
  (%879, %880)
}

def @func_22567() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
  %881 = cast(meta[relay.Constant][25] /* ty=Tensor[(88), float64] */, dtype="float64") /* ty=Tensor[(88), float64] */;
  %882 = cast(meta[relay.Constant][26] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %883 = reshape(%881, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %884 = reshape(%882, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %885 = @func_4514(%883, %884) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %886 = @func_13550() /* ty=Tensor[(13, 3, 16), bool] */;
  %887 = %885.4;
  (%886, %887, meta[relay.Constant][25] /* ty=Tensor[(88), float64] */, meta[relay.Constant][26] /* ty=Tensor[(720), float64] */)
}

def @func_4361() -> Tensor[(5, 3, 8), float64] {
  %888 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_2884() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %888() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_8060() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  @func_8058() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_4349() -> (Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
  %892 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
    %889 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
    %890 = @func_2286() /* ty=Tensor[(13, 3, 16), float32] */;
    %891 = %889.0;
    (%890, %891)
  };
  %892() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */
}

def @func_14238() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), bool], Tensor[(6, 15, 8), int16], Tensor[(5, 10, 4), float64]) {
  %893 = @func_7351() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %894 = @func_11302() /* ty=Tensor[(5, 3, 8), float64] */;
  %895 = cast(%894, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %896 = reshape(%895, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
  %897 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 8), float64] */;
  %898 = log10(%897) /* ty=Tensor[(6, 15, 8), float64] */;
  %899 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 15, 8), float64] */, dtype="int16") /* ty=Tensor[(6, 15, 8), int16] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%898, dtype="int16") /* ty=Tensor[(6, 15, 8), int16] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %903 = @func_9136() /* ty=(Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) */;
  %904 = %893.0;
  %905 = @func_4213(%896) /* ty=Tensor[(5, 3, 8), bool] */;
  %906 = bitwise_and(%901, %902) /* ty=Tensor[(6, 15, 8), int16] */;
  %907 = %903.0;
  (%894, %904, %905, %906, %907)
}

def @func_11507() -> (Tensor[(13, 3, 16), float32], float32, Tensor[(48), float64], float32, Tensor[(13, 3, 16), float32]) {
  @func_11505() /* ty=(Tensor[(13, 3, 16), float32], float32, Tensor[(48), float64], float32, Tensor[(13, 3, 16), float32]) */
}

def @func_2131() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %908 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %909 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %910 = %908.1;
  %911 = %909.0;
  (%910, %911)
}

def @func_11894() -> (Tensor[(5, 3, 8), float64],) {
  %914 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %912 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %913 = %912.0;
    (%913,)
  };
  %914() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_18193() -> Tensor[(5, 3, 8), float64] {
  %915 = @func_7351() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %915.1
}

def @func_7216() -> Tensor[(13, 3, 16), float32] {
  %916 = fn () -> Tensor[(13, 3, 16), float32] {
    @func_4446() /* ty=Tensor[(13, 3, 16), float32] */
  };
  %916() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_22544(%var_22531: Tensor[(1, 8, 7), float64], %var_22532: Tensor[(1, 8, 7), float64]) -> Tensor[(?, 8, 7), float64] {
  %917 = cast(%var_22532, dtype="float64") /* ty=Tensor[(1, 8, 7), float64] */;
  %918 = shape_of(%var_22531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_22531, dtype="float64") /* ty=Tensor[(1, 8, 7), float64] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%919, %920) /* ty=Tensor[(?, 8, 7), float64] */
}

def @func_18728() -> Tensor[(5, 3, 8), float64] {
  @func_18726() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_20912(%var_20911: Tensor[(770), float32]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(10, 7, 11), float32], Tensor[(770), float32], Tensor[(13, 3, 16), float32], Tensor[(14, 14, 4), bool], Tensor[(14, 4), uint8], Tensor[(5, 3, 8), float64]) {
  %938 = fn (%var_20858: Tensor[(770), float32]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(10, 7, 11), float32], Tensor[(770), float32], Tensor[(13, 3, 16), float32], Tensor[(14, 14, 4), bool], Tensor[(14, 4), uint8], Tensor[(5, 3, 8), float64]) {
    %921 = @func_6332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), int64]) */;
    %922 = @func_17108() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %923 = @func_8397() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %924 = cast(%var_20858, dtype="float32") /* ty=Tensor[(770), float32] */;
    %925 = reshape(%924, newshape=[10, 7, 11]) /* ty=Tensor[(10, 7, 11), float32] */;
    %926 = @func_17918(%925) /* ty=(Tensor[(10, 7, 11), float32],) */;
    %927 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %928 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 4), uint8] */, dtype="uint8") /* ty=Tensor[(14, 4), uint8] */;
    %929 = reshape(%928, newshape=[14, 1, 4]) /* ty=Tensor[(14, 1, 4), uint8] */;
    %930 = @func_8696(%929) /* ty=(Tensor[(14, 14, 4), uint8], Tensor[(2, 13, 8), uint8], Tensor[(720), float64], Tensor[(14, 14, 4), bool], Tensor[(5, 3, 8), float64]) */;
    %931 = %921.0;
    %932 = %922.0;
    %933 = %923.0;
    %934 = %926.0;
    %935 = %927.1;
    %936 = %930.3;
    %937 = @func_20586() /* ty=Tensor[(5, 3, 8), float64] */;
    (%931, %932, %933, %934, %var_20858, %935, %936, meta[relay.Constant][28] /* ty=Tensor[(14, 4), uint8] */, %937)
  };
  %938(%var_20911) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(10, 7, 11), float32], Tensor[(770), float32], Tensor[(13, 3, 16), float32], Tensor[(14, 14, 4), bool], Tensor[(14, 4), uint8], Tensor[(5, 3, 8), float64]) */
}

def @func_2918() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_21899() -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(15, 16, 12), float64]) {
  @func_21897() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(15, 16, 12), float64]) */
}

def @func_8755() -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) {
  @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */
}

def @func_15261() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %943 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %939 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %940 = %939.0;
    %941 = @func_13964() /* ty=Tensor[(5, 3, 8), float64] */;
    %942 = @func_4270() /* ty=Tensor[(5, 3, 8), float64] */;
    (%940, %941, %942)
  };
  %943() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_16413() -> Tensor[(208), uint8] {
  %944 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %944.0
}

def @func_4420() -> (Tensor[(13, 3, 16), float64],) {
  %949 = fn () -> (Tensor[(13, 3, 16), float64],) {
    %945 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %946 = %945.2;
    %947 = cast(%946, dtype="float64") /* ty=Tensor[(13, 3, 16), float64] */;
    %948 = atanh(%947) /* ty=Tensor[(13, 3, 16), float64] */;
    (%948,)
  };
  %949() /* ty=(Tensor[(13, 3, 16), float64],) */
}

def @func_12022(%var_12019: Tensor[(2, 13, 8), float64], %var_12020: Tensor[(5, 165), float32], %var_12021: Tensor[(80), float64]) -> (Tensor[(2, 13, 8), float32], Tensor[(11, 15, 5), float32], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool], Tensor[(5, 165), int64]) {
  %983 = fn (%var_11951: Tensor[(2, 13, 8), float64], %var_11970: Tensor[(5, 165), float32], %var_11976: Tensor[(80), float64]) -> (Tensor[(2, 13, 8), float32], Tensor[(11, 15, 5), float32], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool], Tensor[(5, 165), int64]) {
    %950 = @func_10206() /* ty=(Tensor[(2, 13, 8), float32],) */;
    %951 = %950.0;
    %952 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 13, 8), float32] */, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
    %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
    %954 = cast(%951, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
    %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %956 = floor_divide(%954, %955) /* ty=Tensor[(2, 13, 8), float64] */;
    %957 = cast(%var_11951, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
    %958 = shape_of(%956, dtype="int32") /* ty=Tensor[(3), int32] */;
    %959 = cast(%956, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
    %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %961 = cast(-2.13611f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %962 = cast(%var_11970, dtype="float32") /* ty=Tensor[(5, 165), float32] */;
    %963 = reshape(%961, newshape=[]) /* ty=float32 */;
    %964 = reshape(%962, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
    %965 = @func_4978(%963, %964) /* ty=(Tensor[(11, 15, 5), float32],) */;
    %966 = cast(%var_11976, dtype="float64") /* ty=Tensor[(80), float64] */;
    %967 = reshape(%966, newshape=[1, 16, 5]) /* ty=Tensor[(1, 16, 5), float64] */;
    %968 = @func_5730() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
    %969 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %970 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 13, 8), float32] */, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
    %971 = shape_of(%var_11951, dtype="int32") /* ty=Tensor[(3), int32] */;
    %972 = cast(%var_11951, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
    %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %974 = cast(%var_11970, dtype="int64") /* ty=Tensor[(5, 165), int64] */;
    %975 = cast(-2.13611f /* ty=float32 */, dtype="int64") /* ty=int64 */;
    %976 = divide(%959, %960) /* ty=Tensor[(2, 13, 8), float32] */;
    %977 = %965.0;
    %978 = @func_4776(%967) /* ty=Tensor[(?, 16, 5), float64] */;
    %979 = %968.0;
    %980 = %969.0;
    %981 = less_equal(%972, %973) /* ty=Tensor[(2, 13, 8), bool] */;
    %982 = bitwise_or(%974, %975) /* ty=Tensor[(5, 165), int64] */;
    (%976, %977, %978, %var_11976, %979, %980, %981, %982)
  };
  %983(%var_12019, %var_12020, %var_12021) /* ty=(Tensor[(2, 13, 8), float32], Tensor[(11, 15, 5), float32], Tensor[(?, 16, 5), float64], Tensor[(80), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool], Tensor[(5, 165), int64]) */
}

def @func_17241() -> (Tensor[(5, 3, 8), float64],) {
  @func_17239() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_6659(%var_6657: Tensor[(1260), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(14, 10, 9), float64], Tensor[(1260), float64]) {
  @func_6656(%var_6657) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(14, 10, 9), float64], Tensor[(1260), float64]) */
}

def @func_15415() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %987 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %984 = @func_7482() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
    %985 = @func_7202() /* ty=Tensor[(5, 3, 8), float64] */;
    %986 = %984.4;
    (%985, %986)
  };
  %987() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_14647() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %988 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %989 = @func_9034() /* ty=Tensor[(13, 3, 16), float32] */;
  %990 = %988.0;
  (%989, %990)
}

def @func_19274() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_19272() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_3936() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %991 = @func_3816() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %992 = %991.0;
  %993 = cast(%992, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %994 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %995 = log(%993) /* ty=Tensor[(13, 3, 16), float32] */;
  %996 = %994.2;
  (%995, %996)
}

def @func_5173() -> (Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) {
  %1013 = fn () -> (Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) {
    %997 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %998 = %997.2;
    %999 = cast(meta[relay.Constant][30] /* ty=Tensor[(208), uint8] */, dtype="bool") /* ty=Tensor[(208), bool] */;
    %1000 = shape_of(%998, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1001 = cast(%998, dtype="bool") /* ty=Tensor[(208), bool] */;
    %1002 = dyn.reshape(%999, %1000, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1003 = cast(meta[relay.Constant][31] /* ty=Tensor[(208), uint8] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
    %1004 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(208), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1005 = cast(meta[relay.Constant][30] /* ty=Tensor[(208), uint8] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
    %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %1007 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
    %1008 = @func_4651() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8]) */;
    %1009 = logical_and(%1001, %1002) /* ty=Tensor[(208), bool] */;
    %1010 = right_shift(%1005, %1006) /* ty=Tensor[(208), uint32] */;
    %1011 = %1007.2;
    %1012 = %1008.2;
    (%1009, %1010, %1011, %1012)
  };
  %1013() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */
}

def @func_12625(%var_12623: Tensor[(5, 14, 16), int16], %var_12624: Tensor[(5, 14, 16), int16]) -> (Tensor[(5, 14, 16), int16],) {
  @func_12621(%var_12623, %var_12624) /* ty=(Tensor[(5, 14, 16), int16],) */
}

def @func_14463(%var_14461: Tensor[(4, 20), float64], %var_14462: Tensor[(4, 20), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 20), uint64], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64]) {
  @func_14459(%var_14461, %var_14462) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 20), uint64], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(?, 16, 5), float64]) */
}

def @func_21539() -> (Tensor[(5, 3, 8), float64],) {
  %1016 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %1014 = @func_13947() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */;
    %1015 = %1014.1;
    (%1015,)
  };
  %1016() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_11254() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
  %1020 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
    %1017 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
    %1018 = %1017.0;
    %1019 = @func_4246() /* ty=Tensor[(720), float64] */;
    (%1018, %1019)
  };
  %1020() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */
}

def @func_8373() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1029 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
    %1021 = @func_6107() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %1022 = @func_3375() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1023 = @func_6177() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %1024 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1025 = %1021.1;
    %1026 = %1022.0;
    %1027 = %1023.1;
    %1028 = %1024.0;
    (%1025, %1026, %1027, %1028)
  };
  %1029() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_15670() -> (Tensor[(11, 7, 1), int16], Tensor[(11, 7, 1), bool], Tensor[(5, 3, 8), float64]) {
  @func_15668() /* ty=(Tensor[(11, 7, 1), int16], Tensor[(11, 7, 1), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_20747() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1035 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
    %1030 = @func_18129() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(12, 4), float64]) */;
    %1031 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1032 = %1030.0;
    %1033 = %1031.0;
    %1034 = @func_9034() /* ty=Tensor[(13, 3, 16), float32] */;
    (%1032, %1033, %1034)
  };
  %1035() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_7897() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1040 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
    %1036 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %1037 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1038 = %1036.1;
    %1039 = %1037.1;
    (%1038, %1039)
  };
  %1040() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_13824(%var_13822: Tensor[(4, 3, 4), float64], %var_13823: Tensor[(4, 3, 4), float64]) -> (Tensor[(4, 3, 4), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int8]) {
  %1052 = fn (%var_13774: Tensor[(4, 3, 4), float64], %var_13775: Tensor[(4, 3, 4), float64]) -> (Tensor[(4, 3, 4), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int8]) {
    %1041 = cast(%var_13775, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
    %1042 = shape_of(%var_13774, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1043 = cast(%var_13774, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
    %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1045 = @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1046 = %1045.0;
    %1047 = cast(%1046, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
    %1048 = reshape(%1047, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), float64] */;
    %1049 = @func_2624(%1048) /* ty=(Tensor[(5, 3, 8), int8],) */;
    %1050 = divide(%1043, %1044) /* ty=Tensor[(4, 3, 4), float64] */;
    %1051 = %1049.0;
    (%1050, %1046, %1051)
  };
  %1052(%var_13822, %var_13823) /* ty=(Tensor[(4, 3, 4), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int8]) */
}

def @func_15282() -> (Tensor[(13, 3, 16), bool],) {
  %1055 = fn () -> (Tensor[(13, 3, 16), bool],) {
    %1053 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
    %1054 = %1053.2;
    (%1054,)
  };
  %1055() /* ty=(Tensor[(13, 3, 16), bool],) */
}

def @func_5791() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) {
  @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */
}

def @func_6007(%var_5980: Tensor[(13, 3, 16), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), int8], Tensor[(13, 3, 16), float64]) {
  %1056 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1057 = @func_3332() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1058 = %1057.0;
  %1059 = cast(%var_5980, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %1060 = shape_of(%1058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1061 = cast(%1058, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
  %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1063 = not_equal(%1061, %1062) /* ty=Tensor[(13, 3, 16), bool] */;
  %1064 = cast(%1063, dtype="int8") /* ty=Tensor[(13, 3, 16), int8] */;
  %1065 = shape_of(%var_5980, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1066 = cast(%var_5980, dtype="int8") /* ty=Tensor[(13, 3, 16), int8] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1068 = cast(%1063, dtype="float64") /* ty=Tensor[(13, 3, 16), float64] */;
  %1069 = %1056.0;
  %1070 = bitwise_and(%1066, %1067) /* ty=Tensor[(13, 3, 16), int8] */;
  %1071 = sin(%1068) /* ty=Tensor[(13, 3, 16), float64] */;
  (%1069, %1070, %1071)
}

def @func_22276() -> Tensor[(2, 13, 8), uint8] {
  %1073 = fn () -> Tensor[(2, 13, 8), uint8] {
    %1072 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %1072.1
  };
  %1073() /* ty=Tensor[(2, 13, 8), uint8] */
}

def @func_6384(%var_6383: Tensor[(208), uint8]) -> Tensor[(208), bool] {
  %1080 = fn (%var_6366: Tensor[(208), uint8]) -> Tensor[(208), bool] {
    %1074 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
    %1075 = %1074.1;
    %1076 = cast(%var_6366, dtype="bool") /* ty=Tensor[(208), bool] */;
    %1077 = shape_of(%1075, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1078 = cast(%1075, dtype="bool") /* ty=Tensor[(208), bool] */;
    %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?), bool] */;
    greater_equal(%1078, %1079) /* ty=Tensor[(208), bool] */
  };
  %1080(%var_6383) /* ty=Tensor[(208), bool] */
}

def @func_16051() -> (Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  @func_16049() /* ty=(Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */
}

def @func_3578() -> Tensor[(13, 3, 16), float32] {
  %1081 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1081.1
}

def @func_7251() -> (Tensor[(208), bool],) {
  %1084 = fn () -> (Tensor[(208), bool],) {
    %1082 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
    %1083 = %1082.0;
    (%1083,)
  };
  %1084() /* ty=(Tensor[(208), bool],) */
}

def @func_12081() -> Tensor[(13, 3, 16), float32] {
  @func_12079() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_22127() -> (Tensor[(5, 3, 8), float64],) {
  %1087 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %1085 = @func_13394() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1086 = %1085.0;
    (%1086,)
  };
  %1087() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_10850() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) {
  @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */
}

def @func_22548(%var_22546: Tensor[(1, 8, 7), float64], %var_22547: Tensor[(1, 8, 7), float64]) -> Tensor[(?, 8, 7), float64] {
  @func_22544(%var_22546, %var_22547) /* ty=Tensor[(?, 8, 7), float64] */
}

def @func_14615() -> Tensor[(13, 3, 16), float32] {
  @func_10640() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_3136() -> (Tensor[(5, 3, 8), float64],) {
  %1089 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %1088 = @func_2644() /* ty=Tensor[(5, 3, 8), float64] */;
    (%1088,)
  };
  %1089() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_9441() -> (Tensor[(5, 3, 8), float64],) {
  %1092 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %1090 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1091 = %1090.0;
    (%1091,)
  };
  %1092() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_3982() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) {
  %1103 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) {
    %1093 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
    %1094 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
    %1095 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 3, 8), float64] */, dtype="int64") /* ty=Tensor[(5, 3, 8), int64] */;
    %1096 = shape_of(%1094, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1097 = cast(%1094, dtype="int64") /* ty=Tensor[(5, 3, 8), int64] */;
    %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1099 = @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */;
    %1100 = %1093.0;
    %1101 = multiply(%1097, %1098) /* ty=Tensor[(5, 3, 8), int64] */;
    %1102 = %1099.1;
    (%1100, %1101, %1102)
  };
  %1103() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) */
}

def @func_23365(%var_23364: Tensor[(2, 11, 13), int32]) -> Tensor[(2, 11, 13), int32] {
  %1108 = fn (%var_23358: Tensor[(2, 11, 13), int32]) -> Tensor[(2, 11, 13), int32] {
    %1104 = cast(%var_23358, dtype="int32") /* ty=Tensor[(2, 11, 13), int32] */;
    %1105 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(2, 11, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1106 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 11, 13), int32] */, dtype="int32") /* ty=Tensor[(2, 11, 13), int32] */;
    %1107 = dyn.reshape(%1104, %1105, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    subtract(%1106, %1107) /* ty=Tensor[(2, 11, 13), int32] */
  };
  %1108(%var_23364) /* ty=Tensor[(2, 11, 13), int32] */
}

def @func_14000() -> Tensor[(208), bool] {
  %1109 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
  %1109.0
}

def @func_18808() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %1110 = @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1111 = %1110.1;
  %1112 = @func_17798() /* ty=Tensor[(13, 3, 16), bool] */;
  (%1111, %1112)
}

def @func_21090() -> Tensor[(13, 3, 16), float32] {
  %1113 = @func_19208() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1113.0
}

def @func_22569() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
  @func_22567() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) */
}

def @func_16979() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) {
  @func_16977() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_18264() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1114 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1115 = %1114.0;
  %1116 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1115, %1116)
}

def @func_10744() -> (Tensor[(5, 3, 8), float64],) {
  @func_10742() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_13500() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %1121 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
    %1117 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %1118 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
    %1119 = %1117.0;
    %1120 = %1118.1;
    (%1119, %1120)
  };
  %1121() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_16049() -> (Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  %1122 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
  %1123 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %1124 = @func_6107() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1125 = %1122.1;
  %1126 = %1123.1;
  %1127 = %1124.0;
  (%1125, %1126, %1127)
}

def @func_16807() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  %1128 = @func_15095() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1129 = @func_16745() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */;
  %1130 = %1128.1;
  %1131 = %1129.1;
  (%1130, %1131)
}

def @func_4171(%var_4169: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %1132 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %1133 = @func_2356() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1134 = cast(%var_4169, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1135 = reshape(%1134, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1136 = @func_1610(%1135) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1137 = %1132.1;
  %1138 = %1133.0;
  %1139 = %1136.0;
  (%1137, %1138, %1139, %var_4169)
}

def @func_5865() -> (Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1145 = fn () -> (Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
    %1140 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %1141 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %1142 = @func_4246() /* ty=Tensor[(720), float64] */;
    %1143 = %1140.1;
    %1144 = %1141.3;
    (%1142, %1143, %1144)
  };
  %1145() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_9610() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) {
  %1154 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) {
    %1146 = @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %1147 = @func_6440() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1148 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
    %1149 = @func_9177() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1150 = %1146.1;
    %1151 = %1147.0;
    %1152 = %1148.2;
    %1153 = %1149.0;
    (%1150, %1151, %1152, %1153)
  };
  %1154() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_14115() -> (Tensor[(5, 3, 8), float64],) {
  %1155 = @func_10173() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %1156 = %1155.0;
  (%1156,)
}

def @func_10681() -> (Tensor[(13, 3, 16), float32],) {
  %1157 = @func_10640() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1157,)
}

def @func_7230() -> Tensor[(1, 7, 1), float64] {
  %1159 = fn () -> Tensor[(1, 7, 1), float64] {
    %1158 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
    %1158.1
  };
  %1159() /* ty=Tensor[(1, 7, 1), float64] */
}

def @func_12386(%var_12384: Tensor[(48), float64], %var_12385: float32) -> (Tensor[(208), uint8], Tensor[(13, 3, 16), float32], Tensor[(825), float32], Tensor[(48), float64], float32) {
  @func_12382(%var_12384, %var_12385) /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), float32], Tensor[(825), float32], Tensor[(48), float64], float32) */
}

def @func_10707() -> Tensor[(5, 3, 8), float64] {
  %1160 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %1160.2
}

def @func_13965() -> Tensor[(5, 3, 8), float64] {
  %1162 = fn () -> Tensor[(5, 3, 8), float64] {
    %1161 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1161.0
  };
  %1162() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_2822() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) {
  %1163 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1164 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1165 = %1164.0;
  %1166 = cast(%1165, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %1167 = reshape(%1166, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1168 = @func_2541(%1167) /* ty=(Tensor[(13, 3, 16), bool],) */;
  %1169 = %1163.0;
  %1170 = %1168.0;
  (%1169, %1165, %1170)
}

def @func_6817() -> (Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) {
  %1177 = fn () -> (Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) {
    %1171 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
    %1172 = @func_4419() /* ty=(Tensor[(13, 3, 16), float64],) */;
    %1173 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1174 = %1171.1;
    %1175 = %1172.0;
    %1176 = %1173.0;
    (%1174, %1175, %1176)
  };
  %1177() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_7804() -> Tensor[(5, 3, 8), float32] {
  @func_7802() /* ty=Tensor[(5, 3, 8), float32] */
}

def @func_15831(%var_15829: Tensor[(10, 10, 1), float64]) -> (Tensor[(13, 3, 16), float64], Tensor[(10, 10, ?), bool]) {
  @func_15828(%var_15829) /* ty=(Tensor[(13, 3, 16), float64], Tensor[(10, 10, ?), bool]) */
}

def @func_2101() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_23170() -> Tensor[(13, 3, 16), float32] {
  %1179 = fn () -> Tensor[(13, 3, 16), float32] {
    %1178 = @func_19208() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1178.0
  };
  %1179() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_23161() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float64], Tensor[(720), float64]) {
  %1180 = @func_17302() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1181 = @func_14077() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1182 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1183 = @func_20656() /* ty=(Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */;
  %1184 = %1183.0;
  %1185 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1186 = %1185.1;
  %1187 = cast(%1186, dtype="int32") /* ty=Tensor[(13, 3, 16), int32] */;
  %1188 = shape_of(%1184, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1189 = cast(%1184, dtype="int32") /* ty=Tensor[(8, 78), int32] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1191 = left_shift(%1189, %1190) /* ty=Tensor[(8, 78), int32] */;
  %1192 = cast(%1191, dtype="float64") /* ty=Tensor[(8, 78), float64] */;
  %1193 = @func_11842() /* ty=(Tensor[(720), float64],) */;
  %1194 = %1180.0;
  %1195 = %1181.0;
  %1196 = %1182.0;
  %1197 = sin(%1192) /* ty=Tensor[(8, 78), float64] */;
  %1198 = %1193.0;
  (%1194, %1195, %1196, %1197, %1198)
}

def @func_4174(%var_4172: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  @func_4171(%var_4172) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */
}

def @func_4881() -> (Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) {
  @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */
}

def @func_15798(%var_15780: float32, %var_15781: Tensor[(11, 1, 8), float32]) -> (Tensor[(11, 1, 8), float32], Tensor[(5, 3, 8), float64]) {
  %1199 = cast(%var_15780, dtype="float32") /* ty=float32 */;
  %1200 = cast(%var_15781, dtype="float32") /* ty=Tensor[(11, 1, 8), float32] */;
  %1201 = @func_6440() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1202 = floor_divide(%1199, %1200) /* ty=Tensor[(11, 1, 8), float32] */;
  %1203 = %1201.1;
  (%1202, %1203)
}

def @func_22170() -> Tensor[(5, 3, 8), float64] {
  %1204 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1204.1
}

def @func_2646() -> Tensor[(5, 3, 8), float64] {
  @func_2644() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_18130() -> (Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(12, 4), float64]) {
  %1213 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(12, 4), float64]) {
    %1205 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1206 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
    %1207 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
    %1208 = reshape(%1206, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
    %1209 = reshape(%1207, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
    %1210 = @func_1821(%1208, %1209) /* ty=(Tensor[(8, 2, 3), int32],) */;
    %1211 = %1205.0;
    %1212 = %1210.0;
    (%1211, %1212, meta[relay.Constant][34] /* ty=Tensor[(12, 4), float64] */)
  };
  %1213() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(8, 2, 3), int32], Tensor[(12, 4), float64]) */
}

def @func_9829() -> (Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  @func_9827() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */
}

def @func_19833(%var_19831: Tensor[(5, 10, 4), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 10, 4), bool]) {
  @func_19830(%var_19831) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 10, 4), bool]) */
}

def @func_6442() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_6440() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_3540() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) {
  @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */
}

def @func_6718() -> (Tensor[(5, 3, 8), float64],) {
  @func_6716() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_506(%var_504: Tensor[(2, 13, 8), uint8]) -> Tensor[(2, 13, 8), uint8] {
  @func_503(%var_504) /* ty=Tensor[(2, 13, 8), uint8] */
}

def @func_2010() -> Tensor[(5, 3, 8), float64] {
  @func_1956() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_6930() -> Tensor[(5, 3, 8), float64] {
  %1217 = fn () -> Tensor[(5, 3, 8), float64] {
    %1214 = @func_6177() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %1215 = %1214.0;
    %1216 = cast(%1215, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
    sigmoid(%1216) /* ty=Tensor[(5, 3, 8), float64] */
  };
  %1217() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_1973() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) {
  %1218 = cast(meta[relay.Constant][35] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1219 = reshape(%1218, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), float64] */;
  %1220 = @func_1776(%1219) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */;
  %1221 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  %1222 = %1220.3;
  (%1221, %1222, meta[relay.Constant][35] /* ty=Tensor[(720), float64] */)
}

def @func_10709() -> Tensor[(5, 3, 8), float64] {
  @func_10707() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_14991(%var_14989: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), bool] {
  @func_14988(%var_14989) /* ty=Tensor[(5, 3, 8), bool] */
}

def @func_18044(%var_18042: Tensor[(132), int16]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 180), float64], Tensor[(132), int16]) {
  @func_18041(%var_18042) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(4, 180), float64], Tensor[(132), int16]) */
}

def @func_7920() -> (Tensor[(13, 3, 16), float64],) {
  %1225 = fn () -> (Tensor[(13, 3, 16), float64],) {
    %1223 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
    %1224 = %1223.1;
    (%1224,)
  };
  %1225() /* ty=(Tensor[(13, 3, 16), float64],) */
}

def @func_9997(%var_9996: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(624), float32]) {
  %1232 = fn (%var_9988: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(624), float32]) {
    %1226 = @func_8576() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1227 = cast(%var_9988, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1228 = reshape(%1227, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %1229 = @func_2541(%1228) /* ty=(Tensor[(13, 3, 16), bool],) */;
    %1230 = %1226.0;
    %1231 = %1229.0;
    (%1230, %1231, %var_9988)
  };
  %1232(%var_9996) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(624), float32]) */
}

def @func_20270() -> Tensor[(5, 3, 8), float32] {
  %1233 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
  %1233.1
}

def @func_17377() -> (Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), float32]) {
  %1238 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), float32]) {
    %1234 = @func_7482() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
    %1235 = @func_10206() /* ty=(Tensor[(2, 13, 8), float32],) */;
    %1236 = %1234.3;
    %1237 = %1235.0;
    (%1236, %1237)
  };
  %1238() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), float32]) */
}

def @func_12867() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(720), float64]) {
  %1239 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1240 = @func_12259() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1241 = @func_11424() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1242 = @func_4032() /* ty=(Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
  %1243 = %1239.1;
  %1244 = %1240.0;
  %1245 = %1241.0;
  %1246 = %1242.0;
  %1247 = @func_4246() /* ty=Tensor[(720), float64] */;
  (%1243, %1244, %1245, %1246, %1247)
}

def @func_7069() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */
}

def @func_22244() -> Tensor[(13, 3, 16), float64] {
  %1251 = fn () -> Tensor[(13, 3, 16), float64] {
    %1248 = @func_11591() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) */;
    %1249 = %1248.1;
    %1250 = cast(%1249, dtype="float64") /* ty=Tensor[(13, 3, 16), float64] */;
    tan(%1250) /* ty=Tensor[(13, 3, 16), float64] */
  };
  %1251() /* ty=Tensor[(13, 3, 16), float64] */
}

def @func_5647() -> (Tensor[(5, 3, 8), float64],) {
  %1252 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1253 = %1252.2;
  (%1253,)
}

def @func_8897(%var_8807: float32, %var_8808: Tensor[(5, 165), float32], %var_8863: Tensor[(88), float64], %var_8864: Tensor[(60, 12), float64]) -> (Tensor[(5, 3, 8), float32], Tensor[(11, 15, 5), float32], float32, Tensor[(5, 165), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(?, 11, 8), bool], Tensor[(88), float64], Tensor[(60, 12), float64]) {
  %1254 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1255 = %1254.0;
  %1256 = cast(%1255, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %1257 = cast(%var_8807, dtype="float32") /* ty=float32 */;
  %1258 = cast(%var_8808, dtype="float32") /* ty=Tensor[(5, 165), float32] */;
  %1259 = reshape(%1257, newshape=[]) /* ty=float32 */;
  %1260 = reshape(%1258, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %1261 = @func_4978(%1259, %1260) /* ty=(Tensor[(11, 15, 5), float32],) */;
  %1262 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1263 = cast(%var_8863, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1264 = cast(%var_8864, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %1265 = reshape(%1263, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %1266 = reshape(%1264, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1267 = @func_4514(%1265, %1266) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1268 = sqrt(%1256) /* ty=Tensor[(5, 3, 8), float32] */;
  %1269 = %1261.0;
  %1270 = %1262.0;
  %1271 = @func_7010() /* ty=Tensor[(13, 3, 16), bool] */;
  %1272 = %1267.0;
  (%1268, %1269, %var_8807, %var_8808, %1270, %1271, %1272, %var_8863, %var_8864)
}

def @func_2287() -> Tensor[(13, 3, 16), float32] {
  %1274 = fn () -> Tensor[(13, 3, 16), float32] {
    %1273 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
    %1273.1
  };
  %1274() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_7373() -> Tensor[(5, 3, 8), float32] {
  %1275 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %1275.1
}

def @func_11303() -> Tensor[(5, 3, 8), float64] {
  %1277 = fn () -> Tensor[(5, 3, 8), float64] {
    %1276 = @func_7351() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
    %1276.1
  };
  %1277() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_11591() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) {
  %1278 = @func_9149() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1279 = @func_6750() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32]) */;
  %1280 = %1278.0;
  %1281 = %1279.1;
  (%1280, %1281)
}

def @func_19209() -> (Tensor[(13, 3, 16), float32],) {
  %1284 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %1282 = @func_4686() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) */;
    %1283 = %1282.1;
    (%1283,)
  };
  %1284() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_10207() -> (Tensor[(2, 13, 8), float32],) {
  %1289 = fn () -> (Tensor[(2, 13, 8), float32],) {
    %1285 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
    %1286 = %1285.1;
    %1287 = cast(%1286, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
    %1288 = exp(%1287) /* ty=Tensor[(2, 13, 8), float32] */;
    (%1288,)
  };
  %1289() /* ty=(Tensor[(2, 13, 8), float32],) */
}

def @func_6178() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1292 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
    %1290 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
    %1291 = @func_2286() /* ty=Tensor[(13, 3, 16), float32] */;
    (%1290, %1291)
  };
  %1292() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_18266() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_18264() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_17918(%var_17909: Tensor[(10, 7, 11), float32]) -> (Tensor[(10, 7, 11), float32],) {
  %1293 = cast(%var_17909, dtype="float32") /* ty=Tensor[(10, 7, 11), float32] */;
  %1294 = acos(%1293) /* ty=Tensor[(10, 7, 11), float32] */;
  (%1294,)
}

def @func_13712() -> Tensor[(13, 3, 16), float32] {
  @func_7215() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_20176() -> Tensor[(13, 3, 16), bool] {
  %1296 = fn () -> Tensor[(13, 3, 16), bool] {
    %1295 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
    %1295.2
  };
  %1296() /* ty=Tensor[(13, 3, 16), bool] */
}

def @func_13192() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1301 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %1297 = @func_8397() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1298 = @func_8918() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1299 = %1297.0;
    %1300 = %1298.0;
    (%1299, %1300)
  };
  %1301() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_21092() -> Tensor[(13, 3, 16), float32] {
  @func_21090() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_19917() -> Tensor[(5, 10, 4), float64] {
  %1303 = fn () -> Tensor[(5, 10, 4), float64] {
    %1302 = @func_9136() /* ty=(Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) */;
    %1302.0
  };
  %1303() /* ty=Tensor[(5, 10, 4), float64] */
}

def @func_1957() -> Tensor[(5, 3, 8), float64] {
  %1305 = fn () -> Tensor[(5, 3, 8), float64] {
    %1304 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
    log(%1304) /* ty=Tensor[(5, 3, 8), float64] */
  };
  %1305() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_16493(%var_16486: Tensor[(1, 12, 9), float64]) -> (Tensor[(1, 12, 9), float64], Tensor[(720), float64]) {
  %1306 = cast(%var_16486, dtype="float64") /* ty=Tensor[(1, 12, 9), float64] */;
  %1307 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %1308 = sqrt(%1306) /* ty=Tensor[(1, 12, 9), float64] */;
  %1309 = %1307.2;
  (%1308, %1309)
}

def @func_22698() -> (Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1315 = fn () -> (Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
    %1310 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
    %1311 = @func_10173() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
    %1312 = @func_20175() /* ty=Tensor[(13, 3, 16), bool] */;
    %1313 = %1310.2;
    %1314 = %1311.1;
    (%1312, %1313, %1314)
  };
  %1315() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_20376() -> (Tensor[(5, 3, 8), float64],) {
  %1316 = @func_12935() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1317 = %1316.0;
  (%1317,)
}

def @func_8398() -> (Tensor[(5, 3, 8), float64],) {
  %1320 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %1318 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
    %1319 = %1318.0;
    (%1319,)
  };
  %1320() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_10494() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) {
  %1329 = fn () -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) {
    %1321 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
    %1322 = @func_10415() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %1323 = %1321.2;
    %1324 = cast(%1323, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
    %1325 = reshape(%1324, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %1326 = @func_2541(%1325) /* ty=(Tensor[(13, 3, 16), bool],) */;
    %1327 = %1322.0;
    %1328 = %1326.0;
    (%1323, %1327, %1328)
  };
  %1329() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */
}

def @func_15478() -> Tensor[(5, 3, 8), float64] {
  %1330 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_14348() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %1330() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_20272() -> Tensor[(5, 3, 8), float32] {
  @func_20270() /* ty=Tensor[(5, 3, 8), float32] */
}

def @func_6633(%var_6632: Tensor[(14, 10, 9), float64]) -> Tensor[(14, 10, 9), float64] {
  %1332 = fn (%var_6622: Tensor[(14, 10, 9), float64]) -> Tensor[(14, 10, 9), float64] {
    %1331 = cast(%var_6622, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
    log(%1331) /* ty=Tensor[(14, 10, 9), float64] */
  };
  %1332(%var_6632) /* ty=Tensor[(14, 10, 9), float64] */
}

def @func_3037(%var_3036: Tensor[(13, 3, 16), float32]) -> (Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) {
  %1342 = fn (%var_3022: Tensor[(13, 3, 16), float32]) -> (Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) {
    %1333 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %1334 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1335 = %1334.0;
    %1336 = cast(%var_3022, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
    %1337 = shape_of(%1335, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1338 = cast(%1335, dtype="bool") /* ty=Tensor[(13, 3, 16), bool] */;
    %1339 = dyn.reshape(%1336, %1337, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1340 = %1333.1;
    %1341 = less(%1338, %1339) /* ty=Tensor[(13, 3, 16), bool] */;
    (%1340, %1341)
  };
  %1342(%var_3036) /* ty=(Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */
}

def @func_19830(%var_19821: Tensor[(5, 10, 4), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 10, 4), bool]) {
  %1343 = @func_8649() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1344 = @func_3816() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1345 = @func_9136() /* ty=(Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) */;
  %1346 = %1345.0;
  %1347 = cast(%var_19821, dtype="bool") /* ty=Tensor[(5, 10, 4), bool] */;
  %1348 = shape_of(%1346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1349 = cast(%1346, dtype="bool") /* ty=Tensor[(5, 10, 4), bool] */;
  %1350 = dyn.reshape(%1347, %1348, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1351 = %1343.1;
  %1352 = @func_2010() /* ty=Tensor[(5, 3, 8), float64] */;
  %1353 = %1344.0;
  %1354 = logical_or(%1349, %1350) /* ty=Tensor[(5, 10, 4), bool] */;
  (%1351, %1352, %1353, %1354)
}

def @func_8650() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1359 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
    %1355 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %1356 = @func_2131() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %1357 = %1355.0;
    %1358 = %1356.1;
    (%1357, %1358)
  };
  %1359() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_18227() -> Tensor[(5, 3, 8), float32] {
  @func_18225() /* ty=Tensor[(5, 3, 8), float32] */
}

def @func_5314() -> Tensor[(5, 3, 8), float64] {
  %1360 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1360.0
}

def @func_16106() -> Tensor[(5, 3, 8), float64] {
  @func_14348() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_11636(%var_11635: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(624), float32]) {
  %1367 = fn (%var_11627: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(624), float32]) {
    %1361 = @func_7834() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1362 = cast(%var_11627, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1363 = reshape(%1362, newshape=[624]) /* ty=Tensor[(624), float32] */;
    %1364 = @func_4171(%1363) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
    %1365 = %1361.0;
    %1366 = %1364.3;
    (%1365, %1366, %var_11627)
  };
  %1367(%var_11635) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(624), float32], Tensor[(624), float32]) */
}

def @func_7483() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
  %1379 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) {
    %1368 = @func_6177() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %1369 = cast(meta[relay.Constant][37] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
    %1370 = reshape(%1369, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
    %1371 = @func_3661(%1370) /* ty=(Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) */;
    %1372 = @func_5864() /* ty=(Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %1373 = @func_4446() /* ty=Tensor[(13, 3, 16), float32] */;
    %1374 = @func_6871() /* ty=Tensor[(5, 3, 8), float64] */;
    %1375 = %1368.0;
    %1376 = @func_7215() /* ty=Tensor[(13, 3, 16), float32] */;
    %1377 = %1371.1;
    %1378 = %1372.2;
    (%1373, %1374, %1375, %1376, %1377, meta[relay.Constant][37] /* ty=Tensor[(208), uint8] */, %1378)
  };
  %1379() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */
}

def @func_16929() -> (Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  @func_16927() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_18693() -> Tensor[(5, 3, 8), float64] {
  %1380 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_5963() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %1380() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_5104() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1384 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %1381 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1382 = %1381.0;
    %1383 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
    (%1382, %1383)
  };
  %1384() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_7010() -> Tensor[(13, 3, 16), bool] {
  %1385 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1385.2
}

def @func_7982() -> (Tensor[(5, 3, 8), float64],) {
  @func_7980() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_21702() -> (Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(208), uint8]) {
  %1386 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
  %1387 = cast(meta[relay.Constant][38] /* ty=Tensor[(208), uint8] */, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1388 = reshape(%1387, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1389 = @func_8123(%1388) /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64]) */;
  %1390 = %1386.0;
  %1391 = %1389.3;
  (%1390, %1391, meta[relay.Constant][38] /* ty=Tensor[(208), uint8] */)
}

def @func_16139() -> Tensor[(5, 3, 8), float64] {
  @func_10725() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_18345() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(208), uint8]) {
  @func_18343() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32], Tensor[(208), uint8]) */
}

def @func_21451() -> Tensor[(5, 3, 8), float64] {
  %1392 = @func_17048() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1392.0
}

def @func_12497() -> Tensor[(5, 3, 8), float64] {
  %1393 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_1956() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %1393() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_10175() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) {
  @func_10173() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_20378() -> (Tensor[(5, 3, 8), float64],) {
  @func_20376() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_3891(%var_3889: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(2, 13, 8), float32], Tensor[(2, 13, 8), uint64], Tensor[(5, 3, 8), float64]) {
  @func_3888(%var_3889) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(2, 13, 8), float32], Tensor[(2, 13, 8), uint64], Tensor[(5, 3, 8), float64]) */
}

def @func_22772(%var_22771: Tensor[(208), uint8]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %1404 = fn (%var_22748: Tensor[(208), uint8]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
    %1394 = cast(%var_22748, dtype="uint8") /* ty=Tensor[(208), uint8] */;
    %1395 = reshape(%1394, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
    %1396 = @func_16483() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */;
    %1397 = @func_11591() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) */;
    %1398 = @func_6440() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1399 = @func_6929() /* ty=Tensor[(5, 3, 8), float64] */;
    %1400 = @func_503(%1395) /* ty=Tensor[(2, 13, 8), uint8] */;
    %1401 = %1396.2;
    %1402 = %1397.0;
    %1403 = %1398.0;
    (%1399, %1400, %var_22748, %1401, %1402, %1403)
  };
  %1404(%var_22771) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_3377() -> (Tensor[(5, 3, 8), float64],) {
  @func_3375() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_22976() -> (Tensor[(5, 3, 8), float64],) {
  @func_22974() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_19165() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1405 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
  %1406 = %1405.0;
  %1407 = @func_15066() /* ty=Tensor[(5, 3, 8), float64] */;
  %1408 = @func_6897() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1406, %1407, %1408)
}

def @func_21154(%var_21148: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %1409 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1410 = @func_14115() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1411 = @func_17859() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1412 = cast(%var_21148, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1413 = reshape(%1412, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1414 = @func_1610(%1413) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1415 = %1409.0;
  %1416 = %1410.0;
  %1417 = @func_7202() /* ty=Tensor[(5, 3, 8), float64] */;
  %1418 = %1411.1;
  %1419 = @func_12698() /* ty=Tensor[(5, 3, 8), float64] */;
  %1420 = %1414.0;
  (%1415, %1416, %1417, %1418, %1419, %1420, %var_21148)
}

def @func_14988(%var_14983: Tensor[(5, 3, 8), float64]) -> Tensor[(5, 3, 8), bool] {
  %1421 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %1422 = %1421.0;
  %1423 = cast(%var_14983, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %1424 = shape_of(%1422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1425 = cast(%1422, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %1426 = dyn.reshape(%1423, %1424, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1425, %1426) /* ty=Tensor[(5, 3, 8), bool] */
}

def @func_11799() -> (Tensor[(5, 3, 8), float64],) {
  @func_11797() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_19472(%var_19470: Tensor[(208), uint8]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(208), bool], Tensor[(208), uint8]) {
  @func_19469(%var_19470) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(208), bool], Tensor[(208), uint8]) */
}

def @func_10072(%var_10070: Tensor[(7, 1), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7, 1), float64]) {
  @func_10069(%var_10070) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7, 1), float64]) */
}

def @func_5649() -> (Tensor[(5, 3, 8), float64],) {
  @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_22591() -> (Tensor[(5, 3, 8), float64],) {
  @func_22589() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_9017(%var_9016: Tensor[(1690), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), float64], Tensor[(624), float32], Tensor[(624), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(13, 3, 16), float32]) {
  %1446 = fn (%var_9002: Tensor[(1690), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), float64], Tensor[(624), float32], Tensor[(624), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(13, 3, 16), float32]) {
    %1427 = @func_5730() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
    %1428 = %1427.2;
    %1429 = cast(%1428, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
    %1430 = cast(meta[relay.Constant][39] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1431 = reshape(%1430, newshape=[624]) /* ty=Tensor[(624), float32] */;
    %1432 = @func_4171(%1431) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
    %1433 = @func_8576() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1434 = @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1435 = cast(%var_9002, dtype="float64") /* ty=Tensor[(1690), float64] */;
    %1436 = reshape(%1435, newshape=[13, 10, 13]) /* ty=Tensor[(13, 10, 13), float64] */;
    %1437 = @func_7676(%1436) /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 10, 13), float32]) */;
    %1438 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
    %1439 = @func_5314() /* ty=Tensor[(5, 3, 8), float64] */;
    %1440 = asinh(%1429) /* ty=Tensor[(2, 13, 8), float64] */;
    %1441 = %1432.3;
    %1442 = %1433.1;
    %1443 = %1434.0;
    %1444 = %1437.3;
    %1445 = %1438.1;
    (%1439, %1440, %1441, meta[relay.Constant][39] /* ty=Tensor[(624), float32] */, %1442, %1443, %1444, %var_9002, %1445)
  };
  %1446(%var_9016) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), float64], Tensor[(624), float32], Tensor[(624), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_10742() -> (Tensor[(5, 3, 8), float64],) {
  %1447 = @func_7896() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1448 = %1447.1;
  (%1448,)
}

def @func_7754() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) {
  @func_7752() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */
}

def @func_17003(%var_17001: Tensor[(88), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
  @func_17000(%var_17001) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) */
}

def @func_5731() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) {
  %1460 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) {
    %1449 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1450 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %1451 = @func_2309() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8]) */;
    %1452 = %1451.1;
    %1453 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
    %1454 = shape_of(%1452, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1455 = cast(%1452, dtype="bool") /* ty=Tensor[(2, 13, 8), bool] */;
    %1456 = dyn.reshape(%1453, %1454, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1457 = %1449.0;
    %1458 = %1450.1;
    %1459 = less(%1455, %1456) /* ty=Tensor[(2, 13, 8), bool] */;
    (%1457, %1458, %1459)
  };
  %1460() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */
}

def @func_8058() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) {
  %1461 = @func_5919() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1462 = %1461.0;
  %1463 = @func_3578() /* ty=Tensor[(13, 3, 16), float32] */;
  (%1462, %1463)
}

def @func_6951() -> Tensor[(13, 3, 16), float32] {
  %1465 = fn () -> Tensor[(13, 3, 16), float32] {
    %1464 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %1464.1
  };
  %1465() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_9892(%var_9891: Tensor[(2, 104), uint8]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), bool], Tensor[(2, 104), uint8]) {
  %1473 = fn (%var_9887: Tensor[(2, 104), uint8]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), bool], Tensor[(2, 104), uint8]) {
    %1466 = @func_3499() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1467 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1468 = cast(%var_9887, dtype="uint8") /* ty=Tensor[(2, 104), uint8] */;
    %1469 = reshape(%1468, newshape=[208]) /* ty=Tensor[(208), uint8] */;
    %1470 = %1466.0;
    %1471 = %1467.0;
    %1472 = @func_6382(%1469) /* ty=Tensor[(208), bool] */;
    (%1470, %1471, %1472, %var_9887)
  };
  %1473(%var_9891) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), bool], Tensor[(2, 104), uint8]) */
}

def @func_15802(%var_15800: float32, %var_15801: Tensor[(11, 1, 8), float32]) -> (Tensor[(11, 1, 8), float32], Tensor[(5, 3, 8), float64]) {
  @func_15798(%var_15800, %var_15801) /* ty=(Tensor[(11, 1, 8), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_5920() -> (Tensor[(5, 3, 8), float64],) {
  %1476 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %1474 = @func_3981() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), int64], Tensor[(5, 3, 8), float64]) */;
    %1475 = %1474.0;
    (%1475,)
  };
  %1476() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_6752() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32]) {
  @func_6750() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(4, 180), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_11593() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) {
  @func_11591() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) */
}

def @func_16659() -> (Tensor[(5, 3, 8), float64],) {
  %1477 = @func_7834() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1478 = %1477.0;
  (%1478,)
}

def @func_13714() -> Tensor[(13, 3, 16), float32] {
  @func_13712() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_3661(%var_3657: Tensor[(2, 13, 8), uint8]) -> (Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) {
  %1479 = @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */;
  %1480 = %1479.2;
  %1481 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %1482 = shape_of(%1480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1483 = cast(%1480, dtype="float32") /* ty=Tensor[(2, 13, 8), float32] */;
  %1484 = dyn.reshape(%1481, %1482, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1485 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1486 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1487 = @func_3375() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1488 = cast(%var_3657, dtype="uint64") /* ty=Tensor[(2, 13, 8), uint64] */;
  %1489 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1490 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 13, 8), uint8] */, dtype="uint64") /* ty=Tensor[(2, 13, 8), uint64] */;
  %1491 = dyn.reshape(%1488, %1489, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1492 = mod(%1483, %1484) /* ty=Tensor[(2, 13, 8), float32] */;
  %1493 = %1485.0;
  %1494 = %1486.0;
  %1495 = %1487.0;
  %1496 = add(%1490, %1491) /* ty=Tensor[(2, 13, 8), uint64] */;
  (%1492, %1493, %1494, %1495, %1496)
}

def @func_17860() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1500 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
    %1497 = @func_17302() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1498 = %1497.0;
    %1499 = @func_17465() /* ty=Tensor[(5, 3, 8), float64] */;
    (%1498, %1499)
  };
  %1500() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_17741(%var_17724: float32, %var_17728: Tensor[(1690), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(11, 1, 8), float32], float32, Tensor[(88), float32], Tensor[(13, 3, 16), float32], Tensor[(1690), float64]) {
  %1501 = @func_10633() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1502 = cast(%var_17724, dtype="float32") /* ty=float32 */;
  %1503 = cast(meta[relay.Constant][42] /* ty=Tensor[(88), float32] */, dtype="float32") /* ty=Tensor[(88), float32] */;
  %1504 = reshape(%1502, newshape=[]) /* ty=float32 */;
  %1505 = reshape(%1503, newshape=[11, 1, 8]) /* ty=Tensor[(11, 1, 8), float32] */;
  %1506 = @func_15798(%1504, %1505) /* ty=(Tensor[(11, 1, 8), float32], Tensor[(5, 3, 8), float64]) */;
  %1507 = cast(%var_17728, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %1508 = reshape(%1507, newshape=[1690]) /* ty=Tensor[(1690), float64] */;
  %1509 = @func_9015(%1508) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), float64], Tensor[(624), float32], Tensor[(624), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(1690), float64], Tensor[(13, 3, 16), float32]) */;
  %1510 = @func_14615() /* ty=Tensor[(13, 3, 16), float32] */;
  %1511 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
  %1512 = %1501.0;
  %1513 = %1506.0;
  %1514 = %1509.8;
  (%1510, %1511, %1512, %1513, %var_17724, meta[relay.Constant][42] /* ty=Tensor[(88), float32] */, %1514, %var_17728)
}

def @func_20512(%var_20467: Tensor[(208), bool], %var_20487: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(208), int32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
  %1515 = @func_11797() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1516 = @func_7250() /* ty=(Tensor[(208), bool],) */;
  %1517 = %1516.0;
  %1518 = cast(%var_20467, dtype="int32") /* ty=Tensor[(208), int32] */;
  %1519 = shape_of(%1517, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1520 = cast(%1517, dtype="int32") /* ty=Tensor[(208), int32] */;
  %1521 = dyn.reshape(%1518, %1519, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1522 = cast(%var_20487, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1523 = reshape(%1522, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1524 = @func_1610(%1523) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1525 = @func_13499() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1526 = @func_17465() /* ty=Tensor[(5, 3, 8), float64] */;
  %1527 = %1515.0;
  %1528 = add(%1520, %1521) /* ty=Tensor[(208), int32] */;
  %1529 = %1524.0;
  %1530 = %1525.0;
  (%1526, %1527, %1528, %1529, %var_20487, %1530)
}

def @func_8696(%var_8654: Tensor[(14, 1, 4), uint8]) -> (Tensor[(14, 14, 4), uint8], Tensor[(2, 13, 8), uint8], Tensor[(720), float64], Tensor[(14, 14, 4), bool], Tensor[(5, 3, 8), float64]) {
  %1531 = cast(%var_8654, dtype="uint8") /* ty=Tensor[(14, 1, 4), uint8] */;
  %1532 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 14, 4), uint8] */, dtype="uint8") /* ty=Tensor[(14, 14, 4), uint8] */;
  %1533 = @func_3206() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), float32]) */;
  %1534 = @func_7107() /* ty=(Tensor[(720), float64], Tensor[(208), uint8]) */;
  %1535 = cast(%var_8654, dtype="bool") /* ty=Tensor[(14, 1, 4), bool] */;
  %1536 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 14, 4), uint8] */, dtype="bool") /* ty=Tensor[(14, 14, 4), bool] */;
  %1537 = @func_7834() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1538 = subtract(%1531, %1532) /* ty=Tensor[(14, 14, 4), uint8] */;
  %1539 = %1533.1;
  %1540 = %1534.0;
  %1541 = less_equal(%1535, %1536) /* ty=Tensor[(14, 14, 4), bool] */;
  %1542 = %1537.0;
  (%1538, %1539, %1540, %1541, %1542)
}

def @func_23187() -> (Tensor[(5, 3, 8), float64],) {
  @func_23185() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_10417() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  @func_10415() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_3049() -> (Tensor[(5, 3, 8), float64],) {
  %1543 = @func_2916() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1544 = %1543.0;
  (%1544,)
}

def @func_17516() -> (Tensor[(6, 11, 4), float64],) {
  @func_17514() /* ty=(Tensor[(6, 11, 4), float64],) */
}

def @func_15760() -> Tensor[(5, 3, 8), float32] {
  %1546 = fn () -> Tensor[(5, 3, 8), float32] {
    %1545 = @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
    %1545.0
  };
  %1546() /* ty=Tensor[(5, 3, 8), float32] */
}

def @main(%var_23492: Tensor[(16, 12, 7), float64]) -> Tensor[(16, 12, 7), float64] {
  %1547 = cast(%var_23492, dtype="float64") /* ty=Tensor[(16, 12, 7), float64] */;
  atan(%1547) /* ty=Tensor[(16, 12, 7), float64] */
}

def @func_3119() -> (Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) {
  @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_3888(%var_3837: Tensor[(624), float32]) -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(624), float32], Tensor[(2, 13, 8), float32], Tensor[(2, 13, 8), uint64], Tensor[(5, 3, 8), float64]) {
  %1548 = @func_3049() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1549 = cast(%var_3837, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1550 = reshape(%1549, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1551 = @func_3035(%1550) /* ty=(Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %1552 = %1551.0;
  %1553 = cast(%1552, dtype="uint8") /* ty=Tensor[(2, 13, 8), uint8] */;
  %1554 = reshape(%1553, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1555 = @func_3661(%1554) /* ty=(Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) */;
  %1556 = %1555.0;
  %1557 = cast(%1556, dtype="uint8") /* ty=Tensor[(2, 13, 8), uint8] */;
  %1558 = reshape(%1557, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), uint8] */;
  %1559 = @func_3661(%1558) /* ty=(Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) */;
  %1560 = @func_2741() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1561 = %1548.0;
  %1562 = %1559.4;
  %1563 = %1560.0;
  (%1561, %1552, %var_3837, %1556, %1562, %1563)
}

def @func_4686() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(8, 78), float32]) {
  %1564 = @func_3375() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1565 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 78), float32] */, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
  %1566 = reshape(%1565, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1567 = @func_1610(%1566) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1568 = %1564.0;
  %1569 = %1567.0;
  (%1568, %1569, meta[relay.Constant][44] /* ty=Tensor[(8, 78), float32] */)
}

def @func_16927() -> (Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %1570 = @func_10848() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
  %1571 = @func_16517() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1572 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1573 = %1570.1;
  %1574 = %1571.1;
  %1575 = %1572.0;
  (%1573, %1574, %1575)
}

def @func_3664(%var_3662: Tensor[(2, 13, 8), uint8]) -> (Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) {
  @func_3661(%var_3662) /* ty=(Tensor[(2, 13, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint64]) */
}

def @func_16200() -> (Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  @func_16198() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */
}

def @func_20121() -> Tensor[(5, 3, 8), float64] {
  %1577 = fn () -> Tensor[(5, 3, 8), float64] {
    %1576 = @func_19632() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(6, 10, 11), float64]) */;
    %1576.0
  };
  %1577() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_15980() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  @func_15978() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_18864() -> Tensor[(5, 3, 8), float64] {
  %1578 = @func_3135() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1578.0
}

def @func_22158() -> Tensor[(13, 3, 16), float32] {
  @func_22156() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_23011() -> Tensor[(13, 3, 16), float32] {
  @func_21090() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_5058() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  %1589 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
    %1579 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
    %1580 = @func_2174() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1581 = %1580.0;
    %1582 = cast(%1581, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
    %1583 = reshape(%1582, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %1584 = @func_2541(%1583) /* ty=(Tensor[(13, 3, 16), bool],) */;
    %1585 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
    %1586 = %1579.0;
    %1587 = %1584.0;
    %1588 = %1585.0;
    (%1586, %1581, %1587, %1588)
  };
  %1589() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_7067() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %1590 = @func_6816() /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float64], Tensor[(5, 3, 8), float64]) */;
  %1591 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1592 = %1590.2;
  %1593 = %1591.0;
  %1594 = @func_7010() /* ty=Tensor[(13, 3, 16), bool] */;
  (%1592, %1593, %1594)
}

def @func_7960() -> Tensor[(5, 3, 8), float64] {
  %1595 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_1956() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %1595() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_22416() -> Tensor[(208), uint8] {
  %1596 = fn () -> Tensor[(208), uint8] {
    @func_16413() /* ty=Tensor[(208), uint8] */
  };
  %1596() /* ty=Tensor[(208), uint8] */
}

def @func_20656() -> (Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) {
  %1597 = @func_13293() /* ty=(Tensor[(8, 78), float32],) */;
  %1598 = @func_8649() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1599 = %1597.0;
  %1600 = %1598.1;
  (%1599, %1600)
}

def @func_7676(%var_7619: Tensor[(13, 10, 13), float64]) -> (Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(208), bool], Tensor[(13, 3, 16), float32], Tensor[(13, 10, 13), float32]) {
  %1601 = @func_4348() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */;
  %1602 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %1603 = %1601.1;
  %1604 = cast(%1603, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1605 = reshape(%1604, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1606 = cast(%1603, dtype="uint8") /* ty=Tensor[(208), uint8] */;
  %1607 = reshape(%1606, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1608 = @func_4733(%1607) /* ty=(Tensor[(13, 3, 16), uint8], Tensor[(2, 13, 8), uint8], Tensor[(208), uint8], Tensor[(13, 3, 16), float32]) */;
  %1609 = cast(%var_7619, dtype="float64") /* ty=Tensor[(13, 10, 13), float64] */;
  %1610 = sigmoid(%1609) /* ty=Tensor[(13, 10, 13), float64] */;
  %1611 = cast(%1610, dtype="float32") /* ty=Tensor[(13, 10, 13), float32] */;
  %1612 = %1602.2;
  %1613 = @func_6382(%1605) /* ty=Tensor[(208), bool] */;
  %1614 = %1608.3;
  %1615 = acosh(%1611) /* ty=Tensor[(13, 10, 13), float32] */;
  (%1603, %1612, %1613, %1614, %1615)
}

def @func_11680() -> Tensor[(13, 3, 16), float32] {
  @func_11678() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_14863() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) {
  %1621 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) {
    %1616 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
    %1617 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %1618 = @func_10640() /* ty=Tensor[(13, 3, 16), float32] */;
    %1619 = %1616.1;
    %1620 = %1617.0;
    (%1618, %1619, %1620)
  };
  %1621() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_16335(%var_16334: Tensor[(5, 20), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 20), float64], Tensor[(13, 3, 16), bool]) {
  %1630 = fn (%var_16322: Tensor[(5, 20), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 20), float64], Tensor[(13, 3, 16), bool]) {
    %1622 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %1623 = cast(%var_16322, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
    %1624 = reshape(%1623, newshape=[10, 10, 1]) /* ty=Tensor[(10, 10, 1), float64] */;
    %1625 = @func_15828(%1624) /* ty=(Tensor[(13, 3, 16), float64], Tensor[(10, 10, ?), bool]) */;
    %1626 = @func_10951() /* ty=(Tensor[(13, 3, 16), bool],) */;
    %1627 = %1622.1;
    %1628 = %1625.0;
    %1629 = %1626.0;
    (%1627, %1628, %var_16322, %1629)
  };
  %1630(%var_16334) /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float64], Tensor[(5, 20), float64], Tensor[(13, 3, 16), bool]) */
}

def @func_13270() -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) {
  %1635 = fn () -> (Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) {
    %1631 = @func_7559() /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(312, 2), float32]) */;
    %1632 = @func_5789() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) */;
    %1633 = %1631.1;
    %1634 = %1632.0;
    (%1633, %1634)
  };
  %1635() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(13, 3, 16), float32]) */
}

def @func_10634() -> (Tensor[(5, 3, 8), float64],) {
  %1638 = fn () -> (Tensor[(5, 3, 8), float64],) {
    %1636 = @func_4391() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1637 = %1636.0;
    (%1637,)
  };
  %1638() /* ty=(Tensor[(5, 3, 8), float64],) */
}

def @func_13024(%var_13022: Tensor[(8, 78), float32], %var_13023: Tensor[(48), float64]) -> (Tensor[(208), uint8], float32, Tensor[(48), float64], float32, Tensor[(8, 78), bool], Tensor[(8, 78), float32]) {
  %1668 = fn (%var_12980: Tensor[(8, 78), float32], %var_12999: Tensor[(48), float64]) -> (Tensor[(208), uint8], float32, Tensor[(48), float64], float32, Tensor[(8, 78), bool], Tensor[(8, 78), float32]) {
    %1639 = @func_9827() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), uint8], Tensor[(5, 3, 8), float64]) */;
    %1640 = cast(%var_12999, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1641 = cast(0.287869f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1642 = reshape(%1640, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %1643 = reshape(%1641, newshape=[]) /* ty=float32 */;
    %1644 = @func_12382(%1642, %1643) /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), float32], Tensor[(825), float32], Tensor[(48), float64], float32) */;
    %1645 = @func_9609() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */;
    %1646 = %1645.2;
    %1647 = cast(%var_12980, dtype="uint64") /* ty=Tensor[(8, 78), uint64] */;
    %1648 = shape_of(%1646, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1649 = cast(%1646, dtype="uint64") /* ty=Tensor[(8, 78), uint64] */;
    %1650 = dyn.reshape(%1647, %1648, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1651 = minimum(%1649, %1650) /* ty=Tensor[(8, 78), uint64] */;
    %1652 = cast(%1651, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
    %1653 = cos(%1652) /* ty=Tensor[(8, 78), float32] */;
    %1654 = cast(%1651, dtype="bool") /* ty=Tensor[(8, 78), bool] */;
    %1655 = shape_of(%1653, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1656 = cast(%1653, dtype="bool") /* ty=Tensor[(8, 78), bool] */;
    %1657 = dyn.reshape(%1654, %1655, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1658 = less_equal(%1656, %1657) /* ty=Tensor[(8, 78), bool] */;
    %1659 = cast(%1653, dtype="bool") /* ty=Tensor[(8, 78), bool] */;
    %1660 = shape_of(%1658, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1661 = cast(%1658, dtype="bool") /* ty=Tensor[(8, 78), bool] */;
    %1662 = dyn.reshape(%1659, %1660, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1663 = cast(%1658, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
    %1664 = %1639.1;
    %1665 = %1644.4;
    %1666 = less(%1661, %1662) /* ty=Tensor[(8, 78), bool] */;
    %1667 = exp(%1663) /* ty=Tensor[(8, 78), float32] */;
    (%1664, %1665, %var_12999, 0.287869f /* ty=float32 */, %1666, %1667)
  };
  %1668(%var_13022, %var_13023) /* ty=(Tensor[(208), uint8], float32, Tensor[(48), float64], float32, Tensor[(8, 78), bool], Tensor[(8, 78), float32]) */
}

def @func_4959() -> (Tensor[(13, 3, 16), float32], Tensor[(8, 2, 3), int32], Tensor[(48), float64]) {
  %1669 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1670 = cast(meta[relay.Constant][45] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1671 = cast(meta[relay.Constant][45] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1672 = reshape(%1670, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %1673 = reshape(%1671, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %1674 = @func_1821(%1672, %1673) /* ty=(Tensor[(8, 2, 3), int32],) */;
  %1675 = %1669.1;
  %1676 = %1674.0;
  (%1675, %1676, meta[relay.Constant][45] /* ty=Tensor[(48), float64] */)
}

def @func_10727() -> Tensor[(5, 3, 8), float64] {
  @func_10725() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_16415() -> Tensor[(208), uint8] {
  @func_16413() /* ty=Tensor[(208), uint8] */
}

def @func_23163() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float64], Tensor[(720), float64]) {
  @func_23161() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float64], Tensor[(720), float64]) */
}

def @func_2946() -> (Tensor[(13, 3, 16), float32],) {
  %1679 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %1677 = @func_1973() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(720), float64]) */;
    %1678 = %1677.1;
    (%1678,)
  };
  %1679() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_17465() -> Tensor[(5, 3, 8), float64] {
  %1680 = @func_11424() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1680.0
}

def @func_11789() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  @func_11787() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_21006(%var_21004: Tensor[(3, 1, 10), uint32], %var_21005: Tensor[(3, 1, 10), uint32]) -> (Tensor[(3, ?, 10), float64], Tensor[(13, 3, 16), float32]) {
  %1693 = fn (%var_20974: Tensor[(3, 1, 10), uint32], %var_20975: Tensor[(3, 1, 10), uint32]) -> (Tensor[(3, ?, 10), float64], Tensor[(13, 3, 16), float32]) {
    %1681 = cast(%var_20975, dtype="bool") /* ty=Tensor[(3, 1, 10), bool] */;
    %1682 = shape_of(%var_20974, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1683 = cast(%var_20974, dtype="bool") /* ty=Tensor[(3, 1, 10), bool] */;
    %1684 = dyn.reshape(%1681, %1682, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1685 = greater(%1683, %1684) /* ty=Tensor[(3, ?, 10), bool] */;
    %1686 = cast(%var_20975, dtype="float64") /* ty=Tensor[(3, 1, 10), float64] */;
    %1687 = shape_of(%1685, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1688 = cast(%1685, dtype="float64") /* ty=Tensor[(3, ?, 10), float64] */;
    %1689 = dyn.reshape(%1686, %1687, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1690 = @func_16517() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %1691 = floor_mod(%1688, %1689) /* ty=Tensor[(3, ?, 10), float64] */;
    %1692 = %1690.0;
    (%1691, %1692)
  };
  %1693(%var_21004, %var_21005) /* ty=(Tensor[(3, ?, 10), float64], Tensor[(13, 3, 16), float32]) */
}

def @func_3499() -> (Tensor[(5, 3, 8), float64],) {
  %1694 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1695 = %1694.3;
  (%1695,)
}

def @func_5316() -> Tensor[(5, 3, 8), float64] {
  @func_5314() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_6656(%var_6651: Tensor[(1260), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(14, 10, 9), float64], Tensor[(1260), float64]) {
  %1696 = cast(%var_6651, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1697 = reshape(%1696, newshape=[14, 10, 9]) /* ty=Tensor[(14, 10, 9), float64] */;
  %1698 = @func_2884() /* ty=Tensor[(5, 3, 8), float64] */;
  %1699 = @func_6631(%1697) /* ty=Tensor[(14, 10, 9), float64] */;
  (%1698, %1699, %var_6651)
}

def @func_9137() -> (Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) {
  %1706 = fn () -> (Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) {
    %1700 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
    %1701 = %1700.0;
    %1702 = cast(%1701, dtype="float64") /* ty=Tensor[(5, 10, 4), float64] */;
    %1703 = @func_4624() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %1704 = log10(%1702) /* ty=Tensor[(5, 10, 4), float64] */;
    %1705 = %1703.0;
    (%1704, %1705)
  };
  %1706() /* ty=(Tensor[(5, 10, 4), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_12259() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1707 = @func_11437() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1708 = %1707.0;
  %1709 = @func_9258() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1708, %1709)
}

def @func_5964() -> Tensor[(5, 3, 8), float64] {
  %1711 = fn () -> Tensor[(5, 3, 8), float64] {
    %1710 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1710.1
  };
  %1711() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_15702() -> Tensor[(5, 3, 8), float64] {
  @func_15700() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_16485() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  @func_16483() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */
}

def @func_17977(%var_17959: Tensor[(270, 2), float64]) -> (Tensor[(5, 3, 8), float64], Tensor[(6, 6, 15), float32], Tensor[(270, 2), float64], Tensor[(13, 3, 16), bool], Tensor[(5, 10, 4), int64]) {
  %1712 = @func_6620() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1713 = cast(%var_17959, dtype="float64") /* ty=Tensor[(270, 2), float64] */;
  %1714 = reshape(%1713, newshape=[6, 6, 15]) /* ty=Tensor[(6, 6, 15), float64] */;
  %1715 = @func_8558(%1714) /* ty=(Tensor[(6, 6, 15), float32],) */;
  %1716 = @func_8753() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8], Tensor[(13, 3, 16), bool]) */;
  %1717 = @func_9093() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */;
  %1718 = %1712.0;
  %1719 = %1715.0;
  %1720 = %1716.3;
  %1721 = %1717.0;
  (%1718, %1719, %var_17959, %1720, %1721)
}

def @func_8125(%var_8124: Tensor[(208), uint8]) -> (Tensor[(208), uint32], Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64]) {
  %1736 = fn (%var_8099: Tensor[(208), uint8]) -> (Tensor[(208), uint32], Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64]) {
    %1722 = @func_5172() /* ty=(Tensor[(208), bool], Tensor[(208), uint32], Tensor[(13, 3, 16), bool], Tensor[(208), uint8]) */;
    %1723 = %1722.3;
    %1724 = cast(%var_8099, dtype="uint32") /* ty=Tensor[(208), uint32] */;
    %1725 = shape_of(%1723, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1726 = cast(%1723, dtype="uint32") /* ty=Tensor[(208), uint32] */;
    %1727 = dyn.reshape(%1724, %1725, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %1728 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %1729 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
    %1730 = @func_4879() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) */;
    %1731 = subtract(%1726, %1727) /* ty=Tensor[(208), uint32] */;
    %1732 = %1728.0;
    %1733 = %1729.1;
    %1734 = @func_7229() /* ty=Tensor[(1, 7, 1), float64] */;
    %1735 = %1730.1;
    (%1731, %1732, %1733, %1734, %1735)
  };
  %1736(%var_8124) /* ty=(Tensor[(208), uint32], Tensor[(13, 3, 16), float32], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64], Tensor[(1, 7, 1), float64]) */
}

def @func_16090() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  @func_16088() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_16747() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  @func_16745() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) */
}

def @func_20697() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64]) {
  @func_20695() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(720), float64]) */
}

def @func_13622() -> (Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) {
  @func_13620() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */
}

def @func_4625() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1743 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
    %1737 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1738 = @func_2099() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %1739 = @func_3538() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(2, 13, 8), uint8]) */;
    %1740 = %1737.1;
    %1741 = %1738.2;
    %1742 = %1739.0;
    (%1740, %1741, %1742)
  };
  %1743() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_1825(%var_1823: Tensor[(8, 2, 3), float64], %var_1824: Tensor[(8, 2, 3), float64]) -> (Tensor[(8, 2, 3), int32],) {
  @func_1821(%var_1823, %var_1824) /* ty=(Tensor[(8, 2, 3), int32],) */
}

def @func_9034() -> Tensor[(13, 3, 16), float32] {
  %1744 = @func_7896() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
  %1744.0
}

def @func_3938() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_2916() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1745 = @func_2201() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1746 = %1745.0;
  %1747 = @func_2884() /* ty=Tensor[(5, 3, 8), float64] */;
  %1748 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1746, %1747, %1748)
}

def @func_18994() -> (Tensor[(5, 3, 8), float64], Tensor[(720), float64], Tensor[(5, 3, 8), int8]) {
  @func_18992() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(720), float64], Tensor[(5, 3, 8), int8]) */
}

def @func_17239() -> (Tensor[(5, 3, 8), float64],) {
  %1749 = @func_17048() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1750 = %1749.1;
  (%1750,)
}

def @func_21441() -> (Tensor[(5, 3, 8), float64], Tensor[(15, 16, 12), float64]) {
  %1754 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(15, 16, 12), float64]) {
    %1751 = @func_11893() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1752 = %1751.0;
    %1753 = @func_20407() /* ty=Tensor[(15, 16, 12), float64] */;
    (%1752, %1753)
  };
  %1754() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(15, 16, 12), float64]) */
}

def @func_4272() -> Tensor[(5, 3, 8), float64] {
  @func_4270() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_5789() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float32]) {
  %1755 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1756 = @func_4360() /* ty=Tensor[(5, 3, 8), float64] */;
  %1757 = cast(%1756, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %1758 = %1755.1;
  %1759 = cos(%1757) /* ty=Tensor[(5, 3, 8), float32] */;
  (%1758, %1759)
}

def @func_9747() -> (Tensor[(13, 3, 16), float32], Tensor[(208), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1760 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1761 = @func_7559() /* ty=(Tensor[(208), uint8], Tensor[(13, 3, 16), bool], Tensor[(312, 2), float32]) */;
  %1762 = %1761.0;
  %1763 = cast(%1762, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1764 = @func_8576() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1765 = %1760.1;
  %1766 = cast(%1765, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %1767 = reshape(%1766, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1768 = @func_4171(%1767) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */;
  %1769 = acos(%1763) /* ty=Tensor[(208), float64] */;
  %1770 = %1764.0;
  %1771 = %1768.1;
  (%1765, %1769, %1770, %1771)
}

def @func_9151() -> (Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) {
  @func_9149() /* ty=(Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_12534() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  @func_12532() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) */
}

def @func_12532() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %1772 = cast(meta[relay.Constant][46] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1773 = reshape(%1772, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %1774 = @func_1610(%1773) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %1775 = @func_11693() /* ty=Tensor[(5, 3, 8), float64] */;
  %1776 = @func_10725() /* ty=Tensor[(5, 3, 8), float64] */;
  %1777 = %1774.0;
  (%1775, %1776, %1777, meta[relay.Constant][46] /* ty=Tensor[(624), float32] */)
}

def @func_20587() -> Tensor[(5, 3, 8), float64] {
  %1778 = fn () -> Tensor[(5, 3, 8), float64] {
    @func_9258() /* ty=Tensor[(5, 3, 8), float64] */
  };
  %1778() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_10641() -> Tensor[(13, 3, 16), float32] {
  %1780 = fn () -> Tensor[(13, 3, 16), float32] {
    %1779 = @func_7242() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %1779.1
  };
  %1780() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_17800() -> Tensor[(13, 3, 16), bool] {
  @func_17798() /* ty=Tensor[(13, 3, 16), bool] */
}

def @func_17050() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  @func_17048() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_20047() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1781 = @func_11893() /* ty=(Tensor[(5, 3, 8), float64],) */;
  %1782 = @func_19582() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1783 = %1781.0;
  %1784 = %1782.1;
  (%1783, %1784)
}

def @func_9231() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32]) {
  %1785 = cast(meta[relay.Constant][47] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1786 = reshape(%1785, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1787 = @func_4123(%1786) /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
  %1788 = @func_6929() /* ty=Tensor[(5, 3, 8), float64] */;
  %1789 = @func_5963() /* ty=Tensor[(5, 3, 8), float64] */;
  %1790 = %1787.2;
  (%1788, %1789, %1790, meta[relay.Constant][47] /* ty=Tensor[(624), float32] */)
}

def @func_8577() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
  %1794 = fn () -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) {
    %1791 = @func_5591() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
    %1792 = %1791.0;
    %1793 = @func_6871() /* ty=Tensor[(5, 3, 8), float64] */;
    (%1792, %1793)
  };
  %1794() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */
}

def @func_9963(%var_9932: Tensor[(104, 2), uint8]) -> (Tensor[(13, 3, 16), float32], Tensor[(104, 2), float32]) {
  %1795 = @func_9609() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64], Tensor[(8, 78), float32], Tensor[(13, 3, 16), float32]) */;
  %1796 = %1795.0;
  %1797 = cast(%1796, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %1798 = cast(%var_9932, dtype="uint8") /* ty=Tensor[(104, 2), uint8] */;
  %1799 = reshape(%1798, newshape=[208]) /* ty=Tensor[(208), uint8] */;
  %1800 = @func_6382(%1799) /* ty=Tensor[(208), bool] */;
  %1801 = cast(%1800, dtype="float32") /* ty=Tensor[(208), float32] */;
  %1802 = shape_of(%var_9932, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1803 = cast(%var_9932, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %1804 = dyn.reshape(%1801, %1802, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1805 = exp(%1797) /* ty=Tensor[(13, 3, 16), float32] */;
  %1806 = floor_mod(%1803, %1804) /* ty=Tensor[(104, 2), float32] */;
  (%1805, %1806)
}

def @func_13091() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  @func_13089() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_7243() -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
  %1811 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) {
    %1807 = @func_3936() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */;
    %1808 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1809 = %1807.1;
    %1810 = %1808.0;
    (%1809, %1810)
  };
  %1811() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32]) */
}

def @func_7980() -> (Tensor[(5, 3, 8), float64],) {
  %1812 = @func_6929() /* ty=Tensor[(5, 3, 8), float64] */;
  (%1812,)
}

def @func_22336() -> (Tensor[(13, 3, 16), float32],) {
  %1815 = fn () -> (Tensor[(13, 3, 16), float32],) {
    %1813 = @func_17108() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %1814 = %1813.1;
    (%1814,)
  };
  %1815() /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_7203() -> Tensor[(5, 3, 8), float64] {
  %1817 = fn () -> Tensor[(5, 3, 8), float64] {
    %1816 = @func_5647() /* ty=(Tensor[(5, 3, 8), float64],) */;
    %1816.0
  };
  %1817() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_10559() -> Tensor[(5, 3, 8), float64] {
  %1818 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %1818.0
}

def @func_12225() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  @func_12223() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_20837() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  %1819 = @func_19582() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64]) */;
  %1820 = %1819.1;
  %1821 = @func_20175() /* ty=Tensor[(13, 3, 16), bool] */;
  (%1820, %1821)
}

def @func_1612(%var_1611: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), float32],) {
  %1824 = fn (%var_1584: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), float32],) {
    %1822 = cast(%var_1584, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
    %1823 = rsqrt(%1822) /* ty=Tensor[(13, 3, 16), float32] */;
    (%1823,)
  };
  %1824(%var_1611) /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_9094() -> (Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) {
  %1831 = fn () -> (Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) {
    %1825 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 10, 4), int64] */, dtype="int64") /* ty=Tensor[(5, 10, 4), int64] */;
    %1826 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(5, 10, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1827 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 10, 4), int64] */, dtype="int64") /* ty=Tensor[(5, 10, 4), int64] */;
    %1828 = dyn.reshape(%1825, %1826, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1829 = add(%1827, %1828) /* ty=Tensor[(5, 10, 4), int64] */;
    %1830 = @func_7802() /* ty=Tensor[(5, 3, 8), float32] */;
    (%1829, %1830)
  };
  %1831() /* ty=(Tensor[(5, 10, 4), int64], Tensor[(5, 3, 8), float32]) */
}

def @func_11071() -> (Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
  %1835 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) {
    %1832 = @func_2945() /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1833 = %1832.0;
    %1834 = @func_6702() /* ty=Tensor[(208), uint8] */;
    (%1833, %1834)
  };
  %1835() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(208), uint8]) */
}

def @func_12469() -> Tensor[(5, 3, 8), float64] {
  @func_5963() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_21575() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  @func_21573() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_17000(%var_16990: Tensor[(88), float64]) -> (Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(88), float64], Tensor[(720), float64]) {
  %1836 = cast(%var_16990, dtype="float64") /* ty=Tensor[(88), float64] */;
  %1837 = cast(meta[relay.Constant][50] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1838 = reshape(%1836, newshape=[1, 11, 8]) /* ty=Tensor[(1, 11, 8), float64] */;
  %1839 = reshape(%1837, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1840 = @func_4514(%1838, %1839) /* ty=(Tensor[(?, 11, 8), bool], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(720), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), uint8]) */;
  %1841 = @func_11476() /* ty=Tensor[(13, 3, 16), float32] */;
  %1842 = %1840.4;
  (%1841, %1842, %var_16990, meta[relay.Constant][50] /* ty=Tensor[(720), float64] */)
}

def @func_16382() -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
  %1847 = fn () -> (Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) {
    %1843 = @func_10338() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */;
    %1844 = @func_5057() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool], Tensor[(5, 3, 8), float64]) */;
    %1845 = %1843.0;
    %1846 = %1844.3;
    (%1845, %1846)
  };
  %1847() /* ty=(Tensor[(13, 3, 16), float32], Tensor[(5, 3, 8), float64]) */
}

def @func_7752() -> (Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) {
  %1848 = @func_7067() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */;
  %1849 = @func_5730() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(2, 13, 8), bool]) */;
  %1850 = %1848.0;
  %1851 = @func_6950() /* ty=Tensor[(13, 3, 16), float32] */;
  %1852 = %1849.2;
  (%1850, %1851, %1852)
}

def @func_7353() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) {
  @func_7351() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), bool]) */
}

def @func_16546() -> (Tensor[(5, 3, 8), float64], Tensor[(208), bool], Tensor[(1690), float64]) {
  @func_16544() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(208), bool], Tensor[(1690), float64]) */
}

def @func_3580() -> Tensor[(13, 3, 16), float32] {
  @func_3578() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_2012() -> Tensor[(5, 3, 8), float64] {
  @func_2010() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_4879() -> (Tensor[(5, 3, 8), float64], Tensor[(1, 7, 1), float64], Tensor[(7), float64]) {
  %1853 = cast(meta[relay.Constant][51] /* ty=Tensor[(7), float64] */, dtype="float64") /* ty=Tensor[(7), float64] */;
  %1854 = reshape(%1853, newshape=[1, 7, 1]) /* ty=Tensor[(1, 7, 1), float64] */;
  %1855 = @func_2458(%1854) /* ty=(Tensor[(1, 7, 1), float64],) */;
  %1856 = @func_1956() /* ty=Tensor[(5, 3, 8), float64] */;
  %1857 = %1855.0;
  (%1856, %1857, meta[relay.Constant][51] /* ty=Tensor[(7), float64] */)
}

def @func_6899() -> Tensor[(5, 3, 8), float64] {
  @func_6897() /* ty=Tensor[(5, 3, 8), float64] */
}

def @func_16745() -> (Tensor[(5, 3, 8), float64], Tensor[(5, 3, 8), float32]) {
  %1858 = @func_6107() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
  %1859 = @func_3117() /* ty=(Tensor[(5, 3, 8), float32], Tensor[(13, 3, 16), float32]) */;
  %1860 = %1858.0;
  %1861 = %1859.0;
  (%1860, %1861)
}

def @func_10605() -> Tensor[(13, 3, 16), float32] {
  %1863 = fn () -> Tensor[(13, 3, 16), float32] {
    %1862 = @func_8058() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32]) */;
    %1862.1
  };
  %1863() /* ty=Tensor[(13, 3, 16), float32] */
}

def @func_20345(%var_20343: Tensor[(9, 14, 12), int64], %var_20344: Tensor[(9, 14, 12), int64]) -> Tensor[(9, 14, 12), int64] {
  @func_20341(%var_20343, %var_20344) /* ty=Tensor[(9, 14, 12), int64] */
}

def @func_17798() -> Tensor[(13, 3, 16), bool] {
  %1864 = @func_2822() /* ty=(Tensor[(5, 3, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(13, 3, 16), bool]) */;
  %1864.2
}

def @func_1778(%var_1777: Tensor[(6, 15, 8), float64]) -> (Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
  %1875 = fn (%var_1747: Tensor[(6, 15, 8), float64]) -> (Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) {
    %1865 = cast(%var_1747, dtype="float64") /* ty=Tensor[(6, 15, 8), float64] */;
    %1866 = cast(meta[relay.Constant][52] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1867 = reshape(%1866, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %1868 = @func_1610(%1867) /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1869 = cast(meta[relay.Constant][52] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1870 = reshape(%1869, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %1871 = @func_1610(%1870) /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1872 = sinh(%1865) /* ty=Tensor[(6, 15, 8), float64] */;
    %1873 = %1868.0;
    %1874 = %1871.0;
    (%1872, %1873, meta[relay.Constant][52] /* ty=Tensor[(624), float32] */, %1874)
  };
  %1875(%var_1777) /* ty=(Tensor[(6, 15, 8), float64], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(13, 3, 16), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen892/build/output.py:7266: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen892/build/output.py", line 7271, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_atan_kernel0(double* __restrict__ T_atan, double* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1344) {
    T_atan[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = atan(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_140 = relay.const([[[8,-6,-9,-7,7,-10,-3,-10,4,-10,4,-6,10,-7,8,2],[9,8,-6,4,-1,4,9,-4,1,-5,1,-4,-7,-5,-8,-2],[-4,-5,-9,6,3,3,-5,4,2,10,5,4,7,-7,-6,-4],[-3,-3,-7,-2,8,-4,-4,-8,10,-2,4,-6,-5,7,-4,-4],[-9,-1,3,-9,-1,-5,-3,-1,-10,7,9,6,8,7,-4,1],[5,10,-7,10,-3,-3,9,9,-7,5,2,1,-5,-6,-9,-2],[10,4,-2,5,1,-10,-2,-10,-7,-6,-6,-1,-7,-10,3,-3],[-6,10,3,-3,-3,-5,-4,-3,-1,10,-8,-10,7,3,4,4],[-3,9,-2,-10,-7,-2,-3,-2,6,2,4,-10,2,2,9,7],[4,6,8,3,-3,6,9,-10,1,-10,-4,7,-4,-1,9,-5],[-3,9,8,-7,-6,-9,-5,10,3,-1,2,2,-9,1,2,-10],[-6,8,-10,9,2,-3,-8,-10,-2,-5,-1,2,-3,-9,-8,2],[8,10,-5,-6,-8,1,-1,-7,6,-9,1,8,-4,-1,-7,-6]]], dtype = "uint16")#candidate|140|(1, 13, 16)|const|uint16
var_141 = relay.var("var_141", dtype = "uint16", shape = (4, 13, 16))#candidate|141|(4, 13, 16)|var|uint16
bop_142 = relay.not_equal(const_140.astype('bool'), var_141.astype('bool')) # shape=(4, 13, 16)
output = bop_142
output2 = bop_142
func_146 = relay.Function([var_141,], output)
mod['func_146'] = func_146
mod = relay.transform.InferType()(mod)
mutated_mod['func_146'] = func_146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_147 = relay.var("var_147", dtype = "uint16", shape = (4, 13, 16))#candidate|147|(4, 13, 16)|var|uint16
func_146_call = mutated_mod.get_global_var('func_146')
call_148 = func_146_call(var_147)
output = call_148
func_149 = relay.Function([var_147], output)
mutated_mod['func_149'] = func_149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_281 = relay.var("var_281", dtype = "float32", shape = (6, 15, 13))#candidate|281|(6, 15, 13)|var|float32
uop_282 = relay.tan(var_281.astype('float32')) # shape=(6, 15, 13)
output = uop_282
output2 = uop_282
func_310 = relay.Function([var_281,], output)
mod['func_310'] = func_310
mod = relay.transform.InferType()(mod)
var_311 = relay.var("var_311", dtype = "float32", shape = (6, 15, 13))#candidate|311|(6, 15, 13)|var|float32
output = func_310(var_311)
func_312 = relay.Function([var_311], output)
mutated_mod['func_312'] = func_312
mutated_mod = relay.transform.InferType()(mutated_mod)
const_314 = relay.const([[[-8.473688,6.626372,-7.927410,7.090163,-9.998922,-8.810589,9.221107,-6.646629,9.522798,2.079760],[9.388419,-7.838677,-2.445659,4.586174,-8.240056,5.235669,-1.913534,-3.988754,-7.375478,8.278765],[-3.009355,3.876208,5.133532,2.116083,3.483197,6.154645,-3.339920,-6.801899,7.817189,3.541592],[-0.506658,3.709344,-6.855724,-4.279034,8.025098,2.429555,4.195095,9.275564,8.943981,8.631349],[5.110995,8.716543,-3.287569,-0.531521,-6.677816,2.723332,-9.748258,5.087716,-9.575070,-8.547334],[0.084315,9.691789,-1.579156,-8.208341,-2.080134,-4.034090,-5.164067,0.871731,9.062968,6.255404],[-1.456127,-8.154824,6.121640,6.256268,4.534873,5.353819,1.635297,2.028643,2.102409,4.838318],[-7.503930,9.135386,-7.031237,9.099032,8.146759,0.591728,-0.811135,-0.571906,3.206286,5.727089],[9.384069,3.423221,-5.485853,-7.398620,-7.869551,5.952694,9.873677,-3.650622,6.398232,8.593918]],[[-5.471902,-8.204303,0.590568,-3.251565,-0.494397,6.988498,-3.895033,6.324990,-5.163128,-0.416491],[3.670236,9.138739,-3.971804,-3.422130,8.584737,-0.837659,-2.952783,-4.868186,-9.912820,-1.456723],[3.313938,-4.759095,8.011368,-7.951065,-0.013843,-3.852709,-9.141934,-2.758482,9.235771,-9.817203],[3.180970,-7.254943,-1.131034,8.316479,5.758600,5.712177,8.616554,-1.672706,1.632102,-7.479943],[6.054185,-7.309383,-3.972015,6.906439,9.828080,0.335673,-8.018191,2.710558,-9.265195,5.197331],[-3.051602,-9.507385,3.566379,-0.580757,1.796208,-3.304512,-3.279491,-1.009399,1.904540,-9.287463],[-9.326050,7.927682,-9.509120,9.751930,4.007586,-1.605633,4.468873,-8.090930,-4.320117,-4.349769],[0.255669,-9.976643,3.204464,7.144837,-0.892055,6.895392,0.060808,-4.270222,6.313252,-6.876345],[-7.655021,5.120407,-7.638381,-6.131553,-3.271927,-4.481023,1.684129,0.682447,-8.092733,-6.161153]]], dtype = "float64")#candidate|314|(2, 9, 10)|const|float64
uop_315 = relay.sqrt(const_314.astype('float64')) # shape=(2, 9, 10)
func_310_call = mod.get_global_var('func_310')
func_312_call = mutated_mod.get_global_var('func_312')
var_318 = relay.var("var_318", dtype = "float32", shape = (1170,))#candidate|318|(1170,)|var|float32
call_317 = func_310_call(relay.reshape(var_318.astype('float32'), [6, 15, 13]))
call_319 = func_310_call(relay.reshape(var_318.astype('float32'), [6, 15, 13]))
uop_321 = relay.log(uop_315.astype('float32')) # shape=(2, 9, 10)
output = relay.Tuple([call_317,var_318,uop_321,])
output2 = relay.Tuple([call_319,var_318,uop_321,])
func_325 = relay.Function([var_318,], output)
mod['func_325'] = func_325
mod = relay.transform.InferType()(mod)
mutated_mod['func_325'] = func_325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_326 = relay.var("var_326", dtype = "float32", shape = (1170,))#candidate|326|(1170,)|var|float32
func_325_call = mutated_mod.get_global_var('func_325')
call_327 = func_325_call(var_326)
output = call_327
func_328 = relay.Function([var_326], output)
mutated_mod['func_328'] = func_328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_397 = relay.var("var_397", dtype = "float32", shape = ())#candidate|397|()|var|float32
var_398 = relay.var("var_398", dtype = "float32", shape = (6, 6, 3))#candidate|398|(6, 6, 3)|var|float32
bop_399 = relay.minimum(var_397.astype('float32'), var_398.astype('float32')) # shape=(6, 6, 3)
func_310_call = mod.get_global_var('func_310')
func_312_call = mutated_mod.get_global_var('func_312')
var_410 = relay.var("var_410", dtype = "float32", shape = (390, 3))#candidate|410|(390, 3)|var|float32
call_409 = func_310_call(relay.reshape(var_410.astype('float32'), [6, 15, 13]))
call_411 = func_310_call(relay.reshape(var_410.astype('float32'), [6, 15, 13]))
func_310_call = mod.get_global_var('func_310')
func_312_call = mutated_mod.get_global_var('func_312')
call_425 = func_310_call(relay.reshape(call_409.astype('float32'), [6, 15, 13]))
call_426 = func_310_call(relay.reshape(call_409.astype('float32'), [6, 15, 13]))
func_325_call = mod.get_global_var('func_325')
func_328_call = mutated_mod.get_global_var('func_328')
call_433 = relay.TupleGetItem(func_325_call(relay.reshape(call_425.astype('float32'), [1170,])), 2)
call_434 = relay.TupleGetItem(func_328_call(relay.reshape(call_425.astype('float32'), [1170,])), 2)
func_146_call = mod.get_global_var('func_146')
func_149_call = mutated_mod.get_global_var('func_149')
var_436 = relay.var("var_436", dtype = "uint16", shape = (832,))#candidate|436|(832,)|var|uint16
call_435 = func_146_call(relay.reshape(var_436.astype('uint16'), [4, 13, 16]))
call_437 = func_146_call(relay.reshape(var_436.astype('uint16'), [4, 13, 16]))
bop_448 = relay.less(call_433.astype('bool'), var_397.astype('bool')) # shape=(2, 9, 10)
bop_451 = relay.less(call_434.astype('bool'), var_397.astype('bool')) # shape=(2, 9, 10)
bop_457 = relay.maximum(var_397.astype('uint32'), call_435.astype('uint32')) # shape=(4, 13, 16)
bop_460 = relay.maximum(var_397.astype('uint32'), call_437.astype('uint32')) # shape=(4, 13, 16)
output = relay.Tuple([bop_399,call_409,var_410,call_425,var_436,bop_448,bop_457,])
output2 = relay.Tuple([bop_399,call_411,var_410,call_426,var_436,bop_451,bop_460,])
func_494 = relay.Function([var_397,var_398,var_410,var_436,], output)
mod['func_494'] = func_494
mod = relay.transform.InferType()(mod)
mutated_mod['func_494'] = func_494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_494_call = mutated_mod.get_global_var('func_494')
var_496 = relay.var("var_496", dtype = "float32", shape = ())#candidate|496|()|var|float32
var_497 = relay.var("var_497", dtype = "float32", shape = (6, 6, 3))#candidate|497|(6, 6, 3)|var|float32
var_498 = relay.var("var_498", dtype = "float32", shape = (390, 3))#candidate|498|(390, 3)|var|float32
var_499 = relay.var("var_499", dtype = "uint16", shape = (832,))#candidate|499|(832,)|var|uint16
call_495 = func_494_call(var_496,var_497,var_498,var_499,)
output = call_495
func_500 = relay.Function([var_496,var_497,var_498,var_499,], output)
mutated_mod['func_500'] = func_500
mutated_mod = relay.transform.InferType()(mutated_mod)
var_605 = relay.var("var_605", dtype = "float64", shape = (13, 8, 1))#candidate|605|(13, 8, 1)|var|float64
uop_606 = relay.asin(var_605.astype('float64')) # shape=(13, 8, 1)
output = uop_606
output2 = uop_606
func_614 = relay.Function([var_605,], output)
mod['func_614'] = func_614
mod = relay.transform.InferType()(mod)
var_615 = relay.var("var_615", dtype = "float64", shape = (13, 8, 1))#candidate|615|(13, 8, 1)|var|float64
output = func_614(var_615)
func_616 = relay.Function([var_615], output)
mutated_mod['func_616'] = func_616
mutated_mod = relay.transform.InferType()(mutated_mod)
var_631 = relay.var("var_631", dtype = "uint16", shape = (6, 11, 7))#candidate|631|(6, 11, 7)|var|uint16
var_632 = relay.var("var_632", dtype = "uint16", shape = (6, 11, 7))#candidate|632|(6, 11, 7)|var|uint16
bop_633 = relay.bitwise_xor(var_631.astype('uint16'), relay.reshape(var_632.astype('uint16'), relay.shape_of(var_631))) # shape=(6, 11, 7)
func_325_call = mod.get_global_var('func_325')
func_328_call = mutated_mod.get_global_var('func_328')
var_642 = relay.var("var_642", dtype = "float32", shape = (1170, 1))#candidate|642|(1170, 1)|var|float32
call_641 = relay.TupleGetItem(func_325_call(relay.reshape(var_642.astype('float32'), [1170,])), 2)
call_643 = relay.TupleGetItem(func_328_call(relay.reshape(var_642.astype('float32'), [1170,])), 2)
output = relay.Tuple([bop_633,call_641,var_642,])
output2 = relay.Tuple([bop_633,call_643,var_642,])
func_653 = relay.Function([var_631,var_632,var_642,], output)
mod['func_653'] = func_653
mod = relay.transform.InferType()(mod)
var_654 = relay.var("var_654", dtype = "uint16", shape = (6, 11, 7))#candidate|654|(6, 11, 7)|var|uint16
var_655 = relay.var("var_655", dtype = "uint16", shape = (6, 11, 7))#candidate|655|(6, 11, 7)|var|uint16
var_656 = relay.var("var_656", dtype = "float32", shape = (1170, 1))#candidate|656|(1170, 1)|var|float32
output = func_653(var_654,var_655,var_656,)
func_657 = relay.Function([var_654,var_655,var_656,], output)
mutated_mod['func_657'] = func_657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_669 = relay.var("var_669", dtype = "float64", shape = (9, 3, 1))#candidate|669|(9, 3, 1)|var|float64
uop_670 = relay.rsqrt(var_669.astype('float64')) # shape=(9, 3, 1)
uop_685 = relay.cosh(uop_670.astype('float64')) # shape=(9, 3, 1)
bop_689 = relay.logical_or(uop_685.astype('bool'), relay.reshape(uop_670.astype('bool'), relay.shape_of(uop_685))) # shape=(9, 3, 1)
output = bop_689
output2 = bop_689
func_693 = relay.Function([var_669,], output)
mod['func_693'] = func_693
mod = relay.transform.InferType()(mod)
mutated_mod['func_693'] = func_693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_694 = relay.var("var_694", dtype = "float64", shape = (9, 3, 1))#candidate|694|(9, 3, 1)|var|float64
func_693_call = mutated_mod.get_global_var('func_693')
call_695 = func_693_call(var_694)
output = call_695
func_696 = relay.Function([var_694], output)
mutated_mod['func_696'] = func_696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1069 = relay.var("var_1069", dtype = "float64", shape = (5, 11, 1))#candidate|1069|(5, 11, 1)|var|float64
uop_1070 = relay.acosh(var_1069.astype('float64')) # shape=(5, 11, 1)
func_494_call = mod.get_global_var('func_494')
func_500_call = mutated_mod.get_global_var('func_500')
const_1108 = relay.const(-0.178906, dtype = "float32")#candidate|1108|()|const|float32
var_1109 = relay.var("var_1109", dtype = "float32", shape = (108,))#candidate|1109|(108,)|var|float32
const_1110 = relay.const([9.389378,-7.613222,6.199278,1.402262,-0.933551,-2.229201,1.074317,-0.287665,9.314745,8.345644,8.950684,3.739511,2.149443,9.826409,-2.718761,5.398706,8.096945,-3.928372,-5.583725,3.835207,8.172748,3.256341,2.541226,-7.697430,-5.811294,0.954641,0.424806,-8.286338,0.491194,1.039599,-0.936702,9.158364,2.518563,-3.329388,1.873689,-2.125967,2.877063,-1.833738,9.760073,-4.591834,-7.168333,5.695725,-4.996232,-4.751225,-4.689033,0.121497,-4.574584,-8.881708,-1.511601,-3.235890,3.560693,5.801855,-2.144367,5.277176,-1.015335,6.975486,5.941966,1.868869,-3.626537,5.935036,1.772665,-2.984182,-5.105483,9.241683,4.215232,-9.790836,-1.229615,-9.039819,1.693785,0.892695,4.362352,-9.830928,6.575598,-3.607625,6.334737,-2.569968,0.134687,0.626671,-0.657436,-7.324524,-2.417019,-1.745575,-4.549167,7.758182,-0.468365,-7.948294,3.138025,-5.763527,-8.919334,4.329939,5.374385,-9.986341,-3.460137,-9.455400,4.032472,-1.128203,2.068110,-2.373864,7.380499,-8.992127,-1.568753,4.577316,6.470736,1.620880,0.466180,-5.354402,-6.402786,2.180912,-9.857777,3.583755,-7.111763,9.525940,-2.138402,-9.529257,5.275132,2.433289,4.628191,7.293430,9.555604,-7.689894,8.004972,9.631758,1.439418,-2.169659,-0.981636,6.870136,-9.822042,-5.125591,5.183728,-5.816015,6.452047,-1.575308,3.819386,-3.577514,-3.152306,4.631850,8.060101,-8.324948,6.764551,-1.283667,-8.790884,-7.693031,-1.577300,-1.207827,3.243932,-1.504660,-0.493784,0.512005,-0.400445,-2.296360,-4.882460,2.636248,-5.683873,7.996527,-5.211106,6.655825,0.209642,9.751293,7.591943,2.449631,8.968621,0.744979,4.297992,2.203758,-1.902200,-8.951853,1.382448,-5.376451,8.367742,0.642988,7.750731,1.185501,-5.690394,-5.514403,-3.691073,4.585537,9.484665,3.221268,4.522249,3.244096,4.545814,3.778472,2.901021,-3.852401,3.768963,-6.783236,4.966222,7.938637,7.411211,5.513674,-5.052005,6.898227,3.220119,-7.723171,3.474165,2.166243,8.357618,6.655472,-9.963764,-9.947429,0.408669,0.469224,-2.480148,-7.367377,-6.161844,4.075040,-9.699475,8.249204,5.150565,7.540593,6.698166,6.805516,1.227667,7.854550,1.288615,4.895108,-4.757420,2.013812,8.509422,-8.675908,5.381478,-2.171240,-0.272797,3.752303,6.183907,-8.900074,2.527080,-7.029395,-0.917440,7.921941,5.090605,-8.469287,9.387787,-4.370423,-3.712322,-9.578985,-8.199005,9.789026,-7.950927,-8.272887,2.386037,-0.534015,6.072619,4.810870,-1.078002,1.620069,8.356554,-4.110003,1.299613,-1.387451,5.396957,2.344018,2.931243,1.763187,5.495137,-3.490921,-8.219491,-7.774597,3.908570,-9.096577,-1.784428,4.056291,3.651059,-2.046375,-0.769935,-3.361540,5.614243,8.167231,1.644023,1.492820,-4.365780,7.814965,-7.500659,-1.835124,-7.447110,-8.352342,-6.081073,-2.209028,5.398943,-4.386992,1.280338,3.937329,-4.257140,-9.316143,8.443472,6.865743,9.850790,4.460680,-7.997255,2.429580,-8.677893,9.177681,8.838460,-5.584065,-4.877803,-5.792289,-4.529553,-1.235330,-8.458925,-5.394430,-9.762998,8.326210,-2.152145,-5.270734,8.686280,9.259802,6.648893,-0.860743,3.380861,4.837356,-7.283178,5.557414,4.460427,8.408035,-4.455143,-3.964382,2.928230,-5.019627,-9.283697,-3.366224,-8.031649,9.637865,-0.815369,-5.260164,-4.889679,6.013969,5.392279,5.627923,7.077735,-6.391277,-7.614437,-2.509533,4.835195,-9.992222,6.823539,9.470776,-7.850796,8.883623,-7.484615,-6.496903,3.628503,0.307455,0.288165,-0.675633,-3.993456,-0.425572,0.726641,-5.176222,-8.569944,-2.699219,-7.189186,0.425591,-3.719028,5.184233,9.866936,3.442201,-7.770430,9.526002,-7.454929,-2.918792,6.717809,7.846321,6.520054,5.021213,-6.961867,-3.067721,4.752201,-3.104732,-2.215625,-1.355227,1.263308,5.313667,0.723049,2.271128,-1.631638,-1.540745,3.098715,-3.362012,1.369914,-9.996016,7.912591,-6.032899,-6.065531,-1.229170,3.500323,-4.169151,-5.651537,-7.597216,2.609663,0.998369,6.354793,4.281915,-0.445090,4.350559,0.076315,4.887560,-8.383803,4.005161,-7.412030,-8.222245,-2.156248,9.933891,-4.959458,-0.511230,8.017528,9.073657,7.060890,2.547233,-4.207760,-1.187586,-2.410338,-2.022294,4.026245,-9.800516,8.412404,1.850448,6.122777,-7.682055,-6.144087,5.704681,8.619116,-9.614674,0.157019,-8.086567,4.678668,7.928965,-1.653659,-5.894828,6.962905,-9.801095,4.138729,5.640406,-3.991922,-5.908613,-5.266760,-6.920349,-9.104882,7.874803,2.841076,3.983198,-0.245777,-8.672941,-4.794173,-8.834135,5.918863,-9.975943,1.017835,-4.848183,-8.217583,-9.990635,-3.481148,-0.554995,-0.197989,0.435397,2.217261,-8.027726,6.849773,-1.224400,8.841694,-4.977555,8.991333,-0.900393,-4.559618,-5.610370,1.926332,7.735112,-1.318438,1.340824,6.461602,-5.613468,9.322787,-4.177155,4.406124,3.353961,-4.533953,-1.395381,-7.004761,-1.021199,0.623990,0.063465,1.010522,-5.068385,-1.120928,-0.193241,-6.384228,-8.119190,8.446569,1.463311,-6.277839,-3.312633,-0.901487,-8.434552,4.210988,8.654349,-8.620752,3.823635,8.859037,8.551222,8.420198,-4.788172,-4.006636,-7.122245,8.361025,-8.404992,-7.032162,-6.024855,6.394079,7.446288,7.033507,1.825314,-3.964432,-3.057362,3.364423,6.899905,9.379228,-2.308675,3.061739,-9.531279,-5.434115,-0.464307,3.031581,2.476946,3.751431,7.222672,0.887030,-9.292201,4.210247,-7.078654,-7.557594,-9.755691,6.358735,6.150812,5.540851,0.570516,7.824653,-1.502763,0.315922,4.262074,-9.520751,7.903683,-4.929711,9.686032,-7.555286,-5.895041,-9.870836,1.174245,3.194643,-8.094246,-9.305686,5.602972,6.492076,-7.152622,3.625899,4.793965,-0.211399,-9.687574,0.669310,-5.927687,3.185114,-2.911678,0.796054,3.837390,7.319452,2.920611,8.743184,8.316705,-0.477388,1.996480,0.504860,-8.843708,-9.195623,-7.836159,-2.975604,5.172094,5.480287,8.078162,1.455761,-9.158344,-7.958912,-3.528213,-1.153617,-5.598075,2.209847,-9.797404,6.042841,-4.407156,6.771837,6.004725,-4.159816,3.341934,-9.173075,-5.393065,0.856845,-5.212513,1.249521,-2.738065,-0.543084,-6.775284,-0.493036,5.549746,5.031761,5.028308,-8.646151,5.081913,-0.483316,6.970163,7.583005,-4.114654,-5.475687,8.371561,-0.458003,6.833822,-0.452906,-0.258121,-2.829815,-8.198276,-9.264740,1.009570,-7.918048,4.468220,1.359401,-3.814564,-1.372836,-9.889937,3.188081,-6.467613,4.575589,7.638142,-3.771045,-4.233632,0.077867,-0.760081,6.758803,-3.934256,-9.421704,-7.081067,-7.893730,5.949998,4.229910,6.249249,4.247081,-7.315088,7.883566,-1.195117,-3.238323,7.204760,-6.866479,3.803737,0.595299,2.507240,7.432580,9.163223,-7.340776,-4.983695,-6.524597,3.717929,-1.316725,-6.888343,6.908029,5.974901,-8.342413,4.747898,-8.881319,-3.618969,-2.383887,-2.824800,4.239512,-3.790241,-3.286831,1.840632,-9.214179,-5.687420,1.911974,5.710068,2.336292,-7.414491,7.010319,-5.874955,-6.201457,1.237016,2.561014,-6.468953,1.178385,-4.075746,8.059478,9.994817,-6.167200,-0.612440,-1.402570,-7.641480,-4.052135,6.011287,-4.766659,-8.848846,-6.312927,-2.774126,8.469333,-0.657568,5.970078,-4.446616,8.533533,-1.907089,1.515640,7.942597,-1.384828,2.891809,-8.744575,-1.056772,0.065505,7.825903,-9.563867,4.958783,-3.797291,4.808752,-3.301874,-5.709982,1.842778,-8.419699,-4.643990,-9.561524,9.131201,0.732087,3.161820,1.962537,-6.212936,-6.693123,-5.787979,-2.014003,-4.277911,-4.669457,3.850648,-1.620342,8.437028,4.444307,-1.959771,9.873957,-0.621825,1.014856,-4.380208,-0.506595,2.320969,-5.494420,-8.019219,-3.759834,-3.814234,6.371969,1.554541,-4.622543,-5.085095,-6.487509,7.026521,3.285660,9.407619,6.288474,9.792429,-2.458479,3.098435,-3.898879,-2.999763,-8.940976,8.427270,-6.925116,9.605747,5.180867,4.845158,-4.379282,6.545604,-8.246693,-7.390253,0.804331,4.169293,-4.413751,-8.221491,-4.097609,8.989238,4.993398,-6.585600,8.512589,-5.371341,-1.897315,6.142015,-5.056190,-8.930212,7.305399,8.472620,-4.012801,-9.648040,2.089315,5.369759,9.660585,-9.419397,9.206056,2.152062,-9.546127,4.164641,9.262472,6.769149,-6.704013,-0.554968,-4.581633,-4.773683,-5.365269,7.809755,5.386068,9.197036,6.918035,5.414651,-0.604898,5.488841,-0.446174,2.573132,0.052368,3.073557,-1.513545,6.297084,6.933541,0.352826,8.161635,4.553296,0.132655,3.681306,-3.522184,8.549471,5.456100,0.492334,-4.379000,6.560663,4.509845,1.468781,-5.561707,-7.484964,-1.912872,3.105265,-5.419947,-5.553411,0.759101,-3.189970,-8.937486,0.382839,2.735640,7.464184,2.380482,5.156176,4.227443,5.936925,-3.539396,-2.533889,3.955781,-8.806535,-5.835993,-0.354370,-9.692540,-7.576818,-0.343733,3.378373,-5.013901,0.089214,6.863604,4.413127,8.923437,4.660159,-2.039250,-4.179828,2.390520,-7.011838,7.110439,-1.766482,8.396673,-7.623358,-5.141766,6.624380,-0.486254,-7.390543,-2.216458,3.381897,-6.043460,1.541058,-5.753220,7.759921,-0.843550,8.094370,-1.470584,0.509383,-8.812028,5.424881,7.677316,-3.668664,-8.529779,-7.298910,-8.942060,-8.435523,-7.732217,4.816014,-2.032762,-5.625134,-7.290190,-9.232968,6.133886,2.583617,-3.929312,-0.789869,7.708921,2.306746,-8.362186,-5.624006,8.323029,4.674344,-0.456001,-1.042845,7.816990,8.270396,9.407423,-6.698283,-5.434586,-9.249239,3.007569,-4.717499,5.234221,-4.638282,7.960503,-3.943855,0.360624,-2.113413,8.200943,-8.155688,-7.960724,-4.951247,-0.754550,-8.666015,-6.138404,6.587075,-9.455566,3.504846,0.720292,1.342962,-5.802155,-3.664937,6.800230,-7.934514,6.389787,-5.968605,-3.696515,7.625486,5.522924,8.082330,3.690123,9.145323,9.570276,7.161400,-2.196176,2.725175,6.018395,7.811360,2.246416,8.758322,-1.658488,-4.102958,-5.829513,4.115068,1.096125,-3.505053,0.677367,-6.891522,-9.983010,-1.139791,-4.149147,3.952625,2.705229,6.473260,-7.609895,7.034401,-4.923899,-0.190486,-6.294139,-3.618384,-6.312408,-0.947908,8.080833,-8.615727,-7.574959,-8.067061,9.408269,-9.696505,-5.618829,3.578861,-3.271045,-8.720184,-2.280666,-9.254033,-1.078977,-0.320971,6.019985,6.799818,-6.958637,-4.119073,-9.130150,4.268202,-6.470678,-3.030053,7.357784,-8.383709,-4.174318,-9.454299,9.493260,6.894842,-1.566272,-6.467472,-5.485417,-9.180344,-0.646379,-8.076159,8.464506,-1.509926,0.008686,5.248517,-7.978061,2.374040,-8.673212,9.555195,-2.456020,6.257539,-8.196881,-6.237140,4.114714,8.029087,5.573553,-5.232550,-2.398905,-9.024198,5.057929,-0.533292,3.748399,7.986324,-5.558335,3.499047,5.082204,4.575375,5.857441,9.542034,-5.885893,-3.716320,-7.323670,-9.448398,6.624653,-8.244672,-0.602629,-6.793582,-6.359398,2.056310,-0.677355,1.251415,-5.373839,6.162309,-6.431003,-1.323530,-7.471601,-9.286781,-3.130332,8.567906,-2.920154,-4.724014,-8.723135,-2.037396,-3.236181,8.096474,0.521086,8.682067,7.161606,7.695399,9.901390,-5.787152,-2.803737,-1.538631,-3.289237,-9.646576,1.887464,1.475222,4.402338,5.923250,-8.331869,-3.395836,0.339100,7.176191,-6.365730,5.697646,-9.342309,1.897807,-7.647059,2.354365,5.625919,7.659558,5.627455,7.749525,5.849852,-6.830781,5.249610,3.055649,-2.175253,-4.652707,2.071465,-4.027819,0.459856,-5.760860,3.034010,-5.139233,7.830447,-5.095707,9.047457,1.961273,-5.221638,-7.486420,-6.882723,-3.464748,-3.198488,4.757356,-7.559577,7.123456,-4.017333,-7.520097,-4.830951,-7.301246,-3.197725,-0.640688,-4.666504,-4.957091,2.458387,7.788544,-4.454262,6.333234,-4.640226,-2.785468,-0.359323,-3.593352,4.811757,7.477933,-3.376930,8.534475,-6.085323,-2.707398,8.637759,3.351538,9.402504,-7.590839,-6.410654,-8.702985,7.501885,-7.121369,-3.495118,-9.768911,9.688742,8.700297,1.890579,-2.782156,-3.400492,6.387675,-4.797152,2.527903,1.535815,8.492403,5.905160,-3.539678,1.314437,-0.416866,9.958053,6.186568,-2.890546,-9.097036,-1.081917,3.671095,1.345669], dtype = "float32")#candidate|1110|(1170,)|const|float32
var_1111 = relay.var("var_1111", dtype = "uint16", shape = (832,))#candidate|1111|(832,)|var|uint16
call_1107 = relay.TupleGetItem(func_494_call(relay.reshape(const_1108.astype('float32'), []), relay.reshape(var_1109.astype('float32'), [6, 6, 3]), relay.reshape(const_1110.astype('float32'), [390, 3]), relay.reshape(var_1111.astype('uint16'), [832,]), ), 2)
call_1112 = relay.TupleGetItem(func_500_call(relay.reshape(const_1108.astype('float32'), []), relay.reshape(var_1109.astype('float32'), [6, 6, 3]), relay.reshape(const_1110.astype('float32'), [390, 3]), relay.reshape(var_1111.astype('uint16'), [832,]), ), 2)
func_310_call = mod.get_global_var('func_310')
func_312_call = mutated_mod.get_global_var('func_312')
call_1115 = func_310_call(relay.reshape(call_1107.astype('float32'), [6, 15, 13]))
call_1116 = func_310_call(relay.reshape(call_1107.astype('float32'), [6, 15, 13]))
output = relay.Tuple([uop_1070,call_1107,const_1108,var_1109,const_1110,var_1111,call_1115,])
output2 = relay.Tuple([uop_1070,call_1112,const_1108,var_1109,const_1110,var_1111,call_1116,])
func_1118 = relay.Function([var_1069,var_1109,var_1111,], output)
mod['func_1118'] = func_1118
mod = relay.transform.InferType()(mod)
mutated_mod['func_1118'] = func_1118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1118_call = mutated_mod.get_global_var('func_1118')
var_1120 = relay.var("var_1120", dtype = "float64", shape = (5, 11, 1))#candidate|1120|(5, 11, 1)|var|float64
var_1121 = relay.var("var_1121", dtype = "float32", shape = (108,))#candidate|1121|(108,)|var|float32
var_1122 = relay.var("var_1122", dtype = "uint16", shape = (832,))#candidate|1122|(832,)|var|uint16
call_1119 = func_1118_call(var_1120,var_1121,var_1122,)
output = call_1119
func_1123 = relay.Function([var_1120,var_1121,var_1122,], output)
mutated_mod['func_1123'] = func_1123
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1229 = relay.const([[[8.255597,-9.906358,-5.925461,8.588269],[-1.394134,2.586387,2.700854,3.959035],[-2.575144,8.033691,-9.015283,0.793732],[1.516596,-9.352639,-4.879185,-2.535311],[7.956016,-6.196219,-5.232844,-8.987187],[2.934080,-8.518121,-7.458073,3.966179],[-9.918522,7.316529,-3.592451,8.982907],[7.849875,9.184445,3.721434,7.678618],[-4.276917,-9.637784,8.367193,8.651134],[4.448553,2.690004,0.008760,-8.529440]],[[-1.720193,1.431579,6.979966,-4.323928],[-0.582072,-3.605824,1.190499,-4.702757],[-9.112207,9.369592,1.493050,-1.142597],[-5.936212,8.634644,4.816694,0.276528],[3.690728,-7.469488,3.145186,1.002769],[5.260427,5.940555,5.186124,-8.009626],[5.835880,-7.526095,0.088741,5.948330],[-7.596431,6.072133,-3.386049,8.800815],[7.199340,-8.092634,2.218139,-1.045767],[-8.181069,4.047226,8.435315,7.013855]],[[0.701627,-4.855841,-8.079085,-7.475915],[-3.124652,-2.421949,8.113270,-3.835152],[-5.081739,3.176566,5.367614,-5.154015],[-3.308636,4.979284,6.100273,-6.752748],[-8.013095,8.252982,-9.914708,-4.409911],[-1.303164,9.366724,-7.199253,-9.191516],[1.400232,-9.601399,-4.820779,-7.205982],[6.257392,-8.012534,-7.627716,2.944699],[2.334003,6.812673,6.257587,-5.181001],[4.323474,7.415718,-6.644765,-3.046373]],[[1.635700,-5.218236,2.888413,-9.400601],[-8.133428,0.191272,4.433981,-4.855991],[-5.251795,-1.850193,3.599367,6.815381],[4.753390,-5.017470,-2.177979,5.009977],[-9.795557,6.993360,-4.339126,-8.976198],[9.364509,2.293900,-6.100490,2.530576],[6.371884,-1.499691,5.288562,1.370422],[-9.385905,-7.493492,-6.076253,8.348981],[9.433020,-9.857337,-5.607912,-0.457464],[5.600759,8.001513,0.327003,-4.180708]],[[-5.151873,9.667092,-9.348968,-5.888808],[3.421404,1.897931,-1.360113,-8.127541],[-3.801061,1.162575,6.201971,-4.798101],[5.744274,-2.380891,-6.323503,-1.454191],[-3.940990,-7.363107,-3.244757,0.418571],[7.734022,-7.955777,6.016674,3.266846],[8.488687,2.942203,7.152124,9.075402],[7.601744,5.897142,-5.141733,-0.285404],[-2.339497,9.219209,-8.569481,-0.086429],[-5.885954,4.965744,1.165449,9.156626]]], dtype = "float32")#candidate|1229|(5, 10, 4)|const|float32
uop_1230 = relay.atanh(const_1229.astype('float32')) # shape=(5, 10, 4)
func_310_call = mod.get_global_var('func_310')
func_312_call = mutated_mod.get_global_var('func_312')
var_1233 = relay.var("var_1233", dtype = "float32", shape = (1, 1170))#candidate|1233|(1, 1170)|var|float32
call_1232 = func_310_call(relay.reshape(var_1233.astype('float32'), [6, 15, 13]))
call_1234 = func_310_call(relay.reshape(var_1233.astype('float32'), [6, 15, 13]))
output = relay.Tuple([uop_1230,call_1232,var_1233,])
output2 = relay.Tuple([uop_1230,call_1234,var_1233,])
func_1238 = relay.Function([var_1233,], output)
mod['func_1238'] = func_1238
mod = relay.transform.InferType()(mod)
var_1239 = relay.var("var_1239", dtype = "float32", shape = (1, 1170))#candidate|1239|(1, 1170)|var|float32
output = func_1238(var_1239)
func_1240 = relay.Function([var_1239], output)
mutated_mod['func_1240'] = func_1240
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1873 = relay.const([[[-3,-3,2],[9,4,-9],[6,-4,-9],[10,-6,-9],[4,-10,-10],[-4,5,6],[-3,-7,8],[1,-3,5],[-7,-8,-1],[-10,2,1]],[[4,-5,-3],[8,-5,4],[-3,9,9],[-8,1,9],[-4,-7,10],[8,-3,7],[-1,-3,-10],[-4,-1,-10],[9,7,5],[1,7,-6]],[[6,-3,5],[5,2,6],[7,6,-3],[10,-4,1],[5,9,-10],[8,-8,-2],[-8,-1,-9],[6,-7,5],[9,-1,4],[-4,-3,-10]],[[-7,6,-7],[10,-7,8],[10,-1,-6],[-8,-4,2],[10,-7,-9],[6,3,-3],[2,8,8],[7,-9,6],[7,-2,2],[8,-10,-7]],[[-2,-6,6],[-7,-5,-10],[-10,3,-7],[7,-3,-4],[-5,-9,9],[-1,-8,8],[-6,-2,2],[6,-9,3],[9,8,1],[9,6,10]],[[-3,-6,7],[2,-3,-8],[6,-8,4],[9,-3,5],[10,-1,-1],[2,1,-4],[-4,-4,3],[-3,-8,4],[-2,5,-1],[-3,-6,7]],[[-3,-1,7],[-5,-4,-9],[2,5,-10],[-4,-1,2],[-1,3,9],[-5,9,9],[3,-6,-2],[3,-4,6],[7,-10,8],[10,-9,5]],[[3,10,-5],[-5,-10,5],[-5,-8,7],[6,-1,-2],[-10,-8,-3],[5,-4,7],[4,8,-4],[-8,3,7],[7,4,10],[8,-8,9]],[[1,7,-8],[5,-6,-8],[7,-9,-1],[2,2,5],[-4,3,1],[-3,-3,6],[-5,-7,-3],[3,-10,-2],[-9,-8,-4],[4,-8,-10]],[[-7,1,-3],[5,-7,3],[7,2,6],[-8,-2,-7],[-9,-2,8],[-8,-7,6],[4,-10,-4],[-1,-8,-6],[-8,-1,-1],[5,-1,-9]],[[-3,3,3],[-9,-3,-10],[-3,5,3],[-6,-8,-3],[7,-2,-9],[5,-7,-1],[10,-9,-1],[9,9,3],[-7,-5,6],[-7,8,-1]],[[-10,8,-7],[-10,-8,-1],[8,-3,5],[-1,7,-9],[-5,-7,-8],[7,-5,5],[-1,2,-4],[8,-4,-10],[-7,1,-6],[6,-9,-4]],[[1,4,6],[1,-4,9],[-7,-1,10],[-8,-2,-10],[9,2,8],[4,-9,7],[-8,5,1],[-2,-4,7],[-4,-8,4],[-7,-5,3]]], dtype = "int32")#candidate|1873|(13, 10, 3)|const|int32
var_1874 = relay.var("var_1874", dtype = "int32", shape = (13, 10, 3))#candidate|1874|(13, 10, 3)|var|int32
bop_1875 = relay.less_equal(const_1873.astype('bool'), relay.reshape(var_1874.astype('bool'), relay.shape_of(const_1873))) # shape=(13, 10, 3)
uop_1881 = relay.sin(bop_1875.astype('float32')) # shape=(13, 10, 3)
output = relay.Tuple([uop_1881,])
output2 = relay.Tuple([uop_1881,])
func_1893 = relay.Function([var_1874,], output)
mod['func_1893'] = func_1893
mod = relay.transform.InferType()(mod)
mutated_mod['func_1893'] = func_1893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1894 = relay.var("var_1894", dtype = "int32", shape = (13, 10, 3))#candidate|1894|(13, 10, 3)|var|int32
func_1893_call = mutated_mod.get_global_var('func_1893')
call_1895 = func_1893_call(var_1894)
output = call_1895
func_1896 = relay.Function([var_1894], output)
mutated_mod['func_1896'] = func_1896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2012 = relay.var("var_2012", dtype = "float64", shape = (12, 5, 14))#candidate|2012|(12, 5, 14)|var|float64
var_2013 = relay.var("var_2013", dtype = "float64", shape = (12, 5, 14))#candidate|2013|(12, 5, 14)|var|float64
bop_2014 = relay.not_equal(var_2012.astype('bool'), relay.reshape(var_2013.astype('bool'), relay.shape_of(var_2012))) # shape=(12, 5, 14)
var_2017 = relay.var("var_2017", dtype = "float64", shape = (12, 5, 14))#candidate|2017|(12, 5, 14)|var|float64
bop_2018 = relay.less_equal(var_2013.astype('bool'), relay.reshape(var_2017.astype('bool'), relay.shape_of(var_2013))) # shape=(12, 5, 14)
const_2023 = relay.const([[[-3.961136,-4.509619,-1.123057,-7.124860,5.570902,-4.841675,8.414526,-5.682520,-2.059180,2.840635,3.792403,7.061336,-3.746838,-5.550164],[2.834378,-3.308834,-3.051215,-8.097752,0.804382,-7.420466,4.450130,7.155105,7.050481,-2.552770,2.396433,9.778149,8.155244,8.842847],[-0.127851,-0.827493,1.150758,7.518751,4.754451,-1.428173,-7.673543,-3.404117,-6.254762,-1.402832,2.150980,7.631190,-6.221725,-0.171679],[8.265138,8.476834,1.874597,-0.770728,-1.397362,1.361603,1.277114,-7.656931,-4.262701,-5.455613,-9.934291,-7.983272,1.913824,-9.958605],[4.360984,-0.625656,-1.600283,-6.959717,1.240542,-6.489187,-5.759081,1.284513,-2.050091,5.117863,-5.546908,0.318253,-6.057462,8.368531]],[[7.816782,5.172874,-8.894898,9.391191,6.085525,-6.688146,-4.940303,6.334668,-8.651240,2.970602,-9.280225,7.586200,-8.165190,-7.559815],[2.023222,-4.023565,4.218101,4.482571,3.615353,5.329511,-3.498774,7.237886,-5.578647,0.781389,-8.845776,1.140740,9.418664,9.263770],[1.689907,-7.123185,1.908192,4.584547,-0.928685,-5.123094,-9.765757,-4.767940,-5.953893,8.941167,-4.589788,2.010434,7.748302,-0.370591],[-1.941674,-3.230106,8.447080,-5.172438,-5.353322,7.332999,-2.210428,-9.714955,2.537820,8.067964,8.230608,3.664127,5.034715,-3.321202],[1.216013,9.132284,-7.385967,-4.145781,-9.165945,2.382801,-0.080085,8.861156,-4.326917,4.386167,-5.557205,0.288571,-1.691443,-3.135308]],[[-5.954618,-6.794585,1.370519,0.658949,-9.681618,3.571743,-4.973780,9.058056,7.126377,1.965990,-4.348049,-8.424455,1.196556,-5.025124],[-2.467000,7.720715,7.021250,-8.541992,4.659921,4.126098,9.270101,-7.995819,1.413566,7.003143,-7.439996,-9.579072,4.229209,6.128765],[5.667682,-6.933382,-8.003483,-0.898574,-6.851013,-3.680450,-6.897324,8.243281,-1.201347,4.814817,6.038952,3.971118,1.122280,-1.157861],[-3.613809,1.409640,-0.271287,1.218368,1.462049,-9.170781,-8.178204,4.593288,-7.717307,1.718880,-4.533918,-7.312074,0.434606,9.717629],[-6.921440,3.036099,5.053289,-5.273954,4.356906,2.093674,8.972632,-3.019105,-3.709134,-7.610423,-7.310651,-2.486586,-4.158623,-2.538473]],[[-1.142107,-5.306722,3.411101,0.295368,-3.493890,-3.093163,9.379358,-7.028089,-2.148673,-0.071293,-4.532968,8.147834,-5.179952,9.356528],[4.932402,-9.337745,3.928600,-6.617199,8.342093,6.008118,0.557025,4.245000,4.396433,1.887606,-9.593115,1.334649,-8.104632,6.411661],[-9.852109,8.637126,-7.772946,4.636713,-2.100046,-5.395205,2.084981,8.334017,-8.002338,6.712815,-3.709660,5.370247,-4.432901,4.772160],[7.615385,-1.878604,6.086081,4.991956,3.983387,6.901662,-9.052366,2.448896,2.178721,-0.831937,4.865457,-2.359866,-4.054785,-6.762933],[-6.720892,7.577386,-1.482518,3.076932,4.796300,6.154700,0.505608,-0.701895,8.793227,0.584770,-8.352486,-7.106171,9.698321,6.159769]],[[-6.952492,-0.046566,8.388497,-9.065243,1.827031,3.657488,9.889836,-7.064783,1.499988,-0.658367,-1.362180,-2.807268,-9.231446,6.842457],[6.376663,4.546468,-5.679282,-1.331629,-0.684194,-8.841870,-7.476990,-9.907392,-6.261286,-9.756333,-6.873724,-8.888976,-6.061395,1.577831],[1.666599,-0.736211,-9.039645,-4.063441,0.245218,-0.629038,-0.572725,-9.532403,2.799184,-1.400992,4.524537,7.262447,8.845263,-7.653942],[-3.317860,-9.467332,-9.626086,-1.539147,2.886499,-8.756064,0.386670,-3.028513,7.779566,-2.769343,8.628739,-7.413323,8.200688,-0.442516],[-4.498640,-0.018417,9.736191,-5.777663,6.493345,-3.356325,-8.653951,-9.718940,1.237977,6.253531,7.179585,8.404767,-0.406534,2.685612]],[[-7.899947,-7.718633,-4.816095,7.396347,-5.589034,-2.448024,1.801722,-9.199549,6.996491,5.195596,8.050036,4.058120,4.970780,0.777027],[-5.827754,2.957871,4.930256,1.160965,1.256342,8.328505,5.642707,9.793634,-1.214555,-7.906160,-3.133904,-3.336249,-7.321284,-0.503441],[2.500180,3.748966,-7.224225,-2.962798,-6.937689,-6.241257,-9.119788,1.410575,4.133736,-0.105664,-1.547963,8.861110,1.342457,-7.513837],[6.783415,1.516341,5.894504,-5.662790,7.917080,5.110331,1.512101,5.649619,5.948766,7.930635,-6.634093,-9.795012,-6.488725,7.242043],[6.093698,7.585524,2.967625,7.846825,6.691359,-4.584511,-6.073750,-7.202782,1.145536,-8.648900,6.630968,9.119083,1.515627,-3.528015]],[[0.858536,1.861697,-7.718183,0.018735,6.848389,-7.530423,6.261350,-1.173350,-4.107305,7.589193,-9.056258,-8.603650,7.574964,1.990309],[3.573582,-9.479970,-6.195885,6.636480,-4.942740,-6.484629,-1.964018,-6.530248,5.420525,5.866016,8.596487,-0.891146,-5.801841,0.238724],[-9.748041,4.584633,7.842605,3.681297,2.000294,-2.768311,4.128913,-2.050997,8.325759,8.252884,9.824761,-1.744726,7.823209,-6.815329],[4.749004,2.423715,4.215204,6.269063,-8.749005,-3.151179,0.678900,5.807620,2.776817,-1.326706,-5.551362,0.395383,4.982370,6.157895],[-0.705139,-4.389115,7.019185,-6.358843,-3.609643,7.915450,-3.859038,8.696693,-0.482155,-8.784742,-5.946536,-4.601251,3.610350,-8.651694]],[[2.509695,7.506881,6.376262,3.297939,-3.473523,5.258145,0.723155,5.694831,-2.588738,-9.611888,-6.644060,-1.022117,7.997959,6.900047],[6.509999,3.274452,7.570176,-9.469508,3.032724,-6.283549,3.755732,-0.547905,-8.410858,-3.562315,-1.464982,-9.440313,-2.139351,3.048939],[1.367286,-8.623308,-3.499882,-2.566592,-5.603823,5.837202,-8.302956,6.530835,5.057716,0.364887,-9.564342,1.027415,-4.831679,8.621697],[-0.752815,-7.326559,0.771621,-6.710353,2.985308,-7.217967,-4.876447,0.783608,0.885109,-2.756079,-6.227070,-6.770923,-6.158103,-9.445342],[5.043530,1.962151,-9.060374,-8.192105,-0.838614,-8.563321,1.530643,7.776912,-4.500847,-2.434458,-0.627272,-4.152490,-8.778572,7.607938]],[[-2.456163,4.540992,8.221738,-1.413916,5.906706,3.889060,9.429107,3.735448,-6.906761,-7.603467,9.718251,-6.188524,-0.437244,-4.199760],[-1.737289,8.970158,9.922488,-3.574282,3.153637,8.848208,4.768654,-3.247524,-1.768650,8.390679,-1.732910,0.108552,9.107546,6.820571],[-5.298173,-4.253607,9.758849,-6.301701,6.023871,1.398620,5.126392,7.274313,-1.330798,7.447225,3.376132,3.206989,4.270026,4.406117],[2.801203,-6.599623,-3.840373,-5.255254,-3.992364,5.101405,5.703322,-0.275846,8.220038,-2.455604,5.411822,-4.059313,-9.984453,-1.169179],[-1.927184,-6.613519,7.707854,3.622140,-8.717159,8.289939,-3.708375,-2.388521,-0.154764,-5.297203,-2.621235,5.053094,4.242203,-5.115968]],[[5.477828,1.653400,-0.852517,9.426797,-5.382254,9.481317,-2.232249,1.046114,4.912885,4.528364,-1.337351,2.518442,-1.074430,-9.751487],[-5.550545,8.013764,6.585595,3.730391,3.318132,9.337231,-1.583787,-3.041510,-5.783315,1.427291,5.861294,6.343189,2.422981,-0.220015],[8.351170,1.770668,8.899443,5.614871,0.369855,-2.314825,-6.255657,-8.904898,-6.639027,6.350086,-2.648136,6.912301,1.082437,3.565002],[7.985442,-8.081172,-5.868112,2.141979,8.656219,-9.682454,9.114861,0.830498,8.200844,-9.479472,-1.158495,-4.553898,4.319290,-5.103557],[-9.054796,8.365994,7.679995,-5.957337,1.623654,3.025952,-4.312218,9.869854,-4.138391,7.332725,-3.063055,3.457788,-7.448850,3.852097]],[[4.990772,-7.554049,5.089853,-7.447953,-7.738319,-3.541750,-7.644994,-2.781879,3.086361,-4.425304,-7.662915,5.053810,-8.948824,0.248810],[-0.860690,-3.023233,-6.881505,2.673019,-0.330957,-8.505576,-5.401703,-4.236581,-7.928339,-1.904420,-4.390370,5.955705,-2.386908,5.241826],[1.011693,0.770609,1.095087,-0.916765,9.024625,3.974941,0.317601,-5.229540,-0.394058,-4.592876,0.888656,-6.222595,1.583999,-2.248933],[0.486628,-0.979913,-7.663386,-3.457477,5.330661,3.166833,7.708233,-8.185925,-9.510654,-8.181427,2.449978,6.376426,1.900586,-3.754217],[9.257095,2.927665,-6.245336,9.226803,1.542885,-0.007412,-4.003105,4.945797,-0.147458,-7.178244,-9.583738,6.547243,5.432281,-2.541158]],[[1.693207,-8.522471,9.860861,3.228762,1.778609,-0.148155,-6.909911,-2.683620,-3.504828,-2.891164,4.662236,0.784369,-3.388761,-4.697210],[8.544351,-0.568362,9.018914,8.676201,-2.541768,7.162047,-4.907445,1.133604,-2.516514,6.618588,5.038782,-7.042458,5.436513,1.028401],[-0.483563,4.657687,-6.807222,-0.220263,-1.851550,4.249049,-1.305452,0.562853,-6.579492,-7.820788,-0.905794,-9.002658,3.044564,-1.285515],[-1.581973,-8.266747,7.536024,1.165579,-0.610633,-4.377391,0.874034,2.872264,-1.637264,-3.674211,2.309199,3.545902,9.140617,-1.654872],[-3.349753,7.468888,-3.143345,-2.816186,9.246527,8.951996,5.937217,0.426615,5.646870,1.709106,0.272367,7.914522,-1.309571,-3.934765]]], dtype = "float64")#candidate|2023|(12, 5, 14)|const|float64
bop_2024 = relay.minimum(var_2013.astype('uint8'), relay.reshape(const_2023.astype('uint8'), relay.shape_of(var_2013))) # shape=(12, 5, 14)
func_1238_call = mod.get_global_var('func_1238')
func_1240_call = mutated_mod.get_global_var('func_1240')
const_2029 = relay.const([8.316561,-6.221001,7.563301,-2.407669,-1.830419,0.805684,6.237072,-4.644284,0.198613,-7.860654,7.492502,-7.931180,-6.136406,0.961308,-1.142297,6.798443,7.826404,-9.102812,8.777676,-8.955200,2.252641,-7.166777,-6.541014,1.639575,-0.359196,4.501611,-3.589363,5.973099,0.610669,-7.474394,-5.510444,8.493155,2.784586,-1.386997,-4.666958,4.102106,0.858620,-4.559024,-0.655827,3.590935,6.526522,-8.220145,-8.914670,6.114201,-1.265719,8.129980,1.477891,6.081949,-4.886972,5.196166,-4.372313,-6.333046,-5.509866,3.361295,8.027826,6.226633,8.297044,-1.961081,6.461682,7.057024,-3.489873,-7.907562,-0.938088,-3.456054,-0.170200,6.185982,-1.619962,-3.775450,0.345114,2.818788,-0.724943,5.843610,-1.542470,-4.296103,4.840005,-9.478093,-9.771678,8.881822,-5.812250,-7.810774,6.677079,8.492987,1.671549,-5.983975,-5.866379,7.928817,9.487841,-0.246025,5.565083,6.828017,9.286028,-8.978718,6.051496,-9.753145,7.598050,-6.384610,-6.428599,7.209351,0.003080,-5.931254,1.144540,-7.709302,8.117618,6.177023,8.802827,9.090434,-4.389472,3.282874,-8.617783,5.788816,-3.514225,-2.509345,7.815076,-0.846856,-5.590720,-3.779164,1.728392,-4.859612,-1.898140,9.904783,-8.874601,-6.041165,-6.112994,-6.525658,2.031446,-2.036191,1.367461,-9.699813,-7.366460,0.497992,-6.726956,2.115100,4.994861,-9.784168,8.318451,2.644010,-3.055270,-4.889996,2.856693,8.761158,-2.285730,-8.987692,9.042204,-4.629318,-4.145102,-6.434804,-6.658872,-3.996243,5.087632,6.969664,-4.515786,-7.222671,-0.138758,6.806110,-2.093265,-8.750244,-4.304200,-0.380957,2.774309,-6.459220,8.398204,-3.481556,-2.052196,2.321116,1.457958,-2.511857,7.201067,7.132020,7.189377,-7.476504,6.732134,-6.184180,3.721276,8.195107,1.708489,-8.886472,-0.729915,-6.289418,1.944943,-9.448659,-7.208723,-7.304254,-5.396497,4.741788,-9.605651,8.912660,-7.323685,-0.506408,-3.979215,1.142895,4.665258,-7.468388,-1.193307,-7.270144,-8.393458,7.456124,3.597377,1.628316,6.730317,5.685343,-7.768828,3.627004,-6.105213,-6.673874,-0.500270,-8.570055,-2.756887,7.242001,-1.234091,-6.349362,0.880939,3.948718,-8.561931,-0.797659,-7.489432,4.420008,-4.340555,9.116423,-5.365529,3.750877,0.606230,-5.523452,5.955150,5.147778,0.281399,-8.425392,2.405208,8.437583,-1.638587,4.689831,7.748182,1.339652,2.067479,-0.078715,9.784628,-4.021773,-3.716620,-1.218956,0.941166,7.287877,4.631279,0.157465,8.465470,-9.847876,-0.923518,-0.296142,1.322483,6.084184,6.547756,-0.531465,8.247620,1.275360,-6.859879,0.604229,8.281295,-7.544065,6.094159,0.654247,4.833581,-3.662285,8.750021,6.982581,9.670815,-6.729782,8.020451,5.884356,4.190991,-5.750370,-8.070867,7.957024,-1.456992,-2.330216,2.003454,-0.799227,-7.966492,-3.335218,-1.850117,-8.230863,-4.579509,-7.035822,0.202667,5.968153,-4.826700,-8.939242,1.665766,8.173066,-4.825573,1.382029,1.644622,-4.017588,1.411398,-3.458945,-9.114251,5.162320,5.366279,-7.856630,6.559589,2.508631,5.295465,-2.250137,-9.910422,-9.854793,0.365992,-0.119304,-2.345829,-3.435326,-8.228453,9.779450,0.560075,9.149011,-5.852172,-7.745650,6.810951,1.138052,3.860908,-5.708532,0.019115,-2.041145,-9.654860,-2.894312,4.308745,-6.051515,2.470561,6.427923,-9.767801,7.014856,-9.582460,-2.641124,0.214886,7.378569,3.133417,-8.674298,-0.857855,-6.652648,-6.661733,9.201817,4.415602,6.764390,9.659285,-2.515963,9.043553,-7.159344,5.521099,-3.441175,9.810018,3.800171,2.640087,2.829052,6.387464,-2.984699,-8.902953,4.879948,-2.536579,-2.741246,3.407716,9.451555,-4.192710,3.216275,8.074475,1.067304,6.098102,2.708413,-7.960124,-5.217676,-7.103357,3.545136,4.298462,3.374083,8.844170,9.145728,-1.395074,-8.301900,6.290114,-6.355216,8.710428,1.519258,-2.547224,3.031693,7.539237,-3.927655,-4.037823,7.442485,3.660806,5.361131,-9.454259,2.978298,-6.561226,-5.915478,3.507412,-8.573034,-6.357006,7.306849,-9.174211,1.100759,5.224081,-6.466007,-7.988302,9.077065,-7.251282,-3.598420,9.964201,1.200052,5.736276,8.358770,-3.403502,4.572209,2.167880,1.298225,2.089667,-3.561352,0.450945,2.695310,-8.913026,6.208107,0.097049,8.932518,1.562056,-0.653084,-3.078814,-2.737094,7.449739,8.641422,-8.659710,7.797272,-3.610609,-0.596563,-9.232047,3.029460,-9.974002,6.324239,-9.202823,2.382679,4.988891,3.241246,5.417528,-7.107196,5.332178,-6.677390,-5.374192,-2.045706,4.163815,-1.815732,-5.142199,-7.066010,-1.114831,-2.390527,-6.739351,0.420849,-5.176912,-5.381948,-6.684912,-5.364736,-8.596816,5.037068,-4.091312,3.893363,1.808954,3.963205,1.065755,-4.420623,5.265063,6.095115,-1.462298,9.979314,2.259054,2.970050,-2.823149,0.151326,-5.178200,-2.600211,-8.381151,-7.970573,6.100121,0.849189,9.721870,8.637570,7.312091,-6.936915,1.972110,-6.074483,6.145127,-5.115786,0.652757,5.864399,-1.158646,2.335329,1.941280,-4.684306,7.055376,-9.796031,-4.763493,-7.387524,-5.139395,0.782204,-2.618012,-4.099451,2.680048,-9.591874,-5.102777,-5.807972,2.472788,-9.394016,5.685875,2.685650,-1.044676,5.682644,2.688745,-5.962151,8.771984,0.500242,5.654072,8.474195,-1.035436,-0.810105,2.406935,-0.978204,-1.057441,-4.319943,2.661216,-5.446894,5.760780,-1.714538,9.129792,-1.638293,2.553819,5.498478,1.858592,4.511055,-8.474968,-9.401129,4.774197,-2.965431,6.987715,9.699326,-4.284475,9.343439,-9.564469,9.693351,-3.543511,-3.175396,0.923395,2.611634,-2.078680,9.853609,-6.748994,9.036202,-9.604254,5.352022,-3.184909,-8.501160,-8.118355,-6.088531,-1.499171,3.170257,6.589890,-4.001232,5.554045,1.363826,-6.394867,-0.067646,-2.406437,-6.026082,0.821511,4.803999,6.013185,-4.460336,6.927787,-7.024439,-8.901773,-2.431035,6.922573,8.126552,-8.459773,-3.156056,9.795280,0.846947,-8.099209,-1.720353,4.958804,1.932761,7.891011,6.498187,-5.629446,-2.290283,9.986772,-3.966036,1.057594,8.952651,-9.400781,0.079611,-5.562359,-2.054769,-2.885571,-8.613789,-0.008107,-9.017526,0.475339,-5.362588,0.836080,5.649132,0.528853,2.103009,5.833607,7.360877,0.465109,6.441242,6.362720,-8.019586,-0.214919,-4.811811,4.728075,-4.978193,-1.961286,-0.781031,-3.019210,-1.248735,-2.188622,-5.490388,-5.496226,7.726319,-2.336401,8.038411,-7.379195,-8.002290,-2.504354,0.469599,3.427953,-1.652513,-4.568317,-4.434866,-6.367417,3.840893,-4.923319,-8.430949,1.341614,-7.471810,-7.481104,9.063515,-5.791652,7.904816,-9.553581,-2.003172,8.129940,9.193621,2.925713,-5.653608,-3.572165,-5.802170,6.229041,0.458999,3.919386,4.332846,9.943301,-7.350824,-0.638386,-0.718481,9.329362,-4.315089,-2.647851,-4.015911,9.553449,8.777725,-0.363672,0.676421,2.363067,-7.275657,-1.593857,-1.724522,3.810425,2.967134,1.439103,-7.899361,-6.582177,9.154128,1.834554,8.790444,-6.409914,-6.100142,-4.507650,-0.099314,0.559059,-0.896304,-1.115877,2.780111,-0.712776,7.724987,2.176299,-2.477482,4.243254,-7.733069,9.153244,2.880707,-0.226536,9.499450,5.654810,-1.572050,-6.112570,5.951694,-1.900801,-4.193065,0.372948,-6.710842,-6.849534,5.865020,-6.320434,-7.692040,1.370561,0.613279,6.339041,-2.294459,-7.885421,2.276291,-0.357387,-4.369276,-2.461939,7.820723,-0.627102,-5.254878,-8.093819,-3.693458,0.244374,-4.381868,8.284675,-6.643730,-1.543276,3.924545,-1.552565,-7.881362,6.659017,5.534454,6.818762,-1.704442,-7.466285,-5.037293,-2.073539,0.239739,1.999579,-4.366362,7.682236,-1.063691,9.052054,-3.321024,-6.845333,-6.197934,5.944915,6.300973,-2.354796,2.460783,-7.280369,1.141318,-3.813431,-5.618103,5.377072,-6.091449,-9.413626,-7.672497,5.272684,2.655909,5.295836,4.250960,3.784883,-0.412955,-9.765678,-4.166869,5.931031,9.410249,-6.491044,-1.547881,-7.623365,-8.200256,6.769582,7.599455,3.893257,-4.592365,-3.377993,-1.544802,8.525513,-4.032848,-6.333431,-6.829780,-2.505257,5.711456,-6.663868,-8.364036,0.294520,9.183169,-3.463292,9.392354,2.792974,-1.689325,8.588127,0.539830,9.764684,8.652141,-7.605258,-4.121355,5.815597,7.891988,9.829615,2.604293,-1.865505,1.451074,6.117221,-2.271613,-1.816595,-2.093472,4.795368,-5.551939,1.529467,-4.506288,-1.062321,2.878323,0.548859,8.346486,-2.056253,6.148638,0.125173,8.844217,2.902708,0.391577,1.622425,2.525320,5.386705,2.061239,2.481576,-8.620881,-7.293723,-1.153808,-1.231478,-1.530096,-5.812971,7.751313,-2.957869,-9.195909,-5.918614,-2.389551,0.079103,2.128784,9.719062,-7.330654,-3.649219,-9.855177,-7.966022,-3.915541,-3.595904,3.192862,-8.458218,-5.428353,-4.192250,-8.360466,-9.716038,-9.165897,6.825296,-4.714391,-1.184852,4.650122,9.806902,-1.495766,-4.550319,-6.329123,6.095219,4.853332,-9.011048,5.319837,-0.743251,-9.570093,-6.308007,0.885232,-7.384582,-8.388956,-8.957467,2.608302,-8.178827,7.648850,4.093175,3.600697,7.602112,-0.946477,0.981381,-7.918189,-5.356327,-3.878514,9.087223,-5.186746,-9.812384,3.656510,-9.421377,-2.008194,-8.093019,-1.749122,-3.758621,-1.693608,-9.686034,8.488796,-7.920741,-1.115564,-3.673968,6.419045,-5.801101,6.826087,3.035086,6.395349,-1.210339,-6.686535,7.065487,-6.740855,-1.192821,6.098867,4.176973,-9.539092,1.393716,-3.127396,-4.726281,3.446382,2.392222,8.342401,5.423472,8.623480,-5.919652,-7.767893,-8.193079,1.966717,-8.451838,6.931655,-0.194343,9.088627,-4.406517,5.346434,-7.750323,9.296075,-9.294695,-9.719280,5.014698,9.265807,1.597144,4.716970,-3.508852,-9.660038,-1.872200,-4.132023,-3.284149,-2.157795,-3.006477,8.457179,-4.707399,-9.364703,4.402026,9.401068,-4.128863,-6.195910,-6.733745,2.403665,9.126721,2.734977,-1.147283,-6.613503,-1.664502,4.857181,-4.918211,5.688175,-9.592207,5.296700,-1.876684,-0.549266,9.341566,-2.301507,6.164636,-7.447758,6.259237,-9.984534,-8.871013,-0.555457,8.413575,6.769139,-2.523762,-8.060794,-6.845990,-9.538617,-6.518263,-4.351359,-7.276988,-9.568622,-5.684616,-4.015259,-4.661027,3.085742,0.765427,4.870565,-0.274366,-9.533050,2.242717,8.481411,2.549186,-0.958689,-2.002461,3.604487,1.647278,-1.272565,4.468682,-0.219443,0.546775,-2.001880,5.263239,4.562958,-8.826355,4.137420,7.986188,7.116294,-7.545650,-3.543802,-8.353224,8.982595,3.701936,-7.049880,-6.890523,4.190555,-9.631185,-3.493280,5.627201,0.274764,-1.604622,-3.150506,4.490007,-6.788820,0.027050,5.779790,-0.446697,-4.280375,-2.592828,-3.509354,4.395449,4.990665,3.269121,9.433983,2.081785,-8.978848,2.807533,0.707993,2.357024,5.244167,7.472427,-8.895302,4.492292,7.119479,7.816691,3.040007,0.449202,1.201208,-7.795503,-2.331348,9.296748,0.622669,0.858703,-2.375982,-8.534382,2.717396,-2.601178,-6.554422,-1.536218,0.633664,4.365430,-7.305606,5.578335,-9.198281,3.180278,-6.599761,6.485643,8.503013,-3.208241,2.811787,7.567497,-2.169636,8.982023,-3.320772,1.934729,6.302702,-4.894785,6.973361,0.490802,8.465086,-4.476962,-7.658783,-9.334972,-8.779578,8.232485,4.063707,7.063197,-6.654520,-1.637416,-6.714997,-4.903132,3.131329,-5.335355,0.702745,-7.126006,-1.053354,-7.172603,-2.659480,-3.862258,5.771375,5.190999,1.254544,1.357518,8.174774,-6.616429,3.989718,8.909457,6.757384,9.305171,-6.608938,8.164668,4.230986,1.053616,-0.937385,-1.557817,1.365749,8.750793,-8.329384,-0.581431,-2.568583,-1.672095,1.540783,-1.670281,4.662139,9.932567,4.545681,-4.107120,-9.463717,4.113316,3.928993,7.857125,5.590580,2.611347,6.332032,6.480829,-2.165984,6.646434,8.238732,-5.207241,3.184422,-6.077723,2.223280,4.401913,-8.400409,-6.521850,3.091606,-1.027214,-0.125327,-9.784452,2.993524,-9.183910,5.215269,-5.376656,6.789871,5.455247,-4.083464,-2.348265,-3.686431,-8.639798,-6.312377,3.336765,-0.191943,-4.700799,8.456260,-2.638079,-9.392459,2.389090,-3.157821,-5.289462,-6.961782], dtype = "float32")#candidate|2029|(1170,)|const|float32
call_2028 = relay.TupleGetItem(func_1238_call(relay.reshape(const_2029.astype('float32'), [1, 1170])), 2)
call_2030 = relay.TupleGetItem(func_1240_call(relay.reshape(const_2029.astype('float32'), [1, 1170])), 2)
output = relay.Tuple([bop_2014,bop_2018,bop_2024,call_2028,const_2029,])
output2 = relay.Tuple([bop_2014,bop_2018,bop_2024,call_2030,const_2029,])
func_2046 = relay.Function([var_2012,var_2013,var_2017,], output)
mod['func_2046'] = func_2046
mod = relay.transform.InferType()(mod)
mutated_mod['func_2046'] = func_2046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2046_call = mutated_mod.get_global_var('func_2046')
var_2048 = relay.var("var_2048", dtype = "float64", shape = (12, 5, 14))#candidate|2048|(12, 5, 14)|var|float64
var_2049 = relay.var("var_2049", dtype = "float64", shape = (12, 5, 14))#candidate|2049|(12, 5, 14)|var|float64
var_2050 = relay.var("var_2050", dtype = "float64", shape = (12, 5, 14))#candidate|2050|(12, 5, 14)|var|float64
call_2047 = func_2046_call(var_2048,var_2049,var_2050,)
output = call_2047
func_2051 = relay.Function([var_2048,var_2049,var_2050,], output)
mutated_mod['func_2051'] = func_2051
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2108 = relay.const(1, dtype = "uint8")#candidate|2108|()|const|uint8
var_2109 = relay.var("var_2109", dtype = "uint8", shape = (7, 1))#candidate|2109|(7, 1)|var|uint8
bop_2110 = relay.left_shift(const_2108.astype('uint8'), var_2109.astype('uint8')) # shape=(7, 1)
output = bop_2110
output2 = bop_2110
func_2113 = relay.Function([var_2109,], output)
mod['func_2113'] = func_2113
mod = relay.transform.InferType()(mod)
var_2114 = relay.var("var_2114", dtype = "uint8", shape = (7, 1))#candidate|2114|(7, 1)|var|uint8
output = func_2113(var_2114)
func_2115 = relay.Function([var_2114], output)
mutated_mod['func_2115'] = func_2115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2128 = relay.var("var_2128", dtype = "float32", shape = (10, 7, 13))#candidate|2128|(10, 7, 13)|var|float32
uop_2129 = relay.acosh(var_2128.astype('float32')) # shape=(10, 7, 13)
var_2136 = relay.var("var_2136", dtype = "float32", shape = (10, 7, 13))#candidate|2136|(10, 7, 13)|var|float32
bop_2137 = relay.right_shift(var_2128.astype('int64'), relay.reshape(var_2136.astype('int64'), relay.shape_of(var_2128))) # shape=(10, 7, 13)
output = relay.Tuple([uop_2129,bop_2137,])
output2 = relay.Tuple([uop_2129,bop_2137,])
func_2140 = relay.Function([var_2128,var_2136,], output)
mod['func_2140'] = func_2140
mod = relay.transform.InferType()(mod)
var_2141 = relay.var("var_2141", dtype = "float32", shape = (10, 7, 13))#candidate|2141|(10, 7, 13)|var|float32
var_2142 = relay.var("var_2142", dtype = "float32", shape = (10, 7, 13))#candidate|2142|(10, 7, 13)|var|float32
output = func_2140(var_2141,var_2142,)
func_2143 = relay.Function([var_2141,var_2142,], output)
mutated_mod['func_2143'] = func_2143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2145 = relay.var("var_2145", dtype = "int8", shape = (3, 5, 2))#candidate|2145|(3, 5, 2)|var|int8
var_2146 = relay.var("var_2146", dtype = "int8", shape = (3, 5, 2))#candidate|2146|(3, 5, 2)|var|int8
bop_2147 = relay.bitwise_and(var_2145.astype('int8'), relay.reshape(var_2146.astype('int8'), relay.shape_of(var_2145))) # shape=(3, 5, 2)
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
var_2154 = relay.var("var_2154", dtype = "float64", shape = (55,))#candidate|2154|(55,)|var|float64
const_2155 = relay.const([8.744298,0.258095,7.176109,-6.478457,-8.548189,8.500415,-4.708807,-9.728202,3.800076,6.199838,4.339285,1.344485,-9.136321,8.793450,-1.803290,8.230332,4.332825,-1.296667,-7.818930,5.046896,-7.452375,-1.263344,8.815848,3.074873,-0.498530,-9.717389,2.506510,-4.804257,6.585506,4.580782,-0.107748,1.395674,6.504756,-6.511006,-0.044801,9.032054,8.037862,9.292016,-6.316877,2.080516,-1.718877,5.292562,1.842495,5.051889,3.757965,-8.344990,3.160022,5.997697,6.052575,-1.785771,4.969089,-2.226861,-3.196147,-2.583664,5.507082,3.901851,0.566181,5.423871,-3.274702,2.311127,9.347030,-2.137801,-2.708854,1.142560,3.385371,1.698406,9.795330,4.910777,-7.306838,1.202435,7.062209,1.395397,2.343486,2.476283,2.003324,4.526571,9.992496,1.908916,1.277148,9.007749,3.777666,-4.285016,6.990230,-0.818100,4.222890,5.744411,-6.222070,8.437546,1.392099,-0.126743,9.595387,2.039095,7.713046,-5.946711,1.797785,3.933486,3.925252,-3.298111,-4.473781,-6.539148,-7.145118,-7.888649,-4.654859,-4.079613,0.227962,-8.534981,-0.928849,4.203504], dtype = "float32")#candidate|2155|(108,)|const|float32
var_2156 = relay.var("var_2156", dtype = "uint16", shape = (4, 208))#candidate|2156|(4, 208)|var|uint16
call_2153 = relay.TupleGetItem(func_1118_call(relay.reshape(var_2154.astype('float64'), [5, 11, 1]), relay.reshape(const_2155.astype('float32'), [108,]), relay.reshape(var_2156.astype('uint16'), [832,]), ), 1)
call_2157 = relay.TupleGetItem(func_1123_call(relay.reshape(var_2154.astype('float64'), [5, 11, 1]), relay.reshape(const_2155.astype('float32'), [108,]), relay.reshape(var_2156.astype('uint16'), [832,]), ), 1)
func_325_call = mod.get_global_var('func_325')
func_328_call = mutated_mod.get_global_var('func_328')
call_2158 = relay.TupleGetItem(func_325_call(relay.reshape(call_2153.astype('float32'), [1170,])), 2)
call_2159 = relay.TupleGetItem(func_328_call(relay.reshape(call_2153.astype('float32'), [1170,])), 2)
const_2167 = relay.const([[[-3.847049,-4.752583,1.786657,6.900312,7.808688,6.575869,-4.141183,-3.581529,-8.264843,-3.365983],[2.051047,-4.032117,7.038038,-2.887383,7.766342,-1.870702,9.484012,2.340823,3.403385,1.509302],[-2.572428,-6.973139,0.210371,-2.021650,7.272254,-1.483642,-0.383311,1.448879,3.363441,7.390285],[7.071050,9.275107,-7.089143,-9.606533,0.647109,-6.869408,-8.260314,1.622364,-0.736118,9.403138],[-0.552483,-0.544604,-6.774194,-1.012617,-1.859950,2.402684,-5.741717,-1.410336,2.436125,-0.719765],[-0.617232,-5.956257,9.710385,5.249938,3.707219,6.586964,-4.825181,-5.578349,6.935241,-5.243596],[-6.366768,-8.771611,-9.102650,-9.441583,2.207570,7.535068,2.488919,-7.830829,9.739920,-7.933811],[3.906440,-3.283863,-7.774146,-5.059287,-6.997425,3.352473,-8.192019,8.326535,-3.509053,6.892343],[-1.721683,2.085688,-8.127978,-3.603551,2.300875,0.106636,5.865980,-1.479667,-7.993778,7.451739]],[[-0.280038,-3.724076,-7.047617,2.682823,2.234785,-2.939481,8.222397,1.416313,-6.359295,4.468471],[8.407091,-7.194950,8.623670,-5.582302,8.082819,-7.009108,-3.117548,6.942738,-7.517447,8.629079],[7.203675,0.736417,1.763309,-2.416996,-8.389826,-9.658619,-6.879690,-9.109648,2.929096,-2.085521],[9.914963,-1.235692,3.659159,-2.512869,4.584125,6.515494,-6.426860,2.063407,1.278097,2.523080],[-8.483392,0.400223,-3.189933,-1.247054,-2.833642,-5.189656,5.451037,3.020147,-3.047967,-0.949662],[1.549429,-5.210382,-3.146365,-0.050261,-9.450960,8.317884,6.761873,0.676573,6.484327,7.367164],[-7.498645,3.550480,2.274057,-9.664940,-8.005352,3.920384,-3.963061,7.944606,7.744087,1.758697],[1.649420,-0.330379,6.848713,-6.188269,1.224068,4.203747,-4.816212,4.297848,2.444894,4.848427],[-8.837163,-2.278701,7.661682,3.880157,9.813815,-0.838639,-3.990603,8.965544,-1.645608,-6.523468]]], dtype = "float32")#candidate|2167|(2, 9, 10)|const|float32
bop_2168 = relay.not_equal(call_2158.astype('bool'), relay.reshape(const_2167.astype('bool'), relay.shape_of(call_2158))) # shape=(2, 9, 10)
bop_2171 = relay.not_equal(call_2159.astype('bool'), relay.reshape(const_2167.astype('bool'), relay.shape_of(call_2159))) # shape=(2, 9, 10)
output = relay.Tuple([bop_2147,call_2153,var_2154,const_2155,var_2156,bop_2168,])
output2 = relay.Tuple([bop_2147,call_2157,var_2154,const_2155,var_2156,bop_2171,])
func_2172 = relay.Function([var_2145,var_2146,var_2154,var_2156,], output)
mod['func_2172'] = func_2172
mod = relay.transform.InferType()(mod)
var_2173 = relay.var("var_2173", dtype = "int8", shape = (3, 5, 2))#candidate|2173|(3, 5, 2)|var|int8
var_2174 = relay.var("var_2174", dtype = "int8", shape = (3, 5, 2))#candidate|2174|(3, 5, 2)|var|int8
var_2175 = relay.var("var_2175", dtype = "float64", shape = (55,))#candidate|2175|(55,)|var|float64
var_2176 = relay.var("var_2176", dtype = "uint16", shape = (4, 208))#candidate|2176|(4, 208)|var|uint16
output = func_2172(var_2173,var_2174,var_2175,var_2176,)
func_2177 = relay.Function([var_2173,var_2174,var_2175,var_2176,], output)
mutated_mod['func_2177'] = func_2177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2288 = relay.var("var_2288", dtype = "uint8", shape = (14, 15, 11))#candidate|2288|(14, 15, 11)|var|uint8
var_2289 = relay.var("var_2289", dtype = "uint8", shape = (14, 15, 11))#candidate|2289|(14, 15, 11)|var|uint8
bop_2290 = relay.greater_equal(var_2288.astype('bool'), relay.reshape(var_2289.astype('bool'), relay.shape_of(var_2288))) # shape=(14, 15, 11)
func_146_call = mod.get_global_var('func_146')
func_149_call = mutated_mod.get_global_var('func_149')
var_2295 = relay.var("var_2295", dtype = "uint16", shape = (832,))#candidate|2295|(832,)|var|uint16
call_2294 = func_146_call(relay.reshape(var_2295.astype('uint16'), [4, 13, 16]))
call_2296 = func_146_call(relay.reshape(var_2295.astype('uint16'), [4, 13, 16]))
var_2297 = relay.var("var_2297", dtype = "bool", shape = (14, 15, 11))#candidate|2297|(14, 15, 11)|var|bool
bop_2298 = relay.right_shift(bop_2290.astype('int8'), relay.reshape(var_2297.astype('int8'), relay.shape_of(bop_2290))) # shape=(14, 15, 11)
bop_2309 = relay.maximum(bop_2290.astype('uint32'), relay.reshape(bop_2298.astype('uint32'), relay.shape_of(bop_2290))) # shape=(14, 15, 11)
func_2172_call = mod.get_global_var('func_2172')
func_2177_call = mutated_mod.get_global_var('func_2177')
var_2314 = relay.var("var_2314", dtype = "int8", shape = (5, 6))#candidate|2314|(5, 6)|var|int8
var_2315 = relay.var("var_2315", dtype = "float64", shape = (55,))#candidate|2315|(55,)|var|float64
call_2313 = relay.TupleGetItem(func_2172_call(relay.reshape(var_2314.astype('int8'), [3, 5, 2]), relay.reshape(var_2314.astype('int8'), [3, 5, 2]), relay.reshape(var_2315.astype('float64'), [55,]), relay.reshape(var_2295.astype('uint16'), [4, 208]), ), 5)
call_2316 = relay.TupleGetItem(func_2177_call(relay.reshape(var_2314.astype('int8'), [3, 5, 2]), relay.reshape(var_2314.astype('int8'), [3, 5, 2]), relay.reshape(var_2315.astype('float64'), [55,]), relay.reshape(var_2295.astype('uint16'), [4, 208]), ), 5)
output = relay.Tuple([call_2294,var_2295,bop_2309,call_2313,var_2314,var_2315,])
output2 = relay.Tuple([call_2296,var_2295,bop_2309,call_2316,var_2314,var_2315,])
func_2321 = relay.Function([var_2288,var_2289,var_2295,var_2297,var_2314,var_2315,], output)
mod['func_2321'] = func_2321
mod = relay.transform.InferType()(mod)
mutated_mod['func_2321'] = func_2321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2321_call = mutated_mod.get_global_var('func_2321')
var_2323 = relay.var("var_2323", dtype = "uint8", shape = (14, 15, 11))#candidate|2323|(14, 15, 11)|var|uint8
var_2324 = relay.var("var_2324", dtype = "uint8", shape = (14, 15, 11))#candidate|2324|(14, 15, 11)|var|uint8
var_2325 = relay.var("var_2325", dtype = "uint16", shape = (832,))#candidate|2325|(832,)|var|uint16
var_2326 = relay.var("var_2326", dtype = "bool", shape = (14, 15, 11))#candidate|2326|(14, 15, 11)|var|bool
var_2327 = relay.var("var_2327", dtype = "int8", shape = (5, 6))#candidate|2327|(5, 6)|var|int8
var_2328 = relay.var("var_2328", dtype = "float64", shape = (55,))#candidate|2328|(55,)|var|float64
call_2322 = func_2321_call(var_2323,var_2324,var_2325,var_2326,var_2327,var_2328,)
output = call_2322
func_2329 = relay.Function([var_2323,var_2324,var_2325,var_2326,var_2327,var_2328,], output)
mutated_mod['func_2329'] = func_2329
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2550 = relay.var("var_2550", dtype = "float32", shape = (12, 14, 2))#candidate|2550|(12, 14, 2)|var|float32
uop_2551 = relay.cosh(var_2550.astype('float32')) # shape=(12, 14, 2)
uop_2561 = relay.atanh(uop_2551.astype('float32')) # shape=(12, 14, 2)
bop_2568 = relay.maximum(uop_2551.astype('float64'), relay.reshape(var_2550.astype('float64'), relay.shape_of(uop_2551))) # shape=(12, 14, 2)
func_693_call = mod.get_global_var('func_693')
func_696_call = mutated_mod.get_global_var('func_696')
var_2574 = relay.var("var_2574", dtype = "float64", shape = (27,))#candidate|2574|(27,)|var|float64
call_2573 = func_693_call(relay.reshape(var_2574.astype('float64'), [9, 3, 1]))
call_2575 = func_693_call(relay.reshape(var_2574.astype('float64'), [9, 3, 1]))
output = relay.Tuple([uop_2561,bop_2568,call_2573,var_2574,])
output2 = relay.Tuple([uop_2561,bop_2568,call_2575,var_2574,])
func_2584 = relay.Function([var_2550,var_2574,], output)
mod['func_2584'] = func_2584
mod = relay.transform.InferType()(mod)
var_2585 = relay.var("var_2585", dtype = "float32", shape = (12, 14, 2))#candidate|2585|(12, 14, 2)|var|float32
var_2586 = relay.var("var_2586", dtype = "float64", shape = (27,))#candidate|2586|(27,)|var|float64
output = func_2584(var_2585,var_2586,)
func_2587 = relay.Function([var_2585,var_2586,], output)
mutated_mod['func_2587'] = func_2587
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2744 = relay.var("var_2744", dtype = "float32", shape = ())#candidate|2744|()|var|float32
var_2745 = relay.var("var_2745", dtype = "float32", shape = (13, 14, 3))#candidate|2745|(13, 14, 3)|var|float32
bop_2746 = relay.equal(var_2744.astype('bool'), var_2745.astype('bool')) # shape=(13, 14, 3)
uop_2749 = relay.acosh(var_2745.astype('float64')) # shape=(13, 14, 3)
bop_2758 = relay.bitwise_or(uop_2749.astype('int8'), relay.reshape(bop_2746.astype('int8'), relay.shape_of(uop_2749))) # shape=(13, 14, 3)
var_2763 = relay.var("var_2763", dtype = "float64", shape = (13, 14, 3))#candidate|2763|(13, 14, 3)|var|float64
bop_2764 = relay.bitwise_xor(uop_2749.astype('uint32'), relay.reshape(var_2763.astype('uint32'), relay.shape_of(uop_2749))) # shape=(13, 14, 3)
bop_2774 = relay.bitwise_and(uop_2749.astype('uint64'), var_2744.astype('uint64')) # shape=(13, 14, 3)
var_2780 = relay.var("var_2780", dtype = "int8", shape = (13, 14, 3))#candidate|2780|(13, 14, 3)|var|int8
bop_2781 = relay.greater_equal(bop_2758.astype('bool'), relay.reshape(var_2780.astype('bool'), relay.shape_of(bop_2758))) # shape=(13, 14, 3)
func_325_call = mod.get_global_var('func_325')
func_328_call = mutated_mod.get_global_var('func_328')
var_2785 = relay.var("var_2785", dtype = "float32", shape = (1170,))#candidate|2785|(1170,)|var|float32
call_2784 = relay.TupleGetItem(func_325_call(relay.reshape(var_2785.astype('float32'), [1170,])), 1)
call_2786 = relay.TupleGetItem(func_328_call(relay.reshape(var_2785.astype('float32'), [1170,])), 1)
var_2793 = relay.var("var_2793", dtype = "float64", shape = (13, 14, 3))#candidate|2793|(13, 14, 3)|var|float64
bop_2794 = relay.greater(uop_2749.astype('bool'), relay.reshape(var_2793.astype('bool'), relay.shape_of(uop_2749))) # shape=(13, 14, 3)
output = relay.Tuple([bop_2764,bop_2774,bop_2781,call_2784,var_2785,bop_2794,])
output2 = relay.Tuple([bop_2764,bop_2774,bop_2781,call_2786,var_2785,bop_2794,])
func_2797 = relay.Function([var_2744,var_2745,var_2763,var_2780,var_2785,var_2793,], output)
mod['func_2797'] = func_2797
mod = relay.transform.InferType()(mod)
mutated_mod['func_2797'] = func_2797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2797_call = mutated_mod.get_global_var('func_2797')
var_2799 = relay.var("var_2799", dtype = "float32", shape = ())#candidate|2799|()|var|float32
var_2800 = relay.var("var_2800", dtype = "float32", shape = (13, 14, 3))#candidate|2800|(13, 14, 3)|var|float32
var_2801 = relay.var("var_2801", dtype = "float64", shape = (13, 14, 3))#candidate|2801|(13, 14, 3)|var|float64
var_2802 = relay.var("var_2802", dtype = "int8", shape = (13, 14, 3))#candidate|2802|(13, 14, 3)|var|int8
var_2803 = relay.var("var_2803", dtype = "float32", shape = (1170,))#candidate|2803|(1170,)|var|float32
var_2804 = relay.var("var_2804", dtype = "float64", shape = (13, 14, 3))#candidate|2804|(13, 14, 3)|var|float64
call_2798 = func_2797_call(var_2799,var_2800,var_2801,var_2802,var_2803,var_2804,)
output = call_2798
func_2805 = relay.Function([var_2799,var_2800,var_2801,var_2802,var_2803,var_2804,], output)
mutated_mod['func_2805'] = func_2805
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2873 = relay.var("var_2873", dtype = "int16", shape = (12, 6, 8))#candidate|2873|(12, 6, 8)|var|int16
const_2874 = relay.const([[[-8,-6,3,6,3,-2,-3,-2],[-1,7,-7,-4,1,-5,4,6],[2,-6,4,-2,-7,-3,9,9],[2,-5,-1,7,2,-10,1,-8],[-6,7,6,8,-6,-6,-6,-4],[-3,7,-7,-5,-8,5,10,2]],[[8,7,-9,-1,-6,9,-2,-2],[1,6,-6,8,7,-5,7,-3],[5,2,9,-10,-10,8,-1,6],[10,3,-4,-1,-4,-8,-4,-7],[4,-6,5,-7,4,-7,-8,8],[-5,-5,1,10,4,6,10,8]],[[5,5,9,-4,-9,-7,-2,-4],[-7,-5,-9,-4,4,1,-3,6],[-5,9,4,9,2,10,-3,2],[7,8,2,-9,2,-8,10,-7],[6,-3,9,4,5,7,10,10],[7,-3,2,5,1,10,-9,8]],[[-3,6,2,3,-3,7,-10,-3],[7,-5,-8,-2,4,-10,-9,10],[1,3,-5,-1,9,-4,-5,5],[2,10,10,9,-3,1,-9,-3],[-7,6,-5,10,4,-4,-2,-2],[10,-6,-1,-8,-4,-6,10,-7]],[[-10,-8,-9,10,6,-4,-4,3],[-8,6,-4,6,3,-4,5,-1],[4,1,-10,7,-6,2,-1,4],[6,1,-4,9,-10,2,4,-2],[3,-2,-4,-8,-3,-8,9,-4],[-4,4,-1,-7,6,10,-3,8]],[[4,10,8,6,-10,6,8,4],[-2,-2,-3,-7,8,-1,-10,6],[9,-1,6,10,6,5,3,-8],[8,-1,-6,-2,-8,5,3,1],[1,-1,-1,-1,9,1,-5,-9],[6,8,10,8,4,-5,9,1]],[[10,-5,4,-6,-3,-5,5,-5],[-5,6,-2,7,-10,-5,10,8],[-7,-1,-10,2,-3,4,-2,-10],[2,6,10,2,-6,10,-2,-6],[-1,7,-3,5,-9,-7,-9,-10],[2,-7,-7,-4,-7,-1,-3,5]],[[3,5,5,5,10,3,-8,2],[-8,4,-9,10,-5,2,-7,1],[-1,7,6,-7,3,-10,6,-1],[-3,2,7,8,3,9,-9,2],[-9,-7,3,3,-6,7,7,6],[4,3,-10,-3,-3,4,5,3]],[[7,8,3,-5,6,-3,-1,2],[7,-7,6,-9,-4,-2,-9,2],[-4,5,4,10,-4,-5,-2,-2],[-4,-5,9,-1,8,-2,8,-10],[-6,2,7,-4,-5,-7,5,5],[8,-2,-5,-10,6,-10,7,7]],[[-7,7,-2,-6,-7,-1,2,-4],[7,7,-8,-7,-10,9,8,-3],[6,10,1,3,1,-2,2,-5],[-1,5,9,4,-10,7,8,7],[-1,9,5,8,8,10,8,-10],[-8,-8,8,8,-4,8,-6,5]],[[-1,9,-10,3,9,-7,9,-5],[4,-5,7,2,10,-5,-4,8],[-9,-1,-4,-5,8,-9,3,5],[7,-10,5,8,-2,6,5,1],[-8,3,9,-6,-1,-3,9,2],[7,-2,3,-8,5,1,7,-6]],[[-6,-9,-8,-1,10,-5,-1,-4],[-10,1,-10,-10,-4,-7,-5,-5],[1,-6,-9,-7,-1,7,-1,8],[-1,5,-9,-4,-8,-3,-3,5],[-4,-2,8,-3,4,-10,-1,4],[-9,-3,6,1,-8,6,-3,-7]]], dtype = "int16")#candidate|2874|(12, 6, 8)|const|int16
bop_2875 = relay.maximum(var_2873.astype('int16'), relay.reshape(const_2874.astype('int16'), relay.shape_of(var_2873))) # shape=(12, 6, 8)
bop_2891 = relay.floor_mod(bop_2875.astype('float32'), relay.reshape(const_2874.astype('float32'), relay.shape_of(bop_2875))) # shape=(12, 6, 8)
func_1238_call = mod.get_global_var('func_1238')
func_1240_call = mutated_mod.get_global_var('func_1240')
var_2898 = relay.var("var_2898", dtype = "float32", shape = (1170,))#candidate|2898|(1170,)|var|float32
call_2897 = relay.TupleGetItem(func_1238_call(relay.reshape(var_2898.astype('float32'), [1, 1170])), 0)
call_2899 = relay.TupleGetItem(func_1240_call(relay.reshape(var_2898.astype('float32'), [1, 1170])), 0)
func_494_call = mod.get_global_var('func_494')
func_500_call = mutated_mod.get_global_var('func_500')
const_2901 = relay.const(-6.280188, dtype = "float32")#candidate|2901|()|const|float32
var_2902 = relay.var("var_2902", dtype = "float32", shape = (108,))#candidate|2902|(108,)|var|float32
var_2903 = relay.var("var_2903", dtype = "uint16", shape = (832,))#candidate|2903|(832,)|var|uint16
call_2900 = relay.TupleGetItem(func_494_call(relay.reshape(const_2901.astype('float32'), []), relay.reshape(var_2902.astype('float32'), [6, 6, 3]), relay.reshape(var_2898.astype('float32'), [390, 3]), relay.reshape(var_2903.astype('uint16'), [832,]), ), 6)
call_2904 = relay.TupleGetItem(func_500_call(relay.reshape(const_2901.astype('float32'), []), relay.reshape(var_2902.astype('float32'), [6, 6, 3]), relay.reshape(var_2898.astype('float32'), [390, 3]), relay.reshape(var_2903.astype('uint16'), [832,]), ), 6)
uop_2911 = relay.asinh(call_2900.astype('float32')) # shape=(4, 13, 16)
uop_2913 = relay.asinh(call_2904.astype('float32')) # shape=(4, 13, 16)
output = relay.Tuple([bop_2891,call_2897,var_2898,const_2901,var_2902,var_2903,uop_2911,])
output2 = relay.Tuple([bop_2891,call_2899,var_2898,const_2901,var_2902,var_2903,uop_2913,])
func_2914 = relay.Function([var_2873,var_2898,var_2902,var_2903,], output)
mod['func_2914'] = func_2914
mod = relay.transform.InferType()(mod)
mutated_mod['func_2914'] = func_2914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2914_call = mutated_mod.get_global_var('func_2914')
var_2916 = relay.var("var_2916", dtype = "int16", shape = (12, 6, 8))#candidate|2916|(12, 6, 8)|var|int16
var_2917 = relay.var("var_2917", dtype = "float32", shape = (1170,))#candidate|2917|(1170,)|var|float32
var_2918 = relay.var("var_2918", dtype = "float32", shape = (108,))#candidate|2918|(108,)|var|float32
var_2919 = relay.var("var_2919", dtype = "uint16", shape = (832,))#candidate|2919|(832,)|var|uint16
call_2915 = func_2914_call(var_2916,var_2917,var_2918,var_2919,)
output = call_2915
func_2920 = relay.Function([var_2916,var_2917,var_2918,var_2919,], output)
mutated_mod['func_2920'] = func_2920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3176 = relay.var("var_3176", dtype = "uint16", shape = ())#candidate|3176|()|var|uint16
var_3177 = relay.var("var_3177", dtype = "uint16", shape = (15, 7, 9))#candidate|3177|(15, 7, 9)|var|uint16
bop_3178 = relay.multiply(var_3176.astype('uint16'), var_3177.astype('uint16')) # shape=(15, 7, 9)
output = bop_3178
output2 = bop_3178
func_3190 = relay.Function([var_3176,var_3177,], output)
mod['func_3190'] = func_3190
mod = relay.transform.InferType()(mod)
var_3191 = relay.var("var_3191", dtype = "uint16", shape = ())#candidate|3191|()|var|uint16
var_3192 = relay.var("var_3192", dtype = "uint16", shape = (15, 7, 9))#candidate|3192|(15, 7, 9)|var|uint16
output = func_3190(var_3191,var_3192,)
func_3193 = relay.Function([var_3191,var_3192,], output)
mutated_mod['func_3193'] = func_3193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3402 = relay.var("var_3402", dtype = "float32", shape = (1, 6, 13))#candidate|3402|(1, 6, 13)|var|float32
const_3403 = relay.const([[[-1.622259,9.226126,-7.474127,4.734917,-5.487834,6.988392,-6.885899,0.731516,-1.193113,-7.021202,-3.329600,-3.650536,-1.186195],[-7.269811,-8.355087,9.628428,5.680964,-9.974170,3.643099,-2.414000,-4.317636,7.276023,7.243650,-6.856510,-7.015662,-8.894313],[3.332868,7.621978,7.631908,-1.978916,3.962205,4.983339,-4.797354,-5.632575,1.605187,1.489201,-9.082934,-8.892299,2.083885],[-5.735530,1.693634,3.694540,5.126679,-1.521223,-7.359802,-8.606067,-5.503950,2.750041,8.892898,7.230237,-4.527128,5.602951],[1.583844,9.902308,-2.262901,-9.792576,-9.574790,-4.217989,-7.312529,-4.283419,7.382984,-5.038554,-7.155680,-4.119575,-0.325684],[-3.243728,-7.118498,8.485280,3.622508,-0.496036,-7.363319,8.623909,-4.983351,-1.687584,-0.446816,-7.195884,-1.044327,-2.441007]],[[-1.794688,-1.961256,-5.907054,1.061211,-9.128232,-9.264110,4.492829,9.546256,5.698753,-3.327546,-7.421384,9.509054,-3.166035],[-7.631144,-2.701832,2.849961,3.726017,5.046332,1.685422,-6.432244,-9.569269,5.497453,-6.336162,2.711425,-3.578580,5.949030],[5.432458,9.265377,-7.306647,-5.417731,-0.496537,1.617103,0.282123,0.865895,-4.812227,6.355725,-4.075168,-8.840902,0.943872],[4.093560,-7.401455,4.812333,6.952766,8.142469,-2.899733,-2.635024,1.380470,4.123418,2.835206,4.123548,-2.306093,-6.179752],[-1.010868,0.534842,-7.798209,1.233426,-8.786887,-4.914512,7.386471,7.797614,2.192497,3.853814,-0.373654,-0.384488,7.930396],[4.299555,-4.298534,1.201832,-2.298753,-5.672936,5.474515,4.921998,-7.736431,9.756943,5.457443,-3.667479,-0.648392,-2.267450]],[[-1.910257,-4.536358,-5.826435,9.285814,0.711928,1.074427,-0.844565,0.344695,6.388909,6.935578,-1.682081,-6.459053,7.416511],[6.288552,-6.191552,-8.782949,-4.621405,-5.888659,-1.153700,3.024817,-2.649630,-7.787282,-5.154836,-7.506258,-8.715732,-0.929756],[-8.802366,6.902320,9.269134,-2.761108,-8.048967,-3.911686,1.760046,7.355234,-1.761929,-5.555276,-6.817742,0.791421,-1.133402],[-0.765638,5.979569,4.631953,6.777410,-0.682895,5.231911,-3.876281,3.273124,-4.359548,-5.846827,2.259014,-7.939308,7.303465],[-1.096866,-3.394527,3.517492,9.473160,2.759704,-1.500536,2.832941,0.488744,6.923080,-5.417541,-0.357798,-1.134027,2.135767],[7.276039,4.796196,-3.849217,-0.233318,-1.274376,6.092383,-1.625174,-7.807933,-0.578001,6.094110,3.086238,3.360407,-5.777138]],[[-2.768289,-3.654005,-0.876121,-9.342590,3.828370,3.732554,6.869206,6.521556,3.783560,4.380280,-0.837138,-7.443343,7.445063],[3.447008,7.278086,-1.899042,-2.855056,6.420716,-6.020668,-3.404381,-5.674288,7.342442,2.964590,3.098927,5.465865,-6.125412],[-0.632743,5.480244,-1.718861,-1.831961,-2.641192,-9.499850,-2.777694,7.350223,3.996987,-7.082893,0.044905,0.172720,-3.222017],[-6.382751,3.128661,0.740660,7.174892,8.374117,5.689304,5.285096,-1.901068,-7.661280,-7.144403,8.405618,3.726996,8.045722],[-4.739061,5.258641,8.413406,-0.807768,2.768752,-2.866244,-0.355290,-5.935840,-5.734396,-3.529665,0.093141,0.187178,-7.317696],[3.768750,-6.760470,5.204571,9.880764,3.100537,-6.966599,4.760184,7.504849,-7.766842,4.270249,-8.318113,-5.452344,-4.882396]],[[7.613893,8.908114,1.616290,-3.070896,-6.183253,-0.370705,-7.397768,-0.830650,7.795306,-7.039644,-3.428759,-9.199503,-3.639942],[4.251179,5.978223,-9.738466,3.159013,3.501715,7.014570,-3.237116,3.955655,8.046702,-0.197777,-6.250859,-7.428252,-4.115333],[2.671237,-7.571933,2.706410,-7.785827,-0.341242,-7.973960,6.926158,-0.663384,2.939928,-8.727725,8.271678,-4.401101,4.479038],[1.248924,-3.368880,-7.008068,-2.695254,1.092213,-2.691993,9.546459,-1.889206,-3.517165,3.100609,-1.603391,7.962332,4.688527],[5.443690,-2.772030,-4.032030,-4.239927,-8.614769,-9.083248,8.294864,-9.576311,2.316066,-5.293520,5.188953,6.028555,8.274188],[6.301286,-2.430446,3.733986,3.887991,6.964684,1.215597,-4.796516,-8.996979,7.860487,-9.196061,-1.354429,0.365554,7.199217]],[[6.043174,3.885796,7.791438,-4.988361,6.078109,1.829183,0.768727,-6.896971,-0.700165,-5.933017,1.002903,-7.753754,-5.045121],[5.990255,-7.693891,-9.878289,-8.166146,-4.679043,2.400820,5.619008,4.914095,9.785742,7.926194,2.444349,-3.409420,4.417353],[0.440164,5.750099,-5.361663,8.934204,5.185495,-9.269418,8.848344,0.133270,1.322329,6.084296,6.740045,-5.025299,-3.843887],[-9.338201,8.768440,-8.596807,-5.826356,-0.242628,4.821674,4.948193,-0.488416,-5.942494,-3.110847,-9.152145,-1.308565,-2.952091],[-9.213670,9.034772,1.905641,9.471084,8.057063,4.054825,2.838961,-7.493359,-5.215824,2.171136,5.990223,-9.135794,-3.436754],[-9.712269,9.021385,-8.834145,0.291655,-7.567424,-2.278924,5.156033,-7.153502,4.230011,1.571439,-5.614238,5.369848,-4.912989]],[[9.354523,-3.912336,0.918992,-5.375674,-5.869257,-9.774073,-8.239385,-2.400825,-6.853039,-9.678790,-7.629411,-8.450547,9.411225],[1.143223,-5.161375,-1.670967,3.562443,5.244635,8.835788,2.967468,3.680657,9.651697,-9.194186,-0.042508,8.960731,3.065212],[-6.199774,4.861337,-7.951918,-3.452330,-0.180522,-2.935529,6.822346,-1.486549,-3.694036,-1.034604,7.668151,5.432740,7.908755],[-7.279033,7.818985,2.906575,5.045004,7.262520,9.094312,1.254196,-1.577769,0.481276,7.289441,-4.949293,8.463941,1.903112],[-4.470520,7.617659,-7.191109,6.109452,1.178208,4.788047,6.722033,8.576620,-7.576759,1.380980,-9.012322,3.587908,-6.963643],[9.486855,-3.989089,3.631269,-1.261450,1.827251,-6.320910,-8.371732,9.159678,6.864818,-9.119323,4.310427,6.034061,-6.558373]],[[-6.890078,6.360301,1.670245,-0.928577,-2.057869,5.365681,-3.496590,0.332102,1.038188,3.501292,-0.568188,5.273511,1.457190],[8.677479,7.715256,-4.483130,7.073639,2.207934,0.370802,5.353790,0.659407,-2.899438,1.004052,-1.570533,5.389772,7.926892],[-2.490218,-6.362231,0.467393,-4.392414,9.146149,-8.832917,9.351010,-1.795676,-5.941096,-4.812110,-0.674299,5.892079,-8.310803],[-6.082376,2.703816,8.044725,-5.054879,9.850698,-1.221680,9.676778,9.449018,-4.901115,4.356796,4.480268,-5.072963,4.116587],[-4.322990,-2.320048,-8.594545,-2.251548,-3.651729,-3.393912,8.765812,3.153759,6.528567,-8.569939,-3.015983,1.445312,4.115400],[4.189099,-4.292414,-0.077233,-0.674609,-9.099806,1.980551,-6.231779,-6.534328,-2.443428,1.547619,9.222611,-2.508444,9.945348]],[[8.161203,-6.055392,6.482001,-1.947946,-0.374082,-1.364350,-5.011540,-5.312581,6.643018,4.243068,7.530066,5.712555,6.692587],[0.965874,-1.598338,8.021484,-5.360363,-8.478699,7.374795,6.973942,7.138946,-2.772412,-6.975876,9.648453,-6.535209,-7.804749],[3.340090,-3.238830,-1.756445,-0.725020,-6.610906,-7.253880,-5.546571,-4.460866,-6.270693,2.205315,6.998235,4.927548,-0.644897],[2.489781,1.906748,-4.148190,9.259020,-9.602491,3.080968,0.555929,-9.575813,-9.303637,-9.615574,-0.300853,-3.059604,0.778659],[-6.590160,-4.662659,0.214730,0.278981,8.124499,9.798620,-0.925168,-3.208077,7.091481,6.033324,-1.062358,-1.608527,-6.232576],[7.016863,-0.549809,-5.514999,7.970390,-7.930866,-5.341397,4.156126,7.883694,-5.670958,-3.375761,5.047308,-5.255847,5.476543]],[[-4.111113,-0.434479,1.849349,-3.571503,-0.808197,-4.181258,3.243729,-0.922565,-2.786487,5.906062,9.384280,9.751347,-4.098316],[7.648385,2.279177,2.912023,-3.887046,-8.875853,8.412954,3.467354,2.547658,7.656417,-8.030567,-4.584154,-6.170317,7.075669],[1.930028,3.603073,8.936063,5.180510,-7.492571,7.221476,-5.426089,-9.373291,-8.155942,5.565379,7.121229,-5.533554,-8.970411],[-0.746294,-1.302656,-2.214796,-5.751061,3.043084,-1.583851,-9.930833,-2.655486,7.793396,2.657820,-7.301828,-7.130723,2.789620],[5.217617,6.168068,-3.398189,-9.263244,4.171543,-3.085779,-6.818640,-6.703295,-5.359156,8.156547,-3.663314,1.229929,-0.970829],[2.363191,7.633976,-7.652550,-2.250968,1.447570,3.759770,5.014549,-7.555341,-2.723674,5.459439,-7.517429,1.952263,-2.540695]],[[-8.256629,3.451987,-5.614142,5.424375,0.670782,-1.688761,-7.387788,-7.134863,8.508219,-6.768918,-6.950150,-4.313395,7.075681],[9.795050,1.052203,-9.238241,-0.747777,-7.031810,-5.847753,-2.305209,-9.626037,8.273681,-1.393030,-6.676912,9.537636,-8.625902],[-6.448170,-3.387190,8.943920,-8.389287,4.490260,-0.989088,2.596223,-8.026101,0.693952,5.601567,0.225508,-3.732331,4.680678],[3.562808,3.836105,-0.382659,0.672345,-9.976722,-6.162013,5.653151,1.986355,6.475880,-1.014474,7.326133,4.223188,5.340119],[8.451682,-3.216715,9.422056,-4.655023,6.097835,-4.731239,9.801400,4.966132,3.556778,8.033734,8.924079,4.371109,5.789870],[5.966503,-2.543805,2.683191,-6.828953,-9.204090,-2.353402,-8.246822,9.783111,-0.216684,1.170630,-7.025447,-4.270200,-1.981855]],[[3.466200,1.468238,-4.725301,3.378155,-6.673924,-0.967222,-0.511129,-7.456552,2.843330,7.295770,6.569199,1.317557,6.266652],[9.760510,-7.671248,2.886911,-3.929628,-2.132518,9.017628,5.856298,-8.349265,-6.659105,-2.936173,3.148419,-7.519602,-8.230022],[-8.155493,-4.361339,4.342521,5.282672,9.243189,4.889075,-7.896177,-9.645938,0.729463,3.634597,-9.010960,7.165300,-0.038244],[-1.376269,9.340110,-2.718045,5.498361,3.060095,-7.348008,-0.221424,-9.662806,7.291037,9.522524,-3.809702,7.128062,-8.980572],[-7.900319,-8.966810,0.394369,0.385641,3.604338,-5.291527,-6.997921,-7.348684,3.101370,7.211630,-4.406909,-9.188767,-0.747157],[4.234716,-5.232739,0.936573,4.430387,8.061906,7.805387,2.263068,-1.658197,4.816675,5.393146,7.151562,-9.131128,-9.298608]],[[-8.991191,-3.308957,-5.192755,-5.008970,1.683474,4.208645,-4.546547,9.557967,6.024210,-4.735527,5.452034,-5.810944,7.020404],[3.215327,-3.209168,2.116900,-3.231240,-9.142667,1.789695,5.457826,-0.784673,7.970320,8.174078,-5.240218,5.322916,-4.387663],[-5.914465,0.696055,-0.444088,2.478683,6.969293,9.790822,-2.541737,-0.392403,1.513763,2.453998,-7.738582,-2.555077,6.918436],[-1.877277,3.066299,0.122650,2.361547,-3.670528,5.158351,7.970802,-2.827171,-4.047802,-5.268494,-0.875633,-3.039000,5.576305],[-7.376077,-8.984870,2.030111,-0.832638,1.762286,-4.454553,-9.534273,5.783101,3.714074,-5.938338,0.705812,-4.338316,0.179272],[1.359948,-4.379012,-4.630778,-6.326319,5.133790,6.159111,4.050572,9.968716,-2.775998,-9.099179,-7.837799,-9.204275,0.521127]],[[3.854010,4.350999,-5.151303,0.084270,8.064839,7.113416,-7.691632,8.157128,-1.156827,9.823517,2.412745,8.075608,9.284897],[4.576963,4.457082,7.555091,-3.306784,1.912844,-3.453315,-7.416097,5.809338,4.716846,-3.497646,5.212300,2.528644,-8.737128],[-0.352783,-0.557569,2.253909,5.434396,-1.274796,-2.028628,7.133128,3.091981,-1.784835,-7.283792,7.448547,1.334593,-9.053558],[-4.988306,6.424268,-7.698962,0.457993,1.487666,-7.934230,7.554419,-9.807165,-7.292298,7.508842,4.076265,5.305246,0.610764],[6.769786,-4.164488,-3.649455,-1.713187,8.362032,2.385829,2.511903,-5.574297,-1.804133,9.433367,8.513346,-0.257399,1.768578],[-6.502299,8.770716,-3.778407,-3.778973,5.041553,1.060777,6.017757,-4.164318,3.731004,6.766910,-6.318713,4.002923,-9.476338]]], dtype = "float32")#candidate|3403|(14, 6, 13)|const|float32
bop_3404 = relay.mod(var_3402.astype('float32'), const_3403.astype('float32')) # shape=(14, 6, 13)
output = bop_3404
output2 = bop_3404
func_3408 = relay.Function([var_3402,], output)
mod['func_3408'] = func_3408
mod = relay.transform.InferType()(mod)
var_3409 = relay.var("var_3409", dtype = "float32", shape = (1, 6, 13))#candidate|3409|(1, 6, 13)|var|float32
output = func_3408(var_3409)
func_3410 = relay.Function([var_3409], output)
mutated_mod['func_3410'] = func_3410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3880 = relay.var("var_3880", dtype = "int32", shape = (10, 11, 4))#candidate|3880|(10, 11, 4)|var|int32
const_3881 = relay.const([[[-6,-4,-1,9],[5,-10,-10,-9],[5,1,-9,-6],[3,1,-2,9],[3,8,-6,-6],[10,-1,2,1],[3,9,2,2],[-7,1,-5,9],[6,2,4,-4],[3,5,5,-5],[9,2,-9,-7]],[[7,-8,-8,2],[6,-5,3,-5],[3,4,-5,10],[-4,5,9,10],[2,2,-6,-4],[-10,3,8,-2],[5,1,-6,5],[-5,3,-4,2],[2,-6,8,-1],[10,-4,9,9],[1,-5,3,6]],[[2,-4,2,-2],[1,1,1,10],[5,8,-7,1],[1,6,7,3],[-1,6,4,8],[-8,-7,-2,-10],[8,-2,-7,4],[8,-3,3,-4],[5,-8,10,6],[-6,6,-7,-4],[6,-1,-8,2]],[[-6,2,-1,4],[8,4,-7,-5],[3,-10,10,5],[-1,-3,-1,6],[10,-5,-6,-8],[2,-10,4,1],[-7,-8,-6,-4],[-7,-7,-2,6],[-10,-6,1,-1],[-7,9,6,-9],[-4,3,7,-8]],[[-4,5,-5,-9],[-1,3,8,2],[-5,-7,4,6],[-2,-7,-6,-5],[9,8,8,-10],[2,-10,7,6],[-2,3,-8,3],[7,10,4,-6],[7,8,-1,6],[-4,-6,6,-3],[4,4,6,-1]],[[-7,6,8,6],[-6,-3,-5,-2],[5,1,7,-10],[9,-2,-3,-8],[8,4,8,3],[8,-2,-5,3],[-10,1,-8,10],[-9,4,9,-2],[8,5,8,1],[-4,-1,7,8],[8,-7,-4,-6]],[[1,-3,-4,9],[3,-1,10,8],[-4,4,3,-9],[5,9,-4,10],[-7,-8,-10,-6],[-1,-7,-6,6],[4,-1,3,-9],[-7,6,3,9],[-9,-4,5,5],[6,8,6,4],[-3,-8,7,5]],[[-6,-3,6,-3],[-10,5,7,-1],[1,9,-1,-7],[7,1,5,-8],[-6,1,5,-7],[1,8,4,-2],[-7,10,3,-4],[-5,6,2,10],[-5,10,-5,2],[-10,5,-10,-9],[-8,-6,-10,-3]],[[7,6,3,7],[-7,7,3,9],[2,9,8,2],[9,-9,10,4],[9,-7,6,-2],[9,8,-1,-7],[-8,6,4,-4],[-5,4,4,3],[7,-8,3,9],[-9,4,-1,-4],[7,7,-9,-4]],[[5,-2,-7,-2],[6,-9,-10,-9],[-5,-3,-3,-7],[9,2,6,-4],[6,-8,2,7],[-2,7,7,4],[-10,-8,2,-5],[-1,8,-3,-6],[10,-1,-6,10],[-5,1,-4,3],[2,9,9,6]]], dtype = "int32")#candidate|3881|(10, 11, 4)|const|int32
bop_3882 = relay.not_equal(var_3880.astype('bool'), relay.reshape(const_3881.astype('bool'), relay.shape_of(var_3880))) # shape=(10, 11, 4)
uop_3885 = relay.log(bop_3882.astype('float64')) # shape=(10, 11, 4)
output = relay.Tuple([uop_3885,])
output2 = relay.Tuple([uop_3885,])
func_3891 = relay.Function([var_3880,], output)
mod['func_3891'] = func_3891
mod = relay.transform.InferType()(mod)
var_3892 = relay.var("var_3892", dtype = "int32", shape = (10, 11, 4))#candidate|3892|(10, 11, 4)|var|int32
output = func_3891(var_3892)
func_3893 = relay.Function([var_3892], output)
mutated_mod['func_3893'] = func_3893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3895 = relay.var("var_3895", dtype = "float32", shape = (1, 11, 7))#candidate|3895|(1, 11, 7)|var|float32
uop_3896 = relay.atanh(var_3895.astype('float32')) # shape=(1, 11, 7)
var_3902 = relay.var("var_3902", dtype = "float32", shape = (12, 11, 7))#candidate|3902|(12, 11, 7)|var|float32
bop_3903 = relay.minimum(uop_3896.astype('int64'), var_3902.astype('int64')) # shape=(12, 11, 7)
output = bop_3903
output2 = bop_3903
func_3910 = relay.Function([var_3895,var_3902,], output)
mod['func_3910'] = func_3910
mod = relay.transform.InferType()(mod)
mutated_mod['func_3910'] = func_3910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3910_call = mutated_mod.get_global_var('func_3910')
var_3912 = relay.var("var_3912", dtype = "float32", shape = (1, 11, 7))#candidate|3912|(1, 11, 7)|var|float32
var_3913 = relay.var("var_3913", dtype = "float32", shape = (12, 11, 7))#candidate|3913|(12, 11, 7)|var|float32
call_3911 = func_3910_call(var_3912,var_3913,)
output = call_3911
func_3914 = relay.Function([var_3912,var_3913,], output)
mutated_mod['func_3914'] = func_3914
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3965 = relay.const([[[6,3,-9,5,9],[6,-6,1,6,-10],[-8,4,1,10,-1],[-3,3,5,10,-5],[8,7,10,1,-9],[-3,-4,-4,3,8],[-1,8,-6,-5,5],[-5,1,6,-8,-7],[10,8,7,10,-4],[-3,-9,10,-6,-4],[-4,3,-1,-9,7],[-9,-6,-2,-7,-4]],[[-1,9,-1,-7,-1],[-9,2,-2,-2,5],[7,-6,-1,5,-3],[2,-7,5,-7,5],[5,-6,-6,3,9],[7,2,-8,-4,-4],[1,10,-6,-6,-9],[-4,6,3,-8,10],[-4,3,10,10,4],[2,1,-5,-9,1],[-5,2,3,-1,-2],[8,8,4,3,-2]],[[10,-4,8,-8,-4],[2,-4,-1,10,7],[5,-7,-7,8,7],[-6,-6,7,-4,10],[6,7,6,6,-2],[-7,-10,-7,-7,6],[-7,-10,5,-8,2],[6,9,9,-3,-1],[-10,9,5,7,-1],[6,7,4,3,10],[-7,5,-2,-1,-1],[-10,-3,3,5,9]],[[-4,5,-3,3,10],[-1,-4,4,3,2],[8,-7,9,8,-9],[-1,4,-2,6,2],[1,-4,2,-2,3],[-10,-4,-1,-4,-8],[-8,6,6,8,7],[7,-5,-2,8,3],[8,2,10,-6,4],[9,-4,3,-7,1],[1,2,8,5,10],[7,3,9,-7,-10]],[[-10,3,8,-1,7],[8,9,-3,6,2],[8,-3,1,4,6],[6,-7,-7,5,9],[-1,7,7,-6,10],[8,-7,8,-2,3],[10,-1,8,-1,9],[2,-5,1,-3,-4],[4,2,2,7,-6],[-1,2,3,-3,3],[-2,-1,8,-10,8],[5,-7,-3,-8,-2]],[[-3,-1,6,-4,-6],[-10,-6,7,4,4],[-1,-4,-5,-7,9],[9,4,-8,-4,1],[1,-10,6,-8,5],[2,2,-6,5,2],[-5,-8,1,-1,-8],[6,-8,6,-4,-2],[-8,-6,-2,-7,-8],[-3,-10,-3,-6,-7],[-9,-4,7,-10,-4],[-1,9,-3,4,10]],[[-9,-4,-3,-9,1],[1,-6,8,-7,-8],[3,3,1,-4,6],[-4,6,-3,6,8],[-7,-9,6,-10,-10],[-3,-8,-4,2,1],[-2,2,-6,7,-6],[-9,-3,-10,8,1],[-6,10,1,-2,-3],[-3,-1,-5,2,7],[6,-5,-6,10,-2],[-3,-5,4,-8,3]],[[1,-10,-2,9,6],[6,-4,3,-3,-4],[-5,-5,2,10,-8],[-3,8,-3,-8,-6],[2,6,-2,-6,5],[-2,-8,3,-8,10],[-4,7,8,-4,-4],[-1,-4,-2,10,-3],[-7,3,4,7,-9],[-10,-2,6,-6,-8],[-3,-9,-8,1,-9],[10,1,-3,-1,7]],[[-7,-4,-1,-1,-3],[9,8,10,9,3],[-8,-3,-8,4,-9],[1,7,5,8,-8],[6,6,5,1,1],[-1,-9,-10,5,8],[4,-9,7,-10,1],[5,-5,-3,-10,6],[10,-2,6,-8,5],[-4,-5,1,-7,6],[-1,7,-5,8,-5],[-9,-4,4,3,10]],[[7,-1,6,-6,-5],[1,7,-1,8,-8],[-2,10,7,5,-7],[10,-8,8,-2,-7],[7,2,7,6,1],[-10,2,8,-5,1],[-9,-6,3,2,-8],[-2,-8,1,-8,-1],[-3,-1,-1,6,3],[6,10,8,5,1],[-7,-8,-9,-10,-6],[-3,2,-5,2,-6]]], dtype = "uint64")#candidate|3965|(10, 12, 5)|const|uint64
const_3966 = relay.const([[[-3,2,-3,-10,-6],[-10,1,8,-5,-8],[8,9,-3,6,-8],[-7,7,-9,-6,-1],[-3,1,-6,-5,-3],[8,-10,5,-8,1],[-1,-10,-10,9,7],[6,-2,4,-8,-9],[-4,4,-5,-1,-2],[-2,-3,-3,9,-8],[-1,-6,5,-1,1],[-8,8,-10,3,-10]],[[6,-7,-2,3,-2],[10,7,-8,-6,-7],[-10,3,-9,3,-6],[6,-4,-2,-5,10],[8,-1,-5,-9,-10],[9,1,10,-5,-1],[-5,-5,-2,-7,-2],[2,-8,4,4,4],[10,-5,-5,1,7],[1,9,-1,2,5],[5,-3,2,6,-1],[-1,-6,-1,1,-9]],[[2,-10,-7,-1,9],[3,1,8,-7,1],[-7,-8,9,1,1],[-10,-1,5,1,9],[10,-5,9,-6,6],[-4,-10,-5,4,-2],[-8,-10,-3,9,1],[-4,-9,3,10,6],[-9,-10,-3,-1,-3],[-3,-5,9,10,-2],[7,3,4,-6,7],[4,-10,-6,-1,3]],[[-2,-2,9,-5,-3],[-1,2,6,10,-2],[-2,5,-1,9,10],[6,8,8,-3,-8],[1,-5,-1,-9,-3],[-8,-9,8,-3,-4],[9,-4,-9,-4,-7],[-7,2,-1,4,-4],[5,3,4,-4,10],[-2,7,6,2,8],[-4,8,-8,-7,-3],[3,-2,9,-10,6]],[[10,-9,-6,5,-6],[-7,-8,6,-8,-2],[3,-8,-2,2,-2],[1,6,1,6,-2],[-8,3,-6,6,2],[-4,5,-2,10,8],[4,-4,-1,4,10],[10,-3,-4,3,-4],[9,-2,1,-1,9],[3,-1,4,1,-1],[-2,-8,5,-7,-3],[-5,-10,-5,10,3]],[[5,3,-4,-10,-4],[5,2,-2,-7,-7],[-1,-1,9,1,-1],[-9,10,-2,8,9],[-3,-10,10,-3,-3],[7,5,3,3,-3],[10,-1,-3,-7,5],[5,-2,4,-6,-1],[9,3,6,-8,-1],[3,3,2,-9,9],[6,-1,-6,2,-3],[-3,1,-8,3,5]],[[-9,5,-4,-9,7],[6,-1,-4,3,-1],[1,1,-1,6,-5],[7,-1,5,1,-8],[-4,-4,3,-4,-3],[5,8,-5,-2,-2],[-4,-2,-1,-2,-3],[-1,-7,1,-10,-8],[-9,-9,8,-7,-7],[-1,8,-9,10,-9],[4,-1,-4,4,-9],[-9,7,7,-5,8]],[[-5,-4,2,-2,-5],[-7,-3,-1,-3,1],[9,-10,1,2,4],[-8,10,-4,5,5],[8,-10,-2,-10,-8],[-7,-2,-3,-6,10],[8,-1,-2,-1,2],[9,-7,3,-2,4],[-3,-8,10,1,-10],[-8,-9,-5,5,-9],[1,6,-7,-9,1],[10,6,2,-3,2]],[[4,-10,-10,-5,2],[-3,-10,-2,10,-7],[-5,-7,-8,7,-2],[5,-10,8,-1,-6],[-6,5,-7,-4,-8],[-10,-1,6,-5,-1],[5,-2,10,-6,4],[-3,2,-8,-6,-8],[7,-1,-4,-8,-1],[6,4,2,10,4],[-1,-6,-6,4,1],[8,1,-6,6,3]],[[-4,5,9,-1,-5],[-2,-1,-9,-5,1],[-6,-1,6,-1,-3],[2,-5,5,-4,10],[-3,-6,-3,3,8],[3,1,-1,5,-1],[-6,6,-2,5,9],[-5,-10,-7,6,2],[-4,-9,2,5,-4],[6,1,-1,-4,1],[2,6,-9,-8,4],[10,-6,6,1,-5]]], dtype = "uint64")#candidate|3966|(10, 12, 5)|const|uint64
bop_3967 = relay.less_equal(const_3965.astype('bool'), relay.reshape(const_3966.astype('bool'), relay.shape_of(const_3965))) # shape=(10, 12, 5)
output = relay.Tuple([bop_3967,])
output2 = relay.Tuple([bop_3967,])
func_3970 = relay.Function([], output)
mod['func_3970'] = func_3970
mod = relay.transform.InferType()(mod)
output = func_3970()
func_3971 = relay.Function([], output)
mutated_mod['func_3971'] = func_3971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_3988 = relay.TupleGetItem(func_3970_call(), 0)
call_3989 = relay.TupleGetItem(func_3971_call(), 0)
var_4025 = relay.var("var_4025", dtype = "bool", shape = (10, 12, 5))#candidate|4025|(10, 12, 5)|var|bool
bop_4026 = relay.equal(call_3988.astype('bool'), relay.reshape(var_4025.astype('bool'), relay.shape_of(call_3988))) # shape=(10, 12, 5)
bop_4029 = relay.equal(call_3989.astype('bool'), relay.reshape(var_4025.astype('bool'), relay.shape_of(call_3989))) # shape=(10, 12, 5)
output = bop_4026
output2 = bop_4029
func_4031 = relay.Function([var_4025,], output)
mod['func_4031'] = func_4031
mod = relay.transform.InferType()(mod)
var_4032 = relay.var("var_4032", dtype = "bool", shape = (10, 12, 5))#candidate|4032|(10, 12, 5)|var|bool
output = func_4031(var_4032)
func_4033 = relay.Function([var_4032], output)
mutated_mod['func_4033'] = func_4033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_4055 = relay.TupleGetItem(func_3970_call(), 0)
call_4056 = relay.TupleGetItem(func_3971_call(), 0)
uop_4074 = relay.atanh(call_4055.astype('float32')) # shape=(10, 12, 5)
uop_4076 = relay.atanh(call_4056.astype('float32')) # shape=(10, 12, 5)
bop_4079 = relay.minimum(call_4055.astype('int32'), relay.reshape(uop_4074.astype('int32'), relay.shape_of(call_4055))) # shape=(10, 12, 5)
bop_4082 = relay.minimum(call_4056.astype('int32'), relay.reshape(uop_4076.astype('int32'), relay.shape_of(call_4056))) # shape=(10, 12, 5)
output = bop_4079
output2 = bop_4082
func_4088 = relay.Function([], output)
mod['func_4088'] = func_4088
mod = relay.transform.InferType()(mod)
output = func_4088()
func_4089 = relay.Function([], output)
mutated_mod['func_4089'] = func_4089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4088_call = mod.get_global_var('func_4088')
func_4089_call = mutated_mod.get_global_var('func_4089')
call_4138 = func_4088_call()
call_4139 = func_4088_call()
output = relay.Tuple([call_4138,])
output2 = relay.Tuple([call_4139,])
func_4140 = relay.Function([], output)
mod['func_4140'] = func_4140
mod = relay.transform.InferType()(mod)
output = func_4140()
func_4141 = relay.Function([], output)
mutated_mod['func_4141'] = func_4141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_4192 = relay.TupleGetItem(func_4140_call(), 0)
call_4193 = relay.TupleGetItem(func_4141_call(), 0)
func_146_call = mod.get_global_var('func_146')
func_149_call = mutated_mod.get_global_var('func_149')
const_4216 = relay.const([-8,8,-6,4,8,-5,-9,7,-9,2,-8,4,-5,2,4,-1,4,-4,2,8,-4,-8,-5,-6,8,8,5,7,10,-7,-9,-7,-10,5,-10,4,6,-8,-9,-7,6,-2,1,3,1,6,-8,2,3,-10,2,7,-5,3,3,10,-7,-10,-2,-10,5,-2,8,-1,-3,5,6,-5,9,7,-8,-1,1,-5,-8,-7,-2,6,-3,2,1,-1,-1,9,2,4,-5,5,8,-1,7,-9,-7,1,-5,5,-2,2,5,-3,-9,9,4,2,-5,10,10,-1,6,6,4,-5,10,-10,-9,3,10,2,7,-7,8,2,-7,-7,-4,-4,6,3,-9,2,5,-7,-9,-2,4,9,-5,2,-6,4,-1,8,-10,-5,3,-8,-7,7,4,4,-7,10,6,5,-10,-1,9,-10,10,9,-7,6,-2,1,4,-3,-10,4,-6,7,-10,-7,-10,10,-4,-7,-4,6,8,1,3,-3,-9,-1,6,1,8,6,6,-10,-3,-3,10,4,-7,9,8,-4,-9,-4,-3,-2,2,1,-4,-8,9,-5,-1,8,3,-7,-9,10,4,-10,8,7,10,7,10,10,-9,10,-3,7,6,-8,2,3,-1,-4,7,-8,1,10,3,3,-4,-1,3,-2,9,-6,-8,-9,-1,10,6,4,5,1,3,-9,8,3,-7,2,5,-9,6,3,-2,-7,3,8,-7,-6,-2,7,-5,3,5,8,-5,4,6,3,2,-8,3,-3,-4,1,3,8,-8,10,6,3,4,5,5,-9,7,-4,-3,1,7,5,-9,10,4,1,7,-1,1,2,-3,-7,-10,1,9,3,3,9,-1,-1,8,-2,6,-7,-1,-5,2,3,2,-5,5,10,-8,-1,-10,1,-4,5,8,9,3,-4,-5,-6,2,-9,-1,-4,-9,-5,9,7,1,-3,5,8,5,2,-8,8,-2,-6,7,-4,-7,5,7,9,-7,-6,-4,10,-6,-9,5,-6,-6,1,-4,-2,-8,-9,1,4,2,-10,-4,-6,-5,7,-4,-6,-5,6,6,10,-4,-10,9,-3,-3,7,-3,8,-2,9,-7,-8,4,10,9,3,-3,8,-6,-2,4,-6,2,9,10,10,5,-8,2,-10,-1,4,-5,-5,5,-9,5,-10,-9,3,-8,-7,-2,1,-4,-7,-3,9,5,-10,1,1,-5,7,1,5,2,10,6,10,-2,7,9,-5,1,-7,5,10,-1,3,-4,9,10,-2,3,-8,-10,-10,2,3,1,6,8,-3,3,-2,6,-5,-3,5,-10,10,-10,8,8,-7,-1,-2,-9,9,4,-8,-3,7,1,-1,-4,10,-3,-8,-10,-9,-8,-10,-9,8,10,-2,-9,8,-10,1,-2,-2,3,-8,-4,4,2,-8,4,-2,2,-7,4,10,-6,2,6,-5,-3,-2,1,-9,-1,-2,1,-1,-2,3,-8,4,8,2,-1,2,1,10,-1,5,-4,-1,2,9,2,2,8,4,1,1,4,-5,-9,-8,-4,4,-9,4,-9,-7,-6,1,-4,-10,-4,8,-6,4,8,8,3,1,-9,5,-9,-8,-3,10,5,-4,-3,-6,7,-4,10,-8,-6,-6,7,10,6,-2,-9,8,-4,-3,-7,6,9,-9,-4,3,-10,-4,4,5,-3,1,-1,6,-1,2,5,2,-10,2,-1,-5,-6,8,-4,-2,-9,-9,-1,-6,3,10,10,4,4,5,3,-6,10,10,6,2,-4,6,7,10,3,-10,4,4,-9,5,10,4,-5,5,6,-7,-8,8,6,-5,-9,-4,8,1,7,-3,7,-9,10,4,-1,10,3,-7,7,-9,-9,-9,1,8,6,-6,-7,-3,-9,6,-7,1,6,10,2,-10,-4,-9,9,-2,-7,7,-3,10,7,-2,-2,-6,-1,-4,6,3,4,-7,-9,7,-7,-9,-5,2,5,-8,-7,7,-1,-10,-6,-8,-4,3,-4,-7,-5,1,5,5,7,9,8,-3,-9,-5,-3,3,-8,1,7,2,4,3,9,1,1,-2,-8,-7,8,-1,-5,-10,-1,6,1,-9,3,6,9,-10,9,-1,-8,5,-10,-7,-1,9,-10,-9,3,5,1,10,1,2,1,-1,2,5,4,-7,10,6,-1,8,4,-1,-7,7,-10,-9,4,10,-8,8,-6,7,-2,-4,10,8,7,1,2,-1,-6,-1,-2,8,5,-10,-2,-9,-9,-9], dtype = "uint16")#candidate|4216|(832,)|const|uint16
call_4215 = func_146_call(relay.reshape(const_4216.astype('uint16'), [4, 13, 16]))
call_4217 = func_146_call(relay.reshape(const_4216.astype('uint16'), [4, 13, 16]))
func_3408_call = mod.get_global_var('func_3408')
func_3410_call = mutated_mod.get_global_var('func_3410')
const_4223 = relay.const([-5.737884,8.702360,-0.385624,-5.194490,-5.031464,-0.732736,-3.464860,-7.932423,-3.732677,-3.913634,-5.745768,-3.229532,9.204270,2.963874,-6.632235,7.144192,7.867455,-7.114298,2.841582,3.925588,1.022446,6.015464,-4.764349,9.185661,-3.351906,5.420961,-8.670848,-5.260048,-7.277460,-8.725682,9.491114,-9.459774,-1.169501,-0.943995,9.098500,-8.099242,6.180795,-7.854197,4.278585,9.558311,5.324590,0.366460,-3.794876,4.132891,6.163488,3.432905,7.730462,6.558120,2.343361,-7.175943,3.361330,5.606826,-0.799958,-5.255610,-5.435489,3.883886,-6.550268,0.364859,9.178368,0.173044,-9.145573,2.372178,-3.500968,-9.632565,-6.968521,-7.700034,0.308130,1.167653,5.411997,5.763039,3.791209,-6.520449,7.883950,-6.486416,-2.319467,7.122785,5.678510,7.513727], dtype = "float32")#candidate|4223|(78,)|const|float32
call_4222 = func_3408_call(relay.reshape(const_4223.astype('float32'), [1, 6, 13]))
call_4224 = func_3408_call(relay.reshape(const_4223.astype('float32'), [1, 6, 13]))
const_4231 = relay.const([[[8,-7,-7,-10,4],[8,10,2,-2,-2],[-10,1,-9,-8,4],[1,7,8,2,7],[-3,1,-10,9,-6],[7,6,-9,10,8],[-1,-8,6,4,-6],[-5,6,6,-7,-6],[-6,8,2,-8,5],[10,2,6,-6,7],[9,-10,-6,-1,-1],[-7,-1,-10,-4,-9]],[[2,-7,-7,-6,1],[-4,-5,-7,3,5],[4,-3,-1,-2,-1],[4,-10,2,3,-2],[-1,-9,5,7,-4],[5,8,-5,-3,4],[7,9,-8,-7,-9],[7,7,6,10,1],[-10,3,4,-5,-6],[1,8,3,3,8],[8,1,9,-9,-3],[-6,7,-10,-9,10]],[[-5,-9,2,-8,-1],[-6,10,-4,7,2],[4,-4,7,-3,-9],[2,-5,7,-2,-4],[-9,-9,10,-2,7],[-8,1,-1,3,5],[-9,6,-7,-3,7],[-1,10,7,-5,8],[2,2,-7,4,-9],[4,7,1,-4,-2],[-6,7,-2,7,-5],[9,10,-3,-6,-6]],[[7,2,9,-7,-2],[4,-3,-3,7,-10],[6,10,-1,-2,1],[2,10,-3,9,-4],[2,-8,-8,7,4],[8,9,5,-2,-6],[7,-2,-2,-7,-6],[6,8,-2,-7,-2],[8,-9,7,-6,-3],[1,-2,8,-9,-7],[-4,4,6,-8,6],[-6,-9,1,10,-6]],[[-2,4,9,10,-5],[-2,1,-2,-1,2],[10,2,-2,7,4],[5,-10,2,1,7],[8,-6,5,-5,-6],[-6,6,8,-2,-10],[-8,-2,5,8,-5],[-1,-2,1,-3,-6],[7,7,-9,-9,-2],[7,5,-8,3,-6],[9,-3,-4,-10,3],[8,-9,1,-2,1]],[[3,-3,9,-1,-7],[3,6,-1,-10,-7],[-9,3,2,6,-6],[9,6,8,-7,-8],[-5,2,-4,-2,-6],[-7,6,2,2,5],[6,-7,-9,-6,3],[-1,-4,2,8,2],[4,6,7,-9,8],[9,9,-8,3,3],[9,-8,8,1,-3],[7,-2,9,-3,-10]],[[-4,6,-7,4,-8],[9,10,10,-7,-4],[-4,10,-4,-5,9],[7,-6,-9,-7,4],[9,-3,-3,8,4],[2,1,-3,-1,1],[4,3,2,5,-4],[-5,4,-1,2,5],[-9,1,-9,6,-3],[-1,-8,-6,-8,-10],[-10,3,-4,1,4],[-2,-4,-5,-9,6]],[[10,8,-4,8,7],[-4,4,3,2,6],[3,-10,-10,2,6],[1,5,-3,8,-1],[-1,4,-2,3,-4],[-1,6,-3,-4,6],[-3,7,-10,9,4],[-3,-4,-8,5,-10],[2,-3,3,-5,-1],[9,9,3,8,7],[1,7,-4,-10,8],[-7,3,9,6,-3]],[[4,-4,-7,4,9],[9,9,5,-3,-4],[7,1,1,-6,-3],[-5,-10,-10,6,-6],[5,-4,1,2,6],[-3,7,-3,-6,-5],[-9,-6,9,-7,1],[-9,9,3,-5,-4],[-10,4,-2,4,-7],[7,-9,-4,-8,-5],[-6,-7,2,-7,-4],[-7,-9,-10,7,9]],[[4,9,-10,4,-8],[6,5,-1,3,3],[-10,-2,1,-9,7],[-4,5,-4,10,2],[-9,2,-4,-3,4],[4,6,2,-9,6],[1,9,-7,3,-3],[3,-5,-9,1,-4],[8,10,6,-1,-3],[3,1,9,6,-3],[-7,4,5,-9,-5],[-1,4,9,3,7]]], dtype = "int32")#candidate|4231|(10, 12, 5)|const|int32
bop_4232 = relay.left_shift(call_4192.astype('uint32'), relay.reshape(const_4231.astype('uint32'), relay.shape_of(call_4192))) # shape=(10, 12, 5)
bop_4235 = relay.left_shift(call_4193.astype('uint32'), relay.reshape(const_4231.astype('uint32'), relay.shape_of(call_4193))) # shape=(10, 12, 5)
output = relay.Tuple([call_4215,const_4216,call_4222,const_4223,bop_4232,])
output2 = relay.Tuple([call_4217,const_4216,call_4224,const_4223,bop_4235,])
func_4236 = relay.Function([], output)
mod['func_4236'] = func_4236
mod = relay.transform.InferType()(mod)
mutated_mod['func_4236'] = func_4236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4236_call = mutated_mod.get_global_var('func_4236')
call_4237 = func_4236_call()
output = call_4237
func_4238 = relay.Function([], output)
mutated_mod['func_4238'] = func_4238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4255 = relay.var("var_4255", dtype = "bool", shape = (12, 15, 11))#candidate|4255|(12, 15, 11)|var|bool
var_4256 = relay.var("var_4256", dtype = "bool", shape = (12, 15, 11))#candidate|4256|(12, 15, 11)|var|bool
bop_4257 = relay.logical_or(var_4255.astype('bool'), relay.reshape(var_4256.astype('bool'), relay.shape_of(var_4255))) # shape=(12, 15, 11)
output = relay.Tuple([bop_4257,])
output2 = relay.Tuple([bop_4257,])
func_4263 = relay.Function([var_4255,var_4256,], output)
mod['func_4263'] = func_4263
mod = relay.transform.InferType()(mod)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4263_call = mutated_mod.get_global_var('func_4263')
var_4265 = relay.var("var_4265", dtype = "bool", shape = (12, 15, 11))#candidate|4265|(12, 15, 11)|var|bool
var_4266 = relay.var("var_4266", dtype = "bool", shape = (12, 15, 11))#candidate|4266|(12, 15, 11)|var|bool
call_4264 = func_4263_call(var_4265,var_4266,)
output = call_4264
func_4267 = relay.Function([var_4265,var_4266,], output)
mutated_mod['func_4267'] = func_4267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_4269 = relay.TupleGetItem(func_3970_call(), 0)
call_4270 = relay.TupleGetItem(func_3971_call(), 0)
func_1118_call = mod.get_global_var('func_1118')
func_1123_call = mutated_mod.get_global_var('func_1123')
const_4272 = relay.const([5.943134,7.292164,-0.791912,3.162302,-1.734429,-1.157489,-6.433767,-7.893622,-7.429617,-3.235561,9.510072,4.953423,0.339675,0.756882,-9.409917,8.511088,-5.068134,3.536372,7.784437,6.249512,-9.474801,-3.673235,-6.699741,6.653031,-2.154145,-4.495815,3.174868,-0.004185,2.635715,5.341690,4.960820,7.981210,6.004606,-1.590161,9.267267,7.428533,7.797536,-1.840162,-7.684683,-9.192241,-1.866822,-1.068319,-1.178121,-0.696097,-3.346363,-5.066562,-1.038682,4.961317,-7.572710,-0.518306,-9.077669,1.194610,-5.156523,6.528491,7.334333], dtype = "float64")#candidate|4272|(55,)|const|float64
const_4273 = relay.const([[-4.677447,-7.886799],[-3.734447,-4.824887],[-8.266781,-0.879319],[-5.346121,-5.801214],[-0.662580,-5.583854],[-7.968546,5.734057],[-4.583725,1.384951],[-2.267420,1.620475],[-7.241112,7.061748],[-1.218804,-3.364834],[-2.878328,-4.689864],[3.714121,2.774112],[-7.088823,-3.399647],[8.292485,0.239079],[6.784357,-4.647665],[8.755922,-3.141275],[-3.373111,-2.913805],[-7.536037,7.834298],[-9.581490,8.512156],[7.159806,9.931846],[-1.832700,-0.808629],[-5.127557,0.171467],[-1.347121,3.718713],[-6.091474,8.012282],[-5.399969,4.036746],[-5.034436,8.746916],[-8.214549,6.142576],[4.890052,-5.687256],[-1.043959,5.369998],[-5.111847,-6.208202],[-3.878089,-5.039467],[-2.482940,5.590064],[-6.518396,1.302945],[-3.901408,2.739274],[2.454398,-6.226627],[7.576899,-1.360590],[9.369294,-3.784791],[7.338449,-6.974467],[5.171427,-4.828133],[-0.049904,-3.409532],[-6.258424,-5.262079],[-4.347970,-0.071166],[-8.592658,-2.488871],[9.254046,2.061808],[-9.999506,-0.990462],[9.741895,0.654208],[5.883207,-0.450709],[-9.456848,-9.196370],[-1.283685,6.350366],[-6.205657,-9.903140],[-0.189726,1.910905],[2.710439,-6.313441],[-2.381898,9.571447],[7.148096,-7.936308]], dtype = "float32")#candidate|4273|(54, 2)|const|float32
var_4274 = relay.var("var_4274", dtype = "uint16", shape = (832,))#candidate|4274|(832,)|var|uint16
call_4271 = relay.TupleGetItem(func_1118_call(relay.reshape(const_4272.astype('float64'), [5, 11, 1]), relay.reshape(const_4273.astype('float32'), [108,]), relay.reshape(var_4274.astype('uint16'), [832,]), ), 0)
call_4275 = relay.TupleGetItem(func_1123_call(relay.reshape(const_4272.astype('float64'), [5, 11, 1]), relay.reshape(const_4273.astype('float32'), [108,]), relay.reshape(var_4274.astype('uint16'), [832,]), ), 0)
func_3891_call = mod.get_global_var('func_3891')
func_3893_call = mutated_mod.get_global_var('func_3893')
var_4285 = relay.var("var_4285", dtype = "int32", shape = (110, 4))#candidate|4285|(110, 4)|var|int32
call_4284 = relay.TupleGetItem(func_3891_call(relay.reshape(var_4285.astype('int32'), [10, 11, 4])), 0)
call_4286 = relay.TupleGetItem(func_3893_call(relay.reshape(var_4285.astype('int32'), [10, 11, 4])), 0)
bop_4287 = relay.logical_xor(var_4285.astype('int8'), relay.reshape(call_4284.astype('int8'), relay.shape_of(var_4285))) # shape=(110, 4)
bop_4290 = relay.logical_xor(var_4285.astype('int8'), relay.reshape(call_4286.astype('int8'), relay.shape_of(var_4285))) # shape=(110, 4)
output = relay.Tuple([call_4269,call_4271,const_4272,const_4273,var_4274,bop_4287,])
output2 = relay.Tuple([call_4270,call_4275,const_4272,const_4273,var_4274,bop_4290,])
func_4304 = relay.Function([var_4274,var_4285,], output)
mod['func_4304'] = func_4304
mod = relay.transform.InferType()(mod)
mutated_mod['func_4304'] = func_4304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4304_call = mutated_mod.get_global_var('func_4304')
var_4306 = relay.var("var_4306", dtype = "uint16", shape = (832,))#candidate|4306|(832,)|var|uint16
var_4307 = relay.var("var_4307", dtype = "int32", shape = (110, 4))#candidate|4307|(110, 4)|var|int32
call_4305 = func_4304_call(var_4306,var_4307,)
output = call_4305
func_4308 = relay.Function([var_4306,var_4307,], output)
mutated_mod['func_4308'] = func_4308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_4369 = relay.TupleGetItem(func_3970_call(), 0)
call_4370 = relay.TupleGetItem(func_3971_call(), 0)
output = call_4369
output2 = call_4370
func_4407 = relay.Function([], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
output = func_4407()
func_4408 = relay.Function([], output)
mutated_mod['func_4408'] = func_4408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4432 = relay.var("var_4432", dtype = "uint32", shape = (12, 12, 10))#candidate|4432|(12, 12, 10)|var|uint32
var_4433 = relay.var("var_4433", dtype = "uint32", shape = (12, 12, 10))#candidate|4433|(12, 12, 10)|var|uint32
bop_4434 = relay.greater(var_4432.astype('bool'), relay.reshape(var_4433.astype('bool'), relay.shape_of(var_4432))) # shape=(12, 12, 10)
bop_4438 = relay.logical_and(bop_4434.astype('bool'), relay.reshape(var_4433.astype('bool'), relay.shape_of(bop_4434))) # shape=(12, 12, 10)
output = relay.Tuple([bop_4438,])
output2 = relay.Tuple([bop_4438,])
func_4441 = relay.Function([var_4432,var_4433,], output)
mod['func_4441'] = func_4441
mod = relay.transform.InferType()(mod)
mutated_mod['func_4441'] = func_4441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4441_call = mutated_mod.get_global_var('func_4441')
var_4443 = relay.var("var_4443", dtype = "uint32", shape = (12, 12, 10))#candidate|4443|(12, 12, 10)|var|uint32
var_4444 = relay.var("var_4444", dtype = "uint32", shape = (12, 12, 10))#candidate|4444|(12, 12, 10)|var|uint32
call_4442 = func_4441_call(var_4443,var_4444,)
output = call_4442
func_4445 = relay.Function([var_4443,var_4444,], output)
mutated_mod['func_4445'] = func_4445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4236_call = mod.get_global_var('func_4236')
func_4238_call = mutated_mod.get_global_var('func_4238')
call_4469 = relay.TupleGetItem(func_4236_call(), 3)
call_4470 = relay.TupleGetItem(func_4238_call(), 3)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_4479 = relay.TupleGetItem(func_4140_call(), 0)
call_4480 = relay.TupleGetItem(func_4141_call(), 0)
uop_4497 = relay.asin(call_4469.astype('float64')) # shape=(78,)
uop_4499 = relay.asin(call_4470.astype('float64')) # shape=(78,)
func_146_call = mod.get_global_var('func_146')
func_149_call = mutated_mod.get_global_var('func_149')
var_4501 = relay.var("var_4501", dtype = "uint16", shape = (832,))#candidate|4501|(832,)|var|uint16
call_4500 = func_146_call(relay.reshape(var_4501.astype('uint16'), [4, 13, 16]))
call_4502 = func_146_call(relay.reshape(var_4501.astype('uint16'), [4, 13, 16]))
var_4503 = relay.var("var_4503", dtype = "float64", shape = (78,))#candidate|4503|(78,)|var|float64
bop_4504 = relay.less(uop_4497.astype('bool'), relay.reshape(var_4503.astype('bool'), relay.shape_of(uop_4497))) # shape=(78,)
bop_4507 = relay.less(uop_4499.astype('bool'), relay.reshape(var_4503.astype('bool'), relay.shape_of(uop_4499))) # shape=(78,)
uop_4510 = relay.acosh(var_4501.astype('float32')) # shape=(832,)
uop_4516 = relay.log10(bop_4504.astype('float32')) # shape=(78,)
uop_4518 = relay.log10(bop_4507.astype('float32')) # shape=(78,)
uop_4529 = relay.atan(uop_4497.astype('float64')) # shape=(78,)
uop_4531 = relay.atan(uop_4499.astype('float64')) # shape=(78,)
output = relay.Tuple([call_4479,call_4500,uop_4510,uop_4516,uop_4529,])
output2 = relay.Tuple([call_4480,call_4502,uop_4510,uop_4518,uop_4531,])
func_4541 = relay.Function([var_4501,var_4503,], output)
mod['func_4541'] = func_4541
mod = relay.transform.InferType()(mod)
var_4542 = relay.var("var_4542", dtype = "uint16", shape = (832,))#candidate|4542|(832,)|var|uint16
var_4543 = relay.var("var_4543", dtype = "float64", shape = (78,))#candidate|4543|(78,)|var|float64
output = func_4541(var_4542,var_4543,)
func_4544 = relay.Function([var_4542,var_4543,], output)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_4555 = relay.TupleGetItem(func_4140_call(), 0)
call_4556 = relay.TupleGetItem(func_4141_call(), 0)
output = relay.Tuple([call_4555,])
output2 = relay.Tuple([call_4556,])
func_4562 = relay.Function([], output)
mod['func_4562'] = func_4562
mod = relay.transform.InferType()(mod)
output = func_4562()
func_4563 = relay.Function([], output)
mutated_mod['func_4563'] = func_4563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4407_call = mod.get_global_var('func_4407')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_4577 = func_4407_call()
call_4578 = func_4407_call()
func_1893_call = mod.get_global_var('func_1893')
func_1896_call = mutated_mod.get_global_var('func_1896')
var_4581 = relay.var("var_4581", dtype = "int32", shape = (390,))#candidate|4581|(390,)|var|int32
call_4580 = relay.TupleGetItem(func_1893_call(relay.reshape(var_4581.astype('int32'), [13, 10, 3])), 0)
call_4582 = relay.TupleGetItem(func_1896_call(relay.reshape(var_4581.astype('int32'), [13, 10, 3])), 0)
uop_4584 = relay.atan(call_4580.astype('float64')) # shape=(13, 10, 3)
uop_4586 = relay.atan(call_4582.astype('float64')) # shape=(13, 10, 3)
output = relay.Tuple([call_4577,var_4581,uop_4584,])
output2 = relay.Tuple([call_4578,var_4581,uop_4586,])
func_4587 = relay.Function([var_4581,], output)
mod['func_4587'] = func_4587
mod = relay.transform.InferType()(mod)
var_4588 = relay.var("var_4588", dtype = "int32", shape = (390,))#candidate|4588|(390,)|var|int32
output = func_4587(var_4588)
func_4589 = relay.Function([var_4588], output)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_4636 = relay.TupleGetItem(func_4140_call(), 0)
call_4637 = relay.TupleGetItem(func_4141_call(), 0)
func_4407_call = mod.get_global_var('func_4407')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_4640 = func_4407_call()
call_4641 = func_4407_call()
bop_4645 = relay.add(call_4636.astype('uint32'), relay.reshape(call_4640.astype('uint32'), relay.shape_of(call_4636))) # shape=(10, 12, 5)
bop_4648 = relay.add(call_4637.astype('uint32'), relay.reshape(call_4641.astype('uint32'), relay.shape_of(call_4637))) # shape=(10, 12, 5)
func_4236_call = mod.get_global_var('func_4236')
func_4238_call = mutated_mod.get_global_var('func_4238')
call_4669 = relay.TupleGetItem(func_4236_call(), 0)
call_4670 = relay.TupleGetItem(func_4238_call(), 0)
output = relay.Tuple([bop_4645,call_4669,])
output2 = relay.Tuple([bop_4648,call_4670,])
func_4722 = relay.Function([], output)
mod['func_4722'] = func_4722
mod = relay.transform.InferType()(mod)
mutated_mod['func_4722'] = func_4722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4722_call = mutated_mod.get_global_var('func_4722')
call_4723 = func_4722_call()
output = call_4723
func_4724 = relay.Function([], output)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_4734 = relay.TupleGetItem(func_3970_call(), 0)
call_4735 = relay.TupleGetItem(func_3971_call(), 0)
const_4744 = relay.const([[[False,False,False,True,False],[False,True,True,True,False],[True,False,True,False,False],[True,False,True,True,True],[True,False,True,True,False],[False,True,True,False,True],[True,False,True,True,True],[True,False,True,True,True],[True,False,True,True,False],[True,False,False,False,True],[True,True,True,False,True],[True,False,False,False,False]],[[True,True,False,False,True],[False,True,True,True,False],[False,False,False,False,True],[False,True,True,False,False],[False,True,True,False,False],[False,True,False,False,False],[True,True,True,True,True],[False,True,True,True,False],[True,False,True,False,False],[False,False,True,False,True],[True,False,False,True,False],[False,True,False,True,False]],[[False,False,True,True,True],[True,False,True,False,True],[True,True,True,False,True],[True,True,False,True,True],[True,False,True,True,True],[False,False,True,False,True],[True,False,True,False,True],[False,True,True,True,True],[True,True,True,False,True],[False,False,False,False,True],[True,True,True,True,True],[True,True,True,False,True]],[[False,True,True,True,True],[False,True,True,False,True],[False,True,False,True,True],[True,False,True,False,False],[False,True,False,False,False],[True,True,True,False,True],[False,False,False,True,True],[True,False,False,False,False],[True,True,True,True,False],[False,True,False,False,True],[True,False,False,True,False],[True,False,True,False,False]],[[False,True,False,False,False],[True,False,False,True,False],[False,True,True,True,False],[False,False,True,False,False],[False,True,False,True,False],[True,False,False,False,False],[False,True,True,False,True],[False,True,True,False,True],[False,True,False,True,False],[False,True,False,False,False],[False,False,True,True,True],[False,False,True,False,False]],[[False,True,True,True,True],[True,True,True,False,False],[False,False,True,False,False],[True,False,True,False,False],[True,False,True,True,True],[False,True,True,False,True],[False,False,False,True,True],[False,False,True,True,True],[True,True,True,False,True],[True,True,True,True,True],[False,False,False,True,True],[True,True,False,True,True]],[[False,True,True,False,False],[True,False,True,False,True],[False,True,False,True,True],[True,True,False,True,False],[False,True,False,False,False],[False,True,True,False,False],[True,False,True,False,True],[False,True,True,True,True],[True,True,False,True,False],[True,True,True,False,False],[True,False,True,False,False],[True,False,True,False,False]],[[False,True,True,True,False],[False,True,True,True,False],[True,False,True,True,False],[False,True,True,True,True],[True,True,True,False,True],[True,True,True,False,True],[True,False,True,False,False],[True,False,True,False,False],[False,True,False,True,True],[False,True,False,True,True],[True,False,False,False,False],[True,True,True,False,True]],[[True,True,False,False,False],[False,True,False,True,True],[False,True,True,True,True],[False,True,False,False,True],[True,True,True,True,True],[False,False,False,True,False],[True,False,False,True,False],[False,True,True,False,True],[True,True,False,False,False],[True,False,True,False,False],[False,True,True,False,True],[False,False,True,False,True]],[[False,True,False,False,True],[False,False,False,False,False],[True,True,True,False,True],[True,True,True,True,True],[True,True,True,False,True],[False,False,True,True,False],[True,True,True,True,True],[False,True,True,True,True],[False,False,False,True,False],[True,True,False,False,False],[True,True,True,False,True],[True,False,True,False,False]]], dtype = "bool")#candidate|4744|(10, 12, 5)|const|bool
bop_4745 = relay.multiply(call_4734.astype('uint64'), relay.reshape(const_4744.astype('uint64'), relay.shape_of(call_4734))) # shape=(10, 12, 5)
bop_4748 = relay.multiply(call_4735.astype('uint64'), relay.reshape(const_4744.astype('uint64'), relay.shape_of(call_4735))) # shape=(10, 12, 5)
func_494_call = mod.get_global_var('func_494')
func_500_call = mutated_mod.get_global_var('func_500')
var_4756 = relay.var("var_4756", dtype = "float32", shape = ())#candidate|4756|()|var|float32
var_4757 = relay.var("var_4757", dtype = "float32", shape = (108,))#candidate|4757|(108,)|var|float32
const_4758 = relay.const([9.212558,-2.087270,-9.230503,-0.797203,-4.096593,6.438989,-8.848941,-7.208326,-2.190120,-1.469270,5.471906,-4.365245,-5.795231,-6.003716,4.326438,0.993641,1.834202,-7.673318,-5.163949,-9.317122,-6.217682,7.792524,-5.814954,-8.244342,3.381610,-7.591631,-0.869308,-4.837817,-2.061176,-6.787938,-0.324041,-2.050026,7.964070,4.037624,3.420636,4.967032,8.773523,5.706623,-2.526270,4.074337,-0.809322,5.638134,-9.527005,6.056422,-6.473137,-4.144707,7.274497,-4.350297,5.679660,2.068337,-9.152097,1.160220,6.769086,8.087489,-0.587933,3.008351,-4.394274,4.484975,-8.073519,5.908717,8.060308,7.936076,-9.038927,0.437979,-1.608898,5.935647,7.044802,-9.568384,9.971063,1.124418,-6.826723,-4.101700,1.483353,1.455989,-9.995602,-7.722661,-6.978139,-4.833854,-3.297810,9.210724,-2.661662,6.056931,2.740684,-7.635133,7.561851,-3.048392,-4.319896,0.634314,7.485698,6.004850,0.026101,6.470410,-3.806969,2.606866,3.082231,2.962596,3.887233,-0.429298,-1.330096,8.455971,-8.082349,-0.767159,-8.876828,-9.667271,-4.887974,5.445275,2.668031,-8.864299,-1.782726,-4.330589,-7.468846,-6.319937,-7.840689,-7.771039,4.595676,3.969588,7.729783,7.617134,4.647739,0.246036,4.936848,7.995109,0.448342,-8.339997,5.598307,-3.596581,-4.777473,2.607774,7.361805,-4.675633,0.067908,-6.978532,2.813096,-5.407977,5.548091,-3.629495,-2.931363,3.924735,8.517293,-7.811063,7.939341,-8.107001,0.495505,-6.445389,0.676956,0.002332,-6.584476,-4.209931,8.327763,-2.155123,-8.213300,-2.648253,7.335295,4.047399,7.416704,7.391892,-0.285739,6.134477,-8.361737,-2.334435,-7.764640,-9.991382,4.864648,-1.833788,-2.221039,7.867456,0.622800,6.592751,0.559185,-3.170484,-7.724753,7.181130,5.482307,-9.591289,6.831769,-6.335035,5.793374,-0.245906,1.649329,7.154736,-6.678139,-7.761423,-3.390845,-3.281794,-2.274345,9.177410,-9.685085,3.957323,8.167052,7.537829,-3.254951,-6.119283,2.675616,-4.445546,4.894824,-7.626383,-8.486184,3.886994,-6.084864,1.457260,-1.502753,-8.621537,4.314999,9.502954,4.812612,7.828239,-3.655640,2.831033,2.687249,-1.597325,-8.679196,-7.578943,7.610840,9.937808,5.200228,2.160921,6.489732,-3.867375,2.648500,5.683585,2.730626,5.088048,-6.403962,4.608191,-7.990316,-3.199094,-2.198704,-4.155495,8.736294,2.783878,-2.998191,-7.223763,-3.229134,-2.146609,-2.250599,5.298932,2.708631,0.876086,7.931405,2.880292,-6.694505,-6.860161,-0.315389,4.967197,9.829081,-5.899467,8.219198,2.537622,5.589565,9.991576,-6.693043,9.953076,4.541548,6.981702,2.431750,3.631542,9.033847,-6.850631,-4.840051,3.853807,6.973415,1.898345,-2.382257,-2.621190,-0.832275,-2.216478,-2.223039,-6.680945,-2.116919,3.588249,-9.950798,-3.814257,-0.270788,2.771812,-9.267262,-5.860807,-0.087199,-0.730710,0.857859,2.967590,-0.846175,-7.152398,4.393218,9.397770,-9.546909,-4.982003,1.304731,-2.037296,2.609499,-9.323655,-2.140712,1.062322,-9.327911,-7.744160,7.011998,1.887008,8.276080,-4.625773,1.348714,-4.511169,-3.442220,-8.712104,3.334314,-1.890506,0.976266,-9.805727,9.616748,-7.418570,0.031118,2.098473,-3.865210,2.957722,-1.903325,6.447360,8.519508,-2.699897,-3.831638,8.445046,1.348319,-5.086031,-1.877090,5.177305,9.569907,8.952047,-6.404321,3.456605,8.723035,-8.197086,-7.933103,4.351238,0.428968,-3.276639,3.009164,-0.884069,5.091791,2.017651,8.262998,4.724626,-9.850215,-7.214578,-7.268134,-4.252145,-7.015382,8.204125,-9.642860,-7.856225,-4.250924,6.719109,-4.865804,9.862577,-4.228718,7.409151,6.623488,-0.951332,2.785225,-5.556477,-9.170579,9.231575,7.280609,-5.050563,-4.607273,3.400272,4.227177,-3.881032,-1.445134,6.630526,-9.118124,5.807212,0.874630,2.292500,-7.547593,-4.795152,-5.894986,2.505420,4.121022,8.860170,-5.658747,-0.979846,6.995950,9.514188,-7.363525,9.731469,4.255572,-6.954071,-2.833481,0.390380,0.905708,-3.451571,0.249763,7.782209,5.848729,-9.318551,-6.759619,3.737296,7.010595,0.336978,9.100818,-2.094680,8.924550,8.392971,2.460922,-7.076532,6.194439,-3.118649,-5.135595,7.388882,4.267405,6.684623,-5.362073,9.889502,8.189142,-9.105446,8.863669,0.526398,0.363629,3.336791,5.811243,-3.922220,-2.172315,-5.221949,-2.128818,-7.625622,0.654190,1.291413,-2.782501,-5.855890,-7.403829,-0.260084,0.638276,-2.292030,-5.000872,8.872275,-2.357752,-9.357478,7.992137,1.133809,-1.605895,3.345972,-2.356739,-2.656067,6.953046,-0.179005,2.255341,-7.762891,2.875921,7.016446,-5.970408,3.001890,-5.937939,3.122077,-1.314256,-3.877372,-0.805128,2.131145,-6.937218,3.520617,-6.360372,4.546792,-4.672181,-4.156542,7.589204,3.091237,0.012979,-3.421828,7.361869,4.046774,-7.460847,-6.997201,9.853641,6.004730,0.472683,5.325354,5.391133,2.179022,-5.109228,2.454152,-6.579746,0.495727,3.100793,7.530928,1.903050,5.730022,-5.537368,-4.736173,2.849761,-0.698442,-7.603279,-5.647449,-0.905496,9.988340,4.368432,-6.547070,-8.328263,3.098315,1.057467,-7.729807,8.453417,5.167361,4.018098,9.479442,9.761167,-8.275749,-7.614508,9.945375,-2.769633,8.248552,5.603856,0.732769,-2.851897,-6.961873,-5.937675,-8.845537,-4.285531,6.089360,-7.313282,-4.729645,-4.571820,4.983272,9.253179,-6.556236,-9.741397,3.933204,7.384411,8.013781,-7.465263,-8.700775,-4.767072,-2.207506,-3.982928,-3.011916,1.854316,-5.688315,7.630087,-4.843333,6.598345,4.952550,-7.066015,2.967441,1.164674,5.815454,-4.160649,-7.082959,5.354091,3.225197,7.600379,-8.301471,-4.931033,-8.372640,-9.485848,-3.460267,5.611569,6.403629,5.978564,-6.459008,8.914038,-9.610257,1.858454,-4.079399,1.751226,-0.562035,-7.197708,4.712232,4.208374,-8.993611,-1.806250,0.948030,-2.570101,-7.504948,-7.702473,6.423969,-5.647096,6.512768,-4.893894,-5.674090,-4.388091,-2.544296,5.126817,1.523009,-1.139370,3.880246,2.107817,-2.646971,2.421973,1.614205,4.766364,-0.223592,-6.895280,7.378443,2.548628,-3.977902,-7.659990,-7.755435,4.052419,0.525984,-1.597320,-8.581696,2.108628,9.561043,0.512682,-3.605364,1.753263,0.758942,2.659773,1.729991,-6.383918,-4.955756,-7.443858,9.425926,-0.564783,2.796713,9.945072,-4.374637,6.639756,0.515900,-7.195104,4.364019,-6.335331,1.652147,-5.024582,5.462930,1.353700,6.067303,-9.913588,8.847823,9.409610,3.517023,-2.984983,-3.746549,-7.357437,8.431872,7.937257,-9.831470,8.163366,2.572145,-0.878979,-9.030295,-7.785714,-7.295480,-6.041823,-6.051726,-2.872798,-8.496200,7.172081,-5.647017,0.560553,9.356859,3.771115,-6.294115,7.076434,-0.899018,-8.905659,3.111168,-5.992297,-2.651006,3.600732,7.601614,-4.373616,0.669785,-9.068463,8.161836,1.293767,-7.954890,2.702281,7.626521,4.060880,-2.043200,-3.239150,-9.602745,0.451162,-3.327614,5.108887,9.130265,3.183595,-5.776288,-1.280276,1.921582,-3.370127,-7.388394,9.077716,-8.609832,8.120576,-8.007383,7.279238,4.930502,7.403582,7.006963,2.854924,5.743939,0.303499,-7.590844,0.796171,6.925373,2.990039,9.303197,0.290176,1.209775,0.765251,7.379513,4.065995,7.027873,-3.184270,9.874163,0.137311,-2.162674,-8.048838,4.191322,6.087496,7.831800,-6.821995,3.832427,0.135980,6.604860,-8.538473,5.458268,0.174715,2.977419,4.288598,3.402910,7.803585,-8.916774,-2.988822,6.054911,-8.359246,-1.697724,-6.606448,1.449045,8.570263,-2.798282,6.602149,1.564488,-1.478436,-2.432431,3.560666,9.651407,1.949682,7.583623,7.604942,4.509652,7.100389,-7.819547,5.360558,5.610726,-9.805056,3.501214,8.782619,-1.035838,0.896011,-8.842450,-1.861150,6.695812,7.608852,8.485388,5.389819,-8.270191,1.513703,-3.762015,-8.276272,7.236932,9.952239,-5.066753,7.244193,2.326353,7.814428,6.516065,7.573998,-0.086613,1.686575,7.989319,-1.781895,-6.522143,-7.457885,8.814084,-4.002681,-1.778874,9.277046,7.229828,4.196781,1.475522,-8.044201,3.444775,5.283001,-3.154382,3.952271,0.781906,9.712072,6.811606,6.212911,2.742426,4.835943,0.968459,-9.873094,6.564172,0.640103,7.429892,-4.311350,2.981942,-2.687367,-4.557678,1.547565,7.947959,8.524249,2.958937,5.262365,9.552625,-9.448793,8.083350,9.718046,-1.057165,5.834299,-5.173808,-7.444509,3.958566,3.405170,3.613079,-6.328671,0.046184,5.124006,-6.684276,6.209040,-8.141126,-5.057514,7.213677,-5.946464,1.152235,8.737892,8.617286,4.128543,-8.628504,8.018045,-7.894004,-3.718087,0.117156,-0.802322,8.110945,3.789628,9.513138,5.923046,3.337788,-0.738904,-5.089024,-4.624069,-2.191655,-7.026866,-2.040706,-4.980334,8.232200,8.231759,-7.591901,-0.584794,4.394810,8.371154,-8.789297,8.488069,4.114221,-9.409528,9.949805,0.188777,-7.000620,-1.278376,1.991105,3.720458,-9.204993,-2.334485,-7.006675,-3.844633,-2.090739,-5.730878,-6.596010,3.891403,-1.132175,8.594505,-3.513366,1.923189,0.771903,-3.038584,-9.653399,3.123600,-3.821826,9.291654,3.117501,-5.829486,-1.041420,-0.818235,0.937879,-0.038424,3.562760,1.804414,-6.669814,-3.968464,6.245450,3.395970,5.725582,-7.362596,-6.796219,-7.843531,1.200534,2.438142,-7.345251,-8.714674,3.767497,7.695802,9.795796,4.773251,3.072050,9.872733,-9.462156,-1.026271,9.898771,1.183955,-4.294026,5.585844,-5.902681,1.181810,-1.478623,-3.230259,-1.127889,-8.802936,0.105366,-2.852946,-1.446527,6.777739,-7.462414,-0.832175,-6.098033,9.171654,8.184482,-1.756592,3.182395,-5.791863,3.503259,-0.474584,-4.989995,0.896029,-8.417498,-0.672409,4.700161,4.328957,1.193455,-0.697940,9.117536,7.526373,-3.114505,-0.261062,1.000536,-3.105934,-5.292371,4.151265,7.271983,-2.443810,-0.907410,-5.574063,-1.177317,6.492541,9.607201,0.606425,2.097331,-5.557294,-4.533921,5.144914,1.240927,-4.795527,-8.471767,5.916185,1.103961,5.360069,-2.764980,5.241512,4.480120,4.955790,-6.087381,2.221615,7.524326,-8.873345,3.832407,8.878134,6.682566,-9.907560,6.294861,7.145701,6.709820,-9.300472,5.561660,-2.111399,-7.958172,9.857547,-8.664328,-4.520417,-9.215103,2.441104,9.176865,1.935213,-8.281296,-5.560826,1.471126,-5.250693,0.083338,-5.530869,4.228609,0.277663,-4.553329,-9.129724,-1.434088,-6.764632,3.140446,-5.016749,9.422631,0.921659,7.885422,2.241610,-9.110119,1.083179,4.727914,-9.241227,-7.042590,-7.146209,-9.092554,0.830209,-1.038106,-5.195605,0.624688,-8.853014,-1.323707,-7.386545,6.628567,-9.938566,-4.902073,4.865246,6.930588,-4.612560,-7.299683,5.504919,8.813013,6.213200,-4.200941,-2.842410,-0.874294,-3.054945,-4.801110,-7.870932,4.436927,8.030554,-5.546994,7.362284,-0.570243,9.929112,-9.204177,-5.902412,0.164216,4.510813,9.068329,5.067031,-0.891888,-5.554538,-6.719409,7.759563,2.755029,7.081838,4.966329,1.071101,-8.812427,-7.705344,8.067174,6.034998,-5.414629,6.778379,-8.422452,0.400305,-3.465230,0.101068,-4.899732,-0.714451,-6.801480,4.393164,-6.036931,0.066190,4.125543,-3.234733,-6.350088,9.921742,-0.056136,-8.361697,0.875844,-5.845982,6.940761,6.512805,-1.391199,4.527872,1.917499,-9.319096,-1.462007,2.585318,-0.765128,-0.870271,3.050838,0.902400,-6.001924,-3.999781,-0.119042,-3.001005,-6.431808,2.870009,4.601916,0.108373,-4.623638,7.926019,-0.703002,-1.662082,-0.859868,2.292939,5.650750,7.518707,9.818653,3.354736,-1.351884,8.044887,5.373926,0.964692,-3.682803,-3.305217,0.956983,3.957836,-0.176651,-2.213081,-5.243101,-4.948341,-8.177861,-4.819245,6.926696,8.623596,5.511830,-3.602561,-5.068661,6.918585,4.928958,6.802167,6.229912,-2.537121,-3.759228,-9.471326,-1.154549,-9.803349,2.257178,-8.284144,5.382776,-6.353093,8.696761,8.822568,4.117253,-8.193768,-4.875917,3.277515,-7.036259,9.357681,-0.323936,8.802224,-6.025687,3.041309,-4.046298,-8.445306,-2.598449,-3.371145,-1.079449,9.265645,2.459942,-7.344021,8.059497,3.327211,0.527646,-4.562600,1.861688], dtype = "float32")#candidate|4758|(1170,)|const|float32
var_4759 = relay.var("var_4759", dtype = "uint16", shape = (832,))#candidate|4759|(832,)|var|uint16
call_4755 = relay.TupleGetItem(func_494_call(relay.reshape(var_4756.astype('float32'), []), relay.reshape(var_4757.astype('float32'), [6, 6, 3]), relay.reshape(const_4758.astype('float32'), [390, 3]), relay.reshape(var_4759.astype('uint16'), [832,]), ), 4)
call_4760 = relay.TupleGetItem(func_500_call(relay.reshape(var_4756.astype('float32'), []), relay.reshape(var_4757.astype('float32'), [6, 6, 3]), relay.reshape(const_4758.astype('float32'), [390, 3]), relay.reshape(var_4759.astype('uint16'), [832,]), ), 4)
func_653_call = mod.get_global_var('func_653')
func_657_call = mutated_mod.get_global_var('func_657')
var_4764 = relay.var("var_4764", dtype = "uint16", shape = (462, 1))#candidate|4764|(462, 1)|var|uint16
call_4763 = relay.TupleGetItem(func_653_call(relay.reshape(var_4764.astype('uint16'), [6, 11, 7]), relay.reshape(var_4764.astype('uint16'), [6, 11, 7]), relay.reshape(const_4758.astype('float32'), [1170, 1]), ), 1)
call_4765 = relay.TupleGetItem(func_657_call(relay.reshape(var_4764.astype('uint16'), [6, 11, 7]), relay.reshape(var_4764.astype('uint16'), [6, 11, 7]), relay.reshape(const_4758.astype('float32'), [1170, 1]), ), 1)
output = relay.Tuple([bop_4745,call_4755,var_4756,var_4757,const_4758,var_4759,call_4763,var_4764,])
output2 = relay.Tuple([bop_4748,call_4760,var_4756,var_4757,const_4758,var_4759,call_4765,var_4764,])
func_4768 = relay.Function([var_4756,var_4757,var_4759,var_4764,], output)
mod['func_4768'] = func_4768
mod = relay.transform.InferType()(mod)
mutated_mod['func_4768'] = func_4768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4768_call = mutated_mod.get_global_var('func_4768')
var_4770 = relay.var("var_4770", dtype = "float32", shape = ())#candidate|4770|()|var|float32
var_4771 = relay.var("var_4771", dtype = "float32", shape = (108,))#candidate|4771|(108,)|var|float32
var_4772 = relay.var("var_4772", dtype = "uint16", shape = (832,))#candidate|4772|(832,)|var|uint16
var_4773 = relay.var("var_4773", dtype = "uint16", shape = (462, 1))#candidate|4773|(462, 1)|var|uint16
call_4769 = func_4768_call(var_4770,var_4771,var_4772,var_4773,)
output = call_4769
func_4774 = relay.Function([var_4770,var_4771,var_4772,var_4773,], output)
mutated_mod['func_4774'] = func_4774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4562_call = mod.get_global_var('func_4562')
func_4563_call = mutated_mod.get_global_var('func_4563')
call_4795 = relay.TupleGetItem(func_4562_call(), 0)
call_4796 = relay.TupleGetItem(func_4563_call(), 0)
uop_4797 = relay.sqrt(call_4795.astype('float64')) # shape=(10, 12, 5)
uop_4799 = relay.sqrt(call_4796.astype('float64')) # shape=(10, 12, 5)
output = relay.Tuple([uop_4797,])
output2 = relay.Tuple([uop_4799,])
func_4810 = relay.Function([], output)
mod['func_4810'] = func_4810
mod = relay.transform.InferType()(mod)
output = func_4810()
func_4811 = relay.Function([], output)
mutated_mod['func_4811'] = func_4811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4088_call = mod.get_global_var('func_4088')
func_4089_call = mutated_mod.get_global_var('func_4089')
call_4929 = func_4088_call()
call_4930 = func_4088_call()
var_4937 = relay.var("var_4937", dtype = "int32", shape = (10, 12, 5))#candidate|4937|(10, 12, 5)|var|int32
bop_4938 = relay.divide(call_4929.astype('float32'), relay.reshape(var_4937.astype('float32'), relay.shape_of(call_4929))) # shape=(10, 12, 5)
bop_4941 = relay.divide(call_4930.astype('float32'), relay.reshape(var_4937.astype('float32'), relay.shape_of(call_4930))) # shape=(10, 12, 5)
uop_4952 = relay.log10(bop_4938.astype('float64')) # shape=(10, 12, 5)
uop_4954 = relay.log10(bop_4941.astype('float64')) # shape=(10, 12, 5)
bop_4962 = relay.right_shift(uop_4952.astype('uint8'), relay.reshape(bop_4938.astype('uint8'), relay.shape_of(uop_4952))) # shape=(10, 12, 5)
bop_4965 = relay.right_shift(uop_4954.astype('uint8'), relay.reshape(bop_4941.astype('uint8'), relay.shape_of(uop_4954))) # shape=(10, 12, 5)
func_4441_call = mod.get_global_var('func_4441')
func_4445_call = mutated_mod.get_global_var('func_4445')
var_4967 = relay.var("var_4967", dtype = "uint32", shape = (1440,))#candidate|4967|(1440,)|var|uint32
call_4966 = relay.TupleGetItem(func_4441_call(relay.reshape(var_4967.astype('uint32'), [12, 12, 10]), relay.reshape(var_4967.astype('uint32'), [12, 12, 10]), ), 0)
call_4968 = relay.TupleGetItem(func_4445_call(relay.reshape(var_4967.astype('uint32'), [12, 12, 10]), relay.reshape(var_4967.astype('uint32'), [12, 12, 10]), ), 0)
output = relay.Tuple([bop_4962,call_4966,var_4967,])
output2 = relay.Tuple([bop_4965,call_4968,var_4967,])
func_4975 = relay.Function([var_4937,var_4967,], output)
mod['func_4975'] = func_4975
mod = relay.transform.InferType()(mod)
mutated_mod['func_4975'] = func_4975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4975_call = mutated_mod.get_global_var('func_4975')
var_4977 = relay.var("var_4977", dtype = "int32", shape = (10, 12, 5))#candidate|4977|(10, 12, 5)|var|int32
var_4978 = relay.var("var_4978", dtype = "uint32", shape = (1440,))#candidate|4978|(1440,)|var|uint32
call_4976 = func_4975_call(var_4977,var_4978,)
output = call_4976
func_4979 = relay.Function([var_4977,var_4978,], output)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_5033 = relay.TupleGetItem(func_4140_call(), 0)
call_5034 = relay.TupleGetItem(func_4141_call(), 0)
output = call_5033
output2 = call_5034
func_5063 = relay.Function([], output)
mod['func_5063'] = func_5063
mod = relay.transform.InferType()(mod)
output = func_5063()
func_5064 = relay.Function([], output)
mutated_mod['func_5064'] = func_5064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_5099 = relay.TupleGetItem(func_3970_call(), 0)
call_5100 = relay.TupleGetItem(func_3971_call(), 0)
uop_5140 = relay.exp(call_5099.astype('float32')) # shape=(10, 12, 5)
uop_5142 = relay.exp(call_5100.astype('float32')) # shape=(10, 12, 5)
bop_5154 = relay.not_equal(call_5099.astype('bool'), relay.reshape(uop_5140.astype('bool'), relay.shape_of(call_5099))) # shape=(10, 12, 5)
bop_5157 = relay.not_equal(call_5100.astype('bool'), relay.reshape(uop_5142.astype('bool'), relay.shape_of(call_5100))) # shape=(10, 12, 5)
func_4441_call = mod.get_global_var('func_4441')
func_4445_call = mutated_mod.get_global_var('func_4445')
const_5165 = relay.const([-1,10,-2,6,-1,5,7,-2,-9,2,-5,5,1,-4,7,2,4,2,7,9,-2,-9,-10,-3,-9,-3,1,-10,10,-1,-9,-5,-7,10,6,1,4,9,2,3,7,8,3,-10,-9,-10,-4,-3,1,-4,-3,-6,-6,2,-7,9,-10,9,4,8,10,4,-2,-4,2,-9,10,5,2,-4,-4,-2,2,10,3,-9,-6,7,-2,1,9,-3,7,7,-7,10,-5,-6,8,-1,5,-5,3,-9,5,10,-1,-4,-1,10,1,-9,-6,1,2,6,2,-8,-5,1,-6,5,4,-6,10,2,7,6,-6,-7,1,-6,5,9,1,-2,-8,6,6,-8,-7,-8,4,8,-2,-10,6,-7,2,-3,-3,1,3,5,9,-8,4,3,-9,-7,5,6,-5,-4,-9,9,-1,-7,-8,-4,6,5,7,9,10,6,5,-7,-7,5,-6,-9,-5,-1,-9,-9,-8,-6,-6,-10,-2,10,-10,-6,-5,-2,5,8,-10,-2,6,3,-8,9,-3,-8,5,10,4,4,-9,2,10,4,1,-8,-7,-2,-9,1,-2,-6,-9,-4,-6,-4,-7,-1,-8,-6,10,9,4,-4,-4,6,4,-5,-10,-5,7,1,6,2,6,-5,3,-4,5,1,-3,-5,9,-7,9,7,-1,-2,10,-1,2,-5,-7,-2,-8,-10,-10,-7,5,9,-6,-1,-5,-4,-5,-3,8,-1,-8,-7,-6,7,-4,-4,-10,4,-9,3,-6,-9,1,-9,2,5,-3,-6,1,-4,10,5,-10,4,-2,3,5,10,-6,8,-8,-7,7,-9,-9,-3,-10,-6,7,-10,-10,-10,9,-4,10,-4,-5,1,-6,-10,5,3,4,-6,3,2,2,-8,-4,5,-4,-4,2,1,-8,-7,4,6,1,-9,-9,8,4,10,10,-2,8,3,1,-10,-5,-2,6,9,10,-4,2,10,-7,6,10,2,-3,-8,1,5,-6,8,-5,-3,-6,3,6,4,6,3,-7,3,-1,6,10,9,8,-10,-4,-5,-10,8,4,1,3,9,10,10,5,-5,-9,3,-4,8,5,-10,-4,1,2,1,8,5,-1,3,-3,1,5,-7,6,-10,-1,-8,-1,-6,-2,8,6,-10,-10,-3,1,5,9,-8,-9,7,-9,6,3,10,-8,5,-4,3,8,-7,1,9,-5,-6,-3,8,-8,-9,8,-8,10,2,-2,7,2,-1,7,-2,4,1,-3,-1,-3,3,2,8,9,-7,7,-1,10,-2,1,-3,4,-4,1,7,8,5,-3,1,5,3,1,-10,5,10,-6,2,-7,6,-4,1,-4,1,9,1,7,5,7,1,-5,-1,5,2,2,7,-2,-9,5,2,-1,8,-9,7,6,10,-10,6,-4,5,-8,-3,3,5,-1,3,-1,9,-4,6,4,-3,8,-8,-10,8,9,10,-5,-1,-3,-10,5,-6,6,9,9,4,5,-10,9,5,-3,-2,-2,-7,-7,-1,8,3,1,-4,8,-8,2,-8,-9,-8,9,-1,3,8,-6,-6,6,8,3,-8,4,2,7,8,6,-8,-8,-6,8,-4,-2,-1,-10,-8,5,-2,3,6,5,-5,9,-5,-4,-9,6,-9,2,9,-2,-6,2,-5,-3,6,-4,10,8,-2,10,-5,5,-7,5,-10,4,4,-4,-2,10,7,-2,-9,4,-1,3,3,1,6,7,-4,1,-8,9,-2,-9,-4,7,9,5,6,-7,5,-8,-7,6,-7,-1,4,6,-10,-6,-5,-8,-4,6,10,-10,3,-7,-4,-4,-1,-9,-7,-2,9,-1,-1,-9,-1,-7,-8,7,5,-4,8,4,-2,-6,-8,-6,-6,-1,6,-2,-5,-8,-7,6,9,-3,-5,8,-1,-6,3,-6,-9,-4,9,1,-6,-8,-2,-5,6,7,6,-1,-10,-8,1,9,-10,-6,-10,4,-6,1,1,-10,-5,-10,-4,1,-10,-6,10,-2,10,-1,6,10,-10,-3,-6,-7,2,5,-8,10,3,10,3,8,-1,6,6,1,-7,-8,7,-8,-3,-7,-9,-1,-4,8,5,1,-4,-3,-4,-6,-1,4,10,-9,4,5,4,6,1,7,9,-9,-6,-3,1,9,-4,9,4,-8,-7,-2,1,9,1,7,4,2,10,-10,5,-2,4,-2,3,-7,-2,-9,6,-6,-6,6,9,-1,3,4,3,-6,9,-7,7,1,2,4,-2,4,3,9,8,-5,-1,1,-2,3,5,4,-4,1,6,4,6,-7,8,1,6,-6,-2,3,4,-7,-5,-2,5,5,-1,-3,-8,5,4,1,3,-7,6,1,5,8,-1,9,6,-9,-6,3,3,-8,-6,-9,8,-4,-7,4,-6,-3,5,-3,7,-5,6,-7,-7,-8,-5,2,2,-8,2,10,-6,-5,7,9,1,7,3,-6,10,-3,-10,8,10,10,10,2,-7,5,4,-7,2,-2,-9,-7,-2,-4,5,4,-10,9,-6,-3,7,-6,4,8,7,-10,8,-7,-8,-1,-3,-8,9,2,-8,10,-7,-10,10,-6,8,5,-5,-6,-3,6,2,-10,3,8,-1,9,-5,-8,7,-1,-3,-2,-9,1,-5,-10,3,8,6,-7,6,-4,7,7,-9,10,7,10,10,9,-10,-10,1,-1,6,5,-6,-7,2,-10,2,-4,-1,4,10,5,-2,-5,5,-9,3,-6,-2,3,-5,-8,-2,6,9,-5,3,8,-6,-10,8,3,3,2,2,-3,10,-8,6,-8,-5,-3,-6,4,4,5,3,-5,9,6,-5,-2,2,9,-3,-2,-3,-7,-6,1,4,5,-5,-8,10,-8,4,-1,-8,-4,-1,-9,3,-1,6,-2,7,-10,8,7,-3,-2,-4,3,5,-3,6,-9,8,10,4,-4,7,-3,1,2,4,-3,9,10,-5,-10,-7,-2,1,-6,-3,-5,-4,7,10,-1,5,5,-10,-8,10,-8,7,9,-1,2,-5,6,7,7,5,6,-2,6,7,-6,1,3,3,7,-9,10,8,-5,9,4,2,6,10,5,-5,4,5,4,-9,4,10,4,-7,-2,-1,-2,6,-6,-9,4,1,10,5,-4,4,4,1,3,7,6,-4,10,8,8,6,-1,-2,-3,-4,-3,6,-4,3,6,-3,-7,-3,-6,-4,8,6,9,8,-5,2,1,-5,-6,2,-8,4,-1,6,-8,10,2,-5,4,-4,8,-6,5,-5,10,3,-2,5,6,1,-2,1,-10,5,-4,2,-5,10,-10,1,4,-9,-2,2,-6,3,-7,-1,3,-9,-5,8,1,-9,4,-2,3,5,-6,3,-9,1,3,2,-8,-2,4,-4,-7,-10,3,9,5,-3,-10,-4,-5,6,-7,-1,-9,-9,-2,-10,7,9,-3,-8,-2,-9,9,3,10,-9,6,-5,4,8,6,4,9,3,-2,8,4,-8,3,-7,1,-2,-8,3,-1,-8,10,-2,5,-9,-8,3,-4,-5,2,-2,9,-1,-10,-1,-5,10,10,4,-7,4,-8,9,8,1,-5,-7,6,3,4,9,-2,-7,-2,10,2,7,1,-3,10,-2,-6,9,-7,-8,-6,-10,-7,-1,-6,10,-6,-9,1,-7,4,5,-6,-2,9,-4,10,-3,3,-7,4,-8,-2,-7,-8,5,-4,2,9,5,-5,-2,4,-1,9,7,-5,4,-1,2,7,-1,-2,-3,8,-8,6,9,7,-9,8,-10,3,2,-4,3,-4,2,-9,8,2,2,7,-2,-1,-1,-8,-4,2,5,10,9,4,3,-8,-1,-8,10,4,10,-2,-6,1,-3,6,10,8,4,-3,-3,8,1,7,-1,-3,6,-3,8], dtype = "uint32")#candidate|5165|(1440,)|const|uint32
call_5164 = relay.TupleGetItem(func_4441_call(relay.reshape(const_5165.astype('uint32'), [12, 12, 10]), relay.reshape(const_5165.astype('uint32'), [12, 12, 10]), ), 0)
call_5166 = relay.TupleGetItem(func_4445_call(relay.reshape(const_5165.astype('uint32'), [12, 12, 10]), relay.reshape(const_5165.astype('uint32'), [12, 12, 10]), ), 0)
var_5168 = relay.var("var_5168", dtype = "bool", shape = (10, 12, 5))#candidate|5168|(10, 12, 5)|var|bool
bop_5169 = relay.bitwise_and(call_5099.astype('uint8'), relay.reshape(var_5168.astype('uint8'), relay.shape_of(call_5099))) # shape=(10, 12, 5)
bop_5172 = relay.bitwise_and(call_5100.astype('uint8'), relay.reshape(var_5168.astype('uint8'), relay.shape_of(call_5100))) # shape=(10, 12, 5)
output = relay.Tuple([bop_5154,call_5164,const_5165,bop_5169,])
output2 = relay.Tuple([bop_5157,call_5166,const_5165,bop_5172,])
func_5184 = relay.Function([var_5168,], output)
mod['func_5184'] = func_5184
mod = relay.transform.InferType()(mod)
var_5185 = relay.var("var_5185", dtype = "bool", shape = (10, 12, 5))#candidate|5185|(10, 12, 5)|var|bool
output = func_5184(var_5185)
func_5186 = relay.Function([var_5185], output)
mutated_mod['func_5186'] = func_5186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4088_call = mod.get_global_var('func_4088')
func_4089_call = mutated_mod.get_global_var('func_4089')
call_5202 = func_4088_call()
call_5203 = func_4088_call()
func_4031_call = mod.get_global_var('func_4031')
func_4033_call = mutated_mod.get_global_var('func_4033')
call_5207 = func_4031_call(relay.reshape(call_5202.astype('bool'), [10, 12, 5]))
call_5208 = func_4031_call(relay.reshape(call_5202.astype('bool'), [10, 12, 5]))
output = relay.Tuple([call_5202,call_5207,])
output2 = relay.Tuple([call_5203,call_5208,])
func_5213 = relay.Function([], output)
mod['func_5213'] = func_5213
mod = relay.transform.InferType()(mod)
output = func_5213()
func_5214 = relay.Function([], output)
mutated_mod['func_5214'] = func_5214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5213_call = mod.get_global_var('func_5213')
func_5214_call = mutated_mod.get_global_var('func_5214')
call_5285 = relay.TupleGetItem(func_5213_call(), 0)
call_5286 = relay.TupleGetItem(func_5214_call(), 0)
output = relay.Tuple([call_5285,])
output2 = relay.Tuple([call_5286,])
func_5287 = relay.Function([], output)
mod['func_5287'] = func_5287
mod = relay.transform.InferType()(mod)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5288 = func_5287_call()
output = call_5288
func_5289 = relay.Function([], output)
mutated_mod['func_5289'] = func_5289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4722_call = mod.get_global_var('func_4722')
func_4724_call = mutated_mod.get_global_var('func_4724')
call_5298 = relay.TupleGetItem(func_4722_call(), 1)
call_5299 = relay.TupleGetItem(func_4724_call(), 1)
output = call_5298
output2 = call_5299
func_5320 = relay.Function([], output)
mod['func_5320'] = func_5320
mod = relay.transform.InferType()(mod)
mutated_mod['func_5320'] = func_5320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5320_call = mutated_mod.get_global_var('func_5320')
call_5321 = func_5320_call()
output = call_5321
func_5322 = relay.Function([], output)
mutated_mod['func_5322'] = func_5322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5342 = relay.var("var_5342", dtype = "float64", shape = (8, 16, 16))#candidate|5342|(8, 16, 16)|var|float64
uop_5343 = relay.sigmoid(var_5342.astype('float64')) # shape=(8, 16, 16)
output = relay.Tuple([uop_5343,])
output2 = relay.Tuple([uop_5343,])
func_5350 = relay.Function([var_5342,], output)
mod['func_5350'] = func_5350
mod = relay.transform.InferType()(mod)
var_5351 = relay.var("var_5351", dtype = "float64", shape = (8, 16, 16))#candidate|5351|(8, 16, 16)|var|float64
output = func_5350(var_5351)
func_5352 = relay.Function([var_5351], output)
mutated_mod['func_5352'] = func_5352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4407_call = mod.get_global_var('func_4407')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_5431 = func_4407_call()
call_5432 = func_4407_call()
func_4407_call = mod.get_global_var('func_4407')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_5448 = func_4407_call()
call_5449 = func_4407_call()
func_2046_call = mod.get_global_var('func_2046')
func_2051_call = mutated_mod.get_global_var('func_2051')
const_5474 = relay.const([7.097443,9.333059,6.707264,4.267818,-1.910137,8.293369,3.547530,6.687042,-6.968946,-8.775511,3.319080,-4.801974,-9.221827,3.197933,-4.713097,-6.957707,6.343305,0.319536,-4.302989,2.868121,-5.927482,-6.945152,-3.205450,-2.267343,-5.472726,0.524309,4.640146,5.358437,3.720095,9.420821,-2.537417,2.008638,6.622446,-3.922234,-0.229364,9.408892,6.154935,-6.581562,6.563437,-8.840918,8.466821,6.640125,6.121837,-2.081910,8.673969,-4.547640,5.787136,-6.354221,-7.158083,6.243202,-8.987725,1.548140,-6.181443,9.543644,-7.594218,-6.141415,-6.901817,-2.918881,-7.425340,-5.827588,5.524581,2.980510,5.118197,9.509584,-0.675179,-7.203437,7.567854,-0.954061,1.397130,5.024464,-3.908728,-7.436279,0.458534,-4.259573,6.026222,-4.641367,-6.614817,-4.212021,9.150676,3.959203,-4.974878,-5.686941,-0.617235,6.254388,2.833144,6.825180,-2.430211,-3.223434,3.161698,8.914390,6.054606,1.624261,2.432172,5.028457,4.788675,9.973098,-1.564732,-9.563979,-0.754172,7.601782,-1.425799,0.902457,-6.489911,3.596227,9.542508,-9.782922,-8.091918,-4.174896,2.252355,-1.826554,-4.503595,-7.158865,3.299801,0.333524,3.537966,1.254798,-1.747264,-3.508747,-7.208915,-0.568448,0.441970,6.727338,-1.108496,5.225975,9.456657,-2.757973,5.705223,5.010455,1.460016,7.744275,1.658089,4.795020,8.777745,-3.366091,1.939226,9.056342,4.046007,-6.935990,-7.956794,-6.449072,5.595384,-8.677979,4.222191,6.142459,-2.340671,4.063413,-8.930879,0.250920,8.404577,7.943397,-3.146818,7.040832,8.181853,3.715590,3.358200,-9.919385,6.918974,-5.894672,-2.682640,3.798033,-9.720979,-7.575171,4.353197,-9.199601,0.189840,1.095183,8.201968,2.166456,-5.279975,-9.265020,-1.948791,-6.263550,8.721585,4.595044,7.508892,7.358115,5.994303,-0.495327,6.428843,7.286005,-6.403154,3.588157,3.988271,1.663742,0.339237,-2.548098,-7.540875,2.730809,1.826958,6.063315,-8.923659,-8.524128,-4.535735,-2.052335,4.480209,-1.545259,9.605028,5.157911,-1.465053,-8.695509,0.789761,-1.961565,-4.319591,5.553978,-2.437695,-8.701147,2.793714,-4.552776,5.625329,-2.850321,9.115153,-9.768158,-2.994570,7.161230,-0.989208,-7.907461,-5.749240,7.435444,3.136733,-1.635795,9.154706,-2.402482,9.555769,-3.184386,9.354935,-7.436290,5.947005,9.046397,-8.660331,1.153634,9.321309,-3.403802,-7.965138,-3.789808,0.217563,5.739527,2.771475,0.544735,-4.247507,1.497509,-8.627594,-4.242414,-7.471495,8.528517,4.088139,-3.078726,8.894992,-8.166657,-9.878935,9.911958,-6.341950,6.804272,-9.068981,-0.897704,-2.550107,-5.816567,7.793475,2.521343,7.030492,6.024008,1.378327,6.164689,-1.253659,-2.813960,-1.549253,-5.838499,-4.675495,-8.287435,9.040492,7.262845,-1.844167,-9.578548,1.520890,0.719101,2.842473,1.453518,-8.202585,7.440614,-5.170524,-0.045357,6.798190,4.539496,-8.999531,-3.704285,5.815908,2.548419,7.610307,0.449847,7.971929,1.197672,1.343872,9.826305,4.474175,2.237485,-5.197819,-4.086242,-8.302628,8.968596,7.786268,-2.948681,-8.936864,-4.535420,-7.792021,-6.058383,7.480124,-9.630147,-2.266704,-8.214897,-2.173726,8.341168,6.117057,-5.974138,-2.641987,-1.223354,9.094525,-4.881780,8.196758,2.152622,-6.504935,1.874435,-1.421657,8.553254,-3.389471,-8.458353,8.722988,0.189737,-5.407848,-0.477719,-1.006051,-7.389654,-4.665350,2.657490,-1.507964,3.740158,-4.488136,-0.823850,-5.639585,1.773098,3.417767,7.106330,0.716602,-7.459793,-7.294904,-5.455108,8.060828,-3.677939,0.916946,6.708401,-2.083270,1.985836,-5.095894,0.815859,0.987925,8.721560,3.379600,4.159725,0.386665,-6.118735,-2.843015,-0.492828,7.642946,7.089957,-3.081101,-5.777141,6.616475,9.693778,1.146221,-8.559791,0.809304,-7.723109,-3.648309,-9.222725,4.480527,4.134502,4.483518,9.531310,-6.877666,-4.911573,-0.173644,-6.433462,-2.582321,1.289338,-5.639148,-5.880511,4.811167,-0.830615,-0.149973,4.727878,6.219538,3.356351,5.623811,-1.841253,-2.554050,-1.871967,3.276599,-2.191774,5.063151,-7.177145,-0.681301,5.352867,7.642259,6.995135,-2.217756,3.164702,-6.312197,5.782727,6.886719,7.280576,-4.499467,-7.368084,-7.720692,9.147829,-7.082906,-0.728936,-5.393586,-4.604554,7.375549,6.373941,4.725153,-0.322338,6.071509,6.258246,4.757311,-1.416429,-6.321429,4.103757,-7.471362,-8.694772,-5.986109,8.103577,4.992191,-5.243768,2.150033,-4.603999,-7.565514,-0.358146,-2.456906,7.763927,2.571403,4.914428,-7.105327,-7.091805,4.951752,-5.353064,5.524026,-5.670314,2.695679,-4.250448,-3.698451,1.617591,9.037005,6.422190,5.779808,4.659609,-3.565674,5.834513,2.840746,8.190175,-0.974381,0.229399,7.637121,-9.072575,-5.464847,-8.400487,-1.159852,-6.993217,8.293986,0.184243,-3.545554,7.979763,-8.250997,3.967016,4.589046,-9.377599,-6.749191,1.973932,-7.798498,5.936284,-1.005622,2.559493,0.983831,-2.148440,8.627222,-8.452615,-5.480402,2.742486,-4.914513,4.095282,0.399229,7.561063,6.776339,-3.562771,0.533689,-3.442196,6.607905,-0.604947,0.033966,2.926167,-1.953880,-6.438438,-3.640785,1.402021,0.900389,-9.867374,1.006657,-0.468874,-6.861360,-9.196568,-0.952907,-6.243284,-7.872822,2.731906,9.906579,6.846635,-1.376834,2.589198,8.028045,7.263156,8.093012,4.492394,6.118274,3.900021,-8.396511,0.543880,-2.706262,-2.620712,-7.088393,8.817384,1.306086,-0.926831,-8.259971,-1.448717,-0.966218,-4.845721,8.087397,-2.735511,-4.445930,-9.186321,8.886959,3.676129,1.746362,4.745935,9.899837,-1.188796,1.206035,-9.987337,-9.481292,8.643274,-4.856760,-8.805732,7.789540,5.868105,-1.258308,7.838065,2.643983,1.327026,-0.480139,7.967422,0.448019,-8.424375,-6.141348,3.592081,2.017745,4.474778,-8.545275,8.648263,2.089966,9.182874,9.055654,3.812185,-1.404354,4.582119,2.857331,-9.211937,-5.992660,9.175767,-9.615571,2.170809,8.794452,1.169018,-6.693747,-9.906588,1.850280,7.397844,-9.071958,-9.443820,-3.869312,8.711889,-5.060661,-0.386820,0.970707,4.422869,-7.772674,7.710154,2.492670,-7.246723,-8.841555,8.151998,-8.673267,-3.941332,-7.910489,8.450935,-0.700713,-7.186636,6.071838,-2.337397,8.602924,-9.366111,-5.024819,3.791898,-2.220331,-3.833370,-5.169262,1.622683,-2.961118,8.272375,-8.234864,3.253075,-0.583385,5.000925,4.407618,-2.383129,8.308431,-1.417131,-4.463614,7.180810,1.542069,5.143238,-8.278423,9.302416,-7.949706,5.749055,5.117494,-3.960888,-6.480954,8.532586,6.374347,-4.291160,-6.086546,-2.979815,9.089416,-6.039413,0.026710,-3.099158,-2.040508,7.773293,1.467656,7.136637,8.512093,-1.045764,9.556294,7.040268,9.280958,0.789691,7.770167,-4.301543,0.415252,6.177506,4.720518,-0.113112,0.512091,-2.570361,-0.932667,-3.156152,0.902318,-9.125476,-7.552827,0.199867,9.703329,-8.108636,8.830310,0.695352,4.302193,3.047579,4.618532,-7.148267,9.443032,9.143336,-4.185667,-6.698017,-4.076809,-2.168403,-6.481859,-7.451148,-1.831266,-3.265624,4.188399,-9.299963,9.202739,0.973946,-5.479791,1.882479,2.189619,2.613098,-5.770013,8.660458,-5.982738,-2.921060,-7.993512,2.837490,9.456758,-5.894600,0.052798,4.748125,-8.088021,3.882874,-7.389978,0.451532,9.329785,2.203100,-5.495737,-5.960208,-8.003627,6.343968,9.913931,4.420268,3.860318,-6.418474,-7.299774,7.480096,-3.704047,6.713678,6.604797,-5.524233,-6.435022,6.711615,3.186383,2.018144,-0.563308,-7.285842,0.027294,-7.335457,1.843735,-9.417965,-5.879000,-9.885728,-8.129148,5.463325,-3.313877,1.068287,1.563214,3.730695,-1.229248,-4.706792,-6.410453,3.102635,-2.553033,-4.461346,-8.105311,5.284405,-5.089598,2.265523,-6.857518,-9.963692,5.138153,2.106324,-0.360227,1.427595,4.908669,7.793568,-7.583307,-7.280006,-9.359301,-7.245208,5.375075,4.299968,4.744319,-7.153315,3.853031,0.762858,-0.715606,0.340765,5.455803,-0.865693,-2.994256,-3.936417,-7.921674,9.019589,3.217704,9.878510,-3.852771,-2.151409,7.618107,3.795777,-4.940044,4.611458,6.254174,2.056991,6.763970,6.042121,-8.356007,-2.543790,-9.525224,4.537867,7.969741,-1.602578,-3.953389,-2.423674,-3.882522,-3.380424,-4.538484,3.763847,2.377633,-6.468645,-2.314991,-3.997383,-9.479994,8.261932,0.826850,-9.836775,9.209407,-6.449576,-7.831503,-5.411657,-5.232619,6.803169,-3.559778,-9.579649,7.827891,0.807750,-6.562863,-2.908049,-4.512412,-1.887990,2.163255,5.404014,9.729995,-3.249235,-5.506575,-0.637083,9.530072,5.514436,9.044699,6.781000,-2.978029,-8.267718,2.646347,2.393232,6.591602,8.095167], dtype = "float64")#candidate|5474|(840,)|const|float64
call_5473 = relay.TupleGetItem(func_2046_call(relay.reshape(const_5474.astype('float64'), [12, 5, 14]), relay.reshape(const_5474.astype('float64'), [12, 5, 14]), relay.reshape(const_5474.astype('float64'), [12, 5, 14]), ), 3)
call_5475 = relay.TupleGetItem(func_2051_call(relay.reshape(const_5474.astype('float64'), [12, 5, 14]), relay.reshape(const_5474.astype('float64'), [12, 5, 14]), relay.reshape(const_5474.astype('float64'), [12, 5, 14]), ), 3)
var_5481 = relay.var("var_5481", dtype = "float32", shape = (8, 1170))#candidate|5481|(8, 1170)|var|float32
bop_5482 = relay.less_equal(call_5473.astype('bool'), var_5481.astype('bool')) # shape=(8, 1170)
bop_5485 = relay.less_equal(call_5475.astype('bool'), var_5481.astype('bool')) # shape=(8, 1170)
func_4722_call = mod.get_global_var('func_4722')
func_4724_call = mutated_mod.get_global_var('func_4724')
call_5487 = relay.TupleGetItem(func_4722_call(), 1)
call_5488 = relay.TupleGetItem(func_4724_call(), 1)
uop_5504 = relay.log(call_5448.astype('float32')) # shape=(10, 12, 5)
uop_5506 = relay.log(call_5449.astype('float32')) # shape=(10, 12, 5)
func_4810_call = mod.get_global_var('func_4810')
func_4811_call = mutated_mod.get_global_var('func_4811')
call_5509 = relay.TupleGetItem(func_4810_call(), 0)
call_5510 = relay.TupleGetItem(func_4811_call(), 0)
const_5566 = relay.const([[-9.871315,-3.441599,6.748770,5.830265,4.772657,3.206334,-4.551637,-8.725345,-9.390609,3.088257,6.647866,5.687213,0.801168,0.007315,-6.077818,2.231568,-5.579451,3.026813,0.693941,-9.745200,6.951016,-5.049066,-5.561578,-7.579599,-1.265917,-7.207592,-9.875287,3.612613,-4.269177,-6.817441,-6.176812,8.942257,4.140822,-8.505813,5.757541,5.764183,-0.329741,-6.025867,-7.822320,-7.996183,3.372852,-5.837426,-0.244142,3.691345,-1.648770,-8.109216,6.862589,7.044648,-8.096993,-0.237258,6.911512,-4.283400,9.275187,-9.806685,-3.039735,-0.325228,9.076680,9.046849,2.493619,-5.612799,-9.254512,-0.737672,-7.933988,-6.705488,3.389764,8.173774,-7.192600,-9.323972,-4.382055,2.478725,1.247434,-0.897093,-5.248350,5.004372,4.793065,-2.177050,-9.568214,6.458094,-2.358006,2.485746,-2.744444,-9.845209,2.198650,2.023881,-8.666531,-3.189104,-8.255744,-0.238918,-8.637608,-3.217442,-0.414502,0.452834,6.007990,6.733660,-0.560570,4.910107,0.667462,3.091422,6.815779,7.185496,9.831188,7.272625,-0.854428,-8.198907,2.563694,-4.668957,0.153844,-7.795756,1.427297,2.285812,9.396682,-4.502286,-8.039237,5.167853,-1.228566,8.843812,-4.046164,-8.697610,0.147191,1.569824,2.485374,-2.345291,3.387571,-5.921815,-9.316513,-2.818277,-1.293245,3.242806,-7.224531,-3.695102,0.775384,-0.676901,2.183611,-3.457121,2.785769,8.470200,-9.062452,-7.636508,0.536365,-6.630949,-9.755249,2.810655,0.623388,7.316096,9.781460,3.831214,-3.305687,-7.401515,-0.231377,-5.009855,-6.753082,-6.700705,7.528104,-9.787456,7.154995,-2.815860,2.879882,1.008492,-9.955438,-0.238028,-1.824528,-7.706103,5.205645,-0.397697,-0.195529,8.560522,2.250899,0.710896,-1.573022,8.961697,-1.235523,4.963241,2.070218,-5.276503,-1.309031,5.732783,-1.531940,9.614877,-2.474478,0.761947,-1.095933,1.401025,6.366664,-0.317478,-2.765567,5.109920,9.394986,-4.964449,2.423724,0.664030,4.300535,2.904963,-6.598223,3.707597,-5.149866,9.716988,7.496983,-5.333921,2.762000,1.276957,-2.054506,-1.137937,3.426126,-4.240211,-3.346234,-7.992502,-9.664587,8.750662,-1.583756,5.787738,-9.600725,1.928890,8.816431,-3.508519,-1.058859,-1.502140,-1.773403,4.336030,3.142733,7.483813,2.724439,7.152710,4.574416,-6.069575,4.831944,-4.336156,7.208231,-4.170804,-4.262703,0.577277,-0.557839,4.697250,2.276679,-5.125146,5.601828,-8.234572,-1.432913,-3.010382,-7.992734,2.441840,1.482571,9.827764,-1.125121,2.876275,-2.342883,6.938265,3.263692,-2.384376,8.730468,1.144500,-1.048921,1.338878,-8.808796,-7.255887,2.337822,-1.986638,6.079314,8.110880,8.800930,-4.724207,5.786867,-2.609933,6.539502,3.560152,-7.586021,2.469023,-0.244446,5.029353,-2.292476,-6.862849,6.629116,-1.095239,-3.815644,-1.177354,6.162680,-4.056519,4.250087,4.921408,6.285287,9.057311,9.397453,-8.092872,-0.351700,-3.979379,6.705226,-8.804769,-2.443299,4.334671,-9.702105,-6.510230,3.508330,-7.661579,-9.576834,8.398265,4.821925,3.785517,5.580761,-9.406277,7.323684,-4.681826,5.166898,4.290566,-7.112827,8.390184,2.443647,-1.752677,-2.797503,9.661795,-1.375765,-4.453894,1.402696,-7.601828,8.561628,-7.041130,-4.367806,6.878880,9.902864,7.695021,6.936993,-2.545419,-0.474846,0.259915,-0.805965,4.308080,2.342557,-2.814494,8.595354,3.955291,5.106290,9.442962,8.617999,-0.511789,-9.743556,-0.479104,-8.795112,-5.272959,7.693393,7.378332,-1.806015,-2.884132,-1.520345,-2.841058,5.196093,-6.214548,-1.799750,-9.903763,-6.463759,-3.439968,-9.141371,-4.106837,-6.639695,-9.544946,6.735179,8.925452,-5.527225,7.835761,-9.613049,0.171641,-7.577493,-2.823356,3.742849,-9.155110,3.480011,-2.411717,6.059975,-2.162267,3.036622,4.141823,-3.868292,-6.515368,-8.616303,1.439480,-4.282807,-0.744599,-6.030302,4.159020,-3.573886,2.867394,-6.309692,4.520014,1.608806,7.057542,-6.817716,0.684755,7.887667,-3.666494,5.190855,-9.856278,-1.106320,-4.852491,-7.287356,-0.979842,5.913298,-0.332683,-0.633063,5.232924,-5.825218,-7.039031,5.269479,0.613402,-9.569410,-6.764656,-8.506484,6.518699,-4.342754,5.732511,0.146797,9.319507,-1.023667,-3.538985,9.388907,-6.513541,3.128166,0.523277,-1.235160,2.431298,-6.014513,-9.303726,1.830062,6.813815,-3.515232,-5.154187,-2.517039,-2.402527,3.146527,8.305935,2.626495,-4.819964,1.544082,2.790372,6.475920,-2.252153,1.433332,-7.126451,-2.011519,-6.203119,-3.270085,-7.218022,-3.817996,8.679460,0.623794,-8.861608,-6.793778,5.607099,-9.273889,4.790018,-2.486375,9.987396,9.073244,-9.292728,0.611799,-0.429342,8.236073,3.537416,9.255955,5.432623,7.867896,1.229368,6.863484,1.223863,-5.032113,7.172571,-5.509918,-6.851670,-0.224231,6.535211,3.689922,1.790414,-7.105762,-1.035357,-8.743733,6.073651,3.520526,1.229966,6.101359,0.663873,-8.700806,-2.177195,1.630109,-3.190821,7.191786,-0.148781,8.532054,2.020398,-7.878770,2.343163,-5.092934,-1.105218,-3.010667,-5.300170,9.199638,6.401562,-8.971148,-7.050177,-3.507377,0.317739,4.181008,-4.271507,0.734023,-0.739343,4.516502,-1.644232,-8.935688,2.596109,9.574501,6.157631,2.201263,-9.445357,-3.958628,-4.691134,7.766269,4.050628,6.647754,0.848941,7.222030,-8.810520,0.421486,-7.227952,4.908552,-6.585256,3.137893,7.032032,-8.233432,-7.711690,8.304164,5.030181,-1.210836,3.837712,-8.471833,6.645126,-0.320353,-9.994575,-3.258622,-4.330176,1.282325,-8.336745,-3.540637,7.593097,9.660291,9.912355,-9.514602,6.764325,0.956768,-8.427022,2.168191,-8.519376,0.461543,-4.667226,7.936714,-2.188630,5.393677,-2.003302,-6.892740,6.803298,3.990533,-2.195645,5.220323,1.801484,-0.136402,7.145996,9.510562,-1.849431,-5.221981,-6.395353,8.920103,-7.270006,-3.960004,-1.743959,8.263633,-7.287108,-7.991118,-4.102348,9.409587,8.832320,-5.167385,2.744753,-7.094095,-6.333411,-9.666074,-1.149930,0.465795,1.904536,3.788925,7.313060,3.490048,-2.478355,-9.488135,1.656055,-6.246184,-5.937956,4.068260,-8.110089,9.668287,5.240565,1.784977,9.675544,-1.607060,-4.269149,-1.248982,-9.142714,-7.620965,6.510404,-8.433879,-0.209295,7.424355,1.312007,-2.711469,-5.973659,-7.499927,-6.773279,-6.299017,4.959566,-0.586264,-8.582338,6.291074,-0.061465,2.205536,-8.012661,-8.394592,-7.181417,5.656086,2.586710,9.899975,0.924422,6.622265,-4.940894,2.862346,-8.357112,3.629882,-1.987767,-5.003451,-5.095532,7.359365,3.219480,6.424499,7.383104,8.004124,1.308601,4.565124,-3.121089,-9.563049,-5.309192,-8.644351,0.442590,4.419069,-5.579977,-6.768965,-9.114353,-4.949609,7.019351,3.016871,-7.044184,5.158384,-0.005903,3.606279,8.177479,9.589277,6.802236,6.054119,5.771174,2.788873,-4.504355,2.807623,8.642759,-1.826529,3.584798,0.269996,-0.625231,1.500559,6.235329,4.925748,-2.264933,-0.979249,3.719906,-7.598230,0.522441,-3.111258,7.371146,-7.377121,5.348620,-7.963668,-2.292289,8.437372,-8.576329,3.943377,6.362654,7.642627,9.833782,1.377943,2.643281,-7.225393,7.721305,-0.347970,-3.011409,3.300588,2.365861,-4.227244,-4.960982,-2.995263,0.615452,-5.690224,-8.871906,-2.470841,-1.933054,-1.066218,-0.341035,-7.799152,-3.871586,-6.201250,5.548249,-3.623545,6.999306,-3.630989,-2.942673,3.607795,2.888744,-4.404393,6.953141,5.315341,8.249516,5.326723,-7.102905,7.437955,-2.319953,5.396805,-3.930988,-5.032831,2.900887,1.085516,2.794592,6.317786,-5.687293,-4.026929,-4.435723,3.427096,-2.266343,8.543343,-2.514016,9.388416,0.910670,-9.405271,-4.482167,2.803482,-3.815468,-1.378161,5.077833,-7.068629,6.255132,2.412322,-5.727807,6.981797,5.076922,-3.103580,-5.192223,-1.257946,-6.722926,2.372429,1.321794,-6.466320,5.691095,7.610094,-8.209292,-2.792143,7.250633,-4.826806,7.079583,-6.025407,-5.408841,-0.480160,-8.672309,-7.870402,-6.532863,9.776942,0.987045,4.926176,-9.536040,5.290273,-2.735924,7.827518,-2.860479,7.666898,3.823621,-0.846733,-4.738905,-4.252064,-7.410505,-3.040636,-1.593761,-4.720673,4.134830,-4.883275,6.579298,2.764390,-5.318440,2.604742,-2.215675,-6.870775,-5.323097,6.770389,7.128049,6.900784,1.515956,-8.640167,9.678155,1.058859,-4.956603,5.958415,6.501902,5.445282,1.692915,-2.614814,-3.751884,4.598137,-0.217705,5.504259,9.418923,6.173651,-0.866689,-1.298093,-5.185460,4.644179,-5.642566,-5.483997,6.967471,5.648855,-6.625711,-5.560182,-3.363264,4.039788,-3.906946,-3.441918,0.755181,-0.508754,-9.340011,-1.306785,-2.037354,8.047470,-1.152529,8.269765,-7.624621,-5.126761,-3.180055,8.688014,-2.015956,1.640591,3.470737,-3.925869,2.639325,6.948039,-5.933286,8.094239,2.536846,2.332540,-9.221654,3.185191,5.187734,-4.432559,-2.095908,-6.182153,-7.779755,6.511009,0.376078,3.799156,8.442622,-2.795033,-7.624239,-8.739986,0.657448,7.281533,-1.542756,-3.040404,-8.805849,-6.120029,-7.310234,9.268763,-2.275425,-6.181187,8.782862,0.104418,-8.140511,-7.860525,8.135906,-8.756788,-1.579179,-9.413005,-5.400595,-3.643767,5.899668,6.874016,2.505188,9.913727,-6.601055,0.365565,7.447484,-5.719718,4.760269,-0.054254,8.221207,7.607674,-4.318544,1.679692,-9.554300,6.706831,-6.470341,5.628671,5.149392,9.499206,-3.306281,1.620504,7.218658,-8.991600,-2.077909,1.715799,9.451244,9.206125,8.305969,2.835012,-5.838802,9.477189,0.808485,-6.820810,2.870949,-2.529666,3.742640,6.017125,2.227941,3.778219,-5.588514,-8.917432,1.671309,7.462513,-4.068167,-7.083707,7.060472,2.457388,-5.934839,-2.418640,5.366020,5.078424,-0.870506,-4.453953,-2.773031,-3.269109,-0.444612,5.259553,-3.573488,-4.405821,1.015009,-2.416019,0.506253,7.750134,7.330283,4.861374,3.735306,9.331879,-1.886412,3.734064,0.383708,6.025232,-9.423281,0.709131,-7.882746,7.832550,-4.055903,-3.490711,1.569371,2.212416,3.324209,-5.113617,-0.361102,3.627204,6.868839,1.370787,-7.550514,-5.739313,3.367219,6.646531,-7.316684,9.478112,-0.859941,-6.680844,-9.358315,5.091102,-3.895202,-9.481124,2.843602,3.151356,-0.286194,-9.298929,-2.113404,-0.368842,-9.920611,9.654072,-6.339161,-0.636727,-2.205312,1.344765,-1.830510,8.434293,-4.138416,4.529791,3.363274,-0.389672,-6.143821,-1.448647,6.327033,-5.149556,-9.833107,-9.074352,8.851037,-7.149824,9.094516,-1.358367,-3.823055,3.387211,6.588353,-1.553256,6.145389,-8.981740,4.729101,-9.622535,5.866916,6.103409,-9.215007,4.081102,-0.661022,-3.079915,9.527709,9.399840,-5.427152,-9.029538,-0.120350,-9.429808,0.700802,9.947799,3.628686,7.647463,-3.479566,-4.797564,0.475554,-1.948277,2.962737,2.482363,3.306785,-3.547881,0.965382,0.896633,-1.538127,-4.475565,0.053660,-5.726689,7.302317,8.573863,-9.315789,9.997798,7.849737,6.259804,-2.742900,6.740353,-9.315278,3.384954,-5.474057,3.806286,-5.694108,-7.161823,2.435044,-1.565679,4.778904,-7.057745,2.027699,7.136225,-9.941773,-3.308902,9.714586,-0.592625,6.744641,-2.971716,3.164873,-7.814557,9.216974,0.406016,-9.777701,7.076159,9.679374,6.859213,5.043698,-0.533521,-6.397026,-4.132539,-4.120651,6.548471,-2.135333,-4.963908,0.039080,1.134456,1.270383,9.516692,-0.322685,2.449105,-5.868004,3.950805,3.949145,0.516773,-4.460717,-7.091189,6.435104,-5.655879,1.369918,5.113707,-2.807240,1.093465,2.373674,0.433037,8.413501,2.739334,4.581748,-3.769264,-3.766311,-3.946407,2.012511,-0.147766,-8.436709,0.199503,4.204860,-0.168682,8.879143,4.049472,-9.959671,3.909543,-5.707062,-1.697501,4.015495,-8.589131,-6.709857,-4.561837,5.419625,-8.867002,9.500708,6.071955,-7.936763,-7.584584,1.334293,-1.022432,-9.990221,-4.078529,4.976504,2.721110,1.835043,-7.902236,-8.212216,0.743873,6.334560,-1.079650,3.556089,7.775899,5.268908,-6.000043,-6.427598,5.510311,-0.009022,9.668011,-1.564028,-2.515758,-9.483274,8.015891,7.070289,8.090778,1.600589,6.762326,2.154428],[-3.344095,3.287845,-6.817776,-5.637098,-5.070430,0.704032,-6.458798,-5.079124,1.864811,3.509583,-7.777087,3.522736,-5.009653,8.917470,-2.972910,-0.992635,6.619597,0.416151,0.126159,0.735379,-2.154777,1.951303,-6.618249,6.674667,3.636901,2.894261,4.484218,4.129843,1.738985,6.914318,8.955445,-2.040321,7.598839,-1.993470,7.706449,4.178262,-6.458194,-3.357191,-8.800341,-9.976000,8.481046,9.328960,3.531331,-9.824753,8.618812,-1.357653,2.549625,-6.028626,-7.091793,-3.784121,-9.203939,7.419948,-0.132277,-1.536596,0.199700,-6.495168,-9.079989,2.080629,-8.175260,-3.418451,9.850779,7.190042,8.228590,-9.451395,-0.242360,-7.774650,-6.534271,-0.597903,6.790425,2.425732,2.936389,7.708547,-3.605603,8.413774,-9.862768,-7.959821,-1.810129,1.482536,8.526498,6.835054,-0.548263,5.151746,9.910845,0.609205,-0.628553,5.157513,7.741377,3.370058,7.705660,-5.441244,-1.019903,-7.029445,-5.858076,-5.807636,8.566412,-7.600131,7.385055,-0.351909,6.647571,-1.865599,-7.600956,8.454152,-9.793492,5.932233,-5.877188,-7.397523,9.269685,5.116865,-0.919666,6.072001,-7.197079,9.089405,4.076290,-3.211478,9.295834,-9.485506,8.288930,6.988809,-0.297533,0.413211,7.018402,3.323023,-4.330965,-6.025321,1.372456,-9.601685,7.818370,8.718519,4.633500,2.139697,-1.043361,6.168319,-7.665149,-9.181150,4.624090,6.248172,4.123420,1.192768,9.864091,-4.380879,-1.243362,-8.212702,-0.616994,-4.535316,-4.751970,-2.189605,-9.655968,-6.376488,2.673041,0.018954,-2.443929,9.960871,-9.908562,-3.634266,-3.965501,-1.015788,1.428918,0.978169,-4.664036,-8.485498,2.175391,-5.986919,-6.941182,-2.516158,3.737752,-6.881935,-9.320644,0.580012,0.720224,7.161842,-8.119734,-6.004208,-7.868912,8.357462,6.637373,7.266870,-5.919949,-7.841469,-9.374627,-0.276683,9.958245,-5.299301,-0.805499,-0.968659,4.303994,-9.581040,6.246338,8.909057,-2.835180,-5.860533,-7.592060,-2.590737,6.721208,4.962833,-9.377082,2.901820,6.003765,7.695732,0.201760,4.226114,9.147909,-7.099353,-8.959993,4.978106,-5.825983,-2.352347,1.856819,-1.742687,-7.845539,0.234833,1.924878,-7.850516,-9.006384,7.285544,2.318096,-2.291641,-3.782566,0.040579,-1.145707,9.330132,-6.954874,-3.902239,-0.067440,4.262579,-9.878164,7.025419,7.687972,-2.965923,-6.999501,-5.350337,-8.044989,-7.197802,3.266910,2.039078,-9.358950,8.762212,7.513912,6.902514,-8.512115,-1.667273,6.762425,-8.999221,5.638098,-3.608567,-0.380585,1.315715,0.152111,4.930882,3.019219,-2.385538,7.168271,-1.874373,1.840913,0.087595,-9.661022,8.619792,5.123916,5.489484,-9.745991,-5.293210,-3.880553,-0.241322,-4.147355,-7.381527,-8.828986,2.650538,-6.008983,-5.614864,8.800468,4.628905,4.874378,3.736544,3.943077,6.469158,-1.150220,-0.268265,2.842756,-4.860778,3.763478,5.472604,-5.471143,1.039582,6.676273,-1.391849,0.914391,-0.191944,-3.514166,-1.692329,-3.503703,-5.632103,2.786812,9.221747,8.728294,-0.010850,5.059551,-0.388819,2.920133,-8.745636,-4.205516,3.392424,7.382291,-9.617554,-3.632513,4.119271,9.592558,4.347810,-2.657752,2.249090,5.080354,-0.608377,-3.568312,-9.870225,1.338625,-7.517878,1.202547,8.741794,0.542935,7.497091,-3.976188,0.894452,-5.878836,4.480092,5.176578,-9.953980,-2.593437,1.160476,2.440981,-7.490680,0.130497,-1.896675,7.726011,7.096221,-2.941407,-0.359270,4.414443,-1.792852,-8.442230,-7.606253,-8.051321,-9.147895,-9.453829,0.734656,8.556781,-3.862646,-0.591888,-1.895042,-8.247070,5.842641,-6.325567,-7.470487,1.251984,2.722411,-4.777346,4.712316,-3.061116,2.644395,-3.665577,-8.527624,5.546083,-1.461366,-2.830102,9.648902,-4.587865,2.317284,-2.486382,-0.921709,-0.722727,7.498982,4.855822,6.982299,2.577787,-2.403023,-4.830422,0.227139,2.168044,1.259649,-7.706691,2.576046,8.768868,2.455586,-4.774450,5.192249,3.231815,0.015350,-8.256784,-3.853301,2.692441,8.477186,-8.685040,5.807347,-1.758065,8.213649,4.772022,4.375764,7.125108,-4.230596,-7.081444,-5.003622,5.031112,-4.599122,-9.731088,5.927177,-1.229726,4.547764,9.335869,-1.193490,-9.236363,3.955978,-9.581547,-1.484421,8.628207,6.830525,8.457844,-7.862778,6.001546,-1.139623,9.170662,-0.386501,-3.584011,-9.210194,-3.388779,9.189298,-0.589255,7.055102,6.514544,-7.183341,-5.934355,-1.906665,1.486676,-3.289592,5.954008,5.262825,-9.861735,-6.727626,3.371831,9.942218,-6.613616,-6.411244,5.253784,7.848942,-2.430968,8.507265,-6.371325,-8.453789,-5.150101,-6.003774,6.343077,9.069512,1.839103,-7.439032,-4.775836,8.382019,-6.314979,-5.686399,8.135427,-1.702083,5.909703,-0.286880,3.560727,-4.080414,-5.497451,7.512784,-1.293741,8.075685,6.928533,-8.796519,6.865324,-9.312871,-4.798433,6.821697,-3.827324,9.365799,-6.279998,1.069715,-3.810454,3.221843,3.213776,-1.834983,9.542999,2.200352,9.876940,3.712898,2.439305,-9.157799,-7.848518,6.488339,6.546982,-5.297392,6.283737,0.924457,5.363332,-4.691210,6.932545,-1.935449,-9.594454,5.575117,-3.371267,8.240470,-4.103456,8.025729,2.436620,-6.755375,4.341842,-1.469455,-3.313491,-9.987267,4.251980,-4.262032,2.346517,6.289903,5.520875,8.303259,9.123816,3.379779,-1.683247,-9.743335,-0.689843,-8.501460,-2.520383,-8.203493,-8.145102,-2.471222,9.775655,-8.845963,-4.306759,-1.084419,1.641932,5.796881,-2.833905,-5.846365,1.133640,2.378667,0.034676,5.641800,-3.644419,8.673682,-9.458737,-4.472228,-9.014756,-5.533501,9.665975,-5.043679,-0.880818,1.699550,0.289221,2.415501,1.562744,-3.351080,-0.548068,-6.098290,2.935060,2.833976,5.825105,7.172074,-0.015924,-9.623988,-9.415631,-2.294579,-7.719050,-1.447971,-0.447730,-0.919004,-0.112374,-1.502471,-0.239670,8.586729,-8.016829,5.129773,9.040031,-6.621623,-1.416996,9.212122,5.745046,6.919396,3.015509,3.687970,4.031364,8.693556,-4.412883,-2.669882,-1.196397,-2.634560,-7.295565,5.468616,-7.126860,-0.265619,-6.772103,-9.299232,3.176521,-5.836424,7.009654,-2.790877,7.967775,-4.237690,-0.793173,7.901552,-6.117760,3.557433,4.568170,-5.457315,-8.133097,4.284213,-3.599887,7.741459,7.901906,5.253241,2.352674,-6.030882,2.360256,5.333991,6.760532,1.097240,-8.609412,6.807168,4.974356,-1.858607,-2.731159,-8.991984,1.286552,-5.703316,1.712887,4.182882,-8.651117,-3.547368,-4.858653,2.475964,-3.351588,8.770207,9.435574,-9.016314,7.351262,2.942655,-5.625051,-5.857828,0.697669,9.871677,-1.863714,1.688509,-5.844287,3.950422,9.170560,-6.545964,8.262214,6.257457,-5.971295,3.240722,-0.199743,5.554494,-3.645898,-0.899790,3.326663,5.426033,-2.139939,-8.153384,-8.786806,8.910695,-6.429485,0.234066,1.768781,-8.231828,-7.216547,7.989571,-5.064472,-6.094982,4.980608,-9.205482,-9.427537,-4.541404,7.329923,3.850989,-3.626969,5.998348,-1.025615,-4.546236,8.880155,-0.821435,-2.783408,-3.333815,-5.291870,-2.692079,4.433179,-6.656367,-4.373785,-5.867677,7.383910,8.735637,-7.345822,-2.215334,9.699088,1.656077,-3.557279,-2.024292,1.311252,7.623418,8.047671,0.013899,8.858138,-2.594512,5.872017,8.134710,-4.802936,-6.497138,4.414307,-1.078018,-2.236043,-7.413467,7.480545,0.700690,4.882345,-8.899121,-9.846250,-9.346146,-0.777751,4.895341,4.846194,-3.710034,5.473886,5.776253,-1.985842,1.914384,8.935458,3.032428,8.501090,7.183380,6.924772,3.079535,-4.808170,9.856155,6.375710,-9.262147,8.967306,-0.367456,4.831054,-0.129944,0.792780,-5.706058,1.199263,4.240480,5.712146,5.500589,4.907477,-2.591512,-2.612492,-2.493210,5.641541,6.112538,2.057619,3.754850,9.441572,-6.372910,-1.191082,2.311651,-4.124742,-9.181219,0.963747,7.534542,-4.486325,-3.656611,0.321646,-2.264152,1.771948,-5.996753,-8.623418,-1.000817,3.260687,-3.273548,9.980316,6.946925,4.895620,4.454946,5.711210,5.951435,0.669925,7.887754,-0.546865,1.702527,4.614808,-8.466489,8.165286,7.711442,-5.397833,-7.844662,2.634087,0.884590,5.900515,2.998561,9.126864,0.503083,9.523075,-7.846917,-8.385818,8.380016,8.999403,3.511510,-7.648546,6.551236,3.611900,1.236172,7.598046,6.975706,9.635587,4.666787,0.572862,5.824850,3.055799,-5.347410,8.056023,2.877730,3.855774,-2.766881,9.500021,-3.777997,1.692975,2.371386,8.681383,-8.372151,-5.274106,4.840435,-1.165494,-1.165612,-1.750451,9.842454,-1.658059,-4.306051,-4.340621,-8.205015,-2.619411,-7.427109,-8.062833,-8.054032,-9.634204,-0.752677,1.575006,-8.900175,7.386909,0.758409,2.183873,4.556835,-5.097701,1.499685,-6.636655,-5.978014,9.806770,3.138119,8.287841,5.158455,-8.444446,-0.234342,5.193825,1.700664,5.266832,7.229395,4.632269,-0.753827,-6.831881,-8.768003,8.545999,-8.482450,9.600194,-0.050317,8.638694,-9.538878,-6.267592,4.322992,4.831256,-2.527593,-0.124407,1.616039,-0.436004,9.964095,-2.533197,-7.155001,-8.809388,-9.114089,-6.740464,-5.421319,-2.191550,9.214755,7.329795,-2.839710,8.536961,6.484786,-8.244834,5.034259,9.178589,-2.554055,1.686770,7.264585,4.150697,4.624693,3.415484,6.929434,9.545060,-8.230571,-8.980217,7.144348,1.625234,7.386061,-5.699938,-4.637717,3.740741,3.287105,9.699081,-2.822227,-8.191446,-7.159916,-2.144461,4.756983,-1.308403,-1.184987,-8.508018,-0.083473,0.342068,-6.751457,7.855713,8.450709,5.492911,3.367558,5.067672,8.262354,6.233343,7.388151,5.055228,7.297457,-4.545361,-8.383348,-3.977999,-9.637148,-0.086648,2.185781,-1.075904,-2.900347,5.466327,-2.116059,-9.534498,-5.395559,-1.505982,3.777055,-1.943436,6.136196,-9.380077,0.964157,3.404248,-5.584426,-3.885897,7.240498,-4.213422,-0.700379,6.273443,8.076433,-8.801349,9.879375,9.080583,3.280044,-0.426697,6.850693,-1.825605,8.124947,-8.524260,-1.734082,7.291702,7.425631,4.223521,9.622268,4.535333,-4.504903,-4.940140,-0.517160,-2.707126,9.323066,-4.219110,-4.289109,2.740525,-5.786256,2.365444,6.818305,-4.123430,9.278625,-6.634544,-9.120414,6.544611,-0.910560,8.982249,5.738370,-4.617378,-0.659161,8.061982,6.379056,-3.551458,9.310766,-3.110261,-7.730105,5.906476,0.448468,-3.920986,3.652321,-7.180380,0.276785,-4.409958,-8.915399,5.708114,-1.777909,6.392754,5.688510,4.260404,6.861383,1.206412,5.989392,4.567962,6.731152,-3.352529,0.658784,-5.763440,-8.504630,-0.851161,1.589521,0.176492,-0.476936,1.392299,-7.816626,-0.687486,7.698661,8.211694,8.312395,5.906087,-2.824208,7.733784,-9.712997,-2.711265,9.396284,8.522185,-3.232476,-1.272906,0.088311,0.100343,-5.122572,-4.120556,5.997059,-2.349717,-3.565778,9.072089,-7.351214,8.334606,-9.756000,4.003167,-0.071222,-1.920389,-6.150603,6.462082,1.764386,0.290744,7.648167,5.037523,-5.406736,0.143661,5.609816,6.565952,1.150855,-8.683204,3.693978,3.258902,1.795699,-6.765057,-7.389826,8.453496,-6.884838,-1.674987,-4.807532,3.053983,2.598501,-1.859958,4.832155,-4.895280,-2.531490,0.778870,3.301157,4.896085,-0.058156,-7.065054,5.859323,-0.636708,-3.661970,1.101285,-2.139121,2.729752,4.891999,-1.672095,-3.083399,-2.145978,-5.272383,-5.931816,-2.498903,-0.530594,0.762980,-2.366295,-5.192000,1.254564,4.852123,-9.877828,1.601718,7.168631,9.228320,0.938506,9.248633,-5.260765,3.209154,6.235960,-6.928439,8.498304,-9.484847,-1.337558,-0.079733,7.075525,5.540871,-8.902807,-6.888265,5.142540,3.864100,6.600979,-5.515244,-6.026467,-9.759735,-7.228314,7.113347,-6.276472,3.669606,7.182033,-2.278305,5.178331,-1.593141,-4.933039,7.956506,-6.878694,3.530780,2.243618,4.936156,8.707071,5.832265,-2.949917,9.154600,-4.028678,8.861648,4.102268,3.643334,6.843698,-5.578396,-3.695974,-5.666482,-5.046527,-6.006575,9.439104,-9.859482,1.804328,-8.581384,-6.233599,-1.500525,-8.045258,-2.131197,-6.519422,-8.876016,5.790196,4.026353,5.981031,-5.665084,1.717928,0.834450,-7.156102,-3.662057,-3.759813,6.569711],[-9.557071,4.009157,-4.084125,-2.349144,7.525096,-9.803534,4.150695,-1.567058,8.099728,8.197728,3.381207,-0.224521,-5.632719,4.717638,8.383976,0.224606,9.817706,3.520560,1.025675,-0.316346,-7.139419,4.422561,-9.466489,-1.543840,9.571859,1.699967,1.602394,-0.738852,-5.549875,-7.178772,9.223293,1.631938,-2.029987,-9.480338,0.170368,9.304232,7.925862,8.226103,-9.164412,-0.093870,8.603681,1.851472,8.079915,-0.022216,0.773404,5.132462,3.166610,8.100793,0.273256,1.748832,-9.928666,3.300229,5.403674,-2.311053,-3.695976,6.965349,-4.599517,-3.956046,3.525552,7.522247,4.996551,2.619455,0.118188,6.645017,-5.106441,7.942098,5.555769,-9.251123,-0.337972,-6.949220,1.736722,-4.187202,-2.655763,7.140577,-4.920640,7.248205,-4.654870,-2.195942,1.047861,-9.600221,-7.921725,6.717795,-6.526613,-8.429670,-8.540936,-6.274801,0.598645,8.740522,9.757201,6.052914,0.342830,-6.102797,2.545813,7.987863,-6.073716,-2.522608,-9.929259,-5.527447,3.354020,7.564264,1.561314,-3.784513,-8.698216,8.374621,-1.139403,2.865483,3.668317,7.176262,-5.259379,8.980274,5.600560,2.700708,0.942543,-3.689072,3.278906,-3.641923,6.926957,4.636808,-4.644732,-2.444717,0.276963,-3.510662,9.268280,0.712817,2.524756,-1.612998,-2.960278,-0.537983,0.272525,-2.693157,-5.994422,1.589997,7.594446,6.271941,1.609470,9.391966,-6.256778,1.217106,2.176151,1.364826,-9.337240,4.192843,-5.252475,-0.629205,6.741239,-1.060638,-2.592253,7.447924,-1.961207,3.895645,-4.630571,-3.070323,2.780109,-0.299192,-9.272391,1.509974,1.083430,9.394906,-3.501135,2.039728,-1.273460,6.710806,-9.242251,4.729925,6.857761,-7.257020,2.245094,-5.781447,6.672444,4.942581,7.532015,-8.959071,-5.944167,-3.464449,3.436631,-2.229104,1.215893,-6.181336,-5.537474,-4.419610,8.597143,-7.537693,4.352227,3.209817,1.111019,-4.257534,6.723811,-8.043188,-5.251346,-3.780932,-6.336963,1.913110,-8.691725,0.700424,1.059449,-5.064148,0.409437,5.095305,-7.205188,8.743326,-5.013752,-5.859778,-8.429179,4.687503,8.197596,-9.903883,-5.324552,4.105196,-7.393481,6.871609,-8.996012,-5.643746,-8.853511,-8.807308,-3.869567,4.635712,2.999629,-8.839538,-7.223903,-1.950001,3.401869,1.818612,-9.056255,-6.321537,-8.684059,5.158503,8.471916,-2.325555,0.713846,-3.986240,-5.944851,-6.717944,5.095084,8.405576,-2.602843,4.628690,-6.922367,3.183215,9.185665,5.607776,-4.820889,-5.946357,-4.316389,7.901883,1.749042,6.892158,0.360012,7.141155,-5.916368,-9.699277,-9.551212,-1.657225,7.843105,-1.113899,6.182227,-5.338389,-3.617000,-8.918077,4.505490,-4.193907,6.799291,-0.277132,-0.757404,-5.369071,-7.577951,5.740325,-6.913686,8.231106,-5.874216,7.457732,-8.458803,2.844451,-1.707214,7.116889,1.071998,8.669699,-2.209088,-4.176999,4.933305,4.362494,4.776048,8.748095,4.732842,8.111938,-0.185226,4.854457,-8.025218,2.543897,-7.592219,-0.261419,-2.362472,4.653592,2.538821,1.706890,-7.089071,-9.481652,-4.415560,9.564942,6.656102,8.088895,2.182198,-9.202321,4.599394,8.519632,-4.493292,2.847362,0.257106,7.089710,-9.255279,2.636808,-0.852852,6.378539,5.527813,-6.514294,9.371182,-2.335862,-3.064540,5.304744,-2.757888,-5.252981,-0.649924,-0.341868,-9.702165,5.556183,-5.323317,2.266857,-0.487047,7.053525,5.873466,-8.506845,6.380394,-1.783314,7.225058,0.513340,-5.907475,4.321411,-4.235164,-8.834145,7.388516,2.784191,-7.735978,-5.412939,0.539953,0.992227,7.027151,-9.444465,-1.725142,1.092538,-2.945187,-9.976516,-0.482054,6.510887,8.012309,4.276156,1.354480,-9.694976,6.821686,8.656455,0.464010,2.338407,-7.911622,7.809562,-0.975653,8.752579,-6.402740,5.224357,8.649276,3.511652,-9.463516,1.124186,3.548099,-3.325226,2.341735,-4.911429,-1.536245,6.075513,3.314781,9.609573,9.320862,-4.264328,-7.103124,-5.230986,-6.565040,-1.945732,-2.701806,0.032107,-7.791759,-7.575560,2.891624,-5.205743,3.276163,-8.380619,-4.432380,-6.775507,-2.243391,5.292276,3.387055,-4.603393,3.938925,-2.957451,7.769492,-9.602653,4.043059,1.862706,5.077891,-6.656626,1.774798,2.994737,9.568294,-0.504082,-1.635859,-5.865300,7.914060,6.127066,-6.826106,3.808972,1.421536,1.864566,-4.422426,5.050214,-1.665075,-0.431739,4.894984,6.013417,-1.034666,-2.522945,-6.775185,-9.479324,-4.195878,-9.965717,4.119546,-5.289142,4.316056,-7.848455,-4.185251,5.136001,6.822078,-1.322936,1.711779,3.153871,2.264121,-1.450843,1.839724,-1.247770,6.085671,-4.904497,-2.727024,5.702270,-1.302015,0.674724,-4.492150,4.976750,7.695929,-4.553492,7.702565,-6.286724,2.777161,-1.515157,3.632388,-2.233868,-8.889858,7.557492,3.063478,-3.555131,-3.050712,-9.001279,2.475265,2.909449,-0.471554,9.154650,4.215129,-9.669508,7.671341,3.474950,8.328225,2.215669,-6.515216,-3.708480,9.234872,1.836118,4.869546,-8.797101,2.106253,2.703759,8.097271,-2.434068,-2.085435,-3.569303,3.161437,-9.854803,5.945714,-6.888835,-4.293729,-4.440963,-6.700633,-0.846441,9.430836,-9.771232,-8.159791,-9.568188,-7.307009,-9.550001,-8.434273,-5.988741,6.330439,-8.988129,-2.807514,-4.259984,-9.204730,2.230327,7.344674,-1.995235,-9.454666,1.833730,-2.853755,3.115109,-7.016107,6.878538,-8.808156,9.789614,-4.144144,-4.932479,-5.364303,9.743242,8.918287,5.223307,-5.379192,-3.214536,-2.225999,7.994790,1.567135,-4.943857,6.264462,-7.593741,4.928025,4.033441,-4.699067,3.215637,-4.291086,8.605654,6.749276,-1.125240,-7.805903,-6.416966,2.053462,7.733552,-4.020897,-6.555220,9.357745,9.743022,-8.383278,-2.895116,0.791529,-4.059550,-8.430229,4.821581,-1.818080,-7.893377,-2.309416,-2.292693,-0.317255,6.758190,3.023039,-5.220348,-3.842126,8.029348,-7.448507,5.160981,4.757568,-8.091639,3.992126,0.189954,4.897041,-3.029255,3.357901,2.602876,-5.971774,-3.250595,2.421456,-0.872852,5.273284,-4.654153,7.228901,7.748295,7.708691,0.515852,7.645526,4.930502,-2.729652,3.652304,-2.473891,5.554367,7.898041,-1.240279,5.921774,-9.758475,-2.011923,-3.807102,7.971796,3.614336,1.385373,7.707136,5.426868,-2.193710,8.903868,5.609997,-2.251331,-4.712639,4.561046,-2.136825,-8.530468,0.713275,-6.098034,-8.366384,3.598555,-7.064018,-3.190362,7.612112,-9.977004,4.672629,8.680252,6.747598,-6.563838,0.591469,-5.353621,-9.852338,0.200573,-8.139946,7.810926,9.607252,-9.212076,-1.335628,0.860364,-6.770966,2.695558,2.974039,4.708813,-6.205317,1.136458,6.989098,-2.594298,-0.700360,9.407287,4.730658,2.194210,8.395632,-8.018625,3.025839,0.352428,-0.281627,5.128272,-6.042421,-4.948173,-4.511600,-4.060940,-2.213671,2.686876,-8.191042,2.087513,-1.250164,-8.907998,-7.669905,1.482135,5.740704,7.854708,0.361680,5.280373,7.215722,-5.998427,6.972286,4.408337,9.233749,-0.475497,0.458540,6.594163,0.258753,4.720272,4.347149,0.033233,-1.304503,-6.605131,0.738506,4.557323,1.750156,8.190628,-9.166492,-5.467012,6.885842,-0.045066,-0.411556,-7.265808,6.693094,1.745838,-6.310587,6.427131,-3.557144,-5.078829,-4.708301,-0.423932,-9.854839,-3.056557,5.674011,-6.890417,-6.962379,7.696127,9.969540,-4.365884,-3.541404,0.781747,-7.137848,7.213351,-5.851999,-1.190596,4.038340,-6.712784,-1.013126,-4.518924,-3.402575,5.004834,9.882793,6.277311,-2.252300,-9.838717,-4.988589,-3.432902,-2.720398,5.070696,4.079404,9.239141,-2.664502,-8.764420,9.535945,-9.622261,-7.576656,-5.895127,1.692739,-2.985733,6.033050,-6.065722,-0.923094,-7.298587,-0.848619,4.597473,5.058551,-1.076089,-2.905028,8.899716,9.478326,1.524713,2.601937,-6.529322,-2.913861,-0.710819,9.017928,5.004086,9.137584,-9.030475,5.598437,-0.431950,2.237163,-6.311340,9.049863,2.913692,-8.403193,-0.770615,-1.610103,-3.127286,1.892549,-8.048630,4.309708,-0.359916,4.294569,-4.886937,-8.160393,1.669810,2.282667,-4.388663,0.441347,1.210337,-2.565006,0.484429,-9.041217,5.236201,7.884991,-8.907353,4.749353,3.166992,-4.896144,0.036727,-5.424241,-2.663179,1.076382,7.833169,-1.212438,-7.194281,-8.126795,0.671900,1.680699,4.650860,-6.991560,7.722404,-2.242236,-1.877253,-7.089277,-6.483745,-1.928734,-2.169191,4.307173,4.791450,-0.977271,-9.171645,2.698239,-8.182515,3.279920,7.877453,6.289968,7.808779,-1.871516,-1.050255,-7.942403,6.816116,5.962279,-4.971484,6.238848,-3.894451,4.112882,3.016715,-5.313912,1.569526,5.133129,4.309518,2.302553,-0.135754,-2.933423,-5.526922,5.566087,-2.545037,1.352682,7.694043,-2.330059,-0.809918,5.563661,-0.842577,3.874663,3.888738,4.431287,-1.213161,5.018575,-5.101469,0.907913,-6.422402,-0.768270,-3.170984,4.787544,6.473225,7.919644,7.516131,4.541010,3.195711,3.141752,7.167497,9.204595,4.287825,-9.572909,2.436843,-0.890040,8.838015,-3.088845,-8.321598,6.572181,6.846798,-3.436303,7.109236,-2.925911,-5.470862,3.772469,-1.235638,0.677148,-3.948993,1.645448,-0.243507,7.138342,6.391859,9.420576,-2.198652,7.034166,6.122187,-3.756088,6.839596,9.493920,6.626484,9.711931,-8.154377,2.741125,-6.411401,-3.940100,1.829016,-8.592104,1.242498,-5.453326,5.202640,9.990729,1.133199,2.815135,-8.660816,1.556699,-6.467887,-9.713862,7.311493,6.248375,-2.394469,-5.224295,6.023350,-1.431496,-8.753932,-5.383637,-6.077539,0.941011,-7.584391,-1.497994,4.570969,-3.256068,-1.646131,-9.011182,-6.962265,-3.000170,0.380184,-2.570070,0.782500,4.375102,-2.283647,5.383951,8.304740,-5.133302,-8.065734,3.826521,-0.304738,0.454029,-0.379564,0.671168,8.327028,3.190960,-4.926380,6.574259,3.580623,-2.491407,3.435837,-6.631667,-7.933429,-6.087094,-9.557284,-9.881449,6.829452,6.552126,-1.709376,-1.524355,-0.610858,-6.424241,-1.407001,7.839704,4.945841,5.594062,8.444970,1.375536,-9.064304,-9.249017,8.569659,-2.704359,-8.250432,-8.186971,-7.488768,-5.930858,6.530763,4.335698,9.449775,2.673909,-1.393647,4.716652,-5.002814,6.526854,-4.689459,8.904742,2.872603,-0.168631,-7.948384,-3.163782,3.845397,6.524546,2.036736,-8.131640,1.418799,5.334663,-9.790554,-5.107900,-7.318678,-7.884855,3.924444,-9.770283,0.326324,8.581307,-5.157825,-4.233589,-9.965394,-9.787642,-2.734334,-2.631246,-9.099076,-5.872467,-7.866668,8.100910,-9.881352,6.811780,-2.092576,-5.894139,-3.749008,4.926805,0.145707,0.330790,7.399752,-0.879267,-1.183761,-8.831496,-1.316258,-2.508782,5.905914,2.849761,0.331126,8.427595,6.528080,8.680292,9.932402,-4.678479,-5.387706,6.203159,7.070004,9.141514,-9.630727,-3.100795,-9.095332,-5.409341,-3.685747,-2.645875,-1.887028,3.349631,8.162841,-9.168160,3.373489,-5.276827,-8.476339,-7.910049,4.264627,4.066353,5.100117,-2.089446,-2.034696,2.875478,0.816829,-6.020984,5.043099,5.199104,-6.095622,-2.532091,-2.366997,1.371332,-7.903659,-4.176431,-2.243402,4.632389,6.978681,7.961188,-6.069273,-2.268370,-4.877892,-1.818173,8.403532,4.123607,7.620491,0.928461,-9.843209,-4.805165,-0.761241,-4.424981,-8.385097,-4.923893,9.985882,-1.260183,-6.954335,6.157691,1.997159,1.444109,9.300723,3.614716,-5.241180,-7.443469,0.536146,4.350179,9.257831,-6.725984,6.595982,1.062643,4.369033,9.479617,1.439231,-9.039963,-4.433754,4.343381,-5.155703,-7.622758,7.037228,5.371051,6.949185,2.114956,-2.538164,-1.292531,-5.425998,8.725643,8.497900,-2.054322,7.634402,-4.172193,-5.178470,-2.785115,-5.450000,8.453552,2.040196,-2.478906,7.597530,-9.485334,-8.354608,7.757923,-0.112811,-8.355090,9.583459,-4.808322,6.776818,-0.582142,-6.896843,2.196427,2.835051,6.789436,5.876754,9.077481,9.769304,4.813109,6.255318,-8.952791,2.007115,4.825986,8.557493,7.307901,-8.329766,-9.986184,-8.024383,1.543551,-0.329056,9.537162,4.145928,-9.677340,-3.213009,-3.566995,0.394226,9.491658,0.778728,9.228142,9.235470,4.261014,9.950313,-3.101806,1.692642,5.464111],[-8.044026,-7.028730,-0.859295,-3.503341,-7.286106,-4.860711,-2.756578,-2.076748,-6.821719,-3.709192,-2.673844,-6.862054,-1.470810,-2.517455,-6.487998,9.952808,-8.713262,-4.237353,3.302808,3.355265,6.677640,1.097032,8.030886,4.444760,5.012120,5.259045,-7.208350,1.964999,0.178205,-1.500208,-4.398635,-6.861717,1.544582,8.513581,-4.897923,-6.779451,-8.423965,5.622365,2.152566,5.949447,-5.073079,4.439571,-4.167847,0.516734,-3.728446,-5.295584,-1.568660,4.333391,2.943184,-3.454413,3.630894,-8.890389,-2.999214,0.021250,-0.954637,-9.076606,-3.731320,4.904620,6.561207,-4.340217,4.200939,-9.333165,2.101969,3.913522,-9.352131,-2.964553,2.288398,8.070742,-6.428965,6.600090,9.741859,-3.686141,4.500650,5.867777,-1.467822,-4.875212,-0.449163,6.328711,-3.101176,-6.523683,-9.174654,-6.388703,7.707443,8.671059,0.098954,0.026913,8.440621,-7.471684,4.220371,8.970377,4.621812,2.026470,-4.418015,4.982221,-3.481831,0.429656,7.479965,-9.129537,6.307704,-2.380062,-2.827519,1.688753,3.693502,7.522456,6.547953,2.690246,-9.310842,-6.345401,7.715706,-4.830835,-5.944551,4.255079,6.674810,-4.994531,1.602134,4.899260,-1.507979,7.375014,-8.764273,7.532798,7.027055,-5.806670,6.885123,-0.560207,1.493837,-4.566476,-9.964548,2.980288,9.014190,-0.065682,-0.961948,2.317174,0.130971,2.701316,3.816337,7.823625,5.229006,-1.119557,3.683849,9.358289,9.000275,-0.891136,5.539120,-2.489169,2.654380,-2.609011,-9.847003,7.877427,-9.482439,-7.390454,3.369904,5.729362,0.042973,6.550540,-1.665377,7.178506,7.855125,-9.123471,6.250124,2.673183,8.750675,4.713567,7.115557,9.496194,6.822517,2.028927,-6.816421,1.207961,4.549039,-6.780939,7.421576,5.187881,1.172283,-7.209021,-7.404885,7.681013,1.812965,-7.459805,8.713431,-2.114561,0.654583,9.594022,-7.765481,7.321289,-7.872327,-9.751948,-2.894802,-6.675000,2.978069,-5.990199,-6.943864,5.911170,-1.752860,5.967803,-2.449930,-3.575718,3.908072,0.805370,-9.233578,0.929601,-7.183392,7.789555,-2.961010,-4.329161,-7.462460,2.114799,-9.243795,-2.904939,-9.115039,4.720001,4.828406,-6.138207,8.897266,7.395958,2.742001,-3.147711,-5.200037,-1.168962,6.861375,-8.579582,5.105408,8.184638,-2.423962,5.657739,4.497885,7.958025,-4.263603,9.309087,5.930297,-0.706543,-3.559999,-2.704440,-4.272811,0.395191,1.988568,1.030431,2.749315,4.358192,-5.651749,8.914582,7.902877,-3.532379,-8.441956,3.715630,-5.716785,-4.975396,0.104714,3.247704,8.104401,4.495977,-6.352173,-1.419947,3.401586,-1.047171,-5.573081,6.242529,-0.814509,2.474142,-5.836437,9.233414,-2.490650,8.312026,-0.949885,8.467010,7.801978,1.468615,5.113285,2.051468,2.814354,-6.259176,7.854192,4.396085,-3.266678,1.332710,7.932092,0.930046,-5.217925,6.271758,-9.100125,8.217877,-4.520949,4.054248,-2.262640,-6.077204,-2.884800,6.306007,3.848803,-1.375512,2.644716,-1.606580,-5.614602,9.695070,-4.149441,5.924090,5.102476,-4.778562,5.465042,-8.807337,-5.706152,0.743884,5.739485,6.672510,7.085990,-0.210101,5.486400,-8.745566,9.947557,-8.378702,-7.986690,-9.716261,-6.472380,0.098941,-9.511771,3.775101,1.754773,-0.420754,1.951125,0.914902,0.029915,-4.661411,-7.568565,-9.511207,-8.860408,3.229967,-5.275542,-4.776708,-3.464126,9.157893,8.001655,0.806185,4.059872,-0.958046,0.050758,-1.198450,2.639071,5.111078,1.756773,5.383950,3.464343,-7.397285,-8.255524,-8.883923,3.373590,-1.807905,4.140295,0.469177,7.452141,3.893586,6.481783,6.420852,-0.084727,-3.404884,-3.145346,0.006731,-3.019378,0.738166,7.010796,6.207971,5.141176,3.935617,2.674909,-4.349927,-6.221397,-3.379343,0.084257,9.654885,-6.330016,4.983181,5.094526,-3.391448,-9.377032,4.933338,-4.008340,-1.179381,-9.294840,-9.822843,-6.498892,-0.415504,-2.224962,-4.624545,-1.004219,-9.010912,1.891459,7.398839,-2.563299,-7.910347,9.289262,-7.472107,-2.987949,-7.673164,3.885231,0.479468,3.997375,-6.339843,-6.051250,5.261306,-1.208736,8.041399,4.287393,0.845744,2.829974,-5.504045,0.017954,-1.987611,-6.769099,-9.054391,5.948015,3.759611,9.960702,-1.221516,5.154586,-2.026947,4.565343,4.199476,-4.177375,7.826978,8.115228,-0.390780,-0.953930,-0.959871,0.084784,-7.602645,-7.041577,0.407905,-0.890835,7.414692,7.415410,9.709922,-5.158137,5.986256,4.103573,-8.853937,4.047506,7.480530,5.519930,-9.300090,-8.489761,6.602930,-4.701858,-5.368912,-5.068650,-3.674057,2.051962,6.480763,9.149738,-7.789029,9.619477,0.273371,-8.633288,-0.619443,-8.200391,-1.778690,-8.449439,-3.521709,1.782514,7.133227,-7.044119,1.544763,4.451496,3.090699,-0.186381,-3.890895,-7.126701,-5.929830,-1.764002,-4.228153,0.431686,-4.505368,-9.210988,-5.732983,5.726896,-3.540085,-7.370221,-5.352951,-3.856300,-1.493210,6.260840,-4.522482,-6.353918,-6.046191,0.752740,0.687525,-4.154053,-3.951727,-7.894502,-3.899133,-3.115650,-0.358904,-9.636021,6.188713,-1.724947,6.796076,-8.582217,-7.679145,-9.214578,9.385481,2.435999,-3.594500,-1.414130,7.201328,-1.099256,1.725023,-3.268906,6.011077,-4.979629,3.521599,-5.127516,-2.859712,-5.115813,5.467751,-5.654404,-6.909277,3.278716,4.999274,-7.196869,3.238823,-1.928971,2.334888,-2.930538,4.961038,8.448060,9.903398,-5.866809,-7.002990,-9.924637,5.355151,2.513523,1.690081,1.746459,-1.458906,7.231891,-6.552266,-5.784356,-7.030452,-9.059689,1.442230,-4.656702,7.040839,2.603513,9.745535,4.683047,-0.828150,-5.562712,0.904089,-6.223589,1.418354,8.026986,8.665597,-8.723633,-5.361105,2.605149,-5.438581,1.550552,-6.856317,-3.003167,-7.406771,7.572316,-9.090494,-8.593989,0.902903,2.704322,-1.082051,-8.051342,3.888970,3.323821,1.295059,6.935620,-7.823021,2.831507,3.828618,-1.428707,2.922437,-3.300042,-9.804409,6.503904,3.398138,-3.979076,-8.140188,3.551845,6.168843,5.037743,-8.092078,4.738498,0.477616,0.024564,-9.696797,3.128075,3.895022,7.397450,-3.037446,9.309613,4.592309,-3.364954,-8.520979,5.692066,-2.064028,-5.569783,-2.034838,-5.919808,-0.947278,-7.742046,7.704911,-7.813014,-1.996519,-0.597523,8.350143,-0.341178,-7.703188,-3.634887,0.491810,-9.983687,-6.319584,-1.083703,-7.339829,2.687376,-7.447781,8.881174,3.778510,9.378695,3.691426,-5.369715,5.136573,-3.203567,2.516143,0.719906,-7.336745,2.194568,-8.254456,6.561178,-5.101276,-8.724518,3.786846,-6.569181,7.452553,-2.657639,-4.950358,0.766939,3.643110,2.395186,-0.781175,8.078614,-3.695838,-4.049052,-1.069051,-5.384186,-3.669351,-6.902013,-2.011735,-5.197736,-8.030873,1.010487,8.353972,-9.226019,-1.865132,-0.769957,-8.728113,6.600221,-1.503180,-0.672340,-5.529353,4.607574,2.449273,-1.871191,-5.066490,1.423184,6.332926,3.234930,-6.217755,9.901394,9.868175,5.330334,-1.494418,1.111745,-1.017037,0.343183,-8.230894,0.575993,-0.594764,6.980312,-1.359188,5.722801,3.726884,6.453967,2.986371,-9.298362,-8.395076,-3.841635,5.408133,1.404923,5.397932,-7.755724,0.374254,8.792552,7.121350,-9.246751,-6.309352,7.582067,2.727895,9.881639,2.313517,0.612541,9.673629,-6.904919,6.982247,3.204444,9.952515,-7.214892,7.187555,-5.977033,8.103759,7.315775,1.607070,8.533385,7.192154,0.506220,3.998250,-7.183901,-9.615651,9.368473,-8.523424,6.009312,-4.559460,-8.259623,2.792815,-6.443301,2.278305,-1.984515,-7.529039,8.185406,-3.547228,-9.902624,-5.901280,2.539689,-8.529232,-0.054601,3.219771,-5.123866,-4.617766,5.675595,8.627152,-1.399091,8.841910,2.273473,-7.497951,7.794910,3.251238,-0.334715,-7.002619,7.825548,-1.831972,1.798647,0.773596,6.552700,-0.838083,3.231544,-2.408958,1.368774,6.589364,0.007971,5.786741,-4.147680,6.696123,-1.562187,-2.641824,-6.683222,-7.137386,-0.371025,1.886241,3.354102,2.770275,2.419928,-8.231609,0.025413,-9.448025,9.330503,-6.395052,-5.763480,1.522653,5.068795,-9.842515,-0.406905,-9.356367,-6.697203,1.798165,1.155327,2.632537,-6.671385,8.722143,2.738647,2.661490,-6.463612,-0.803037,1.643203,1.521548,-2.318395,-3.318634,-9.230866,5.789823,-9.518809,-9.172554,4.862429,-7.389751,2.115913,-7.906753,9.978998,-8.377826,1.453077,3.947107,-4.948853,4.136248,-0.500573,4.970679,-1.446169,-7.058780,3.762546,9.810165,-4.625194,3.005094,2.880821,-6.633109,4.089308,-5.742062,2.163729,8.056701,9.265646,-6.110274,-3.770047,-6.163244,1.553006,2.520292,-0.989297,9.897324,-2.850274,-9.008824,-3.413457,6.561166,4.382415,-7.780453,1.527553,-5.192052,4.340275,-5.031179,8.449810,-0.601296,9.558169,6.213052,-8.660843,-7.145414,2.769004,4.761142,0.517529,5.669420,-9.585914,-4.527520,2.810772,-3.819264,7.298248,-2.169746,-7.848453,3.236033,-2.797608,2.195500,-6.551588,-7.986812,-9.309809,2.357590,-9.182843,6.422788,5.868371,-7.243250,-6.063899,2.459702,6.401838,-3.356334,-6.307096,-7.688953,9.795362,-0.286899,1.883630,8.453812,-8.723388,-7.835544,-7.525395,4.405676,1.673165,-7.948699,2.517126,8.186772,-2.086341,-1.384952,-7.775162,4.315527,-7.299142,4.166590,-6.087450,9.237328,0.124422,8.641132,8.649229,0.334052,-6.623656,7.215281,0.546976,0.349274,-0.895088,7.305848,-9.914723,-4.825972,-3.727300,-9.902794,1.363865,8.945880,4.105863,-0.010326,5.604334,3.321999,1.306517,6.500215,-9.262668,-0.661010,-8.718871,0.437285,6.879805,6.736393,3.586512,-6.366684,-9.244862,3.596779,8.851622,-7.858481,-9.371221,-5.169514,-4.864478,-8.978376,-3.506434,-8.027103,-7.434524,1.869770,2.620986,9.554963,8.710774,2.394434,4.669165,2.966797,-5.573858,-2.053223,-9.806620,1.148003,-9.372269,0.575542,-4.170750,-7.345261,5.952223,-9.224783,-3.072670,5.695533,-0.900279,4.778384,6.400481,-3.188971,2.547271,-8.193793,3.642925,-6.855137,-7.887098,8.695258,4.251452,1.343463,8.794203,-3.782233,-6.744249,7.776590,-6.173045,-8.699837,-1.933685,-1.985275,9.532319,8.057702,-5.086870,2.710135,6.856397,1.529482,-9.126812,1.762683,8.626967,8.921221,8.692972,-7.201113,-4.229672,3.469502,9.141840,-9.675102,1.889302,2.407778,4.475672,-8.779298,9.366590,-1.687475,-3.563732,-6.799564,2.248890,4.572430,-9.186717,-7.496256,9.477430,6.414525,7.986985,8.556033,8.292392,-6.570847,7.229795,8.106609,6.551633,-1.753125,8.386129,6.374226,7.554898,4.320936,-1.718574,-9.565226,-9.441640,-5.212110,7.275639,-0.339092,-9.913278,9.231300,5.765824,9.219678,-4.067221,-3.362875,-6.346130,-3.565949,2.762321,2.683697,-7.575610,6.794365,-0.264527,-6.056374,2.017761,-3.694406,-9.311682,-1.097448,5.816410,-9.867499,1.749834,5.686098,-6.302942,6.364632,-4.821041,4.695909,-3.767965,1.581950,-8.129458,-9.764900,-6.753316,8.570540,3.355482,-7.345912,0.907134,-3.580184,6.345124,-9.355600,-4.588000,8.552693,2.025280,1.209937,0.072707,-6.076159,-0.041310,-1.549476,4.328803,4.030386,2.831014,6.728022,-1.946719,4.639419,-4.982559,1.275401,-5.279112,3.229374,3.465347,0.941352,9.245484,-2.565569,0.755155,-8.781486,0.840059,9.105927,9.117434,6.135919,-3.820664,7.867778,6.500424,8.271520,-2.659033,0.003756,3.084005,-3.543174,-1.931100,2.954865,5.637397,-6.400733,7.635744,8.118597,2.583644,9.024085,-4.159502,-9.494190,8.616084,3.235673,-7.780645,-1.983090,7.624615,-6.934317,7.533190,9.449468,3.226847,6.127949,5.104919,5.972037,-0.850221,9.114599,0.719357,-7.631268,8.097868,-7.311475,-6.505173,-6.926789,-0.024966,2.677060,-1.417718,-5.086517,-1.854986,-1.469871,2.854392,-8.094717,-1.200967,-4.715807,1.834577,9.722032,-0.041899,-3.290590,-3.649393,-0.042877,9.491384,-0.013850,0.904234,6.831810,4.073844,8.763270,7.091200,-9.312320,7.886741,-7.831233,3.333107,-7.010092,9.213571,-7.151948,0.532558,-6.538500,-3.285784,-2.091581,-6.495194,1.376121,6.665056,-5.556735,1.733981,6.766095,7.038704,3.683900],[8.191603,-4.630407,4.068226,-7.923022,8.086400,7.640415,5.545081,3.297516,-5.735704,3.301533,-7.591208,-7.839114,-7.623892,-5.159979,2.128473,-0.608875,5.339094,-9.860698,8.488544,7.824614,1.660569,-4.773872,-7.800950,-5.861929,3.468070,1.826079,7.354139,4.112816,3.339521,8.217691,2.414876,4.904846,-3.821135,5.626749,-4.989339,9.660197,-9.433622,-3.487847,7.704831,2.857174,1.262517,-8.534105,-6.912430,-8.328307,-7.734959,4.228942,-7.494223,-5.105332,-9.648861,-5.037203,2.049734,-7.556277,-2.932454,-0.071310,-1.997398,-7.915349,-4.016000,-3.673228,-9.162793,-4.491157,6.129224,-8.469568,-0.528913,-2.943478,5.904496,3.412812,-2.026105,-9.341711,7.760452,5.597056,-4.395948,9.265718,-9.702097,2.348645,-4.466546,9.659597,3.841776,7.576219,5.858355,-9.943517,8.823374,8.475172,-4.243123,-6.091915,-2.464369,7.806509,8.988654,-6.470578,-6.757313,-5.924632,4.609847,-6.862804,7.958550,7.654536,-2.720848,4.819354,8.633563,4.876736,-1.110214,5.756043,5.627155,3.751410,1.497899,7.788340,-7.625158,9.843131,5.683486,-7.199021,8.014826,0.143841,-3.515039,6.811113,7.723231,8.665483,-5.844930,6.748095,8.511387,-0.885201,-1.219347,-6.073251,0.568167,-8.648595,-9.332481,-5.670979,-5.851104,2.815794,-6.248536,2.770482,7.618908,-4.659682,7.891801,-0.485255,-8.070074,-6.687049,-0.321384,4.628875,-0.939940,-9.747971,4.163665,-8.323387,0.796030,-0.619134,1.460098,2.485877,-2.598230,-4.170371,3.454528,-1.145306,-9.570468,-9.925795,3.302365,-3.749843,-5.285666,-9.522663,8.684490,2.150408,-6.403987,5.646313,4.301866,6.241561,-5.946334,-2.634420,-5.132435,1.696592,8.177434,4.793437,-2.101065,-9.356322,-2.900773,-3.458483,8.437131,-7.721784,9.783662,2.034798,5.044721,-5.428957,7.360748,0.111194,1.616126,-9.857342,6.649553,8.820202,6.984636,-4.665303,2.369352,-4.150723,-9.635110,-5.633723,-7.595623,9.564024,-8.118022,1.480701,-9.046720,3.954382,5.561509,-3.076535,7.790419,-8.279481,9.073921,5.560629,5.381344,6.267573,-7.428291,8.700033,-0.463425,-0.006795,-9.930987,-5.174966,6.438257,-2.420414,1.615412,3.141368,8.560607,0.339216,-3.705719,7.522837,-4.866027,6.195367,-7.180831,2.274231,0.864832,-6.355786,2.619853,-5.079572,-1.181988,-3.716911,4.718892,2.941867,3.697968,4.591641,8.270244,-1.210773,-2.014620,-7.168902,-2.574077,7.162908,-6.279856,-7.487935,-1.744191,-7.537983,4.083671,-1.461208,-9.366615,1.139969,-1.868573,5.912198,6.929027,-5.162946,8.222579,7.603111,-1.115975,-5.733298,-6.500202,2.460762,0.881548,5.498645,-3.867419,-9.745588,7.882251,-0.004238,-0.080409,7.530609,9.495488,3.424240,8.650245,4.371953,1.588779,-5.780046,-0.562818,-8.302148,3.914789,-0.735767,8.089619,-0.290401,8.615846,5.078651,-5.027585,9.911693,-5.339738,-7.502726,4.571960,1.190582,3.455298,-5.308526,1.115920,-6.321501,9.738263,-9.833018,6.809599,8.908764,-6.489802,-2.623110,-0.190511,-8.781749,5.442260,-6.562297,-3.914538,5.572358,3.816322,4.467948,3.373042,1.522434,6.345121,3.461500,-5.526376,9.855607,8.695865,6.765251,4.091640,-3.312485,-0.440459,-1.363958,0.544317,3.559515,2.912125,5.025888,-3.928398,5.855368,4.927831,-1.214496,-3.725418,-3.880473,8.200754,0.546000,3.255281,6.295353,-8.363524,1.662641,-3.147541,-9.500287,8.157766,-1.591029,-6.776062,8.569300,-7.780248,0.299806,3.496186,0.146697,3.597084,-4.880759,-1.357613,-0.596500,1.176400,-2.968160,-1.470161,7.841373,8.670742,5.394683,-9.168730,0.580557,-8.759325,8.640407,-0.803428,8.077968,1.838461,-8.208631,3.571932,-2.285595,-6.343473,-6.486965,9.128575,6.170415,9.368567,-9.180356,5.728485,4.713573,-7.439218,-5.110071,1.034584,-4.482604,1.303153,-9.915567,6.984774,9.720856,-2.598341,4.424950,5.060647,-3.521347,1.797866,-4.193312,-4.772056,3.464207,-1.824274,7.009607,9.066068,-9.594182,-0.009303,2.998188,6.630328,-5.072655,9.676572,9.781514,-5.591344,7.799802,-2.946432,-0.264994,0.094714,4.814976,5.430798,5.869449,-2.341274,9.965111,0.139347,5.755812,8.862209,-0.650788,1.684053,-0.947340,6.430052,5.676373,6.914344,-1.794273,1.023866,3.799083,-2.388282,1.091551,-3.371193,7.732782,-7.558459,6.003348,-6.945932,-5.341426,7.461620,3.075791,-6.423087,1.149180,4.188279,3.774694,2.764621,8.998163,3.951337,2.741607,-8.943999,0.881816,1.342516,-3.909693,-2.675608,4.133804,9.899104,-8.437255,5.315322,-2.946392,4.456811,-1.240893,-3.538462,-9.745850,-0.212327,1.368641,9.735948,8.671310,7.673686,-7.483466,-6.099156,-3.561934,0.685565,-9.379885,-7.533559,3.864974,-6.919977,-4.171371,0.105041,-2.719832,-2.929261,-0.610799,9.862222,-0.235954,-9.295617,-5.322559,-2.112888,-5.720731,-4.045326,0.571424,9.123367,-6.297604,-8.692385,-8.610472,-0.643030,5.938931,1.358982,-6.549241,-9.530243,8.648297,1.351163,6.690952,-2.102953,3.530025,-4.718166,8.632252,1.525327,9.282322,4.628193,-8.568952,6.917009,-5.817356,8.615566,4.687118,-9.261554,-8.066520,-8.254166,3.850540,-5.033488,6.349513,2.037524,-5.836585,1.428856,-8.530404,-7.711133,-0.544257,7.053479,-2.408675,8.335211,-0.397661,-1.990329,3.947770,-3.338262,-6.996940,-2.218063,-8.159545,-7.778533,-5.504055,-4.190283,-9.425348,8.814239,-8.379420,-3.055093,-9.659283,-8.245522,4.621268,7.533069,-0.565033,4.445903,-2.909678,-9.643908,-2.589751,-0.387706,-2.778176,4.188232,1.250388,1.957195,8.344636,-8.349036,2.387219,-7.473054,5.563812,-4.178553,-0.020928,-1.125663,2.973919,4.717519,-9.956095,-7.988298,-0.619564,8.526314,5.072003,-0.800475,-2.689776,-7.849202,7.232489,-8.466594,-3.383080,-3.057997,7.972002,-1.676336,-2.346520,-4.914918,8.139283,4.925411,-3.904771,7.614770,-4.905541,3.188823,-0.573450,-7.824093,-8.901417,-4.358377,3.530318,0.063507,-6.135139,5.032792,6.768291,8.596160,7.777773,4.359689,0.690509,1.920442,-9.088140,1.601422,-9.889566,-6.454214,-1.156665,2.032012,-5.858260,-3.826351,-9.264629,3.586258,9.767879,-2.405926,6.123368,0.374702,-8.654851,-1.321127,8.393877,2.808978,-9.894388,-0.603302,0.286946,-8.764487,0.655941,-4.140518,1.447175,7.802911,-1.990551,2.632207,9.338036,-4.087213,4.656821,-1.539808,-8.696281,-4.548184,-2.784963,-8.434499,-0.366010,4.579210,4.615713,-8.543248,8.995875,-3.195007,2.785182,0.253265,-9.621249,3.182886,7.980197,-5.269142,3.732745,-8.233587,4.036811,3.237973,3.276204,2.381869,-4.021650,3.377968,-5.281360,5.343964,7.860768,-5.249771,2.525210,0.207119,-1.492622,-4.493275,-8.046442,3.666378,1.346303,-4.701016,7.710820,-6.427413,9.983299,6.124718,7.340054,2.401867,4.768143,-5.770203,3.541517,3.883995,1.865539,-9.307859,-4.864002,8.438131,-7.031384,5.141415,-8.544953,-3.229771,0.828679,8.021767,-6.370857,-4.390812,-2.225051,-2.914902,-2.455268,6.656572,-6.802651,-8.850257,3.790061,-5.546706,8.627538,6.781855,0.268251,7.116371,1.168516,2.947295,6.786820,-8.465996,-8.408229,-2.888530,-1.706842,-5.904394,6.675360,-2.539567,9.213702,-8.601763,-7.000999,-6.400852,8.206388,-4.869701,-6.250393,1.097910,5.512693,9.375318,-5.714415,9.843026,-4.411082,7.371046,-6.341267,-0.224580,9.449289,-9.990411,4.325323,7.212447,-8.125815,3.521583,-3.151698,-0.971235,-3.220174,3.532919,2.351995,-2.471015,9.775758,0.234740,9.508744,5.549208,9.074466,-1.429371,-8.342135,9.332048,2.190085,6.158032,8.070438,-4.327806,8.675487,7.494781,-0.872550,-8.766516,5.052157,1.200638,-4.547162,4.907723,-4.107966,-0.297458,-9.731278,8.914314,-3.272701,1.488384,-5.418271,-0.231909,3.711932,6.232235,9.681477,4.193184,5.546511,1.336054,7.738002,5.419139,-2.510975,-8.253970,-6.619782,-4.999204,-5.996951,-3.329645,6.794290,0.972206,-4.339612,-7.169389,-7.667295,9.961254,-2.934542,7.180061,9.616435,7.653667,-9.951301,-3.578938,9.165003,-8.172484,-7.727514,1.184008,7.925992,2.003180,3.808294,1.633777,2.806837,5.629389,9.584623,-2.142009,-2.486066,-1.591252,6.008314,5.308175,8.483466,6.836293,-3.971847,-0.637014,8.240374,-9.613875,8.967145,-0.738684,-3.764295,7.559529,8.840633,-7.621856,6.214489,-5.390234,-7.873788,-7.607083,7.790939,5.565051,-1.315681,6.696915,9.064724,-6.698453,2.154062,-1.423404,-9.442919,7.137148,3.934583,0.466249,-3.547373,5.169253,4.117159,4.365740,0.430803,8.155974,-9.018295,7.109502,-4.837584,-1.724149,7.872431,0.015695,-0.755626,9.736349,-8.215082,5.497709,-0.003912,6.091578,-5.690433,6.143226,-8.685597,5.671893,5.834042,-7.702803,-8.693817,-3.726982,3.798364,1.427464,-2.087521,0.766683,-1.025739,-7.430249,-3.811675,-4.000745,-7.741273,-8.756775,-8.362072,0.639307,5.355645,2.781878,-0.787534,8.291612,7.541447,-2.673293,5.574435,5.540543,-3.301257,-5.810718,1.460654,9.842965,-9.676595,-1.808947,5.451917,5.886256,-9.996488,-3.833355,-6.608100,-2.018246,-7.430519,9.797063,4.915150,5.729936,-0.551901,-6.252096,1.717452,9.671697,2.205549,-8.163729,4.407245,1.950851,6.843040,5.064263,8.672318,3.801114,-5.708504,8.579250,8.684120,3.568740,2.707264,-3.951701,5.666986,-6.228177,8.867020,7.429515,-7.846844,-5.656257,-9.526173,0.496327,-8.342764,7.167997,-4.081867,-2.453440,-6.605450,6.493593,8.328017,-3.376789,-0.220904,8.608331,1.291357,-7.450779,-7.760522,6.660549,-0.611389,-9.647390,-8.209532,5.918771,1.236437,-2.664475,3.562887,9.750734,4.621708,3.698238,-7.800241,-0.073155,7.650116,-1.351811,5.343419,-6.076764,-4.591586,-4.824708,3.356577,2.171510,3.251051,-3.186750,-8.418580,6.018429,1.191254,8.413912,-4.786543,8.779761,-8.184257,9.391791,-1.111136,-6.019672,-7.004891,3.713775,-3.215577,-8.587939,-3.798924,7.506760,-3.814360,6.207356,1.862564,-8.534208,-5.793900,-4.558477,3.031774,-6.472239,8.739530,-0.074599,-6.984875,7.651238,9.403431,-5.466016,-4.305916,-4.322312,1.355144,-0.080221,-3.974547,-5.296848,7.565948,1.274471,-7.335805,-8.433544,-2.310629,6.704496,-6.595788,-7.671436,8.790643,1.454621,-5.525048,-6.249643,2.697806,-5.142834,1.631712,-6.355354,5.726737,8.653800,-4.599400,-1.970194,1.071260,5.391242,-9.686621,8.421495,-0.359327,-8.776846,-7.996052,-9.713630,8.749567,6.980339,2.255947,3.893993,5.796749,-6.151655,-8.912690,9.244559,9.585366,2.299667,-6.291910,6.339951,-4.448779,4.040937,-3.368740,-6.384789,-3.707906,8.093410,-8.055528,3.466561,7.916521,8.515212,-5.692505,2.098054,2.878564,3.933917,0.250137,-2.798761,-5.499162,-8.385596,-5.407467,8.336967,-0.869468,-5.794899,6.028056,8.749742,-7.985691,8.510183,3.862256,-5.266147,8.520596,-9.449473,-3.930454,-5.848938,-0.732079,4.615402,-8.989303,4.704959,9.364654,0.122691,6.258440,-4.459326,1.656126,-8.037914,-5.524890,0.649242,6.463041,4.698558,-6.123467,-1.444436,-1.436846,4.355277,-1.607943,-9.584783,4.476238,4.735652,-2.260649,-3.202621,6.483116,-8.084941,1.382519,0.718519,1.604196,-8.214035,4.842674,-2.054033,-5.366255,-1.387662,-7.395697,7.355514,-1.778680,2.086409,-4.936940,-1.825320,-3.681077,3.281179,-3.713818,-6.823166,9.528435,4.710988,-5.035308,2.222544,-2.035542,1.788160,-5.605633,-1.730211,8.735471,3.423860,2.292591,3.855365,-6.883210,8.842706,-2.463319,-2.698017,-0.020801,-0.727842,4.922068,9.789175,7.932332,-6.078930,3.271462,-0.561110,-3.994744,-0.182118,6.621371,-9.394042,1.651049,-9.622241,6.370057,4.572081,-5.572352,-8.854853,7.767290,1.218838,5.069317,-2.805905,-7.178660,9.766731,-0.124503,-2.545292,-4.747124,2.015133,-5.080348,3.240120,-4.295215,0.905792,-2.218006,-2.571133,-7.281208,-9.220581,-6.068734,-0.393957,3.818905,3.718408,-6.995599,5.524471,-3.885680,-8.888814,-6.200852,4.850420,-1.968918,8.389161,-4.862580,9.625576,-8.639142,-4.989652,-4.105849,7.966848,0.811627],[-5.747469,9.497842,-1.444486,-7.907151,-1.406910,-1.861740,-7.843626,1.340434,6.037707,8.075972,-2.102848,-4.109519,-8.555438,3.162583,-6.664833,4.195441,-7.419529,-9.231926,-5.179984,3.539833,9.993789,-5.004934,4.918829,0.713962,-2.688295,6.513530,-5.218421,1.792256,-2.073539,4.667820,4.146871,2.862174,4.237119,-5.120529,6.688137,-6.785154,0.500192,-5.567601,-3.097684,9.942395,-0.051360,3.088737,-8.474312,-5.179035,-4.955469,5.070164,-5.053452,2.686657,-9.771970,6.590040,-3.383356,-4.816299,3.714227,-8.042215,6.836956,-7.913305,-3.272543,-5.448929,-2.681847,6.547359,-4.529881,1.947210,-2.037900,-7.694483,-6.868548,-8.462583,-5.892531,0.448173,3.927816,0.214049,9.286686,-9.089373,-9.382249,8.146991,5.082845,4.394997,8.537985,-3.743066,5.707625,9.791080,7.483026,-8.813192,-6.429786,0.263877,2.386685,-7.924484,-5.233055,-4.704214,-9.478384,3.314324,2.731387,0.908375,9.102231,-6.371878,0.922803,7.069184,9.315112,-9.342238,0.400744,5.071349,-4.732747,7.744214,-3.215944,9.550130,3.356467,7.067817,8.674470,-7.364358,-5.366474,-9.813585,-6.241960,-9.020854,6.308117,5.127252,-5.507933,-1.489747,1.025326,6.672511,2.351575,-8.057567,-9.613277,4.050460,-4.533813,-4.039287,-9.231900,-1.391486,-6.713446,-6.337776,2.183699,-7.893008,-7.724186,1.183935,6.516147,-8.947086,1.301032,9.933584,-0.978539,-2.935822,-5.574459,8.116058,3.648131,6.998161,3.424585,3.896506,-3.251153,-8.840191,-2.754725,-6.871538,0.996328,9.050463,6.996190,-6.152061,2.254709,-5.851710,5.395124,8.676438,-7.798928,6.514175,-4.010935,-0.051700,-4.289275,-3.997776,-9.094753,-0.454378,9.215051,9.779918,5.771169,-5.966834,-8.008724,-1.381026,-5.075493,-8.196515,9.400645,-6.870850,-2.089723,-8.151895,-5.361728,-5.141498,5.672283,-6.551532,-5.973465,8.371297,3.377101,-7.305441,-4.274190,8.667936,-8.117227,3.774033,9.179312,-4.105591,7.553328,7.412091,4.042504,-7.909768,-7.158984,5.742002,-7.928998,-5.283494,-9.077603,9.990518,-9.763339,5.736666,-0.050364,-3.462629,7.092391,-0.934077,5.115752,-8.909366,0.108579,6.599575,1.496447,-3.427348,7.440175,0.201992,0.603594,-3.020386,4.053722,8.284845,3.800884,-0.582502,-4.239761,5.394465,-7.012600,-3.474473,-6.087169,4.822578,-0.442629,-2.088660,8.942301,2.016602,-5.201264,-8.752570,3.892781,-2.640380,7.786468,0.799724,2.991404,2.907026,-1.486401,2.594782,0.059160,-9.711800,-3.502700,1.230366,-6.124656,-5.913449,-6.369001,4.599192,-1.133996,-3.394966,-1.869473,1.288808,-3.638892,7.084062,-6.828153,-1.116054,7.267772,4.310322,2.104855,3.535998,2.968686,-2.859708,-4.482953,-2.555136,5.049342,-8.626957,-7.446602,0.995726,-6.944452,-4.756685,1.892866,-8.418260,6.873982,-5.392665,-0.039864,7.818083,-7.885951,-4.008298,8.119421,3.042652,2.594613,-8.142133,-8.892418,1.993978,-6.498148,0.332111,-5.252877,-5.617143,-3.213985,-0.957485,6.029158,-9.634152,7.726452,-5.565599,4.399846,-2.878881,-3.293328,5.713560,-2.563815,8.458165,-0.221666,7.688002,7.647566,-4.923255,-9.209354,-1.427756,-7.451353,1.155529,7.353974,-6.922134,-0.071609,-0.107319,7.535146,2.293686,-5.092101,-4.775974,5.232491,3.401903,-2.033460,-7.526346,-0.377696,-2.241020,-4.662763,-9.069326,1.528764,-0.073465,5.725813,-9.976534,-2.043559,3.991692,1.607780,6.933331,0.970362,3.207626,3.467709,-8.202522,-5.407144,-3.111218,0.349788,5.837702,-5.723033,-8.450616,-9.602077,-1.208492,-7.006989,9.088506,-1.618905,-1.576962,6.307669,5.836098,-1.927481,-1.432698,-3.334079,7.018930,9.931218,-2.829067,-5.287913,-6.061560,-2.098667,-1.034499,-0.985474,-4.252634,-8.481237,-6.285454,-6.453918,-5.840209,2.430922,7.755350,-9.665094,0.599397,9.527141,3.209470,-1.471190,-9.843078,-2.244259,5.375900,-4.057878,8.925324,0.407946,-2.518475,8.434696,-8.025415,3.279566,-4.853754,-1.986426,-5.615532,-1.156349,5.295590,7.615928,6.297494,-1.958319,-9.777586,-0.699651,-2.412039,6.543645,4.418217,1.546345,9.249074,8.618595,-9.517951,-5.686473,-8.598655,-0.341456,2.185543,1.322895,-6.978602,-8.301028,3.080540,-7.454855,-5.099347,-0.347354,0.006710,1.915978,3.218198,-3.945863,-7.610732,-6.216801,0.868858,-5.893787,-1.794423,0.049606,-2.586796,5.328296,-0.674332,7.041863,9.477554,-7.942710,9.624269,9.682942,1.158678,7.191930,-1.022666,-0.955656,-6.367612,4.073264,-7.098170,1.628505,-5.702674,-2.965311,9.178279,5.545498,-3.068676,9.169107,3.383798,-1.083117,-3.654580,-9.466948,0.217301,6.187783,6.708337,-6.712938,2.896377,-0.654802,-2.034752,1.632294,-3.727007,-3.851695,-8.446098,7.066895,-8.330283,-6.379109,0.534793,-9.273706,5.984925,-4.034201,-3.042115,1.576007,3.217466,4.782745,-2.580220,5.574029,7.256849,4.174674,6.413820,4.675239,-8.812624,-3.571439,-2.041137,-6.100605,-4.690848,-3.829313,2.766196,7.055974,-2.510091,-0.576589,0.379600,4.421529,8.775322,-8.059842,0.031950,6.715492,-3.896450,6.075299,-1.008718,-7.358882,7.332554,3.677153,-3.511427,4.664116,4.276650,-1.301001,4.561862,3.952093,-7.292088,2.843567,8.138296,-2.062661,-5.179480,-6.074974,0.862145,-7.768835,2.878802,-9.034161,-3.850545,-7.488114,6.017871,-3.745923,8.053159,-7.228638,7.022034,8.148852,-9.184347,-3.572531,-7.726972,2.794311,-0.121194,-6.884906,4.082610,2.033720,-9.850285,4.983045,-6.322381,-2.696918,6.125856,-9.205146,-7.172255,9.764589,2.304232,6.321449,-1.843672,2.978752,-6.036423,-4.677019,-1.235910,2.848076,-7.380691,1.366046,-2.041214,-7.010921,-8.144691,4.372402,-3.958020,3.138318,-7.449355,6.394459,8.632747,5.143037,-5.004832,7.491150,-1.747678,6.877782,5.739499,2.692083,-9.661631,3.127565,-6.468868,5.307679,0.424761,-6.694814,-4.194570,-6.907280,9.115901,2.111273,3.749103,-3.322519,-9.531019,-3.184669,-1.448694,1.162700,8.123429,2.353688,7.236484,9.610574,4.209415,2.167335,7.416265,1.418905,1.710816,4.608300,7.368994,-2.371331,6.015882,7.812284,1.124629,7.817174,7.826229,-1.280271,1.479427,0.686658,-2.715314,-0.374142,-2.022195,-5.884016,7.808240,3.483027,5.283804,-0.657612,-1.766224,1.715567,-4.192378,2.679332,5.657324,0.660975,2.142753,-1.358040,8.599202,4.907407,-2.343111,2.784606,9.687865,1.927301,6.658068,-2.436235,4.983105,0.010851,-4.896088,-6.098705,-4.292966,-6.749559,-0.942744,4.748838,-7.311852,-1.685179,-2.723237,-0.810677,-3.050622,5.180408,0.413405,9.019594,2.651776,-8.455790,5.006234,5.991664,-1.450808,5.565494,-7.023803,-8.244615,-1.083152,-5.169048,4.798951,-0.802223,-4.057039,2.334595,9.111281,-0.373933,6.967366,-4.606169,0.061976,-2.748959,-4.789852,7.837872,6.408877,4.502869,-0.603177,-7.274843,-4.700239,4.084128,-6.971474,-1.595940,5.410543,-3.103052,9.250583,-4.377328,4.302471,7.315708,-6.073114,-9.055460,-5.816763,8.496058,1.574676,-9.987645,4.026241,-2.312111,-0.674888,1.034542,-9.451972,-4.596368,1.494761,-3.174693,-3.236687,-4.739206,-0.163053,-0.016533,-6.513258,7.492333,3.990726,3.948563,4.900260,0.762543,-7.431092,-2.772903,-1.842573,-6.253914,6.944301,-0.844605,-1.671934,-0.597849,-6.768393,-3.701950,7.316249,-2.236408,7.254498,9.327959,-4.174529,3.695302,5.437137,2.351629,-8.901281,4.977733,-0.475398,5.261030,-6.279235,-4.966804,-0.473646,5.254694,-6.456783,4.301115,6.304208,4.240133,9.466356,-7.936690,-9.358047,-4.626683,-6.957001,-9.263546,-2.981698,1.305646,7.383537,4.978055,-7.890487,9.107717,-4.053067,2.702724,9.988471,7.039082,1.783487,-6.446674,1.238699,-6.953971,-7.622017,4.274448,8.900346,-5.342433,-2.566923,-6.291936,-1.372854,5.596494,-4.620595,6.016489,9.126611,-9.549147,-8.775961,-8.117620,-1.322223,8.265605,2.605912,0.304648,-0.305298,-2.186950,3.206769,9.806254,-4.537209,-9.313269,1.042648,8.251161,4.373412,5.881752,-3.771680,6.244786,1.432911,7.598827,1.732682,4.765970,-0.945563,-3.412038,-8.040335,-4.562290,8.292250,-0.438871,-3.731779,8.778427,6.786584,2.645075,8.753819,-9.795243,-0.316150,4.204145,-2.200658,6.800417,-9.116572,-6.587209,5.900700,-4.546540,-7.944383,-9.822784,-2.860535,-9.587404,-0.158509,0.907106,-2.780348,-4.621080,1.927265,8.903989,-2.641839,2.777163,-0.951141,-5.262328,-8.376341,-5.647634,5.884679,9.413389,4.137739,6.261352,5.600899,8.486067,2.755191,-3.484114,0.716033,-9.426831,-5.044832,4.263018,-6.356087,4.664580,-0.632974,8.342810,-7.804609,2.962246,-1.431013,5.692670,4.811329,6.542056,4.350696,7.315120,1.098981,-5.796491,1.064013,9.849392,7.019572,-2.553261,-7.094583,3.790871,-0.381417,-4.209031,-9.703052,7.759217,-5.059992,-7.442040,-7.285912,8.939915,6.258035,-0.635830,2.369535,-5.601096,-5.018485,-1.224017,-4.579357,8.376177,-5.307864,8.398858,5.537962,-5.747980,-4.121932,9.208244,-7.324321,-7.013854,8.309150,2.833693,-9.561685,3.581071,-7.236224,-9.942176,-7.568710,-7.301626,8.737013,9.350467,-6.234563,5.917852,-9.135825,8.294794,4.050627,-7.083884,-3.911668,2.633222,-4.646295,1.321261,-9.169605,4.911284,7.218762,5.350035,-7.444121,-7.195469,-2.969762,1.967304,-1.200310,5.954473,-8.200330,-6.151106,8.344436,-1.332686,9.194368,6.140314,7.629758,-6.103994,-1.298762,8.457475,-7.718050,6.227557,7.248556,1.419662,2.595920,2.591899,-7.079962,7.970404,6.370516,3.537900,3.502201,-7.490622,-4.299795,-4.095051,-3.621529,5.611515,6.305432,1.677013,1.901731,-5.231085,-5.000254,-6.860982,-9.890049,-2.115337,3.643437,-1.608059,-4.308661,4.722395,9.489790,7.385743,-2.366127,-0.353205,2.561731,-5.682084,-4.221732,-4.900437,5.411661,7.276088,-1.927853,9.574783,-2.160243,-4.673450,2.607525,3.385182,8.108578,-1.325554,9.231301,3.314551,7.424905,9.780047,2.109789,-5.902359,-9.371815,-1.169551,0.254633,7.542355,4.546070,7.889713,7.482555,3.333478,2.074612,-4.661891,-9.587157,-2.919406,-9.700336,5.080473,0.969037,-6.317411,9.651950,-8.316830,-6.427725,-5.258615,3.362662,-0.895930,-9.338969,-4.968133,-7.122871,-6.613678,-4.591156,-8.643252,-6.965113,-3.337487,2.166792,-7.746550,1.965352,1.542934,-6.665390,1.613284,1.946600,-7.711719,0.724663,-2.904585,-5.895349,-5.499914,7.255429,2.503779,-4.178800,1.732957,-2.585819,4.290533,-8.502486,2.621280,-9.564545,-0.659704,6.966685,-3.852757,2.815269,-9.477618,1.696158,1.117743,1.012672,8.279793,-6.169700,5.063880,-2.482572,1.272421,0.289203,7.085708,0.056354,-1.967079,-6.073238,-9.769691,8.553369,9.645094,1.640852,7.470613,0.793597,6.558359,7.052000,-8.523867,8.571220,-4.839030,7.984259,-1.632100,7.131339,7.133201,2.918623,-6.838312,-3.623945,-8.163637,-7.095396,-6.488592,-1.592857,4.726964,-6.026708,3.551351,9.765076,-8.090371,6.046215,-6.313701,7.657762,-9.423138,2.980981,0.437033,4.017185,6.959789,1.609163,3.972091,6.742867,0.156854,6.318354,5.257273,-6.165175,6.505237,3.336982,6.926152,9.109601,8.921174,-3.036782,-0.772222,-9.046724,5.253236,4.714167,6.602037,0.330003,-1.004634,9.533061,-2.452593,8.572008,2.072069,8.037559,-1.270522,8.893137,7.797020,-7.356511,3.625234,8.199071,0.204800,7.050814,-7.555306,3.534275,3.225145,-7.966730,8.980944,3.283548,-0.503123,5.496250,3.456966,3.088520,-0.395930,-7.857068,-1.643158,-3.284490,-8.512825,5.600158,-9.028003,4.591817,4.432193,0.382878,-5.309380,-4.181887,5.108812,4.831208,-4.331781,1.218439,-4.591702,-3.853681,-8.746808,-5.845936,-8.530575,8.633393,2.917233,1.999223,-4.186141,5.647717,9.762745,-4.600244,9.941441,-6.313751,-2.330114,-6.883265,5.644199,5.241526,1.537832,8.370106,4.421356,-7.062105,0.755504,-3.388923,2.672839,-1.231775,7.856661,2.741813,-8.682863,-7.475696,-2.684602,-9.894527,0.859572,7.765731,0.042692,-8.050037,5.674094,9.571972,-0.851887,-8.610836],[9.981774,4.653202,6.424574,9.765460,-2.134211,-4.569676,-1.619034,-6.639021,5.858219,-6.297347,-1.715690,8.125118,-6.556513,2.648250,-5.635499,-8.087285,-7.650180,-9.719130,-3.097573,-5.259349,2.038335,2.817674,9.603535,9.601424,5.265502,0.115527,6.689327,8.913367,-7.035762,-6.118444,7.456124,-4.322436,-4.211861,5.715137,9.545973,5.086298,8.922069,-6.546756,6.953746,8.605552,-9.897031,-2.259414,6.804048,6.900491,-8.705034,0.657462,-3.202007,-4.992686,-6.056245,8.759579,3.841978,8.315063,-9.588778,1.207586,0.717879,-9.082163,0.706251,5.279163,9.794510,-6.319882,9.169936,8.917660,-0.923406,-0.026201,8.628969,-0.314327,8.086352,2.981008,2.038263,2.405804,1.773573,-4.820214,-6.629560,-9.902041,-0.645641,-4.812374,-8.507200,4.880317,8.101327,7.826226,-5.208658,4.575671,1.166371,1.640346,9.424671,-6.137936,-9.896436,3.952298,-5.802192,-9.064847,7.520346,-3.312865,-0.167697,-9.387267,-0.747364,6.690750,0.135309,-0.462042,5.079458,7.417891,-5.745112,-8.157855,0.770425,6.442481,2.186165,-2.900752,-8.718114,-9.124062,7.390715,-8.814047,-0.222201,-8.829415,-5.030409,5.377766,-7.722210,-2.348038,-7.787704,3.768500,5.832496,1.790629,7.523337,4.692821,0.827766,-7.488185,-8.018344,-2.731525,-0.186278,-5.141098,3.811034,9.328424,-4.929683,-4.998327,-8.355101,-7.414171,-3.650295,-7.711560,-5.904276,-9.236017,3.672173,-3.918697,3.863210,-1.592636,5.991298,7.664623,-2.894979,-9.639946,-9.269862,5.020310,-3.718304,-2.882099,-8.954185,-5.165954,-7.100277,-6.754040,-0.873851,1.574105,2.636353,0.662980,-0.720162,1.791948,9.888388,-0.563751,-9.330860,-0.323606,0.670115,9.398722,1.382223,-5.362331,-4.666044,1.798605,1.035198,5.785090,5.621227,5.761454,8.241604,-9.705658,-2.226481,-9.490342,7.618504,-2.182304,-4.127593,-5.923342,6.371387,1.170012,0.652614,-0.967472,-5.847343,4.241519,5.769675,7.134066,4.123874,3.422491,-2.652909,-1.635333,1.872264,0.102218,-8.776400,1.426303,-5.612482,-5.152788,-1.443265,8.031482,-6.492375,-0.816856,9.981388,-9.645046,6.764712,4.937261,4.362742,9.827544,-6.098645,-1.650635,-9.773461,-1.483561,1.766715,-9.659940,-5.751608,-0.997207,-7.933473,-0.531365,-2.255436,-2.549649,-7.023693,-8.324061,1.625389,-2.538653,-1.510896,4.902097,9.868126,9.030059,-0.696893,-1.523931,5.437353,1.458735,6.672185,-9.923730,-5.587105,4.145215,-1.439562,-0.828964,-7.467861,1.116907,-3.830283,4.985787,-2.269053,-8.867854,2.852593,3.936191,2.772898,-9.769093,-8.872856,-8.750479,-8.271919,-6.510225,9.476742,-4.056834,3.976452,-4.253459,-1.169381,1.532989,2.353241,4.482836,-7.138177,2.582943,2.504527,-3.586594,-4.833281,-1.111066,2.384188,4.038706,-5.049937,-1.067130,9.677320,1.539109,-1.434099,4.716010,-3.457985,-7.859615,1.576716,-2.793024,-5.169466,2.115893,8.867957,9.411000,-4.288898,-8.037547,-1.353117,-4.510458,5.612796,-7.352525,8.144765,0.352070,-9.046274,-5.923841,-5.083934,9.488657,-3.178640,5.651621,-4.281778,-1.498783,-7.200620,7.147147,5.247396,-9.544229,6.239620,-1.980859,-6.620532,-1.825105,-6.014522,5.828128,6.954738,2.712487,3.775468,-8.176470,2.720613,-4.539797,1.735174,-6.200820,6.791855,0.005356,0.122634,9.001523,-9.382474,0.392788,3.113839,8.471369,7.860484,-1.556877,1.883983,-1.957759,5.470452,-3.330611,2.200616,3.326043,-4.328362,0.280813,-7.259839,8.705771,1.739941,1.455776,9.397304,0.362620,5.674694,0.028440,-1.318584,2.790826,-7.789785,-3.179515,9.898966,5.119668,8.518117,3.260952,1.636327,-5.634533,8.344720,3.288547,-7.945579,0.682301,-6.476094,-9.927355,1.765542,-1.554956,-9.141687,0.040240,-0.521505,8.416754,1.253913,-5.683917,6.016933,1.140993,-0.183606,-0.433005,-7.879765,8.152381,-9.896018,1.607167,6.841005,-9.058792,5.718627,1.840465,-9.471712,5.734125,-9.811478,-8.054248,-3.002748,-2.672855,7.574005,9.924574,8.057240,-6.195216,-7.561703,1.105162,-3.432022,4.328782,3.398587,6.700244,3.153746,6.759995,-0.689911,-3.693859,-7.145766,-2.675538,4.226097,9.610123,-4.870015,-4.863987,6.566296,-2.956828,0.983650,6.402611,7.255284,-0.264020,2.765232,-9.890547,-0.291366,-6.460167,4.127568,-6.257136,-3.615238,3.309894,8.331404,-9.696287,7.781519,-7.852103,-6.205335,7.200544,3.805333,2.386095,-9.959881,-9.379340,-3.851462,2.254417,4.220610,-3.925494,5.471720,-0.543418,5.182822,5.677390,-4.374892,-8.013644,-5.570752,-3.786879,4.893360,-7.083280,4.104110,-5.914538,-9.287908,2.870331,3.195550,9.019080,-3.456801,-6.226640,-0.420656,-6.829677,9.894094,-5.559353,7.575780,5.489811,-7.768457,-4.632201,1.914287,4.833546,-9.273960,0.583069,-5.172665,-7.615862,2.186569,-6.504701,-6.699840,-3.704771,3.494698,7.476802,8.765145,-0.053029,5.189594,7.205807,0.816303,-3.722916,8.644312,-4.202909,-6.387423,-1.897681,7.845747,-1.401227,-7.517194,8.879206,1.815986,-2.547429,-6.662938,-0.130797,9.055600,-1.658003,-7.724433,-7.816546,-4.223157,5.804026,7.940254,-6.393988,-1.967601,-1.315023,4.660403,4.660714,6.291876,8.352970,-5.389058,2.272536,0.296441,-9.272107,-8.296138,-7.319235,3.482031,1.234099,3.105984,7.095440,-5.777954,-4.204629,-0.580521,-6.952727,3.372721,0.711199,3.959447,7.842772,-6.935800,-9.279813,-3.869378,8.598971,-0.960369,-8.525845,8.406238,-4.603599,-8.610113,4.838338,-6.250126,-7.653174,-3.489454,6.556503,-8.881475,-0.482636,-0.276406,1.458217,0.597322,7.750301,9.994478,-8.674544,8.047059,7.242213,1.590280,-5.517620,-8.477168,-3.682390,-7.658960,2.283054,-6.948926,6.047035,-9.353686,-3.853279,-4.994683,-3.333124,1.719075,-6.247855,2.500061,-5.598251,-0.878187,-4.968369,0.201220,8.636288,-8.206305,-9.500187,6.176153,4.845161,-4.202972,1.787769,7.861984,4.478101,-7.097506,-4.639187,3.381884,9.163542,5.907568,-6.743594,-2.484526,0.099707,-2.378033,1.612997,3.404942,-7.871908,-5.546985,-8.824755,7.630651,4.930729,1.240508,0.337668,-5.932687,2.168020,-8.603399,1.899107,2.689795,3.369327,-7.393957,6.982269,0.234505,-8.549602,-1.147460,-5.971425,-9.940375,4.113811,5.622194,-6.590927,8.860380,9.599641,8.589868,-4.582329,2.152506,5.960744,2.445260,-7.372685,-6.189829,-8.843080,1.549683,-0.672427,-4.770973,-8.045281,-5.707529,-8.655361,-6.230634,4.135169,-8.271619,-2.926278,2.111109,9.009845,6.867554,3.865419,-3.410389,-4.573549,-1.228943,7.123440,-9.096350,-2.224606,-4.604351,6.408050,0.220046,3.196159,-3.138041,9.034107,4.185397,-1.752891,-2.498467,-7.716037,-2.885750,1.242502,9.140902,5.264434,-9.180857,-0.910875,-7.446270,2.604654,-1.505294,9.456933,-4.699934,-1.171506,-2.366995,-5.742850,-8.192016,8.021798,9.721950,-2.369357,-5.958500,8.367300,4.412237,2.985762,4.477451,6.184748,1.858594,-7.007044,-3.640879,7.563613,-5.262818,3.042677,-7.246721,9.530584,0.945457,-8.209128,0.399194,-5.778361,1.287126,0.184993,-5.497753,-3.165283,1.055962,-7.156522,8.805323,-4.426961,7.727425,1.110816,1.861471,-1.329886,-8.779106,-6.306533,-0.533448,-8.336256,-2.555451,-5.890126,0.949071,9.636468,6.190050,-8.653810,1.533029,-1.064971,-5.247232,0.804231,-2.201329,0.187328,-6.904695,2.851569,-4.531042,3.440050,2.671032,-1.041935,-5.953693,3.935195,7.999767,9.501178,0.266606,9.618242,9.113702,5.436769,-4.651109,-5.357730,-0.958967,7.479893,4.936597,5.049920,-3.048822,0.897993,1.191956,1.815032,-3.713591,-9.636526,-5.683447,-2.130039,-5.800305,-3.312740,-1.128317,4.020184,-7.300503,3.856163,1.316427,-2.147256,-7.008993,9.866128,-2.879403,-1.989782,5.137559,-5.597127,5.702888,0.506707,-2.345930,-3.137587,-2.949155,9.624585,6.627624,-2.752388,-8.586675,-1.902009,4.437216,-8.092786,-6.885786,-6.575082,2.896193,-2.316247,6.957878,-4.358091,9.081104,-4.205920,5.052198,-3.480184,0.716957,9.767476,0.308726,-3.964382,8.518535,-1.051499,-9.254591,9.325615,-7.549669,-3.181720,1.813176,2.694195,7.194306,-0.683727,-5.701083,8.326856,-3.963574,5.405782,7.320513,-2.025996,-3.145187,-1.152648,4.405845,8.346289,1.211865,-3.864020,-6.987682,4.187715,3.438046,-2.585465,-0.521989,8.360799,9.040428,-5.229806,1.741724,0.473228,-1.995393,-8.382014,-1.393531,1.585813,3.723378,-9.277998,2.257038,1.518901,-2.066834,-2.172428,-0.246649,0.676185,-0.060613,-5.916893,-3.350612,-5.263689,8.947288,-3.373496,-1.912211,-0.057749,9.847341,7.423606,-1.522406,-7.468441,3.387628,-2.466641,-1.879013,6.395522,3.127130,-2.394586,6.394071,-2.180294,2.553247,-1.168331,-2.220942,5.924611,-5.377730,7.579379,-2.395416,3.583886,-0.294433,6.559826,0.164195,-4.995449,-5.019813,-2.379371,4.129795,-1.859571,1.396170,-7.319060,8.994497,-5.094884,-0.118769,4.934080,7.128045,-3.358119,-7.981035,-7.776601,-0.784513,-7.021979,-8.341341,9.206221,-0.843393,-7.246282,-7.754868,0.718510,2.548099,4.262942,4.683217,-0.705096,0.397317,7.357185,-0.876695,2.341138,-6.102787,4.866629,-2.002822,-1.443903,-7.931918,9.908802,4.536027,2.053257,-0.362685,-0.155212,1.156263,-9.664506,-6.039632,-5.422809,4.044555,7.401246,8.691821,-7.165811,8.363976,-8.221866,-5.726530,1.077835,4.922947,-6.751039,1.064162,1.214974,6.196020,-4.019136,7.078767,-7.882272,-1.007238,-9.817929,-9.286803,-9.377934,8.465298,2.797446,-3.838947,4.122473,9.649991,1.250209,5.578178,0.660203,-5.352562,-1.949555,-0.910201,-9.625628,-4.286885,7.324183,-5.725801,9.679801,-3.909166,1.423741,0.022971,-0.563738,-7.189583,1.918495,8.512538,-8.542197,-8.574380,1.793535,4.062391,-2.852476,2.898158,-1.486416,9.159840,1.053715,-1.915988,-6.387104,-6.972523,9.867095,-6.684237,-6.716182,1.363991,6.230629,1.299403,5.319158,-8.391815,-2.762358,7.538595,1.870202,-0.541882,-3.107869,5.075338,-5.721287,-4.966163,-9.107795,7.145837,-0.418119,4.540641,-9.926202,-2.018504,1.832467,7.819914,-7.166257,-2.751433,4.113993,2.168181,-9.007292,-8.444471,-2.585089,-3.592706,2.011649,9.932707,-2.279381,9.864387,0.698141,-6.615300,1.803732,-2.128694,-7.006188,2.196403,-0.903794,-1.775151,-5.768967,5.803080,8.196990,7.272591,7.005362,-4.188573,-9.991211,5.170313,8.005641,-2.607092,2.116261,9.235953,-8.793124,-9.871445,4.728757,8.165056,6.726324,-4.236878,-5.591360,-4.776583,-0.061559,4.337060,-5.874855,-7.795917,2.776258,-9.940816,5.804778,-8.499710,8.807827,-5.717109,2.672053,-4.127817,8.603922,2.545470,-5.120430,5.881157,-0.016442,2.047467,4.552972,3.677166,6.932581,-6.915855,9.103393,-4.248741,3.790089,6.274404,-5.000433,8.882368,-0.502920,2.360180,-4.873190,0.741191,8.630791,-3.769593,-8.361841,3.686136,7.536611,-9.282940,8.806309,5.213915,-2.032559,0.303926,-0.857938,-0.968008,-0.483418,-7.390109,-8.046047,0.785267,-0.688537,7.738946,1.496705,-5.189667,-9.527970,8.164854,2.664997,-4.404371,9.946510,-3.639338,-4.345154,-1.954825,-1.046079,-0.089596,-6.373390,3.083214,6.138482,8.862882,1.758490,6.155040,0.542406,9.132277,-0.125199,-2.774719,-7.310636,5.723767,6.548359,8.305195,-7.244213,-2.802875,4.895215,-6.835470,-1.720102,-4.224054,3.092848,1.715467,-7.659132,-7.061892,-3.918226,5.033554,1.078638,-2.874417,-7.922830,4.356228,0.484460,-7.021208,6.323625,2.163338,-8.122332,2.223670,2.146091,-3.068610,-2.983731,-1.205348,5.629687,0.960503,5.661101,8.860946,5.593869,-5.392120,9.904841,0.182783,0.992623,-5.378261,-4.563229,-9.174482,6.970908,-0.977401,5.067256,-5.486666,-0.168812,3.928817,9.425380,5.450274,6.319104,3.681757,-3.234510,7.283403,8.108676,-0.075532,-6.452964,-9.797400,3.541709,1.032458,6.246637,-3.020243,9.438344,9.411687,-9.112304,6.103561,7.968369,-0.961324,1.303863,9.360599,-5.463404,5.518874,-9.609819,-5.887871,-4.997209,-5.167651,0.789437,8.869949,8.459522],[-1.394870,3.238239,0.821330,-6.743550,6.798892,-0.103295,1.686125,-3.675711,3.882030,-6.579061,-9.082390,2.487392,-8.761114,8.688150,9.551771,1.580861,1.430410,1.601555,0.646585,-8.611559,1.071354,4.595800,1.929977,1.273525,1.186156,-5.057761,-0.081749,-3.641755,3.470358,-0.095651,-1.794099,-4.226884,8.412302,6.699787,9.591651,0.079551,-9.333615,1.683476,-6.764079,-2.908059,-4.703373,0.593604,-0.945921,-7.813599,-2.157016,-5.647344,-8.114344,-1.606641,-6.971308,-2.108076,6.946899,-9.108536,-8.041594,-1.763906,9.505169,-4.519215,5.151180,-4.881356,-5.198474,6.078106,-0.465080,3.263468,-0.404093,-5.649118,1.346053,2.020052,-3.835831,-8.952689,3.275318,3.308601,7.943662,0.468372,7.718046,-2.969272,-0.186659,-2.016156,2.032987,0.530036,6.652361,-6.530656,-0.905784,-5.651540,-5.388034,3.961422,5.381507,-7.641018,4.576999,7.652484,5.298237,-8.323060,-1.515460,-5.305315,-3.987688,8.540016,7.057633,9.457587,5.378235,-8.581033,-2.384330,-5.578473,-8.307091,8.500255,-8.440797,9.205753,-7.534875,0.295327,-4.291544,0.910879,3.558277,1.573754,-8.097723,-8.854764,-9.009270,4.485203,-6.890550,-0.057922,-2.044304,-3.146795,-9.663407,6.794693,4.222626,6.324108,-4.615675,1.676712,-2.544387,0.862908,4.544540,-7.136261,-7.361078,-2.012145,2.810324,-2.934836,-0.922817,-4.526986,-8.448220,-5.871863,-9.540441,7.587318,-1.451563,-7.430227,3.550267,2.856271,0.777526,-7.238327,-5.974735,1.596934,9.896435,5.190810,-0.531427,4.011085,0.378501,0.570399,9.941077,9.640359,2.012701,-3.841474,2.014778,1.171748,-4.442834,-7.603477,-0.441617,-5.518773,4.224248,-9.909731,-8.640985,-0.468906,8.102691,7.573395,7.405691,-7.616386,7.244257,0.028070,-6.557011,4.023633,9.235612,3.877586,4.794699,0.206066,-3.170469,4.366920,2.954807,-1.559815,3.668426,-7.162720,-2.095664,4.797327,4.784885,-5.281759,2.621642,-2.233177,-8.089339,-0.282391,-1.919922,-3.806207,7.160115,4.332296,-7.119422,8.918083,7.142287,-3.556540,-4.620802,7.287545,-0.576459,-2.694411,-2.513177,-2.849702,-1.739173,-1.932821,6.202952,4.084221,-9.115362,5.894567,3.649582,-2.559420,-4.381013,-0.744772,-6.244994,3.469690,-3.449075,-4.552371,-5.752850,4.483680,-4.428245,4.509912,-9.828778,-1.015513,1.672486,9.056090,1.380420,-4.990498,-8.920003,-2.997309,-7.592654,-9.027382,4.330057,5.281464,6.992909,2.366494,5.933852,2.066533,9.773091,-5.557352,-3.290115,1.557889,-0.287238,2.222551,7.659997,3.012528,9.218698,-6.249193,2.702099,5.916621,-9.184392,-3.164114,0.709519,8.497557,0.381363,-1.186506,-4.359157,7.163773,0.032588,9.350821,9.114907,-9.643230,-9.637309,0.842900,9.765383,6.686911,7.973558,7.166314,7.591329,-9.029758,-9.994955,-8.831732,-6.153471,2.222896,5.185327,-7.096410,-9.345120,6.252993,5.619467,-0.261886,6.159076,-5.100473,1.606992,-6.103039,5.290647,2.441025,1.024784,-4.493711,-6.487355,9.523837,-2.856691,-7.422882,-6.256544,-6.458580,-4.214720,-7.967064,-8.569136,4.592972,-7.490789,-8.063420,-2.807785,-2.071280,-6.981087,9.414136,-4.590464,-3.385114,2.342987,7.061859,-6.906569,3.453338,-1.187358,4.609352,7.938059,-9.233976,-4.916427,1.731349,5.066488,-1.520607,-9.653614,-1.094870,-6.886004,9.734036,3.341698,8.682518,-6.887154,-4.927685,2.078639,1.933990,-6.706335,-8.416655,5.154432,8.053501,6.558816,-5.276577,-9.009171,1.738807,9.250146,-2.746460,6.550319,-6.050123,-7.314767,0.773244,-1.809268,-6.023619,-7.460015,2.308430,-0.657555,-6.692850,-9.887891,2.689352,3.540158,4.877939,-2.451206,9.802259,-4.392970,9.115856,3.365343,-4.787705,-5.061183,-4.812820,3.113019,-3.108161,9.530561,-8.321948,3.031923,-2.847919,-5.965518,7.197278,7.362514,-1.660805,-1.232988,-8.835903,-9.803144,-8.803068,-0.759625,-5.821325,-7.512529,4.745439,5.148657,-7.834550,-8.058081,-2.082332,-8.485043,9.678173,-4.768902,8.529131,5.767049,-6.316914,-6.090687,-5.448683,-3.965545,4.044833,8.350238,-0.005867,-8.495104,3.983372,3.353342,7.070130,1.538668,1.223604,-0.909540,6.734163,-4.933092,-6.248324,-1.507234,2.091079,0.547330,3.765712,-9.433092,4.532589,-7.644452,9.980277,-6.782858,-0.958119,6.048398,-4.721904,-5.391722,5.480565,6.073371,-6.365793,9.255851,-1.117858,-5.924533,3.825446,0.077785,8.174144,-6.773155,7.931042,0.147471,-9.212270,0.793388,-7.613582,-5.525651,8.253504,4.600196,7.152788,0.659455,3.539354,-2.654913,-6.511416,-6.947158,2.827161,-5.855460,2.039721,-3.810787,-9.879471,-8.961588,-8.070116,9.113959,2.137813,7.634347,7.659242,-7.119477,-9.638175,8.755450,6.413038,-9.564136,-1.645648,8.966451,-5.199799,-2.504493,-4.032862,3.842494,7.912784,-1.111344,-3.368556,-7.860320,-3.692960,-2.718765,3.549427,-7.156542,3.057794,7.437751,4.343590,-4.708947,6.753827,1.271750,2.039358,-1.948547,7.615627,2.588191,-6.681490,7.287961,5.116636,8.520860,9.726121,2.399945,-8.422723,3.805268,5.903025,4.987681,-5.692021,-5.768326,0.546081,-5.480025,8.223895,-8.457717,0.208506,0.218928,-9.571061,8.689079,-9.580102,-7.186752,-1.399221,-5.874622,2.994520,-3.674850,-6.044777,-5.295120,0.734343,-1.681505,-9.005443,-4.157693,-4.327152,-9.856969,-8.355782,9.038742,-9.385599,7.963448,3.127765,2.639385,6.530725,-1.631078,-2.598966,5.879591,2.735714,8.685440,1.409978,-3.264485,6.472097,-7.893610,-8.714969,-4.829787,8.151650,2.197109,9.784999,-4.600318,-3.059586,8.197020,7.942657,-8.673389,-3.957858,-1.838146,2.666041,-5.755141,-2.427232,-8.965426,-0.139119,7.435682,-6.874436,-6.350605,1.536874,-0.233248,8.295872,5.502484,8.457814,3.224991,6.858119,8.354009,-8.993775,3.771213,-2.481387,-5.157255,-0.956240,-9.139706,-0.347846,-7.618484,2.398057,-5.057791,-1.324896,5.660695,7.845019,-2.825384,5.277880,-1.924314,2.143361,-5.576312,4.661557,-0.364457,-1.218337,7.736061,2.657314,7.073444,-9.384803,5.347538,2.190255,-9.766400,6.128159,0.280210,-8.655713,4.426726,9.427993,7.619008,-3.706526,-4.220166,1.332704,8.933790,4.889434,4.896749,-0.529575,2.263557,-2.900967,8.853453,-8.400303,-0.945119,-0.217153,-9.773976,7.171850,-6.564167,0.596155,-9.128159,-5.934916,4.538629,-9.335350,-5.338531,8.517725,-5.943809,8.457303,8.707547,-3.971983,1.110623,7.687506,-1.751978,2.896000,-7.941401,1.804731,9.550930,8.246223,-4.638486,-9.491690,-0.069538,-5.085162,2.161328,-0.907329,8.282717,-6.540798,1.624107,-5.721383,-5.134523,6.610499,-3.851103,4.130563,-8.796466,-7.529847,8.856187,9.908141,-0.030020,-5.316727,-4.765775,-2.909696,-4.870983,-0.834095,5.983974,0.042209,-2.829079,-8.789098,-4.231284,4.251638,-4.931311,2.839155,-0.972280,-6.612611,-0.455246,-9.178737,5.580555,-4.429897,1.815782,-7.783516,4.267300,-5.740179,-4.032796,-6.933409,-6.523895,6.139384,2.900811,-3.908740,-5.247987,-2.377705,-7.169315,4.517105,8.665308,9.486345,-7.633188,7.299719,8.489667,9.215584,8.608924,-8.569403,5.783736,-7.647808,-3.871379,-0.834504,8.650156,8.526673,1.035702,-8.976208,-0.688450,0.378723,3.086663,-7.720230,-3.235854,-8.447683,4.157882,-2.239229,-3.374731,7.804134,1.282323,5.261419,-2.336053,-6.857803,9.259975,2.560428,-8.360295,-8.816594,0.197369,1.077647,9.967852,1.639114,-7.743358,1.192410,2.193007,-1.167587,5.796965,3.861777,-3.633391,7.663066,-8.282034,-6.790012,-0.807715,-6.433190,1.800872,3.496297,8.816153,-1.806553,-9.846013,5.067036,-1.638032,3.400317,1.394545,-4.661590,-2.622807,-5.092255,-9.855411,-9.971537,9.494169,-8.384818,-3.919639,9.747360,1.857946,9.869801,-0.687848,9.680324,-1.740936,-9.526052,3.580646,-8.775965,-9.720594,2.342681,4.493505,0.730951,-3.409420,0.096448,-4.655161,9.942476,-8.881888,4.470025,7.544830,-2.151775,0.980933,2.808961,8.900767,4.876742,-0.946557,-4.186290,-0.390882,5.193990,5.024261,2.086902,3.422043,3.679332,0.788681,-5.309653,9.958815,8.078119,9.477862,-1.850701,-8.945066,4.719504,-4.225188,-1.343683,2.058798,2.776375,-8.548578,-2.742415,5.156764,-5.414169,5.646635,5.153970,8.773383,5.535113,-8.104280,9.344436,6.648829,7.655000,-1.663958,-2.180158,4.815330,-7.979486,-9.752938,-6.565304,3.374922,0.414058,6.979131,9.393836,2.083166,-4.212214,-6.206240,-6.875687,-3.087929,7.991708,0.607419,-8.172612,-4.525950,-5.452005,-1.517386,-9.734578,7.770539,-2.418066,7.630169,4.210807,-6.408607,-8.180083,9.066429,5.292385,-2.953511,-2.254123,-4.457010,3.631058,-1.653242,-4.379275,-1.563868,-2.832938,-4.046492,-0.290112,-3.917410,-7.834946,8.631746,-6.954615,9.678621,-1.482394,-7.469960,4.987973,-7.150705,2.789601,-7.299370,0.497285,4.065250,0.943937,-0.111866,9.253017,8.868418,8.001864,-9.404313,-3.149822,2.795585,0.379440,2.409477,5.006990,5.704394,-2.064097,-5.152457,-8.379383,5.228011,8.219528,-9.854815,1.576455,-8.992506,-6.161624,-8.942085,-7.201595,-2.647690,2.994709,-1.891712,9.489726,-1.756258,5.669955,8.615814,-4.911448,7.194323,-9.412864,-4.786114,-6.116919,-2.364165,7.272524,6.596661,0.936995,0.737613,7.553187,6.795784,-4.943424,4.060716,-2.230492,2.264700,2.131128,-7.245155,-7.657821,1.890926,3.896157,-9.519849,-1.919106,-9.819349,3.930763,9.474818,5.161069,2.324294,-2.052346,7.809016,8.695435,3.998965,-3.277022,-7.212851,-0.476913,6.882910,0.735108,-3.181746,2.502465,8.560595,-6.878894,4.065446,3.111131,9.188401,1.779902,-6.257462,-1.809459,-5.895966,3.422317,7.890091,-8.681394,7.059137,-8.453013,-3.609166,-4.332963,-3.682633,-9.985047,-1.773837,-1.080110,5.812232,2.753412,-8.851312,8.402770,-0.377312,2.158227,-5.742571,-3.856875,-1.628531,0.741327,-3.160526,-1.593221,-4.127406,-0.113009,1.062104,2.454466,9.390994,-8.889295,-4.283305,-5.624637,2.359938,-8.279115,9.324241,9.624764,-5.362847,-5.567269,4.086492,7.217887,2.806750,-5.654203,5.308781,6.800887,-1.731796,-2.698329,2.955970,9.482846,7.644166,-0.972106,-4.129958,-4.507126,-5.164147,3.186967,9.333201,-9.414003,2.235355,7.044937,-9.094388,9.184932,7.867140,9.746840,-9.583729,0.753519,-5.442093,-8.743364,0.885003,4.888824,-7.911535,1.908167,-9.495558,-3.030589,7.222743,-4.492400,4.998682,-9.835092,7.859876,0.113659,4.127107,8.353772,0.684022,-1.044702,-4.993727,-4.764548,9.696463,8.827350,0.040973,9.934958,4.418938,-8.691402,6.850726,5.865122,-2.136299,-2.444956,8.668258,-8.610092,8.993146,-6.657948,-3.008463,-7.185180,-1.899935,9.408132,-6.607828,-8.891763,-6.424424,-1.596136,-2.695247,1.316214,-2.044698,-4.730579,2.049626,-0.120197,0.507214,6.479017,-8.653187,7.852475,4.070144,-3.161351,1.948201,2.558262,-1.276375,9.112677,-3.120479,3.509744,-1.225562,-7.934127,-1.397498,8.878665,3.019081,-2.268627,-2.384555,4.462587,-5.082398,1.301730,-2.336419,-7.619125,-3.782067,2.099032,-4.296179,-7.195409,-1.553648,-3.114873,3.395373,1.621653,-2.724816,-4.262217,9.946099,-2.851547,-1.650731,-6.678496,4.259398,8.325705,-9.295804,-0.532094,8.070417,-1.361872,6.918560,6.374982,-5.277536,-1.284009,-8.358271,0.361729,-5.103774,6.359054,-3.507983,3.675612,-8.926644,0.792226,-7.192606,2.097106,-5.244599,6.577101,7.945354,6.827942,7.400800,-8.827676,-5.317910,-6.033758,-2.587265,2.544808,2.857176,-3.101278,1.102606,-8.171330,3.852604,-6.110904,9.801388,9.085461,-7.268306,-7.725565,-6.148398,6.775648,3.100599,7.382717,1.127716,-6.937118,-4.590978,9.618858,-7.564170,1.509032,0.101973,-6.537269,5.367694,7.018482,-7.479331,-5.345516,8.653140,9.724066,6.659922,-4.812617,-4.715167,5.765702,9.962926,-7.735488,-1.101521,6.918422,3.640651,1.146545,7.352848,-7.532921,-6.097384,0.108428,-6.944692,-0.065715,2.925438,8.289697,4.174476,-3.559363,9.386056,6.487541,-0.317280,9.399930,-3.654798,1.352587]], dtype = "float32")#candidate|5566|(8, 1170)|const|float32
bop_5567 = relay.subtract(var_5481.astype('int32'), relay.reshape(const_5566.astype('int32'), relay.shape_of(var_5481))) # shape=(8, 1170)
output = relay.Tuple([call_5431,const_5474,bop_5482,call_5487,uop_5504,call_5509,bop_5567,])
output2 = relay.Tuple([call_5432,const_5474,bop_5485,call_5488,uop_5506,call_5510,bop_5567,])
func_5571 = relay.Function([var_5481,], output)
mod['func_5571'] = func_5571
mod = relay.transform.InferType()(mod)
mutated_mod['func_5571'] = func_5571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5572 = relay.var("var_5572", dtype = "float32", shape = (8, 1170))#candidate|5572|(8, 1170)|var|float32
func_5571_call = mutated_mod.get_global_var('func_5571')
call_5573 = func_5571_call(var_5572)
output = call_5573
func_5574 = relay.Function([var_5572], output)
mutated_mod['func_5574'] = func_5574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4811_call = mutated_mod.get_global_var('func_4811')
call_5647 = relay.TupleGetItem(func_4810_call(), 0)
call_5648 = relay.TupleGetItem(func_4811_call(), 0)
uop_5665 = relay.acosh(call_5647.astype('float32')) # shape=(10, 12, 5)
uop_5667 = relay.acosh(call_5648.astype('float32')) # shape=(10, 12, 5)
output = uop_5665
output2 = uop_5667
func_5670 = relay.Function([], output)
mod['func_5670'] = func_5670
mod = relay.transform.InferType()(mod)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5670_call = mutated_mod.get_global_var('func_5670')
call_5671 = func_5670_call()
output = call_5671
func_5672 = relay.Function([], output)
mutated_mod['func_5672'] = func_5672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4407_call = mod.get_global_var('func_4407')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_5711 = func_4407_call()
call_5712 = func_4407_call()
uop_5718 = relay.cos(call_5711.astype('float64')) # shape=(10, 12, 5)
uop_5720 = relay.cos(call_5712.astype('float64')) # shape=(10, 12, 5)
bop_5723 = relay.less(uop_5718.astype('bool'), relay.reshape(call_5711.astype('bool'), relay.shape_of(uop_5718))) # shape=(10, 12, 5)
bop_5726 = relay.less(uop_5720.astype('bool'), relay.reshape(call_5712.astype('bool'), relay.shape_of(uop_5720))) # shape=(10, 12, 5)
output = bop_5723
output2 = bop_5726
func_5729 = relay.Function([], output)
mod['func_5729'] = func_5729
mod = relay.transform.InferType()(mod)
output = func_5729()
func_5730 = relay.Function([], output)
mutated_mod['func_5730'] = func_5730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5287_call = mod.get_global_var('func_5287')
func_5289_call = mutated_mod.get_global_var('func_5289')
call_5762 = relay.TupleGetItem(func_5287_call(), 0)
call_5763 = relay.TupleGetItem(func_5289_call(), 0)
func_2046_call = mod.get_global_var('func_2046')
func_2051_call = mutated_mod.get_global_var('func_2051')
var_5784 = relay.var("var_5784", dtype = "float64", shape = (840,))#candidate|5784|(840,)|var|float64
call_5783 = relay.TupleGetItem(func_2046_call(relay.reshape(var_5784.astype('float64'), [12, 5, 14]), relay.reshape(var_5784.astype('float64'), [12, 5, 14]), relay.reshape(var_5784.astype('float64'), [12, 5, 14]), ), 0)
call_5785 = relay.TupleGetItem(func_2051_call(relay.reshape(var_5784.astype('float64'), [12, 5, 14]), relay.reshape(var_5784.astype('float64'), [12, 5, 14]), relay.reshape(var_5784.astype('float64'), [12, 5, 14]), ), 0)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_5799 = relay.TupleGetItem(func_4140_call(), 0)
call_5800 = relay.TupleGetItem(func_4141_call(), 0)
output = relay.Tuple([call_5762,call_5783,var_5784,call_5799,])
output2 = relay.Tuple([call_5763,call_5785,var_5784,call_5800,])
func_5809 = relay.Function([var_5784,], output)
mod['func_5809'] = func_5809
mod = relay.transform.InferType()(mod)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5810 = relay.var("var_5810", dtype = "float64", shape = (840,))#candidate|5810|(840,)|var|float64
func_5809_call = mutated_mod.get_global_var('func_5809')
call_5811 = func_5809_call(var_5810)
output = call_5811
func_5812 = relay.Function([var_5810], output)
mutated_mod['func_5812'] = func_5812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_5856 = relay.TupleGetItem(func_4140_call(), 0)
call_5857 = relay.TupleGetItem(func_4141_call(), 0)
output = call_5856
output2 = call_5857
func_5862 = relay.Function([], output)
mod['func_5862'] = func_5862
mod = relay.transform.InferType()(mod)
mutated_mod['func_5862'] = func_5862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5862_call = mutated_mod.get_global_var('func_5862')
call_5863 = func_5862_call()
output = call_5863
func_5864 = relay.Function([], output)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5862_call = mod.get_global_var('func_5862')
func_5864_call = mutated_mod.get_global_var('func_5864')
call_5870 = func_5862_call()
call_5871 = func_5862_call()
func_310_call = mod.get_global_var('func_310')
func_312_call = mutated_mod.get_global_var('func_312')
const_5880 = relay.const([-8.883708,2.891464,0.263950,8.245576,7.272218,7.287981,6.979162,-8.507891,-6.258054,3.322087,8.630888,0.326609,0.783144,-2.959178,1.868619,3.194057,-9.941952,3.106696,-3.114342,-7.637320,-7.742358,9.157684,5.611685,-8.013780,-6.993099,-9.725843,-8.828887,7.335283,4.709595,-4.629724,-1.956738,-3.889647,8.538765,-6.629162,-0.339126,5.864340,6.225190,-6.031849,-2.255695,-1.987432,-4.500082,-9.343928,9.640613,-5.759372,5.986966,9.802229,7.471304,7.369933,-4.868334,-9.334370,-6.053899,1.117789,4.527522,-3.772969,-6.998215,-1.828237,-0.523045,-2.827888,-7.830893,-3.078645,7.936426,6.975356,4.384263,3.664738,2.636279,-1.488845,-2.556191,0.174870,0.147480,8.296950,-2.273335,9.369796,2.850965,-7.492295,-9.565366,0.573948,2.330659,-6.194278,6.544433,-0.706635,-9.409825,7.007134,-1.015534,-8.457958,-9.826713,-2.729756,5.757945,6.968136,5.320249,5.868731,-2.096962,7.510121,1.008667,-6.762408,-1.530391,6.279374,1.199831,1.886649,2.332609,-8.385278,9.752889,0.645014,-1.231113,5.899385,-2.077576,7.284728,-9.704752,-4.174751,7.818221,-1.183350,5.988822,-6.017371,-7.455736,7.798295,2.006854,-3.934168,-7.680787,0.812746,-3.573245,-6.441565,7.577970,-5.336924,-2.480152,-8.063899,3.778033,3.878776,-7.352221,-3.791305,6.719451,1.296082,5.270933,-2.640330,3.706126,-0.006922,-1.907967,-1.350507,-0.998739,0.547291,-8.405576,-7.800093,9.205641,-6.339128,0.466818,-4.637951,-2.321310,8.341780,9.100077,2.281408,-3.052421,2.922189,-0.514528,-4.315647,-4.127764,-7.035058,0.324959,-3.636971,-0.074189,3.281878,7.962855,0.796503,9.085369,3.239384,-0.799713,3.495043,-8.741696,3.481993,-1.374392,-3.185175,-3.572194,7.393467,8.629740,-2.493139,4.729691,-4.198235,8.987682,-1.110397,-8.068503,-2.888858,6.137017,1.544501,-0.664716,-3.164875,9.325921,3.835836,8.898555,7.797842,-9.285907,3.975040,8.948747,0.646202,7.796293,0.484986,9.962521,-0.896355,5.672899,5.648099,-3.079426,2.447660,-5.905814,7.766425,9.951950,-1.534793,-2.901205,6.917971,8.713777,0.350901,2.776681,5.600981,-6.995690,9.182093,9.266933,7.274171,-0.929518,4.231240,8.381066,7.761384,-3.660338,-5.739750,9.498201,-2.160010,-1.205771,2.676349,9.039536,3.761537,-0.355660,4.709645,4.399343,5.754422,3.995443,-1.621610,-3.099530,-3.756129,6.193526,3.478755,-1.618939,-1.333326,5.346576,-2.945711,-4.866469,-4.830420,-6.548498,-5.737133,-5.858444,-6.503529,8.786134,-1.934448,-2.824082,-4.923183,-2.878991,-3.919847,9.554764,6.760853,-4.279510,5.150367,9.186583,5.346249,-9.973400,7.798426,0.892739,-7.106063,-7.675521,-8.976563,9.940819,6.847696,7.311337,1.062023,-1.102094,9.646401,-9.994257,3.214892,9.509852,-1.643214,-0.354279,-3.753445,4.739534,-3.643944,-6.340821,-8.552739,7.828773,0.383688,7.611650,-9.564280,8.208320,-6.663730,-9.962473,-3.231401,-9.995889,2.622655,-0.286706,-1.694654,8.766774,-1.757585,-8.070118,2.879583,-8.141031,-3.443542,5.648123,6.330349,-4.821939,1.769343,5.337888,-8.499570,-9.112689,-0.561141,-9.267700,-9.666175,-5.368392,2.337848,3.515513,-5.634731,3.061022,1.744112,9.860507,7.152337,-4.586161,6.764131,-2.988392,2.150788,0.227655,-2.498969,-3.697550,4.419735,3.474603,4.994529,-4.079353,-0.589193,-3.224840,-4.149835,-1.990642,-6.088840,-0.158653,-0.194635,4.611946,9.118605,8.457559,-9.566458,-2.563836,-4.219776,-9.585239,-3.486446,-8.432528,-4.217383,-0.574056,-4.078715,8.481489,6.926914,-8.789720,-4.111417,3.504500,9.421733,7.424035,7.934073,6.103334,5.251447,8.037938,-5.326247,-5.180412,1.467206,-2.673839,3.755138,-0.695493,8.755737,-9.475982,-7.730523,-7.416118,7.260077,-4.433508,3.996652,-6.762041,1.605492,4.190747,5.350686,0.975705,-0.817723,0.405172,9.937573,8.559666,-4.382212,-2.514468,9.058812,-3.560420,6.927085,3.956772,0.642757,6.931746,-9.635159,-9.404003,4.416155,-4.846534,9.553186,2.929916,6.540150,-7.380966,6.934715,-1.129358,3.946359,5.756107,6.406916,2.174210,-6.906841,-9.386242,4.572721,0.095097,-9.478668,2.865379,9.737417,-7.966460,3.159965,-1.592289,7.669525,9.552418,-1.505230,5.115924,-5.979583,-8.200212,-8.904152,9.326381,4.111862,-9.927169,-2.270262,-3.782025,-3.120529,-9.197247,3.969347,-5.986813,7.125294,2.739634,-6.695888,-8.614927,4.166605,-1.917048,7.997780,-9.980493,-9.989254,-5.896376,-6.432651,-8.591119,5.301806,-5.432556,1.554153,8.621693,-0.322446,-8.706254,-9.803916,4.415273,9.954287,6.461981,0.853048,-8.076460,-7.965128,-7.545322,5.897954,6.953524,4.495655,2.778402,3.296465,-7.365459,3.359774,-7.155236,6.997393,5.927128,6.591879,6.888820,-1.624758,-6.938331,-4.547364,5.232325,4.198727,-2.251704,-3.193199,-2.061332,-9.403913,-8.743668,7.673033,0.791671,-4.226415,-1.482321,4.251854,1.001136,6.582904,-0.258066,-0.897637,9.600521,1.290394,2.646086,3.189517,6.614771,-8.627752,4.459163,-6.612832,-6.364778,4.561566,1.745792,-7.710472,5.402386,-1.950664,2.794506,2.195971,4.798017,-8.365644,5.639983,-7.522720,7.069372,-7.442009,-2.998421,-3.865639,4.688396,4.455287,-8.196303,9.161479,5.108555,-5.879560,6.464443,3.678511,-3.459963,6.268939,0.468992,-8.372523,-9.793241,3.711922,9.248630,3.058304,-9.068934,2.407854,-5.033767,-0.690858,9.244817,-3.036551,-1.090845,2.931978,4.135739,-8.506958,-0.995603,7.523563,6.985640,4.019264,-2.449141,-0.907354,-4.573300,-6.564425,-0.355591,-9.727063,1.973724,-8.691922,7.672187,-1.809103,-2.641228,3.998047,1.931558,8.619117,-1.224994,8.550186,2.615603,2.439880,-1.225514,-8.127879,-0.554442,-9.222696,4.004736,7.240483,-1.575199,1.812487,8.694415,8.827746,-9.533160,7.981248,4.326885,9.443975,-8.411748,-2.872528,-4.332580,-6.384735,-6.516478,-7.076188,5.064696,-3.987734,9.577983,4.663388,-9.277776,2.601561,7.773446,1.503943,-7.573546,-5.027137,6.362635,6.073175,5.443117,-9.261316,-6.710110,-6.563023,9.025305,8.676318,-1.689140,3.351942,4.158424,4.548137,5.333986,1.248700,-6.879678,1.557997,0.159382,2.860730,-0.241413,-8.899465,2.651869,-3.180306,6.669495,0.984962,-0.610100,-1.465368,-5.154700,7.421715,6.796846,3.415521,-1.030405,2.615130,0.726488,-0.071266,9.922789,-9.620291,5.988661,1.922225,-6.987655,6.973250,0.299725,-7.576851,0.627938,3.005220,-6.644196,-5.470941,7.094181,-5.371834,0.908369,-7.689411,8.788259,3.136681,-6.270850,0.538767,6.535268,9.380268,4.351265,-7.066729,1.287210,4.973757,-7.189805,-5.182498,8.714700,-1.059317,-6.965086,3.712438,6.007628,-5.913645,4.281320,-9.007294,-9.786751,2.840757,6.783685,5.855256,-6.025690,2.900455,-2.233975,-3.587382,-9.113813,-1.030022,-9.781621,3.691989,-4.781671,2.242709,3.653088,8.376732,6.792317,9.274457,-1.164629,-3.921816,0.769574,-3.595661,7.584905,-6.275443,9.439295,-8.170956,-8.123855,-2.568995,-3.665740,4.239353,7.101483,1.981232,7.760110,-1.032438,2.907784,-3.989779,-8.965791,9.509466,-0.395049,6.958443,-8.402892,5.408066,8.824510,-4.052497,0.821110,-2.832191,-9.687851,4.824146,-6.358275,0.351840,-5.120354,9.353301,-7.432910,8.587664,-7.224372,2.551633,-0.139755,3.214328,-8.822092,6.865288,3.956369,-5.690487,-2.510155,-2.368445,6.137708,-2.021197,7.933944,-7.958518,-3.866984,-9.980774,9.098376,-5.981661,-4.481130,9.656710,1.519819,-0.026240,-6.459840,-4.786519,0.869085,-7.746076,-4.608678,-2.246397,-1.662366,-5.092209,-3.208518,5.681607,-6.518646,-0.395094,8.902484,9.848664,-8.404057,-8.090930,-2.405217,6.048895,4.128110,1.920712,4.630935,2.086158,-0.752554,-1.915508,8.073367,-6.996813,4.908953,-0.423414,0.840498,4.619397,-3.351084,-9.596087,-1.347221,-6.777446,1.042435,-4.151804,6.340396,-1.566095,0.034308,8.487448,-1.646585,-2.618533,-2.959899,6.605087,-8.602291,1.419723,-4.489829,8.945729,-3.815034,-3.320858,1.455984,-2.669731,-3.297322,4.630878,4.968529,-5.369803,-2.614173,-3.484213,-2.384763,-2.223849,-8.028107,6.694539,-0.755438,-5.409270,-4.546895,-0.845947,4.831389,-6.031544,-8.515077,7.386524,-3.672229,8.347039,-4.245731,8.580616,6.850287,7.865018,-0.908619,-3.051210,1.789293,6.963998,2.479800,-3.152109,-3.544200,4.045948,-0.826788,-4.585907,-1.195815,5.435091,4.324944,3.610325,8.368575,5.076725,4.615691,-0.463524,-5.278360,-6.942754,5.061479,-0.268931,-1.867737,-6.266945,-6.707439,7.175144,0.753637,3.614073,-3.260199,4.258178,1.968203,2.193985,1.177043,3.951849,1.199957,0.177124,-6.784872,-4.035444,9.450504,0.537830,0.918391,1.411134,-4.698475,-2.896145,8.302134,-0.777157,-2.321778,-3.326120,6.432309,4.951966,8.985793,5.314626,-3.145342,-5.965149,5.667353,6.776229,5.468138,3.935312,8.525182,-6.213474,8.854753,8.692337,-7.145300,4.302372,9.121218,-0.914641,-0.273077,1.494496,8.663797,-6.035550,8.747556,7.368097,-4.170214,-0.912039,-6.897017,4.432541,8.936725,3.769767,-2.960736,5.536554,4.335327,-1.358182,-9.950074,-1.246815,-9.763041,-5.449787,-7.248584,-5.963615,-4.956178,-7.735033,0.386006,-2.995624,-5.333611,-0.854403,0.702173,9.811669,6.622702,-0.608277,5.696526,7.660444,1.267577,9.413038,6.330287,3.672572,7.420366,0.387854,1.193446,6.848757,0.948406,-0.496283,-4.049719,-6.613158,4.246186,1.861876,5.931019,-1.340847,-3.698111,1.920806,0.433775,4.556318,-2.931656,7.471773,-5.042161,-5.207679,-5.480445,-2.479526,-3.334218,-7.304649,6.951406,-5.928585,-7.340760,-5.930928,-8.299559,6.800592,-3.988539,-6.299469,3.761409,-1.423287,2.717794,4.234811,8.229922,-2.985867,-5.093604,5.523575,-5.910698,4.715463,6.221123,4.540432,9.394236,4.062984,5.561195,-2.557593,-3.599356,-6.186920,2.240108,8.684477,-7.299894,-3.592779,0.385992,-0.515251,3.463268,-9.932332,2.752716,8.454077,-2.370949,-5.986495,-4.578802,-8.033209,1.188424,-8.793433,7.221404,1.045959,7.847162,-4.002944,-9.053649,-3.869516,-3.207039,-1.305786,-0.548611,-3.828152,-0.065354,-6.377203,-5.204028,5.072163,-4.020325,-5.232103,-8.301342,4.534394,-6.040505,-7.663277,-8.726417,-1.611557,3.649354,3.158444,-6.533550,7.346065,-5.214500,-8.853658,-5.948769,4.844490,9.139053,-9.096896,4.891311,-1.151712,-2.277184,-3.759822,5.911666,1.706833,1.815763,5.874300,4.740693,6.331776,-8.802591,-8.836682,4.169432,8.961291,3.852603,-3.576705,9.819829,-7.616790,1.850189,3.098219,-4.812112,-0.996937,7.398139,5.651993,-1.409306,-4.525728,-9.330321,2.114076,-4.087093,3.106099,4.608090,1.127474,-0.163789,-8.148496,-2.014106,-1.344226,-5.623081,8.111263,-7.493410,-8.811312,2.821548,-3.351355,5.987841,1.345767,-9.261950,-6.098127,8.153353,5.989948,1.302761,0.654846,5.982371,-1.616116,-2.863036,1.738290,0.500423,3.372344,-5.725005,-1.439124,-6.181156,-5.699500,-6.452594,-0.751534,-3.143318,8.877742,2.249230,7.700534,3.091943,-7.315611,6.101785,-8.306690,-1.223150,1.446542,5.091937,-8.191194,-9.986492,8.548529,4.859862,-4.367676,0.742168,-4.629425,-2.843447,8.902765,2.742248,-3.033016,8.250511,9.040453,-5.285417,-0.114080,2.860478,5.429953,0.241701,-7.237077,-5.975107,-9.464419,6.356591,-1.504519,6.308057,7.370831,-0.190849,2.917934,-6.773254,9.724909,-3.346875,2.023284,-5.164818,3.901812,4.999232,3.476181,-8.655494,8.113271,-2.369584,4.883818,1.048131,-5.412484,-6.127256,5.648402,3.783246,-1.060991,-3.746645,1.050507,-7.287931,0.743652,-4.347656,-8.644818,-5.074481,-9.284065,2.821148,-4.242061,-1.563898,-6.153519,6.332322,-4.623780,-0.749467,-9.868541,-6.007683,-9.253044,-7.576832,-4.728357,-3.328702,1.143112,-6.649891,5.287599,3.819399,-0.354253,-2.338872,2.509159,-3.275204,-6.044459,-1.891769,4.541406,-8.338713,3.126674,4.171191,-4.179946,-9.247510,1.368667,3.520905,7.572064,-2.835306,4.554413,-2.404460,-6.851314], dtype = "float32")#candidate|5880|(1170,)|const|float32
call_5879 = func_310_call(relay.reshape(const_5880.astype('float32'), [6, 15, 13]))
call_5881 = func_310_call(relay.reshape(const_5880.astype('float32'), [6, 15, 13]))
func_5670_call = mod.get_global_var('func_5670')
func_5672_call = mutated_mod.get_global_var('func_5672')
call_5884 = func_5670_call()
call_5885 = func_5670_call()
func_146_call = mod.get_global_var('func_146')
func_149_call = mutated_mod.get_global_var('func_149')
const_5891 = relay.const([-7,-9,-10,2,-1,9,1,10,6,4,8,4,-1,7,2,-10,6,4,4,-1,1,6,-9,5,-2,1,-2,9,5,5,-9,-8,6,-2,-8,-7,4,-2,10,10,8,-5,10,6,-9,3,-7,2,5,-4,-6,3,-6,4,-4,-9,8,3,-7,1,1,3,-7,1,-10,2,-8,7,1,2,-6,8,-5,9,-1,8,-6,-9,-8,2,7,-6,-10,1,-4,7,-3,1,-7,2,3,-9,4,10,8,2,6,10,-2,-9,3,-6,2,-8,2,-8,-1,1,-5,-9,-5,-6,-10,-8,7,-9,-3,9,-6,6,-9,10,9,5,-6,-7,-5,3,1,-6,-9,1,3,1,8,-5,10,-7,1,-5,6,8,-6,5,-2,-8,-9,7,10,1,-3,-7,6,-4,-7,5,-2,5,4,5,-2,-9,3,-4,3,-3,4,9,-5,6,-3,-5,4,3,9,-5,1,3,1,-7,3,-3,3,6,7,1,-2,5,6,5,-5,10,6,2,-3,6,-10,-4,8,-10,-1,-7,7,9,9,1,-6,-2,4,-4,2,4,6,4,5,1,4,1,9,7,5,3,-8,-6,10,1,9,-5,-3,-10,-4,-6,-10,-2,-6,8,8,5,-10,-10,10,-2,9,3,-8,-4,-4,3,-7,3,-7,-7,4,-10,-2,5,-4,-10,-6,-6,-5,-9,1,3,10,-3,8,-9,-1,-9,9,-6,2,-5,10,5,4,-6,-9,-2,6,-5,5,-9,2,3,9,-6,5,1,5,-1,-1,3,-6,8,-2,6,-6,-6,-2,-4,6,2,-1,9,9,4,-6,2,4,4,5,-3,-7,-3,-8,2,5,9,6,-2,5,9,-7,-3,-2,-6,1,10,-10,8,8,-4,-3,8,1,8,-10,-7,-7,7,-1,6,4,-9,7,-2,7,-7,-1,10,7,-7,-5,3,7,3,4,-8,-7,3,-6,10,-5,4,4,-7,3,9,8,-4,-3,-3,-8,5,9,1,5,9,-10,5,10,-6,-5,3,-6,-10,-5,6,-3,-1,1,8,-5,7,1,-1,5,3,2,-5,4,9,-6,7,8,-2,1,-6,-6,-4,-4,-7,10,-10,8,3,1,-5,7,-6,9,-5,-7,-9,-3,-9,5,7,-6,2,-2,-9,-6,-10,4,9,6,-6,-4,-6,-7,5,1,-9,-1,-2,-5,4,5,4,1,-5,-9,8,7,2,8,-3,-1,7,-3,-3,-2,-10,2,-8,-9,-8,5,2,3,-3,-3,-2,-3,6,-2,6,7,-2,-2,-2,5,-1,-9,4,9,4,6,-6,-7,-6,-3,-2,8,3,-4,3,6,-2,7,8,-3,-7,8,-9,8,-1,-10,5,-7,-10,-3,2,6,-6,-8,-8,7,-4,-1,-10,-10,3,-4,-8,7,3,10,1,9,-9,-4,-10,4,-5,-8,-5,-6,8,9,2,-3,-5,-2,9,4,10,4,-8,-5,3,-8,2,9,3,-4,-3,1,10,-6,5,-6,9,-5,6,2,1,-10,-3,1,-6,-10,-3,-8,-4,-3,-4,2,-7,-10,6,2,1,10,-10,9,-9,-4,-10,7,-5,-3,-7,4,-3,-7,-8,6,-1,-3,-9,-7,-9,-1,3,3,8,9,-2,-9,9,3,5,5,8,-8,-8,5,8,-8,-6,1,8,9,-4,6,4,-9,9,-6,-3,3,-1,-1,-8,2,-2,8,-2,4,5,9,9,8,-1,-4,3,6,-8,5,-7,-10,9,-1,-6,6,4,1,-3,-3,7,9,-7,-4,-5,2,5,1,1,4,8,9,5,-5,-2,3,8,-1,-10,-3,-3,6,-7,9,-10,7,3,10,-9,6,-5,-3,4,9,9,8,-7,8,-3,3,-2,-3,-8,2,-10,-1,7,8,-7,5,1,8,10,-1,4,8,6,-10,-4,4,-9,7,-6,-9,-5,9,-2,1,4,6,-8,6,6,10,6,-2,-6,5,7,7,2,6,-4,5,3,-9,-8,6,-9,-1,-10,-4,-3,10,-2,-10,4,8,6,-9,-7,-9,3,8,-2,9,-2,-8,-9,-5,-7,7,10,1,-9,3,1,2,7,-6,-8,1,-7,7,7,-8,4,6,-1,1,9,7,-8,-4,8,4,-4,-8,-3,-6,6,3,-1,5,7,-1,2,8,6,6,1,-2,4,5,-4,6,-7,9,9,10,-1,-6,-9,-4,-6,3,-10,-2,4], dtype = "uint16")#candidate|5891|(832,)|const|uint16
call_5890 = func_146_call(relay.reshape(const_5891.astype('uint16'), [4, 13, 16]))
call_5892 = func_146_call(relay.reshape(const_5891.astype('uint16'), [4, 13, 16]))
uop_5902 = relay.cos(const_5891.astype('float64')) # shape=(832,)
bop_5905 = relay.bitwise_xor(uop_5902.astype('int64'), relay.reshape(call_5890.astype('int64'), relay.shape_of(uop_5902))) # shape=(832,)
bop_5908 = relay.bitwise_xor(uop_5902.astype('int64'), relay.reshape(call_5892.astype('int64'), relay.shape_of(uop_5902))) # shape=(832,)
func_2797_call = mod.get_global_var('func_2797')
func_2805_call = mutated_mod.get_global_var('func_2805')
const_5911 = relay.const(-2.657851, dtype = "float32")#candidate|5911|()|const|float32
var_5912 = relay.var("var_5912", dtype = "float32", shape = (546,))#candidate|5912|(546,)|var|float32
call_5910 = relay.TupleGetItem(func_2797_call(relay.reshape(const_5911.astype('float32'), []), relay.reshape(var_5912.astype('float32'), [13, 14, 3]), relay.reshape(var_5912.astype('float64'), [13, 14, 3]), relay.reshape(var_5912.astype('int8'), [13, 14, 3]), relay.reshape(const_5880.astype('float32'), [1170,]), relay.reshape(var_5912.astype('float64'), [13, 14, 3]), ), 2)
call_5913 = relay.TupleGetItem(func_2805_call(relay.reshape(const_5911.astype('float32'), []), relay.reshape(var_5912.astype('float32'), [13, 14, 3]), relay.reshape(var_5912.astype('float64'), [13, 14, 3]), relay.reshape(var_5912.astype('int8'), [13, 14, 3]), relay.reshape(const_5880.astype('float32'), [1170,]), relay.reshape(var_5912.astype('float64'), [13, 14, 3]), ), 2)
const_5922 = relay.const([-2,-9,-3,-8,3,-5,4,-1,-6,-10,-8,5,-8,-5,-3,2,-9,10,-7,7,2,3,9,-10,-6,7,5,-5,-5,3,-5,3,6,-7,2,3,5,10,3,-8,10,-10,-9,10,-7,2,-8,7,-10,8,-8,10,6,-7,1,7,-3,8,2,-6,3,-3,6,-6,4,-2,5,-6,-1,-2,-10,-4,6,7,-2,-8,-4,7,-1,-8,-8,-7,-2,6,6,6,6,1,3,-9,2,1,10,-5,10,-8,-6,1,-8,1,-4,-3,10,2,3,-10,1,-2,9,2,3,-8,-4,6,6,9,-6,-2,-8,10,6,-8,-1,-7,-10,-8,8,-1,-6,8,4,-4,2,7,-10,1,6,4,2,8,10,-4,-3,-3,-3,3,-10,10,-4,-10,-7,-10,-10,2,8,3,-5,8,-5,-7,4,8,8,6,8,-6,-6,-7,3,-10,9,-8,-2,10,-7,-8,8,5,-7,-10,6,9,2,-10,-7,-3,6,1,-8,-5,-10,8,-10,-6,5,-1,9,4,-10,-6,7,-3,3,-10,5,-5,-10,-4,7,9,-5,-2,-2,8,1,7,5,10,6,-8,7,7,-8,10,-1,7,9,10,4,-1,2,-4,2,7,-3,-10,-2,-10,9,6,-10,6,2,1,6,2,2,6,-9,-1,-8,7,-7,10,8,6,1,-7,1,-3,-2,6,-1,7,5,-6,-6,-5,-7,-8,3,5,9,-10,-2,9,6,-7,8,-10,-9,-6,-7,-9,-5,1,3,5,8,4,6,3,9,-2,-1,9,-7,6,-7,-8,1,2,5,-6,3,-4,-3,1,-8,-8,5,10,4,6,10,6,5,-5,-7,5,3,9,10,-10,4,7,7,9,-5,5,-9,5,2,4,3,9,3,-3,-9,1,-1,1,8,-1,7,8,-8,-9,5,2,-5,3,1,2,9,3,2,7,-6,-4,-4,-8,-7,5,-2,-9,7,6,-10,-8,-2,8,-7,-5,-5,5,-1,-4,-9,10,5,8,-5,-10,3,-3,-8,-8,-8,-7,3,-4,6,3,-8,-9,-4,5,-1,4,4,10,2,9,2,5,-10,10,-7,-1,5,8,-7,1,-9,-6,4,-4,-6,8,-9,-3,-2,-2,5,-3,-5,4,-5,2,9,4,-5,-2,1,7,3,-6,-3,3,6,-2,9,5,-10,6,6,-5,-8,10,-6,-9,8,-3,8,1,-4,-4,-9,-8,7,-8,-4,4,9,3,-10,4,10,1,5,-1,-4,-3,4,-2,5,-4,3,5,9,-5,2,8,-9,9,10,-3,5,-9,-9,-9,-3,5,8,-7,-8,7,4,-2,-6,-4,-3,3,7,6,-7,10,8,5,5,-3,4,5,-7,10,-9,10,-3,9,-6,-6,10,2,-1,-3,7,-9,8,-1,-10,8,5,-3,-10,-10,7,-1,2,-2,8,-9,-1,-10,-4,-4,9,-8,-10,5,-1,-8,3,-5,3,-7,-5,8,9,-7,-8,-9,-2,3,6,-4,5,7,-3,2,-2,-7,-9,2,-4,3,9,10,9,-3,-5,3,-1,9,-3,-10,-2,-1,-3,-1,2,-10,5,2,5,-8,4,-10,2,-9,-10,1,5,7,4,6,1,7,-3,-10,6,-9,-9,-5,8,-9,10,-2,-9,4,8,-9,5,-7,-5,-9,6,9,-6,-8,8,-3,-7,-5,6,10,-1,-3,3,7,8,8,3,-1,4,5,9,10,5,-2,9,4,-9,6,-8,1,-10,-10,-8,4,-2,-4,7,7,-1,2,9,10,7,-1,3,-1,-2,-6,5,2,8,-8,-2,-6,2,-5,-8,-10,-4,-9,4,10,4,8,-5,-7,-8,10,10,7,8,2,10,10,-2,1,-3,-3,6,-6,-4,5,-8,4,-5,-9,-4,8,2,9,10,-3,10,10,9,-6,1,-7,-10,-8,-3,-5,-7,-2,-2,-4,-1,-5,-4,5,-3,6,-4,-4,3,9,-8,-4,7,5,-9,2,-9,-8,-2,-6,-8,10,5,-8,5,-4,-10,-9,6,-8,6,-4,-9,-5,7,-7,-4,-7,-8,-5,10,7,2,9,-1,-3,-9,9,9,-10,-5,-1,3,-6,-3,-7,4,7,9,4,-4,-4,-3,-2,8,9,10,-4,10,-5,3,-7,5,5,-9,3,-5,8,-1,10,-2,-5,-9,-5,-9,1,4,10,-4,-5,-3,8,-5,-4,5,-6,-3,9,-7,2], dtype = "int64")#candidate|5922|(832,)|const|int64
bop_5923 = relay.multiply(bop_5905.astype('float64'), relay.reshape(const_5922.astype('float64'), relay.shape_of(bop_5905))) # shape=(832,)
bop_5926 = relay.multiply(bop_5908.astype('float64'), relay.reshape(const_5922.astype('float64'), relay.shape_of(bop_5908))) # shape=(832,)
func_4236_call = mod.get_global_var('func_4236')
func_4238_call = mutated_mod.get_global_var('func_4238')
call_5938 = relay.TupleGetItem(func_4236_call(), 1)
call_5939 = relay.TupleGetItem(func_4238_call(), 1)
output = relay.Tuple([call_5870,call_5879,const_5880,call_5884,call_5910,const_5911,var_5912,bop_5923,call_5938,])
output2 = relay.Tuple([call_5871,call_5881,const_5880,call_5885,call_5913,const_5911,var_5912,bop_5926,call_5939,])
func_5946 = relay.Function([var_5912,], output)
mod['func_5946'] = func_5946
mod = relay.transform.InferType()(mod)
var_5947 = relay.var("var_5947", dtype = "float32", shape = (546,))#candidate|5947|(546,)|var|float32
output = func_5946(var_5947)
func_5948 = relay.Function([var_5947], output)
mutated_mod['func_5948'] = func_5948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_5979 = relay.TupleGetItem(func_4140_call(), 0)
call_5980 = relay.TupleGetItem(func_4141_call(), 0)
func_310_call = mod.get_global_var('func_310')
func_312_call = mutated_mod.get_global_var('func_312')
const_5990 = relay.const([[-7.729870,-5.763542,-2.751000],[5.125909,1.853592,0.043643],[-7.396231,-8.797991,7.737819],[4.464998,-4.706148,-1.289879],[0.707625,4.891351,-4.567517],[5.128016,-9.024971,9.368788],[-0.194431,4.124181,-5.454244],[1.782759,-8.555700,6.874984],[9.531230,1.898477,0.963565],[-1.563684,8.073609,7.399019],[4.035640,-7.068503,-5.342937],[-2.527197,-8.237247,-0.929534],[6.889873,0.049478,4.672783],[2.690653,7.255562,8.279506],[-5.706157,-7.474524,9.058122],[7.982503,-7.170417,-6.123406],[0.153900,9.432243,2.366275],[-6.108860,-9.183567,-0.342886],[6.591987,-3.828346,-0.647596],[8.143385,-2.421141,-6.003729],[9.247120,-5.076755,2.618131],[-1.831090,2.781372,-8.116389],[-1.663036,0.711719,3.846239],[-5.405834,-0.156597,0.838232],[-5.462646,5.325375,-0.120631],[1.403974,-5.622177,-3.709463],[-9.933083,-6.780899,-2.893742],[-1.073653,-9.327360,9.233373],[7.463399,-0.723898,5.362065],[-4.668127,-7.115160,-2.482501],[8.207208,5.202017,6.365166],[1.061007,-2.229469,6.861569],[0.388228,4.325785,-7.677879],[5.203636,3.921604,0.568723],[1.198806,-6.278340,3.815551],[6.392533,-7.056220,-0.966053],[-9.243155,-9.456162,-5.158818],[0.852479,7.152583,7.889752],[-0.971968,-0.916555,-8.442194],[-9.139442,3.370357,3.172808],[1.445143,-7.145364,2.207364],[0.457492,-1.608943,5.434346],[1.919535,-1.391774,3.291333],[-8.260929,-2.881553,0.999624],[-4.821492,5.333000,3.236080],[3.811142,0.223983,-6.767250],[-5.838760,-7.641858,7.328186],[3.022535,-2.281362,-2.642327],[8.412758,0.515925,0.209686],[-3.318126,-0.559148,3.548842],[1.788838,-1.810262,-0.363010],[7.299264,-8.808679,-3.975888],[7.050898,8.586879,7.175108],[-8.428597,-8.688626,1.957051],[-6.159208,-8.407115,8.610975],[-8.813659,-4.915093,3.752312],[-3.158845,2.843993,-0.705411],[-9.036960,-7.649872,5.866422],[5.398482,-7.874120,-3.818127],[3.976317,-3.555973,7.743082],[-9.214760,-0.482312,8.115589],[3.113915,-5.789169,-1.529403],[-2.285411,9.580445,-8.815877],[9.907810,-6.255295,-2.858286],[3.222291,3.827209,9.277163],[4.625705,8.361202,-5.945452],[7.599646,-1.232786,-0.857955],[-9.168160,2.653837,3.728487],[-4.684211,-8.895617,2.957943],[5.030489,-8.688519,-8.139991],[-2.084490,3.904381,8.185263],[-7.269127,-5.900538,-6.621646],[4.002973,5.805455,-3.637714],[3.031688,9.536271,9.190610],[-1.727637,2.119520,-6.278212],[-2.943806,9.244856,-7.334580],[4.927362,4.619642,5.105820],[-4.748876,-4.966217,0.941591],[3.929809,-4.857227,-6.891223],[5.167173,-1.990753,-8.112843],[-4.849664,0.570906,-4.980783],[-3.784620,-7.568118,2.829799],[6.790750,6.843874,-6.253854],[7.606991,3.030127,-0.072778],[9.281746,-4.475592,0.715209],[-9.543900,0.839638,0.057216],[5.420293,6.243641,-9.172046],[7.957179,-5.223997,4.106254],[-9.018818,-2.082745,-6.994474],[5.882311,-3.248417,-8.521654],[-3.117773,7.629187,-3.524622],[-0.016928,-7.374118,-8.166482],[-2.267701,0.852216,-3.531093],[7.232559,2.166474,-8.587370],[6.629649,5.504255,9.815753],[3.893410,0.974778,2.795190],[0.545500,5.820825,7.535102],[-8.536994,-6.663678,-1.970172],[2.444276,8.044441,-4.232468],[-1.332203,1.350782,8.180838],[2.516433,5.641831,-7.582910],[6.089835,-2.973305,5.382893],[-9.416889,1.477192,9.564408],[1.094458,-2.816255,6.118140],[-4.288069,-6.754362,-2.144346],[-8.769504,-9.023534,-6.192043],[-0.339913,-5.689724,-8.865967],[-4.411842,-0.957117,9.709469],[2.892242,-2.632793,7.201886],[-3.817134,9.574224,-6.554280],[8.929989,-4.181135,-1.898470],[-6.628996,-1.812888,7.907838],[-2.462312,3.918842,3.486999],[8.917574,3.029189,-3.149772],[2.039228,-9.592816,5.178801],[-9.769094,6.570819,-4.317252],[3.782558,-8.436552,-6.487903],[7.442943,3.846059,0.547217],[2.930127,9.425860,-0.568594],[-4.315412,1.917258,-7.162394],[3.508494,6.131187,0.861129],[-7.607022,-4.290039,-5.757846],[-0.312555,7.419747,-5.939619],[-6.620581,9.231358,-0.776268],[-1.145918,-5.597889,5.872580],[-5.775032,4.370106,1.672646],[-5.538853,-1.802779,-3.201402],[2.539930,-5.563017,-5.543590],[5.898053,-4.066461,2.344298],[-8.309682,8.321132,8.709772],[0.980440,1.072756,1.375903],[-7.935607,-9.571191,-5.048501],[2.427978,3.757610,-9.551342],[9.463313,7.946205,0.191525],[-3.931762,-8.693100,-2.618619],[5.449289,8.641699,-0.477430],[0.236615,-6.008242,9.710476],[7.112682,-4.940811,-7.468308],[-1.439133,-2.263009,-1.085303],[-8.622175,4.814712,-8.794273],[-7.411381,-4.511847,4.664630],[-7.843926,9.462195,-3.983196],[0.830400,9.787623,6.433492],[3.133040,2.830338,7.347035],[1.063775,2.339999,-4.438630],[-4.274205,7.292421,-2.663541],[2.271305,6.150996,-6.125160],[-6.371833,8.797575,8.148365],[5.390359,6.717806,0.778691],[-1.997571,-4.134781,9.859286],[-7.337459,-3.372652,-6.797733],[-1.286106,4.889201,-8.453355],[4.779153,-5.085159,4.977887],[9.968417,-8.073763,5.936026],[8.299142,-4.756362,3.521253],[-9.223736,9.892047,1.900664],[-2.121591,1.218727,-4.262410],[4.663951,-6.627963,-4.646378],[2.267641,0.519307,-0.353577],[2.677681,-2.248076,-5.404054],[-3.679656,3.584477,1.971948],[3.190602,-4.355698,4.702831],[4.207373,0.988304,-4.066937],[5.547276,3.653463,8.794053],[4.278377,-4.612783,-0.425378],[-0.035015,0.594024,-4.905170],[-7.793038,-2.042945,9.529363],[5.717136,-3.825530,-0.116228],[8.661108,7.275507,-1.030435],[-2.760023,2.288588,-7.819445],[5.229379,-2.598123,-3.058741],[5.671933,7.970125,-6.994087],[-0.182726,8.841205,-0.685904],[5.740737,8.783701,-5.027148],[-6.471247,9.043734,3.924864],[7.489819,-2.726519,-6.950266],[6.101812,-5.354577,9.636576],[3.276558,-5.654149,5.714821],[-2.976441,-2.574196,5.255449],[-4.494389,-6.725448,4.017435],[6.003250,-4.268763,3.563115],[-0.210511,8.924023,5.069301],[3.050547,-0.638362,2.349438],[-0.182457,-2.447085,9.195935],[-2.885280,7.929703,1.332113],[-6.718333,-4.399247,9.971927],[2.082379,-6.356129,-0.266005],[-2.219965,-6.411238,4.797720],[-6.305945,3.083893,0.292197],[-7.994726,-9.851455,-1.055259],[-9.981267,-8.087079,5.652993],[-8.328994,-9.967212,8.581920],[-9.316030,-6.059102,-1.898494],[-9.656032,-1.203031,-6.988640],[-8.516744,0.455773,-4.879680],[5.727662,-6.243559,7.065710],[2.593613,9.522010,-8.800816],[-4.776606,-2.162244,2.026983],[-5.997882,0.175678,-6.980744],[-9.435894,-2.277313,8.492269],[4.886831,6.262871,7.872599],[-0.115752,6.470850,-7.100730],[-5.992484,-3.422663,5.089054],[-1.843004,-3.634378,-3.912306],[0.408127,5.093286,-0.982842],[-2.207870,5.909559,-2.765157],[2.202668,8.031767,-7.292632],[-0.750566,-6.741231,6.259401],[5.886640,-3.402876,8.260605],[-5.100784,0.753216,-5.732789],[-8.892377,-1.674336,-5.843778],[-6.519354,6.413329,-3.286326],[3.755472,-7.129952,-7.542735],[-7.082121,1.024622,2.318849],[3.537103,1.318807,2.214534],[1.439031,3.489884,-3.344908],[-4.409696,7.086341,-9.514664],[0.096528,-9.234148,-7.689460],[3.231019,-6.987033,3.488765],[0.065934,0.870562,4.924547],[-4.651389,5.660617,-5.190864],[0.465652,-7.272459,-5.111794],[5.849389,5.058618,-8.308965],[-6.032384,-3.577019,-6.686446],[-1.843157,-1.125044,9.805078],[-4.464551,-0.305353,7.079351],[4.568498,1.343205,6.833029],[7.357648,7.008602,-6.288150],[-6.757026,1.935704,-8.687486],[-9.027826,5.823893,-9.981610],[-9.542589,-3.959240,-0.288088],[-7.283534,0.801325,-4.010604],[6.213288,7.641970,-2.914153],[-7.781314,-1.090823,7.312251],[-8.163144,6.051839,-3.813327],[-6.211004,-9.018431,-4.466764],[-4.416459,9.951966,-4.457279],[-2.719487,4.874684,4.722921],[8.587928,-3.226523,2.540587],[-0.052305,6.951593,-5.200289],[-0.943775,-3.756574,0.253722],[9.365331,8.458768,5.586219],[-9.628252,-6.766466,9.266628],[9.510818,4.369392,-3.599150],[7.119239,-5.310517,-2.432340],[9.614494,9.083744,-0.254528],[-0.720795,-1.418031,-9.249656],[0.213806,6.977291,-3.575844],[1.892809,-5.510889,5.832449],[-3.367567,2.241818,1.487446],[4.819357,-0.258162,-6.677807],[7.632202,0.664315,5.783507],[-6.073413,-6.797613,-5.430774],[-8.634677,0.789432,-4.558468],[-6.204672,1.003245,-2.785596],[5.326553,3.316409,-0.163478],[-9.449102,-5.302506,-3.863753],[4.936685,1.148419,-8.892821],[-5.127785,4.555944,6.880700],[-8.980801,-2.779078,-8.496840],[-8.664180,-2.331717,6.861133],[-1.289043,8.802644,6.810527],[-8.405966,-4.324386,5.902088],[6.616328,4.233820,1.979997],[-4.394679,-5.043489,0.618373],[4.493511,9.141601,-3.268803],[3.501440,-0.502089,4.819803],[-5.629258,8.452903,8.310527],[7.189738,-2.149363,-2.900571],[-0.699853,-9.407091,7.008001],[4.818918,6.267413,2.245276],[1.503899,-8.592693,5.124380],[-2.026478,2.178695,-0.478923],[-9.888805,1.276065,-1.787331],[-4.589889,0.516269,-5.541422],[-7.082877,3.333840,-2.869239],[6.175405,3.912921,1.977760],[-6.378660,-6.669737,6.540674],[-5.791303,9.690930,0.578925],[9.311383,-3.304306,-7.762779],[-8.956989,-2.917201,-8.388650],[-3.036839,-9.323897,-2.104389],[-5.091904,4.466538,-6.480032],[7.544095,-4.153973,7.273763],[-0.940728,3.731688,8.708661],[4.463872,1.944256,6.823305],[-1.142899,6.912778,-1.587440],[4.541940,-9.485805,1.569850],[8.781682,-1.258704,8.846446],[7.478643,-9.680264,-6.335100],[-9.069224,3.959412,4.606865],[-9.219676,-1.251311,8.045423],[1.220768,3.784656,6.904404],[-7.607996,9.754904,3.993439],[-3.651071,3.022065,0.543171],[-7.578370,7.530545,0.803968],[9.667473,8.189116,-0.372434],[-4.889278,1.184208,9.559207],[-1.028783,9.093138,-6.070686],[7.979074,-1.332263,-7.768196],[-0.993677,0.212451,-8.543860],[3.456045,-3.379729,-0.771815],[1.345336,-4.571802,-9.853326],[9.192253,-1.927744,2.860507],[1.281906,4.288596,7.265795],[-1.495115,4.225086,2.523539],[-9.916121,6.197038,4.948134],[0.504539,-3.189570,7.797721],[-7.236927,1.494865,-3.892334],[7.513300,3.270725,2.859357],[-3.384959,7.994839,8.569771],[-2.973721,7.581487,6.893295],[6.484608,8.548264,-9.805951],[-4.592761,3.215764,7.984452],[-8.057418,-3.937029,-1.758781],[-0.025024,0.925067,-2.675779],[3.036277,-8.421922,-7.567470],[8.247290,0.712222,4.600530],[-7.282527,-6.151394,0.804799],[2.160057,-7.730132,-3.210131],[0.464517,-6.261241,-4.821326],[2.121463,2.607226,-4.300577],[4.698356,5.916429,-6.373832],[3.409648,-1.676112,-3.837399],[8.605625,-4.380410,2.647737],[-4.790260,7.167813,9.965317],[5.362253,5.982795,8.855225],[-2.178518,-8.865543,8.247050],[-1.719329,4.767771,-6.065368],[2.315819,1.097388,2.074035],[-0.987052,6.680440,-1.925182],[6.662270,6.427364,-6.617232],[-7.682586,-9.902174,-8.565779],[9.366318,-9.008820,-9.360019],[-0.617888,-1.741799,6.812113],[2.005667,-2.588991,4.127589],[8.874605,-2.001348,-2.291142],[2.059844,-4.744266,8.953372],[6.347777,5.843956,1.214187],[-0.788254,1.498302,8.729063],[5.211515,-6.959431,9.153073],[-2.003058,-6.033852,4.080311],[-4.026652,5.785025,-9.198426],[8.139249,9.050770,1.586496],[-6.430153,9.639684,0.999371],[-1.073367,1.116963,-0.179223],[5.416175,2.217078,3.590744],[-9.500275,-8.320016,-5.920869],[-6.918209,-6.220020,3.067347],[-6.513234,-9.055879,0.917426],[-6.200678,-9.721918,6.315885],[-0.654016,8.154134,-6.129364],[-4.929754,-8.349414,4.344515],[-7.975579,0.372588,1.905814],[-3.114884,-9.101456,0.529258],[-5.300646,-2.819270,6.725994],[4.495187,-7.219402,-2.428943],[-0.438547,2.912333,0.720953],[5.260399,-5.208741,-0.211953],[3.445016,5.206545,0.850111],[-4.779410,-7.943278,-6.653543],[-9.007572,0.670785,4.316408],[9.314913,-6.707535,-9.422101],[9.301631,0.203355,-3.645503],[-9.066687,1.933285,-9.901501],[-7.494975,-4.183078,0.200076],[2.882571,0.397887,-4.855219],[-7.766377,-3.940420,-0.406404],[-2.153173,-7.754298,4.490684],[5.119241,7.070108,8.614984],[-3.350246,-6.167351,-6.595614],[6.548577,3.071231,-5.566724],[8.791047,2.717564,9.543356],[8.800866,-9.324204,-9.663475],[-0.017559,7.551903,-5.339086],[8.810615,-4.182152,0.932717],[0.138648,-8.265079,6.181491],[-7.714526,4.990487,-3.619081],[2.336207,-6.051147,-7.533438],[5.940588,6.587658,-2.413054],[4.641458,-3.576029,3.918631],[-8.890643,-1.173358,8.809270],[4.600779,0.349733,5.805128],[-4.938479,8.214398,-1.995095],[7.633475,-4.615633,-5.106714],[-7.705402,7.778942,-7.957341],[-2.491204,7.284184,4.103457],[8.630663,6.016938,-9.705160],[-7.721060,3.036728,9.860012],[8.807862,-3.427795,1.681357]], dtype = "float32")#candidate|5990|(390, 3)|const|float32
call_5989 = func_310_call(relay.reshape(const_5990.astype('float32'), [6, 15, 13]))
call_5991 = func_310_call(relay.reshape(const_5990.astype('float32'), [6, 15, 13]))
func_3891_call = mod.get_global_var('func_3891')
func_3893_call = mutated_mod.get_global_var('func_3893')
var_5996 = relay.var("var_5996", dtype = "int32", shape = (440,))#candidate|5996|(440,)|var|int32
call_5995 = relay.TupleGetItem(func_3891_call(relay.reshape(var_5996.astype('int32'), [10, 11, 4])), 0)
call_5997 = relay.TupleGetItem(func_3893_call(relay.reshape(var_5996.astype('int32'), [10, 11, 4])), 0)
func_1893_call = mod.get_global_var('func_1893')
func_1896_call = mutated_mod.get_global_var('func_1896')
var_6003 = relay.var("var_6003", dtype = "int32", shape = (1, 390))#candidate|6003|(1, 390)|var|int32
call_6002 = relay.TupleGetItem(func_1893_call(relay.reshape(var_6003.astype('int32'), [13, 10, 3])), 0)
call_6004 = relay.TupleGetItem(func_1896_call(relay.reshape(var_6003.astype('int32'), [13, 10, 3])), 0)
uop_6007 = relay.log10(call_5989.astype('float32')) # shape=(6, 15, 13)
uop_6009 = relay.log10(call_5991.astype('float32')) # shape=(6, 15, 13)
uop_6012 = relay.acosh(uop_6007.astype('float32')) # shape=(6, 15, 13)
uop_6014 = relay.acosh(uop_6009.astype('float32')) # shape=(6, 15, 13)
func_5287_call = mod.get_global_var('func_5287')
func_5289_call = mutated_mod.get_global_var('func_5289')
call_6018 = relay.TupleGetItem(func_5287_call(), 0)
call_6019 = relay.TupleGetItem(func_5289_call(), 0)
func_5063_call = mod.get_global_var('func_5063')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_6021 = func_5063_call()
call_6022 = func_5063_call()
bop_6027 = relay.floor_mod(uop_6012.astype('float64'), relay.reshape(call_5989.astype('float64'), relay.shape_of(uop_6012))) # shape=(6, 15, 13)
bop_6030 = relay.floor_mod(uop_6014.astype('float64'), relay.reshape(call_5991.astype('float64'), relay.shape_of(uop_6014))) # shape=(6, 15, 13)
func_4441_call = mod.get_global_var('func_4441')
func_4445_call = mutated_mod.get_global_var('func_4445')
var_6032 = relay.var("var_6032", dtype = "uint32", shape = (2, 720))#candidate|6032|(2, 720)|var|uint32
call_6031 = relay.TupleGetItem(func_4441_call(relay.reshape(var_6032.astype('uint32'), [12, 12, 10]), relay.reshape(var_6032.astype('uint32'), [12, 12, 10]), ), 0)
call_6033 = relay.TupleGetItem(func_4445_call(relay.reshape(var_6032.astype('uint32'), [12, 12, 10]), relay.reshape(var_6032.astype('uint32'), [12, 12, 10]), ), 0)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_6036 = relay.TupleGetItem(func_4140_call(), 0)
call_6037 = relay.TupleGetItem(func_4141_call(), 0)
func_3891_call = mod.get_global_var('func_3891')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_6040 = relay.TupleGetItem(func_3891_call(relay.reshape(var_5996.astype('int32'), [10, 11, 4])), 0)
call_6041 = relay.TupleGetItem(func_3893_call(relay.reshape(var_5996.astype('int32'), [10, 11, 4])), 0)
func_653_call = mod.get_global_var('func_653')
func_657_call = mutated_mod.get_global_var('func_657')
var_6044 = relay.var("var_6044", dtype = "uint16", shape = (462, 1))#candidate|6044|(462, 1)|var|uint16
call_6043 = relay.TupleGetItem(func_653_call(relay.reshape(var_6044.astype('uint16'), [6, 11, 7]), relay.reshape(var_6044.astype('uint16'), [6, 11, 7]), relay.reshape(uop_6007.astype('float32'), [1170, 1]), ), 1)
call_6045 = relay.TupleGetItem(func_657_call(relay.reshape(var_6044.astype('uint16'), [6, 11, 7]), relay.reshape(var_6044.astype('uint16'), [6, 11, 7]), relay.reshape(uop_6007.astype('float32'), [1170, 1]), ), 1)
func_4722_call = mod.get_global_var('func_4722')
func_4724_call = mutated_mod.get_global_var('func_4724')
call_6052 = relay.TupleGetItem(func_4722_call(), 0)
call_6053 = relay.TupleGetItem(func_4724_call(), 0)
const_6062 = relay.const([[[-9.089472,0.907249,-3.273372,-7.535209,-8.973682,9.290430,8.186438,3.938913,-6.831539,4.127076,-8.646293,-4.351198,-8.090585],[6.885089,-4.194701,9.123123,-7.660177,4.123223,-5.417364,9.992677,4.035007,-1.458053,-2.755916,5.995553,5.094427,-3.187604],[-5.977174,5.415151,0.322735,7.327656,7.655823,-4.386976,5.766326,-8.661273,5.731797,-7.935300,-7.603601,3.080932,-6.979831],[-1.303711,-3.755754,-3.365284,8.409771,7.719455,-3.396511,0.907277,4.873583,7.447022,7.069728,-5.632228,6.886322,-1.193453],[8.783497,8.462766,-0.593638,9.948661,-4.073408,2.130829,6.777860,3.291203,7.564862,-4.843400,-8.094181,0.090357,7.013558],[1.182124,9.634591,6.305207,2.875358,-8.847232,-8.776945,-2.651621,6.065394,-1.216417,-7.162720,-4.935265,-9.452643,-0.161976],[8.602225,5.337068,2.986483,8.307389,-1.269790,4.759526,7.416373,2.152271,6.340877,1.128831,-1.025757,-5.769139,0.418420],[-5.302238,7.635600,-1.329399,3.766602,0.349257,-1.273997,8.693638,3.393644,4.218315,-1.946045,-9.326819,-6.053248,7.574041],[-1.145262,-8.905443,-5.522859,8.579367,4.426713,-2.967498,7.352816,-0.495196,4.848347,-9.841532,-4.425356,9.421080,7.059926],[4.142043,3.528689,-0.713375,-8.917948,9.442582,5.482305,-5.935474,1.922792,8.528863,-9.561169,-8.201737,7.531074,2.414843],[-5.454897,0.716763,-7.564553,-5.449922,9.133606,3.997927,0.586508,-0.014177,-5.499588,3.126371,-0.705758,-9.028830,-3.412231],[-7.503606,-2.263837,-0.431905,-8.860148,-0.944396,-4.857714,9.503882,9.466172,0.171259,2.405788,0.124560,-7.401889,1.089049],[-4.177246,7.199947,5.074484,-6.288809,0.355988,-4.386012,-0.945270,4.121718,3.412010,-7.519666,3.940100,6.938060,-0.242447],[-0.279804,-8.195892,8.639859,-3.326634,7.885524,-9.360046,7.423629,-7.988044,6.520086,-8.007047,8.491257,5.928000,-3.128074],[6.762968,-2.172025,-7.406318,-2.823693,-3.167471,2.036552,6.043732,-6.531434,4.056838,2.038008,-9.916213,-6.306822,5.422014]],[[-4.273582,-1.649274,-4.193165,7.113800,5.463043,2.844922,-9.519441,9.710362,-0.665033,-5.542624,-7.727856,-7.663125,-4.004492],[-2.263644,1.783509,-7.289219,1.244673,-6.400434,1.655884,-8.343107,-7.306349,-8.964002,1.636575,-2.125553,-6.176211,9.015060],[-1.653647,8.034192,-4.083531,-4.205230,4.000060,8.258560,1.415461,-5.395781,0.279637,0.023265,1.754163,-1.926601,6.838496],[-3.487748,-9.432199,-7.170657,-2.935659,6.764914,5.582948,-2.886681,-3.874727,7.036544,-1.999402,-3.306984,-3.474192,7.935684],[-1.826826,1.744700,-8.415451,0.420622,3.968898,-4.028897,8.960350,-7.622566,5.668644,-9.249695,-0.712176,7.463333,4.542569],[4.100910,3.791706,4.363624,-9.389562,7.481592,5.721383,4.075861,-9.283802,-2.612681,0.097999,-1.644243,5.048358,6.075588],[2.401674,-7.999622,-9.349847,-8.471454,-7.793012,7.531953,-3.340313,-8.192677,-4.912368,-7.937083,8.443749,-5.468508,6.428231],[7.687863,7.274228,9.066600,2.335997,-5.480952,5.903896,2.704292,-0.474193,-5.995881,8.550823,-9.948440,0.445106,-0.818931],[3.420933,3.137177,2.904388,-3.219202,3.080506,2.551822,7.112924,4.313369,6.501729,1.203164,1.021789,-3.252212,-2.155295],[-3.952319,-1.778451,-0.793699,-8.175918,-2.089250,-2.430262,-7.270083,-4.656720,-5.123696,6.545389,-9.441629,-8.649232,5.534603],[-5.168019,-5.287167,-8.781099,-3.831491,9.776982,4.333793,-2.757570,4.572613,-3.203801,3.454535,-9.724799,-5.432555,8.145235],[-8.808815,-4.772438,9.273108,2.548578,5.177299,8.538791,-5.124104,-1.780994,-1.577283,-8.233291,7.629932,0.962148,8.146497],[-9.905677,-9.969712,6.644967,3.566179,-4.748228,-4.361775,-3.826258,8.142897,2.654633,-0.824316,0.721288,-2.070562,8.434642],[-6.230447,-8.943366,-4.220590,-5.175682,-0.895514,6.737848,2.273527,0.571148,2.307579,-3.737513,4.216467,9.993270,3.402198],[-0.872682,-3.059447,-2.424919,-5.301688,-2.769333,2.566188,7.454654,-1.161370,-1.818989,-3.933892,6.630749,9.947522,6.180066]],[[0.510697,9.531922,4.385708,9.676538,1.979318,6.349236,-9.787121,-2.923062,-0.115184,-1.647760,-4.697530,-3.672606,-4.927889],[-8.692503,1.956703,-4.579853,-9.176397,-9.367374,1.609440,8.486447,6.686909,-5.328535,4.781892,0.074120,2.450788,-5.299220],[-7.100409,-3.803518,3.076528,1.715014,-3.759781,5.446240,2.522128,0.031288,7.637815,6.401972,8.873382,0.980065,-7.130855],[-2.456722,-2.391116,5.441076,1.814699,2.133618,-5.156965,-0.658100,-7.304099,-5.055661,1.874907,-6.408411,-2.045568,4.972634],[7.666172,-0.778990,2.485473,8.297646,-7.596875,4.298943,0.157870,-6.015432,5.243161,-2.686473,-0.824079,9.602525,-7.305770],[7.979928,4.974478,-9.683462,1.111616,-2.410067,1.654698,-6.855096,-3.328638,-7.952931,-4.877661,1.219090,8.702097,6.022484],[-6.130659,1.964184,-3.925326,-2.789895,2.723061,-0.306495,7.523106,8.163688,7.330562,-8.695052,3.045001,7.952252,7.178673],[3.944798,-8.111378,6.297917,8.619938,-8.199892,1.077225,0.343820,4.253288,2.073297,-3.220678,-0.709645,-9.677716,8.223767],[6.806426,1.517223,-6.967752,5.057549,4.492211,0.077766,0.625931,-8.948392,-1.888989,2.332603,9.566958,7.693957,8.415776],[5.484722,-7.650920,-2.487382,9.315601,0.930863,-7.869312,6.266367,0.261446,7.049633,-9.905681,1.711055,8.822157,-1.224039],[3.615831,9.285172,2.091363,-2.358767,1.816347,5.440724,-1.540225,-0.377358,8.674913,-4.439776,4.128457,7.477644,5.868522],[-8.765570,4.071073,6.045526,-1.110952,-1.116181,-2.843413,-8.857713,6.723982,-5.454957,-1.727364,-9.084736,-4.170972,-6.184355],[-1.611977,0.589842,-4.081885,5.550915,9.673042,-6.680078,6.975795,0.306161,7.224545,5.535123,-2.538053,-6.021409,2.259171],[-6.236036,3.177149,6.286935,9.999101,5.388570,-7.583355,2.116703,0.368788,-9.470955,-3.628474,-2.999869,0.889537,-7.084464],[-7.481937,-2.327271,-1.404298,9.838700,0.526804,3.714499,-6.673109,-5.745584,0.745512,-0.707435,2.908401,7.557576,-4.809867]],[[8.151732,-8.740129,5.441766,-4.157808,-3.718634,1.326307,-0.642948,-4.057835,2.492342,-0.557007,0.832179,1.185048,-4.622793],[-6.931616,4.107970,-4.574107,-0.812672,-6.069458,8.046090,2.505384,4.845015,1.669802,3.885213,-4.150181,-8.797741,-0.142887],[-3.471910,4.573212,-3.944388,9.367625,6.933205,-0.400231,-9.091513,1.031307,3.009576,7.307904,1.218699,-2.632221,-8.691100],[6.773461,6.559608,-6.094508,-9.171508,7.162301,-7.630951,-0.659562,-6.192550,2.177587,6.262857,-6.462764,-2.763329,-9.635064],[-5.711202,-0.761538,0.800546,-3.033289,-4.767000,-3.230716,-5.891084,2.776170,-2.006637,-2.089138,8.035020,4.860744,9.157866],[0.921644,2.570462,3.860191,7.693294,-8.727470,-9.980048,5.130518,-3.718576,8.377267,5.293689,8.968746,-4.845318,-0.501933],[3.889646,-7.510861,9.437897,-7.241089,5.973856,7.865952,-9.296421,6.387168,-4.547795,5.596145,2.457522,2.690356,7.333110],[-9.531237,5.968130,4.527382,4.635764,6.745064,-2.802503,8.922949,9.617356,-1.871534,6.478520,-6.808556,-4.716381,-1.429795],[-8.782171,2.495640,-7.220540,7.197313,-9.299974,-0.693406,9.672562,7.019759,-7.537985,1.463799,4.002041,1.257354,-0.488129],[-7.764694,0.822543,-9.837292,-8.080507,4.619210,5.235337,-9.548412,-7.166756,5.250564,-7.653119,5.275947,-5.596319,2.187532],[-5.655316,-6.379297,-9.185650,4.986203,1.339957,-7.860008,1.497299,-3.584916,-8.964744,4.890095,2.258336,-8.705262,2.374890],[-9.250628,6.144155,6.916475,-4.713716,-9.065569,-7.530388,-2.172925,6.895599,2.190148,2.630126,6.557383,9.349054,-8.893397],[-0.590979,-8.563516,-2.886535,5.726529,-7.827424,2.051309,-6.860962,-7.252195,1.957674,-7.152688,5.952846,-1.867469,6.567472],[-5.465999,-9.787027,5.060810,-2.153681,-7.460241,5.342866,-9.774999,-8.427563,-0.224406,1.933098,3.554049,-6.558666,7.280336],[3.393999,-3.531585,7.683884,3.610798,3.039279,-9.978010,2.139313,-5.194525,-8.462081,-5.931023,-8.372603,5.795687,3.704797]],[[-8.549611,-2.183391,7.433997,6.296950,-1.828516,1.834849,-4.972196,4.578629,-1.317922,8.499668,6.787491,4.421255,-4.389190],[-2.560312,3.949996,-2.174386,9.048423,3.252455,6.302961,-5.985154,2.922395,7.665834,-4.052847,1.003404,7.718147,5.226457],[-0.755637,3.100863,-3.424969,2.685851,4.583859,-3.094263,-7.149952,-0.697346,-2.963624,-3.420916,-7.304498,-7.201470,-6.556111],[7.303385,-9.809470,-1.520591,6.191960,-2.621085,3.582312,4.694702,6.866623,-5.821066,5.389915,7.046791,2.422714,9.545024],[-2.255277,3.753038,7.823726,-7.679085,5.222420,2.046237,-9.179286,4.876445,6.092011,1.081171,-5.395118,-1.115988,-6.180338],[2.065290,5.603469,4.731572,-6.550593,-2.043040,3.083084,-5.437851,8.526218,0.491398,7.917165,-9.260347,7.953728,9.639164],[7.254019,0.230540,-0.745400,3.809408,4.034159,8.133081,4.607754,-3.207179,-3.204611,-3.598713,-8.664056,-6.599915,-1.800071],[-2.704834,-0.167586,6.158971,2.708048,7.337122,4.286595,-7.486934,9.691464,2.553831,8.976183,2.706730,-1.550789,-8.346170],[6.378869,-8.975045,6.472767,0.196883,-0.385148,3.305905,7.644782,8.659731,9.093876,8.956208,1.679374,-7.810320,-0.158482],[2.587713,9.827892,1.006441,-9.730631,-1.771177,-5.647638,8.681832,-8.989546,1.117694,8.084126,-2.106159,-0.019089,1.425183],[-8.563468,-2.768389,6.494065,6.435579,7.922997,6.517819,-1.820957,4.899577,2.042086,-6.335513,8.561759,1.847642,-2.046307],[-1.352313,1.433480,5.586166,9.389774,4.321255,8.332273,6.982463,5.014725,-8.048399,-3.003151,7.507982,-0.696884,8.148472],[3.123108,-4.560416,-8.047419,-3.082202,-7.154801,-6.160581,4.099155,-6.433236,-7.007788,-2.230589,-9.725233,-9.780123,-0.350629],[-6.554176,3.207882,3.521530,-9.311866,-3.228343,-2.574364,-9.165982,-5.284051,-7.521601,-3.934165,-0.230605,-6.042748,1.535724],[9.225900,9.017675,3.340596,-8.884488,5.676220,9.849454,4.105506,-0.134080,-7.489166,-1.537057,2.476829,-4.528388,9.191929]],[[0.524252,2.506091,-9.270621,-3.148266,0.133952,4.603248,-0.250438,7.572558,-6.101794,6.596415,-8.888232,-0.235690,5.151521],[5.924778,9.786646,-4.741129,-5.190355,2.387816,7.192679,-7.684813,8.282073,-1.316221,-5.656004,2.799594,3.769555,1.867100],[-2.290805,-1.591552,-4.584852,-0.214549,4.991032,-1.363201,-7.053953,-5.487751,2.557630,-2.397188,1.250181,-6.330212,-6.460261],[-0.677881,-1.562163,7.162425,7.945056,-2.268613,3.423836,-8.284429,-5.235516,-9.167638,-3.022281,-3.416291,8.878983,7.042190],[6.671593,-9.617348,3.732704,5.055377,5.650317,0.676473,4.064075,-3.157480,-8.426697,9.707260,2.495723,1.760897,-6.313156],[2.437360,8.650967,-5.372865,-7.908435,-1.891429,-9.174641,0.852220,3.949732,-5.730259,7.501918,7.669169,8.444517,-2.953361],[7.135959,6.859441,6.448960,0.065867,2.152953,1.860070,5.900707,2.858115,-6.641885,2.811323,7.158219,-3.128115,-1.100718],[-5.337439,-4.850331,-8.641451,5.175921,9.612881,-0.462684,0.115300,4.190930,5.813929,-4.062698,-8.878196,8.075589,-1.963383],[1.567201,0.031151,4.883574,-6.216215,-5.364850,8.634970,-5.198977,-9.469361,2.844541,-8.887136,4.716954,3.178242,-2.537267],[-7.617537,7.312133,7.928494,9.076380,-7.886999,-6.312011,-6.022519,0.128118,-2.819971,-5.874806,-7.326835,-3.029996,-5.957405],[-3.613854,-0.245440,8.874799,6.485965,6.859415,-8.468836,9.933929,4.647799,0.876407,4.684707,1.568093,-0.391471,-7.287208],[-8.078163,6.586991,-5.061185,-7.366333,-1.019987,1.518571,7.558885,-5.058282,0.114289,-1.946972,-0.923665,-4.977978,8.970427],[9.781013,-7.103094,-5.161802,7.146916,5.925911,-3.319295,-0.971678,-8.436529,-1.501791,-5.920199,2.780772,-6.225921,9.028871],[3.162719,-2.808440,1.117304,-8.972954,-1.267990,-1.495709,-1.551717,4.790951,-9.317448,4.736881,-0.501804,-4.148195,5.193662],[-8.500956,9.191574,-0.157831,-0.433159,8.482773,-0.867562,8.682021,6.828496,-5.306564,0.328344,-7.072748,4.961933,-5.407879]]], dtype = "float64")#candidate|6062|(6, 15, 13)|const|float64
bop_6063 = relay.mod(bop_6027.astype('float64'), relay.reshape(const_6062.astype('float64'), relay.shape_of(bop_6027))) # shape=(6, 15, 13)
bop_6066 = relay.mod(bop_6030.astype('float64'), relay.reshape(const_6062.astype('float64'), relay.shape_of(bop_6030))) # shape=(6, 15, 13)
output = relay.Tuple([call_5979,const_5990,call_5995,var_5996,call_6002,var_6003,call_6018,call_6021,call_6031,var_6032,call_6036,call_6040,call_6043,var_6044,call_6052,bop_6063,])
output2 = relay.Tuple([call_5980,const_5990,call_5997,var_5996,call_6004,var_6003,call_6019,call_6022,call_6033,var_6032,call_6037,call_6041,call_6045,var_6044,call_6053,bop_6066,])
func_6068 = relay.Function([var_5996,var_6003,var_6032,var_6044,], output)
mod['func_6068'] = func_6068
mod = relay.transform.InferType()(mod)
mutated_mod['func_6068'] = func_6068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6068_call = mutated_mod.get_global_var('func_6068')
var_6070 = relay.var("var_6070", dtype = "int32", shape = (440,))#candidate|6070|(440,)|var|int32
var_6071 = relay.var("var_6071", dtype = "int32", shape = (1, 390))#candidate|6071|(1, 390)|var|int32
var_6072 = relay.var("var_6072", dtype = "uint32", shape = (2, 720))#candidate|6072|(2, 720)|var|uint32
var_6073 = relay.var("var_6073", dtype = "uint16", shape = (462, 1))#candidate|6073|(462, 1)|var|uint16
call_6069 = func_6068_call(var_6070,var_6071,var_6072,var_6073,)
output = call_6069
func_6074 = relay.Function([var_6070,var_6071,var_6072,var_6073,], output)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6089 = relay.var("var_6089", dtype = "float32", shape = (7, 14, 15))#candidate|6089|(7, 14, 15)|var|float32
uop_6090 = relay.log10(var_6089.astype('float32')) # shape=(7, 14, 15)
func_494_call = mod.get_global_var('func_494')
func_500_call = mutated_mod.get_global_var('func_500')
const_6098 = relay.const(9.838687, dtype = "float32")#candidate|6098|()|const|float32
var_6099 = relay.var("var_6099", dtype = "float32", shape = (18, 6))#candidate|6099|(18, 6)|var|float32
var_6100 = relay.var("var_6100", dtype = "float32", shape = (1170,))#candidate|6100|(1170,)|var|float32
var_6101 = relay.var("var_6101", dtype = "uint16", shape = (1, 832))#candidate|6101|(1, 832)|var|uint16
call_6097 = relay.TupleGetItem(func_494_call(relay.reshape(const_6098.astype('float32'), []), relay.reshape(var_6099.astype('float32'), [6, 6, 3]), relay.reshape(var_6100.astype('float32'), [390, 3]), relay.reshape(var_6101.astype('uint16'), [832,]), ), 0)
call_6102 = relay.TupleGetItem(func_500_call(relay.reshape(const_6098.astype('float32'), []), relay.reshape(var_6099.astype('float32'), [6, 6, 3]), relay.reshape(var_6100.astype('float32'), [390, 3]), relay.reshape(var_6101.astype('uint16'), [832,]), ), 0)
uop_6105 = relay.rsqrt(uop_6090.astype('float64')) # shape=(7, 14, 15)
output = relay.Tuple([call_6097,const_6098,var_6099,var_6100,var_6101,uop_6105,])
output2 = relay.Tuple([call_6102,const_6098,var_6099,var_6100,var_6101,uop_6105,])
func_6128 = relay.Function([var_6089,var_6099,var_6100,var_6101,], output)
mod['func_6128'] = func_6128
mod = relay.transform.InferType()(mod)
mutated_mod['func_6128'] = func_6128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6128_call = mutated_mod.get_global_var('func_6128')
var_6130 = relay.var("var_6130", dtype = "float32", shape = (7, 14, 15))#candidate|6130|(7, 14, 15)|var|float32
var_6131 = relay.var("var_6131", dtype = "float32", shape = (18, 6))#candidate|6131|(18, 6)|var|float32
var_6132 = relay.var("var_6132", dtype = "float32", shape = (1170,))#candidate|6132|(1170,)|var|float32
var_6133 = relay.var("var_6133", dtype = "uint16", shape = (1, 832))#candidate|6133|(1, 832)|var|uint16
call_6129 = func_6128_call(var_6130,var_6131,var_6132,var_6133,)
output = call_6129
func_6134 = relay.Function([var_6130,var_6131,var_6132,var_6133,], output)
mutated_mod['func_6134'] = func_6134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4810_call = mod.get_global_var('func_4810')
func_4811_call = mutated_mod.get_global_var('func_4811')
call_6163 = relay.TupleGetItem(func_4810_call(), 0)
call_6164 = relay.TupleGetItem(func_4811_call(), 0)
func_4810_call = mod.get_global_var('func_4810')
func_4811_call = mutated_mod.get_global_var('func_4811')
call_6166 = relay.TupleGetItem(func_4810_call(), 0)
call_6167 = relay.TupleGetItem(func_4811_call(), 0)
func_3891_call = mod.get_global_var('func_3891')
func_3893_call = mutated_mod.get_global_var('func_3893')
const_6171 = relay.const([[-10],[-8],[-6],[5],[-4],[-1],[9],[8],[-9],[-6],[-1],[4],[9],[9],[1],[-10],[8],[5],[10],[2],[-10],[-1],[-3],[10],[8],[-3],[-8],[-2],[8],[-9],[-7],[-1],[9],[-10],[7],[-3],[3],[5],[-4],[9],[1],[-4],[-10],[8],[-8],[-10],[-7],[9],[-8],[-5],[1],[3],[3],[-1],[5],[1],[-6],[4],[1],[-6],[10],[1],[7],[-3],[9],[2],[-7],[3],[5],[9],[5],[-3],[-6],[9],[-1],[-6],[10],[-8],[9],[6],[9],[-7],[4],[-8],[-5],[-8],[-8],[-5],[10],[-4],[8],[-3],[7],[-9],[-5],[4],[4],[-10],[-3],[-9],[5],[3],[10],[10],[10],[4],[3],[-8],[3],[9],[-2],[-1],[4],[5],[10],[-8],[-5],[10],[8],[9],[3],[-6],[3],[9],[1],[3],[8],[-10],[-5],[-2],[10],[2],[2],[1],[2],[-10],[3],[1],[1],[-1],[5],[4],[8],[-8],[8],[2],[1],[-5],[5],[-4],[6],[-2],[-1],[-7],[3],[3],[-4],[3],[-2],[8],[2],[-1],[-1],[-9],[2],[5],[-7],[-1],[10],[-1],[7],[-2],[4],[6],[-6],[-7],[2],[3],[-4],[-2],[-6],[-8],[-4],[3],[6],[8],[7],[-6],[-5],[8],[-5],[-2],[-3],[-4],[7],[-5],[5],[-6],[-2],[-4],[3],[2],[3],[-3],[-2],[-10],[6],[-6],[8],[7],[-6],[-6],[6],[9],[-3],[6],[6],[-7],[8],[7],[-9],[-9],[-2],[-3],[4],[4],[2],[2],[-6],[-8],[5],[-4],[-4],[2],[-9],[3],[10],[2],[-6],[-10],[4],[-10],[-6],[6],[3],[-10],[6],[3],[-4],[-3],[6],[2],[6],[7],[8],[-2],[-5],[-1],[-5],[2],[9],[-8],[7],[6],[-6],[4],[-2],[9],[-8],[-10],[6],[-1],[4],[-4],[8],[-9],[-10],[-3],[-8],[-6],[-7],[8],[5],[-9],[-4],[3],[3],[-2],[5],[8],[-4],[2],[3],[8],[-4],[8],[7],[1],[3],[-6],[1],[8],[-3],[-10],[8],[4],[4],[5],[1],[1],[-2],[-5],[4],[10],[7],[6],[-5],[-1],[7],[-9],[-7],[9],[10],[9],[9],[-5],[8],[9],[-9],[1],[5],[4],[-2],[-10],[-4],[7],[3],[5],[2],[-3],[5],[-2],[-1],[6],[2],[-3],[-7],[-8],[-2],[9],[7],[-9],[2],[4],[-9],[4],[6],[-8],[-9],[-4],[-6],[-7],[-8],[1],[3],[-3],[-7],[-3],[-8],[2],[-1],[-1],[6],[-3],[-6],[7],[7],[-2],[-1],[2],[4],[-6],[-10],[2],[3],[5],[-2],[-2],[-6],[5],[-3],[-3],[-8],[-3],[9],[-3],[-5],[-5],[-8],[-2],[1],[-5],[-6],[3],[-2],[-5],[3],[-3],[-4],[-2],[-6],[-7],[3],[-5],[-9],[2],[-6],[4],[5],[-5],[8],[-2],[-7],[-5],[-5],[-3],[1],[-1],[4],[-7],[-5],[-2],[7],[-5],[5],[-1],[-8],[-7],[-2],[-4]], dtype = "int32")#candidate|6171|(440, 1)|const|int32
call_6170 = relay.TupleGetItem(func_3891_call(relay.reshape(const_6171.astype('int32'), [10, 11, 4])), 0)
call_6172 = relay.TupleGetItem(func_3893_call(relay.reshape(const_6171.astype('int32'), [10, 11, 4])), 0)
output = relay.Tuple([call_6163,call_6166,call_6170,const_6171,])
output2 = relay.Tuple([call_6164,call_6167,call_6172,const_6171,])
func_6184 = relay.Function([], output)
mod['func_6184'] = func_6184
mod = relay.transform.InferType()(mod)
mutated_mod['func_6184'] = func_6184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6184_call = mutated_mod.get_global_var('func_6184')
call_6185 = func_6184_call()
output = call_6185
func_6186 = relay.Function([], output)
mutated_mod['func_6186'] = func_6186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5320_call = mod.get_global_var('func_5320')
func_5322_call = mutated_mod.get_global_var('func_5322')
call_6220 = func_5320_call()
call_6221 = func_5320_call()
output = call_6220
output2 = call_6221
func_6233 = relay.Function([], output)
mod['func_6233'] = func_6233
mod = relay.transform.InferType()(mod)
output = func_6233()
func_6234 = relay.Function([], output)
mutated_mod['func_6234'] = func_6234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5063_call = mod.get_global_var('func_5063')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_6244 = func_5063_call()
call_6245 = func_5063_call()
func_4587_call = mod.get_global_var('func_4587')
func_4589_call = mutated_mod.get_global_var('func_4589')
var_6248 = relay.var("var_6248", dtype = "int32", shape = (5, 78))#candidate|6248|(5, 78)|var|int32
call_6247 = relay.TupleGetItem(func_4587_call(relay.reshape(var_6248.astype('int32'), [390,])), 2)
call_6249 = relay.TupleGetItem(func_4589_call(relay.reshape(var_6248.astype('int32'), [390,])), 2)
output = relay.Tuple([call_6244,call_6247,var_6248,])
output2 = relay.Tuple([call_6245,call_6249,var_6248,])
func_6261 = relay.Function([var_6248,], output)
mod['func_6261'] = func_6261
mod = relay.transform.InferType()(mod)
var_6262 = relay.var("var_6262", dtype = "int32", shape = (5, 78))#candidate|6262|(5, 78)|var|int32
output = func_6261(var_6262)
func_6263 = relay.Function([var_6262], output)
mutated_mod['func_6263'] = func_6263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6281 = relay.var("var_6281", dtype = "int64", shape = (8, 4, 11))#candidate|6281|(8, 4, 11)|var|int64
const_6282 = relay.const([[[7,8,-8,-4,-6,-2,-4,1,-8,-1,-5],[7,-10,3,-10,-6,8,-5,-8,-3,-3,-5],[8,9,4,-2,-8,-3,1,-8,4,10,-9],[8,-5,-2,-8,5,4,3,6,6,-2,4]],[[-4,6,8,10,2,7,-9,-6,-7,-4,-7],[-8,2,-8,-3,-10,5,-5,-2,2,-2,-1],[-7,7,-8,-4,10,9,-6,-8,7,7,4],[7,-6,-1,-8,-9,-9,-1,-1,-1,9,-3]],[[-7,5,9,-8,-6,10,-5,-10,3,-2,-10],[-9,-9,10,-2,-4,-3,5,-3,-4,9,10],[-7,9,-4,2,1,4,6,8,8,9,3],[3,6,-4,3,6,-6,10,3,3,5,-6]],[[1,1,7,1,3,-7,-5,-1,-7,-10,2],[-3,4,-3,-1,-2,-4,-4,-2,-3,10,1],[3,6,10,4,-6,9,3,6,10,8,10],[6,-8,-6,-9,4,10,-1,-5,-4,-2,-8]],[[-4,8,-4,-9,10,-6,-4,-7,-1,2,-2],[-6,10,8,3,-4,2,-3,10,-1,-9,7],[1,-6,-6,6,3,-4,1,2,8,1,10],[4,-9,-10,-4,-2,2,7,-6,5,6,2]],[[-1,-1,2,9,-7,-2,10,3,-9,-8,10],[-7,10,-6,3,-4,-4,-5,5,6,9,-8],[-8,-4,5,7,7,4,8,-4,9,5,-10],[-8,4,-9,-4,5,-8,-10,-1,10,1,-7]],[[-5,-9,-6,-8,5,-3,3,-2,-9,-8,6],[-9,7,8,3,-6,-4,-3,-1,9,8,-3],[-6,-8,3,-1,6,-9,9,-10,1,-3,2],[9,8,7,10,8,8,10,-4,4,10,4]],[[9,4,-1,-8,2,6,3,-7,-7,10,3],[-9,-8,-8,6,-10,5,6,-8,10,-2,-1],[4,-10,4,-8,-10,5,-2,6,4,-3,-9],[-8,-5,-6,-7,-4,8,-1,5,-1,-6,1]]], dtype = "int64")#candidate|6282|(8, 4, 11)|const|int64
bop_6283 = relay.bitwise_and(var_6281.astype('int64'), relay.reshape(const_6282.astype('int64'), relay.shape_of(var_6281))) # shape=(8, 4, 11)
uop_6289 = relay.cosh(bop_6283.astype('float32')) # shape=(8, 4, 11)
bop_6336 = relay.left_shift(uop_6289.astype('uint64'), relay.reshape(bop_6283.astype('uint64'), relay.shape_of(uop_6289))) # shape=(8, 4, 11)
bop_6342 = relay.less(bop_6336.astype('bool'), relay.reshape(bop_6283.astype('bool'), relay.shape_of(bop_6336))) # shape=(8, 4, 11)
func_3910_call = mod.get_global_var('func_3910')
func_3914_call = mutated_mod.get_global_var('func_3914')
var_6346 = relay.var("var_6346", dtype = "float32", shape = (77,))#candidate|6346|(77,)|var|float32
var_6347 = relay.var("var_6347", dtype = "float32", shape = (924,))#candidate|6347|(924,)|var|float32
call_6345 = func_3910_call(relay.reshape(var_6346.astype('float32'), [1, 11, 7]), relay.reshape(var_6347.astype('float32'), [12, 11, 7]), )
call_6348 = func_3910_call(relay.reshape(var_6346.astype('float32'), [1, 11, 7]), relay.reshape(var_6347.astype('float32'), [12, 11, 7]), )
uop_6351 = relay.sqrt(bop_6342.astype('float32')) # shape=(8, 4, 11)
output = relay.Tuple([call_6345,var_6346,var_6347,uop_6351,])
output2 = relay.Tuple([call_6348,var_6346,var_6347,uop_6351,])
func_6358 = relay.Function([var_6281,var_6346,var_6347,], output)
mod['func_6358'] = func_6358
mod = relay.transform.InferType()(mod)
var_6359 = relay.var("var_6359", dtype = "int64", shape = (8, 4, 11))#candidate|6359|(8, 4, 11)|var|int64
var_6360 = relay.var("var_6360", dtype = "float32", shape = (77,))#candidate|6360|(77,)|var|float32
var_6361 = relay.var("var_6361", dtype = "float32", shape = (924,))#candidate|6361|(924,)|var|float32
output = func_6358(var_6359,var_6360,var_6361,)
func_6362 = relay.Function([var_6359,var_6360,var_6361,], output)
mutated_mod['func_6362'] = func_6362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6233_call = mod.get_global_var('func_6233')
func_6234_call = mutated_mod.get_global_var('func_6234')
call_6416 = func_6233_call()
call_6417 = func_6233_call()
func_4304_call = mod.get_global_var('func_4304')
func_4308_call = mutated_mod.get_global_var('func_4308')
const_6427 = relay.const([8,7,-3,1,9,4,-10,9,-5,-4,-4,1,-9,3,-4,-3,-4,-8,1,-6,1,-2,-1,9,-3,-8,-8,-1,9,9,8,6,2,7,-3,6,5,5,10,3,-6,10,-1,-9,5,-4,9,5,3,-7,-6,-10,-8,6,-8,-1,9,-6,-2,-1,-4,8,-4,-7,4,5,4,1,-10,-3,-4,-3,-6,7,4,5,-4,3,7,-7,5,-10,-5,4,8,6,-2,6,7,-7,3,1,6,-5,6,-3,2,-10,6,4,1,-5,8,10,7,6,-9,5,-1,-8,2,7,-5,-1,-1,5,9,-5,-3,4,-2,10,-7,9,-7,6,10,-1,10,-6,-1,3,10,6,-2,-3,-1,10,-8,-8,7,2,7,2,9,8,-10,-9,8,-6,-6,-7,-2,4,5,4,-8,-9,4,-2,-9,3,1,2,7,-2,-6,9,7,7,7,-5,-10,10,6,-6,-2,6,1,5,-5,1,7,9,-5,-5,10,7,-4,5,-9,-7,-10,-6,-3,10,-9,1,-1,9,9,-10,6,8,-4,-2,-3,-6,3,5,5,6,-4,-10,-7,5,-5,-4,2,-4,4,1,-4,2,1,5,-1,-9,-6,-4,-10,-9,-1,7,-5,-10,-7,-8,-2,-10,6,-10,-6,1,-8,7,3,-4,-8,-8,3,2,10,3,-10,6,10,-2,5,-10,-10,2,10,-8,8,-1,-5,-1,5,-9,-8,-3,-1,5,-10,-8,10,4,5,-10,9,3,6,-8,-7,8,-10,-4,-5,6,1,-6,3,3,-3,10,-6,-3,-7,3,-8,1,-1,-8,1,-2,7,5,9,7,-3,-3,9,1,-6,2,-7,-1,-6,-5,-4,-1,-6,-10,-8,-6,-3,-2,-4,10,9,-4,-5,-7,6,9,-10,1,-9,-10,6,-10,6,3,6,1,-5,4,-2,10,2,9,10,-7,-9,-7,-6,5,-10,-1,2,-4,9,-7,-6,10,-6,7,9,4,2,4,-10,-9,9,-9,-3,10,-8,2,5,9,3,5,1,-7,-3,-2,-1,-3,2,-1,-2,5,-9,-3,3,4,-9,7,10,-4,6,-4,-8,5,-9,-3,9,-3,8,-3,-8,-8,-7,7,-8,8,9,-1,1,9,6,2,-1,-6,-1,-4,7,3,5,-1,3,1,3,2,-9,5,2,-3], dtype = "int32")#candidate|6427|(440,)|const|int32
call_6426 = relay.TupleGetItem(func_4304_call(relay.reshape(call_6416.astype('uint16'), [832,]), relay.reshape(const_6427.astype('int32'), [110, 4]), ), 4)
call_6428 = relay.TupleGetItem(func_4308_call(relay.reshape(call_6416.astype('uint16'), [832,]), relay.reshape(const_6427.astype('int32'), [110, 4]), ), 4)
uop_6444 = relay.sinh(call_6416.astype('float32')) # shape=(4, 13, 16)
uop_6446 = relay.sinh(call_6417.astype('float32')) # shape=(4, 13, 16)
output = relay.Tuple([call_6426,const_6427,uop_6444,])
output2 = relay.Tuple([call_6428,const_6427,uop_6446,])
func_6447 = relay.Function([], output)
mod['func_6447'] = func_6447
mod = relay.transform.InferType()(mod)
output = func_6447()
func_6448 = relay.Function([], output)
mutated_mod['func_6448'] = func_6448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4407_call = mod.get_global_var('func_4407')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_6462 = func_4407_call()
call_6463 = func_4407_call()
func_4562_call = mod.get_global_var('func_4562')
func_4563_call = mutated_mod.get_global_var('func_4563')
call_6485 = relay.TupleGetItem(func_4562_call(), 0)
call_6486 = relay.TupleGetItem(func_4563_call(), 0)
output = relay.Tuple([call_6462,call_6485,])
output2 = relay.Tuple([call_6463,call_6486,])
func_6504 = relay.Function([], output)
mod['func_6504'] = func_6504
mod = relay.transform.InferType()(mod)
output = func_6504()
func_6505 = relay.Function([], output)
mutated_mod['func_6505'] = func_6505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5730_call = mutated_mod.get_global_var('func_5730')
call_6519 = func_5729_call()
call_6520 = func_5729_call()
var_6521 = relay.var("var_6521", dtype = "bool", shape = (10, 12, 5))#candidate|6521|(10, 12, 5)|var|bool
bop_6522 = relay.mod(call_6519.astype('float32'), relay.reshape(var_6521.astype('float32'), relay.shape_of(call_6519))) # shape=(10, 12, 5)
bop_6525 = relay.mod(call_6520.astype('float32'), relay.reshape(var_6521.astype('float32'), relay.shape_of(call_6520))) # shape=(10, 12, 5)
uop_6529 = relay.sinh(var_6521.astype('float32')) # shape=(10, 12, 5)
output = relay.Tuple([bop_6522,uop_6529,])
output2 = relay.Tuple([bop_6525,uop_6529,])
func_6536 = relay.Function([var_6521,], output)
mod['func_6536'] = func_6536
mod = relay.transform.InferType()(mod)
mutated_mod['func_6536'] = func_6536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6537 = relay.var("var_6537", dtype = "bool", shape = (10, 12, 5))#candidate|6537|(10, 12, 5)|var|bool
func_6536_call = mutated_mod.get_global_var('func_6536')
call_6538 = func_6536_call(var_6537)
output = call_6538
func_6539 = relay.Function([var_6537], output)
mutated_mod['func_6539'] = func_6539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5213_call = mod.get_global_var('func_5213')
func_5214_call = mutated_mod.get_global_var('func_5214')
call_6614 = relay.TupleGetItem(func_5213_call(), 0)
call_6615 = relay.TupleGetItem(func_5214_call(), 0)
func_6068_call = mod.get_global_var('func_6068')
func_6074_call = mutated_mod.get_global_var('func_6074')
var_6623 = relay.var("var_6623", dtype = "int32", shape = (5, 88))#candidate|6623|(5, 88)|var|int32
const_6624 = relay.const([-3,-3,8,5,7,-7,7,6,5,1,-3,-6,-1,7,7,1,2,-2,-9,-2,-7,9,-6,-4,-3,4,6,-8,-9,6,-9,-6,3,1,-5,10,-1,-7,-2,-9,-8,2,-5,8,-3,9,-5,3,3,2,5,1,1,-3,1,-9,-7,2,1,-5,6,6,-9,9,-3,1,3,3,1,8,-10,-10,7,-10,-2,3,-8,-9,-2,-8,-9,2,-10,5,-3,-1,9,-3,-3,-7,7,-3,2,2,10,6,9,-1,-5,8,3,-2,-1,1,7,9,9,-2,3,3,-4,-5,9,1,6,9,-1,2,-7,7,10,-1,-7,-9,7,-6,-3,5,8,-3,7,4,4,-3,-8,6,-8,8,-9,8,9,6,-6,3,9,8,7,-8,-7,-3,-1,4,7,5,-1,2,8,1,1,9,9,9,-1,-8,-8,-3,1,10,-1,5,-9,-1,7,2,7,9,1,1,-5,-10,7,3,3,7,-8,8,-9,8,-3,3,4,-4,-2,-6,-2,-1,10,-1,7,8,10,7,-5,3,-5,-7,-10,1,6,10,-4,10,-7,6,9,-1,10,-6,1,2,-6,5,10,8,5,-5,-1,2,8,-1,-2,5,10,-6,3,-9,6,6,9,-3,4,-3,3,-10,-5,-7,3,8,3,6,-3,6,-6,9,-6,10,-10,-4,10,5,5,2,-4,-1,8,5,-10,-3,3,4,4,-9,10,-7,-9,6,6,2,-2,-9,10,-2,-6,9,-8,-9,8,7,3,-8,8,-6,4,4,-1,-4,10,-3,2,-6,-4,3,4,8,3,2,2,8,6,-1,7,-7,-3,3,-2,-6,-5,10,10,-9,-6,6,8,1,6,-2,9,-1,-2,10,5,-2,-6,2,-10,8,-3,-3,8,7,-6,-10,8,7,-6,-4,2,3,-8,-3,5,4,6,1,1,-2,4,-4,-3,-2,10,2,-2,2,-10,-6,-6,5,10,-10,3,-8,3,-1,4,5,-7,-6,2,7,-4,-10,-7,-6,2,-6,7,-2,-7,-7], dtype = "int32")#candidate|6624|(390,)|const|int32
var_6625 = relay.var("var_6625", dtype = "uint32", shape = (1440,))#candidate|6625|(1440,)|var|uint32
const_6626 = relay.const([-9,-2,-10,6,6,-6,-1,-8,8,8,1,8,-4,-8,-6,-4,7,-7,-9,-3,-7,7,-1,2,10,-5,-3,8,-7,-8,3,-8,-9,9,6,-2,3,4,4,-3,8,-5,10,-8,2,-10,9,-7,-10,6,-8,-10,8,5,10,8,6,10,-9,-5,-4,7,-10,4,1,-8,10,10,-4,2,10,3,-5,4,-9,6,3,-9,-10,-4,4,-9,-2,2,3,9,6,-1,-2,5,-3,7,6,6,-10,8,4,8,-8,1,8,5,1,5,1,7,2,-8,1,-6,-6,-6,-4,8,7,-1,9,-9,4,-4,-3,-6,4,-3,2,7,-6,10,-7,9,-6,-1,8,5,-3,6,-1,-10,8,1,5,-8,3,10,-4,6,-9,7,6,-9,5,4,8,3,9,6,4,-6,9,6,3,7,8,1,-10,-2,8,10,-4,-3,-9,-9,-2,9,-9,9,9,-7,-10,3,-1,-4,5,-8,-9,1,2,2,-3,7,7,7,10,3,2,-1,-2,-5,-2,-3,-4,10,4,-9,-2,10,-10,5,1,-3,5,6,-10,-4,4,5,4,3,9,5,-8,-3,2,-2,8,-5,-9,2,-4,6,-6,5,8,5,1,1,5,-2,5,-1,7,-8,9,-8,6,8,-6,-1,-4,-4,-6,-6,10,-9,10,-8,8,-5,-7,7,-8,-7,-9,-9,-5,-7,7,-4,-1,-3,-5,-2,-8,9,2,1,10,-6,-6,-1,7,4,1,-4,2,-5,-10,-1,4,4,-3,-7,2,-1,10,9,-10,-5,10,-5,-7,-1,-7,-5,-10,8,3,6,3,-4,-9,-2,4,10,-5,8,5,-6,10,5,10,5,3,1,-1,6,-5,-9,-6,-5,-5,-2,2,7,1,2,-7,7,8,-3,10,-9,10,6,-10,-4,5,9,5,-9,-8,-8,-10,3,2,9,7,-8,9,-2,6,5,-3,-7,10,5,-9,-3,7,-6,-5,-10,2,-9,2,9,-9,-9,1,-1,4,-1,8,-1,-1,3,-2,8,2,7,1,4,-4,-2,-1,-6,-8,9,10,-10,-8,8,-7,8,-6,-5,-2,-6,-4,-1,-1,1,3,-5,1,-5,8,9,-10,7,1,-2,3,-3,-6,3,3,-7,3,1,-5,2,-10,1,9,5,-1,7,4,-2,-4,6,-8,-4,-4,6,-1,-5,1,-2,-5,2,-1,4,9,-6,9,-10,6,10,9,9], dtype = "uint16")#candidate|6626|(462,)|const|uint16
call_6622 = relay.TupleGetItem(func_6068_call(relay.reshape(var_6623.astype('int32'), [440,]), relay.reshape(const_6624.astype('int32'), [1, 390]), relay.reshape(var_6625.astype('uint32'), [2, 720]), relay.reshape(const_6626.astype('uint16'), [462, 1]), ), 12)
call_6627 = relay.TupleGetItem(func_6074_call(relay.reshape(var_6623.astype('int32'), [440,]), relay.reshape(const_6624.astype('int32'), [1, 390]), relay.reshape(var_6625.astype('uint32'), [2, 720]), relay.reshape(const_6626.astype('uint16'), [462, 1]), ), 12)
output = relay.Tuple([call_6614,call_6622,var_6623,const_6624,var_6625,const_6626,])
output2 = relay.Tuple([call_6615,call_6627,var_6623,const_6624,var_6625,const_6626,])
func_6634 = relay.Function([var_6623,var_6625,], output)
mod['func_6634'] = func_6634
mod = relay.transform.InferType()(mod)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6634_call = mutated_mod.get_global_var('func_6634')
var_6636 = relay.var("var_6636", dtype = "int32", shape = (5, 88))#candidate|6636|(5, 88)|var|int32
var_6637 = relay.var("var_6637", dtype = "uint32", shape = (1440,))#candidate|6637|(1440,)|var|uint32
call_6635 = func_6634_call(var_6636,var_6637,)
output = call_6635
func_6638 = relay.Function([var_6636,var_6637,], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4236_call = mod.get_global_var('func_4236')
func_4238_call = mutated_mod.get_global_var('func_4238')
call_6668 = relay.TupleGetItem(func_4236_call(), 4)
call_6669 = relay.TupleGetItem(func_4238_call(), 4)
output = relay.Tuple([call_6668,])
output2 = relay.Tuple([call_6669,])
func_6676 = relay.Function([], output)
mod['func_6676'] = func_6676
mod = relay.transform.InferType()(mod)
mutated_mod['func_6676'] = func_6676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6676_call = mutated_mod.get_global_var('func_6676')
call_6677 = func_6676_call()
output = call_6677
func_6678 = relay.Function([], output)
mutated_mod['func_6678'] = func_6678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4722_call = mod.get_global_var('func_4722')
func_4724_call = mutated_mod.get_global_var('func_4724')
call_6736 = relay.TupleGetItem(func_4722_call(), 1)
call_6737 = relay.TupleGetItem(func_4724_call(), 1)
output = relay.Tuple([call_6736,])
output2 = relay.Tuple([call_6737,])
func_6738 = relay.Function([], output)
mod['func_6738'] = func_6738
mod = relay.transform.InferType()(mod)
mutated_mod['func_6738'] = func_6738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6738_call = mutated_mod.get_global_var('func_6738')
call_6739 = func_6738_call()
output = call_6739
func_6740 = relay.Function([], output)
mutated_mod['func_6740'] = func_6740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5320_call = mod.get_global_var('func_5320')
func_5322_call = mutated_mod.get_global_var('func_5322')
call_6764 = func_5320_call()
call_6765 = func_5320_call()
output = relay.Tuple([call_6764,])
output2 = relay.Tuple([call_6765,])
func_6767 = relay.Function([], output)
mod['func_6767'] = func_6767
mod = relay.transform.InferType()(mod)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6767_call = mutated_mod.get_global_var('func_6767')
call_6768 = func_6767_call()
output = call_6768
func_6769 = relay.Function([], output)
mutated_mod['func_6769'] = func_6769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_6770 = relay.TupleGetItem(func_4140_call(), 0)
call_6771 = relay.TupleGetItem(func_4141_call(), 0)
output = call_6770
output2 = call_6771
func_6772 = relay.Function([], output)
mod['func_6772'] = func_6772
mod = relay.transform.InferType()(mod)
output = func_6772()
func_6773 = relay.Function([], output)
mutated_mod['func_6773'] = func_6773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5213_call = mod.get_global_var('func_5213')
func_5214_call = mutated_mod.get_global_var('func_5214')
call_6774 = relay.TupleGetItem(func_5213_call(), 1)
call_6775 = relay.TupleGetItem(func_5214_call(), 1)
output = call_6774
output2 = call_6775
func_6776 = relay.Function([], output)
mod['func_6776'] = func_6776
mod = relay.transform.InferType()(mod)
output = func_6776()
func_6777 = relay.Function([], output)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6786 = relay.var("var_6786", dtype = "uint8", shape = (15, 8, 3))#candidate|6786|(15, 8, 3)|var|uint8
var_6787 = relay.var("var_6787", dtype = "uint8", shape = (15, 8, 3))#candidate|6787|(15, 8, 3)|var|uint8
bop_6788 = relay.bitwise_or(var_6786.astype('uint8'), relay.reshape(var_6787.astype('uint8'), relay.shape_of(var_6786))) # shape=(15, 8, 3)
output = relay.Tuple([bop_6788,])
output2 = relay.Tuple([bop_6788,])
func_6799 = relay.Function([var_6786,var_6787,], output)
mod['func_6799'] = func_6799
mod = relay.transform.InferType()(mod)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6799_call = mutated_mod.get_global_var('func_6799')
var_6801 = relay.var("var_6801", dtype = "uint8", shape = (15, 8, 3))#candidate|6801|(15, 8, 3)|var|uint8
var_6802 = relay.var("var_6802", dtype = "uint8", shape = (15, 8, 3))#candidate|6802|(15, 8, 3)|var|uint8
call_6800 = func_6799_call(var_6801,var_6802,)
output = call_6800
func_6803 = relay.Function([var_6801,var_6802,], output)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3970_call = mod.get_global_var('func_3970')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_6831 = relay.TupleGetItem(func_3970_call(), 0)
call_6832 = relay.TupleGetItem(func_3971_call(), 0)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_6853 = relay.TupleGetItem(func_4140_call(), 0)
call_6854 = relay.TupleGetItem(func_4141_call(), 0)
output = relay.Tuple([call_6831,call_6853,])
output2 = relay.Tuple([call_6832,call_6854,])
func_6855 = relay.Function([], output)
mod['func_6855'] = func_6855
mod = relay.transform.InferType()(mod)
mutated_mod['func_6855'] = func_6855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6855_call = mutated_mod.get_global_var('func_6855')
call_6856 = func_6855_call()
output = call_6856
func_6857 = relay.Function([], output)
mutated_mod['func_6857'] = func_6857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6915 = relay.var("var_6915", dtype = "float32", shape = (4, 16, 7))#candidate|6915|(4, 16, 7)|var|float32
uop_6916 = relay.tan(var_6915.astype('float32')) # shape=(4, 16, 7)
output = uop_6916
output2 = uop_6916
func_6918 = relay.Function([var_6915,], output)
mod['func_6918'] = func_6918
mod = relay.transform.InferType()(mod)
var_6919 = relay.var("var_6919", dtype = "float32", shape = (4, 16, 7))#candidate|6919|(4, 16, 7)|var|float32
output = func_6918(var_6919)
func_6920 = relay.Function([var_6919], output)
mutated_mod['func_6920'] = func_6920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6447_call = mod.get_global_var('func_6447')
func_6448_call = mutated_mod.get_global_var('func_6448')
call_6924 = relay.TupleGetItem(func_6447_call(), 0)
call_6925 = relay.TupleGetItem(func_6448_call(), 0)
func_2584_call = mod.get_global_var('func_2584')
func_2587_call = mutated_mod.get_global_var('func_2587')
const_6949 = relay.const([[5.773381,4.386983,2.559012,6.555895,8.635761,-2.431515,8.752989,9.050704,3.225141,1.202949,2.834874,-4.528584,8.560685,8.219679,-4.483156,0.184385,3.228857,5.097232,5.767649,5.855623,-1.364171,7.495378,8.886299,-1.805432,3.538556,-6.139077,5.541322,4.051480,9.948882,-8.752496,8.167025,1.832937,-0.240222,9.106283,9.911405,-9.351200,6.117275,0.356963,2.059269,2.902252,8.028240,0.910192,9.701810,5.864574,8.790188,-8.587090,-5.056278,3.554502,7.882744,-6.728281,6.036867,-5.389644,-7.042566,-2.433159,6.156397,3.644933,8.646652,5.932528,3.544413,7.845562,1.827999,3.098931,5.172472,-2.909719,5.783014,2.185002,-8.156666,7.614452,3.376586,-6.760359,-9.801591,-2.168564,-5.692020,-6.067453,-2.084649,-3.782512,7.844014,3.990349,2.893385,5.986098,-6.276588,7.305166,6.725340,-6.834697],[-8.851374,0.441432,-5.094422,5.595975,-5.288917,-2.577275,7.941946,-7.789366,-9.580242,-4.521288,0.204161,-3.640036,-2.186881,-7.968958,3.691727,3.318558,4.627337,-4.219945,-0.602517,-6.673501,1.548158,9.746889,-4.081618,6.605686,-8.115858,-9.379981,-0.757394,0.638504,-1.362792,-9.285532,-2.693138,-7.391387,-6.500590,7.172308,-8.326646,5.902454,-8.081948,-2.293115,-3.050243,8.080072,3.775465,1.503705,8.783665,2.129834,-3.532829,4.681549,9.976596,6.465986,-9.777147,-9.174287,-5.842143,-3.315603,-7.090644,1.974145,-9.296647,0.392040,-0.363144,5.217579,-5.925537,-6.951498,-2.777950,2.984884,7.750392,-7.746365,-1.853900,-5.558269,-4.120502,1.340033,2.993093,-7.309392,-0.966454,-6.940904,-6.793811,-9.516831,-6.858567,1.674630,-9.412274,-4.075469,2.469356,8.773315,1.911825,3.450462,-5.098859,-5.363882],[2.006516,1.412781,6.411277,5.907636,-6.480965,-4.223729,-8.702935,0.960139,-7.089152,-4.479923,-6.028109,9.944738,2.752149,-3.487857,-0.221832,0.428531,6.163965,1.952586,-7.052123,-5.211068,-3.703675,5.427837,-6.523061,3.601180,-7.797996,6.699368,4.863464,-7.803944,6.742680,-2.974735,-9.360418,7.346862,-6.194477,-3.073638,8.615373,2.115773,5.160943,-7.525995,-4.154074,-0.727374,1.738587,4.448485,4.601121,3.708042,-4.388821,-1.181408,-3.868983,-6.902721,-4.059164,3.489702,6.096776,9.653145,-8.001649,8.403542,1.913481,9.201840,0.910063,2.053882,5.800690,9.634403,-7.482495,-4.547644,1.907715,2.323288,4.174976,-8.898487,-9.627384,6.382475,2.396759,9.998406,-4.320622,-8.948971,8.023074,-0.397614,-0.146979,3.018319,3.847498,3.556957,-8.590062,-5.096099,-0.474130,5.000860,-1.828311,0.122884],[7.825950,-7.665136,0.254872,0.788835,-3.609889,2.211425,0.261083,4.230860,-5.054186,0.077727,-5.241840,-6.641564,-2.991689,7.490178,-6.925218,0.601851,3.913880,-8.781615,-6.364665,4.575535,9.596311,2.313127,5.613541,-2.366312,-1.967534,7.374964,1.029269,9.516151,4.873052,5.032550,5.376853,6.761122,-2.971789,4.742152,1.891273,-0.368410,-2.989254,8.399599,-9.976938,5.727498,7.554378,3.070303,7.445134,7.270931,6.990439,-8.196680,1.575383,6.006773,5.178689,-9.865276,-3.731119,-4.015165,-6.577828,-1.180338,2.734940,2.414923,-9.212119,7.578446,2.189865,-6.554198,8.397633,0.176239,-9.793606,6.743439,-9.008398,-6.039658,-1.522350,7.784909,-0.305685,1.310630,8.556540,0.409860,-1.484681,7.636524,6.448302,-9.061349,5.588177,3.433459,4.426925,0.143050,-0.127624,-1.500131,-6.511758,3.286596]], dtype = "float32")#candidate|6949|(4, 84)|const|float32
const_6950 = relay.const([[1.095696],[8.919090],[-8.072755],[-7.878271],[5.598926],[1.257404],[-9.716434],[1.635250],[-4.511185],[3.128990],[-4.124584],[-6.947245],[2.081037],[8.527945],[-2.774190],[2.052084],[-2.975558],[5.877427],[6.098898],[3.957573],[6.328976],[4.834020],[8.888455],[6.801499],[-0.914072],[-0.158105],[5.357992]], dtype = "float64")#candidate|6950|(27, 1)|const|float64
call_6948 = relay.TupleGetItem(func_2584_call(relay.reshape(const_6949.astype('float32'), [12, 14, 2]), relay.reshape(const_6950.astype('float64'), [27,]), ), 1)
call_6951 = relay.TupleGetItem(func_2587_call(relay.reshape(const_6949.astype('float32'), [12, 14, 2]), relay.reshape(const_6950.astype('float64'), [27,]), ), 1)
func_2914_call = mod.get_global_var('func_2914')
func_2920_call = mutated_mod.get_global_var('func_2920')
const_6967 = relay.const([[-1],[-10],[9],[-2],[-5],[9],[-1],[-9],[-6],[1],[-8],[-10],[-9],[-5],[5],[8],[2],[-10],[3],[-5],[4],[-10],[6],[10],[-6],[3],[3],[3],[2],[-5],[-1],[-4],[10],[3],[-7],[-6],[2],[-6],[5],[-2],[8],[5],[1],[-5],[7],[-10],[4],[-9],[-10],[-2],[1],[-6],[3],[-3],[9],[-9],[3],[10],[3],[-4],[7],[9],[10],[8],[10],[-6],[9],[6],[-5],[10],[6],[-1],[-5],[-2],[-6],[9],[10],[7],[-5],[1],[6],[-8],[1],[-4],[-5],[-10],[-6],[-2],[4],[9],[10],[-3],[7],[-2],[6],[10],[1],[6],[-4],[-8],[-7],[-3],[-1],[-1],[-7],[-5],[10],[9],[2],[2],[5],[10],[3],[-9],[6],[-7],[-10],[-5],[-5],[6],[-9],[-1],[2],[8],[9],[10],[3],[-1],[-5],[3],[-10],[6],[3],[10],[10],[-10],[-10],[-1],[8],[6],[3],[-3],[-7],[-5],[7],[-6],[10],[-6],[5],[-9],[-4],[7],[-9],[-6],[-10],[-6],[8],[9],[6],[-8],[2],[9],[-5],[-5],[10],[5],[-4],[-10],[1],[-3],[8],[-5],[-1],[-2],[8],[9],[3],[6],[-10],[8],[6],[6],[8],[-6],[-1],[1],[8],[-6],[10],[-5],[7],[10],[9],[-7],[8],[3],[-9],[-5],[-6],[-5],[2],[6],[9],[1],[1],[8],[10],[-7],[-6],[2],[-8],[-8],[-3],[-3],[6],[5],[3],[7],[5],[-1],[-4],[4],[9],[-4],[4],[8],[8],[-10],[-9],[-9],[-10],[-4],[-6],[-4],[9],[-7],[6],[-8],[1],[-9],[8],[8],[3],[9],[2],[8],[2],[6],[3],[1],[7],[6],[9],[8],[5],[-6],[5],[9],[3],[-2],[5],[6],[4],[-7],[2],[-10],[6],[-2],[-1],[7],[-10],[-9],[7],[4],[7],[5],[-8],[1],[-5],[-8],[8],[7],[7],[9],[2],[3],[8],[-8],[1],[7],[10],[2],[-6],[-9],[-3],[7],[-8],[-7],[4],[10],[-3],[7],[-7],[8],[-6],[6],[8],[-3],[2],[5],[-10],[9],[9],[-10],[2],[-10],[-7],[6],[-3],[-1],[-9],[7],[6],[-2],[-2],[6],[-9],[10],[10],[10],[2],[-9],[-8],[-2],[-9],[-10],[-10],[8],[6],[6],[4],[10],[6],[-1],[9],[-8],[-3],[1],[-4],[-2],[6],[3],[-10],[-3],[8],[-4],[1],[8],[-3],[-4],[2],[5],[-1],[-1],[-9],[-9],[-7],[-2],[3],[3],[5],[8],[1],[-3],[-4],[-1],[9],[6],[-4],[4],[-1],[8],[-5],[-7],[6],[-4],[7],[-6],[7],[-5],[8],[-1],[-1],[8],[5],[-1],[-7],[6],[-9],[-2],[3],[5],[9],[8],[-3],[-9],[8],[10],[7],[7],[10],[-10],[-6],[8],[-9],[10],[8],[10],[1],[3],[3],[-6],[10],[-2],[-2],[2],[-8],[-6],[1],[10],[4],[-2],[9],[10],[-3],[3],[3],[-7],[-3],[-3],[-10],[4],[9],[2],[4],[2],[4],[-2],[9],[3],[5],[6],[-3],[-4],[-1],[-1],[3],[-7],[-5],[-4],[1],[-1],[-9],[9],[7],[8],[6],[-1],[-6],[-7],[-3],[8],[-4],[-8],[-3],[10],[-8],[10],[5],[3],[-1],[-5],[6],[8],[-10],[-9],[-1],[-1],[-1],[4],[1],[8],[8],[-7],[7],[-5],[3],[-5],[-6],[3],[8],[-1],[8],[-6],[10],[2],[5],[-3],[10],[-5],[1],[5],[-2],[5],[3],[-5],[9],[-2],[9],[9],[-9],[5],[3],[-8],[-9],[9],[-5],[-6],[-7],[6],[-10],[-3],[-9],[9],[2],[-9],[8],[-4],[1],[5],[-6],[-2],[1],[9],[-10],[7],[8],[-10],[-4],[6],[6],[8],[1],[-7],[5],[4],[8],[-2],[3],[-6],[8],[4],[3],[4],[-2],[5],[8],[-4],[-7],[-1],[2],[-2],[1],[-9],[7],[9]], dtype = "int16")#candidate|6967|(576, 1)|const|int16
const_6968 = relay.const([5.893408,8.929669,9.918290,4.263312,1.128312,2.856257,-5.679196,-2.773896,5.479631,7.411935,-1.784991,-4.511264,-3.976220,-9.998745,3.853964,0.523144,1.378526,3.539794,7.621309,-9.608629,-5.084821,8.381425,0.539440,-4.789812,-7.301302,1.465523,-6.015037,5.801031,7.504077,-8.819341,5.989378,-6.120111,4.754360,7.439488,-9.788461,0.739476,9.725190,8.286955,-5.536704,-9.360951,4.312642,8.620158,3.910920,-6.585171,3.184806,-3.730972,-4.981675,4.673036,-1.413270,-9.060931,2.983829,2.500856,5.533472,5.206208,-2.020109,-4.244033,9.356967,-3.020299,-2.666570,-9.085395,4.637257,-5.044922,5.335222,4.380182,6.663984,-7.307029,-7.174120,8.769922,-0.599409,0.958383,-0.008582,-5.881621,-0.450649,8.071317,0.707060,-9.277792,-4.165417,0.601006,-1.804050,1.597432,-8.058282,-4.777828,2.518769,-7.422463,-7.324412,-1.737727,-0.620942,4.826350,8.703232,1.940299,-3.661039,-6.845626,7.911484,-6.741523,-5.903556,8.203781,3.257039,5.573001,1.845251,-5.524279,-2.146464,6.460738,1.253727,3.220999,6.608494,4.776362,-7.286142,-4.739765,7.222902,0.366336,-0.023199,8.860954,2.018187,-8.697501,-4.447524,-9.189942,7.862376,1.649033,-7.626942,-9.917005,-5.001817,4.658179,3.392977,-6.861403,-2.518376,-7.106550,-0.319146,-1.754189,6.496289,-5.763196,3.133645,-3.264428,-5.712281,8.438504,-4.794126,-0.652164,-3.613251,8.550827,4.202311,-2.184187,0.124064,-7.330180,-3.637995,3.091011,1.955515,-7.798977,4.575489,-8.578731,-3.634661,-1.059330,1.607948,6.132042,9.250469,3.329892,-9.410628,-5.692968,-1.602443,2.362779,-5.772663,-0.639006,8.450975,-1.763212,9.006012,-4.507277,6.387410,-8.315523,-8.990890,-9.587374,-0.313701,-5.613224,1.553055,9.341920,-9.117090,4.230955,9.011999,-6.788499,-2.643015,0.546755,4.208876,4.657280,4.461438,1.890996,-1.304974,2.590217,8.628749,5.707790,-3.106694,5.893500,-7.309972,2.397792,-9.466297,-6.876646,1.566302,7.453002,0.319286,2.376171,-1.338424,-0.985383,-3.137900,-2.308255,-9.661591,-5.246171,-6.504491,7.283588,-6.372416,-2.946654,-8.475342,2.213366,4.048447,7.063315,-5.832269,5.818234,2.769731,0.448167,1.129962,-2.674337,3.433747,-3.386278,-2.353659,-6.907958,1.402275,7.805911,9.112555,8.106873,9.522030,-1.162637,3.509187,6.095431,1.057169,-0.424597,-3.298239,-0.743005,4.106852,7.923285,-6.869502,2.299422,-5.031759,-6.461329,1.156761,-6.832247,-7.298106,-5.728527,-2.663581,-7.227462,-4.046092,-0.769169,9.857455,9.342123,-7.997620,-2.381138,-7.454995,-0.082250,4.802878,2.616996,-6.128805,2.536530,-3.134380,-9.020913,9.905541,-0.426965,9.280696,-2.302938,-6.276717,6.115564,-5.692866,6.271825,2.309255,-0.402487,-6.773701,-5.745176,4.868204,6.489480,8.940703,6.174189,6.007431,3.504964,-0.402411,1.819196,0.045591,6.379300,7.495915,-3.817976,-5.543083,7.105563,-5.409439,8.338740,7.071733,2.594879,-3.165645,-1.952412,3.994237,-2.903382,1.716296,-9.991886,5.173551,0.907761,-0.485771,8.520926,-2.114593,-9.171346,-9.871047,-8.653906,-0.533445,2.897314,-4.090483,-4.341998,0.394546,-1.471775,2.310769,4.439283,-0.364406,9.717848,-8.338102,-3.725076,2.851775,-1.858332,-1.908351,6.321717,-9.056164,-2.849826,-5.317169,-7.580717,1.881135,0.964284,0.108286,6.386219,3.437549,4.722802,-1.586227,-3.236304,-4.047915,2.416108,4.475516,5.836523,1.887630,5.525026,2.565714,0.856859,-1.701863,3.363099,1.908071,3.374281,3.380583,3.232451,-4.239030,8.396331,-3.346544,-5.687839,4.641934,9.944322,2.090082,1.267824,7.124109,2.972031,7.706356,9.908895,-2.458415,0.178401,1.620199,0.233559,-3.772026,-1.731449,0.165511,-7.371319,4.233761,-0.733185,-6.461330,8.018560,-3.641416,1.197102,1.889355,4.659524,-7.684199,4.477866,7.876308,0.540951,4.002925,-5.629443,-2.470368,0.404568,-3.858902,-0.504012,9.543765,-5.271789,4.498794,1.065082,4.741405,-0.141480,0.358658,6.192273,-0.730473,-7.934746,0.742036,-6.266712,-2.042881,9.828813,0.996000,9.216460,1.206368,2.497932,-8.340568,6.920738,4.184824,6.492297,8.207228,6.690148,7.118138,7.499365,-5.130944,1.417705,6.875661,8.204121,-7.959195,-7.548694,0.969812,-4.876807,-9.288996,7.341037,7.425441,3.105535,7.394654,-8.751509,-2.604061,4.846871,-7.340885,4.733869,5.647560,-7.490085,-5.246350,2.654536,-7.887431,5.090391,7.603156,-3.189519,6.194514,3.171172,-5.613445,8.094321,1.932869,6.385044,2.983458,-3.462452,-2.677896,9.902779,2.457483,-7.723802,-9.952744,-5.466716,-8.997810,0.562242,-5.902274,-1.778923,-9.186537,-4.055403,7.822574,7.302902,-4.293751,3.161389,2.063045,1.518543,-0.968064,-2.334569,4.327718,-8.656615,-6.555505,9.635364,7.240037,8.495811,-2.465002,2.484088,-6.943220,-8.480458,-2.412095,0.927879,-3.291592,-1.497977,-2.149377,-5.599017,-0.108507,8.243962,-6.436540,3.003941,-8.329487,1.449212,-1.697437,-6.690444,-8.477040,-4.921598,9.751101,-0.082060,-4.765694,-4.083966,5.385503,5.994445,0.464434,-5.083790,7.754040,4.925220,4.517589,-2.648846,-1.028402,-6.209385,-6.053156,4.489856,-6.950953,5.738936,6.412504,2.980059,-1.293298,-3.749706,4.892384,7.476837,-1.510391,-3.859291,-8.865002,-0.988534,-8.130648,0.135452,4.757682,-7.928673,-6.743516,-9.779994,4.697772,-7.902649,-3.469603,4.606529,-6.613499,0.844564,-7.970807,-2.385863,-8.202153,1.035853,9.712377,7.398684,7.194601,-2.247420,-2.165136,8.092367,-9.225314,7.703135,-1.770097,-0.632400,-2.063734,-7.233583,9.708108,6.675139,1.024667,-0.463288,4.782407,8.719955,4.957112,-8.133774,-6.361573,3.473512,2.622695,-3.366544,-3.270376,-1.899015,-1.373472,0.240064,0.850393,5.212445,5.239889,4.491867,-7.826881,4.679966,-5.166637,5.365431,-2.939534,8.936401,3.132387,6.096696,-8.736854,-2.907240,-0.532888,9.867809,-3.758537,-8.959688,-1.571347,-1.996387,-9.450582,8.141768,5.541777,-2.426849,7.295568,-6.491279,1.113516,-4.650417,6.514918,-4.698405,-3.986994,-0.611703,-3.593047,-6.830500,-1.608641,7.315191,2.910310,-4.794920,3.545406,-8.972520,-9.277026,-1.542857,-8.074861,-1.173892,3.950510,-1.087446,-0.473176,6.998943,6.639020,0.989361,-8.506318,0.233909,3.074236,9.801847,-7.696974,-0.783126,-3.433131,-0.717981,4.530579,-0.218877,0.510265,9.019083,7.036294,-1.751857,-1.654579,4.272221,3.956104,-8.011659,-4.691168,3.890569,8.868279,7.689147,-6.291873,8.221319,-8.163872,6.937476,-6.519765,5.936915,7.071042,-9.012184,-7.810250,-8.507568,-9.704274,-0.468348,-0.117085,6.242121,1.134879,7.087027,-2.288128,-6.352522,7.059833,-1.376581,-4.505600,5.016249,-9.341746,9.873101,4.800982,-7.358163,8.303104,-6.090707,-1.166081,8.928357,6.190463,-1.197379,3.795860,-3.751988,-6.692846,-8.921931,0.751791,-9.786845,-2.253405,-2.034196,4.480931,6.361290,3.177884,6.034609,-8.811288,-1.416299,8.925849,4.420486,8.203611,9.418345,4.859639,-6.804978,-9.366477,-4.405695,-5.185920,-2.625462,7.406901,-2.841497,-5.633092,-4.890830,3.082057,-7.642443,4.278760,5.235461,0.488772,-0.943524,4.921872,1.874337,1.312615,-0.656544,-2.774441,-2.682497,-5.705960,8.987568,-9.907114,7.295623,-7.109899,-3.641020,-2.328260,-1.351654,1.130724,-6.823579,7.765891,-6.722486,9.767483,-5.087840,4.218616,8.123245,-8.151750,-2.998473,-8.666493,-2.408878,4.675709,4.580840,-0.951378,-7.532791,-1.413798,-7.549454,-9.454034,5.156125,9.249379,-0.891506,-3.703692,3.455059,-3.198604,5.632591,9.932536,7.840985,-5.466001,-3.341543,-7.110418,-2.196710,1.167621,-0.976162,3.258841,2.923078,8.570743,-8.577966,0.544653,-5.066922,5.119924,9.575039,6.879111,-4.272812,1.638495,8.072507,5.750338,-9.503837,-7.605857,-2.763761,-5.786237,5.157565,5.066734,4.604191,7.830035,-8.297552,4.857822,8.742690,-8.863577,3.054795,0.138409,3.824965,-0.344977,7.562396,-6.392139,5.943063,-0.482707,0.970841,-1.464921,-4.274937,-7.844081,-8.182896,-7.914289,9.440965,9.417347,-6.444746,3.283592,0.803061,-4.614754,-9.702235,4.213047,2.389099,-8.270547,5.252987,-5.214959,-9.025642,2.281541,-5.492347,7.760571,-5.365769,-7.160761,8.711112,6.753202,-7.178603,6.013455,-6.509791,-4.188525,-5.574493,-2.809625,6.813060,-6.229929,-0.476798,-6.280494,9.778701,-5.760026,9.612874,0.246760,-4.530433,3.772201,-9.371080,9.017711,9.300063,-7.990828,6.186072,-4.391499,5.697836,-9.112986,-0.231349,4.800288,-9.657951,5.287871,-7.039490,-5.344443,7.678474,3.168112,7.790789,9.542734,-8.815784,-1.799518,-8.897369,-2.887239,5.303659,8.273181,-1.917888,-6.922964,-1.618583,-9.462260,-4.861024,3.062016,-3.032045,8.697470,-7.449287,9.501398,-6.383040,-0.028086,-2.449834,5.459322,7.572688,5.238236,5.640790,3.920502,5.000449,-7.516679,-8.875680,-1.150250,4.693545,-0.902123,-1.384290,-4.052081,-5.542374,2.175825,-1.703498,-4.763591,-9.498518,0.411627,2.390407,1.242388,-1.917182,-6.820807,-4.931937,5.848566,-8.623504,2.301404,1.659539,-7.315745,-3.942884,-5.984378,-0.121408,-7.066915,-7.830149,-8.841104,-1.871473,8.772706,5.511685,-9.039342,-2.345909,8.517845,5.615546,0.279304,8.372077,-3.822042,9.318745,-8.124971,-1.597446,-4.300957,-1.968850,-5.116491,9.774560,2.988483,-3.238072,-9.159267,1.390460,4.621193,-4.350236,-1.570401,-6.935524,2.473491,0.451870,5.596533,-7.955166,2.394944,-3.505950,-7.756422,1.327529,0.661800,4.252813,-4.968757,7.426543,1.107607,-1.598584,6.121528,7.751408,-0.207167,-2.119918,-5.063502,-2.233462,7.525378,2.011319,-9.089595,3.462668,-3.441643,6.265506,-6.033906,6.369647,-0.792704,2.253306,-7.180834,-4.747486,5.055222,8.351588,2.139167,8.245640,-3.528582,-9.885698,6.332598,-2.012946,-1.740550,-7.605415,1.707077,2.149293,9.111294,3.932196,9.196005,5.377084,5.695408,-6.957635,-5.076155,1.082531,-9.158323,1.779993,-3.783752,-7.380336,6.440111,7.245777,-6.071224,-2.565125,8.933610,3.984392,1.761078,1.866849,2.810689,8.575244,-9.134470,2.281496,6.585030,-9.396033,-0.586241,-2.269307,-3.413462,-5.847769,-2.436927,-9.584249,1.140881,-9.193689,-3.651473,2.016588,5.238601,3.514272,5.234840,8.128084,6.252900,-5.340942,-2.500000,7.829534,-0.580877,3.970932,-7.726303,-5.926191,3.295603,-4.942292,6.487655,-4.522848,9.678989,-4.718337,-4.430575,7.061916,5.177258,8.717525,-7.981772,-2.633179,4.030040,-3.097450,-7.985832,3.297785,9.558727,0.345807,0.192096,-1.170401,-3.995438,7.530898,-6.412058,-5.188667,0.946183,4.213467,1.270219,-9.704653,2.585289,-9.187395,-6.445421,6.312319,-5.410858,-7.460967,-2.077130,-2.602719,2.106247,6.360602,-2.491388,8.936888,-2.580854,5.407271,2.078734,-6.584582,-4.175825,-7.089152,-6.340971,4.084098,-4.680029,-4.446318,-5.105430,8.604412,-3.416811,9.502055,2.356317,-3.117561,1.018956,7.426925,-1.663114,5.953758,-7.811661,1.987410,4.634817,1.958095,-9.957739,0.241720,-7.676747,-2.957573,1.313995,7.830097,-6.044267,-7.106077,-5.663755,-8.102520,8.753296,7.163335,2.841555,-2.600825,7.926280,3.638345,9.876232,-4.818458,5.085690,1.756419,-1.145408,2.044545,-9.585984,-6.381642,1.349172,2.484925,-6.985935,9.905651,5.633499,3.849193,0.024197,-2.197110,3.895789,4.167861,5.335866,2.400420,5.915578,6.930386,9.426869,-7.248133,-2.976457,7.669611,9.107698,0.312037,6.947116,7.813276,8.337024,6.910974,5.353524,9.600667,2.606418,-5.140391,-4.422186,4.225022,-3.406112,-1.049286,1.218659,3.392174,-5.138999,-7.018870,2.827380,2.635397,6.929459,9.021510,2.583161,-7.722157,-3.895461,0.740504,-7.629994,-8.540731,4.801160,9.067107,-8.700874,6.571795,3.138714,-9.920412,3.956808,6.530476,3.465924,5.808725,-0.523120,5.947981,5.112072,9.750666,3.100411,-1.990760,-8.032168,-4.182159,-2.427059,-3.383682,3.530870,3.448335,-3.816000,8.760247,8.282163,-1.719011], dtype = "float32")#candidate|6968|(1170,)|const|float32
var_6969 = relay.var("var_6969", dtype = "float32", shape = (108, 1))#candidate|6969|(108, 1)|var|float32
call_6966 = relay.TupleGetItem(func_2914_call(relay.reshape(const_6967.astype('int16'), [12, 6, 8]), relay.reshape(const_6968.astype('float32'), [1170,]), relay.reshape(var_6969.astype('float32'), [108,]), relay.reshape(call_6924.astype('uint16'), [832,]), ), 4)
call_6970 = relay.TupleGetItem(func_2920_call(relay.reshape(const_6967.astype('int16'), [12, 6, 8]), relay.reshape(const_6968.astype('float32'), [1170,]), relay.reshape(var_6969.astype('float32'), [108,]), relay.reshape(call_6924.astype('uint16'), [832,]), ), 4)
bop_6984 = relay.floor_mod(call_6924.astype('float32'), var_6969.astype('float32')) # shape=(108, 832)
bop_6987 = relay.floor_mod(call_6925.astype('float32'), var_6969.astype('float32')) # shape=(108, 832)
func_1893_call = mod.get_global_var('func_1893')
func_1896_call = mutated_mod.get_global_var('func_1896')
const_6989 = relay.const([-10,4,-1,9,-2,3,8,-10,5,3,6,3,3,-1,1,-5,10,-2,-2,7,9,10,5,4,7,-3,9,1,1,10,-3,3,-4,-6,-8,-2,4,-4,-1,8,-10,-1,9,10,7,4,-4,-5,3,-5,-8,-8,9,1,2,6,-10,-10,2,-3,-9,8,5,2,-9,-9,-3,7,-10,-10,8,6,-6,9,8,6,10,-3,-9,10,-3,5,7,8,2,4,7,-8,-10,-10,10,8,-1,-4,9,8,-5,7,-5,-3,-6,-7,-9,-5,-5,-7,-2,6,9,4,3,7,-5,2,-1,8,-4,-10,1,1,-4,-2,7,-2,7,-2,9,10,6,-5,9,-4,-2,5,4,9,6,6,1,-8,3,-1,-9,-8,5,2,9,-6,-4,4,6,-6,7,6,10,-6,-3,-5,8,-9,-7,6,9,-8,-4,1,-8,-2,8,4,-3,-1,9,-1,1,1,-3,5,10,8,-8,4,7,10,6,-5,6,5,6,-4,8,-7,4,-6,7,-10,3,10,2,7,-6,6,8,9,7,-1,1,-7,-9,-3,9,1,9,-1,-9,-8,-1,-7,6,-3,9,10,-1,7,2,-6,3,-2,-7,3,3,3,8,5,7,-6,3,8,-3,-3,5,5,-7,10,3,-1,7,-2,-5,-8,6,-1,-10,-2,4,-7,7,6,-10,-5,2,-9,10,-5,-10,-7,8,5,5,-10,-7,9,-6,5,3,-9,5,-5,1,10,-4,-8,-5,10,-4,-10,-7,2,-3,-1,8,1,-8,-10,6,-10,9,5,-1,-3,-7,-6,3,10,-5,-2,1,-8,-10,7,10,-8,-3,10,-10,-1,-7,1,-4,-6,2,-4,3,-1,10,-3,-3,-7,6,2,-4,4,9,1,-8,4,9,2,-10,9,9,8,4,10,-7,-7,7,-2,1,-4,4,-9,-6,5,4,-5,5,-6,-1,1,3,8,-3,8,6,1,10,3,2,3,3,10,-1,8,-5,9,1,7,10,6,-1,-7,10,8,-9,8,7,1,4,-10], dtype = "int32")#candidate|6989|(390,)|const|int32
call_6988 = relay.TupleGetItem(func_1893_call(relay.reshape(const_6989.astype('int32'), [13, 10, 3])), 0)
call_6990 = relay.TupleGetItem(func_1896_call(relay.reshape(const_6989.astype('int32'), [13, 10, 3])), 0)
output = relay.Tuple([call_6948,const_6949,const_6950,call_6966,const_6967,const_6968,bop_6984,call_6988,const_6989,])
output2 = relay.Tuple([call_6951,const_6949,const_6950,call_6970,const_6967,const_6968,bop_6987,call_6990,const_6989,])
func_6991 = relay.Function([var_6969,], output)
mod['func_6991'] = func_6991
mod = relay.transform.InferType()(mod)
var_6992 = relay.var("var_6992", dtype = "float32", shape = (108, 1))#candidate|6992|(108, 1)|var|float32
output = func_6991(var_6992)
func_6993 = relay.Function([var_6992], output)
mutated_mod['func_6993'] = func_6993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5670_call = mod.get_global_var('func_5670')
func_5672_call = mutated_mod.get_global_var('func_5672')
call_7005 = func_5670_call()
call_7006 = func_5670_call()
const_7024 = relay.const([[[1.804185,4.890701,4.505809,-0.180534,-1.951518],[-4.496496,-7.629973,9.575981,2.407667,2.697401],[7.422277,-3.925401,-9.386200,-8.889548,-6.426113],[-3.265697,-5.991793,-6.189423,-4.129920,-5.885938],[9.935710,-7.581969,-9.299723,3.773877,-8.748060],[7.178442,-2.618523,9.639022,-9.537662,-6.710498],[0.571276,-5.008425,7.808650,9.446514,-3.542606],[-0.652311,-6.306761,2.521619,-6.075490,7.318597],[0.690851,-6.214297,-0.850477,9.997151,7.054625],[7.251824,-8.710012,3.621952,-9.984531,0.338637],[-7.838561,-2.667464,0.809957,7.009884,6.303242],[-5.706688,1.815656,-2.923623,-3.664884,-1.441110]],[[-5.035152,9.125661,-8.090064,-7.572130,8.611882],[5.861349,2.770662,6.257286,3.015610,-8.266020],[8.528456,-2.821341,1.944468,-5.525431,-4.442719],[-0.322561,-9.746209,7.350449,-6.327114,1.712483],[9.389796,3.708360,-1.844595,9.490156,3.407695],[-3.139480,-0.297310,-7.283143,-6.366724,-8.279987],[6.517086,3.836363,-2.971907,-7.414961,-0.294099],[-3.012723,-5.642596,-9.107481,-8.317947,4.900974],[8.394142,-8.358527,-6.098209,7.499993,3.360795],[4.971338,-4.555147,-0.386822,9.588744,5.707468],[-4.425348,6.087786,4.251131,-9.292778,-0.407540],[-1.230996,7.553008,4.236118,2.686317,-6.315416]],[[-9.091277,7.446434,-5.134398,6.744420,7.587558],[0.154019,5.824664,-6.571486,-6.199716,-5.223508],[-2.686799,-3.622508,-3.326693,1.626895,2.955195],[-3.794251,8.432618,-8.089706,-1.704268,8.759713],[5.793653,8.314666,-5.909877,4.692966,-2.916036],[8.070687,-9.159595,9.170946,7.532339,-1.006921],[-7.863898,8.933597,0.321351,-8.806578,2.607688],[9.720022,-8.785258,8.713193,-7.866402,-3.069475],[9.552301,-9.949418,9.834124,-3.733008,-9.315813],[7.027462,1.692927,8.398577,1.848283,-6.219953],[0.779614,1.134672,7.036909,-1.568024,2.914400],[-4.101099,-5.768489,5.720174,-7.133870,5.478361]],[[-4.448697,-1.585066,8.418345,-0.914443,8.655175],[4.169288,-8.620098,-9.004141,-0.823612,-6.724285],[3.154763,-6.811109,5.491769,-4.992439,5.227021],[-9.627265,-0.400450,6.476071,-8.614626,-9.540180],[6.057527,1.020806,-4.427823,4.470369,-6.128851],[0.063210,-6.350198,-5.503726,8.374584,-2.072248],[-2.432694,-7.056567,9.466485,-6.429293,-4.729286],[8.545381,-1.639319,3.590357,-9.620795,6.682237],[-3.331975,5.456976,-6.868920,-5.594677,-1.746735],[-2.940181,-7.567169,6.067755,7.460984,7.665016],[8.305525,7.076398,7.776492,-3.673200,4.918120],[4.419827,-7.005757,-1.290438,-2.801176,-0.129906]],[[7.014049,9.752128,-0.179229,8.451028,-7.534469],[6.572724,5.830473,5.390772,0.945655,1.508652],[-1.738924,4.313172,1.431535,1.884113,-8.430035],[-9.693926,8.768942,5.632649,-4.524910,9.042997],[-1.197542,-8.572823,2.224972,-3.393701,-3.120242],[3.039055,-8.844856,0.994644,-2.366426,9.240006],[8.547526,1.007696,1.662791,-4.494476,8.435666],[-3.148281,-3.119803,-7.129908,5.083454,-5.193204],[-8.786322,-8.499599,-7.542250,-2.735939,-2.064272],[-0.115364,0.247869,-1.713712,-5.957002,-4.928138],[-5.251538,4.246223,-6.023546,-7.522290,0.048998],[9.347352,-4.167705,-1.019545,7.138536,-0.422928]],[[8.585806,1.622270,-2.639407,9.040580,-8.587767],[-9.820501,5.840600,9.943491,4.474375,4.892649],[7.128782,-1.144464,-6.207932,-6.704812,5.180691],[9.516575,4.219323,0.183497,3.596838,3.105839],[7.694972,-7.468135,0.099914,-9.418499,-6.987810],[9.097281,-6.948864,7.719085,8.678304,-3.735781],[-4.763521,6.336390,8.012988,5.756890,1.326894],[-0.139006,6.361406,9.001890,7.155549,1.978209],[1.917692,5.763196,3.905315,-0.520763,-2.586396],[4.697825,6.602158,7.635124,-2.970710,3.515838],[4.882568,-0.082138,-2.154537,5.998466,8.317530],[4.885906,-8.550450,-8.924444,-0.968558,-3.832647]],[[4.944472,4.401254,-1.995948,0.032684,-2.087500],[-9.170968,2.611283,-9.108849,9.976004,6.828214],[-2.184689,3.078315,8.789045,-6.725548,0.886528],[-5.282108,3.868456,6.107107,-2.674077,-6.146704],[0.022949,-5.887695,4.576337,-9.638908,3.625613],[8.195773,2.915167,-3.692026,-4.767044,-6.266601],[1.505537,-7.002183,-9.927057,-8.721853,4.280477],[2.455979,8.363424,2.475936,-2.295627,6.393569],[1.808108,-3.145623,-5.869708,7.520094,5.712820],[-9.530473,-6.021987,6.940517,-0.792382,-0.490513],[-3.878500,-3.725135,2.069274,-3.634772,2.721314],[9.202820,-5.377724,0.950944,-2.738824,7.953860]],[[-7.849810,-8.982466,1.001546,-8.677585,6.908969],[0.768806,-1.289487,-2.923155,4.135192,-0.600429],[-3.947279,0.434888,8.660144,7.791513,9.092752],[3.246361,-4.863736,-4.132471,-2.843821,5.969200],[7.900490,5.153658,-5.357724,-7.061754,3.128511],[6.164187,-6.936627,-5.300742,2.166221,-9.191785],[9.361754,7.134220,8.914676,2.700526,-1.754834],[-2.586450,4.993897,9.442109,2.268693,6.528194],[-9.737577,-4.091902,6.066005,-8.039732,3.347553],[7.227288,9.294117,-8.202962,-1.135421,-6.281186],[2.152938,6.070074,-8.529776,-9.784578,-4.155279],[-3.796493,-1.517939,5.679190,-8.153042,0.935304]],[[-8.181475,-5.176662,2.349001,3.789234,-5.523619],[-2.314250,-5.895278,-7.346922,-3.424093,-9.129517],[-6.099171,-3.119017,5.369500,-6.561187,8.792555],[1.101775,-7.879723,8.803665,6.320641,8.535363],[-9.364134,4.856117,4.879228,-6.063717,-5.836652],[-2.915039,3.290716,-5.603898,7.080766,-1.053826],[-6.774218,-6.653767,6.572514,-9.384498,-2.756937],[-1.775756,8.981354,5.664202,2.873453,-1.492313],[-3.930445,-0.005343,7.553953,5.310809,1.934054],[-4.522230,1.734370,-3.479980,-3.702061,5.488233],[5.514808,-2.274605,0.348672,6.118823,4.907951],[8.771305,6.278525,4.616167,-5.383746,3.218091]],[[3.451453,8.087286,-2.991684,7.036457,-2.674858],[-8.319568,6.467185,-0.081680,-8.096103,6.385884],[3.235038,-0.124937,2.641436,-9.806107,-4.633314],[5.561194,6.439741,-9.102747,4.398646,-0.878034],[9.671478,8.642179,4.163885,0.205037,6.431296],[6.512756,6.909560,9.596159,-7.370050,-0.387703],[9.647394,-7.817085,-9.203126,7.366605,-7.164548],[0.193247,-7.617600,-2.919525,-1.883589,7.584872],[2.607054,2.819545,-7.039596,7.675045,-5.840418],[9.382254,4.224914,-7.458521,0.278453,3.412104],[5.194442,7.641930,0.793722,-0.060055,3.376931],[-4.179310,-0.935193,-8.018999,-1.531896,1.615674]]], dtype = "float32")#candidate|7024|(10, 12, 5)|const|float32
bop_7025 = relay.greater_equal(call_7005.astype('bool'), relay.reshape(const_7024.astype('bool'), relay.shape_of(call_7005))) # shape=(10, 12, 5)
bop_7028 = relay.greater_equal(call_7006.astype('bool'), relay.reshape(const_7024.astype('bool'), relay.shape_of(call_7006))) # shape=(10, 12, 5)
func_5320_call = mod.get_global_var('func_5320')
func_5322_call = mutated_mod.get_global_var('func_5322')
call_7030 = func_5320_call()
call_7031 = func_5320_call()
func_5213_call = mod.get_global_var('func_5213')
func_5214_call = mutated_mod.get_global_var('func_5214')
call_7033 = relay.TupleGetItem(func_5213_call(), 1)
call_7034 = relay.TupleGetItem(func_5214_call(), 1)
output = relay.Tuple([bop_7025,call_7030,call_7033,])
output2 = relay.Tuple([bop_7028,call_7031,call_7034,])
func_7056 = relay.Function([], output)
mod['func_7056'] = func_7056
mod = relay.transform.InferType()(mod)
output = func_7056()
func_7057 = relay.Function([], output)
mutated_mod['func_7057'] = func_7057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6184_call = mod.get_global_var('func_6184')
func_6186_call = mutated_mod.get_global_var('func_6186')
call_7067 = relay.TupleGetItem(func_6184_call(), 0)
call_7068 = relay.TupleGetItem(func_6186_call(), 0)
output = call_7067
output2 = call_7068
func_7070 = relay.Function([], output)
mod['func_7070'] = func_7070
mod = relay.transform.InferType()(mod)
output = func_7070()
func_7071 = relay.Function([], output)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mod.get_global_var('func_4140')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_7117 = relay.TupleGetItem(func_4140_call(), 0)
call_7118 = relay.TupleGetItem(func_4141_call(), 0)
func_5862_call = mod.get_global_var('func_5862')
func_5864_call = mutated_mod.get_global_var('func_5864')
call_7119 = func_5862_call()
call_7120 = func_5862_call()
func_5729_call = mod.get_global_var('func_5729')
func_5730_call = mutated_mod.get_global_var('func_5730')
call_7126 = func_5729_call()
call_7127 = func_5729_call()
func_4562_call = mod.get_global_var('func_4562')
func_4563_call = mutated_mod.get_global_var('func_4563')
call_7139 = relay.TupleGetItem(func_4562_call(), 0)
call_7140 = relay.TupleGetItem(func_4563_call(), 0)
output = relay.Tuple([call_7117,call_7119,call_7126,call_7139,])
output2 = relay.Tuple([call_7118,call_7120,call_7127,call_7140,])
func_7144 = relay.Function([], output)
mod['func_7144'] = func_7144
mod = relay.transform.InferType()(mod)
output = func_7144()
func_7145 = relay.Function([], output)
mutated_mod['func_7145'] = func_7145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6504_call = mod.get_global_var('func_6504')
func_6505_call = mutated_mod.get_global_var('func_6505')
call_7162 = relay.TupleGetItem(func_6504_call(), 1)
call_7163 = relay.TupleGetItem(func_6505_call(), 1)
output = call_7162
output2 = call_7163
func_7195 = relay.Function([], output)
mod['func_7195'] = func_7195
mod = relay.transform.InferType()(mod)
mutated_mod['func_7195'] = func_7195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7195_call = mutated_mod.get_global_var('func_7195')
call_7196 = func_7195_call()
output = call_7196
func_7197 = relay.Function([], output)
mutated_mod['func_7197'] = func_7197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5063_call = mod.get_global_var('func_5063')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_7242 = func_5063_call()
call_7243 = func_5063_call()
func_2113_call = mod.get_global_var('func_2113')
func_2115_call = mutated_mod.get_global_var('func_2115')
var_7286 = relay.var("var_7286", dtype = "uint8", shape = (7,))#candidate|7286|(7,)|var|uint8
call_7285 = func_2113_call(relay.reshape(var_7286.astype('uint8'), [7, 1]))
call_7287 = func_2113_call(relay.reshape(var_7286.astype('uint8'), [7, 1]))
func_6855_call = mod.get_global_var('func_6855')
func_6857_call = mutated_mod.get_global_var('func_6857')
call_7292 = relay.TupleGetItem(func_6855_call(), 0)
call_7293 = relay.TupleGetItem(func_6857_call(), 0)
output = relay.Tuple([call_7242,call_7285,var_7286,call_7292,])
output2 = relay.Tuple([call_7243,call_7287,var_7286,call_7293,])
func_7297 = relay.Function([var_7286,], output)
mod['func_7297'] = func_7297
mod = relay.transform.InferType()(mod)
var_7298 = relay.var("var_7298", dtype = "uint8", shape = (7,))#candidate|7298|(7,)|var|uint8
output = func_7297(var_7298)
func_7299 = relay.Function([var_7298], output)
mutated_mod['func_7299'] = func_7299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7070_call = mod.get_global_var('func_7070')
func_7071_call = mutated_mod.get_global_var('func_7071')
call_7309 = func_7070_call()
call_7310 = func_7070_call()
var_7322 = relay.var("var_7322", dtype = "float64", shape = (10, 12, 5))#candidate|7322|(10, 12, 5)|var|float64
bop_7323 = relay.floor_divide(call_7309.astype('float64'), relay.reshape(var_7322.astype('float64'), relay.shape_of(call_7309))) # shape=(10, 12, 5)
bop_7326 = relay.floor_divide(call_7310.astype('float64'), relay.reshape(var_7322.astype('float64'), relay.shape_of(call_7310))) # shape=(10, 12, 5)
output = relay.Tuple([bop_7323,])
output2 = relay.Tuple([bop_7326,])
func_7339 = relay.Function([var_7322,], output)
mod['func_7339'] = func_7339
mod = relay.transform.InferType()(mod)
mutated_mod['func_7339'] = func_7339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7340 = relay.var("var_7340", dtype = "float64", shape = (10, 12, 5))#candidate|7340|(10, 12, 5)|var|float64
func_7339_call = mutated_mod.get_global_var('func_7339')
call_7341 = func_7339_call(var_7340)
output = call_7341
func_7342 = relay.Function([var_7340], output)
mutated_mod['func_7342'] = func_7342
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7344 = relay.const([[[1.385158,5.649161,8.690860,4.232879,-6.209439,5.309646,-4.337468,1.229558],[-6.663262,9.181986,7.783940,0.789571,-9.398783,8.478688,-9.102073,-4.003572],[9.085385,9.866990,3.135138,6.779818,8.045898,-8.808837,-6.589257,2.730701],[1.095887,9.818266,-8.338529,7.627937,2.813120,-8.810608,2.993497,-4.993756],[-5.335384,2.076480,-8.069865,5.246077,3.214367,-2.925249,3.409480,-8.877767],[-1.266835,-9.380214,2.970025,9.484273,-8.802401,-0.654210,-7.247820,4.074992],[-8.150496,2.737835,2.537773,-5.175159,-3.372579,-8.549243,7.577426,-0.710399],[-9.133972,-1.436377,-0.413621,-7.826140,4.336187,8.020753,3.192958,1.687215],[3.799535,6.638246,7.468494,-0.115751,-2.329346,-0.125525,1.286913,4.392545],[0.685411,9.576188,-8.766574,-5.495662,9.871283,1.140191,-5.867720,-6.487479],[8.074841,-2.798577,-0.726973,5.928165,3.789584,-4.785215,-2.917595,-1.205688]],[[9.741600,-6.349927,-5.651339,-0.674869,-5.360713,-1.758430,-3.579997,-2.028898],[-1.822702,-4.773125,8.050348,9.226802,9.943930,-5.982326,-7.163583,7.252652],[-2.541415,8.753814,8.493387,-3.220611,7.217896,-5.930339,-0.728365,-9.032309],[-4.378601,6.009734,-0.524849,-2.449924,-7.340458,1.297701,-8.939393,-6.172636],[-8.655141,1.321841,1.587840,1.810390,-8.968623,-3.463614,4.516639,-6.681858],[-2.033592,3.690613,-5.256113,-9.716492,-0.751761,5.395826,3.414043,-6.523587],[0.947764,4.188676,0.681549,-1.357455,-6.363158,-5.747758,9.208503,4.766962],[-1.958832,-9.572423,3.536276,2.461574,-1.226020,-4.853964,0.173600,-9.778162],[-9.127408,5.352564,-4.115505,6.325218,5.493417,-6.076743,-6.765912,-4.182752],[5.340666,-5.431179,2.861697,-9.095631,-6.686212,1.033524,9.898703,7.717128],[0.560775,-8.076721,-3.814444,1.765961,8.414298,-8.795985,1.016301,5.605966]],[[2.042170,9.018488,5.125768,-2.354970,-8.927464,1.852113,6.347839,3.155031],[-0.315814,3.079531,-5.790706,-3.733868,-8.875928,4.727065,8.117638,-0.258662],[-9.365746,8.877260,-7.440120,-4.777516,-0.188863,-6.094306,-8.296310,-1.240095],[7.987990,0.199779,-2.205925,-1.666813,-7.740313,0.918018,-3.263256,-2.797649],[6.817068,-4.125674,3.657773,0.899259,7.282597,-9.520294,3.195334,-1.672291],[-8.804914,-6.544754,1.861876,4.971353,3.625909,7.743107,0.130207,-8.147424],[5.270250,-0.650242,7.135721,-1.597222,1.885701,-1.518516,-5.587041,-3.136942],[-5.581470,3.384078,2.906520,0.860035,8.000339,-7.794935,-0.995197,-4.368562],[4.573449,6.077920,-2.934409,2.593466,-2.562619,-3.334098,-3.546262,8.742177],[-5.472896,-2.144811,4.832211,-2.325131,-5.991418,6.966732,1.013764,5.003470],[-0.518201,-4.738703,-0.878764,9.009508,5.683206,3.813470,-9.559968,9.635367]]], dtype = "float32")#candidate|7344|(3, 11, 8)|const|float32
uop_7345 = relay.asinh(const_7344.astype('float32')) # shape=(3, 11, 8)
output = relay.Tuple([uop_7345,])
output2 = relay.Tuple([uop_7345,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

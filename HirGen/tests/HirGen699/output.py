import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_84 = relay.var("var_84", dtype = "int64", shape = (11, 15, 4))#candidate|84|(11, 15, 4)|var|int64
const_85 = relay.const([[[10,-1,-6,9],[-9,7,-7,-8],[10,4,-4,-6],[10,-5,8,7],[10,10,3,7],[6,-9,-10,1],[-5,-7,-3,2],[-4,-8,-6,2],[-3,3,6,7],[3,-6,-3,4],[-9,8,1,5],[8,-10,10,-2],[8,6,-3,-7],[-9,9,7,1],[-2,10,-3,-1]],[[-10,-5,4,-1],[3,6,2,-2],[4,4,-5,-9],[-8,-10,-6,9],[-3,4,4,-10],[5,-2,-9,10],[6,-7,1,-5],[7,-7,8,8],[-2,9,-8,-10],[-4,9,-7,-7],[3,3,9,2],[-5,8,-4,-5],[7,-2,-2,9],[5,9,9,6],[-7,-5,-6,4]],[[-7,-5,7,9],[5,-2,-4,-4],[8,-2,9,-8],[-8,5,-1,5],[9,1,3,3],[-9,-4,-3,3],[-2,-10,-4,9],[3,-6,-3,4],[-5,2,-3,6],[8,-7,10,4],[-5,-5,5,1],[-8,-2,-1,6],[1,4,3,-6],[-1,3,2,-3],[4,-6,-2,6]],[[-7,4,7,4],[8,-2,7,1],[2,9,-3,-1],[-2,5,5,5],[-4,-9,-9,-10],[10,-7,1,-7],[1,-7,10,-1],[-4,-4,2,2],[-8,-6,4,3],[8,-3,7,-2],[-5,3,8,6],[2,2,1,7],[-2,8,9,-10],[-1,-5,-2,-7],[7,-10,3,6]],[[8,-9,-1,10],[-9,1,-2,-2],[5,-3,6,4],[1,-6,-10,10],[-2,8,-5,-1],[9,-2,-7,5],[-4,9,-10,1],[6,6,4,3],[6,3,10,-6],[8,-1,2,4],[-4,-6,-5,8],[8,7,-1,-10],[-4,8,7,-4],[-2,7,-8,-2],[6,-9,-8,-10]],[[10,-8,10,9],[9,7,-3,-10],[-3,-3,-7,-5],[4,4,2,8],[-3,-4,4,-6],[-3,8,1,3],[4,7,2,6],[6,9,4,-10],[2,2,7,9],[-9,6,-7,-6],[-6,4,-4,3],[8,10,7,-1],[-5,-7,8,-4],[4,-9,-8,4],[9,-1,6,-5]],[[-6,-8,-8,-4],[-3,7,8,10],[-9,3,-5,3],[-4,-9,8,5],[-10,7,-4,-10],[3,-8,-9,10],[-7,-7,-1,8],[-5,-6,-10,7],[3,-9,4,-4],[9,5,-10,5],[-2,-4,3,8],[9,-10,-4,1],[8,6,3,8],[-2,9,-10,3],[-7,4,-9,9]],[[-6,-6,-6,10],[1,8,6,6],[-1,-1,-1,4],[1,7,2,-7],[5,-1,-2,-4],[6,9,-10,-9],[-1,-5,-7,8],[8,-6,-3,1],[8,-10,-2,5],[8,8,-8,2],[-9,2,5,2],[9,-4,-2,-2],[-4,1,9,-1],[-2,7,-8,-1],[-4,-3,-3,2]],[[4,4,-8,8],[-1,7,-9,-6],[-9,-10,2,6],[-2,-6,-5,-9],[-4,-6,-1,6],[5,3,4,-4],[-4,2,6,3],[6,-5,8,1],[-6,6,-3,-9],[-4,4,-4,2],[3,-4,-1,-6],[-8,9,2,-10],[9,6,-6,10],[-9,-1,3,1],[-7,-4,3,7]],[[-9,-7,-8,-1],[-5,-9,-4,-3],[5,6,-7,-7],[-1,3,1,5],[-10,-2,1,7],[10,7,7,7],[-5,-4,-1,5],[10,-7,-1,10],[5,2,-5,4],[-5,1,2,-3],[-2,-9,6,6],[5,-6,6,-8],[9,-8,6,-2],[-4,2,3,-5],[2,10,2,-5]],[[-9,-1,-10,5],[8,-6,7,7],[4,-1,5,-4],[2,9,1,-10],[9,-5,-2,-8],[8,-7,5,8],[3,4,7,-9],[1,-4,-1,3],[8,9,-2,10],[-3,5,-3,7],[4,6,-9,-4],[-2,-3,5,-5],[5,2,-2,-7],[9,5,7,-8],[1,-6,-10,3]]], dtype = "int64")#candidate|85|(11, 15, 4)|const|int64
bop_86 = relay.equal(var_84.astype('bool'), relay.reshape(const_85.astype('bool'), relay.shape_of(var_84))) # shape=(11, 15, 4)
output = relay.Tuple([bop_86,])
output2 = relay.Tuple([bop_86,])
func_89 = relay.Function([var_84,], output)
mod['func_89'] = func_89
mod = relay.transform.InferType()(mod)
mutated_mod['func_89'] = func_89
mutated_mod = relay.transform.InferType()(mutated_mod)
var_90 = relay.var("var_90", dtype = "int64", shape = (11, 15, 4))#candidate|90|(11, 15, 4)|var|int64
func_89_call = mutated_mod.get_global_var('func_89')
call_91 = func_89_call(var_90)
output = call_91
func_92 = relay.Function([var_90], output)
mutated_mod['func_92'] = func_92
mutated_mod = relay.transform.InferType()(mutated_mod)
var_451 = relay.var("var_451", dtype = "float32", shape = (2, 14, 13))#candidate|451|(2, 14, 13)|var|float32
uop_452 = relay.atanh(var_451.astype('float32')) # shape=(2, 14, 13)
output = uop_452
output2 = uop_452
func_460 = relay.Function([var_451,], output)
mod['func_460'] = func_460
mod = relay.transform.InferType()(mod)
var_461 = relay.var("var_461", dtype = "float32", shape = (2, 14, 13))#candidate|461|(2, 14, 13)|var|float32
output = func_460(var_461)
func_462 = relay.Function([var_461], output)
mutated_mod['func_462'] = func_462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_870 = relay.var("var_870", dtype = "float32", shape = (6, 9, 9))#candidate|870|(6, 9, 9)|var|float32
var_871 = relay.var("var_871", dtype = "float32", shape = (6, 9, 9))#candidate|871|(6, 9, 9)|var|float32
bop_872 = relay.floor_divide(var_870.astype('float32'), relay.reshape(var_871.astype('float32'), relay.shape_of(var_870))) # shape=(6, 9, 9)
var_877 = relay.var("var_877", dtype = "float32", shape = (6, 9, 9))#candidate|877|(6, 9, 9)|var|float32
bop_878 = relay.subtract(bop_872.astype('float32'), relay.reshape(var_877.astype('float32'), relay.shape_of(bop_872))) # shape=(6, 9, 9)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
var_887 = relay.var("var_887", dtype = "int64", shape = (660,))#candidate|887|(660,)|var|int64
call_886 = relay.TupleGetItem(func_89_call(relay.reshape(var_887.astype('int64'), [11, 15, 4])), 0)
call_888 = relay.TupleGetItem(func_92_call(relay.reshape(var_887.astype('int64'), [11, 15, 4])), 0)
output = relay.Tuple([bop_878,call_886,var_887,])
output2 = relay.Tuple([bop_878,call_888,var_887,])
func_900 = relay.Function([var_870,var_871,var_877,var_887,], output)
mod['func_900'] = func_900
mod = relay.transform.InferType()(mod)
mutated_mod['func_900'] = func_900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_900_call = mutated_mod.get_global_var('func_900')
var_902 = relay.var("var_902", dtype = "float32", shape = (6, 9, 9))#candidate|902|(6, 9, 9)|var|float32
var_903 = relay.var("var_903", dtype = "float32", shape = (6, 9, 9))#candidate|903|(6, 9, 9)|var|float32
var_904 = relay.var("var_904", dtype = "float32", shape = (6, 9, 9))#candidate|904|(6, 9, 9)|var|float32
var_905 = relay.var("var_905", dtype = "int64", shape = (660,))#candidate|905|(660,)|var|int64
call_901 = func_900_call(var_902,var_903,var_904,var_905,)
output = call_901
func_906 = relay.Function([var_902,var_903,var_904,var_905,], output)
mutated_mod['func_906'] = func_906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_960 = relay.var("var_960", dtype = "uint64", shape = ())#candidate|960|()|var|uint64
const_961 = relay.const([[[10,2],[9,3],[-7,1],[-7,2],[1,5],[-9,-1],[10,-1],[-2,8],[-7,5],[-2,8],[-1,5],[5,-3],[9,2],[8,-1],[5,-7],[-1,10]],[[-3,5],[-3,7],[4,-1],[9,5],[9,8],[-1,6],[-10,-2],[7,-8],[6,6],[-8,5],[-4,1],[10,1],[-5,9],[-7,1],[-7,10],[-6,-4]],[[4,4],[-2,-4],[-5,10],[-4,7],[2,-3],[-10,-8],[-7,2],[-9,-6],[8,-4],[8,9],[-6,-1],[1,-8],[-3,-2],[5,-3],[-8,-6],[1,9]],[[3,-2],[-1,8],[-9,8],[6,-1],[-6,5],[4,-4],[3,9],[-5,5],[-2,-10],[-7,2],[7,6],[-5,6],[1,-3],[-9,7],[-8,-8],[-5,-2]],[[8,-3],[10,1],[-5,-3],[-3,2],[-10,8],[1,-3],[-2,-3],[-4,7],[6,-8],[-3,-6],[-5,1],[-9,3],[5,1],[9,-4],[-7,-9],[1,-4]],[[3,-5],[-3,9],[1,-8],[-10,-2],[-4,-10],[10,-5],[10,-7],[-9,-7],[-5,1],[3,-5],[-9,-7],[-8,3],[-3,-7],[8,10],[-4,-10],[-10,-5]],[[9,-4],[-7,1],[4,4],[-6,-5],[1,-1],[-2,8],[10,10],[5,6],[3,-8],[-6,6],[-6,3],[-7,-2],[8,7],[6,9],[3,5],[-7,2]],[[8,-2],[-9,-6],[7,7],[-8,2],[2,-10],[-7,2],[10,-8],[6,-9],[-9,1],[-9,1],[6,10],[6,-2],[1,7],[-10,-8],[6,-7],[3,9]],[[9,10],[-6,-4],[8,8],[5,-2],[-1,4],[8,2],[-7,8],[-9,4],[8,-5],[-4,9],[-2,7],[7,6],[8,9],[-4,-2],[4,-3],[-9,-10]],[[-2,1],[6,1],[7,7],[-9,9],[-5,-5],[-1,-1],[7,7],[-4,2],[6,3],[3,1],[-2,-1],[-3,8],[1,8],[8,-7],[7,10],[-5,-7]],[[-6,-10],[-4,7],[9,-9],[-8,-2],[-10,-1],[2,-5],[3,10],[8,8],[10,10],[-9,2],[-5,-2],[-9,4],[-7,-10],[-4,-9],[10,7],[-1,-3]],[[5,6],[2,-3],[10,2],[2,-7],[-2,9],[1,4],[-9,1],[-8,-10],[-8,6],[-4,-9],[-6,2],[-6,10],[-7,5],[-7,1],[-4,6],[9,-2]],[[2,-8],[-8,-9],[-7,-6],[-1,2],[-3,7],[-8,8],[3,3],[-1,10],[4,8],[-3,8],[-9,5],[-1,9],[4,8],[6,-5],[1,10],[2,5]],[[-8,-1],[1,2],[-6,-1],[4,10],[8,3],[3,3],[-5,-8],[-5,-4],[-6,-5],[-6,7],[4,6],[-2,5],[6,3],[5,5],[-1,6],[6,8]],[[-6,-8],[-7,-4],[-7,-8],[-7,-8],[-2,-4],[9,6],[2,5],[-5,9],[3,6],[4,-3],[-10,-7],[-6,2],[6,-7],[-5,4],[-9,3],[-9,7]],[[-10,3],[5,-5],[7,-2],[7,-2],[-9,-7],[-6,-2],[-9,8],[9,-1],[2,-5],[10,-2],[9,1],[-9,8],[-4,2],[5,4],[9,1],[9,9]]], dtype = "uint64")#candidate|961|(16, 16, 2)|const|uint64
bop_962 = relay.greater(var_960.astype('bool'), const_961.astype('bool')) # shape=(16, 16, 2)
output = relay.Tuple([bop_962,])
output2 = relay.Tuple([bop_962,])
func_965 = relay.Function([var_960,], output)
mod['func_965'] = func_965
mod = relay.transform.InferType()(mod)
mutated_mod['func_965'] = func_965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_966 = relay.var("var_966", dtype = "uint64", shape = ())#candidate|966|()|var|uint64
func_965_call = mutated_mod.get_global_var('func_965')
call_967 = func_965_call(var_966)
output = call_967
func_968 = relay.Function([var_966], output)
mutated_mod['func_968'] = func_968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1234 = relay.var("var_1234", dtype = "float32", shape = (3, 8, 2))#candidate|1234|(3, 8, 2)|var|float32
uop_1235 = relay.log2(var_1234.astype('float32')) # shape=(3, 8, 2)
func_900_call = mod.get_global_var('func_900')
func_906_call = mutated_mod.get_global_var('func_906')
const_1238 = relay.const([6.988217,2.332240,-6.875628,4.454008,9.414193,-9.643111,4.588011,2.227726,-6.629513,-9.030150,-5.033737,6.277019,7.768343,3.312386,2.671138,1.368200,7.686103,-6.534121,-9.049171,-1.342434,9.616156,6.049794,5.799052,-6.784483,8.043404,-5.892563,-3.356707,3.494960,5.040957,-2.961704,4.461382,7.371444,9.289653,0.931435,0.096555,5.615293,-4.437778,1.919428,-2.916699,8.760230,-8.480067,0.186649,-6.844027,3.390352,5.773296,-3.196607,9.401994,-6.898652,3.267396,-2.094259,2.888150,3.477640,-2.337465,-5.438004,9.370327,3.994837,9.383981,-7.059465,6.241954,-7.231040,-7.950642,-3.155911,-1.516808,-9.480576,-4.950098,4.818576,-2.769123,7.716281,6.632736,6.043632,3.480254,8.448295,-2.826674,-0.019482,4.673862,-9.253041,-4.894993,0.231076,2.174987,-0.986322,-7.926438,-1.402557,8.562735,-9.943161,8.889715,7.488909,-9.147784,8.646707,-2.237883,-4.643735,-7.056624,7.366690,2.397169,-7.280694,-1.359972,-9.390200,-5.572036,-2.140440,-7.063115,-7.300678,-6.821179,7.581378,-2.631569,4.281570,-4.594101,-2.426022,7.339085,2.998061,-9.219701,3.464630,4.734614,-4.818180,-4.442777,0.572542,8.715149,-9.398293,1.525226,-5.580010,0.086617,-6.179494,5.088747,-9.613633,5.738938,-3.456288,2.413876,-7.744585,4.112651,-8.654868,0.727364,5.958700,-6.992953,8.307794,5.526039,0.443317,6.008507,-6.627762,9.293779,4.080490,2.182069,-5.879249,-3.970583,4.160448,2.699764,8.900615,7.331453,3.474099,0.484055,5.149943,-2.772927,5.877897,-6.567223,8.536589,-2.224281,-4.831159,-0.877111,2.920779,-9.932798,-0.557588,-1.297369,-8.401894,-9.330144,0.668418,-5.088067,-8.768743,-3.719316,5.824842,-6.578387,-5.556298,4.835986,-1.485234,3.300551,-0.215979,-0.986926,-3.279504,2.048052,-8.022887,-1.458100,5.721692,-4.974235,-1.805318,4.248659,9.281588,-6.258133,-7.243227,4.777403,0.966420,-5.484400,-8.671518,-4.629998,-5.635258,8.216830,-7.780390,-9.311365,0.780251,4.165959,8.191643,0.670264,-3.755303,-8.220693,9.484248,4.418130,4.724870,7.919868,-4.600035,-9.447885,4.292374,1.626392,7.343630,8.310824,-2.426995,-7.220739,6.050248,9.533830,3.105226,-0.221206,1.738338,1.853650,-3.935119,-8.550485,9.940625,2.935884,-8.719975,-3.427165,-1.624709,-9.421629,-7.771382,5.990721,-7.347035,-2.793023,-8.208702,5.011312,-8.312138,-3.842715,4.358048,-1.824025,0.960627,9.075026,-1.748594,-5.714254,7.678740,-3.882536,1.355125,0.229990,-9.637943,-4.525346,-1.465858,-2.957828,-7.382133,3.140363,3.101357,-6.981444,7.809339,-4.694477,8.316443,0.764601,-1.524867,2.570443,2.690267,9.572921,-1.691057,-8.756083,5.624364,8.477867,-0.806932,8.019582,-3.533959,-9.625948,4.596425,-5.724198,7.370412,3.976821,7.672309,-6.136616,5.345346,-3.837644,7.447772,5.430165,1.569581,-5.571712,4.965444,1.387500,-3.694590,-4.607227,-2.216505,-4.828067,-3.337884,8.625887,-9.223364,-7.856637,-4.274923,1.149328,7.620200,-9.377341,-1.229495,-5.642190,6.481021,4.488892,-0.035219,7.239697,-0.322474,-4.084432,-9.293724,-8.654615,9.460507,-6.166505,6.001112,4.139028,-9.024529,0.762516,7.160948,6.081115,4.332296,-0.947270,-2.467757,9.807726,6.630485,9.897399,8.223723,7.327196,-4.429664,-6.412757,7.918763,-5.314175,-8.295788,-3.076875,-6.212058,-4.841659,0.097138,8.157477,-7.080536,-9.936581,-3.739297,6.291334,-4.150113,2.868906,1.419705,-3.638693,4.018335,-7.621451,5.760048,7.148688,-7.074058,1.821397,-5.990335,3.104333,8.836239,3.847787,9.101708,-5.550212,8.479393,-5.918797,9.564364,5.603208,-9.051559,-8.164644,3.724228,3.382348,8.219653,0.687596,0.007462,6.075513,-1.752366,-5.315229,6.058018,5.249783,-1.716217,8.764194,4.099944,6.753755,0.974491,0.648584,4.692466,-8.412994,2.000753,2.122868,1.173334,-7.620679,0.816671,4.726369,3.888705,8.267646,0.324057,0.769343,6.698777,-1.498467,3.923497,2.982233,-1.154454,4.933236,0.634143,-5.240449,0.752803,8.373014,5.535559,-4.609158,5.165751,0.004690,-1.800381,3.777724,7.174479,-2.389343,3.786377,2.828505,-7.030695,-0.695120,1.457225,-6.291568,1.187328,2.777635,-0.848395,4.432230,2.000164,-4.781355,7.957679,-0.023194,0.783873,6.203667,-0.321656,-7.553524,-4.189132,8.793072,7.272536,-6.585255,0.844844,-2.144607,7.653495,0.571609,-7.824506,4.418993,-3.578770,-6.075967,-5.772698,-6.574635,-8.904825,9.447205,9.537500,6.105124,-4.095472,0.945307,5.117942,-7.694979,2.733215,-5.443910,8.142308,-3.246235,9.604787,-4.466502,-3.572046,-1.691784,2.230120,4.550865,-6.429017,-8.736479,1.308455,-1.791364,5.012044,6.485638,5.929231,-3.557542,0.261184,-3.303720,6.835378,5.849928,7.373959,-4.063001,3.240936,-2.011293,-7.385499,7.748261,-4.737688,9.177664,-6.300791,7.465152,-8.656606,-8.157157,-8.327865,-7.849431,7.322879,6.297896,9.968405,-5.550521,-1.804421,8.467973,9.937328,-4.236296,-8.242874], dtype = "float32")#candidate|1238|(486,)|const|float32
var_1239 = relay.var("var_1239", dtype = "int64", shape = (660,))#candidate|1239|(660,)|var|int64
call_1237 = relay.TupleGetItem(func_900_call(relay.reshape(const_1238.astype('float32'), [6, 9, 9]), relay.reshape(const_1238.astype('float32'), [6, 9, 9]), relay.reshape(const_1238.astype('float32'), [6, 9, 9]), relay.reshape(var_1239.astype('int64'), [660,]), ), 1)
call_1240 = relay.TupleGetItem(func_906_call(relay.reshape(const_1238.astype('float32'), [6, 9, 9]), relay.reshape(const_1238.astype('float32'), [6, 9, 9]), relay.reshape(const_1238.astype('float32'), [6, 9, 9]), relay.reshape(var_1239.astype('int64'), [660,]), ), 1)
output = relay.Tuple([uop_1235,call_1237,const_1238,var_1239,])
output2 = relay.Tuple([uop_1235,call_1240,const_1238,var_1239,])
func_1241 = relay.Function([var_1234,var_1239,], output)
mod['func_1241'] = func_1241
mod = relay.transform.InferType()(mod)
mutated_mod['func_1241'] = func_1241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1241_call = mutated_mod.get_global_var('func_1241')
var_1243 = relay.var("var_1243", dtype = "float32", shape = (3, 8, 2))#candidate|1243|(3, 8, 2)|var|float32
var_1244 = relay.var("var_1244", dtype = "int64", shape = (660,))#candidate|1244|(660,)|var|int64
call_1242 = func_1241_call(var_1243,var_1244,)
output = call_1242
func_1245 = relay.Function([var_1243,var_1244,], output)
mutated_mod['func_1245'] = func_1245
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1247 = relay.const([[[6.606263,-1.023430,4.790526,-8.059643,-2.230379,-9.623585,-5.292205],[9.777783,6.928964,-8.632875,-8.657333,6.942461,5.942225,4.671002],[0.721044,0.654515,-0.094073,3.926912,4.168171,8.527114,-9.759494],[-4.460339,0.690329,5.740770,8.061346,1.208127,-2.158031,-1.069306],[-3.143195,-4.320248,-8.598452,-1.853460,6.197272,-8.184393,-5.816351],[7.603167,2.088618,0.732488,0.317031,5.539948,-0.407391,-3.955153],[5.367790,3.404519,-9.238121,-0.363178,1.679701,5.442995,-6.139846],[-5.711212,-7.526771,9.941718,0.805882,-5.352808,5.105181,-2.860653],[7.980230,-5.431709,4.210248,-0.038453,6.028982,-9.180566,4.439239],[-8.056348,1.801048,-8.287231,-2.207091,2.322749,-4.986067,-3.470013],[7.866385,-7.253657,-7.837114,9.164067,-5.498338,8.182597,-3.561727],[-0.337485,-1.931754,9.198454,5.448421,6.414805,-0.388586,-6.659838],[-8.585304,-8.629138,7.097825,-7.014597,-8.328402,8.282395,7.669336]],[[-4.995463,-8.578410,-7.528977,5.532848,-2.265400,1.260045,-8.037831],[-9.229369,3.856032,-0.573536,-9.678568,-4.447443,7.366676,-7.458149],[1.613707,0.260694,-1.274676,-0.838198,-3.463653,-9.873656,8.309126],[-9.554273,3.789020,-2.173633,-5.625708,1.043759,-0.750933,1.944382],[-6.505875,-5.555274,-0.448790,4.533304,7.000683,2.715724,-6.855827],[-7.982791,5.753873,6.981316,6.152114,4.920079,-8.357727,-4.055363],[-9.052442,-8.938128,7.662127,-8.709884,7.717356,-6.712849,-8.311954],[-8.314946,-9.438270,-1.376642,-0.298659,-6.706784,3.712360,3.316537],[-7.612392,-0.190650,0.843277,9.374711,4.050517,-2.944403,-7.509805],[3.104559,-2.071116,2.256121,-3.545553,0.797481,5.420719,-1.473291],[7.412887,1.018394,8.881192,1.406379,-0.965284,0.480924,-6.078108],[-8.198190,0.958058,7.236839,-2.313309,-1.635193,-3.661941,1.934885],[3.270593,-0.265384,7.024627,4.504286,7.730413,2.373854,0.796037]],[[2.413000,5.109813,-3.574256,3.552853,-2.796827,-9.671628,-0.739288],[-2.394643,7.268522,6.205540,9.435885,7.050756,2.232221,5.605434],[-9.981685,-0.052999,-7.512315,-6.620474,-6.059938,7.796943,3.533778],[2.654859,-8.307675,2.970497,4.851279,-5.468415,3.290966,0.982188],[-2.220992,9.501828,-7.193019,6.541390,9.388264,1.162472,3.378685],[1.127364,9.872648,4.490134,-4.700435,1.162682,8.249631,-9.251494],[4.861259,-2.665520,-9.223183,-9.667349,1.915448,-7.550451,7.182586],[-8.603044,-4.435748,6.100264,-1.483184,5.121862,0.664983,-2.278885],[-7.466484,8.133318,4.286887,-1.870019,-5.034892,-5.615859,-7.627991],[-6.309515,-5.582391,-0.107495,-2.697132,-2.661795,-1.933392,-5.244598],[-4.893411,5.927922,4.806124,-6.623241,-1.585859,4.055886,-9.163733],[-2.642496,-2.752107,-0.759644,6.861168,4.863937,4.238007,-5.968513],[6.812830,1.262619,2.032580,1.201352,-1.927258,0.868523,-3.824342]],[[3.465269,-6.905661,0.318574,-0.120444,-6.734281,-2.983806,-0.874777],[5.118110,-5.798382,6.355282,9.695426,-4.419243,8.795225,-1.624283],[1.155773,2.397301,0.729243,-6.567098,-3.865744,2.456097,-5.622958],[-3.000589,9.042840,5.045334,2.026774,7.931800,6.791195,1.532229],[-7.307248,-8.002475,-1.782229,-6.713556,5.837070,-2.694846,-5.498013],[-4.218060,3.889085,1.718986,6.193561,-9.964547,3.881030,4.046012],[3.487532,7.472014,-3.334964,0.320326,-9.310679,3.016019,-1.093025],[0.210380,1.356299,9.312503,2.974986,8.379742,1.245832,7.784591],[8.752720,-7.329082,9.142036,8.458199,4.267796,-2.320473,-6.074811],[2.042037,5.982904,9.915948,8.450197,6.074967,4.806197,1.893243],[5.576871,7.222007,9.311358,9.473035,-6.066564,-0.762597,-2.427940],[6.372013,-9.186729,0.743463,7.345619,-2.690084,-8.924408,6.439864],[-7.272819,-1.107471,9.571217,2.112798,7.880466,8.922369,4.400924]],[[9.474882,-9.999739,-4.885005,-0.272091,-4.343183,6.925801,-0.198324],[6.704725,8.697676,-7.618086,3.571797,-0.012778,-0.627234,6.607705],[5.654048,2.633141,-7.483843,7.129398,6.790736,6.646012,5.853787],[-0.934854,-3.992195,-0.316967,-1.746121,9.764387,-2.318912,-5.754500],[-9.551794,5.488119,-0.187395,-5.232388,-6.315163,3.668946,1.633128],[-5.971510,7.723895,-9.358535,-3.167383,-9.712234,8.591640,-1.116910],[5.332279,-9.550276,-5.416655,5.856016,8.271655,-7.755146,1.032457],[2.309006,-3.322638,2.659580,-2.676542,5.251053,-6.199845,6.224809],[8.294060,-5.058783,-1.232067,-6.872918,-1.042308,8.295407,-2.124063],[0.231027,-1.659215,-0.911226,-0.902383,-3.533980,-5.383722,4.829605],[2.162387,-2.117667,-0.779697,7.210479,-1.591772,-4.377343,3.737119],[-6.857794,2.963189,8.354993,-4.588527,-6.938262,-1.569024,6.315337],[-6.821377,2.721215,-8.306818,-8.041865,-0.898742,7.205101,-0.642683]],[[9.755184,-2.668918,0.456762,-3.456447,1.358348,-4.961697,4.579949],[-4.666331,0.985136,-6.648953,8.198790,2.366094,7.651463,5.503055],[-6.428578,-8.872132,-2.657745,6.138293,-0.538577,-2.418947,-2.323913],[4.266545,9.381581,-4.253238,-4.472955,-8.340497,9.076957,-7.577157],[1.482347,-3.058393,5.060037,-6.649532,2.409486,8.993643,3.321294],[0.612587,-2.635508,8.393370,-1.159053,6.292350,-0.384537,-2.753862],[5.399573,6.626271,7.706474,-3.621443,-5.304351,-5.696930,-8.682715],[-1.935608,1.665401,4.038322,-3.960920,-8.976790,-3.489791,-2.879185],[6.828305,4.513346,0.295198,7.312504,-4.182289,2.202938,-0.286656],[-1.854250,7.957383,-7.418552,-3.602922,-5.601039,1.566740,4.744892],[-6.029893,-5.592924,5.457234,-8.484379,-5.899814,3.886654,1.900250],[-5.482414,-2.761729,-3.765099,3.044219,-3.930240,-9.125346,-5.332906],[8.804633,-4.312493,4.043092,0.806309,-6.410821,4.249006,-8.209624]],[[7.982611,7.132897,9.924038,-4.791038,3.245621,7.768565,3.437567],[0.210167,3.005254,1.695009,-0.211280,-1.816783,4.689875,-4.993823],[-5.450132,8.268663,-6.839535,0.656121,-0.355455,-6.505965,1.557315],[-5.248398,9.989263,-9.002826,-2.448531,-7.198835,9.080465,9.196442],[9.050300,0.897744,-7.676085,5.837165,-3.555061,-8.229031,-9.553229],[-8.103240,-1.115867,-5.197291,-5.023621,-8.464675,7.001096,-9.068173],[-3.999178,8.476059,7.924577,2.946328,-3.919343,-5.413732,9.471754],[1.411446,6.701036,7.079527,-1.131467,-6.682313,-7.916336,-2.843185],[3.375797,-6.952424,-0.338320,-1.157846,0.356066,1.564159,-4.525811],[-4.033077,-6.924097,-4.214774,1.406350,-0.192493,5.236749,3.737993],[7.881330,2.996677,-5.419475,-0.554712,-2.794705,-6.679361,-4.165977],[8.776253,4.187520,-8.763413,1.238421,-4.885479,-4.045561,9.481157],[6.516344,-3.638633,-1.899143,0.721755,4.394981,3.228537,-2.547428]],[[0.478793,6.015050,-0.166575,-5.566058,-9.938909,7.685825,6.221200],[9.672933,4.563789,4.598536,-6.612695,-3.674753,-2.981424,8.029967],[4.795104,1.387481,6.264401,4.103039,1.948414,-3.522997,9.513690],[-0.469405,-6.485107,8.934559,-6.333200,4.568669,-2.959960,8.848950],[2.497376,-3.063274,-5.823841,-9.844080,-6.110360,8.736883,3.672658],[-1.903053,5.431064,3.364733,-2.742972,-7.386891,4.776750,8.405039],[8.925984,-2.684991,-7.450347,3.480605,-0.900096,-5.109613,9.140596],[4.214854,0.733689,4.934558,-7.534656,-9.272856,-5.980216,-3.883289],[-7.186553,1.301749,-3.146164,9.999790,9.654285,5.778721,-7.300073],[-4.561739,-4.432341,-4.740272,1.475174,-2.102596,0.505482,6.884782],[6.746288,8.483852,1.236848,6.984203,3.660067,-2.301987,0.353713],[-2.075687,2.203598,2.115295,-0.948720,-4.799050,-6.968584,-3.953078],[9.299829,3.946144,6.719981,4.605826,8.354248,-6.761072,2.459391]],[[7.458618,-1.315653,-9.334878,6.383376,9.621518,6.579445,3.837642],[6.312748,7.792096,7.200035,9.535294,-9.161283,-9.766644,-1.030196],[-1.528646,3.110080,-5.088084,7.332327,-4.436605,9.992858,2.901359],[0.737248,-5.666088,-6.857235,8.413802,-4.645333,-4.543695,6.360345],[-5.969568,5.470091,0.746008,7.411400,-6.401724,-3.529501,8.213181],[7.077427,0.498106,3.101771,8.212462,3.421746,-2.298423,3.701529],[-7.768717,0.771792,-6.349375,9.931403,3.218759,-4.988047,-5.674220],[-4.957027,-2.012180,-2.961821,-2.157384,1.079600,1.181699,6.485617],[-6.322156,-6.222912,6.945848,7.284856,-1.224621,-4.817364,7.352933],[6.295583,0.999506,4.146991,7.024667,0.424002,-6.168667,8.017003],[-6.673236,0.754548,-1.878084,2.682806,8.302206,4.346911,-7.542426],[4.646073,-0.007143,0.565205,0.047750,3.835007,-4.856237,-8.091279],[9.795688,-0.201652,-0.704478,-5.991374,3.796226,4.987034,8.499355]]], dtype = "float64")#candidate|1247|(9, 13, 7)|const|float64
uop_1248 = relay.erf(const_1247.astype('float64')) # shape=(9, 13, 7)
func_900_call = mod.get_global_var('func_900')
func_906_call = mutated_mod.get_global_var('func_906')
var_1260 = relay.var("var_1260", dtype = "float32", shape = (486,))#candidate|1260|(486,)|var|float32
var_1261 = relay.var("var_1261", dtype = "int64", shape = (10, 66))#candidate|1261|(10, 66)|var|int64
call_1259 = relay.TupleGetItem(func_900_call(relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1261.astype('int64'), [660,]), ), 0)
call_1262 = relay.TupleGetItem(func_906_call(relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1261.astype('int64'), [660,]), ), 0)
func_900_call = mod.get_global_var('func_900')
func_906_call = mutated_mod.get_global_var('func_906')
call_1269 = relay.TupleGetItem(func_900_call(relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1261.astype('int64'), [660,]), ), 1)
call_1270 = relay.TupleGetItem(func_906_call(relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1260.astype('float32'), [6, 9, 9]), relay.reshape(var_1261.astype('int64'), [660,]), ), 1)
func_965_call = mod.get_global_var('func_965')
func_968_call = mutated_mod.get_global_var('func_968')
var_1285 = relay.var("var_1285", dtype = "uint64", shape = ())#candidate|1285|()|var|uint64
call_1284 = relay.TupleGetItem(func_965_call(relay.reshape(var_1285.astype('uint64'), [])), 0)
call_1286 = relay.TupleGetItem(func_968_call(relay.reshape(var_1285.astype('uint64'), [])), 0)
output = relay.Tuple([uop_1248,call_1259,var_1260,var_1261,call_1269,call_1284,var_1285,])
output2 = relay.Tuple([uop_1248,call_1262,var_1260,var_1261,call_1270,call_1286,var_1285,])
func_1292 = relay.Function([var_1260,var_1261,var_1285,], output)
mod['func_1292'] = func_1292
mod = relay.transform.InferType()(mod)
mutated_mod['func_1292'] = func_1292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1292_call = mutated_mod.get_global_var('func_1292')
var_1294 = relay.var("var_1294", dtype = "float32", shape = (486,))#candidate|1294|(486,)|var|float32
var_1295 = relay.var("var_1295", dtype = "int64", shape = (10, 66))#candidate|1295|(10, 66)|var|int64
var_1296 = relay.var("var_1296", dtype = "uint64", shape = ())#candidate|1296|()|var|uint64
call_1293 = func_1292_call(var_1294,var_1295,var_1296,)
output = call_1293
func_1297 = relay.Function([var_1294,var_1295,var_1296,], output)
mutated_mod['func_1297'] = func_1297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1403 = relay.var("var_1403", dtype = "uint32", shape = (9, 10, 8))#candidate|1403|(9, 10, 8)|var|uint32
var_1404 = relay.var("var_1404", dtype = "uint32", shape = (9, 10, 8))#candidate|1404|(9, 10, 8)|var|uint32
bop_1405 = relay.equal(var_1403.astype('bool'), relay.reshape(var_1404.astype('bool'), relay.shape_of(var_1403))) # shape=(9, 10, 8)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
const_1416 = relay.const([-10,5,-1,5,-8,-10,-8,5,9,-7,4,-1,1,-7,8,2,10,2,-4,9,-10,2,-3,-3,8,5,-2,-4,-4,-1,4,-8,1,-8,-7,-8,6,-8,-8,5,-1,-10,7,-7,-5,-3,4,-3,-3,9,-8,8,6,4,7,1,-10,-4,-5,9,-1,-8,8,-1,4,3,-8,7,9,7,-3,-5,-9,1,1,-1,6,9,-3,-7,4,-1,4,-4,9,8,-2,-4,-3,-3,7,-7,5,7,10,-7,5,-5,-5,-2,4,8,-5,5,9,2,-3,-9,9,-8,-1,3,2,6,1,-2,10,-1,2,4,-5,7,9,4,-3,9,7,1,2,-5,-5,-7,6,-1,3,10,-2,-6,3,9,2,2,-1,-9,2,7,-4,2,2,8,9,-5,-7,3,1,-7,-1,-4,-4,5,-10,3,7,-4,1,6,2,-10,-10,-10,-5,4,8,8,3,-9,-6,-5,-8,-1,2,8,7,-4,10,-8,3,-3,-9,4,-4,5,5,-2,8,3,-1,6,8,-4,4,-3,3,-7,-7,-6,-5,-1,-8,3,-6,-8,7,6,-3,-2,-4,3,1,2,2,8,-7,-8,-2,5,-7,-5,-6,-8,1,6,-6,-5,-9,-4,-2,-10,9,-6,-9,1,3,-2,6,9,-1,5,4,-6,-6,7,3,9,-5,5,5,2,1,-8,-6,-8,-4,6,-2,4,-3,8,-6,9,1,7,-9,7,-5,-9,-3,-9,8,6,10,-10,9,-8,-4,-10,1,4,-6,-10,-7,3,-5,-9,-8,5,-5,2,4,2,-8,-4,8,1,-8,-7,1,4,-2,9,8,-9,-10,8,10,-1,-10,7,4,4,-8,-6,10,-5,5,-2,7,-7,-2,-10,-4,-1,9,-4,6,4,8,-3,1,1,-1,10,-6,-4,1,1,6,-10,9,-7,-2,9,2,-10,-9,3,-6,7,-8,-2,-4,4,4,8,-6,8,-5,-7,8,-3,8,6,-7,-8,3,-5,3,-10,3,-2,-10,-6,5,5,-1,-10,-2,-5,-1,-5,-4,-1,2,-6,9,4,8,8,3,9,-10,5,7,-3,4,1,2,7,-5,-9,-10,-6,2,10,-7,-9,9,-3,7,-3,5,1,9,-1,8,1,-10,-4,2,8,-4,10,-3,10,-6,1,10,-9,9,-5,8,6,-4,-2,8,-10,7,8,1,-1,10,10,-5,8,1,-2,-9,8,-1,-2,10,-1,-9,8,4,9,-3,-5,8,-4,-5,9,-7,9,-7,4,2,4,-2,-3,4,-2,1,-9,1,9,10,-1,-4,4,9,7,-3,5,7,-4,2,-10,-5,3,2,3,-9,-10,3,2,-2,-5,4,-2,10,2,4,-2,-2,-7,6,-8,-2,-7,4,7,2,3,-2,7,-3,-1,-2,9,9,-10,-6,1,1,-3,9,3,1,-7,4,-2,-2,5,-7,2,8,2,-2,-2,-3,8,-4,-3,-8,8,4,-9,5,4,8,-10,8,2,5,3,-10,1,-1,-9,-5,-2,-6,-9,7,-5,-9,-5,4,-7,3,8,10,-5,4,-1,-10,-9,-8,-9,2,-1,-8,-8,-4,-3,6,8,3,-6,-9,5,3,-10,-4,5,-3,-7,-5,-3,-1,-5,10,-2,9,9,8,-1,-1,2,-10,-9,5,5,-4,-8,7,-3,-9,3,4,7,-7,1,-9,-1,-3,-3,-10,-10,-9,9,-4,-6,-7,10,-10,-1,7,-4,6,7,-10,10,1,2,8,7,-6,-2], dtype = "int64")#candidate|1416|(660,)|const|int64
call_1415 = relay.TupleGetItem(func_89_call(relay.reshape(const_1416.astype('int64'), [11, 15, 4])), 0)
call_1417 = relay.TupleGetItem(func_92_call(relay.reshape(const_1416.astype('int64'), [11, 15, 4])), 0)
output = relay.Tuple([bop_1405,call_1415,const_1416,])
output2 = relay.Tuple([bop_1405,call_1417,const_1416,])
func_1418 = relay.Function([var_1403,var_1404,], output)
mod['func_1418'] = func_1418
mod = relay.transform.InferType()(mod)
mutated_mod['func_1418'] = func_1418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1418_call = mutated_mod.get_global_var('func_1418')
var_1420 = relay.var("var_1420", dtype = "uint32", shape = (9, 10, 8))#candidate|1420|(9, 10, 8)|var|uint32
var_1421 = relay.var("var_1421", dtype = "uint32", shape = (9, 10, 8))#candidate|1421|(9, 10, 8)|var|uint32
call_1419 = func_1418_call(var_1420,var_1421,)
output = call_1419
func_1422 = relay.Function([var_1420,var_1421,], output)
mutated_mod['func_1422'] = func_1422
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1426 = relay.const([[[-5,-4,-2,-7,2,-8,4,-6,-9,-9,8,2,10],[-8,-7,8,1,-4,6,5,-3,9,-2,-6,-1,7],[-7,-5,-9,1,-6,-7,2,10,-5,4,-8,5,-7],[9,6,-9,5,9,1,-1,10,3,-1,9,-10,4],[-7,7,2,6,-4,-10,-3,4,-10,10,-4,3,8],[3,-9,5,8,2,8,7,-2,-10,7,-8,10,10],[-5,-1,-6,-10,-3,-3,-6,2,-10,7,-7,9,-10],[2,7,6,-4,-4,1,-7,8,5,4,2,-6,8],[-4,7,3,6,1,9,-8,8,-6,2,-7,-2,2],[-5,-10,10,-9,10,8,2,-7,-5,-6,2,1,8],[9,-9,1,-9,-8,-5,-8,10,2,-5,7,-3,4],[4,9,3,1,1,7,-5,1,-5,6,6,1,6],[-1,10,-2,1,8,1,8,-3,4,-2,-9,-5,-4],[2,2,1,7,-1,6,2,7,-3,-7,-10,4,5],[8,-10,-1,-8,-10,-8,-10,6,10,10,-3,-10,1],[9,-1,1,-2,-4,3,8,10,-2,3,-6,8,-8]]], dtype = "uint64")#candidate|1426|(1, 16, 13)|const|uint64
var_1427 = relay.var("var_1427", dtype = "uint64", shape = (11, 16, 13))#candidate|1427|(11, 16, 13)|var|uint64
bop_1428 = relay.bitwise_xor(const_1426.astype('uint64'), var_1427.astype('uint64')) # shape=(11, 16, 13)
output = bop_1428
output2 = bop_1428
func_1434 = relay.Function([var_1427,], output)
mod['func_1434'] = func_1434
mod = relay.transform.InferType()(mod)
mutated_mod['func_1434'] = func_1434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1435 = relay.var("var_1435", dtype = "uint64", shape = (11, 16, 13))#candidate|1435|(11, 16, 13)|var|uint64
func_1434_call = mutated_mod.get_global_var('func_1434')
call_1436 = func_1434_call(var_1435)
output = call_1436
func_1437 = relay.Function([var_1435], output)
mutated_mod['func_1437'] = func_1437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1787 = relay.var("var_1787", dtype = "float64", shape = (3, 10, 10))#candidate|1787|(3, 10, 10)|var|float64
uop_1788 = relay.atanh(var_1787.astype('float64')) # shape=(3, 10, 10)
bop_1814 = relay.logical_or(uop_1788.astype('bool'), relay.reshape(var_1787.astype('bool'), relay.shape_of(uop_1788))) # shape=(3, 10, 10)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_1839 = relay.const([-3,4,10,1,1,-4,1,3,-4,-10,3,6,-7,7,-1,-2,3,-10,-6,-2,-8,9,2,7,-3,6,1,9,-4,5,-3,2,3,-8,-5,-5,-9,-10,-6,-7,-4,-6,7,-4,-6,-6,6,-2,2,-7,10,-7,4,-10,-4,1,3,4,5,-1,-7,-9,-7,-9,2,-3,7,3,-9,2,-1,-3,2,-2,-7,9,2,-4,-10,-5,8,7,9,-7,-3,4,-3,8,-8,4,5,-7,1,3,6,-6,-7,-10,-4,-7,-9,3,-9,9,1,-3,7,3,-3,1,-4,4,1,8,-4,-4,-7,6,6,-3,9,5,-8,-3,-3,-10,3,-8,9,-2,4,-7,5,-7,9,9,-8,5,1,6,-4,2,-10,4,10,-2,1,3,3,6,2,3,10,-5,-7,6,7,9,-8,-7,-8,-1,8,-7,-6,4,-10,9,4,2,4,3,4,7,6,10,-2,-4,-7,-3,6,2,-4,-8,4,10,-10,9,6,7,1,5,-8,-6,-2,9,-8,-5,-1,-1,-5,-3,3,-10,-8,-10,-6,-4,7,-1,-3,-6,1,-3,6,-7,6,-7,-2,9,-6,10,-7,-6,6,-3,8,-8,-3,-1,-9,-2,-8,8,-8,9,8,-5,4,9,-1,-7,-4,-7,-9,7,-9,-5,-8,7,9,-9,7,-2,-5,1,7,-6,4,-9,-4,-1,5,-1,8,-10,-4,-4,3,2,-10,6,10,10,5,-6,-6,-3,-4,8,2,9,-7,9,-8,9,-5,-5,9,10,5,-5,7,-5,-4,-3,1,4,-4,7,5,1,-5,6,4,-7,4,-1,4,1,9,4,-5,-7,3,-2,1,10,-2,9,-4,4,-10,10,10,-2,7,-8,-6,1,8,10,9,-5,-8,-6,1,-2,-4,9,-6,-3,-8,-3,-6,6,10,-3,-5,9,-3,6,4,8,-10,1,7,7,7,-10,6,6,9,4,-10,-7,-9,-10,1,-8,5,5,5,7,-3,4,-2,-5,2,7,6,6,7,6,-3,8,-6,-8,-6,5,-2,9,9,-5,7,4,5,7,-3,-1,9,-4,6,-8,-7,-2,-1,-2,-8,1,8,9,5,-7,-10,7,-2,6,3,8,6,2,4,-8,-3,-8,-6,6,2,4,-4,1,1,1,1,7,-3,5,-3,10,3,6,-6,3,-6,9,-7,7,8,-6,-9,-8,-2,-2,5,-10,1,-8,-10,6,-9,7,7,-3,-2,-6,2,5,-5,10,10,-10,9,9,-10,-5,-10,-4,6,4,8,1,3,5,-5,-10,6,8,-8,5,4,9,-2,-2,10,-6,-5,-8,3,8,10,-10,8,4,-9,-7,8,-8,7,-9,-8,-5,10,-3,7,-8,9,-5,-10,-6,5,1,-7,4,-10,3,7,-1,1,9,-5,-7,7,-3,1,5,3,1,-6,6,-7,-6,-6,1,-2,9,7,2,-10,-2,-6,-6,4,9,-2,8,5,-6,-2,2,5,-1,-9,-8,-10,9,7,7,3,-1,-2,-8,4,9,9,10,-3,8,-6,1,7,5,7,5,-7,-9,-9,5,-9,9,-6,-1,2,2,-8,-5,7,10,2,-4,-4,-8,-7,4,9,-3,-6,5,6,7,4,-10,4,3,-5,-2,1,10,3,4,-1,7,3,-5,-3,6,6,6,-6,-3,7,8,5,6,5,-10,-10,4,-10,6,-3,1,-6,7,-8,-3,-6,-5,-10,-1,-4,3,-9,-9,8,-4,-6,10,2,6,-10,6,-9,-8,-3,-7,-9,1,7,-9,-3,-8,8,3,-7,-9,-7,4,-6,-6,-1,-6,-3,-10,-4,5,-2,8,-3,9,9,7,-2,1,-3,-7,-10,-7,-9,-3,-8,2,-3,9,1,-4,-5,-4,1,-5,2,9,4,-3,2,5,6,9,8,-3,-9,9,7,-3,9,-3,1,-3,7,-9,3,9,3,-7,10,-2,-7,3,4,-2,-5,6,-6,-2,-4,-2,-6,4,-10,2,1,7,7,-1,5,6,8,-5,-8,5,-7,-8,-7,2,-5,7,8,-5,-5,6,8,1,3,-10,2,-4,2,4,6,9,10,-9,-10,-5,-9,-7,4,-4,-6,9,-10,9,-5,-3,8,-4,8,9,8,-4,-9,-5,-1,-2,-3,-6,-6,-5,9,3,10,8,-1,-5,-2,-7,2,-4,10,1,-8,8,-6,-4,1,-4,7,8,-10,-8,-3,-5,-8,9,6,-3,9,-8,-4,-1,2,-5,-7,6,5,-2,-10,1,-6,7,-2,-6,-2,7,-9,-9,2,-9,-7,8,2,8,5,-9,10,2,-6,3,5,2,-8,4,-6,-1,-1,-3,-7,4,-10,4,10,-4,-6,-4,8,-6,10,-6,-4,-9,6,-5,-3,-6,3,5,-7,10,7,-4,-2,1,2,-8,4,1,-9,6,7,-5,3,-4,10,-2,9,-3,-6,-5,-2,5,10,10,4,1,8,-4,7,-9,-1,5,-7,-3,3,-3,10,-2,6,2,-6,1,-1,2,2,-9,2,-7,2,-6,-7,-1,9,-9,-3,-6,4,-2,-4,-6,-8,1,9,-1,-7,8,-7,1,10,2,-1,-4,-8,1,-1,-6,2,-10,-5,-1,-9,-6,-10,4,-7,5,7,-4,-6,-4,-3,-7,-2,-3,-8,-1,7,-3,6,-9,8,-2,3,-1,-2,5,7,-8,9,-6,-10,-1,-4,-4,-6,5,6,10,-3,8,5,-9,-7,3,-10,10,8,7,-10,4,3,-9,-5,8,-7,3,2,-6,9,-7,-10,9,10,10,4,-3,3,5,10,-8,-10,1,-3,10,-8,-10,-4,4,2,4,-10,-4,1,-1,-1,-8,-9,2,7,3,1,-4,4,-10,4,4,-3,6,-8,-4,7,-9,-2,8,2,-3,-7,-7,4,7,1,3,2,9,8,8,-5,4,5,-7,3,2,-6,3,6,2,-5,-3,-6,-6,6,-2,10,-10,-7,-4,6,4,-4,-6,7,10,-2,-9,-7,-3,-9,-8,10,-6,5,-9,7,-7,-10,-3,-10,9,10,-10,-2,-2,7,-2,9,6,-9,7,10,-10,8,7,8,1,5,5,-6,10,8,-2,1,1,7,-7,3,-7,-1,-10,-10,9,6,-3,-10,8,5,4,-10,-6,-2,-3,-10,-7,-3,-2,-2,10,-4,10,8,-1,-10,10,10,8,-1,-9,9,4,5,-9,-4,6,-4,1,4,4,8,5,-10,-2,-4,-1,-6,-7,10,9,6,3,2,1,-9,2,-9,-7,-10,1,7,4,-9,-6,8,-5,1,-4,4,-8,10,-2,5,-1,6,8,8,-9,-5,-7,10,-9,4,1,1,-2,-9,2,-4,10,7,-5,10,-3,1,-1,-4,2,-6,-5,-4,9,-1,-1,6,-5,9,-9,6,-5,-3,-7,-9,-6,-4,3,10,-5,-5,-6,-8,-5,10,8,-7,2,1,1,-10,4,-8,6,-7,8,7,-2,-4,-2,2,-4,-4,2,-8,5,8,6,4,-5,-2,4,9,-2,4,1,7,6,-2,7,9,-9,-1,4,-6,-8,-4,-6,8,-7,-6,-8,-4,4,-1,7,5,9,-1,-3,4,5,-4,2,-3,-6,-9,-3,9,10,-10,-1,3,3,3,-10,9,-4,8,-7,-6,1,-5,10,-10,5,-5,9,6,-1,9,-3,-9,-1,2,-10,-1,4,3,-2,-2,5,3,7,-5,8,4,-4,10,-1,-3,3,-10,-10,10,-8,-8,4,-6,-3,-1,-8,-2,-7,-8,-7,9,-5,-6,2,6,10,2,7,5,2,1,-3,2,7,10,9,5,-8,8,9,-1,-9,-3,2,6,-7,6,10,-4,8,-3,3,2,1,3,-3,8,-7,8,-2,5,-1,-1,-9,-10,-9,5,-10,-5,-6,-10,-5,10,-1,3,-5,3,1,9,-9,8,-1,-1,-7,-4,7,1,2,5,-4,-9,9,6,-7,10,3,5,-1,7,-5,1,4,-5,5,-2,-10,-5,2,-9,-6,5,8,-5,6,-7,4,-2,-9,-9,-9,-1,-1,-8,-8,3,7,-5,-8,4,-6,-5,-8,-1,4,-9,-2,-1,-7,-7,5,10,8,9,-10,1,3,-6,-3,-7,-8,1,5,2,-1,8,9,-2,-5,-4,-3,9,-1,8,-4,2,-1,2,6,-9,-5,7,-3,10,7,3,6,-9,-8,10,3,-6,6,-10,3,1,4,-1,-4,-7,4,-2,-3,-7,7,-5,-1,5,-10,-10,-4,-3,9,-7,5,-6,7,9,-9,1,6,-8,-6,4,6,10,-7,10,5,10,3,-8,4,-10,-6,8,-8,10,-7,-1,10,-5,-4,-4,-2,10,-10,6,8,4,-9,-5,-1,3,9,5,5,10,-6,-10,-9,-6,9,-3,-9,10,-1,7,1,-10,-3,-4,4,2,8,-8,2,-6,-7,-7,-5,-6,-5,-8,2,1,-4,6,8,-10,9,3,-4,-10,7,-7,8,1,-6,-2,-1,-4,7,-3,-7,1,-10,7,3,-7,7,-7,9,2,8,-2,8,-4,-7,2,-1,-1,-5,-7,6,-1,7,-1,5,-2,7,4,1,10,6,-3,5,9,2,10,-1,-2,8,-5,-5,8,2,-7,9,-2,-1,3,10,-8,8,-10,-9,-7,4,-10,2,2,7,8,9,2,-6,-8,4,9,-1,3,1,-7,-4,5,4,-10,9,10,10,7,-6,6,-10,4,-4,-3,8,2,-8,8,4,-4,7,-10,5,-7,-4,-1,-8,6,-3,-8,9,-3,-7,-9,-10,-6,9,4,-5,5,3,-4,2,-4,-8,-5,2,-6,-10,4,1,5,-5,-4,-1,10,4,7,-5,-2,-5,2,7,-8,4,-5,1,-3,-10,-9,-5,-8,-4,-6,8,-9,-4,-10,-8,6,-10,7,10,8,-8,-2,5,-3,-5,-5,4,5,7,-9,-4,9,5,-5,-9,-6,7,1,7,10,-4,4,9,7,3,-2,-10,-10,8,-3,-8,3,6,9,1,-5,4,-2,9,10,-5,10,3,4,7,8,6,-1,7,-6,-9,3,2,-6,-7,4,9,9,6,-1,9,-10,-1,7,-3,8,6,5,9,9,-10,-7,-9,-10,10,-9,3,3,-10,-3,5,-5,5,9,5,-9,2,-3,2,5,-7,10,2,3,6,-5,9,4,-1,-7,2,1,-4,3,10,-8,10,6,-3,-6,-6,2,10,-9,-8,7,-4,3,5,-4,4,1,-7,-8,7,-9,-4,6,6,6,4,5,-6,-6,2,5,1,2,6,-10,5,-3,2,-4,9,-4,7,-10,6,3,7,6,7,-6,1,3,-5,6,10,-6,3,-1,-9,-3,-1,5,-6,6,2,-4,7,-8,6,2,5,6,-9,-6,9,5,6,6,2,5,5,6,9,-6,9,2,9,-10,4,-7,7,-3,-4,7,2,-10,1,8,-2,-6,6,3,-7,-4,-10,6,-4,2,-7,-4,1,7,-1,-4,3,4,-10,-5,-1,-10,1,-8,-2,-3,-7,1,10,-2,2,4,5,-5,6,-2,8,-7,5,-1,4,-9,10,9,-7,-3,-6,-6,-6,6,10,8,-9,6,8,2,-3,3,2,-5,4,9,4,8,8,-1,-1,8,-4,3,-2,-4,-9,-8,10,1,-1,3,-8,7,-7,6,-7,-8,-9,-3,-8,-5,3,-8,-9,8,-9,-7,-1,3,-1,6,3,1,4,2,10,-9,-3,9,-5,-1,-7,1,1,8,5,3,9,-10,7,-7,1,3,4,-3,-8,-5,-3,5,-4,-7,6,-9,-4,-9,2,2,-3,-5,-9,-10,-5,2,-3,1,9,-6,-9,-1,5,6,8,-1,4,-10,6,-8,4,8,-6,-3,-8,9,6,-10,9,-8,-3,8,7,-8,7,-6,7,-8,-5,-7,2,8,-7,-8,-4,5,-7,5,-10,-1,-1,10,2,-1,9,-8,8,-10,4,-3,-6,6,-9,9,3,8,6,-2,-6,-3,-4,5,-9,-7,2,-3,-6,2,-9,-9,-9,-6,5,-3,-2,-5,9,8,-6,1,3,-6,3,6,-7,6,-4,-2,2,-1,4,-1,-7,-9,4,-10,-5,7,4,-2,8,10,-10,-10,-10,9,6], dtype = "uint64")#candidate|1839|(2288,)|const|uint64
call_1838 = func_1434_call(relay.reshape(const_1839.astype('uint64'), [11, 16, 13]))
call_1840 = func_1434_call(relay.reshape(const_1839.astype('uint64'), [11, 16, 13]))
uop_1842 = relay.exp(call_1838.astype('float64')) # shape=(11, 16, 13)
uop_1844 = relay.exp(call_1840.astype('float64')) # shape=(11, 16, 13)
uop_1845 = relay.acosh(uop_1788.astype('float64')) # shape=(3, 10, 10)
output = relay.Tuple([bop_1814,const_1839,uop_1842,uop_1845,])
output2 = relay.Tuple([bop_1814,const_1839,uop_1844,uop_1845,])
func_1853 = relay.Function([var_1787,], output)
mod['func_1853'] = func_1853
mod = relay.transform.InferType()(mod)
mutated_mod['func_1853'] = func_1853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1854 = relay.var("var_1854", dtype = "float64", shape = (3, 10, 10))#candidate|1854|(3, 10, 10)|var|float64
func_1853_call = mutated_mod.get_global_var('func_1853')
call_1855 = func_1853_call(var_1854)
output = call_1855
func_1856 = relay.Function([var_1854], output)
mutated_mod['func_1856'] = func_1856
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2630 = relay.const([[[-3,7,2,-10,6,10,10,6,2,-8,6,10,10,1],[-1,5,9,5,9,10,3,-9,-9,-6,9,-3,3,6],[-3,9,7,-7,9,-10,7,4,-9,10,-7,2,2,4]]], dtype = "int16")#candidate|2630|(1, 3, 14)|const|int16
var_2631 = relay.var("var_2631", dtype = "int16", shape = (1, 3, 14))#candidate|2631|(1, 3, 14)|var|int16
bop_2632 = relay.maximum(const_2630.astype('int16'), relay.reshape(var_2631.astype('int16'), relay.shape_of(const_2630))) # shape=(1, 3, 14)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_2640 = relay.const([3,10,-9,-7,2,-4,5,2,9,-2,2,5,-10,8,-7,-7,9,8,8,-6,7,-5,8,-2,5,-10,-3,4,-2,-5,-7,1,2,3,-7,10,9,-8,-3,3,-2,4,-6,1,3,8,10,8,-9,2,10,-1,9,5,2,9,9,-1,4,-4,10,8,1,2,7,-5,-7,-7,6,8,9,1,-3,-4,6,7,-2,-8,1,1,5,6,-2,10,-6,-7,-8,-5,-3,-1,9,-7,-10,-3,4,-10,10,10,-10,2,-1,-1,9,1,4,-3,9,-5,-6,2,2,8,8,8,10,-4,-10,1,10,1,3,9,3,-3,-2,-8,6,8,8,2,5,9,8,5,2,-1,8,-9,6,2,4,2,-8,4,8,3,1,-1,6,8,-1,-4,-1,-2,4,2,-5,-10,9,-10,1,4,-9,-2,10,2,-8,-10,1,5,7,-5,-6,-7,10,-3,5,2,2,-9,-3,4,9,-10,6,-8,-3,-7,-10,3,4,-1,-3,4,-9,8,4,-5,5,-5,-1,6,-6,4,-7,-5,4,1,3,5,-8,5,-6,-7,4,-4,5,-10,2,6,-2,10,7,3,7,-1,2,9,6,1,-7,6,4,2,9,-3,9,7,9,9,8,2,-7,10,-6,3,5,-5,5,-2,9,7,3,7,2,9,-5,-3,-2,4,-3,1,-8,4,-8,-10,-4,-5,9,-10,-6,-4,-7,-3,-10,-7,6,9,-6,7,-1,-9,4,-3,-5,-5,-9,-4,-5,-7,6,6,-2,7,-1,-10,-3,-9,-4,-9,5,-2,2,3,2,10,4,9,-2,3,-1,6,-1,-1,7,-6,6,9,3,-3,3,-3,1,4,10,-9,-10,7,9,-8,9,-1,9,3,5,7,1,-7,-3,10,-8,-8,-5,2,4,2,-2,-8,-6,-3,9,1,1,4,10,-9,4,-9,-2,-5,-10,10,2,3,1,1,7,9,9,-3,-9,9,2,4,-8,-2,6,10,-2,-7,2,-2,-7,8,6,5,6,1,-2,5,4,8,-9,-7,5,5,-10,-6,-10,3,8,3,1,-5,1,-5,-5,-2,-3,-9,-10,6,1,-9,10,9,1,3,6,-5,8,-1,-2,1,-9,-6,5,3,7,9,3,5,-9,-5,8,3,1,1,4,-1,-2,-6,-10,-5,8,-2,3,6,-8,7,1,2,-4,5,6,-3,-2,7,7,-7,-7,7,-8,10,-1,2,8,6,-10,10,-7,-4,1,1,5,-2,-8,-2,1,2,10,-6,9,-2,2,-5,-4,-8,-2,4,6,10,4,-10,-4,7,-6,6,-6,4,-10,-9,-10,1,5,-9,-1,6,-1,-10,-7,-10,-3,-10,-3,-9,5,-9,-4,-7,6,-1,-5,2,-1,10,3,-5,-6,-5,9,-4,-9,-9,3,-1,4,-6,9,6,4,2,-7,2,-9,-4,1,3,1,5,10,5,-10,-2,10,-8,3,10,4,5,10,-4,-7,5,8,4,-7,-9,-9,-5,8,-1,-3,3,6,-3,-5,-1,3,-2,7,-9,2,-1,-1,-10,-10,-2,-6,2,-10,8,3,2,5,-9,10,7,7,5,-6,1,-5,-1,-5,-3,-10,-4,10,1,8,8,-7,1,4,-6,-8,6,-7,6,-10,10,-2,6,-10,7,-6,-7,-1,9,-4,-4,1,8,7,-3,-7,-10,7,10,1,-5,-2,10,-1,-7,-5,7,-2,-5,3,7,-10,6,1,5,3,10,2,-9,2,-8,-10,2,-2,-1,4,-4,5,2,-5,-9,-6,-4,-1,-3,-2,10,6,1,3,-4,10,-1,-5,2,-9,10,9,4,-10,5,-8,1,-8,-3,-6,8,-2,-2,2,-8,-4,6,4,-5,5,-6,4,-6,-2,5,-5,-6,4,5,-2,6,-3,9,-2,-4,4,-1,-7,-3,7,7,-3,-8,-2,2,6,-10,-2,-8,3,3,-4,-6,-1,-10,-8,-10,-1,-5,-1,-7,-7,-8,7,-5,-10,8,1,4,4,10,-4,-1,7,10,-5,5,-7,2,10,4,6,-3,7,-10,-3,3,1,4,1,5,2,-1,4,-3,-3,-4,9,7,-7,9,7,9,7,5,-9,6,-4,-2,-2,-3,-4,-5,6,-10,-1,3,10,-6,-7,-5,-5,2,9,10,-1,-6,1,7,-5,10,-6,4,7,3,2,4,10,-9,-10,-2,-1,5,2,-1,10,1,-4,-2,-4,9,-6,5,7,-6,-2,-9,7,-7,7,-5,7,3,-10,6,-3,-4,-6,-6,3,-3,2,-8,-7,7,-10,2,-8,-3,-3,4,4,6,7,6,-4,4,10,-5,6,-4,4,-6,-3,1,-9,-2,3,4,10,9,-8,1,5,-8,10,9,-8,-6,-5,-6,4,-7,6,8,-1,1,9,9,8,5,9,-1,9,9,6,8,5,-10,9,6,-2,1,-9,-5,10,-4,-6,-6,-2,-10,-10,10,-8,-6,-8,-6,3,4,-10,8,1,-8,7,-3,-1,-9,5,-6,-2,7,9,10,3,-4,5,2,4,-6,-6,-7,-3,-7,6,1,-8,-7,4,-8,3,1,-4,7,-2,6,-1,-4,1,-7,5,-4,8,1,-1,8,-1,-4,-1,2,6,-5,2,3,1,10,-8,10,-10,-8,9,6,7,4,3,-5,-5,5,-8,-1,-10,8,9,-4,8,-9,1,7,-7,8,-9,8,1,-1,4,9,-5,4,4,3,1,9,9,-10,8,-6,-8,3,8,10,10,-7,-8,-10,-8,-6,-7,3,-2,-10,-10,1,1,-9,10,2,-9,-4,10,9,9,9,10,-1,4,3,10,-3,-8,9,-2,-9,-1,-7,-6,-1,2,10,3,-4,-3,-2,-1,-3,9,-8,-6,-1,-9,-10,-5,-2,2,-8,-5,3,-9,2,-1,-10,8,3,-6,-1,-5,2,3,-8,7,-9,6,2,-6,-7,9,9,-5,1,9,8,4,-5,-7,-3,10,-9,-3,-4,-3,-8,-6,10,-1,5,-5,-5,7,8,-4,-8,-3,1,-6,-5,-3,1,-9,-3,2,-10,4,-7,-7,3,-6,-6,-8,4,-3,2,1,-7,4,3,-1,10,10,4,-2,9,-10,6,-5,9,-1,-3,-4,-5,2,2,-2,-7,-2,10,-2,4,5,7,4,5,8,-8,-10,-1,-4,4,-9,-8,5,-9,-6,-6,-4,-8,-10,-4,3,-1,6,3,-8,5,1,-10,-1,3,1,8,-6,-2,1,5,9,-7,9,-4,-9,4,-4,8,3,-3,-5,-10,7,-7,9,2,-9,10,1,7,-6,-1,7,-6,-3,5,-9,-8,6,-7,-7,-2,10,-6,-7,-2,-4,-3,-2,-3,7,-2,-2,5,8,-4,10,3,7,2,2,9,5,-9,1,4,10,4,-8,2,8,-1,10,-10,-5,3,6,-5,3,10,8,2,9,1,-5,-3,7,-3,10,-5,8,2,1,-5,-3,-10,8,-10,10,-6,4,-7,-5,-9,-6,10,6,7,9,-6,8,5,10,7,-7,-4,-4,2,-3,-4,9,4,6,-5,-7,9,-6,5,10,-5,-5,-9,-2,-8,-4,-8,4,10,-5,-7,3,10,-10,5,-7,8,1,-10,-10,10,1,-9,-9,-7,2,-9,-9,6,1,1,2,-9,9,-6,8,-3,5,5,10,8,-5,-1,-5,-4,-8,4,4,-5,-5,-4,-8,-1,10,4,-8,-4,-1,-5,-1,3,-4,1,2,-3,-4,9,3,-2,-8,4,3,6,4,8,-2,5,10,4,-10,9,3,8,10,10,10,-3,-4,5,-2,-3,6,10,4,9,10,-1,-8,10,1,-5,6,2,-6,-7,-1,-3,-8,6,7,-7,-3,-2,5,10,-4,7,-4,-9,5,1,6,-5,-8,-6,6,4,10,-2,-9,-3,9,2,-6,-6,-9,-8,-2,9,4,5,-7,-9,4,-3,4,-4,3,-4,1,1,6,4,2,8,-9,4,-1,-4,-4,5,-5,9,-9,9,5,-1,-7,1,-10,-3,-3,6,2,8,-1,6,-6,-3,9,6,-10,-9,1,6,10,-10,-8,8,8,-10,10,4,10,-2,7,-7,4,4,5,-7,-9,7,-3,9,-10,2,-4,10,2,-3,2,6,5,1,7,-4,-3,6,-5,-9,6,8,8,4,-10,8,8,-7,-1,-2,6,-7,-6,-9,9,-7,-1,-7,-3,-6,-9,-6,-8,7,-3,8,-4,2,-9,10,-9,5,3,9,-4,-10,1,7,3,7,-4,7,1,7,-10,-9,7,1,7,-8,6,3,6,-5,5,-4,8,-8,-3,-2,-3,6,-7,10,8,7,5,-9,2,-1,7,-8,9,7,-3,4,10,-8,8,4,-7,8,-1,-5,3,9,-3,7,5,3,3,-7,-9,3,-4,-1,-6,-5,8,-9,7,-2,-7,2,5,3,3,4,-7,-9,-1,-4,-1,-5,10,-3,4,-5,6,-4,-3,10,6,-9,-8,6,9,8,8,1,7,-4,1,1,-9,8,-1,9,4,-10,4,-4,7,-5,5,-4,-1,-3,-10,-10,7,-10,-10,-6,4,-7,-6,-3,4,10,7,-2,-2,3,-9,-10,4,-7,-6,-9,10,1,8,9,-6,-1,-10,-3,8,-4,-10,-3,4,-9,2,-3,3,-8,-1,-4,3,2,-6,8,1,-9,8,-5,2,3,1,6,-1,6,-1,-1,-6,2,7,6,-1,1,8,2,-10,-4,10,-7,-6,4,-5,-6,7,-3,-5,4,-5,-7,-1,-3,-3,-1,8,-3,3,6,2,9,7,4,2,-1,-3,7,7,-4,-8,-3,-5,3,-4,7,8,-7,-9,-8,-9,7,-9,-7,-6,-7,7,9,8,1,-10,8,-4,4,6,-4,2,10,-8,8,-7,8,-6,-8,-10,6,7,7,-1,-5,-4,-3,-2,8,9,4,2,3,-1,-2,-10,-9,2,-6,-7,-9,2,7,-6,-4,10,2,9,2,6,1,2,-1,-5,7,-10,3,10,-5,-7,-3,6,1,-1,-7,6,-3,7,-5,2,6,-10,-5,-1,9,9,4,-7,5,9,5,10,-6,-1,-9,2,-9,6,-5,4,2,-7,-3,3,-2,-9,-8,4,-8,-4,2,-4,-8,-4,-5,10,6,-8,-2,6,-3,-3,-6,6,4,10,-4,8,3,9,-10,7,-6,4,6,-2,-5,-2,3,-4,6,4,8,-3,4,1,1,-10,5,-5,-4,-1,-3,9,-1,-5,-4,-8,-1,-5,5,8,6,-2,-4,3,3,8,-7,4,-7,-6,5,7,-8,-10,-8,8,-8,6,-7,-3,-3,8,5,9,-8,7,2,1,6,-3,-2,2,-1,-6,-7,9,-10,-1,9,-9,6,2,1,8,-7,-6,3,-2,6,3,7,-5,-10,-1,6,-6,9,-10,1,10,8,8,-3,6,-8,-5,2,1,-6,-1,-4,5,-2,2,3,-1,7,4,10,9,8,1,2,2,-4,-10,-9,-2,10,-4,5,5,7,-1,-7,4,-4,7,-9,-6,3,1,-3,-1,-6,-5,4,-6,7,-7,10,2,-6,-2,10,-10,-5,3,6,8,-2,-5,-3,7,-8,6,8,2,1,-1,-3,3,1,-4,3,9,7,4,-4,-1,7,-2,7,9,9,8,10,-8,1,-8,-5,2,2,1,-6,10,-10,-8,-8,5,-6,9,-4,7,-10,10,1,-9,-5,-8,-5,-4,-3,-1,9,10,9,-1,8,-10,2,-8,-1,7,7,9,-6,-6,7,-1,5,2,-3,-9,-3,-1,-1,2,-4,-10,-4,3,-3,-2,8,9,-5,7,5,8,5,5,-8,7,-3,3,7,-1,8,-3,7,10,-2,-9,-3,7,6,-3,6,-6,-7,10,8,-4,-5,3,-10,3,9,1,10,-7,7,-3,-10,-5,10,8,-7,4,-1,5,1,-3,1,-10,1,7,9,-2,9,-5,5,8,-8,-5,1,-10,5,1,-9,-6,10,8,-3,8,10,-2,-9,-6,-3,7,8,-4,-3,10,8,2,-1,-7,3,-8,-1,9,-3,6,-5,-9,10,-9,-10,7,-6,6,-9,4,10,-8,-4,-10,1,4,1,-2,-7,-6,-1], dtype = "uint64")#candidate|2640|(2288,)|const|uint64
call_2639 = func_1434_call(relay.reshape(const_2640.astype('uint64'), [11, 16, 13]))
call_2641 = func_1434_call(relay.reshape(const_2640.astype('uint64'), [11, 16, 13]))
output = relay.Tuple([bop_2632,call_2639,const_2640,])
output2 = relay.Tuple([bop_2632,call_2641,const_2640,])
func_2648 = relay.Function([var_2631,], output)
mod['func_2648'] = func_2648
mod = relay.transform.InferType()(mod)
var_2649 = relay.var("var_2649", dtype = "int16", shape = (1, 3, 14))#candidate|2649|(1, 3, 14)|var|int16
output = func_2648(var_2649)
func_2650 = relay.Function([var_2649], output)
mutated_mod['func_2650'] = func_2650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3389 = relay.var("var_3389", dtype = "uint8", shape = (12, 11, 5))#candidate|3389|(12, 11, 5)|var|uint8
var_3390 = relay.var("var_3390", dtype = "uint8", shape = (12, 11, 5))#candidate|3390|(12, 11, 5)|var|uint8
bop_3391 = relay.maximum(var_3389.astype('uint8'), relay.reshape(var_3390.astype('uint8'), relay.shape_of(var_3389))) # shape=(12, 11, 5)
output = bop_3391
output2 = bop_3391
func_3395 = relay.Function([var_3389,var_3390,], output)
mod['func_3395'] = func_3395
mod = relay.transform.InferType()(mod)
mutated_mod['func_3395'] = func_3395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3395_call = mutated_mod.get_global_var('func_3395')
var_3397 = relay.var("var_3397", dtype = "uint8", shape = (12, 11, 5))#candidate|3397|(12, 11, 5)|var|uint8
var_3398 = relay.var("var_3398", dtype = "uint8", shape = (12, 11, 5))#candidate|3398|(12, 11, 5)|var|uint8
call_3396 = func_3395_call(var_3397,var_3398,)
output = call_3396
func_3399 = relay.Function([var_3397,var_3398,], output)
mutated_mod['func_3399'] = func_3399
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3697 = relay.const([[[2,8,-2,10,-9,-6,-4,1,2,-8,-4,-3,5,-5,-6],[4,-10,1,7,7,2,-4,-8,4,5,-2,-6,-4,-8,-4],[7,-4,2,8,5,-5,9,-5,-6,-8,-10,-10,7,9,-4],[2,1,-8,-1,10,2,-5,7,-9,-7,-6,7,-5,-3,-10],[7,8,-9,-1,-3,-8,-6,-5,3,8,10,8,1,4,8],[-10,-7,3,7,8,-4,-4,-9,5,-4,3,6,-3,-7,-8],[-10,-9,9,5,-3,5,-7,-10,-1,-10,8,10,9,1,-10],[-10,-7,9,1,1,5,3,-8,-2,-8,3,8,-9,5,-2],[9,7,-10,-4,-8,-5,3,-7,-1,-10,-1,-2,-6,-5,-1],[8,-8,-7,-9,1,6,-2,-4,-1,-8,-1,-4,10,-5,1]],[[-2,7,-3,-2,7,-2,9,-3,-3,-7,5,-3,-2,9,8],[5,-10,-3,9,5,-7,9,3,9,6,8,-4,10,-4,3],[-8,3,3,1,9,7,5,4,-10,3,-8,7,3,-8,-6],[-8,-9,4,-7,3,-3,4,8,3,2,4,-8,-4,8,-10],[2,3,-9,5,-2,-1,-1,-2,-4,7,-2,8,9,2,5],[-6,-10,-10,5,-6,-6,-3,-4,7,9,-8,2,2,-9,3],[-8,10,-7,8,8,3,1,-2,-9,6,3,-1,-9,10,-9],[9,1,3,2,4,-5,7,-10,-4,-7,9,2,7,-2,9],[-10,-7,2,1,-3,-5,9,-8,-10,-10,-3,-9,8,8,4],[1,8,7,10,-3,2,-5,7,-1,-6,-5,1,-3,1,1]],[[1,-1,2,8,-3,-8,8,-7,-7,-3,1,-3,2,-1,9],[10,6,8,7,-3,-4,7,-4,-6,-3,7,7,-4,6,-3],[9,-5,-5,6,-9,-4,10,5,-6,-7,2,-2,-2,9,4],[-4,-7,2,2,-6,5,-3,3,-10,-3,-7,1,-5,8,2],[7,-6,5,-8,4,-9,6,-5,-2,-8,-2,-9,6,7,-7],[5,6,-2,-9,-9,6,3,10,3,-5,-4,-7,1,6,-7],[-8,10,-6,-5,5,-10,-4,5,3,7,-8,-6,-5,-8,4],[5,-10,5,9,10,6,7,5,7,9,-7,-4,-1,1,-9],[7,-6,-10,4,1,-5,6,-10,-5,8,-8,2,9,10,-7],[2,2,2,10,-3,-9,-9,-2,5,-5,-3,7,6,3,5]],[[-4,3,-6,-2,-8,-7,-5,2,-7,-7,10,-9,7,5,1],[7,7,-3,-2,9,-10,-9,-5,4,-7,-6,1,6,-9,8],[-8,-7,-5,-8,-7,-1,3,4,10,-8,9,6,9,7,-4],[10,-10,-7,-1,-5,1,-7,-5,-10,1,2,4,-1,1,-3],[-3,-6,-1,-1,7,-9,4,-3,-9,4,5,-1,5,1,1],[2,6,8,-1,8,-9,-10,-6,-9,-8,-6,-10,-1,10,2],[8,5,2,-1,-6,-4,-9,5,-7,-10,-9,9,3,4,-4],[5,10,7,-5,4,-1,-4,3,4,6,-7,10,4,-6,7],[7,-5,9,-9,-2,6,3,2,9,-6,-1,2,8,5,6],[-5,1,10,-2,6,3,-5,-2,-2,4,8,2,-5,5,6]],[[1,6,3,-3,6,9,3,-6,5,-8,10,4,-5,4,-10],[-3,4,-2,7,2,-7,3,-8,-5,-8,2,8,-2,7,-4],[6,8,7,7,-5,7,1,-2,-8,-2,9,-6,1,9,-6],[5,-10,-2,-2,1,9,1,-6,10,9,2,-7,-4,-8,6],[-6,6,1,3,8,-3,9,-8,7,1,-2,-4,3,9,3],[-7,-6,4,-2,3,10,8,7,6,-6,10,10,-8,3,8],[3,-6,-10,-6,-9,4,-4,9,-10,5,-4,3,10,8,-1],[1,4,10,-10,-6,-7,8,-3,-1,4,9,3,-1,-5,8],[7,-9,9,-3,-8,-7,9,4,-2,5,3,3,7,-2,-5],[8,2,-3,7,-9,4,9,1,7,8,-9,-7,-10,-8,-9]],[[-5,-5,4,-9,3,-7,-3,-2,10,8,-1,-1,-9,5,5],[10,-8,-8,-2,-7,-4,2,1,-2,3,-10,-6,5,4,-5],[-1,-9,-2,5,-4,1,-7,5,-8,10,8,-8,-1,-4,-4],[-3,5,-5,-1,-5,5,2,8,1,-6,-9,-8,-3,-1,-3],[-7,9,-10,-1,9,5,1,-5,5,-4,4,7,10,3,6],[-8,2,-5,4,-3,-3,6,-4,-10,4,9,-9,1,6,-3],[-8,5,8,4,5,6,6,9,-10,10,-7,1,-7,7,6],[6,-3,-6,9,5,-9,-4,-3,-6,6,-9,7,8,4,-7],[-7,6,4,-1,4,-8,8,-8,7,-6,-2,-3,-8,-10,8],[5,-10,5,3,-6,-3,1,-8,-4,5,-7,8,-5,-3,-1]]], dtype = "int64")#candidate|3697|(6, 10, 15)|const|int64
var_3698 = relay.var("var_3698", dtype = "int64", shape = (6, 10, 15))#candidate|3698|(6, 10, 15)|var|int64
bop_3699 = relay.multiply(const_3697.astype('int64'), relay.reshape(var_3698.astype('int64'), relay.shape_of(const_3697))) # shape=(6, 10, 15)
output = bop_3699
output2 = bop_3699
func_3712 = relay.Function([var_3698,], output)
mod['func_3712'] = func_3712
mod = relay.transform.InferType()(mod)
mutated_mod['func_3712'] = func_3712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3713 = relay.var("var_3713", dtype = "int64", shape = (6, 10, 15))#candidate|3713|(6, 10, 15)|var|int64
func_3712_call = mutated_mod.get_global_var('func_3712')
call_3714 = func_3712_call(var_3713)
output = call_3714
func_3715 = relay.Function([var_3713], output)
mutated_mod['func_3715'] = func_3715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3980 = relay.var("var_3980", dtype = "float64", shape = (3, 15, 1))#candidate|3980|(3, 15, 1)|var|float64
uop_3981 = relay.log10(var_3980.astype('float64')) # shape=(3, 15, 1)
output = relay.Tuple([uop_3981,])
output2 = relay.Tuple([uop_3981,])
func_3985 = relay.Function([var_3980,], output)
mod['func_3985'] = func_3985
mod = relay.transform.InferType()(mod)
mutated_mod['func_3985'] = func_3985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3986 = relay.var("var_3986", dtype = "float64", shape = (3, 15, 1))#candidate|3986|(3, 15, 1)|var|float64
func_3985_call = mutated_mod.get_global_var('func_3985')
call_3987 = func_3985_call(var_3986)
output = call_3987
func_3988 = relay.Function([var_3986], output)
mutated_mod['func_3988'] = func_3988
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4074 = relay.const([[[-1.234014,6.363235,-7.815069,4.656120,-2.823595,-8.646568,-2.104947,7.676416],[-2.943168,-0.990713,-8.592117,-1.538670,9.284547,-9.731240,-9.008003,1.984773],[0.522851,2.329374,-0.235319,1.506837,2.209040,-4.436599,9.689305,-8.372273],[-2.498970,-8.222731,-2.844436,2.753420,-9.238855,9.666930,8.323861,3.669593],[8.544412,3.033487,-7.173253,-9.347856,-1.880017,5.538003,9.685901,4.806118],[-8.845385,-8.816670,-0.022110,-4.823154,7.707559,-3.866016,8.959909,5.538411],[-5.558955,-8.772891,-2.869582,-0.151248,9.975782,-9.376555,-6.004862,-2.628824]],[[5.112497,1.074087,6.146409,2.503655,8.705490,7.373013,5.728034,2.300455],[0.502782,-7.825817,-8.477310,-9.633248,5.225340,-7.436369,8.742041,-4.607077],[1.851824,-8.110840,-5.547865,3.666993,5.716279,-6.236641,-5.963991,-8.971755],[7.248431,8.218578,-6.919731,5.369411,-9.553932,5.621608,-7.675430,8.215740],[3.563937,-1.442354,0.433831,2.362936,9.975955,0.131370,3.559874,7.447993],[6.698181,-5.860626,4.548183,6.830514,-3.453709,4.447273,-7.638944,-9.333531],[-3.242945,2.949561,5.577756,0.214185,-7.913898,-5.945569,-0.505989,-3.794237]],[[-2.206837,5.680335,-1.792068,3.653002,9.351645,-0.084716,1.214405,7.913500],[1.685625,7.807052,0.796930,5.642613,-2.251786,8.676571,-1.542972,-2.342363],[8.010900,-1.555816,-4.559374,-0.038139,-5.568993,3.210143,5.466535,0.058081],[-9.430232,9.408812,5.006431,6.600269,-8.992665,8.631026,5.491349,6.435342],[5.880478,-4.808506,-8.576898,-6.887967,1.503861,-9.086595,-3.769839,-8.869033],[9.655526,7.714393,-0.997099,-6.303606,8.872948,5.077280,5.982540,0.064574],[-0.964187,-9.375276,-5.588822,9.479895,-9.828289,7.334779,-3.071826,9.523774]],[[5.237656,-4.279050,-8.319929,8.657782,-5.494672,-8.006055,1.233329,4.730038],[1.775753,-7.718652,-3.478010,-1.074064,-2.362423,0.680730,8.814689,-3.194542],[5.884755,-1.082864,8.155139,-7.786189,7.899010,9.457515,-5.415099,-4.124348],[-6.801164,-3.329045,4.312409,8.894228,-0.239100,-9.835245,-0.936673,-2.511157],[1.090678,2.013154,-1.316920,1.646504,-2.122720,4.776419,3.718755,-4.047137],[-0.921834,-4.881231,2.769303,7.275211,-8.755911,8.483268,-8.213794,7.517108],[7.872509,-1.266073,-1.001380,0.577501,-7.969281,9.695717,-7.000144,1.962521]],[[-6.577722,-2.021127,-2.015225,8.242581,6.475170,1.004027,4.809738,-1.260013],[8.682851,-9.264328,-7.712325,-8.838639,-4.613115,-7.069840,5.046708,-3.718955],[0.187279,-4.804110,-2.369919,-2.389100,-5.160502,-1.463122,-6.761712,-1.584276],[1.636240,4.970106,-1.357742,6.789863,-6.840344,-1.130957,8.454547,1.400284],[6.703755,-6.339154,-3.400286,-1.717755,-6.794559,-9.700872,2.921753,-7.181358],[9.065443,-7.651935,3.268117,6.417118,6.245585,-6.601560,-2.936990,3.754683],[9.925084,8.824895,-1.963116,-7.932666,-1.682037,-0.808137,-0.621542,6.512001]],[[-2.840256,2.826007,1.062545,1.738505,-5.686331,0.635203,-2.566696,8.609940],[2.654647,7.763542,-5.066633,-5.752985,-1.740332,-6.382280,-8.162768,-9.190458],[5.724447,-3.908389,-6.624387,0.526786,6.204457,3.018658,6.858889,2.485104],[-8.535261,-4.066435,2.495763,6.795883,3.271032,-7.097389,7.508448,6.826902],[-2.930583,9.917687,8.149543,-7.566045,-0.003295,-8.254134,-5.311359,-7.450098],[-5.926560,2.165116,2.183059,3.817334,-7.066971,-2.752740,4.296475,-5.371625],[-5.890146,-9.075867,-6.414210,-1.515402,0.346128,-5.052530,5.494362,-6.070113]],[[5.197230,0.846620,-1.216095,-2.618095,-5.317611,4.650149,-5.338624,7.922178],[2.977332,-1.545003,-4.305599,-0.964799,-3.681312,3.110765,5.531554,1.768039],[9.814846,-3.237069,-6.141160,-2.136996,7.237048,-3.123363,4.962181,-5.135929],[1.842680,-3.814058,-6.998303,9.734137,3.700920,-7.607365,-9.922384,-0.814707],[-8.155387,-7.081013,0.077548,8.912916,-5.771465,-8.245444,6.183001,-5.417030],[4.823991,3.208831,-6.462862,-9.826184,3.210444,-3.664054,5.496958,-7.037103],[1.555034,-8.115560,3.735926,-5.414098,5.227058,-9.211640,9.114366,7.774130]],[[3.750605,-3.478416,-1.092655,-3.375563,7.817754,1.255524,1.164169,-3.143101],[-8.865283,2.223564,-1.100604,8.224437,-1.633670,3.855874,4.248344,-1.133605],[0.249087,-7.292663,-6.366581,0.049913,6.773642,-2.181730,-9.485049,-5.552240],[0.919056,1.699565,1.640018,2.236584,-9.487063,6.430715,5.516677,-6.463232],[7.050853,-7.441871,4.575721,5.919992,6.773788,7.594873,7.280031,-9.234454],[5.069920,-3.429424,9.393385,-3.810008,-5.300338,8.245738,-3.526221,-1.388026],[-8.186978,4.812044,4.237752,-8.323182,-6.137630,-4.485696,5.077196,-6.191429]],[[-9.264454,8.414497,-0.262701,5.718723,-7.311254,-7.986373,6.815045,-4.102195],[-6.676603,2.140713,-7.276466,-7.463272,-6.388140,-2.527398,6.588056,-2.070820],[-0.841543,8.945265,-5.623692,4.858741,5.879154,7.462194,0.908665,-2.482191],[4.433881,1.912360,-1.886075,-6.017166,-5.330802,-5.632165,7.587124,-4.820130],[4.087689,-2.759862,-8.201642,-5.572545,4.957595,-3.693832,7.831255,-1.269587],[2.462985,-1.233192,1.027213,-5.127897,-3.939725,-9.757213,4.315712,9.636453],[-4.646807,-1.429310,6.966406,6.720725,-1.359747,3.475316,-8.350782,-2.398529]],[[1.806259,3.432993,4.247957,0.920135,3.186959,0.462426,-6.056811,4.538987],[-7.641627,4.234104,-7.638470,2.525021,4.748549,-7.419908,-7.344423,8.759125],[1.533063,1.392202,-7.243781,-6.276105,-0.943711,-6.088471,-5.843056,4.872925],[-2.692268,2.279387,4.294497,7.830301,4.062984,5.110129,1.611081,-4.955696],[5.003026,8.449147,-7.450584,5.758114,-2.508357,9.110848,5.073121,9.245830],[0.464525,-5.612094,8.194764,0.102760,4.111070,7.555193,1.150094,-2.899785],[9.873902,-7.827312,1.228087,-4.342822,-4.049626,1.802168,-0.353487,3.181157]],[[2.244017,9.138095,5.148925,1.712899,2.357097,3.859189,-9.294680,0.972234],[-3.368912,1.195320,-1.698096,5.974534,2.303586,-0.268377,3.475396,-8.704073],[-8.144155,-1.800333,-0.517844,-8.868952,-0.668344,5.128751,8.791771,-7.462104],[-9.325219,-7.575082,7.490045,8.018975,-1.044341,-9.205867,3.138477,-0.899890],[-6.627178,-8.109009,-0.139328,-3.190419,-8.063478,-1.901430,9.385145,9.693282],[-3.828933,-7.583542,4.988455,0.951639,0.297674,-4.924082,-1.919344,-1.197402],[8.970942,2.930262,-2.362128,-4.695168,2.280163,-6.226845,2.572120,0.074576]],[[4.191402,7.258130,0.939992,-8.984893,-0.437689,-6.389396,1.186207,-4.251779],[1.455223,5.623273,6.081535,-7.055324,-5.327029,6.245446,5.955746,8.881932],[-0.887630,3.947927,4.127904,0.280507,-4.694206,-6.034593,-0.199827,-8.961512],[3.804053,1.063037,1.078764,8.745827,0.903773,8.746198,1.494809,2.951944],[3.295740,-5.148654,3.640670,1.651742,5.898496,1.863318,-5.709109,1.713776],[5.432422,-1.168979,-7.518951,-0.487721,9.470326,-8.005124,8.294095,-2.875708],[8.155269,2.790398,-6.380458,-7.238507,9.008841,-7.869915,-5.522445,5.411081]]], dtype = "float64")#candidate|4074|(12, 7, 8)|const|float64
var_4075 = relay.var("var_4075", dtype = "float64", shape = (12, 7, 8))#candidate|4075|(12, 7, 8)|var|float64
bop_4076 = relay.floor_mod(const_4074.astype('float64'), relay.reshape(var_4075.astype('float64'), relay.shape_of(const_4074))) # shape=(12, 7, 8)
func_965_call = mod.get_global_var('func_965')
func_968_call = mutated_mod.get_global_var('func_968')
const_4087 = relay.const(-4, dtype = "uint64")#candidate|4087|()|const|uint64
call_4086 = relay.TupleGetItem(func_965_call(relay.reshape(const_4087.astype('uint64'), [])), 0)
call_4088 = relay.TupleGetItem(func_968_call(relay.reshape(const_4087.astype('uint64'), [])), 0)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
const_4090 = relay.const([2,5,3,4,6,3,-6,7,-3,9,-3,-7,-2,-4,-7,-8,-5,6,-7,-8,-4,-2,7,2,-6,5,1,-6,2,-10,9,2,3,9,-8,-10,-7,5,-10,3,-9,7,2,-4,5,5,-2,-5,-5,-4,3,-7,6,6,8,-6,-2,6,-8,8,4,5,-2,-8,7,10,-6,2,-9,-2,10,6,2,-5,4,-4,-9,-2,-1,8,4,8,6,-4,8,4,3,-1,-3,5,-10,-4,10,-9,-8,-1,-6,-2,10,-7,-1,8,2,1,4,3,-5,-2,-2,-7,10,3,-8,-8,3,7,-8,-10,-2,8,-6,-1,-7,-5,-6,1,2,-1,9,7,7,-5,-8,-5,-5,8,3,2,2,1,2,5,-4,-2,-8,-6,-4,-9,-6,-5,-9,-2,-2,-4,-4,2,7,-7,6,5,-10,-8,-1,-7,3,-10,4,-7,-8,1,-6,-5,-2,5,2,3,-10,-6,-10,-10,6,-5,3,7,3,-3,-2,-3,1,-2,9,-6,-8,1,-7,9,10,4,-6,-5,8,1,6,-4,-3,1,4,10,-10,-8,-2,8,2,7,2,8,-10,2,4,-3,6,10,1,-4,1,-8,10,6,10,2,3,-4,1,-1,5,6,7,-5,-8,-1,-2,3,-5,-6,10,8,9,10,-9,-7,-2,8,-8,10,-2,4,-10,-8,6,1,-1,3,1,10,-2,-6,9,-8,9,-3,-8,4,4,2,-5,5,-10,-8,2,10,-4,-10,2,-9,5,9,7,-1,7,-10,-6,2,5,-8,-7,-1,-7,-3,-1,8,-2,-9,-2,1,-4,4,8,-10,6,-10,-8,-4,-3,2,9,8,-8,-4,7,-4,6,3,-3,-7,-10,-4,7,3,-6,2,6,-9,-8,7,-10,-8,-8,-10,-5,4,3,4,-5,-8,2,8,-1,-4,-2,6,-3,-8,-7,-6,7,-8,7,10,10,2,-1,2,9,-3,-9,3,-5,-5,-1,-5,-10,-9,-6,8,1,8,2,4,-7,2,-5,-10,-6,-3,5,-3,2,1,-5,5,-2,-5,-6,8,3,-9,-5,-9,3,5,-9,-2,-4,-2,-5,2,2,4,4,1,-3,8,-9,-8,8,-8,-6,9,-5,-7,-9,-10,4,-9,9,8,10,2,2,10,5,-6,-2,1,7,10,4,-9,5,9,-9,5,-2,9,-9,3,-10,-5,5,10,3,-9,1,5,7,-9,2,6,-3,7,3,-7,10,-5,-9,8,4,-7,7,-10,-8,1,-7,4,-9,3,3,-6,2,-10,6,-3,9,-5,3,-1,6,-1,-6,-4,-7,10,7,-5,-7,1,4,6,-1,-10,-6,-5,2,7,2,6,6,-1,1,-3,-2,-2,6,2,8,-4,-2,1,5,-5,-7,8,6,-8,7,3,-6,8,4,-9,-1,-9,2,-8,-7,-5,3,-2,3,3,-3,-9,-5,9,6,-2,-3,-9,-2,-1,9,5,-9,10,7,2,-2,-9,8,6,7,9,10,4,-3,1,1,6,3,4,1,-1,6,2,7,-6,-6,6,-2,-10,-5,9,-8,-8,10,2,5,-4,3,-3,-4,9,-5,-7,-5,-2,-7,8,7,-8,-5,8,-4,-1,8,9,4,-3,-5,5,-7,-10,-1,2,2,5,-10,7,7,3,3,-9,-2,-7,-3,6,-3,-6,5,-2,-8,6,10,-6,-3,-2,2,7,-2,-2,-9,4,-7,8,-8,10,-5,-8,10,-10,2,1,-3,-2,3,1,4,-7,8,4,-4,-4,9,-4,5,-1,-7,-2,1,9,-10,9,10,9,-9,-5,-5,4,2,-2,1,5,8,-2,3,-4,-4,1,10,1,2,4,5,-1,3,6,-1,-6,10,9,-9,-10,-7,-4,-10,-6,-9,10,-8,2,8,-7,-9,-7,1,4,-10,-3,-5,4,2,-8,2,-8,2,-2,-10,-9,-4,-7,4,-6,-6,-3,-8,6,9,-2,1,9,-9,-4,-10,7,-3,10,8,4,-7,-4,-4,-4,4,1,-5,1,-3,-3,9,-8,6,10,6,-9,10,5,-4,6,4,-3,2,-4,-10,8,9,-2,4,3,7,-2,-5,-1,-7,-9,8,1,-8,3,-4,-7,-6,9,2,-1,-4,-8,-9,2,-7,8,-2,5,4,10,-2,-2,-8,10,1,-1,-2,5,-7,7,7,1,-4,1,-8,-7,-10,9,-10,-7,10,-7,6,-6,-9,9,8,-7,-8,-4,1,-5,10,6,2,-2,-3,5,-1,4,-3,7,-5,-6,3,9,1,5,-9,3,6,4,-2,-3,-9,4,2,-5,-6,-1,-1,4,-4,5,-10,5,-4,7,7,1,-7,-9,-8,7,5,4,-8,-10,-7,-8,-5,-3,1,5,10,-5,2,-7,8,6,-3,9,-9,6,4,-3,6,-8,-5,-8,-10,3,6,-4,-5,-8,-1,2,6,5,1,-8,3,-5,-10,5,-5,-4,10,7,-6,-6,2,6,5,7,-1,-2,-1,-5,1,1,-10,-8,10,-8,8,5,1,7,5,1,-9,10,-3,8,-7,-9,-3,7,-10,-2,-8,-10,8,-4,-1,9,-1,7,4,-5,6,5,-9,-5,-7,9,3,4,-7,4,-5,-8,-2,8,4,-4,-7,2,-3,-7,3,6,7,9,8,4,6,10,6,-3,-3,-3,-10,-8,-1,5,-3,9,-9,-6,2,2,1,-8,-2,-9,2,7,6,-4,10,-10,10,-5,-8,8,2,-1,-4,1,-2,10,2,-5,-3,-3,8,-10,-3,-7,-5,-2,-7,-9,4,6,10,-9,5,9,2,-3,-5,9,7,10,3,10,-7,-8,8,-6,-1,-1,8,4,-3,-10,-9,8,-5,7,-2,-5,-7,9,-8,-4,-1,-3,4,-9,-4,5,8,-9,-2,10,-5,-3,9,-8,9,3,-6,9,6,6,8,3,-5,-8,1,10,-2,-8,9,5,-7,-7,7,-2,-5,2,10,-9,10,-3,-5,8,-8,-8,2,4,-4,-4,-9,5,-7,-7,-6,3,4,-8,-8,8,-3,-4,2,6,-1,8,-9,5,-3,4,-1,-5,10,5,10,-4,10,1,6,-7,-10,-6,-9,6,3,1,-4,8,10,1,-7,-6,-3,-8,-4,5,-1,2,1,-3,-7,-10,-3,-4,2,-4,10,-9,-6,-3,3,2,-2,7,4,10,6,-10,-8,1,-10,2,-6,-5,7,1,-10,5,1,5,-2,7,-7,-7,3,-7,-3,-3,10,-1,9,-9,9,1,8,7,3,9,3,4,-2,-9,2,5,-1,8,-2,-9,3,-1,5,2,-2,-7,5,-10,-4,5,10,-7,8,-5,4,-1,3,7,-2,6,-8,-8,6,-3,7,-6,7,2,-9,-8,-8,-8,-1,-8,6,6,7,-8,-3,3,8,-7,-3,2,3,-2,9,3,-9,-4,5,8,5,4,6,8,-9,10,-3,1,-2,-8,-5,10,1,8,5,9,1,-8,3,2,10,-1,4,-8,6,-7,8,-4,3,-7,7,10,9,6,3,-1,2,3,-5,4,8,2,-1,7,10,6,-7,-5,4,8,1,-8,1,-9,-6,-8,6,-2,-8,-5,-2,6,-5,6,4,7,-3,-8,-10,-1,-10,3,-8,-5,4,7,-8,5,-5,5,5,7,-6,-10,-2,3,1,7,10,8,-1,10,-7,7,6,-3,3,-6,-3,-5,9,-6,-5,2,7,9,-4,-1,2,4,7,8,7,9,10,4,6,-4,7,6,5,-3,-4,3,-10,5,-4,9,7,-3,6,10,1,2,-7,1,-6,4,-9,-8,-4,8,8,-1,-7,-3,4,-4,-5,-3,7,-8,-6,-2,9,-4,7,-3,3,-1,10,5,7,-1,6,-7,-7,5,-9,-8,1,1,8,-4,-10,1,-10,8,-4,2,-4,-4,-5,-6,-9,3,10,7,-10,7,5,3,-4,3,-1,-9,-3,8,5,-10,-8,-2,9,-6,-10,10,-1,-1,4,-3,6,-10,9,4,-1,8,-9,10,2,6,9,7,9,-6,-1,-9,-5,3,8,7,4,-1,-8,1,-6,-3,-5,8,-10,10,-5,6,10,3,-9,-9,8,7,2,-7,9,5,2,-7,-10,-4,5,-5,3,5,10,6,6,5,3,6,4,5,9,-8,8,3,6,-2,-8,1,-1,-6,-2,6,-3,-7,-8,-2,-6,-3,6,10,6,1,9,9,-10,-8,8,-8,-8,7,-7,10,-3,10,1,-3,1,10,-5,1,-6,8,5,-4,-10,1,-3,-3,-6,-6,-2,-5,-3,5,5,-5,-7,4,8,-6,-10,6,-8,10,3,-4,-4,-7,5,7,8,-9,-5,-8,1,-1,-1,-4,7,6,9,4,8,-2,-3,-2,-3,5,-6,-2,7,5,2,10,3,-1,5,-8,7,7,-3,1,2,5,-9,2,-2,-7,-8,6,-4,-6,2,-3,5,9,10,5,5,9,-9,-3,2,7,-8,5,-2,10,-4,3,4,-9,-1,8,4,-2,-10,6,-7,-6,-8,7,-10,1,2,7,-5,2,-9,-2,8,6,10,-4,4,4,-8,1,-1,-6,-6,9,-7,7,-1,-9,-4,-9,-8,3,-10,4,-9,-8,7,3,4,7,3,9,7,-5,4,7,-6,4,9,-3,-2,9,4,-5,6,-4,-9,4,-1,-7,10,9,-4,1,-2,2,-7,5,4,2,3,-8,-8,-8,-9,6,-1,-7,-9,-8,3,4,2,-3,-1,-4,-2,-9,-3,1,-6,-3,-3,1,9,2,-1,3,-6,-8,1,5,6,-6,-3,-3,6,-5,6,-1,-5,-6,9,-10,6,-4,-1,2,3,8,-7,-6,-7,-1,6,10,5,8,5,-1,-7,8,5,5,10,-5,-4,-9,3,4,4,-3,-9,-4,-8,-5,-1,-2,5,-2,3,-3,2,6,3,-5,5,7,8,10,6,2,8,-2,3,9,5,1,-3,-1,10,-3,-3,-8,-4,8,4,7,-3,-9,7,2,-10,-9,1,-1,-7,5,7,-2,4,10,1,-1,8,-3,-8,7,10,-2,8,-4,-10,-7,-2,7,-3,3,-4,-10,-4,9,10,9,2,4,5,-4,-5,-1,2,-5,4,-8,-4,-3,3,-10,10,4,-9,3,-6,-8,-10,10,-6,8,4,-10,-4,9,-7,-2,-6,-8,-5,-10,9,-2,8,2,8,4,6,2,-9,9,8,4,8,-1,-4,-5,-9,-4,10,1,-6,10,2,-3,-3,-8,4,4,-5,-8,-6,-2,10,3,3,-8,10,-2,9,3,10,2,-3,-7,-1,-7,-7,-5,-6,7,-2,-10,-4,-5,10,5,-1,-3,5,-3,4,-5,-1,-8,-9,-10,-1,-3,3,-7,8,-10,-1,1,4,4,8,-8,10,-7,2,-9,-8,-7,-2,3,-8,-7,7,-7,-6,6,10,2,-2,8,8,9,4,6,-2,-6,-1,1,4,6,9,-3,-10,9,-6,5,8,10,10,8,5,4,6,4,3,10,-4,1,10,3,8,-9,-4,6,5,7,7,-5,-7,5,-9,-4,-9,-4,-4,4,8,8,-2,-9,-8,6,10,-8,-10,-8,7,-1,-8,5,3,6,3,-5,-8,-4,3,-4,3,9,-5,4,1,-8,2,1,-5,7,2,-4,8,-9,-8,-3,4,-6,-1,1,-6,10,-6,-3,9,8,-4,4,-10,3,5,-1,-8,-10,-7,-10,3,3,3,10,-8,5,-3,-5,1,3,6,7,-8,2,9,10,-3,1,1,-10,-2,-2,-6,-7,7,-5,1,6,10,-7,-1,10,2,-10,3,-1,-4,9,9,7,6,-8,5,-8,-3,5,-4,8,8,-8,-7,-7,9,1,4,4,1,4,-10,-2,-7,-9,-3,6,4,-6,2,-1,1,-9,-1,2,-8,7,-1,1,7,-1,-6,4,3,-2,-5,-6,-7,9,9,-10,-2,-5,8,-2,-5,-7,-2,-2,1,9,-6,-2,9,3,-7,-7,1,-1,-7,4,-6,2,4,-4,-7,-10,-8,-6,-6,-7,1,1,5,1,-4,1,-7,-9,-6,-5,4,5,-10,10,-1,10,-10,-4,-10,6,-9,6,-3,-7,8,1,-7,-5,-9,-2,2,2,2,9], dtype = "uint64")#candidate|4090|(2288,)|const|uint64
call_4089 = func_1434_call(relay.reshape(const_4090.astype('uint64'), [11, 16, 13]))
call_4091 = func_1434_call(relay.reshape(const_4090.astype('uint64'), [11, 16, 13]))
output = relay.Tuple([bop_4076,call_4086,const_4087,call_4089,const_4090,])
output2 = relay.Tuple([bop_4076,call_4088,const_4087,call_4091,const_4090,])
func_4096 = relay.Function([var_4075,], output)
mod['func_4096'] = func_4096
mod = relay.transform.InferType()(mod)
mutated_mod['func_4096'] = func_4096
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4097 = relay.var("var_4097", dtype = "float64", shape = (12, 7, 8))#candidate|4097|(12, 7, 8)|var|float64
func_4096_call = mutated_mod.get_global_var('func_4096')
call_4098 = func_4096_call(var_4097)
output = call_4098
func_4099 = relay.Function([var_4097], output)
mutated_mod['func_4099'] = func_4099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4273 = relay.var("var_4273", dtype = "int16", shape = (9, 13, 3))#candidate|4273|(9, 13, 3)|var|int16
const_4274 = relay.const([[[1,-6,-8],[3,8,3],[-3,-7,-2],[6,-5,-1],[-6,2,9],[1,-1,1],[3,-9,-7],[6,5,-4],[6,6,-9],[-2,-6,-2],[-4,6,-7],[-9,1,1],[10,-8,3]],[[-3,2,-10],[-6,7,7],[-8,-2,10],[-1,2,-7],[-2,2,-4],[-3,-2,8],[-7,-4,-8],[-6,2,1],[9,-1,6],[4,6,1],[1,-9,-9],[6,-3,4],[1,-8,-10]],[[-7,10,10],[5,-7,9],[3,10,-4],[-2,6,-3],[7,-10,9],[1,-9,-3],[1,2,-10],[-6,3,-8],[-4,1,6],[-2,-8,-5],[2,-10,-10],[-9,-2,9],[-2,-7,-10]],[[3,-5,-5],[8,3,2],[2,7,7],[6,8,-7],[-8,-1,-5],[1,-6,4],[-7,-1,-8],[-10,8,-4],[-5,-1,6],[2,-10,-10],[6,4,-8],[-5,3,-7],[10,-3,3]],[[5,6,2],[5,-8,7],[-9,9,-2],[4,-2,-5],[1,-6,-4],[-2,6,-5],[1,-2,-7],[5,9,1],[-1,-1,3],[-3,9,-9],[-6,-4,-8],[-3,-2,-8],[-4,-5,8]],[[-4,-3,3],[-1,2,-4],[7,-3,-6],[-1,-2,4],[2,-2,10],[-4,-9,1],[5,-6,2],[-10,-10,9],[4,5,-2],[5,-8,10],[-4,-4,9],[5,-7,-1],[-9,-9,3]],[[-6,-7,2],[-1,-3,1],[9,-8,-10],[-8,3,4],[-4,6,-5],[-1,-4,2],[-2,-3,2],[-10,1,3],[5,6,7],[-3,-4,-4],[5,-10,8],[7,2,4],[-5,-6,2]],[[-8,3,6],[-6,10,-7],[-1,-4,5],[10,1,-3],[-10,9,5],[-7,8,-6],[7,3,-4],[-4,5,5],[-9,4,-10],[4,3,6],[-5,-10,-1],[9,-10,9],[-5,2,-10]],[[-1,-3,8],[-10,-3,-8],[-1,-2,-7],[-9,2,9],[5,4,-5],[4,3,9],[-3,6,3],[5,-6,-7],[9,-9,5],[-4,-3,8],[3,4,-9],[1,-3,8],[-10,10,-9]]], dtype = "int16")#candidate|4274|(9, 13, 3)|const|int16
bop_4275 = relay.not_equal(var_4273.astype('bool'), relay.reshape(const_4274.astype('bool'), relay.shape_of(var_4273))) # shape=(9, 13, 3)
output = bop_4275
output2 = bop_4275
func_4282 = relay.Function([var_4273,], output)
mod['func_4282'] = func_4282
mod = relay.transform.InferType()(mod)
var_4283 = relay.var("var_4283", dtype = "int16", shape = (9, 13, 3))#candidate|4283|(9, 13, 3)|var|int16
output = func_4282(var_4283)
func_4284 = relay.Function([var_4283], output)
mutated_mod['func_4284'] = func_4284
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4499 = relay.var("var_4499", dtype = "float64", shape = (8, 5, 2))#candidate|4499|(8, 5, 2)|var|float64
uop_4500 = relay.acosh(var_4499.astype('float64')) # shape=(8, 5, 2)
output = uop_4500
output2 = uop_4500
func_4506 = relay.Function([var_4499,], output)
mod['func_4506'] = func_4506
mod = relay.transform.InferType()(mod)
var_4507 = relay.var("var_4507", dtype = "float64", shape = (8, 5, 2))#candidate|4507|(8, 5, 2)|var|float64
output = func_4506(var_4507)
func_4508 = relay.Function([var_4507], output)
mutated_mod['func_4508'] = func_4508
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4711 = relay.var("var_4711", dtype = "uint8", shape = (5, 10, 12))#candidate|4711|(5, 10, 12)|var|uint8
var_4712 = relay.var("var_4712", dtype = "uint8", shape = (5, 10, 12))#candidate|4712|(5, 10, 12)|var|uint8
bop_4713 = relay.multiply(var_4711.astype('uint8'), relay.reshape(var_4712.astype('uint8'), relay.shape_of(var_4711))) # shape=(5, 10, 12)
output = bop_4713
output2 = bop_4713
func_4716 = relay.Function([var_4711,var_4712,], output)
mod['func_4716'] = func_4716
mod = relay.transform.InferType()(mod)
var_4717 = relay.var("var_4717", dtype = "uint8", shape = (5, 10, 12))#candidate|4717|(5, 10, 12)|var|uint8
var_4718 = relay.var("var_4718", dtype = "uint8", shape = (5, 10, 12))#candidate|4718|(5, 10, 12)|var|uint8
output = func_4716(var_4717,var_4718,)
func_4719 = relay.Function([var_4717,var_4718,], output)
mutated_mod['func_4719'] = func_4719
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5652 = relay.var("var_5652", dtype = "uint16", shape = (7, 12, 16))#candidate|5652|(7, 12, 16)|var|uint16
var_5653 = relay.var("var_5653", dtype = "uint16", shape = (7, 12, 16))#candidate|5653|(7, 12, 16)|var|uint16
bop_5654 = relay.minimum(var_5652.astype('uint16'), relay.reshape(var_5653.astype('uint16'), relay.shape_of(var_5652))) # shape=(7, 12, 16)
uop_5657 = relay.asin(bop_5654.astype('float32')) # shape=(7, 12, 16)
uop_5662 = relay.sinh(uop_5657.astype('float32')) # shape=(7, 12, 16)
output = uop_5662
output2 = uop_5662
func_5665 = relay.Function([var_5652,var_5653,], output)
mod['func_5665'] = func_5665
mod = relay.transform.InferType()(mod)
mutated_mod['func_5665'] = func_5665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5665_call = mutated_mod.get_global_var('func_5665')
var_5667 = relay.var("var_5667", dtype = "uint16", shape = (7, 12, 16))#candidate|5667|(7, 12, 16)|var|uint16
var_5668 = relay.var("var_5668", dtype = "uint16", shape = (7, 12, 16))#candidate|5668|(7, 12, 16)|var|uint16
call_5666 = func_5665_call(var_5667,var_5668,)
output = call_5666
func_5669 = relay.Function([var_5667,var_5668,], output)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5741 = relay.var("var_5741", dtype = "float32", shape = (15, 6, 14))#candidate|5741|(15, 6, 14)|var|float32
uop_5742 = relay.erf(var_5741.astype('float32')) # shape=(15, 6, 14)
output = relay.Tuple([uop_5742,])
output2 = relay.Tuple([uop_5742,])
func_5744 = relay.Function([var_5741,], output)
mod['func_5744'] = func_5744
mod = relay.transform.InferType()(mod)
mutated_mod['func_5744'] = func_5744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5745 = relay.var("var_5745", dtype = "float32", shape = (15, 6, 14))#candidate|5745|(15, 6, 14)|var|float32
func_5744_call = mutated_mod.get_global_var('func_5744')
call_5746 = func_5744_call(var_5745)
output = call_5746
func_5747 = relay.Function([var_5745], output)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5787 = relay.var("var_5787", dtype = "float64", shape = (14, 1, 16))#candidate|5787|(14, 1, 16)|var|float64
uop_5788 = relay.sqrt(var_5787.astype('float64')) # shape=(14, 1, 16)
func_5744_call = mod.get_global_var('func_5744')
func_5747_call = mutated_mod.get_global_var('func_5747')
var_5810 = relay.var("var_5810", dtype = "float32", shape = (1260,))#candidate|5810|(1260,)|var|float32
call_5809 = relay.TupleGetItem(func_5744_call(relay.reshape(var_5810.astype('float32'), [15, 6, 14])), 0)
call_5811 = relay.TupleGetItem(func_5747_call(relay.reshape(var_5810.astype('float32'), [15, 6, 14])), 0)
func_900_call = mod.get_global_var('func_900')
func_906_call = mutated_mod.get_global_var('func_906')
const_5823 = relay.const([2.084267,-2.970198,5.165935,0.807263,-4.407393,0.707701,2.955560,-2.398238,9.000520,-3.735440,-4.820305,-0.437203,-6.924131,0.930567,2.593407,-2.562306,3.057030,5.748747,-8.410756,1.925600,-2.092224,9.522732,2.892507,4.058292,-6.802953,2.921190,-0.397629,1.133417,1.728430,-9.145863,3.969952,9.755475,8.519490,4.265732,3.323079,6.012832,8.999834,-7.326943,-4.152964,4.273738,6.190132,-9.664260,-8.504239,-8.158198,-2.826255,1.180888,5.915391,0.074733,0.364805,-3.625495,2.651628,-5.186793,7.335544,8.269834,3.108483,-2.626059,8.625488,-4.813584,-3.067620,8.343544,9.208059,-3.459380,2.465808,9.704293,-6.983379,-8.749688,1.253204,-1.087746,9.943492,3.136111,-0.595489,0.548651,-3.169449,-1.892452,-1.708014,5.411354,-0.321852,7.476127,9.892788,-7.228742,-4.392111,-1.898878,0.860212,-3.123852,-0.872624,9.998021,4.702149,8.687188,-1.528642,-4.487405,6.922850,-0.831934,7.479724,-1.082460,0.861861,-8.335125,2.104674,4.702984,9.717706,0.880665,8.236332,9.046753,4.734777,-3.590563,-5.171765,-8.491803,4.743200,5.694350,-7.250389,7.943432,-6.332421,-1.563110,-0.132805,-2.652589,4.163469,-5.645286,8.260063,-1.659378,-1.114500,-4.557769,4.248028,-8.616646,-4.240836,-9.048271,6.856412,-9.198752,7.621915,3.164365,-0.981417,-6.389739,0.971291,9.890583,-1.863748,1.533586,-3.739500,2.334902,1.749002,-8.530984,1.161413,-9.280875,1.172478,-9.290574,3.425437,-6.591057,1.325483,-5.970256,6.668012,5.893437,8.572713,-5.073398,4.843287,3.548584,-1.570243,-1.521652,-1.365166,-7.730238,6.133457,0.920219,8.754528,-4.546579,-2.992223,0.540226,-9.218613,9.240614,-9.167641,-1.149222,8.921106,-7.427870,2.817284,7.450877,7.902439,8.002165,-4.143882,-4.684835,5.507465,-4.952925,8.584799,9.099903,1.449550,3.862929,1.953116,2.019099,1.366805,-7.875981,-6.466531,0.990316,0.594382,-0.234793,7.779484,0.382975,8.551779,-9.726104,-7.859260,8.123999,-7.407290,1.380416,-7.047352,-6.516701,-6.751108,-7.188951,-4.540677,-5.377736,2.596275,7.410146,6.494324,6.674637,-8.121040,1.295066,0.281546,-6.480807,1.487097,9.173136,-0.289376,-3.591082,-9.763931,3.131394,-7.455848,2.449514,-2.283311,-7.220537,7.838057,9.570752,4.625553,-4.458688,2.325054,-1.245386,-5.319374,-6.970311,0.989590,2.181141,5.220663,-6.852294,1.350700,8.170472,-4.945443,9.780308,6.047068,3.467595,-0.509741,-2.730388,1.070240,-3.207332,-7.991914,-2.098888,6.726899,-1.835170,2.895597,-0.481495,-7.928486,-5.964926,6.956397,-1.156714,-3.192295,0.347985,-3.496450,-2.501932,-3.113500,6.168272,3.145384,-7.584119,-8.344232,-9.054065,8.150609,-0.831229,-3.761657,-9.218931,-2.506414,2.852869,0.020556,5.335887,-3.105674,8.827448,7.990964,7.671044,-7.447782,5.494305,-8.690937,-0.536831,5.184371,6.566627,-1.008329,4.224669,7.883415,5.595488,-0.621777,-4.087994,0.946062,7.668443,-9.036647,8.325357,8.828291,3.320241,-1.045111,6.265387,-8.844433,-5.666552,9.738377,-0.278133,-2.841787,0.593696,-8.714481,4.503807,9.607568,-4.788196,4.735230,-0.891901,4.653524,4.816523,-1.768886,8.512578,7.683440,5.147841,4.962881,3.690000,7.839182,-9.723776,-5.397311,5.981031,0.101755,-2.298739,-4.970214,3.562040,-1.012606,0.895181,9.400192,-9.576031,-2.010681,0.576822,4.589332,4.070772,7.964672,-3.334407,5.860860,8.067409,-5.330516,-6.191350,8.961993,-4.793466,-8.882359,-1.584984,-6.753753,-5.925007,-9.720759,-0.344652,8.467268,-8.429171,-3.476885,-4.823726,4.856358,-5.042086,5.912533,-8.260377,-9.366318,3.285448,-4.743049,-5.080949,-9.976455,-1.940224,3.036917,-0.546658,-6.799232,9.770022,4.725399,2.119663,-6.019328,-1.401858,-8.887425,-6.874764,0.151395,1.251935,9.495668,-1.916828,-9.395608,-6.803668,-9.138395,-3.776706,9.882703,6.281183,-2.053700,2.808330,-6.775110,-4.658290,-5.964844,5.882852,-2.019356,-9.575716,-7.392512,2.112567,4.257836,-0.491776,-9.012049,-8.018214,9.958450,9.585069,-6.625333,-3.651059,-7.582425,4.218448,0.373408,6.626290,2.588411,5.967496,-3.015945,8.538673,-0.333068,5.962140,-5.813912,-0.367501,1.766697,4.505555,5.492249,-5.209675,7.401447,-7.294025,-8.638355,-5.764405,4.337680,-3.437185,9.816150,3.946585,9.531746,-2.725981,1.890034,2.532676,-0.996747,-6.000455,-3.786765,-2.042043,2.196819,-0.699353,-6.449115,6.922026,-0.720444,0.110899,3.504488,4.361642,-6.897969,5.147616,6.558684,-8.160540,0.957131,3.616022,-5.803206,8.931056,-2.773031,3.709047,8.824065,7.849163,-4.293440,7.503363,5.178519,5.688130,-3.647255,1.047036,8.313426,-5.291021,9.001454,1.078709,0.960079,4.907787,-6.124858,-8.548136,9.530631,-1.647322,-7.749834,-3.217526,-7.562829,2.524606,-4.249318,-1.781817,4.885538,-0.409498,-9.125517,-5.393424,7.396815,-2.363275,-4.972373,7.152744,-8.770319,-3.406052,1.098152,-8.373730,-6.298864,-6.442608,3.404483,-3.095871], dtype = "float32")#candidate|5823|(486,)|const|float32
var_5824 = relay.var("var_5824", dtype = "int64", shape = (660,))#candidate|5824|(660,)|var|int64
call_5822 = relay.TupleGetItem(func_900_call(relay.reshape(const_5823.astype('float32'), [6, 9, 9]), relay.reshape(const_5823.astype('float32'), [6, 9, 9]), relay.reshape(const_5823.astype('float32'), [6, 9, 9]), relay.reshape(var_5824.astype('int64'), [660,]), ), 0)
call_5825 = relay.TupleGetItem(func_906_call(relay.reshape(const_5823.astype('float32'), [6, 9, 9]), relay.reshape(const_5823.astype('float32'), [6, 9, 9]), relay.reshape(const_5823.astype('float32'), [6, 9, 9]), relay.reshape(var_5824.astype('int64'), [660,]), ), 0)
bop_5831 = relay.subtract(uop_5788.astype('uint32'), relay.reshape(var_5787.astype('uint32'), relay.shape_of(uop_5788))) # shape=(14, 1, 16)
func_3712_call = mod.get_global_var('func_3712')
func_3715_call = mutated_mod.get_global_var('func_3715')
const_5837 = relay.const([[-1,6,-4,-3,3,2,-7,-9,-4,1,7,-3,-3,-2,8,5,6,7,10,-4,3,-10,-1,-7,3,10,7,-4,-4,9,6,-1,7,-2,-9,-1,-4,-5,9,-8,10,-4,-3,-7,5,-7,2,-3,8,-6,-4,9,10,-1,-8,1,8,4,4,-6,-9,-9,-3,-10,2,7,-2,3,2,1,2,-7,7,-2,5,7,-3,5,-3,-8,-10,10,-3,4,-7,-5,-6,9,-6,-2,9,4,-10,-9,-5,-9,-1,-7,-9,2],[-5,-5,1,-4,-5,7,10,5,2,4,-10,-10,-1,5,-7,6,-6,-5,-6,-2,-9,-4,-10,-8,2,10,4,-3,7,5,-7,-6,-3,-7,-1,-10,10,9,3,-4,1,9,4,-2,-1,6,9,8,4,1,-6,6,-6,-10,2,6,-10,9,-6,-6,8,-5,-4,9,10,-1,-2,6,2,9,-10,5,9,-3,-7,-1,10,1,1,-10,-1,-1,8,3,3,-3,-6,-2,-4,-1,3,5,-10,-5,-8,3,-6,6,-2,-5],[2,6,6,-4,-3,3,-7,-7,-7,-7,9,-6,-6,10,-1,1,-5,-3,4,-5,-10,-3,9,5,4,2,-4,10,-1,6,-7,7,-5,-5,6,8,-8,-7,2,-2,-4,2,3,7,-4,7,-1,5,5,-7,-2,8,-7,-7,-7,-9,-3,8,-5,-9,-8,-2,1,5,9,-6,8,-3,1,7,-8,8,7,9,-8,1,-7,5,10,5,-5,-2,-8,-9,4,-8,10,6,-1,9,7,7,3,-3,3,4,-10,-10,-1,7],[5,-10,1,-4,2,2,-5,5,-1,3,-8,-4,3,-9,3,2,1,-2,-7,-7,-10,-2,7,3,6,4,4,4,-1,4,1,3,5,6,-2,4,-1,-8,-4,6,8,-5,9,-10,6,-4,7,9,-5,-7,-8,-10,7,-7,9,-10,5,-9,-9,-5,-2,-10,-8,-2,-5,-9,-10,-2,-7,8,2,4,7,4,-4,-1,-7,5,1,8,6,7,-6,-5,-9,10,-4,1,-10,7,1,10,8,-5,5,-3,1,-9,10,-10],[10,2,-4,3,-7,10,8,-8,-5,5,6,-3,9,-4,9,-10,5,10,3,5,-4,8,5,8,8,-2,-1,-3,-8,-1,-2,3,-1,7,8,5,-7,6,10,-1,-9,-7,7,-3,7,-1,5,6,-9,-1,7,3,-3,-7,4,3,1,6,-8,-3,2,-3,8,-4,-4,-5,3,6,-6,-8,1,6,3,-1,10,7,-10,9,-2,4,-10,-9,-7,-10,8,-5,-1,-4,-10,7,-1,-2,-7,-6,7,-4,-2,-9,-8,4],[-9,6,8,6,4,-10,8,-3,-4,-5,-2,-8,-2,3,-8,-7,-6,6,-4,3,-6,3,4,10,-7,-1,-3,-3,-7,-4,-5,-1,5,-6,10,7,2,-1,-5,6,-5,3,5,-3,-6,9,-10,-4,-10,6,-10,7,2,-8,-10,-3,1,-10,-3,3,2,3,-2,8,9,-3,6,3,-9,-9,5,-3,7,5,8,1,9,1,3,5,-1,1,10,7,4,10,7,6,-9,-4,-10,-5,1,2,3,-3,6,4,-7,7],[7,1,-1,8,1,-6,-10,-9,7,2,9,-8,1,-2,5,2,-7,7,-1,9,-8,-2,-6,-9,4,-4,-9,7,4,-10,9,2,4,-7,6,-8,10,3,3,-10,-3,2,-7,-2,10,-2,4,6,-5,5,-8,-6,-3,6,-2,6,1,7,-9,-2,3,-10,10,-4,-1,-6,2,-9,10,-10,2,-8,-4,-2,8,-3,-8,7,-1,2,-2,10,10,-6,3,-5,-3,-7,-9,-1,-2,7,7,7,7,-7,10,10,7,2],[-3,4,-1,-7,9,-9,-2,1,10,-9,-7,-3,-6,-7,-10,-10,10,-1,4,-3,-5,5,9,-9,4,-8,-4,8,-6,10,7,-9,5,-8,-7,3,-3,1,2,3,-8,7,-1,-2,1,3,6,-5,-1,2,-1,-1,-3,8,-2,3,1,-2,6,-9,5,-7,3,2,4,-3,-10,1,9,-1,10,1,-6,4,-4,-1,5,2,1,-4,-9,-9,-5,2,-10,5,7,-3,-8,4,-2,-2,4,-8,9,9,-9,9,-7,-8],[-2,-8,10,3,-10,1,-4,2,-9,5,10,-8,-10,-5,-7,-5,7,-9,7,-4,-9,-1,-7,2,-3,6,1,-4,-10,-10,-1,8,-10,-4,1,6,-2,4,1,-5,-5,8,2,6,3,3,-3,-4,9,4,6,1,-8,-7,-5,3,-1,5,-5,9,1,1,-2,8,3,-3,-3,-8,1,2,-6,-5,8,-2,5,10,-1,9,-4,-7,3,7,-4,7,-8,9,-5,-3,-6,-5,-6,4,-6,3,4,-8,-9,10,-9,7]], dtype = "int64")#candidate|5837|(9, 100)|const|int64
call_5836 = func_3712_call(relay.reshape(const_5837.astype('int64'), [6, 10, 15]))
call_5838 = func_3712_call(relay.reshape(const_5837.astype('int64'), [6, 10, 15]))
output = relay.Tuple([call_5809,var_5810,call_5822,const_5823,var_5824,bop_5831,call_5836,const_5837,])
output2 = relay.Tuple([call_5811,var_5810,call_5825,const_5823,var_5824,bop_5831,call_5838,const_5837,])
func_5848 = relay.Function([var_5787,var_5810,var_5824,], output)
mod['func_5848'] = func_5848
mod = relay.transform.InferType()(mod)
var_5849 = relay.var("var_5849", dtype = "float64", shape = (14, 1, 16))#candidate|5849|(14, 1, 16)|var|float64
var_5850 = relay.var("var_5850", dtype = "float32", shape = (1260,))#candidate|5850|(1260,)|var|float32
var_5851 = relay.var("var_5851", dtype = "int64", shape = (660,))#candidate|5851|(660,)|var|int64
output = func_5848(var_5849,var_5850,var_5851,)
func_5852 = relay.Function([var_5849,var_5850,var_5851,], output)
mutated_mod['func_5852'] = func_5852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6038 = relay.var("var_6038", dtype = "float32", shape = (7, 4, 3))#candidate|6038|(7, 4, 3)|var|float32
uop_6039 = relay.log2(var_6038.astype('float32')) # shape=(7, 4, 3)
bop_6048 = relay.less(var_6038.astype('bool'), relay.reshape(uop_6039.astype('bool'), relay.shape_of(var_6038))) # shape=(7, 4, 3)
func_4096_call = mod.get_global_var('func_4096')
func_4099_call = mutated_mod.get_global_var('func_4099')
var_6075 = relay.var("var_6075", dtype = "float64", shape = (672,))#candidate|6075|(672,)|var|float64
call_6074 = relay.TupleGetItem(func_4096_call(relay.reshape(var_6075.astype('float64'), [12, 7, 8])), 2)
call_6076 = relay.TupleGetItem(func_4099_call(relay.reshape(var_6075.astype('float64'), [12, 7, 8])), 2)
uop_6080 = relay.asin(uop_6039.astype('float32')) # shape=(7, 4, 3)
output = relay.Tuple([bop_6048,call_6074,var_6075,uop_6080,])
output2 = relay.Tuple([bop_6048,call_6076,var_6075,uop_6080,])
func_6082 = relay.Function([var_6038,var_6075,], output)
mod['func_6082'] = func_6082
mod = relay.transform.InferType()(mod)
var_6083 = relay.var("var_6083", dtype = "float32", shape = (7, 4, 3))#candidate|6083|(7, 4, 3)|var|float32
var_6084 = relay.var("var_6084", dtype = "float64", shape = (672,))#candidate|6084|(672,)|var|float64
output = func_6082(var_6083,var_6084,)
func_6085 = relay.Function([var_6083,var_6084,], output)
mutated_mod['func_6085'] = func_6085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6197 = relay.var("var_6197", dtype = "uint64", shape = ())#candidate|6197|()|var|uint64
const_6198 = relay.const([[[-6,-1,-10],[9,-10,3],[-10,-6,8]]], dtype = "uint64")#candidate|6198|(1, 3, 3)|const|uint64
bop_6199 = relay.add(var_6197.astype('uint64'), const_6198.astype('uint64')) # shape=(1, 3, 3)
output = relay.Tuple([bop_6199,])
output2 = relay.Tuple([bop_6199,])
func_6212 = relay.Function([var_6197,], output)
mod['func_6212'] = func_6212
mod = relay.transform.InferType()(mod)
var_6213 = relay.var("var_6213", dtype = "uint64", shape = ())#candidate|6213|()|var|uint64
output = func_6212(var_6213)
func_6214 = relay.Function([var_6213], output)
mutated_mod['func_6214'] = func_6214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6639 = relay.var("var_6639", dtype = "uint8", shape = (13, 13, 5))#candidate|6639|(13, 13, 5)|var|uint8
var_6640 = relay.var("var_6640", dtype = "uint8", shape = (13, 13, 5))#candidate|6640|(13, 13, 5)|var|uint8
bop_6641 = relay.equal(var_6639.astype('bool'), relay.reshape(var_6640.astype('bool'), relay.shape_of(var_6639))) # shape=(13, 13, 5)
output = bop_6641
output2 = bop_6641
func_6648 = relay.Function([var_6639,var_6640,], output)
mod['func_6648'] = func_6648
mod = relay.transform.InferType()(mod)
var_6649 = relay.var("var_6649", dtype = "uint8", shape = (13, 13, 5))#candidate|6649|(13, 13, 5)|var|uint8
var_6650 = relay.var("var_6650", dtype = "uint8", shape = (13, 13, 5))#candidate|6650|(13, 13, 5)|var|uint8
output = func_6648(var_6649,var_6650,)
func_6651 = relay.Function([var_6649,var_6650,], output)
mutated_mod['func_6651'] = func_6651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6965 = relay.var("var_6965", dtype = "float32", shape = (14, 16, 16))#candidate|6965|(14, 16, 16)|var|float32
uop_6966 = relay.log2(var_6965.astype('float32')) # shape=(14, 16, 16)
output = relay.Tuple([uop_6966,])
output2 = relay.Tuple([uop_6966,])
func_6990 = relay.Function([var_6965,], output)
mod['func_6990'] = func_6990
mod = relay.transform.InferType()(mod)
var_6991 = relay.var("var_6991", dtype = "float32", shape = (14, 16, 16))#candidate|6991|(14, 16, 16)|var|float32
output = func_6990(var_6991)
func_6992 = relay.Function([var_6991], output)
mutated_mod['func_6992'] = func_6992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7039 = relay.var("var_7039", dtype = "float32", shape = (11, 1, 8))#candidate|7039|(11, 1, 8)|var|float32
uop_7040 = relay.sin(var_7039.astype('float32')) # shape=(11, 1, 8)
func_4096_call = mod.get_global_var('func_4096')
func_4099_call = mutated_mod.get_global_var('func_4099')
const_7043 = relay.const([-7.594474,-0.180761,-3.942268,-4.683615,2.796632,3.814194,9.008455,-4.643841,6.473509,-2.939168,-3.190278,-3.387873,7.065649,5.499613,-7.746146,-2.058934,-0.888420,-3.189279,-7.319934,0.568157,4.900039,-2.802811,-7.655780,-2.723119,-5.798167,9.707772,2.837811,4.768153,5.635999,-7.946641,-8.710140,0.229352,2.949701,-3.665969,-9.924000,4.678547,-4.501401,-2.356379,-1.025789,-9.967526,-4.911509,-3.290257,5.762774,-6.916812,-7.602233,-0.117767,3.118770,2.552498,7.133792,-3.719866,-6.775620,-2.574933,-3.405715,9.570087,1.418760,9.499576,8.753112,-5.965874,-6.597015,9.731903,5.759622,5.568026,2.678008,3.721564,-7.732456,6.393033,4.598937,-4.249480,-2.004991,1.758976,6.724492,5.169173,-5.362078,-6.696980,-2.406292,3.588746,3.643294,-7.201366,-8.301094,-8.240743,-4.401340,9.107904,0.721489,6.693899,2.623848,7.223967,7.138030,3.105200,-5.460745,-7.576394,8.807836,-1.938337,8.721014,-8.123690,-0.703710,-3.610756,-5.796110,1.246385,1.986916,8.066204,4.290237,-9.781358,-6.316597,-5.908980,9.033769,2.006433,-4.032272,4.000054,4.034187,4.656089,-9.756411,-7.847680,8.057775,-1.883275,-7.040552,5.237703,6.500629,-0.416540,9.907790,-8.834144,-2.822581,-5.622748,-8.621468,-4.225630,4.105181,9.634234,7.696716,-0.201122,9.590099,-7.915738,-6.873188,9.133380,9.857353,4.629737,-1.757840,7.443980,-1.670361,-6.521801,5.723469,-2.157309,-9.632301,8.626706,4.592488,2.001013,-9.209462,-2.908436,3.496218,-9.888961,5.219470,-5.018629,-7.059876,-5.689956,8.257574,6.371177,3.180067,2.234907,8.587660,-2.727043,-9.112184,-6.537421,3.004179,0.313626,-2.014125,9.831351,-4.918646,-6.237138,7.877815,6.345232,7.400600,9.350468,-4.425899,-6.704610,4.799505,-2.351012,-8.283576,7.247324,8.278990,5.514791,-6.564273,8.528386,-5.873913,5.045267,6.248805,-8.447146,6.969288,5.596989,-5.931033,-9.209454,-8.689958,2.309730,0.886193,-2.939052,1.222448,-1.992253,-4.213177,-2.984903,9.833176,-6.798283,-3.353973,7.043566,5.146378,4.482074,6.181356,7.691425,-9.118297,-1.839001,8.571476,-0.595397,-3.569299,7.826294,3.656342,8.614744,7.828686,6.108695,-8.094438,-4.404185,5.170759,5.038080,6.019279,2.168257,7.771707,9.700493,-9.651049,-5.074513,-4.691755,-4.315556,6.617716,5.809709,2.824114,7.789467,6.047402,4.409547,1.741300,0.322678,-2.733301,5.544576,1.653258,-7.218452,-1.769418,-5.400444,-1.583345,-9.857734,9.444897,3.060635,-5.133459,-8.871392,-5.500767,3.727082,1.097105,-2.085749,0.473932,1.922748,-2.900791,-1.703201,-6.217129,4.087075,5.388121,8.526343,4.316212,-6.721236,7.323501,-3.745835,-9.460432,6.090363,-1.725497,0.522723,4.568786,-4.457319,7.187450,5.142388,-3.359326,-3.798678,-3.496508,-9.382342,-1.783830,-9.768006,3.440753,3.942004,-2.072699,4.833279,-9.323778,-5.863025,-3.844769,5.091424,1.460873,1.972079,-9.354484,-4.789138,0.121720,-9.258689,8.079494,4.603188,5.128937,-5.516387,-5.464013,9.196798,7.798461,-7.899837,-3.051690,1.218178,-1.833897,1.779815,-8.357047,-6.560359,-8.149709,-6.103591,3.406130,7.861457,-6.520556,-3.127097,7.943211,-0.773028,1.001702,-5.039773,-9.463590,8.557700,1.082835,9.348971,-2.619238,6.408431,1.160566,-4.821139,-3.734306,0.156623,-2.196696,5.497636,0.462941,-7.927232,-1.581158,2.154979,-0.867591,-5.744115,8.527619,4.170586,3.661296,9.821455,-5.781507,8.015352,3.612127,-5.131698,-8.884304,0.741094,7.264716,-6.485376,0.009930,-4.035424,-9.797245,3.871070,3.697041,-4.084371,1.671066,2.291680,9.832010,-1.002812,1.549317,-8.064286,-3.550152,-5.044330,8.775726,-8.902110,-1.983299,-9.770950,8.194746,-8.134743,9.744698,6.837555,-8.413876,-5.675806,9.236809,-6.338687,4.557231,-6.647334,0.093919,9.519154,4.890619,2.290937,8.702637,-2.154503,7.008908,2.170214,8.758471,1.053212,8.586640,-2.688987,0.159233,6.759293,1.514584,-1.980288,-7.587495,-1.771802,5.799344,1.417087,4.968483,9.826308,0.530638,2.249160,3.794001,-5.339750,6.175382,7.686997,-8.147516,1.132597,-3.286524,-5.053506,-4.268145,-9.488808,-5.413395,-5.702032,-7.597275,-8.204814,-7.052720,-5.590412,-2.740370,-2.430582,7.703170,-5.529027,-7.025173,-3.177601,-4.378740,-6.702347,6.598369,-1.726158,-3.537674,8.973761,8.521950,-5.858670,-1.577520,9.167300,-6.675678,-7.044545,-4.907277,8.051430,-0.659271,5.513020,-2.933034,0.413401,4.203215,2.459556,-8.598524,-7.593187,-1.134768,0.118240,7.966030,9.130112,-9.912507,-0.910023,9.428313,-3.150887,0.033850,-1.333377,5.440100,9.136145,9.220395,-0.313157,7.123851,1.356205,-5.482596,-5.403696,-7.593002,2.843061,2.195662,3.056661,2.749764,2.357166,5.925938,-5.993401,5.360070,6.002416,-1.602594,6.423478,-6.884738,5.979437,8.163063,3.348661,8.768942,5.965962,-1.377802,7.937732,-7.993576,-2.374015,-9.463104,-9.632081,-1.384865,9.365252,5.431678,-2.518260,0.190555,-6.424762,-1.767762,-2.533142,-5.440580,-6.113824,-4.804701,-3.116030,-3.692091,8.300303,0.578165,0.953991,9.857574,-6.103940,3.968512,9.562665,-6.527015,9.473314,3.187519,0.327190,9.973334,-4.830812,8.927798,-1.776410,6.089310,5.708774,2.493601,-8.507687,9.708788,-5.122594,7.154631,8.309747,2.493794,-0.463362,3.214516,9.273723,-6.871296,-7.010894,-9.092245,2.280613,-2.269728,6.985270,0.465799,1.908378,-0.017047,4.859205,2.513597,-2.832841,-8.035975,2.445631,-0.216034,-8.778903,-1.423361,-1.792612,-7.781333,-5.110108,-6.454108,-9.436421,0.660134,-0.479166,3.432999,2.037060,3.256397,-3.820183,2.605491,9.129786,-4.985334,-9.306860,-8.193080,5.523811,-3.203342,-8.033629,9.952351,0.168624,-5.817820,1.247734,2.270135,-9.657290,-2.172091,-9.558428,-6.579992,1.164586,-2.991385,6.375445,-9.287847,5.863858,-9.612781,-5.404624,-8.654981,-3.315474,9.380551,3.564556,-7.088704,3.199761,-7.878074,-3.438783,1.065600,8.484062,7.405681,8.999336,9.631941,5.075087,-2.315361,-0.151459,2.759848,1.642690,-0.550475,7.016114,-8.863033,9.953871,8.455569,2.926469,2.536622,-4.432844,0.128154,-3.394786,-6.927825,-8.151851,1.956279,7.713993,0.366736,-4.391424,4.287655,-1.911441,-2.937527,-1.270641,-1.060613,6.775643,-3.304204,-1.130567,5.998437,1.264797,-3.023850,-1.190299,-4.323439,-0.927961,-7.820528,5.349608,8.309841,8.296622,4.880124,7.279134,5.517779,2.371377,-0.140813,1.689983,-3.054772,9.917003,-4.808909,7.845598,2.211740,-5.383502,-6.741424,-9.298451,4.681354,1.287451,5.558764,-9.629708,8.935444,5.851161,-5.108357,8.576122,9.468706,0.595113,-9.268421,-5.895908,3.237949,3.664240,-8.982935,1.957008,7.831665,-7.365396,8.746820,0.437511,-7.175036,-3.016091,2.397934,6.307938,-4.641438,-7.883477,0.352044,-1.822404,0.200517,-6.053280,2.704466,-2.992737], dtype = "float64")#candidate|7043|(672,)|const|float64
call_7042 = relay.TupleGetItem(func_4096_call(relay.reshape(const_7043.astype('float64'), [12, 7, 8])), 1)
call_7044 = relay.TupleGetItem(func_4099_call(relay.reshape(const_7043.astype('float64'), [12, 7, 8])), 1)
var_7066 = relay.var("var_7066", dtype = "float32", shape = (11, 16, 8))#candidate|7066|(11, 16, 8)|var|float32
bop_7067 = relay.minimum(var_7039.astype('int8'), var_7066.astype('int8')) # shape=(11, 16, 8)
func_1241_call = mod.get_global_var('func_1241')
func_1245_call = mutated_mod.get_global_var('func_1245')
var_7071 = relay.var("var_7071", dtype = "float32", shape = (48, 1))#candidate|7071|(48, 1)|var|float32
const_7072 = relay.const([6,6,-7,-10,1,-7,7,-5,-5,-1,-8,8,5,-9,3,-2,1,8,8,-4,-9,-3,-8,3,5,-8,10,-5,5,4,3,10,7,-9,8,-6,-8,-3,9,-10,9,9,3,6,9,8,7,3,-6,9,-10,8,3,-4,7,-9,1,8,4,-2,4,-3,7,-7,2,6,-10,-2,8,-7,2,-3,-4,7,-5,-8,-10,-1,1,-2,3,-7,-4,8,-4,7,9,-1,1,10,8,6,-3,8,5,8,-8,1,-3,4,-3,3,10,-6,1,-8,6,-8,-1,2,6,1,5,8,10,5,-2,5,4,7,-9,-6,-9,3,-1,-5,7,1,-10,9,-2,5,-5,-7,4,-4,-9,6,-5,9,4,-4,-1,-2,-5,-1,5,10,8,1,-3,3,-7,1,9,-9,3,-3,-8,5,6,-10,-4,3,10,-4,-8,5,7,9,-6,-7,2,5,-5,-5,10,1,6,6,7,8,-6,-3,9,-6,-10,5,-3,4,-5,-8,-2,9,-5,5,4,1,6,-2,6,9,-3,8,9,3,-8,-8,-1,2,1,-10,-1,-6,5,-2,-6,-6,9,4,-7,1,9,8,4,10,9,2,-10,-7,-6,5,1,-10,7,-8,2,-10,9,-5,-9,-10,-4,10,-9,-9,7,-7,-7,-1,-5,-7,-8,-10,-6,-2,1,-5,2,-8,-2,8,-3,10,-3,2,-9,5,-7,-6,1,8,-10,6,8,-5,-1,2,7,3,2,-8,-6,2,-9,8,8,3,-9,-10,-2,-9,-5,8,2,1,-1,-7,-5,2,-7,5,6,-1,-8,-6,-5,5,6,1,-9,2,-5,-6,-5,-4,9,-8,-9,4,2,-8,-2,7,10,-6,2,8,-6,-8,3,3,-1,-8,2,8,1,10,-10,-1,-7,-9,4,8,2,-1,6,-6,9,-9,-8,-4,2,-2,1,7,2,-8,-3,-8,-10,1,-7,5,3,-6,1,-7,3,9,5,-3,2,-5,8,2,-4,-6,-10,-8,6,-1,1,-2,-9,10,7,-1,7,-5,-1,2,10,8,-2,-2,-8,7,-4,8,2,-7,1,7,6,-2,-1,-2,-4,-2,7,-5,8,8,1,-7,-4,-1,4,5,-1,5,-1,2,9,4,-7,-5,-10,-1,9,-3,2,-9,1,-4,-1,4,-8,-9,-10,5,1,4,-2,-4,3,-3,-1,-1,6,-7,-6,1,7,5,5,7,-1,-9,8,-6,-9,5,-1,4,-4,6,-10,-6,-7,6,-10,-7,-4,5,-8,-10,-10,-8,-3,-10,-1,-7,-3,10,5,-1,-9,-7,5,-2,1,-1,-8,3,3,-8,-2,-9,-9,5,5,10,-6,-6,9,5,1,-2,-9,4,-10,8,9,-7,6,-4,-9,6,1,6,1,9,-1,5,-8,2,1,-8,-5,3,-6,-2,-1,-10,-10,4,2,-5,6,3,-7,10,2,2,-4,9,-2,-6,-9,7,7,-3,5,-1,8,-5,-8,-4,-4,8,-9,-9,-7,-6,-3,10,-4,-10,10,10,-7,2,-9,-6,3,10,-2,-5,-5,-7,-3,10,-9,8,4,-9,2,-8,8,-5,-9,-6,-3,-2,-3,-9,-8,-6,1,-8,2,8,9,-7,2,-1,-7,4,10,-10,-4,9,-8,-9,-9,-4,6,-4,-7,-5,1,10,3,-7,9,-5,-6,5,9,1,-2,-8,-6,-5,-3,4,6,-1,-9,9,-8,10,-9,6,-8,-8,3,-3,10,3,-8,-9,-10,-3,-3,-6,-9,2], dtype = "int64")#candidate|7072|(660,)|const|int64
call_7070 = relay.TupleGetItem(func_1241_call(relay.reshape(var_7071.astype('float32'), [3, 8, 2]), relay.reshape(const_7072.astype('int64'), [660,]), ), 3)
call_7073 = relay.TupleGetItem(func_1245_call(relay.reshape(var_7071.astype('float32'), [3, 8, 2]), relay.reshape(const_7072.astype('int64'), [660,]), ), 3)
bop_7078 = relay.floor_mod(uop_7040.astype('float32'), var_7071.astype('float32')) # shape=(11, 48, 8)
output = relay.Tuple([call_7042,const_7043,bop_7067,call_7070,const_7072,bop_7078,])
output2 = relay.Tuple([call_7044,const_7043,bop_7067,call_7073,const_7072,bop_7078,])
func_7098 = relay.Function([var_7039,var_7066,var_7071,], output)
mod['func_7098'] = func_7098
mod = relay.transform.InferType()(mod)
mutated_mod['func_7098'] = func_7098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mutated_mod.get_global_var('func_7098')
var_7100 = relay.var("var_7100", dtype = "float32", shape = (11, 1, 8))#candidate|7100|(11, 1, 8)|var|float32
var_7101 = relay.var("var_7101", dtype = "float32", shape = (11, 16, 8))#candidate|7101|(11, 16, 8)|var|float32
var_7102 = relay.var("var_7102", dtype = "float32", shape = (48, 1))#candidate|7102|(48, 1)|var|float32
call_7099 = func_7098_call(var_7100,var_7101,var_7102,)
output = call_7099
func_7103 = relay.Function([var_7100,var_7101,var_7102,], output)
mutated_mod['func_7103'] = func_7103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7898 = relay.var("var_7898", dtype = "int16", shape = (10, 13, 5))#candidate|7898|(10, 13, 5)|var|int16
var_7899 = relay.var("var_7899", dtype = "int16", shape = (10, 13, 5))#candidate|7899|(10, 13, 5)|var|int16
bop_7900 = relay.less_equal(var_7898.astype('bool'), relay.reshape(var_7899.astype('bool'), relay.shape_of(var_7898))) # shape=(10, 13, 5)
output = relay.Tuple([bop_7900,])
output2 = relay.Tuple([bop_7900,])
func_7907 = relay.Function([var_7898,var_7899,], output)
mod['func_7907'] = func_7907
mod = relay.transform.InferType()(mod)
var_7908 = relay.var("var_7908", dtype = "int16", shape = (10, 13, 5))#candidate|7908|(10, 13, 5)|var|int16
var_7909 = relay.var("var_7909", dtype = "int16", shape = (10, 13, 5))#candidate|7909|(10, 13, 5)|var|int16
output = func_7907(var_7908,var_7909,)
func_7910 = relay.Function([var_7908,var_7909,], output)
mutated_mod['func_7910'] = func_7910
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8453 = relay.var("var_8453", dtype = "float64", shape = (5, 1, 11))#candidate|8453|(5, 1, 11)|var|float64
uop_8454 = relay.exp(var_8453.astype('float64')) # shape=(5, 1, 11)
output = uop_8454
output2 = uop_8454
func_8458 = relay.Function([var_8453,], output)
mod['func_8458'] = func_8458
mod = relay.transform.InferType()(mod)
var_8459 = relay.var("var_8459", dtype = "float64", shape = (5, 1, 11))#candidate|8459|(5, 1, 11)|var|float64
output = func_8458(var_8459)
func_8460 = relay.Function([var_8459], output)
mutated_mod['func_8460'] = func_8460
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8628 = relay.const([[[-1.117765,3.145016,0.441444,0.032518,5.870041,4.149319,-9.985888,-6.779570,5.590817,-3.745691,1.565236,-1.077761,-9.029889],[-4.003637,-9.391516,5.546603,4.939890,-5.763668,-8.508263,-0.928881,6.688018,-6.309565,8.842103,-3.662041,-7.621669,2.902896],[8.863736,-2.563054,-3.650844,7.552409,-1.029867,3.232179,-6.909530,-4.305677,6.392648,-4.165987,-6.199361,8.891798,-2.772789],[3.660329,-2.416375,-2.676649,-5.029847,-6.139062,5.416059,8.505072,-9.719326,-8.326613,1.532967,8.486148,9.917499,0.131173],[-2.902332,-2.478068,7.059301,9.859450,-9.981586,3.973791,-0.686885,1.238621,-4.944662,7.760345,-5.110307,9.291869,4.069491],[-5.103234,-1.527319,-2.237785,-3.476464,0.916305,-5.731191,-6.506612,8.286521,3.873934,7.198135,7.818757,-8.765358,-0.257426],[-6.447453,-3.510195,8.984614,0.798156,-5.383754,-3.180316,-7.480968,-9.294485,0.100048,5.022736,6.520387,-7.093309,-8.315221]],[[-1.664565,1.333000,2.578871,-0.352159,4.861161,-2.055043,9.876585,-6.242966,-6.306819,-6.454140,-1.130023,7.751793,-2.863243],[-3.324730,4.605666,-8.617909,6.096293,-8.751423,-7.385020,-5.585301,-7.655528,-2.951007,-7.017756,-2.590204,5.280301,9.074368],[-1.994061,0.128408,6.563416,9.698118,-0.924188,-0.865568,3.601333,-4.786001,4.466286,5.038530,-1.573542,-7.850299,5.373327],[5.288521,3.639646,-8.684113,0.504345,-4.148047,7.512275,4.072854,6.871302,-2.147133,-0.755538,-1.396729,6.230919,-7.795177],[7.320455,-8.568364,1.236640,4.361245,1.610785,-1.501655,-0.428703,2.003591,-7.439675,0.806908,0.438348,9.220471,9.083444],[9.488155,9.055459,-7.664813,-0.935405,6.674277,-7.137365,-6.409382,-1.607553,-1.647556,0.492205,1.031586,-1.360883,-9.729541],[-8.800225,3.264871,3.060576,-5.845765,-4.129889,-7.506625,-1.770209,-5.035872,-7.060114,-0.636522,8.365713,7.500836,-4.981315]],[[9.410867,-6.453169,-6.250651,7.015948,-1.493104,6.408637,8.111589,4.865826,-2.285575,-7.380321,-3.571436,-9.571135,5.464080],[3.204170,-2.570775,3.378724,-4.109511,4.458107,-5.419665,-6.494800,-9.637848,-1.637055,-5.465497,0.022965,2.993601,6.238199],[-2.325226,-9.520672,-7.014846,3.439484,4.878362,-3.991557,-9.427996,8.629531,-7.070747,8.648752,5.681350,-1.312372,2.780930],[-8.293102,9.088768,-0.286101,5.848436,-5.768595,-0.655804,1.702501,-5.984054,5.580133,3.216215,-7.054772,-8.067248,-9.652928],[6.917100,1.877644,-0.816694,4.904586,-1.254852,-7.761721,-3.147533,5.858264,-5.924628,-8.610939,-9.813609,1.976967,-9.360180],[9.437824,4.632769,-3.993448,-6.267137,7.146629,-5.743080,7.543671,-9.039069,-5.087603,-9.310974,1.839811,-8.230291,3.147676],[9.249619,4.973805,-6.280588,-8.619515,-9.078844,-2.623473,8.650351,-8.971159,-6.421003,-2.389767,4.956228,0.990599,-0.952828]],[[-5.359589,2.802824,1.855020,-1.879182,-7.293285,9.787812,-4.205970,-6.799996,-2.117680,-3.080158,9.587127,-9.343265,7.166224],[-3.438065,0.597109,2.641346,-1.643443,-8.808827,3.346136,-0.781895,3.039427,-3.357881,6.964129,7.207085,-9.273323,-6.713111],[-8.621394,6.105551,-4.344454,0.578761,-3.700469,9.184149,3.342817,-9.007726,-4.609876,-6.566206,-9.592769,8.224110,3.861910],[-0.934262,-6.507492,1.119972,8.817849,-4.852400,6.822635,-9.426178,-9.057450,-9.850254,8.866737,-9.052628,3.623638,7.315669],[-8.123433,4.349101,6.072699,0.382583,6.732846,7.555998,-3.734836,-2.025472,1.104444,1.352781,2.956302,5.688640,4.223593],[-7.650601,-6.507945,-7.791502,1.481043,2.296418,0.316500,-0.655004,3.010886,-8.854381,-8.575774,1.775921,2.256521,9.433466],[-1.403396,9.975052,1.773094,-1.971672,0.999311,-8.090187,8.490018,-1.831065,-7.908050,9.159612,-7.519576,3.289780,-8.166051]],[[-2.738596,-9.888754,-1.469048,-3.870456,-9.163761,-8.387108,2.614372,2.372744,-0.945723,3.128257,-5.022117,4.375403,-3.618521],[8.647352,-9.042593,-8.280256,9.044238,5.590686,-6.250284,3.411717,1.797912,2.836785,8.198322,-8.998955,0.421437,-3.158636],[6.209305,3.906808,3.228398,-3.240397,3.869895,-8.361125,5.292551,-9.716754,0.891185,-8.416852,9.423164,-7.971116,-2.635972],[-5.246779,-8.397382,5.512394,5.149175,5.605737,0.408082,-0.537364,8.744508,7.474713,-4.266194,-6.936531,2.157665,-9.023723],[-1.833038,-0.070264,5.606681,4.333931,8.227194,-2.518714,5.192927,-2.122997,6.582751,6.492821,1.182181,2.324947,5.526891],[-5.216469,-9.547807,6.411897,6.938414,0.139452,7.108919,-1.050278,-1.238621,7.505958,5.192536,-0.201405,-5.896494,6.266167],[1.825706,-3.214673,-8.669195,8.694999,6.729362,0.832009,-7.105491,-1.730302,9.761522,9.786979,3.109303,-3.894498,-0.640527]],[[3.818038,-2.567977,-3.586626,8.467141,-4.740817,5.891555,-0.221813,4.112451,2.836695,-9.406079,2.043036,9.448413,7.593817],[2.636838,0.151699,9.340966,-3.402172,6.188765,2.217668,0.950553,-5.313753,7.084656,-9.783123,-9.316847,0.956607,3.199990],[7.039283,0.769498,4.752045,-4.059738,-4.771693,4.826670,7.043845,9.541451,6.010116,0.532102,-3.232130,-1.955873,3.493939],[-1.288438,8.073433,7.885869,-9.697346,-8.452041,5.734646,-7.000396,-0.787005,-1.756381,-5.143844,-8.803628,1.142718,7.017239],[-6.240345,-3.387851,8.680565,-2.194535,-0.354770,8.730941,-0.420608,-9.578965,-9.563876,4.954860,-0.760625,-9.452827,-5.337456],[-3.476244,-6.341130,4.547603,0.227866,-6.442295,-9.750555,2.956261,-6.241986,-1.462403,-8.891111,-0.526707,0.829908,4.809832],[-2.490449,3.054874,-0.785024,-3.449990,1.810832,-2.524003,6.158105,7.400201,2.967423,-5.518613,7.859936,8.921540,8.428955]],[[-6.926992,6.323415,-7.008904,-2.627976,-8.071396,9.428980,3.731710,-7.199143,2.151146,7.811213,-6.244559,8.832384,-9.091174],[4.418847,9.907854,-8.350269,0.114590,7.672195,3.959782,6.856874,6.011803,-9.732973,-4.177009,-3.224116,-3.115715,-8.362718],[-5.805840,8.051966,9.862004,-9.984528,6.803614,-9.349766,3.597316,-0.554957,6.231869,-1.604894,-1.148542,-3.779680,-5.455289],[-9.803543,-8.249362,7.390492,-9.349858,7.130659,8.205203,-9.211721,-9.014555,9.671301,8.451647,-9.779519,-5.129795,3.283703],[5.535080,9.457805,-4.531390,-8.122472,-3.201057,1.811428,-8.849760,-5.001453,4.922602,-0.759455,-4.873520,7.636179,1.479406],[-8.395879,-1.099378,-3.850566,7.557446,3.192276,8.673358,-9.137877,1.296023,6.331348,5.739750,5.744562,-3.170322,-0.660588],[-4.667476,-3.933680,-9.858993,3.058819,-7.646007,-8.757259,1.640075,1.095436,-5.430384,-3.872524,-1.712644,2.200360,-1.911822]],[[-9.503595,8.607483,9.239054,-5.167990,5.709971,-9.704790,0.533009,8.251869,8.889029,-9.649192,7.244387,-1.595498,-2.528491],[0.813700,-5.583320,4.621862,5.887855,-9.543584,-4.273304,-3.714602,3.614653,-5.095507,-2.394151,-1.675112,-8.409916,-4.718631],[6.144014,0.266228,0.684289,-4.999699,-2.749444,-6.880385,-2.907923,-6.856581,0.888410,-8.119232,-3.678679,-7.654375,-6.274899],[-0.443242,3.012805,4.191448,7.159793,-0.144062,0.009950,1.369512,-9.909464,0.859579,-6.413230,0.216785,3.060654,-8.328183],[-4.432818,-4.739333,4.432418,2.899250,5.017087,-6.042005,-6.290903,-5.049723,0.557494,3.612408,5.121754,-5.455380,8.498916],[-1.925616,3.810124,-5.873832,2.234203,7.133353,5.713987,3.889581,9.749619,7.807672,-8.246325,4.638185,5.581358,-5.371839],[-6.891718,-3.114730,-6.644916,-4.000880,0.078403,-8.504388,8.784784,-6.388218,-2.296488,8.834584,3.812753,2.170809,-9.041679]],[[1.212956,-1.368460,5.124082,-3.788801,-9.923543,-3.244917,-7.694141,3.979589,-5.681711,-7.578346,7.216393,-9.548462,-9.719153],[2.643282,0.580317,5.365884,-8.686079,-3.628965,-3.923442,7.937448,-8.574625,4.616209,-5.693915,7.937024,7.851175,0.748865],[-5.546035,3.474814,4.951211,4.128845,4.577443,8.954170,-2.413858,0.140937,-9.534284,0.921394,-7.966217,7.367032,2.153446],[2.202611,8.667972,4.203115,-7.827356,-1.001647,5.726563,-8.465890,-6.638229,-7.931781,-5.205921,9.679351,3.876434,8.349925],[6.357580,-3.975619,8.561952,7.796727,-3.687378,-0.653808,-0.041908,-3.343193,-8.808057,-3.667054,-8.328744,4.081867,-5.211923],[8.564033,7.515251,8.389251,9.721910,0.114122,0.446974,8.879590,1.474848,-4.012504,0.847522,-0.841523,0.293373,-9.445310],[6.513571,-4.445752,9.080549,6.293981,-8.478669,7.797735,-3.301006,-0.657040,-4.317059,9.657260,-7.322457,5.849776,-8.779436]]], dtype = "float64")#candidate|8628|(9, 7, 13)|const|float64
uop_8629 = relay.rsqrt(const_8628.astype('float64')) # shape=(9, 7, 13)
func_4716_call = mod.get_global_var('func_4716')
func_4719_call = mutated_mod.get_global_var('func_4719')
const_8633 = relay.const([-5,-2,-4,-7,8,-3,5,9,8,-7,10,-9,2,4,-5,10,-1,7,7,-4,-3,1,-10,10,-6,-1,4,9,5,5,10,2,-2,-7,-4,-3,7,5,-6,-7,9,-7,10,-1,1,7,-3,-5,5,-1,6,-5,8,2,2,-4,-7,-6,-9,4,-2,3,9,10,3,-4,-3,-2,9,-5,-3,-2,2,-1,-4,2,5,1,7,-9,-3,1,-10,-9,9,9,-2,4,8,4,-10,10,-4,-1,-4,-1,-1,-3,7,1,-7,-8,1,3,-5,3,-5,-3,4,2,-4,5,7,-10,1,10,10,-6,-10,-2,10,-2,-8,6,1,-2,-2,4,-6,-4,6,6,2,8,-3,-6,-6,9,-5,8,2,-3,-8,4,1,-10,1,-2,-7,4,-1,-4,3,2,10,-6,-1,-7,-7,-10,8,-7,5,-2,10,-2,-10,-9,-10,9,-3,2,-5,1,-3,-10,3,2,7,-8,-1,1,9,-2,-2,-8,-7,1,1,-4,4,-7,-3,5,-2,10,-5,7,-2,-2,-2,-1,3,3,-3,10,2,4,-4,-7,4,-2,-8,-3,-7,-5,7,10,-8,-4,3,-8,-1,2,3,-2,9,-8,-2,-7,5,-10,2,2,6,-10,-10,-3,5,6,7,7,-3,-2,5,4,5,-4,-5,-6,-2,7,9,5,-7,3,9,9,6,-7,-3,3,-6,-7,-3,1,1,9,1,-5,-3,2,2,-5,3,1,6,5,1,4,-5,1,-6,6,-2,-4,9,8,7,10,-9,5,-5,7,2,-1,-8,-3,-1,-2,7,-10,3,-10,5,-10,10,-8,-10,2,8,-9,6,-3,-10,-1,-2,-5,-1,7,6,-8,7,-3,3,-8,-1,-9,8,5,8,5,7,7,9,-3,5,3,-1,8,-4,-7,5,1,10,1,1,10,-10,-7,-2,3,-6,-9,3,-1,6,-1,5,-2,7,3,-3,-8,-9,-1,-9,-8,3,2,-7,-2,-10,-1,6,-10,-1,2,5,7,9,4,-4,-3,-2,-2,7,-1,8,1,-9,6,-5,4,-10,-1,8,-7,10,9,2,-10,-7,5,6,1,9,5,-8,4,-7,9,10,10,-3,-1,-2,5,3,7,7,5,5,-2,9,3,8,-3,-5,10,4,6,-2,7,2,-7,4,-7,-3,4,-2,8,-8,-2,-6,4,2,9,-2,1,2,2,-1,-5,-7,-6,5,-3,-7,-7,-7,-6,-10,7,1,5,-6,-7,8,-1,2,-8,-3,1,7,-4,8,5,5,9,10,9,-3,-4,2,-7,-5,1,-7,-8,10,-9,6,-6,6,8,1,1,-6,4,2,-10,6,5,-8,8,-8,8,-10,6,-2,-1,2,7,-9,-3,2,-10,-9,-4,9,-4,-8,3,-7,-6,-1,-1,3,10,9,-4,9,9,-8,-4,4,8,-10,-4,9,-7,-10,-3,6,-6,-9,6,-4,-5,-10,3,-8,-8,1,-5,-5,-9,1,-8,7,2,4,-5,4,3,10,-8,7,5,9,6,-2,-8,1,10,10,6,-1,-4,-3,-7,-5,9,10,-1,6,2,6,-1,-8,5,-2,-3,3,7,6,-9,8,6], dtype = "uint8")#candidate|8633|(600,)|const|uint8
call_8632 = func_4716_call(relay.reshape(const_8633.astype('uint8'), [5, 10, 12]), relay.reshape(const_8633.astype('uint8'), [5, 10, 12]), )
call_8634 = func_4716_call(relay.reshape(const_8633.astype('uint8'), [5, 10, 12]), relay.reshape(const_8633.astype('uint8'), [5, 10, 12]), )
uop_8651 = relay.sqrt(uop_8629.astype('float64')) # shape=(9, 7, 13)
func_1241_call = mod.get_global_var('func_1241')
func_1245_call = mutated_mod.get_global_var('func_1245')
var_8659 = relay.var("var_8659", dtype = "float32", shape = (48,))#candidate|8659|(48,)|var|float32
var_8660 = relay.var("var_8660", dtype = "int64", shape = (660,))#candidate|8660|(660,)|var|int64
call_8658 = relay.TupleGetItem(func_1241_call(relay.reshape(var_8659.astype('float32'), [3, 8, 2]), relay.reshape(var_8660.astype('int64'), [660,]), ), 0)
call_8661 = relay.TupleGetItem(func_1245_call(relay.reshape(var_8659.astype('float32'), [3, 8, 2]), relay.reshape(var_8660.astype('int64'), [660,]), ), 0)
func_1418_call = mod.get_global_var('func_1418')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_8668 = relay.var("var_8668", dtype = "uint32", shape = (180, 4))#candidate|8668|(180, 4)|var|uint32
call_8667 = relay.TupleGetItem(func_1418_call(relay.reshape(var_8668.astype('uint32'), [9, 10, 8]), relay.reshape(var_8668.astype('uint32'), [9, 10, 8]), ), 0)
call_8669 = relay.TupleGetItem(func_1422_call(relay.reshape(var_8668.astype('uint32'), [9, 10, 8]), relay.reshape(var_8668.astype('uint32'), [9, 10, 8]), ), 0)
output = relay.Tuple([call_8632,const_8633,uop_8651,call_8658,var_8659,var_8660,call_8667,var_8668,])
output2 = relay.Tuple([call_8634,const_8633,uop_8651,call_8661,var_8659,var_8660,call_8669,var_8668,])
func_8675 = relay.Function([var_8659,var_8660,var_8668,], output)
mod['func_8675'] = func_8675
mod = relay.transform.InferType()(mod)
var_8676 = relay.var("var_8676", dtype = "float32", shape = (48,))#candidate|8676|(48,)|var|float32
var_8677 = relay.var("var_8677", dtype = "int64", shape = (660,))#candidate|8677|(660,)|var|int64
var_8678 = relay.var("var_8678", dtype = "uint32", shape = (180, 4))#candidate|8678|(180, 4)|var|uint32
output = func_8675(var_8676,var_8677,var_8678,)
func_8679 = relay.Function([var_8676,var_8677,var_8678,], output)
mutated_mod['func_8679'] = func_8679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8689 = relay.var("var_8689", dtype = "float64", shape = (5, 12, 10))#candidate|8689|(5, 12, 10)|var|float64
uop_8690 = relay.sinh(var_8689.astype('float64')) # shape=(5, 12, 10)
func_4506_call = mod.get_global_var('func_4506')
func_4508_call = mutated_mod.get_global_var('func_4508')
var_8697 = relay.var("var_8697", dtype = "float64", shape = (80,))#candidate|8697|(80,)|var|float64
call_8696 = func_4506_call(relay.reshape(var_8697.astype('float64'), [8, 5, 2]))
call_8698 = func_4506_call(relay.reshape(var_8697.astype('float64'), [8, 5, 2]))
bop_8699 = relay.less_equal(uop_8690.astype('bool'), relay.reshape(var_8689.astype('bool'), relay.shape_of(uop_8690))) # shape=(5, 12, 10)
output = relay.Tuple([call_8696,var_8697,bop_8699,])
output2 = relay.Tuple([call_8698,var_8697,bop_8699,])
func_8702 = relay.Function([var_8689,var_8697,], output)
mod['func_8702'] = func_8702
mod = relay.transform.InferType()(mod)
var_8703 = relay.var("var_8703", dtype = "float64", shape = (5, 12, 10))#candidate|8703|(5, 12, 10)|var|float64
var_8704 = relay.var("var_8704", dtype = "float64", shape = (80,))#candidate|8704|(80,)|var|float64
output = func_8702(var_8703,var_8704,)
func_8705 = relay.Function([var_8703,var_8704,], output)
mutated_mod['func_8705'] = func_8705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8770 = relay.var("var_8770", dtype = "uint16", shape = (13, 1, 11))#candidate|8770|(13, 1, 11)|var|uint16
var_8771 = relay.var("var_8771", dtype = "uint16", shape = (13, 2, 11))#candidate|8771|(13, 2, 11)|var|uint16
bop_8772 = relay.left_shift(var_8770.astype('uint16'), var_8771.astype('uint16')) # shape=(13, 2, 11)
output = relay.Tuple([bop_8772,])
output2 = relay.Tuple([bop_8772,])
func_8776 = relay.Function([var_8770,var_8771,], output)
mod['func_8776'] = func_8776
mod = relay.transform.InferType()(mod)
mutated_mod['func_8776'] = func_8776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8776_call = mutated_mod.get_global_var('func_8776')
var_8778 = relay.var("var_8778", dtype = "uint16", shape = (13, 1, 11))#candidate|8778|(13, 1, 11)|var|uint16
var_8779 = relay.var("var_8779", dtype = "uint16", shape = (13, 2, 11))#candidate|8779|(13, 2, 11)|var|uint16
call_8777 = func_8776_call(var_8778,var_8779,)
output = call_8777
func_8780 = relay.Function([var_8778,var_8779,], output)
mutated_mod['func_8780'] = func_8780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8784 = relay.var("var_8784", dtype = "float64", shape = (9, 8, 9))#candidate|8784|(9, 8, 9)|var|float64
uop_8785 = relay.erf(var_8784.astype('float64')) # shape=(9, 8, 9)
func_965_call = mod.get_global_var('func_965')
func_968_call = mutated_mod.get_global_var('func_968')
const_8797 = relay.const(4, dtype = "uint64")#candidate|8797|()|const|uint64
call_8796 = relay.TupleGetItem(func_965_call(relay.reshape(const_8797.astype('uint64'), [])), 0)
call_8798 = relay.TupleGetItem(func_968_call(relay.reshape(const_8797.astype('uint64'), [])), 0)
output = relay.Tuple([uop_8785,call_8796,const_8797,])
output2 = relay.Tuple([uop_8785,call_8798,const_8797,])
func_8801 = relay.Function([var_8784,], output)
mod['func_8801'] = func_8801
mod = relay.transform.InferType()(mod)
mutated_mod['func_8801'] = func_8801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8802 = relay.var("var_8802", dtype = "float64", shape = (9, 8, 9))#candidate|8802|(9, 8, 9)|var|float64
func_8801_call = mutated_mod.get_global_var('func_8801')
call_8803 = func_8801_call(var_8802)
output = call_8803
func_8804 = relay.Function([var_8802], output)
mutated_mod['func_8804'] = func_8804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8839 = relay.var("var_8839", dtype = "uint64", shape = (4, 8, 12))#candidate|8839|(4, 8, 12)|var|uint64
const_8840 = relay.const([[[-10,-2,3,5,-6,5,-9,8,-5,2,-9,10],[9,-2,-2,-1,-2,-1,3,-8,1,10,-2,9],[-7,3,-4,-2,7,-2,-9,-3,-5,5,8,-4],[-9,-10,5,2,-10,7,-10,-7,-5,7,-1,6],[-5,-4,6,-4,4,-10,3,2,7,-5,8,-3],[10,-10,10,-7,-9,-10,8,-4,7,-5,3,2],[-7,-6,-1,-10,1,-2,-6,-8,9,-1,-3,3],[-8,10,6,-3,3,7,-10,-4,7,-6,6,-9]],[[3,6,-7,-7,9,-8,1,9,-1,-9,5,4],[1,6,-5,6,7,3,3,10,-7,-7,8,-4],[2,1,-7,9,6,-9,10,-6,-7,2,-1,4],[-1,-10,-6,-9,8,-8,-5,-4,10,-2,9,9],[9,10,6,-9,4,5,4,10,3,8,3,-1],[-7,7,-10,-6,10,10,7,-10,-1,-2,-10,-8],[8,-5,9,-8,-10,2,1,-1,-3,6,2,-2],[-2,9,-7,-7,4,10,9,-10,2,8,-2,-4]],[[-2,7,-6,-1,3,10,-7,-7,-10,-4,2,7],[6,7,8,10,-2,6,-6,-6,-6,-1,7,6],[2,8,2,9,-3,-5,-10,1,-4,1,5,-8],[-6,-6,6,2,-1,-3,-6,-10,-9,-9,2,2],[-8,-3,-10,6,2,1,-5,6,-3,-1,-1,5],[-8,2,6,-3,7,-9,-10,7,8,-10,2,9],[6,2,2,9,4,7,5,4,7,3,6,-7],[-9,-7,6,-4,-7,2,-6,7,-4,9,4,5]],[[5,-7,7,7,-5,-7,-2,3,-9,-9,8,6],[10,-3,-1,6,-4,8,8,-7,2,4,-7,3],[4,3,-8,5,-6,-2,5,-2,-10,-2,6,3],[-5,1,-8,8,-8,5,1,4,8,-4,-6,4],[7,-6,7,-2,-8,2,9,7,2,3,-4,9],[-5,-5,-9,6,-4,8,4,2,5,10,-6,3],[-1,-1,5,6,-3,10,-9,8,3,-5,-10,-10],[2,8,9,8,-10,-6,9,5,-3,3,-5,5]]], dtype = "uint64")#candidate|8840|(4, 8, 12)|const|uint64
bop_8841 = relay.bitwise_xor(var_8839.astype('uint64'), relay.reshape(const_8840.astype('uint64'), relay.shape_of(var_8839))) # shape=(4, 8, 12)
func_8776_call = mod.get_global_var('func_8776')
func_8780_call = mutated_mod.get_global_var('func_8780')
var_8846 = relay.var("var_8846", dtype = "uint16", shape = (1, 143))#candidate|8846|(1, 143)|var|uint16
var_8847 = relay.var("var_8847", dtype = "uint16", shape = (286,))#candidate|8847|(286,)|var|uint16
call_8845 = relay.TupleGetItem(func_8776_call(relay.reshape(var_8846.astype('uint16'), [13, 1, 11]), relay.reshape(var_8847.astype('uint16'), [13, 2, 11]), ), 0)
call_8848 = relay.TupleGetItem(func_8780_call(relay.reshape(var_8846.astype('uint16'), [13, 1, 11]), relay.reshape(var_8847.astype('uint16'), [13, 2, 11]), ), 0)
func_6990_call = mod.get_global_var('func_6990')
func_6992_call = mutated_mod.get_global_var('func_6992')
const_8851 = relay.const([-9.198259,4.330939,-2.180712,7.735205,5.508605,3.499461,8.400899,9.884209,5.442045,2.273125,-5.572988,4.432957,-0.892150,-9.686253,-5.728025,8.673900,7.496003,4.090855,8.269279,1.392707,-5.854243,-2.051729,4.584252,-5.091006,7.870945,5.145096,-7.106054,-1.188041,2.030982,-5.614821,6.563331,8.795672,-3.436383,-2.428563,7.556584,-1.171722,-3.559929,8.652797,-7.500262,4.203398,4.633578,8.474408,9.372351,-8.782675,-7.963127,-1.022613,0.569004,4.843271,-7.670485,6.660835,4.356977,8.007746,-8.333941,0.874424,-1.647695,-7.473785,-0.599618,2.273849,6.943468,-9.319702,-7.279147,2.372420,-6.859667,-2.065847,7.666567,-7.232146,8.733805,-8.294020,4.018065,4.542749,-5.497741,7.817220,5.762242,-9.131815,7.468428,3.732444,5.129702,6.384256,4.422634,5.052008,6.667042,1.589228,1.128879,-8.441155,5.544508,0.043245,-3.161437,-4.943736,5.073417,-6.881799,-9.978675,6.321494,8.357965,6.739186,-7.406952,4.857720,8.526220,-6.090494,-6.139725,4.680198,-8.311804,-4.991556,7.450271,2.093713,7.541508,7.611638,9.721756,-3.701842,0.822082,2.369246,-4.753358,4.417202,1.772473,-8.418146,7.035600,9.618285,-5.219217,-9.373435,9.027797,5.075474,1.804477,-5.981026,9.500799,0.038048,-6.564496,-4.737735,8.477841,-7.339665,7.817985,3.346704,-7.195531,0.232297,-9.641469,7.554431,9.498068,-5.135117,4.924607,2.937908,2.687907,-9.865695,2.921989,-2.446845,-0.959726,9.756027,-0.244900,-1.429639,8.534912,1.123677,1.901463,9.538151,2.834739,-8.730642,-1.155598,6.173069,-0.329350,-1.665782,-5.343189,6.245295,8.520073,8.519560,5.686100,8.781358,3.903853,-4.588195,5.589976,2.706884,0.389277,9.274827,8.134307,-4.802118,-5.094277,2.958822,3.731567,-5.459334,3.093977,-9.026040,6.684893,7.429986,0.890385,-8.097424,-5.549838,7.192970,1.389861,3.624583,-0.935460,-1.022812,-2.619392,6.278083,-1.418032,6.024170,1.244458,-9.923105,6.636191,0.434537,6.996535,0.501680,3.391876,-2.114218,2.837938,9.065533,7.347261,9.620353,3.203435,3.872765,-1.808716,1.171291,2.988647,-6.947964,-6.272857,0.336892,1.827231,9.932293,3.569046,2.622089,3.818884,-5.561681,4.340651,2.736477,3.809376,-5.302180,7.051960,1.686011,-8.873752,1.608394,-0.832689,-4.106852,1.293626,-1.097086,0.435536,3.426215,0.903876,9.599134,1.563341,7.700598,-2.991849,-7.324639,-8.390811,-8.158506,-9.267890,9.863726,-3.081317,-7.388214,8.153986,-3.186040,9.964619,8.677139,-9.061487,4.685826,5.067185,-8.879315,-5.608817,8.551420,-2.027646,4.175048,5.949881,9.723757,2.577989,8.624603,3.078345,1.087264,-9.459315,2.198385,-2.005644,-0.244378,8.086620,2.586342,-0.247137,-3.930581,-5.816758,9.929621,-1.213741,4.334647,-7.967149,-5.976594,-0.602304,-8.738123,6.522772,1.344136,-3.828116,7.284624,-5.956329,-0.463092,-4.455382,-1.850038,-6.087224,-8.263806,-1.875271,-4.801868,9.878898,-1.541353,0.631297,-8.348741,-5.683875,-9.407328,4.601098,0.900104,-5.193371,-9.114392,-4.795070,9.209423,-3.194536,-3.978378,3.685985,-7.141883,9.680664,-5.973927,2.231414,4.292066,6.371071,2.420699,-2.683306,-6.696764,-1.891807,8.447809,9.409035,7.555064,-5.045417,7.591979,5.728786,-1.160494,-9.879151,5.398162,3.620069,-9.998442,-0.241056,-3.027165,-6.116379,1.040199,5.874738,2.190079,3.581952,6.027587,-7.995621,4.291176,-4.043643,1.508317,-6.808451,-9.517604,5.969818,-5.217036,-3.758015,-7.648919,-3.323019,5.410316,-7.277124,-7.754822,-7.018316,-1.550667,-4.789158,-7.215641,1.260221,-9.638264,-1.264103,-0.002714,2.559117,7.348588,7.310871,-9.690842,8.529559,8.831401,-8.923462,8.083220,3.933887,-4.510324,1.950034,-3.853911,-4.394403,-8.491527,-5.735915,-2.894031,-9.801778,6.732463,-0.220729,9.405145,-5.807602,4.196556,-8.035121,1.660241,-8.685966,-7.544918,-0.199577,5.508135,7.771424,7.139644,-7.024490,2.405283,0.135396,-2.408809,-6.846999,1.339161,-3.485898,0.507402,1.552769,1.006332,-8.122839,2.906885,-4.967184,5.014922,-7.864986,5.437597,3.933725,9.038776,-4.079050,-4.816057,1.747909,4.590492,-7.726002,4.337614,5.015622,-2.564629,-5.658096,-1.699828,-5.951672,-9.921650,-3.853223,6.757326,-3.320129,-8.674967,-9.762003,7.500863,-4.442897,0.511402,6.579722,-3.930097,2.879363,9.191345,-6.194919,2.893193,8.052874,9.909180,3.939096,3.792905,-3.989823,-8.391523,-1.135208,-5.786048,-6.926578,-1.277924,-7.153311,-4.259814,0.859929,9.730014,7.260086,-5.911184,-3.128008,-1.563872,-2.388697,5.615291,2.393806,0.234785,6.550342,-4.507806,4.140906,-5.346163,7.356955,-7.682646,-1.298473,-7.925827,-9.063858,-4.351723,6.649249,-4.410218,7.736850,-3.993753,-1.393500,-2.450447,9.334736,8.777776,9.363275,0.670764,0.982668,7.409978,7.721344,8.987847,-7.290260,6.353113,6.411527,5.040637,3.727602,2.083432,9.755521,-2.205091,3.534868,-9.139370,9.510437,0.185432,2.445943,-6.516517,0.542629,-8.297539,3.907613,6.786319,2.505635,0.749017,-8.851901,-4.583403,7.683166,-4.432610,7.050124,5.864040,-2.167791,1.324074,-0.974740,9.959805,7.323436,7.995644,7.381526,3.454047,-9.099173,6.619698,-2.729719,-4.707376,-7.548598,-4.613334,2.691842,-7.787180,-4.296321,8.179146,1.296871,-2.462315,-8.809837,-4.187793,-8.069723,5.360096,-7.530882,5.823067,-1.310328,-6.012976,2.964268,-9.302789,0.005657,-5.106841,-8.167925,-0.522349,-3.115362,1.822029,-7.073630,-9.159407,1.404638,0.709824,4.598114,-0.248958,8.175348,-2.796291,3.966843,7.837022,-6.166220,8.320089,-7.351599,-3.571102,-5.114640,9.529502,5.917338,-7.005370,7.796831,9.644135,-4.902771,8.259625,-4.256398,-5.042857,-8.037919,-6.601944,-7.554937,-1.225840,8.737837,7.026343,-4.099546,7.387161,1.859878,-2.535424,3.776010,8.254191,-6.098031,3.959652,-1.982054,-8.579122,-2.113113,7.750860,-3.343822,0.584446,4.504718,-1.364000,8.412980,1.441514,1.218805,-1.922874,3.905218,-0.024752,-8.608063,5.355911,-3.494313,9.846128,-8.707341,0.352202,-5.507187,6.744787,5.761481,5.439565,7.892126,5.889074,3.245545,0.288401,0.791034,-8.268009,-0.209784,0.116789,4.653736,6.170230,0.555363,3.986079,8.657065,5.744134,-8.883546,2.547808,-9.131246,-6.246417,-0.457075,-0.058591,3.143213,8.026322,-8.208358,-0.157735,-8.137693,-3.108188,-3.526887,3.515603,-4.264305,9.209203,-3.968231,-5.935646,9.537672,-0.161725,-5.283784,-6.071419,2.355197,5.331336,-1.727965,8.001522,7.660610,-7.024544,0.081122,2.505815,2.760977,-3.832591,-6.015769,-2.829239,8.292698,5.585835,8.081540,-6.690014,-0.554073,9.008980,3.481840,8.060224,-2.788656,4.279510,8.559327,4.885503,7.575930,-3.228521,-9.634111,3.498111,9.196682,4.721623,-6.078452,9.815706,-2.830982,5.354610,-4.982095,-6.031812,2.186894,-5.355577,6.908165,2.392569,-3.418034,-5.925787,-0.517398,-6.067088,-7.434848,-2.009592,4.659536,7.152943,-3.478177,-4.881709,4.035797,4.752407,-5.568036,-2.556044,7.858959,-0.210759,7.644568,-8.145991,-5.885892,-4.164943,6.489998,-8.885894,-4.010867,-2.744998,-9.179479,8.747829,7.045318,-4.511870,4.339116,9.519340,-1.254656,-3.922883,-0.861891,3.421184,4.533691,-5.490742,9.764376,-0.538516,-5.414643,-4.049794,3.875800,0.532735,5.457447,-2.728131,-3.432944,5.665065,7.632013,-4.919628,8.050501,-9.926753,7.499568,5.064774,2.198544,7.684306,-5.672599,2.608705,0.007423,-0.112186,-9.624179,7.722512,7.189597,-9.870543,-0.367743,-7.542171,-1.103705,5.912243,1.219551,-5.862619,-7.915687,8.768646,-4.965904,-3.949259,3.860233,-9.199248,5.264509,-9.369412,-2.422948,7.490762,4.699686,-4.209824,-7.423309,-0.122250,-8.258374,8.792062,-6.348727,4.031899,6.884461,-8.720313,0.254696,-1.562281,9.315036,6.855873,0.375886,-3.530773,-8.056471,2.776730,-7.562482,6.225089,-1.701946,0.781596,3.219820,0.337431,-0.388383,3.582978,-1.652543,-9.622300,-1.578448,-6.465749,-1.598585,-7.754586,6.058855,-6.915775,9.916095,8.436427,-6.326383,-3.658464,0.308710,-4.553709,-8.860643,3.848899,3.414888,-4.719010,4.954203,-4.257806,2.386003,5.992713,-4.243927,9.452754,4.807524,5.864968,1.063575,5.942598,-5.573261,5.727378,8.225385,4.356412,-1.860049,-4.151197,-9.272237,-7.193942,6.957336,4.279632,4.283356,-6.751586,4.967490,-0.449245,2.572650,9.263127,0.609836,-8.268732,-5.923061,3.850684,8.695533,-7.805245,-4.990014,-6.044087,-6.479739,1.864029,-8.745542,-0.098147,-0.108730,-8.735622,-2.636381,5.944524,-8.877915,-6.711036,2.940700,-0.973283,2.786367,8.573270,4.321541,-6.119527,8.616573,6.579464,0.719517,8.869348,-9.202591,2.651456,2.745707,-0.034011,6.331123,-7.040579,-6.806660,8.798999,-5.856909,-7.332781,-9.960911,1.640003,-2.262843,4.373886,0.865185,5.957792,4.764875,-3.129624,2.547642,-2.947488,-7.568452,-3.485221,8.827522,-3.748342,-3.235469,4.599210,2.874827,-0.798568,5.634903,6.054745,-6.910423,-6.094890,-4.161707,-3.830572,0.244761,-5.488517,-8.472615,0.175802,-9.782440,6.112163,-3.991019,-8.044896,9.111903,9.761557,-4.164027,2.274113,-0.681991,-9.439154,6.264961,-2.528791,-9.578494,-9.589431,1.835747,-8.096214,6.590704,-9.999309,0.095837,-0.445086,5.876135,5.071239,-0.798606,-9.837593,5.322665,0.769081,-6.612225,9.876370,-0.102832,1.806775,1.169508,-2.804909,7.287639,-6.196994,4.708735,4.035156,0.138431,-4.254601,-3.939436,-5.383134,-2.316489,-5.332960,6.978605,6.227708,9.186061,-4.405429,-8.880947,3.918633,0.515617,-9.406750,-0.813069,-7.906783,1.680823,-2.111849,4.772262,2.896688,-9.702593,-0.219394,9.062116,-3.394264,-3.609759,-7.371851,2.733348,-4.253760,2.233130,6.003241,6.966536,8.185928,-3.331931,-1.004571,-5.345531,2.010256,3.088963,5.257926,3.638152,8.413526,-3.889303,7.391363,5.161866,-8.115204,-9.247103,0.790550,4.711885,-8.574455,-4.053294,-4.510002,-6.248948,2.127507,0.923372,0.077466,-9.669918,0.069674,-4.604619,-5.102103,-3.656797,-1.763567,-7.799243,-2.766769,4.111047,-7.598072,9.910205,-4.189739,-7.430162,8.247264,-5.884113,9.657128,5.549403,9.717342,2.155917,-5.575874,2.929315,-5.680836,-2.475654,0.243790,-2.443772,6.915603,-1.629528,5.914479,8.530196,7.422130,4.174669,1.743727,1.666534,-0.137858,-1.315129,-4.551612,-2.428672,-5.628350,-2.195326,-7.388231,8.362628,-1.791837,8.035435,-9.382516,6.786087,1.301317,-9.854996,3.614432,3.126296,-1.674095,-0.911486,4.830631,-9.894747,5.377717,-0.165736,1.017981,9.768718,7.273838,3.099360,-0.642728,7.106672,-8.403309,-1.366911,9.472089,7.842484,0.924536,5.325413,-4.026477,-9.062513,-1.352240,9.191498,-4.536623,3.576045,-4.958087,-7.149704,7.893182,-2.758926,7.694662,-8.504171,-5.742288,4.101388,4.193716,7.689359,-9.513555,-9.465954,-0.242182,-6.905896,-4.158289,-2.408054,-2.011211,3.386803,3.675871,9.622162,-4.291846,7.138882,-8.546320,0.202202,4.399309,5.760554,-2.217210,-7.296854,-3.927747,-1.290914,1.766406,1.308185,3.959928,8.275356,-7.731468,6.995804,-9.098261,4.293287,1.459336,3.395859,4.189764,-6.222325,-4.620089,-6.353595,7.897912,5.183275,-8.221499,7.433710,-6.772892,-6.660677,1.197085,9.884814,-9.798186,-3.180629,6.048151,1.176724,8.083980,5.205273,-5.454489,-9.349153,-9.998940,-9.588216,-4.611922,-8.392568,2.793035,4.463558,-1.191597,-3.778614,4.496415,2.528783,-0.726415,-5.911764,-4.950614,5.508355,1.306317,1.369327,-9.506158,-0.896750,3.593487,2.786548,5.380258,8.240198,8.008671,7.029442,6.485264,-3.782029,2.503139,7.022790,-3.538473,-0.573591,-5.636002,6.027639,-5.704405,2.453903,-4.741080,-8.949263,7.571612,0.842304,4.781781,3.260917,1.762461,2.643587,-0.383568,1.738734,8.781307,3.389125,7.000490,-1.919864,-9.337952,5.222384,-2.976527,0.265230,8.051262,9.681549,9.743687,9.335392,-4.897308,8.865927,0.516163,4.621669,-3.389298,-7.715799,6.934115,0.678011,-0.566717,-3.540497,-8.615804,-2.399796,-9.632930,4.880861,3.180969,8.962062,4.790274,-9.812127,2.022046,1.395483,-5.061566,6.176298,4.098283,-5.941629,4.595189,-4.775508,-1.948915,8.316009,-1.553257,-8.246366,-4.430408,0.894951,-6.444183,-3.336948,9.013198,5.372193,-9.139470,2.245653,-9.464992,7.099171,-0.062588,3.366917,5.868206,-5.767508,0.972064,5.096990,-8.614541,6.367179,-5.763354,-6.477061,-7.781962,-5.033428,-0.544660,-4.774389,2.965663,-0.961297,6.117021,-0.286710,-1.895344,9.249767,7.470756,4.498705,2.942883,-1.958530,7.129876,-1.864281,-0.103531,-3.260870,-5.597734,9.023037,-2.260463,-3.124338,-4.041529,-6.246043,8.509037,-5.703909,-2.927217,-7.459272,2.839551,-3.126561,3.928921,-5.130991,9.375090,-0.014595,2.914142,1.058664,6.863040,2.930921,-3.778388,-5.148425,0.632300,-3.893282,7.574968,-3.744264,4.560400,0.103402,4.650404,-5.044187,-8.195926,-6.495521,4.160192,5.871477,3.989385,-9.152106,6.442171,8.484497,3.182400,-2.123498,-9.992393,3.988063,0.925139,-1.510085,-4.399666,9.226537,2.184644,-4.607303,9.070052,5.919256,7.024661,-6.205539,1.813540,1.582137,1.523082,6.456176,-6.818079,1.676531,9.292901,-1.232096,6.056876,-8.605337,-9.673989,3.094133,-6.355065,-1.574301,-7.075444,-4.898247,8.553489,-7.427325,-4.719422,-5.065550,8.059149,-3.483139,-3.881157,-0.597179,4.493841,-7.203451,-3.229086,6.841752,9.581404,-4.802412,4.198604,4.603937,-1.576782,1.037413,9.209391,-7.175371,-7.634700,3.950294,2.387698,-1.541894,-1.908946,-9.995107,-7.145492,2.954465,-5.414609,3.423024,5.896485,-4.243449,-3.004495,-9.520556,3.328547,-6.722435,5.315809,-2.841213,-2.501785,8.375884,-4.067367,2.200000,-9.898757,-5.345479,-0.045358,-2.182132,-6.889997,1.368508,-9.211112,-4.400717,-9.053362,4.966832,-1.327292,8.048172,-3.263950,3.305696,-1.971593,2.355614,9.551705,2.347736,4.197453,3.378188,-5.117944,4.137770,-3.904847,2.275761,-3.659337,3.359086,-4.932895,0.759589,6.052132,7.037809,7.218058,-0.119032,-6.959509,-2.961507,0.589526,2.438277,2.847224,1.162668,-8.607949,-7.742138,6.613261,1.251618,-6.630448,1.285841,1.924144,-2.740295,6.196304,-4.158034,-0.139459,-2.692398,-2.780148,-8.470833,-8.495246,-3.146784,-7.940014,0.603706,-4.992394,4.327424,-7.166972,-1.315265,-1.462093,-5.732975,-8.109075,7.604201,-9.102796,-6.438549,-4.748057,-0.376110,-0.718294,8.801774,9.480516,1.625471,-8.490359,9.250541,5.380410,-3.214917,-0.426845,0.081181,4.946194,8.305118,-6.262653,1.311250,-2.308516,5.745114,-4.197300,7.783582,-1.893265,0.081332,-0.227367,8.188201,-3.760752,0.129695,-0.958840,8.925619,3.323954,8.535360,0.872241,-2.673283,-8.937633,-4.113382,4.855630,1.576783,-9.385343,-2.998387,5.146098,-9.688996,4.136466,-8.822435,6.909283,-0.794159,-4.380499,-5.867292,-9.435418,-9.509105,9.954370,3.392969,-5.310798,-3.600073,2.565075,0.626984,-4.392144,-6.511486,7.929098,8.806557,4.228598,-4.929611,-1.742303,5.267885,6.917138,1.313858,-2.279087,0.572129,3.080289,-0.145115,-8.512632,0.031405,0.486405,3.761407,-8.858325,8.972803,-9.666980,-9.806258,8.564196,0.050509,6.103486,3.436162,1.243953,-2.643347,-2.109433,0.443094,8.077327,1.646090,-4.757060,0.459493,7.249569,-7.374932,-0.136825,-9.763545,-9.761496,0.552853,7.845199,-2.004394,2.310260,0.817073,6.300106,9.457123,-8.799900,8.731106,5.568852,5.006732,-0.174717,-5.226299,-4.890262,-8.310231,-1.318561,-2.704742,-7.136223,-7.582082,-1.488507,8.330902,-2.604816,-4.721040,0.295678,8.659235,-8.305199,1.949146,9.700305,-7.344569,6.555541,-9.504275,-7.451538,6.590088,0.317972,-2.938536,3.122440,8.076544,-9.441573,-2.695063,-6.552139,-2.881144,9.070480,8.782456,8.626931,-4.137229,-8.530952,-3.214051,-7.564371,7.787237,6.487292,9.063886,1.775721,-4.537759,-1.492129,9.534762,2.884004,2.395903,0.671284,3.077238,-6.116235,4.077416,-7.917483,8.097889,1.830207,6.590698,0.236606,-8.774783,7.962425,-7.487180,2.128993,-2.274849,-5.474049,6.640550,-7.450256,-7.185937,6.925620,0.760855,-1.566861,-4.574319,4.540847,-7.944658,-7.605517,2.906906,-2.659810,1.305185,6.069580,-6.707601,1.032627,-8.103330,-9.105478,6.744524,-3.036330,9.932775,3.121587,6.470906,5.551667,6.413982,-8.252737,-1.259005,4.486184,-3.157280,4.759063,-7.627652,8.102693,0.817002,9.384533,0.945538,2.836010,-9.683564,-9.888354,-4.289064,-3.562922,0.458719,-8.374254,4.468196,8.800601,1.459757,-7.287092,1.404441,-1.769099,3.620363,8.438941,4.385357,0.884928,-0.460922,4.553021,-2.495079,-2.394836,-3.027666,1.686004,-7.640586,-9.704153,0.910820,3.392302,-0.583335,8.318584,-2.222125,-7.271489,-9.525883,7.269032,8.310417,9.719076,-9.587494,0.672140,-6.200671,-2.420511,1.671400,-9.635380,3.200024,7.799142,4.035123,4.233219,-3.792426,-6.418410,-9.828885,0.737865,-2.298878,8.486246,-0.748260,-3.132361,9.368625,-5.370213,5.208796,5.927230,-4.863525,-2.225285,-2.734017,0.821641,2.324887,6.682459,-8.809336,8.764853,2.359307,0.155540,9.386011,-7.924771,8.312810,5.220999,-0.378560,3.913021,2.203082,-0.153191,-7.924554,-7.510725,7.982898,0.995866,-4.138268,4.877773,4.815900,-0.029605,-5.395017,6.931905,6.088638,-4.949061,3.008653,-6.989978,9.779006,-9.984312,7.649909,4.157732,-9.061941,-2.845921,9.526153,-0.116995,-5.447443,5.541741,-6.201705,-5.090167,1.739999,3.556629,8.501760,3.768555,-0.534959,-1.363760,0.384755,5.856236,-2.915637,-5.356216,3.576716,-1.496426,7.083321,-5.951171,-8.070313,2.148256,0.428541,-7.714239,2.758606,2.937872,-8.389469,3.932673,0.594926,2.246549,-0.625765,1.651307,1.288715,8.848872,9.070639,-5.566252,1.693200,8.518385,-5.776013,4.397384,7.875233,2.060950,-5.991912,7.383015,2.805739,2.811070,1.394124,1.649198,-5.092000,4.445700,-6.414270,2.421640,-1.097069,-9.562791,-3.998779,-1.340037,-9.198061,3.602333,-2.537146,-7.142857,-7.694217,3.747559,-9.832979,-2.045106,9.889488,-9.283672,6.576088,3.730291,-0.410257,-7.365839,9.141614,5.345365,-3.212900,-7.366082,7.514512,5.074904,-5.735081,5.939353,5.136910,9.446150,-7.268432,1.324826,3.840380,2.728105,-3.390714,7.358839,-9.669641,-8.964345,5.591099,9.029476,4.243236,-7.988984,4.653482,5.747465,0.846863,6.178322,-2.127293,5.412506,-0.456086,-2.346512,-8.477670,-3.363882,-3.296478,-4.665966,-8.241736,-1.988057,-9.213400,8.537879,0.059041,-5.118424,-2.331595,-3.856905,-0.851634,-2.438563,-5.776277,-7.984928,-4.762770,7.798029,4.555758,9.375901,3.052985,8.602648,-7.604237,5.854975,3.982390,8.194196,2.910547,0.428013,2.323106,-0.558611,-2.470815,9.192749,-9.085840,9.086639,-9.913037,0.364272,-5.600662,1.596018,7.017012,-0.065584,-9.511390,-4.372342,5.546696,-9.502208,-7.515650,-0.386064,2.978955,7.424253,-3.281441,7.583608,9.596149,-7.230572,0.856903,5.393303,-3.169520,-2.123056,8.194501,5.323642,-8.985565,1.487077,-7.479125,9.792232,5.499365,5.797715,9.699728,-8.953442,4.667610,-9.011958,-1.995424,-2.191974,-0.396039,-4.903682,9.604011,-0.535756,4.967621,-8.498117,-4.882309,0.999638,7.811827,0.310885,5.230745,3.791375,6.047493,5.173944,8.307821,-6.042794,-3.075420,3.066755,-0.321995,6.174164,-0.094386,-3.039923,7.331731,-1.853361,-1.913510,6.852166,-7.898131,2.531588,6.136002,3.041864,-2.638963,-5.246276,-2.274031,-5.346890,0.145913,-1.108038,-8.389700,-2.487475,-2.478379,-6.337805,7.685427,-9.949509,-8.408491,5.844955,7.132549,1.769653,-4.162839,-2.128114,4.856784,-3.211846,1.173670,-9.203725,1.942484,9.972943,-6.142823,-4.229221,-7.593529,0.347125,-0.264137,-4.693015,4.363252,8.365506,3.043248,6.900732,8.153768,4.254426,-5.526661,-6.176307,1.545520,-7.019719,7.427552,7.069501,1.848591,-0.294545,4.991851,1.620747,-0.130377,-9.047138,9.975201,4.952610,3.383793,1.351404,-7.244232,5.137058,1.533848,7.250534,5.946219,-0.968890,7.747681,-9.886779,9.350747,-1.290511,6.357854,8.394348,-0.616137,1.540362,-4.536370,2.712589,-0.165610,-3.727203,-3.243358,-1.029896,-4.123969,6.542402,9.545488,-2.891003,6.174860,0.829389,2.302229,7.615200,6.130160,-9.754421,6.986350,-9.267408,-6.319050,-1.204201,9.561324,-3.691261,5.672785,3.657906,-9.103206,-9.439471,-8.026135,-2.515452,-8.950548,5.282679,-4.525024,0.242544,-5.344212,7.470425,-2.447553,6.188243,-8.563708,3.057463,7.045684,-7.390141,-1.940404,-2.273845,-8.938493,9.557993,-0.731927,-7.178129,-9.510340,2.995749,-2.092345,1.088657,-0.824812,-8.426838,7.443524,-4.176533,-1.162918,-3.711431,6.754071,-7.060160,8.307162,7.222868,-1.865853,-6.565368,0.234474,8.730577,-2.318965,3.546052,-8.043638,1.787532,4.232767,-2.416332,-3.037279,9.207379,9.611001,-2.669024,4.686818,0.962947,5.381541,-3.322160,9.821075,-7.412805,-7.633870,-3.128034,6.739260,-3.580958,7.671479,5.870113,3.235274,-6.439704,-4.986313,5.414252,-6.028417,2.037581,-5.926329,-5.026009,-1.885803,0.277135,-8.074266,8.120596,8.281851,7.281816,-5.196571,3.513240,5.116589,0.800087,-4.408229,4.076516,8.613711,-2.633517,-5.818132,3.713064,-7.784717,6.788925,-3.848808,-0.647034,5.387790,-4.742712,-2.208928,1.134469,4.169157,9.095935,-8.568787,-0.896256,-0.910007,4.710668,-8.803855,1.179571,-9.760901,4.166867,2.295092,-6.936220,5.663620,-7.765598,-1.649014,2.864416,-6.112958,9.191832,3.096594,-8.366062,0.205423,-5.318976,-7.958794,-9.274328,6.749695,9.523232,2.474391,2.448801,7.180370,5.237424,0.712926,2.687398,6.391265,-8.263756,0.660139,-8.356722,4.553013,-3.743513,-9.315282,-3.130607,-8.610841,-3.169205,1.595402,5.025386,-1.245831,2.096867,8.784087,2.576048,5.262813,-9.071470,5.993615,0.283295,9.967721,-1.585427,-1.191549,9.792284,5.323965,2.260623,1.273107,0.267591,9.346835,-7.556856,5.620460,1.262708,0.639107,2.032903,1.327086,9.326002,-8.371921,-6.663308,-4.923291,-1.913757,-3.161446,0.071322,-3.093608,8.127987,8.696501,-2.267542,3.660973,1.672346,4.640945,3.710075,-3.232966,-3.306053,6.788334,8.119367,-9.072986,6.857196,4.149732,0.692874,8.766641,7.821684,-2.705777,4.414354,-7.085036,-3.752052,-9.924318,-6.689241,3.227237,1.837336,7.492215,-4.622601,-2.383187,-6.776480,-5.262217,4.565926,-3.089701,-5.953293,0.433232,7.808804,4.353711,5.567031,3.940185,-9.596071,-7.711011,7.266738,-2.691807,-2.647570,0.799348,4.195884,-3.168992,1.304070,0.519327,8.326723,-3.445577,-9.718228,-1.533395,6.605612,1.533869,-4.662138,9.579401,-3.441260,-5.735562,5.857025,7.039055,9.568974,4.977518,8.033076,6.240064,3.072906,8.072340,6.270456,-9.391069,4.628507,-8.673481,9.019938,-8.757818,4.877862,-2.263433,-1.996130,1.069124,8.445236,6.782920,-2.996921,1.059822,-4.214258,7.536199,6.129430,-9.725157,-3.240463,-6.276960,-3.387179,4.243173,5.898899,-5.629192,3.495192,-0.426474,8.385634,3.959325,-3.065048,6.523404,4.143800,-2.986032,-7.409276,-9.626948,8.857597,9.532910,6.969793,2.899118,-4.373759,-3.780548,-2.367025,6.053098,-6.062111,5.892427,4.173892,6.097443,1.178631,4.693253,-5.485120,-7.267263,0.563070,-1.936577,-6.305450,1.425568,8.772787,8.793302,-9.536674,6.085931,4.793324,3.033828,-5.075033,-8.169171,-1.893192,0.408550,0.354490,-8.786343,3.999690,4.171560,1.902975,7.757558,-0.814129,-7.783540,6.849668,-6.824781,-4.645280,5.546960,-7.612176,-7.058713,-8.693513,-2.585885,-2.757058,-4.853140,7.778012,2.392100,-3.441114,1.558084,3.586702,-0.261729,-0.171814,-9.936061,-0.631304,7.322207,4.027110,-7.077312,0.197831,3.700735,0.490844,-0.297081,4.344379,8.248182,-7.580313,-9.722549,-3.745611,-2.851088,6.313992,6.208141,-2.529318,4.465665,0.837472,1.261385,-3.533660,-6.147125,-0.083055,-7.322245,-5.377655,-8.796470,-8.156086,4.653093,0.022125,3.334038,-2.442980,-7.948602,4.040483,-4.926716,2.069386,-3.593773,-9.397236,-0.505067,5.068289,-3.881978,-7.351554,-5.682275,9.015739,-3.583386,3.287031,-1.510842,-6.279463,-2.167433,-2.439951,-6.187677,1.760621,8.206410,1.858333,-9.252287,-0.598862,3.628020,8.960762,2.134474,6.468059,4.119420,-2.246166,-0.913461,8.130385,-5.675943,2.725125,5.289893,2.144476,-6.753228,-8.474747,0.892703,3.479796,-4.284011,-4.491727,3.528750,6.811900,-4.769405,-4.452422,-3.921029,-1.397128,1.496249,-5.193316,-1.414148,5.436903,-8.302960,3.044519,-7.372423,-0.923895,-0.474367,3.770833,-4.709449,-7.092518,-8.331843,3.743188,-5.491935,4.412534,1.213870,4.833276,-2.995346,-6.761505,-9.851880,-0.247073,-9.224391,0.734057,-3.730413,0.522680,5.152527,0.707637,-1.075481,1.237348,-2.544458,8.312281,-5.231325,4.000629,8.370950,0.426821,-6.638264,2.360489,0.471808,9.619597,8.105816,-4.193296,-4.710698,-3.645474,7.741431,-6.076898,-2.150869,7.433870,-5.987295,6.290350,5.723318,3.483366,1.536040,-1.618118,-9.056362,-4.320225,-7.512184,-2.603340,-2.763248,-1.603747,-9.136851,-9.835539,-2.199423,3.089902,-6.299250,-3.548406,-0.673902,5.200070,-3.610613,-3.111002,2.491807,-2.166497,9.071141,1.175610,9.782010,1.128761,-1.360588,1.575797,-2.765982,7.322045,0.472560,-6.483352,8.200381,1.846692,9.849258,-0.262042,-8.562409,4.916779,-0.572768,-1.105298,-9.116337,0.895801,3.049784,6.591485,-3.167352,-4.941864,-4.837312,3.374285,5.118502,-9.007697,-5.117363,9.892355,6.024639,-5.381924,2.006744,-4.008718,4.405971,-8.128029,-1.660569,-8.996243,-8.049456,-7.349916,7.706224,6.316152,9.743849,0.400208,-3.573775,-8.042654,9.274295,6.855960,5.162609,-5.717645,-3.480497,1.849912,-7.538946,8.304542,3.364879,-6.185993,7.600963,3.924763,9.575051,-0.679654,7.372892,7.692041,9.955045,-7.269878,-0.277021,5.714010,0.184475,2.376003,-1.135776,0.301603,6.651361,-3.594001,0.611167,0.979173,7.952185,-2.946409,-3.666788,3.676637,4.856306,0.919874,2.520996,-1.990074,7.552770,-2.514652,-9.186833,5.403232,1.897304,-9.927462,2.874427,9.866400,7.586412,-4.942385,-6.399028,9.612675,3.625830,2.961098,-6.829253,4.232972,-5.024192,0.764528,2.365854,-2.391679,8.502740,9.110273,-5.222585,6.821695,6.863379,5.834808,2.633001,6.534464,6.018013,6.801627,-9.967679,-5.954082,3.420417,1.921934,-4.675125,1.145503,-3.342143,7.646462,-5.168518,-8.477031,-6.187450,1.490293,-1.327234,-2.304587,6.486374,9.420038,-7.551975,-2.694856,-1.119319,1.607267,6.253188,-1.505621,1.605426,-5.358240,-7.075117,6.155408,2.945548,-6.210744,1.236643,5.064461,9.704373,-8.297168,-5.807152,0.853643,-5.461355,-7.858042,2.928880,8.776416,-4.091394,-9.189963,-7.506785,0.950552,-5.125506,-4.011652,-5.428886,8.308582,-6.625911,3.229426,-8.409687,9.052630,9.608325,8.079952,-5.767736,-2.705240,-9.193368,8.309442,-3.405062,-9.461302,2.180231,2.304730,3.053947,1.285637,-8.728251,-6.763820,8.872389,-9.029855,4.746061,1.192278,-0.589444,-2.352862,0.266910,-4.730861,-4.807162,-2.479303,9.051808,4.710996,-1.119689,-8.324512,-2.826691,-5.293064,8.658188,-6.942685,-5.665549,-7.027053,3.994345,6.286415,3.675190,0.116444,1.548764,6.895043,5.334323,5.460432,3.441288,-9.318169,-4.475615,0.241917,5.353016,8.380352,8.709409,2.010761,-5.400756,3.050492,-4.568752,-9.888011,0.910700,-9.664120,-2.823932,-4.388574,7.707257,2.358648,4.504461,1.026628,0.940756,-3.769618,5.037189,5.010470,8.946051,9.406836,8.942016,3.263560,8.388007,5.273042,2.697691,5.097558,5.269333,-9.327205,3.425858,6.664938,-8.635678,0.473592,9.695269,-6.699540,-6.676735,-2.337509,6.669746,-6.414971,6.550727,-0.341729,6.422347,-8.602971,1.968260,-5.854812,-9.322154,8.799121,3.723885,-2.697373,9.999687,7.768533,-1.777770,-2.297684,7.276104,-7.537120,-7.986500,5.861321,-4.122915,-0.525785,7.124801,-6.767635,1.408006,-5.700627,7.361143,0.462133,0.117253,-6.526545,1.054968,5.669825,3.046320,5.156676,7.248440,5.952907,-4.605512,8.576457,-2.074368,-2.881208,0.663951,6.674479,7.135991,2.169362,8.183940,6.173657,-8.563548,-2.861119,-1.746886,-4.563064,-9.766449,-9.879461,0.963722,-2.769150,7.692499,3.981212,-4.368018,4.039069,-5.772154,-8.701858,-6.688197,-8.113982,4.757602,-8.311771,-0.956645,1.721999,9.547427,-3.296856,7.718637,-6.171665,6.675244,6.196731,-9.570245,8.705779,5.763675,7.387149,3.268472,9.829465,-3.190634,5.448685,-2.335735,3.341503,-5.102566,-4.657639,1.790386,-8.852362,6.165824,-9.978884,9.913722,-4.555860,8.298161,-8.469610,1.743240,9.300272,-9.332273,-3.375644,0.815243,-5.151470,3.171860,9.438286,4.659503,6.296293,5.716660,9.341114,-9.157661,-6.782400,8.485621,-9.681310,-0.141092,-5.186195,-0.870392,4.333268,-4.495489,5.907765,-0.384194,-0.160044,3.401739,-8.552608,9.878781,3.710363,5.022522,-6.097288,-3.888882,5.405004,-3.429209,3.154840,7.483673,7.373482,-7.392534,3.743751,5.410530,6.640128,-8.665022,-8.674231,5.438280,7.787666,0.245811,6.558537,-4.354154,-4.775332,-5.618873,-3.442440,-0.903153,0.940657,-5.200853,8.647461,4.679171,-6.177921,8.097582,3.669604,-2.078569,1.130710,-3.257321,-4.066381,-1.588562,-4.491944,-2.072011,-6.637445,-0.162854,-5.483742,-8.227600,-4.817714,-7.148288,8.318025,4.376127,-1.552867,0.164371,8.143195,-4.709510,0.737171,-8.787492,4.951683,-9.503663,4.653721,3.293945,7.562697,-3.736798,4.243944,9.383521,-1.296121,-4.567181,-0.883366,-9.203233,0.751392,0.426183,2.138827,-7.472563,8.678977,-6.096613,9.091745,-3.661473,-9.235425,7.806673,6.259563,-6.818742,7.280623,-7.450082,6.018820,-8.296319,5.294886,7.524383,7.217969,0.126568,-3.868155,-9.119082,3.485998,-2.213851,4.042158,-2.617351,-5.992352,-0.815536,7.456417,-5.518632,2.992215,9.859602,-7.365460,-7.686453,2.578925,-2.919141,8.507845,0.058839,3.662452,-9.758658,9.858928,9.646140,-1.360079,-0.587116,-8.902614,-7.690535,7.690129,-6.489051,-8.115889,6.454132,-1.121165,7.991970,-2.698985,5.602941,-9.530309,-8.614915,-5.790131,-6.819026,9.594187,-2.138452,5.541028,-3.076457,-2.572097,-8.231271,1.320411,-9.300310,-9.510674,2.468241,3.828016,-3.856166,0.932893,6.870292,4.404574,-5.477141,-1.477194,-4.944428,1.444598,-4.155935,-2.299814,-0.392127,8.825567,9.364735,-4.247610,-3.109397,7.641161,1.735427,-8.747445,-8.105665,-2.362714,-3.690153,4.770747,-3.626898,7.928548,8.851387,-6.909500,2.822814,-5.109836,4.797571,-3.863393,-1.602831,-6.295181,-0.716605,0.618303,-9.003541,5.522774,-7.995474,-2.274007,2.534884,-6.675250,4.838731,-0.231973,-8.555544,7.965743,4.135679,5.307401,-7.046788,9.353008,-7.717449,8.985557,9.762237,-2.521817,-0.294641,-4.186526,-4.239044,-1.447215,4.324006,4.663710,8.796349,3.491820,-9.652442,8.406463,9.754953,6.559998,4.899420,-3.258306,3.677676,-9.721671,8.587687,7.305994,4.368283,6.497297,-6.385662,-4.015258,-9.225861,-3.866426,3.862417,6.262580,-4.159840,-2.094162,8.369613,-4.391148,2.609162,-8.658927,-0.778151,5.460611,0.660036,-3.972749,3.752623,-6.616733,7.891759,-0.855926,-3.541404,3.418126,-1.899519,-8.272871,-1.392153,-7.545042,0.848116,0.987762,-1.968089,-1.485574,5.149200,6.512012,8.790363,-3.333532,-1.267109,4.481469,-0.308641,9.102769,8.285239,3.486024,9.320043,7.756749,-9.360762,-7.133179,9.937515,0.395965,7.807223,4.008478,-4.756999,7.183590,-5.600853,8.715601,3.400682,5.862239,-5.679921,4.620613,-0.356434,-8.637256,5.565305,0.380264,9.400063,8.418194,8.502038,-6.058889,3.167476,-3.871853,-9.059036,-9.273935,7.164614,-9.722059,-8.249864,5.720816,7.053841,-7.427506,-5.539524,7.535336,-0.773386,-4.488637,-6.720809,7.864792,6.854530,0.524041,7.309079,2.912980,-0.531376,-8.783868,0.849470,4.054879,5.001155,8.304253,-2.099061,-1.632120,-4.351746,-4.128544,2.442791,-4.529706,-7.287463,-0.302688,3.383705,-8.796160,-3.405779,7.700851,-6.576883,-4.387495,-6.754169,7.446412,-8.916288,3.801813,-4.583589,6.025253,1.082713,-7.683486,-0.891716,2.280618,0.814712,3.609723,-4.688161,3.963825,1.408623,-3.239753,-0.895336,-2.294381,9.557754,3.046890,-7.163759,4.302177,-1.406793,5.594626,1.038656,-2.300863,-8.498847,-6.308694,-7.064848,9.358621,6.709715,7.967273,6.771318,-8.964821,0.566785,-0.826041,3.525751,4.879062,-9.048822,-7.330932,1.261663,-7.442273,-7.101582,-1.783196,-7.137549,-0.279382,-6.257736,2.516298,-2.109387,-3.230628,2.928547,6.981687,2.598441,-5.605478,4.575467,2.753278,-5.104712,-7.870447,-3.072114,4.247386,-9.234011,-8.505431,-2.009159,-6.334600,8.126703,-8.454323,6.060883,9.982632,4.231645,-4.222456,-5.109102,5.518519,4.583216,3.130338,1.140963,5.406827,1.357502,-6.862875,6.768034,-3.008505,0.733180,-8.195309,-0.617915,5.335821,2.539652,-3.477474,3.176607,-0.110190,8.728492,-0.205858,3.912690,-9.180264,0.433015,-3.123443,3.597801,-6.758371,0.791861,7.420938,-8.217689,5.172226,0.999031,-1.836340,-4.746999,9.027474,-8.172358,-7.589706,8.600060,-8.571575,9.000527,-5.966838,3.098419,7.960953,9.999776,-2.845864,-4.896279,5.254858,4.470708,-4.047331,9.520988,3.847494,-4.731838,5.260040,-3.009746,-4.549241,-2.791460,-6.102463,5.143065,-0.052101,4.116141,9.352058,0.673285,9.249586,-3.635696,-3.554293,8.383593,7.350475,6.472779,-6.679710,3.600728,4.836598,6.097322,0.796809,6.348311,2.113232,0.631246,-6.052126,2.675159,9.505128,-5.600851,0.986211,-7.185629,0.274855,9.649779,7.431178,-6.100565,-2.185222,9.838805,4.970913,-2.963066,3.626706,2.468312,-9.056482,7.780783,-7.518666,5.569505,1.122191,-0.336540,3.479441,-8.758431,-3.258538,4.055987,-7.712301,2.397983,5.907813,-7.384288,1.531864,1.238314,9.189947,3.770934,-1.024425,8.577531,-3.898016,-5.450692,-3.181825,0.733741,8.275397,5.804153,0.845122,0.447785,-8.957718,3.781068,9.458143,7.478205,0.273984,-6.969508,5.257989,4.282815,-7.252928,6.917452,9.428726,0.943239,6.703114,-9.384874,7.862058,-5.187671,-3.700346,8.917276,-5.595428,-2.058773,-2.240859,7.239141,-1.576711,2.373964,-7.842699,7.331191,1.308549,-3.274160,-9.034286,1.135651,2.762062,9.361766,5.841599,5.166996,-8.719553,5.047552,8.447371,-1.370605,-4.933145,-1.533223,4.898016,-3.903542,-8.349713,2.429981,9.491867,3.525648,-7.736130,-0.266381,8.829329,0.245947,1.629322,-4.299723,8.941424,3.767368,8.246803,-3.815459,3.931520,4.787101,-2.955493,-0.294540,-8.358624,-3.837467,8.949058,-7.218569,-6.552476,-3.846652,0.391929,-0.319032,1.763695,-9.167195,8.075411,3.522591,7.837098,7.287908,-1.989030,0.926393,4.725020,8.022311,2.340288,0.653169,-4.862352,9.795774,3.227271,-4.201758,6.669886,0.973892,-5.665719,-1.017355,3.899864,5.646877,9.402360,-3.579678,-9.579072,8.918137,-7.954377,5.123733,-8.216378,-9.718563,4.774478,6.456560,9.621425,3.801098,4.052102,5.038496,8.623855,-0.453728,7.328042,3.874190,6.711418,0.322874,-0.609824,-1.963133,-0.299663,-1.808607,5.668268,-0.666822,-7.565725,-5.493691,9.188582,-6.175703,-2.018923,-3.199962,-1.971168,4.920410,-4.848432,4.474079,-4.623973,-7.957072,-6.626762,-8.055355,-1.715781,-4.873432,-8.317246,-9.183351,-1.517444,1.797189,-7.743581,-7.301672,7.018374,-6.881628,9.140214,-2.927765,1.388290,-2.402565,1.396682,3.660741,9.223324,-6.231575,7.942437,-1.908954,-4.766263,-2.443753,4.897225,4.076273,9.459541,-8.091861,6.769280,-4.828778,7.370215,-4.952685,4.699346,-0.487715,0.004136,-3.339705,-0.949208,-4.265135,-2.637046,4.445693,5.780037,9.153612,-8.373176,2.066074,-2.717643,-3.067907,-8.030357,7.368691,-2.881531,9.671509,-2.723201,-9.007487,-5.836103,8.602935,-3.777973,-9.571980,8.873271,-1.106412,9.791330,8.409950,3.712944,-4.606283,-6.271889,4.731372,5.400512,-5.551339,-7.242934,-7.274268,3.384148,-1.990322,-7.457731,-6.174788,-9.976026,7.778140,-7.509668,9.894130,-5.611228,-8.460071,2.897883,-1.162427,-4.440911,1.526021,6.597710,2.902423,9.941329,-9.206246,-4.049581,-0.726014,3.819326,-3.706382,-2.966221,4.463875,8.294870,-7.035298,0.298390,-4.812980,8.923386,8.565710,5.141513,-6.805342,-4.279912,7.629568,1.693351,9.252929,4.031549,-3.269101,5.338118,1.049171,4.290303,-1.286124,-3.514513,-5.996250,-0.701274,-0.647440,-2.566069,-9.040093,-7.121266,8.693022,7.922726,-9.112171,5.072807], dtype = "float32")#candidate|8851|(3584,)|const|float32
call_8850 = relay.TupleGetItem(func_6990_call(relay.reshape(const_8851.astype('float32'), [14, 16, 16])), 0)
call_8852 = relay.TupleGetItem(func_6992_call(relay.reshape(const_8851.astype('float32'), [14, 16, 16])), 0)
uop_8855 = relay.asin(var_8839.astype('float64')) # shape=(4, 8, 12)
output = relay.Tuple([bop_8841,call_8845,var_8846,var_8847,call_8850,const_8851,uop_8855,])
output2 = relay.Tuple([bop_8841,call_8848,var_8846,var_8847,call_8852,const_8851,uop_8855,])
func_8865 = relay.Function([var_8839,var_8846,var_8847,], output)
mod['func_8865'] = func_8865
mod = relay.transform.InferType()(mod)
mutated_mod['func_8865'] = func_8865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8865_call = mutated_mod.get_global_var('func_8865')
var_8867 = relay.var("var_8867", dtype = "uint64", shape = (4, 8, 12))#candidate|8867|(4, 8, 12)|var|uint64
var_8868 = relay.var("var_8868", dtype = "uint16", shape = (1, 143))#candidate|8868|(1, 143)|var|uint16
var_8869 = relay.var("var_8869", dtype = "uint16", shape = (286,))#candidate|8869|(286,)|var|uint16
call_8866 = func_8865_call(var_8867,var_8868,var_8869,)
output = call_8866
func_8870 = relay.Function([var_8867,var_8868,var_8869,], output)
mutated_mod['func_8870'] = func_8870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8949 = relay.var("var_8949", dtype = "int16", shape = (13, 9, 5))#candidate|8949|(13, 9, 5)|var|int16
var_8950 = relay.var("var_8950", dtype = "int16", shape = (13, 9, 5))#candidate|8950|(13, 9, 5)|var|int16
bop_8951 = relay.left_shift(var_8949.astype('int16'), relay.reshape(var_8950.astype('int16'), relay.shape_of(var_8949))) # shape=(13, 9, 5)
func_1418_call = mod.get_global_var('func_1418')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_8957 = relay.var("var_8957", dtype = "uint32", shape = (720,))#candidate|8957|(720,)|var|uint32
call_8956 = relay.TupleGetItem(func_1418_call(relay.reshape(var_8957.astype('uint32'), [9, 10, 8]), relay.reshape(var_8957.astype('uint32'), [9, 10, 8]), ), 2)
call_8958 = relay.TupleGetItem(func_1422_call(relay.reshape(var_8957.astype('uint32'), [9, 10, 8]), relay.reshape(var_8957.astype('uint32'), [9, 10, 8]), ), 2)
output = relay.Tuple([bop_8951,call_8956,var_8957,])
output2 = relay.Tuple([bop_8951,call_8958,var_8957,])
func_8962 = relay.Function([var_8949,var_8950,var_8957,], output)
mod['func_8962'] = func_8962
mod = relay.transform.InferType()(mod)
mutated_mod['func_8962'] = func_8962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8962_call = mutated_mod.get_global_var('func_8962')
var_8964 = relay.var("var_8964", dtype = "int16", shape = (13, 9, 5))#candidate|8964|(13, 9, 5)|var|int16
var_8965 = relay.var("var_8965", dtype = "int16", shape = (13, 9, 5))#candidate|8965|(13, 9, 5)|var|int16
var_8966 = relay.var("var_8966", dtype = "uint32", shape = (720,))#candidate|8966|(720,)|var|uint32
call_8963 = func_8962_call(var_8964,var_8965,var_8966,)
output = call_8963
func_8967 = relay.Function([var_8964,var_8965,var_8966,], output)
mutated_mod['func_8967'] = func_8967
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9050 = relay.const([[[6],[5],[-8],[-10],[3],[2],[1],[-4],[-10],[-7],[2],[6]],[[-10],[4],[-7],[-9],[4],[1],[-9],[3],[-1],[1],[9],[-9]],[[8],[-3],[-2],[10],[1],[3],[-9],[-1],[6],[-5],[10],[-1]],[[2],[-5],[7],[1],[-1],[-8],[5],[-4],[3],[4],[-2],[5]],[[4],[-7],[7],[-7],[9],[-2],[-7],[-6],[9],[-3],[1],[1]],[[-7],[-6],[-2],[8],[-2],[-2],[2],[9],[-5],[-2],[6],[-3]],[[1],[9],[3],[5],[-7],[-8],[-1],[-6],[-1],[1],[-10],[-9]],[[-3],[-7],[8],[-4],[-6],[-2],[-5],[7],[-8],[-2],[1],[-4]],[[-6],[6],[-7],[-1],[5],[-9],[-10],[3],[-6],[-4],[-1],[-2]],[[8],[-2],[1],[1],[-2],[3],[1],[2],[-4],[10],[-4],[1]],[[-9],[-10],[10],[1],[-5],[6],[10],[-5],[-6],[4],[4],[5]],[[6],[3],[10],[1],[-1],[-10],[-2],[-6],[6],[5],[1],[8]]], dtype = "int8")#candidate|9050|(12, 12, 1)|const|int8
var_9051 = relay.var("var_9051", dtype = "int8", shape = (12, 12, 14))#candidate|9051|(12, 12, 14)|var|int8
bop_9052 = relay.left_shift(const_9050.astype('int8'), var_9051.astype('int8')) # shape=(12, 12, 14)
func_5665_call = mod.get_global_var('func_5665')
func_5669_call = mutated_mod.get_global_var('func_5669')
const_9058 = relay.const([-7,6,3,-6,-8,-5,-1,-8,-3,9,7,5,-5,9,9,10,10,5,2,2,-2,-8,-10,-10,-1,4,10,-6,-2,-7,-5,-8,4,10,-7,-5,1,-2,10,-3,2,-9,-9,-9,1,5,-2,-5,-8,-4,9,-6,3,-1,-9,-5,6,-5,-10,7,10,-1,6,-1,-1,1,-4,-2,2,-1,-2,2,-10,-2,-1,6,-10,6,-3,10,3,5,8,-6,1,-3,-4,10,4,-6,10,8,9,5,2,7,9,-5,-7,9,-8,2,7,-6,1,-8,4,-10,10,4,-3,9,2,8,5,-9,10,-5,-1,-8,2,3,1,-8,9,3,4,-1,-6,-6,-8,3,6,5,-8,-10,-10,-6,-6,-4,-8,-6,-10,9,-10,6,1,6,-7,7,-7,-4,1,9,-6,-4,-1,7,9,-9,4,-5,-5,6,-3,7,-1,-8,-3,-2,10,-1,8,4,7,-4,-9,8,1,7,-7,5,-5,10,10,7,10,4,-10,-5,2,-8,2,6,-9,9,-7,-4,7,-2,-10,10,-7,-9,-1,-3,-6,3,-8,3,-1,-5,-9,1,-7,-5,-2,-6,-9,7,1,-2,-3,-7,5,-10,2,-5,6,-7,8,7,-8,10,-2,-7,7,2,-6,10,-10,-8,-6,5,8,5,5,6,7,-1,3,1,-9,9,-5,9,-9,-8,-1,-1,7,6,7,7,10,-2,6,-10,-8,2,-7,-9,-9,5,1,10,-1,-10,-10,2,-5,-10,8,5,10,9,10,8,-6,9,1,5,-6,10,-10,-4,7,-5,8,4,9,7,-3,9,10,-7,7,-4,-7,-9,-9,3,10,2,9,-6,-1,-8,-8,4,-2,10,2,-4,-10,-7,7,4,5,-5,-4,-3,-4,7,-7,-1,-3,10,-6,-6,9,-3,1,-6,-5,-3,4,2,-8,-1,4,-3,4,2,-2,-8,2,-9,-1,1,8,3,-9,-9,7,-1,-1,-6,2,8,-8,4,8,-3,8,4,-8,-9,3,-6,-7,9,-3,-6,-5,-8,-9,-3,6,5,-1,-2,-8,-8,9,1,-10,6,9,10,-4,-7,1,-1,7,10,7,-7,-3,7,-8,7,-3,5,7,-6,-4,-6,-4,-1,-5,8,-3,6,-1,-7,3,9,9,8,9,-6,6,7,1,10,9,7,-5,9,7,-7,1,6,1,-5,7,-3,-7,10,10,-1,10,-4,-2,2,-8,2,4,9,-4,-8,-8,-2,3,1,4,6,-4,10,3,7,-3,-1,7,-4,4,1,-3,9,7,-1,5,-6,8,-5,9,4,-1,9,-5,-10,-5,5,4,-3,-3,3,-4,7,4,-4,-3,5,3,1,-8,-9,2,10,7,10,-8,7,1,-5,-3,-9,7,-10,9,10,-2,10,-4,-1,-4,10,3,5,9,-8,10,1,-3,-10,10,-2,1,-8,2,4,10,1,1,-5,7,5,3,7,-4,-10,6,-1,-4,2,8,-4,-1,-2,-1,3,2,-5,3,-3,-8,-5,5,-3,-5,-6,4,1,-5,10,-10,7,-4,-1,4,-5,-8,-1,6,-1,1,-2,-7,4,6,1,-10,9,1,-8,3,1,4,4,6,-1,-5,3,5,-6,-3,6,5,5,5,-5,9,-10,6,4,-9,8,-7,-6,8,5,10,5,7,3,3,8,2,6,-2,-9,-5,-5,-9,9,4,9,5,9,-3,-4,2,2,-2,3,1,6,-10,10,-1,-7,5,9,1,2,4,-4,-1,-10,5,8,-9,3,5,-9,4,-3,5,9,-4,1,8,-2,-4,-4,10,-4,-8,8,-2,-2,-6,-5,1,-6,6,10,-5,-5,-9,-7,-4,-9,9,6,6,-10,-4,-1,1,-7,7,3,2,-10,-10,1,9,6,7,1,-9,6,-8,-8,6,-7,5,-6,1,-9,2,-5,-1,-9,1,4,1,-5,10,-9,9,1,6,-2,-3,8,-2,-6,-3,5,-5,6,-10,-4,-4,-9,8,8,9,-3,-10,8,5,9,9,4,3,-9,-2,-5,7,-1,6,-1,7,9,-6,-1,3,6,4,-7,9,9,-2,-8,-8,5,8,3,1,-5,1,7,8,9,3,-6,-3,-8,9,3,6,-3,6,-10,-8,-4,-2,6,-4,1,-10,-4,4,-7,7,-10,7,-5,-9,-10,9,7,-4,-1,-7,-8,1,-7,1,6,3,-10,1,-3,-2,9,-6,-5,1,-9,-8,3,-6,-2,6,8,6,-2,-5,9,-10,3,5,6,-3,2,1,-1,-10,7,-5,-9,-3,9,-8,9,7,5,7,-5,8,4,-7,-8,1,6,8,-8,6,3,6,-3,-4,-4,-2,3,-8,-9,1,-3,1,-8,-5,-4,-4,7,6,4,8,1,6,-10,-1,1,-8,-6,-6,-10,3,-1,8,10,8,6,-9,-10,4,-1,-10,-9,-1,-7,-3,7,10,4,8,6,5,3,-2,1,4,-1,6,-3,6,3,9,-5,8,9,-3,-3,8,2,-1,-3,9,-9,5,4,-4,-3,7,-9,7,-2,-4,9,-10,-1,-8,-6,-8,1,-9,-5,2,-5,5,-5,-4,5,3,-10,-6,4,5,8,6,-9,6,9,1,8,-8,2,-3,9,-10,-9,-10,-8,-4,10,-8,9,2,-4,10,1,-9,1,10,6,-1,-6,-7,-5,3,-2,-2,-6,9,-9,4,-8,-5,-4,8,-4,-4,-9,-5,3,10,10,8,-8,6,5,-7,4,1,6,-8,10,3,5,6,7,-5,9,2,10,5,9,-8,6,1,-1,-6,-2,-2,8,-7,3,-1,5,10,-1,-3,-10,3,2,-10,4,-6,7,-5,6,-10,-4,-9,-2,6,-5,4,-10,1,-3,-5,-9,3,-10,2,8,3,3,-3,-5,8,6,5,-9,7,1,8,4,-7,10,10,-1,2,-7,1,-1,-1,-3,4,7,3,-7,10,-4,8,8,2,3,5,8,-1,5,10,2,-1,9,-9,-6,-8,7,2,5,7,9,-7,8,-8,2,2,-3,-7,6,9,-4,-10,-4,-6,-8,7,5,-6,2,5,-3,-1,9,-9,1,-6,-4,8,9,-8,-9,6,-9,-6,-6,6,-9,6,-5,4,4,3,-6,-7,-8,-4,10,-10,2,-9,-8,-10,3,6,4,4,-10,5,1,-1,-6,4,4,-4,-10,9,-9,-5,-6,10,1,-7,2,-6,-3,-10,1,7,-9,-6,-6,-9,3,-9,6,-10,-5,9,10,-2,2,3,7,-1,-3,-7,3,5,-3,8,8,-8,6,2,-3,-8,-6,8,-1,2,-9,2,-9,7,-3,-3,2,6,9,3,-2,-6,-2,-4,7,-8,8,-8,8,9,10,-4,3,10,8,5,4,10,8,-10,3,1,7,8,-5,-7,-1,9,1,-8,-5,-8,-6,7,-4,1,7,7,-3,9,4,-3,9,8,3,6,9,-7,4,-1,4,-4,-3,-7,7,-4,-4,-5,3,2,1,4,-3,7,6,4,9,1,2,-10,-5,-2,-5,1,-2,2,10,5,6,1,-7,3,4,10,3,-4,4,5,-3,-5,-9,10,4,3,7], dtype = "uint16")#candidate|9058|(1344,)|const|uint16
call_9057 = func_5665_call(relay.reshape(const_9058.astype('uint16'), [7, 12, 16]), relay.reshape(const_9058.astype('uint16'), [7, 12, 16]), )
call_9059 = func_5665_call(relay.reshape(const_9058.astype('uint16'), [7, 12, 16]), relay.reshape(const_9058.astype('uint16'), [7, 12, 16]), )
func_5665_call = mod.get_global_var('func_5665')
func_5669_call = mutated_mod.get_global_var('func_5669')
call_9064 = func_5665_call(relay.reshape(const_9058.astype('uint16'), [7, 12, 16]), relay.reshape(call_9057.astype('uint16'), [7, 12, 16]), )
call_9065 = func_5665_call(relay.reshape(const_9058.astype('uint16'), [7, 12, 16]), relay.reshape(call_9057.astype('uint16'), [7, 12, 16]), )
output = relay.Tuple([bop_9052,call_9057,const_9058,call_9064,])
output2 = relay.Tuple([bop_9052,call_9059,const_9058,call_9065,])
func_9069 = relay.Function([var_9051,], output)
mod['func_9069'] = func_9069
mod = relay.transform.InferType()(mod)
mutated_mod['func_9069'] = func_9069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9070 = relay.var("var_9070", dtype = "int8", shape = (12, 12, 14))#candidate|9070|(12, 12, 14)|var|int8
func_9069_call = mutated_mod.get_global_var('func_9069')
call_9071 = func_9069_call(var_9070)
output = call_9071
func_9072 = relay.Function([var_9070], output)
mutated_mod['func_9072'] = func_9072
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9443 = relay.var("var_9443", dtype = "int8", shape = (16, 6, 11))#candidate|9443|(16, 6, 11)|var|int8
var_9444 = relay.var("var_9444", dtype = "int8", shape = (16, 6, 11))#candidate|9444|(16, 6, 11)|var|int8
bop_9445 = relay.minimum(var_9443.astype('int8'), relay.reshape(var_9444.astype('int8'), relay.shape_of(var_9443))) # shape=(16, 6, 11)
output = relay.Tuple([bop_9445,])
output2 = relay.Tuple([bop_9445,])
func_9453 = relay.Function([var_9443,var_9444,], output)
mod['func_9453'] = func_9453
mod = relay.transform.InferType()(mod)
var_9454 = relay.var("var_9454", dtype = "int8", shape = (16, 6, 11))#candidate|9454|(16, 6, 11)|var|int8
var_9455 = relay.var("var_9455", dtype = "int8", shape = (16, 6, 11))#candidate|9455|(16, 6, 11)|var|int8
output = func_9453(var_9454,var_9455,)
func_9456 = relay.Function([var_9454,var_9455,], output)
mutated_mod['func_9456'] = func_9456
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9475 = relay.const([[[-4.540948,2.516277,-4.378116,-0.375846,5.905888,-7.734828,-9.383397,5.475665,3.878907,2.660396,9.230436,-7.695353,5.799767],[6.493189,1.469151,3.379439,4.723289,-7.285648,-2.882813,5.047340,0.773244,-5.219630,5.507197,-5.561912,-3.035862,-0.845460],[-6.150542,-6.413377,-3.549629,-4.168317,-2.409073,3.433898,-6.544217,3.562608,-4.530277,9.492636,6.550494,-2.812604,8.951280],[7.767441,-1.022713,-7.871323,-3.240188,-8.545026,-4.373992,5.213969,-0.870208,-8.282208,-4.387337,-9.993084,1.518669,-5.208329],[1.093124,3.419451,3.560822,3.858047,5.924461,-1.606463,-8.325895,-1.425344,-9.768590,2.335847,5.438946,1.068313,1.467555],[-1.505816,8.104766,4.061472,5.318912,-3.353215,-6.720225,9.752767,2.617198,2.055974,-9.478833,-5.894825,1.590614,-0.410416],[5.287874,-3.681165,6.612795,2.970409,3.855435,3.965870,-3.749879,-5.997593,0.774031,-3.496125,7.697692,-5.127498,6.378305]],[[-1.500180,-1.072419,8.545408,5.012388,2.318813,8.549915,3.547625,5.993603,0.437537,-2.309913,-0.083936,8.712260,-6.531879],[4.763975,0.975530,2.059937,6.718725,-6.456269,-4.202553,0.172582,-8.412146,-4.040139,6.871837,-8.448117,8.538538,-4.436016],[2.678589,-0.130914,7.525106,-1.781553,9.681659,-3.825794,-7.656869,8.796725,-3.259262,-2.935626,3.035231,9.728029,-8.017069],[-2.963168,-4.019536,-6.380814,-4.287011,-1.290241,-9.052707,-5.612844,-9.869851,-5.411780,6.265026,8.378797,-0.462959,-1.285505],[0.611682,4.701406,-2.137994,7.521810,-7.863460,-6.846485,0.105806,-6.329070,7.423167,3.663977,-6.690399,-9.623306,3.163829],[6.496080,4.522360,-1.353591,9.316537,2.740453,8.077435,9.377909,-3.829676,-2.770572,-5.257293,5.071530,-7.656060,0.727051],[-7.638172,-8.259269,-9.764726,-1.072949,-4.600002,-0.623155,-3.504643,7.586980,-9.405500,5.676101,-0.490528,-6.118403,5.789028]],[[-6.632837,-4.900300,-7.902257,-6.329929,7.998785,-2.509014,-7.243079,-4.015013,5.605619,-2.005007,-6.929320,7.552964,6.265596],[0.785022,-4.065138,6.201893,-7.522384,-1.444085,4.674534,-3.013512,4.607124,-0.155686,5.012800,-3.266580,1.035187,7.699517],[-3.590920,5.819719,-2.004313,5.874180,4.899677,7.122831,0.549499,-7.271826,-6.975734,9.383021,-2.482987,-5.277666,-9.410185],[-7.583789,4.615265,6.680542,-3.627203,-4.700868,0.928442,4.665547,-3.350625,9.671591,-1.249663,-8.908197,-4.440833,0.039863],[5.876205,-3.526625,-1.507507,5.975925,-8.471576,8.394799,-7.554471,6.923421,-3.142709,-9.561172,4.985132,-5.263740,-1.650180],[1.259860,-9.964346,6.031950,-6.726720,1.524771,-2.984515,-6.811221,5.060153,6.384508,5.721228,6.774731,0.245580,1.346682],[1.220064,-8.956641,-3.069481,-7.040295,-0.399516,1.389511,5.691449,-3.407317,0.686866,-1.806299,-7.184683,-8.574380,-0.471222]],[[9.575137,-7.265981,4.871074,-4.446594,5.013041,6.086534,9.768293,2.494986,-6.053333,4.180652,-2.731699,2.131239,8.058511],[-0.905817,-5.601465,-9.824685,-0.863329,-0.577252,-2.036896,7.766008,2.630055,-8.874935,1.508972,5.903985,-7.354459,-9.813603],[-7.795898,-1.299906,5.224531,1.218660,1.640447,-0.007432,-1.167436,0.071562,7.686575,-0.827671,6.748311,-2.114874,-5.519231],[-8.905439,-7.534594,7.624992,0.498285,4.724643,-3.616762,-0.489640,-1.465323,6.016174,0.454237,5.723370,-9.432346,0.577818],[-5.742526,-8.063416,-7.124739,-7.904707,2.763732,3.521145,7.539357,7.307437,7.359120,5.506730,-6.599262,0.303853,-8.862042],[5.696045,-3.707632,-8.822019,-4.463905,-1.049745,-5.199400,4.925517,-3.790912,-9.550619,7.225080,-2.271066,8.242684,-9.472236],[-3.323695,5.639374,6.812958,1.655252,5.667200,-8.442487,-5.000026,-5.503683,7.909096,-8.385614,-8.543521,5.759983,5.226064]],[[8.063168,-3.486460,-5.513761,6.921124,4.572020,-0.013577,-5.089857,-0.300013,1.460173,2.581776,5.786207,-4.807759,3.518037],[-5.814755,-9.047521,-4.544824,-6.804705,-2.421544,6.563534,-0.195095,-2.732335,-7.728808,2.368175,1.600040,7.466927,-6.165937],[-7.121783,1.234535,-1.517513,-3.446332,3.493125,-3.616822,4.444169,-3.895460,-6.830992,4.148618,-7.028753,2.986163,1.573020],[-2.095983,-5.614386,4.293068,7.009243,-6.044536,6.233270,6.631375,6.446133,-9.436998,-1.679008,3.748276,-6.864993,3.300872],[-7.876516,-0.455315,2.219254,1.303539,2.723938,-0.098324,4.815075,-8.419517,-8.488186,7.512851,5.984629,-8.468012,-9.853077],[-0.394241,4.554235,3.994624,0.663161,2.385570,0.159910,-5.610690,7.924415,8.350576,5.683885,6.459159,2.804935,1.039329],[1.057534,-5.217980,1.245230,-0.659361,-3.597414,3.341868,7.233588,6.413374,6.618920,0.685049,-8.237986,0.134180,3.964803]],[[5.247337,2.701751,7.993795,8.296136,-4.392763,6.683375,5.727007,8.097258,5.224989,5.056868,4.328559,-0.305424,9.752652],[8.459515,-8.815415,-6.245933,-9.463189,-7.106596,-6.067473,2.830832,-7.159393,5.719476,5.216473,-3.164991,7.077355,2.627566],[-7.736849,7.958493,-1.002369,-2.358201,5.066033,0.480899,-4.513688,-4.584576,8.054109,-2.696150,-6.938927,3.141816,-6.486443],[-7.600309,5.189926,-9.273887,3.837468,6.028825,-9.700556,-7.731779,-2.068768,0.449177,4.778782,2.344189,-6.735305,-6.231353],[8.846371,-8.401663,-1.058101,5.740078,-5.288118,8.032234,-7.515788,4.982481,6.019324,-0.200871,1.644275,-2.010541,8.057695],[3.006013,5.762024,-5.119707,6.090321,-6.183625,7.778294,1.705682,5.855481,9.626546,-1.312210,2.456575,-7.409291,2.618934],[1.916202,-7.752568,-0.367195,-4.785692,-5.551100,-8.945153,0.767173,1.163903,0.315201,-5.727300,2.047835,-3.167909,4.507383]],[[6.707996,3.341782,9.351608,7.866682,-2.576255,-1.819952,8.656890,6.026297,-5.975418,9.704809,-7.858618,0.151266,6.444315],[-2.136953,-9.342800,4.563272,-1.100630,-1.749942,-3.477390,8.310180,4.695729,7.376406,-7.921955,4.236994,-8.649094,-5.092008],[9.164695,2.064082,2.331561,-8.150274,0.686868,8.910115,-3.856764,-5.641787,1.703778,1.124391,0.457546,-1.956076,-4.677431],[-4.867364,-8.448225,9.040355,-0.426724,-1.039689,-9.866745,3.983984,7.255023,4.629648,9.239792,-4.607530,-1.631483,8.668322],[-1.861518,3.316464,6.070030,7.316089,3.667533,3.383053,-6.701568,8.513453,-1.241982,-6.600653,3.054853,-6.891172,3.907920],[-0.956322,-8.788586,6.746690,6.797634,7.059821,2.819715,-1.803539,9.266443,-8.620235,9.173576,1.178734,0.499484,7.359927],[3.524624,8.513760,-2.136411,-1.698266,5.603335,-3.040000,9.885917,-3.622776,-2.291346,6.586988,-0.560418,0.034371,7.591857]],[[-4.483360,6.191971,7.310766,7.165905,8.562397,-5.560817,-1.891576,-3.845376,-6.156144,4.868549,-4.581171,2.149918,4.155461],[0.219722,-5.339188,3.271116,7.603525,-8.550564,-2.021462,1.235237,-7.118550,3.869517,-8.342615,1.606488,3.503758,1.881433],[-8.689422,1.120044,-3.720323,8.304852,4.350789,6.205066,5.876399,-4.426894,5.138035,1.998602,7.945497,5.923689,-4.461916],[2.858976,3.600822,4.413913,1.688988,7.463217,-8.248830,-8.763920,-1.642823,-8.942564,-1.202896,5.680703,7.964207,3.654067],[3.646410,-3.621563,5.122037,-7.032520,-0.649794,-0.850577,-3.700596,7.148138,-0.161625,8.468205,-7.095920,-2.487072,-1.215563],[-1.947543,4.580974,-6.688762,-4.353067,-7.463119,-5.806309,-7.053461,0.337685,7.228613,2.290603,-5.918530,-1.042230,-4.644163],[5.094523,0.444370,-7.354437,7.180936,0.595144,-2.705762,-6.407316,3.595771,4.019250,6.919823,4.377284,1.710445,-1.052445]],[[-9.849014,8.314590,3.733988,-0.861903,-0.726431,-5.613389,-7.949314,7.818212,-8.188798,6.592414,8.216982,0.449604,5.876195],[3.861381,0.918408,-7.715401,-1.794144,-7.280122,5.525510,7.432660,3.026294,6.408125,3.950854,0.512233,2.159657,-6.628672],[9.775742,0.356232,-3.463099,9.527849,-8.078086,5.719963,4.472581,-6.999910,-8.881364,-5.615949,-5.184589,0.813876,4.625214],[6.705961,-2.745955,2.391927,9.454426,-7.837829,0.951590,-2.356269,-5.197641,-9.717871,8.347167,-3.224702,-6.733475,-6.466890],[-5.518745,6.648408,-6.607027,-7.953242,-4.079201,-1.392829,8.250922,5.578732,6.174518,-6.155064,3.387930,8.475376,-9.975365],[5.978237,0.004334,1.578633,2.472734,1.295433,9.030606,-8.187321,5.939041,9.366416,-3.305962,0.439968,-7.075307,8.142649],[-2.077382,5.624386,-7.201433,-8.895422,-6.516016,1.128856,-2.236812,8.891635,2.239318,8.285666,-9.031654,4.301374,5.102077]],[[-9.746202,-1.991999,3.359773,7.156638,0.242750,0.858582,8.157561,1.176057,-5.743959,6.553984,6.432454,2.678524,2.928350],[-0.530629,-2.608923,3.985882,8.504605,-1.974619,-1.070467,6.705668,1.633915,4.771002,-6.192015,-7.736243,-4.779446,-6.914206],[-7.135177,-9.227582,-1.379224,-3.534584,-6.785679,3.255151,9.179448,7.945386,8.214944,-0.224337,7.813987,6.864845,-2.239501],[-9.578454,6.787383,4.459078,0.257444,7.477080,-7.600900,-2.661953,4.948717,-1.611455,-5.824754,5.535746,0.802318,-2.849347],[6.012841,-0.442784,9.167082,4.493208,-6.478795,-8.902621,-3.334193,6.770851,7.254762,-6.566774,4.133764,-1.795555,-4.656027],[-1.637962,3.877919,-7.516129,-8.984583,-5.580605,-1.350077,5.731226,-9.454020,-2.736840,0.323405,8.135687,5.577537,-7.205767],[6.017652,-2.667753,-9.111515,1.445770,-7.018429,-3.467877,-4.763567,-5.267352,-8.764873,4.059501,-2.585811,-6.294964,7.126689]],[[-9.492745,4.570745,-5.984924,9.829849,-4.707433,8.413985,5.284908,0.744032,-3.370838,1.406433,-9.498900,-4.053094,-3.933272],[1.572507,3.045811,4.074747,-1.289113,-0.960395,6.601748,2.157663,4.451342,6.436380,-9.144466,-0.040262,-0.492449,-0.991693],[-2.814854,0.999079,7.079683,8.453419,8.272278,-7.616198,8.040871,-4.177474,0.649956,-5.200810,-7.444332,0.058283,-7.481142],[-6.647351,2.599840,-2.391881,9.073459,1.190917,-6.228740,2.858778,8.147143,2.573972,-4.337211,1.196839,-3.449423,-1.279422],[9.218143,0.524789,-2.343394,-9.106889,-6.641023,3.115420,-7.941607,-8.977319,7.400775,0.716412,-2.619976,5.538373,-1.092842],[-9.909204,-2.356753,-5.704070,-1.842658,0.289741,2.546678,7.278173,-7.852057,9.711531,4.100181,-6.035990,-7.207370,0.231393],[-5.005537,2.838084,6.392866,6.507106,5.847482,6.116362,-2.456637,-4.982661,-7.848261,1.795282,-5.745166,-3.370918,6.368097]],[[-7.797138,-6.787052,-3.025722,-0.141759,4.132740,7.123196,7.672311,-3.379712,-3.825791,7.449418,-5.319589,-8.676213,0.520259],[7.127107,-9.180194,-3.644445,-2.930568,-2.140082,4.591545,-2.598391,-0.881410,-7.665369,-6.473279,-2.324226,2.652442,7.464030],[-2.805698,6.174087,-3.399890,6.286763,3.693620,1.890985,-7.925067,-5.412576,-8.686994,-6.471824,-2.179730,-9.168164,-2.389448],[-0.187420,3.285709,8.436008,0.556703,0.415905,5.496918,1.969924,-0.696189,-5.802317,-1.198391,-3.455741,-3.409842,-9.833479],[8.555167,4.070732,0.013861,5.594370,-0.189230,-8.653058,-5.187441,0.500328,-7.606846,-2.269014,-8.225511,3.157376,-6.871027],[5.303080,1.944128,8.629123,2.787015,-1.348633,-9.220806,1.412453,-3.847321,9.326367,0.358125,8.568626,5.057435,-8.388402],[-5.034248,-0.076748,8.361995,7.103285,7.264918,-2.596694,-1.833367,-6.278710,-5.848529,1.211356,7.187891,8.379886,7.390989]]], dtype = "float32")#candidate|9475|(12, 7, 13)|const|float32
uop_9476 = relay.asin(const_9475.astype('float32')) # shape=(12, 7, 13)
func_3985_call = mod.get_global_var('func_3985')
func_3988_call = mutated_mod.get_global_var('func_3988')
const_9488 = relay.const([[-0.832841,-8.907386,2.750148],[5.898698,4.576525,-4.671037],[-5.643336,9.157360,-3.214167],[-1.022617,6.688852,6.343080],[-1.988424,-3.460878,4.444467],[5.482755,-2.018823,-5.971559],[-7.882071,-7.889298,-3.470192],[1.221938,-7.268818,8.061079],[7.511943,-4.533704,4.592025],[-6.152596,-4.157364,-1.759587],[-0.045296,8.330205,7.926148],[7.639914,8.487045,-8.553618],[-3.810710,-9.799112,-3.932732],[-1.836900,1.248025,2.034876],[-1.183640,1.052597,-3.244067]], dtype = "float64")#candidate|9488|(15, 3)|const|float64
call_9487 = relay.TupleGetItem(func_3985_call(relay.reshape(const_9488.astype('float64'), [3, 15, 1])), 0)
call_9489 = relay.TupleGetItem(func_3988_call(relay.reshape(const_9488.astype('float64'), [3, 15, 1])), 0)
func_5665_call = mod.get_global_var('func_5665')
func_5669_call = mutated_mod.get_global_var('func_5669')
const_9493 = relay.const([-3,10,-10,3,6,1,3,8,4,-1,4,-5,1,8,-8,-7,3,6,-8,5,8,1,-9,-3,-3,-1,6,-8,5,-6,3,1,-1,-9,-10,3,2,9,-3,4,1,-4,1,-5,-10,-9,-4,-6,9,-4,-10,7,10,-3,10,-8,-1,7,8,8,3,-8,-8,-2,2,6,-4,3,-8,-9,-4,-9,-3,8,-6,-7,4,6,2,10,5,-5,10,-6,-4,9,4,-4,-2,-8,9,-7,-1,-4,2,-6,-2,7,8,-2,-10,2,-7,-1,-1,9,-4,-2,9,9,-1,-10,7,7,-3,-10,10,-7,10,-7,-8,-10,3,9,-9,-5,7,-7,3,2,5,-8,-5,1,4,-8,-4,-5,2,9,6,6,-9,8,9,9,3,8,-2,-7,6,-7,6,5,7,1,-10,-7,-2,-5,6,-4,1,8,8,10,-3,-4,10,-6,5,-2,-6,8,-3,-8,4,7,3,-1,-3,7,-9,-2,2,7,7,4,8,3,4,-10,5,-6,-5,1,7,1,-1,-6,-2,2,-2,-7,10,-2,3,-5,-7,7,7,9,6,-1,-4,-7,9,8,-8,2,4,10,-5,-4,-5,6,8,9,5,10,6,6,9,-9,-8,2,-6,-7,-9,-3,5,10,5,9,9,9,-9,3,10,4,4,10,-10,10,10,-8,5,10,9,-1,-9,6,-5,5,-2,3,-4,-5,-10,8,8,-6,-3,-4,6,-3,-6,-2,-9,-8,5,-6,-4,7,-5,5,10,8,-2,8,-6,2,9,2,-2,-8,10,7,-4,-10,-9,4,-10,5,-3,-7,-3,8,4,9,-10,2,10,6,6,-4,-2,-4,-1,2,1,2,10,-3,1,2,-8,3,-6,3,6,-6,-8,-9,-9,-2,2,-2,7,9,-9,1,-7,-5,-5,6,-8,10,-3,4,1,2,-1,6,-2,-5,-5,-8,1,7,2,9,-6,-3,-7,-2,-4,-2,1,-2,-4,-5,3,3,-7,-4,-4,8,-10,-8,9,-7,-4,-7,-8,9,-7,-1,6,-8,6,1,-3,-9,-9,1,-7,-2,-9,8,-9,1,1,-8,-8,1,8,-2,-2,-5,-8,-10,9,7,-10,-7,-4,-5,-10,6,-1,2,1,-2,6,6,6,-10,6,4,4,5,10,5,-2,8,9,5,-5,-5,-4,5,-6,6,-2,-8,-2,4,-2,1,-1,-9,8,-2,-1,-4,-9,5,-5,7,-1,-4,9,-4,1,7,4,-4,-10,-5,-5,-5,9,-10,-3,2,2,-7,-7,2,-6,-10,4,3,2,2,7,2,7,2,8,4,-1,-1,-3,6,1,-8,-2,7,-8,-1,-8,3,-4,-5,-9,2,-1,-8,-7,2,4,3,2,2,-10,-7,10,6,-4,-8,-2,-3,-5,-7,-7,2,-10,9,-6,-4,-8,7,-8,1,3,-5,10,-8,-8,9,6,9,6,-2,1,-9,4,4,-8,-3,4,8,5,1,2,1,1,8,7,10,-3,-8,6,10,-9,-4,3,9,9,3,1,-1,-5,-4,8,-2,-4,9,-4,-3,-4,-8,-1,8,10,-1,-7,-7,-3,7,-4,4,1,7,4,10,9,6,-6,9,-8,-7,5,7,3,-9,5,5,9,-1,2,-3,-9,8,-5,-9,9,6,-2,-2,-9,3,6,-7,-10,10,-10,-10,3,-4,6,9,-1,-9,-10,-7,-6,2,-8,9,-7,-7,-3,8,6,-4,5,-10,-10,7,-2,10,5,-9,1,9,6,-7,-5,-5,-6,5,-2,-6,-4,4,-9,3,6,-7,2,7,5,7,8,3,10,-5,-5,-5,-6,-4,-3,9,10,8,-5,10,-8,10,-10,2,-2,-2,-6,5,-6,-6,-7,10,-4,-1,-3,9,-9,-7,-1,-9,-6,10,-8,3,-4,-4,-8,10,3,1,4,7,-6,-2,-5,-1,-6,2,-4,9,-8,8,-7,5,2,6,-5,-9,9,-9,-4,5,1,-3,4,4,-5,7,-5,-4,10,10,4,6,1,-8,-8,-7,2,-6,2,-10,6,-10,2,5,3,7,7,1,-9,-4,-5,7,-1,-6,7,-1,-5,-4,-7,9,6,-7,9,2,-8,6,5,1,-8,-10,-4,6,4,-8,-10,-10,3,1,7,2,8,-9,1,3,-8,4,4,3,1,8,10,-8,-7,-5,-2,2,-6,7,10,9,-10,1,-5,3,-8,7,-1,1,6,4,4,10,-6,7,6,5,-9,2,-3,-9,-6,-6,-3,-4,-4,7,-4,-8,-5,-8,3,8,2,-5,5,-3,-10,7,-8,2,-9,10,7,6,4,-6,-1,-10,-6,-7,9,-3,1,-4,-1,2,5,-7,-1,8,-9,4,-9,-3,7,8,-2,-7,-1,3,-7,-5,-7,7,-5,5,1,6,-2,-7,-8,7,7,2,-6,1,-10,-6,-7,6,1,-8,1,-2,-2,3,5,-2,5,10,1,-5,-8,-9,-5,8,8,-8,-9,-1,-1,-3,-4,7,-10,-1,8,3,8,-10,-1,-10,-4,8,-9,6,-1,6,-5,5,2,6,1,-6,3,3,-6,-1,-9,6,7,-10,1,6,-9,-1,8,-10,9,9,4,6,-2,4,7,1,-2,-4,7,10,2,6,1,10,-2,1,-10,-9,3,8,-3,-4,10,-9,10,2,1,4,1,-1,5,-2,7,1,-5,10,8,3,3,-4,3,7,-1,5,6,-7,-8,-10,-2,-6,10,5,1,-5,-1,-7,4,-8,6,-8,-1,-5,-6,7,6,5,9,-3,9,5,8,6,-10,10,10,-8,5,-2,-8,10,-2,1,4,-4,-3,-5,-2,4,5,-8,2,-6,9,9,-8,-3,-4,4,8,3,4,2,-10,10,10,10,3,-10,-7,2,-8,6,9,9,5,-9,-1,8,7,9,-3,-1,7,9,-10,9,-5,-9,-4,-2,-2,1,3,-7,5,-10,-2,-7,10,-3,8,-10,7,-7,-8,2,-1,-3,10,5,-3,8,-3,6,-2,8,9,2,5,-6,8,3,9,-4,-6,-6,3,4,-10,3,-9,3,7,3,5,-7,5,4,5,-3,-8,-10,5,-9,6,7,3,3,-5,3,4,-5,-9,-3,1,-5,-6,-10,-1,-6,-2,-4,4,6,2,9,9,-6,-5,3,6,-4,3,7,-6,-4,-7,5,4,9,1,5,-6,-8,-10,8,1,2,8,9,-2,2,1,-1,1,2,-9,-3,8,5,-4,-7,5,-8,-9,-8,-2,-10,-10,-8,2,2,-9,-6,8,-6,-6,-9,2,-5,6,4,4,1,-7,-4,10,-10,-2,-5,-2,7,4,9,5,9,-7,-1,10,-4,10,-6,3,9,-6,8,-3,-4,-2,5,8,9,8,4,-10,5,-6,2,8,-7,-6,-2,1,-6,-10,-8,-6,2,7,-1,6,-10,-6,-2,-4,1,-5,8,9,-8,-6,7,-5,5,-7,-8,-2,-5,-1,-7,9,6,2,-7,2,2,-4,-2,-8,-9,-3,7,-7,6,-3,-6,2,4,8,5,-9,-9,-5,-1,8,-7,-9,8,9,8,8,6,-6,4,-6,-5,7,7,5,-5,10,-5], dtype = "uint16")#candidate|9493|(1344,)|const|uint16
call_9492 = func_5665_call(relay.reshape(const_9493.astype('uint16'), [7, 12, 16]), relay.reshape(const_9493.astype('uint16'), [7, 12, 16]), )
call_9494 = func_5665_call(relay.reshape(const_9493.astype('uint16'), [7, 12, 16]), relay.reshape(const_9493.astype('uint16'), [7, 12, 16]), )
func_3395_call = mod.get_global_var('func_3395')
func_3399_call = mutated_mod.get_global_var('func_3399')
const_9497 = relay.const([6,5,4,4,3,1,-5,-1,-8,-5,-1,8,9,-3,7,1,2,3,3,10,-5,-5,-5,-7,3,6,4,-7,-9,-5,2,2,-1,10,2,3,-2,10,-7,2,8,4,-1,-6,1,9,-7,-9,-5,2,10,-5,-4,-10,3,-10,8,-4,5,1,9,-1,-8,7,-1,9,6,2,10,-10,-1,-3,-4,-10,-4,5,9,-4,-6,10,-9,9,-4,5,2,-4,-8,4,3,1,6,-5,-1,2,7,7,3,-1,-4,3,-2,8,6,-9,7,8,-5,-8,9,6,-6,-2,-6,7,9,-5,-9,-8,9,3,9,-1,4,1,-1,-1,-7,-7,-8,-4,-6,-6,3,9,-3,-8,-6,7,10,3,-4,-10,9,-5,-4,4,7,7,5,-2,8,1,10,-4,-9,-2,5,-5,9,-3,-6,-5,6,2,7,10,-7,1,-2,-8,4,-3,3,-3,-5,-7,3,5,-3,-1,-5,8,-3,-9,-4,3,6,8,1,4,-10,-10,-3,2,-3,6,3,10,-3,-10,-6,6,8,-3,-7,-8,8,-10,2,6,-5,5,-6,-6,4,5,-9,-3,-5,10,3,-7,-6,1,8,-5,-8,3,-7,-3,2,-10,9,10,2,-3,5,-6,-8,-9,2,9,6,6,-8,-4,-6,-3,-10,6,2,6,1,10,-9,-4,-5,-3,-5,-4,-5,-5,-3,-6,3,4,3,-3,-2,-4,4,-1,2,-9,10,-4,-2,-8,9,-9,-5,-6,-2,3,-3,-4,4,5,-9,5,-10,6,7,-8,-9,-7,-9,-5,3,5,-2,3,2,3,4,1,-4,9,-3,6,-3,8,-7,3,10,5,6,-9,-8,10,-10,-8,-1,6,4,-8,6,-9,9,-4,-1,-3,7,-5,-4,-6,7,-9,-1,-2,8,1,6,-6,3,5,8,-9,10,1,9,10,-3,6,-5,-8,10,4,9,-2,1,4,-5,-6,7,3,-7,3,4,-4,10,10,1,-4,6,-3,-5,-8,-10,-7,2,-4,-3,-10,8,5,-8,-6,9,-9,9,-1,9,-5,4,7,-4,-6,1,5,2,7,-3,10,6,6,-3,10,-6,10,-8,9,-9,-10,-3,-10,-5,8,4,9,-7,-7,-3,2,-3,1,-1,-5,5,3,-10,-4,3,-4,-10,-7,7,-9,1,10,-6,-5,-3,-1,4,8,-8,1,-6,8,-8,-5,9,5,-7,-1,-8,-4,-7,-9,1,-6,-10,10,-4,2,-3,8,2,1,-10,4,1,1,3,8,7,-2,-3,-5,-3,10,5,-8,-1,6,-3,1,10,-9,-2,-8,-1,8,-5,2,9,3,-9,-2,-10,-4,-1,-7,5,-6,5,5,-6,-1,-5,6,6,-9,10,7,-10,-5,6,-3,-9,9,5,-9,7,10,4,8,-5,7,8,7,5,-10,5,-3,4,-10,3,10,1,4,7,-7,10,-2,-8,-10,-1,3,6,4,-5,1,-4,-2,4,-2,9,-7,-1,-9,8,-1,2,6,-1,9,5,-6,2,5,5,1,7,4,5,-9,5,-1,-6,-4,-9,3,-3,-4,8,-3,9,8,1,5,9,10,-6,2,10,-6,-7,5,-9,-6,-10,-1,-4,6,3,1,7,-6,2,2,-4,-1,9,-2,6,-5,-9,-5,5,8,5,10,1,-5,-5,-5,7,-9,-3,-5,1,5,-8,2,-6,-3,-8,-4,-10,1,6,-4,3,9,6,-7,8,4,-6,9,-5,-2,-7,3,3,-3,-2,-4], dtype = "uint8")#candidate|9497|(660,)|const|uint8
call_9496 = func_3395_call(relay.reshape(const_9497.astype('uint8'), [12, 11, 5]), relay.reshape(const_9497.astype('uint8'), [12, 11, 5]), )
call_9498 = func_3395_call(relay.reshape(const_9497.astype('uint8'), [12, 11, 5]), relay.reshape(const_9497.astype('uint8'), [12, 11, 5]), )
func_8776_call = mod.get_global_var('func_8776')
func_8780_call = mutated_mod.get_global_var('func_8780')
var_9503 = relay.var("var_9503", dtype = "uint16", shape = (143,))#candidate|9503|(143,)|var|uint16
var_9504 = relay.var("var_9504", dtype = "uint16", shape = (1, 286))#candidate|9504|(1, 286)|var|uint16
call_9502 = relay.TupleGetItem(func_8776_call(relay.reshape(var_9503.astype('uint16'), [13, 1, 11]), relay.reshape(var_9504.astype('uint16'), [13, 2, 11]), ), 0)
call_9505 = relay.TupleGetItem(func_8780_call(relay.reshape(var_9503.astype('uint16'), [13, 1, 11]), relay.reshape(var_9504.astype('uint16'), [13, 2, 11]), ), 0)
output = relay.Tuple([uop_9476,call_9487,const_9488,call_9492,const_9493,call_9496,const_9497,call_9502,var_9503,var_9504,])
output2 = relay.Tuple([uop_9476,call_9489,const_9488,call_9494,const_9493,call_9498,const_9497,call_9505,var_9503,var_9504,])
func_9506 = relay.Function([var_9503,var_9504,], output)
mod['func_9506'] = func_9506
mod = relay.transform.InferType()(mod)
var_9507 = relay.var("var_9507", dtype = "uint16", shape = (143,))#candidate|9507|(143,)|var|uint16
var_9508 = relay.var("var_9508", dtype = "uint16", shape = (1, 286))#candidate|9508|(1, 286)|var|uint16
output = func_9506(var_9507,var_9508,)
func_9509 = relay.Function([var_9507,var_9508,], output)
mutated_mod['func_9509'] = func_9509
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9576 = relay.const([[[10,10,4,5,-2,3,6],[-5,-2,9,7,-3,-8,4],[-4,2,9,-1,-6,9,9],[-1,1,-1,-9,2,4,10],[6,5,-9,7,9,-4,-4],[4,-6,6,5,10,-8,1],[-10,3,7,5,5,5,-9],[10,2,7,-8,-7,2,6],[-2,3,8,-7,6,-10,-5],[6,3,-9,7,-5,3,-10],[9,-7,5,-4,-8,9,-2],[-6,5,1,7,3,8,-10],[9,-3,10,-1,2,9,6]],[[-5,-6,-5,2,-6,-8,2],[8,4,-4,8,-9,-8,-4],[-10,-4,9,5,-8,2,3],[-5,-5,-6,2,5,5,-9],[-6,1,-3,2,-2,8,3],[6,-9,10,-5,10,-8,5],[3,-8,9,7,-2,-6,6],[-6,1,5,-2,3,-3,5],[9,5,-6,-3,2,-4,10],[1,-3,7,9,-5,8,8],[-10,3,3,-5,2,-1,-7],[3,7,5,2,-4,-5,2],[7,-5,3,10,7,-6,-3]]], dtype = "int16")#candidate|9576|(2, 13, 7)|const|int16
var_9577 = relay.var("var_9577", dtype = "int16", shape = (2, 13, 7))#candidate|9577|(2, 13, 7)|var|int16
bop_9578 = relay.left_shift(const_9576.astype('int16'), relay.reshape(var_9577.astype('int16'), relay.shape_of(const_9576))) # shape=(2, 13, 7)
output = bop_9578
output2 = bop_9578
func_9588 = relay.Function([var_9577,], output)
mod['func_9588'] = func_9588
mod = relay.transform.InferType()(mod)
var_9589 = relay.var("var_9589", dtype = "int16", shape = (2, 13, 7))#candidate|9589|(2, 13, 7)|var|int16
output = func_9588(var_9589)
func_9590 = relay.Function([var_9589], output)
mutated_mod['func_9590'] = func_9590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9833 = relay.var("var_9833", dtype = "float32", shape = ())#candidate|9833|()|var|float32
var_9834 = relay.var("var_9834", dtype = "float32", shape = (6, 10, 6))#candidate|9834|(6, 10, 6)|var|float32
bop_9835 = relay.divide(var_9833.astype('float32'), var_9834.astype('float32')) # shape=(6, 10, 6)
output = bop_9835
output2 = bop_9835
func_9839 = relay.Function([var_9833,var_9834,], output)
mod['func_9839'] = func_9839
mod = relay.transform.InferType()(mod)
var_9840 = relay.var("var_9840", dtype = "float32", shape = ())#candidate|9840|()|var|float32
var_9841 = relay.var("var_9841", dtype = "float32", shape = (6, 10, 6))#candidate|9841|(6, 10, 6)|var|float32
output = func_9839(var_9840,var_9841,)
func_9842 = relay.Function([var_9840,var_9841,], output)
mutated_mod['func_9842'] = func_9842
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10054 = relay.const([[[0.294947,5.588374,-7.021932,-7.897803,-9.201069,-4.858886,-4.766179,-0.638411,3.723831,-9.137438],[-9.712239,7.738526,4.041900,5.598077,7.381567,1.794995,6.762411,2.578696,-0.020458,-2.181707],[5.359791,6.370691,4.114393,1.155797,2.270511,2.975750,-7.562939,-7.234488,-9.582513,2.597101],[-5.564949,-4.106711,5.846035,0.629384,-7.276126,-3.415830,6.527953,7.384306,9.777950,6.661626],[-8.058325,-5.529021,0.731083,2.904957,1.372950,-4.922017,2.975044,6.583517,-7.393500,-2.563878],[5.526101,6.182555,1.374682,8.397437,5.349589,2.477114,9.441631,7.741364,-1.063835,-6.018972],[9.331527,-8.455521,-9.241720,-5.885833,-3.341332,1.747777,2.342162,-9.243588,3.280705,-3.039449],[7.946456,6.865625,8.707173,5.132242,9.823711,6.321261,-3.562902,4.426976,-2.397991,-4.167897],[3.610078,-9.059570,-2.408485,0.113084,-8.601799,-5.771119,6.029496,-1.125429,-6.852507,4.047593],[-7.827218,5.090014,-9.285284,1.825741,-5.424669,3.265691,8.193168,-6.646110,8.610007,7.026608],[7.694669,0.185526,7.685183,-7.269496,0.479048,2.931745,-0.158966,0.699368,-3.470120,9.961945],[-7.607337,-6.803256,-9.526927,0.663146,-6.073300,5.088119,-4.029630,-7.813889,5.116073,-7.434729],[-4.740804,-3.341565,-6.631882,1.759200,-9.926620,4.619225,-0.123170,-9.275164,-6.403988,-1.966664],[-5.413553,3.327531,-4.342927,6.581437,-2.773804,-2.914115,8.309813,5.034993,-7.055910,-6.088316],[-8.121165,0.070343,9.261709,0.886595,3.028163,-6.167778,-3.375057,4.616453,-5.921745,-2.329718]],[[-7.059417,4.509812,0.188627,5.990962,-3.170757,-6.206440,5.106938,5.225427,3.239875,-9.211431],[-9.928205,-8.237604,-7.670776,2.805647,-4.255315,0.125197,-6.314354,3.236260,-0.063111,-6.569043],[-3.264723,7.261854,-1.804837,7.983032,9.819203,3.849973,-8.784593,-2.796865,6.778903,7.335792],[5.381395,-4.721799,-0.325727,9.839460,-5.851599,5.727995,-8.526452,-7.021451,9.377955,-5.110624],[5.928709,-9.600401,-4.596880,4.648004,-4.640001,1.041994,3.055797,8.389741,9.685250,-2.505303],[-7.303857,4.741062,-3.377200,-3.896268,4.565868,9.496342,-1.894526,-9.381158,-1.056310,-6.913474],[0.347500,7.311647,3.794165,-5.078573,6.661211,-0.265624,-2.262023,5.375242,2.837740,-5.861790],[-4.114086,3.868836,8.734980,7.158052,6.227927,-1.851624,-8.313911,-6.207060,-7.456427,-1.084528],[8.617326,-2.825690,-7.292995,7.101894,4.359495,-9.413558,1.599043,-2.198380,-0.537181,-7.557355],[3.285771,-1.803513,-3.610625,7.096234,0.850619,9.599513,-1.585088,-2.343024,6.583020,-5.489310],[4.608666,-8.243623,-2.936048,4.467206,0.922218,3.479296,-6.124461,-6.639066,-6.347656,7.064845],[8.359660,-8.529548,-9.023042,0.354569,-1.901949,-9.458597,-4.389801,-3.953567,0.694527,1.467546],[-4.438682,4.722871,-9.643201,2.376322,1.327908,-8.170298,8.787124,-2.051146,1.297802,1.974361],[6.788954,5.220303,3.014308,5.806681,4.648420,4.644249,1.268751,-2.438112,-1.186069,-1.206776],[1.367930,-5.432152,0.638732,-1.061972,-9.245417,0.062882,-6.161381,-0.245630,-0.551812,-3.683162]],[[-8.256994,0.545521,8.931540,-2.707304,-2.371126,4.542160,8.847710,-7.710469,3.033120,-9.291023],[3.954556,1.397334,-7.005301,0.777544,1.891096,1.889509,4.954376,1.117426,-6.725552,-4.734146],[-8.480845,-1.663189,9.843726,0.267376,-6.435488,9.650681,5.818658,7.155972,-0.267359,-7.073881],[-6.988932,8.859665,1.620745,-0.685202,-8.056401,-9.498076,3.099774,0.050794,4.229375,4.575468],[-9.400383,7.604654,8.917814,7.448221,8.764362,-9.807958,1.260194,3.919256,-0.427147,1.640296],[-0.077387,-3.254296,-1.405899,6.590364,-6.782335,5.087575,5.027870,-3.502538,6.762288,-2.074479],[1.236442,8.053869,-2.171294,9.388801,-4.251724,-0.227131,-0.853827,-3.493163,-6.326126,0.358086],[-5.149247,2.192620,7.557047,6.760985,6.021100,-8.128515,-8.497595,-6.008040,-4.617625,9.461979],[-8.806954,-2.027588,-1.130738,7.158477,-0.745665,2.995233,-6.644263,-2.051124,-2.730464,-9.794762],[9.443669,6.895477,-8.345663,-5.406115,5.288143,-3.742319,4.592797,3.345117,7.358727,-6.810928],[7.746189,8.608124,-7.511392,8.927265,8.996723,2.949702,-0.745553,-3.808535,-1.682142,-6.841925],[-0.267537,5.034137,6.086689,-3.007433,8.764119,-9.100512,-2.505906,-4.680979,3.207971,-1.427752],[-6.731604,2.690795,-0.714121,4.948088,-7.437148,-7.286746,-6.665233,1.270750,-0.814797,8.954990],[-8.081594,-4.205414,3.951433,-4.531547,7.438876,7.751763,-4.221323,-7.728980,-1.762964,3.255643],[3.001275,1.242735,8.197639,5.568718,-4.156164,7.800574,-6.773537,-5.931768,3.490333,-1.905827]],[[8.706263,-1.892082,-1.798746,-8.077198,-4.689200,-3.775845,3.068389,-2.730914,-1.688082,4.548451],[-9.346791,1.837850,-3.216292,-8.903635,-1.819217,-7.656547,-5.034805,1.890531,-6.203889,9.176999],[4.901805,-1.953900,4.938397,1.603077,0.188898,4.395744,-1.988331,-1.412387,-0.162065,-3.854989],[-6.692223,-7.902305,0.188602,5.810340,3.226299,-8.258869,-3.527176,7.197483,1.915229,0.015351],[8.965101,-8.563962,-4.523418,8.915138,2.729739,6.817020,-4.305790,-1.589644,-3.619477,0.291821],[-2.576937,-7.636385,1.804574,6.859497,6.321054,3.857305,5.838879,-2.034879,-9.556792,-9.581317],[6.523133,6.322404,6.343874,7.306526,-8.099697,6.953232,-8.957333,7.387170,6.038821,9.826898],[-0.857761,-6.380478,-1.522197,2.976447,-0.260796,2.913200,8.630316,2.400737,-8.183955,-1.900537],[-3.407224,-1.009584,-5.745137,-8.923377,-6.334080,-0.641965,-5.827235,-2.486413,4.780634,5.510790],[5.910975,4.255410,-6.421879,6.745877,4.446081,4.603183,3.448345,-8.540417,6.325416,0.515379],[-4.133901,-5.934192,-2.420313,-9.196997,-4.503199,0.199928,-5.095195,6.915167,-7.859695,6.233415],[-1.137969,8.473057,-2.076361,8.684025,-2.363685,7.427862,-7.553857,2.961902,-3.769615,-5.050365],[7.848668,-0.516895,-8.803151,-9.125115,-4.402999,-9.497869,-4.137743,-5.887245,-2.438833,5.749807],[3.538084,3.307938,-9.204945,-2.136811,-8.346194,-2.342665,7.879773,4.951212,-7.396181,-2.559208],[-8.034933,2.248692,-3.799554,8.614780,-3.858311,5.316645,-6.559698,5.815968,7.940177,2.760540]],[[5.147612,1.803692,6.308921,-7.595248,2.872221,-6.163590,-2.368915,-8.103211,-2.194394,4.552298],[-9.225991,-7.359412,0.287518,-2.735832,4.542261,8.467765,5.290253,7.051764,9.494987,-1.065149],[-2.025487,-9.898480,-0.316245,7.135681,0.166112,6.357517,6.164880,-5.542615,-7.311264,4.167020],[-1.529275,-5.739459,-5.199237,-9.651567,1.462803,-7.693758,-7.641524,-4.928155,4.052711,5.322720],[-2.220071,8.988381,-5.516364,6.687535,-5.584827,-2.024421,3.261776,-4.486559,8.339032,8.298649],[2.483020,-0.506116,1.005827,-2.697122,8.598676,0.483960,0.089964,9.176274,-8.343847,-7.736330],[-9.660884,8.960492,5.753632,5.989435,5.092051,5.231057,-5.695240,-5.509794,6.804407,-5.025738],[-1.146342,-0.268382,-4.584519,8.504254,-5.174308,0.204047,-9.421504,-1.614305,-2.954203,-4.977016],[9.613644,-5.952232,-7.854613,1.828112,-7.235537,-1.920009,3.312790,-3.322630,-4.892585,-4.845292],[7.264185,6.788448,-6.024260,5.976475,1.069751,-6.054740,8.899829,-5.607412,7.207550,1.550878],[-2.055621,-5.498144,6.486814,5.587138,-4.144990,-6.505885,-8.162725,-5.453456,-0.590632,0.191140],[3.643430,-0.490152,0.415445,-5.859283,-7.085292,-9.005511,8.138060,-0.898056,4.311029,5.004719],[9.901126,8.754764,2.199481,-2.936177,6.269991,-6.546466,-0.853214,4.498558,5.696347,-3.364884],[-3.896895,-4.784697,-2.352222,-6.382028,4.928165,3.124080,1.969939,-6.921509,-9.577065,-2.009007],[-0.071606,5.077083,1.008434,-3.067585,-7.684834,-4.063317,8.019965,0.152027,6.409780,1.947328]],[[8.054048,9.704688,3.323794,1.271040,8.335367,9.173027,-1.332168,-3.627533,-4.632124,7.629291],[1.623933,8.001560,-8.861334,-1.224071,-1.228199,-5.381636,8.586790,-2.306139,6.747751,-8.086088],[-9.069114,7.515323,-8.733535,-4.494257,-7.915298,-8.338134,-3.038387,0.510934,-5.225962,-7.042052],[1.345085,-4.375636,9.164122,-8.817624,-9.963298,8.779033,-0.318437,-3.759526,-0.389587,4.487436],[-5.533006,-5.415077,5.205360,5.874630,-4.640372,-1.840157,4.356299,-6.338080,-7.170228,1.655348],[8.577555,3.691315,1.254647,6.762493,-8.361645,2.921585,-3.174014,0.509435,7.638280,5.709822],[3.093082,4.577504,-9.370403,3.864306,-1.582560,5.267168,9.320622,-5.120304,-4.818007,-2.058328],[-6.117496,9.254646,3.299100,8.953892,-8.781797,-6.983802,-3.123884,-6.637958,8.706851,8.251056],[-0.435857,-1.736708,6.323342,9.024501,-6.395468,2.913280,2.465043,9.976391,1.947481,1.487830],[1.511061,3.907544,6.209632,-8.992850,6.715822,1.082966,-5.341642,4.513424,-2.351074,-9.621531],[-5.851195,1.536338,-0.727515,5.292407,1.288954,0.616260,-0.750959,4.778581,-1.933639,3.008194],[6.645752,-6.530082,-0.651374,-9.557267,-6.720669,9.955340,-2.916337,-8.516231,9.383424,-3.318345],[-4.013231,2.769692,4.060463,-5.419265,-4.451699,8.744508,-8.694884,4.606234,-9.440799,5.696751],[-8.376472,6.621663,-6.698941,-6.016614,2.816997,-1.789934,-4.863116,5.791225,-9.046926,-9.062904],[7.532188,3.456184,4.236760,-1.118864,-6.916774,-9.995978,-2.988279,1.582916,4.484941,-1.987529]],[[-2.051768,-4.875885,-6.324678,-4.206837,2.616436,0.364781,9.520224,0.600705,3.166435,-3.735871],[8.938351,4.345232,-5.779922,-4.566257,-2.857194,8.048225,-7.486633,8.303608,0.230324,7.681836],[-7.325496,2.752503,4.279384,-9.537260,-4.300374,-2.763916,3.844333,3.713088,-0.423183,8.922830],[-3.669518,-8.762826,-1.206454,3.523255,9.816664,6.377400,1.029206,3.642729,9.401432,7.515393],[-4.683208,7.109975,3.813048,-7.123111,7.851429,-3.971943,-9.809160,-6.889099,3.442746,-3.832004],[-2.141114,-1.813077,-0.343721,6.304256,-7.286792,4.381486,-1.870932,-0.990927,3.305861,-3.548517],[8.928610,-1.435566,3.308110,-0.823917,-8.585978,0.324497,-0.206852,-8.934849,-6.451256,-5.700136],[-7.652002,0.025686,8.433182,3.235878,-0.358694,7.901331,-6.246739,8.767239,-4.763926,-6.184752],[-9.494437,9.349336,-9.583485,4.094535,2.211875,6.941518,6.256223,0.933107,-6.959689,0.735238],[-3.019950,-1.949107,-0.245082,-1.739532,-7.006915,8.562653,-8.953360,8.952556,-1.178276,2.679218],[2.414032,-7.285903,-7.500112,5.458915,-2.953901,6.281288,7.789114,1.528242,-0.783648,-3.540000],[5.220554,0.856383,-2.422082,-3.992589,-7.169997,6.002767,-6.656912,-1.297889,9.445536,2.605564],[9.934537,-5.729945,4.444468,-4.578053,0.340696,-4.492090,0.609473,-3.840518,-3.469262,-2.115615],[0.994801,-4.213398,4.987144,-8.014950,-0.970479,-1.586435,-0.687695,-7.378209,5.410545,0.732105],[6.388475,4.314635,-7.168995,1.457349,-0.919330,5.057020,9.056589,9.735320,-7.543838,7.483994]],[[6.092242,-5.819745,-4.359687,7.745878,-9.288872,-4.258731,-5.062954,-5.490465,9.503266,-0.648596],[1.899365,0.205960,9.667406,-3.977020,-2.256039,2.081700,1.441450,-2.282906,-6.117050,7.441655],[-7.843653,3.723367,2.388743,0.422219,5.664974,-1.508296,9.853939,8.064579,-6.768798,1.517026],[3.210172,3.055790,-4.305849,-2.697042,5.873038,6.614304,5.793961,5.180087,-9.047621,8.362019],[-6.927913,7.062748,-4.962516,-4.576120,-9.213877,9.480004,-3.048739,-4.733094,-4.126249,-9.904972],[9.057872,-5.963491,-6.878299,0.037533,-8.814632,-0.361129,8.665112,1.425570,-3.228480,-8.139830],[0.777661,-9.901351,-4.067296,-8.717114,7.172623,1.471596,0.995125,3.168827,5.243499,-5.010599],[3.975886,-4.323573,-9.543742,-3.800850,4.449740,1.598331,1.162583,1.129894,8.658726,-7.867462],[-2.462458,9.685254,2.214497,9.103900,5.957920,3.052508,-8.575502,8.258259,4.479431,6.473776],[9.202189,8.931533,-2.946490,-9.464857,-6.312116,-8.778932,-7.994753,-5.718180,-9.012187,-2.824894],[-9.815767,-7.075975,5.637023,7.349408,-8.423793,-1.356470,-0.648235,-8.803137,-7.028768,-8.687797],[7.484152,2.248362,-6.057599,-1.846382,5.412117,-3.879297,-2.142239,-2.109622,7.051205,-8.898032],[-3.122007,0.038221,-3.123181,0.755667,-5.396190,2.544765,-1.366542,-0.948077,3.432247,8.656727],[3.603306,-3.763719,-1.877730,-1.896229,-6.596178,0.008949,1.014741,3.463078,-6.305988,-0.277049],[-7.779897,5.897975,-8.629771,7.826510,-5.973561,-4.387500,8.014995,0.769667,9.361717,9.328555]],[[-8.905341,-0.961672,7.841091,0.798648,-2.124755,-8.077510,8.396088,5.582374,5.460005,0.193361],[5.624961,-1.212725,-2.516625,-9.999246,9.366356,-1.441115,4.577730,4.377934,-8.471489,-2.441306],[-2.210351,-0.695583,-9.635838,9.601553,-2.777689,1.004644,-8.417038,-5.239608,1.972845,-9.369569],[-8.440743,-2.639822,2.247715,-5.685568,-6.571903,-2.255181,-7.109310,6.117310,-3.320251,-1.433159],[7.264129,-5.241465,1.006634,7.765942,5.124811,3.092364,-2.616496,0.762580,6.629583,0.629708],[0.345493,-3.621743,-4.063768,-3.462865,-5.834166,-4.984959,4.753426,7.394140,5.632676,9.660746],[-3.599066,5.761122,9.989773,-5.473623,-1.191635,-3.014800,2.588977,2.446780,-7.396953,-2.710202],[1.832824,1.334824,0.192026,6.186937,1.000627,-9.283059,-2.601935,-8.177715,-3.904082,-9.499450],[-8.390427,-1.914258,-9.682424,-6.884162,-1.893681,9.998736,1.973831,-4.104597,-7.283990,8.607575],[-9.270984,9.872560,3.799894,-9.001226,3.305102,0.019546,-6.342355,7.647124,7.033670,5.036259],[5.588118,5.857994,8.784474,1.997924,-3.797932,9.713419,-0.062357,9.307595,-9.021462,-0.426680],[-8.169578,-1.081605,3.854262,2.354737,9.890529,-7.096408,-6.783994,8.707724,3.767764,6.131600],[7.413746,1.855472,6.956060,-5.940758,-4.255900,4.167439,-3.280726,1.102561,-8.909048,-1.573396],[-0.126633,-9.899549,6.101265,-3.281745,-9.920273,-6.426726,7.062262,-8.670528,-8.433997,-8.822987],[8.885911,9.482761,9.878188,7.894397,-5.476348,8.229041,1.339882,1.787449,1.216930,7.960208]],[[7.077868,-7.507338,6.377113,7.664302,1.232721,9.372120,-7.398085,-0.141635,4.560046,6.167123],[4.676458,-7.675479,-4.343887,5.809062,-2.564355,6.945366,-0.731036,-2.106663,-1.192793,6.200152],[2.061998,-8.441201,-3.238151,-4.125459,9.144348,1.576508,-8.852232,1.733034,8.477309,7.972989],[1.288087,7.041600,-8.023868,-4.882352,2.945921,-4.506625,-0.227017,-6.600194,5.355322,-1.252755],[-4.950245,3.225302,-9.828046,9.265357,-2.913278,4.892302,-9.724946,5.570768,-7.979581,6.057776],[-3.468242,-7.828099,9.021399,1.585056,1.822607,2.307334,0.684636,5.849252,6.721837,4.502055],[4.702074,3.386775,4.664146,-4.462624,-2.344578,0.847608,1.973015,9.842480,4.880580,3.833770],[7.780954,-0.728647,5.557236,-4.859669,7.277510,-4.128518,-8.260174,-1.182367,8.453433,5.062776],[-2.239967,-6.064907,-2.676854,-2.042481,-1.393249,5.564979,-3.038032,-1.764926,8.519538,-0.611610],[-4.069876,8.372711,1.738878,-7.175236,-3.520137,-7.526135,-7.254649,-5.839817,5.049640,-5.212988],[-8.009628,8.256653,-2.172390,-0.753259,-0.785413,-2.278356,-6.990332,0.586898,4.910561,-0.500084],[0.579312,-3.278952,0.379110,-7.802095,-8.594022,-2.544716,-9.235559,4.571577,7.819884,-2.485217],[4.035277,-0.488161,-4.784235,3.398460,1.678352,2.546537,-8.868071,-5.993066,-3.920332,-0.821792],[-1.015836,7.631509,-8.493245,5.158052,8.760058,6.445362,-6.431757,-0.721451,0.519589,-8.321566],[9.070124,0.209526,9.999089,9.550676,8.909825,-8.437373,-6.571723,-2.671088,8.111835,-7.710527]],[[-7.454317,6.010317,4.713903,0.257223,2.223288,1.077571,-0.531054,-1.681582,-1.915147,4.168288],[-9.403736,6.509161,-6.039139,3.933077,2.110892,-7.362713,-1.699079,-5.373700,9.633175,-2.224011],[5.423572,7.817455,8.943856,-3.928989,8.186583,7.444108,6.269601,-7.915585,-7.376238,6.159435],[1.027979,7.600571,1.939043,3.737665,-0.826312,1.926467,9.904554,5.279777,4.042703,-6.031527],[4.750088,-2.616087,9.463100,-7.635413,-0.131106,0.195594,1.282501,6.790544,7.449710,1.685022],[6.327241,5.573473,2.927908,5.018676,-2.226294,2.541787,7.432766,1.114402,-5.741284,-7.714202],[7.185615,-9.351301,5.259741,-2.332497,-4.789832,-2.855704,-7.745837,-9.271346,-4.440507,-1.813618],[-6.547668,-9.123698,0.716937,-4.790588,-5.670803,9.091958,-9.816260,-2.640221,9.320832,-0.460774],[0.782398,2.953287,4.217858,7.076877,3.982221,-5.656686,-9.782915,4.286781,-7.486174,7.013893],[7.438805,0.579429,9.159317,6.372926,-3.574693,-4.794916,-7.974172,6.933543,-9.154990,7.779223],[7.651974,1.945151,-3.887530,3.743463,-1.952429,5.200227,3.685312,4.620010,8.371175,-1.596593],[3.592068,9.756307,-5.344578,1.140163,7.594809,7.420721,-8.234884,-8.286311,4.385716,-4.908326],[6.431482,1.631164,-1.354574,0.277558,5.266272,4.734781,-5.323618,-0.784463,1.608354,1.918783],[-5.618104,7.180132,6.761864,-6.562848,-7.640943,-4.311042,-1.163386,-7.638579,0.556793,-7.675749],[6.808248,3.784546,-6.586971,0.800769,2.929012,8.198716,1.979544,-1.230477,-6.198848,8.083461]],[[7.465586,-2.985313,-7.840249,-0.215220,-2.012480,-2.220773,-7.676243,-9.069343,-3.261196,1.059530],[-4.717783,8.467904,9.838095,1.061346,-5.446121,-5.754063,-2.062638,-9.085152,-8.818142,-4.083237],[5.348677,-1.854309,-5.759027,7.988631,-4.407515,-1.454967,5.352025,-2.967431,-3.103568,-1.888402],[0.212379,-4.165307,-1.903774,-0.949958,-6.038529,1.360017,0.472946,7.697694,-9.447256,-8.707336],[7.322407,-9.111158,0.408111,-5.597590,-6.197755,-5.213376,4.702531,2.006696,7.584887,-0.913933],[2.586582,-9.216057,-5.157916,-3.889845,-1.913649,4.525688,-3.384523,-0.494965,8.065640,5.652938],[9.436163,6.437950,-8.324046,-5.764244,-6.304082,5.195297,7.900231,-5.002011,-2.459052,-3.733592],[-9.776409,-8.737161,5.116689,-5.992576,5.144278,-8.224392,9.601940,-8.129310,0.338844,-0.663598],[3.558952,1.412903,9.871277,-5.437921,-8.522190,-0.475754,7.225802,3.490732,5.682310,9.107874],[2.322204,5.036145,0.188829,1.740973,6.319156,-3.778780,2.684155,9.782941,7.492174,-9.407878],[-0.501234,-5.768183,-3.220856,5.426643,3.870076,-8.659810,-6.991212,-0.658466,9.538829,-1.335404],[3.063720,-0.132732,-1.414525,2.660856,5.643728,-8.152177,-4.302041,0.444679,-1.379629,-6.712225],[2.899865,2.535247,-9.787675,2.517646,2.354722,-6.945967,-5.413518,5.711981,-4.747906,9.860137],[2.461579,-5.649291,-9.008285,-3.413024,-3.160293,0.304530,3.904813,6.280562,-2.734177,-3.517789],[4.658176,-7.825993,0.365918,-1.232659,-0.006640,0.116291,8.364729,0.438371,-0.846539,3.888199]],[[-3.637198,-2.460316,1.137713,4.111586,5.097499,4.366686,9.310778,-6.441394,9.560505,-9.940014],[-8.153095,6.470838,9.628351,-4.976040,-7.439982,-2.374340,-1.267960,9.321273,6.743864,7.510737],[-6.433513,3.873917,-3.595780,-2.421001,-0.711423,2.401114,-8.522006,6.112668,8.103476,3.568876],[9.777289,-1.444641,8.542233,1.998766,-9.247980,1.284998,9.157185,-9.885042,-6.716664,6.843638],[-9.146180,-4.969947,-1.735429,-4.676099,2.371365,6.795494,-1.321436,-2.594625,8.596751,-6.526459],[-8.286467,-7.804294,-5.880334,0.995255,7.361034,9.975926,5.508475,2.473872,9.354201,6.006386],[0.735767,9.109512,-8.861014,9.261119,7.236281,6.236468,1.129451,6.251454,8.876098,7.969069],[-8.367873,-4.463618,-1.460050,5.588018,4.006647,-5.702739,1.068340,-5.950952,3.616291,-9.599702],[3.559860,-0.235250,4.519802,-8.349813,-4.641002,-1.143854,6.829391,-2.903417,-2.932714,5.978217],[-6.891264,-9.535663,-9.326864,0.618041,3.171642,-1.691067,0.278260,5.257128,8.149759,9.251170],[5.296062,-7.110834,-0.399282,-2.895537,-7.234848,7.102971,4.735594,-5.683772,-4.266771,8.535613],[7.105980,6.604948,-5.048884,-4.834403,-5.462123,4.760692,5.547169,-2.630453,-8.479835,-8.184545],[6.766770,6.638423,4.241298,-1.342521,0.437554,2.477565,5.703578,-4.732227,-6.801742,4.001183],[-6.342904,-0.691395,-8.555712,-6.537126,-3.082672,6.027300,-2.085104,-3.105502,2.056802,5.952714],[9.237632,6.978418,3.761427,-4.298104,-7.859832,7.710769,9.989196,-2.382512,-5.219166,-0.334313]],[[4.376943,-4.458691,3.113647,-3.868494,2.072863,2.549963,-7.316162,-4.798248,-8.213102,8.658229],[-6.443935,-7.394384,9.748745,-0.866013,0.875078,-8.727707,-4.214435,-6.307161,5.214267,-4.487579],[-5.250110,0.355287,0.958182,1.224124,2.710265,-4.851469,5.376743,6.762016,-6.728019,-0.976918],[-1.061840,-8.140177,-2.416928,-9.766535,9.345825,-5.907409,5.166478,7.692656,8.613355,-6.335742],[4.745037,2.857262,7.201479,2.843398,-9.777143,2.134992,-2.752042,0.545908,-1.152101,7.417278],[1.975721,-0.782059,7.328793,2.564733,-5.910337,5.611456,-4.948715,-2.972143,6.586556,0.027444],[1.030933,5.785880,3.438296,-7.386691,-6.786265,1.674347,-6.122030,-2.258556,6.405185,-3.902724],[-9.169510,-4.352303,-5.353896,-4.902215,-6.227124,8.751662,9.681429,-1.206436,-4.871786,-1.913197],[-3.058473,-3.803609,2.340544,-4.386835,-2.211174,-6.448223,4.163332,4.651773,4.921283,8.467875],[-7.070635,-6.016280,3.248906,-3.790772,1.203160,0.376548,-0.326067,-3.864993,-5.911689,1.081944],[-9.360148,5.580293,-4.550228,1.535123,5.072394,5.010307,-7.759865,4.748205,-7.694738,3.592182],[-4.372935,7.199159,-5.974727,8.555067,2.408531,7.028064,-2.979808,0.905330,6.456528,1.516004],[6.727230,-4.058679,-8.829406,-6.062576,2.356368,-7.749972,-2.487573,7.785924,-0.668559,6.258507],[1.249667,5.730494,-1.709048,-1.362184,6.879009,-1.331370,-1.827652,-3.810738,-0.731384,-7.254500],[-5.919917,5.505808,-5.648552,4.987127,2.002152,-8.312626,0.494721,6.100627,-9.072291,-3.124200]],[[9.277008,2.073827,2.332071,-5.784007,-3.258886,-2.800917,8.982461,7.383405,-6.329392,-1.201672],[4.463978,-5.134703,-6.283339,-7.684190,5.783959,4.401081,7.806896,-2.844302,-0.019673,-9.034954],[6.384340,-2.192995,8.865236,1.752762,-6.621433,0.899885,-7.904691,9.790771,1.826036,-7.296829],[-3.945988,4.064523,-6.740866,-8.758203,-4.283997,4.464054,5.371154,4.640051,8.993681,-8.995664],[-5.665531,9.591857,3.043539,-0.180522,6.970097,9.294564,-9.450399,1.131591,2.489530,1.180802],[2.843083,0.473215,-9.292210,8.440308,6.115811,-4.727979,0.063915,9.983070,-5.807352,-2.995457],[-3.406410,0.271414,-5.183123,1.907762,-4.259559,-7.544395,0.349191,7.660393,-8.356175,7.551000],[-4.518421,1.913885,0.411359,6.846649,-2.006792,4.352740,4.090129,2.045106,-8.895934,1.857444],[-5.984340,-4.010441,-2.568884,8.259452,-6.540839,-9.154252,-2.461112,-7.756479,-9.534435,9.734335],[1.355411,7.716341,1.226805,8.077760,9.085995,1.179311,-6.916604,2.718018,9.957198,5.803289],[6.080013,-0.015394,3.724923,-6.272144,-6.250892,6.069946,-7.999076,3.491160,3.756195,3.793993],[0.856752,-8.222318,-2.607257,-3.275459,2.774419,9.082631,-0.840929,-1.837349,7.351592,3.186083],[5.829757,4.522656,-8.222358,1.190748,8.686659,-3.044460,0.654083,-0.692649,5.589134,7.689520],[-5.094624,7.963660,2.708698,1.123387,-1.782443,-4.138732,8.518646,-3.103799,-8.317672,9.192936],[-6.897843,8.723269,4.774301,-0.241208,-0.686511,4.773694,-6.420995,4.394131,-7.207452,-0.801696]]], dtype = "float64")#candidate|10054|(15, 15, 10)|const|float64
uop_10055 = relay.log10(const_10054.astype('float64')) # shape=(15, 15, 10)
bop_10057 = relay.subtract(uop_10055.astype('int64'), relay.reshape(const_10054.astype('int64'), relay.shape_of(uop_10055))) # shape=(15, 15, 10)
uop_10072 = relay.exp(uop_10055.astype('float32')) # shape=(15, 15, 10)
func_9506_call = mod.get_global_var('func_9506')
func_9509_call = mutated_mod.get_global_var('func_9509')
var_10077 = relay.var("var_10077", dtype = "uint16", shape = (143,))#candidate|10077|(143,)|var|uint16
const_10078 = relay.const([6,6,4,-1,-3,10,-2,-9,2,-2,2,-2,5,-2,-3,-8,4,7,5,8,-6,3,-1,-8,-6,9,-6,-8,6,-9,-8,10,-10,-10,6,2,8,-10,10,1,8,8,10,-4,-6,7,-9,-8,5,-3,7,3,-5,-4,2,-2,5,2,-6,2,-9,-7,-8,-7,-2,4,-10,-7,-1,-9,-6,3,1,-7,-2,-10,-1,-9,-2,10,9,-5,2,-3,3,-5,-10,-10,-4,9,-9,-8,6,7,-6,-3,-2,5,10,-4,9,-2,8,2,-3,9,-8,4,2,1,10,-2,-2,-6,-4,-5,-2,4,3,1,4,9,4,-7,5,-6,-2,7,7,6,4,6,10,-5,3,8,7,-1,-1,9,6,8,6,-2,9,-6,-1,8,-2,6,-10,-5,4,-7,-4,-8,4,6,3,4,-6,-4,3,-8,-4,2,-9,-8,5,-7,-4,9,2,7,-5,-7,3,8,3,3,-2,-9,4,-5,5,-9,-8,-6,-4,-8,-5,-10,8,4,-7,9,4,2,7,8,-1,2,3,-2,2,8,6,-6,7,6,-7,-3,4,10,3,5,4,1,-5,6,4,-5,-1,5,-10,-2,-7,-9,-8,-4,8,-5,9,2,1,-3,4,-3,8,-5,-10,-7,-1,8,7,10,-3,10,1,6,-1,-6,9,-4,-9,7,-5,6,1,5,8,-5,-2,-3,-6,6,-9,6,4,-7,8,-4,-8,-9,6,7,3,7,7,-10,-8,-4,-1,-7,10,-9], dtype = "uint16")#candidate|10078|(286,)|const|uint16
call_10076 = relay.TupleGetItem(func_9506_call(relay.reshape(var_10077.astype('uint16'), [143,]), relay.reshape(const_10078.astype('uint16'), [1, 286]), ), 2)
call_10079 = relay.TupleGetItem(func_9509_call(relay.reshape(var_10077.astype('uint16'), [143,]), relay.reshape(const_10078.astype('uint16'), [1, 286]), ), 2)
output = relay.Tuple([bop_10057,uop_10072,call_10076,var_10077,const_10078,])
output2 = relay.Tuple([bop_10057,uop_10072,call_10079,var_10077,const_10078,])
func_10082 = relay.Function([var_10077,], output)
mod['func_10082'] = func_10082
mod = relay.transform.InferType()(mod)
mutated_mod['func_10082'] = func_10082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10083 = relay.var("var_10083", dtype = "uint16", shape = (143,))#candidate|10083|(143,)|var|uint16
func_10082_call = mutated_mod.get_global_var('func_10082')
call_10084 = func_10082_call(var_10083)
output = call_10084
func_10085 = relay.Function([var_10083], output)
mutated_mod['func_10085'] = func_10085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10428 = relay.var("var_10428", dtype = "float64", shape = (5, 11, 5))#candidate|10428|(5, 11, 5)|var|float64
uop_10429 = relay.sigmoid(var_10428.astype('float64')) # shape=(5, 11, 5)
output = relay.Tuple([uop_10429,])
output2 = relay.Tuple([uop_10429,])
func_10439 = relay.Function([var_10428,], output)
mod['func_10439'] = func_10439
mod = relay.transform.InferType()(mod)
mutated_mod['func_10439'] = func_10439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10440 = relay.var("var_10440", dtype = "float64", shape = (5, 11, 5))#candidate|10440|(5, 11, 5)|var|float64
func_10439_call = mutated_mod.get_global_var('func_10439')
call_10441 = func_10439_call(var_10440)
output = call_10441
func_10442 = relay.Function([var_10440], output)
mutated_mod['func_10442'] = func_10442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10563 = relay.var("var_10563", dtype = "float64", shape = (1, 8, 16))#candidate|10563|(1, 8, 16)|var|float64
uop_10564 = relay.tan(var_10563.astype('float64')) # shape=(1, 8, 16)
output = relay.Tuple([uop_10564,])
output2 = relay.Tuple([uop_10564,])
func_10576 = relay.Function([var_10563,], output)
mod['func_10576'] = func_10576
mod = relay.transform.InferType()(mod)
mutated_mod['func_10576'] = func_10576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10577 = relay.var("var_10577", dtype = "float64", shape = (1, 8, 16))#candidate|10577|(1, 8, 16)|var|float64
func_10576_call = mutated_mod.get_global_var('func_10576')
call_10578 = func_10576_call(var_10577)
output = call_10578
func_10579 = relay.Function([var_10577], output)
mutated_mod['func_10579'] = func_10579
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10752 = relay.const([[[-0.091535,2.542686,8.341581,-0.830903,8.587714],[5.518941,9.538407,-7.807283,-7.402331,5.098899],[7.077106,2.641577,-9.736531,6.451200,-2.247456],[-5.041976,2.048966,-8.367426,-4.832533,-2.432128],[-0.194458,-6.612550,5.557110,-7.045166,-6.444582],[-2.594691,6.213823,-0.446995,-9.024586,-5.141530],[-3.742892,-5.383431,-2.550087,-1.546265,1.750295],[-0.703191,-6.190746,8.254875,-0.510769,-8.690978],[2.982145,-8.675144,-1.824744,-1.984639,4.001978],[7.210852,3.639046,8.988161,-7.643721,-9.056249],[-9.132750,-0.347647,1.090582,9.401033,3.468021],[-1.304044,-0.762328,-5.172612,8.500053,-6.155726],[0.584731,-7.396640,9.724630,-0.594980,-5.085233],[8.092268,4.964910,7.258248,-1.356518,-3.627333],[-6.693160,-6.584689,-7.038227,-1.565925,-6.239963]],[[-8.953666,-6.124117,-5.626348,-5.943002,-9.766170],[-7.297612,-5.742018,3.367685,-7.533783,-4.590917],[0.377073,-3.126013,9.657145,-2.617646,-7.872189],[-5.330962,-7.742145,-0.091480,-0.103947,8.330870],[8.737411,9.114078,-1.369368,4.053020,-9.649539],[5.459276,5.422267,3.022347,-4.382528,-7.443402],[-9.652447,5.497856,9.781489,-0.899387,6.803937],[-0.332748,7.578784,-1.908781,-7.536305,-4.424732],[9.113557,4.242991,1.501428,9.152549,-8.460551],[5.097963,0.928249,-5.993693,-9.694410,-3.000313],[-3.795147,-9.222191,-7.198839,6.023516,-5.483012],[9.219532,-3.054061,-5.482656,-0.638008,2.534328],[6.221356,1.437460,-4.658183,-5.495303,-3.820311],[-0.494332,4.095866,-4.300765,1.029066,3.449083],[-6.932124,8.465588,1.717006,-7.732043,3.073269]],[[-2.193247,-1.174382,9.626964,9.303835,2.840624],[0.734094,3.882009,-8.680152,-0.254368,3.826788],[-6.229652,3.772596,-3.629052,6.104306,-2.993867],[7.723211,-7.387405,-5.647135,-6.218515,7.109897],[-0.475238,5.400785,9.283504,1.809898,9.414261],[5.768618,-5.247359,6.684273,7.867883,-1.656346],[6.760841,0.252548,0.427450,-9.222812,9.919126],[-0.030568,-2.636107,4.261724,4.866207,8.255070],[-3.262381,-6.734457,9.310010,2.184476,0.530819],[-7.243948,7.105517,-1.437908,-0.974179,-0.564837],[-7.124469,7.508750,-7.151578,-1.470353,2.367431],[-7.098118,1.118531,1.301671,-2.751045,9.855518],[-5.055945,6.317005,8.707780,-0.862155,-2.845460],[-0.080917,3.773628,7.344268,-2.454793,-6.163828],[4.751261,5.027127,5.636840,-6.440259,-3.612066]],[[1.803609,9.377750,-1.717298,-7.036412,-5.842017],[-3.676589,1.995810,-4.943032,4.276099,7.986639],[2.956339,2.828608,0.364866,7.264950,-8.575530],[1.879854,-9.537361,-8.961583,-4.322065,7.750536],[7.685528,7.530453,-9.134488,3.484359,-1.349280],[5.377693,-3.699007,9.451996,2.387349,6.347475],[-3.370563,-5.765476,3.096510,1.590450,7.271134],[4.081663,-6.821961,-9.711237,-1.036434,3.109630],[-4.813239,-4.824202,7.182325,-9.418188,-8.646123],[-0.749013,-7.426932,6.810877,-9.583833,3.869652],[-9.054341,-4.926184,9.762815,4.555618,1.064976],[0.882495,3.011328,-1.697353,7.761767,9.106288],[-4.609861,-4.734250,-6.557965,-3.969538,-9.275774],[7.798443,-6.949329,-7.525432,-6.305836,-9.571726],[-2.395345,1.767097,6.752276,-0.004866,-6.578081]],[[9.538320,4.534846,8.120803,4.149047,-5.811439],[-2.385451,-6.690003,-8.512007,-4.010947,-5.551664],[-2.597144,-2.312227,-2.138826,0.352960,-3.345220],[5.502887,-5.284673,5.517221,-0.903304,7.024952],[0.709250,-3.230186,8.523721,-0.445175,8.949093],[-3.150403,7.137099,9.005996,-9.633941,-7.084017],[-1.057791,-5.452040,-3.484443,5.052959,1.296754],[-5.231558,-0.632500,-3.141016,7.708001,7.745279],[-8.989162,-8.604462,4.202306,2.025515,-4.239878],[-6.892355,0.789131,4.534742,3.339687,3.982368],[0.068229,9.547036,-4.764476,9.232584,-2.759169],[0.208193,-3.783262,-8.517905,4.427898,-0.984668],[2.021177,3.006284,2.509046,-3.142072,3.285014],[3.866885,3.632753,-3.742864,5.001399,3.294624],[-5.002642,-4.662880,-0.399311,-5.816210,-6.673976]],[[8.898915,-7.759595,2.884041,7.144304,-6.941251],[3.432128,-0.934562,-3.978926,-6.410216,-6.200994],[7.552813,-8.457445,-4.841065,-1.951078,5.549091],[2.088062,-8.717315,3.728508,3.347625,5.306294],[0.327218,-8.908842,-8.943349,-4.868547,-2.983549],[-5.442217,7.960179,5.634592,-5.089773,9.304091],[-5.128387,-9.068947,-2.581155,-8.846962,8.137300],[3.191277,-8.405444,-2.545754,-6.382487,-4.463591],[0.372299,-8.429401,4.364053,-5.743619,0.562455],[9.820847,-9.135027,-1.595599,6.231985,7.919865],[-1.452309,1.928956,-2.994521,8.971235,-5.947873],[0.760018,9.489517,3.109628,1.857085,-5.793287],[7.538487,-7.439395,8.779693,-2.516735,-0.355711],[6.911674,-4.905476,7.484569,-2.041849,9.030349],[-0.062232,3.546381,-9.590130,9.753153,-7.798941]],[[-5.493653,6.333927,-2.594986,0.477817,-5.719242],[-8.529218,-7.318763,-4.001967,8.212728,2.475980],[-7.636387,5.579241,3.733940,-3.885176,7.313544],[-5.318752,-5.427405,-7.444985,-5.422069,0.948503],[5.798602,3.990473,-5.318312,-1.085403,-8.459584],[-2.449294,4.759984,-4.328981,0.052429,6.487638],[-3.525090,-5.583648,-7.221394,3.913461,-4.260928],[9.436903,-8.870696,1.484142,-7.162581,-9.056976],[3.123452,7.308314,-5.325033,2.819043,-6.148156],[-2.015540,-7.278800,6.494903,7.740585,-4.267248],[4.087859,-4.548068,-2.713803,-4.276724,9.353173],[3.439403,1.154049,9.221271,6.351643,5.425413],[-8.410532,-0.847473,-0.752369,8.918869,-6.304565],[5.736015,6.210960,0.908173,-8.774099,-5.650292],[-0.447981,-0.681465,4.449346,0.591967,0.886552]],[[-6.788860,-8.329736,-8.111451,7.242076,-9.878469],[6.604977,7.636508,4.633713,-5.811307,9.556705],[4.926047,4.001079,4.295433,-2.022689,1.688881],[-7.662609,4.563390,-2.343685,0.415227,3.842174],[0.679981,-5.903120,1.204132,8.501402,7.429191],[-7.178445,-6.323361,-9.762580,-4.247934,-9.450014],[-3.142890,-6.947341,1.749475,-7.778960,-8.558657],[-0.187049,-6.002984,-3.722327,6.703769,-8.433093],[-6.653954,0.428722,-8.423131,9.206887,-7.576481],[-0.252219,-9.056827,-5.104775,2.132762,-7.337700],[-1.096923,5.734951,1.575490,-4.915451,2.292156],[1.588269,-9.940084,-2.019269,2.628481,8.443653],[9.787012,-4.126873,-0.914173,2.451850,0.733243],[0.954602,-2.483559,3.218446,4.165878,-7.629250],[-2.793658,-2.987298,2.598982,2.673167,-3.076911]],[[-8.396583,-8.130514,2.624990,-4.688401,-8.016964],[2.460782,4.687297,-6.940692,6.681393,4.641815],[-9.590058,-1.907051,-0.824443,4.973435,-0.698606],[-9.214663,9.843289,2.151783,-4.424081,1.902005],[-3.837797,-8.981813,-9.447158,-9.851878,-9.091944],[-5.609839,2.662122,-3.614987,-4.714020,8.443863],[8.828093,4.372749,-2.777760,-5.723524,-7.456225],[1.904907,-1.575426,6.057009,-4.720849,-3.122830],[9.548632,3.309529,4.230667,-6.950398,1.800251],[-9.674672,1.131477,0.999955,2.322747,-8.904490],[4.082641,-1.948182,-7.201454,-1.440324,5.655218],[3.790812,2.972415,0.600502,-8.193192,-5.540495],[9.265167,7.733835,6.675055,-5.861405,-3.941150],[-1.070192,-6.592009,8.423530,-0.926082,8.503379],[-1.590441,-2.168620,4.476983,6.272882,7.015243]],[[1.255178,-4.374445,-8.173775,4.929959,-1.700810],[9.777129,6.601748,3.424746,-4.517716,-4.912863],[6.568208,8.619117,7.584952,8.734134,-3.413132],[-1.821367,0.703448,-3.970340,-7.063876,-8.158979],[3.337856,-0.594004,8.960983,4.683752,5.007183],[7.146034,9.722210,5.079724,5.564319,2.545449],[4.382588,8.569162,-8.559549,-7.613332,2.820000],[-5.200376,6.759857,5.734112,-7.362377,-2.372619],[6.916440,6.850641,-6.988973,5.663396,3.581567],[-5.183177,-8.010907,-0.156737,4.025843,-8.463506],[8.071853,-1.339068,4.279715,-8.223279,-5.993114],[9.177831,-3.486919,-6.514966,8.427921,9.428986],[-0.705565,-7.230372,1.353864,-0.535078,7.360072],[-9.159945,8.760772,4.863643,-0.336700,-5.758702],[7.064755,-0.633738,-0.103849,-4.135184,-8.046691]],[[6.121254,1.992320,-6.088290,-5.019027,-8.150136],[9.821045,-6.920594,2.281204,7.770492,9.835709],[-6.532159,1.144531,7.442235,-2.187350,-3.675005],[0.182812,6.836981,1.804545,3.589069,-5.977470],[0.325994,-9.035053,-1.251165,-3.103757,-5.911497],[-9.211475,-5.186764,7.175862,3.171663,7.589954],[7.116322,8.574731,-3.240499,-1.539722,-7.324820],[6.361529,-2.272121,-8.416735,7.225634,-4.337720],[-4.377114,-8.652106,-9.238068,-3.203779,5.392075],[8.405883,-3.889449,-6.571799,5.229457,9.158096],[9.643342,-1.302730,-4.276126,3.155269,6.339139],[6.946432,-8.766037,-1.116940,-9.260950,-1.595510],[-7.252412,-7.219818,8.526152,4.117310,2.598474],[-5.037760,3.149555,-9.033890,5.142111,4.178941],[5.083142,1.516521,1.700437,-5.072145,-7.520332]],[[3.848436,2.432914,-3.488331,-6.257469,8.923452],[-8.028692,0.146587,-6.612981,5.917492,8.895661],[-5.837325,-0.453694,-2.714770,0.112130,3.077719],[9.155050,7.413482,-6.636410,1.422673,5.634062],[-1.203907,0.747022,-4.401887,2.723533,4.740050],[-5.463401,3.243392,6.330390,-1.527422,-6.588231],[1.850472,6.496184,-8.714719,-9.907948,-4.971182],[1.953422,2.779406,-5.594292,-5.883311,1.956783],[-1.386470,-6.999930,-5.637971,8.911938,-2.602470],[-7.584455,-9.229253,-1.071316,7.439329,-3.051290],[4.422801,-4.159309,-4.333977,-6.681119,-3.859936],[0.413708,1.937152,-4.267819,9.445999,3.079978],[-7.729666,8.585594,0.976683,8.638092,-5.336031],[-6.392532,8.063031,-2.953916,-3.539860,9.011479],[3.074995,1.344920,-0.388650,-3.444007,-3.231912]],[[3.543328,-2.724863,6.034784,2.938835,-0.657948],[-5.269177,5.775770,-1.634221,-5.262531,-4.648216],[7.491797,-3.679332,-1.355498,2.761696,-4.973278],[-8.091057,-1.865075,9.208906,-9.219956,-0.167721],[-1.682213,-1.512482,7.382662,-5.292981,2.010887],[7.285815,-9.120372,0.746256,-2.653118,0.634569],[-1.876314,-8.279159,-6.669898,-0.378470,-4.634929],[-1.421753,-3.304289,-5.204550,0.312159,2.600499],[1.531535,8.275946,-7.097902,7.625694,7.301896],[5.904852,-6.593251,-1.451501,5.131905,-8.019660],[-0.746269,2.602012,2.945747,-2.912594,-0.340092],[4.244043,-2.621350,8.970159,8.047694,9.940410],[9.548556,7.397994,-5.934373,2.891771,-1.417736],[-6.885214,-2.201603,8.538953,5.212525,-1.662456],[1.070054,-9.195832,-2.166277,-3.756107,-5.844396]],[[4.593868,3.117611,7.700621,-5.467333,1.923172],[-1.638349,6.245363,3.238488,-8.658019,-1.892099],[-9.728068,-5.129121,8.894374,-1.843189,9.240594],[0.569567,1.758623,7.106780,3.587355,5.235451],[-5.600543,-5.166848,-6.269398,6.930136,-7.013980],[5.538945,5.474379,0.653175,-5.139776,2.623288],[-5.290545,-2.189815,4.425463,7.296959,-0.068179],[8.565247,-1.296641,-3.934054,-0.776273,-5.776190],[-3.356544,4.944320,2.218358,-2.451750,7.507169],[4.573910,4.039134,6.051256,3.902148,1.663680],[5.456579,4.289985,-2.244246,-6.166776,1.957251],[2.139780,-8.674179,0.772075,-0.319108,2.103637],[1.901085,3.985951,0.738545,5.713971,7.442117],[-9.325569,-3.122333,0.512883,7.133749,9.029401],[-0.467566,-5.578336,3.531159,-3.736308,-5.854176]],[[0.192386,5.087697,-7.117492,1.474709,2.676802],[-9.266847,2.128595,2.110663,1.587736,-4.465595],[0.719951,7.806837,3.234134,-1.440771,-1.299023],[-4.704041,-7.027910,1.392742,-3.510604,8.148410],[8.143825,3.685796,-2.406665,5.983638,8.456033],[-2.692768,-8.017230,2.477632,-6.642689,-6.466963],[-4.668027,7.984565,-6.577271,2.626769,5.108687],[-7.980554,-6.203434,-5.390387,5.827457,-6.252732],[6.722572,3.497882,-0.075820,-5.843815,-3.359543],[-3.434659,0.637277,-1.971658,-9.055129,-5.491468],[-5.084062,-3.225953,-8.806317,8.913013,7.505674],[-1.030960,-2.186247,-2.323025,-9.880573,4.881554],[7.401501,0.609370,5.669947,-4.119544,6.082873],[-3.982950,-9.946066,-1.330259,9.083357,-7.055755],[3.072131,4.297774,-6.053570,1.317745,-3.943893]]], dtype = "float32")#candidate|10752|(15, 15, 5)|const|float32
var_10753 = relay.var("var_10753", dtype = "float32", shape = (15, 15, 5))#candidate|10753|(15, 15, 5)|var|float32
bop_10754 = relay.less_equal(const_10752.astype('bool'), relay.reshape(var_10753.astype('bool'), relay.shape_of(const_10752))) # shape=(15, 15, 5)
func_6648_call = mod.get_global_var('func_6648')
func_6651_call = mutated_mod.get_global_var('func_6651')
var_10764 = relay.var("var_10764", dtype = "uint8", shape = (845,))#candidate|10764|(845,)|var|uint8
call_10763 = func_6648_call(relay.reshape(var_10764.astype('uint8'), [13, 13, 5]), relay.reshape(var_10764.astype('uint8'), [13, 13, 5]), )
call_10765 = func_6648_call(relay.reshape(var_10764.astype('uint8'), [13, 13, 5]), relay.reshape(var_10764.astype('uint8'), [13, 13, 5]), )
output = relay.Tuple([bop_10754,call_10763,var_10764,])
output2 = relay.Tuple([bop_10754,call_10765,var_10764,])
func_10770 = relay.Function([var_10753,var_10764,], output)
mod['func_10770'] = func_10770
mod = relay.transform.InferType()(mod)
var_10771 = relay.var("var_10771", dtype = "float32", shape = (15, 15, 5))#candidate|10771|(15, 15, 5)|var|float32
var_10772 = relay.var("var_10772", dtype = "uint8", shape = (845,))#candidate|10772|(845,)|var|uint8
output = func_10770(var_10771,var_10772,)
func_10773 = relay.Function([var_10771,var_10772,], output)
mutated_mod['func_10773'] = func_10773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11612 = relay.var("var_11612", dtype = "int64", shape = (7, 3, 10))#candidate|11612|(7, 3, 10)|var|int64
const_11613 = relay.const([[[-2,-7,8,3,3,-1,-7,-9,4,8],[6,2,3,7,-8,10,-1,1,7,3],[5,2,-10,6,3,-7,5,8,-5,2]],[[8,-1,6,-10,-7,4,-8,-5,-9,4],[5,2,3,8,5,-1,-1,-1,6,2],[8,-7,-6,7,-3,7,4,-8,9,7]],[[5,6,2,-4,3,-4,-4,7,3,-5],[-7,-4,2,-2,-7,5,-6,-9,10,-7],[-1,-4,-1,-5,5,3,-2,4,1,5]],[[4,-2,-2,-9,6,7,-8,-2,-2,-7],[9,-10,1,5,10,9,-3,-4,-4,9],[-2,7,7,-1,8,-7,-2,-8,-9,-2]],[[-6,-2,-4,3,-3,1,-9,5,10,7],[8,5,-1,10,7,-8,4,9,10,7],[-4,-9,7,-1,4,4,-3,9,-1,1]],[[-2,10,-3,-4,-1,-8,-9,10,-3,-2],[-8,-8,-5,-5,7,-2,-9,4,3,6],[-9,1,-9,6,1,-8,6,1,4,-6]],[[2,-9,2,2,1,1,2,10,2,-5],[5,5,-1,1,-2,8,8,-6,3,8],[-8,6,3,-1,-3,10,-10,-7,1,6]]], dtype = "int64")#candidate|11613|(7, 3, 10)|const|int64
bop_11614 = relay.multiply(var_11612.astype('int64'), relay.reshape(const_11613.astype('int64'), relay.shape_of(var_11612))) # shape=(7, 3, 10)
func_3712_call = mod.get_global_var('func_3712')
func_3715_call = mutated_mod.get_global_var('func_3715')
const_11619 = relay.const([-2,5,9,3,3,-6,4,-7,-7,-9,-10,-9,-3,2,1,6,6,-9,-9,7,-10,4,9,5,10,10,2,8,-4,5,10,7,3,3,2,-4,2,-8,-1,-6,-8,-10,-6,6,-3,-3,2,-8,-6,5,-2,-2,-8,3,3,10,-6,4,1,9,-10,-6,2,5,7,-8,10,-3,-10,6,6,5,-6,-3,8,2,4,-8,4,-6,3,9,-4,10,9,-5,3,8,-10,10,-10,-4,10,3,-5,-6,3,-2,8,-10,9,3,-9,5,1,-5,-10,9,1,6,1,4,7,-4,7,3,1,-2,-8,-10,-4,4,-6,-4,3,2,-3,-9,-2,7,-6,5,-10,-2,6,9,-8,4,4,-10,-9,2,-9,-2,5,-8,2,10,2,2,3,8,4,5,1,6,8,-1,10,-5,7,-6,1,-10,-8,-3,-4,2,2,-6,3,-2,-2,7,10,-5,-7,5,6,3,10,9,-6,1,-10,-2,1,-3,10,-4,-2,-7,-9,7,10,3,5,-3,3,-10,3,6,-5,-6,7,-5,-9,7,7,-5,-5,6,-10,-4,2,-8,5,6,2,-7,4,-7,-6,-10,10,9,-8,9,3,3,-7,-8,-4,4,-8,5,5,-4,-8,-6,-4,8,-10,-1,2,8,-6,2,1,-6,-9,3,-4,-6,5,-5,-7,-2,9,9,7,1,-4,-3,-2,-7,1,6,-1,10,-6,-7,-7,1,-2,7,10,5,4,-10,-9,9,9,5,-10,5,9,1,1,-2,-4,4,-1,-9,-7,1,-8,-5,-6,8,-5,-3,5,2,10,8,-5,10,-9,10,2,1,-2,8,9,5,8,-10,-4,8,-6,-7,-7,8,-8,6,-10,9,-5,9,2,8,1,-1,-10,-10,5,7,6,2,4,5,4,7,10,1,-9,2,-7,-9,-3,-3,-6,-2,6,8,9,5,7,3,5,1,-3,7,9,-6,5,-3,-10,3,9,5,5,3,9,9,-2,-1,5,-4,6,-9,7,-1,-6,-2,-8,-5,8,-2,6,2,-4,-2,3,-5,5,-7,5,1,4,8,-2,-2,-5,-7,10,8,4,-4,7,5,3,-6,2,2,3,-6,5,3,-6,10,10,1,9,9,7,9,6,10,5,3,-2,-10,1,-4,4,5,1,7,3,7,2,10,1,7,10,3,1,8,7,-8,-7,6,-9,9,1,-2,9,-2,-1,-8,8,-2,5,8,-3,4,9,7,4,-2,1,-7,-7,3,-7,7,-10,-2,-1,8,9,2,-5,8,7,4,5,8,-2,9,2,5,-7,9,-9,1,-1,6,4,-5,7,8,-3,-3,7,-4,-8,-3,6,-4,-10,-1,-10,9,4,-4,3,10,-8,1,-6,4,-2,10,8,-10,-9,-1,1,-2,4,-3,-7,3,9,1,-8,9,2,7,3,10,2,10,3,-8,9,-6,-8,2,-2,3,9,-10,-3,-3,-6,-10,-6,2,4,8,3,10,4,9,8,-8,5,-6,-6,-7,-3,1,-9,1,-6,7,-5,-1,10,5,-5,2,10,10,-8,10,-6,-3,5,8,-6,-1,1,-10,-5,6,-9,-9,10,-6,-8,10,-7,-9,-8,6,-2,-5,-10,-2,3,4,-10,-2,2,-7,-4,6,-1,-6,2,2,-8,4,3,2,8,9,-8,-6,-9,-3,-3,4,4,4,-3,-1,-5,-8,3,-6,5,8,-6,-4,-9,-6,7,-6,-4,-8,-9,6,4,-4,-6,-9,-6,4,9,-7,-6,1,-4,6,-7,3,-3,-2,4,5,8,1,-9,8,-5,-8,-7,-6,-6,-1,7,3,-6,9,10,-2,-8,-4,7,6,-8,-5,-3,-8,-3,4,-4,2,-1,-1,-4,1,5,-8,-1,4,-1,4,10,-5,-2,3,-5,7,-5,-8,1,-9,-9,9,-3,7,4,8,-5,6,-9,5,-5,1,-3,9,10,-2,-6,7,8,3,-7,-7,-1,10,-4,-7,7,9,9,-6,5,-10,-9,-2,2,8,-4,10,9,-7,-4,2,-2,-3,-10,-2,7,7,8,4,5,-9,-8,-6,10,-10,8,8,-4,1,-2,-10,-2,8,8,-9,-5,-4,7,7,-3,-4,10,9,4,7,-2,6,6,3,3,9,-10,10,2,7,-6,-4,-2,10,6,10,6,1,8,-6,-6,3,-7,-3,2,-4,-8,5,-5,4,2,-9,-1,-10,4,2,-2,-4,-7,2,7,-8,-6,7,-7,3,6,-8,2,-6,8,6,4,-3,-9,10,8,-2,-10,8,-9,-7,-4,-10,6,3,-5,-6,-9,9,1,-3,-7,5,-4,-5,5,8,10,6,-5,2,7,8,-4,-5,6,5,-5,-1,7,-1,-1,-2,6,-8,8,-8,5,-5], dtype = "int64")#candidate|11619|(900,)|const|int64
call_11618 = func_3712_call(relay.reshape(const_11619.astype('int64'), [6, 10, 15]))
call_11620 = func_3712_call(relay.reshape(const_11619.astype('int64'), [6, 10, 15]))
func_900_call = mod.get_global_var('func_900')
func_906_call = mutated_mod.get_global_var('func_906')
var_11632 = relay.var("var_11632", dtype = "float32", shape = (27, 18))#candidate|11632|(27, 18)|var|float32
var_11633 = relay.var("var_11633", dtype = "int64", shape = (660, 1))#candidate|11633|(660, 1)|var|int64
call_11631 = relay.TupleGetItem(func_900_call(relay.reshape(var_11632.astype('float32'), [6, 9, 9]), relay.reshape(var_11632.astype('float32'), [6, 9, 9]), relay.reshape(var_11632.astype('float32'), [6, 9, 9]), relay.reshape(var_11633.astype('int64'), [660,]), ), 2)
call_11634 = relay.TupleGetItem(func_906_call(relay.reshape(var_11632.astype('float32'), [6, 9, 9]), relay.reshape(var_11632.astype('float32'), [6, 9, 9]), relay.reshape(var_11632.astype('float32'), [6, 9, 9]), relay.reshape(var_11633.astype('int64'), [660,]), ), 2)
func_3395_call = mod.get_global_var('func_3395')
func_3399_call = mutated_mod.get_global_var('func_3399')
call_11641 = func_3395_call(relay.reshape(var_11633.astype('uint8'), [12, 11, 5]), relay.reshape(var_11633.astype('uint8'), [12, 11, 5]), )
call_11642 = func_3395_call(relay.reshape(var_11633.astype('uint8'), [12, 11, 5]), relay.reshape(var_11633.astype('uint8'), [12, 11, 5]), )
func_3985_call = mod.get_global_var('func_3985')
func_3988_call = mutated_mod.get_global_var('func_3988')
const_11644 = relay.const([-8.588603,4.000858,-0.936165,-5.999449,-5.549188,-2.183117,6.947979,-7.902313,-9.335548,-3.951066,0.766072,7.139179,-0.994548,6.435323,7.576637,1.290578,-5.680089,-0.362262,-3.621583,9.319453,-7.956255,3.446126,8.324534,6.020503,3.707264,5.549618,3.246021,3.637809,-1.353956,5.044011,8.570506,3.406907,-8.265188,-1.208176,-2.567621,4.692975,-4.068732,0.469325,-4.862659,1.045863,-0.586956,-6.042616,7.600230,-1.708122,-1.786577], dtype = "float64")#candidate|11644|(45,)|const|float64
call_11643 = relay.TupleGetItem(func_3985_call(relay.reshape(const_11644.astype('float64'), [3, 15, 1])), 0)
call_11645 = relay.TupleGetItem(func_3988_call(relay.reshape(const_11644.astype('float64'), [3, 15, 1])), 0)
func_6990_call = mod.get_global_var('func_6990')
func_6992_call = mutated_mod.get_global_var('func_6992')
var_11659 = relay.var("var_11659", dtype = "float32", shape = (1792, 2))#candidate|11659|(1792, 2)|var|float32
call_11658 = relay.TupleGetItem(func_6990_call(relay.reshape(var_11659.astype('float32'), [14, 16, 16])), 0)
call_11660 = relay.TupleGetItem(func_6992_call(relay.reshape(var_11659.astype('float32'), [14, 16, 16])), 0)
func_8458_call = mod.get_global_var('func_8458')
func_8460_call = mutated_mod.get_global_var('func_8460')
var_11680 = relay.var("var_11680", dtype = "float64", shape = (55,))#candidate|11680|(55,)|var|float64
call_11679 = func_8458_call(relay.reshape(var_11680.astype('float64'), [5, 1, 11]))
call_11681 = func_8458_call(relay.reshape(var_11680.astype('float64'), [5, 1, 11]))
output = relay.Tuple([bop_11614,call_11618,const_11619,call_11631,var_11632,var_11633,call_11641,call_11643,const_11644,call_11658,var_11659,call_11679,var_11680,])
output2 = relay.Tuple([bop_11614,call_11620,const_11619,call_11634,var_11632,var_11633,call_11642,call_11645,const_11644,call_11660,var_11659,call_11681,var_11680,])
func_11685 = relay.Function([var_11612,var_11632,var_11633,var_11659,var_11680,], output)
mod['func_11685'] = func_11685
mod = relay.transform.InferType()(mod)
mutated_mod['func_11685'] = func_11685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11685_call = mutated_mod.get_global_var('func_11685')
var_11687 = relay.var("var_11687", dtype = "int64", shape = (7, 3, 10))#candidate|11687|(7, 3, 10)|var|int64
var_11688 = relay.var("var_11688", dtype = "float32", shape = (27, 18))#candidate|11688|(27, 18)|var|float32
var_11689 = relay.var("var_11689", dtype = "int64", shape = (660, 1))#candidate|11689|(660, 1)|var|int64
var_11690 = relay.var("var_11690", dtype = "float32", shape = (1792, 2))#candidate|11690|(1792, 2)|var|float32
var_11691 = relay.var("var_11691", dtype = "float64", shape = (55,))#candidate|11691|(55,)|var|float64
call_11686 = func_11685_call(var_11687,var_11688,var_11689,var_11690,var_11691,)
output = call_11686
func_11692 = relay.Function([var_11687,var_11688,var_11689,var_11690,var_11691,], output)
mutated_mod['func_11692'] = func_11692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12045 = relay.var("var_12045", dtype = "float32", shape = (15, 3, 10))#candidate|12045|(15, 3, 10)|var|float32
uop_12046 = relay.acosh(var_12045.astype('float32')) # shape=(15, 3, 10)
func_7907_call = mod.get_global_var('func_7907')
func_7910_call = mutated_mod.get_global_var('func_7910')
const_12052 = relay.const([-9,1,8,-9,-2,-8,6,2,-7,4,-9,3,-7,8,7,-9,6,10,-2,8,3,10,9,-7,5,4,-8,-3,9,-9,7,-3,-7,-8,9,2,-4,-5,-6,-1,-4,7,2,-7,1,5,1,10,10,-7,-6,5,1,4,2,10,-10,6,-7,3,8,-8,8,8,-8,7,4,-5,-1,4,-4,-7,-1,8,-7,-8,1,-5,5,-4,-8,8,-4,7,-4,9,5,-4,-1,4,3,5,7,-10,-5,7,7,7,10,7,5,2,1,6,-8,2,-2,7,8,4,-4,-9,6,-4,-10,-2,4,4,-10,7,-1,-1,-5,2,8,7,5,-6,-1,-1,9,5,5,-9,2,-5,5,5,6,3,1,7,5,-1,2,-7,-3,-6,-4,5,1,10,-6,7,-2,8,-10,1,10,2,-2,-5,-3,-5,-6,-4,10,4,-9,-10,3,4,6,-1,-7,-10,-1,-6,-6,3,1,10,1,9,-6,3,-8,-5,4,1,-8,-2,8,5,-1,7,-6,-5,-2,9,5,9,10,-10,-9,-6,3,-8,-8,-4,-9,-2,9,-2,-2,-9,4,2,2,-8,4,10,2,8,-8,6,5,-2,5,-5,4,8,2,2,4,8,4,7,5,5,-10,-1,-10,9,-9,-4,8,1,-4,7,4,5,-3,-3,8,2,-10,-2,7,6,6,9,2,4,-6,3,6,10,-10,8,3,-7,4,-1,-3,-9,7,-4,9,-6,-1,-4,6,-6,7,6,5,-10,5,2,-8,-8,6,-5,-10,-9,-9,7,7,4,9,-5,-5,3,-8,-9,-3,-3,-7,-5,1,-7,7,8,9,-1,5,-1,10,-10,9,7,6,-3,10,1,10,-4,4,-2,-5,1,8,10,-8,-8,-2,8,-5,-3,7,-8,4,5,-3,4,1,-8,9,-8,-10,3,1,10,-2,-3,-6,7,1,1,2,-4,1,5,1,5,10,-3,-1,7,5,4,10,-3,-7,5,-2,-4,2,-2,-3,-2,7,1,8,1,9,5,9,10,-4,5,5,-10,-9,10,1,2,-7,6,-5,7,4,-3,1,7,2,3,1,6,6,-1,-6,-5,-8,-8,-9,8,8,6,-7,-5,5,8,-3,-6,-10,8,-10,1,-5,10,6,9,1,3,6,-9,-8,-7,-1,2,7,-7,10,-4,7,-10,2,-4,3,-1,7,-10,-6,6,9,9,5,-3,-4,-3,-1,-1,-10,-5,6,4,5,8,2,-9,1,8,-3,-2,-6,-7,8,9,7,-5,-2,-4,-4,10,-6,8,8,5,7,-10,4,7,5,2,-1,-3,-5,-10,9,6,1,-5,1,4,-7,8,-10,-1,-2,7,9,6,10,2,8,-7,3,-9,9,-10,-8,6,-5,2,-2,-3,-2,-5,-5,-2,-7,3,10,-4,-5,-5,-5,10,-10,9,3,2,-9,8,6,-8,-8,10,-2,6,9,2,-2,3,-7,3,4,-7,-4,8,4,2,-6,-9,7,6,7,-9,10,-1,6,-9,3,5,1,-9,1,7,4,-6,1,6,-9,7,8,-6,-3,-5,1,4,-5,-4,-4,4,7,8,1,6,-10,-1,10,-5,4,-7,-1,-6,-6,5,-3,6,8,-10,10,2,8,10,-3,-10,4,2,10,2,-10,4,7,-5,-7,-5,-10,7,-10,-7,4,10,7,-3,-9,3,-3,3,10,-6,-3,-2,-8,3,9,-1], dtype = "int16")#candidate|12052|(650,)|const|int16
call_12051 = relay.TupleGetItem(func_7907_call(relay.reshape(const_12052.astype('int16'), [10, 13, 5]), relay.reshape(const_12052.astype('int16'), [10, 13, 5]), ), 0)
call_12053 = relay.TupleGetItem(func_7910_call(relay.reshape(const_12052.astype('int16'), [10, 13, 5]), relay.reshape(const_12052.astype('int16'), [10, 13, 5]), ), 0)
uop_12064 = relay.sigmoid(uop_12046.astype('float32')) # shape=(15, 3, 10)
uop_12083 = relay.asinh(uop_12064.astype('float64')) # shape=(15, 3, 10)
func_1241_call = mod.get_global_var('func_1241')
func_1245_call = mutated_mod.get_global_var('func_1245')
var_12087 = relay.var("var_12087", dtype = "float32", shape = (48,))#candidate|12087|(48,)|var|float32
var_12088 = relay.var("var_12088", dtype = "int64", shape = (660,))#candidate|12088|(660,)|var|int64
call_12086 = relay.TupleGetItem(func_1241_call(relay.reshape(var_12087.astype('float32'), [3, 8, 2]), relay.reshape(var_12088.astype('int64'), [660,]), ), 0)
call_12089 = relay.TupleGetItem(func_1245_call(relay.reshape(var_12087.astype('float32'), [3, 8, 2]), relay.reshape(var_12088.astype('int64'), [660,]), ), 0)
func_5665_call = mod.get_global_var('func_5665')
func_5669_call = mutated_mod.get_global_var('func_5669')
const_12098 = relay.const([4,-10,2,9,4,-3,-4,-7,-9,7,7,7,-9,3,7,3,7,4,-7,9,3,-2,-6,-9,9,8,-7,2,-4,-2,-4,2,-10,1,9,7,-9,-10,2,-2,5,-7,-7,-8,3,-3,7,-8,-2,-2,-6,-3,-10,2,2,4,-3,10,1,2,10,-3,-9,-1,10,9,4,1,-7,-7,6,-8,4,1,-6,9,8,-2,-3,-5,-8,-8,-8,-8,3,-6,9,-2,-10,6,7,3,-9,10,9,4,-4,2,3,-9,-7,9,-6,9,-3,-5,2,6,4,3,5,-1,-4,-1,2,5,-4,3,5,-8,-9,-1,-1,-2,4,8,-7,-6,-1,7,-8,1,7,10,8,-2,-10,-7,1,6,7,5,-3,4,-10,7,5,10,6,4,9,-2,-1,10,10,-7,7,2,5,-4,-9,4,1,-4,3,10,7,1,-10,-8,-4,-9,7,3,-9,6,9,10,2,-6,5,9,7,8,10,2,-2,-8,-2,10,9,-9,-6,8,-4,-6,-2,9,-4,9,-6,1,1,9,-10,5,5,-10,3,-10,4,-6,-1,-8,-5,-3,7,8,-1,3,6,-5,-4,-5,-4,-5,-10,-7,-5,10,-1,10,-4,7,-5,-9,10,5,8,2,4,-2,-8,9,-1,3,9,1,-2,-1,1,-10,-3,-7,-5,-4,-8,-5,-3,-10,-3,-6,6,6,-8,-5,-6,-9,1,3,-7,-7,1,-1,-6,1,-4,2,6,8,-6,10,7,2,-7,6,-1,-9,4,-7,3,-10,6,-6,9,-6,-6,-6,8,-3,-4,-9,1,-7,7,5,-3,6,-6,-10,6,-1,-4,5,6,5,4,-5,1,10,-8,-6,2,10,4,-5,8,5,5,-2,-8,3,2,-9,-1,-8,3,-10,8,3,10,4,-5,9,-9,-1,7,-10,-5,1,7,-7,-5,-5,8,7,-7,-7,-2,-2,-7,-7,-10,-5,-6,-1,6,-3,-6,6,-10,2,-5,-2,5,-9,9,-7,5,-4,-6,3,-2,5,-9,-9,-3,6,10,-5,2,-7,10,-9,-6,5,7,-6,-6,-6,1,4,8,1,10,5,2,2,-8,8,-6,-7,-10,-2,5,3,-3,7,-9,-1,4,8,8,7,-4,9,7,3,-9,8,-2,10,-8,-7,5,3,-4,5,-4,7,9,-8,-1,8,5,-6,6,2,-2,2,-9,-7,7,-4,-6,9,-6,-6,7,9,-9,-8,-10,1,-9,7,8,-10,6,6,-6,1,-3,9,10,-1,-2,6,-7,-1,-1,-6,-4,6,4,-6,-8,-2,-4,10,-10,3,-9,-5,-7,5,-7,-7,-1,3,-4,6,3,-2,1,-1,4,-7,2,-9,8,-6,-9,8,-7,-5,-7,2,1,7,9,-4,-1,-4,-3,-3,-1,10,6,-9,-8,-4,7,6,-2,-1,2,-4,8,-7,4,-6,3,-4,3,-1,-10,-7,-3,-7,6,7,-5,3,10,-8,2,-7,9,3,7,-4,-1,7,4,10,-4,-9,8,4,-2,2,6,8,-3,9,6,-8,-4,2,1,-1,-1,-3,2,8,-2,7,-2,-3,-7,6,6,2,-10,-10,-10,-5,-3,1,10,9,-2,7,-1,-8,3,-4,9,-10,2,-10,-3,3,-7,-1,-4,6,7,9,-6,-8,2,-9,-8,9,-1,2,8,-7,-10,2,9,1,3,-7,6,1,9,-8,-9,7,-8,3,4,10,10,-9,10,-6,9,-6,-1,2,7,7,7,-5,2,-2,7,4,4,8,-5,-10,10,-9,1,2,-1,5,2,-4,7,5,-8,3,2,9,-8,2,-3,10,2,3,1,-1,7,9,1,-9,-3,-2,-6,2,8,-1,-5,-6,-2,-10,8,-6,-7,10,-7,7,-3,-4,-8,2,-2,-8,5,4,4,2,7,8,3,4,-6,9,-1,-8,-1,6,5,-10,7,-10,10,-4,8,-3,-7,10,-9,5,-5,-9,-3,-10,9,9,-4,9,-10,10,-3,8,9,5,8,6,-3,10,9,6,-1,-6,-5,10,-5,3,3,-10,-9,10,9,3,-2,9,4,-3,-2,2,1,-5,2,8,9,-2,7,8,-10,7,3,-5,-3,1,-7,-5,5,-7,-7,-4,5,5,-8,5,3,9,-7,-2,-5,8,-6,-10,-4,-7,4,-5,7,-10,-4,-4,8,-4,10,-7,-9,-6,-7,-5,7,-2,-5,-1,-9,-9,7,-2,7,-2,-4,-1,-4,-7,5,-4,3,-3,-2,-1,5,-8,3,7,-7,-6,-8,3,6,-2,1,-3,-9,5,1,4,7,-10,3,-2,-6,1,-7,-5,2,4,-1,-2,-5,6,6,-4,4,-5,3,7,-6,-3,-1,-6,6,-10,10,1,-10,3,-7,-1,3,7,-3,-7,-1,6,1,-6,-3,-5,-8,-10,1,4,-2,-8,1,5,10,-7,-2,-2,4,-1,-4,-1,3,9,-7,-4,8,-8,-9,-4,-2,-9,-3,-9,-1,-5,-5,7,10,-1,-1,-7,-9,9,-5,7,6,-4,-1,8,-3,8,1,-7,-3,1,-5,4,-3,-4,-10,8,8,-6,6,2,-9,9,-8,-3,5,7,-2,4,8,6,8,3,-9,-9,-3,4,3,-1,10,-4,-8,4,5,-5,-5,-8,-6,-3,8,-10,2,2,-9,-8,5,-3,4,2,5,-10,-10,-5,9,-3,-1,9,-9,1,-2,-9,1,-1,-9,-4,-2,-7,3,9,2,-1,7,6,-1,-5,4,-1,8,-9,4,-1,8,-9,10,4,-1,2,-5,3,-5,-8,-4,5,-10,9,8,8,-6,6,6,7,-5,5,-9,-7,-9,-5,-5,-7,7,-6,-5,-10,3,8,-7,7,6,-5,10,-1,-8,-6,-9,7,10,-10,10,-6,7,4,-1,-10,-1,-1,-7,-4,9,8,-2,3,-8,6,2,-3,-8,-4,8,-3,9,1,-6,-2,2,4,-7,-7,9,-5,5,-3,6,9,3,4,6,9,10,-9,-3,8,10,-5,7,4,-1,-3,4,3,-4,9,-2,-1,10,-5,-3,-1,8,-3,-9,7,2,10,-3,-3,-10,6,1,-4,-9,1,4,4,1,7,4,1,5,4,-4,5,-3,8,10,4,3,-1,1,-8,-3,-10,8,-5,-3,-1,9,-1,-6,-6,-10,-6,-8,-9,2,-9,10,-4,-3,3,1,10,-7,10,-9,8,7,-2,10,-3,-9,-9,-4,-9,-3,2,4,4,3,3,-2,-1,6,3,-5,8,9,-2,10,9,-2,9,-2,-9,9,-9,4,10,-1,4,1,9,9,4,-1,-3,5,2,7,6,-3,6,3,5,-1,2,-3,4,10,-9,3,5,8,-7,9,10,6,-7,-4,-5,-3,6,5,8,-8,-8,1,-8,3,3,-9,-3,-8,6,-5,6,-7,6,10,7,10,-8,-1,1,2,-5,4,-7,-8,-6,-3,3,-3,-2,-2,3,-6,-5,5,-2,-10,9,-5,-8,-9,-8,-7,2,7,-4,-7,-2,-8,-2,5,-2,-3,8,-7,-2,1,1,-8,-9,-9,5,10,10,6,-2,8,-3,7,8,8,-10,-8,8,-4,-1,9,-10], dtype = "uint16")#candidate|12098|(1344,)|const|uint16
call_12097 = func_5665_call(relay.reshape(const_12098.astype('uint16'), [7, 12, 16]), relay.reshape(const_12098.astype('uint16'), [7, 12, 16]), )
call_12099 = func_5665_call(relay.reshape(const_12098.astype('uint16'), [7, 12, 16]), relay.reshape(const_12098.astype('uint16'), [7, 12, 16]), )
bop_12103 = relay.bitwise_or(uop_12083.astype('int16'), relay.reshape(var_12045.astype('int16'), relay.shape_of(uop_12083))) # shape=(15, 3, 10)
output = relay.Tuple([call_12051,const_12052,call_12086,var_12087,var_12088,call_12097,const_12098,bop_12103,])
output2 = relay.Tuple([call_12053,const_12052,call_12089,var_12087,var_12088,call_12099,const_12098,bop_12103,])
func_12125 = relay.Function([var_12045,var_12087,var_12088,], output)
mod['func_12125'] = func_12125
mod = relay.transform.InferType()(mod)
var_12126 = relay.var("var_12126", dtype = "float32", shape = (15, 3, 10))#candidate|12126|(15, 3, 10)|var|float32
var_12127 = relay.var("var_12127", dtype = "float32", shape = (48,))#candidate|12127|(48,)|var|float32
var_12128 = relay.var("var_12128", dtype = "int64", shape = (660,))#candidate|12128|(660,)|var|int64
output = func_12125(var_12126,var_12127,var_12128,)
func_12129 = relay.Function([var_12126,var_12127,var_12128,], output)
mutated_mod['func_12129'] = func_12129
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12359 = relay.const([[[-3.611182,-1.703956,4.363377,-1.688931,-7.430379],[7.896000,4.348260,-9.940023,-9.775223,9.682390],[3.874309,4.588148,7.501069,-1.532490,2.684267],[-2.062721,7.074945,9.215673,3.695797,-3.196329],[-3.327719,-3.989478,8.872244,-7.272208,-1.871536],[-1.575995,5.057992,-5.674458,-5.763596,0.760770],[9.868142,-3.223018,-6.678267,6.046154,7.691539],[3.034268,0.525062,-1.942915,-3.803599,-0.493997],[-3.731002,-2.573479,-5.693202,-3.609400,-2.702916],[-8.732497,-3.640194,-0.553509,5.356115,-1.475099],[9.114834,-5.581308,9.872857,0.161731,4.670753]],[[3.673969,-7.090153,4.759244,-1.501695,-5.746401],[-5.730849,-7.222039,8.902549,1.325662,-7.978621],[6.776978,-6.795818,-1.098568,-7.372977,0.823963],[-8.339184,8.660612,9.361879,4.029085,0.854505],[-3.377991,3.430254,-0.158557,2.143156,5.688641],[7.958119,8.766527,-6.052991,-7.778089,-2.760246],[7.577032,-3.583961,6.841229,0.243821,8.710138],[-9.546094,-5.994411,5.176189,-5.041695,0.915546],[-8.282430,9.024023,-6.393111,-8.115511,-1.911200],[-2.115782,9.376403,6.640256,-5.356465,7.937167],[2.523052,0.239243,1.574084,-3.112508,9.300614]],[[3.309682,-0.743728,-4.233106,0.925942,9.389630],[4.007221,1.793019,-8.816546,7.000912,8.725144],[5.171266,8.247683,3.308959,1.167905,-2.237010],[4.987264,-9.481328,-8.794240,-4.201713,4.708183],[-3.671974,4.958381,8.414274,-1.438837,3.265438],[-8.629506,-8.938356,6.397668,-1.145757,4.717266],[-7.236865,9.168895,-5.823937,3.543502,7.189649],[6.768600,7.447041,8.286502,-6.213584,9.703901],[3.944806,-8.374978,1.339407,9.979659,-0.002467],[9.101402,3.413859,-6.695405,-4.705179,-0.083122],[-7.141394,2.277707,5.601849,3.057411,-3.595958]],[[3.857260,-1.850125,2.667433,3.677410,9.717575],[9.782951,-9.719884,7.903266,7.182923,-4.396731],[4.661090,6.661386,-3.757502,1.723368,-0.846823],[6.325230,-5.069832,-1.771053,5.035774,-7.390284],[7.845679,2.790189,3.606669,-0.571452,1.977060],[-9.922700,-1.166002,5.010579,-4.794282,-7.208160],[0.286527,-4.574842,4.977926,6.957922,3.778718],[4.868821,-0.666285,-3.954860,-3.137057,-7.913878],[-3.526920,-8.206901,-5.931625,0.525475,3.852701],[8.073955,9.402507,-4.735230,-3.944711,-3.077641],[9.977616,2.585337,-4.080343,1.789116,-2.829485]],[[-6.748684,0.454519,1.226645,4.731807,-1.305042],[-2.684100,0.956529,-3.498747,-6.376231,4.978274],[-1.817082,3.056155,-2.993995,5.729502,-2.049530],[3.551808,-5.457317,1.955166,-1.475199,8.663978],[2.433371,2.298628,0.449632,-3.431125,-4.880166],[-7.357265,6.356084,-7.368609,-8.314279,5.445834],[-6.050022,8.193068,4.328643,-4.090408,5.604762],[1.834611,-0.748968,2.920414,-4.063701,7.112692],[-3.977312,5.936240,7.679554,2.711958,0.867575],[-8.105349,-4.728969,6.098561,7.829642,6.658071],[1.686337,4.022623,6.652287,3.787192,4.468111]],[[1.929589,2.572195,7.526200,-8.515131,-2.304841],[1.826925,7.738894,-6.371613,-8.377382,3.670492],[1.092470,-3.537196,-6.663169,9.261850,7.714624],[-3.382040,-4.668821,7.671008,5.411684,0.246567],[5.844708,-1.719158,-4.146795,4.987150,-9.851486],[-1.603923,4.965697,5.577947,4.255360,-4.966708],[2.525099,7.567008,-5.481134,9.757328,-1.363878],[3.708939,0.230901,9.946741,-0.189910,-1.459944],[1.591239,-2.221108,7.376647,-0.222312,3.049614],[7.954753,7.052092,-4.827012,2.079623,2.174006],[-2.562683,-8.685034,2.017423,8.751199,-6.215848]],[[-2.110265,5.512628,7.703045,-9.371864,8.015218],[-3.681279,-7.876618,9.982854,8.345185,-2.763728],[-4.910252,6.919289,3.825663,-7.058601,-2.383656],[-4.231496,-4.791701,-5.112361,4.519302,7.220139],[-5.292185,5.074596,-7.004048,5.941528,-4.907581],[-1.566732,6.571542,7.474311,-3.710001,3.821816],[-7.873949,-0.856097,9.491658,-1.816935,1.099689],[8.372192,9.589284,2.865628,7.665255,8.475166],[-0.991255,5.413266,2.244906,-8.942435,-2.455185],[4.622361,-5.139060,-9.449527,-0.389845,-7.780205],[-3.058482,4.131467,-5.949019,6.769817,2.528489]],[[0.276847,7.250807,6.339686,4.536440,-6.970874],[-1.346968,0.323268,0.467494,-0.972559,-5.827448],[-5.850429,7.156160,4.706030,-9.111749,1.629744],[4.536971,2.411116,1.022789,-7.571699,3.132278],[9.680093,-7.727262,-2.214080,-4.395622,6.577137],[1.831592,3.511545,5.740972,-3.944404,-9.473594],[5.357894,5.781141,-8.091026,-4.199501,7.904673],[4.843955,5.851842,5.150464,-7.659406,-7.169017],[0.665444,0.261802,-8.050238,4.184234,-8.796372],[2.993971,7.058642,-2.506658,6.119203,-6.780000],[-4.657673,9.978853,8.445936,3.415922,-2.173302]],[[2.970218,2.877733,4.619823,5.684235,8.710300],[-0.388773,-2.551007,5.116031,8.908442,1.197679],[8.582285,8.034098,6.971316,-0.054988,-1.522776],[-3.131438,-8.682051,-3.766712,-9.852201,-4.270532],[6.574357,-6.035022,-5.180103,6.812297,-9.826522],[-2.973993,-7.838020,9.538105,-4.865461,4.381428],[-5.425468,9.510876,0.840467,-4.794034,7.271770],[6.665747,3.173470,-5.794924,5.032584,0.595668],[-7.796393,-2.522058,-1.828198,-4.708859,3.903319],[7.819713,-8.257363,-7.539778,5.725110,9.093792],[2.162440,1.721424,-4.038190,-3.848951,1.719952]]], dtype = "float32")#candidate|12359|(9, 11, 5)|const|float32
uop_12360 = relay.cosh(const_12359.astype('float32')) # shape=(9, 11, 5)
func_5744_call = mod.get_global_var('func_5744')
func_5747_call = mutated_mod.get_global_var('func_5747')
var_12364 = relay.var("var_12364", dtype = "float32", shape = (1260,))#candidate|12364|(1260,)|var|float32
call_12363 = relay.TupleGetItem(func_5744_call(relay.reshape(var_12364.astype('float32'), [15, 6, 14])), 0)
call_12365 = relay.TupleGetItem(func_5747_call(relay.reshape(var_12364.astype('float32'), [15, 6, 14])), 0)
bop_12368 = relay.bitwise_xor(call_12363.astype('uint8'), relay.reshape(var_12364.astype('uint8'), relay.shape_of(call_12363))) # shape=(15, 6, 14)
bop_12371 = relay.bitwise_xor(call_12365.astype('uint8'), relay.reshape(var_12364.astype('uint8'), relay.shape_of(call_12365))) # shape=(15, 6, 14)
func_12125_call = mod.get_global_var('func_12125')
func_12129_call = mutated_mod.get_global_var('func_12129')
var_12373 = relay.var("var_12373", dtype = "float32", shape = (10, 45))#candidate|12373|(10, 45)|var|float32
var_12374 = relay.var("var_12374", dtype = "float32", shape = (1, 48))#candidate|12374|(1, 48)|var|float32
var_12375 = relay.var("var_12375", dtype = "int64", shape = (660,))#candidate|12375|(660,)|var|int64
call_12372 = relay.TupleGetItem(func_12125_call(relay.reshape(var_12373.astype('float32'), [15, 3, 10]), relay.reshape(var_12374.astype('float32'), [48,]), relay.reshape(var_12375.astype('int64'), [660,]), ), 5)
call_12376 = relay.TupleGetItem(func_12129_call(relay.reshape(var_12373.astype('float32'), [15, 3, 10]), relay.reshape(var_12374.astype('float32'), [48,]), relay.reshape(var_12375.astype('int64'), [660,]), ), 5)
output = relay.Tuple([uop_12360,bop_12368,call_12372,var_12373,var_12374,var_12375,])
output2 = relay.Tuple([uop_12360,bop_12371,call_12376,var_12373,var_12374,var_12375,])
func_12377 = relay.Function([var_12364,var_12373,var_12374,var_12375,], output)
mod['func_12377'] = func_12377
mod = relay.transform.InferType()(mod)
mutated_mod['func_12377'] = func_12377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12377_call = mutated_mod.get_global_var('func_12377')
var_12379 = relay.var("var_12379", dtype = "float32", shape = (1260,))#candidate|12379|(1260,)|var|float32
var_12380 = relay.var("var_12380", dtype = "float32", shape = (10, 45))#candidate|12380|(10, 45)|var|float32
var_12381 = relay.var("var_12381", dtype = "float32", shape = (1, 48))#candidate|12381|(1, 48)|var|float32
var_12382 = relay.var("var_12382", dtype = "int64", shape = (660,))#candidate|12382|(660,)|var|int64
call_12378 = func_12377_call(var_12379,var_12380,var_12381,var_12382,)
output = call_12378
func_12383 = relay.Function([var_12379,var_12380,var_12381,var_12382,], output)
mutated_mod['func_12383'] = func_12383
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12388 = relay.var("var_12388", dtype = "float32", shape = ())#candidate|12388|()|var|float32
var_12389 = relay.var("var_12389", dtype = "float32", shape = (9, 5, 3))#candidate|12389|(9, 5, 3)|var|float32
bop_12390 = relay.power(var_12388.astype('float32'), var_12389.astype('float32')) # shape=(9, 5, 3)
output = relay.Tuple([bop_12390,])
output2 = relay.Tuple([bop_12390,])
func_12400 = relay.Function([var_12388,var_12389,], output)
mod['func_12400'] = func_12400
mod = relay.transform.InferType()(mod)
mutated_mod['func_12400'] = func_12400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12400_call = mutated_mod.get_global_var('func_12400')
var_12402 = relay.var("var_12402", dtype = "float32", shape = ())#candidate|12402|()|var|float32
var_12403 = relay.var("var_12403", dtype = "float32", shape = (9, 5, 3))#candidate|12403|(9, 5, 3)|var|float32
call_12401 = func_12400_call(var_12402,var_12403,)
output = call_12401
func_12404 = relay.Function([var_12402,var_12403,], output)
mutated_mod['func_12404'] = func_12404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12729 = relay.var("var_12729", dtype = "float64", shape = (7, 16, 6))#candidate|12729|(7, 16, 6)|var|float64
uop_12730 = relay.log10(var_12729.astype('float64')) # shape=(7, 16, 6)
uop_12734 = relay.sinh(var_12729.astype('float64')) # shape=(7, 16, 6)
func_8675_call = mod.get_global_var('func_8675')
func_8679_call = mutated_mod.get_global_var('func_8679')
const_12742 = relay.const([[3.197986,3.147206,-7.312602,6.838292,3.018166,-1.441070,8.514875,-0.506760,4.990249,-1.656896,-4.734756,2.317192],[8.641138,-1.501376,7.626433,6.608894,-2.015875,0.523889,-2.319215,7.179647,-5.291671,-5.763925,-6.670871,-9.450761],[4.777879,-8.890417,-9.971840,-6.877602,-1.358769,6.068545,1.319701,-0.604056,9.786072,-5.237775,-8.779727,-8.092992],[7.936484,4.963057,6.933867,5.606006,-8.931094,-6.766261,0.578280,-6.464251,9.532897,-4.397591,9.412812,5.252096]], dtype = "float32")#candidate|12742|(4, 12)|const|float32
var_12743 = relay.var("var_12743", dtype = "int64", shape = (1, 660))#candidate|12743|(1, 660)|var|int64
const_12744 = relay.const([2,7,4,-3,-7,-10,2,-6,9,-1,-9,-7,6,-6,-5,2,4,5,3,4,-9,-10,4,3,3,-6,-8,-7,-2,7,-4,3,10,-8,8,-4,10,-9,10,-8,5,-5,-7,-9,7,-6,-7,-9,-1,-10,10,-5,10,5,-5,4,8,-2,4,-6,9,2,-5,3,-7,-2,-6,7,2,-5,6,-4,1,-9,-9,-7,-9,4,-7,7,-9,1,7,-3,-4,5,-10,-4,6,5,2,-6,1,4,-9,2,-1,5,-2,8,-7,-8,1,5,7,5,-3,10,-2,-2,5,-9,6,8,-10,-6,9,-3,7,-10,-9,-4,7,-6,10,10,-1,-6,2,-7,-8,9,-8,-8,10,9,-2,-2,1,-7,-8,-8,5,6,-6,10,-9,-1,-1,1,-6,1,-7,6,2,9,-2,9,-9,-7,-9,8,5,-4,-8,-8,-7,-2,-3,-10,-4,7,6,-5,10,-9,-8,4,6,-2,2,1,-10,-4,3,-9,5,-3,3,-5,8,1,-10,-1,-4,-1,2,8,4,6,7,4,-3,-2,-5,-1,-8,-10,9,5,4,-2,9,-10,-3,2,-4,-10,5,5,-9,-6,-9,5,8,3,-7,2,-6,-9,-9,-7,-9,-9,-8,-6,-1,6,-9,-7,-3,2,-5,6,-7,8,-7,-10,-3,3,-5,10,1,5,-7,10,-3,7,-7,9,7,-1,-6,3,1,-1,-4,2,5,7,10,-1,10,-2,1,2,-3,-4,-3,6,-10,-8,-8,-2,-8,8,-8,10,4,-6,3,5,-8,-5,-8,5,-10,4,5,-4,5,-10,8,1,-4,-9,3,-5,6,4,-10,2,5,-7,-4,-3,10,1,5,-2,-1,6,-6,6,10,6,2,10,-5,-6,-8,7,-2,6,2,-6,8,6,-4,7,-6,-6,2,4,10,6,10,-6,4,2,9,-9,-4,2,-9,4,2,4,3,-1,9,-3,-1,-1,-10,-2,-5,-7,-6,-6,7,-2,9,3,3,7,1,9,8,8,-5,6,-1,-8,1,4,4,-7,2,-7,3,-5,3,-8,-7,8,9,1,-8,-9,-5,-6,-10,3,10,7,5,8,7,8,4,-6,-1,-5,10,-7,8,3,4,-10,-8,-8,10,-1,-3,2,7,10,-9,-5,8,1,5,2,9,-6,10,10,-1,8,9,1,10,-4,-6,-7,2,8,1,9,-5,-9,-10,-6,1,4,6,8,7,-6,-10,7,10,-1,9,-2,-4,9,9,6,-1,-10,6,-4,9,-7,-2,2,4,-10,-3,7,-3,-3,4,-4,10,2,3,10,-8,2,-5,-10,8,-10,-4,10,3,-2,1,-2,10,-6,1,-5,-4,9,-1,-8,10,-2,5,4,5,5,-9,-6,2,-2,-9,2,-3,-5,-1,-5,-3,7,-9,5,4,10,8,4,10,-3,-2,6,-7,2,-6,-8,4,-4,-6,-6,1,-6,4,9,6,2,-6,-5,-1,-10,4,3,-5,10,10,-2,2,1,7,-7,-1,-1,1,-1,-3,-7,-1,4,9,-7,-9,-9,-8,6,-10,8,-6,-10,7,7,-2,-6,5,9,5,1,9,-5,-8,-2,-6,2,3,6,1,9,-8,-8,-6,-4,-7,5,5,-10,-2,5,-7,7,7,8,-9,-3,4,9,-10,-1,10,-2,-7,-9,-9,9,9,3,-1,6,-2,6,-10,-5,8,9,3,2,-6,-1,5,-8,-7,-2,6,8,-7,-1,9,-1,-2,-2,2,7,7,2,9,10,-2,4,-2,-5,9,10,-4,3,-1,-2,-1,2,8,-1,3,1,-4,5,-9,5,-8,6,-5,-7,5,1,10,-5,-7,-3,8,10,-1,9,5,8,10,5,-2,-2,-4,7,6,10,10,8,9,1,-2,2,6,-1,5,-10,6,7,6,-2,8,8], dtype = "uint32")#candidate|12744|(720,)|const|uint32
call_12741 = relay.TupleGetItem(func_8675_call(relay.reshape(const_12742.astype('float32'), [48,]), relay.reshape(var_12743.astype('int64'), [660,]), relay.reshape(const_12744.astype('uint32'), [180, 4]), ), 7)
call_12745 = relay.TupleGetItem(func_8679_call(relay.reshape(const_12742.astype('float32'), [48,]), relay.reshape(var_12743.astype('int64'), [660,]), relay.reshape(const_12744.astype('uint32'), [180, 4]), ), 7)
output = relay.Tuple([uop_12730,uop_12734,call_12741,const_12742,var_12743,const_12744,])
output2 = relay.Tuple([uop_12730,uop_12734,call_12745,const_12742,var_12743,const_12744,])
func_12750 = relay.Function([var_12729,var_12743,], output)
mod['func_12750'] = func_12750
mod = relay.transform.InferType()(mod)
mutated_mod['func_12750'] = func_12750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12750_call = mutated_mod.get_global_var('func_12750')
var_12752 = relay.var("var_12752", dtype = "float64", shape = (7, 16, 6))#candidate|12752|(7, 16, 6)|var|float64
var_12753 = relay.var("var_12753", dtype = "int64", shape = (1, 660))#candidate|12753|(1, 660)|var|int64
call_12751 = func_12750_call(var_12752,var_12753,)
output = call_12751
func_12754 = relay.Function([var_12752,var_12753,], output)
mutated_mod['func_12754'] = func_12754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13096 = relay.var("var_13096", dtype = "int16", shape = (16, 15, 3))#candidate|13096|(16, 15, 3)|var|int16
var_13097 = relay.var("var_13097", dtype = "int16", shape = (16, 15, 3))#candidate|13097|(16, 15, 3)|var|int16
bop_13098 = relay.logical_xor(var_13096.astype('int16'), relay.reshape(var_13097.astype('int16'), relay.shape_of(var_13096))) # shape=(16, 15, 3)
output = bop_13098
output2 = bop_13098
func_13104 = relay.Function([var_13096,var_13097,], output)
mod['func_13104'] = func_13104
mod = relay.transform.InferType()(mod)
var_13105 = relay.var("var_13105", dtype = "int16", shape = (16, 15, 3))#candidate|13105|(16, 15, 3)|var|int16
var_13106 = relay.var("var_13106", dtype = "int16", shape = (16, 15, 3))#candidate|13106|(16, 15, 3)|var|int16
output = func_13104(var_13105,var_13106,)
func_13107 = relay.Function([var_13105,var_13106,], output)
mutated_mod['func_13107'] = func_13107
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13506 = relay.const([[[-5.329103,-9.405372,3.992838,0.130187,0.947363,-5.161951,0.219370,-9.154340,6.734127],[2.424448,5.749097,5.023953,-5.409123,-6.976617,9.575131,1.562488,2.128598,-6.975999],[1.230810,5.082106,-6.235416,1.965592,-3.280226,-8.709187,4.333062,-7.638150,1.187989],[-1.037682,5.097010,4.794558,-6.146381,-3.371297,-5.259934,-3.831874,-8.442058,3.041685],[-8.213320,-1.319202,-0.986195,-6.073856,3.308169,-0.662728,5.559334,-0.209095,1.462799],[3.996040,4.916498,6.231485,-7.884460,2.024538,6.698238,8.129094,4.219734,5.118565],[-8.362987,6.590805,-1.382218,7.585192,-8.243503,-8.972420,1.644790,2.624752,9.060253],[5.649787,2.241171,3.244106,8.639158,-1.445912,-6.654204,-9.176275,7.408970,-7.916435]],[[5.362822,3.896084,-1.895907,9.375287,9.132574,-0.033344,1.051299,-3.653392,-5.717378],[-0.029049,6.194220,-5.301550,-4.045273,-0.974343,-1.580949,4.668720,-9.800379,-3.548267],[-9.414194,9.827330,-7.845590,-6.735223,7.622799,-5.440824,-3.155343,2.980575,9.138049],[-3.760535,-1.044686,-0.262052,7.870023,-9.612553,-1.142148,-4.528501,-9.360524,5.036204],[6.050907,-6.812898,-8.469604,-5.472624,2.494650,-9.883027,5.133417,-5.031817,-2.680377],[8.935851,-7.121585,1.618338,-0.298141,8.727704,0.940804,5.374710,4.011991,0.177101],[7.702318,-3.084085,5.353667,3.881805,2.516010,-1.024672,-7.026289,-9.884966,1.499756],[-3.679802,0.880127,-5.040547,-7.331244,-0.389081,-2.150789,6.477659,6.559975,-1.662173]],[[6.190123,-3.697901,-5.942753,-8.954745,-2.219829,6.818027,-3.549103,4.183682,-5.770383],[6.865861,9.701868,-3.484805,4.489865,3.913692,8.235574,-7.877437,-3.727907,-9.111516],[9.068069,9.211551,9.618001,-1.358242,-6.562969,8.046206,3.270145,4.554189,-7.160125],[-2.766081,-5.838425,4.945031,-6.306011,-8.677750,-6.053111,0.925563,6.521993,1.571864],[6.991164,-8.446702,7.104677,-4.963143,-9.281482,7.758968,4.456093,8.742888,-0.939376],[-0.445636,-2.032963,9.783091,4.465846,-9.685146,7.951931,1.853503,5.028584,7.749112],[8.252634,-8.674650,3.885421,0.792797,3.906325,-2.511875,7.617171,-6.270314,7.246567],[-5.028845,-8.204696,9.088680,-0.526373,3.973412,5.501029,-6.470823,-9.657957,-5.290374]],[[-6.751732,7.443819,-0.768956,6.480676,-6.487103,9.319231,1.762570,-6.788894,8.410713],[-8.414680,-1.148595,6.897473,-5.269563,-6.783700,-8.866077,-4.004118,-4.028249,3.133430],[-8.746845,-1.555331,-2.871669,-9.414956,3.202174,-4.950633,1.473274,-6.129444,-2.418290],[0.439454,7.060187,6.950955,-5.875417,9.652262,9.740418,-3.326049,9.050163,-8.049234],[-9.443816,-4.507268,3.654198,-8.412433,2.378539,-5.729979,3.132531,-7.967350,-8.302134],[-5.368063,7.114199,1.388490,-0.609685,-2.680728,0.652564,-0.231986,-4.316779,6.364149],[0.734607,-5.742470,2.434538,-5.107887,-7.140973,3.396577,-0.216227,2.019520,7.460824],[0.769382,-4.641621,-1.887387,-8.303004,-6.977734,2.835727,8.598545,7.054390,0.145669]],[[-4.801057,5.288563,-8.324420,8.282246,8.906323,-7.001667,-8.111921,-4.226752,-7.139304],[-0.211342,9.111698,6.095935,-2.175736,2.011199,-8.904251,-7.559247,-3.529635,7.476625],[0.033749,-9.401059,4.332471,8.518982,-8.664813,9.490765,-4.709676,0.088509,-9.726425],[-6.507743,4.555724,-9.494423,-6.587391,4.788686,6.681839,6.285011,1.214737,5.743300],[4.516715,-7.685529,-1.036228,-0.677609,5.203339,3.370609,-0.052173,3.209022,8.636813],[7.158564,-7.674780,1.079456,8.432290,-3.586209,-4.768029,6.235798,3.817369,7.939512],[7.986275,-8.067237,2.526637,-9.467297,-4.418811,-1.638017,-4.780712,9.793384,-2.311232],[-3.004303,-2.403263,-5.137993,-4.518402,-7.528958,-8.877553,4.911344,7.362121,-6.151714]],[[3.669978,-7.582836,-9.540790,-5.141654,-2.366480,-8.135953,-7.055393,-1.378170,6.153644],[8.072930,-2.084701,4.043208,0.850987,6.125351,8.740651,0.399695,-5.549850,-4.904874],[-7.265857,7.203831,-6.132845,1.096068,-2.673170,7.818970,2.931201,1.731401,-1.417869],[-7.687028,-6.688015,-9.122645,4.406454,-7.214967,1.423369,4.838964,7.322984,-3.870182],[-8.638912,-5.283084,1.750305,-5.942290,-9.755978,3.626611,6.559038,-3.395789,1.745374],[6.417983,7.747062,-6.966202,-1.906737,-2.509163,8.109019,2.475981,9.930020,-8.755815],[-7.944295,0.387896,1.816713,9.151429,-5.753211,-8.428701,3.525096,-0.817792,4.564728],[6.674976,-5.035198,-5.801192,2.181879,9.527151,2.360444,0.204360,8.230553,9.817239]],[[2.213982,7.092053,-2.064371,0.335738,7.475497,-6.679925,8.016843,-0.209792,-0.380581],[3.244058,-3.959395,-9.828213,-2.222641,4.349995,-9.035300,-5.467403,-7.381256,6.457625],[5.792400,-4.791153,-4.317488,-2.632352,-5.109710,-1.617977,9.993494,-0.433819,-7.663358],[1.059057,7.292211,-6.890327,1.091994,6.829323,-0.878970,7.629112,-9.602278,-5.811127],[-7.479446,-1.156110,6.398262,0.828134,-2.752506,2.967236,-6.071114,1.707614,3.027769],[2.837966,3.465270,-2.339660,7.259158,8.347826,7.876915,4.660838,-5.652624,7.859647],[-0.049546,-9.284351,-4.440138,7.645393,1.754716,-5.767989,3.002442,3.475142,6.978880],[-1.142013,6.523904,-5.273120,-8.555406,1.511910,3.939876,-0.257208,5.019090,-2.275414]],[[-7.026294,8.594214,-3.793075,5.486965,6.649550,-9.134382,-6.603101,-5.990805,8.667374],[5.113889,-1.168306,-4.232272,6.919638,2.514179,-1.669896,-0.622308,4.113679,-3.028474],[-8.935068,8.566020,-6.637856,-3.690548,3.373941,5.488408,7.005078,-2.046272,9.244254],[2.711263,3.021443,3.688746,-1.046376,6.735268,5.145097,5.317736,2.903440,-7.844991],[9.385874,-7.158854,8.948811,9.719641,-6.215445,-2.688962,-9.656573,-3.467728,-4.278819],[0.064628,-9.215023,-5.645335,-5.287194,7.980346,8.089059,-8.025662,-5.863457,6.479458],[-8.580939,-0.642550,-5.768840,-6.113427,-2.635192,-2.550840,-1.116444,8.128835,-8.941564],[9.524640,6.294593,-5.718615,-0.780807,3.251681,-1.922507,-3.721080,1.617584,7.703324]],[[7.413265,7.090684,4.233995,-5.306434,8.858469,-7.084180,6.305166,9.800414,-8.094010],[9.500222,-1.516262,1.544755,1.814991,1.943846,-5.348896,-3.068833,-6.121076,1.725315],[-2.552136,7.848542,1.924663,0.399560,5.155206,7.211290,3.629614,-9.342731,-0.615145],[-6.198413,3.966118,-3.346832,-9.472469,2.965067,-9.769387,-4.995073,-0.415817,8.996580],[0.833287,9.736445,3.501655,-0.333121,0.259786,-5.449820,-9.887018,-4.127269,-2.377386],[6.483229,2.406873,7.687569,0.029922,-3.620471,0.605041,1.391284,1.291973,-4.798294],[-1.239173,0.978910,0.004762,0.361503,-9.915584,-6.637128,-8.676773,0.672978,-1.816235],[-4.949844,5.497554,-6.776485,-1.346726,4.924628,-7.206527,-6.733395,8.894860,-9.944659]],[[5.550403,-5.402702,2.075671,-5.443232,5.301280,-6.506124,-5.236074,0.472142,8.479312],[-0.915823,-6.435683,8.605663,0.428121,9.168609,5.347597,-6.602989,3.720292,-3.153665],[9.087095,-5.194543,5.938504,-1.567723,1.288115,3.475836,5.375569,-7.987022,1.495006],[-1.120606,9.316282,0.806180,-4.272882,9.585988,2.989001,-9.096648,-1.570414,6.107831],[2.548528,2.309076,5.190585,-5.055700,0.074479,-9.675575,-9.260099,8.644952,-0.836934],[5.754208,-3.184254,-3.956973,-9.233274,-9.177415,-7.794348,-5.046692,-9.015499,-5.698802],[-8.180059,-1.325632,-9.124445,8.810261,-6.468972,-2.486854,3.443785,9.844386,8.167272],[9.775851,-3.618840,-1.947520,8.743178,0.385549,0.207152,-8.429463,-2.009071,1.917633]],[[0.572979,3.370850,9.151965,5.101669,0.118676,7.561548,-5.684761,5.156433,-1.549128],[7.291056,-4.452124,8.748700,1.870017,-3.460787,9.434748,-2.103792,-6.057715,-1.008525],[7.943560,-8.993974,-1.593881,3.546605,5.284965,7.988591,8.233681,7.161301,3.483808],[3.561943,-9.721971,-3.869554,4.501729,2.051736,7.047703,7.876377,9.547765,6.415696],[5.400208,-2.179279,2.279470,1.142797,2.362658,1.553410,2.738979,5.897559,-1.195735],[8.090644,-2.550764,5.896744,-4.831727,-7.988769,-5.242108,9.754211,4.525032,-1.543948],[-2.244595,2.280946,0.393824,-2.892264,7.365892,-9.584196,-9.133453,3.957009,-5.957335],[-5.321071,6.977916,-8.345295,-1.022682,-9.330316,-7.728713,0.414302,-9.413388,-1.012585]]], dtype = "float32")#candidate|13506|(11, 8, 9)|const|float32
uop_13507 = relay.sigmoid(const_13506.astype('float32')) # shape=(11, 8, 9)
output = uop_13507
output2 = uop_13507
func_13518 = relay.Function([], output)
mod['func_13518'] = func_13518
mod = relay.transform.InferType()(mod)
mutated_mod['func_13518'] = func_13518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13518_call = mutated_mod.get_global_var('func_13518')
call_13519 = func_13518_call()
output = call_13519
func_13520 = relay.Function([], output)
mutated_mod['func_13520'] = func_13520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13518_call = mod.get_global_var('func_13518')
func_13520_call = mutated_mod.get_global_var('func_13520')
call_13527 = func_13518_call()
call_13528 = func_13518_call()
func_1853_call = mod.get_global_var('func_1853')
func_1856_call = mutated_mod.get_global_var('func_1856')
const_13536 = relay.const([9.098939,-9.467755,-3.930891,-8.434014,0.535689,-1.601072,-4.759359,-2.667342,6.643622,2.530724,0.007478,9.600960,3.748590,8.239027,2.602070,2.817847,-8.905767,7.678281,-6.000229,-4.227245,-3.150089,9.014717,-0.516273,-6.494718,-8.623306,3.557999,1.420327,-0.692511,-8.423917,8.657709,-7.404495,-4.963970,-6.734411,9.842432,0.971360,-6.450870,8.813402,-5.305763,-8.930942,3.938772,-8.511392,-2.268405,9.938711,-0.593135,5.252643,3.702864,-6.745726,-2.458561,6.384391,-4.509408,7.601257,-0.069869,-0.894110,-2.532671,6.896805,0.577163,-6.900782,4.422144,2.955666,0.504051,9.679991,-2.648211,5.847789,4.344507,6.280758,3.679761,-4.796887,0.636453,6.478833,2.837792,2.804707,-5.481235,0.098918,9.621845,-1.759271,1.107223,7.573152,3.772941,-8.833907,0.554677,-5.563306,-7.916904,-7.447761,-0.449423,-3.741484,-1.841694,-4.386675,9.530914,5.278300,-0.070423,-7.203524,6.816034,-1.013864,-9.015785,4.167830,-2.038988,-5.127212,8.344892,-4.126610,-6.543389,2.682299,-3.869094,-8.316521,7.980866,-1.110862,7.985721,3.882912,-0.202747,0.398874,-6.873417,-1.973817,6.527915,-2.590780,1.040661,-0.474578,6.611094,-6.176470,9.605764,7.237137,-1.638783,3.770282,-5.801183,5.608881,-7.079193,1.961774,7.554314,2.601259,2.214124,3.066637,-2.760252,-9.196566,-4.531211,6.906356,6.907668,-9.530302,-2.222587,8.269550,2.327723,8.431269,-6.803518,-5.891023,-2.630749,-2.789267,2.872041,-0.241172,0.191895,0.539224,8.920485,2.351138,-5.584030,9.241503,7.516757,3.357783,4.098572,-9.888626,-2.868155,2.378314,-9.474825,-6.283177,-5.095413,6.239975,5.202865,0.832932,1.666527,-5.263773,-4.696494,-1.913890,-2.510175,-5.044426,-6.906101,8.614939,-6.310625,2.768225,-8.104291,-5.692402,-8.372336,-5.734681,9.214557,3.830308,2.423959,-6.141967,1.122785,0.130556,-3.028751,5.979691,6.424385,2.990756,3.266511,-0.939951,-2.556828,-9.601020,8.930784,3.928087,-5.425510,3.438608,-7.684032,-5.494670,6.441330,2.873019,6.950328,-4.122080,-2.254038,-5.385895,4.554366,5.452768,-7.487955,-7.928331,1.744713,-4.686674,-3.211073,5.926044,9.980923,-4.711183,3.270651,-8.405674,-9.904098,2.615248,5.200638,0.442528,9.592741,-3.642803,-8.699069,3.024271,-3.158224,-3.850231,2.172253,4.449066,3.148975,7.492358,-9.830539,7.477058,6.153757,6.163475,6.441619,3.878543,2.524497,-1.023564,-8.032228,0.658592,6.607901,-1.869185,3.675610,4.530460,9.950063,-6.038166,-8.113699,7.207781,-6.989980,-5.618982,1.686145,-0.612730,-1.180891,-7.933505,-5.193104,4.202123,6.950818,5.085302,-0.425683,4.416359,9.966409,1.225500,-7.430734,0.992868,5.104468,-0.465695,3.606893,0.322513,4.294103,3.413757,-6.270294,6.945586,-7.108015,-5.185072,8.689569,-4.055354,1.812944,-1.897029,-2.891658,5.136351,-0.693158,-0.036467,-3.375139,1.271795,-9.561596,-7.927548,7.424886,-6.334283,-5.168792,-2.031981,1.095638,-3.782903,-4.965659,-9.498727,0.652296,-2.817617,3.476423,8.862684,1.526059,6.356996,7.579815], dtype = "float64")#candidate|13536|(300,)|const|float64
call_13535 = relay.TupleGetItem(func_1853_call(relay.reshape(const_13536.astype('float64'), [3, 10, 10])), 1)
call_13537 = relay.TupleGetItem(func_1856_call(relay.reshape(const_13536.astype('float64'), [3, 10, 10])), 1)
uop_13540 = relay.sin(call_13535.astype('float32')) # shape=(2288,)
uop_13542 = relay.sin(call_13537.astype('float32')) # shape=(2288,)
uop_13544 = relay.cosh(uop_13540.astype('float64')) # shape=(2288,)
uop_13546 = relay.cosh(uop_13542.astype('float64')) # shape=(2288,)
func_13518_call = mod.get_global_var('func_13518')
func_13520_call = mutated_mod.get_global_var('func_13520')
call_13554 = func_13518_call()
call_13555 = func_13518_call()
uop_13560 = relay.atanh(call_13554.astype('float32')) # shape=(11, 8, 9)
uop_13562 = relay.atanh(call_13555.astype('float32')) # shape=(11, 8, 9)
uop_13565 = relay.atan(uop_13544.astype('float64')) # shape=(2288,)
uop_13567 = relay.atan(uop_13546.astype('float64')) # shape=(2288,)
func_8962_call = mod.get_global_var('func_8962')
func_8967_call = mutated_mod.get_global_var('func_8967')
var_13575 = relay.var("var_13575", dtype = "int16", shape = (585,))#candidate|13575|(585,)|var|int16
var_13576 = relay.var("var_13576", dtype = "uint32", shape = (720,))#candidate|13576|(720,)|var|uint32
call_13574 = relay.TupleGetItem(func_8962_call(relay.reshape(var_13575.astype('int16'), [13, 9, 5]), relay.reshape(var_13575.astype('int16'), [13, 9, 5]), relay.reshape(var_13576.astype('uint32'), [720,]), ), 0)
call_13577 = relay.TupleGetItem(func_8967_call(relay.reshape(var_13575.astype('int16'), [13, 9, 5]), relay.reshape(var_13575.astype('int16'), [13, 9, 5]), relay.reshape(var_13576.astype('uint32'), [720,]), ), 0)
func_13518_call = mod.get_global_var('func_13518')
func_13520_call = mutated_mod.get_global_var('func_13520')
call_13587 = func_13518_call()
call_13588 = func_13518_call()
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
const_13600 = relay.const([-1,8,-9,-5,-6,7,6,7,-4,-1,-2,-2,-9,-6,6,3,-10,-5,-9,-9,1,2,4,5,2,7,-9,6,-3,-10,-8,8,5,-10,-4,-9,5,-4,1,-4,-5,1,-1,1,-3,-3,-5,-10,6,5,9,7,-7,2,8,5,9,7,-4,6,-3,-8,-1,9,6,-9,1,-8,5,-10,-6,-8,2,-6,6,-2,10,7,8,-1,3,-9,4,-7,-7,-5,4,9,1,-10,7,7,-4,1,2,6,9,-4,-5,5,-7,-9,4,-5,-3,-5,9,-10,-6,-2,-2,-6,6,-6,-10,-6,-1,-8,-1,1,9,6,8,10,-4,4,3,-9,-1,-1,-5,-10,10,-1,-2,-8,-10,9,-10,-4,1,2,-8,-4,-3,-2,2,5,9,-4,10,-3,4,-8,3,9,-10,10,2,-8,7,-3,1,10,4,4,5,4,-1,4,-6,8,5,-3,1,2,-3,-8,1,-6,-1,-8,-8,-6,5,-3,-6,-7,10,-8,5,-1,-4,-3,-7,1,1,-6,2,-10,-5,-7,7,-2,6,-9,1,-9,9,2,-3,5,10,5,-3,-8,9,9,-1,-4,-2,-10,-1,8,1,5,2,-7,1,-6,-8,-5,2,-4,7,-2,9,2,2,-9,1,-6,3,-5,9,1,6,4,-1,2,6,-7,-7,4,-2,-2,-8,5,-6,-8,-2,2,-4,-5,-7,-3,3,8,10,1,5,-4,-4,6,9,-4,-2,8,-5,5,2,-4,9,-8,2,-2,5,-1,6,10,3,6,-2,-5,9,-8,-7,7,2,4,5,4,1,8,5,1,-3,5,-3,-2,-8,3,-3,-9,8,-1,-9,-2,10,-8,-9,5,7,-5,10,-1,10,-4,-6,9,8,8,5,-8,1,2,-4,-2,-6,-1,6,5,-10,8,3,2,7,9,-10,-7,-2,3,-7,-10,3,7,7,-7,10,3,-3,5,4,4,-10,7,1,1,-4,-10,2,6,9,6,-9,3,3,3,-9,-1,9,2,-7,-7,1,6,5,3,-5,3,8,-7,-3,10,7,-2,9,-8,6,7,-3,3,5,3,-4,4,-4,5,-1,-9,6,9,-5,4,-2,-1,4,-4,9,-10,6,7,7,7,-8,-10,-10,-4,4,10,-8,1,-2,-2,-4,6,-8,-2,-6,5,-7,-10,2,6,1,3,5,-1,1,-8,6,9,-8,9,9,-9,8,5,-5,-7,-7,6,-6,-10,8,6,-3,-8,-3,4,10,8,5,10,-6,-6,9,6,-7,-4,4,1,-2,-8,-5,-9,-6,-2,10,-8,-9,1,6,-3,2,10,-7,3,1,6,-4,2,2,10,6,-10,4,-4,9,-5,-7,6,7,5,3,-5,-8,8,1,-4,9,3,-5,4,-4,-4,-4,-5,10,-1,3,1,-5,1,-8,-4,-9,2,3,10,5,-8,-4,3,7,8,-2,-1,-9,-4,5,6,2,-10,4,-2,-3,1,7,3,10,4,-2,8,5,-2,9,-6,8,5,5,-2,-2,-6,-8,3,-10,-7,-9,-6,8,-7,-6,7,-9,5,-2,10,1,-2,-5,-7,9,-9,-1,-5,3,-8,-6,-2,-9,-7,-5,4,-5,6,-9,-6,7,1,10,-8,9,-3,-3,8,-3,3,-3,7,3,-9,6,-5,1,-2,-3,6,-8,-8,6,-5,2,9,6,7,-7,4,-4,-8,-6,-7,-3,-2,4,4,-6,8,-6,5,-1,1,-9,-3,5,-7,4,-1,-9,-7], dtype = "int64")#candidate|13600|(660,)|const|int64
call_13599 = relay.TupleGetItem(func_89_call(relay.reshape(const_13600.astype('int64'), [11, 15, 4])), 0)
call_13601 = relay.TupleGetItem(func_92_call(relay.reshape(const_13600.astype('int64'), [11, 15, 4])), 0)
output = relay.Tuple([call_13527,const_13536,uop_13560,uop_13565,call_13574,var_13575,var_13576,call_13587,call_13599,const_13600,])
output2 = relay.Tuple([call_13528,const_13536,uop_13562,uop_13567,call_13577,var_13575,var_13576,call_13588,call_13601,const_13600,])
func_13613 = relay.Function([var_13575,var_13576,], output)
mod['func_13613'] = func_13613
mod = relay.transform.InferType()(mod)
mutated_mod['func_13613'] = func_13613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13613_call = mutated_mod.get_global_var('func_13613')
var_13615 = relay.var("var_13615", dtype = "int16", shape = (585,))#candidate|13615|(585,)|var|int16
var_13616 = relay.var("var_13616", dtype = "uint32", shape = (720,))#candidate|13616|(720,)|var|uint32
call_13614 = func_13613_call(var_13615,var_13616,)
output = call_13614
func_13617 = relay.Function([var_13615,var_13616,], output)
mutated_mod['func_13617'] = func_13617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13626 = relay.var("var_13626", dtype = "float32", shape = (1, 1, 7))#candidate|13626|(1, 1, 7)|var|float32
uop_13627 = relay.tan(var_13626.astype('float32')) # shape=(1, 1, 7)
func_12377_call = mod.get_global_var('func_12377')
func_12383_call = mutated_mod.get_global_var('func_12383')
var_13640 = relay.var("var_13640", dtype = "float32", shape = (1260,))#candidate|13640|(1260,)|var|float32
var_13641 = relay.var("var_13641", dtype = "float32", shape = (10, 45))#candidate|13641|(10, 45)|var|float32
const_13642 = relay.const([-3.919940,1.739734,6.079765,-6.083100,0.839522,8.892007,-5.041719,0.169953,5.332797,5.563397,-6.938987,9.787629,-6.002462,-1.984763,-0.190747,4.453591,-7.737111,-4.695948,2.989986,-4.008715,-8.024038,-5.800820,-2.933457,-6.086273,6.884671,3.404223,4.287171,-5.422649,2.157827,1.326602,2.536409,8.521800,9.036652,3.668996,-9.218054,6.821743,-4.218647,-4.438428,0.916029,-0.197367,-1.970365,8.506550,6.203429,9.503836,-2.460331,-3.655310,-5.857165,-9.323585], dtype = "float32")#candidate|13642|(48,)|const|float32
const_13643 = relay.const([-9,-1,1,-8,7,6,5,-9,-5,-5,-4,-4,7,-9,8,-7,-10,6,8,-6,7,2,1,-1,2,3,-7,4,-8,-4,-8,-5,-7,2,5,8,-9,-6,-2,7,2,-2,8,4,3,-2,9,1,-8,-1,10,7,-10,2,-9,-7,-10,2,7,3,6,-4,3,-10,8,-4,-1,-2,3,4,-2,4,2,-3,6,10,3,6,9,9,-5,10,5,8,5,-9,-3,-2,-1,-5,-10,8,8,9,9,-9,-10,-10,-10,-2,-10,-3,-6,-7,9,-5,-8,-4,6,-6,-1,9,1,-8,-10,7,3,-5,8,-7,6,7,4,10,5,7,10,-9,7,-3,8,-9,1,-10,-7,-7,-9,-7,-6,-7,3,-8,9,-6,-3,-3,9,1,-7,-1,8,-7,4,1,3,2,-1,-10,6,-5,5,9,4,-5,1,-5,-6,7,8,-2,8,-8,-4,9,4,-10,-4,2,1,8,5,-2,-8,3,-8,9,-10,-7,5,6,-10,8,-7,3,-8,-1,-6,6,-3,4,-5,-9,9,-1,2,6,6,-7,4,1,2,-5,-5,6,9,9,-10,2,4,6,3,-7,3,1,3,9,4,-4,4,-8,8,10,-6,9,-6,-8,-4,7,7,7,2,5,-2,6,1,-1,-1,-8,5,-9,-2,-9,1,8,-6,10,-2,5,-6,-10,-6,5,-3,-6,-2,-9,-3,-3,-6,2,5,-9,7,-9,-6,-9,1,2,6,-4,5,3,2,2,-6,-10,-6,-7,5,-7,6,-3,-7,3,-3,2,-10,5,10,2,2,6,-2,-5,1,-8,-8,-4,-6,-10,3,6,-8,7,-10,5,-10,-4,-6,-1,-10,1,-10,3,-1,-4,5,-8,-4,-3,4,6,9,-8,8,-1,8,4,-9,3,-10,-4,10,-9,9,-7,-10,-6,-5,-5,6,1,1,10,-4,10,4,10,10,-6,-3,-1,-10,-3,3,-7,-5,-1,-6,4,7,-4,2,3,-7,-10,-6,3,-7,-10,-4,1,7,-4,4,1,-6,10,-2,9,-4,10,-1,7,-1,10,5,-5,-3,3,10,9,-2,-5,4,4,4,-9,8,3,-2,-7,4,7,-2,5,6,-10,-2,3,-9,-5,10,6,-7,-9,3,6,-7,-5,3,3,-3,-8,-7,3,7,-7,-10,-6,5,8,1,-3,6,9,7,9,-6,7,9,7,7,-4,10,-6,5,-3,7,-7,6,-4,-8,5,1,7,-3,7,-2,-7,-9,7,8,-2,-6,9,3,-4,-8,8,2,-1,-2,5,7,4,8,10,1,-2,-1,6,-6,-6,9,4,-9,-6,-1,-3,-6,4,10,9,-8,-6,-2,2,3,10,3,-5,9,5,6,-8,-7,-4,10,6,-4,6,7,4,9,-3,-8,-7,4,6,-2,-10,-1,-7,10,9,-8,-8,5,6,-5,-6,-9,-1,7,-3,-6,-1,9,-5,1,-3,-9,5,-4,-5,10,-4,-6,-2,-4,5,7,-4,2,-7,5,4,-2,7,-8,5,-6,6,5,7,4,9,8,10,-7,2,9,-6,-5,-7,7,-10,2,-7,6,8,7,-1,-3,4,-10,-1,-4,-7,10,-1,-7,-10,-9,-8,2,-2,5,6,6,9,-8,-2,7,-3,-5,-4,7,1,-2,10,-9,4,8,4,-10,8,3,-2,1,-7,-4,-9,6,9,-3,5,3,-5,-9,-5,-4,-9,-4,7,-10,4,-9,5,4,-5,-2,8,10,-6,-4,10,-5,7], dtype = "int64")#candidate|13643|(660,)|const|int64
call_13639 = relay.TupleGetItem(func_12377_call(relay.reshape(var_13640.astype('float32'), [1260,]), relay.reshape(var_13641.astype('float32'), [10, 45]), relay.reshape(const_13642.astype('float32'), [1, 48]), relay.reshape(const_13643.astype('int64'), [660,]), ), 1)
call_13644 = relay.TupleGetItem(func_12383_call(relay.reshape(var_13640.astype('float32'), [1260,]), relay.reshape(var_13641.astype('float32'), [10, 45]), relay.reshape(const_13642.astype('float32'), [1, 48]), relay.reshape(const_13643.astype('int64'), [660,]), ), 1)
output = relay.Tuple([uop_13627,call_13639,var_13640,var_13641,const_13642,const_13643,])
output2 = relay.Tuple([uop_13627,call_13644,var_13640,var_13641,const_13642,const_13643,])
func_13662 = relay.Function([var_13626,var_13640,var_13641,], output)
mod['func_13662'] = func_13662
mod = relay.transform.InferType()(mod)
mutated_mod['func_13662'] = func_13662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13662_call = mutated_mod.get_global_var('func_13662')
var_13664 = relay.var("var_13664", dtype = "float32", shape = (1, 1, 7))#candidate|13664|(1, 1, 7)|var|float32
var_13665 = relay.var("var_13665", dtype = "float32", shape = (1260,))#candidate|13665|(1260,)|var|float32
var_13666 = relay.var("var_13666", dtype = "float32", shape = (10, 45))#candidate|13666|(10, 45)|var|float32
call_13663 = func_13662_call(var_13664,var_13665,var_13666,)
output = call_13663
func_13667 = relay.Function([var_13664,var_13665,var_13666,], output)
mutated_mod['func_13667'] = func_13667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13518_call = mod.get_global_var('func_13518')
func_13520_call = mutated_mod.get_global_var('func_13520')
call_13680 = func_13518_call()
call_13681 = func_13518_call()
const_13689 = relay.const([[[-0.119502,-0.680961,0.259876,-2.820845,-9.396539,-8.198142,-5.015256,5.258317,5.844897],[2.734553,-5.826239,6.204130,-0.640353,8.702738,-8.430643,-5.440370,-3.488367,2.834814],[-7.158646,-5.753383,-5.240247,2.855689,6.218427,5.396079,-2.860067,6.548550,1.399376],[-6.797891,-4.262184,-7.963469,8.416157,4.570261,-7.878168,7.254342,1.636127,4.387420],[-2.592340,-1.990051,2.877197,-1.684537,-5.146971,1.907589,-2.166750,8.445278,4.914712],[0.010638,4.611020,-8.833473,1.192874,-1.915543,7.696947,1.095168,0.437113,-9.244597],[5.220114,-4.051171,-7.136450,4.531299,9.691384,-8.071095,-2.520292,3.821743,-7.367301],[0.704488,-9.401839,-0.085856,5.370920,0.005610,-9.302091,-3.631572,3.265386,4.194610]],[[-2.941389,-7.503233,-8.688140,-9.058209,0.656567,-0.041926,5.338000,0.505533,3.611659],[-0.885341,3.458602,6.786428,0.859546,5.658614,-5.540150,-3.859128,6.796693,2.758220],[4.877201,3.073121,0.157596,7.721266,2.085342,-3.338913,-6.349448,-0.950636,1.396332],[1.807764,8.515086,2.783221,-3.166941,-8.245313,-7.619627,5.940645,2.646748,-7.513130],[-0.518001,7.156232,5.372914,-3.540764,-0.168485,0.931751,6.388106,-9.309807,-6.841096],[-0.307036,-3.844159,-4.771965,-5.094862,-8.688718,-8.181154,8.158141,-0.592263,0.721074],[-8.637534,-2.330159,-0.399171,-8.538417,-5.977791,-6.932150,-1.357628,0.191951,4.270635],[-7.798646,0.245559,2.380944,4.040817,-1.155544,6.670067,7.590492,-0.203471,6.625327]],[[-4.837213,-0.811197,-9.125130,0.833931,5.692506,2.546659,-8.214009,7.763336,4.299311],[-8.230554,3.678815,-7.507444,-1.698286,-3.645596,1.217615,1.830732,-6.184347,0.201271],[-8.189344,3.913430,8.257071,-1.345867,-1.786418,-8.737850,-1.518658,2.320059,2.360178],[-6.533983,6.609357,-4.987278,-4.460411,-9.858102,6.573696,-3.352785,-2.956151,-2.785263],[-9.706307,-2.503845,-8.154649,-6.733484,0.147966,-4.234207,-9.804544,-5.110655,5.027476],[-4.021089,-1.445957,-3.317295,-4.304375,6.812933,7.934662,5.779370,-0.891887,-7.154129],[-5.165936,7.411701,-8.172017,-2.820871,-2.292820,9.360720,-3.219049,-9.051740,-5.079422],[-2.485448,8.411486,-0.429219,1.219200,-1.827776,1.598065,-8.620681,-8.088698,1.785409]],[[8.435893,5.184853,-6.649371,-4.913256,-9.277551,3.558031,9.699624,-2.531707,2.141554],[5.660606,-2.992410,-2.291486,8.042318,8.319579,-9.520133,-1.152154,-0.602718,9.423709],[-0.399883,8.680655,-1.957534,-6.717649,8.317499,-7.552271,0.104358,0.918992,-9.997809],[9.065043,9.408925,6.974338,3.655200,8.466027,9.337210,-4.896280,-2.429842,-8.630502],[-8.245699,5.086146,8.220980,-8.924845,0.826818,-6.974097,7.246472,2.178666,-1.050642],[-8.265260,1.514734,-1.058643,-0.456696,-7.688711,-3.723965,-3.000104,4.659505,-3.783354],[4.242361,4.479213,6.898988,-3.921830,0.386633,2.317839,-4.583468,9.286437,5.843794],[-7.506328,-3.575528,1.854748,-0.232939,8.431677,7.788167,-3.536199,-8.393691,8.830290]],[[-0.375674,-9.289086,-2.675133,2.650514,5.120633,-3.851825,-6.697583,4.285833,2.282981],[-5.856133,-6.877010,-3.642169,6.245194,-9.709531,-6.921023,4.886034,-0.249098,1.416791],[7.332696,0.375440,8.401896,-6.461919,4.248406,0.078360,-1.220023,-9.679881,5.175251],[-3.875869,0.027289,0.415777,-1.021233,-9.408243,-2.017899,9.196468,3.384313,6.572261],[-6.349438,-0.850596,6.065704,2.474964,0.127290,-4.709786,-9.104694,-0.438163,5.366947],[5.780177,-0.064748,-3.215368,9.818211,5.164105,7.853976,-3.709242,-3.013463,3.608103],[-1.144888,5.906950,-4.898550,-9.378715,-5.570158,-6.093413,-2.388384,0.806326,-7.837860],[-1.772501,-0.788635,-9.760472,-7.142141,3.209347,8.577358,-7.756914,7.280681,-0.430964]],[[4.777492,-5.926677,6.964307,0.305284,0.123134,-0.410775,3.495737,1.201698,-3.037994],[3.091615,-0.796559,2.710657,0.024117,7.535569,3.665007,-8.788955,1.694477,-3.505350],[6.924797,-0.061065,9.850246,-9.187776,4.626106,-9.107819,2.192120,-7.543234,-5.634119],[-4.831000,3.334645,7.039192,0.338472,8.303507,-3.265781,9.480577,-9.859256,-9.301613],[-7.875432,-4.884007,3.525431,-8.141872,-5.935808,-3.731472,-9.596582,-1.183723,9.704395],[5.837470,4.896464,9.591666,-8.813656,4.431481,-9.239328,-1.516303,2.683391,2.077274],[5.310401,2.873158,-5.609953,9.758656,-3.379395,2.141317,4.096259,-3.181803,5.703112],[-1.692270,-9.649734,-8.228379,-5.377728,-2.733215,3.269493,-3.935589,5.441945,-0.113988]],[[4.592708,-7.464495,5.182566,1.793256,-8.071702,9.040009,3.223156,-8.659762,-7.065602],[7.688294,9.365713,-9.903619,3.700541,-8.298192,-3.729748,-3.354493,-2.555673,-3.617533],[-7.016788,-8.494330,2.458615,2.849584,3.460798,4.991156,-8.440356,-5.261014,-8.531074],[0.364866,4.936165,-7.064195,-7.019183,-8.992079,9.440973,9.939453,-2.927296,2.955918],[9.398922,6.430945,-4.278333,-0.310048,1.145523,-0.580607,2.901444,4.564314,8.437103],[5.514827,-0.986852,-6.484178,-4.656407,-2.790860,1.803927,-9.843543,-3.774054,-0.197880],[-3.985715,0.624138,7.128105,0.344058,2.156741,-4.933076,-3.975719,2.743311,0.888173],[1.042480,8.896219,-3.086459,1.244823,2.821484,-4.195910,-7.374311,3.921743,-8.070058]],[[8.142536,6.461530,-6.717398,-6.036585,8.538637,-1.980201,1.465440,-9.056208,5.805613],[-0.263160,-6.945982,-5.228818,7.202037,3.594689,-0.591791,4.299748,-8.635506,3.867220],[-4.618718,3.097654,6.465814,-1.605132,6.263180,2.049294,-5.467269,5.570504,8.343083],[1.696943,-2.654304,9.920768,4.080572,0.316503,-3.691719,-0.539491,-8.497474,-2.967446],[7.988112,-9.730728,-4.997341,3.104384,2.920634,5.459991,-8.466873,2.073630,4.212979],[-3.487070,-4.245482,-4.086356,-2.102354,8.470194,7.231255,-2.161112,7.520459,8.791182],[-6.410174,-7.132128,-1.209922,-4.908730,-9.385960,6.231386,4.775940,-8.506002,4.681962],[-5.573295,-4.334261,-0.575600,2.753566,-0.872465,-9.534129,-3.371810,1.739383,-8.502827]],[[-8.171884,-7.079101,1.957739,0.423873,9.924361,-9.475457,-0.724263,-7.038763,-1.591508],[-1.357621,2.237117,-7.026079,4.562587,-4.683215,7.498562,-3.383277,-1.983500,9.651084],[-4.010663,-6.799421,-8.865812,3.529669,3.895821,2.759901,-9.500084,8.066477,2.786092],[2.511329,6.494941,1.246594,4.889117,-2.492451,-6.717744,7.121365,-4.873255,0.645506],[-0.744750,-8.703429,-0.371040,8.884355,5.955741,2.785154,7.762060,3.557808,-0.326321],[9.139403,-6.993893,1.897926,9.807698,-6.777248,-0.848336,0.310725,-3.030970,-1.316170],[6.290802,2.652863,1.337536,9.956407,-1.273152,7.252607,2.949133,-5.645799,-1.876474],[9.793554,-3.719685,-9.960506,2.437158,3.543255,7.275108,-3.399249,5.158961,0.959904]],[[-4.091931,1.913442,-8.990614,-5.487159,-7.132313,2.727759,-6.230698,-5.770035,-6.558012],[-9.554756,-8.119596,9.776038,6.980367,5.286174,-5.470790,0.030938,5.314535,1.813108],[7.167736,-3.813504,-5.983942,5.824123,-5.429422,3.621041,-6.735847,-5.718771,1.344143],[-3.821237,6.762066,9.646312,-4.077909,7.695874,-0.781279,2.834498,-4.749111,5.945589],[-8.767755,5.956253,-5.621694,9.307843,-2.464608,-8.869939,-6.924816,2.248958,-6.992472],[3.239408,0.054388,-8.018537,7.779371,-0.932468,0.589252,-0.024229,-5.978503,-1.239475],[-8.218477,7.580967,0.010487,-7.655881,-5.715112,-2.795243,-5.589169,9.578683,-3.217163],[3.712570,-4.610553,1.801642,1.263585,7.168625,1.310671,3.408279,7.706881,5.626667]],[[-9.300405,-4.046344,1.899832,2.574649,-3.996878,2.910521,-5.344830,-9.677778,-3.542555],[7.691837,8.637090,7.653490,-4.995064,-8.713685,2.643814,4.201049,8.400401,-4.998801],[-7.388399,7.779742,8.146868,9.529436,3.881543,-4.660255,2.054547,-7.995827,-3.644832],[8.850139,-9.565410,-4.838434,1.216908,9.638114,-9.060527,5.085223,5.323543,3.845074],[-0.818173,-4.765856,1.697030,4.912914,-0.310246,3.769095,-9.733648,-5.519890,9.056886],[-5.136980,-5.352062,5.741667,-6.235468,2.142812,5.335658,-1.018254,7.294539,-2.143959],[5.185282,8.188455,2.673798,-8.386631,5.573774,-2.532341,5.098737,-1.463186,-6.559332],[-8.851096,-7.218593,-0.567634,3.784562,8.952002,6.155396,0.195112,-1.954093,9.561196]]], dtype = "float32")#candidate|13689|(11, 8, 9)|const|float32
bop_13690 = relay.add(call_13680.astype('float64'), relay.reshape(const_13689.astype('float64'), relay.shape_of(call_13680))) # shape=(11, 8, 9)
bop_13693 = relay.add(call_13681.astype('float64'), relay.reshape(const_13689.astype('float64'), relay.shape_of(call_13681))) # shape=(11, 8, 9)
output = relay.Tuple([bop_13690,])
output2 = relay.Tuple([bop_13693,])
func_13698 = relay.Function([], output)
mod['func_13698'] = func_13698
mod = relay.transform.InferType()(mod)
mutated_mod['func_13698'] = func_13698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13698_call = mutated_mod.get_global_var('func_13698')
call_13699 = func_13698_call()
output = call_13699
func_13700 = relay.Function([], output)
mutated_mod['func_13700'] = func_13700
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13712 = relay.var("var_13712", dtype = "uint32", shape = (4, 1, 1))#candidate|13712|(4, 1, 1)|var|uint32
var_13713 = relay.var("var_13713", dtype = "uint32", shape = (4, 15, 1))#candidate|13713|(4, 15, 1)|var|uint32
bop_13714 = relay.left_shift(var_13712.astype('uint32'), var_13713.astype('uint32')) # shape=(4, 15, 1)
output = relay.Tuple([bop_13714,])
output2 = relay.Tuple([bop_13714,])
func_13717 = relay.Function([var_13712,var_13713,], output)
mod['func_13717'] = func_13717
mod = relay.transform.InferType()(mod)
mutated_mod['func_13717'] = func_13717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13717_call = mutated_mod.get_global_var('func_13717')
var_13719 = relay.var("var_13719", dtype = "uint32", shape = (4, 1, 1))#candidate|13719|(4, 1, 1)|var|uint32
var_13720 = relay.var("var_13720", dtype = "uint32", shape = (4, 15, 1))#candidate|13720|(4, 15, 1)|var|uint32
call_13718 = func_13717_call(var_13719,var_13720,)
output = call_13718
func_13721 = relay.Function([var_13719,var_13720,], output)
mutated_mod['func_13721'] = func_13721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13698_call = mod.get_global_var('func_13698')
func_13700_call = mutated_mod.get_global_var('func_13700')
call_13768 = relay.TupleGetItem(func_13698_call(), 0)
call_13769 = relay.TupleGetItem(func_13700_call(), 0)
output = call_13768
output2 = call_13769
func_13773 = relay.Function([], output)
mod['func_13773'] = func_13773
mod = relay.transform.InferType()(mod)
output = func_13773()
func_13774 = relay.Function([], output)
mutated_mod['func_13774'] = func_13774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13698_call = mod.get_global_var('func_13698')
func_13700_call = mutated_mod.get_global_var('func_13700')
call_13786 = relay.TupleGetItem(func_13698_call(), 0)
call_13787 = relay.TupleGetItem(func_13700_call(), 0)
output = relay.Tuple([call_13786,])
output2 = relay.Tuple([call_13787,])
func_13794 = relay.Function([], output)
mod['func_13794'] = func_13794
mod = relay.transform.InferType()(mod)
mutated_mod['func_13794'] = func_13794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13794_call = mutated_mod.get_global_var('func_13794')
call_13795 = func_13794_call()
output = call_13795
func_13796 = relay.Function([], output)
mutated_mod['func_13796'] = func_13796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13773_call = mod.get_global_var('func_13773')
func_13774_call = mutated_mod.get_global_var('func_13774')
call_13838 = func_13773_call()
call_13839 = func_13773_call()
func_1853_call = mod.get_global_var('func_1853')
func_1856_call = mutated_mod.get_global_var('func_1856')
var_13841 = relay.var("var_13841", dtype = "float64", shape = (300,))#candidate|13841|(300,)|var|float64
call_13840 = relay.TupleGetItem(func_1853_call(relay.reshape(var_13841.astype('float64'), [3, 10, 10])), 3)
call_13842 = relay.TupleGetItem(func_1856_call(relay.reshape(var_13841.astype('float64'), [3, 10, 10])), 3)
uop_13845 = relay.log10(call_13838.astype('float64')) # shape=(11, 8, 9)
uop_13847 = relay.log10(call_13839.astype('float64')) # shape=(11, 8, 9)
uop_13857 = relay.sin(uop_13845.astype('float64')) # shape=(11, 8, 9)
uop_13859 = relay.sin(uop_13847.astype('float64')) # shape=(11, 8, 9)
output = relay.Tuple([call_13840,var_13841,uop_13857,])
output2 = relay.Tuple([call_13842,var_13841,uop_13859,])
func_13867 = relay.Function([var_13841,], output)
mod['func_13867'] = func_13867
mod = relay.transform.InferType()(mod)
mutated_mod['func_13867'] = func_13867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13868 = relay.var("var_13868", dtype = "float64", shape = (300,))#candidate|13868|(300,)|var|float64
func_13867_call = mutated_mod.get_global_var('func_13867')
call_13869 = func_13867_call(var_13868)
output = call_13869
func_13870 = relay.Function([var_13868], output)
mutated_mod['func_13870'] = func_13870
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13874 = relay.const([[[7.218145,2.305268,4.986881,0.685373,-6.101025,-0.922302,-6.032370,-4.350996,-8.846723,7.170271,-8.128498,-5.455335,4.158853,0.654580,-8.222038,-3.517449]],[[-0.928413,5.237722,-4.474439,-0.223289,-6.954978,-3.217746,-9.241592,-3.802135,-2.747545,-1.834029,6.129785,-6.361418,-4.609376,2.997084,-0.685886,-8.504047]],[[7.070860,2.051736,5.161408,-4.373070,-5.652834,-1.968302,8.515482,6.130402,5.422132,-1.658621,-8.877924,5.595318,3.210627,5.866481,-3.331125,-2.637976]],[[-3.255144,-8.326726,7.085351,5.336077,3.174557,0.402731,-0.221764,-5.925930,-5.795838,9.602413,1.311662,-5.171677,2.292301,5.507710,0.105662,2.927134]],[[3.847457,7.577414,-3.342848,-5.727394,9.513948,-7.680690,-5.951102,7.710033,-2.329625,-6.960826,4.699416,-0.667814,-4.380369,-1.164111,7.915149,3.385175]],[[8.602546,3.977346,5.490820,4.145996,1.710134,3.425728,2.956739,7.458689,9.861514,6.869073,-4.056221,8.630146,1.454194,-2.741696,0.989153,8.889233]],[[9.171411,-1.594911,-8.724864,7.385180,4.587838,-5.093158,7.064621,-7.760276,4.150317,4.133228,0.609874,-5.856592,-6.945549,1.115758,0.192885,8.329638]],[[-8.018660,7.224147,8.192699,-1.551426,6.407747,1.212257,-0.537850,3.019754,-2.288127,4.327887,7.408858,-6.255947,6.799716,3.037341,0.550506,4.008065]],[[-2.184303,-5.419045,2.884303,3.326289,2.858269,7.261880,-5.317396,5.651573,4.332457,5.882145,3.529812,-5.754770,1.837483,8.236945,-3.651573,-5.343294]],[[4.606775,4.646893,-8.499498,-2.688074,4.621583,9.541170,-5.972513,-7.274310,-3.528649,2.968881,-9.100316,-7.649298,2.726774,-7.443032,-8.260161,6.921323]],[[0.934090,-7.949543,0.752113,-3.462034,-1.783082,-8.411312,-0.617347,-9.996674,-3.827970,-9.392971,8.519307,6.778596,-6.814049,6.478544,-5.380955,7.761055]],[[1.052740,5.991599,-4.795676,4.567494,-1.009842,6.047675,1.742699,9.382789,2.589741,-2.845505,-5.031932,-9.157309,5.750487,0.051111,-0.904918,4.496276]],[[-2.508379,-7.801962,-7.997193,2.096545,0.872655,-9.443522,-1.459362,4.301865,4.679047,-6.363577,7.903244,1.700093,-1.548896,-3.015017,6.215920,-2.430724]],[[1.855137,-1.975615,8.654499,-6.500557,-2.747427,1.157283,-8.962866,3.578416,-0.663878,2.768177,-6.934234,-1.731346,4.866777,5.745488,-5.658638,-2.458007]],[[-0.637197,-6.166506,-9.945347,-9.085794,3.518351,6.538605,-2.186736,2.581254,-6.937306,-4.349664,1.401119,-2.750854,-1.477339,6.326616,0.168201,-1.526917]],[[-2.497886,2.198150,5.747551,-9.657940,8.311923,-7.147358,-2.358807,-7.971571,-2.637342,9.155647,9.134318,-5.879038,7.546635,4.687667,6.061426,-4.493143]]], dtype = "float64")#candidate|13874|(16, 1, 16)|const|float64
var_13875 = relay.var("var_13875", dtype = "float64", shape = (16, 16, 16))#candidate|13875|(16, 16, 16)|var|float64
bop_13876 = relay.add(const_13874.astype('float64'), var_13875.astype('float64')) # shape=(16, 16, 16)
func_965_call = mod.get_global_var('func_965')
func_968_call = mutated_mod.get_global_var('func_968')
const_13890 = relay.const(5, dtype = "uint64")#candidate|13890|()|const|uint64
call_13889 = relay.TupleGetItem(func_965_call(relay.reshape(const_13890.astype('uint64'), [])), 0)
call_13891 = relay.TupleGetItem(func_968_call(relay.reshape(const_13890.astype('uint64'), [])), 0)
output = relay.Tuple([bop_13876,call_13889,const_13890,])
output2 = relay.Tuple([bop_13876,call_13891,const_13890,])
func_13895 = relay.Function([var_13875,], output)
mod['func_13895'] = func_13895
mod = relay.transform.InferType()(mod)
var_13896 = relay.var("var_13896", dtype = "float64", shape = (16, 16, 16))#candidate|13896|(16, 16, 16)|var|float64
output = func_13895(var_13896)
func_13897 = relay.Function([var_13896], output)
mutated_mod['func_13897'] = func_13897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13794_call = mod.get_global_var('func_13794')
func_13796_call = mutated_mod.get_global_var('func_13796')
call_13984 = relay.TupleGetItem(func_13794_call(), 0)
call_13985 = relay.TupleGetItem(func_13796_call(), 0)
output = relay.Tuple([call_13984,])
output2 = relay.Tuple([call_13985,])
func_13986 = relay.Function([], output)
mod['func_13986'] = func_13986
mod = relay.transform.InferType()(mod)
output = func_13986()
func_13987 = relay.Function([], output)
mutated_mod['func_13987'] = func_13987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13773_call = mod.get_global_var('func_13773')
func_13774_call = mutated_mod.get_global_var('func_13774')
call_14013 = func_13773_call()
call_14014 = func_13773_call()
func_4506_call = mod.get_global_var('func_4506')
func_4508_call = mutated_mod.get_global_var('func_4508')
var_14017 = relay.var("var_14017", dtype = "float64", shape = (80,))#candidate|14017|(80,)|var|float64
call_14016 = func_4506_call(relay.reshape(var_14017.astype('float64'), [8, 5, 2]))
call_14018 = func_4506_call(relay.reshape(var_14017.astype('float64'), [8, 5, 2]))
output = relay.Tuple([call_14013,call_14016,var_14017,])
output2 = relay.Tuple([call_14014,call_14018,var_14017,])
func_14027 = relay.Function([var_14017,], output)
mod['func_14027'] = func_14027
mod = relay.transform.InferType()(mod)
var_14028 = relay.var("var_14028", dtype = "float64", shape = (80,))#candidate|14028|(80,)|var|float64
output = func_14027(var_14028)
func_14029 = relay.Function([var_14028], output)
mutated_mod['func_14029'] = func_14029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13698_call = mod.get_global_var('func_13698')
func_13700_call = mutated_mod.get_global_var('func_13700')
call_14175 = relay.TupleGetItem(func_13698_call(), 0)
call_14176 = relay.TupleGetItem(func_13700_call(), 0)
func_1292_call = mod.get_global_var('func_1292')
func_1297_call = mutated_mod.get_global_var('func_1297')
var_14179 = relay.var("var_14179", dtype = "float32", shape = (81, 6))#candidate|14179|(81, 6)|var|float32
var_14180 = relay.var("var_14180", dtype = "int64", shape = (660, 1))#candidate|14180|(660, 1)|var|int64
var_14181 = relay.var("var_14181", dtype = "uint64", shape = ())#candidate|14181|()|var|uint64
call_14178 = relay.TupleGetItem(func_1292_call(relay.reshape(var_14179.astype('float32'), [486,]), relay.reshape(var_14180.astype('int64'), [10, 66]), relay.reshape(var_14181.astype('uint64'), []), ), 5)
call_14182 = relay.TupleGetItem(func_1297_call(relay.reshape(var_14179.astype('float32'), [486,]), relay.reshape(var_14180.astype('int64'), [10, 66]), relay.reshape(var_14181.astype('uint64'), []), ), 5)
bop_14192 = relay.maximum(var_14180.astype('int64'), var_14181.astype('int64')) # shape=(660, 1)
uop_14197 = relay.cos(var_14179.astype('float64')) # shape=(81, 6)
output = relay.Tuple([call_14175,call_14178,bop_14192,uop_14197,])
output2 = relay.Tuple([call_14176,call_14182,bop_14192,uop_14197,])
func_14199 = relay.Function([var_14179,var_14180,var_14181,], output)
mod['func_14199'] = func_14199
mod = relay.transform.InferType()(mod)
mutated_mod['func_14199'] = func_14199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14199_call = mutated_mod.get_global_var('func_14199')
var_14201 = relay.var("var_14201", dtype = "float32", shape = (81, 6))#candidate|14201|(81, 6)|var|float32
var_14202 = relay.var("var_14202", dtype = "int64", shape = (660, 1))#candidate|14202|(660, 1)|var|int64
var_14203 = relay.var("var_14203", dtype = "uint64", shape = ())#candidate|14203|()|var|uint64
call_14200 = func_14199_call(var_14201,var_14202,var_14203,)
output = call_14200
func_14204 = relay.Function([var_14201,var_14202,var_14203,], output)
mutated_mod['func_14204'] = func_14204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13698_call = mod.get_global_var('func_13698')
func_13700_call = mutated_mod.get_global_var('func_13700')
call_14215 = relay.TupleGetItem(func_13698_call(), 0)
call_14216 = relay.TupleGetItem(func_13700_call(), 0)
func_8458_call = mod.get_global_var('func_8458')
func_8460_call = mutated_mod.get_global_var('func_8460')
const_14218 = relay.const([2.938538,-6.053004,5.607106,-6.101724,-7.731893,5.192934,9.960658,-5.751367,4.222887,-7.489116,7.705291,-9.157557,0.859588,-6.824856,-6.459920,0.234843,-4.235589,-4.769183,7.063456,6.142447,-6.302039,-2.727240,0.978935,5.765636,9.429490,2.169418,7.248494,-2.191891,6.210194,9.438621,-7.539031,1.313476,-2.208049,-2.574579,-8.094412,8.927193,9.907820,6.730434,-0.906187,3.736626,-1.109897,-2.192122,4.770971,1.800091,2.916129,-3.938297,2.868705,7.547298,5.864405,6.339175,7.365013,-0.984140,-2.095001,-1.920068,-4.083481], dtype = "float64")#candidate|14218|(55,)|const|float64
call_14217 = func_8458_call(relay.reshape(const_14218.astype('float64'), [5, 1, 11]))
call_14219 = func_8458_call(relay.reshape(const_14218.astype('float64'), [5, 1, 11]))
uop_14220 = relay.cos(const_14218.astype('float32')) # shape=(55,)
func_8675_call = mod.get_global_var('func_8675')
func_8679_call = mutated_mod.get_global_var('func_8679')
const_14241 = relay.const([-0.195089,8.622676,-0.165729,-4.966826,-2.524731,-0.697906,-2.787454,-3.643893,-3.202902,-5.019259,-7.997149,2.576798,5.903314,2.520820,4.373091,3.626081,-2.524088,-6.090308,7.373054,1.263626,6.528371,-5.015603,-2.530474,-6.135503,-0.426285,3.087494,0.083620,3.276327,-9.308124,6.192581,9.614431,6.609534,6.475830,-0.238386,-0.333314,1.409360,2.234107,-2.391880,-9.943196,-6.606771,0.967175,-3.154637,-0.860820,7.795255,-9.805761,-0.979253,-7.239678,1.945933], dtype = "float32")#candidate|14241|(48,)|const|float32
var_14242 = relay.var("var_14242", dtype = "int64", shape = (660,))#candidate|14242|(660,)|var|int64
const_14243 = relay.const([[4,2,-10,-4,-2,7,1,-7,-2,2,9,-4],[2,3,-9,1,-9,-1,-9,-1,5,2,-3,9],[-3,3,4,8,9,7,10,-3,2,-9,-10,-3],[-10,3,3,9,4,-1,9,2,1,-10,-9,2],[-9,-6,3,6,-6,5,2,7,-5,-6,-8,-6],[10,-1,-9,4,-6,-8,2,10,-2,9,-10,4],[5,-2,8,3,6,-1,-9,-4,9,-3,6,9],[2,-6,6,-8,9,5,9,-7,2,-1,-7,7],[7,-7,7,2,5,2,7,-2,1,4,-3,-7],[3,9,5,3,8,-6,7,-2,6,-2,3,7],[-1,-8,-4,-3,-4,-6,-8,2,1,9,-6,10],[5,4,6,-6,4,3,-8,4,9,-3,-9,1],[1,-7,2,-8,9,-9,-5,4,-8,7,5,1],[3,3,9,3,-5,-8,8,-4,-9,-4,9,-4],[-8,4,-6,9,7,1,-5,7,-3,-7,-10,-9],[-5,3,-10,-10,10,4,-8,-5,-5,2,-9,10],[-1,-6,-9,10,-8,7,-2,8,2,7,-5,5],[-9,9,-6,-3,-5,10,3,-9,4,9,-4,7],[-9,6,-9,1,7,-7,9,10,8,-10,-9,-2],[-7,-9,7,9,-2,-7,3,10,-8,-3,-8,2],[10,-7,-3,1,9,2,-8,2,-5,3,-9,-10],[-10,5,-3,-4,-1,1,1,3,-4,5,-8,-1],[8,-3,-7,-3,5,4,6,-10,-10,-8,-6,10],[10,3,-4,10,-8,-8,-5,1,10,-7,-5,1],[1,4,-4,7,-10,9,5,-6,4,2,-5,-1],[-10,1,-7,-9,-4,6,-9,-10,-5,3,-10,-7],[-10,-6,-1,10,-5,-7,3,-3,-10,5,-5,-8],[-5,10,-9,2,5,-6,4,8,-7,6,-4,7],[9,3,6,-2,-4,8,1,-3,-7,3,-5,5],[-9,-3,9,6,1,-9,3,-10,8,-10,-8,-5],[2,-10,-10,-10,-3,9,3,9,-7,5,-4,6],[-2,8,9,-7,-1,9,-10,-8,2,-7,5,10],[-6,1,-9,9,1,-3,1,3,-7,-3,1,-3],[1,7,8,7,4,4,-4,7,10,-8,-10,-5],[3,-5,9,5,-10,7,4,9,-1,1,6,1],[-6,9,1,-4,-9,-7,8,10,8,3,-1,-8],[-7,-8,-7,-9,1,10,1,4,-6,10,-5,-2],[-8,-5,-1,-3,-3,1,1,4,7,2,9,-8],[9,9,-10,8,-7,-7,7,-7,1,10,-6,-6],[10,1,-5,6,-8,-9,7,-6,-4,3,3,4],[7,-7,-10,-8,-10,10,9,-1,-1,5,10,2],[-4,-5,-6,2,3,-10,4,-1,-8,-10,-9,8],[-1,-7,4,-5,8,-7,9,2,1,-4,10,9],[-8,-9,-2,-6,9,6,-7,-6,-2,-9,-4,-4],[-3,-10,-4,4,-10,9,-9,-8,10,-4,6,-10],[-2,-1,2,-3,-4,9,-4,7,6,-7,-1,-3],[-9,-6,6,-5,-8,7,2,8,-3,-1,2,10],[-6,-2,3,9,-4,-9,4,-3,10,4,-9,9],[9,-8,10,8,-6,6,-6,1,10,2,-4,6],[-4,8,-1,5,7,-1,-1,4,9,-7,4,7],[-6,10,6,5,-6,-5,-8,-9,4,-3,-8,4],[-6,2,-7,-6,2,4,-1,9,-10,4,-5,-4],[-2,-5,3,-8,8,-10,1,-9,-3,-10,-2,2],[3,1,-1,-6,1,3,-1,-6,3,6,-4,-8],[8,3,-6,3,1,5,2,-4,3,8,10,-4],[9,-8,5,-2,-3,4,-10,-9,4,2,7,8],[5,5,9,10,-9,5,-6,8,3,-1,10,3],[-5,-9,-3,4,4,-5,9,5,6,2,6,-5],[2,2,-7,-8,-2,-5,-4,4,10,-3,5,-7],[-5,-4,10,3,-5,-4,2,7,8,2,2,-10]], dtype = "uint32")#candidate|14243|(60, 12)|const|uint32
call_14240 = relay.TupleGetItem(func_8675_call(relay.reshape(const_14241.astype('float32'), [48,]), relay.reshape(var_14242.astype('int64'), [660,]), relay.reshape(const_14243.astype('uint32'), [180, 4]), ), 2)
call_14244 = relay.TupleGetItem(func_8679_call(relay.reshape(const_14241.astype('float32'), [48,]), relay.reshape(var_14242.astype('int64'), [660,]), relay.reshape(const_14243.astype('uint32'), [180, 4]), ), 2)
func_13867_call = mod.get_global_var('func_13867')
func_13870_call = mutated_mod.get_global_var('func_13870')
const_14249 = relay.const([-8.763372,4.163239,0.007012,-5.018013,7.116371,1.083170,9.927812,6.000069,0.340401,7.424567,-6.454806,-8.005409,-9.698013,4.104664,-9.818425,-5.020400,-7.844942,9.538883,-8.785836,6.711316,-7.341067,1.832251,8.081156,4.329249,-3.730294,-3.640287,7.784331,2.698312,-2.482914,9.346790,-5.058865,7.103857,-5.694454,-8.277825,-2.944271,-9.522591,1.812742,-9.971948,-8.146225,3.892896,-5.851104,-7.196222,-7.376093,1.849127,-6.567074,2.593995,7.995170,-3.198755,8.593837,-6.050148,-3.389850,1.285866,-6.896340,5.582944,8.176564,7.937550,-8.920863,7.559611,5.052599,9.519889,-6.957624,-6.413538,7.036582,5.874712,-0.580729,-1.634968,-1.074130,-7.828943,3.097781,7.060324,-2.799692,-6.192060,-3.385407,7.130120,9.593169,-9.588328,7.051972,1.666399,7.471686,-0.700590,-8.192578,-5.158399,-4.325360,9.427098,-8.466265,-5.828023,9.407533,5.382734,8.942127,6.658479,9.720175,-2.440754,1.041143,1.253008,-4.555636,-2.197168,-1.952481,4.814732,3.385015,-8.609810,9.642582,-1.761357,-9.234735,6.689993,-0.285071,-5.913306,-0.055071,-6.820134,-4.707592,-1.579744,2.543897,0.113398,0.563402,-0.186032,1.383988,7.703367,-8.584165,5.603790,3.947606,-4.137331,9.871912,-7.286714,0.786691,0.803770,-0.271914,-6.742803,-2.579195,-8.238361,-9.625630,-0.667946,2.370253,-3.851572,6.970885,-2.657134,-7.812961,-6.578237,0.737801,7.279939,-7.399378,-0.478729,-7.291725,-6.030381,-9.403514,0.041044,-4.692617,-9.610837,1.179649,5.456187,-2.783281,0.410666,-7.301360,0.910307,-7.845005,-1.627932,6.750287,-3.160026,0.669889,7.999732,7.716331,-1.986814,-5.895886,9.441046,9.642012,2.530005,4.283045,7.166168,-9.768500,9.870429,6.715737,9.375024,8.506365,1.983156,6.324014,-5.139759,2.728584,-5.810511,-9.094544,1.870776,-6.973892,0.313181,5.923766,3.730512,2.492593,9.963671,-6.664416,-8.027379,-9.775313,-9.811645,-0.688382,-1.881481,7.013373,0.676256,-3.129815,3.593277,1.032473,-2.614247,6.740443,8.143521,6.517873,-6.257622,5.865708,4.968079,-3.003848,7.300805,-1.083861,-6.692474,-4.037857,7.933296,-6.298716,8.545141,-5.185905,-0.513550,9.260104,-7.291093,-5.777968,-0.663412,3.835168,1.773550,3.994816,-1.054181,-5.421684,1.361621,7.394700,-6.090285,-5.144064,8.373135,1.150540,-1.112617,3.299417,0.508018,4.591224,-3.699774,0.321700,-6.239621,-5.284990,9.227082,9.004739,-2.846471,0.499208,-6.659205,-7.001789,-6.020871,-8.574699,6.339197,-6.146050,6.004177,-4.794690,-3.491704,-8.324829,5.955656,-7.122226,0.077034,8.836954,-4.130014,-9.020455,-6.954027,-7.177222,0.338933,-3.311194,0.824911,8.485275,-2.298468,-5.447551,-4.764609,-4.255890,1.827548,-2.951988,-0.867953,-2.110291,-2.088554,-9.909525,-9.908196,-7.832155,8.469992,-7.832196,2.612678,9.651593,8.416036,-8.997153,-5.170350,6.204983,8.934969,5.576700,-0.039235,-0.352338,-8.776166,7.771008,-8.773951,-8.964108,-8.976052,-9.120004,7.243964,-8.772124,5.766835,-7.297214,3.681769,7.659125,1.249810,-8.415329,6.176970], dtype = "float64")#candidate|14249|(300,)|const|float64
call_14248 = relay.TupleGetItem(func_13867_call(relay.reshape(const_14249.astype('float64'), [300,])), 2)
call_14250 = relay.TupleGetItem(func_13870_call(relay.reshape(const_14249.astype('float64'), [300,])), 2)
func_13986_call = mod.get_global_var('func_13986')
func_13987_call = mutated_mod.get_global_var('func_13987')
call_14270 = relay.TupleGetItem(func_13986_call(), 0)
call_14271 = relay.TupleGetItem(func_13987_call(), 0)
output = relay.Tuple([call_14215,call_14217,uop_14220,call_14240,const_14241,var_14242,const_14243,call_14248,const_14249,call_14270,])
output2 = relay.Tuple([call_14216,call_14219,uop_14220,call_14244,const_14241,var_14242,const_14243,call_14250,const_14249,call_14271,])
func_14272 = relay.Function([var_14242,], output)
mod['func_14272'] = func_14272
mod = relay.transform.InferType()(mod)
var_14273 = relay.var("var_14273", dtype = "int64", shape = (660,))#candidate|14273|(660,)|var|int64
output = func_14272(var_14273)
func_14274 = relay.Function([var_14273], output)
mutated_mod['func_14274'] = func_14274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13698_call = mod.get_global_var('func_13698')
func_13700_call = mutated_mod.get_global_var('func_13700')
call_14323 = relay.TupleGetItem(func_13698_call(), 0)
call_14324 = relay.TupleGetItem(func_13700_call(), 0)
output = call_14323
output2 = call_14324
func_14329 = relay.Function([], output)
mod['func_14329'] = func_14329
mod = relay.transform.InferType()(mod)
output = func_14329()
func_14330 = relay.Function([], output)
mutated_mod['func_14330'] = func_14330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13794_call = mod.get_global_var('func_13794')
func_13796_call = mutated_mod.get_global_var('func_13796')
call_14331 = relay.TupleGetItem(func_13794_call(), 0)
call_14332 = relay.TupleGetItem(func_13796_call(), 0)
func_3712_call = mod.get_global_var('func_3712')
func_3715_call = mutated_mod.get_global_var('func_3715')
var_14339 = relay.var("var_14339", dtype = "int64", shape = (90, 10))#candidate|14339|(90, 10)|var|int64
call_14338 = func_3712_call(relay.reshape(var_14339.astype('int64'), [6, 10, 15]))
call_14340 = func_3712_call(relay.reshape(var_14339.astype('int64'), [6, 10, 15]))
output = relay.Tuple([call_14331,call_14338,var_14339,])
output2 = relay.Tuple([call_14332,call_14340,var_14339,])
func_14344 = relay.Function([var_14339,], output)
mod['func_14344'] = func_14344
mod = relay.transform.InferType()(mod)
mutated_mod['func_14344'] = func_14344
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14345 = relay.var("var_14345", dtype = "int64", shape = (90, 10))#candidate|14345|(90, 10)|var|int64
func_14344_call = mutated_mod.get_global_var('func_14344')
call_14346 = func_14344_call(var_14345)
output = call_14346
func_14347 = relay.Function([var_14345], output)
mutated_mod['func_14347'] = func_14347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13794_call = mod.get_global_var('func_13794')
func_13796_call = mutated_mod.get_global_var('func_13796')
call_14446 = relay.TupleGetItem(func_13794_call(), 0)
call_14447 = relay.TupleGetItem(func_13796_call(), 0)
func_8776_call = mod.get_global_var('func_8776')
func_8780_call = mutated_mod.get_global_var('func_8780')
var_14463 = relay.var("var_14463", dtype = "uint16", shape = (143,))#candidate|14463|(143,)|var|uint16
var_14464 = relay.var("var_14464", dtype = "uint16", shape = (286,))#candidate|14464|(286,)|var|uint16
call_14462 = relay.TupleGetItem(func_8776_call(relay.reshape(var_14463.astype('uint16'), [13, 1, 11]), relay.reshape(var_14464.astype('uint16'), [13, 2, 11]), ), 0)
call_14465 = relay.TupleGetItem(func_8780_call(relay.reshape(var_14463.astype('uint16'), [13, 1, 11]), relay.reshape(var_14464.astype('uint16'), [13, 2, 11]), ), 0)
func_3712_call = mod.get_global_var('func_3712')
func_3715_call = mutated_mod.get_global_var('func_3715')
var_14469 = relay.var("var_14469", dtype = "int64", shape = (900,))#candidate|14469|(900,)|var|int64
call_14468 = func_3712_call(relay.reshape(var_14469.astype('int64'), [6, 10, 15]))
call_14470 = func_3712_call(relay.reshape(var_14469.astype('int64'), [6, 10, 15]))
output = relay.Tuple([call_14446,call_14462,var_14463,var_14464,call_14468,var_14469,])
output2 = relay.Tuple([call_14447,call_14465,var_14463,var_14464,call_14470,var_14469,])
func_14494 = relay.Function([var_14463,var_14464,var_14469,], output)
mod['func_14494'] = func_14494
mod = relay.transform.InferType()(mod)
var_14495 = relay.var("var_14495", dtype = "uint16", shape = (143,))#candidate|14495|(143,)|var|uint16
var_14496 = relay.var("var_14496", dtype = "uint16", shape = (286,))#candidate|14496|(286,)|var|uint16
var_14497 = relay.var("var_14497", dtype = "int64", shape = (900,))#candidate|14497|(900,)|var|int64
output = func_14494(var_14495,var_14496,var_14497,)
func_14498 = relay.Function([var_14495,var_14496,var_14497,], output)
mutated_mod['func_14498'] = func_14498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14504 = relay.var("var_14504", dtype = "uint16", shape = (7, 12, 6))#candidate|14504|(7, 12, 6)|var|uint16
const_14505 = relay.const([[[-4,-7,-1,-10,8,-7],[-4,6,8,4,-8,3],[9,-2,10,6,6,10],[10,8,-7,-1,-6,8],[8,7,10,-9,-9,-5],[6,-4,5,-8,3,2],[-2,2,9,-3,2,2],[4,-1,4,-2,7,3],[-10,-4,-8,1,-9,-10],[-3,-5,7,-4,-1,-3],[-1,7,3,-10,2,3],[2,4,9,10,-8,-6]],[[4,-3,-5,2,-3,5],[-1,-8,1,-5,-7,4],[2,7,-9,-5,3,8],[6,7,8,-5,9,2],[-5,4,-7,-8,-10,-8],[-10,-2,1,-4,-9,-6],[2,-4,5,10,-4,-1],[-3,-9,-8,4,10,-2],[5,9,6,10,7,9],[-1,-1,3,7,3,-9],[-5,-10,10,-7,9,-10],[9,2,-6,-7,10,-6]],[[-10,-9,9,5,-2,10],[-8,-8,10,9,-7,-7],[-2,2,4,4,-10,-8],[-4,2,9,-7,-8,-1],[2,2,-3,-4,5,4],[3,3,3,-10,-6,3],[6,-2,7,-5,-7,2],[-5,-2,2,8,-6,-7],[-2,-5,3,6,10,-4],[-5,-7,5,10,-6,10],[8,3,1,-2,9,3],[-5,-1,-9,1,-7,4]],[[-8,4,9,-3,-4,-1],[-8,-7,-10,1,9,10],[9,2,10,10,4,-3],[7,-8,-4,-5,-3,1],[3,1,-4,-2,2,10],[3,9,5,-8,10,3],[-6,6,1,5,9,-3],[-4,-7,10,8,9,-9],[-1,-7,5,-5,-10,-10],[-8,2,10,-2,2,-1],[-7,6,-6,2,-1,8],[-9,-7,-4,8,4,1]],[[5,6,-3,10,8,7],[10,-1,8,-9,2,6],[4,10,-5,-10,6,-10],[5,-10,5,-6,7,-9],[7,-4,3,5,-5,3],[-9,2,1,6,-1,10],[6,-2,3,9,-9,-7],[2,-10,-8,-7,-8,-4],[-9,8,9,-6,3,-7],[9,-6,-9,-1,-6,8],[-5,-3,-3,5,-7,2],[8,10,-5,-10,5,5]],[[9,-6,6,-3,8,8],[-4,3,-6,7,2,7],[-6,-4,-1,4,-4,8],[-4,-2,6,-2,-5,-2],[-10,4,8,-1,-8,-5],[3,-2,-2,8,-1,8],[2,-8,7,-7,10,-10],[5,-3,6,4,9,-8],[-8,9,-7,-7,-9,8],[-6,4,8,-6,-5,6],[9,1,-7,1,5,5],[6,-3,-8,4,7,1]],[[2,-6,6,-8,-3,-5],[8,-8,-5,-5,6,10],[10,-7,2,10,-3,2],[-10,6,-9,-8,8,-10],[-10,6,4,7,9,-10],[-1,-6,-9,-6,9,2],[5,-5,-5,-6,1,-10],[-7,8,2,9,-8,-8],[3,6,9,10,-8,-7],[-9,8,6,-4,5,-10],[-9,10,4,-4,3,-9],[-8,8,-3,8,7,-1]]], dtype = "uint16")#candidate|14505|(7, 12, 6)|const|uint16
bop_14506 = relay.logical_xor(var_14504.astype('uint16'), relay.reshape(const_14505.astype('uint16'), relay.shape_of(var_14504))) # shape=(7, 12, 6)
func_6648_call = mod.get_global_var('func_6648')
func_6651_call = mutated_mod.get_global_var('func_6651')
var_14510 = relay.var("var_14510", dtype = "uint8", shape = (1, 845))#candidate|14510|(1, 845)|var|uint8
call_14509 = func_6648_call(relay.reshape(var_14510.astype('uint8'), [13, 13, 5]), relay.reshape(var_14510.astype('uint8'), [13, 13, 5]), )
call_14511 = func_6648_call(relay.reshape(var_14510.astype('uint8'), [13, 13, 5]), relay.reshape(var_14510.astype('uint8'), [13, 13, 5]), )
output = relay.Tuple([bop_14506,call_14509,var_14510,])
output2 = relay.Tuple([bop_14506,call_14511,var_14510,])
func_14517 = relay.Function([var_14504,var_14510,], output)
mod['func_14517'] = func_14517
mod = relay.transform.InferType()(mod)
mutated_mod['func_14517'] = func_14517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14517_call = mutated_mod.get_global_var('func_14517')
var_14519 = relay.var("var_14519", dtype = "uint16", shape = (7, 12, 6))#candidate|14519|(7, 12, 6)|var|uint16
var_14520 = relay.var("var_14520", dtype = "uint8", shape = (1, 845))#candidate|14520|(1, 845)|var|uint8
call_14518 = func_14517_call(var_14519,var_14520,)
output = call_14518
func_14521 = relay.Function([var_14519,var_14520,], output)
mutated_mod['func_14521'] = func_14521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13518_call = mod.get_global_var('func_13518')
func_13520_call = mutated_mod.get_global_var('func_13520')
call_14531 = func_13518_call()
call_14532 = func_13518_call()
func_12750_call = mod.get_global_var('func_12750')
func_12754_call = mutated_mod.get_global_var('func_12754')
var_14539 = relay.var("var_14539", dtype = "float64", shape = (672,))#candidate|14539|(672,)|var|float64
const_14540 = relay.const([[-3,-3,5,-8,7,6,-7,-5,1,9,-6,6,4,-5,-9,8,-3,4,10,9,-2,-9,3,3,4,1,1,-2,-9,1,-3,-7,-1,8,-3,-1,3,-5,5,-4,4,-9,-3,1,-7,9,3,-10,-8,-6,-5,-7,6,-7,-2,2,-6,-2,-3,10,-5,-1,6,-5,-2,-5,-9,-7,6,7,-5,-5,-1,10,10,-3,-1,-5,8,1,-4,-6,1,-9,-7,9,5,-3,-1,-10,4,-7,-10,10,-4,-7,-7,1,-8,9,7,9,1,8,-4,-2,4,1,-4,3,4,-6,4,-1,8,-2,-7,8,-3,-10,7,-5,-3,-4,-9,-7,-8,6,-2,8,8,-4,-1,2,1,10,8,-8,4,-8,-10,8,7,9,10,1,7,2,10,-9,8,6,7,-6,7,-5,-10,4,-4,9,10,1,-5,-3,-7,-5,-6,-10,6,-5,10,9,-1,-9,6,1,8,-1,-5,10,-1,-8,6,9,3,-5,1,7,5,-9,4,6,3,6,6,-3,-9,-3,10,6,-5,10,-5,10,-1,-2,10,-8,7,-5,10,-9,9,-5,-3,2,-2,-4,9,6,4,6,5,-8,-10,7,-1,8,-8,8,-3,-9,-5,3,-8,4,8,7,6,8,-10,-3,-3,2,-5,3,3,7,9,-1,-1,-9,7,-2,3,6,-9,4,-1,3,9,5,10,-1,2,-7,9,1,2,-6,7,8,-2,-6,-1,10,-5,-3,9,-7,7,5,10,1,-1,-8,-10,4,1,4,1,1,1,4,-7,2,-2,10,-4,3,8,4,8,-10,10,-2,-10,-6,8,-10,8,10,10,2,-1,-1,-8,8,3,-4,2,3,-8,2,8,2,-5,-7,-10,-2,6,1,8,-10,9,-5,2,2,6,8,7,1,-10,-8,-9,-5,-4,9,-8,-3,2,8,6,6,4,-10,-1,3,-1,-4,-3,-7,7,-9,4,-10,9,-2,7,-9,-9,-2,-9,-4,7,-3,8,9,4,8,1,-6,-7,-5,4,7,-4,4,5,-4,-7,-7,6,8,-4,-10,8,5,-4,-2,-8,-4,10,-6,7,9,8,8,-2,6,5,-2,3,10,10,8,3,-8,1,7,-5,-3,-4,7,-9,5,8,-9,-5,-10,3,2,-1,8,-6,1,3,4,-7,7,-3,-10,-8,-4,9,9,-2,-7,-3,5,8,-1,-4,-2,6,-6,10,2,6,2,-9,-7,-9,-4,-9,-2,-8,10,7,-10,-1,-6,2,-8,3,6,-10,3,-9,-4,7,-5,-10,-5,-9,2,1,1,-5,6,1,-9,6,2,10,-6,-1,-2,-8,-10,1,-8,-9,10,8,-3,7,-9,6,10,7,-3,-9,-1,-3,5,-2,-8,10,6,-3,6,-3,-3,-6,6,-1,2,-7,8,-4,4,5,-7,-10,-4,4,-3,7,-7,-2,-6,6,-2,3,-1,-2,10,-4,4,-2,9,10,-2,-1,-10,1,-6,6,-8,-8,5,-3,-9,4,3,4,9,-5,3,-9,8,10,9,-2,6,-7,3,-6,6,-8,5,2,-7,4,-4,-4,-4,-8,2,-9,1,-7,-3,7,-4,-10,-6,-4,3,3,-10,-2,1,7,-10,-10,-2,5,4,7,-4,7,-3,-3,9,-6,2,5,-7,-7,-7,-8,-5,-4,-5,-9,10,-1,8,-9,-9,-8,-2,4,-3,6,7,-1,-9,5,8,6,-9,2,10,-4,4,-2,3,6,7,10,-10,-10,9,-4,7,-6,-7]], dtype = "int64")#candidate|14540|(1, 660)|const|int64
call_14538 = relay.TupleGetItem(func_12750_call(relay.reshape(var_14539.astype('float64'), [7, 16, 6]), relay.reshape(const_14540.astype('int64'), [1, 660]), ), 0)
call_14541 = relay.TupleGetItem(func_12754_call(relay.reshape(var_14539.astype('float64'), [7, 16, 6]), relay.reshape(const_14540.astype('int64'), [1, 660]), ), 0)
output = relay.Tuple([call_14531,call_14538,var_14539,const_14540,])
output2 = relay.Tuple([call_14532,call_14541,var_14539,const_14540,])
func_14546 = relay.Function([var_14539,], output)
mod['func_14546'] = func_14546
mod = relay.transform.InferType()(mod)
var_14547 = relay.var("var_14547", dtype = "float64", shape = (672,))#candidate|14547|(672,)|var|float64
output = func_14546(var_14547)
func_14548 = relay.Function([var_14547], output)
mutated_mod['func_14548'] = func_14548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13518_call = mod.get_global_var('func_13518')
func_13520_call = mutated_mod.get_global_var('func_13520')
call_14589 = func_13518_call()
call_14590 = func_13518_call()
output = relay.Tuple([call_14589,])
output2 = relay.Tuple([call_14590,])
func_14609 = relay.Function([], output)
mod['func_14609'] = func_14609
mod = relay.transform.InferType()(mod)
output = func_14609()
func_14610 = relay.Function([], output)
mutated_mod['func_14610'] = func_14610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13518_call = mod.get_global_var('func_13518')
func_13520_call = mutated_mod.get_global_var('func_13520')
call_14731 = func_13518_call()
call_14732 = func_13518_call()
func_2648_call = mod.get_global_var('func_2648')
func_2650_call = mutated_mod.get_global_var('func_2650')
const_14738 = relay.const([-7,-6,2,-5,9,10,-8,5,-10,-3,5,10,9,3,9,-1,-3,-1,2,9,-5,-5,10,8,-8,-7,-3,6,-10,9,-9,10,-7,4,9,1,2,7,-5,-4,-8,-8], dtype = "int16")#candidate|14738|(42,)|const|int16
call_14737 = relay.TupleGetItem(func_2648_call(relay.reshape(const_14738.astype('int16'), [1, 3, 14])), 2)
call_14739 = relay.TupleGetItem(func_2650_call(relay.reshape(const_14738.astype('int16'), [1, 3, 14])), 2)
func_12377_call = mod.get_global_var('func_12377')
func_12383_call = mutated_mod.get_global_var('func_12383')
const_14743 = relay.const([-1.155407,9.554013,-5.326064,-6.376415,4.846648,-4.559537,-3.815703,9.559088,-3.043664,-9.760922,0.930775,-0.912014,-3.100131,1.013385,0.108536,-4.920870,-4.749476,-9.428982,7.543647,6.522093,-3.921494,3.094876,-9.487725,-1.336643,4.394132,-4.567930,0.375644,8.857814,2.949361,-1.929756,2.252957,2.945206,-8.431027,4.992140,-8.671634,-3.353300,-4.298089,-6.066477,-3.637346,8.113127,3.930966,2.636323,0.071411,2.058625,9.661807,9.315376,-1.480294,-7.895226,0.686852,-9.407537,-2.026748,-3.389573,-1.673815,1.259603,6.793753,6.465018,8.375977,-3.135832,0.399580,8.848196,6.247310,-1.822004,2.170287,-4.992569,-2.256086,3.167773,7.075851,6.000755,-2.791180,-8.605574,-7.525713,-3.062242,-8.662155,-9.332696,-3.292333,-8.533344,-9.902994,3.073081,4.145496,-6.579473,-3.753652,-0.740065,-9.787385,-4.085168,1.709861,-4.901727,-7.887070,9.107342,2.552194,-5.336143,0.999578,2.938292,1.358396,-6.472176,-5.752184,-9.753907,-6.738321,-1.463305,8.599326,0.681554,-2.763425,-1.814804,-5.699400,0.497572,0.070351,-4.791522,1.821507,-4.317716,-4.681437,8.909850,-9.861079,-2.750104,0.597951,0.198904,0.931537,4.748988,-7.071345,-8.634803,8.254411,7.859663,7.489459,4.705519,1.450819,-1.939428,-8.072087,3.971647,0.275637,8.801909,-1.984268,8.521179,5.547671,3.246681,-6.206059,9.860427,-3.440465,-5.067753,-4.603068,-9.497015,-3.792284,1.844573,-4.324665,8.405426,-4.930626,-7.918812,7.378181,-6.365762,-8.926707,-3.788711,8.213976,-6.920696,-4.281143,-4.178536,7.640868,2.760191,2.231965,-0.346719,0.356669,3.072654,8.049345,-7.476983,-3.222335,1.006019,9.803661,4.673716,6.488400,-6.745636,5.285267,-0.206957,0.061598,-6.732773,5.484586,-6.003341,-5.224765,-5.912549,-4.506782,-0.165917,-4.603988,0.112359,7.352559,-3.640454,8.597037,9.022202,9.274542,9.684360,7.240308,0.759770,-6.541304,2.244722,-6.219543,-3.980429,-6.589996,1.595788,2.732484,-9.711913,0.046240,2.377165,1.102486,5.972529,4.010392,0.886764,-9.969872,6.613367,9.551489,9.342633,-5.651994,-9.559166,-5.883167,0.344630,-3.561946,0.676746,7.457849,-9.446122,1.175335,2.369668,-8.858271,2.229669,-8.942510,-9.618389,9.763331,5.761580,1.366384,-1.251196,0.506538,7.292238,-0.859030,5.680567,-7.669910,-0.759300,-9.051243,-3.339045,3.985289,4.695481,-9.776274,9.802965,-4.908747,3.753960,-8.920135,2.132354,-0.582378,8.991317,2.603249,-4.732104,5.293609,4.241110,-1.567134,-4.950245,9.990735,4.181832,7.368248,1.835996,0.810540,-6.767671,1.190422,5.453838,-3.337385,-1.842003,-7.614731,2.292276,2.237149,8.986748,-0.336949,8.061827,7.534674,7.917398,6.974267,-7.540326,-6.416431,-2.109566,5.712101,1.377649,0.734213,3.080259,-4.861579,6.002979,-0.494808,1.714541,-0.324115,-7.595143,-3.236764,3.955051,7.103727,-0.190769,-2.271823,7.605590,0.391395,5.790414,-7.784678,-5.963409,-5.736490,-5.304709,-6.350786,2.322882,1.491379,-0.113661,-0.662092,6.341011,-3.352492,7.232126,2.739619,-5.402924,6.851027,9.350712,-5.893727,-1.001234,3.815130,3.671250,-0.190211,-7.249106,8.220531,0.980048,-0.611123,6.435363,2.787745,3.054821,9.262563,8.092630,-2.593683,-9.117927,-7.739659,1.911248,2.204927,6.401099,0.992393,7.783757,-7.566360,-9.483040,-9.652312,5.687728,-1.643189,-4.533777,-2.973460,-9.946687,-2.043316,-0.351946,7.417387,-8.725818,-7.162097,1.303781,4.575829,-9.382724,1.115201,6.519960,-2.471666,4.168317,5.649479,-3.985631,0.156965,-6.601304,2.423818,-0.683602,-6.110267,-7.934766,-7.036549,0.657743,-8.180707,-2.235248,-9.408684,8.110736,-0.953393,-5.462950,-4.344158,-0.566953,0.170157,5.104390,3.055768,-9.980411,-7.175823,-2.673677,-9.873543,3.862314,-9.718394,-9.649442,7.360621,4.772028,1.164982,0.090939,9.443069,0.415744,3.736676,2.339009,9.247917,-4.926120,-9.587824,-2.895136,-8.468712,-5.711368,8.648617,-5.340138,-9.981905,6.393327,4.705576,-2.716601,-3.796177,6.676655,-8.101068,-8.075001,-4.380930,-7.347464,7.205152,2.655797,-1.467225,-8.804213,8.987144,-8.602602,5.423616,9.999003,-9.324076,9.559190,4.893777,-9.517317,5.958628,4.921609,-5.539474,2.124452,4.291766,9.962753,-3.382348,5.543341,-7.378773,5.904335,2.311267,-3.081980,-0.499226,-1.374044,0.889921,-8.417436,1.494397,-1.450215,5.503523,-7.074711,7.175477,-1.354320,1.582974,8.503510,5.210461,2.212043,7.911837,-3.089065,7.888888,9.245276,-1.918487,-4.065347,-6.869887,3.346246,-7.257381,-6.338712,6.686103,1.776924,-9.060327,4.363359,6.604293,6.300673,-7.444370,7.231924,-4.975759,-9.681745,-5.156943,5.389287,-4.667993,-1.452506,-2.540251,-3.450224,9.976128,-0.183058,-5.952597,0.194089,4.807478,-1.428935,-7.655026,6.447075,-2.576586,2.314531,-3.871967,4.108626,6.861620,1.742740,-2.202839,-7.228509,7.403425,-9.630608,-1.611050,-3.297637,-9.567613,3.038019,-9.427213,6.164224,4.779101,7.246858,3.357164,-5.951312,-9.910194,-5.607530,5.377383,-5.206554,-8.251308,-8.640740,-6.743272,-6.358752,1.322461,3.939387,-0.316105,-1.807043,-8.280458,-3.345584,8.960708,-2.382952,-7.817903,-4.271896,9.139708,7.894334,6.462365,-0.018224,-2.631943,-6.785984,8.586641,9.996452,3.507947,7.199646,9.802240,5.304638,-3.883386,-0.184979,2.370182,-1.198883,3.500770,-5.928909,5.389419,-7.198540,0.820047,4.398248,-3.840423,-1.436026,-2.130049,4.294558,5.467775,-4.462245,8.957814,0.359976,-1.016251,7.344048,4.417567,-7.202467,1.941790,-7.348233,-2.117085,7.382739,-1.667205,-5.498820,5.788717,-6.361291,-7.750123,-0.244937,1.828945,-6.652527,4.575743,5.855784,1.079841,0.827774,-6.244128,1.109198,3.442370,3.205486,1.068056,-0.739047,-5.304176,7.993752,-0.910069,-8.612027,2.388112,3.417000,-7.578991,1.096578,-5.539446,-4.840362,-7.765073,7.189124,-1.791003,3.804936,-3.996638,-3.490606,-0.263483,-2.945792,0.091122,-3.424589,6.175327,9.026843,-8.697349,-7.058558,4.809820,0.760017,-0.453821,1.894617,-9.475325,-5.832818,3.147202,9.744314,1.803722,-4.001057,-8.710095,8.313328,-6.569276,9.622729,-7.642073,0.589572,7.400648,5.184140,-5.944834,-7.533050,-6.040539,3.005248,-1.129735,9.324906,-9.393558,-1.960488,4.464900,4.954047,2.817687,-1.174783,-6.630733,2.975531,8.773833,9.120972,-0.022076,-9.243139,9.966700,-2.223895,-7.740125,5.744382,6.016931,4.676283,7.198281,-7.961989,3.669959,-2.342868,-9.951230,8.915358,8.117394,1.073175,6.234226,-3.571156,-2.881649,-1.713038,-0.774337,7.885455,1.683655,-5.465287,7.746182,3.350337,-1.959416,-7.638975,-7.380767,-4.383877,6.686383,8.222558,7.252037,3.014504,-7.584134,-7.354422,1.767094,-9.062584,-3.453567,2.813628,0.050118,-0.212198,8.729779,-6.896537,8.291062,8.895216,3.089663,7.067223,-4.122546,-5.298204,-2.613702,9.049840,-1.081625,-9.437903,9.214657,4.978259,0.761927,-1.756939,-0.328771,-0.192907,0.382393,-3.104978,-6.600830,3.613977,-8.596856,3.480347,-1.897416,-7.826657,-3.874815,1.695093,4.146474,-5.799658,-0.280647,5.785441,4.959475,-4.025311,5.624264,6.936832,-2.399509,-3.308225,-7.967878,1.940735,-6.993596,-2.946462,9.400585,-3.729840,-9.750158,7.790337,4.409863,3.244706,-3.485877,1.176014,3.831023,4.579875,6.459189,-5.228470,6.731961,-7.114054,-9.889178,-3.552626,-0.564129,-5.176922,5.041287,-1.042185,-6.706170,1.641649,6.009545,-4.220154,-6.056180,3.861035,9.419185,1.578642,6.220458,-5.488094,-7.872894,6.521907,-1.762976,2.041182,1.522622,-8.398491,-9.213010,-3.255964,0.238082,-8.217703,-6.425787,1.109699,4.880540,-8.095840,3.395194,-2.288696,5.654344,-5.812639,6.874573,8.678777,6.914341,-0.919553,-8.229424,-6.226214,0.153521,7.541310,-7.486826,1.532159,2.314145,-2.309159,8.796836,5.559644,1.030288,-1.575960,8.185815,5.681868,2.541862,-4.411915,3.276580,3.366531,7.089857,-0.868135,-0.192273,-9.313961,-3.545754,-1.167106,8.584088,-1.831887,7.877237,-5.529452,0.087646,-9.259509,7.121145,-1.022330,5.403132,-0.137889,-1.875264,-5.687911,-5.989261,-4.558987,2.461486,-7.730380,-7.654619,3.789629,8.788476,4.840181,-1.051393,-2.554022,-1.354185,-7.100927,-5.415351,3.423362,1.073658,3.234350,-8.243175,-1.537692,-3.161962,-4.675833,-5.650995,8.784560,8.021490,-4.028823,-5.549513,-5.932571,3.909144,-2.141486,2.260391,-1.451661,2.996839,-6.996275,9.892232,8.362543,-3.708430,6.022982,-2.930745,-9.684701,0.810428,0.762006,1.787730,-9.436552,-8.530969,8.695075,-0.960237,-7.569171,1.916519,7.896925,-9.886763,7.924207,4.275740,4.054379,4.775186,2.240141,-8.807276,-8.191300,-9.514080,-4.240439,2.316357,-8.825534,7.024565,2.814546,-6.649763,8.249223,2.798519,6.722427,8.675617,-1.638977,-4.982718,3.019535,-0.016589,2.106820,8.973035,5.811120,8.864512,-4.144295,5.707923,3.857683,9.976080,-1.627801,5.880024,9.680323,-8.856913,2.984465,6.863748,8.172306,-5.750341,1.127420,-1.098592,-9.420014,-0.564826,-9.709747,-1.081042,3.956181,-9.125138,0.664144,1.979706,6.253128,-8.123475,6.882961,1.832529,-2.388559,7.936659,6.344543,-1.647974,0.541721,0.719400,-8.102423,0.591620,6.364688,6.456655,-4.353264,7.989510,-0.137318,-6.461597,0.226484,-1.526927,-2.383117,9.004727,9.085397,0.901823,6.539373,-0.458655,3.184905,0.370817,-0.958091,9.764082,-7.109086,-4.087869,-8.654493,-3.832867,-9.188798,5.966041,-0.269988,1.859830,2.142927,-5.882646,9.055623,-8.229858,-9.226882,5.423137,6.326416,9.784735,2.736043,-0.965763,8.557808,1.360517,-4.229359,-5.904928,-3.626117,-6.439528,-4.273196,-1.513708,-1.886697,-0.260266,-3.320807,5.875885,-2.501316,5.822373,-1.380766,-5.564224,-2.816590,6.283861,-3.383949,9.765155,9.368811,-4.321211,-0.987189,3.648846,-9.104781,-7.377742,8.663003,-6.030624,-6.511646,8.254491,7.048097,-5.248672,-3.554986,-7.303823,2.398503,0.433596,-3.775348,6.868595,-6.767214,2.115730,-3.404482,2.412523,6.799680,-5.756138,-8.743232,-0.890918,8.701340,4.282126,-4.183974,-9.031553,-6.091656,4.973873,-7.675327,0.345745,0.621803,6.813567,-1.033969,-4.939764,-7.894689,-9.119103,-5.596902,-1.701718,7.035927,6.687182,-3.390641,-8.915939,0.652647,2.671096,-1.208699,-3.815643,4.135902,8.568554,0.316261,6.564869,-1.073033,-6.961310,-3.593143,-9.825097,-9.139064,3.131857,-3.631298,4.075227,7.792966,8.941668,-0.717615,-9.435666,0.228898,8.816920,3.534265,-4.178234,-5.875597,-3.451883,5.778815,3.791557,7.243670,-1.104697,-9.113654,5.674318,-2.438395,7.083798,5.006303,-4.392178,6.417321,4.230963,-7.375583,5.134620,-3.132183,0.447691,-3.311881,7.722215,-3.899401,8.339867,-1.815285,-4.421036,2.667492,4.641466,1.633753,6.313083,0.166473,5.870044,-5.698277,1.808818,2.791973,7.081555,9.338269,8.862446,-7.072600,-7.303614,2.843024,-0.568224,-8.194042,9.579481,3.342015,-4.608664,2.253777,2.980444,-8.328496,-5.668673,9.563782,-3.469180,1.313108,-6.826019,-4.777043,-5.871868,-2.850481,7.113644,-3.451255,-4.421442,3.009158,-6.183827,6.556743,2.359285,-4.428657,4.042583,3.095737,-5.845314,5.955672,-9.144699,7.996992,5.858714,0.786445,-6.698592,-5.953839,-4.979820,-6.923657,-4.663417,-2.384877,0.430447,-7.672793,-2.746641,-8.265371,-3.064009,-5.360081,-4.105155,5.416958,0.262032,-1.337227,-6.196156,-5.380070,-6.698372,8.023522,-1.538767,-2.425236,6.281993,-9.213538,-3.035111,-2.611062,-0.797114,-4.682193,0.532047,5.605003,-6.558042,-9.354470,-1.549074,5.980284,4.778076,6.900625,-8.166409,-8.369818,-5.631266,-8.613022,5.241716,8.464700,1.244186,-1.820046,4.999719,0.263193,5.084062,-6.453581,-0.397688,3.364368,9.610851,-5.544730,-5.464879,3.346258,2.523216,-1.395963,-1.819550,8.199333,5.334090,-4.242355,7.228669,-9.140025,-4.300665,-5.246749,5.036600,-5.432244,-4.239742,-1.762275,5.682634,-3.910410,9.805758,-4.817681,-0.291421,6.015448,3.649595,5.277869,4.095269,-8.234548,-1.013557,4.929495,-4.021208,-6.631564,-6.704973,3.883075,-6.850540,-2.333619,-3.712026,-1.816123,-5.462407,-8.194283,7.833863,-8.606416,-6.158431,-2.458753,0.117124,-6.780468,-6.491906,9.988961,2.151963,-9.242236,-6.489069,-8.478300,0.158998,7.744834,-7.522775,-8.492339,9.531450,3.736958,9.054527,9.409597,3.895913,-4.647281,-0.175925,-1.035979,-0.195545,-3.967945,8.380981,-1.617206,3.391400,1.728125,7.603835,8.657184,-3.873602,-2.200470,1.294546,3.576506,8.319546,-4.383614,2.070679,-7.419757,0.778667,-4.789246,7.459151,-1.659250,-7.800734,-3.123966,2.015366,9.389507,-9.304673,9.117200,7.299290,-5.463652,-0.705915,-2.635107,8.183255,4.141173,9.246625,-6.090417,-8.894207,9.059103,-6.731482,8.283805,-7.692113,8.553770,-7.985199,-1.197319,7.694596,3.426200,9.194771,5.417129], dtype = "float32")#candidate|14743|(1260,)|const|float32
var_14744 = relay.var("var_14744", dtype = "float32", shape = (450,))#candidate|14744|(450,)|var|float32
var_14745 = relay.var("var_14745", dtype = "float32", shape = (48,))#candidate|14745|(48,)|var|float32
var_14746 = relay.var("var_14746", dtype = "int64", shape = (330, 2))#candidate|14746|(330, 2)|var|int64
call_14742 = relay.TupleGetItem(func_12377_call(relay.reshape(const_14743.astype('float32'), [1260,]), relay.reshape(var_14744.astype('float32'), [10, 45]), relay.reshape(var_14745.astype('float32'), [1, 48]), relay.reshape(var_14746.astype('int64'), [660,]), ), 1)
call_14747 = relay.TupleGetItem(func_12383_call(relay.reshape(const_14743.astype('float32'), [1260,]), relay.reshape(var_14744.astype('float32'), [10, 45]), relay.reshape(var_14745.astype('float32'), [1, 48]), relay.reshape(var_14746.astype('int64'), [660,]), ), 1)
var_14752 = relay.var("var_14752", dtype = "int64", shape = (330, 2))#candidate|14752|(330, 2)|var|int64
bop_14753 = relay.greater(var_14746.astype('bool'), relay.reshape(var_14752.astype('bool'), relay.shape_of(var_14746))) # shape=(330, 2)
func_9453_call = mod.get_global_var('func_9453')
func_9456_call = mutated_mod.get_global_var('func_9456')
var_14757 = relay.var("var_14757", dtype = "int8", shape = (1056, 1))#candidate|14757|(1056, 1)|var|int8
call_14756 = relay.TupleGetItem(func_9453_call(relay.reshape(var_14757.astype('int8'), [16, 6, 11]), relay.reshape(var_14757.astype('int8'), [16, 6, 11]), ), 0)
call_14758 = relay.TupleGetItem(func_9456_call(relay.reshape(var_14757.astype('int8'), [16, 6, 11]), relay.reshape(var_14757.astype('int8'), [16, 6, 11]), ), 0)
uop_14778 = relay.atanh(var_14752.astype('float64')) # shape=(330, 2)
func_6990_call = mod.get_global_var('func_6990')
func_6992_call = mutated_mod.get_global_var('func_6992')
var_14788 = relay.var("var_14788", dtype = "float32", shape = (3584,))#candidate|14788|(3584,)|var|float32
call_14787 = relay.TupleGetItem(func_6990_call(relay.reshape(var_14788.astype('float32'), [14, 16, 16])), 0)
call_14789 = relay.TupleGetItem(func_6992_call(relay.reshape(var_14788.astype('float32'), [14, 16, 16])), 0)
bop_14794 = relay.bitwise_and(uop_14778.astype('int8'), relay.reshape(var_14746.astype('int8'), relay.shape_of(uop_14778))) # shape=(330, 2)
uop_14800 = relay.sqrt(bop_14794.astype('float64')) # shape=(330, 2)
output = relay.Tuple([call_14731,call_14737,const_14738,call_14742,const_14743,var_14744,var_14745,bop_14753,call_14756,var_14757,call_14787,var_14788,uop_14800,])
output2 = relay.Tuple([call_14732,call_14739,const_14738,call_14747,const_14743,var_14744,var_14745,bop_14753,call_14758,var_14757,call_14789,var_14788,uop_14800,])
func_14807 = relay.Function([var_14744,var_14745,var_14746,var_14752,var_14757,var_14788,], output)
mod['func_14807'] = func_14807
mod = relay.transform.InferType()(mod)
mutated_mod['func_14807'] = func_14807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14807_call = mutated_mod.get_global_var('func_14807')
var_14809 = relay.var("var_14809", dtype = "float32", shape = (450,))#candidate|14809|(450,)|var|float32
var_14810 = relay.var("var_14810", dtype = "float32", shape = (48,))#candidate|14810|(48,)|var|float32
var_14811 = relay.var("var_14811", dtype = "int64", shape = (330, 2))#candidate|14811|(330, 2)|var|int64
var_14812 = relay.var("var_14812", dtype = "int64", shape = (330, 2))#candidate|14812|(330, 2)|var|int64
var_14813 = relay.var("var_14813", dtype = "int8", shape = (1056, 1))#candidate|14813|(1056, 1)|var|int8
var_14814 = relay.var("var_14814", dtype = "float32", shape = (3584,))#candidate|14814|(3584,)|var|float32
call_14808 = func_14807_call(var_14809,var_14810,var_14811,var_14812,var_14813,var_14814,)
output = call_14808
func_14815 = relay.Function([var_14809,var_14810,var_14811,var_14812,var_14813,var_14814,], output)
mutated_mod['func_14815'] = func_14815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14838 = relay.var("var_14838", dtype = "float64", shape = (11, 15, 16))#candidate|14838|(11, 15, 16)|var|float64
uop_14839 = relay.sqrt(var_14838.astype('float64')) # shape=(11, 15, 16)
uop_14855 = relay.log(uop_14839.astype('float32')) # shape=(11, 15, 16)
output = relay.Tuple([uop_14855,])
output2 = relay.Tuple([uop_14855,])
func_14867 = relay.Function([var_14838,], output)
mod['func_14867'] = func_14867
mod = relay.transform.InferType()(mod)
var_14868 = relay.var("var_14868", dtype = "float64", shape = (11, 15, 16))#candidate|14868|(11, 15, 16)|var|float64
output = func_14867(var_14868)
func_14869 = relay.Function([var_14868], output)
mutated_mod['func_14869'] = func_14869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14609_call = mod.get_global_var('func_14609')
func_14610_call = mutated_mod.get_global_var('func_14610')
call_14983 = relay.TupleGetItem(func_14609_call(), 0)
call_14984 = relay.TupleGetItem(func_14610_call(), 0)
uop_14989 = relay.cos(call_14983.astype('float64')) # shape=(11, 8, 9)
uop_14991 = relay.cos(call_14984.astype('float64')) # shape=(11, 8, 9)
output = relay.Tuple([uop_14989,])
output2 = relay.Tuple([uop_14991,])
func_14998 = relay.Function([], output)
mod['func_14998'] = func_14998
mod = relay.transform.InferType()(mod)
output = func_14998()
func_14999 = relay.Function([], output)
mutated_mod['func_14999'] = func_14999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14609_call = mod.get_global_var('func_14609')
func_14610_call = mutated_mod.get_global_var('func_14610')
call_15000 = relay.TupleGetItem(func_14609_call(), 0)
call_15001 = relay.TupleGetItem(func_14610_call(), 0)
func_13895_call = mod.get_global_var('func_13895')
func_13897_call = mutated_mod.get_global_var('func_13897')
const_15009 = relay.const([[8.762203,-5.162960,-1.293576,1.782508,5.541314,-4.884228,-6.377504,-3.400265,9.734144,-8.557084,-3.080988,2.540692,2.402215,-5.907811,2.803996,5.100651,1.988530,-4.882677,0.320655,-9.909900,0.273004,-6.739876,3.890163,9.719604,1.476169,5.920003,8.160333,3.347629,-3.170486,-0.228121,-0.545361,-6.691031,4.158197,6.781362,4.126909,-5.758690,-0.671309,-2.342504,0.872894,-9.757689,4.713862,-8.227715,-7.692230,-9.041184,0.566998,-3.539918,-4.919897,-7.922101,6.961500,7.559284,6.560803,-7.657786,-3.497214,3.052095,-1.480276,-8.298582,-5.867951,7.817264,-2.671757,5.701743,-1.891628,2.639464,-8.867912,9.971682,-1.605417,-4.367319,-6.397388,6.888083,-0.042043,-8.487064,7.643292,-9.094120,7.016914,-3.820366,3.660732,5.366293,-8.606072,4.299225,-6.838767,-1.345336,3.791956,-7.859370,1.132334,-3.815089,1.770083,0.901866,8.555510,-8.348444,0.469937,-3.874555,-6.889893,-0.924494,-8.625276,7.765882,-1.915188,3.805040,2.648838,3.439917,-3.311567,-8.158638,-3.215985,-6.030756,3.417608,-1.075655,8.770143,-9.460088,2.531471,-8.569780,-3.188954,-7.339446,-6.683267,-1.930202,-8.987831,-5.299722,5.044833,-8.841799,-3.394946,3.611844,1.597938,-0.930672,-9.107590,-6.055606,-4.228075,6.164192,-9.650579,5.986441,-8.400741,-8.648262,-0.067455,6.507707,2.149532,4.350609,-7.815871,-4.210897,2.919594,-4.119821,6.319191,4.560006,-1.894353,-0.179171,-7.735539,0.056820,0.488305,4.369826,-5.983159,9.343865,-7.994596,-0.934096,6.622491,-0.761439,4.973787,-4.907786,0.143653,-8.092853,-7.085856,4.540981,1.444492,9.386862,-2.256025,-0.229978,9.904824,6.786614,-0.688826,-0.197718,-5.894254,-7.533531,-3.376743,-2.294841,-5.354727,7.007446,7.482305,-7.003032,2.116456,8.064772,-9.189907,-4.128315,8.060243,-2.062649,0.117562,2.390409,2.175603,-4.859631,-7.996020,-9.662796,1.335523,8.557690,-2.431247,7.871566,-7.770617,4.751155,-4.182445,-5.290676,9.983889,-2.246273,-3.362162,-6.495292,7.870278,9.649189,6.961947,6.877915,5.550008,5.719246,-8.596650,9.977563,2.864911,0.922451,-0.657267,4.371763,-1.058077,3.328932,9.332702,6.572514,-1.142605,-7.843501,-6.981369,-1.151830,1.945966,9.202710,0.146521,-8.842865,6.443044,-6.275547,4.547800,-2.068394,9.397739,-5.311327,4.892203,-4.418169,-4.222537,-4.258163,-5.582633,-7.008643,-7.061870,7.045978,-6.709297,5.815707,9.045403,-2.134209,8.300385,9.528559,-4.984804,-9.813684,7.298720,2.313306,9.036252,-2.139889,-0.416292,4.818206,-0.859042,-0.370430,-9.985315,-2.944732,-6.446920,8.453349,5.117711,-9.985769,-7.937373,-2.651132,4.508413,-5.810356,3.936247,-2.051707,7.264252,-2.285371,-8.530187,9.568452,-9.809970,6.445721,-2.409117,2.623376,2.808866,8.932884,-2.149741,7.374989,6.886875,-2.560594,-6.878441,-5.017357,0.261688,8.306447,-2.927284,-3.615046,-4.864184,6.264838,-3.043202,0.232372,-6.604334,-5.673725,-2.214873,6.269385,8.372778,-0.610846,-9.047649,2.008712,4.729713,-9.759661,7.446560,0.216355,-5.491476,-8.964358,0.721269,-4.932481,-7.330003,-4.084645,-8.094799,-7.845483,1.201358,3.657050,-5.827515,4.581164,4.333761,4.071855,4.680647,-4.352191,4.793425,-1.999838,-0.187322,-6.198936,9.330684,5.277866,-8.310876,7.663627,-1.593960,-2.134160,-3.202109,1.658595,1.099785,-6.514544,8.961320,-2.194878,-0.634307,8.799690,9.102963,1.084120,-5.898367,-4.697434,0.712700,-1.595182,-6.548323,-5.010806,7.327205,-2.765983,-8.903689,6.093207,8.238536,-2.967089,-2.352849,1.749060,2.650366,3.005247,5.321477,0.601010,5.959373,0.976391,-2.026577,-9.592541,8.518682,-8.041776,-4.214950,3.133458,5.405131,0.675788,4.202915,3.342528,4.125871,-7.869091,-6.974969,0.918814,4.595176,5.194317,-7.359209,5.498816,-3.112618,9.286170,5.763893,-2.394987,-2.342350,2.871141,-0.554395,3.425633,0.570816,1.332060,4.520184,1.778638,6.710732,-6.985358,8.707426,3.727019,2.342643,-5.946521,7.246947,6.559132,-1.748857,8.543834,8.147283,-7.819792,-3.763921,-7.380950,0.734060,-3.553357,-1.772785,-2.660790,5.052289,3.738982,9.825713,0.772179,-3.584013,-9.602725,0.922793,-4.459411,-0.923124,3.189121,-4.282031,-4.047930,-2.654281,-4.663285,5.259772,-8.955901,-4.382671,9.892051,9.041525,-7.735659,0.963470,-5.266201,-1.464126,1.480080,9.885093,8.419606,-1.253522,4.845260,-2.035643,8.758208,2.485371,-3.228294,6.486395,4.216839,7.278855,9.939041,-4.124329,3.985596,-6.549832,-1.386431,-4.473683,1.139525,6.612881,2.987282,-3.948664,-2.296828,-9.735294,0.211220,-8.601481,-9.077248,-1.081219,0.934262,7.187801,5.896574,4.784433,2.854440,9.842888,0.235355,-1.244119,-6.327167,9.718285,-7.615831,-7.618689,-1.621024,-9.707938,-4.234411,-3.322584,5.089619,-9.897657,1.657686,-8.271558,4.697777,5.666756,7.322385,7.126403,-8.090535,-9.072890,-4.557866,-5.320057,5.437032,8.220520,9.133027,2.714983,0.727940,4.441914,-7.143407,-6.094197,8.699671,-9.254039,7.959314,-6.555020,-8.577908,-5.370797,0.633837,2.738781,8.404844,-3.117485,-7.275718,6.544112,-9.588856,-6.471406,2.981155,-4.375207,-2.722486,4.564473,0.111646,6.354552,-1.058900,-8.801804,-3.363790,-1.263922,9.885059,-9.237420,8.784500,4.975414,-0.146801,-5.283842,-3.230916,-4.918782,5.722712,-5.916418,-4.249392,-7.123165,0.804165,-5.829184,6.482989,0.899169,-0.524740,-1.186393,-5.587123,4.041482,-8.346209,-6.277125,-5.027177,3.204869,-6.404153,-2.739975,-3.635495,7.419964,-0.237933,0.919059,-0.509738,-0.091901,9.793851,-7.863642,-2.433773,-6.232857,3.673648,-7.361861,-2.452986,8.279195,9.588733,5.681367,5.869715,-3.675596,-4.541960,7.678227,-9.381128,5.459641,-0.945780,9.079236,6.921000,9.789805,-5.693241,1.712154,-8.021950,8.970822,-0.514968,3.743864,4.598454,2.229441,7.103471,4.609416,-3.861283,8.284587,-1.689250,-6.602442,9.877805,6.127756,4.366531,-0.885438,3.137442,2.649993,-6.735597,0.464575,-3.813601,9.335982,1.214009,-4.875791,-2.461368,2.447418,-2.272408,-9.725607,3.938694,-1.476635,-0.077913,-5.792600,-3.256061,-4.451586,-7.414764,4.485770,-0.340460,5.249156,2.001507,-3.146938,6.178936,-0.947999,7.358275,3.497184,-8.481090,6.991520,-4.029279,0.699619,1.047360,8.117792,9.382711,1.534357,-7.477864,-5.745976,-6.534813,3.691113,-0.823730,7.857857,-8.573330,-5.283976,-4.804324,-9.612532,-8.906269,-8.181345,6.186745,3.849781,-4.988227,-7.209315,7.788002,-6.689946,3.296407,-7.983021,8.787980,7.463216,-6.637680,4.719118,1.397596,-8.162554,1.035260,-9.786196,-1.316671,4.746672,-2.521953,3.693157,-6.848936,9.986183,6.921942,7.677809,1.254843,5.894392,4.550342,6.978296,-5.974118,-6.477431,-9.141058,-4.841100,-3.655080,3.221351,4.472471,7.428544,-1.790438,-7.761709,-4.486831,-4.280648,-9.301369,4.786505,-4.672644,3.192421,-4.321442,-9.485257,-5.796195,-3.773608,2.237235,8.808356,-7.742575,-6.560278,3.927700,6.935799,3.080859,2.799758,5.074570,0.147914,4.987890,-2.067284,-3.517937,-2.049589,9.879625,9.428558,-9.306900,3.684655,8.236975,6.494943,-3.147812,-5.362183,3.984644,-7.282740,3.984682,-1.947816,-3.100705,-6.542662,-6.760175,2.598863,9.585654,-7.383889,8.565703,3.602521,1.547863,5.172116,9.676484,3.047777,2.344720,2.691998,1.682487,-7.893182,-2.733358,-8.586999,1.480426,-2.854065,8.720687,1.623131,-0.795255,5.665321,3.222541,-0.475218,9.597807,6.388285,4.207228,1.381924,0.073917,-7.420259,-0.855271,-5.002567,-0.764909,8.971675,5.060969,-2.590792,3.384357,3.339894,-5.525251,1.961094,-1.520251,-6.440405,1.348042,-7.244276,6.841779,-2.405074,-9.897308,-8.584383,5.028515,-5.669100,-9.012301,-7.643262,-0.418591,-4.764920,6.363741,-9.889771,8.465687,0.156663,-8.591769,7.476347,-8.394066,-9.894810,-6.103239,6.529567,-4.005893,-8.056780,-8.660383,-9.083245,-3.332971,8.796861,-4.760258,9.315487,0.093914,-6.862649,6.378096,3.864120,5.621461,-6.403514,-2.021804,8.269879,3.503418,8.179062,-1.230387,-1.302166,9.724637,3.946342,-3.456944,0.096035,1.898805,2.739356,1.892472,9.941898,-3.138914,-7.507105,3.078265,6.863461,8.281584,5.465867,-0.651572,-5.266199,1.574580,5.565384,1.141456,1.900461,-8.131917,5.709211,-4.419117,-3.359954,-5.139694,9.157854,-7.455909,-7.921676,-9.609363,-9.819675,0.552052,-4.448284,-7.612274,-2.869833,-3.205851,-3.158078,0.254495,-7.058729,-9.555337,-8.104959,2.858258,9.883809,9.649914,0.873307,7.784034,-7.175597,-8.174650,7.977048,9.337546,-3.509266,-0.465532,-3.728550,-4.772697,6.328614,-3.279344,9.472390,9.197964,9.975946,-0.168793,-0.292921,-1.325744,3.935322,8.186661,5.990774,-2.871145,-9.170850,8.253612,-5.433330,4.850107,-9.070980,-5.962932,6.338642,-5.074905,-5.181718,6.958324,-3.446437,7.860183,4.611614,6.837254,0.247329,-7.418830,-2.024564,1.449754,-2.021741,-0.856928,-4.208543,-0.266048,-9.333340,-5.696738,-6.175084,-6.147641,-8.093209,-1.901593,-9.417862,-6.962426,6.600874,-5.585958,-7.166557,9.277816,-6.765318,-3.218441,-8.437015,4.357678,7.552890,9.227867,9.006076,3.521972,6.927907,9.041548,4.635636,-3.251885,9.986099,-8.585099,-9.489151,-9.529792,3.805342,1.736826,8.631988,-0.346984,-5.420047,-0.267416,2.889651,8.610548,1.751192,7.156340,2.860677,-1.673602,-3.091384,-3.885886,-4.479512,0.460989,0.476180,7.849055,7.927791,-8.718018,6.549466,-8.580740,-6.042528,5.802019,-8.911489,-8.644375,-8.895647,-1.571014,8.604328,0.043328,2.086759,8.787776,6.534516,-8.601963,-2.518739,1.350576,0.616081,9.045180,5.160625,-9.812077,8.556053,6.799809,7.026970,-8.560197,6.926625,-1.592115,-0.263549,8.658316,-0.117339,9.853457,-7.774159,-0.597947,-8.093011,3.266187,-6.813330,0.470190,-0.304133,-2.626020,5.557909,-7.265689,-2.356140,5.299276,-5.927680,2.726122,-3.763897,-1.719867,0.450516,6.507680,-6.708154,9.584404,-7.445743,-0.019126,-8.418189,-5.086037,1.082321,-2.669523,2.370465,-7.807332,-7.591260,-2.588301,-9.558572,-5.446993,5.680395,8.068162,-5.839094,-4.577696,-7.345103,-6.916945,1.047686,-0.111824,6.035273,9.273105,-3.234215,0.352662,7.861291,-2.280742,-4.196154,0.522117,-4.270766,9.850780,0.855836,8.911555,-9.983611,-1.267304,-6.618708,-5.608940,3.260060,-5.952823,2.976358,8.786979,3.678183,8.639763,-5.166895,7.368284,6.903906,3.149731,-5.058979,-1.511645,-8.102511,6.165721,9.807193,6.108644,3.807871,0.920809,0.290661,3.115810,-4.863275,-6.478682,2.946951,3.757655,-3.633863,0.979680,0.363367,3.524641,3.943845,-7.526462,-3.738862,0.989402,4.942201,-1.472432,5.874222,1.619294,-8.338613,-6.875256,5.348490,9.815931,7.187359,-5.204428,-3.968788,-3.312797,-9.795186,0.350146,-2.145943,-1.821872,0.808549,-4.907585,-2.913717,-8.852967,7.850558,-8.790414,-2.594575,-8.198958,9.038389,-3.488683,-3.388406,6.779021,1.605586,7.077208,6.807214,7.928828,8.336025,-6.009626,5.938668,-2.249949,2.421781,3.854957,-9.362776,0.463106,-6.869253,-4.456146,8.291443,-3.260571,-0.028681,-7.151839,6.243676,-9.567101,-8.361463,7.194971,1.060879,-3.694276,-3.762486,-8.053888,-6.004394,-6.205761,9.016823,6.139617,-1.902678,7.022632,-1.932256,3.649136,0.462145,-3.253219,-9.239063,2.303105,8.546574,-4.228370,9.114904,5.104135,7.866770,-9.452220,-3.646899,6.253129,8.654023,7.223324,-9.588901,-6.853973,-6.971865,6.105204,-5.748641,-7.903986,8.609616,8.407967,2.183532,-9.792354,9.563453,3.317550,-1.114756,-2.374311,5.072070,0.917105,-8.371799,9.176670,-8.686171,0.698168,4.166031,4.381165,4.540061,6.495395,5.663472,6.739474,-8.731264,-7.076764,4.922710,2.887113,-6.918332,-1.450466,-2.490646,2.117634,7.266187,6.207259,-1.191022,2.738923,8.889681,-5.949863,-8.493021,3.792810,-2.889030,5.235860,5.496695,-2.037422,-8.167316,-8.433495,-2.660015,0.754299,1.243503,-6.612657,6.897134,8.118102,-0.621593,2.219242,1.693190,5.421058,-2.801882,3.089018,3.457318,8.319611,-1.538340,-3.644631,7.848191,-0.956577,-7.845370,-5.302475,-6.190295,5.346422,6.074158,9.754010,0.315840,-3.274317,-9.665807,0.287402,6.281781,7.632704,0.246240,-7.089142,8.833908,3.616873,4.483734,-8.294044,0.273947,-3.804988,-5.441124,6.872845,6.422252,-0.046552,7.268066,0.944597,-5.788853,-0.600887,8.718078,9.630449,-3.161130,-8.086880,-5.646961,9.576289,-0.240481,2.732531,-7.499042,8.782436,-5.026820,5.488236,3.465427,7.826766,0.562947,9.709474,-4.124587,7.235087,9.386047,2.746224,-2.622748,8.202852,-7.081893,-7.030996,6.630298,-2.227705,5.098951,4.389231,6.922519,-6.621123,1.168081,3.993273,-7.752920,-9.511454,-2.276252,-5.825652,-2.944728,-2.794420,-1.020158,7.428181,-5.266108,9.307068,0.645474,-7.788789,1.168871,8.148187,0.623096,4.092755,-0.034056,5.018249,2.341597,8.475838,-0.191827,-5.565768,-4.607773,-1.626472,-8.644205,-9.502992,6.717196,-5.038973,-9.887949,7.611899,-6.273794,6.836398,-2.850884,3.615489,-5.160168,3.080137,-0.292753,2.187000,-4.412623,0.370987,-4.465657,-6.457930,1.785017,-3.714137,5.247982,6.881688,-8.484036,-6.850558,7.034283,-2.970411,-9.558299,-2.531696,-2.072447,-1.120919,-1.377982,9.867465,1.912862,-0.116021,-4.134432,-8.255230,-2.396896,3.969777,9.493712,9.937773,7.234853,-1.597419,8.814085,2.576849,0.168353,-8.218401,0.375951,-7.175411,-3.678725,0.457625,3.369761,-2.988310,7.197691,8.898976,5.131071,-0.994101,-3.968604,-3.600762,8.384619,9.824416,4.053583,-9.705436,4.718879,-4.671955,0.179821,-9.924986,9.658296,-9.741375,-0.229431,9.297743,-4.359720,7.355415,9.320587,9.245013,0.709245,8.564184,-4.284248,6.893755,-8.575547,3.040961,-0.773868,-6.204005,-4.736714,-9.476580,-9.002745,-0.915286,9.722789,-2.844307,-3.757409,-8.554004,-3.670387,-4.403488,5.567883,4.495835,5.824149,-4.569069,-2.049047,-3.404862,0.368922,-7.186397,-2.684555,6.901225,-4.380130,-1.968197,3.107068,-8.826353,-1.819047,-1.105089,-5.411881,1.858852,6.785038,3.780395,2.346790,-6.479264,0.124543,-2.063725,-7.823889,4.273724,5.370269,6.807671,-7.763069,0.820282,-7.878295,5.401187,6.428567,1.318679,-6.943390,-7.944951,-5.276001,-8.142153,2.675399,1.940994,-7.888433,-0.311555,5.348871,-2.377778,6.252210,-2.192766,-9.159604,3.801174,0.422373,-9.470529,2.935257,0.205943,2.014951,7.213682,-6.575081,-5.277687,-6.019148,4.411784,-0.726570,3.108012,7.550486,-3.192501,9.647819,9.007922,-2.106146,-2.133171,-6.104834,2.587254,-0.773607,9.491045,0.762664,2.401904,-5.500986,0.362244,5.755362,7.696046,4.707806,-6.231525,1.742783,3.419963,1.500445,9.298574,1.434152,0.959260,-3.938824,-7.453498,0.738001,8.330077,-8.370171,-8.865667,6.838026,-2.358953,2.544270,-2.414180,-0.570328,-5.900631,6.139662,-8.694782,-4.748909,-4.159844,-5.773148,2.654732,2.711563,2.503921,0.519795,9.677917,6.615378,6.830945,-5.964975,5.063959,3.331856,-1.551044,-7.269493,9.275985,-9.307406,8.106284,0.299677,-6.929095,3.868878,-7.436540,-8.952073,5.833039,-0.009744,-1.394145,-0.429119,4.225705,-8.678398,0.702984,-3.079567,7.018347,-2.772884,3.913485,9.277001,-3.656573,-1.528580,-4.046409,-3.272804,-7.719579,-7.899097,6.898842,8.016017,1.173120,-9.386660,-1.139717,7.353259,-1.964862,-4.693143,6.173388,4.700325,-7.387167,8.626678,-9.117664,-7.856639,-2.753215,-2.258757,-5.081686,-9.097604,3.108212,-6.988532,-0.268997,5.639012,9.983449,-9.966864,-2.414595,7.890336,1.353827,5.453472,-1.143726,5.889320,-3.653599,1.350234,7.465371,-4.536394,-6.503958,-1.439850,8.957198,3.012723,5.166106,2.534735,-3.273411,-9.001106,9.969773,7.915170,0.475863,-3.224003,-2.018562,-0.475857,-1.423789,-5.533364,5.767255,4.907071,5.039689,-4.664487,-7.607139,-0.700865,-5.348560,1.658363,-7.455545,3.893801,8.562208,9.999887,0.101335,0.523599,4.069301,0.018191,-6.387020,3.555787,4.223825,-8.516006,0.700262,-4.864761,3.006075,-4.738420,5.850973,3.933159,4.023645,-9.895987,3.387089,-8.844836,-6.480464,5.205359,-6.391552,-6.268720,-4.640628,-9.350719,4.563464,7.041784,-0.318605,-3.441668,-9.958636,-6.668237,-3.706226,-4.312020,-5.445513,-8.535515,-0.206781,9.881714,-4.471549,8.804042,-8.520571,3.446870,-7.581073,-3.231298,-5.092918,-6.436281,-2.730440,-4.196645,-0.611424,-5.084630,-0.579780,8.910289,9.417286,7.805050,-9.182382,-5.350838,-0.022964,-6.594137,3.358428,2.207264,1.738306,-5.862294,-8.761004,-7.204914,0.840587,8.090797,-3.918737,2.682745,3.050607,2.492913,9.749299,-0.222908,3.058645,-6.042798,7.421191,-4.427806,-7.803521,3.915378,-3.886762,4.399595,-1.952430,5.177300,8.775445,-2.741584,4.696382,-1.964959,-8.311255,9.054991,6.020229,-1.314359,3.523674,4.338488,4.858589,4.302224,-9.268390,5.938512,3.219351,0.496560,7.604894,-1.739483,-4.404334,0.051884,5.171428,-5.362315,4.052249,-9.456076,-6.398550,-8.544111,-3.403126,9.066659,-5.763398,2.398607,6.512714,-9.039027,3.475146,8.937374,1.640135,-7.340974,4.216133,8.311236,4.764784,-6.423313,3.670863,0.518904,-7.390175,-2.563101,3.925976,-7.513726,3.000986,-8.181236,7.907365,-4.926276,-7.381064,-5.152930,6.915239,-1.247582,5.951827,-7.011629,0.847830,-8.300844,-0.808461,-6.663269,-1.345671,-3.864948,0.323931,-6.531879,5.325809,6.411813,2.266781,7.499995,9.756079,8.293569,-7.846022,9.148149,4.396660,6.470543,8.618569,-0.575122,9.991558,7.875908,2.736182,2.078539,-9.848491,-5.658046,-9.798010,-6.448463,-1.347899,-8.792977,-3.684293,-7.681976,7.144609,7.382417,-9.179235,2.726168,8.323846,-6.336051,-1.355644,4.752932,4.199530,4.310298,2.108816,2.322113,5.467401,3.762068,-6.056659,-6.026325,0.684365,-0.674494,5.817685,1.260906,-6.145238,4.274472,-1.181747,3.726304,-5.518026,8.744334,-0.312767,2.867484,6.448703,2.182439,7.270837,7.186278,-6.682508,-1.300565,5.329293,-3.773456,8.992681,3.322941,-8.726953,4.580965,3.263535,-1.435002,-1.758572,1.612666,-9.391720,4.474726,-6.818374,1.231977,-4.049831,-9.795410,9.088493,4.149836,-5.995188,-6.302093,7.270881,-6.334436,5.564184,-8.208640,-8.738452,3.723491,6.308475,-5.645144,4.743302,-7.707875,2.517276,-7.136334,3.115242,-4.884922,-4.085300,-9.522983,-3.056119,-6.435901,9.302632,5.874284,-4.511164,4.591159,4.537092,-3.846027,6.736225,-6.935001,1.179591,8.917658,-0.030162,2.944622,2.426818,-1.135722,-8.234252,4.124531,-6.924786,7.648516,2.831440,-3.486898,9.534599,5.485427,9.619914,6.779034,-5.417539,3.747157,-6.026561,9.206525,-4.877248,-1.135426,-8.426919,-1.934358,-9.253010,-9.850684,-4.489931,5.276565,9.760263,-2.450793,-5.041530,8.579997,0.451593,-4.549416,7.180758,6.565849,2.129671,-7.533472,5.981544,-0.114109,9.662420,5.827959,9.036629,3.875378,5.810570,1.047889,9.157841,5.884080,1.425596,1.595869,7.459263,-4.393702,-0.287918,4.549299,-0.853571,5.004612,-7.427712,4.256815,9.467633,-8.217177,7.313674,3.920714,-6.960257,3.693878,-1.656783,0.259882,1.410667,-8.243825,-7.813038,2.765494,-0.072653,-1.022854,6.312371,-1.248247,-8.143172,7.826407,8.369973,7.997840,8.660648,2.041802,6.844924,-4.612250,2.496819,-4.247404,-2.942636,-0.774792,-9.036950,0.848150,-0.285003,6.732176,-7.569540,-7.786408,3.728095,1.781186,-2.091583,-7.830521,0.955505,-4.651210,0.042332,4.951286,-2.830662,-1.383506,-7.792429,-2.209477,-0.513955,-3.604579,0.921853,-5.984783,-4.844922,5.418081,-5.764179,-5.084659,-7.046410,-3.895615,0.852587,7.448037,5.875531,-7.463838,2.633141,7.442693,-5.459246,-3.402593,-7.547169,-1.314843,0.436390,-3.598324,1.325711,4.331521,7.975264,-3.641985,2.346371,3.991293,7.702790,5.797415,-9.761537,-6.928616,-4.223804,-5.995872,8.898755,1.602999,2.595898,4.753583,-1.414050,-0.051852,-4.415572,-6.957360,6.967448,4.948715,0.779698,8.351102,7.866140,0.829382,9.729071,-9.269434,-0.631122,5.683683,0.516783,3.316402,7.270838,-4.478738,-5.350966,-8.354752,-7.552030,-5.416391,-8.649517,9.634120,-5.354898,9.156949,8.722790,-9.557477,0.226173,5.092581,-2.982309,-3.468022,-3.422811,-9.967728,4.825094,-0.748406,-7.050369,8.675961,0.571153,-6.203705,0.430474,0.086882,0.704883,9.523171,5.282368,-0.492446,6.914073,9.468846,3.192600,-6.762074,-7.976792,-8.759695,1.613237,4.628875,-0.884469,-7.115015,1.380131,-8.730037,-9.377285,2.094788,-4.132388,0.811320,-2.129541,-0.004304,-7.628065,-3.858858,7.452750,3.853128,6.153471,2.473937,-8.022666,4.123483,6.900040,1.581962,2.146446,3.093745,-7.430171,5.967759,-1.834518,-4.748660,-8.922386,9.986454,7.834963,5.510750,-1.007698,-4.034391,-1.020585,-5.312745,-6.412561,4.502412,8.852032,3.907519,-7.692702,-3.185440,-4.344001],[4.958650,-1.777543,5.398046,-6.585673,-5.319566,9.918571,4.995135,-8.105572,-2.628865,3.539309,5.293274,-6.323392,-7.942802,3.659124,0.495995,8.851173,5.003845,-1.432788,4.761954,0.795657,5.772816,3.639052,-3.901207,-3.643429,-7.147718,5.532394,-3.262988,-8.911971,-6.427606,-8.783647,-4.965026,-1.469403,4.585879,-6.943401,5.285544,-9.351010,-8.798064,-9.892953,8.474090,0.686981,-0.100406,9.747525,5.063279,-4.015057,-7.512281,3.620217,-6.654021,-7.418056,-0.286102,0.474157,-7.589470,-5.173175,3.154441,1.808975,-3.525943,-1.467947,6.798239,6.193730,2.495650,-1.127260,-8.713339,-6.720307,-9.173467,-5.922184,2.170695,-2.779662,3.975123,9.452083,0.602113,-4.737052,9.895934,6.499739,-0.932706,6.107164,-1.707619,9.937745,-0.663624,6.695280,-3.694343,0.651337,1.997146,4.398674,9.520798,8.035368,-9.778151,-4.011439,-2.740923,-2.043111,-0.747386,3.953805,-5.071046,-4.879552,-3.474569,8.555565,7.541640,4.218658,-8.544665,-3.630793,8.623943,8.709012,2.509306,0.874636,9.999545,-1.401571,-0.114986,-2.393812,5.428875,5.485550,-7.004660,-9.671984,0.888316,8.571509,0.719923,9.623976,1.788675,-8.821337,-1.192445,0.612272,0.271582,-9.227440,0.407262,-1.962895,7.062759,-1.510248,-2.571927,2.953000,-0.071610,-5.086100,-7.915260,-7.380418,-6.705909,-9.037733,2.553351,-4.662191,-7.624153,-8.222749,2.824941,-1.208237,-4.568372,-9.916653,9.303369,-7.245258,-4.181587,9.041114,4.704895,2.424956,-7.640340,-6.681837,0.777009,6.107985,6.758582,5.742469,-7.367551,5.505746,-6.166877,-9.352755,-2.773064,-4.949896,2.355750,1.130992,0.696886,-3.709873,0.418741,3.090505,3.864190,-1.777115,-8.806754,6.079998,9.807293,2.096525,-1.916996,8.028519,7.215999,-1.718462,-0.741909,0.639718,-0.901748,1.355686,-8.115549,-4.757010,8.473476,7.758303,-1.682364,2.566691,5.634324,2.420290,-4.470883,-7.836457,-3.065316,-6.754371,9.136766,3.674149,1.617262,5.404636,6.943936,4.145741,-1.297732,9.075799,0.139545,-5.172583,9.887412,-8.058932,-6.491773,6.319425,9.110552,9.411840,6.030495,-5.212391,-1.428181,1.815520,9.862590,-8.656652,7.758429,-2.306445,-5.880954,7.755973,2.365780,4.186085,4.691162,-9.878444,-5.924499,1.692728,-0.126963,-5.365784,9.495741,7.782215,-4.682584,-5.779472,7.535061,-7.415982,7.318351,9.780434,-5.308637,-5.667117,-8.313497,-0.827408,9.342177,-6.612162,-8.451650,-3.454130,-3.649443,-1.009667,4.469024,-1.003875,-7.283949,2.434282,4.280302,-8.622221,3.167541,4.467949,0.277908,9.295499,6.006126,9.789093,-4.192045,0.707198,6.639129,-3.355512,-1.098677,6.837161,1.077227,-1.250919,3.508681,-5.350253,2.217434,-0.733548,-9.935309,8.082893,-0.087063,6.740712,-4.588665,5.896952,-9.460745,0.871109,9.050514,5.857626,9.653711,2.483742,-6.350108,5.527898,3.978463,0.579495,0.318495,0.049260,5.268023,7.300948,0.879761,8.530862,-2.040400,-1.773663,5.270982,-3.937087,6.880289,2.925460,-2.109435,4.306246,4.997135,4.305511,-6.141092,-8.070257,8.199896,4.715662,-7.088497,-3.305412,2.656462,-5.631043,7.105031,0.648431,-8.472854,-3.990995,-7.826016,-0.553609,-7.153631,-9.060076,-2.574405,-7.975843,-2.557905,-1.480819,-0.962912,1.817285,5.669472,-6.371200,2.902773,1.947635,8.285902,-9.081938,-7.496347,0.241004,-0.283094,4.582131,-2.283988,-9.146840,9.094532,6.255247,9.499866,-2.073884,8.277477,4.117071,-9.594775,-5.312219,2.813740,4.349453,-8.540344,-0.410956,3.368581,6.866774,-7.107040,-0.939667,9.200592,2.318164,9.839041,6.949004,1.513543,2.496999,-9.974035,4.130871,-6.918337,7.010654,1.987512,3.731836,5.129308,-4.330379,-2.232509,5.752389,-6.181987,-3.506767,-3.339363,-2.847601,8.658240,-2.581720,-2.231740,7.675219,-7.080301,2.649833,-8.699201,-3.542832,2.885497,0.689966,-6.220799,1.804018,-7.405817,-4.767669,-2.326790,-8.662086,-6.487241,6.218538,-9.172313,8.773201,6.379218,-0.940581,1.351026,0.491200,8.475335,-8.892890,2.633569,-3.114293,7.438169,3.228445,-2.678805,0.258252,-8.510697,7.517273,2.199716,5.998116,4.941058,8.437826,2.251017,8.113629,2.733047,-7.089405,-5.586918,-5.290348,6.762099,0.032528,2.664722,-7.246549,8.319381,-6.964268,-3.818748,5.005319,6.386541,-9.285889,6.140908,7.357660,1.951711,8.327201,6.921169,8.288290,4.834662,-4.916491,-2.005667,-7.974177,-8.524176,-7.388669,8.969749,-8.798830,-2.826114,4.734268,-9.096290,0.442114,-9.312577,6.175297,-1.720614,-0.366602,5.493001,7.741862,6.075686,2.862313,-8.125482,-7.967191,1.850747,0.890359,9.860436,4.821772,2.232227,7.685180,-1.995738,2.265699,6.529986,-1.509799,-3.374842,-0.080246,-2.743277,7.143148,-7.743561,-4.496417,-3.638738,2.109408,-5.497886,-1.607713,5.803577,2.574024,-7.716501,0.112708,-7.162947,8.616219,0.015320,-9.831509,8.188517,-1.786569,7.611885,-1.283539,-9.857475,5.394813,-4.162959,4.506456,7.881462,5.126940,0.253806,6.995801,5.989614,1.876788,9.215779,-3.160267,5.648885,-9.509064,1.601199,7.016267,-2.642486,-2.219563,-8.332137,1.471303,-7.363248,2.700169,8.953349,6.157127,9.405766,1.927134,-4.295416,-3.866210,-6.550368,-5.979575,6.108734,-5.326015,-3.241555,-5.239639,-0.040164,-9.035287,9.126140,-6.090800,-0.037456,6.824122,-8.274557,-0.556913,-1.485872,3.787448,0.396317,-6.328272,9.224645,6.145287,5.719050,-9.491383,4.570892,-9.292786,-2.833637,0.931629,-5.888511,2.883407,7.785477,4.992674,-7.636303,-3.696808,-5.566911,-8.028419,7.297366,0.861288,9.308081,-5.573016,-5.439018,0.171693,-0.757324,7.805982,9.299678,6.397436,0.982561,-9.698506,5.687213,1.755614,2.702074,8.402166,3.748515,1.967553,-8.680356,1.869085,-6.994720,-5.666752,3.562443,5.846717,-8.924587,9.460307,2.890307,0.878496,2.456357,-0.390277,-1.162730,0.058154,-0.441195,-6.864785,1.627652,7.493765,6.396505,-9.072055,-1.316896,8.442777,-6.204673,-8.599912,8.711287,6.711121,-3.365328,3.405277,7.631730,0.201715,-0.927062,8.184131,3.940620,5.769874,-2.249064,-8.069649,-3.448348,4.807125,-7.182578,-9.640884,8.542113,-1.356232,-9.638025,-3.052213,0.990202,7.814471,1.513162,1.784895,-5.996630,8.810132,-1.235578,2.753244,-3.828903,2.915660,-9.483109,-7.820512,6.328522,2.597916,-4.668868,-5.888175,7.895159,2.944752,-2.350369,-6.820203,-0.657837,9.447053,9.716194,6.172135,6.209797,-8.361264,-5.380707,1.462206,-1.818327,8.831580,-7.565368,-5.284729,-1.356330,-0.068140,-4.939438,0.492243,4.914885,4.781722,8.452041,-2.176353,1.614480,-6.013398,8.493131,-0.289283,-9.990293,-3.914196,9.557803,8.452235,8.992310,-4.544007,-8.296496,-7.682699,-6.389229,-2.793291,-1.332683,-3.291227,3.490335,7.702783,-2.282410,-8.119877,-1.126993,8.251571,4.764131,1.129437,-4.562822,-1.689221,0.681855,-2.459005,-7.127431,3.074685,1.377728,2.557531,-7.588248,7.225402,-0.387109,0.339988,4.759083,-7.216051,5.271005,2.334516,6.395561,-3.596191,-6.515916,-8.560796,7.269063,3.196239,9.183466,-6.225870,2.330467,-8.608975,2.417063,-7.473326,-7.377815,-7.919463,-7.140228,4.891554,7.027571,-1.977450,9.902366,2.161092,-3.658746,6.510949,7.666962,4.191768,-7.970237,-6.356765,-4.689160,-4.328128,9.652091,-6.169094,-7.335261,7.411681,-7.242692,0.712586,-7.670992,-7.993956,0.609692,-4.322618,0.691712,7.319366,6.890349,-3.180707,5.740244,-8.008957,1.110782,-5.663408,-1.622422,6.250966,-2.522609,-9.180192,1.980683,5.212516,7.642297,2.853879,-8.009510,-7.667923,-1.801817,8.765780,3.347546,-7.598105,-0.606864,-3.176064,-9.899067,9.598687,-9.305872,5.298571,5.514370,-0.977345,-1.056626,1.945212,-2.975659,-8.576429,-7.621376,-7.579727,7.671076,-9.897250,-7.798940,6.713755,8.253032,6.649408,-3.110202,5.735534,6.258982,-3.432506,-2.820168,-5.087888,7.900528,5.150491,-7.171161,3.915535,5.550241,-5.066636,-7.457737,-1.019870,-4.960184,6.591477,4.812250,-8.737352,-7.938113,-2.033164,1.796293,-2.437672,-6.264396,-0.553139,3.436083,-8.571166,-6.500586,-6.562438,-9.032449,-9.799042,-5.047550,-4.991227,-5.964415,3.807979,8.226021,9.082904,-4.543358,-2.699941,-8.600985,-4.184985,-8.458732,-9.844406,8.756247,-1.577430,2.793340,-2.610619,-9.586281,5.028536,-2.512995,-1.707222,6.602042,-6.403999,7.317221,-3.590869,8.292649,1.108287,2.962075,-5.050878,8.741653,4.031352,1.945505,-2.342790,-8.367047,3.267236,-7.171833,-8.522495,8.619169,-8.781416,6.574677,-5.529086,4.999943,1.516860,3.663604,5.463497,-0.176445,-1.488404,-6.890535,1.155303,-4.144253,9.013431,-5.784744,-4.953627,-3.926434,-5.869021,1.072001,7.520712,7.088227,-5.569174,-0.767754,7.986641,-4.675674,1.231146,-4.024139,9.164199,8.593249,-9.897171,-1.537280,4.672377,5.903185,9.626318,4.969796,5.926680,7.269685,0.272594,2.715381,-3.599817,-3.385444,-9.320860,-3.407372,-8.912089,3.033118,-1.247417,2.020298,-2.845082,7.275310,-4.108423,-0.410700,2.917853,8.999999,-6.767126,5.758310,-5.147696,-6.924096,8.101799,-0.392703,-4.251943,-6.849781,8.423693,-6.995582,-9.904951,4.014993,-8.406029,-9.232871,6.655683,3.534278,-3.810523,-0.936352,-5.705428,5.212022,-2.157717,0.921416,3.927428,5.184140,-4.097417,5.282904,4.564247,6.616221,-5.573989,-0.304469,7.455080,7.503120,-1.939658,-3.568722,-9.996180,-9.191867,7.750371,8.219840,9.263655,9.780153,1.343187,-1.968582,-6.439515,-6.341076,0.132672,-8.823264,-8.590744,-2.285611,-4.477371,-1.571880,5.389865,5.406633,-7.662952,0.371695,3.576111,6.251909,8.273972,5.904867,7.062560,3.196768,-8.595139,4.699738,0.508423,-6.401432,-1.814433,6.500844,9.495537,-5.639211,6.320219,-4.349316,4.398976,1.573101,4.569430,-8.961860,0.768203,-3.173361,8.604717,-2.841776,1.852451,-7.230769,9.817252,1.670905,-5.552486,5.158855,-4.871370,-8.508035,9.666048,-0.726546,5.398352,-5.257053,-6.687296,-4.708931,-5.598217,4.790476,9.389381,-2.627338,2.004471,-4.394390,2.176414,6.380616,9.754637,5.821808,-9.320032,8.468617,-0.204668,-8.294017,-0.827370,9.890673,6.020426,5.617241,-9.064717,-1.324406,5.089670,-1.132389,-8.067119,-2.658855,1.787690,-1.181171,-2.588754,5.866899,6.385268,1.465796,0.733529,1.360138,0.053935,8.035285,-1.812278,0.426118,-3.857861,-4.743576,-8.612831,-3.925984,3.136960,4.558224,5.888210,-5.452935,-2.061582,-9.478221,-8.720204,-8.038061,-6.243766,-4.317869,9.727703,2.150063,1.745265,-3.568606,-1.688330,0.642620,-1.925547,7.547476,-8.530040,-7.320699,-2.692276,-4.850683,-9.870327,-6.723190,-5.072515,1.043988,2.296628,-1.230815,4.901692,-3.774545,5.954398,7.792349,-7.548559,2.709599,-3.612291,2.744533,1.382308,-8.324313,-2.689019,-5.537917,6.485152,4.512732,-0.700198,2.528094,-6.137705,-9.475745,3.759326,1.294433,-8.608025,-1.989237,8.048044,9.929915,9.766233,-9.568438,2.547112,0.168838,9.432982,0.847490,-8.542861,4.052873,-8.972417,-7.469286,8.538285,3.971348,1.052054,-3.424885,8.076904,6.152968,5.509489,-1.013926,-5.235678,7.840644,-7.744272,-7.910711,0.778016,-5.173543,0.287232,-9.520819,-2.559395,-5.750403,3.786519,-1.677409,4.195691,-9.381343,-4.903293,1.137114,-4.499903,-8.977114,8.317055,1.836286,-0.647515,-0.857182,-8.534588,-5.717397,-3.832875,-6.033216,0.487434,-2.212519,-1.595686,-6.959474,0.059738,-8.941347,-1.222173,7.762856,3.871159,4.327648,-0.886368,7.322592,-1.636010,0.274625,-2.948932,-8.678356,9.720824,-3.813442,8.768750,-0.211574,-7.610690,-6.337736,9.737355,-6.813764,-9.208080,-3.282763,5.355156,-8.221330,8.894456,-4.956274,3.911262,3.386066,1.880983,3.079298,-2.948859,-0.841135,-6.306121,-4.571569,-7.488824,-1.430507,-5.068658,3.399630,-1.190766,0.241184,7.333543,7.191078,-2.543635,5.519346,3.058030,0.805657,-7.083945,-1.718807,-7.645903,-2.777605,-3.924733,-5.688786,0.030831,-4.050090,6.195272,8.506869,-2.433933,0.073926,-4.355486,-9.624522,2.281116,3.933161,3.811605,-1.996300,-4.332100,-7.198346,0.680665,0.150982,-3.513504,-5.817728,7.976211,9.443309,8.529603,0.573835,5.515947,2.796308,1.403445,9.998839,-1.752189,-5.354977,-8.242080,5.592055,6.308078,6.641742,9.143744,8.133688,7.903470,-0.950669,-5.685071,-9.114825,3.877699,-8.043006,0.076970,-1.298763,-7.927877,-7.562265,1.274509,-0.222853,5.563327,2.955534,-0.995626,2.472195,9.116335,-7.440431,9.208096,0.381653,-6.511560,2.398766,0.364140,8.099137,4.013327,8.497480,-4.190343,8.531603,4.664733,-8.822229,-1.831271,7.994634,9.721436,3.422241,8.183680,8.414845,-4.939224,1.423483,-7.833297,5.586000,-8.747351,2.923339,5.373362,-1.280455,7.766179,-7.790734,9.275533,5.050861,6.421272,7.916563,6.278723,-7.314774,-9.293030,-2.096038,-2.885598,-6.322308,-8.953231,0.020393,-0.779489,-5.083784,-8.010016,2.876987,-9.665300,-8.194495,7.675304,-2.502583,4.981825,2.262130,-4.319514,-6.538184,4.691849,-4.732623,-4.461139,7.223791,6.123271,-2.785420,-8.262330,6.995907,-8.893441,-2.604677,-5.799731,6.541967,9.177348,8.448452,-0.470766,2.491661,-2.284497,4.247999,2.737066,4.681446,-4.306936,8.884987,-8.993738,3.150744,-7.415191,-4.397916,6.989226,-7.546453,-7.333942,-5.888255,-3.879554,5.957617,2.601391,9.665717,3.694009,-6.512552,7.097650,0.120258,-8.622242,-1.244330,-3.825845,0.529929,-0.831015,3.877139,4.802983,4.847108,7.155222,-6.301865,4.216402,2.340279,1.323807,-7.584332,7.235857,-3.434451,6.536872,1.512102,4.821745,8.980036,-6.195286,9.017185,-8.456292,4.718083,8.508463,3.502345,-4.487295,0.083416,-4.351946,-4.151130,3.222784,5.647130,0.327828,9.853302,-1.346567,6.095592,8.137875,-7.100014,3.505427,4.133651,-7.552485,-8.634648,5.404758,-0.568701,2.069099,-2.192581,3.667684,0.730358,-6.457012,7.472763,1.127359,5.086737,2.706289,0.282470,-1.779932,7.189129,2.239835,2.361048,-4.369859,-5.389213,-4.315622,-5.200290,-6.583671,-2.878656,-4.443269,1.641292,-2.777118,-6.552219,5.535837,2.764237,-9.649523,-3.143334,-2.006502,4.231059,8.136254,-9.955119,-5.276573,6.073389,1.846742,9.391624,2.337463,8.499542,4.765001,-8.326269,9.085414,-4.767643,-4.749893,8.176775,-7.151237,8.511175,-3.848536,8.038780,9.995049,-4.437199,1.236018,-0.832782,-1.007740,-2.691137,-0.547178,-8.988458,-2.661051,4.242638,8.802384,7.468351,0.069181,7.325427,4.195486,-5.434133,8.338416,7.111012,-3.854198,-3.194136,6.391196,3.429688,0.031954,-5.423672,-1.751462,-4.720665,-6.716211,-8.920903,2.938011,-7.511133,-1.369155,7.550331,1.651363,-1.210215,-8.971450,-3.833226,-5.829394,7.719121,-3.738631,7.679118,-1.187642,-5.809781,-9.347296,-0.238164,5.290907,-1.800373,-5.771066,9.832983,-7.101191,0.639617,-3.819563,-7.675419,6.741643,-9.952745,1.053802,6.469588,-7.187287,3.448797,-2.151474,-7.231316,-0.889295,6.067803,-5.564893,-9.235563,7.177501,7.160913,7.450604,-2.941166,-3.175921,-1.013183,-9.461833,9.058959,-3.915803,4.034966,-8.205026,-9.009112,-8.463602,8.250691,-6.875582,8.285064,-5.031620,-0.489506,1.381681,-3.047366,3.533828,8.727192,-0.399831,-3.708873,2.743165,9.831448,8.414014,-2.250694,-0.449539,-1.032292,9.543260,-2.904178,8.491124,-3.047551,0.142361,-6.968076,5.115135,-5.366876,-1.826725,-7.780308,9.986846,7.064683,3.784073,-1.228471,-3.126340,6.653965,6.449222,4.343263,-7.498932,9.276924,-1.745025,-7.040776,7.697159,-6.331043,-9.718863,-4.142210,-0.832349,-2.490426,0.555073,9.515351,-9.232974,-9.869908,-2.804940,-7.724978,8.590083,-7.073485,1.859807,5.391304,-1.732003,-2.458780,5.612404,-4.017444,-6.253652,1.781741,5.478722,6.823835,6.590473,8.737671,6.303511,-4.714303,5.730997,8.396144,-6.832756,-4.256544,-5.331153,2.275880,2.805213,8.588955,-2.532747,1.999644,-3.545381,4.289826,-0.163426,7.062983,-4.216019,-2.078230,2.409958,-1.519251,8.517623,-5.305199,6.377789,5.397178,6.330244,5.239846,1.284528,1.679286,0.875442,-5.094120,-1.649704,-5.472659,6.769794,-1.243245,-5.854857,-2.385821,7.574402,9.431351,-7.650530,8.717796,1.031501,-5.059773,-3.238315,-0.935121,-3.026915,1.031948,1.956638,-9.864372,5.333054,5.367469,6.067921,7.136690,-3.021770,-9.929525,8.295252,-2.450124,-4.183268,7.966538,-8.955980,-7.617733,-6.452329,4.395284,6.545003,7.819821,3.389514,-6.172007,-7.803793,3.216424,-2.673607,-5.927219,-5.977267,3.181755,7.561047,3.921596,-2.533648,-2.235677,6.251155,-9.751336,2.767996,0.397452,-3.593139,-9.223898,1.300725,8.408267,7.485908,7.655534,-3.128046,-1.946446,-5.410506,-4.003007,3.893780,0.366500,-7.960155,-7.743393,7.745077,-1.878554,1.491539,0.876486,3.394636,4.780433,-4.330091,-4.213958,3.636160,-3.741824,-1.430054,-5.587821,8.793798,-8.045901,-2.339075,-9.029441,0.399144,9.958021,5.675408,8.118059,-2.640525,1.009401,-3.823018,0.001709,-2.701018,6.215535,-0.965495,-7.474787,3.507554,-7.695296,7.196787,-9.230928,0.323752,-3.570338,-2.751221,7.573361,-7.959198,9.290525,-9.493971,-5.987390,-3.040351,0.456769,1.424216,-5.640246,2.940319,-2.678848,6.822892,4.635186,4.702362,0.897489,3.337817,-0.041495,8.649067,-1.279343,-8.978064,-2.781555,-9.972863,-1.390139,-0.024609,9.997861,7.377725,-1.600205,-6.595026,1.093331,7.220741,9.681971,-7.499486,-5.595425,9.352727,6.624409,6.696811,-6.043221,-7.943509,-3.483758,6.782495,-2.420380,4.845023,-5.129162,-0.712308,4.875867,-8.199491,-3.812045,-6.591731,1.183802,-9.078362,-0.304982,-0.049649,2.876248,9.771692,9.151397,4.962612,2.793825,4.407172,-0.271943,7.405558,6.622555,-4.494008,-8.202820,0.122816,-4.488892,7.670933,5.502352,1.596336,-6.042297,-7.738764,-4.848545,4.724756,9.923459,2.167443,-1.685496,9.263672,-8.298528,3.449086,8.996972,-6.873394,-8.665768,-4.877331,-6.187774,9.304782,-8.677118,-1.470308,4.439854,-3.281846,-7.549598,3.435007,-6.974314,6.355526,-6.704747,-1.337835,8.328561,-0.414787,-1.432805,2.987833,-9.495862,8.542717,0.102421,1.810331,2.657825,0.801454,6.089639,-4.760904,0.789074,1.898683,-5.860156,1.081815,-9.077340,-8.889656,-2.554854,7.679637,-3.192527,8.800023,5.978531,-3.498842,-2.549711,-7.883934,-3.568876,-6.636606,-1.355088,-4.325227,7.234466,-6.538992,5.555217,-6.666687,3.350923,-2.947215,-7.569250,9.314116,6.005197,-8.213520,9.602298,7.945977,2.421689,0.124797,3.210115,-6.598095,-3.913887,8.779566,0.501250,0.841579,9.193538,-9.851513,-6.015053,0.244882,-4.216128,8.032175,3.950780,7.073111,-6.380393,-4.124804,-5.604911,-0.313933,-3.068576,-6.330969,1.943453,-3.427845,-3.192980,-6.167939,-3.607845,-6.735731,6.194941,-9.808872,-8.465738,8.608106,-8.708150,7.854695,3.510291,1.413068,7.027461,5.716219,-4.268946,3.244184,9.721024,0.432620,-2.831694,-1.763743,8.775958,-7.620478,-0.850434,8.570995,1.070149,-0.839653,-1.609361,-6.835044,5.377113,8.206702,6.504439,-6.144685,-1.357257,-1.418263,7.532363,6.059305,6.847276,4.461768,9.559490,5.885455,5.787017,9.686636,6.277180,2.070063,-3.170689,-2.899341,4.619899,-9.357124,-4.588307,-6.259741,5.093307,4.202502,7.257591,-8.471847,4.839211,-3.502028,5.389598,-5.099365,5.226588,-5.921068,-7.386070,-9.785587,1.121837,-7.079553,7.079170,-9.260447,-5.218026,-0.321510,-8.422454,-0.387541,-5.749913,-5.458829,1.054799,-6.541527,-9.938416,-1.269062,-1.834033,-5.299113,4.154176,8.526463,-9.323731,6.891432,2.576600,-7.219355,-9.313084,7.131570,8.409536,0.022229,0.592072,-4.458700,-4.589672,-9.884250,8.462535,-2.747143,3.358340,2.026320,8.232900,-9.063432,-1.829784,-9.194867,-6.035496,6.378675,9.932787,-7.375603,4.283413,-6.403024,2.531945,-5.014896,-0.092185,1.254975,-5.745504,5.135326,9.173858,9.439007,-2.333341,-2.061993,4.012089,5.844768,-9.861096,1.154472,-0.629209,2.686645,7.446969,-9.477767,6.145446,4.843109,-5.239759,5.933088,6.634648,-0.939348,9.621315,-0.228408,-4.380726,9.387916,1.641750,-4.342601,6.956006,1.378942,8.453584,-4.094041,4.181359,2.409634,-3.472489,6.315051,3.065974,3.548631,-4.393262,0.267668,1.231260,-0.264807,-1.685876,-2.084476,-4.842953,-1.899544,6.755803,-5.781012,-4.156759,3.447299,4.346157,-3.754417,-6.418684,5.139646,5.085089,6.051834,5.998421,0.412963,6.796581,5.425541,7.409001,8.016984,-2.784246,7.097745,1.781186,9.382868,6.408789,0.650329,-6.016772,0.231682,-2.689330,-4.058032,-4.336729,7.943957,-6.561672,8.137415,-5.652604,-8.263051,2.828115,7.800150,-8.393817,8.581958,1.462918,0.841330,3.711936,3.714482,-3.849653,1.045590,-3.363423,-0.123335,-2.099281,-7.464836,-9.383778,2.842400,8.826380,0.208569,-3.850190,0.002094,9.862057,4.602951,2.397460,-4.862081,-9.670093,-4.181812,-8.830688,4.549965]], dtype = "float64")#candidate|15009|(2, 2048)|const|float64
call_15008 = relay.TupleGetItem(func_13895_call(relay.reshape(const_15009.astype('float64'), [16, 16, 16])), 2)
call_15010 = relay.TupleGetItem(func_13897_call(relay.reshape(const_15009.astype('float64'), [16, 16, 16])), 2)
output = relay.Tuple([call_15000,call_15008,const_15009,])
output2 = relay.Tuple([call_15001,call_15010,const_15009,])
func_15016 = relay.Function([], output)
mod['func_15016'] = func_15016
mod = relay.transform.InferType()(mod)
mutated_mod['func_15016'] = func_15016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15016_call = mutated_mod.get_global_var('func_15016')
call_15017 = func_15016_call()
output = call_15017
func_15018 = relay.Function([], output)
mutated_mod['func_15018'] = func_15018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13794_call = mod.get_global_var('func_13794')
func_13796_call = mutated_mod.get_global_var('func_13796')
call_15109 = relay.TupleGetItem(func_13794_call(), 0)
call_15110 = relay.TupleGetItem(func_13796_call(), 0)
func_900_call = mod.get_global_var('func_900')
func_906_call = mutated_mod.get_global_var('func_906')
var_15135 = relay.var("var_15135", dtype = "float32", shape = (486,))#candidate|15135|(486,)|var|float32
const_15136 = relay.const([6,-8,-9,6,-10,-3,-3,-7,-3,-3,3,1,-4,-6,-3,-8,-4,-7,-9,-10,7,8,-2,3,4,-8,-9,-6,5,5,6,-10,-2,-3,1,-9,-5,-10,-4,4,8,-2,-2,-10,-10,-6,10,5,4,4,9,6,4,3,-9,-3,9,-6,6,8,4,-10,-2,8,-3,1,-10,8,-1,10,-7,8,2,7,-3,2,2,2,9,8,-4,5,-4,-8,5,-6,2,-10,-2,-2,3,2,8,-9,-6,8,-6,6,10,-6,1,-7,9,-9,4,6,5,-3,10,9,-9,-5,-4,6,4,-8,7,10,-3,-7,-10,6,-10,10,3,7,-10,8,5,7,9,6,1,1,5,-4,-2,-2,-1,6,4,9,-8,-8,-2,-4,-10,-6,6,-6,-7,8,1,6,2,10,-3,-10,6,6,2,-7,-8,-3,10,5,-10,-9,-5,-6,4,3,-3,-10,2,4,-4,8,6,8,3,-5,8,-7,-8,-10,-7,2,7,-10,10,4,-7,-7,4,-10,1,-1,7,2,8,-8,6,-6,3,-3,-2,-8,9,-3,-1,1,8,10,7,3,-3,-2,-2,-3,6,10,3,6,-3,7,4,7,10,-9,1,-2,-4,5,-3,-3,-4,-7,-10,1,6,7,-7,-3,-4,-2,4,-9,-10,-4,-3,-2,-9,4,-3,-3,4,-8,6,6,4,5,5,8,-10,-8,1,-10,10,2,-10,2,-6,-4,4,2,-1,-7,1,-10,10,-2,8,3,-7,-1,1,2,8,2,8,-9,9,3,-3,-10,3,-6,-5,10,6,-2,9,-8,10,6,-2,-6,4,2,6,-10,6,-1,7,-7,-5,3,3,-8,9,-2,2,3,-9,1,9,-4,9,7,7,10,3,7,-5,8,10,9,7,-5,-9,10,10,-4,-9,7,-5,1,2,-3,-2,3,10,-3,-3,3,-9,-1,-9,9,6,-6,-5,-8,-5,-6,-1,-1,2,-7,-4,-9,5,3,-7,-4,8,-3,-8,-10,3,2,-6,4,-6,-2,-3,-5,-3,4,1,-2,-1,2,7,4,9,-1,-6,-2,7,-5,5,9,-10,-7,-5,10,3,7,5,9,7,10,6,-8,-7,1,6,-9,7,7,-4,-9,-8,-6,-8,-8,6,10,9,-5,4,-8,8,-7,5,8,-3,-6,-3,-4,9,8,10,-9,10,5,2,4,-3,6,9,9,10,10,10,-4,6,6,2,4,9,-5,5,10,4,-7,-9,2,-2,3,-8,10,-3,-1,2,-8,-9,2,4,-1,10,-1,4,10,-8,7,2,-4,-4,9,-2,-6,9,4,-2,2,-5,-10,-8,7,5,-4,3,-3,10,-4,-10,3,10,5,-4,-3,1,8,-6,-5,-8,10,-4,-8,-5,-9,5,-4,-1,7,7,-2,3,-6,-6,-10,10,6,10,-8,-8,-2,1,6,-7,7,2,2,1,4,1,-4,3,4,-5,2,9,6,2,-4,-6,-2,-10,6,2,-1,-6,-3,4,-4,-10,-4,-2,1,-6,-2,-3,3,-7,-7,10,4,-2,7,-2,6,-9,3,3,-5,8,-1,10,-6,-2,-7,-10,10,-8,7,10,-4,-6,-10,2,7,-3,-10,-2,-1,9,1,-1,-1,-8,2,2,8,-4,6,-6,-3,3,1,10,-2,-1,6,3,-2,-6,2,-10,-7,-1,-8,9,-7,7,-8,9,5,4,-2,1,-2,8,-8,-4,-1,-9,3,4,-10,7,7,-7,-8,8,-10,5,7], dtype = "int64")#candidate|15136|(660,)|const|int64
call_15134 = relay.TupleGetItem(func_900_call(relay.reshape(var_15135.astype('float32'), [6, 9, 9]), relay.reshape(var_15135.astype('float32'), [6, 9, 9]), relay.reshape(var_15135.astype('float32'), [6, 9, 9]), relay.reshape(const_15136.astype('int64'), [660,]), ), 2)
call_15137 = relay.TupleGetItem(func_906_call(relay.reshape(var_15135.astype('float32'), [6, 9, 9]), relay.reshape(var_15135.astype('float32'), [6, 9, 9]), relay.reshape(var_15135.astype('float32'), [6, 9, 9]), relay.reshape(const_15136.astype('int64'), [660,]), ), 2)
func_1434_call = mod.get_global_var('func_1434')
func_1437_call = mutated_mod.get_global_var('func_1437')
var_15147 = relay.var("var_15147", dtype = "uint64", shape = (2288,))#candidate|15147|(2288,)|var|uint64
call_15146 = func_1434_call(relay.reshape(var_15147.astype('uint64'), [11, 16, 13]))
call_15148 = func_1434_call(relay.reshape(var_15147.astype('uint64'), [11, 16, 13]))
output = relay.Tuple([call_15109,call_15134,var_15135,const_15136,call_15146,var_15147,])
output2 = relay.Tuple([call_15110,call_15137,var_15135,const_15136,call_15148,var_15147,])
func_15155 = relay.Function([var_15135,var_15147,], output)
mod['func_15155'] = func_15155
mod = relay.transform.InferType()(mod)
var_15156 = relay.var("var_15156", dtype = "float32", shape = (486,))#candidate|15156|(486,)|var|float32
var_15157 = relay.var("var_15157", dtype = "uint64", shape = (2288,))#candidate|15157|(2288,)|var|uint64
output = func_15155(var_15156,var_15157,)
func_15158 = relay.Function([var_15156,var_15157,], output)
mutated_mod['func_15158'] = func_15158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13698_call = mod.get_global_var('func_13698')
func_13700_call = mutated_mod.get_global_var('func_13700')
call_15169 = relay.TupleGetItem(func_13698_call(), 0)
call_15170 = relay.TupleGetItem(func_13700_call(), 0)
uop_15182 = relay.log(call_15169.astype('float32')) # shape=(11, 8, 9)
uop_15184 = relay.log(call_15170.astype('float32')) # shape=(11, 8, 9)
func_13986_call = mod.get_global_var('func_13986')
func_13987_call = mutated_mod.get_global_var('func_13987')
call_15188 = relay.TupleGetItem(func_13986_call(), 0)
call_15189 = relay.TupleGetItem(func_13987_call(), 0)
output = relay.Tuple([uop_15182,call_15188,])
output2 = relay.Tuple([uop_15184,call_15189,])
func_15202 = relay.Function([], output)
mod['func_15202'] = func_15202
mod = relay.transform.InferType()(mod)
output = func_15202()
func_15203 = relay.Function([], output)
mutated_mod['func_15203'] = func_15203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15202_call = mod.get_global_var('func_15202')
func_15203_call = mutated_mod.get_global_var('func_15203')
call_15229 = relay.TupleGetItem(func_15202_call(), 0)
call_15230 = relay.TupleGetItem(func_15203_call(), 0)
var_15233 = relay.var("var_15233", dtype = "float32", shape = (11, 8, 9))#candidate|15233|(11, 8, 9)|var|float32
bop_15234 = relay.minimum(call_15229.astype('int32'), relay.reshape(var_15233.astype('int32'), relay.shape_of(call_15229))) # shape=(11, 8, 9)
bop_15237 = relay.minimum(call_15230.astype('int32'), relay.reshape(var_15233.astype('int32'), relay.shape_of(call_15230))) # shape=(11, 8, 9)
func_3395_call = mod.get_global_var('func_3395')
func_3399_call = mutated_mod.get_global_var('func_3399')
var_15239 = relay.var("var_15239", dtype = "uint8", shape = (660,))#candidate|15239|(660,)|var|uint8
call_15238 = func_3395_call(relay.reshape(var_15239.astype('uint8'), [12, 11, 5]), relay.reshape(var_15239.astype('uint8'), [12, 11, 5]), )
call_15240 = func_3395_call(relay.reshape(var_15239.astype('uint8'), [12, 11, 5]), relay.reshape(var_15239.astype('uint8'), [12, 11, 5]), )
output = relay.Tuple([bop_15234,call_15238,var_15239,])
output2 = relay.Tuple([bop_15237,call_15240,var_15239,])
func_15270 = relay.Function([var_15233,var_15239,], output)
mod['func_15270'] = func_15270
mod = relay.transform.InferType()(mod)
var_15271 = relay.var("var_15271", dtype = "float32", shape = (11, 8, 9))#candidate|15271|(11, 8, 9)|var|float32
var_15272 = relay.var("var_15272", dtype = "uint8", shape = (660,))#candidate|15272|(660,)|var|uint8
output = func_15270(var_15271,var_15272,)
func_15273 = relay.Function([var_15271,var_15272,], output)
mutated_mod['func_15273'] = func_15273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14609_call = mod.get_global_var('func_14609')
func_14610_call = mutated_mod.get_global_var('func_14610')
call_15403 = relay.TupleGetItem(func_14609_call(), 0)
call_15404 = relay.TupleGetItem(func_14610_call(), 0)
func_8458_call = mod.get_global_var('func_8458')
func_8460_call = mutated_mod.get_global_var('func_8460')
const_15406 = relay.const([-2.611248,-7.007069,-5.242807,8.282514,-0.663359,-4.085947,-8.101727,-7.854949,-3.918116,8.936992,9.663546,-1.908452,-5.776973,9.170608,6.761353,-4.608598,9.045046,8.614583,5.369220,-8.424134,-7.528993,-6.609417,5.469558,7.550043,8.428717,2.199969,4.863998,-0.772262,1.697441,-7.614786,-4.125089,2.864108,9.928806,8.254434,2.759245,-8.329874,0.814183,-6.090801,9.573192,-3.529749,5.869770,-8.286644,3.280387,-4.468170,-4.315337,7.372893,7.571180,-6.232969,6.414120,6.124586,2.474294,0.465307,8.722124,-4.864488,4.325890], dtype = "float64")#candidate|15406|(55,)|const|float64
call_15405 = func_8458_call(relay.reshape(const_15406.astype('float64'), [5, 1, 11]))
call_15407 = func_8458_call(relay.reshape(const_15406.astype('float64'), [5, 1, 11]))
output = relay.Tuple([call_15403,call_15405,const_15406,])
output2 = relay.Tuple([call_15404,call_15407,const_15406,])
func_15412 = relay.Function([], output)
mod['func_15412'] = func_15412
mod = relay.transform.InferType()(mod)
output = func_15412()
func_15413 = relay.Function([], output)
mutated_mod['func_15413'] = func_15413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14998_call = mod.get_global_var('func_14998')
func_14999_call = mutated_mod.get_global_var('func_14999')
call_15417 = relay.TupleGetItem(func_14998_call(), 0)
call_15418 = relay.TupleGetItem(func_14999_call(), 0)
var_15428 = relay.var("var_15428", dtype = "float64", shape = (11, 8, 9))#candidate|15428|(11, 8, 9)|var|float64
bop_15429 = relay.not_equal(call_15417.astype('bool'), relay.reshape(var_15428.astype('bool'), relay.shape_of(call_15417))) # shape=(11, 8, 9)
bop_15432 = relay.not_equal(call_15418.astype('bool'), relay.reshape(var_15428.astype('bool'), relay.shape_of(call_15418))) # shape=(11, 8, 9)
bop_15460 = relay.less_equal(var_15428.astype('bool'), relay.reshape(bop_15429.astype('bool'), relay.shape_of(var_15428))) # shape=(11, 8, 9)
bop_15463 = relay.less_equal(var_15428.astype('bool'), relay.reshape(bop_15432.astype('bool'), relay.shape_of(var_15428))) # shape=(11, 8, 9)
output = bop_15460
output2 = bop_15463
func_15464 = relay.Function([var_15428,], output)
mod['func_15464'] = func_15464
mod = relay.transform.InferType()(mod)
mutated_mod['func_15464'] = func_15464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15465 = relay.var("var_15465", dtype = "float64", shape = (11, 8, 9))#candidate|15465|(11, 8, 9)|var|float64
func_15464_call = mutated_mod.get_global_var('func_15464')
call_15466 = func_15464_call(var_15465)
output = call_15466
func_15467 = relay.Function([var_15465], output)
mutated_mod['func_15467'] = func_15467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15412_call = mod.get_global_var('func_15412')
func_15413_call = mutated_mod.get_global_var('func_15413')
call_15496 = relay.TupleGetItem(func_15412_call(), 0)
call_15497 = relay.TupleGetItem(func_15413_call(), 0)
output = call_15496
output2 = call_15497
func_15508 = relay.Function([], output)
mod['func_15508'] = func_15508
mod = relay.transform.InferType()(mod)
mutated_mod['func_15508'] = func_15508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15508_call = mutated_mod.get_global_var('func_15508')
call_15509 = func_15508_call()
output = call_15509
func_15510 = relay.Function([], output)
mutated_mod['func_15510'] = func_15510
mutated_mod = relay.transform.InferType()(mutated_mod)
const_15552 = relay.const(-5.720379, dtype = "float32")#candidate|15552|()|const|float32
const_15553 = relay.const([[[-6.819063,8.484608,-0.836637,1.159956,5.661691,2.365894,-5.343134],[-9.107334,-3.011253,-8.653107,4.163810,-5.117730,9.242490,3.562985],[0.733426,-0.700629,-5.256573,2.532468,-3.902579,-7.448282,-6.061812],[-8.323938,-4.122339,8.655356,9.969738,2.488567,-5.285356,0.618718],[-1.104385,5.709104,7.158877,3.350507,7.043186,-7.586743,-0.296233],[6.166402,-9.194600,1.073605,7.049924,3.253182,-0.822314,6.826373],[-4.306512,3.766619,2.575227,4.233884,-5.734338,-6.657731,0.610194],[4.507032,-9.631489,8.628790,1.677686,5.664823,0.190889,7.747253],[9.204709,-7.595086,9.978582,-1.409983,-8.508723,4.104277,-5.067851],[-8.768974,-3.170656,5.155246,8.335675,5.902758,-9.509688,6.541954],[-3.379688,8.254399,7.184156,1.448418,1.720001,3.144277,9.551212],[-0.963810,-1.024368,-4.368827,3.899885,7.413447,-7.219172,2.185754],[5.301846,-6.812029,6.565671,2.934279,6.405572,5.137804,-2.810178],[5.700775,5.546900,-8.169792,-4.394237,-9.550023,-9.949568,-7.481308],[-6.451741,7.118721,-6.824221,0.857958,-8.092442,-6.665370,-5.825702],[-5.757809,-3.658166,-1.686170,-4.264519,-7.159509,6.079774,-1.434227]],[[-0.349186,-6.207173,-2.981316,5.994947,8.754004,-4.045800,8.881967],[-5.394957,-2.004994,8.508314,-8.750509,-8.261773,-2.118345,8.654071],[6.797659,4.642932,1.522498,-8.314562,-0.587517,-8.521835,1.668427],[8.266282,-0.659425,-5.561185,-4.426270,8.188572,4.240111,7.206057],[-3.678729,-5.782246,-1.133455,-8.439224,6.858885,5.292656,-1.838273],[-2.676077,-1.161173,-9.910683,8.497696,9.982597,-0.029325,-2.669543],[-9.397910,7.500164,-3.792309,-9.180215,-7.677807,-5.577898,-7.800532],[9.542390,-9.611904,-0.127722,7.781008,4.083532,1.669799,-4.380371],[1.200263,4.899253,1.487764,4.860093,-8.433906,-2.237973,-2.202505],[1.334489,5.325312,1.653413,-8.342138,-7.090160,-1.630797,-9.552111],[5.785043,-9.236982,7.503810,-9.722088,-4.227424,-4.762874,-1.679817],[4.160938,-7.303811,3.219572,1.167239,3.583124,-8.857627,1.710454],[3.795945,-3.767652,6.424545,2.659221,-4.096884,5.029623,5.968792],[-4.307264,-8.701318,-6.420458,-7.570592,-8.644802,-3.304122,8.506632],[-2.926985,-9.119158,-2.234400,-5.235474,4.315003,-5.841857,8.083067],[-6.419913,3.805466,-4.710045,7.460007,-3.926481,-4.637571,2.020465]],[[-7.539442,2.043568,-5.062112,-9.607548,-4.181434,-2.430502,7.958546],[-2.771467,-4.289159,7.037209,6.971108,9.467739,8.734924,-1.700388],[1.604921,-2.213169,-7.300397,-1.858705,7.194829,0.112663,5.239823],[1.547987,-3.216687,0.219964,1.610860,-4.410439,3.793009,1.736377],[-2.262413,-1.222519,3.944187,5.560544,5.859663,-3.648647,7.727227],[-4.368360,1.579075,4.405899,0.010313,-2.538185,9.227008,0.684691],[9.347937,9.961740,-9.548080,6.964110,9.445496,0.677895,-1.416022],[1.119871,3.360932,-1.140780,-8.722629,-1.563708,-1.094050,-2.107114],[-8.867688,-5.446550,-4.534213,2.420065,-8.446025,-3.268863,0.632579],[-4.574918,-8.802589,8.081062,8.730986,-4.812695,9.466402,-7.765726],[-2.241656,-1.995778,-3.566759,-8.615540,-1.148607,-3.638329,-3.633875],[-6.735670,-5.578922,9.419702,5.281900,0.562167,-0.828817,-4.359297],[-9.528615,5.713427,6.017747,9.772087,6.581252,-8.078815,7.753281],[-4.825745,3.781675,-8.945610,6.318244,-8.748490,-3.615115,5.754532],[-0.893494,1.868292,-3.483439,0.101761,-1.917119,-3.217204,-0.835618],[9.292686,2.029872,8.818095,2.250683,-2.824255,6.467186,5.735491]],[[-0.588340,-7.967916,-5.038448,-0.167630,-1.451392,-7.207601,-1.011401],[-8.988559,2.221141,9.670133,4.828319,3.075055,-9.999034,1.887492],[7.768664,1.830254,-8.741855,-6.603753,8.555237,8.431256,-0.282145],[-9.045927,-4.798269,2.109121,2.505124,-1.879305,2.942210,6.145795],[-3.826645,3.171106,7.352673,1.971693,-1.072326,-5.537590,-3.188907],[5.722998,9.818434,-2.051369,1.449494,8.863562,-0.503938,0.117275],[8.851472,7.870503,-9.912162,3.054207,5.351436,7.322574,-8.816387],[-1.103047,2.806593,2.682562,0.171474,0.664623,9.567415,2.810982],[-7.631295,5.265491,1.422235,0.011928,6.839248,0.659156,-8.457031],[-1.410841,-7.425985,6.714999,9.847706,-7.265261,-2.897355,2.002925],[-4.416058,6.991723,8.106448,8.601326,7.007518,-8.057165,6.193559],[-1.271991,-3.855254,8.225238,9.137463,4.992133,4.997193,8.069779],[8.806716,-2.820715,-7.842611,-2.481619,-9.206703,-5.946792,8.996044],[1.253303,6.544445,-7.517761,-4.626336,-2.513523,-5.594756,-2.881705],[-4.015678,-4.734364,-4.854685,0.787956,-8.919259,0.926955,6.937888],[2.524645,-7.141554,-2.268872,-9.326502,-3.499883,-5.268380,-4.489085]],[[-0.769382,-1.921139,-6.359654,-7.015626,6.459080,6.811441,2.208422],[0.793082,1.640547,7.510695,3.829598,0.391854,-2.420981,-7.202426],[-5.363869,-2.553769,-8.769965,6.929227,7.093285,2.691326,-3.403079],[-9.390673,6.052985,-5.449193,-7.475318,4.145390,6.152088,8.431247],[-0.602791,-3.618591,-0.798046,6.569412,-2.386304,-4.953566,-2.142665],[-8.469499,-5.092078,-3.781673,-3.422505,-4.135515,7.493106,-4.833192],[-2.549404,-2.529359,-8.428242,-4.306485,4.186248,8.112551,-3.924846],[9.711168,1.329508,4.394496,6.467965,-3.721953,4.800055,-0.775230],[-6.246885,4.266814,7.353514,7.611109,5.374878,-7.752271,1.986156],[-9.010707,1.378893,-9.254516,8.992565,8.439906,4.856920,5.325148],[-8.631494,2.917472,-1.719250,-8.654990,0.453212,0.783306,7.893116],[1.522671,2.109803,-9.549884,-1.884989,-0.321738,0.715526,-6.847790],[0.203205,0.060571,2.268020,-5.987910,7.452549,2.063655,-0.094548],[9.562343,6.415117,-6.670602,-4.312792,4.791525,2.426684,9.581243],[8.449174,7.641066,6.609574,5.366913,-4.717359,-0.111397,-4.261170],[-1.862591,6.816826,-7.648055,-9.838394,3.142802,7.905528,7.139769]],[[-3.947088,2.199969,-5.871189,-2.416129,5.022283,9.983123,9.105618],[-5.343148,7.521246,-3.454520,-4.091882,9.095905,8.017749,-1.405605],[-5.894601,8.245495,-3.286892,-9.931328,-3.362870,-5.926071,-6.872831],[0.804593,4.252867,3.814291,-0.982579,2.442186,-8.672017,9.653512],[-9.953838,7.439955,-6.419762,1.854962,1.922885,0.925079,1.994833],[-8.566918,5.214901,7.854200,5.654059,-6.470311,5.768994,-3.853226],[-6.910410,9.605269,0.012401,8.958045,-0.038147,-4.187331,0.499923],[6.159844,5.502066,-3.215131,5.933664,-1.127294,0.087662,-7.155840],[-5.024801,-5.848400,-6.287519,6.159209,-7.912954,9.493027,-3.778193],[6.737915,-2.175609,-4.192134,-1.210286,-5.468400,-2.710157,-9.316270],[6.456856,-0.952990,0.905699,9.409857,5.330635,-4.368834,8.980659],[-9.998100,9.690414,9.871832,-6.467118,-3.274375,4.433974,-4.000100],[1.143659,1.429235,0.697199,-9.261691,-9.167456,-8.213671,8.505174],[-7.060029,0.294288,-7.234099,-9.732963,-1.845098,1.493284,6.060076],[1.768566,-7.873244,-0.497331,-3.868783,-1.297266,-9.464886,-4.966007],[-7.385776,4.528511,-5.325994,9.396448,-8.130510,0.600944,-1.603422]],[[0.798827,8.601831,4.214123,4.560067,5.819236,6.693272,-0.550168],[-8.863801,-5.599222,-1.091734,3.508271,-7.229983,8.225749,-2.485906],[8.088264,4.151958,-0.279101,-8.274353,3.203822,7.098783,9.364668],[-0.603834,1.027898,-1.564319,9.282865,2.806191,2.442480,2.940147],[-5.194446,2.708235,-6.864109,-2.958103,2.401962,-4.568632,-8.879362],[2.302381,-0.272993,-0.798276,8.644679,1.362570,6.515257,7.238348],[0.945852,-7.669656,5.853045,0.430882,-6.029761,-0.974598,-4.914730],[-7.485516,8.208466,-9.477868,4.678014,3.122631,6.182665,3.530602],[4.077174,-2.050058,0.004842,1.192110,-2.281501,-6.150142,-2.883068],[1.757091,9.812231,-0.421158,3.245894,-2.523634,4.491785,3.210284],[9.881503,3.054951,-1.746382,3.233559,-1.108614,-0.366576,7.605847],[-7.022845,8.753746,4.321764,4.000162,2.086950,-5.703817,-9.957560],[2.062383,4.728353,-4.287613,-4.922984,-3.330987,3.953948,-0.902551],[8.556166,-5.539873,2.168439,3.925705,7.171767,-9.989761,-0.699035],[-1.020086,-9.374518,-1.793705,-1.994118,6.572177,1.425973,-7.255404],[-5.996818,-6.936786,8.605862,5.982010,5.869770,6.788654,-7.935812]],[[6.170646,-3.528860,2.193975,-8.540180,-8.194546,-7.610088,4.384344],[8.624692,-4.870999,-0.757714,-4.547558,-3.023535,-5.188035,-7.468715],[-1.332147,-2.886845,3.890154,8.310550,6.518387,2.167539,3.069483],[7.234645,6.379346,-2.436216,3.670336,7.294242,-3.179675,6.567635],[9.107421,-3.593456,-5.276858,6.382457,-7.495351,-1.687300,-4.446201],[4.032664,-1.224777,-3.998545,-4.067153,3.988494,7.931020,4.835444],[-6.202430,3.416560,-0.569880,3.043665,-9.971499,5.704533,-9.971031],[-8.092697,5.514894,-0.406971,8.560762,4.093628,8.092382,2.250628],[1.112694,5.941192,1.658242,9.996974,-1.550038,0.548064,-8.147634],[3.530669,-7.612711,9.532332,-8.905090,0.498397,8.946621,1.975953],[-1.991684,7.379039,7.618150,6.834039,2.651923,-8.719083,-7.273378],[-0.796261,-4.193407,1.627847,-6.200496,-0.481055,-6.833961,-8.803319],[4.659548,-3.717736,-0.828430,9.841634,-2.032557,-9.680097,-7.805315],[-5.647982,-0.455869,1.453266,-6.194865,-2.258345,4.298618,7.294662],[-9.622662,6.467136,3.004870,2.869449,-5.600143,0.208340,-2.980805],[-2.183986,7.375654,2.755339,-5.874620,-5.496384,9.174984,0.110504]],[[-5.069609,-4.600013,-0.266763,-6.474126,3.476229,9.898818,-7.964273],[5.997966,-1.111932,4.732041,-1.534965,-4.945514,2.356607,4.671478],[5.377091,-5.569002,-5.843275,-5.330137,-7.058015,-9.406293,1.987971],[6.284894,1.041958,-0.437661,7.299125,9.272887,-2.981944,-5.305979],[-7.872597,-2.258413,-6.423408,3.081480,7.012565,4.806479,-7.563963],[9.441519,3.305632,-1.437407,5.867258,-2.493487,-3.300755,-1.764343],[5.439821,8.456375,8.321532,6.021048,-9.421264,-3.194000,6.460091],[2.296894,9.348103,7.296617,-7.244458,5.145580,-7.352906,-8.630982],[8.977024,3.965599,2.928275,4.077604,-1.591467,-7.049014,4.960321],[-1.299733,-3.810130,9.100900,-3.717747,-5.398775,-4.212197,6.361904],[0.428716,8.129286,-0.411278,-0.521964,8.443828,-7.852054,-6.406304],[-9.760802,9.382549,-5.649036,8.820835,-0.954063,-8.468889,-8.646312],[-4.506064,0.707853,4.895132,9.379363,1.253539,4.346898,0.383949],[-0.078481,-7.846538,3.966187,4.327681,7.871918,1.064800,4.169491],[-4.999732,-9.714125,7.958347,-3.745388,6.186835,-4.943134,0.327143],[5.971455,-7.566716,6.261516,7.684645,-1.215055,-6.539617,4.630504]],[[7.917751,-1.437801,-9.544087,5.077975,-3.940152,-0.389978,7.783139],[8.060045,-2.059767,4.248557,-8.657878,8.525444,6.712356,9.015500],[1.972376,-6.673647,5.161960,-8.588522,5.096145,9.625832,5.144308],[0.958987,-8.742375,-5.337364,-5.511918,0.479570,-4.410086,-9.097629],[4.316449,2.332723,-3.648457,3.819245,-7.003928,3.539846,7.257440],[-2.096593,-6.123915,6.742705,-0.367600,2.665666,0.844063,1.115696],[7.372539,-2.126866,5.116836,0.393924,7.743398,9.039102,-7.671348],[6.967124,6.235412,-0.611635,-5.244982,9.613865,7.046725,1.009608],[2.051800,-5.784544,-0.278438,8.867195,3.805356,5.336669,-1.258423],[-3.827099,7.847752,-2.827808,3.511491,-5.778469,9.405801,-9.644208],[-6.779863,1.305203,9.247352,-5.995791,-6.764329,7.604640,-8.733112],[-8.629705,-4.443817,0.570266,0.354987,-1.933126,-6.802107,-9.785518],[-5.276185,8.349129,-7.242341,3.848468,-3.154080,8.098313,6.572561],[-2.613212,0.223435,-8.764433,-1.063373,5.779066,-6.509844,-9.390839],[-1.897790,-5.969424,-3.995386,2.863150,-6.032944,-3.425137,-6.074828],[-1.337727,-3.906735,6.648254,9.668724,0.790116,2.844328,0.660818]],[[4.189983,-9.669936,-2.782846,-0.378427,-3.168569,3.126676,-5.663281],[-6.097822,6.315953,7.857539,9.597660,2.455949,-0.077662,-8.844318],[8.739992,6.368831,-8.811190,-5.389168,-8.540003,4.753913,-6.576163],[-0.570218,-9.440416,0.595454,0.827625,6.383388,2.389808,2.122073],[-1.193461,1.642492,-3.627513,-2.710593,0.277840,8.198863,7.369277],[-0.113516,-5.453433,2.529780,6.595845,-9.059541,3.008271,-6.179193],[4.922726,-3.137524,2.584316,7.623198,3.001659,-2.481119,8.726031],[-0.967102,-1.139558,-9.639469,3.639207,9.196827,6.699733,2.355582],[-8.433385,6.424170,-8.242446,0.561518,-9.589559,4.777348,-2.891708],[-2.765663,1.282866,-8.387528,5.973989,-8.891148,-9.680583,-4.746311],[-6.851611,-9.743357,5.590974,-5.402709,-5.980147,0.666973,-7.231845],[-7.714379,7.320845,-9.123588,2.959866,-0.148911,-5.546781,-9.256791],[3.906971,-4.545296,-5.445529,-6.551646,-4.882840,5.545697,-0.086688],[0.508340,4.224794,5.103057,-1.912398,-2.000282,-3.389420,0.471507],[6.447377,-2.522844,-9.532137,-3.354262,3.244471,-3.365912,3.156462],[-2.311502,-4.135741,5.916813,5.530441,-0.210759,-1.143247,-7.748365]]], dtype = "float32")#candidate|15553|(11, 16, 7)|const|float32
bop_15554 = relay.mod(const_15552.astype('float32'), const_15553.astype('float32')) # shape=(11, 16, 7)
output = bop_15554
output2 = bop_15554
func_15558 = relay.Function([], output)
mod['func_15558'] = func_15558
mod = relay.transform.InferType()(mod)
output = func_15558()
func_15559 = relay.Function([], output)
mutated_mod['func_15559'] = func_15559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15202_call = mod.get_global_var('func_15202')
func_15203_call = mutated_mod.get_global_var('func_15203')
call_15563 = relay.TupleGetItem(func_15202_call(), 0)
call_15564 = relay.TupleGetItem(func_15203_call(), 0)
output = relay.Tuple([call_15563,])
output2 = relay.Tuple([call_15564,])
func_15567 = relay.Function([], output)
mod['func_15567'] = func_15567
mod = relay.transform.InferType()(mod)
mutated_mod['func_15567'] = func_15567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15567_call = mutated_mod.get_global_var('func_15567')
call_15568 = func_15567_call()
output = call_15568
func_15569 = relay.Function([], output)
mutated_mod['func_15569'] = func_15569
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15601 = relay.var("var_15601", dtype = "float32", shape = (8, 7, 11))#candidate|15601|(8, 7, 11)|var|float32
uop_15602 = relay.erf(var_15601.astype('float32')) # shape=(8, 7, 11)
output = relay.Tuple([uop_15602,])
output2 = relay.Tuple([uop_15602,])
func_15614 = relay.Function([var_15601,], output)
mod['func_15614'] = func_15614
mod = relay.transform.InferType()(mod)
mutated_mod['func_15614'] = func_15614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15615 = relay.var("var_15615", dtype = "float32", shape = (8, 7, 11))#candidate|15615|(8, 7, 11)|var|float32
func_15614_call = mutated_mod.get_global_var('func_15614')
call_15616 = func_15614_call(var_15615)
output = call_15616
func_15617 = relay.Function([var_15615], output)
mutated_mod['func_15617'] = func_15617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15016_call = mod.get_global_var('func_15016')
func_15018_call = mutated_mod.get_global_var('func_15018')
call_15625 = relay.TupleGetItem(func_15016_call(), 2)
call_15626 = relay.TupleGetItem(func_15018_call(), 2)
uop_15637 = relay.asin(call_15625.astype('float64')) # shape=(2, 2048)
uop_15639 = relay.asin(call_15626.astype('float64')) # shape=(2, 2048)
var_15640 = relay.var("var_15640", dtype = "float64", shape = (2, 2048))#candidate|15640|(2, 2048)|var|float64
bop_15641 = relay.floor_mod(uop_15637.astype('float32'), relay.reshape(var_15640.astype('float32'), relay.shape_of(uop_15637))) # shape=(2, 2048)
bop_15644 = relay.floor_mod(uop_15639.astype('float32'), relay.reshape(var_15640.astype('float32'), relay.shape_of(uop_15639))) # shape=(2, 2048)
uop_15668 = relay.acosh(bop_15641.astype('float32')) # shape=(2, 2048)
uop_15670 = relay.acosh(bop_15644.astype('float32')) # shape=(2, 2048)
output = uop_15668
output2 = uop_15670
F = relay.Function([var_15640,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_15640,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

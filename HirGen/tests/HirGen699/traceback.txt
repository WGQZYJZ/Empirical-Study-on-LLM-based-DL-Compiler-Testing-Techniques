==========mod==========
#[version = "0.0.5"]
def @func_5744(%var_5741: Tensor[(15, 6, 14), float32]) -> (Tensor[(15, 6, 14), float32],) {
  %0 = cast(%var_5741, dtype="float32") /* ty=Tensor[(15, 6, 14), float32] */;
  %1 = erf(%0) /* ty=Tensor[(15, 6, 14), float32] */;
  (%1,)
}

def @func_15567() -> (Tensor[(11, 8, 9), float32],) {
  %2 = @func_15202() /* ty=(Tensor[(11, 8, 9), float32], Tensor[(11, 8, 9), float64]) */;
  %3 = %2.0;
  (%3,)
}

def @func_15614(%var_15601: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32],) {
  %4 = cast(%var_15601, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %5 = erf(%4) /* ty=Tensor[(8, 7, 11), float32] */;
  (%5,)
}

def @func_11685(%var_11612: Tensor[(7, 3, 10), int64], %var_11632: Tensor[(27, 18), float32], %var_11633: Tensor[(660, 1), int64], %var_11659: Tensor[(1792, 2), float32], %var_11680: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), int64], Tensor[(6, 10, 15), int64], Tensor[(900), int64], Tensor[(660), int64], Tensor[(27, 18), float32], Tensor[(660, 1), int64], Tensor[(12, 11, 5), uint8], Tensor[(3, 15, 1), float64], Tensor[(45), float64], Tensor[(14, 16, 16), float32], Tensor[(1792, 2), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) {
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 3, 10), int64] */, dtype="int64") /* ty=Tensor[(7, 3, 10), int64] */;
  %7 = shape_of(%var_11612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%var_11612, dtype="int64") /* ty=Tensor[(7, 3, 10), int64] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(900), int64] */, dtype="int64") /* ty=Tensor[(900), int64] */;
  %11 = reshape(%10, newshape=[6, 10, 15]) /* ty=Tensor[(6, 10, 15), int64] */;
  %12 = cast(%var_11632, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
  %13 = cast(%var_11632, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
  %14 = cast(%var_11632, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
  %15 = cast(%var_11633, dtype="int64") /* ty=Tensor[(660, 1), int64] */;
  %16 = reshape(%12, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %17 = reshape(%13, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %18 = reshape(%14, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %19 = reshape(%15, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %20 = @func_900(%16, %17, %18, %19) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %21 = cast(%var_11633, dtype="uint8") /* ty=Tensor[(660, 1), uint8] */;
  %22 = cast(%var_11633, dtype="uint8") /* ty=Tensor[(660, 1), uint8] */;
  %23 = reshape(%21, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
  %24 = reshape(%22, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
  %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %26 = reshape(%25, newshape=[3, 15, 1]) /* ty=Tensor[(3, 15, 1), float64] */;
  %27 = @func_3985(%26) /* ty=(Tensor[(3, 15, 1), float64],) */;
  %28 = cast(%var_11659, dtype="float32") /* ty=Tensor[(1792, 2), float32] */;
  %29 = reshape(%28, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %30 = @func_6990(%29) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %31 = cast(%var_11680, dtype="float64") /* ty=Tensor[(55), float64] */;
  %32 = reshape(%31, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float64] */;
  %33 = multiply(%8, %9) /* ty=Tensor[(7, 3, 10), int64] */;
  %34 = @func_3712(%11) /* ty=Tensor[(6, 10, 15), int64] */;
  %35 = %20.2;
  %36 = @func_3395(%23, %24) /* ty=Tensor[(12, 11, 5), uint8] */;
  %37 = %27.0;
  %38 = %30.0;
  %39 = @func_8458(%32) /* ty=Tensor[(5, 1, 11), float64] */;
  (%33, %34, meta[relay.Constant][1] /* ty=Tensor[(900), int64] */, %35, %var_11632, %var_11633, %36, %37, meta[relay.Constant][2] /* ty=Tensor[(45), float64] */, %38, %var_11659, %39, %var_11680)
}

def @func_13717(%var_13712: Tensor[(4, 1, 1), uint32], %var_13713: Tensor[(4, 15, 1), uint32]) -> (Tensor[(4, 15, 1), uint32],) {
  %40 = cast(%var_13712, dtype="uint32") /* ty=Tensor[(4, 1, 1), uint32] */;
  %41 = cast(%var_13713, dtype="uint32") /* ty=Tensor[(4, 15, 1), uint32] */;
  %42 = left_shift(%40, %41) /* ty=Tensor[(4, 15, 1), uint32] */;
  (%42,)
}

def @func_13794() -> (Tensor[(11, 8, 9), float64],) {
  %43 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %44 = %43.0;
  (%44,)
}

def @func_4096(%var_4075: Tensor[(12, 7, 8), float64]) -> (Tensor[(12, 7, 8), float64], Tensor[(16, 16, 2), bool], uint64, Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
  %45 = cast(%var_4075, dtype="float64") /* ty=Tensor[(12, 7, 8), float64] */;
  %46 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(12, 7, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 7, 8), float64] */, dtype="float64") /* ty=Tensor[(12, 7, 8), float64] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %49 = cast(meta[relay.Constant][4] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %50 = reshape(%49, newshape=[]) /* ty=uint64 */;
  %51 = @func_965(%50) /* ty=(Tensor[(16, 16, 2), bool],) */;
  %52 = cast(meta[relay.Constant][5] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %53 = reshape(%52, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), uint64] */;
  %54 = floor_mod(%47, %48) /* ty=Tensor[(12, 7, 8), float64] */;
  %55 = %51.0;
  %56 = @func_1434(%53) /* ty=Tensor[(11, 16, 13), uint64] */;
  (%54, %55, meta[relay.Constant][4] /* ty=uint64 */, %56, meta[relay.Constant][5] /* ty=Tensor[(2288), uint64] */)
}

def @func_5848(%var_5787: Tensor[(14, 1, 16), float64], %var_5810: Tensor[(1260), float32], %var_5824: Tensor[(660), int64]) -> (Tensor[(15, 6, 14), float32], Tensor[(1260), float32], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(660), int64], Tensor[(14, ?, 16), uint32], Tensor[(6, 10, 15), int64], Tensor[(9, 100), int64]) {
  %57 = cast(%var_5810, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %58 = reshape(%57, newshape=[15, 6, 14]) /* ty=Tensor[(15, 6, 14), float32] */;
  %59 = @func_5744(%58) /* ty=(Tensor[(15, 6, 14), float32],) */;
  %60 = cast(meta[relay.Constant][6] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %61 = cast(meta[relay.Constant][6] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %62 = cast(meta[relay.Constant][6] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %63 = cast(%var_5824, dtype="int64") /* ty=Tensor[(660), int64] */;
  %64 = reshape(%60, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %65 = reshape(%61, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %66 = reshape(%62, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %67 = reshape(%63, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %68 = @func_900(%64, %65, %66, %67) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %69 = cast(%var_5787, dtype="float64") /* ty=Tensor[(14, 1, 16), float64] */;
  %70 = sqrt(%69) /* ty=Tensor[(14, 1, 16), float64] */;
  %71 = cast(%var_5787, dtype="uint32") /* ty=Tensor[(14, 1, 16), uint32] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="uint32") /* ty=Tensor[(14, 1, 16), uint32] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %75 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 100), int64] */, dtype="int64") /* ty=Tensor[(9, 100), int64] */;
  %76 = reshape(%75, newshape=[6, 10, 15]) /* ty=Tensor[(6, 10, 15), int64] */;
  %77 = %59.0;
  %78 = %68.0;
  %79 = subtract(%73, %74) /* ty=Tensor[(14, ?, 16), uint32] */;
  %80 = @func_3712(%76) /* ty=Tensor[(6, 10, 15), int64] */;
  (%77, %var_5810, %78, meta[relay.Constant][6] /* ty=Tensor[(486), float32] */, %var_5824, %79, %80, meta[relay.Constant][7] /* ty=Tensor[(9, 100), int64] */)
}

def @func_15270(%var_15233: Tensor[(11, 8, 9), float32], %var_15239: Tensor[(660), uint8]) -> (Tensor[(11, 8, 9), int32], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8]) {
  %81 = @func_15202() /* ty=(Tensor[(11, 8, 9), float32], Tensor[(11, 8, 9), float64]) */;
  %82 = %81.0;
  %83 = cast(%var_15233, dtype="int32") /* ty=Tensor[(11, 8, 9), int32] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="int32") /* ty=Tensor[(11, 8, 9), int32] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %87 = cast(%var_15239, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %88 = cast(%var_15239, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %89 = reshape(%87, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
  %90 = reshape(%88, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
  %91 = minimum(%85, %86) /* ty=Tensor[(11, 8, 9), int32] */;
  %92 = @func_3395(%89, %90) /* ty=Tensor[(12, 11, 5), uint8] */;
  (%91, %92, %var_15239)
}

def @func_14517(%var_14504: Tensor[(7, 12, 6), uint16], %var_14510: Tensor[(1, 845), uint8]) -> (Tensor[(7, 12, 6), uint16], Tensor[(13, 13, 5), bool], Tensor[(1, 845), uint8]) {
  %93 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 12, 6), uint16] */, dtype="uint16") /* ty=Tensor[(7, 12, 6), uint16] */;
  %94 = shape_of(%var_14504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_14504, dtype="uint16") /* ty=Tensor[(7, 12, 6), uint16] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %97 = cast(%var_14510, dtype="uint8") /* ty=Tensor[(1, 845), uint8] */;
  %98 = cast(%var_14510, dtype="uint8") /* ty=Tensor[(1, 845), uint8] */;
  %99 = reshape(%97, newshape=[13, 13, 5]) /* ty=Tensor[(13, 13, 5), uint8] */;
  %100 = reshape(%98, newshape=[13, 13, 5]) /* ty=Tensor[(13, 13, 5), uint8] */;
  %101 = logical_xor(%95, %96) /* ty=Tensor[(7, 12, 6), uint16] */;
  %102 = @func_6648(%99, %100) /* ty=Tensor[(13, 13, 5), bool] */;
  (%101, %102, %var_14510)
}

def @func_7098(%var_7039: Tensor[(11, 1, 8), float32], %var_7066: Tensor[(11, 16, 8), float32], %var_7071: Tensor[(48, 1), float32]) -> (Tensor[(16, 16, 2), bool], Tensor[(672), float64], Tensor[(11, 16, 8), int8], Tensor[(660), int64], Tensor[(660), int64], Tensor[(11, 48, 8), float32]) {
  %103 = cast(meta[relay.Constant][9] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %104 = reshape(%103, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), float64] */;
  %105 = @func_4096(%104) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(16, 16, 2), bool], uint64, Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */;
  %106 = cast(%var_7039, dtype="int8") /* ty=Tensor[(11, 1, 8), int8] */;
  %107 = cast(%var_7066, dtype="int8") /* ty=Tensor[(11, 16, 8), int8] */;
  %108 = cast(%var_7071, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %109 = cast(meta[relay.Constant][10] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %110 = reshape(%108, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float32] */;
  %111 = reshape(%109, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %112 = @func_1241(%110, %111) /* ty=(Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) */;
  %113 = cast(%var_7039, dtype="float32") /* ty=Tensor[(11, 1, 8), float32] */;
  %114 = sin(%113) /* ty=Tensor[(11, 1, 8), float32] */;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(11, 1, 8), float32] */;
  %116 = cast(%var_7071, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %117 = %105.1;
  %118 = minimum(%106, %107) /* ty=Tensor[(11, 16, 8), int8] */;
  %119 = %112.3;
  %120 = floor_mod(%115, %116) /* ty=Tensor[(11, 48, 8), float32] */;
  (%117, meta[relay.Constant][9] /* ty=Tensor[(672), float64] */, %118, %119, meta[relay.Constant][10] /* ty=Tensor[(660), int64] */, %120)
}

def @func_10082(%var_10077: Tensor[(143), uint16]) -> (Tensor[(15, 15, 10), int64], Tensor[(15, 15, 10), float32], Tensor[(15, 3), float64], Tensor[(143), uint16], Tensor[(286), uint16]) {
  %121 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 10), float64] */;
  %122 = log10(%121) /* ty=Tensor[(15, 15, 10), float64] */;
  %123 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 15, 10), float64] */, dtype="int64") /* ty=Tensor[(15, 15, 10), int64] */;
  %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%122, dtype="int64") /* ty=Tensor[(15, 15, 10), int64] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %127 = cast(%122, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %128 = cast(%var_10077, dtype="uint16") /* ty=Tensor[(143), uint16] */;
  %129 = cast(meta[relay.Constant][12] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %130 = reshape(%128, newshape=[143]) /* ty=Tensor[(143), uint16] */;
  %131 = reshape(%129, newshape=[1, 286]) /* ty=Tensor[(1, 286), uint16] */;
  %132 = @func_9506(%130, %131) /* ty=(Tensor[(12, 7, 13), float32], Tensor[(3, 15, 1), float64], Tensor[(15, 3), float64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(1, 286), uint16]) */;
  %133 = subtract(%125, %126) /* ty=Tensor[(15, 15, 10), int64] */;
  %134 = exp(%127) /* ty=Tensor[(15, 15, 10), float32] */;
  %135 = %132.2;
  (%133, %134, %135, %var_10077, meta[relay.Constant][12] /* ty=Tensor[(286), uint16] */)
}

def @func_6990(%var_6965: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
  %136 = cast(%var_6965, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %137 = log2(%136) /* ty=Tensor[(14, 16, 16), float32] */;
  (%137,)
}

def @func_9839(%var_9833: float32, %var_9834: Tensor[(6, 10, 6), float32]) -> Tensor[(6, 10, 6), float32] {
  %138 = cast(%var_9833, dtype="float32") /* ty=float32 */;
  %139 = cast(%var_9834, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
  divide(%138, %139) /* ty=Tensor[(6, 10, 6), float32] */
}

def @func_13986() -> (Tensor[(11, 8, 9), float64],) {
  %140 = @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %141 = %140.0;
  (%141,)
}

def @func_13867(%var_13841: Tensor[(300), float64]) -> (Tensor[(3, 10, 10), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) {
  %142 = cast(%var_13841, dtype="float64") /* ty=Tensor[(300), float64] */;
  %143 = reshape(%142, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), float64] */;
  %144 = @func_1853(%143) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(2288), uint64], Tensor[(11, 16, 13), float64], Tensor[(3, 10, 10), float64]) */;
  %145 = @func_13773() /* ty=Tensor[(11, 8, 9), float64] */;
  %146 = cast(%145, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %147 = log10(%146) /* ty=Tensor[(11, 8, 9), float64] */;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %149 = %144.3;
  %150 = sin(%148) /* ty=Tensor[(11, 8, 9), float64] */;
  (%149, %var_13841, %150)
}

def @func_13104(%var_13096: Tensor[(16, 15, 3), int16], %var_13097: Tensor[(16, 15, 3), int16]) -> Tensor[(16, 15, 3), int16] {
  %151 = cast(%var_13097, dtype="int16") /* ty=Tensor[(16, 15, 3), int16] */;
  %152 = shape_of(%var_13096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%var_13096, dtype="int16") /* ty=Tensor[(16, 15, 3), int16] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%153, %154) /* ty=Tensor[(16, 15, 3), int16] */
}

def @func_14494(%var_14463: Tensor[(143), uint16], %var_14464: Tensor[(286), uint16], %var_14469: Tensor[(900), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(286), uint16], Tensor[(6, 10, 15), int64], Tensor[(900), int64]) {
  %155 = @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %156 = cast(%var_14463, dtype="uint16") /* ty=Tensor[(143), uint16] */;
  %157 = cast(%var_14464, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %158 = reshape(%156, newshape=[13, 1, 11]) /* ty=Tensor[(13, 1, 11), uint16] */;
  %159 = reshape(%157, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), uint16] */;
  %160 = @func_8776(%158, %159) /* ty=(Tensor[(13, 2, 11), uint16],) */;
  %161 = cast(%var_14469, dtype="int64") /* ty=Tensor[(900), int64] */;
  %162 = reshape(%161, newshape=[6, 10, 15]) /* ty=Tensor[(6, 10, 15), int64] */;
  %163 = %155.0;
  %164 = %160.0;
  %165 = @func_3712(%162) /* ty=Tensor[(6, 10, 15), int64] */;
  (%163, %164, %var_14463, %var_14464, %165, %var_14469)
}

def @func_13698() -> (Tensor[(11, 8, 9), float64],) {
  %166 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %167 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 8, 9), float32] */, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %168 = shape_of(%166, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%166, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %171 = add(%169, %170) /* ty=Tensor[(11, 8, 9), float64] */;
  (%171,)
}

def @func_15464(%var_15428: Tensor[(11, 8, 9), float64]) -> Tensor[(11, 8, 9), bool] {
  %172 = @func_14998() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %173 = %172.0;
  %174 = cast(%var_15428, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%173, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = not_equal(%176, %177) /* ty=Tensor[(11, 8, 9), bool] */;
  %179 = cast(%178, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %180 = shape_of(%var_15428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%var_15428, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%181, %182) /* ty=Tensor[(11, 8, 9), bool] */
}

def @func_9506(%var_9503: Tensor[(143), uint16], %var_9504: Tensor[(1, 286), uint16]) -> (Tensor[(12, 7, 13), float32], Tensor[(3, 15, 1), float64], Tensor[(15, 3), float64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(1, 286), uint16]) {
  %183 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 7, 13), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  %184 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3), float64] */;
  %185 = reshape(%184, newshape=[3, 15, 1]) /* ty=Tensor[(3, 15, 1), float64] */;
  %186 = @func_3985(%185) /* ty=(Tensor[(3, 15, 1), float64],) */;
  %187 = cast(meta[relay.Constant][16] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %188 = cast(meta[relay.Constant][16] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %189 = reshape(%187, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %190 = reshape(%188, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %191 = cast(meta[relay.Constant][17] /* ty=Tensor[(660), uint8] */, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %192 = cast(meta[relay.Constant][17] /* ty=Tensor[(660), uint8] */, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %193 = reshape(%191, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
  %194 = reshape(%192, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
  %195 = cast(%var_9503, dtype="uint16") /* ty=Tensor[(143), uint16] */;
  %196 = cast(%var_9504, dtype="uint16") /* ty=Tensor[(1, 286), uint16] */;
  %197 = reshape(%195, newshape=[13, 1, 11]) /* ty=Tensor[(13, 1, 11), uint16] */;
  %198 = reshape(%196, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), uint16] */;
  %199 = @func_8776(%197, %198) /* ty=(Tensor[(13, 2, 11), uint16],) */;
  %200 = asin(%183) /* ty=Tensor[(12, 7, 13), float32] */;
  %201 = %186.0;
  %202 = @func_5665(%189, %190) /* ty=Tensor[(7, 12, 16), float32] */;
  %203 = @func_3395(%193, %194) /* ty=Tensor[(12, 11, 5), uint8] */;
  %204 = %199.0;
  (%200, %201, meta[relay.Constant][15] /* ty=Tensor[(15, 3), float64] */, %202, meta[relay.Constant][16] /* ty=Tensor[(1344), uint16] */, %203, meta[relay.Constant][17] /* ty=Tensor[(660), uint8] */, %204, %var_9503, %var_9504)
}

def @func_1418(%var_1403: Tensor[(9, 10, 8), uint32], %var_1404: Tensor[(9, 10, 8), uint32]) -> (Tensor[(9, 10, 8), bool], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  %205 = cast(%var_1404, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %206 = shape_of(%var_1403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%var_1403, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %209 = cast(meta[relay.Constant][18] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %210 = reshape(%209, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int64] */;
  %211 = @func_89(%210) /* ty=(Tensor[(11, 15, 4), bool],) */;
  %212 = equal(%207, %208) /* ty=Tensor[(9, 10, 8), bool] */;
  %213 = %211.0;
  (%212, %213, meta[relay.Constant][18] /* ty=Tensor[(660), int64] */)
}

def @func_8675(%var_8659: Tensor[(48), float32], %var_8660: Tensor[(660), int64], %var_8668: Tensor[(180, 4), uint32]) -> (Tensor[(5, 10, 12), uint8], Tensor[(600), uint8], Tensor[(9, 7, 13), float64], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(9, 10, 8), bool], Tensor[(180, 4), uint32]) {
  %214 = cast(meta[relay.Constant][19] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %215 = cast(meta[relay.Constant][19] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %216 = reshape(%214, newshape=[5, 10, 12]) /* ty=Tensor[(5, 10, 12), uint8] */;
  %217 = reshape(%215, newshape=[5, 10, 12]) /* ty=Tensor[(5, 10, 12), uint8] */;
  %218 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
  %219 = rsqrt(%218) /* ty=Tensor[(9, 7, 13), float64] */;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
  %221 = cast(%var_8659, dtype="float32") /* ty=Tensor[(48), float32] */;
  %222 = cast(%var_8660, dtype="int64") /* ty=Tensor[(660), int64] */;
  %223 = reshape(%221, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float32] */;
  %224 = reshape(%222, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %225 = @func_1241(%223, %224) /* ty=(Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) */;
  %226 = cast(%var_8668, dtype="uint32") /* ty=Tensor[(180, 4), uint32] */;
  %227 = cast(%var_8668, dtype="uint32") /* ty=Tensor[(180, 4), uint32] */;
  %228 = reshape(%226, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint32] */;
  %229 = reshape(%227, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint32] */;
  %230 = @func_1418(%228, %229) /* ty=(Tensor[(9, 10, 8), bool], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %231 = @func_4716(%216, %217) /* ty=Tensor[(5, 10, 12), uint8] */;
  %232 = sqrt(%220) /* ty=Tensor[(9, 7, 13), float64] */;
  %233 = %225.0;
  %234 = %230.0;
  (%231, meta[relay.Constant][19] /* ty=Tensor[(600), uint8] */, %232, %233, %var_8659, %var_8660, %234, %var_8668)
}

def @main(%var_15640: Tensor[(2, 2048), float64]) -> Tensor[(2, 2048), float32] {
  %235 = @func_15016() /* ty=(Tensor[(11, 8, 9), float32], uint64, Tensor[(2, 2048), float64]) */;
  %236 = %235.2;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(2, 2048), float64] */;
  %238 = asin(%237) /* ty=Tensor[(2, 2048), float64] */;
  %239 = cast(%var_15640, dtype="float32") /* ty=Tensor[(2, 2048), float32] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(2), int32] */;
  %241 = cast(%238, dtype="float32") /* ty=Tensor[(2, 2048), float32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %243 = floor_mod(%241, %242) /* ty=Tensor[(2, 2048), float32] */;
  %244 = cast(%243, dtype="float32") /* ty=Tensor[(2, 2048), float32] */;
  acosh(%244) /* ty=Tensor[(2, 2048), float32] */
}

def @func_1292(%var_1260: Tensor[(486), float32], %var_1261: Tensor[(10, 66), int64], %var_1285: uint64) -> (Tensor[(9, 13, 7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(10, 66), int64], Tensor[(11, 15, 4), bool], Tensor[(16, 16, 2), bool], uint64) {
  %245 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 13, 7), float64] */, dtype="float64") /* ty=Tensor[(9, 13, 7), float64] */;
  %246 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %247 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %248 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %249 = cast(%var_1261, dtype="int64") /* ty=Tensor[(10, 66), int64] */;
  %250 = reshape(%246, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %251 = reshape(%247, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %252 = reshape(%248, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %253 = reshape(%249, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %254 = @func_900(%250, %251, %252, %253) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %255 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %256 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %257 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %258 = cast(%var_1261, dtype="int64") /* ty=Tensor[(10, 66), int64] */;
  %259 = reshape(%255, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %260 = reshape(%256, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %261 = reshape(%257, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %262 = reshape(%258, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %263 = @func_900(%259, %260, %261, %262) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %264 = cast(%var_1285, dtype="uint64") /* ty=uint64 */;
  %265 = reshape(%264, newshape=[]) /* ty=uint64 */;
  %266 = @func_965(%265) /* ty=(Tensor[(16, 16, 2), bool],) */;
  %267 = erf(%245) /* ty=Tensor[(9, 13, 7), float64] */;
  %268 = %254.0;
  %269 = %263.1;
  %270 = %266.0;
  (%267, %268, %var_1260, %var_1261, %269, %270, %var_1285)
}

def @func_8776(%var_8770: Tensor[(13, 1, 11), uint16], %var_8771: Tensor[(13, 2, 11), uint16]) -> (Tensor[(13, 2, 11), uint16],) {
  %271 = cast(%var_8770, dtype="uint16") /* ty=Tensor[(13, 1, 11), uint16] */;
  %272 = cast(%var_8771, dtype="uint16") /* ty=Tensor[(13, 2, 11), uint16] */;
  %273 = left_shift(%271, %272) /* ty=Tensor[(13, 2, 11), uint16] */;
  (%273,)
}

def @func_13518() -> Tensor[(11, 8, 9), float32] {
  %274 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  sigmoid(%274) /* ty=Tensor[(11, 8, 9), float32] */
}

def @func_8962(%var_8949: Tensor[(13, 9, 5), int16], %var_8950: Tensor[(13, 9, 5), int16], %var_8957: Tensor[(720), uint32]) -> (Tensor[(13, 9, 5), int16], Tensor[(660), int64], Tensor[(720), uint32]) {
  %275 = cast(%var_8950, dtype="int16") /* ty=Tensor[(13, 9, 5), int16] */;
  %276 = shape_of(%var_8949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_8949, dtype="int16") /* ty=Tensor[(13, 9, 5), int16] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %279 = cast(%var_8957, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %280 = cast(%var_8957, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %281 = reshape(%279, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint32] */;
  %282 = reshape(%280, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint32] */;
  %283 = @func_1418(%281, %282) /* ty=(Tensor[(9, 10, 8), bool], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %284 = left_shift(%277, %278) /* ty=Tensor[(13, 9, 5), int16] */;
  %285 = %283.2;
  (%284, %285, %var_8957)
}

def @func_13613(%var_13575: Tensor[(585), int16], %var_13576: Tensor[(720), uint32]) -> (Tensor[(11, 8, 9), float32], Tensor[(300), float64], Tensor[(11, 8, 9), float32], Tensor[(2288), float64], Tensor[(13, 9, 5), int16], Tensor[(585), int16], Tensor[(720), uint32], Tensor[(11, 8, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  %286 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %287 = cast(%286, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %288 = cast(meta[relay.Constant][23] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %289 = reshape(%288, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), float64] */;
  %290 = @func_1853(%289) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(2288), uint64], Tensor[(11, 16, 13), float64], Tensor[(3, 10, 10), float64]) */;
  %291 = %290.1;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %293 = sin(%292) /* ty=Tensor[(2288), float32] */;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %295 = cosh(%294) /* ty=Tensor[(2288), float64] */;
  %296 = cast(%295, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %297 = cast(%var_13575, dtype="int16") /* ty=Tensor[(585), int16] */;
  %298 = cast(%var_13575, dtype="int16") /* ty=Tensor[(585), int16] */;
  %299 = cast(%var_13576, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %300 = reshape(%297, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), int16] */;
  %301 = reshape(%298, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), int16] */;
  %302 = reshape(%299, newshape=[720]) /* ty=Tensor[(720), uint32] */;
  %303 = @func_8962(%300, %301, %302) /* ty=(Tensor[(13, 9, 5), int16], Tensor[(660), int64], Tensor[(720), uint32]) */;
  %304 = cast(meta[relay.Constant][24] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %305 = reshape(%304, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int64] */;
  %306 = @func_89(%305) /* ty=(Tensor[(11, 15, 4), bool],) */;
  %307 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %308 = atanh(%287) /* ty=Tensor[(11, 8, 9), float32] */;
  %309 = atan(%296) /* ty=Tensor[(2288), float64] */;
  %310 = %303.0;
  %311 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %312 = %306.0;
  (%307, meta[relay.Constant][23] /* ty=Tensor[(300), float64] */, %308, %309, %310, %var_13575, %var_13576, %311, %312, meta[relay.Constant][24] /* ty=Tensor[(660), int64] */)
}

def @func_15508() -> Tensor[(11, 8, 9), float32] {
  %313 = @func_15412() /* ty=(Tensor[(11, 8, 9), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) */;
  %313.0
}

def @func_4716(%var_4711: Tensor[(5, 10, 12), uint8], %var_4712: Tensor[(5, 10, 12), uint8]) -> Tensor[(5, 10, 12), uint8] {
  %314 = cast(%var_4712, dtype="uint8") /* ty=Tensor[(5, 10, 12), uint8] */;
  %315 = shape_of(%var_4711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%var_4711, dtype="uint8") /* ty=Tensor[(5, 10, 12), uint8] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%316, %317) /* ty=Tensor[(5, 10, 12), uint8] */
}

def @func_10439(%var_10428: Tensor[(5, 11, 5), float64]) -> (Tensor[(5, 11, 5), float64],) {
  %318 = cast(%var_10428, dtype="float64") /* ty=Tensor[(5, 11, 5), float64] */;
  %319 = sigmoid(%318) /* ty=Tensor[(5, 11, 5), float64] */;
  (%319,)
}

def @func_9453(%var_9443: Tensor[(16, 6, 11), int8], %var_9444: Tensor[(16, 6, 11), int8]) -> (Tensor[(16, 6, 11), int8],) {
  %320 = cast(%var_9444, dtype="int8") /* ty=Tensor[(16, 6, 11), int8] */;
  %321 = shape_of(%var_9443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%var_9443, dtype="int8") /* ty=Tensor[(16, 6, 11), int8] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %324 = minimum(%322, %323) /* ty=Tensor[(16, 6, 11), int8] */;
  (%324,)
}

def @func_15202() -> (Tensor[(11, 8, 9), float32], Tensor[(11, 8, 9), float64]) {
  %325 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %326 = %325.0;
  %327 = cast(%326, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %328 = @func_13986() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %329 = log(%327) /* ty=Tensor[(11, 8, 9), float32] */;
  %330 = %328.0;
  (%329, %330)
}

def @func_7907(%var_7898: Tensor[(10, 13, 5), int16], %var_7899: Tensor[(10, 13, 5), int16]) -> (Tensor[(10, 13, 5), bool],) {
  %331 = cast(%var_7899, dtype="bool") /* ty=Tensor[(10, 13, 5), bool] */;
  %332 = shape_of(%var_7898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_7898, dtype="bool") /* ty=Tensor[(10, 13, 5), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = less_equal(%333, %334) /* ty=Tensor[(10, 13, 5), bool] */;
  (%335,)
}

def @func_13895(%var_13875: Tensor[(16, 16, 16), float64]) -> (Tensor[(16, 16, 16), float64], Tensor[(16, 16, 2), bool], uint64) {
  %336 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 1, 16), float64] */;
  %337 = cast(%var_13875, dtype="float64") /* ty=Tensor[(16, 16, 16), float64] */;
  %338 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %339 = reshape(%338, newshape=[]) /* ty=uint64 */;
  %340 = @func_965(%339) /* ty=(Tensor[(16, 16, 2), bool],) */;
  %341 = add(%336, %337) /* ty=Tensor[(16, 16, 16), float64] */;
  %342 = %340.0;
  (%341, %342, meta[relay.Constant][26] /* ty=uint64 */)
}

def @func_12400(%var_12388: float32, %var_12389: Tensor[(9, 5, 3), float32]) -> (Tensor[(9, 5, 3), float32],) {
  %343 = cast(%var_12388, dtype="float32") /* ty=float32 */;
  %344 = cast(%var_12389, dtype="float32") /* ty=Tensor[(9, 5, 3), float32] */;
  %345 = power(%343, %344) /* ty=Tensor[(9, 5, 3), float32] */;
  (%345,)
}

def @func_460(%var_451: Tensor[(2, 14, 13), float32]) -> Tensor[(2, 14, 13), float32] {
  %346 = cast(%var_451, dtype="float32") /* ty=Tensor[(2, 14, 13), float32] */;
  atanh(%346) /* ty=Tensor[(2, 14, 13), float32] */
}

def @func_89(%var_84: Tensor[(11, 15, 4), int64]) -> (Tensor[(11, 15, 4), bool],) {
  %347 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 15, 4), int64] */, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
  %348 = shape_of(%var_84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%var_84, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %351 = equal(%349, %350) /* ty=Tensor[(11, 15, 4), bool] */;
  (%351,)
}

def @func_8801(%var_8784: Tensor[(9, 8, 9), float64]) -> (Tensor[(9, 8, 9), float64], Tensor[(16, 16, 2), bool], uint64) {
  %352 = cast(%var_8784, dtype="float64") /* ty=Tensor[(9, 8, 9), float64] */;
  %353 = cast(meta[relay.Constant][28] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %354 = reshape(%353, newshape=[]) /* ty=uint64 */;
  %355 = @func_965(%354) /* ty=(Tensor[(16, 16, 2), bool],) */;
  %356 = erf(%352) /* ty=Tensor[(9, 8, 9), float64] */;
  %357 = %355.0;
  (%356, %357, meta[relay.Constant][28] /* ty=uint64 */)
}

def @func_12377(%var_12364: Tensor[(1260), float32], %var_12373: Tensor[(10, 45), float32], %var_12374: Tensor[(1, 48), float32], %var_12375: Tensor[(660), int64]) -> (Tensor[(9, 11, 5), float32], Tensor[(15, 6, 14), uint8], Tensor[(7, 12, 16), float32], Tensor[(10, 45), float32], Tensor[(1, 48), float32], Tensor[(660), int64]) {
  %358 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %359 = cast(%var_12364, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %360 = reshape(%359, newshape=[15, 6, 14]) /* ty=Tensor[(15, 6, 14), float32] */;
  %361 = @func_5744(%360) /* ty=(Tensor[(15, 6, 14), float32],) */;
  %362 = %361.0;
  %363 = cast(%var_12364, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%362, dtype="uint8") /* ty=Tensor[(15, 6, 14), uint8] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %367 = cast(%var_12373, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %368 = cast(%var_12374, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %369 = cast(%var_12375, dtype="int64") /* ty=Tensor[(660), int64] */;
  %370 = reshape(%367, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), float32] */;
  %371 = reshape(%368, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %372 = reshape(%369, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %373 = @func_12125(%370, %371, %372) /* ty=(Tensor[(10, 13, 5), bool], Tensor[(650), int16], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(15, 3, 10), int16]) */;
  %374 = cosh(%358) /* ty=Tensor[(9, 11, 5), float32] */;
  %375 = bitwise_xor(%365, %366) /* ty=Tensor[(15, 6, 14), uint8] */;
  %376 = %373.5;
  (%374, %375, %376, %var_12373, %var_12374, %var_12375)
}

def @func_14998() -> (Tensor[(11, 8, 9), float64],) {
  %377 = @func_14609() /* ty=(Tensor[(11, 8, 9), float32],) */;
  %378 = %377.0;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %380 = cos(%379) /* ty=Tensor[(11, 8, 9), float64] */;
  (%380,)
}

def @func_5665(%var_5652: Tensor[(7, 12, 16), uint16], %var_5653: Tensor[(7, 12, 16), uint16]) -> Tensor[(7, 12, 16), float32] {
  %381 = cast(%var_5653, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
  %382 = shape_of(%var_5652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%var_5652, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %385 = minimum(%383, %384) /* ty=Tensor[(7, 12, 16), uint16] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(7, 12, 16), float32] */;
  %387 = asin(%386) /* ty=Tensor[(7, 12, 16), float32] */;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(7, 12, 16), float32] */;
  sinh(%388) /* ty=Tensor[(7, 12, 16), float32] */
}

def @func_900(%var_870: Tensor[(6, 9, 9), float32], %var_871: Tensor[(6, 9, 9), float32], %var_877: Tensor[(6, 9, 9), float32], %var_887: Tensor[(660), int64]) -> (Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  %389 = cast(%var_871, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %390 = shape_of(%var_870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%var_870, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %393 = floor_divide(%391, %392) /* ty=Tensor[(6, 9, 9), float32] */;
  %394 = cast(%var_877, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %398 = cast(%var_887, dtype="int64") /* ty=Tensor[(660), int64] */;
  %399 = reshape(%398, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int64] */;
  %400 = @func_89(%399) /* ty=(Tensor[(11, 15, 4), bool],) */;
  %401 = subtract(%396, %397) /* ty=Tensor[(6, 9, 9), float32] */;
  %402 = %400.0;
  (%401, %402, %var_887)
}

def @func_12750(%var_12729: Tensor[(7, 16, 6), float64], %var_12743: Tensor[(1, 660), int64]) -> (Tensor[(7, 16, 6), float64], Tensor[(7, 16, 6), float64], Tensor[(180, 4), uint32], Tensor[(4, 12), float32], Tensor[(1, 660), int64], Tensor[(720), uint32]) {
  %403 = cast(%var_12729, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %404 = cast(%var_12729, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %405 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %406 = cast(%var_12743, dtype="int64") /* ty=Tensor[(1, 660), int64] */;
  %407 = cast(meta[relay.Constant][31] /* ty=Tensor[(720), uint32] */, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %408 = reshape(%405, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %409 = reshape(%406, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %410 = reshape(%407, newshape=[180, 4]) /* ty=Tensor[(180, 4), uint32] */;
  %411 = @func_8675(%408, %409, %410) /* ty=(Tensor[(5, 10, 12), uint8], Tensor[(600), uint8], Tensor[(9, 7, 13), float64], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(9, 10, 8), bool], Tensor[(180, 4), uint32]) */;
  %412 = log10(%403) /* ty=Tensor[(7, 16, 6), float64] */;
  %413 = sinh(%404) /* ty=Tensor[(7, 16, 6), float64] */;
  %414 = %411.7;
  (%412, %413, %414, meta[relay.Constant][30] /* ty=Tensor[(4, 12), float32] */, %var_12743, meta[relay.Constant][31] /* ty=Tensor[(720), uint32] */)
}

def @func_6082(%var_6038: Tensor[(7, 4, 3), float32], %var_6075: Tensor[(672), float64]) -> (Tensor[(7, 4, 3), bool], uint64, Tensor[(672), float64], Tensor[(7, 4, 3), float32]) {
  %415 = cast(%var_6038, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
  %416 = log2(%415) /* ty=Tensor[(7, 4, 3), float32] */;
  %417 = cast(%416, dtype="bool") /* ty=Tensor[(7, 4, 3), bool] */;
  %418 = shape_of(%var_6038, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%var_6038, dtype="bool") /* ty=Tensor[(7, 4, 3), bool] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %421 = cast(%var_6075, dtype="float64") /* ty=Tensor[(672), float64] */;
  %422 = reshape(%421, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), float64] */;
  %423 = @func_4096(%422) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(16, 16, 2), bool], uint64, Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */;
  %424 = cast(%416, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
  %425 = less(%419, %420) /* ty=Tensor[(7, 4, 3), bool] */;
  %426 = %423.2;
  %427 = asin(%424) /* ty=Tensor[(7, 4, 3), float32] */;
  (%425, %426, %var_6075, %427)
}

def @func_12125(%var_12045: Tensor[(15, 3, 10), float32], %var_12087: Tensor[(48), float32], %var_12088: Tensor[(660), int64]) -> (Tensor[(10, 13, 5), bool], Tensor[(650), int16], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(15, 3, 10), int16]) {
  %428 = cast(meta[relay.Constant][32] /* ty=Tensor[(650), int16] */, dtype="int16") /* ty=Tensor[(650), int16] */;
  %429 = cast(meta[relay.Constant][32] /* ty=Tensor[(650), int16] */, dtype="int16") /* ty=Tensor[(650), int16] */;
  %430 = reshape(%428, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), int16] */;
  %431 = reshape(%429, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), int16] */;
  %432 = @func_7907(%430, %431) /* ty=(Tensor[(10, 13, 5), bool],) */;
  %433 = cast(%var_12087, dtype="float32") /* ty=Tensor[(48), float32] */;
  %434 = cast(%var_12088, dtype="int64") /* ty=Tensor[(660), int64] */;
  %435 = reshape(%433, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float32] */;
  %436 = reshape(%434, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %437 = @func_1241(%435, %436) /* ty=(Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) */;
  %438 = cast(meta[relay.Constant][33] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %439 = cast(meta[relay.Constant][33] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %440 = reshape(%438, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %441 = reshape(%439, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %442 = cast(%var_12045, dtype="float32") /* ty=Tensor[(15, 3, 10), float32] */;
  %443 = acosh(%442) /* ty=Tensor[(15, 3, 10), float32] */;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(15, 3, 10), float32] */;
  %445 = sigmoid(%444) /* ty=Tensor[(15, 3, 10), float32] */;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(15, 3, 10), float64] */;
  %447 = asinh(%446) /* ty=Tensor[(15, 3, 10), float64] */;
  %448 = cast(%var_12045, dtype="int16") /* ty=Tensor[(15, 3, 10), int16] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="int16") /* ty=Tensor[(15, 3, 10), int16] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %452 = %432.0;
  %453 = %437.0;
  %454 = @func_5665(%440, %441) /* ty=Tensor[(7, 12, 16), float32] */;
  %455 = bitwise_or(%450, %451) /* ty=Tensor[(15, 3, 10), int16] */;
  (%452, meta[relay.Constant][32] /* ty=Tensor[(650), int16] */, %453, %var_12087, %var_12088, %454, meta[relay.Constant][33] /* ty=Tensor[(1344), uint16] */, %455)
}

def @func_9588(%var_9577: Tensor[(2, 13, 7), int16]) -> Tensor[(2, 13, 7), int16] {
  %456 = cast(%var_9577, dtype="int16") /* ty=Tensor[(2, 13, 7), int16] */;
  %457 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(2, 13, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 13, 7), int16] */, dtype="int16") /* ty=Tensor[(2, 13, 7), int16] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%458, %459) /* ty=Tensor[(2, 13, 7), int16] */
}

def @func_3712(%var_3698: Tensor[(6, 10, 15), int64]) -> Tensor[(6, 10, 15), int64] {
  %460 = cast(%var_3698, dtype="int64") /* ty=Tensor[(6, 10, 15), int64] */;
  %461 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(6, 10, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 10, 15), int64] */, dtype="int64") /* ty=Tensor[(6, 10, 15), int64] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%462, %463) /* ty=Tensor[(6, 10, 15), int64] */
}

def @func_15016() -> (Tensor[(11, 8, 9), float32], uint64, Tensor[(2, 2048), float64]) {
  %464 = @func_14609() /* ty=(Tensor[(11, 8, 9), float32],) */;
  %465 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 2048), float64] */, dtype="float64") /* ty=Tensor[(2, 2048), float64] */;
  %466 = reshape(%465, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), float64] */;
  %467 = @func_13895(%466) /* ty=(Tensor[(16, 16, 16), float64], Tensor[(16, 16, 2), bool], uint64) */;
  %468 = %464.0;
  %469 = %467.2;
  (%468, %469, meta[relay.Constant][36] /* ty=Tensor[(2, 2048), float64] */)
}

def @func_15155(%var_15135: Tensor[(486), float32], %var_15147: Tensor[(2288), uint64]) -> (Tensor[(11, 8, 9), float64], Tensor[(660), int64], Tensor[(486), float32], Tensor[(660), int64], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
  %470 = @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %471 = cast(%var_15135, dtype="float32") /* ty=Tensor[(486), float32] */;
  %472 = cast(%var_15135, dtype="float32") /* ty=Tensor[(486), float32] */;
  %473 = cast(%var_15135, dtype="float32") /* ty=Tensor[(486), float32] */;
  %474 = cast(meta[relay.Constant][37] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %475 = reshape(%471, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %476 = reshape(%472, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %477 = reshape(%473, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %478 = reshape(%474, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %479 = @func_900(%475, %476, %477, %478) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %480 = cast(%var_15147, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %481 = reshape(%480, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), uint64] */;
  %482 = %470.0;
  %483 = %479.2;
  %484 = @func_1434(%481) /* ty=Tensor[(11, 16, 13), uint64] */;
  (%482, %483, %var_15135, meta[relay.Constant][37] /* ty=Tensor[(660), int64] */, %484, %var_15147)
}

def @func_3395(%var_3389: Tensor[(12, 11, 5), uint8], %var_3390: Tensor[(12, 11, 5), uint8]) -> Tensor[(12, 11, 5), uint8] {
  %485 = cast(%var_3390, dtype="uint8") /* ty=Tensor[(12, 11, 5), uint8] */;
  %486 = shape_of(%var_3389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%var_3389, dtype="uint8") /* ty=Tensor[(12, 11, 5), uint8] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%487, %488) /* ty=Tensor[(12, 11, 5), uint8] */
}

def @func_4282(%var_4273: Tensor[(9, 13, 3), int16]) -> Tensor[(9, 13, 3), bool] {
  %489 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 13, 3), int16] */, dtype="bool") /* ty=Tensor[(9, 13, 3), bool] */;
  %490 = shape_of(%var_4273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %491 = cast(%var_4273, dtype="bool") /* ty=Tensor[(9, 13, 3), bool] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%491, %492) /* ty=Tensor[(9, 13, 3), bool] */
}

def @func_14344(%var_14339: Tensor[(90, 10), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(6, 10, 15), int64], Tensor[(90, 10), int64]) {
  %493 = @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %494 = cast(%var_14339, dtype="int64") /* ty=Tensor[(90, 10), int64] */;
  %495 = reshape(%494, newshape=[6, 10, 15]) /* ty=Tensor[(6, 10, 15), int64] */;
  %496 = %493.0;
  %497 = @func_3712(%495) /* ty=Tensor[(6, 10, 15), int64] */;
  (%496, %497, %var_14339)
}

def @func_965(%var_960: uint64) -> (Tensor[(16, 16, 2), bool],) {
  %498 = cast(%var_960, dtype="bool") /* ty=bool */;
  %499 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 16, 2), uint64] */, dtype="bool") /* ty=Tensor[(16, 16, 2), bool] */;
  %500 = greater(%498, %499) /* ty=Tensor[(16, 16, 2), bool] */;
  (%500,)
}

def @func_1434(%var_1427: Tensor[(11, 16, 13), uint64]) -> Tensor[(11, 16, 13), uint64] {
  %501 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 16, 13), uint64] */, dtype="uint64") /* ty=Tensor[(1, 16, 13), uint64] */;
  %502 = cast(%var_1427, dtype="uint64") /* ty=Tensor[(11, 16, 13), uint64] */;
  bitwise_xor(%501, %502) /* ty=Tensor[(11, 16, 13), uint64] */
}

def @func_9069(%var_9051: Tensor[(12, 12, 14), int8]) -> (Tensor[(12, 12, 14), int8], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(7, 12, 16), float32]) {
  %503 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 12, 1), int8] */, dtype="int8") /* ty=Tensor[(12, 12, 1), int8] */;
  %504 = cast(%var_9051, dtype="int8") /* ty=Tensor[(12, 12, 14), int8] */;
  %505 = cast(meta[relay.Constant][42] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %506 = cast(meta[relay.Constant][42] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %507 = reshape(%505, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %508 = reshape(%506, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %509 = cast(meta[relay.Constant][42] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %510 = @func_5665(%507, %508) /* ty=Tensor[(7, 12, 16), float32] */;
  %511 = cast(%510, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
  %512 = reshape(%509, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %513 = reshape(%511, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %514 = left_shift(%503, %504) /* ty=Tensor[(12, 12, 14), int8] */;
  %515 = @func_5665(%512, %513) /* ty=Tensor[(7, 12, 16), float32] */;
  (%514, %510, meta[relay.Constant][42] /* ty=Tensor[(1344), uint16] */, %515)
}

def @func_4506(%var_4499: Tensor[(8, 5, 2), float64]) -> Tensor[(8, 5, 2), float64] {
  %516 = cast(%var_4499, dtype="float64") /* ty=Tensor[(8, 5, 2), float64] */;
  acosh(%516) /* ty=Tensor[(8, 5, 2), float64] */
}

def @func_13773() -> Tensor[(11, 8, 9), float64] {
  %517 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %517.0
}

def @func_14272(%var_14242: Tensor[(660), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(5, 1, 11), float64], Tensor[(55), float32], Tensor[(9, 7, 13), float64], Tensor[(48), float32], Tensor[(660), int64], Tensor[(60, 12), uint32], Tensor[(11, 8, 9), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) {
  %518 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %519 = cast(meta[relay.Constant][43] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %520 = reshape(%519, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float64] */;
  %521 = cast(meta[relay.Constant][43] /* ty=Tensor[(55), float64] */, dtype="float32") /* ty=Tensor[(55), float32] */;
  %522 = cast(meta[relay.Constant][44] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %523 = cast(%var_14242, dtype="int64") /* ty=Tensor[(660), int64] */;
  %524 = cast(meta[relay.Constant][45] /* ty=Tensor[(60, 12), uint32] */, dtype="uint32") /* ty=Tensor[(60, 12), uint32] */;
  %525 = reshape(%522, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %526 = reshape(%523, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %527 = reshape(%524, newshape=[180, 4]) /* ty=Tensor[(180, 4), uint32] */;
  %528 = @func_8675(%525, %526, %527) /* ty=(Tensor[(5, 10, 12), uint8], Tensor[(600), uint8], Tensor[(9, 7, 13), float64], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(9, 10, 8), bool], Tensor[(180, 4), uint32]) */;
  %529 = cast(meta[relay.Constant][46] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %530 = reshape(%529, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %531 = @func_13867(%530) /* ty=(Tensor[(3, 10, 10), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) */;
  %532 = @func_13986() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %533 = %518.0;
  %534 = @func_8458(%520) /* ty=Tensor[(5, 1, 11), float64] */;
  %535 = cos(%521) /* ty=Tensor[(55), float32] */;
  %536 = %528.2;
  %537 = %531.2;
  %538 = %532.0;
  (%533, %534, %535, %536, meta[relay.Constant][44] /* ty=Tensor[(48), float32] */, %var_14242, meta[relay.Constant][45] /* ty=Tensor[(60, 12), uint32] */, %537, meta[relay.Constant][46] /* ty=Tensor[(300), float64] */, %538)
}

def @func_13662(%var_13626: Tensor[(1, 1, 7), float32], %var_13640: Tensor[(1260), float32], %var_13641: Tensor[(10, 45), float32]) -> (Tensor[(1, 1, 7), float32], Tensor[(15, 6, 14), uint8], Tensor[(1260), float32], Tensor[(10, 45), float32], Tensor[(48), float32], Tensor[(660), int64]) {
  %539 = cast(%var_13626, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  %540 = cast(%var_13640, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %541 = cast(%var_13641, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %542 = cast(meta[relay.Constant][47] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %543 = cast(meta[relay.Constant][48] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %544 = reshape(%540, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %545 = reshape(%541, newshape=[10, 45]) /* ty=Tensor[(10, 45), float32] */;
  %546 = reshape(%542, newshape=[1, 48]) /* ty=Tensor[(1, 48), float32] */;
  %547 = reshape(%543, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %548 = @func_12377(%544, %545, %546, %547) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(15, 6, 14), uint8], Tensor[(7, 12, 16), float32], Tensor[(10, 45), float32], Tensor[(1, 48), float32], Tensor[(660), int64]) */;
  %549 = tan(%539) /* ty=Tensor[(1, 1, 7), float32] */;
  %550 = %548.1;
  (%549, %550, %var_13640, %var_13641, meta[relay.Constant][47] /* ty=Tensor[(48), float32] */, meta[relay.Constant][48] /* ty=Tensor[(660), int64] */)
}

def @func_14199(%var_14179: Tensor[(81, 6), float32], %var_14180: Tensor[(660, 1), int64], %var_14181: uint64) -> (Tensor[(11, 8, 9), float64], Tensor[(16, 16, 2), bool], Tensor[(660, 1), int64], Tensor[(81, 6), float64]) {
  %551 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %552 = cast(%var_14179, dtype="float32") /* ty=Tensor[(81, 6), float32] */;
  %553 = cast(%var_14180, dtype="int64") /* ty=Tensor[(660, 1), int64] */;
  %554 = cast(%var_14181, dtype="uint64") /* ty=uint64 */;
  %555 = reshape(%552, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %556 = reshape(%553, newshape=[10, 66]) /* ty=Tensor[(10, 66), int64] */;
  %557 = reshape(%554, newshape=[]) /* ty=uint64 */;
  %558 = @func_1292(%555, %556, %557) /* ty=(Tensor[(9, 13, 7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(10, 66), int64], Tensor[(11, 15, 4), bool], Tensor[(16, 16, 2), bool], uint64) */;
  %559 = cast(%var_14180, dtype="int64") /* ty=Tensor[(660, 1), int64] */;
  %560 = cast(%var_14181, dtype="int64") /* ty=int64 */;
  %561 = cast(%var_14179, dtype="float64") /* ty=Tensor[(81, 6), float64] */;
  %562 = %551.0;
  %563 = %558.5;
  %564 = maximum(%559, %560) /* ty=Tensor[(660, 1), int64] */;
  %565 = cos(%561) /* ty=Tensor[(81, 6), float64] */;
  (%562, %563, %564, %565)
}

def @func_8458(%var_8453: Tensor[(5, 1, 11), float64]) -> Tensor[(5, 1, 11), float64] {
  %566 = cast(%var_8453, dtype="float64") /* ty=Tensor[(5, 1, 11), float64] */;
  exp(%566) /* ty=Tensor[(5, 1, 11), float64] */
}

def @func_14329() -> Tensor[(11, 8, 9), float64] {
  %567 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %567.0
}

def @func_1853(%var_1787: Tensor[(3, 10, 10), float64]) -> (Tensor[(3, 10, 10), bool], Tensor[(2288), uint64], Tensor[(11, 16, 13), float64], Tensor[(3, 10, 10), float64]) {
  %568 = cast(%var_1787, dtype="float64") /* ty=Tensor[(3, 10, 10), float64] */;
  %569 = atanh(%568) /* ty=Tensor[(3, 10, 10), float64] */;
  %570 = cast(%var_1787, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %574 = cast(meta[relay.Constant][49] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %575 = reshape(%574, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), uint64] */;
  %576 = @func_1434(%575) /* ty=Tensor[(11, 16, 13), uint64] */;
  %577 = cast(%576, dtype="float64") /* ty=Tensor[(11, 16, 13), float64] */;
  %578 = cast(%569, dtype="float64") /* ty=Tensor[(3, 10, 10), float64] */;
  %579 = logical_or(%572, %573) /* ty=Tensor[(3, 10, 10), bool] */;
  %580 = exp(%577) /* ty=Tensor[(11, 16, 13), float64] */;
  %581 = acosh(%578) /* ty=Tensor[(3, 10, 10), float64] */;
  (%579, meta[relay.Constant][49] /* ty=Tensor[(2288), uint64] */, %580, %581)
}

def @func_1241(%var_1234: Tensor[(3, 8, 2), float32], %var_1239: Tensor[(660), int64]) -> (Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) {
  %582 = cast(%var_1234, dtype="float32") /* ty=Tensor[(3, 8, 2), float32] */;
  %583 = cast(meta[relay.Constant][50] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %584 = cast(meta[relay.Constant][50] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %585 = cast(meta[relay.Constant][50] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %586 = cast(%var_1239, dtype="int64") /* ty=Tensor[(660), int64] */;
  %587 = reshape(%583, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %588 = reshape(%584, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %589 = reshape(%585, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %590 = reshape(%586, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %591 = @func_900(%587, %588, %589, %590) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %592 = log2(%582) /* ty=Tensor[(3, 8, 2), float32] */;
  %593 = %591.1;
  (%592, %593, meta[relay.Constant][50] /* ty=Tensor[(486), float32] */, %var_1239)
}

def @func_10576(%var_10563: Tensor[(1, 8, 16), float64]) -> (Tensor[(1, 8, 16), float64],) {
  %594 = cast(%var_10563, dtype="float64") /* ty=Tensor[(1, 8, 16), float64] */;
  %595 = tan(%594) /* ty=Tensor[(1, 8, 16), float64] */;
  (%595,)
}

def @func_6212(%var_6197: uint64) -> (Tensor[(1, 3, 3), uint64],) {
  %596 = cast(%var_6197, dtype="uint64") /* ty=uint64 */;
  %597 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 3, 3), uint64] */, dtype="uint64") /* ty=Tensor[(1, 3, 3), uint64] */;
  %598 = add(%596, %597) /* ty=Tensor[(1, 3, 3), uint64] */;
  (%598,)
}

def @func_15412() -> (Tensor[(11, 8, 9), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) {
  %599 = @func_14609() /* ty=(Tensor[(11, 8, 9), float32],) */;
  %600 = cast(meta[relay.Constant][52] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %601 = reshape(%600, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float64] */;
  %602 = %599.0;
  %603 = @func_8458(%601) /* ty=Tensor[(5, 1, 11), float64] */;
  (%602, %603, meta[relay.Constant][52] /* ty=Tensor[(55), float64] */)
}

def @func_14867(%var_14838: Tensor[(11, 15, 16), float64]) -> (Tensor[(11, 15, 16), float32],) {
  %604 = cast(%var_14838, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %605 = sqrt(%604) /* ty=Tensor[(11, 15, 16), float64] */;
  %606 = cast(%605, dtype="float32") /* ty=Tensor[(11, 15, 16), float32] */;
  %607 = log(%606) /* ty=Tensor[(11, 15, 16), float32] */;
  (%607,)
}

def @func_14027(%var_14017: Tensor[(80), float64]) -> (Tensor[(11, 8, 9), float64], Tensor[(8, 5, 2), float64], Tensor[(80), float64]) {
  %608 = cast(%var_14017, dtype="float64") /* ty=Tensor[(80), float64] */;
  %609 = reshape(%608, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float64] */;
  %610 = @func_13773() /* ty=Tensor[(11, 8, 9), float64] */;
  %611 = @func_4506(%609) /* ty=Tensor[(8, 5, 2), float64] */;
  (%610, %611, %var_14017)
}

def @func_8702(%var_8689: Tensor[(5, 12, 10), float64], %var_8697: Tensor[(80), float64]) -> (Tensor[(8, 5, 2), float64], Tensor[(80), float64], Tensor[(5, 12, 10), bool]) {
  %612 = cast(%var_8697, dtype="float64") /* ty=Tensor[(80), float64] */;
  %613 = reshape(%612, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float64] */;
  %614 = cast(%var_8689, dtype="float64") /* ty=Tensor[(5, 12, 10), float64] */;
  %615 = sinh(%614) /* ty=Tensor[(5, 12, 10), float64] */;
  %616 = cast(%var_8689, dtype="bool") /* ty=Tensor[(5, 12, 10), bool] */;
  %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%615, dtype="bool") /* ty=Tensor[(5, 12, 10), bool] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %620 = @func_4506(%613) /* ty=Tensor[(8, 5, 2), float64] */;
  %621 = less_equal(%618, %619) /* ty=Tensor[(5, 12, 10), bool] */;
  (%620, %var_8697, %621)
}

def @func_10770(%var_10753: Tensor[(15, 15, 5), float32], %var_10764: Tensor[(845), uint8]) -> (Tensor[(15, 15, 5), bool], Tensor[(13, 13, 5), bool], Tensor[(845), uint8]) {
  %622 = cast(%var_10753, dtype="bool") /* ty=Tensor[(15, 15, 5), bool] */;
  %623 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(15, 15, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 15, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 15, 5), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %626 = cast(%var_10764, dtype="uint8") /* ty=Tensor[(845), uint8] */;
  %627 = cast(%var_10764, dtype="uint8") /* ty=Tensor[(845), uint8] */;
  %628 = reshape(%626, newshape=[13, 13, 5]) /* ty=Tensor[(13, 13, 5), uint8] */;
  %629 = reshape(%627, newshape=[13, 13, 5]) /* ty=Tensor[(13, 13, 5), uint8] */;
  %630 = less_equal(%624, %625) /* ty=Tensor[(15, 15, 5), bool] */;
  %631 = @func_6648(%628, %629) /* ty=Tensor[(13, 13, 5), bool] */;
  (%630, %631, %var_10764)
}

def @func_8865(%var_8839: Tensor[(4, 8, 12), uint64], %var_8846: Tensor[(1, 143), uint16], %var_8847: Tensor[(286), uint16]) -> (Tensor[(4, 8, 12), uint64], Tensor[(13, 2, 11), uint16], Tensor[(1, 143), uint16], Tensor[(286), uint16], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(4, 8, 12), float64]) {
  %632 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 8, 12), uint64] */, dtype="uint64") /* ty=Tensor[(4, 8, 12), uint64] */;
  %633 = shape_of(%var_8839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%var_8839, dtype="uint64") /* ty=Tensor[(4, 8, 12), uint64] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %636 = cast(%var_8846, dtype="uint16") /* ty=Tensor[(1, 143), uint16] */;
  %637 = cast(%var_8847, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %638 = reshape(%636, newshape=[13, 1, 11]) /* ty=Tensor[(13, 1, 11), uint16] */;
  %639 = reshape(%637, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), uint16] */;
  %640 = @func_8776(%638, %639) /* ty=(Tensor[(13, 2, 11), uint16],) */;
  %641 = cast(meta[relay.Constant][55] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %642 = reshape(%641, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %643 = @func_6990(%642) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %644 = cast(%var_8839, dtype="float64") /* ty=Tensor[(4, 8, 12), float64] */;
  %645 = bitwise_xor(%634, %635) /* ty=Tensor[(4, 8, 12), uint64] */;
  %646 = %640.0;
  %647 = %643.0;
  %648 = asin(%644) /* ty=Tensor[(4, 8, 12), float64] */;
  (%645, %646, %var_8846, %var_8847, %647, meta[relay.Constant][55] /* ty=Tensor[(3584), float32] */, %648)
}

def @func_14546(%var_14539: Tensor[(672), float64]) -> (Tensor[(11, 8, 9), float32], Tensor[(7, 16, 6), float64], Tensor[(672), float64], Tensor[(1, 660), int64]) {
  %649 = cast(%var_14539, dtype="float64") /* ty=Tensor[(672), float64] */;
  %650 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 660), int64] */, dtype="int64") /* ty=Tensor[(1, 660), int64] */;
  %651 = reshape(%649, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float64] */;
  %652 = reshape(%650, newshape=[1, 660]) /* ty=Tensor[(1, 660), int64] */;
  %653 = @func_12750(%651, %652) /* ty=(Tensor[(7, 16, 6), float64], Tensor[(7, 16, 6), float64], Tensor[(180, 4), uint32], Tensor[(4, 12), float32], Tensor[(1, 660), int64], Tensor[(720), uint32]) */;
  %654 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %655 = %653.0;
  (%654, %655, %var_14539, meta[relay.Constant][56] /* ty=Tensor[(1, 660), int64] */)
}

def @func_14807(%var_14744: Tensor[(450), float32], %var_14745: Tensor[(48), float32], %var_14746: Tensor[(330, 2), int64], %var_14752: Tensor[(330, 2), int64], %var_14757: Tensor[(1056, 1), int8], %var_14788: Tensor[(3584), float32]) -> (Tensor[(11, 8, 9), float32], Tensor[(2288), uint64], Tensor[(42), int16], Tensor[(15, 6, 14), uint8], Tensor[(1260), float32], Tensor[(450), float32], Tensor[(48), float32], Tensor[(330, 2), bool], Tensor[(16, 6, 11), int8], Tensor[(1056, 1), int8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(330, 2), float64]) {
  %656 = cast(meta[relay.Constant][57] /* ty=Tensor[(42), int16] */, dtype="int16") /* ty=Tensor[(42), int16] */;
  %657 = reshape(%656, newshape=[1, 3, 14]) /* ty=Tensor[(1, 3, 14), int16] */;
  %658 = @func_2648(%657) /* ty=(Tensor[(?, 3, 14), int16], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */;
  %659 = cast(meta[relay.Constant][58] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %660 = cast(%var_14744, dtype="float32") /* ty=Tensor[(450), float32] */;
  %661 = cast(%var_14745, dtype="float32") /* ty=Tensor[(48), float32] */;
  %662 = cast(%var_14746, dtype="int64") /* ty=Tensor[(330, 2), int64] */;
  %663 = reshape(%659, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %664 = reshape(%660, newshape=[10, 45]) /* ty=Tensor[(10, 45), float32] */;
  %665 = reshape(%661, newshape=[1, 48]) /* ty=Tensor[(1, 48), float32] */;
  %666 = reshape(%662, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %667 = @func_12377(%663, %664, %665, %666) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(15, 6, 14), uint8], Tensor[(7, 12, 16), float32], Tensor[(10, 45), float32], Tensor[(1, 48), float32], Tensor[(660), int64]) */;
  %668 = cast(%var_14752, dtype="bool") /* ty=Tensor[(330, 2), bool] */;
  %669 = shape_of(%var_14746, dtype="int32") /* ty=Tensor[(2), int32] */;
  %670 = cast(%var_14746, dtype="bool") /* ty=Tensor[(330, 2), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %672 = cast(%var_14757, dtype="int8") /* ty=Tensor[(1056, 1), int8] */;
  %673 = cast(%var_14757, dtype="int8") /* ty=Tensor[(1056, 1), int8] */;
  %674 = reshape(%672, newshape=[16, 6, 11]) /* ty=Tensor[(16, 6, 11), int8] */;
  %675 = reshape(%673, newshape=[16, 6, 11]) /* ty=Tensor[(16, 6, 11), int8] */;
  %676 = @func_9453(%674, %675) /* ty=(Tensor[(16, 6, 11), int8],) */;
  %677 = cast(%var_14788, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %678 = reshape(%677, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %679 = @func_6990(%678) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %680 = cast(%var_14752, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %681 = atanh(%680) /* ty=Tensor[(330, 2), float64] */;
  %682 = cast(%var_14746, dtype="int8") /* ty=Tensor[(330, 2), int8] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(2), int32] */;
  %684 = cast(%681, dtype="int8") /* ty=Tensor[(330, 2), int8] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %686 = bitwise_and(%684, %685) /* ty=Tensor[(330, 2), int8] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %688 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %689 = %658.2;
  %690 = %667.1;
  %691 = greater(%670, %671) /* ty=Tensor[(330, 2), bool] */;
  %692 = %676.0;
  %693 = %679.0;
  %694 = sqrt(%687) /* ty=Tensor[(330, 2), float64] */;
  (%688, %689, meta[relay.Constant][57] /* ty=Tensor[(42), int16] */, %690, meta[relay.Constant][58] /* ty=Tensor[(1260), float32] */, %var_14744, %var_14745, %691, %692, %var_14757, %693, %var_14788, %694)
}

def @func_2648(%var_2631: Tensor[(1, 3, 14), int16]) -> (Tensor[(?, 3, 14), int16], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
  %695 = cast(%var_2631, dtype="int16") /* ty=Tensor[(1, 3, 14), int16] */;
  %696 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(1, 3, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 3, 14), int16] */, dtype="int16") /* ty=Tensor[(1, 3, 14), int16] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %699 = cast(meta[relay.Constant][60] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %700 = reshape(%699, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), uint64] */;
  %701 = maximum(%697, %698) /* ty=Tensor[(?, 3, 14), int16] */;
  %702 = @func_1434(%700) /* ty=Tensor[(11, 16, 13), uint64] */;
  (%701, %702, meta[relay.Constant][60] /* ty=Tensor[(2288), uint64] */)
}

def @func_15558() -> Tensor[(11, 16, 7), float32] {
  %703 = cast(-5.72038f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %704 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 16, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 16, 7), float32] */;
  mod(%703, %704) /* ty=Tensor[(11, 16, 7), float32] */
}

def @func_6648(%var_6639: Tensor[(13, 13, 5), uint8], %var_6640: Tensor[(13, 13, 5), uint8]) -> Tensor[(13, 13, 5), bool] {
  %705 = cast(%var_6640, dtype="bool") /* ty=Tensor[(13, 13, 5), bool] */;
  %706 = shape_of(%var_6639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%var_6639, dtype="bool") /* ty=Tensor[(13, 13, 5), bool] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%707, %708) /* ty=Tensor[(13, 13, 5), bool] */
}

def @func_3985(%var_3980: Tensor[(3, 15, 1), float64]) -> (Tensor[(3, 15, 1), float64],) {
  %709 = cast(%var_3980, dtype="float64") /* ty=Tensor[(3, 15, 1), float64] */;
  %710 = log10(%709) /* ty=Tensor[(3, 15, 1), float64] */;
  (%710,)
}

def @func_14609() -> (Tensor[(11, 8, 9), float32],) {
  %711 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  (%711,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13987() -> (Tensor[(11, 8, 9), float64],) {
  %2 = fn () -> (Tensor[(11, 8, 9), float64],) {
    %0 = @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(11, 8, 9), float64],) */
}

def @func_12754(%var_12752: Tensor[(7, 16, 6), float64], %var_12753: Tensor[(1, 660), int64]) -> (Tensor[(7, 16, 6), float64], Tensor[(7, 16, 6), float64], Tensor[(180, 4), uint32], Tensor[(4, 12), float32], Tensor[(1, 660), int64], Tensor[(720), uint32]) {
  @func_12750(%var_12752, %var_12753) /* ty=(Tensor[(7, 16, 6), float64], Tensor[(7, 16, 6), float64], Tensor[(180, 4), uint32], Tensor[(4, 12), float32], Tensor[(1, 660), int64], Tensor[(720), uint32]) */
}

def @func_9069(%var_9051: Tensor[(12, 12, 14), int8]) -> (Tensor[(12, 12, 14), int8], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(7, 12, 16), float32]) {
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 12, 1), int8] */, dtype="int8") /* ty=Tensor[(12, 12, 1), int8] */;
  %4 = cast(%var_9051, dtype="int8") /* ty=Tensor[(12, 12, 14), int8] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %7 = reshape(%5, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %8 = reshape(%6, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
  %10 = @func_5665(%7, %8) /* ty=Tensor[(7, 12, 16), float32] */;
  %11 = cast(%10, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
  %12 = reshape(%9, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %13 = reshape(%11, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
  %14 = left_shift(%3, %4) /* ty=Tensor[(12, 12, 14), int8] */;
  %15 = @func_5665(%12, %13) /* ty=Tensor[(7, 12, 16), float32] */;
  (%14, %10, meta[relay.Constant][1] /* ty=Tensor[(1344), uint16] */, %15)
}

def @func_12404(%var_12402: float32, %var_12403: Tensor[(9, 5, 3), float32]) -> (Tensor[(9, 5, 3), float32],) {
  @func_12400(%var_12402, %var_12403) /* ty=(Tensor[(9, 5, 3), float32],) */
}

def @func_14274(%var_14273: Tensor[(660), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(5, 1, 11), float64], Tensor[(55), float32], Tensor[(9, 7, 13), float64], Tensor[(48), float32], Tensor[(660), int64], Tensor[(60, 12), uint32], Tensor[(11, 8, 9), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) {
  %37 = fn (%var_14242: Tensor[(660), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(5, 1, 11), float64], Tensor[(55), float32], Tensor[(9, 7, 13), float64], Tensor[(48), float32], Tensor[(660), int64], Tensor[(60, 12), uint32], Tensor[(11, 8, 9), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) {
    %16 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %17 = cast(meta[relay.Constant][2] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
    %18 = reshape(%17, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float64] */;
    %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(55), float64] */, dtype="float32") /* ty=Tensor[(55), float32] */;
    %20 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %21 = cast(%var_14242, dtype="int64") /* ty=Tensor[(660), int64] */;
    %22 = cast(meta[relay.Constant][4] /* ty=Tensor[(60, 12), uint32] */, dtype="uint32") /* ty=Tensor[(60, 12), uint32] */;
    %23 = reshape(%20, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %24 = reshape(%21, newshape=[660]) /* ty=Tensor[(660), int64] */;
    %25 = reshape(%22, newshape=[180, 4]) /* ty=Tensor[(180, 4), uint32] */;
    %26 = @func_8675(%23, %24, %25) /* ty=(Tensor[(5, 10, 12), uint8], Tensor[(600), uint8], Tensor[(9, 7, 13), float64], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(9, 10, 8), bool], Tensor[(180, 4), uint32]) */;
    %27 = cast(meta[relay.Constant][5] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %28 = reshape(%27, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %29 = @func_13867(%28) /* ty=(Tensor[(3, 10, 10), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) */;
    %30 = @func_13986() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %31 = %16.0;
    %32 = @func_8458(%18) /* ty=Tensor[(5, 1, 11), float64] */;
    %33 = cos(%19) /* ty=Tensor[(55), float32] */;
    %34 = %26.2;
    %35 = %29.2;
    %36 = %30.0;
    (%31, %32, %33, %34, meta[relay.Constant][3] /* ty=Tensor[(48), float32] */, %var_14242, meta[relay.Constant][4] /* ty=Tensor[(60, 12), uint32] */, %35, meta[relay.Constant][5] /* ty=Tensor[(300), float64] */, %36)
  };
  %37(%var_14273) /* ty=(Tensor[(11, 8, 9), float64], Tensor[(5, 1, 11), float64], Tensor[(55), float32], Tensor[(9, 7, 13), float64], Tensor[(48), float32], Tensor[(660), int64], Tensor[(60, 12), uint32], Tensor[(11, 8, 9), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) */
}

def @func_968(%var_966: uint64) -> (Tensor[(16, 16, 2), bool],) {
  @func_965(%var_966) /* ty=(Tensor[(16, 16, 2), bool],) */
}

def @func_11692(%var_11687: Tensor[(7, 3, 10), int64], %var_11688: Tensor[(27, 18), float32], %var_11689: Tensor[(660, 1), int64], %var_11690: Tensor[(1792, 2), float32], %var_11691: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), int64], Tensor[(6, 10, 15), int64], Tensor[(900), int64], Tensor[(660), int64], Tensor[(27, 18), float32], Tensor[(660, 1), int64], Tensor[(12, 11, 5), uint8], Tensor[(3, 15, 1), float64], Tensor[(45), float64], Tensor[(14, 16, 16), float32], Tensor[(1792, 2), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) {
  @func_11685(%var_11687, %var_11688, %var_11689, %var_11690, %var_11691) /* ty=(Tensor[(7, 3, 10), int64], Tensor[(6, 10, 15), int64], Tensor[(900), int64], Tensor[(660), int64], Tensor[(27, 18), float32], Tensor[(660, 1), int64], Tensor[(12, 11, 5), uint8], Tensor[(3, 15, 1), float64], Tensor[(45), float64], Tensor[(14, 16, 16), float32], Tensor[(1792, 2), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) */
}

def @func_3399(%var_3397: Tensor[(12, 11, 5), uint8], %var_3398: Tensor[(12, 11, 5), uint8]) -> Tensor[(12, 11, 5), uint8] {
  @func_3395(%var_3397, %var_3398) /* ty=Tensor[(12, 11, 5), uint8] */
}

def @func_7910(%var_7908: Tensor[(10, 13, 5), int16], %var_7909: Tensor[(10, 13, 5), int16]) -> (Tensor[(10, 13, 5), bool],) {
  %43 = fn (%var_7898: Tensor[(10, 13, 5), int16], %var_7899: Tensor[(10, 13, 5), int16]) -> (Tensor[(10, 13, 5), bool],) {
    %38 = cast(%var_7899, dtype="bool") /* ty=Tensor[(10, 13, 5), bool] */;
    %39 = shape_of(%var_7898, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(%var_7898, dtype="bool") /* ty=Tensor[(10, 13, 5), bool] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %42 = less_equal(%40, %41) /* ty=Tensor[(10, 13, 5), bool] */;
    (%42,)
  };
  %43(%var_7908, %var_7909) /* ty=(Tensor[(10, 13, 5), bool],) */
}

def @func_5747(%var_5745: Tensor[(15, 6, 14), float32]) -> (Tensor[(15, 6, 14), float32],) {
  @func_5744(%var_5745) /* ty=(Tensor[(15, 6, 14), float32],) */
}

def @func_13698() -> (Tensor[(11, 8, 9), float64],) {
  %44 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %45 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 8, 9), float32] */, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %49 = add(%47, %48) /* ty=Tensor[(11, 8, 9), float64] */;
  (%49,)
}

def @func_15508() -> Tensor[(11, 8, 9), float32] {
  %50 = @func_15412() /* ty=(Tensor[(11, 8, 9), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) */;
  %50.0
}

def @func_13613(%var_13575: Tensor[(585), int16], %var_13576: Tensor[(720), uint32]) -> (Tensor[(11, 8, 9), float32], Tensor[(300), float64], Tensor[(11, 8, 9), float32], Tensor[(2288), float64], Tensor[(13, 9, 5), int16], Tensor[(585), int16], Tensor[(720), uint32], Tensor[(11, 8, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  %51 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  %53 = cast(meta[relay.Constant][7] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %54 = reshape(%53, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), float64] */;
  %55 = @func_1853(%54) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(2288), uint64], Tensor[(11, 16, 13), float64], Tensor[(3, 10, 10), float64]) */;
  %56 = %55.1;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(2288), float32] */;
  %58 = sin(%57) /* ty=Tensor[(2288), float32] */;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %60 = cosh(%59) /* ty=Tensor[(2288), float64] */;
  %61 = cast(%60, dtype="float64") /* ty=Tensor[(2288), float64] */;
  %62 = cast(%var_13575, dtype="int16") /* ty=Tensor[(585), int16] */;
  %63 = cast(%var_13575, dtype="int16") /* ty=Tensor[(585), int16] */;
  %64 = cast(%var_13576, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %65 = reshape(%62, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), int16] */;
  %66 = reshape(%63, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), int16] */;
  %67 = reshape(%64, newshape=[720]) /* ty=Tensor[(720), uint32] */;
  %68 = @func_8962(%65, %66, %67) /* ty=(Tensor[(13, 9, 5), int16], Tensor[(660), int64], Tensor[(720), uint32]) */;
  %69 = cast(meta[relay.Constant][8] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %70 = reshape(%69, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int64] */;
  %71 = @func_89(%70) /* ty=(Tensor[(11, 15, 4), bool],) */;
  %72 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %73 = atanh(%52) /* ty=Tensor[(11, 8, 9), float32] */;
  %74 = atan(%61) /* ty=Tensor[(2288), float64] */;
  %75 = %68.0;
  %76 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %77 = %71.0;
  (%72, meta[relay.Constant][7] /* ty=Tensor[(300), float64] */, %73, %74, %75, %var_13575, %var_13576, %76, %77, meta[relay.Constant][8] /* ty=Tensor[(660), int64] */)
}

def @func_6214(%var_6213: uint64) -> (Tensor[(1, 3, 3), uint64],) {
  %81 = fn (%var_6197: uint64) -> (Tensor[(1, 3, 3), uint64],) {
    %78 = cast(%var_6197, dtype="uint64") /* ty=uint64 */;
    %79 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 3, 3), uint64] */, dtype="uint64") /* ty=Tensor[(1, 3, 3), uint64] */;
    %80 = add(%78, %79) /* ty=Tensor[(1, 3, 3), uint64] */;
    (%80,)
  };
  %81(%var_6213) /* ty=(Tensor[(1, 3, 3), uint64],) */
}

def @func_10442(%var_10440: Tensor[(5, 11, 5), float64]) -> (Tensor[(5, 11, 5), float64],) {
  @func_10439(%var_10440) /* ty=(Tensor[(5, 11, 5), float64],) */
}

def @func_15158(%var_15156: Tensor[(486), float32], %var_15157: Tensor[(2288), uint64]) -> (Tensor[(11, 8, 9), float64], Tensor[(660), int64], Tensor[(486), float32], Tensor[(660), int64], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
  %97 = fn (%var_15135: Tensor[(486), float32], %var_15147: Tensor[(2288), uint64]) -> (Tensor[(11, 8, 9), float64], Tensor[(660), int64], Tensor[(486), float32], Tensor[(660), int64], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
    %82 = @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %83 = cast(%var_15135, dtype="float32") /* ty=Tensor[(486), float32] */;
    %84 = cast(%var_15135, dtype="float32") /* ty=Tensor[(486), float32] */;
    %85 = cast(%var_15135, dtype="float32") /* ty=Tensor[(486), float32] */;
    %86 = cast(meta[relay.Constant][10] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
    %87 = reshape(%83, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %88 = reshape(%84, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %89 = reshape(%85, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %90 = reshape(%86, newshape=[660]) /* ty=Tensor[(660), int64] */;
    %91 = @func_900(%87, %88, %89, %90) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
    %92 = cast(%var_15147, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %93 = reshape(%92, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), uint64] */;
    %94 = %82.0;
    %95 = %91.2;
    %96 = @func_1434(%93) /* ty=Tensor[(11, 16, 13), uint64] */;
    (%94, %95, %var_15135, meta[relay.Constant][10] /* ty=Tensor[(660), int64] */, %96, %var_15147)
  };
  %97(%var_15156, %var_15157) /* ty=(Tensor[(11, 8, 9), float64], Tensor[(660), int64], Tensor[(486), float32], Tensor[(660), int64], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */
}

def @func_8967(%var_8964: Tensor[(13, 9, 5), int16], %var_8965: Tensor[(13, 9, 5), int16], %var_8966: Tensor[(720), uint32]) -> (Tensor[(13, 9, 5), int16], Tensor[(660), int64], Tensor[(720), uint32]) {
  @func_8962(%var_8964, %var_8965, %var_8966) /* ty=(Tensor[(13, 9, 5), int16], Tensor[(660), int64], Tensor[(720), uint32]) */
}

def @func_14517(%var_14504: Tensor[(7, 12, 6), uint16], %var_14510: Tensor[(1, 845), uint8]) -> (Tensor[(7, 12, 6), uint16], Tensor[(13, 13, 5), bool], Tensor[(1, 845), uint8]) {
  %98 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 12, 6), uint16] */, dtype="uint16") /* ty=Tensor[(7, 12, 6), uint16] */;
  %99 = shape_of(%var_14504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%var_14504, dtype="uint16") /* ty=Tensor[(7, 12, 6), uint16] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %102 = cast(%var_14510, dtype="uint8") /* ty=Tensor[(1, 845), uint8] */;
  %103 = cast(%var_14510, dtype="uint8") /* ty=Tensor[(1, 845), uint8] */;
  %104 = reshape(%102, newshape=[13, 13, 5]) /* ty=Tensor[(13, 13, 5), uint8] */;
  %105 = reshape(%103, newshape=[13, 13, 5]) /* ty=Tensor[(13, 13, 5), uint8] */;
  %106 = logical_xor(%100, %101) /* ty=Tensor[(7, 12, 6), uint16] */;
  %107 = @func_6648(%104, %105) /* ty=Tensor[(13, 13, 5), bool] */;
  (%106, %107, %var_14510)
}

def @func_5665(%var_5652: Tensor[(7, 12, 16), uint16], %var_5653: Tensor[(7, 12, 16), uint16]) -> Tensor[(7, 12, 16), float32] {
  %108 = cast(%var_5653, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
  %109 = shape_of(%var_5652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%var_5652, dtype="uint16") /* ty=Tensor[(7, 12, 16), uint16] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %112 = minimum(%110, %111) /* ty=Tensor[(7, 12, 16), uint16] */;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(7, 12, 16), float32] */;
  %114 = asin(%113) /* ty=Tensor[(7, 12, 16), float32] */;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(7, 12, 16), float32] */;
  sinh(%115) /* ty=Tensor[(7, 12, 16), float32] */
}

def @func_15567() -> (Tensor[(11, 8, 9), float32],) {
  %116 = @func_15202() /* ty=(Tensor[(11, 8, 9), float32], Tensor[(11, 8, 9), float64]) */;
  %117 = %116.0;
  (%117,)
}

def @func_13897(%var_13896: Tensor[(16, 16, 16), float64]) -> (Tensor[(16, 16, 16), float64], Tensor[(16, 16, 2), bool], uint64) {
  %125 = fn (%var_13875: Tensor[(16, 16, 16), float64]) -> (Tensor[(16, 16, 16), float64], Tensor[(16, 16, 2), bool], uint64) {
    %118 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 1, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 1, 16), float64] */;
    %119 = cast(%var_13875, dtype="float64") /* ty=Tensor[(16, 16, 16), float64] */;
    %120 = cast(meta[relay.Constant][13] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %121 = reshape(%120, newshape=[]) /* ty=uint64 */;
    %122 = @func_965(%121) /* ty=(Tensor[(16, 16, 2), bool],) */;
    %123 = add(%118, %119) /* ty=Tensor[(16, 16, 16), float64] */;
    %124 = %122.0;
    (%123, %124, meta[relay.Constant][13] /* ty=uint64 */)
  };
  %125(%var_13896) /* ty=(Tensor[(16, 16, 16), float64], Tensor[(16, 16, 2), bool], uint64) */
}

def @func_6992(%var_6991: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
  %128 = fn (%var_6965: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
    %126 = cast(%var_6965, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
    %127 = log2(%126) /* ty=Tensor[(14, 16, 16), float32] */;
    (%127,)
  };
  %128(%var_6991) /* ty=(Tensor[(14, 16, 16), float32],) */
}

def @func_14815(%var_14809: Tensor[(450), float32], %var_14810: Tensor[(48), float32], %var_14811: Tensor[(330, 2), int64], %var_14812: Tensor[(330, 2), int64], %var_14813: Tensor[(1056, 1), int8], %var_14814: Tensor[(3584), float32]) -> (Tensor[(11, 8, 9), float32], Tensor[(2288), uint64], Tensor[(42), int16], Tensor[(15, 6, 14), uint8], Tensor[(1260), float32], Tensor[(450), float32], Tensor[(48), float32], Tensor[(330, 2), bool], Tensor[(16, 6, 11), int8], Tensor[(1056, 1), int8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(330, 2), float64]) {
  @func_14807(%var_14809, %var_14810, %var_14811, %var_14812, %var_14813, %var_14814) /* ty=(Tensor[(11, 8, 9), float32], Tensor[(2288), uint64], Tensor[(42), int16], Tensor[(15, 6, 14), uint8], Tensor[(1260), float32], Tensor[(450), float32], Tensor[(48), float32], Tensor[(330, 2), bool], Tensor[(16, 6, 11), int8], Tensor[(1056, 1), int8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(330, 2), float64]) */
}

def @func_15614(%var_15601: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32],) {
  %129 = cast(%var_15601, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %130 = erf(%129) /* ty=Tensor[(8, 7, 11), float32] */;
  (%130,)
}

def @func_7098(%var_7039: Tensor[(11, 1, 8), float32], %var_7066: Tensor[(11, 16, 8), float32], %var_7071: Tensor[(48, 1), float32]) -> (Tensor[(16, 16, 2), bool], Tensor[(672), float64], Tensor[(11, 16, 8), int8], Tensor[(660), int64], Tensor[(660), int64], Tensor[(11, 48, 8), float32]) {
  %131 = cast(meta[relay.Constant][14] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %132 = reshape(%131, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), float64] */;
  %133 = @func_4096(%132) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(16, 16, 2), bool], uint64, Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */;
  %134 = cast(%var_7039, dtype="int8") /* ty=Tensor[(11, 1, 8), int8] */;
  %135 = cast(%var_7066, dtype="int8") /* ty=Tensor[(11, 16, 8), int8] */;
  %136 = cast(%var_7071, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %137 = cast(meta[relay.Constant][15] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %138 = reshape(%136, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float32] */;
  %139 = reshape(%137, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %140 = @func_1241(%138, %139) /* ty=(Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) */;
  %141 = cast(%var_7039, dtype="float32") /* ty=Tensor[(11, 1, 8), float32] */;
  %142 = sin(%141) /* ty=Tensor[(11, 1, 8), float32] */;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(11, 1, 8), float32] */;
  %144 = cast(%var_7071, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %145 = %133.1;
  %146 = minimum(%134, %135) /* ty=Tensor[(11, 16, 8), int8] */;
  %147 = %140.3;
  %148 = floor_mod(%143, %144) /* ty=Tensor[(11, 48, 8), float32] */;
  (%145, meta[relay.Constant][14] /* ty=Tensor[(672), float64] */, %146, %147, meta[relay.Constant][15] /* ty=Tensor[(660), int64] */, %148)
}

def @func_6651(%var_6649: Tensor[(13, 13, 5), uint8], %var_6650: Tensor[(13, 13, 5), uint8]) -> Tensor[(13, 13, 5), bool] {
  %153 = fn (%var_6639: Tensor[(13, 13, 5), uint8], %var_6640: Tensor[(13, 13, 5), uint8]) -> Tensor[(13, 13, 5), bool] {
    %149 = cast(%var_6640, dtype="bool") /* ty=Tensor[(13, 13, 5), bool] */;
    %150 = shape_of(%var_6639, dtype="int32") /* ty=Tensor[(3), int32] */;
    %151 = cast(%var_6639, dtype="bool") /* ty=Tensor[(13, 13, 5), bool] */;
    %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%151, %152) /* ty=Tensor[(13, 13, 5), bool] */
  };
  %153(%var_6649, %var_6650) /* ty=Tensor[(13, 13, 5), bool] */
}

def @func_10579(%var_10577: Tensor[(1, 8, 16), float64]) -> (Tensor[(1, 8, 16), float64],) {
  @func_10576(%var_10577) /* ty=(Tensor[(1, 8, 16), float64],) */
}

def @func_4508(%var_4507: Tensor[(8, 5, 2), float64]) -> Tensor[(8, 5, 2), float64] {
  %155 = fn (%var_4499: Tensor[(8, 5, 2), float64]) -> Tensor[(8, 5, 2), float64] {
    %154 = cast(%var_4499, dtype="float64") /* ty=Tensor[(8, 5, 2), float64] */;
    acosh(%154) /* ty=Tensor[(8, 5, 2), float64] */
  };
  %155(%var_4507) /* ty=Tensor[(8, 5, 2), float64] */
}

def @func_12400(%var_12388: float32, %var_12389: Tensor[(9, 5, 3), float32]) -> (Tensor[(9, 5, 3), float32],) {
  %156 = cast(%var_12388, dtype="float32") /* ty=float32 */;
  %157 = cast(%var_12389, dtype="float32") /* ty=Tensor[(9, 5, 3), float32] */;
  %158 = power(%156, %157) /* ty=Tensor[(9, 5, 3), float32] */;
  (%158,)
}

def @func_3715(%var_3713: Tensor[(6, 10, 15), int64]) -> Tensor[(6, 10, 15), int64] {
  @func_3712(%var_3713) /* ty=Tensor[(6, 10, 15), int64] */
}

def @func_9842(%var_9840: float32, %var_9841: Tensor[(6, 10, 6), float32]) -> Tensor[(6, 10, 6), float32] {
  %161 = fn (%var_9833: float32, %var_9834: Tensor[(6, 10, 6), float32]) -> Tensor[(6, 10, 6), float32] {
    %159 = cast(%var_9833, dtype="float32") /* ty=float32 */;
    %160 = cast(%var_9834, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
    divide(%159, %160) /* ty=Tensor[(6, 10, 6), float32] */
  };
  %161(%var_9840, %var_9841) /* ty=Tensor[(6, 10, 6), float32] */
}

def @func_15016() -> (Tensor[(11, 8, 9), float32], uint64, Tensor[(2, 2048), float64]) {
  %162 = @func_14609() /* ty=(Tensor[(11, 8, 9), float32],) */;
  %163 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 2048), float64] */, dtype="float64") /* ty=Tensor[(2, 2048), float64] */;
  %164 = reshape(%163, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), float64] */;
  %165 = @func_13895(%164) /* ty=(Tensor[(16, 16, 16), float64], Tensor[(16, 16, 2), bool], uint64) */;
  %166 = %162.0;
  %167 = %165.2;
  (%166, %167, meta[relay.Constant][16] /* ty=Tensor[(2, 2048), float64] */)
}

def @func_1245(%var_1243: Tensor[(3, 8, 2), float32], %var_1244: Tensor[(660), int64]) -> (Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) {
  @func_1241(%var_1243, %var_1244) /* ty=(Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) */
}

def @func_3712(%var_3698: Tensor[(6, 10, 15), int64]) -> Tensor[(6, 10, 15), int64] {
  %168 = cast(%var_3698, dtype="int64") /* ty=Tensor[(6, 10, 15), int64] */;
  %169 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(6, 10, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 10, 15), int64] */, dtype="int64") /* ty=Tensor[(6, 10, 15), int64] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%170, %171) /* ty=Tensor[(6, 10, 15), int64] */
}

def @func_10576(%var_10563: Tensor[(1, 8, 16), float64]) -> (Tensor[(1, 8, 16), float64],) {
  %172 = cast(%var_10563, dtype="float64") /* ty=Tensor[(1, 8, 16), float64] */;
  %173 = tan(%172) /* ty=Tensor[(1, 8, 16), float64] */;
  (%173,)
}

def @func_8780(%var_8778: Tensor[(13, 1, 11), uint16], %var_8779: Tensor[(13, 2, 11), uint16]) -> (Tensor[(13, 2, 11), uint16],) {
  @func_8776(%var_8778, %var_8779) /* ty=(Tensor[(13, 2, 11), uint16],) */
}

def @func_9590(%var_9589: Tensor[(2, 13, 7), int16]) -> Tensor[(2, 13, 7), int16] {
  %178 = fn (%var_9577: Tensor[(2, 13, 7), int16]) -> Tensor[(2, 13, 7), int16] {
    %174 = cast(%var_9577, dtype="int16") /* ty=Tensor[(2, 13, 7), int16] */;
    %175 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(2, 13, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %176 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 13, 7), int16] */, dtype="int16") /* ty=Tensor[(2, 13, 7), int16] */;
    %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%176, %177) /* ty=Tensor[(2, 13, 7), int16] */
  };
  %178(%var_9589) /* ty=Tensor[(2, 13, 7), int16] */
}

def @func_12129(%var_12126: Tensor[(15, 3, 10), float32], %var_12127: Tensor[(48), float32], %var_12128: Tensor[(660), int64]) -> (Tensor[(10, 13, 5), bool], Tensor[(650), int16], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(15, 3, 10), int16]) {
  %207 = fn (%var_12045: Tensor[(15, 3, 10), float32], %var_12087: Tensor[(48), float32], %var_12088: Tensor[(660), int64]) -> (Tensor[(10, 13, 5), bool], Tensor[(650), int16], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(15, 3, 10), int16]) {
    %179 = cast(meta[relay.Constant][19] /* ty=Tensor[(650), int16] */, dtype="int16") /* ty=Tensor[(650), int16] */;
    %180 = cast(meta[relay.Constant][19] /* ty=Tensor[(650), int16] */, dtype="int16") /* ty=Tensor[(650), int16] */;
    %181 = reshape(%179, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), int16] */;
    %182 = reshape(%180, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), int16] */;
    %183 = @func_7907(%181, %182) /* ty=(Tensor[(10, 13, 5), bool],) */;
    %184 = cast(%var_12087, dtype="float32") /* ty=Tensor[(48), float32] */;
    %185 = cast(%var_12088, dtype="int64") /* ty=Tensor[(660), int64] */;
    %186 = reshape(%184, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float32] */;
    %187 = reshape(%185, newshape=[660]) /* ty=Tensor[(660), int64] */;
    %188 = @func_1241(%186, %187) /* ty=(Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) */;
    %189 = cast(meta[relay.Constant][20] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
    %190 = cast(meta[relay.Constant][20] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
    %191 = reshape(%189, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
    %192 = reshape(%190, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
    %193 = cast(%var_12045, dtype="float32") /* ty=Tensor[(15, 3, 10), float32] */;
    %194 = acosh(%193) /* ty=Tensor[(15, 3, 10), float32] */;
    %195 = cast(%194, dtype="float32") /* ty=Tensor[(15, 3, 10), float32] */;
    %196 = sigmoid(%195) /* ty=Tensor[(15, 3, 10), float32] */;
    %197 = cast(%196, dtype="float64") /* ty=Tensor[(15, 3, 10), float64] */;
    %198 = asinh(%197) /* ty=Tensor[(15, 3, 10), float64] */;
    %199 = cast(%var_12045, dtype="int16") /* ty=Tensor[(15, 3, 10), int16] */;
    %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
    %201 = cast(%198, dtype="int16") /* ty=Tensor[(15, 3, 10), int16] */;
    %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %203 = %183.0;
    %204 = %188.0;
    %205 = @func_5665(%191, %192) /* ty=Tensor[(7, 12, 16), float32] */;
    %206 = bitwise_or(%201, %202) /* ty=Tensor[(15, 3, 10), int16] */;
    (%203, meta[relay.Constant][19] /* ty=Tensor[(650), int16] */, %204, %var_12087, %var_12088, %205, meta[relay.Constant][20] /* ty=Tensor[(1344), uint16] */, %206)
  };
  %207(%var_12126, %var_12127, %var_12128) /* ty=(Tensor[(10, 13, 5), bool], Tensor[(650), int16], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(15, 3, 10), int16]) */
}

def @func_8801(%var_8784: Tensor[(9, 8, 9), float64]) -> (Tensor[(9, 8, 9), float64], Tensor[(16, 16, 2), bool], uint64) {
  %208 = cast(%var_8784, dtype="float64") /* ty=Tensor[(9, 8, 9), float64] */;
  %209 = cast(meta[relay.Constant][21] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %210 = reshape(%209, newshape=[]) /* ty=uint64 */;
  %211 = @func_965(%210) /* ty=(Tensor[(16, 16, 2), bool],) */;
  %212 = erf(%208) /* ty=Tensor[(9, 8, 9), float64] */;
  %213 = %211.0;
  (%212, %213, meta[relay.Constant][21] /* ty=uint64 */)
}

def @func_4096(%var_4075: Tensor[(12, 7, 8), float64]) -> (Tensor[(12, 7, 8), float64], Tensor[(16, 16, 2), bool], uint64, Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
  %214 = cast(%var_4075, dtype="float64") /* ty=Tensor[(12, 7, 8), float64] */;
  %215 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(12, 7, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 7, 8), float64] */, dtype="float64") /* ty=Tensor[(12, 7, 8), float64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %218 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %219 = reshape(%218, newshape=[]) /* ty=uint64 */;
  %220 = @func_965(%219) /* ty=(Tensor[(16, 16, 2), bool],) */;
  %221 = cast(meta[relay.Constant][24] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %222 = reshape(%221, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), uint64] */;
  %223 = floor_mod(%216, %217) /* ty=Tensor[(12, 7, 8), float64] */;
  %224 = %220.0;
  %225 = @func_1434(%222) /* ty=Tensor[(11, 16, 13), uint64] */;
  (%223, %224, meta[relay.Constant][23] /* ty=uint64 */, %225, meta[relay.Constant][24] /* ty=Tensor[(2288), uint64] */)
}

def @func_5852(%var_5849: Tensor[(14, 1, 16), float64], %var_5850: Tensor[(1260), float32], %var_5851: Tensor[(660), int64]) -> (Tensor[(15, 6, 14), float32], Tensor[(1260), float32], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(660), int64], Tensor[(14, ?, 16), uint32], Tensor[(6, 10, 15), int64], Tensor[(9, 100), int64]) {
  %250 = fn (%var_5787: Tensor[(14, 1, 16), float64], %var_5810: Tensor[(1260), float32], %var_5824: Tensor[(660), int64]) -> (Tensor[(15, 6, 14), float32], Tensor[(1260), float32], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(660), int64], Tensor[(14, ?, 16), uint32], Tensor[(6, 10, 15), int64], Tensor[(9, 100), int64]) {
    %226 = cast(%var_5810, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %227 = reshape(%226, newshape=[15, 6, 14]) /* ty=Tensor[(15, 6, 14), float32] */;
    %228 = @func_5744(%227) /* ty=(Tensor[(15, 6, 14), float32],) */;
    %229 = cast(meta[relay.Constant][25] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
    %230 = cast(meta[relay.Constant][25] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
    %231 = cast(meta[relay.Constant][25] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
    %232 = cast(%var_5824, dtype="int64") /* ty=Tensor[(660), int64] */;
    %233 = reshape(%229, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %234 = reshape(%230, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %235 = reshape(%231, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
    %236 = reshape(%232, newshape=[660]) /* ty=Tensor[(660), int64] */;
    %237 = @func_900(%233, %234, %235, %236) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
    %238 = cast(%var_5787, dtype="float64") /* ty=Tensor[(14, 1, 16), float64] */;
    %239 = sqrt(%238) /* ty=Tensor[(14, 1, 16), float64] */;
    %240 = cast(%var_5787, dtype="uint32") /* ty=Tensor[(14, 1, 16), uint32] */;
    %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
    %242 = cast(%239, dtype="uint32") /* ty=Tensor[(14, 1, 16), uint32] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %244 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 100), int64] */, dtype="int64") /* ty=Tensor[(9, 100), int64] */;
    %245 = reshape(%244, newshape=[6, 10, 15]) /* ty=Tensor[(6, 10, 15), int64] */;
    %246 = %228.0;
    %247 = %237.0;
    %248 = subtract(%242, %243) /* ty=Tensor[(14, ?, 16), uint32] */;
    %249 = @func_3712(%245) /* ty=Tensor[(6, 10, 15), int64] */;
    (%246, %var_5810, %247, meta[relay.Constant][25] /* ty=Tensor[(486), float32] */, %var_5824, %248, %249, meta[relay.Constant][26] /* ty=Tensor[(9, 100), int64] */)
  };
  %250(%var_5849, %var_5850, %var_5851) /* ty=(Tensor[(15, 6, 14), float32], Tensor[(1260), float32], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(660), int64], Tensor[(14, ?, 16), uint32], Tensor[(6, 10, 15), int64], Tensor[(9, 100), int64]) */
}

def @func_14548(%var_14547: Tensor[(672), float64]) -> (Tensor[(11, 8, 9), float32], Tensor[(7, 16, 6), float64], Tensor[(672), float64], Tensor[(1, 660), int64]) {
  %258 = fn (%var_14539: Tensor[(672), float64]) -> (Tensor[(11, 8, 9), float32], Tensor[(7, 16, 6), float64], Tensor[(672), float64], Tensor[(1, 660), int64]) {
    %251 = cast(%var_14539, dtype="float64") /* ty=Tensor[(672), float64] */;
    %252 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 660), int64] */, dtype="int64") /* ty=Tensor[(1, 660), int64] */;
    %253 = reshape(%251, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float64] */;
    %254 = reshape(%252, newshape=[1, 660]) /* ty=Tensor[(1, 660), int64] */;
    %255 = @func_12750(%253, %254) /* ty=(Tensor[(7, 16, 6), float64], Tensor[(7, 16, 6), float64], Tensor[(180, 4), uint32], Tensor[(4, 12), float32], Tensor[(1, 660), int64], Tensor[(720), uint32]) */;
    %256 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
    %257 = %255.0;
    (%256, %257, %var_14539, meta[relay.Constant][27] /* ty=Tensor[(1, 660), int64] */)
  };
  %258(%var_14547) /* ty=(Tensor[(11, 8, 9), float32], Tensor[(7, 16, 6), float64], Tensor[(672), float64], Tensor[(1, 660), int64]) */
}

def @func_15467(%var_15465: Tensor[(11, 8, 9), float64]) -> Tensor[(11, 8, 9), bool] {
  @func_15464(%var_15465) /* ty=Tensor[(11, 8, 9), bool] */
}

def @func_14498(%var_14495: Tensor[(143), uint16], %var_14496: Tensor[(286), uint16], %var_14497: Tensor[(900), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(286), uint16], Tensor[(6, 10, 15), int64], Tensor[(900), int64]) {
  %270 = fn (%var_14463: Tensor[(143), uint16], %var_14464: Tensor[(286), uint16], %var_14469: Tensor[(900), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(286), uint16], Tensor[(6, 10, 15), int64], Tensor[(900), int64]) {
    %259 = @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %260 = cast(%var_14463, dtype="uint16") /* ty=Tensor[(143), uint16] */;
    %261 = cast(%var_14464, dtype="uint16") /* ty=Tensor[(286), uint16] */;
    %262 = reshape(%260, newshape=[13, 1, 11]) /* ty=Tensor[(13, 1, 11), uint16] */;
    %263 = reshape(%261, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), uint16] */;
    %264 = @func_8776(%262, %263) /* ty=(Tensor[(13, 2, 11), uint16],) */;
    %265 = cast(%var_14469, dtype="int64") /* ty=Tensor[(900), int64] */;
    %266 = reshape(%265, newshape=[6, 10, 15]) /* ty=Tensor[(6, 10, 15), int64] */;
    %267 = %259.0;
    %268 = %264.0;
    %269 = @func_3712(%266) /* ty=Tensor[(6, 10, 15), int64] */;
    (%267, %268, %var_14463, %var_14464, %269, %var_14469)
  };
  %270(%var_14495, %var_14496, %var_14497) /* ty=(Tensor[(11, 8, 9), float64], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(286), uint16], Tensor[(6, 10, 15), int64], Tensor[(900), int64]) */
}

def @func_13107(%var_13105: Tensor[(16, 15, 3), int16], %var_13106: Tensor[(16, 15, 3), int16]) -> Tensor[(16, 15, 3), int16] {
  %275 = fn (%var_13096: Tensor[(16, 15, 3), int16], %var_13097: Tensor[(16, 15, 3), int16]) -> Tensor[(16, 15, 3), int16] {
    %271 = cast(%var_13097, dtype="int16") /* ty=Tensor[(16, 15, 3), int16] */;
    %272 = shape_of(%var_13096, dtype="int32") /* ty=Tensor[(3), int32] */;
    %273 = cast(%var_13096, dtype="int16") /* ty=Tensor[(16, 15, 3), int16] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%273, %274) /* ty=Tensor[(16, 15, 3), int16] */
  };
  %275(%var_13105, %var_13106) /* ty=Tensor[(16, 15, 3), int16] */
}

def @func_13796() -> (Tensor[(11, 8, 9), float64],) {
  @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */
}

def @func_92(%var_90: Tensor[(11, 15, 4), int64]) -> (Tensor[(11, 15, 4), bool],) {
  @func_89(%var_90) /* ty=(Tensor[(11, 15, 4), bool],) */
}

def @func_14610() -> (Tensor[(11, 8, 9), float32],) {
  %277 = fn () -> (Tensor[(11, 8, 9), float32],) {
    %276 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
    (%276,)
  };
  %277() /* ty=(Tensor[(11, 8, 9), float32],) */
}

def @func_12383(%var_12379: Tensor[(1260), float32], %var_12380: Tensor[(10, 45), float32], %var_12381: Tensor[(1, 48), float32], %var_12382: Tensor[(660), int64]) -> (Tensor[(9, 11, 5), float32], Tensor[(15, 6, 14), uint8], Tensor[(7, 12, 16), float32], Tensor[(10, 45), float32], Tensor[(1, 48), float32], Tensor[(660), int64]) {
  @func_12377(%var_12379, %var_12380, %var_12381, %var_12382) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(15, 6, 14), uint8], Tensor[(7, 12, 16), float32], Tensor[(10, 45), float32], Tensor[(1, 48), float32], Tensor[(660), int64]) */
}

def @func_1422(%var_1420: Tensor[(9, 10, 8), uint32], %var_1421: Tensor[(9, 10, 8), uint32]) -> (Tensor[(9, 10, 8), bool], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  @func_1418(%var_1420, %var_1421) /* ty=(Tensor[(9, 10, 8), bool], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */
}

def @func_9456(%var_9454: Tensor[(16, 6, 11), int8], %var_9455: Tensor[(16, 6, 11), int8]) -> (Tensor[(16, 6, 11), int8],) {
  %283 = fn (%var_9443: Tensor[(16, 6, 11), int8], %var_9444: Tensor[(16, 6, 11), int8]) -> (Tensor[(16, 6, 11), int8],) {
    %278 = cast(%var_9444, dtype="int8") /* ty=Tensor[(16, 6, 11), int8] */;
    %279 = shape_of(%var_9443, dtype="int32") /* ty=Tensor[(3), int32] */;
    %280 = cast(%var_9443, dtype="int8") /* ty=Tensor[(16, 6, 11), int8] */;
    %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %282 = minimum(%280, %281) /* ty=Tensor[(16, 6, 11), int8] */;
    (%282,)
  };
  %283(%var_9454, %var_9455) /* ty=(Tensor[(16, 6, 11), int8],) */
}

def @func_4719(%var_4717: Tensor[(5, 10, 12), uint8], %var_4718: Tensor[(5, 10, 12), uint8]) -> Tensor[(5, 10, 12), uint8] {
  %288 = fn (%var_4711: Tensor[(5, 10, 12), uint8], %var_4712: Tensor[(5, 10, 12), uint8]) -> Tensor[(5, 10, 12), uint8] {
    %284 = cast(%var_4712, dtype="uint8") /* ty=Tensor[(5, 10, 12), uint8] */;
    %285 = shape_of(%var_4711, dtype="int32") /* ty=Tensor[(3), int32] */;
    %286 = cast(%var_4711, dtype="uint8") /* ty=Tensor[(5, 10, 12), uint8] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    multiply(%286, %287) /* ty=Tensor[(5, 10, 12), uint8] */
  };
  %288(%var_4717, %var_4718) /* ty=Tensor[(5, 10, 12), uint8] */
}

def @func_8776(%var_8770: Tensor[(13, 1, 11), uint16], %var_8771: Tensor[(13, 2, 11), uint16]) -> (Tensor[(13, 2, 11), uint16],) {
  %289 = cast(%var_8770, dtype="uint16") /* ty=Tensor[(13, 1, 11), uint16] */;
  %290 = cast(%var_8771, dtype="uint16") /* ty=Tensor[(13, 2, 11), uint16] */;
  %291 = left_shift(%289, %290) /* ty=Tensor[(13, 2, 11), uint16] */;
  (%291,)
}

def @func_8865(%var_8839: Tensor[(4, 8, 12), uint64], %var_8846: Tensor[(1, 143), uint16], %var_8847: Tensor[(286), uint16]) -> (Tensor[(4, 8, 12), uint64], Tensor[(13, 2, 11), uint16], Tensor[(1, 143), uint16], Tensor[(286), uint16], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(4, 8, 12), float64]) {
  %292 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 8, 12), uint64] */, dtype="uint64") /* ty=Tensor[(4, 8, 12), uint64] */;
  %293 = shape_of(%var_8839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%var_8839, dtype="uint64") /* ty=Tensor[(4, 8, 12), uint64] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %296 = cast(%var_8846, dtype="uint16") /* ty=Tensor[(1, 143), uint16] */;
  %297 = cast(%var_8847, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %298 = reshape(%296, newshape=[13, 1, 11]) /* ty=Tensor[(13, 1, 11), uint16] */;
  %299 = reshape(%297, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), uint16] */;
  %300 = @func_8776(%298, %299) /* ty=(Tensor[(13, 2, 11), uint16],) */;
  %301 = cast(meta[relay.Constant][29] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %302 = reshape(%301, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %303 = @func_6990(%302) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %304 = cast(%var_8839, dtype="float64") /* ty=Tensor[(4, 8, 12), float64] */;
  %305 = bitwise_xor(%294, %295) /* ty=Tensor[(4, 8, 12), uint64] */;
  %306 = %300.0;
  %307 = %303.0;
  %308 = asin(%304) /* ty=Tensor[(4, 8, 12), float64] */;
  (%305, %306, %var_8846, %var_8847, %307, meta[relay.Constant][29] /* ty=Tensor[(3584), float32] */, %308)
}

def @func_14344(%var_14339: Tensor[(90, 10), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(6, 10, 15), int64], Tensor[(90, 10), int64]) {
  %309 = @func_13794() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %310 = cast(%var_14339, dtype="int64") /* ty=Tensor[(90, 10), int64] */;
  %311 = reshape(%310, newshape=[6, 10, 15]) /* ty=Tensor[(6, 10, 15), int64] */;
  %312 = %309.0;
  %313 = @func_3712(%311) /* ty=Tensor[(6, 10, 15), int64] */;
  (%312, %313, %var_14339)
}

def @func_8962(%var_8949: Tensor[(13, 9, 5), int16], %var_8950: Tensor[(13, 9, 5), int16], %var_8957: Tensor[(720), uint32]) -> (Tensor[(13, 9, 5), int16], Tensor[(660), int64], Tensor[(720), uint32]) {
  %314 = cast(%var_8950, dtype="int16") /* ty=Tensor[(13, 9, 5), int16] */;
  %315 = shape_of(%var_8949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%var_8949, dtype="int16") /* ty=Tensor[(13, 9, 5), int16] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %318 = cast(%var_8957, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %319 = cast(%var_8957, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %320 = reshape(%318, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint32] */;
  %321 = reshape(%319, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint32] */;
  %322 = @func_1418(%320, %321) /* ty=(Tensor[(9, 10, 8), bool], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %323 = left_shift(%316, %317) /* ty=Tensor[(13, 9, 5), int16] */;
  %324 = %322.2;
  (%323, %324, %var_8957)
}

def @func_14869(%var_14868: Tensor[(11, 15, 16), float64]) -> (Tensor[(11, 15, 16), float32],) {
  %329 = fn (%var_14838: Tensor[(11, 15, 16), float64]) -> (Tensor[(11, 15, 16), float32],) {
    %325 = cast(%var_14838, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
    %326 = sqrt(%325) /* ty=Tensor[(11, 15, 16), float64] */;
    %327 = cast(%326, dtype="float32") /* ty=Tensor[(11, 15, 16), float32] */;
    %328 = log(%327) /* ty=Tensor[(11, 15, 16), float32] */;
    (%328,)
  };
  %329(%var_14868) /* ty=(Tensor[(11, 15, 16), float32],) */
}

def @func_2650(%var_2649: Tensor[(1, 3, 14), int16]) -> (Tensor[(?, 3, 14), int16], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
  %338 = fn (%var_2631: Tensor[(1, 3, 14), int16]) -> (Tensor[(?, 3, 14), int16], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
    %330 = cast(%var_2631, dtype="int16") /* ty=Tensor[(1, 3, 14), int16] */;
    %331 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(1, 3, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %332 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 3, 14), int16] */, dtype="int16") /* ty=Tensor[(1, 3, 14), int16] */;
    %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %334 = cast(meta[relay.Constant][31] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %335 = reshape(%334, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), uint64] */;
    %336 = maximum(%332, %333) /* ty=Tensor[(?, 3, 14), int16] */;
    %337 = @func_1434(%335) /* ty=Tensor[(11, 16, 13), uint64] */;
    (%336, %337, meta[relay.Constant][31] /* ty=Tensor[(2288), uint64] */)
  };
  %338(%var_2649) /* ty=(Tensor[(?, 3, 14), int16], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */
}

def @func_14999() -> (Tensor[(11, 8, 9), float64],) {
  %343 = fn () -> (Tensor[(11, 8, 9), float64],) {
    %339 = @func_14609() /* ty=(Tensor[(11, 8, 9), float32],) */;
    %340 = %339.0;
    %341 = cast(%340, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
    %342 = cos(%341) /* ty=Tensor[(11, 8, 9), float64] */;
    (%342,)
  };
  %343() /* ty=(Tensor[(11, 8, 9), float64],) */
}

def @main(%var_15640: Tensor[(2, 2048), float64]) -> Tensor[(2, 2048), float32] {
  %344 = @func_15018() /* ty=(Tensor[(11, 8, 9), float32], uint64, Tensor[(2, 2048), float64]) */;
  %345 = %344.2;
  %346 = cast(%345, dtype="float64") /* ty=Tensor[(2, 2048), float64] */;
  %347 = asin(%346) /* ty=Tensor[(2, 2048), float64] */;
  %348 = cast(%var_15640, dtype="float32") /* ty=Tensor[(2, 2048), float32] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(2), int32] */;
  %350 = cast(%347, dtype="float32") /* ty=Tensor[(2, 2048), float32] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %352 = floor_mod(%350, %351) /* ty=Tensor[(2, 2048), float32] */;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(2, 2048), float32] */;
  acosh(%353) /* ty=Tensor[(2, 2048), float32] */
}

def @func_10085(%var_10083: Tensor[(143), uint16]) -> (Tensor[(15, 15, 10), int64], Tensor[(15, 15, 10), float32], Tensor[(15, 3), float64], Tensor[(143), uint16], Tensor[(286), uint16]) {
  @func_10082(%var_10083) /* ty=(Tensor[(15, 15, 10), int64], Tensor[(15, 15, 10), float32], Tensor[(15, 3), float64], Tensor[(143), uint16], Tensor[(286), uint16]) */
}

def @func_10773(%var_10771: Tensor[(15, 15, 5), float32], %var_10772: Tensor[(845), uint8]) -> (Tensor[(15, 15, 5), bool], Tensor[(13, 13, 5), bool], Tensor[(845), uint8]) {
  %364 = fn (%var_10753: Tensor[(15, 15, 5), float32], %var_10764: Tensor[(845), uint8]) -> (Tensor[(15, 15, 5), bool], Tensor[(13, 13, 5), bool], Tensor[(845), uint8]) {
    %354 = cast(%var_10753, dtype="bool") /* ty=Tensor[(15, 15, 5), bool] */;
    %355 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(15, 15, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %356 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 15, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 15, 5), bool] */;
    %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %358 = cast(%var_10764, dtype="uint8") /* ty=Tensor[(845), uint8] */;
    %359 = cast(%var_10764, dtype="uint8") /* ty=Tensor[(845), uint8] */;
    %360 = reshape(%358, newshape=[13, 13, 5]) /* ty=Tensor[(13, 13, 5), uint8] */;
    %361 = reshape(%359, newshape=[13, 13, 5]) /* ty=Tensor[(13, 13, 5), uint8] */;
    %362 = less_equal(%356, %357) /* ty=Tensor[(15, 15, 5), bool] */;
    %363 = @func_6648(%360, %361) /* ty=Tensor[(13, 13, 5), bool] */;
    (%362, %363, %var_10764)
  };
  %364(%var_10771, %var_10772) /* ty=(Tensor[(15, 15, 5), bool], Tensor[(13, 13, 5), bool], Tensor[(845), uint8]) */
}

def @func_14204(%var_14201: Tensor[(81, 6), float32], %var_14202: Tensor[(660, 1), int64], %var_14203: uint64) -> (Tensor[(11, 8, 9), float64], Tensor[(16, 16, 2), bool], Tensor[(660, 1), int64], Tensor[(81, 6), float64]) {
  @func_14199(%var_14201, %var_14202, %var_14203) /* ty=(Tensor[(11, 8, 9), float64], Tensor[(16, 16, 2), bool], Tensor[(660, 1), int64], Tensor[(81, 6), float64]) */
}

def @func_906(%var_902: Tensor[(6, 9, 9), float32], %var_903: Tensor[(6, 9, 9), float32], %var_904: Tensor[(6, 9, 9), float32], %var_905: Tensor[(660), int64]) -> (Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  @func_900(%var_902, %var_903, %var_904, %var_905) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */
}

def @func_14807(%var_14744: Tensor[(450), float32], %var_14745: Tensor[(48), float32], %var_14746: Tensor[(330, 2), int64], %var_14752: Tensor[(330, 2), int64], %var_14757: Tensor[(1056, 1), int8], %var_14788: Tensor[(3584), float32]) -> (Tensor[(11, 8, 9), float32], Tensor[(2288), uint64], Tensor[(42), int16], Tensor[(15, 6, 14), uint8], Tensor[(1260), float32], Tensor[(450), float32], Tensor[(48), float32], Tensor[(330, 2), bool], Tensor[(16, 6, 11), int8], Tensor[(1056, 1), int8], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(330, 2), float64]) {
  %365 = cast(meta[relay.Constant][33] /* ty=Tensor[(42), int16] */, dtype="int16") /* ty=Tensor[(42), int16] */;
  %366 = reshape(%365, newshape=[1, 3, 14]) /* ty=Tensor[(1, 3, 14), int16] */;
  %367 = @func_2648(%366) /* ty=(Tensor[(?, 3, 14), int16], Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */;
  %368 = cast(meta[relay.Constant][34] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %369 = cast(%var_14744, dtype="float32") /* ty=Tensor[(450), float32] */;
  %370 = cast(%var_14745, dtype="float32") /* ty=Tensor[(48), float32] */;
  %371 = cast(%var_14746, dtype="int64") /* ty=Tensor[(330, 2), int64] */;
  %372 = reshape(%368, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %373 = reshape(%369, newshape=[10, 45]) /* ty=Tensor[(10, 45), float32] */;
  %374 = reshape(%370, newshape=[1, 48]) /* ty=Tensor[(1, 48), float32] */;
  %375 = reshape(%371, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %376 = @func_12377(%372, %373, %374, %375) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(15, 6, 14), uint8], Tensor[(7, 12, 16), float32], Tensor[(10, 45), float32], Tensor[(1, 48), float32], Tensor[(660), int64]) */;
  %377 = cast(%var_14752, dtype="bool") /* ty=Tensor[(330, 2), bool] */;
  %378 = shape_of(%var_14746, dtype="int32") /* ty=Tensor[(2), int32] */;
  %379 = cast(%var_14746, dtype="bool") /* ty=Tensor[(330, 2), bool] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %381 = cast(%var_14757, dtype="int8") /* ty=Tensor[(1056, 1), int8] */;
  %382 = cast(%var_14757, dtype="int8") /* ty=Tensor[(1056, 1), int8] */;
  %383 = reshape(%381, newshape=[16, 6, 11]) /* ty=Tensor[(16, 6, 11), int8] */;
  %384 = reshape(%382, newshape=[16, 6, 11]) /* ty=Tensor[(16, 6, 11), int8] */;
  %385 = @func_9453(%383, %384) /* ty=(Tensor[(16, 6, 11), int8],) */;
  %386 = cast(%var_14788, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %387 = reshape(%386, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %388 = @func_6990(%387) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %389 = cast(%var_14752, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %390 = atanh(%389) /* ty=Tensor[(330, 2), float64] */;
  %391 = cast(%var_14746, dtype="int8") /* ty=Tensor[(330, 2), int8] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(2), int32] */;
  %393 = cast(%390, dtype="int8") /* ty=Tensor[(330, 2), int8] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %395 = bitwise_and(%393, %394) /* ty=Tensor[(330, 2), int8] */;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(330, 2), float64] */;
  %397 = @func_13518() /* ty=Tensor[(11, 8, 9), float32] */;
  %398 = %367.2;
  %399 = %376.1;
  %400 = greater(%379, %380) /* ty=Tensor[(330, 2), bool] */;
  %401 = %385.0;
  %402 = %388.0;
  %403 = sqrt(%396) /* ty=Tensor[(330, 2), float64] */;
  (%397, %398, meta[relay.Constant][33] /* ty=Tensor[(42), int16] */, %399, meta[relay.Constant][34] /* ty=Tensor[(1260), float32] */, %var_14744, %var_14745, %400, %401, %var_14757, %402, %var_14788, %403)
}

def @func_15569() -> (Tensor[(11, 8, 9), float32],) {
  @func_15567() /* ty=(Tensor[(11, 8, 9), float32],) */
}

def @func_12377(%var_12364: Tensor[(1260), float32], %var_12373: Tensor[(10, 45), float32], %var_12374: Tensor[(1, 48), float32], %var_12375: Tensor[(660), int64]) -> (Tensor[(9, 11, 5), float32], Tensor[(15, 6, 14), uint8], Tensor[(7, 12, 16), float32], Tensor[(10, 45), float32], Tensor[(1, 48), float32], Tensor[(660), int64]) {
  %404 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %405 = cast(%var_12364, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %406 = reshape(%405, newshape=[15, 6, 14]) /* ty=Tensor[(15, 6, 14), float32] */;
  %407 = @func_5744(%406) /* ty=(Tensor[(15, 6, 14), float32],) */;
  %408 = %407.0;
  %409 = cast(%var_12364, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="uint8") /* ty=Tensor[(15, 6, 14), uint8] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %413 = cast(%var_12373, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %414 = cast(%var_12374, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %415 = cast(%var_12375, dtype="int64") /* ty=Tensor[(660), int64] */;
  %416 = reshape(%413, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), float32] */;
  %417 = reshape(%414, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %418 = reshape(%415, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %419 = @func_12125(%416, %417, %418) /* ty=(Tensor[(10, 13, 5), bool], Tensor[(650), int16], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(15, 3, 10), int16]) */;
  %420 = cosh(%404) /* ty=Tensor[(9, 11, 5), float32] */;
  %421 = bitwise_xor(%411, %412) /* ty=Tensor[(15, 6, 14), uint8] */;
  %422 = %419.5;
  (%420, %421, %422, %var_12373, %var_12374, %var_12375)
}

def @func_13667(%var_13664: Tensor[(1, 1, 7), float32], %var_13665: Tensor[(1260), float32], %var_13666: Tensor[(10, 45), float32]) -> (Tensor[(1, 1, 7), float32], Tensor[(15, 6, 14), uint8], Tensor[(1260), float32], Tensor[(10, 45), float32], Tensor[(48), float32], Tensor[(660), int64]) {
  @func_13662(%var_13664, %var_13665, %var_13666) /* ty=(Tensor[(1, 1, 7), float32], Tensor[(15, 6, 14), uint8], Tensor[(1260), float32], Tensor[(10, 45), float32], Tensor[(48), float32], Tensor[(660), int64]) */
}

def @func_1418(%var_1403: Tensor[(9, 10, 8), uint32], %var_1404: Tensor[(9, 10, 8), uint32]) -> (Tensor[(9, 10, 8), bool], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  %423 = cast(%var_1404, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %424 = shape_of(%var_1403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%var_1403, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %427 = cast(meta[relay.Constant][36] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %428 = reshape(%427, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int64] */;
  %429 = @func_89(%428) /* ty=(Tensor[(11, 15, 4), bool],) */;
  %430 = equal(%425, %426) /* ty=Tensor[(9, 10, 8), bool] */;
  %431 = %429.0;
  (%430, %431, meta[relay.Constant][36] /* ty=Tensor[(660), int64] */)
}

def @func_1241(%var_1234: Tensor[(3, 8, 2), float32], %var_1239: Tensor[(660), int64]) -> (Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) {
  %432 = cast(%var_1234, dtype="float32") /* ty=Tensor[(3, 8, 2), float32] */;
  %433 = cast(meta[relay.Constant][37] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %434 = cast(meta[relay.Constant][37] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %435 = cast(meta[relay.Constant][37] /* ty=Tensor[(486), float32] */, dtype="float32") /* ty=Tensor[(486), float32] */;
  %436 = cast(%var_1239, dtype="int64") /* ty=Tensor[(660), int64] */;
  %437 = reshape(%433, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %438 = reshape(%434, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %439 = reshape(%435, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %440 = reshape(%436, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %441 = @func_900(%437, %438, %439, %440) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %442 = log2(%432) /* ty=Tensor[(3, 8, 2), float32] */;
  %443 = %441.1;
  (%442, %443, meta[relay.Constant][37] /* ty=Tensor[(486), float32] */, %var_1239)
}

def @func_5669(%var_5667: Tensor[(7, 12, 16), uint16], %var_5668: Tensor[(7, 12, 16), uint16]) -> Tensor[(7, 12, 16), float32] {
  @func_5665(%var_5667, %var_5668) /* ty=Tensor[(7, 12, 16), float32] */
}

def @func_89(%var_84: Tensor[(11, 15, 4), int64]) -> (Tensor[(11, 15, 4), bool],) {
  %444 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 15, 4), int64] */, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
  %445 = shape_of(%var_84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%var_84, dtype="bool") /* ty=Tensor[(11, 15, 4), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %448 = equal(%446, %447) /* ty=Tensor[(11, 15, 4), bool] */;
  (%448,)
}

def @func_3395(%var_3389: Tensor[(12, 11, 5), uint8], %var_3390: Tensor[(12, 11, 5), uint8]) -> Tensor[(12, 11, 5), uint8] {
  %449 = cast(%var_3390, dtype="uint8") /* ty=Tensor[(12, 11, 5), uint8] */;
  %450 = shape_of(%var_3389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%var_3389, dtype="uint8") /* ty=Tensor[(12, 11, 5), uint8] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%451, %452) /* ty=Tensor[(12, 11, 5), uint8] */
}

def @func_10439(%var_10428: Tensor[(5, 11, 5), float64]) -> (Tensor[(5, 11, 5), float64],) {
  %453 = cast(%var_10428, dtype="float64") /* ty=Tensor[(5, 11, 5), float64] */;
  %454 = sigmoid(%453) /* ty=Tensor[(5, 11, 5), float64] */;
  (%454,)
}

def @func_11685(%var_11612: Tensor[(7, 3, 10), int64], %var_11632: Tensor[(27, 18), float32], %var_11633: Tensor[(660, 1), int64], %var_11659: Tensor[(1792, 2), float32], %var_11680: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), int64], Tensor[(6, 10, 15), int64], Tensor[(900), int64], Tensor[(660), int64], Tensor[(27, 18), float32], Tensor[(660, 1), int64], Tensor[(12, 11, 5), uint8], Tensor[(3, 15, 1), float64], Tensor[(45), float64], Tensor[(14, 16, 16), float32], Tensor[(1792, 2), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) {
  %455 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 3, 10), int64] */, dtype="int64") /* ty=Tensor[(7, 3, 10), int64] */;
  %456 = shape_of(%var_11612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%var_11612, dtype="int64") /* ty=Tensor[(7, 3, 10), int64] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %459 = cast(meta[relay.Constant][40] /* ty=Tensor[(900), int64] */, dtype="int64") /* ty=Tensor[(900), int64] */;
  %460 = reshape(%459, newshape=[6, 10, 15]) /* ty=Tensor[(6, 10, 15), int64] */;
  %461 = cast(%var_11632, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
  %462 = cast(%var_11632, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
  %463 = cast(%var_11632, dtype="float32") /* ty=Tensor[(27, 18), float32] */;
  %464 = cast(%var_11633, dtype="int64") /* ty=Tensor[(660, 1), int64] */;
  %465 = reshape(%461, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %466 = reshape(%462, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %467 = reshape(%463, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %468 = reshape(%464, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %469 = @func_900(%465, %466, %467, %468) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %470 = cast(%var_11633, dtype="uint8") /* ty=Tensor[(660, 1), uint8] */;
  %471 = cast(%var_11633, dtype="uint8") /* ty=Tensor[(660, 1), uint8] */;
  %472 = reshape(%470, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
  %473 = reshape(%471, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
  %474 = cast(meta[relay.Constant][41] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %475 = reshape(%474, newshape=[3, 15, 1]) /* ty=Tensor[(3, 15, 1), float64] */;
  %476 = @func_3985(%475) /* ty=(Tensor[(3, 15, 1), float64],) */;
  %477 = cast(%var_11659, dtype="float32") /* ty=Tensor[(1792, 2), float32] */;
  %478 = reshape(%477, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %479 = @func_6990(%478) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %480 = cast(%var_11680, dtype="float64") /* ty=Tensor[(55), float64] */;
  %481 = reshape(%480, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float64] */;
  %482 = multiply(%457, %458) /* ty=Tensor[(7, 3, 10), int64] */;
  %483 = @func_3712(%460) /* ty=Tensor[(6, 10, 15), int64] */;
  %484 = %469.2;
  %485 = @func_3395(%472, %473) /* ty=Tensor[(12, 11, 5), uint8] */;
  %486 = %476.0;
  %487 = %479.0;
  %488 = @func_8458(%481) /* ty=Tensor[(5, 1, 11), float64] */;
  (%482, %483, meta[relay.Constant][40] /* ty=Tensor[(900), int64] */, %484, %var_11632, %var_11633, %485, %486, meta[relay.Constant][41] /* ty=Tensor[(45), float64] */, %487, %var_11659, %488, %var_11680)
}

def @func_13662(%var_13626: Tensor[(1, 1, 7), float32], %var_13640: Tensor[(1260), float32], %var_13641: Tensor[(10, 45), float32]) -> (Tensor[(1, 1, 7), float32], Tensor[(15, 6, 14), uint8], Tensor[(1260), float32], Tensor[(10, 45), float32], Tensor[(48), float32], Tensor[(660), int64]) {
  %489 = cast(%var_13626, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  %490 = cast(%var_13640, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %491 = cast(%var_13641, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %492 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %493 = cast(meta[relay.Constant][43] /* ty=Tensor[(660), int64] */, dtype="int64") /* ty=Tensor[(660), int64] */;
  %494 = reshape(%490, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %495 = reshape(%491, newshape=[10, 45]) /* ty=Tensor[(10, 45), float32] */;
  %496 = reshape(%492, newshape=[1, 48]) /* ty=Tensor[(1, 48), float32] */;
  %497 = reshape(%493, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %498 = @func_12377(%494, %495, %496, %497) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(15, 6, 14), uint8], Tensor[(7, 12, 16), float32], Tensor[(10, 45), float32], Tensor[(1, 48), float32], Tensor[(660), int64]) */;
  %499 = tan(%489) /* ty=Tensor[(1, 1, 7), float32] */;
  %500 = %498.1;
  (%499, %500, %var_13640, %var_13641, meta[relay.Constant][42] /* ty=Tensor[(48), float32] */, meta[relay.Constant][43] /* ty=Tensor[(660), int64] */)
}

def @func_15018() -> (Tensor[(11, 8, 9), float32], uint64, Tensor[(2, 2048), float64]) {
  @func_15016() /* ty=(Tensor[(11, 8, 9), float32], uint64, Tensor[(2, 2048), float64]) */
}

def @func_14029(%var_14028: Tensor[(80), float64]) -> (Tensor[(11, 8, 9), float64], Tensor[(8, 5, 2), float64], Tensor[(80), float64]) {
  %505 = fn (%var_14017: Tensor[(80), float64]) -> (Tensor[(11, 8, 9), float64], Tensor[(8, 5, 2), float64], Tensor[(80), float64]) {
    %501 = cast(%var_14017, dtype="float64") /* ty=Tensor[(80), float64] */;
    %502 = reshape(%501, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float64] */;
    %503 = @func_13773() /* ty=Tensor[(11, 8, 9), float64] */;
    %504 = @func_4506(%502) /* ty=Tensor[(8, 5, 2), float64] */;
    (%503, %504, %var_14017)
  };
  %505(%var_14028) /* ty=(Tensor[(11, 8, 9), float64], Tensor[(8, 5, 2), float64], Tensor[(80), float64]) */
}

def @func_15273(%var_15271: Tensor[(11, 8, 9), float32], %var_15272: Tensor[(660), uint8]) -> (Tensor[(11, 8, 9), int32], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8]) {
  %518 = fn (%var_15233: Tensor[(11, 8, 9), float32], %var_15239: Tensor[(660), uint8]) -> (Tensor[(11, 8, 9), int32], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8]) {
    %506 = @func_15202() /* ty=(Tensor[(11, 8, 9), float32], Tensor[(11, 8, 9), float64]) */;
    %507 = %506.0;
    %508 = cast(%var_15233, dtype="int32") /* ty=Tensor[(11, 8, 9), int32] */;
    %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
    %510 = cast(%507, dtype="int32") /* ty=Tensor[(11, 8, 9), int32] */;
    %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %512 = cast(%var_15239, dtype="uint8") /* ty=Tensor[(660), uint8] */;
    %513 = cast(%var_15239, dtype="uint8") /* ty=Tensor[(660), uint8] */;
    %514 = reshape(%512, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
    %515 = reshape(%513, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
    %516 = minimum(%510, %511) /* ty=Tensor[(11, 8, 9), int32] */;
    %517 = @func_3395(%514, %515) /* ty=Tensor[(12, 11, 5), uint8] */;
    (%516, %517, %var_15239)
  };
  %518(%var_15271, %var_15272) /* ty=(Tensor[(11, 8, 9), int32], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8]) */
}

def @func_13721(%var_13719: Tensor[(4, 1, 1), uint32], %var_13720: Tensor[(4, 15, 1), uint32]) -> (Tensor[(4, 15, 1), uint32],) {
  @func_13717(%var_13719, %var_13720) /* ty=(Tensor[(4, 15, 1), uint32],) */
}

def @func_1437(%var_1435: Tensor[(11, 16, 13), uint64]) -> Tensor[(11, 16, 13), uint64] {
  @func_1434(%var_1435) /* ty=Tensor[(11, 16, 13), uint64] */
}

def @func_8804(%var_8802: Tensor[(9, 8, 9), float64]) -> (Tensor[(9, 8, 9), float64], Tensor[(16, 16, 2), bool], uint64) {
  @func_8801(%var_8802) /* ty=(Tensor[(9, 8, 9), float64], Tensor[(16, 16, 2), bool], uint64) */
}

def @func_12750(%var_12729: Tensor[(7, 16, 6), float64], %var_12743: Tensor[(1, 660), int64]) -> (Tensor[(7, 16, 6), float64], Tensor[(7, 16, 6), float64], Tensor[(180, 4), uint32], Tensor[(4, 12), float32], Tensor[(1, 660), int64], Tensor[(720), uint32]) {
  %519 = cast(%var_12729, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %520 = cast(%var_12729, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %521 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 12), float32] */;
  %522 = cast(%var_12743, dtype="int64") /* ty=Tensor[(1, 660), int64] */;
  %523 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), uint32] */, dtype="uint32") /* ty=Tensor[(720), uint32] */;
  %524 = reshape(%521, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %525 = reshape(%522, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %526 = reshape(%523, newshape=[180, 4]) /* ty=Tensor[(180, 4), uint32] */;
  %527 = @func_8675(%524, %525, %526) /* ty=(Tensor[(5, 10, 12), uint8], Tensor[(600), uint8], Tensor[(9, 7, 13), float64], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(9, 10, 8), bool], Tensor[(180, 4), uint32]) */;
  %528 = log10(%519) /* ty=Tensor[(7, 16, 6), float64] */;
  %529 = sinh(%520) /* ty=Tensor[(7, 16, 6), float64] */;
  %530 = %527.7;
  (%528, %529, %530, meta[relay.Constant][44] /* ty=Tensor[(4, 12), float32] */, %var_12743, meta[relay.Constant][45] /* ty=Tensor[(720), uint32] */)
}

def @func_5744(%var_5741: Tensor[(15, 6, 14), float32]) -> (Tensor[(15, 6, 14), float32],) {
  %531 = cast(%var_5741, dtype="float32") /* ty=Tensor[(15, 6, 14), float32] */;
  %532 = erf(%531) /* ty=Tensor[(15, 6, 14), float32] */;
  (%532,)
}

def @func_13518() -> Tensor[(11, 8, 9), float32] {
  %533 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
  sigmoid(%533) /* ty=Tensor[(11, 8, 9), float32] */
}

def @func_4099(%var_4097: Tensor[(12, 7, 8), float64]) -> (Tensor[(12, 7, 8), float64], Tensor[(16, 16, 2), bool], uint64, Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) {
  @func_4096(%var_4097) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(16, 16, 2), bool], uint64, Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */
}

def @func_8679(%var_8676: Tensor[(48), float32], %var_8677: Tensor[(660), int64], %var_8678: Tensor[(180, 4), uint32]) -> (Tensor[(5, 10, 12), uint8], Tensor[(600), uint8], Tensor[(9, 7, 13), float64], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(9, 10, 8), bool], Tensor[(180, 4), uint32]) {
  %555 = fn (%var_8659: Tensor[(48), float32], %var_8660: Tensor[(660), int64], %var_8668: Tensor[(180, 4), uint32]) -> (Tensor[(5, 10, 12), uint8], Tensor[(600), uint8], Tensor[(9, 7, 13), float64], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(9, 10, 8), bool], Tensor[(180, 4), uint32]) {
    %534 = cast(meta[relay.Constant][47] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %535 = cast(meta[relay.Constant][47] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
    %536 = reshape(%534, newshape=[5, 10, 12]) /* ty=Tensor[(5, 10, 12), uint8] */;
    %537 = reshape(%535, newshape=[5, 10, 12]) /* ty=Tensor[(5, 10, 12), uint8] */;
    %538 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
    %539 = rsqrt(%538) /* ty=Tensor[(9, 7, 13), float64] */;
    %540 = cast(%539, dtype="float64") /* ty=Tensor[(9, 7, 13), float64] */;
    %541 = cast(%var_8659, dtype="float32") /* ty=Tensor[(48), float32] */;
    %542 = cast(%var_8660, dtype="int64") /* ty=Tensor[(660), int64] */;
    %543 = reshape(%541, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), float32] */;
    %544 = reshape(%542, newshape=[660]) /* ty=Tensor[(660), int64] */;
    %545 = @func_1241(%543, %544) /* ty=(Tensor[(3, 8, 2), float32], Tensor[(11, 15, 4), bool], Tensor[(486), float32], Tensor[(660), int64]) */;
    %546 = cast(%var_8668, dtype="uint32") /* ty=Tensor[(180, 4), uint32] */;
    %547 = cast(%var_8668, dtype="uint32") /* ty=Tensor[(180, 4), uint32] */;
    %548 = reshape(%546, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint32] */;
    %549 = reshape(%547, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), uint32] */;
    %550 = @func_1418(%548, %549) /* ty=(Tensor[(9, 10, 8), bool], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
    %551 = @func_4716(%536, %537) /* ty=Tensor[(5, 10, 12), uint8] */;
    %552 = sqrt(%540) /* ty=Tensor[(9, 7, 13), float64] */;
    %553 = %545.0;
    %554 = %550.0;
    (%551, meta[relay.Constant][47] /* ty=Tensor[(600), uint8] */, %552, %553, %var_8659, %var_8660, %554, %var_8668)
  };
  %555(%var_8676, %var_8677, %var_8678) /* ty=(Tensor[(5, 10, 12), uint8], Tensor[(600), uint8], Tensor[(9, 7, 13), float64], Tensor[(3, 8, 2), float32], Tensor[(48), float32], Tensor[(660), int64], Tensor[(9, 10, 8), bool], Tensor[(180, 4), uint32]) */
}

def @func_6085(%var_6083: Tensor[(7, 4, 3), float32], %var_6084: Tensor[(672), float64]) -> (Tensor[(7, 4, 3), bool], uint64, Tensor[(672), float64], Tensor[(7, 4, 3), float32]) {
  %569 = fn (%var_6038: Tensor[(7, 4, 3), float32], %var_6075: Tensor[(672), float64]) -> (Tensor[(7, 4, 3), bool], uint64, Tensor[(672), float64], Tensor[(7, 4, 3), float32]) {
    %556 = cast(%var_6038, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
    %557 = log2(%556) /* ty=Tensor[(7, 4, 3), float32] */;
    %558 = cast(%557, dtype="bool") /* ty=Tensor[(7, 4, 3), bool] */;
    %559 = shape_of(%var_6038, dtype="int32") /* ty=Tensor[(3), int32] */;
    %560 = cast(%var_6038, dtype="bool") /* ty=Tensor[(7, 4, 3), bool] */;
    %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %562 = cast(%var_6075, dtype="float64") /* ty=Tensor[(672), float64] */;
    %563 = reshape(%562, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), float64] */;
    %564 = @func_4096(%563) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(16, 16, 2), bool], uint64, Tensor[(11, 16, 13), uint64], Tensor[(2288), uint64]) */;
    %565 = cast(%557, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
    %566 = less(%560, %561) /* ty=Tensor[(7, 4, 3), bool] */;
    %567 = %564.2;
    %568 = asin(%565) /* ty=Tensor[(7, 4, 3), float32] */;
    (%566, %567, %var_6075, %568)
  };
  %569(%var_6083, %var_6084) /* ty=(Tensor[(7, 4, 3), bool], uint64, Tensor[(672), float64], Tensor[(7, 4, 3), float32]) */
}

def @func_8870(%var_8867: Tensor[(4, 8, 12), uint64], %var_8868: Tensor[(1, 143), uint16], %var_8869: Tensor[(286), uint16]) -> (Tensor[(4, 8, 12), uint64], Tensor[(13, 2, 11), uint16], Tensor[(1, 143), uint16], Tensor[(286), uint16], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(4, 8, 12), float64]) {
  @func_8865(%var_8867, %var_8868, %var_8869) /* ty=(Tensor[(4, 8, 12), uint64], Tensor[(13, 2, 11), uint16], Tensor[(1, 143), uint16], Tensor[(286), uint16], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(4, 8, 12), float64]) */
}

def @func_13617(%var_13615: Tensor[(585), int16], %var_13616: Tensor[(720), uint32]) -> (Tensor[(11, 8, 9), float32], Tensor[(300), float64], Tensor[(11, 8, 9), float32], Tensor[(2288), float64], Tensor[(13, 9, 5), int16], Tensor[(585), int16], Tensor[(720), uint32], Tensor[(11, 8, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  @func_13613(%var_13615, %var_13616) /* ty=(Tensor[(11, 8, 9), float32], Tensor[(300), float64], Tensor[(11, 8, 9), float32], Tensor[(2288), float64], Tensor[(13, 9, 5), int16], Tensor[(585), int16], Tensor[(720), uint32], Tensor[(11, 8, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */
}

def @func_13794() -> (Tensor[(11, 8, 9), float64],) {
  %570 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %571 = %570.0;
  (%571,)
}

def @func_15203() -> (Tensor[(11, 8, 9), float32], Tensor[(11, 8, 9), float64]) {
  %578 = fn () -> (Tensor[(11, 8, 9), float32], Tensor[(11, 8, 9), float64]) {
    %572 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %573 = %572.0;
    %574 = cast(%573, dtype="float32") /* ty=Tensor[(11, 8, 9), float32] */;
    %575 = @func_13986() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %576 = log(%574) /* ty=Tensor[(11, 8, 9), float32] */;
    %577 = %575.0;
    (%576, %577)
  };
  %578() /* ty=(Tensor[(11, 8, 9), float32], Tensor[(11, 8, 9), float64]) */
}

def @func_14199(%var_14179: Tensor[(81, 6), float32], %var_14180: Tensor[(660, 1), int64], %var_14181: uint64) -> (Tensor[(11, 8, 9), float64], Tensor[(16, 16, 2), bool], Tensor[(660, 1), int64], Tensor[(81, 6), float64]) {
  %579 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %580 = cast(%var_14179, dtype="float32") /* ty=Tensor[(81, 6), float32] */;
  %581 = cast(%var_14180, dtype="int64") /* ty=Tensor[(660, 1), int64] */;
  %582 = cast(%var_14181, dtype="uint64") /* ty=uint64 */;
  %583 = reshape(%580, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %584 = reshape(%581, newshape=[10, 66]) /* ty=Tensor[(10, 66), int64] */;
  %585 = reshape(%582, newshape=[]) /* ty=uint64 */;
  %586 = @func_1292(%583, %584, %585) /* ty=(Tensor[(9, 13, 7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(10, 66), int64], Tensor[(11, 15, 4), bool], Tensor[(16, 16, 2), bool], uint64) */;
  %587 = cast(%var_14180, dtype="int64") /* ty=Tensor[(660, 1), int64] */;
  %588 = cast(%var_14181, dtype="int64") /* ty=int64 */;
  %589 = cast(%var_14179, dtype="float64") /* ty=Tensor[(81, 6), float64] */;
  %590 = %579.0;
  %591 = %586.5;
  %592 = maximum(%587, %588) /* ty=Tensor[(660, 1), int64] */;
  %593 = cos(%589) /* ty=Tensor[(81, 6), float64] */;
  (%590, %591, %592, %593)
}

def @func_3985(%var_3980: Tensor[(3, 15, 1), float64]) -> (Tensor[(3, 15, 1), float64],) {
  %594 = cast(%var_3980, dtype="float64") /* ty=Tensor[(3, 15, 1), float64] */;
  %595 = log10(%594) /* ty=Tensor[(3, 15, 1), float64] */;
  (%595,)
}

def @func_13520() -> Tensor[(11, 8, 9), float32] {
  @func_13518() /* ty=Tensor[(11, 8, 9), float32] */
}

def @func_15617(%var_15615: Tensor[(8, 7, 11), float32]) -> (Tensor[(8, 7, 11), float32],) {
  @func_15614(%var_15615) /* ty=(Tensor[(8, 7, 11), float32],) */
}

def @func_15559() -> Tensor[(11, 16, 7), float32] {
  %598 = fn () -> Tensor[(11, 16, 7), float32] {
    %596 = cast(-5.72038f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %597 = cast(meta[relay.Constant][49] /* ty=Tensor[(11, 16, 7), float32] */, dtype="float32") /* ty=Tensor[(11, 16, 7), float32] */;
    mod(%596, %597) /* ty=Tensor[(11, 16, 7), float32] */
  };
  %598() /* ty=Tensor[(11, 16, 7), float32] */
}

def @func_9509(%var_9507: Tensor[(143), uint16], %var_9508: Tensor[(1, 286), uint16]) -> (Tensor[(12, 7, 13), float32], Tensor[(3, 15, 1), float64], Tensor[(15, 3), float64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(1, 286), uint16]) {
  %621 = fn (%var_9503: Tensor[(143), uint16], %var_9504: Tensor[(1, 286), uint16]) -> (Tensor[(12, 7, 13), float32], Tensor[(3, 15, 1), float64], Tensor[(15, 3), float64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(1, 286), uint16]) {
    %599 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 7, 13), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
    %600 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3), float64] */;
    %601 = reshape(%600, newshape=[3, 15, 1]) /* ty=Tensor[(3, 15, 1), float64] */;
    %602 = @func_3985(%601) /* ty=(Tensor[(3, 15, 1), float64],) */;
    %603 = cast(meta[relay.Constant][52] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
    %604 = cast(meta[relay.Constant][52] /* ty=Tensor[(1344), uint16] */, dtype="uint16") /* ty=Tensor[(1344), uint16] */;
    %605 = reshape(%603, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
    %606 = reshape(%604, newshape=[7, 12, 16]) /* ty=Tensor[(7, 12, 16), uint16] */;
    %607 = cast(meta[relay.Constant][53] /* ty=Tensor[(660), uint8] */, dtype="uint8") /* ty=Tensor[(660), uint8] */;
    %608 = cast(meta[relay.Constant][53] /* ty=Tensor[(660), uint8] */, dtype="uint8") /* ty=Tensor[(660), uint8] */;
    %609 = reshape(%607, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
    %610 = reshape(%608, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), uint8] */;
    %611 = cast(%var_9503, dtype="uint16") /* ty=Tensor[(143), uint16] */;
    %612 = cast(%var_9504, dtype="uint16") /* ty=Tensor[(1, 286), uint16] */;
    %613 = reshape(%611, newshape=[13, 1, 11]) /* ty=Tensor[(13, 1, 11), uint16] */;
    %614 = reshape(%612, newshape=[13, 2, 11]) /* ty=Tensor[(13, 2, 11), uint16] */;
    %615 = @func_8776(%613, %614) /* ty=(Tensor[(13, 2, 11), uint16],) */;
    %616 = asin(%599) /* ty=Tensor[(12, 7, 13), float32] */;
    %617 = %602.0;
    %618 = @func_5665(%605, %606) /* ty=Tensor[(7, 12, 16), float32] */;
    %619 = @func_3395(%609, %610) /* ty=Tensor[(12, 11, 5), uint8] */;
    %620 = %615.0;
    (%616, %617, meta[relay.Constant][51] /* ty=Tensor[(15, 3), float64] */, %618, meta[relay.Constant][52] /* ty=Tensor[(1344), uint16] */, %619, meta[relay.Constant][53] /* ty=Tensor[(660), uint8] */, %620, %var_9503, %var_9504)
  };
  %621(%var_9507, %var_9508) /* ty=(Tensor[(12, 7, 13), float32], Tensor[(3, 15, 1), float64], Tensor[(15, 3), float64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(1, 286), uint16]) */
}

def @func_13870(%var_13868: Tensor[(300), float64]) -> (Tensor[(3, 10, 10), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) {
  @func_13867(%var_13868) /* ty=(Tensor[(3, 10, 10), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) */
}

def @func_15413() -> (Tensor[(11, 8, 9), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) {
  %627 = fn () -> (Tensor[(11, 8, 9), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) {
    %622 = @func_14609() /* ty=(Tensor[(11, 8, 9), float32],) */;
    %623 = cast(meta[relay.Constant][54] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
    %624 = reshape(%623, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float64] */;
    %625 = %622.0;
    %626 = @func_8458(%624) /* ty=Tensor[(5, 1, 11), float64] */;
    (%625, %626, meta[relay.Constant][54] /* ty=Tensor[(55), float64] */)
  };
  %627() /* ty=(Tensor[(11, 8, 9), float32], Tensor[(5, 1, 11), float64], Tensor[(55), float64]) */
}

def @func_1856(%var_1854: Tensor[(3, 10, 10), float64]) -> (Tensor[(3, 10, 10), bool], Tensor[(2288), uint64], Tensor[(11, 16, 13), float64], Tensor[(3, 10, 10), float64]) {
  @func_1853(%var_1854) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(2288), uint64], Tensor[(11, 16, 13), float64], Tensor[(3, 10, 10), float64]) */
}

def @func_7103(%var_7100: Tensor[(11, 1, 8), float32], %var_7101: Tensor[(11, 16, 8), float32], %var_7102: Tensor[(48, 1), float32]) -> (Tensor[(16, 16, 2), bool], Tensor[(672), float64], Tensor[(11, 16, 8), int8], Tensor[(660), int64], Tensor[(660), int64], Tensor[(11, 48, 8), float32]) {
  @func_7098(%var_7100, %var_7101, %var_7102) /* ty=(Tensor[(16, 16, 2), bool], Tensor[(672), float64], Tensor[(11, 16, 8), int8], Tensor[(660), int64], Tensor[(660), int64], Tensor[(11, 48, 8), float32]) */
}

def @func_462(%var_461: Tensor[(2, 14, 13), float32]) -> Tensor[(2, 14, 13), float32] {
  %629 = fn (%var_451: Tensor[(2, 14, 13), float32]) -> Tensor[(2, 14, 13), float32] {
    %628 = cast(%var_451, dtype="float32") /* ty=Tensor[(2, 14, 13), float32] */;
    atanh(%628) /* ty=Tensor[(2, 14, 13), float32] */
  };
  %629(%var_461) /* ty=Tensor[(2, 14, 13), float32] */
}

def @func_8460(%var_8459: Tensor[(5, 1, 11), float64]) -> Tensor[(5, 1, 11), float64] {
  %631 = fn (%var_8453: Tensor[(5, 1, 11), float64]) -> Tensor[(5, 1, 11), float64] {
    %630 = cast(%var_8453, dtype="float64") /* ty=Tensor[(5, 1, 11), float64] */;
    exp(%630) /* ty=Tensor[(5, 1, 11), float64] */
  };
  %631(%var_8459) /* ty=Tensor[(5, 1, 11), float64] */
}

def @func_13774() -> Tensor[(11, 8, 9), float64] {
  %633 = fn () -> Tensor[(11, 8, 9), float64] {
    %632 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %632.0
  };
  %633() /* ty=Tensor[(11, 8, 9), float64] */
}

def @func_15510() -> Tensor[(11, 8, 9), float32] {
  @func_15508() /* ty=Tensor[(11, 8, 9), float32] */
}

def @func_14347(%var_14345: Tensor[(90, 10), int64]) -> (Tensor[(11, 8, 9), float64], Tensor[(6, 10, 15), int64], Tensor[(90, 10), int64]) {
  @func_14344(%var_14345) /* ty=(Tensor[(11, 8, 9), float64], Tensor[(6, 10, 15), int64], Tensor[(90, 10), int64]) */
}

def @func_14521(%var_14519: Tensor[(7, 12, 6), uint16], %var_14520: Tensor[(1, 845), uint8]) -> (Tensor[(7, 12, 6), uint16], Tensor[(13, 13, 5), bool], Tensor[(1, 845), uint8]) {
  @func_14517(%var_14519, %var_14520) /* ty=(Tensor[(7, 12, 6), uint16], Tensor[(13, 13, 5), bool], Tensor[(1, 845), uint8]) */
}

def @func_15464(%var_15428: Tensor[(11, 8, 9), float64]) -> Tensor[(11, 8, 9), bool] {
  %634 = @func_14998() /* ty=(Tensor[(11, 8, 9), float64],) */;
  %635 = %634.0;
  %636 = cast(%var_15428, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%635, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %640 = not_equal(%638, %639) /* ty=Tensor[(11, 8, 9), bool] */;
  %641 = cast(%640, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %642 = shape_of(%var_15428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%var_15428, dtype="bool") /* ty=Tensor[(11, 8, 9), bool] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%643, %644) /* ty=Tensor[(11, 8, 9), bool] */
}

def @func_9072(%var_9070: Tensor[(12, 12, 14), int8]) -> (Tensor[(12, 12, 14), int8], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(7, 12, 16), float32]) {
  @func_9069(%var_9070) /* ty=(Tensor[(12, 12, 14), int8], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(7, 12, 16), float32]) */
}

def @func_900(%var_870: Tensor[(6, 9, 9), float32], %var_871: Tensor[(6, 9, 9), float32], %var_877: Tensor[(6, 9, 9), float32], %var_887: Tensor[(660), int64]) -> (Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) {
  %645 = cast(%var_871, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %646 = shape_of(%var_870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%var_870, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %649 = floor_divide(%647, %648) /* ty=Tensor[(6, 9, 9), float32] */;
  %650 = cast(%var_877, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%649, dtype="float32") /* ty=Tensor[(6, 9, 9), float32] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %654 = cast(%var_887, dtype="int64") /* ty=Tensor[(660), int64] */;
  %655 = reshape(%654, newshape=[11, 15, 4]) /* ty=Tensor[(11, 15, 4), int64] */;
  %656 = @func_89(%655) /* ty=(Tensor[(11, 15, 4), bool],) */;
  %657 = subtract(%652, %653) /* ty=Tensor[(6, 9, 9), float32] */;
  %658 = %656.0;
  (%657, %658, %var_887)
}

def @func_10082(%var_10077: Tensor[(143), uint16]) -> (Tensor[(15, 15, 10), int64], Tensor[(15, 15, 10), float32], Tensor[(15, 3), float64], Tensor[(143), uint16], Tensor[(286), uint16]) {
  %659 = cast(meta[relay.Constant][55] /* ty=Tensor[(15, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 10), float64] */;
  %660 = log10(%659) /* ty=Tensor[(15, 15, 10), float64] */;
  %661 = cast(meta[relay.Constant][55] /* ty=Tensor[(15, 15, 10), float64] */, dtype="int64") /* ty=Tensor[(15, 15, 10), int64] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%660, dtype="int64") /* ty=Tensor[(15, 15, 10), int64] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %665 = cast(%660, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %666 = cast(%var_10077, dtype="uint16") /* ty=Tensor[(143), uint16] */;
  %667 = cast(meta[relay.Constant][56] /* ty=Tensor[(286), uint16] */, dtype="uint16") /* ty=Tensor[(286), uint16] */;
  %668 = reshape(%666, newshape=[143]) /* ty=Tensor[(143), uint16] */;
  %669 = reshape(%667, newshape=[1, 286]) /* ty=Tensor[(1, 286), uint16] */;
  %670 = @func_9506(%668, %669) /* ty=(Tensor[(12, 7, 13), float32], Tensor[(3, 15, 1), float64], Tensor[(15, 3), float64], Tensor[(7, 12, 16), float32], Tensor[(1344), uint16], Tensor[(12, 11, 5), uint8], Tensor[(660), uint8], Tensor[(13, 2, 11), uint16], Tensor[(143), uint16], Tensor[(1, 286), uint16]) */;
  %671 = subtract(%663, %664) /* ty=Tensor[(15, 15, 10), int64] */;
  %672 = exp(%665) /* ty=Tensor[(15, 15, 10), float32] */;
  %673 = %670.2;
  (%671, %672, %673, %var_10077, meta[relay.Constant][56] /* ty=Tensor[(286), uint16] */)
}

def @func_1297(%var_1294: Tensor[(486), float32], %var_1295: Tensor[(10, 66), int64], %var_1296: uint64) -> (Tensor[(9, 13, 7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(10, 66), int64], Tensor[(11, 15, 4), bool], Tensor[(16, 16, 2), bool], uint64) {
  @func_1292(%var_1294, %var_1295, %var_1296) /* ty=(Tensor[(9, 13, 7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(10, 66), int64], Tensor[(11, 15, 4), bool], Tensor[(16, 16, 2), bool], uint64) */
}

def @func_14330() -> Tensor[(11, 8, 9), float64] {
  %675 = fn () -> Tensor[(11, 8, 9), float64] {
    %674 = @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */;
    %674.0
  };
  %675() /* ty=Tensor[(11, 8, 9), float64] */
}

def @func_1853(%var_1787: Tensor[(3, 10, 10), float64]) -> (Tensor[(3, 10, 10), bool], Tensor[(2288), uint64], Tensor[(11, 16, 13), float64], Tensor[(3, 10, 10), float64]) {
  %676 = cast(%var_1787, dtype="float64") /* ty=Tensor[(3, 10, 10), float64] */;
  %677 = atanh(%676) /* ty=Tensor[(3, 10, 10), float64] */;
  %678 = cast(%var_1787, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
  %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%677, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %682 = cast(meta[relay.Constant][57] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %683 = reshape(%682, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), uint64] */;
  %684 = @func_1434(%683) /* ty=Tensor[(11, 16, 13), uint64] */;
  %685 = cast(%684, dtype="float64") /* ty=Tensor[(11, 16, 13), float64] */;
  %686 = cast(%677, dtype="float64") /* ty=Tensor[(3, 10, 10), float64] */;
  %687 = logical_or(%680, %681) /* ty=Tensor[(3, 10, 10), bool] */;
  %688 = exp(%685) /* ty=Tensor[(11, 16, 13), float64] */;
  %689 = acosh(%686) /* ty=Tensor[(3, 10, 10), float64] */;
  (%687, meta[relay.Constant][57] /* ty=Tensor[(2288), uint64] */, %688, %689)
}

def @func_965(%var_960: uint64) -> (Tensor[(16, 16, 2), bool],) {
  %690 = cast(%var_960, dtype="bool") /* ty=bool */;
  %691 = cast(meta[relay.Constant][58] /* ty=Tensor[(16, 16, 2), uint64] */, dtype="bool") /* ty=Tensor[(16, 16, 2), bool] */;
  %692 = greater(%690, %691) /* ty=Tensor[(16, 16, 2), bool] */;
  (%692,)
}

def @func_13717(%var_13712: Tensor[(4, 1, 1), uint32], %var_13713: Tensor[(4, 15, 1), uint32]) -> (Tensor[(4, 15, 1), uint32],) {
  %693 = cast(%var_13712, dtype="uint32") /* ty=Tensor[(4, 1, 1), uint32] */;
  %694 = cast(%var_13713, dtype="uint32") /* ty=Tensor[(4, 15, 1), uint32] */;
  %695 = left_shift(%693, %694) /* ty=Tensor[(4, 15, 1), uint32] */;
  (%695,)
}

def @func_13867(%var_13841: Tensor[(300), float64]) -> (Tensor[(3, 10, 10), float64], Tensor[(300), float64], Tensor[(11, 8, 9), float64]) {
  %696 = cast(%var_13841, dtype="float64") /* ty=Tensor[(300), float64] */;
  %697 = reshape(%696, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), float64] */;
  %698 = @func_1853(%697) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(2288), uint64], Tensor[(11, 16, 13), float64], Tensor[(3, 10, 10), float64]) */;
  %699 = @func_13773() /* ty=Tensor[(11, 8, 9), float64] */;
  %700 = cast(%699, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %701 = log10(%700) /* ty=Tensor[(11, 8, 9), float64] */;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(11, 8, 9), float64] */;
  %703 = %698.3;
  %704 = sin(%702) /* ty=Tensor[(11, 8, 9), float64] */;
  (%703, %var_13841, %704)
}

def @func_1434(%var_1427: Tensor[(11, 16, 13), uint64]) -> Tensor[(11, 16, 13), uint64] {
  %705 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 16, 13), uint64] */, dtype="uint64") /* ty=Tensor[(1, 16, 13), uint64] */;
  %706 = cast(%var_1427, dtype="uint64") /* ty=Tensor[(11, 16, 13), uint64] */;
  bitwise_xor(%705, %706) /* ty=Tensor[(11, 16, 13), uint64] */
}

def @func_1292(%var_1260: Tensor[(486), float32], %var_1261: Tensor[(10, 66), int64], %var_1285: uint64) -> (Tensor[(9, 13, 7), float64], Tensor[(6, 9, 9), float32], Tensor[(486), float32], Tensor[(10, 66), int64], Tensor[(11, 15, 4), bool], Tensor[(16, 16, 2), bool], uint64) {
  %707 = cast(meta[relay.Constant][60] /* ty=Tensor[(9, 13, 7), float64] */, dtype="float64") /* ty=Tensor[(9, 13, 7), float64] */;
  %708 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %709 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %710 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %711 = cast(%var_1261, dtype="int64") /* ty=Tensor[(10, 66), int64] */;
  %712 = reshape(%708, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %713 = reshape(%709, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %714 = reshape(%710, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %715 = reshape(%711, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %716 = @func_900(%712, %713, %714, %715) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %717 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %718 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %719 = cast(%var_1260, dtype="float32") /* ty=Tensor[(486), float32] */;
  %720 = cast(%var_1261, dtype="int64") /* ty=Tensor[(10, 66), int64] */;
  %721 = reshape(%717, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %722 = reshape(%718, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %723 = reshape(%719, newshape=[6, 9, 9]) /* ty=Tensor[(6, 9, 9), float32] */;
  %724 = reshape(%720, newshape=[660]) /* ty=Tensor[(660), int64] */;
  %725 = @func_900(%721, %722, %723, %724) /* ty=(Tensor[(6, 9, 9), float32], Tensor[(11, 15, 4), bool], Tensor[(660), int64]) */;
  %726 = cast(%var_1285, dtype="uint64") /* ty=uint64 */;
  %727 = reshape(%726, newshape=[]) /* ty=uint64 */;
  %728 = @func_965(%727) /* ty=(Tensor[(16, 16, 2), bool],) */;
  %729 = erf(%707) /* ty=Tensor[(9, 13, 7), float64] */;
  %730 = %716.0;
  %731 = %725.1;
  %732 = %728.0;
  (%729, %730, %var_1260, %var_1261, %731, %732, %var_1285)
}

def @func_8705(%var_8703: Tensor[(5, 12, 10), float64], %var_8704: Tensor[(80), float64]) -> (Tensor[(8, 5, 2), float64], Tensor[(80), float64], Tensor[(5, 12, 10), bool]) {
  %743 = fn (%var_8689: Tensor[(5, 12, 10), float64], %var_8697: Tensor[(80), float64]) -> (Tensor[(8, 5, 2), float64], Tensor[(80), float64], Tensor[(5, 12, 10), bool]) {
    %733 = cast(%var_8697, dtype="float64") /* ty=Tensor[(80), float64] */;
    %734 = reshape(%733, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), float64] */;
    %735 = cast(%var_8689, dtype="float64") /* ty=Tensor[(5, 12, 10), float64] */;
    %736 = sinh(%735) /* ty=Tensor[(5, 12, 10), float64] */;
    %737 = cast(%var_8689, dtype="bool") /* ty=Tensor[(5, 12, 10), bool] */;
    %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%736, dtype="bool") /* ty=Tensor[(5, 12, 10), bool] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %741 = @func_4506(%734) /* ty=Tensor[(8, 5, 2), float64] */;
    %742 = less_equal(%739, %740) /* ty=Tensor[(5, 12, 10), bool] */;
    (%741, %var_8697, %742)
  };
  %743(%var_8703, %var_8704) /* ty=(Tensor[(8, 5, 2), float64], Tensor[(80), float64], Tensor[(5, 12, 10), bool]) */
}

def @func_3988(%var_3986: Tensor[(3, 15, 1), float64]) -> (Tensor[(3, 15, 1), float64],) {
  @func_3985(%var_3986) /* ty=(Tensor[(3, 15, 1), float64],) */
}

def @func_13700() -> (Tensor[(11, 8, 9), float64],) {
  @func_13698() /* ty=(Tensor[(11, 8, 9), float64],) */
}

def @func_4284(%var_4283: Tensor[(9, 13, 3), int16]) -> Tensor[(9, 13, 3), bool] {
  %748 = fn (%var_4273: Tensor[(9, 13, 3), int16]) -> Tensor[(9, 13, 3), bool] {
    %744 = cast(meta[relay.Constant][61] /* ty=Tensor[(9, 13, 3), int16] */, dtype="bool") /* ty=Tensor[(9, 13, 3), bool] */;
    %745 = shape_of(%var_4273, dtype="int32") /* ty=Tensor[(3), int32] */;
    %746 = cast(%var_4273, dtype="bool") /* ty=Tensor[(9, 13, 3), bool] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%746, %747) /* ty=Tensor[(9, 13, 3), bool] */
  };
  %748(%var_4283) /* ty=Tensor[(9, 13, 3), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

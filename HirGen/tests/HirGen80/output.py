import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_98 = relay.var("var_98", dtype = "float64", shape = (9, 16, 3))#candidate|98|(9, 16, 3)|var|float64
uop_99 = relay.atanh(var_98.astype('float64')) # shape=(9, 16, 3)
var_115 = relay.var("var_115", dtype = "float64", shape = (9, 16, 3))#candidate|115|(9, 16, 3)|var|float64
bop_116 = relay.less(uop_99.astype('bool'), relay.reshape(var_115.astype('bool'), relay.shape_of(uop_99))) # shape=(9, 16, 3)
uop_123 = relay.cosh(var_115.astype('float32')) # shape=(9, 16, 3)
uop_127 = relay.asinh(uop_99.astype('float64')) # shape=(9, 16, 3)
output = relay.Tuple([bop_116,uop_123,uop_127,])
output2 = relay.Tuple([bop_116,uop_123,uop_127,])
func_129 = relay.Function([var_98,var_115,], output)
mod['func_129'] = func_129
mod = relay.transform.InferType()(mod)
mutated_mod['func_129'] = func_129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_129_call = mutated_mod.get_global_var('func_129')
var_131 = relay.var("var_131", dtype = "float64", shape = (9, 16, 3))#candidate|131|(9, 16, 3)|var|float64
var_132 = relay.var("var_132", dtype = "float64", shape = (9, 16, 3))#candidate|132|(9, 16, 3)|var|float64
call_130 = func_129_call(var_131,var_132,)
output = call_130
func_133 = relay.Function([var_131,var_132,], output)
mutated_mod['func_133'] = func_133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_140 = relay.var("var_140", dtype = "int16", shape = (14, 2, 9))#candidate|140|(14, 2, 9)|var|int16
const_141 = relay.const([[[-6,-5,10,-10,6,-2,-3,4,10],[-3,-6,2,2,-4,-9,-2,7,9]],[[-3,-6,9,1,-6,1,-4,3,-1],[-3,5,3,10,1,7,5,-9,8]],[[-8,-9,-3,-2,-9,9,2,-4,9],[2,-5,9,5,1,-6,3,9,8]],[[-6,-10,-5,-4,-5,3,8,-3,10],[-4,-5,-2,-5,5,-7,-5,-3,-8]],[[8,-7,-4,6,8,6,3,-5,-6],[-1,2,-4,-1,3,-8,6,5,-10]],[[4,1,-7,-7,7,-1,9,-4,10],[-1,9,-8,-3,2,8,6,-7,-1]],[[2,-7,2,-1,-9,-3,5,3,7],[10,6,9,5,5,10,8,-3,-2]],[[2,9,10,-2,5,-6,7,-4,7],[8,-7,-4,6,-1,-7,-6,-6,-10]],[[-7,9,8,-6,-1,-9,-4,-10,7],[-9,6,-5,-1,-1,8,-3,-4,8]],[[-8,-8,-7,-7,3,3,3,-4,-10],[-3,-10,9,-6,2,5,-1,-8,-1]],[[-5,7,10,-7,-10,4,-7,-2,-3],[-4,3,10,-8,10,1,1,4,1]],[[6,8,6,7,-1,2,-9,-7,-4],[10,-10,-6,-6,5,4,5,-4,7]],[[5,5,2,1,6,4,5,-2,8],[5,4,5,6,8,-3,9,-9,-3]],[[6,2,4,-3,-4,5,2,8,-10],[4,5,5,6,-5,10,8,5,-9]]], dtype = "int16")#candidate|141|(14, 2, 9)|const|int16
bop_142 = relay.greater(var_140.astype('bool'), relay.reshape(const_141.astype('bool'), relay.shape_of(var_140))) # shape=(14, 2, 9)
bop_149 = relay.bitwise_xor(bop_142.astype('uint8'), relay.reshape(const_141.astype('uint8'), relay.shape_of(bop_142))) # shape=(14, 2, 9)
output = bop_149
output2 = bop_149
func_152 = relay.Function([var_140,], output)
mod['func_152'] = func_152
mod = relay.transform.InferType()(mod)
var_153 = relay.var("var_153", dtype = "int16", shape = (14, 2, 9))#candidate|153|(14, 2, 9)|var|int16
output = func_152(var_153)
func_154 = relay.Function([var_153], output)
mutated_mod['func_154'] = func_154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_238 = relay.var("var_238", dtype = "float32", shape = (5, 16, 13))#candidate|238|(5, 16, 13)|var|float32
uop_239 = relay.acos(var_238.astype('float32')) # shape=(5, 16, 13)
func_152_call = mod.get_global_var('func_152')
func_154_call = mutated_mod.get_global_var('func_154')
var_242 = relay.var("var_242", dtype = "int16", shape = (126, 2))#candidate|242|(126, 2)|var|int16
call_241 = func_152_call(relay.reshape(var_242.astype('int16'), [14, 2, 9]))
call_243 = func_152_call(relay.reshape(var_242.astype('int16'), [14, 2, 9]))
output = relay.Tuple([uop_239,call_241,var_242,])
output2 = relay.Tuple([uop_239,call_243,var_242,])
func_249 = relay.Function([var_238,var_242,], output)
mod['func_249'] = func_249
mod = relay.transform.InferType()(mod)
var_250 = relay.var("var_250", dtype = "float32", shape = (5, 16, 13))#candidate|250|(5, 16, 13)|var|float32
var_251 = relay.var("var_251", dtype = "int16", shape = (126, 2))#candidate|251|(126, 2)|var|int16
output = func_249(var_250,var_251,)
func_252 = relay.Function([var_250,var_251,], output)
mutated_mod['func_252'] = func_252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_496 = relay.var("var_496", dtype = "float64", shape = (10, 3, 6))#candidate|496|(10, 3, 6)|var|float64
uop_497 = relay.asin(var_496.astype('float64')) # shape=(10, 3, 6)
uop_501 = relay.atanh(uop_497.astype('float32')) # shape=(10, 3, 6)
output = relay.Tuple([uop_501,])
output2 = relay.Tuple([uop_501,])
func_513 = relay.Function([var_496,], output)
mod['func_513'] = func_513
mod = relay.transform.InferType()(mod)
var_514 = relay.var("var_514", dtype = "float64", shape = (10, 3, 6))#candidate|514|(10, 3, 6)|var|float64
output = func_513(var_514)
func_515 = relay.Function([var_514], output)
mutated_mod['func_515'] = func_515
mutated_mod = relay.transform.InferType()(mutated_mod)
var_689 = relay.var("var_689", dtype = "float64", shape = (2, 14, 7))#candidate|689|(2, 14, 7)|var|float64
uop_690 = relay.cosh(var_689.astype('float64')) # shape=(2, 14, 7)
uop_697 = relay.cos(uop_690.astype('float32')) # shape=(2, 14, 7)
bop_706 = relay.less(uop_697.astype('bool'), relay.reshape(uop_690.astype('bool'), relay.shape_of(uop_697))) # shape=(2, 14, 7)
uop_715 = relay.rsqrt(uop_690.astype('float64')) # shape=(2, 14, 7)
func_129_call = mod.get_global_var('func_129')
func_133_call = mutated_mod.get_global_var('func_133')
var_735 = relay.var("var_735", dtype = "float64", shape = (432,))#candidate|735|(432,)|var|float64
call_734 = relay.TupleGetItem(func_129_call(relay.reshape(var_735.astype('float64'), [9, 16, 3]), relay.reshape(var_735.astype('float64'), [9, 16, 3]), ), 0)
call_736 = relay.TupleGetItem(func_133_call(relay.reshape(var_735.astype('float64'), [9, 16, 3]), relay.reshape(var_735.astype('float64'), [9, 16, 3]), ), 0)
func_513_call = mod.get_global_var('func_513')
func_515_call = mutated_mod.get_global_var('func_515')
const_738 = relay.const([-4.252000,9.404773,-8.519344,4.743427,-2.937350,-2.211138,-3.439434,3.347881,-0.585133,-0.144686,-9.690615,3.585689,-0.438196,-7.432303,4.604716,6.746201,-1.947245,-1.901921,-4.035661,-0.463237,5.321216,-8.411727,-7.135526,-1.535716,3.800419,-6.522819,5.263057,-5.373526,-2.744031,1.142548,9.958704,1.343425,-9.389170,-5.884894,4.122998,5.835674,-5.822450,7.062800,-3.163868,7.902485,-3.063334,9.286660,2.897662,9.555305,6.253284,3.596768,1.948017,-7.727251,-1.091366,0.853179,-7.329006,5.332651,-3.451095,7.401186,-5.533538,-6.427313,-3.377545,-9.153995,-6.507236,6.675568,1.593254,-6.527349,-1.023030,-6.559331,7.174335,-6.626887,-0.810466,-3.247865,-1.374041,1.139278,-3.652837,0.791349,-2.690232,-8.822756,-8.616690,-0.301954,8.230959,-3.195160,5.132664,-0.499965,-0.567074,-1.085827,-3.516155,-9.644006,-0.927005,-4.582283,8.807404,-0.066099,9.883742,-4.822209,-9.968580,0.448782,9.834604,9.619940,-6.548968,-1.043482,4.255320,-5.348797,0.647194,-4.286481,-7.144219,6.826150,8.989910,3.165700,-3.306266,-5.146862,-4.821620,-5.675338,9.024388,2.606569,-7.668187,0.165025,-7.610339,5.772030,-0.148423,-1.685470,-5.001153,-6.251154,4.805898,5.902361,-7.027709,-4.218549,3.843178,-3.726338,1.065839,8.833293,9.380865,8.083688,-8.385614,-6.537612,-4.353312,9.077196,-9.264630,-5.586286,-1.971558,1.339100,9.478447,3.144308,9.841058,-3.617144,6.155465,-6.206230,-1.724191,9.669690,-3.478721,1.971777,-4.693975,-4.416297,-8.337781,-3.519743,-1.590383,7.287006,3.551840,-5.756507,6.702881,9.725438,-5.944539,2.801225,5.969088,3.157640,-1.349175,4.923190,-1.688656,2.866479,-5.069359,4.224530,-4.641506,7.720022,6.751151,-3.600437,-3.041823,-0.786164,2.496684,9.154823,-2.043664,-6.781668,2.418385,4.533994,7.236481,-1.364477], dtype = "float64")#candidate|738|(180,)|const|float64
call_737 = relay.TupleGetItem(func_513_call(relay.reshape(const_738.astype('float64'), [10, 3, 6])), 0)
call_739 = relay.TupleGetItem(func_515_call(relay.reshape(const_738.astype('float64'), [10, 3, 6])), 0)
output = relay.Tuple([bop_706,uop_715,call_734,var_735,call_737,const_738,])
output2 = relay.Tuple([bop_706,uop_715,call_736,var_735,call_739,const_738,])
func_741 = relay.Function([var_689,var_735,], output)
mod['func_741'] = func_741
mod = relay.transform.InferType()(mod)
mutated_mod['func_741'] = func_741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_741_call = mutated_mod.get_global_var('func_741')
var_743 = relay.var("var_743", dtype = "float64", shape = (2, 14, 7))#candidate|743|(2, 14, 7)|var|float64
var_744 = relay.var("var_744", dtype = "float64", shape = (432,))#candidate|744|(432,)|var|float64
call_742 = func_741_call(var_743,var_744,)
output = call_742
func_745 = relay.Function([var_743,var_744,], output)
mutated_mod['func_745'] = func_745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_788 = relay.var("var_788", dtype = "float32", shape = (15, 3, 9))#candidate|788|(15, 3, 9)|var|float32
uop_789 = relay.exp(var_788.astype('float32')) # shape=(15, 3, 9)
output = uop_789
output2 = uop_789
func_817 = relay.Function([var_788,], output)
mod['func_817'] = func_817
mod = relay.transform.InferType()(mod)
var_818 = relay.var("var_818", dtype = "float32", shape = (15, 3, 9))#candidate|818|(15, 3, 9)|var|float32
output = func_817(var_818)
func_819 = relay.Function([var_818], output)
mutated_mod['func_819'] = func_819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_858 = relay.var("var_858", dtype = "float64", shape = (12, 9, 12))#candidate|858|(12, 9, 12)|var|float64
const_859 = relay.const([[[3.625883,1.428579,8.281644,-1.244777,-4.628186,8.413995,-7.290038,9.507926,-0.865710,-2.170860,-0.813149,-8.920918],[8.897778,3.921476,-2.217730,8.025847,0.134393,-7.746981,-1.915659,-3.480591,9.581826,3.852870,8.111927,-6.859799],[6.791593,-4.868850,3.149947,4.635994,9.203047,-0.327242,8.507055,-8.192790,-6.620587,0.750717,8.616717,-4.471632],[5.620190,2.791161,-3.797307,-2.520716,-2.819971,4.480025,-5.199905,-1.775406,-7.781928,5.178733,-0.917419,-7.783970],[-2.015866,0.387315,4.481559,2.357788,9.373837,1.581801,-7.064756,4.676779,8.013416,-8.450891,1.654207,4.067363],[8.332440,6.893384,-5.576598,9.264432,1.201144,4.738755,-2.328117,-9.731088,0.592907,9.056974,0.045964,-2.141080],[5.335579,-7.454539,7.678583,-5.212058,1.382686,-6.653986,5.477255,-8.238729,-8.222093,9.777645,-9.695664,-4.481086],[-0.519773,4.324859,-4.485825,-1.978754,-3.073898,-3.221533,-9.454881,1.369826,-6.317406,-4.626616,9.799504,-6.687056],[-5.162819,-3.847365,2.218343,-1.228366,-9.818226,-0.735840,3.551505,-9.098162,6.821992,6.730677,-3.055354,9.434792]],[[-2.286222,-4.437570,5.929368,2.388028,7.465762,-5.333269,-6.788931,-4.924757,0.197732,9.046707,4.371032,-7.876377],[-7.433889,-6.271813,-4.183250,2.752888,5.314659,-3.206564,-2.086020,-2.058776,2.580952,2.279383,3.028914,-8.878818],[-5.701800,2.642645,-5.410310,-2.866999,1.585289,7.714101,6.572790,-2.546857,-4.314337,9.633344,-7.944230,-9.922230],[-1.918146,3.010191,5.539798,-2.527616,4.575323,6.618687,-1.401235,-8.147288,0.234410,3.523395,-6.485958,1.456229],[2.596731,-3.425209,6.487831,1.657517,-7.755893,1.444281,9.535343,6.375983,-0.404155,-1.076651,-1.855125,-8.355506],[-1.258732,-2.846392,-1.630271,6.224686,-7.488685,0.421702,4.665257,-5.544048,-6.717813,5.743381,8.206376,-0.836268],[-9.052192,-7.075539,-1.925978,-8.186037,0.860616,4.193454,-1.853495,2.693658,-3.109944,-9.263986,8.549070,6.478943],[2.200765,4.069794,1.244604,-7.560863,-3.980347,1.671117,4.919691,7.583193,-3.645701,-8.370523,-4.587894,-4.495591],[6.017269,-2.666916,0.831734,-7.759976,-5.670295,9.176973,2.806498,3.406749,9.473498,-8.906317,-3.582992,4.019132]],[[7.950877,-3.003578,5.261701,-5.966684,9.448853,5.111546,4.394309,1.231331,-4.904779,1.271928,-3.024916,1.690850],[7.654047,2.898789,-3.394293,6.948035,-1.958632,3.030293,-2.212391,-0.055809,-1.667908,-5.376299,4.504879,9.312680],[-9.307070,-4.033314,-1.654516,-9.042682,7.359468,6.414723,-6.258238,2.845852,-8.225728,-0.026628,7.335759,3.607355],[7.743288,7.661666,3.487418,-1.555189,8.568375,7.559592,-0.215484,-9.953793,5.111049,4.250926,-7.458370,-5.227535],[3.158203,7.752571,-5.534754,-7.195782,-8.196323,-0.075896,8.868607,6.476492,0.541258,-3.838398,0.786733,-2.397636],[-7.197664,-2.753129,-2.116686,-8.433818,-0.279476,-2.821497,-9.894396,-2.004012,-1.074928,-0.995581,8.754649,1.423008],[-0.584686,-9.026754,-3.526007,-5.345979,6.557423,2.947059,-9.319396,7.703587,8.955112,7.894385,3.540907,-2.428603],[-2.702923,0.370517,-5.047125,3.629403,-9.935167,-5.635359,-6.681026,5.128746,-0.916489,1.571262,-7.127819,9.046390],[6.030560,0.660295,-5.546419,-7.936175,9.563150,-8.472222,-2.634874,-3.956299,1.387566,8.580467,-9.149991,7.153512]],[[2.054480,3.439838,-6.601520,2.236378,3.538770,-3.080694,-8.215345,-5.322240,-8.002264,-2.736567,-0.829224,3.412401],[7.376236,5.204420,0.756670,-9.198685,-7.799130,6.585189,-0.802740,-9.575957,0.275545,7.964518,9.145244,9.099278],[-4.636301,7.539515,0.056324,7.535493,1.907718,-3.585843,6.281419,-7.611480,-3.126680,-0.012270,-8.664815,-6.429047],[7.950048,-2.972031,3.786254,-2.463594,5.868937,4.391662,-5.702157,2.065515,0.254362,9.559564,4.919050,-0.473749],[2.779959,-1.795623,2.584608,0.019205,1.886093,-8.400443,-3.195931,-9.028196,-4.730933,-9.220542,-3.692556,-7.537583],[2.414092,5.173897,2.234616,-8.432237,-6.403228,6.427230,0.970431,2.540995,-0.036703,8.870666,-3.000287,-7.636578],[9.043529,-2.019110,-9.522448,-2.746147,-4.566355,-8.737994,6.597313,-6.987700,-8.006064,-1.553937,-2.911978,-5.365916],[8.429014,7.764842,5.470411,-9.165848,-7.211188,1.650553,3.632999,-3.436238,4.082191,-6.046492,3.321460,-7.288146],[-4.875576,0.950495,-0.817373,2.899508,-9.004692,-0.270697,-3.551098,-7.430410,9.183581,1.122543,0.077176,-2.256067]],[[9.961238,-1.300140,2.577878,-0.791093,3.917740,-6.878954,2.526555,4.322693,4.338515,2.046345,-4.523019,-7.053880],[7.939860,-3.070041,-0.911928,8.556589,7.288800,-4.335893,9.978033,-3.567822,5.868267,-1.156930,-2.437205,-1.340477],[7.855912,5.751101,8.152151,6.986058,-0.043019,-9.299869,-3.024137,-8.732081,3.249574,-7.241016,5.887184,3.104010],[-3.268910,2.966159,0.403171,-3.146374,2.036738,-5.915800,1.547753,-7.245610,9.362946,-0.254871,-2.246894,-7.607459],[-2.023721,-2.305673,9.958597,-5.212075,-5.967446,4.479092,6.141831,-8.405499,9.406195,9.716253,0.763049,-5.244722],[-5.486655,-8.291575,6.036217,-0.547235,-9.575864,2.805839,-9.050901,9.625630,3.610750,-3.619878,-2.264367,-5.460278],[6.427936,-0.369232,8.381351,-3.104609,-0.259939,-8.160781,7.279212,9.943509,-9.095419,8.699617,-6.662454,3.748106],[1.236332,-5.075246,-2.219463,-4.641636,-5.104969,-1.728831,6.582522,-7.792079,-3.908315,-8.533163,0.169504,3.322697],[-5.967427,0.182685,2.750633,5.859630,-6.050750,-3.187244,-4.481846,6.301167,1.061207,-7.529710,-5.035539,-6.866837]],[[6.761068,-8.781968,-2.182284,-6.851072,-6.571815,1.504233,-6.601096,4.920173,-8.846940,-5.783168,-0.685744,-3.394335],[9.714427,-1.103751,3.662431,-6.353187,2.035900,5.950655,-8.501405,1.307629,9.001093,-5.726559,1.231114,2.461389],[5.860648,-6.106285,2.461241,-9.105395,1.666030,-2.364236,6.061978,5.532208,2.794494,6.632574,9.976676,-1.972385],[9.272701,-1.688192,-2.373139,9.205510,1.404546,5.657287,-4.219831,-0.965041,9.170993,-5.949625,6.330370,2.390296],[-7.361475,2.749209,2.392238,7.639343,-2.236468,6.055586,2.512850,6.079668,-0.133655,3.550657,-3.284608,-4.831762],[-8.423164,-8.950001,0.335683,-7.900710,-4.386021,8.461545,7.000003,5.007572,-6.607995,3.281788,7.069125,3.651202],[5.623386,-6.594670,-1.899823,4.299000,5.273849,-7.523070,-4.779218,-4.414557,-1.367215,-5.798721,-7.597282,-7.821625],[5.257188,-9.089030,-6.718583,-2.121193,-3.885123,4.488151,-1.239155,6.702419,-7.370563,-4.810962,-0.495414,-5.685359],[-4.317502,8.567625,-8.124780,9.955275,1.316977,-1.179464,0.610801,3.783051,9.442788,-7.894268,-8.666197,3.185694]],[[-7.701745,5.722353,-1.882778,1.993496,-5.324992,-8.870355,-5.491399,-6.170714,5.844248,6.286003,-2.656624,3.314065],[7.373698,3.789728,8.423199,8.200277,-7.194574,7.295952,-7.506511,0.654429,1.035606,3.872044,7.054257,0.140857],[-5.768515,-5.920567,4.367866,-9.164235,8.999538,-7.248979,-3.444550,-5.630236,-4.145988,3.942534,2.631109,-7.331038],[-3.328556,-4.412959,3.428967,2.620112,9.753253,-8.759851,7.522284,2.721289,-5.487712,7.284323,3.374516,8.625319],[9.333421,-1.770998,0.314706,4.962442,-3.497292,-0.367884,4.893916,5.813529,5.778432,-9.148549,-2.576150,5.545405],[5.364444,4.478642,4.727009,2.192497,-3.961837,8.192221,-1.970415,8.780707,-6.416938,-8.821563,8.960135,-2.021903],[-7.354020,2.698730,1.935816,9.341618,-4.186416,1.528489,-5.016962,-7.159085,1.811721,-6.194055,7.287723,-2.175253],[6.507053,2.222501,2.210745,9.861313,-6.261952,-2.052475,-5.827145,2.526932,5.563748,-6.351145,8.188098,-1.392619],[-0.826445,-2.111657,-6.254546,9.181335,1.482379,7.840397,9.151174,-6.793608,2.328337,4.259472,4.382791,-1.895024]],[[2.768507,-4.715901,-5.950557,7.552163,6.191943,-9.088636,9.099373,-4.518798,-6.296263,3.691154,-3.444523,-9.058793],[-5.706582,2.756239,-4.309784,-7.366130,-5.187356,-6.716464,7.231942,6.070620,8.573628,3.614499,-2.518112,7.546281],[8.432026,-3.660424,6.250307,7.855228,-2.177712,3.861175,6.195873,-3.476167,-9.579807,-6.415563,9.170131,-7.370533],[6.624491,8.179414,1.875856,-2.082963,4.433515,0.967425,5.913346,-0.223835,2.715406,-8.680224,-2.313530,0.890299],[7.445496,-2.396012,4.579660,9.612328,-6.776369,-2.480407,-1.588615,-4.836647,1.226395,-4.345699,5.213434,-4.526656],[-8.821907,5.140170,-7.716972,2.615160,-8.004955,-6.571118,-1.930458,-8.526771,-7.672135,6.183556,7.565154,-4.848319],[9.689481,-7.132276,6.424507,3.605943,3.276340,-4.516212,0.843428,-6.863769,-0.996531,-7.991809,-1.410055,1.867437],[0.065197,7.876946,5.668266,-0.079190,-2.000029,7.938925,4.705130,7.739965,1.573788,-5.903387,5.662199,-9.854041],[4.079154,2.236724,5.440873,-0.518413,5.906918,4.792015,9.596379,8.392443,-5.444554,-0.046660,8.926944,8.201295]],[[6.810994,-3.345376,-7.224230,-9.249996,1.621789,4.802336,7.795871,1.346659,-7.475247,1.496612,-5.047746,1.204207],[1.166391,8.762471,-6.281892,8.178891,-7.043802,-8.073647,-4.338043,9.114583,-7.187351,-3.391747,-0.150112,-3.633998],[-7.357715,7.600130,-1.678614,-5.048181,-1.059379,1.453451,-1.596658,-6.862515,-6.833084,2.910381,-9.515859,-6.938800],[1.122818,-6.321361,-9.358884,-3.852783,-4.030841,-7.211576,4.784956,-1.724654,-5.506519,-5.459128,-8.344202,1.676432],[9.131108,4.052605,6.816235,6.082614,-0.880941,6.057332,-7.059980,1.722782,9.008927,-9.071517,-1.788708,-7.426397],[-3.088744,4.229426,4.721506,2.018714,0.666510,-7.435703,-7.921741,-4.693481,2.322651,7.061137,6.706959,-0.302273],[-0.050985,2.375948,9.740185,5.429940,-2.207142,-5.288289,-4.102960,4.695204,-8.216255,-3.857848,6.780547,5.851170],[-8.190481,-7.780741,-9.494489,-3.420883,8.819354,2.481562,3.640295,-3.424771,-9.133949,-4.993380,-3.809353,-5.261276],[0.795015,4.911285,1.884942,-1.449913,-0.996079,-6.965107,8.484245,6.559809,-0.077619,-5.765627,-1.133666,-7.088922]],[[2.684497,6.378214,-5.394757,8.462772,-2.588099,-8.465027,6.886797,-5.916120,7.418225,-1.613692,8.889457,-6.094610],[4.862203,-5.232946,3.483204,-8.773925,8.376121,3.089714,3.499231,6.867147,3.040291,-5.237256,-0.499518,-3.910481],[2.764840,0.747593,6.260651,-5.194827,-2.907018,-7.868148,9.208631,-6.461672,-3.036847,-6.029979,-1.523029,2.547716],[4.935719,3.857044,-2.195700,-8.463546,-0.809727,4.439940,7.571477,-1.817676,-8.543205,7.440880,4.900250,-7.824023],[7.944607,-9.776345,-1.769608,-8.052134,7.955299,-4.542955,9.105790,2.924252,-3.894898,1.243969,-8.155581,9.191377],[-9.719740,3.829755,-9.616721,7.201598,-0.242402,-0.644074,-0.290777,9.410367,-5.148269,7.546080,-7.000494,4.207030],[3.415472,-7.064838,8.308373,-3.222267,-5.581431,1.200723,8.211541,9.731677,-1.471023,7.330191,-2.038265,-2.963736],[-1.627709,-5.462471,-5.852542,1.559826,4.651966,-6.330486,4.620520,-8.631928,-1.772288,-0.505922,1.756731,4.857992],[3.121576,-4.543212,7.992943,-5.094191,-9.039238,-3.167406,4.165137,0.309659,9.139486,5.743907,-5.681933,1.181825]],[[4.803343,1.074213,0.437305,4.457844,0.688922,-0.739604,-0.339773,-5.561610,3.034156,-3.457257,-2.228638,6.500469],[3.875791,-1.906199,4.185372,-7.238679,6.591656,3.740292,-2.893980,-5.287917,-3.982309,9.730277,4.987945,3.988944],[-7.618903,5.932049,6.509614,3.542483,2.436427,8.987303,0.800012,-6.129239,2.734628,3.646868,-0.158836,6.174143],[-7.891014,6.664893,-4.003489,-0.413166,-7.593964,0.357661,5.245932,-0.482355,-8.663739,9.515075,3.468565,-6.564495],[9.001456,3.294763,8.670437,-0.104475,1.350204,-8.260985,-9.281067,-6.685307,-2.345305,9.271412,-3.713227,7.550012],[1.699030,-5.133968,-8.920072,1.036329,-9.460730,5.642355,0.594923,9.053524,9.798006,-0.335137,1.370943,3.355785],[-2.521639,7.645784,-0.224601,5.359191,0.496457,5.071184,-1.034243,4.988739,0.253105,2.501880,-1.979311,2.007362],[-3.782874,7.314954,-4.271505,5.482211,9.342884,-4.981937,6.794113,4.542811,8.260436,-3.764024,2.721879,1.126071],[-1.981207,6.038322,2.077643,2.160946,-7.301966,7.550684,7.711580,4.218184,7.478050,-3.131456,6.452927,5.897186]],[[-1.167764,7.730226,4.675577,-2.495335,7.169062,-4.627334,-4.134009,-0.662946,2.859145,-9.738981,-8.789977,3.205611],[8.673978,4.732067,-7.495835,6.273876,-3.878180,-0.296584,8.878465,-3.940073,3.264269,-4.079919,-8.798937,-7.096307],[-8.703887,-6.466020,1.494680,8.639966,2.864576,9.000096,1.998998,6.240559,1.256532,-5.236666,-8.025623,5.553426],[1.673424,-9.241157,-6.502824,7.591259,0.865082,-7.077262,-5.090930,3.045629,-2.401004,5.782891,5.300138,4.111537],[-2.892420,-4.443443,-1.973622,-4.252873,9.317779,8.627630,-7.389681,-9.445857,-6.757935,-1.034153,-7.013235,7.018432],[-2.329506,6.083215,6.778270,0.723096,-7.982211,-1.845262,5.711484,-8.832155,6.718726,1.319596,3.094189,5.927045],[-5.461028,-2.374469,2.476815,8.534235,-0.439425,-0.888737,2.623316,8.739031,8.581942,1.721182,3.919429,2.653267],[4.951746,-8.888900,-0.716212,0.248846,7.907601,-4.808402,7.465953,-8.811560,-0.565962,0.986333,-2.254711,9.074286],[-7.531194,4.116892,-0.772525,9.409213,0.277907,-7.530736,1.783044,-8.752688,2.498003,-6.967182,-2.573552,-5.281141]]], dtype = "float64")#candidate|859|(12, 9, 12)|const|float64
bop_860 = relay.mod(var_858.astype('float64'), relay.reshape(const_859.astype('float64'), relay.shape_of(var_858))) # shape=(12, 9, 12)
func_249_call = mod.get_global_var('func_249')
func_252_call = mutated_mod.get_global_var('func_252')
var_869 = relay.var("var_869", dtype = "float32", shape = (1040,))#candidate|869|(1040,)|var|float32
var_870 = relay.var("var_870", dtype = "int16", shape = (252,))#candidate|870|(252,)|var|int16
call_868 = relay.TupleGetItem(func_249_call(relay.reshape(var_869.astype('float32'), [5, 16, 13]), relay.reshape(var_870.astype('int16'), [126, 2]), ), 2)
call_871 = relay.TupleGetItem(func_252_call(relay.reshape(var_869.astype('float32'), [5, 16, 13]), relay.reshape(var_870.astype('int16'), [126, 2]), ), 2)
output = relay.Tuple([bop_860,call_868,var_869,var_870,])
output2 = relay.Tuple([bop_860,call_871,var_869,var_870,])
func_874 = relay.Function([var_858,var_869,var_870,], output)
mod['func_874'] = func_874
mod = relay.transform.InferType()(mod)
var_875 = relay.var("var_875", dtype = "float64", shape = (12, 9, 12))#candidate|875|(12, 9, 12)|var|float64
var_876 = relay.var("var_876", dtype = "float32", shape = (1040,))#candidate|876|(1040,)|var|float32
var_877 = relay.var("var_877", dtype = "int16", shape = (252,))#candidate|877|(252,)|var|int16
output = func_874(var_875,var_876,var_877,)
func_878 = relay.Function([var_875,var_876,var_877,], output)
mutated_mod['func_878'] = func_878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_882 = relay.var("var_882", dtype = "float32", shape = (3, 8, 14))#candidate|882|(3, 8, 14)|var|float32
uop_883 = relay.cos(var_882.astype('float32')) # shape=(3, 8, 14)
output = relay.Tuple([uop_883,])
output2 = relay.Tuple([uop_883,])
func_889 = relay.Function([var_882,], output)
mod['func_889'] = func_889
mod = relay.transform.InferType()(mod)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_890 = relay.var("var_890", dtype = "float32", shape = (3, 8, 14))#candidate|890|(3, 8, 14)|var|float32
func_889_call = mutated_mod.get_global_var('func_889')
call_891 = func_889_call(var_890)
output = call_891
func_892 = relay.Function([var_890], output)
mutated_mod['func_892'] = func_892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1002 = relay.var("var_1002", dtype = "float32", shape = (5, 10, 11))#candidate|1002|(5, 10, 11)|var|float32
uop_1003 = relay.sinh(var_1002.astype('float32')) # shape=(5, 10, 11)
func_874_call = mod.get_global_var('func_874')
func_878_call = mutated_mod.get_global_var('func_878')
var_1006 = relay.var("var_1006", dtype = "float64", shape = (1296,))#candidate|1006|(1296,)|var|float64
const_1007 = relay.const([[2.826766,-4.115165,-2.454890,2.891955,5.620054,-2.081652,-2.796518,9.936150,-3.465399,5.071382,-5.951180,-6.593523,-3.281410,-3.536520,5.168163,1.289268,1.240247,-8.206906,9.733444,3.674340,-0.782519,9.568737,-6.930417,0.495005,7.946118,-3.365533,-9.276388,9.119332,3.246316,2.300866,8.845356,4.804700,-7.707334,9.926267,9.434163,-2.075813,-5.934800,-6.066809,-0.675621,-4.118981,-5.239595,1.903031,0.888151,-1.408340,1.890596,6.335510,-4.999926,6.839602,-2.114759,5.262548,9.202906,-6.827038,1.372709,3.217704,-3.408458,7.978151,-5.512041,3.270543,4.742669,-9.992644,9.483881,-1.159941,7.110301,-6.772041,-8.265935,1.856288,2.898362,8.863325,6.437902,-9.956316,-3.492729,-4.149994,-7.369953,-4.057207,0.205554,-6.525185,-1.892073,9.554260,2.792387,-0.849311,7.545682,1.131261,6.914081,8.023863,0.072686,-7.322455,1.632723,5.507766,-2.505338,2.608026,-6.645524,-2.255341,-2.817949,-5.580446,8.181583,9.762903,7.767426,0.353653,-1.552777,4.628512,-8.096996,6.577901,-9.792784,3.194183,9.849554,0.677682,3.635324,-1.205737,3.970697,6.496100,0.664588,1.970418,1.591503,9.278029,6.808278,-3.610620,-5.413387,3.602685,-8.159702,3.330549,2.382538,3.462410,-8.528273,7.694620,4.179780,-8.423887,2.219263,5.509339,-3.654752,-7.762303,6.514078,1.177318,4.722488,-2.301815,-4.765880,1.143129,-1.027305,-8.801948,-8.561701,-1.837679,-2.676434,9.397898,-8.753342,-4.623102,1.628369,-7.401653,7.176158,9.358799,-8.747073,-7.391069,3.934904,7.101023,9.899859,5.580527,2.374579,6.505323,-2.027751,1.396241,3.278074,-6.763911,6.834915,2.221633,-8.951945,7.080913,-3.272536,2.696469,0.650626,-6.663762,-3.163221,-3.938738,3.233212,4.079191,-9.721162,5.476140,0.057353,2.084548,-8.709528,8.891176,9.885768,-3.718758,3.757474,4.814303,-2.517889,1.955333,9.724834,-6.441198,8.433956,0.444520,-8.389642,5.187080,-8.578154,-4.198388,3.493757,5.135860,-9.209006,-5.154348,-1.849579,-7.445047,8.776848,8.211019,-6.908198,-4.218309,-1.681514,6.308001,-0.947780,-1.445505,6.294521,3.324986,-1.350086,1.487718,-2.778039,-3.185451,-4.616459,9.960046,-7.002428,-2.552584,-8.940461,-0.810559,-1.779889,-7.934735,-2.392018,6.292607,4.997490,-2.992534,-2.152976,5.765113,-3.730583,5.355020,-3.973102,-2.317811,1.899277,2.009041,9.853144,-8.405970,-1.061384,-5.043432,4.433169,-6.319139,6.707440,2.086857,2.885067,-8.824835,-1.484529,-2.267163,9.288679,-5.496076,9.387995,-9.997289,7.916904,8.579816,6.528139,6.454890,1.464441,-6.085949,-1.424165,-4.571586,-1.551028,9.174984,-0.451137,0.755614],[7.946484,4.396622,-3.511957,1.612891,-7.475718,5.356246,7.717648,7.707375,-9.832551,6.293433,6.012677,-7.966192,-6.348351,-1.705567,0.564139,-7.258274,0.512061,-1.544709,-8.609977,-5.651239,-7.114283,-7.814619,-7.515754,-7.867312,6.605794,4.247130,-0.428059,-1.808279,-1.417507,7.437609,8.725193,-8.703409,9.218794,-6.443560,-1.418873,4.590972,-4.839788,-2.151341,4.893400,8.118423,-9.081539,6.531528,7.719683,-0.855731,-1.936152,8.839333,6.229747,1.118613,-8.941588,-1.219847,-9.300756,8.254929,-6.246451,7.425793,5.959289,-4.666607,0.353403,-3.012731,-1.459885,-9.569479,-0.839301,-6.529100,6.140033,3.487029,1.671987,6.157021,2.790927,-0.668995,-2.308539,3.515092,-5.514700,-7.211464,4.903183,-6.745095,6.831002,-7.833521,5.045660,3.541392,-2.495787,-5.052031,8.721660,0.636652,5.987475,-8.088982,1.107778,9.946907,7.863046,-2.129388,-2.256821,-4.785634,7.630922,9.963707,5.393687,-4.368749,3.533548,0.302206,-0.558205,5.211358,-5.663664,1.728651,7.040198,-7.309620,-6.634765,5.543075,7.798712,-5.508579,7.626707,2.512908,2.331040,-8.174299,7.794275,9.517523,3.307208,4.649704,-3.557618,0.107160,2.317584,-9.607840,-5.669602,-9.397509,-0.868856,4.312661,-5.901180,-4.392517,-8.401503,6.631034,1.547035,7.097218,6.818084,-1.494660,8.904200,-6.889972,0.604526,4.342213,-1.599167,-0.846984,-9.856071,-3.255172,-1.280047,-8.967975,-5.145092,-7.055024,-8.997374,-7.700855,-1.546912,0.548594,-0.665476,-7.030919,2.994369,-2.906336,0.831206,-2.055643,-7.259401,1.836709,3.204349,5.291695,0.587804,3.790622,8.360017,7.899215,2.096005,7.592505,-0.077690,6.935088,2.625256,-7.114015,-1.590427,7.336106,4.859480,-0.771840,-5.448222,-8.041678,3.804964,-9.680900,2.841057,3.754316,-6.341562,2.657466,-4.415160,-7.468529,-2.692658,8.409200,9.203627,4.319473,1.005429,-3.035460,5.540221,6.662251,-9.325208,1.927283,2.641094,-0.610749,0.298618,2.789832,9.734683,-6.731915,-1.542461,-3.337876,-3.279088,-5.777090,9.683299,3.492923,-2.541712,-4.426988,-9.488971,-8.956063,-4.886110,-0.576119,-6.454316,4.939476,4.401679,9.515594,0.216386,-0.126828,8.454731,0.268932,9.868591,9.165184,4.106828,-8.190298,4.772550,-7.238001,-9.028036,-7.489701,-1.016433,-2.305724,5.129977,6.887829,5.859338,-5.010849,-7.697843,-5.518743,-1.258651,7.355772,4.459545,-2.715231,9.207574,-8.229286,6.941115,-5.429462,-5.932108,4.548248,8.392502,4.672912,-9.538491,3.354400,9.441970,-9.476986,-9.858084,-3.601859,-1.192210,-5.820678,6.087757,2.294083,8.436395,-3.955982,-9.524863,8.035477,-5.781002,-9.355773],[-1.559437,9.901397,0.915535,-0.701825,-7.166893,5.862280,9.389932,-5.031894,-7.112076,0.057733,4.988884,-1.879411,2.133647,4.668456,-7.077223,9.788473,-7.032762,-0.680904,-2.404031,7.344353,4.861583,7.925256,-4.246123,4.130789,0.323531,2.776092,-7.419414,-4.456437,8.205059,5.839398,-2.290280,6.929529,-3.848736,-0.087261,-8.925329,0.963535,4.448314,-7.945142,-2.370702,-6.116210,-9.039087,-3.627705,0.951616,-1.200401,3.605840,-4.928842,-1.671107,-0.744623,-9.248882,-2.558882,-7.603378,-8.771906,-1.681567,7.852283,2.108523,0.183007,5.338102,-3.070364,-3.736002,-1.481600,1.794495,0.611248,-8.101616,-6.795094,4.048703,1.588349,-4.634693,6.071414,-8.672475,4.547046,-0.555336,3.679272,-5.760223,5.359395,-0.770060,-9.928319,-0.579852,-0.329434,9.768722,8.234413,5.333712,-9.651493,7.343064,-4.419810,5.437520,4.253290,-1.055074,8.320966,-6.716427,-9.711148,-4.241121,-0.497253,-9.320237,7.383463,4.252574,-7.634223,3.512605,-3.442258,-4.073306,-4.786944,-8.464350,-5.544456,-4.821887,-8.861461,-3.559449,-2.277034,9.251552,9.813879,6.628209,-6.462607,-7.920477,7.409449,2.335576,-6.574601,-7.926628,4.662455,-0.001774,-2.048286,-5.893676,9.851023,8.795955,8.136419,3.397890,-9.855931,-5.417000,8.320268,-6.086217,-5.023251,2.352183,2.558277,-2.454945,-6.439800,-3.262867,0.020324,0.054447,6.252103,-8.669150,-1.657535,-0.691096,-9.254604,0.098237,3.181837,-8.794253,5.408734,-0.618031,-2.221774,-7.423995,8.742595,8.455799,0.924941,2.402567,1.814399,4.378376,1.854351,-4.163113,-1.640749,-1.318277,1.651022,-8.426975,-2.652352,-9.153111,8.677830,5.598216,3.762835,3.234383,-3.423368,-9.560236,1.244942,7.216450,8.921947,-6.286630,1.327095,6.337995,-6.756203,8.477473,-3.156176,8.866499,-3.520793,-6.285736,9.843959,-6.224656,-2.725826,8.121169,0.740310,2.849410,-7.749563,-3.039432,-9.045886,8.055792,3.255529,9.020118,-2.355893,0.297655,3.503926,-6.162899,-1.636006,-9.380047,6.896156,-3.593352,-4.995486,3.841282,8.574682,-0.772723,7.337276,-2.004426,0.679042,-5.427108,-9.280731,-3.834546,1.211598,-4.282945,-1.363608,0.621525,-4.050244,-2.835818,8.410409,-5.950240,4.151203,-5.502525,-7.025826,-8.849125,-5.462992,3.449530,-2.807556,-1.723676,-4.498435,2.637448,-1.705060,5.416511,-8.431958,6.021401,4.863510,6.568877,1.198525,-1.410614,-5.325075,5.908221,7.725329,-4.204580,-2.022092,-2.527504,1.361133,9.609569,-4.713392,1.841646,-9.995300,-9.206738,-3.500948,6.069707,1.886494,2.547066,-1.732321,-4.069329,6.001532,7.712931,3.598895,-5.233051,-3.107079,-7.190975,-8.909430],[5.353617,5.947110,2.884458,2.576277,1.977989,-0.079023,2.237338,9.113260,-0.981716,-4.260654,-3.761080,8.794524,-0.065265,8.957793,-4.653006,-9.056015,-6.562217,8.071470,9.208296,-7.201958,5.080699,3.816500,1.091419,-1.510304,5.773273,-7.453361,3.242869,5.111410,6.130520,-9.864789,-2.690230,3.364308,-9.242884,-8.708028,-5.923157,-4.327091,4.670182,-9.891639,-3.499749,7.345271,6.887031,-6.100668,3.499277,-0.086898,-7.363709,3.231100,-9.377357,1.862546,7.475066,-0.091167,1.283941,-2.463931,3.176995,8.774680,0.908532,1.869697,-8.307068,4.592287,8.673585,-8.915924,6.362684,7.913062,5.418251,-4.212311,-7.924043,-6.120753,-1.417586,1.803949,5.154109,2.642342,2.006597,9.497920,-5.868618,3.904140,-1.526009,2.258221,0.957904,4.285320,-6.148928,-5.930568,5.384517,-9.612117,9.706739,5.637645,-5.313137,8.325930,0.875556,-9.801494,-3.744559,-6.876317,9.061549,-6.939526,-4.236804,3.103554,8.363617,2.773374,-0.602443,-8.006257,9.113222,-9.260244,2.246745,6.279183,-2.386048,-3.318679,-8.935872,-1.809705,4.758664,-0.880944,-8.660999,-7.962023,7.888153,-0.881651,6.938726,2.944233,-8.329774,-4.701537,-0.515919,4.104099,5.645907,7.778871,-8.545735,-5.716372,-2.707909,1.554504,-7.246004,-3.986916,8.303561,-7.924532,-9.670471,-7.303448,1.680965,-1.435306,-2.615010,5.420649,8.952962,6.834353,-1.414760,5.621513,9.472513,4.661950,-3.611096,7.526930,9.041165,-8.709244,-6.677782,-1.348753,-2.910368,4.934661,-3.236577,-5.078484,4.089486,1.465739,7.958897,-7.236180,5.638291,4.358869,0.016806,-5.592905,-2.894264,-9.483150,9.723911,-8.836620,4.533957,-6.153320,-0.149772,-4.200532,6.452781,0.504571,-6.562119,5.469224,-7.366985,-8.511487,9.113282,-3.346404,9.831894,-3.358649,5.760612,-4.365175,-0.556504,2.331374,-9.505385,-1.154709,5.277254,-1.797626,1.791561,-9.573577,-0.715389,-9.380001,2.125623,5.179021,6.161557,2.968662,6.885815,-7.245202,-1.105174,-6.139360,1.032228,-3.905565,8.561866,-0.068974,-5.972422,-3.895221,2.676250,3.216466,0.314810,-0.212052,-4.783394,2.796852,6.127934,-2.312351,5.140339,-1.524638,7.662830,-4.673140,-1.801838,-1.982595,7.345357,0.176991,2.317218,8.098382,-6.183292,0.571945,3.340194,-3.322609,-4.957831,-8.245884,2.792259,-1.394628,-0.390207,5.838542,-9.408112,9.387968,-3.576610,-5.894648,9.907273,-5.606057,3.793973,1.294493,4.670387,-2.545593,-3.090150,6.897966,6.270698,-6.885692,-5.741173,-0.403722,3.497391,-6.093747,4.293082,9.719191,-5.317941,-3.539910,-9.663297,-0.324072,7.723118,9.611864,-5.918631,6.803462,7.971839,4.254050]], dtype = "float32")#candidate|1007|(4, 260)|const|float32
var_1008 = relay.var("var_1008", dtype = "int16", shape = (126, 2))#candidate|1008|(126, 2)|var|int16
call_1005 = relay.TupleGetItem(func_874_call(relay.reshape(var_1006.astype('float64'), [12, 9, 12]), relay.reshape(const_1007.astype('float32'), [1040,]), relay.reshape(var_1008.astype('int16'), [252,]), ), 0)
call_1009 = relay.TupleGetItem(func_878_call(relay.reshape(var_1006.astype('float64'), [12, 9, 12]), relay.reshape(const_1007.astype('float32'), [1040,]), relay.reshape(var_1008.astype('int16'), [252,]), ), 0)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
var_1018 = relay.var("var_1018", dtype = "float32", shape = (405,))#candidate|1018|(405,)|var|float32
call_1017 = func_817_call(relay.reshape(var_1018.astype('float32'), [15, 3, 9]))
call_1019 = func_817_call(relay.reshape(var_1018.astype('float32'), [15, 3, 9]))
uop_1024 = relay.log2(uop_1003.astype('float32')) # shape=(5, 10, 11)
output = relay.Tuple([call_1005,var_1006,const_1007,var_1008,call_1017,var_1018,uop_1024,])
output2 = relay.Tuple([call_1009,var_1006,const_1007,var_1008,call_1019,var_1018,uop_1024,])
func_1026 = relay.Function([var_1002,var_1006,var_1008,var_1018,], output)
mod['func_1026'] = func_1026
mod = relay.transform.InferType()(mod)
var_1027 = relay.var("var_1027", dtype = "float32", shape = (5, 10, 11))#candidate|1027|(5, 10, 11)|var|float32
var_1028 = relay.var("var_1028", dtype = "float64", shape = (1296,))#candidate|1028|(1296,)|var|float64
var_1029 = relay.var("var_1029", dtype = "int16", shape = (126, 2))#candidate|1029|(126, 2)|var|int16
var_1030 = relay.var("var_1030", dtype = "float32", shape = (405,))#candidate|1030|(405,)|var|float32
output = func_1026(var_1027,var_1028,var_1029,var_1030,)
func_1031 = relay.Function([var_1027,var_1028,var_1029,var_1030,], output)
mutated_mod['func_1031'] = func_1031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1280 = relay.var("var_1280", dtype = "float32", shape = ())#candidate|1280|()|var|float32
var_1281 = relay.var("var_1281", dtype = "float32", shape = (8, 16, 14))#candidate|1281|(8, 16, 14)|var|float32
bop_1282 = relay.add(var_1280.astype('float32'), var_1281.astype('float32')) # shape=(8, 16, 14)
uop_1287 = relay.atan(bop_1282.astype('float32')) # shape=(8, 16, 14)
output = relay.Tuple([uop_1287,])
output2 = relay.Tuple([uop_1287,])
func_1291 = relay.Function([var_1280,var_1281,], output)
mod['func_1291'] = func_1291
mod = relay.transform.InferType()(mod)
mutated_mod['func_1291'] = func_1291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1291_call = mutated_mod.get_global_var('func_1291')
var_1293 = relay.var("var_1293", dtype = "float32", shape = ())#candidate|1293|()|var|float32
var_1294 = relay.var("var_1294", dtype = "float32", shape = (8, 16, 14))#candidate|1294|(8, 16, 14)|var|float32
call_1292 = func_1291_call(var_1293,var_1294,)
output = call_1292
func_1295 = relay.Function([var_1293,var_1294,], output)
mutated_mod['func_1295'] = func_1295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1585 = relay.var("var_1585", dtype = "float64", shape = (8, 5, 11))#candidate|1585|(8, 5, 11)|var|float64
uop_1586 = relay.log10(var_1585.astype('float64')) # shape=(8, 5, 11)
bop_1596 = relay.maximum(uop_1586.astype('float64'), relay.reshape(var_1585.astype('float64'), relay.shape_of(uop_1586))) # shape=(8, 5, 11)
func_741_call = mod.get_global_var('func_741')
func_745_call = mutated_mod.get_global_var('func_745')
var_1606 = relay.var("var_1606", dtype = "float64", shape = (1, 196))#candidate|1606|(1, 196)|var|float64
var_1607 = relay.var("var_1607", dtype = "float64", shape = (432,))#candidate|1607|(432,)|var|float64
call_1605 = relay.TupleGetItem(func_741_call(relay.reshape(var_1606.astype('float64'), [2, 14, 7]), relay.reshape(var_1607.astype('float64'), [432,]), ), 2)
call_1608 = relay.TupleGetItem(func_745_call(relay.reshape(var_1606.astype('float64'), [2, 14, 7]), relay.reshape(var_1607.astype('float64'), [432,]), ), 2)
output = relay.Tuple([bop_1596,call_1605,var_1606,var_1607,])
output2 = relay.Tuple([bop_1596,call_1608,var_1606,var_1607,])
func_1610 = relay.Function([var_1585,var_1606,var_1607,], output)
mod['func_1610'] = func_1610
mod = relay.transform.InferType()(mod)
var_1611 = relay.var("var_1611", dtype = "float64", shape = (8, 5, 11))#candidate|1611|(8, 5, 11)|var|float64
var_1612 = relay.var("var_1612", dtype = "float64", shape = (1, 196))#candidate|1612|(1, 196)|var|float64
var_1613 = relay.var("var_1613", dtype = "float64", shape = (432,))#candidate|1613|(432,)|var|float64
output = func_1610(var_1611,var_1612,var_1613,)
func_1614 = relay.Function([var_1611,var_1612,var_1613,], output)
mutated_mod['func_1614'] = func_1614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1755 = relay.var("var_1755", dtype = "int16", shape = (7, 9, 13))#candidate|1755|(7, 9, 13)|var|int16
var_1756 = relay.var("var_1756", dtype = "int16", shape = (7, 9, 13))#candidate|1756|(7, 9, 13)|var|int16
bop_1757 = relay.subtract(var_1755.astype('int16'), relay.reshape(var_1756.astype('int16'), relay.shape_of(var_1755))) # shape=(7, 9, 13)
func_129_call = mod.get_global_var('func_129')
func_133_call = mutated_mod.get_global_var('func_133')
const_1766 = relay.const([-6.849071,6.044602,-8.255195,-4.281748,-5.350764,2.348942,-9.032108,-5.743459,6.052895,3.722650,9.498899,-0.120775,8.562884,4.436589,8.331789,-9.201654,-1.886153,1.919483,2.143238,-1.473060,-0.662356,1.077623,3.649201,-7.537313,9.737468,-7.094014,-5.670402,3.460413,-9.378305,9.007026,-8.378474,4.186161,5.056163,0.385946,-9.795108,-2.894312,-0.349011,7.012001,8.756359,-8.307266,5.823200,3.318550,7.475670,-1.441836,8.204775,7.594786,4.192287,-2.243946,-1.802473,7.327584,9.409212,4.504080,5.333290,-7.015711,-2.409719,-3.092735,2.894565,5.314019,-9.882174,-2.415969,1.987625,1.566507,-0.820655,8.603005,-4.150510,0.553164,7.426809,3.781388,3.918227,7.859052,-3.903729,-1.416449,-9.236387,-0.129752,0.025947,-8.991021,5.488821,4.761602,-7.880181,-4.284684,-3.815208,-8.073753,-8.131422,-0.986858,9.592299,4.155968,5.314216,-5.305985,4.465358,1.346805,4.716331,-3.090525,5.021578,3.092042,-6.077126,-5.318864,0.341275,-9.963562,-5.300322,-0.485204,9.046450,6.729622,4.967051,-5.156042,7.009770,5.049204,0.804037,9.735889,8.333158,-8.978858,-4.187894,-4.836038,-5.624508,7.622255,-9.019066,-6.149223,7.873263,-2.325442,8.252780,3.285721,-9.692445,-7.271333,-3.482109,0.353475,-9.707834,-6.488028,-6.107918,-9.592875,1.373528,-7.280141,6.409828,2.010759,-4.539253,5.775768,-6.787675,-3.246089,2.965808,2.061603,-5.404033,-9.094383,-8.843145,3.691992,6.415431,7.460006,9.331192,-9.680488,2.132803,3.750747,-3.973882,1.576525,-3.753814,9.423877,-2.207384,4.138611,1.867916,1.661392,-8.964663,3.971578,6.604599,8.638095,-6.229569,1.845074,0.825667,1.279790,-2.373698,2.322987,2.547972,-3.205474,8.652138,-5.384984,9.210229,-1.335782,0.333073,-6.019026,7.729402,9.925780,3.636470,7.911677,-8.995013,-0.108975,4.839046,5.781626,9.949882,2.566122,9.330413,5.172636,2.188324,1.706728,8.413298,0.895843,4.380229,-4.839645,-3.620877,4.239635,2.497507,8.887809,7.899979,0.095163,-0.078575,0.376729,-9.141365,4.760652,7.616370,-8.634660,-5.577610,2.278623,1.129082,-8.808007,8.763731,-8.661948,-5.449918,1.096473,-4.532502,-4.643989,8.957771,-9.384922,-0.662459,-2.073450,-7.018416,5.982162,-3.421676,-7.737553,-0.973858,5.292926,1.623147,-4.972285,3.600195,5.804200,-2.236050,6.266561,-6.491595,-5.026576,7.990905,-4.922150,6.686117,-4.640637,-4.134439,2.522340,0.069567,-9.389491,-3.553075,-7.015960,-1.647732,8.732228,7.168989,0.139080,3.135962,0.629865,-6.566361,-4.401578,5.679850,8.709315,-7.716124,-2.736702,-2.486773,-3.602297,-8.648918,-7.568268,-1.200081,1.524328,-4.342169,6.004302,-6.058257,-4.004146,-3.278760,9.808724,7.554925,3.740305,5.667195,-5.120013,-5.419362,9.049313,1.360059,-1.603179,8.258927,-4.592015,-8.078706,3.396015,-9.102773,3.204773,7.040881,-5.051234,9.395188,-8.648828,4.192291,-6.494630,2.522422,-9.901433,-4.028788,-0.448923,8.931698,4.463713,3.659725,-8.722732,9.053982,-9.031401,-1.673982,1.966788,1.038305,7.131810,-5.199172,-9.303570,3.853113,1.812555,1.946229,4.974395,-4.205853,-2.384436,-0.949977,7.260970,-2.433428,-7.926951,-9.170759,3.531407,7.632358,-7.003935,-1.602393,0.894267,-2.826949,4.407197,-1.552633,-3.193731,-3.175447,-4.032832,0.339325,-6.938476,-9.790296,9.145817,-9.673377,-7.927794,2.933666,-7.623042,5.977818,8.735581,-7.456806,-6.713277,2.987635,9.632081,5.436749,-8.232120,6.385229,1.856136,2.069677,-2.807195,2.194094,7.063684,4.002579,-7.360483,3.536681,-4.649041,8.226604,1.898073,3.725832,-1.101111,-5.215743,-4.878104,4.052610,7.263128,-1.941489,-6.247010,-1.501041,-6.768361,9.314133,9.252767,-5.474511,-4.081921,-4.721167,-4.948294,-4.579483,-3.527643,-0.350038,-6.173406,-1.358221,-7.232736,2.778637,-1.022981,4.037095,-7.430267,-0.795059,9.474407,5.916336,-0.488531,3.275792,-4.558259,9.487650,2.288857,9.610233,3.285607,8.284428,-0.955794,-2.503168,0.404293,8.848376,8.779079,8.410844,-0.024464,-9.082872,-3.315627,9.815837,-8.542377,9.987432,-8.479873,9.738236,6.237119,-5.868315,-7.249545,-9.696111,-2.836307,8.718672,6.899789,-4.641911,6.998188,-4.021263,6.168699,-2.733786,-8.796049,3.813711,-0.196520,-5.226619,8.519781,6.408094,-3.389547,1.768590,5.137019,-2.235032,5.901707,-3.290691,5.330333,-4.384906,8.012682,-7.682551,7.281744], dtype = "float64")#candidate|1766|(432,)|const|float64
call_1765 = relay.TupleGetItem(func_129_call(relay.reshape(const_1766.astype('float64'), [9, 16, 3]), relay.reshape(const_1766.astype('float64'), [9, 16, 3]), ), 2)
call_1767 = relay.TupleGetItem(func_133_call(relay.reshape(const_1766.astype('float64'), [9, 16, 3]), relay.reshape(const_1766.astype('float64'), [9, 16, 3]), ), 2)
output = relay.Tuple([bop_1757,call_1765,const_1766,])
output2 = relay.Tuple([bop_1757,call_1767,const_1766,])
func_1772 = relay.Function([var_1755,var_1756,], output)
mod['func_1772'] = func_1772
mod = relay.transform.InferType()(mod)
mutated_mod['func_1772'] = func_1772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1772_call = mutated_mod.get_global_var('func_1772')
var_1774 = relay.var("var_1774", dtype = "int16", shape = (7, 9, 13))#candidate|1774|(7, 9, 13)|var|int16
var_1775 = relay.var("var_1775", dtype = "int16", shape = (7, 9, 13))#candidate|1775|(7, 9, 13)|var|int16
call_1773 = func_1772_call(var_1774,var_1775,)
output = call_1773
func_1776 = relay.Function([var_1774,var_1775,], output)
mutated_mod['func_1776'] = func_1776
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1855 = relay.var("var_1855", dtype = "int16", shape = ())#candidate|1855|()|var|int16
var_1856 = relay.var("var_1856", dtype = "int16", shape = (10, 13, 16))#candidate|1856|(10, 13, 16)|var|int16
bop_1857 = relay.less_equal(var_1855.astype('bool'), var_1856.astype('bool')) # shape=(10, 13, 16)
func_1026_call = mod.get_global_var('func_1026')
func_1031_call = mutated_mod.get_global_var('func_1031')
const_1862 = relay.const([0.593127,-8.616400,8.275249,-4.872087,8.537299,-6.112165,2.397813,-3.420859,4.971482,8.799222,-3.541835,0.903160,-5.761485,8.867185,-3.617282,4.617747,2.465694,-2.853511,6.879023,3.155182,-7.389841,-3.948296,-1.989194,-0.323644,-2.175843,-0.875347,-2.387548,-7.206583,5.722669,-5.628078,-9.756256,6.772953,-1.367456,-8.460600,-5.448888,-0.916845,4.958279,-5.711542,4.812029,6.442266,-0.395524,0.630052,2.168609,-7.670460,3.911682,5.902416,-6.731432,9.870131,-1.979760,-0.081082,-3.900777,3.534620,1.476650,0.432813,-4.669939,-5.554327,-7.541281,0.603057,1.460682,-2.614053,6.009313,4.495007,4.418380,-9.929493,-1.813653,-8.826899,1.308218,2.001668,-5.046777,-8.793948,5.879918,2.448501,-8.955790,-5.372041,-8.613349,-9.915233,-1.961389,4.134887,7.218735,9.037631,-1.089555,-9.252508,4.634083,7.651712,-5.162172,8.575285,-7.581501,7.698186,2.627663,0.960110,1.273258,2.243543,9.293122,4.489617,-9.854686,-0.975497,-1.572123,7.752742,-6.077308,0.286869,-4.094949,4.388521,-8.747135,8.636615,-3.070766,6.418717,-1.379013,4.451937,-6.126315,-7.346191,1.116081,4.757663,3.968126,8.205462,4.782275,-0.466455,7.090956,2.892080,5.602667,-6.149086,3.766514,5.117380,-9.080625,7.696109,9.404230,-7.007945,-1.554499,-8.368775,-1.387015,-7.972140,5.893611,3.841768,-3.559596,-3.994191,6.491633,9.374823,-6.712836,-6.524716,3.680234,6.822047,-0.988330,1.360832,-4.837983,-8.581520,4.663102,-6.814731,-9.441015,-2.286408,-3.045774,-9.312835,7.961774,-8.918960,-4.123453,-6.790423,-8.920323,-5.057462,3.431983,-1.265799,2.579035,-1.023281,9.373802,0.463762,-6.956766,-9.910691,-9.731786,-1.628611,-8.358828,-0.582914,-8.058034,-3.036268,-7.838783,2.071067,-2.714086,5.149115,-4.901584,-5.193562,9.904738,6.987217,3.783547,-2.653907,-3.475508,6.482510,-0.516604,1.805457,6.315236,3.037196,-6.991868,1.558688,-7.364916,5.816602,6.338921,-9.801971,2.527167,-4.795154,8.396718,9.447365,-3.438820,-2.417016,-1.359256,3.677340,4.230119,4.198304,7.736355,-3.621715,-5.568632,-0.206903,-5.540864,-3.780122,2.415298,-8.210487,2.635556,-6.801049,4.710294,-2.851268,8.779370,7.819239,8.751392,-8.526120,8.168640,-4.613429,-5.548059,0.384231,-6.944096,2.871473,9.517347,-8.087125,3.770660,-1.032845,-7.076891,-5.864885,-5.483783,-0.492508,-8.836925,-0.483484,-7.910257,8.816334,9.291817,6.320861,-3.920033,9.503452,-5.899437,8.151764,0.825173,-5.268985,-0.374241,7.523490,-0.139049,-5.221532,-1.684008,1.886944,-2.496846,-1.927148,3.060719,7.238879,-1.025273,1.260199,-2.038661,-2.849963,-5.098339,7.444710,6.030534,7.934017,6.037187,-1.091104,-8.408418,-5.196118,3.651362,3.226147,-9.720474,-2.037941,3.438134,9.645358,-4.189335,4.157723,8.416513,-1.710499,4.768384,-2.194084,6.220505,6.745438,-0.671418,-9.411432,-1.444411,8.389855,-3.516215,6.777222,8.333721,-5.516015,-6.527847,0.115607,-0.696326,-2.725647,3.433469,-3.395552,1.498768,8.901578,4.435507,3.857388,0.840474,-8.573145,2.153400,6.873676,2.502879,-0.904983,-2.912803,7.237406,3.349347,-3.523028,-8.101577,-8.278621,-6.052225,-1.089547,7.814445,9.469093,-1.477656,3.327059,9.458910,-8.992519,-8.059321,-8.511335,-0.132688,6.305629,7.914838,8.448413,1.343817,-6.881104,9.305046,6.980354,-3.186779,2.733925,7.021591,-6.525601,3.329849,8.791217,-3.178475,-9.103610,1.296144,-3.241153,-3.095879,-4.742054,0.311249,8.496666,5.680347,-6.728833,-5.644370,-3.836625,-6.596056,-3.994077,-1.222388,1.212992,-9.905050,3.422932,2.948688,-9.468430,7.546301,7.321181,4.762333,0.512176,-3.775983,0.515243,7.050295,-1.249571,-1.802132,-2.558898,-7.393923,0.111227,3.845387,-2.502145,4.647032,-5.072201,8.690845,3.523482,5.158246,-4.270368,-2.426226,-1.016051,0.861874,3.416816,0.446409,-8.571343,8.201239,-7.078974,9.079011,-6.311810,-5.392803,1.736638,-4.883041,-3.212356,-1.836763,6.218901,-6.557694,-8.446441,-0.457375,-9.894183,3.624269,5.651632,-7.273491,-5.038128,-9.478122,-3.770873,9.218526,5.348844,5.505035,9.331579,-3.231643,-8.288995,-3.397061,-5.094178,7.006387,3.064554,-6.235157,6.874579,-1.070947,-9.457455,-8.481845,5.742219,-2.663985,-5.727540,6.240560,2.710094,-8.256416,-2.247041,8.610297,-4.330646,3.455369,6.478411,-1.438671,8.764871,-1.592986,-7.774857,-6.361211,2.759397,-7.233327,-6.999928,1.530089,7.098684,-1.558408,4.017760,-7.522619,-8.978337,1.460597,3.588735,-4.726720,-3.020426,-1.396571,-2.101337,3.738063,-4.785657,2.011111,5.631160,-9.453937,-6.596293,-8.761302,-7.454153,6.739633,9.097950,7.721593,6.930447,7.067393,-7.464288,-8.463535,-4.679579,-6.740682,4.393257,-8.208042,0.280631,7.148982,9.485555,5.073033,-4.297499,-6.331323,6.233768,9.186210,3.789959,-8.988876,-8.275911,-9.442660,-6.518479,2.558367,-6.811578,-6.203483,7.099986,-3.981538,-6.710538,-3.646516,-2.420408,-9.591266,-0.871076,-5.785181,-7.507649,-5.136216,3.489811,2.256965,9.118427,2.793512,-3.833364,2.902098,9.266866,-1.845624,2.334348,2.178989,9.765502,2.076386,6.588450,-1.696275,9.619855,-2.841609,9.157309,-3.725483,1.300289,5.499041,-0.225064,5.390470,-8.784007,1.514545,-0.450492,7.183839,-8.937515,-1.844956,3.598422,8.609426,5.153602,4.716572,4.955967,8.013855,-3.870071,4.270168,-1.920967,-9.898309,-1.565942,-6.255691,-8.229110,5.266609,3.279693,-0.945421,-6.465834,7.507985,-9.485722,-9.712583,-2.521679,-4.004620,-8.197166,6.070241,-1.334490,7.987960,9.329240,7.150294,-0.260982,-3.732188,-3.660786], dtype = "float32")#candidate|1862|(550,)|const|float32
var_1863 = relay.var("var_1863", dtype = "float64", shape = (36, 36))#candidate|1863|(36, 36)|var|float64
var_1864 = relay.var("var_1864", dtype = "int16", shape = (252,))#candidate|1864|(252,)|var|int16
const_1865 = relay.const([0.762474,-1.898079,8.411324,-0.026123,8.687537,-7.928136,-3.609528,2.639163,-0.298735,9.651845,9.272615,2.183040,5.124431,7.147393,-1.228108,-6.091457,7.270743,1.881894,8.976205,-0.816134,7.309255,-2.740726,3.846396,0.098210,1.717453,4.166153,-2.305198,-3.165049,6.499465,-7.224891,6.616513,6.466326,8.927551,9.239040,-9.981661,-7.922251,-6.369123,-1.593660,-0.679749,0.145059,-7.738369,3.047470,4.231886,-0.111634,2.659553,-5.748032,-7.061371,7.933242,-1.013317,-6.096300,-1.784439,7.773855,0.026855,5.626483,7.913998,9.447229,2.187380,-1.233541,-8.663388,5.360450,-9.607921,-5.217876,9.560797,-5.799575,-9.056296,-4.410804,7.182440,-1.515226,3.063314,0.858390,-5.790966,3.980774,2.187598,7.362107,-7.636855,8.076791,-8.715486,1.587117,1.431415,-6.973308,-2.067563,4.826200,-1.503483,-2.878270,0.665621,-7.620471,-4.523814,8.368950,3.303000,-7.518124,3.585430,-8.046785,3.887372,8.105940,-2.566875,8.622533,-1.463373,-8.966829,-0.108954,5.705871,-3.866388,1.703241,6.429988,-0.586204,6.179927,-0.193369,-0.282552,6.795006,9.822947,9.690168,-3.122980,-0.242344,1.280163,5.759571,-1.064595,7.648894,-3.007108,3.712721,1.525907,-6.436113,-6.136274,2.437269,-4.205256,9.962102,9.296031,4.167451,2.954690,-5.463227,-0.322279,-3.681707,-9.098457,-8.674527,-3.774582,-4.626632,9.364037,5.975763,-6.737709,3.713813,3.058797,-1.518452,5.524637,-3.270386,2.872034,3.825455,-9.799402,-9.357798,2.713883,2.686495,7.308873,6.083186,-5.952864,-1.566571,7.252583,7.731731,-2.643051,5.569015,2.848883,-9.461898,-3.420592,5.647367,6.217554,-9.340992,-0.022911,1.555695,2.154804,-1.435544,6.009817,-4.121282,-2.268060,7.192534,2.227767,-1.356440,-4.389603,-1.025839,-3.223398,7.120545,6.590870,-2.649218,0.652705,5.878429,-3.155293,-1.412579,2.210438,-7.967438,9.195184,-4.000846,-0.770461,9.781947,-8.570922,-1.185283,4.053885,-6.331356,8.563798,-8.827311,-6.785299,5.662504,-3.488805,-8.208755,5.156417,8.330296,-8.955287,1.285405,2.840183,8.286708,-5.132483,-0.242663,3.296996,7.012637,-4.352258,6.408001,9.349433,5.960278,0.419649,6.815873,8.435503,7.628794,1.235230,-9.660564,2.809998,-1.358643,9.898209,-3.125214,6.496176,1.370083,5.077659,9.391847,-3.233718,-4.100461,-8.835684,-8.284458,1.236676,-0.441459,-6.498916,1.332488,-5.599487,-2.954248,-6.015219,8.026595,-0.664246,7.810286,2.238439,-6.315576,-3.107906,8.794006,8.658810,-7.354096,6.818280,2.371989,5.864473,-6.994710,-6.399310,-4.271506,6.558924,-4.184770,-0.230672,9.637215,-3.475667,9.045808,6.418889,-2.398644,-9.586539,9.208644,3.958843,-3.218131,0.004451,-4.312166,0.557916,-0.017358,-7.676763,-8.790858,6.453490,2.721686,9.987339,-0.941556,1.107104,4.184986,3.789027,-1.701902,5.671933,5.015335,7.317727,-3.460440,-4.727880,9.367767,-9.992613,-2.348077,4.006812,3.174510,-9.755470,8.194227,-4.527677,-6.063185,8.581481,-9.291080,0.689603,5.975382,-3.715554,8.030307,7.275599,6.548326,-3.453431,7.026539,2.138495,-6.999224,-7.080994,-7.280132,1.215944,-8.786711,6.959956,2.337946,-1.992398,9.972088,7.511286,-8.845432,7.123840,-8.757406,5.233281,2.981737,-1.073074,-0.256187,-7.007869,-8.812439,2.216542,-6.939294,9.982304,4.326345,5.967321,-9.391168,8.939785,1.377926,1.589337,-4.562230,7.510694,0.251164,-8.437039,-7.540617,-6.092547,-4.901541,9.676147,-9.819439,-8.767689,-0.617968,-9.011523,-1.202589,4.296334,-5.509856,0.191194,2.978924,9.853771,4.308422,5.601275,-3.367103,-3.870156,2.850898,1.358963,-7.277385,-6.090696,3.830908,-1.878641,-2.584696,0.903738,-6.180887,-4.509528,8.026577,-9.685813,3.044542,-5.770925,-5.770438,-1.305405,-7.590321,6.366771,9.554508,-6.542378,2.977927,2.912868,-6.041689,-3.028904,8.141937,3.066008,-7.710371,1.305041,2.450635,1.660247,-7.138136,2.297672,-6.730554,-2.689634,-3.073329,-8.284879,2.666538,-8.784126,9.716785,-7.584611,6.100886,2.081258,0.473555,6.136283,8.073908,-3.324285,-5.851321,-9.783853,2.968547,-6.673663,0.065562,4.139450], dtype = "float32")#candidate|1865|(405,)|const|float32
call_1861 = relay.TupleGetItem(func_1026_call(relay.reshape(const_1862.astype('float32'), [5, 10, 11]), relay.reshape(var_1863.astype('float64'), [1296,]), relay.reshape(var_1864.astype('int16'), [126, 2]), relay.reshape(const_1865.astype('float32'), [405,]), ), 4)
call_1866 = relay.TupleGetItem(func_1031_call(relay.reshape(const_1862.astype('float32'), [5, 10, 11]), relay.reshape(var_1863.astype('float64'), [1296,]), relay.reshape(var_1864.astype('int16'), [126, 2]), relay.reshape(const_1865.astype('float32'), [405,]), ), 4)
uop_1867 = relay.sin(var_1863.astype('float64')) # shape=(36, 36)
uop_1877 = relay.rsqrt(uop_1867.astype('float32')) # shape=(36, 36)
func_129_call = mod.get_global_var('func_129')
func_133_call = mutated_mod.get_global_var('func_133')
var_1882 = relay.var("var_1882", dtype = "float64", shape = (1, 432))#candidate|1882|(1, 432)|var|float64
call_1881 = relay.TupleGetItem(func_129_call(relay.reshape(var_1882.astype('float64'), [9, 16, 3]), relay.reshape(var_1882.astype('float64'), [9, 16, 3]), ), 0)
call_1883 = relay.TupleGetItem(func_133_call(relay.reshape(var_1882.astype('float64'), [9, 16, 3]), relay.reshape(var_1882.astype('float64'), [9, 16, 3]), ), 0)
bop_1904 = relay.bitwise_xor(uop_1867.astype('int32'), relay.reshape(uop_1877.astype('int32'), relay.shape_of(uop_1867))) # shape=(36, 36)
bop_1907 = relay.floor_mod(uop_1867.astype('float64'), relay.reshape(bop_1904.astype('float64'), relay.shape_of(uop_1867))) # shape=(36, 36)
uop_1936 = relay.acosh(bop_1904.astype('float64')) # shape=(36, 36)
uop_1938 = relay.log(uop_1936.astype('float32')) # shape=(36, 36)
bop_1944 = relay.maximum(uop_1938.astype('int16'), relay.reshape(uop_1877.astype('int16'), relay.shape_of(uop_1938))) # shape=(36, 36)
var_1951 = relay.var("var_1951", dtype = "int16", shape = (10, 13, 16))#candidate|1951|(10, 13, 16)|var|int16
bop_1952 = relay.bitwise_or(var_1856.astype('int64'), relay.reshape(var_1951.astype('int64'), relay.shape_of(var_1856))) # shape=(10, 13, 16)
var_1962 = relay.var("var_1962", dtype = "float64", shape = (36, 36))#candidate|1962|(36, 36)|var|float64
bop_1963 = relay.floor_divide(uop_1936.astype('float64'), relay.reshape(var_1962.astype('float64'), relay.shape_of(uop_1936))) # shape=(36, 36)
uop_1966 = relay.asin(uop_1938.astype('float64')) # shape=(36, 36)
func_129_call = mod.get_global_var('func_129')
func_133_call = mutated_mod.get_global_var('func_133')
call_1973 = relay.TupleGetItem(func_129_call(relay.reshape(call_1881.astype('float64'), [9, 16, 3]), relay.reshape(var_1882.astype('float64'), [9, 16, 3]), ), 1)
call_1974 = relay.TupleGetItem(func_133_call(relay.reshape(call_1881.astype('float64'), [9, 16, 3]), relay.reshape(var_1882.astype('float64'), [9, 16, 3]), ), 1)
func_152_call = mod.get_global_var('func_152')
func_154_call = mutated_mod.get_global_var('func_154')
call_1991 = func_152_call(relay.reshape(var_1864.astype('int16'), [14, 2, 9]))
call_1992 = func_152_call(relay.reshape(var_1864.astype('int16'), [14, 2, 9]))
output = relay.Tuple([bop_1857,call_1861,const_1862,var_1864,const_1865,call_1881,var_1882,bop_1907,bop_1944,bop_1952,bop_1963,uop_1966,call_1973,call_1991,])
output2 = relay.Tuple([bop_1857,call_1866,const_1862,var_1864,const_1865,call_1883,var_1882,bop_1907,bop_1944,bop_1952,bop_1963,uop_1966,call_1974,call_1992,])
func_1994 = relay.Function([var_1855,var_1856,var_1863,var_1864,var_1882,var_1951,var_1962,], output)
mod['func_1994'] = func_1994
mod = relay.transform.InferType()(mod)
mutated_mod['func_1994'] = func_1994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1994_call = mutated_mod.get_global_var('func_1994')
var_1996 = relay.var("var_1996", dtype = "int16", shape = ())#candidate|1996|()|var|int16
var_1997 = relay.var("var_1997", dtype = "int16", shape = (10, 13, 16))#candidate|1997|(10, 13, 16)|var|int16
var_1998 = relay.var("var_1998", dtype = "float64", shape = (36, 36))#candidate|1998|(36, 36)|var|float64
var_1999 = relay.var("var_1999", dtype = "int16", shape = (252,))#candidate|1999|(252,)|var|int16
var_2000 = relay.var("var_2000", dtype = "float64", shape = (1, 432))#candidate|2000|(1, 432)|var|float64
var_2001 = relay.var("var_2001", dtype = "int16", shape = (10, 13, 16))#candidate|2001|(10, 13, 16)|var|int16
var_2002 = relay.var("var_2002", dtype = "float64", shape = (36, 36))#candidate|2002|(36, 36)|var|float64
call_1995 = func_1994_call(var_1996,var_1997,var_1998,var_1999,var_2000,var_2001,var_2002,)
output = call_1995
func_2003 = relay.Function([var_1996,var_1997,var_1998,var_1999,var_2000,var_2001,var_2002,], output)
mutated_mod['func_2003'] = func_2003
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2514 = relay.const([[[-3.651388,-2.335239,-6.415733,-1.628610,1.578243,-9.242752],[-7.228848,-6.508838,4.495857,1.745643,-5.343830,-3.657233],[7.044828,-1.119261,-5.265300,6.853745,-2.730921,2.485770],[-6.032251,-9.169246,-8.140728,0.694547,1.356560,5.077687],[-3.013850,-8.104310,-0.039849,3.051225,3.918699,-6.986185],[6.822164,-5.538767,6.873818,2.306074,5.653073,5.527150],[-4.467828,-5.150339,7.040388,-7.805096,-8.330412,-1.908036],[-9.332640,0.793924,9.681811,7.503714,4.393102,-5.737315],[6.454605,-5.741848,-5.662159,-5.650333,-2.834968,-9.198766],[-3.153840,4.733337,2.484361,-0.116563,-3.807295,8.944134],[4.669323,-1.342779,-8.105441,1.596547,-7.634380,-9.007992],[5.962139,2.980020,-3.182687,9.198309,3.870666,9.101818],[-9.374029,-4.001078,1.540927,-9.031588,-2.971418,3.074707],[-3.697983,-5.454584,-9.941940,3.994320,4.011290,-2.492986],[-6.121765,-3.458329,-2.473964,2.735775,1.316770,9.955061],[0.152025,2.663343,0.342672,5.519356,6.466024,-2.679001]],[[-3.470723,-4.619880,1.837065,1.047741,-3.424651,2.980410],[-6.869969,-0.982704,-8.460001,-3.692582,0.363574,1.157212],[5.110170,-4.470993,-1.891498,-2.301603,-0.993009,-4.991747],[4.370535,-6.064684,7.557118,0.788069,-8.203495,-2.987759],[2.332552,-5.252960,-7.650925,9.501477,-4.049838,5.384432],[1.252310,-6.013806,-3.377215,2.437775,-2.484620,3.927645],[5.161236,2.932103,-5.179073,-0.322090,9.784046,0.310888],[-1.819461,4.792523,-8.091016,6.052306,-5.718609,-5.319309],[-7.674609,2.187441,7.553206,-7.887445,1.352546,-4.326304],[7.748842,7.630547,8.786411,7.404191,-1.398157,2.377222],[5.637744,-7.811012,-2.738778,-6.226819,-7.822741,5.063792],[-4.134467,-4.764965,-8.611241,-7.195141,0.438762,-8.888785],[-4.499436,-4.726741,-0.695425,6.701247,-3.031409,9.162746],[-5.282517,6.435080,1.669044,-0.360888,-4.745986,7.400776],[3.766788,9.082751,-4.278279,-8.642780,4.350962,3.859096],[-6.059695,0.309568,-4.044611,1.638495,-7.454243,3.672065]],[[4.996279,6.434884,-3.060456,-0.659793,-5.455419,-2.629086],[7.788335,1.497781,5.305655,-7.072749,-1.229847,-4.808893],[2.303832,1.867752,-1.493661,6.965539,8.806511,2.112337],[-2.399632,3.032923,3.817046,0.285556,-6.295190,6.989761],[1.275702,7.043643,4.889971,-4.931104,6.847410,-1.929109],[-2.732994,-3.648128,5.508726,9.020956,0.845273,-3.705789],[-1.497693,-2.670924,0.343365,-2.773292,0.230887,-4.580626],[8.412047,2.357093,-5.951302,-3.474601,-7.465497,-7.179684],[-3.283656,2.432391,0.292882,2.192351,7.772870,-5.637549],[5.234445,1.532447,1.087750,-3.305898,-1.050833,5.163487],[7.696472,9.031632,-9.777932,0.135974,1.903170,5.917219],[1.551632,-1.459334,-2.104270,9.027461,9.415898,-9.894220],[-3.237844,8.950495,9.516449,8.668263,-4.176617,-9.542627],[7.407124,9.875752,-4.368114,4.759751,5.949563,-0.856579],[-1.138050,-6.149519,-6.667094,-5.778053,2.866895,2.617444],[7.598401,2.520807,9.038896,-9.605850,-8.947562,7.587773]],[[-9.773406,-0.780445,-5.824464,0.077115,-5.863707,-6.846194],[3.430372,3.004822,-9.122562,0.355021,9.825837,7.965871],[-6.838796,5.717813,0.235893,4.436607,5.632101,-8.416751],[-8.482796,7.111612,1.247166,0.963225,-4.152850,0.784082],[9.104689,-0.929605,6.397840,9.149332,-5.210268,-6.890768],[5.532894,5.524670,0.724546,-7.276292,-9.808003,-2.686281],[3.528589,-7.754879,-2.908243,-6.143600,-6.120718,4.998419],[-8.202191,8.569014,7.453281,-9.302533,0.070198,-1.721247],[6.221760,-5.208244,-9.633050,6.568034,-2.738654,6.671123],[5.147974,-0.751390,9.376961,-1.216649,-7.191672,-8.726474],[8.399232,-7.045934,-5.909024,-4.802635,6.729105,3.377365],[8.299790,0.770511,-0.643279,1.918959,-3.141005,7.152612],[4.742240,1.637469,1.207975,9.962295,-0.853680,2.614367],[-1.881979,6.300256,-2.192469,2.667423,1.661350,5.737083],[-1.348228,-7.053575,-8.133626,-8.651214,8.998064,4.849339],[9.141885,5.559029,-6.308061,-3.613699,-5.045970,-7.119010]],[[1.850897,3.551956,-6.740040,-6.451698,2.410909,3.819699],[2.403546,5.705367,4.001094,0.515919,1.272397,1.829118],[-7.405648,7.478888,8.649799,2.029408,4.589037,8.118246],[-6.883760,-9.142638,-1.773461,9.828136,3.842995,-7.132943],[-3.616011,8.279251,5.117244,9.636767,1.979095,-5.800634],[0.424880,2.012721,-6.828861,-5.410265,-6.758941,-3.400255],[0.979073,-9.137705,-4.646836,2.383933,1.132766,9.137291],[8.621962,-9.576343,1.654152,1.172375,-2.981415,6.127979],[-6.626637,9.090326,5.092676,4.827735,-9.713505,5.807287],[6.102611,5.291359,-2.399963,6.441346,2.616877,-5.889089],[-7.140106,7.765040,-8.702091,-5.457048,1.928158,7.711642],[4.336443,9.175695,3.414818,8.525323,0.604934,2.879975],[8.300590,-6.186302,-5.504181,2.557850,-0.064433,8.487921],[2.958511,4.430564,-2.243639,4.500847,-8.664262,9.448982],[-8.249939,-9.047290,2.202886,5.075969,-5.353700,4.308245],[-6.878853,6.480129,-8.158144,2.916352,-0.498411,-7.739417]],[[8.894341,9.853954,-6.867749,3.775579,8.468755,-8.151600],[1.413151,9.381961,9.837671,-3.334542,7.187033,5.328805],[6.876517,1.849475,2.831942,-4.929090,-8.651616,-6.089018],[-4.606303,3.961685,6.806182,-7.202378,5.281547,-1.341302],[-8.558329,-4.808692,6.470894,1.783377,-9.374330,-0.214631],[-1.974558,-7.858981,-7.241202,4.233577,6.811324,-7.185964],[1.491589,7.061382,-6.867062,1.207590,2.149592,-9.497313],[3.657789,3.524035,4.577602,-6.506186,-3.682428,-0.898531],[7.564297,2.627264,-5.248217,-1.537874,-4.943528,-3.816872],[4.148837,0.366519,3.444047,9.891177,-2.246548,-4.280112],[1.035144,4.455025,7.562137,-3.310684,-8.851772,8.749766],[-0.523736,-1.077626,-8.158090,2.925146,-3.395562,-0.873701],[7.155367,9.569263,-8.425111,1.021427,-9.877586,2.424019],[-8.601255,-2.230242,0.875977,9.543966,0.374878,-0.310859],[-5.406065,-2.040151,-2.650725,-0.547374,-0.631306,6.082037],[9.984324,-4.187127,-8.900576,2.735988,-7.797536,3.137385]]], dtype = "float64")#candidate|2514|(6, 16, 6)|const|float64
uop_2515 = relay.acosh(const_2514.astype('float64')) # shape=(6, 16, 6)
uop_2519 = relay.exp(const_2514.astype('float64')) # shape=(6, 16, 6)
func_1772_call = mod.get_global_var('func_1772')
func_1776_call = mutated_mod.get_global_var('func_1776')
var_2522 = relay.var("var_2522", dtype = "int16", shape = (819,))#candidate|2522|(819,)|var|int16
call_2521 = relay.TupleGetItem(func_1772_call(relay.reshape(var_2522.astype('int16'), [7, 9, 13]), relay.reshape(var_2522.astype('int16'), [7, 9, 13]), ), 0)
call_2523 = relay.TupleGetItem(func_1776_call(relay.reshape(var_2522.astype('int16'), [7, 9, 13]), relay.reshape(var_2522.astype('int16'), [7, 9, 13]), ), 0)
output = relay.Tuple([uop_2515,uop_2519,call_2521,var_2522,])
output2 = relay.Tuple([uop_2515,uop_2519,call_2523,var_2522,])
func_2529 = relay.Function([var_2522,], output)
mod['func_2529'] = func_2529
mod = relay.transform.InferType()(mod)
var_2530 = relay.var("var_2530", dtype = "int16", shape = (819,))#candidate|2530|(819,)|var|int16
output = func_2529(var_2530)
func_2531 = relay.Function([var_2530], output)
mutated_mod['func_2531'] = func_2531
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2572 = relay.var("var_2572", dtype = "float32", shape = (1, 6, 11))#candidate|2572|(1, 6, 11)|var|float32
uop_2573 = relay.tan(var_2572.astype('float32')) # shape=(1, 6, 11)
bop_2575 = relay.multiply(var_2572.astype('uint16'), relay.reshape(uop_2573.astype('uint16'), relay.shape_of(var_2572))) # shape=(1, 6, 11)
uop_2580 = relay.atanh(uop_2573.astype('float64')) # shape=(1, 6, 11)
output = relay.Tuple([bop_2575,uop_2580,])
output2 = relay.Tuple([bop_2575,uop_2580,])
func_2596 = relay.Function([var_2572,], output)
mod['func_2596'] = func_2596
mod = relay.transform.InferType()(mod)
var_2597 = relay.var("var_2597", dtype = "float32", shape = (1, 6, 11))#candidate|2597|(1, 6, 11)|var|float32
output = func_2596(var_2597)
func_2598 = relay.Function([var_2597], output)
mutated_mod['func_2598'] = func_2598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2643 = relay.var("var_2643", dtype = "int16", shape = (10, 11, 6))#candidate|2643|(10, 11, 6)|var|int16
var_2644 = relay.var("var_2644", dtype = "int16", shape = (10, 11, 6))#candidate|2644|(10, 11, 6)|var|int16
bop_2645 = relay.bitwise_and(var_2643.astype('int16'), relay.reshape(var_2644.astype('int16'), relay.shape_of(var_2643))) # shape=(10, 11, 6)
uop_2664 = relay.asin(var_2644.astype('float32')) # shape=(10, 11, 6)
const_2666 = relay.const([[[6,4,4,5,-9,-6],[-9,-2,8,6,5,-8],[-3,2,8,3,-1,6],[-4,9,-9,6,9,6],[10,-3,-10,-3,-2,8],[-4,6,8,3,2,5],[-8,1,9,-5,1,-3],[-1,-4,1,4,5,-3],[1,4,9,-7,10,-4],[-7,-9,-9,3,-7,4],[1,5,8,-8,7,4]],[[-3,3,-9,4,8,-8],[4,-10,8,-2,1,-4],[7,-10,6,-10,-5,4],[-2,1,10,10,1,-8],[5,8,7,-7,-4,1],[-2,-10,-6,10,1,-1],[-3,8,2,-4,7,-2],[-2,1,7,7,-2,6],[-1,7,10,-4,8,6],[9,-4,-2,1,5,-1],[3,-10,6,5,2,1]],[[10,6,9,-8,2,5],[10,9,7,8,1,-4],[-5,4,1,-1,3,8],[9,-2,-2,8,-10,-7],[-8,-6,-6,6,9,1],[7,10,-1,-4,8,5],[3,-2,-10,-10,6,5],[-8,5,1,7,2,-10],[10,5,-1,6,4,7],[-8,2,4,-8,-10,-2],[-1,-1,-8,5,-6,-4]],[[1,-1,9,-10,-6,1],[-2,6,3,5,7,-4],[8,3,-10,-2,-8,-7],[-4,5,1,-2,6,7],[6,-1,7,-7,5,-2],[8,5,9,-4,10,5],[-5,6,-6,1,6,-4],[9,9,-3,8,-7,9],[6,-10,-1,10,1,1],[1,-9,6,-10,-9,1],[-2,-5,-4,6,6,-8]],[[9,6,8,-7,-9,-5],[-2,-2,-8,2,3,-8],[2,9,-9,6,9,-10],[-9,-5,5,-7,-7,-7],[3,-4,9,-3,7,10],[1,6,9,-6,-4,1],[8,-8,7,9,-7,4],[6,-10,3,1,-7,5],[-2,8,-9,7,7,4],[1,1,8,-7,-7,7],[6,-4,-4,10,-8,-4]],[[-7,8,-4,-5,-8,4],[-6,-10,7,-2,7,5],[5,-9,-4,-1,4,5],[2,5,-10,5,2,-8],[-3,2,-6,-1,-4,3],[-3,-1,4,7,7,5],[2,5,7,3,-4,2],[-3,1,3,-7,10,5],[5,-9,5,2,-6,-3],[10,5,-2,6,-7,-3],[10,-9,10,-4,6,-9]],[[-1,-10,10,2,-9,6],[1,7,8,10,-3,-10],[-5,-10,-10,-3,4,10],[7,3,-6,-9,10,6],[-7,-6,9,5,-10,6],[6,1,-5,1,2,9],[-5,-6,6,1,-2,6],[-2,-5,6,4,-3,9],[7,-1,5,8,10,-5],[10,10,4,5,-6,10],[-4,-5,1,-4,-5,-9]],[[4,-2,-1,-9,-4,5],[6,6,10,8,-2,8],[7,4,-6,-2,-8,5],[3,2,-6,5,-5,-7],[-9,-9,-6,-6,1,-4],[-1,-9,3,10,-1,-3],[-9,10,3,1,10,5],[-6,-10,-9,6,-1,10],[-1,1,-5,1,-5,10],[-6,-2,-8,4,-5,1],[-9,7,3,5,10,-8]],[[-2,-8,7,7,-6,2],[3,10,-2,-4,-9,2],[-10,6,5,-2,-10,-4],[-8,-2,7,10,4,7],[-2,-9,-6,5,-8,-4],[6,9,-8,-4,-1,3],[-2,7,-5,-2,-9,-10],[-1,-9,-5,-3,-2,-6],[5,-7,6,-4,4,-4],[8,-4,6,2,-8,-6],[5,-3,-2,-7,10,-3]],[[5,5,-1,-8,5,-5],[-5,-8,-7,7,4,9],[10,-2,4,-7,3,10],[-2,-2,-10,10,4,-10],[10,5,7,9,1,-6],[-7,4,4,3,-2,-5],[-3,-8,10,-10,-5,-6],[8,-8,9,4,8,7],[3,9,6,-6,8,-8],[1,-9,-2,7,-2,-8],[2,6,-1,-3,2,10]]], dtype = "int16")#candidate|2666|(10, 11, 6)|const|int16
bop_2667 = relay.less_equal(bop_2645.astype('bool'), relay.reshape(const_2666.astype('bool'), relay.shape_of(bop_2645))) # shape=(10, 11, 6)
func_1026_call = mod.get_global_var('func_1026')
func_1031_call = mutated_mod.get_global_var('func_1031')
var_2691 = relay.var("var_2691", dtype = "float32", shape = (1, 550))#candidate|2691|(1, 550)|var|float32
var_2692 = relay.var("var_2692", dtype = "float64", shape = (1296,))#candidate|2692|(1296,)|var|float64
const_2693 = relay.const([1,-10,7,1,-7,-1,-5,-10,-7,9,7,7,-5,-7,7,10,-8,-8,-2,-9,8,-9,4,-3,2,-8,10,-4,2,-3,1,-10,-6,4,-9,-9,4,-1,-7,-9,6,7,3,-10,5,8,7,-5,-6,10,-3,-4,7,7,-2,1,4,-4,1,3,-7,2,-9,-6,-7,4,-5,8,6,6,-2,7,-6,4,-5,5,-10,-6,5,7,8,3,2,7,-9,-7,9,8,5,5,10,1,-9,2,9,-8,-3,-4,4,-4,-4,3,-2,-1,4,-6,7,8,-6,-10,2,-6,10,-9,-1,9,-3,-3,3,4,9,4,9,2,2,2,1,-10,-8,-7,-3,8,-1,1,-4,-3,-4,1,-9,-9,-4,-7,-1,-7,-6,-9,3,5,8,-9,-10,7,9,5,2,1,9,10,4,8,-4,-1,6,-2,-1,-9,1,-4,8,10,-5,4,10,-3,-5,-8,-8,7,-6,-10,-10,-7,7,-3,1,2,6,-2,-4,-3,-6,8,-2,7,4,5,6,-6,3,7,5,-4,7,-9,10,10,5,-9,-4,4,-2,3,9,1,1,8,7,-8,7,-7,-1,3,6,-4,-6,8,5,8,-3,8,6,9,-9,8,-6,4,-4,7,9,-8,-8,-5,-10,-9,-1,-4,-4,-10,1,10,5,-7], dtype = "int16")#candidate|2693|(252,)|const|int16
const_2694 = relay.const([-3.755731,3.921935,8.024717,-6.002950,-8.045421,-8.667756,5.719345,-5.571056,-5.284813,-5.903876,4.978634,-7.771790,7.158093,8.889911,9.814184,-1.409779,7.182927,-4.862472,9.865913,-3.734879,5.576465,1.903780,6.269607,-5.316022,8.096848,6.438190,-1.921901,6.279465,-7.013611,-8.084597,-7.654638,7.097478,-8.970597,-9.638764,-5.215013,-0.138700,-7.000566,-9.799055,9.429717,0.087890,8.115883,-3.196471,-2.500159,8.826588,-0.532371,-7.220871,-4.988758,-1.891341,4.495181,-6.085164,-4.868747,0.282474,4.825788,-7.390336,-1.652226,9.083799,-4.847005,3.031400,-9.502413,1.610086,4.262825,2.905280,6.349441,-7.171994,-9.569670,5.049054,4.820434,1.462397,-3.678852,-1.575370,3.808428,4.944608,6.762526,-0.786041,7.842830,-6.071833,0.615939,7.347807,-1.502807,2.528148,-0.494880,9.961360,3.998145,-1.928832,-6.661556,-9.032798,2.957517,5.144216,4.564952,-5.022204,6.337266,2.205992,-8.060673,2.931226,-1.534180,7.957947,8.500037,2.480023,-4.962056,6.653851,-8.590590,-8.530242,1.804618,-6.653489,-0.454652,5.990379,1.064280,-2.918194,8.069555,-2.063835,1.809979,7.171289,-7.116320,9.990973,-1.211556,7.274983,4.642661,-6.240859,8.724633,4.166177,5.902959,8.571395,1.300613,-7.659298,-5.167405,-2.211778,9.655885,-5.450791,-6.238687,-6.223778,-1.352652,3.240549,4.780704,-2.758228,-4.797280,-1.475692,6.081000,5.515612,-4.779823,3.085597,-9.127891,-7.829609,8.034869,-3.586022,-0.734267,8.505167,-2.040829,-8.601226,-8.202988,7.721085,-2.821741,6.366386,3.636311,-7.606343,-2.361197,-2.151374,-3.305506,-6.745290,-2.512657,2.285437,5.041042,1.827888,-3.711261,-3.747018,5.061991,9.731818,5.504168,6.005112,8.650066,-5.348446,4.177542,5.998032,8.863704,-2.069503,-1.520552,7.506668,-2.490942,5.487218,-9.547761,0.901579,8.999716,-4.806994,2.247590,-1.094681,8.640285,7.467203,8.290529,-4.963060,-3.645813,-9.817080,2.171770,7.008732,7.334784,-5.118984,-6.805398,5.426629,-4.363351,-5.359215,5.393614,7.039807,-2.852879,5.880852,2.735705,-2.169096,-8.529385,-3.411504,-4.272854,0.561320,-8.589279,-2.507809,-3.514487,5.498449,3.312554,-8.848978,-6.304713,4.842149,-2.594739,-7.020448,8.688820,-0.310737,-4.016796,0.575441,-7.480624,-5.360755,-6.444711,4.540910,-9.226236,1.860236,-2.708959,-5.100528,0.347846,0.835662,-1.394013,4.828185,5.425528,-7.473741,-8.465983,-4.231604,-6.456273,-6.707802,4.615621,5.540354,-6.306967,0.577277,2.681465,4.172169,-0.253754,-7.364837,-5.363441,-9.162164,5.723166,6.873507,-5.759061,-4.921750,-3.422373,4.646020,-0.488320,3.171857,9.585064,-7.073005,-3.502671,-8.578130,-3.322850,-9.603778,-1.281359,-6.515077,3.364588,-1.109169,-6.483374,-8.661134,1.897155,-1.879197,6.236043,-9.346014,3.268006,0.876848,-7.375407,-0.858042,-2.505584,9.660774,2.583321,0.958493,-6.387852,-3.071170,-0.153765,7.236527,-5.888516,-3.919187,-7.399898,-9.350484,3.942786,3.965402,9.734556,-3.102337,-0.681626,7.083764,-1.269642,-9.954255,-7.113494,9.774373,-9.943343,-5.609408,-2.560124,-7.931772,2.239531,-5.765080,-3.742910,-2.599718,6.433182,0.392761,-8.369956,0.505508,2.652032,3.322419,-9.105499,5.272877,-5.208696,3.564465,-6.387054,4.100354,0.967431,-1.611642,5.167729,1.606130,6.793072,9.450943,6.650868,-5.710944,-2.372728,-6.662201,-2.473898,9.974173,4.937895,-5.277849,-0.806122,7.946505,9.482452,8.338994,-4.242865,-1.463946,-9.241912,-2.829907,-4.379986,-6.028285,-6.929583,-2.155779,-5.953554,8.152310,-7.349827,5.035943,5.242476,-5.653311,-7.966852,-4.275524,0.133401,3.366072,-0.783451,2.269755,-9.996862,0.387373,9.496836,-9.083731,-6.673998,2.166760,6.434161,3.696827,-3.191579,8.887753,-4.839054,2.753236,-2.024286,6.552151,-2.134258,-0.644100,-2.106202,-9.631657,0.176595,-7.779606,-9.492953,-9.925646,-7.061795,7.020924,-1.747422,-9.172180,-9.446559,-2.330705,-9.284723,1.930547,-1.419097,8.508035,5.595849,-8.582825,-3.932578,-4.145401,2.237606,-6.288381,4.542802,-9.106618,7.538964,-4.966064,-7.610444,-2.963416,-0.734403,-9.343516,2.483283], dtype = "float32")#candidate|2694|(405,)|const|float32
call_2690 = relay.TupleGetItem(func_1026_call(relay.reshape(var_2691.astype('float32'), [5, 10, 11]), relay.reshape(var_2692.astype('float64'), [1296,]), relay.reshape(const_2693.astype('int16'), [126, 2]), relay.reshape(const_2694.astype('float32'), [405,]), ), 2)
call_2695 = relay.TupleGetItem(func_1031_call(relay.reshape(var_2691.astype('float32'), [5, 10, 11]), relay.reshape(var_2692.astype('float64'), [1296,]), relay.reshape(const_2693.astype('int16'), [126, 2]), relay.reshape(const_2694.astype('float32'), [405,]), ), 2)
func_1610_call = mod.get_global_var('func_1610')
func_1614_call = mutated_mod.get_global_var('func_1614')
var_2706 = relay.var("var_2706", dtype = "float64", shape = (440,))#candidate|2706|(440,)|var|float64
const_2707 = relay.const([[2.467747,8.253210,-7.595484,0.702471],[5.163640,8.129659,9.090306,8.706796],[-8.416018,-4.440864,-6.968081,9.750909],[7.879737,-6.843477,6.894829,2.778189],[3.191703,-7.329041,-2.841470,-7.041903],[-1.548148,-2.265946,-7.263563,2.551984],[-9.872659,6.318837,-6.821885,1.882031],[-3.847645,1.837843,4.246544,-5.483159],[5.110490,4.298863,-0.505631,0.402345],[0.850241,8.682565,-1.941156,-6.695809],[-3.466117,0.789917,-5.562781,-1.140170],[-8.563846,8.971932,-1.551715,-8.355066],[-4.478992,1.574365,-3.283544,3.847428],[9.863924,4.620325,5.555139,-8.697744],[-6.760625,-4.870209,-5.056395,4.538641],[-5.421114,3.292488,-5.076383,-7.195303],[9.547075,8.264260,-6.395247,2.061162],[6.829853,2.282900,7.035124,-5.096935],[8.121183,-8.309052,7.165202,-8.391119],[-9.350882,-3.940976,-5.040236,7.286471],[3.963063,9.983623,3.594757,2.970625],[4.033116,3.337155,-9.418569,-2.124908],[-4.464678,-9.374002,-4.969877,9.154422],[-9.663403,0.406219,-1.932431,-4.689403],[-9.021074,-3.001049,-6.636605,-2.022596],[-1.221250,-9.542581,-6.530382,4.982834],[-7.324477,-3.914432,-4.360614,0.844350],[-5.684138,4.227469,-4.974183,-0.469615],[0.320817,-4.033608,-3.581312,-9.526480],[7.034203,4.382893,7.595278,-8.857632],[-7.912738,1.423504,4.585152,9.578839],[5.561039,-9.189321,-0.891694,-7.290479],[8.499705,-5.188092,-9.493439,5.429590],[5.999946,4.474248,1.590643,-6.846567],[-3.803470,-5.110532,0.274516,5.012041],[9.412343,-1.782885,-7.164127,8.067106],[9.901833,6.257719,-6.843141,5.620611],[-1.205481,8.150889,1.121678,8.668303],[0.826374,4.784245,-3.971919,0.314430],[-6.287409,9.091551,7.855262,0.605018],[-2.012286,-9.751189,7.428664,5.810536],[-0.242478,3.115515,-3.498744,7.864574],[-9.118433,-1.830859,-9.491840,-7.575476],[2.000380,5.475695,2.914531,-1.344324],[-8.691737,-6.414690,-3.078788,0.212518],[-3.995582,-6.378633,7.542848,-7.708905],[-5.564271,-3.686525,9.927905,-1.001808],[4.782128,6.044848,-5.120122,-0.450590],[-1.348218,-1.232827,-7.479217,8.908774]], dtype = "float64")#candidate|2707|(49, 4)|const|float64
var_2708 = relay.var("var_2708", dtype = "float64", shape = (432,))#candidate|2708|(432,)|var|float64
call_2705 = relay.TupleGetItem(func_1610_call(relay.reshape(var_2706.astype('float64'), [8, 5, 11]), relay.reshape(const_2707.astype('float64'), [1, 196]), relay.reshape(var_2708.astype('float64'), [432,]), ), 1)
call_2709 = relay.TupleGetItem(func_1614_call(relay.reshape(var_2706.astype('float64'), [8, 5, 11]), relay.reshape(const_2707.astype('float64'), [1, 196]), relay.reshape(var_2708.astype('float64'), [432,]), ), 1)
bop_2711 = relay.bitwise_xor(uop_2664.astype('uint64'), relay.reshape(bop_2667.astype('uint64'), relay.shape_of(uop_2664))) # shape=(10, 11, 6)
bop_2717 = relay.floor_divide(bop_2711.astype('float32'), relay.reshape(uop_2664.astype('float32'), relay.shape_of(bop_2711))) # shape=(10, 11, 6)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
call_2721 = func_817_call(relay.reshape(const_2694.astype('float32'), [15, 3, 9]))
call_2722 = func_817_call(relay.reshape(const_2694.astype('float32'), [15, 3, 9]))
func_874_call = mod.get_global_var('func_874')
func_878_call = mutated_mod.get_global_var('func_878')
call_2726 = relay.TupleGetItem(func_874_call(relay.reshape(var_2692.astype('float64'), [12, 9, 12]), relay.reshape(call_2690.astype('float32'), [1040,]), relay.reshape(const_2693.astype('int16'), [252,]), ), 2)
call_2727 = relay.TupleGetItem(func_878_call(relay.reshape(var_2692.astype('float64'), [12, 9, 12]), relay.reshape(call_2690.astype('float32'), [1040,]), relay.reshape(const_2693.astype('int16'), [252,]), ), 2)
func_152_call = mod.get_global_var('func_152')
func_154_call = mutated_mod.get_global_var('func_154')
call_2731 = func_152_call(relay.reshape(const_2693.astype('int16'), [14, 2, 9]))
call_2732 = func_152_call(relay.reshape(const_2693.astype('int16'), [14, 2, 9]))
output = relay.Tuple([call_2690,var_2691,var_2692,const_2693,const_2694,call_2705,var_2706,const_2707,var_2708,bop_2717,call_2721,call_2726,call_2731,])
output2 = relay.Tuple([call_2695,var_2691,var_2692,const_2693,const_2694,call_2709,var_2706,const_2707,var_2708,bop_2717,call_2722,call_2727,call_2732,])
func_2753 = relay.Function([var_2643,var_2644,var_2691,var_2692,var_2706,var_2708,], output)
mod['func_2753'] = func_2753
mod = relay.transform.InferType()(mod)
var_2754 = relay.var("var_2754", dtype = "int16", shape = (10, 11, 6))#candidate|2754|(10, 11, 6)|var|int16
var_2755 = relay.var("var_2755", dtype = "int16", shape = (10, 11, 6))#candidate|2755|(10, 11, 6)|var|int16
var_2756 = relay.var("var_2756", dtype = "float32", shape = (1, 550))#candidate|2756|(1, 550)|var|float32
var_2757 = relay.var("var_2757", dtype = "float64", shape = (1296,))#candidate|2757|(1296,)|var|float64
var_2758 = relay.var("var_2758", dtype = "float64", shape = (440,))#candidate|2758|(440,)|var|float64
var_2759 = relay.var("var_2759", dtype = "float64", shape = (432,))#candidate|2759|(432,)|var|float64
output = func_2753(var_2754,var_2755,var_2756,var_2757,var_2758,var_2759,)
func_2760 = relay.Function([var_2754,var_2755,var_2756,var_2757,var_2758,var_2759,], output)
mutated_mod['func_2760'] = func_2760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3060 = relay.var("var_3060", dtype = "bool", shape = ())#candidate|3060|()|var|bool
var_3061 = relay.var("var_3061", dtype = "bool", shape = (10, 4, 13))#candidate|3061|(10, 4, 13)|var|bool
bop_3062 = relay.logical_or(var_3060.astype('bool'), var_3061.astype('bool')) # shape=(10, 4, 13)
uop_3068 = relay.atanh(bop_3062.astype('float32')) # shape=(10, 4, 13)
func_513_call = mod.get_global_var('func_513')
func_515_call = mutated_mod.get_global_var('func_515')
const_3084 = relay.const([4.364397,-7.589114,1.399007,-0.321495,-5.895645,5.681578,8.525796,-7.939367,9.358624,8.346337,4.015645,0.357948,2.053502,-6.742600,-7.289420,6.124739,-4.222852,6.792743,4.234010,-9.303359,8.491168,-2.593125,1.927192,6.225429,6.945751,-3.854035,2.477949,-0.268416,-9.058292,1.552862,0.013719,-4.862422,-1.914041,6.849427,2.031633,-8.090640,4.370160,9.860219,9.551824,-1.386909,8.847120,-6.914402,-1.906702,7.017432,7.891177,-3.663322,5.847658,-7.944344,-9.458891,5.483619,-3.544424,-5.213045,4.856478,-9.618056,1.110313,0.303682,-1.214468,6.048334,-8.039077,7.456939,3.249090,-7.752332,-2.906425,2.661484,9.602339,2.650523,-5.468191,6.161900,4.510508,-4.647296,-9.139200,-7.804184,6.327721,-1.617836,-0.112372,0.478443,0.952610,9.999004,1.742097,-8.236707,6.018907,-4.000096,8.252919,0.539851,9.116207,8.140943,1.330844,-7.113091,7.571077,1.941304,-3.763020,-0.789357,-4.484770,-3.039222,-0.518875,-4.921016,-5.406310,5.769246,3.666869,-8.917905,-5.559942,-3.729595,3.251596,5.616303,7.212127,2.173765,2.803440,0.188989,6.642359,6.660337,-0.442359,5.373162,-2.748364,3.376223,-4.313440,0.848783,1.582254,-8.919113,-0.773681,-6.661577,-3.265597,-4.638420,0.138954,-9.270438,8.706791,-7.327193,3.630602,-9.168010,-6.513885,6.872633,9.112986,8.577658,6.612276,-7.329330,2.467462,8.928647,-2.668909,-4.890454,-5.938379,-9.261439,-1.609763,5.879521,-0.598602,-2.438966,1.828139,3.605418,-1.431989,-6.677132,1.928126,2.555966,8.796227,-9.365225,-6.004537,8.308007,1.269913,-3.979723,-5.105590,-1.176672,4.602955,6.840323,-7.674422,-1.781416,3.006604,-5.334748,1.387718,-9.207348,4.716127,-5.855375,0.218125,-0.332865,5.844160,-5.552513,-1.938694,-4.558907,6.368070,3.501504,4.505823,-3.202795,-7.073302,0.996485], dtype = "float64")#candidate|3084|(180,)|const|float64
call_3083 = relay.TupleGetItem(func_513_call(relay.reshape(const_3084.astype('float64'), [10, 3, 6])), 0)
call_3085 = relay.TupleGetItem(func_515_call(relay.reshape(const_3084.astype('float64'), [10, 3, 6])), 0)
uop_3093 = relay.log10(uop_3068.astype('float64')) # shape=(10, 4, 13)
output = relay.Tuple([call_3083,const_3084,uop_3093,])
output2 = relay.Tuple([call_3085,const_3084,uop_3093,])
func_3099 = relay.Function([var_3060,var_3061,], output)
mod['func_3099'] = func_3099
mod = relay.transform.InferType()(mod)
mutated_mod['func_3099'] = func_3099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mutated_mod.get_global_var('func_3099')
var_3101 = relay.var("var_3101", dtype = "bool", shape = ())#candidate|3101|()|var|bool
var_3102 = relay.var("var_3102", dtype = "bool", shape = (10, 4, 13))#candidate|3102|(10, 4, 13)|var|bool
call_3100 = func_3099_call(var_3101,var_3102,)
output = call_3100
func_3103 = relay.Function([var_3101,var_3102,], output)
mutated_mod['func_3103'] = func_3103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3334 = relay.var("var_3334", dtype = "int32", shape = (3, 4, 4))#candidate|3334|(3, 4, 4)|var|int32
var_3335 = relay.var("var_3335", dtype = "int32", shape = (3, 4, 4))#candidate|3335|(3, 4, 4)|var|int32
bop_3336 = relay.less(var_3334.astype('bool'), relay.reshape(var_3335.astype('bool'), relay.shape_of(var_3334))) # shape=(3, 4, 4)
output = bop_3336
output2 = bop_3336
func_3339 = relay.Function([var_3334,var_3335,], output)
mod['func_3339'] = func_3339
mod = relay.transform.InferType()(mod)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mutated_mod.get_global_var('func_3339')
var_3341 = relay.var("var_3341", dtype = "int32", shape = (3, 4, 4))#candidate|3341|(3, 4, 4)|var|int32
var_3342 = relay.var("var_3342", dtype = "int32", shape = (3, 4, 4))#candidate|3342|(3, 4, 4)|var|int32
call_3340 = func_3339_call(var_3341,var_3342,)
output = call_3340
func_3343 = relay.Function([var_3341,var_3342,], output)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3545 = relay.var("var_3545", dtype = "uint16", shape = (7, 13, 8))#candidate|3545|(7, 13, 8)|var|uint16
var_3546 = relay.var("var_3546", dtype = "uint16", shape = (7, 13, 8))#candidate|3546|(7, 13, 8)|var|uint16
bop_3547 = relay.multiply(var_3545.astype('uint16'), relay.reshape(var_3546.astype('uint16'), relay.shape_of(var_3545))) # shape=(7, 13, 8)
uop_3576 = relay.atan(var_3545.astype('float64')) # shape=(7, 13, 8)
output = relay.Tuple([bop_3547,uop_3576,])
output2 = relay.Tuple([bop_3547,uop_3576,])
func_3580 = relay.Function([var_3545,var_3546,], output)
mod['func_3580'] = func_3580
mod = relay.transform.InferType()(mod)
mutated_mod['func_3580'] = func_3580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3580_call = mutated_mod.get_global_var('func_3580')
var_3582 = relay.var("var_3582", dtype = "uint16", shape = (7, 13, 8))#candidate|3582|(7, 13, 8)|var|uint16
var_3583 = relay.var("var_3583", dtype = "uint16", shape = (7, 13, 8))#candidate|3583|(7, 13, 8)|var|uint16
call_3581 = func_3580_call(var_3582,var_3583,)
output = call_3581
func_3584 = relay.Function([var_3582,var_3583,], output)
mutated_mod['func_3584'] = func_3584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3597 = relay.var("var_3597", dtype = "float64", shape = (15, 3, 1))#candidate|3597|(15, 3, 1)|var|float64
uop_3598 = relay.log10(var_3597.astype('float64')) # shape=(15, 3, 1)
bop_3603 = relay.maximum(uop_3598.astype('int64'), relay.reshape(var_3597.astype('int64'), relay.shape_of(uop_3598))) # shape=(15, 3, 1)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
const_3613 = relay.const([-8.659083,-8.940672,-5.890781,5.827018,2.408670,3.593742,3.643532,-5.852594,-2.571659,-1.319730,-5.308917,9.318004,0.057537,9.467816,-1.421877,6.242287,-5.279635,7.590222,-1.073405,-3.099366,5.132082,8.060668,0.641830,9.930926,4.570497,-5.759008,-9.268029,-4.458148,5.212560,-7.596350,-4.426814,-6.437186,5.573211,-3.881749,-7.394533,-5.821709,-0.185812,-1.039967,5.422636,-7.007694,8.151260,6.740026,-9.223755,3.342636,9.124957,8.029246,5.386194,2.863553,-5.179991,-7.493358,-0.885567,-4.807848,-2.914772,-1.307248,-4.448298,4.030896,-6.284957,8.613112,-4.999109,-4.370393,-5.006941,-9.358049,2.292189,-0.056485,0.561235,-5.806853,3.544098,-3.380026,4.610510,-0.769651,0.135153,2.826974,-7.732738,8.230501,-5.237368,-1.581671,9.420548,-3.993284,-4.316079,-4.534301,-2.436528,2.853444,0.673726,4.618265,0.848730,-1.461749,9.690624,-8.160012,-1.207869,8.154485,6.615340,3.792631,-0.807160,4.479867,6.848677,-7.854495,-3.240898,6.583222,7.795790,-2.421355,-4.719738,-0.500047,-2.217970,2.757296,-2.870793,1.684662,8.569325,-0.438012,6.834676,-0.682975,-3.108253,-4.563232,4.890350,-9.943758,-5.962019,9.205792,-0.507957,9.523814,-2.687306,9.110071,4.740414,-6.350789,-0.700817,-7.156830,-1.197802,-0.838660,8.194980,8.572984,-0.277530,2.688545,-6.551407,-6.141097,-5.685433,9.410033,-1.458357,6.605048,-8.374160,-5.473896,9.806519,-4.395515,-1.177526,-9.992617,9.050050,-2.286470,4.052537,-2.914583,-4.583663,-1.877350,-5.982456,0.871562,3.538477,-4.109171,-1.622543,-9.365272,8.021236,0.685450,2.895683,3.644092,8.950876,-3.386578,-7.966234,-0.298161,6.602615,4.074149,-6.539757,0.214860,-2.886745,4.666258,-7.481893,-3.111328,-0.133879,5.082545,1.713452,-4.554665,-9.333325,3.863378,-2.248070,0.479180,0.239475,3.464515,0.578542,9.989867,9.666775,-9.065325,-9.766615,6.568907,-5.684032,-4.903482,-7.437369,-6.081457,1.536283,2.062312,4.391665,-6.438179,7.565063,0.562050,-9.316751,-5.774048,2.932027,0.773927,3.291295,9.654210,-4.186624,7.410535,-5.974277,7.285859,-6.726571,4.778306,-6.300470,-4.615868,-6.657312,-4.398834,-5.151733,-5.331326,-7.890107,6.165122,-9.955937,2.355572,-3.274177,5.716242,9.410121,-7.228233,5.218553,2.785576,3.488094,-9.913249,8.030636,-9.321260,8.376222,-8.961607,3.541549,-7.044274,-4.019632,-4.028123,-1.477551,7.320228,-4.529416,4.215778,-9.708992,9.799315,-3.453372,3.836302,4.502022,6.031952,-8.430520,-1.814727,3.118162,6.414783,-1.844740,-6.744232,-1.360515,-7.999662,-3.860871,-6.951508,4.313782,-4.055442,1.009581,1.199596,-2.648356,-3.951786,-2.393110,-4.981998,6.877069,5.847674,5.660242,-5.376041,-0.713065,-1.669146,1.227112,4.271593,3.069860,-0.286365,1.279723,7.884303,0.068550,-8.218995,-2.736551,2.208119,-6.258743,0.855524,7.426599,0.432363,7.424266,-6.411731,4.852291,7.428561,1.557484,7.317528,8.414006,-5.105678,-8.862032,0.130970,2.965905,-2.311425,3.789704,1.376238,-0.453592,-3.394653,2.569990,-9.742049,-4.950195,7.465221,7.956508,-4.839434,5.353617,1.913711,6.022952,-2.987453,-6.272917,3.488792,-5.259012,-1.986677,0.400514,-2.658752,4.534513,1.867211,-3.119692,1.514786,-6.466103,8.164767,7.372489,4.562664,4.050716,0.559508,7.203735,0.948722,-8.594633,-3.563890,9.836129,-4.911894,4.790945,-7.804138,-1.451661,7.557983,-9.526073,-0.256834,-7.684402,-1.325207,1.339503,7.306439,-5.443200,-4.056712,-4.305437,9.194549,-1.324160,-1.982397,8.978892,5.201673,-1.512911,-9.315642,7.795131,-6.666427,3.621633,0.541621,2.790552,2.828057,-2.735022,-4.000925,-7.377262,-0.947803,5.408892,-2.347412,2.954354,-9.329041,-6.449724,-4.218909,6.043297,9.065390,-8.387308,3.951056,2.394350,9.624623,-8.606161,-5.264710,6.601377,7.802100,9.516749,-6.069369,-6.620131,4.294535,7.055708,-4.157498,-6.654779,1.214048,0.098618,-4.623484,0.721056,-1.188205,9.895607,-4.725525,1.016718,3.574253,2.230830,4.257822,-2.725918,1.971681,5.507240,-0.657996,2.399171,-8.147885,-1.489551,-4.093077,-4.587287,-4.010415,0.180828], dtype = "float32")#candidate|3613|(405,)|const|float32
call_3612 = func_817_call(relay.reshape(const_3613.astype('float32'), [15, 3, 9]))
call_3614 = func_817_call(relay.reshape(const_3613.astype('float32'), [15, 3, 9]))
var_3615 = relay.var("var_3615", dtype = "int64", shape = (15, 3, 8))#candidate|3615|(15, 3, 8)|var|int64
bop_3616 = relay.bitwise_or(bop_3603.astype('uint64'), var_3615.astype('uint64')) # shape=(15, 3, 8)
output = relay.Tuple([call_3612,const_3613,bop_3616,])
output2 = relay.Tuple([call_3614,const_3613,bop_3616,])
func_3625 = relay.Function([var_3597,var_3615,], output)
mod['func_3625'] = func_3625
mod = relay.transform.InferType()(mod)
mutated_mod['func_3625'] = func_3625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3625_call = mutated_mod.get_global_var('func_3625')
var_3627 = relay.var("var_3627", dtype = "float64", shape = (15, 3, 1))#candidate|3627|(15, 3, 1)|var|float64
var_3628 = relay.var("var_3628", dtype = "int64", shape = (15, 3, 8))#candidate|3628|(15, 3, 8)|var|int64
call_3626 = func_3625_call(var_3627,var_3628,)
output = call_3626
func_3629 = relay.Function([var_3627,var_3628,], output)
mutated_mod['func_3629'] = func_3629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3710 = relay.var("var_3710", dtype = "int16", shape = ())#candidate|3710|()|var|int16
var_3711 = relay.var("var_3711", dtype = "int16", shape = (1, 5, 12))#candidate|3711|(1, 5, 12)|var|int16
bop_3712 = relay.bitwise_and(var_3710.astype('int16'), var_3711.astype('int16')) # shape=(1, 5, 12)
bop_3715 = relay.less_equal(var_3711.astype('bool'), relay.reshape(bop_3712.astype('bool'), relay.shape_of(var_3711))) # shape=(1, 5, 12)
output = relay.Tuple([bop_3715,])
output2 = relay.Tuple([bop_3715,])
func_3723 = relay.Function([var_3710,var_3711,], output)
mod['func_3723'] = func_3723
mod = relay.transform.InferType()(mod)
mutated_mod['func_3723'] = func_3723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3723_call = mutated_mod.get_global_var('func_3723')
var_3725 = relay.var("var_3725", dtype = "int16", shape = ())#candidate|3725|()|var|int16
var_3726 = relay.var("var_3726", dtype = "int16", shape = (1, 5, 12))#candidate|3726|(1, 5, 12)|var|int16
call_3724 = func_3723_call(var_3725,var_3726,)
output = call_3724
func_3727 = relay.Function([var_3725,var_3726,], output)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3854 = relay.var("var_3854", dtype = "float32", shape = (4, 5, 1))#candidate|3854|(4, 5, 1)|var|float32
uop_3855 = relay.atan(var_3854.astype('float32')) # shape=(4, 5, 1)
uop_3862 = relay.log10(uop_3855.astype('float32')) # shape=(4, 5, 1)
uop_3872 = relay.erf(uop_3862.astype('float64')) # shape=(4, 5, 1)
func_741_call = mod.get_global_var('func_741')
func_745_call = mutated_mod.get_global_var('func_745')
var_3894 = relay.var("var_3894", dtype = "float64", shape = (196,))#candidate|3894|(196,)|var|float64
const_3895 = relay.const([[-2.967294,-9.119473,-5.071125,-9.617453],[-1.889535,3.558665,-6.730364,-5.699986],[5.861935,-1.710053,9.261328,2.524747],[1.718082,5.532592,3.740956,-5.087110],[-3.037938,4.940398,7.499006,-2.200384],[5.380273,-7.569572,4.280645,2.706194],[3.963122,9.539754,-5.618611,-5.923226],[7.445925,-3.548187,4.345410,-9.451930],[0.468626,-2.419307,3.736566,-9.239395],[-7.131837,-3.240773,8.899591,9.498994],[0.828232,-7.921445,0.422642,-9.546857],[-6.641798,5.151355,4.783734,3.772271],[8.298993,7.365337,-5.693913,8.813571],[-2.067394,-2.991845,-5.511734,-2.175887],[-4.948530,9.129583,5.727206,-3.512497],[-4.782243,4.203712,1.525681,6.204327],[-7.197169,2.309169,-7.464921,-8.078226],[4.628277,4.792122,-5.932814,2.598524],[-6.940111,-6.356608,-3.914961,8.120459],[-1.222605,-8.151747,0.450066,-3.914598],[-7.733878,-6.295766,-2.685051,-9.894363],[3.509176,4.287751,0.747723,1.834344],[-6.177918,-4.633478,-1.294747,3.686485],[-7.821908,3.768596,8.209997,-3.350165],[7.551080,1.242547,2.675142,7.324935],[7.336213,-2.821645,-0.989984,-4.390292],[7.808284,7.687482,-6.348071,-0.528747],[5.851749,-5.568495,5.208423,-8.194267],[8.456159,-7.257287,6.781917,6.503367],[7.312756,-6.188033,4.357790,-0.131883],[1.029843,5.141660,-9.589537,-7.070383],[1.433043,7.167362,0.792239,4.217267],[6.127177,9.385214,-0.135318,0.798522],[-8.574847,9.759070,-2.853823,-9.320524],[6.239764,0.243507,8.688991,6.097535],[-6.959499,9.424008,6.691649,-9.186792],[5.799433,2.103068,-5.790410,6.658450],[-9.860491,7.608803,-8.352760,-6.276709],[6.558642,5.479084,-2.349220,5.755896],[2.988683,-9.059434,8.564308,8.870713],[8.926129,-1.426224,3.886246,-3.323810],[-5.515725,-8.712210,-7.735652,1.645105],[-0.674100,-7.821771,1.353494,4.135013],[5.331278,1.025770,-4.243576,2.625071],[-9.461475,-6.497782,9.322850,0.503569],[-4.019897,-5.882529,7.979966,-6.641203],[-7.692538,-1.498247,-3.222018,0.724056],[0.017370,-3.950145,2.300873,2.122580],[-0.157150,-3.475185,6.139914,3.842354],[8.284602,-8.944219,9.468220,2.898870],[7.506289,-9.085642,8.495033,9.564008],[-5.002504,6.960173,1.476130,4.310845],[-4.999664,9.067423,-0.823470,6.400535],[-6.174121,-3.118860,-6.885950,-3.100566],[9.850831,4.027597,-5.912073,7.711132],[-1.672956,-2.591985,-6.026372,0.342332],[8.747293,-2.174298,-7.131717,-0.645183],[5.115126,-0.220737,-0.407181,0.238338],[3.696395,-6.419995,-3.801246,4.969492],[-1.754050,-4.083141,5.257436,5.025055],[8.315630,-6.898265,2.960505,-6.260658],[7.713003,-4.456293,9.061253,1.064379],[-6.849969,-4.866545,-5.747938,-4.093083],[-8.197976,6.327671,-7.536114,-8.325333],[-2.652748,2.551646,0.059710,-8.543251],[9.756632,-0.887380,-7.279731,0.804080],[-0.258652,4.921582,8.154932,5.584353],[9.172397,-6.226404,-6.979861,9.851083],[1.961160,-6.848956,-5.401365,-1.325656],[-3.415206,0.266970,-5.973481,2.921546],[-5.029207,3.506459,-4.946181,3.708272],[1.755574,-6.897005,8.323324,-5.483415],[-8.301164,4.366066,9.514825,-7.042163],[8.100737,4.030133,1.047710,-9.234420],[0.936689,0.437821,-7.234837,2.195059],[-6.803435,3.099945,6.293775,9.838559],[7.480300,0.149589,-2.770936,-5.521579],[3.543269,4.511668,-5.212853,-9.276762],[-5.694670,-8.701055,7.525577,-1.068327],[3.378721,4.049224,-8.983260,-8.109948],[0.142650,-1.309222,-5.007956,3.948635],[-2.692404,-3.660831,-2.386701,5.881919],[-5.396430,-1.684229,0.325903,-5.014021],[-1.794591,-2.190073,-1.332584,-0.696908],[-9.264260,7.481551,1.413797,-8.973113],[8.702425,3.669331,6.786763,-0.881198],[-9.792468,4.072250,-6.412426,-6.433647],[5.367452,6.046135,9.612327,-8.102142],[-0.809626,-8.689106,-0.115150,-6.000275],[4.577546,-3.475664,-6.395373,8.914433],[7.081857,-7.547702,-9.058219,-5.818360],[4.762089,2.702219,-9.773967,-4.959808],[8.752253,-2.515732,0.944861,7.468920],[-5.180120,-0.070305,5.942304,6.480125],[-9.441108,-4.179324,-8.957410,3.084519],[-5.777555,5.431435,-5.403020,6.337729],[-6.265330,4.420294,-4.148499,2.009567],[-0.826899,5.662397,6.838857,-2.229405],[9.644322,-9.218961,-5.575664,6.681533],[-0.938938,9.620324,0.714916,-3.490721],[-8.472551,3.621949,-4.666878,-9.559535],[-0.904883,-8.299849,-1.702135,-4.657182],[2.718084,-6.915009,-1.159275,-6.892248],[-7.560284,4.496487,9.444541,0.556177],[6.126318,-8.935496,4.551652,1.667326],[9.362260,1.194994,-8.312191,4.681488],[-4.302198,2.132068,5.811772,1.223297],[6.100707,7.394921,-8.062714,4.334553]], dtype = "float64")#candidate|3895|(108, 4)|const|float64
call_3893 = relay.TupleGetItem(func_741_call(relay.reshape(var_3894.astype('float64'), [2, 14, 7]), relay.reshape(const_3895.astype('float64'), [432,]), ), 3)
call_3896 = relay.TupleGetItem(func_745_call(relay.reshape(var_3894.astype('float64'), [2, 14, 7]), relay.reshape(const_3895.astype('float64'), [432,]), ), 3)
func_1994_call = mod.get_global_var('func_1994')
func_2003_call = mutated_mod.get_global_var('func_2003')
const_3900 = relay.const(7, dtype = "int16")#candidate|3900|()|const|int16
const_3901 = relay.const([[-7,10,9,-5],[10,-7,-2,10],[5,-5,10,7],[7,-8,4,-1],[-4,-4,-6,2],[-6,1,-1,-3],[-9,-7,10,-2],[1,-3,9,7],[-4,-6,1,6],[-6,7,-2,-4],[-3,-1,-8,-1],[-3,4,-8,-7],[4,-5,-3,2],[2,9,-4,-4],[-7,-9,9,3],[-4,-4,-10,7],[4,8,-4,7],[2,9,-10,-2],[-9,-9,10,-10],[9,-9,5,-2],[7,-4,-10,9],[8,7,-1,4],[-9,8,-7,8],[-2,-4,2,-4],[5,3,3,-9],[-8,-9,-7,-8],[-8,-8,5,-10],[2,4,1,4],[-9,3,-9,-3],[9,5,-4,2],[1,6,5,-5],[-1,2,8,-10],[-3,7,5,8],[-1,-10,7,-9],[-2,-6,-3,6],[9,-6,4,-4],[-8,10,2,-5],[-2,-9,7,-9],[5,7,-4,3],[-9,-10,4,-1],[-6,6,-10,10],[8,-2,9,3],[5,-3,-3,4],[-5,6,-8,-4],[9,-10,-2,2],[2,-4,-3,7],[7,9,-8,1],[-5,5,-5,8],[8,2,10,10],[5,-5,1,8],[-3,7,8,-5],[8,-8,8,4],[8,5,-9,2],[-9,4,-8,-7],[7,-10,-5,-2],[4,3,-8,7],[-2,-5,-7,4],[-3,-5,1,10],[5,5,-5,-10],[-6,1,9,-1],[-10,3,3,-5],[-6,-7,-2,4],[-9,7,7,2],[-2,9,-3,-4],[7,4,5,-6],[10,9,-10,-1],[-4,-2,-8,4],[9,1,4,-7],[-3,10,-10,2],[-10,2,-3,-7],[-1,-8,5,-9],[5,-6,-7,9],[4,9,-6,2],[1,-5,8,3],[-1,10,-3,10],[-3,7,1,-10],[-5,-7,-2,-6],[6,9,-3,7],[1,2,10,-2],[-10,1,-4,6],[-3,-10,-5,-8],[-8,-7,7,-7],[-1,4,10,-4],[-6,-2,7,-8],[3,5,-4,9],[10,-5,9,-9],[2,4,1,4],[1,8,6,-8],[5,6,-6,3],[10,5,3,-10],[7,-9,-9,6],[1,-10,1,7],[-1,5,-8,5],[8,5,-4,-6],[-8,1,-8,-9],[-2,-7,9,9],[4,9,-4,-10],[-4,4,2,9],[7,-7,-7,-3],[7,2,-1,-8],[-4,-9,-3,1],[-3,-5,8,-5],[4,-7,10,1],[-9,3,-3,7],[2,-6,-6,-4],[5,-6,-3,-6],[-2,-1,-7,10],[-5,-8,-8,6],[2,6,-10,-6],[10,-5,-2,-2],[-8,-7,-5,-10],[1,-9,-4,8],[-6,5,5,-8],[-5,7,-8,4],[-4,-2,9,9],[2,9,-2,4],[-3,1,-2,2],[6,5,-10,1],[-9,5,6,7],[2,6,5,2],[-10,-4,6,10],[-7,7,5,3],[2,1,2,8],[6,-9,-5,-6],[6,7,-10,-3],[3,4,9,-1],[3,-8,2,8],[9,8,8,9],[8,5,5,4],[-1,6,-4,-10],[-3,-2,6,4],[7,9,7,-1],[-4,-2,-6,8],[3,-7,3,3],[-8,10,5,1],[-5,9,-8,7],[-9,-2,-5,4],[4,-4,1,-2],[2,-4,7,1],[6,6,-10,-8],[3,-6,10,-8],[-9,1,2,10],[-9,-1,10,10],[1,9,-10,2],[7,-2,6,-9],[-2,7,-6,-8],[-1,-3,10,-6],[1,4,-2,-5],[-2,6,-6,-5],[7,-4,8,10],[-10,10,-6,3],[-10,9,3,3],[-2,5,5,-8],[-1,7,-4,-9],[-8,6,-3,-1],[8,-7,5,-8],[10,-5,-5,-7],[-5,6,-3,-4],[3,-7,1,-1],[8,-9,9,-8],[-3,4,-7,-4],[7,-4,6,1],[9,6,-6,8],[9,6,7,7],[-8,7,3,-10],[3,1,3,9],[-10,4,5,1],[-9,10,-3,-5],[-9,8,6,-2],[-3,10,-7,-10],[5,-4,-5,-4],[1,8,2,-5],[-8,3,-3,4],[-8,-4,5,-3],[-9,1,-1,6],[-1,-6,-10,4],[-5,3,-1,-6],[1,-3,5,7],[2,-5,4,-7],[-10,10,5,9],[10,-2,8,2],[-9,8,-3,-5],[4,10,-3,-5],[-1,4,-10,7],[-4,-2,6,-6],[1,8,-10,10],[5,3,8,-3],[-4,4,10,3],[10,-8,1,1],[7,-7,2,-2],[9,5,7,8],[-4,7,-4,8],[8,-2,10,-1],[3,-6,7,-4],[-5,-6,6,4],[-8,4,1,-8],[9,-8,-5,8],[8,5,-3,-2],[7,-3,-3,4],[7,-3,-9,-9],[-3,7,-7,6],[-2,1,-1,6],[-2,-2,5,8],[4,-4,2,-3],[-2,3,-7,9],[1,5,-4,7],[-1,2,-4,9],[2,3,9,-1],[8,4,-2,-5],[10,4,-4,-1],[1,-10,-4,3],[4,-1,3,4],[5,-7,1,-1],[-3,-7,7,1],[-3,-5,1,2],[5,8,7,-9],[2,-3,-7,3],[1,-8,-10,-8],[-1,-8,10,-8],[7,-5,8,9],[8,-2,-6,5],[-7,-6,4,-7],[-7,-7,-9,4],[-9,-10,-10,8],[9,-3,4,-2],[2,7,-4,-1],[9,1,-3,4],[3,10,3,3],[7,-8,-5,4],[-10,3,3,-8],[2,-2,4,8],[10,-3,5,6],[2,-6,4,-4],[9,2,-1,-8],[-10,9,-6,3],[4,-2,2,4],[-2,2,-10,-2],[-6,-3,-7,-2],[-1,2,10,7],[1,-5,-7,-10],[-9,5,-9,-10],[-3,3,-6,-6],[-8,6,4,-3],[5,10,7,1],[2,-7,4,7],[-10,7,7,-3],[-2,4,4,-2],[3,3,2,8],[-1,-7,2,-4],[4,8,-7,-6],[-10,8,8,-5],[2,3,-1,9],[7,8,-10,2],[8,-7,1,-7],[-6,6,-4,6],[-8,-3,-1,-2],[-10,8,5,-6],[-1,9,6,2],[-10,7,9,2],[-10,6,-7,2],[9,7,-1,8],[-8,2,4,8],[-4,9,-6,-3],[-6,-10,9,2],[1,5,-4,1],[-1,-6,1,-10],[8,-10,-2,3],[-6,-3,-4,-5],[6,-6,-3,2],[4,-1,-1,9],[2,-4,-4,2],[-9,-5,10,7],[-1,6,-1,-10],[-6,9,-5,9],[-10,2,1,6],[-9,-4,-2,-6],[-5,9,-1,-3],[1,6,-10,3],[-1,6,9,5],[-4,8,1,8],[-6,-4,-7,4],[8,-4,-9,10],[4,-6,-7,-2],[8,-6,-3,7],[-3,-8,7,-8],[4,-3,1,-4],[7,-9,-1,-5],[10,-9,8,-6],[-4,-1,6,6],[-3,4,-10,10],[-10,-6,-9,-1],[-4,4,4,-3],[2,-1,-5,-10],[-4,2,-7,-5],[-1,-10,-2,7],[-9,8,-1,-4],[-6,5,2,8],[2,-1,-2,7],[-5,-2,-8,-3],[-4,-2,3,-9],[-3,-10,10,10],[-10,2,-5,-7],[-6,7,2,10],[-10,-10,-8,-2],[5,-5,-2,8],[6,-5,-9,-3],[-1,-10,10,-8],[2,-3,-9,3],[-7,-9,-3,-2],[-9,10,-9,-4],[3,5,3,6],[-1,8,-4,-2],[-1,-3,-9,3],[-1,-5,-6,-3],[4,4,1,-5],[-9,-10,5,-5],[6,1,2,-3],[-9,-3,1,5],[4,-3,7,5],[10,-8,-9,1],[2,1,8,-9],[4,3,8,1],[5,-4,1,-8],[-7,5,-3,3],[8,1,10,4],[-2,9,3,9],[-3,2,-4,-4],[9,9,6,9],[-8,2,2,1],[-3,3,2,3],[7,-9,8,-4],[-3,-10,6,4],[2,1,-2,-6],[-3,-10,-1,10],[8,10,3,2],[-6,-4,2,6],[4,7,-8,-10],[4,-7,4,-4],[9,10,-8,7],[-5,-6,-10,2],[-10,9,-2,2],[-8,-10,6,-7],[-7,-8,-7,7],[-7,2,7,-9],[-3,-6,9,2],[7,-2,-5,10],[3,-7,3,6],[-8,7,-2,-4],[-7,1,-8,-5],[-6,-10,5,-5],[7,9,-5,-10],[-3,2,-7,2],[7,-2,-6,-2],[4,-3,1,7],[9,8,3,9],[-6,1,7,7],[-7,-1,-6,7],[-2,-8,10,10],[3,5,5,2],[-7,5,6,-8],[-1,-8,-1,-8],[7,5,-3,-7],[1,10,8,-7],[5,-6,4,-6],[2,-3,-8,5],[6,3,7,6],[1,-5,-10,-1],[6,7,-3,6],[-6,-10,9,2],[-7,7,-4,-1],[-10,6,-1,-4],[6,7,-4,-7],[-4,-9,-2,10],[-5,-3,-9,7],[-3,9,2,8],[-5,-9,10,1],[3,-6,-10,-2],[5,-7,-2,-4],[-7,-8,6,-7],[3,-2,-4,-6],[5,-9,10,4],[-9,-2,3,-7],[-10,-1,2,-9],[-6,9,-6,-4],[-9,-7,-6,-8],[10,-5,5,5],[-6,-4,-4,3],[-6,9,-9,2],[-8,9,-10,9],[7,6,6,9],[-10,10,6,6],[-8,-3,-2,5],[3,-3,2,-4],[-6,1,4,5],[3,-9,-1,-2],[-2,5,9,1],[7,7,-6,8],[-3,-3,1,10],[3,6,4,4],[2,-7,3,-2],[-4,10,2,-9],[9,2,9,-7],[-1,8,-10,9],[-4,-2,8,5],[-5,-1,5,1],[-1,-5,5,3],[-4,1,-3,-5],[-9,-4,-2,-9],[4,-5,-10,-4],[-1,1,10,4],[-7,9,5,9],[-10,5,1,-1],[3,-5,-4,6],[-7,-1,-3,2],[-10,-3,2,1],[4,6,-9,10],[6,-7,-2,6],[-9,6,-2,5],[-7,6,-10,-5],[-4,-8,9,9],[3,6,8,-7],[-8,3,1,-3],[4,-2,-10,-7],[-8,-9,6,4],[3,-7,3,10],[-8,3,-10,-2],[8,9,10,4],[4,9,-1,-9],[5,7,-1,1],[-9,1,-3,-4],[-4,10,-8,4],[-6,-1,-5,3],[-6,10,-7,-9],[5,6,10,10],[-2,7,-3,-3],[3,-9,-4,-8],[3,2,-7,6],[8,2,1,-3],[2,-2,-3,5],[-1,-2,-7,7],[-8,-9,7,-9],[-7,-6,-6,-1],[9,5,-10,-7],[5,6,-2,1],[4,-5,5,-8],[8,1,3,2],[7,5,8,-10],[1,-6,-3,-3],[8,7,-5,-8],[-9,6,-2,3],[6,1,-9,-8],[9,5,2,6],[-7,5,-8,-2],[-3,8,-9,-7],[10,-8,8,-3],[-9,-8,6,10],[7,-3,10,1],[-6,-9,3,-9],[-5,-5,-2,-2],[7,-1,-6,-6],[8,-7,7,-10],[-10,-9,8,-7],[6,7,-10,-10],[-9,-10,3,7],[5,8,3,-6],[-10,5,4,10],[-3,7,-6,-10],[9,-1,6,-4],[3,7,-1,-8],[-10,8,6,-4],[-4,2,-10,-6],[-4,9,-6,-3],[4,-4,4,7],[-6,10,2,-1],[-4,8,-7,1],[3,1,5,-8],[-5,8,-4,-5],[-8,2,-8,-8],[-6,-6,-1,4],[9,5,3,-4],[6,8,-7,-10],[-8,6,-3,-8],[-1,4,1,7],[-5,-7,6,7],[-3,1,9,-6],[-2,-5,-7,8],[9,-1,1,-2],[10,7,1,7],[-10,-6,10,10],[-4,-8,9,-8],[-9,-9,-7,-9],[2,-3,9,-9],[-10,9,-8,-1],[3,-3,5,-1],[10,-5,10,-4],[-9,5,8,-6],[-10,-6,6,-1],[7,1,3,8],[-1,10,6,-6],[-10,-2,7,-7],[-5,-5,2,-9],[-8,-3,-4,6],[-6,9,-10,-9],[-7,9,1,3],[2,-6,-4,5],[7,6,-1,-7],[9,-10,-2,-9],[2,-5,5,10],[5,-2,-2,2],[-7,3,3,6],[7,-2,7,-9],[1,-5,-1,-4],[2,7,2,-5],[10,-6,7,6],[10,-6,1,-7],[9,-9,-8,7],[10,5,-5,-3],[-8,7,-1,-3],[3,9,5,6],[-7,-4,-7,-4]], dtype = "int16")#candidate|3901|(520, 4)|const|int16
const_3902 = relay.const([[5.935422,5.663518],[8.311528,1.825008],[0.881316,-4.662172],[0.494664,4.377488],[-6.676341,3.261702],[3.037732,6.301886],[5.852700,2.969133],[5.030671,0.936708],[7.325457,0.030126],[4.702875,-6.130459],[5.568929,-5.527663],[3.107507,-5.585291],[1.204026,7.365125],[4.399310,-8.269345],[9.806381,0.473623],[-9.485294,6.210033],[9.403939,-0.750724],[0.710133,7.308288],[-5.962241,-1.624725],[6.149809,6.073223],[-8.439738,-9.199694],[-2.726312,-0.444833],[-8.099489,-5.941942],[-9.482221,4.260756],[0.883714,-9.388982],[-4.701795,5.453811],[-4.582696,-2.217898],[8.493246,-5.906391],[-9.416092,6.701192],[4.984881,-2.313222],[9.791885,7.212403],[1.495198,-3.227552],[-6.698981,0.403137],[-3.620427,6.657474],[-2.211547,0.406250],[-5.959864,4.662588],[-0.680960,5.473880],[-9.665315,0.217521],[-0.263025,-4.609239],[2.354117,-3.960500],[7.298094,-7.863162],[7.372837,-6.683118],[-8.990472,9.807653],[7.137066,7.613412],[3.142009,-1.403492],[8.280797,-1.214986],[-3.191558,5.127931],[6.399616,4.737334],[1.631009,-6.995330],[-1.733484,7.138914],[-1.308424,9.044790],[6.475896,6.833679],[9.158010,2.145617],[-8.504284,-5.898665],[-7.866874,-1.271351],[-1.464839,-9.416311],[-9.872561,-1.259779],[-9.718438,9.948319],[-5.700935,-6.860560],[6.306991,-5.366383],[9.857390,0.363443],[0.846391,-1.388288],[2.331851,4.715047],[4.700228,-5.864115],[6.433812,-9.237936],[-6.740517,-3.580841],[-8.646485,-3.596948],[6.446010,-5.885918],[-4.255395,-3.575757],[3.698885,8.225586],[1.332381,-1.816535],[2.666075,-8.845080],[6.573989,-7.793649],[-8.364653,-7.465857],[9.582671,8.800012],[-9.525256,-3.503732],[6.713069,-6.436241],[8.071085,-9.816209],[9.442638,5.600479],[8.130604,8.259796],[-0.290742,-9.942793],[-0.014720,2.358794],[2.599406,-7.049453],[-5.650042,2.492945],[1.483199,8.888759],[7.922738,-7.357404],[-7.162744,6.190435],[0.583102,5.596744],[-7.566019,4.942755],[-1.490876,3.599366],[6.907726,6.578814],[-6.560312,0.543140],[7.070105,-1.683941],[-0.665111,3.939653],[3.921690,-5.739572],[4.618801,-8.784274],[2.451169,-8.192893],[3.308917,-2.597937],[-1.964800,-9.538467],[-2.463576,-5.557503],[-6.541666,-2.932501],[2.329524,-5.933469],[0.464308,-5.063540],[-2.794745,-3.601684],[-1.578364,0.222686],[-2.745257,-5.172147],[-9.386749,5.496523],[-5.192787,-0.702848],[1.621830,-0.214838],[-3.505862,1.347042],[3.597924,-6.560855],[-1.611339,-5.798890],[5.882033,-0.715276],[4.136115,-5.788256],[-1.519710,-0.892698],[-4.386727,9.867427],[2.865616,-1.035124],[-0.729450,1.843133],[5.366457,5.035000],[1.951605,-7.875513],[-0.039716,-3.132940],[3.380437,8.508198],[7.303655,3.457884],[-0.122027,3.357163],[-6.045303,4.142819],[2.986573,-0.541578],[-8.555431,-6.511602],[7.184321,-2.143011],[-1.726283,5.009399],[-0.318170,2.480735],[-4.865510,0.471612],[2.727568,4.954912],[-3.708617,2.060738],[8.760109,0.436917],[7.605508,0.142361],[-8.496074,-8.053273],[3.077326,8.050922],[-4.518092,1.960605],[8.110839,2.378432],[8.436963,-5.241169],[2.860675,8.776139],[4.631771,-2.342023],[-4.777122,-0.446162],[-9.358667,9.085615],[-6.721631,1.509543],[0.516652,-4.614935],[9.766880,-6.403033],[-3.338089,-2.485591],[-9.015425,-4.211725],[-5.978777,-9.438963],[9.696166,-8.893540],[-1.066687,7.972041],[-2.819965,7.589378],[7.853914,-3.293805],[-1.086510,7.056547],[0.960733,-4.494061],[0.646186,7.843804],[-2.710265,-7.303746],[-2.838799,0.524052],[7.469881,-0.038070],[1.831981,2.013918],[1.402298,1.545387],[-2.717261,-4.603410],[-7.857276,4.946231],[0.287738,-4.296645],[7.616014,4.517536],[6.271536,-4.208076],[6.372546,-7.809049],[-4.722406,7.093971],[6.228746,4.789339],[3.204010,7.280941],[2.104935,0.172504],[0.442694,-6.295041],[2.457171,9.255592],[-0.234592,3.708328],[-4.690508,-7.495293],[6.126657,-3.085905],[-7.418213,2.465291],[5.143678,4.883610],[7.229987,7.274619],[-3.549797,0.256355],[-0.698030,-2.606043],[-4.043216,-2.547065],[2.274911,-9.876927],[2.066689,8.924875],[-0.231614,0.120412],[9.143331,-8.898039],[-0.117762,-7.788818],[6.629218,-2.614705],[-7.325831,-6.704065],[-8.323238,4.697685],[2.291314,-7.456187],[-9.846924,-9.998727],[-3.242409,-8.922550],[2.025059,3.927552],[-5.369877,-0.042184],[5.617202,9.147841],[-7.628650,5.556199],[2.898301,-4.941328],[-2.073695,5.291783],[8.118266,7.306942],[0.812910,5.693620],[0.081116,-6.073071],[-8.016146,0.930095],[9.152971,9.294257],[6.602062,-4.969228],[9.168471,1.845211],[-3.205732,-6.975774],[5.252651,2.115642],[1.978923,6.101224],[3.972654,4.976713],[-2.083198,-0.244470],[2.139732,8.226374],[-3.331178,0.394284],[5.072832,8.004323],[9.289137,7.822504],[2.297074,-6.879519],[7.096454,9.089050],[6.693039,5.041869],[-1.518673,-6.391005],[4.186378,-0.814145],[6.772051,-4.780818],[-4.827798,-6.166893],[6.388265,-6.835525],[7.545990,-4.298662],[-7.334109,9.599930],[-4.138197,-2.252504],[-9.335143,-7.721036],[-0.677020,4.919233],[3.642199,-4.975037],[1.255945,6.081032],[-3.631412,-5.861483],[-1.675396,1.806190],[-8.323344,1.725317],[7.599937,9.242173],[-3.498436,8.634036],[-4.366220,-6.941100],[-8.628765,-4.395755],[-5.009362,9.195478],[7.680488,-9.832449],[-9.845562,8.074044],[-7.811594,8.330712],[-5.380465,-0.484729],[-8.115507,6.573772],[-6.095682,-9.974241],[8.731895,4.673562],[4.874907,-8.728233],[-7.321306,-9.621930],[-6.139170,3.322796],[-0.516844,-8.093295],[-9.266908,6.187720],[4.792260,6.612903],[4.485770,-8.503214],[-2.614128,-4.619509],[-3.224288,1.609087],[2.053411,7.087162],[4.858899,-2.263314],[1.096642,-2.948879],[5.835853,3.001779],[-2.142226,1.449481],[-7.248481,-0.615401],[3.938534,-3.056492],[-9.585115,-1.346688],[-8.613559,3.707880],[-7.389693,6.132650],[0.094502,2.483892],[-0.969650,1.015982],[-0.334858,-6.365934],[-7.590598,7.954403],[0.131321,-0.088367],[6.426731,9.425053],[-3.689276,2.210919],[-9.614221,8.981860],[-8.977011,5.453620],[7.481705,-9.893867],[6.091919,-4.135075],[9.933722,4.187340],[-6.391738,-6.790629],[-7.283436,6.640172],[4.435842,0.218683],[6.873414,1.906938],[-4.066619,-6.265353],[7.470705,6.553089],[7.872500,-3.186211],[3.876696,5.119071],[5.627775,-6.627137],[1.552857,6.961551],[-2.491381,5.029092],[8.872906,-0.412171],[3.857320,7.523155],[4.180373,3.746844],[-1.442208,8.227283],[5.939699,3.603796],[0.068800,-3.175683],[1.307712,6.136081],[-1.899231,-1.157695],[6.524837,1.475869],[1.988832,7.214201],[6.115799,-6.509773],[-3.753895,-3.535762],[-7.851174,0.868880],[5.248924,8.146018],[5.519460,-8.116249],[8.914782,8.454760],[6.922981,9.693275],[6.088012,9.429040],[9.629483,-7.471152],[-3.745006,0.080465],[4.451375,-9.012882],[-5.485800,1.030453],[-7.406750,9.907078],[-8.801245,-8.616889],[-8.476047,5.607460],[-5.563660,-3.455454],[-8.632874,4.784037],[4.141539,7.843203],[8.706044,2.977744],[2.394702,0.872855],[9.550604,9.749866],[9.844438,9.795766],[7.210122,3.043521],[-8.350923,4.849919],[4.358589,9.815851],[9.132768,3.305715],[-7.665243,-0.174700],[0.227495,8.571193],[3.031058,4.959310],[-2.930042,-7.784673],[9.893797,8.050153],[7.476623,-3.330756],[1.437288,-1.604053],[-5.941754,-0.353871],[-6.177976,3.983870],[-2.551309,-5.203246],[1.825429,5.528283],[6.926557,-5.029719],[8.316338,-5.017616],[-2.156285,1.454341],[-2.970844,8.070304],[4.463685,2.248893],[-7.902361,-7.679387],[6.901502,-1.411406],[-0.145934,-8.050292],[4.806880,-6.522660],[-7.940523,-2.602900],[3.786360,-8.832558],[0.410153,-8.765440],[8.822757,-4.365386],[-3.107285,7.969962],[-0.426387,3.379526],[5.089763,-1.151683],[-7.175620,3.835813],[1.643987,0.761538],[-2.522806,-3.394769],[7.086934,-9.433663],[-3.396167,3.393658],[6.658408,-8.136216],[-2.247964,-9.683687],[2.433578,2.957216],[8.905000,-3.780498],[-4.803441,8.007653],[4.875305,-5.965912],[6.264247,-7.455324],[3.719763,-8.046044],[-2.015144,-5.390121],[-4.828286,-7.392600],[2.611493,3.742805],[-2.921206,9.093368],[-1.891439,9.054794],[-1.588572,-9.080669],[2.928796,8.604025],[-7.584264,6.648720],[-3.291731,-8.943532],[4.461942,-1.224676],[-8.504196,3.119467],[3.168375,3.767587],[-3.418001,-6.884728],[-2.648345,-1.581298],[7.544114,-4.254508],[1.752088,-4.181396],[-0.119045,0.709878],[0.876202,-5.184395],[8.645062,-0.371788],[9.258099,-0.932703],[4.941889,-8.715548],[-4.908589,0.079402],[2.209414,1.694025],[1.480358,-5.038620],[-3.298857,5.857706],[-1.347787,5.307343],[-9.356960,-2.989996],[9.124724,7.614668],[3.162785,-8.730210],[-2.235238,0.982656],[-7.571488,-3.385968],[-0.052666,4.595082],[-2.157846,-2.770177],[-7.783711,5.387031],[-9.350599,-4.350997],[-6.839581,-3.973354],[-3.090213,9.304102],[-1.089459,-1.615496],[-8.135250,-7.519710],[8.509809,4.422103],[9.072198,-1.054559],[-2.833698,-8.214664],[-2.143279,-5.370958],[-5.726230,-5.844082],[-6.836159,6.404767],[6.671515,5.112185],[-5.454456,-0.511332],[6.303024,-3.876496],[-9.627343,-2.369409],[-8.537228,2.017217],[-0.305386,0.283257],[-8.240531,2.615464],[-5.958995,7.648050],[-6.078588,7.175202],[-9.400567,-1.606613],[1.549584,-2.512664],[-9.834333,-0.031990],[2.936862,3.065842],[-7.392786,-7.466128],[-1.362228,0.655958],[-1.735809,-6.080393],[8.766118,-0.076635],[-3.717626,4.952270],[7.327447,3.993118],[-3.109537,-0.231459],[9.991090,3.659839],[-6.340153,-7.616590],[2.751466,3.109254],[-1.529983,-6.750267],[9.236771,3.314957],[-7.883478,-6.489520],[4.164874,7.196686],[1.006905,3.177424],[0.593484,-8.950829],[9.373225,-2.581962],[-5.640252,-7.944181],[-1.168255,-8.357794],[4.179372,2.580792],[-6.456064,1.638077],[3.348890,-4.557627],[-1.275745,9.251524],[-3.022758,-7.968452],[-3.603751,8.746033],[-6.104634,8.134760],[-8.637684,1.009131],[4.182868,2.639190],[-0.821077,6.086755],[5.682293,-9.935077],[-7.914233,2.996795],[-0.747831,-8.795223],[0.912574,3.698875],[7.342484,-5.867603],[7.252350,-5.340581],[-3.174308,-2.423797],[-0.952797,-6.413709],[8.955098,-0.087926],[-2.505002,0.452070],[2.158377,0.720127],[1.840742,-8.656061],[1.490157,-7.451944],[-5.493319,8.120476],[5.028650,7.131820],[-2.888342,4.242248],[9.599771,9.434796],[-5.637929,-4.906331],[-4.616028,-3.464158],[-2.730739,-6.493060],[9.810339,-1.314354],[0.389699,-2.704789],[-0.703232,4.154006],[0.882631,-4.668838],[-4.338192,-5.482870],[-2.363197,-7.402703],[-5.832365,-0.603735],[5.472642,-2.131987],[-8.343467,6.244557],[-1.001868,-0.166369],[6.400291,6.569360],[-0.508563,2.145375],[4.344552,0.456339],[-2.194411,-8.078165],[-5.865338,-3.481967],[-5.206466,-4.925580],[7.407988,-6.809868],[3.017940,-7.592479],[-5.919933,7.000444],[-4.069579,5.524837],[-3.318961,4.363991],[-1.004904,9.905308],[2.278979,7.943471],[-4.920483,-9.004984],[1.079304,-1.145156],[7.861300,4.068732],[-8.539815,-1.248961],[-7.329306,2.269889],[3.347954,6.815955],[-2.047468,-5.343760],[-3.599148,8.605254],[-7.190713,2.933293],[2.086943,-6.456029],[-2.685900,-7.491878],[2.432969,3.824051],[5.146334,-5.577411],[-7.113885,-4.620528],[8.783820,-4.494961],[-8.582593,-7.583808],[4.041954,-2.021900],[9.192994,5.612146],[7.242780,1.559352],[-4.991257,-4.319293],[6.428463,-0.102615],[-1.401962,-9.801322],[-5.001714,-1.824148],[3.559757,3.130391],[-2.394113,9.346724],[-7.957672,6.126406],[-6.325740,-7.302891],[-0.956087,-7.594669],[-4.718777,0.616769],[-4.931807,-1.627757],[-0.497846,9.008722],[0.170897,-1.420776],[5.975226,-1.641432],[-4.182969,2.116106],[-4.745593,1.155340],[-0.181274,-8.579478],[3.563107,9.175323],[8.471931,-1.318296],[-9.626882,4.278983],[-4.063747,4.674170],[8.467719,5.461216],[-9.593369,3.126498],[4.070239,7.481126],[-4.430184,-1.124837],[6.914550,6.276120],[8.580247,-9.507956],[-9.134897,4.955461],[7.080576,-7.525511],[-1.375577,-3.580576],[-8.520242,3.691032],[-7.182655,7.247387],[-8.785546,-2.538956],[4.360310,5.945729],[2.860172,4.950845],[8.354842,-8.005668],[7.386322,-6.530748],[7.884991,-2.184999],[-6.880124,2.939406],[-4.159805,2.070588],[-9.583290,-7.714324],[-5.233888,-7.416806],[8.582293,8.222611],[-0.975169,2.001627],[-4.782614,-1.784759],[-8.980424,1.190374],[-5.186131,-3.909573],[1.026708,-0.488870],[8.683997,4.062034],[-4.991460,-9.831146],[4.805504,-1.181445],[6.399417,-1.867735],[1.163782,7.111753],[0.680983,-1.285974],[1.286067,1.121972],[1.781175,-7.847011],[-7.131152,-0.199957],[1.511959,8.706626],[-9.961050,2.589039],[5.321060,7.640512],[-1.008352,4.180187],[4.242588,0.210502],[-6.340677,6.071317],[-1.725220,-3.865448],[0.571214,9.217404],[2.318170,-7.556816],[8.205997,-8.007953],[9.320672,3.149934],[-9.980133,5.819362],[4.414954,5.007668],[5.670388,1.338216],[-2.194759,9.023577],[-6.557515,4.910389],[0.862170,0.157371],[5.321990,1.716728],[7.065238,-5.619369],[9.146008,1.588037],[-5.637328,-3.368308],[6.308999,-1.837588],[-4.156099,4.332904],[-2.562809,-3.434183],[-5.524544,-3.190158],[5.500705,-9.514562],[6.103213,7.824723],[9.207324,5.989200],[4.627569,5.407532],[0.460649,-6.587789],[3.557204,-9.527257],[-7.416227,8.602173],[-8.618244,-2.610796],[-1.345879,-7.881306],[8.159438,-7.997769],[-7.799429,5.092213],[-2.237679,-4.708890],[-0.756860,9.895729],[-2.649291,0.888996],[-6.689127,-6.291732],[7.585238,4.583896],[7.308260,2.002650],[2.490245,2.169181],[2.617335,5.057420],[-2.426508,3.713338],[-1.754179,-7.453575],[-4.625021,-4.936691],[0.313160,6.868097],[9.473796,-8.150677],[-9.721406,-7.561563],[7.800515,8.498505],[-0.472564,-2.795929],[-6.631361,3.546946],[-0.870281,6.124685],[2.949785,-1.810154],[-9.053208,7.128381],[-5.971608,5.312441],[3.006628,-3.609946],[5.369021,6.207832],[-2.520516,-1.370434],[5.281820,9.112558],[-3.423014,-3.240317],[-7.208646,-8.809150],[-0.437896,3.298112],[5.952620,4.211185],[-7.736826,4.611490],[9.388379,0.363303],[8.179527,-9.005750],[8.726463,-2.555473],[1.418219,8.711155],[4.384782,-9.953476],[-8.481903,-2.504547],[-5.196284,-6.995395],[2.559188,2.313292],[0.782838,-9.562848],[-0.617554,2.025753],[7.771897,8.324112],[9.523545,-5.864254]], dtype = "float64")#candidate|3902|(648, 2)|const|float64
var_3903 = relay.var("var_3903", dtype = "int16", shape = (252,))#candidate|3903|(252,)|var|int16
call_3899 = relay.TupleGetItem(func_1994_call(relay.reshape(const_3900.astype('int16'), []), relay.reshape(const_3901.astype('int16'), [10, 13, 16]), relay.reshape(const_3902.astype('float64'), [36, 36]), relay.reshape(var_3903.astype('int16'), [252,]), relay.reshape(call_3893.astype('float64'), [1, 432]), relay.reshape(const_3901.astype('int16'), [10, 13, 16]), relay.reshape(const_3902.astype('float64'), [36, 36]), ), 0)
call_3904 = relay.TupleGetItem(func_2003_call(relay.reshape(const_3900.astype('int16'), []), relay.reshape(const_3901.astype('int16'), [10, 13, 16]), relay.reshape(const_3902.astype('float64'), [36, 36]), relay.reshape(var_3903.astype('int16'), [252,]), relay.reshape(call_3893.astype('float64'), [1, 432]), relay.reshape(const_3901.astype('int16'), [10, 13, 16]), relay.reshape(const_3902.astype('float64'), [36, 36]), ), 0)
bop_3916 = relay.mod(uop_3862.astype('float64'), relay.reshape(var_3854.astype('float64'), relay.shape_of(uop_3862))) # shape=(4, 5, 1)
func_129_call = mod.get_global_var('func_129')
func_133_call = mutated_mod.get_global_var('func_133')
call_3929 = relay.TupleGetItem(func_129_call(relay.reshape(call_3893.astype('float64'), [9, 16, 3]), relay.reshape(call_3893.astype('float64'), [9, 16, 3]), ), 0)
call_3930 = relay.TupleGetItem(func_133_call(relay.reshape(call_3893.astype('float64'), [9, 16, 3]), relay.reshape(call_3893.astype('float64'), [9, 16, 3]), ), 0)
output = relay.Tuple([uop_3872,call_3893,var_3894,const_3895,call_3899,const_3900,const_3901,const_3902,var_3903,bop_3916,call_3929,])
output2 = relay.Tuple([uop_3872,call_3896,var_3894,const_3895,call_3904,const_3900,const_3901,const_3902,var_3903,bop_3916,call_3930,])
func_3931 = relay.Function([var_3854,var_3894,var_3903,], output)
mod['func_3931'] = func_3931
mod = relay.transform.InferType()(mod)
var_3932 = relay.var("var_3932", dtype = "float32", shape = (4, 5, 1))#candidate|3932|(4, 5, 1)|var|float32
var_3933 = relay.var("var_3933", dtype = "float64", shape = (196,))#candidate|3933|(196,)|var|float64
var_3934 = relay.var("var_3934", dtype = "int16", shape = (252,))#candidate|3934|(252,)|var|int16
output = func_3931(var_3932,var_3933,var_3934,)
func_3935 = relay.Function([var_3932,var_3933,var_3934,], output)
mutated_mod['func_3935'] = func_3935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4730 = relay.var("var_4730", dtype = "int32", shape = (5, 12, 3))#candidate|4730|(5, 12, 3)|var|int32
var_4731 = relay.var("var_4731", dtype = "int32", shape = (5, 12, 3))#candidate|4731|(5, 12, 3)|var|int32
bop_4732 = relay.not_equal(var_4730.astype('bool'), relay.reshape(var_4731.astype('bool'), relay.shape_of(var_4730))) # shape=(5, 12, 3)
output = bop_4732
output2 = bop_4732
func_4735 = relay.Function([var_4730,var_4731,], output)
mod['func_4735'] = func_4735
mod = relay.transform.InferType()(mod)
var_4736 = relay.var("var_4736", dtype = "int32", shape = (5, 12, 3))#candidate|4736|(5, 12, 3)|var|int32
var_4737 = relay.var("var_4737", dtype = "int32", shape = (5, 12, 3))#candidate|4737|(5, 12, 3)|var|int32
output = func_4735(var_4736,var_4737,)
func_4738 = relay.Function([var_4736,var_4737,], output)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4758 = relay.var("var_4758", dtype = "float64", shape = (15, 15, 9))#candidate|4758|(15, 15, 9)|var|float64
uop_4759 = relay.atanh(var_4758.astype('float64')) # shape=(15, 15, 9)
output = uop_4759
output2 = uop_4759
func_4761 = relay.Function([var_4758,], output)
mod['func_4761'] = func_4761
mod = relay.transform.InferType()(mod)
mutated_mod['func_4761'] = func_4761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4762 = relay.var("var_4762", dtype = "float64", shape = (15, 15, 9))#candidate|4762|(15, 15, 9)|var|float64
func_4761_call = mutated_mod.get_global_var('func_4761')
call_4763 = func_4761_call(var_4762)
output = call_4763
func_4764 = relay.Function([var_4762], output)
mutated_mod['func_4764'] = func_4764
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4801 = relay.const([[[-5,-3,-5,2,10,-6,8,-8,9,5],[5,5,6,4,-2,-7,7,-6,4,4],[10,10,1,6,10,-7,-7,-2,-8,4],[-1,9,-10,2,-4,9,-10,2,7,-1],[-9,-3,-1,-9,3,1,4,-4,8,8],[6,-8,6,-6,-7,-9,5,5,7,7],[9,6,9,-10,7,8,5,10,5,-4],[4,3,3,7,3,-10,1,8,5,6],[-3,-7,-2,10,4,-2,-5,-10,-2,-8],[9,7,-3,10,2,2,-2,-6,10,4],[9,-2,2,5,-9,10,3,9,-4,-8],[7,-2,10,3,-3,4,2,8,-10,-7],[8,-8,-7,-10,6,-7,-7,1,-6,-7],[-1,1,-7,-7,-4,5,-4,-4,9,-1],[-10,-7,-7,4,5,4,-2,-9,-6,5]],[[3,-9,-2,9,4,6,8,1,-6,-1],[-6,-4,10,9,-2,-3,6,-3,6,10],[1,6,-3,-7,3,7,2,10,-7,-9],[3,3,5,-8,7,3,-5,-9,5,5],[-5,9,-6,-1,-6,-9,2,8,7,8],[-5,-3,-9,9,8,4,-8,1,10,6],[-2,-4,-8,-10,10,10,1,8,-6,4],[2,-7,10,8,-10,5,9,6,6,6],[-6,-1,-2,6,5,1,-9,2,8,9],[-4,2,8,3,-6,7,-5,-10,7,-4],[8,-4,6,6,5,6,2,5,5,-3],[6,4,10,10,-8,2,2,2,-1,3],[-4,7,6,7,1,2,-9,1,-8,7],[-5,-3,6,-4,4,6,6,-5,5,-2],[9,4,-10,-7,7,-8,4,9,7,-6]],[[-1,-10,-6,-7,-4,-9,-5,-10,9,-7],[1,7,7,5,1,8,6,1,10,4],[9,8,6,2,5,-10,-7,10,-4,9],[-8,9,4,5,8,-9,-1,-2,2,10],[5,2,6,-5,10,-6,-2,10,5,-9],[3,1,-2,-10,-8,4,10,-7,-9,-9],[-8,-7,1,8,3,8,-5,1,-3,6],[5,7,5,4,-8,-4,9,9,-1,6],[4,1,5,1,-6,1,6,-7,-2,6],[3,6,-3,1,-2,7,3,9,1,7],[-8,7,6,6,4,-10,4,-8,-3,-3],[8,-2,8,-10,-3,4,-5,5,4,3],[-5,-4,9,8,-5,-6,10,3,-3,-5],[-1,-8,-2,2,-6,6,6,-2,6,-6],[10,-1,1,-8,-10,-1,-6,9,-3,5]],[[-4,3,-3,-4,5,-9,1,7,5,-8],[-2,5,-7,-7,-3,-2,-5,6,9,8],[-9,1,6,-2,5,7,-9,5,-7,8],[5,7,-4,10,3,7,3,-2,6,-4],[-5,8,3,2,8,-10,-2,4,1,1],[-10,-8,6,5,-5,3,-8,-4,8,1],[-7,-10,-9,7,8,8,8,-2,7,6],[-4,1,-4,5,10,6,8,-8,-10,-8],[3,-6,-3,5,6,1,-4,6,-7,8],[6,7,-1,2,8,-2,8,-3,-8,3],[2,8,6,4,2,3,7,3,-2,1],[-4,4,1,-5,8,3,-9,7,-2,1],[2,-5,1,-9,2,7,-3,10,-8,2],[-10,-5,-5,-8,-3,4,-10,-8,-6,6],[-7,6,3,3,-10,5,-10,-10,-5,6]],[[5,3,9,-8,8,-5,-6,6,-6,9],[6,5,-8,-4,3,-9,8,-6,5,3],[8,10,-10,3,9,-3,10,2,-3,9],[6,8,1,-2,10,2,7,3,-10,5],[-2,4,-6,-10,-5,-7,-6,-7,-1,-5],[-8,10,-1,-3,1,10,-6,-5,-5,1],[5,-2,-3,10,-8,4,2,-1,6,3],[4,3,10,-2,5,4,3,1,-5,-1],[-5,-10,8,-1,-7,-4,-8,1,-4,-2],[8,7,1,9,-8,-10,-5,10,-2,-8],[5,-8,-8,2,3,1,1,-5,5,-10],[-4,5,-9,-3,-8,-9,-4,8,7,-5],[4,-4,-3,9,2,-2,10,-6,-4,9],[1,-5,-5,8,-10,2,9,1,6,-2],[1,-5,-3,9,9,9,6,-4,8,-4]],[[-2,-4,-4,-5,-9,9,2,1,4,-5],[10,10,10,8,5,-6,-8,-10,-7,3],[1,-6,-5,-10,-6,9,-9,-3,-4,-6],[-3,-7,-5,5,1,10,1,7,-2,4],[-10,-6,-3,-9,-10,-7,-9,5,-3,-8],[2,8,-3,-9,10,2,6,8,-7,-8],[1,-9,2,-4,6,-1,9,10,-4,4],[-2,-3,-4,-6,7,-7,9,-1,-10,10],[-7,4,10,-8,5,-6,10,-3,-10,7],[-3,10,-10,7,-3,6,7,8,6,-10],[7,5,-7,4,-7,9,-5,4,-7,5],[-7,4,1,-9,-7,5,9,3,-8,5],[6,-5,-2,-6,9,1,-2,-8,-6,-9],[10,-8,6,4,6,9,-3,5,-3,-4],[-2,-8,9,-7,-7,-9,2,3,-7,-4]],[[-6,7,7,-3,-4,-5,-2,-1,1,8],[-4,-4,-4,-8,3,6,-5,9,6,4],[-10,4,-2,-5,-3,-2,1,5,4,-8],[5,8,-6,4,10,-2,7,-2,-3,3],[-3,-4,4,2,5,6,-6,10,3,6],[1,4,5,6,-5,3,5,-4,9,6],[-8,1,-9,5,-4,5,-10,1,5,3],[-8,9,4,-2,-9,-4,-3,10,8,3],[-8,-9,-9,4,-10,5,-3,-3,6,-9],[-4,-2,10,8,-7,3,-1,-4,3,-6],[2,2,6,2,1,-8,6,3,-2,-7],[-3,-4,1,7,-5,10,4,5,-7,3],[10,-4,-1,-2,7,-2,10,-9,6,-8],[10,-10,-9,-6,4,4,-9,10,-5,-3],[-2,5,10,2,1,-9,-7,5,8,2]],[[-1,5,7,1,6,4,-8,-1,-4,-6],[-4,-8,-6,6,-6,-5,7,6,3,-3],[1,10,-8,-8,3,-9,-1,-7,2,10],[-2,-5,-2,10,-10,6,-2,-3,-7,-3],[6,-7,-1,-3,-6,10,-7,6,10,7],[-10,-1,1,-1,4,-1,5,7,-2,8],[-3,-7,-5,-2,-8,-3,5,-9,10,7],[3,8,5,4,6,-7,-10,3,-7,8],[-7,-4,-9,-1,4,-6,-7,4,10,1],[-2,8,3,7,6,5,-8,-6,-1,-7],[8,-1,8,8,5,-5,-8,-7,2,-10],[1,2,4,8,8,10,1,-8,9,6],[-5,-1,1,5,3,-4,3,-2,7,-4],[-7,8,8,-6,3,-8,-4,3,-8,1],[-6,-4,2,-5,7,-3,-4,2,-8,-6]],[[2,-1,-5,-4,-5,-4,9,-9,3,-9],[3,-5,-2,8,7,2,2,-8,10,-1],[6,-5,1,-5,7,-7,5,-5,2,6],[9,-1,-1,-7,-8,5,4,-8,-3,-1],[8,-9,3,1,-9,-5,6,9,-2,8],[5,-5,-3,-5,-7,-7,6,9,9,-5],[8,7,3,-3,4,-6,-7,9,-5,8],[-3,-8,-10,10,-10,10,-2,-3,-4,-9],[-8,-7,-5,6,-3,3,-9,6,-1,-9],[-9,8,7,-6,8,1,-2,2,7,9],[-2,7,-5,-1,9,-5,10,-2,5,-1],[-5,10,1,5,7,9,8,1,6,10],[-1,-4,10,-9,5,-1,-2,-8,-10,2],[-8,-9,4,-2,1,8,8,-4,-9,7],[-2,-2,7,9,2,-7,10,-9,-5,9]],[[-2,7,-10,-10,3,-10,-6,-1,-2,-2],[-10,9,4,-8,-8,2,-3,-1,7,9],[1,-5,4,9,6,4,-10,-8,10,3],[1,7,-4,7,2,-3,7,-7,4,7],[-9,8,2,6,-9,10,-4,-6,-7,-2],[-10,9,3,-6,-6,-8,4,6,9,-9],[-3,-2,6,-7,-2,-2,-4,-10,9,-3],[-1,-1,7,2,-3,6,-8,5,8,-8],[1,-5,-1,9,4,-8,-4,-1,-8,9],[-4,9,5,7,-6,-6,-5,1,9,-9],[-5,-8,-7,10,-10,9,3,-7,2,2],[10,-6,-2,-4,-8,-1,-1,-9,-8,4],[-7,-3,2,9,-3,-3,-10,10,5,-2],[-7,3,-4,6,1,-9,4,-9,1,4],[8,10,4,1,-4,-2,7,-8,-8,-4]],[[-6,-9,6,-9,-3,-4,-10,-8,-4,6],[3,-10,-3,-3,3,-2,-4,-1,9,9],[3,-5,-10,9,-2,-6,3,7,-4,-7],[-10,8,-1,4,9,6,-9,-4,3,-6],[8,-2,-8,5,9,-1,-2,-3,-9,7],[-10,-1,1,1,9,-1,-9,-8,-1,-9],[6,1,2,-2,-9,-9,9,2,-5,6],[-10,1,-9,6,-1,-2,6,4,5,7],[3,7,-5,-4,9,4,-6,-7,-5,6],[-8,2,2,-2,-2,-3,4,-10,8,-1],[3,-6,-10,5,8,3,2,9,-1,-2],[-1,-1,6,6,-5,-9,-10,-1,-8,10],[-10,3,6,5,-5,4,4,1,-9,2],[-1,4,5,-6,2,10,-6,-3,5,4],[6,3,5,8,10,8,10,-7,-9,-2]],[[8,4,-5,10,6,-1,4,-2,10,3],[-1,-3,6,10,2,6,-3,6,9,9],[2,8,4,6,-4,-5,-1,8,6,-3],[-7,10,9,-8,-4,4,5,-3,-3,-4],[-8,-2,7,6,-5,4,10,-1,-4,9],[-6,-5,6,3,-6,6,5,-3,-7,6],[10,7,-7,-10,7,-8,-2,-5,10,-8],[4,10,-4,-2,4,7,1,5,-2,7],[-4,-2,8,5,-7,4,-8,1,-7,-7],[4,-4,-5,2,-2,7,-4,2,-8,1],[1,7,2,-3,10,10,3,-8,1,-6],[-9,-10,-3,8,-1,-9,6,2,-3,-7],[-7,8,8,-8,5,5,8,8,8,-5],[5,-1,-7,1,2,-2,2,10,-5,3],[4,-6,3,-6,-10,-10,-2,-9,6,10]],[[5,-6,1,1,6,-7,-1,-5,-7,-3],[-9,-5,6,3,-4,-1,-4,-10,-4,-2],[-4,-1,2,-7,-4,-9,5,-7,9,-2],[-2,2,1,10,10,4,-10,8,10,4],[-6,-8,-8,2,4,8,9,9,-1,-3],[-2,6,-3,-8,10,6,5,-6,8,8],[-4,-7,8,10,6,2,-2,2,5,-8],[-9,10,8,-7,-6,10,5,10,3,3],[-7,7,-7,7,-6,8,9,1,6,6],[5,9,-1,-3,2,4,-3,1,8,4],[2,1,-10,1,-10,-7,10,5,8,6],[4,-1,8,10,1,2,-4,7,3,1],[4,8,-3,-5,-1,-10,10,-5,-5,-6],[9,-10,-1,8,-4,7,4,-1,-10,-7],[-7,7,2,6,7,2,10,-8,8,4]],[[2,9,9,-4,-4,2,-1,9,-3,9],[-6,5,-2,4,-10,1,4,-9,-9,3],[-5,7,6,-9,10,8,-8,10,7,-1],[6,8,-3,-2,9,8,-2,9,-10,4],[6,-3,-4,-8,1,-5,-3,-5,-9,1],[-4,-1,-5,-2,-1,-4,-8,-3,2,-3],[-3,9,3,-6,-1,-10,7,1,6,-4],[2,3,-7,-2,10,-3,6,-10,-6,-1],[3,-3,-7,-2,-8,9,6,-9,2,3],[9,-6,-8,3,-3,10,-10,-8,-7,-9],[9,-6,1,10,-7,5,3,-10,-8,-4],[9,-10,-10,5,1,4,-1,-6,8,-6],[-3,2,2,6,6,4,-7,-4,5,4],[-3,-7,-1,-1,-1,3,-9,9,-6,3],[6,-7,2,-9,3,2,-2,-4,-1,1]],[[1,-7,10,10,-2,7,-10,10,10,-8],[3,-8,-8,7,7,-3,-3,-7,-6,-8],[-1,6,-3,-5,6,-5,5,1,8,-5],[9,1,8,-4,4,5,-8,9,7,-6],[7,-9,5,-6,-1,7,-6,-9,-6,-1],[6,-8,-6,8,10,6,5,10,7,-4],[4,8,2,8,-2,-10,6,-3,-6,-8],[6,6,1,-5,1,-7,-5,-6,-2,-4],[-5,3,6,-6,8,1,-7,-9,-2,-7],[8,-7,-10,-7,-9,-9,9,8,7,-10],[-5,2,7,-2,-8,1,4,-8,-4,7],[7,-10,7,4,1,10,4,-9,5,-1],[10,-10,1,-9,4,8,3,10,7,3],[-9,-1,-6,3,2,6,-5,6,-6,-10],[-2,-2,8,4,-7,1,-1,6,-5,-9]],[[-4,-8,-3,6,9,8,4,-6,-1,8],[-7,-3,-1,6,-9,-2,-1,-3,-7,2],[2,-9,1,9,-6,-1,5,-9,-2,-4],[-9,-3,9,5,-4,3,-10,-2,-8,2],[-9,-4,6,3,-10,8,-3,2,-6,7],[-5,-5,3,-5,-10,4,1,-6,-5,4],[3,-7,-2,8,5,7,8,-4,-1,1],[-5,3,-6,4,7,7,9,-6,-10,-10],[-2,6,10,10,-8,-3,7,-2,6,-2],[-1,4,-2,4,7,-8,2,6,5,-3],[6,-7,-3,-5,2,-1,8,-6,8,-2],[-3,-1,-6,5,4,4,6,-4,-2,-8],[-10,-1,6,1,-7,-6,-5,5,7,-3],[-10,2,10,-4,9,-9,5,-7,7,-5],[-1,5,10,-7,2,10,9,-7,-10,-3]]], dtype = "int64")#candidate|4801|(16, 15, 10)|const|int64
var_4802 = relay.var("var_4802", dtype = "int64", shape = (16, 15, 10))#candidate|4802|(16, 15, 10)|var|int64
bop_4803 = relay.greater_equal(const_4801.astype('bool'), relay.reshape(var_4802.astype('bool'), relay.shape_of(const_4801))) # shape=(16, 15, 10)
func_129_call = mod.get_global_var('func_129')
func_133_call = mutated_mod.get_global_var('func_133')
var_4807 = relay.var("var_4807", dtype = "float64", shape = (432, 1))#candidate|4807|(432, 1)|var|float64
call_4806 = relay.TupleGetItem(func_129_call(relay.reshape(var_4807.astype('float64'), [9, 16, 3]), relay.reshape(var_4807.astype('float64'), [9, 16, 3]), ), 0)
call_4808 = relay.TupleGetItem(func_133_call(relay.reshape(var_4807.astype('float64'), [9, 16, 3]), relay.reshape(var_4807.astype('float64'), [9, 16, 3]), ), 0)
output = relay.Tuple([bop_4803,call_4806,var_4807,])
output2 = relay.Tuple([bop_4803,call_4808,var_4807,])
func_4810 = relay.Function([var_4802,var_4807,], output)
mod['func_4810'] = func_4810
mod = relay.transform.InferType()(mod)
var_4811 = relay.var("var_4811", dtype = "int64", shape = (16, 15, 10))#candidate|4811|(16, 15, 10)|var|int64
var_4812 = relay.var("var_4812", dtype = "float64", shape = (432, 1))#candidate|4812|(432, 1)|var|float64
output = func_4810(var_4811,var_4812,)
func_4813 = relay.Function([var_4811,var_4812,], output)
mutated_mod['func_4813'] = func_4813
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4893 = relay.var("var_4893", dtype = "float64", shape = (4, 10, 15))#candidate|4893|(4, 10, 15)|var|float64
uop_4894 = relay.acosh(var_4893.astype('float64')) # shape=(4, 10, 15)
func_3339_call = mod.get_global_var('func_3339')
func_3343_call = mutated_mod.get_global_var('func_3343')
const_4903 = relay.const([2,-10,7,-4,-7,-1,3,-8,-1,1,10,-7,-1,2,3,1,-3,10,8,10,8,-2,5,-2,-5,-4,-8,-1,6,-4,-1,6,5,3,9,-1,-7,8,2,-8,2,2,-1,-9,-4,-9,10,-8], dtype = "int32")#candidate|4903|(48,)|const|int32
call_4902 = func_3339_call(relay.reshape(const_4903.astype('int32'), [3, 4, 4]), relay.reshape(const_4903.astype('int32'), [3, 4, 4]), )
call_4904 = func_3339_call(relay.reshape(const_4903.astype('int32'), [3, 4, 4]), relay.reshape(const_4903.astype('int32'), [3, 4, 4]), )
func_152_call = mod.get_global_var('func_152')
func_154_call = mutated_mod.get_global_var('func_154')
const_4908 = relay.const([-3,7,-6,10,-3,10,-3,3,-3,3,3,-7,8,-2,-3,8,3,-1,2,-1,-6,-4,3,-7,2,-10,-10,2,9,10,10,9,-5,4,-2,2,-4,-8,-6,5,-7,-3,-2,-6,8,4,-5,-5,3,-8,4,2,-10,7,7,4,-9,-10,3,-1,-1,-10,7,-9,-5,-5,8,-9,10,-4,9,1,-8,-8,-7,1,5,-6,-9,5,1,2,-9,-10,8,6,-6,5,7,5,2,2,9,10,-1,1,6,5,-6,-4,1,-2,-6,10,-8,-7,-3,8,5,8,-4,1,-2,-5,1,5,-9,8,-3,9,5,4,5,10,1,-9,6,-6,6,9,9,9,10,-5,8,-6,2,-3,-3,10,-10,10,-8,-6,-8,-2,-8,8,10,5,-7,-5,3,7,-10,2,3,5,10,8,6,-8,-10,-6,-10,-10,-4,-6,-2,4,10,-9,-10,8,6,10,5,6,-4,8,3,-1,-3,-1,3,-7,1,-8,10,1,-10,-8,10,-2,6,8,-10,-4,9,-9,3,5,-2,7,7,-10,10,3,1,4,-5,-5,-5,-7,-6,-7,2,5,3,8,9,-10,-7,6,-8,5,5,10,1,-4,-6,6,-3,4,10,-7,-1,7,-9,5,-3,5,-10,-8,4,8,3,8,4,1,3,4], dtype = "int16")#candidate|4908|(252,)|const|int16
call_4907 = func_152_call(relay.reshape(const_4908.astype('int16'), [14, 2, 9]))
call_4909 = func_152_call(relay.reshape(const_4908.astype('int16'), [14, 2, 9]))
func_4761_call = mod.get_global_var('func_4761')
func_4764_call = mutated_mod.get_global_var('func_4764')
var_4919 = relay.var("var_4919", dtype = "float64", shape = (2025,))#candidate|4919|(2025,)|var|float64
call_4918 = func_4761_call(relay.reshape(var_4919.astype('float64'), [15, 15, 9]))
call_4920 = func_4761_call(relay.reshape(var_4919.astype('float64'), [15, 15, 9]))
bop_4940 = relay.divide(uop_4894.astype('float64'), relay.reshape(var_4893.astype('float64'), relay.shape_of(uop_4894))) # shape=(4, 10, 15)
uop_4948 = relay.erf(bop_4940.astype('float32')) # shape=(4, 10, 15)
uop_4958 = relay.cos(uop_4894.astype('float32')) # shape=(4, 10, 15)
bop_4963 = relay.greater(uop_4894.astype('bool'), relay.reshape(uop_4958.astype('bool'), relay.shape_of(uop_4894))) # shape=(4, 10, 15)
bop_4969 = relay.equal(uop_4958.astype('bool'), relay.reshape(uop_4894.astype('bool'), relay.shape_of(uop_4958))) # shape=(4, 10, 15)
bop_4974 = relay.logical_and(bop_4940.astype('bool'), relay.reshape(uop_4948.astype('bool'), relay.shape_of(bop_4940))) # shape=(4, 10, 15)
bop_4985 = relay.logical_or(uop_4894.astype('bool'), relay.reshape(bop_4963.astype('bool'), relay.shape_of(uop_4894))) # shape=(4, 10, 15)
bop_4991 = relay.mod(uop_4894.astype('float32'), relay.reshape(bop_4963.astype('float32'), relay.shape_of(uop_4894))) # shape=(4, 10, 15)
var_4998 = relay.var("var_4998", dtype = "float32", shape = (4, 10, 15))#candidate|4998|(4, 10, 15)|var|float32
bop_4999 = relay.not_equal(bop_4991.astype('bool'), relay.reshape(var_4998.astype('bool'), relay.shape_of(bop_4991))) # shape=(4, 10, 15)
output = relay.Tuple([call_4902,const_4903,call_4907,const_4908,call_4918,var_4919,bop_4969,bop_4974,bop_4985,bop_4999,])
output2 = relay.Tuple([call_4904,const_4903,call_4909,const_4908,call_4920,var_4919,bop_4969,bop_4974,bop_4985,bop_4999,])
func_5018 = relay.Function([var_4893,var_4919,var_4998,], output)
mod['func_5018'] = func_5018
mod = relay.transform.InferType()(mod)
var_5019 = relay.var("var_5019", dtype = "float64", shape = (4, 10, 15))#candidate|5019|(4, 10, 15)|var|float64
var_5020 = relay.var("var_5020", dtype = "float64", shape = (2025,))#candidate|5020|(2025,)|var|float64
var_5021 = relay.var("var_5021", dtype = "float32", shape = (4, 10, 15))#candidate|5021|(4, 10, 15)|var|float32
output = func_5018(var_5019,var_5020,var_5021,)
func_5022 = relay.Function([var_5019,var_5020,var_5021,], output)
mutated_mod['func_5022'] = func_5022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5256 = relay.var("var_5256", dtype = "float32", shape = (9, 16, 7))#candidate|5256|(9, 16, 7)|var|float32
uop_5257 = relay.acos(var_5256.astype('float32')) # shape=(9, 16, 7)
func_2529_call = mod.get_global_var('func_2529')
func_2531_call = mutated_mod.get_global_var('func_2531')
const_5265 = relay.const([[-7,9,-5,8,-5,-10,6,8,-8,-5,-1,-10,-3,1,-2,-3,1,-5,-10,2,-1,10,-10,9,3,-2,-4,7,1,-7,4,1,6,2,3,1,8,3,-10,-8,6,-5,4,-6,-9,7,-7,-9,-6,-8,4,-3,1,-4,10,-3,-2,5,-10,3,7,3,10,-8,-2,7,6,-2,-8,7,8,4,-8,-8,-1,-8,-2,-4,-4,1,9,-3,10,9,2,5,5,2,8,2,4,10,2,10,-6,-1,1,-7,1,-8,-3,-5,-2,-4,10,2,7,-9,7,4,-4,-8,10,5,-3,-4,-6],[5,-9,-2,6,-2,5,-1,-5,-6,1,-4,-9,-10,-2,9,7,-7,4,7,3,-4,-3,1,-1,6,2,2,-9,-4,-1,10,-10,4,8,5,-1,10,-3,3,-1,-5,-1,4,1,10,2,8,6,-5,5,6,8,-1,10,-4,-7,1,8,-7,-3,9,-6,9,-2,8,4,-5,-1,-3,2,-1,-6,4,-8,-3,9,-10,2,9,-4,1,-3,10,3,-7,1,-2,10,3,9,3,-9,-3,10,4,10,-4,10,-9,7,5,-3,9,5,3,9,1,9,-8,7,5,-5,-2,-2,9,-6,9],[3,1,9,3,-2,-7,-2,1,7,9,-4,-9,2,6,-2,5,5,5,-4,4,-7,-6,-6,-8,-3,-6,-10,1,-3,-9,-4,-2,2,2,8,-9,-7,-3,2,-5,-10,9,-6,-1,-9,-5,5,-9,5,-3,7,9,1,-6,-5,7,2,7,-10,6,-9,2,8,-2,-5,7,1,8,10,-4,-5,-2,8,-4,10,-8,10,-4,1,1,-5,10,6,9,-3,1,-5,-6,2,1,-1,10,9,10,-4,-10,1,6,-9,5,7,2,9,-4,8,-5,-4,-10,1,-7,-3,3,-6,-3,-3,6,6],[-1,-6,8,-10,-2,-7,9,4,-4,-10,1,5,10,-4,-7,4,5,-3,-3,5,-7,-10,2,-2,-9,5,-8,-7,10,5,-2,-7,9,10,-1,9,-9,6,-5,10,-3,-5,7,1,3,-5,9,2,2,-1,-10,2,-3,3,-9,1,9,-4,8,-4,-5,6,2,1,-3,-6,-7,2,-1,6,-9,-3,-3,-7,-6,1,-3,-5,-6,-9,-1,10,7,5,-7,7,8,-6,-9,-1,5,6,1,-3,8,-6,8,6,-7,1,-4,2,10,-4,-1,6,8,-2,-3,-8,6,1,-1,7,-2,4,9],[-7,-3,10,9,-10,7,-8,6,3,-9,5,-5,-7,-3,10,-8,2,1,5,-7,-7,-6,3,10,-3,-2,10,-3,2,-10,9,-3,-9,-5,4,-7,4,-5,-5,-7,-7,-1,6,-4,1,3,1,-4,-10,-3,1,-5,-5,-4,-7,-3,9,1,-7,4,-8,9,-4,-10,-10,-9,6,5,-6,4,-1,-10,-8,-6,6,2,-8,5,-1,-6,-9,3,-3,-9,-9,-4,7,-1,-3,-1,-8,2,3,7,2,9,10,-9,10,4,8,-2,-10,-3,3,-1,-6,-6,-10,-6,-6,-6,-7,-1,-10,8,3],[-4,-6,-7,10,7,-2,-6,6,7,-7,10,7,-10,-6,-4,10,-3,4,5,-9,1,-7,-6,-10,-5,-5,10,-6,-8,3,-3,-9,-1,-6,8,-1,9,-7,-1,7,4,10,-3,-8,-3,2,-4,-2,-5,-1,6,-3,10,-9,6,8,5,6,8,-8,5,-7,-10,-3,-9,-9,6,9,1,-10,3,7,-8,7,-8,-7,4,3,-2,10,-3,-6,10,-7,-5,-8,-7,-8,1,-2,-2,-4,-2,-2,-5,4,1,7,9,-4,2,-3,-8,-5,8,-8,6,-7,-10,1,-1,-1,8,4,3,10,-10],[6,7,9,-9,-6,-8,3,9,-3,-2,-3,-4,6,6,7,-10,-6,-4,-2,1,-10,-10,8,9,-10,-8,9,-9,-3,2,3,-3,-1,-3,2,1,-4,8,-10,3,-8,-4,-5,4,10,-8,-10,-1,7,-3,7,-4,-5,-10,9,-9,-6,-8,6,1,-9,-8,-1,7,-10,-1,-4,-7,-7,-8,-2,-5,-7,-3,6,10,4,-2,6,5,2,4,-8,9,-8,2,-3,10,10,5,-9,1,3,-10,-5,-5,-8,-4,-10,4,9,7,4,4,-5,10,-3,9,4,-5,4,-5,10,3,-2,5,-2]], dtype = "int16")#candidate|5265|(7, 117)|const|int16
call_5264 = relay.TupleGetItem(func_2529_call(relay.reshape(const_5265.astype('int16'), [819,])), 2)
call_5266 = relay.TupleGetItem(func_2531_call(relay.reshape(const_5265.astype('int16'), [819,])), 2)
output = relay.Tuple([uop_5257,call_5264,const_5265,])
output2 = relay.Tuple([uop_5257,call_5266,const_5265,])
func_5274 = relay.Function([var_5256,], output)
mod['func_5274'] = func_5274
mod = relay.transform.InferType()(mod)
var_5275 = relay.var("var_5275", dtype = "float32", shape = (9, 16, 7))#candidate|5275|(9, 16, 7)|var|float32
output = func_5274(var_5275)
func_5276 = relay.Function([var_5275], output)
mutated_mod['func_5276'] = func_5276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5295 = relay.var("var_5295", dtype = "uint64", shape = ())#candidate|5295|()|var|uint64
const_5296 = relay.const([[[-10,-2,7,-5,-4,6,1,4,1,5],[9,-1,-8,-7,-8,-2,9,-5,9,7],[10,-1,-5,-6,-6,-2,-2,10,-6,2],[-4,-10,-10,9,-6,5,10,-8,2,1],[-6,-5,-8,10,-1,-5,1,-8,-2,-10],[-5,-8,-10,10,-10,-2,-6,5,-1,7],[9,9,-1,1,-3,-6,6,3,-8,-10],[6,5,8,-9,4,2,-9,-1,7,-6],[5,-1,3,8,9,-2,-7,-8,-4,5]],[[4,-1,-10,5,-6,-10,-2,1,2,-9],[-7,-7,-5,-1,-1,-8,6,8,-4,3],[-4,1,1,3,1,-6,2,-3,8,5],[2,4,3,-2,-7,-8,-6,-8,1,10],[-3,10,-10,2,9,-7,3,7,-5,4],[3,-4,-1,8,6,-3,6,6,-10,-2],[-6,-10,-10,6,9,9,3,3,-8,5],[-10,-4,-4,10,9,-3,-1,-5,-3,6],[2,-3,1,-9,8,-4,2,5,-10,-2]],[[-9,5,9,10,-4,3,4,-3,6,3],[-3,2,-6,-3,-4,-5,-9,2,4,-3],[2,4,-4,10,-8,3,1,9,4,4],[-9,2,1,8,-8,2,9,-8,5,-4],[-3,6,-4,-1,-9,8,-4,-5,-4,8],[6,-6,10,-7,-1,7,9,10,-10,-4],[8,6,4,-6,-6,4,6,6,-1,-10],[5,-10,3,-8,3,-4,5,2,3,8],[4,-3,2,-8,-4,7,8,-4,7,5]],[[-1,2,9,5,-4,1,-7,-2,-4,1],[-3,-7,-6,-3,10,-7,-9,9,5,-9],[-7,10,-5,-2,-5,6,1,-8,-4,-4],[-8,-7,9,4,10,-2,-6,-2,5,9],[-6,5,-2,-6,3,-3,8,10,8,1],[7,-8,6,-3,3,-10,-1,-6,-7,9],[2,-10,4,8,-4,-3,-2,4,-10,-8],[1,3,2,-2,2,6,-5,-6,6,10],[-3,-1,-3,-3,-3,5,-9,-5,8,8]],[[1,5,10,-5,-5,6,-8,-5,3,-4],[-8,-2,9,-8,9,8,1,7,7,10],[7,-10,-3,7,-2,4,-4,-9,-6,-2],[4,-4,-5,8,1,2,6,-4,-8,6],[-6,1,7,-2,8,5,-4,-9,-9,9],[-7,-9,-6,1,-6,5,9,1,-8,8],[-7,-10,-3,-1,7,4,2,8,-8,3],[8,-7,6,3,-3,9,-6,-2,-7,-1],[3,-2,-9,-7,9,-3,10,4,-6,-9]],[[7,-10,9,2,-4,-2,-10,-6,-5,8],[-2,3,-8,7,3,4,6,-1,-5,10],[-5,8,9,4,4,-7,10,-8,6,-4],[-3,-9,2,3,2,-7,-8,-4,-7,-10],[-10,-9,9,-1,-3,6,-5,3,4,3],[1,-4,-4,-7,-7,-4,-6,-9,8,-1],[-7,5,9,-9,7,-8,-1,7,-9,6],[1,-2,1,-1,-3,10,-7,-2,-6,-9],[3,1,-10,-9,5,4,5,5,7,-5]],[[-8,2,3,-4,-7,1,-2,3,-5,10],[10,-7,8,-1,8,7,4,-3,-3,5],[2,9,-10,-6,7,-4,10,1,5,-4],[1,-1,1,9,5,-6,-10,2,9,5],[-6,4,2,3,-9,-10,-10,-5,-7,7],[-8,8,7,-10,-10,4,-5,1,4,-5],[-2,-5,-8,-5,5,-6,2,3,-5,-8],[9,2,-8,1,8,-9,3,-5,6,-7],[-2,6,-8,-5,-3,2,3,-5,-7,-7]],[[6,-7,1,9,2,8,8,7,-4,-1],[-5,10,6,-3,6,8,-5,1,9,-3],[6,4,-7,4,-7,-10,-7,-2,-10,6],[4,-5,2,-9,6,1,-5,-9,-10,-6],[7,9,8,7,-6,-3,-8,3,6,1],[4,-7,-9,-1,-9,-5,-3,-10,-6,1],[1,-6,4,-1,1,-4,5,6,-8,-2],[4,-3,4,9,10,3,6,4,-1,2],[-6,9,-6,5,1,-10,9,-3,-7,-2]],[[-6,10,-6,-2,9,9,10,9,4,-9],[5,4,-3,6,1,6,-3,-9,-1,6],[-5,-7,6,3,2,-6,1,1,-7,3],[3,5,-8,-6,5,10,8,7,5,-5],[1,-4,-1,10,9,8,-5,-9,9,-3],[-9,6,-2,5,-4,6,10,-2,4,3],[-5,7,-5,-2,-4,-9,-10,4,10,9],[8,1,-5,2,-3,3,3,-8,8,3],[7,-7,-8,8,10,2,-5,7,4,-1]],[[2,6,4,6,-8,-4,-2,3,-1,6],[10,-9,-10,7,4,2,-2,3,-2,7],[-7,-4,-3,-7,-8,6,-4,5,1,-10],[7,-3,10,-4,5,4,-6,1,7,-6],[4,5,8,1,-1,6,-5,-9,-5,9],[8,-3,2,-4,3,-4,-3,-6,8,-10],[-10,-10,-5,10,-2,1,-2,4,8,3],[-9,10,-5,-3,-4,5,-7,-1,-4,4],[9,7,8,7,1,-9,6,-2,-6,7]],[[8,-7,7,-9,8,6,-7,-1,4,2],[6,6,3,-5,5,-10,-4,-7,-5,-9],[-8,-10,-7,3,-9,-7,-8,-8,-4,-9],[-7,-1,-8,-1,5,-5,6,-1,8,-4],[-8,-3,3,9,-6,-6,9,-5,8,-1],[-7,-7,4,8,1,-1,3,7,-3,5],[5,4,1,-3,5,-1,10,9,-5,8],[-9,6,2,9,-10,-7,-6,-8,-8,5],[5,-8,-3,1,-4,-5,-9,-4,-4,8]],[[-5,-6,-6,9,5,1,-1,7,6,3],[8,-2,9,-9,8,7,-4,6,9,-6],[-1,-6,-6,6,2,3,-7,8,2,1],[9,-5,10,3,-1,6,7,-4,-5,-8],[-2,-9,-7,-7,6,-3,3,-8,-1,4],[3,6,2,-5,-2,5,4,-3,1,-4],[-9,2,4,6,-2,-9,-10,4,-5,-2],[2,1,1,10,5,9,-10,-7,-2,4],[-3,8,8,-9,1,-1,7,2,5,2]],[[-6,5,3,-2,5,10,7,-5,-9,1],[4,-4,2,-10,8,1,4,-9,10,-3],[-5,4,10,10,-4,9,1,-10,9,-3],[4,8,10,5,7,4,3,-6,9,-10],[5,10,3,10,-2,9,-7,-1,4,-8],[6,-5,-1,-1,4,-3,3,6,7,-9],[1,2,5,-6,1,-10,-5,7,-5,-6],[2,-10,7,2,-4,-1,-7,2,8,10],[1,8,4,-9,6,10,7,2,7,-5]]], dtype = "uint64")#candidate|5296|(13, 9, 10)|const|uint64
bop_5297 = relay.add(var_5295.astype('uint64'), const_5296.astype('uint64')) # shape=(13, 9, 10)
output = bop_5297
output2 = bop_5297
func_5300 = relay.Function([var_5295,], output)
mod['func_5300'] = func_5300
mod = relay.transform.InferType()(mod)
var_5301 = relay.var("var_5301", dtype = "uint64", shape = ())#candidate|5301|()|var|uint64
output = func_5300(var_5301)
func_5302 = relay.Function([var_5301], output)
mutated_mod['func_5302'] = func_5302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5354 = relay.var("var_5354", dtype = "uint32", shape = (6, 16, 3))#candidate|5354|(6, 16, 3)|var|uint32
var_5355 = relay.var("var_5355", dtype = "uint32", shape = (6, 16, 3))#candidate|5355|(6, 16, 3)|var|uint32
bop_5356 = relay.maximum(var_5354.astype('uint32'), relay.reshape(var_5355.astype('uint32'), relay.shape_of(var_5354))) # shape=(6, 16, 3)
func_3339_call = mod.get_global_var('func_3339')
func_3343_call = mutated_mod.get_global_var('func_3343')
const_5360 = relay.const([[9,-1,10,9,-8,-4,-2,5,-3,-9,-3,6],[-9,-8,4,-10,8,9,5,-2,10,-1,-10,-6],[-3,-5,-6,-8,6,8,10,3,1,-7,-2,9],[-3,-4,7,6,-7,-6,4,9,-10,9,5,9]], dtype = "int32")#candidate|5360|(4, 12)|const|int32
call_5359 = func_3339_call(relay.reshape(const_5360.astype('int32'), [3, 4, 4]), relay.reshape(const_5360.astype('int32'), [3, 4, 4]), )
call_5361 = func_3339_call(relay.reshape(const_5360.astype('int32'), [3, 4, 4]), relay.reshape(const_5360.astype('int32'), [3, 4, 4]), )
func_3580_call = mod.get_global_var('func_3580')
func_3584_call = mutated_mod.get_global_var('func_3584')
const_5369 = relay.const([10,6,-6,2,3,-4,1,9,-1,7,2,8,5,-10,-8,1,-4,-1,5,4,3,-9,6,-8,-8,8,2,5,-5,10,-1,9,-8,-8,4,-1,3,-9,-9,-3,-1,6,-8,1,-7,7,1,-5,-6,2,-8,5,4,-8,3,1,-6,-5,9,8,-8,7,-10,-8,7,4,-4,7,-5,10,-8,-1,-7,9,-4,-5,-1,-2,5,5,2,7,10,-2,9,-4,3,1,4,8,-8,-2,5,2,-6,4,-8,-3,-7,5,9,2,5,-3,-5,10,-6,-4,8,1,-5,-3,-7,1,-1,7,4,-1,-7,9,-7,-7,3,4,-9,7,-1,5,7,2,-4,8,-10,-8,-5,-1,6,-5,-1,-10,7,4,-8,-6,7,-2,8,-9,-1,7,6,10,8,-2,-6,1,10,1,-6,-4,4,-6,-10,-1,3,-8,-8,2,-4,6,7,-3,-3,-6,1,6,7,-10,-8,-9,10,2,6,3,6,-1,-5,9,-7,10,6,5,-9,-2,7,8,9,-5,-1,6,-8,-10,9,2,4,-8,-10,-4,10,-6,7,4,3,10,10,3,3,10,3,-2,5,-9,-2,6,9,9,-7,4,4,5,-2,-9,-2,-6,2,5,-7,6,7,1,5,4,3,-1,-3,-3,3,-7,3,-1,3,-4,-10,2,-2,3,-3,7,-6,4,-3,2,1,4,-7,6,-10,-2,1,-8,-5,8,2,5,-4,-5,8,-6,9,10,4,7,8,-6,3,10,7,-7,5,-6,3,-9,-1,9,-2,7,8,-2,3,-5,-2,-4,5,7,-5,1,4,-10,-3,-6,-1,3,-7,4,-10,4,-4,-2,-2,-8,-2,7,-9,3,-8,-8,-10,-8,5,6,-3,-9,1,-7,-2,3,6,-2,-9,-8,1,-7,7,9,7,9,-8,-6,-2,3,8,8,8,-8,4,-3,1,8,-5,-4,-4,10,-3,-10,-9,-9,-1,-2,6,5,5,-4,7,-6,1,-3,-5,5,-1,-5,8,-9,2,7,1,-9,-9,5,-7,8,-3,2,-6,-5,4,1,-3,-2,-2,-4,-10,-9,6,-4,-5,2,5,-5,3,-2,-10,-8,3,-2,8,8,-9,-8,3,1,-6,7,6,-2,1,-5,-7,8,2,5,-5,9,-3,10,-9,-5,3,6,-5,-8,2,-9,-6,-9,6,8,8,-5,4,-7,8,8,6,-1,-2,-7,-2,-5,5,7,-9,-3,2,-8,-3,9,-8,3,9,-5,2,-5,-10,1,6,7,2,-2,7,-3,6,-2,-1,10,-8,2,7,-2,-10,4,-2,-9,10,3,3,6,9,4,4,1,9,9,1,-4,-8,-6,9,9,9,5,-9,1,-2,8,-1,5,2,-7,-9,5,1,-2,-1,10,-4,-3,-9,-10,3,6,-9,-5,8,6,-5,9,-6,-6,3,-8,4,-9,-8,-5,-9,5,3,8,2,-1,7,-2,-10,-10,6,-9,1,-5,-8,-10,-1,-4,-6,6,-8,-4,-6,10,7,-8,-9,-5,-6,1,-3,3,-7,8,1,1,2,8,4,-1,-9,-3,-7,-1,1,9,3,7,8,3,-1,3,-2,1,-7,4,-5,-4,-7,5,5,1,-3,9,-6,-3,7,-4,4,-4,10,-9,-6,7,-8,-3,-4,2,-5,-1,3,1,1,-8,1,-8,-9,7,-9,-1,7,-1,-10,-10,-4,-7,-6,-7,-4,-2,9,7,6,-5,10,-6,-10,10,10,5,1,-2,-10,4,6,-8,-7,-4,1,-9,-5,-10,2,5,9,9,-1,1,-2,5,10,-4,10,-9,7,-6,5,-9,5,10,-5,-8,-1,-8,-1,-10,6,-9,4,-1,-7,5,-10,-10,10,1,-8,2,7,2,-2,-10,-8,7,8,-7,5,-9,-8,-2,-9,-4,3,6,-5,-9,-3,-5,9,-5,2,-1,3,1], dtype = "uint16")#candidate|5369|(728,)|const|uint16
call_5368 = relay.TupleGetItem(func_3580_call(relay.reshape(const_5369.astype('uint16'), [7, 13, 8]), relay.reshape(const_5369.astype('uint16'), [7, 13, 8]), ), 1)
call_5370 = relay.TupleGetItem(func_3584_call(relay.reshape(const_5369.astype('uint16'), [7, 13, 8]), relay.reshape(const_5369.astype('uint16'), [7, 13, 8]), ), 1)
func_5300_call = mod.get_global_var('func_5300')
func_5302_call = mutated_mod.get_global_var('func_5302')
var_5378 = relay.var("var_5378", dtype = "uint64", shape = ())#candidate|5378|()|var|uint64
call_5377 = func_5300_call(relay.reshape(var_5378.astype('uint64'), []))
call_5379 = func_5300_call(relay.reshape(var_5378.astype('uint64'), []))
func_2529_call = mod.get_global_var('func_2529')
func_2531_call = mutated_mod.get_global_var('func_2531')
var_5382 = relay.var("var_5382", dtype = "int16", shape = (819,))#candidate|5382|(819,)|var|int16
call_5381 = relay.TupleGetItem(func_2529_call(relay.reshape(var_5382.astype('int16'), [819,])), 3)
call_5383 = relay.TupleGetItem(func_2531_call(relay.reshape(var_5382.astype('int16'), [819,])), 3)
bop_5387 = relay.bitwise_or(var_5382.astype('uint64'), var_5378.astype('uint64')) # shape=(819,)
output = relay.Tuple([bop_5356,call_5359,const_5360,call_5368,const_5369,call_5377,call_5381,bop_5387,])
output2 = relay.Tuple([bop_5356,call_5361,const_5360,call_5370,const_5369,call_5379,call_5383,bop_5387,])
func_5397 = relay.Function([var_5354,var_5355,var_5378,var_5382,], output)
mod['func_5397'] = func_5397
mod = relay.transform.InferType()(mod)
mutated_mod['func_5397'] = func_5397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5397_call = mutated_mod.get_global_var('func_5397')
var_5399 = relay.var("var_5399", dtype = "uint32", shape = (6, 16, 3))#candidate|5399|(6, 16, 3)|var|uint32
var_5400 = relay.var("var_5400", dtype = "uint32", shape = (6, 16, 3))#candidate|5400|(6, 16, 3)|var|uint32
var_5401 = relay.var("var_5401", dtype = "uint64", shape = ())#candidate|5401|()|var|uint64
var_5402 = relay.var("var_5402", dtype = "int16", shape = (819,))#candidate|5402|(819,)|var|int16
call_5398 = func_5397_call(var_5399,var_5400,var_5401,var_5402,)
output = call_5398
func_5403 = relay.Function([var_5399,var_5400,var_5401,var_5402,], output)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5423 = relay.var("var_5423", dtype = "float64", shape = (1, 9, 12))#candidate|5423|(1, 9, 12)|var|float64
uop_5424 = relay.exp(var_5423.astype('float64')) # shape=(1, 9, 12)
output = uop_5424
output2 = uop_5424
func_5428 = relay.Function([var_5423,], output)
mod['func_5428'] = func_5428
mod = relay.transform.InferType()(mod)
var_5429 = relay.var("var_5429", dtype = "float64", shape = (1, 9, 12))#candidate|5429|(1, 9, 12)|var|float64
output = func_5428(var_5429)
func_5430 = relay.Function([var_5429], output)
mutated_mod['func_5430'] = func_5430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5506 = relay.var("var_5506", dtype = "float32", shape = (9, 11, 5))#candidate|5506|(9, 11, 5)|var|float32
uop_5507 = relay.atanh(var_5506.astype('float32')) # shape=(9, 11, 5)
output = uop_5507
output2 = uop_5507
func_5510 = relay.Function([var_5506,], output)
mod['func_5510'] = func_5510
mod = relay.transform.InferType()(mod)
var_5511 = relay.var("var_5511", dtype = "float32", shape = (9, 11, 5))#candidate|5511|(9, 11, 5)|var|float32
output = func_5510(var_5511)
func_5512 = relay.Function([var_5511], output)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5523 = relay.const([[[-10,-8,9,6,7,-1,-3,8,-8,5,-9],[-7,-5,1,7,5,-8,6,10,-5,1,9],[-4,9,-7,5,-5,-7,1,2,-2,5,10],[9,5,-7,1,-2,3,8,8,-8,-8,-5],[-2,6,6,8,-3,7,5,4,-2,-1,-8],[6,2,10,10,-8,-4,10,6,-5,-7,4],[-8,7,5,-4,-7,-10,8,-1,-7,3,-5],[-1,-1,9,9,-9,4,-7,-4,-3,-5,1],[2,4,-5,1,9,1,8,-9,5,-6,-4],[7,7,-10,-2,-8,5,2,-8,-9,4,-9],[2,-9,-8,8,-9,-1,-5,-9,-1,1,-8],[7,-7,2,-8,4,-3,-9,-10,-4,-1,5],[5,5,10,4,-1,3,7,1,-8,-5,8],[1,-8,6,9,5,5,10,8,-3,-2,8]],[[4,5,4,3,6,1,1,3,-7,4,10],[9,-7,-6,-1,-2,-4,4,-9,-2,-3,10],[10,-1,-4,1,10,-2,2,-10,4,5,9],[6,8,-2,2,-2,5,-9,2,-5,-10,1],[-6,-5,1,8,1,7,-3,10,-2,6,-10],[8,-7,-4,1,8,-6,-8,5,8,-2,-7],[5,8,2,7,-9,3,10,-2,5,-8,3],[10,4,3,-1,8,-8,5,10,-3,7,-6],[5,5,8,-1,-3,-8,-6,-2,-1,-7,9],[-10,-2,-10,9,5,4,4,-7,-2,5,-7],[2,10,-2,-4,-8,1,-5,10,-9,-8,7],[4,6,-4,7,-3,-1,-2,-1,5,1,1],[1,2,8,-4,1,-1,-5,7,6,-10,-5],[1,9,5,-6,-5,-8,6,6,-3,9,3]],[[6,-5,-2,-1,-9,2,10,7,-4,2,9],[9,7,10,5,9,5,-6,-1,3,9,6],[-5,-5,5,-2,-5,-8,5,6,1,-3,-9],[5,-8,-10,6,-8,8,1,-1,8,5,8],[-3,-2,-2,-3,8,3,-6,2,-8,2,-6],[-9,-5,-2,-2,2,7,-2,-3,-9,2,-6],[4,10,-10,6,-7,-2,-4,3,-5,9,-3],[10,-5,6,1,-6,1,5,-2,7,7,-2],[-4,-7,1,10,9,9,-8,-1,-4,4,-7],[-7,1,8,5,-1,4,7,-3,9,-8,-6],[-3,7,-6,-3,3,1,5,-4,-9,9,-4],[-1,7,9,-8,4,-1,-9,6,-1,-5,3],[-6,-2,3,-10,-10,-3,1,-4,8,10,-1],[-8,4,-5,6,1,-6,-6,-6,7,-5,3]],[[-4,-5,-7,2,8,6,-1,-3,1,-8,-6],[-10,-1,8,-7,2,-10,-2,5,-4,5,-7],[2,-5,3,-2,8,-3,8,4,4,7,-6],[10,4,-6,-5,5,-2,-10,4,8,-3,10],[4,-9,4,2,-6,3,8,8,2,-9,-6],[3,-3,3,-2,9,10,4,-3,-4,-9,-8],[-6,-10,-2,7,8,-9,1,-8,6,8,-5],[-10,9,7,10,-6,-4,7,5,-5,3,5],[5,-8,-1,8,1,4,1,9,-9,-10,-3],[-8,-10,-3,-6,-1,-4,-3,-7,10,-7,7],[10,-1,-5,1,-7,-6,1,-4,-10,7,3],[-8,10,-6,4,7,3,2,-1,8,3,7],[-5,-10,-5,10,8,-6,-6,7,8,-6,4],[-1,-1,2,-2,8,1,4,-5,-2,2,1]],[[-2,10,4,3,3,2,-2,8,5,-3,3],[2,2,3,4,4,4,-6,-9,8,-4,6],[7,1,-1,8,-2,4,-4,9,-2,-2,6],[-7,-10,7,-5,1,8,-4,8,4,10,-5],[-4,-2,7,5,3,-8,-8,6,-9,-5,-1],[-5,9,-9,7,5,8,2,-1,-9,-10,7],[2,-1,-2,-8,-3,4,-4,3,8,-5,-5],[-4,-3,-1,9,-2,3,2,8,-10,6,-3],[6,-2,-5,-1,-5,7,7,4,7,-9,-7],[-6,2,6,-2,8,6,-2,-10,-1,9,4],[5,-4,-2,-3,-5,-4,6,4,-10,6,6],[-8,3,3,9,-10,5,-7,6,-8,10,7],[-1,-4,7,8,9,10,-5,-4,10,9,9],[-4,7,-5,3,4,6,8,9,-7,-2,-10]],[[1,1,9,9,-7,4,-5,2,-2,-6,4],[2,-8,4,9,8,10,-1,1,-9,-3,2],[-4,7,-1,-4,7,-10,8,-6,8,7,3],[-8,-10,-3,-2,4,-9,1,6,-5,-3,9],[-9,-10,-8,4,7,-6,-9,-1,-5,-6,-5],[-4,-2,3,6,-9,-4,-1,-6,-6,6,-1],[2,-7,-6,-1,8,2,-8,7,5,-8,-7],[-5,-3,7,4,6,7,-5,6,3,-5,6],[-10,-7,9,7,-8,8,-3,3,-10,-5,2],[-1,8,-2,9,-6,1,5,1,-5,-2,10],[-9,-5,2,7,10,4,-1,8,-6,-8,-10],[-8,-5,-1,7,2,-6,4,-7,-4,8,4],[6,-9,8,1,2,-10,4,4,3,-7,5],[7,-4,-8,10,-2,-7,9,10,-5,1,9]]], dtype = "int8")#candidate|5523|(6, 14, 11)|const|int8
var_5524 = relay.var("var_5524", dtype = "int8", shape = (6, 14, 11))#candidate|5524|(6, 14, 11)|var|int8
bop_5525 = relay.not_equal(const_5523.astype('bool'), relay.reshape(var_5524.astype('bool'), relay.shape_of(const_5523))) # shape=(6, 14, 11)
func_129_call = mod.get_global_var('func_129')
func_133_call = mutated_mod.get_global_var('func_133')
const_5534 = relay.const([2.079554,8.993704,5.361853,6.829255,8.277774,0.093064,3.281256,-6.268373,2.759919,-8.437421,-0.920559,9.421682,-0.326044,-2.281224,-4.584869,6.456413,-5.230812,6.846308,2.033235,3.093120,-0.238997,-0.171187,-4.291192,-6.354753,8.198214,-3.207066,-5.779219,0.277979,-1.886097,-8.624970,-4.703676,-4.324196,-3.233141,-5.049133,-5.348308,-8.408212,-8.320156,-0.554877,1.052829,-5.250765,4.806606,-3.638381,-2.004964,-7.986518,-6.559087,8.996764,-6.476411,5.853282,6.244618,-7.096872,-8.758562,-8.210886,-2.537582,8.156719,4.959866,-9.411138,-5.748108,-5.280678,2.303998,7.802823,5.098429,-5.118170,-2.214415,-6.216664,7.666199,1.816972,4.335623,-7.708093,9.182003,-9.069592,7.926576,7.420944,8.699834,-5.919234,8.910248,-6.441153,-0.587058,-2.403494,9.730519,-3.942172,-1.542843,-6.557600,4.104171,3.053956,-9.115771,-3.881823,-7.399480,-9.822334,3.455765,-0.682887,-5.847037,-0.746714,1.036774,-2.362472,1.430835,9.335776,-8.490506,-9.133668,-6.671487,-8.899927,1.033445,-7.265385,9.803814,3.632684,6.341237,0.433618,3.838671,-9.716013,-0.864120,1.776181,3.524409,4.214168,-0.478557,-9.360077,9.334518,2.806277,6.870045,8.794505,-3.326438,9.946430,-9.171027,-7.884143,-1.337559,9.824728,0.947027,5.257749,6.666839,-0.884272,-8.056963,7.678384,-8.081357,-5.045745,-7.192133,-6.377228,-6.569778,2.185053,-0.411037,-0.455443,-8.627597,3.515062,-3.319222,8.974192,-0.224936,0.336465,-3.206265,-8.980948,-2.471120,-1.766620,-5.302444,1.246429,-9.522784,-9.550712,-9.764980,-0.689780,-0.340915,-2.211383,-5.733031,-8.395599,-6.230809,4.740920,-8.453114,4.749714,-4.393353,-2.038813,-4.627496,4.332500,-3.988623,5.858840,7.636018,9.899248,0.794100,-0.402702,1.582931,-4.814015,9.517639,-3.429230,-4.546432,-1.984855,0.901542,8.758586,-7.791144,2.956240,-2.231913,-3.723878,-8.096444,3.294862,1.181719,9.280312,2.107959,-8.192777,2.916438,-2.222892,-0.258330,-4.235937,8.790097,4.033999,-1.687495,-3.478829,9.248346,-2.746910,6.375694,-6.736767,-0.068721,0.974132,7.090646,-1.083491,8.846874,-9.972858,5.368087,1.713923,9.556944,-3.716911,3.680631,-8.917584,1.723959,-1.159455,9.863733,-1.902925,-5.113792,0.570590,8.732964,-4.984075,-0.430784,2.900875,7.483242,1.202100,5.216047,8.430978,-8.515082,-2.981856,-3.849840,-1.319364,3.004712,6.377491,1.044147,4.159119,-7.672653,4.145445,2.736379,-2.323103,3.641982,2.992181,-7.191055,-9.903344,-7.100776,-6.837149,0.084244,-6.741529,3.559833,1.050479,-0.079676,-2.926868,-1.851654,-3.414792,-3.550258,3.169979,-3.604885,-8.908937,0.817192,3.098825,2.697445,-7.777902,6.853797,2.369937,0.136166,9.728713,-1.334137,-3.268694,6.175998,-9.382762,-9.131510,4.139233,-5.640153,4.155942,-6.114381,8.329074,-5.210695,4.839485,2.802290,7.653142,7.406774,-4.315256,-6.197321,-7.336945,5.520590,8.486329,-7.351595,-1.944092,-3.914628,-0.726664,7.108222,7.061116,-5.890034,4.008809,3.951803,-7.369020,4.630111,-3.436967,3.347483,1.757507,7.195309,-1.420438,0.244237,-0.763373,-4.096149,4.550883,4.326351,-3.398922,7.703879,7.223896,-8.077767,1.948932,-8.348073,3.869282,-3.658365,6.085431,7.543130,-2.475563,-9.696909,-6.225030,4.546602,-2.364811,-4.742862,-8.246041,-8.682620,6.084835,7.132835,-6.381243,-0.993614,-4.485474,-6.844774,2.508957,7.586181,9.589700,-2.915746,4.378117,9.442372,-6.103067,-6.015452,9.631559,-1.026772,4.461070,8.428658,-6.266613,7.379583,-1.762416,-3.744144,7.472326,1.876581,9.559103,-7.998739,-8.850657,8.751420,-9.468142,1.697742,-5.619236,-8.276386,-5.671643,-1.664370,5.507815,9.613148,7.732874,8.896572,9.538330,6.206952,5.146364,1.763213,4.093718,-2.823796,-7.983489,8.672599,-5.899618,-8.852332,4.786045,5.634243,-8.316199,1.941971,-8.557168,-6.387192,7.716492,-6.244596,-5.955342,-2.872742,-6.223895,1.729012,3.098529,-3.759220,-2.979402,-4.560560,7.701673,-3.479190,-7.032518,6.677871,9.387411,-1.254079,-6.062485,9.892626,9.709976,-3.202653,-6.526683,-2.286506,9.161747,2.863116,-4.761024,8.752551,7.752061,7.558616,3.652233,-3.658109,4.703320,-3.998338,-4.945725,-4.577502,7.809632,7.090425,-4.985605,8.049864,-2.402222,3.997392,-2.940160,-1.764567,-2.817627,8.722570,5.555138,-5.229095,1.256243,-4.668071,-9.840837,9.092348,6.026120,-5.109549,-9.681424], dtype = "float64")#candidate|5534|(432,)|const|float64
call_5533 = relay.TupleGetItem(func_129_call(relay.reshape(const_5534.astype('float64'), [9, 16, 3]), relay.reshape(const_5534.astype('float64'), [9, 16, 3]), ), 0)
call_5535 = relay.TupleGetItem(func_133_call(relay.reshape(const_5534.astype('float64'), [9, 16, 3]), relay.reshape(const_5534.astype('float64'), [9, 16, 3]), ), 0)
uop_5536 = relay.cosh(var_5524.astype('float64')) # shape=(6, 14, 11)
func_5018_call = mod.get_global_var('func_5018')
func_5022_call = mutated_mod.get_global_var('func_5022')
var_5541 = relay.var("var_5541", dtype = "float64", shape = (600,))#candidate|5541|(600,)|var|float64
const_5542 = relay.const([-2.817128,6.137826,3.114866,-5.622847,8.746214,3.834153,-1.748147,-0.787631,-4.625952,-4.546008,-9.958873,8.485276,-4.351081,5.199471,5.114736,-1.155149,-0.552663,7.317557,7.749411,2.529348,-5.435675,-0.741920,-0.850633,2.927121,-8.831640,3.587543,-9.845608,5.366110,-3.876255,-6.245112,-8.980113,6.058589,-9.239270,1.638138,3.133343,-4.088962,7.256228,-7.916994,0.531747,-5.112354,-5.701000,7.733350,8.961042,8.894657,2.419979,3.772345,-7.980687,-2.067753,6.776697,9.605261,-1.321432,-7.936715,-1.595891,5.717727,-6.300665,-5.151450,6.284103,4.963216,-6.445365,6.452473,4.488285,-6.770869,0.629378,-3.606666,-2.412591,3.605270,-4.901532,-8.909920,6.027728,-3.096897,2.734276,-2.815295,-7.928206,7.393806,-6.487853,-5.693773,9.253272,3.755232,5.318485,6.006131,4.154412,6.576511,3.024420,8.204006,2.861322,-5.661210,-1.030079,-9.325547,9.330486,2.707990,-6.781392,5.351097,-8.584397,-7.620415,-7.370797,8.702438,6.753532,4.070887,-2.519716,5.045718,5.161885,9.298697,-0.273358,-7.517121,8.121298,9.800948,-3.218479,-3.039074,1.686685,-7.992645,-6.491404,-5.074465,-3.696520,-3.806194,-3.291427,3.197081,-8.446309,4.028158,-9.244692,-6.432697,3.091013,8.991240,-8.460054,5.677408,-5.897145,8.671493,8.824198,-0.305097,-8.941140,2.687477,-4.426739,-6.214437,0.269475,9.636703,0.682639,8.723047,0.727009,-7.397404,-9.850198,-1.164516,-9.489608,-8.357977,9.666015,8.846784,6.532675,-1.807802,1.555594,-4.396737,-9.695070,-4.696459,9.262771,-7.859327,-0.371983,-2.256032,-5.274549,-3.634915,5.312626,3.537665,1.612231,-7.488910,3.500926,5.894816,4.032081,1.826254,7.931777,6.683477,7.593811,-5.773413,8.853402,1.431969,9.432858,-5.768089,-7.837956,1.618344,-2.047162,-1.989351,-4.642967,4.893273,-5.022731,4.060784,-0.009795,-4.198452,-6.560051,-9.274550,-9.692442,-1.755055,8.127587,-3.262492,-0.235579,6.358613,4.084203,-5.071118,5.118480,5.126384,-4.114832,-6.771712,6.278982,-8.479850,2.986626,5.570871,-3.414326,5.112698,-2.972035,6.375289,0.021006,-5.310375,6.160865,-3.986049,-9.086586,-7.064452,-3.052795,4.035911,3.146405,4.141660,-5.900258,-8.712557,-6.424514,-2.453215,8.655866,8.140324,6.487089,5.352275,-3.463131,1.722904,6.514445,6.712360,-8.065780,-7.524810,7.427673,-2.632627,-9.309240,-5.159371,-3.327964,-2.704604,0.102774,-5.264766,9.194252,8.299470,3.581794,-6.685419,-2.372760,-6.680223,-2.244438,-2.807875,1.960713,-2.555154,-6.687852,-3.182221,7.443456,-6.931105,0.071080,4.115296,2.980869,-5.806618,-5.479139,4.812191,6.656523,8.243351,-0.957809,5.148772,8.261961,-7.933168,-2.405378,-0.026785,2.851501,-1.548596,-5.599964,9.965325,-5.154844,-6.043140,-8.799502,8.499244,-7.286207,8.183454,7.694970,-1.035803,-3.371082,-2.979766,6.784577,9.419432,0.052935,9.810021,7.124410,5.320658,1.987567,-0.615913,-6.062171,3.829384,8.650347,8.610990,1.840373,9.428853,-8.414325,-6.840906,-3.738977,-7.730741,-0.805940,4.727480,-2.428068,8.602147,0.231938,8.405118,-6.941229,-3.243813,-2.230239,-0.480929,4.754227,9.363199,8.809713,6.426653,8.355084,3.216973,-5.575484,-9.413446,-6.947240,-8.204785,8.456589,1.681870,-7.632694,0.556542,7.686803,-4.741366,1.303753,4.883436,3.423276,3.579267,-2.684843,-5.212976,1.285947,-1.174606,2.188324,1.730248,-7.558842,-3.593365,-7.658285,7.348060,6.263503,-7.294424,-8.617153,9.740207,6.970758,-5.199921,7.620109,-7.663016,0.586243,-4.037673,5.437156,-9.853979,-6.575421,-8.485501,-7.881998,2.980074,5.634184,2.472653,2.237843,6.096230,5.953879,-9.542616,6.546675,0.897967,2.900987,1.188532,-3.527198,2.653568,-0.867831,6.080080,2.734217,-1.725971,5.866395,-6.350470,-9.156129,8.021719,-4.106133,-5.194757,-2.084724,-9.363464,-2.649301,-4.010639,4.398972,6.346391,6.527831,1.295692,2.206789,3.463845,6.475183,2.603382,0.384529,0.684574,3.150973,3.473578,3.905347,2.557596,7.066825,-2.193398,9.828427,-5.122208,8.722759,-7.909276,9.771677,6.578019,7.460047,-8.693881,9.277462,-1.901130,-2.344349,-7.202881,-3.716107,1.381885,3.486176,-4.386677,6.264689,4.507235,-9.754541,-6.307567,7.038129,-5.026982,-5.603698,7.265481,-2.922450,-2.296551,-9.117206,6.841959,6.885328,-6.378277,-3.721854,9.760530,-3.532970,-1.460714,-6.006526,-8.350210,-2.936310,8.152442,-7.526600,-5.513456,-0.148984,1.132776,5.928721,7.253779,6.695791,1.738641,8.892045,9.635132,8.587513,-5.659677,-7.757744,7.814249,-5.702876,-7.648507,-1.776098,0.840811,6.795482,5.260281,5.869247,2.113840,-5.671424,1.932547,-4.780411,8.563073,-6.986228,1.390529,9.985793,-5.042934,1.703594,-9.442142,4.915693,9.350632,-5.646443,-9.671525,1.053985,-9.214708,-2.900613,0.016817,-2.563446,5.130692,8.090899,-2.310233,3.490835,-2.347871,4.621264,-6.060102,-9.730728,2.708507,-1.767100,3.849966,-9.672171,-2.101247,6.040718,6.685814,-1.010546,-0.359605,5.104078,-2.159616,6.024425,-2.900849,6.853681,-8.837719,-1.058037,-2.396364,8.476305,-8.205209,7.114313,-3.185641,9.698118,5.532173,-4.517989,4.862173,-1.419295,3.537716,-0.730990,-5.247238,-6.724092,8.358899,-8.200457,-4.887912,7.856445,9.138441,5.569311,7.138131,0.951915,-1.073180,6.026445,-2.944905,-1.800982,9.781834,8.123344,-3.251595,-0.434290,-8.092395,-6.455685,-7.381647,0.841076,-2.189913,-4.181090,5.165772,-3.932199,0.453899,1.064001,7.439223,5.363145,-3.997106,-9.635490,4.874606,1.036269,-5.720383,-5.761854,2.746863,-4.739707,-4.477784,-5.907214,5.788358,3.326366,-6.075226,-7.482917,-2.342811,-8.400254,-6.060939,-1.258486,-3.798395,0.913531,0.506878,8.328926,7.060714,-4.109782,-4.755427,-3.490908,-3.791890,3.804789,-2.347867,-8.264517,6.211381,-5.222793,-3.390244,3.443908,-9.197854,2.274496,-9.932169,-6.253842,-7.030719,4.739292,4.634998,-0.501180,-9.579791,-0.972989,7.601195,7.664089,-2.689728,-2.762083,-9.742683,3.282386,-7.710838,-5.404569,1.567419,4.616898,-7.371798,2.414660,-4.377886,8.201118,6.678074,1.254998,-6.074791,7.951813,-5.430172,9.397726,-6.454905,2.864029,1.721315,9.066469,9.751844,3.512009,-0.073762,0.133173,-1.796965,4.415874,7.274399,4.165104,8.816440,-3.576002,-3.842986,8.971869,-1.061627,-7.934521,-5.149982,-0.163456,-7.759852,9.481203,-9.548091,1.633507,9.946178,-6.577489,7.432746,3.795073,2.668910,0.069516,8.842697,-2.560296,9.439748,-5.961481,-4.802314,0.035907,-9.521055,1.156279,-8.242613,8.548251,2.385546,-1.615384,1.577122,-3.737900,9.510054,6.844492,-5.403664,-8.053663,-7.714875,0.128883,4.448839,7.562135,-5.979564,8.432689,9.531516,-6.402123,-8.807173,8.609534,-0.765426,-9.213406,5.689072,8.108220,0.565674,-0.746387,-6.016976,7.029192,-5.879191,9.999188,2.541092,6.039166,5.618872,-7.727403,-4.745863,-9.664579,6.167283,-4.301254,-2.991281,-3.745097,9.288617,7.266849,-7.932592,-8.124591,7.622516,3.592140,-3.109321,1.858006,1.158633,4.939835,3.275964,-7.669986,0.586736,-7.989916,-1.224717,6.569055,0.560020,2.737360,3.740312,-9.570488,3.662888,-0.665307,7.036307,-0.404856,5.921667,-9.751130,5.563193,6.375073,-9.463864,-6.385164,-8.745409,-8.049010,-3.169792,2.549967,7.544440,-9.592209,-2.790713,-3.314032,-1.327860,-4.895300,2.015749,-2.672260,1.751921,8.057894,0.720394,6.298371,3.737344,1.091087,3.419828,-1.827753,9.636365,-3.750609,2.387659,2.354565,7.623684,6.437295,-1.527462,8.013964,8.324628,2.966770,-0.743568,-3.180739,1.089182,6.922748,-2.566519,6.706265,-7.222878,3.140631,1.237692,5.303755,-3.755405,3.690387,-8.543637,1.771784,0.299509,4.664737,1.873103,2.247652,0.244035,4.732636,-3.002511,2.547627,-7.791353,-9.736794,6.097904,-2.487998,-7.211012,3.705281,-8.426908,-4.369625,6.394557,7.412474,0.936348,3.221181,5.638919,2.227756,-8.580403,-4.959030,6.734370,-0.615010,-1.651561,3.417954,-2.242471,-0.848001,8.537085,-8.175200,-0.500547,1.912152,-0.335199,-6.441264,7.208088,-7.101765,5.678976,3.273839,1.669476,2.617149,-9.725299,8.885494,9.588420,-9.632372,-1.715613,-8.676671,-7.217358,0.958066,-0.818952,5.354804,3.900686,7.942148,-2.603391,4.174686,-9.141732,-3.452715,8.572233,5.463465,5.149772,5.953230,-6.214595,-6.534556,6.635301,-3.428315,3.672608,-0.079195,0.912824,1.100400,-8.153179,1.073382,-2.032202,7.493360,5.752122,-1.141079,-5.603213,3.998940,2.714670,-2.406827,4.244334,9.565659,-4.199034,6.985682,1.081303,9.088194,9.009976,3.647274,-4.521851,-5.831289,7.331478,-8.287631,-8.522800,0.747587,0.537183,9.055483,-1.587686,-6.624348,-6.285529,-9.102952,-6.091602,1.674560,-7.436659,1.877667,5.188997,9.842987,9.928322,2.650290,9.769131,8.517222,-9.576766,1.002212,3.201868,3.405921,4.574445,-9.528140,1.260564,4.386349,-1.175483,6.364328,-1.240860,-0.341465,-5.375323,-3.949378,-1.061227,7.113187,-6.870780,3.463230,-2.587327,9.442292,-7.517879,7.279765,0.622608,-8.787766,-9.154247,8.201203,-3.332176,-8.270106,0.520676,-6.870677,-7.387677,-3.747001,-6.462608,1.016338,-0.444461,-5.705552,-6.903077,9.968372,-6.786812,0.746921,0.542015,-6.144687,-8.393368,-2.540116,6.285480,-6.691831,-0.383551,-4.041781,-4.938226,8.965617,-8.668832,-2.215271,-1.465184,-9.420740,1.812673,3.994327,-7.365678,-6.966295,-2.383968,2.972582,9.493073,2.313475,-5.744601,-8.312648,6.812429,-5.273990,8.113109,-1.223328,-0.824052,-3.727993,-0.122541,-8.598804,9.630775,-5.968208,6.021457,6.456570,3.182404,8.599738,-6.278098,-0.260181,8.998960,2.561139,1.563576,-4.211227,-7.885139,1.574128,-3.851451,-3.819208,-7.935595,9.277733,-8.070617,-4.181858,-9.029466,6.316920,4.262266,-4.002715,-6.512501,0.844681,-1.241573,7.463286,6.059241,5.194085,-9.295097,9.959453,-5.472176,3.090817,-3.416101,-0.772565,1.928938,4.665987,-7.541665,1.109036,-9.917048,-3.645665,4.434868,8.008366,8.047803,-0.797393,-5.539119,-0.583737,1.346974,3.063102,-5.899490,-5.899008,-8.779749,-9.441986,0.700163,3.605840,0.063258,-1.871775,-2.073462,9.481685,0.406017,0.438604,8.402711,-3.624227,3.333642,-4.915570,-6.742112,7.477216,4.527105,4.410435,-4.308563,-6.470230,-3.173853,-4.241154,-7.067258,-1.843556,6.488493,-5.279863,-9.371144,6.351285,-4.204475,0.771696,-2.178577,6.800787,-8.123071,9.125002,-1.287404,-4.263363,-9.394880,1.270927,-1.065665,-5.561597,1.690129,4.033871,-3.652501,-5.708033,-8.079148,1.444629,-7.254582,-2.735202,7.347984,1.724556,1.972495,-3.724504,-1.024468,0.658099,-5.047185,6.959133,-5.620083,8.552623,9.142752,0.993158,3.527840,6.647065,-8.498810,-0.334289,0.847522,4.768312,-9.787644,-3.289553,1.911275,7.752613,-3.692999,5.563290,7.165876,2.092449,-3.291601,5.821924,6.247708,-7.791157,-3.913504,4.575623,-2.379349,0.797403,-5.673444,-2.028306,0.813249,8.585926,-5.569357,-4.963578,2.720866,-2.918966,-0.116771,2.440048,-6.692566,0.757778,3.399296,-2.149005,2.362648,-3.637668,-9.279893,4.022052,-0.532260,3.592415,-5.787132,5.721003,3.582609,2.574217,0.687176,5.595144,-1.812793,-8.221103,0.565710,-3.522999,-3.292078,-9.991078,2.660932,-1.012124,6.716549,-8.390156,1.523984,3.568393,7.332768,8.091727,-3.060897,2.793113,4.707341,-4.280263,-4.085193,-5.400023,6.039484,9.440006,-6.006569,-0.499868,9.215909,0.514271,-3.004219,1.010780,-5.490666,-9.329769,7.149653,8.715025,-8.413229,0.707930,-3.659779,7.955469,3.046895,-6.818414,7.351649,1.541158,5.579765,9.337446,7.457846,-7.446065,4.298339,-3.125658,-3.460992,-2.578289,7.852787,9.536382,8.042989,0.355587,-2.683593,-7.313067,9.839259,-0.507224,9.047614,-5.139506,9.144217,-1.854510,-3.444601,0.013532,-5.802217,6.498841,-2.429782,-9.813704,7.634594,-1.868839,6.259255,4.079819,-3.766024,-6.620482,-2.315633,-4.112974,2.109482,-6.925468,-9.334459,-2.225381,1.177508,-0.817466,-6.028427,1.467942,9.441040,2.349956,9.190997,0.519821,7.823044,5.001366,-6.960955,1.267752,-4.607663,7.459811,9.045536,8.146363,6.565636,-2.775607,-8.625074,-4.386548,5.554234,3.945634,-0.254531,-1.135996,-5.002812,1.578672,-2.419188,-9.699093,5.833987,5.901311,2.654357,6.262197,-0.183262,-0.782484,-4.562337,-5.462637,1.402967,-4.245978,-9.173787,1.005706,-2.588620,-1.097083,5.349626,6.411351,-8.970379,3.417073,4.541745,5.664390,5.355927,9.271393,-8.858580,4.110365,1.150766,2.720599,0.161723,-7.484675,-6.349589,-0.487304,9.840463,-7.016500,-1.499816,8.573483,-9.520299,3.084653,-7.354023,9.241835,3.843209,-5.506323,-6.387737,-2.319267,-4.329672,2.486029,0.189331,-5.193480,3.423777,8.794516,2.066701,-7.886716,2.318849,6.690483,-7.683025,-9.243418,5.865934,-6.742621,-0.207302,6.417010,7.740746,4.929139,-2.175545,0.511276,-9.857669,1.745781,3.240829,-6.949264,-6.341595,-5.020142,-8.465983,-4.609851,-9.369660,-4.825898,5.468621,5.526933,-1.795949,-1.418120,2.602209,2.261746,-1.583585,1.897606,-3.825573,-6.007447,8.521588,2.529296,1.159712,0.959310,-6.082168,-5.651786,-0.906751,-5.636996,6.577593,2.720600,-7.323937,-2.306199,-4.797616,-1.710450,1.536724,9.846223,8.844187,8.621165,-4.190453,-1.552600,-4.461494,-2.562477,3.093242,6.910986,4.716179,2.146812,1.415659,-7.496336,0.489781,-7.099695,0.542126,7.210858,-1.246754,3.575894,8.101293,9.324839,6.130323,-2.614687,-8.234531,1.927444,1.758073,4.153539,-2.397444,-9.492585,-8.923971,3.406103,-8.172520,5.957733,8.958312,5.401674,-5.848519,-0.173369,-3.530713,-1.958107,-1.266493,7.271093,-2.250509,8.700288,-3.095322,-8.333705,-5.730840,8.970127,-5.538531,-5.274392,9.113804,1.949366,-3.559117,1.579485,-2.541782,-2.819638,8.052668,-5.581710,-2.951813,4.895462,1.457156,-2.354910,1.116205,-9.006547,-8.588723,5.259121,-2.444860,0.069077,-0.260644,-1.378273,2.380471,9.004591,-9.549768,-7.958776,9.412483,0.519014,-0.637825,3.614665,9.638603,0.267417,-8.875823,-6.291332,7.203982,4.212139,-4.484849,8.835872,-5.451603,1.841143,-1.057887,-6.348819,3.201863,4.926665,8.536611,8.601046,-3.625506,-0.272837,2.363443,-4.281153,-3.515341,-8.292249,2.159811,-2.352737,-1.552918,-6.215223,-5.355439,4.587980,-4.687476,8.400400,0.520903,0.918945,8.308773,-4.748829,-1.303023,-4.589403,-1.011107,5.807691,-8.675801,-6.537812,4.001153,3.271574,4.835979,4.889122,4.513809,2.099960,6.015104,3.372361,-4.484258,0.356208,-8.418231,8.622297,-6.563577,-7.061651,6.785611,-4.991085,2.398777,-1.446420,-8.730926,-0.958386,-8.675187,-4.303100,-9.025564,-9.803639,1.837473,8.309048,7.483243,-8.310913,-9.876722,-7.500370,8.074126,-5.229459,7.435822,3.732614,6.349260,2.779120,5.248670,3.310685,9.064530,-2.142050,-7.588858,-3.873396,0.880555,2.513456,5.949205,8.773278,-9.547998,7.829023,-2.548051,5.576277,3.341548,4.730756,-2.274103,-5.141809,-4.364635,-2.677383,6.459644,6.803805,-6.838312,-1.540101,-3.559481,-6.072914,8.039246,-4.097969,0.341121,0.848745,1.223906,0.258272,-1.341151,5.479676,7.984945,3.955240,3.282680,1.933960,3.914088,4.077347,8.666106,4.603378,-8.139317,-7.347780,2.021275,-5.772466,-7.732904,8.401258,9.920151,9.156950,-7.639701,9.789902,8.285377,1.445700,-9.605994,2.937554,3.626060,8.143404,-7.420480,7.844595,5.136605,-9.174048,1.589156,-6.211314,0.632787,7.902164,-3.905457,6.000249,6.808367,9.605410,3.787321,6.358167,0.868005,-6.058737,-2.786199,3.232037,0.492713,8.996433,9.141006,-1.634667,-9.353618,4.553282,-0.243490,-8.534065,1.590898,-7.990667,-4.064940,0.887394,-2.129297,-0.943201,0.939186,-4.953003,5.965541,-4.760823,-6.087386,0.455999,-9.888458,5.141864,9.927347,9.077982,8.589539,-1.173382,4.238922,7.157766,9.954678,1.125066,-5.080783,-1.198006,6.641309,-0.019942,0.229600,-5.376033,-6.404222,-2.334159,-2.806348,2.843922,8.563397,9.347124,1.971349,-7.862140,-9.829753,-5.282228,-7.371272,1.655440,2.006872,6.092105,0.759034,-1.958321,8.601684,-5.460430,-9.181183,-0.247900,3.659850,3.054309,-3.428541,8.510867,1.465324,3.313221,-5.904344,3.135560,7.904701,-1.460810,0.358794,-4.868282,-9.504950,-8.249114,-3.832629,-2.412506,-8.282663,1.307651,-1.609180,-5.299124,-3.096962,9.154830,-2.929709,-2.193247,6.551386,-1.081400,7.830619,8.882140,2.368025,8.661410,-2.539935,9.024870,6.136684,-6.260138,-6.366914,3.881202,-8.903177,3.903767,0.095024,-7.454088,3.540128,3.143185,-6.568279,-8.481536,-4.386631,2.923444,4.214470,-7.526300,5.822406,-6.613169,3.910491,-7.909106,-9.783977,-7.488341,6.441204,-1.553261,6.188243,-7.094709,9.431075,-8.308126,-6.017052,-8.235422,-0.836272,-5.536532,2.382379,8.636212,-2.623901,2.822046,-6.637430,-3.193573,-5.416235,-9.566196,1.842543,2.787450,9.626794,-6.392898,-5.407736,7.554419,6.861700,-2.932047,7.095576,9.291509,-4.814781,-5.643524,-6.200309,-8.191957,-1.778404,2.471658,6.679826,-6.584361,-2.330010,-1.508473,0.740774,7.515502,7.754661,-0.071355,-5.925315,-1.974984,-2.738124,8.777636,-8.613560,8.751908,-0.189306,-6.790916,-7.917659,-6.871153,5.967473,3.496846,-3.458105,-0.827928,-4.822700,-6.569747,-3.062541,5.023195,-7.209818,-3.971483,7.206882,1.421043,-6.103180,4.493337,-9.038841,1.120295,5.858689,-1.420963,8.147081,0.912442,7.465828,-2.520649,0.204990,-0.619332,-6.519679,-2.779394,5.971607,9.362746,5.707588,-2.129267,-3.531551,5.574980,-6.043168,-4.046638,-6.913619,2.741187,8.978402,-6.204388,-6.761363,-2.044581,5.107450,-5.012737,-5.110884,-4.911276,-8.960265,2.981418,-6.427798,-1.136892,0.557473,-4.194928,3.081183,4.237572,-6.028955,6.960144,3.122283,5.208390,-9.552394,3.621802,-4.221336,-6.593457,-3.920877,9.528153,-9.900947,3.837393,-4.730353,-4.014125,7.292946,5.791367,4.504428,-1.384891,-0.975901,3.973134,7.223644,-0.347963,-4.010195,9.367616,-4.089011,9.978020,-2.977781,-5.393784,-8.104022,-0.176522,0.606901,4.656171,-5.302218,9.410480,-6.407341,5.719330,3.051329,2.174623,-7.480714,-5.587119,1.219572,-5.970847,-0.635699,7.008118,0.709367,-5.060037,2.460099,1.732813,-1.956219,-0.984358,2.869351,-0.396172,4.115422,-8.607378,-8.289584,0.974390,-0.247866,-2.783287,-1.244397,4.959115,4.592499,-6.026500,-2.942171,0.085428,-8.336447,9.341550,8.999086,-4.826125,8.506699,5.162559,9.651563,6.199625,-1.628284,-8.089485,8.537695,-2.459931,-7.288870,0.120669,-7.865912,0.430947,5.557332,-6.887164,-4.185902,9.067558,8.554642,-6.071416,0.164302,-1.675768,3.546734,4.886516,-4.101345,4.947540,-4.575894,4.198179,9.617889,-4.712013,2.762396,-5.356375,1.432342,9.137483,-6.538662,-2.098781,-9.192336,0.183992,9.007097,-3.142569,-8.251421,-5.463118,3.329778,7.798773,-7.387980,8.818512,-2.767404,-9.707947,5.933018,-6.507439,6.471301,-8.091117,3.793778,7.021695,-5.793306,-4.861223,0.230900,3.905374,8.153703,-2.111750,-0.003446,4.729243,9.206850,8.659229,-4.286895,-6.559450,-6.021883,5.378332,-2.672667,-2.439592,-7.413219,8.883136,-3.756410,-7.435074,4.108109,9.718496,-6.068170,-1.124037,-3.832047,0.484589,5.178257,-1.375355,-7.349835,0.165000,-1.071824,6.305016,-0.572695,0.285841,8.961513,-5.632154,-1.215667,2.132985,7.301006,-1.821534,1.595646,-6.494078,2.837908,-3.746853,-9.230212,-6.640053,8.045450,4.550405,-5.090336,-8.044961,7.680254,-0.624899,3.401851,-0.434214,2.640635,-3.636620,-4.354033,4.121149,-3.391447,9.068816,5.603003,2.299354,8.465680,-8.339203,0.888896,-3.944703,-3.191027,-4.746584,-9.502903,-2.223691,2.575149,-0.366501,0.575807,8.514929,9.854569,-9.602033,-7.429684,9.326028,-6.029564,2.312205,7.425218,-5.096147,-1.249291,8.103345,-9.746462,-4.000455,-8.923126,8.355520,-1.240933,0.076625,-2.983775,-0.606567,-5.546733,-4.930842,-2.922394,-9.967366,0.345660,1.330920,-2.027583,-4.916957,-9.557883,-3.030108,0.931645,-3.689259,3.192448,5.121770,0.088721,-0.269922,-8.459861,-2.253530,6.822022,-0.866445,-4.459960,-3.800085,-4.847396,0.343130,-7.229904,9.010042,3.796450,9.609101,-1.535580,-9.380708,5.550294,1.904012,-7.077207,-7.906492,-1.286215,-9.614449,-2.918687,2.553263,-3.049587,4.977125,1.354428,-2.135640,-2.095575,3.813395,8.341309,-7.573464,-1.962840,-8.053527,8.318599,-9.916310,5.612926,-7.993500,-1.037045,-0.841966,-7.072002,6.801844,-8.664227,6.647339,1.441826,3.065798,-1.310076,7.044055,7.943202,5.885555,-4.731613,8.007935,3.564845,4.581676,9.734413,-4.588968], dtype = "float64")#candidate|5542|(2025,)|const|float64
call_5540 = relay.TupleGetItem(func_5018_call(relay.reshape(var_5541.astype('float64'), [4, 10, 15]), relay.reshape(const_5542.astype('float64'), [2025,]), relay.reshape(var_5541.astype('float32'), [4, 10, 15]), ), 3)
call_5543 = relay.TupleGetItem(func_5022_call(relay.reshape(var_5541.astype('float64'), [4, 10, 15]), relay.reshape(const_5542.astype('float64'), [2025,]), relay.reshape(var_5541.astype('float32'), [4, 10, 15]), ), 3)
func_3339_call = mod.get_global_var('func_3339')
func_3343_call = mutated_mod.get_global_var('func_3343')
var_5547 = relay.var("var_5547", dtype = "int32", shape = (24, 2))#candidate|5547|(24, 2)|var|int32
call_5546 = func_3339_call(relay.reshape(var_5547.astype('int32'), [3, 4, 4]), relay.reshape(var_5547.astype('int32'), [3, 4, 4]), )
call_5548 = func_3339_call(relay.reshape(var_5547.astype('int32'), [3, 4, 4]), relay.reshape(var_5547.astype('int32'), [3, 4, 4]), )
func_1291_call = mod.get_global_var('func_1291')
func_1295_call = mutated_mod.get_global_var('func_1295')
var_5573 = relay.var("var_5573", dtype = "float32", shape = ())#candidate|5573|()|var|float32
const_5574 = relay.const([[-6.686569,-2.292448,-0.688146,-3.119863,-6.183398,-9.002266,6.891519,-9.594341,-8.138357,6.810238,8.840776,-9.991638,0.866261,6.784809,4.089463,-7.750283,-7.402078,-5.882083,3.485777,2.545135,-5.000025,-8.628164,7.712621,8.045836,7.533889,-9.655957,-7.901968,8.478939,-7.558184,2.146380,5.676393,4.046411,-5.570704,-5.228128,-2.195237,-4.764602,7.612250,-3.580193,3.246705,-0.256508,-9.597714,3.836517,-3.493041,-3.938369,2.485611,-5.657995,0.907116,-3.592955,-2.046041,-3.587208,-4.081319,2.459421,6.038290,-2.510761,7.353356,7.024901,7.165750,-2.228083,0.034211,-2.385491,-6.059308,8.034251,-3.121268,-0.044793,-9.691199,2.561162,3.575461,-8.435159,-5.790533,0.651745,-8.098984,-4.732320,2.235847,0.848586,0.312289,-3.251067,-8.298516,-1.425477,5.007661,3.854114,9.697252,0.249302,-0.045567,6.537852,-5.246252,-6.833235,3.644504,4.812040,-8.160897,-4.993100,-2.914826,9.036854,-1.799173,-6.699318,-9.075968,-0.507256,-8.976891,-5.958306,0.158411,-9.870810,-2.793876,-1.923219,9.241487,4.965773,-9.205262,0.539805,-2.323287,-5.939971,-4.419162,-4.567961,-9.287814,-5.021390,-8.908644,8.947614,-5.172895,-3.855524,2.309187,3.670314,-7.871010,-8.758042,-4.539283,9.424000,-6.178666,9.534409,-0.976540,-6.588096,-3.128309,-1.108710,5.422868,0.125926,4.353071,1.450607,-0.566879,2.267288,1.850550,-8.446618,9.433167,-7.547425,5.853634,5.626896,4.800630,-9.098083,-5.508313,0.063952,8.745635,-1.739954,-3.676263,1.589449,-1.944464,1.820790,-4.332816,3.634182,2.006337,4.702056,9.608480,6.905356,-3.502531,7.810495,-4.956721,7.643350,6.991758,-2.976980,7.042420,-5.506841,-2.017568,7.640690,1.103362,-7.991939,-0.447882,1.004125,-7.703013,-5.052797,2.956473,-4.820629,-6.711625,9.120482,9.061722,3.370108,3.580801,-9.339117,2.265447,-1.223772,-8.103016,-8.051563,-2.830177,-6.019820,-9.972372,-9.878587,-4.362525,2.002597,-1.605204,-4.015551,-6.676106,-1.261952,-3.935216,1.099903,-1.537841,-7.726305,-0.794192,9.587913,0.699289,-9.029303,-3.364899,1.586117,4.562850,-7.184624,6.812725,9.535237,-1.518235,3.843041,-6.465747,4.022251,-2.789410,4.615175,-8.418557,2.838446,-3.071116,6.558199,-5.352456,-4.646740,6.387925,6.105325,5.935828,-3.254448,-2.965843,-6.006548,-6.094664,0.129495,-5.896368,2.411971,7.704019,-6.832948,-1.556660,5.551226,-4.141801,-6.708942,-3.658858,-1.741311,-6.993690,2.406182,-5.483515,3.444320,7.584299,2.912744,4.312605,-2.520212,8.802956,6.228230,-6.244893,3.141171,-9.175329,-6.354609,9.815347,-1.970155,3.692351,1.752789,-4.575141,-1.246394,6.757794,1.521061,9.437500,-6.685492,-6.419426,-1.805592,-8.914377,9.267171,-8.447803,7.759103,-5.852762,3.923551,6.903709,6.785233,-7.631012,-0.179323,6.227351,-5.963447,4.640127,3.310901,-8.337730,6.237149,9.454376,7.730659,-0.426294,-7.517587,8.702698,2.163526,-2.809623,-9.417919,-3.424498,-8.243123,-8.994118,-3.260591,0.500058,2.824240,-8.981522,-8.899132,0.316768,6.585542,-9.967146,-3.832715,6.844078,7.258534,-8.487356,-7.422387,-6.972278,-4.209087,-0.387413,-1.882640,-5.332959,5.077749,-8.880254,9.303004,-4.401270,-2.602182,-5.074499,-0.126925,-3.716813,0.879788,3.472623,6.927466,-6.950045,-7.040056,9.728018,0.650896,-7.798291,-1.088634,-7.273199,-4.201867,-6.382380,-1.563975,7.777508,-8.142512,-1.309363,-0.523041,-4.905082,7.153090,3.923599,5.810103,-3.771174,-8.186479,9.564353,-9.608339,-3.958349,-7.374750,3.019031,2.997533,2.639632,-7.501930,3.328846,0.617347,-1.294984,2.250905,-6.248491,-9.227482,3.997291,8.465307,3.129174,-6.459083,-8.305559,-0.412492,4.498701,-7.360391,-3.545956,-8.415641,8.720027,6.082094,-6.788780,0.407940,4.777788,-9.717676,9.060647,7.594509,3.285783,-3.630799,5.301923,5.587819,1.359526,3.088456,-8.046026,7.031904,-3.104745,2.155479,4.150136,0.884732,5.492754,1.151621,-3.131343,5.940645,8.746667,0.671935,5.776319,2.940633,1.643568,-3.903712,0.387276,3.943883,-0.583921,-5.937885,-7.026101,-6.980288,7.038097,-7.641114,-3.857730,8.780452,5.327809,-7.797291,7.111688,5.058406,4.445914,-2.535774,-5.313308,-9.935093,5.025813,-4.947150,-6.991360,5.919176,7.307327,7.417405,4.157034,7.390364,-4.829482,6.600689,2.296932,-9.489733,-5.605592,9.468066,-1.581933,0.654366,5.594080,0.201802,-3.774865,8.862511,-2.709181,-4.023788,-3.742500,3.310136,1.388392,-6.995599,3.907924,1.437969,-9.437585,-4.504935,-4.718278,-9.404226,-8.444408,-2.843943,-1.575003,-3.393951],[-8.947932,-7.262378,-1.217348,2.984691,0.169419,-1.521498,-9.109449,-1.677579,1.743582,-2.873610,5.200113,7.333782,-5.640715,-4.981625,5.428777,-9.711644,8.507026,-8.558803,-5.396713,-8.958065,-8.118645,-2.972705,-1.191309,0.157499,-0.243023,-4.117144,-3.883027,4.695248,0.220125,5.817518,-5.145370,-5.774974,-7.672827,9.606235,6.582834,-2.822313,-5.485567,-4.206386,-2.141909,-8.102960,1.806662,-1.724327,-1.042988,3.096189,1.033440,6.824227,-0.512343,-2.836891,-9.252639,7.293763,3.663138,5.724871,-4.424781,-6.652336,0.919866,8.504217,4.963095,-6.083790,4.996028,5.083285,-9.097928,-3.383154,7.732620,-8.280071,-9.227596,6.129058,0.499273,-9.273391,-5.173923,-6.632536,3.215482,9.234591,8.085025,3.576660,7.843240,-8.065555,4.421195,-3.878956,1.733239,-2.120859,-1.529190,6.811416,9.840267,6.939539,-4.552024,6.487935,-2.521383,8.131633,5.460481,-5.495516,7.205161,-1.502759,-4.816989,3.497728,6.797744,9.169698,3.299006,-9.180964,-9.246713,5.543752,9.104347,5.889502,3.574346,-7.064000,8.200427,2.701170,4.842707,1.395777,-7.179093,8.620078,-6.545620,7.123667,7.541353,-8.193798,1.915841,-6.327461,0.718565,-5.988931,-2.142033,9.947517,-8.721066,5.194850,-5.451924,8.906021,0.396579,0.298632,7.595655,-6.962043,-5.973841,7.494759,-8.095721,-8.185750,8.560934,-9.472143,6.785174,2.008978,-5.400399,6.271084,8.517410,1.593857,9.556363,-4.647029,5.728815,7.016627,-4.319526,1.306893,5.826085,-8.632071,3.207280,-9.376164,-9.639822,-7.824921,-2.977589,1.036732,-2.282084,5.269063,6.934752,-5.562202,-8.707904,-5.074963,-7.970742,7.613439,-7.116788,-1.258429,-9.948956,-1.877253,-2.755259,6.601297,6.148371,-5.469143,1.928066,0.442272,-1.636190,0.757222,-4.135593,9.706111,9.972905,-1.937725,-8.062898,8.180989,1.210114,6.342353,-4.572402,2.352522,2.036914,0.038299,5.949850,-9.756145,6.456527,-2.608749,9.474697,-3.198395,-7.666578,-4.216178,-4.017082,1.179029,-7.630241,0.558368,4.821298,-5.419236,9.611643,1.801700,-8.647812,-0.038478,8.153521,8.826709,-0.163612,3.265255,-7.613429,6.142904,-2.393052,0.314479,6.330190,1.115037,0.625047,6.320286,-4.522264,9.858266,-0.309169,-9.743674,-0.221746,8.642811,1.363581,8.495880,-6.102590,-9.776762,1.216130,7.612169,3.401973,8.280649,-6.527388,9.856860,2.980080,-9.143759,-1.233770,5.315247,-1.358438,9.711185,8.615027,-2.832524,1.075868,-9.809659,-2.529563,6.080375,7.824826,-4.055889,5.678285,-2.153171,-8.615043,1.371493,0.501003,7.943936,2.914647,6.044472,9.360142,-7.663166,3.998869,8.940222,3.173473,7.285281,8.787956,-9.478787,7.956764,1.912216,5.057232,-1.897148,8.181753,1.052138,-6.436181,1.371647,-2.214371,-7.587298,0.054576,9.280948,-5.115185,1.637758,-2.770012,-8.775358,-9.989053,2.724303,-9.741724,-3.987639,0.247348,-1.825549,-5.700273,6.277136,-8.692702,-9.211728,4.544789,-1.296032,-4.336961,5.097360,6.175901,-1.161811,3.317191,-9.071819,5.301215,2.046037,-3.742132,-8.813107,2.603476,0.322642,1.205585,3.069009,5.454636,-9.247799,1.681397,-6.458067,-3.885023,-7.082767,-3.219330,9.228128,6.021342,-3.509538,4.270108,0.423010,-1.443908,-2.806521,-2.251997,-0.827378,9.835963,-7.146874,-2.795636,7.860680,2.403251,-1.824108,-1.522431,-1.680669,-5.336391,6.481290,7.231532,-3.707838,2.447113,-5.396243,5.173401,1.756816,6.123972,1.833341,-0.588667,-7.572300,3.388237,4.622277,9.368312,8.667411,-2.473621,1.639263,3.901775,0.646815,-9.194169,7.180366,-3.294250,-6.647698,-7.278083,9.688960,-6.908421,-0.956602,-4.251728,-6.713813,0.828619,9.903416,-1.704283,-0.931206,1.157699,6.852334,1.858037,0.442955,9.090321,2.949878,8.217492,7.398888,8.534210,1.529106,1.241230,0.931138,-3.781151,9.141356,2.769997,-6.163982,8.735877,-3.277418,-3.573166,4.736822,8.493215,6.477914,0.672981,-7.680218,5.616302,2.430624,5.179518,8.215082,4.544657,4.063093,-0.445112,0.174897,2.276421,-9.996294,0.761356,0.106718,3.045107,-0.231232,7.280528,2.448383,-3.077388,-6.854540,9.149567,3.484987,-5.384668,5.742789,5.492133,-2.955493,-8.741183,-9.392782,-1.036060,-0.626189,7.108522,9.087594,0.198262,9.032468,4.788749,-0.800854,2.965995,3.212538,-5.581021,7.141945,-4.992621,-9.489660,-0.814129,-3.469049,-3.231702,-3.329830,9.344544,7.698372,-0.605378,7.291134,-8.147490,-8.933365,5.861500,4.984904,-0.936763,1.396032,-9.014312,6.439717,5.662986,-6.592119,-2.423195,6.359721,-5.051744,9.515991],[2.393780,-7.880968,-1.365509,3.871189,-7.946671,8.031113,7.639659,3.532513,-7.407595,3.608435,8.589410,1.625029,-8.257384,6.166610,2.847056,-6.854761,9.786726,-2.251141,5.049997,-1.227781,-8.692552,2.687239,-9.240984,-2.631008,3.703676,-2.910761,2.823999,4.627763,-3.205331,-2.169868,5.804610,-2.287161,1.395596,-4.257998,2.092004,-0.668164,-4.153997,7.661515,0.516605,2.358041,4.184068,4.688153,6.454088,5.081634,6.273411,-5.370329,-8.522436,-8.274346,1.342897,-5.138437,1.143795,9.143295,-9.970970,-1.559919,-0.053365,6.151102,-7.281324,-8.883148,3.567449,5.689342,4.061683,9.666306,4.370159,1.262372,-6.734686,0.191421,-4.844762,9.677068,9.825673,-8.326451,4.793566,-4.864473,-6.508634,1.316435,-8.109096,0.176805,-5.778286,3.598491,-8.885640,9.234132,-5.192614,-4.592945,8.857024,-6.496349,2.364456,-2.285181,-3.046959,-5.082557,7.474910,-4.761577,4.672169,2.442032,-9.713856,0.576038,4.026645,3.740994,6.932516,-6.602440,6.353540,0.685806,-0.585948,6.804955,-1.451597,8.810893,8.266120,0.453686,5.973040,2.071853,7.143052,-7.100566,7.744345,5.881531,5.365983,9.124436,-8.452299,-0.121082,-7.713589,1.068338,9.225393,-1.736216,-6.766538,0.576748,-3.001030,5.894788,2.477238,-1.089210,6.754709,7.629570,7.768497,7.736734,-5.662760,-8.293528,4.622047,1.403872,3.311936,3.660412,-3.063762,3.971571,4.198873,-3.535148,8.238463,4.192266,-0.647090,5.199291,9.731529,0.148654,-3.835511,-3.727314,6.394710,2.762771,1.631414,-4.939305,1.760730,-0.037871,-1.482404,-2.927308,5.399831,-5.368348,-6.296960,-3.021893,-1.416714,0.201956,3.036303,-0.301633,-5.604299,9.297475,7.256243,7.739407,-4.750648,7.949589,-6.164547,-0.151054,-7.896629,-7.360393,-1.457916,-2.395990,-7.485504,-8.609001,-9.286456,9.456572,-6.348738,-3.480075,-0.001717,-6.248055,-6.003656,-6.057265,7.244582,-7.506014,0.804258,5.283452,3.356570,5.478069,1.044240,-7.048117,-5.387484,-2.073717,-9.888519,-1.340215,-4.521195,2.816268,0.592318,-5.733731,-2.955244,-5.850832,1.066907,-4.083001,2.043386,-8.208370,2.935234,-1.621385,-7.109849,-5.688106,-3.435110,-0.786411,7.278719,6.414569,6.610206,-3.953240,-5.628193,6.051318,-8.231460,3.928506,5.510931,-0.011237,-5.208219,6.425227,-1.257639,7.834583,-1.360137,4.986552,-0.140976,-0.105359,-7.281136,9.379889,5.224222,-1.021368,-5.120989,-4.888644,-9.922690,-8.796180,3.223204,5.622685,0.751297,-2.876994,-0.508208,-2.169246,-1.932163,-5.277083,2.112141,-7.445600,9.506939,-1.199278,-2.174492,9.244804,7.212058,4.238728,8.716533,-2.149721,8.403146,5.369559,3.191872,-9.512510,-5.918421,-8.891718,0.593878,7.273844,-2.537632,-1.770702,-1.404030,8.470515,-1.213235,-2.529420,3.192056,-2.096125,-8.836970,8.664655,9.305581,6.256540,-2.060389,0.338268,-8.798211,-4.601393,-5.747988,2.996414,8.453073,8.313574,3.011013,3.933614,-1.347292,-2.389876,3.752211,-9.488764,6.700084,8.032171,-4.884608,7.572612,3.433474,9.982336,3.292162,-1.067053,9.476511,-1.153255,8.186052,9.618237,3.963095,-2.844975,9.184527,-6.085935,9.942375,2.638048,-1.702187,-2.185416,-5.962780,-0.094139,5.538635,-4.582790,-8.210337,0.558430,6.853181,2.171297,-2.611628,3.558988,3.509826,1.938075,1.090697,-0.729163,5.832864,1.912892,-3.482734,9.631200,-4.335201,-9.848822,-2.393557,1.727695,-1.878196,7.133973,-7.262157,4.544106,-6.362414,-4.589603,1.761432,6.458505,-8.602047,-7.955687,-7.062219,-8.108152,-1.691589,1.922455,-1.346958,-1.600827,-2.679530,-4.520111,-7.171195,-6.278433,-1.690471,4.827058,9.480624,-8.532764,4.665680,-0.109796,8.451210,3.027199,2.378292,-8.562399,3.845783,-4.780171,-0.157975,-2.855053,-2.549660,1.065501,-5.873878,-0.533061,-5.768132,0.600674,-1.944101,9.538858,-8.970840,9.929340,-8.838879,6.080305,-9.379856,0.162773,-3.088741,1.703812,-3.970038,6.604645,6.443086,-0.834979,2.714977,-1.758036,2.988516,0.788611,-6.033107,1.968826,-6.948056,-7.157500,-1.026885,-9.347188,7.577731,-2.831323,-6.278496,-8.706122,9.028568,1.706121,-4.263875,-1.572759,-8.294044,1.296015,-5.969800,3.287571,-4.828323,0.912145,9.366205,0.535687,-3.834127,-9.738176,-3.464315,-3.273946,6.098151,-4.130684,0.305486,8.569152,-9.726563,-5.310783,8.158081,6.813748,6.887414,-6.478490,-6.637841,-8.480279,5.220654,-1.851793,0.280225,-1.215998,-9.321532,0.913512,0.566444,7.759285,7.097630,2.520035,2.361784,-3.275853,9.957222,8.959873,4.994711,-9.055226,-3.021157,-6.748434],[-2.393819,-8.164189,8.377485,-6.272679,-1.818282,-8.792150,-6.343588,-5.864861,-0.670476,-6.616120,-3.392568,-3.511909,4.195878,-6.030450,9.543098,-8.332331,7.100066,-7.106184,-6.244263,-7.924064,1.768171,-0.160692,-9.405702,8.304067,-9.459107,-5.984694,-6.807722,-3.793666,-4.367944,1.028294,4.624431,3.142668,3.564162,8.278904,-7.187502,-1.286509,-2.261315,8.374930,-9.168410,3.848110,6.889318,3.888992,-2.756671,4.094064,-5.901130,-7.281006,-7.112278,0.461092,-0.018598,9.440523,-4.997225,-6.246244,7.141188,0.552971,-1.691999,-2.071665,-4.215696,0.794691,2.280504,8.454419,-6.555314,1.264804,1.245730,-3.818180,5.483199,4.142064,4.989370,-9.427188,3.792881,-6.679885,-7.002627,2.542807,-6.318307,-9.160099,-7.028694,-6.427946,8.113711,2.998562,-2.040486,-3.358876,-0.173323,4.759244,6.696502,-7.941900,2.884483,5.793580,6.189550,-5.294311,3.011908,0.828627,0.993059,-3.517373,4.430206,1.385676,3.370088,6.173251,6.309795,-7.997294,-7.651129,-5.041800,2.153246,9.856020,-8.636017,5.253708,-1.086151,0.654951,-3.382023,3.387462,-9.317427,9.426902,-9.418860,1.302641,9.468534,7.767721,-0.875272,8.924696,1.308648,-0.784527,-6.272302,0.293317,-8.377019,-6.346187,7.082920,-9.845882,5.496843,6.772055,-5.111939,5.079193,-7.132472,2.118388,-4.475281,2.658869,8.293907,-3.109661,4.940260,0.470176,-6.241689,-3.508937,5.159195,2.400871,-3.545769,-1.903055,2.189502,-0.679475,-8.891057,-8.029620,-6.810919,-0.895641,7.125471,3.970433,0.962157,-9.997808,1.068660,3.776214,8.897761,6.394131,3.787571,-3.335723,5.888257,6.740732,-5.302514,4.504404,3.632668,8.334788,-7.485514,0.883191,1.682124,6.985827,-5.493302,0.343664,-9.788466,9.289146,-9.666857,-9.045032,-1.146128,-8.198461,-1.616143,8.355127,9.061429,-4.344417,0.515281,9.555881,-3.166747,4.134756,7.768213,-7.720171,2.883876,-1.823029,-8.366581,-3.849912,-9.371035,5.950633,-6.132619,-5.894488,9.973972,9.873757,-9.661637,9.666549,4.582104,8.943043,6.779332,-2.607607,8.131538,7.668040,-2.950146,-5.606176,-2.524987,4.137462,-6.286053,-8.275252,-3.358162,-3.534475,4.701552,9.923216,7.716398,5.580071,6.356422,3.793983,-3.839527,-5.851231,-9.628635,1.133397,-6.916506,2.877519,-8.671571,7.358305,0.428127,0.885044,1.488828,-4.767777,5.013622,-1.249416,9.610740,8.353334,-1.751171,-8.367573,-5.298985,0.701072,-2.781132,9.300807,-3.675360,-2.021349,4.993101,-6.518073,-1.214402,0.024039,0.666057,-5.914111,9.696950,-7.059204,2.536885,1.969027,9.201023,8.024248,3.404775,-0.739235,1.039071,-4.324711,2.634511,6.624722,5.871939,1.620300,-9.935496,4.615077,-4.894558,6.535504,8.953695,4.732466,3.508122,-6.722027,-1.955484,9.902090,2.369085,-5.383272,-2.023252,9.225174,-1.262832,-8.355797,-0.467051,-9.391790,-0.173401,8.524641,-0.065890,-7.997502,3.537003,3.962706,8.720157,5.596680,-7.675554,0.283587,0.982912,-9.741696,-9.357228,2.389244,-9.034177,9.524264,6.845564,-4.611885,6.737045,-6.202274,-0.974419,-7.543662,-5.870239,-2.663209,4.458511,9.310934,-7.838453,-6.481617,4.829516,-3.179924,-7.738342,-6.172959,-2.377265,0.543474,8.907062,-0.924605,4.489501,2.421994,-8.879962,-5.645885,-8.736201,-8.486187,7.232772,5.095845,-9.959512,3.154506,9.716850,7.904061,-6.186441,4.883214,-9.335407,1.637152,1.794864,6.826932,7.547073,6.935246,4.752491,-4.537255,9.905917,0.185582,4.966324,-2.919581,-6.291329,-4.676313,-0.344558,-3.822400,4.359911,0.452457,2.721823,-1.709166,-6.376988,-1.336986,-8.120131,7.968471,-8.252693,7.124838,9.138563,-9.379436,7.361330,-2.738506,-3.046859,-0.689815,2.899484,-8.777914,-7.723867,2.662483,8.925036,5.553676,-6.522524,8.236981,6.966725,3.338652,-8.316724,3.469213,-5.622386,8.423802,-1.041190,5.443390,4.636459,-9.330941,-0.867179,7.269867,3.427290,4.031955,9.196746,-4.060417,-9.480452,8.373333,6.989518,-9.548363,-4.122698,3.651699,-9.239601,-3.864797,-1.022216,4.337783,-6.956630,-2.585740,4.893254,-3.710922,-1.528784,-0.366866,-3.626451,5.458732,-8.970772,1.150615,-1.271575,5.134551,6.875215,-5.562199,1.964414,8.122325,-7.447002,2.422631,3.402829,-1.962307,4.316170,-3.085237,-5.950054,4.397341,-0.347682,-8.961391,6.359430,1.331750,0.026338,5.152748,4.020124,3.206551,-5.403454,-0.845987,-9.825555,-0.965951,1.467408,6.791019,-4.216017,-6.513637,2.199019,3.556440,-1.203328,-2.138058,6.249213,-9.538925,-0.146711,-7.021057,6.340859,-5.890889,-9.583027,4.777176]], dtype = "float32")#candidate|5574|(4, 448)|const|float32
call_5572 = relay.TupleGetItem(func_1291_call(relay.reshape(var_5573.astype('float32'), []), relay.reshape(const_5574.astype('float32'), [8, 16, 14]), ), 0)
call_5575 = relay.TupleGetItem(func_1295_call(relay.reshape(var_5573.astype('float32'), []), relay.reshape(const_5574.astype('float32'), [8, 16, 14]), ), 0)
uop_5576 = relay.log10(const_5574.astype('float64')) # shape=(4, 448)
func_889_call = mod.get_global_var('func_889')
func_892_call = mutated_mod.get_global_var('func_892')
var_5585 = relay.var("var_5585", dtype = "float32", shape = (336,))#candidate|5585|(336,)|var|float32
call_5584 = relay.TupleGetItem(func_889_call(relay.reshape(var_5585.astype('float32'), [3, 8, 14])), 0)
call_5586 = relay.TupleGetItem(func_892_call(relay.reshape(var_5585.astype('float32'), [3, 8, 14])), 0)
func_889_call = mod.get_global_var('func_889')
func_892_call = mutated_mod.get_global_var('func_892')
call_5589 = relay.TupleGetItem(func_889_call(relay.reshape(var_5585.astype('float32'), [3, 8, 14])), 0)
call_5590 = relay.TupleGetItem(func_892_call(relay.reshape(var_5585.astype('float32'), [3, 8, 14])), 0)
bop_5592 = relay.minimum(call_5584.astype('int16'), relay.reshape(call_5589.astype('int16'), relay.shape_of(call_5584))) # shape=(3, 8, 14)
bop_5595 = relay.minimum(call_5586.astype('int16'), relay.reshape(call_5590.astype('int16'), relay.shape_of(call_5586))) # shape=(3, 8, 14)
output = relay.Tuple([bop_5525,call_5533,const_5534,uop_5536,call_5540,var_5541,const_5542,call_5546,var_5547,call_5572,var_5573,uop_5576,var_5585,bop_5592,])
output2 = relay.Tuple([bop_5525,call_5535,const_5534,uop_5536,call_5543,var_5541,const_5542,call_5548,var_5547,call_5575,var_5573,uop_5576,var_5585,bop_5595,])
func_5596 = relay.Function([var_5524,var_5541,var_5547,var_5573,var_5585,], output)
mod['func_5596'] = func_5596
mod = relay.transform.InferType()(mod)
var_5597 = relay.var("var_5597", dtype = "int8", shape = (6, 14, 11))#candidate|5597|(6, 14, 11)|var|int8
var_5598 = relay.var("var_5598", dtype = "float64", shape = (600,))#candidate|5598|(600,)|var|float64
var_5599 = relay.var("var_5599", dtype = "int32", shape = (24, 2))#candidate|5599|(24, 2)|var|int32
var_5600 = relay.var("var_5600", dtype = "float32", shape = ())#candidate|5600|()|var|float32
var_5601 = relay.var("var_5601", dtype = "float32", shape = (336,))#candidate|5601|(336,)|var|float32
output = func_5596(var_5597,var_5598,var_5599,var_5600,var_5601,)
func_5602 = relay.Function([var_5597,var_5598,var_5599,var_5600,var_5601,], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5655 = relay.var("var_5655", dtype = "float32", shape = (11, 6, 12))#candidate|5655|(11, 6, 12)|var|float32
uop_5656 = relay.log(var_5655.astype('float32')) # shape=(11, 6, 12)
output = relay.Tuple([uop_5656,])
output2 = relay.Tuple([uop_5656,])
func_5663 = relay.Function([var_5655,], output)
mod['func_5663'] = func_5663
mod = relay.transform.InferType()(mod)
mutated_mod['func_5663'] = func_5663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5664 = relay.var("var_5664", dtype = "float32", shape = (11, 6, 12))#candidate|5664|(11, 6, 12)|var|float32
func_5663_call = mutated_mod.get_global_var('func_5663')
call_5665 = func_5663_call(var_5664)
output = call_5665
func_5666 = relay.Function([var_5664], output)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5997 = relay.var("var_5997", dtype = "float64", shape = (16, 12, 1))#candidate|5997|(16, 12, 1)|var|float64
uop_5998 = relay.cos(var_5997.astype('float64')) # shape=(16, 12, 1)
bop_6001 = relay.mod(uop_5998.astype('float64'), relay.reshape(var_5997.astype('float64'), relay.shape_of(uop_5998))) # shape=(16, 12, 1)
uop_6005 = relay.acosh(var_5997.astype('float32')) # shape=(16, 12, 1)
output = relay.Tuple([bop_6001,uop_6005,])
output2 = relay.Tuple([bop_6001,uop_6005,])
func_6024 = relay.Function([var_5997,], output)
mod['func_6024'] = func_6024
mod = relay.transform.InferType()(mod)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6025 = relay.var("var_6025", dtype = "float64", shape = (16, 12, 1))#candidate|6025|(16, 12, 1)|var|float64
func_6024_call = mutated_mod.get_global_var('func_6024')
call_6026 = func_6024_call(var_6025)
output = call_6026
func_6027 = relay.Function([var_6025], output)
mutated_mod['func_6027'] = func_6027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6084 = relay.var("var_6084", dtype = "float32", shape = (1, 7, 3))#candidate|6084|(1, 7, 3)|var|float32
uop_6085 = relay.sigmoid(var_6084.astype('float32')) # shape=(1, 7, 3)
uop_6088 = relay.cosh(uop_6085.astype('float32')) # shape=(1, 7, 3)
uop_6097 = relay.rsqrt(uop_6088.astype('float64')) # shape=(1, 7, 3)
bop_6102 = relay.bitwise_or(uop_6097.astype('uint8'), relay.reshape(uop_6088.astype('uint8'), relay.shape_of(uop_6097))) # shape=(1, 7, 3)
bop_6107 = relay.minimum(uop_6097.astype('float32'), relay.reshape(bop_6102.astype('float32'), relay.shape_of(uop_6097))) # shape=(1, 7, 3)
func_817_call = mod.get_global_var('func_817')
func_819_call = mutated_mod.get_global_var('func_819')
const_6126 = relay.const([0.206232,-1.249839,2.809379,2.786993,3.963840,9.185201,8.399972,-6.561024,8.124085,-1.482129,3.259024,1.515454,-2.465557,-6.676777,2.920479,-7.588727,-8.118408,-3.952087,8.933444,4.550816,-9.123224,-7.426347,8.672550,-4.909627,-7.213214,0.583846,4.311833,-0.602460,-2.864741,-3.004519,-4.292461,-2.638241,1.618610,8.084785,-6.511885,9.529527,4.576672,5.208429,8.122795,5.627198,-4.983723,8.380875,9.602324,-0.616780,-3.013881,-4.700549,3.676840,-9.308571,2.406452,3.973590,-9.269978,-2.559107,0.551750,-4.551909,9.504422,-0.387028,-2.735371,-7.405322,-2.829934,8.393325,2.063633,3.121655,-1.198498,7.879598,7.563697,-4.289928,-5.617307,3.664920,-1.903230,-3.000867,4.906943,4.838804,-4.971491,-9.920902,-3.833770,-0.703791,1.504436,-5.457877,0.308688,7.710011,5.279860,-5.911871,-5.025886,5.001498,7.856861,2.037365,-2.142580,6.473980,-5.102907,3.057263,1.984042,-5.170368,-6.722231,4.020376,-7.292475,-9.710925,-9.072723,1.717218,8.603550,8.433904,-9.853629,8.680228,1.385699,-1.598500,-3.460765,0.758220,2.184458,-3.732494,-7.426157,3.219183,-6.027091,-2.512614,-2.704409,-5.818432,-3.564351,-6.657918,-5.002511,-8.571733,-0.442521,9.917825,-5.442833,8.300166,-8.389170,9.555737,5.790809,9.730470,6.657418,-3.805887,-9.260076,8.697430,-4.221780,5.297634,8.651503,-9.235955,-6.972489,1.791176,-5.196630,-3.230615,-8.698897,-8.376142,-2.261693,-3.282535,7.654608,5.039576,8.678212,4.909645,3.318846,-7.202144,-2.099575,-0.219214,-6.541458,3.337640,-3.013122,7.034369,-5.590856,-5.576946,9.213622,-5.447351,1.646817,-2.258756,-6.129958,-5.052358,8.051183,-6.185422,-3.044146,-1.734725,-3.247262,8.424343,-2.633586,-5.083703,-9.622238,5.568257,5.753596,8.713642,-6.332303,5.784026,2.844405,-5.606209,-0.926504,-7.839316,3.815698,9.900534,-9.082150,8.642061,8.658840,5.477172,-3.464223,6.814779,-4.256016,3.202962,6.372329,9.004796,-4.974295,6.344764,8.168235,4.052806,-0.854099,-9.679094,-1.742325,7.503524,9.032431,6.531177,-2.401794,1.204989,4.010216,4.807962,1.954745,9.745631,-8.515843,-6.755522,-9.190196,-8.463524,-8.130346,-7.009404,-1.170171,-7.475690,-9.982897,-7.733051,8.691308,-9.847924,-2.052029,7.875748,-7.843182,9.681294,3.589718,-4.381330,-0.881082,-3.056850,-7.202518,7.674736,0.405585,-1.058463,8.789579,-2.613893,2.155870,-5.675186,-5.793577,4.568240,-2.880044,1.089141,6.073231,-3.240894,-1.732270,-6.713656,1.903112,-9.924665,-4.797531,-2.239520,9.212298,-5.102533,4.746848,-8.574957,-6.865419,1.354031,-8.442485,-9.264949,-3.146757,3.583716,7.025006,6.264954,9.066589,7.415022,0.848196,-7.639259,-9.905904,5.717403,7.838113,0.381193,4.232031,-8.215485,8.320088,1.971332,9.637390,9.352953,4.066267,6.644197,-7.438834,-1.945553,4.732243,-9.844178,6.985699,4.767274,6.433786,-2.643075,8.299204,-4.462691,7.303738,4.282026,5.595608,2.990133,1.403478,0.006388,-1.644893,4.921882,-0.431625,1.247564,3.674217,-4.249281,-5.825773,-2.933587,-8.096502,-3.034936,-9.295678,-1.832654,-3.687468,-2.171609,6.850152,7.542591,9.406713,5.375444,-8.934172,3.536600,7.377018,-8.783321,-7.598846,-6.186433,-2.154797,-7.312812,-9.501713,-9.769017,8.175082,-9.101261,-6.642806,-0.588064,3.174018,-9.446625,-6.363457,1.133292,7.120559,9.079007,-5.447239,-6.108291,3.223942,-7.742275,-1.303910,-8.787512,4.587493,-0.281299,7.209394,-5.858499,-3.149971,-2.174141,-7.274976,-9.782416,-8.917454,-9.983888,9.878949,8.730447,1.519215,-5.748882,-4.848552,4.393072,-8.969130,5.711121,-2.797101,-7.192620,-8.007618,-7.233790,-6.814882,7.852067,-1.302933,-0.049861,-7.105782,-1.583289,7.345754,2.613462,-1.749271,5.761720,-5.697499,-6.666928,-4.376543,5.232017,7.093669,-0.411708,5.864745,-8.553171,2.127858,1.884750,-0.226672,9.844057,1.555459,3.680890,-9.175816,-5.908729,-5.717700,1.865302,9.124809,6.001499,-1.780974,-3.447674,6.262892,-8.263218,8.548327,6.052175,0.466336,4.218892,2.677295,-3.691207,-0.826082,9.393797,5.690847,8.537396,1.356110,-1.479562,-8.077040], dtype = "float32")#candidate|6126|(405,)|const|float32
call_6125 = func_817_call(relay.reshape(const_6126.astype('float32'), [15, 3, 9]))
call_6127 = func_817_call(relay.reshape(const_6126.astype('float32'), [15, 3, 9]))
const_6145 = relay.const([[[-6.754305,8.742335,-7.453284],[9.610384,-3.873495,-3.091887],[-5.914694,-0.782279,5.376048],[8.017450,0.274251,5.528950],[-0.473505,0.543635,-8.526791],[9.953354,-5.523078,7.398978],[-8.681838,-8.400578,5.708659]],[[8.226148,8.579980,-7.822238],[6.393784,-0.761944,3.708298],[-5.686062,-5.594099,6.471977],[-2.607353,-8.738091,4.134315],[-8.673275,-6.812971,6.892096],[6.372770,8.889889,-6.012665],[6.967790,0.058718,-4.180188]],[[-6.059173,4.612486,-4.912453],[8.077220,0.519262,0.302299],[-7.519324,-4.494954,-2.824325],[-2.623823,7.038842,0.590026],[0.681402,9.883707,-3.371490],[3.713571,6.818441,4.403385],[-0.866628,-2.276614,-7.809120]],[[-7.002602,9.198080,-8.722137],[-7.200507,7.140741,-9.605819],[6.646532,-7.936470,8.503406],[-8.966833,5.905489,2.517922],[-9.148988,6.969557,9.983404],[-6.525170,-6.044145,-7.534309],[-3.961738,-4.080439,-4.570332]],[[-4.645222,-1.739735,0.590407],[6.746542,3.933296,6.622619],[5.897455,-2.686811,-4.160446],[6.775564,0.841944,4.370746],[-5.493102,5.129570,1.096570],[1.567507,8.161635,-8.348845],[3.441357,8.222430,-5.226588]]], dtype = "float64")#candidate|6145|(5, 7, 3)|const|float64
bop_6146 = relay.floor_mod(uop_6097.astype('float64'), const_6145.astype('float64')) # shape=(5, 7, 3)
func_741_call = mod.get_global_var('func_741')
func_745_call = mutated_mod.get_global_var('func_745')
var_6154 = relay.var("var_6154", dtype = "float64", shape = (196,))#candidate|6154|(196,)|var|float64
const_6155 = relay.const([-5.814416,0.279717,6.872890,-9.311495,-4.017033,8.046990,3.130374,-1.288875,6.448637,7.822527,-9.169430,0.355975,-5.410941,-8.984086,7.977560,-8.414911,9.710593,1.283542,7.859201,-8.355204,-9.503084,-1.766918,9.722527,-2.724915,1.422823,0.248182,1.795020,5.279755,2.610726,4.223387,-5.028943,-1.437353,5.715542,-0.188585,-1.246159,-2.776100,2.581248,-8.567857,-1.997559,6.278237,-6.078576,0.183477,7.585554,2.208991,-6.684964,-4.674973,-3.820568,-6.314558,-4.643935,2.026639,8.044423,-0.206213,-8.572842,6.681186,4.612603,0.580326,9.236941,8.332541,4.340905,-3.312551,-2.775072,-9.445333,3.160999,-6.680756,6.209729,-7.864139,-2.871413,7.233517,5.973825,4.649340,7.853463,-5.436557,8.637277,-0.592240,1.426225,-6.745820,9.864179,-2.420043,-6.636020,-6.047474,-5.640097,-9.240193,4.851775,-3.667052,2.665102,4.690525,-7.734008,0.832947,-7.518649,-2.464471,-0.888683,2.242197,1.415926,8.346427,-2.968228,0.867807,-2.393096,4.140055,-2.678031,7.324986,1.284748,-0.129852,-5.898666,2.651707,3.849999,-1.036852,3.113798,8.932223,-2.567742,-6.608257,0.050735,0.560119,4.645859,5.846252,-6.017886,0.658634,-4.543016,5.565706,-1.066326,1.376657,-9.703315,7.136090,4.693574,-3.829776,8.869335,-2.806949,3.784379,6.488601,2.531812,-3.808188,2.655360,8.614296,1.400604,-7.740623,-6.559077,-8.807018,-8.686924,-3.012997,-1.719173,3.247229,2.686815,-3.418257,7.896160,2.954451,3.034637,6.148537,-4.444537,-4.890245,7.055239,0.615447,-8.674736,1.389457,6.388027,-0.905813,-8.254850,-0.229766,1.892626,-2.629315,-5.923853,7.451874,3.362854,-7.668520,-5.179870,-5.277749,6.182446,8.021148,1.173688,-9.764058,-2.732489,-7.661924,-9.835036,-2.365412,-8.007038,3.229609,-7.034901,-5.284251,2.416927,5.790503,8.596549,2.025239,9.494378,-6.995553,2.903068,-5.903725,7.149970,5.848611,9.193813,0.435503,-8.077029,-0.725136,-6.960027,6.718095,4.060590,4.244499,-1.852404,0.475628,3.496809,-5.298220,9.893260,-6.502865,6.594961,-9.439390,8.961194,-4.058156,-9.284787,-9.070373,2.499318,-9.617564,5.814221,7.796517,1.161429,0.536974,-2.824034,5.066582,-2.383276,-2.103931,7.834812,-0.608114,4.123208,8.805762,7.054710,-3.275716,6.363500,8.872101,-3.157453,-7.372750,-5.285112,-1.966030,5.850447,-4.337177,2.710865,6.386164,1.084093,5.605278,8.988645,2.109684,-2.034983,8.510920,-5.521649,-8.067354,-8.861511,-1.194446,9.175221,2.155235,2.980689,-6.836592,3.993329,4.301122,-8.916219,0.092288,0.175328,-8.258809,-8.421818,5.726055,3.687547,5.613288,-8.164289,-0.772854,-9.373709,-7.869282,3.509877,-1.045787,6.991017,4.085380,-1.629243,9.839830,9.769969,9.524056,5.445925,2.825099,1.165293,-5.527150,-4.811168,2.144806,0.447457,-4.996040,-0.404055,8.236346,6.439890,1.793989,9.248825,7.288444,4.820506,-7.630597,-3.165325,9.750631,-7.856522,0.529083,-1.825055,2.445433,6.673974,-0.205493,-0.625242,6.936480,-9.400257,1.605575,0.860216,9.680181,3.963633,5.402946,8.417386,6.973117,1.099662,-2.276061,6.654945,7.745913,-9.955742,3.170905,0.698081,-7.637213,2.021179,2.207737,-1.805229,5.666793,-4.462516,8.574408,6.811432,9.726092,-5.977411,-5.699708,3.913302,-9.538216,9.930596,-4.248781,-9.969817,6.916915,-0.013250,-2.066017,7.861775,-5.037918,-5.014957,7.077080,8.395068,-3.905430,-7.195552,9.333770,-9.545427,7.047270,1.556366,-7.420435,-2.078599,-9.816169,-4.507896,-1.473509,-3.566800,8.467932,-1.173294,0.269658,1.489573,6.705993,-1.627732,6.837110,-1.934688,0.719107,-3.488833,0.289445,6.224911,1.800043,-1.150741,9.604820,2.107094,-7.516673,0.944526,6.356405,4.747866,-5.054059,4.011190,1.725287,1.166578,-0.759594,-1.944235,-9.573076,5.492440,-6.751302,8.385687,-6.745099,-9.895856,0.698488,-0.536403,1.645409,0.978165,-8.553627,0.788806,8.952038,-0.969137,1.849066,2.137773,-0.520631,8.765607,7.149131,-4.931091,9.904809,-6.489572,-4.533005,0.054702,-8.413791,0.355656,-9.096785,-1.669872,7.957608,4.421866,-5.676351,5.181980,3.921114,8.826097,0.963471,-1.896990,-1.451567,8.410993,-3.261023,-9.219969,-9.484160,0.885913,9.892592,-3.894419,-6.349719,1.703320,-6.789986,8.008277,8.550873,-8.660916,-9.520988,-4.980864,8.536757,9.851574,-0.970120,1.451224,2.327911,8.997854,-9.717886,-5.119439,9.059840], dtype = "float64")#candidate|6155|(432,)|const|float64
call_6153 = relay.TupleGetItem(func_741_call(relay.reshape(var_6154.astype('float64'), [2, 14, 7]), relay.reshape(const_6155.astype('float64'), [432,]), ), 5)
call_6156 = relay.TupleGetItem(func_745_call(relay.reshape(var_6154.astype('float64'), [2, 14, 7]), relay.reshape(const_6155.astype('float64'), [432,]), ), 5)
const_6165 = relay.const([[[9.990106,3.385708,9.249473],[3.405172,-3.466314,-1.095444],[-0.951494,5.392956,7.723394],[2.709227,2.948404,9.080093],[8.096374,7.599007,3.734781],[-2.027582,1.746323,-6.425756],[-3.308211,4.841187,9.868208]]], dtype = "float32")#candidate|6165|(1, 7, 3)|const|float32
bop_6166 = relay.greater(uop_6088.astype('bool'), relay.reshape(const_6165.astype('bool'), relay.shape_of(uop_6088))) # shape=(1, 7, 3)
output = relay.Tuple([bop_6107,call_6125,const_6126,bop_6146,call_6153,var_6154,const_6155,bop_6166,])
output2 = relay.Tuple([bop_6107,call_6127,const_6126,bop_6146,call_6156,var_6154,const_6155,bop_6166,])
func_6175 = relay.Function([var_6084,var_6154,], output)
mod['func_6175'] = func_6175
mod = relay.transform.InferType()(mod)
var_6176 = relay.var("var_6176", dtype = "float32", shape = (1, 7, 3))#candidate|6176|(1, 7, 3)|var|float32
var_6177 = relay.var("var_6177", dtype = "float64", shape = (196,))#candidate|6177|(196,)|var|float64
output = func_6175(var_6176,var_6177,)
func_6178 = relay.Function([var_6176,var_6177,], output)
mutated_mod['func_6178'] = func_6178
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6678 = relay.var("var_6678", dtype = "float32", shape = (14, 4, 4))#candidate|6678|(14, 4, 4)|var|float32
uop_6679 = relay.exp(var_6678.astype('float32')) # shape=(14, 4, 4)
output = relay.Tuple([uop_6679,])
output2 = relay.Tuple([uop_6679,])
func_6685 = relay.Function([var_6678,], output)
mod['func_6685'] = func_6685
mod = relay.transform.InferType()(mod)
mutated_mod['func_6685'] = func_6685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6686 = relay.var("var_6686", dtype = "float32", shape = (14, 4, 4))#candidate|6686|(14, 4, 4)|var|float32
func_6685_call = mutated_mod.get_global_var('func_6685')
call_6687 = func_6685_call(var_6686)
output = call_6687
func_6688 = relay.Function([var_6686], output)
mutated_mod['func_6688'] = func_6688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6850 = relay.var("var_6850", dtype = "float64", shape = (10, 10, 1))#candidate|6850|(10, 10, 1)|var|float64
uop_6851 = relay.log(var_6850.astype('float64')) # shape=(10, 10, 1)
output = relay.Tuple([uop_6851,])
output2 = relay.Tuple([uop_6851,])
func_6860 = relay.Function([var_6850,], output)
mod['func_6860'] = func_6860
mod = relay.transform.InferType()(mod)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6861 = relay.var("var_6861", dtype = "float64", shape = (10, 10, 1))#candidate|6861|(10, 10, 1)|var|float64
func_6860_call = mutated_mod.get_global_var('func_6860')
call_6862 = func_6860_call(var_6861)
output = call_6862
func_6863 = relay.Function([var_6861], output)
mutated_mod['func_6863'] = func_6863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7325 = relay.var("var_7325", dtype = "float32", shape = (4, 3, 7))#candidate|7325|(4, 3, 7)|var|float32
uop_7326 = relay.log10(var_7325.astype('float32')) # shape=(4, 3, 7)
output = uop_7326
output2 = uop_7326
func_7328 = relay.Function([var_7325,], output)
mod['func_7328'] = func_7328
mod = relay.transform.InferType()(mod)
var_7329 = relay.var("var_7329", dtype = "float32", shape = (4, 3, 7))#candidate|7329|(4, 3, 7)|var|float32
output = func_7328(var_7329)
func_7330 = relay.Function([var_7329], output)
mutated_mod['func_7330'] = func_7330
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7737 = relay.const([[[-6.454652,6.175785,-6.916402,7.492387],[-8.490119,-2.755955,-2.472938,0.097797],[-4.342611,-3.182283,-1.347291,-1.166986],[-9.315014,2.418618,9.683349,-3.977829],[-2.502773,-6.056297,6.273451,5.107470],[2.427613,-5.392791,-8.641056,-9.747965],[-8.442466,5.656656,3.398703,5.762643],[2.721355,-8.786777,7.978730,7.654180],[6.096402,-8.393429,7.983911,-1.547156],[6.317647,-1.472430,-1.719425,-1.368737],[1.431671,-9.240411,-7.187637,-1.754098]],[[-7.607565,-5.834678,3.434010,-7.312359],[6.469360,-5.780634,-9.843012,7.579838],[2.423182,6.232506,3.161014,-8.053236],[6.194102,0.017001,-4.137877,-9.251654],[2.204754,-3.139185,-3.902770,5.341056],[0.313216,-6.634505,-8.268597,6.676970],[1.346119,0.527487,5.762120,9.691821],[-0.966900,-7.696401,-5.664004,-5.962928],[1.376633,-2.038241,7.863869,-3.199595],[1.647474,-2.581728,-4.201391,6.932031],[4.686198,-0.835726,7.652614,8.919526]],[[1.021160,-4.623083,-1.364306,8.395381],[-6.468449,7.590024,0.503320,-0.471501],[-8.101381,-8.104800,6.144605,-1.216142],[-7.920596,5.624155,-8.982895,-7.540740],[-7.936383,8.755519,0.370960,-5.637914],[4.363986,7.270885,5.860017,9.618809],[-9.686222,1.452169,-5.032777,-7.626984],[-7.007653,-5.601407,8.445139,-0.445898],[9.950073,-4.601582,-2.622407,-1.124518],[0.196519,-5.827594,-1.315535,-9.654013],[1.748079,-8.646460,-7.960448,9.590692]],[[-1.092843,0.279867,-8.662655,3.938583],[-2.615964,-2.152046,-3.950198,-1.544323],[-9.600425,6.009262,-3.471179,4.917328],[3.306797,3.631533,6.656255,-7.426757],[-6.208384,6.473917,-4.151778,0.258319],[-7.571632,0.739739,-3.784368,-8.300922],[7.968613,9.957023,-2.229602,8.755917],[-3.126983,6.759390,7.097463,4.619087],[6.555813,-3.623873,5.178330,-9.972088],[3.670662,7.457439,6.007269,-0.731676],[3.721054,7.661527,9.168513,3.924683]],[[2.784672,8.726370,-8.427333,7.145807],[6.101225,4.587596,3.770871,-3.053614],[-7.583423,-1.627588,-9.112423,-7.072587],[8.574256,3.739185,-3.073676,-6.252318],[4.572713,8.597169,5.687154,7.582991],[-6.753598,2.975211,6.599059,3.615758],[3.253234,7.027911,-1.088880,4.930716],[9.357738,-0.135319,6.339952,-8.436719],[-7.170366,9.108810,-3.097815,-6.784792],[3.280248,-6.096478,-7.131742,-9.505803],[8.752351,0.277227,7.017239,8.695881]],[[0.696316,4.562704,8.044255,1.835721],[7.707260,5.038678,3.834716,-7.397719],[8.103149,0.528805,-0.475370,-5.165900],[-3.100609,-1.741663,-5.383492,-6.113564],[0.388876,5.992117,5.261997,1.229462],[1.463491,-3.783832,-8.167076,5.885093],[4.405395,3.632565,2.947084,-6.762103],[1.379442,0.879510,-3.265038,7.477085],[8.229794,-9.196941,8.005848,2.366311],[-4.143951,-5.074866,5.818819,8.431706],[-8.865977,-4.889422,-9.073334,8.802128]],[[9.504683,0.094981,1.780936,-3.799409],[6.758013,2.697107,-0.621494,6.821999],[8.821790,5.520755,-0.519409,0.118145],[-5.372272,-9.098357,-1.331676,-2.720455],[-6.622194,-6.966489,6.644151,6.785870],[8.099892,9.299878,8.182948,9.359173],[-8.737962,3.940220,2.859242,-4.555352],[6.418260,-3.779617,-8.503598,9.760585],[-6.981400,-6.123040,-8.859995,3.317187],[2.176020,8.649886,7.566492,1.945738],[-6.981249,-7.942545,1.126666,0.680836]],[[1.051086,3.942929,-2.345694,5.950811],[-1.417235,-2.746009,9.747932,-5.523273],[6.179251,3.830797,-0.591164,-3.739168],[-9.561286,-3.373730,6.271406,-0.156307],[2.520535,7.078321,-2.569251,3.920566],[-7.441926,-8.181455,7.382258,-4.667186],[-8.909038,2.531363,-4.195529,9.942344],[3.575301,2.296949,1.131330,3.135854],[5.798443,1.698107,7.590344,-1.210203],[-2.786449,2.464351,0.330015,-3.960866],[-8.043702,5.440849,-6.221450,1.608453]],[[-3.848389,-5.618169,-9.546014,1.085722],[-8.886526,4.889492,0.666319,-9.464091],[-6.838016,2.426300,3.440230,-1.159783],[8.833104,6.470673,-3.106960,3.342528],[8.532008,5.095023,-3.842614,2.896769],[1.830075,-9.126784,-3.664968,-0.381845],[4.598789,-6.302095,-9.489013,-5.017854],[-7.927725,6.628125,-6.451139,-2.065187],[-5.691963,9.418529,-2.543226,-0.876609],[5.966032,-0.332068,8.992691,0.463684],[-2.559923,7.164065,-0.298984,-4.451666]],[[7.159830,1.326338,5.954585,3.564661],[2.341225,-9.663673,3.238785,7.850567],[7.657976,-3.765087,6.087102,8.627801],[-5.981744,-6.789645,-4.930010,2.371840],[-0.337122,5.226350,-1.222842,2.506011],[9.822046,6.708884,-0.319517,-9.798698],[-1.756757,-1.463940,-9.779162,1.795489],[4.247046,3.205080,0.829478,7.118068],[8.823545,0.443048,-6.141618,-5.326338],[-2.766922,-4.988059,-0.188283,-0.976921],[-4.692009,-1.014320,2.136864,4.541329]],[[8.282656,-6.592983,7.578321,-4.147561],[9.529861,9.728652,7.301659,5.180101],[6.939732,-5.393776,-8.832201,5.190236],[-9.343981,3.347062,7.486604,-4.106723],[4.517124,5.761182,-0.001974,-6.556643],[8.312620,8.110851,2.493799,-4.166217],[8.097829,-6.608151,-2.399820,-6.189770],[-7.431776,-8.693402,-3.061582,-8.022591],[5.941311,-5.444717,-1.457238,4.312494],[-2.586880,-4.632101,-9.995590,7.243411],[6.016162,5.041888,8.816003,-5.802526]],[[-4.049617,6.241264,8.843114,-1.355675],[-8.202250,8.401845,7.978970,-5.291446],[1.622441,9.164684,-7.371418,7.532330],[1.419786,6.656812,-0.386277,-1.847093],[-5.664484,6.552882,8.538627,-8.451559],[2.037567,-5.575623,0.951698,-1.893110],[2.248332,-3.252279,-0.627138,-7.970934],[-2.556594,-3.841268,8.370660,4.864857],[6.847235,-4.350366,9.154847,-4.080097],[-3.990092,8.657353,1.744511,-5.828183],[-8.221460,-2.323250,8.736975,-6.727300]],[[-2.948257,-5.443213,6.004760,0.529360],[1.528972,0.206603,7.551479,8.359666],[5.454048,6.595973,-0.899575,9.705074],[-5.239973,-9.469529,-6.602302,1.093534],[6.435203,0.501636,-7.810823,2.174827],[-7.530898,-9.133726,-7.983141,5.989882],[-8.321106,0.297631,-5.127125,4.073573],[-2.430569,-4.679043,-5.912528,-5.873103],[-3.234574,-6.986637,-1.744265,-1.123539],[5.258688,-3.327580,-4.857994,9.402405],[-1.450107,0.215690,7.998970,2.273067]],[[-7.411407,3.895883,-2.233257,8.938719],[1.683166,8.830480,0.771953,-8.743812],[-6.073992,3.476367,-8.262130,4.432603],[1.258407,2.304899,-3.712590,-0.434151],[8.077091,9.705125,6.466255,-6.779307],[0.711209,3.156305,7.687181,7.882536],[-2.395158,-1.153765,6.952759,-8.653377],[-0.097029,9.690350,-5.364408,-2.713117],[9.160871,4.029103,-8.067978,6.755829],[4.204655,-6.743556,-3.588290,-7.597474],[-4.784502,2.750180,1.395679,-9.366442]],[[-5.140162,-8.730128,-5.660661,-2.770914],[-7.247335,-4.899483,2.054241,-6.667828],[-7.926628,6.422877,-4.090978,-0.255054],[-4.286808,-4.554878,5.086652,9.097870],[3.956914,-9.140951,-2.857093,0.192746],[6.881575,4.964673,-1.715299,9.094633],[8.704753,6.961484,5.882147,-9.119135],[-6.363576,7.079997,-9.611539,2.872717],[-4.260547,5.198197,-7.657604,4.518199],[-6.410194,-3.929791,7.752398,-0.976553],[-1.373466,-5.913311,5.307892,2.974863]]], dtype = "float32")#candidate|7737|(15, 11, 4)|const|float32
var_7738 = relay.var("var_7738", dtype = "float32", shape = (15, 11, 4))#candidate|7738|(15, 11, 4)|var|float32
bop_7739 = relay.floor_mod(const_7737.astype('float32'), relay.reshape(var_7738.astype('float32'), relay.shape_of(const_7737))) # shape=(15, 11, 4)
func_4810_call = mod.get_global_var('func_4810')
func_4813_call = mutated_mod.get_global_var('func_4813')
const_7745 = relay.const([[-8],[5],[-8],[-2],[-6],[-3],[-10],[-2],[3],[-9],[5],[9],[3],[-9],[-5],[-7],[-8],[8],[7],[10],[-2],[6],[7],[-9],[2],[-1],[1],[-9],[1],[1],[-5],[-6],[1],[8],[-5],[-3],[3],[-6],[-7],[-1],[2],[8],[-1],[8],[-4],[-7],[-7],[1],[8],[-6],[-10],[-9],[-6],[5],[10],[4],[7],[7],[-10],[-9],[6],[-5],[-10],[9],[-6],[10],[-3],[10],[4],[5],[-1],[-7],[-3],[-8],[1],[-9],[-5],[8],[-1],[-3],[3],[4],[2],[5],[1],[-1],[-1],[3],[-3],[6],[8],[1],[-10],[-9],[7],[7],[-5],[5],[-6],[3],[-4],[-2],[-5],[8],[-5],[3],[2],[9],[2],[-2],[-9],[-10],[9],[-2],[-8],[4],[1],[7],[-2],[3],[-1],[-5],[10],[-6],[3],[1],[6],[-8],[7],[-2],[7],[8],[-6],[4],[-2],[-7],[3],[8],[5],[6],[-2],[10],[8],[-3],[-8],[-3],[4],[2],[6],[8],[-3],[3],[-9],[1],[-6],[2],[6],[6],[-1],[-1],[5],[-5],[5],[9],[-1],[1],[3],[2],[-6],[-6],[10],[10],[3],[1],[4],[-5],[6],[-8],[-5],[-4],[5],[4],[1],[10],[9],[-2],[5],[6],[-6],[3],[9],[-9],[-8],[-7],[5],[3],[7],[9],[-3],[7],[-6],[-10],[9],[-10],[3],[4],[-3],[-8],[-9],[4],[-6],[-5],[-4],[3],[3],[7],[1],[10],[-5],[6],[4],[-1],[-5],[8],[2],[10],[-10],[-3],[9],[-10],[-7],[10],[8],[7],[-10],[3],[-5],[3],[-1],[-3],[-4],[3],[8],[-8],[1],[7],[-9],[-4],[-9],[-10],[6],[-3],[6],[-10],[-8],[4],[-6],[5],[2],[-2],[3],[2],[8],[-9],[-9],[-6],[-2],[5],[-6],[7],[-7],[-7],[9],[-8],[-7],[-5],[-10],[2],[-3],[7],[-10],[6],[-1],[-2],[-5],[2],[-1],[7],[-10],[10],[-5],[-6],[1],[5],[1],[-5],[-2],[-4],[3],[1],[-6],[-2],[-1],[-4],[3],[-6],[10],[5],[4],[-7],[-1],[-7],[-5],[-7],[7],[-8],[2],[-10],[8],[2],[10],[10],[-2],[1],[-5],[10],[-3],[1],[7],[8],[-8],[9],[-6],[-3],[-2],[6],[4],[10],[-10],[-3],[-9],[1],[9],[-2],[1],[-4],[-6],[-9],[9],[9],[-6],[3],[-10],[8],[-6],[-7],[4],[-9],[-9],[3],[10],[-9],[8],[1],[1],[-3],[2],[8],[9],[-5],[7],[-9],[7],[5],[-8],[-8],[-4],[5],[6],[-3],[3],[-5],[-10],[-10],[-9],[3],[5],[8],[-10],[2],[1],[-4],[-8],[1],[4],[-10],[-10],[3],[-7],[10],[-6],[-3],[-6],[2],[6],[-4],[3],[-4],[-7],[-6],[8],[8],[-2],[9],[-2],[7],[-1],[10],[5],[-3],[-8],[-8],[5],[2],[6],[4],[4],[2],[-5],[-7],[-10],[-6],[7],[10],[7],[-3],[-10],[-6],[2],[10],[-7],[-1],[-8],[-9],[4],[9],[-10],[-4],[-10],[1],[8],[2],[6],[7],[-7],[-3],[3],[5],[7],[-4],[10],[4],[10],[-1],[2],[8],[7],[-2],[-8],[-10],[-7],[-9],[-8],[-2],[10],[5],[-1],[2],[-7],[-4],[6],[-1],[-3],[-7],[-3],[8],[-1],[-10],[1],[4],[-10],[-1],[-10],[-6],[7],[-5],[1],[-9],[10],[-7],[-2],[-1],[-2],[-2],[5],[-4],[6],[9],[10],[2],[5],[-2],[5],[3],[9],[8],[-5],[-6],[2],[-9],[3],[3],[1],[-3],[7],[-10],[-3],[9],[6],[-3],[1],[8],[-10],[4],[2],[10],[-9],[5],[5],[2],[-5],[4],[-7],[-8],[-4],[7],[4],[-3],[2],[8],[-1],[9],[1],[1],[-6],[-8],[7],[1],[-5],[-6],[3],[4],[3],[-4],[3],[8],[2],[7],[3],[-1],[-2],[10],[-1],[5],[3],[4],[-7],[5],[-6],[-4],[3],[-4],[-9],[-8],[8],[1],[-8],[-1],[-3],[4],[-8],[-2],[-5],[-4],[6],[-9],[-9],[-1],[5],[-1],[9],[-4],[3],[6],[2],[2],[8],[-4],[10],[5],[5],[2],[8],[-2],[-5],[7],[3],[2],[7],[-1],[-8],[6],[6],[-9],[7],[2],[-10],[7],[10],[-3],[2],[-2],[9],[2],[2],[4],[8],[-7],[1],[3],[-2],[9],[-1],[-9],[6],[9],[-10],[-5],[-5],[-9],[-2],[-8],[-5],[7],[3],[-2],[-4],[6],[-9],[-8],[7],[-5],[8],[-9],[6],[-1],[-1],[9],[6],[-1],[-5],[-5],[-8],[-4],[-7],[4],[-10],[4],[8],[1],[1],[4],[-1],[-9],[-8],[-5],[5],[-2],[2],[-10],[10],[3],[-4],[8],[-10],[9],[8],[-5],[-6],[-7],[7],[7],[-3],[-5],[-5],[-2],[-10],[5],[-1],[7],[1],[-3],[9],[10],[-4],[-10],[-9],[3],[4],[-5],[-4],[5],[1],[7],[2],[-5],[1],[-2],[8],[6],[6],[-3],[10],[9],[3],[-4],[10],[-10],[-9],[6],[4],[-2],[9],[-5],[-3],[1],[6],[-8],[-1],[2],[-10],[10],[6],[-2],[-8],[6],[-10],[-6],[2],[8],[-4],[-7],[-2],[-7],[-2],[8],[5],[-2],[9],[-6],[2],[10],[10],[-1],[-9],[10],[-7],[-4],[-3],[-3],[-1],[-7],[-8],[-7],[-2],[-5],[-7],[-6],[-2],[9],[-5],[7],[-5],[-10],[-5],[3],[3],[-10],[8],[-7],[2],[-5],[-8],[-6],[-10],[-4],[-4],[-7],[-3],[9],[-2],[-3],[6],[-6],[-3],[-7],[5],[-2],[4],[3],[-2],[9],[7],[9],[4],[9],[-4],[-1],[-8],[-5],[7],[3],[-3],[-7],[4],[-1],[7],[4],[-7],[-4],[-1],[-5],[7],[-3],[2],[-3],[-9],[3],[5],[9],[7],[6],[9],[8],[3],[6],[-6],[10],[8],[8],[1],[-7],[2],[-2],[-9],[4],[2],[-10],[2],[-6],[-9],[-8],[5],[10],[-1],[-1],[2],[5],[-9],[10],[-10],[4],[6],[3],[-1],[2],[3],[-6],[-8],[-2],[-5],[-5],[3],[2],[9],[-10],[6],[-2],[-7],[10],[-8],[-9],[-2],[9],[-1],[1],[6],[-4],[6],[-10],[8],[7],[-5],[8],[-6],[1],[3],[-4],[5],[9],[6],[4],[7],[-10],[-6],[9],[2],[7],[5],[-1],[-6],[-4],[4],[-7],[3],[7],[-5],[-1],[10],[5],[-2],[7],[-10],[-3],[-2],[9],[-7],[-8],[-3],[10],[-1],[7],[-9],[-6],[10],[5],[8],[7],[-8],[5],[5],[9],[-9],[4],[4],[-9],[-2],[-10],[-3],[-10],[-10],[6],[-6],[-5],[5],[4],[6],[-3],[2],[8],[-3],[10],[-1],[8],[9],[-8],[4],[-4],[-9],[5],[-9],[-6],[-6],[-1],[-8],[6],[-3],[-9],[-9],[10],[-9],[-4],[2],[-3],[6],[-5],[-9],[-1],[1],[3],[8],[1],[8],[-6],[10],[-4],[2],[-10],[-5],[-7],[1],[6],[-4],[6],[7],[-5],[1],[-6],[7],[-5],[-8],[6],[6],[-6],[8],[-1],[-7],[2],[-6],[-7],[10],[-9],[7],[1],[9],[-10],[4],[7],[-1],[2],[-6],[2],[-4],[7],[3],[-4],[-5],[3],[10],[5],[-9],[-6],[-3],[4],[6],[5],[10],[7],[2],[-3],[-7],[7],[2],[3],[5],[1],[7],[8],[8],[3],[-1],[-6],[-6],[5],[7],[2],[-7],[-6],[-2],[-10],[9],[10],[9],[-7],[3],[3],[-8],[4],[-3],[1],[-9],[2],[3],[-4],[6],[-1],[-7],[4],[-2],[-7],[9],[-6],[-10],[-1],[1],[3],[-7],[5],[-4],[7],[5],[7],[-1],[-10],[-2],[-8],[8],[9],[6],[2],[-4],[-7],[-1],[-2],[-1],[5],[9],[8],[2],[4],[6],[4],[8],[1],[-3],[-3],[-8],[-9],[1],[4],[-2],[-6],[8],[4],[-3],[-6],[10],[2],[-3],[-4],[-7],[-5],[-7],[6],[10],[10],[6],[5],[-1],[5],[-7],[4],[1],[7],[-10],[-2],[10],[-4],[4],[5],[-7],[-7],[2],[-8],[-3],[8],[4],[-9],[-7],[-8],[-9],[-5],[-10],[6],[-8],[-9],[7],[-9],[-10],[-1],[-10],[2],[10],[-10],[8],[-5],[10],[6],[1],[-3],[6],[-6],[-10],[1],[2],[2],[8],[7],[-5],[-6],[-4],[-10],[10],[-4],[1],[-2],[3],[-9],[4],[2],[1],[-9],[8],[-6],[2],[-8],[2],[5],[-5],[5],[-8],[4],[-8],[4],[-2],[-8],[-10],[1],[-5],[-3],[-10],[7],[10],[-5],[1],[-2],[8],[10],[-8],[8],[9],[-4],[-4],[-9],[3],[-8],[-2],[4],[-7],[6],[1],[-6],[-3],[-5],[-1],[4],[10],[10],[-2],[-3],[-10],[7],[-5],[3],[-1],[9],[8],[-1],[4],[-3],[-10],[6],[4],[1],[5],[-2],[-6],[7],[3],[-3],[-1],[-6],[-2],[10],[-4],[10],[2],[3],[-3],[4],[10],[-3],[7],[10],[-1],[4],[-7],[-9],[-9],[4],[1],[-9],[-3],[-1],[-9],[-4],[-2],[-7],[-8],[1],[-10],[-1],[5],[-8],[8],[10],[-10],[-6],[-9],[9],[3],[9],[4],[-6],[-3],[-4],[-4],[-1],[-7],[-5],[-1],[-6],[-2],[-3],[-9],[-1],[8],[10],[5],[4],[5],[-10],[5],[7],[-10],[-6],[-7],[-3],[-7],[10],[-1],[-10],[10],[-10],[-6],[-3],[-6],[-7],[4],[-2],[-8],[5],[-1],[2],[5],[3],[2],[4],[3],[-7],[10],[-9],[10],[-7],[2],[9],[8],[-5],[10],[-8],[-9],[10],[6],[5],[8],[8],[9],[6],[5],[-6],[-5],[-7],[8],[-1],[-9],[-3],[9],[2],[-7],[-5],[-7],[7],[-10],[7],[-8],[-2],[-9],[5],[1],[6],[-6],[8],[4],[3],[5],[10],[-2],[-7],[-10],[8],[9],[-3],[9],[6],[8],[9],[2],[-1],[7],[10],[3],[5],[-7],[-8],[9],[4],[-3],[8],[7],[-3],[-5],[8],[10],[-4],[3],[-1],[5],[2],[8],[-6],[-3],[7],[-9],[2],[-9],[10],[-7],[-1],[-8],[-6],[-10],[7],[-2],[-5],[8],[-9],[4],[-9],[-1],[1],[-5],[-3],[-9],[-9],[-1],[8],[-3],[7],[4],[6],[-5],[-3],[3],[6],[-4],[-5],[9],[-9],[-4],[7],[-5],[-9],[10],[4],[7],[-7],[6],[-3],[-3],[-2],[-5],[-6],[-7],[-5],[5],[-6],[-7],[-9],[-10],[4],[-2],[2],[-3],[9],[-6],[-5],[-8],[-7],[5],[-5],[4],[-1],[8],[-1],[-2],[10],[5],[3],[8],[6],[-3],[-5],[1],[5],[6],[8],[-3],[2],[-8],[10],[7],[5],[-1],[-2],[10],[-5],[8],[-3],[3],[-8],[-8],[-10],[5],[2],[6],[-5],[-3],[7],[-9],[-7],[6],[4],[-1],[6],[7],[-5],[-10],[7],[9],[-1],[3],[-10],[-8],[-2],[-7],[-8],[10],[-8],[8],[-7],[9],[9],[-6],[-5],[6],[-10],[3],[7],[6],[-8],[10],[-5],[-7],[1],[8],[-10],[7],[6],[-8],[8],[10],[2],[7],[-5],[-9],[-5],[1],[7],[-4],[5],[6],[1],[-7],[-9],[-2],[8],[5],[5],[7],[5],[5],[5],[2],[5],[-2],[-8],[-10],[-4],[-7],[-3],[-1],[1],[10],[8],[-6],[-5],[6],[10],[-2],[4],[7],[-2],[2],[-5],[10],[8],[-8],[-7],[-2],[6],[-1],[2],[9],[-5],[-9],[6],[-10],[5],[8],[-1],[-8],[10],[-7],[-2],[4],[-1],[-7],[2],[5],[10],[6],[-9],[6],[-8],[-4],[3],[-7],[5],[1],[-5],[5],[10],[6],[-9],[-1],[4],[7],[-6],[7],[-9],[3],[10],[4],[6],[-3],[10],[6],[10],[-6],[-5],[-2],[-6],[4],[1],[-6],[-2],[-2],[-10],[8],[-4],[6],[8],[8],[4],[-1],[-2],[-9],[1],[10],[5],[-2],[-4],[-9],[-5],[-8],[-9],[4],[6],[7],[5],[10],[2],[-6],[3],[5],[-2],[2],[5],[10],[-8],[8],[-5],[-5],[4],[5],[-4],[7],[-4],[-7],[8],[4],[-10],[6],[8],[3],[6],[-5],[6],[4],[-6],[9],[3],[5],[8],[-6],[-5],[6],[7],[-9],[8],[4],[5],[-7],[-1],[-3],[1],[6],[10],[3],[5],[-2],[-2],[-4],[-10],[5],[-6],[4],[-10],[6],[-3],[10],[-1],[-9],[-10],[-6],[-6],[5],[-9],[-6],[-1],[9],[-1],[3],[-3],[7],[-6],[-3],[5],[-7],[-6],[2],[-5],[9],[-4],[-3],[7],[-6],[-4],[-2],[-8],[4],[-5],[-2],[-8],[-7],[-5],[-8],[4],[4],[-4],[6],[-10],[2],[1],[-10],[4],[-2],[2],[-1],[-4],[9],[-7],[-10],[6],[-10],[-1],[-2],[9],[5],[-7],[-9],[-3],[-9],[-7],[-7],[9],[10],[5],[-7],[-4],[-3],[-5],[5],[10],[-4],[-7],[9],[-3],[4],[1],[1],[-9],[5],[1],[-7],[3],[9],[9],[-10],[4],[-8],[-6],[-10],[5],[9],[7],[-5],[-2],[-2],[-6],[-9],[3],[5],[-4],[10],[8],[10],[3],[10],[-5],[-6],[-2],[-9],[-3],[9],[-2],[-8],[-8],[6],[7],[-1],[-4],[-6],[-10],[6],[9],[6],[-5],[6],[-7],[-9],[3],[5],[-10],[3],[-9],[-10],[-5],[9],[-7],[1],[-1],[7],[-3],[5],[-8],[-3],[2],[4],[1],[7],[2],[-2],[-8],[-2],[-9],[10],[1],[5],[-10],[6],[-5],[-9],[-6],[-8],[10],[6],[5],[-1],[-8],[7],[-6],[-7],[-6],[-1],[-3],[4],[-5],[-4],[8],[8],[7],[2],[-2],[4],[-5],[-7],[-10],[8],[-7],[2],[-7],[7],[-1],[-2],[2],[5],[-6],[1],[9],[5],[-8],[7],[-9],[4],[5],[3],[2],[5],[-10],[2],[-9],[-3],[-5],[2],[-2],[10],[-1],[8],[1],[3],[9],[9],[7],[-7],[-2],[-1],[6],[-5],[-10],[5],[-6],[-2],[9],[5],[3],[7],[6],[-5],[9],[-2],[-9],[-2],[-8],[-5],[6],[10],[2],[-8],[-3],[2],[-3],[-10],[-2],[-3],[-5],[4],[7],[10],[-6],[6],[3],[-5],[10],[-8],[6],[-3],[-7],[-9],[-7],[4],[7],[-7],[-3],[-2],[10],[-3],[3],[-9],[-9],[10],[-5],[8],[7],[4],[10],[-6],[-3],[1],[-10],[7],[10],[4],[-7],[-10],[10],[-4],[4],[-8],[9],[-5],[-8],[-6],[-5],[-9],[2],[6],[5],[7],[5],[-10],[9],[1],[-6],[-4],[-10],[4],[9],[-1],[8],[1],[7],[2],[-9],[5],[10],[10],[-9],[-5],[-1],[10],[8],[-9],[5],[-3],[-1],[3],[-4],[-1],[-7],[9],[-4],[-7],[4],[-8],[10],[4],[5],[7],[3],[-4],[-6],[4],[3],[-5],[4],[8],[-4],[10],[6],[1],[-7],[4],[-10],[1],[4],[-10],[2],[2],[-1],[-8],[10],[-2],[-10],[2],[-2],[1],[-10],[9],[-5],[3],[-6],[2],[7],[5],[-9],[-5],[-10],[3],[1],[7],[-10],[1],[1],[-10],[-4],[8],[8],[-10],[-3],[4],[-2],[9],[6],[-2],[-9],[10],[-7],[-9],[-5],[-9],[-4],[9],[-8],[-10],[5],[-3],[3],[-9],[-5],[-7],[1],[-2],[-2],[-1],[2],[4],[-8],[9],[-3],[6],[-2],[-7],[2],[7],[-10],[-4],[4],[3],[8],[3],[-3],[-7],[1],[6],[-4],[-5],[5],[5],[-9],[-7],[-7],[-2],[-8],[8],[-9],[6],[-9],[3],[-9],[-5],[-5],[-3],[-2],[10],[-9],[4],[9],[-10],[1],[2],[1],[1],[3],[10],[-5],[6],[5],[10],[6],[-1],[-6],[-4],[1],[1],[3],[3],[1],[2],[8],[-5],[6],[2],[-1],[-9],[2],[-5],[-4],[-3],[-2],[-10],[-8],[-9],[-7],[-5],[2],[7],[-3],[7],[3],[2],[-5],[6],[-5],[-6],[-5],[-2],[-9],[2],[-1],[-10],[-6],[10],[10],[-5],[5],[-10],[4],[10],[7],[6],[4],[5],[-10],[-9],[3],[-5],[6],[10],[5],[9],[-3],[-10],[7],[4],[-8],[7],[10],[-5],[-6],[-1],[-4],[10],[4],[-8],[-5],[10],[-7],[3],[-10],[1],[-9],[2],[-8],[-8],[-3],[-7],[-7],[-9],[-9],[1],[5],[2],[-10],[10],[-3],[-10],[9],[2],[10],[4],[-2],[10],[-10],[-10],[7],[10],[3],[-6],[6]], dtype = "int64")#candidate|7745|(2400, 1)|const|int64
var_7746 = relay.var("var_7746", dtype = "float64", shape = (432,))#candidate|7746|(432,)|var|float64
call_7744 = relay.TupleGetItem(func_4810_call(relay.reshape(const_7745.astype('int64'), [16, 15, 10]), relay.reshape(var_7746.astype('float64'), [432, 1]), ), 2)
call_7747 = relay.TupleGetItem(func_4813_call(relay.reshape(const_7745.astype('int64'), [16, 15, 10]), relay.reshape(var_7746.astype('float64'), [432, 1]), ), 2)
func_1291_call = mod.get_global_var('func_1291')
func_1295_call = mutated_mod.get_global_var('func_1295')
const_7758 = relay.const(0.675603, dtype = "float32")#candidate|7758|()|const|float32
const_7759 = relay.const([0.352726,-0.465316,8.070685,-4.208320,-8.651264,2.488798,5.655038,1.492551,1.341548,-6.016530,2.903147,-5.069809,-0.981588,-9.338002,3.149027,3.274579,-9.885753,-4.477786,-8.296133,8.162842,7.067305,-8.865521,0.015346,2.254199,-4.654920,-7.758578,-4.532013,-4.746416,-1.776485,-3.072926,-1.527867,6.194913,6.176803,-8.753811,-1.750125,-6.274435,7.407086,1.641474,-7.396457,1.279366,-4.418189,3.064671,6.761417,4.500509,-8.531992,1.393573,2.650305,3.446135,1.600406,9.749109,2.004213,7.038288,-7.725310,0.390759,8.406899,6.017071,-5.712899,-2.147568,-9.724298,-5.095554,1.877690,2.100935,-3.544649,7.393903,5.308838,3.712401,-7.891809,5.319958,4.858952,0.715832,8.459849,-0.914874,1.764172,5.160556,8.917121,-6.291421,-3.003575,6.820410,3.010858,-3.034439,7.951018,5.712791,-4.447810,1.704648,-8.446245,-8.434489,3.821205,9.045775,0.935791,9.281871,-5.223752,1.597172,9.592747,2.815018,3.265247,7.264216,-0.587778,-5.369232,0.757154,-6.450659,-2.814815,-1.080694,-8.357978,1.878295,-4.809262,-8.701380,-7.254486,5.612490,-1.331086,-1.081192,-3.671479,2.234627,8.906148,6.410728,1.754518,-1.755528,-4.120092,8.376085,-3.009017,-4.580740,8.654273,-6.644869,-4.669496,-9.114044,-4.519410,-1.187624,-8.730847,3.065746,8.917047,6.294188,7.244344,6.779670,-0.430973,-8.722757,0.060010,0.987699,7.787187,-1.440671,-7.602250,-7.496197,-4.684041,1.707640,-5.854877,-3.296430,-3.841968,-5.472044,8.522662,8.907981,4.985929,-7.022933,6.912545,2.944821,2.377490,-0.488518,-5.077055,7.588409,-9.432044,-4.771321,4.272770,-2.892339,-8.504996,0.567403,-8.217396,8.760895,-9.454940,-8.000753,6.847998,-3.476978,-9.368188,-6.011741,-3.995006,8.000717,7.952026,4.310267,-0.052299,-0.774064,2.626755,-9.591646,-6.145913,8.324102,6.586485,-5.994377,6.341992,-4.787628,-1.886879,6.596945,-1.137816,0.202078,-0.710675,-4.186356,-1.401383,7.556104,8.631304,-8.200432,6.096844,-4.549616,2.762582,4.997133,-6.174270,-6.091329,5.167039,3.589569,-2.286037,8.476740,6.932092,0.773323,-1.782727,2.605323,-7.682764,7.420694,2.344497,8.368282,7.184289,-2.049243,-7.083344,-6.415218,-3.039468,8.540038,-6.892473,6.089838,-4.635201,0.532238,6.690446,-9.092640,-1.067769,1.604361,-3.391301,8.646311,3.429186,9.120593,-9.680877,9.138532,2.851696,-0.514837,9.648542,6.894036,-3.625497,-9.220524,-4.983099,-1.328504,9.107818,-1.923279,-4.775392,9.182933,2.052096,8.677260,-1.434198,-8.337638,0.888874,4.756824,-4.950455,-8.509284,3.410507,-3.727527,-0.523062,9.011631,-4.449377,7.913020,3.903138,2.157251,6.387258,-3.158662,8.620656,2.272594,0.134166,-1.437443,5.823458,2.977528,5.659886,-2.372041,-3.463044,3.380209,-4.888494,9.393381,8.697043,-5.749273,2.316678,-1.694832,-1.953266,5.742581,-6.439287,4.859023,-7.970164,6.065500,1.848815,4.551421,5.271861,-7.290405,6.608790,9.677114,-3.985547,7.643458,-1.813686,1.380745,0.827626,6.597629,-9.913125,-0.449435,4.286230,-7.370974,5.186065,-2.651159,8.566652,-5.543976,-7.718685,7.100295,-9.017713,-2.412615,7.329206,6.498503,-8.806430,-5.010173,9.388178,6.108677,-9.499849,1.669170,-1.057908,-0.206053,8.410242,-0.314225,-3.011734,-4.840361,4.507129,-0.072215,-2.759621,7.179469,-3.086626,7.280022,-5.132460,-5.199720,9.908435,9.788145,4.037794,7.325336,-0.536825,-0.852711,0.232522,5.938578,2.592908,2.820068,0.608234,-8.865406,7.521060,-0.594822,-0.467924,-1.618594,-2.269469,7.813832,-6.533557,-7.375965,0.441644,9.206055,-6.233823,4.169842,-0.828725,6.574260,9.117792,2.345097,-2.818139,5.337010,-2.452941,-9.702240,3.043312,-9.621476,-1.322986,-5.797600,2.294049,-8.903246,2.950405,9.976890,3.006652,0.788517,-2.948308,4.838877,-2.744418,-6.923296,-9.377188,-8.309340,-5.235748,8.890948,0.974204,-9.627167,-6.976776,-8.172419,-2.590005,0.874668,8.374150,4.448752,-4.506584,-6.288395,4.258456,7.701410,2.854862,2.508870,5.061776,-1.058841,-9.617158,9.021693,7.909939,-4.404278,-5.513636,9.981388,2.516502,3.322174,2.204802,-8.024696,-4.644358,7.184053,2.781997,-8.415679,4.480917,-9.579166,3.525792,-8.180258,7.289446,3.340760,2.320728,6.661270,7.869548,-7.403124,-2.729952,3.238543,-3.077632,-2.870834,2.276200,-4.640490,4.963299,-7.368751,9.635883,-9.791784,-4.683025,-9.358835,-5.914567,-0.609503,-0.526247,7.124539,5.052768,-7.466585,5.749804,-5.240879,3.362712,6.846305,1.960860,2.075576,4.003907,4.128688,5.966647,7.871067,-9.020380,2.058430,-2.948507,5.391764,7.278508,0.790560,0.396073,9.450120,5.055551,9.014263,7.588089,2.036063,-5.988298,-0.635020,-0.340660,-7.810198,7.436852,5.283667,-3.773110,1.583020,-4.024786,-7.042577,-3.797378,-0.990841,-5.717664,-5.964489,4.239149,-5.114827,3.743816,0.841175,-6.577787,-0.189751,-6.441082,8.692758,-9.854580,-1.157589,-3.690860,-4.671677,9.048532,-3.110164,3.345455,0.225514,-9.794672,-0.435034,-4.626256,2.645627,8.067614,-0.925478,4.224281,-5.021639,-2.033470,6.862190,7.062926,-4.809174,-2.400075,5.608420,4.689092,-6.206829,-9.836210,7.272948,6.295130,-0.848876,-8.977308,-4.978112,-6.606506,-1.195989,6.902063,4.029107,5.299536,1.938385,-8.294943,9.161042,7.103806,7.303023,7.553107,-4.242034,2.865847,0.883509,5.263002,-1.128699,3.656968,2.636099,-0.564792,3.003045,-0.167091,4.066596,9.246221,-7.822826,4.783860,6.841007,6.797184,7.977031,-6.179539,-5.764246,-8.306636,1.157380,6.820384,-2.297671,-6.454717,-6.990477,2.132700,2.969196,-3.998064,5.217555,-5.294761,-5.510412,7.314050,-4.136155,7.592502,7.909474,0.035918,5.691894,3.112733,-1.596272,2.915707,-6.596976,8.421099,-2.268131,-2.053680,6.784863,-5.242112,-6.153319,2.888556,4.288822,7.483277,-6.235635,2.687872,-6.034894,5.028153,-1.404877,7.523599,7.972433,0.257240,-1.602651,-7.278165,-2.637217,-3.717929,-8.373612,6.135370,-0.070669,-8.703973,-9.774762,-4.164335,9.932380,3.416554,-9.932791,-3.394029,5.931112,2.853919,0.700646,4.770900,-8.953196,-8.481314,9.302267,-9.389917,3.646040,-1.863058,3.367428,-1.257890,8.464426,-1.296775,-0.343083,3.948089,-3.528876,4.185873,-2.691491,3.168405,-9.277306,1.484738,-5.573651,8.536046,6.610593,3.665808,-1.477654,1.096727,8.061369,-5.036453,-8.904386,-0.713746,-3.520644,4.965269,-9.686266,-4.084861,-5.536000,2.228280,3.149559,-9.530881,-0.823094,0.810674,4.368194,-8.455721,5.183025,-7.564659,4.626392,-0.449461,3.701575,-6.008051,1.540315,-3.810460,8.428378,-9.357976,5.539626,5.004117,-0.516347,-7.993644,9.140745,-9.862521,9.558164,-1.075257,7.566493,3.850601,-5.211083,3.897155,-4.640293,-2.438494,5.504073,-1.504219,4.983652,-8.766925,2.401887,-3.659084,-6.672391,2.780625,0.483773,-8.574971,-5.969624,3.934628,1.496712,-1.663784,5.030120,2.058415,3.706124,1.450586,0.421188,-5.280707,-4.599870,4.085180,-8.011410,5.331055,5.663819,-6.014706,6.222110,-8.923095,-3.454762,-8.959600,2.805262,-7.204982,8.961950,-3.490306,-2.731887,9.475120,1.782419,9.425223,8.832455,7.972268,-7.811509,0.146423,-7.915850,-2.174993,-6.987658,-1.577998,8.416176,0.198507,-1.927293,5.090729,-2.312688,6.125339,-9.029928,8.172167,7.219643,-7.902923,8.807483,6.023443,8.919212,-6.193452,-9.447230,-9.015360,-1.121124,8.105498,0.692226,5.706294,9.878310,6.989077,2.324970,-5.042138,6.109181,-9.919985,-6.765540,-1.348055,4.732278,9.987365,9.433275,7.225875,5.402336,-8.547070,-5.486447,4.092590,2.794480,9.146239,1.529582,0.452466,-1.739156,5.495562,-2.070488,-0.772973,1.999167,4.664427,9.199853,-6.391721,9.302070,1.480037,-0.752111,-0.506062,3.979867,-4.726240,3.809975,-6.341739,6.369061,-8.662678,7.401242,2.649881,-9.703889,-0.696752,-5.853123,7.788868,5.247593,9.401500,4.475532,7.431494,5.888242,6.270881,-7.318628,-0.478484,-3.854647,3.415194,0.389526,-2.784487,6.440446,-3.698689,0.519400,-6.012253,-3.645773,-4.122799,2.798519,1.989816,5.840213,8.050204,-8.547800,3.121333,-7.100333,-7.294205,6.154105,6.334734,5.725199,-9.608028,3.501610,-2.718615,-2.920459,9.080395,-8.937151,-2.491499,-8.442234,5.103189,6.623153,0.940468,2.479038,-5.219648,-1.835690,-1.875920,1.040702,-0.301362,5.000479,-9.600362,0.420596,0.374314,-5.667504,4.105550,0.622308,9.256790,1.730794,-7.438055,0.659609,5.840841,-2.683428,0.457072,0.100131,4.105324,-8.424281,-2.483667,5.470099,-3.411966,-3.198612,-3.537920,-5.607160,-7.871151,-4.109764,0.395914,8.344026,3.710253,-5.274357,8.563022,-5.628999,-1.948801,0.608874,-0.090673,-3.222328,-0.054903,-1.505727,-7.650450,7.330121,-8.330795,6.297241,3.118182,9.837853,-8.650238,1.090690,1.476134,-1.178423,5.886665,-0.386447,1.002458,-6.004870,6.406774,-3.245754,0.864730,8.679346,-0.191751,9.881051,3.363207,-8.614241,-0.476946,-1.229156,-9.933000,2.679294,-5.300698,0.752256,-5.186668,8.915115,0.898879,8.951374,9.576865,-6.793516,4.230563,3.415613,-8.681267,6.815020,-2.588743,-9.164871,-8.180837,-2.630197,-3.637727,-1.857775,9.758043,-8.408038,-9.850519,7.322823,-9.709658,4.650507,-9.600554,0.898812,-4.113810,9.122282,-0.114376,5.467579,-1.991039,7.944823,-5.383069,2.030354,1.601463,-0.912869,-8.339588,-5.324370,4.152848,-6.190426,-3.792778,3.474501,-9.534318,9.482242,-4.691887,-5.661121,-7.042489,9.390151,2.667980,-1.361909,5.112736,-5.881357,5.384239,-8.467263,-1.010484,-0.835083,-0.021914,-2.007291,-1.262678,6.833293,-2.065537,6.578368,0.784347,2.472943,-4.931514,-5.124830,-2.099606,1.254197,5.387676,5.293327,-7.168699,-2.730773,7.513196,-6.609527,8.741909,-9.743065,0.022203,-5.748010,4.252328,3.715057,-4.657454,8.463524,5.826421,-9.234156,-6.778831,-1.817620,5.703249,-7.976571,6.417897,-6.090104,-8.387190,6.008939,0.709368,4.141870,7.071789,-3.627615,-0.775220,9.164148,-3.640697,-2.123458,0.582564,7.421757,6.544764,9.243443,-9.553496,1.011924,-0.788695,-4.954553,1.550301,-1.566964,4.007285,-6.545508,-0.748531,4.878127,9.954005,-1.797376,-6.296735,7.602645,4.491887,1.522950,-8.775503,-4.048757,9.164361,-8.606837,-8.507462,9.285008,8.788441,8.519816,2.183360,-2.136140,-4.698976,4.578064,2.794598,7.925125,1.155523,-6.300844,0.807194,4.031409,-6.073817,1.898122,-9.263841,-0.571982,-2.139618,-8.989728,-5.324167,-0.679025,9.707968,8.169196,-0.442325,2.349332,9.359892,-4.958837,-7.672705,1.748647,3.467703,-8.773052,-6.397429,-0.644318,-4.321565,-0.086272,5.654074,-2.044810,9.841117,7.327958,-2.710954,5.794931,4.797929,-3.283709,2.598433,-7.678561,8.952471,4.261612,2.323464,-7.455976,-9.251060,-2.812186,-5.983479,-9.888662,-4.821994,3.135948,-3.073588,6.496139,-9.889127,2.858971,4.724525,1.145271,-4.758241,-9.855616,-8.630938,-0.262313,-4.113107,-7.580953,7.208192,-6.878340,3.762865,-7.154220,-7.501005,3.776990,5.523464,3.442878,-1.172049,3.713061,2.951300,-8.412578,9.566515,-3.800222,8.677553,-2.383274,7.439160,-4.127730,-1.934098,-9.230850,-0.139007,-2.901088,-1.894708,5.062289,-9.207909,-8.310164,-3.781564,6.280014,3.829463,5.081211,-2.162685,4.908122,-1.842756,-8.554241,-2.250069,-9.180875,-6.889956,-8.572067,-5.589778,8.797976,7.717976,-7.611623,-8.244951,3.665473,4.700187,-6.696343,-0.273385,3.164059,-9.369295,7.370420,-8.450332,0.946612,-6.394272,8.082469,9.535756,0.581051,-2.550242,4.019720,2.633417,-6.963711,3.046714,4.524247,-2.817769,9.289892,-2.472452,5.737183,-7.659563,-8.777379,4.812488,4.853733,-4.260943,1.987589,-0.544779,-2.623097,1.320870,-4.600976,7.748593,-4.068136,-5.089710,-8.002079,-2.492909,8.272852,1.546515,-3.434807,1.714444,8.446308,-2.512510,5.145371,8.328694,6.402928,-4.131414,-2.793792,0.444471,-5.658919,-1.259119,-0.192327,-4.314666,1.345170,4.448258,-5.736539,8.268242,6.447094,-9.507145,-3.636376,-7.348566,-4.509877,2.329992,-8.132814,0.847955,-0.606185,-6.149964,1.950503,-9.623355,-8.767644,-4.431601,-1.055551,-0.219658,4.071843,-8.459571,3.517132,0.688267,-0.540882,-9.571906,9.495322,6.020373,8.543625,4.302518,-2.851024,7.452138,8.006592,-6.066527,8.339451,7.219617,7.782097,-9.512406,-2.590938,8.491726,-8.288105,-5.701227,6.559766,5.149753,3.462041,3.693269,-9.308023,-2.120520,-4.690660,6.370761,7.815540,4.564699,9.389479,9.442684,3.739034,-8.788387,-5.795053,-1.605377,-1.817828,-2.744722,-4.265137,4.455366,-7.302846,-9.456719,-1.524165,-3.489449,0.537234,2.808713,7.264421,-4.193591,1.930181,-7.871239,6.323706,6.761589,-3.689405,5.501633,-8.658442,6.734187,-0.698595,3.850413,-1.482861,6.007859,2.205080,-1.155132,4.355571,-7.531402,1.900516,8.977463,5.309169,-5.642041,-8.802065,-3.892158,-3.097009,-8.193531,3.878151,-4.137295,9.255337,1.249862,-8.061344,-0.246250,6.144968,-1.764940,8.519914,9.403537,-7.843754,9.066545,-1.888616,8.980055,8.296019,9.064225,-6.091555,-9.138523,5.085402,-5.108677,4.030605,-9.614307,8.973233,2.735090,-8.368351,4.442098,-5.337493,0.083626,-4.832544,-2.783874,-6.816236,4.859338,3.162720,0.391168,0.487022,-7.417808,-4.642446,4.594067,0.540454,-6.434739,-3.890786,-6.551956,-7.614449,2.533172,0.583159,7.270847,9.474428,-6.574452,-9.424786,-2.155629,6.114292,9.888225,8.111500,-9.037779,5.202501,-2.281898,-8.198827,4.434633,-8.976254,-4.507735,-4.276899,-3.677754,-1.451474,-7.426395,-5.798550,-6.624856,2.312628,8.867128,7.467541,4.822606,-2.990920,-6.032648,-8.568513,-8.285967,-0.767875,-7.172981,-3.366621,-4.307457,2.929521,6.890265,7.450126,-6.519582,2.932038,8.515719,3.426056,-2.895742,-1.907567,-9.879143,-4.944420,-5.131498,9.061034,5.586449,4.028110,-0.907408,-3.196534,-8.882372,-9.879574,-8.457630,-4.249069,-5.711148,-0.126456,6.982729,3.332176,5.289021,-1.668600,-2.450656,1.645549,0.889331,7.257878,1.391009,-1.698758,-9.358170,-0.843326,-6.483076,-5.615162,-9.224792,4.985215,-9.055499,-9.406204,-9.621615,1.906798,-0.409727,-1.864883,5.902419,-7.490307,9.583871,-1.494514,8.003045,-3.924470,4.889859,-3.442289,4.542030,1.459919,-1.754208,-8.645662,0.898925,4.556833,-2.367122,7.784047,0.249092,-2.832163,-3.859556,-2.818440,-3.865523,-5.574333,-4.451890,4.189706,-7.443176,8.825515,-5.714864,-5.890817,1.700047,-7.678449,5.228777,3.207024,7.020366,-9.336646,-5.005994,5.590282,5.523569,-8.362459,-7.767101,-0.556340,-5.778740,3.042382,9.949525,-8.666863,2.206470,-5.821159,1.514843,8.474655,3.127900,-5.936726,2.830035,-3.176457,3.494662,-7.693406,3.736627,9.025510,-0.285735,-9.290796,-0.498861,-0.757456,3.074084,-3.616401,-8.345522,4.569270,0.512955,9.817349,8.957755,-0.820427,-4.666147,-5.469842,9.945849,8.234883,-2.620044,4.254120,0.182657,-5.701640,-2.784617,0.601294,3.343707,-9.704910,-4.511654,5.774337,-4.899494,7.944343,-0.638446,-1.272386,4.313135,3.436853,1.932749,-6.147371,-8.844947,-8.502577,2.834251,3.533664,-6.836683,-1.510467,7.845999,9.316313,2.099826,-6.393693,-0.686694,5.192784,-6.470988,-3.429723,5.419482,-1.228089,3.839206,-1.629744,-1.464718,2.978670,1.499810,-3.159542,6.885178,-9.904496,-2.000187,-4.380386,9.481596,-4.857259,-3.282892,-6.350984,6.960234,2.417310,2.548102,3.937912,0.609482,-9.910832,-8.746029,7.135335,-3.128662,-1.240479,-6.086177,-1.560746,-3.462613,-6.061931,0.139800,-0.646303,2.332968,8.846699,8.066746,3.752709,-6.178601,-9.348202,-9.524901,-4.983058,5.245752,9.416073,-2.507453,-1.138126,-5.775714,8.462248,0.343685,-9.527844,-4.152949,5.998938,-3.253440,-3.428213,-6.439174,-5.806771,0.431512,-4.301409,9.296572,-3.678494,6.152182,1.281674,9.216595,0.980936,-3.764148,-4.780970,6.445066,5.841849,-0.251842,-6.937521,-3.695153,3.501230,-5.059294,-0.250127,3.676248,7.901730,0.591222,-3.092461,8.244567,9.370060,7.535918,-8.746692,3.233548,-9.467020,-9.017970,3.423916,4.621319,-0.580954,-2.863333,-8.476080,2.752546,-9.628400,-0.983841,-0.106824,-3.709231,7.970164,1.828271,-7.380838,3.118726,-4.522093,-8.482066,-2.856118,-7.955205,1.118309,-4.560093,-1.335150,7.423504,-7.764369,8.893408,3.429437,9.486763,6.129299,3.341482,5.227352,-4.525380,-9.882539,9.202625,3.911835,9.820963,-3.996246,-2.856818,9.596084,4.962297,2.989790,-7.997126,-8.420845,1.912406,-6.614264,-9.980842,-6.137628,7.717685,4.294418,5.700452,-7.458757,5.185555,-7.213967,9.152347,8.304755,-1.709983,6.145743,6.743915,-8.932883,6.795116,9.258623,-5.019067,0.235677,-2.867514,5.985749,6.611794,-4.892412,-5.362286,-7.367176,9.099054,4.207174,-7.201383,-3.195371,-1.898603,-7.732904,-3.623262,2.689552,0.325478,-1.588996,6.189445,-0.575388,-6.587772,9.618895,2.756998,-7.018329,4.871263,-9.388432,8.223711,-2.164720,0.560906,7.822958,-9.855268,4.805394,7.749344,-3.843072,8.041015,9.756538,3.717411,-1.120462,-1.900082,4.539841,-7.179367,5.900779,9.824608,-7.988686,8.792527,-1.521057,-9.901456,5.532296,4.622564,7.220141,-5.951385,-1.752898,4.043778,7.295495,-2.735923,-2.560323,-2.063181,-5.992184,7.055348,7.747912,-3.687261,-8.035730,8.727780,7.773794,8.247452,3.945557,1.797578,-1.737846,-8.214262,9.542067,-7.164926,-9.912094,2.575101,-2.454224,4.493419,4.577075,6.137572,-2.532132,-5.916865,-3.890743,-8.417738,0.027734,2.644615,9.041616,0.416950,-5.440439,-9.890953,7.582465,6.664345,-6.753572,9.180119,7.163784,7.416604,3.164681,6.319777,-6.362939,1.696148,2.441938,5.893277,-9.706775,2.179857,-9.449797,3.905002,-6.107072,-7.434952,3.725247,-5.631941,-1.842905,8.523393,1.262413,0.027815,-9.777466,-7.705350,-7.548736,-5.443651,-4.359223,8.876837,8.527996,-6.718020,-7.278653,-9.791328,-2.555936,-1.245499,6.827711,-2.427335,-8.425055,-3.263567,-1.946662,-5.688283,-0.058555,-8.187616,8.224175,7.241154,-0.393667,-9.052729,-6.858267,7.677094,7.570752,-0.535264,5.863030,-8.042803,-1.421813,-1.672148,8.914888,4.250817,-7.817628,-5.161096,-9.742301,-8.498476,-3.327796,1.452997,-1.330984,3.588782,-7.013037,-7.409099,7.601529,7.830154,9.347629], dtype = "float32")#candidate|7759|(1792,)|const|float32
call_7757 = relay.TupleGetItem(func_1291_call(relay.reshape(const_7758.astype('float32'), []), relay.reshape(const_7759.astype('float32'), [8, 16, 14]), ), 0)
call_7760 = relay.TupleGetItem(func_1295_call(relay.reshape(const_7758.astype('float32'), []), relay.reshape(const_7759.astype('float32'), [8, 16, 14]), ), 0)
func_1772_call = mod.get_global_var('func_1772')
func_1776_call = mutated_mod.get_global_var('func_1776')
const_7802 = relay.const([-4,-6,-2,5,-4,7,-2,9,-2,10,-10,-1,7,-10,-3,2,8,4,-1,-7,1,-5,9,-2,8,6,7,10,1,8,1,-1,-5,6,2,-3,9,8,3,-2,-4,-10,4,-4,7,10,9,6,-4,2,-10,-9,-4,-9,-8,9,-9,-4,8,-1,9,5,-1,-4,5,-1,2,6,-8,6,-7,-8,5,-3,-10,-9,4,-9,-7,9,10,9,-1,-1,-1,3,-1,8,2,8,-6,3,3,4,-6,1,5,1,6,-3,8,-7,-8,6,6,4,-2,-1,-10,4,10,-1,7,10,-5,-2,-2,5,-6,2,6,4,-2,5,-10,5,8,6,1,9,-3,-10,-2,5,-5,-7,-2,2,-6,5,8,7,-9,1,8,-5,-3,-6,-9,10,-7,-8,10,2,-5,-3,6,-8,10,4,-1,1,-3,8,7,7,-9,-2,2,-6,-10,3,6,10,1,5,2,-8,10,-8,-6,-2,9,-3,-9,-2,-5,-4,6,-6,-9,-1,-5,-7,-4,4,9,2,-10,-3,-1,8,9,6,10,-6,-3,2,-5,4,4,-9,4,5,8,4,4,-7,8,10,-7,6,3,-7,7,-10,-9,-5,2,-8,-7,-10,-6,4,2,1,2,9,-5,6,10,-2,4,-6,7,-9,-8,-5,-5,10,5,-9,9,10,6,6,1,9,-5,-4,-8,-7,1,3,-1,7,6,-2,-4,9,-10,8,-4,9,-9,-4,-7,5,2,-7,-3,-10,-8,4,-5,-2,9,-6,-4,-4,9,1,-8,-5,-4,-5,5,-8,8,-5,-6,-7,6,9,8,4,-3,5,-1,4,-3,4,4,10,-3,-4,3,-5,-5,-10,10,-2,9,4,10,-5,7,-10,1,-3,-9,3,-6,-3,-3,-6,9,5,7,-7,-7,9,-4,-5,1,9,-2,-3,3,1,-9,8,-5,5,2,9,4,3,9,3,5,1,6,-8,-8,-4,6,-6,-7,-2,-10,-8,1,2,-9,-9,7,-2,3,-2,10,9,-8,-6,-3,3,9,10,3,9,7,6,9,-6,9,3,-4,5,7,-8,-10,-6,2,-1,9,9,-10,-1,5,3,-7,-3,-1,4,10,10,3,-10,-1,-10,-3,-8,3,3,-9,2,-3,9,-5,-1,5,6,-7,-2,5,1,-8,2,8,-9,-2,-3,8,-8,-4,-10,10,6,-10,6,-10,-5,5,10,-3,-10,-10,9,-4,-2,5,9,8,3,-4,7,-7,2,10,-7,1,-7,2,-10,2,-7,4,2,-1,-1,-5,1,-3,-4,-5,7,2,-8,1,-3,9,-9,7,-8,8,5,10,-5,-9,5,2,1,-7,8,-8,-10,-2,2,2,-8,-9,-4,-9,1,10,1,9,5,2,3,-6,-6,4,8,10,-8,2,-10,-3,-8,-9,2,-4,4,-2,-5,2,7,-1,-3,4,10,3,7,-2,-8,6,7,-9,-6,-9,-9,2,4,2,6,9,2,-7,10,1,-10,-10,-7,-9,-9,-3,7,6,-1,-9,4,5,1,-4,1,1,-2,-8,9,3,-6,-8,-2,-4,-5,-1,2,5,-8,-6,-4,-2,-7,7,-10,4,7,-6,-8,-3,5,10,-10,3,-5,8,-6,-8,-5,-9,-7,10,6,-2,-8,5,-9,-1,3,-6,10,10,6,-1,4,5,-4,7,3,-2,4,-4,-4,9,-6,-6,1,-6,-5,-10,-6,2,10,-8,9,-3,1,4,-10,-3,-10,-5,-8,-7,-8,1,4,4,3,6,-5,-2,4,-2,-1,-3,7,-9,10,5,7,-2,9,2,9,1,8,-8,9,7,6,-10,-9,-5,9,7,-8,-4,6,-9,5,-8,-3,-5,8,-4,-3,7,-3,3,4,7,-10,9,8,-10,7,-6,-8,-7,-7,3,5,-4,-4,-2,6,10,-10,-1,-4,1,-2,-4,-10,-9,1,-6,3,7,-8,6,8,-1,5,-7,6,-10,7,-1,4,3,-1,2,-3,-3,-7,7,5,6,-2,10,-4,-8,-4,-7,6,-4,3,3,2,-6,-5,6,3,-1,-8,-4,-1,3,-9,6,2,-6,-5,-8,-5,7,9,9,7,8,-10,10,-5,9,-3,3,4,-8,-6,-5,3,10,-5,-6,2,-2,8,-6,-4,1,1,-3,-3,3,7,2,-9,-6,5,1,-7,10,4,2,-2,-5], dtype = "int16")#candidate|7802|(819,)|const|int16
call_7801 = relay.TupleGetItem(func_1772_call(relay.reshape(const_7802.astype('int16'), [7, 9, 13]), relay.reshape(const_7802.astype('int16'), [7, 9, 13]), ), 0)
call_7803 = relay.TupleGetItem(func_1776_call(relay.reshape(const_7802.astype('int16'), [7, 9, 13]), relay.reshape(const_7802.astype('int16'), [7, 9, 13]), ), 0)
output = relay.Tuple([bop_7739,call_7744,const_7745,var_7746,call_7757,const_7758,const_7759,call_7801,const_7802,])
output2 = relay.Tuple([bop_7739,call_7747,const_7745,var_7746,call_7760,const_7758,const_7759,call_7803,const_7802,])
func_7805 = relay.Function([var_7738,var_7746,], output)
mod['func_7805'] = func_7805
mod = relay.transform.InferType()(mod)
mutated_mod['func_7805'] = func_7805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7805_call = mutated_mod.get_global_var('func_7805')
var_7807 = relay.var("var_7807", dtype = "float32", shape = (15, 11, 4))#candidate|7807|(15, 11, 4)|var|float32
var_7808 = relay.var("var_7808", dtype = "float64", shape = (432,))#candidate|7808|(432,)|var|float64
call_7806 = func_7805_call(var_7807,var_7808,)
output = call_7806
func_7809 = relay.Function([var_7807,var_7808,], output)
mutated_mod['func_7809'] = func_7809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8084 = relay.var("var_8084", dtype = "float32", shape = (11, 13, 11))#candidate|8084|(11, 13, 11)|var|float32
uop_8085 = relay.asinh(var_8084.astype('float32')) # shape=(11, 13, 11)
func_2596_call = mod.get_global_var('func_2596')
func_2598_call = mutated_mod.get_global_var('func_2598')
var_8108 = relay.var("var_8108", dtype = "float32", shape = (11, 6))#candidate|8108|(11, 6)|var|float32
call_8107 = relay.TupleGetItem(func_2596_call(relay.reshape(var_8108.astype('float32'), [1, 6, 11])), 0)
call_8109 = relay.TupleGetItem(func_2598_call(relay.reshape(var_8108.astype('float32'), [1, 6, 11])), 0)
bop_8114 = relay.floor_mod(uop_8085.astype('float64'), relay.reshape(var_8084.astype('float64'), relay.shape_of(uop_8085))) # shape=(11, 13, 11)
output = relay.Tuple([call_8107,var_8108,bop_8114,])
output2 = relay.Tuple([call_8109,var_8108,bop_8114,])
func_8118 = relay.Function([var_8084,var_8108,], output)
mod['func_8118'] = func_8118
mod = relay.transform.InferType()(mod)
mutated_mod['func_8118'] = func_8118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8118_call = mutated_mod.get_global_var('func_8118')
var_8120 = relay.var("var_8120", dtype = "float32", shape = (11, 13, 11))#candidate|8120|(11, 13, 11)|var|float32
var_8121 = relay.var("var_8121", dtype = "float32", shape = (11, 6))#candidate|8121|(11, 6)|var|float32
call_8119 = func_8118_call(var_8120,var_8121,)
output = call_8119
func_8122 = relay.Function([var_8120,var_8121,], output)
mutated_mod['func_8122'] = func_8122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8146 = relay.var("var_8146", dtype = "float32", shape = (2, 12, 4))#candidate|8146|(2, 12, 4)|var|float32
uop_8147 = relay.sqrt(var_8146.astype('float32')) # shape=(2, 12, 4)
output = relay.Tuple([uop_8147,])
output2 = relay.Tuple([uop_8147,])
F = relay.Function([var_8146,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8146,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

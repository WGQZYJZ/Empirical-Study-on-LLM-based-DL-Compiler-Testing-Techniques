==========mod==========
#[version = "0.0.5"]
def @func_11482(%var_11467: Tensor[(12, 11, 16), float64]) -> (Tensor[(65, 11), int8], Tensor[(12, 11, 16), int32]) {
  %0 = @func_11014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8], Tensor[(1, 715), float64]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 16), float64] */;
  %2 = cosh(%1) /* ty=Tensor[(12, 11, 16), float64] */;
  %3 = cast(%var_11467, dtype="int32") /* ty=Tensor[(12, 11, 16), int32] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%2, dtype="int32") /* ty=Tensor[(12, 11, 16), int32] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %7 = %0.1;
  %8 = bitwise_or(%5, %6) /* ty=Tensor[(12, 11, 16), int32] */;
  (%7, %8)
}

def @func_13385(%var_13343: Tensor[(32), int16], %var_13345: Tensor[(546), float32], %var_13349: Tensor[(1008), int8]) -> (Tensor[(65, 11), uint32], Tensor[(4, 8, 11), int16], Tensor[(32), int16], Tensor[(352), int16], Tensor[(546), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8], Tensor[(65, 11), bool]) {
  %9 = @func_12656() /* ty=(Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(1008), int8], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) */;
  %10 = %9.4;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(65, 11), float32] */, dtype="uint32") /* ty=Tensor[(65, 11), uint32] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(2), int32] */;
  %13 = cast(%10, dtype="uint32") /* ty=Tensor[(65, 11), uint32] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %15 = cast(%var_13343, dtype="int16") /* ty=Tensor[(32), int16] */;
  %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(352), int16] */, dtype="int16") /* ty=Tensor[(352), int16] */;
  %17 = cast(%var_13345, dtype="float32") /* ty=Tensor[(546), float32] */;
  %18 = reshape(%15, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), int16] */;
  %19 = reshape(%16, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), int16] */;
  %20 = reshape(%17, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %21 = @func_4669(%18, %19, %20) /* ty=(Tensor[(4, 8, 11), int16], Tensor[(7, 8, 10), float32], Tensor[(630), float64], Tensor[(4, 8, 546), float64]) */;
  %22 = cast(%var_13349, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %23 = reshape(%22, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int8] */;
  %24 = @func_2422(%23) /* ty=(Tensor[(7, 9, 16), int8],) */;
  %25 = cast(%10, dtype="bool") /* ty=Tensor[(65, 11), bool] */;
  %26 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(65, 11), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(65, 11), float32] */, dtype="bool") /* ty=Tensor[(65, 11), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %29 = bitwise_xor(%13, %14) /* ty=Tensor[(65, 11), uint32] */;
  %30 = %21.0;
  %31 = %24.0;
  %32 = logical_and(%27, %28) /* ty=Tensor[(65, 11), bool] */;
  (%29, %30, %var_13343, meta[relay.Constant][2] /* ty=Tensor[(352), int16] */, %var_13345, %31, %var_13349, %32)
}

def @func_12309() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(7, 8, 10), float32]) {
  %33 = @func_10647() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %34 = @func_10500() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) */;
  %35 = %34.0;
  %36 = cast(%35, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  %37 = %33.4;
  %38 = atanh(%36) /* ty=Tensor[(2, 15, 12), float32] */;
  %39 = @func_2851() /* ty=Tensor[(7, 8, 10), float32] */;
  (%37, %38, %39)
}

def @func_12546() -> (Tensor[(2, 15, 12), int64],) {
  %40 = @func_11279() /* ty=(Tensor[(2, 15, 12), int64], Tensor[(8, 9, 9), uint8]) */;
  %41 = %40.0;
  (%41,)
}

def @func_9894() -> (Tensor[(65, 11), float32],) {
  %42 = @func_8417() /* ty=(Tensor[(65, 11), float32],) */;
  %43 = %42.0;
  (%43,)
}

def @func_9514() -> (Tensor[(65, 11), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32]) {
  %44 = @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %45 = @func_5210() /* ty=(Tensor[(350), float32], Tensor[(10, 7, 5), float32]) */;
  %46 = @func_6198() /* ty=Tensor[(65, 11), float32] */;
  %47 = %44.1;
  %48 = %45.1;
  (%46, %47, %48)
}

def @func_7043() -> Tensor[(65, 11), float64] {
  %49 = @func_6734() /* ty=(Tensor[(65, 11), float64], Tensor[(11, 5, 13), int8]) */;
  %49.0
}

def @func_3112() -> (Tensor[(7, 8, 10), float32],) {
  %50 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  (%50,)
}

def @func_4639() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) {
  %51 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %52 = @func_4296() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */;
  %53 = @func_4296() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */;
  %54 = %51.0;
  %55 = %52.2;
  %56 = %53.1;
  (%54, %55, %56)
}

def @func_10672() -> (Tensor[(7, 8, 10), float32], Tensor[(8, 9, 9), uint8]) {
  %57 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %58 = @func_6697() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */;
  %59 = %57.1;
  %60 = %58.2;
  (%59, %60)
}

def @func_3748(%var_3692: Tensor[(14, 12, 10), float64], %var_3693: Tensor[(14, 12, 10), float64], %var_3716: uint64) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64]) {
  %61 = cast(%var_3693, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %62 = shape_of(%var_3692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%var_3692, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %65 = cast(%var_3716, dtype="uint64") /* ty=uint64 */;
  %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(3136), uint64] */, dtype="uint64") /* ty=Tensor[(3136), uint64] */;
  %67 = reshape(%65, newshape=[]) /* ty=uint64 */;
  %68 = reshape(%66, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint64] */;
  %69 = @func_2298(%67, %68) /* ty=(Tensor[(14, 16, 14), uint64],) */;
  %70 = floor_divide(%63, %64) /* ty=Tensor[(14, 12, 10), float64] */;
  %71 = %69.0;
  (%70, %71, %var_3716, meta[relay.Constant][3] /* ty=Tensor[(3136), uint64] */)
}

def @func_5623(%var_5607: Tensor[(630), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(3, 15, 14), float64], Tensor[(630), float64], int64, Tensor[(546), float32]) {
  %72 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(7, 8, 10), float32] */;
  %74 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %75 = cast(%var_5607, dtype="float64") /* ty=Tensor[(630), float64] */;
  %76 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %78 = reshape(%75, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float64] */;
  %79 = reshape(%76, newshape=[]) /* ty=int64 */;
  %80 = reshape(%77, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %81 = @func_1369(%78, %79, %80) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */;
  %82 = log(%73) /* ty=Tensor[(7, 8, 10), float32] */;
  %83 = %74.0;
  %84 = %81.0;
  (%82, %83, %84, %var_5607, -8 /* ty=int64 */, meta[relay.Constant][4] /* ty=Tensor[(546), float32] */)
}

def @func_10500() -> (Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) {
  %85 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %86 = @func_7881() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %87 = %85.1;
  %88 = %86.0;
  (%87, %88)
}

def @func_10237() -> (Tensor[(7, 8, 10), float32],) {
  %89 = @func_5881() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %90 = %89.0;
  (%90,)
}

def @func_12484() -> Tensor[(65, 11), float32] {
  %91 = @func_8958() /* ty=(Tensor[(65, 11), float32],) */;
  %91.0
}

def @func_12205() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(350), float32]) {
  %92 = @func_8939() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %93 = @func_11529() /* ty=(Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */;
  %94 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %95 = %94.4;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(350), float32] */;
  %97 = %92.0;
  %98 = %93.2;
  %99 = atan(%96) /* ty=Tensor[(350), float32] */;
  (%97, %98, %99)
}

def @func_7028() -> (Tensor[(11, 5, 13), float32],) {
  %100 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %101 = %100.1;
  (%101,)
}

def @func_9708() -> Tensor[(7, 8, 10), float32] {
  @func_2585() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_4830(%var_4761: Tensor[(180), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(4, 14, 2), bool], Tensor[(65, 11), float32], Tensor[(360), float64], Tensor[(546), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %102 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %103 = cast(%var_4761, dtype="float64") /* ty=Tensor[(180), float64] */;
  %104 = cast(meta[relay.Constant][5] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %105 = reshape(%103, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
  %106 = reshape(%104, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
  %107 = @func_2136(%105, %106) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
  %108 = %107.1;
  %109 = cast(meta[relay.Constant][5] /* ty=Tensor[(112), float32] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%108, dtype="bool") /* ty=Tensor[(4, 14, 2), bool] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %113 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %114 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %115 = %113.0;
  %116 = cast(%115, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %117 = reshape(%116, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float64] */;
  %118 = @func_1462(%117) /* ty=(Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) */;
  %119 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %120 = %102.0;
  %121 = greater_equal(%111, %112) /* ty=Tensor[(4, 14, 2), bool] */;
  %122 = %114.2;
  %123 = %118.3;
  %124 = %119.1;
  %125 = @func_3241() /* ty=Tensor[(7, 8, 10), float32] */;
  (%120, %var_4761, %121, %115, %122, %123, %124, %125)
}

def @func_13545() -> (Tensor[(7, 8, 10), float32], Tensor[(10, 7, 5), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) {
  %126 = @func_5210() /* ty=(Tensor[(350), float32], Tensor[(10, 7, 5), float32]) */;
  %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(1008), int8] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %128 = reshape(%127, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int8] */;
  %129 = @func_2422(%128) /* ty=(Tensor[(7, 9, 16), int8],) */;
  %130 = @func_7679() /* ty=Tensor[(7, 8, 10), float32] */;
  %131 = %126.1;
  %132 = %129.0;
  (%130, %131, %132, meta[relay.Constant][6] /* ty=Tensor[(1008), int8] */)
}

def @func_7400() -> (Tensor[(360), float64],) {
  %133 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %134 = %133.2;
  (%134,)
}

def @func_12396(%var_12391: Tensor[(10, 8, 2), int32]) -> (Tensor[(10, 8, 2), int32],) {
  %135 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %136 = cast(%var_12391, dtype="int32") /* ty=Tensor[(10, 8, 2), int32] */;
  %137 = right_shift(%135, %136) /* ty=Tensor[(10, 8, 2), int32] */;
  (%137,)
}

def @func_3302(%var_3291: Tensor[(429, 2), uint8]) -> (Tensor[(65, 11), float32], Tensor[(546, ?), int16], Tensor[(429, 2), float32]) {
  %138 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %139 = cast(%var_3291, dtype="uint8") /* ty=Tensor[(429, 2), uint8] */;
  %140 = cast(%var_3291, dtype="uint8") /* ty=Tensor[(429, 2), uint8] */;
  %141 = reshape(%139, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint8] */;
  %142 = reshape(%140, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint8] */;
  %143 = @func_709(%141, %142) /* ty=(Tensor[(11, 6, 13), uint8], Tensor[(11, 6, 13), bool], Tensor[(546, ?), int16], Tensor[(11, 6, 13), float32]) */;
  %144 = cast(%var_3291, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %145 = %138.0;
  %146 = %143.2;
  %147 = cos(%144) /* ty=Tensor[(429, 2), float32] */;
  (%145, %146, %147)
}

def @func_2926(%var_2912: Tensor[(630), float64], %var_2913: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], int64, Tensor[(630), float64], Tensor[(546), float32]) {
  %148 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %149 = cast(%var_2912, dtype="float64") /* ty=Tensor[(630), float64] */;
  %150 = cast(%var_2913, dtype="float32") /* ty=Tensor[(546), float32] */;
  %151 = reshape(%149, newshape=[1, 630]) /* ty=Tensor[(1, 630), float64] */;
  %152 = reshape(%150, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %153 = @func_2504(%151, %152) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(1, 630), float64], int64, Tensor[(546), float32]) */;
  %154 = %148.0;
  %155 = %153.3;
  (%154, %155, %var_2912, %var_2913)
}

def @func_1061(%var_1054: Tensor[(11, 16, 5), float32]) -> (Tensor[(11, 16, 5), float32],) {
  %156 = cast(meta[relay.Constant][7] /* ty=Tensor[(11, 16, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 16, 5), float32] */;
  %157 = shape_of(%var_1054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%var_1054, dtype="float32") /* ty=Tensor[(11, 16, 5), float32] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %160 = power(%158, %159) /* ty=Tensor[(11, 16, 5), float32] */;
  (%160,)
}

def @func_3319() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) {
  %161 = cast(meta[relay.Constant][8] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %162 = reshape(%161, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float64] */;
  %163 = @func_373(%162) /* ty=(Tensor[(2, 15, 12), float64],) */;
  %164 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
  %165 = %163.0;
  (%164, %165, meta[relay.Constant][8] /* ty=Tensor[(360), float64] */)
}

def @func_3014() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %166 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %167 = %166.0;
  %168 = @func_2876() /* ty=Tensor[(7, 8, 10), float32] */;
  (%167, %168)
}

def @func_6212() -> Tensor[(7, 8, 10), float32] {
  %169 = @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %169.0
}

def @func_12129(%var_12114: Tensor[(1, 6, 7), bool]) -> (Tensor[(6, 6, 7), bool], Tensor[(4, 28), float32], Tensor[(180), float64]) {
  %170 = cast(%var_12114, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  %171 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(6, 6, 7), bool] */;
  %172 = cast(meta[relay.Constant][10] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %173 = reshape(%172, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %174 = @func_5372(%173) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(1, 112), float32], Tensor[(180, 1), float64], Tensor[(4, 28), float32]) */;
  %175 = logical_or(%170, %171) /* ty=Tensor[(6, 6, 7), bool] */;
  %176 = %174.3;
  (%175, %176, meta[relay.Constant][10] /* ty=Tensor[(180), float64] */)
}

def @func_7385(%var_7337: Tensor[(65, 11), float64], %var_7369: Tensor[(180), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(156), float64], Tensor[(65, 11), bool], Tensor[(4, 14, 2), float32], Tensor[(180), float64], Tensor[(112), float32], Tensor[(65, 11), float64]) {
  %177 = cast(meta[relay.Constant][11] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %178 = reshape(%177, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
  %179 = @func_6565(%178) /* ty=(Tensor[(13, 6, 2), float64],) */;
  %180 = @func_7222() /* ty=Tensor[(65, 11), float64] */;
  %181 = cast(%var_7337, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(2), int32] */;
  %183 = cast(%180, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %185 = subtract(%183, %184) /* ty=Tensor[(65, 11), int32] */;
  %186 = cast(%185, dtype="bool") /* ty=Tensor[(65, 11), bool] */;
  %187 = shape_of(%180, dtype="int32") /* ty=Tensor[(2), int32] */;
  %188 = cast(%180, dtype="bool") /* ty=Tensor[(65, 11), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %190 = cast(%var_7369, dtype="float64") /* ty=Tensor[(180), float64] */;
  %191 = cast(meta[relay.Constant][12] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %192 = reshape(%190, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
  %193 = reshape(%191, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
  %194 = @func_2136(%192, %193) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
  %195 = cast(meta[relay.Constant][13] /* ty=Tensor[(65, 11), float64] */, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %196 = shape_of(%180, dtype="int32") /* ty=Tensor[(2), int32] */;
  %197 = cast(%180, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %199 = floor_mod(%197, %198) /* ty=Tensor[(65, 11), float32] */;
  %200 = cast(%199, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %201 = %179.0;
  %202 = not_equal(%188, %189) /* ty=Tensor[(65, 11), bool] */;
  %203 = %194.1;
  %204 = log(%200) /* ty=Tensor[(65, 11), float64] */;
  (%201, meta[relay.Constant][11] /* ty=Tensor[(156), float64] */, %202, %203, %var_7369, meta[relay.Constant][12] /* ty=Tensor[(112), float32] */, %204)
}

def @func_6363(%var_6359: Tensor[(9, 16, 3), float64]) -> Tensor[(9, 16, 3), float64] {
  %205 = cast(%var_6359, dtype="float64") /* ty=Tensor[(9, 16, 3), float64] */;
  log2(%205) /* ty=Tensor[(9, 16, 3), float64] */
}

def @func_373(%var_336: Tensor[(2, 15, 12), float64]) -> (Tensor[(2, 15, 12), float64],) {
  %206 = cast(%var_336, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  %207 = sigmoid(%206) /* ty=Tensor[(2, 15, 12), float64] */;
  (%207,)
}

def @func_8372() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(112), bool]) {
  %208 = @func_7200() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %209 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %210 = %209.1;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  %212 = reshape(%211, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %213 = @func_5861(%212) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float32]) */;
  %214 = @func_5881() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %215 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %216 = @func_7699() /* ty=(Tensor[(7, 8, 10), float64], Tensor[(7, 8, 10), float32], Tensor[(112), float32]) */;
  %217 = %216.2;
  %218 = cast(meta[relay.Constant][14] /* ty=Tensor[(112), float32] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(1), int32] */;
  %220 = cast(%217, dtype="bool") /* ty=Tensor[(112), bool] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?), bool] */;
  %222 = %208.0;
  %223 = @func_7679() /* ty=Tensor[(7, 8, 10), float32] */;
  %224 = @func_7574() /* ty=Tensor[(7, 8, 10), float32] */;
  %225 = %213.8;
  %226 = %214.0;
  %227 = %215.0;
  %228 = less(%220, %221) /* ty=Tensor[(112), bool] */;
  (%222, %223, %224, %210, %225, %226, %227, %228)
}

def @func_6650() -> Tensor[(7, 8, 10), float32] {
  %229 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %229.0
}

def @func_5372(%var_5355: Tensor[(180, 1), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(1, 112), float32], Tensor[(180, 1), float64], Tensor[(4, 28), float32]) {
  %230 = cast(%var_5355, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %231 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 28), float32] */, dtype="float32") /* ty=Tensor[(4, 28), float32] */;
  %232 = reshape(%230, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
  %233 = reshape(%231, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
  %234 = @func_2136(%232, %233) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
  %235 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
  %236 = %234.2;
  (%235, %236, %var_5355, meta[relay.Constant][15] /* ty=Tensor[(4, 28), float32] */)
}

def @func_4699() -> (Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
  %237 = cast(meta[relay.Constant][16] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %238 = reshape(%237, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
  %239 = @func_968(%238) /* ty=(Tensor[(4, 14, 2), float32],) */;
  %240 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
  %241 = %239.0;
  (%240, %241, meta[relay.Constant][16] /* ty=Tensor[(112), float32] */)
}

def @func_4047(%var_4010: Tensor[(880), float32], %var_4044: int64) -> (Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(880), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(273, 2), float32], Tensor[(273, 2), float32], int64) {
  %242 = cast(%var_4010, dtype="float32") /* ty=Tensor[(880), float32] */;
  %243 = reshape(%242, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float32] */;
  %244 = @func_1061(%243) /* ty=(Tensor[(11, 16, 5), float32],) */;
  %245 = cast(meta[relay.Constant][17] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %246 = reshape(%245, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
  %247 = @func_3039(%246) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(273, 2), float32]) */;
  %248 = cast(meta[relay.Constant][17] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %249 = reshape(%248, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
  %250 = @func_3039(%249) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(273, 2), float32]) */;
  %251 = cast(%var_4044, dtype="int64") /* ty=int64 */;
  %252 = %247.1;
  %253 = cast(%252, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  %254 = reshape(%251, newshape=[]) /* ty=int64 */;
  %255 = reshape(%253, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
  %256 = @func_3623(%254, %255) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) */;
  %257 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  %258 = %244.0;
  %259 = %250.2;
  %260 = %256.4;
  (%257, %258, %var_4010, %252, meta[relay.Constant][17] /* ty=Tensor[(546), float32] */, %259, %260, %var_4044)
}

def @func_8401() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %261 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %262 = @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %263 = %261.0;
  %264 = %262.0;
  (%263, %264)
}

def @func_11039() -> (Tensor[(4, 14, 2), float32],) {
  %265 = @func_7306() /* ty=(Tensor[(4, 14, 2), float32],) */;
  %266 = %265.0;
  (%266,)
}

def @func_8612() -> Tensor[(7, 8, 10), float32] {
  @func_2851() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_5509(%var_5494: float32) -> (Tensor[(1, 9, 9), float32], Tensor[(1, 9, 9), float64]) {
  %267 = cast(%var_5494, dtype="float32") /* ty=float32 */;
  %268 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 9), float32] */;
  %269 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 9, 9), float32] */, dtype="float64") /* ty=Tensor[(1, 9, 9), float64] */;
  %270 = add(%267, %268) /* ty=Tensor[(1, 9, 9), float32] */;
  %271 = sqrt(%269) /* ty=Tensor[(1, 9, 9), float64] */;
  (%270, %271)
}

def @func_13310() -> (Tensor[(7, 8, 10), float32],) {
  %272 = @func_10400() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */;
  %273 = %272.0;
  (%273,)
}

def @func_9249() -> Tensor[(7, 8, 10), float32] {
  %274 = @func_8939() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %274.0
}

def @func_9739(%var_9727: Tensor[(65, 11), float64]) -> Tensor[(65, 11), int8] {
  %275 = @func_9355() /* ty=(Tensor[(65, 11), float64],) */;
  %276 = %275.0;
  %277 = cast(%var_9727, dtype="int8") /* ty=Tensor[(65, 11), int8] */;
  %278 = shape_of(%276, dtype="int32") /* ty=Tensor[(2), int32] */;
  %279 = cast(%276, dtype="int8") /* ty=Tensor[(65, 11), int8] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  right_shift(%279, %280) /* ty=Tensor[(65, 11), int8] */
}

def @func_2743(%var_2711: Tensor[(11, 5, 13), float32], %var_2716: Tensor[(11, 5, 13), float32]) -> (Tensor[(11, 5, 13), int16], Tensor[(11, 5, 13), int8]) {
  %281 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %282 = %281.1;
  %283 = cast(%var_2711, dtype="int16") /* ty=Tensor[(11, 5, 13), int16] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%282, dtype="int16") /* ty=Tensor[(11, 5, 13), int16] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %287 = cast(%var_2716, dtype="int8") /* ty=Tensor[(11, 5, 13), int8] */;
  %288 = shape_of(%var_2711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%var_2711, dtype="int8") /* ty=Tensor[(11, 5, 13), int8] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %291 = left_shift(%285, %286) /* ty=Tensor[(11, 5, 13), int16] */;
  %292 = bitwise_xor(%289, %290) /* ty=Tensor[(11, 5, 13), int8] */;
  (%291, %292)
}

def @func_2585() -> Tensor[(7, 8, 10), float32] {
  %293 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %293.1
}

def @func_8958() -> (Tensor[(65, 11), float32],) {
  %294 = @func_6532() /* ty=Tensor[(65, 11), float32] */;
  (%294,)
}

def @func_9872() -> Tensor[(7, 8, 10), float32] {
  %295 = @func_8401() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %295.1
}

def @func_2136(%var_2128: Tensor[(5, 6, 6), float64], %var_2132: Tensor[(1, 112), float32]) -> (Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) {
  %296 = cast(%var_2128, dtype="float64") /* ty=Tensor[(5, 6, 6), float64] */;
  %297 = cast(%var_2132, dtype="float32") /* ty=Tensor[(1, 112), float32] */;
  %298 = reshape(%297, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
  %299 = @func_968(%298) /* ty=(Tensor[(4, 14, 2), float32],) */;
  %300 = exp(%296) /* ty=Tensor[(5, 6, 6), float64] */;
  %301 = %299.0;
  (%300, %301, %var_2132)
}

def @func_10699() -> Tensor[(65, 11), float32] {
  %302 = @func_8417() /* ty=(Tensor[(65, 11), float32],) */;
  %302.0
}

def @func_5268() -> Tensor[(7, 8, 10), float32] {
  %303 = @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %303.0
}

def @func_4255(%var_4238: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(7, 8, 10), uint8]) {
  %304 = cast(%var_4238, dtype="float64") /* ty=Tensor[(360), float64] */;
  %305 = reshape(%304, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float64] */;
  %306 = @func_373(%305) /* ty=(Tensor[(2, 15, 12), float64],) */;
  %307 = @func_2826() /* ty=Tensor[(7, 8, 10), float32] */;
  %308 = cast(%307, dtype="float32") /* ty=Tensor[(7, 8, 10), float32] */;
  %309 = reshape(%308, newshape=[7, 8, 10]) /* ty=Tensor[(7, 8, 10), float32] */;
  %310 = @func_3241() /* ty=Tensor[(7, 8, 10), float32] */;
  %311 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
  %312 = @func_2826() /* ty=Tensor[(7, 8, 10), float32] */;
  %313 = %306.0;
  %314 = @func_3799(%309) /* ty=Tensor[(7, 8, 10), uint8] */;
  (%307, %310, %311, %312, %313, %var_4238, %314)
}

def @func_6043() -> Tensor[(350), float32] {
  %315 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %315.4
}

def @func_12578(%var_12555: Tensor[(2, 15, 12), float64]) -> Tensor[(2, 15, 12), float64] {
  %316 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %317 = %316.1;
  %318 = cast(%var_12555, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%317, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%320, %321) /* ty=Tensor[(2, 15, 12), float64] */
}

def @func_6080() -> Tensor[(65, 11), float32] {
  %322 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %322.0
}

def @func_5756() -> (Tensor[(7, 8, 10), float32],) {
  %323 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %324 = %323.0;
  (%324,)
}

def @func_10143() -> Tensor[(7, 8, 10), float32] {
  %325 = @func_7881() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %325.0
}

def @func_4882() -> Tensor[(65, 11), float32] {
  %326 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %327 = %326.2;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  sinh(%328) /* ty=Tensor[(65, 11), float32] */
}

def @func_5861(%var_5805: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float32]) {
  %329 = cast(%var_5805, dtype="float64") /* ty=Tensor[(360), float64] */;
  %330 = reshape(%329, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %331 = @func_4255(%330) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(7, 8, 10), uint8]) */;
  %332 = %331.4;
  %333 = cast(%var_5805, dtype="float32") /* ty=Tensor[(360), float32] */;
  %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%332, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %337 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %338 = @func_5138() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %340 = reshape(%339, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %341 = @func_5372(%340) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(1, 112), float32], Tensor[(180, 1), float64], Tensor[(4, 28), float32]) */;
  %342 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %343 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %344 = @func_4722() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */;
  %345 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %346 = @func_3241() /* ty=Tensor[(7, 8, 10), float32] */;
  %347 = floor_divide(%335, %336) /* ty=Tensor[(2, 15, 12), float32] */;
  %348 = %337.2;
  %349 = %338.1;
  %350 = %341.0;
  %351 = %342.0;
  %352 = %343.1;
  %353 = %344.0;
  %354 = %345.0;
  (%346, %347, %348, %349, %350, meta[relay.Constant][19] /* ty=Tensor[(180), float64] */, %351, %352, %353, %354)
}

def @func_12146() -> (Tensor[(7, 8, 10), float32],) {
  %355 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
  (%355,)
}

def @func_4722() -> (Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) {
  %356 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %357 = cast(meta[relay.Constant][20] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %358 = cast(meta[relay.Constant][21] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %359 = reshape(%357, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
  %360 = reshape(%358, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
  %361 = @func_2136(%359, %360) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
  %362 = %356.1;
  %363 = %361.2;
  (%362, %363, meta[relay.Constant][20] /* ty=Tensor[(180), float64] */, meta[relay.Constant][21] /* ty=Tensor[(112), float32] */)
}

def @func_9998(%var_9993: Tensor[(65, 11), float32]) -> (Tensor[(65, 11), int16],) {
  %364 = @func_6697() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */;
  %365 = %364.3;
  %366 = cast(%var_9993, dtype="int16") /* ty=Tensor[(65, 11), int16] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(2), int32] */;
  %368 = cast(%365, dtype="int16") /* ty=Tensor[(65, 11), int16] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %370 = multiply(%368, %369) /* ty=Tensor[(65, 11), int16] */;
  (%370,)
}

def @func_607(%var_589: Tensor[(14, 13, 3), float32]) -> Tensor[(14, 13, 3), float32] {
  %371 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 13, 3), float32] */, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
  %372 = cast(%var_589, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %373 = less_equal(%371, %372) /* ty=Tensor[(14, 13, 3), bool] */;
  %374 = cast(%373, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  log2(%374) /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_7881() -> (Tensor[(7, 8, 10), float32],) {
  %375 = @func_7679() /* ty=Tensor[(7, 8, 10), float32] */;
  (%375,)
}

def @func_4516(%var_4487: uint64, %var_4511: Tensor[(112), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(440, 2), float32], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(11, 16, 5), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
  %376 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %377 = cast(meta[relay.Constant][23] /* ty=Tensor[(440, 2), float32] */, dtype="float32") /* ty=Tensor[(440, 2), float32] */;
  %378 = reshape(%377, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float32] */;
  %379 = @func_1061(%378) /* ty=(Tensor[(11, 16, 5), float32],) */;
  %380 = cast(%var_4487, dtype="uint64") /* ty=uint64 */;
  %381 = cast(meta[relay.Constant][24] /* ty=Tensor[(3136), uint64] */, dtype="uint64") /* ty=Tensor[(3136), uint64] */;
  %382 = reshape(%380, newshape=[]) /* ty=uint64 */;
  %383 = reshape(%381, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint64] */;
  %384 = @func_2298(%382, %383) /* ty=(Tensor[(14, 16, 14), uint64],) */;
  %385 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %386 = cast(meta[relay.Constant][23] /* ty=Tensor[(440, 2), float32] */, dtype="float32") /* ty=Tensor[(440, 2), float32] */;
  %387 = cast(%var_4487, dtype="int64") /* ty=int64 */;
  %388 = reshape(%386, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %389 = reshape(%387, newshape=[]) /* ty=int64 */;
  %390 = @func_4047(%388, %389) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(880), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(273, 2), float32], Tensor[(273, 2), float32], int64) */;
  %391 = %379.0;
  %392 = cast(%391, dtype="float32") /* ty=Tensor[(11, 16, 5), float32] */;
  %393 = reshape(%392, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float32] */;
  %394 = @func_1061(%393) /* ty=(Tensor[(11, 16, 5), float32],) */;
  %395 = cast(%var_4511, dtype="float32") /* ty=Tensor[(112), float32] */;
  %396 = reshape(%395, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
  %397 = @func_968(%396) /* ty=(Tensor[(4, 14, 2), float32],) */;
  %398 = %376.0;
  %399 = %384.0;
  %400 = @func_2658() /* ty=Tensor[(7, 8, 10), float32] */;
  %401 = %385.1;
  %402 = %390.7;
  %403 = %394.0;
  %404 = %397.0;
  (%398, %391, meta[relay.Constant][23] /* ty=Tensor[(440, 2), float32] */, %399, %var_4487, meta[relay.Constant][24] /* ty=Tensor[(3136), uint64] */, %400, %401, %402, %403, %404, %var_4511)
}

def @func_6198() -> Tensor[(65, 11), float32] {
  @func_5694() /* ty=Tensor[(65, 11), float32] */
}

def @func_8088() -> (Tensor[(7, 8, 10), float32], Tensor[(546, ?), int16], Tensor[(1, 858), uint8]) {
  %405 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 858), uint8] */, dtype="uint8") /* ty=Tensor[(1, 858), uint8] */;
  %406 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 858), uint8] */, dtype="uint8") /* ty=Tensor[(1, 858), uint8] */;
  %407 = reshape(%405, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint8] */;
  %408 = reshape(%406, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint8] */;
  %409 = @func_709(%407, %408) /* ty=(Tensor[(11, 6, 13), uint8], Tensor[(11, 6, 13), bool], Tensor[(546, ?), int16], Tensor[(11, 6, 13), float32]) */;
  %410 = @func_5407() /* ty=Tensor[(7, 8, 10), float32] */;
  %411 = %409.2;
  (%410, %411, meta[relay.Constant][25] /* ty=Tensor[(1, 858), uint8] */)
}

def @func_8675() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32]) {
  %412 = @func_4296() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */;
  %413 = @func_8093() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %414 = @func_8401() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %415 = @func_8417() /* ty=(Tensor[(65, 11), float32],) */;
  %416 = @func_7679() /* ty=Tensor[(7, 8, 10), float32] */;
  %417 = %412.0;
  %418 = %413.0;
  %419 = %414.0;
  %420 = %415.0;
  (%416, %417, %418, %419, %420)
}

def @func_12694(%var_12690: Tensor[(6, 60), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(6, 60), float64]) {
  %421 = @func_7200() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %422 = cast(%var_12690, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %423 = reshape(%422, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float64] */;
  %424 = @func_8049(%423) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) */;
  %425 = %421.0;
  %426 = %424.0;
  (%425, %426, %var_12690)
}

def @func_4669(%var_4653: Tensor[(4, 8, 1), int16], %var_4654: Tensor[(4, 8, 11), int16], %var_4661: Tensor[(546), float32]) -> (Tensor[(4, 8, 11), int16], Tensor[(7, 8, 10), float32], Tensor[(630), float64], Tensor[(4, 8, 546), float64]) {
  %427 = cast(%var_4653, dtype="int16") /* ty=Tensor[(4, 8, 1), int16] */;
  %428 = cast(%var_4654, dtype="int16") /* ty=Tensor[(4, 8, 11), int16] */;
  %429 = cast(meta[relay.Constant][26] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %430 = cast(%var_4661, dtype="float32") /* ty=Tensor[(546), float32] */;
  %431 = reshape(%429, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %432 = reshape(%430, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %433 = @func_2926(%431, %432) /* ty=(Tensor[(7, 8, 10), float32], int64, Tensor[(630), float64], Tensor[(546), float32]) */;
  %434 = cast(%var_4661, dtype="float64") /* ty=Tensor[(546), float64] */;
  %435 = cast(%var_4653, dtype="float64") /* ty=Tensor[(4, 8, 1), float64] */;
  %436 = logical_xor(%427, %428) /* ty=Tensor[(4, 8, 11), int16] */;
  %437 = %433.0;
  %438 = floor_mod(%434, %435) /* ty=Tensor[(4, 8, 546), float64] */;
  (%436, %437, meta[relay.Constant][26] /* ty=Tensor[(630), float64] */, %438)
}

def @func_2041(%var_2031: Tensor[(10, 10, 15), uint16]) -> Tensor[(10, 10, 15), bool] {
  %439 = cast(meta[relay.Constant][27] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %440 = cast(%var_2031, dtype="bool") /* ty=Tensor[(10, 10, 15), bool] */;
  less_equal(%439, %440) /* ty=Tensor[(10, 10, 15), bool] */
}

def @func_7944() -> Tensor[(65, 11), uint64] {
  %441 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %442 = %441.0;
  %443 = cast(meta[relay.Constant][28] /* ty=Tensor[(65, 11), float32] */, dtype="uint64") /* ty=Tensor[(65, 11), uint64] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(2), int32] */;
  %445 = cast(%442, dtype="uint64") /* ty=Tensor[(65, 11), uint64] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  add(%445, %446) /* ty=Tensor[(65, 11), uint64] */
}

def @func_8733() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %447 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %448 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %449 = %447.1;
  %450 = @func_2658() /* ty=Tensor[(7, 8, 10), float32] */;
  %451 = %448.0;
  (%449, %450, %451)
}

def @func_2658() -> Tensor[(7, 8, 10), float32] {
  %452 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %452.0
}

def @func_10220() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %453 = @func_8733() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %454 = @func_9708() /* ty=Tensor[(7, 8, 10), float32] */;
  %455 = %453.1;
  (%454, %455)
}

def @func_11583() -> (Tensor[(7, 8, 10), float32],) {
  %456 = @func_10934() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %457 = %456.0;
  (%457,)
}

def @func_11754(%var_11751: Tensor[(1536), float64]) -> (Tensor[(2, 15, 12), int64], Tensor[(7, 8, 10), float32], int64, Tensor[(1536), float64]) {
  %458 = @func_11279() /* ty=(Tensor[(2, 15, 12), int64], Tensor[(8, 9, 9), uint8]) */;
  %459 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %460 = cast(%var_11751, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %461 = reshape(%459, newshape=[]) /* ty=int64 */;
  %462 = reshape(%460, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %463 = @func_9799(%461, %462) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(91, 6), float32], Tensor[(8, 16, 12), float64], Tensor[(1536), float64], Tensor[(7, 8, 10), float32]) */;
  %464 = %458.0;
  %465 = %463.1;
  (%464, %465, 1 /* ty=int64 */, %var_11751)
}

def @func_8895(%var_8891: Tensor[(1008), int8]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) {
  %466 = @func_5069() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %467 = cast(%var_8891, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %468 = reshape(%467, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int8] */;
  %469 = @func_2422(%468) /* ty=(Tensor[(7, 9, 16), int8],) */;
  %470 = %466.0;
  %471 = %469.0;
  (%470, %471, %var_8891)
}

def @func_11502() -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32]) {
  %472 = @func_7028() /* ty=(Tensor[(11, 5, 13), float32],) */;
  %473 = @func_3831() /* ty=Tensor[(7, 8, 10), float32] */;
  %474 = %472.0;
  (%473, %474)
}

def @func_2298(%var_2292: uint64, %var_2293: Tensor[(14, 16, 14), uint64]) -> (Tensor[(14, 16, 14), uint64],) {
  %475 = cast(%var_2292, dtype="uint64") /* ty=uint64 */;
  %476 = cast(%var_2293, dtype="uint64") /* ty=Tensor[(14, 16, 14), uint64] */;
  %477 = logical_xor(%475, %476) /* ty=Tensor[(14, 16, 14), uint64] */;
  (%477,)
}

def @func_8589() -> Tensor[(2, 15, 12), float64] {
  %478 = @func_4722() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */;
  %478.0
}

def @func_10897(%var_10891: Tensor[(15, 1, 3), uint8]) -> (Tensor[(15, 10, 3), uint8],) {
  %479 = cast(%var_10891, dtype="uint8") /* ty=Tensor[(15, 1, 3), uint8] */;
  %480 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 10, 3), uint8] */, dtype="uint8") /* ty=Tensor[(15, 10, 3), uint8] */;
  %481 = multiply(%479, %480) /* ty=Tensor[(15, 10, 3), uint8] */;
  (%481,)
}

def @func_7449() -> Tensor[(7, 8, 10), float32] {
  @func_2876() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_13092(%var_13087: Tensor[(45), uint8]) -> (Tensor[(7, 8, 10), float32], Tensor[(15, 10, 3), uint8], Tensor[(45), int8]) {
  %482 = @func_5323() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %483 = cast(meta[relay.Constant][30] /* ty=Tensor[(45), uint8] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %484 = reshape(%483, newshape=[15, 1, 3]) /* ty=Tensor[(15, 1, 3), uint8] */;
  %485 = @func_10897(%484) /* ty=(Tensor[(15, 10, 3), uint8],) */;
  %486 = cast(%var_13087, dtype="int8") /* ty=Tensor[(45), int8] */;
  %487 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(45), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %488 = cast(meta[relay.Constant][30] /* ty=Tensor[(45), uint8] */, dtype="int8") /* ty=Tensor[(45), int8] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?), int8] */;
  %490 = %482.0;
  %491 = %485.0;
  %492 = logical_xor(%488, %489) /* ty=Tensor[(45), int8] */;
  (%490, %491, %492)
}

def @func_9799(%var_9752: int64, %var_9789: Tensor[(1536), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(91, 6), float32], Tensor[(8, 16, 12), float64], Tensor[(1536), float64], Tensor[(7, 8, 10), float32]) {
  %493 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %494 = cast(%var_9752, dtype="int64") /* ty=int64 */;
  %495 = cast(meta[relay.Constant][31] /* ty=Tensor[(91, 6), float32] */, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
  %496 = reshape(%494, newshape=[]) /* ty=int64 */;
  %497 = reshape(%495, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
  %498 = @func_7558(%496, %497) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) */;
  %499 = cast(%var_9789, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %500 = cast(%var_9789, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %501 = reshape(%499, newshape=[8, 16, 12]) /* ty=Tensor[(8, 16, 12), float64] */;
  %502 = reshape(%500, newshape=[8, 16, 12]) /* ty=Tensor[(8, 16, 12), float64] */;
  %503 = @func_9633(%501, %502) /* ty=(Tensor[(8, 16, 12), float64],) */;
  %504 = %493.1;
  %505 = @func_8612() /* ty=Tensor[(7, 8, 10), float32] */;
  %506 = %498.0;
  %507 = %503.0;
  %508 = @func_3831() /* ty=Tensor[(7, 8, 10), float32] */;
  (%504, %505, %506, %var_9752, meta[relay.Constant][31] /* ty=Tensor[(91, 6), float32] */, %507, %var_9789, %508)
}

def @func_3546() -> (Tensor[(7, 8, 10), float32],) {
  %509 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  (%509,)
}

def @func_2422(%var_2417: Tensor[(7, 9, 16), int8]) -> (Tensor[(7, 9, 16), int8],) {
  %510 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 9, 16), int8] */, dtype="int8") /* ty=Tensor[(7, 9, 16), int8] */;
  %511 = shape_of(%var_2417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%var_2417, dtype="int8") /* ty=Tensor[(7, 9, 16), int8] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %514 = right_shift(%512, %513) /* ty=Tensor[(7, 9, 16), int8] */;
  (%514,)
}

def @func_6855(%var_6754: Tensor[(2, 2, 3), uint64], %var_6792: Tensor[(715), float32], %var_6833: Tensor[(65, 11), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 2, 3), float32], Tensor[(65, 11), float64], Tensor[(715), float32], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) {
  %515 = @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %516 = cast(meta[relay.Constant][33] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %517 = cast(%var_6754, dtype="uint64") /* ty=Tensor[(2, 2, 3), uint64] */;
  %518 = minimum(%516, %517) /* ty=Tensor[(2, 2, 3), uint64] */;
  %519 = cast(%var_6754, dtype="float32") /* ty=Tensor[(2, 2, 3), float32] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%518, dtype="float32") /* ty=Tensor[(2, 2, 3), float32] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %523 = cast(%var_6792, dtype="float32") /* ty=Tensor[(715), float32] */;
  %524 = reshape(%523, newshape=[65, 11]) /* ty=Tensor[(65, 11), float32] */;
  %525 = @func_3418(%524) /* ty=(Tensor[(65, 11), float64],) */;
  %526 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %527 = %526.0;
  %528 = cast(%527, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %529 = atan(%528) /* ty=Tensor[(65, 11), float64] */;
  %530 = cast(%var_6833, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(2), int32] */;
  %532 = cast(%529, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %534 = %515.2;
  %535 = floor_divide(%521, %522) /* ty=Tensor[(2, 2, 3), float32] */;
  %536 = %525.0;
  %537 = @func_4882() /* ty=Tensor[(65, 11), float32] */;
  %538 = mod(%532, %533) /* ty=Tensor[(65, 11), float32] */;
  (%534, %535, %536, %var_6792, %537, %538)
}

def @func_1369(%var_1335: Tensor[(3, 15, 14), float64], %var_1341: int64, %var_1347: Tensor[(546), float32]) -> (Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) {
  %539 = cast(%var_1335, dtype="float64") /* ty=Tensor[(3, 15, 14), float64] */;
  %540 = cast(%var_1341, dtype="int64") /* ty=int64 */;
  %541 = reshape(%540, newshape=[]) /* ty=int64 */;
  %542 = @func_1207(%541) /* ty=(Tensor[(11, 1, 6), int64],) */;
  %543 = cast(%var_1347, dtype="float32") /* ty=Tensor[(546), float32] */;
  %544 = reshape(%543, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %545 = cast(meta[relay.Constant][34] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %546 = reshape(%545, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float64] */;
  %547 = @func_373(%546) /* ty=(Tensor[(2, 15, 12), float64],) */;
  %548 = cast(%var_1347, dtype="float32") /* ty=Tensor[(546), float32] */;
  %549 = reshape(%548, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %550 = log(%539) /* ty=Tensor[(3, 15, 14), float64] */;
  %551 = %542.0;
  %552 = @func_607(%544) /* ty=Tensor[(14, 13, 3), float32] */;
  %553 = %547.0;
  %554 = @func_607(%549) /* ty=Tensor[(14, 13, 3), float32] */;
  (%550, %551, %var_1341, %552, %var_1347, %553, meta[relay.Constant][34] /* ty=Tensor[(360), float64] */, %554)
}

def @func_6734() -> (Tensor[(65, 11), float64], Tensor[(11, 5, 13), int8]) {
  %555 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %556 = %555.1;
  %557 = cast(%556, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %558 = cast(%556, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %559 = reshape(%557, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %560 = reshape(%558, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %561 = @func_2743(%559, %560) /* ty=(Tensor[(11, 5, 13), int16], Tensor[(11, 5, 13), int8]) */;
  %562 = %561.1;
  (%556, %562)
}

def @func_5138() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
  %563 = cast(meta[relay.Constant][35] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %564 = reshape(%563, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
  %565 = @func_968(%564) /* ty=(Tensor[(4, 14, 2), float32],) */;
  %566 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
  %567 = @func_2851() /* ty=Tensor[(7, 8, 10), float32] */;
  %568 = %565.0;
  (%566, %567, %568, meta[relay.Constant][35] /* ty=Tensor[(112), float32] */)
}

def @func_3051() -> Tensor[(7, 8, 10), float32] {
  %569 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %569.1
}

def @func_3623(%var_3618: int64, %var_3619: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) {
  %570 = @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %571 = cast(meta[relay.Constant][36] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %572 = cast(%var_3618, dtype="int64") /* ty=int64 */;
  %573 = cast(%var_3619, dtype="float32") /* ty=Tensor[(273, 2), float32] */;
  %574 = reshape(%571, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float64] */;
  %575 = reshape(%572, newshape=[]) /* ty=int64 */;
  %576 = reshape(%573, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %577 = @func_1369(%574, %575, %576) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */;
  %578 = %570.1;
  %579 = %577.4;
  (%578, %579, meta[relay.Constant][36] /* ty=Tensor[(630), float64] */, %var_3618, %var_3619)
}

def @func_8968() -> Tensor[(65, 11), float32] {
  @func_6198() /* ty=Tensor[(65, 11), float32] */
}

def @func_6898() -> Tensor[(4, 14, 2), float32] {
  %580 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %580.1
}

def @func_1207(%var_1191: int64) -> (Tensor[(11, 1, 6), int64],) {
  %581 = cast(%var_1191, dtype="int64") /* ty=int64 */;
  %582 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 1, 6), int64] */, dtype="int64") /* ty=Tensor[(11, 1, 6), int64] */;
  %583 = minimum(%581, %582) /* ty=Tensor[(11, 1, 6), int64] */;
  (%583,)
}

def @func_5210() -> (Tensor[(350), float32], Tensor[(10, 7, 5), float32]) {
  %584 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %585 = %584.4;
  %586 = cast(%585, dtype="float32") /* ty=Tensor[(350), float32] */;
  %587 = reshape(%586, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float32] */;
  %588 = @func_801(%587) /* ty=(Tensor[(10, 7, 5), float32],) */;
  %589 = %588.0;
  (%585, %589)
}

def @func_10400() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) {
  %590 = @func_3866() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) */;
  %591 = @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %592 = %590.3;
  %593 = %591.1;
  (%592, %593)
}

def @func_11399() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32]) {
  %594 = @func_10540() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %595 = @func_3866() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) */;
  %596 = %594.1;
  %597 = @func_8766() /* ty=Tensor[(65, 11), float32] */;
  %598 = %595.3;
  (%596, %597, %598)
}

def @func_11454() -> (Tensor[(112), bool],) {
  %599 = @func_8372() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(112), bool]) */;
  %600 = %599.7;
  (%600,)
}

def @func_12752() -> (Tensor[(65, 11), uint64], Tensor[(65, 11), float32], Tensor[(2, 15, 12), float64]) {
  %601 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %602 = @func_7944() /* ty=Tensor[(65, 11), uint64] */;
  %603 = @func_8766() /* ty=Tensor[(65, 11), float32] */;
  %604 = %601.1;
  (%602, %603, %604)
}

def @func_1462(%var_1423: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) {
  %605 = cast(%var_1423, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %606 = sinh(%605) /* ty=Tensor[(11, 5, 13), float64] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
  %608 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %609 = reshape(%608, newshape=[]) /* ty=int64 */;
  %610 = @func_1207(%609) /* ty=(Tensor[(11, 1, 6), int64],) */;
  %611 = %610.0;
  %612 = cast(-10 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %613 = cast(%611, dtype="bool") /* ty=Tensor[(11, 1, 6), bool] */;
  %614 = cast(meta[relay.Constant][38] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %615 = reshape(%614, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %616 = sigmoid(%607) /* ty=Tensor[(11, 5, 13), float32] */;
  %617 = logical_or(%612, %613) /* ty=Tensor[(11, 1, 6), bool] */;
  %618 = @func_607(%615) /* ty=Tensor[(14, 13, 3), float32] */;
  (%616, %617, %618, meta[relay.Constant][38] /* ty=Tensor[(546), float32] */)
}

def @func_2359() -> (Tensor[(7, 8, 10), float32],) {
  %619 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 10), float32] */;
  %620 = cosh(%619) /* ty=Tensor[(7, 8, 10), float32] */;
  (%620,)
}

def @func_13317() -> Tensor[(7, 8, 10), float32] {
  @func_9249() /* ty=Tensor[(7, 8, 10), float32] */
}

def @main() -> Tensor[(65, 11), float64] {
  %621 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %622 = %621.0;
  %623 = cast(%622, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  sqrt(%623) /* ty=Tensor[(65, 11), float64] */
}

def @func_12987() -> Tensor[(7, 8, 10), float32] {
  @func_3051() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_5881() -> (Tensor[(7, 8, 10), float32],) {
  %624 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %625 = %624.0;
  (%625,)
}

def @func_6532() -> Tensor[(65, 11), float32] {
  @func_5694() /* ty=Tensor[(65, 11), float32] */
}

def @func_7128(%var_7120: Tensor[(65, 11), float32]) -> Tensor[(65, 11), uint8] {
  %626 = @func_4425() /* ty=Tensor[(65, 11), float32] */;
  %627 = cast(%var_7120, dtype="uint8") /* ty=Tensor[(65, 11), uint8] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(2), int32] */;
  %629 = cast(%626, dtype="uint8") /* ty=Tensor[(65, 11), uint8] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  maximum(%629, %630) /* ty=Tensor[(65, 11), uint8] */
}

def @func_9566() -> (Tensor[(7, 8, 10), float32],) {
  %631 = @func_3831() /* ty=Tensor[(7, 8, 10), float32] */;
  (%631,)
}

def @func_3487() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %632 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %633 = @func_3401() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %634 = %632.0;
  %635 = %633.0;
  (%634, %635)
}

def @func_7306() -> (Tensor[(4, 14, 2), float32],) {
  %636 = @func_6898() /* ty=Tensor[(4, 14, 2), float32] */;
  (%636,)
}

def @func_8417() -> (Tensor[(65, 11), float32],) {
  %637 = @func_5694() /* ty=Tensor[(65, 11), float32] */;
  (%637,)
}

def @func_3866() -> (Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) {
  %638 = cast(meta[relay.Constant][40] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %639 = reshape(%638, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
  %640 = @func_968(%639) /* ty=(Tensor[(4, 14, 2), float32],) */;
  %641 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %642 = @func_2851() /* ty=Tensor[(7, 8, 10), float32] */;
  %643 = %640.0;
  %644 = %641.0;
  (%642, %643, meta[relay.Constant][40] /* ty=Tensor[(112), float32] */, %644)
}

def @func_13175() -> (Tensor[(65, 11), float32],) {
  %645 = @func_6697() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */;
  %646 = %645.3;
  (%646,)
}

def @func_11234() -> (Tensor[(4, 14, 2), float32], Tensor[(65, 11), float32]) {
  %647 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %648 = %647.1;
  %649 = cast(%648, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
  %650 = @func_9894() /* ty=(Tensor[(65, 11), float32],) */;
  %651 = tan(%649) /* ty=Tensor[(4, 14, 2), float32] */;
  %652 = %650.0;
  (%651, %652)
}

def @func_7096(%var_7085: int64, %var_7086: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(3, 15, 14), float64], Tensor[(630), float64], int64, Tensor[(546), float32]) {
  %653 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %654 = cast(meta[relay.Constant][41] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %655 = cast(%var_7085, dtype="int64") /* ty=int64 */;
  %656 = cast(%var_7086, dtype="float32") /* ty=Tensor[(546), float32] */;
  %657 = reshape(%654, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float64] */;
  %658 = reshape(%655, newshape=[]) /* ty=int64 */;
  %659 = reshape(%656, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %660 = @func_1369(%657, %658, %659) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */;
  %661 = %653.0;
  %662 = %660.0;
  (%661, %662, meta[relay.Constant][41] /* ty=Tensor[(630), float64] */, %var_7085, %var_7086)
}

def @func_7597(%var_7587: Tensor[(65, 11), float32]) -> Tensor[(65, 11), int32] {
  %663 = @func_5694() /* ty=Tensor[(65, 11), float32] */;
  %664 = cast(%var_7587, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
  %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(2), int32] */;
  %666 = cast(%663, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  bitwise_and(%666, %667) /* ty=Tensor[(65, 11), int32] */
}

def @func_12069() -> (Tensor[(7, 8, 10), uint8],) {
  %668 = @func_11529() /* ty=(Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */;
  %669 = %668.0;
  (%669,)
}

def @func_11186() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %670 = @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %671 = @func_8401() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %672 = %670.1;
  %673 = %671.1;
  (%672, %673)
}

def @func_6565(%var_6558: Tensor[(13, 6, 2), float64]) -> (Tensor[(13, 6, 2), float64],) {
  %674 = cast(%var_6558, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %675 = erf(%674) /* ty=Tensor[(13, 6, 2), float64] */;
  (%675,)
}

def @func_11529() -> (Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) {
  %676 = @func_5892() /* ty=(Tensor[(7, 8, 10), uint8],) */;
  %677 = @func_10237() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %678 = @func_10400() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */;
  %679 = %678.1;
  %680 = cast(%679, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %681 = %676.0;
  %682 = %677.0;
  %683 = cos(%680) /* ty=Tensor[(65, 11), float64] */;
  (%681, %682, %683)
}

def @func_2479() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %684 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %685 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %686 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %687 = %684.0;
  %688 = %685.0;
  %689 = %686.0;
  (%687, %688, %689)
}

def @func_2876() -> Tensor[(7, 8, 10), float32] {
  %690 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %690.0
}

def @func_3565() -> Tensor[(7, 8, 10), float32] {
  %691 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %691.0
}

def @func_801(%var_794: Tensor[(10, 7, 5), float32]) -> (Tensor[(10, 7, 5), float32],) {
  %692 = cast(%var_794, dtype="float32") /* ty=Tensor[(10, 7, 5), float32] */;
  %693 = atanh(%692) /* ty=Tensor[(10, 7, 5), float32] */;
  (%693,)
}

def @func_7679() -> Tensor[(7, 8, 10), float32] {
  @func_2585() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_11837() -> Tensor[(65, 11), float32] {
  %694 = @func_7650() /* ty=Tensor[(65, 11), float32] */;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  acosh(%695) /* ty=Tensor[(65, 11), float32] */
}

def @func_11654(%var_11605: Tensor[(1, 2, 4), float32], %var_11649: Tensor[(546), float32], %var_11652: Tensor[(630), int32]) -> (Tensor[(?, 2, 4), float64], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(7, 8, 10), float32], Tensor[(630), int32]) {
  %696 = cast(%var_11605, dtype="float32") /* ty=Tensor[(1, 2, 4), float32] */;
  %697 = sinh(%696) /* ty=Tensor[(1, 2, 4), float32] */;
  %698 = cast(%697, dtype="float64") /* ty=Tensor[(1, 2, 4), float64] */;
  %699 = shape_of(%var_11605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%var_11605, dtype="float64") /* ty=Tensor[(1, 2, 4), float64] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %702 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %703 = @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %704 = %703.1;
  %705 = cast(%704, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %706 = cast(%var_11649, dtype="float32") /* ty=Tensor[(546), float32] */;
  %707 = reshape(%706, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %708 = cast(%var_11652, dtype="int32") /* ty=Tensor[(630), int32] */;
  %709 = cast(%var_11652, dtype="int32") /* ty=Tensor[(630), int32] */;
  %710 = reshape(%708, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %711 = reshape(%709, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %712 = @func_8844(%710, %711) /* ty=(Tensor[(15, 3, 14), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %713 = mod(%700, %701) /* ty=Tensor[(?, 2, 4), float64] */;
  %714 = %702.1;
  %715 = acos(%705) /* ty=Tensor[(65, 11), float32] */;
  %716 = @func_5268() /* ty=Tensor[(7, 8, 10), float32] */;
  %717 = @func_607(%707) /* ty=Tensor[(14, 13, 3), float32] */;
  %718 = %712.1;
  (%713, %714, %715, %716, %717, %var_11649, %718, %var_11652)
}

def @func_11437() -> (Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) {
  %719 = @func_8088() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546, ?), int16], Tensor[(1, 858), uint8]) */;
  %720 = @func_7039() /* ty=Tensor[(7, 8, 10), uint8] */;
  %721 = %719.0;
  (%720, %721)
}

def @func_3418(%var_3407: Tensor[(65, 11), float32]) -> (Tensor[(65, 11), float64],) {
  %722 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %723 = %722.0;
  %724 = cast(%var_3407, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(2), int32] */;
  %726 = cast(%723, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %728 = divide(%726, %727) /* ty=Tensor[(65, 11), float64] */;
  (%728,)
}

def @func_3039(%var_3037: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(273, 2), float32]) {
  %729 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %730 = cast(%var_3037, dtype="float32") /* ty=Tensor[(273, 2), float32] */;
  %731 = reshape(%730, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %732 = %729.0;
  %733 = @func_607(%731) /* ty=Tensor[(14, 13, 3), float32] */;
  (%732, %733, %var_3037)
}

def @func_12886() -> (Tensor[(112), bool],) {
  %734 = @func_11454() /* ty=(Tensor[(112), bool],) */;
  %735 = %734.0;
  (%735,)
}

def @func_11279() -> (Tensor[(2, 15, 12), int64], Tensor[(8, 9, 9), uint8]) {
  %736 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %737 = %736.1;
  %738 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 15, 12), float64] */, dtype="int64") /* ty=Tensor[(2, 15, 12), int64] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="int64") /* ty=Tensor[(2, 15, 12), int64] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %742 = @func_6697() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */;
  %743 = left_shift(%740, %741) /* ty=Tensor[(2, 15, 12), int64] */;
  %744 = %742.2;
  (%743, %744)
}

def @func_709(%var_636: Tensor[(11, 6, 13), uint8], %var_637: Tensor[(11, 6, 13), uint8]) -> (Tensor[(11, 6, 13), uint8], Tensor[(11, 6, 13), bool], Tensor[(546, ?), int16], Tensor[(11, 6, 13), float32]) {
  %745 = cast(%var_637, dtype="uint8") /* ty=Tensor[(11, 6, 13), uint8] */;
  %746 = shape_of(%var_636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%var_636, dtype="uint8") /* ty=Tensor[(11, 6, 13), uint8] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %749 = cast(%var_637, dtype="bool") /* ty=Tensor[(11, 6, 13), bool] */;
  %750 = shape_of(%var_636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%var_636, dtype="bool") /* ty=Tensor[(11, 6, 13), bool] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %753 = cast(meta[relay.Constant][43] /* ty=Tensor[(546, 1), float32] */, dtype="float32") /* ty=Tensor[(546, 1), float32] */;
  %754 = cosh(%753) /* ty=Tensor[(546, 1), float32] */;
  %755 = cast(meta[relay.Constant][43] /* ty=Tensor[(546, 1), float32] */, dtype="float32") /* ty=Tensor[(546, 1), float32] */;
  %756 = reshape(%755, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %757 = @func_607(%756) /* ty=Tensor[(14, 13, 3), float32] */;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %759 = shape_of(%754, dtype="int32") /* ty=Tensor[(2), int32] */;
  %760 = cast(%754, dtype="float64") /* ty=Tensor[(546, 1), float64] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %762 = power(%760, %761) /* ty=Tensor[(546, ?), float64] */;
  %763 = cast(%754, dtype="bool") /* ty=Tensor[(546, 1), bool] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(2), int32] */;
  %765 = cast(%762, dtype="bool") /* ty=Tensor[(546, ?), bool] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %767 = greater_equal(%765, %766) /* ty=Tensor[(546, ?), bool] */;
  %768 = cast(meta[relay.Constant][43] /* ty=Tensor[(546, 1), float32] */, dtype="int16") /* ty=Tensor[(546, 1), int16] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(2), int32] */;
  %770 = cast(%767, dtype="int16") /* ty=Tensor[(546, ?), int16] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %772 = cast(%var_636, dtype="float32") /* ty=Tensor[(11, 6, 13), float32] */;
  %773 = multiply(%747, %748) /* ty=Tensor[(11, 6, 13), uint8] */;
  %774 = less(%751, %752) /* ty=Tensor[(11, 6, 13), bool] */;
  %775 = subtract(%770, %771) /* ty=Tensor[(546, ?), int16] */;
  %776 = atanh(%772) /* ty=Tensor[(11, 6, 13), float32] */;
  (%773, %774, %775, %776)
}

def @func_2411() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %777 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %778 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %779 = %777.0;
  %780 = %778.0;
  (%779, %780)
}

def @func_7920() -> (Tensor[(7, 8, 10), float32],) {
  %781 = @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */;
  %782 = %781.1;
  (%782,)
}

def @func_4922(%var_4911: Tensor[(14, 13, 3), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(715), float64], Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float64]) {
  %783 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %784 = cast(meta[relay.Constant][44] /* ty=Tensor[(715), float64] */, dtype="float64") /* ty=Tensor[(715), float64] */;
  %785 = reshape(%784, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float64] */;
  %786 = @func_1462(%785) /* ty=(Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) */;
  %787 = %786.2;
  %788 = cast(%var_4911, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %789 = shape_of(%787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %790 = cast(%787, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %792 = %783.1;
  %793 = @func_3241() /* ty=Tensor[(7, 8, 10), float32] */;
  %794 = floor_divide(%790, %791) /* ty=Tensor[(14, 13, 3), float64] */;
  (%792, meta[relay.Constant][44] /* ty=Tensor[(715), float64] */, %793, %794)
}

def @func_2653() -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) {
  %795 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %796 = cast(meta[relay.Constant][45] /* ty=Tensor[(65, 11), float64] */, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %797 = reshape(%796, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float64] */;
  %798 = @func_1462(%797) /* ty=(Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) */;
  %799 = cast(meta[relay.Constant][46] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %800 = reshape(%799, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float32] */;
  %801 = @func_801(%800) /* ty=(Tensor[(10, 7, 5), float32],) */;
  %802 = %795.0;
  %803 = %798.0;
  %804 = %801.0;
  (%802, %803, meta[relay.Constant][45] /* ty=Tensor[(65, 11), float64] */, %804, meta[relay.Constant][46] /* ty=Tensor[(350), float32] */)
}

def @func_11134() -> (Tensor[(112), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float64]) {
  %805 = @func_9355() /* ty=(Tensor[(65, 11), float64],) */;
  %806 = @func_6889() /* ty=Tensor[(112), float32] */;
  %807 = @func_8589() /* ty=Tensor[(2, 15, 12), float64] */;
  %808 = %805.0;
  (%806, %807, %808)
}

def @func_13221() -> (Tensor[(7, 8, 10), float32],) {
  %809 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %810 = %809.0;
  (%810,)
}

def @func_12673(%var_12668: Tensor[(12, 8, 3), float64]) -> Tensor[(12, 8, 3), float64] {
  %811 = cast(%var_12668, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  log2(%811) /* ty=Tensor[(12, 8, 3), float64] */
}

def @func_5086() -> (Tensor[(7, 8, 10), float32],) {
  %812 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %813 = %812.0;
  (%813,)
}

def @func_4296() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) {
  %814 = @func_3401() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %815 = %814.0;
  %816 = cast(%815, dtype="float32") /* ty=Tensor[(7, 8, 10), float32] */;
  %817 = reshape(%816, newshape=[7, 8, 10]) /* ty=Tensor[(7, 8, 10), float32] */;
  %818 = @func_3799(%817) /* ty=Tensor[(7, 8, 10), uint8] */;
  %819 = @func_3831() /* ty=Tensor[(7, 8, 10), float32] */;
  (%815, %818, %819)
}

def @func_3194() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %820 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  %821 = @func_2826() /* ty=Tensor[(7, 8, 10), float32] */;
  (%820, %821)
}

def @func_11014() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8], Tensor[(1, 715), float64]) {
  %822 = @func_8093() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %823 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 715), float64] */, dtype="float64") /* ty=Tensor[(1, 715), float64] */;
  %824 = reshape(%823, newshape=[65, 11]) /* ty=Tensor[(65, 11), float64] */;
  %825 = %822.0;
  %826 = @func_9739(%824) /* ty=Tensor[(65, 11), int8] */;
  (%825, %826, meta[relay.Constant][47] /* ty=Tensor[(1, 715), float64] */)
}

def @func_6408() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %827 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %828 = @func_4882() /* ty=Tensor[(65, 11), float32] */;
  %829 = cast(%828, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %830 = cast(%828, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %831 = reshape(%830, newshape=[65, 11]) /* ty=Tensor[(65, 11), float64] */;
  %832 = @func_6341(%831) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(65, 11), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8]) */;
  %833 = %827.0;
  %834 = cosh(%829) /* ty=Tensor[(65, 11), float64] */;
  %835 = @func_2876() /* ty=Tensor[(7, 8, 10), float32] */;
  %836 = %832.0;
  (%833, %834, %835, %836)
}

def @func_11591() -> (Tensor[(7, 8, 10), float32],) {
  %837 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
  (%837,)
}

def @func_7222() -> Tensor[(65, 11), float64] {
  %838 = @func_6734() /* ty=(Tensor[(65, 11), float64], Tensor[(11, 5, 13), int8]) */;
  %838.0
}

def @func_5069() -> (Tensor[(7, 8, 10), float32],) {
  %839 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %840 = %839.0;
  (%840,)
}

def @func_6161() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) {
  %841 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %842 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %843 = %841.0;
  %844 = %842.1;
  (%843, %844)
}

def @func_13014(%var_13004: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(360), float64]) {
  %845 = @func_11437() /* ty=(Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */;
  %846 = cast(%var_13004, dtype="float64") /* ty=Tensor[(360), float64] */;
  %847 = reshape(%846, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
  %848 = @func_12694(%847) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(6, 60), float64]) */;
  %849 = %845.1;
  %850 = %848.0;
  (%849, %850, %var_13004)
}

def @func_4983() -> (Tensor[(65, 11), float32],) {
  %851 = @func_4882() /* ty=Tensor[(65, 11), float32] */;
  (%851,)
}

def @func_10335() -> Tensor[(7, 8, 10), float32] {
  @func_8612() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_2504(%var_2492: Tensor[(1, 630), float64], %var_2494: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(1, 630), float64], int64, Tensor[(546), float32]) {
  %852 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %853 = cast(%var_2492, dtype="float64") /* ty=Tensor[(1, 630), float64] */;
  %854 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %855 = cast(%var_2494, dtype="float32") /* ty=Tensor[(546), float32] */;
  %856 = reshape(%853, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float64] */;
  %857 = reshape(%854, newshape=[]) /* ty=int64 */;
  %858 = reshape(%855, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %859 = @func_1369(%856, %857, %858) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */;
  %860 = %852.0;
  %861 = %859.4;
  (%860, %861, %var_2492, -1 /* ty=int64 */, %var_2494)
}

def @func_8049(%var_8032: Tensor[(2, 15, 12), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) {
  %862 = @func_5323() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %863 = @func_4722() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */;
  %864 = %863.0;
  %865 = cast(%var_8032, dtype="int32") /* ty=Tensor[(2, 15, 12), int32] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%864, dtype="int32") /* ty=Tensor[(2, 15, 12), int32] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %869 = logical_xor(%867, %868) /* ty=Tensor[(2, 15, 12), int32] */;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  %871 = @func_7827() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %872 = %862.0;
  %873 = atan(%870) /* ty=Tensor[(2, 15, 12), float64] */;
  %874 = %871.0;
  (%872, %873, %874)
}

def @func_7650() -> Tensor[(65, 11), float32] {
  @func_4425() /* ty=Tensor[(65, 11), float32] */
}

def @func_7558(%var_7537: int64, %var_7538: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) {
  %875 = @func_5069() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %876 = cast(%var_7537, dtype="int64") /* ty=int64 */;
  %877 = cast(%var_7538, dtype="float32") /* ty=Tensor[(273, 2), float32] */;
  %878 = reshape(%876, newshape=[]) /* ty=int64 */;
  %879 = reshape(%877, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
  %880 = @func_3623(%878, %879) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) */;
  %881 = %875.0;
  %882 = %880.2;
  (%881, %882, %var_7537, %var_7538)
}

def @func_10290(%var_10285: Tensor[(432), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(9, 16, 3), float64], Tensor[(432), float64], Tensor[(7, 8, 10), float32]) {
  %883 = cast(%var_10285, dtype="float64") /* ty=Tensor[(432), float64] */;
  %884 = reshape(%883, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), float64] */;
  %885 = @func_10220() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %886 = @func_2851() /* ty=Tensor[(7, 8, 10), float32] */;
  %887 = @func_6363(%884) /* ty=Tensor[(9, 16, 3), float64] */;
  %888 = %885.1;
  (%886, %887, %var_10285, %888)
}

def @func_7039() -> Tensor[(7, 8, 10), uint8] {
  %889 = @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */;
  %889.2
}

def @func_10934() -> (Tensor[(7, 8, 10), float32],) {
  %890 = @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %891 = %890.0;
  (%891,)
}

def @func_8844(%var_8803: Tensor[(15, 3, 14), int32], %var_8804: Tensor[(15, 3, 14), int32]) -> (Tensor[(15, 3, 14), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %892 = cast(%var_8804, dtype="int32") /* ty=Tensor[(15, 3, 14), int32] */;
  %893 = shape_of(%var_8803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %894 = cast(%var_8803, dtype="int32") /* ty=Tensor[(15, 3, 14), int32] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %896 = @func_3112() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %897 = bitwise_and(%894, %895) /* ty=Tensor[(15, 3, 14), int32] */;
  %898 = %896.0;
  %899 = @func_6650() /* ty=Tensor[(7, 8, 10), float32] */;
  (%897, %898, %899)
}

def @func_5892() -> (Tensor[(7, 8, 10), uint8],) {
  %900 = @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */;
  %901 = %900.2;
  (%901,)
}

def @func_7200() -> (Tensor[(7, 8, 10), float32],) {
  %902 = @func_5881() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %903 = %902.0;
  (%903,)
}

def @func_6697() -> (Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) {
  %904 = @func_3866() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) */;
  %905 = cast(-5.2426f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %906 = reshape(%905, newshape=[]) /* ty=float32 */;
  %907 = @func_5509(%906) /* ty=(Tensor[(1, 9, 9), float32], Tensor[(1, 9, 9), float64]) */;
  %908 = %907.1;
  %909 = cast(%908, dtype="uint8") /* ty=Tensor[(1, 9, 9), uint8] */;
  %910 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 9, 9), float64] */, dtype="uint8") /* ty=Tensor[(8, 9, 9), uint8] */;
  %911 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %912 = %904.3;
  %913 = bitwise_and(%909, %910) /* ty=Tensor[(8, 9, 9), uint8] */;
  %914 = %911.0;
  (%912, -5.2426f /* ty=float32 */, %913, %914)
}

def @func_10069(%var_10058: Tensor[(11, 2, 14), float64]) -> Tensor[(11, 2, 14), float64] {
  %915 = cast(%var_10058, dtype="float64") /* ty=Tensor[(11, 2, 14), float64] */;
  %916 = cos(%915) /* ty=Tensor[(11, 2, 14), float64] */;
  %917 = cast(%var_10058, dtype="float64") /* ty=Tensor[(11, 2, 14), float64] */;
  %918 = shape_of(%916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%916, dtype="float64") /* ty=Tensor[(11, 2, 14), float64] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%919, %920) /* ty=Tensor[(11, 2, 14), float64] */
}

def @func_12656() -> (Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(1008), int8], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) {
  %921 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %922 = cast(meta[relay.Constant][49] /* ty=Tensor[(1008), int8] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %923 = reshape(%922, newshape=[1008]) /* ty=Tensor[(1008), int8] */;
  %924 = @func_8895(%923) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) */;
  %925 = @func_9514() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32]) */;
  %926 = %921.0;
  %927 = %924.0;
  %928 = @func_8766() /* ty=Tensor[(65, 11), float32] */;
  %929 = %925.0;
  (%926, %927, meta[relay.Constant][49] /* ty=Tensor[(1008), int8] */, %928, %929)
}

def @func_8093() -> (Tensor[(7, 8, 10), float32],) {
  %930 = @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %931 = %930.0;
  (%931,)
}

def @func_7827() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %932 = @func_5756() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %933 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %934 = %932.0;
  %935 = %933.0;
  (%934, %935)
}

def @func_8766() -> Tensor[(65, 11), float32] {
  %936 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %936.0
}

def @func_6889() -> Tensor[(112), float32] {
  %937 = @func_4722() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */;
  %937.3
}

def @func_3241() -> Tensor[(7, 8, 10), float32] {
  @func_2585() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_8950() -> (Tensor[(65, 11), float32],) {
  %938 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %939 = %938.0;
  (%939,)
}

def @func_3831() -> Tensor[(7, 8, 10), float32] {
  %940 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %940.0
}

def @func_5694() -> Tensor[(65, 11), float32] {
  @func_4425() /* ty=Tensor[(65, 11), float32] */
}

def @func_5243() -> (Tensor[(65, 11), float32],) {
  %941 = @func_4425() /* ty=Tensor[(65, 11), float32] */;
  (%941,)
}

def @func_7574() -> Tensor[(7, 8, 10), float32] {
  @func_3241() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_7699() -> (Tensor[(7, 8, 10), float64], Tensor[(7, 8, 10), float32], Tensor[(112), float32]) {
  %942 = @func_5069() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %943 = %942.0;
  %944 = cast(%943, dtype="float64") /* ty=Tensor[(7, 8, 10), float64] */;
  %945 = log2(%944) /* ty=Tensor[(7, 8, 10), float64] */;
  %946 = @func_2876() /* ty=Tensor[(7, 8, 10), float32] */;
  %947 = @func_6889() /* ty=Tensor[(112), float32] */;
  (%945, %946, %947)
}

def @func_3799(%var_3793: Tensor[(7, 8, 10), float32]) -> Tensor[(7, 8, 10), uint8] {
  %948 = @func_2658() /* ty=Tensor[(7, 8, 10), float32] */;
  %949 = cast(%var_3793, dtype="uint8") /* ty=Tensor[(7, 8, 10), uint8] */;
  %950 = shape_of(%948, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%948, dtype="uint8") /* ty=Tensor[(7, 8, 10), uint8] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%951, %952) /* ty=Tensor[(7, 8, 10), uint8] */
}

def @func_11301() -> Tensor[(7, 8, 10), float32] {
  %953 = @func_10770() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %953.0
}

def @func_8228() -> (Tensor[(65, 11), float32],) {
  %954 = @func_6532() /* ty=Tensor[(65, 11), float32] */;
  %955 = cast(%954, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %956 = log10(%955) /* ty=Tensor[(65, 11), float32] */;
  (%956,)
}

def @func_5407() -> Tensor[(7, 8, 10), float32] {
  %957 = @func_3401() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %957.0
}

def @func_12348() -> (Tensor[(4, 14, 2), float32], Tensor[(4, 8, 546), float64], Tensor[(32), int16], Tensor[(352), int16], Tensor[(546), float32]) {
  %958 = @func_11039() /* ty=(Tensor[(4, 14, 2), float32],) */;
  %959 = cast(meta[relay.Constant][50] /* ty=Tensor[(32), int16] */, dtype="int16") /* ty=Tensor[(32), int16] */;
  %960 = cast(meta[relay.Constant][51] /* ty=Tensor[(352), int16] */, dtype="int16") /* ty=Tensor[(352), int16] */;
  %961 = cast(meta[relay.Constant][52] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %962 = reshape(%959, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), int16] */;
  %963 = reshape(%960, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), int16] */;
  %964 = reshape(%961, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %965 = @func_4669(%962, %963, %964) /* ty=(Tensor[(4, 8, 11), int16], Tensor[(7, 8, 10), float32], Tensor[(630), float64], Tensor[(4, 8, 546), float64]) */;
  %966 = %958.0;
  %967 = %965.3;
  (%966, %967, meta[relay.Constant][50] /* ty=Tensor[(32), int16] */, meta[relay.Constant][51] /* ty=Tensor[(352), int16] */, meta[relay.Constant][52] /* ty=Tensor[(546), float32] */)
}

def @func_2851() -> Tensor[(7, 8, 10), float32] {
  %968 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %968.0
}

def @func_6341(%var_6288: Tensor[(65, 11), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(65, 11), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8]) {
  %969 = @func_6080() /* ty=Tensor[(65, 11), float32] */;
  %970 = cast(%969, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %971 = log2(%970) /* ty=Tensor[(65, 11), float64] */;
  %972 = cast(%971, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %973 = atanh(%972) /* ty=Tensor[(65, 11), float64] */;
  %974 = cast(%973, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %975 = sin(%974) /* ty=Tensor[(65, 11), float64] */;
  %976 = cast(%var_6288, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
  %977 = shape_of(%975, dtype="int32") /* ty=Tensor[(2), int32] */;
  %978 = cast(%975, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %980 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %981 = cast(%971, dtype="int8") /* ty=Tensor[(65, 11), int8] */;
  %982 = shape_of(%973, dtype="int32") /* ty=Tensor[(2), int32] */;
  %983 = cast(%973, dtype="int8") /* ty=Tensor[(65, 11), int8] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %985 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  %986 = @func_4425() /* ty=Tensor[(65, 11), float32] */;
  %987 = left_shift(%978, %979) /* ty=Tensor[(65, 11), int32] */;
  %988 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
  %989 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
  %990 = %980.1;
  %991 = bitwise_or(%983, %984) /* ty=Tensor[(65, 11), int8] */;
  (%985, %986, %987, %988, %989, %990, %991)
}

def @func_8552(%var_8513: float64, %var_8514: Tensor[(15, 11, 9), float64], %var_8533: Tensor[(12, 13, 15), uint64], %var_8544: Tensor[(112), float32]) -> (Tensor[(15, 11, 9), float64], Tensor[(1680), float64], Tensor[(12, 13, 15), int32], Tensor[(440, 2), float32], Tensor[(112), float32]) {
  %992 = cast(%var_8513, dtype="float64") /* ty=float64 */;
  %993 = cast(%var_8514, dtype="float64") /* ty=Tensor[(15, 11, 9), float64] */;
  %994 = cast(meta[relay.Constant][53] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %995 = cast(meta[relay.Constant][53] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %996 = cast(%var_8513, dtype="uint64") /* ty=uint64 */;
  %997 = reshape(%994, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %998 = reshape(%995, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %999 = reshape(%996, newshape=[]) /* ty=uint64 */;
  %1000 = @func_3748(%997, %998, %999) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64]) */;
  %1001 = %1000.2;
  %1002 = cast(%1001, dtype="int32") /* ty=int32 */;
  %1003 = cast(%var_8533, dtype="int32") /* ty=Tensor[(12, 13, 15), int32] */;
  %1004 = cast(%var_8513, dtype="uint64") /* ty=uint64 */;
  %1005 = cast(%var_8544, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1006 = reshape(%1004, newshape=[]) /* ty=uint64 */;
  %1007 = reshape(%1005, newshape=[112]) /* ty=Tensor[(112), float32] */;
  %1008 = @func_4516(%1006, %1007) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(440, 2), float32], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(11, 16, 5), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %1009 = add(%992, %993) /* ty=Tensor[(15, 11, 9), float64] */;
  %1010 = minimum(%1002, %1003) /* ty=Tensor[(12, 13, 15), int32] */;
  %1011 = %1008.2;
  (%1009, meta[relay.Constant][53] /* ty=Tensor[(1680), float64] */, %1010, %1011, %var_8544)
}

def @func_10164() -> (Tensor[(7, 8, 10), float32],) {
  %1012 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_2788() -> (Tensor[(65, 11), float32], Tensor[(65, 11), float64]) {
  %1014 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %1015 = %1014.2;
  %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %1017 = cast(%1015, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %1018 = exp(%1016) /* ty=Tensor[(65, 11), float32] */;
  %1019 = asinh(%1017) /* ty=Tensor[(65, 11), float64] */;
  (%1018, %1019)
}

def @func_9355() -> (Tensor[(65, 11), float64],) {
  %1020 = @func_7043() /* ty=Tensor[(65, 11), float64] */;
  (%1020,)
}

def @func_12514() -> (Tensor[(350), float32], Tensor[(4, 14, 2), float32], Tensor[(7, 8, 10), uint8]) {
  %1021 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %1022 = @func_9441() /* ty=Tensor[(350), float32] */;
  %1023 = %1021.1;
  %1024 = @func_7039() /* ty=Tensor[(7, 8, 10), uint8] */;
  (%1022, %1023, %1024)
}

def @func_10540() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %1025 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1026 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1027 = %1025.0;
  %1028 = %1026.0;
  (%1027, %1028)
}

def @func_9441() -> Tensor[(350), float32] {
  %1029 = @func_5210() /* ty=(Tensor[(350), float32], Tensor[(10, 7, 5), float32]) */;
  %1029.0
}

def @func_10044() -> (Tensor[(7, 8, 10), float32],) {
  %1030 = @func_8939() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1031 = %1030.0;
  (%1031,)
}

def @func_8939() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %1032 = @func_2658() /* ty=Tensor[(7, 8, 10), float32] */;
  %1033 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
  (%1032, %1033)
}

def @func_968(%var_961: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
  %1034 = cast(%var_961, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
  %1035 = log(%1034) /* ty=Tensor[(4, 14, 2), float32] */;
  (%1035,)
}

def @func_2826() -> Tensor[(7, 8, 10), float32] {
  %1036 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1036.1
}

def @func_9188() -> (Tensor[(360), float64],) {
  %1037 = @func_7400() /* ty=(Tensor[(360), float64],) */;
  %1038 = %1037.0;
  (%1038,)
}

def @func_12791() -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), int16], Tensor[(715), float32]) {
  %1039 = cast(meta[relay.Constant][54] /* ty=Tensor[(715), float32] */, dtype="float32") /* ty=Tensor[(715), float32] */;
  %1040 = cast(meta[relay.Constant][54] /* ty=Tensor[(715), float32] */, dtype="float32") /* ty=Tensor[(715), float32] */;
  %1041 = reshape(%1039, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %1042 = reshape(%1040, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %1043 = @func_2743(%1041, %1042) /* ty=(Tensor[(11, 5, 13), int16], Tensor[(11, 5, 13), int8]) */;
  %1044 = @func_7449() /* ty=Tensor[(7, 8, 10), float32] */;
  %1045 = %1043.0;
  (%1044, %1045, meta[relay.Constant][54] /* ty=Tensor[(715), float32] */)
}

def @func_5323() -> (Tensor[(7, 8, 10), float32],) {
  %1046 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  (%1046,)
}

def @func_12022(%var_11867: Tensor[(8, 11, 9), float64], %var_11868: Tensor[(8, 11, 9), float64]) -> (Tensor[(1, 112), float32], Tensor[(1, 180), float64], Tensor[(2, 56), float32], Tensor[(8, 11, 9), int16], Tensor[(8, 11, 9), bool], Tensor[(360), float64], Tensor[(350), float32], Tensor[(7, 8, 10), float32], Tensor[(8, 11, 9), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), uint64], Tensor[(13, 6, 2), float64], Tensor[(7, 8, 10), float32]) {
  %1047 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 180), float64] */, dtype="float64") /* ty=Tensor[(1, 180), float64] */;
  %1048 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 56), float32] */, dtype="float32") /* ty=Tensor[(2, 56), float32] */;
  %1049 = reshape(%1047, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
  %1050 = reshape(%1048, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
  %1051 = @func_2136(%1049, %1050) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
  %1052 = cast(%var_11868, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  %1053 = shape_of(%var_11867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(%var_11867, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1056 = divide(%1054, %1055) /* ty=Tensor[(8, 11, 9), float64] */;
  %1057 = cast(%1056, dtype="int16") /* ty=Tensor[(8, 11, 9), int16] */;
  %1058 = shape_of(%var_11867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(%var_11867, dtype="int16") /* ty=Tensor[(8, 11, 9), int16] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1061 = cast(%var_11868, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
  %1062 = shape_of(%1056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%1056, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1065 = @func_7400() /* ty=(Tensor[(360), float64],) */;
  %1066 = cast(%var_11868, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  %1067 = asin(%1066) /* ty=Tensor[(8, 11, 9), float64] */;
  %1068 = cast(%1067, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  %1069 = rsqrt(%1068) /* ty=Tensor[(8, 11, 9), float64] */;
  %1070 = cast(%1069, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
  %1071 = sin(%1070) /* ty=Tensor[(8, 11, 9), float32] */;
  %1072 = cast(%1071, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  %1073 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1074 = @func_7944() /* ty=Tensor[(65, 11), uint64] */;
  %1075 = cast(%1074, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %1076 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 180), float64] */, dtype="float64") /* ty=Tensor[(1, 180), float64] */;
  %1077 = reshape(%1075, newshape=[65, 11]) /* ty=Tensor[(65, 11), float64] */;
  %1078 = reshape(%1076, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %1079 = @func_7385(%1077, %1078) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(156), float64], Tensor[(65, 11), bool], Tensor[(4, 14, 2), float32], Tensor[(180), float64], Tensor[(112), float32], Tensor[(65, 11), float64]) */;
  %1080 = @func_10500() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) */;
  %1081 = %1051.2;
  %1082 = minimum(%1059, %1060) /* ty=Tensor[(8, 11, 9), int16] */;
  %1083 = less_equal(%1063, %1064) /* ty=Tensor[(8, 11, 9), bool] */;
  %1084 = %1065.0;
  %1085 = @func_9441() /* ty=Tensor[(350), float32] */;
  %1086 = @func_6650() /* ty=Tensor[(7, 8, 10), float32] */;
  %1087 = log(%1072) /* ty=Tensor[(8, 11, 9), float64] */;
  %1088 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
  %1089 = %1073.1;
  %1090 = %1079.0;
  %1091 = %1080.1;
  (%1081, meta[relay.Constant][55] /* ty=Tensor[(1, 180), float64] */, meta[relay.Constant][56] /* ty=Tensor[(2, 56), float32] */, %1082, %1083, %1084, %1085, %1086, %1087, %1088, %1089, %1074, %1090, %1091)
}

def @func_3401() -> (Tensor[(7, 8, 10), float32],) {
  %1092 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1093 = %1092.1;
  (%1093,)
}

def @func_4425() -> Tensor[(65, 11), float32] {
  %1094 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %1094.0
}

def @func_9633(%var_9623: Tensor[(8, 16, 12), float64], %var_9624: Tensor[(8, 16, 12), float64]) -> (Tensor[(8, 16, 12), float64],) {
  %1095 = cast(%var_9624, dtype="float64") /* ty=Tensor[(8, 16, 12), float64] */;
  %1096 = shape_of(%var_9623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1097 = cast(%var_9623, dtype="float64") /* ty=Tensor[(8, 16, 12), float64] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1099 = mod(%1097, %1098) /* ty=Tensor[(8, 16, 12), float64] */;
  (%1099,)
}

def @func_10770() -> (Tensor[(7, 8, 10), float32],) {
  %1100 = @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1101 = %1100.1;
  (%1101,)
}

def @func_10647() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %1102 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %1103 = @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */;
  %1104 = @func_9566() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %1105 = %1102.0;
  %1106 = @func_6080() /* ty=Tensor[(65, 11), float32] */;
  %1107 = %1103.2;
  %1108 = @func_9249() /* ty=Tensor[(7, 8, 10), float32] */;
  %1109 = %1104.0;
  (%1105, %1106, %1107, %1108, %1109)
}

def @func_12110() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %1110 = @func_8733() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1111 = %1110.2;
  %1112 = @func_10143() /* ty=Tensor[(7, 8, 10), float32] */;
  (%1111, %1112)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3866() -> (Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1 = reshape(%0, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
  %2 = @func_968(%1) /* ty=(Tensor[(4, 14, 2), float32],) */;
  %3 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %4 = @func_2851() /* ty=Tensor[(7, 8, 10), float32] */;
  %5 = %2.0;
  %6 = %3.0;
  (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(112), float32] */, %6)
}

def @func_10221() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %10 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
    %7 = @func_8733() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %8 = @func_9708() /* ty=Tensor[(7, 8, 10), float32] */;
    %9 = %7.1;
    (%8, %9)
  };
  %10() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_3196() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_7681() -> Tensor[(7, 8, 10), float32] {
  @func_7679() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_11502() -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32]) {
  %11 = @func_7028() /* ty=(Tensor[(11, 5, 13), float32],) */;
  %12 = @func_3831() /* ty=Tensor[(7, 8, 10), float32] */;
  %13 = %11.0;
  (%12, %13)
}

def @func_9874() -> Tensor[(7, 8, 10), float32] {
  @func_9872() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_3041(%var_3040: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(273, 2), float32]) {
  %19 = fn (%var_3037: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(273, 2), float32]) {
    %14 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %15 = cast(%var_3037, dtype="float32") /* ty=Tensor[(273, 2), float32] */;
    %16 = reshape(%15, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
    %17 = %14.0;
    %18 = @func_607(%16) /* ty=Tensor[(14, 13, 3), float32] */;
    (%17, %18, %var_3037)
  };
  %19(%var_3040) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(273, 2), float32]) */
}

def @func_9190() -> (Tensor[(360), float64],) {
  @func_9188() /* ty=(Tensor[(360), float64],) */
}

def @func_3016() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_10071(%var_10070: Tensor[(11, 2, 14), float64]) -> Tensor[(11, 2, 14), float64] {
  %26 = fn (%var_10058: Tensor[(11, 2, 14), float64]) -> Tensor[(11, 2, 14), float64] {
    %20 = cast(%var_10058, dtype="float64") /* ty=Tensor[(11, 2, 14), float64] */;
    %21 = cos(%20) /* ty=Tensor[(11, 2, 14), float64] */;
    %22 = cast(%var_10058, dtype="float64") /* ty=Tensor[(11, 2, 14), float64] */;
    %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(%21, dtype="float64") /* ty=Tensor[(11, 2, 14), float64] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%24, %25) /* ty=Tensor[(11, 2, 14), float64] */
  };
  %26(%var_10070) /* ty=Tensor[(11, 2, 14), float64] */
}

def @func_373(%var_336: Tensor[(2, 15, 12), float64]) -> (Tensor[(2, 15, 12), float64],) {
  %27 = cast(%var_336, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  %28 = sigmoid(%27) /* ty=Tensor[(2, 15, 12), float64] */;
  (%28,)
}

def @func_9514() -> (Tensor[(65, 11), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32]) {
  %29 = @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %30 = @func_5210() /* ty=(Tensor[(350), float32], Tensor[(10, 7, 5), float32]) */;
  %31 = @func_6198() /* ty=Tensor[(65, 11), float32] */;
  %32 = %29.1;
  %33 = %30.1;
  (%31, %32, %33)
}

def @func_4700() -> (Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
  %39 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
    %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %35 = reshape(%34, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
    %36 = @func_968(%35) /* ty=(Tensor[(4, 14, 2), float32],) */;
    %37 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
    %38 = %36.0;
    (%37, %38, meta[relay.Constant][1] /* ty=Tensor[(112), float32] */)
  };
  %39() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */
}

def @func_3304(%var_3303: Tensor[(429, 2), uint8]) -> (Tensor[(65, 11), float32], Tensor[(546, ?), int16], Tensor[(429, 2), float32]) {
  %50 = fn (%var_3291: Tensor[(429, 2), uint8]) -> (Tensor[(65, 11), float32], Tensor[(546, ?), int16], Tensor[(429, 2), float32]) {
    %40 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
    %41 = cast(%var_3291, dtype="uint8") /* ty=Tensor[(429, 2), uint8] */;
    %42 = cast(%var_3291, dtype="uint8") /* ty=Tensor[(429, 2), uint8] */;
    %43 = reshape(%41, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint8] */;
    %44 = reshape(%42, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint8] */;
    %45 = @func_709(%43, %44) /* ty=(Tensor[(11, 6, 13), uint8], Tensor[(11, 6, 13), bool], Tensor[(546, ?), int16], Tensor[(11, 6, 13), float32]) */;
    %46 = cast(%var_3291, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
    %47 = %40.0;
    %48 = %45.2;
    %49 = cos(%46) /* ty=Tensor[(429, 2), float32] */;
    (%47, %48, %49)
  };
  %50(%var_3303) /* ty=(Tensor[(65, 11), float32], Tensor[(546, ?), int16], Tensor[(429, 2), float32]) */
}

def @func_12025(%var_12023: Tensor[(8, 11, 9), float64], %var_12024: Tensor[(8, 11, 9), float64]) -> (Tensor[(1, 112), float32], Tensor[(1, 180), float64], Tensor[(2, 56), float32], Tensor[(8, 11, 9), int16], Tensor[(8, 11, 9), bool], Tensor[(360), float64], Tensor[(350), float32], Tensor[(7, 8, 10), float32], Tensor[(8, 11, 9), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), uint64], Tensor[(13, 6, 2), float64], Tensor[(7, 8, 10), float32]) {
  %96 = fn (%var_11867: Tensor[(8, 11, 9), float64], %var_11868: Tensor[(8, 11, 9), float64]) -> (Tensor[(1, 112), float32], Tensor[(1, 180), float64], Tensor[(2, 56), float32], Tensor[(8, 11, 9), int16], Tensor[(8, 11, 9), bool], Tensor[(360), float64], Tensor[(350), float32], Tensor[(7, 8, 10), float32], Tensor[(8, 11, 9), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), uint64], Tensor[(13, 6, 2), float64], Tensor[(7, 8, 10), float32]) {
    %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 180), float64] */, dtype="float64") /* ty=Tensor[(1, 180), float64] */;
    %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 56), float32] */, dtype="float32") /* ty=Tensor[(2, 56), float32] */;
    %53 = reshape(%51, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
    %54 = reshape(%52, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
    %55 = @func_2136(%53, %54) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
    %56 = cast(%var_11868, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
    %57 = shape_of(%var_11867, dtype="int32") /* ty=Tensor[(3), int32] */;
    %58 = cast(%var_11867, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %60 = divide(%58, %59) /* ty=Tensor[(8, 11, 9), float64] */;
    %61 = cast(%60, dtype="int16") /* ty=Tensor[(8, 11, 9), int16] */;
    %62 = shape_of(%var_11867, dtype="int32") /* ty=Tensor[(3), int32] */;
    %63 = cast(%var_11867, dtype="int16") /* ty=Tensor[(8, 11, 9), int16] */;
    %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %65 = cast(%var_11868, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
    %66 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%60, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %69 = @func_7400() /* ty=(Tensor[(360), float64],) */;
    %70 = cast(%var_11868, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
    %71 = asin(%70) /* ty=Tensor[(8, 11, 9), float64] */;
    %72 = cast(%71, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
    %73 = rsqrt(%72) /* ty=Tensor[(8, 11, 9), float64] */;
    %74 = cast(%73, dtype="float32") /* ty=Tensor[(8, 11, 9), float32] */;
    %75 = sin(%74) /* ty=Tensor[(8, 11, 9), float32] */;
    %76 = cast(%75, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
    %77 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %78 = @func_7944() /* ty=Tensor[(65, 11), uint64] */;
    %79 = cast(%78, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %80 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 180), float64] */, dtype="float64") /* ty=Tensor[(1, 180), float64] */;
    %81 = reshape(%79, newshape=[65, 11]) /* ty=Tensor[(65, 11), float64] */;
    %82 = reshape(%80, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %83 = @func_7385(%81, %82) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(156), float64], Tensor[(65, 11), bool], Tensor[(4, 14, 2), float32], Tensor[(180), float64], Tensor[(112), float32], Tensor[(65, 11), float64]) */;
    %84 = @func_10500() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) */;
    %85 = %55.2;
    %86 = minimum(%63, %64) /* ty=Tensor[(8, 11, 9), int16] */;
    %87 = less_equal(%67, %68) /* ty=Tensor[(8, 11, 9), bool] */;
    %88 = %69.0;
    %89 = @func_9441() /* ty=Tensor[(350), float32] */;
    %90 = @func_6650() /* ty=Tensor[(7, 8, 10), float32] */;
    %91 = log(%76) /* ty=Tensor[(8, 11, 9), float64] */;
    %92 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
    %93 = %77.1;
    %94 = %83.0;
    %95 = %84.1;
    (%85, meta[relay.Constant][2] /* ty=Tensor[(1, 180), float64] */, meta[relay.Constant][3] /* ty=Tensor[(2, 56), float32] */, %86, %87, %88, %89, %90, %91, %92, %93, %78, %94, %95)
  };
  %96(%var_12023, %var_12024) /* ty=(Tensor[(1, 112), float32], Tensor[(1, 180), float64], Tensor[(2, 56), float32], Tensor[(8, 11, 9), int16], Tensor[(8, 11, 9), bool], Tensor[(360), float64], Tensor[(350), float32], Tensor[(7, 8, 10), float32], Tensor[(8, 11, 9), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), uint64], Tensor[(13, 6, 2), float64], Tensor[(7, 8, 10), float32]) */
}

def @func_1464(%var_1463: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) {
  %111 = fn (%var_1423: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) {
    %97 = cast(%var_1423, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
    %98 = sinh(%97) /* ty=Tensor[(11, 5, 13), float64] */;
    %99 = cast(%98, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
    %100 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %101 = reshape(%100, newshape=[]) /* ty=int64 */;
    %102 = @func_1207(%101) /* ty=(Tensor[(11, 1, 6), int64],) */;
    %103 = %102.0;
    %104 = cast(-10 /* ty=int64 */, dtype="bool") /* ty=bool */;
    %105 = cast(%103, dtype="bool") /* ty=Tensor[(11, 1, 6), bool] */;
    %106 = cast(meta[relay.Constant][4] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %107 = reshape(%106, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
    %108 = sigmoid(%99) /* ty=Tensor[(11, 5, 13), float32] */;
    %109 = logical_or(%104, %105) /* ty=Tensor[(11, 1, 6), bool] */;
    %110 = @func_607(%107) /* ty=Tensor[(14, 13, 3), float32] */;
    (%108, %109, %110, meta[relay.Constant][4] /* ty=Tensor[(546), float32] */)
  };
  %111(%var_1463) /* ty=(Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) */
}

def @func_7921() -> (Tensor[(7, 8, 10), float32],) {
  %114 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %112 = @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */;
    %113 = %112.1;
    (%113,)
  };
  %114() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_3401() -> (Tensor[(7, 8, 10), float32],) {
  %115 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %116 = %115.1;
  (%116,)
}

def @func_6899() -> Tensor[(4, 14, 2), float32] {
  %118 = fn () -> Tensor[(4, 14, 2), float32] {
    %117 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
    %117.1
  };
  %118() /* ty=Tensor[(4, 14, 2), float32] */
}

def @func_9636(%var_9634: Tensor[(8, 16, 12), float64], %var_9635: Tensor[(8, 16, 12), float64]) -> (Tensor[(8, 16, 12), float64],) {
  %124 = fn (%var_9623: Tensor[(8, 16, 12), float64], %var_9624: Tensor[(8, 16, 12), float64]) -> (Tensor[(8, 16, 12), float64],) {
    %119 = cast(%var_9624, dtype="float64") /* ty=Tensor[(8, 16, 12), float64] */;
    %120 = shape_of(%var_9623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %121 = cast(%var_9623, dtype="float64") /* ty=Tensor[(8, 16, 12), float64] */;
    %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %123 = mod(%121, %122) /* ty=Tensor[(8, 16, 12), float64] */;
    (%123,)
  };
  %124(%var_9634, %var_9635) /* ty=(Tensor[(8, 16, 12), float64],) */
}

def @func_3403() -> (Tensor[(7, 8, 10), float32],) {
  @func_3401() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_12580(%var_12579: Tensor[(2, 15, 12), float64]) -> Tensor[(2, 15, 12), float64] {
  %131 = fn (%var_12555: Tensor[(2, 15, 12), float64]) -> Tensor[(2, 15, 12), float64] {
    %125 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
    %126 = %125.1;
    %127 = cast(%var_12555, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
    %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
    %129 = cast(%126, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
    %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%129, %130) /* ty=Tensor[(2, 15, 12), float64] */
  };
  %131(%var_12579) /* ty=Tensor[(2, 15, 12), float64] */
}

def @func_5893() -> (Tensor[(7, 8, 10), uint8],) {
  %134 = fn () -> (Tensor[(7, 8, 10), uint8],) {
    %132 = @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */;
    %133 = %132.2;
    (%133,)
  };
  %134() /* ty=(Tensor[(7, 8, 10), uint8],) */
}

def @func_12696(%var_12695: Tensor[(6, 60), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(6, 60), float64]) {
  %141 = fn (%var_12690: Tensor[(6, 60), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(6, 60), float64]) {
    %135 = @func_7200() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %136 = cast(%var_12690, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
    %137 = reshape(%136, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float64] */;
    %138 = @func_8049(%137) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) */;
    %139 = %135.0;
    %140 = %138.0;
    (%139, %140, %var_12690)
  };
  %141(%var_12695) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(6, 60), float64]) */
}

def @func_8051(%var_8050: Tensor[(2, 15, 12), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) {
  %155 = fn (%var_8032: Tensor[(2, 15, 12), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) {
    %142 = @func_5323() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %143 = @func_4722() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */;
    %144 = %143.0;
    %145 = cast(%var_8032, dtype="int32") /* ty=Tensor[(2, 15, 12), int32] */;
    %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%144, dtype="int32") /* ty=Tensor[(2, 15, 12), int32] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %149 = logical_xor(%147, %148) /* ty=Tensor[(2, 15, 12), int32] */;
    %150 = cast(%149, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
    %151 = @func_7827() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %152 = %142.0;
    %153 = atan(%150) /* ty=Tensor[(2, 15, 12), float64] */;
    %154 = %151.0;
    (%152, %153, %154)
  };
  %155(%var_8050) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) */
}

def @func_5374(%var_5373: Tensor[(180, 1), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(1, 112), float32], Tensor[(180, 1), float64], Tensor[(4, 28), float32]) {
  %163 = fn (%var_5355: Tensor[(180, 1), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(1, 112), float32], Tensor[(180, 1), float64], Tensor[(4, 28), float32]) {
    %156 = cast(%var_5355, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %157 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 28), float32] */, dtype="float32") /* ty=Tensor[(4, 28), float32] */;
    %158 = reshape(%156, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
    %159 = reshape(%157, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
    %160 = @func_2136(%158, %159) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
    %161 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
    %162 = %160.2;
    (%161, %162, %var_5355, meta[relay.Constant][5] /* ty=Tensor[(4, 28), float32] */)
  };
  %163(%var_5373) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(1, 112), float32], Tensor[(180, 1), float64], Tensor[(4, 28), float32]) */
}

def @func_8372() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(112), bool]) {
  %164 = @func_7200() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %165 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %166 = %165.1;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  %168 = reshape(%167, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %169 = @func_5861(%168) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float32]) */;
  %170 = @func_5881() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %171 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %172 = @func_7699() /* ty=(Tensor[(7, 8, 10), float64], Tensor[(7, 8, 10), float32], Tensor[(112), float32]) */;
  %173 = %172.2;
  %174 = cast(meta[relay.Constant][6] /* ty=Tensor[(112), float32] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(1), int32] */;
  %176 = cast(%173, dtype="bool") /* ty=Tensor[(112), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?), bool] */;
  %178 = %164.0;
  %179 = @func_7679() /* ty=Tensor[(7, 8, 10), float32] */;
  %180 = @func_7574() /* ty=Tensor[(7, 8, 10), float32] */;
  %181 = %169.8;
  %182 = %170.0;
  %183 = %171.0;
  %184 = less(%176, %177) /* ty=Tensor[(112), bool] */;
  (%178, %179, %180, %166, %181, %182, %183, %184)
}

def @func_8958() -> (Tensor[(65, 11), float32],) {
  %185 = @func_6532() /* ty=Tensor[(65, 11), float32] */;
  (%185,)
}

def @func_13545() -> (Tensor[(7, 8, 10), float32], Tensor[(10, 7, 5), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) {
  %186 = @func_5210() /* ty=(Tensor[(350), float32], Tensor[(10, 7, 5), float32]) */;
  %187 = cast(meta[relay.Constant][7] /* ty=Tensor[(1008), int8] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %188 = reshape(%187, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int8] */;
  %189 = @func_2422(%188) /* ty=(Tensor[(7, 9, 16), int8],) */;
  %190 = @func_7679() /* ty=Tensor[(7, 8, 10), float32] */;
  %191 = %186.1;
  %192 = %189.0;
  (%190, %191, %192, meta[relay.Constant][7] /* ty=Tensor[(1008), int8] */)
}

def @func_13222() -> (Tensor[(7, 8, 10), float32],) {
  %195 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %193 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
    %194 = %193.0;
    (%194,)
  };
  %195() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_10935() -> (Tensor[(7, 8, 10), float32],) {
  %198 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %196 = @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %197 = %196.0;
    (%197,)
  };
  %198() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_3194() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %199 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  %200 = @func_2826() /* ty=Tensor[(7, 8, 10), float32] */;
  (%199, %200)
}

def @func_4639() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) {
  %201 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %202 = @func_4296() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */;
  %203 = @func_4296() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */;
  %204 = %201.0;
  %205 = %202.2;
  %206 = %203.1;
  (%204, %205, %206)
}

def @func_12484() -> Tensor[(65, 11), float32] {
  %207 = @func_8958() /* ty=(Tensor[(65, 11), float32],) */;
  %207.0
}

def @func_10145() -> Tensor[(7, 8, 10), float32] {
  @func_10143() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_712(%var_710: Tensor[(11, 6, 13), uint8], %var_711: Tensor[(11, 6, 13), uint8]) -> (Tensor[(11, 6, 13), uint8], Tensor[(11, 6, 13), bool], Tensor[(546, ?), int16], Tensor[(11, 6, 13), float32]) {
  %240 = fn (%var_636: Tensor[(11, 6, 13), uint8], %var_637: Tensor[(11, 6, 13), uint8]) -> (Tensor[(11, 6, 13), uint8], Tensor[(11, 6, 13), bool], Tensor[(546, ?), int16], Tensor[(11, 6, 13), float32]) {
    %208 = cast(%var_637, dtype="uint8") /* ty=Tensor[(11, 6, 13), uint8] */;
    %209 = shape_of(%var_636, dtype="int32") /* ty=Tensor[(3), int32] */;
    %210 = cast(%var_636, dtype="uint8") /* ty=Tensor[(11, 6, 13), uint8] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %212 = cast(%var_637, dtype="bool") /* ty=Tensor[(11, 6, 13), bool] */;
    %213 = shape_of(%var_636, dtype="int32") /* ty=Tensor[(3), int32] */;
    %214 = cast(%var_636, dtype="bool") /* ty=Tensor[(11, 6, 13), bool] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %216 = cast(meta[relay.Constant][8] /* ty=Tensor[(546, 1), float32] */, dtype="float32") /* ty=Tensor[(546, 1), float32] */;
    %217 = cosh(%216) /* ty=Tensor[(546, 1), float32] */;
    %218 = cast(meta[relay.Constant][8] /* ty=Tensor[(546, 1), float32] */, dtype="float32") /* ty=Tensor[(546, 1), float32] */;
    %219 = reshape(%218, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
    %220 = @func_607(%219) /* ty=Tensor[(14, 13, 3), float32] */;
    %221 = cast(%220, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
    %222 = shape_of(%217, dtype="int32") /* ty=Tensor[(2), int32] */;
    %223 = cast(%217, dtype="float64") /* ty=Tensor[(546, 1), float64] */;
    %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %225 = power(%223, %224) /* ty=Tensor[(546, ?), float64] */;
    %226 = cast(%217, dtype="bool") /* ty=Tensor[(546, 1), bool] */;
    %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(2), int32] */;
    %228 = cast(%225, dtype="bool") /* ty=Tensor[(546, ?), bool] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %230 = greater_equal(%228, %229) /* ty=Tensor[(546, ?), bool] */;
    %231 = cast(meta[relay.Constant][8] /* ty=Tensor[(546, 1), float32] */, dtype="int16") /* ty=Tensor[(546, 1), int16] */;
    %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(2), int32] */;
    %233 = cast(%230, dtype="int16") /* ty=Tensor[(546, ?), int16] */;
    %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %235 = cast(%var_636, dtype="float32") /* ty=Tensor[(11, 6, 13), float32] */;
    %236 = multiply(%210, %211) /* ty=Tensor[(11, 6, 13), uint8] */;
    %237 = less(%214, %215) /* ty=Tensor[(11, 6, 13), bool] */;
    %238 = subtract(%233, %234) /* ty=Tensor[(546, ?), int16] */;
    %239 = atanh(%235) /* ty=Tensor[(11, 6, 13), float32] */;
    (%236, %237, %238, %239)
  };
  %240(%var_710, %var_711) /* ty=(Tensor[(11, 6, 13), uint8], Tensor[(11, 6, 13), bool], Tensor[(546, ?), int16], Tensor[(11, 6, 13), float32]) */
}

def @func_2359() -> (Tensor[(7, 8, 10), float32],) {
  %241 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 10), float32] */;
  %242 = cosh(%241) /* ty=Tensor[(7, 8, 10), float32] */;
  (%242,)
}

def @func_4296() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) {
  %243 = @func_3401() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %244 = %243.0;
  %245 = cast(%244, dtype="float32") /* ty=Tensor[(7, 8, 10), float32] */;
  %246 = reshape(%245, newshape=[7, 8, 10]) /* ty=Tensor[(7, 8, 10), float32] */;
  %247 = @func_3799(%246) /* ty=Tensor[(7, 8, 10), uint8] */;
  %248 = @func_3831() /* ty=Tensor[(7, 8, 10), float32] */;
  (%244, %247, %248)
}

def @func_11757(%var_11755: Tensor[(1536), float64]) -> (Tensor[(2, 15, 12), int64], Tensor[(7, 8, 10), float32], int64, Tensor[(1536), float64]) {
  @func_11754(%var_11755) /* ty=(Tensor[(2, 15, 12), int64], Tensor[(7, 8, 10), float32], int64, Tensor[(1536), float64]) */
}

def @func_6734() -> (Tensor[(65, 11), float64], Tensor[(11, 5, 13), int8]) {
  %249 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %250 = %249.1;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %252 = cast(%250, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  %253 = reshape(%251, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %254 = reshape(%252, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
  %255 = @func_2743(%253, %254) /* ty=(Tensor[(11, 5, 13), int16], Tensor[(11, 5, 13), int8]) */;
  %256 = %255.1;
  (%250, %256)
}

def @func_7401() -> (Tensor[(360), float64],) {
  %259 = fn () -> (Tensor[(360), float64],) {
    %257 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
    %258 = %257.2;
    (%258,)
  };
  %259() /* ty=(Tensor[(360), float64],) */
}

def @func_7679() -> Tensor[(7, 8, 10), float32] {
  @func_2585() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_12486() -> Tensor[(65, 11), float32] {
  @func_12484() /* ty=Tensor[(65, 11), float32] */
}

def @func_9802(%var_9800: int64, %var_9801: Tensor[(1536), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(91, 6), float32], Tensor[(8, 16, 12), float64], Tensor[(1536), float64], Tensor[(7, 8, 10), float32]) {
  %276 = fn (%var_9752: int64, %var_9789: Tensor[(1536), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(91, 6), float32], Tensor[(8, 16, 12), float64], Tensor[(1536), float64], Tensor[(7, 8, 10), float32]) {
    %260 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %261 = cast(%var_9752, dtype="int64") /* ty=int64 */;
    %262 = cast(meta[relay.Constant][10] /* ty=Tensor[(91, 6), float32] */, dtype="float32") /* ty=Tensor[(91, 6), float32] */;
    %263 = reshape(%261, newshape=[]) /* ty=int64 */;
    %264 = reshape(%262, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
    %265 = @func_7558(%263, %264) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) */;
    %266 = cast(%var_9789, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %267 = cast(%var_9789, dtype="float64") /* ty=Tensor[(1536), float64] */;
    %268 = reshape(%266, newshape=[8, 16, 12]) /* ty=Tensor[(8, 16, 12), float64] */;
    %269 = reshape(%267, newshape=[8, 16, 12]) /* ty=Tensor[(8, 16, 12), float64] */;
    %270 = @func_9633(%268, %269) /* ty=(Tensor[(8, 16, 12), float64],) */;
    %271 = %260.1;
    %272 = @func_8612() /* ty=Tensor[(7, 8, 10), float32] */;
    %273 = %265.0;
    %274 = %270.0;
    %275 = @func_3831() /* ty=Tensor[(7, 8, 10), float32] */;
    (%271, %272, %273, %var_9752, meta[relay.Constant][10] /* ty=Tensor[(91, 6), float32] */, %274, %var_9789, %275)
  };
  %276(%var_9800, %var_9801) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(91, 6), float32], Tensor[(8, 16, 12), float64], Tensor[(1536), float64], Tensor[(7, 8, 10), float32]) */
}

def @func_2041(%var_2031: Tensor[(10, 10, 15), uint16]) -> Tensor[(10, 10, 15), bool] {
  %277 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %278 = cast(%var_2031, dtype="bool") /* ty=Tensor[(10, 10, 15), bool] */;
  less_equal(%277, %278) /* ty=Tensor[(10, 10, 15), bool] */
}

def @func_7307() -> (Tensor[(4, 14, 2), float32],) {
  %280 = fn () -> (Tensor[(4, 14, 2), float32],) {
    %279 = @func_6898() /* ty=Tensor[(4, 14, 2), float32] */;
    (%279,)
  };
  %280() /* ty=(Tensor[(4, 14, 2), float32],) */
}

def @func_3052() -> Tensor[(7, 8, 10), float32] {
  %282 = fn () -> Tensor[(7, 8, 10), float32] {
    %281 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %281.1
  };
  %282() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_1374(%var_1371: Tensor[(3, 15, 14), float64], %var_1372: int64, %var_1373: Tensor[(546), float32]) -> (Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) {
  @func_1369(%var_1371, %var_1372, %var_1373) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */
}

def @func_12348() -> (Tensor[(4, 14, 2), float32], Tensor[(4, 8, 546), float64], Tensor[(32), int16], Tensor[(352), int16], Tensor[(546), float32]) {
  %283 = @func_11039() /* ty=(Tensor[(4, 14, 2), float32],) */;
  %284 = cast(meta[relay.Constant][12] /* ty=Tensor[(32), int16] */, dtype="int16") /* ty=Tensor[(32), int16] */;
  %285 = cast(meta[relay.Constant][13] /* ty=Tensor[(352), int16] */, dtype="int16") /* ty=Tensor[(352), int16] */;
  %286 = cast(meta[relay.Constant][14] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %287 = reshape(%284, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), int16] */;
  %288 = reshape(%285, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), int16] */;
  %289 = reshape(%286, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %290 = @func_4669(%287, %288, %289) /* ty=(Tensor[(4, 8, 11), int16], Tensor[(7, 8, 10), float32], Tensor[(630), float64], Tensor[(4, 8, 546), float64]) */;
  %291 = %283.0;
  %292 = %290.3;
  (%291, %292, meta[relay.Constant][12] /* ty=Tensor[(32), int16] */, meta[relay.Constant][13] /* ty=Tensor[(352), int16] */, meta[relay.Constant][14] /* ty=Tensor[(546), float32] */)
}

def @func_10290(%var_10285: Tensor[(432), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(9, 16, 3), float64], Tensor[(432), float64], Tensor[(7, 8, 10), float32]) {
  %293 = cast(%var_10285, dtype="float64") /* ty=Tensor[(432), float64] */;
  %294 = reshape(%293, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), float64] */;
  %295 = @func_10220() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %296 = @func_2851() /* ty=Tensor[(7, 8, 10), float32] */;
  %297 = @func_6363(%294) /* ty=Tensor[(9, 16, 3), float64] */;
  %298 = %295.1;
  (%296, %297, %var_10285, %298)
}

def @func_10143() -> Tensor[(7, 8, 10), float32] {
  %299 = @func_7881() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %299.0
}

def @func_9895() -> (Tensor[(65, 11), float32],) {
  %302 = fn () -> (Tensor[(65, 11), float32],) {
    %300 = @func_8417() /* ty=(Tensor[(65, 11), float32],) */;
    %301 = %300.0;
    (%301,)
  };
  %302() /* ty=(Tensor[(65, 11), float32],) */
}

def @func_11236() -> (Tensor[(4, 14, 2), float32], Tensor[(65, 11), float32]) {
  @func_11234() /* ty=(Tensor[(4, 14, 2), float32], Tensor[(65, 11), float32]) */
}

def @func_4257(%var_4256: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(7, 8, 10), uint8]) {
  %314 = fn (%var_4238: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(7, 8, 10), uint8]) {
    %303 = cast(%var_4238, dtype="float64") /* ty=Tensor[(360), float64] */;
    %304 = reshape(%303, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float64] */;
    %305 = @func_373(%304) /* ty=(Tensor[(2, 15, 12), float64],) */;
    %306 = @func_2826() /* ty=Tensor[(7, 8, 10), float32] */;
    %307 = cast(%306, dtype="float32") /* ty=Tensor[(7, 8, 10), float32] */;
    %308 = reshape(%307, newshape=[7, 8, 10]) /* ty=Tensor[(7, 8, 10), float32] */;
    %309 = @func_3241() /* ty=Tensor[(7, 8, 10), float32] */;
    %310 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
    %311 = @func_2826() /* ty=Tensor[(7, 8, 10), float32] */;
    %312 = %305.0;
    %313 = @func_3799(%308) /* ty=Tensor[(7, 8, 10), uint8] */;
    (%306, %309, %310, %311, %312, %var_4238, %313)
  };
  %314(%var_4256) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(7, 8, 10), uint8]) */
}

def @func_9188() -> (Tensor[(360), float64],) {
  %315 = @func_7400() /* ty=(Tensor[(360), float64],) */;
  %316 = %315.0;
  (%316,)
}

def @func_6736() -> (Tensor[(65, 11), float64], Tensor[(11, 5, 13), int8]) {
  @func_6734() /* ty=(Tensor[(65, 11), float64], Tensor[(11, 5, 13), int8]) */
}

def @func_9741(%var_9740: Tensor[(65, 11), float64]) -> Tensor[(65, 11), int8] {
  %323 = fn (%var_9727: Tensor[(65, 11), float64]) -> Tensor[(65, 11), int8] {
    %317 = @func_9355() /* ty=(Tensor[(65, 11), float64],) */;
    %318 = %317.0;
    %319 = cast(%var_9727, dtype="int8") /* ty=Tensor[(65, 11), int8] */;
    %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(2), int32] */;
    %321 = cast(%318, dtype="int8") /* ty=Tensor[(65, 11), int8] */;
    %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    right_shift(%321, %322) /* ty=Tensor[(65, 11), int8] */
  };
  %323(%var_9740) /* ty=Tensor[(65, 11), int8] */
}

def @func_12516() -> (Tensor[(350), float32], Tensor[(4, 14, 2), float32], Tensor[(7, 8, 10), uint8]) {
  @func_12514() /* ty=(Tensor[(350), float32], Tensor[(4, 14, 2), float32], Tensor[(7, 8, 10), uint8]) */
}

def @func_9566() -> (Tensor[(7, 8, 10), float32],) {
  %324 = @func_3831() /* ty=Tensor[(7, 8, 10), float32] */;
  (%324,)
}

def @func_2412() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %329 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
    %325 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %326 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %327 = %325.0;
    %328 = %326.0;
    (%327, %328)
  };
  %329() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_3548() -> (Tensor[(7, 8, 10), float32],) {
  @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_5269() -> Tensor[(7, 8, 10), float32] {
  %331 = fn () -> Tensor[(7, 8, 10), float32] {
    %330 = @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %330.0
  };
  %331() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_6890() -> Tensor[(112), float32] {
  %333 = fn () -> Tensor[(112), float32] {
    %332 = @func_4722() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */;
    %332.3
  };
  %333() /* ty=Tensor[(112), float32] */
}

def @func_3487() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %334 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %335 = @func_3401() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %336 = %334.0;
  %337 = %335.0;
  (%336, %337)
}

def @func_9710() -> Tensor[(7, 8, 10), float32] {
  @func_9708() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_9250() -> Tensor[(7, 8, 10), float32] {
  %339 = fn () -> Tensor[(7, 8, 10), float32] {
    %338 = @func_8939() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %338.0
  };
  %339() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_11439() -> (Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) {
  @func_11437() /* ty=(Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */
}

def @func_9998(%var_9993: Tensor[(65, 11), float32]) -> (Tensor[(65, 11), int16],) {
  %340 = @func_6697() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */;
  %341 = %340.3;
  %342 = cast(%var_9993, dtype="int16") /* ty=Tensor[(65, 11), int16] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(2), int32] */;
  %344 = cast(%341, dtype="int16") /* ty=Tensor[(65, 11), int16] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %346 = multiply(%344, %345) /* ty=Tensor[(65, 11), int16] */;
  (%346,)
}

def @func_2743(%var_2711: Tensor[(11, 5, 13), float32], %var_2716: Tensor[(11, 5, 13), float32]) -> (Tensor[(11, 5, 13), int16], Tensor[(11, 5, 13), int8]) {
  %347 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %348 = %347.1;
  %349 = cast(%var_2711, dtype="int16") /* ty=Tensor[(11, 5, 13), int16] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%348, dtype="int16") /* ty=Tensor[(11, 5, 13), int16] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %353 = cast(%var_2716, dtype="int8") /* ty=Tensor[(11, 5, 13), int8] */;
  %354 = shape_of(%var_2711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%var_2711, dtype="int8") /* ty=Tensor[(11, 5, 13), int8] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %357 = left_shift(%351, %352) /* ty=Tensor[(11, 5, 13), int16] */;
  %358 = bitwise_xor(%355, %356) /* ty=Tensor[(11, 5, 13), int8] */;
  (%357, %358)
}

def @func_12207() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(350), float32]) {
  @func_12205() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(350), float32]) */
}

def @func_6343(%var_6342: Tensor[(65, 11), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(65, 11), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8]) {
  %382 = fn (%var_6288: Tensor[(65, 11), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(65, 11), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8]) {
    %359 = @func_6080() /* ty=Tensor[(65, 11), float32] */;
    %360 = cast(%359, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %361 = log2(%360) /* ty=Tensor[(65, 11), float64] */;
    %362 = cast(%361, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %363 = atanh(%362) /* ty=Tensor[(65, 11), float64] */;
    %364 = cast(%363, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %365 = sin(%364) /* ty=Tensor[(65, 11), float64] */;
    %366 = cast(%var_6288, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
    %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(2), int32] */;
    %368 = cast(%365, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
    %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %370 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %371 = cast(%361, dtype="int8") /* ty=Tensor[(65, 11), int8] */;
    %372 = shape_of(%363, dtype="int32") /* ty=Tensor[(2), int32] */;
    %373 = cast(%363, dtype="int8") /* ty=Tensor[(65, 11), int8] */;
    %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %375 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
    %376 = @func_4425() /* ty=Tensor[(65, 11), float32] */;
    %377 = left_shift(%368, %369) /* ty=Tensor[(65, 11), int32] */;
    %378 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
    %379 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
    %380 = %370.1;
    %381 = bitwise_or(%373, %374) /* ty=Tensor[(65, 11), int8] */;
    (%375, %376, %377, %378, %379, %380, %381)
  };
  %382(%var_6342) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(65, 11), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8]) */
}

def @func_5695() -> Tensor[(65, 11), float32] {
  %383 = fn () -> Tensor[(65, 11), float32] {
    @func_4425() /* ty=Tensor[(65, 11), float32] */
  };
  %383() /* ty=Tensor[(65, 11), float32] */
}

def @func_11280() -> (Tensor[(2, 15, 12), int64], Tensor[(8, 9, 9), uint8]) {
  %393 = fn () -> (Tensor[(2, 15, 12), int64], Tensor[(8, 9, 9), uint8]) {
    %384 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
    %385 = %384.1;
    %386 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 15, 12), float64] */, dtype="int64") /* ty=Tensor[(2, 15, 12), int64] */;
    %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
    %388 = cast(%385, dtype="int64") /* ty=Tensor[(2, 15, 12), int64] */;
    %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %390 = @func_6697() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */;
    %391 = left_shift(%388, %389) /* ty=Tensor[(2, 15, 12), int64] */;
    %392 = %390.2;
    (%391, %392)
  };
  %393() /* ty=(Tensor[(2, 15, 12), int64], Tensor[(8, 9, 9), uint8]) */
}

def @func_7829() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_7827() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_5623(%var_5607: Tensor[(630), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(3, 15, 14), float64], Tensor[(630), float64], int64, Tensor[(546), float32]) {
  %394 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(7, 8, 10), float32] */;
  %396 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %397 = cast(%var_5607, dtype="float64") /* ty=Tensor[(630), float64] */;
  %398 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %399 = cast(meta[relay.Constant][16] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %400 = reshape(%397, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float64] */;
  %401 = reshape(%398, newshape=[]) /* ty=int64 */;
  %402 = reshape(%399, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %403 = @func_1369(%400, %401, %402) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */;
  %404 = log(%395) /* ty=Tensor[(7, 8, 10), float32] */;
  %405 = %396.0;
  %406 = %403.0;
  (%404, %405, %406, %var_5607, -8 /* ty=int64 */, meta[relay.Constant][16] /* ty=Tensor[(546), float32] */)
}

def @func_9872() -> Tensor[(7, 8, 10), float32] {
  %407 = @func_8401() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %407.1
}

def @func_3321() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) {
  @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */
}

def @func_11592() -> (Tensor[(7, 8, 10), float32],) {
  %409 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %408 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
    (%408,)
  };
  %409() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_4833(%var_4831: Tensor[(180), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(4, 14, 2), bool], Tensor[(65, 11), float32], Tensor[(360), float64], Tensor[(546), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_4830(%var_4831) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(4, 14, 2), bool], Tensor[(65, 11), float32], Tensor[(360), float64], Tensor[(546), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_8093() -> (Tensor[(7, 8, 10), float32],) {
  %410 = @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %411 = %410.0;
  (%411,)
}

def @func_13317() -> Tensor[(7, 8, 10), float32] {
  @func_9249() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_4641() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) {
  @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */
}

def @func_9355() -> (Tensor[(65, 11), float64],) {
  %412 = @func_7043() /* ty=Tensor[(65, 11), float64] */;
  (%412,)
}

def @func_12658() -> (Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(1008), int8], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) {
  @func_12656() /* ty=(Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(1008), int8], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) */
}

def @func_6650() -> Tensor[(7, 8, 10), float32] {
  %413 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %413.0
}

def @func_11839() -> Tensor[(65, 11), float32] {
  @func_11837() /* ty=Tensor[(65, 11), float32] */
}

def @func_7100(%var_7098: int64, %var_7099: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(3, 15, 14), float64], Tensor[(630), float64], int64, Tensor[(546), float32]) {
  @func_7096(%var_7098, %var_7099) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(3, 15, 14), float64], Tensor[(630), float64], int64, Tensor[(546), float32]) */
}

def @func_8677() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32]) {
  @func_8675() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32]) */
}

def @func_8675() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32]) {
  %414 = @func_4296() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */;
  %415 = @func_8093() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %416 = @func_8401() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %417 = @func_8417() /* ty=(Tensor[(65, 11), float32],) */;
  %418 = @func_7679() /* ty=Tensor[(7, 8, 10), float32] */;
  %419 = %414.0;
  %420 = %415.0;
  %421 = %416.0;
  %422 = %417.0;
  (%418, %419, %420, %421, %422)
}

def @func_7451() -> Tensor[(7, 8, 10), float32] {
  @func_7449() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_7575() -> Tensor[(7, 8, 10), float32] {
  %423 = fn () -> Tensor[(7, 8, 10), float32] {
    @func_3241() /* ty=Tensor[(7, 8, 10), float32] */
  };
  %423() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_2361() -> (Tensor[(7, 8, 10), float32],) {
  @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_8089() -> (Tensor[(7, 8, 10), float32], Tensor[(546, ?), int16], Tensor[(1, 858), uint8]) {
  %431 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(546, ?), int16], Tensor[(1, 858), uint8]) {
    %424 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 858), uint8] */, dtype="uint8") /* ty=Tensor[(1, 858), uint8] */;
    %425 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 858), uint8] */, dtype="uint8") /* ty=Tensor[(1, 858), uint8] */;
    %426 = reshape(%424, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint8] */;
    %427 = reshape(%425, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), uint8] */;
    %428 = @func_709(%426, %427) /* ty=(Tensor[(11, 6, 13), uint8], Tensor[(11, 6, 13), bool], Tensor[(546, ?), int16], Tensor[(11, 6, 13), float32]) */;
    %429 = @func_5407() /* ty=Tensor[(7, 8, 10), float32] */;
    %430 = %428.2;
    (%429, %430, meta[relay.Constant][17] /* ty=Tensor[(1, 858), uint8] */)
  };
  %431() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546, ?), int16], Tensor[(1, 858), uint8]) */
}

def @func_5626(%var_5624: Tensor[(630), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(3, 15, 14), float64], Tensor[(630), float64], int64, Tensor[(546), float32]) {
  @func_5623(%var_5624) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(3, 15, 14), float64], Tensor[(630), float64], int64, Tensor[(546), float32]) */
}

def @func_12673(%var_12668: Tensor[(12, 8, 3), float64]) -> Tensor[(12, 8, 3), float64] {
  %432 = cast(%var_12668, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  log2(%432) /* ty=Tensor[(12, 8, 3), float64] */
}

def @func_7096(%var_7085: int64, %var_7086: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(3, 15, 14), float64], Tensor[(630), float64], int64, Tensor[(546), float32]) {
  %433 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
  %434 = cast(meta[relay.Constant][18] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %435 = cast(%var_7085, dtype="int64") /* ty=int64 */;
  %436 = cast(%var_7086, dtype="float32") /* ty=Tensor[(546), float32] */;
  %437 = reshape(%434, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float64] */;
  %438 = reshape(%435, newshape=[]) /* ty=int64 */;
  %439 = reshape(%436, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %440 = @func_1369(%437, %438, %439) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */;
  %441 = %433.0;
  %442 = %440.0;
  (%441, %442, meta[relay.Constant][18] /* ty=Tensor[(630), float64] */, %var_7085, %var_7086)
}

def @func_5511(%var_5510: float32) -> (Tensor[(1, 9, 9), float32], Tensor[(1, 9, 9), float64]) {
  %448 = fn (%var_5494: float32) -> (Tensor[(1, 9, 9), float32], Tensor[(1, 9, 9), float64]) {
    %443 = cast(%var_5494, dtype="float32") /* ty=float32 */;
    %444 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 9), float32] */;
    %445 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 9, 9), float32] */, dtype="float64") /* ty=Tensor[(1, 9, 9), float64] */;
    %446 = add(%443, %444) /* ty=Tensor[(1, 9, 9), float32] */;
    %447 = sqrt(%445) /* ty=Tensor[(1, 9, 9), float64] */;
    (%446, %447)
  };
  %448(%var_5510) /* ty=(Tensor[(1, 9, 9), float32], Tensor[(1, 9, 9), float64]) */
}

def @func_10899(%var_10898: Tensor[(15, 1, 3), uint8]) -> (Tensor[(15, 10, 3), uint8],) {
  %452 = fn (%var_10891: Tensor[(15, 1, 3), uint8]) -> (Tensor[(15, 10, 3), uint8],) {
    %449 = cast(%var_10891, dtype="uint8") /* ty=Tensor[(15, 1, 3), uint8] */;
    %450 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 10, 3), uint8] */, dtype="uint8") /* ty=Tensor[(15, 10, 3), uint8] */;
    %451 = multiply(%449, %450) /* ty=Tensor[(15, 10, 3), uint8] */;
    (%451,)
  };
  %452(%var_10898) /* ty=(Tensor[(15, 10, 3), uint8],) */
}

def @func_6044() -> Tensor[(350), float32] {
  %454 = fn () -> Tensor[(350), float32] {
    %453 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
    %453.4
  };
  %454() /* ty=Tensor[(350), float32] */
}

def @func_13547() -> (Tensor[(7, 8, 10), float32], Tensor[(10, 7, 5), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) {
  @func_13545() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(10, 7, 5), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) */
}

def @main() -> Tensor[(65, 11), float64] {
  %455 = @func_2789() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %456 = %455.0;
  %457 = cast(%456, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  sqrt(%457) /* ty=Tensor[(65, 11), float64] */
}

def @func_4519(%var_4517: uint64, %var_4518: Tensor[(112), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(440, 2), float32], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(11, 16, 5), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
  %487 = fn (%var_4487: uint64, %var_4511: Tensor[(112), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(440, 2), float32], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(11, 16, 5), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
    %458 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %459 = cast(meta[relay.Constant][21] /* ty=Tensor[(440, 2), float32] */, dtype="float32") /* ty=Tensor[(440, 2), float32] */;
    %460 = reshape(%459, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float32] */;
    %461 = @func_1061(%460) /* ty=(Tensor[(11, 16, 5), float32],) */;
    %462 = cast(%var_4487, dtype="uint64") /* ty=uint64 */;
    %463 = cast(meta[relay.Constant][22] /* ty=Tensor[(3136), uint64] */, dtype="uint64") /* ty=Tensor[(3136), uint64] */;
    %464 = reshape(%462, newshape=[]) /* ty=uint64 */;
    %465 = reshape(%463, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint64] */;
    %466 = @func_2298(%464, %465) /* ty=(Tensor[(14, 16, 14), uint64],) */;
    %467 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %468 = cast(meta[relay.Constant][21] /* ty=Tensor[(440, 2), float32] */, dtype="float32") /* ty=Tensor[(440, 2), float32] */;
    %469 = cast(%var_4487, dtype="int64") /* ty=int64 */;
    %470 = reshape(%468, newshape=[880]) /* ty=Tensor[(880), float32] */;
    %471 = reshape(%469, newshape=[]) /* ty=int64 */;
    %472 = @func_4047(%470, %471) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(880), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(273, 2), float32], Tensor[(273, 2), float32], int64) */;
    %473 = %461.0;
    %474 = cast(%473, dtype="float32") /* ty=Tensor[(11, 16, 5), float32] */;
    %475 = reshape(%474, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float32] */;
    %476 = @func_1061(%475) /* ty=(Tensor[(11, 16, 5), float32],) */;
    %477 = cast(%var_4511, dtype="float32") /* ty=Tensor[(112), float32] */;
    %478 = reshape(%477, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
    %479 = @func_968(%478) /* ty=(Tensor[(4, 14, 2), float32],) */;
    %480 = %458.0;
    %481 = %466.0;
    %482 = @func_2658() /* ty=Tensor[(7, 8, 10), float32] */;
    %483 = %467.1;
    %484 = %472.7;
    %485 = %476.0;
    %486 = %479.0;
    (%480, %473, meta[relay.Constant][21] /* ty=Tensor[(440, 2), float32] */, %481, %var_4487, meta[relay.Constant][22] /* ty=Tensor[(3136), uint64] */, %482, %483, %484, %485, %486, %var_4511)
  };
  %487(%var_4517, %var_4518) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(440, 2), float32], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(11, 16, 5), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */
}

def @func_1061(%var_1054: Tensor[(11, 16, 5), float32]) -> (Tensor[(11, 16, 5), float32],) {
  %488 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 16, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 16, 5), float32] */;
  %489 = shape_of(%var_1054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%var_1054, dtype="float32") /* ty=Tensor[(11, 16, 5), float32] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %492 = power(%490, %491) /* ty=Tensor[(11, 16, 5), float32] */;
  (%492,)
}

def @func_7882() -> (Tensor[(7, 8, 10), float32],) {
  %494 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %493 = @func_7679() /* ty=Tensor[(7, 8, 10), float32] */;
    (%493,)
  };
  %494() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_3014() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %495 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %496 = %495.0;
  %497 = @func_2876() /* ty=Tensor[(7, 8, 10), float32] */;
  (%496, %497)
}

def @func_3832() -> Tensor[(7, 8, 10), float32] {
  %499 = fn () -> Tensor[(7, 8, 10), float32] {
    %498 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
    %498.0
  };
  %499() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_12129(%var_12114: Tensor[(1, 6, 7), bool]) -> (Tensor[(6, 6, 7), bool], Tensor[(4, 28), float32], Tensor[(180), float64]) {
  %500 = cast(%var_12114, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  %501 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(6, 6, 7), bool] */;
  %502 = cast(meta[relay.Constant][25] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %503 = reshape(%502, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
  %504 = @func_5372(%503) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(1, 112), float32], Tensor[(180, 1), float64], Tensor[(4, 28), float32]) */;
  %505 = logical_or(%500, %501) /* ty=Tensor[(6, 6, 7), bool] */;
  %506 = %504.3;
  (%505, %506, meta[relay.Constant][25] /* ty=Tensor[(180), float64] */)
}

def @func_10401() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) {
  %511 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) {
    %507 = @func_3866() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) */;
    %508 = @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %509 = %507.3;
    %510 = %508.1;
    (%509, %510)
  };
  %511() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */
}

def @func_11302() -> Tensor[(7, 8, 10), float32] {
  %513 = fn () -> Tensor[(7, 8, 10), float32] {
    %512 = @func_10770() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %512.0
  };
  %513() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_3566() -> Tensor[(7, 8, 10), float32] {
  %515 = fn () -> Tensor[(7, 8, 10), float32] {
    %514 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %514.0
  };
  %515() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_12309() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(7, 8, 10), float32]) {
  %516 = @func_10647() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %517 = @func_10500() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) */;
  %518 = %517.0;
  %519 = cast(%518, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
  %520 = %516.4;
  %521 = atanh(%519) /* ty=Tensor[(2, 15, 12), float32] */;
  %522 = @func_2851() /* ty=Tensor[(7, 8, 10), float32] */;
  (%520, %521, %522)
}

def @func_12399(%var_12397: Tensor[(10, 8, 2), int32]) -> (Tensor[(10, 8, 2), int32],) {
  @func_12396(%var_12397) /* ty=(Tensor[(10, 8, 2), int32],) */
}

def @func_2653() -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) {
  %523 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %524 = cast(meta[relay.Constant][26] /* ty=Tensor[(65, 11), float64] */, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %525 = reshape(%524, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float64] */;
  %526 = @func_1462(%525) /* ty=(Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) */;
  %527 = cast(meta[relay.Constant][27] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %528 = reshape(%527, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float32] */;
  %529 = @func_801(%528) /* ty=(Tensor[(10, 7, 5), float32],) */;
  %530 = %523.0;
  %531 = %526.0;
  %532 = %529.0;
  (%530, %531, meta[relay.Constant][26] /* ty=Tensor[(65, 11), float64] */, %532, meta[relay.Constant][27] /* ty=Tensor[(350), float32] */)
}

def @func_607(%var_589: Tensor[(14, 13, 3), float32]) -> Tensor[(14, 13, 3), float32] {
  %533 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 13, 3), float32] */, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
  %534 = cast(%var_589, dtype="bool") /* ty=Tensor[(14, 13, 3), bool] */;
  %535 = less_equal(%533, %534) /* ty=Tensor[(14, 13, 3), bool] */;
  %536 = cast(%535, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
  log2(%536) /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_1207(%var_1191: int64) -> (Tensor[(11, 1, 6), int64],) {
  %537 = cast(%var_1191, dtype="int64") /* ty=int64 */;
  %538 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 1, 6), int64] */, dtype="int64") /* ty=Tensor[(11, 1, 6), int64] */;
  %539 = minimum(%537, %538) /* ty=Tensor[(11, 1, 6), int64] */;
  (%539,)
}

def @func_4925(%var_4923: Tensor[(14, 13, 3), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(715), float64], Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float64]) {
  @func_4922(%var_4923) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(715), float64], Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float64]) */
}

def @func_3753(%var_3750: Tensor[(14, 12, 10), float64], %var_3751: Tensor[(14, 12, 10), float64], %var_3752: uint64) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64]) {
  @func_3748(%var_3750, %var_3751, %var_3752) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64]) */
}

def @func_5243() -> (Tensor[(65, 11), float32],) {
  %540 = @func_4425() /* ty=Tensor[(65, 11), float32] */;
  (%540,)
}

def @func_2852() -> Tensor[(7, 8, 10), float32] {
  %542 = fn () -> Tensor[(7, 8, 10), float32] {
    %541 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %541.0
  };
  %542() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_8898(%var_8896: Tensor[(1008), int8]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) {
  @func_8895(%var_8896) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) */
}

def @func_3626(%var_3624: int64, %var_3625: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) {
  %553 = fn (%var_3618: int64, %var_3619: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) {
    %543 = @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %544 = cast(meta[relay.Constant][30] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %545 = cast(%var_3618, dtype="int64") /* ty=int64 */;
    %546 = cast(%var_3619, dtype="float32") /* ty=Tensor[(273, 2), float32] */;
    %547 = reshape(%544, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float64] */;
    %548 = reshape(%545, newshape=[]) /* ty=int64 */;
    %549 = reshape(%546, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %550 = @func_1369(%547, %548, %549) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */;
    %551 = %543.1;
    %552 = %550.4;
    (%551, %552, meta[relay.Constant][30] /* ty=Tensor[(630), float64] */, %var_3618, %var_3619)
  };
  %553(%var_3624, %var_3625) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) */
}

def @func_7043() -> Tensor[(65, 11), float64] {
  %554 = @func_6734() /* ty=(Tensor[(65, 11), float64], Tensor[(11, 5, 13), int8]) */;
  %554.0
}

def @func_3319() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) {
  %555 = cast(meta[relay.Constant][31] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %556 = reshape(%555, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float64] */;
  %557 = @func_373(%556) /* ty=(Tensor[(2, 15, 12), float64],) */;
  %558 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
  %559 = %557.0;
  (%558, %559, meta[relay.Constant][31] /* ty=Tensor[(360), float64] */)
}

def @func_3802(%var_3800: Tensor[(7, 8, 10), float32]) -> Tensor[(7, 8, 10), uint8] {
  @func_3799(%var_3800) /* ty=Tensor[(7, 8, 10), uint8] */
}

def @func_11837() -> Tensor[(65, 11), float32] {
  %560 = @func_7650() /* ty=Tensor[(65, 11), float32] */;
  %561 = cast(%560, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
  acosh(%561) /* ty=Tensor[(65, 11), float32] */
}

def @func_6408() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %562 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %563 = @func_4882() /* ty=Tensor[(65, 11), float32] */;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %565 = cast(%563, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %566 = reshape(%565, newshape=[65, 11]) /* ty=Tensor[(65, 11), float64] */;
  %567 = @func_6341(%566) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(65, 11), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8]) */;
  %568 = %562.0;
  %569 = cosh(%564) /* ty=Tensor[(65, 11), float64] */;
  %570 = @func_2876() /* ty=Tensor[(7, 8, 10), float32] */;
  %571 = %567.0;
  (%568, %569, %570, %571)
}

def @func_2504(%var_2492: Tensor[(1, 630), float64], %var_2494: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(1, 630), float64], int64, Tensor[(546), float32]) {
  %572 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %573 = cast(%var_2492, dtype="float64") /* ty=Tensor[(1, 630), float64] */;
  %574 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %575 = cast(%var_2494, dtype="float32") /* ty=Tensor[(546), float32] */;
  %576 = reshape(%573, newshape=[3, 15, 14]) /* ty=Tensor[(3, 15, 14), float64] */;
  %577 = reshape(%574, newshape=[]) /* ty=int64 */;
  %578 = reshape(%575, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %579 = @func_1369(%576, %577, %578) /* ty=(Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) */;
  %580 = %572.0;
  %581 = %579.4;
  (%580, %581, %var_2492, -1 /* ty=int64 */, %var_2494)
}

def @func_376(%var_374: Tensor[(2, 15, 12), float64]) -> (Tensor[(2, 15, 12), float64],) {
  @func_373(%var_374) /* ty=(Tensor[(2, 15, 12), float64],) */
}

def @func_12147() -> (Tensor[(7, 8, 10), float32],) {
  %583 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %582 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
    (%582,)
  };
  %583() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_13319() -> Tensor[(7, 8, 10), float32] {
  @func_13317() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_3748(%var_3692: Tensor[(14, 12, 10), float64], %var_3693: Tensor[(14, 12, 10), float64], %var_3716: uint64) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64]) {
  %584 = cast(%var_3693, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %585 = shape_of(%var_3692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%var_3692, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %588 = cast(%var_3716, dtype="uint64") /* ty=uint64 */;
  %589 = cast(meta[relay.Constant][32] /* ty=Tensor[(3136), uint64] */, dtype="uint64") /* ty=Tensor[(3136), uint64] */;
  %590 = reshape(%588, newshape=[]) /* ty=uint64 */;
  %591 = reshape(%589, newshape=[14, 16, 14]) /* ty=Tensor[(14, 16, 14), uint64] */;
  %592 = @func_2298(%590, %591) /* ty=(Tensor[(14, 16, 14), uint64],) */;
  %593 = floor_divide(%586, %587) /* ty=Tensor[(14, 12, 10), float64] */;
  %594 = %592.0;
  (%593, %594, %var_3716, meta[relay.Constant][32] /* ty=Tensor[(3136), uint64] */)
}

def @func_4883() -> Tensor[(65, 11), float32] {
  %598 = fn () -> Tensor[(65, 11), float32] {
    %595 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
    %596 = %595.2;
    %597 = cast(%596, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
    sinh(%597) /* ty=Tensor[(65, 11), float32] */
  };
  %598() /* ty=Tensor[(65, 11), float32] */
}

def @func_12070() -> (Tensor[(7, 8, 10), uint8],) {
  %601 = fn () -> (Tensor[(7, 8, 10), uint8],) {
    %599 = @func_11529() /* ty=(Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */;
    %600 = %599.0;
    (%600,)
  };
  %601() /* ty=(Tensor[(7, 8, 10), uint8],) */
}

def @func_4673(%var_4670: Tensor[(4, 8, 1), int16], %var_4671: Tensor[(4, 8, 11), int16], %var_4672: Tensor[(546), float32]) -> (Tensor[(4, 8, 11), int16], Tensor[(7, 8, 10), float32], Tensor[(630), float64], Tensor[(4, 8, 546), float64]) {
  %614 = fn (%var_4653: Tensor[(4, 8, 1), int16], %var_4654: Tensor[(4, 8, 11), int16], %var_4661: Tensor[(546), float32]) -> (Tensor[(4, 8, 11), int16], Tensor[(7, 8, 10), float32], Tensor[(630), float64], Tensor[(4, 8, 546), float64]) {
    %602 = cast(%var_4653, dtype="int16") /* ty=Tensor[(4, 8, 1), int16] */;
    %603 = cast(%var_4654, dtype="int16") /* ty=Tensor[(4, 8, 11), int16] */;
    %604 = cast(meta[relay.Constant][33] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
    %605 = cast(%var_4661, dtype="float32") /* ty=Tensor[(546), float32] */;
    %606 = reshape(%604, newshape=[630]) /* ty=Tensor[(630), float64] */;
    %607 = reshape(%605, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %608 = @func_2926(%606, %607) /* ty=(Tensor[(7, 8, 10), float32], int64, Tensor[(630), float64], Tensor[(546), float32]) */;
    %609 = cast(%var_4661, dtype="float64") /* ty=Tensor[(546), float64] */;
    %610 = cast(%var_4653, dtype="float64") /* ty=Tensor[(4, 8, 1), float64] */;
    %611 = logical_xor(%602, %603) /* ty=Tensor[(4, 8, 11), int16] */;
    %612 = %608.0;
    %613 = floor_mod(%609, %610) /* ty=Tensor[(4, 8, 546), float64] */;
    (%611, %612, meta[relay.Constant][33] /* ty=Tensor[(630), float64] */, %613)
  };
  %614(%var_4670, %var_4671, %var_4672) /* ty=(Tensor[(4, 8, 11), int16], Tensor[(7, 8, 10), float32], Tensor[(630), float64], Tensor[(4, 8, 546), float64]) */
}

def @func_7561(%var_7559: int64, %var_7560: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) {
  %623 = fn (%var_7537: int64, %var_7538: Tensor[(273, 2), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) {
    %615 = @func_5069() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %616 = cast(%var_7537, dtype="int64") /* ty=int64 */;
    %617 = cast(%var_7538, dtype="float32") /* ty=Tensor[(273, 2), float32] */;
    %618 = reshape(%616, newshape=[]) /* ty=int64 */;
    %619 = reshape(%617, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
    %620 = @func_3623(%618, %619) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) */;
    %621 = %615.0;
    %622 = %620.2;
    (%621, %622, %var_7537, %var_7538)
  };
  %623(%var_7559, %var_7560) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) */
}

def @func_7701() -> (Tensor[(7, 8, 10), float64], Tensor[(7, 8, 10), float32], Tensor[(112), float32]) {
  @func_7699() /* ty=(Tensor[(7, 8, 10), float64], Tensor[(7, 8, 10), float32], Tensor[(112), float32]) */
}

def @func_9357() -> (Tensor[(65, 11), float64],) {
  @func_9355() /* ty=(Tensor[(65, 11), float64],) */
}

def @func_10772() -> (Tensor[(7, 8, 10), float32],) {
  @func_10770() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_8403() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_8401() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_9708() -> Tensor[(7, 8, 10), float32] {
  @func_2585() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_11455() -> (Tensor[(112), bool],) {
  %626 = fn () -> (Tensor[(112), bool],) {
    %624 = @func_8372() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(112), bool]) */;
    %625 = %624.7;
    (%625,)
  };
  %626() /* ty=(Tensor[(112), bool],) */
}

def @func_13389(%var_13386: Tensor[(32), int16], %var_13387: Tensor[(546), float32], %var_13388: Tensor[(1008), int8]) -> (Tensor[(65, 11), uint32], Tensor[(4, 8, 11), int16], Tensor[(32), int16], Tensor[(352), int16], Tensor[(546), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8], Tensor[(65, 11), bool]) {
  %651 = fn (%var_13343: Tensor[(32), int16], %var_13345: Tensor[(546), float32], %var_13349: Tensor[(1008), int8]) -> (Tensor[(65, 11), uint32], Tensor[(4, 8, 11), int16], Tensor[(32), int16], Tensor[(352), int16], Tensor[(546), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8], Tensor[(65, 11), bool]) {
    %627 = @func_12656() /* ty=(Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(1008), int8], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) */;
    %628 = %627.4;
    %629 = cast(meta[relay.Constant][34] /* ty=Tensor[(65, 11), float32] */, dtype="uint32") /* ty=Tensor[(65, 11), uint32] */;
    %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(2), int32] */;
    %631 = cast(%628, dtype="uint32") /* ty=Tensor[(65, 11), uint32] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %633 = cast(%var_13343, dtype="int16") /* ty=Tensor[(32), int16] */;
    %634 = cast(meta[relay.Constant][35] /* ty=Tensor[(352), int16] */, dtype="int16") /* ty=Tensor[(352), int16] */;
    %635 = cast(%var_13345, dtype="float32") /* ty=Tensor[(546), float32] */;
    %636 = reshape(%633, newshape=[4, 8, 1]) /* ty=Tensor[(4, 8, 1), int16] */;
    %637 = reshape(%634, newshape=[4, 8, 11]) /* ty=Tensor[(4, 8, 11), int16] */;
    %638 = reshape(%635, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %639 = @func_4669(%636, %637, %638) /* ty=(Tensor[(4, 8, 11), int16], Tensor[(7, 8, 10), float32], Tensor[(630), float64], Tensor[(4, 8, 546), float64]) */;
    %640 = cast(%var_13349, dtype="int8") /* ty=Tensor[(1008), int8] */;
    %641 = reshape(%640, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int8] */;
    %642 = @func_2422(%641) /* ty=(Tensor[(7, 9, 16), int8],) */;
    %643 = cast(%628, dtype="bool") /* ty=Tensor[(65, 11), bool] */;
    %644 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(65, 11), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %645 = cast(meta[relay.Constant][34] /* ty=Tensor[(65, 11), float32] */, dtype="bool") /* ty=Tensor[(65, 11), bool] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %647 = bitwise_xor(%631, %632) /* ty=Tensor[(65, 11), uint32] */;
    %648 = %639.0;
    %649 = %642.0;
    %650 = logical_and(%645, %646) /* ty=Tensor[(65, 11), bool] */;
    (%647, %648, %var_13343, meta[relay.Constant][35] /* ty=Tensor[(352), int16] */, %var_13345, %649, %var_13349, %650)
  };
  %651(%var_13386, %var_13387, %var_13388) /* ty=(Tensor[(65, 11), uint32], Tensor[(4, 8, 11), int16], Tensor[(32), int16], Tensor[(352), int16], Tensor[(546), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8], Tensor[(65, 11), bool]) */
}

def @func_1369(%var_1335: Tensor[(3, 15, 14), float64], %var_1341: int64, %var_1347: Tensor[(546), float32]) -> (Tensor[(3, 15, 14), float64], Tensor[(11, 1, 6), int64], int64, Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(14, 13, 3), float32]) {
  %652 = cast(%var_1335, dtype="float64") /* ty=Tensor[(3, 15, 14), float64] */;
  %653 = cast(%var_1341, dtype="int64") /* ty=int64 */;
  %654 = reshape(%653, newshape=[]) /* ty=int64 */;
  %655 = @func_1207(%654) /* ty=(Tensor[(11, 1, 6), int64],) */;
  %656 = cast(%var_1347, dtype="float32") /* ty=Tensor[(546), float32] */;
  %657 = reshape(%656, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %658 = cast(meta[relay.Constant][36] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %659 = reshape(%658, newshape=[2, 15, 12]) /* ty=Tensor[(2, 15, 12), float64] */;
  %660 = @func_373(%659) /* ty=(Tensor[(2, 15, 12), float64],) */;
  %661 = cast(%var_1347, dtype="float32") /* ty=Tensor[(546), float32] */;
  %662 = reshape(%661, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
  %663 = log(%652) /* ty=Tensor[(3, 15, 14), float64] */;
  %664 = %655.0;
  %665 = @func_607(%657) /* ty=Tensor[(14, 13, 3), float32] */;
  %666 = %660.0;
  %667 = @func_607(%662) /* ty=Tensor[(14, 13, 3), float32] */;
  (%663, %664, %var_1341, %665, %var_1347, %666, meta[relay.Constant][36] /* ty=Tensor[(360), float64] */, %667)
}

def @func_8374() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(112), bool]) {
  @func_8372() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(112), bool]) */
}

def @func_10166() -> (Tensor[(7, 8, 10), float32],) {
  @func_10164() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_12514() -> (Tensor[(350), float32], Tensor[(4, 14, 2), float32], Tensor[(7, 8, 10), uint8]) {
  %668 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %669 = @func_9441() /* ty=Tensor[(350), float32] */;
  %670 = %668.1;
  %671 = @func_7039() /* ty=Tensor[(7, 8, 10), uint8] */;
  (%669, %670, %671)
}

def @func_6080() -> Tensor[(65, 11), float32] {
  %672 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %672.0
}

def @func_8417() -> (Tensor[(65, 11), float32],) {
  %673 = @func_5694() /* ty=Tensor[(65, 11), float32] */;
  (%673,)
}

def @func_2658() -> Tensor[(7, 8, 10), float32] {
  %674 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %674.0
}

def @func_6565(%var_6558: Tensor[(13, 6, 2), float64]) -> (Tensor[(13, 6, 2), float64],) {
  %675 = cast(%var_6558, dtype="float64") /* ty=Tensor[(13, 6, 2), float64] */;
  %676 = erf(%675) /* ty=Tensor[(13, 6, 2), float64] */;
  (%676,)
}

def @func_4298() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) {
  @func_4296() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */
}

def @func_970(%var_969: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
  %679 = fn (%var_961: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
    %677 = cast(%var_961, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
    %678 = log(%677) /* ty=Tensor[(4, 14, 2), float32] */;
    (%678,)
  };
  %679(%var_969) /* ty=(Tensor[(4, 14, 2), float32],) */
}

def @func_1064(%var_1062: Tensor[(11, 16, 5), float32]) -> (Tensor[(11, 16, 5), float32],) {
  @func_1061(%var_1062) /* ty=(Tensor[(11, 16, 5), float32],) */
}

def @func_12792() -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), int16], Tensor[(715), float32]) {
  %687 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), int16], Tensor[(715), float32]) {
    %680 = cast(meta[relay.Constant][37] /* ty=Tensor[(715), float32] */, dtype="float32") /* ty=Tensor[(715), float32] */;
    %681 = cast(meta[relay.Constant][37] /* ty=Tensor[(715), float32] */, dtype="float32") /* ty=Tensor[(715), float32] */;
    %682 = reshape(%680, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
    %683 = reshape(%681, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float32] */;
    %684 = @func_2743(%682, %683) /* ty=(Tensor[(11, 5, 13), int16], Tensor[(11, 5, 13), int8]) */;
    %685 = @func_7449() /* ty=Tensor[(7, 8, 10), float32] */;
    %686 = %684.0;
    (%685, %686, meta[relay.Constant][37] /* ty=Tensor[(715), float32] */)
  };
  %687() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), int16], Tensor[(715), float32]) */
}

def @func_3243() -> Tensor[(7, 8, 10), float32] {
  @func_3241() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_8589() -> Tensor[(2, 15, 12), float64] {
  %688 = @func_4722() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */;
  %688.0
}

def @func_12676(%var_12674: Tensor[(12, 8, 3), float64]) -> Tensor[(12, 8, 3), float64] {
  @func_12673(%var_12674) /* ty=Tensor[(12, 8, 3), float64] */
}

def @func_5088() -> (Tensor[(7, 8, 10), float32],) {
  @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_5211() -> (Tensor[(350), float32], Tensor[(10, 7, 5), float32]) {
  %695 = fn () -> (Tensor[(350), float32], Tensor[(10, 7, 5), float32]) {
    %689 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
    %690 = %689.4;
    %691 = cast(%690, dtype="float32") /* ty=Tensor[(350), float32] */;
    %692 = reshape(%691, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float32] */;
    %693 = @func_801(%692) /* ty=(Tensor[(10, 7, 5), float32],) */;
    %694 = %693.0;
    (%690, %694)
  };
  %695() /* ty=(Tensor[(350), float32], Tensor[(10, 7, 5), float32]) */
}

def @func_5245() -> (Tensor[(65, 11), float32],) {
  @func_5243() /* ty=(Tensor[(65, 11), float32],) */
}

def @func_1210(%var_1208: int64) -> (Tensor[(11, 1, 6), int64],) {
  @func_1207(%var_1208) /* ty=(Tensor[(11, 1, 6), int64],) */
}

def @func_10164() -> (Tensor[(7, 8, 10), float32],) {
  %696 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %697 = %696.0;
  (%697,)
}

def @func_12311() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(7, 8, 10), float32]) {
  @func_12309() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_12350() -> (Tensor[(4, 14, 2), float32], Tensor[(4, 8, 546), float64], Tensor[(32), int16], Tensor[(352), int16], Tensor[(546), float32]) {
  @func_12348() /* ty=(Tensor[(4, 14, 2), float32], Tensor[(4, 8, 546), float64], Tensor[(32), int16], Tensor[(352), int16], Tensor[(546), float32]) */
}

def @func_12547() -> (Tensor[(2, 15, 12), int64],) {
  %700 = fn () -> (Tensor[(2, 15, 12), int64],) {
    %698 = @func_11279() /* ty=(Tensor[(2, 15, 12), int64], Tensor[(8, 9, 9), uint8]) */;
    %699 = %698.0;
    (%699,)
  };
  %700() /* ty=(Tensor[(2, 15, 12), int64],) */
}

def @func_10293(%var_10291: Tensor[(432), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(9, 16, 3), float64], Tensor[(432), float64], Tensor[(7, 8, 10), float32]) {
  @func_10290(%var_10291) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(9, 16, 3), float64], Tensor[(432), float64], Tensor[(7, 8, 10), float32]) */
}

def @func_12887() -> (Tensor[(112), bool],) {
  %703 = fn () -> (Tensor[(112), bool],) {
    %701 = @func_11454() /* ty=(Tensor[(112), bool],) */;
    %702 = %701.0;
    (%702,)
  };
  %703() /* ty=(Tensor[(112), bool],) */
}

def @func_11135() -> (Tensor[(112), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float64]) {
  %708 = fn () -> (Tensor[(112), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float64]) {
    %704 = @func_9355() /* ty=(Tensor[(65, 11), float64],) */;
    %705 = @func_6889() /* ty=Tensor[(112), float32] */;
    %706 = @func_8589() /* ty=Tensor[(2, 15, 12), float64] */;
    %707 = %704.0;
    (%705, %706, %707)
  };
  %708() /* ty=(Tensor[(112), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float64]) */
}

def @func_7131(%var_7129: Tensor[(65, 11), float32]) -> Tensor[(65, 11), uint8] {
  @func_7128(%var_7129) /* ty=Tensor[(65, 11), uint8] */
}

def @func_12111() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %712 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
    %709 = @func_8733() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %710 = %709.2;
    %711 = @func_10143() /* ty=Tensor[(7, 8, 10), float32] */;
    (%710, %711)
  };
  %712() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_10335() -> Tensor[(7, 8, 10), float32] {
  @func_8612() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_2479() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %713 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %714 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %715 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %716 = %713.0;
  %717 = %714.0;
  %718 = %715.0;
  (%716, %717, %718)
}

def @func_7201() -> (Tensor[(7, 8, 10), float32],) {
  %721 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %719 = @func_5881() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %720 = %719.0;
    (%720,)
  };
  %721() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_6568(%var_6566: Tensor[(13, 6, 2), float64]) -> (Tensor[(13, 6, 2), float64],) {
  @func_6565(%var_6566) /* ty=(Tensor[(13, 6, 2), float64],) */
}

def @func_12988() -> Tensor[(7, 8, 10), float32] {
  %722 = fn () -> Tensor[(7, 8, 10), float32] {
    @func_3051() /* ty=Tensor[(7, 8, 10), float32] */
  };
  %722() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_11485(%var_11483: Tensor[(12, 11, 16), float64]) -> (Tensor[(65, 11), int8], Tensor[(12, 11, 16), int32]) {
  @func_11482(%var_11483) /* ty=(Tensor[(65, 11), int8], Tensor[(12, 11, 16), int32]) */
}

def @func_8734() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %728 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
    %723 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %724 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %725 = %723.1;
    %726 = @func_2658() /* ty=Tensor[(7, 8, 10), float32] */;
    %727 = %724.0;
    (%725, %726, %727)
  };
  %728() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_8557(%var_8553: float64, %var_8554: Tensor[(15, 11, 9), float64], %var_8555: Tensor[(12, 13, 15), uint64], %var_8556: Tensor[(112), float32]) -> (Tensor[(15, 11, 9), float64], Tensor[(1680), float64], Tensor[(12, 13, 15), int32], Tensor[(440, 2), float32], Tensor[(112), float32]) {
  %749 = fn (%var_8513: float64, %var_8514: Tensor[(15, 11, 9), float64], %var_8533: Tensor[(12, 13, 15), uint64], %var_8544: Tensor[(112), float32]) -> (Tensor[(15, 11, 9), float64], Tensor[(1680), float64], Tensor[(12, 13, 15), int32], Tensor[(440, 2), float32], Tensor[(112), float32]) {
    %729 = cast(%var_8513, dtype="float64") /* ty=float64 */;
    %730 = cast(%var_8514, dtype="float64") /* ty=Tensor[(15, 11, 9), float64] */;
    %731 = cast(meta[relay.Constant][38] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %732 = cast(meta[relay.Constant][38] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %733 = cast(%var_8513, dtype="uint64") /* ty=uint64 */;
    %734 = reshape(%731, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
    %735 = reshape(%732, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
    %736 = reshape(%733, newshape=[]) /* ty=uint64 */;
    %737 = @func_3748(%734, %735, %736) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64]) */;
    %738 = %737.2;
    %739 = cast(%738, dtype="int32") /* ty=int32 */;
    %740 = cast(%var_8533, dtype="int32") /* ty=Tensor[(12, 13, 15), int32] */;
    %741 = cast(%var_8513, dtype="uint64") /* ty=uint64 */;
    %742 = cast(%var_8544, dtype="float32") /* ty=Tensor[(112), float32] */;
    %743 = reshape(%741, newshape=[]) /* ty=uint64 */;
    %744 = reshape(%742, newshape=[112]) /* ty=Tensor[(112), float32] */;
    %745 = @func_4516(%743, %744) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(440, 2), float32], Tensor[(14, 16, 14), uint64], uint64, Tensor[(3136), uint64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(11, 16, 5), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
    %746 = add(%729, %730) /* ty=Tensor[(15, 11, 9), float64] */;
    %747 = minimum(%739, %740) /* ty=Tensor[(12, 13, 15), int32] */;
    %748 = %745.2;
    (%746, meta[relay.Constant][38] /* ty=Tensor[(1680), float64] */, %747, %748, %var_8544)
  };
  %749(%var_8553, %var_8554, %var_8555, %var_8556) /* ty=(Tensor[(15, 11, 9), float64], Tensor[(1680), float64], Tensor[(12, 13, 15), int32], Tensor[(440, 2), float32], Tensor[(112), float32]) */
}

def @func_6365(%var_6364: Tensor[(9, 16, 3), float64]) -> Tensor[(9, 16, 3), float64] {
  %751 = fn (%var_6359: Tensor[(9, 16, 3), float64]) -> Tensor[(9, 16, 3), float64] {
    %750 = cast(%var_6359, dtype="float64") /* ty=Tensor[(9, 16, 3), float64] */;
    log2(%750) /* ty=Tensor[(9, 16, 3), float64] */
  };
  %751(%var_6364) /* ty=Tensor[(9, 16, 3), float64] */
}

def @func_7028() -> (Tensor[(11, 5, 13), float32],) {
  %752 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %753 = %752.1;
  (%753,)
}

def @func_7388(%var_7386: Tensor[(65, 11), float64], %var_7387: Tensor[(180), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(156), float64], Tensor[(65, 11), bool], Tensor[(4, 14, 2), float32], Tensor[(180), float64], Tensor[(112), float32], Tensor[(65, 11), float64]) {
  %782 = fn (%var_7337: Tensor[(65, 11), float64], %var_7369: Tensor[(180), float64]) -> (Tensor[(13, 6, 2), float64], Tensor[(156), float64], Tensor[(65, 11), bool], Tensor[(4, 14, 2), float32], Tensor[(180), float64], Tensor[(112), float32], Tensor[(65, 11), float64]) {
    %754 = cast(meta[relay.Constant][39] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
    %755 = reshape(%754, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), float64] */;
    %756 = @func_6565(%755) /* ty=(Tensor[(13, 6, 2), float64],) */;
    %757 = @func_7222() /* ty=Tensor[(65, 11), float64] */;
    %758 = cast(%var_7337, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
    %759 = shape_of(%757, dtype="int32") /* ty=Tensor[(2), int32] */;
    %760 = cast(%757, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
    %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %762 = subtract(%760, %761) /* ty=Tensor[(65, 11), int32] */;
    %763 = cast(%762, dtype="bool") /* ty=Tensor[(65, 11), bool] */;
    %764 = shape_of(%757, dtype="int32") /* ty=Tensor[(2), int32] */;
    %765 = cast(%757, dtype="bool") /* ty=Tensor[(65, 11), bool] */;
    %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %767 = cast(%var_7369, dtype="float64") /* ty=Tensor[(180), float64] */;
    %768 = cast(meta[relay.Constant][40] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %769 = reshape(%767, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
    %770 = reshape(%768, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
    %771 = @func_2136(%769, %770) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
    %772 = cast(meta[relay.Constant][41] /* ty=Tensor[(65, 11), float64] */, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
    %773 = shape_of(%757, dtype="int32") /* ty=Tensor[(2), int32] */;
    %774 = cast(%757, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
    %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %776 = floor_mod(%774, %775) /* ty=Tensor[(65, 11), float32] */;
    %777 = cast(%776, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %778 = %756.0;
    %779 = not_equal(%765, %766) /* ty=Tensor[(65, 11), bool] */;
    %780 = %771.1;
    %781 = log(%777) /* ty=Tensor[(65, 11), float64] */;
    (%778, meta[relay.Constant][39] /* ty=Tensor[(156), float64] */, %779, %780, %var_7369, meta[relay.Constant][40] /* ty=Tensor[(112), float32] */, %781)
  };
  %782(%var_7386, %var_7387) /* ty=(Tensor[(13, 6, 2), float64], Tensor[(156), float64], Tensor[(65, 11), bool], Tensor[(4, 14, 2), float32], Tensor[(180), float64], Tensor[(112), float32], Tensor[(65, 11), float64]) */
}

def @func_13094(%var_13093: Tensor[(45), uint8]) -> (Tensor[(7, 8, 10), float32], Tensor[(15, 10, 3), uint8], Tensor[(45), int8]) {
  %794 = fn (%var_13087: Tensor[(45), uint8]) -> (Tensor[(7, 8, 10), float32], Tensor[(15, 10, 3), uint8], Tensor[(45), int8]) {
    %783 = @func_5323() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %784 = cast(meta[relay.Constant][42] /* ty=Tensor[(45), uint8] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
    %785 = reshape(%784, newshape=[15, 1, 3]) /* ty=Tensor[(15, 1, 3), uint8] */;
    %786 = @func_10897(%785) /* ty=(Tensor[(15, 10, 3), uint8],) */;
    %787 = cast(%var_13087, dtype="int8") /* ty=Tensor[(45), int8] */;
    %788 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(45), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %789 = cast(meta[relay.Constant][42] /* ty=Tensor[(45), uint8] */, dtype="int8") /* ty=Tensor[(45), int8] */;
    %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?), int8] */;
    %791 = %783.0;
    %792 = %786.0;
    %793 = logical_xor(%789, %790) /* ty=Tensor[(45), int8] */;
    (%791, %792, %793)
  };
  %794(%var_13093) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(15, 10, 3), uint8], Tensor[(45), int8]) */
}

def @func_7827() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %795 = @func_5756() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %796 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %797 = %795.0;
  %798 = %796.0;
  (%797, %798)
}

def @func_10770() -> (Tensor[(7, 8, 10), float32],) {
  %799 = @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %800 = %799.1;
  (%800,)
}

def @func_10501() -> (Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) {
  %805 = fn () -> (Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) {
    %801 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
    %802 = @func_7881() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %803 = %801.1;
    %804 = %802.0;
    (%803, %804)
  };
  %805() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(7, 8, 10), float32]) */
}

def @func_8613() -> Tensor[(7, 8, 10), float32] {
  %806 = fn () -> Tensor[(7, 8, 10), float32] {
    @func_2851() /* ty=Tensor[(7, 8, 10), float32] */
  };
  %806() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_5139() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
  %813 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) {
    %807 = cast(meta[relay.Constant][43] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %808 = reshape(%807, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
    %809 = @func_968(%808) /* ty=(Tensor[(4, 14, 2), float32],) */;
    %810 = @func_3565() /* ty=Tensor[(7, 8, 10), float32] */;
    %811 = @func_2851() /* ty=Tensor[(7, 8, 10), float32] */;
    %812 = %809.0;
    (%810, %811, %812, meta[relay.Constant][43] /* ty=Tensor[(112), float32] */)
  };
  %813() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */
}

def @func_4985() -> (Tensor[(65, 11), float32],) {
  @func_4983() /* ty=(Tensor[(65, 11), float32],) */
}

def @func_8095() -> (Tensor[(7, 8, 10), float32],) {
  @func_8093() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_10648() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %822 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
    %814 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
    %815 = @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */;
    %816 = @func_9566() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %817 = %814.0;
    %818 = @func_6080() /* ty=Tensor[(65, 11), float32] */;
    %819 = %815.2;
    %820 = @func_9249() /* ty=Tensor[(7, 8, 10), float32] */;
    %821 = %816.0;
    (%817, %818, %819, %820, %821)
  };
  %822() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_7599(%var_7598: Tensor[(65, 11), float32]) -> Tensor[(65, 11), int32] {
  %828 = fn (%var_7587: Tensor[(65, 11), float32]) -> Tensor[(65, 11), int32] {
    %823 = @func_5694() /* ty=Tensor[(65, 11), float32] */;
    %824 = cast(%var_7587, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
    %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(2), int32] */;
    %826 = cast(%823, dtype="int32") /* ty=Tensor[(65, 11), int32] */;
    %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    bitwise_and(%826, %827) /* ty=Tensor[(65, 11), int32] */
  };
  %828(%var_7598) /* ty=Tensor[(65, 11), int32] */
}

def @func_2827() -> Tensor[(7, 8, 10), float32] {
  %830 = fn () -> Tensor[(7, 8, 10), float32] {
    %829 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %829.1
  };
  %830() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_12396(%var_12391: Tensor[(10, 8, 2), int32]) -> (Tensor[(10, 8, 2), int32],) {
  %831 = cast(-1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %832 = cast(%var_12391, dtype="int32") /* ty=Tensor[(10, 8, 2), int32] */;
  %833 = right_shift(%831, %832) /* ty=Tensor[(10, 8, 2), int32] */;
  (%833,)
}

def @func_4050(%var_4048: Tensor[(880), float32], %var_4049: int64) -> (Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(880), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(273, 2), float32], Tensor[(273, 2), float32], int64) {
  %853 = fn (%var_4010: Tensor[(880), float32], %var_4044: int64) -> (Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(880), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(273, 2), float32], Tensor[(273, 2), float32], int64) {
    %834 = cast(%var_4010, dtype="float32") /* ty=Tensor[(880), float32] */;
    %835 = reshape(%834, newshape=[11, 16, 5]) /* ty=Tensor[(11, 16, 5), float32] */;
    %836 = @func_1061(%835) /* ty=(Tensor[(11, 16, 5), float32],) */;
    %837 = cast(meta[relay.Constant][44] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %838 = reshape(%837, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
    %839 = @func_3039(%838) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(273, 2), float32]) */;
    %840 = cast(meta[relay.Constant][44] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %841 = reshape(%840, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
    %842 = @func_3039(%841) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(273, 2), float32]) */;
    %843 = cast(%var_4044, dtype="int64") /* ty=int64 */;
    %844 = %839.1;
    %845 = cast(%844, dtype="float32") /* ty=Tensor[(14, 13, 3), float32] */;
    %846 = reshape(%843, newshape=[]) /* ty=int64 */;
    %847 = reshape(%845, newshape=[273, 2]) /* ty=Tensor[(273, 2), float32] */;
    %848 = @func_3623(%846, %847) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(630), float64], int64, Tensor[(273, 2), float32]) */;
    %849 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
    %850 = %836.0;
    %851 = %842.2;
    %852 = %848.4;
    (%849, %850, %var_4010, %844, meta[relay.Constant][44] /* ty=Tensor[(546), float32] */, %851, %852, %var_4044)
  };
  %853(%var_4048, %var_4049) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 16, 5), float32], Tensor[(880), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(273, 2), float32], Tensor[(273, 2), float32], int64) */
}

def @func_3799(%var_3793: Tensor[(7, 8, 10), float32]) -> Tensor[(7, 8, 10), uint8] {
  %854 = @func_2658() /* ty=Tensor[(7, 8, 10), float32] */;
  %855 = cast(%var_3793, dtype="uint8") /* ty=Tensor[(7, 8, 10), uint8] */;
  %856 = shape_of(%854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%854, dtype="uint8") /* ty=Tensor[(7, 8, 10), uint8] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%857, %858) /* ty=Tensor[(7, 8, 10), uint8] */
}

def @func_8968() -> Tensor[(65, 11), float32] {
  @func_6198() /* ty=Tensor[(65, 11), float32] */
}

def @func_2929(%var_2927: Tensor[(630), float64], %var_2928: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], int64, Tensor[(630), float64], Tensor[(546), float32]) {
  %867 = fn (%var_2912: Tensor[(630), float64], %var_2913: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], int64, Tensor[(630), float64], Tensor[(546), float32]) {
    %859 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %860 = cast(%var_2912, dtype="float64") /* ty=Tensor[(630), float64] */;
    %861 = cast(%var_2913, dtype="float32") /* ty=Tensor[(546), float32] */;
    %862 = reshape(%860, newshape=[1, 630]) /* ty=Tensor[(1, 630), float64] */;
    %863 = reshape(%861, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %864 = @func_2504(%862, %863) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(1, 630), float64], int64, Tensor[(546), float32]) */;
    %865 = %859.0;
    %866 = %864.3;
    (%865, %866, %var_2912, %var_2913)
  };
  %867(%var_2927, %var_2928) /* ty=(Tensor[(7, 8, 10), float32], int64, Tensor[(630), float64], Tensor[(546), float32]) */
}

def @func_3868() -> (Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) {
  @func_3866() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_11585() -> (Tensor[(7, 8, 10), float32],) {
  @func_11583() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_6652() -> Tensor[(7, 8, 10), float32] {
  @func_6650() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_6213() -> Tensor[(7, 8, 10), float32] {
  %869 = fn () -> Tensor[(7, 8, 10), float32] {
    %868 = @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %868.0
  };
  %869() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_7045() -> Tensor[(65, 11), float64] {
  @func_7043() /* ty=Tensor[(65, 11), float64] */
}

def @func_6532() -> Tensor[(65, 11), float32] {
  @func_5694() /* ty=Tensor[(65, 11), float32] */
}

def @func_7946() -> Tensor[(65, 11), uint64] {
  @func_7944() /* ty=Tensor[(65, 11), uint64] */
}

def @func_11437() -> (Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) {
  %870 = @func_8088() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546, ?), int16], Tensor[(1, 858), uint8]) */;
  %871 = @func_7039() /* ty=Tensor[(7, 8, 10), uint8] */;
  %872 = %870.0;
  (%871, %872)
}

def @func_8847(%var_8845: Tensor[(15, 3, 14), int32], %var_8846: Tensor[(15, 3, 14), int32]) -> (Tensor[(15, 3, 14), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %881 = fn (%var_8803: Tensor[(15, 3, 14), int32], %var_8804: Tensor[(15, 3, 14), int32]) -> (Tensor[(15, 3, 14), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
    %873 = cast(%var_8804, dtype="int32") /* ty=Tensor[(15, 3, 14), int32] */;
    %874 = shape_of(%var_8803, dtype="int32") /* ty=Tensor[(3), int32] */;
    %875 = cast(%var_8803, dtype="int32") /* ty=Tensor[(15, 3, 14), int32] */;
    %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %877 = @func_3112() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %878 = bitwise_and(%875, %876) /* ty=Tensor[(15, 3, 14), int32] */;
    %879 = %877.0;
    %880 = @func_6650() /* ty=Tensor[(7, 8, 10), float32] */;
    (%878, %879, %880)
  };
  %881(%var_8845, %var_8846) /* ty=(Tensor[(15, 3, 14), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_8970() -> Tensor[(65, 11), float32] {
  @func_8968() /* ty=Tensor[(65, 11), float32] */
}

def @func_10238() -> (Tensor[(7, 8, 10), float32],) {
  %884 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %882 = @func_5881() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %883 = %882.0;
    (%883,)
  };
  %884() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_5757() -> (Tensor[(7, 8, 10), float32],) {
  %887 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %885 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %886 = %885.0;
    (%886,)
  };
  %887() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_6082() -> Tensor[(65, 11), float32] {
  @func_6080() /* ty=Tensor[(65, 11), float32] */
}

def @func_7040() -> Tensor[(7, 8, 10), uint8] {
  %889 = fn () -> Tensor[(7, 8, 10), uint8] {
    %888 = @func_4639() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), uint8]) */;
    %888.2
  };
  %889() /* ty=Tensor[(7, 8, 10), uint8] */
}

def @func_5071() -> (Tensor[(7, 8, 10), float32],) {
  @func_5069() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_4426() -> Tensor[(65, 11), float32] {
  %891 = fn () -> Tensor[(65, 11), float32] {
    %890 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
    %890.0
  };
  %891() /* ty=Tensor[(65, 11), float32] */
}

def @func_3241() -> Tensor[(7, 8, 10), float32] {
  @func_2585() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_5863(%var_5862: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float32]) {
  %918 = fn (%var_5805: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float32]) {
    %892 = cast(%var_5805, dtype="float64") /* ty=Tensor[(360), float64] */;
    %893 = reshape(%892, newshape=[360]) /* ty=Tensor[(360), float64] */;
    %894 = @func_4255(%893) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64], Tensor[(7, 8, 10), uint8]) */;
    %895 = %894.4;
    %896 = cast(%var_5805, dtype="float32") /* ty=Tensor[(360), float32] */;
    %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
    %898 = cast(%895, dtype="float32") /* ty=Tensor[(2, 15, 12), float32] */;
    %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %900 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
    %901 = @func_5138() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
    %902 = cast(meta[relay.Constant][45] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %903 = reshape(%902, newshape=[180, 1]) /* ty=Tensor[(180, 1), float64] */;
    %904 = @func_5372(%903) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(1, 112), float32], Tensor[(180, 1), float64], Tensor[(4, 28), float32]) */;
    %905 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %906 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %907 = @func_4722() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */;
    %908 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
    %909 = @func_3241() /* ty=Tensor[(7, 8, 10), float32] */;
    %910 = floor_divide(%898, %899) /* ty=Tensor[(2, 15, 12), float32] */;
    %911 = %900.2;
    %912 = %901.1;
    %913 = %904.0;
    %914 = %905.0;
    %915 = %906.1;
    %916 = %907.0;
    %917 = %908.0;
    (%909, %910, %911, %912, %913, meta[relay.Constant][45] /* ty=Tensor[(180), float64] */, %914, %915, %916, %917)
  };
  %918(%var_5862) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(65, 11), float32]) */
}

def @func_7449() -> Tensor[(7, 8, 10), float32] {
  @func_2876() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_10001(%var_9999: Tensor[(65, 11), float32]) -> (Tensor[(65, 11), int16],) {
  @func_9998(%var_9999) /* ty=(Tensor[(65, 11), int16],) */
}

def @func_8591() -> Tensor[(2, 15, 12), float64] {
  @func_8589() /* ty=Tensor[(2, 15, 12), float64] */
}

def @func_10045() -> (Tensor[(7, 8, 10), float32],) {
  %921 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %919 = @func_8939() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %920 = %919.0;
    (%920,)
  };
  %921() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_3546() -> (Tensor[(7, 8, 10), float32],) {
  %922 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  (%922,)
}

def @func_7223() -> Tensor[(65, 11), float64] {
  %924 = fn () -> Tensor[(65, 11), float64] {
    %923 = @func_6734() /* ty=(Tensor[(65, 11), float64], Tensor[(11, 5, 13), int8]) */;
    %923.0
  };
  %924() /* ty=Tensor[(65, 11), float64] */
}

def @func_12753() -> (Tensor[(65, 11), uint64], Tensor[(65, 11), float32], Tensor[(2, 15, 12), float64]) {
  %929 = fn () -> (Tensor[(65, 11), uint64], Tensor[(65, 11), float32], Tensor[(2, 15, 12), float64]) {
    %925 = @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */;
    %926 = @func_7944() /* ty=Tensor[(65, 11), uint64] */;
    %927 = @func_8766() /* ty=Tensor[(65, 11), float32] */;
    %928 = %925.1;
    (%926, %927, %928)
  };
  %929() /* ty=(Tensor[(65, 11), uint64], Tensor[(65, 11), float32], Tensor[(2, 15, 12), float64]) */
}

def @func_4983() -> (Tensor[(65, 11), float32],) {
  %930 = @func_4882() /* ty=Tensor[(65, 11), float32] */;
  (%930,)
}

def @func_11504() -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32]) {
  @func_11502() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32]) */
}

def @func_2481() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_6859(%var_6856: Tensor[(2, 2, 3), uint64], %var_6857: Tensor[(715), float32], %var_6858: Tensor[(65, 11), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 2, 3), float32], Tensor[(65, 11), float64], Tensor[(715), float32], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) {
  %955 = fn (%var_6754: Tensor[(2, 2, 3), uint64], %var_6792: Tensor[(715), float32], %var_6833: Tensor[(65, 11), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(2, 2, 3), float32], Tensor[(65, 11), float64], Tensor[(715), float32], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) {
    %931 = @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %932 = cast(meta[relay.Constant][46] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %933 = cast(%var_6754, dtype="uint64") /* ty=Tensor[(2, 2, 3), uint64] */;
    %934 = minimum(%932, %933) /* ty=Tensor[(2, 2, 3), uint64] */;
    %935 = cast(%var_6754, dtype="float32") /* ty=Tensor[(2, 2, 3), float32] */;
    %936 = shape_of(%934, dtype="int32") /* ty=Tensor[(3), int32] */;
    %937 = cast(%934, dtype="float32") /* ty=Tensor[(2, 2, 3), float32] */;
    %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %939 = cast(%var_6792, dtype="float32") /* ty=Tensor[(715), float32] */;
    %940 = reshape(%939, newshape=[65, 11]) /* ty=Tensor[(65, 11), float32] */;
    %941 = @func_3418(%940) /* ty=(Tensor[(65, 11), float64],) */;
    %942 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
    %943 = %942.0;
    %944 = cast(%943, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %945 = atan(%944) /* ty=Tensor[(65, 11), float64] */;
    %946 = cast(%var_6833, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
    %947 = shape_of(%945, dtype="int32") /* ty=Tensor[(2), int32] */;
    %948 = cast(%945, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
    %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %950 = %931.2;
    %951 = floor_divide(%937, %938) /* ty=Tensor[(2, 2, 3), float32] */;
    %952 = %941.0;
    %953 = @func_4882() /* ty=Tensor[(65, 11), float32] */;
    %954 = mod(%948, %949) /* ty=Tensor[(65, 11), float32] */;
    (%950, %951, %952, %var_6792, %953, %954)
  };
  %955(%var_6856, %var_6857, %var_6858) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 2, 3), float32], Tensor[(65, 11), float64], Tensor[(715), float32], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) */
}

def @func_13311() -> (Tensor[(7, 8, 10), float32],) {
  %958 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %956 = @func_10400() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */;
    %957 = %956.0;
    (%957,)
  };
  %958() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_12205() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(350), float32]) {
  %959 = @func_8939() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %960 = @func_11529() /* ty=(Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */;
  %961 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
  %962 = %961.4;
  %963 = cast(%962, dtype="float32") /* ty=Tensor[(350), float32] */;
  %964 = %959.0;
  %965 = %960.2;
  %966 = atan(%963) /* ty=Tensor[(350), float32] */;
  (%964, %965, %966)
}

def @func_7650() -> Tensor[(65, 11), float32] {
  @func_4425() /* ty=Tensor[(65, 11), float32] */
}

def @func_10541() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %971 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
    %967 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %968 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %969 = %967.0;
    %970 = %968.0;
    (%969, %970)
  };
  %971() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_6698() -> (Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) {
  %983 = fn () -> (Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) {
    %972 = @func_3866() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) */;
    %973 = cast(-5.2426f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %974 = reshape(%973, newshape=[]) /* ty=float32 */;
    %975 = @func_5509(%974) /* ty=(Tensor[(1, 9, 9), float32], Tensor[(1, 9, 9), float64]) */;
    %976 = %975.1;
    %977 = cast(%976, dtype="uint8") /* ty=Tensor[(1, 9, 9), uint8] */;
    %978 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 9, 9), float64] */, dtype="uint8") /* ty=Tensor[(8, 9, 9), uint8] */;
    %979 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
    %980 = %972.3;
    %981 = bitwise_and(%977, %978) /* ty=Tensor[(8, 9, 9), uint8] */;
    %982 = %979.0;
    (%980, -5.2426f /* ty=float32 */, %981, %982)
  };
  %983() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */
}

def @func_7944() -> Tensor[(65, 11), uint64] {
  %984 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %985 = %984.0;
  %986 = cast(meta[relay.Constant][48] /* ty=Tensor[(65, 11), float32] */, dtype="uint64") /* ty=Tensor[(65, 11), uint64] */;
  %987 = shape_of(%985, dtype="int32") /* ty=Tensor[(2), int32] */;
  %988 = cast(%985, dtype="uint64") /* ty=Tensor[(65, 11), uint64] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  add(%988, %989) /* ty=Tensor[(65, 11), uint64] */
}

def @func_10672() -> (Tensor[(7, 8, 10), float32], Tensor[(8, 9, 9), uint8]) {
  %990 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %991 = @func_6697() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */;
  %992 = %990.1;
  %993 = %991.2;
  (%992, %993)
}

def @func_11014() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8], Tensor[(1, 715), float64]) {
  %994 = @func_8093() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %995 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 715), float64] */, dtype="float64") /* ty=Tensor[(1, 715), float64] */;
  %996 = reshape(%995, newshape=[65, 11]) /* ty=Tensor[(65, 11), float64] */;
  %997 = %994.0;
  %998 = @func_9739(%996) /* ty=Tensor[(65, 11), int8] */;
  (%997, %998, meta[relay.Constant][49] /* ty=Tensor[(1, 715), float64] */)
}

def @func_11754(%var_11751: Tensor[(1536), float64]) -> (Tensor[(2, 15, 12), int64], Tensor[(7, 8, 10), float32], int64, Tensor[(1536), float64]) {
  %999 = @func_11279() /* ty=(Tensor[(2, 15, 12), int64], Tensor[(8, 9, 9), uint8]) */;
  %1000 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1001 = cast(%var_11751, dtype="float64") /* ty=Tensor[(1536), float64] */;
  %1002 = reshape(%1000, newshape=[]) /* ty=int64 */;
  %1003 = reshape(%1001, newshape=[1536]) /* ty=Tensor[(1536), float64] */;
  %1004 = @func_9799(%1002, %1003) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], int64, Tensor[(91, 6), float32], Tensor[(8, 16, 12), float64], Tensor[(1536), float64], Tensor[(7, 8, 10), float32]) */;
  %1005 = %999.0;
  %1006 = %1004.1;
  (%1005, %1006, 1 /* ty=int64 */, %var_11751)
}

def @func_2877() -> Tensor[(7, 8, 10), float32] {
  %1008 = fn () -> Tensor[(7, 8, 10), float32] {
    %1007 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %1007.0
  };
  %1008() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_6163() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) {
  @func_6161() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) */
}

def @func_13176() -> (Tensor[(65, 11), float32],) {
  %1011 = fn () -> (Tensor[(65, 11), float32],) {
    %1009 = @func_6697() /* ty=(Tensor[(7, 8, 10), float32], float32, Tensor[(8, 9, 9), uint8], Tensor[(65, 11), float32]) */;
    %1010 = %1009.3;
    (%1010,)
  };
  %1011() /* ty=(Tensor[(65, 11), float32],) */
}

def @func_5882() -> (Tensor[(7, 8, 10), float32],) {
  %1014 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %1012 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %1013 = %1012.0;
    (%1013,)
  };
  %1014() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_3420(%var_3419: Tensor[(65, 11), float32]) -> (Tensor[(65, 11), float64],) {
  %1022 = fn (%var_3407: Tensor[(65, 11), float32]) -> (Tensor[(65, 11), float64],) {
    %1015 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
    %1016 = %1015.0;
    %1017 = cast(%var_3407, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1019 = cast(%1016, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1021 = divide(%1019, %1020) /* ty=Tensor[(65, 11), float64] */;
    (%1021,)
  };
  %1022(%var_3419) /* ty=(Tensor[(65, 11), float64],) */
}

def @func_3114() -> (Tensor[(7, 8, 10), float32],) {
  @func_3112() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_2139(%var_2137: Tensor[(5, 6, 6), float64], %var_2138: Tensor[(1, 112), float32]) -> (Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) {
  %1029 = fn (%var_2128: Tensor[(5, 6, 6), float64], %var_2132: Tensor[(1, 112), float32]) -> (Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) {
    %1023 = cast(%var_2128, dtype="float64") /* ty=Tensor[(5, 6, 6), float64] */;
    %1024 = cast(%var_2132, dtype="float32") /* ty=Tensor[(1, 112), float32] */;
    %1025 = reshape(%1024, newshape=[4, 14, 2]) /* ty=Tensor[(4, 14, 2), float32] */;
    %1026 = @func_968(%1025) /* ty=(Tensor[(4, 14, 2), float32],) */;
    %1027 = exp(%1023) /* ty=Tensor[(5, 6, 6), float64] */;
    %1028 = %1026.0;
    (%1027, %1028, %var_2132)
  };
  %1029(%var_2137, %var_2138) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */
}

def @func_6161() -> (Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64]) {
  %1030 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %1031 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %1032 = %1030.0;
  %1033 = %1031.1;
  (%1032, %1033)
}

def @func_2655() -> (Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) {
  @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */
}

def @func_610(%var_608: Tensor[(14, 13, 3), float32]) -> Tensor[(14, 13, 3), float32] {
  @func_607(%var_608) /* ty=Tensor[(14, 13, 3), float32] */
}

def @func_803(%var_802: Tensor[(10, 7, 5), float32]) -> (Tensor[(10, 7, 5), float32],) {
  %1036 = fn (%var_794: Tensor[(10, 7, 5), float32]) -> (Tensor[(10, 7, 5), float32],) {
    %1034 = cast(%var_794, dtype="float32") /* ty=Tensor[(10, 7, 5), float32] */;
    %1035 = atanh(%1034) /* ty=Tensor[(10, 7, 5), float32] */;
    (%1035,)
  };
  %1036(%var_802) /* ty=(Tensor[(10, 7, 5), float32],) */
}

def @func_7030() -> (Tensor[(11, 5, 13), float32],) {
  @func_7028() /* ty=(Tensor[(11, 5, 13), float32],) */
}

def @func_3112() -> (Tensor[(7, 8, 10), float32],) {
  %1037 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
  (%1037,)
}

def @func_11482(%var_11467: Tensor[(12, 11, 16), float64]) -> (Tensor[(65, 11), int8], Tensor[(12, 11, 16), int32]) {
  %1038 = @func_11014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8], Tensor[(1, 715), float64]) */;
  %1039 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 16), float64] */;
  %1040 = cosh(%1039) /* ty=Tensor[(12, 11, 16), float64] */;
  %1041 = cast(%var_11467, dtype="int32") /* ty=Tensor[(12, 11, 16), int32] */;
  %1042 = shape_of(%1040, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(%1040, dtype="int32") /* ty=Tensor[(12, 11, 16), int32] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1045 = %1038.1;
  %1046 = bitwise_or(%1043, %1044) /* ty=Tensor[(12, 11, 16), int32] */;
  (%1045, %1046)
}

def @func_8960() -> (Tensor[(65, 11), float32],) {
  @func_8958() /* ty=(Tensor[(65, 11), float32],) */
}

def @func_9443() -> Tensor[(350), float32] {
  @func_9441() /* ty=Tensor[(350), float32] */
}

def @func_9568() -> (Tensor[(7, 8, 10), float32],) {
  @func_9566() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_10674() -> (Tensor[(7, 8, 10), float32], Tensor[(8, 9, 9), uint8]) {
  @func_10672() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(8, 9, 9), uint8]) */
}

def @func_11583() -> (Tensor[(7, 8, 10), float32],) {
  %1047 = @func_10934() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %1048 = %1047.0;
  (%1048,)
}

def @func_8895(%var_8891: Tensor[(1008), int8]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) {
  %1049 = @func_5069() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %1050 = cast(%var_8891, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %1051 = reshape(%1050, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int8] */;
  %1052 = @func_2422(%1051) /* ty=(Tensor[(7, 9, 16), int8],) */;
  %1053 = %1049.0;
  %1054 = %1052.0;
  (%1053, %1054, %var_8891)
}

def @func_8419() -> (Tensor[(65, 11), float32],) {
  @func_8417() /* ty=(Tensor[(65, 11), float32],) */
}

def @func_12132(%var_12130: Tensor[(1, 6, 7), bool]) -> (Tensor[(6, 6, 7), bool], Tensor[(4, 28), float32], Tensor[(180), float64]) {
  @func_12129(%var_12130) /* ty=(Tensor[(6, 6, 7), bool], Tensor[(4, 28), float32], Tensor[(180), float64]) */
}

def @func_4922(%var_4911: Tensor[(14, 13, 3), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(715), float64], Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float64]) {
  %1055 = @func_2479() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1056 = cast(meta[relay.Constant][51] /* ty=Tensor[(715), float64] */, dtype="float64") /* ty=Tensor[(715), float64] */;
  %1057 = reshape(%1056, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float64] */;
  %1058 = @func_1462(%1057) /* ty=(Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) */;
  %1059 = %1058.2;
  %1060 = cast(%var_4911, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1061 = shape_of(%1059, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(%1059, dtype="float64") /* ty=Tensor[(14, 13, 3), float64] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1064 = %1055.1;
  %1065 = @func_3241() /* ty=Tensor[(7, 8, 10), float32] */;
  %1066 = floor_divide(%1062, %1063) /* ty=Tensor[(14, 13, 3), float64] */;
  (%1064, meta[relay.Constant][51] /* ty=Tensor[(715), float64] */, %1065, %1066)
}

def @func_11186() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %1067 = @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1068 = @func_8401() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1069 = %1067.1;
  %1070 = %1068.1;
  (%1069, %1070)
}

def @func_6200() -> Tensor[(65, 11), float32] {
  @func_6198() /* ty=Tensor[(65, 11), float32] */
}

def @func_2508(%var_2506: Tensor[(1, 630), float64], %var_2507: Tensor[(546), float32]) -> (Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(1, 630), float64], int64, Tensor[(546), float32]) {
  @func_2504(%var_2506, %var_2507) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(546), float32], Tensor[(1, 630), float64], int64, Tensor[(546), float32]) */
}

def @func_11040() -> (Tensor[(4, 14, 2), float32],) {
  %1073 = fn () -> (Tensor[(4, 14, 2), float32],) {
    %1071 = @func_7306() /* ty=(Tensor[(4, 14, 2), float32],) */;
    %1072 = %1071.0;
    (%1072,)
  };
  %1073() /* ty=(Tensor[(4, 14, 2), float32],) */
}

def @func_12656() -> (Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(1008), int8], Tensor[(65, 11), float32], Tensor[(65, 11), float32]) {
  %1074 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
  %1075 = cast(meta[relay.Constant][52] /* ty=Tensor[(1008), int8] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %1076 = reshape(%1075, newshape=[1008]) /* ty=Tensor[(1008), int8] */;
  %1077 = @func_8895(%1076) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 9, 16), int8], Tensor[(1008), int8]) */;
  %1078 = @func_9514() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32]) */;
  %1079 = %1074.0;
  %1080 = %1077.0;
  %1081 = @func_8766() /* ty=Tensor[(65, 11), float32] */;
  %1082 = %1078.0;
  (%1079, %1080, meta[relay.Constant][52] /* ty=Tensor[(1008), int8] */, %1081, %1082)
}

def @func_2425(%var_2423: Tensor[(7, 9, 16), int8]) -> (Tensor[(7, 9, 16), int8],) {
  @func_2422(%var_2423) /* ty=(Tensor[(7, 9, 16), int8],) */
}

def @func_8940() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %1085 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
    %1083 = @func_2658() /* ty=Tensor[(7, 8, 10), float32] */;
    %1084 = @func_3051() /* ty=Tensor[(7, 8, 10), float32] */;
    (%1083, %1084)
  };
  %1085() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_5408() -> Tensor[(7, 8, 10), float32] {
  %1087 = fn () -> Tensor[(7, 8, 10), float32] {
    %1086 = @func_3401() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %1086.0
  };
  %1087() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_2298(%var_2292: uint64, %var_2293: Tensor[(14, 16, 14), uint64]) -> (Tensor[(14, 16, 14), uint64],) {
  %1088 = cast(%var_2292, dtype="uint64") /* ty=uint64 */;
  %1089 = cast(%var_2293, dtype="uint64") /* ty=Tensor[(14, 16, 14), uint64] */;
  %1090 = logical_xor(%1088, %1089) /* ty=Tensor[(14, 16, 14), uint64] */;
  (%1090,)
}

def @func_3489() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_3487() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_5069() -> (Tensor[(7, 8, 10), float32],) {
  %1091 = @func_3546() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %1092 = %1091.0;
  (%1092,)
}

def @func_8767() -> Tensor[(65, 11), float32] {
  %1094 = fn () -> Tensor[(65, 11), float32] {
    %1093 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
    %1093.0
  };
  %1094() /* ty=Tensor[(65, 11), float32] */
}

def @func_8401() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %1095 = @func_2359() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %1096 = @func_5086() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %1097 = %1095.0;
  %1098 = %1096.0;
  (%1097, %1098)
}

def @func_6534() -> Tensor[(65, 11), float32] {
  @func_6532() /* ty=Tensor[(65, 11), float32] */
}

def @func_10337() -> Tensor[(7, 8, 10), float32] {
  @func_10335() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_11234() -> (Tensor[(4, 14, 2), float32], Tensor[(65, 11), float32]) {
  %1099 = @func_4699() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32]) */;
  %1100 = %1099.1;
  %1101 = cast(%1100, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
  %1102 = @func_9894() /* ty=(Tensor[(65, 11), float32],) */;
  %1103 = tan(%1101) /* ty=Tensor[(4, 14, 2), float32] */;
  %1104 = %1102.0;
  (%1103, %1104)
}

def @func_5324() -> (Tensor[(7, 8, 10), float32],) {
  %1106 = fn () -> (Tensor[(7, 8, 10), float32],) {
    %1105 = @func_2585() /* ty=Tensor[(7, 8, 10), float32] */;
    (%1105,)
  };
  %1106() /* ty=(Tensor[(7, 8, 10), float32],) */
}

def @func_11016() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8], Tensor[(1, 715), float64]) {
  @func_11014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), int8], Tensor[(1, 715), float64]) */
}

def @func_11400() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32]) {
  %1112 = fn () -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32]) {
    %1107 = @func_10540() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %1108 = @func_3866() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(4, 14, 2), float32], Tensor[(112), float32], Tensor[(7, 8, 10), float32]) */;
    %1109 = %1107.1;
    %1110 = @func_8766() /* ty=Tensor[(65, 11), float32] */;
    %1111 = %1108.3;
    (%1109, %1110, %1111)
  };
  %1112() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_2302(%var_2300: uint64, %var_2301: Tensor[(14, 16, 14), uint64]) -> (Tensor[(14, 16, 14), uint64],) {
  @func_2298(%var_2300, %var_2301) /* ty=(Tensor[(14, 16, 14), uint64],) */
}

def @func_2747(%var_2745: Tensor[(11, 5, 13), float32], %var_2746: Tensor[(11, 5, 13), float32]) -> (Tensor[(11, 5, 13), int16], Tensor[(11, 5, 13), int8]) {
  @func_2743(%var_2745, %var_2746) /* ty=(Tensor[(11, 5, 13), int16], Tensor[(11, 5, 13), int8]) */
}

def @func_11658(%var_11655: Tensor[(1, 2, 4), float32], %var_11656: Tensor[(546), float32], %var_11657: Tensor[(630), int32]) -> (Tensor[(?, 2, 4), float64], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(7, 8, 10), float32], Tensor[(630), int32]) {
  %1136 = fn (%var_11605: Tensor[(1, 2, 4), float32], %var_11649: Tensor[(546), float32], %var_11652: Tensor[(630), int32]) -> (Tensor[(?, 2, 4), float64], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(7, 8, 10), float32], Tensor[(630), int32]) {
    %1113 = cast(%var_11605, dtype="float32") /* ty=Tensor[(1, 2, 4), float32] */;
    %1114 = sinh(%1113) /* ty=Tensor[(1, 2, 4), float32] */;
    %1115 = cast(%1114, dtype="float64") /* ty=Tensor[(1, 2, 4), float64] */;
    %1116 = shape_of(%var_11605, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1117 = cast(%var_11605, dtype="float64") /* ty=Tensor[(1, 2, 4), float64] */;
    %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1119 = @func_3014() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %1120 = @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %1121 = %1120.1;
    %1122 = cast(%1121, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
    %1123 = cast(%var_11649, dtype="float32") /* ty=Tensor[(546), float32] */;
    %1124 = reshape(%1123, newshape=[14, 13, 3]) /* ty=Tensor[(14, 13, 3), float32] */;
    %1125 = cast(%var_11652, dtype="int32") /* ty=Tensor[(630), int32] */;
    %1126 = cast(%var_11652, dtype="int32") /* ty=Tensor[(630), int32] */;
    %1127 = reshape(%1125, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
    %1128 = reshape(%1126, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
    %1129 = @func_8844(%1127, %1128) /* ty=(Tensor[(15, 3, 14), int32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %1130 = mod(%1117, %1118) /* ty=Tensor[(?, 2, 4), float64] */;
    %1131 = %1119.1;
    %1132 = acos(%1122) /* ty=Tensor[(65, 11), float32] */;
    %1133 = @func_5268() /* ty=Tensor[(7, 8, 10), float32] */;
    %1134 = @func_607(%1124) /* ty=Tensor[(14, 13, 3), float32] */;
    %1135 = %1129.1;
    (%1130, %1131, %1132, %1133, %1134, %var_11649, %1135, %var_11652)
  };
  %1136(%var_11655, %var_11656, %var_11657) /* ty=(Tensor[(?, 2, 4), float64], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float32], Tensor[(7, 8, 10), float32], Tensor[(14, 13, 3), float32], Tensor[(546), float32], Tensor[(7, 8, 10), float32], Tensor[(630), int32]) */
}

def @func_6410() -> (Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_6408() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_13017(%var_13015: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(360), float64]) {
  @func_13014(%var_13015) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(360), float64]) */
}

def @func_2044(%var_2042: Tensor[(10, 10, 15), uint16]) -> Tensor[(10, 10, 15), bool] {
  @func_2041(%var_2042) /* ty=Tensor[(10, 10, 15), bool] */
}

def @func_13014(%var_13004: Tensor[(360), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(360), float64]) {
  %1137 = @func_11437() /* ty=(Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32]) */;
  %1138 = cast(%var_13004, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1139 = reshape(%1138, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
  %1140 = @func_12694(%1139) /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32], Tensor[(6, 60), float64]) */;
  %1141 = %1137.1;
  %1142 = %1140.0;
  (%1141, %1142, %var_13004)
}

def @func_7652() -> Tensor[(65, 11), float32] {
  @func_7650() /* ty=Tensor[(65, 11), float32] */
}

def @func_10700() -> Tensor[(65, 11), float32] {
  %1144 = fn () -> Tensor[(65, 11), float32] {
    %1143 = @func_8417() /* ty=(Tensor[(65, 11), float32],) */;
    %1143.0
  };
  %1144() /* ty=Tensor[(65, 11), float32] */
}

def @func_11530() -> (Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) {
  %1153 = fn () -> (Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) {
    %1145 = @func_5892() /* ty=(Tensor[(7, 8, 10), uint8],) */;
    %1146 = @func_10237() /* ty=(Tensor[(7, 8, 10), float32],) */;
    %1147 = @func_10400() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */;
    %1148 = %1147.1;
    %1149 = cast(%1148, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %1150 = %1145.0;
    %1151 = %1146.0;
    %1152 = cos(%1149) /* ty=Tensor[(65, 11), float64] */;
    (%1150, %1151, %1152)
  };
  %1153() /* ty=(Tensor[(7, 8, 10), uint8], Tensor[(7, 8, 10), float32], Tensor[(65, 11), float64]) */
}

def @func_8951() -> (Tensor[(65, 11), float32],) {
  %1156 = fn () -> (Tensor[(65, 11), float32],) {
    %1154 = @func_4983() /* ty=(Tensor[(65, 11), float32],) */;
    %1155 = %1154.0;
    (%1155,)
  };
  %1156() /* ty=(Tensor[(65, 11), float32],) */
}

def @func_7699() -> (Tensor[(7, 8, 10), float64], Tensor[(7, 8, 10), float32], Tensor[(112), float32]) {
  %1157 = @func_5069() /* ty=(Tensor[(7, 8, 10), float32],) */;
  %1158 = %1157.0;
  %1159 = cast(%1158, dtype="float64") /* ty=Tensor[(7, 8, 10), float64] */;
  %1160 = log2(%1159) /* ty=Tensor[(7, 8, 10), float64] */;
  %1161 = @func_2876() /* ty=Tensor[(7, 8, 10), float32] */;
  %1162 = @func_6889() /* ty=Tensor[(112), float32] */;
  (%1160, %1161, %1162)
}

def @func_4830(%var_4761: Tensor[(180), float64]) -> (Tensor[(7, 8, 10), float32], Tensor[(180), float64], Tensor[(4, 14, 2), bool], Tensor[(65, 11), float32], Tensor[(360), float64], Tensor[(546), float32], Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  %1163 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1164 = cast(%var_4761, dtype="float64") /* ty=Tensor[(180), float64] */;
  %1165 = cast(meta[relay.Constant][53] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1166 = reshape(%1164, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
  %1167 = reshape(%1165, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
  %1168 = @func_2136(%1166, %1167) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
  %1169 = %1168.1;
  %1170 = cast(meta[relay.Constant][53] /* ty=Tensor[(112), float32] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1171 = shape_of(%1169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1172 = cast(%1169, dtype="bool") /* ty=Tensor[(4, 14, 2), bool] */;
  %1173 = dyn.reshape(%1170, %1171, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1174 = @func_2788() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */;
  %1175 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
  %1176 = %1174.0;
  %1177 = cast(%1176, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
  %1178 = reshape(%1177, newshape=[11, 5, 13]) /* ty=Tensor[(11, 5, 13), float64] */;
  %1179 = @func_1462(%1178) /* ty=(Tensor[(11, 5, 13), float32], Tensor[(11, 1, 6), bool], Tensor[(14, 13, 3), float32], Tensor[(546), float32]) */;
  %1180 = @func_3194() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1181 = %1163.0;
  %1182 = greater_equal(%1172, %1173) /* ty=Tensor[(4, 14, 2), bool] */;
  %1183 = %1175.2;
  %1184 = %1179.3;
  %1185 = %1180.1;
  %1186 = @func_3241() /* ty=Tensor[(7, 8, 10), float32] */;
  (%1181, %var_4761, %1182, %1176, %1183, %1184, %1185, %1186)
}

def @func_2789() -> (Tensor[(65, 11), float32], Tensor[(65, 11), float64]) {
  %1193 = fn () -> (Tensor[(65, 11), float32], Tensor[(65, 11), float64]) {
    %1187 = @func_2653() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(11, 5, 13), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32], Tensor[(350), float32]) */;
    %1188 = %1187.2;
    %1189 = cast(%1188, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
    %1190 = cast(%1188, dtype="float64") /* ty=Tensor[(65, 11), float64] */;
    %1191 = exp(%1189) /* ty=Tensor[(65, 11), float32] */;
    %1192 = asinh(%1190) /* ty=Tensor[(65, 11), float64] */;
    (%1191, %1192)
  };
  %1193() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64]) */
}

def @func_5086() -> (Tensor[(7, 8, 10), float32],) {
  %1194 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_2586() -> Tensor[(7, 8, 10), float32] {
  %1197 = fn () -> Tensor[(7, 8, 10), float32] {
    %1196 = @func_2411() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */;
    %1196.1
  };
  %1197() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_9516() -> (Tensor[(65, 11), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32]) {
  @func_9514() /* ty=(Tensor[(65, 11), float32], Tensor[(65, 11), float64], Tensor[(10, 7, 5), float32]) */
}

def @func_6198() -> Tensor[(65, 11), float32] {
  @func_5694() /* ty=Tensor[(65, 11), float32] */
}

def @func_2422(%var_2417: Tensor[(7, 9, 16), int8]) -> (Tensor[(7, 9, 16), int8],) {
  %1198 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 9, 16), int8] */, dtype="int8") /* ty=Tensor[(7, 9, 16), int8] */;
  %1199 = shape_of(%var_2417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1200 = cast(%var_2417, dtype="int8") /* ty=Tensor[(7, 9, 16), int8] */;
  %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1202 = right_shift(%1200, %1201) /* ty=Tensor[(7, 9, 16), int8] */;
  (%1202,)
}

def @func_8229() -> (Tensor[(65, 11), float32],) {
  %1206 = fn () -> (Tensor[(65, 11), float32],) {
    %1203 = @func_6532() /* ty=Tensor[(65, 11), float32] */;
    %1204 = cast(%1203, dtype="float32") /* ty=Tensor[(65, 11), float32] */;
    %1205 = log10(%1204) /* ty=Tensor[(65, 11), float32] */;
    (%1205,)
  };
  %1206() /* ty=(Tensor[(65, 11), float32],) */
}

def @func_11188() -> (Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) {
  @func_11186() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(7, 8, 10), float32]) */
}

def @func_9441() -> Tensor[(350), float32] {
  %1207 = @func_5210() /* ty=(Tensor[(350), float32], Tensor[(10, 7, 5), float32]) */;
  %1207.0
}

def @func_4723() -> (Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) {
  %1216 = fn () -> (Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) {
    %1208 = @func_3319() /* ty=(Tensor[(7, 8, 10), float32], Tensor[(2, 15, 12), float64], Tensor[(360), float64]) */;
    %1209 = cast(meta[relay.Constant][55] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %1210 = cast(meta[relay.Constant][56] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %1211 = reshape(%1209, newshape=[5, 6, 6]) /* ty=Tensor[(5, 6, 6), float64] */;
    %1212 = reshape(%1210, newshape=[1, 112]) /* ty=Tensor[(1, 112), float32] */;
    %1213 = @func_2136(%1211, %1212) /* ty=(Tensor[(5, 6, 6), float64], Tensor[(4, 14, 2), float32], Tensor[(1, 112), float32]) */;
    %1214 = %1208.1;
    %1215 = %1213.2;
    (%1214, %1215, meta[relay.Constant][55] /* ty=Tensor[(180), float64] */, meta[relay.Constant][56] /* ty=Tensor[(112), float32] */)
  };
  %1216() /* ty=(Tensor[(2, 15, 12), float64], Tensor[(1, 112), float32], Tensor[(180), float64], Tensor[(112), float32]) */
}

def @func_2660() -> Tensor[(7, 8, 10), float32] {
  @func_2658() /* ty=Tensor[(7, 8, 10), float32] */
}

def @func_7128(%var_7120: Tensor[(65, 11), float32]) -> Tensor[(65, 11), uint8] {
  %1217 = @func_4425() /* ty=Tensor[(65, 11), float32] */;
  %1218 = cast(%var_7120, dtype="uint8") /* ty=Tensor[(65, 11), uint8] */;
  %1219 = shape_of(%1217, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1220 = cast(%1217, dtype="uint8") /* ty=Tensor[(65, 11), uint8] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  maximum(%1220, %1221) /* ty=Tensor[(65, 11), uint8] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

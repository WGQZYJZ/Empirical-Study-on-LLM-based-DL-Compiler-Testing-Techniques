==========mod==========
#[version = "0.0.5"]
def @func_17620() -> (Tensor[(7, 3, 10), float32],) {
  %0 = @func_14040() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1 = %0.2;
  (%1,)
}

def @func_7105(%var_7075: Tensor[(5, 11, 1), float64]) -> (Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32]) {
  %2 = @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */;
  %3 = %2.1;
  %4 = cast(%var_7075, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%3, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %8 = not_equal(%6, %7) /* ty=Tensor[(5, 11, ?), bool] */;
  %9 = @func_5095() /* ty=Tensor[(7, 3, 10), float32] */;
  (%8, %9)
}

def @func_4397() -> Tensor[(55), float64] {
  %10 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %10.3
}

def @func_19003(%var_18973: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(5, 11, 1), float64]) {
  %11 = @func_7562() /* ty=(Tensor[(55), float64],) */;
  %12 = cast(%var_18973, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %13 = reshape(%12, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %14 = @func_4809(%13) /* ty=(Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) */;
  %15 = @func_8374() /* ty=Tensor[(7, 3, 10), float32] */;
  %16 = %11.0;
  %17 = %14.13;
  %18 = @func_12462() /* ty=Tensor[(5, 11, 1), float64] */;
  (%15, %16, %17, %var_18973, %18)
}

def @func_8953() -> Tensor[(7, 3, 10), float32] {
  @func_5284() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_6933() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(264), int64]) {
  %19 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %20 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %21 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %22 = @func_4397() /* ty=Tensor[(55), float64] */;
  %23 = %19.0;
  %24 = %20.1;
  %25 = %21.2;
  (%22, %23, %24, %25)
}

def @func_8303() -> Tensor[(7, 3, 10), float32] {
  %26 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %26.0
}

def @func_4920() -> (Tensor[(2688), float32],) {
  %27 = @func_3177() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %28 = %27.2;
  (%28,)
}

def @func_21797(%var_21760: Tensor[(8064), float32]) -> (Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(8064), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %29 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %30 = cast(%var_21760, dtype="float32") /* ty=Tensor[(8064), float32] */;
  %31 = reshape(%30, newshape=[3, 2688]) /* ty=Tensor[(3, 2688), float32] */;
  %32 = @func_17372(%31) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(1, 2688), float32], Tensor[(3, 2688), uint16]) */;
  %33 = @func_8660() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %34 = @func_11120() /* ty=Tensor[(6, 16, 15), bool] */;
  %35 = %29.0;
  %36 = @func_16208() /* ty=Tensor[(55), float64] */;
  %37 = %32.0;
  %38 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
  %39 = %33.0;
  (%34, %35, %36, %37, %var_21760, %38, %39)
}

def @func_875(%var_861: Tensor[(16, 6, 7), float64], %var_869: Tensor[(55), float64]) -> (Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %40 = cast(%var_861, dtype="float64") /* ty=Tensor[(16, 6, 7), float64] */;
  %41 = cast(%var_869, dtype="float64") /* ty=Tensor[(55), float64] */;
  %42 = reshape(%41, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %43 = asin(%40) /* ty=Tensor[(16, 6, 7), float64] */;
  %44 = @func_413(%42) /* ty=Tensor[(5, 11, 1), float64] */;
  (%43, %44, %var_869)
}

def @func_5335(%var_5333: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32]) {
  %45 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %46 = cast(%var_5333, dtype="float32") /* ty=Tensor[(600), float32] */;
  %47 = reshape(%46, newshape=[300, 2]) /* ty=Tensor[(300, 2), float32] */;
  %48 = @func_4837(%47) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(300, 2), float32], Tensor[(7, 3, 10), float64]) */;
  %49 = %45.0;
  %50 = %48.3;
  (%49, %50, %var_5333)
}

def @func_16262(%var_16239: Tensor[(1296), bool]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool], Tensor[(1344, 2), float32]) {
  %51 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %52 = cast(%var_16239, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %53 = cast(%var_16239, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %54 = reshape(%52, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), bool] */;
  %55 = reshape(%53, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), bool] */;
  %56 = @func_9089(%54, %55) /* ty=(Tensor[(9, 12, 12), bool],) */;
  %57 = %51.0;
  %58 = %56.0;
  %59 = @func_14921() /* ty=Tensor[(1344, 2), float32] */;
  (%57, %58, %var_16239, %59)
}

def @func_3489() -> (Tensor[(7, 3, 10), float32],) {
  %60 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %61 = %60.0;
  (%61,)
}

def @func_10992() -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %62 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %63 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %64 = %62.0;
  %65 = %63.0;
  %66 = @func_4495() /* ty=Tensor[(7, 3, 10), float32] */;
  (%64, %65, %66)
}

def @func_18232() -> Tensor[(7, 3, 10), float32] {
  %67 = @func_9865() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %67.1
}

def @func_17643() -> (Tensor[(5, 11, 1), float64], Tensor[(8, 7, 2), float32]) {
  %68 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %69 = @func_12738() /* ty=Tensor[(8, 7, 2), float64] */;
  %70 = cast(%69, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %71 = %68.0;
  %72 = sinh(%70) /* ty=Tensor[(8, 7, 2), float32] */;
  (%71, %72)
}

def @func_15077() -> (Tensor[(55), float64], Tensor[(5, 11, 2688), bool]) {
  %73 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %74 = @func_8718() /* ty=Tensor[(2688), float32] */;
  %75 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %76 = %75.0;
  %77 = cast(%74, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %78 = cast(%76, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %79 = %73.3;
  %80 = less(%77, %78) /* ty=Tensor[(5, 11, 2688), bool] */;
  (%79, %80)
}

def @func_5284() -> Tensor[(7, 3, 10), float32] {
  %81 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %81.0
}

def @func_6724() -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %82 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %83 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
  %84 = %82.0;
  %85 = %83.0;
  (%84, %85)
}

def @func_2798(%var_2727: Tensor[(1, 2688), float32]) -> (Tensor[(2, 12, 11), int64], Tensor[(2688), float32], Tensor[(1, 2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(55), int32], Tensor[(2688), float32]) {
  %86 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %87 = cast(%var_2727, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %88 = reshape(%87, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %89 = @func_1736(%88) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
  %90 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %91 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %92 = cast(meta[relay.Constant][0] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %93 = reshape(%92, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %94 = @func_2603(%93) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) */;
  %95 = %94.4;
  %96 = cast(%95, dtype="int32") /* ty=Tensor[(5, 11, 1), int32] */;
  %97 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(55), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %98 = cast(meta[relay.Constant][0] /* ty=Tensor[(55), float64] */, dtype="int32") /* ty=Tensor[(55), int32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?), int32] */;
  %100 = cast(%var_2727, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %101 = reshape(%100, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %102 = @func_1736(%101) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
  %103 = %86.6;
  %104 = %89.2;
  %105 = %90.1;
  %106 = %91.0;
  %107 = right_shift(%98, %99) /* ty=Tensor[(55), int32] */;
  %108 = %102.2;
  (%103, %104, %var_2727, %105, %106, %107, %108)
}

def @func_11940() -> (Tensor[(7, 3, 10), float32], Tensor[(13, 10, 10), bool], Tensor[(1300), uint32]) {
  %109 = @func_8430() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %110 = cast(meta[relay.Constant][1] /* ty=Tensor[(1300), uint32] */, dtype="uint32") /* ty=Tensor[(1300), uint32] */;
  %111 = cast(meta[relay.Constant][1] /* ty=Tensor[(1300), uint32] */, dtype="uint32") /* ty=Tensor[(1300), uint32] */;
  %112 = reshape(%110, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), uint32] */;
  %113 = reshape(%111, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), uint32] */;
  %114 = @func_9404(%112, %113) /* ty=(Tensor[(13, 10, 10), bool],) */;
  %115 = %109.0;
  %116 = %114.0;
  (%115, %116, meta[relay.Constant][1] /* ty=Tensor[(1300), uint32] */)
}

def @func_5385() -> Tensor[(7, 3, 10), float32] {
  %117 = @func_3489() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %117.0
}

def @func_5312() -> (Tensor[(7, 3, 10), float32],) {
  %118 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %119 = %118.1;
  (%119,)
}

def @func_13782(%var_13777: Tensor[(1344, 2), float32]) -> (Tensor[(1344, 2), bool],) {
  %120 = @func_5190() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */;
  %121 = %120.2;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(1344, 2), float64] */;
  %123 = log(%122) /* ty=Tensor[(1344, 2), float64] */;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(1344, 2), float32] */;
  %125 = log2(%124) /* ty=Tensor[(1344, 2), float32] */;
  %126 = cast(%var_13777, dtype="bool") /* ty=Tensor[(1344, 2), bool] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(2), int32] */;
  %128 = cast(%125, dtype="bool") /* ty=Tensor[(1344, 2), bool] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %130 = logical_and(%128, %129) /* ty=Tensor[(1344, 2), bool] */;
  (%130,)
}

def @func_4809(%var_4780: Tensor[(2688), float32]) -> (Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) {
  %131 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %134 = cos(%133) /* ty=Tensor[(5, 11, 1), float64] */;
  %135 = cast(%132, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%134, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %139 = cast(%132, dtype="int64") /* ty=Tensor[(5, 11, 1), int64] */;
  %140 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%134, dtype="int64") /* ty=Tensor[(5, 11, 1), int64] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %143 = maximum(%141, %142) /* ty=Tensor[(5, 11, ?), int64] */;
  %144 = cast(%134, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="bool") /* ty=Tensor[(5, 11, ?), bool] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %148 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %149 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %150 = @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %151 = cast(%143, dtype="float64") /* ty=Tensor[(5, 11, ?), float64] */;
  %152 = reshape(%151, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %153 = cast(%143, dtype="int64") /* ty=Tensor[(5, 11, ?), int64] */;
  %154 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%134, dtype="int64") /* ty=Tensor[(5, 11, 1), int64] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %157 = cast(%var_4780, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %158 = reshape(%157, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %159 = @func_1525(%158) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %160 = cast(%132, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %161 = reshape(%160, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %162 = @func_2603(%161) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) */;
  %163 = cast(meta[relay.Constant][2] /* ty=Tensor[(264, 1), int64] */, dtype="int64") /* ty=Tensor[(264, 1), int64] */;
  %164 = reshape(%163, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
  %165 = @func_3393(%164) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) */;
  %166 = cast(%132, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %167 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%134, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %170 = floor_mod(%168, %169) /* ty=Tensor[(5, 11, ?), float64] */;
  %171 = cast(%170, dtype="bool") /* ty=Tensor[(5, 11, ?), bool] */;
  %172 = cast(%var_4780, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %173 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %174 = floor_divide(%137, %138) /* ty=Tensor[(5, 11, ?), float64] */;
  %175 = @func_4381() /* ty=Tensor[(7, 3, 10), float32] */;
  %176 = logical_and(%146, %147) /* ty=Tensor[(5, 11, ?), bool] */;
  %177 = %148.0;
  %178 = %149.0;
  %179 = %150.0;
  %180 = @func_413(%152) /* ty=Tensor[(5, 11, 1), float64] */;
  %181 = right_shift(%155, %156) /* ty=Tensor[(5, 11, ?), int64] */;
  %182 = %159.2;
  %183 = %162.3;
  %184 = %165.3;
  %185 = greater_equal(%171, %172) /* ty=Tensor[(5, 11, 2688), bool] */;
  %186 = %173.0;
  (%174, %175, %176, %177, %178, %179, %180, %181, %182, %183, %184, meta[relay.Constant][2] /* ty=Tensor[(264, 1), int64] */, %185, %186)
}

def @func_16386() -> Tensor[(7, 3, 10), float32] {
  %187 = @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */;
  %187.1
}

def @func_15183() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  %188 = @func_13357() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) */;
  %189 = @func_13134() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %190 = @func_8901() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
  %191 = %188.0;
  %192 = %189.1;
  %193 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  %194 = %190.0;
  (%191, %192, %193, %194)
}

def @func_9008() -> (Tensor[(7, 3, 10), float32],) {
  %195 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  (%195,)
}

def @func_14261(%var_14240: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(1, 264), int64]) {
  %196 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %197 = cast(%var_14240, dtype="float64") /* ty=Tensor[(55), float64] */;
  %198 = reshape(%197, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %199 = @func_13612() /* ty=(Tensor[(1, 264), int64],) */;
  %200 = %196.0;
  %201 = @func_13058() /* ty=Tensor[(7, 3, 10), float32] */;
  %202 = @func_413(%198) /* ty=Tensor[(5, 11, 1), float64] */;
  %203 = %199.0;
  (%200, %201, %202, %var_14240, %203)
}

def @func_3037() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %204 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %205 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %206 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %207 = %204.0;
  %208 = %205.2;
  %209 = %206.3;
  (%207, %208, %209)
}

def @func_14773() -> (Tensor[(7, 3, 10), float32],) {
  %210 = @func_14694() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %211 = %210.0;
  (%211,)
}

def @func_13834() -> (Tensor[(7, 3, 10), float32],) {
  %212 = @func_2284() /* ty=Tensor[(7, 3, 10), float32] */;
  (%212,)
}

def @func_22411() -> (Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64]) {
  %213 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %214 = %213.2;
  %215 = @func_12118() /* ty=Tensor[(5, 11, 1), float64] */;
  (%214, %215)
}

def @func_4941() -> (Tensor[(7, 3, 10), float32],) {
  %216 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %217 = %216.0;
  (%217,)
}

def @func_5923() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %218 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %219 = %218.0;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %221 = sinh(%220) /* ty=Tensor[(5, 11, 1), float64] */;
  %222 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  %223 = @func_4397() /* ty=Tensor[(55), float64] */;
  (%221, %222, %223)
}

def @func_21677() -> (Tensor[(5, 11, 1), float64],) {
  %224 = @func_15353() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %225 = %224.0;
  (%225,)
}

def @func_1953() -> Tensor[(7, 3, 10), float32] {
  @func_1673() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_13751() -> Tensor[(7, 3, 10), float32] {
  %226 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %226.1
}

def @func_17314() -> Tensor[(5, 11, 1), float64] {
  @func_16417() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_5190() -> (Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) {
  %227 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %228 = cast(meta[relay.Constant][3] /* ty=Tensor[(1344, 2), float32] */, dtype="float32") /* ty=Tensor[(1344, 2), float32] */;
  %229 = reshape(%228, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %230 = @func_1736(%229) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
  %231 = %227.0;
  %232 = %230.1;
  (%231, %232, meta[relay.Constant][3] /* ty=Tensor[(1344, 2), float32] */)
}

def @func_2603(%var_2594: Tensor[(55), float64]) -> (Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) {
  %233 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
  %234 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(12, 4, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %237 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %238 = cast(%var_2594, dtype="float64") /* ty=Tensor[(55), float64] */;
  %239 = reshape(%238, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %240 = @func_1440(%239) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %241 = cast(%var_2594, dtype="float64") /* ty=Tensor[(55), float64] */;
  %242 = reshape(%241, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %243 = add(%235, %236) /* ty=Tensor[(12, 4, 13), float64] */;
  %244 = %237.1;
  %245 = %240.0;
  %246 = @func_413(%242) /* ty=Tensor[(5, 11, 1), float64] */;
  (%243, %244, %245, %var_2594, %246)
}

def @func_11521(%var_11516: Tensor[(2, 320), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(8, 16, 5), float64], Tensor[(2, 320), float64]) {
  %247 = @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %248 = @func_11349() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %249 = cast(%var_11516, dtype="float64") /* ty=Tensor[(2, 320), float64] */;
  %250 = reshape(%249, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), float64] */;
  %251 = %247.1;
  %252 = %248.0;
  %253 = @func_6169() /* ty=Tensor[(55), float64] */;
  %254 = @func_4609(%250) /* ty=Tensor[(8, 16, 5), float64] */;
  (%251, %252, %253, %254, %var_11516)
}

def @func_6878() -> (Tensor[(7, 3, 10), float32],) {
  %255 = @func_5284() /* ty=Tensor[(7, 3, 10), float32] */;
  (%255,)
}

def @func_8386() -> Tensor[(2688), float32] {
  %256 = @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */;
  %256.2
}

def @func_6169() -> Tensor[(55), float64] {
  %257 = @func_6076() /* ty=(Tensor[(55), float64],) */;
  %257.0
}

def @func_7760(%var_7721: Tensor[(6, 16, 15), int64], %var_7722: Tensor[(6, 16, 15), int64]) -> (Tensor[(6, 16, 15), int64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %258 = cast(%var_7722, dtype="int64") /* ty=Tensor[(6, 16, 15), int64] */;
  %259 = shape_of(%var_7721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%var_7721, dtype="int64") /* ty=Tensor[(6, 16, 15), int64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %262 = @func_4973() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %263 = @func_7562() /* ty=(Tensor[(55), float64],) */;
  %264 = bitwise_and(%260, %261) /* ty=Tensor[(6, 16, 15), int64] */;
  %265 = %262.1;
  %266 = @func_5385() /* ty=Tensor[(7, 3, 10), float32] */;
  %267 = %263.0;
  (%264, %265, %266, %267)
}

def @func_10813() -> Tensor[(7, 3, 10), float32] {
  %268 = @func_6103() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) */;
  %268.0
}

def @func_12738() -> Tensor[(8, 7, 2), float64] {
  %269 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 7, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 2), float64] */;
  asinh(%269) /* ty=Tensor[(8, 7, 2), float64] */
}

def @func_18276() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %270 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %271 = %270.0;
  %272 = @func_4397() /* ty=Tensor[(55), float64] */;
  (%271, %272)
}

def @func_19876() -> (Tensor[(7, 3, 10), float32],) {
  %273 = @func_12316() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */;
  %274 = %273.0;
  (%274,)
}

def @func_14363() -> Tensor[(7, 3, 10), float32] {
  @func_12917() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_3462() -> (Tensor[(1, 2688), float32],) {
  %275 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %276 = %275.4;
  (%276,)
}

def @func_13713() -> (Tensor[(7, 3, 10), float32],) {
  %277 = @func_9865() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %278 = %277.0;
  (%278,)
}

def @func_10198() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), float32]) {
  %279 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %280 = @func_5726() /* ty=(Tensor[(5, 11, ?), float32],) */;
  %281 = %279.0;
  %282 = %280.0;
  (%281, %282)
}

def @func_16644(%var_16638: Tensor[(8, 7, 2), float64]) -> (Tensor[(8, 7, 2), uint32],) {
  %283 = @func_16271() /* ty=Tensor[(8, 7, 2), float64] */;
  %284 = cast(%var_16638, dtype="uint32") /* ty=Tensor[(8, 7, 2), uint32] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="uint32") /* ty=Tensor[(8, 7, 2), uint32] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %288 = right_shift(%286, %287) /* ty=Tensor[(8, 7, 2), uint32] */;
  (%288,)
}

def @func_7920(%var_7840: Tensor[(8, 11, 6), float32]) -> (Tensor[(8, 11, 6), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(55), float64], Tensor[(7, 3, 10), float64]) {
  %289 = cast(%var_7840, dtype="float32") /* ty=Tensor[(8, 11, 6), float32] */;
  %290 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %291 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %292 = cast(meta[relay.Constant][7] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %293 = reshape(%292, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %294 = @func_7105(%293) /* ty=(Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32]) */;
  %295 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %296 = %295.0;
  %297 = cast(%296, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %298 = sin(%289) /* ty=Tensor[(8, 11, 6), float32] */;
  %299 = %290.0;
  %300 = %291.0;
  %301 = %294.0;
  %302 = sqrt(%297) /* ty=Tensor[(7, 3, 10), float64] */;
  (%298, %299, %300, %301, meta[relay.Constant][7] /* ty=Tensor[(55), float64] */, %302)
}

def @func_3896(%var_3875: Tensor[(600, 1), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(600, 1), float64]) {
  %303 = @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %304 = cast(%var_3875, dtype="float32") /* ty=Tensor[(600, 1), float32] */;
  %305 = reshape(%304, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), float32] */;
  %306 = @func_3668(%305) /* ty=(Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) */;
  %307 = cast(%var_3875, dtype="float64") /* ty=Tensor[(600, 1), float64] */;
  %308 = %303.0;
  %309 = %306.1;
  %310 = sin(%307) /* ty=Tensor[(600, 1), float64] */;
  (%308, %309, %310)
}

def @func_6503() -> (Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(600), float32]) {
  %311 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %312 = cast(meta[relay.Constant][8] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %313 = reshape(%312, newshape=[6, 100]) /* ty=Tensor[(6, 100), float32] */;
  %314 = @func_5478(%313) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 100), float32]) */;
  %315 = %311.0;
  %316 = %314.3;
  (%315, %316, meta[relay.Constant][8] /* ty=Tensor[(600), float32] */)
}

def @func_19163() -> Tensor[(55), float64] {
  @func_18793() /* ty=Tensor[(55), float64] */
}

def @func_21099() -> (Tensor[(7, 3, 10), float64],) {
  %317 = @func_15921() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
  %318 = %317.3;
  (%318,)
}

def @func_8357() -> Tensor[(9, 1, 10), float32] {
  %319 = cast(meta[relay.Constant][9] /* ty=Tensor[(9, 1, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 10), float32] */;
  log10(%319) /* ty=Tensor[(9, 1, 10), float32] */
}

def @func_18144() -> (Tensor[(7, 3, 10), float32],) {
  %320 = @func_2284() /* ty=Tensor[(7, 3, 10), float32] */;
  (%320,)
}

def @func_13861() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %321 = cast(meta[relay.Constant][10] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %322 = reshape(%321, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %323 = @func_7105(%322) /* ty=(Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32]) */;
  %324 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  %325 = %323.1;
  (%324, %325, meta[relay.Constant][10] /* ty=Tensor[(55), float64] */)
}

def @func_19816() -> (Tensor[(7, 3, 10), float32],) {
  %326 = @func_13713() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %327 = %326.0;
  (%327,)
}

def @func_17111() -> (Tensor[(7, 3, 10), float32],) {
  %328 = @func_16386() /* ty=Tensor[(7, 3, 10), float32] */;
  (%328,)
}

def @func_14694() -> (Tensor[(7, 3, 10), float32],) {
  %329 = @func_7528() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %330 = %329.0;
  (%330,)
}

def @func_3060() -> (Tensor[(7, 3, 10), float32],) {
  %331 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %332 = %331.0;
  (%332,)
}

def @func_3441() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
  %333 = @func_3248() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) */;
  %334 = @func_2344() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %335 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %336 = %333.3;
  %337 = %334.0;
  %338 = %335.0;
  (%336, %337, %338)
}

def @func_8660() -> (Tensor[(7, 3, 10), float32],) {
  %339 = @func_6615() /* ty=Tensor[(7, 3, 10), float32] */;
  (%339,)
}

def @func_1281() -> (Tensor[(7, 3, 10), float32],) {
  %340 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  (%340,)
}

def @func_2383() -> (Tensor[(7, 3, 10), float64],) {
  %341 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %342 = %341.1;
  (%342,)
}

def @func_5964() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) {
  %343 = @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %344 = cast(meta[relay.Constant][11] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %345 = reshape(%344, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %346 = @func_1525(%345) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %347 = @func_3648() /* ty=(Tensor[(55), float64],) */;
  %348 = %343.0;
  %349 = %346.1;
  %350 = %347.0;
  (%348, %349, meta[relay.Constant][11] /* ty=Tensor[(2688), float32] */, %350)
}

def @func_9050() -> Tensor[(7, 3, 10), float32] {
  %351 = @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %351.0
}

def @func_6615() -> Tensor[(7, 3, 10), float32] {
  @func_5284() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_11734() -> Tensor[(7, 3, 10), float32] {
  %352 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %352.2
}

def @func_8608(%var_8558: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), int64], Tensor[(600, ?), int32], Tensor[(7, 3, 10), float64]) {
  %353 = @func_7398() /* ty=(Tensor[(7, 3, 10), int64],) */;
  %354 = cast(%var_8558, dtype="float32") /* ty=Tensor[(600), float32] */;
  %355 = reshape(%354, newshape=[600, 1]) /* ty=Tensor[(600, 1), float32] */;
  %356 = @func_3896(%355) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(600, 1), float64]) */;
  %357 = %356.2;
  %358 = cast(%var_8558, dtype="int32") /* ty=Tensor[(600), int32] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(2), int32] */;
  %360 = cast(%357, dtype="int32") /* ty=Tensor[(600, 1), int32] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %362 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %363 = %353.0;
  %364 = logical_xor(%360, %361) /* ty=Tensor[(600, ?), int32] */;
  %365 = %362.0;
  (%363, %364, %365)
}

def @func_2659() -> (Tensor[(7, 3, 10), float32],) {
  %366 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  (%366,)
}

def @func_16841() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %367 = @func_6169() /* ty=Tensor[(55), float64] */;
  %368 = @func_7548() /* ty=Tensor[(7, 3, 10), float32] */;
  (%367, %368)
}

def @func_16930() -> (Tensor[(7, 3, 10), float32],) {
  %369 = @func_13058() /* ty=Tensor[(7, 3, 10), float32] */;
  (%369,)
}

def @func_21001() -> (Tensor[(7, 3, 10), float32],) {
  %370 = @func_12705() /* ty=Tensor[(7, 3, 10), float32] */;
  (%370,)
}

def @func_21539() -> Tensor[(7, 3, 10), int64] {
  %371 = @func_7398() /* ty=(Tensor[(7, 3, 10), int64],) */;
  %371.0
}

def @func_8374() -> Tensor[(7, 3, 10), float32] {
  %372 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %372.0
}

def @func_18846() -> (Tensor[(640), float64],) {
  %373 = @func_11338() /* ty=(Tensor[(2688), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64]) */;
  %374 = %373.2;
  (%374,)
}

def @func_9823() -> Tensor[(5, 11, 1), float64] {
  %375 = @func_5190() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */;
  %375.0
}

def @func_5509(%var_5495: Tensor[(12, 14, 8), int16], %var_5496: Tensor[(12, 14, 8), int16], %var_5504: Tensor[(600), float32]) -> (Tensor[(12, 14, 8), bool], Tensor[(4, 10, 15), float32], Tensor[(600), float32], float32) {
  %376 = cast(%var_5496, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
  %377 = shape_of(%var_5495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%var_5495, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %380 = cast(%var_5504, dtype="float32") /* ty=Tensor[(600), float32] */;
  %381 = reshape(%380, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), float32] */;
  %382 = @func_3668(%381) /* ty=(Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) */;
  %383 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
  %384 = less(%378, %379) /* ty=Tensor[(12, 14, 8), bool] */;
  %385 = %382.0;
  %386 = %383.5;
  (%384, %385, %var_5504, %386)
}

def @func_11120() -> Tensor[(6, 16, 15), bool] {
  %387 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
  %387.1
}

def @func_4191(%var_4183: Tensor[(7, 5, 5), uint32], %var_4184: Tensor[(7, 5, 5), uint32]) -> Tensor[(7, 5, 5), bool] {
  %388 = cast(%var_4184, dtype="bool") /* ty=Tensor[(7, 5, 5), bool] */;
  %389 = shape_of(%var_4183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%var_4183, dtype="bool") /* ty=Tensor[(7, 5, 5), bool] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%390, %391) /* ty=Tensor[(7, 5, 5), bool] */
}

def @func_12624(%var_12619: Tensor[(320, 2), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(9, 1, 10), float32], Tensor[(55), float64], Tensor[(320, 2), float64]) {
  %392 = @func_7480() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %393 = @func_7340() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %394 = cast(%var_12619, dtype="float64") /* ty=Tensor[(320, 2), float64] */;
  %395 = reshape(%394, newshape=[2, 320]) /* ty=Tensor[(2, 320), float64] */;
  %396 = @func_11521(%395) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(8, 16, 5), float64], Tensor[(2, 320), float64]) */;
  %397 = %392.0;
  %398 = %393.0;
  %399 = @func_8357() /* ty=Tensor[(9, 1, 10), float32] */;
  %400 = %396.2;
  (%397, %398, %399, %400, %var_12619)
}

def @func_16400() -> (Tensor[(55), float64],) {
  %401 = @func_7719() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %402 = %401.0;
  (%402,)
}

def @func_12197() -> Tensor[(7, 3, 10), float32] {
  @func_10813() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_8703() -> (Tensor[(672), float64],) {
  %403 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %404 = %403.2;
  (%404,)
}

def @func_13134() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
  %405 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %406 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %407 = %405.0;
  %408 = %406.0;
  (%407, %408)
}

def @func_15331() -> (Tensor[(7, 3, 10), float32],) {
  %409 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  (%409,)
}

def @func_16778(%var_16776: Tensor[(1296), bool]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool]) {
  %410 = @func_10926() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %411 = cast(%var_16776, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %412 = cast(%var_16776, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %413 = reshape(%411, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), bool] */;
  %414 = reshape(%412, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), bool] */;
  %415 = @func_9089(%413, %414) /* ty=(Tensor[(9, 12, 12), bool],) */;
  %416 = %410.0;
  %417 = %415.0;
  (%416, %417, %var_16776)
}

def @func_19224() -> Tensor[(7, 3, 10), float32] {
  @func_18099() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_21633() -> (Tensor[(7, 3, 10), float32],) {
  %418 = @func_16930() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %419 = %418.0;
  (%419,)
}

def @func_15957() -> Tensor[(55), float64] {
  @func_4397() /* ty=Tensor[(55), float64] */
}

def @func_4176() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
  %420 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %421 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
  %422 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %423 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %424 = %423.0;
  %425 = cast(%424, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %426 = %422.0;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %428 = reshape(%427, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %429 = %420.0;
  %430 = %421.1;
  %431 = sigmoid(%425) /* ty=Tensor[(7, 3, 10), float64] */;
  %432 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  %433 = @func_413(%428) /* ty=Tensor[(5, 11, 1), float64] */;
  %434 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  (%429, %430, %426, %431, %432, %433, %434)
}

def @func_9609(%var_9581: Tensor[(672), float64]) -> (Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(7, 3, 10), float32]) {
  %435 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %436 = cast(%var_9581, dtype="float64") /* ty=Tensor[(672), float64] */;
  %437 = %435.0;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %439 = reshape(%436, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %440 = reshape(%438, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %441 = @func_875(%439, %440) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %442 = %441.1;
  %443 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
  (%437, %442, %var_9581, %443)
}

def @func_13985() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %444 = @func_10926() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %445 = @func_7719() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %446 = %444.0;
  %447 = %445.1;
  %448 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%446, %447, %448)
}

def @func_19974(%var_19962: float32, %var_19963: Tensor[(13, 3, 14), float32]) -> (Tensor[(13, 3, 14), float32], Tensor[(13, 3, 14), float32]) {
  %449 = cast(%var_19962, dtype="float32") /* ty=float32 */;
  %450 = cast(%var_19963, dtype="float32") /* ty=Tensor[(13, 3, 14), float32] */;
  %451 = cast(%var_19963, dtype="float32") /* ty=Tensor[(13, 3, 14), float32] */;
  %452 = maximum(%449, %450) /* ty=Tensor[(13, 3, 14), float32] */;
  %453 = sqrt(%451) /* ty=Tensor[(13, 3, 14), float32] */;
  (%452, %453)
}

def @func_20248() -> Tensor[(7, 3, 10), float32] {
  %454 = @func_20052() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %454.0
}

def @func_4579() -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %455 = @func_2344() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %456 = cast(meta[relay.Constant][12] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %457 = cast(meta[relay.Constant][12] /* ty=Tensor[(2688), float32] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %458 = cast(meta[relay.Constant][12] /* ty=Tensor[(2688), float32] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %459 = reshape(%456, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %460 = reshape(%457, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %461 = reshape(%458, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %462 = @func_3593(%459, %460, %461) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(7, 3, 10), float32], Tensor[(2688), int32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(2688), uint32]) */;
  %463 = %455.0;
  %464 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  %465 = %462.2;
  (%463, %464, %465, meta[relay.Constant][12] /* ty=Tensor[(2688), float32] */)
}

def @func_4837(%var_4826: Tensor[(300, 2), float32]) -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(300, 2), float32], Tensor[(7, 3, 10), float64]) {
  %466 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %467 = cast(%var_4826, dtype="float32") /* ty=Tensor[(300, 2), float32] */;
  %468 = reshape(%467, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), float32] */;
  %469 = @func_3668(%468) /* ty=(Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) */;
  %470 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %471 = %466.1;
  %472 = %469.1;
  %473 = %470.0;
  (%471, %472, %var_4826, %473)
}

def @func_21175() -> (Tensor[(7, 3, 10), float32],) {
  %474 = @func_5923() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %475 = %474.1;
  (%475,)
}

def @func_9313(%var_9302: int32, %var_9303: Tensor[(16, 12, 15), int32]) -> (Tensor[(16, 12, 15), int32],) {
  %476 = cast(%var_9302, dtype="int32") /* ty=int32 */;
  %477 = cast(%var_9303, dtype="int32") /* ty=Tensor[(16, 12, 15), int32] */;
  %478 = left_shift(%476, %477) /* ty=Tensor[(16, 12, 15), int32] */;
  (%478,)
}

def @func_11239() -> Tensor[(7, 3, 10), float32] {
  %479 = @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %479.0
}

def @func_13930() -> (Tensor[(8, 7, 2), float64],) {
  %480 = @func_12738() /* ty=Tensor[(8, 7, 2), float64] */;
  (%480,)
}

def @func_14592() -> (Tensor[(7, 3, 10), float32],) {
  %481 = @func_11455() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %482 = %481.1;
  (%482,)
}

def @func_5478(%var_5459: Tensor[(6, 100), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 100), float32]) {
  %483 = @func_3177() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %484 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %485 = @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %486 = cast(meta[relay.Constant][13] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %487 = reshape(%486, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), float64] */;
  %488 = @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %489 = cast(%var_5459, dtype="float32") /* ty=Tensor[(6, 100), float32] */;
  %490 = reshape(%489, newshape=[300, 2]) /* ty=Tensor[(300, 2), float32] */;
  %491 = @func_4837(%490) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(300, 2), float32], Tensor[(7, 3, 10), float64]) */;
  %492 = %483.1;
  %493 = %484.0;
  %494 = %485.0;
  %495 = @func_4609(%487) /* ty=Tensor[(8, 16, 5), float64] */;
  %496 = %488.0;
  %497 = %491.1;
  (%492, %493, %494, %495, meta[relay.Constant][13] /* ty=Tensor[(640), float64] */, %496, %497, %var_5459)
}

def @func_14702() -> Tensor[(7, 3, 10), float32] {
  %498 = @func_7126() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %498.0
}

def @func_12268() -> (Tensor[(7, 3, 10), float32],) {
  %499 = @func_10070() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(66, 4), int8], Tensor[(264), int64]) */;
  %500 = %499.1;
  (%500,)
}

def @func_18522() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), float32], Tensor[(7, 3, 10), float64], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  %501 = @func_16930() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %502 = @func_13985() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %503 = @func_5726() /* ty=(Tensor[(5, 11, ?), float32],) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="float64") /* ty=Tensor[(5, 11, ?), float64] */;
  %506 = cast(meta[relay.Constant][14] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %507 = reshape(%505, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %508 = reshape(%506, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %509 = @func_3152(%507, %508) /* ty=(Tensor[(7, 3, 10), float64], Tensor[(12, 4, 13), float64], Tensor[(55), float64], Tensor[(6, 8, 2), float32], Tensor[(96), float32]) */;
  %510 = @func_14570() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64]) */;
  %511 = %501.0;
  %512 = %502.2;
  %513 = @func_16754() /* ty=Tensor[(7, 3, 10), float32] */;
  %514 = %509.0;
  %515 = %510.0;
  (%511, %512, %513, %504, %514, meta[relay.Constant][14] /* ty=Tensor[(96), float32] */, %515)
}

def @func_4495() -> Tensor[(7, 3, 10), float32] {
  @func_2024() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_2238() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %516 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %517 = @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %518 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %519 = %516.0;
  %520 = %517.0;
  %521 = %518.3;
  %522 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%519, %520, %521, %522)
}

def @func_4973() -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %523 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
  %524 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %525 = %523.0;
  (%524, %525)
}

def @func_22337() -> Tensor[(6, 16, 15), bool] {
  %526 = @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */;
  %526.0
}

def @func_19758() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %527 = @func_12523() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %528 = @func_16841() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %529 = %527.1;
  %530 = %528.1;
  (%529, %530)
}

def @func_14570() -> (Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64]) {
  %531 = @func_13612() /* ty=(Tensor[(1, 264), int64],) */;
  %532 = @func_13751() /* ty=Tensor[(7, 3, 10), float32] */;
  %533 = %531.0;
  (%532, %533)
}

def @func_11349() -> (Tensor[(7, 3, 10), float32],) {
  %534 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
  (%534,)
}

def @func_15016() -> Tensor[(7, 3, 10), float32] {
  %535 = @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */;
  %535.0
}

def @func_18405() -> Tensor[(2688), float32] {
  %536 = @func_8718() /* ty=Tensor[(2688), float32] */;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(2688), float32] */;
  asinh(%537) /* ty=Tensor[(2688), float32] */
}

def @func_3393(%var_3367: Tensor[(132, 2), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) {
  %538 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %539 = cast(meta[relay.Constant][15] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %540 = reshape(%539, newshape=[6, 8, 2]) /* ty=Tensor[(6, 8, 2), float32] */;
  %541 = @func_2328(%540) /* ty=(Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) */;
  %542 = cast(%var_3367, dtype="int64") /* ty=Tensor[(132, 2), int64] */;
  %543 = reshape(%542, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %544 = @func_1558(%543) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %545 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %546 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  %547 = %538.5;
  %548 = %541.1;
  %549 = %544.0;
  %550 = %545.7;
  %551 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  (%546, %547, %548, meta[relay.Constant][15] /* ty=Tensor[(96), float32] */, %549, %var_3367, %550, %551)
}

def @func_8034() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %552 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %553 = @func_7496() /* ty=Tensor[(7, 3, 10), float32] */;
  %554 = %552.0;
  (%553, %554)
}

def @func_16754() -> Tensor[(7, 3, 10), float32] {
  @func_11901() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_10618() -> Tensor[(7, 3, 10), float32] {
  %555 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %555.3
}

def @func_1822() -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) {
  %556 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %557 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %558 = %557.0;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %560 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%556, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %563 = cast(meta[relay.Constant][16] /* ty=Tensor[(168, 4), float64] */, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %564 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 5), float64] */;
  %565 = reshape(%563, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %566 = reshape(%564, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %567 = @func_875(%565, %566) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %568 = power(%561, %562) /* ty=Tensor[(7, 3, 10), float64] */;
  %569 = %567.2;
  (%568, %569, meta[relay.Constant][16] /* ty=Tensor[(168, 4), float64] */, meta[relay.Constant][17] /* ty=Tensor[(11, 5), float64] */)
}

def @func_20502(%var_20489: Tensor[(11, 8, 13), float32]) -> (Tensor[(11, 8, 13), float32], Tensor[(7, 3, 10), float64]) {
  %570 = cast(%var_20489, dtype="float32") /* ty=Tensor[(11, 8, 13), float32] */;
  %571 = @func_15658() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %572 = erf(%570) /* ty=Tensor[(11, 8, 13), float32] */;
  %573 = %571.0;
  (%572, %573)
}

def @func_14164(%var_14122: Tensor[(2, 264), int64], %var_14146: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(2, 264), bool], int64, Tensor[(60), int64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32]) {
  %574 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %575 = @func_13612() /* ty=(Tensor[(1, 264), int64],) */;
  %576 = %575.0;
  %577 = cast(%576, dtype="bool") /* ty=Tensor[(1, 264), bool] */;
  %578 = cast(%var_14122, dtype="bool") /* ty=Tensor[(2, 264), bool] */;
  %579 = cast(meta[relay.Constant][18] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %580 = reshape(%579, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %581 = @func_8478(%580) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], int64, Tensor[(60), int64]) */;
  %582 = cast(%var_14146, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %583 = reshape(%582, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %584 = @func_4809(%583) /* ty=(Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) */;
  %585 = %574.0;
  %586 = @func_6169() /* ty=Tensor[(55), float64] */;
  %587 = greater_equal(%577, %578) /* ty=Tensor[(2, 264), bool] */;
  %588 = %581.2;
  %589 = %584.13;
  (%585, %586, %587, %588, meta[relay.Constant][18] /* ty=Tensor[(60), int64] */, %589, %var_14146)
}

def @func_9750() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  %590 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %591 = @func_7340() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %592 = %591.0;
  %593 = cast(%592, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %594 = %590.1;
  %595 = exp(%593) /* ty=Tensor[(7, 3, 10), float64] */;
  (%594, %595)
}

def @func_6076() -> (Tensor[(55), float64],) {
  %596 = @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %597 = %596.1;
  (%597,)
}

def @func_14885() -> (Tensor[(600), float32], Tensor[(7, 3, 10), float32], Tensor[(640), float64], Tensor[(7, 3, 10), float64], Tensor[(600, ?), int32]) {
  %598 = @func_6503() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(600), float32]) */;
  %599 = cast(meta[relay.Constant][19] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %600 = reshape(%599, newshape=[320, 2]) /* ty=Tensor[(320, 2), float64] */;
  %601 = @func_12624(%600) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(9, 1, 10), float32], Tensor[(55), float64], Tensor[(320, 2), float64]) */;
  %602 = @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %603 = %598.2;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(600), float32] */;
  %605 = reshape(%604, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %606 = @func_13647(%605) /* ty=(Tensor[(8, 7, 2), float64], Tensor[(600, ?), int32], Tensor[(600), float32]) */;
  %607 = %601.1;
  %608 = %602.0;
  %609 = %606.1;
  (%603, %607, meta[relay.Constant][19] /* ty=Tensor[(640), float64] */, %608, %609)
}

def @func_9404(%var_9393: Tensor[(13, 10, 10), uint32], %var_9394: Tensor[(13, 10, 10), uint32]) -> (Tensor[(13, 10, 10), bool],) {
  %610 = cast(%var_9394, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
  %611 = shape_of(%var_9393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_9393, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %614 = less_equal(%612, %613) /* ty=Tensor[(13, 10, 10), bool] */;
  (%614,)
}

def @func_6260() -> (Tensor[(7, 3, 10), float32],) {
  %615 = @func_3489() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %616 = %615.0;
  (%616,)
}

def @func_13392() -> Tensor[(7, 3, 10), float64] {
  %617 = @func_8901() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
  %617.0
}

def @func_20834() -> Tensor[(7, 3, 10), float32] {
  %618 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %618.0
}

def @func_12160() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %619 = @func_8660() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %620 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %621 = %619.0;
  %622 = %620.0;
  (%621, %622)
}

def @func_13058() -> Tensor[(7, 3, 10), float32] {
  %623 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %623.0
}

def @func_17481() -> (Tensor[(55), float32], Tensor[(55), float64]) {
  %624 = @func_6076() /* ty=(Tensor[(55), float64],) */;
  %625 = @func_15990() /* ty=Tensor[(55), float32] */;
  %626 = %624.0;
  (%625, %626)
}

def @func_17001() -> (Tensor[(7, 3, 10), float32],) {
  %627 = @func_14552() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %628 = %627.0;
  (%628,)
}

def @func_8143() -> Tensor[(7, 3, 10), float32] {
  %629 = @func_6974() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %629.0
}

def @func_20575() -> Tensor[(7, 3, 10), float32] {
  @func_16754() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_8220(%var_8188: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 7), bool]) {
  %630 = cast(%var_8188, dtype="int64") /* ty=Tensor[(264), int64] */;
  %631 = reshape(%630, newshape=[264]) /* ty=Tensor[(264), int64] */;
  %632 = @func_6469(%631) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %633 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %634 = @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %635 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %636 = %635.0;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %638 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 11, 7), float64] */, dtype="bool") /* ty=Tensor[(5, 11, 7), bool] */;
  %639 = %632.1;
  %640 = %633.0;
  %641 = %634.0;
  %642 = logical_or(%637, %638) /* ty=Tensor[(5, 11, 7), bool] */;
  (%639, %var_8188, %640, %641, %642)
}

def @func_6191() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %643 = @func_6169() /* ty=Tensor[(55), float64] */;
  %644 = @func_5095() /* ty=Tensor[(7, 3, 10), float32] */;
  (%643, %644)
}

def @func_16313() -> (Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %645 = @func_12462() /* ty=Tensor[(5, 11, 1), float64] */;
  %646 = @func_4397() /* ty=Tensor[(55), float64] */;
  (%645, %646)
}

def @func_6861(%var_6832: float32, %var_6833: Tensor[(12, 4), float32]) -> (Tensor[(5, 11, 1), float64], float32, Tensor[(264), int64], float32, Tensor[(12, 4), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %647 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %648 = cast(meta[relay.Constant][21] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %649 = cast(%var_6832, dtype="float32") /* ty=float32 */;
  %650 = cast(%var_6833, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %651 = reshape(%648, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
  %652 = reshape(%649, newshape=[]) /* ty=float32 */;
  %653 = reshape(%650, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %654 = @func_3963(%651, %652, %653) /* ty=(Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) */;
  %655 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %656 = %647.0;
  %657 = %654.4;
  %658 = %655.1;
  %659 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%656, %657, meta[relay.Constant][21] /* ty=Tensor[(264), int64] */, %var_6832, %var_6833, %658, %659)
}

def @func_1240() -> Tensor[(7, 3, 10), float32] {
  %660 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 10), float32] */;
  log(%660) /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_2328(%var_2307: Tensor[(6, 8, 2), float32]) -> (Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) {
  %661 = cast(%var_2307, dtype="float32") /* ty=Tensor[(6, 8, 2), float32] */;
  %662 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %663 = %662.3;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(14, 16, 12), float32] */;
  %665 = reshape(%664, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %666 = @func_1736(%665) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
  %667 = tan(%661) /* ty=Tensor[(6, 8, 2), float32] */;
  %668 = %666.1;
  (%667, %663, %668)
}

def @func_18758() -> (Tensor[(55), float64],) {
  %669 = @func_16400() /* ty=(Tensor[(55), float64],) */;
  %670 = %669.0;
  (%670,)
}

def @func_12887() -> (Tensor[(5, 11, 1), float64],) {
  %671 = @func_12118() /* ty=Tensor[(5, 11, 1), float64] */;
  (%671,)
}

def @func_8430() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %672 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %673 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %674 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  %675 = %672.0;
  %676 = %673.1;
  (%674, %675, %676)
}

def @func_13691() -> (Tensor[(2688), float32], Tensor[(55), float64]) {
  %677 = @func_8718() /* ty=Tensor[(2688), float32] */;
  %678 = @func_4397() /* ty=Tensor[(55), float64] */;
  (%677, %678)
}

def @func_20279() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %679 = @func_13861() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %680 = %679.1;
  %681 = @func_11999() /* ty=Tensor[(7, 3, 10), float32] */;
  (%680, %681)
}

def @func_20052() -> (Tensor[(7, 3, 10), float32],) {
  %682 = @func_16720() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %683 = %682.0;
  (%683,)
}

def @func_9491() -> (Tensor[(5, 11, 1), float64],) {
  %684 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %685 = %684.0;
  (%685,)
}

def @func_19144() -> (Tensor[(7, 3, 10), float32],) {
  %686 = @func_12760() /* ty=Tensor[(7, 3, 10), float32] */;
  (%686,)
}

def @func_16190(%var_16173: Tensor[(1296), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), float64], Tensor[(1296), float64]) {
  %687 = cast(%var_16173, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %688 = reshape(%687, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
  %689 = @func_9656(%688) /* ty=(Tensor[(9, 12, 12), float64],) */;
  %690 = @func_14702() /* ty=Tensor[(7, 3, 10), float32] */;
  %691 = %689.0;
  (%690, %691, %var_16173)
}

def @func_1440(%var_1397: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %692 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %693 = cast(%var_1397, dtype="float64") /* ty=Tensor[(55), float64] */;
  %694 = reshape(%693, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %695 = %692.0;
  %696 = @func_413(%694) /* ty=Tensor[(5, 11, 1), float64] */;
  (%695, %696, %var_1397)
}

def @func_20150() -> Tensor[(7, 3, 10), float32] {
  @func_8374() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_5655(%var_5648: Tensor[(13, 13, 4), float64]) -> (Tensor[(13, 13, 4), float64],) {
  %697 = cast(%var_5648, dtype="float64") /* ty=Tensor[(13, 13, 4), float64] */;
  %698 = acos(%697) /* ty=Tensor[(13, 13, 4), float64] */;
  (%698,)
}

def @func_20813(%var_20715: Tensor[(48), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(12, 4), float32], Tensor[(48), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %699 = @func_11455() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %700 = @func_9008() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %701 = cast(%var_20715, dtype="float32") /* ty=Tensor[(48), float32] */;
  %702 = reshape(%701, newshape=[12, 4]) /* ty=Tensor[(12, 4), float32] */;
  %703 = @func_17568(%702) /* ty=(Tensor[(2688), float32], Tensor[(48), float32], Tensor[(12, 4), float32]) */;
  %704 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %705 = @func_20669() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %706 = %699.0;
  %707 = %700.0;
  %708 = %703.2;
  %709 = %704.0;
  %710 = @func_8881() /* ty=Tensor[(7, 3, 10), float32] */;
  %711 = %705.0;
  (%706, %707, %708, %var_20715, %709, %710, %711)
}

def @func_19484() -> (Tensor[(7, 3, 10), float32],) {
  %712 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  (%712,)
}

def @func_7941() -> Tensor[(7, 3, 10), float64] {
  %713 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %713.0
}

def @func_15921() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
  %714 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %715 = @func_7719() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %716 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %717 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %718 = @func_13861() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %719 = %714.0;
  %720 = %715.0;
  %721 = %716.0;
  %722 = %717.0;
  %723 = %718.1;
  (%719, %720, %721, %722, %723)
}

def @func_14040() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %724 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %725 = @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %726 = %724.0;
  %727 = @func_6169() /* ty=Tensor[(55), float64] */;
  %728 = %725.2;
  (%726, %727, %728)
}

def @func_9361() -> (Tensor[(55), float64], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %729 = @func_7562() /* ty=(Tensor[(55), float64],) */;
  %730 = cast(meta[relay.Constant][23] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %731 = reshape(%730, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %732 = @func_1558(%731) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %733 = @func_6191() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %734 = @func_7126() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %735 = %729.0;
  %736 = %732.0;
  %737 = @func_4381() /* ty=Tensor[(7, 3, 10), float32] */;
  %738 = %733.1;
  %739 = %734.0;
  (%735, %736, meta[relay.Constant][23] /* ty=Tensor[(264), int64] */, %737, %738, %739)
}

def @func_1368() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %740 = @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %741 = cast(meta[relay.Constant][24] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %742 = reshape(%741, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %743 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  %744 = %740.0;
  %745 = @func_413(%742) /* ty=Tensor[(5, 11, 1), float64] */;
  (%743, %744, %745, meta[relay.Constant][24] /* ty=Tensor[(55), float64] */)
}

def @func_13492() -> (Tensor[(55), float32], Tensor[(7, 3, 10), float32]) {
  %746 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %747 = %746.2;
  %748 = cast(%747, dtype="float32") /* ty=Tensor[(55), float32] */;
  %749 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %750 = asinh(%748) /* ty=Tensor[(55), float32] */;
  %751 = %749.2;
  (%750, %751)
}

def @func_1330(%var_1291: float32, %var_1292: Tensor[(3, 16, 1), float32]) -> (Tensor[(3, 16, 1), float32], Tensor[(55), float64], Tensor[(672), float64], Tensor[(55, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %752 = cast(%var_1291, dtype="float32") /* ty=float32 */;
  %753 = cast(%var_1292, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
  %754 = cast(meta[relay.Constant][25] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %755 = cast(meta[relay.Constant][26] /* ty=Tensor[(55, 1), float64] */, dtype="float64") /* ty=Tensor[(55, 1), float64] */;
  %756 = reshape(%754, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %757 = reshape(%755, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %758 = @func_875(%756, %757) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %759 = %758.2;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(55), float64] */;
  %761 = reshape(%760, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %762 = cast(meta[relay.Constant][25] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %763 = cast(meta[relay.Constant][26] /* ty=Tensor[(55, 1), float64] */, dtype="float64") /* ty=Tensor[(55, 1), float64] */;
  %764 = reshape(%762, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %765 = reshape(%763, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %766 = @func_875(%764, %765) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %767 = divide(%752, %753) /* ty=Tensor[(3, 16, 1), float32] */;
  %768 = @func_413(%761) /* ty=Tensor[(5, 11, 1), float64] */;
  %769 = %766.2;
  (%767, %759, meta[relay.Constant][25] /* ty=Tensor[(672), float64] */, meta[relay.Constant][26] /* ty=Tensor[(55, 1), float64] */, %768, %769)
}

def @func_20019() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %770 = @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %771 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %772 = %770.2;
  %773 = %771.0;
  (%772, %773)
}

def @func_21015() -> (Tensor[(5, 11, 1), float64],) {
  %774 = @func_12887() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %775 = %774.0;
  (%775,)
}

def @func_17338() -> Tensor[(7, 3, 10), float32] {
  %776 = @func_13834() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %776.0
}

def @func_5726() -> (Tensor[(5, 11, ?), float32],) {
  %777 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %778 = %777.5;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %780 = acos(%779) /* ty=Tensor[(5, 11, 1), float64] */;
  %781 = cast(%780, dtype="float32") /* ty=Tensor[(5, 11, 1), float32] */;
  %782 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%778, dtype="float32") /* ty=Tensor[(5, 11, 1), float32] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %785 = add(%783, %784) /* ty=Tensor[(5, 11, ?), float32] */;
  (%785,)
}

def @func_12705() -> Tensor[(7, 3, 10), float32] {
  %786 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
  %786.0
}

def @func_7528() -> (Tensor[(7, 3, 10), float32],) {
  %787 = @func_4495() /* ty=Tensor[(7, 3, 10), float32] */;
  (%787,)
}

def @func_17568(%var_17551: Tensor[(12, 4), float32]) -> (Tensor[(2688), float32], Tensor[(48), float32], Tensor[(12, 4), float32]) {
  %788 = @func_13691() /* ty=(Tensor[(2688), float32], Tensor[(55), float64]) */;
  %789 = cast(%var_17551, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %790 = reshape(%789, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %791 = @func_10671(%790) /* ty=(Tensor[(6, 8, 16), float32], Tensor[(48), float32], Tensor[(1, 264), int64], float32, Tensor[(48), float32]) */;
  %792 = %788.0;
  %793 = %791.1;
  (%792, %793, %var_17551)
}

def @func_13819() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 3), float64], Tensor[(7, 3, 10), float32]) {
  %794 = @func_12234() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %795 = @func_3858() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %796 = %795.0;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %798 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(5, 11, 3), float64] */;
  %799 = %794.2;
  %800 = mod(%797, %798) /* ty=Tensor[(5, 11, 3), float64] */;
  %801 = @func_4381() /* ty=Tensor[(7, 3, 10), float32] */;
  (%799, %800, %801)
}

def @func_21902() -> (Tensor[(7, 3, 10), float64],) {
  %802 = @func_9750() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) */;
  %803 = %802.1;
  (%803,)
}

def @func_16101() -> (Tensor[(1300), float32],) {
  %804 = @func_15224() /* ty=(Tensor[(1300), float32],) */;
  %805 = %804.0;
  (%805,)
}

def @func_20901() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
  %806 = @func_20669() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %807 = @func_17643() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(8, 7, 2), float32]) */;
  %808 = %806.3;
  %809 = %807.0;
  (%808, %809)
}

def @func_17453() -> Tensor[(7, 3, 10), float32] {
  @func_13751() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_6590() -> Tensor[(672), float64] {
  %810 = @func_6103() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) */;
  %810.2
}

def @func_3593(%var_3527: Tensor[(2688), float32], %var_3540: Tensor[(2688), float64], %var_3583: Tensor[(2688), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(7, 3, 10), float32], Tensor[(2688), int32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(2688), uint32]) {
  %811 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %812 = cast(%var_3527, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %813 = reshape(%812, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %814 = @func_1525(%813) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %815 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %816 = cast(%var_3527, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %817 = sqrt(%816) /* ty=Tensor[(2688), float64] */;
  %818 = cast(%var_3540, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(1), int32] */;
  %820 = cast(%817, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?), int32] */;
  %822 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %823 = cast(%var_3583, dtype="uint32") /* ty=Tensor[(2688), uint32] */;
  %824 = shape_of(%var_3540, dtype="int32") /* ty=Tensor[(1), int32] */;
  %825 = cast(%var_3540, dtype="uint32") /* ty=Tensor[(2688), uint32] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %827 = %811.0;
  %828 = %814.2;
  %829 = %815.0;
  %830 = left_shift(%820, %821) /* ty=Tensor[(2688), int32] */;
  %831 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  %832 = %822.2;
  %833 = subtract(%825, %826) /* ty=Tensor[(2688), uint32] */;
  (%827, %828, %829, %830, %831, %832, %833)
}

def @func_8881() -> Tensor[(7, 3, 10), float32] {
  @func_1953() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_9865() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %834 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %835 = @func_9008() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %836 = %834.0;
  %837 = %835.0;
  (%836, %837)
}

def @func_14552() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %838 = @func_13172() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %839 = cast(meta[relay.Constant][28] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %840 = reshape(%839, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %841 = @func_4809(%840) /* ty=(Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) */;
  %842 = %838.0;
  %843 = %841.1;
  (%842, %843, meta[relay.Constant][28] /* ty=Tensor[(2688), float32] */)
}

def @func_3177() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %844 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %845 = cast(meta[relay.Constant][29] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %846 = reshape(%845, newshape=[1, 2688]) /* ty=Tensor[(1, 2688), float32] */;
  %847 = @func_2798(%846) /* ty=(Tensor[(2, 12, 11), int64], Tensor[(2688), float32], Tensor[(1, 2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(55), int32], Tensor[(2688), float32]) */;
  %848 = %844.0;
  %849 = %847.3;
  (%848, %849, meta[relay.Constant][29] /* ty=Tensor[(2688), float32] */)
}

def @func_12234() -> (Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %850 = @func_2344() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %851 = @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */;
  %852 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %853 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %854 = %850.0;
  %855 = %851.1;
  %856 = %852.0;
  %857 = %853.0;
  (%854, %855, %856, %857)
}

def @func_20294() -> (Tensor[(9, 1, 10), float64], Tensor[(7, 3, 10), float32]) {
  %858 = @func_8357() /* ty=Tensor[(9, 1, 10), float32] */;
  %859 = cast(%858, dtype="float64") /* ty=Tensor[(9, 1, 10), float64] */;
  %860 = acosh(%859) /* ty=Tensor[(9, 1, 10), float64] */;
  %861 = @func_8953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%860, %861)
}

def @func_1673() -> Tensor[(7, 3, 10), float32] {
  %862 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %862.0
}

def @func_6974() -> (Tensor[(7, 3, 10), float32],) {
  %863 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %864 = %863.0;
  (%864,)
}

def @func_13647(%var_13644: Tensor[(600), float32]) -> (Tensor[(8, 7, 2), float64], Tensor[(600, ?), int32], Tensor[(600), float32]) {
  %865 = cast(%var_13644, dtype="float32") /* ty=Tensor[(600), float32] */;
  %866 = reshape(%865, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %867 = @func_8608(%866) /* ty=(Tensor[(7, 3, 10), int64], Tensor[(600, ?), int32], Tensor[(7, 3, 10), float64]) */;
  %868 = @func_12738() /* ty=Tensor[(8, 7, 2), float64] */;
  %869 = %867.1;
  (%868, %869, %var_13644)
}

def @func_7719() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %870 = @func_1822() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) */;
  %871 = @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %872 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %873 = @func_4973() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %874 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %875 = %870.1;
  %876 = %871.0;
  %877 = %872.0;
  %878 = %873.0;
  %879 = %874.5;
  (%875, %876, %877, %878, %879)
}

def @func_15283() -> (Tensor[(8, 16, 5), float64], Tensor[(5, 11, 2688), bool]) {
  %880 = @func_11338() /* ty=(Tensor[(2688), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64]) */;
  %881 = @func_9491() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %882 = %881.0;
  %883 = @func_15077() /* ty=(Tensor[(55), float64], Tensor[(5, 11, 2688), bool]) */;
  %884 = %883.1;
  %885 = cast(%882, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %886 = cast(%884, dtype="bool") /* ty=Tensor[(5, 11, 2688), bool] */;
  %887 = %880.1;
  %888 = logical_or(%885, %886) /* ty=Tensor[(5, 11, 2688), bool] */;
  (%887, %888)
}

def @func_7589() -> (Tensor[(7, 3, 10), float32],) {
  %889 = @func_7496() /* ty=Tensor[(7, 3, 10), float32] */;
  (%889,)
}

def @func_12462() -> Tensor[(5, 11, 1), float64] {
  %890 = @func_10070() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(66, 4), int8], Tensor[(264), int64]) */;
  %890.2
}

def @func_11901() -> Tensor[(7, 3, 10), float32] {
  %891 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %891.1
}

def @func_17203() -> Tensor[(7, 3, 10), float32] {
  %892 = @func_16720() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %892.1
}

def @func_6469(%var_6436: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) {
  %893 = @func_5923() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %894 = cast(%var_6436, dtype="int64") /* ty=Tensor[(264), int64] */;
  %895 = reshape(%894, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %896 = @func_1558(%895) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %897 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %898 = %893.1;
  %899 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  %900 = %896.0;
  %901 = %897.0;
  (%898, %899, %900, %var_6436, %901)
}

def @func_7126() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %902 = @func_6954() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %903 = @func_3441() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
  %904 = %902.0;
  %905 = %903.0;
  (%904, %905)
}

def @func_13612() -> (Tensor[(1, 264), int64],) {
  %906 = @func_12557() /* ty=(Tensor[(48), float32], float32, Tensor[(1, 264), int64]) */;
  %907 = %906.2;
  (%907,)
}

def @func_8478(%var_8459: Tensor[(60), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], int64, Tensor[(60), int64]) {
  %908 = @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %909 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %910 = cast(%var_8459, dtype="int64") /* ty=Tensor[(60), int64] */;
  %911 = reshape(%909, newshape=[]) /* ty=int64 */;
  %912 = reshape(%910, newshape=[3, 5, 4]) /* ty=Tensor[(3, 5, 4), int64] */;
  %913 = @func_5792(%911, %912) /* ty=(Tensor[(3, 5, 4), bool], Tensor[(2, 12, 11), int64], Tensor[(1, 264), int64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %914 = %908.0;
  %915 = %913.1;
  (%914, %915, -5 /* ty=int64 */, %var_8459)
}

def @func_11338() -> (Tensor[(2688), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64]) {
  %916 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %917 = cast(meta[relay.Constant][30] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %918 = reshape(%917, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), float64] */;
  %919 = %916.1;
  %920 = @func_4609(%918) /* ty=Tensor[(8, 16, 5), float64] */;
  (%919, %920, meta[relay.Constant][30] /* ty=Tensor[(640), float64] */)
}

def @func_2486() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %921 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %922 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%921, %922)
}

def @func_6377(%var_6349: Tensor[(8, 2688), float32]) -> (Tensor[(8, 2688), float64], Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
  %923 = @func_3462() /* ty=(Tensor[(1, 2688), float32],) */;
  %924 = %923.0;
  %925 = cast(%924, dtype="int64") /* ty=Tensor[(1, 2688), int64] */;
  %926 = cast(%var_6349, dtype="int64") /* ty=Tensor[(8, 2688), int64] */;
  %927 = multiply(%925, %926) /* ty=Tensor[(8, 2688), int64] */;
  %928 = cast(%924, dtype="float64") /* ty=Tensor[(1, 2688), float64] */;
  %929 = cast(%927, dtype="float64") /* ty=Tensor[(8, 2688), float64] */;
  %930 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %931 = @func_3858() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %932 = @func_4941() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %933 = divide(%928, %929) /* ty=Tensor[(8, 2688), float64] */;
  %934 = %930.0;
  %935 = %931.0;
  %936 = %932.0;
  (%933, %934, %935, %936)
}

def @func_7398() -> (Tensor[(7, 3, 10), int64],) {
  %937 = @func_4495() /* ty=Tensor[(7, 3, 10), float32] */;
  %938 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 3, 10), float32] */, dtype="int64") /* ty=Tensor[(7, 3, 10), int64] */;
  %939 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%937, dtype="int64") /* ty=Tensor[(7, 3, 10), int64] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %942 = bitwise_xor(%940, %941) /* ty=Tensor[(7, 3, 10), int64] */;
  (%942,)
}

def @func_3104() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
  %943 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %944 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %945 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %946 = %943.0;
  %947 = %944.1;
  %948 = %945.2;
  (%946, %947, %948)
}

def @func_4609(%var_4602: Tensor[(8, 16, 5), float64]) -> Tensor[(8, 16, 5), float64] {
  %949 = cast(%var_4602, dtype="float64") /* ty=Tensor[(8, 16, 5), float64] */;
  sigmoid(%949) /* ty=Tensor[(8, 16, 5), float64] */
}

def @func_9089(%var_9080: Tensor[(9, 12, 12), bool], %var_9081: Tensor[(9, 12, 12), bool]) -> (Tensor[(9, 12, 12), bool],) {
  %950 = cast(%var_9081, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
  %951 = shape_of(%var_9080, dtype="int32") /* ty=Tensor[(3), int32] */;
  %952 = cast(%var_9080, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %954 = logical_and(%952, %953) /* ty=Tensor[(9, 12, 12), bool] */;
  (%954,)
}

def @func_9656(%var_9648: Tensor[(9, 12, 12), float64]) -> (Tensor[(9, 12, 12), float64],) {
  %955 = cast(%var_9648, dtype="float64") /* ty=Tensor[(9, 12, 12), float64] */;
  %956 = log(%955) /* ty=Tensor[(9, 12, 12), float64] */;
  (%956,)
}

def @func_12523() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %957 = @func_7548() /* ty=Tensor[(7, 3, 10), float32] */;
  %958 = @func_5385() /* ty=Tensor[(7, 3, 10), float32] */;
  (%957, %958)
}

def @func_7548() -> Tensor[(7, 3, 10), float32] {
  %959 = @func_7528() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %959.0
}

def @func_12557() -> (Tensor[(48), float32], float32, Tensor[(1, 264), int64]) {
  %960 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
  %961 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 264), int64] */, dtype="int64") /* ty=Tensor[(1, 264), int64] */;
  %962 = reshape(%961, newshape=[6, 44]) /* ty=Tensor[(6, 44), int64] */;
  %963 = @func_7277(%962) /* ty=(float32, Tensor[(7, 3, 10), float32], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32]) */;
  %964 = %960.6;
  %965 = %963.0;
  (%964, %965, meta[relay.Constant][32] /* ty=Tensor[(1, 264), int64] */)
}

def @func_20669() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %966 = @func_18276() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %967 = @func_6878() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %968 = @func_9100() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %969 = %966.0;
  %970 = @func_6169() /* ty=Tensor[(55), float64] */;
  %971 = %967.0;
  %972 = %968.0;
  (%969, %970, %971, %972)
}

def @func_18032(%var_18001: Tensor[(6, 44), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32], Tensor[(66, 4), int8], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %973 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %974 = cast(%var_18001, dtype="int64") /* ty=Tensor[(6, 44), int64] */;
  %975 = reshape(%974, newshape=[66, 4]) /* ty=Tensor[(66, 4), int64] */;
  %976 = @func_9691(%975) /* ty=(Tensor[(66, 4), int8],) */;
  %977 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %978 = @func_12316() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */;
  %979 = %973.1;
  %980 = @func_12917() /* ty=Tensor[(7, 3, 10), float32] */;
  %981 = @func_8343() /* ty=Tensor[(2688), float32] */;
  %982 = %976.0;
  %983 = %977.1;
  %984 = %978.2;
  (%979, %980, %981, %982, %var_18001, %983, %984)
}

def @func_18099() -> Tensor[(7, 3, 10), float32] {
  @func_9050() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_20133() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %985 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %986 = %985.1;
  %987 = @func_4495() /* ty=Tensor[(7, 3, 10), float32] */;
  (%986, %987)
}

def @func_22309() -> Tensor[(640), float64] {
  %988 = @func_18846() /* ty=(Tensor[(640), float64],) */;
  %988.0
}

def @func_15594(%var_15509: Tensor[(11, 13, 15), int16], %var_15510: Tensor[(11, 13, 15), int16], %var_15518: Tensor[(4, 168), float64]) -> (Tensor[(11, 13, 15), int16], Tensor[(4, 168), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool], Tensor[(5, 11, 1300), uint8], Tensor[(5, 11, 3), float64]) {
  %989 = cast(%var_15510, dtype="int16") /* ty=Tensor[(11, 13, 15), int16] */;
  %990 = shape_of(%var_15509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(%var_15509, dtype="int16") /* ty=Tensor[(11, 13, 15), int16] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %993 = @func_6954() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %994 = @func_12410() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %995 = @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */;
  %996 = @func_14062() /* ty=(Tensor[(8, 16, 5), float64], Tensor[(6, 16, 15), bool]) */;
  %997 = @func_15224() /* ty=(Tensor[(1300), float32],) */;
  %998 = %997.0;
  %999 = cast(%var_15518, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %1000 = reshape(%999, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1001 = @func_9609(%1000) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(7, 3, 10), float32]) */;
  %1002 = %1001.0;
  %1003 = cast(%998, dtype="uint8") /* ty=Tensor[(1300), uint8] */;
  %1004 = cast(%1002, dtype="uint8") /* ty=Tensor[(5, 11, 1), uint8] */;
  %1005 = @func_13819() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 3), float64], Tensor[(7, 3, 10), float32]) */;
  %1006 = maximum(%991, %992) /* ty=Tensor[(11, 13, 15), int16] */;
  %1007 = @func_14363() /* ty=Tensor[(7, 3, 10), float32] */;
  %1008 = %993.0;
  %1009 = %994.0;
  %1010 = %995.1;
  %1011 = %996.1;
  %1012 = logical_xor(%1003, %1004) /* ty=Tensor[(5, 11, 1300), uint8] */;
  %1013 = %1005.1;
  (%1006, %var_15518, %1007, %1008, %1009, %1010, %1011, %1012, %1013)
}

def @func_13896(%var_13891: Tensor[(5, 10, 1), float32]) -> (Tensor[(5, 10, 1), float32],) {
  %1014 = cast(%var_13891, dtype="float32") /* ty=Tensor[(5, 10, 1), float32] */;
  %1015 = exp(%1014) /* ty=Tensor[(5, 10, 1), float32] */;
  (%1015,)
}

def @func_7340() -> (Tensor[(7, 3, 10), float32],) {
  %1016 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1017 = %1016.1;
  (%1017,)
}

def @func_3668(%var_3651: Tensor[(4, 10, 15), float32]) -> (Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) {
  %1018 = cast(%var_3651, dtype="float32") /* ty=Tensor[(4, 10, 15), float32] */;
  %1019 = log10(%1018) /* ty=Tensor[(4, 10, 15), float32] */;
  %1020 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1019, %1020)
}

def @func_21502() -> Tensor[(5, 11, 2688), float64] {
  %1021 = @func_19297() /* ty=(Tensor[(5, 11, 2688), float64],) */;
  %1021.0
}

def @func_22064() -> (Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(55), float32], Tensor[(6, 16, 15), bool]) {
  %1022 = @func_9491() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1023 = @func_18758() /* ty=(Tensor[(55), float64],) */;
  %1024 = @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */;
  %1025 = %1022.0;
  %1026 = %1023.0;
  %1027 = @func_15990() /* ty=Tensor[(55), float32] */;
  %1028 = %1024.0;
  (%1025, %1026, %1027, %1028)
}

def @func_6044(%var_6035: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], float32, Tensor[(1344), int16], Tensor[(600), float32]) {
  %1029 = @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1030 = %1029.0;
  %1031 = cast(%1030, dtype="float32") /* ty=Tensor[(7, 3, 10), float32] */;
  %1032 = cast(meta[relay.Constant][33] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1033 = reshape(%1032, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), float64] */;
  %1034 = cast(meta[relay.Constant][34] /* ty=Tensor[(1344), int16] */, dtype="int16") /* ty=Tensor[(1344), int16] */;
  %1035 = cast(meta[relay.Constant][34] /* ty=Tensor[(1344), int16] */, dtype="int16") /* ty=Tensor[(1344), int16] */;
  %1036 = cast(%var_6035, dtype="float32") /* ty=Tensor[(600), float32] */;
  %1037 = reshape(%1034, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), int16] */;
  %1038 = reshape(%1035, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), int16] */;
  %1039 = reshape(%1036, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %1040 = @func_5509(%1037, %1038, %1039) /* ty=(Tensor[(12, 14, 8), bool], Tensor[(4, 10, 15), float32], Tensor[(600), float32], float32) */;
  %1041 = acosh(%1031) /* ty=Tensor[(7, 3, 10), float32] */;
  %1042 = @func_4609(%1033) /* ty=Tensor[(8, 16, 5), float64] */;
  %1043 = %1040.3;
  (%1041, %1042, meta[relay.Constant][33] /* ty=Tensor[(640), float64] */, %1043, meta[relay.Constant][34] /* ty=Tensor[(1344), int16] */, %var_6035)
}

def @func_11999() -> Tensor[(7, 3, 10), float32] {
  @func_8881() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_12917() -> Tensor[(7, 3, 10), float32] {
  %1044 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1044.0
}

def @func_18608() -> (Tensor[(5, 11, 1), float64],) {
  %1045 = @func_15353() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_10926() -> (Tensor[(7, 3, 10), float32],) {
  %1047 = @func_7548() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1047,)
}

def @func_17144() -> (Tensor[(7, 3, 10), float32],) {
  %1048 = @func_15016() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1048,)
}

def @func_15502() -> (Tensor[(7, 3, 10), float32],) {
  %1049 = @func_11901() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1049,)
}

def @func_14993() -> (Tensor[(7, 3, 10), float32], Tensor[(11, 13, 3), int8], Tensor[(429), int8]) {
  %1050 = @func_12160() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1051 = cast(meta[relay.Constant][35] /* ty=Tensor[(429), int8] */, dtype="int8") /* ty=Tensor[(429), int8] */;
  %1052 = reshape(%1051, newshape=[11, 13, 3]) /* ty=Tensor[(11, 13, 3), int8] */;
  %1053 = @func_11107(%1052) /* ty=(Tensor[(11, 13, 3), int8],) */;
  %1054 = %1050.1;
  %1055 = %1053.0;
  (%1054, %1055, meta[relay.Constant][35] /* ty=Tensor[(429), int8] */)
}

def @func_5792(%var_5734: int64, %var_5735: Tensor[(3, 5, 4), int64]) -> (Tensor[(3, 5, 4), bool], Tensor[(2, 12, 11), int64], Tensor[(1, 264), int64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %1056 = cast(%var_5734, dtype="bool") /* ty=bool */;
  %1057 = cast(%var_5735, dtype="bool") /* ty=Tensor[(3, 5, 4), bool] */;
  %1058 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 264), int64] */, dtype="int64") /* ty=Tensor[(1, 264), int64] */;
  %1059 = reshape(%1058, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %1060 = @func_1558(%1059) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %1061 = @func_5190() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */;
  %1062 = @func_3648() /* ty=(Tensor[(55), float64],) */;
  %1063 = greater_equal(%1056, %1057) /* ty=Tensor[(3, 5, 4), bool] */;
  %1064 = %1060.0;
  %1065 = %1061.0;
  %1066 = %1062.0;
  (%1063, %1064, meta[relay.Constant][36] /* ty=Tensor[(1, 264), int64] */, %1065, %1066)
}

def @func_9771() -> (Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) {
  %1067 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1068 = cast(meta[relay.Constant][37] /* ty=Tensor[(1440), int64] */, dtype="int64") /* ty=Tensor[(1440), int64] */;
  %1069 = cast(meta[relay.Constant][37] /* ty=Tensor[(1440), int64] */, dtype="int64") /* ty=Tensor[(1440), int64] */;
  %1070 = reshape(%1068, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), int64] */;
  %1071 = reshape(%1069, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), int64] */;
  %1072 = @func_7760(%1070, %1071) /* ty=(Tensor[(6, 16, 15), int64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %1073 = %1072.0;
  %1074 = cast(meta[relay.Constant][37] /* ty=Tensor[(1440), int64] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%1073, dtype="bool") /* ty=Tensor[(6, 16, 15), bool] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1078 = %1067.0;
  %1079 = equal(%1076, %1077) /* ty=Tensor[(6, 16, 15), bool] */;
  (%1078, %1079)
}

def @func_22442() -> (Tensor[(7, 3, 10), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  %1080 = @func_3248() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) */;
  %1081 = @func_14363() /* ty=Tensor[(7, 3, 10), float32] */;
  %1082 = %1080.2;
  %1083 = @func_11999() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1081, %1082, %1083)
}

def @func_16533(%var_16505: Tensor[(11, 14, 3), float32], %var_16521: Tensor[(60), int64]) -> (Tensor[(11, 14, 3), float32], Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64], int64, Tensor[(60), int64], Tensor[(55), float64]) {
  %1084 = cast(%var_16505, dtype="float32") /* ty=Tensor[(11, 14, 3), float32] */;
  %1085 = @func_6103() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) */;
  %1086 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1087 = cast(%var_16521, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1088 = reshape(%1086, newshape=[]) /* ty=int64 */;
  %1089 = reshape(%1087, newshape=[3, 5, 4]) /* ty=Tensor[(3, 5, 4), int64] */;
  %1090 = @func_5792(%1088, %1089) /* ty=(Tensor[(3, 5, 4), bool], Tensor[(2, 12, 11), int64], Tensor[(1, 264), int64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1091 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1092 = cosh(%1084) /* ty=Tensor[(11, 14, 3), float32] */;
  %1093 = %1085.0;
  %1094 = %1090.2;
  %1095 = %1091.2;
  (%1092, %1093, %1094, -7 /* ty=int64 */, %var_16521, %1095)
}

def @func_9691(%var_9679: Tensor[(66, 4), int64]) -> (Tensor[(66, 4), int8],) {
  %1096 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %1097 = %1096.7;
  %1098 = cast(%var_9679, dtype="int8") /* ty=Tensor[(66, 4), int8] */;
  %1099 = shape_of(%1097, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1100 = cast(%1097, dtype="int8") /* ty=Tensor[(66, 4), int8] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1102 = bitwise_xor(%1100, %1101) /* ty=Tensor[(66, 4), int8] */;
  (%1102,)
}

def @func_13291() -> (Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1103 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1104 = @func_8386() /* ty=Tensor[(2688), float32] */;
  %1105 = @func_9050() /* ty=Tensor[(7, 3, 10), float32] */;
  %1106 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  %1107 = %1103.0;
  (%1104, %1105, %1106, %1107)
}

def @func_19410() -> (Tensor[(7, 3, 10), float32],) {
  %1108 = @func_10618() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1108,)
}

def @func_17255() -> Tensor[(55), float64] {
  @func_10425() /* ty=Tensor[(55), float64] */
}

def @func_19100(%var_19058: Tensor[(2688), float32]) -> (Tensor[(2688), int16], Tensor[(55), float64]) {
  %1109 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
  %1110 = %1109.0;
  %1111 = cast(%var_19058, dtype="int16") /* ty=Tensor[(2688), int16] */;
  %1112 = shape_of(%1110, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1113 = cast(%1110, dtype="int16") /* ty=Tensor[(2688), int16] */;
  %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1115 = @func_3648() /* ty=(Tensor[(55), float64],) */;
  %1116 = right_shift(%1113, %1114) /* ty=Tensor[(2688), int16] */;
  %1117 = %1115.0;
  (%1116, %1117)
}

def @func_1888() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) {
  %1118 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1119 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %1120 = cast(%1119, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %1121 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1122 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 2688), float32] */, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %1123 = reshape(%1122, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %1124 = @func_1525(%1123) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %1125 = %1118.2;
  %1126 = acos(%1120) /* ty=Tensor[(7, 3, 10), float64] */;
  %1127 = %1121.0;
  %1128 = %1124.0;
  (%1125, %1126, %1127, %1128, meta[relay.Constant][38] /* ty=Tensor[(1, 2688), float32] */)
}

def @func_2915() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) {
  %1129 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1130 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1131 = cast(meta[relay.Constant][40] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1132 = reshape(%1130, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %1133 = reshape(%1131, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1134 = @func_875(%1132, %1133) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1135 = %1129.0;
  %1136 = %1134.1;
  (%1135, %1136, meta[relay.Constant][39] /* ty=Tensor[(672), float64] */, meta[relay.Constant][40] /* ty=Tensor[(55), float64] */)
}

def @func_7562() -> (Tensor[(55), float64],) {
  %1137 = @func_6076() /* ty=(Tensor[(55), float64],) */;
  %1138 = %1137.0;
  (%1138,)
}

def @func_6103() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) {
  %1139 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1140 = cast(meta[relay.Constant][41] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1141 = cast(meta[relay.Constant][42] /* ty=Tensor[(55, 1), float64] */, dtype="float64") /* ty=Tensor[(55, 1), float64] */;
  %1142 = reshape(%1140, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %1143 = reshape(%1141, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1144 = @func_875(%1142, %1143) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1145 = %1139.1;
  %1146 = %1144.1;
  (%1145, %1146, meta[relay.Constant][41] /* ty=Tensor[(672), float64] */, meta[relay.Constant][42] /* ty=Tensor[(55, 1), float64] */)
}

def @func_16271() -> Tensor[(8, 7, 2), float64] {
  %1147 = @func_13930() /* ty=(Tensor[(8, 7, 2), float64],) */;
  %1147.0
}

def @func_16688() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %1148 = @func_11349() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1149 = @func_10425() /* ty=Tensor[(55), float64] */;
  %1150 = %1148.0;
  (%1149, %1150)
}

def @func_11107(%var_11091: Tensor[(11, 13, 3), int8]) -> (Tensor[(11, 13, 3), int8],) {
  %1151 = cast(%var_11091, dtype="int8") /* ty=Tensor[(11, 13, 3), int8] */;
  %1152 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(11, 13, 3), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1153 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 13, 3), int8] */, dtype="int8") /* ty=Tensor[(11, 13, 3), int8] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1155 = bitwise_or(%1153, %1154) /* ty=Tensor[(11, 13, 3), int8] */;
  (%1155,)
}

def @func_20308() -> (Tensor[(7, 3, 10), float32],) {
  %1156 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1157 = %1156.1;
  (%1157,)
}

def @func_4079() -> (Tensor[(5, 11, 1), float64],) {
  %1158 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1159 = %1158.2;
  (%1159,)
}

def @func_11455() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) {
  %1160 = cast(meta[relay.Constant][44] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %1161 = reshape(%1160, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
  %1162 = @func_3393(%1161) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) */;
  %1163 = @func_3489() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1164 = @func_10618() /* ty=Tensor[(7, 3, 10), float32] */;
  %1165 = %1162.7;
  %1166 = %1163.0;
  (%1164, %1165, meta[relay.Constant][44] /* ty=Tensor[(264), int64] */, %1166)
}

def @func_15224() -> (Tensor[(1300), float32],) {
  %1167 = @func_11940() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(13, 10, 10), bool], Tensor[(1300), uint32]) */;
  %1168 = %1167.2;
  %1169 = cast(meta[relay.Constant][45] /* ty=Tensor[(1300), uint32] */, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1171 = cast(%1168, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1173 = floor_mod(%1171, %1172) /* ty=Tensor[(1300), float32] */;
  (%1173,)
}

def @func_9100() -> (Tensor[(7, 3, 10), float32],) {
  %1174 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1174,)
}

def @func_3718() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) {
  %1175 = @func_3177() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %1176 = @func_3489() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1177 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1178 = cast(3.36731f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1179 = cast(meta[relay.Constant][46] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1180 = reshape(%1178, newshape=[]) /* ty=float32 */;
  %1181 = reshape(%1179, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), float32] */;
  %1182 = @func_1330(%1180, %1181) /* ty=(Tensor[(3, 16, 1), float32], Tensor[(55), float64], Tensor[(672), float64], Tensor[(55, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1183 = %1175.0;
  %1184 = %1176.0;
  %1185 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  %1186 = %1177.1;
  %1187 = %1182.3;
  (%1183, %1184, %1185, %1186, %1187, 3.36731f /* ty=float32 */, meta[relay.Constant][46] /* ty=Tensor[(48), float32] */)
}

def @func_1486() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1188 = @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1189 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  %1190 = %1188.0;
  (%1189, %1190)
}

def @func_12410() -> (Tensor[(7, 3, 10), float32],) {
  %1191 = @func_8881() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1191,)
}

def @func_17372(%var_17367: Tensor[(3, 2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(1, 2688), float32], Tensor[(3, 2688), uint16]) {
  %1192 = @func_14962() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1193 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %1194 = %1193.4;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %1196 = cast(%1194, dtype="uint16") /* ty=Tensor[(1, 2688), uint16] */;
  %1197 = cast(%var_17367, dtype="uint16") /* ty=Tensor[(3, 2688), uint16] */;
  %1198 = %1192.0;
  %1199 = log10(%1195) /* ty=Tensor[(1, 2688), float32] */;
  %1200 = add(%1196, %1197) /* ty=Tensor[(3, 2688), uint16] */;
  (%1198, %1199, %1200)
}

def @func_20211() -> Tensor[(7, 3, 10), float32] {
  %1201 = @func_12234() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1201.3
}

def @func_16417() -> Tensor[(5, 11, 1), float64] {
  @func_12118() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_11256() -> (Tensor[(7, 3, 10), float32],) {
  %1202 = @func_3441() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
  %1203 = %1202.2;
  (%1203,)
}

def @func_17703() -> Tensor[(7, 3, 10), float32] {
  %1204 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
  %1204.2
}

def @func_18201() -> Tensor[(55), float64] {
  @func_17255() /* ty=Tensor[(55), float64] */
}

def @func_3152(%var_3140: Tensor[(55), float64], %var_3149: Tensor[(96), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(12, 4, 13), float64], Tensor[(55), float64], Tensor[(6, 8, 2), float32], Tensor[(96), float32]) {
  %1205 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1206 = %1205.0;
  %1207 = cast(%1206, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %1208 = cast(%var_3140, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1209 = reshape(%1208, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1210 = @func_2603(%1209) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) */;
  %1211 = cast(%var_3149, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1212 = reshape(%1211, newshape=[6, 8, 2]) /* ty=Tensor[(6, 8, 2), float32] */;
  %1213 = @func_2328(%1212) /* ty=(Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) */;
  %1214 = asin(%1207) /* ty=Tensor[(7, 3, 10), float64] */;
  %1215 = %1210.0;
  %1216 = %1213.0;
  (%1214, %1215, %var_3140, %1216, %var_3149)
}

def @func_6810(%var_6773: Tensor[(6, 7, 12), float64]) -> (Tensor[(6, 7, 12), float32], Tensor[(7, 3, 10), float32]) {
  %1217 = cast(%var_6773, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %1218 = cos(%1217) /* ty=Tensor[(6, 7, 12), float64] */;
  %1219 = cast(%1218, dtype="float32") /* ty=Tensor[(6, 7, 12), float32] */;
  %1220 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %1221 = sqrt(%1219) /* ty=Tensor[(6, 7, 12), float32] */;
  %1222 = %1220.0;
  (%1221, %1222)
}

def @func_10671(%var_10645: Tensor[(48), float32]) -> (Tensor[(6, 8, 16), float32], Tensor[(48), float32], Tensor[(1, 264), int64], float32, Tensor[(48), float32]) {
  %1223 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 8, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %1224 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 264), int64] */, dtype="int64") /* ty=Tensor[(1, 264), int64] */;
  %1225 = cast(6.49983f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1226 = cast(%var_10645, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1227 = reshape(%1224, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
  %1228 = reshape(%1225, newshape=[]) /* ty=float32 */;
  %1229 = reshape(%1226, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1230 = @func_3963(%1227, %1228, %1229) /* ty=(Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) */;
  %1231 = log2(%1223) /* ty=Tensor[(6, 8, 16), float32] */;
  %1232 = %1230.5;
  (%1231, %1232, meta[relay.Constant][48] /* ty=Tensor[(1, 264), int64] */, 6.49983f /* ty=float32 */, %var_10645)
}

def @func_13172() -> (Tensor[(7, 3, 10), float32],) {
  %1233 = @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1234 = %1233.2;
  (%1234,)
}

def @func_2284() -> Tensor[(7, 3, 10), float32] {
  %1235 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1235.0
}

def @func_19383() -> Tensor[(7, 3, 10), float32] {
  %1236 = @func_12316() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */;
  %1236.0
}

def @func_21587(%var_21578: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32], Tensor[(7, 3, 10), float32]) {
  %1237 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
  %1238 = cast(%var_21578, dtype="float32") /* ty=Tensor[(600), float32] */;
  %1239 = reshape(%1238, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %1240 = @func_5335(%1239) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32]) */;
  %1241 = @func_7528() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1242 = %1237.0;
  %1243 = %1240.1;
  %1244 = %1241.0;
  (%1242, %1243, %var_21578, %1244)
}

def @func_10119() -> Tensor[(55), float64] {
  %1245 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %1245.3
}

def @func_16720() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1246 = @func_5284() /* ty=Tensor[(7, 3, 10), float32] */;
  %1247 = @func_8374() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1246, %1247)
}

def @func_16454() -> Tensor[(7, 3, 10), float32] {
  %1248 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1248.0
}

def @func_18092() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  %1249 = @func_12268() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1250 = %1249.0;
  %1251 = @func_13392() /* ty=Tensor[(7, 3, 10), float64] */;
  (%1250, %1251)
}

def @func_17326() -> Tensor[(7, 3, 10), float32] {
  %1252 = @func_8430() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1252.2
}

def @func_3963(%var_3913: Tensor[(132, 2), int64], %var_3927: float32, %var_3928: Tensor[(48), float32]) -> (Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) {
  %1253 = @func_3462() /* ty=(Tensor[(1, 2688), float32],) */;
  %1254 = %1253.0;
  %1255 = cast(%1254, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %1256 = reshape(%1255, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %1257 = @func_1525(%1256) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %1258 = cast(%var_3927, dtype="float32") /* ty=float32 */;
  %1259 = cast(%var_3928, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1260 = reshape(%1258, newshape=[]) /* ty=float32 */;
  %1261 = reshape(%1259, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), float32] */;
  %1262 = @func_1330(%1260, %1261) /* ty=(Tensor[(3, 16, 1), float32], Tensor[(55), float64], Tensor[(672), float64], Tensor[(55, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1263 = cast(%var_3913, dtype="int64") /* ty=Tensor[(132, 2), int64] */;
  %1264 = reshape(%1263, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
  %1265 = @func_3393(%1264) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) */;
  %1266 = %1265.2;
  %1267 = cast(%1266, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
  %1268 = %1257.0;
  %1269 = %1262.0;
  %1270 = log(%1267) /* ty=Tensor[(14, 16, 12), float64] */;
  (%1254, %var_3913, %1268, %1269, %var_3927, %var_3928, %1270)
}

def @func_16165() -> Tensor[(8, 16, 5), float64] {
  %1271 = @func_15283() /* ty=(Tensor[(8, 16, 5), float64], Tensor[(5, 11, 2688), bool]) */;
  %1271.0
}

def @func_2164() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) {
  %1272 = cast(meta[relay.Constant][49] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1273 = reshape(%1272, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1274 = @func_1440(%1273) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1275 = %1274.1;
  %1276 = cast(%1275, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %1277 = reshape(%1276, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %1278 = @func_1822() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) */;
  %1279 = cast(meta[relay.Constant][49] /* ty=Tensor[(55), float64] */, dtype="uint64") /* ty=Tensor[(55), uint64] */;
  %1280 = shape_of(%1275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1281 = cast(%1275, dtype="uint64") /* ty=Tensor[(5, 11, 1), uint64] */;
  %1282 = dyn.reshape(%1279, %1280, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1283 = cast(meta[relay.Constant][50] /* ty=Tensor[(66, 4), int64] */, dtype="int64") /* ty=Tensor[(66, 4), int64] */;
  %1284 = reshape(%1283, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %1285 = @func_1558(%1284) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %1286 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %1287 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  %1288 = @func_413(%1277) /* ty=Tensor[(5, 11, 1), float64] */;
  %1289 = %1278.1;
  %1290 = multiply(%1281, %1282) /* ty=Tensor[(5, 11, ?), uint64] */;
  %1291 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  %1292 = %1285.0;
  (%1286, %1287, %1288, %1289, %1290, %1291, %1292, meta[relay.Constant][50] /* ty=Tensor[(66, 4), int64] */)
}

def @func_8901() -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
  %1293 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1294 = @func_7941() /* ty=Tensor[(7, 3, 10), float64] */;
  %1295 = %1293.1;
  (%1294, %1295)
}

def @func_17950(%var_17888: Tensor[(672), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(48), float32], Tensor[(10, 264), uint16], Tensor[(7, 3, 10), float32], Tensor[(672), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 264), bool], Tensor[(10, 264), int64], Tensor[(5, 11, 264), float32], Tensor[(5, 11, 1), float64], Tensor[(1296), bool], Tensor[(2, 648), bool]) {
  %1296 = cast(meta[relay.Constant][51] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1297 = reshape(%1296, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1298 = @func_10671(%1297) /* ty=(Tensor[(6, 8, 16), float32], Tensor[(48), float32], Tensor[(1, 264), int64], float32, Tensor[(48), float32]) */;
  %1299 = %1298.2;
  %1300 = cast(%1299, dtype="uint16") /* ty=Tensor[(1, 264), uint16] */;
  %1301 = cast(meta[relay.Constant][52] /* ty=Tensor[(10, 264), int64] */, dtype="uint16") /* ty=Tensor[(10, 264), uint16] */;
  %1302 = @func_11455() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %1303 = cast(%var_17888, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1304 = reshape(%1303, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1305 = @func_9609(%1304) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(7, 3, 10), float32]) */;
  %1306 = %1305.1;
  %1307 = cast(%1306, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %1308 = cast(%1299, dtype="bool") /* ty=Tensor[(1, 264), bool] */;
  %1309 = cast(%1299, dtype="int64") /* ty=Tensor[(1, 264), int64] */;
  %1310 = cast(meta[relay.Constant][52] /* ty=Tensor[(10, 264), int64] */, dtype="int64") /* ty=Tensor[(10, 264), int64] */;
  %1311 = cast(%1299, dtype="bool") /* ty=Tensor[(1, 264), bool] */;
  %1312 = cast(%1306, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %1313 = greater_equal(%1311, %1312) /* ty=Tensor[(5, 11, 264), bool] */;
  %1314 = cast(%1313, dtype="float32") /* ty=Tensor[(5, 11, 264), float32] */;
  %1315 = @func_17643() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(8, 7, 2), float32]) */;
  %1316 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 648), bool] */, dtype="bool") /* ty=Tensor[(2, 648), bool] */;
  %1317 = reshape(%1316, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %1318 = @func_16262(%1317) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool], Tensor[(1344, 2), float32]) */;
  %1319 = @func_5095() /* ty=Tensor[(7, 3, 10), float32] */;
  %1320 = add(%1300, %1301) /* ty=Tensor[(10, 264), uint16] */;
  %1321 = @func_11734() /* ty=Tensor[(7, 3, 10), float32] */;
  %1322 = %1302.3;
  %1323 = logical_or(%1307, %1308) /* ty=Tensor[(5, 11, 264), bool] */;
  %1324 = bitwise_xor(%1309, %1310) /* ty=Tensor[(10, 264), int64] */;
  %1325 = cosh(%1314) /* ty=Tensor[(5, 11, 264), float32] */;
  %1326 = %1315.0;
  %1327 = %1318.2;
  (%1319, meta[relay.Constant][51] /* ty=Tensor[(48), float32] */, %1320, %1321, %var_17888, %1322, %1323, %1324, %1325, %1326, %1327, meta[relay.Constant][53] /* ty=Tensor[(2, 648), bool] */)
}

def @func_18346() -> (Tensor[(1344, 2), float32], Tensor[(7, 3, 10), float32]) {
  %1328 = @func_14921() /* ty=Tensor[(1344, 2), float32] */;
  %1329 = @func_11734() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1328, %1329)
}

def @func_11625() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1330 = @func_11349() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1331 = %1330.0;
  %1332 = @func_4381() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1331, %1332)
}

def @func_7496() -> Tensor[(7, 3, 10), float32] {
  @func_1673() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_2002() -> (Tensor[(7, 3, 10), float64],) {
  %1333 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %1334 = %1333.1;
  %1335 = cast(%1334, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %1336 = log2(%1335) /* ty=Tensor[(7, 3, 10), float64] */;
  (%1336,)
}

def @func_1558(%var_1551: Tensor[(2, 12, 11), int64]) -> (Tensor[(2, 12, 11), int64],) {
  %1337 = cast(%var_1551, dtype="int64") /* ty=Tensor[(2, 12, 11), int64] */;
  %1338 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(2, 12, 11), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1339 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 12, 11), int64] */, dtype="int64") /* ty=Tensor[(2, 12, 11), int64] */;
  %1340 = dyn.reshape(%1337, %1338, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1341 = maximum(%1339, %1340) /* ty=Tensor[(2, 12, 11), int64] */;
  (%1341,)
}

def @func_20925(%var_20910: Tensor[(14, 2, 5), float32]) -> Tensor[(14, 2, 5), float32] {
  %1342 = cast(%var_20910, dtype="float32") /* ty=Tensor[(14, 2, 5), float32] */;
  acosh(%1342) /* ty=Tensor[(14, 2, 5), float32] */
}

def @func_14921() -> Tensor[(1344, 2), float32] {
  %1343 = @func_5190() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */;
  %1343.2
}

def @func_21249(%var_21239: Tensor[(11, 8, 5), uint8]) -> Tensor[(11, 8, 5), uint8] {
  %1344 = cast(%var_21239, dtype="uint8") /* ty=Tensor[(11, 8, 5), uint8] */;
  %1345 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(11, 8, 5), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1346 = cast(meta[relay.Constant][55] /* ty=Tensor[(11, 8, 5), uint8] */, dtype="uint8") /* ty=Tensor[(11, 8, 5), uint8] */;
  %1347 = dyn.reshape(%1344, %1345, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%1346, %1347) /* ty=Tensor[(11, 8, 5), uint8] */
}

def @func_3648() -> (Tensor[(55), float64],) {
  %1348 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1349 = %1348.2;
  (%1349,)
}

def @func_16035() -> (Tensor[(7, 3, 10), float32], Tensor[(13, 13, 4), float64], Tensor[(676), float64]) {
  %1350 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %1351 = cast(meta[relay.Constant][56] /* ty=Tensor[(676), float64] */, dtype="float64") /* ty=Tensor[(676), float64] */;
  %1352 = reshape(%1351, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), float64] */;
  %1353 = @func_5655(%1352) /* ty=(Tensor[(13, 13, 4), float64],) */;
  %1354 = %1350.0;
  %1355 = %1353.0;
  (%1354, %1355, meta[relay.Constant][56] /* ty=Tensor[(676), float64] */)
}

def @func_19364(%var_19328: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(2688), float32]) {
  %1356 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %1357 = cast(%var_19328, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %1358 = reshape(%1357, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %1359 = @func_19003(%1358) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(5, 11, 1), float64]) */;
  %1360 = %1356.0;
  %1361 = %1359.1;
  (%1360, %1361, %var_19328)
}

def @func_10425() -> Tensor[(55), float64] {
  %1362 = @func_6191() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1362.0
}

def @func_18857(%var_18853: Tensor[(10, 13, 2), int8]) -> (Tensor[(10, 13, 2), int8],) {
  %1363 = cast(%var_18853, dtype="int8") /* ty=Tensor[(10, 13, 2), int8] */;
  %1364 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(10, 13, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1365 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 13, 2), int8] */, dtype="int8") /* ty=Tensor[(10, 13, 2), int8] */;
  %1366 = dyn.reshape(%1363, %1364, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1367 = logical_xor(%1365, %1366) /* ty=Tensor[(10, 13, 2), int8] */;
  (%1367,)
}

def @func_15121() -> (Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) {
  %1368 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
  %1369 = @func_9100() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1370 = %1368.1;
  %1371 = %1369.0;
  (%1370, %1371)
}

def @func_7480() -> (Tensor[(7, 3, 10), float32],) {
  %1372 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %1373 = %1372.1;
  (%1373,)
}

def @func_9458() -> (Tensor[(7, 3, 10), float32],) {
  %1374 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %1375 = %1374.1;
  (%1375,)
}

def @func_14797() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1376 = @func_10853() /* ty=(Tensor[(7, 3, 10), int64], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), float64]) */;
  %1377 = %1376.1;
  %1378 = @func_11999() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1377, %1378)
}

def @func_5095() -> Tensor[(7, 3, 10), float32] {
  %1379 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1379.1
}

def @func_13357() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  %1380 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %1381 = @func_6615() /* ty=Tensor[(7, 3, 10), float32] */;
  %1382 = %1380.0;
  (%1381, %1382)
}

def @func_19297() -> (Tensor[(5, 11, 2688), float64],) {
  %1383 = @func_8386() /* ty=Tensor[(2688), float32] */;
  %1384 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %1385 = %1384.0;
  %1386 = cast(%1383, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %1387 = cast(%1385, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %1388 = mod(%1386, %1387) /* ty=Tensor[(5, 11, 2688), float64] */;
  (%1388,)
}

def @func_18793() -> Tensor[(55), float64] {
  @func_10119() /* ty=Tensor[(55), float64] */
}

def @func_12760() -> Tensor[(7, 3, 10), float32] {
  %1389 = @func_8660() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1389.0
}

def @func_6954() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1390 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1391 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %1392 = %1390.0;
  (%1391, %1392)
}

def @func_8343() -> Tensor[(2688), float32] {
  %1393 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %1393.3
}

def @func_5164() -> (Tensor[(7, 3, 10), float32],) {
  %1394 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1395 = %1394.1;
  (%1395,)
}

def @func_3248() -> (Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  %1396 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1397 = cast(meta[relay.Constant][58] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1398 = reshape(%1397, newshape=[6, 8, 2]) /* ty=Tensor[(6, 8, 2), float32] */;
  %1399 = @func_2328(%1398) /* ty=(Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) */;
  %1400 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1401 = %1396.0;
  %1402 = %1399.1;
  %1403 = %1400.1;
  (%1401, %1402, meta[relay.Constant][58] /* ty=Tensor[(96), float32] */, %1403)
}

def @func_16343() -> (Tensor[(7, 3, 10), float32],) {
  %1404 = @func_9100() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1405 = %1404.0;
  (%1405,)
}

def @func_21347() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %1406 = @func_18701() /* ty=(Tensor[(5, 11, ?), float64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32]) */;
  %1407 = @func_16400() /* ty=(Tensor[(55), float64],) */;
  %1408 = %1406.2;
  %1409 = %1407.0;
  (%1408, %1409)
}

def @func_13941() -> (Tensor[(7, 3, 10), float32],) {
  %1410 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1410,)
}

def @func_21866() -> (Tensor[(7, 3, 10), float32],) {
  %1411 = @func_19816() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1412 = %1411.0;
  (%1412,)
}

def @func_2344() -> (Tensor[(7, 3, 10), float64],) {
  %1413 = @func_1822() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) */;
  %1414 = %1413.0;
  (%1414,)
}

def @func_17731() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1415 = @func_14570() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64]) */;
  %1416 = %1415.0;
  %1417 = @func_17338() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1416, %1417)
}

def @func_20178() -> (Tensor[(7, 3, 10), float32],) {
  %1418 = @func_12917() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1418,)
}

def @func_15990() -> Tensor[(55), float32] {
  %1419 = @func_13492() /* ty=(Tensor[(55), float32], Tensor[(7, 3, 10), float32]) */;
  %1419.0
}

def @func_2024() -> Tensor[(7, 3, 10), float32] {
  %1420 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1420.1
}

def @func_4535() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1421 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1422 = %1421.1;
  %1423 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1422, %1423)
}

def @func_10853() -> (Tensor[(7, 3, 10), int64], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), float64]) {
  %1424 = @func_7398() /* ty=(Tensor[(7, 3, 10), int64],) */;
  %1425 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
  %1426 = %1425.1;
  %1427 = cast(%1426, dtype="float64") /* ty=Tensor[(6, 16, 15), float64] */;
  %1428 = sin(%1427) /* ty=Tensor[(6, 16, 15), float64] */;
  %1429 = cast(%1428, dtype="float64") /* ty=Tensor[(6, 16, 15), float64] */;
  %1430 = %1424.0;
  %1431 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
  %1432 = erf(%1429) /* ty=Tensor[(6, 16, 15), float64] */;
  (%1430, %1431, %1432)
}

def @func_7277(%var_7256: Tensor[(6, 44), int64]) -> (float32, Tensor[(7, 3, 10), float32], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32]) {
  %1433 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
  %1434 = cast(%var_7256, dtype="int64") /* ty=Tensor[(6, 44), int64] */;
  %1435 = reshape(%1434, newshape=[264]) /* ty=Tensor[(264), int64] */;
  %1436 = @func_6469(%1435) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %1437 = @func_4941() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1438 = %1433.5;
  %1439 = %1436.0;
  %1440 = %1437.0;
  (%1438, %1439, %var_7256, %1440)
}

def @func_8050() -> (Tensor[(7, 3, 10), float32],) {
  %1441 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %1442 = %1441.1;
  (%1442,)
}

def @func_1466() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1443 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  %1444 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1443, %1444)
}

def @func_413(%var_408: Tensor[(5, 11, 1), float64]) -> Tensor[(5, 11, 1), float64] {
  %1445 = cast(%var_408, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  log(%1445) /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_17020(%var_17008: Tensor[(2688), float32]) -> (Tensor[(2, 12, 11), int64], Tensor[(11, 5), float64], Tensor[(2688), float32]) {
  %1446 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %1447 = cast(%var_17008, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %1448 = reshape(%1447, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %1449 = @func_1736(%1448) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
  %1450 = %1446.1;
  %1451 = %1449.1;
  (%1450, %1451, %var_17008)
}

def @func_6327() -> Tensor[(7, 3, 10), float32] {
  %1452 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1452.3
}

def @func_12316() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
  %1453 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1454 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %1455 = %1453.1;
  %1456 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
  %1457 = @func_5385() /* ty=Tensor[(7, 3, 10), float32] */;
  %1458 = %1454.2;
  (%1455, %1456, %1457, %1458)
}

def @func_15658() -> (Tensor[(7, 3, 10), float64],) {
  %1459 = @func_7941() /* ty=Tensor[(7, 3, 10), float64] */;
  (%1459,)
}

def @func_20555(%var_20550: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) {
  %1460 = cast(%var_20550, dtype="int64") /* ty=Tensor[(264), int64] */;
  %1461 = reshape(%1460, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %1462 = @func_1558(%1461) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %1463 = @func_17326() /* ty=Tensor[(7, 3, 10), float32] */;
  %1464 = %1462.0;
  (%1463, %1464, %var_20550)
}

def @func_10262() -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %1465 = @func_6974() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1466 = %1465.0;
  %1467 = @func_8343() /* ty=Tensor[(2688), float32] */;
  (%1466, %1467)
}

def @func_3858() -> (Tensor[(5, 11, 1), float64],) {
  %1468 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %1469 = %1468.1;
  (%1469,)
}

def @func_4381() -> Tensor[(7, 3, 10), float32] {
  @func_1953() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_14962() -> (Tensor[(7, 3, 10), float32],) {
  %1470 = @func_9865() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1471 = %1470.0;
  (%1471,)
}

def @func_14436(%var_14398: Tensor[(1, 672), float64], %var_14399: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(1, 672), float64], Tensor[(55), float64], Tensor[(7, 3, 10), float64]) {
  %1472 = cast(%var_14398, dtype="float64") /* ty=Tensor[(1, 672), float64] */;
  %1473 = cast(%var_14399, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1474 = reshape(%1472, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %1475 = reshape(%1473, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1476 = @func_875(%1474, %1475) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1477 = @func_8881() /* ty=Tensor[(7, 3, 10), float32] */;
  %1478 = %1476.1;
  %1479 = @func_7941() /* ty=Tensor[(7, 3, 10), float64] */;
  (%1477, %1478, %var_14398, %var_14399, %1479)
}

def @func_18701() -> (Tensor[(5, 11, ?), float64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32]) {
  %1480 = @func_9491() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1481 = %1480.0;
  %1482 = cast(%1481, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %1483 = sin(%1482) /* ty=Tensor[(5, 11, 1), float64] */;
  %1484 = cast(%1481, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %1485 = shape_of(%1483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1486 = cast(%1483, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %1487 = dyn.reshape(%1484, %1485, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1488 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
  %1489 = mod(%1486, %1487) /* ty=Tensor[(5, 11, ?), float64] */;
  %1490 = %1488.0;
  %1491 = @func_14363() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1489, %1490, %1491)
}

def @func_20430() -> (Tensor[(600, ?), float32], Tensor[(600, ?), float32], Tensor[(5, 11, 1), float64]) {
  %1492 = @func_14885() /* ty=(Tensor[(600), float32], Tensor[(7, 3, 10), float32], Tensor[(640), float64], Tensor[(7, 3, 10), float64], Tensor[(600, ?), int32]) */;
  %1493 = %1492.4;
  %1494 = cast(%1493, dtype="float32") /* ty=Tensor[(600, ?), float32] */;
  %1495 = cast(%1493, dtype="float32") /* ty=Tensor[(600, ?), float32] */;
  %1496 = atanh(%1495) /* ty=Tensor[(600, ?), float32] */;
  %1497 = cast(%1496, dtype="float32") /* ty=Tensor[(600, ?), float32] */;
  %1498 = shape_of(%1493, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1499 = cast(%1493, dtype="float32") /* ty=Tensor[(600, ?), float32] */;
  %1500 = dyn.reshape(%1497, %1498, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1501 = sigmoid(%1494) /* ty=Tensor[(600, ?), float32] */;
  %1502 = subtract(%1499, %1500) /* ty=Tensor[(600, ?), float32] */;
  %1503 = @func_17314() /* ty=Tensor[(5, 11, 1), float64] */;
  (%1501, %1502, %1503)
}

def @func_3785() -> (Tensor[(5, 11, 1), float64],) {
  %1504 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1505 = %1504.0;
  (%1505,)
}

def @func_15425() -> Tensor[(1, 264), int64] {
  %1506 = @func_13612() /* ty=(Tensor[(1, 264), int64],) */;
  %1506.0
}

def @func_21485(%var_21429: float32, %var_21430: Tensor[(48), float32]) -> (Tensor[(7, 3, 10), float32], float32, Tensor[(264), int64], float32, Tensor[(48), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(264), int64]) {
  %1507 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %1508 = cast(meta[relay.Constant][59] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %1509 = cast(%var_21429, dtype="float32") /* ty=float32 */;
  %1510 = cast(%var_21430, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1511 = reshape(%1508, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
  %1512 = reshape(%1509, newshape=[]) /* ty=float32 */;
  %1513 = reshape(%1510, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1514 = @func_3963(%1511, %1512, %1513) /* ty=(Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) */;
  %1515 = @func_9361() /* ty=(Tensor[(55), float64], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1516 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %1517 = %1507.0;
  %1518 = %1514.4;
  %1519 = %1515.2;
  %1520 = @func_5095() /* ty=Tensor[(7, 3, 10), float32] */;
  %1521 = %1516.2;
  (%1517, %1518, meta[relay.Constant][59] /* ty=Tensor[(264), int64] */, %var_21429, %var_21430, %1519, %1520, %1521)
}

def @func_1736(%var_1691: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) {
  %1522 = cast(%var_1691, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %1523 = reshape(%1522, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %1524 = @func_1525(%1523) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %1525 = cast(%var_1691, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %1526 = reshape(%1525, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %1527 = @func_1525(%1526) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %1528 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %1529 = %1524.2;
  %1530 = %1527.2;
  (%1528, %1529, %var_1691, %1530)
}

def @func_2558() -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) {
  %1531 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1532 = cast(meta[relay.Constant][60] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %1533 = reshape(%1532, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %1534 = @func_1558(%1533) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %1535 = %1531.1;
  %1536 = %1534.0;
  (%1535, %1536, meta[relay.Constant][60] /* ty=Tensor[(264), int64] */)
}

def @func_12118() -> Tensor[(5, 11, 1), float64] {
  %1537 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1537.0
}

def @func_14062() -> (Tensor[(8, 16, 5), float64], Tensor[(6, 16, 15), bool]) {
  %1538 = @func_6503() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(600), float32]) */;
  %1539 = %1538.1;
  %1540 = @func_11120() /* ty=Tensor[(6, 16, 15), bool] */;
  (%1539, %1540)
}

def @func_16208() -> Tensor[(55), float64] {
  %1541 = @func_13861() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %1541.2
}

def @func_1525(%var_1500: Tensor[(14, 16, 12), float32]) -> (Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) {
  %1542 = cast(%var_1500, dtype="float32") /* ty=Tensor[(14, 16, 12), float32] */;
  %1543 = cast(meta[relay.Constant][61] /* ty=Tensor[(11, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 5), float64] */;
  %1544 = reshape(%1543, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1545 = @func_1440(%1544) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1546 = acos(%1542) /* ty=Tensor[(14, 16, 12), float32] */;
  %1547 = %1545.1;
  (%1546, %1547, meta[relay.Constant][61] /* ty=Tensor[(11, 5), float64] */)
}

def @func_10070() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(66, 4), int8], Tensor[(264), int64]) {
  %1548 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1549 = cast(meta[relay.Constant][62] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %1550 = reshape(%1549, newshape=[66, 4]) /* ty=Tensor[(66, 4), int64] */;
  %1551 = @func_9691(%1550) /* ty=(Tensor[(66, 4), int8],) */;
  %1552 = @func_9823() /* ty=Tensor[(5, 11, 1), float64] */;
  %1553 = @func_5284() /* ty=Tensor[(7, 3, 10), float32] */;
  %1554 = %1548.2;
  %1555 = %1551.0;
  (%1552, %1553, %1554, %1555, meta[relay.Constant][62] /* ty=Tensor[(264), int64] */)
}

def @func_22428() -> (Tensor[(10, 8, 8), float64],) {
  %1556 = cast(meta[relay.Constant][63] /* ty=Tensor[(10, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 8), float64] */;
  %1557 = tan(%1556) /* ty=Tensor[(10, 8, 8), float64] */;
  (%1557,)
}

def @main() -> (Tensor[(55), float64],) {
  %1558 = @func_13861() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %1559 = %1558.2;
  %1560 = cast(%1559, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1561 = log10(%1560) /* ty=Tensor[(55), float64] */;
  (%1561,)
}

def @func_17062() -> Tensor[(7, 3, 10), float32] {
  %1562 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1562.0
}

def @func_10700() -> (Tensor[(7, 3, 10), float32],) {
  %1563 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1564 = %1563.0;
  (%1564,)
}

def @func_8718() -> Tensor[(2688), float32] {
  %1565 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
  %1565.0
}

def @func_15353() -> (Tensor[(5, 11, 1), float64],) {
  %1566 = @func_13134() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %1567 = %1566.0;
  (%1567,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_17205() -> Tensor[(7, 3, 10), float32] {
  @func_17203() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_21175() -> (Tensor[(7, 3, 10), float32],) {
  %0 = @func_5923() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %1 = %0.1;
  (%1,)
}

def @func_17257() -> Tensor[(55), float64] {
  @func_17255() /* ty=Tensor[(55), float64] */
}

def @func_7498() -> Tensor[(7, 3, 10), float32] {
  @func_7496() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_12001() -> Tensor[(7, 3, 10), float32] {
  @func_11999() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_14993() -> (Tensor[(7, 3, 10), float32], Tensor[(11, 13, 3), int8], Tensor[(429), int8]) {
  %2 = @func_12160() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(429), int8] */, dtype="int8") /* ty=Tensor[(429), int8] */;
  %4 = reshape(%3, newshape=[11, 13, 3]) /* ty=Tensor[(11, 13, 3), int8] */;
  %5 = @func_11107(%4) /* ty=(Tensor[(11, 13, 3), int8],) */;
  %6 = %2.1;
  %7 = %5.0;
  (%6, %7, meta[relay.Constant][0] /* ty=Tensor[(429), int8] */)
}

def @func_5966() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) {
  @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */
}

def @func_9691(%var_9679: Tensor[(66, 4), int64]) -> (Tensor[(66, 4), int8],) {
  %8 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %9 = %8.7;
  %10 = cast(%var_9679, dtype="int8") /* ty=Tensor[(66, 4), int8] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(2), int32] */;
  %12 = cast(%9, dtype="int8") /* ty=Tensor[(66, 4), int8] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %14 = bitwise_xor(%12, %13) /* ty=Tensor[(66, 4), int8] */;
  (%14,)
}

def @func_6261() -> (Tensor[(7, 3, 10), float32],) {
  %17 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %15 = @func_3489() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %16 = %15.0;
    (%16,)
  };
  %17() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_6380(%var_6378: Tensor[(8, 2688), float32]) -> (Tensor[(8, 2688), float64], Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
  @func_6377(%var_6378) /* ty=(Tensor[(8, 2688), float64], Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_14922() -> Tensor[(1344, 2), float32] {
  %19 = fn () -> Tensor[(1344, 2), float32] {
    %18 = @func_5190() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */;
    %18.2
  };
  %19() /* ty=Tensor[(1344, 2), float32] */
}

def @func_15017() -> Tensor[(7, 3, 10), float32] {
  %21 = fn () -> Tensor[(7, 3, 10), float32] {
    %20 = @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */;
    %20.0
  };
  %21() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_2345() -> (Tensor[(7, 3, 10), float64],) {
  %24 = fn () -> (Tensor[(7, 3, 10), float64],) {
    %22 = @func_1822() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) */;
    %23 = %22.0;
    (%23,)
  };
  %24() /* ty=(Tensor[(7, 3, 10), float64],) */
}

def @func_9101() -> (Tensor[(7, 3, 10), float32],) {
  %26 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %25 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
    (%25,)
  };
  %26() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_15427() -> Tensor[(1, 264), int64] {
  @func_15425() /* ty=Tensor[(1, 264), int64] */
}

def @func_6956() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_6954() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_3860() -> (Tensor[(5, 11, 1), float64],) {
  @func_3858() /* ty=(Tensor[(5, 11, 1), float64],) */
}

def @func_21590(%var_21588: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32], Tensor[(7, 3, 10), float32]) {
  @func_21587(%var_21588) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_8052() -> (Tensor[(7, 3, 10), float32],) {
  @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_9694(%var_9692: Tensor[(66, 4), int64]) -> (Tensor[(66, 4), int8],) {
  @func_9691(%var_9692) /* ty=(Tensor[(66, 4), int8],) */
}

def @func_5335(%var_5333: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32]) {
  %27 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %28 = cast(%var_5333, dtype="float32") /* ty=Tensor[(600), float32] */;
  %29 = reshape(%28, newshape=[300, 2]) /* ty=Tensor[(300, 2), float32] */;
  %30 = @func_4837(%29) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(300, 2), float32], Tensor[(7, 3, 10), float64]) */;
  %31 = %27.0;
  %32 = %30.3;
  (%31, %32, %var_5333)
}

def @func_3177() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %33 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %35 = reshape(%34, newshape=[1, 2688]) /* ty=Tensor[(1, 2688), float32] */;
  %36 = @func_2798(%35) /* ty=(Tensor[(2, 12, 11), int64], Tensor[(2688), float32], Tensor[(1, 2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(55), int32], Tensor[(2688), float32]) */;
  %37 = %33.0;
  %38 = %36.3;
  (%37, %38, meta[relay.Constant][1] /* ty=Tensor[(2688), float32] */)
}

def @func_4942() -> (Tensor[(7, 3, 10), float32],) {
  %41 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %39 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %40 = %39.0;
    (%40,)
  };
  %41() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_8953() -> Tensor[(7, 3, 10), float32] {
  @func_5284() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_18346() -> (Tensor[(1344, 2), float32], Tensor[(7, 3, 10), float32]) {
  %42 = @func_14921() /* ty=Tensor[(1344, 2), float32] */;
  %43 = @func_11734() /* ty=Tensor[(7, 3, 10), float32] */;
  (%42, %43)
}

def @func_16208() -> Tensor[(55), float64] {
  %44 = @func_13861() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %44.2
}

def @func_2915() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) {
  %45 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %48 = reshape(%46, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %49 = reshape(%47, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %50 = @func_875(%48, %49) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %51 = %45.0;
  %52 = %50.1;
  (%51, %52, meta[relay.Constant][2] /* ty=Tensor[(672), float64] */, meta[relay.Constant][3] /* ty=Tensor[(55), float64] */)
}

def @func_7279(%var_7278: Tensor[(6, 44), int64]) -> (float32, Tensor[(7, 3, 10), float32], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32]) {
  %61 = fn (%var_7256: Tensor[(6, 44), int64]) -> (float32, Tensor[(7, 3, 10), float32], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32]) {
    %53 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
    %54 = cast(%var_7256, dtype="int64") /* ty=Tensor[(6, 44), int64] */;
    %55 = reshape(%54, newshape=[264]) /* ty=Tensor[(264), int64] */;
    %56 = @func_6469(%55) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
    %57 = @func_4941() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %58 = %53.5;
    %59 = %56.0;
    %60 = %57.0;
    (%58, %59, %var_7256, %60)
  };
  %61(%var_7278) /* ty=(float32, Tensor[(7, 3, 10), float32], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32]) */
}

def @func_14164(%var_14122: Tensor[(2, 264), int64], %var_14146: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(2, 264), bool], int64, Tensor[(60), int64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32]) {
  %62 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %63 = @func_13612() /* ty=(Tensor[(1, 264), int64],) */;
  %64 = %63.0;
  %65 = cast(%64, dtype="bool") /* ty=Tensor[(1, 264), bool] */;
  %66 = cast(%var_14122, dtype="bool") /* ty=Tensor[(2, 264), bool] */;
  %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %68 = reshape(%67, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %69 = @func_8478(%68) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], int64, Tensor[(60), int64]) */;
  %70 = cast(%var_14146, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %71 = reshape(%70, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %72 = @func_4809(%71) /* ty=(Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) */;
  %73 = %62.0;
  %74 = @func_6169() /* ty=Tensor[(55), float64] */;
  %75 = greater_equal(%65, %66) /* ty=Tensor[(2, 264), bool] */;
  %76 = %69.2;
  %77 = %72.13;
  (%73, %74, %75, %76, meta[relay.Constant][4] /* ty=Tensor[(60), int64] */, %77, %var_14146)
}

def @func_13393() -> Tensor[(7, 3, 10), float64] {
  %79 = fn () -> Tensor[(7, 3, 10), float64] {
    %78 = @func_8901() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
    %78.0
  };
  %79() /* ty=Tensor[(7, 3, 10), float64] */
}

def @func_18857(%var_18853: Tensor[(10, 13, 2), int8]) -> (Tensor[(10, 13, 2), int8],) {
  %80 = cast(%var_18853, dtype="int8") /* ty=Tensor[(10, 13, 2), int8] */;
  %81 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(10, 13, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 13, 2), int8] */, dtype="int8") /* ty=Tensor[(10, 13, 2), int8] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %84 = logical_xor(%82, %83) /* ty=Tensor[(10, 13, 2), int8] */;
  (%84,)
}

def @func_21001() -> (Tensor[(7, 3, 10), float32],) {
  %85 = @func_12705() /* ty=Tensor[(7, 3, 10), float32] */;
  (%85,)
}

def @func_20212() -> Tensor[(7, 3, 10), float32] {
  %87 = fn () -> Tensor[(7, 3, 10), float32] {
    %86 = @func_12234() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %86.3
  };
  %87() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_15332() -> (Tensor[(7, 3, 10), float32],) {
  %89 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %88 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
    (%88,)
  };
  %89() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @main() -> (Tensor[(55), float64],) {
  %90 = @func_13863() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %91 = %90.2;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(55), float64] */;
  %93 = log10(%92) /* ty=Tensor[(55), float64] */;
  (%93,)
}

def @func_20019() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %94 = @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %95 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %96 = %94.2;
  %97 = %95.0;
  (%96, %97)
}

def @func_8386() -> Tensor[(2688), float32] {
  %98 = @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */;
  %98.2
}

def @func_12762() -> Tensor[(7, 3, 10), float32] {
  @func_12760() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_11735() -> Tensor[(7, 3, 10), float32] {
  %100 = fn () -> Tensor[(7, 3, 10), float32] {
    %99 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %99.2
  };
  %100() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_13613() -> (Tensor[(1, 264), int64],) {
  %103 = fn () -> (Tensor[(1, 264), int64],) {
    %101 = @func_12557() /* ty=(Tensor[(48), float32], float32, Tensor[(1, 264), int64]) */;
    %102 = %101.2;
    (%102,)
  };
  %103() /* ty=(Tensor[(1, 264), int64],) */
}

def @func_12161() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %108 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %104 = @func_8660() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %105 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %106 = %104.0;
    %107 = %105.0;
    (%106, %107)
  };
  %108() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_16272() -> Tensor[(8, 7, 2), float64] {
  %110 = fn () -> Tensor[(8, 7, 2), float64] {
    %109 = @func_13930() /* ty=(Tensor[(8, 7, 2), float64],) */;
    %109.0
  };
  %110() /* ty=Tensor[(8, 7, 2), float64] */
}

def @func_17022(%var_17021: Tensor[(2688), float32]) -> (Tensor[(2, 12, 11), int64], Tensor[(11, 5), float64], Tensor[(2688), float32]) {
  %117 = fn (%var_17008: Tensor[(2688), float32]) -> (Tensor[(2, 12, 11), int64], Tensor[(11, 5), float64], Tensor[(2688), float32]) {
    %111 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
    %112 = cast(%var_17008, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %113 = reshape(%112, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
    %114 = @func_1736(%113) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
    %115 = %111.1;
    %116 = %114.1;
    (%115, %116, %var_17008)
  };
  %117(%var_17021) /* ty=(Tensor[(2, 12, 11), int64], Tensor[(11, 5), float64], Tensor[(2688), float32]) */
}

def @func_3490() -> (Tensor[(7, 3, 10), float32],) {
  %120 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %118 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %119 = %118.0;
    (%119,)
  };
  %120() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_17339() -> Tensor[(7, 3, 10), float32] {
  %122 = fn () -> Tensor[(7, 3, 10), float32] {
    %121 = @func_13834() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %121.0
  };
  %122() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_20816(%var_20814: Tensor[(48), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(12, 4), float32], Tensor[(48), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_20813(%var_20814) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(12, 4), float32], Tensor[(48), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_16036() -> (Tensor[(7, 3, 10), float32], Tensor[(13, 13, 4), float64], Tensor[(676), float64]) {
  %129 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(13, 13, 4), float64], Tensor[(676), float64]) {
    %123 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(676), float64] */, dtype="float64") /* ty=Tensor[(676), float64] */;
    %125 = reshape(%124, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), float64] */;
    %126 = @func_5655(%125) /* ty=(Tensor[(13, 13, 4), float64],) */;
    %127 = %123.0;
    %128 = %126.0;
    (%127, %128, meta[relay.Constant][6] /* ty=Tensor[(676), float64] */)
  };
  %129() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(13, 13, 4), float64], Tensor[(676), float64]) */
}

def @func_12464() -> Tensor[(5, 11, 1), float64] {
  @func_12462() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_4195(%var_4193: Tensor[(7, 5, 5), uint32], %var_4194: Tensor[(7, 5, 5), uint32]) -> Tensor[(7, 5, 5), bool] {
  @func_4191(%var_4193, %var_4194) /* ty=Tensor[(7, 5, 5), bool] */
}

def @func_3899(%var_3897: Tensor[(600, 1), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(600, 1), float64]) {
  @func_3896(%var_3897) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(600, 1), float64]) */
}

def @func_4176() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
  %130 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %131 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
  %132 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %133 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %134 = %133.0;
  %135 = cast(%134, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %136 = %132.0;
  %137 = cast(%136, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %138 = reshape(%137, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %139 = %130.0;
  %140 = %131.1;
  %141 = sigmoid(%135) /* ty=Tensor[(7, 3, 10), float64] */;
  %142 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  %143 = @func_413(%138) /* ty=Tensor[(5, 11, 1), float64] */;
  %144 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  (%139, %140, %136, %141, %142, %143, %144)
}

def @func_18145() -> (Tensor[(7, 3, 10), float32],) {
  %146 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %145 = @func_2284() /* ty=Tensor[(7, 3, 10), float32] */;
    (%145,)
  };
  %146() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_6975() -> (Tensor[(7, 3, 10), float32],) {
  %149 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %147 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %148 = %147.0;
    (%148,)
  };
  %149() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_11351() -> (Tensor[(7, 3, 10), float32],) {
  @func_11349() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_2661() -> (Tensor[(7, 3, 10), float32],) {
  @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_7127() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %154 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %150 = @func_6954() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %151 = @func_3441() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
    %152 = %150.0;
    %153 = %151.0;
    (%152, %153)
  };
  %154() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_7923(%var_7921: Tensor[(8, 11, 6), float32]) -> (Tensor[(8, 11, 6), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(55), float64], Tensor[(7, 3, 10), float64]) {
  @func_7920(%var_7921) /* ty=(Tensor[(8, 11, 6), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(55), float64], Tensor[(7, 3, 10), float64]) */
}

def @func_1823() -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) {
  %169 = fn () -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) {
    %155 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
    %156 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %157 = %156.0;
    %158 = cast(%157, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
    %159 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%155, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %162 = cast(meta[relay.Constant][7] /* ty=Tensor[(168, 4), float64] */, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
    %163 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 5), float64] */;
    %164 = reshape(%162, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
    %165 = reshape(%163, newshape=[55]) /* ty=Tensor[(55), float64] */;
    %166 = @func_875(%164, %165) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %167 = power(%160, %161) /* ty=Tensor[(7, 3, 10), float64] */;
    %168 = %166.2;
    (%167, %168, meta[relay.Constant][7] /* ty=Tensor[(168, 4), float64] */, meta[relay.Constant][8] /* ty=Tensor[(11, 5), float64] */)
  };
  %169() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) */
}

def @func_2383() -> (Tensor[(7, 3, 10), float64],) {
  %170 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %171 = %170.1;
  (%171,)
}

def @func_18609() -> (Tensor[(5, 11, 1), float64],) {
  %174 = fn () -> (Tensor[(5, 11, 1), float64],) {
    %172 = @func_15353() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %173 = %172.0;
    (%173,)
  };
  %174() /* ty=(Tensor[(5, 11, 1), float64],) */
}

def @func_6933() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(264), int64]) {
  %175 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %176 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %177 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %178 = @func_4397() /* ty=Tensor[(55), float64] */;
  %179 = %175.0;
  %180 = %176.1;
  %181 = %177.2;
  (%178, %179, %180, %181)
}

def @func_14799() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_14797() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_1370() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */
}

def @func_19225() -> Tensor[(7, 3, 10), float32] {
  %182 = fn () -> Tensor[(7, 3, 10), float32] {
    @func_18099() /* ty=Tensor[(7, 3, 10), float32] */
  };
  %182() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_15990() -> Tensor[(55), float32] {
  %183 = @func_13492() /* ty=(Tensor[(55), float32], Tensor[(7, 3, 10), float32]) */;
  %183.0
}

def @func_20557(%var_20556: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) {
  %189 = fn (%var_20550: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) {
    %184 = cast(%var_20550, dtype="int64") /* ty=Tensor[(264), int64] */;
    %185 = reshape(%184, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
    %186 = @func_1558(%185) /* ty=(Tensor[(2, 12, 11), int64],) */;
    %187 = @func_17326() /* ty=Tensor[(7, 3, 10), float32] */;
    %188 = %186.0;
    (%187, %188, %var_20550)
  };
  %189(%var_20556) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */
}

def @func_11903() -> Tensor[(7, 3, 10), float32] {
  @func_11901() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_9867() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_9865() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_2328(%var_2307: Tensor[(6, 8, 2), float32]) -> (Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) {
  %190 = cast(%var_2307, dtype="float32") /* ty=Tensor[(6, 8, 2), float32] */;
  %191 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %192 = %191.3;
  %193 = cast(%192, dtype="float32") /* ty=Tensor[(14, 16, 12), float32] */;
  %194 = reshape(%193, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %195 = @func_1736(%194) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
  %196 = tan(%190) /* ty=Tensor[(6, 8, 2), float32] */;
  %197 = %195.1;
  (%196, %192, %197)
}

def @func_7398() -> (Tensor[(7, 3, 10), int64],) {
  %198 = @func_4495() /* ty=Tensor[(7, 3, 10), float32] */;
  %199 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 3, 10), float32] */, dtype="int64") /* ty=Tensor[(7, 3, 10), int64] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%198, dtype="int64") /* ty=Tensor[(7, 3, 10), int64] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %203 = bitwise_xor(%201, %202) /* ty=Tensor[(7, 3, 10), int64] */;
  (%203,)
}

def @func_14364() -> Tensor[(7, 3, 10), float32] {
  %204 = fn () -> Tensor[(7, 3, 10), float32] {
    @func_12917() /* ty=Tensor[(7, 3, 10), float32] */
  };
  %204() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_8705() -> (Tensor[(672), float64],) {
  @func_8703() /* ty=(Tensor[(672), float64],) */
}

def @func_5338(%var_5336: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32]) {
  @func_5335(%var_5336) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32]) */
}

def @func_1467() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %207 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %205 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
    %206 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
    (%205, %206)
  };
  %207() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_14261(%var_14240: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(1, 264), int64]) {
  %208 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %209 = cast(%var_14240, dtype="float64") /* ty=Tensor[(55), float64] */;
  %210 = reshape(%209, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %211 = @func_13612() /* ty=(Tensor[(1, 264), int64],) */;
  %212 = %208.0;
  %213 = @func_13058() /* ty=Tensor[(7, 3, 10), float32] */;
  %214 = @func_413(%210) /* ty=Tensor[(5, 11, 1), float64] */;
  %215 = %211.0;
  (%212, %213, %214, %var_14240, %215)
}

def @func_1443(%var_1441: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  @func_1440(%var_1441) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */
}

def @func_20281() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_20279() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_3393(%var_3367: Tensor[(132, 2), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) {
  %216 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %217 = cast(meta[relay.Constant][10] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %218 = reshape(%217, newshape=[6, 8, 2]) /* ty=Tensor[(6, 8, 2), float32] */;
  %219 = @func_2328(%218) /* ty=(Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) */;
  %220 = cast(%var_3367, dtype="int64") /* ty=Tensor[(132, 2), int64] */;
  %221 = reshape(%220, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %222 = @func_1558(%221) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %223 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %224 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  %225 = %216.5;
  %226 = %219.1;
  %227 = %222.0;
  %228 = %223.7;
  %229 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  (%224, %225, %226, meta[relay.Constant][10] /* ty=Tensor[(96), float32] */, %227, %var_3367, %228, %229)
}

def @func_21015() -> (Tensor[(5, 11, 1), float64],) {
  %230 = @func_12887() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %231 = %230.0;
  (%231,)
}

def @func_4537() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_13291() -> (Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %232 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %233 = @func_8386() /* ty=Tensor[(2688), float32] */;
  %234 = @func_9050() /* ty=Tensor[(7, 3, 10), float32] */;
  %235 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  %236 = %232.0;
  (%233, %234, %235, %236)
}

def @func_10426() -> Tensor[(55), float64] {
  %238 = fn () -> Tensor[(55), float64] {
    %237 = @func_6191() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %237.0
  };
  %238() /* ty=Tensor[(55), float64] */
}

def @func_13943() -> (Tensor[(7, 3, 10), float32],) {
  @func_13941() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_3037() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %239 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %240 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %241 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %242 = %239.0;
  %243 = %240.2;
  %244 = %241.3;
  (%242, %243, %244)
}

def @func_5386() -> Tensor[(7, 3, 10), float32] {
  %246 = fn () -> Tensor[(7, 3, 10), float32] {
    %245 = @func_3489() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %245.0
  };
  %246() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_3597(%var_3594: Tensor[(2688), float32], %var_3595: Tensor[(2688), float64], %var_3596: Tensor[(2688), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(7, 3, 10), float32], Tensor[(2688), int32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(2688), uint32]) {
  %270 = fn (%var_3527: Tensor[(2688), float32], %var_3540: Tensor[(2688), float64], %var_3583: Tensor[(2688), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(7, 3, 10), float32], Tensor[(2688), int32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(2688), uint32]) {
    %247 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %248 = cast(%var_3527, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %249 = reshape(%248, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
    %250 = @func_1525(%249) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
    %251 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %252 = cast(%var_3527, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %253 = sqrt(%252) /* ty=Tensor[(2688), float64] */;
    %254 = cast(%var_3540, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(1), int32] */;
    %256 = cast(%253, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?), int32] */;
    %258 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %259 = cast(%var_3583, dtype="uint32") /* ty=Tensor[(2688), uint32] */;
    %260 = shape_of(%var_3540, dtype="int32") /* ty=Tensor[(1), int32] */;
    %261 = cast(%var_3540, dtype="uint32") /* ty=Tensor[(2688), uint32] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %263 = %247.0;
    %264 = %250.2;
    %265 = %251.0;
    %266 = left_shift(%256, %257) /* ty=Tensor[(2688), int32] */;
    %267 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
    %268 = %258.2;
    %269 = subtract(%261, %262) /* ty=Tensor[(2688), uint32] */;
    (%263, %264, %265, %266, %267, %268, %269)
  };
  %270(%var_3594, %var_3595, %var_3596) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(7, 3, 10), float32], Tensor[(2688), int32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(2688), uint32]) */
}

def @func_3719() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) {
  %284 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) {
    %271 = @func_3177() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %272 = @func_3489() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %273 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %274 = cast(3.36731f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %275 = cast(meta[relay.Constant][11] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %276 = reshape(%274, newshape=[]) /* ty=float32 */;
    %277 = reshape(%275, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), float32] */;
    %278 = @func_1330(%276, %277) /* ty=(Tensor[(3, 16, 1), float32], Tensor[(55), float64], Tensor[(672), float64], Tensor[(55, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %279 = %271.0;
    %280 = %272.0;
    %281 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
    %282 = %273.1;
    %283 = %278.3;
    (%279, %280, %281, %282, %283, 3.36731f /* ty=float32 */, meta[relay.Constant][11] /* ty=Tensor[(48), float32] */)
  };
  %284() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */
}

def @func_12707() -> Tensor[(7, 3, 10), float32] {
  @func_12705() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_6104() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) {
  %293 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) {
    %285 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %286 = cast(meta[relay.Constant][12] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %287 = cast(meta[relay.Constant][13] /* ty=Tensor[(55, 1), float64] */, dtype="float64") /* ty=Tensor[(55, 1), float64] */;
    %288 = reshape(%286, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
    %289 = reshape(%287, newshape=[55]) /* ty=Tensor[(55), float64] */;
    %290 = @func_875(%288, %289) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %291 = %285.1;
    %292 = %290.1;
    (%291, %292, meta[relay.Constant][12] /* ty=Tensor[(672), float64] */, meta[relay.Constant][13] /* ty=Tensor[(55, 1), float64] */)
  };
  %293() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) */
}

def @func_2605(%var_2604: Tensor[(55), float64]) -> (Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) {
  %308 = fn (%var_2594: Tensor[(55), float64]) -> (Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) {
    %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
    %295 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(12, 4, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %296 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 13), float64] */;
    %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %298 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %299 = cast(%var_2594, dtype="float64") /* ty=Tensor[(55), float64] */;
    %300 = reshape(%299, newshape=[55]) /* ty=Tensor[(55), float64] */;
    %301 = @func_1440(%300) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %302 = cast(%var_2594, dtype="float64") /* ty=Tensor[(55), float64] */;
    %303 = reshape(%302, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
    %304 = add(%296, %297) /* ty=Tensor[(12, 4, 13), float64] */;
    %305 = %298.1;
    %306 = %301.0;
    %307 = @func_413(%303) /* ty=Tensor[(5, 11, 1), float64] */;
    (%304, %305, %306, %var_2594, %307)
  };
  %308(%var_2604) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) */
}

def @func_11524(%var_11522: Tensor[(2, 320), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(8, 16, 5), float64], Tensor[(2, 320), float64]) {
  @func_11521(%var_11522) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(8, 16, 5), float64], Tensor[(2, 320), float64]) */
}

def @func_17064() -> Tensor[(7, 3, 10), float32] {
  @func_17062() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_8223(%var_8221: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 7), bool]) {
  @func_8220(%var_8221) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 7), bool]) */
}

def @func_18278() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  @func_18276() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */
}

def @func_8430() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %309 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %310 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %311 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  %312 = %309.0;
  %313 = %310.1;
  (%311, %312, %313)
}

def @func_19758() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %314 = @func_12523() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %315 = @func_16841() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %316 = %314.1;
  %317 = %315.1;
  (%316, %317)
}

def @func_3858() -> (Tensor[(5, 11, 1), float64],) {
  %318 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %319 = %318.1;
  (%319,)
}

def @func_9361() -> (Tensor[(55), float64], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %320 = @func_7562() /* ty=(Tensor[(55), float64],) */;
  %321 = cast(meta[relay.Constant][16] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %322 = reshape(%321, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %323 = @func_1558(%322) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %324 = @func_6191() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %325 = @func_7126() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %326 = %320.0;
  %327 = %323.0;
  %328 = @func_4381() /* ty=Tensor[(7, 3, 10), float32] */;
  %329 = %324.1;
  %330 = %325.0;
  (%326, %327, meta[relay.Constant][16] /* ty=Tensor[(264), int64] */, %328, %329, %330)
}

def @func_12889() -> (Tensor[(5, 11, 1), float64],) {
  @func_12887() /* ty=(Tensor[(5, 11, 1), float64],) */
}

def @func_15226() -> (Tensor[(1300), float32],) {
  @func_15224() /* ty=(Tensor[(1300), float32],) */
}

def @func_1283() -> (Tensor[(7, 3, 10), float32],) {
  @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_5164() -> (Tensor[(7, 3, 10), float32],) {
  %331 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %332 = %331.1;
  (%332,)
}

def @func_16210() -> Tensor[(55), float64] {
  @func_16208() /* ty=Tensor[(55), float64] */
}

def @func_16690() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  @func_16688() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_5097() -> Tensor[(7, 3, 10), float32] {
  @func_5095() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_12525() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_12523() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_15183() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  %333 = @func_13357() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) */;
  %334 = @func_13134() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %335 = @func_8901() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
  %336 = %333.0;
  %337 = %334.1;
  %338 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  %339 = %335.0;
  (%336, %337, %338, %339)
}

def @func_22311() -> Tensor[(640), float64] {
  @func_22309() /* ty=Tensor[(640), float64] */
}

def @func_3650() -> (Tensor[(55), float64],) {
  @func_3648() /* ty=(Tensor[(55), float64],) */
}

def @func_16387() -> Tensor[(7, 3, 10), float32] {
  %341 = fn () -> Tensor[(7, 3, 10), float32] {
    %340 = @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */;
    %340.1
  };
  %341() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_7549() -> Tensor[(7, 3, 10), float32] {
  %343 = fn () -> Tensor[(7, 3, 10), float32] {
    %342 = @func_7528() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %342.0
  };
  %343() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_22309() -> Tensor[(640), float64] {
  %344 = @func_18846() /* ty=(Tensor[(640), float64],) */;
  %344.0
}

def @func_3106() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
  @func_3104() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */
}

def @func_5727() -> (Tensor[(5, 11, ?), float32],) {
  %354 = fn () -> (Tensor[(5, 11, ?), float32],) {
    %345 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
    %346 = %345.5;
    %347 = cast(%346, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %348 = acos(%347) /* ty=Tensor[(5, 11, 1), float64] */;
    %349 = cast(%348, dtype="float32") /* ty=Tensor[(5, 11, 1), float32] */;
    %350 = shape_of(%346, dtype="int32") /* ty=Tensor[(3), int32] */;
    %351 = cast(%346, dtype="float32") /* ty=Tensor[(5, 11, 1), float32] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %353 = add(%351, %352) /* ty=Tensor[(5, 11, ?), float32] */;
    (%353,)
  };
  %354() /* ty=(Tensor[(5, 11, ?), float32],) */
}

def @func_7720() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %365 = fn () -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %355 = @func_1822() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) */;
    %356 = @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %357 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
    %358 = @func_4973() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %359 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
    %360 = %355.1;
    %361 = %356.0;
    %362 = %357.0;
    %363 = %358.0;
    %364 = %359.5;
    (%360, %361, %362, %363, %364)
  };
  %365() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_14040() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %366 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %367 = @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %368 = %366.0;
  %369 = @func_6169() /* ty=Tensor[(55), float64] */;
  %370 = %367.2;
  (%368, %369, %370)
}

def @func_7942() -> Tensor[(7, 3, 10), float64] {
  %372 = fn () -> Tensor[(7, 3, 10), float64] {
    %371 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
    %371.0
  };
  %372() /* ty=Tensor[(7, 3, 10), float64] */
}

def @func_21100() -> (Tensor[(7, 3, 10), float64],) {
  %375 = fn () -> (Tensor[(7, 3, 10), float64],) {
    %373 = @func_15921() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
    %374 = %373.3;
    (%374,)
  };
  %375() /* ty=(Tensor[(7, 3, 10), float64],) */
}

def @func_16101() -> (Tensor[(1300), float32],) {
  %376 = @func_15224() /* ty=(Tensor[(1300), float32],) */;
  %377 = %376.0;
  (%377,)
}

def @func_13494() -> (Tensor[(55), float32], Tensor[(7, 3, 10), float32]) {
  @func_13492() /* ty=(Tensor[(55), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_6046(%var_6045: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], float32, Tensor[(1344), int16], Tensor[(600), float32]) {
  %393 = fn (%var_6035: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], float32, Tensor[(1344), int16], Tensor[(600), float32]) {
    %378 = @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %379 = %378.0;
    %380 = cast(%379, dtype="float32") /* ty=Tensor[(7, 3, 10), float32] */;
    %381 = cast(meta[relay.Constant][17] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
    %382 = reshape(%381, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), float64] */;
    %383 = cast(meta[relay.Constant][18] /* ty=Tensor[(1344), int16] */, dtype="int16") /* ty=Tensor[(1344), int16] */;
    %384 = cast(meta[relay.Constant][18] /* ty=Tensor[(1344), int16] */, dtype="int16") /* ty=Tensor[(1344), int16] */;
    %385 = cast(%var_6035, dtype="float32") /* ty=Tensor[(600), float32] */;
    %386 = reshape(%383, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), int16] */;
    %387 = reshape(%384, newshape=[12, 14, 8]) /* ty=Tensor[(12, 14, 8), int16] */;
    %388 = reshape(%385, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %389 = @func_5509(%386, %387, %388) /* ty=(Tensor[(12, 14, 8), bool], Tensor[(4, 10, 15), float32], Tensor[(600), float32], float32) */;
    %390 = acosh(%380) /* ty=Tensor[(7, 3, 10), float32] */;
    %391 = @func_4609(%382) /* ty=Tensor[(8, 16, 5), float64] */;
    %392 = %389.3;
    (%390, %391, meta[relay.Constant][17] /* ty=Tensor[(640), float64] */, %392, meta[relay.Constant][18] /* ty=Tensor[(1344), int16] */, %var_6035)
  };
  %393(%var_6045) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], float32, Tensor[(1344), int16], Tensor[(600), float32]) */
}

def @func_17314() -> Tensor[(5, 11, 1), float64] {
  @func_16417() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_21587(%var_21578: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32], Tensor[(7, 3, 10), float32]) {
  %394 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
  %395 = cast(%var_21578, dtype="float32") /* ty=Tensor[(600), float32] */;
  %396 = reshape(%395, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %397 = @func_5335(%396) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(600), float32]) */;
  %398 = @func_7528() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %399 = %394.0;
  %400 = %397.1;
  %401 = %398.0;
  (%399, %400, %var_21578, %401)
}

def @func_4974() -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %405 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
    %402 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
    %403 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
    %404 = %402.0;
    (%403, %404)
  };
  %405() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */
}

def @func_18034(%var_18033: Tensor[(6, 44), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32], Tensor[(66, 4), int8], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %418 = fn (%var_18001: Tensor[(6, 44), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32], Tensor[(66, 4), int8], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %406 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %407 = cast(%var_18001, dtype="int64") /* ty=Tensor[(6, 44), int64] */;
    %408 = reshape(%407, newshape=[66, 4]) /* ty=Tensor[(66, 4), int64] */;
    %409 = @func_9691(%408) /* ty=(Tensor[(66, 4), int8],) */;
    %410 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %411 = @func_12316() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */;
    %412 = %406.1;
    %413 = @func_12917() /* ty=Tensor[(7, 3, 10), float32] */;
    %414 = @func_8343() /* ty=Tensor[(2688), float32] */;
    %415 = %409.0;
    %416 = %410.1;
    %417 = %411.2;
    (%412, %413, %414, %415, %var_18001, %416, %417)
  };
  %418(%var_18033) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32], Tensor[(66, 4), int8], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_6504() -> (Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(600), float32]) {
  %425 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(600), float32]) {
    %419 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %420 = cast(meta[relay.Constant][19] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
    %421 = reshape(%420, newshape=[6, 100]) /* ty=Tensor[(6, 100), float32] */;
    %422 = @func_5478(%421) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 100), float32]) */;
    %423 = %419.0;
    %424 = %422.3;
    (%423, %424, meta[relay.Constant][19] /* ty=Tensor[(600), float32] */)
  };
  %425() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(600), float32]) */
}

def @func_2560() -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) {
  @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */
}

def @func_3967(%var_3964: Tensor[(132, 2), int64], %var_3965: float32, %var_3966: Tensor[(48), float32]) -> (Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) {
  %444 = fn (%var_3913: Tensor[(132, 2), int64], %var_3927: float32, %var_3928: Tensor[(48), float32]) -> (Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) {
    %426 = @func_3462() /* ty=(Tensor[(1, 2688), float32],) */;
    %427 = %426.0;
    %428 = cast(%427, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
    %429 = reshape(%428, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
    %430 = @func_1525(%429) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
    %431 = cast(%var_3927, dtype="float32") /* ty=float32 */;
    %432 = cast(%var_3928, dtype="float32") /* ty=Tensor[(48), float32] */;
    %433 = reshape(%431, newshape=[]) /* ty=float32 */;
    %434 = reshape(%432, newshape=[3, 16, 1]) /* ty=Tensor[(3, 16, 1), float32] */;
    %435 = @func_1330(%433, %434) /* ty=(Tensor[(3, 16, 1), float32], Tensor[(55), float64], Tensor[(672), float64], Tensor[(55, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %436 = cast(%var_3913, dtype="int64") /* ty=Tensor[(132, 2), int64] */;
    %437 = reshape(%436, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
    %438 = @func_3393(%437) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) */;
    %439 = %438.2;
    %440 = cast(%439, dtype="float64") /* ty=Tensor[(14, 16, 12), float64] */;
    %441 = %430.0;
    %442 = %435.0;
    %443 = log(%440) /* ty=Tensor[(14, 16, 12), float64] */;
    (%427, %var_3913, %441, %442, %var_3927, %var_3928, %443)
  };
  %444(%var_3964, %var_3965, %var_3966) /* ty=(Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) */
}

def @func_8303() -> Tensor[(7, 3, 10), float32] {
  %445 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %445.0
}

def @func_18522() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), float32], Tensor[(7, 3, 10), float64], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  %446 = @func_16930() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %447 = @func_13985() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %448 = @func_5726() /* ty=(Tensor[(5, 11, ?), float32],) */;
  %449 = %448.0;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(5, 11, ?), float64] */;
  %451 = cast(meta[relay.Constant][20] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %452 = reshape(%450, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %453 = reshape(%451, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %454 = @func_3152(%452, %453) /* ty=(Tensor[(7, 3, 10), float64], Tensor[(12, 4, 13), float64], Tensor[(55), float64], Tensor[(6, 8, 2), float32], Tensor[(96), float32]) */;
  %455 = @func_14570() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64]) */;
  %456 = %446.0;
  %457 = %447.2;
  %458 = @func_16754() /* ty=Tensor[(7, 3, 10), float32] */;
  %459 = %454.0;
  %460 = %455.0;
  (%456, %457, %458, %449, %459, meta[relay.Constant][20] /* ty=Tensor[(96), float32] */, %460)
}

def @func_16417() -> Tensor[(5, 11, 1), float64] {
  @func_12118() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_6880() -> (Tensor[(7, 3, 10), float32],) {
  @func_6878() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_4579() -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %461 = @func_2344() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %462 = cast(meta[relay.Constant][21] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %463 = cast(meta[relay.Constant][21] /* ty=Tensor[(2688), float32] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %464 = cast(meta[relay.Constant][21] /* ty=Tensor[(2688), float32] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %465 = reshape(%462, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %466 = reshape(%463, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %467 = reshape(%464, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %468 = @func_3593(%465, %466, %467) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(7, 3, 10), float32], Tensor[(2688), int32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(2688), uint32]) */;
  %469 = %461.0;
  %470 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  %471 = %468.2;
  (%469, %470, %471, meta[relay.Constant][21] /* ty=Tensor[(2688), float32] */)
}

def @func_19102(%var_19101: Tensor[(2688), float32]) -> (Tensor[(2688), int16], Tensor[(55), float64]) {
  %481 = fn (%var_19058: Tensor[(2688), float32]) -> (Tensor[(2688), int16], Tensor[(55), float64]) {
    %472 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
    %473 = %472.0;
    %474 = cast(%var_19058, dtype="int16") /* ty=Tensor[(2688), int16] */;
    %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(1), int32] */;
    %476 = cast(%473, dtype="int16") /* ty=Tensor[(2688), int16] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?), int16] */;
    %478 = @func_3648() /* ty=(Tensor[(55), float64],) */;
    %479 = right_shift(%476, %477) /* ty=Tensor[(2688), int16] */;
    %480 = %478.0;
    (%479, %480)
  };
  %481(%var_19101) /* ty=(Tensor[(2688), int16], Tensor[(55), float64]) */
}

def @func_3443() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
  @func_3441() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_12317() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
  %488 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
    %482 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %483 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
    %484 = %482.1;
    %485 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
    %486 = @func_5385() /* ty=Tensor[(7, 3, 10), float32] */;
    %487 = %483.2;
    (%484, %485, %486, %487)
  };
  %488() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */
}

def @func_8050() -> (Tensor[(7, 3, 10), float32],) {
  %489 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %490 = %489.1;
  (%490,)
}

def @func_22412() -> (Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64]) {
  %494 = fn () -> (Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64]) {
    %491 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
    %492 = %491.2;
    %493 = @func_12118() /* ty=Tensor[(5, 11, 1), float64] */;
    (%492, %493)
  };
  %494() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64]) */
}

def @func_1333(%var_1331: float32, %var_1332: Tensor[(3, 16, 1), float32]) -> (Tensor[(3, 16, 1), float32], Tensor[(55), float64], Tensor[(672), float64], Tensor[(55, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %513 = fn (%var_1291: float32, %var_1292: Tensor[(3, 16, 1), float32]) -> (Tensor[(3, 16, 1), float32], Tensor[(55), float64], Tensor[(672), float64], Tensor[(55, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
    %495 = cast(%var_1291, dtype="float32") /* ty=float32 */;
    %496 = cast(%var_1292, dtype="float32") /* ty=Tensor[(3, 16, 1), float32] */;
    %497 = cast(meta[relay.Constant][22] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %498 = cast(meta[relay.Constant][23] /* ty=Tensor[(55, 1), float64] */, dtype="float64") /* ty=Tensor[(55, 1), float64] */;
    %499 = reshape(%497, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
    %500 = reshape(%498, newshape=[55]) /* ty=Tensor[(55), float64] */;
    %501 = @func_875(%499, %500) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %502 = %501.2;
    %503 = cast(%502, dtype="float64") /* ty=Tensor[(55), float64] */;
    %504 = reshape(%503, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
    %505 = cast(meta[relay.Constant][22] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %506 = cast(meta[relay.Constant][23] /* ty=Tensor[(55, 1), float64] */, dtype="float64") /* ty=Tensor[(55, 1), float64] */;
    %507 = reshape(%505, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
    %508 = reshape(%506, newshape=[55]) /* ty=Tensor[(55), float64] */;
    %509 = @func_875(%507, %508) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %510 = divide(%495, %496) /* ty=Tensor[(3, 16, 1), float32] */;
    %511 = @func_413(%504) /* ty=Tensor[(5, 11, 1), float64] */;
    %512 = %509.2;
    (%510, %502, meta[relay.Constant][22] /* ty=Tensor[(672), float64] */, meta[relay.Constant][23] /* ty=Tensor[(55, 1), float64] */, %511, %512)
  };
  %513(%var_1331, %var_1332) /* ty=(Tensor[(3, 16, 1), float32], Tensor[(55), float64], Tensor[(672), float64], Tensor[(55, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */
}

def @func_4080() -> (Tensor[(5, 11, 1), float64],) {
  %516 = fn () -> (Tensor[(5, 11, 1), float64],) {
    %514 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %515 = %514.2;
    (%515,)
  };
  %516() /* ty=(Tensor[(5, 11, 1), float64],) */
}

def @func_14063() -> (Tensor[(8, 16, 5), float64], Tensor[(6, 16, 15), bool]) {
  %520 = fn () -> (Tensor[(8, 16, 5), float64], Tensor[(6, 16, 15), bool]) {
    %517 = @func_6503() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(600), float32]) */;
    %518 = %517.1;
    %519 = @func_11120() /* ty=Tensor[(6, 16, 15), bool] */;
    (%518, %519)
  };
  %520() /* ty=(Tensor[(8, 16, 5), float64], Tensor[(6, 16, 15), bool]) */
}

def @func_3248() -> (Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  %521 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %522 = cast(meta[relay.Constant][24] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %523 = reshape(%522, newshape=[6, 8, 2]) /* ty=Tensor[(6, 8, 2), float32] */;
  %524 = @func_2328(%523) /* ty=(Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) */;
  %525 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %526 = %521.0;
  %527 = %524.1;
  %528 = %525.1;
  (%526, %527, meta[relay.Constant][24] /* ty=Tensor[(96), float32] */, %528)
}

def @func_11626() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %532 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %529 = @func_11349() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %530 = %529.0;
    %531 = @func_4381() /* ty=Tensor[(7, 3, 10), float32] */;
    (%530, %531)
  };
  %532() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_7400() -> (Tensor[(7, 3, 10), int64],) {
  @func_7398() /* ty=(Tensor[(7, 3, 10), int64],) */
}

def @func_19163() -> Tensor[(55), float64] {
  @func_18793() /* ty=Tensor[(55), float64] */
}

def @func_6812(%var_6811: Tensor[(6, 7, 12), float64]) -> (Tensor[(6, 7, 12), float32], Tensor[(7, 3, 10), float32]) {
  %539 = fn (%var_6773: Tensor[(6, 7, 12), float64]) -> (Tensor[(6, 7, 12), float32], Tensor[(7, 3, 10), float32]) {
    %533 = cast(%var_6773, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
    %534 = cos(%533) /* ty=Tensor[(6, 7, 12), float64] */;
    %535 = cast(%534, dtype="float32") /* ty=Tensor[(6, 7, 12), float32] */;
    %536 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
    %537 = sqrt(%535) /* ty=Tensor[(6, 7, 12), float32] */;
    %538 = %536.0;
    (%537, %538)
  };
  %539(%var_6811) /* ty=(Tensor[(6, 7, 12), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_13987() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_13985() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_4840(%var_4838: Tensor[(300, 2), float32]) -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(300, 2), float32], Tensor[(7, 3, 10), float64]) {
  @func_4837(%var_4838) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(300, 2), float32], Tensor[(7, 3, 10), float64]) */
}

def @func_18100() -> Tensor[(7, 3, 10), float32] {
  %540 = fn () -> Tensor[(7, 3, 10), float32] {
    @func_9050() /* ty=Tensor[(7, 3, 10), float32] */
  };
  %540() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_14775() -> (Tensor[(7, 3, 10), float32],) {
  @func_14773() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_18092() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  %541 = @func_12268() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %542 = %541.0;
  %543 = @func_13392() /* ty=Tensor[(7, 3, 10), float64] */;
  (%542, %543)
}

def @func_17145() -> (Tensor[(7, 3, 10), float32],) {
  %545 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %544 = @func_15016() /* ty=Tensor[(7, 3, 10), float32] */;
    (%544,)
  };
  %545() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_10121() -> Tensor[(55), float64] {
  @func_10119() /* ty=Tensor[(55), float64] */
}

def @func_17731() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %546 = @func_14570() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64]) */;
  %547 = %546.0;
  %548 = @func_17338() /* ty=Tensor[(7, 3, 10), float32] */;
  (%547, %548)
}

def @func_9772() -> (Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) {
  %562 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) {
    %549 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %550 = cast(meta[relay.Constant][25] /* ty=Tensor[(1440), int64] */, dtype="int64") /* ty=Tensor[(1440), int64] */;
    %551 = cast(meta[relay.Constant][25] /* ty=Tensor[(1440), int64] */, dtype="int64") /* ty=Tensor[(1440), int64] */;
    %552 = reshape(%550, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), int64] */;
    %553 = reshape(%551, newshape=[6, 16, 15]) /* ty=Tensor[(6, 16, 15), int64] */;
    %554 = @func_7760(%552, %553) /* ty=(Tensor[(6, 16, 15), int64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
    %555 = %554.0;
    %556 = cast(meta[relay.Constant][25] /* ty=Tensor[(1440), int64] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
    %557 = shape_of(%555, dtype="int32") /* ty=Tensor[(3), int32] */;
    %558 = cast(%555, dtype="bool") /* ty=Tensor[(6, 16, 15), bool] */;
    %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %560 = %549.0;
    %561 = equal(%558, %559) /* ty=Tensor[(6, 16, 15), bool] */;
    (%560, %561)
  };
  %562() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */
}

def @func_5191() -> (Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) {
  %569 = fn () -> (Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) {
    %563 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %564 = cast(meta[relay.Constant][26] /* ty=Tensor[(1344, 2), float32] */, dtype="float32") /* ty=Tensor[(1344, 2), float32] */;
    %565 = reshape(%564, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
    %566 = @func_1736(%565) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
    %567 = %563.0;
    %568 = %566.1;
    (%567, %568, meta[relay.Constant][26] /* ty=Tensor[(1344, 2), float32] */)
  };
  %569() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */
}

def @func_16344() -> (Tensor[(7, 3, 10), float32],) {
  %572 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %570 = @func_9100() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %571 = %570.0;
    (%571,)
  };
  %572() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_12627(%var_12625: Tensor[(320, 2), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(9, 1, 10), float32], Tensor[(55), float64], Tensor[(320, 2), float64]) {
  @func_12624(%var_12625) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(9, 1, 10), float32], Tensor[(55), float64], Tensor[(320, 2), float64]) */
}

def @func_16401() -> (Tensor[(55), float64],) {
  %575 = fn () -> (Tensor[(55), float64],) {
    %573 = @func_7719() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %574 = %573.0;
    (%574,)
  };
  %575() /* ty=(Tensor[(55), float64],) */
}

def @func_19760() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_19758() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_8374() -> Tensor[(7, 3, 10), float32] {
  %576 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %576.0
}

def @func_4398() -> Tensor[(55), float64] {
  %578 = fn () -> Tensor[(55), float64] {
    %577 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %577.3
  };
  %578() /* ty=Tensor[(55), float64] */
}

def @func_16165() -> Tensor[(8, 16, 5), float64] {
  %579 = @func_15283() /* ty=(Tensor[(8, 16, 5), float64], Tensor[(5, 11, 2688), bool]) */;
  %579.0
}

def @func_18760() -> (Tensor[(55), float64],) {
  @func_18758() /* ty=(Tensor[(55), float64],) */
}

def @func_8343() -> Tensor[(2688), float32] {
  %580 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %580.3
}

def @func_17454() -> Tensor[(7, 3, 10), float32] {
  %581 = fn () -> Tensor[(7, 3, 10), float32] {
    @func_13751() /* ty=Tensor[(7, 3, 10), float32] */
  };
  %581() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_14264(%var_14262: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(1, 264), int64]) {
  @func_14261(%var_14262) /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(1, 264), int64]) */
}

def @func_18203() -> Tensor[(55), float64] {
  @func_18201() /* ty=Tensor[(55), float64] */
}

def @func_19144() -> (Tensor[(7, 3, 10), float32],) {
  %582 = @func_12760() /* ty=Tensor[(7, 3, 10), float32] */;
  (%582,)
}

def @func_21347() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %583 = @func_18701() /* ty=(Tensor[(5, 11, ?), float64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32]) */;
  %584 = @func_16400() /* ty=(Tensor[(55), float64],) */;
  %585 = %583.2;
  %586 = %584.0;
  (%585, %586)
}

def @func_1528(%var_1526: Tensor[(14, 16, 12), float32]) -> (Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) {
  @func_1525(%var_1526) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */
}

def @func_3060() -> (Tensor[(7, 3, 10), float32],) {
  %587 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %588 = %587.0;
  (%588,)
}

def @func_8955() -> Tensor[(7, 3, 10), float32] {
  @func_8953() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_15079() -> (Tensor[(55), float64], Tensor[(5, 11, 2688), bool]) {
  @func_15077() /* ty=(Tensor[(55), float64], Tensor[(5, 11, 2688), bool]) */
}

def @func_16192(%var_16191: Tensor[(1296), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), float64], Tensor[(1296), float64]) {
  %594 = fn (%var_16173: Tensor[(1296), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), float64], Tensor[(1296), float64]) {
    %589 = cast(%var_16173, dtype="float64") /* ty=Tensor[(1296), float64] */;
    %590 = reshape(%589, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float64] */;
    %591 = @func_9656(%590) /* ty=(Tensor[(9, 12, 12), float64],) */;
    %592 = @func_14702() /* ty=Tensor[(7, 3, 10), float32] */;
    %593 = %591.0;
    (%592, %593, %var_16173)
  };
  %594(%var_16191) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), float64], Tensor[(1296), float64]) */
}

def @func_18524() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), float32], Tensor[(7, 3, 10), float64], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  @func_18522() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), float32], Tensor[(7, 3, 10), float64], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_21678() -> (Tensor[(5, 11, 1), float64],) {
  %597 = fn () -> (Tensor[(5, 11, 1), float64],) {
    %595 = @func_15353() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %596 = %595.0;
    (%596,)
  };
  %597() /* ty=(Tensor[(5, 11, 1), float64],) */
}

def @func_5312() -> (Tensor[(7, 3, 10), float32],) {
  %598 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %599 = %598.1;
  (%599,)
}

def @func_8662() -> (Tensor[(7, 3, 10), float32],) {
  @func_8660() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_14797() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %600 = @func_10853() /* ty=(Tensor[(7, 3, 10), int64], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), float64]) */;
  %601 = %600.1;
  %602 = @func_11999() /* ty=Tensor[(7, 3, 10), float32] */;
  (%601, %602)
}

def @func_15921() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
  %603 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %604 = @func_7719() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %605 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %606 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %607 = @func_13861() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %608 = %603.0;
  %609 = %604.0;
  %610 = %605.0;
  %611 = %606.0;
  %612 = %607.1;
  (%608, %609, %610, %611, %612)
}

def @func_5655(%var_5648: Tensor[(13, 13, 4), float64]) -> (Tensor[(13, 13, 4), float64],) {
  %613 = cast(%var_5648, dtype="float64") /* ty=Tensor[(13, 13, 4), float64] */;
  %614 = acos(%613) /* ty=Tensor[(13, 13, 4), float64] */;
  (%614,)
}

def @func_8660() -> (Tensor[(7, 3, 10), float32],) {
  %615 = @func_6615() /* ty=Tensor[(7, 3, 10), float32] */;
  (%615,)
}

def @func_10994() -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_20670() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %623 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %616 = @func_18276() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
    %617 = @func_6878() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %618 = @func_9100() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %619 = %616.0;
    %620 = @func_6169() /* ty=Tensor[(55), float64] */;
    %621 = %617.0;
    %622 = %618.0;
    (%619, %620, %621, %622)
  };
  %623() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_20134() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %627 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %624 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %625 = %624.1;
    %626 = @func_4495() /* ty=Tensor[(7, 3, 10), float32] */;
    (%625, %626)
  };
  %627() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_19876() -> (Tensor[(7, 3, 10), float32],) {
  %628 = @func_12316() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */;
  %629 = %628.0;
  (%629,)
}

def @func_8144() -> Tensor[(7, 3, 10), float32] {
  %631 = fn () -> Tensor[(7, 3, 10), float32] {
    %630 = @func_6974() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %630.0
  };
  %631() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_16842() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %634 = fn () -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
    %632 = @func_6169() /* ty=Tensor[(55), float64] */;
    %633 = @func_7548() /* ty=Tensor[(7, 3, 10), float32] */;
    (%632, %633)
  };
  %634() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_9656(%var_9648: Tensor[(9, 12, 12), float64]) -> (Tensor[(9, 12, 12), float64],) {
  %635 = cast(%var_9648, dtype="float64") /* ty=Tensor[(9, 12, 12), float64] */;
  %636 = log(%635) /* ty=Tensor[(9, 12, 12), float64] */;
  (%636,)
}

def @func_4837(%var_4826: Tensor[(300, 2), float32]) -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(300, 2), float32], Tensor[(7, 3, 10), float64]) {
  %637 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %638 = cast(%var_4826, dtype="float32") /* ty=Tensor[(300, 2), float32] */;
  %639 = reshape(%638, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), float32] */;
  %640 = @func_3668(%639) /* ty=(Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) */;
  %641 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %642 = %637.1;
  %643 = %640.1;
  %644 = %641.0;
  (%642, %643, %var_4826, %644)
}

def @func_21540() -> Tensor[(7, 3, 10), int64] {
  %646 = fn () -> Tensor[(7, 3, 10), int64] {
    %645 = @func_7398() /* ty=(Tensor[(7, 3, 10), int64],) */;
    %645.0
  };
  %646() /* ty=Tensor[(7, 3, 10), int64] */
}

def @func_8034() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %647 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %648 = @func_7496() /* ty=Tensor[(7, 3, 10), float32] */;
  %649 = %647.0;
  (%648, %649)
}

def @func_14592() -> (Tensor[(7, 3, 10), float32],) {
  %650 = @func_11455() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %651 = %650.1;
  (%651,)
}

def @func_6471(%var_6470: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) {
  %661 = fn (%var_6436: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) {
    %652 = @func_5923() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
    %653 = cast(%var_6436, dtype="int64") /* ty=Tensor[(264), int64] */;
    %654 = reshape(%653, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
    %655 = @func_1558(%654) /* ty=(Tensor[(2, 12, 11), int64],) */;
    %656 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %657 = %652.1;
    %658 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
    %659 = %655.0;
    %660 = %656.0;
    (%657, %658, %659, %var_6436, %660)
  };
  %661(%var_6470) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */
}

def @func_20249() -> Tensor[(7, 3, 10), float32] {
  %663 = fn () -> Tensor[(7, 3, 10), float32] {
    %662 = @func_20052() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %662.0
  };
  %663() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_15123() -> (Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) {
  @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */
}

def @func_8220(%var_8188: Tensor[(264), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 7), bool]) {
  %664 = cast(%var_8188, dtype="int64") /* ty=Tensor[(264), int64] */;
  %665 = reshape(%664, newshape=[264]) /* ty=Tensor[(264), int64] */;
  %666 = @func_6469(%665) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %667 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %668 = @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %669 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
  %670 = %669.0;
  %671 = cast(%670, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %672 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 11, 7), float64] */, dtype="bool") /* ty=Tensor[(5, 11, 7), bool] */;
  %673 = %666.1;
  %674 = %667.0;
  %675 = %668.0;
  %676 = logical_or(%671, %672) /* ty=Tensor[(5, 11, 7), bool] */;
  (%673, %var_8188, %674, %675, %676)
}

def @func_20053() -> (Tensor[(7, 3, 10), float32],) {
  %679 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %677 = @func_16720() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %678 = %677.0;
    (%678,)
  };
  %679() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_6328() -> Tensor[(7, 3, 10), float32] {
  %681 = fn () -> Tensor[(7, 3, 10), float32] {
    %680 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %680.3
  };
  %681() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_3896(%var_3875: Tensor[(600, 1), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(600, 1), float64]) {
  %682 = @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %683 = cast(%var_3875, dtype="float32") /* ty=Tensor[(600, 1), float32] */;
  %684 = reshape(%683, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), float32] */;
  %685 = @func_3668(%684) /* ty=(Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) */;
  %686 = cast(%var_3875, dtype="float64") /* ty=Tensor[(600, 1), float64] */;
  %687 = %682.0;
  %688 = %685.1;
  %689 = sin(%686) /* ty=Tensor[(600, 1), float64] */;
  (%687, %688, %689)
}

def @func_14042() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  @func_14040() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_9752() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  @func_9750() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) */
}

def @func_5284() -> Tensor[(7, 3, 10), float32] {
  %690 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %690.0
}

def @func_16781(%var_16779: Tensor[(1296), bool]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool]) {
  @func_16778(%var_16779) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool]) */
}

def @func_4178() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
  @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_18793() -> Tensor[(55), float64] {
  @func_10119() /* ty=Tensor[(55), float64] */
}

def @func_1736(%var_1691: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) {
  %691 = cast(%var_1691, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %692 = reshape(%691, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %693 = @func_1525(%692) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %694 = cast(%var_1691, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %695 = reshape(%694, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %696 = @func_1525(%695) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %697 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %698 = %693.2;
  %699 = %696.2;
  (%697, %698, %var_1691, %699)
}

def @func_12268() -> (Tensor[(7, 3, 10), float32],) {
  %700 = @func_10070() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(66, 4), int8], Tensor[(264), int64]) */;
  %701 = %700.1;
  (%701,)
}

def @func_9750() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  %702 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %703 = @func_7340() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %704 = %703.0;
  %705 = cast(%704, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %706 = %702.1;
  %707 = exp(%705) /* ty=Tensor[(7, 3, 10), float64] */;
  (%706, %707)
}

def @func_19146() -> (Tensor[(7, 3, 10), float32],) {
  @func_19144() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_15992() -> Tensor[(55), float32] {
  @func_15990() /* ty=Tensor[(55), float32] */
}

def @func_6935() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(264), int64]) {
  @func_6933() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(264), int64]) */
}

def @func_7529() -> (Tensor[(7, 3, 10), float32],) {
  %709 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %708 = @func_4495() /* ty=Tensor[(7, 3, 10), float32] */;
    (%708,)
  };
  %709() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_1953() -> Tensor[(7, 3, 10), float32] {
  @func_1673() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_6861(%var_6832: float32, %var_6833: Tensor[(12, 4), float32]) -> (Tensor[(5, 11, 1), float64], float32, Tensor[(264), int64], float32, Tensor[(12, 4), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %710 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %711 = cast(meta[relay.Constant][28] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %712 = cast(%var_6832, dtype="float32") /* ty=float32 */;
  %713 = cast(%var_6833, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %714 = reshape(%711, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
  %715 = reshape(%712, newshape=[]) /* ty=float32 */;
  %716 = reshape(%713, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %717 = @func_3963(%714, %715, %716) /* ty=(Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) */;
  %718 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %719 = %710.0;
  %720 = %717.4;
  %721 = %718.1;
  %722 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%719, %720, meta[relay.Constant][28] /* ty=Tensor[(264), int64] */, %var_6832, %var_6833, %721, %722)
}

def @func_1739(%var_1737: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) {
  @func_1736(%var_1737) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */
}

def @func_3396(%var_3394: Tensor[(132, 2), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) {
  @func_3393(%var_3394) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) */
}

def @func_3441() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
  %723 = @func_3248() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) */;
  %724 = @func_2344() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %725 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %726 = %723.3;
  %727 = %724.0;
  %728 = %725.0;
  (%726, %727, %728)
}

def @func_17374(%var_17373: Tensor[(3, 2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(1, 2688), float32], Tensor[(3, 2688), uint16]) {
  %738 = fn (%var_17367: Tensor[(3, 2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(1, 2688), float32], Tensor[(3, 2688), uint16]) {
    %729 = @func_14962() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %730 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
    %731 = %730.4;
    %732 = cast(%731, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
    %733 = cast(%731, dtype="uint16") /* ty=Tensor[(1, 2688), uint16] */;
    %734 = cast(%var_17367, dtype="uint16") /* ty=Tensor[(3, 2688), uint16] */;
    %735 = %729.0;
    %736 = log10(%732) /* ty=Tensor[(1, 2688), float32] */;
    %737 = add(%733, %734) /* ty=Tensor[(3, 2688), uint16] */;
    (%735, %736, %737)
  };
  %738(%var_17373) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(1, 2688), float32], Tensor[(3, 2688), uint16]) */
}

def @func_11109(%var_11108: Tensor[(11, 13, 3), int8]) -> (Tensor[(11, 13, 3), int8],) {
  %744 = fn (%var_11091: Tensor[(11, 13, 3), int8]) -> (Tensor[(11, 13, 3), int8],) {
    %739 = cast(%var_11091, dtype="int8") /* ty=Tensor[(11, 13, 3), int8] */;
    %740 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(11, 13, 3), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %741 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 13, 3), int8] */, dtype="int8") /* ty=Tensor[(11, 13, 3), int8] */;
    %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %743 = bitwise_or(%741, %742) /* ty=Tensor[(11, 13, 3), int8] */;
    (%743,)
  };
  %744(%var_11108) /* ty=(Tensor[(11, 13, 3), int8],) */
}

def @func_6076() -> (Tensor[(55), float64],) {
  %745 = @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %746 = %745.1;
  (%746,)
}

def @func_13863() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  @func_13861() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */
}

def @func_11901() -> Tensor[(7, 3, 10), float32] {
  %747 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %747.1
}

def @func_6169() -> Tensor[(55), float64] {
  %748 = @func_6076() /* ty=(Tensor[(55), float64],) */;
  %748.0
}

def @func_17733() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_17731() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_14703() -> Tensor[(7, 3, 10), float32] {
  %750 = fn () -> Tensor[(7, 3, 10), float32] {
    %749 = @func_7126() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %749.0
  };
  %750() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_7496() -> Tensor[(7, 3, 10), float32] {
  @func_1673() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_12740() -> Tensor[(8, 7, 2), float64] {
  @func_12738() /* ty=Tensor[(8, 7, 2), float64] */
}

def @func_7590() -> (Tensor[(7, 3, 10), float32],) {
  %752 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %751 = @func_7496() /* ty=Tensor[(7, 3, 10), float32] */;
    (%751,)
  };
  %752() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_2025() -> Tensor[(7, 3, 10), float32] {
  %754 = fn () -> Tensor[(7, 3, 10), float32] {
    %753 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %753.1
  };
  %754() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_7760(%var_7721: Tensor[(6, 16, 15), int64], %var_7722: Tensor[(6, 16, 15), int64]) -> (Tensor[(6, 16, 15), int64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %755 = cast(%var_7722, dtype="int64") /* ty=Tensor[(6, 16, 15), int64] */;
  %756 = shape_of(%var_7721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(%var_7721, dtype="int64") /* ty=Tensor[(6, 16, 15), int64] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %759 = @func_4973() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %760 = @func_7562() /* ty=(Tensor[(55), float64],) */;
  %761 = bitwise_and(%757, %758) /* ty=Tensor[(6, 16, 15), int64] */;
  %762 = %759.1;
  %763 = @func_5385() /* ty=Tensor[(7, 3, 10), float32] */;
  %764 = %760.0;
  (%761, %762, %763, %764)
}

def @func_10854() -> (Tensor[(7, 3, 10), int64], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), float64]) {
  %774 = fn () -> (Tensor[(7, 3, 10), int64], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), float64]) {
    %765 = @func_7398() /* ty=(Tensor[(7, 3, 10), int64],) */;
    %766 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
    %767 = %766.1;
    %768 = cast(%767, dtype="float64") /* ty=Tensor[(6, 16, 15), float64] */;
    %769 = sin(%768) /* ty=Tensor[(6, 16, 15), float64] */;
    %770 = cast(%769, dtype="float64") /* ty=Tensor[(6, 16, 15), float64] */;
    %771 = %765.0;
    %772 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
    %773 = erf(%770) /* ty=Tensor[(6, 16, 15), float64] */;
    (%771, %772, %773)
  };
  %774() /* ty=(Tensor[(7, 3, 10), int64], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), float64]) */
}

def @func_19485() -> (Tensor[(7, 3, 10), float32],) {
  %776 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %775 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
    (%775,)
  };
  %776() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_6865(%var_6863: float32, %var_6864: Tensor[(12, 4), float32]) -> (Tensor[(5, 11, 1), float64], float32, Tensor[(264), int64], float32, Tensor[(12, 4), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_6861(%var_6863, %var_6864) /* ty=(Tensor[(5, 11, 1), float64], float32, Tensor[(264), int64], float32, Tensor[(12, 4), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_13861() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %777 = cast(meta[relay.Constant][30] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %778 = reshape(%777, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %779 = @func_7105(%778) /* ty=(Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32]) */;
  %780 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  %781 = %779.1;
  (%780, %781, meta[relay.Constant][30] /* ty=Tensor[(55), float64] */)
}

def @func_15503() -> (Tensor[(7, 3, 10), float32],) {
  %783 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %782 = @func_11901() /* ty=Tensor[(7, 3, 10), float32] */;
    (%782,)
  };
  %783() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_15354() -> (Tensor[(5, 11, 1), float64],) {
  %786 = fn () -> (Tensor[(5, 11, 1), float64],) {
    %784 = @func_13134() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
    %785 = %784.0;
    (%785,)
  };
  %786() /* ty=(Tensor[(5, 11, 1), float64],) */
}

def @func_8345() -> Tensor[(2688), float32] {
  @func_8343() /* ty=Tensor[(2688), float32] */
}

def @func_15224() -> (Tensor[(1300), float32],) {
  %787 = @func_11940() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(13, 10, 10), bool], Tensor[(1300), uint32]) */;
  %788 = %787.2;
  %789 = cast(meta[relay.Constant][31] /* ty=Tensor[(1300), uint32] */, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(1), int32] */;
  %791 = cast(%788, dtype="float32") /* ty=Tensor[(1300), float32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?), float32] */;
  %793 = floor_mod(%791, %792) /* ty=Tensor[(1300), float32] */;
  (%793,)
}

def @func_878(%var_876: Tensor[(16, 6, 7), float64], %var_877: Tensor[(55), float64]) -> (Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %799 = fn (%var_861: Tensor[(16, 6, 7), float64], %var_869: Tensor[(55), float64]) -> (Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
    %794 = cast(%var_861, dtype="float64") /* ty=Tensor[(16, 6, 7), float64] */;
    %795 = cast(%var_869, dtype="float64") /* ty=Tensor[(55), float64] */;
    %796 = reshape(%795, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
    %797 = asin(%794) /* ty=Tensor[(16, 6, 7), float64] */;
    %798 = @func_413(%796) /* ty=Tensor[(5, 11, 1), float64] */;
    (%797, %798, %var_869)
  };
  %799(%var_876, %var_877) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */
}

def @func_13492() -> (Tensor[(55), float32], Tensor[(7, 3, 10), float32]) {
  %800 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %801 = %800.2;
  %802 = cast(%801, dtype="float32") /* ty=Tensor[(55), float32] */;
  %803 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %804 = asinh(%802) /* ty=Tensor[(55), float32] */;
  %805 = %803.2;
  (%804, %805)
}

def @func_5658(%var_5656: Tensor[(13, 13, 4), float64]) -> (Tensor[(13, 13, 4), float64],) {
  @func_5655(%var_5656) /* ty=(Tensor[(13, 13, 4), float64],) */
}

def @func_6078() -> (Tensor[(55), float64],) {
  @func_6076() /* ty=(Tensor[(55), float64],) */
}

def @func_20279() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %806 = @func_13861() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */;
  %807 = %806.1;
  %808 = @func_11999() /* ty=Tensor[(7, 3, 10), float32] */;
  (%807, %808)
}

def @func_21868() -> (Tensor[(7, 3, 10), float32],) {
  @func_21866() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_2003() -> (Tensor[(7, 3, 10), float64],) {
  %813 = fn () -> (Tensor[(7, 3, 10), float64],) {
    %809 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
    %810 = %809.1;
    %811 = cast(%810, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
    %812 = log2(%811) /* ty=Tensor[(7, 3, 10), float64] */;
    (%812,)
  };
  %813() /* ty=(Tensor[(7, 3, 10), float64],) */
}

def @func_6725() -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %818 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
    %814 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %815 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
    %816 = %814.0;
    %817 = %815.0;
    (%816, %817)
  };
  %818() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */
}

def @func_17316() -> Tensor[(5, 11, 1), float64] {
  @func_17314() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_20151() -> Tensor[(7, 3, 10), float32] {
  %819 = fn () -> Tensor[(7, 3, 10), float32] {
    @func_8374() /* ty=Tensor[(7, 3, 10), float32] */
  };
  %819() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_10263() -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %823 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
    %820 = @func_6974() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %821 = %820.0;
    %822 = @func_8343() /* ty=Tensor[(2688), float32] */;
    (%821, %822)
  };
  %823() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */
}

def @func_13293() -> (Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_13291() /* ty=(Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_14552() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  %824 = @func_13172() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %825 = cast(meta[relay.Constant][32] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %826 = reshape(%825, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %827 = @func_4809(%826) /* ty=(Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) */;
  %828 = %824.0;
  %829 = %827.1;
  (%828, %829, meta[relay.Constant][32] /* ty=Tensor[(2688), float32] */)
}

def @func_15923() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
  @func_15921() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_6617() -> Tensor[(7, 3, 10), float32] {
  @func_6615() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_18795() -> Tensor[(55), float64] {
  @func_18793() /* ty=Tensor[(55), float64] */
}

def @func_17705() -> Tensor[(7, 3, 10), float32] {
  @func_17703() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_6377(%var_6349: Tensor[(8, 2688), float32]) -> (Tensor[(8, 2688), float64], Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
  %830 = @func_3462() /* ty=(Tensor[(1, 2688), float32],) */;
  %831 = %830.0;
  %832 = cast(%831, dtype="int64") /* ty=Tensor[(1, 2688), int64] */;
  %833 = cast(%var_6349, dtype="int64") /* ty=Tensor[(8, 2688), int64] */;
  %834 = multiply(%832, %833) /* ty=Tensor[(8, 2688), int64] */;
  %835 = cast(%831, dtype="float64") /* ty=Tensor[(1, 2688), float64] */;
  %836 = cast(%834, dtype="float64") /* ty=Tensor[(8, 2688), float64] */;
  %837 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %838 = @func_3858() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %839 = @func_4941() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %840 = divide(%835, %836) /* ty=Tensor[(8, 2688), float64] */;
  %841 = %837.0;
  %842 = %838.0;
  %843 = %839.0;
  (%840, %841, %842, %843)
}

def @func_11456() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) {
  %851 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) {
    %844 = cast(meta[relay.Constant][33] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
    %845 = reshape(%844, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
    %846 = @func_3393(%845) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) */;
    %847 = @func_3489() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %848 = @func_10618() /* ty=Tensor[(7, 3, 10), float32] */;
    %849 = %846.7;
    %850 = %847.0;
    (%848, %849, meta[relay.Constant][33] /* ty=Tensor[(264), int64] */, %850)
  };
  %851() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */
}

def @func_11521(%var_11516: Tensor[(2, 320), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(8, 16, 5), float64], Tensor[(2, 320), float64]) {
  %852 = @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %853 = @func_11349() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %854 = cast(%var_11516, dtype="float64") /* ty=Tensor[(2, 320), float64] */;
  %855 = reshape(%854, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), float64] */;
  %856 = %852.1;
  %857 = %853.0;
  %858 = @func_6169() /* ty=Tensor[(55), float64] */;
  %859 = @func_4609(%855) /* ty=Tensor[(8, 16, 5), float64] */;
  (%856, %857, %858, %859, %var_11516)
}

def @func_21251(%var_21250: Tensor[(11, 8, 5), uint8]) -> Tensor[(11, 8, 5), uint8] {
  %864 = fn (%var_21239: Tensor[(11, 8, 5), uint8]) -> Tensor[(11, 8, 5), uint8] {
    %860 = cast(%var_21239, dtype="uint8") /* ty=Tensor[(11, 8, 5), uint8] */;
    %861 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(11, 8, 5), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %862 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 8, 5), uint8] */, dtype="uint8") /* ty=Tensor[(11, 8, 5), uint8] */;
    %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    multiply(%862, %863) /* ty=Tensor[(11, 8, 5), uint8] */
  };
  %864(%var_21250) /* ty=Tensor[(11, 8, 5), uint8] */
}

def @func_8610(%var_8609: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), int64], Tensor[(600, ?), int32], Tensor[(7, 3, 10), float64]) {
  %878 = fn (%var_8558: Tensor[(600), float32]) -> (Tensor[(7, 3, 10), int64], Tensor[(600, ?), int32], Tensor[(7, 3, 10), float64]) {
    %865 = @func_7398() /* ty=(Tensor[(7, 3, 10), int64],) */;
    %866 = cast(%var_8558, dtype="float32") /* ty=Tensor[(600), float32] */;
    %867 = reshape(%866, newshape=[600, 1]) /* ty=Tensor[(600, 1), float32] */;
    %868 = @func_3896(%867) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(600, 1), float64]) */;
    %869 = %868.2;
    %870 = cast(%var_8558, dtype="int32") /* ty=Tensor[(600), int32] */;
    %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(2), int32] */;
    %872 = cast(%869, dtype="int32") /* ty=Tensor[(600, 1), int32] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %874 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
    %875 = %865.0;
    %876 = logical_xor(%872, %873) /* ty=Tensor[(600, ?), int32] */;
    %877 = %874.0;
    (%875, %876, %877)
  };
  %878(%var_8609) /* ty=(Tensor[(7, 3, 10), int64], Tensor[(600, ?), int32], Tensor[(7, 3, 10), float64]) */
}

def @func_6954() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %879 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %880 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %881 = %879.0;
  (%880, %881)
}

def @func_9363() -> (Tensor[(55), float64], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_9361() /* ty=(Tensor[(55), float64], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_16646(%var_16645: Tensor[(8, 7, 2), float64]) -> (Tensor[(8, 7, 2), uint32],) {
  %888 = fn (%var_16638: Tensor[(8, 7, 2), float64]) -> (Tensor[(8, 7, 2), uint32],) {
    %882 = @func_16271() /* ty=Tensor[(8, 7, 2), float64] */;
    %883 = cast(%var_16638, dtype="uint32") /* ty=Tensor[(8, 7, 2), uint32] */;
    %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
    %885 = cast(%882, dtype="uint32") /* ty=Tensor[(8, 7, 2), uint32] */;
    %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %887 = right_shift(%885, %886) /* ty=Tensor[(8, 7, 2), uint32] */;
    (%887,)
  };
  %888(%var_16645) /* ty=(Tensor[(8, 7, 2), uint32],) */
}

def @func_13898(%var_13897: Tensor[(5, 10, 1), float32]) -> (Tensor[(5, 10, 1), float32],) {
  %891 = fn (%var_13891: Tensor[(5, 10, 1), float32]) -> (Tensor[(5, 10, 1), float32],) {
    %889 = cast(%var_13891, dtype="float32") /* ty=Tensor[(5, 10, 1), float32] */;
    %890 = exp(%889) /* ty=Tensor[(5, 10, 1), float32] */;
    (%890,)
  };
  %891(%var_13897) /* ty=(Tensor[(5, 10, 1), float32],) */
}

def @func_17950(%var_17888: Tensor[(672), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(48), float32], Tensor[(10, 264), uint16], Tensor[(7, 3, 10), float32], Tensor[(672), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 264), bool], Tensor[(10, 264), int64], Tensor[(5, 11, 264), float32], Tensor[(5, 11, 1), float64], Tensor[(1296), bool], Tensor[(2, 648), bool]) {
  %892 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %893 = reshape(%892, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %894 = @func_10671(%893) /* ty=(Tensor[(6, 8, 16), float32], Tensor[(48), float32], Tensor[(1, 264), int64], float32, Tensor[(48), float32]) */;
  %895 = %894.2;
  %896 = cast(%895, dtype="uint16") /* ty=Tensor[(1, 264), uint16] */;
  %897 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 264), int64] */, dtype="uint16") /* ty=Tensor[(10, 264), uint16] */;
  %898 = @func_11455() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %899 = cast(%var_17888, dtype="float64") /* ty=Tensor[(672), float64] */;
  %900 = reshape(%899, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %901 = @func_9609(%900) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(7, 3, 10), float32]) */;
  %902 = %901.1;
  %903 = cast(%902, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %904 = cast(%895, dtype="bool") /* ty=Tensor[(1, 264), bool] */;
  %905 = cast(%895, dtype="int64") /* ty=Tensor[(1, 264), int64] */;
  %906 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 264), int64] */, dtype="int64") /* ty=Tensor[(10, 264), int64] */;
  %907 = cast(%895, dtype="bool") /* ty=Tensor[(1, 264), bool] */;
  %908 = cast(%902, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %909 = greater_equal(%907, %908) /* ty=Tensor[(5, 11, 264), bool] */;
  %910 = cast(%909, dtype="float32") /* ty=Tensor[(5, 11, 264), float32] */;
  %911 = @func_17643() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(8, 7, 2), float32]) */;
  %912 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 648), bool] */, dtype="bool") /* ty=Tensor[(2, 648), bool] */;
  %913 = reshape(%912, newshape=[1296]) /* ty=Tensor[(1296), bool] */;
  %914 = @func_16262(%913) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool], Tensor[(1344, 2), float32]) */;
  %915 = @func_5095() /* ty=Tensor[(7, 3, 10), float32] */;
  %916 = add(%896, %897) /* ty=Tensor[(10, 264), uint16] */;
  %917 = @func_11734() /* ty=Tensor[(7, 3, 10), float32] */;
  %918 = %898.3;
  %919 = logical_or(%903, %904) /* ty=Tensor[(5, 11, 264), bool] */;
  %920 = bitwise_xor(%905, %906) /* ty=Tensor[(10, 264), int64] */;
  %921 = cosh(%910) /* ty=Tensor[(5, 11, 264), float32] */;
  %922 = %911.0;
  %923 = %914.2;
  (%915, meta[relay.Constant][35] /* ty=Tensor[(48), float32] */, %916, %917, %var_17888, %918, %919, %920, %921, %922, %923, meta[relay.Constant][37] /* ty=Tensor[(2, 648), bool] */)
}

def @func_5480(%var_5479: Tensor[(6, 100), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 100), float32]) {
  %939 = fn (%var_5459: Tensor[(6, 100), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 100), float32]) {
    %924 = @func_3177() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %925 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %926 = @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %927 = cast(meta[relay.Constant][38] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
    %928 = reshape(%927, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), float64] */;
    %929 = @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %930 = cast(%var_5459, dtype="float32") /* ty=Tensor[(6, 100), float32] */;
    %931 = reshape(%930, newshape=[300, 2]) /* ty=Tensor[(300, 2), float32] */;
    %932 = @func_4837(%931) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(300, 2), float32], Tensor[(7, 3, 10), float64]) */;
    %933 = %924.1;
    %934 = %925.0;
    %935 = %926.0;
    %936 = @func_4609(%928) /* ty=Tensor[(8, 16, 5), float64] */;
    %937 = %929.0;
    %938 = %932.1;
    (%933, %934, %935, %936, meta[relay.Constant][38] /* ty=Tensor[(640), float64] */, %937, %938, %var_5459)
  };
  %939(%var_5479) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 100), float32]) */
}

def @func_20902() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
  %944 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
    %940 = @func_20669() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %941 = @func_17643() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(8, 7, 2), float32]) */;
    %942 = %940.3;
    %943 = %941.0;
    (%942, %943)
  };
  %944() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */
}

def @func_12738() -> Tensor[(8, 7, 2), float64] {
  %945 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 7, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 2), float64] */;
  asinh(%945) /* ty=Tensor[(8, 7, 2), float64] */
}

def @func_10071() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(66, 4), int8], Tensor[(264), int64]) {
  %954 = fn () -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(66, 4), int8], Tensor[(264), int64]) {
    %946 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %947 = cast(meta[relay.Constant][40] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
    %948 = reshape(%947, newshape=[66, 4]) /* ty=Tensor[(66, 4), int64] */;
    %949 = @func_9691(%948) /* ty=(Tensor[(66, 4), int8],) */;
    %950 = @func_9823() /* ty=Tensor[(5, 11, 1), float64] */;
    %951 = @func_5284() /* ty=Tensor[(7, 3, 10), float32] */;
    %952 = %946.2;
    %953 = %949.0;
    (%950, %951, %952, %953, meta[relay.Constant][40] /* ty=Tensor[(264), int64] */)
  };
  %954() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(66, 4), int8], Tensor[(264), int64]) */
}

def @func_19410() -> (Tensor[(7, 3, 10), float32],) {
  %955 = @func_10618() /* ty=Tensor[(7, 3, 10), float32] */;
  (%955,)
}

def @func_16265(%var_16263: Tensor[(1296), bool]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool], Tensor[(1344, 2), float32]) {
  @func_16262(%var_16263) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool], Tensor[(1344, 2), float32]) */
}

def @func_21633() -> (Tensor[(7, 3, 10), float32],) {
  %956 = @func_16930() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %957 = %956.0;
  (%957,)
}

def @func_22442() -> (Tensor[(7, 3, 10), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  %958 = @func_3248() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) */;
  %959 = @func_14363() /* ty=Tensor[(7, 3, 10), float32] */;
  %960 = %958.2;
  %961 = @func_11999() /* ty=Tensor[(7, 3, 10), float32] */;
  (%959, %960, %961)
}

def @func_3152(%var_3140: Tensor[(55), float64], %var_3149: Tensor[(96), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(12, 4, 13), float64], Tensor[(55), float64], Tensor[(6, 8, 2), float32], Tensor[(96), float32]) {
  %962 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %963 = %962.0;
  %964 = cast(%963, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %965 = cast(%var_3140, dtype="float64") /* ty=Tensor[(55), float64] */;
  %966 = reshape(%965, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %967 = @func_2603(%966) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) */;
  %968 = cast(%var_3149, dtype="float32") /* ty=Tensor[(96), float32] */;
  %969 = reshape(%968, newshape=[6, 8, 2]) /* ty=Tensor[(6, 8, 2), float32] */;
  %970 = @func_2328(%969) /* ty=(Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) */;
  %971 = asin(%964) /* ty=Tensor[(7, 3, 10), float64] */;
  %972 = %967.0;
  %973 = %970.0;
  (%971, %972, %var_3140, %973, %var_3149)
}

def @func_9823() -> Tensor[(5, 11, 1), float64] {
  %974 = @func_5190() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */;
  %974.0
}

def @func_14436(%var_14398: Tensor[(1, 672), float64], %var_14399: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(1, 672), float64], Tensor[(55), float64], Tensor[(7, 3, 10), float64]) {
  %975 = cast(%var_14398, dtype="float64") /* ty=Tensor[(1, 672), float64] */;
  %976 = cast(%var_14399, dtype="float64") /* ty=Tensor[(55), float64] */;
  %977 = reshape(%975, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %978 = reshape(%976, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %979 = @func_875(%977, %978) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %980 = @func_8881() /* ty=Tensor[(7, 3, 10), float32] */;
  %981 = %979.1;
  %982 = @func_7941() /* ty=Tensor[(7, 3, 10), float64] */;
  (%980, %981, %var_14398, %var_14399, %982)
}

def @func_12624(%var_12619: Tensor[(320, 2), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(9, 1, 10), float32], Tensor[(55), float64], Tensor[(320, 2), float64]) {
  %983 = @func_7480() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %984 = @func_7340() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %985 = cast(%var_12619, dtype="float64") /* ty=Tensor[(320, 2), float64] */;
  %986 = reshape(%985, newshape=[2, 320]) /* ty=Tensor[(2, 320), float64] */;
  %987 = @func_11521(%986) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(8, 16, 5), float64], Tensor[(2, 320), float64]) */;
  %988 = %983.0;
  %989 = %984.0;
  %990 = @func_8357() /* ty=Tensor[(9, 1, 10), float32] */;
  %991 = %987.2;
  (%988, %989, %990, %991, %var_12619)
}

def @func_21866() -> (Tensor[(7, 3, 10), float32],) {
  %992 = @func_19816() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %993 = %992.0;
  (%993,)
}

def @func_12198() -> Tensor[(7, 3, 10), float32] {
  %994 = fn () -> Tensor[(7, 3, 10), float32] {
    @func_10813() /* ty=Tensor[(7, 3, 10), float32] */
  };
  %994() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_20294() -> (Tensor[(9, 1, 10), float64], Tensor[(7, 3, 10), float32]) {
  %995 = @func_8357() /* ty=Tensor[(9, 1, 10), float32] */;
  %996 = cast(%995, dtype="float64") /* ty=Tensor[(9, 1, 10), float64] */;
  %997 = acosh(%996) /* ty=Tensor[(9, 1, 10), float64] */;
  %998 = @func_8953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%997, %998)
}

def @func_9659(%var_9657: Tensor[(9, 12, 12), float64]) -> (Tensor[(9, 12, 12), float64],) {
  @func_9656(%var_9657) /* ty=(Tensor[(9, 12, 12), float64],) */
}

def @func_12917() -> Tensor[(7, 3, 10), float32] {
  %999 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %999.0
}

def @func_5964() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) {
  %1000 = @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1001 = cast(meta[relay.Constant][41] /* ty=Tensor[(2688), float32] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %1002 = reshape(%1001, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %1003 = @func_1525(%1002) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %1004 = @func_3648() /* ty=(Tensor[(55), float64],) */;
  %1005 = %1000.0;
  %1006 = %1003.1;
  %1007 = %1004.0;
  (%1005, %1006, meta[relay.Constant][41] /* ty=Tensor[(2688), float32] */, %1007)
}

def @func_3179() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  @func_3177() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */
}

def @func_21635() -> (Tensor[(7, 3, 10), float32],) {
  @func_21633() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_16454() -> Tensor[(7, 3, 10), float32] {
  %1008 = @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1008.0
}

def @func_11940() -> (Tensor[(7, 3, 10), float32], Tensor[(13, 10, 10), bool], Tensor[(1300), uint32]) {
  %1009 = @func_8430() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1010 = cast(meta[relay.Constant][42] /* ty=Tensor[(1300), uint32] */, dtype="uint32") /* ty=Tensor[(1300), uint32] */;
  %1011 = cast(meta[relay.Constant][42] /* ty=Tensor[(1300), uint32] */, dtype="uint32") /* ty=Tensor[(1300), uint32] */;
  %1012 = reshape(%1010, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), uint32] */;
  %1013 = reshape(%1011, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), uint32] */;
  %1014 = @func_9404(%1012, %1013) /* ty=(Tensor[(13, 10, 10), bool],) */;
  %1015 = %1009.0;
  %1016 = %1014.0;
  (%1015, %1016, meta[relay.Constant][42] /* ty=Tensor[(1300), uint32] */)
}

def @func_8902() -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
  %1020 = fn () -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) {
    %1017 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %1018 = @func_7941() /* ty=Tensor[(7, 3, 10), float64] */;
    %1019 = %1017.1;
    (%1018, %1019)
  };
  %1020() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_13985() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1021 = @func_10926() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1022 = @func_7719() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1023 = %1021.0;
  %1024 = %1022.1;
  %1025 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1023, %1024, %1025)
}

def @func_20021() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_20019() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_14694() -> (Tensor[(7, 3, 10), float32],) {
  %1026 = @func_7528() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1027 = %1026.0;
  (%1027,)
}

def @func_20577() -> Tensor[(7, 3, 10), float32] {
  @func_20575() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_6171() -> Tensor[(55), float64] {
  @func_6169() /* ty=Tensor[(55), float64] */
}

def @func_12462() -> Tensor[(5, 11, 1), float64] {
  %1028 = @func_10070() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(66, 4), int8], Tensor[(264), int64]) */;
  %1028.2
}

def @func_9612(%var_9610: Tensor[(672), float64]) -> (Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(7, 3, 10), float32]) {
  @func_9609(%var_9610) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_17622() -> (Tensor[(7, 3, 10), float32],) {
  @func_17620() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_2488() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_4535() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1029 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1030 = %1029.1;
  %1031 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1030, %1031)
}

def @func_1890() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) {
  @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */
}

def @func_2486() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1032 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %1033 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1032, %1033)
}

def @func_6590() -> Tensor[(672), float64] {
  %1034 = @func_6103() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) */;
  %1034.2
}

def @func_11942() -> (Tensor[(7, 3, 10), float32], Tensor[(13, 10, 10), bool], Tensor[(1300), uint32]) {
  @func_11940() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(13, 10, 10), bool], Tensor[(1300), uint32]) */
}

def @func_13931() -> (Tensor[(8, 7, 2), float64],) {
  %1036 = fn () -> (Tensor[(8, 7, 2), float64],) {
    %1035 = @func_12738() /* ty=Tensor[(8, 7, 2), float64] */;
    (%1035,)
  };
  %1036() /* ty=(Tensor[(8, 7, 2), float64],) */
}

def @func_10673(%var_10672: Tensor[(48), float32]) -> (Tensor[(6, 8, 16), float32], Tensor[(48), float32], Tensor[(1, 264), int64], float32, Tensor[(48), float32]) {
  %1047 = fn (%var_10645: Tensor[(48), float32]) -> (Tensor[(6, 8, 16), float32], Tensor[(48), float32], Tensor[(1, 264), int64], float32, Tensor[(48), float32]) {
    %1037 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 8, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
    %1038 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 264), int64] */, dtype="int64") /* ty=Tensor[(1, 264), int64] */;
    %1039 = cast(6.49983f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1040 = cast(%var_10645, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1041 = reshape(%1038, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
    %1042 = reshape(%1039, newshape=[]) /* ty=float32 */;
    %1043 = reshape(%1040, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1044 = @func_3963(%1041, %1042, %1043) /* ty=(Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) */;
    %1045 = log2(%1037) /* ty=Tensor[(6, 8, 16), float32] */;
    %1046 = %1044.5;
    (%1045, %1046, meta[relay.Constant][44] /* ty=Tensor[(1, 264), int64] */, 6.49983f /* ty=float32 */, %var_10645)
  };
  %1047(%var_10672) /* ty=(Tensor[(6, 8, 16), float32], Tensor[(48), float32], Tensor[(1, 264), int64], float32, Tensor[(48), float32]) */
}

def @func_1241() -> Tensor[(7, 3, 10), float32] {
  %1049 = fn () -> Tensor[(7, 3, 10), float32] {
    %1048 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 3, 10), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 10), float32] */;
    log(%1048) /* ty=Tensor[(7, 3, 10), float32] */
  };
  %1049() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_15077() -> (Tensor[(55), float64], Tensor[(5, 11, 2688), bool]) {
  %1050 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %1051 = @func_8718() /* ty=Tensor[(2688), float32] */;
  %1052 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1053 = %1052.0;
  %1054 = cast(%1051, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %1055 = cast(%1053, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
  %1056 = %1050.3;
  %1057 = less(%1054, %1055) /* ty=Tensor[(5, 11, 2688), bool] */;
  (%1056, %1057)
}

def @func_2659() -> (Tensor[(7, 3, 10), float32],) {
  %1058 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1058,)
}

def @func_12760() -> Tensor[(7, 3, 10), float32] {
  %1059 = @func_8660() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1059.0
}

def @func_12235() -> (Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1068 = fn () -> (Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %1060 = @func_2344() /* ty=(Tensor[(7, 3, 10), float64],) */;
    %1061 = @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */;
    %1062 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
    %1063 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1064 = %1060.0;
    %1065 = %1061.1;
    %1066 = %1062.0;
    %1067 = %1063.0;
    (%1064, %1065, %1066, %1067)
  };
  %1068() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_16103() -> (Tensor[(1300), float32],) {
  @func_16101() /* ty=(Tensor[(1300), float32],) */
}

def @func_12887() -> (Tensor[(5, 11, 1), float64],) {
  %1069 = @func_12118() /* ty=Tensor[(5, 11, 1), float64] */;
  (%1069,)
}

def @func_21488(%var_21486: float32, %var_21487: Tensor[(48), float32]) -> (Tensor[(7, 3, 10), float32], float32, Tensor[(264), int64], float32, Tensor[(48), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(264), int64]) {
  %1085 = fn (%var_21429: float32, %var_21430: Tensor[(48), float32]) -> (Tensor[(7, 3, 10), float32], float32, Tensor[(264), int64], float32, Tensor[(48), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(264), int64]) {
    %1070 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
    %1071 = cast(meta[relay.Constant][46] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
    %1072 = cast(%var_21429, dtype="float32") /* ty=float32 */;
    %1073 = cast(%var_21430, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1074 = reshape(%1071, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
    %1075 = reshape(%1072, newshape=[]) /* ty=float32 */;
    %1076 = reshape(%1073, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1077 = @func_3963(%1074, %1075, %1076) /* ty=(Tensor[(1, 2688), float32], Tensor[(132, 2), int64], Tensor[(14, 16, 12), float32], Tensor[(3, 16, 1), float32], float32, Tensor[(48), float32], Tensor[(14, 16, 12), float64]) */;
    %1078 = @func_9361() /* ty=(Tensor[(55), float64], Tensor[(2, 12, 11), int64], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1079 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
    %1080 = %1070.0;
    %1081 = %1077.4;
    %1082 = %1078.2;
    %1083 = @func_5095() /* ty=Tensor[(7, 3, 10), float32] */;
    %1084 = %1079.2;
    (%1080, %1081, meta[relay.Constant][46] /* ty=Tensor[(264), int64] */, %var_21429, %var_21430, %1082, %1083, %1084)
  };
  %1085(%var_21486, %var_21487) /* ty=(Tensor[(7, 3, 10), float32], float32, Tensor[(264), int64], float32, Tensor[(48), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32], Tensor[(264), int64]) */
}

def @func_18094() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  @func_18092() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) */
}

def @func_16778(%var_16776: Tensor[(1296), bool]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool]) {
  %1086 = @func_10926() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1087 = cast(%var_16776, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %1088 = cast(%var_16776, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %1089 = reshape(%1087, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), bool] */;
  %1090 = reshape(%1088, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), bool] */;
  %1091 = @func_9089(%1089, %1090) /* ty=(Tensor[(9, 12, 12), bool],) */;
  %1092 = %1086.0;
  %1093 = %1091.0;
  (%1092, %1093, %var_16776)
}

def @func_9609(%var_9581: Tensor[(672), float64]) -> (Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(7, 3, 10), float32]) {
  %1094 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1095 = cast(%var_9581, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1096 = %1094.0;
  %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %1098 = reshape(%1095, newshape=[16, 6, 7]) /* ty=Tensor[(16, 6, 7), float64] */;
  %1099 = reshape(%1097, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1100 = @func_875(%1098, %1099) /* ty=(Tensor[(16, 6, 7), float64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1101 = %1100.1;
  %1102 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1096, %1101, %var_9581, %1102)
}

def @func_3671(%var_3669: Tensor[(4, 10, 15), float32]) -> (Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) {
  @func_3668(%var_3669) /* ty=(Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_8881() -> Tensor[(7, 3, 10), float32] {
  @func_1953() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_17571(%var_17569: Tensor[(12, 4), float32]) -> (Tensor[(2688), float32], Tensor[(48), float32], Tensor[(12, 4), float32]) {
  @func_17568(%var_17569) /* ty=(Tensor[(2688), float32], Tensor[(48), float32], Tensor[(12, 4), float32]) */
}

def @func_12270() -> (Tensor[(7, 3, 10), float32],) {
  @func_12268() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_18233() -> Tensor[(7, 3, 10), float32] {
  %1104 = fn () -> Tensor[(7, 3, 10), float32] {
    %1103 = @func_9865() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1103.1
  };
  %1104() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_10814() -> Tensor[(7, 3, 10), float32] {
  %1106 = fn () -> Tensor[(7, 3, 10), float32] {
    %1105 = @func_6103() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) */;
    %1105.0
  };
  %1106() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_20431() -> (Tensor[(600, ?), float32], Tensor[(600, ?), float32], Tensor[(5, 11, 1), float64]) {
  %1119 = fn () -> (Tensor[(600, ?), float32], Tensor[(600, ?), float32], Tensor[(5, 11, 1), float64]) {
    %1107 = @func_14885() /* ty=(Tensor[(600), float32], Tensor[(7, 3, 10), float32], Tensor[(640), float64], Tensor[(7, 3, 10), float64], Tensor[(600, ?), int32]) */;
    %1108 = %1107.4;
    %1109 = cast(%1108, dtype="float32") /* ty=Tensor[(600, ?), float32] */;
    %1110 = cast(%1108, dtype="float32") /* ty=Tensor[(600, ?), float32] */;
    %1111 = atanh(%1110) /* ty=Tensor[(600, ?), float32] */;
    %1112 = cast(%1111, dtype="float32") /* ty=Tensor[(600, ?), float32] */;
    %1113 = shape_of(%1108, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1114 = cast(%1108, dtype="float32") /* ty=Tensor[(600, ?), float32] */;
    %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1116 = sigmoid(%1109) /* ty=Tensor[(600, ?), float32] */;
    %1117 = subtract(%1114, %1115) /* ty=Tensor[(600, ?), float32] */;
    %1118 = @func_17314() /* ty=Tensor[(5, 11, 1), float64] */;
    (%1116, %1117, %1118)
  };
  %1119() /* ty=(Tensor[(600, ?), float32], Tensor[(600, ?), float32], Tensor[(5, 11, 1), float64]) */
}

def @func_2285() -> Tensor[(7, 3, 10), float32] {
  %1121 = fn () -> Tensor[(7, 3, 10), float32] {
    %1120 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1120.0
  };
  %1121() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_9009() -> (Tensor[(7, 3, 10), float32],) {
  %1123 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1122 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1122,)
  };
  %1123() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_4921() -> (Tensor[(2688), float32],) {
  %1126 = fn () -> (Tensor[(2688), float32],) {
    %1124 = @func_3177() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %1125 = %1124.2;
    (%1125,)
  };
  %1126() /* ty=(Tensor[(2688), float32],) */
}

def @func_18201() -> Tensor[(55), float64] {
  @func_17255() /* ty=Tensor[(55), float64] */
}

def @func_18758() -> (Tensor[(55), float64],) {
  %1127 = @func_16400() /* ty=(Tensor[(55), float64],) */;
  %1128 = %1127.0;
  (%1128,)
}

def @func_13135() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
  %1133 = fn () -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) {
    %1129 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %1130 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1131 = %1129.0;
    %1132 = %1130.0;
    (%1131, %1132)
  };
  %1133() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_15121() -> (Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) {
  %1134 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
  %1135 = @func_9100() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1136 = %1134.1;
  %1137 = %1135.0;
  (%1136, %1137)
}

def @func_6878() -> (Tensor[(7, 3, 10), float32],) {
  %1138 = @func_5284() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1138,)
}

def @func_17112() -> (Tensor[(7, 3, 10), float32],) {
  %1140 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1139 = @func_16386() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1139,)
  };
  %1140() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_17620() -> (Tensor[(7, 3, 10), float32],) {
  %1141 = @func_14040() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1142 = %1141.2;
  (%1142,)
}

def @func_21349() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  @func_21347() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */
}

def @func_13649(%var_13648: Tensor[(600), float32]) -> (Tensor[(8, 7, 2), float64], Tensor[(600, ?), int32], Tensor[(600), float32]) {
  %1148 = fn (%var_13644: Tensor[(600), float32]) -> (Tensor[(8, 7, 2), float64], Tensor[(600, ?), int32], Tensor[(600), float32]) {
    %1143 = cast(%var_13644, dtype="float32") /* ty=Tensor[(600), float32] */;
    %1144 = reshape(%1143, newshape=[600]) /* ty=Tensor[(600), float32] */;
    %1145 = @func_8608(%1144) /* ty=(Tensor[(7, 3, 10), int64], Tensor[(600, ?), int32], Tensor[(7, 3, 10), float64]) */;
    %1146 = @func_12738() /* ty=Tensor[(8, 7, 2), float64] */;
    %1147 = %1145.1;
    (%1146, %1147, %var_13644)
  };
  %1148(%var_13648) /* ty=(Tensor[(8, 7, 2), float64], Tensor[(600, ?), int32], Tensor[(600), float32]) */
}

def @func_8305() -> Tensor[(7, 3, 10), float32] {
  @func_8303() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_15594(%var_15509: Tensor[(11, 13, 15), int16], %var_15510: Tensor[(11, 13, 15), int16], %var_15518: Tensor[(4, 168), float64]) -> (Tensor[(11, 13, 15), int16], Tensor[(4, 168), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool], Tensor[(5, 11, 1300), uint8], Tensor[(5, 11, 3), float64]) {
  %1149 = cast(%var_15510, dtype="int16") /* ty=Tensor[(11, 13, 15), int16] */;
  %1150 = shape_of(%var_15509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1151 = cast(%var_15509, dtype="int16") /* ty=Tensor[(11, 13, 15), int16] */;
  %1152 = dyn.reshape(%1149, %1150, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1153 = @func_6954() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1154 = @func_12410() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1155 = @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */;
  %1156 = @func_14062() /* ty=(Tensor[(8, 16, 5), float64], Tensor[(6, 16, 15), bool]) */;
  %1157 = @func_15224() /* ty=(Tensor[(1300), float32],) */;
  %1158 = %1157.0;
  %1159 = cast(%var_15518, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %1160 = reshape(%1159, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1161 = @func_9609(%1160) /* ty=(Tensor[(5, 11, 1), float64], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(7, 3, 10), float32]) */;
  %1162 = %1161.0;
  %1163 = cast(%1158, dtype="uint8") /* ty=Tensor[(1300), uint8] */;
  %1164 = cast(%1162, dtype="uint8") /* ty=Tensor[(5, 11, 1), uint8] */;
  %1165 = @func_13819() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 3), float64], Tensor[(7, 3, 10), float32]) */;
  %1166 = maximum(%1151, %1152) /* ty=Tensor[(11, 13, 15), int16] */;
  %1167 = @func_14363() /* ty=Tensor[(7, 3, 10), float32] */;
  %1168 = %1153.0;
  %1169 = %1154.0;
  %1170 = %1155.1;
  %1171 = %1156.1;
  %1172 = logical_xor(%1163, %1164) /* ty=Tensor[(5, 11, 1300), uint8] */;
  %1173 = %1165.1;
  (%1166, %var_15518, %1167, %1168, %1169, %1170, %1171, %1172, %1173)
}

def @func_5795(%var_5793: int64, %var_5794: Tensor[(3, 5, 4), int64]) -> (Tensor[(3, 5, 4), bool], Tensor[(2, 12, 11), int64], Tensor[(1, 264), int64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %1185 = fn (%var_5734: int64, %var_5735: Tensor[(3, 5, 4), int64]) -> (Tensor[(3, 5, 4), bool], Tensor[(2, 12, 11), int64], Tensor[(1, 264), int64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
    %1174 = cast(%var_5734, dtype="bool") /* ty=bool */;
    %1175 = cast(%var_5735, dtype="bool") /* ty=Tensor[(3, 5, 4), bool] */;
    %1176 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 264), int64] */, dtype="int64") /* ty=Tensor[(1, 264), int64] */;
    %1177 = reshape(%1176, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
    %1178 = @func_1558(%1177) /* ty=(Tensor[(2, 12, 11), int64],) */;
    %1179 = @func_5190() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */;
    %1180 = @func_3648() /* ty=(Tensor[(55), float64],) */;
    %1181 = greater_equal(%1174, %1175) /* ty=Tensor[(3, 5, 4), bool] */;
    %1182 = %1178.0;
    %1183 = %1179.0;
    %1184 = %1180.0;
    (%1181, %1182, meta[relay.Constant][47] /* ty=Tensor[(1, 264), int64] */, %1183, %1184)
  };
  %1185(%var_5793, %var_5794) /* ty=(Tensor[(3, 5, 4), bool], Tensor[(2, 12, 11), int64], Tensor[(1, 264), int64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */
}

def @func_6592() -> Tensor[(672), float64] {
  @func_6590() /* ty=Tensor[(672), float64] */
}

def @func_13821() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 3), float64], Tensor[(7, 3, 10), float32]) {
  @func_13819() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 3), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_1488() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_4383() -> Tensor[(7, 3, 10), float32] {
  @func_4381() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_3156(%var_3154: Tensor[(55), float64], %var_3155: Tensor[(96), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(12, 4, 13), float64], Tensor[(55), float64], Tensor[(6, 8, 2), float32], Tensor[(96), float32]) {
  @func_3152(%var_3154, %var_3155) /* ty=(Tensor[(7, 3, 10), float64], Tensor[(12, 4, 13), float64], Tensor[(55), float64], Tensor[(6, 8, 2), float32], Tensor[(96), float32]) */
}

def @func_9051() -> Tensor[(7, 3, 10), float32] {
  %1187 = fn () -> Tensor[(7, 3, 10), float32] {
    %1186 = @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1186.0
  };
  %1187() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_5314() -> (Tensor[(7, 3, 10), float32],) {
  @func_5312() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_7563() -> (Tensor[(55), float64],) {
  %1190 = fn () -> (Tensor[(55), float64],) {
    %1188 = @func_6076() /* ty=(Tensor[(55), float64],) */;
    %1189 = %1188.0;
    (%1189,)
  };
  %1190() /* ty=(Tensor[(55), float64],) */
}

def @func_8703() -> (Tensor[(672), float64],) {
  %1191 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %1192 = %1191.2;
  (%1192,)
}

def @func_2239() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %1200 = fn () -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
    %1193 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
    %1194 = @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1195 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
    %1196 = %1193.0;
    %1197 = %1194.0;
    %1198 = %1195.3;
    %1199 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1196, %1197, %1198, %1199)
  };
  %1200() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_3039() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_21003() -> (Tensor[(7, 3, 10), float32],) {
  @func_21001() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_3062() -> (Tensor[(7, 3, 10), float32],) {
  @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_1955() -> Tensor[(7, 3, 10), float32] {
  @func_1953() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_5925() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  @func_5923() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */
}

def @func_10619() -> Tensor[(7, 3, 10), float32] {
  %1202 = fn () -> Tensor[(7, 3, 10), float32] {
    %1201 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %1201.3
  };
  %1202() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_13819() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 3), float64], Tensor[(7, 3, 10), float32]) {
  %1203 = @func_12234() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1204 = @func_3858() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1205 = %1204.0;
  %1206 = cast(%1205, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %1207 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(5, 11, 3), float64] */;
  %1208 = %1203.2;
  %1209 = mod(%1206, %1207) /* ty=Tensor[(5, 11, 3), float64] */;
  %1210 = @func_4381() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1208, %1209, %1210)
}

def @func_1675() -> Tensor[(7, 3, 10), float32] {
  @func_1673() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_12411() -> (Tensor[(7, 3, 10), float32],) {
  %1212 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1211 = @func_8881() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1211,)
  };
  %1212() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_17327() -> Tensor[(7, 3, 10), float32] {
  %1214 = fn () -> Tensor[(7, 3, 10), float32] {
    %1213 = @func_8430() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1213.2
  };
  %1214() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_19412() -> (Tensor[(7, 3, 10), float32],) {
  @func_19410() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_16756() -> Tensor[(7, 3, 10), float32] {
  @func_16754() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_1560(%var_1559: Tensor[(2, 12, 11), int64]) -> (Tensor[(2, 12, 11), int64],) {
  %1220 = fn (%var_1551: Tensor[(2, 12, 11), int64]) -> (Tensor[(2, 12, 11), int64],) {
    %1215 = cast(%var_1551, dtype="int64") /* ty=Tensor[(2, 12, 11), int64] */;
    %1216 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(2, 12, 11), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1217 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 12, 11), int64] */, dtype="int64") /* ty=Tensor[(2, 12, 11), int64] */;
    %1218 = dyn.reshape(%1215, %1216, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1219 = maximum(%1217, %1218) /* ty=Tensor[(2, 12, 11), int64] */;
    (%1219,)
  };
  %1220(%var_1559) /* ty=(Tensor[(2, 12, 11), int64],) */
}

def @func_1281() -> (Tensor[(7, 3, 10), float32],) {
  %1221 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1221,)
}

def @func_14885() -> (Tensor[(600), float32], Tensor[(7, 3, 10), float32], Tensor[(640), float64], Tensor[(7, 3, 10), float64], Tensor[(600, ?), int32]) {
  %1222 = @func_6503() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(8, 16, 5), float64], Tensor[(600), float32]) */;
  %1223 = cast(meta[relay.Constant][50] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1224 = reshape(%1223, newshape=[320, 2]) /* ty=Tensor[(320, 2), float64] */;
  %1225 = @func_12624(%1224) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(9, 1, 10), float32], Tensor[(55), float64], Tensor[(320, 2), float64]) */;
  %1226 = @func_10992() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1227 = %1222.2;
  %1228 = cast(%1227, dtype="float32") /* ty=Tensor[(600), float32] */;
  %1229 = reshape(%1228, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %1230 = @func_13647(%1229) /* ty=(Tensor[(8, 7, 2), float64], Tensor[(600, ?), int32], Tensor[(600), float32]) */;
  %1231 = %1225.1;
  %1232 = %1226.0;
  %1233 = %1230.1;
  (%1227, %1231, meta[relay.Constant][50] /* ty=Tensor[(640), float64] */, %1232, %1233)
}

def @func_13835() -> (Tensor[(7, 3, 10), float32],) {
  %1235 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1234 = @func_2284() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1234,)
  };
  %1235() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_3786() -> (Tensor[(5, 11, 1), float64],) {
  %1238 = fn () -> (Tensor[(5, 11, 1), float64],) {
    %1236 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %1237 = %1236.0;
    (%1237,)
  };
  %1238() /* ty=(Tensor[(5, 11, 1), float64],) */
}

def @func_15659() -> (Tensor[(7, 3, 10), float64],) {
  %1240 = fn () -> (Tensor[(7, 3, 10), float64],) {
    %1239 = @func_7941() /* ty=Tensor[(7, 3, 10), float64] */;
    (%1239,)
  };
  %1240() /* ty=(Tensor[(7, 3, 10), float64],) */
}

def @func_12919() -> Tensor[(7, 3, 10), float32] {
  @func_12917() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_19384() -> Tensor[(7, 3, 10), float32] {
  %1242 = fn () -> Tensor[(7, 3, 10), float32] {
    %1241 = @func_12316() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) */;
    %1241.0
  };
  %1242() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_4497() -> Tensor[(7, 3, 10), float32] {
  @func_4495() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_20179() -> (Tensor[(7, 3, 10), float32],) {
  %1244 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1243 = @func_12917() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1243,)
  };
  %1244() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_2385() -> (Tensor[(7, 3, 10), float64],) {
  @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */
}

def @func_8883() -> Tensor[(7, 3, 10), float32] {
  @func_8881() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_3250() -> (Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  @func_3248() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_416(%var_414: Tensor[(5, 11, 1), float64]) -> Tensor[(5, 11, 1), float64] {
  @func_413(%var_414) /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_7107(%var_7106: Tensor[(5, 11, 1), float64]) -> (Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32]) {
  %1253 = fn (%var_7075: Tensor[(5, 11, 1), float64]) -> (Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32]) {
    %1245 = @func_5964() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(55), float64]) */;
    %1246 = %1245.1;
    %1247 = cast(%var_7075, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
    %1248 = shape_of(%1246, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1249 = cast(%1246, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
    %1250 = dyn.reshape(%1247, %1248, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1251 = not_equal(%1249, %1250) /* ty=Tensor[(5, 11, ?), bool] */;
    %1252 = @func_5095() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1251, %1252)
  };
  %1253(%var_7106) /* ty=(Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32]) */
}

def @func_12705() -> Tensor[(7, 3, 10), float32] {
  %1254 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
  %1254.0
}

def @func_14570() -> (Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64]) {
  %1255 = @func_13612() /* ty=(Tensor[(1, 264), int64],) */;
  %1256 = @func_13751() /* ty=Tensor[(7, 3, 10), float32] */;
  %1257 = %1255.0;
  (%1256, %1257)
}

def @func_15599(%var_15596: Tensor[(11, 13, 15), int16], %var_15597: Tensor[(11, 13, 15), int16], %var_15598: Tensor[(4, 168), float64]) -> (Tensor[(11, 13, 15), int16], Tensor[(4, 168), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool], Tensor[(5, 11, 1300), uint8], Tensor[(5, 11, 3), float64]) {
  @func_15594(%var_15596, %var_15597, %var_15598) /* ty=(Tensor[(11, 13, 15), int16], Tensor[(4, 168), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool], Tensor[(5, 11, 1300), uint8], Tensor[(5, 11, 3), float64]) */
}

def @func_10701() -> (Tensor[(7, 3, 10), float32],) {
  %1260 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1258 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1259 = %1258.0;
    (%1259,)
  };
  %1260() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_9492() -> (Tensor[(5, 11, 1), float64],) {
  %1263 = fn () -> (Tensor[(5, 11, 1), float64],) {
    %1261 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %1262 = %1261.0;
    (%1262,)
  };
  %1263() /* ty=(Tensor[(5, 11, 1), float64],) */
}

def @func_13060() -> Tensor[(7, 3, 10), float32] {
  @func_13058() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_18860(%var_18858: Tensor[(10, 13, 2), int8]) -> (Tensor[(10, 13, 2), int8],) {
  @func_18857(%var_18858) /* ty=(Tensor[(10, 13, 2), int8],) */
}

def @func_7341() -> (Tensor[(7, 3, 10), float32],) {
  %1266 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1264 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1265 = %1264.1;
    (%1265,)
  };
  %1266() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_22444() -> (Tensor[(7, 3, 10), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) {
  @func_22442() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(96), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_1368() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %1267 = @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1268 = cast(meta[relay.Constant][51] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1269 = reshape(%1268, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %1270 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  %1271 = %1267.0;
  %1272 = @func_413(%1269) /* ty=Tensor[(5, 11, 1), float64] */;
  (%1270, %1271, %1272, meta[relay.Constant][51] /* ty=Tensor[(55), float64] */)
}

def @func_17643() -> (Tensor[(5, 11, 1), float64], Tensor[(8, 7, 2), float32]) {
  %1273 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1274 = @func_12738() /* ty=Tensor[(8, 7, 2), float64] */;
  %1275 = cast(%1274, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %1276 = %1273.0;
  %1277 = sinh(%1275) /* ty=Tensor[(8, 7, 2), float32] */;
  (%1276, %1277)
}

def @func_21903() -> (Tensor[(7, 3, 10), float64],) {
  %1280 = fn () -> (Tensor[(7, 3, 10), float64],) {
    %1278 = @func_9750() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) */;
    %1279 = %1278.1;
    (%1279,)
  };
  %1280() /* ty=(Tensor[(7, 3, 10), float64],) */
}

def @func_19366(%var_19365: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(2688), float32]) {
  %1287 = fn (%var_19328: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(2688), float32]) {
    %1281 = @func_2383() /* ty=(Tensor[(7, 3, 10), float64],) */;
    %1282 = cast(%var_19328, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %1283 = reshape(%1282, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
    %1284 = @func_19003(%1283) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(5, 11, 1), float64]) */;
    %1285 = %1281.0;
    %1286 = %1284.1;
    (%1285, %1286, %var_19328)
  };
  %1287(%var_19365) /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(2688), float32]) */
}

def @func_18276() -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %1288 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %1289 = %1288.0;
  %1290 = @func_4397() /* ty=Tensor[(55), float64] */;
  (%1289, %1290)
}

def @func_16536(%var_16534: Tensor[(11, 14, 3), float32], %var_16535: Tensor[(60), int64]) -> (Tensor[(11, 14, 3), float32], Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64], int64, Tensor[(60), int64], Tensor[(55), float64]) {
  %1303 = fn (%var_16505: Tensor[(11, 14, 3), float32], %var_16521: Tensor[(60), int64]) -> (Tensor[(11, 14, 3), float32], Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64], int64, Tensor[(60), int64], Tensor[(55), float64]) {
    %1291 = cast(%var_16505, dtype="float32") /* ty=Tensor[(11, 14, 3), float32] */;
    %1292 = @func_6103() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55, 1), float64]) */;
    %1293 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1294 = cast(%var_16521, dtype="int64") /* ty=Tensor[(60), int64] */;
    %1295 = reshape(%1293, newshape=[]) /* ty=int64 */;
    %1296 = reshape(%1294, newshape=[3, 5, 4]) /* ty=Tensor[(3, 5, 4), int64] */;
    %1297 = @func_5792(%1295, %1296) /* ty=(Tensor[(3, 5, 4), bool], Tensor[(2, 12, 11), int64], Tensor[(1, 264), int64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %1298 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %1299 = cosh(%1291) /* ty=Tensor[(11, 14, 3), float32] */;
    %1300 = %1292.0;
    %1301 = %1297.2;
    %1302 = %1298.2;
    (%1299, %1300, %1301, -7 /* ty=int64 */, %var_16521, %1302)
  };
  %1303(%var_16534, %var_16535) /* ty=(Tensor[(11, 14, 3), float32], Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64], int64, Tensor[(60), int64], Tensor[(55), float64]) */
}

def @func_20505(%var_20503: Tensor[(11, 8, 13), float32]) -> (Tensor[(11, 8, 13), float32], Tensor[(7, 3, 10), float64]) {
  @func_20502(%var_20503) /* ty=(Tensor[(11, 8, 13), float32], Tensor[(7, 3, 10), float64]) */
}

def @func_16419() -> Tensor[(5, 11, 1), float64] {
  @func_16417() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_18848() -> (Tensor[(640), float64],) {
  @func_18846() /* ty=(Tensor[(640), float64],) */
}

def @func_5513(%var_5510: Tensor[(12, 14, 8), int16], %var_5511: Tensor[(12, 14, 8), int16], %var_5512: Tensor[(600), float32]) -> (Tensor[(12, 14, 8), bool], Tensor[(4, 10, 15), float32], Tensor[(600), float32], float32) {
  %1315 = fn (%var_5495: Tensor[(12, 14, 8), int16], %var_5496: Tensor[(12, 14, 8), int16], %var_5504: Tensor[(600), float32]) -> (Tensor[(12, 14, 8), bool], Tensor[(4, 10, 15), float32], Tensor[(600), float32], float32) {
    %1304 = cast(%var_5496, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
    %1305 = shape_of(%var_5495, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1306 = cast(%var_5495, dtype="bool") /* ty=Tensor[(12, 14, 8), bool] */;
    %1307 = dyn.reshape(%1304, %1305, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1308 = cast(%var_5504, dtype="float32") /* ty=Tensor[(600), float32] */;
    %1309 = reshape(%1308, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), float32] */;
    %1310 = @func_3668(%1309) /* ty=(Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) */;
    %1311 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
    %1312 = less(%1306, %1307) /* ty=Tensor[(12, 14, 8), bool] */;
    %1313 = %1310.0;
    %1314 = %1311.5;
    (%1312, %1313, %var_5504, %1314)
  };
  %1315(%var_5510, %var_5511, %var_5512) /* ty=(Tensor[(12, 14, 8), bool], Tensor[(4, 10, 15), float32], Tensor[(600), float32], float32) */
}

def @func_19003(%var_18973: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(5, 11, 1), float64]) {
  %1316 = @func_7562() /* ty=(Tensor[(55), float64],) */;
  %1317 = cast(%var_18973, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %1318 = reshape(%1317, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %1319 = @func_4809(%1318) /* ty=(Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) */;
  %1320 = @func_8374() /* ty=Tensor[(7, 3, 10), float32] */;
  %1321 = %1316.0;
  %1322 = %1319.13;
  %1323 = @func_12462() /* ty=Tensor[(5, 11, 1), float64] */;
  (%1320, %1321, %1322, %var_18973, %1323)
}

def @func_19006(%var_19004: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(5, 11, 1), float64]) {
  @func_19003(%var_19004) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32], Tensor[(5, 11, 1), float64]) */
}

def @func_19817() -> (Tensor[(7, 3, 10), float32],) {
  %1326 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1324 = @func_13713() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1325 = %1324.0;
    (%1325,)
  };
  %1326() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_3648() -> (Tensor[(55), float64],) {
  %1327 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1328 = %1327.2;
  (%1328,)
}

def @func_6192() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %1331 = fn () -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
    %1329 = @func_6169() /* ty=Tensor[(55), float64] */;
    %1330 = @func_5095() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1329, %1330)
  };
  %1331() /* ty=(Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_14963() -> (Tensor[(7, 3, 10), float32],) {
  %1334 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1332 = @func_9865() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1333 = %1332.0;
    (%1333,)
  };
  %1334() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_16313() -> (Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %1335 = @func_12462() /* ty=Tensor[(5, 11, 1), float64] */;
  %1336 = @func_4397() /* ty=Tensor[(55), float64] */;
  (%1335, %1336)
}

def @func_13941() -> (Tensor[(7, 3, 10), float32],) {
  %1337 = @func_8143() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1337,)
}

def @func_15958() -> Tensor[(55), float64] {
  %1338 = fn () -> Tensor[(55), float64] {
    @func_4397() /* ty=Tensor[(55), float64] */
  };
  %1338() /* ty=Tensor[(55), float64] */
}

def @func_11349() -> (Tensor[(7, 3, 10), float32],) {
  %1339 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1339,)
}

def @func_15284() -> (Tensor[(8, 16, 5), float64], Tensor[(5, 11, 2688), bool]) {
  %1349 = fn () -> (Tensor[(8, 16, 5), float64], Tensor[(5, 11, 2688), bool]) {
    %1340 = @func_11338() /* ty=(Tensor[(2688), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64]) */;
    %1341 = @func_9491() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %1342 = %1341.0;
    %1343 = @func_15077() /* ty=(Tensor[(55), float64], Tensor[(5, 11, 2688), bool]) */;
    %1344 = %1343.1;
    %1345 = cast(%1342, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
    %1346 = cast(%1344, dtype="bool") /* ty=Tensor[(5, 11, 2688), bool] */;
    %1347 = %1340.1;
    %1348 = logical_or(%1345, %1346) /* ty=Tensor[(5, 11, 2688), bool] */;
    (%1347, %1348)
  };
  %1349() /* ty=(Tensor[(8, 16, 5), float64], Tensor[(5, 11, 2688), bool]) */
}

def @func_16315() -> (Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  @func_16313() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */
}

def @func_2798(%var_2727: Tensor[(1, 2688), float32]) -> (Tensor[(2, 12, 11), int64], Tensor[(2688), float32], Tensor[(1, 2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(55), int32], Tensor[(2688), float32]) {
  %1350 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %1351 = cast(%var_2727, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %1352 = reshape(%1351, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %1353 = @func_1736(%1352) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
  %1354 = @func_2238() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
  %1355 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %1356 = cast(meta[relay.Constant][52] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1357 = reshape(%1356, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1358 = @func_2603(%1357) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) */;
  %1359 = %1358.4;
  %1360 = cast(%1359, dtype="int32") /* ty=Tensor[(5, 11, 1), int32] */;
  %1361 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(55), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1362 = cast(meta[relay.Constant][52] /* ty=Tensor[(55), float64] */, dtype="int32") /* ty=Tensor[(55), int32] */;
  %1363 = dyn.reshape(%1360, %1361, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1364 = cast(%var_2727, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %1365 = reshape(%1364, newshape=[2688]) /* ty=Tensor[(2688), float32] */;
  %1366 = @func_1736(%1365) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 5), float64], Tensor[(2688), float32], Tensor[(11, 5), float64]) */;
  %1367 = %1350.6;
  %1368 = %1353.2;
  %1369 = %1354.1;
  %1370 = %1355.0;
  %1371 = right_shift(%1362, %1363) /* ty=Tensor[(55), int32] */;
  %1372 = %1366.2;
  (%1367, %1368, %var_2727, %1369, %1370, %1371, %1372)
}

def @func_17203() -> Tensor[(7, 3, 10), float32] {
  %1373 = @func_16720() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1373.1
}

def @func_7920(%var_7840: Tensor[(8, 11, 6), float32]) -> (Tensor[(8, 11, 6), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(55), float64], Tensor[(7, 3, 10), float64]) {
  %1374 = cast(%var_7840, dtype="float32") /* ty=Tensor[(8, 11, 6), float32] */;
  %1375 = @func_6260() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1376 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1377 = cast(meta[relay.Constant][53] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1378 = reshape(%1377, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %1379 = @func_7105(%1378) /* ty=(Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32]) */;
  %1380 = @func_2558() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) */;
  %1381 = %1380.0;
  %1382 = cast(%1381, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %1383 = sin(%1374) /* ty=Tensor[(8, 11, 6), float32] */;
  %1384 = %1375.0;
  %1385 = %1376.0;
  %1386 = %1379.0;
  %1387 = sqrt(%1382) /* ty=Tensor[(7, 3, 10), float64] */;
  (%1383, %1384, %1385, %1386, meta[relay.Constant][53] /* ty=Tensor[(55), float64] */, %1387)
}

def @func_14773() -> (Tensor[(7, 3, 10), float32],) {
  %1388 = @func_14694() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1389 = %1388.0;
  (%1389,)
}

def @func_3104() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64]) {
  %1390 = @func_2659() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1391 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1392 = @func_2164() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */;
  %1393 = %1390.0;
  %1394 = %1391.1;
  %1395 = %1392.2;
  (%1393, %1394, %1395)
}

def @func_8719() -> Tensor[(2688), float32] {
  %1397 = fn () -> Tensor[(2688), float32] {
    %1396 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
    %1396.0
  };
  %1397() /* ty=Tensor[(2688), float32] */
}

def @func_17255() -> Tensor[(55), float64] {
  @func_10425() /* ty=Tensor[(55), float64] */
}

def @func_8376() -> Tensor[(7, 3, 10), float32] {
  @func_8374() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_2801(%var_2799: Tensor[(1, 2688), float32]) -> (Tensor[(2, 12, 11), int64], Tensor[(2688), float32], Tensor[(1, 2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(55), int32], Tensor[(2688), float32]) {
  @func_2798(%var_2799) /* ty=(Tensor[(2, 12, 11), int64], Tensor[(2688), float32], Tensor[(1, 2688), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(55), int32], Tensor[(2688), float32]) */
}

def @func_18846() -> (Tensor[(640), float64],) {
  %1398 = @func_11338() /* ty=(Tensor[(2688), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64]) */;
  %1399 = %1398.2;
  (%1399,)
}

def @func_22429() -> (Tensor[(10, 8, 8), float64],) {
  %1402 = fn () -> (Tensor[(10, 8, 8), float64],) {
    %1400 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 8), float64] */;
    %1401 = tan(%1400) /* ty=Tensor[(10, 8, 8), float64] */;
    (%1401,)
  };
  %1402() /* ty=(Tensor[(10, 8, 8), float64],) */
}

def @func_14594() -> (Tensor[(7, 3, 10), float32],) {
  @func_14592() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_20575() -> Tensor[(7, 3, 10), float32] {
  @func_16754() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_9316(%var_9314: int32, %var_9315: Tensor[(16, 12, 15), int32]) -> (Tensor[(16, 12, 15), int32],) {
  %1406 = fn (%var_9302: int32, %var_9303: Tensor[(16, 12, 15), int32]) -> (Tensor[(16, 12, 15), int32],) {
    %1403 = cast(%var_9302, dtype="int32") /* ty=int32 */;
    %1404 = cast(%var_9303, dtype="int32") /* ty=Tensor[(16, 12, 15), int32] */;
    %1405 = left_shift(%1403, %1404) /* ty=Tensor[(16, 12, 15), int32] */;
    (%1405,)
  };
  %1406(%var_9314, %var_9315) /* ty=(Tensor[(16, 12, 15), int32],) */
}

def @func_20502(%var_20489: Tensor[(11, 8, 13), float32]) -> (Tensor[(11, 8, 13), float32], Tensor[(7, 3, 10), float64]) {
  %1407 = cast(%var_20489, dtype="float32") /* ty=Tensor[(11, 8, 13), float32] */;
  %1408 = @func_15658() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %1409 = erf(%1407) /* ty=Tensor[(11, 8, 13), float32] */;
  %1410 = %1408.0;
  (%1409, %1410)
}

def @func_9407(%var_9405: Tensor[(13, 10, 10), uint32], %var_9406: Tensor[(13, 10, 10), uint32]) -> (Tensor[(13, 10, 10), bool],) {
  %1416 = fn (%var_9393: Tensor[(13, 10, 10), uint32], %var_9394: Tensor[(13, 10, 10), uint32]) -> (Tensor[(13, 10, 10), bool],) {
    %1411 = cast(%var_9394, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
    %1412 = shape_of(%var_9393, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1413 = cast(%var_9393, dtype="bool") /* ty=Tensor[(13, 10, 10), bool] */;
    %1414 = dyn.reshape(%1411, %1412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1415 = less_equal(%1413, %1414) /* ty=Tensor[(13, 10, 10), bool] */;
    (%1415,)
  };
  %1416(%var_9405, %var_9406) /* ty=(Tensor[(13, 10, 10), bool],) */
}

def @func_16167() -> Tensor[(8, 16, 5), float64] {
  @func_16165() /* ty=Tensor[(8, 16, 5), float64] */
}

def @func_1486() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1417 = @func_1281() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1418 = @func_1240() /* ty=Tensor[(7, 3, 10), float32] */;
  %1419 = %1417.0;
  (%1418, %1419)
}

def @func_13173() -> (Tensor[(7, 3, 10), float32],) {
  %1422 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1420 = @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %1421 = %1420.2;
    (%1421,)
  };
  %1422() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_2165() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) {
  %1444 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) {
    %1423 = cast(meta[relay.Constant][55] /* ty=Tensor[(55), float64] */, dtype="float64") /* ty=Tensor[(55), float64] */;
    %1424 = reshape(%1423, newshape=[55]) /* ty=Tensor[(55), float64] */;
    %1425 = @func_1440(%1424) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %1426 = %1425.1;
    %1427 = cast(%1426, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1428 = reshape(%1427, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
    %1429 = @func_1822() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(168, 4), float64], Tensor[(11, 5), float64]) */;
    %1430 = cast(meta[relay.Constant][55] /* ty=Tensor[(55), float64] */, dtype="uint64") /* ty=Tensor[(55), uint64] */;
    %1431 = shape_of(%1426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1432 = cast(%1426, dtype="uint64") /* ty=Tensor[(5, 11, 1), uint64] */;
    %1433 = dyn.reshape(%1430, %1431, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1434 = cast(meta[relay.Constant][56] /* ty=Tensor[(66, 4), int64] */, dtype="int64") /* ty=Tensor[(66, 4), int64] */;
    %1435 = reshape(%1434, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
    %1436 = @func_1558(%1435) /* ty=(Tensor[(2, 12, 11), int64],) */;
    %1437 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
    %1438 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
    %1439 = @func_413(%1428) /* ty=Tensor[(5, 11, 1), float64] */;
    %1440 = %1429.1;
    %1441 = multiply(%1432, %1433) /* ty=Tensor[(5, 11, ?), uint64] */;
    %1442 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
    %1443 = %1436.0;
    (%1437, %1438, %1439, %1440, %1441, %1442, %1443, meta[relay.Constant][56] /* ty=Tensor[(66, 4), int64] */)
  };
  %1444() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(5, 11, ?), uint64], Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(66, 4), int64]) */
}

def @func_12118() -> Tensor[(5, 11, 1), float64] {
  %1445 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1445.0
}

def @func_16688() -> (Tensor[(55), float64], Tensor[(7, 3, 10), float32]) {
  %1446 = @func_11349() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1447 = @func_10425() /* ty=Tensor[(55), float64] */;
  %1448 = %1446.0;
  (%1447, %1448)
}

def @func_12120() -> Tensor[(5, 11, 1), float64] {
  @func_12118() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_14554() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  @func_14552() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */
}

def @func_16930() -> (Tensor[(7, 3, 10), float32],) {
  %1449 = @func_13058() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1449,)
}

def @func_9460() -> (Tensor[(7, 3, 10), float32],) {
  @func_9458() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_2331(%var_2329: Tensor[(6, 8, 2), float32]) -> (Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) {
  @func_2328(%var_2329) /* ty=(Tensor[(6, 8, 2), float32], Tensor[(14, 16, 12), float32], Tensor[(11, 5), float64]) */
}

def @func_21799(%var_21798: Tensor[(8064), float32]) -> (Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(8064), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1461 = fn (%var_21760: Tensor[(8064), float32]) -> (Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(8064), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %1450 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
    %1451 = cast(%var_21760, dtype="float32") /* ty=Tensor[(8064), float32] */;
    %1452 = reshape(%1451, newshape=[3, 2688]) /* ty=Tensor[(3, 2688), float32] */;
    %1453 = @func_17372(%1452) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(1, 2688), float32], Tensor[(3, 2688), uint16]) */;
    %1454 = @func_8660() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1455 = @func_11120() /* ty=Tensor[(6, 16, 15), bool] */;
    %1456 = %1450.0;
    %1457 = @func_16208() /* ty=Tensor[(55), float64] */;
    %1458 = %1453.0;
    %1459 = @func_6327() /* ty=Tensor[(7, 3, 10), float32] */;
    %1460 = %1454.0;
    (%1455, %1456, %1457, %1458, %var_21760, %1459, %1460)
  };
  %1461(%var_21798) /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(8064), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_9092(%var_9090: Tensor[(9, 12, 12), bool], %var_9091: Tensor[(9, 12, 12), bool]) -> (Tensor[(9, 12, 12), bool],) {
  %1467 = fn (%var_9080: Tensor[(9, 12, 12), bool], %var_9081: Tensor[(9, 12, 12), bool]) -> (Tensor[(9, 12, 12), bool],) {
    %1462 = cast(%var_9081, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
    %1463 = shape_of(%var_9080, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1464 = cast(%var_9080, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
    %1465 = dyn.reshape(%1462, %1463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1466 = logical_and(%1464, %1465) /* ty=Tensor[(9, 12, 12), bool] */;
    (%1466,)
  };
  %1467(%var_9090, %var_9091) /* ty=(Tensor[(9, 12, 12), bool],) */
}

def @func_1525(%var_1500: Tensor[(14, 16, 12), float32]) -> (Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) {
  %1468 = cast(%var_1500, dtype="float32") /* ty=Tensor[(14, 16, 12), float32] */;
  %1469 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 5), float64] */;
  %1470 = reshape(%1469, newshape=[55]) /* ty=Tensor[(55), float64] */;
  %1471 = @func_1440(%1470) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1472 = acos(%1468) /* ty=Tensor[(14, 16, 12), float32] */;
  %1473 = %1471.1;
  (%1472, %1473, meta[relay.Constant][57] /* ty=Tensor[(11, 5), float64] */)
}

def @func_17002() -> (Tensor[(7, 3, 10), float32],) {
  %1476 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1474 = @func_14552() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %1475 = %1474.0;
    (%1475,)
  };
  %1476() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_20310() -> (Tensor[(7, 3, 10), float32],) {
  @func_20308() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_14887() -> (Tensor[(600), float32], Tensor[(7, 3, 10), float32], Tensor[(640), float64], Tensor[(7, 3, 10), float64], Tensor[(600, ?), int32]) {
  @func_14885() /* ty=(Tensor[(600), float32], Tensor[(7, 3, 10), float32], Tensor[(640), float64], Tensor[(7, 3, 10), float64], Tensor[(600, ?), int32]) */
}

def @func_4581() -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) {
  @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */
}

def @func_20927(%var_20926: Tensor[(14, 2, 5), float32]) -> Tensor[(14, 2, 5), float32] {
  %1478 = fn (%var_20910: Tensor[(14, 2, 5), float32]) -> Tensor[(14, 2, 5), float32] {
    %1477 = cast(%var_20910, dtype="float32") /* ty=Tensor[(14, 2, 5), float32] */;
    acosh(%1477) /* ty=Tensor[(14, 2, 5), float32] */
  };
  %1478(%var_20926) /* ty=Tensor[(14, 2, 5), float32] */
}

def @func_9865() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1479 = @func_3060() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1480 = @func_9008() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1481 = %1479.0;
  %1482 = %1480.0;
  (%1481, %1482)
}

def @func_16721() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1485 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
    %1483 = @func_5284() /* ty=Tensor[(7, 3, 10), float32] */;
    %1484 = @func_8374() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1483, %1484)
  };
  %1485() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_11121() -> Tensor[(6, 16, 15), bool] {
  %1487 = fn () -> Tensor[(6, 16, 15), bool] {
    %1486 = @func_9771() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(6, 16, 15), bool]) */;
    %1486.1
  };
  %1487() /* ty=Tensor[(6, 16, 15), bool] */
}

def @func_20296() -> (Tensor[(9, 1, 10), float64], Tensor[(7, 3, 10), float32]) {
  @func_20294() /* ty=(Tensor[(9, 1, 10), float64], Tensor[(7, 3, 10), float32]) */
}

def @func_2917() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) {
  @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */
}

def @func_11999() -> Tensor[(7, 3, 10), float32] {
  @func_8881() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_13058() -> Tensor[(7, 3, 10), float32] {
  %1488 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %1488.0
}

def @func_18702() -> (Tensor[(5, 11, ?), float64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32]) {
  %1501 = fn () -> (Tensor[(5, 11, ?), float64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32]) {
    %1489 = @func_9491() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %1490 = %1489.0;
    %1491 = cast(%1490, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1492 = sin(%1491) /* ty=Tensor[(5, 11, 1), float64] */;
    %1493 = cast(%1490, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1494 = shape_of(%1492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1495 = cast(%1492, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1496 = dyn.reshape(%1493, %1494, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1497 = @func_4920() /* ty=(Tensor[(2688), float32],) */;
    %1498 = mod(%1495, %1496) /* ty=Tensor[(5, 11, ?), float64] */;
    %1499 = %1497.0;
    %1500 = @func_14363() /* ty=Tensor[(7, 3, 10), float32] */;
    (%1498, %1499, %1500)
  };
  %1501() /* ty=(Tensor[(5, 11, ?), float64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_17953(%var_17951: Tensor[(672), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(48), float32], Tensor[(10, 264), uint16], Tensor[(7, 3, 10), float32], Tensor[(672), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 264), bool], Tensor[(10, 264), int64], Tensor[(5, 11, 264), float32], Tensor[(5, 11, 1), float64], Tensor[(1296), bool], Tensor[(2, 648), bool]) {
  @func_17950(%var_17951) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(48), float32], Tensor[(10, 264), uint16], Tensor[(7, 3, 10), float32], Tensor[(672), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 264), bool], Tensor[(10, 264), int64], Tensor[(5, 11, 264), float32], Tensor[(5, 11, 1), float64], Tensor[(1296), bool], Tensor[(2, 648), bool]) */
}

def @func_8357() -> Tensor[(9, 1, 10), float32] {
  %1502 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 1, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 1, 10), float32] */;
  log10(%1502) /* ty=Tensor[(9, 1, 10), float32] */
}

def @func_11339() -> (Tensor[(2688), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64]) {
  %1508 = fn () -> (Tensor[(2688), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64]) {
    %1503 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %1504 = cast(meta[relay.Constant][59] /* ty=Tensor[(640), float64] */, dtype="float64") /* ty=Tensor[(640), float64] */;
    %1505 = reshape(%1504, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), float64] */;
    %1506 = %1503.1;
    %1507 = @func_4609(%1505) /* ty=Tensor[(8, 16, 5), float64] */;
    (%1506, %1507, meta[relay.Constant][59] /* ty=Tensor[(640), float64] */)
  };
  %1508() /* ty=(Tensor[(2688), float32], Tensor[(8, 16, 5), float64], Tensor[(640), float64]) */
}

def @func_5923() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  %1509 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
  %1510 = %1509.0;
  %1511 = cast(%1510, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  %1512 = sinh(%1511) /* ty=Tensor[(5, 11, 1), float64] */;
  %1513 = @func_2024() /* ty=Tensor[(7, 3, 10), float32] */;
  %1514 = @func_4397() /* ty=Tensor[(55), float64] */;
  (%1512, %1513, %1514)
}

def @func_13359() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  @func_13357() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) */
}

def @func_19977(%var_19975: float32, %var_19976: Tensor[(13, 3, 14), float32]) -> (Tensor[(13, 3, 14), float32], Tensor[(13, 3, 14), float32]) {
  %1520 = fn (%var_19962: float32, %var_19963: Tensor[(13, 3, 14), float32]) -> (Tensor[(13, 3, 14), float32], Tensor[(13, 3, 14), float32]) {
    %1515 = cast(%var_19962, dtype="float32") /* ty=float32 */;
    %1516 = cast(%var_19963, dtype="float32") /* ty=Tensor[(13, 3, 14), float32] */;
    %1517 = cast(%var_19963, dtype="float32") /* ty=Tensor[(13, 3, 14), float32] */;
    %1518 = maximum(%1515, %1516) /* ty=Tensor[(13, 3, 14), float32] */;
    %1519 = sqrt(%1517) /* ty=Tensor[(13, 3, 14), float32] */;
    (%1518, %1519)
  };
  %1520(%var_19975, %var_19976) /* ty=(Tensor[(13, 3, 14), float32], Tensor[(13, 3, 14), float32]) */
}

def @func_16456() -> Tensor[(7, 3, 10), float32] {
  @func_16454() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_11240() -> Tensor[(7, 3, 10), float32] {
  %1522 = fn () -> Tensor[(7, 3, 10), float32] {
    %1521 = @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1521.0
  };
  %1522() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_5286() -> Tensor[(7, 3, 10), float32] {
  @func_5284() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_1440(%var_1397: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) {
  %1523 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1524 = cast(%var_1397, dtype="float64") /* ty=Tensor[(55), float64] */;
  %1525 = reshape(%1524, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
  %1526 = %1523.0;
  %1527 = @func_413(%1525) /* ty=Tensor[(5, 11, 1), float64] */;
  (%1526, %1527, %var_1397)
}

def @func_14572() -> (Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64]) {
  @func_14570() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(1, 264), int64]) */
}

def @func_1888() -> (Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) {
  %1528 = @func_1368() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
  %1529 = @func_1673() /* ty=Tensor[(7, 3, 10), float32] */;
  %1530 = cast(%1529, dtype="float64") /* ty=Tensor[(7, 3, 10), float64] */;
  %1531 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1532 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 2688), float32] */, dtype="float32") /* ty=Tensor[(1, 2688), float32] */;
  %1533 = reshape(%1532, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
  %1534 = @func_1525(%1533) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
  %1535 = %1528.2;
  %1536 = acos(%1530) /* ty=Tensor[(7, 3, 10), float64] */;
  %1537 = %1531.0;
  %1538 = %1534.0;
  (%1535, %1536, %1537, %1538, meta[relay.Constant][60] /* ty=Tensor[(1, 2688), float32] */)
}

def @func_13357() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  %1539 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
  %1540 = @func_6615() /* ty=Tensor[(7, 3, 10), float32] */;
  %1541 = %1539.0;
  (%1540, %1541)
}

def @func_3668(%var_3651: Tensor[(4, 10, 15), float32]) -> (Tensor[(4, 10, 15), float32], Tensor[(7, 3, 10), float32]) {
  %1542 = cast(%var_3651, dtype="float32") /* ty=Tensor[(4, 10, 15), float32] */;
  %1543 = log10(%1542) /* ty=Tensor[(4, 10, 15), float32] */;
  %1544 = @func_1953() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1543, %1544)
}

def @func_7764(%var_7762: Tensor[(6, 16, 15), int64], %var_7763: Tensor[(6, 16, 15), int64]) -> (Tensor[(6, 16, 15), int64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) {
  @func_7760(%var_7762, %var_7763) /* ty=(Tensor[(6, 16, 15), int64], Tensor[(2688), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64]) */
}

def @func_7481() -> (Tensor[(7, 3, 10), float32],) {
  %1547 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1545 = @func_4579() /* ty=(Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %1546 = %1545.1;
    (%1546,)
  };
  %1547() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_10199() -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), float32]) {
  %1552 = fn () -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), float32]) {
    %1548 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
    %1549 = @func_5726() /* ty=(Tensor[(5, 11, ?), float32],) */;
    %1550 = %1548.0;
    %1551 = %1549.0;
    (%1550, %1551)
  };
  %1552() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), float32]) */
}

def @func_9458() -> (Tensor[(7, 3, 10), float32],) {
  %1553 = @func_4176() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float32]) */;
  %1554 = %1553.1;
  (%1554,)
}

def @func_4611(%var_4610: Tensor[(8, 16, 5), float64]) -> Tensor[(8, 16, 5), float64] {
  %1556 = fn (%var_4602: Tensor[(8, 16, 5), float64]) -> Tensor[(8, 16, 5), float64] {
    %1555 = cast(%var_4602, dtype="float64") /* ty=Tensor[(8, 16, 5), float64] */;
    sigmoid(%1555) /* ty=Tensor[(8, 16, 5), float64] */
  };
  %1556(%var_4610) /* ty=Tensor[(8, 16, 5), float64] */
}

def @func_15425() -> Tensor[(1, 264), int64] {
  %1557 = @func_13612() /* ty=(Tensor[(1, 264), int64],) */;
  %1557.0
}

def @func_5095() -> Tensor[(7, 3, 10), float32] {
  %1558 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1558.1
}

def @func_18348() -> (Tensor[(1344, 2), float32], Tensor[(7, 3, 10), float32]) {
  @func_18346() /* ty=(Tensor[(1344, 2), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_12523() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1559 = @func_7548() /* ty=Tensor[(7, 3, 10), float32] */;
  %1560 = @func_5385() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1559, %1560)
}

def @func_10928() -> (Tensor[(7, 3, 10), float32],) {
  @func_10926() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_22065() -> (Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(55), float32], Tensor[(6, 16, 15), bool]) {
  %1568 = fn () -> (Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(55), float32], Tensor[(6, 16, 15), bool]) {
    %1561 = @func_9491() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %1562 = @func_18758() /* ty=(Tensor[(55), float64],) */;
    %1563 = @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */;
    %1564 = %1561.0;
    %1565 = %1562.0;
    %1566 = @func_15990() /* ty=Tensor[(55), float32] */;
    %1567 = %1563.0;
    (%1564, %1565, %1566, %1567)
  };
  %1568() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(55), float64], Tensor[(55), float32], Tensor[(6, 16, 15), bool]) */
}

def @func_18406() -> Tensor[(2688), float32] {
  %1571 = fn () -> Tensor[(2688), float32] {
    %1569 = @func_8718() /* ty=Tensor[(2688), float32] */;
    %1570 = cast(%1569, dtype="float32") /* ty=Tensor[(2688), float32] */;
    asinh(%1570) /* ty=Tensor[(2688), float32] */
  };
  %1571() /* ty=Tensor[(2688), float32] */
}

def @func_20308() -> (Tensor[(7, 3, 10), float32],) {
  %1572 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1573 = %1572.1;
  (%1573,)
}

def @func_9825() -> Tensor[(5, 11, 1), float64] {
  @func_9823() /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_4811(%var_4810: Tensor[(2688), float32]) -> (Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) {
  %1630 = fn (%var_4780: Tensor[(2688), float32]) -> (Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) {
    %1574 = @func_4079() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %1575 = %1574.0;
    %1576 = cast(%1575, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1577 = cos(%1576) /* ty=Tensor[(5, 11, 1), float64] */;
    %1578 = cast(%1575, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1579 = shape_of(%1577, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1580 = cast(%1577, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1581 = dyn.reshape(%1578, %1579, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1582 = cast(%1575, dtype="int64") /* ty=Tensor[(5, 11, 1), int64] */;
    %1583 = shape_of(%1577, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1584 = cast(%1577, dtype="int64") /* ty=Tensor[(5, 11, 1), int64] */;
    %1585 = dyn.reshape(%1582, %1583, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1586 = maximum(%1584, %1585) /* ty=Tensor[(5, 11, ?), int64] */;
    %1587 = cast(%1577, dtype="bool") /* ty=Tensor[(5, 11, 1), bool] */;
    %1588 = shape_of(%1586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1589 = cast(%1586, dtype="bool") /* ty=Tensor[(5, 11, ?), bool] */;
    %1590 = dyn.reshape(%1587, %1588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1591 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1592 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1593 = @func_3037() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32]) */;
    %1594 = cast(%1586, dtype="float64") /* ty=Tensor[(5, 11, ?), float64] */;
    %1595 = reshape(%1594, newshape=[5, 11, 1]) /* ty=Tensor[(5, 11, 1), float64] */;
    %1596 = cast(%1586, dtype="int64") /* ty=Tensor[(5, 11, ?), int64] */;
    %1597 = shape_of(%1577, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1598 = cast(%1577, dtype="int64") /* ty=Tensor[(5, 11, 1), int64] */;
    %1599 = dyn.reshape(%1596, %1597, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1600 = cast(%var_4780, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %1601 = reshape(%1600, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), float32] */;
    %1602 = @func_1525(%1601) /* ty=(Tensor[(14, 16, 12), float32], Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64]) */;
    %1603 = cast(%1575, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1604 = reshape(%1603, newshape=[55]) /* ty=Tensor[(55), float64] */;
    %1605 = @func_2603(%1604) /* ty=(Tensor[(12, 4, 13), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(5, 11, 1), float64]) */;
    %1606 = cast(meta[relay.Constant][61] /* ty=Tensor[(264, 1), int64] */, dtype="int64") /* ty=Tensor[(264, 1), int64] */;
    %1607 = reshape(%1606, newshape=[132, 2]) /* ty=Tensor[(132, 2), int64] */;
    %1608 = @func_3393(%1607) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(96), float32], Tensor[(2, 12, 11), int64], Tensor[(132, 2), int64], Tensor[(66, 4), int64], Tensor[(7, 3, 10), float32]) */;
    %1609 = cast(%1575, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1610 = shape_of(%1577, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1611 = cast(%1577, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1612 = dyn.reshape(%1609, %1610, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1613 = floor_mod(%1611, %1612) /* ty=Tensor[(5, 11, ?), float64] */;
    %1614 = cast(%1613, dtype="bool") /* ty=Tensor[(5, 11, ?), bool] */;
    %1615 = cast(%var_4780, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %1616 = @func_3785() /* ty=(Tensor[(5, 11, 1), float64],) */;
    %1617 = floor_divide(%1580, %1581) /* ty=Tensor[(5, 11, ?), float64] */;
    %1618 = @func_4381() /* ty=Tensor[(7, 3, 10), float32] */;
    %1619 = logical_and(%1589, %1590) /* ty=Tensor[(5, 11, ?), bool] */;
    %1620 = %1591.0;
    %1621 = %1592.0;
    %1622 = %1593.0;
    %1623 = @func_413(%1595) /* ty=Tensor[(5, 11, 1), float64] */;
    %1624 = right_shift(%1598, %1599) /* ty=Tensor[(5, 11, ?), int64] */;
    %1625 = %1602.2;
    %1626 = %1605.3;
    %1627 = %1608.3;
    %1628 = greater_equal(%1614, %1615) /* ty=Tensor[(5, 11, 2688), bool] */;
    %1629 = %1616.0;
    (%1617, %1618, %1619, %1620, %1621, %1622, %1623, %1624, %1625, %1626, %1627, meta[relay.Constant][61] /* ty=Tensor[(264, 1), int64] */, %1628, %1629)
  };
  %1630(%var_4810) /* ty=(Tensor[(5, 11, ?), float64], Tensor[(7, 3, 10), float32], Tensor[(5, 11, ?), bool], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(5, 11, ?), int64], Tensor[(11, 5), float64], Tensor[(55), float64], Tensor[(96), float32], Tensor[(264, 1), int64], Tensor[(5, 11, 2688), bool], Tensor[(5, 11, 1), float64]) */
}

def @func_8480(%var_8479: Tensor[(60), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], int64, Tensor[(60), int64]) {
  %1639 = fn (%var_8459: Tensor[(60), int64]) -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], int64, Tensor[(60), int64]) {
    %1631 = @func_8050() /* ty=(Tensor[(7, 3, 10), float32],) */;
    %1632 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1633 = cast(%var_8459, dtype="int64") /* ty=Tensor[(60), int64] */;
    %1634 = reshape(%1632, newshape=[]) /* ty=int64 */;
    %1635 = reshape(%1633, newshape=[3, 5, 4]) /* ty=Tensor[(3, 5, 4), int64] */;
    %1636 = @func_5792(%1634, %1635) /* ty=(Tensor[(3, 5, 4), bool], Tensor[(2, 12, 11), int64], Tensor[(1, 264), int64], Tensor[(5, 11, 1), float64], Tensor[(55), float64]) */;
    %1637 = %1631.0;
    %1638 = %1636.1;
    (%1637, %1638, -5 /* ty=int64 */, %var_8459)
  };
  %1639(%var_8479) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], int64, Tensor[(60), int64]) */
}

def @func_4381() -> Tensor[(7, 3, 10), float32] {
  @func_1953() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_413(%var_408: Tensor[(5, 11, 1), float64]) -> Tensor[(5, 11, 1), float64] {
  %1640 = cast(%var_408, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
  log(%1640) /* ty=Tensor[(5, 11, 1), float64] */
}

def @func_13714() -> (Tensor[(7, 3, 10), float32],) {
  %1643 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1641 = @func_9865() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1642 = %1641.0;
    (%1642,)
  };
  %1643() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_8359() -> Tensor[(9, 1, 10), float32] {
  @func_8357() /* ty=Tensor[(9, 1, 10), float32] */
}

def @func_8388() -> Tensor[(2688), float32] {
  @func_8386() /* ty=Tensor[(2688), float32] */
}

def @func_20835() -> Tensor[(7, 3, 10), float32] {
  %1645 = fn () -> Tensor[(7, 3, 10), float32] {
    %1644 = @func_6724() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(2688), float32]) */;
    %1644.0
  };
  %1645() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_5166() -> (Tensor[(7, 3, 10), float32],) {
  @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_21503() -> Tensor[(5, 11, 2688), float64] {
  %1647 = fn () -> Tensor[(5, 11, 2688), float64] {
    %1646 = @func_19297() /* ty=(Tensor[(5, 11, 2688), float64],) */;
    %1646.0
  };
  %1647() /* ty=Tensor[(5, 11, 2688), float64] */
}

def @func_10119() -> Tensor[(55), float64] {
  %1648 = @func_2915() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(672), float64], Tensor[(55), float64]) */;
  %1648.3
}

def @func_8036() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_8034() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_1673() -> Tensor[(7, 3, 10), float32] {
  %1649 = @func_1466() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1649.0
}

def @func_17645() -> (Tensor[(5, 11, 1), float64], Tensor[(8, 7, 2), float32]) {
  @func_17643() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(8, 7, 2), float32]) */
}

def @func_16932() -> (Tensor[(7, 3, 10), float32],) {
  @func_16930() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_17568(%var_17551: Tensor[(12, 4), float32]) -> (Tensor[(2688), float32], Tensor[(48), float32], Tensor[(12, 4), float32]) {
  %1650 = @func_13691() /* ty=(Tensor[(2688), float32], Tensor[(55), float64]) */;
  %1651 = cast(%var_17551, dtype="float32") /* ty=Tensor[(12, 4), float32] */;
  %1652 = reshape(%1651, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1653 = @func_10671(%1652) /* ty=(Tensor[(6, 8, 16), float32], Tensor[(48), float32], Tensor[(1, 264), int64], float32, Tensor[(48), float32]) */;
  %1654 = %1650.0;
  %1655 = %1653.1;
  (%1654, %1655, %var_17551)
}

def @func_10992() -> (Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1656 = @func_2002() /* ty=(Tensor[(7, 3, 10), float64],) */;
  %1657 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1658 = %1656.0;
  %1659 = %1657.0;
  %1660 = @func_4495() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1658, %1659, %1660)
}

def @func_17062() -> Tensor[(7, 3, 10), float32] {
  %1661 = @func_5164() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1661.0
}

def @func_4495() -> Tensor[(7, 3, 10), float32] {
  @func_2024() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_12558() -> (Tensor[(48), float32], float32, Tensor[(1, 264), int64]) {
  %1668 = fn () -> (Tensor[(48), float32], float32, Tensor[(1, 264), int64]) {
    %1662 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
    %1663 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 264), int64] */, dtype="int64") /* ty=Tensor[(1, 264), int64] */;
    %1664 = reshape(%1663, newshape=[6, 44]) /* ty=Tensor[(6, 44), int64] */;
    %1665 = @func_7277(%1664) /* ty=(float32, Tensor[(7, 3, 10), float32], Tensor[(6, 44), int64], Tensor[(7, 3, 10), float32]) */;
    %1666 = %1662.6;
    %1667 = %1665.0;
    (%1666, %1667, meta[relay.Constant][62] /* ty=Tensor[(1, 264), int64] */)
  };
  %1668() /* ty=(Tensor[(48), float32], float32, Tensor[(1, 264), int64]) */
}

def @func_19165() -> Tensor[(55), float64] {
  @func_19163() /* ty=Tensor[(55), float64] */
}

def @func_3463() -> (Tensor[(1, 2688), float32],) {
  %1671 = fn () -> (Tensor[(1, 2688), float32],) {
    %1669 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
    %1670 = %1669.4;
    (%1670,)
  };
  %1671() /* ty=(Tensor[(1, 2688), float32],) */
}

def @func_13784(%var_13783: Tensor[(1344, 2), float32]) -> (Tensor[(1344, 2), bool],) {
  %1683 = fn (%var_13777: Tensor[(1344, 2), float32]) -> (Tensor[(1344, 2), bool],) {
    %1672 = @func_5190() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(11, 5), float64], Tensor[(1344, 2), float32]) */;
    %1673 = %1672.2;
    %1674 = cast(%1673, dtype="float64") /* ty=Tensor[(1344, 2), float64] */;
    %1675 = log(%1674) /* ty=Tensor[(1344, 2), float64] */;
    %1676 = cast(%1675, dtype="float32") /* ty=Tensor[(1344, 2), float32] */;
    %1677 = log2(%1676) /* ty=Tensor[(1344, 2), float32] */;
    %1678 = cast(%var_13777, dtype="bool") /* ty=Tensor[(1344, 2), bool] */;
    %1679 = shape_of(%1677, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1680 = cast(%1677, dtype="bool") /* ty=Tensor[(1344, 2), bool] */;
    %1681 = dyn.reshape(%1678, %1679, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1682 = logical_and(%1680, %1681) /* ty=Tensor[(1344, 2), bool] */;
    (%1682,)
  };
  %1683(%var_13783) /* ty=(Tensor[(1344, 2), bool],) */
}

def @func_14168(%var_14166: Tensor[(2, 264), int64], %var_14167: Tensor[(2688), float32]) -> (Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(2, 264), bool], int64, Tensor[(60), int64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32]) {
  @func_14164(%var_14166, %var_14167) /* ty=(Tensor[(7, 3, 10), float64], Tensor[(55), float64], Tensor[(2, 264), bool], int64, Tensor[(60), int64], Tensor[(5, 11, 1), float64], Tensor[(2688), float32]) */
}

def @func_14696() -> (Tensor[(7, 3, 10), float32],) {
  @func_14694() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_14440(%var_14438: Tensor[(1, 672), float64], %var_14439: Tensor[(55), float64]) -> (Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(1, 672), float64], Tensor[(55), float64], Tensor[(7, 3, 10), float64]) {
  @func_14436(%var_14438, %var_14439) /* ty=(Tensor[(7, 3, 10), float32], Tensor[(5, 11, 1), float64], Tensor[(1, 672), float64], Tensor[(55), float64], Tensor[(7, 3, 10), float64]) */
}

def @func_14995() -> (Tensor[(7, 3, 10), float32], Tensor[(11, 13, 3), int8], Tensor[(429), int8]) {
  @func_14993() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(11, 13, 3), int8], Tensor[(429), int8]) */
}

def @func_16754() -> Tensor[(7, 3, 10), float32] {
  @func_11901() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_4191(%var_4183: Tensor[(7, 5, 5), uint32], %var_4184: Tensor[(7, 5, 5), uint32]) -> Tensor[(7, 5, 5), bool] {
  %1684 = cast(%var_4184, dtype="bool") /* ty=Tensor[(7, 5, 5), bool] */;
  %1685 = shape_of(%var_4183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1686 = cast(%var_4183, dtype="bool") /* ty=Tensor[(7, 5, 5), bool] */;
  %1687 = dyn.reshape(%1684, %1685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1686, %1687) /* ty=Tensor[(7, 5, 5), bool] */
}

def @func_19298() -> (Tensor[(5, 11, 2688), float64],) {
  %1694 = fn () -> (Tensor[(5, 11, 2688), float64],) {
    %1688 = @func_8386() /* ty=Tensor[(2688), float32] */;
    %1689 = @func_1888() /* ty=(Tensor[(5, 11, 1), float64], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32], Tensor[(14, 16, 12), float32], Tensor[(1, 2688), float32]) */;
    %1690 = %1689.0;
    %1691 = cast(%1688, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %1692 = cast(%1690, dtype="float64") /* ty=Tensor[(5, 11, 1), float64] */;
    %1693 = mod(%1691, %1692) /* ty=Tensor[(5, 11, 2688), float64] */;
    (%1693,)
  };
  %1694() /* ty=(Tensor[(5, 11, 2688), float64],) */
}

def @func_13692() -> (Tensor[(2688), float32], Tensor[(55), float64]) {
  %1697 = fn () -> (Tensor[(2688), float32], Tensor[(55), float64]) {
    %1695 = @func_8718() /* ty=Tensor[(2688), float32] */;
    %1696 = @func_4397() /* ty=Tensor[(55), float64] */;
    (%1695, %1696)
  };
  %1697() /* ty=(Tensor[(2688), float32], Tensor[(55), float64]) */
}

def @func_21177() -> (Tensor[(7, 3, 10), float32],) {
  @func_21175() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_2558() -> (Tensor[(7, 3, 10), float32], Tensor[(2, 12, 11), int64], Tensor[(264), int64]) {
  %1698 = @func_1486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1699 = cast(meta[relay.Constant][63] /* ty=Tensor[(264), int64] */, dtype="int64") /* ty=Tensor[(264), int64] */;
  %1700 = reshape(%1699, newshape=[2, 12, 11]) /* ty=Tensor[(2, 12, 11), int64] */;
  %1701 = @func_1558(%1700) /* ty=(Tensor[(2, 12, 11), int64],) */;
  %1702 = %1698.1;
  %1703 = %1701.0;
  (%1702, %1703, meta[relay.Constant][63] /* ty=Tensor[(264), int64] */)
}

def @func_6615() -> Tensor[(7, 3, 10), float32] {
  @func_5284() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_20813(%var_20715: Tensor[(48), float32]) -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(12, 4), float32], Tensor[(48), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  %1704 = @func_11455() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(264), int64], Tensor[(7, 3, 10), float32]) */;
  %1705 = @func_9008() /* ty=(Tensor[(7, 3, 10), float32],) */;
  %1706 = cast(%var_20715, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1707 = reshape(%1706, newshape=[12, 4]) /* ty=Tensor[(12, 4), float32] */;
  %1708 = @func_17568(%1707) /* ty=(Tensor[(2688), float32], Tensor[(48), float32], Tensor[(12, 4), float32]) */;
  %1709 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1710 = @func_20669() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(55), float64], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1711 = %1704.0;
  %1712 = %1705.0;
  %1713 = %1708.2;
  %1714 = %1709.0;
  %1715 = @func_8881() /* ty=Tensor[(7, 3, 10), float32] */;
  %1716 = %1710.0;
  (%1711, %1712, %1713, %var_20715, %1714, %1715, %1716)
}

def @func_16262(%var_16239: Tensor[(1296), bool]) -> (Tensor[(7, 3, 10), float32], Tensor[(9, 12, 12), bool], Tensor[(1296), bool], Tensor[(1344, 2), float32]) {
  %1717 = @func_4535() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
  %1718 = cast(%var_16239, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %1719 = cast(%var_16239, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %1720 = reshape(%1718, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), bool] */;
  %1721 = reshape(%1719, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), bool] */;
  %1722 = @func_9089(%1720, %1721) /* ty=(Tensor[(9, 12, 12), bool],) */;
  %1723 = %1717.0;
  %1724 = %1722.0;
  %1725 = @func_14921() /* ty=Tensor[(1344, 2), float32] */;
  (%1723, %1724, %var_16239, %1725)
}

def @func_10926() -> (Tensor[(7, 3, 10), float32],) {
  %1726 = @func_7548() /* ty=Tensor[(7, 3, 10), float32] */;
  (%1726,)
}

def @func_17482() -> (Tensor[(55), float32], Tensor[(55), float64]) {
  %1730 = fn () -> (Tensor[(55), float32], Tensor[(55), float64]) {
    %1727 = @func_6076() /* ty=(Tensor[(55), float64],) */;
    %1728 = @func_15990() /* ty=Tensor[(55), float32] */;
    %1729 = %1727.0;
    (%1728, %1729)
  };
  %1730() /* ty=(Tensor[(55), float32], Tensor[(55), float64]) */
}

def @func_8432() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) {
  @func_8430() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */
}

def @func_19878() -> (Tensor[(7, 3, 10), float32],) {
  @func_19876() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_22338() -> Tensor[(6, 16, 15), bool] {
  %1732 = fn () -> Tensor[(6, 16, 15), bool] {
    %1731 = @func_15121() /* ty=(Tensor[(6, 16, 15), bool], Tensor[(7, 3, 10), float32]) */;
    %1731.0
  };
  %1732() /* ty=Tensor[(6, 16, 15), bool] */
}

def @func_17703() -> Tensor[(7, 3, 10), float32] {
  %1733 = @func_3718() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(55, 1), float64], float32, Tensor[(48), float32]) */;
  %1733.2
}

def @func_13752() -> Tensor[(7, 3, 10), float32] {
  %1735 = fn () -> Tensor[(7, 3, 10), float32] {
    %1734 = @func_2486() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32]) */;
    %1734.1
  };
  %1735() /* ty=Tensor[(7, 3, 10), float32] */
}

def @func_15185() -> (Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) {
  @func_15183() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64]) */
}

def @func_11257() -> (Tensor[(7, 3, 10), float32],) {
  %1738 = fn () -> (Tensor[(7, 3, 10), float32],) {
    %1736 = @func_3441() /* ty=(Tensor[(7, 3, 10), float32], Tensor[(7, 3, 10), float64], Tensor[(7, 3, 10), float32]) */;
    %1737 = %1736.2;
    (%1737,)
  };
  %1738() /* ty=(Tensor[(7, 3, 10), float32],) */
}

def @func_21017() -> (Tensor[(5, 11, 1), float64],) {
  @func_21015() /* ty=(Tensor[(5, 11, 1), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen872/build/output.py", line 6817, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:33:43] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


==========mod==========
#[version = "0.0.5"]
def @func_4469() -> Tensor[(7, 11, 6), float64] {
  @func_4081() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_7354(%var_7335: Tensor[(7, 2, 3), float32]) -> (Tensor[(7, 2, 3), float32],) {
  %0 = cast(%var_7335, dtype="float32") /* ty=Tensor[(7, 2, 3), float32] */;
  %1 = cosh(%0) /* ty=Tensor[(7, 2, 3), float32] */;
  (%1,)
}

def @func_9133() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %2 = @func_8524() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %3 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %4 = @func_8813() /* ty=Tensor[(7, 11, 6), float64] */;
  %5 = %2.0;
  %6 = %3.0;
  %7 = @func_8889() /* ty=Tensor[(7, 11, 6), float64] */;
  (%4, %5, %6, %7)
}

def @func_9011(%var_8909: Tensor[(11, 6, 14), float64], %var_8984: Tensor[(1260), float64], %var_8999: Tensor[(308), int16]) -> (Tensor[(11, 9, 3), bool], Tensor[(11, 6, 14), int8], Tensor[(7, 11, 6), float64], Tensor[(462), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 2, 3), float32], Tensor[(42), float32], Tensor[(11, 6, 14), bool], Tensor[(7, 15, 12), float64], Tensor[(1260), float64], Tensor[(3, 28), float64], Tensor[(7, 3, 8), float32], Tensor[(1, 22), int16], Tensor[(308), int16]) {
  %8 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %9 = @func_7922() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(924), float64]) */;
  %10 = %9.1;
  %11 = cast(%var_8909, dtype="int8") /* ty=Tensor[(11, 6, 14), int8] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%10, dtype="int8") /* ty=Tensor[(11, 6, 14), int8] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %16 = reshape(%15, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %17 = @func_3901(%16) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %18 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %19 = %8.0;
  %20 = cast(%19, dtype="int16") /* ty=Tensor[(11, 9, 3), int16] */;
  %21 = reshape(%20, newshape=[297]) /* ty=Tensor[(297), int16] */;
  %22 = @func_6171(%21) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %24 = reshape(%23, newshape=[7, 2, 3]) /* ty=Tensor[(7, 2, 3), float32] */;
  %25 = @func_7354(%24) /* ty=(Tensor[(7, 2, 3), float32],) */;
  %26 = cast(%var_8909, dtype="bool") /* ty=Tensor[(11, 6, 14), bool] */;
  %27 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%10, dtype="bool") /* ty=Tensor[(11, 6, 14), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %30 = cast(%var_8984, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 28), float64] */, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
  %32 = reshape(%30, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %33 = reshape(%31, newshape=[1, 84]) /* ty=Tensor[(1, 84), float64] */;
  %34 = @func_2131(%32, %33) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 22), int16] */, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
  %36 = cast(%var_8999, dtype="int16") /* ty=Tensor[(308), int16] */;
  %37 = reshape(%35, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %38 = reshape(%36, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %39 = @func_1899(%37, %38) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %40 = subtract(%13, %14) /* ty=Tensor[(11, 6, 14), int8] */;
  %41 = %17.2;
  %42 = %18.0;
  %43 = %22.3;
  %44 = @func_6737() /* ty=Tensor[(7, 11, 6), float32] */;
  %45 = %25.0;
  %46 = equal(%28, %29) /* ty=Tensor[(11, 6, 14), bool] */;
  %47 = %34.0;
  %48 = %39.0;
  (%19, %40, %41, meta[relay.Constant][0] /* ty=Tensor[(462), float32] */, %42, %43, %44, %45, meta[relay.Constant][1] /* ty=Tensor[(42), float32] */, %46, %47, %var_8984, meta[relay.Constant][2] /* ty=Tensor[(3, 28), float64] */, %48, meta[relay.Constant][3] /* ty=Tensor[(1, 22), int16] */, %var_8999)
}

def @func_6716(%var_6701: Tensor[(33), uint8]) -> (Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), float32], Tensor[(33), uint8], Tensor[(22, 1), int16]) {
  %49 = @func_4826() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %50 = cast(%var_6701, dtype="uint8") /* ty=Tensor[(33), uint8] */;
  %51 = cast(meta[relay.Constant][4] /* ty=Tensor[(22, 1), int16] */, dtype="int16") /* ty=Tensor[(22, 1), int16] */;
  %52 = reshape(%50, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), uint8] */;
  %53 = reshape(%51, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %54 = @func_828(%52, %53) /* ty=(Tensor[(3, 11, 1), uint8], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(77, 4), int16], Tensor[(14, 2, 11), float32]) */;
  %55 = %49.0;
  %56 = %54.4;
  (%55, %56, %var_6701, meta[relay.Constant][4] /* ty=Tensor[(22, 1), int16] */)
}

def @func_4286() -> (Tensor[(7, 11, 6), float64],) {
  %57 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
  (%57,)
}

def @func_12127() -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) {
  %58 = @func_4439() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %59 = %58.0;
  %60 = cast(%59, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %61 = reshape(%60, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %62 = @func_9676(%61) /* ty=(Tensor[(7, 11, 6), int32],) */;
  %63 = @func_7922() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(924), float64]) */;
  %64 = @func_8539() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %65 = @func_10096() /* ty=Tensor[(7, 11, 6), float32] */;
  %66 = %62.0;
  %67 = %63.1;
  %68 = %64.0;
  (%65, %59, %66, %67, %68)
}

def @func_2741(%var_2734: Tensor[(9, 9, 1), float32]) -> Tensor[(9, 9, 11), float32] {
  %69 = cast(%var_2734, dtype="float32") /* ty=Tensor[(9, 9, 1), float32] */;
  %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 9, 11), float32] */;
  mod(%69, %70) /* ty=Tensor[(9, 9, 11), float32] */
}

def @func_9954() -> Tensor[(144), uint32] {
  %71 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %71.2
}

def @func_9477() -> (Tensor[(7, 11, 6), float64],) {
  %72 = @func_8539() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %73 = %72.0;
  (%73,)
}

def @func_7985() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %74 = @func_5899() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %75 = @func_5050() /* ty=Tensor[(7, 11, 6), float64] */;
  %76 = %74.0;
  (%75, %76)
}

def @func_9539() -> Tensor[(7, 11, 6), float64] {
  %77 = @func_8797() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %77.0
}

def @func_8797() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %78 = @func_5050() /* ty=Tensor[(7, 11, 6), float64] */;
  %79 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  (%78, %79)
}

def @func_9530() -> (Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8]) {
  %80 = @func_7890() /* ty=Tensor[(11, 9, 3), bool] */;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(11, 9, 3), float64] */;
  %82 = cast(meta[relay.Constant][6] /* ty=Tensor[(432, 1), int8] */, dtype="int8") /* ty=Tensor[(432, 1), int8] */;
  %83 = reshape(%82, newshape=[432]) /* ty=Tensor[(432), int8] */;
  %84 = @func_9037(%83) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8], Tensor[(432), int8]) */;
  %85 = atan(%81) /* ty=Tensor[(11, 9, 3), float64] */;
  %86 = %84.0;
  (%85, %86, meta[relay.Constant][6] /* ty=Tensor[(432, 1), int8] */)
}

def @func_6594() -> Tensor[(6, 16, 9), float64] {
  %87 = @func_4742() /* ty=(Tensor[(6, 16, 9), float64],) */;
  %87.0
}

def @func_10414(%var_10371: Tensor[(12, 15, 14), float32], %var_10372: Tensor[(12, 15, 14), float32], %var_10403: Tensor[(81), float32], %var_10404: Tensor[(1260), float64]) -> (Tensor[(12, 15, 14), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(768), int16], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
  %88 = cast(%var_10372, dtype="bool") /* ty=Tensor[(12, 15, 14), bool] */;
  %89 = shape_of(%var_10371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%var_10371, dtype="bool") /* ty=Tensor[(12, 15, 14), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %92 = @func_7985() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %93 = %92.1;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %95 = reshape(%94, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %96 = @func_3901(%95) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(768), int16] */, dtype="int16") /* ty=Tensor[(768), int16] */;
  %98 = reshape(%97, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), int16] */;
  %99 = @func_4501(%98) /* ty=(Tensor[(8, 6, 16), int16], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(364), int16]) */;
  %100 = cast(%var_10403, dtype="float32") /* ty=Tensor[(81), float32] */;
  %101 = cast(%var_10404, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %102 = reshape(%100, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %103 = reshape(%101, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %104 = @func_5567(%102, %103) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) */;
  %105 = not_equal(%90, %91) /* ty=Tensor[(12, 15, 14), bool] */;
  %106 = %96.2;
  %107 = %99.2;
  %108 = %104.6;
  (%105, %93, %106, %107, meta[relay.Constant][7] /* ty=Tensor[(768), int16] */, %108, %var_10403, %var_10404)
}

def @func_4325() -> Tensor[(6, 16, 9), float64] {
  %109 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 16, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 16, 9), float64] */;
  rsqrt(%109) /* ty=Tensor[(6, 16, 9), float64] */
}

def @func_7524() -> Tensor[(11, 9, 3), bool] {
  %110 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %110.0
}

def @func_8413() -> (Tensor[(7, 11, 6), float32],) {
  %111 = @func_7032() /* ty=Tensor[(7, 11, 6), float32] */;
  (%111,)
}

def @func_8373() -> (Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64]) {
  %112 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %113 = %112.0;
  %114 = cast(%113, dtype="float64") /* ty=Tensor[(11, 9, 3), float64] */;
  %115 = @func_7081() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %116 = exp(%114) /* ty=Tensor[(11, 9, 3), float64] */;
  %117 = %115.0;
  (%116, %117)
}

def @func_216(%var_196: float32, %var_205: Tensor[(22), int16], %var_206: Tensor[(308), int16]) -> (Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) {
  %118 = cast(%var_196, dtype="float32") /* ty=float32 */;
  %119 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 1, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 1, 13), float32] */;
  %120 = cast(%var_205, dtype="int16") /* ty=Tensor[(22), int16] */;
  %121 = cast(%var_206, dtype="int16") /* ty=Tensor[(308), int16] */;
  %122 = reshape(%120, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %123 = reshape(%121, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %124 = @func_102(%122, %123) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %125 = cast(%var_205, dtype="int16") /* ty=Tensor[(22), int16] */;
  %126 = cast(%var_206, dtype="int16") /* ty=Tensor[(308), int16] */;
  %127 = reshape(%125, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %128 = reshape(%126, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %129 = @func_102(%127, %128) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %130 = add(%118, %119) /* ty=Tensor[(16, 1, 13), float32] */;
  %131 = %124.1;
  %132 = %129.1;
  (%130, %131, %var_205, %var_206, %132)
}

def @func_8430() -> Tensor[(7, 11, 6), float64] {
  %133 = @func_6956() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %133.0
}

def @func_11319(%var_11312: Tensor[(10, 10, 6), float32]) -> Tensor[(10, 10, 6), float32] {
  %134 = cast(%var_11312, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  acos(%134) /* ty=Tensor[(10, 10, 6), float32] */
}

def @func_6171(%var_6146: Tensor[(297), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) {
  %135 = cast(%var_6146, dtype="int16") /* ty=Tensor[(297), int16] */;
  %136 = reshape(%135, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), int16] */;
  %137 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
  %138 = cast(%137, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %139 = sin(%138) /* ty=Tensor[(7, 11, 6), float32] */;
  %140 = cast(%139, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %141 = @func_4742() /* ty=(Tensor[(6, 16, 9), float64],) */;
  %142 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %143 = @func_969(%136) /* ty=Tensor[(11, 9, 3), bool] */;
  %144 = sinh(%140) /* ty=Tensor[(7, 11, 6), float32] */;
  %145 = %141.0;
  (%142, %143, %var_6146, %144, %145)
}

def @func_4043() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) {
  %146 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(99, 3), int16] */, dtype="int16") /* ty=Tensor[(99, 3), int16] */;
  %148 = reshape(%147, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), int16] */;
  %149 = %146.0;
  %150 = @func_969(%148) /* ty=Tensor[(11, 9, 3), bool] */;
  (%149, %150, meta[relay.Constant][10] /* ty=Tensor[(99, 3), int16] */)
}

def @func_3554(%var_3548: Tensor[(22), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(22), int16], Tensor[(77, 4), int16]) {
  %151 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %152 = cast(-9.53876f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %153 = cast(%var_3548, dtype="int16") /* ty=Tensor[(22), int16] */;
  %154 = cast(meta[relay.Constant][11] /* ty=Tensor[(77, 4), int16] */, dtype="int16") /* ty=Tensor[(77, 4), int16] */;
  %155 = reshape(%152, newshape=[]) /* ty=float32 */;
  %156 = reshape(%153, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %157 = reshape(%154, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %158 = @func_216(%155, %156, %157) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
  %159 = %151.0;
  %160 = %158.3;
  (%159, %160, -9.53876f /* ty=float32 */, %var_3548, meta[relay.Constant][11] /* ty=Tensor[(77, 4), int16] */)
}

def @func_11599() -> Tensor[(6, 16, 9), float64] {
  @func_4611() /* ty=Tensor[(6, 16, 9), float64] */
}

def @func_6558() -> (Tensor[(7, 11, 6), float64],) {
  %161 = @func_4469() /* ty=Tensor[(7, 11, 6), float64] */;
  (%161,)
}

def @func_5370() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) {
  %162 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %163 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %164 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %165 = %162.0;
  %166 = %163.3;
  %167 = %164.0;
  (%165, %166, %167)
}

def @func_8168() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float32]) {
  %168 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  %169 = @func_7812() /* ty=Tensor[(11, 6, 14), float64] */;
  %170 = @func_7024() /* ty=Tensor[(7, 11, 6), float32] */;
  (%168, %169, %170)
}

def @func_5109(%var_5104: Tensor[(22), int16], %var_5105: Tensor[(308), int16]) -> (Tensor[(99, 3), int16], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) {
  %171 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
  %172 = cast(%var_5104, dtype="int16") /* ty=Tensor[(22), int16] */;
  %173 = cast(%var_5105, dtype="int16") /* ty=Tensor[(308), int16] */;
  %174 = reshape(%172, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %175 = reshape(%173, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %176 = @func_102(%174, %175) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %177 = %171.2;
  %178 = %176.1;
  (%177, %178, %var_5104, %var_5105)
}

def @func_6657() -> Tensor[(144), uint32] {
  %179 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %179.2
}

def @func_6279(%var_6265: Tensor[(14, 16, 13), float32], %var_6271: Tensor[(132), float64]) -> (Tensor[(14, 16, 13), float32], Tensor[(12, 1, 11), float64], Tensor[(132), float64]) {
  %180 = cast(%var_6265, dtype="float32") /* ty=Tensor[(14, 16, 13), float32] */;
  %181 = cast(%var_6271, dtype="float64") /* ty=Tensor[(132), float64] */;
  %182 = reshape(%181, newshape=[12, 1, 11]) /* ty=Tensor[(12, 1, 11), float64] */;
  %183 = acos(%180) /* ty=Tensor[(14, 16, 13), float32] */;
  %184 = @func_4767(%182) /* ty=Tensor[(12, 1, 11), float64] */;
  (%183, %184, %var_6271)
}

def @func_11710() -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32]) {
  %185 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %186 = %185.0;
  %187 = @func_6737() /* ty=Tensor[(7, 11, 6), float32] */;
  (%186, %187)
}

def @func_11859(%var_11803: Tensor[(7, 11, 6), float64], %var_11854: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int8], Tensor[(7, 11, 6), float32], Tensor[(14, 2, 11), float64], Tensor[(182, 2), float32], Tensor[(7, 11, 6), int32]) {
  %188 = @func_9229() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %189 = %188.0;
  %190 = cast(%var_11803, dtype="int8") /* ty=Tensor[(7, 11, 6), int8] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="int8") /* ty=Tensor[(7, 11, 6), int8] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %194 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %195 = cast(meta[relay.Constant][12] /* ty=Tensor[(182, 2), int16] */, dtype="int16") /* ty=Tensor[(182, 2), int16] */;
  %196 = reshape(%195, newshape=[91, 4]) /* ty=Tensor[(91, 4), int16] */;
  %197 = @func_3671(%196) /* ty=(Tensor[(14, 2, 11), float64], Tensor[(198), float64], Tensor[(91, 4), int16], Tensor[(7, 11, 6), float32]) */;
  %198 = cast(meta[relay.Constant][12] /* ty=Tensor[(182, 2), int16] */, dtype="float32") /* ty=Tensor[(182, 2), float32] */;
  %199 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %200 = %199.0;
  %201 = cast(%var_11854, dtype="int32") /* ty=Tensor[(7, 11, 6), int32] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="int32") /* ty=Tensor[(7, 11, 6), int32] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %205 = bitwise_xor(%192, %193) /* ty=Tensor[(7, 11, 6), int8] */;
  %206 = %194.0;
  %207 = %197.0;
  %208 = atan(%198) /* ty=Tensor[(182, 2), float32] */;
  %209 = right_shift(%203, %204) /* ty=Tensor[(7, 11, 6), int32] */;
  (%205, %206, %207, %208, %209)
}

def @func_8281(%var_8274: Tensor[(5, 11, 12), float64]) -> Tensor[(5, 11, 12), float64] {
  %210 = cast(%var_8274, dtype="float64") /* ty=Tensor[(5, 11, 12), float64] */;
  log(%210) /* ty=Tensor[(5, 11, 12), float64] */
}

def @func_4711(%var_4700: Tensor[(225), float32], %var_4701: Tensor[(168), float64], %var_4702: Tensor[(2352), float64], %var_4709: Tensor[(18, 70), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), bool], Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(72, 2), float32], Tensor[(15, ?, 15), bool], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(22), int16], Tensor[(18, 70), float64]) {
  %211 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 2), int16] */, dtype="int16") /* ty=Tensor[(11, 2), int16] */;
  %212 = cast(meta[relay.Constant][14] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %213 = reshape(%211, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %214 = reshape(%212, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %215 = @func_102(%213, %214) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %216 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
  %217 = cast(meta[relay.Constant][15] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %218 = reshape(%217, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float64] */;
  %219 = @func_1349(%218) /* ty=(Tensor[(12, 7, 1), float64],) */;
  %220 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 2), int16] */, dtype="int16") /* ty=Tensor[(11, 2), int16] */;
  %221 = reshape(%220, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %222 = @func_3554(%221) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(22), int16], Tensor[(77, 4), int16]) */;
  %223 = cast(meta[relay.Constant][16] /* ty=Tensor[(72, 2), uint32] */, dtype="uint32") /* ty=Tensor[(72, 2), uint32] */;
  %224 = cast(meta[relay.Constant][16] /* ty=Tensor[(72, 2), uint32] */, dtype="uint32") /* ty=Tensor[(72, 2), uint32] */;
  %225 = reshape(%223, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), uint32] */;
  %226 = reshape(%224, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), uint32] */;
  %227 = @func_4349(%225, %226) /* ty=Tensor[(8, 9, 2), bool] */;
  %228 = cast(%227, dtype="int8") /* ty=Tensor[(8, 9, 2), int8] */;
  %229 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(72, 2), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %230 = cast(meta[relay.Constant][16] /* ty=Tensor[(72, 2), uint32] */, dtype="int8") /* ty=Tensor[(72, 2), int8] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %232 = logical_xor(%230, %231) /* ty=Tensor[(72, 2), int8] */;
  %233 = cast(%227, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(2), int32] */;
  %235 = cast(%232, dtype="float32") /* ty=Tensor[(72, 2), float32] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %237 = cast(%var_4700, dtype="float32") /* ty=Tensor[(225), float32] */;
  %238 = cast(%var_4701, dtype="float64") /* ty=Tensor[(168), float64] */;
  %239 = cast(%var_4702, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %240 = reshape(%237, newshape=[15, 1, 15]) /* ty=Tensor[(15, 1, 15), float32] */;
  %241 = reshape(%238, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %242 = reshape(%239, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
  %243 = @func_2791(%240, %241, %242) /* ty=(Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(15, ?, 15), bool], Tensor[(12, 7, 1), float64], Tensor[(84), float64]) */;
  %244 = cast(%var_4709, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
  %245 = cast(meta[relay.Constant][15] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %246 = reshape(%244, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %247 = reshape(%245, newshape=[1, 84]) /* ty=Tensor[(1, 84), float64] */;
  %248 = @func_2131(%246, %247) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
  %249 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %250 = %215.0;
  %251 = %216.0;
  %252 = %219.0;
  %253 = %222.0;
  %254 = divide(%235, %236) /* ty=Tensor[(72, 2), float32] */;
  %255 = %243.3;
  %256 = %248.3;
  (%249, %250, meta[relay.Constant][13] /* ty=Tensor[(11, 2), int16] */, meta[relay.Constant][14] /* ty=Tensor[(308), int16] */, %251, %252, meta[relay.Constant][15] /* ty=Tensor[(84), float64] */, %253, %254, %255, %var_4700, %var_4701, %var_4702, %256, %var_4709)
}

def @func_3824() -> (Tensor[(7, 11, 6), float64],) {
  %257 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %258 = %257.0;
  %259 = cast(%258, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %260 = log(%259) /* ty=Tensor[(7, 11, 6), float32] */;
  %261 = cast(%260, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %262 = acos(%261) /* ty=Tensor[(7, 11, 6), float64] */;
  (%262,)
}

def @func_6737() -> Tensor[(7, 11, 6), float32] {
  %263 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %263.0
}

def @func_11059(%var_11052: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), bool], Tensor[(22), int16], Tensor[(308), int16], Tensor[(1260), float64]) {
  %264 = @func_7507() /* ty=Tensor[(7, 11, 6), float64] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %266 = reshape(%265, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %267 = @func_7593() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %268 = @func_8168() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float32]) */;
  %269 = cast(meta[relay.Constant][17] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %270 = cast(meta[relay.Constant][18] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %271 = cast(meta[relay.Constant][18] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %272 = cast(%var_11052, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %273 = reshape(%269, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %274 = reshape(%270, newshape=[77, 4]) /* ty=Tensor[(77, 4), int16] */;
  %275 = reshape(%271, newshape=[77, 4]) /* ty=Tensor[(77, 4), int16] */;
  %276 = reshape(%272, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %277 = @func_10536(%273, %274, %275, %276) /* ty=(Tensor[(7, 11, 6), bool], Tensor[(99, 3), int16], Tensor[(22), int16], Tensor[(11, 9, 3), bool], Tensor[(77, 4), bool], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) */;
  %278 = @func_4410(%266) /* ty=Tensor[(7, 11, 6), bool] */;
  %279 = %267.0;
  %280 = %268.2;
  %281 = %277.0;
  (%264, %278, %279, %280, %281, meta[relay.Constant][17] /* ty=Tensor[(22), int16] */, meta[relay.Constant][18] /* ty=Tensor[(308), int16] */, %var_11052)
}

def @main(%var_12545: Tensor[(168), float64], %var_12600: Tensor[(297), bool]) -> (Tensor[(7, 11, 6), float64], Tensor[(14, 15, 5), bool], Tensor[(168), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(13, 1050), int64], Tensor[(11, 9, 3), float32], Tensor[(297), bool], Tensor[(7, 11, 6), float64], Tensor[(864), float64], Tensor[(11, 9, 3), bool], Tensor[(13, 1050), bool]) {
  %282 = @func_7593() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %283 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1050), bool] */, dtype="bool") /* ty=Tensor[(1, 1050), bool] */;
  %284 = cast(%var_12545, dtype="float64") /* ty=Tensor[(168), float64] */;
  %285 = reshape(%283, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), bool] */;
  %286 = reshape(%284, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %287 = @func_4235(%285, %286) /* ty=(Tensor[(14, 15, 5), bool], Tensor[(14, 15, 5), float32], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(4, 588), float64], Tensor[(7, 11, 6), float64]) */;
  %288 = @func_9721() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %289 = @func_5854() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %290 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1050), bool] */, dtype="int64") /* ty=Tensor[(1, 1050), int64] */;
  %291 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 1050), bool] */, dtype="int64") /* ty=Tensor[(13, 1050), int64] */;
  %292 = cast(%var_12600, dtype="bool") /* ty=Tensor[(297), bool] */;
  %293 = reshape(%292, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), bool] */;
  %294 = @func_11775(%293) /* ty=(Tensor[(11, 9, 3), uint16], Tensor[(11, 9, 3), float32]) */;
  %295 = cast(meta[relay.Constant][21] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %296 = reshape(%295, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float64] */;
  %297 = @func_12509(%296) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(6, 16, 9), bool]) */;
  %298 = cast(%var_12600, dtype="int16") /* ty=Tensor[(297), int16] */;
  %299 = reshape(%298, newshape=[297]) /* ty=Tensor[(297), int16] */;
  %300 = @func_6171(%299) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) */;
  %301 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1050), bool] */, dtype="bool") /* ty=Tensor[(1, 1050), bool] */;
  %302 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 1050), bool] */, dtype="bool") /* ty=Tensor[(13, 1050), bool] */;
  %303 = equal(%301, %302) /* ty=Tensor[(13, 1050), bool] */;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(13, 1050), float32] */;
  %305 = atanh(%304) /* ty=Tensor[(13, 1050), float32] */;
  %306 = cast(%305, dtype="uint16") /* ty=Tensor[(13, 1050), uint16] */;
  %307 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1050), bool] */, dtype="uint16") /* ty=Tensor[(1, 1050), uint16] */;
  %308 = bitwise_or(%306, %307) /* ty=Tensor[(13, 1050), uint16] */;
  %309 = cast(%308, dtype="bool") /* ty=Tensor[(13, 1050), bool] */;
  %310 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1050), bool] */, dtype="bool") /* ty=Tensor[(1, 1050), bool] */;
  %311 = %282.0;
  %312 = %287.0;
  %313 = @func_9539() /* ty=Tensor[(7, 11, 6), float64] */;
  %314 = %288.0;
  %315 = %289.2;
  %316 = @func_7812() /* ty=Tensor[(11, 6, 14), float64] */;
  %317 = bitwise_xor(%290, %291) /* ty=Tensor[(13, 1050), int64] */;
  %318 = %294.1;
  %319 = %297.0;
  %320 = %300.1;
  %321 = not_equal(%309, %310) /* ty=Tensor[(13, 1050), bool] */;
  (%311, %312, %var_12545, %313, %314, %315, %316, %317, %318, %var_12600, %319, meta[relay.Constant][21] /* ty=Tensor[(864), float64] */, %320, %321)
}

def @func_4157(%var_4149: Tensor[(7, 11, 6), float32]) -> (Tensor[(7, 11, 6), bool],) {
  %322 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %323 = %322.0;
  %324 = cast(%var_4149, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = equal(%326, %327) /* ty=Tensor[(7, 11, 6), bool] */;
  (%328,)
}

def @func_6930() -> Tensor[(7, 11, 6), float64] {
  %329 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %329.0
}

def @func_4439() -> (Tensor[(7, 11, 6), float64],) {
  %330 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
  %331 = %330.0;
  (%331,)
}

def @func_12356() -> Tensor[(7, 11, 6), float64] {
  @func_5136() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_9496() -> (Tensor[(7, 11, 6), float32],) {
  %332 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %333 = %332.0;
  (%333,)
}

def @func_11775(%var_11754: Tensor[(11, 9, 3), bool]) -> (Tensor[(11, 9, 3), uint16], Tensor[(11, 9, 3), float32]) {
  %334 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %335 = %334.0;
  %336 = cast(%var_11754, dtype="uint16") /* ty=Tensor[(11, 9, 3), uint16] */;
  %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%335, dtype="uint16") /* ty=Tensor[(11, 9, 3), uint16] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %340 = cast(%var_11754, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %341 = right_shift(%338, %339) /* ty=Tensor[(11, 9, 3), uint16] */;
  %342 = cos(%340) /* ty=Tensor[(11, 9, 3), float32] */;
  (%341, %342)
}

def @func_6105(%var_6006: Tensor[(2, 384), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(7, 11, 6), float64], Tensor[(2, 384), bool]) {
  %343 = cast(%var_6006, dtype="int16") /* ty=Tensor[(2, 384), int16] */;
  %344 = reshape(%343, newshape=[768]) /* ty=Tensor[(768), int16] */;
  %345 = @func_4915(%344) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(768), int16], Tensor[(7, 11, 6), float64]) */;
  %346 = @func_4826() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %347 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 384), int16] */, dtype="bool") /* ty=Tensor[(2, 384), bool] */;
  %348 = shape_of(%var_6006, dtype="int32") /* ty=Tensor[(2), int32] */;
  %349 = cast(%var_6006, dtype="bool") /* ty=Tensor[(2, 384), bool] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %351 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %352 = %345.1;
  %353 = %346.0;
  %354 = greater(%349, %350) /* ty=Tensor[(2, 384), bool] */;
  (%351, %352, %353, %354)
}

def @func_1801(%var_1788: Tensor[(13, 7, 4), int16]) -> (Tensor[(13, 7, 4), bool], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64]) {
  %355 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 7, 4), int16] */, dtype="bool") /* ty=Tensor[(13, 7, 4), bool] */;
  %356 = shape_of(%var_1788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%var_1788, dtype="bool") /* ty=Tensor[(13, 7, 4), bool] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %359 = cast(meta[relay.Constant][24] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %360 = cast(meta[relay.Constant][25] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %361 = reshape(%359, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
  %362 = reshape(%360, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
  %363 = @func_880(%361, %362) /* ty=(Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) */;
  %364 = less_equal(%357, %358) /* ty=Tensor[(13, 7, 4), bool] */;
  %365 = %363.1;
  (%364, %365, meta[relay.Constant][24] /* ty=Tensor[(168), float64] */, meta[relay.Constant][25] /* ty=Tensor[(2352), float64] */)
}

def @func_9579() -> Tensor[(7, 11, 6), float64] {
  %366 = @func_5854() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %366.0
}

def @func_4501(%var_4480: Tensor[(8, 6, 16), int16]) -> (Tensor[(8, 6, 16), int16], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(364), int16]) {
  %367 = cast(%var_4480, dtype="int16") /* ty=Tensor[(8, 6, 16), int16] */;
  %368 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(8, 6, 16), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 6, 16), int16] */, dtype="int16") /* ty=Tensor[(8, 6, 16), int16] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %371 = cast(meta[relay.Constant][27] /* ty=Tensor[(364), int16] */, dtype="int16") /* ty=Tensor[(364), int16] */;
  %372 = reshape(%371, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), int16] */;
  %373 = @func_1801(%372) /* ty=(Tensor[(13, 7, 4), bool], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64]) */;
  %374 = subtract(%369, %370) /* ty=Tensor[(8, 6, 16), int16] */;
  %375 = @func_4469() /* ty=Tensor[(7, 11, 6), float64] */;
  %376 = %373.2;
  (%374, %375, %376, meta[relay.Constant][27] /* ty=Tensor[(364), int16] */)
}

def @func_5745(%var_5724: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), float32] {
  %377 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %378 = %377.0;
  %379 = cast(%var_5724, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%378, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%381, %382) /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_828(%var_803: Tensor[(3, 11, 1), uint8], %var_808: Tensor[(22), int16]) -> (Tensor[(3, 11, 1), uint8], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(77, 4), int16], Tensor[(14, 2, 11), float32]) {
  %383 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %384 = cast(%var_803, dtype="uint8") /* ty=Tensor[(3, 11, 1), uint8] */;
  %385 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="float32") /* ty=float32 */;
  %386 = cast(%var_808, dtype="int16") /* ty=Tensor[(22), int16] */;
  %387 = cast(meta[relay.Constant][29] /* ty=Tensor[(77, 4), int16] */, dtype="int16") /* ty=Tensor[(77, 4), int16] */;
  %388 = reshape(%385, newshape=[]) /* ty=float32 */;
  %389 = reshape(%386, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %390 = reshape(%387, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %391 = @func_216(%388, %389, %390) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
  %392 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="float32") /* ty=float32 */;
  %393 = cast(%var_808, dtype="int16") /* ty=Tensor[(22), int16] */;
  %394 = %391.4;
  %395 = cast(%394, dtype="int16") /* ty=Tensor[(14, 2, 11), int16] */;
  %396 = reshape(%392, newshape=[]) /* ty=float32 */;
  %397 = reshape(%393, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %398 = reshape(%395, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %399 = @func_216(%396, %397, %398) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
  %400 = %399.1;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(14, 2, 11), float64] */;
  %402 = cosh(%401) /* ty=Tensor[(14, 2, 11), float64] */;
  %403 = cast(%400, dtype="float32") /* ty=Tensor[(14, 2, 11), float32] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%402, dtype="float32") /* ty=Tensor[(14, 2, 11), float32] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %407 = bitwise_xor(%383, %384) /* ty=Tensor[(3, 11, 1), uint8] */;
  %408 = divide(%405, %406) /* ty=Tensor[(14, 2, 11), float32] */;
  (%407, %394, %var_808, meta[relay.Constant][29] /* ty=Tensor[(77, 4), int16] */, %408)
}

def @func_7649() -> (Tensor[(7, 11, 6), bool],) {
  %409 = @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %410 = %409.0;
  (%410,)
}

def @func_11426() -> (Tensor[(7, 11, 6), float32], Tensor[(1260), float64], Tensor[(81), float32], Tensor[(1260), float64], Tensor[(11, 9, 3), bool]) {
  %411 = cast(meta[relay.Constant][30] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %412 = cast(meta[relay.Constant][31] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %413 = reshape(%411, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %414 = reshape(%412, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %415 = @func_7440(%413, %414) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(144), uint32], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) */;
  %416 = @func_7032() /* ty=Tensor[(7, 11, 6), float32] */;
  %417 = %415.4;
  %418 = @func_7890() /* ty=Tensor[(11, 9, 3), bool] */;
  (%416, %417, meta[relay.Constant][30] /* ty=Tensor[(81), float32] */, meta[relay.Constant][31] /* ty=Tensor[(1260), float64] */, %418)
}

def @func_10335() -> Tensor[(7, 11, 6), float64] {
  %419 = @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %419.0
}

def @func_12038() -> (Tensor[(7, 11, 6), float32], Tensor[(10, 10, 6), float32], Tensor[(600), float32], Tensor[(7, 11, 6), int64]) {
  %420 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %421 = cast(meta[relay.Constant][32] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %422 = reshape(%421, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), float32] */;
  %423 = %420.0;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %425 = reshape(%424, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %426 = @func_5237(%425) /* ty=(Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) */;
  %427 = @func_11319(%422) /* ty=Tensor[(10, 10, 6), float32] */;
  %428 = %426.0;
  (%423, %427, meta[relay.Constant][32] /* ty=Tensor[(600), float32] */, %428)
}

def @func_5716() -> (Tensor[(7, 11, 6), bool],) {
  %429 = @func_5136() /* ty=Tensor[(7, 11, 6), float64] */;
  %430 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
  %431 = cast(%430, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %432 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%429, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %435 = logical_or(%433, %434) /* ty=Tensor[(7, 11, 6), bool] */;
  (%435,)
}

def @func_4611() -> Tensor[(6, 16, 9), float64] {
  @func_4325() /* ty=Tensor[(6, 16, 9), float64] */
}

def @func_5854() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
  %436 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %437 = %436.0;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %439 = reshape(%438, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %440 = @func_4157(%439) /* ty=(Tensor[(7, 11, 6), bool],) */;
  %441 = @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %442 = %440.0;
  %443 = %441.0;
  (%437, %442, %443)
}

def @func_5295(%var_5264: Tensor[(4, 1, 16), float32]) -> (Tensor[(4, 1, 16), float32], Tensor[(22), int16], Tensor[(33), uint8], Tensor[(22), int16], Tensor[(7, 11, 6), float64]) {
  %444 = cast(%var_5264, dtype="float32") /* ty=Tensor[(4, 1, 16), float32] */;
  %445 = cast(meta[relay.Constant][33] /* ty=Tensor[(33), uint8] */, dtype="uint8") /* ty=Tensor[(33), uint8] */;
  %446 = cast(meta[relay.Constant][34] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %447 = reshape(%445, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), uint8] */;
  %448 = reshape(%446, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %449 = @func_828(%447, %448) /* ty=(Tensor[(3, 11, 1), uint8], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(77, 4), int16], Tensor[(14, 2, 11), float32]) */;
  %450 = %449.2;
  %451 = cast(%450, dtype="int16") /* ty=Tensor[(22), int16] */;
  %452 = reshape(%451, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %453 = @func_3554(%452) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(22), int16], Tensor[(77, 4), int16]) */;
  %454 = acosh(%444) /* ty=Tensor[(4, 1, 16), float32] */;
  %455 = %453.0;
  (%454, %450, meta[relay.Constant][33] /* ty=Tensor[(33), uint8] */, meta[relay.Constant][34] /* ty=Tensor[(22), int16] */, %455)
}

def @func_5191() -> (Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) {
  %456 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
  %457 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), uint32] */, dtype="uint32") /* ty=Tensor[(144), uint32] */;
  %458 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), uint32] */, dtype="uint32") /* ty=Tensor[(144), uint32] */;
  %459 = reshape(%457, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), uint32] */;
  %460 = reshape(%458, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), uint32] */;
  %461 = cast(meta[relay.Constant][36] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %462 = reshape(%461, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float64] */;
  %463 = @func_3254(%462) /* ty=(Tensor[(11, 6, 14), float64], Tensor[(22), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
  %464 = %456.0;
  %465 = @func_4349(%459, %460) /* ty=Tensor[(8, 9, 2), bool] */;
  %466 = %463.0;
  (%464, %465, meta[relay.Constant][35] /* ty=Tensor[(144), uint32] */, %466, meta[relay.Constant][36] /* ty=Tensor[(154, 6), float64] */)
}

def @func_6393() -> (Tensor[(11, 9, 3), bool],) {
  %467 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
  %468 = %467.1;
  (%468,)
}

def @func_3958(%var_3932: Tensor[(308), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(1, 22), int16], Tensor[(308), int16], Tensor[(22), float64], Tensor[(14, 2, 11), float64]) {
  %469 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %470 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 22), int16] */, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
  %471 = cast(%var_3932, dtype="int16") /* ty=Tensor[(308), int16] */;
  %472 = reshape(%470, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %473 = reshape(%471, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %474 = @func_1899(%472, %473) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %475 = %474.2;
  %476 = cast(%475, dtype="float64") /* ty=Tensor[(22), float64] */;
  %477 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 22), int16] */, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
  %478 = cast(%var_3932, dtype="int16") /* ty=Tensor[(308), int16] */;
  %479 = reshape(%477, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %480 = reshape(%478, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %481 = @func_102(%479, %480) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %482 = %469.0;
  %483 = asinh(%476) /* ty=Tensor[(22), float64] */;
  %484 = %481.1;
  (%482, meta[relay.Constant][37] /* ty=Tensor[(1, 22), int16] */, %var_3932, %483, %484)
}

def @func_10205() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %485 = @func_8373() /* ty=(Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64]) */;
  %486 = @func_5677() /* ty=Tensor[(7, 11, 6), float64] */;
  %487 = %485.1;
  (%486, %487)
}

def @func_9721() -> (Tensor[(7, 11, 6), bool],) {
  %488 = @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %489 = %488.0;
  (%489,)
}

def @func_7032() -> Tensor[(7, 11, 6), float32] {
  @func_6737() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_7890() -> Tensor[(11, 9, 3), bool] {
  %490 = @func_6393() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %490.0
}

def @func_6237(%var_6194: Tensor[(81), float32]) -> (Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(11, 6, 14), float64]) {
  %491 = cast(%var_6194, dtype="float32") /* ty=Tensor[(81), float32] */;
  %492 = reshape(%491, newshape=[9, 9, 1]) /* ty=Tensor[(9, 9, 1), float32] */;
  %493 = cast(meta[relay.Constant][38] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %494 = reshape(%493, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float64] */;
  %495 = @func_1349(%494) /* ty=(Tensor[(12, 7, 1), float64],) */;
  %496 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %497 = %496.3;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %499 = @func_2741(%492) /* ty=Tensor[(9, 9, 11), float32] */;
  %500 = %495.0;
  %501 = exp(%498) /* ty=Tensor[(11, 6, 14), float64] */;
  (%499, %var_6194, %500, meta[relay.Constant][38] /* ty=Tensor[(84), float64] */, %501)
}

def @func_969(%var_958: Tensor[(11, 9, 3), int16]) -> Tensor[(11, 9, 3), bool] {
  %502 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 9, 3), int16] */, dtype="bool") /* ty=Tensor[(11, 9, 3), bool] */;
  %503 = shape_of(%var_958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%var_958, dtype="bool") /* ty=Tensor[(11, 9, 3), bool] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%504, %505) /* ty=Tensor[(11, 9, 3), bool] */
}

def @func_4826() -> (Tensor[(7, 11, 6), float64],) {
  %506 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  (%506,)
}

def @func_11101() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %507 = @func_8797() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %508 = @func_10205() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %509 = %507.1;
  %510 = %508.0;
  (%509, %510)
}

def @func_1899(%var_1874: Tensor[(22), int16], %var_1875: Tensor[(308), int16]) -> (Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) {
  %511 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 8), float32] */;
  %512 = cast(%var_1874, dtype="int16") /* ty=Tensor[(22), int16] */;
  %513 = cast(%var_1875, dtype="int16") /* ty=Tensor[(308), int16] */;
  %514 = reshape(%512, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %515 = reshape(%513, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %516 = @func_102(%514, %515) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %517 = asin(%511) /* ty=Tensor[(7, 3, 8), float32] */;
  %518 = %516.1;
  (%517, %518, %var_1874, %var_1875)
}

def @func_11223() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) {
  %519 = @func_5854() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %520 = %519.2;
  %521 = cast(%520, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %522 = reshape(%521, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %523 = @func_5237(%522) /* ty=(Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) */;
  %524 = @func_9477() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %525 = %523.0;
  %526 = %524.0;
  (%520, %525, %526)
}

def @func_10536(%var_10499: Tensor[(22), int16], %var_10500: Tensor[(77, 4), int16], %var_10517: Tensor[(77, 4), int16], %var_10525: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), bool], Tensor[(99, 3), int16], Tensor[(22), int16], Tensor[(11, 9, 3), bool], Tensor[(77, 4), bool], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
  %527 = @func_8067() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %528 = cast(%var_10499, dtype="int16") /* ty=Tensor[(22), int16] */;
  %529 = cast(%var_10500, dtype="int16") /* ty=Tensor[(77, 4), int16] */;
  %530 = reshape(%528, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %531 = reshape(%529, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %532 = @func_5109(%530, %531) /* ty=(Tensor[(99, 3), int16], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %533 = cast(%var_10517, dtype="bool") /* ty=Tensor[(77, 4), bool] */;
  %534 = shape_of(%var_10500, dtype="int32") /* ty=Tensor[(2), int32] */;
  %535 = cast(%var_10500, dtype="bool") /* ty=Tensor[(77, 4), bool] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %537 = cast(meta[relay.Constant][41] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %538 = cast(%var_10525, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %539 = reshape(%537, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %540 = reshape(%538, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %541 = @func_5567(%539, %540) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) */;
  %542 = %527.0;
  %543 = %532.0;
  %544 = @func_7890() /* ty=Tensor[(11, 9, 3), bool] */;
  %545 = greater_equal(%535, %536) /* ty=Tensor[(77, 4), bool] */;
  %546 = %541.3;
  (%542, %543, %var_10499, %544, %545, %546, meta[relay.Constant][41] /* ty=Tensor[(81), float32] */, %var_10525)
}

def @func_2466(%var_2398: Tensor[(3, 11, 6), float64], %var_2399: Tensor[(3, 11, 6), float64], %var_2426: Tensor[(182, 2), int16]) -> (Tensor[(3, 11, 6), float64], Tensor[(168), float64], Tensor[(182, 2), int16], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16], Tensor[(3, 11, 6), float64], Tensor[(14, 2, 11), float64], float32) {
  %547 = cast(%var_2399, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %548 = shape_of(%var_2398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%var_2398, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %551 = cast(%var_2426, dtype="int16") /* ty=Tensor[(182, 2), int16] */;
  %552 = reshape(%551, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), int16] */;
  %553 = @func_1801(%552) /* ty=(Tensor[(13, 7, 4), bool], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64]) */;
  %554 = cast(meta[relay.Constant][42] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %555 = cast(meta[relay.Constant][43] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %556 = reshape(%554, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %557 = reshape(%555, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %558 = @func_1899(%556, %557) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %559 = cast(%var_2399, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %560 = cosh(%559) /* ty=Tensor[(3, 11, 6), float64] */;
  %561 = cast(%var_2399, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%560, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %565 = cast(-5.0849f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %566 = cast(meta[relay.Constant][42] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %567 = cast(meta[relay.Constant][43] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %568 = reshape(%565, newshape=[]) /* ty=float32 */;
  %569 = reshape(%566, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %570 = reshape(%567, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %571 = @func_216(%568, %569, %570) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
  %572 = power(%549, %550) /* ty=Tensor[(3, 11, 6), float64] */;
  %573 = %553.2;
  %574 = %558.3;
  %575 = divide(%563, %564) /* ty=Tensor[(3, 11, 6), float64] */;
  %576 = %571.1;
  (%572, %573, %var_2426, %574, meta[relay.Constant][42] /* ty=Tensor[(22), int16] */, meta[relay.Constant][43] /* ty=Tensor[(308), int16] */, %575, %576, -5.0849f /* ty=float32 */)
}

def @func_5923(%var_5911: Tensor[(6, 8, 9), int8], %var_5912: Tensor[(6, 8, 9), int8]) -> (Tensor[(6, 8, 9), bool], Tensor[(7, 11, 6), float32]) {
  %577 = cast(%var_5912, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %578 = shape_of(%var_5911, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%var_5911, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %581 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %582 = less_equal(%579, %580) /* ty=Tensor[(6, 8, 9), bool] */;
  %583 = %581.0;
  (%582, %583)
}

def @func_8500() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool]) {
  %584 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %585 = @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %586 = %584.0;
  %587 = %585.0;
  (%586, %587)
}

def @func_4410(%var_4397: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), bool] {
  %588 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %589 = %588.0;
  %590 = cast(%var_4397, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%592, %593) /* ty=Tensor[(7, 11, 6), bool] */
}

def @func_6314(%var_6306: Tensor[(1, 1050), bool], %var_6307: Tensor[(168), float64]) -> (Tensor[(7, 11, 6), float32], Tensor[(4, 588), float64], Tensor[(1, 1050), bool], Tensor[(168), float64], Tensor[(7, 11, 6), float64]) {
  %594 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %595 = cast(%var_6306, dtype="bool") /* ty=Tensor[(1, 1050), bool] */;
  %596 = cast(%var_6307, dtype="float64") /* ty=Tensor[(168), float64] */;
  %597 = reshape(%595, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), bool] */;
  %598 = reshape(%596, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %599 = @func_4235(%597, %598) /* ty=(Tensor[(14, 15, 5), bool], Tensor[(14, 15, 5), float32], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(4, 588), float64], Tensor[(7, 11, 6), float64]) */;
  %600 = @func_5370() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) */;
  %601 = %594.0;
  %602 = %599.4;
  %603 = %600.0;
  (%601, %602, %var_6306, %var_6307, %603)
}

def @func_6529() -> (Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %604 = @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %605 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %606 = %604.0;
  %607 = %605.0;
  %608 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
  (%606, %607, %608)
}

def @func_10031() -> (Tensor[(7, 11, 6), float64], Tensor[(297), int16], Tensor[(297), int16], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32]) {
  %609 = cast(meta[relay.Constant][44] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
  %610 = reshape(%609, newshape=[297]) /* ty=Tensor[(297), int16] */;
  %611 = @func_6171(%610) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) */;
  %612 = @func_6529() /* ty=(Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %613 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %614 = @func_8813() /* ty=Tensor[(7, 11, 6), float64] */;
  %615 = %611.2;
  %616 = %612.1;
  %617 = %613.0;
  (%614, %615, meta[relay.Constant][44] /* ty=Tensor[(297), int16] */, %616, %617)
}

def @func_4081() -> Tensor[(7, 11, 6), float64] {
  @func_3581() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_8889() -> Tensor[(7, 11, 6), float64] {
  %618 = @func_4826() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %618.0
}

def @func_8899() -> (Tensor[(7, 11, 6), float32],) {
  %619 = @func_8524() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %620 = %619.0;
  (%620,)
}

def @func_4114(%var_4111: Tensor[(90, 14), float64], %var_4112: Tensor[(84), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(90, 14), float64], Tensor[(84), float64]) {
  %621 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %622 = cast(%var_4111, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
  %623 = cast(%var_4112, dtype="float64") /* ty=Tensor[(84), float64] */;
  %624 = reshape(%622, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %625 = reshape(%623, newshape=[1, 84]) /* ty=Tensor[(1, 84), float64] */;
  %626 = @func_2131(%624, %625) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
  %627 = %621.0;
  %628 = %626.3;
  (%627, %628, %var_4111, %var_4112)
}

def @func_9307(%var_9297: Tensor[(225), float32], %var_9299: Tensor[(2352), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(84), float64], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64]) {
  %629 = cast(%var_9297, dtype="float32") /* ty=Tensor[(225), float32] */;
  %630 = cast(meta[relay.Constant][45] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %631 = cast(%var_9299, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %632 = reshape(%629, newshape=[15, 1, 15]) /* ty=Tensor[(15, 1, 15), float32] */;
  %633 = reshape(%630, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %634 = reshape(%631, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
  %635 = @func_2791(%632, %633, %634) /* ty=(Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(15, ?, 15), bool], Tensor[(12, 7, 1), float64], Tensor[(84), float64]) */;
  %636 = @func_4469() /* ty=Tensor[(7, 11, 6), float64] */;
  %637 = %635.5;
  (%636, %637, %var_9297, meta[relay.Constant][45] /* ty=Tensor[(168), float64] */, %var_9299)
}

def @func_7593() -> (Tensor[(7, 11, 6), float64],) {
  %638 = @func_5854() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %639 = %638.2;
  (%639,)
}

def @func_9676(%var_9670: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int32],) {
  %640 = @func_4439() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %641 = %640.0;
  %642 = cast(%var_9670, dtype="int32") /* ty=Tensor[(7, 11, 6), int32] */;
  %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%641, dtype="int32") /* ty=Tensor[(7, 11, 6), int32] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %646 = bitwise_or(%644, %645) /* ty=Tensor[(7, 11, 6), int32] */;
  (%646,)
}

def @func_7024() -> Tensor[(7, 11, 6), float32] {
  @func_6737() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_10907() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(7, 11, 6), float32]) {
  %647 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %649 = reshape(%648, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %650 = @func_9676(%649) /* ty=(Tensor[(7, 11, 6), int32],) */;
  %651 = @func_9496() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %652 = %650.0;
  %653 = %651.0;
  (%647, %652, %653)
}

def @func_9814() -> (Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64], Tensor[(6, 16, 9), float64]) {
  %654 = @func_8899() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %655 = @func_4742() /* ty=(Tensor[(6, 16, 9), float64],) */;
  %656 = %654.0;
  %657 = @func_6594() /* ty=Tensor[(6, 16, 9), float64] */;
  %658 = %655.0;
  (%656, %657, %658)
}

def @func_11298(%var_11285: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float64],) {
  %659 = cast(%var_11285, dtype="float64") /* ty=Tensor[(5, 12, 2), float64] */;
  %660 = tan(%659) /* ty=Tensor[(5, 12, 2), float64] */;
  (%660,)
}

def @func_12340() -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64]) {
  %661 = @func_8168() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float32]) */;
  %662 = @func_8539() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %663 = %661.2;
  %664 = %662.0;
  (%663, %664)
}

def @func_12267() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32]) {
  %665 = @func_8899() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %666 = @func_5050() /* ty=Tensor[(7, 11, 6), float64] */;
  %667 = %665.0;
  (%666, %667)
}

def @func_4235(%var_4188: Tensor[(14, 15, 5), bool], %var_4209: Tensor[(168), float64]) -> (Tensor[(14, 15, 5), bool], Tensor[(14, 15, 5), float32], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(4, 588), float64], Tensor[(7, 11, 6), float64]) {
  %668 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 15, 5), bool] */, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
  %669 = shape_of(%var_4188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%var_4188, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %672 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 15, 5), bool] */, dtype="float32") /* ty=Tensor[(14, 15, 5), float32] */;
  %673 = cast(%var_4209, dtype="float64") /* ty=Tensor[(168), float64] */;
  %674 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 588), float64] */, dtype="float64") /* ty=Tensor[(4, 588), float64] */;
  %675 = reshape(%673, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
  %676 = reshape(%674, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
  %677 = @func_880(%675, %676) /* ty=(Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) */;
  %678 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %679 = logical_or(%670, %671) /* ty=Tensor[(14, 15, 5), bool] */;
  %680 = exp(%672) /* ty=Tensor[(14, 15, 5), float32] */;
  %681 = %677.1;
  %682 = %678.0;
  (%679, %680, %681, %var_4209, meta[relay.Constant][47] /* ty=Tensor[(4, 588), float64] */, %682)
}

def @func_6858(%var_6851: Tensor[(3, 16, 11), int32], %var_6852: Tensor[(3, 16, 11), int32]) -> (Tensor[(3, 16, 11), bool],) {
  %683 = cast(%var_6852, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %684 = shape_of(%var_6851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%var_6851, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %687 = less(%685, %686) /* ty=Tensor[(3, 16, 11), bool] */;
  (%687,)
}

def @func_7081() -> (Tensor[(7, 11, 6), float64],) {
  %688 = @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %689 = %688.0;
  (%689,)
}

def @func_2791(%var_2765: Tensor[(15, 1, 15), float32], %var_2772: Tensor[(168), float64], %var_2773: Tensor[(2352), float64]) -> (Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(15, ?, 15), bool], Tensor[(12, 7, 1), float64], Tensor[(84), float64]) {
  %690 = cast(%var_2772, dtype="float64") /* ty=Tensor[(168), float64] */;
  %691 = cast(%var_2773, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %692 = reshape(%690, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
  %693 = reshape(%691, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
  %694 = @func_880(%692, %693) /* ty=(Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) */;
  %695 = cast(%var_2765, dtype="float32") /* ty=Tensor[(15, 1, 15), float32] */;
  %696 = atanh(%695) /* ty=Tensor[(15, 1, 15), float32] */;
  %697 = cast(%var_2765, dtype="bool") /* ty=Tensor[(15, 1, 15), bool] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%696, dtype="bool") /* ty=Tensor[(15, 1, 15), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %701 = cast(meta[relay.Constant][48] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %702 = reshape(%701, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float64] */;
  %703 = @func_1349(%702) /* ty=(Tensor[(12, 7, 1), float64],) */;
  %704 = %694.1;
  %705 = less_equal(%699, %700) /* ty=Tensor[(15, ?, 15), bool] */;
  %706 = %703.0;
  (%704, %var_2772, %var_2773, %705, %706, meta[relay.Constant][48] /* ty=Tensor[(84), float64] */)
}

def @func_12164(%var_12159: int16, %var_12160: Tensor[(11, 14, 11), int16]) -> (Tensor[(11, 14, 11), int16],) {
  %707 = cast(%var_12159, dtype="int16") /* ty=int16 */;
  %708 = cast(%var_12160, dtype="int16") /* ty=Tensor[(11, 14, 11), int16] */;
  %709 = subtract(%707, %708) /* ty=Tensor[(11, 14, 11), int16] */;
  (%709,)
}

def @func_102(%var_85: Tensor[(1, 2, 11), int16], %var_86: Tensor[(14, 2, 11), int16]) -> (Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) {
  %710 = cast(%var_85, dtype="bool") /* ty=Tensor[(1, 2, 11), bool] */;
  %711 = cast(%var_86, dtype="bool") /* ty=Tensor[(14, 2, 11), bool] */;
  %712 = cast(%var_86, dtype="float64") /* ty=Tensor[(14, 2, 11), float64] */;
  %713 = cast(%var_85, dtype="float64") /* ty=Tensor[(1, 2, 11), float64] */;
  %714 = not_equal(%710, %711) /* ty=Tensor[(14, 2, 11), bool] */;
  %715 = power(%712, %713) /* ty=Tensor[(14, 2, 11), float64] */;
  (%714, %715)
}

def @func_5136() -> Tensor[(7, 11, 6), float64] {
  %716 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
  %717 = cast(%716, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %718 = reshape(%717, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %719 = @func_3901(%718) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %720 = %719.0;
  %721 = cast(%716, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%723, %724) /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_7122(%var_7104: Tensor[(6, 8, 5), uint16]) -> (Tensor[(6, 8, 5), uint16], Tensor[(6, 8, 5), float64]) {
  %725 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 8, 5), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 5), uint16] */;
  %726 = shape_of(%var_7104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%var_7104, dtype="uint16") /* ty=Tensor[(6, 8, 5), uint16] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %729 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 8, 5), uint16] */, dtype="float64") /* ty=Tensor[(6, 8, 5), float64] */;
  %730 = right_shift(%727, %728) /* ty=Tensor[(6, 8, 5), uint16] */;
  %731 = asin(%729) /* ty=Tensor[(6, 8, 5), float64] */;
  (%730, %731)
}

def @func_10801() -> (Tensor[(7, 11, 6), float64],) {
  %732 = @func_5677() /* ty=Tensor[(7, 11, 6), float64] */;
  (%732,)
}

def @func_6956() -> (Tensor[(7, 11, 6), float64],) {
  %733 = @func_6930() /* ty=Tensor[(7, 11, 6), float64] */;
  (%733,)
}

def @func_7440(%var_7422: Tensor[(81), float32], %var_7423: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(144), uint32], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
  %734 = cast(%var_7422, dtype="float32") /* ty=Tensor[(81), float32] */;
  %735 = cast(%var_7423, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %736 = reshape(%734, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %737 = reshape(%735, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %738 = @func_5567(%736, %737) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) */;
  %739 = @func_6930() /* ty=Tensor[(7, 11, 6), float64] */;
  %740 = @func_6657() /* ty=Tensor[(144), uint32] */;
  %741 = %738.7;
  (%739, %740, %741, %var_7422, %var_7423)
}

def @func_2131(%var_2097: Tensor[(7, 15, 12), float64], %var_2103: Tensor[(1, 84), float64]) -> (Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) {
  %742 = cast(%var_2097, dtype="float64") /* ty=Tensor[(7, 15, 12), float64] */;
  %743 = cast(%var_2103, dtype="float64") /* ty=Tensor[(1, 84), float64] */;
  %744 = reshape(%743, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float64] */;
  %745 = @func_1349(%744) /* ty=(Tensor[(12, 7, 1), float64],) */;
  %746 = %745.0;
  %747 = cast(%746, dtype="int32") /* ty=Tensor[(12, 7, 1), int32] */;
  %748 = shape_of(%var_2103, dtype="int32") /* ty=Tensor[(2), int32] */;
  %749 = cast(%var_2103, dtype="int32") /* ty=Tensor[(1, 84), int32] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %751 = cast(meta[relay.Constant][50] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %752 = cast(meta[relay.Constant][51] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %753 = reshape(%751, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %754 = reshape(%752, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %755 = @func_1899(%753, %754) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %756 = log2(%742) /* ty=Tensor[(7, 15, 12), float64] */;
  %757 = subtract(%749, %750) /* ty=Tensor[(?, 84), int32] */;
  %758 = %755.3;
  (%756, %757, %758, meta[relay.Constant][50] /* ty=Tensor[(22), int16] */, meta[relay.Constant][51] /* ty=Tensor[(308), int16] */)
}

def @func_11555() -> (Tensor[(?, 3, 9), bool], Tensor[(7, 11, 6), float64]) {
  %759 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 3, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 3, 9), float32] */;
  %760 = tan(%759) /* ty=Tensor[(1, 3, 9), float32] */;
  %761 = cast(%760, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
  %762 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(1, 3, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 3, 9), float32] */, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %765 = less_equal(%763, %764) /* ty=Tensor[(?, 3, 9), bool] */;
  %766 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
  (%765, %766)
}

def @func_4742() -> (Tensor[(6, 16, 9), float64],) {
  %767 = @func_4611() /* ty=Tensor[(6, 16, 9), float64] */;
  (%767,)
}

def @func_11275(%var_11239: Tensor[(2912), float32], %var_11240: Tensor[(132), float64]) -> (Tensor[(7, 11, 6), bool], Tensor[(12, 1, 11), float64], Tensor[(2912), float32], Tensor[(132), float64], Tensor[(6, 16, 9), float64]) {
  %768 = @func_7649() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %769 = cast(%var_11239, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %770 = cast(%var_11240, dtype="float64") /* ty=Tensor[(132), float64] */;
  %771 = reshape(%769, newshape=[14, 16, 13]) /* ty=Tensor[(14, 16, 13), float32] */;
  %772 = reshape(%770, newshape=[132]) /* ty=Tensor[(132), float64] */;
  %773 = @func_6279(%771, %772) /* ty=(Tensor[(14, 16, 13), float32], Tensor[(12, 1, 11), float64], Tensor[(132), float64]) */;
  %774 = %768.0;
  %775 = %773.1;
  %776 = @func_6594() /* ty=Tensor[(6, 16, 9), float64] */;
  (%774, %775, %var_11239, %var_11240, %776)
}

def @func_10096() -> Tensor[(7, 11, 6), float32] {
  %777 = @func_8899() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %777.0
}

def @func_3254(%var_3246: Tensor[(11, 6, 14), float64]) -> (Tensor[(11, 6, 14), float64], Tensor[(22), int16], Tensor[(22), int16], Tensor[(308), int16]) {
  %778 = cast(%var_3246, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %779 = cast(meta[relay.Constant][53] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %780 = cast(meta[relay.Constant][54] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %781 = reshape(%779, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %782 = reshape(%780, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %783 = @func_1899(%781, %782) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %784 = asinh(%778) /* ty=Tensor[(11, 6, 14), float64] */;
  %785 = %783.2;
  (%784, %785, meta[relay.Constant][53] /* ty=Tensor[(22), int16] */, meta[relay.Constant][54] /* ty=Tensor[(308), int16] */)
}

def @func_7507() -> Tensor[(7, 11, 6), float64] {
  @func_6930() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12509(%var_12456: Tensor[(6, 16, 9), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(6, 16, 9), bool]) {
  %786 = @func_10907() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(7, 11, 6), float32]) */;
  %787 = @func_4611() /* ty=Tensor[(6, 16, 9), float64] */;
  %788 = cast(%var_12456, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
  %789 = shape_of(%787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %790 = cast(%787, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %792 = %786.0;
  %793 = greater(%790, %791) /* ty=Tensor[(6, 16, 9), bool] */;
  (%792, %793)
}

def @func_3671(%var_3655: Tensor[(91, 4), int16]) -> (Tensor[(14, 2, 11), float64], Tensor[(198), float64], Tensor[(91, 4), int16], Tensor[(7, 11, 6), float32]) {
  %794 = cast(meta[relay.Constant][55] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %795 = cast(meta[relay.Constant][55] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %796 = cast(%var_3655, dtype="int16") /* ty=Tensor[(91, 4), int16] */;
  %797 = reshape(%794, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), float64] */;
  %798 = reshape(%795, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), float64] */;
  %799 = reshape(%796, newshape=[182, 2]) /* ty=Tensor[(182, 2), int16] */;
  %800 = @func_2466(%797, %798, %799) /* ty=(Tensor[(3, 11, 6), float64], Tensor[(168), float64], Tensor[(182, 2), int16], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16], Tensor[(3, 11, 6), float64], Tensor[(14, 2, 11), float64], float32) */;
  %801 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %802 = %801.0;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %804 = atanh(%803) /* ty=Tensor[(7, 11, 6), float32] */;
  %805 = cast(meta[relay.Constant][56] /* ty=Tensor[(7, 11, 6), float32] */, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%804, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %809 = greater(%807, %808) /* ty=Tensor[(7, 11, 6), bool] */;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %811 = %800.7;
  %812 = log2(%810) /* ty=Tensor[(7, 11, 6), float32] */;
  (%811, meta[relay.Constant][55] /* ty=Tensor[(198), float64] */, %var_3655, %812)
}

def @func_4349(%var_4343: Tensor[(8, 9, 2), uint32], %var_4344: Tensor[(8, 9, 2), uint32]) -> Tensor[(8, 9, 2), bool] {
  %813 = cast(%var_4344, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %814 = shape_of(%var_4343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%var_4343, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%815, %816) /* ty=Tensor[(8, 9, 2), bool] */
}

def @func_8539() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %817 = @func_7081() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %818 = %817.0;
  %819 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
  (%818, %819)
}

def @func_8697() -> (Tensor[(7, 11, 6), float64],) {
  %820 = @func_7507() /* ty=Tensor[(7, 11, 6), float64] */;
  (%820,)
}

def @func_5485() -> Tensor[(7, 11, 6), float64] {
  @func_5050() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_4767(%var_4749: Tensor[(12, 1, 11), float64]) -> Tensor[(12, 1, 11), float64] {
  %821 = cast(%var_4749, dtype="float64") /* ty=Tensor[(12, 1, 11), float64] */;
  atanh(%821) /* ty=Tensor[(12, 1, 11), float64] */
}

def @func_7739(%var_7724: Tensor[(1, 22), int16]) -> (Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), bool], Tensor[(11, 9, 3), bool], Tensor[(7, 11, 6), float64], Tensor[(1, 22), int16], Tensor[(308), int16], Tensor[(7, 3, 8), float32], Tensor[(7, 11, 6), float64]) {
  %822 = @func_7649() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %823 = @func_7649() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %824 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %825 = cast(%var_7724, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
  %826 = cast(meta[relay.Constant][57] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %827 = reshape(%825, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %828 = reshape(%826, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %829 = @func_1899(%827, %828) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="float32") /* ty=Tensor[(7, 3, 8), float32] */;
  %832 = %822.0;
  %833 = %823.0;
  %834 = %824.0;
  %835 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  %836 = sin(%831) /* ty=Tensor[(7, 3, 8), float32] */;
  %837 = @func_5050() /* ty=Tensor[(7, 11, 6), float64] */;
  (%832, %833, %834, %835, %var_7724, meta[relay.Constant][57] /* ty=Tensor[(308), int16] */, %836, %837)
}

def @func_9595(%var_9589: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
  %838 = cast(%var_9589, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %839 = cos(%838) /* ty=Tensor[(8, 2, 13), float32] */;
  (%839,)
}

def @func_10839() -> Tensor[(7, 11, 6), float64] {
  %840 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %840.0
}

def @func_7812() -> Tensor[(11, 6, 14), float64] {
  %841 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %841.3
}

def @func_7922() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(924), float64]) {
  %842 = cast(meta[relay.Constant][58] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %843 = reshape(%842, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float64] */;
  %844 = @func_3254(%843) /* ty=(Tensor[(11, 6, 14), float64], Tensor[(22), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
  %845 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
  %846 = %844.0;
  (%845, %846, meta[relay.Constant][58] /* ty=Tensor[(924), float64] */)
}

def @func_8813() -> Tensor[(7, 11, 6), float64] {
  @func_3581() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_8130(%var_8118: uint16) -> (Tensor[(16, 16, 15), uint16],) {
  %847 = cast(%var_8118, dtype="uint16") /* ty=uint16 */;
  %848 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 16, 15), uint16] */, dtype="uint16") /* ty=Tensor[(16, 16, 15), uint16] */;
  %849 = bitwise_or(%847, %848) /* ty=Tensor[(16, 16, 15), uint16] */;
  (%849,)
}

def @func_8067() -> (Tensor[(7, 11, 6), bool],) {
  %850 = @func_7649() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %851 = %850.0;
  (%851,)
}

def @func_5237(%var_5219: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) {
  %852 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %853 = %852.0;
  %854 = cast(%var_5219, dtype="int64") /* ty=Tensor[(7, 11, 6), int64] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%853, dtype="int64") /* ty=Tensor[(7, 11, 6), int64] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %858 = subtract(%856, %857) /* ty=Tensor[(7, 11, 6), int64] */;
  %859 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
  (%858, %859)
}

def @func_12362() -> Tensor[(144), uint32] {
  @func_6657() /* ty=Tensor[(144), uint32] */
}

def @func_6748() -> (Tensor[(11, 9, 3), bool],) {
  %860 = @func_6393() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %861 = %860.0;
  (%861,)
}

def @func_3706() -> (Tensor[(7, 11, 6), float32],) {
  %862 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  %863 = cast(%862, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %864 = tan(%863) /* ty=Tensor[(7, 11, 6), float32] */;
  (%864,)
}

def @func_5899() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %865 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %866 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
  %867 = %865.0;
  (%866, %867)
}

def @func_8249() -> Tensor[(7, 11, 6), float32] {
  @func_6737() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_10260(%var_10246: Tensor[(64, 12), int16]) -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(64, 12), int16]) {
  %868 = cast(%var_10246, dtype="int16") /* ty=Tensor[(64, 12), int16] */;
  %869 = reshape(%868, newshape=[768]) /* ty=Tensor[(768), int16] */;
  %870 = @func_4915(%869) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(768), int16], Tensor[(7, 11, 6), float64]) */;
  %871 = @func_7024() /* ty=Tensor[(7, 11, 6), float32] */;
  %872 = %870.3;
  (%871, %872, %var_10246)
}

def @func_5458(%var_5447: Tensor[(13, 11, 7), float32]) -> Tensor[(13, 11, 7), float32] {
  %873 = cast(%var_5447, dtype="float32") /* ty=Tensor[(13, 11, 7), float32] */;
  atan(%873) /* ty=Tensor[(13, 11, 7), float32] */
}

def @func_6785() -> Tensor[(7, 11, 6), float64] {
  @func_4081() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_3581() -> Tensor[(7, 11, 6), float64] {
  @func_3515() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_9400() -> (Tensor[(7, 11, 6), float32], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) {
  %874 = @func_8899() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %875 = cast(meta[relay.Constant][60] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %876 = reshape(%875, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), float32] */;
  %877 = %874.0;
  %878 = @func_5458(%876) /* ty=Tensor[(13, 11, 7), float32] */;
  (%877, %878, meta[relay.Constant][60] /* ty=Tensor[(1001), float32] */)
}

def @func_10991() -> Tensor[(7, 11, 6), float64] {
  @func_10839() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_4263() -> Tensor[(7, 11, 6), float64] {
  %879 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %880 = cast(%879, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  cos(%880) /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12529() -> (Tensor[(7, 11, 6), float64],) {
  %881 = @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %882 = %881.0;
  (%882,)
}

def @func_11174(%var_11143: Tensor[(10, 16, 3), int32], %var_11144: Tensor[(10, 16, 3), int32]) -> (Tensor[(10, 16, 3), bool], Tensor[(64, 12), int16], Tensor[(768), int16]) {
  %883 = cast(%var_11144, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %884 = shape_of(%var_11143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%var_11143, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = cast(meta[relay.Constant][61] /* ty=Tensor[(768), int16] */, dtype="int16") /* ty=Tensor[(768), int16] */;
  %888 = reshape(%887, newshape=[64, 12]) /* ty=Tensor[(64, 12), int16] */;
  %889 = @func_10260(%888) /* ty=(Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(64, 12), int16]) */;
  %890 = greater_equal(%885, %886) /* ty=Tensor[(10, 16, 3), bool] */;
  %891 = %889.2;
  (%890, %891, meta[relay.Constant][61] /* ty=Tensor[(768), int16] */)
}

def @func_10085() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
  %892 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  %893 = cast(%892, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %894 = reshape(%893, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %895 = cast(%892, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %896 = reshape(%895, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %897 = @func_3901(%896) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %898 = @func_4410(%894) /* ty=Tensor[(7, 11, 6), bool] */;
  %899 = %897.1;
  %900 = @func_8889() /* ty=Tensor[(7, 11, 6), float64] */;
  (%892, %898, %899, %900)
}

def @func_5567(%var_5493: Tensor[(81), float32], %var_5518: Tensor[(3, 420), float64]) -> (Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) {
  %901 = cast(%var_5493, dtype="float32") /* ty=Tensor[(81), float32] */;
  %902 = reshape(%901, newshape=[9, 9, 1]) /* ty=Tensor[(9, 9, 1), float32] */;
  %903 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %904 = %903.0;
  %905 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %906 = %905.0;
  %907 = cast(%906, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %908 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%904, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %911 = cast(%var_5518, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %912 = cast(meta[relay.Constant][62] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %913 = reshape(%911, newshape=[90, 14]) /* ty=Tensor[(90, 14), float64] */;
  %914 = reshape(%912, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %915 = @func_4114(%913, %914) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(90, 14), float64], Tensor[(84), float64]) */;
  %916 = cast(%906, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %917 = cast(meta[relay.Constant][63] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %918 = reshape(%917, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), float32] */;
  %919 = @func_2741(%902) /* ty=Tensor[(9, 9, 11), float32] */;
  %920 = power(%909, %910) /* ty=Tensor[(7, 11, 6), float64] */;
  %921 = %915.0;
  %922 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %923 = acosh(%916) /* ty=Tensor[(7, 11, 6), float64] */;
  %924 = @func_5458(%918) /* ty=Tensor[(13, 11, 7), float32] */;
  (%919, %var_5493, %920, %921, %var_5518, meta[relay.Constant][62] /* ty=Tensor[(84), float64] */, %922, %923, %924, meta[relay.Constant][63] /* ty=Tensor[(1001), float32] */)
}

def @func_880(%var_866: Tensor[(1, 14, 12), float64], %var_872: Tensor[(14, 14, 12), float64]) -> (Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) {
  %925 = cast(%var_866, dtype="float64") /* ty=Tensor[(1, 14, 12), float64] */;
  %926 = log(%925) /* ty=Tensor[(1, 14, 12), float64] */;
  %927 = cast(%926, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
  %928 = cast(%var_866, dtype="int64") /* ty=Tensor[(1, 14, 12), int64] */;
  %929 = cast(%var_872, dtype="int64") /* ty=Tensor[(14, 14, 12), int64] */;
  %930 = acosh(%927) /* ty=Tensor[(1, 14, 12), float32] */;
  %931 = right_shift(%928, %929) /* ty=Tensor[(14, 14, 12), int64] */;
  (%930, %931)
}

def @func_9627(%var_9623: Tensor[(64), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(64), float32]) {
  %932 = @func_9229() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %933 = cast(%var_9623, dtype="float32") /* ty=Tensor[(64), float32] */;
  %934 = reshape(%933, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %935 = @func_5295(%934) /* ty=(Tensor[(4, 1, 16), float32], Tensor[(22), int16], Tensor[(33), uint8], Tensor[(22), int16], Tensor[(7, 11, 6), float64]) */;
  %936 = %932.1;
  %937 = %935.1;
  (%936, %937, %var_9623)
}

def @func_1349(%var_1323: Tensor[(12, 7, 1), float64]) -> (Tensor[(12, 7, 1), float64],) {
  %938 = cast(%var_1323, dtype="float64") /* ty=Tensor[(12, 7, 1), float64] */;
  %939 = atanh(%938) /* ty=Tensor[(12, 7, 1), float64] */;
  (%939,)
}

def @func_4915(%var_4892: Tensor[(768), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(768), int16], Tensor[(7, 11, 6), float64]) {
  %940 = cast(%var_4892, dtype="int16") /* ty=Tensor[(768), int16] */;
  %941 = reshape(%940, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), int16] */;
  %942 = @func_4501(%941) /* ty=(Tensor[(8, 6, 16), int16], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(364), int16]) */;
  %943 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  %944 = %942.3;
  %945 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
  (%943, %944, %var_4892, %945)
}

def @func_9262() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %946 = @func_4439() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %947 = @func_6956() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %948 = %946.0;
  %949 = %947.0;
  (%948, %949)
}

def @func_9851() -> Tensor[(9, 4, 1), float32] {
  %950 = cast(meta[relay.Constant][64] /* ty=Tensor[(9, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 4, 1), float32] */;
  cosh(%950) /* ty=Tensor[(9, 4, 1), float32] */
}

def @func_7875(%var_7869: Tensor[(432, 1), int8]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(432, 1), int8], Tensor[(7, 11, 6), float64]) {
  %951 = cast(%var_7869, dtype="int8") /* ty=Tensor[(432, 1), int8] */;
  %952 = cast(%var_7869, dtype="int8") /* ty=Tensor[(432, 1), int8] */;
  %953 = reshape(%951, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), int8] */;
  %954 = reshape(%952, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), int8] */;
  %955 = @func_5923(%953, %954) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(7, 11, 6), float32]) */;
  %956 = %955.1;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %958 = reshape(%957, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %959 = @func_5237(%958) /* ty=(Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) */;
  %960 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  %961 = %959.1;
  (%960, %956, %var_7869, %961)
}

def @func_9935(%var_9886: Tensor[(6, 16, 9), float64], %var_9929: Tensor[(1, 22), int16], %var_9930: Tensor[(308), int16]) -> (Tensor[(81), float32], Tensor[(81), float32], Tensor[(6, 16, 9), float32], Tensor[(14, 2, 11), bool], Tensor[(1, 22), int16], Tensor[(308), int16]) {
  %962 = cast(meta[relay.Constant][65] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %963 = reshape(%962, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %964 = @func_6237(%963) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(11, 6, 14), float64]) */;
  %965 = @func_6594() /* ty=Tensor[(6, 16, 9), float64] */;
  %966 = cast(%965, dtype="float64") /* ty=Tensor[(6, 16, 9), float64] */;
  %967 = erf(%966) /* ty=Tensor[(6, 16, 9), float64] */;
  %968 = cast(%var_9886, dtype="uint8") /* ty=Tensor[(6, 16, 9), uint8] */;
  %969 = shape_of(%967, dtype="int32") /* ty=Tensor[(3), int32] */;
  %970 = cast(%967, dtype="uint8") /* ty=Tensor[(6, 16, 9), uint8] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %972 = logical_xor(%970, %971) /* ty=Tensor[(6, 16, 9), uint8] */;
  %973 = cast(%972, dtype="float32") /* ty=Tensor[(6, 16, 9), float32] */;
  %974 = cast(%var_9929, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
  %975 = cast(%var_9930, dtype="int16") /* ty=Tensor[(308), int16] */;
  %976 = reshape(%974, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %977 = reshape(%975, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %978 = @func_102(%976, %977) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %979 = %964.1;
  %980 = asinh(%973) /* ty=Tensor[(6, 16, 9), float32] */;
  %981 = %978.0;
  (%979, meta[relay.Constant][65] /* ty=Tensor[(81), float32] */, %980, %981, %var_9929, %var_9930)
}

def @func_3524() -> (Tensor[(7, 11, 6), float64],) {
  %982 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  (%982,)
}

def @func_8524() -> (Tensor[(7, 11, 6), float32],) {
  %983 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %984 = %983.0;
  (%984,)
}

def @func_11515() -> Tensor[(154, 6), float32] {
  %985 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %986 = %985.4;
  %987 = cast(%986, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %988 = exp(%987) /* ty=Tensor[(154, 6), float64] */;
  %989 = cast(%988, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %990 = acos(%989) /* ty=Tensor[(154, 6), float64] */;
  %991 = cast(%990, dtype="float32") /* ty=Tensor[(154, 6), float32] */;
  sinh(%991) /* ty=Tensor[(154, 6), float32] */
}

def @func_3732() -> (Tensor[(7, 11, 6), float32],) {
  %992 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %993 = %992.0;
  (%993,)
}

def @func_3901(%var_3881: Tensor[(7, 11, 6), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
  %994 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %995 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %996 = %995.0;
  %997 = cast(%var_3881, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%996, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1001 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1002 = %1001.0;
  %1003 = cast(%1002, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %1004 = %994.0;
  %1005 = greater_equal(%999, %1000) /* ty=Tensor[(7, 11, 6), bool] */;
  %1006 = erf(%1003) /* ty=Tensor[(7, 11, 6), float64] */;
  (%1004, %1005, %1006)
}

def @func_8727(%var_8721: Tensor[(11, 2), int16], %var_8722: Tensor[(308), int16], %var_8725: Tensor[(81), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(9, 9, 11), float32], Tensor[(81), float32]) {
  %1007 = @func_8539() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %1008 = cast(5.29262f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1009 = cast(%var_8721, dtype="int16") /* ty=Tensor[(11, 2), int16] */;
  %1010 = cast(%var_8722, dtype="int16") /* ty=Tensor[(308), int16] */;
  %1011 = reshape(%1008, newshape=[]) /* ty=float32 */;
  %1012 = reshape(%1009, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %1013 = reshape(%1010, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %1014 = @func_216(%1011, %1012, %1013) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
  %1015 = cast(%var_8725, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1016 = reshape(%1015, newshape=[9, 9, 1]) /* ty=Tensor[(9, 9, 1), float32] */;
  %1017 = %1007.1;
  %1018 = %1014.3;
  %1019 = @func_2741(%1016) /* ty=Tensor[(9, 9, 11), float32] */;
  (%1017, %1018, 5.29262f /* ty=float32 */, %var_8721, %var_8722, %1019, %var_8725)
}

def @func_9229() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %1020 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1021 = %1020.0;
  %1022 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  %1023 = @func_5485() /* ty=Tensor[(7, 11, 6), float64] */;
  (%1021, %1022, %1023)
}

def @func_9037(%var_9030: Tensor[(432), int8]) -> (Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8], Tensor[(432), int8]) {
  %1024 = @func_8697() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1025 = cast(%var_9030, dtype="int8") /* ty=Tensor[(432), int8] */;
  %1026 = reshape(%1025, newshape=[432, 1]) /* ty=Tensor[(432, 1), int8] */;
  %1027 = @func_7875(%1026) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(432, 1), int8], Tensor[(7, 11, 6), float64]) */;
  %1028 = %1024.0;
  %1029 = %1027.2;
  (%1028, %1029, %var_9030)
}

def @func_3515() -> Tensor[(7, 11, 6), float64] {
  %1030 = cast(meta[relay.Constant][66] /* ty=Tensor[(7, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %1031 = rsqrt(%1030) /* ty=Tensor[(7, 11, 6), float32] */;
  %1032 = cast(meta[relay.Constant][66] /* ty=Tensor[(7, 11, 6), float32] */, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %1033 = shape_of(%1031, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%1031, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%1034, %1035) /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_5677() -> Tensor[(7, 11, 6), float64] {
  @func_4081() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12218(%var_12188: Tensor[(225), float32], %var_12189: Tensor[(168), float64], %var_12190: Tensor[(84, 28), float64]) -> (Tensor[(7, 11, 6), float64], int16, Tensor[(1694), int16], Tensor[(7, 11, 6), float64], Tensor[(225), float32], Tensor[(168), float64], Tensor[(84, 28), float64], Tensor[(1260), float64], Tensor[(11, 14, 11), float64], Tensor[(7, 11, 6), float64]) {
  %1036 = @func_4439() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1037 = cast(%var_12188, dtype="float32") /* ty=Tensor[(225), float32] */;
  %1038 = cast(%var_12189, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1039 = cast(%var_12190, dtype="float64") /* ty=Tensor[(84, 28), float64] */;
  %1040 = cast(meta[relay.Constant][69] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1041 = reshape(%1037, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %1042 = reshape(%1038, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %1043 = reshape(%1039, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
  %1044 = reshape(%1040, newshape=[18, 70]) /* ty=Tensor[(18, 70), float64] */;
  %1045 = @func_4711(%1041, %1042, %1043, %1044) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), bool], Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(72, 2), float32], Tensor[(15, ?, 15), bool], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(22), int16], Tensor[(18, 70), float64]) */;
  %1046 = cast(meta[relay.Constant][67] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1047 = cast(meta[relay.Constant][68] /* ty=Tensor[(1694), int16] */, dtype="int16") /* ty=Tensor[(1694), int16] */;
  %1048 = reshape(%1046, newshape=[]) /* ty=int16 */;
  %1049 = reshape(%1047, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), int16] */;
  %1050 = @func_12164(%1048, %1049) /* ty=(Tensor[(11, 14, 11), int16],) */;
  %1051 = %1050.0;
  %1052 = cast(%1051, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  %1053 = @func_9229() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %1054 = %1036.0;
  %1055 = %1045.0;
  %1056 = exp(%1052) /* ty=Tensor[(11, 14, 11), float64] */;
  %1057 = %1053.2;
  (%1054, meta[relay.Constant][67] /* ty=int16 */, meta[relay.Constant][68] /* ty=Tensor[(1694), int16] */, %1055, %var_12188, %var_12189, %var_12190, meta[relay.Constant][69] /* ty=Tensor[(1260), float64] */, %1056, %1057)
}

def @func_4006(%var_3973: Tensor[(7, 15, 3), float64], %var_3989: Tensor[(81), float32], %var_3992: Tensor[(22), int16]) -> (Tensor[(7, 15, 3), float64], Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 3, 8), float32], Tensor[(22), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64]) {
  %1058 = cast(%var_3973, dtype="float64") /* ty=Tensor[(7, 15, 3), float64] */;
  %1059 = cast(%var_3989, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1060 = reshape(%1059, newshape=[9, 9, 1]) /* ty=Tensor[(9, 9, 1), float32] */;
  %1061 = cast(%var_3992, dtype="int16") /* ty=Tensor[(22), int16] */;
  %1062 = cast(meta[relay.Constant][70] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %1063 = reshape(%1061, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %1064 = reshape(%1062, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %1065 = @func_1899(%1063, %1064) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %1066 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1067 = cos(%1058) /* ty=Tensor[(7, 15, 3), float64] */;
  %1068 = @func_2741(%1060) /* ty=Tensor[(9, 9, 11), float32] */;
  %1069 = %1065.0;
  %1070 = %1066.0;
  (%1067, %1068, %var_3989, %1069, %var_3992, meta[relay.Constant][70] /* ty=Tensor[(308), int16] */, %1070)
}

def @func_5050() -> Tensor[(7, 11, 6), float64] {
  %1071 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %1072 = cast(%1071, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  sqrt(%1072) /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_4848() -> (Tensor[(7, 11, 6), float64],) {
  %1073 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  (%1073,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10542(%var_10538: Tensor[(22), int16], %var_10539: Tensor[(77, 4), int16], %var_10540: Tensor[(77, 4), int16], %var_10541: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), bool], Tensor[(99, 3), int16], Tensor[(22), int16], Tensor[(11, 9, 3), bool], Tensor[(77, 4), bool], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
  @func_10536(%var_10538, %var_10539, %var_10540, %var_10541) /* ty=(Tensor[(7, 11, 6), bool], Tensor[(99, 3), int16], Tensor[(22), int16], Tensor[(11, 9, 3), bool], Tensor[(77, 4), bool], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) */
}

def @func_12268() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32]) {
  %3 = fn () -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32]) {
    %0 = @func_8899() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %1 = @func_5050() /* ty=Tensor[(7, 11, 6), float64] */;
    %2 = %0.0;
    (%1, %2)
  };
  %3() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32]) */
}

def @func_6958() -> (Tensor[(7, 11, 6), float64],) {
  @func_6956() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_9954() -> Tensor[(144), uint32] {
  %4 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %4.2
}

def @func_7081() -> (Tensor[(7, 11, 6), float64],) {
  %5 = @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %6 = %5.0;
  (%6,)
}

def @func_972(%var_970: Tensor[(11, 9, 3), int16]) -> Tensor[(11, 9, 3), bool] {
  @func_969(%var_970) /* ty=Tensor[(11, 9, 3), bool] */
}

def @func_2471(%var_2468: Tensor[(3, 11, 6), float64], %var_2469: Tensor[(3, 11, 6), float64], %var_2470: Tensor[(182, 2), int16]) -> (Tensor[(3, 11, 6), float64], Tensor[(168), float64], Tensor[(182, 2), int16], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16], Tensor[(3, 11, 6), float64], Tensor[(14, 2, 11), float64], float32) {
  @func_2466(%var_2468, %var_2469, %var_2470) /* ty=(Tensor[(3, 11, 6), float64], Tensor[(168), float64], Tensor[(182, 2), int16], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16], Tensor[(3, 11, 6), float64], Tensor[(14, 2, 11), float64], float32) */
}

def @func_883(%var_881: Tensor[(1, 14, 12), float64], %var_882: Tensor[(14, 14, 12), float64]) -> (Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) {
  %14 = fn (%var_866: Tensor[(1, 14, 12), float64], %var_872: Tensor[(14, 14, 12), float64]) -> (Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) {
    %7 = cast(%var_866, dtype="float64") /* ty=Tensor[(1, 14, 12), float64] */;
    %8 = log(%7) /* ty=Tensor[(1, 14, 12), float64] */;
    %9 = cast(%8, dtype="float32") /* ty=Tensor[(1, 14, 12), float32] */;
    %10 = cast(%var_866, dtype="int64") /* ty=Tensor[(1, 14, 12), int64] */;
    %11 = cast(%var_872, dtype="int64") /* ty=Tensor[(14, 14, 12), int64] */;
    %12 = acosh(%9) /* ty=Tensor[(1, 14, 12), float32] */;
    %13 = right_shift(%10, %11) /* ty=Tensor[(14, 14, 12), int64] */;
    (%12, %13)
  };
  %14(%var_881, %var_882) /* ty=(Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) */
}

def @func_4767(%var_4749: Tensor[(12, 1, 11), float64]) -> Tensor[(12, 1, 11), float64] {
  %15 = cast(%var_4749, dtype="float64") /* ty=Tensor[(12, 1, 11), float64] */;
  atanh(%15) /* ty=Tensor[(12, 1, 11), float64] */
}

def @func_8524() -> (Tensor[(7, 11, 6), float32],) {
  %16 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %17 = %16.0;
  (%17,)
}

def @func_8502() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool]) {
  @func_8500() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool]) */
}

def @func_8814() -> Tensor[(7, 11, 6), float64] {
  %18 = fn () -> Tensor[(7, 11, 6), float64] {
    @func_3581() /* ty=Tensor[(7, 11, 6), float64] */
  };
  %18() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_9040(%var_9038: Tensor[(432), int8]) -> (Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8], Tensor[(432), int8]) {
  @func_9037(%var_9038) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8], Tensor[(432), int8]) */
}

def @func_3517() -> Tensor[(7, 11, 6), float64] {
  @func_3515() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_4011(%var_4008: Tensor[(7, 15, 3), float64], %var_4009: Tensor[(81), float32], %var_4010: Tensor[(22), int16]) -> (Tensor[(7, 15, 3), float64], Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 3, 8), float32], Tensor[(22), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64]) {
  @func_4006(%var_4008, %var_4009, %var_4010) /* ty=(Tensor[(7, 15, 3), float64], Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 3, 8), float32], Tensor[(22), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64]) */
}

def @func_7032() -> Tensor[(7, 11, 6), float32] {
  @func_6737() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_4503(%var_4502: Tensor[(8, 6, 16), int16]) -> (Tensor[(8, 6, 16), int16], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(364), int16]) {
  %29 = fn (%var_4480: Tensor[(8, 6, 16), int16]) -> (Tensor[(8, 6, 16), int16], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(364), int16]) {
    %19 = cast(%var_4480, dtype="int16") /* ty=Tensor[(8, 6, 16), int16] */;
    %20 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 16), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 6, 16), int16] */, dtype="int16") /* ty=Tensor[(8, 6, 16), int16] */;
    %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(364), int16] */, dtype="int16") /* ty=Tensor[(364), int16] */;
    %24 = reshape(%23, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), int16] */;
    %25 = @func_1801(%24) /* ty=(Tensor[(13, 7, 4), bool], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64]) */;
    %26 = subtract(%21, %22) /* ty=Tensor[(8, 6, 16), int16] */;
    %27 = @func_4469() /* ty=Tensor[(7, 11, 6), float64] */;
    %28 = %25.2;
    (%26, %27, %28, meta[relay.Constant][1] /* ty=Tensor[(364), int16] */)
  };
  %29(%var_4502) /* ty=(Tensor[(8, 6, 16), int16], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(364), int16]) */
}

def @func_9532() -> (Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8]) {
  @func_9530() /* ty=(Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8]) */
}

def @func_11777(%var_11776: Tensor[(11, 9, 3), bool]) -> (Tensor[(11, 9, 3), uint16], Tensor[(11, 9, 3), float32]) {
  %39 = fn (%var_11754: Tensor[(11, 9, 3), bool]) -> (Tensor[(11, 9, 3), uint16], Tensor[(11, 9, 3), float32]) {
    %30 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
    %31 = %30.0;
    %32 = cast(%var_11754, dtype="uint16") /* ty=Tensor[(11, 9, 3), uint16] */;
    %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
    %34 = cast(%31, dtype="uint16") /* ty=Tensor[(11, 9, 3), uint16] */;
    %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %36 = cast(%var_11754, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
    %37 = right_shift(%34, %35) /* ty=Tensor[(11, 9, 3), uint16] */;
    %38 = cos(%36) /* ty=Tensor[(11, 9, 3), float32] */;
    (%37, %38)
  };
  %39(%var_11776) /* ty=(Tensor[(11, 9, 3), uint16], Tensor[(11, 9, 3), float32]) */
}

def @func_5109(%var_5104: Tensor[(22), int16], %var_5105: Tensor[(308), int16]) -> (Tensor[(99, 3), int16], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) {
  %40 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
  %41 = cast(%var_5104, dtype="int16") /* ty=Tensor[(22), int16] */;
  %42 = cast(%var_5105, dtype="int16") /* ty=Tensor[(308), int16] */;
  %43 = reshape(%41, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %44 = reshape(%42, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %45 = @func_102(%43, %44) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %46 = %40.2;
  %47 = %45.1;
  (%46, %47, %var_5104, %var_5105)
}

def @func_6558() -> (Tensor[(7, 11, 6), float64],) {
  %48 = @func_4469() /* ty=Tensor[(7, 11, 6), float64] */;
  (%48,)
}

def @func_9310(%var_9308: Tensor[(225), float32], %var_9309: Tensor[(2352), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(84), float64], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64]) {
  %58 = fn (%var_9297: Tensor[(225), float32], %var_9299: Tensor[(2352), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(84), float64], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64]) {
    %49 = cast(%var_9297, dtype="float32") /* ty=Tensor[(225), float32] */;
    %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %51 = cast(%var_9299, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %52 = reshape(%49, newshape=[15, 1, 15]) /* ty=Tensor[(15, 1, 15), float32] */;
    %53 = reshape(%50, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %54 = reshape(%51, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
    %55 = @func_2791(%52, %53, %54) /* ty=(Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(15, ?, 15), bool], Tensor[(12, 7, 1), float64], Tensor[(84), float64]) */;
    %56 = @func_4469() /* ty=Tensor[(7, 11, 6), float64] */;
    %57 = %55.5;
    (%56, %57, %var_9297, meta[relay.Constant][2] /* ty=Tensor[(168), float64] */, %var_9299)
  };
  %58(%var_9308, %var_9309) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(84), float64], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64]) */
}

def @func_7026() -> Tensor[(7, 11, 6), float32] {
  @func_7024() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_10801() -> (Tensor[(7, 11, 6), float64],) {
  %59 = @func_5677() /* ty=Tensor[(7, 11, 6), float64] */;
  (%59,)
}

def @func_7985() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %60 = @func_5899() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %61 = @func_5050() /* ty=Tensor[(7, 11, 6), float64] */;
  %62 = %60.0;
  (%61, %62)
}

def @func_5239(%var_5238: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) {
  %71 = fn (%var_5219: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) {
    %63 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %64 = %63.0;
    %65 = cast(%var_5219, dtype="int64") /* ty=Tensor[(7, 11, 6), int64] */;
    %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%64, dtype="int64") /* ty=Tensor[(7, 11, 6), int64] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %69 = subtract(%67, %68) /* ty=Tensor[(7, 11, 6), int64] */;
    %70 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
    (%69, %70)
  };
  %71(%var_5238) /* ty=(Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) */
}

def @func_3554(%var_3548: Tensor[(22), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(22), int16], Tensor[(77, 4), int16]) {
  %72 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %73 = cast(-9.53876f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %74 = cast(%var_3548, dtype="int16") /* ty=Tensor[(22), int16] */;
  %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(77, 4), int16] */, dtype="int16") /* ty=Tensor[(77, 4), int16] */;
  %76 = reshape(%73, newshape=[]) /* ty=float32 */;
  %77 = reshape(%74, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %78 = reshape(%75, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %79 = @func_216(%76, %77, %78) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
  %80 = %72.0;
  %81 = %79.3;
  (%80, %81, -9.53876f /* ty=float32 */, %var_3548, meta[relay.Constant][3] /* ty=Tensor[(77, 4), int16] */)
}

def @func_9231() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  @func_9229() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_9629(%var_9628: Tensor[(64), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(64), float32]) {
  %88 = fn (%var_9623: Tensor[(64), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(64), float32]) {
    %82 = @func_9229() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
    %83 = cast(%var_9623, dtype="float32") /* ty=Tensor[(64), float32] */;
    %84 = reshape(%83, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
    %85 = @func_5295(%84) /* ty=(Tensor[(4, 1, 16), float32], Tensor[(22), int16], Tensor[(33), uint8], Tensor[(22), int16], Tensor[(7, 11, 6), float64]) */;
    %86 = %82.1;
    %87 = %85.1;
    (%86, %87, %var_9623)
  };
  %88(%var_9628) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(64), float32]) */
}

def @func_9037(%var_9030: Tensor[(432), int8]) -> (Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8], Tensor[(432), int8]) {
  %89 = @func_8697() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %90 = cast(%var_9030, dtype="int8") /* ty=Tensor[(432), int8] */;
  %91 = reshape(%90, newshape=[432, 1]) /* ty=Tensor[(432, 1), int8] */;
  %92 = @func_7875(%91) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(432, 1), int8], Tensor[(7, 11, 6), float64]) */;
  %93 = %89.0;
  %94 = %92.2;
  (%93, %94, %var_9030)
}

def @func_4918(%var_4916: Tensor[(768), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(768), int16], Tensor[(7, 11, 6), float64]) {
  @func_4915(%var_4916) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(768), int16], Tensor[(7, 11, 6), float64]) */
}

def @func_969(%var_958: Tensor[(11, 9, 3), int16]) -> Tensor[(11, 9, 3), bool] {
  %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 9, 3), int16] */, dtype="bool") /* ty=Tensor[(11, 9, 3), bool] */;
  %96 = shape_of(%var_958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%var_958, dtype="bool") /* ty=Tensor[(11, 9, 3), bool] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%97, %98) /* ty=Tensor[(11, 9, 3), bool] */
}

def @func_8890() -> Tensor[(7, 11, 6), float64] {
  %100 = fn () -> Tensor[(7, 11, 6), float64] {
    %99 = @func_4826() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %99.0
  };
  %100() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_7122(%var_7104: Tensor[(6, 8, 5), uint16]) -> (Tensor[(6, 8, 5), uint16], Tensor[(6, 8, 5), float64]) {
  %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 8, 5), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 5), uint16] */;
  %102 = shape_of(%var_7104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%var_7104, dtype="uint16") /* ty=Tensor[(6, 8, 5), uint16] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %105 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 8, 5), uint16] */, dtype="float64") /* ty=Tensor[(6, 8, 5), float64] */;
  %106 = right_shift(%103, %104) /* ty=Tensor[(6, 8, 5), uint16] */;
  %107 = asin(%105) /* ty=Tensor[(6, 8, 5), float64] */;
  (%106, %107)
}

def @func_6858(%var_6851: Tensor[(3, 16, 11), int32], %var_6852: Tensor[(3, 16, 11), int32]) -> (Tensor[(3, 16, 11), bool],) {
  %108 = cast(%var_6852, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %109 = shape_of(%var_6851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%var_6851, dtype="bool") /* ty=Tensor[(3, 16, 11), bool] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %112 = less(%110, %111) /* ty=Tensor[(3, 16, 11), bool] */;
  (%112,)
}

def @func_3526() -> (Tensor[(7, 11, 6), float64],) {
  @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_10206() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %116 = fn () -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
    %113 = @func_8373() /* ty=(Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64]) */;
    %114 = @func_5677() /* ty=Tensor[(7, 11, 6), float64] */;
    %115 = %113.1;
    (%114, %115)
  };
  %116() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_102(%var_85: Tensor[(1, 2, 11), int16], %var_86: Tensor[(14, 2, 11), int16]) -> (Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) {
  %117 = cast(%var_85, dtype="bool") /* ty=Tensor[(1, 2, 11), bool] */;
  %118 = cast(%var_86, dtype="bool") /* ty=Tensor[(14, 2, 11), bool] */;
  %119 = cast(%var_86, dtype="float64") /* ty=Tensor[(14, 2, 11), float64] */;
  %120 = cast(%var_85, dtype="float64") /* ty=Tensor[(1, 2, 11), float64] */;
  %121 = not_equal(%117, %118) /* ty=Tensor[(14, 2, 11), bool] */;
  %122 = power(%119, %120) /* ty=Tensor[(14, 2, 11), float64] */;
  (%121, %122)
}

def @func_4717(%var_4713: Tensor[(225), float32], %var_4714: Tensor[(168), float64], %var_4715: Tensor[(2352), float64], %var_4716: Tensor[(18, 70), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), bool], Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(72, 2), float32], Tensor[(15, ?, 15), bool], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(22), int16], Tensor[(18, 70), float64]) {
  @func_4711(%var_4713, %var_4714, %var_4715, %var_4716) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), bool], Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(72, 2), float32], Tensor[(15, ?, 15), bool], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(22), int16], Tensor[(18, 70), float64]) */
}

def @func_11712() -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32]) {
  @func_11710() /* ty=(Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32]) */
}

def @func_831(%var_829: Tensor[(3, 11, 1), uint8], %var_830: Tensor[(22), int16]) -> (Tensor[(3, 11, 1), uint8], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(77, 4), int16], Tensor[(14, 2, 11), float32]) {
  %149 = fn (%var_803: Tensor[(3, 11, 1), uint8], %var_808: Tensor[(22), int16]) -> (Tensor[(3, 11, 1), uint8], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(77, 4), int16], Tensor[(14, 2, 11), float32]) {
    %123 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %124 = cast(%var_803, dtype="uint8") /* ty=Tensor[(3, 11, 1), uint8] */;
    %125 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="float32") /* ty=float32 */;
    %126 = cast(%var_808, dtype="int16") /* ty=Tensor[(22), int16] */;
    %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(77, 4), int16] */, dtype="int16") /* ty=Tensor[(77, 4), int16] */;
    %128 = reshape(%125, newshape=[]) /* ty=float32 */;
    %129 = reshape(%126, newshape=[22]) /* ty=Tensor[(22), int16] */;
    %130 = reshape(%127, newshape=[308]) /* ty=Tensor[(308), int16] */;
    %131 = @func_216(%128, %129, %130) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
    %132 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="float32") /* ty=float32 */;
    %133 = cast(%var_808, dtype="int16") /* ty=Tensor[(22), int16] */;
    %134 = %131.4;
    %135 = cast(%134, dtype="int16") /* ty=Tensor[(14, 2, 11), int16] */;
    %136 = reshape(%132, newshape=[]) /* ty=float32 */;
    %137 = reshape(%133, newshape=[22]) /* ty=Tensor[(22), int16] */;
    %138 = reshape(%135, newshape=[308]) /* ty=Tensor[(308), int16] */;
    %139 = @func_216(%136, %137, %138) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
    %140 = %139.1;
    %141 = cast(%140, dtype="float64") /* ty=Tensor[(14, 2, 11), float64] */;
    %142 = cosh(%141) /* ty=Tensor[(14, 2, 11), float64] */;
    %143 = cast(%140, dtype="float32") /* ty=Tensor[(14, 2, 11), float32] */;
    %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
    %145 = cast(%142, dtype="float32") /* ty=Tensor[(14, 2, 11), float32] */;
    %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %147 = bitwise_xor(%123, %124) /* ty=Tensor[(3, 11, 1), uint8] */;
    %148 = divide(%145, %146) /* ty=Tensor[(14, 2, 11), float32] */;
    (%147, %134, %var_808, meta[relay.Constant][7] /* ty=Tensor[(77, 4), int16] */, %148)
  };
  %149(%var_829, %var_830) /* ty=(Tensor[(3, 11, 1), uint8], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(77, 4), int16], Tensor[(14, 2, 11), float32]) */
}

def @func_3826() -> (Tensor[(7, 11, 6), float64],) {
  @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_10420(%var_10416: Tensor[(12, 15, 14), float32], %var_10417: Tensor[(12, 15, 14), float32], %var_10418: Tensor[(81), float32], %var_10419: Tensor[(1260), float64]) -> (Tensor[(12, 15, 14), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(768), int16], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
  @func_10414(%var_10416, %var_10417, %var_10418, %var_10419) /* ty=(Tensor[(12, 15, 14), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(768), int16], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) */
}

def @func_3257(%var_3255: Tensor[(11, 6, 14), float64]) -> (Tensor[(11, 6, 14), float64], Tensor[(22), int16], Tensor[(22), int16], Tensor[(308), int16]) {
  @func_3254(%var_3255) /* ty=(Tensor[(11, 6, 14), float64], Tensor[(22), int16], Tensor[(22), int16], Tensor[(308), int16]) */
}

def @func_4744() -> (Tensor[(6, 16, 9), float64],) {
  @func_4742() /* ty=(Tensor[(6, 16, 9), float64],) */
}

def @func_1352(%var_1350: Tensor[(12, 7, 1), float64]) -> (Tensor[(12, 7, 1), float64],) {
  @func_1349(%var_1350) /* ty=(Tensor[(12, 7, 1), float64],) */
}

def @func_5856() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
  @func_5854() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */
}

def @func_9541() -> Tensor[(7, 11, 6), float64] {
  @func_9539() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_9723() -> (Tensor[(7, 11, 6), bool],) {
  @func_9721() /* ty=(Tensor[(7, 11, 6), bool],) */
}

def @func_12038() -> (Tensor[(7, 11, 6), float32], Tensor[(10, 10, 6), float32], Tensor[(600), float32], Tensor[(7, 11, 6), int64]) {
  %150 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %151 = cast(meta[relay.Constant][8] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %152 = reshape(%151, newshape=[10, 10, 6]) /* ty=Tensor[(10, 10, 6), float32] */;
  %153 = %150.0;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %155 = reshape(%154, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %156 = @func_5237(%155) /* ty=(Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) */;
  %157 = @func_11319(%152) /* ty=Tensor[(10, 10, 6), float32] */;
  %158 = %156.0;
  (%153, %157, meta[relay.Constant][8] /* ty=Tensor[(600), float32] */, %158)
}

def @func_9598(%var_9596: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
  @func_9595(%var_9596) /* ty=(Tensor[(8, 2, 13), float32],) */
}

def @func_9580() -> Tensor[(7, 11, 6), float64] {
  %160 = fn () -> Tensor[(7, 11, 6), float64] {
    %159 = @func_5854() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
    %159.0
  };
  %160() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12164(%var_12159: int16, %var_12160: Tensor[(11, 14, 11), int16]) -> (Tensor[(11, 14, 11), int16],) {
  %161 = cast(%var_12159, dtype="int16") /* ty=int16 */;
  %162 = cast(%var_12160, dtype="int16") /* ty=Tensor[(11, 14, 11), int16] */;
  %163 = subtract(%161, %162) /* ty=Tensor[(11, 14, 11), int16] */;
  (%163,)
}

def @func_5372() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) {
  @func_5370() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_6530() -> (Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %169 = fn () -> (Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
    %164 = @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */;
    %165 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %166 = %164.0;
    %167 = %165.0;
    %168 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
    (%166, %167, %168)
  };
  %169() /* ty=(Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_8526() -> (Tensor[(7, 11, 6), float32],) {
  @func_8524() /* ty=(Tensor[(7, 11, 6), float32],) */
}

def @func_8798() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %172 = fn () -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
    %170 = @func_5050() /* ty=Tensor[(7, 11, 6), float64] */;
    %171 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
    (%170, %171)
  };
  %172() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_10839() -> Tensor[(7, 11, 6), float64] {
  %173 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %173.0
}

def @func_4471() -> Tensor[(7, 11, 6), float64] {
  @func_4469() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12357() -> Tensor[(7, 11, 6), float64] {
  %174 = fn () -> Tensor[(7, 11, 6), float64] {
    @func_5136() /* ty=Tensor[(7, 11, 6), float64] */
  };
  %174() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_11177(%var_11175: Tensor[(10, 16, 3), int32], %var_11176: Tensor[(10, 16, 3), int32]) -> (Tensor[(10, 16, 3), bool], Tensor[(64, 12), int16], Tensor[(768), int16]) {
  %184 = fn (%var_11143: Tensor[(10, 16, 3), int32], %var_11144: Tensor[(10, 16, 3), int32]) -> (Tensor[(10, 16, 3), bool], Tensor[(64, 12), int16], Tensor[(768), int16]) {
    %175 = cast(%var_11144, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
    %176 = shape_of(%var_11143, dtype="int32") /* ty=Tensor[(3), int32] */;
    %177 = cast(%var_11143, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
    %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(768), int16] */, dtype="int16") /* ty=Tensor[(768), int16] */;
    %180 = reshape(%179, newshape=[64, 12]) /* ty=Tensor[(64, 12), int16] */;
    %181 = @func_10260(%180) /* ty=(Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(64, 12), int16]) */;
    %182 = greater_equal(%177, %178) /* ty=Tensor[(10, 16, 3), bool] */;
    %183 = %181.2;
    (%182, %183, meta[relay.Constant][9] /* ty=Tensor[(768), int16] */)
  };
  %184(%var_11175, %var_11176) /* ty=(Tensor[(10, 16, 3), bool], Tensor[(64, 12), int16], Tensor[(768), int16]) */
}

def @func_6314(%var_6306: Tensor[(1, 1050), bool], %var_6307: Tensor[(168), float64]) -> (Tensor[(7, 11, 6), float32], Tensor[(4, 588), float64], Tensor[(1, 1050), bool], Tensor[(168), float64], Tensor[(7, 11, 6), float64]) {
  %185 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %186 = cast(%var_6306, dtype="bool") /* ty=Tensor[(1, 1050), bool] */;
  %187 = cast(%var_6307, dtype="float64") /* ty=Tensor[(168), float64] */;
  %188 = reshape(%186, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), bool] */;
  %189 = reshape(%187, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %190 = @func_4235(%188, %189) /* ty=(Tensor[(14, 15, 5), bool], Tensor[(14, 15, 5), float32], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(4, 588), float64], Tensor[(7, 11, 6), float64]) */;
  %191 = @func_5370() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) */;
  %192 = %185.0;
  %193 = %190.4;
  %194 = %191.0;
  (%192, %193, %var_6306, %var_6307, %194)
}

def @func_8068() -> (Tensor[(7, 11, 6), bool],) {
  %197 = fn () -> (Tensor[(7, 11, 6), bool],) {
    %195 = @func_7649() /* ty=(Tensor[(7, 11, 6), bool],) */;
    %196 = %195.0;
    (%196,)
  };
  %197() /* ty=(Tensor[(7, 11, 6), bool],) */
}

def @func_5854() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
  %198 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %199 = %198.0;
  %200 = cast(%199, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %201 = reshape(%200, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %202 = @func_4157(%201) /* ty=(Tensor[(7, 11, 6), bool],) */;
  %203 = @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %204 = %202.0;
  %205 = %203.0;
  (%199, %204, %205)
}

def @func_9478() -> (Tensor[(7, 11, 6), float64],) {
  %208 = fn () -> (Tensor[(7, 11, 6), float64],) {
    %206 = @func_8539() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
    %207 = %206.0;
    (%207,)
  };
  %208() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_2466(%var_2398: Tensor[(3, 11, 6), float64], %var_2399: Tensor[(3, 11, 6), float64], %var_2426: Tensor[(182, 2), int16]) -> (Tensor[(3, 11, 6), float64], Tensor[(168), float64], Tensor[(182, 2), int16], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16], Tensor[(3, 11, 6), float64], Tensor[(14, 2, 11), float64], float32) {
  %209 = cast(%var_2399, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %210 = shape_of(%var_2398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%var_2398, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %213 = cast(%var_2426, dtype="int16") /* ty=Tensor[(182, 2), int16] */;
  %214 = reshape(%213, newshape=[13, 7, 4]) /* ty=Tensor[(13, 7, 4), int16] */;
  %215 = @func_1801(%214) /* ty=(Tensor[(13, 7, 4), bool], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64]) */;
  %216 = cast(meta[relay.Constant][10] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %217 = cast(meta[relay.Constant][11] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %218 = reshape(%216, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %219 = reshape(%217, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %220 = @func_1899(%218, %219) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %221 = cast(%var_2399, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %222 = cosh(%221) /* ty=Tensor[(3, 11, 6), float64] */;
  %223 = cast(%var_2399, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%222, dtype="float64") /* ty=Tensor[(3, 11, 6), float64] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %227 = cast(-5.0849f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %228 = cast(meta[relay.Constant][10] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %229 = cast(meta[relay.Constant][11] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %230 = reshape(%227, newshape=[]) /* ty=float32 */;
  %231 = reshape(%228, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %232 = reshape(%229, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %233 = @func_216(%230, %231, %232) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
  %234 = power(%211, %212) /* ty=Tensor[(3, 11, 6), float64] */;
  %235 = %215.2;
  %236 = %220.3;
  %237 = divide(%225, %226) /* ty=Tensor[(3, 11, 6), float64] */;
  %238 = %233.1;
  (%234, %235, %var_2426, %236, meta[relay.Constant][10] /* ty=Tensor[(22), int16] */, meta[relay.Constant][11] /* ty=Tensor[(308), int16] */, %237, %238, -5.0849f /* ty=float32 */)
}

def @func_4612() -> Tensor[(6, 16, 9), float64] {
  %239 = fn () -> Tensor[(6, 16, 9), float64] {
    @func_4325() /* ty=Tensor[(6, 16, 9), float64] */
  };
  %239() /* ty=Tensor[(6, 16, 9), float64] */
}

def @func_10336() -> Tensor[(7, 11, 6), float64] {
  %241 = fn () -> Tensor[(7, 11, 6), float64] {
    %240 = @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %240.0
  };
  %241() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_4044() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) {
  %247 = fn () -> (Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) {
    %242 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %243 = cast(meta[relay.Constant][12] /* ty=Tensor[(99, 3), int16] */, dtype="int16") /* ty=Tensor[(99, 3), int16] */;
    %244 = reshape(%243, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), int16] */;
    %245 = %242.0;
    %246 = @func_969(%244) /* ty=Tensor[(11, 9, 3), bool] */;
    (%245, %246, meta[relay.Constant][12] /* ty=Tensor[(99, 3), int16] */)
  };
  %247() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */
}

def @func_9015(%var_9012: Tensor[(11, 6, 14), float64], %var_9013: Tensor[(1260), float64], %var_9014: Tensor[(308), int16]) -> (Tensor[(11, 9, 3), bool], Tensor[(11, 6, 14), int8], Tensor[(7, 11, 6), float64], Tensor[(462), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 2, 3), float32], Tensor[(42), float32], Tensor[(11, 6, 14), bool], Tensor[(7, 15, 12), float64], Tensor[(1260), float64], Tensor[(3, 28), float64], Tensor[(7, 3, 8), float32], Tensor[(1, 22), int16], Tensor[(308), int16]) {
  %289 = fn (%var_8909: Tensor[(11, 6, 14), float64], %var_8984: Tensor[(1260), float64], %var_8999: Tensor[(308), int16]) -> (Tensor[(11, 9, 3), bool], Tensor[(11, 6, 14), int8], Tensor[(7, 11, 6), float64], Tensor[(462), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 2, 3), float32], Tensor[(42), float32], Tensor[(11, 6, 14), bool], Tensor[(7, 15, 12), float64], Tensor[(1260), float64], Tensor[(3, 28), float64], Tensor[(7, 3, 8), float32], Tensor[(1, 22), int16], Tensor[(308), int16]) {
    %248 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
    %249 = @func_7922() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(924), float64]) */;
    %250 = %249.1;
    %251 = cast(%var_8909, dtype="int8") /* ty=Tensor[(11, 6, 14), int8] */;
    %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%250, dtype="int8") /* ty=Tensor[(11, 6, 14), int8] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %255 = cast(meta[relay.Constant][13] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
    %256 = reshape(%255, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
    %257 = @func_3901(%256) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
    %258 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %259 = %248.0;
    %260 = cast(%259, dtype="int16") /* ty=Tensor[(11, 9, 3), int16] */;
    %261 = reshape(%260, newshape=[297]) /* ty=Tensor[(297), int16] */;
    %262 = @func_6171(%261) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) */;
    %263 = cast(meta[relay.Constant][14] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %264 = reshape(%263, newshape=[7, 2, 3]) /* ty=Tensor[(7, 2, 3), float32] */;
    %265 = @func_7354(%264) /* ty=(Tensor[(7, 2, 3), float32],) */;
    %266 = cast(%var_8909, dtype="bool") /* ty=Tensor[(11, 6, 14), bool] */;
    %267 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
    %268 = cast(%250, dtype="bool") /* ty=Tensor[(11, 6, 14), bool] */;
    %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %270 = cast(%var_8984, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %271 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 28), float64] */, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
    %272 = reshape(%270, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
    %273 = reshape(%271, newshape=[1, 84]) /* ty=Tensor[(1, 84), float64] */;
    %274 = @func_2131(%272, %273) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
    %275 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 22), int16] */, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
    %276 = cast(%var_8999, dtype="int16") /* ty=Tensor[(308), int16] */;
    %277 = reshape(%275, newshape=[22]) /* ty=Tensor[(22), int16] */;
    %278 = reshape(%276, newshape=[308]) /* ty=Tensor[(308), int16] */;
    %279 = @func_1899(%277, %278) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
    %280 = subtract(%253, %254) /* ty=Tensor[(11, 6, 14), int8] */;
    %281 = %257.2;
    %282 = %258.0;
    %283 = %262.3;
    %284 = @func_6737() /* ty=Tensor[(7, 11, 6), float32] */;
    %285 = %265.0;
    %286 = equal(%268, %269) /* ty=Tensor[(11, 6, 14), bool] */;
    %287 = %274.0;
    %288 = %279.0;
    (%259, %280, %281, meta[relay.Constant][13] /* ty=Tensor[(462), float32] */, %282, %283, %284, %285, meta[relay.Constant][14] /* ty=Tensor[(42), float32] */, %286, %287, %var_8984, meta[relay.Constant][15] /* ty=Tensor[(3, 28), float64] */, %288, meta[relay.Constant][16] /* ty=Tensor[(1, 22), int16] */, %var_8999)
  };
  %289(%var_9012, %var_9013, %var_9014) /* ty=(Tensor[(11, 9, 3), bool], Tensor[(11, 6, 14), int8], Tensor[(7, 11, 6), float64], Tensor[(462), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32], Tensor[(7, 2, 3), float32], Tensor[(42), float32], Tensor[(11, 6, 14), bool], Tensor[(7, 15, 12), float64], Tensor[(1260), float64], Tensor[(3, 28), float64], Tensor[(7, 3, 8), float32], Tensor[(1, 22), int16], Tensor[(308), int16]) */
}

def @func_9595(%var_9589: Tensor[(8, 2, 13), float32]) -> (Tensor[(8, 2, 13), float32],) {
  %290 = cast(%var_9589, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %291 = cos(%290) /* ty=Tensor[(8, 2, 13), float32] */;
  (%291,)
}

def @func_11103() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  @func_11101() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_9401() -> (Tensor[(7, 11, 6), float32], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) {
  %297 = fn () -> (Tensor[(7, 11, 6), float32], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) {
    %292 = @func_8899() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %293 = cast(meta[relay.Constant][17] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
    %294 = reshape(%293, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), float32] */;
    %295 = %292.0;
    %296 = @func_5458(%294) /* ty=Tensor[(13, 11, 7), float32] */;
    (%295, %296, meta[relay.Constant][17] /* ty=Tensor[(1001), float32] */)
  };
  %297() /* ty=(Tensor[(7, 11, 6), float32], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) */
}

def @func_4850() -> (Tensor[(7, 11, 6), float64],) {
  @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_8732(%var_8729: Tensor[(11, 2), int16], %var_8730: Tensor[(308), int16], %var_8731: Tensor[(81), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(9, 9, 11), float32], Tensor[(81), float32]) {
  @func_8727(%var_8729, %var_8730, %var_8731) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(9, 9, 11), float32], Tensor[(81), float32]) */
}

def @func_3824() -> (Tensor[(7, 11, 6), float64],) {
  %298 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %299 = %298.0;
  %300 = cast(%299, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %301 = log(%300) /* ty=Tensor[(7, 11, 6), float32] */;
  %302 = cast(%301, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %303 = acos(%302) /* ty=Tensor[(7, 11, 6), float64] */;
  (%303,)
}

def @func_4440() -> (Tensor[(7, 11, 6), float64],) {
  %306 = fn () -> (Tensor[(7, 11, 6), float64],) {
    %304 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
    %305 = %304.0;
    (%305,)
  };
  %306() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_5460(%var_5459: Tensor[(13, 11, 7), float32]) -> Tensor[(13, 11, 7), float32] {
  %308 = fn (%var_5447: Tensor[(13, 11, 7), float32]) -> Tensor[(13, 11, 7), float32] {
    %307 = cast(%var_5447, dtype="float32") /* ty=Tensor[(13, 11, 7), float32] */;
    atan(%307) /* ty=Tensor[(13, 11, 7), float32] */
  };
  %308(%var_5459) /* ty=Tensor[(13, 11, 7), float32] */
}

def @func_9956() -> Tensor[(144), uint32] {
  @func_9954() /* ty=Tensor[(144), uint32] */
}

def @func_5137() -> Tensor[(7, 11, 6), float64] {
  %318 = fn () -> Tensor[(7, 11, 6), float64] {
    %309 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
    %310 = cast(%309, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
    %311 = reshape(%310, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
    %312 = @func_3901(%311) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
    %313 = %312.0;
    %314 = cast(%309, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
    %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%313, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%316, %317) /* ty=Tensor[(7, 11, 6), float64] */
  };
  %318() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_9721() -> (Tensor[(7, 11, 6), bool],) {
  %319 = @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %320 = %319.0;
  (%320,)
}

def @func_12341() -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64]) {
  %325 = fn () -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64]) {
    %321 = @func_8168() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float32]) */;
    %322 = @func_8539() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
    %323 = %321.2;
    %324 = %322.0;
    (%323, %324)
  };
  %325() /* ty=(Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64]) */
}

def @func_3524() -> (Tensor[(7, 11, 6), float64],) {
  %326 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  (%326,)
}

def @func_10841() -> Tensor[(7, 11, 6), float64] {
  @func_10839() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_1349(%var_1323: Tensor[(12, 7, 1), float64]) -> (Tensor[(12, 7, 1), float64],) {
  %327 = cast(%var_1323, dtype="float64") /* ty=Tensor[(12, 7, 1), float64] */;
  %328 = atanh(%327) /* ty=Tensor[(12, 7, 1), float64] */;
  (%328,)
}

def @func_7987() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  @func_7985() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_7650() -> (Tensor[(7, 11, 6), bool],) {
  %331 = fn () -> (Tensor[(7, 11, 6), bool],) {
    %329 = @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */;
    %330 = %329.0;
    (%330,)
  };
  %331() /* ty=(Tensor[(7, 11, 6), bool],) */
}

def @func_6786() -> Tensor[(7, 11, 6), float64] {
  %332 = fn () -> Tensor[(7, 11, 6), float64] {
    @func_4081() /* ty=Tensor[(7, 11, 6), float64] */
  };
  %332() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_3254(%var_3246: Tensor[(11, 6, 14), float64]) -> (Tensor[(11, 6, 14), float64], Tensor[(22), int16], Tensor[(22), int16], Tensor[(308), int16]) {
  %333 = cast(%var_3246, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %334 = cast(meta[relay.Constant][18] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %335 = cast(meta[relay.Constant][19] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %336 = reshape(%334, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %337 = reshape(%335, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %338 = @func_1899(%336, %337) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %339 = asinh(%333) /* ty=Tensor[(11, 6, 14), float64] */;
  %340 = %338.2;
  (%339, %340, meta[relay.Constant][18] /* ty=Tensor[(22), int16] */, meta[relay.Constant][19] /* ty=Tensor[(308), int16] */)
}

def @func_5113(%var_5111: Tensor[(22), int16], %var_5112: Tensor[(308), int16]) -> (Tensor[(99, 3), int16], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) {
  @func_5109(%var_5111, %var_5112) /* ty=(Tensor[(99, 3), int16], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */
}

def @func_5716() -> (Tensor[(7, 11, 6), bool],) {
  %341 = @func_5136() /* ty=Tensor[(7, 11, 6), float64] */;
  %342 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
  %343 = cast(%342, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %344 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%341, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %347 = logical_or(%345, %346) /* ty=Tensor[(7, 11, 6), bool] */;
  (%347,)
}

def @func_4287() -> (Tensor[(7, 11, 6), float64],) {
  %349 = fn () -> (Tensor[(7, 11, 6), float64],) {
    %348 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
    (%348,)
  };
  %349() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_4159(%var_4158: Tensor[(7, 11, 6), float32]) -> (Tensor[(7, 11, 6), bool],) {
  %357 = fn (%var_4149: Tensor[(7, 11, 6), float32]) -> (Tensor[(7, 11, 6), bool],) {
    %350 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %351 = %350.0;
    %352 = cast(%var_4149, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
    %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(3), int32] */;
    %354 = cast(%351, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
    %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %356 = equal(%354, %355) /* ty=Tensor[(7, 11, 6), bool] */;
    (%356,)
  };
  %357(%var_4158) /* ty=(Tensor[(7, 11, 6), bool],) */
}

def @func_2791(%var_2765: Tensor[(15, 1, 15), float32], %var_2772: Tensor[(168), float64], %var_2773: Tensor[(2352), float64]) -> (Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(15, ?, 15), bool], Tensor[(12, 7, 1), float64], Tensor[(84), float64]) {
  %358 = cast(%var_2772, dtype="float64") /* ty=Tensor[(168), float64] */;
  %359 = cast(%var_2773, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %360 = reshape(%358, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
  %361 = reshape(%359, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
  %362 = @func_880(%360, %361) /* ty=(Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) */;
  %363 = cast(%var_2765, dtype="float32") /* ty=Tensor[(15, 1, 15), float32] */;
  %364 = atanh(%363) /* ty=Tensor[(15, 1, 15), float32] */;
  %365 = cast(%var_2765, dtype="bool") /* ty=Tensor[(15, 1, 15), bool] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%364, dtype="bool") /* ty=Tensor[(15, 1, 15), bool] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %369 = cast(meta[relay.Constant][20] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %370 = reshape(%369, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float64] */;
  %371 = @func_1349(%370) /* ty=(Tensor[(12, 7, 1), float64],) */;
  %372 = %362.1;
  %373 = less_equal(%367, %368) /* ty=Tensor[(15, ?, 15), bool] */;
  %374 = %371.0;
  (%372, %var_2772, %var_2773, %373, %374, meta[relay.Constant][20] /* ty=Tensor[(84), float64] */)
}

def @func_8168() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float32]) {
  %375 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  %376 = @func_7812() /* ty=Tensor[(11, 6, 14), float64] */;
  %377 = @func_7024() /* ty=Tensor[(7, 11, 6), float32] */;
  (%375, %376, %377)
}

def @func_10907() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(7, 11, 6), float32]) {
  %378 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %380 = reshape(%379, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %381 = @func_9676(%380) /* ty=(Tensor[(7, 11, 6), int32],) */;
  %382 = @func_9496() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %383 = %381.0;
  %384 = %382.0;
  (%378, %383, %384)
}

def @func_6716(%var_6701: Tensor[(33), uint8]) -> (Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), float32], Tensor[(33), uint8], Tensor[(22, 1), int16]) {
  %385 = @func_4826() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %386 = cast(%var_6701, dtype="uint8") /* ty=Tensor[(33), uint8] */;
  %387 = cast(meta[relay.Constant][21] /* ty=Tensor[(22, 1), int16] */, dtype="int16") /* ty=Tensor[(22, 1), int16] */;
  %388 = reshape(%386, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), uint8] */;
  %389 = reshape(%387, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %390 = @func_828(%388, %389) /* ty=(Tensor[(3, 11, 1), uint8], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(77, 4), int16], Tensor[(14, 2, 11), float32]) */;
  %391 = %385.0;
  %392 = %390.4;
  (%391, %392, %var_6701, meta[relay.Constant][21] /* ty=Tensor[(22, 1), int16] */)
}

def @func_6594() -> Tensor[(6, 16, 9), float64] {
  %393 = @func_4742() /* ty=(Tensor[(6, 16, 9), float64],) */;
  %393.0
}

def @func_11427() -> (Tensor[(7, 11, 6), float32], Tensor[(1260), float64], Tensor[(81), float32], Tensor[(1260), float64], Tensor[(11, 9, 3), bool]) {
  %402 = fn () -> (Tensor[(7, 11, 6), float32], Tensor[(1260), float64], Tensor[(81), float32], Tensor[(1260), float64], Tensor[(11, 9, 3), bool]) {
    %394 = cast(meta[relay.Constant][22] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
    %395 = cast(meta[relay.Constant][23] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %396 = reshape(%394, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %397 = reshape(%395, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %398 = @func_7440(%396, %397) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(144), uint32], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) */;
    %399 = @func_7032() /* ty=Tensor[(7, 11, 6), float32] */;
    %400 = %398.4;
    %401 = @func_7890() /* ty=Tensor[(11, 9, 3), bool] */;
    (%399, %400, meta[relay.Constant][22] /* ty=Tensor[(81), float32] */, meta[relay.Constant][23] /* ty=Tensor[(1260), float64] */, %401)
  };
  %402() /* ty=(Tensor[(7, 11, 6), float32], Tensor[(1260), float64], Tensor[(81), float32], Tensor[(1260), float64], Tensor[(11, 9, 3), bool]) */
}

def @func_10031() -> (Tensor[(7, 11, 6), float64], Tensor[(297), int16], Tensor[(297), int16], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32]) {
  %403 = cast(meta[relay.Constant][24] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
  %404 = reshape(%403, newshape=[297]) /* ty=Tensor[(297), int16] */;
  %405 = @func_6171(%404) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) */;
  %406 = @func_6529() /* ty=(Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %407 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %408 = @func_8813() /* ty=Tensor[(7, 11, 6), float64] */;
  %409 = %405.2;
  %410 = %406.1;
  %411 = %407.0;
  (%408, %409, meta[relay.Constant][24] /* ty=Tensor[(297), int16] */, %410, %411)
}

def @func_9815() -> (Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64], Tensor[(6, 16, 9), float64]) {
  %417 = fn () -> (Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64], Tensor[(6, 16, 9), float64]) {
    %412 = @func_8899() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %413 = @func_4742() /* ty=(Tensor[(6, 16, 9), float64],) */;
    %414 = %412.0;
    %415 = @func_6594() /* ty=Tensor[(6, 16, 9), float64] */;
    %416 = %413.0;
    (%414, %415, %416)
  };
  %417() /* ty=(Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64], Tensor[(6, 16, 9), float64]) */
}

def @func_11061(%var_11060: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), bool], Tensor[(22), int16], Tensor[(308), int16], Tensor[(1260), float64]) {
  %436 = fn (%var_11052: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), bool], Tensor[(22), int16], Tensor[(308), int16], Tensor[(1260), float64]) {
    %418 = @func_7507() /* ty=Tensor[(7, 11, 6), float64] */;
    %419 = cast(%418, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
    %420 = reshape(%419, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
    %421 = @func_7593() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %422 = @func_8168() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float32]) */;
    %423 = cast(meta[relay.Constant][25] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
    %424 = cast(meta[relay.Constant][26] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
    %425 = cast(meta[relay.Constant][26] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
    %426 = cast(%var_11052, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %427 = reshape(%423, newshape=[22]) /* ty=Tensor[(22), int16] */;
    %428 = reshape(%424, newshape=[77, 4]) /* ty=Tensor[(77, 4), int16] */;
    %429 = reshape(%425, newshape=[77, 4]) /* ty=Tensor[(77, 4), int16] */;
    %430 = reshape(%426, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %431 = @func_10536(%427, %428, %429, %430) /* ty=(Tensor[(7, 11, 6), bool], Tensor[(99, 3), int16], Tensor[(22), int16], Tensor[(11, 9, 3), bool], Tensor[(77, 4), bool], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) */;
    %432 = @func_4410(%420) /* ty=Tensor[(7, 11, 6), bool] */;
    %433 = %421.0;
    %434 = %422.2;
    %435 = %431.0;
    (%418, %432, %433, %434, %435, meta[relay.Constant][25] /* ty=Tensor[(22), int16] */, meta[relay.Constant][26] /* ty=Tensor[(308), int16] */, %var_11052)
  };
  %436(%var_11060) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), bool], Tensor[(22), int16], Tensor[(308), int16], Tensor[(1260), float64]) */
}

def @func_4264() -> Tensor[(7, 11, 6), float64] {
  %439 = fn () -> Tensor[(7, 11, 6), float64] {
    %437 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
    %438 = cast(%437, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
    cos(%438) /* ty=Tensor[(7, 11, 6), float64] */
  };
  %439() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_3674(%var_3672: Tensor[(91, 4), int16]) -> (Tensor[(14, 2, 11), float64], Tensor[(198), float64], Tensor[(91, 4), int16], Tensor[(7, 11, 6), float32]) {
  @func_3671(%var_3672) /* ty=(Tensor[(14, 2, 11), float64], Tensor[(198), float64], Tensor[(91, 4), int16], Tensor[(7, 11, 6), float32]) */
}

def @func_8900() -> (Tensor[(7, 11, 6), float32],) {
  %442 = fn () -> (Tensor[(7, 11, 6), float32],) {
    %440 = @func_8524() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %441 = %440.0;
    (%441,)
  };
  %442() /* ty=(Tensor[(7, 11, 6), float32],) */
}

def @func_9264() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  @func_9262() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_6659() -> Tensor[(144), uint32] {
  @func_6657() /* ty=Tensor[(144), uint32] */
}

def @func_2134(%var_2132: Tensor[(7, 15, 12), float64], %var_2133: Tensor[(1, 84), float64]) -> (Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) {
  %460 = fn (%var_2097: Tensor[(7, 15, 12), float64], %var_2103: Tensor[(1, 84), float64]) -> (Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) {
    %443 = cast(%var_2097, dtype="float64") /* ty=Tensor[(7, 15, 12), float64] */;
    %444 = cast(%var_2103, dtype="float64") /* ty=Tensor[(1, 84), float64] */;
    %445 = reshape(%444, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float64] */;
    %446 = @func_1349(%445) /* ty=(Tensor[(12, 7, 1), float64],) */;
    %447 = %446.0;
    %448 = cast(%447, dtype="int32") /* ty=Tensor[(12, 7, 1), int32] */;
    %449 = shape_of(%var_2103, dtype="int32") /* ty=Tensor[(2), int32] */;
    %450 = cast(%var_2103, dtype="int32") /* ty=Tensor[(1, 84), int32] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %452 = cast(meta[relay.Constant][27] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
    %453 = cast(meta[relay.Constant][28] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
    %454 = reshape(%452, newshape=[22]) /* ty=Tensor[(22), int16] */;
    %455 = reshape(%453, newshape=[308]) /* ty=Tensor[(308), int16] */;
    %456 = @func_1899(%454, %455) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
    %457 = log2(%443) /* ty=Tensor[(7, 15, 12), float64] */;
    %458 = subtract(%450, %451) /* ty=Tensor[(?, 84), int32] */;
    %459 = %456.3;
    (%457, %458, %459, meta[relay.Constant][27] /* ty=Tensor[(22), int16] */, meta[relay.Constant][28] /* ty=Tensor[(308), int16] */)
  };
  %460(%var_2132, %var_2133) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) */
}

def @func_4327() -> Tensor[(6, 16, 9), float64] {
  @func_4325() /* ty=Tensor[(6, 16, 9), float64] */
}

def @func_7024() -> Tensor[(7, 11, 6), float32] {
  @func_6737() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_5050() -> Tensor[(7, 11, 6), float64] {
  %461 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  sqrt(%462) /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12040() -> (Tensor[(7, 11, 6), float32], Tensor[(10, 10, 6), float32], Tensor[(600), float32], Tensor[(7, 11, 6), int64]) {
  @func_12038() /* ty=(Tensor[(7, 11, 6), float32], Tensor[(10, 10, 6), float32], Tensor[(600), float32], Tensor[(7, 11, 6), int64]) */
}

def @func_4826() -> (Tensor[(7, 11, 6), float64],) {
  %463 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  (%463,)
}

def @func_7525() -> Tensor[(11, 9, 3), bool] {
  %465 = fn () -> Tensor[(11, 9, 3), bool] {
    %464 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
    %464.0
  };
  %465() /* ty=Tensor[(11, 9, 3), bool] */
}

def @func_3732() -> (Tensor[(7, 11, 6), float32],) {
  %466 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %467 = %466.0;
  (%467,)
}

def @func_2741(%var_2734: Tensor[(9, 9, 1), float32]) -> Tensor[(9, 9, 11), float32] {
  %468 = cast(%var_2734, dtype="float32") /* ty=Tensor[(9, 9, 1), float32] */;
  %469 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 9, 11), float32] */, dtype="float32") /* ty=Tensor[(9, 9, 11), float32] */;
  mod(%468, %469) /* ty=Tensor[(9, 9, 11), float32] */
}

def @func_8500() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool]) {
  %470 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %471 = @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %472 = %470.0;
  %473 = %471.0;
  (%472, %473)
}

def @func_6738() -> Tensor[(7, 11, 6), float32] {
  %475 = fn () -> Tensor[(7, 11, 6), float32] {
    %474 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %474.0
  };
  %475() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_6318(%var_6316: Tensor[(1, 1050), bool], %var_6317: Tensor[(168), float64]) -> (Tensor[(7, 11, 6), float32], Tensor[(4, 588), float64], Tensor[(1, 1050), bool], Tensor[(168), float64], Tensor[(7, 11, 6), float64]) {
  @func_6314(%var_6316, %var_6317) /* ty=(Tensor[(7, 11, 6), float32], Tensor[(4, 588), float64], Tensor[(1, 1050), bool], Tensor[(168), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_10536(%var_10499: Tensor[(22), int16], %var_10500: Tensor[(77, 4), int16], %var_10517: Tensor[(77, 4), int16], %var_10525: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), bool], Tensor[(99, 3), int16], Tensor[(22), int16], Tensor[(11, 9, 3), bool], Tensor[(77, 4), bool], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
  %476 = @func_8067() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %477 = cast(%var_10499, dtype="int16") /* ty=Tensor[(22), int16] */;
  %478 = cast(%var_10500, dtype="int16") /* ty=Tensor[(77, 4), int16] */;
  %479 = reshape(%477, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %480 = reshape(%478, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %481 = @func_5109(%479, %480) /* ty=(Tensor[(99, 3), int16], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %482 = cast(%var_10517, dtype="bool") /* ty=Tensor[(77, 4), bool] */;
  %483 = shape_of(%var_10500, dtype="int32") /* ty=Tensor[(2), int32] */;
  %484 = cast(%var_10500, dtype="bool") /* ty=Tensor[(77, 4), bool] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %486 = cast(meta[relay.Constant][30] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %487 = cast(%var_10525, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %488 = reshape(%486, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %489 = reshape(%487, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %490 = @func_5567(%488, %489) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) */;
  %491 = %476.0;
  %492 = %481.0;
  %493 = @func_7890() /* ty=Tensor[(11, 9, 3), bool] */;
  %494 = greater_equal(%484, %485) /* ty=Tensor[(77, 4), bool] */;
  %495 = %490.3;
  (%491, %492, %var_10499, %493, %494, %495, meta[relay.Constant][30] /* ty=Tensor[(81), float32] */, %var_10525)
}

def @func_4742() -> (Tensor[(6, 16, 9), float64],) {
  %496 = @func_4611() /* ty=Tensor[(6, 16, 9), float64] */;
  (%496,)
}

def @func_4848() -> (Tensor[(7, 11, 6), float64],) {
  %497 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  (%497,)
}

def @func_6862(%var_6860: Tensor[(3, 16, 11), int32], %var_6861: Tensor[(3, 16, 11), int32]) -> (Tensor[(3, 16, 11), bool],) {
  @func_6858(%var_6860, %var_6861) /* ty=(Tensor[(3, 16, 11), bool],) */
}

def @func_12362() -> Tensor[(144), uint32] {
  @func_6657() /* ty=Tensor[(144), uint32] */
}

def @func_5192() -> (Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) {
  %509 = fn () -> (Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) {
    %498 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
    %499 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), uint32] */, dtype="uint32") /* ty=Tensor[(144), uint32] */;
    %500 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), uint32] */, dtype="uint32") /* ty=Tensor[(144), uint32] */;
    %501 = reshape(%499, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), uint32] */;
    %502 = reshape(%500, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), uint32] */;
    %503 = cast(meta[relay.Constant][32] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
    %504 = reshape(%503, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float64] */;
    %505 = @func_3254(%504) /* ty=(Tensor[(11, 6, 14), float64], Tensor[(22), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
    %506 = %498.0;
    %507 = @func_4349(%501, %502) /* ty=Tensor[(8, 9, 2), bool] */;
    %508 = %505.0;
    (%506, %507, meta[relay.Constant][31] /* ty=Tensor[(144), uint32] */, %508, meta[relay.Constant][32] /* ty=Tensor[(154, 6), float64] */)
  };
  %509() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */
}

def @func_10085() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
  %510 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  %511 = cast(%510, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %512 = reshape(%511, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %513 = cast(%510, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %514 = reshape(%513, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %515 = @func_3901(%514) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %516 = @func_4410(%512) /* ty=Tensor[(7, 11, 6), bool] */;
  %517 = %515.1;
  %518 = @func_8889() /* ty=Tensor[(7, 11, 6), float64] */;
  (%510, %516, %517, %518)
}

def @func_9262() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %519 = @func_4439() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %520 = @func_6956() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %521 = %519.0;
  %522 = %520.0;
  (%521, %522)
}

def @func_8430() -> Tensor[(7, 11, 6), float64] {
  %523 = @func_6956() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %523.0
}

def @func_7742(%var_7740: Tensor[(1, 22), int16]) -> (Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), bool], Tensor[(11, 9, 3), bool], Tensor[(7, 11, 6), float64], Tensor[(1, 22), int16], Tensor[(308), int16], Tensor[(7, 3, 8), float32], Tensor[(7, 11, 6), float64]) {
  @func_7739(%var_7740) /* ty=(Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), bool], Tensor[(11, 9, 3), bool], Tensor[(7, 11, 6), float64], Tensor[(1, 22), int16], Tensor[(308), int16], Tensor[(7, 3, 8), float32], Tensor[(7, 11, 6), float64]) */
}

def @func_1803(%var_1802: Tensor[(13, 7, 4), int16]) -> (Tensor[(13, 7, 4), bool], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64]) {
  %535 = fn (%var_1788: Tensor[(13, 7, 4), int16]) -> (Tensor[(13, 7, 4), bool], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64]) {
    %524 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 7, 4), int16] */, dtype="bool") /* ty=Tensor[(13, 7, 4), bool] */;
    %525 = shape_of(%var_1788, dtype="int32") /* ty=Tensor[(3), int32] */;
    %526 = cast(%var_1788, dtype="bool") /* ty=Tensor[(13, 7, 4), bool] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %528 = cast(meta[relay.Constant][34] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %529 = cast(meta[relay.Constant][35] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %530 = reshape(%528, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
    %531 = reshape(%529, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
    %532 = @func_880(%530, %531) /* ty=(Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) */;
    %533 = less_equal(%526, %527) /* ty=Tensor[(13, 7, 4), bool] */;
    %534 = %532.1;
    (%533, %534, meta[relay.Constant][34] /* ty=Tensor[(168), float64] */, meta[relay.Constant][35] /* ty=Tensor[(2352), float64] */)
  };
  %535(%var_1802) /* ty=(Tensor[(13, 7, 4), bool], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64]) */
}

def @func_8698() -> (Tensor[(7, 11, 6), float64],) {
  %537 = fn () -> (Tensor[(7, 11, 6), float64],) {
    %536 = @func_7507() /* ty=Tensor[(7, 11, 6), float64] */;
    (%536,)
  };
  %537() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_9676(%var_9670: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int32],) {
  %538 = @func_4439() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %539 = %538.0;
  %540 = cast(%var_9670, dtype="int32") /* ty=Tensor[(7, 11, 6), int32] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="int32") /* ty=Tensor[(7, 11, 6), int32] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %544 = bitwise_or(%542, %543) /* ty=Tensor[(7, 11, 6), int32] */;
  (%544,)
}

def @func_8727(%var_8721: Tensor[(11, 2), int16], %var_8722: Tensor[(308), int16], %var_8725: Tensor[(81), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(9, 9, 11), float32], Tensor[(81), float32]) {
  %545 = @func_8539() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %546 = cast(5.29262f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %547 = cast(%var_8721, dtype="int16") /* ty=Tensor[(11, 2), int16] */;
  %548 = cast(%var_8722, dtype="int16") /* ty=Tensor[(308), int16] */;
  %549 = reshape(%546, newshape=[]) /* ty=float32 */;
  %550 = reshape(%547, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %551 = reshape(%548, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %552 = @func_216(%549, %550, %551) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */;
  %553 = cast(%var_8725, dtype="float32") /* ty=Tensor[(81), float32] */;
  %554 = reshape(%553, newshape=[9, 9, 1]) /* ty=Tensor[(9, 9, 1), float32] */;
  %555 = %545.1;
  %556 = %552.3;
  %557 = @func_2741(%554) /* ty=Tensor[(9, 9, 11), float32] */;
  (%555, %556, 5.29262f /* ty=float32 */, %var_8721, %var_8722, %557, %var_8725)
}

def @func_9939(%var_9936: Tensor[(6, 16, 9), float64], %var_9937: Tensor[(1, 22), int16], %var_9938: Tensor[(308), int16]) -> (Tensor[(81), float32], Tensor[(81), float32], Tensor[(6, 16, 9), float32], Tensor[(14, 2, 11), bool], Tensor[(1, 22), int16], Tensor[(308), int16]) {
  %578 = fn (%var_9886: Tensor[(6, 16, 9), float64], %var_9929: Tensor[(1, 22), int16], %var_9930: Tensor[(308), int16]) -> (Tensor[(81), float32], Tensor[(81), float32], Tensor[(6, 16, 9), float32], Tensor[(14, 2, 11), bool], Tensor[(1, 22), int16], Tensor[(308), int16]) {
    %558 = cast(meta[relay.Constant][36] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
    %559 = reshape(%558, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %560 = @func_6237(%559) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(11, 6, 14), float64]) */;
    %561 = @func_6594() /* ty=Tensor[(6, 16, 9), float64] */;
    %562 = cast(%561, dtype="float64") /* ty=Tensor[(6, 16, 9), float64] */;
    %563 = erf(%562) /* ty=Tensor[(6, 16, 9), float64] */;
    %564 = cast(%var_9886, dtype="uint8") /* ty=Tensor[(6, 16, 9), uint8] */;
    %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
    %566 = cast(%563, dtype="uint8") /* ty=Tensor[(6, 16, 9), uint8] */;
    %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %568 = logical_xor(%566, %567) /* ty=Tensor[(6, 16, 9), uint8] */;
    %569 = cast(%568, dtype="float32") /* ty=Tensor[(6, 16, 9), float32] */;
    %570 = cast(%var_9929, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
    %571 = cast(%var_9930, dtype="int16") /* ty=Tensor[(308), int16] */;
    %572 = reshape(%570, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
    %573 = reshape(%571, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
    %574 = @func_102(%572, %573) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
    %575 = %560.1;
    %576 = asinh(%569) /* ty=Tensor[(6, 16, 9), float32] */;
    %577 = %574.0;
    (%575, meta[relay.Constant][36] /* ty=Tensor[(81), float32] */, %576, %577, %var_9929, %var_9930)
  };
  %578(%var_9936, %var_9937, %var_9938) /* ty=(Tensor[(81), float32], Tensor[(81), float32], Tensor[(6, 16, 9), float32], Tensor[(14, 2, 11), bool], Tensor[(1, 22), int16], Tensor[(308), int16]) */
}

def @func_11322(%var_11320: Tensor[(10, 10, 6), float32]) -> Tensor[(10, 10, 6), float32] {
  @func_11319(%var_11320) /* ty=Tensor[(10, 10, 6), float32] */
}

def @func_6282(%var_6280: Tensor[(14, 16, 13), float32], %var_6281: Tensor[(132), float64]) -> (Tensor[(14, 16, 13), float32], Tensor[(12, 1, 11), float64], Tensor[(132), float64]) {
  %584 = fn (%var_6265: Tensor[(14, 16, 13), float32], %var_6271: Tensor[(132), float64]) -> (Tensor[(14, 16, 13), float32], Tensor[(12, 1, 11), float64], Tensor[(132), float64]) {
    %579 = cast(%var_6265, dtype="float32") /* ty=Tensor[(14, 16, 13), float32] */;
    %580 = cast(%var_6271, dtype="float64") /* ty=Tensor[(132), float64] */;
    %581 = reshape(%580, newshape=[12, 1, 11]) /* ty=Tensor[(12, 1, 11), float64] */;
    %582 = acos(%579) /* ty=Tensor[(14, 16, 13), float32] */;
    %583 = @func_4767(%581) /* ty=Tensor[(12, 1, 11), float64] */;
    (%582, %583, %var_6271)
  };
  %584(%var_6280, %var_6281) /* ty=(Tensor[(14, 16, 13), float32], Tensor[(12, 1, 11), float64], Tensor[(132), float64]) */
}

def @func_3583() -> Tensor[(7, 11, 6), float64] {
  @func_3581() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12168(%var_12166: int16, %var_12167: Tensor[(11, 14, 11), int16]) -> (Tensor[(11, 14, 11), int16],) {
  @func_12164(%var_12166, %var_12167) /* ty=(Tensor[(11, 14, 11), int16],) */
}

def @func_4082() -> Tensor[(7, 11, 6), float64] {
  %585 = fn () -> Tensor[(7, 11, 6), float64] {
    @func_3581() /* ty=Tensor[(7, 11, 6), float64] */
  };
  %585() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_3706() -> (Tensor[(7, 11, 6), float32],) {
  %586 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %588 = tan(%587) /* ty=Tensor[(7, 11, 6), float32] */;
  (%588,)
}

def @func_4711(%var_4700: Tensor[(225), float32], %var_4701: Tensor[(168), float64], %var_4702: Tensor[(2352), float64], %var_4709: Tensor[(18, 70), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), bool], Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(72, 2), float32], Tensor[(15, ?, 15), bool], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(22), int16], Tensor[(18, 70), float64]) {
  %589 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 2), int16] */, dtype="int16") /* ty=Tensor[(11, 2), int16] */;
  %590 = cast(meta[relay.Constant][38] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %591 = reshape(%589, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
  %592 = reshape(%590, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
  %593 = @func_102(%591, %592) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
  %594 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
  %595 = cast(meta[relay.Constant][39] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %596 = reshape(%595, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float64] */;
  %597 = @func_1349(%596) /* ty=(Tensor[(12, 7, 1), float64],) */;
  %598 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 2), int16] */, dtype="int16") /* ty=Tensor[(11, 2), int16] */;
  %599 = reshape(%598, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %600 = @func_3554(%599) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(22), int16], Tensor[(77, 4), int16]) */;
  %601 = cast(meta[relay.Constant][40] /* ty=Tensor[(72, 2), uint32] */, dtype="uint32") /* ty=Tensor[(72, 2), uint32] */;
  %602 = cast(meta[relay.Constant][40] /* ty=Tensor[(72, 2), uint32] */, dtype="uint32") /* ty=Tensor[(72, 2), uint32] */;
  %603 = reshape(%601, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), uint32] */;
  %604 = reshape(%602, newshape=[8, 9, 2]) /* ty=Tensor[(8, 9, 2), uint32] */;
  %605 = @func_4349(%603, %604) /* ty=Tensor[(8, 9, 2), bool] */;
  %606 = cast(%605, dtype="int8") /* ty=Tensor[(8, 9, 2), int8] */;
  %607 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(72, 2), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %608 = cast(meta[relay.Constant][40] /* ty=Tensor[(72, 2), uint32] */, dtype="int8") /* ty=Tensor[(72, 2), int8] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %610 = logical_xor(%608, %609) /* ty=Tensor[(72, 2), int8] */;
  %611 = cast(%605, dtype="float32") /* ty=Tensor[(8, 9, 2), float32] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(2), int32] */;
  %613 = cast(%610, dtype="float32") /* ty=Tensor[(72, 2), float32] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %615 = cast(%var_4700, dtype="float32") /* ty=Tensor[(225), float32] */;
  %616 = cast(%var_4701, dtype="float64") /* ty=Tensor[(168), float64] */;
  %617 = cast(%var_4702, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %618 = reshape(%615, newshape=[15, 1, 15]) /* ty=Tensor[(15, 1, 15), float32] */;
  %619 = reshape(%616, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %620 = reshape(%617, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
  %621 = @func_2791(%618, %619, %620) /* ty=(Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(15, ?, 15), bool], Tensor[(12, 7, 1), float64], Tensor[(84), float64]) */;
  %622 = cast(%var_4709, dtype="float64") /* ty=Tensor[(18, 70), float64] */;
  %623 = cast(meta[relay.Constant][39] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %624 = reshape(%622, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %625 = reshape(%623, newshape=[1, 84]) /* ty=Tensor[(1, 84), float64] */;
  %626 = @func_2131(%624, %625) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
  %627 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %628 = %593.0;
  %629 = %594.0;
  %630 = %597.0;
  %631 = %600.0;
  %632 = divide(%613, %614) /* ty=Tensor[(72, 2), float32] */;
  %633 = %621.3;
  %634 = %626.3;
  (%627, %628, meta[relay.Constant][37] /* ty=Tensor[(11, 2), int16] */, meta[relay.Constant][38] /* ty=Tensor[(308), int16] */, %629, %630, meta[relay.Constant][39] /* ty=Tensor[(84), float64] */, %631, %632, %633, %var_4700, %var_4701, %var_4702, %634, %var_4709)
}

def @func_7508() -> Tensor[(7, 11, 6), float64] {
  %635 = fn () -> Tensor[(7, 11, 6), float64] {
    @func_6930() /* ty=Tensor[(7, 11, 6), float64] */
  };
  %635() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12530() -> (Tensor[(7, 11, 6), float64],) {
  %638 = fn () -> (Tensor[(7, 11, 6), float64],) {
    %636 = @func_4848() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %637 = %636.0;
    (%637,)
  };
  %638() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_7812() -> Tensor[(11, 6, 14), float64] {
  %639 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %639.3
}

def @func_4828() -> (Tensor[(7, 11, 6), float64],) {
  @func_4826() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_9539() -> Tensor[(7, 11, 6), float64] {
  %640 = @func_8797() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %640.0
}

def @func_10909() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(7, 11, 6), float32]) {
  @func_10907() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(7, 11, 6), float32]) */
}

def @func_5901() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  @func_5899() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_6174(%var_6172: Tensor[(297), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) {
  @func_6171(%var_6172) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) */
}

def @func_7354(%var_7335: Tensor[(7, 2, 3), float32]) -> (Tensor[(7, 2, 3), float32],) {
  %641 = cast(%var_7335, dtype="float32") /* ty=Tensor[(7, 2, 3), float32] */;
  %642 = cosh(%641) /* ty=Tensor[(7, 2, 3), float32] */;
  (%642,)
}

def @func_3903(%var_3902: Tensor[(7, 11, 6), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
  %656 = fn (%var_3881: Tensor[(7, 11, 6), float32]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
    %643 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %644 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %645 = %644.0;
    %646 = cast(%var_3881, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
    %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
    %648 = cast(%645, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
    %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %650 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %651 = %650.0;
    %652 = cast(%651, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
    %653 = %643.0;
    %654 = greater_equal(%648, %649) /* ty=Tensor[(7, 11, 6), bool] */;
    %655 = erf(%652) /* ty=Tensor[(7, 11, 6), float64] */;
    (%653, %654, %655)
  };
  %656(%var_3902) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */
}

def @func_11600() -> Tensor[(6, 16, 9), float64] {
  %657 = fn () -> Tensor[(6, 16, 9), float64] {
    @func_4611() /* ty=Tensor[(6, 16, 9), float64] */
  };
  %657() /* ty=Tensor[(6, 16, 9), float64] */
}

def @func_4770(%var_4768: Tensor[(12, 1, 11), float64]) -> Tensor[(12, 1, 11), float64] {
  @func_4767(%var_4768) /* ty=Tensor[(12, 1, 11), float64] */
}

def @func_11101() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %658 = @func_8797() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %659 = @func_10205() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %660 = %658.1;
  %661 = %659.0;
  (%660, %661)
}

def @func_6596() -> Tensor[(6, 16, 9), float64] {
  @func_6594() /* ty=Tensor[(6, 16, 9), float64] */
}

def @func_12222(%var_12219: Tensor[(225), float32], %var_12220: Tensor[(168), float64], %var_12221: Tensor[(84, 28), float64]) -> (Tensor[(7, 11, 6), float64], int16, Tensor[(1694), int16], Tensor[(7, 11, 6), float64], Tensor[(225), float32], Tensor[(168), float64], Tensor[(84, 28), float64], Tensor[(1260), float64], Tensor[(11, 14, 11), float64], Tensor[(7, 11, 6), float64]) {
  %684 = fn (%var_12188: Tensor[(225), float32], %var_12189: Tensor[(168), float64], %var_12190: Tensor[(84, 28), float64]) -> (Tensor[(7, 11, 6), float64], int16, Tensor[(1694), int16], Tensor[(7, 11, 6), float64], Tensor[(225), float32], Tensor[(168), float64], Tensor[(84, 28), float64], Tensor[(1260), float64], Tensor[(11, 14, 11), float64], Tensor[(7, 11, 6), float64]) {
    %662 = @func_4439() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %663 = cast(%var_12188, dtype="float32") /* ty=Tensor[(225), float32] */;
    %664 = cast(%var_12189, dtype="float64") /* ty=Tensor[(168), float64] */;
    %665 = cast(%var_12190, dtype="float64") /* ty=Tensor[(84, 28), float64] */;
    %666 = cast(meta[relay.Constant][43] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %667 = reshape(%663, newshape=[225]) /* ty=Tensor[(225), float32] */;
    %668 = reshape(%664, newshape=[168]) /* ty=Tensor[(168), float64] */;
    %669 = reshape(%665, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
    %670 = reshape(%666, newshape=[18, 70]) /* ty=Tensor[(18, 70), float64] */;
    %671 = @func_4711(%667, %668, %669, %670) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), bool], Tensor[(11, 2), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(72, 2), float32], Tensor[(15, ?, 15), bool], Tensor[(225), float32], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(22), int16], Tensor[(18, 70), float64]) */;
    %672 = cast(meta[relay.Constant][41] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %673 = cast(meta[relay.Constant][42] /* ty=Tensor[(1694), int16] */, dtype="int16") /* ty=Tensor[(1694), int16] */;
    %674 = reshape(%672, newshape=[]) /* ty=int16 */;
    %675 = reshape(%673, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), int16] */;
    %676 = @func_12164(%674, %675) /* ty=(Tensor[(11, 14, 11), int16],) */;
    %677 = %676.0;
    %678 = cast(%677, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
    %679 = @func_9229() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
    %680 = %662.0;
    %681 = %671.0;
    %682 = exp(%678) /* ty=Tensor[(11, 14, 11), float64] */;
    %683 = %679.2;
    (%680, meta[relay.Constant][41] /* ty=int16 */, meta[relay.Constant][42] /* ty=Tensor[(1694), int16] */, %681, %var_12188, %var_12189, %var_12190, meta[relay.Constant][43] /* ty=Tensor[(1260), float64] */, %682, %683)
  };
  %684(%var_12219, %var_12220, %var_12221) /* ty=(Tensor[(7, 11, 6), float64], int16, Tensor[(1694), int16], Tensor[(7, 11, 6), float64], Tensor[(225), float32], Tensor[(168), float64], Tensor[(84, 28), float64], Tensor[(1260), float64], Tensor[(11, 14, 11), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_4325() -> Tensor[(6, 16, 9), float64] {
  %685 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 16, 9), float64] */, dtype="float64") /* ty=Tensor[(6, 16, 9), float64] */;
  rsqrt(%685) /* ty=Tensor[(6, 16, 9), float64] */
}

def @func_8414() -> (Tensor[(7, 11, 6), float32],) {
  %687 = fn () -> (Tensor[(7, 11, 6), float32],) {
    %686 = @func_7032() /* ty=Tensor[(7, 11, 6), float32] */;
    (%686,)
  };
  %687() /* ty=(Tensor[(7, 11, 6), float32],) */
}

def @func_2796(%var_2793: Tensor[(15, 1, 15), float32], %var_2794: Tensor[(168), float64], %var_2795: Tensor[(2352), float64]) -> (Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(15, ?, 15), bool], Tensor[(12, 7, 1), float64], Tensor[(84), float64]) {
  @func_2791(%var_2793, %var_2794, %var_2795) /* ty=(Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(2352), float64], Tensor[(15, ?, 15), bool], Tensor[(12, 7, 1), float64], Tensor[(84), float64]) */
}

def @func_4469() -> Tensor[(7, 11, 6), float64] {
  @func_4081() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_6657() -> Tensor[(144), uint32] {
  %688 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %688.2
}

def @func_220(%var_217: float32, %var_218: Tensor[(22), int16], %var_219: Tensor[(308), int16]) -> (Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) {
  %704 = fn (%var_196: float32, %var_205: Tensor[(22), int16], %var_206: Tensor[(308), int16]) -> (Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) {
    %689 = cast(%var_196, dtype="float32") /* ty=float32 */;
    %690 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 1, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 1, 13), float32] */;
    %691 = cast(%var_205, dtype="int16") /* ty=Tensor[(22), int16] */;
    %692 = cast(%var_206, dtype="int16") /* ty=Tensor[(308), int16] */;
    %693 = reshape(%691, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
    %694 = reshape(%692, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
    %695 = @func_102(%693, %694) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
    %696 = cast(%var_205, dtype="int16") /* ty=Tensor[(22), int16] */;
    %697 = cast(%var_206, dtype="int16") /* ty=Tensor[(308), int16] */;
    %698 = reshape(%696, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
    %699 = reshape(%697, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
    %700 = @func_102(%698, %699) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
    %701 = add(%689, %690) /* ty=Tensor[(16, 1, 13), float32] */;
    %702 = %695.1;
    %703 = %700.1;
    (%701, %702, %var_205, %var_206, %703)
  };
  %704(%var_217, %var_218, %var_219) /* ty=(Tensor[(16, 1, 13), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16], Tensor[(14, 2, 11), float64]) */
}

def @func_3515() -> Tensor[(7, 11, 6), float64] {
  %705 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %706 = rsqrt(%705) /* ty=Tensor[(7, 11, 6), float32] */;
  %707 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 11, 6), float32] */, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%709, %710) /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_10992() -> Tensor[(7, 11, 6), float64] {
  %711 = fn () -> Tensor[(7, 11, 6), float64] {
    @func_10839() /* ty=Tensor[(7, 11, 6), float64] */
  };
  %711() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_5718() -> (Tensor[(7, 11, 6), bool],) {
  @func_5716() /* ty=(Tensor[(7, 11, 6), bool],) */
}

def @func_5899() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %712 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %713 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
  %714 = %712.0;
  (%713, %714)
}

def @func_5295(%var_5264: Tensor[(4, 1, 16), float32]) -> (Tensor[(4, 1, 16), float32], Tensor[(22), int16], Tensor[(33), uint8], Tensor[(22), int16], Tensor[(7, 11, 6), float64]) {
  %715 = cast(%var_5264, dtype="float32") /* ty=Tensor[(4, 1, 16), float32] */;
  %716 = cast(meta[relay.Constant][47] /* ty=Tensor[(33), uint8] */, dtype="uint8") /* ty=Tensor[(33), uint8] */;
  %717 = cast(meta[relay.Constant][48] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %718 = reshape(%716, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), uint8] */;
  %719 = reshape(%717, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %720 = @func_828(%718, %719) /* ty=(Tensor[(3, 11, 1), uint8], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(77, 4), int16], Tensor[(14, 2, 11), float32]) */;
  %721 = %720.2;
  %722 = cast(%721, dtype="int16") /* ty=Tensor[(22), int16] */;
  %723 = reshape(%722, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %724 = @func_3554(%723) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(22), int16], Tensor[(77, 4), int16]) */;
  %725 = acosh(%715) /* ty=Tensor[(4, 1, 16), float32] */;
  %726 = %724.0;
  (%725, %721, meta[relay.Constant][47] /* ty=Tensor[(33), uint8] */, meta[relay.Constant][48] /* ty=Tensor[(22), int16] */, %726)
}

def @func_8432() -> Tensor[(7, 11, 6), float64] {
  @func_8430() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_6719(%var_6717: Tensor[(33), uint8]) -> (Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), float32], Tensor[(33), uint8], Tensor[(22, 1), int16]) {
  @func_6716(%var_6717) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(14, 2, 11), float32], Tensor[(33), uint8], Tensor[(22, 1), int16]) */
}

def @func_6395() -> (Tensor[(11, 9, 3), bool],) {
  @func_6393() /* ty=(Tensor[(11, 9, 3), bool],) */
}

def @func_6560() -> (Tensor[(7, 11, 6), float64],) {
  @func_6558() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_11516() -> Tensor[(154, 6), float32] {
  %734 = fn () -> Tensor[(154, 6), float32] {
    %727 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
    %728 = %727.4;
    %729 = cast(%728, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
    %730 = exp(%729) /* ty=Tensor[(154, 6), float64] */;
    %731 = cast(%730, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
    %732 = acos(%731) /* ty=Tensor[(154, 6), float64] */;
    %733 = cast(%732, dtype="float32") /* ty=Tensor[(154, 6), float32] */;
    sinh(%733) /* ty=Tensor[(154, 6), float32] */
  };
  %734() /* ty=Tensor[(154, 6), float32] */
}

def @func_6748() -> (Tensor[(11, 9, 3), bool],) {
  %735 = @func_6393() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %736 = %735.0;
  (%736,)
}

def @func_7083() -> (Tensor[(7, 11, 6), float64],) {
  @func_7081() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_7034() -> Tensor[(7, 11, 6), float32] {
  @func_7032() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_6931() -> Tensor[(7, 11, 6), float64] {
  %738 = fn () -> Tensor[(7, 11, 6), float64] {
    %737 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %737.0
  };
  %738() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_12511(%var_12510: Tensor[(6, 16, 9), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(6, 16, 9), bool]) {
  %747 = fn (%var_12456: Tensor[(6, 16, 9), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(6, 16, 9), bool]) {
    %739 = @func_10907() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(7, 11, 6), float32]) */;
    %740 = @func_4611() /* ty=Tensor[(6, 16, 9), float64] */;
    %741 = cast(%var_12456, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
    %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
    %743 = cast(%740, dtype="bool") /* ty=Tensor[(6, 16, 9), bool] */;
    %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %745 = %739.0;
    %746 = greater(%743, %744) /* ty=Tensor[(6, 16, 9), bool] */;
    (%745, %746)
  };
  %747(%var_12510) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(6, 16, 9), bool]) */
}

def @func_9229() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %748 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %749 = %748.0;
  %750 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  %751 = @func_5485() /* ty=Tensor[(7, 11, 6), float64] */;
  (%749, %750, %751)
}

def @func_3734() -> (Tensor[(7, 11, 6), float32],) {
  @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */
}

def @func_5485() -> Tensor[(7, 11, 6), float64] {
  @func_5050() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_9135() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  @func_9133() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_5926(%var_5924: Tensor[(6, 8, 9), int8], %var_5925: Tensor[(6, 8, 9), int8]) -> (Tensor[(6, 8, 9), bool], Tensor[(7, 11, 6), float32]) {
  %759 = fn (%var_5911: Tensor[(6, 8, 9), int8], %var_5912: Tensor[(6, 8, 9), int8]) -> (Tensor[(6, 8, 9), bool], Tensor[(7, 11, 6), float32]) {
    %752 = cast(%var_5912, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
    %753 = shape_of(%var_5911, dtype="int32") /* ty=Tensor[(3), int32] */;
    %754 = cast(%var_5911, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %756 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %757 = less_equal(%754, %755) /* ty=Tensor[(6, 8, 9), bool] */;
    %758 = %756.0;
    (%757, %758)
  };
  %759(%var_5924, %var_5925) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(7, 11, 6), float32]) */
}

def @func_11859(%var_11803: Tensor[(7, 11, 6), float64], %var_11854: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int8], Tensor[(7, 11, 6), float32], Tensor[(14, 2, 11), float64], Tensor[(182, 2), float32], Tensor[(7, 11, 6), int32]) {
  %760 = @func_9229() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %761 = %760.0;
  %762 = cast(%var_11803, dtype="int8") /* ty=Tensor[(7, 11, 6), int8] */;
  %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%761, dtype="int8") /* ty=Tensor[(7, 11, 6), int8] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %766 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %767 = cast(meta[relay.Constant][49] /* ty=Tensor[(182, 2), int16] */, dtype="int16") /* ty=Tensor[(182, 2), int16] */;
  %768 = reshape(%767, newshape=[91, 4]) /* ty=Tensor[(91, 4), int16] */;
  %769 = @func_3671(%768) /* ty=(Tensor[(14, 2, 11), float64], Tensor[(198), float64], Tensor[(91, 4), int16], Tensor[(7, 11, 6), float32]) */;
  %770 = cast(meta[relay.Constant][49] /* ty=Tensor[(182, 2), int16] */, dtype="float32") /* ty=Tensor[(182, 2), float32] */;
  %771 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %772 = %771.0;
  %773 = cast(%var_11854, dtype="int32") /* ty=Tensor[(7, 11, 6), int32] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%772, dtype="int32") /* ty=Tensor[(7, 11, 6), int32] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %777 = bitwise_xor(%764, %765) /* ty=Tensor[(7, 11, 6), int8] */;
  %778 = %766.0;
  %779 = %769.0;
  %780 = atan(%770) /* ty=Tensor[(182, 2), float32] */;
  %781 = right_shift(%775, %776) /* ty=Tensor[(7, 11, 6), int32] */;
  (%777, %778, %779, %780, %781)
}

def @func_8130(%var_8118: uint16) -> (Tensor[(16, 16, 15), uint16],) {
  %782 = cast(%var_8118, dtype="uint16") /* ty=uint16 */;
  %783 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 16, 15), uint16] */, dtype="uint16") /* ty=Tensor[(16, 16, 15), uint16] */;
  %784 = bitwise_or(%782, %783) /* ty=Tensor[(16, 16, 15), uint16] */;
  (%784,)
}

def @func_10097() -> Tensor[(7, 11, 6), float32] {
  %786 = fn () -> Tensor[(7, 11, 6), float32] {
    %785 = @func_8899() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %785.0
  };
  %786() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_8133(%var_8131: uint16) -> (Tensor[(16, 16, 15), uint16],) {
  @func_8130(%var_8131) /* ty=(Tensor[(16, 16, 15), uint16],) */
}

def @func_11556() -> (Tensor[(?, 3, 9), bool], Tensor[(7, 11, 6), float64]) {
  %795 = fn () -> (Tensor[(?, 3, 9), bool], Tensor[(7, 11, 6), float64]) {
    %787 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 3, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 3, 9), float32] */;
    %788 = tan(%787) /* ty=Tensor[(1, 3, 9), float32] */;
    %789 = cast(%788, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
    %790 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(1, 3, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %791 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 3, 9), float32] */, dtype="bool") /* ty=Tensor[(1, 3, 9), bool] */;
    %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %793 = less_equal(%791, %792) /* ty=Tensor[(?, 3, 9), bool] */;
    %794 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
    (%793, %794)
  };
  %795() /* ty=(Tensor[(?, 3, 9), bool], Tensor[(7, 11, 6), float64]) */
}

def @func_4353(%var_4351: Tensor[(8, 9, 2), uint32], %var_4352: Tensor[(8, 9, 2), uint32]) -> Tensor[(8, 9, 2), bool] {
  @func_4349(%var_4351, %var_4352) /* ty=Tensor[(8, 9, 2), bool] */
}

def @func_2744(%var_2742: Tensor[(9, 9, 1), float32]) -> Tensor[(9, 9, 11), float32] {
  @func_2741(%var_2742) /* ty=Tensor[(9, 9, 11), float32] */
}

def @func_5298(%var_5296: Tensor[(4, 1, 16), float32]) -> (Tensor[(4, 1, 16), float32], Tensor[(22), int16], Tensor[(33), uint8], Tensor[(22), int16], Tensor[(7, 11, 6), float64]) {
  @func_5295(%var_5296) /* ty=(Tensor[(4, 1, 16), float32], Tensor[(22), int16], Tensor[(33), uint8], Tensor[(22), int16], Tensor[(7, 11, 6), float64]) */
}

def @func_7890() -> Tensor[(11, 9, 3), bool] {
  %796 = @func_6393() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %796.0
}

def @func_9498() -> (Tensor[(7, 11, 6), float32],) {
  @func_9496() /* ty=(Tensor[(7, 11, 6), float32],) */
}

def @func_11298(%var_11285: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float64],) {
  %797 = cast(%var_11285, dtype="float64") /* ty=Tensor[(5, 12, 2), float64] */;
  %798 = tan(%797) /* ty=Tensor[(5, 12, 2), float64] */;
  (%798,)
}

def @func_3960(%var_3959: Tensor[(308), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(1, 22), int16], Tensor[(308), int16], Tensor[(22), float64], Tensor[(14, 2, 11), float64]) {
  %815 = fn (%var_3932: Tensor[(308), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(1, 22), int16], Tensor[(308), int16], Tensor[(22), float64], Tensor[(14, 2, 11), float64]) {
    %799 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %800 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 22), int16] */, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
    %801 = cast(%var_3932, dtype="int16") /* ty=Tensor[(308), int16] */;
    %802 = reshape(%800, newshape=[22]) /* ty=Tensor[(22), int16] */;
    %803 = reshape(%801, newshape=[308]) /* ty=Tensor[(308), int16] */;
    %804 = @func_1899(%802, %803) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
    %805 = %804.2;
    %806 = cast(%805, dtype="float64") /* ty=Tensor[(22), float64] */;
    %807 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 22), int16] */, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
    %808 = cast(%var_3932, dtype="int16") /* ty=Tensor[(308), int16] */;
    %809 = reshape(%807, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
    %810 = reshape(%808, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
    %811 = @func_102(%809, %810) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
    %812 = %799.0;
    %813 = asinh(%806) /* ty=Tensor[(22), float64] */;
    %814 = %811.1;
    (%812, meta[relay.Constant][52] /* ty=Tensor[(1, 22), int16] */, %var_3932, %813, %814)
  };
  %815(%var_3959) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(1, 22), int16], Tensor[(308), int16], Tensor[(22), float64], Tensor[(14, 2, 11), float64]) */
}

def @func_7814() -> Tensor[(11, 6, 14), float64] {
  @func_7812() /* ty=Tensor[(11, 6, 14), float64] */
}

def @func_10414(%var_10371: Tensor[(12, 15, 14), float32], %var_10372: Tensor[(12, 15, 14), float32], %var_10403: Tensor[(81), float32], %var_10404: Tensor[(1260), float64]) -> (Tensor[(12, 15, 14), bool], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(768), int16], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
  %816 = cast(%var_10372, dtype="bool") /* ty=Tensor[(12, 15, 14), bool] */;
  %817 = shape_of(%var_10371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%var_10371, dtype="bool") /* ty=Tensor[(12, 15, 14), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = @func_7985() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %821 = %820.1;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %823 = reshape(%822, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float32] */;
  %824 = @func_3901(%823) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %825 = cast(meta[relay.Constant][53] /* ty=Tensor[(768), int16] */, dtype="int16") /* ty=Tensor[(768), int16] */;
  %826 = reshape(%825, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), int16] */;
  %827 = @func_4501(%826) /* ty=(Tensor[(8, 6, 16), int16], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(364), int16]) */;
  %828 = cast(%var_10403, dtype="float32") /* ty=Tensor[(81), float32] */;
  %829 = cast(%var_10404, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %830 = reshape(%828, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %831 = reshape(%829, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %832 = @func_5567(%830, %831) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) */;
  %833 = not_equal(%818, %819) /* ty=Tensor[(12, 15, 14), bool] */;
  %834 = %824.2;
  %835 = %827.2;
  %836 = %832.6;
  (%833, %821, %834, %835, meta[relay.Constant][53] /* ty=Tensor[(768), int16] */, %836, %var_10403, %var_10404)
}

def @func_3557(%var_3555: Tensor[(22), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(22), int16], Tensor[(77, 4), int16]) {
  @func_3554(%var_3555) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(308), int16], float32, Tensor[(22), int16], Tensor[(77, 4), int16]) */
}

def @func_4117(%var_4115: Tensor[(90, 14), float64], %var_4116: Tensor[(84), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(90, 14), float64], Tensor[(84), float64]) {
  %845 = fn (%var_4111: Tensor[(90, 14), float64], %var_4112: Tensor[(84), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(90, 14), float64], Tensor[(84), float64]) {
    %837 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %838 = cast(%var_4111, dtype="float64") /* ty=Tensor[(90, 14), float64] */;
    %839 = cast(%var_4112, dtype="float64") /* ty=Tensor[(84), float64] */;
    %840 = reshape(%838, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
    %841 = reshape(%839, newshape=[1, 84]) /* ty=Tensor[(1, 84), float64] */;
    %842 = @func_2131(%840, %841) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(?, 84), int32], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
    %843 = %837.0;
    %844 = %842.3;
    (%843, %844, %var_4111, %var_4112)
  };
  %845(%var_4115, %var_4116) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(90, 14), float64], Tensor[(84), float64]) */
}

def @func_7443(%var_7441: Tensor[(81), float32], %var_7442: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(144), uint32], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
  %854 = fn (%var_7422: Tensor[(81), float32], %var_7423: Tensor[(1260), float64]) -> (Tensor[(7, 11, 6), float64], Tensor[(144), uint32], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) {
    %846 = cast(%var_7422, dtype="float32") /* ty=Tensor[(81), float32] */;
    %847 = cast(%var_7423, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %848 = reshape(%846, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %849 = reshape(%847, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
    %850 = @func_5567(%848, %849) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) */;
    %851 = @func_6930() /* ty=Tensor[(7, 11, 6), float64] */;
    %852 = @func_6657() /* ty=Tensor[(144), uint32] */;
    %853 = %850.7;
    (%851, %852, %853, %var_7422, %var_7423)
  };
  %854(%var_7441, %var_7442) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(144), uint32], Tensor[(7, 11, 6), float64], Tensor[(81), float32], Tensor[(1260), float64]) */
}

def @func_3581() -> Tensor[(7, 11, 6), float64] {
  @func_3515() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_8251() -> Tensor[(7, 11, 6), float32] {
  @func_8249() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_8374() -> (Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64]) {
  %861 = fn () -> (Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64]) {
    %855 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
    %856 = %855.0;
    %857 = cast(%856, dtype="float64") /* ty=Tensor[(11, 9, 3), float64] */;
    %858 = @func_7081() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %859 = exp(%857) /* ty=Tensor[(11, 9, 3), float64] */;
    %860 = %858.0;
    (%859, %860)
  };
  %861() /* ty=(Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_8283(%var_8282: Tensor[(5, 11, 12), float64]) -> Tensor[(5, 11, 12), float64] {
  %863 = fn (%var_8274: Tensor[(5, 11, 12), float64]) -> Tensor[(5, 11, 12), float64] {
    %862 = cast(%var_8274, dtype="float64") /* ty=Tensor[(5, 11, 12), float64] */;
    log(%862) /* ty=Tensor[(5, 11, 12), float64] */
  };
  %863(%var_8282) /* ty=Tensor[(5, 11, 12), float64] */
}

def @func_9133() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %864 = @func_8524() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %865 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %866 = @func_8813() /* ty=Tensor[(7, 11, 6), float64] */;
  %867 = %864.0;
  %868 = %865.0;
  %869 = @func_8889() /* ty=Tensor[(7, 11, 6), float64] */;
  (%866, %867, %868, %869)
}

def @func_6750() -> (Tensor[(11, 9, 3), bool],) {
  @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */
}

def @func_12364() -> Tensor[(144), uint32] {
  @func_12362() /* ty=Tensor[(144), uint32] */
}

def @main(%var_12545: Tensor[(168), float64], %var_12600: Tensor[(297), bool]) -> (Tensor[(7, 11, 6), float64], Tensor[(14, 15, 5), bool], Tensor[(168), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(13, 1050), int64], Tensor[(11, 9, 3), float32], Tensor[(297), bool], Tensor[(7, 11, 6), float64], Tensor[(864), float64], Tensor[(11, 9, 3), bool], Tensor[(13, 1050), bool]) {
  %870 = @func_7594() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %871 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1050), bool] */, dtype="bool") /* ty=Tensor[(1, 1050), bool] */;
  %872 = cast(%var_12545, dtype="float64") /* ty=Tensor[(168), float64] */;
  %873 = reshape(%871, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), bool] */;
  %874 = reshape(%872, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %875 = @func_4238(%873, %874) /* ty=(Tensor[(14, 15, 5), bool], Tensor[(14, 15, 5), float32], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(4, 588), float64], Tensor[(7, 11, 6), float64]) */;
  %876 = @func_9723() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %877 = @func_5856() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
  %878 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1050), bool] */, dtype="int64") /* ty=Tensor[(1, 1050), int64] */;
  %879 = cast(meta[relay.Constant][55] /* ty=Tensor[(13, 1050), bool] */, dtype="int64") /* ty=Tensor[(13, 1050), int64] */;
  %880 = cast(%var_12600, dtype="bool") /* ty=Tensor[(297), bool] */;
  %881 = reshape(%880, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), bool] */;
  %882 = @func_11777(%881) /* ty=(Tensor[(11, 9, 3), uint16], Tensor[(11, 9, 3), float32]) */;
  %883 = cast(meta[relay.Constant][56] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %884 = reshape(%883, newshape=[6, 16, 9]) /* ty=Tensor[(6, 16, 9), float64] */;
  %885 = @func_12511(%884) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(6, 16, 9), bool]) */;
  %886 = cast(%var_12600, dtype="int16") /* ty=Tensor[(297), int16] */;
  %887 = reshape(%886, newshape=[297]) /* ty=Tensor[(297), int16] */;
  %888 = @func_6174(%887) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) */;
  %889 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1050), bool] */, dtype="bool") /* ty=Tensor[(1, 1050), bool] */;
  %890 = cast(meta[relay.Constant][55] /* ty=Tensor[(13, 1050), bool] */, dtype="bool") /* ty=Tensor[(13, 1050), bool] */;
  %891 = equal(%889, %890) /* ty=Tensor[(13, 1050), bool] */;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(13, 1050), float32] */;
  %893 = atanh(%892) /* ty=Tensor[(13, 1050), float32] */;
  %894 = cast(%893, dtype="uint16") /* ty=Tensor[(13, 1050), uint16] */;
  %895 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1050), bool] */, dtype="uint16") /* ty=Tensor[(1, 1050), uint16] */;
  %896 = bitwise_or(%894, %895) /* ty=Tensor[(13, 1050), uint16] */;
  %897 = cast(%896, dtype="bool") /* ty=Tensor[(13, 1050), bool] */;
  %898 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1050), bool] */, dtype="bool") /* ty=Tensor[(1, 1050), bool] */;
  %899 = %870.0;
  %900 = %875.0;
  %901 = @func_9539() /* ty=Tensor[(7, 11, 6), float64] */;
  %902 = %876.0;
  %903 = %877.2;
  %904 = @func_7812() /* ty=Tensor[(11, 6, 14), float64] */;
  %905 = bitwise_xor(%878, %879) /* ty=Tensor[(13, 1050), int64] */;
  %906 = %882.1;
  %907 = %885.0;
  %908 = %888.1;
  %909 = not_equal(%897, %898) /* ty=Tensor[(13, 1050), bool] */;
  (%899, %900, %var_12545, %901, %902, %903, %904, %905, %906, %var_12600, %907, meta[relay.Constant][56] /* ty=Tensor[(864), float64] */, %908, %909)
}

def @func_7739(%var_7724: Tensor[(1, 22), int16]) -> (Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), bool], Tensor[(11, 9, 3), bool], Tensor[(7, 11, 6), float64], Tensor[(1, 22), int16], Tensor[(308), int16], Tensor[(7, 3, 8), float32], Tensor[(7, 11, 6), float64]) {
  %910 = @func_7649() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %911 = @func_7649() /* ty=(Tensor[(7, 11, 6), bool],) */;
  %912 = @func_6748() /* ty=(Tensor[(11, 9, 3), bool],) */;
  %913 = cast(%var_7724, dtype="int16") /* ty=Tensor[(1, 22), int16] */;
  %914 = cast(meta[relay.Constant][57] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %915 = reshape(%913, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %916 = reshape(%914, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %917 = @func_1899(%915, %916) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %918 = %917.0;
  %919 = cast(%918, dtype="float32") /* ty=Tensor[(7, 3, 8), float32] */;
  %920 = %910.0;
  %921 = %911.0;
  %922 = %912.0;
  %923 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  %924 = sin(%919) /* ty=Tensor[(7, 3, 8), float32] */;
  %925 = @func_5050() /* ty=Tensor[(7, 11, 6), float64] */;
  (%920, %921, %922, %923, %var_7724, meta[relay.Constant][57] /* ty=Tensor[(308), int16] */, %924, %925)
}

def @func_6239(%var_6238: Tensor[(81), float32]) -> (Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(11, 6, 14), float64]) {
  %937 = fn (%var_6194: Tensor[(81), float32]) -> (Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(11, 6, 14), float64]) {
    %926 = cast(%var_6194, dtype="float32") /* ty=Tensor[(81), float32] */;
    %927 = reshape(%926, newshape=[9, 9, 1]) /* ty=Tensor[(9, 9, 1), float32] */;
    %928 = cast(meta[relay.Constant][58] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %929 = reshape(%928, newshape=[12, 7, 1]) /* ty=Tensor[(12, 7, 1), float64] */;
    %930 = @func_1349(%929) /* ty=(Tensor[(12, 7, 1), float64],) */;
    %931 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
    %932 = %931.3;
    %933 = cast(%932, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
    %934 = @func_2741(%927) /* ty=Tensor[(9, 9, 11), float32] */;
    %935 = %930.0;
    %936 = exp(%933) /* ty=Tensor[(11, 6, 14), float64] */;
    (%934, %var_6194, %935, meta[relay.Constant][58] /* ty=Tensor[(84), float64] */, %936)
  };
  %937(%var_6238) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(12, 7, 1), float64], Tensor[(84), float64], Tensor[(11, 6, 14), float64]) */
}

def @func_5052() -> Tensor[(7, 11, 6), float64] {
  @func_5050() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_9679(%var_9677: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int32],) {
  @func_9676(%var_9677) /* ty=(Tensor[(7, 11, 6), int32],) */
}

def @func_7878(%var_7876: Tensor[(432, 1), int8]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(432, 1), int8], Tensor[(7, 11, 6), float64]) {
  @func_7875(%var_7876) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(432, 1), int8], Tensor[(7, 11, 6), float64]) */
}

def @func_11301(%var_11299: Tensor[(5, 12, 2), float64]) -> (Tensor[(5, 12, 2), float64],) {
  @func_11298(%var_11299) /* ty=(Tensor[(5, 12, 2), float64],) */
}

def @func_11863(%var_11861: Tensor[(7, 11, 6), float64], %var_11862: Tensor[(7, 11, 6), float64]) -> (Tensor[(7, 11, 6), int8], Tensor[(7, 11, 6), float32], Tensor[(14, 2, 11), float64], Tensor[(182, 2), float32], Tensor[(7, 11, 6), int32]) {
  @func_11859(%var_11861, %var_11862) /* ty=(Tensor[(7, 11, 6), int8], Tensor[(7, 11, 6), float32], Tensor[(14, 2, 11), float64], Tensor[(182, 2), float32], Tensor[(7, 11, 6), int32]) */
}

def @func_10803() -> (Tensor[(7, 11, 6), float64],) {
  @func_10801() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_3708() -> (Tensor[(7, 11, 6), float32],) {
  @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */
}

def @func_11224() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) {
  %946 = fn () -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) {
    %938 = @func_5854() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
    %939 = %938.2;
    %940 = cast(%939, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
    %941 = reshape(%940, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
    %942 = @func_5237(%941) /* ty=(Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) */;
    %943 = @func_9477() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %944 = %942.0;
    %945 = %943.0;
    (%939, %944, %945)
  };
  %946() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) */
}

def @func_5678() -> Tensor[(7, 11, 6), float64] {
  %947 = fn () -> Tensor[(7, 11, 6), float64] {
    @func_4081() /* ty=Tensor[(7, 11, 6), float64] */
  };
  %947() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_5570(%var_5568: Tensor[(81), float32], %var_5569: Tensor[(3, 420), float64]) -> (Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) {
  %972 = fn (%var_5493: Tensor[(81), float32], %var_5518: Tensor[(3, 420), float64]) -> (Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) {
    %948 = cast(%var_5493, dtype="float32") /* ty=Tensor[(81), float32] */;
    %949 = reshape(%948, newshape=[9, 9, 1]) /* ty=Tensor[(9, 9, 1), float32] */;
    %950 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %951 = %950.0;
    %952 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %953 = %952.0;
    %954 = cast(%953, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
    %955 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
    %956 = cast(%951, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
    %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %958 = cast(%var_5518, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
    %959 = cast(meta[relay.Constant][59] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %960 = reshape(%958, newshape=[90, 14]) /* ty=Tensor[(90, 14), float64] */;
    %961 = reshape(%959, newshape=[84]) /* ty=Tensor[(84), float64] */;
    %962 = @func_4114(%960, %961) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(22), int16], Tensor[(90, 14), float64], Tensor[(84), float64]) */;
    %963 = cast(%953, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
    %964 = cast(meta[relay.Constant][60] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
    %965 = reshape(%964, newshape=[13, 11, 7]) /* ty=Tensor[(13, 11, 7), float32] */;
    %966 = @func_2741(%949) /* ty=Tensor[(9, 9, 11), float32] */;
    %967 = power(%956, %957) /* ty=Tensor[(7, 11, 6), float64] */;
    %968 = %962.0;
    %969 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
    %970 = acosh(%963) /* ty=Tensor[(7, 11, 6), float64] */;
    %971 = @func_5458(%965) /* ty=Tensor[(13, 11, 7), float32] */;
    (%966, %var_5493, %967, %968, %var_5518, meta[relay.Constant][59] /* ty=Tensor[(84), float64] */, %969, %970, %971, meta[relay.Constant][60] /* ty=Tensor[(1001), float32] */)
  };
  %972(%var_5568, %var_5569) /* ty=(Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(3, 420), float64], Tensor[(84), float64], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64], Tensor[(13, 11, 7), float32], Tensor[(1001), float32]) */
}

def @func_4238(%var_4236: Tensor[(14, 15, 5), bool], %var_4237: Tensor[(168), float64]) -> (Tensor[(14, 15, 5), bool], Tensor[(14, 15, 5), float32], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(4, 588), float64], Tensor[(7, 11, 6), float64]) {
  %988 = fn (%var_4188: Tensor[(14, 15, 5), bool], %var_4209: Tensor[(168), float64]) -> (Tensor[(14, 15, 5), bool], Tensor[(14, 15, 5), float32], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(4, 588), float64], Tensor[(7, 11, 6), float64]) {
    %973 = cast(meta[relay.Constant][61] /* ty=Tensor[(14, 15, 5), bool] */, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
    %974 = shape_of(%var_4188, dtype="int32") /* ty=Tensor[(3), int32] */;
    %975 = cast(%var_4188, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
    %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %977 = cast(meta[relay.Constant][61] /* ty=Tensor[(14, 15, 5), bool] */, dtype="float32") /* ty=Tensor[(14, 15, 5), float32] */;
    %978 = cast(%var_4209, dtype="float64") /* ty=Tensor[(168), float64] */;
    %979 = cast(meta[relay.Constant][62] /* ty=Tensor[(4, 588), float64] */, dtype="float64") /* ty=Tensor[(4, 588), float64] */;
    %980 = reshape(%978, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
    %981 = reshape(%979, newshape=[14, 14, 12]) /* ty=Tensor[(14, 14, 12), float64] */;
    %982 = @func_880(%980, %981) /* ty=(Tensor[(1, 14, 12), float32], Tensor[(14, 14, 12), int64]) */;
    %983 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %984 = logical_or(%975, %976) /* ty=Tensor[(14, 15, 5), bool] */;
    %985 = exp(%977) /* ty=Tensor[(14, 15, 5), float32] */;
    %986 = %982.1;
    %987 = %983.0;
    (%984, %985, %986, %var_4209, meta[relay.Constant][62] /* ty=Tensor[(4, 588), float64] */, %987)
  };
  %988(%var_4236, %var_4237) /* ty=(Tensor[(14, 15, 5), bool], Tensor[(14, 15, 5), float32], Tensor[(14, 14, 12), int64], Tensor[(168), float64], Tensor[(4, 588), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_5747(%var_5746: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), float32] {
  %995 = fn (%var_5724: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), float32] {
    %989 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
    %990 = %989.0;
    %991 = cast(%var_5724, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
    %992 = shape_of(%990, dtype="int32") /* ty=Tensor[(3), int32] */;
    %993 = cast(%990, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
    %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%993, %994) /* ty=Tensor[(7, 11, 6), float32] */
  };
  %995(%var_5746) /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_8170() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float32]) {
  @func_8168() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float32]) */
}

def @func_1902(%var_1900: Tensor[(22), int16], %var_1901: Tensor[(308), int16]) -> (Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) {
  %1004 = fn (%var_1874: Tensor[(22), int16], %var_1875: Tensor[(308), int16]) -> (Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) {
    %996 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 8), float32] */;
    %997 = cast(%var_1874, dtype="int16") /* ty=Tensor[(22), int16] */;
    %998 = cast(%var_1875, dtype="int16") /* ty=Tensor[(308), int16] */;
    %999 = reshape(%997, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), int16] */;
    %1000 = reshape(%998, newshape=[14, 2, 11]) /* ty=Tensor[(14, 2, 11), int16] */;
    %1001 = @func_102(%999, %1000) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */;
    %1002 = asin(%996) /* ty=Tensor[(7, 3, 8), float32] */;
    %1003 = %1001.1;
    (%1002, %1003, %var_1874, %var_1875)
  };
  %1004(%var_1900, %var_1901) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */
}

def @func_4915(%var_4892: Tensor[(768), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(768), int16], Tensor[(7, 11, 6), float64]) {
  %1005 = cast(%var_4892, dtype="int16") /* ty=Tensor[(768), int16] */;
  %1006 = reshape(%1005, newshape=[8, 6, 16]) /* ty=Tensor[(8, 6, 16), int16] */;
  %1007 = @func_4501(%1006) /* ty=(Tensor[(8, 6, 16), int16], Tensor[(7, 11, 6), float64], Tensor[(168), float64], Tensor[(364), int16]) */;
  %1008 = @func_3515() /* ty=Tensor[(7, 11, 6), float64] */;
  %1009 = %1007.3;
  %1010 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
  (%1008, %1009, %var_4892, %1010)
}

def @func_9851() -> Tensor[(9, 4, 1), float32] {
  %1011 = cast(meta[relay.Constant][64] /* ty=Tensor[(9, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 4, 1), float32] */;
  cosh(%1011) /* ty=Tensor[(9, 4, 1), float32] */
}

def @func_7892() -> Tensor[(11, 9, 3), bool] {
  @func_7890() /* ty=Tensor[(11, 9, 3), bool] */
}

def @func_9530() -> (Tensor[(11, 9, 3), float64], Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8]) {
  %1012 = @func_7890() /* ty=Tensor[(11, 9, 3), bool] */;
  %1013 = cast(%1012, dtype="float64") /* ty=Tensor[(11, 9, 3), float64] */;
  %1014 = cast(meta[relay.Constant][65] /* ty=Tensor[(432, 1), int8] */, dtype="int8") /* ty=Tensor[(432, 1), int8] */;
  %1015 = reshape(%1014, newshape=[432]) /* ty=Tensor[(432), int8] */;
  %1016 = @func_9037(%1015) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(432, 1), int8], Tensor[(432), int8]) */;
  %1017 = atan(%1013) /* ty=Tensor[(11, 9, 3), float64] */;
  %1018 = %1016.0;
  (%1017, %1018, meta[relay.Constant][65] /* ty=Tensor[(432, 1), int8] */)
}

def @func_106(%var_104: Tensor[(1, 2, 11), int16], %var_105: Tensor[(14, 2, 11), int16]) -> (Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) {
  @func_102(%var_104, %var_105) /* ty=(Tensor[(14, 2, 11), bool], Tensor[(14, 2, 11), float64]) */
}

def @func_4006(%var_3973: Tensor[(7, 15, 3), float64], %var_3989: Tensor[(81), float32], %var_3992: Tensor[(22), int16]) -> (Tensor[(7, 15, 3), float64], Tensor[(9, 9, 11), float32], Tensor[(81), float32], Tensor[(7, 3, 8), float32], Tensor[(22), int16], Tensor[(308), int16], Tensor[(7, 11, 6), float64]) {
  %1019 = cast(%var_3973, dtype="float64") /* ty=Tensor[(7, 15, 3), float64] */;
  %1020 = cast(%var_3989, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1021 = reshape(%1020, newshape=[9, 9, 1]) /* ty=Tensor[(9, 9, 1), float32] */;
  %1022 = cast(%var_3992, dtype="int16") /* ty=Tensor[(22), int16] */;
  %1023 = cast(meta[relay.Constant][66] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %1024 = reshape(%1022, newshape=[22]) /* ty=Tensor[(22), int16] */;
  %1025 = reshape(%1023, newshape=[308]) /* ty=Tensor[(308), int16] */;
  %1026 = @func_1899(%1024, %1025) /* ty=(Tensor[(7, 3, 8), float32], Tensor[(14, 2, 11), float64], Tensor[(22), int16], Tensor[(308), int16]) */;
  %1027 = @func_3824() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1028 = cos(%1019) /* ty=Tensor[(7, 15, 3), float64] */;
  %1029 = @func_2741(%1021) /* ty=Tensor[(9, 9, 11), float32] */;
  %1030 = %1026.0;
  %1031 = %1027.0;
  (%1028, %1029, %var_3989, %1030, %var_3992, meta[relay.Constant][66] /* ty=Tensor[(308), int16] */, %1031)
}

def @func_11319(%var_11312: Tensor[(10, 10, 6), float32]) -> Tensor[(10, 10, 6), float32] {
  %1032 = cast(%var_11312, dtype="float32") /* ty=Tensor[(10, 10, 6), float32] */;
  acos(%1032) /* ty=Tensor[(10, 10, 6), float32] */
}

def @func_12129() -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) {
  @func_12127() /* ty=(Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_10262(%var_10261: Tensor[(64, 12), int16]) -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(64, 12), int16]) {
  %1038 = fn (%var_10246: Tensor[(64, 12), int16]) -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(64, 12), int16]) {
    %1033 = cast(%var_10246, dtype="int16") /* ty=Tensor[(64, 12), int16] */;
    %1034 = reshape(%1033, newshape=[768]) /* ty=Tensor[(768), int16] */;
    %1035 = @func_4915(%1034) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(768), int16], Tensor[(7, 11, 6), float64]) */;
    %1036 = @func_7024() /* ty=Tensor[(7, 11, 6), float32] */;
    %1037 = %1035.3;
    (%1036, %1037, %var_10246)
  };
  %1038(%var_10261) /* ty=(Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(64, 12), int16]) */
}

def @func_6171(%var_6146: Tensor[(297), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(297), int16], Tensor[(7, 11, 6), float32], Tensor[(6, 16, 9), float64]) {
  %1039 = cast(%var_6146, dtype="int16") /* ty=Tensor[(297), int16] */;
  %1040 = reshape(%1039, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), int16] */;
  %1041 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
  %1042 = cast(%1041, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %1043 = sin(%1042) /* ty=Tensor[(7, 11, 6), float32] */;
  %1044 = cast(%1043, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %1045 = @func_4742() /* ty=(Tensor[(6, 16, 9), float64],) */;
  %1046 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
  %1047 = @func_969(%1040) /* ty=Tensor[(11, 9, 3), bool] */;
  %1048 = sinh(%1044) /* ty=Tensor[(7, 11, 6), float32] */;
  %1049 = %1045.0;
  (%1046, %1047, %var_6146, %1048, %1049)
}

def @func_8249() -> Tensor[(7, 11, 6), float32] {
  @func_6737() /* ty=Tensor[(7, 11, 6), float32] */
}

def @func_4410(%var_4397: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), bool] {
  %1050 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %1051 = %1050.0;
  %1052 = cast(%var_4397, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %1053 = shape_of(%1051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(%1051, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1054, %1055) /* ty=Tensor[(7, 11, 6), bool] */
}

def @func_7875(%var_7869: Tensor[(432, 1), int8]) -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32], Tensor[(432, 1), int8], Tensor[(7, 11, 6), float64]) {
  %1056 = cast(%var_7869, dtype="int8") /* ty=Tensor[(432, 1), int8] */;
  %1057 = cast(%var_7869, dtype="int8") /* ty=Tensor[(432, 1), int8] */;
  %1058 = reshape(%1056, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), int8] */;
  %1059 = reshape(%1057, newshape=[6, 8, 9]) /* ty=Tensor[(6, 8, 9), int8] */;
  %1060 = @func_5923(%1058, %1059) /* ty=(Tensor[(6, 8, 9), bool], Tensor[(7, 11, 6), float32]) */;
  %1061 = %1060.1;
  %1062 = cast(%1061, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %1063 = reshape(%1062, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %1064 = @func_5237(%1063) /* ty=(Tensor[(7, 11, 6), int64], Tensor[(7, 11, 6), float64]) */;
  %1065 = @func_6785() /* ty=Tensor[(7, 11, 6), float64] */;
  %1066 = %1064.1;
  (%1065, %1061, %var_7869, %1066)
}

def @func_6107(%var_6106: Tensor[(2, 384), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(7, 11, 6), float64], Tensor[(2, 384), bool]) {
  %1079 = fn (%var_6006: Tensor[(2, 384), int16]) -> (Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(7, 11, 6), float64], Tensor[(2, 384), bool]) {
    %1067 = cast(%var_6006, dtype="int16") /* ty=Tensor[(2, 384), int16] */;
    %1068 = reshape(%1067, newshape=[768]) /* ty=Tensor[(768), int16] */;
    %1069 = @func_4915(%1068) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(768), int16], Tensor[(7, 11, 6), float64]) */;
    %1070 = @func_4826() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %1071 = cast(meta[relay.Constant][67] /* ty=Tensor[(2, 384), int16] */, dtype="bool") /* ty=Tensor[(2, 384), bool] */;
    %1072 = shape_of(%var_6006, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1073 = cast(%var_6006, dtype="bool") /* ty=Tensor[(2, 384), bool] */;
    %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1075 = @func_4081() /* ty=Tensor[(7, 11, 6), float64] */;
    %1076 = %1069.1;
    %1077 = %1070.0;
    %1078 = greater(%1073, %1074) /* ty=Tensor[(2, 384), bool] */;
    (%1075, %1076, %1077, %1078)
  };
  %1079(%var_6106) /* ty=(Tensor[(7, 11, 6), float64], Tensor[(364), int16], Tensor[(7, 11, 6), float64], Tensor[(2, 384), bool]) */
}

def @func_7125(%var_7123: Tensor[(6, 8, 5), uint16]) -> (Tensor[(6, 8, 5), uint16], Tensor[(6, 8, 5), float64]) {
  @func_7122(%var_7123) /* ty=(Tensor[(6, 8, 5), uint16], Tensor[(6, 8, 5), float64]) */
}

def @func_11710() -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float32]) {
  %1080 = @func_3706() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %1081 = %1080.0;
  %1082 = @func_6737() /* ty=Tensor[(7, 11, 6), float32] */;
  (%1081, %1082)
}

def @func_8540() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
  %1086 = fn () -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) {
    %1083 = @func_7081() /* ty=(Tensor[(7, 11, 6), float64],) */;
    %1084 = %1083.0;
    %1085 = @func_4263() /* ty=Tensor[(7, 11, 6), float64] */;
    (%1084, %1085)
  };
  %1086() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */
}

def @func_12127() -> (Tensor[(7, 11, 6), float32], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), int32], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) {
  %1087 = @func_4439() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1088 = %1087.0;
  %1089 = cast(%1088, dtype="float64") /* ty=Tensor[(7, 11, 6), float64] */;
  %1090 = reshape(%1089, newshape=[7, 11, 6]) /* ty=Tensor[(7, 11, 6), float64] */;
  %1091 = @func_9676(%1090) /* ty=(Tensor[(7, 11, 6), int32],) */;
  %1092 = @func_7922() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(924), float64]) */;
  %1093 = @func_8539() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float64]) */;
  %1094 = @func_10096() /* ty=Tensor[(7, 11, 6), float32] */;
  %1095 = %1091.0;
  %1096 = %1092.1;
  %1097 = %1093.0;
  (%1094, %1088, %1095, %1096, %1097)
}

def @func_6393() -> (Tensor[(11, 9, 3), bool],) {
  %1098 = @func_4043() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 9, 3), bool], Tensor[(99, 3), int16]) */;
  %1099 = %1098.1;
  (%1099,)
}

def @func_11278(%var_11276: Tensor[(2912), float32], %var_11277: Tensor[(132), float64]) -> (Tensor[(7, 11, 6), bool], Tensor[(12, 1, 11), float64], Tensor[(2912), float32], Tensor[(132), float64], Tensor[(6, 16, 9), float64]) {
  %1109 = fn (%var_11239: Tensor[(2912), float32], %var_11240: Tensor[(132), float64]) -> (Tensor[(7, 11, 6), bool], Tensor[(12, 1, 11), float64], Tensor[(2912), float32], Tensor[(132), float64], Tensor[(6, 16, 9), float64]) {
    %1100 = @func_7649() /* ty=(Tensor[(7, 11, 6), bool],) */;
    %1101 = cast(%var_11239, dtype="float32") /* ty=Tensor[(2912), float32] */;
    %1102 = cast(%var_11240, dtype="float64") /* ty=Tensor[(132), float64] */;
    %1103 = reshape(%1101, newshape=[14, 16, 13]) /* ty=Tensor[(14, 16, 13), float32] */;
    %1104 = reshape(%1102, newshape=[132]) /* ty=Tensor[(132), float64] */;
    %1105 = @func_6279(%1103, %1104) /* ty=(Tensor[(14, 16, 13), float32], Tensor[(12, 1, 11), float64], Tensor[(132), float64]) */;
    %1106 = %1100.0;
    %1107 = %1105.1;
    %1108 = @func_6594() /* ty=Tensor[(6, 16, 9), float64] */;
    (%1106, %1107, %var_11239, %var_11240, %1108)
  };
  %1109(%var_11276, %var_11277) /* ty=(Tensor[(7, 11, 6), bool], Tensor[(12, 1, 11), float64], Tensor[(2912), float32], Tensor[(132), float64], Tensor[(6, 16, 9), float64]) */
}

def @func_9853() -> Tensor[(9, 4, 1), float32] {
  @func_9851() /* ty=Tensor[(9, 4, 1), float32] */
}

def @func_7357(%var_7355: Tensor[(7, 2, 3), float32]) -> (Tensor[(7, 2, 3), float32],) {
  @func_7354(%var_7355) /* ty=(Tensor[(7, 2, 3), float32],) */
}

def @func_4413(%var_4411: Tensor[(7, 11, 6), float32]) -> Tensor[(7, 11, 6), bool] {
  @func_4410(%var_4411) /* ty=Tensor[(7, 11, 6), bool] */
}

def @func_4349(%var_4343: Tensor[(8, 9, 2), uint32], %var_4344: Tensor[(8, 9, 2), uint32]) -> Tensor[(8, 9, 2), bool] {
  %1110 = cast(%var_4344, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %1111 = shape_of(%var_4343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1112 = cast(%var_4343, dtype="bool") /* ty=Tensor[(8, 9, 2), bool] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1112, %1113) /* ty=Tensor[(8, 9, 2), bool] */
}

def @func_5370() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(7, 11, 6), float64]) {
  %1114 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1115 = @func_5191() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(8, 9, 2), bool], Tensor[(144), uint32], Tensor[(11, 6, 14), float64], Tensor[(154, 6), float64]) */;
  %1116 = @func_4286() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1117 = %1114.0;
  %1118 = %1115.3;
  %1119 = %1116.0;
  (%1117, %1118, %1119)
}

def @func_7923() -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(924), float64]) {
  %1125 = fn () -> (Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(924), float64]) {
    %1120 = cast(meta[relay.Constant][68] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %1121 = reshape(%1120, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float64] */;
    %1122 = @func_3254(%1121) /* ty=(Tensor[(11, 6, 14), float64], Tensor[(22), int16], Tensor[(22), int16], Tensor[(308), int16]) */;
    %1123 = @func_3581() /* ty=Tensor[(7, 11, 6), float64] */;
    %1124 = %1122.0;
    (%1123, %1124, meta[relay.Constant][68] /* ty=Tensor[(924), float64] */)
  };
  %1125() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(11, 6, 14), float64], Tensor[(924), float64]) */
}

def @func_5487() -> Tensor[(7, 11, 6), float64] {
  @func_5485() /* ty=Tensor[(7, 11, 6), float64] */
}

def @func_9496() -> (Tensor[(7, 11, 6), float32],) {
  %1126 = @func_3732() /* ty=(Tensor[(7, 11, 6), float32],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_3671(%var_3655: Tensor[(91, 4), int16]) -> (Tensor[(14, 2, 11), float64], Tensor[(198), float64], Tensor[(91, 4), int16], Tensor[(7, 11, 6), float32]) {
  %1128 = cast(meta[relay.Constant][69] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %1129 = cast(meta[relay.Constant][69] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %1130 = cast(%var_3655, dtype="int16") /* ty=Tensor[(91, 4), int16] */;
  %1131 = reshape(%1128, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), float64] */;
  %1132 = reshape(%1129, newshape=[3, 11, 6]) /* ty=Tensor[(3, 11, 6), float64] */;
  %1133 = reshape(%1130, newshape=[182, 2]) /* ty=Tensor[(182, 2), int16] */;
  %1134 = @func_2466(%1131, %1132, %1133) /* ty=(Tensor[(3, 11, 6), float64], Tensor[(168), float64], Tensor[(182, 2), int16], Tensor[(308), int16], Tensor[(22), int16], Tensor[(308), int16], Tensor[(3, 11, 6), float64], Tensor[(14, 2, 11), float64], float32) */;
  %1135 = @func_3524() /* ty=(Tensor[(7, 11, 6), float64],) */;
  %1136 = %1135.0;
  %1137 = cast(%1136, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %1138 = atanh(%1137) /* ty=Tensor[(7, 11, 6), float32] */;
  %1139 = cast(meta[relay.Constant][70] /* ty=Tensor[(7, 11, 6), float32] */, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%1138, dtype="bool") /* ty=Tensor[(7, 11, 6), bool] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1143 = greater(%1141, %1142) /* ty=Tensor[(7, 11, 6), bool] */;
  %1144 = cast(%1143, dtype="float32") /* ty=Tensor[(7, 11, 6), float32] */;
  %1145 = %1134.7;
  %1146 = log2(%1144) /* ty=Tensor[(7, 11, 6), float32] */;
  (%1145, meta[relay.Constant][69] /* ty=Tensor[(198), float64] */, %var_3655, %1146)
}

def @func_7594() -> (Tensor[(7, 11, 6), float64],) {
  %1149 = fn () -> (Tensor[(7, 11, 6), float64],) {
    %1147 = @func_5854() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */;
    %1148 = %1147.2;
    (%1148,)
  };
  %1149() /* ty=(Tensor[(7, 11, 6), float64],) */
}

def @func_6956() -> (Tensor[(7, 11, 6), float64],) {
  %1150 = @func_6930() /* ty=Tensor[(7, 11, 6), float64] */;
  (%1150,)
}

def @func_10033() -> (Tensor[(7, 11, 6), float64], Tensor[(297), int16], Tensor[(297), int16], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32]) {
  @func_10031() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(297), int16], Tensor[(297), int16], Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), float32]) */
}

def @func_10087() -> (Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) {
  @func_10085() /* ty=(Tensor[(7, 11, 6), float64], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), bool], Tensor[(7, 11, 6), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen612/build/output.py", line 3504, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:39:41] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_111 = relay.var("var_111", dtype = "uint8", shape = (14, 10, 14))#candidate|111|(14, 10, 14)|var|uint8
var_112 = relay.var("var_112", dtype = "uint8", shape = (14, 10, 14))#candidate|112|(14, 10, 14)|var|uint8
bop_113 = relay.right_shift(var_111.astype('uint8'), relay.reshape(var_112.astype('uint8'), relay.shape_of(var_111))) # shape=(14, 10, 14)
output = relay.Tuple([bop_113,])
output2 = relay.Tuple([bop_113,])
func_125 = relay.Function([var_111,var_112,], output)
mod['func_125'] = func_125
mod = relay.transform.InferType()(mod)
var_126 = relay.var("var_126", dtype = "uint8", shape = (14, 10, 14))#candidate|126|(14, 10, 14)|var|uint8
var_127 = relay.var("var_127", dtype = "uint8", shape = (14, 10, 14))#candidate|127|(14, 10, 14)|var|uint8
output = func_125(var_126,var_127,)
func_128 = relay.Function([var_126,var_127,], output)
mutated_mod['func_128'] = func_128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_295 = relay.var("var_295", dtype = "float32", shape = (7, 10, 7))#candidate|295|(7, 10, 7)|var|float32
uop_296 = relay.log10(var_295.astype('float32')) # shape=(7, 10, 7)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
const_307 = relay.const([-2,6,-4,2,-2,-10,-7,3,7,-10,-6,-7,-10,-4,-4,6,2,6,10,3,3,8,6,-8,9,-7,-2,9,1,-5,-2,2,3,-10,-6,-7,-6,-8,6,9,-5,8,1,9,5,-8,5,1,-8,2,-1,4,4,4,-10,-3,9,2,3,5,-5,4,-3,-1,5,-8,4,6,7,-6,-4,2,2,-7,-7,-2,-5,4,1,-10,1,-3,-1,-1,-2,3,-7,3,-1,6,-3,2,-9,4,2,-6,-4,-5,1,-1,-4,1,1,5,-4,-2,1,3,-10,10,2,6,9,1,9,5,8,9,1,3,-4,4,-9,-7,-5,3,-7,5,10,7,8,5,9,-7,-5,-10,5,6,3,5,2,-7,-4,-6,10,4,-5,-6,-2,-9,-3,-7,4,-4,-9,-5,6,-2,6,-7,-1,-6,1,-5,7,9,4,2,-1,3,7,3,-9,8,-2,4,7,2,-6,-10,-2,4,-6,1,5,7,1,-7,-4,-8,9,4,1,-3,-4,9,3,1,2,-9,6,-8,8,9,-10,10,8,5,-9,-6,3,-8,-1,-10,-1,-9,-6,5,-2,-8,1,2,-2,-9,-5,-6,2,-7,-5,7,5,-2,-3,-5,-3,-7,-10,4,-6,-7,-7,1,8,-4,4,-8,7,10,-9,5,7,-6,1,-1,2,9,-2,3,-8,-3,-8,9,-5,5,3,7,2,-7,3,9,7,-9,6,-8,-8,-5,6,-4,-3,4,-9,-6,-4,3,2,-5,7,9,-5,-8,-10,9,-8,-8,10,-7,-2,-9,5,-6,-1,7,6,-3,-4,1,-3,1,-1,-2,-10,-1,3,3,-3,6,-3,-4,-10,-9,6,-10,10,10,-10,-4,3,-7,7,-4,-10,-4,7,9,5,-2,7,1,3,1,-6,-6,-10,7,10,8,4,-2,-10,-10,8,-7,4,-4,-9,-2,8,8,-8,7,-8,9,-9,-5,-1,-5,7,-6,7,-9,3,-5,-9,10,8,9,-4,-8,-1,-1,7,5,-7,-6,1,5,9,6,3,-9,-5,6,1,4,6,8,1,-7,4,-5,1,8,9,1,-2,-2,-1,10,-2,-3,10,-2,-5,-1,6,-4,7,-8,8,8,-10,-10,-9,-10,-5,-9,-4,-5,-4,8,4,7,-5,-6,4,6,-4,-2,9,4,-7,-8,-6,2,1,7,1,7,-9,-1,-8,-7,-3,7,-3,5,-6,10,8,-9,1,4,-2,-10,-7,5,7,-10,-1,2,10,3,-10,7,5,7,-3,-10,4,-9,-10,-6,6,-9,5,-2,-1,-10,-8,-9,2,-8,8,2,-5,-5,-7,4,-1,2,-6,-10,9,-10,-6,7,6,4,3,-8,-9,5,-7,1,4,3,-8,-9,-4,4,-5,-9,8,6,1,10,-8,6,-6,3,-10,9,1,7,-6,-5,-5,3,8,-5,-3,9,-1,-9,3,6,10,3,5,7,2,4,6,1,7,3,10,-1,8,-8,2,4,9,-3,7,6,4,7,7,6,-3,-2,-2,3,-5,-10,-5,10,4,-10,3,-2,-6,-9,-6,-5,-3,-1,-3,4,7,4,-10,8,10,-7,-4,2,-8,10,-3,1,5,-10,6,6,-7,5,-7,-1,1,-9,-5,-2,1,4,-1,9,-7,-4,-2,8,1,7,6,-4,-4,-1,-6,-3,-9,1,4,-5,1,-7,8,-2,-7,-8,5,-10,-4,1,6,-7,2,2,-7,10,6,1,-1,4,10,-2,3,7,5,-7,1,-3,-1,-3,-3,6,-8,-7,8,6,-3,-4,-2,-6,-8,-5,7,5,6,6,-9,-1,9,-8,9,-8,4,-1,-4,1,-9,2,6,-4,5,2,-2,3,-10,10,-4,-4,-10,-5,3,6,-4,-8,8,-5,-1,7,1,-7,-10,10,3,4,-10,-8,5,-5,-4,9,6,-5,2,-2,-1,-4,6,-6,-10,4,9,3,8,3,2,4,-8,6,-10,-3,-7,-3,-10,2,1,-10,-10,6,-2,1,-5,-3,-3,-2,-5,-3,9,5,-5,9,-5,-8,-3,-2,-5,10,-8,-2,-2,-2,-9,-9,-1,10,-1,3,8,-10,6,-6,5,-1,-1,-3,-9,-7,-10,-9,-3,6,-7,-2,10,6,6,-9,9,5,4,10,5,-2,-8,-7,-9,6,3,1,-2,1,10,-2,-3,7,-6,-1,-6,7,3,4,-8,9,10,5,8,3,-10,-7,1,10,-2,-10,3,2,-1,9,-9,-9,10,-3,3,-6,-1,6,6,-1,9,7,-9,8,-7,9,7,5,5,-6,5,1,-3,-8,-7,7,8,-5,-3,7,2,-4,-6,-4,8,-9,-2,-9,-9,5,-3,1,-6,-10,-1,-7,-5,-10,3,-1,-6,3,1,6,-6,6,-1,3,-5,-6,-2,-7,-7,7,3,-10,6,-10,5,9,-6,5,3,-5,-2,3,6,-10,-7,3,-5,-2,6,10,-9,-7,3,2,-1,-4,-10,7,-7,8,-6,-7,-4,5,-2,-3,3,5,3,4,4,5,5,9,10,5,6,8,2,10,-8,4,-5,9,-6,-10,-9,4,8,5,1,-6,3,-7,-9,10,1,9,4,-4,9,1,-10,3,8,-7,-9,6,-9,6,1,5,9,-10,2,-3,7,-10,-9,-6,-2,-4,6,-4,2,-2,7,6,1,-10,1,3,-7,6,7,-3,-3,-3,-8,7,-6,-6,6,8,-10,-10,2,-9,-8,5,5,6,8,8,-6,-9,-3,5,6,9,-2,7,4,-10,-8,-8,6,10,5,3,4,4,-6,-1,10,8,-2,-3,10,-9,-2,-1,2,4,1,9,-9,7,1,8,9,-3,-3,-7,4,1,-2,-4,-4,-4,-6,-2,-7,10,6,-7,-4,-6,-9,-9,-9,-8,-1,-7,-3,-9,5,5,10,-8,-3,-3,-7,5,-4,-10,-3,7,-3,10,-5,-8,-10,-2,10,9,7,2,3,-4,10,-3,4,-10,4,4,6,-4,7,-9,6,-10,-1,8,10,4,-4,4,9,-7,-3,-4,5,7,4,10,-5,-2,3,-2,-2,4,3,5,3,5,-3,6,9,-1,-1,-4,1,3,-7,-8,1,-4,1,6,-1,1,2,-3,1,5,-5,10,-4,-2,8,-10,2,-3,5,-9,10,2,7,4,-1,2,5,-2,5,-4,3,-1,-9,-10,-4,1,-8,6,8,3,-9,5,-5,7,-2,2,-2,-2,7,-5,10,-5,-9,-4,-2,-6,2,-7,10,-8,2,8,2,6,2,2,-7,10,9,3,-1,-2,-2,-9,-2,7,-6,9,6,9,7,10,6,10,-6,-9,-3,7,2,10,-10,8,-1,-3,-4,-3,-4,5,-4,7,9,6,-7,-9,-8,4,3,5,-1,-9,3,-6,-8,6,7,4,9,9,-5,-6,-7,-3,4,-4,-10,-10,6,9,6,-6,1,10,-1,8,9,-9,6,-7,-1,7,-4,4,4,4,9,4,1,9,-7,8,-3,-4,-8,-1,-10,8,-5,5,-6,-1,10,-6,-1,5,-4,-4,9,-5,-9,-5,5,4,-6,1,-10,8,8,-3,8,7,-2,-6,10,-7,8,-9,-7,-4,2,6,6,1,5,2,-1,-3,9,3,3,-8,4,-3,-10,6,2,5,-4,-1,10,2,2,4,5,1,-9,-8,-6,-6,9,8,3,-1,-10,8,8,1,5,1,3,7,-3,-5,-7,-5,2,-10,-9,-4,3,-10,3,-1,7,8,4,-3,2,7,-8,8,8,-9,-8,7,-6,-2,-8,-7,3,-6,3,-7,7,8,8,9,5,4,-2,5,-10,7,10,-7,-9,3,4,1,-3,9,5,9,8,3,6,8,-7,-6,-8,1,5,1,5,1,9,9,-1,-5,-4,9,-8,-6,1,-3,4,-6,9,8,-9,2,-10,3,-1,-10,-9,-5,-3,4,-2,3,-3,4,-6,6,3,7,-10,5,-1,6,-2,-6,1,-9,7,10,-10,-1,-9,4,-4,-5,1,8,5,-1,7,3,7,3,-3,3,-7,2,1,8,-6,2,3,1,-3,6,-10,-10,-9,9,5,-7,-8,10,4,-7,-3,2,-8,-5,-5,-3,-7,10,-5,10,-2,-4,-6,10,-2,-2,7,-2,-7,9,7,-7,-6,-10,5,-1,-7,-9,-1,4,-9,10,-10,-10,9,-9,3,1,-2,-10,-3,5,-8,-2,7,-2,-2,-10,-7,9,2,-2,-5,-4,-6,-5,-5,-8,7,2,5,8,-10,-2,-1,-3,-1,9,10,3,6,-4,8,-6,1,9,-3,5,-7,10,-8,-4,8,6,-5,-5,-9,-1,-8,-4,-6,6,1,-3,-10,10,-6,8,-6,-3,5,1,4,1,-1,-4,9,6,-3,10,-4,1,3,-5,6,-1,5,-5,5,4,2,-3,-9,-10,-8,8,-1,3,10,4,-5,9,8,-10,1,-9,3,3,-10,6,5,9,3,-9,-9,9,9,-5,-1,10,-10,-6,-10,7,-3,-8,-5,2,9,10,-6,2,-8,-4,2,2,2,7,6,2,4,-8,6,-6,-3,3,-7,7,-1,-6,-5,-5,6,-9,-7,-4,10,2,3,-1,6,10,-10,-1,-9,2,-5,1,2,-6,2,9,-3,1,9,-4,7,-10,-10,6,8,-3,8,4,5,-8,-9,2,8,-10,5,-1,8,9,-2,9,-4,3,-10,1,-7,6,-6,10,2,-10,-3,-1,-4,-3,7,6,-8,-3,-6,-4,3,-10,8,2,9,-9,3,-5,2,3,2,1,10,8,8,8,-4,4,-8,2,-8,-10,-4,-10,-5,-8,-2,-8,-2,-8,-10,6,5,-6,6,-10,2,7,-5,2,10,8,8,-6,-4,-5,-3,10,10,-10,-5,-3,10,-1,-7,-6,5,-2,-2,7,5,2,-2,-5,-10,9,5,10,-1,2,-8,-6,-2,9,-7,10,8,-9,4,-1,10,10,1,3,-3,-10,3,5,6,-7,-8,-6,-9,-7,10,-9,-9,8,-9,3,-5,-2,-1,-4,-10,-10,10,-7,3,-1,-3,3,-9,3,1,-7,-1,5,-7,8,1,-6,-6,-7,-6,-3,-1,10,-7,-6,-8,-7,4,-8,-2,-8,6,2,-6,2,1,10,2,-2,2,-9,4,7,9,-9,-6,2,1,-6,6,1,-5,-9,-1,-10,-10,-3,-5,2,-8,5,-10,-7,-4,7,3,5,-7,7,-7,10,5,4,4,6,-9,-7], dtype = "uint8")#candidate|307|(1960,)|const|uint8
call_306 = relay.TupleGetItem(func_125_call(relay.reshape(const_307.astype('uint8'), [14, 10, 14]), relay.reshape(const_307.astype('uint8'), [14, 10, 14]), ), 0)
call_308 = relay.TupleGetItem(func_128_call(relay.reshape(const_307.astype('uint8'), [14, 10, 14]), relay.reshape(const_307.astype('uint8'), [14, 10, 14]), ), 0)
uop_309 = relay.exp(var_295.astype('float64')) # shape=(7, 10, 7)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_321 = relay.TupleGetItem(func_125_call(relay.reshape(const_307.astype('uint8'), [14, 10, 14]), relay.reshape(call_306.astype('uint8'), [14, 10, 14]), ), 0)
call_322 = relay.TupleGetItem(func_128_call(relay.reshape(const_307.astype('uint8'), [14, 10, 14]), relay.reshape(call_306.astype('uint8'), [14, 10, 14]), ), 0)
uop_325 = relay.acosh(call_321.astype('float32')) # shape=(14, 10, 14)
uop_327 = relay.acosh(call_322.astype('float32')) # shape=(14, 10, 14)
uop_334 = relay.rsqrt(uop_296.astype('float32')) # shape=(7, 10, 7)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_336 = relay.TupleGetItem(func_125_call(relay.reshape(const_307.astype('uint8'), [14, 10, 14]), relay.reshape(const_307.astype('uint8'), [14, 10, 14]), ), 0)
call_337 = relay.TupleGetItem(func_128_call(relay.reshape(const_307.astype('uint8'), [14, 10, 14]), relay.reshape(const_307.astype('uint8'), [14, 10, 14]), ), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_340 = relay.TupleGetItem(func_125_call(relay.reshape(call_306.astype('uint8'), [14, 10, 14]), relay.reshape(uop_325.astype('uint8'), [14, 10, 14]), ), 0)
call_341 = relay.TupleGetItem(func_128_call(relay.reshape(call_306.astype('uint8'), [14, 10, 14]), relay.reshape(uop_325.astype('uint8'), [14, 10, 14]), ), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_347 = relay.TupleGetItem(func_125_call(relay.reshape(const_307.astype('uint8'), [14, 10, 14]), relay.reshape(call_340.astype('uint8'), [14, 10, 14]), ), 0)
call_348 = relay.TupleGetItem(func_128_call(relay.reshape(const_307.astype('uint8'), [14, 10, 14]), relay.reshape(call_340.astype('uint8'), [14, 10, 14]), ), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_350 = relay.TupleGetItem(func_125_call(relay.reshape(call_336.astype('uint8'), [14, 10, 14]), relay.reshape(call_321.astype('uint8'), [14, 10, 14]), ), 0)
call_351 = relay.TupleGetItem(func_128_call(relay.reshape(call_336.astype('uint8'), [14, 10, 14]), relay.reshape(call_321.astype('uint8'), [14, 10, 14]), ), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_366 = relay.TupleGetItem(func_125_call(relay.reshape(call_336.astype('uint8'), [14, 10, 14]), relay.reshape(call_340.astype('uint8'), [14, 10, 14]), ), 0)
call_367 = relay.TupleGetItem(func_128_call(relay.reshape(call_336.astype('uint8'), [14, 10, 14]), relay.reshape(call_340.astype('uint8'), [14, 10, 14]), ), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_377 = relay.TupleGetItem(func_125_call(relay.reshape(call_340.astype('uint8'), [14, 10, 14]), relay.reshape(call_347.astype('uint8'), [14, 10, 14]), ), 0)
call_378 = relay.TupleGetItem(func_128_call(relay.reshape(call_340.astype('uint8'), [14, 10, 14]), relay.reshape(call_347.astype('uint8'), [14, 10, 14]), ), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_389 = relay.TupleGetItem(func_125_call(relay.reshape(call_366.astype('uint8'), [14, 10, 14]), relay.reshape(call_366.astype('uint8'), [14, 10, 14]), ), 0)
call_390 = relay.TupleGetItem(func_128_call(relay.reshape(call_366.astype('uint8'), [14, 10, 14]), relay.reshape(call_366.astype('uint8'), [14, 10, 14]), ), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_398 = relay.TupleGetItem(func_125_call(relay.reshape(call_366.astype('uint8'), [14, 10, 14]), relay.reshape(const_307.astype('uint8'), [14, 10, 14]), ), 0)
call_399 = relay.TupleGetItem(func_128_call(relay.reshape(call_366.astype('uint8'), [14, 10, 14]), relay.reshape(const_307.astype('uint8'), [14, 10, 14]), ), 0)
bop_405 = relay.floor_mod(uop_334.astype('float64'), relay.reshape(uop_309.astype('float64'), relay.shape_of(uop_334))) # shape=(7, 10, 7)
output = relay.Tuple([call_306,const_307,uop_325,call_336,call_340,call_347,call_350,call_366,call_377,call_389,call_398,bop_405,])
output2 = relay.Tuple([call_308,const_307,uop_327,call_337,call_341,call_348,call_351,call_367,call_378,call_390,call_399,bop_405,])
func_422 = relay.Function([var_295,], output)
mod['func_422'] = func_422
mod = relay.transform.InferType()(mod)
var_423 = relay.var("var_423", dtype = "float32", shape = (7, 10, 7))#candidate|423|(7, 10, 7)|var|float32
output = func_422(var_423)
func_424 = relay.Function([var_423], output)
mutated_mod['func_424'] = func_424
mutated_mod = relay.transform.InferType()(mutated_mod)
const_510 = relay.const([[[6.400872,-7.062117],[-2.549851,-5.689363],[8.752857,-0.566775],[-4.670536,-3.960343]],[[-5.211238,8.266189],[7.906526,8.086965],[-9.272163,-9.225095],[-6.912185,-0.042880]],[[-1.810892,-7.567263],[8.366420,3.518871],[2.025092,-0.571720],[-6.908578,7.407962]],[[-7.600742,3.728874],[-8.157298,6.136479],[-6.267586,1.420249],[-1.423963,-7.119103]],[[3.207762,1.498715],[9.415992,5.578079],[-4.075650,-8.979001],[-7.394903,7.293307]],[[-6.628782,8.973008],[-7.339966,-5.976650],[-6.500000,2.722052],[0.845996,-2.515871]],[[-8.296160,7.689735],[-1.397547,8.446753],[4.204071,9.189380],[4.647479,-7.431360]],[[6.183702,-5.941235],[-1.930068,9.631000],[3.751135,1.591500],[-2.148961,4.092974]],[[8.370415,0.300401],[7.635152,8.571904],[-8.991805,-3.104714],[5.200831,-7.104647]],[[-2.873256,-8.621436],[1.332572,-2.092445],[2.030372,0.147311],[9.594740,-9.479007]],[[4.013549,-1.857432],[-3.421261,1.191865],[1.522993,-0.204812],[-4.146567,2.758876]],[[-5.807660,-7.315424],[6.149790,-3.326247],[-1.538764,5.945272],[-7.423665,8.212482]],[[2.619962,-2.805527],[8.640543,-9.633828],[3.565149,1.753734],[5.724231,4.037885]],[[8.596840,9.273992],[-0.963770,4.457502],[9.151871,-3.192961],[-3.821251,-0.667836]],[[8.153459,-2.930375],[-3.679333,9.462131],[4.215015,-9.497445],[-9.664716,-2.381415]],[[8.770932,-9.397945],[8.189600,-1.389105],[-9.739143,-0.738004],[-3.654822,-5.438523]]], dtype = "float32")#candidate|510|(16, 4, 2)|const|float32
uop_511 = relay.tan(const_510.astype('float32')) # shape=(16, 4, 2)
uop_529 = relay.sin(uop_511.astype('float64')) # shape=(16, 4, 2)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
var_533 = relay.var("var_533", dtype = "uint8", shape = (1960,))#candidate|533|(1960,)|var|uint8
call_532 = relay.TupleGetItem(func_125_call(relay.reshape(var_533.astype('uint8'), [14, 10, 14]), relay.reshape(var_533.astype('uint8'), [14, 10, 14]), ), 0)
call_534 = relay.TupleGetItem(func_128_call(relay.reshape(var_533.astype('uint8'), [14, 10, 14]), relay.reshape(var_533.astype('uint8'), [14, 10, 14]), ), 0)
output = relay.Tuple([uop_529,call_532,var_533,])
output2 = relay.Tuple([uop_529,call_534,var_533,])
func_536 = relay.Function([var_533,], output)
mod['func_536'] = func_536
mod = relay.transform.InferType()(mod)
mutated_mod['func_536'] = func_536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_537 = relay.var("var_537", dtype = "uint8", shape = (1960,))#candidate|537|(1960,)|var|uint8
func_536_call = mutated_mod.get_global_var('func_536')
call_538 = func_536_call(var_537)
output = call_538
func_539 = relay.Function([var_537], output)
mutated_mod['func_539'] = func_539
mutated_mod = relay.transform.InferType()(mutated_mod)
var_576 = relay.var("var_576", dtype = "float64", shape = (8, 8, 12))#candidate|576|(8, 8, 12)|var|float64
uop_577 = relay.atanh(var_576.astype('float64')) # shape=(8, 8, 12)
uop_584 = relay.sqrt(uop_577.astype('float32')) # shape=(8, 8, 12)
output = uop_584
output2 = uop_584
func_603 = relay.Function([var_576,], output)
mod['func_603'] = func_603
mod = relay.transform.InferType()(mod)
var_604 = relay.var("var_604", dtype = "float64", shape = (8, 8, 12))#candidate|604|(8, 8, 12)|var|float64
output = func_603(var_604)
func_605 = relay.Function([var_604], output)
mutated_mod['func_605'] = func_605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_621 = relay.var("var_621", dtype = "float64", shape = (5, 2, 10))#candidate|621|(5, 2, 10)|var|float64
uop_622 = relay.asin(var_621.astype('float64')) # shape=(5, 2, 10)
uop_632 = relay.sqrt(uop_622.astype('float32')) # shape=(5, 2, 10)
bop_646 = relay.add(uop_632.astype('int64'), relay.reshape(uop_622.astype('int64'), relay.shape_of(uop_632))) # shape=(5, 2, 10)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
var_650 = relay.var("var_650", dtype = "uint8", shape = (1960,))#candidate|650|(1960,)|var|uint8
call_649 = relay.TupleGetItem(func_125_call(relay.reshape(var_650.astype('uint8'), [14, 10, 14]), relay.reshape(var_650.astype('uint8'), [14, 10, 14]), ), 0)
call_651 = relay.TupleGetItem(func_128_call(relay.reshape(var_650.astype('uint8'), [14, 10, 14]), relay.reshape(var_650.astype('uint8'), [14, 10, 14]), ), 0)
output = relay.Tuple([bop_646,call_649,var_650,])
output2 = relay.Tuple([bop_646,call_651,var_650,])
func_658 = relay.Function([var_621,var_650,], output)
mod['func_658'] = func_658
mod = relay.transform.InferType()(mod)
mutated_mod['func_658'] = func_658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_658_call = mutated_mod.get_global_var('func_658')
var_660 = relay.var("var_660", dtype = "float64", shape = (5, 2, 10))#candidate|660|(5, 2, 10)|var|float64
var_661 = relay.var("var_661", dtype = "uint8", shape = (1960,))#candidate|661|(1960,)|var|uint8
call_659 = func_658_call(var_660,var_661,)
output = call_659
func_662 = relay.Function([var_660,var_661,], output)
mutated_mod['func_662'] = func_662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_719 = relay.var("var_719", dtype = "float32", shape = (2, 12, 4))#candidate|719|(2, 12, 4)|var|float32
uop_720 = relay.asinh(var_719.astype('float32')) # shape=(2, 12, 4)
bop_724 = relay.left_shift(uop_720.astype('uint64'), relay.reshape(var_719.astype('uint64'), relay.shape_of(uop_720))) # shape=(2, 12, 4)
uop_738 = relay.sigmoid(var_719.astype('float64')) # shape=(2, 12, 4)
var_748 = relay.var("var_748", dtype = "uint64", shape = (2, 12, 4))#candidate|748|(2, 12, 4)|var|uint64
bop_749 = relay.mod(bop_724.astype('float64'), relay.reshape(var_748.astype('float64'), relay.shape_of(bop_724))) # shape=(2, 12, 4)
func_422_call = mod.get_global_var('func_422')
func_424_call = mutated_mod.get_global_var('func_424')
var_758 = relay.var("var_758", dtype = "float32", shape = (490,))#candidate|758|(490,)|var|float32
call_757 = relay.TupleGetItem(func_422_call(relay.reshape(var_758.astype('float32'), [7, 10, 7])), 0)
call_759 = relay.TupleGetItem(func_424_call(relay.reshape(var_758.astype('float32'), [7, 10, 7])), 0)
output = relay.Tuple([uop_738,bop_749,call_757,var_758,])
output2 = relay.Tuple([uop_738,bop_749,call_759,var_758,])
func_764 = relay.Function([var_719,var_748,var_758,], output)
mod['func_764'] = func_764
mod = relay.transform.InferType()(mod)
mutated_mod['func_764'] = func_764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_764_call = mutated_mod.get_global_var('func_764')
var_766 = relay.var("var_766", dtype = "float32", shape = (2, 12, 4))#candidate|766|(2, 12, 4)|var|float32
var_767 = relay.var("var_767", dtype = "uint64", shape = (2, 12, 4))#candidate|767|(2, 12, 4)|var|uint64
var_768 = relay.var("var_768", dtype = "float32", shape = (490,))#candidate|768|(490,)|var|float32
call_765 = func_764_call(var_766,var_767,var_768,)
output = call_765
func_769 = relay.Function([var_766,var_767,var_768,], output)
mutated_mod['func_769'] = func_769
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1132 = relay.const([[[4.759756,9.913327,6.827423,3.914372,3.337009,4.192703,5.808390,2.309213,-3.783564,7.847970,-8.161318,0.178778,-3.463204,7.458743,7.700119],[0.224749,3.776860,4.481955,-4.693490,-8.624099,5.314230,-7.773408,5.892292,4.758987,4.454010,-2.044488,-4.473663,-7.642484,-1.153315,-9.477721],[-1.066166,-5.349986,-2.477489,-0.747295,1.329472,-0.446215,-7.689653,8.888150,-9.582340,0.680392,1.489181,7.968878,-6.942353,-0.411400,-4.151430],[-1.651780,-9.906013,-9.359695,-9.234447,8.088117,4.579578,-3.685861,3.716531,9.835916,-9.604394,8.397069,-5.350514,3.873515,-7.187283,5.042496],[-8.890298,8.252826,7.592917,8.351849,-7.812333,9.741917,-6.270730,0.123448,9.934326,6.223240,-5.787564,-4.959392,-3.587268,7.347454,5.475286]],[[5.493227,-9.784923,8.068015,-6.515793,-2.916397,8.900517,-9.253870,6.519895,5.517622,-0.909769,8.955188,2.797611,6.899849,6.608434,-5.185961],[6.292293,2.702688,-8.650746,0.506538,2.025651,1.613838,5.224311,3.932223,-1.983560,-2.005616,7.872005,3.518706,7.666843,-8.994953,1.635367],[0.758766,-8.588275,-2.947496,3.727973,4.009349,1.131640,-7.941058,-7.668494,-3.027686,-7.850466,1.492082,-6.715713,3.680267,0.097082,-8.666190],[-0.364447,-5.102131,-6.211916,-8.994364,-5.320396,4.430474,-6.244537,5.290651,0.666093,0.665762,-7.601348,9.384370,7.742441,-4.303978,7.006616],[1.002751,-6.043685,-4.966854,2.214580,6.426273,3.861010,0.960677,-2.945973,-6.743720,-6.292900,3.025715,6.166649,7.565453,3.768470,1.872007]],[[8.133517,1.601415,-9.854734,-9.944237,-4.110726,-5.896299,-6.368046,6.001608,-1.524149,-6.754548,-4.776568,6.397736,5.435551,-7.880228,-5.457418],[8.243384,5.707410,8.664294,-6.995561,7.279933,0.586999,-1.886327,4.771502,-5.754924,-7.804194,4.755695,0.538344,-3.272031,1.736588,5.954174],[-1.641894,8.210520,7.241821,-3.716910,7.034007,-3.542105,3.850009,-1.114289,3.457361,-9.946780,-3.235399,-1.470577,-4.523033,-1.475035,1.446448],[2.791644,-9.650018,4.344513,5.085152,4.738991,6.755793,-7.964126,0.988545,-1.664530,4.113954,-4.783583,-9.385197,3.116547,8.865460,-1.870087],[-3.097992,-0.801102,4.812220,-0.640926,8.247145,1.091954,-9.352045,5.661950,-3.617557,-1.815509,-5.433635,0.123183,8.819986,3.051531,-4.240804]],[[1.275601,5.651543,8.602528,-6.485020,-7.778579,-7.769105,-0.441506,0.288819,-7.352942,5.085241,5.931727,5.974664,-3.327882,-8.469728,3.297643],[-4.642924,9.463783,-0.691692,-5.553437,-5.459351,8.025731,-1.553055,1.065588,8.018606,8.369814,-3.182647,6.554320,-6.463399,-3.449417,3.826573],[7.697191,0.620383,-9.529942,-9.121514,-5.077480,9.122730,7.140483,5.242116,9.094915,-8.513512,-5.901101,7.341963,-1.890712,4.774018,-4.683826],[-0.564172,-4.377878,-1.371303,1.288931,2.069899,-1.632216,7.617206,-2.685114,-2.606145,-9.620612,4.290956,-2.975490,-5.910715,-1.920475,2.965444],[-4.898263,-9.405152,4.450668,3.260030,6.627330,-3.951689,0.584416,7.375559,2.516895,0.018017,-0.072670,-4.035163,-1.044087,7.261574,-7.930998]]], dtype = "float32")#candidate|1132|(4, 5, 15)|const|float32
const_1133 = relay.const([[[-8.856786,-0.501242,7.246553,3.982113,-2.523797,-4.781758,2.466498,-3.916892,6.098698,-2.765865,-0.686220,-0.075332,3.189848,7.005194,0.420820],[4.179937,-8.253129,3.849035,1.705340,3.702023,7.936469,-8.222419,1.400082,9.479621,-1.952128,5.615960,-9.898363,1.948848,6.642402,4.553255],[-5.581057,9.338334,-8.739826,-3.693322,9.452833,-2.092432,9.927944,0.579522,9.001159,0.376588,4.863274,-7.451949,0.991841,0.110275,-1.835313],[5.395251,4.821299,8.459627,3.070094,-6.553302,9.324554,6.738741,5.454809,-8.284670,7.213295,-2.945516,-6.455000,-3.810702,4.863729,-8.386067],[7.184533,-6.481875,-6.567485,-0.572400,6.845740,-5.194567,1.968719,7.999873,3.892620,2.934740,1.061242,3.860336,-4.241168,6.835456,1.517324]],[[0.519563,7.979860,-8.526202,-5.123544,-3.156398,6.816594,-4.156789,-7.601723,7.399303,3.991966,2.206471,-6.107432,-6.453224,-9.617222,-2.785944],[-6.121526,-4.972296,1.853686,2.632494,-8.729702,5.198836,0.762998,-1.737552,5.516283,2.704521,6.279088,-8.051343,1.358932,-5.369681,-7.416509],[2.540964,1.270026,7.264921,-7.991847,-8.653645,-3.456834,-4.802479,7.070639,8.955024,-3.507956,-1.405079,5.029274,-4.577053,8.420784,7.678206],[0.946733,-4.735880,-4.894497,-0.689247,4.464157,2.361000,-4.916382,6.907357,0.692368,8.801632,1.295151,9.251434,-6.289027,7.249875,-7.396298],[4.679013,9.321661,-4.087049,7.189779,1.194816,4.331535,-0.888393,-6.000619,-1.855080,8.353183,-0.442502,0.889055,4.900696,4.874707,5.353232]],[[8.831903,3.658013,1.692910,7.902992,-8.779970,9.837629,2.467949,-8.432479,6.445423,3.092338,-7.000000,4.995546,3.690603,5.577061,5.979105],[4.104971,4.613679,9.484302,-9.149271,-3.279476,8.845182,3.834345,3.142023,4.315586,-0.227685,4.312865,-8.913199,-3.560089,-9.722653,-6.537580],[-1.393316,-0.206838,-4.885351,-7.142998,-6.235022,-7.925237,-0.646244,3.121315,8.383778,-1.445491,8.089733,-7.232029,-3.625960,-1.014419,-2.248761],[-2.803571,-8.799089,-1.124138,1.706555,4.112820,2.487845,0.109146,4.517836,-1.277176,9.222431,-5.393030,-7.876622,-4.121834,7.295275,1.662108],[7.748633,4.804418,1.507438,4.810647,-8.525430,-3.488298,-4.328166,-6.355850,-6.803548,-6.415494,9.261874,2.601957,2.464909,8.149252,-0.969446]],[[-9.475222,-9.352061,7.286175,4.204232,-8.309417,5.714868,-2.918274,8.129203,-2.879669,5.763062,6.364627,4.371993,-6.259701,8.679340,-1.761556],[5.483377,0.679972,-9.161756,2.075703,2.910853,0.452585,-1.334282,-8.641889,-2.996200,-6.354790,4.728510,5.200534,-8.706177,5.874790,3.200324],[2.121205,-7.473429,-7.615761,3.096244,4.744542,-4.186189,4.858792,-8.336512,-4.656001,-8.436766,-5.099852,-5.189107,5.465530,0.320337,-6.040694],[-1.843312,2.511941,2.513835,3.097012,4.906375,3.205371,3.702193,8.343845,4.946207,4.571925,-9.802820,4.515772,3.283724,8.314026,-1.470035],[3.601290,6.469983,8.687069,-2.151463,7.004927,9.719274,6.417929,7.827189,-6.667211,-5.967419,6.612808,3.909483,-3.210809,3.975616,-4.728127]]], dtype = "float32")#candidate|1133|(4, 5, 15)|const|float32
bop_1134 = relay.divide(const_1132.astype('float32'), relay.reshape(const_1133.astype('float32'), relay.shape_of(const_1132))) # shape=(4, 5, 15)
func_764_call = mod.get_global_var('func_764')
func_769_call = mutated_mod.get_global_var('func_769')
var_1139 = relay.var("var_1139", dtype = "float32", shape = (1, 96))#candidate|1139|(1, 96)|var|float32
var_1140 = relay.var("var_1140", dtype = "float32", shape = (1, 490))#candidate|1140|(1, 490)|var|float32
call_1138 = relay.TupleGetItem(func_764_call(relay.reshape(var_1139.astype('float32'), [2, 12, 4]), relay.reshape(var_1139.astype('uint64'), [2, 12, 4]), relay.reshape(var_1140.astype('float32'), [490,]), ), 0)
call_1141 = relay.TupleGetItem(func_769_call(relay.reshape(var_1139.astype('float32'), [2, 12, 4]), relay.reshape(var_1139.astype('uint64'), [2, 12, 4]), relay.reshape(var_1140.astype('float32'), [490,]), ), 0)
output = relay.Tuple([bop_1134,call_1138,var_1139,var_1140,])
output2 = relay.Tuple([bop_1134,call_1141,var_1139,var_1140,])
func_1143 = relay.Function([var_1139,var_1140,], output)
mod['func_1143'] = func_1143
mod = relay.transform.InferType()(mod)
var_1144 = relay.var("var_1144", dtype = "float32", shape = (1, 96))#candidate|1144|(1, 96)|var|float32
var_1145 = relay.var("var_1145", dtype = "float32", shape = (1, 490))#candidate|1145|(1, 490)|var|float32
output = func_1143(var_1144,var_1145,)
func_1146 = relay.Function([var_1144,var_1145,], output)
mutated_mod['func_1146'] = func_1146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1287 = relay.var("var_1287", dtype = "float64", shape = (4, 16, 2))#candidate|1287|(4, 16, 2)|var|float64
uop_1288 = relay.exp(var_1287.astype('float64')) # shape=(4, 16, 2)
func_658_call = mod.get_global_var('func_658')
func_662_call = mutated_mod.get_global_var('func_662')
var_1292 = relay.var("var_1292", dtype = "float64", shape = (100,))#candidate|1292|(100,)|var|float64
const_1293 = relay.const([[-2,1,6,-6,3,-1,-8,-1,6,-8,-3,10,-1,7,-5,-2,-5,-8,-3,2,-4,8,-5,-10,10,-7,-6,9,2,-3,-6,3,-6,-6,5,-8,8,-3,-6,3,-5,-8,-9,-8,-6,-7,4,6,3,2,8,7,5,-1,4,-6,6,10,1,-4,9,-9,-3,4,5,-4,-5,10,-2,10,5,-7,-9,4,-4,-7,4,-5,-1,3,-4,-10,7,-10,9,6,-7,-4,-7,6,-1,-4,1,9,8,-1,-8,-3,10,-5,5,-6,-2,9,-1,3,-10,-4,-6,-6,-7,-7,9,-2,-5,-10,8,-5,6,-2,-10,8,3,2,7,2,-6,-10,8,4,1,-4,-1,1,-4,4,-1,-4,6,-2,4,8,-2,5,-2,-3,-2,-4,-7,-10,-10,-5,-1,-3,-4,2,10,10,-10,-2,-1,-7,-4,-7,6,10,-4,-6,3,-1,-6,-7,-3,-8,9,7,-7,-6,-5,-9,-10,8,-5,6,6,5,8,-10,-8,-6,-10,-8,5,-7,-4,-1],[7,-8,-4,2,-2,3,10,3,-2,4,9,-9,5,7,2,6,9,-4,6,4,5,-10,-9,-3,-9,4,-9,6,-9,-5,-1,4,3,-3,-6,-9,-4,-7,9,5,5,9,2,-9,-6,-6,3,9,8,5,8,-6,-2,-5,-1,10,-10,3,2,-5,-4,7,10,3,7,1,-3,-10,-10,-7,-5,-10,-6,7,2,-8,2,6,-3,-8,-9,8,10,9,2,2,5,-2,-4,8,-10,4,4,-2,9,9,-2,1,4,-1,-8,-4,4,3,-5,-4,9,-7,-6,-2,-10,4,-10,4,-7,-10,10,9,2,-2,4,1,3,-8,8,5,-5,-10,6,-8,-10,9,6,4,3,-2,1,10,-3,5,2,-9,-1,-9,4,-9,10,4,9,2,1,6,-1,-8,-9,-6,-4,-6,-4,1,4,2,-9,10,4,7,7,-9,-4,-3,-1,1,-3,-10,4,7,-1,-2,7,6,5,7,1,-2,-5,5,3,-1,5,-7,1,6,5,2,-1,3],[4,-10,8,-9,7,10,1,10,3,4,-1,7,10,10,-8,1,-5,-8,-5,5,-8,-5,6,-7,-1,4,1,10,9,-7,2,-10,9,9,4,7,1,-2,-5,8,10,-10,1,4,-1,-10,9,10,-7,-1,5,4,-9,-4,3,-2,4,-4,3,7,-1,5,-7,5,5,7,-5,7,7,-8,-3,-5,-4,2,-9,9,5,9,10,8,-1,7,-5,-1,6,-3,2,6,9,1,-4,-7,6,-1,-9,4,-5,7,7,-2,-7,-2,5,5,5,-1,6,-7,3,1,-8,-3,7,-3,-7,-9,-2,-3,10,-10,-4,3,-8,-4,-10,-4,-9,-1,6,-3,9,-7,-5,-5,-10,10,-5,-6,3,7,-3,4,-7,-10,-7,5,-7,6,-5,-8,7,1,-1,6,-6,-9,-3,3,-8,-10,-10,-10,7,8,8,-9,6,-6,8,2,6,-3,6,8,2,10,4,8,7,-7,4,9,-7,-8,8,7,3,2,9,-5,9,3,-5,-9,9,-7],[-2,-4,1,2,-1,-3,2,-8,-7,-3,8,4,-9,8,-6,4,1,-7,-1,2,-1,-8,10,3,1,-8,4,-4,2,2,9,8,-3,2,7,5,1,-8,-1,10,8,1,-9,-4,9,1,-1,7,5,9,-7,9,-10,-9,-9,-5,7,1,-2,-7,1,8,8,-8,-9,4,-3,-2,-1,6,-9,8,-6,4,-4,-9,-8,6,4,-10,3,9,-8,-9,-1,10,5,-8,7,-8,-4,7,-4,9,-7,3,2,5,2,-8,8,-4,7,3,5,-6,-10,10,-6,-4,-7,-4,-8,10,5,-2,7,-6,-10,-10,-2,-6,1,-6,7,1,-6,5,-6,-3,-5,1,-5,-8,-10,1,-7,4,-5,7,2,-7,3,-4,7,7,4,-5,7,-5,-4,-8,-7,10,-5,-3,-5,5,2,-4,-7,-2,10,-2,-3,-5,7,-9,-8,-4,8,-9,-8,8,2,-1,-4,1,-2,-5,2,-3,5,-1,5,-5,-5,-3,-9,-4,-4,9,10,5,3,-7],[10,-3,-4,-8,-2,-9,7,1,-4,6,-2,9,7,3,2,6,-2,6,5,-4,-7,5,6,10,5,-9,3,8,-1,-1,-3,-6,-5,-10,6,-7,-8,9,-10,-5,6,-1,-3,8,-4,-7,-5,-1,-5,1,6,6,-2,-9,5,7,-9,10,-9,-5,7,-9,5,3,2,3,1,1,4,8,-3,1,-5,-3,-9,-7,-2,-9,8,-9,5,8,1,1,-9,-7,6,-6,8,3,-8,4,-9,-9,6,-9,9,-8,7,8,-10,10,-10,5,6,5,-2,-7,5,-10,-3,-1,4,-5,-9,-9,-5,-5,7,-6,9,8,2,2,1,-8,1,-7,7,8,-4,-4,-7,-7,-10,9,4,-1,-3,6,7,8,-1,6,8,5,2,10,-10,-6,-8,10,-4,-10,5,3,-8,-3,8,9,3,8,5,7,-5,-8,9,4,-2,-2,-10,1,8,7,3,-3,-1,-2,-9,4,3,6,3,-7,4,-1,4,2,-8,-9,-6,7,-1,6,7,3],[-3,4,-7,-8,-8,-7,1,-4,10,-9,-6,-4,5,-9,1,4,9,9,-9,-10,5,1,7,-6,1,-3,-4,-5,6,-1,4,-10,-5,10,5,-3,5,10,-1,1,4,8,1,-4,7,-4,3,3,-5,2,-1,2,-8,10,-9,-3,4,-10,7,2,1,3,1,4,7,6,10,5,-10,-9,-5,1,-6,-4,5,4,-1,-2,3,8,3,-9,4,2,9,5,6,5,9,2,3,-1,-3,9,-10,-7,3,-5,9,2,-3,-2,-3,10,6,5,9,4,-1,-1,1,4,-3,-2,-8,-8,1,9,-9,-7,2,4,10,-7,-10,1,-6,7,4,10,4,-5,2,-1,5,-5,10,10,7,10,-8,1,6,1,-5,-3,3,-4,-2,-5,2,3,7,-1,-3,-4,-2,4,10,7,8,-6,8,5,6,-6,-8,-10,4,-1,-2,9,7,1,1,-5,-8,2,-1,-9,-7,-5,5,1,-7,-10,7,-5,5,4,-4,6,7,1,7,5],[4,-10,-5,10,-5,-3,2,-7,-3,-2,9,8,-8,-6,-8,10,2,3,-10,3,3,-8,-5,-1,-7,5,3,-3,-2,-7,-3,2,-4,5,8,-1,-4,-8,-5,7,-4,-9,-6,7,3,-10,-8,10,-7,-7,-4,8,9,-7,6,8,6,6,-10,-2,6,7,-4,7,-5,10,5,5,5,8,-8,1,4,6,10,-6,9,2,4,7,-4,-9,7,10,-8,3,-5,-9,-4,2,2,4,-3,7,6,7,2,-8,1,-9,8,-4,10,1,-8,-2,3,2,-10,5,2,5,-9,-3,3,-9,5,6,-7,-9,-2,-3,-7,-2,5,-3,1,-3,3,3,7,6,3,7,-1,-5,9,7,-5,5,8,9,7,2,-9,5,4,7,-5,9,5,8,-4,-2,-4,10,-6,-3,-2,-3,9,6,1,-5,10,-2,-8,10,5,-2,10,3,1,-9,1,2,9,-5,1,-7,-4,7,9,-5,-3,7,6,-1,8,-8,1,-8,9,-9,3,-3],[-6,8,-2,-2,-7,8,1,-10,9,-7,-9,-9,10,3,5,-10,-8,6,9,-7,-9,2,6,8,-10,-6,-3,1,4,-9,-10,9,7,-10,-5,5,-1,3,-6,1,-7,-7,3,-6,-10,5,3,-9,-1,-9,3,-10,10,10,-6,4,-9,6,10,8,-4,-1,-10,7,7,-8,9,-5,-3,7,-9,5,-3,-9,-2,5,3,-4,8,4,7,-8,-2,-7,9,6,-6,-5,1,-4,-2,-8,-6,-7,6,-10,5,-1,-10,-4,2,-6,-3,7,-6,7,-1,2,-1,-2,2,10,-9,-4,1,9,-10,-4,-5,-6,-4,-8,2,-2,2,-8,5,2,10,4,-6,5,-5,6,9,-2,7,-8,3,9,-6,-10,6,-7,-9,-8,-2,-10,3,9,-8,-7,-3,3,6,1,-1,-5,4,5,-10,10,-9,9,6,6,-8,-10,-9,-7,3,9,1,-2,5,-10,-10,5,1,-1,-1,-1,-9,10,-4,-5,4,-2,7,10,9,6,-10,-1,4,-6],[-1,4,9,-10,-10,9,-8,-1,-5,6,10,-5,3,-9,-2,-2,5,-2,9,-7,-6,6,-9,8,7,8,-8,-8,-3,-9,-4,-7,-8,-1,-1,-7,7,1,-10,10,7,-3,-2,-7,7,-7,9,-8,-3,4,-1,10,-6,-4,2,-2,-1,-5,7,6,-9,5,-9,5,-5,-5,-1,4,8,2,3,10,-10,-7,-8,-2,-7,5,1,-7,6,-5,-7,-4,9,6,9,-6,-2,7,7,6,-6,2,-8,6,-1,3,-9,4,1,10,7,-1,10,-8,5,4,5,-9,-7,9,5,9,-8,-10,2,-1,7,-7,-1,-5,-10,-10,-5,10,-5,1,2,3,-2,9,4,-4,-5,7,9,-4,9,6,4,-7,6,8,9,-5,4,-6,5,7,-2,-4,6,-1,-2,10,-2,5,-8,-3,-2,-7,-2,5,4,5,-8,-10,9,-1,8,-8,-10,-8,6,3,-10,6,-7,9,-5,-9,7,9,-1,-10,-2,7,1,-8,7,-7,-6,-10,8,-4],[6,-7,-3,1,-7,-10,9,-10,-5,9,4,8,3,-10,-7,-3,8,-8,-8,-4,1,-3,5,1,4,1,-8,-7,-9,9,1,-1,-1,1,-9,4,3,10,-3,-8,-1,-6,-2,-7,9,-8,-9,1,-1,1,1,10,5,2,1,8,2,10,-6,-6,-4,-7,-5,-4,5,8,1,10,10,-5,-5,-4,6,3,-4,6,3,-2,6,-7,-9,6,5,-7,9,5,-2,3,4,9,4,5,-3,-10,-2,7,-1,5,-1,10,-2,-6,-3,-2,6,4,-9,9,-7,10,-5,-5,1,2,-10,-4,7,-9,-2,7,4,-7,-4,6,5,-3,2,9,-9,7,-3,-4,-2,3,5,1,-3,2,-9,7,4,-6,-1,4,-8,-1,-2,3,7,-10,-6,-10,3,4,-4,-8,2,-7,-9,-5,1,-7,-9,9,-6,8,3,-9,-4,8,4,6,-10,-3,3,-7,1,7,6,-6,6,4,-4,6,6,5,2,9,4,2,-7,-2,-2,-8,5,-1]], dtype = "uint8")#candidate|1293|(10, 196)|const|uint8
call_1291 = relay.TupleGetItem(func_658_call(relay.reshape(var_1292.astype('float64'), [5, 2, 10]), relay.reshape(const_1293.astype('uint8'), [1960,]), ), 2)
call_1294 = relay.TupleGetItem(func_662_call(relay.reshape(var_1292.astype('float64'), [5, 2, 10]), relay.reshape(const_1293.astype('uint8'), [1960,]), ), 2)
output = relay.Tuple([uop_1288,call_1291,var_1292,const_1293,])
output2 = relay.Tuple([uop_1288,call_1294,var_1292,const_1293,])
func_1295 = relay.Function([var_1287,var_1292,], output)
mod['func_1295'] = func_1295
mod = relay.transform.InferType()(mod)
var_1296 = relay.var("var_1296", dtype = "float64", shape = (4, 16, 2))#candidate|1296|(4, 16, 2)|var|float64
var_1297 = relay.var("var_1297", dtype = "float64", shape = (100,))#candidate|1297|(100,)|var|float64
output = func_1295(var_1296,var_1297,)
func_1298 = relay.Function([var_1296,var_1297,], output)
mutated_mod['func_1298'] = func_1298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1408 = relay.var("var_1408", dtype = "float64", shape = (5, 11, 14))#candidate|1408|(5, 11, 14)|var|float64
uop_1409 = relay.tan(var_1408.astype('float64')) # shape=(5, 11, 14)
const_1414 = relay.const([[[4.070131,-6.984974,1.775624,1.868965,7.403294,-0.693770,5.046392,3.934199,5.557856,8.289813,-5.782749,1.527246,-3.960846,2.273033],[6.257407,1.945466,7.770515,3.372352,-2.834721,-8.152621,4.789922,-9.163993,6.101122,-5.531015,-3.720347,5.445979,-2.913485,6.072239],[6.321717,-8.343396,5.388311,3.201569,9.530860,1.653389,9.822875,0.419049,-8.329997,5.237708,0.635491,7.581632,-7.031882,-1.683652],[7.713677,2.345564,0.341406,8.566825,7.547791,5.624553,-8.358348,-2.614071,-8.938388,-3.053761,1.710633,-4.109573,4.015570,-2.655559],[8.697653,-5.518399,-8.605800,1.291609,0.173203,5.247711,8.809478,6.036237,7.213588,3.763988,2.156956,7.519912,3.016487,1.509913],[7.372547,-9.333946,7.125383,5.031239,-6.096007,5.367088,8.763689,-2.351648,8.914355,-0.056963,0.488037,-3.965721,9.196291,7.680247],[-8.336262,0.024098,-1.881900,-8.917938,5.264257,-9.412691,-5.256603,7.656724,-8.942861,-4.075689,-0.105369,-2.008743,-3.583964,-9.784601],[-2.716004,-7.195853,7.034366,-5.633744,-6.211084,7.466397,-0.187927,6.517152,5.562665,9.208530,6.014130,3.033470,-6.384812,7.220317],[-0.085805,6.896163,-3.566188,7.959667,0.729577,0.518964,-5.405310,0.718053,-2.674389,7.012909,-1.562257,7.247983,-8.133750,7.032939],[7.354029,1.684330,-3.883533,-4.533774,5.981818,-3.356268,-0.712785,-3.203208,-3.453641,6.405229,-0.499433,-2.184802,1.669434,-6.084787],[-1.162169,5.455142,8.199988,-9.056966,2.123718,-2.450415,-4.236780,5.544870,-7.987989,-5.698621,-8.500832,-6.014365,-9.501409,6.838184]],[[-4.900454,-5.649163,1.529390,-7.982056,-0.175316,-0.273193,-0.203802,-6.025616,-0.344761,6.107035,0.273208,5.363786,6.362535,1.405368],[5.424007,-2.781501,-0.152080,-5.292165,-0.670908,-3.756576,2.725208,-4.262790,0.929822,4.789718,-8.887780,8.193511,-0.613904,4.649760],[-8.938230,3.078512,4.157755,4.987891,-3.102042,3.760388,3.346605,-7.310771,5.164327,-3.712876,8.331280,-2.715291,-7.378334,-5.975485],[-4.460741,-2.118754,-9.235696,-8.797544,5.369365,5.858996,-6.779595,-2.308216,0.581214,-0.081375,3.482026,7.402374,-3.338476,7.189131],[5.223376,1.199941,9.639678,-6.591378,-1.893916,-0.259335,5.308669,3.642952,-2.660116,2.575413,-7.347325,-2.662487,-6.320259,2.573388],[9.792729,0.658932,-2.237206,5.327823,-8.109570,3.047080,-3.651149,1.395289,0.853923,7.688787,-9.658685,1.864980,6.016362,4.592874],[-0.260436,-6.803198,4.304930,-7.868359,2.489774,0.087329,-5.958141,-4.446623,-9.523128,-8.721408,-1.969150,-4.761176,-4.852881,-1.670150],[6.177213,8.506519,-6.800963,-9.778436,0.596931,3.929301,-6.456845,-0.018516,9.801366,9.969758,-5.113160,4.996694,-7.260506,-3.050010],[-6.530616,-3.229273,-2.726907,4.030516,7.579289,-3.252234,-1.221031,2.878666,-6.946959,3.965782,-2.282051,-1.277728,-9.550735,-4.130003],[5.610083,9.542698,0.979983,1.468487,8.913907,-4.776748,-7.079555,0.326140,-5.107356,0.407726,7.423802,-0.972247,-0.115387,-5.493431],[-3.464604,7.394018,7.208915,3.147694,-2.432064,-5.722593,9.071280,-7.093505,9.781012,4.689177,9.569289,9.445801,0.579344,-3.324773]],[[-8.398961,3.642772,3.052919,-7.361006,7.232525,8.551963,-0.604680,-9.153363,-5.437374,-4.441434,-0.456783,2.225467,-3.153524,-4.429380],[-8.807049,8.646105,-8.483608,-7.702349,9.008705,-3.760941,-5.462369,-2.685271,-9.786838,2.802278,-3.204200,-1.533884,2.083747,-4.523646],[-0.115864,7.886273,1.568794,8.685937,9.943645,-3.973519,-0.529818,-7.803744,-4.204016,-0.660927,0.089647,-3.984422,8.320512,-7.066383],[-3.142175,-2.830197,-7.372257,-6.293932,1.067833,5.006547,5.803203,9.095040,-2.984466,-7.704342,6.669595,7.139070,-7.287100,-0.246096],[8.802261,-1.234379,6.590770,-4.280834,6.302454,8.737352,4.020102,0.337629,-1.586236,-8.381285,-8.272151,-4.957098,0.182240,-9.696066],[2.670666,3.366563,-6.129533,-2.964969,2.801668,6.032888,3.327573,9.112650,3.829356,9.352164,6.961837,-0.260936,7.571592,9.816219],[5.972652,-4.288623,-6.312698,9.740700,-9.783264,-3.749406,-1.904051,-8.887571,7.934669,-7.638644,-2.029828,-7.642550,-7.990921,-3.423534],[0.880334,-7.597867,4.409632,4.545763,4.052481,-8.962137,0.773706,8.181237,-1.424693,0.674036,4.870848,-8.468757,-5.061645,9.908801],[-1.865523,-2.172854,-8.198716,-0.501038,8.868481,4.809700,-1.088191,-8.144173,7.662251,6.193112,1.995014,4.055486,7.787267,0.034642],[-6.450570,-3.422864,-8.756257,9.200158,1.017786,-1.056823,1.981149,9.028797,-1.981621,4.622408,7.343537,7.267383,-3.432692,8.934227],[4.761126,6.157173,-9.214040,-5.910945,-0.291420,1.217565,4.989995,-4.878987,7.542909,-3.956211,-3.687266,0.954245,-6.874951,-6.501119]],[[6.188795,-6.000326,-2.269261,2.333243,0.894847,0.282528,2.861225,-3.536194,3.283589,3.772304,-3.185244,-5.025485,-1.132376,2.444356],[-3.715491,5.258038,2.429784,-5.199499,1.980838,-4.948116,8.249092,-9.743111,-9.684576,5.138170,4.800911,4.968232,-5.980712,-9.848120],[6.958838,-3.052034,-6.224639,-5.742838,2.138267,3.108422,-8.462369,-1.970147,-9.423703,-2.968646,5.113541,-1.005840,-6.894323,-3.498534],[0.665298,3.696883,-6.085272,-8.605499,8.225306,0.199021,-2.429200,5.623164,-2.201948,-4.222793,-7.027160,-8.965000,1.026104,5.323307],[-9.651306,-5.617648,-3.808976,-6.477765,3.465210,4.658154,1.321994,-1.915635,-6.969508,-0.665457,6.096736,5.007143,5.543826,4.016845],[-5.061015,7.366810,-4.826337,-6.693671,6.165931,-1.807196,5.765745,-5.570264,-2.616043,-2.259206,-1.353783,6.940857,-6.031631,-1.902273],[-8.340383,-1.889859,-3.453847,8.279263,9.550750,0.674051,6.927423,-1.909595,-9.228710,9.518120,8.578204,8.973938,0.719536,3.287362],[9.691954,3.314304,8.910262,-9.122378,8.074649,-9.097192,1.921732,-9.507992,5.322640,6.497220,1.489513,-9.441034,4.126854,-9.639473],[3.112772,-6.676148,1.864109,-6.887157,2.971456,-6.726592,1.521120,4.133838,8.675975,7.440376,-0.400531,-6.770764,2.116586,-7.961302],[-1.252909,2.477375,-5.389853,-9.340092,-9.726269,-6.846599,4.914171,-4.746229,-8.754678,5.912546,7.635047,-0.127790,8.547868,8.427429],[-2.357684,6.408078,0.868791,-0.732708,-9.257255,7.316809,7.738463,-0.257691,2.222590,9.462066,2.721529,4.501194,9.719100,-5.668874]],[[-4.586657,-2.036334,-0.924309,0.346630,-2.876855,4.298128,-9.205971,0.176644,5.207855,-6.288761,7.030811,-1.150049,-7.104439,0.570606],[9.362528,-3.692082,-0.718481,-2.680276,8.328875,-5.422719,2.871238,-0.132742,-7.015257,-2.528565,-7.105645,-6.033285,-8.471467,-9.400808],[-4.297630,6.249876,8.686805,2.931704,-7.691237,-4.227435,4.186974,6.521279,5.167579,-0.146243,-4.349596,1.022652,4.410260,-1.672752],[-4.335443,-6.379435,-2.285844,-8.680666,-3.316503,7.091209,-5.059814,-2.886618,-4.413508,-8.589521,2.053656,-9.883658,4.416202,-2.269494],[2.967108,5.744844,8.227083,8.581806,4.121671,-7.874386,7.622106,-0.396631,7.412783,-1.708605,-4.735839,4.745309,9.080941,5.605148],[2.419002,-4.547855,-0.886458,-5.430393,3.532159,-1.878013,-8.632553,-6.488449,-4.438837,9.448411,5.394515,-2.348730,-1.187640,-6.335692],[2.364794,9.294210,1.200794,7.901815,7.150082,-7.960718,8.036665,3.412777,3.678768,-9.189676,-4.564658,6.642782,0.871258,9.881482],[-9.313337,5.646632,-2.122023,-1.307983,-9.821629,7.643028,-4.690733,2.633675,-8.060583,1.245760,-7.200890,-6.221777,1.969858,2.134432],[6.290455,-7.606258,-8.460982,4.823396,-8.866043,-8.917997,8.448470,-9.464285,5.773081,-1.403448,-5.277896,1.501012,3.761685,2.528343],[-5.720058,1.414443,-3.358569,0.474598,9.097565,1.719635,-1.699325,1.644224,9.147141,8.127539,0.401542,2.580713,2.687453,-0.048210],[-7.488946,0.721658,-6.002494,-9.552137,8.679100,9.425496,-1.951690,-3.998417,4.377352,-2.246041,-6.182606,5.258306,5.776242,8.112103]]], dtype = "float64")#candidate|1414|(5, 11, 14)|const|float64
bop_1415 = relay.bitwise_or(uop_1409.astype('int16'), relay.reshape(const_1414.astype('int16'), relay.shape_of(uop_1409))) # shape=(5, 11, 14)
func_422_call = mod.get_global_var('func_422')
func_424_call = mutated_mod.get_global_var('func_424')
const_1422 = relay.const([[-5.022522,-9.541031],[9.527291,6.325435],[3.738517,-2.755557],[3.753184,3.767389],[-3.064204,0.470270],[-2.575386,-9.808469],[-6.003704,3.438563],[-7.588422,-1.973988],[-8.372464,8.551238],[9.972536,2.181557],[-3.072004,-0.201978],[3.955101,3.615415],[3.415658,2.349309],[-1.719241,3.830373],[-3.341102,3.381742],[7.696736,3.955574],[9.861223,4.859488],[8.843215,3.419657],[-9.825693,5.869792],[8.005808,1.033897],[2.127604,2.806596],[-8.368644,-6.063192],[8.357537,4.380430],[-7.035347,8.693409],[6.994322,-0.641444],[2.444821,9.740035],[1.210256,8.889863],[7.282055,9.782095],[0.273141,-9.042295],[5.107981,-1.971519],[9.993764,0.043579],[-9.890359,8.057550],[4.732790,-2.607019],[0.403278,-7.533414],[-3.491819,3.186099],[-0.738966,-8.685067],[5.114188,3.291453],[-5.086361,-9.918410],[-1.691235,8.709295],[-8.887036,-6.072459],[-9.519018,-8.310021],[-9.728685,-9.217007],[-5.608271,-8.870533],[-6.950386,-4.172354],[-4.240309,-7.470015],[-8.998743,-3.026598],[1.284973,1.169756],[-5.917622,0.662011],[9.905505,-1.715108],[0.667615,-1.880170],[-2.276129,-0.297592],[-3.979199,9.826472],[2.420258,0.080089],[-2.801596,-9.089277],[6.099314,3.391345],[3.222710,-4.531717],[-2.726399,8.557493],[0.897126,4.562846],[-6.534739,-8.483306],[-4.889587,9.601398],[7.913307,6.708037],[-9.464519,2.510025],[-8.581209,6.836687],[-7.196253,-8.409952],[-0.933350,-9.546773],[1.640276,-5.951121],[2.711057,-5.488235],[-2.848378,8.112781],[-1.158524,5.276448],[-9.619758,-6.788039],[8.051154,5.231623],[9.848206,-1.008076],[6.838091,1.267590],[-7.382846,-4.486756],[-3.807947,3.550941],[0.932832,2.687227],[-5.089073,-7.226775],[6.943380,3.980418],[7.072304,-3.797069],[-0.654335,-7.514157],[1.478299,-2.427654],[9.545935,-5.929866],[-8.603416,-5.319116],[-7.522270,8.238628],[-3.328631,-0.573261],[7.512574,-4.492824],[-6.853809,8.862021],[5.251345,-3.231676],[-0.430555,-2.035233],[9.132783,3.328829],[2.679236,2.083586],[8.286993,-8.432638],[4.320274,-1.994513],[-1.721429,5.850622],[3.916158,3.865723],[-7.107408,-8.860481],[-1.437943,5.421898],[4.684130,0.052283],[-4.565297,-1.515318],[-7.801056,-8.792792],[8.319775,-2.139800],[0.837284,-6.423365],[-5.956694,-6.271410],[1.659858,1.684096],[7.055115,-8.599406],[-0.590190,9.197960],[-6.785567,-0.500433],[-0.654383,-3.887894],[2.147026,8.555982],[-1.176442,-0.067562],[2.465560,-6.007268],[3.457387,5.882104],[-1.865743,1.008015],[2.850306,6.389065],[-8.594432,-1.605594],[-7.199787,7.634455],[3.994964,7.250346],[-4.110627,4.769796],[-8.517612,4.693139],[7.059712,-7.304364],[-8.488584,-0.661311],[8.446417,0.629003],[-1.134691,-1.638827],[1.921500,-0.838591],[8.604053,-2.902111],[7.686354,6.371924],[1.653984,8.751069],[6.080558,-0.461742],[0.051365,-5.175319],[9.689220,9.664323],[9.269170,-1.273091],[9.997926,-6.705888],[-2.668939,-7.079035],[-8.867549,0.542983],[-4.999549,-7.044952],[3.166265,8.723407],[-3.569992,1.966279],[-1.441406,5.288595],[-0.018180,-5.687188],[-7.946693,-8.949726],[5.306852,5.393525],[9.785212,-5.772604],[1.058448,6.731645],[5.941686,-5.371350],[-2.826673,5.093356],[-7.737141,3.387690],[5.391734,-2.954333],[-3.611205,-7.784016],[3.366841,1.935405],[0.053575,3.276860],[-0.761045,8.528464],[8.712489,3.010326],[4.669994,-5.390427],[7.599909,-9.408454],[6.084093,0.162386],[-2.159672,-6.726504],[9.246991,-9.808575],[4.466616,1.259275],[-9.747688,9.746508],[-8.661075,-8.980676],[-9.012838,9.257173],[-9.404833,-7.256039],[-4.055236,0.287456],[7.193117,4.483329],[2.122243,0.221672],[7.742261,-3.180796],[2.638516,2.553344],[4.651268,7.777302],[5.668175,1.006391],[2.648413,3.980490],[0.101221,-4.142699],[-5.069232,6.354283],[4.679922,-9.298932],[-3.025106,-7.532777],[1.148092,2.678289],[4.310188,-8.128264],[-4.912269,-6.041502],[1.983012,1.130403],[-8.229811,9.616005],[7.135037,-8.711288],[-6.177991,5.022218],[-3.639725,-6.640038],[-6.510893,-1.772195],[8.436118,-8.053605],[-2.444106,8.496438],[-5.311915,9.109095],[-4.433394,-1.854422],[3.062400,-8.994681],[0.756280,-0.665712],[1.665052,2.320167],[1.809543,-1.966678],[-5.772751,-2.457944],[5.029911,-8.747310],[-2.636506,4.287616],[4.889945,5.828619],[-3.727603,-0.548518],[0.196062,5.097680],[1.781757,-1.994515],[-8.171982,7.790265],[2.180443,-4.291947],[4.592356,5.892064],[-6.973684,-2.641215],[-9.244505,-5.752540],[2.549998,-9.021973],[-0.316631,-4.527368],[6.179870,-8.100491],[6.757594,-8.628312],[5.018501,7.432937],[-0.277500,-1.828451],[8.083966,-6.159327],[-0.689125,1.553661],[1.367175,1.127893],[4.145695,3.651169],[-5.800685,4.092585],[-9.074934,8.743616],[-5.100181,-0.358685],[6.618277,5.870205],[-0.791432,-1.304035],[-7.414353,-9.938673],[7.624598,8.010385],[8.392508,3.238842],[-2.550441,1.214101],[8.036190,-6.502235],[-6.597483,-8.776523],[-9.874255,-1.534277],[2.044084,2.200723],[-0.513509,8.039897],[3.130112,8.403484],[0.015519,9.546322],[3.800995,-9.254425],[7.079526,-3.331857],[-5.432222,0.813577],[-8.577013,0.704511],[-6.369264,8.987171],[-7.456942,-8.623718],[-1.641652,5.830622],[7.544031,5.198384],[5.266205,8.767167],[3.511162,-8.626523],[-7.628338,-9.947477],[-6.082592,-0.637855],[-8.071510,8.036418],[-6.539815,2.073792],[8.787909,-9.950146],[1.741232,3.966430]], dtype = "float32")#candidate|1422|(245, 2)|const|float32
call_1421 = relay.TupleGetItem(func_422_call(relay.reshape(const_1422.astype('float32'), [7, 10, 7])), 6)
call_1423 = relay.TupleGetItem(func_424_call(relay.reshape(const_1422.astype('float32'), [7, 10, 7])), 6)
output = relay.Tuple([bop_1415,call_1421,const_1422,])
output2 = relay.Tuple([bop_1415,call_1423,const_1422,])
func_1447 = relay.Function([var_1408,], output)
mod['func_1447'] = func_1447
mod = relay.transform.InferType()(mod)
var_1448 = relay.var("var_1448", dtype = "float64", shape = (5, 11, 14))#candidate|1448|(5, 11, 14)|var|float64
output = func_1447(var_1448)
func_1449 = relay.Function([var_1448], output)
mutated_mod['func_1449'] = func_1449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1483 = relay.var("var_1483", dtype = "float64", shape = (6, 12, 7))#candidate|1483|(6, 12, 7)|var|float64
uop_1484 = relay.acosh(var_1483.astype('float64')) # shape=(6, 12, 7)
uop_1488 = relay.erf(uop_1484.astype('float64')) # shape=(6, 12, 7)
output = uop_1488
output2 = uop_1488
func_1491 = relay.Function([var_1483,], output)
mod['func_1491'] = func_1491
mod = relay.transform.InferType()(mod)
var_1492 = relay.var("var_1492", dtype = "float64", shape = (6, 12, 7))#candidate|1492|(6, 12, 7)|var|float64
output = func_1491(var_1492)
func_1493 = relay.Function([var_1492], output)
mutated_mod['func_1493'] = func_1493
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1665 = relay.const([[[6,1,8,-9,4,3,-4,-9,4,-9,9,2,-6,7,8],[-2,-3,2,2,6,-9,5,-5,6,-2,-2,2,-6,-2,-4],[6,7,-8,-1,-10,6,7,5,-4,1,-5,6,1,-8,5],[-5,8,2,-1,-8,-9,2,-4,8,-7,-5,-6,-2,2,-1],[-1,-10,10,-7,-7,4,9,-4,3,2,-2,2,5,4,3]],[[-4,2,5,8,-5,-7,2,4,-1,-7,9,-8,-9,7,2],[-1,-4,2,6,-1,6,-9,6,-4,2,-9,-5,2,-2,9],[8,-10,-6,-2,-6,-3,-3,-3,-6,7,2,-9,-3,-3,9],[-6,-4,9,-3,-2,6,-3,8,9,5,-1,1,4,-10,-8],[-8,6,-5,4,8,6,1,-2,-5,2,8,-7,-3,5,-9]],[[-4,9,1,-5,-1,2,6,7,4,-8,4,-2,-6,-5,10],[-4,-10,-4,-7,7,1,-7,5,-4,8,7,-9,6,-6,4],[2,2,-3,5,5,-9,-5,5,2,1,3,-3,-1,-6,7],[-4,-2,-3,3,6,-3,-6,1,10,-3,3,-1,8,3,-10],[8,1,2,-2,5,-5,-2,9,-4,-9,10,-5,-8,4,9]],[[-6,-9,6,3,6,-5,-8,-2,2,-6,7,5,-10,6,-6],[9,3,-9,9,4,-1,6,8,8,8,-3,3,-6,10,-6],[-9,8,-5,9,-10,1,4,3,-7,-3,7,1,-3,1,-1],[8,4,-9,3,-2,3,-4,-3,10,-8,-7,9,2,-5,5],[-2,5,1,6,4,-6,-3,5,-9,-6,-7,3,8,-10,-10]],[[10,-8,-9,-9,-2,5,1,2,4,10,-10,2,5,-9,-5],[-7,-3,8,-3,-9,1,5,-1,-5,-8,-4,1,2,-8,-10],[1,7,-2,8,-3,10,-10,-5,2,8,6,8,10,5,10],[10,-3,-5,-4,-10,-9,-1,5,-2,8,7,-5,-1,-5,-2],[2,-8,9,-9,8,9,2,-8,8,4,-3,-9,-5,3,7]],[[-7,-7,5,2,-8,5,-10,7,-2,2,-2,6,-3,-2,-3],[2,-9,8,-5,-7,-1,-2,7,-10,6,-4,9,10,3,6],[10,-7,-9,10,-5,8,-7,-8,-10,3,2,-4,1,3,-3],[-1,9,1,-5,1,-6,-8,9,-9,-6,-7,-2,-9,5,9],[3,3,2,-9,5,-8,10,5,-4,10,-7,-10,8,-3,3]],[[2,-4,5,1,4,3,8,-10,3,-9,5,10,6,7,10],[3,-6,-1,4,7,7,-10,5,9,-3,1,-4,-3,8,2],[-2,1,4,8,-3,4,7,6,3,10,-4,5,-1,-8,8],[6,-3,-7,9,4,2,-4,1,9,-5,-1,-9,7,-5,-6],[3,5,8,-4,7,9,-6,-6,-2,3,5,8,-8,-3,-8]],[[-8,-2,-8,2,9,9,-9,-10,-4,-4,-4,10,-3,7,-1],[-9,-7,-1,5,-8,-3,2,-6,8,9,-6,1,4,-4,3],[7,6,7,10,1,4,-9,-7,-1,4,7,2,5,3,9],[7,-10,-2,10,-6,-2,-4,-1,7,-6,-1,-8,-2,-2,-2],[-2,9,-2,8,-2,1,-9,8,-6,1,3,-4,8,4,2]],[[1,5,-6,10,8,-2,-10,4,10,-1,1,-2,7,-2,10],[-8,-7,-2,1,1,-5,-6,4,3,1,5,-9,10,9,-8],[-7,-1,-9,-1,4,-8,5,-6,-8,-2,-6,-3,-6,-3,-5],[5,7,-6,6,7,-9,2,2,10,-10,9,1,-3,2,-1],[4,7,-1,-10,-2,8,-3,-3,10,-5,8,-6,-5,-8,-4]],[[-2,-7,10,5,5,-6,-7,7,7,5,-8,7,4,3,-7],[-2,-5,-9,7,6,1,6,4,10,-1,-3,-10,2,-10,-7],[-2,-7,8,-2,2,-6,2,1,-7,5,-5,-6,-9,-8,-5],[-8,-4,4,3,-6,5,-5,5,-3,8,2,-8,-8,-9,8],[1,-1,-2,-6,10,-7,-5,-2,-2,-7,-2,-2,9,7,-8]],[[4,-4,-4,-9,-1,-6,3,-5,-4,-9,5,-7,-10,-1,-6],[6,6,-4,-6,5,-1,-8,-2,1,-9,-4,10,5,10,8],[5,-6,2,3,1,7,-9,-8,9,-7,-10,7,2,1,-10],[-8,3,-5,-1,4,8,-8,8,10,-7,-8,-7,6,-8,1],[-6,-2,2,3,-8,7,-8,-7,-3,4,3,7,-8,9,-10]],[[4,7,4,-3,-3,3,7,7,10,10,-9,7,-2,9,-2],[2,-6,2,-8,-8,-6,-5,4,6,1,9,10,8,-2,-3],[-9,-10,6,6,7,-7,6,-5,-5,6,8,7,-3,9,-3],[10,9,-8,2,-1,7,3,1,8,10,1,1,-7,5,10],[2,10,9,-8,-2,-1,6,-6,1,-10,-8,-2,-1,1,-7]]], dtype = "int32")#candidate|1665|(12, 5, 15)|const|int32
var_1666 = relay.var("var_1666", dtype = "int32", shape = (12, 5, 15))#candidate|1666|(12, 5, 15)|var|int32
bop_1667 = relay.maximum(const_1665.astype('int32'), relay.reshape(var_1666.astype('int32'), relay.shape_of(const_1665))) # shape=(12, 5, 15)
bop_1676 = relay.greater_equal(var_1666.astype('bool'), relay.reshape(bop_1667.astype('bool'), relay.shape_of(var_1666))) # shape=(12, 5, 15)
func_764_call = mod.get_global_var('func_764')
func_769_call = mutated_mod.get_global_var('func_769')
var_1683 = relay.var("var_1683", dtype = "float32", shape = (96, 1))#candidate|1683|(96, 1)|var|float32
const_1684 = relay.const([[-0.019443,7.863403],[6.652805,-7.872403],[5.542948,9.703392],[2.347083,8.433586],[5.596276,-0.392616],[8.452006,3.006433],[-4.652740,2.843361],[-7.375418,-3.741929],[-5.530169,8.518927],[3.314449,8.806275],[8.952224,5.885059],[-5.257484,7.120920],[-5.426323,7.578294],[8.019566,-4.059607],[1.768374,-2.054618],[-8.053470,-4.005888],[-6.358686,-3.157703],[-6.229352,-9.992918],[-6.082691,-4.594621],[-0.158358,3.071356],[9.812104,-5.840019],[4.176323,9.847693],[-0.287192,-1.765467],[-3.889218,-3.614124],[6.360409,-3.355380],[-3.618924,3.736213],[-3.129988,1.882948],[-4.232344,3.018191],[4.925187,-5.981300],[6.991118,-7.236111],[2.728770,-8.357044],[4.324261,-3.766683],[1.259514,-6.782150],[7.771946,-6.503462],[9.907360,5.853814],[-9.774815,-7.350491],[-1.106474,9.230689],[-4.251095,-6.518720],[-1.430918,5.182782],[1.059752,-1.757237],[8.643946,-2.379605],[2.685633,-1.118424],[-8.048807,-8.507523],[0.698636,-8.204685],[7.785750,2.507905],[3.182871,5.160799],[-6.139554,-0.407186],[-8.957868,-5.389711],[9.701239,-4.850061],[8.086688,-8.700228],[-7.655133,3.493329],[8.261586,-1.025288],[0.144421,-7.052210],[3.780626,-2.236910],[-7.174574,9.584233],[-4.138523,-0.699250],[-5.695463,-2.132840],[-4.568789,0.546119],[7.629220,-9.965098],[-1.848516,8.760616],[-2.287378,2.127697],[3.334646,6.406202],[-8.213066,-0.262613],[-6.911913,-2.029096],[7.641655,-6.756468],[9.051731,3.128931],[-2.712352,2.504440],[-7.700517,-3.315836],[-6.627804,-8.394973],[-2.581067,-7.926862],[-4.286434,2.786221],[4.411751,1.551950],[-2.460742,-3.533263],[4.582874,-2.639871],[2.220821,-7.390679],[-3.121325,-7.015691],[-2.964800,-5.815616],[-3.491068,3.197122],[6.333743,8.293985],[8.803059,6.899951],[0.756202,2.047999],[4.945710,-3.520879],[-6.007627,-6.375901],[-6.415119,6.168280],[6.406849,4.627441],[-8.878313,-6.056196],[2.030414,5.406982],[-3.459003,-9.523505],[-2.347827,-0.330192],[7.322248,7.736901],[-3.622178,-8.594126],[-4.276120,0.629302],[5.793687,-4.026527],[-4.766560,2.381510],[-3.686042,-9.927841],[3.258932,-2.683891],[-1.103907,-7.165226],[-9.810356,3.662832],[4.604118,8.232978],[-5.621304,-5.473342],[2.296636,1.935995],[1.832040,4.829201],[8.224201,5.452532],[-7.507340,8.395570],[-5.238957,-0.024783],[1.620436,8.172478],[0.135523,-4.574748],[-5.919825,2.402439],[3.775955,1.325384],[0.225991,2.279652],[-1.076812,5.264728],[-3.732924,4.384138],[-7.656423,6.322237],[-5.137447,3.914718],[8.693806,2.613560],[-6.015597,8.898191],[3.604451,-5.012179],[7.035547,-4.588870],[-9.152814,-8.384547],[-5.167990,-3.051709],[9.713537,-6.698330],[-3.204168,0.306628],[0.232401,0.790497],[2.985697,-6.680340],[6.729852,0.842212],[-9.349433,-0.963184],[-8.602335,0.902272],[0.074609,6.073638],[-5.899667,-0.212022],[0.163760,-8.530570],[-7.762134,-8.348184],[4.039796,-3.686892],[-7.665182,3.987312],[7.854651,4.395659],[9.968491,-6.096152],[-1.681623,6.479043],[6.818114,-2.494181],[-2.728111,-3.287485],[-7.560028,-1.722019],[4.748561,3.828136],[3.694702,-9.008408],[-7.259972,-3.650165],[-7.148205,-9.853219],[-0.474168,8.197473],[2.619745,0.817478],[2.781496,-0.459824],[-7.256273,9.581289],[-6.403372,1.420287],[2.829650,-6.600466],[-8.941305,4.147486],[-1.697519,5.801091],[-1.517914,-4.178846],[-2.957298,7.190308],[5.219476,-0.730883],[-1.613225,9.124659],[-1.028060,-0.393048],[-9.256400,9.402652],[5.873188,-6.314478],[4.134099,2.955394],[-2.544370,6.334548],[5.866295,-3.941070],[5.134704,-1.324579],[-1.394380,-1.404124],[2.411024,5.247609],[6.637918,-4.937865],[1.990650,-5.710669],[-8.147027,-3.604217],[-0.293559,-3.413871],[-4.143812,-8.801208],[8.395275,-4.446228],[5.927882,-1.045020],[8.241643,-1.191467],[-6.540315,-1.888938],[9.231963,-3.785812],[-3.383714,8.814775],[8.259732,-3.976299],[-6.937188,7.187075],[0.269144,-4.865159],[-8.760985,5.351770],[-0.121159,-4.361929],[-7.471649,-8.554425],[-5.280944,-5.630833],[-1.147142,8.348718],[1.486268,5.500643],[-7.391125,7.694536],[-1.609075,-7.763237],[-2.470259,3.741059],[-7.146001,6.689309],[-2.070065,-6.733290],[0.706885,8.305874],[-5.334766,4.664640],[-1.086198,-2.831163],[1.025547,-8.409845],[0.773297,-4.440582],[3.958447,-8.909418],[6.706614,-2.718357],[9.076567,-2.269564],[6.541628,-3.698410],[-2.843714,4.767009],[5.220702,-0.682429],[7.806281,-3.170992],[3.369182,-9.283383],[-4.086929,-5.834902],[3.696778,3.795760],[-2.715341,1.081674],[6.882215,2.732725],[2.646315,-3.243348],[-5.661717,5.654295],[-6.185607,-3.066224],[-3.339252,-6.994519],[9.658531,-9.446292],[6.518283,-1.339526],[-3.889609,-1.357760],[4.980555,7.866394],[-9.025332,4.022639],[-5.666179,5.397131],[5.081093,9.668160],[-9.662493,-0.674655],[-6.670613,-8.137477],[5.582993,2.523963],[-0.885121,9.643919],[-5.134751,-2.221300],[7.017748,6.076046],[-2.214908,-8.117115],[3.097456,3.383827],[6.916051,8.114656],[7.861767,9.036026],[-1.104044,-3.802968],[-4.744217,8.158522],[-2.552938,-0.106576],[9.362481,-5.503645],[-2.552440,6.899951],[-5.577279,6.361320],[7.180119,3.550319],[9.581146,5.639733],[-7.298362,-4.300833],[6.919676,6.929442],[-5.187307,0.015489],[6.072326,6.478821],[-3.929568,4.842171],[-3.435641,-8.322723],[-4.662983,-0.885265],[8.603162,9.504579],[3.478355,-7.959318],[2.945170,-5.875693]], dtype = "float32")#candidate|1684|(245, 2)|const|float32
call_1682 = relay.TupleGetItem(func_764_call(relay.reshape(var_1683.astype('float32'), [2, 12, 4]), relay.reshape(var_1683.astype('uint64'), [2, 12, 4]), relay.reshape(const_1684.astype('float32'), [490,]), ), 2)
call_1685 = relay.TupleGetItem(func_769_call(relay.reshape(var_1683.astype('float32'), [2, 12, 4]), relay.reshape(var_1683.astype('uint64'), [2, 12, 4]), relay.reshape(const_1684.astype('float32'), [490,]), ), 2)
uop_1686 = relay.acosh(var_1666.astype('float32')) # shape=(12, 5, 15)
output = relay.Tuple([bop_1676,call_1682,var_1683,const_1684,uop_1686,])
output2 = relay.Tuple([bop_1676,call_1685,var_1683,const_1684,uop_1686,])
func_1695 = relay.Function([var_1666,var_1683,], output)
mod['func_1695'] = func_1695
mod = relay.transform.InferType()(mod)
var_1696 = relay.var("var_1696", dtype = "int32", shape = (12, 5, 15))#candidate|1696|(12, 5, 15)|var|int32
var_1697 = relay.var("var_1697", dtype = "float32", shape = (96, 1))#candidate|1697|(96, 1)|var|float32
output = func_1695(var_1696,var_1697,)
func_1698 = relay.Function([var_1696,var_1697,], output)
mutated_mod['func_1698'] = func_1698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1750 = relay.var("var_1750", dtype = "float64", shape = (3, 16, 15))#candidate|1750|(3, 16, 15)|var|float64
const_1751 = relay.const([[[-6.325161,-7.774164,9.386046,-1.973885,5.764908,-5.564814,2.459295,3.380223,5.777572,6.835524,0.524851,2.417437,3.752109,-2.239910,-6.734129],[-3.187250,-1.591036,-5.306816,3.777713,7.507999,7.925740,-4.897298,-3.173829,7.320499,-0.564049,1.250262,-5.916906,-7.307789,1.385864,9.947729],[-7.466744,4.388085,-5.390951,-6.197031,-0.953744,-7.057319,0.731841,-8.952011,3.710039,0.318767,-0.143652,0.512097,-1.897343,8.242774,2.478609],[4.468718,-3.748140,-6.022650,-3.820304,-1.118371,-4.692062,-3.155672,-7.496828,8.248827,1.557214,5.374968,-2.405023,-5.518817,-0.366624,-3.300460],[-5.373031,6.103329,-2.051409,6.904072,8.291939,0.153907,-1.017272,3.559754,-7.938462,-0.841327,-8.594650,-5.585343,6.758620,7.985657,-2.363238],[5.797069,2.336872,9.893707,-5.444915,4.914400,9.408952,0.874222,-7.005705,-1.542556,-4.826792,-6.690086,-2.657244,6.295390,1.074599,-1.780224],[-3.652143,-6.565061,-0.250785,-6.750344,-9.533724,-2.698112,-4.469925,-3.108500,2.913616,-2.217885,1.210334,-8.242665,3.752938,1.420207,-7.963001],[-6.454682,9.427092,-4.824999,-4.867947,-0.507961,-4.068879,-1.903508,2.680751,-6.559504,5.458927,-4.539955,4.456442,8.824023,-5.929239,-9.098677],[-0.549692,6.403444,3.547881,5.085109,-9.003376,9.463269,9.314597,-4.390305,-0.235867,6.428722,2.600305,-2.693411,-3.656608,7.579474,8.738669],[0.697934,-5.485325,7.455643,-2.461635,1.118821,3.982017,-8.133425,6.899830,2.922401,0.566765,9.008888,-5.757949,7.935981,2.057525,7.755352],[-4.999661,-4.163970,1.206006,4.964368,4.031935,3.564132,5.134291,8.044626,-0.209018,-7.923772,4.101502,-7.582095,1.246096,-4.690652,-8.200452],[0.627169,-3.124829,7.956990,-7.516266,2.875277,2.464437,-0.750625,-7.260270,3.576114,-0.694762,-2.520740,-6.023340,3.671656,1.221364,-3.291315],[1.492707,-1.604548,-6.061138,0.640988,-0.100832,-1.757939,1.070261,-8.839513,-6.434038,-0.632458,6.779647,-4.877297,6.922339,-0.849144,3.726289],[-8.292494,-2.217816,-1.805311,-3.212941,7.607899,-3.805127,9.343200,-9.224345,-9.979893,6.039094,0.100162,4.552144,-4.092777,6.788178,4.985621],[-6.170700,1.998380,1.824944,5.748172,-4.871918,-5.141244,-7.629473,-9.458846,-7.680761,5.434669,-4.351350,-0.770357,-6.921963,-0.489419,2.128816],[-6.879054,-6.679792,7.890773,6.655911,9.146287,7.695960,-1.401020,9.262832,2.707969,7.415934,-0.916201,1.465240,-5.594446,5.372741,-0.837410]],[[-7.255270,-5.439873,-4.187685,-3.851586,-6.444206,7.685602,-9.090095,2.200938,0.269397,7.769304,7.699476,-4.311685,-6.412291,-1.691515,5.149708],[1.550663,6.652591,-5.357657,0.916752,5.385115,2.932009,2.156377,2.960915,2.348653,5.170511,8.873726,-6.745566,-1.303517,-5.719724,7.317707],[0.497234,-0.811269,-6.652348,-6.798099,0.678430,-9.759621,2.814022,-2.766563,-2.117666,7.094853,-6.052757,4.486850,-4.599069,-0.564498,-6.707073],[-8.774376,-1.626972,5.752954,-7.740275,-2.265786,1.122058,-0.923163,-6.615370,3.734098,-5.617926,0.141856,-6.147425,-4.947077,-8.258904,5.975698],[-8.598971,-1.277476,-5.515230,2.381908,0.770352,5.170879,-1.775048,6.765922,-3.479221,-9.145379,1.772221,-9.659628,-4.977723,-7.871515,8.091505],[2.901165,-5.612168,-0.233311,6.469884,5.437848,3.170562,-2.610104,-8.304775,-6.432578,-3.476321,2.732152,-3.311088,1.311215,-2.306536,1.781590],[-2.282590,7.544501,-7.530071,3.352448,-3.036176,9.399342,5.164945,1.325126,0.386070,0.474185,-0.313548,-3.313031,-3.860468,5.571794,3.864640],[-5.124531,-0.567585,-6.463804,0.011644,-8.487538,-9.026353,4.983281,5.630518,2.838017,-8.000661,5.045123,-8.448141,-9.605169,8.388761,8.220070],[-8.932554,-4.108056,-3.237813,-9.418763,3.829627,2.352211,-3.230885,7.567624,8.905036,-8.437643,0.763301,7.122981,9.316442,-0.242370,3.916222],[-6.431302,5.527625,-2.825615,0.005657,9.231118,-6.591632,3.228263,1.788672,-6.336223,9.067026,3.946014,-2.296027,-9.040867,-9.836672,9.897397],[8.062151,7.711700,-3.661454,-8.781739,-8.413409,-3.686863,-4.812249,1.707850,4.117797,-8.558707,6.527844,6.223660,-8.657341,9.430605,5.267220],[6.052707,-0.962718,2.762624,-1.208169,7.790155,-8.328606,0.993993,6.882829,-9.437369,2.828555,5.172993,-1.755222,-0.661169,6.892972,5.598720],[-4.573325,4.485369,-0.283939,-2.836338,-8.457328,7.115908,3.405221,4.591281,-3.018468,2.009810,-7.529494,-6.836251,-5.096021,-8.335570,-8.140349],[-6.859220,-8.296424,-8.058728,-0.907509,9.429315,-9.618151,5.006006,-1.738784,-9.265390,1.619595,-5.846281,-6.343090,-8.992102,7.732936,-7.336665],[6.232159,1.026329,-1.674160,-4.449199,-6.195974,9.106179,-8.026519,-7.679024,7.461082,5.397498,5.275032,4.588594,-6.715820,-3.200471,-0.625803],[-6.162102,3.117303,5.108951,1.298255,-3.566095,6.129557,-3.341898,7.420509,-4.885263,1.331605,9.930568,5.834838,-7.138985,-7.091431,-0.078122]],[[-0.052724,-4.137859,-4.854515,2.270164,1.094817,6.390809,-1.287402,7.200550,-5.908388,-3.698866,2.761740,-5.604376,-5.003225,7.762947,4.432950],[4.709325,-3.272030,7.342740,4.285117,-4.771018,2.697694,-4.940483,8.021849,6.696937,0.182958,1.755826,5.937251,-8.875531,-2.066341,-0.266696],[9.568555,8.432209,-5.282173,-8.858190,-8.519407,-9.849640,-1.858655,8.026262,-3.828172,3.336430,-3.192532,0.233234,8.305856,-3.195961,2.244763],[8.329819,-5.784395,-9.054421,-4.319241,7.232355,8.453074,-0.947761,-5.540696,7.155108,-1.241171,-6.036649,9.208424,-3.165711,1.786204,-0.667477],[6.921433,1.250533,7.533038,-0.559351,-0.720457,-5.918178,-2.243233,7.095354,-8.304268,9.286367,-8.283245,2.857280,2.671700,-4.066889,-8.981272],[3.760142,-8.223496,-6.517973,-8.737030,4.726673,-4.559792,-1.436688,-5.505263,1.769938,-6.530032,3.084233,-3.340240,-0.774321,-4.778397,5.271393],[-9.900292,2.633097,3.701138,-5.724196,-5.634033,3.837835,3.951736,2.883611,6.091303,-1.811956,-6.529504,-1.135352,-3.785685,-1.305074,3.803915],[-9.096563,4.757253,7.890569,8.123076,-4.682479,0.319265,-8.289907,-1.398371,4.119095,-0.519763,3.984159,7.905940,3.147083,9.785557,3.841063],[0.850954,-6.500058,6.129731,-1.617150,3.580594,-7.020375,-3.070963,0.204810,4.449832,-1.363463,-9.856950,-3.106037,-6.811591,4.836798,2.708114],[-9.194268,-0.599850,3.013641,-1.737524,-8.238275,8.961671,5.726544,8.295762,-9.982546,4.668613,-8.088351,-0.407534,4.916764,3.780259,-6.588384],[4.880211,2.493911,8.082974,3.764148,-8.742891,1.876404,7.591898,8.382509,6.081660,3.516512,9.424755,-0.996374,-5.148548,-7.844947,7.821248],[-7.724849,9.513148,-7.157627,4.457787,6.146338,-9.318175,6.958487,8.535616,-2.520727,-1.971866,8.656690,-0.611928,7.562375,9.583083,-3.685191],[4.877899,-9.066430,-8.040474,8.842715,-7.555953,-5.196044,-7.571244,-4.151984,-9.298176,-5.836227,-1.014969,-1.172631,-5.420136,3.936965,0.238567],[-2.155160,0.221802,-9.871137,7.930106,6.569781,-4.664427,-4.997880,0.136108,-3.956848,-2.168990,-5.006917,-9.720108,3.727388,-6.657245,-5.284263],[-8.362961,-1.683787,0.211486,1.738634,5.721486,9.269433,-9.935360,-1.890980,-8.370495,-8.911193,8.699390,-8.642047,7.553801,-5.010831,-6.029736],[-9.407907,8.738319,-0.530996,9.659982,-8.658356,-2.277257,-7.747829,4.910111,-0.849397,1.007444,-1.817187,3.754696,-5.101787,-5.161627,1.339973]]], dtype = "float64")#candidate|1751|(3, 16, 15)|const|float64
bop_1752 = relay.power(var_1750.astype('float64'), relay.reshape(const_1751.astype('float64'), relay.shape_of(var_1750))) # shape=(3, 16, 15)
output = relay.Tuple([bop_1752,])
output2 = relay.Tuple([bop_1752,])
func_1762 = relay.Function([var_1750,], output)
mod['func_1762'] = func_1762
mod = relay.transform.InferType()(mod)
var_1763 = relay.var("var_1763", dtype = "float64", shape = (3, 16, 15))#candidate|1763|(3, 16, 15)|var|float64
output = func_1762(var_1763)
func_1764 = relay.Function([var_1763], output)
mutated_mod['func_1764'] = func_1764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1773 = relay.var("var_1773", dtype = "float64", shape = (16, 13, 1))#candidate|1773|(16, 13, 1)|var|float64
uop_1774 = relay.cos(var_1773.astype('float64')) # shape=(16, 13, 1)
func_764_call = mod.get_global_var('func_764')
func_769_call = mutated_mod.get_global_var('func_769')
var_1777 = relay.var("var_1777", dtype = "float32", shape = (96,))#candidate|1777|(96,)|var|float32
var_1778 = relay.var("var_1778", dtype = "float32", shape = (245, 2))#candidate|1778|(245, 2)|var|float32
call_1776 = relay.TupleGetItem(func_764_call(relay.reshape(var_1777.astype('float32'), [2, 12, 4]), relay.reshape(var_1777.astype('uint64'), [2, 12, 4]), relay.reshape(var_1778.astype('float32'), [490,]), ), 0)
call_1779 = relay.TupleGetItem(func_769_call(relay.reshape(var_1777.astype('float32'), [2, 12, 4]), relay.reshape(var_1777.astype('uint64'), [2, 12, 4]), relay.reshape(var_1778.astype('float32'), [490,]), ), 0)
uop_1790 = relay.acos(var_1778.astype('float64')) # shape=(245, 2)
output = relay.Tuple([uop_1774,call_1776,var_1777,uop_1790,])
output2 = relay.Tuple([uop_1774,call_1779,var_1777,uop_1790,])
func_1797 = relay.Function([var_1773,var_1777,var_1778,], output)
mod['func_1797'] = func_1797
mod = relay.transform.InferType()(mod)
mutated_mod['func_1797'] = func_1797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1797_call = mutated_mod.get_global_var('func_1797')
var_1799 = relay.var("var_1799", dtype = "float64", shape = (16, 13, 1))#candidate|1799|(16, 13, 1)|var|float64
var_1800 = relay.var("var_1800", dtype = "float32", shape = (96,))#candidate|1800|(96,)|var|float32
var_1801 = relay.var("var_1801", dtype = "float32", shape = (245, 2))#candidate|1801|(245, 2)|var|float32
call_1798 = func_1797_call(var_1799,var_1800,var_1801,)
output = call_1798
func_1802 = relay.Function([var_1799,var_1800,var_1801,], output)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2036 = relay.var("var_2036", dtype = "uint8", shape = (13, 2, 1))#candidate|2036|(13, 2, 1)|var|uint8
var_2037 = relay.var("var_2037", dtype = "uint8", shape = (13, 2, 9))#candidate|2037|(13, 2, 9)|var|uint8
bop_2038 = relay.maximum(var_2036.astype('uint8'), var_2037.astype('uint8')) # shape=(13, 2, 9)
bop_2041 = relay.logical_and(var_2037.astype('bool'), var_2036.astype('bool')) # shape=(13, 2, 9)
uop_2051 = relay.erf(var_2036.astype('float64')) # shape=(13, 2, 1)
bop_2054 = relay.minimum(uop_2051.astype('uint64'), var_2037.astype('uint64')) # shape=(13, 2, 9)
bop_2063 = relay.bitwise_or(bop_2054.astype('uint64'), relay.reshape(bop_2041.astype('uint64'), relay.shape_of(bop_2054))) # shape=(13, 2, 9)
output = relay.Tuple([bop_2038,bop_2063,])
output2 = relay.Tuple([bop_2038,bop_2063,])
func_2066 = relay.Function([var_2036,var_2037,], output)
mod['func_2066'] = func_2066
mod = relay.transform.InferType()(mod)
mutated_mod['func_2066'] = func_2066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2066_call = mutated_mod.get_global_var('func_2066')
var_2068 = relay.var("var_2068", dtype = "uint8", shape = (13, 2, 1))#candidate|2068|(13, 2, 1)|var|uint8
var_2069 = relay.var("var_2069", dtype = "uint8", shape = (13, 2, 9))#candidate|2069|(13, 2, 9)|var|uint8
call_2067 = func_2066_call(var_2068,var_2069,)
output = call_2067
func_2070 = relay.Function([var_2068,var_2069,], output)
mutated_mod['func_2070'] = func_2070
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2257 = relay.var("var_2257", dtype = "float64", shape = (16, 3, 6))#candidate|2257|(16, 3, 6)|var|float64
uop_2258 = relay.atanh(var_2257.astype('float64')) # shape=(16, 3, 6)
var_2263 = relay.var("var_2263", dtype = "float64", shape = (16, 3, 6))#candidate|2263|(16, 3, 6)|var|float64
bop_2264 = relay.power(uop_2258.astype('float64'), relay.reshape(var_2263.astype('float64'), relay.shape_of(uop_2258))) # shape=(16, 3, 6)
func_1447_call = mod.get_global_var('func_1447')
func_1449_call = mutated_mod.get_global_var('func_1449')
var_2268 = relay.var("var_2268", dtype = "float64", shape = (770,))#candidate|2268|(770,)|var|float64
call_2267 = relay.TupleGetItem(func_1447_call(relay.reshape(var_2268.astype('float64'), [5, 11, 14])), 0)
call_2269 = relay.TupleGetItem(func_1449_call(relay.reshape(var_2268.astype('float64'), [5, 11, 14])), 0)
uop_2273 = relay.log(bop_2264.astype('float64')) # shape=(16, 3, 6)
output = relay.Tuple([call_2267,var_2268,uop_2273,])
output2 = relay.Tuple([call_2269,var_2268,uop_2273,])
func_2275 = relay.Function([var_2257,var_2263,var_2268,], output)
mod['func_2275'] = func_2275
mod = relay.transform.InferType()(mod)
mutated_mod['func_2275'] = func_2275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2275_call = mutated_mod.get_global_var('func_2275')
var_2277 = relay.var("var_2277", dtype = "float64", shape = (16, 3, 6))#candidate|2277|(16, 3, 6)|var|float64
var_2278 = relay.var("var_2278", dtype = "float64", shape = (16, 3, 6))#candidate|2278|(16, 3, 6)|var|float64
var_2279 = relay.var("var_2279", dtype = "float64", shape = (770,))#candidate|2279|(770,)|var|float64
call_2276 = func_2275_call(var_2277,var_2278,var_2279,)
output = call_2276
func_2280 = relay.Function([var_2277,var_2278,var_2279,], output)
mutated_mod['func_2280'] = func_2280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2299 = relay.var("var_2299", dtype = "float64", shape = (16, 16, 13))#candidate|2299|(16, 16, 13)|var|float64
var_2300 = relay.var("var_2300", dtype = "float64", shape = (16, 16, 13))#candidate|2300|(16, 16, 13)|var|float64
bop_2301 = relay.power(var_2299.astype('float64'), relay.reshape(var_2300.astype('float64'), relay.shape_of(var_2299))) # shape=(16, 16, 13)
output = relay.Tuple([bop_2301,])
output2 = relay.Tuple([bop_2301,])
func_2312 = relay.Function([var_2299,var_2300,], output)
mod['func_2312'] = func_2312
mod = relay.transform.InferType()(mod)
var_2313 = relay.var("var_2313", dtype = "float64", shape = (16, 16, 13))#candidate|2313|(16, 16, 13)|var|float64
var_2314 = relay.var("var_2314", dtype = "float64", shape = (16, 16, 13))#candidate|2314|(16, 16, 13)|var|float64
output = func_2312(var_2313,var_2314,)
func_2315 = relay.Function([var_2313,var_2314,], output)
mutated_mod['func_2315'] = func_2315
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2371 = relay.constdtype = "float64")#candidate|2371|(10, 14, 12)|const|float64
uop_2372 = relay.atanh(const_2371.astype('float64')) # shape=(10, 14, 12)
bop_2382 = relay.multiply(uop_2372.astype('float32'), relay.reshape(const_2371.astype('float32'), relay.shape_of(uop_2372))) # shape=(10, 14, 12)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
const_2387 = relay.const([-6.517725,-1.252790,-1.390233,4.902169,-9.898638,-1.587731,-0.972520,3.126433,-6.273731,9.321026,3.794536,7.778664,-3.884418,-0.840451,0.755294,-9.867242,4.665451,9.490909,-3.744840,3.737557,-8.501602,-7.320488,4.798021,-0.787689,-6.014432,3.312745,-4.670674,-2.661898,-2.208324,-5.094218,-7.191736,5.592649,-2.167446,5.610064,4.077702,8.359492,-2.486242,-2.060564,2.778119,-7.940876,-1.498860,3.260344,-5.167841,-1.410249,-4.221168,2.822851,8.982673,-6.742544,6.002062,-7.051888,-7.582895,-9.601559,9.986801,8.121419,9.966029,4.231506,5.652937,8.805569,-5.877718,-7.847693,-3.184554,5.606061,-4.626501,5.100349,7.378333,-2.148864,8.680846,0.948128,-5.270949,5.260951,-6.267135,7.902686,7.236806,3.307383,-8.458815,3.751190,2.583538,-9.149073,-5.807470,9.409957,2.875966,-1.053309,-2.330244,-7.425699,-0.199477,8.549956,-3.809884,-1.774859,8.586675,0.494991,0.569336,-6.747569,4.900691,-8.889892,5.639597,6.823718,0.965629,5.020238,7.063856,-6.350899,-8.555213,-0.049697,6.340222,-2.303503,7.758270,-9.362370,-6.398813,5.431395,-4.960922,-8.074289,-4.595560,-7.732633,5.284555,1.800106,2.214413,-5.826084,6.716678,-3.936904,2.817081,4.961095,-4.337056,5.025882,4.498344,-5.110948,-0.349601,8.587824,4.457322,-6.903244,5.927080,0.644705,-4.145812,-7.698556,5.979188,-2.176244,-4.641026,4.729739,3.217259,4.135590,5.954477,-7.138544,-3.091451,-1.295342,-8.485898,-1.532924,9.913386,-5.969501,9.799451,1.551986,-1.916318,3.461912,-8.246958,5.632980,6.748004,-8.849935,6.303548,-6.115024,-5.527107,0.785156,-4.055276,-1.181079,0.164359,0.968349,-8.348370,5.984010,-6.528561,1.564106,6.149191,-7.633493,1.764646,-8.187918,-5.925570,1.343131,5.852500,1.898705,-0.447193,9.134522,-0.056402,9.339697,-2.344970,3.395509,0.213446,0.596267,-7.620536,-8.304505,-0.925621,-4.247661,7.985933,6.149908,-9.256682,-4.381746,-6.607306,-7.782840,-5.598164,1.214502,3.081181,5.787271,7.067496,4.978063,3.540954,-1.163522,-6.518092,-8.555112,-1.429486,4.529052,-4.116928,1.871728,8.457615,7.767614,0.592854,-6.782975,-0.899599,-3.450450,-2.954160,2.862339,3.563319,6.452195,-0.936948,0.098128,4.938216,1.957471,5.569182,7.506970,-1.160963,-5.503844,0.645345,-1.417710,5.588000,-4.952557,0.430363,5.156236,1.280241,-8.617768,-5.092262,-0.130160,-4.839091,0.700062,-1.219170,9.800551,8.564504,1.374362,-7.040829,-8.683864,-1.998736,-7.751358,-5.161389,-8.101037,-3.258037,8.148008,-1.459409,1.723774,3.180296,-8.131341,7.585056,6.896942,-7.612025,0.425971,-8.379083,-8.347282,-9.623609,-7.169568,-8.364754,-5.225376,-6.231661,8.885679,9.342520,4.426118,2.189798,0.368933,8.056697,9.176054,4.299491,7.688672,7.080629,-2.767831,-6.501173,-4.993794,0.676743,5.405409,5.329409,-9.670381,3.481527,3.478733,-3.250662,8.770543,7.368821,4.668661,-2.743165,3.893884,-2.084645,9.777312,-2.939211,8.413458,3.690620,3.809969,3.855102,5.041983,-5.163860,3.247285,2.291054,-1.545928,0.771874,4.413603,-6.914903,8.178967,-2.070847,3.286669,1.591199,-8.395659,-1.476729,6.510970,-7.799779,-4.686576,7.358633,9.120334,7.852646,-3.148480,3.920856,-9.864728,-0.918712,-0.790444,-1.624901,0.463523,-3.800203,-6.654362,-1.767657,-7.426233,1.917406,8.881244,-8.110043,7.277771,-5.568672,-2.438740,-5.334208,-9.007248,5.718406,5.091023,-5.916330,1.108855,4.630829,6.532057,7.402637,-3.632598,0.702800,3.764139,-3.214093,5.195172,-7.403863,-5.763046,-3.819661,7.953193,2.595312,8.642499,-6.577012,-0.445632,8.327936,9.411306,6.667520,4.558461,5.946583,-7.888006,0.964413,-8.369795,8.345393,-9.877848,4.546570,6.674057,9.749883,3.939843,5.914342,9.993147,2.099875,3.032301,-3.603973,7.972661,-5.670014,1.622024,5.172542,8.549801,-4.216135,-1.213747,-6.150757,-1.499735,5.215323,2.740714,7.488298,4.166940,0.867928,0.690649,6.798013,6.366579,-2.069091,2.244141,-0.359600,-9.587743,1.032245,3.823139,6.193969,1.101988,5.549447,2.481471,2.911060,3.995801,-8.582594,-0.725104,-6.170905,4.675538,-0.574084,-4.944766,0.334676,3.082461,-7.265884,-6.730174,-0.647524,-6.903922,-6.870654,-6.069618,-1.901052,-2.870571,-7.844245,-1.402354,-3.168375,9.986425,-8.725560,-6.165932,-8.280905,-2.435350,-1.059306,-4.466689,-6.515248,-9.980592,9.598342,-8.642807,-1.296988,-0.600178,3.127704,8.682746,-5.579789,-4.810383,1.869816,-4.730451,-3.780463,-9.283953,-4.312402,9.596241,8.285633,6.109675,-5.152084,-5.047483,1.798435,9.846678,4.154898,-1.649373,6.811660,-8.425384,7.939873,4.259148,-7.777651,-3.518609,-4.553357,9.106982,6.111882,-4.188152,5.096925,3.796948,9.792801,3.760143,7.519122,-1.773871,7.460491,9.994509,-7.092809,-8.066688,-6.291118,7.839927,4.316684,-9.972905,2.895922,-8.007510,0.804587,2.065499,7.887728,9.764049,1.577549,2.572819,7.438275,9.825725,5.771322,-6.413505,3.232642,9.409563,-1.798775,5.392115,-8.792511,-7.204910,7.407863,5.199977,3.973576,-8.648308,-5.255982,2.627531,-3.330585,0.965384,-8.357583,-9.393423,4.685572,-0.298155,2.204370,-0.668442,-5.142888,-4.906498,-9.787408,-5.779332,-7.092102,-0.785679,-4.825397,-8.991145,8.261332,2.733281,5.966187,2.623021,2.306098,5.065209,8.547536,-3.257969,-5.324256,-9.799390,-4.854588,-3.443596,1.344115,-4.090373,-7.384538,-2.207894,-5.771736,-1.464353,1.623811,4.070088,1.923862,-8.811717,-5.812909,-5.310987,0.695495,7.501544,0.973504,-2.731079,8.635702,7.912589,-5.326595,4.601278,8.373736,-2.612844,1.107859,8.783973,-4.863390,6.740029,-3.133670,-1.901659,-1.713633,-7.415130,1.326480,-3.327161,3.014424,7.161903,-6.422360,-6.977577,-6.401169,-7.999251,-5.334152,-9.674173,2.990544,4.238722,-6.503063,9.247235,-7.694762,-5.956066,9.797653,-6.981211,-0.141173,-3.347018,-7.834413,-1.057379,5.862680,-2.147782,-9.711386,4.530815,-0.753033,-6.697758,-1.117985,-4.684499,0.256629,-0.973887,2.595452,6.287541,-1.202384,-7.631641,-2.974672,7.550177,-0.924399,-5.903949,6.780635,-2.120664,-6.810649,-8.541431,6.333071,6.312536,5.704683,6.478932,-2.548676,3.543538,-2.602156,6.821538,-0.333752,-0.833473,-1.844548,-9.906217,-8.829519,-2.741391,7.702735,2.307894,9.257921,4.445001,2.816581,4.759542,8.389541,-8.994017,6.673175,-4.742676,3.416473,-8.914969,5.159977,0.066680,5.668006,3.457474,-8.364302,4.450277,5.512550,-7.973610,2.288717,4.646109,-9.645911,-4.268494,6.161141,-2.296669,-8.168848,7.421497,9.330175,0.635943,-8.017554,6.427620,-5.053092,-0.955502,1.077225,-3.691969,-6.066861,5.096697,5.945752,-1.655178,-5.507351,6.091540,0.105271,3.529405,5.384890,-5.084329,5.856773,-4.681312,-2.320705,0.224986,-5.487138,3.838891,0.631744,3.961565,-7.057726,-1.824628,-4.914732,7.563840,-9.006689,-6.695069,-0.378405,6.669611,-1.082911,6.968879,-5.270823,-6.454589,-1.038947,1.019784,-1.618579,-6.224221,0.666389,-2.144737,4.557479,3.527296,-3.576187,1.133547,-1.716627,-3.323054,5.610770,-4.631096,-9.442437,-5.667295,-1.393220,6.675431,-1.886405,2.608924,-5.813444,-9.236022,-4.100924,0.203949,0.733806,7.268984,2.785902,0.898980,2.991074,-1.635547,-4.673548,-3.570914,-8.237754,-3.188701,7.285743,-1.136749,8.580527,0.653923], dtype = "float64")#candidate|2387|(720,)|const|float64
call_2386 = relay.TupleGetItem(func_1762_call(relay.reshape(const_2387.astype('float64'), [3, 16, 15])), 0)
call_2388 = relay.TupleGetItem(func_1764_call(relay.reshape(const_2387.astype('float64'), [3, 16, 15])), 0)
func_603_call = mod.get_global_var('func_603')
func_605_call = mutated_mod.get_global_var('func_605')
var_2397 = relay.var("var_2397", dtype = "float64", shape = (768,))#candidate|2397|(768,)|var|float64
call_2396 = func_603_call(relay.reshape(var_2397.astype('float64'), [8, 8, 12]))
call_2398 = func_603_call(relay.reshape(var_2397.astype('float64'), [8, 8, 12]))
output = relay.Tuple([bop_2382,call_2386,const_2387,call_2396,var_2397,])
output2 = relay.Tuple([bop_2382,call_2388,const_2387,call_2398,var_2397,])
func_2405 = relay.Function([var_2397,], output)
mod['func_2405'] = func_2405
mod = relay.transform.InferType()(mod)
mutated_mod['func_2405'] = func_2405
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2406 = relay.var("var_2406", dtype = "float64", shape = (768,))#candidate|2406|(768,)|var|float64
func_2405_call = mutated_mod.get_global_var('func_2405')
call_2407 = func_2405_call(var_2406)
output = call_2407
func_2408 = relay.Function([var_2406], output)
mutated_mod['func_2408'] = func_2408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2433 = relay.var("var_2433", dtype = "float64", shape = (1, 15, 6))#candidate|2433|(1, 15, 6)|var|float64
const_2434 = relay.const([[[0.857530,-6.808308,7.237737,-9.617440,7.090069,5.773878],[-9.185192,2.331273,6.162100,-7.798612,7.606640,-6.022868],[-9.202573,-1.878114,1.380570,1.610923,-8.055280,0.059820],[9.931645,9.072100,-1.690104,9.065014,8.223678,-4.739769],[-7.125158,9.049318,8.605245,0.475630,-4.731975,-8.232371],[6.317326,1.980448,-3.683882,-0.207965,-0.697381,-9.062687],[-0.673398,-7.799794,-3.357520,5.332341,3.313390,-1.532991],[-0.558770,2.898622,-4.211086,-9.016203,6.265184,0.853813],[-0.427339,0.233690,1.107785,1.928333,9.617437,-3.248678],[7.057609,-0.024373,-5.615549,3.287617,-3.826235,-0.098372],[-0.030713,0.354408,-7.264071,3.141261,-5.840813,7.870396],[9.895305,1.094334,-1.030846,-4.112967,5.335568,9.795126],[-4.761853,-6.113213,0.142241,0.438972,-8.448013,5.764427],[5.220659,3.853922,9.925054,6.126360,-7.173717,-6.751390],[-1.023750,-7.163570,3.052087,-7.485170,-0.457715,4.876026]],[[3.799693,0.888912,2.165659,-9.255308,-7.232846,-6.740029],[-9.418333,-4.010249,-1.135878,-0.220423,3.779365,1.838038],[-8.322775,-4.250348,-0.389450,-2.874504,-6.676542,6.387324],[-0.631880,-8.501614,-4.665673,-6.672822,8.519914,4.457025],[1.757309,-6.954878,-0.036850,-5.672208,4.539059,7.459730],[-2.962983,6.426896,0.285963,-9.815084,-0.757375,-3.029307],[5.396420,-7.958992,8.439994,-3.524944,2.197131,-1.585037],[-5.957039,-9.280226,8.516959,-6.019240,7.753447,5.330460],[-0.597592,-8.923481,-3.566733,2.328015,7.293970,-7.787646],[8.955418,-8.654178,-6.378673,-3.193249,6.071119,-7.117409],[-2.601224,-7.811252,3.886717,4.835851,1.440011,-3.116188],[-0.852166,4.171580,9.591093,4.891780,-0.137574,6.834007],[-7.017176,-2.640297,-0.544338,-7.155651,1.218076,-6.660081],[-9.711982,-9.269851,6.263302,-7.982929,0.634285,-9.666286],[0.975510,1.125358,7.279553,-3.833110,6.842819,0.651204]],[[-2.969587,-0.250486,-2.302889,-9.779462,-3.578454,-4.415101],[7.713851,-9.301610,-8.751778,-0.874033,-5.806054,8.734180],[-0.365237,1.401805,-4.247459,-7.796820,-6.008772,-1.704796],[3.399605,-7.490780,-2.613838,-6.470133,1.928621,-9.039463],[6.246864,7.816391,-0.052979,5.078607,7.476827,-0.222275],[0.469483,-3.357122,-0.483154,-9.775725,5.457605,8.973495],[6.954416,3.193647,-8.715781,-3.500096,-6.171604,4.309779],[-2.119518,-9.542484,6.995159,-9.044189,2.052440,3.280289],[7.883775,7.093982,-4.881725,-0.778178,-6.001067,-4.795551],[5.186372,-8.008170,-0.693825,0.152853,-5.426097,-7.373257],[-4.839890,-0.638514,1.913697,7.287280,7.161204,8.961645],[-1.653506,2.645924,-1.881411,0.700523,-1.501074,3.820600],[-7.185459,-4.150573,-7.674980,-7.277211,2.552810,-7.426834],[-3.081808,0.575241,7.541372,4.204556,4.777054,-1.458663],[-8.618529,1.703624,-4.579952,-2.968762,6.154654,0.496072]],[[4.691218,8.694741,5.301462,-2.900600,2.206888,7.473278],[-8.701420,-3.951934,-4.067860,0.120529,6.445701,7.910738],[-3.513355,-4.234654,-3.152147,4.359596,3.255155,-4.938436],[8.298934,7.674944,6.783270,4.406950,9.432398,4.635300],[-8.547744,9.232945,0.953027,0.722644,-5.883692,-6.832950],[-6.319155,-8.961293,-3.922764,-6.430214,3.591063,-7.346237],[-1.257727,6.506950,-6.423247,6.822218,8.556953,-0.508080],[-7.539304,-2.277060,3.364126,9.028456,4.378361,4.564103],[2.831350,8.657909,8.446576,0.419689,2.426428,-8.496826],[0.208002,-5.880678,-8.680293,5.389958,0.930107,2.911885],[-4.973006,-1.787437,-5.010094,9.152953,4.351559,4.789665],[9.901820,-0.587677,2.860410,-9.691427,3.460264,4.157249],[1.170653,-0.257507,8.280085,8.029518,-6.011959,7.254904],[7.162428,-6.254146,4.734086,-3.057346,-3.321534,3.031266],[9.590342,-4.616510,-6.250064,-0.574134,1.536049,-8.710669]],[[-5.925867,-1.021751,5.402324,0.199766,3.085239,2.637168],[5.350197,0.810340,1.174105,2.476057,-3.755320,7.281805],[-6.256752,-9.832429,-3.202751,-9.529978,-4.460138,9.371905],[-4.353792,-4.637810,2.680988,-8.478873,5.875758,-0.723515],[-8.645837,9.787263,-0.628238,4.223653,-1.350031,-9.923418],[2.454065,5.742639,1.534274,3.005973,-6.122003,8.549476],[-2.263095,-8.770905,7.214627,-4.819664,7.764251,-3.146521],[-6.762263,-8.857550,2.617680,1.428909,6.494374,-2.094644],[0.548887,-1.429625,-4.015361,4.302859,2.080141,-8.786634],[1.530345,-6.151356,0.375215,-2.392278,-5.990608,-8.117890],[5.791649,-7.078486,2.875520,8.085329,0.762771,-8.723892],[-8.716377,-6.742890,5.059205,-1.908619,4.608856,4.194482],[-2.296195,-2.997805,-3.025803,-0.247881,-2.796598,-5.892764],[-4.577967,-5.581257,0.834773,5.372931,3.073824,1.996567],[-5.395416,6.314448,-9.533838,-3.309929,-5.221989,-9.523111]],[[-1.905442,-7.890610,0.615767,-2.029116,-7.450596,2.565214],[6.541126,1.657802,-5.548990,9.856215,9.634808,-4.990559],[-8.785619,-2.768790,7.670960,1.738887,8.121910,-0.060269],[7.107627,-9.178832,-1.907376,6.323515,-0.682082,-1.933875],[-0.719038,-7.678060,-7.641371,6.798222,3.816467,5.087019],[-6.504455,-1.556566,-6.169310,7.238749,9.412241,2.144300],[8.823162,1.140071,-3.369030,6.486155,-9.002982,-2.350045],[-7.644877,9.828610,0.172823,1.077780,0.638385,1.250688],[-7.872985,9.071750,9.227170,7.456465,-5.840711,-6.516010],[-1.895731,6.185261,2.690646,3.195968,8.842384,-8.591372],[1.532806,8.181244,4.996394,-6.533919,1.759250,-5.176924],[3.350052,9.011410,-3.324896,-6.902805,6.471185,3.704602],[0.028094,5.323366,3.259226,9.141651,3.555226,-5.740738],[6.546705,-7.321637,-7.107920,7.847758,7.893188,9.442551],[6.776470,-8.278437,5.807739,7.863610,7.422707,-2.425800]],[[-5.103810,7.199108,-4.203573,7.763796,5.501094,-2.870567],[-7.378242,1.201450,-4.958645,5.601290,-5.459642,3.799679],[-1.080559,-3.270750,6.121264,-7.892355,-3.217630,0.638624],[3.707738,-0.481758,-7.230536,4.874788,6.790832,-4.784954],[1.869232,3.654166,-6.213346,-2.903001,9.098576,-2.460514],[7.747043,5.235658,-3.470282,-2.589074,0.268503,-9.664028],[0.832947,-4.403666,-7.355908,-6.287172,-6.018192,9.052743],[-7.022452,5.477038,-5.478124,-4.049660,5.755181,7.328404],[-0.827481,5.943945,9.452051,-7.591604,9.174627,4.788942],[3.877116,-3.860743,8.108290,-2.586650,3.401144,5.312842],[2.321614,3.325273,6.371849,5.565756,-1.854200,8.393687],[-9.969768,-8.879589,-6.516756,-9.989011,1.394978,-1.909820],[-3.905419,1.617080,-7.606310,-0.316118,-7.201534,-7.628356],[-9.649413,-5.268551,0.780021,-4.315956,6.401252,9.566085],[-1.774672,6.513082,-9.129476,-5.173732,3.266840,-4.839296]],[[7.705917,5.229439,-3.476304,1.984885,3.991791,9.838613],[-6.754384,8.577688,-4.331848,4.724325,-8.668167,2.905240],[-3.678533,2.042684,5.987173,-0.143379,-9.958557,-2.126913],[6.958683,-9.861928,3.649880,6.469474,1.504098,7.890760],[-7.276081,2.151767,-0.675100,4.053159,-4.659841,-9.175458],[2.028585,-3.543040,-2.042795,-9.254092,9.494028,9.620450],[4.215939,-1.941652,1.105479,-1.205965,-2.573633,-2.378311],[-5.112237,-2.283905,-8.450600,-9.811646,5.367505,-7.848169],[-0.417227,4.333319,6.522304,-7.164723,-0.226629,8.862753],[4.054747,3.193658,6.660195,-4.418454,3.871384,8.792512],[8.277519,7.969482,-8.858682,-2.669131,3.214429,-1.795702],[-7.815262,9.664664,6.430936,-4.937579,-5.979623,4.810804],[4.493464,-7.871608,-5.023280,8.045372,6.376327,-7.319631],[-3.957411,-8.171850,-0.444924,-4.653190,-1.276593,6.071484],[-3.596997,-8.203282,0.118099,5.460948,5.653101,-2.046769]],[[3.361250,6.908530,-9.844631,-5.826642,-9.155558,-8.677955],[-9.241598,-8.734431,-1.376991,-1.177741,9.025504,-3.291006],[-6.061597,-7.169331,6.244701,5.055337,-8.028488,6.946258],[-5.115044,5.511966,1.243097,-1.323840,-0.439876,-1.244903],[-5.376002,6.029538,0.802194,6.168358,6.512301,4.502777],[-4.767991,4.209181,2.665028,1.819513,7.799206,-9.702501],[7.077261,-5.266033,4.865607,-8.355181,0.125919,-1.934016],[2.568905,2.467891,3.884699,1.315240,3.184754,-5.870869],[-9.629517,3.155906,-0.678966,-1.176413,-7.207309,3.446083],[6.396887,3.104992,8.663100,3.107596,6.160532,-6.258156],[3.864514,-4.189247,-7.282762,4.138056,7.125602,-8.358670],[-9.701147,9.260286,7.964670,2.195683,-0.470900,-5.130311],[-7.463753,3.137566,-5.505205,-8.780046,9.945944,-8.749439],[4.659416,-2.236217,-4.905887,-1.076853,4.119559,5.663130],[-9.006330,2.312746,-0.324879,-0.138090,8.042573,-4.648424]],[[2.804159,0.744196,-5.634536,2.720648,2.788483,-4.443094],[-9.433631,2.128991,-3.244632,4.609189,6.635955,8.476014],[-3.110172,-0.352473,7.041375,7.561041,3.231573,-5.136982],[-1.475163,1.634041,7.617384,-7.974714,-4.741916,-3.901708],[-6.666192,5.358037,-1.530498,0.561413,-6.387068,7.146017],[8.093017,1.012643,5.730729,-3.945730,8.323604,-8.815441],[9.975575,-0.407606,-8.894694,-6.901750,-8.077552,-8.755484],[-3.858141,6.600336,7.125495,9.451479,2.742651,3.173516],[-8.456421,6.239458,0.664305,-6.982742,-0.522090,-3.752328],[2.900924,7.947592,-8.220213,4.548975,-4.792739,9.514604],[9.152606,-9.830994,0.692895,7.086159,2.074796,0.356065],[-0.588471,9.122150,2.987169,7.432046,-2.340213,-2.652569],[-6.171708,8.075323,8.748681,-6.204146,4.727776,9.247641],[-4.646984,-2.858338,7.259975,-0.087906,-4.255673,-4.411384],[7.584704,-8.860860,9.150430,-4.908956,-1.150978,-0.564213]],[[3.941581,-9.798372,4.002287,1.493892,3.538668,4.531583],[-8.961819,-5.998294,5.343461,-5.114118,1.984978,-8.805351],[1.797715,-2.406898,-7.828940,5.899301,-4.908909,9.259357],[-1.908684,8.442708,-2.000152,-8.617645,1.370476,7.388748],[-9.876468,9.628993,6.661725,-0.104235,9.667913,-0.952476],[1.397616,2.414350,-4.366929,5.478751,6.998029,-2.941447],[1.718354,-9.273892,5.350761,3.673838,2.089398,9.513562],[-3.711465,-3.146308,7.739839,0.757222,-4.922629,-1.195206],[7.908379,8.382184,-0.359492,8.392537,1.331369,-7.999471],[8.572884,-7.307365,6.944563,4.030013,3.717793,2.155946],[0.375502,6.578493,2.863233,-7.083611,3.752544,9.739491],[9.166778,1.188909,7.336040,5.279117,8.845125,2.477209],[-3.237215,-4.866443,-5.731395,-7.046568,-9.710508,-4.060806],[8.958624,0.660723,-5.836174,-5.648801,6.055809,-5.718554],[-9.654201,4.123644,6.061671,-0.210140,-1.518771,5.822253]],[[-3.988712,-1.548975,5.997997,-7.597059,9.486249,2.101620],[-7.814962,7.223198,5.240127,-1.389176,0.895927,6.728815],[7.173802,-0.407977,-1.793968,-3.163916,1.622039,-7.036493],[4.299675,7.246476,-7.202805,3.392474,8.215109,-4.504307],[-4.951538,-7.387196,-3.795236,0.780514,2.023717,9.145444],[7.842919,-7.387385,-8.974672,-8.493459,8.505358,-2.100743],[-7.733509,-9.222563,-4.422817,6.268846,-9.605373,4.723906],[6.640137,-9.481357,-9.389365,5.060818,3.180274,9.638125],[-9.327506,-5.098997,7.311382,4.640370,-1.867436,3.605448],[-7.875633,4.987408,-0.845679,4.198070,5.003915,-6.314218],[-3.141687,-6.993037,2.870975,7.029266,2.819279,1.169335],[8.149094,-1.823664,8.321488,-2.822939,-6.583874,-0.003497],[-8.060008,4.501170,8.929579,-8.820882,8.555201,3.971725],[-9.301687,-2.566700,-1.166020,-4.109359,-4.841675,8.634392],[2.194715,7.670426,-2.824435,-1.089914,9.725424,-3.786830]],[[-1.886559,-9.904298,0.254742,-0.421026,0.820929,8.381856],[1.157225,4.078710,6.042253,9.360075,-3.330726,-9.102938],[-0.632177,-9.343769,-3.276674,-0.266820,2.924661,-1.207077],[-6.715393,-6.439002,1.024261,-1.001803,3.680254,-4.278147],[-8.269955,7.286995,-6.558108,2.217097,7.485501,7.627839],[8.103543,-3.968130,-6.983288,4.953652,5.680004,-1.247003],[-5.944801,8.051326,-7.557127,-3.014879,4.301650,-8.526456],[7.849063,-2.444320,3.423021,9.125015,2.161105,4.057132],[-0.875167,3.940900,-7.767443,9.507567,-6.457130,-4.454820],[-7.095237,5.865229,1.994623,-5.433348,-8.091681,2.493858],[-2.110294,-1.069451,-9.751156,9.271549,-3.190890,-7.166541],[8.850620,2.515370,1.380790,-4.094868,-7.527423,8.155336],[9.748955,4.924576,2.576269,8.069119,6.512820,5.227212],[1.777020,-9.154870,5.639736,-2.085441,-2.912025,-3.689006],[-7.553484,-0.188179,7.382884,-5.741908,6.996849,-7.855931]],[[-0.054054,-3.180848,0.826611,8.578633,-0.991508,-1.866782],[-6.887087,-6.016720,7.527313,-7.476775,-1.364904,-4.770974],[7.852908,-9.266622,-8.862053,3.976242,8.570320,-4.311688],[6.375096,1.406539,-9.543319,-2.445973,4.186565,0.868033],[1.855575,-8.420278,-7.530979,6.247201,0.647030,-3.304956],[-9.897968,-3.394170,9.713282,-3.678714,-6.301832,0.873932],[-5.465848,0.237470,-0.474122,-8.793903,7.519618,8.785287],[8.452652,7.571871,6.447519,7.429716,6.495644,8.682072],[-8.526191,0.843919,0.430632,3.134893,-8.934103,9.950885],[-3.644754,2.736324,-0.267127,2.831242,2.967628,-4.884460],[6.787140,5.865843,2.943747,8.003014,-8.834676,-7.707209],[0.688921,8.015277,5.522612,7.412522,-1.667063,3.995806],[0.842897,7.231536,1.515732,5.973295,5.569679,9.163368],[0.874595,-9.836128,5.933205,-0.475829,6.902661,8.991417],[-3.842856,-1.388481,4.503600,-6.173302,-5.987445,5.719619]],[[9.463688,-6.906917,3.494906,-4.873766,8.065775,5.812415],[7.603404,5.017268,5.931870,6.136417,2.920151,3.800005],[2.443538,-6.313185,4.989556,0.947721,-8.132112,1.218489],[2.849725,9.083631,-8.577149,-5.795163,-2.246803,-7.305011],[-2.083427,7.275227,1.577841,-6.139055,-9.515068,0.297655],[-6.372157,8.532661,-1.086903,7.053024,-9.629840,-8.490754],[2.146505,-8.809344,2.376866,8.146368,4.690154,1.307820],[5.383142,0.921045,-4.493378,6.397219,-1.072682,-1.097187],[1.454973,-1.893493,-9.308027,9.327544,1.801829,2.983484],[-4.327370,-1.510159,6.563251,1.984421,2.142300,6.660959],[1.278621,6.477638,2.583414,-6.130461,8.253805,-6.015036],[-5.704218,1.618230,1.281090,-6.979856,1.652764,9.288587],[-8.979811,-6.603032,-7.986153,-5.751510,-6.797204,6.091648],[7.917643,7.578938,-1.317501,-5.091770,7.955525,8.456728],[-3.067235,-3.573731,-1.428937,-1.388126,-6.730246,7.118833]],[[-8.422678,-7.744879,8.215391,-8.629637,-3.906004,4.943287],[5.006859,4.225967,9.373843,-1.560899,-9.632110,2.712459],[-1.843341,0.031563,-3.289534,0.731729,-9.448026,-6.086054],[9.954725,-0.913771,-1.862680,8.402412,4.084293,-1.765082],[2.305698,-5.634353,0.839466,-2.044505,-6.440531,1.701265],[-5.933780,5.658203,-0.048272,-8.557832,7.586346,6.953900],[-1.177426,1.398497,2.550876,-1.970945,-3.493780,-0.034089],[1.864161,-6.546129,3.406137,-5.355183,-0.680754,-2.022802],[9.622278,5.847065,-4.945348,-0.300278,8.694753,-9.747184],[6.599025,3.722598,-7.804954,-9.535894,-1.326131,1.757253],[-8.239910,-0.610522,9.817448,0.946360,1.479721,2.412923],[-3.104268,3.772112,-1.411307,-9.994731,-5.313241,6.044385],[-8.499848,-4.570244,-8.588061,-6.150071,-5.544506,-5.091751],[9.172745,-5.421632,-3.383556,-0.006218,-3.550670,-3.567719],[-2.713296,-6.598160,-6.001800,1.944941,7.079058,2.573919]]], dtype = "float64")#candidate|2434|(16, 15, 6)|const|float64
bop_2435 = relay.floor_mod(var_2433.astype('float64'), const_2434.astype('float64')) # shape=(16, 15, 6)
uop_2444 = relay.acosh(var_2433.astype('float32')) # shape=(1, 15, 6)
func_1143_call = mod.get_global_var('func_1143')
func_1146_call = mutated_mod.get_global_var('func_1146')
const_2468 = relay.const([-2.690822,-0.356684,-1.778628,9.161139,4.236890,6.043206,-8.996347,0.540742,0.745888,-2.254637,-6.583390,-9.275560,2.252216,-7.138809,8.969087,4.620449,-0.580268,-2.222491,-5.831784,-4.312048,-3.915467,-7.465663,-3.374229,5.765612,-3.457544,5.148508,7.090865,6.368026,-4.996644,-7.665856,2.821213,7.070502,8.807003,6.261435,-8.101890,4.387692,0.018551,1.312066,2.640358,-2.382655,-0.800586,-8.098580,3.959787,-6.873266,-0.370376,9.261747,-9.984911,5.352896,-7.095793,9.066323,-4.458529,-9.014062,8.418737,0.247880,-2.726920,-2.811829,6.841951,-5.589610,-9.654046,-1.851183,6.112422,3.597735,0.098473,2.962229,5.312640,-4.111784,2.573690,8.101774,-3.878755,8.085936,-5.325628,1.959120,1.029869,-0.897141,5.071860,-3.172663,-6.344818,-2.369079,-1.031001,-0.221607,6.174659,5.747708,5.054599,1.738024,0.583693,-3.919616,-5.632636,-2.600775,8.408397,1.688650,6.841610,-8.586570,0.724344,2.792722,-5.579587,6.686749], dtype = "float32")#candidate|2468|(96,)|const|float32
var_2469 = relay.var("var_2469", dtype = "float32", shape = (490,))#candidate|2469|(490,)|var|float32
call_2467 = relay.TupleGetItem(func_1143_call(relay.reshape(const_2468.astype('float32'), [1, 96]), relay.reshape(var_2469.astype('float32'), [1, 490]), ), 1)
call_2470 = relay.TupleGetItem(func_1146_call(relay.reshape(const_2468.astype('float32'), [1, 96]), relay.reshape(var_2469.astype('float32'), [1, 490]), ), 1)
uop_2484 = relay.log(uop_2444.astype('float64')) # shape=(1, 15, 6)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
const_2497 = relay.const([-7.809633,0.819806,3.633910,6.582175,-6.283514,9.972940,9.956114,-5.393872,0.358124,4.731263,1.646174,-6.151568,-7.925584,-7.908177,-3.495920,6.815167,-6.183499,-9.664387,9.054946,-0.336342,3.809067,-8.079774,-4.599177,5.269715,-3.576151,-5.470912,6.842376,-4.655532,-3.670468,9.171051,-2.645431,2.268169,2.339817,-5.300589,7.733879,9.504040,0.348338,-1.101282,-6.409319,4.923004,-6.704765,-7.653003,-2.009765,9.116926,4.061084,5.780746,8.704505,-4.932447,-9.735013,-4.913851,-3.268947,9.528411,5.685376,6.966330,4.789786,-2.433880,-8.339555,7.366725,6.564824,-4.773937,2.502496,-4.313536,-7.544366,-7.004729,-3.282551,3.342590,-9.326208,-5.071501,-6.021081,8.516432,-2.797547,1.913205,3.566236,5.334275,7.438101,5.191253,4.292683,4.301686,2.092495,-5.564585,-8.311065,-3.418527,-9.967223,-5.104853,-0.899913,3.042881,9.420328,-8.534520,7.338881,9.565254,1.246348,-2.661494,5.201957,-5.232544,0.329498,-7.796290,-2.615358,-5.574214,7.026593,5.771091,-9.662602,-6.632800,0.363619,-7.939591,-6.135721,8.622516,3.532230,-7.969765,-6.223334,3.621997,0.741893,2.920534,-4.271382,6.160851,3.988632,1.211012,4.137012,4.791265,-1.987420,6.345600,-3.902105,-9.385354,-8.401923,-7.452768,-9.693428,-3.740901,2.311832,5.102000,6.224249,0.169816,-5.990707,7.490250,-2.662293,-5.897557,-6.693510,2.837361,7.809931,-3.603624,-2.238500,-5.573188,-7.411640,-1.022931,-5.892409,4.152847,-7.937966,-4.821734,-7.366316,-5.325901,1.177631,9.701721,1.593789,-4.498005,3.894728,-9.460577,7.944682,-2.647374,-2.959247,1.958882,-6.080307,-2.555101,1.777892,6.479975,-8.007158,-6.188251,8.648941,-0.894163,-1.048751,1.577138,6.173389,0.520555,-3.879811,1.149325,-1.570900,8.306497,4.978044,-8.017160,4.134263,-6.928438,5.317543,8.028124,1.607908,4.260859,-4.278951,0.352907,8.620430,-7.111091,-0.725338,-6.216505,-8.222092,1.397905,1.890548,-5.840974,-4.354843,5.630611,8.339460,-6.641649,-3.286872,-6.701679,-2.725742,-7.217799,-9.185726,4.497831,-4.990628,2.916386,8.102885,5.142098,-3.202268,6.906959,-8.335670,4.878200,5.643625,-0.928347,7.215262,-1.757776,-9.992930,3.076554,4.094076,4.754441,-6.386806,-7.310502,-7.209416,4.319407,6.505959,0.341645,1.462097,7.564012,-9.680211,-8.516434,-0.168460,7.679001,2.049411,3.651002,2.921411,8.969814,-5.096035,8.465988,2.782113,6.759889,-8.828211,-6.188622,0.476855,-1.450813,-2.124838,-0.442754,-2.691678,2.405701,-7.020642,-2.037852,-6.590557,-6.689491,-5.160768,2.622738,-3.081148,-2.589935,2.145161,-2.734577,8.503600,-1.994383,1.891062,-0.461785,-3.981903,5.856669,7.540677,-2.366125,1.301051,-1.344691,-8.273917,3.842529,-9.635945,2.933505,3.652688,0.022828,5.363271,-6.014547,-4.882428,-7.490571,-6.941070,0.810914,4.036296,4.051280,-6.324581,-9.103480,3.697066,7.709578,-5.734591,5.995135,-6.336470,-0.115059,-6.524440,-7.325675,4.919181,3.431073,1.699820,5.857341,-5.754269,7.078820,-4.727192,-9.331873,-0.126372,-6.378284,-5.931858,-2.872727,-9.990967,-4.073898,8.800308,0.694192,4.758538,-5.715313,1.705087,-9.377605,7.181250,4.515119,4.854092,4.485062,1.423416,-4.502182,-8.178255,4.733826,9.426570,9.832083,-4.552603,-4.333687,-3.528347,-6.413753,-5.359969,7.497280,2.223033,-1.707677,-5.903528,-4.482598,8.428378,-5.794935,2.527706,-9.355732,4.275127,0.766449,-0.995899,-0.656047,-3.543485,-3.892672,5.263521,-5.358444,-4.430326,3.860717,2.354301,8.057006,3.092143,-6.573417,4.664222,4.453008,-6.971454,-6.628934,-8.350019,8.743128,-1.971639,-0.019884,-5.128645,-8.488955,7.697993,5.562185,9.404670,3.941273,-9.455008,5.083708,-7.585680,6.767719,2.908991,9.697839,-1.942834,-5.893972,-6.903778,-6.453974,-8.579030,-7.675522,-8.653586,-5.286200,-2.369498,-9.026947,7.450686,-4.136061,2.868877,-4.180445,3.319005,-1.325029,7.197730,-8.037487,9.144193,-9.030512,0.088520,6.318706,-2.722710,6.452760,0.701852,-3.917948,8.909465,-7.620081,-0.899317,7.226325,-7.807914,5.602548,7.620647,-2.917725,-4.153202,-8.873990,2.585986,6.101632,5.573164,-8.742349,2.263895,4.600563,1.811285,0.475007,-0.160092,8.636857,-0.025841,-5.249154,0.616907,2.485336,2.415067,7.510346,2.687371,5.690162,-3.795546,-8.278208,-0.119678,-3.450549,8.794895,3.479141,0.806817,8.259603,6.959827,2.853738,-7.998212,-4.665748,-9.557079,-1.340053,-2.773813,-2.577219,4.685605,-5.196357,-6.915864,8.080800,-0.624681,4.238870,5.443921,-9.760209,7.497102,8.853787,-0.210637,9.724770,-1.301026,-7.844987,3.249115,9.024547,8.410475,-4.119104,-5.823971,-9.091168,-7.627915,-2.768906,-3.110732,-4.461102,-5.101070,2.361946,0.778531,4.012322,-8.776889,8.355033,-2.365492,-6.201060,-7.193729,0.900631,-8.201619,-2.179447,-3.192371,-6.209847,4.016413,-7.177878,0.082809,-9.481744,-4.216832,-0.090844,7.146496,4.355958,-2.971736,-4.941348,-2.402390,5.833843,3.736474,-2.308685,6.371740,-0.144703,0.332648,-4.007682,-7.522104,-6.407863,1.965994,2.335188,-0.809634,-8.745070,-9.012092,3.705272,6.366312,7.097064,-1.375816,-6.713615,-1.764766,-8.527535,7.006297,-0.846696,5.756352,-4.728189,6.605555,-4.523967,-4.830683,-9.513900,2.810421,-9.796054,4.521019,0.459745,8.309202,9.161150,-1.416290,8.185007,-0.123642,2.181141,-8.417668,-7.150093,8.363184,3.931793,-8.070906,-6.710609,-3.451460,-2.787358,-5.167485,3.504013,5.593362,5.931132,2.870205,0.528306,9.922207,4.162952,-4.433470,6.045071,-1.288766,-6.805648,1.474226,-3.749923,2.198112,9.618553,-8.144865,1.396105,1.539286,7.307394,7.666100,-4.055398,0.262641,0.425239,-8.061156,9.264318,0.128649,1.025523,-8.900939,-9.466450,-4.138278,1.949926,1.336195,-4.990731,-3.458860,6.545243,-0.893460,-0.322892,9.847536,3.113587,-0.381602,1.635100,-6.864613,-1.250599,-3.888149,-0.452536,-2.259661,-3.004657,-3.988358,-5.152830,-4.390080,8.590079,-1.153325,9.461849,9.324952,8.309242,1.450276,8.595899,5.652347,0.245882,3.010876,-3.023652,9.874999,0.802418,6.293053,-3.974889,0.837290,-4.816556,1.537219,7.358022,-6.810452,1.811877,9.609201,-2.999936,-5.479453,9.125752,3.519662,-9.096004,-8.523958,3.656046,7.059658,5.060959,0.725898,-9.078171,2.136066,7.308211,-6.562545,-0.437278,3.261108,-6.886126,-8.801190,3.252214,5.255851,-3.894890,3.739008,6.151576,-7.103865,3.203013,-4.287466,-8.465876,-3.707615,-9.511568,-8.120903,-4.443516,9.189274,-6.062232,-9.799887,1.786011,5.213994,2.148086,5.581722,3.249468,-2.492079,3.361785,3.474320,-3.132389,5.895934,-9.014029,7.084199,-0.298246,-9.401386,-9.473064,-8.490874,-4.915154,-4.957266,1.967241,2.474499,1.527457,5.034737,-0.845253,-3.930056,-3.354486,7.170381,-2.099192,-1.222814,5.372613,1.107485,0.829218,-7.024181,3.248134,-8.090643,-9.085940,3.233174,5.379352,4.645523,2.104960,-3.125613,0.341897,2.441994,4.492357,-4.008749,-3.119481,-0.161202,-1.326352,6.732046,6.961312,-7.130505,5.516724,2.185371,-9.869111,3.309747,3.613722,-5.783444,7.485282,-0.491527,4.152828,-3.301189,-8.668638,3.175559,5.299560,-5.392565,-7.645234,-1.443195,-8.680539,-1.516299,-1.178526,1.176039,-0.159156,5.321192,8.606862,-8.933528,-0.244550,-0.483397,1.877963,0.136798,-3.331595], dtype = "float64")#candidate|2497|(720,)|const|float64
call_2496 = relay.TupleGetItem(func_1762_call(relay.reshape(const_2497.astype('float64'), [3, 16, 15])), 0)
call_2498 = relay.TupleGetItem(func_1764_call(relay.reshape(const_2497.astype('float64'), [3, 16, 15])), 0)
output = relay.Tuple([bop_2435,call_2467,const_2468,var_2469,uop_2484,call_2496,const_2497,])
output2 = relay.Tuple([bop_2435,call_2470,const_2468,var_2469,uop_2484,call_2498,const_2497,])
func_2505 = relay.Function([var_2433,var_2469,], output)
mod['func_2505'] = func_2505
mod = relay.transform.InferType()(mod)
mutated_mod['func_2505'] = func_2505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2505_call = mutated_mod.get_global_var('func_2505')
var_2507 = relay.var("var_2507", dtype = "float64", shape = (1, 15, 6))#candidate|2507|(1, 15, 6)|var|float64
var_2508 = relay.var("var_2508", dtype = "float32", shape = (490,))#candidate|2508|(490,)|var|float32
call_2506 = func_2505_call(var_2507,var_2508,)
output = call_2506
func_2509 = relay.Function([var_2507,var_2508,], output)
mutated_mod['func_2509'] = func_2509
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2570 = relay.const([[[-5.179361],[3.993144],[3.927242],[-5.683169],[-4.783956],[9.122311],[5.231687],[-2.697812],[6.464748]],[[-5.654633],[-5.714443],[-5.980449],[2.642714],[-4.251833],[0.935733],[3.058485],[1.623164],[7.258908]],[[-4.486761],[-0.146458],[2.670030],[-8.520827],[4.420416],[7.889357],[-7.567872],[-4.932676],[7.818298]]], dtype = "float32")#candidate|2570|(3, 9, 1)|const|float32
uop_2571 = relay.acosh(const_2570.astype('float32')) # shape=(3, 9, 1)
output = relay.Tuple([uop_2571,])
output2 = relay.Tuple([uop_2571,])
func_2583 = relay.Function([], output)
mod['func_2583'] = func_2583
mod = relay.transform.InferType()(mod)
output = func_2583()
func_2584 = relay.Function([], output)
mutated_mod['func_2584'] = func_2584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_2663 = relay.TupleGetItem(func_2583_call(), 0)
call_2664 = relay.TupleGetItem(func_2584_call(), 0)
output = relay.Tuple([call_2663,])
output2 = relay.Tuple([call_2664,])
func_2665 = relay.Function([], output)
mod['func_2665'] = func_2665
mod = relay.transform.InferType()(mod)
mutated_mod['func_2665'] = func_2665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2665_call = mutated_mod.get_global_var('func_2665')
call_2666 = func_2665_call()
output = call_2666
func_2667 = relay.Function([], output)
mutated_mod['func_2667'] = func_2667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_2678 = relay.TupleGetItem(func_2583_call(), 0)
call_2679 = relay.TupleGetItem(func_2584_call(), 0)
func_1295_call = mod.get_global_var('func_1295')
func_1298_call = mutated_mod.get_global_var('func_1298')
const_2690 = relay.const([[-2.689778,-0.743451,-1.719460,1.623035,8.628724,-9.489671,-3.047994,-1.496769,-3.378957,1.253461,7.715360,4.769971,-1.124265,-1.292043,6.998577,-2.355370,5.509295,-0.653013,0.182917,1.644931,-2.709584,3.870646,-1.795737,-6.404852,6.829475,4.283411,-0.122059,8.883100,3.862455,2.245489,-1.913883,-9.351819,-8.040485,4.130604,-4.655166,5.160453,-2.364498,4.625953,-9.404086,2.489377,-3.373072,-5.467335,-4.120210,5.144669,-3.463288,-0.221097,-0.873404,-1.053426,1.962236,-9.829467,-4.583676,-0.960197,4.703156,8.691414,-3.745844,1.708222,8.855765,0.894923,6.594341,3.205613,1.366694,-5.895366,-1.138678,-9.618913],[-3.852337,-6.680385,-1.484774,5.663397,-8.311206,-6.426001,-2.423844,5.291280,5.029968,2.672872,6.766173,-3.865351,-9.360195,3.778128,1.601120,-5.381823,-4.289016,5.330223,-1.257527,-9.109610,0.140433,4.079864,-5.346991,-6.422759,0.401170,-6.028384,-2.998054,6.169902,1.856330,-8.539989,-4.397196,-6.226247,1.839477,-6.245858,1.297759,-9.880602,5.623723,-7.696914,3.567537,4.296775,-2.996699,2.812097,7.209438,4.928099,1.238264,4.369890,-5.451926,5.583328,8.715308,7.135967,-3.943143,-2.241587,1.748208,-9.984005,1.224402,1.407144,8.272265,-9.252765,8.536433,-0.291785,9.190713,9.801632,3.232834,0.916328]], dtype = "float64")#candidate|2690|(2, 64)|const|float64
var_2691 = relay.var("var_2691", dtype = "float64", shape = (100,))#candidate|2691|(100,)|var|float64
call_2689 = relay.TupleGetItem(func_1295_call(relay.reshape(const_2690.astype('float64'), [4, 16, 2]), relay.reshape(var_2691.astype('float64'), [100,]), ), 0)
call_2692 = relay.TupleGetItem(func_1298_call(relay.reshape(const_2690.astype('float64'), [4, 16, 2]), relay.reshape(var_2691.astype('float64'), [100,]), ), 0)
func_2066_call = mod.get_global_var('func_2066')
func_2070_call = mutated_mod.get_global_var('func_2070')
const_2694 = relay.const([[-5,-7],[7,8],[9,-2],[-6,10],[6,-10],[-1,-9],[9,-1],[-3,7],[10,-8],[3,-8],[-2,3],[-1,-1],[-2,-8]], dtype = "uint8")#candidate|2694|(13, 2)|const|uint8
var_2695 = relay.var("var_2695", dtype = "uint8", shape = (39, 6))#candidate|2695|(39, 6)|var|uint8
call_2693 = relay.TupleGetItem(func_2066_call(relay.reshape(const_2694.astype('uint8'), [13, 2, 1]), relay.reshape(var_2695.astype('uint8'), [13, 2, 9]), ), 1)
call_2696 = relay.TupleGetItem(func_2070_call(relay.reshape(const_2694.astype('uint8'), [13, 2, 1]), relay.reshape(var_2695.astype('uint8'), [13, 2, 9]), ), 1)
output = relay.Tuple([call_2678,call_2689,const_2690,var_2691,call_2693,const_2694,var_2695,])
output2 = relay.Tuple([call_2679,call_2692,const_2690,var_2691,call_2696,const_2694,var_2695,])
func_2712 = relay.Function([var_2691,var_2695,], output)
mod['func_2712'] = func_2712
mod = relay.transform.InferType()(mod)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2712_call = mutated_mod.get_global_var('func_2712')
var_2714 = relay.var("var_2714", dtype = "float64", shape = (100,))#candidate|2714|(100,)|var|float64
var_2715 = relay.var("var_2715", dtype = "uint8", shape = (39, 6))#candidate|2715|(39, 6)|var|uint8
call_2713 = func_2712_call(var_2714,var_2715,)
output = call_2713
func_2716 = relay.Function([var_2714,var_2715,], output)
mutated_mod['func_2716'] = func_2716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_2776 = relay.TupleGetItem(func_2665_call(), 0)
call_2777 = relay.TupleGetItem(func_2667_call(), 0)
func_2505_call = mod.get_global_var('func_2505')
func_2509_call = mutated_mod.get_global_var('func_2509')
var_2782 = relay.var("var_2782", dtype = "float64", shape = (90,))#candidate|2782|(90,)|var|float64
const_2783 = relay.const([-4.426061,-8.667001,-2.852355,-3.666821,7.809103,6.486415,7.007944,-5.045776,-1.747876,0.706621,3.523592,-5.612052,4.034693,6.309432,9.452660,-1.033020,-4.244576,1.226609,-7.502933,-9.879113,5.819564,-1.427752,9.899059,7.133315,-9.187726,-7.828664,3.507115,0.118051,-9.759136,8.330700,-3.860862,7.872348,-7.700046,-9.999454,4.656365,8.906307,-4.949275,8.350088,-7.931061,9.441459,0.938524,4.817114,9.059617,9.447659,0.793356,6.499243,-1.079894,-8.216350,6.419562,3.506718,7.024853,-0.480250,-7.475939,8.627866,-2.268194,5.242386,-6.753770,2.846182,-9.966626,5.739290,7.733954,3.067951,-5.245348,4.137111,-7.347980,-3.750751,9.604581,5.428199,-9.922148,-4.425999,-6.456347,-7.543267,-7.887594,-1.923955,-0.665777,-5.799061,-4.614216,8.041137,5.621479,3.669981,9.383111,2.610963,-3.808628,-8.434023,4.296823,3.138399,-5.174849,-5.774784,1.908750,4.670364,7.064726,-7.319487,-6.039702,-0.936733,-2.567617,1.162061,7.696068,-5.802321,-3.361100,-8.789139,9.824750,8.303886,8.729658,8.475901,-6.287074,-4.928419,-9.980196,9.921030,-4.538148,8.000808,2.489196,-7.187241,4.359105,-5.781036,8.810443,-6.101554,3.647964,-6.674682,2.573220,7.073159,2.176137,7.860086,-1.177248,-8.829144,-1.562407,0.953735,-4.532956,-8.148921,-8.188538,3.299213,4.418134,7.400262,9.202411,2.104782,2.393372,-6.643052,-9.948682,-8.766306,6.132667,4.998150,-3.425773,6.112684,-8.357920,4.959441,1.567080,-4.983025,-1.709292,3.748480,-2.352902,-0.653030,1.141100,-1.687537,8.577748,4.861044,0.928049,-6.126051,7.907528,-6.998379,-7.916437,8.516662,6.570736,-0.201752,8.978015,9.609302,2.443232,4.200834,9.826079,-0.826989,-9.961269,0.423801,6.676267,-4.447667,9.634860,-2.191541,-4.226774,8.175122,-8.885922,2.907926,5.675551,6.546754,-1.341574,-1.514611,-9.143878,-1.024157,-3.076378,-6.407516,-7.313830,-8.890052,9.249442,8.094082,-7.684770,9.085248,-6.856720,-6.857118,-2.264000,-3.324510,-1.580017,-6.898616,-2.214151,-9.362170,-0.706945,-1.608210,5.878114,-2.562760,7.349310,-2.662084,0.266625,-0.514105,-8.504250,5.372600,-6.365163,8.877931,-6.835991,2.641598,4.169359,5.457223,-4.673296,-2.053718,4.940134,0.761631,-4.334696,-3.068938,3.931983,4.835365,-0.179916,-9.290938,2.107300,7.135880,2.198509,-4.824756,-8.326944,-1.037330,4.912868,-7.034942,-7.832797,5.280466,9.914178,-5.471597,6.549213,-0.433226,-2.390054,-5.054979,6.002138,-6.412638,8.709430,3.277346,-8.023461,-2.747567,-8.949578,-5.660461,-2.393424,6.354284,-6.145420,3.002668,0.706987,4.608319,-9.516735,0.091933,5.656714,4.255874,-6.004255,1.473771,-7.589696,-8.603677,-7.598581,8.991714,6.431400,9.785053,-7.777796,0.361177,-0.733241,-4.528227,-1.810532,-4.475997,8.486730,-6.325399,-5.172323,-4.440957,-2.508397,5.282847,-1.947808,2.795000,9.426664,5.989178,0.963593,-0.170097,6.701007,6.046754,-0.668433,4.850517,7.666136,-8.897085,4.986040,-8.467959,5.013287,2.581232,3.427936,1.834240,8.960334,-8.779673,5.298247,-7.096229,1.296054,1.806040,-9.394472,3.012856,-1.990177,3.897842,2.318298,9.245121,-7.815032,-3.585658,-1.857266,-9.493938,-7.703002,-3.035683,7.196340,-4.423379,-6.943198,1.426141,-5.433889,-2.075577,-6.719625,0.532151,-1.027694,-2.945882,9.496200,-9.396006,6.873245,7.157260,7.148146,1.415395,-7.346376,-4.480698,3.110636,8.167004,-4.684412,8.190770,-1.146387,-5.391913,6.006186,0.046856,2.171079,-1.299986,-6.288591,-3.300740,-2.588711,0.398600,2.505790,6.464296,7.464589,7.339590,4.126969,-5.974293,4.722998,-5.558514,9.335656,3.397506,0.963797,5.411748,3.581089,5.827131,-6.991389,-3.864087,-6.969871,-5.176860,2.275664,-8.198850,-9.349304,-0.216875,0.436952,2.662797,-6.240805,-6.925280,-9.519572,0.358660,1.779173,7.179067,3.011351,-2.299634,-8.084171,4.507036,-2.398978,-4.755668,-7.178601,-5.760221,8.542277,2.795678,-4.657752,9.658072,0.510448,-8.757111,5.306691,-2.293673,5.444104,8.039716,-8.821660,3.323186,-9.211528,1.804416,-1.776552,-1.949172,9.341008,1.912183,8.886676,8.740445,-4.508457,-5.191920,1.962072,-2.777061,7.699129,-1.563718,4.643752,-3.814794,2.651426,-5.060233,2.960961,3.357136,-4.355343,-6.030044,4.308025,3.170506,5.423058,-8.451395,-0.265396,9.599588,-6.874465,8.233421,-0.789299,0.257608,-0.058451,5.295689,-2.165369,-5.076447,-9.122227,3.321471,-4.135359,5.609657,-8.557022,7.337435,-3.609021,-2.207860,-8.119937,-6.105299,3.068440,2.825325,-4.863112,3.303462,8.409733,5.580227,-4.740220,-7.716686,5.113542,-9.674058,9.126702,4.066375,-5.645663,-5.662986,1.660395,5.617810,-7.764589,-2.564057,-6.317453,4.289327,-7.232712,3.977276,8.450918,6.683438,3.595994,-1.607367,9.449285,-2.479247,1.144649,8.291469,-4.361927,3.524588,1.197790,7.403521,7.710113,3.312292,9.951340,-5.986158,-4.600626,-8.990978,3.593555,-9.552131,-4.346984,5.063756,6.096619,-4.997344], dtype = "float32")#candidate|2783|(490,)|const|float32
call_2781 = relay.TupleGetItem(func_2505_call(relay.reshape(var_2782.astype('float64'), [1, 15, 6]), relay.reshape(const_2783.astype('float32'), [490,]), ), 0)
call_2784 = relay.TupleGetItem(func_2509_call(relay.reshape(var_2782.astype('float64'), [1, 15, 6]), relay.reshape(const_2783.astype('float32'), [490,]), ), 0)
output = relay.Tuple([call_2776,call_2781,var_2782,const_2783,])
output2 = relay.Tuple([call_2777,call_2784,var_2782,const_2783,])
func_2787 = relay.Function([var_2782,], output)
mod['func_2787'] = func_2787
mod = relay.transform.InferType()(mod)
mutated_mod['func_2787'] = func_2787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2788 = relay.var("var_2788", dtype = "float64", shape = (90,))#candidate|2788|(90,)|var|float64
func_2787_call = mutated_mod.get_global_var('func_2787')
call_2789 = func_2787_call(var_2788)
output = call_2789
func_2790 = relay.Function([var_2788], output)
mutated_mod['func_2790'] = func_2790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_2792 = relay.TupleGetItem(func_2583_call(), 0)
call_2793 = relay.TupleGetItem(func_2584_call(), 0)
output = call_2792
output2 = call_2793
func_2794 = relay.Function([], output)
mod['func_2794'] = func_2794
mod = relay.transform.InferType()(mod)
output = func_2794()
func_2795 = relay.Function([], output)
mutated_mod['func_2795'] = func_2795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_2867 = relay.TupleGetItem(func_2665_call(), 0)
call_2868 = relay.TupleGetItem(func_2667_call(), 0)
output = call_2867
output2 = call_2868
func_2874 = relay.Function([], output)
mod['func_2874'] = func_2874
mod = relay.transform.InferType()(mod)
mutated_mod['func_2874'] = func_2874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mutated_mod.get_global_var('func_2874')
call_2875 = func_2874_call()
output = call_2875
func_2876 = relay.Function([], output)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_2884 = relay.TupleGetItem(func_2665_call(), 0)
call_2885 = relay.TupleGetItem(func_2667_call(), 0)
const_2898 = relay.const([[[5.261099,0.270447,-8.306033,-9.930164,-1.221501,2.888572,0.572266,-8.005711,0.927452,-2.241787,-5.199718,2.859718,0.412812,-5.802796],[-1.802439,-2.460926,8.285180,-0.256732,-2.042482,7.846194,-9.114216,5.003587,-8.440892,-5.783112,7.409082,2.481759,7.486518,8.202163],[-9.980129,-6.547159,-9.333358,-9.573342,-0.216428,5.568272,4.626755,-7.093609,6.198013,-6.256800,2.856655,5.175684,6.346722,-4.698426],[5.124743,9.621401,5.963159,-2.265337,9.374649,1.521257,-3.399301,-7.730904,-2.290986,3.647544,-7.689373,9.508242,1.996101,-0.539224],[-9.236814,1.630430,0.147317,5.157115,-9.958380,-3.704588,2.062713,-2.603924,-9.810779,9.992860,8.564426,-2.723670,-2.998587,1.782530],[6.942762,0.290930,-5.362551,5.116386,5.828814,7.834635,4.052741,5.901813,8.688651,-5.071016,-2.373805,-6.117823,-6.180703,-2.940448],[9.184883,-2.070973,0.585374,-7.206092,-0.290615,0.760856,-3.425751,-3.528307,-6.097866,-5.088212,6.488535,6.552676,6.949978,1.867428],[4.538626,-4.017747,3.765003,9.959502,-2.487972,-4.367789,4.691615,3.745790,-8.147427,6.931086,5.183555,4.768488,-8.905549,4.629354],[-6.849895,-0.043887,-3.915059,-4.481939,0.703485,-0.974902,8.492921,7.391008,8.966201,1.526785,-0.284312,-5.970226,-4.878207,-6.800999]],[[3.827353,-3.438349,-8.381291,5.432160,-1.487692,-8.325567,1.111977,4.849590,0.266942,0.685334,1.255855,5.987414,-2.229757,-2.556937],[3.273945,4.415114,-2.784214,-9.693793,-4.190779,9.771966,-1.419895,6.856391,-7.078799,-6.038513,5.059336,-2.690955,-3.682437,-8.176142],[-5.416099,-0.573343,7.455305,-4.595671,4.375085,-1.303591,-3.768497,-0.790083,9.971039,-2.309092,9.012832,2.560521,-0.481227,1.841354],[7.707684,5.403429,-3.476983,2.074540,-6.411369,1.506531,8.595098,6.685680,7.121216,-2.353720,8.943673,7.129702,8.821370,8.424320],[-9.809879,5.889660,-6.349399,4.290226,-8.439831,-9.264934,-2.921230,-3.906986,7.848979,2.078003,-7.590800,9.104500,-5.302906,-1.500854],[-7.161250,-8.289862,-8.641300,-0.060628,-1.593120,-5.715478,0.952842,8.553506,-0.303529,4.559904,-7.401998,8.197930,-4.100439,-5.954432],[3.170658,-0.165535,1.524781,-2.300341,-7.658766,-0.320464,7.199179,2.142896,-0.646686,-8.795976,9.731545,-4.276419,6.028806,-4.656934],[9.372532,-0.713028,2.664642,-3.301651,8.149832,-7.265969,4.780854,6.478406,9.753666,7.031420,4.253003,9.429521,3.328246,-1.531448],[1.336755,-3.831992,-8.854407,5.957627,-3.902175,-1.089039,-4.391523,9.078259,0.568815,-6.252606,-5.009590,-0.716812,-5.406741,-4.287612]],[[-5.350380,-4.784615,3.197273,-2.567120,6.855756,3.341842,4.192427,-1.188725,-0.174443,9.464862,-8.140221,3.338045,-9.404052,-5.879790],[7.845491,-1.607405,-5.162315,6.903835,-8.040444,2.830477,1.662284,1.055512,-2.242382,-3.516632,9.060821,-4.330916,-7.345153,-7.093259],[-1.137201,4.739364,4.576918,1.669737,-7.667522,6.373096,-0.582386,-1.917887,6.850871,-6.094235,5.324292,3.198487,-7.742582,-9.563208],[0.171885,6.505771,-7.836210,5.258352,1.100348,6.410833,6.054445,-1.574103,4.389336,0.412770,-8.018625,-0.084510,-6.926791,-0.051354],[9.759259,8.058441,-7.465448,-6.339708,7.541150,-4.599681,-1.832118,-7.004555,1.704650,6.784147,-5.307513,6.071416,-0.067807,-2.871988],[6.915746,-7.979487,-2.637379,8.113437,-4.467912,2.069228,5.515730,-8.497591,7.076720,0.597967,9.064286,8.109458,4.599366,-9.665024],[-3.111779,5.017860,-9.155903,-6.066185,2.688902,0.243903,-3.278147,-9.640032,-0.664128,8.634666,1.757661,-1.975997,-2.999148,-8.075123],[1.284357,6.944245,-3.573275,4.428985,-8.254565,6.387554,-9.411398,-3.959145,9.669779,-3.731022,2.603149,3.005579,9.200288,-3.703893],[4.411001,4.250864,2.116814,-1.383318,8.307726,-0.125197,7.718444,-0.258583,-2.174510,-8.785265,1.581134,-8.407520,7.743334,1.549094]]], dtype = "float32")#candidate|2898|(3, 9, 14)|const|float32
bop_2899 = relay.equal(call_2884.astype('bool'), const_2898.astype('bool')) # shape=(3, 9, 14)
bop_2902 = relay.equal(call_2885.astype('bool'), const_2898.astype('bool')) # shape=(3, 9, 14)
output = bop_2899
output2 = bop_2902
func_2905 = relay.Function([], output)
mod['func_2905'] = func_2905
mod = relay.transform.InferType()(mod)
mutated_mod['func_2905'] = func_2905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2905_call = mutated_mod.get_global_var('func_2905')
call_2906 = func_2905_call()
output = call_2906
func_2907 = relay.Function([], output)
mutated_mod['func_2907'] = func_2907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2905_call = mod.get_global_var('func_2905')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_2910 = func_2905_call()
call_2911 = func_2905_call()
func_658_call = mod.get_global_var('func_658')
func_662_call = mutated_mod.get_global_var('func_662')
var_2928 = relay.var("var_2928", dtype = "float64", shape = (100,))#candidate|2928|(100,)|var|float64
var_2929 = relay.var("var_2929", dtype = "uint8", shape = (1960,))#candidate|2929|(1960,)|var|uint8
call_2927 = relay.TupleGetItem(func_658_call(relay.reshape(var_2928.astype('float64'), [5, 2, 10]), relay.reshape(var_2929.astype('uint8'), [1960,]), ), 2)
call_2930 = relay.TupleGetItem(func_662_call(relay.reshape(var_2928.astype('float64'), [5, 2, 10]), relay.reshape(var_2929.astype('uint8'), [1960,]), ), 2)
func_2787_call = mod.get_global_var('func_2787')
func_2790_call = mutated_mod.get_global_var('func_2790')
const_2937 = relay.const([5.847676,2.146701,2.065953,8.877559,-1.198226,7.809257,-2.233770,-1.545851,5.386674,8.835373,5.687879,-6.964315,-3.022676,-1.135691,7.941110,9.027008,6.377414,9.641340,-1.341079,9.571238,6.968423,5.358912,-5.320936,-1.711888,-2.281216,7.424960,0.277477,7.063786,6.102037,4.574066,-7.419493,6.814678,5.274750,-1.609262,4.250242,7.771155,-0.458677,7.476569,-9.252748,-7.787223,4.488006,-4.908454,-3.583027,7.362598,2.289741,-6.656278,3.297754,-2.558626,-9.272348,-8.878807,-7.143606,-7.959366,-6.481391,5.762819,4.797482,-9.749207,3.434510,6.844893,-9.203925,5.004384,-2.036394,1.967087,9.689247,-9.746402,9.247721,5.039685,-1.282783,-2.788458,5.747827,-4.418741,-4.694007,-4.570356,0.471077,3.768948,-9.365762,-4.373132,-5.762914,-1.949939,1.337609,-6.057042,-4.616869,-1.631563,7.872553,5.678850,-5.100834,-6.911437,-4.092409,-0.526545,-7.383870,0.740823], dtype = "float64")#candidate|2937|(90,)|const|float64
call_2936 = relay.TupleGetItem(func_2787_call(relay.reshape(const_2937.astype('float64'), [90,])), 2)
call_2938 = relay.TupleGetItem(func_2790_call(relay.reshape(const_2937.astype('float64'), [90,])), 2)
uop_2942 = relay.sqrt(var_2929.astype('float32')) # shape=(1960,)
output = relay.Tuple([call_2910,call_2927,var_2928,call_2936,const_2937,uop_2942,])
output2 = relay.Tuple([call_2911,call_2930,var_2928,call_2938,const_2937,uop_2942,])
func_2947 = relay.Function([var_2928,var_2929,], output)
mod['func_2947'] = func_2947
mod = relay.transform.InferType()(mod)
var_2948 = relay.var("var_2948", dtype = "float64", shape = (100,))#candidate|2948|(100,)|var|float64
var_2949 = relay.var("var_2949", dtype = "uint8", shape = (1960,))#candidate|2949|(1960,)|var|uint8
output = func_2947(var_2948,var_2949,)
func_2950 = relay.Function([var_2948,var_2949,], output)
mutated_mod['func_2950'] = func_2950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_2978 = relay.TupleGetItem(func_2665_call(), 0)
call_2979 = relay.TupleGetItem(func_2667_call(), 0)
output = relay.Tuple([call_2978,])
output2 = relay.Tuple([call_2979,])
func_2980 = relay.Function([], output)
mod['func_2980'] = func_2980
mod = relay.transform.InferType()(mod)
output = func_2980()
func_2981 = relay.Function([], output)
mutated_mod['func_2981'] = func_2981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_3004 = relay.TupleGetItem(func_2665_call(), 0)
call_3005 = relay.TupleGetItem(func_2667_call(), 0)
uop_3008 = relay.log2(call_3004.astype('float32')) # shape=(3, 9, 1)
uop_3010 = relay.log2(call_3005.astype('float32')) # shape=(3, 9, 1)
var_3016 = relay.var("var_3016", dtype = "float32", shape = (3, 9, 8))#candidate|3016|(3, 9, 8)|var|float32
bop_3017 = relay.minimum(uop_3008.astype('float32'), var_3016.astype('float32')) # shape=(3, 9, 8)
bop_3020 = relay.minimum(uop_3010.astype('float32'), var_3016.astype('float32')) # shape=(3, 9, 8)
output = relay.Tuple([bop_3017,])
output2 = relay.Tuple([bop_3020,])
func_3023 = relay.Function([var_3016,], output)
mod['func_3023'] = func_3023
mod = relay.transform.InferType()(mod)
var_3024 = relay.var("var_3024", dtype = "float32", shape = (3, 9, 8))#candidate|3024|(3, 9, 8)|var|float32
output = func_3023(var_3024)
func_3025 = relay.Function([var_3024], output)
mutated_mod['func_3025'] = func_3025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mod.get_global_var('func_2980')
func_2981_call = mutated_mod.get_global_var('func_2981')
call_3032 = relay.TupleGetItem(func_2980_call(), 0)
call_3033 = relay.TupleGetItem(func_2981_call(), 0)
output = call_3032
output2 = call_3033
func_3034 = relay.Function([], output)
mod['func_3034'] = func_3034
mod = relay.transform.InferType()(mod)
output = func_3034()
func_3035 = relay.Function([], output)
mutated_mod['func_3035'] = func_3035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2905_call = mod.get_global_var('func_2905')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_3161 = func_2905_call()
call_3162 = func_2905_call()
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
const_3179 = relay.const([-8.573298,-4.045457,1.592128,-1.896563,-1.853367,2.055634,-4.426802,-7.383446,8.811459,-7.002354,-3.678735,-8.425205,8.421141,8.754994,-5.106088,-8.223950,1.230433,8.692570,3.083737,4.311662,0.318443,3.558197,2.835972,-1.743582,-6.874367,3.233786,-9.660647,3.488638,7.960654,-6.552549,8.460362,-8.687265,-0.745982,-3.954792,-5.778869,5.779267,-1.840240,9.051311,-9.803182,-6.488856,6.358525,-6.037872,7.791904,6.426339,-0.850879,8.485192,-2.180856,-8.545902,6.364642,0.680952,9.210713,1.913865,6.773323,6.414843,-7.835543,-5.831627,8.005002,-3.999905,5.985468,-0.475466,2.820169,2.981472,5.484337,-2.297751,-7.321126,-2.605796,-7.372583,-6.348039,9.920078,-6.101193,3.768712,2.924120,6.637448,-9.310797,6.063787,-4.423986,-4.948944,8.962246,8.065733,-0.497597,5.294044,2.161359,2.481490,9.482518,-9.078961,-2.922160,-8.716432,-7.414623,4.507212,-3.799783,4.018438,-0.861947,1.335739,-6.136634,4.948870,-9.111424,9.341078,0.353227,3.439333,5.473344,-4.871137,-0.404358,5.869297,-9.818599,9.013127,-7.872107,9.745892,-4.605297,-2.458087,5.408431,3.682638,-1.302764,-4.802400,5.306606,-6.503517,4.446502,5.709386,3.530845,-2.145075,5.774187,8.435937,9.642657,-6.312352,0.441303,-2.741345,8.188932,-0.878531,-7.770359,3.661802,7.247805,8.518406,-2.583987,-6.553758,9.539551,9.325710,-3.994156,-4.127206,0.007007,2.058742,1.848833,1.923544,8.322636,-7.800029,-0.441926,-3.001732,0.811521,-0.505319,-1.266353,-3.446504,-5.756087,-5.351464,-1.319336,-4.394054,-3.045856,-6.135586,7.196477,-1.563084,9.907470,-5.917484,-0.222680,3.883764,-3.318496,8.632108,-6.068751,1.888078,3.040210,2.798369,-1.199041,4.731957,5.232842,7.239226,8.787131,-9.009136,-2.460199,3.671736,3.662625,8.758985,-5.721946,-6.192675,-8.415365,7.098797,0.155772,8.947268,-5.969982,-1.256860,-2.277952,-1.065981,5.827689,-0.972678,-6.717573,-3.269177,0.141583,6.242664,-6.875356,-3.173232,4.599202,-5.718455,0.995998,4.881815,-7.609281,5.681213,2.325790,4.241602,-3.579253,-5.684201,0.536359,-9.350800,-2.998076,-5.659160,3.677210,7.235307,2.240261,-1.102395,4.937938,-4.022631,6.269082], dtype = "float32")#candidate|3179|(216,)|const|float32
call_3178 = relay.TupleGetItem(func_3023_call(relay.reshape(const_3179.astype('float32'), [3, 9, 8])), 0)
call_3180 = relay.TupleGetItem(func_3025_call(relay.reshape(const_3179.astype('float32'), [3, 9, 8])), 0)
uop_3184 = relay.cos(call_3178.astype('float32')) # shape=(3, 9, 8)
uop_3186 = relay.cos(call_3180.astype('float32')) # shape=(3, 9, 8)
output = relay.Tuple([call_3161,const_3179,uop_3184,])
output2 = relay.Tuple([call_3162,const_3179,uop_3186,])
func_3187 = relay.Function([], output)
mod['func_3187'] = func_3187
mod = relay.transform.InferType()(mod)
mutated_mod['func_3187'] = func_3187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3187_call = mutated_mod.get_global_var('func_3187')
call_3188 = func_3187_call()
output = call_3188
func_3189 = relay.Function([], output)
mutated_mod['func_3189'] = func_3189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3205 = relay.var("var_3205", dtype = "float64", shape = ())#candidate|3205|()|var|float64
var_3206 = relay.var("var_3206", dtype = "float64", shape = (10, 7, 13))#candidate|3206|(10, 7, 13)|var|float64
bop_3207 = relay.floor_mod(var_3205.astype('float64'), var_3206.astype('float64')) # shape=(10, 7, 13)
output = relay.Tuple([bop_3207,])
output2 = relay.Tuple([bop_3207,])
func_3227 = relay.Function([var_3205,var_3206,], output)
mod['func_3227'] = func_3227
mod = relay.transform.InferType()(mod)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3227_call = mutated_mod.get_global_var('func_3227')
var_3229 = relay.var("var_3229", dtype = "float64", shape = ())#candidate|3229|()|var|float64
var_3230 = relay.var("var_3230", dtype = "float64", shape = (10, 7, 13))#candidate|3230|(10, 7, 13)|var|float64
call_3228 = func_3227_call(var_3229,var_3230,)
output = call_3228
func_3231 = relay.Function([var_3229,var_3230,], output)
mutated_mod['func_3231'] = func_3231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_3251 = relay.TupleGetItem(func_2665_call(), 0)
call_3252 = relay.TupleGetItem(func_2667_call(), 0)
uop_3253 = relay.sin(call_3251.astype('float64')) # shape=(3, 9, 1)
uop_3255 = relay.sin(call_3252.astype('float64')) # shape=(3, 9, 1)
output = relay.Tuple([uop_3253,])
output2 = relay.Tuple([uop_3255,])
func_3264 = relay.Function([], output)
mod['func_3264'] = func_3264
mod = relay.transform.InferType()(mod)
mutated_mod['func_3264'] = func_3264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3264_call = mutated_mod.get_global_var('func_3264')
call_3265 = func_3264_call()
output = call_3265
func_3266 = relay.Function([], output)
mutated_mod['func_3266'] = func_3266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_3282 = func_3034_call()
call_3283 = func_3034_call()
output = call_3282
output2 = call_3283
func_3284 = relay.Function([], output)
mod['func_3284'] = func_3284
mod = relay.transform.InferType()(mod)
mutated_mod['func_3284'] = func_3284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mutated_mod.get_global_var('func_3284')
call_3285 = func_3284_call()
output = call_3285
func_3286 = relay.Function([], output)
mutated_mod['func_3286'] = func_3286
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3292 = relay.var("var_3292", dtype = "int8", shape = (12, 3, 7))#candidate|3292|(12, 3, 7)|var|int8
const_3293 = relay.const([[[-5,-7,6,-7,5,-7,8],[-3,2,4,-1,-6,5,3],[-9,7,4,5,3,10,3]],[[-1,7,1,1,9,10,-6],[-7,-8,-10,2,-8,5,8],[1,3,4,7,1,-1,-3]],[[-10,-6,8,3,7,-3,2],[-8,3,2,5,-6,-1,2],[9,-5,-4,4,-4,-1,2]],[[-8,2,-5,-7,-1,-4,5],[-1,-1,4,-9,-6,-2,10],[3,-7,-8,-7,6,-9,4]],[[-1,1,8,4,8,10,-6],[6,6,-10,10,-4,1,9],[-4,-5,2,10,-8,3,8]],[[3,8,2,1,-6,9,6],[-9,-10,-7,-9,1,-2,4],[6,-9,-7,-10,-2,10,10]],[[8,-9,-2,-10,-4,-10,8],[3,-5,5,-9,2,9,10],[4,1,7,-8,9,-8,9]],[[-7,7,-1,8,-8,-6,6],[-6,7,8,1,7,4,9],[10,-7,-7,6,7,-3,3]],[[-7,7,9,3,-3,3,-4],[-10,1,3,7,-4,-9,1],[8,-3,6,8,7,3,8]],[[2,6,-6,-1,7,-10,-5],[2,3,1,-6,-10,-4,-8],[7,-4,-7,-10,-7,2,1]],[[5,-1,1,8,1,-2,-8],[8,-3,1,3,-10,-1,-5],[3,6,-1,4,2,7,7]],[[4,6,-3,-6,-10,4,-3],[-7,7,6,7,-2,-1,-4],[-10,8,8,6,4,-6,1]]], dtype = "int8")#candidate|3293|(12, 3, 7)|const|int8
bop_3294 = relay.not_equal(var_3292.astype('bool'), relay.reshape(const_3293.astype('bool'), relay.shape_of(var_3292))) # shape=(12, 3, 7)
output = bop_3294
output2 = bop_3294
func_3297 = relay.Function([var_3292,], output)
mod['func_3297'] = func_3297
mod = relay.transform.InferType()(mod)
var_3298 = relay.var("var_3298", dtype = "int8", shape = (12, 3, 7))#candidate|3298|(12, 3, 7)|var|int8
output = func_3297(var_3298)
func_3299 = relay.Function([var_3298], output)
mutated_mod['func_3299'] = func_3299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_3341 = relay.TupleGetItem(func_2665_call(), 0)
call_3342 = relay.TupleGetItem(func_2667_call(), 0)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
const_3353 = relay.const([-9.829502,1.482986,4.598983,7.721020,-5.150699,2.827418,-7.908037,7.527216,8.949559,-7.427806,-1.576243,4.486189,3.900492,6.512945,5.436500,-1.883450,-3.368224,-8.593299,0.348426,4.595674,1.541544,-7.194788,-6.166328,3.783688,-5.733137,5.916495,-4.052759,1.984971,-7.228330,-3.751054,5.498911,4.452779,-8.607247,-2.638013,-4.270232,7.399595,-8.533693,1.763858,1.289689,-4.506999,-2.894705,-4.907381,-0.548338,-2.665220,4.365072,-1.929989,1.022111,-0.768334,2.753263,8.018861,-4.524808,6.242036,-7.895164,8.592605,5.905651,2.372982,8.712455,8.387587,7.137941,-1.663811,-7.908727,-1.909275,2.215449,-1.616782,3.905131,-1.083768,-4.805228,-5.615724,-6.804330,0.590974,-7.299952,0.318574,-2.046731,4.777902,7.175830,-7.962958,4.476011,4.243166,4.814262,4.923720,-1.013752,-2.080532,-3.915357,7.297213,-7.759936,-2.819056,-1.942064,-0.218004,-2.210440,-9.749197,-0.295277,-9.913871,9.042932,-6.896991,9.602530,0.171858,2.077974,-6.000030,7.005987,-3.013564,-2.424256,-3.849067,-3.252546,-2.663852,-6.900165,-1.320919,3.332520,-3.317642,5.691270,-7.414178,1.164931,-5.662253,5.327328,-5.358442,-8.064068,2.931320,1.738540,2.374290,-7.543670,5.341034,8.075684,6.444216,-6.055637,3.883160,-9.432759,-7.283541,-0.302845,-8.490608,7.513606,-6.839482,8.793308,6.864714,8.123690,8.155078,-5.924235,-4.939220,-9.639680,-7.512247,-8.066802,-9.601977,8.286393,-5.331519,2.076216,-9.664631,8.554867,2.494580,-3.469613,8.690662,3.754260,5.033397,4.503031,0.861946,-2.453855,-3.535601,-9.416891,4.506050,0.561366,9.787506,7.602295,-4.640105,-1.864637,8.300125,-9.160215,-4.193222,2.472107,1.789782,8.797894,4.326690,-8.606987,-4.714352,-3.956115,0.621233,4.287164,6.767708,-7.275304,3.554642,3.438584,9.195466,-2.753668,3.466268,7.678084,-3.756161,-6.069341,-4.233090,-3.097229,8.204923,7.201738,-3.511717,2.739270,9.321264,3.315650,-7.733376,5.143605,-6.951689,3.933079,-5.840878,-1.898201,4.061011,-5.956838,-2.990976,9.027976,4.590079,-0.391768,3.502290,7.231421,3.083949,-5.857634,5.608886,8.389064,9.219502,-4.820927,8.772365,-4.601129,8.257904,3.797938,8.354969,1.965128,6.966425,3.655376,8.192025,9.961206,0.406406,-2.611659,5.996934,0.875770,-0.112646,-8.497426,-5.487581,-7.442978,9.605687,5.255998,-8.062346,-5.761195,-5.076794,8.798034,-4.780136,-9.602114,-5.613547,8.760302,-8.087117,-8.250374,-8.877918,4.519398,0.307470,-2.447275,4.785075,-8.667868,-0.869426,7.892827,-5.172688,-9.395464,9.700840,-4.359759,5.108059,5.312222,-4.515155,-0.566264,3.508599,-9.024305,2.499915,0.752329,-2.030244,2.974165,-3.556104,-9.539255,0.903003,-4.680819,1.163446,-0.740333,-0.081362,2.949962,7.677758,3.704093,1.481116,9.951537,-0.605513,9.531856,-4.236581,7.011186,7.806855,6.747049,-0.492715,0.974456,7.010982,-5.834796,6.856993,-5.356072,3.013690,3.724643,7.982847,5.027699,-7.097568,2.201738,3.148189,4.459401,-1.225818,5.573884,-0.227846,-3.559784,-1.175278,5.630220,-1.040901,-3.992669,5.881513,-2.621210,6.657473,-5.486488,-9.730690,-7.563003,-0.802379,-9.762041,0.340362,7.739281,-5.730072,9.097906,-8.071902,1.870358,-1.447726,-1.030191,4.825772,4.042069,3.898590,-5.872585,7.261792,6.636334,7.028442,-6.312766,-0.174254,-5.357821,7.068916,3.742711,3.833715,0.204378,2.804167,1.609559,-7.007711,2.272866,5.740565,-6.773457,-3.340851,-4.523937,3.670456,-7.464055,8.799679,3.090279,-2.995829,-6.937553,0.932502,-3.537153,-8.149915,6.273488,-6.872481,-9.572739,8.349008,-7.586755,-0.665381,9.776020,4.218334,0.274694,-0.428482,9.616406,-0.516029,-8.502228,5.605745,-3.396352,5.348525,0.978163,-9.848294,0.646252,-2.962465,2.381349,-6.427426,-0.435527,4.045472,-3.581687,-3.198152,-2.962557,-5.634140,-4.554019,5.663180,1.056326,2.509324,-6.564790,-6.222828,4.905658,2.275461,3.637840,9.422187,3.787862,-0.340487,-1.049925,-4.728550,3.168966,-3.147071,-1.840863,-2.939489,-6.835986,-7.418913,5.638110,-7.575757,6.094296,5.545287,6.308969,8.108351,6.959905,0.303562,-5.164844,4.282396,-5.275915,-2.846668,8.702618,-4.662199,-4.301750,1.331203,8.134257,-8.425810,6.996923,0.881213,-0.077489,-8.820673,-7.005143,4.372601,8.186170,-7.995296,-9.219963,-8.185152,2.174048,2.894345,-0.317896,8.755921,-5.434577,-5.533601,-3.116807,4.698209,-5.041927,-7.315096,8.519492,-0.094717,-9.516898,-7.300198,0.604028,2.000266,0.237741,-9.116196,2.314194,3.217250,4.840636,0.132251,2.073182,-5.349386,-7.107220,1.113606,-6.626720,-8.360288,-1.228010,-1.515213,-5.398770,0.495074,-4.468834,5.561990,0.580718,-0.469114,-6.506945,-2.878861,-1.936089,-2.516275,-4.820565,-5.195597,7.788869,2.324905,4.355549,6.931484,7.827653,0.508372,-5.098586,9.577300,0.323546,-7.125251,-5.929360,8.685338,4.076714,4.736354,7.420601,-7.380609,4.349242,9.147198,9.189528,-8.618919,7.847259,0.294129,-0.587917,9.945466,-0.109151,3.619880,5.638125,5.987913,-7.438149,-7.879651,-2.701969,-9.696009,-5.951106,-9.477379,-8.474368,3.472110,-1.964236,5.532862,5.045250,-1.211794,-8.927157,-7.262226,-8.499927,-2.206162,2.265172,7.564674,-0.450819,4.306128,7.908748,-5.619166,-9.985901,5.755866,-4.751798,5.917119,5.393797,8.723592,4.109167,6.437266,6.655272,1.553248,-1.960298,-4.266920,-8.196478,-4.900357,7.711012,-9.340907,-4.848969,-1.902741,-5.382846,-7.318316,0.398519,-1.007068,-9.510476,1.458942,0.207361,-8.431670,0.112338,-7.770816,-3.148651,6.274186,-9.094370,8.853282,5.038339,9.158413,5.432755,2.546365,-0.162234,0.544280,-6.895821,-7.363322,9.913352,9.989967,-6.649655,2.257365,-2.440760,-0.180453,-0.498775,0.335313,-8.979414,8.397914,0.620919,-4.385601,-8.321676,-3.746657,-6.562261,0.469914,1.705767,-2.548460,-9.122139,-7.236005,-7.978065,4.068879,-6.119960,-4.117953,-3.142743,-6.402287,4.466340,3.624441,-0.563828,-4.337489,-0.841418,5.022989,-3.321129,0.781043,4.499033,-7.537003,8.285640,-6.398064,-0.721311,-3.209365,-6.885437,-7.667890,6.526676,-0.694919,6.858655,4.597119,-7.584021,1.460870,-7.354549,1.773281,-6.915037,-1.688566,-2.040744,5.994165,0.475697,3.957168,-4.750255,2.708349,0.334508,-3.938650,-9.547288,-9.985482,-1.381082,-6.227262,5.058017,-7.830397,4.856312,3.657083,3.892173,-3.998572,-8.384179,-7.906910,-7.643687,-5.307668,0.381424,-0.723361,-6.632312,-9.426139,6.425459,-6.936203,9.715362,-5.372569,7.928516,-6.328969,8.186672,7.865715,-1.423070,-4.408699,-2.126703,-7.374159,5.830394,5.979036,9.089495,-1.967825,-2.600450,1.331630,5.715827,-4.274339,7.583950,0.066717,-3.446095,-5.446807,3.720746,5.045214,-0.018364,5.031164,-7.397298,2.207109,3.113814,-4.649506,-9.100178,5.058314,-6.429997,-9.876768,-4.339805,-8.325963,5.442739,0.476817,0.901547,-6.353603,-3.427284,-2.650560,-3.853235,-7.703875,6.304259,-5.601113,5.225185,-9.983510,7.688622,5.209988,-8.876411,-8.827560,3.324898,-9.557059,-6.075597,-2.221839,3.332327,-2.811279,-4.295743,4.556727,1.355590,-6.956552,1.164319,-0.448715,7.526308,-3.675482,7.732223,9.657557,-5.482055,-9.237082,-5.891884,8.015575,9.494601,-7.516463,-7.704339,7.158122,6.884172,-7.126361,-6.456755,8.024935,6.819672,-7.196385], dtype = "float64")#candidate|3353|(720,)|const|float64
call_3352 = relay.TupleGetItem(func_1762_call(relay.reshape(const_3353.astype('float64'), [3, 16, 15])), 0)
call_3354 = relay.TupleGetItem(func_1764_call(relay.reshape(const_3353.astype('float64'), [3, 16, 15])), 0)
func_2980_call = mod.get_global_var('func_2980')
func_2981_call = mutated_mod.get_global_var('func_2981')
call_3355 = relay.TupleGetItem(func_2980_call(), 0)
call_3356 = relay.TupleGetItem(func_2981_call(), 0)
bop_3359 = relay.logical_and(call_3355.astype('bool'), relay.reshape(call_3341.astype('bool'), relay.shape_of(call_3355))) # shape=(3, 9, 1)
bop_3362 = relay.logical_and(call_3356.astype('bool'), relay.reshape(call_3342.astype('bool'), relay.shape_of(call_3356))) # shape=(3, 9, 1)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
const_3365 = relay.const([[8],[6],[-5],[1],[-1],[1],[1],[-1],[-8],[9],[6],[4],[4],[5],[-5],[10],[-3],[3],[-1],[4],[-7],[8],[-2],[1],[9],[-10],[2],[6],[-9],[-9],[5],[6],[-10],[-8],[3],[-10],[8],[10],[-6],[-10],[3],[-9],[-5],[-10],[5],[-7],[-9],[-8],[1],[-9],[-9],[-7],[-7],[-9],[-10],[-10],[-10],[-7],[-6],[-9],[6],[-1],[8],[5],[7],[-6],[-3],[5],[9],[-4],[4],[1],[5],[-1],[5],[-1],[-6],[8],[-4],[-5],[-5],[1],[-1],[-9],[-10],[-9],[-7],[10],[-6],[-4],[-9],[-4],[9],[-10],[2],[-6],[-4],[6],[-3],[8],[-8],[-10],[5],[10],[1],[6],[6],[6],[9],[8],[9],[10],[-3],[1],[-5],[-9],[-5],[-9],[-1],[6],[2],[-3],[-10],[-6],[4],[2],[-10],[-1],[3],[8],[2],[-1],[8],[-9],[-1],[-2],[-7],[-3],[-5],[7],[5],[-7],[4],[-9],[-9],[-4],[-6],[-9],[-7],[5],[5],[2],[2],[10],[6],[-1],[7],[-9],[3],[7],[-5],[-4],[-6],[-5],[-1],[-2],[8],[10],[-9],[1],[6],[-10],[7],[3],[7],[3],[-2],[7],[8],[-10],[4],[9],[6],[-4],[-10],[2],[-5],[10],[-4],[-4],[-4],[7],[2],[6],[5],[2],[8],[9],[-1],[-10],[-8],[-8],[7],[-6],[2],[3],[5],[-3],[-1],[-8],[5],[-4],[-1],[8],[8],[4],[2],[-10],[9],[-9],[-4],[-8],[10],[7],[-10],[-8],[4],[7],[-8],[9],[5],[-3],[-3],[-6],[-9],[-5],[7],[3],[5],[-1],[-4],[10],[-4],[3],[-4],[-8],[-6],[-3],[-4],[-3],[-4],[-5],[10],[-10],[-7],[-9],[-3],[-8],[6],[9],[-6],[8],[-7],[-10],[10],[3],[10],[6],[-7],[6],[-1],[-2],[-6],[9],[2],[1],[-4],[9],[-9],[-4],[10],[4],[-7],[-1],[-9],[8],[-4],[4],[3],[-1],[3],[2],[-10],[-9],[-7],[2],[2],[9],[-8],[-6],[7],[-9],[-8],[-8],[-8],[5],[-10],[9],[7],[-1],[-2],[-4],[-8],[-6],[3],[-5],[9],[9],[7],[-8],[6],[-6],[-2],[6],[-2],[-6],[9],[1],[-4],[6],[-10],[-8],[-5],[6],[-6],[-8],[-8],[7],[-1],[9],[-10],[-10],[-6],[-8],[7],[-10],[5],[5],[6],[-5],[-8],[3],[9],[-5],[-4],[4],[1],[3],[-4],[-10],[5],[9],[9],[-1],[7],[-9],[8],[10],[3],[8],[10],[-9],[5],[-8],[7],[9],[9],[3],[1],[-7],[9],[-3],[8],[-4],[9],[-6],[3],[1],[1],[6],[-9],[-9],[4],[10],[-5],[6],[-1],[-1],[-4],[-9],[9],[3],[-5],[10],[6],[-4],[-3],[-5],[5],[4],[2],[-4],[-1],[-3],[-1],[10],[-8],[-2],[9],[-8],[9],[10],[-5],[1],[-10],[-1],[-5],[5],[-3],[-2],[1],[-4],[5],[3],[-9],[-9],[-3],[2],[-1],[1],[8],[-4],[-9],[2],[7],[6],[-6],[-6],[-8],[6],[-10],[-8],[3],[-4],[-5],[-8],[4],[-9],[-10],[5],[-2],[5],[3],[8],[-10],[1],[-7],[-4],[2],[-7],[-10],[-1],[4],[9],[8],[-1],[-5],[8],[-8],[9],[1],[8],[2],[-10],[-10],[9],[-9],[-4],[10],[-9],[7],[9],[-6],[2],[-5],[10],[3],[-6],[1],[-9],[-3],[1],[-1],[-9],[10],[9],[7],[1],[-7],[5],[-6],[-10],[4],[3],[-3],[6],[-3],[2],[-2],[4],[6],[-1],[-3],[6],[5],[-4],[8],[-9],[-1],[10],[7],[2],[5],[-5],[-2],[10],[2],[2],[-4],[-7],[-8],[2],[-6],[-10],[5],[3],[-8],[-3],[8],[9],[-7],[-9],[-8],[6],[7],[-3],[-6],[-3],[-7],[-1],[3],[-6],[8],[1],[7],[5],[6],[-3],[-5],[8],[-2],[-9],[9],[-1],[4],[-9],[-8],[7],[4],[2],[-7],[5],[3],[10],[5],[-1],[3],[5],[1],[8],[-10],[10],[4],[3],[-5],[-1],[-6],[-8],[2],[-8],[-7],[6],[-9],[4],[7],[-3],[1],[-6],[-3],[4],[8],[2],[2],[2],[7],[-3],[-8],[-8],[9],[5],[4],[-4],[5],[9],[-3],[-8],[10],[2],[10],[-8],[-3],[-5],[9],[6],[-5],[-6],[10],[3],[4],[-5],[-9],[-5],[-3],[-1],[-10],[-3],[-1],[1],[-2],[-9],[-9],[6],[-7],[-9],[3],[7],[5],[10],[-8],[2],[-1],[2],[-3],[-3],[-2],[-4],[9],[4],[-10],[-6],[-7],[6],[-4],[9],[-9],[-3],[-7],[-6],[10],[7],[-4],[-6],[-2],[-1],[-3],[9],[2],[1],[4],[-10],[-2],[7],[8],[10],[-3],[-9],[-10],[3],[5],[-6],[3],[-10],[1],[-10],[3],[9],[-3],[-7],[-10],[-10],[-5],[-1],[3],[-7],[-8],[-1],[-8],[-5],[-4],[5],[-5],[7],[3],[-2],[10],[-5],[10],[-8],[-7],[-5],[7],[5],[9],[-6],[5],[2],[-8],[-1],[-10],[3],[2],[5],[-3],[4],[9],[7],[5],[3],[2],[-7],[-3],[-8],[-8],[3],[1],[-10],[-3],[4],[7],[7],[9],[-1],[-6],[8],[-4],[-6],[6],[9],[2],[-3],[-7],[5],[-7],[5],[8],[7],[-6],[2],[3],[-9],[-9],[-5],[8],[10],[-5],[2],[-6],[-1],[5],[-5],[9],[-8],[4],[-6],[-2],[-5],[7],[-5],[-5],[4],[7],[-1],[10],[-6],[-9],[-8],[4],[-3],[6],[7],[-4],[8],[-4],[8],[-7],[9],[-8],[-7],[-4],[5],[-3],[-4],[-9],[-5],[-6],[-2],[7],[-4],[2],[-8],[6],[-2],[-8],[7],[9],[5],[-5],[9],[6],[10],[8],[-6],[1],[-6],[4],[3],[-3],[-6],[-4],[-3],[5],[7],[7],[-7],[-1],[6],[-8],[-4],[2],[3],[6],[-8],[2],[10],[-7],[9],[10],[-5],[1],[1],[8],[1],[2],[4],[-7],[-2],[4],[2],[5],[10],[-4],[7],[6],[-3],[3],[-10],[1],[-4],[9],[9],[-4],[1],[-2],[-2],[4],[9],[4],[1],[8],[-8],[8],[-10],[1],[4],[-4],[8],[-3],[-6],[3],[-1],[3],[-4],[-6],[6],[1],[-4],[3],[-7],[-10],[4],[5],[3],[-2],[-4],[8],[-1],[-5],[-5],[-4],[-4],[-6],[3],[4],[4],[3],[9],[-10],[6],[1],[7],[3],[-10],[5],[-1],[8],[-3],[6],[6],[5],[6],[-7],[-4],[9],[-1],[9],[-2],[5],[3],[9],[10],[-1],[-4],[8],[7],[-9],[9],[-1],[-7],[4],[3],[-5],[6],[-8],[2],[4],[7],[-5],[-10],[-10],[-6],[1],[-8],[-10],[-3],[2],[-8],[2],[7],[-4],[7],[2],[-1],[4],[2],[10],[4],[-1],[6],[-5],[6],[4],[4],[-7],[-5],[-3],[8],[8],[-4],[1],[-8],[-2],[-4],[5],[6],[8],[9],[7],[7],[-6],[6],[-9],[-5],[-4],[-1],[5],[-7],[4],[-9],[3],[10],[1],[-3],[-5],[-4],[-5],[10],[-5],[-10],[4],[-5],[1],[-5],[7],[-5],[-1],[-10],[-4],[-1],[-3],[10],[5],[9],[5],[-10],[-1],[9],[1],[8],[-7],[-6],[7],[3],[9],[2],[8],[8],[-2],[-3],[6],[-9],[10],[-10],[1],[7],[-10],[8],[-9],[9],[-2],[-9],[-5],[-4],[-4],[5],[2],[-7],[-1],[3],[5],[-9],[5],[2],[-6],[-3],[4],[-1],[-9],[-7],[3],[4],[-7],[2],[-8],[-9],[7],[9],[3],[9],[4],[2],[-3],[8],[-9],[6],[-8],[-1],[-1],[-2],[-8],[-3],[-9],[8],[-6],[3],[-8],[-8],[9],[7],[-3],[-2],[-3],[-6],[6],[5],[-9],[10],[3],[-9],[-4],[8],[9],[-6],[-4],[-8],[6],[-7],[-5],[-3],[-1],[6],[9],[7],[3],[-10],[10],[2],[4],[8],[1],[-6],[-8],[-5],[-8],[-5],[-9],[8],[-6],[-1],[-10],[-9],[-8],[10],[6],[-3],[-5],[-3],[-4],[7],[9],[8],[4],[9],[2],[10],[-10],[2],[7],[4],[-9],[-2],[8],[9],[-6],[-1],[-10],[-4],[-6],[6],[-2],[7],[5],[-1],[-1],[-10],[4],[9],[9],[-1],[6],[-9],[-10],[3],[-7],[-3],[5],[-2],[1],[-5],[-8],[7],[6],[3],[3],[10],[5],[-8],[-4],[2],[-9],[-2],[-9],[7],[8],[4],[-8],[10],[-4],[9],[7],[9],[-1],[-7],[-9],[8],[-6],[-6],[-7],[-4],[-6],[2],[9],[8],[-3],[3],[8],[-1],[10],[-4],[1],[-8],[-4],[-1],[-9],[5],[5],[-9],[-9],[10],[-8],[3],[-8],[5],[-6],[-8],[4],[-3],[2],[1],[-1],[7],[6],[-2],[7],[-7],[8],[10],[-6],[-5],[-5],[9],[-3],[-8],[-6],[-8],[-7],[-5],[-3],[6],[-1],[-4],[6],[-7],[1],[5],[5],[7],[-4],[-2],[-8],[-9],[7],[6],[1],[9],[-8],[2],[-1],[4],[-1],[1],[-5],[-5],[-5],[-1],[-9],[-8],[2],[-6],[7],[-8],[-2],[-6],[-1],[6],[3],[9],[6],[-7],[5],[6],[6],[-2],[-7],[5],[6],[10],[4],[-3],[-8],[7],[6],[9],[4],[-5],[-4],[2],[-4],[-10],[3],[-6],[9],[-8],[-1],[7],[10],[5],[4],[8],[-10],[4],[3],[-5],[10],[-9],[-3],[3],[10],[-6],[-2],[4],[-9],[-8],[3],[-10],[8],[-8],[-9],[7],[8],[-4],[10],[4],[9],[-2],[-3],[5],[-5],[4],[8],[2],[7],[6],[-5],[-9],[6],[6],[1],[5],[-8],[-2],[-5],[-4],[9],[-10],[-3],[2],[6],[-7],[-10],[6],[10],[-1],[3],[-2],[5],[3],[-1],[2],[-4],[-9],[-7],[-6],[9],[-4],[2],[7],[3],[4],[6],[-7],[9],[2],[-7],[-4],[-9],[8],[1],[8],[9],[-1],[3],[2],[7],[-4],[-9],[-5],[10],[-2],[4],[-8],[6],[8],[1],[-1],[2],[-9],[1],[-3],[-7],[-9],[-7],[-9],[-4],[4],[7],[-10],[9],[4],[7],[-8],[7],[-4],[-1],[7],[5],[6],[-2],[8],[6],[-5],[-5],[7],[6],[2],[7],[2],[1],[4],[-4],[-2],[9],[-8],[-3],[-9],[10],[3],[1],[-7],[-1],[8],[-1],[4],[8],[-6],[1],[1],[7],[10],[-8],[10],[-3],[1],[-3],[8],[-9],[2],[9],[-4],[5],[9],[-1],[5],[2],[8],[6],[-7],[-1],[2],[-9],[7],[-9],[10],[6],[6],[5],[9],[-8],[1],[-2],[1],[1],[7],[-10],[-5],[9],[7],[-3],[-7],[10],[-2],[1],[-10],[-6],[8],[-2],[-5],[8],[-4],[-1],[7],[2],[-2],[-2],[4],[4],[-6],[5],[-3],[-7],[-10],[1],[3],[-9],[10],[-9],[-2],[3],[-6],[4],[-7],[-3],[-3],[-9],[3],[7],[-8],[-9],[10],[1],[8],[6],[-10],[5],[-4],[-5],[-7],[-3],[1],[7],[1],[-7],[4],[1],[4],[3],[1],[5],[8],[9],[-10],[2],[7],[8],[-1],[-1],[-10],[-3],[-4],[6],[6],[3],[9],[-3],[7],[9],[-8],[-5],[-8],[2],[9],[-4],[-4],[3],[1],[8],[-9],[9],[9],[6],[-3],[5],[6],[8],[-4],[-5],[-6],[4],[-6],[-7],[-6],[-4],[-8],[-6],[-4],[4],[7],[-1],[-1],[9],[3],[-10],[5],[-8],[1],[-5],[2],[6],[4],[-8],[-2],[8],[-2],[-2],[-1],[-8],[-7],[3],[4],[-10],[-9],[-4],[8],[-3],[-1],[3],[-5],[-3],[-1],[10],[8],[-6],[10],[-6],[1],[9],[-4],[-4],[-4],[5],[10],[-9],[8],[-2],[8],[10],[-3],[2],[6],[-8],[-7],[8],[2],[4],[-9],[-3],[8],[3],[-7],[6],[8],[3],[4],[5],[-7],[-6],[9],[-6],[6],[-1],[10],[7],[8],[-5],[-7],[-10],[6],[-8],[-1],[10],[-5],[-2],[2],[9],[9],[-6],[-6],[6],[-3],[8],[-1],[6],[-4],[-10],[7],[-2],[-10],[-9],[4],[2],[-10],[2],[-3],[7],[-1],[-7],[5],[-2],[8],[-3],[3],[9],[2],[6],[8],[7],[8],[1],[10],[-7],[-4],[5],[-8],[8],[8],[4],[9],[-7],[-1],[-4],[10],[-6],[-5],[-10],[-4],[-5],[-1],[-8],[7],[8],[-9],[9],[4],[-8],[-8],[6],[6],[-8],[9],[-5],[7],[3],[-2],[9],[-1],[5],[9],[-8],[9],[-10],[8],[4],[-9],[6],[-10],[-5],[3],[-5],[1],[4],[-2],[1],[-2],[-6],[5],[-7],[5],[-1],[-2],[4],[-10],[-1],[7],[9],[1],[-9],[2],[-6],[-1],[5],[-2],[10],[-4],[2],[8],[9],[5],[2],[-5],[1],[4],[-1],[-1],[1],[3],[7],[8],[1],[-10],[7],[-10],[-7],[-6],[8],[-10],[7],[8],[8],[-9],[3],[-5],[-5],[10],[5],[10],[-8],[-8],[-3],[4],[4],[-10],[-7],[3],[2],[-6],[-1],[-7],[-6],[-4],[-9],[-10],[-5],[3],[-3],[-1],[2],[9],[2],[9],[-3],[-8],[8],[5],[-4],[-2],[3],[1],[-2],[-6],[-3],[3],[-8],[9],[6],[5],[4],[6],[-1],[-3],[-9],[-10],[-1],[-2],[7],[-10],[-7],[-10],[-7],[9],[8],[5],[-9],[2],[-1],[7],[-4],[-4],[-9],[-7],[-4],[-1]], dtype = "uint8")#candidate|3365|(1960, 1)|const|uint8
call_3364 = relay.TupleGetItem(func_125_call(relay.reshape(const_3365.astype('uint8'), [14, 10, 14]), relay.reshape(const_3365.astype('uint8'), [14, 10, 14]), ), 0)
call_3366 = relay.TupleGetItem(func_128_call(relay.reshape(const_3365.astype('uint8'), [14, 10, 14]), relay.reshape(const_3365.astype('uint8'), [14, 10, 14]), ), 0)
uop_3371 = relay.sinh(const_3365.astype('float64')) # shape=(1960, 1)
func_603_call = mod.get_global_var('func_603')
func_605_call = mutated_mod.get_global_var('func_605')
var_3377 = relay.var("var_3377", dtype = "float64", shape = (768,))#candidate|3377|(768,)|var|float64
call_3376 = func_603_call(relay.reshape(var_3377.astype('float64'), [8, 8, 12]))
call_3378 = func_603_call(relay.reshape(var_3377.astype('float64'), [8, 8, 12]))
bop_3388 = relay.multiply(uop_3371.astype('int8'), const_3353.astype('int8')) # shape=(1960, 720)
func_764_call = mod.get_global_var('func_764')
func_769_call = mutated_mod.get_global_var('func_769')
var_3392 = relay.var("var_3392", dtype = "float32", shape = (2, 48))#candidate|3392|(2, 48)|var|float32
var_3393 = relay.var("var_3393", dtype = "float32", shape = (490,))#candidate|3393|(490,)|var|float32
call_3391 = relay.TupleGetItem(func_764_call(relay.reshape(var_3392.astype('float32'), [2, 12, 4]), relay.reshape(var_3392.astype('uint64'), [2, 12, 4]), relay.reshape(var_3393.astype('float32'), [490,]), ), 1)
call_3394 = relay.TupleGetItem(func_769_call(relay.reshape(var_3392.astype('float32'), [2, 12, 4]), relay.reshape(var_3392.astype('uint64'), [2, 12, 4]), relay.reshape(var_3393.astype('float32'), [490,]), ), 1)
func_1143_call = mod.get_global_var('func_1143')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_3400 = relay.TupleGetItem(func_1143_call(relay.reshape(call_3391.astype('float32'), [1, 96]), relay.reshape(var_3393.astype('float32'), [1, 490]), ), 1)
call_3401 = relay.TupleGetItem(func_1146_call(relay.reshape(call_3391.astype('float32'), [1, 96]), relay.reshape(var_3393.astype('float32'), [1, 490]), ), 1)
func_3264_call = mod.get_global_var('func_3264')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_3402 = relay.TupleGetItem(func_3264_call(), 0)
call_3403 = relay.TupleGetItem(func_3266_call(), 0)
var_3404 = relay.var("var_3404", dtype = "float64", shape = (1960, 16))#candidate|3404|(1960, 16)|var|float64
bop_3405 = relay.logical_or(uop_3371.astype('bool'), var_3404.astype('bool')) # shape=(1960, 16)
bop_3413 = relay.bitwise_xor(const_3365.astype('int32'), const_3353.astype('int32')) # shape=(1960, 720)
uop_3418 = relay.sinh(bop_3388.astype('float32')) # shape=(1960, 720)
uop_3435 = relay.tan(bop_3388.astype('float32')) # shape=(1960, 720)
uop_3441 = relay.rsqrt(uop_3418.astype('float64')) # shape=(1960, 720)
output = relay.Tuple([call_3352,bop_3359,call_3364,call_3376,var_3377,call_3391,var_3392,var_3393,call_3400,call_3402,bop_3405,bop_3413,uop_3435,uop_3441,])
output2 = relay.Tuple([call_3354,bop_3362,call_3366,call_3378,var_3377,call_3394,var_3392,var_3393,call_3401,call_3403,bop_3405,bop_3413,uop_3435,uop_3441,])
func_3443 = relay.Function([var_3377,var_3392,var_3393,var_3404,], output)
mod['func_3443'] = func_3443
mod = relay.transform.InferType()(mod)
mutated_mod['func_3443'] = func_3443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3443_call = mutated_mod.get_global_var('func_3443')
var_3445 = relay.var("var_3445", dtype = "float64", shape = (768,))#candidate|3445|(768,)|var|float64
var_3446 = relay.var("var_3446", dtype = "float32", shape = (2, 48))#candidate|3446|(2, 48)|var|float32
var_3447 = relay.var("var_3447", dtype = "float32", shape = (490,))#candidate|3447|(490,)|var|float32
var_3448 = relay.var("var_3448", dtype = "float64", shape = (1960, 16))#candidate|3448|(1960, 16)|var|float64
call_3444 = func_3443_call(var_3445,var_3446,var_3447,var_3448,)
output = call_3444
func_3449 = relay.Function([var_3445,var_3446,var_3447,var_3448,], output)
mutated_mod['func_3449'] = func_3449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_3488 = func_2794_call()
call_3489 = func_2794_call()
output = relay.Tuple([call_3488,])
output2 = relay.Tuple([call_3489,])
func_3494 = relay.Function([], output)
mod['func_3494'] = func_3494
mod = relay.transform.InferType()(mod)
mutated_mod['func_3494'] = func_3494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mutated_mod.get_global_var('func_3494')
call_3495 = func_3494_call()
output = call_3495
func_3496 = relay.Function([], output)
mutated_mod['func_3496'] = func_3496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mod.get_global_var('func_2980')
func_2981_call = mutated_mod.get_global_var('func_2981')
call_3502 = relay.TupleGetItem(func_2980_call(), 0)
call_3503 = relay.TupleGetItem(func_2981_call(), 0)
uop_3513 = relay.acos(call_3502.astype('float64')) # shape=(3, 9, 1)
uop_3515 = relay.acos(call_3503.astype('float64')) # shape=(3, 9, 1)
bop_3529 = relay.left_shift(uop_3513.astype('uint32'), relay.reshape(call_3502.astype('uint32'), relay.shape_of(uop_3513))) # shape=(3, 9, 1)
bop_3532 = relay.left_shift(uop_3515.astype('uint32'), relay.reshape(call_3503.astype('uint32'), relay.shape_of(uop_3515))) # shape=(3, 9, 1)
output = bop_3529
output2 = bop_3532
func_3533 = relay.Function([], output)
mod['func_3533'] = func_3533
mod = relay.transform.InferType()(mod)
output = func_3533()
func_3534 = relay.Function([], output)
mutated_mod['func_3534'] = func_3534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_3555 = func_3034_call()
call_3556 = func_3034_call()
func_2980_call = mod.get_global_var('func_2980')
func_2981_call = mutated_mod.get_global_var('func_2981')
call_3559 = relay.TupleGetItem(func_2980_call(), 0)
call_3560 = relay.TupleGetItem(func_2981_call(), 0)
output = relay.Tuple([call_3555,call_3559,])
output2 = relay.Tuple([call_3556,call_3560,])
func_3565 = relay.Function([], output)
mod['func_3565'] = func_3565
mod = relay.transform.InferType()(mod)
output = func_3565()
func_3566 = relay.Function([], output)
mutated_mod['func_3566'] = func_3566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3187_call = mod.get_global_var('func_3187')
func_3189_call = mutated_mod.get_global_var('func_3189')
call_3573 = relay.TupleGetItem(func_3187_call(), 2)
call_3574 = relay.TupleGetItem(func_3189_call(), 2)
func_2066_call = mod.get_global_var('func_2066')
func_2070_call = mutated_mod.get_global_var('func_2070')
const_3584 = relay.const([[-10,2],[-9,2],[5,2],[8,5],[-8,-6],[-3,3],[-7,-8],[-6,-8],[1,4],[-8,-7],[-10,8],[-10,3],[4,-8]], dtype = "uint8")#candidate|3584|(13, 2)|const|uint8
var_3585 = relay.var("var_3585", dtype = "uint8", shape = (234,))#candidate|3585|(234,)|var|uint8
call_3583 = relay.TupleGetItem(func_2066_call(relay.reshape(const_3584.astype('uint8'), [13, 2, 1]), relay.reshape(var_3585.astype('uint8'), [13, 2, 9]), ), 0)
call_3586 = relay.TupleGetItem(func_2070_call(relay.reshape(const_3584.astype('uint8'), [13, 2, 1]), relay.reshape(var_3585.astype('uint8'), [13, 2, 9]), ), 0)
output = relay.Tuple([call_3573,call_3583,const_3584,var_3585,])
output2 = relay.Tuple([call_3574,call_3586,const_3584,var_3585,])
func_3589 = relay.Function([var_3585,], output)
mod['func_3589'] = func_3589
mod = relay.transform.InferType()(mod)
var_3590 = relay.var("var_3590", dtype = "uint8", shape = (234,))#candidate|3590|(234,)|var|uint8
output = func_3589(var_3590)
func_3591 = relay.Function([var_3590], output)
mutated_mod['func_3591'] = func_3591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3610 = relay.var("var_3610", dtype = "int16", shape = (11, 12, 10))#candidate|3610|(11, 12, 10)|var|int16
var_3611 = relay.var("var_3611", dtype = "int16", shape = (11, 12, 10))#candidate|3611|(11, 12, 10)|var|int16
bop_3612 = relay.greater_equal(var_3610.astype('bool'), relay.reshape(var_3611.astype('bool'), relay.shape_of(var_3610))) # shape=(11, 12, 10)
func_1447_call = mod.get_global_var('func_1447')
func_1449_call = mutated_mod.get_global_var('func_1449')
var_3616 = relay.var("var_3616", dtype = "float64", shape = (77, 10))#candidate|3616|(77, 10)|var|float64
call_3615 = relay.TupleGetItem(func_1447_call(relay.reshape(var_3616.astype('float64'), [5, 11, 14])), 1)
call_3617 = relay.TupleGetItem(func_1449_call(relay.reshape(var_3616.astype('float64'), [5, 11, 14])), 1)
uop_3620 = relay.tan(call_3615.astype('float32')) # shape=(14, 10, 14)
uop_3622 = relay.tan(call_3617.astype('float32')) # shape=(14, 10, 14)
uop_3633 = relay.sqrt(uop_3620.astype('float64')) # shape=(14, 10, 14)
uop_3635 = relay.sqrt(uop_3622.astype('float64')) # shape=(14, 10, 14)
const_3639 = relay.const([[[7.917573,-5.251293,-9.172094,-8.643939,-6.795883,-8.372225,-8.677596,-8.004407,6.441436,7.619899,1.893298,2.527297,-1.655640,9.436145],[-9.346456,8.031303,1.479710,-2.095938,-0.797987,7.038682,5.517100,0.003844,-3.372276,3.805753,-3.809401,-6.440906,6.874629,0.164028],[3.022574,-4.094941,6.757560,9.024666,-5.898339,-0.832293,-3.891811,9.172938,-1.927958,5.320734,0.557119,-3.387497,-1.699189,3.937344],[-8.551943,6.719645,4.633276,-0.854017,7.578551,9.018886,7.468843,-0.323805,-8.055559,4.852759,0.921034,1.175687,4.697353,-1.316089],[-7.389747,8.592163,-1.926244,-3.905534,3.477526,-9.155344,3.462278,-2.866603,0.193612,-1.509732,-2.990672,-7.368704,3.066163,-6.579701],[7.572495,-8.546066,-4.096145,2.370239,-5.216805,4.136385,-0.957913,8.328389,4.534022,-2.942192,-7.167174,-8.558605,-2.057534,-4.464233],[-9.694352,1.132003,2.736853,-7.172645,2.865228,-5.536646,3.677683,2.348483,0.252966,3.175074,-4.570471,-8.347978,5.837113,-8.486471],[3.133318,1.551099,3.574698,-1.463874,-4.627669,2.821031,-9.859110,0.707332,5.020664,8.974718,9.531958,4.091055,-1.372701,0.511933],[1.511454,1.718853,-8.843999,-7.462273,3.683869,8.363282,6.690181,-3.225346,-2.220043,-1.816866,-2.187275,8.495428,-8.961281,-7.385522],[-7.010765,-2.638038,7.258964,-5.479566,-7.759368,1.621104,5.794559,4.927313,6.243801,-4.199524,-1.126729,9.371122,-4.089827,-2.354318]],[[-1.123867,7.619542,-3.316031,-7.747498,-9.575673,-8.309469,9.350019,-7.846184,-0.087595,-9.403242,9.744616,8.624350,3.874305,2.669402],[9.169642,-0.596336,-9.663804,-9.623025,-9.091970,-4.618250,-2.685967,9.335306,-8.027847,-0.978343,-6.468703,7.043739,-3.314433,4.888651],[1.598905,0.761395,-9.960164,-8.079879,-1.036385,-2.793528,9.251957,4.638509,8.590488,-4.050469,-2.409423,-3.688155,2.004161,4.445454],[-0.558936,2.808835,4.296595,0.403811,-9.370213,-0.486287,-1.110047,0.145869,2.792049,1.003779,-2.289645,-7.767645,4.211756,3.741032],[-8.507035,-7.370963,0.395896,3.277662,-5.879108,-6.636818,-4.787077,9.734934,6.704882,8.647537,2.186278,0.300629,-6.732026,5.332217],[-8.956696,-7.390608,2.011619,-9.523332,-2.292433,7.030567,-2.863111,1.153868,-0.514929,0.742502,-3.119655,-3.045559,-4.853441,1.148515],[6.095229,-6.549327,3.265181,5.134611,1.957149,7.726416,5.265196,-2.649139,-5.790897,-9.163910,0.786686,0.849085,-1.551758,6.241959],[3.126698,8.791207,4.820450,8.956586,-1.076503,8.829957,-3.607643,0.520999,8.500074,6.485127,-4.213159,-0.461588,0.180784,0.642596],[0.613851,-0.838099,7.885524,-5.163196,7.534589,0.877580,-4.978937,0.517841,8.295793,-2.939944,1.650274,-7.236514,7.458263,5.326953],[-4.808094,0.778781,8.694007,8.116376,9.213240,-5.416109,8.581100,7.517111,-7.835137,-0.289630,4.720934,9.098694,-2.863824,-1.328958]],[[-6.400837,-2.893101,-6.786322,9.623602,-0.651562,-8.482375,-0.305283,-3.271537,-8.554610,8.441958,8.255467,-9.754632,-9.526613,1.905663],[-2.875700,-8.210405,5.880083,0.127183,-2.772003,9.894644,5.754325,6.520576,-1.529702,2.321268,3.224364,-5.037338,-9.606102,6.788858],[-6.684254,0.897009,3.597114,5.495440,0.675833,-1.935715,3.446900,-8.594482,-9.637668,-7.117376,0.616663,1.402969,-7.479846,3.341249],[9.080033,6.127182,1.050749,-1.984115,1.218293,3.538247,-5.512322,-5.867029,-4.302753,5.939752,-1.596236,8.270063,7.941755,-0.019531],[-5.894689,6.171265,7.978063,1.741767,2.421292,1.109457,-4.109982,1.718579,-3.941355,-4.549267,-6.015110,8.887028,-5.429285,5.235838],[-5.603626,9.940044,9.602957,-7.501054,-0.395268,-2.525502,3.658470,-5.592594,-3.054745,-2.936674,8.471209,3.352680,-3.234811,2.452184],[-1.286931,3.643810,-4.046442,4.739524,4.133078,-7.973954,-9.885951,5.293779,-0.286666,4.464661,-2.478570,-4.313581,-3.990024,0.466984],[-8.285910,5.849974,6.989909,5.909227,-9.466323,-2.326449,-1.001522,4.178115,3.114516,-7.708868,-0.843875,-1.967409,-9.359735,-1.818532],[1.741027,0.224125,-4.428741,-5.147222,9.641866,-6.240970,-3.380060,8.699605,8.112821,3.928149,-6.192954,5.490639,4.173915,8.997849],[-5.727290,2.422515,5.588717,2.709396,9.366409,-9.254558,-0.097816,-4.633425,8.762664,8.561561,-1.294725,8.261515,5.016539,6.745456]],[[-2.979507,-2.338641,1.104411,-8.457617,-5.901589,-7.856099,9.006907,3.136241,9.118663,3.715973,6.018478,-9.639884,6.849695,-8.627309],[-5.695722,-9.702776,-8.898662,9.707489,-6.284445,3.451252,7.336654,-5.275222,-3.871404,-7.643705,-7.065249,-3.269617,5.800400,5.136429],[-0.546409,6.860901,-8.938797,4.093842,-8.484999,-1.494739,9.055143,7.399983,1.124646,9.894283,8.711003,-3.516823,5.196461,-4.455810],[2.521430,-7.166338,2.532031,-6.629028,5.731357,0.802417,-2.413275,-4.642106,4.522083,-5.107823,9.745230,-6.822711,-0.013345,-0.784371],[0.785137,-9.647039,8.400359,-0.866515,-9.350816,-9.862105,-1.961952,7.120306,5.085342,-9.726415,3.172546,7.453043,7.546818,-3.107904],[-7.673398,8.566406,1.323298,-0.231188,-5.132869,9.342307,7.461569,-3.550326,2.745942,-4.283967,7.829608,1.545522,-8.990160,-0.011111],[-5.112421,6.094619,7.729954,-7.431141,-7.455813,0.798608,2.209353,0.571335,-7.195763,8.194521,5.457527,-8.336567,-8.656980,3.305941],[7.893425,-6.132270,-3.008297,-6.433001,7.992956,-9.053137,-3.635738,-4.125947,0.339812,-7.673013,-8.125486,2.430926,-8.099808,-6.347024],[-6.997082,4.582910,5.456996,0.911087,6.170742,-2.544873,8.238446,-5.605346,-1.042665,5.102797,-9.964647,-6.052861,1.244794,-6.002956],[9.783833,7.960131,-9.543204,2.590095,-0.819446,-2.690695,4.707257,-6.193330,1.360764,-7.381286,-0.074947,3.076783,0.171421,2.159907]],[[-5.401894,-7.532215,-2.097614,9.311789,-7.635530,1.274219,1.594279,-4.677115,-3.654718,3.713477,7.364487,7.439347,-2.683348,-7.064449],[-6.947443,-5.078110,1.889950,2.656302,-2.986815,9.513836,1.475365,-1.522064,-5.918700,3.140186,2.774017,-3.981368,-1.452344,-2.894994],[0.283915,5.870430,-5.047841,-2.631420,-3.232200,-6.053703,-4.384308,-0.271111,-1.735709,-9.158948,3.556715,5.705766,5.232383,-9.753178],[0.303986,-1.456855,8.331161,7.736948,8.272677,-2.643297,2.106683,7.960129,-4.939264,7.788446,-1.613792,0.092257,-8.656222,-2.449891],[-7.188871,7.435932,-4.056261,-2.495211,4.592964,0.427576,6.861476,6.593529,-7.807784,-9.290345,-6.725962,6.372080,-6.403606,-7.528020],[1.423938,-3.261953,8.759295,-9.386091,1.886675,-3.423006,-5.717909,7.786674,9.068549,-8.919672,8.257653,-9.523978,-0.679740,-5.988520],[-5.696930,0.158593,-9.527398,6.697894,-2.317339,4.321092,9.508364,-4.075204,2.453846,0.013624,-5.453458,8.679545,8.288519,6.297464],[1.175807,-7.929103,5.146768,-2.823881,3.489392,0.011441,0.340776,0.722149,-0.532436,-9.333266,1.676182,-5.297561,0.515117,-4.849017],[0.228498,-6.044476,7.231694,-7.961186,8.389907,-4.380489,0.207713,-0.416251,-3.698657,0.252638,7.701371,2.838286,9.826618,9.706386],[6.907389,3.838013,6.115059,7.271439,-2.221582,1.335904,-3.695587,-6.591167,-1.316679,-7.783386,-2.652334,9.168559,6.591205,1.979487]],[[1.484955,9.346376,-7.653444,0.893266,2.520982,-0.879637,1.886299,3.368669,-3.628627,6.110713,-2.494102,8.116992,8.004141,-7.781856],[0.118115,7.589617,-3.611941,3.190725,-0.129766,7.161141,-4.145814,6.790614,2.501832,6.771972,8.194187,-9.538365,9.775501,-9.672641],[7.631355,0.700099,-3.394360,2.621969,-8.102902,1.423987,7.988394,-1.685119,4.006416,5.617238,-9.780246,-9.144386,1.199835,4.142353],[-0.166225,5.172015,-2.663938,4.412281,-2.576040,-9.707294,3.689147,8.289154,-5.694825,-5.249351,7.299364,-6.593989,6.693722,3.328589],[-6.804078,2.181875,3.175517,-0.711778,0.750395,-7.644144,-6.683869,-2.000697,5.333493,-7.181104,7.845859,7.012357,3.139845,-7.176995],[-6.424461,0.261112,-4.778416,7.618737,-2.540192,-3.034923,0.813437,7.075973,6.110125,-3.658092,2.990302,-3.403632,3.893914,1.173028],[3.631475,6.947936,-9.428499,-0.766146,4.507644,-8.416919,2.857241,-2.832971,3.737258,-2.221049,0.820460,4.225587,-0.999189,-7.692307],[8.295306,-9.076446,5.111255,-5.287281,-6.645164,2.711240,8.972495,0.668823,-3.333280,6.758783,4.144984,-6.288217,-0.029814,8.168749],[0.605787,6.269458,-4.567002,6.520444,6.150815,3.292337,8.892908,-0.544529,-0.437556,9.764096,6.720575,-0.255935,5.626310,8.860657],[2.679995,-9.681798,-4.361384,7.278168,6.357795,5.510005,6.186148,-1.522771,0.894227,2.538212,4.225815,-8.598177,1.812782,8.682592]],[[4.096073,2.287967,-7.633223,1.327232,9.065273,7.499566,5.912112,9.506231,5.498715,4.288978,-8.520576,-2.894689,-9.645015,-7.259325],[2.813365,-2.246901,4.362528,1.929297,1.337226,-4.524270,-6.620101,6.466862,-6.149228,-1.614575,-2.253277,-3.223792,-3.292884,-8.456465],[5.963801,-0.133679,8.718906,0.953056,-9.765164,-0.532876,4.618501,-6.105763,-8.368360,-8.181504,0.349343,-7.821556,-5.487175,-5.728213],[7.059764,6.404612,-2.497938,0.169144,-4.946430,-5.905329,-8.955697,-9.986445,0.950360,2.168952,-0.059578,5.476543,-5.807916,-7.832082],[-1.884800,0.862354,8.615991,8.924353,-5.906441,6.094982,3.571098,-6.000999,-1.919855,-3.874578,8.568697,3.169418,4.613180,8.201945],[-0.128577,-4.598721,3.837631,-9.819998,0.925063,-4.697370,5.028080,-8.090167,2.216725,-1.017104,-8.761681,4.270488,-7.643498,8.759914],[8.607076,7.770983,-6.128065,7.533791,5.079583,3.169636,8.259532,-2.993327,2.578268,9.437971,5.642384,8.714580,-2.760639,-6.092579],[6.775647,-4.307650,-3.280225,5.315755,-6.852730,-7.309916,-4.788908,-2.064956,8.464541,-6.539565,2.913188,2.887339,8.032473,-5.250908],[-6.942003,-4.773562,5.892239,-0.635580,-7.578625,-5.822392,-8.809454,-2.467793,-1.043132,-6.823484,-0.702956,4.681109,1.451860,-4.983226],[5.770939,-5.651761,0.194539,6.198114,-6.282883,5.845425,5.477756,2.140500,-0.300217,4.071506,-1.878639,6.098658,-2.104413,-6.119457]],[[2.496464,3.987250,-8.866181,-5.199409,-9.616611,-2.360741,-1.408136,-4.046208,8.614476,2.939887,2.611145,6.897292,6.216756,-0.905361],[5.892312,1.249564,-5.607162,4.053944,-3.128901,-3.909310,7.666539,4.169450,-5.005955,-4.832800,6.531180,-0.200252,-5.696057,-6.802327],[-0.298932,3.674494,-1.175213,-1.116484,3.743076,4.602443,-5.533717,7.715935,-1.434642,2.905554,-2.119576,-3.816764,1.070914,-6.570817],[-4.496954,3.440413,-2.589682,-8.445916,8.425466,8.831596,-0.048534,7.454972,-9.963816,4.843777,7.797578,-3.834932,-2.675258,-5.458267],[5.076528,0.128838,4.813066,-3.158776,5.962936,-2.423836,3.591014,-3.578369,-1.053394,-6.903336,-3.644678,5.299926,-4.967454,5.767208],[9.326296,8.636348,-9.000747,-0.267592,5.222051,9.340959,-9.240198,-5.565685,5.420165,2.691299,-0.327665,7.889919,5.766754,-8.003765],[-1.628784,-7.793737,9.529074,-9.086584,-5.074004,-1.434467,6.759421,0.121557,9.734669,4.536453,-7.358439,2.768513,2.844399,5.149042],[4.107936,-5.912712,6.351940,5.082882,-3.379917,-2.423456,5.012125,2.837228,2.519742,-5.011414,-8.952494,8.682115,-5.517954,6.850404],[2.408798,5.289018,-2.530703,-8.181474,-7.226077,3.258218,3.744828,-9.423560,-6.984840,8.627974,-3.960849,-3.305488,-0.969752,9.431840],[-6.251317,-9.088106,6.731673,6.101493,5.322342,4.815013,9.000078,9.302593,-0.636578,9.813606,9.653997,-2.452618,-4.682491,-7.262187]],[[8.531957,-1.964599,-1.673396,9.109686,-5.683712,5.512937,6.347707,3.656249,5.311438,9.023815,-1.637638,-3.845116,-7.309591,6.429520],[-0.420012,6.526406,8.456076,3.079789,-9.614060,7.400260,9.467278,-4.389472,7.556284,-7.126598,-6.881157,4.389727,-0.012633,-7.690840],[-3.272978,-6.128972,8.898095,-7.252504,6.312123,-5.925964,9.901888,-1.502496,9.236717,3.328462,-8.912636,2.496709,3.365793,-7.457777],[7.635294,-3.436943,-9.508441,-7.679821,-6.996368,2.236781,-5.724794,7.084698,1.082884,3.550465,7.637140,-5.513217,-7.733652,-8.537320],[-3.624663,6.937575,-0.849112,1.554850,-3.066663,-4.148077,8.063199,-8.688288,-8.742618,5.944676,1.830677,-7.300931,0.971154,4.749054],[-4.593823,2.644741,-2.525881,-6.240012,3.838384,5.366633,2.827247,-8.745144,9.933524,2.223778,2.767301,-0.399997,9.722482,0.500118],[7.848924,-0.193544,-5.981382,-7.280795,-1.834411,5.292210,-5.907934,-0.223692,6.113972,-6.769622,8.239858,-7.221068,-1.336640,-1.624753],[5.154974,-9.104603,-6.910644,-6.254915,7.337503,4.012033,-2.611753,5.134144,5.340470,-9.290504,-3.822340,-2.937774,-4.506369,-0.308040],[6.687912,-9.040663,-2.694564,0.217302,3.181368,-6.448538,-6.530949,3.399977,-5.474757,1.379066,-1.576231,-4.300725,1.787096,-2.429740],[7.320613,-3.900190,4.362902,6.709241,-5.709642,-8.639042,3.466786,-4.835065,-3.199535,-0.241023,-1.749394,6.735348,7.271210,5.766046]],[[-9.675665,6.545920,7.292900,-9.117356,-6.425567,-4.382207,-7.967312,5.985487,3.581317,4.840306,1.511870,8.571514,8.883246,-5.884017],[-4.326309,6.217044,4.162045,0.591464,4.822389,-8.088262,5.071622,-9.971980,0.399069,0.343878,1.511220,0.047402,-3.872025,-9.783801],[7.721464,7.155594,-2.422775,-1.500445,1.095525,-8.194872,1.947322,-8.573867,-3.554351,-0.405305,-4.348612,-2.376605,-5.494089,-1.445987],[-4.077062,-3.236811,5.923788,-5.119763,4.044544,-6.367745,-3.899760,9.982775,8.497512,-7.084203,-6.149328,2.593669,6.632381,-5.616112],[7.902783,-5.890877,0.469702,2.353631,-9.365040,-3.010107,-4.156954,-7.762465,-0.390091,-3.661665,-6.684997,9.238793,3.993929,5.926865],[-1.117192,-2.263545,8.644735,-4.067418,-7.718863,7.276014,9.377976,-6.269859,-8.977870,-0.692320,-3.116926,-4.468231,6.408978,0.581271],[1.457828,8.960853,-8.929862,7.900018,3.656626,-1.115663,-4.198654,-5.629566,4.242780,9.339260,-7.643234,-1.361341,8.176604,8.766642],[-7.213199,2.173613,1.274705,-8.198459,1.905570,8.179444,5.828518,-7.757211,-8.380852,4.851216,4.878765,0.637584,-7.668053,-2.791936],[2.871893,-4.656884,-9.526656,8.755607,4.406950,3.037970,2.655837,1.889498,-9.545941,-3.644979,-9.419416,-0.699761,0.008924,9.994132],[-6.972706,3.936732,6.612337,5.272520,4.365525,-4.976795,-6.008014,2.698294,-9.904278,-5.591159,-9.087223,1.270553,-2.189193,-3.269754]],[[-5.358490,1.297497,4.259787,-2.488682,0.588402,-0.959104,-1.817720,6.027670,-6.422242,-5.388223,2.625934,8.516751,-3.818611,-4.818672],[3.484585,-4.351557,7.425903,-3.227576,-6.197244,5.759356,-4.406972,-3.459031,-6.742936,-1.021807,3.271864,-2.600112,7.613838,-5.321604],[-5.683864,8.207977,-4.066773,5.026801,7.471196,-3.470444,-4.164055,1.071613,-2.804249,6.514486,9.577717,9.695185,6.795612,0.854212],[-4.062473,-2.903141,2.787086,-1.286708,0.974677,4.185452,1.606720,-4.269138,8.473808,-9.155537,4.008562,2.291372,1.694002,1.798094],[-3.354495,-4.528531,2.372506,1.970533,-0.709560,-2.443146,-8.051637,-6.678366,2.753377,3.310361,6.814651,-2.634514,-3.756778,6.952003],[8.040770,-2.353515,-9.495015,-3.111257,7.187461,-2.633292,2.055036,2.401721,-0.224017,8.203953,-8.766419,-1.614521,-1.752014,-0.460054],[-4.837899,2.302718,2.295071,8.264957,-6.613565,0.697909,-2.350091,3.300782,-4.168162,9.654397,-2.869919,-7.962199,1.276598,-1.066825],[-3.746026,-4.961238,2.167161,-3.114257,4.922309,-3.482692,1.019436,4.528863,5.015357,1.696689,3.541371,-6.997079,8.138932,-4.869838],[3.630772,-7.390870,-1.320925,7.980108,-0.977743,-4.831551,5.947020,6.931562,-2.885140,-6.252216,7.218874,9.332262,-5.699326,8.837780],[-3.627638,2.278272,-0.711584,0.920501,-7.437670,-8.945021,-7.282756,2.425867,1.119234,-8.456639,7.797875,5.462853,-6.404321,-6.844975]],[[-0.830347,-6.699865,2.258041,5.461224,-3.142763,-0.317550,9.088947,4.407678,5.941846,8.991009,-3.106993,-5.192179,9.693384,-4.961068],[-8.483528,-9.837639,-1.071350,-6.824922,-3.676093,-5.398807,-6.353381,-4.170187,2.425804,-5.566692,-0.034169,-3.934224,0.668598,-8.089087],[-4.429778,2.528597,0.389396,-5.520223,-5.171431,-7.078495,-7.007401,5.917891,1.955412,-0.286127,-2.652900,-7.690789,-3.119122,9.059960],[3.946457,-6.908202,-7.299865,1.721226,-3.419734,-9.997190,-6.384957,6.758975,3.341516,3.407177,-3.014589,0.722062,-8.234200,4.485353],[-9.101173,8.061032,9.737041,-1.090303,1.331735,4.251871,9.884395,-1.932819,-3.595005,-2.781191,3.725881,7.546379,4.360355,-2.721985],[-3.826125,-7.002362,-7.843457,-3.010229,-1.424610,2.967385,-2.015681,4.378377,-9.749093,5.370457,6.740234,-8.699236,-6.499388,1.837103],[9.405958,3.664216,5.126854,-1.501689,4.914776,4.032502,4.138960,7.339447,-0.574369,1.463410,1.892549,5.229432,-8.574588,0.865598],[6.716318,-8.210074,-1.627362,-2.134575,-0.305379,0.897614,-8.019530,3.860769,0.232783,1.832641,3.253541,5.515960,-6.811500,3.183419],[-5.265473,4.467805,0.231716,-6.219796,2.224759,-4.506881,-2.203785,-5.277701,-1.452225,-1.023984,-9.599295,8.649359,9.482848,-9.422941],[-8.449309,-6.744334,-7.101027,-4.280040,-8.915064,2.161710,-4.918650,8.286335,5.913449,4.390314,5.712637,-4.750220,8.759256,5.240780]],[[-1.731156,-6.393873,8.069831,9.753323,-6.344024,-6.345119,5.968648,7.850570,8.358350,-3.230937,-3.315117,-5.555365,3.660477,4.024479],[0.158399,9.405244,1.295880,-4.156509,4.865601,-9.573942,3.030358,-6.256212,5.157196,-5.159044,-2.664306,8.982423,-4.737313,-7.992737],[-7.326810,1.241443,-9.274114,9.940187,-5.197441,-2.229067,-1.064992,-6.604565,9.610112,-1.214761,-5.935991,3.441374,5.168953,0.944520],[6.628850,8.050459,1.997998,6.687105,-7.749167,6.620296,-2.711196,-8.386394,4.651290,-7.938792,4.642565,6.700989,-0.627294,-0.888221],[3.772999,0.609461,8.914270,4.867810,8.487781,-2.896386,6.715044,3.331971,7.321572,-5.827613,-5.360609,-7.125636,1.130991,8.420032],[-9.642717,9.925532,4.973831,-7.357104,-7.989308,5.510940,-5.867981,2.454048,-5.374016,3.233183,-3.330576,-6.885007,1.124194,-5.218510],[-5.481821,-3.950102,6.132793,-6.608841,-2.009795,6.084074,-9.827000,0.250133,-7.079508,2.071564,8.825659,-3.202329,-3.966979,-7.820378],[1.086117,2.778820,-1.057556,2.979334,4.618695,-7.529785,-4.604300,-0.586615,-9.451353,-9.891344,-4.419014,1.772494,-7.091803,6.417437],[-4.230138,-3.026272,-6.009358,9.854453,8.772030,-6.555716,9.099218,4.779868,-4.005201,-9.794804,6.822322,0.857071,-5.473354,0.347337],[7.689759,-2.651761,-2.107150,4.725500,-2.194363,7.320645,0.180200,-1.319861,-9.479256,6.434823,-8.682646,6.808950,-1.595455,8.039805]],[[-5.036239,8.645938,-1.653860,4.417201,5.438170,7.032172,-6.890956,9.290768,5.587949,-0.148621,5.184244,-3.382310,6.734414,7.596372],[5.290723,5.357084,4.147659,3.147461,-7.363487,-5.307113,2.844879,7.768927,-6.131682,-7.729540,-6.256540,3.830881,-9.347714,0.136949],[-1.662811,5.360630,-9.650084,2.058763,7.872432,0.980811,4.418634,0.340565,3.939129,-8.800621,-7.595620,0.623176,4.989746,-4.374779],[7.931747,-7.497757,6.147588,8.204170,-7.045223,7.720670,5.850719,4.258044,6.004057,9.375251,8.295839,-6.414705,-1.695853,-8.906184],[3.692397,0.561962,6.246225,-3.598562,7.109958,-1.497396,-3.590926,-4.684627,-0.175604,-2.901594,-5.270084,-0.318826,-1.972462,1.580678],[8.954110,-0.218280,0.170120,2.741591,5.144187,3.678831,5.791933,-0.019490,3.435745,0.652954,-7.625014,8.862947,8.828766,-1.773792],[1.944019,0.807475,-7.918813,1.749871,8.852004,-4.820995,-6.930450,-2.872681,8.320985,9.375126,3.588808,-2.521112,-8.352659,-4.963076],[1.311149,6.408937,6.467062,2.637232,6.152136,5.762211,8.807166,6.123317,4.366336,4.925689,2.835020,7.793233,8.313267,-6.825411],[-2.151376,-8.663701,-8.516404,-5.736006,-9.648153,0.513999,-4.233786,-5.692155,-9.345410,1.864691,7.401922,-9.209536,7.756897,6.279931],[0.743919,-3.096144,6.087457,2.379179,1.552909,1.684707,-7.154085,8.899458,4.216069,-0.622930,3.041113,6.936009,5.526206,9.692106]]], dtype = "float64")#candidate|3639|(14, 10, 14)|const|float64
bop_3640 = relay.add(uop_3633.astype('float64'), relay.reshape(const_3639.astype('float64'), relay.shape_of(uop_3633))) # shape=(14, 10, 14)
bop_3643 = relay.add(uop_3635.astype('float64'), relay.reshape(const_3639.astype('float64'), relay.shape_of(uop_3635))) # shape=(14, 10, 14)
output = relay.Tuple([bop_3612,var_3616,bop_3640,])
output2 = relay.Tuple([bop_3612,var_3616,bop_3643,])
func_3647 = relay.Function([var_3610,var_3611,var_3616,], output)
mod['func_3647'] = func_3647
mod = relay.transform.InferType()(mod)
var_3648 = relay.var("var_3648", dtype = "int16", shape = (11, 12, 10))#candidate|3648|(11, 12, 10)|var|int16
var_3649 = relay.var("var_3649", dtype = "int16", shape = (11, 12, 10))#candidate|3649|(11, 12, 10)|var|int16
var_3650 = relay.var("var_3650", dtype = "float64", shape = (77, 10))#candidate|3650|(77, 10)|var|float64
output = func_3647(var_3648,var_3649,var_3650,)
func_3651 = relay.Function([var_3648,var_3649,var_3650,], output)
mutated_mod['func_3651'] = func_3651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3264_call = mod.get_global_var('func_3264')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_3655 = relay.TupleGetItem(func_3264_call(), 0)
call_3656 = relay.TupleGetItem(func_3266_call(), 0)
func_2980_call = mod.get_global_var('func_2980')
func_2981_call = mutated_mod.get_global_var('func_2981')
call_3670 = relay.TupleGetItem(func_2980_call(), 0)
call_3671 = relay.TupleGetItem(func_2981_call(), 0)
output = relay.Tuple([call_3655,call_3670,])
output2 = relay.Tuple([call_3656,call_3671,])
func_3672 = relay.Function([], output)
mod['func_3672'] = func_3672
mod = relay.transform.InferType()(mod)
mutated_mod['func_3672'] = func_3672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3672_call = mutated_mod.get_global_var('func_3672')
call_3673 = func_3672_call()
output = call_3673
func_3674 = relay.Function([], output)
mutated_mod['func_3674'] = func_3674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_3759 = relay.TupleGetItem(func_2583_call(), 0)
call_3760 = relay.TupleGetItem(func_2584_call(), 0)
output = relay.Tuple([call_3759,])
output2 = relay.Tuple([call_3760,])
func_3767 = relay.Function([], output)
mod['func_3767'] = func_3767
mod = relay.transform.InferType()(mod)
mutated_mod['func_3767'] = func_3767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3767_call = mutated_mod.get_global_var('func_3767')
call_3768 = func_3767_call()
output = call_3768
func_3769 = relay.Function([], output)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_3770 = relay.TupleGetItem(func_2583_call(), 0)
call_3771 = relay.TupleGetItem(func_2584_call(), 0)
uop_3775 = relay.asinh(call_3770.astype('float64')) # shape=(3, 9, 1)
uop_3777 = relay.asinh(call_3771.astype('float64')) # shape=(3, 9, 1)
bop_3779 = relay.mod(uop_3775.astype('float64'), relay.reshape(call_3770.astype('float64'), relay.shape_of(uop_3775))) # shape=(3, 9, 1)
bop_3782 = relay.mod(uop_3777.astype('float64'), relay.reshape(call_3771.astype('float64'), relay.shape_of(uop_3777))) # shape=(3, 9, 1)
func_658_call = mod.get_global_var('func_658')
func_662_call = mutated_mod.get_global_var('func_662')
var_3794 = relay.var("var_3794", dtype = "float64", shape = (100,))#candidate|3794|(100,)|var|float64
var_3795 = relay.var("var_3795", dtype = "uint8", shape = (140, 14))#candidate|3795|(140, 14)|var|uint8
call_3793 = relay.TupleGetItem(func_658_call(relay.reshape(var_3794.astype('float64'), [5, 2, 10]), relay.reshape(var_3795.astype('uint8'), [1960,]), ), 2)
call_3796 = relay.TupleGetItem(func_662_call(relay.reshape(var_3794.astype('float64'), [5, 2, 10]), relay.reshape(var_3795.astype('uint8'), [1960,]), ), 2)
output = relay.Tuple([bop_3779,call_3793,var_3794,var_3795,])
output2 = relay.Tuple([bop_3782,call_3796,var_3794,var_3795,])
func_3797 = relay.Function([var_3794,var_3795,], output)
mod['func_3797'] = func_3797
mod = relay.transform.InferType()(mod)
var_3798 = relay.var("var_3798", dtype = "float64", shape = (100,))#candidate|3798|(100,)|var|float64
var_3799 = relay.var("var_3799", dtype = "uint8", shape = (140, 14))#candidate|3799|(140, 14)|var|uint8
output = func_3797(var_3798,var_3799,)
func_3800 = relay.Function([var_3798,var_3799,], output)
mutated_mod['func_3800'] = func_3800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_3821 = func_2794_call()
call_3822 = func_2794_call()
func_3227_call = mod.get_global_var('func_3227')
func_3231_call = mutated_mod.get_global_var('func_3231')
var_3833 = relay.var("var_3833", dtype = "float64", shape = ())#candidate|3833|()|var|float64
var_3834 = relay.var("var_3834", dtype = "float64", shape = (91, 10))#candidate|3834|(91, 10)|var|float64
call_3832 = relay.TupleGetItem(func_3227_call(relay.reshape(var_3833.astype('float64'), []), relay.reshape(var_3834.astype('float64'), [10, 7, 13]), ), 0)
call_3835 = relay.TupleGetItem(func_3231_call(relay.reshape(var_3833.astype('float64'), []), relay.reshape(var_3834.astype('float64'), [10, 7, 13]), ), 0)
output = relay.Tuple([call_3821,call_3832,var_3833,var_3834,])
output2 = relay.Tuple([call_3822,call_3835,var_3833,var_3834,])
func_3836 = relay.Function([var_3833,var_3834,], output)
mod['func_3836'] = func_3836
mod = relay.transform.InferType()(mod)
var_3837 = relay.var("var_3837", dtype = "float64", shape = ())#candidate|3837|()|var|float64
var_3838 = relay.var("var_3838", dtype = "float64", shape = (91, 10))#candidate|3838|(91, 10)|var|float64
output = func_3836(var_3837,var_3838,)
func_3839 = relay.Function([var_3837,var_3838,], output)
mutated_mod['func_3839'] = func_3839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3894 = relay.var("var_3894", dtype = "uint8", shape = (4, 5, 8))#candidate|3894|(4, 5, 8)|var|uint8
var_3895 = relay.var("var_3895", dtype = "uint8", shape = (4, 5, 8))#candidate|3895|(4, 5, 8)|var|uint8
bop_3896 = relay.maximum(var_3894.astype('uint8'), relay.reshape(var_3895.astype('uint8'), relay.shape_of(var_3894))) # shape=(4, 5, 8)
uop_3911 = relay.sin(var_3894.astype('float64')) # shape=(4, 5, 8)
func_2905_call = mod.get_global_var('func_2905')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_3916 = func_2905_call()
call_3917 = func_2905_call()
func_3589_call = mod.get_global_var('func_3589')
func_3591_call = mutated_mod.get_global_var('func_3591')
const_3942 = relay.const([4,-10,4,6,-5,3,-6,-4,10,-1,2,-10,6,-2,5,-4,-3,-2,10,-2,8,-9,-6,7,-2,7,-8,1,-2,-2,6,-8,2,-6,7,7,5,2,-8,7,9,-6,-2,2,9,3,-10,6,10,-4,10,-6,7,6,9,7,-7,5,-9,-5,9,-4,10,10,-2,9,-6,-8,-3,10,8,-9,10,6,9,8,1,8,1,-1,4,6,-5,5,-1,-1,2,-5,4,-2,3,10,3,3,-7,9,-4,-3,1,8,-5,-10,9,-1,-7,5,-4,-3,-4,-1,1,-4,6,6,5,9,5,7,5,6,-3,-1,5,-4,-10,-1,4,10,1,9,-9,8,-10,-7,-4,-8,-3,4,2,-8,2,7,-5,7,-2,5,-7,-7,-7,3,-9,-8,9,-2,-1,-5,-2,-10,9,4,-6,-5,10,-1,8,8,-4,-10,10,3,-2,4,-3,10,4,5,1,-2,-2,9,8,7,-8,2,-7,-1,5,3,-10,10,-5,3,-5,-10,-1,-6,8,8,10,-6,-8,6,-2,1,-9,7,8,-3,-6,-1,-4,5,-2,-8,4,-9,-10,-6,-3,-4,2,8,1,2,-6,4,1,2,4,-4,-5,-3,-8,-5], dtype = "uint8")#candidate|3942|(234,)|const|uint8
call_3941 = relay.TupleGetItem(func_3589_call(relay.reshape(const_3942.astype('uint8'), [234,])), 2)
call_3943 = relay.TupleGetItem(func_3591_call(relay.reshape(const_3942.astype('uint8'), [234,])), 2)
output = relay.Tuple([bop_3896,uop_3911,call_3916,call_3941,const_3942,])
output2 = relay.Tuple([bop_3896,uop_3911,call_3917,call_3943,const_3942,])
func_3944 = relay.Function([var_3894,var_3895,], output)
mod['func_3944'] = func_3944
mod = relay.transform.InferType()(mod)
mutated_mod['func_3944'] = func_3944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3944_call = mutated_mod.get_global_var('func_3944')
var_3946 = relay.var("var_3946", dtype = "uint8", shape = (4, 5, 8))#candidate|3946|(4, 5, 8)|var|uint8
var_3947 = relay.var("var_3947", dtype = "uint8", shape = (4, 5, 8))#candidate|3947|(4, 5, 8)|var|uint8
call_3945 = func_3944_call(var_3946,var_3947,)
output = call_3945
func_3948 = relay.Function([var_3946,var_3947,], output)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_3997 = relay.TupleGetItem(func_3494_call(), 0)
call_3998 = relay.TupleGetItem(func_3496_call(), 0)
output = relay.Tuple([call_3997,])
output2 = relay.Tuple([call_3998,])
func_4005 = relay.Function([], output)
mod['func_4005'] = func_4005
mod = relay.transform.InferType()(mod)
mutated_mod['func_4005'] = func_4005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4005_call = mutated_mod.get_global_var('func_4005')
call_4006 = func_4005_call()
output = call_4006
func_4007 = relay.Function([], output)
mutated_mod['func_4007'] = func_4007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3187_call = mod.get_global_var('func_3187')
func_3189_call = mutated_mod.get_global_var('func_3189')
call_4008 = relay.TupleGetItem(func_3187_call(), 0)
call_4009 = relay.TupleGetItem(func_3189_call(), 0)
func_3647_call = mod.get_global_var('func_3647')
func_3651_call = mutated_mod.get_global_var('func_3651')
const_4019 = relay.const([[4,-10,-2,7,1,-2,5,-1,-8,7,-5,7,8,-3,-1,2,6,10,-4,-9,-10,8,-9,-6,-9,8,-7,-2,-6,8,9,-3,-1,4,-1,-2,3,8,8,10,9,1,-3,-3,-9,6,-2,-6,3,6,-4,7,-10,-1,3,6,-1,9,4,-3,-4,5,-2,-7,-1,-1,3,2,4,-4,9,8,8,6,-9,7,9,-9,2,-6,-1,8,4,9,-7,7,-4,-6,2,6,-10,-7,6,-2,2,-1,-4,6,3,9,10,-6,1,-7,-3,-4,-10,3,-7,-4],[4,9,-6,-9,-2,-9,-2,-7,6,-6,10,3,1,4,3,-6,-5,5,1,2,-10,-8,-7,-7,-2,1,5,10,2,-5,-3,-9,7,10,8,3,-5,2,7,-5,4,-9,-2,6,-4,-8,-1,3,-1,-6,-9,8,-2,-5,2,8,-8,5,-7,-3,-2,-7,-7,1,-7,8,-7,-9,-9,-8,6,8,-4,-3,4,3,6,10,-4,5,9,-7,-2,-5,-3,-3,-8,3,4,4,-4,5,-1,-5,-6,-6,4,1,-10,-8,-9,1,1,-9,2,4,-4,-5,-4,10],[1,-6,7,-2,2,-1,-2,-8,8,10,5,-5,-3,-4,3,8,9,-10,9,-5,-5,-4,1,-9,-1,1,3,7,-6,-2,6,-2,3,-3,-7,7,-7,6,3,8,-4,-4,-7,-2,1,-2,5,-3,-8,-3,7,7,-1,1,-2,-1,-10,-5,3,9,-3,-4,7,-9,4,-1,1,4,-5,-7,-7,-3,-1,-3,-6,-10,-5,9,2,6,9,-8,7,4,8,-9,10,-4,-10,5,1,-5,10,8,-2,-9,-4,-1,10,5,7,-4,5,7,-7,9,10,4,-10,3],[9,-10,10,7,9,9,-5,-2,-1,4,-1,-5,1,-10,-2,-10,4,5,3,3,4,-7,-5,9,-8,-3,8,-8,7,-9,-1,-1,8,9,10,3,-2,-4,9,-2,-6,4,2,4,-9,10,9,5,1,-1,3,-6,-4,1,-4,8,7,8,3,-1,-3,4,-4,1,2,8,-6,2,7,-1,6,2,1,-5,10,-1,-6,-6,4,8,1,-3,10,-7,9,-7,7,-10,-9,-7,10,-3,2,7,-9,4,-10,-7,4,-5,-1,-10,2,-9,7,-2,-1,-3,6,-9],[-4,-5,1,5,7,10,4,6,-2,-7,-10,-3,-5,6,-6,-6,-9,7,4,-7,3,9,-7,-3,2,5,-10,7,-7,-7,-7,5,4,9,-3,-1,4,-4,-6,10,-9,-2,-7,4,-1,5,2,5,2,-5,10,3,-7,5,-6,-3,-1,-3,3,10,-6,3,9,-7,-4,7,-8,8,-1,-9,7,9,-7,8,-10,6,-7,6,-9,-6,5,6,8,-9,6,-4,-7,3,-7,-4,1,-3,-8,-2,-3,-9,4,4,-9,8,10,-10,-9,1,-6,-1,6,5,6,-3],[8,9,-9,-3,-5,-8,7,4,-3,-1,1,-7,-7,-2,-2,2,-1,3,4,-10,10,-4,8,-2,2,-9,5,-1,-10,5,-10,-3,10,10,-3,2,10,8,-3,-8,-4,-9,5,-3,-3,-7,5,-1,-6,-8,-3,10,-6,9,1,-4,6,-5,-3,4,-7,6,-2,9,-10,-7,-9,4,7,5,-3,-4,2,10,10,-1,6,10,-6,4,-8,-7,-7,-10,-8,-4,-6,10,2,5,-3,-8,6,6,9,-6,-2,1,5,6,8,4,10,4,-3,3,-7,-6,-9,3],[-2,-4,-5,4,8,-3,9,4,5,-1,-9,6,-5,7,3,-3,-2,-9,-2,6,2,10,-9,3,2,-2,-10,7,1,1,-7,-8,1,-3,-10,-5,-8,-6,-1,3,-4,-6,-5,10,-10,-1,7,-5,7,-3,7,-9,-5,4,-3,1,3,-2,10,-6,4,7,-7,2,-10,-2,5,2,8,7,-4,-9,-6,9,2,8,3,1,-8,7,-10,-5,-2,-6,-4,2,-3,-6,9,-7,-1,8,2,5,2,10,-2,-6,3,-3,-7,4,5,1,7,6,4,-3,5,10],[1,1,6,-6,-1,5,-5,10,-1,5,-10,6,-8,2,-7,3,2,-1,-3,-7,-9,6,1,5,8,2,2,-4,6,-6,-8,-5,4,1,3,4,8,6,-6,1,-3,-4,2,-7,-3,3,1,6,-4,-5,-2,-10,8,2,-9,10,8,10,1,8,2,9,-9,-1,1,3,4,6,1,8,10,3,3,6,3,-1,-5,-8,-5,-1,-4,2,8,-10,5,-9,7,3,-7,5,4,5,-6,8,-4,10,1,-6,1,8,-5,2,-10,1,7,9,9,3,-9,-9],[-7,-10,10,-1,-3,8,7,9,9,5,3,-9,8,-10,-2,9,-7,-10,-5,9,-10,-6,-10,-4,-3,5,5,-2,6,1,10,-7,-8,-3,10,3,-10,-8,-1,9,3,4,8,2,-6,9,-4,-3,5,-7,10,4,-6,2,5,3,-5,-8,1,-6,7,-4,-2,-3,-7,-2,8,-8,-8,-4,-2,-5,-6,-8,4,-5,-9,-4,-10,-10,7,3,-7,2,3,-10,-4,2,7,8,-5,-4,4,7,-5,8,-8,9,-3,-1,-8,-1,-4,-4,-2,4,-3,-2,-6,-10],[6,5,10,9,5,-2,-9,-7,6,5,2,-5,-10,4,8,9,2,9,-7,7,-8,-7,2,1,-3,-5,-8,2,9,-3,7,-2,5,-3,2,4,-1,-9,5,10,-8,5,-7,-3,-10,-5,6,10,-1,-4,4,-4,-1,7,-5,-5,6,-1,6,1,-10,-7,-8,-10,9,-3,-3,8,-10,-9,-6,9,6,-4,4,2,-6,10,3,2,-3,-5,-1,-10,9,-7,-6,6,-6,8,-8,4,9,-7,-4,-4,-1,3,3,-5,5,-1,6,-4,-10,4,3,3,4,2],[-6,-6,9,-10,-5,7,7,-10,5,-7,6,-4,-1,-9,-4,4,-1,-10,-2,-3,7,8,9,-9,1,1,7,-6,-10,-5,8,-8,-10,9,1,2,3,-4,-7,7,8,5,3,6,-8,2,10,5,10,-5,-8,-1,-6,-3,7,-3,10,-10,1,8,7,-5,10,9,6,1,1,-4,4,-2,-9,-5,2,4,3,3,2,9,10,9,3,9,-9,-3,-10,7,-9,-10,8,-6,-6,3,7,-7,3,2,-6,-10,-3,2,-9,5,-1,-10,-1,-4,-5,4,-10,-10],[8,8,2,3,-2,-1,5,-10,-2,-7,-7,7,-7,-6,3,9,8,5,9,7,4,4,-3,4,-5,6,2,-5,-6,8,-7,-1,6,8,4,7,-3,-7,-5,4,4,3,-5,6,9,1,1,-4,-7,-2,-8,-1,2,-9,-9,-9,3,10,10,1,8,-7,3,-5,2,5,6,2,4,-5,4,-7,-5,5,10,5,8,-4,3,-5,-7,-6,-6,3,2,2,-3,3,3,5,5,-9,4,-8,-5,4,3,6,-10,7,10,-8,-8,1,2,-3,8,4,7,10]], dtype = "int16")#candidate|4019|(12, 110)|const|int16
const_4020 = relay.const([6.779822,-3.335195,1.048559,3.772600,7.583827,-4.752231,1.067578,-8.656063,-2.102124,3.705912,6.258723,4.346143,1.093117,-8.264846,6.954171,8.375975,3.715264,-8.992986,7.994098,-2.296475,3.790406,5.409234,4.675556,9.877970,-2.792497,6.006097,-5.356508,-2.664678,7.726196,0.586995,1.094342,0.591749,-3.772509,8.290586,4.718121,-3.082078,-5.774627,4.061701,5.110200,6.225630,-7.360135,4.748869,-0.442456,-5.343093,-7.738617,-1.596989,-2.926012,-5.129725,9.544046,-6.898671,-1.019769,7.363346,-0.775301,-8.814152,5.695408,9.300655,9.763675,2.843912,6.826450,4.843469,9.783686,4.422630,3.817363,-9.119641,4.989648,9.341667,2.082577,-3.441174,2.456434,-9.570731,7.720011,-9.580497,-2.884370,-9.348348,0.358930,-2.956420,4.642938,-5.330302,8.273276,-1.446370,9.686707,-8.508325,-9.923471,3.511882,-8.861180,9.066014,2.939771,-4.996295,5.660945,7.698624,-6.119504,6.499454,1.005285,-4.411293,-7.197061,5.721862,-7.254450,-0.524902,3.194764,-4.905783,3.177249,0.804709,-5.818933,3.757032,-8.557210,-9.645265,-1.581235,-9.168419,-2.498455,-0.412318,3.398057,-7.563989,-1.594016,6.578745,-9.160560,4.579904,9.095459,4.911345,-5.918453,5.918404,3.450581,1.991570,6.511583,-3.563598,-7.516783,-4.019722,-2.736697,7.539069,4.509754,-4.259586,-3.150125,-1.245375,-8.327990,8.780060,-2.956991,0.763355,2.520015,9.057513,0.961361,-0.003891,-8.221233,4.864841,0.627388,2.106426,7.441944,6.097266,7.753877,5.647818,2.311442,-3.902679,9.147356,1.739952,-6.616275,0.616431,-2.638537,4.833323,-5.025098,-1.966825,8.269610,1.648093,1.133179,8.737522,-8.608109,8.478701,2.091109,4.904439,0.038107,8.272220,4.909961,8.764471,-6.239894,-9.355368,-0.437155,3.954163,3.408539,-6.654379,4.949146,2.605126,7.792859,5.222588,0.402901,2.001218,5.023512,-9.467499,-3.892247,9.331540,4.634885,0.282386,-6.834513,6.805943,3.601395,-4.525395,6.066412,-8.127316,-2.063623,-8.928961,-7.579199,5.801408,-8.720370,-7.441687,2.869575,-9.167739,-2.080500,-3.867721,-9.952053,-8.215160,-3.542906,-8.190373,-8.058195,-1.551868,-7.203952,-8.148405,-9.482291,-4.848737,-0.198805,2.397033,-7.347956,-8.167577,-5.793619,5.574935,-8.305307,-8.513322,1.009802,4.871524,-5.386977,-6.507021,-1.157507,3.497290,-5.705135,0.605126,8.168066,5.186272,-3.578481,-2.200279,-8.741647,3.364014,4.116674,1.655404,-4.107943,-6.580693,-3.165723,3.037101,-9.871467,-0.224309,1.839649,7.126770,-1.417000,-9.165607,-7.491492,1.456990,6.636969,8.995959,1.263753,5.998088,9.741259,-4.262954,-0.449344,-4.915711,-1.678910,-0.534094,1.963310,-8.103064,-0.905715,-7.792529,1.259334,0.913299,1.365101,8.632767,-2.110754,-9.290317,9.849342,3.101609,9.972252,-6.360694,-4.039326,2.101769,-3.830596,-2.236276,-3.991807,5.099604,-9.023553,-8.737499,1.493089,-4.012055,-1.048293,-0.901609,8.861046,-0.979355,9.652085,7.878853,1.830631,8.246609,-4.286994,-2.927533,9.252792,0.725790,-0.895607,2.708468,0.341266,2.481073,-7.012862,8.449100,-7.598482,-8.990493,-4.990341,0.213364,-1.588100,0.627898,-2.522572,-0.013987,1.713797,-9.502695,3.103677,-1.032715,9.080218,6.103540,2.185119,-0.192751,-6.635784,9.539970,-8.085609,-7.536271,-2.078633,3.729041,3.816004,-8.381658,0.164800,-0.427549,-2.676216,-9.018438,2.073704,0.709832,-2.229496,-9.036938,1.129077,-1.615064,-6.082779,-1.289846,-9.451438,-0.480490,8.609604,1.707772,7.913547,-4.096122,-7.266347,5.316115,-0.204464,-0.410569,-2.618318,9.310734,-6.565909,6.860851,-4.377325,3.886816,-7.863131,-6.535024,-7.301918,-3.811302,9.884500,6.061618,0.357861,1.463892,-5.153037,3.720190,-1.863812,-7.418930,-6.172471,-7.870673,8.352259,4.458123,0.607480,-5.307219,2.490140,6.119281,7.630072,-4.071760,0.316288,-1.105146,8.917238,4.286148,-3.574367,4.852619,4.599234,4.907271,5.247520,-1.842959,-2.827298,6.817486,-3.764956,-9.958242,1.451622,-9.847888,1.889531,-2.792561,-6.874903,-8.707646,5.197125,5.462936,2.338309,-8.491276,-0.209363,2.845271,7.626849,-0.304151,8.942555,1.054739,-8.634477,-9.679347,-1.647956,-7.857911,-6.778165,2.621171,-3.172281,-2.687666,1.967801,2.586719,-4.441335,-6.077044,4.297291,5.664529,1.427543,2.100529,-8.969294,0.691000,5.302254,-4.055618,1.993755,3.100266,-7.173252,3.059882,-2.189334,5.038178,-9.169154,-2.425674,4.553291,-5.904650,-2.655457,-6.432977,5.421312,1.104730,4.843504,-7.572087,1.203696,2.403898,-5.986341,7.194147,9.388191,5.501633,-3.457458,9.272905,3.712310,6.262839,3.559549,-8.043884,4.141266,1.840873,7.402103,7.746572,-9.690184,0.534422,-8.424203,2.046892,1.372735,3.364804,4.278059,4.720508,-2.657723,-5.080154,-0.785811,0.741307,6.412633,1.363216,-9.773248,2.808667,7.617663,5.371780,-7.876001,6.227181,2.274463,7.925266,8.771457,8.657025,8.344592,9.409283,0.267461,-7.981156,-3.656966,2.591752,-0.285826,7.344103,9.700857,6.239767,2.483135,-9.399892,8.587502,0.724182,-4.998381,1.692095,8.428162,-9.735887,9.477174,2.934138,-0.358149,-5.441749,4.649426,-1.887334,1.547400,-9.265762,-8.929187,9.893156,7.651195,-8.608274,-6.745739,7.554090,-6.314400,-4.351584,-2.959240,4.968324,-5.204749,-7.226592,9.448758,1.975535,-9.850334,-4.016699,-2.078269,9.020060,-7.606210,1.898627,3.115348,-0.771875,-6.855629,4.995012,-3.725984,1.199527,-8.080318,2.791091,-1.256674,-5.785483,-4.264226,5.238396,6.758920,-5.858966,-0.174840,-9.443683,4.796085,-4.485298,4.094494,-9.118563,-1.171959,-7.826886,4.870047,2.359951,-7.455775,2.239977,-1.672048,4.882997,7.952594,8.089686,-4.604684,4.027836,3.593427,6.208202,8.197441,-0.664006,-4.046985,-8.468880,-6.501239,5.106624,-1.368942,-7.432314,-2.043494,-8.186453,0.590400,3.999042,3.369211,4.102668,-0.374868,7.606754,9.949115,-2.862039,-2.305171,9.502179,-3.812157,-7.281892,8.098368,4.017280,-1.205239,0.364468,5.501523,8.418558,1.094689,3.648599,-7.351407,3.618619,3.358743,3.490295,6.190444,-1.220228,1.134655,-0.322698,4.520560,-5.801718,5.904810,-9.042397,8.302620,5.032103,-4.527038,-9.784583,3.552710,-5.762914,7.217837,-9.070325,1.601256,-2.558461,7.209137,4.306691,-0.945788,1.263662,-5.154772,6.478147,3.809058,-0.221299,8.205772,-9.194586,7.339682,0.136239,-5.206816,4.107067,6.775873,4.162050,-3.625911,8.194532,-6.019562,-8.043546,-4.172977,-1.413751,-2.033121,-4.595247,-7.324577,-3.777677,6.492499,-9.890926,4.384462,0.621816,-1.937560,-0.123380,-0.270404,6.808753,-5.147378,1.419396,4.291404,-5.673206,-1.880151,-9.575289,-5.867167,-7.178844,-8.941713,1.980182,-7.453635,-1.196396,8.975957,6.411300,5.665366,8.323519,-4.802756,-1.466905,-3.100731,5.213063,5.262343,0.332985,-5.064909,-9.934245,1.961080,7.400299,-0.243300,-8.593254,-1.355319,9.891932,-7.523852,5.916194,0.099930,8.871265,-6.950125,2.216229,-2.181102,6.421593,-9.002478,2.779415,-3.487638,-6.596613,7.276335,-2.692446,-5.141652,5.860517,-4.620940,-1.617908,-4.963346,-2.758705,-4.511879,7.779726,-0.838222,-7.748793,-9.011814,-6.927307,-2.402911,9.229934,5.549260,5.317868,-6.414475,7.290577,4.141019,-4.432588,0.177416,-4.798566,-9.385952,-8.335147,5.993104,-4.095372,-0.481834,-3.994917,6.034658,-3.482548,7.254935,-2.480252,-5.160718,8.636880,6.770720,-3.439683,-2.938301,8.515841,-7.622944,9.903662,-3.305809,7.514389,1.843521,0.248169,7.585941,5.917722,8.584747,-0.728838,2.855026,0.197166,-1.580199,3.305557,-2.812774,6.417194,-7.688947,-2.712450,-7.181274,-1.889309,5.904301,-4.759489,6.339494,-7.027718,-4.443137,8.129414,-4.680323,-0.663158,-5.504335,4.347134,-4.760314,2.091618,7.196751,7.922274,1.565567,3.676900,0.281413,4.280681,-8.721297,8.549622], dtype = "float64")#candidate|4020|(770,)|const|float64
call_4018 = relay.TupleGetItem(func_3647_call(relay.reshape(const_4019.astype('int16'), [11, 12, 10]), relay.reshape(const_4019.astype('int16'), [11, 12, 10]), relay.reshape(const_4020.astype('float64'), [77, 10]), ), 1)
call_4021 = relay.TupleGetItem(func_3651_call(relay.reshape(const_4019.astype('int16'), [11, 12, 10]), relay.reshape(const_4019.astype('int16'), [11, 12, 10]), relay.reshape(const_4020.astype('float64'), [77, 10]), ), 1)
func_764_call = mod.get_global_var('func_764')
func_769_call = mutated_mod.get_global_var('func_769')
var_4023 = relay.var("var_4023", dtype = "float32", shape = (96,))#candidate|4023|(96,)|var|float32
var_4024 = relay.var("var_4024", dtype = "float32", shape = (490, 1))#candidate|4024|(490, 1)|var|float32
call_4022 = relay.TupleGetItem(func_764_call(relay.reshape(var_4023.astype('float32'), [2, 12, 4]), relay.reshape(var_4023.astype('uint64'), [2, 12, 4]), relay.reshape(var_4024.astype('float32'), [490,]), ), 2)
call_4025 = relay.TupleGetItem(func_769_call(relay.reshape(var_4023.astype('float32'), [2, 12, 4]), relay.reshape(var_4023.astype('uint64'), [2, 12, 4]), relay.reshape(var_4024.astype('float32'), [490,]), ), 2)
output = relay.Tuple([call_4008,call_4018,const_4019,const_4020,call_4022,var_4023,var_4024,])
output2 = relay.Tuple([call_4009,call_4021,const_4019,const_4020,call_4025,var_4023,var_4024,])
func_4034 = relay.Function([var_4023,var_4024,], output)
mod['func_4034'] = func_4034
mod = relay.transform.InferType()(mod)
var_4035 = relay.var("var_4035", dtype = "float32", shape = (96,))#candidate|4035|(96,)|var|float32
var_4036 = relay.var("var_4036", dtype = "float32", shape = (490, 1))#candidate|4036|(490, 1)|var|float32
output = func_4034(var_4035,var_4036,)
func_4037 = relay.Function([var_4035,var_4036,], output)
mutated_mod['func_4037'] = func_4037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_4071 = relay.TupleGetItem(func_3494_call(), 0)
call_4072 = relay.TupleGetItem(func_3496_call(), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
const_4102 = relay.const([[-6,10,3,5,-7,-5,-5,2,-5,3,-2,6,-4,6,-10,-8,1,4,-7,9,-10,-3,-1,6,-1,-7,9,-4,-6,4,-9,6,8,3,-3,-1,7,7,-10,-3,1,4,5,-5,-10,-9,-9,8,7,5,4,-2,-10,10,-9,9,-4,1,10,-2,-3,1,8,-1,3,-6,10,9,-6,-9,1,-6,-10,-6,-1,3,1,-7,-5,3,-4,4,-6,5,-1,6,2,-1,-9,5,5,-5,1,-5,-4,-4,-9,4,1,-7,2,6,-7,6,-4,-5,8,5,-6,8,1,6,-8,5,-10,4,8,-7,7,-1,4,-9,-8,4,7,1,3,5,-8,3,-3,-1,6,-5,3,1,-2,2,9,1,7,3,9,-3,10,-6,-2,-3,-7,9,-6,7,-5,7,2,-7,10,-1,9,6,10,4,1,10,8,7,-2,-2,-3,10,-5,-6,-8,-3,-1,-8,-5,2,-10,5,2,1,-6,2,10,-5,-8,1,10,-2,-5,3,-3,-5,9,-10],[-1,6,4,9,7,-10,-4,8,-6,-6,-3,2,-6,-8,8,6,10,9,10,-7,-9,-2,7,1,-2,-4,-8,2,3,8,9,1,8,3,-5,4,5,-10,-6,4,8,5,-2,9,-9,7,3,-7,-5,8,9,7,-8,6,10,3,8,3,7,5,10,-3,-9,3,-1,5,3,-5,1,-6,-1,-8,-9,1,4,1,10,-9,4,-5,1,6,4,-6,3,5,-10,-7,5,-4,-5,-6,-7,-4,-5,6,10,1,-3,2,-8,4,-1,7,-8,-8,-8,-8,9,7,-2,1,7,10,10,10,1,6,-4,10,5,-4,2,9,-5,-5,-9,1,-10,-8,4,-6,9,-7,-6,6,2,-4,2,-4,-10,-4,-5,5,-9,-4,8,-8,-4,1,-9,-1,6,7,-1,-5,-10,-9,7,2,6,10,8,2,-2,-1,-1,4,-10,-5,2,1,2,-8,-6,6,-8,8,4,-7,-7,9,-3,-3,-6,5,2,-1,-5,-5,1,5,-8,5,-4,-10],[3,7,4,8,-2,-5,8,-9,7,6,-5,-5,-3,-5,-3,8,-4,-1,-8,-8,3,-5,9,7,-7,-4,-5,3,9,7,-5,-7,3,-9,8,-1,9,3,-9,-6,3,-7,8,6,-10,-7,-9,5,-2,-3,10,-1,-8,-8,5,3,5,4,-2,9,5,-8,-2,-6,-5,-9,1,-3,6,-9,-9,-7,-4,6,-5,-9,-2,-5,-8,-3,2,-8,-1,5,6,6,-4,-8,8,-6,10,3,10,8,-3,-3,-2,7,3,1,-5,5,-4,10,6,4,9,7,7,1,8,-4,-6,6,-2,9,5,-9,-6,10,-2,7,2,-5,1,9,-10,10,4,5,4,-5,9,-10,2,-6,-4,8,-7,7,8,5,-8,2,-4,2,-3,9,-1,-7,-8,-7,-6,-10,-9,10,2,-5,-2,-4,6,-6,-3,2,-3,6,4,8,10,2,7,-7,7,1,1,-8,1,7,-9,7,8,5,-9,-3,-3,8,-6,8,9,7,-5,6,-10,-10,-1,-1],[2,-2,-1,10,9,3,-7,1,10,-5,-4,1,-5,3,7,5,-1,10,10,-7,10,-6,-3,-2,-6,10,-9,4,-3,7,2,-1,9,-7,3,-9,8,-9,-4,-5,-9,2,7,1,-4,10,-2,-9,4,3,-1,-10,8,9,-10,2,-1,-7,-10,-8,7,-10,-1,-2,-4,10,-7,-2,10,9,-8,-1,-7,9,7,2,7,4,1,-3,-1,8,-5,-5,4,7,4,2,6,-9,-9,8,-4,-4,-10,-10,3,-1,10,3,7,-7,8,4,-1,9,-5,5,-1,6,7,-4,-6,9,10,-4,-4,10,10,-9,7,10,5,1,6,9,3,-4,-8,-7,-6,7,-1,5,-1,4,-2,-1,-10,5,10,-9,-9,4,-7,8,-3,7,-4,-5,7,-4,-4,8,-7,-1,-8,10,5,-7,-6,-8,-1,-2,9,9,-9,-7,-8,-8,-9,-2,1,-6,-9,-1,-9,-5,-5,-5,-6,-10,-1,-7,-1,6,6,-9,-3,1,8,-6,-10,9,-9,10],[3,10,7,3,-4,10,-8,-7,1,-10,2,10,-10,-9,-5,4,-9,2,-4,5,-5,-10,-1,-1,-4,5,-10,8,-4,-8,-6,-9,-7,-2,-7,10,10,-4,-6,-5,-9,-8,5,-10,5,-8,-10,-7,-7,7,7,-5,-7,10,-5,8,7,-4,2,-3,-1,9,7,8,8,-9,5,2,4,-9,-8,6,1,-10,-5,-3,4,-10,1,-9,5,3,-2,4,-8,-9,-8,-4,7,5,8,8,9,7,6,-6,-1,-3,-4,3,7,-10,8,-5,9,5,-7,1,1,-5,-1,-1,2,9,8,7,3,2,3,-4,-9,-2,-4,-2,3,5,8,8,8,5,-9,-5,2,-4,7,7,-9,-2,-4,-1,10,10,-1,-8,-8,-7,5,-9,-9,2,-1,2,10,4,-8,10,10,-6,2,2,-6,7,10,10,1,7,-3,-3,-5,-6,3,-1,-7,5,-2,9,7,1,4,-9,5,6,-9,10,7,8,-3,-4,-7,-10,-8,-7,7,-2,-9,-5],[-9,10,-1,3,-10,1,-2,-4,5,-8,-6,-8,2,5,1,4,2,-9,8,-2,-2,2,7,-3,-1,-7,-5,-2,-5,6,5,-9,6,2,9,-10,9,7,9,10,10,-9,-2,-1,5,4,-9,-9,-10,-1,-6,-2,-3,1,-8,4,-8,-2,-1,7,2,6,-4,-8,-7,-3,-10,-8,-3,-8,9,6,2,-6,-3,-9,-4,-8,-1,3,7,-8,1,3,4,3,-1,1,-9,6,-1,6,-9,6,-3,7,6,-9,3,1,1,-3,6,-8,10,-6,-9,8,7,10,-4,-9,4,9,10,-7,7,5,-3,-6,-7,5,5,7,-1,3,8,8,-10,1,7,10,9,5,8,-4,6,-4,7,4,-10,3,-8,2,-6,-7,1,6,3,-2,5,-10,7,3,-5,10,-1,-5,-2,7,10,-2,3,2,9,9,-10,-4,-2,3,-3,7,7,-5,9,-8,7,-9,-6,-6,-5,-1,-5,3,4,-7,10,1,5,6,-9,2,-4,6,-4,-9],[9,-3,4,2,-4,3,2,-1,1,1,-4,7,6,2,-10,-8,-8,3,-8,10,-3,-8,-10,-4,-10,2,-9,-4,4,4,4,5,4,-5,-3,6,1,-5,-7,-1,-3,1,-4,9,-10,4,-7,-7,6,-5,9,7,7,1,10,-9,5,-8,-4,8,2,-9,10,-1,-9,5,10,-10,-5,-9,2,-9,9,-7,4,8,-7,6,2,-4,-6,1,-1,2,-1,-1,10,-2,-7,3,-4,9,9,-1,-5,-4,-1,8,7,8,-1,-2,8,2,-3,-7,8,-10,-3,10,5,-10,10,-10,6,-6,6,-7,-2,-10,-6,3,4,10,6,5,3,-10,3,-1,-10,5,-7,-2,3,-5,10,-2,-3,2,-2,9,-4,10,8,6,10,-4,4,-5,8,4,10,-4,10,-10,-3,-10,7,4,-3,5,-10,8,7,-10,5,-6,-2,8,6,-6,7,8,6,-3,-10,2,-1,5,6,-4,-3,-6,1,-9,-1,6,9,-4,-3,5,7,-5,-8,6],[-8,-2,1,6,-3,-8,7,2,5,-2,5,4,-5,-10,-1,-4,9,8,6,-3,-8,-3,3,3,-3,10,4,-4,5,1,-2,-3,-3,-2,-6,9,-4,-8,-10,-8,-8,3,-2,-3,10,-1,1,5,4,2,-10,3,-5,-2,-4,8,-9,-5,7,-6,-2,-3,-2,6,4,7,10,2,2,8,6,-9,-8,-6,2,4,-10,6,5,-9,1,5,-5,-7,-2,-5,3,-1,-6,-6,8,4,-8,9,2,2,-3,5,5,7,8,-6,-5,2,4,2,9,-2,-4,-10,-1,2,-1,-6,-10,6,4,-1,-8,10,10,-4,6,5,8,-10,10,-5,-10,7,-3,-10,-4,-5,3,-2,7,-1,3,5,-3,-10,-9,-4,-5,9,-6,2,9,10,-5,4,-10,5,2,5,-6,-10,2,-4,-5,-3,-3,8,-4,-3,-1,-1,1,-6,-7,-10,-8,8,2,-4,-6,-7,4,10,-4,-9,9,7,5,2,-6,2,5,-3,1,-6,-6,5,-10,2],[-7,2,8,-3,5,-2,2,-3,6,-3,-5,4,-2,3,-4,-8,3,-7,9,3,-9,-3,1,-5,-3,-3,-9,-10,-6,5,-6,-2,-2,2,-1,7,10,-9,7,-7,6,1,-7,-8,-3,-6,7,10,7,3,6,7,10,-8,-2,9,5,3,10,4,4,4,7,1,5,1,-3,-9,4,2,-2,-6,-1,-6,2,-6,-1,-8,-4,2,4,-1,4,2,7,6,4,-4,-10,-8,4,9,-4,-4,9,-8,-1,-1,-8,3,-6,-5,-10,5,-3,2,-9,-1,-9,9,-10,2,7,6,-6,-1,7,-5,6,9,-5,7,4,-4,2,3,-4,3,8,-5,8,9,3,-6,-5,10,-8,3,4,6,-5,-8,-4,8,-10,-8,-10,-6,2,6,7,-7,-3,-6,8,-3,-1,-1,9,6,-4,-10,1,9,-9,9,3,2,6,2,-2,-8,3,-7,-9,-4,7,-7,-9,2,-3,4,6,-1,6,8,-8,8,-8,-6,7,-9,-1,3,-7,7],[-5,-8,-9,-5,2,-2,10,4,4,-4,-1,7,3,3,4,-10,3,10,-6,-6,6,3,-7,-3,-8,-5,-2,-10,-2,-5,-2,-3,-2,6,6,10,-1,10,-1,-10,2,7,-6,8,-1,4,7,-10,-10,1,-2,8,4,-1,2,4,-7,-9,2,-10,-10,8,-2,8,-7,-8,10,2,5,-8,3,3,5,-4,9,9,10,7,-8,-4,4,3,9,9,-9,2,-9,3,-7,10,-10,-5,8,10,9,-10,7,8,-1,9,3,1,4,-5,-8,7,6,6,-4,-10,2,5,-7,5,-9,5,4,4,-9,-1,8,5,-1,-9,-9,7,3,3,6,-6,-2,9,-9,6,-5,-5,6,-8,10,2,-8,-3,3,-1,-3,6,-9,3,-9,6,-7,-7,-2,2,2,-1,2,-3,9,-6,10,10,-6,-7,-2,-8,-5,-4,10,9,9,-4,4,-8,1,7,-3,-1,10,5,-3,2,10,5,1,3,3,-3,-5,10,-2,-5,4,5,6,-5]], dtype = "uint8")#candidate|4102|(10, 196)|const|uint8
call_4101 = relay.TupleGetItem(func_125_call(relay.reshape(const_4102.astype('uint8'), [14, 10, 14]), relay.reshape(const_4102.astype('uint8'), [14, 10, 14]), ), 0)
call_4103 = relay.TupleGetItem(func_128_call(relay.reshape(const_4102.astype('uint8'), [14, 10, 14]), relay.reshape(const_4102.astype('uint8'), [14, 10, 14]), ), 0)
var_4105 = relay.var("var_4105", dtype = "float32", shape = (3, 9, 16))#candidate|4105|(3, 9, 16)|var|float32
bop_4106 = relay.bitwise_xor(call_4071.astype('uint8'), var_4105.astype('uint8')) # shape=(3, 9, 16)
bop_4109 = relay.bitwise_xor(call_4072.astype('uint8'), var_4105.astype('uint8')) # shape=(3, 9, 16)
output = relay.Tuple([call_4101,const_4102,bop_4106,])
output2 = relay.Tuple([call_4103,const_4102,bop_4109,])
func_4119 = relay.Function([var_4105,], output)
mod['func_4119'] = func_4119
mod = relay.transform.InferType()(mod)
mutated_mod['func_4119'] = func_4119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4120 = relay.var("var_4120", dtype = "float32", shape = (3, 9, 16))#candidate|4120|(3, 9, 16)|var|float32
func_4119_call = mutated_mod.get_global_var('func_4119')
call_4121 = func_4119_call(var_4120)
output = call_4121
func_4122 = relay.Function([var_4120], output)
mutated_mod['func_4122'] = func_4122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4135 = relay.var("var_4135", dtype = "float32", shape = (1, 3, 6))#candidate|4135|(1, 3, 6)|var|float32
uop_4136 = relay.log(var_4135.astype('float32')) # shape=(1, 3, 6)
func_2787_call = mod.get_global_var('func_2787')
func_2790_call = mutated_mod.get_global_var('func_2790')
const_4160 = relay.const([[-5.648624,9.002202],[-2.670636,-8.188308],[-3.816276,1.280426],[8.383060,9.296612],[-7.106274,0.171100],[4.664611,-3.867900],[-4.807982,-2.960406],[3.682950,4.232523],[5.921834,-9.951241],[-6.131333,3.367550],[-2.402500,8.364983],[7.349794,-9.267470],[-4.582105,2.271275],[-5.995907,-9.000617],[0.197040,4.224898],[-1.538510,-7.094569],[9.078671,9.351775],[9.495855,-3.870941],[6.683113,-0.235095],[-7.373445,-2.018329],[-9.343949,1.574267],[-2.080032,-1.993676],[-6.769807,-9.804456],[-6.957804,-1.099819],[-6.439648,7.770486],[-0.657438,3.004461],[6.723391,8.764876],[-6.585836,5.433988],[2.254285,7.896041],[-0.004705,-8.931577],[4.167217,8.540702],[2.228540,8.503314],[9.005006,-5.652734],[-0.981444,6.995990],[7.398606,-7.948300],[9.460528,-0.991643],[-9.829368,-9.811063],[0.567391,3.895273],[8.839334,-5.966405],[0.705351,-7.396118],[2.990108,-1.415950],[-7.594218,8.820338],[-0.739160,-0.595183],[6.166446,8.828998],[-9.155540,3.741514]], dtype = "float64")#candidate|4160|(45, 2)|const|float64
call_4159 = relay.TupleGetItem(func_2787_call(relay.reshape(const_4160.astype('float64'), [90,])), 2)
call_4161 = relay.TupleGetItem(func_2790_call(relay.reshape(const_4160.astype('float64'), [90,])), 2)
func_3767_call = mod.get_global_var('func_3767')
func_3769_call = mutated_mod.get_global_var('func_3769')
call_4166 = relay.TupleGetItem(func_3767_call(), 0)
call_4167 = relay.TupleGetItem(func_3769_call(), 0)
output = relay.Tuple([uop_4136,call_4159,const_4160,call_4166,])
output2 = relay.Tuple([uop_4136,call_4161,const_4160,call_4167,])
func_4171 = relay.Function([var_4135,], output)
mod['func_4171'] = func_4171
mod = relay.transform.InferType()(mod)
mutated_mod['func_4171'] = func_4171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4172 = relay.var("var_4172", dtype = "float32", shape = (1, 3, 6))#candidate|4172|(1, 3, 6)|var|float32
func_4171_call = mutated_mod.get_global_var('func_4171')
call_4173 = func_4171_call(var_4172)
output = call_4173
func_4174 = relay.Function([var_4172], output)
mutated_mod['func_4174'] = func_4174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3672_call = mod.get_global_var('func_3672')
func_3674_call = mutated_mod.get_global_var('func_3674')
call_4234 = relay.TupleGetItem(func_3672_call(), 1)
call_4235 = relay.TupleGetItem(func_3674_call(), 1)
output = relay.Tuple([call_4234,])
output2 = relay.Tuple([call_4235,])
func_4238 = relay.Function([], output)
mod['func_4238'] = func_4238
mod = relay.transform.InferType()(mod)
mutated_mod['func_4238'] = func_4238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4238_call = mutated_mod.get_global_var('func_4238')
call_4239 = func_4238_call()
output = call_4239
func_4240 = relay.Function([], output)
mutated_mod['func_4240'] = func_4240
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4274 = relay.const([[[-2,4,8],[9,-4,-10],[-5,-8,3],[10,-5,-6],[7,-5,4],[-10,-7,-8],[4,2,6],[-10,9,7]],[[-2,-8,4],[-6,-7,7],[5,10,10],[6,-7,-4],[10,-5,-4],[1,-1,-4],[6,7,-9],[5,-10,7]],[[-6,7,-9],[8,7,-8],[-8,-8,1],[6,-10,-1],[7,-4,-4],[8,1,-3],[8,-2,5],[-5,-1,3]],[[-5,-1,2],[-3,-1,-8],[5,5,1],[8,9,4],[10,-8,4],[-4,10,3],[7,-1,-2],[-3,4,5]]], dtype = "int16")#candidate|4274|(4, 8, 3)|const|int16
var_4275 = relay.var("var_4275", dtype = "int16", shape = (4, 8, 3))#candidate|4275|(4, 8, 3)|var|int16
bop_4276 = relay.subtract(const_4274.astype('int16'), relay.reshape(var_4275.astype('int16'), relay.shape_of(const_4274))) # shape=(4, 8, 3)
bop_4312 = relay.right_shift(const_4274.astype('int16'), relay.reshape(var_4275.astype('int16'), relay.shape_of(const_4274))) # shape=(4, 8, 3)
func_1797_call = mod.get_global_var('func_1797')
func_1802_call = mutated_mod.get_global_var('func_1802')
var_4316 = relay.var("var_4316", dtype = "float64", shape = (208,))#candidate|4316|(208,)|var|float64
var_4317 = relay.var("var_4317", dtype = "float32", shape = (490,))#candidate|4317|(490,)|var|float32
call_4315 = relay.TupleGetItem(func_1797_call(relay.reshape(var_4316.astype('float64'), [16, 13, 1]), relay.reshape(var_4275.astype('float32'), [96,]), relay.reshape(var_4317.astype('float32'), [245, 2]), ), 2)
call_4318 = relay.TupleGetItem(func_1802_call(relay.reshape(var_4316.astype('float64'), [16, 13, 1]), relay.reshape(var_4275.astype('float32'), [96,]), relay.reshape(var_4317.astype('float32'), [245, 2]), ), 2)
func_2066_call = mod.get_global_var('func_2066')
func_2070_call = mutated_mod.get_global_var('func_2070')
const_4324 = relay.const([-3,1,5,7,-3,-2,-10,2,-10,-8,8,-4,9,-6,3,4,-4,-5,9,6,-7,-10,7,-8,6,-5], dtype = "uint8")#candidate|4324|(26,)|const|uint8
var_4325 = relay.var("var_4325", dtype = "uint8", shape = (234,))#candidate|4325|(234,)|var|uint8
call_4323 = relay.TupleGetItem(func_2066_call(relay.reshape(const_4324.astype('uint8'), [13, 2, 1]), relay.reshape(var_4325.astype('uint8'), [13, 2, 9]), ), 0)
call_4326 = relay.TupleGetItem(func_2070_call(relay.reshape(const_4324.astype('uint8'), [13, 2, 1]), relay.reshape(var_4325.astype('uint8'), [13, 2, 9]), ), 0)
var_4331 = relay.var("var_4331", dtype = "float32", shape = (490,))#candidate|4331|(490,)|var|float32
bop_4332 = relay.divide(var_4317.astype('float64'), relay.reshape(var_4331.astype('float64'), relay.shape_of(var_4317))) # shape=(490,)
output = relay.Tuple([bop_4276,bop_4312,call_4315,var_4316,call_4323,const_4324,var_4325,bop_4332,])
output2 = relay.Tuple([bop_4276,bop_4312,call_4318,var_4316,call_4326,const_4324,var_4325,bop_4332,])
func_4336 = relay.Function([var_4275,var_4316,var_4317,var_4325,var_4331,], output)
mod['func_4336'] = func_4336
mod = relay.transform.InferType()(mod)
mutated_mod['func_4336'] = func_4336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4336_call = mutated_mod.get_global_var('func_4336')
var_4338 = relay.var("var_4338", dtype = "int16", shape = (4, 8, 3))#candidate|4338|(4, 8, 3)|var|int16
var_4339 = relay.var("var_4339", dtype = "float64", shape = (208,))#candidate|4339|(208,)|var|float64
var_4340 = relay.var("var_4340", dtype = "float32", shape = (490,))#candidate|4340|(490,)|var|float32
var_4341 = relay.var("var_4341", dtype = "uint8", shape = (234,))#candidate|4341|(234,)|var|uint8
var_4342 = relay.var("var_4342", dtype = "float32", shape = (490,))#candidate|4342|(490,)|var|float32
call_4337 = func_4336_call(var_4338,var_4339,var_4340,var_4341,var_4342,)
output = call_4337
func_4343 = relay.Function([var_4338,var_4339,var_4340,var_4341,var_4342,], output)
mutated_mod['func_4343'] = func_4343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4005_call = mod.get_global_var('func_4005')
func_4007_call = mutated_mod.get_global_var('func_4007')
call_4430 = relay.TupleGetItem(func_4005_call(), 0)
call_4431 = relay.TupleGetItem(func_4007_call(), 0)
func_3297_call = mod.get_global_var('func_3297')
func_3299_call = mutated_mod.get_global_var('func_3299')
var_4463 = relay.var("var_4463", dtype = "int8", shape = (252,))#candidate|4463|(252,)|var|int8
call_4462 = func_3297_call(relay.reshape(var_4463.astype('int8'), [12, 3, 7]))
call_4464 = func_3297_call(relay.reshape(var_4463.astype('int8'), [12, 3, 7]))
bop_4481 = relay.right_shift(call_4430.astype('uint32'), var_4463.astype('uint32')) # shape=(3, 9, 252)
bop_4484 = relay.right_shift(call_4431.astype('uint32'), var_4463.astype('uint32')) # shape=(3, 9, 252)
bop_4495 = relay.multiply(bop_4481.astype('uint32'), var_4463.astype('uint32')) # shape=(3, 9, 252)
bop_4498 = relay.multiply(bop_4484.astype('uint32'), var_4463.astype('uint32')) # shape=(3, 9, 252)
bop_4501 = relay.mod(bop_4481.astype('float64'), relay.reshape(bop_4495.astype('float64'), relay.shape_of(bop_4481))) # shape=(3, 9, 252)
bop_4504 = relay.mod(bop_4484.astype('float64'), relay.reshape(bop_4498.astype('float64'), relay.shape_of(bop_4484))) # shape=(3, 9, 252)
func_422_call = mod.get_global_var('func_422')
func_424_call = mutated_mod.get_global_var('func_424')
const_4506 = relay.const([-5.973179,9.386113,6.865740,-8.088521,-7.232387,-6.948448,7.969091,-3.079165,7.160734,9.003255,-9.503539,7.674886,5.119635,-4.059909,1.842340,3.485926,7.833800,0.753021,7.674945,-7.661507,7.363552,-9.704857,1.847593,-9.503779,0.669915,7.047003,-3.359430,-4.540737,-7.133677,-4.684443,1.362223,-7.507219,6.209220,0.206905,9.860499,-0.115095,3.661664,8.473327,9.980110,1.072847,-2.640619,-4.600125,-0.727069,-0.214620,4.744782,-4.690661,-4.850849,6.575159,-2.451233,2.772330,-5.549172,8.428899,-7.819809,1.359818,-8.084535,-3.304759,1.390666,0.623774,7.253792,5.780138,0.134179,8.892891,-6.228332,8.613237,-3.830113,-9.951364,-0.932880,-2.253854,-2.116780,-0.454606,-7.372829,4.196088,2.751708,9.010541,7.231439,2.697149,8.743482,-0.556815,-8.465065,-5.359760,-2.271697,0.493939,-7.361480,-0.905345,9.177853,9.419228,4.397571,-4.127741,-4.800929,-6.272878,-5.433176,-5.764066,-1.461981,2.416158,-2.125465,0.678322,-4.720785,4.787449,-9.833152,1.804105,-1.327905,-0.499410,-1.447874,-6.720261,-2.373838,-2.990113,-4.765287,-2.206357,5.276771,9.552142,-7.953232,0.965870,-9.687155,2.408555,-7.913514,-8.136096,-9.979422,-2.745281,5.335006,6.000025,1.536547,-0.879816,-2.173844,4.194835,-3.306559,6.481669,7.444740,7.615933,3.939649,1.230371,-8.397241,-9.079365,-6.129111,1.351184,5.522603,4.151792,-1.041597,-3.972723,5.925550,-6.409100,6.925700,-9.482637,-8.819707,-8.770603,-2.823445,0.353117,2.966786,0.011278,1.579922,-7.045035,8.271979,7.218620,0.373707,-3.671946,1.673840,0.274900,-6.846139,-1.943980,4.887158,-7.207240,-3.374566,-4.673575,5.965649,1.428897,-4.985089,9.139287,5.717590,7.428062,7.141121,3.096997,9.332342,2.623134,-5.450968,-9.266693,-8.009918,-5.720419,2.337913,-5.241239,-6.349618,1.056445,3.710500,3.770741,0.361462,-4.014428,-3.627738,-4.468305,-5.282922,-0.519302,2.833229,-6.256128,1.895393,-2.819652,-0.888392,-8.882406,-6.476359,6.315348,-5.759366,-2.578322,-4.851232,-9.031686,8.341829,-8.110719,-4.549611,-8.226416,1.796089,7.615741,2.943445,2.310034,5.195731,8.303234,3.348434,5.538327,3.584710,-7.883751,-9.287878,-7.567254,4.767490,7.128372,5.072107,5.050321,9.812794,-7.282581,-4.540725,-3.294803,5.818532,3.407811,-8.871419,-7.820106,-9.526790,5.834722,-2.582622,-4.706282,-7.866046,3.772649,-5.847343,3.716440,-8.192202,-1.866917,2.373759,-8.713005,-9.004629,-3.415421,-3.938687,-2.835552,0.525506,-1.859325,-0.263578,5.740551,-5.400497,-6.385650,4.228988,-5.144781,2.954663,-2.903385,5.778739,9.782148,-8.100500,2.964151,2.356306,3.182850,8.842206,-8.347378,3.995850,9.148020,-7.468790,-3.811890,1.306571,8.752342,9.527098,9.843129,-5.405089,3.556651,-0.251102,-7.893670,-9.731475,-9.461319,7.214716,6.299737,-5.414836,-6.400971,3.714462,-6.647129,-1.509391,5.747703,7.010229,-6.520679,-2.194600,-0.442071,-6.425585,-2.959535,0.581051,4.293120,9.848019,0.376831,5.921161,-0.515334,-1.755906,2.061102,4.140434,-6.449317,0.212652,-2.577391,-0.569122,2.628789,3.678595,-2.971507,-1.264805,8.860665,-7.852887,-1.334241,9.827721,-8.555540,6.185853,-0.874314,5.073680,-6.164166,1.509809,-5.869778,5.170907,8.421032,6.135781,8.764242,5.529402,5.379782,0.301402,5.163691,-2.479825,-4.014255,8.191446,-1.257346,-4.716526,2.202180,-8.673789,3.340860,1.086791,-3.496620,-8.794208,4.100289,7.579828,-7.328942,-6.346254,0.674263,5.995077,-7.793497,-3.523306,1.879752,5.741292,-8.617994,-5.993923,-3.163428,-9.259552,-9.783495,-6.741302,-2.380970,-1.763872,4.263637,-5.823090,-3.305224,-2.175003,-6.582286,9.080694,3.099580,3.073030,-3.133368,-8.835339,8.270227,-1.652024,0.205576,6.978185,-2.557982,-6.788505,-7.181384,-6.079663,5.953072,-0.929392,8.687682,6.203230,-8.078640,-1.555039,8.735046,1.750744,-8.606568,-9.840032,9.361792,5.822529,-5.923586,3.380340,6.807621,5.851381,-6.343654,-9.678797,3.941529,4.878161,-7.570236,1.584546,-9.835397,9.754607,-6.413071,-9.220417,9.774355,0.428620,-5.025349,5.163018,-0.672521,-0.242586,-6.768522,-0.247974,-8.122249,5.323534,6.256645,-5.943888,-0.762244,-8.762630,-1.236491,-8.164978,8.731047,1.615972,-1.062277,6.008066,7.493390,8.337714,-3.506530,7.562439,1.411143,-6.446403,0.159720,-7.884243,-1.716368,-8.899563,-2.112481,-4.771901,-7.800759,1.254821,-2.949013,1.081248,-9.396646,6.758323,-2.894799,7.918182,-0.783684,0.115183,3.551885,2.283211,-8.711838,-6.565483,-0.811483,-4.550962,-5.122901,1.566364,-5.747932,-0.272480,5.200103,-4.297983,-9.202005,-2.501847,4.436705,8.071590,9.295868,-0.106923,-7.449980,-3.268683,1.130032,-5.041109,-1.810381,6.162907,-1.336769,3.307862,2.358058,-8.008620,-5.998960,-6.611547,-4.128661,-5.955917,-1.568673,5.838852,2.744579,4.718907,7.534481,-5.889564,8.724351,-9.071269,9.835337,-0.456534,6.055517,-1.486274,9.217015,5.108534,-5.365722,0.539835,-1.630889], dtype = "float32")#candidate|4506|(490,)|const|float32
call_4505 = relay.TupleGetItem(func_422_call(relay.reshape(const_4506.astype('float32'), [7, 10, 7])), 5)
call_4507 = relay.TupleGetItem(func_424_call(relay.reshape(const_4506.astype('float32'), [7, 10, 7])), 5)
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
const_4511 = relay.const([0.088891,6.531118,-3.922989,3.682474,-7.964305,-2.642219,-1.816454,2.649758,2.083716,-1.993902,5.562293,2.184920,1.759716,3.561776,-0.603587,1.349451,3.463053,-0.683990,-5.472142,0.276195,1.241590,-4.979861,6.132079,-6.571814,2.580119,7.122121,6.139115,9.291441,7.783509,5.631785,2.360663,5.699986,4.586132,-4.439608,1.340435,2.581819,2.869317,6.631441,2.092201,-1.386841,-1.970259,2.803438,-0.509029,-0.559480,8.821731,4.703591,-8.639257,0.116883,-2.151234,-8.918361,6.593054,-0.792657,7.618032,-1.229013,5.863298,-5.540678,-3.452196,-0.925549,-6.692997,-6.721485,-6.005687,5.067943,-1.723536,1.443314,-4.635566,3.928027,6.302834,5.087721,2.444806,9.303351,-7.512457,-0.334832,3.542623,9.851802,-7.356483,-5.823413,0.358119,4.597380,-4.167442,-3.610126,-1.400787,8.225926,2.500853,3.626015,-3.689544,-6.568219,-0.091700,2.128879,0.323023,2.359014,7.712619,-2.191109,9.481179,-4.148187,-8.055482,3.765964,-0.856310,-4.344610,5.346248,-2.140850,-1.396980,-6.989720,-2.122992,6.984926,-2.788303,7.482507,-6.574567,-1.232634,8.125870,3.893448,9.976605,4.396561,0.864071,3.090665,9.762889,-8.374247,-2.743546,-4.480347,8.653808,-0.482866,-6.987986,6.277737,-9.417879,9.552045,-8.301405,3.513551,1.607414,-5.535581,8.252350,3.927714,0.207497,-3.856883,-1.045369,-8.208230,-7.083168,8.384320,-9.120811,9.455788,-4.916592,5.486062,-6.676519,-4.429555,5.787585,-7.500735,-0.389910,3.091228,-2.639301,-8.414754,-4.252628,-3.998660,9.561781,5.715402,-5.445122,-0.744711,8.133392,4.896684,3.075520,3.203925,-6.188983,2.937188,3.290164,7.681728,-7.219158,-5.190674,-0.598989,-0.524945,-7.540888,-7.623641,-9.550067,5.061634,-4.806708,4.074732,-3.115452,-7.921046,7.369010,-1.390181,-7.893675,-3.470111,3.069105,4.299921,2.040001,5.195822,7.551997,-4.895943,1.230277,-6.464893,-6.958541,1.641658,-5.469613,-4.971538,9.461467,0.172591,-7.044578,-8.164552,-9.204271,0.529608,1.097515,-0.426192,-4.755718,9.644446,-0.830587,5.817090,5.199865,-6.232426,-1.220640,3.953674,9.215399,9.706400,-1.915174,0.283839,9.375849,-3.899964,6.225870,-1.658454,9.197616,1.833125,6.259691,9.721991,1.303472,-0.617184,-1.056587,7.130207,-2.211359,4.418133,6.825618,-6.020955,2.672087,9.071671,3.573932,2.716771,4.021563,-9.126617,7.867291,-4.168827,0.912397,8.815555,-4.481793,1.234022,4.299444,-3.693606,9.939599,-6.654793,9.149983,-8.200604,0.315104,-0.838104,-5.864550,9.812658,-2.122214,5.230899,-1.908449,6.319319,5.782310,-3.427206,5.439880,6.847154,6.726833,0.441879,-5.348428,4.576401,7.431334,-2.672182,-5.068904,-7.377951,5.440502,9.218996,-0.924026,5.859918,0.079073,-5.672368,-0.270599,-0.502284,2.043064,-2.218311,8.009877,7.567108,5.592717,-6.423625,0.826691,-3.204211,-4.476388,2.333133,-7.143021,0.701962,-6.074359,-3.689796,0.933835,-0.788608,7.979843,-3.328912,-0.192549,6.214148,-9.460157,2.688866,-0.605941,-0.077539,7.521844,1.681687,-2.735323,-8.858263,4.488928,2.491960,9.885116,5.617408,0.864188,7.027875,-8.516530,3.538959,-5.547300,-4.701625,1.005589,-0.939787,-8.069090,-2.683858,-2.394063,1.804982,-4.617742,-2.567392,-4.868641,-4.475721,-0.905894,8.841470,-2.591954,2.746250,-2.816735,-3.423774,-6.875383,-5.759023,-6.284241,-7.131557,2.549703,-5.658827,-0.417453,8.154990,4.809459,-4.751476,9.801593,-4.409765,6.118822,8.424774,2.724384,0.751080,-0.809171,1.281491,-6.244529,6.291580,2.854445,9.548700,-8.996909,5.814813,-3.143543,3.290286,6.341472,-1.089441,2.492181,-1.384149,4.658216,1.463126,-4.076464,-9.641789,-6.926675,-5.955999,-5.372961,2.762273,5.847875,-2.464123,9.536544,0.858400,7.187736,9.360521,2.767546,8.307026,7.224709,-7.933211,0.212357,-2.622947,-7.392929,-0.704466,3.319558,-6.346971,-7.938992,-7.797790,-8.104990,-1.170912,0.333332,2.431275,-4.403912,3.688000,9.639008,2.417563,2.705417,-7.316867,-4.468691,-9.520755,-4.775580,-3.497613,2.551123,-5.717154,1.268701,1.094805,-9.879051,1.302509,9.253252,-7.106098,9.349430,-6.960630,-8.985029,-1.731935,0.047291,-2.318898,8.442312,-5.085935,9.192499,1.419497,7.743689,-2.683300,8.979041,-7.538392,-2.985404,9.301671,-7.745880,-3.855074,-1.210474,-6.264559,5.885888,1.896491,0.539062,1.576740,2.531779,3.406156,7.123653,-4.893622,-7.699949,-7.268758,-8.021802,-1.939131,3.874991,3.184655,6.679422,3.963470,-2.903029,-7.693555,-6.165906,-0.496265,-5.661096,-1.134309,9.468870,-6.946369,-1.066930,7.256782,-3.754257,1.034660,-1.921330,4.614946,-6.164798,4.663500,4.120684,7.488668,5.741449,3.406440,4.451103,-5.903410,6.500954,-2.462920,8.388780,-0.033182,9.036042,9.113857,-0.886967,-0.889691,5.630569,5.962989,7.518027,-4.988566,-3.063201,-5.397576,1.923218,2.404398,8.861492,-8.361096,5.421784,-9.207136,4.376303,-7.336465,-4.923441,-0.885304,-7.619893,-7.445276,-8.823242,2.886666,7.929322,9.885415,-6.849067,4.060094,-9.253407,-9.615662,-6.296692,0.888512,-8.021240,6.206895,-5.038760,-1.426764,4.565853,-9.502054,2.406620,-7.626581,2.602323,5.929183,-4.068634,0.371445,8.030849,-6.574445,-1.299007,8.185088,-6.754419,2.762222,-3.306331,4.517297,-4.347646,-8.475932,3.342279,-2.489968,-3.369539,-2.003515,-3.524556,6.311120,5.679213,1.423506,4.523104,-7.357613,2.288055,-0.430773,6.186465,9.973058,4.981375,7.731605,1.249091,3.684879,-4.589984,-2.289602,6.090644,-3.481104,-8.282198,-0.958282,-0.234637,3.942914,-0.980010,2.741813,9.916840,-1.048143,-8.631191,-5.697614,5.916303,1.800652,4.847943,9.823872,-8.776059,-8.664122,2.505532,-2.250652,1.425085,-6.543063,-6.521068,-8.613035,-9.154894,-6.134653,-0.512706,-6.677674,5.172037,4.950125,-5.552504,7.387556,-6.885830,4.278141,7.127599,4.864520,9.613679,-4.143179,-0.934055,0.005891,9.940970,3.042609,-5.630981,-9.328601,-7.979105,6.773671,-3.998045,5.068517,-0.522911,-8.441720,-6.771378,-5.625059,2.077749,5.111116,0.266838,4.017829,6.110190,2.565797,-4.063717,2.634815,0.290582,0.574969,4.690545,0.822692,7.701463,4.358608,9.433708,8.214248,0.482857,-6.801877,-8.770859,2.810021,1.836559,6.495299,-4.373517,-5.726781,8.549702,8.663775,-6.801032,-8.507684,7.171817,4.052476,-2.166286,0.207320,-3.347627,-8.216691,2.382451,-6.353990,-2.307082,6.541157,-4.787180,9.698525,9.073897,-1.855967,8.931275,-4.352859,4.022975,7.849789,-4.302939,1.099372,3.177908,4.147718,4.445725,7.259810,-7.918136,4.616670,-2.137301,-3.251550,1.945829,5.740384,-5.469501,3.771733,6.373482,7.945321,-5.963665,-8.309359,-4.389349,-2.917247,7.168884,-9.983574,-2.178461,-1.692150,-4.890199,6.302434,-3.519429,-2.064200,-4.409161,-1.470860,-5.140338,0.911011,-6.381322,-7.594625,-8.660127,-5.992230,-6.313693,3.236203,-4.642147,4.961177,-8.275051,5.457356,3.344932,3.741311,1.439954,-1.101653,2.311194,-0.095282,8.121461,6.208045,-9.496967,-6.665509,-0.633818,2.039121,5.157833,3.337338,2.445405,-8.987786,-0.247579,-0.949001,8.153537,8.059596,2.269776,-1.242966,3.677016,-8.019798,-8.299043,-6.782204,-7.484416,9.273858,1.185695,8.405454,0.604931,8.078018,-8.172430,-7.176487,-1.314780,-6.861670,2.481318,4.144228,-9.873947,-1.680100], dtype = "float64")#candidate|4511|(720,)|const|float64
call_4510 = relay.TupleGetItem(func_1762_call(relay.reshape(const_4511.astype('float64'), [3, 16, 15])), 0)
call_4512 = relay.TupleGetItem(func_1764_call(relay.reshape(const_4511.astype('float64'), [3, 16, 15])), 0)
output = relay.Tuple([call_4462,bop_4501,call_4505,const_4506,call_4510,const_4511,])
output2 = relay.Tuple([call_4464,bop_4504,call_4507,const_4506,call_4512,const_4511,])
func_4518 = relay.Function([var_4463,], output)
mod['func_4518'] = func_4518
mod = relay.transform.InferType()(mod)
var_4519 = relay.var("var_4519", dtype = "int8", shape = (252,))#candidate|4519|(252,)|var|int8
output = func_4518(var_4519)
func_4520 = relay.Function([var_4519], output)
mutated_mod['func_4520'] = func_4520
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4544 = relay.const([[[6.820231,-4.024159,9.495864,-6.908643,-5.156441,1.645481,4.405787,-4.012023,4.175385,3.990411],[-7.278704,2.039325,-0.015857,2.422235,8.346874,9.184973,-3.271758,-6.969306,-6.230351,-7.147865],[-1.805974,-3.937568,-3.197562,7.419012,-0.172085,9.130835,-3.557441,9.940792,7.729530,8.898374],[1.821947,2.037909,2.411986,-2.924915,2.892263,-9.958900,-3.231348,3.015095,-7.781624,6.190829],[-7.067808,1.673606,6.895188,8.869752,2.295739,-0.810201,0.337915,-3.964406,4.348729,2.206440],[-1.220552,3.717956,-2.068487,0.745349,8.415462,7.204483,-3.575764,-5.204909,5.191701,-1.600476],[5.245662,-4.357401,0.798341,9.767143,1.135186,2.445264,-5.600376,-3.563034,3.163018,3.360767]],[[-5.138098,-1.102603,2.673831,7.206535,9.493391,4.281272,-5.201934,2.995495,3.430340,-0.276715],[2.709388,-3.376970,-8.784080,-8.209574,-7.690703,-6.281057,-7.180301,0.688523,-9.208839,4.535350],[4.593735,-9.035092,-6.795807,1.499398,-4.868327,-0.133742,4.074277,4.500187,4.723971,3.953327],[-6.151965,6.090908,9.603321,-1.173939,2.630836,6.676020,1.184874,-9.024533,5.078062,0.871528],[5.791335,-0.709337,-4.489088,9.907322,7.974225,4.836307,-9.510692,3.264328,-0.250930,0.627742],[9.384301,-8.446409,-1.775039,-0.564012,-8.631020,6.869015,6.203998,-4.289376,-2.304069,2.285114],[-4.211687,3.623323,7.120692,-8.220484,-1.166171,3.964880,-6.163798,-6.290161,-7.658053,2.851460]],[[-2.528088,8.364718,-8.129556,8.591942,0.837029,-6.244597,-3.242366,-3.675912,-0.859064,1.561533],[8.937101,-0.117536,-7.046004,-2.221162,0.905593,4.477329,3.307404,4.012826,-9.833608,-6.214043],[-6.081535,1.673372,-4.762576,-0.645757,4.388432,5.803133,3.749006,-9.371016,4.384039,-8.103703],[-3.089208,-1.277802,-0.418583,4.012407,4.247723,-1.716805,7.294763,-4.423028,-9.818216,-0.131514],[-7.141461,-1.435793,-1.015830,1.417147,7.907540,-8.475040,7.751286,9.459617,3.207277,-0.561408],[-7.655358,-8.905943,-9.811525,8.181705,1.341027,-0.220370,-9.512769,8.061271,-5.923210,-3.973678],[0.305090,6.102403,3.053814,-1.099268,-6.261737,8.463713,-7.516925,-5.317202,-8.662430,2.923738]],[[3.802301,9.223060,-3.469201,-6.447509,9.452337,-3.191847,-6.351564,6.605642,2.916351,-2.533002],[-6.628485,-8.092217,0.570165,-3.972433,4.860858,8.782465,6.657648,-0.410745,-9.432514,-1.904082],[6.511023,-1.517272,8.928565,7.446080,7.916784,-9.109142,-1.139160,-8.577874,4.673437,9.148714],[-3.791671,4.201122,-3.657274,2.237556,1.227159,-1.473670,9.320848,-9.566407,7.734105,5.578731],[5.547666,-9.179542,-3.710752,5.343143,6.271550,-2.478933,1.181776,-4.276563,0.482139,-3.285755],[8.356882,3.772456,3.054578,6.961281,-1.601884,-6.037319,-7.907327,6.436420,1.078769,-4.236278],[6.025369,5.956201,3.424785,-7.945239,8.103134,0.993384,-0.880592,5.976042,-0.332053,-4.803713]],[[0.288968,-9.327524,6.484896,2.712583,-9.357974,-3.910089,-5.235248,-9.432007,9.536643,2.493210],[-9.847300,1.614046,1.599347,-5.080117,-1.345766,-8.788841,4.800379,8.160092,-4.991548,-7.352176],[2.582665,3.435201,-5.723334,7.721361,-2.880737,-2.294860,8.427372,1.208967,4.698451,-3.224495],[-5.153972,3.995473,2.516459,1.022164,4.756524,-0.522316,-1.916080,2.381464,0.288572,-0.197977],[4.830851,-3.365226,-0.619147,4.610177,-0.906193,4.276925,3.666147,-9.820066,-5.900743,-1.012528],[0.251979,-1.902933,-3.262190,-7.620217,-7.747982,-5.352269,-8.170139,-4.634292,-2.149393,-9.840666],[3.214660,-5.845653,-0.948416,7.142991,-7.795026,0.517562,-1.697748,5.018847,2.935845,-7.449584]],[[-7.883029,0.548592,-1.126505,4.638798,6.364785,9.659812,-2.307157,7.662566,-8.242635,2.975267],[5.224261,0.704314,-5.748801,-2.953425,-9.252845,3.722290,1.637664,9.811597,-7.659832,5.096625],[-1.407694,-4.727334,-1.560261,-2.283197,-4.046526,7.384928,-6.441849,5.439117,9.496351,-0.123421],[-8.862860,-0.176413,-1.715120,0.473718,-9.338498,-8.400816,2.716065,8.575074,6.698202,7.315356],[0.529786,3.030473,2.472588,-8.909531,-1.147036,-5.736418,-5.130912,1.079485,0.298987,1.870800],[0.509657,-2.095692,-0.598048,-0.771814,6.498793,9.575277,-6.467166,-1.311452,6.355496,-2.292397],[6.389068,1.364710,8.010850,-0.052153,7.451771,-4.375442,-4.757220,-0.301539,7.162200,-8.895892]],[[-8.126594,0.593623,-4.079116,-4.647309,6.190538,9.085297,2.127028,-3.574778,1.994069,8.400227],[3.544334,0.513921,0.457780,-4.664254,-5.073082,7.401304,5.892758,5.316853,0.007917,3.902535],[-2.032902,8.499205,1.184601,-5.312912,0.714292,-6.241565,-3.987144,-9.159669,3.386415,-6.634475],[5.762932,-3.448057,-3.053200,-7.908807,4.978543,-0.138244,-0.318180,5.009979,-8.234576,8.184511],[-2.062102,-5.310100,0.775471,-1.750704,8.184483,3.068870,-1.731084,8.339641,9.031878,-9.720913],[-2.925812,7.110016,2.406441,-0.423485,-9.277460,2.785474,6.984899,3.860467,-2.185667,0.993517],[-7.299778,-8.598441,-1.426439,-3.168007,7.304497,-5.310379,9.184026,-5.151891,0.472516,-6.064395]],[[-3.066754,-5.611786,4.800022,1.847456,7.491396,-4.363434,8.966542,-1.694737,-3.556311,1.846942],[-1.988680,6.956371,0.679294,-7.140318,6.356894,2.327234,-5.977081,8.014236,0.155325,5.305616],[-4.590372,5.393186,-8.174616,2.356481,-9.477412,-6.930608,5.070784,-0.214988,9.862994,9.334219],[-2.959800,7.373827,-7.819353,-5.902460,3.483695,-9.344371,6.107125,3.597661,7.962725,0.671627],[5.617873,-0.430819,7.392162,-6.971112,9.171397,2.876664,-7.995678,-4.410043,-5.398208,-8.441233],[-3.660119,1.975304,-3.606896,9.163155,5.925974,5.855127,-1.304476,5.760884,6.770487,0.259266],[1.566845,-4.585221,1.064519,-7.211798,7.087762,4.361635,4.230230,-4.233543,2.577511,-3.156240]]], dtype = "float32")#candidate|4544|(8, 7, 10)|const|float32
var_4545 = relay.var("var_4545", dtype = "float32", shape = (8, 7, 10))#candidate|4545|(8, 7, 10)|var|float32
bop_4546 = relay.divide(const_4544.astype('float32'), relay.reshape(var_4545.astype('float32'), relay.shape_of(const_4544))) # shape=(8, 7, 10)
func_1797_call = mod.get_global_var('func_1797')
func_1802_call = mutated_mod.get_global_var('func_1802')
const_4557 = relay.const([[1.430752,-4.505010,3.616473,2.439762,-0.150114,-6.739078,9.684561,7.287661,7.849504,0.512864,9.607405,7.626300,9.342992,2.550813,-6.774558,-3.508023,3.593220,-0.769798,3.867995,9.908095,-9.062686,-4.764005,7.481785,-9.848325,9.445095,9.621797,-8.683178,-4.980423,7.389933,9.279609,9.169241,-5.839439,-5.932936,0.419348,-7.940500,-1.750702,-5.919115,-7.241837,-1.953648,2.159731,-6.949109,-4.514587,5.944664,-1.104362,-1.862498,-7.867721,2.461514,-9.401988,8.798095,-2.213347,-1.266647,1.033751,9.916524,-9.715923,-5.312598,6.304495,-0.076445,1.260640,3.459927,2.818729,9.640140,6.689700,-7.237434,-5.251011,-4.244457,0.077504,0.610702,8.831359,5.747323,-7.191827,4.828870,-2.347425,1.522167,-6.752692,-3.205458,-7.751554,3.710606,-4.342179,5.409780,-9.509017,1.234003,-1.110652,-8.512385,5.136015,3.670633,6.447629,-9.194264,2.011856,4.759954,-2.570466,6.846927,3.264212,-5.101227,-1.419546,-6.158353,3.277887,-0.409480,5.480401,-0.907413,-3.181767,-0.041320,-7.445119,-6.579067,7.164126],[7.929938,4.056633,-6.251831,-0.836074,-0.590781,7.761003,3.821730,6.693014,-6.968531,-6.515526,8.236486,2.664086,-4.993732,-3.639248,9.837326,-5.524694,7.907985,7.593027,-6.738747,0.915601,-4.542326,5.744295,3.701705,4.955860,7.386386,-1.055823,4.774263,3.504114,-3.127952,-2.889883,5.959205,-5.715528,-9.497383,-9.474605,2.174215,1.733094,-2.849071,2.421993,9.675106,-4.001403,-5.224786,-6.755084,-1.753063,7.320443,4.664374,-6.111533,-9.613711,-3.484430,-2.094663,5.203497,-6.637284,1.849776,-8.691732,-2.276411,3.754706,-6.703107,-4.985570,4.256767,-2.704127,9.713013,-9.015784,-0.968050,-4.247415,4.471078,-0.992617,3.234261,-9.814926,7.437628,0.598150,-0.186944,-3.624501,2.987576,9.424852,2.078266,3.317513,-5.829501,-3.258180,6.507701,3.058159,9.309370,0.899026,-8.361640,8.124402,-3.911695,8.195002,-1.627272,-9.917891,-3.927837,-6.281565,9.779654,-1.280560,-2.824109,1.971509,-9.162690,-1.725592,-3.320225,-3.356540,6.320590,-4.269191,-7.566027,6.204921,-5.711139,-4.223079,0.422220]], dtype = "float64")#candidate|4557|(2, 104)|const|float64
var_4558 = relay.var("var_4558", dtype = "float32", shape = (96,))#candidate|4558|(96,)|var|float32
var_4559 = relay.var("var_4559", dtype = "float32", shape = (7, 70))#candidate|4559|(7, 70)|var|float32
call_4556 = relay.TupleGetItem(func_1797_call(relay.reshape(const_4557.astype('float64'), [16, 13, 1]), relay.reshape(var_4558.astype('float32'), [96,]), relay.reshape(var_4559.astype('float32'), [245, 2]), ), 3)
call_4560 = relay.TupleGetItem(func_1802_call(relay.reshape(const_4557.astype('float64'), [16, 13, 1]), relay.reshape(var_4558.astype('float32'), [96,]), relay.reshape(var_4559.astype('float32'), [245, 2]), ), 3)
output = relay.Tuple([bop_4546,call_4556,const_4557,var_4558,var_4559,])
output2 = relay.Tuple([bop_4546,call_4560,const_4557,var_4558,var_4559,])
func_4562 = relay.Function([var_4545,var_4558,var_4559,], output)
mod['func_4562'] = func_4562
mod = relay.transform.InferType()(mod)
var_4563 = relay.var("var_4563", dtype = "float32", shape = (8, 7, 10))#candidate|4563|(8, 7, 10)|var|float32
var_4564 = relay.var("var_4564", dtype = "float32", shape = (96,))#candidate|4564|(96,)|var|float32
var_4565 = relay.var("var_4565", dtype = "float32", shape = (7, 70))#candidate|4565|(7, 70)|var|float32
output = func_4562(var_4563,var_4564,var_4565,)
func_4566 = relay.Function([var_4563,var_4564,var_4565,], output)
mutated_mod['func_4566'] = func_4566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_4701 = func_3034_call()
call_4702 = func_3034_call()
var_4707 = relay.var("var_4707", dtype = "float32", shape = (3, 9, 4))#candidate|4707|(3, 9, 4)|var|float32
bop_4708 = relay.right_shift(call_4701.astype('uint8'), var_4707.astype('uint8')) # shape=(3, 9, 4)
bop_4711 = relay.right_shift(call_4702.astype('uint8'), var_4707.astype('uint8')) # shape=(3, 9, 4)
uop_4729 = relay.sigmoid(call_4701.astype('float32')) # shape=(3, 9, 1)
uop_4731 = relay.sigmoid(call_4702.astype('float32')) # shape=(3, 9, 1)
output = relay.Tuple([bop_4708,uop_4729,])
output2 = relay.Tuple([bop_4711,uop_4731,])
func_4735 = relay.Function([var_4707,], output)
mod['func_4735'] = func_4735
mod = relay.transform.InferType()(mod)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4736 = relay.var("var_4736", dtype = "float32", shape = (3, 9, 4))#candidate|4736|(3, 9, 4)|var|float32
func_4735_call = mutated_mod.get_global_var('func_4735')
call_4737 = func_4735_call(var_4736)
output = call_4737
func_4738 = relay.Function([var_4736], output)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4795 = relay.var("var_4795", dtype = "int32", shape = (3, 15, 14))#candidate|4795|(3, 15, 14)|var|int32
var_4796 = relay.var("var_4796", dtype = "int32", shape = (3, 15, 14))#candidate|4796|(3, 15, 14)|var|int32
bop_4797 = relay.multiply(var_4795.astype('int32'), relay.reshape(var_4796.astype('int32'), relay.shape_of(var_4795))) # shape=(3, 15, 14)
output = bop_4797
output2 = bop_4797
func_4806 = relay.Function([var_4795,var_4796,], output)
mod['func_4806'] = func_4806
mod = relay.transform.InferType()(mod)
mutated_mod['func_4806'] = func_4806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4806_call = mutated_mod.get_global_var('func_4806')
var_4808 = relay.var("var_4808", dtype = "int32", shape = (3, 15, 14))#candidate|4808|(3, 15, 14)|var|int32
var_4809 = relay.var("var_4809", dtype = "int32", shape = (3, 15, 14))#candidate|4809|(3, 15, 14)|var|int32
call_4807 = func_4806_call(var_4808,var_4809,)
output = call_4807
func_4810 = relay.Function([var_4808,var_4809,], output)
mutated_mod['func_4810'] = func_4810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3264_call = mod.get_global_var('func_3264')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_4815 = relay.TupleGetItem(func_3264_call(), 0)
call_4816 = relay.TupleGetItem(func_3266_call(), 0)
output = call_4815
output2 = call_4816
func_4853 = relay.Function([], output)
mod['func_4853'] = func_4853
mod = relay.transform.InferType()(mod)
output = func_4853()
func_4854 = relay.Function([], output)
mutated_mod['func_4854'] = func_4854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_4855 = func_3034_call()
call_4856 = func_3034_call()
output = call_4855
output2 = call_4856
func_4857 = relay.Function([], output)
mod['func_4857'] = func_4857
mod = relay.transform.InferType()(mod)
output = func_4857()
func_4858 = relay.Function([], output)
mutated_mod['func_4858'] = func_4858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3533_call = mod.get_global_var('func_3533')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_4864 = func_3533_call()
call_4865 = func_3533_call()
output = relay.Tuple([call_4864,])
output2 = relay.Tuple([call_4865,])
func_4880 = relay.Function([], output)
mod['func_4880'] = func_4880
mod = relay.transform.InferType()(mod)
mutated_mod['func_4880'] = func_4880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4880_call = mutated_mod.get_global_var('func_4880')
call_4881 = func_4880_call()
output = call_4881
func_4882 = relay.Function([], output)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_4922 = relay.TupleGetItem(func_2583_call(), 0)
call_4923 = relay.TupleGetItem(func_2584_call(), 0)
var_4939 = relay.var("var_4939", dtype = "float32", shape = (3, 9, 14))#candidate|4939|(3, 9, 14)|var|float32
bop_4940 = relay.logical_xor(call_4922.astype('int32'), var_4939.astype('int32')) # shape=(3, 9, 14)
bop_4943 = relay.logical_xor(call_4923.astype('int32'), var_4939.astype('int32')) # shape=(3, 9, 14)
func_4853_call = mod.get_global_var('func_4853')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_4950 = func_4853_call()
call_4951 = func_4853_call()
func_1797_call = mod.get_global_var('func_1797')
func_1802_call = mutated_mod.get_global_var('func_1802')
var_4953 = relay.var("var_4953", dtype = "float64", shape = (104, 2))#candidate|4953|(104, 2)|var|float64
const_4954 = relay.const([7.870019,6.276481,7.536969,-4.865228,5.570594,-9.535255,7.381939,-9.506212,-0.153000,2.274719,-2.479177,-4.989532,1.921108,-7.065259,7.574928,0.817484,-4.797229,8.114731,4.763936,6.381676,8.914651,-6.632967,-4.562870,5.910748,-2.405318,-9.310011,7.403726,-4.613766,-5.610729,6.804216,-4.751541,-5.911118,5.805375,-5.158858,5.446346,3.738855,8.277222,-9.491588,-7.418967,4.888254,-9.891615,4.420398,-0.734773,8.253798,-0.999365,5.362500,2.529839,0.996547,1.693482,2.631835,5.675817,4.015805,5.859245,-7.088899,-8.268008,-1.077256,-5.483712,-0.797184,9.069577,8.255278,-0.321810,-7.108054,7.821047,-8.025108,-1.184703,0.631051,-8.874047,-3.636708,-8.579020,3.712898,-2.453275,-0.151156,0.087915,-7.222381,-7.160443,-4.125308,-7.567667,-9.812768,0.540773,-9.184567,9.620041,0.381393,-0.594079,0.410777,0.486190,2.285158,-4.298339,-4.285904,-0.695346,2.646357,-5.051559,1.880582,-6.422292,-4.721623,-6.851410,2.416200], dtype = "float32")#candidate|4954|(96,)|const|float32
const_4955 = relay.const([7.621862,-3.467957,0.915615,-7.401744,8.337869,7.469921,7.331032,-8.040314,7.742518,-0.315709,-5.773906,9.283424,2.888413,-6.027457,8.993541,8.923778,-9.096352,3.494326,8.052715,2.345747,-1.889817,2.260661,6.538546,-8.358617,4.722435,0.856723,9.529241,8.789057,2.355741,6.305609,9.132003,8.116185,0.602530,-8.411881,4.875280,9.653476,-9.047335,7.360130,3.467589,-0.627448,3.506039,-8.752949,-2.064048,4.810578,8.949778,5.370493,2.380861,-7.218177,1.276153,-1.395229,-0.694770,0.207086,-1.209958,5.714349,-7.718801,-3.889367,6.170166,-6.369707,-2.287336,0.515077,4.234138,1.522306,-2.807623,2.141040,-5.318527,-8.574607,5.778997,9.551499,-2.277972,3.277237,7.452356,-5.700696,-4.154564,-5.408203,7.120785,-9.780792,-5.587083,0.604215,5.179869,0.887732,-6.611560,6.163696,7.478903,4.546664,8.412920,-2.158521,9.706199,6.794135,7.727452,-7.904831,1.827996,0.473124,-3.879825,-7.259982,7.345981,6.008650,8.626326,-0.386767,-0.046898,5.949400,-5.659149,-4.684889,-6.415162,-5.800600,8.356837,-9.147484,7.872859,5.933477,6.401411,-8.177333,6.616288,-7.226813,-9.711040,1.642121,5.795189,-9.644416,-5.090204,0.749493,-8.933569,-0.727503,-4.470350,-9.695798,0.525991,-5.691185,-1.719994,8.857426,-5.104951,-5.676112,-6.183063,2.344182,-1.770977,-8.464494,-0.101916,-8.614232,1.570464,5.385358,5.856604,6.175553,3.577975,6.468792,-4.442969,2.262830,3.920404,9.708342,2.254054,3.363134,-6.247371,-0.687963,5.046593,6.360811,7.409646,-6.859208,6.891670,0.440854,3.418085,-2.614789,-1.366857,7.876306,8.919869,8.337867,6.600485,7.651284,-1.311288,7.285790,-1.408337,-3.230608,0.910422,-3.839987,5.294260,4.335117,6.555973,-2.675311,1.902007,6.197067,5.796692,1.810241,4.830191,-3.720196,-8.749383,8.359120,9.659178,-3.572249,-9.950659,7.765482,7.313541,1.786547,-4.498011,-3.423287,8.503425,-6.510844,-5.859456,7.697404,-0.619960,-6.873419,9.812501,3.598851,1.023203,8.692005,0.690851,7.928092,0.980281,8.209402,6.157969,3.285840,7.857171,1.032660,1.066516,6.544112,-7.184649,-0.047945,0.577212,-7.366560,-6.458487,-6.797192,-0.458070,-2.046393,-4.593736,2.874765,5.919214,-9.794176,7.759238,-6.525948,2.770882,-6.900129,4.815885,6.957364,7.177096,-6.046949,-5.944323,1.516534,-4.901294,-5.404518,1.779558,-5.942596,6.412624,1.719896,-2.421177,9.866662,1.355327,-4.076921,3.029610,3.676699,6.677510,-2.787779,-2.002077,7.065836,7.406937,-3.048740,0.408852,6.640031,4.383133,3.359016,-3.297460,7.985492,6.850173,5.192766,-1.165192,3.410861,-5.934735,3.628329,2.005300,0.024254,-4.443827,3.006159,6.481406,-3.267661,0.477883,-1.382455,0.935657,3.727362,4.502562,0.591302,6.170643,-9.112716,-0.093735,-5.476479,-5.083369,-5.651579,2.332450,-6.231558,-2.385142,-1.581568,9.632452,1.984615,-4.907711,4.863328,7.003819,5.522375,6.415593,-5.796708,7.917641,1.415006,0.898091,0.451910,4.794794,8.677540,-3.534404,6.115706,-1.011423,-7.750024,3.935518,8.234732,-5.350078,8.689740,-7.096988,5.476606,-6.687677,2.378833,-1.520206,0.280656,-3.524272,9.453623,-9.810307,-7.693651,-1.412564,7.738974,-9.964249,-0.281506,-3.410960,-8.066955,-1.423030,-1.790356,-8.073707,-8.883977,-3.599363,-1.164250,-2.685916,-8.983773,-9.128576,0.680624,3.039836,-8.813286,6.642497,9.329760,-5.592455,-4.963092,1.839996,-7.274989,-5.651526,2.514066,-0.708328,-3.016329,9.669671,7.019826,5.040774,-3.784676,8.789927,0.711704,-1.369588,-3.059151,-8.867581,4.682876,-6.746494,-9.669404,-8.752953,3.276360,4.370899,6.814832,-3.873857,9.159627,6.724366,0.060111,-7.280676,-2.434659,0.932541,-7.547344,0.127463,4.950344,4.650653,2.848826,8.063618,-6.131719,-9.820300,-3.175894,-3.760422,-4.714592,9.209520,-9.194235,-1.870967,-0.427716,-8.853531,-3.908608,-7.508932,7.427134,0.580519,6.975788,4.580112,2.498813,0.634954,6.160096,5.673696,-1.523439,8.049996,9.076619,5.614497,8.861304,-9.265978,8.503034,9.376132,-6.550936,9.071757,-6.770408,2.447780,-0.030195,4.016290,-8.916488,-0.602178,6.752379,3.549874,7.081048,9.400512,-0.388590,-0.817517,-1.082832,-5.828046,-4.009783,0.126100,7.894808,9.527871,7.728622,8.415075,2.862619,-0.240980,2.111689,6.236458,-8.655584,2.858756,-7.459466,5.628000,7.284000,1.282190,6.876943,-2.621786,2.143868,3.738191,-3.232593,-3.522746,-9.748577,8.608527,1.063634,-6.651300,6.518103,-8.356172,-2.064782,-3.093177,-3.765340,4.846248,-6.936585,-1.960770,1.046014,9.324112,-1.107083,-4.099885,-5.964192,-5.959510,-1.034635,-0.300806,-0.363956,-5.055496,-4.162247,-2.291181,-7.293512,-8.633714,-3.593080,3.852002,-2.408931,9.999888,-0.668299,3.271154,3.860951,-1.700253,4.196738,6.914685,-2.327340,-8.437586,5.867843,5.716175,-5.291399,-7.170353,-7.355300,1.891471,-6.311536,5.974217,-1.228530,-4.344149,-8.574512,8.991814,0.532644,3.132124,-5.852896], dtype = "float32")#candidate|4955|(490,)|const|float32
call_4952 = relay.TupleGetItem(func_1797_call(relay.reshape(var_4953.astype('float64'), [16, 13, 1]), relay.reshape(const_4954.astype('float32'), [96,]), relay.reshape(const_4955.astype('float32'), [245, 2]), ), 2)
call_4956 = relay.TupleGetItem(func_1802_call(relay.reshape(var_4953.astype('float64'), [16, 13, 1]), relay.reshape(const_4954.astype('float32'), [96,]), relay.reshape(const_4955.astype('float32'), [245, 2]), ), 2)
output = relay.Tuple([bop_4940,call_4950,call_4952,var_4953,const_4954,const_4955,])
output2 = relay.Tuple([bop_4943,call_4951,call_4956,var_4953,const_4954,const_4955,])
func_4959 = relay.Function([var_4939,var_4953,], output)
mod['func_4959'] = func_4959
mod = relay.transform.InferType()(mod)
var_4960 = relay.var("var_4960", dtype = "float32", shape = (3, 9, 14))#candidate|4960|(3, 9, 14)|var|float32
var_4961 = relay.var("var_4961", dtype = "float64", shape = (104, 2))#candidate|4961|(104, 2)|var|float64
output = func_4959(var_4960,var_4961,)
func_4962 = relay.Function([var_4960,var_4961,], output)
mutated_mod['func_4962'] = func_4962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
call_4968 = func_3284_call()
call_4969 = func_3284_call()
output = relay.Tuple([call_4968,])
output2 = relay.Tuple([call_4969,])
func_4974 = relay.Function([], output)
mod['func_4974'] = func_4974
mod = relay.transform.InferType()(mod)
mutated_mod['func_4974'] = func_4974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4974_call = mutated_mod.get_global_var('func_4974')
call_4975 = func_4974_call()
output = call_4975
func_4976 = relay.Function([], output)
mutated_mod['func_4976'] = func_4976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5025 = relay.var("var_5025", dtype = "float64", shape = (8, 4, 15))#candidate|5025|(8, 4, 15)|var|float64
uop_5026 = relay.asinh(var_5025.astype('float64')) # shape=(8, 4, 15)
bop_5030 = relay.greater(var_5025.astype('bool'), relay.reshape(uop_5026.astype('bool'), relay.shape_of(var_5025))) # shape=(8, 4, 15)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_5034 = relay.TupleGetItem(func_2583_call(), 0)
call_5035 = relay.TupleGetItem(func_2584_call(), 0)
func_2794_call = mod.get_global_var('func_2794')
func_2795_call = mutated_mod.get_global_var('func_2795')
call_5040 = func_2794_call()
call_5041 = func_2794_call()
output = relay.Tuple([bop_5030,call_5034,call_5040,])
output2 = relay.Tuple([bop_5030,call_5035,call_5041,])
func_5046 = relay.Function([var_5025,], output)
mod['func_5046'] = func_5046
mod = relay.transform.InferType()(mod)
mutated_mod['func_5046'] = func_5046
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5047 = relay.var("var_5047", dtype = "float64", shape = (8, 4, 15))#candidate|5047|(8, 4, 15)|var|float64
func_5046_call = mutated_mod.get_global_var('func_5046')
call_5048 = func_5046_call(var_5047)
output = call_5048
func_5049 = relay.Function([var_5047], output)
mutated_mod['func_5049'] = func_5049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_5054 = func_3034_call()
call_5055 = func_3034_call()
func_2505_call = mod.get_global_var('func_2505')
func_2509_call = mutated_mod.get_global_var('func_2509')
const_5060 = relay.const([[8.156876,-3.371133,7.469987,1.709141,-7.108234,-1.291371,5.331258,4.014878,-2.473890,5.616254,6.231178,-6.925876,2.806722,9.952188,6.227234,-0.590341,-4.421755,-3.313408,-1.829635,-6.498267,-0.601581,8.562694,9.426961,-9.806968,-2.955140,-9.644069,-9.036156,5.570810,1.318213,4.202298],[0.962955,7.178026,-5.567511,5.571232,-7.995774,6.873973,-5.776280,-2.850329,8.432345,0.356911,-1.537707,-0.815875,7.724542,-3.959285,-2.821110,0.451306,-1.884703,1.832473,-2.542211,1.761035,-4.867775,-1.195933,8.214957,-5.153409,4.298428,-6.293606,-7.834807,-7.107961,9.109220,-7.305379],[-3.396401,2.353113,-4.127421,5.394284,1.837882,6.544038,6.283576,-9.427595,-4.855575,-1.950584,-3.303211,9.513104,4.768819,-1.053322,0.863517,-1.867386,-1.832865,-6.117251,-1.627921,-1.006307,-3.682697,8.274862,4.235327,-9.074603,7.779975,6.307988,4.453605,-0.515836,-7.353412,1.830456]], dtype = "float64")#candidate|5060|(3, 30)|const|float64
const_5061 = relay.const([8.125806,-2.539121,9.845711,3.436572,1.452178,2.756596,-2.759725,-2.423624,-8.794352,-4.033596,3.631563,-6.840295,4.985821,2.338996,4.331270,5.150810,-7.367754,-6.972532,-6.805736,9.358581,8.202404,-2.675113,-5.436623,8.483039,-5.694328,-0.030864,-1.912859,7.530541,4.223086,-4.738041,7.535904,8.288025,2.249958,6.459082,-3.829711,9.046099,2.930220,1.319203,4.928288,2.292044,-0.289916,4.306818,-5.590456,2.954382,8.069965,1.974204,8.336229,-5.597839,-3.048748,-1.845759,-4.721986,-2.924529,8.689199,3.643088,-4.503418,-5.545382,-1.850412,0.373088,-0.751661,-2.399307,-6.632783,-9.983384,7.778798,7.634058,-7.298647,-0.572884,0.020215,-3.790458,-3.351543,1.212016,-8.801220,-5.003915,6.099295,-8.863077,-3.748150,4.566266,-2.098398,-6.100624,-3.653133,7.039542,7.858677,2.025508,4.986141,6.987731,6.642318,-2.597675,-1.501482,1.023995,2.519619,3.865047,-3.955372,-1.501263,-2.465307,-4.217472,-2.408896,9.114575,8.217103,9.073808,-6.972093,6.726258,9.588627,-5.034232,-1.323903,-6.411214,0.360352,8.625542,-5.083402,-9.263207,-9.480765,-4.340275,-6.247031,-8.353734,-2.929375,-1.096285,-6.964182,1.448704,-2.038050,1.771773,0.263173,-7.715272,1.020482,-0.812275,3.833470,-8.964075,-0.155166,2.967087,-5.514430,-0.068672,9.547129,2.577888,-7.741844,8.296314,-8.243991,0.234653,-0.682935,-4.612970,4.734484,-9.285633,8.229961,-1.336260,7.018767,2.215525,1.985258,-3.654773,-7.155244,-3.894810,-6.899798,6.937425,-8.198930,-2.151579,-5.263943,-3.382337,-6.316806,8.579172,0.809985,9.098022,9.753332,-2.478830,-8.427519,9.406950,4.651788,-0.720363,1.019155,-5.998203,-3.092043,0.233886,-5.458430,0.907577,-0.581294,-9.049151,-8.837382,-9.835551,-0.188700,2.010136,0.094861,-0.763038,-5.001088,8.149874,-3.671046,-9.446120,-0.863915,-3.510732,6.878651,9.564583,-0.772967,-5.021657,6.743268,-0.696262,0.655381,7.968715,-5.904675,5.601603,-1.793753,-5.811456,3.069527,5.126395,-6.831358,-7.094411,5.046902,8.121081,8.987411,0.294024,-9.206618,8.040046,5.362659,2.301885,-1.396554,-4.897948,9.692765,8.251603,0.176278,-5.959102,-4.643101,-2.325734,9.072652,3.667372,8.945521,0.985535,-8.988413,8.608485,1.072466,2.612999,-3.536081,-3.151718,6.450057,-8.994735,9.653155,-7.230659,9.128377,5.841965,5.334469,0.630190,0.703201,-7.430304,8.285741,3.852121,-4.116062,-6.594698,5.511630,-1.663886,1.332662,7.766882,-5.775492,-3.279880,-6.410045,-2.875563,0.753185,-2.209112,-6.384167,-6.696711,3.028900,3.210264,7.906718,-7.351376,-4.097712,0.370686,1.133946,-9.101394,-2.221019,5.077020,8.532359,-0.584448,3.848297,1.382506,-3.003831,-8.660054,-5.863251,5.552699,9.996253,-3.269489,7.120132,1.217532,-7.805446,-9.698534,2.764781,-0.303448,3.588033,5.824865,2.308725,-0.841497,-8.291411,8.752755,-9.418648,-7.895006,-7.580602,-7.659006,-7.603959,-0.555774,2.882045,-7.086501,-9.280612,6.671651,8.660271,2.390710,-4.950115,-7.594764,-9.858186,4.432302,2.783168,-5.271894,-2.942431,9.892045,7.959003,9.073472,-0.615439,8.268414,-8.223985,-5.196231,1.619375,8.540884,6.339061,-7.466443,0.283691,9.971488,-6.897599,1.876654,-7.673605,7.988722,-4.505594,-6.359023,-1.102081,-2.315058,5.528987,3.595745,-3.462738,-2.309497,-3.029505,5.430577,-9.325437,-2.647569,-2.605401,6.959722,-7.264640,-8.134128,1.425439,6.377876,-1.414487,6.170293,-2.340840,-7.615368,5.355558,0.429265,-1.500972,1.008679,4.876326,6.303896,4.326280,-7.480500,5.736183,1.639342,3.624784,6.804073,-8.756241,3.800993,1.842068,6.804648,-0.046041,-0.848320,5.226369,2.060157,-9.191969,-5.274579,1.370673,4.087572,-5.086948,-3.262470,-8.438805,1.851654,-0.222440,1.663768,2.116101,-2.616234,5.620004,-1.333536,-8.740203,2.891378,-8.328187,1.295994,-7.105122,-6.112160,9.981739,7.816516,-2.349279,-7.280762,1.344012,-1.413704,-1.096035,5.492445,-7.577252,-5.426064,7.111463,9.930411,6.811575,-9.897350,5.295373,-1.557401,7.066496,-0.906156,1.463678,-4.780597,8.447757,1.892861,8.884574,9.264939,-7.429685,-9.716026,-7.937814,2.029460,-9.541799,5.423258,-2.542599,-6.918731,5.937664,-9.293203,6.602917,-1.917399,4.991457,-9.914111,-4.115212,-1.425959,2.485496,-4.888213,-6.049509,-1.961776,5.188678,5.727274,8.262475,6.097114,-0.214761,2.838959,-9.518356,-5.009716,9.769686,-1.798230,5.006627,-8.293548,-5.239478,-6.175362,-5.695486,9.200656,-1.570601,-1.249126,8.722061,4.017984,5.254308,1.320439,-7.464409,1.282278,8.768571,8.755085,0.936106,2.346664,-4.737215,-8.554666,-7.274775,8.621407,-6.396119,3.856592,4.297759,-6.984128,2.696299,1.547741,2.888176,-5.620572,-8.427197,4.132302,5.918698,3.329164,-6.504895,4.767108,-7.043757,-2.371395,-3.015826,-0.503845,-8.469062,-4.649988,-4.718050,7.667343,-9.095149,-2.407183,5.240811,-8.292290,0.143696,-7.180593,-1.125940,-0.351152,-2.683538,0.724154,-8.165946,0.058594], dtype = "float32")#candidate|5061|(490,)|const|float32
call_5059 = relay.TupleGetItem(func_2505_call(relay.reshape(const_5060.astype('float64'), [1, 15, 6]), relay.reshape(const_5061.astype('float32'), [490,]), ), 4)
call_5062 = relay.TupleGetItem(func_2509_call(relay.reshape(const_5060.astype('float64'), [1, 15, 6]), relay.reshape(const_5061.astype('float32'), [490,]), ), 4)
func_4119_call = mod.get_global_var('func_4119')
func_4122_call = mutated_mod.get_global_var('func_4122')
const_5066 = relay.const([-9.612516,-5.647731,-0.662674,8.872464,5.109889,0.909506,-2.417919,-1.395962,2.722985,-3.467152,-8.001649,3.418432,6.614920,-1.163191,-4.638794,-5.492503,9.907622,-7.003194,1.106307,6.011786,-3.265973,-5.993267,3.265003,-5.867220,-5.713294,-8.905525,0.006268,6.524357,1.220401,0.022041,9.230324,1.361416,-9.352005,-7.221174,3.807746,-6.501058,-5.601000,4.112154,-6.843528,-8.310608,-1.194293,7.460498,-3.836989,-2.252879,-4.095150,2.108355,-6.822667,-8.465719,-3.913002,-3.479115,-4.138189,7.464040,1.946034,-1.941083,-6.524537,1.739392,1.735252,9.998654,0.271821,-5.235281,2.353299,7.656346,-1.073287,6.977726,-5.495428,-3.445883,-0.691401,7.005101,-0.552872,3.092286,-5.824788,4.944959,1.040020,2.362262,4.419615,-6.448103,4.353520,-4.863827,-9.338630,7.776674,0.572229,2.270769,2.149878,6.592098,9.205979,0.392659,2.914492,9.266798,0.969670,0.197832,-9.790511,0.185773,3.137213,1.134640,8.314240,-8.652865,1.723602,5.815252,-4.097317,-2.784157,8.406036,1.172951,5.832477,-0.641771,1.586152,1.167522,3.726110,-2.695326,-9.106544,-4.196502,-5.287704,-8.361009,4.535109,-9.328700,-0.755830,7.260478,-4.423880,5.425237,3.983755,-2.127747,3.885245,3.048318,5.256323,-3.147859,6.012009,1.068970,6.456346,6.492153,2.299076,2.479034,3.605214,-7.152853,2.053632,9.566734,1.486982,-9.386401,1.038060,2.688392,0.458128,-0.045524,0.379355,-5.680791,7.713680,9.230944,8.335038,-0.176051,3.557618,6.595454,-8.005634,6.453497,-4.966805,3.992638,9.930665,-6.817105,-4.046509,-2.116884,8.245998,-7.243485,-1.575824,2.771943,-0.302462,-3.852852,-7.534982,1.958332,-0.773753,-6.403318,-2.443608,-8.527265,5.099040,-6.477015,9.911971,5.381742,2.358095,7.317828,6.909619,9.795589,3.993067,7.174497,2.037916,-9.238166,2.787328,0.528761,-5.985184,-2.355755,-1.313704,3.182420,0.591620,-2.469121,6.043979,-7.653941,1.037530,-1.446645,-4.385703,-6.407251,-2.342427,9.845688,-1.446575,9.866614,1.079122,-3.142092,-6.750041,4.073800,-2.354693,-8.954503,-0.250799,-2.105627,0.083213,-8.111489,-1.118207,6.889457,0.120374,-7.521879,9.019018,1.136555,2.105198,8.934534,5.313130,2.873745,-9.506298,6.861357,3.476193,-3.785310,0.803085,-5.204190,-9.731916,-5.301209,-5.546579,1.080531,4.323315,-1.137773,-8.922416,-1.101494,8.911632,7.199420,-5.743218,-2.346290,-4.530622,-2.977825,9.621823,9.665272,-7.648366,5.927071,-0.741919,2.785056,4.853272,1.211570,8.302992,-2.228234,1.803598,-7.493652,-8.683040,1.559351,-5.219643,-1.636701,-7.566516,5.646865,-7.551984,-5.557614,6.045685,-5.543856,3.527046,-6.488082,7.454151,8.880667,-1.421853,-5.121121,-8.288421,1.455753,4.514963,-5.797384,1.094259,8.614346,0.212249,-3.034965,5.628059,2.990866,-0.178808,7.092371,-4.718352,6.762604,-1.906412,-0.044678,6.408767,4.078201,4.344134,8.499518,3.478956,-3.383900,-0.508529,4.680431,6.442395,-7.848912,-7.092366,-8.786873,4.749529,9.176314,4.748304,-5.057609,8.736052,-5.620732,-0.654395,3.305846,-8.084258,-1.261541,6.633666,-8.683143,-7.684095,-6.675923,-0.549821,-8.317203,-3.353168,7.382448,8.700024,4.877031,-0.153981,4.990892,0.872418,-6.536313,9.714898,-9.560019,9.561093,6.504072,9.381137,-3.451324,-2.399449,5.680177,7.608881,9.740418,1.680614,5.759569,-3.933426,-5.869517,-3.555691,0.905109,0.631261,-7.793443,-3.717490,-1.712927,7.293532,8.735835,1.862858,7.587901,2.375108,8.119631,5.513152,-0.313798,-3.055507,4.010188,-2.083551,-1.853154,-8.385260,-2.272522,-1.490138,-5.505451,0.345077,-1.123383,2.922086,4.990038,-2.346407,6.367961,-9.811669,2.140049,-8.225931,9.887750,9.407701,-6.137447,-1.015113,-7.567191,8.703711,-9.006579,-2.064371,-3.070804,-4.035153,-7.240848,-9.501272,-7.498154,-6.061567,4.454213,-9.679922,7.740835,-5.993493,2.776507,-0.945911,-2.709658,0.309851,-7.436034,6.325633,2.897148,7.950595,-2.999148,2.381729,-9.181836,-3.177999,-9.389738,-0.299212,-6.469792,4.367494,4.710763,4.855678,8.459072,-3.276293,-2.912537,-5.086573,-8.223544,9.599485,-4.732136,9.503830,-0.115422,-5.730821,8.490393,-7.744434,-6.497373,0.459785,4.943162,5.479690,5.208713,6.679410,3.813191,5.015455,1.366019,-2.580272,0.124027,-3.787495,4.631389,-7.726574,8.018281,-4.899669,-3.743341,4.825993,-6.543180,4.185485,-3.643327], dtype = "float32")#candidate|5066|(432,)|const|float32
call_5065 = relay.TupleGetItem(func_4119_call(relay.reshape(const_5066.astype('float32'), [3, 9, 16])), 2)
call_5067 = relay.TupleGetItem(func_4122_call(relay.reshape(const_5066.astype('float32'), [3, 9, 16])), 2)
uop_5071 = relay.log(call_5054.astype('float32')) # shape=(3, 9, 1)
uop_5073 = relay.log(call_5055.astype('float32')) # shape=(3, 9, 1)
func_3443_call = mod.get_global_var('func_3443')
func_3449_call = mutated_mod.get_global_var('func_3449')
const_5078 = relay.const([3.859094,-5.791823,-1.188804,5.105746,-8.533769,4.031225,-7.923759,-0.486659,7.620615,5.978019,1.820700,5.595936,-9.476721,5.275282,8.080017,-3.467066,0.467603,0.008143,6.473937,4.696478,1.165181,7.533756,-7.736792,3.394947,-1.573565,-2.221329,-5.629091,9.985600,-5.394349,-2.972036,6.828429,-9.074980,7.939725,-5.649250,-4.452987,-5.839226,-9.017791,9.269859,0.864912,9.102369,0.220240,0.986484,1.455460,-7.197004,4.597989,-8.321748,9.762763,4.846613,-5.098081,-2.365547,2.689647,-8.894110,-2.868840,-2.793633,-0.683902,-1.954086,7.530500,0.863256,-7.435201,-6.828976,-9.988622,-5.868794,8.980058,-5.229453,-5.871699,-2.424720,1.124464,1.881941,-0.214529,8.462022,1.778534,-2.288255,4.235663,-1.375164,5.163443,8.396427,3.140485,-7.440544,6.228013,-5.389280,2.897282,6.824372,7.190631,-2.611165,2.456212,-6.638466,9.337277,8.024086,-9.734695,-9.155148,6.985434,6.427929,-4.234306,9.577382,-9.865830,2.336562,1.317429,-0.616203,3.183587,-9.825555,-3.506908,-5.980334,-2.372999,-1.221991,6.732622,-0.878105,-0.085522,6.622768,2.320831,-4.754635,-4.899826,9.461155,-7.635980,-1.935481,8.515239,-4.105771,9.078020,2.300586,3.705930,-4.028185,6.080240,1.749797,-4.179000,-1.927394,0.244118,8.535675,-8.641093,1.377173,-6.222223,-5.437509,7.489430,8.935590,1.948075,-3.481800,-4.550363,8.546876,1.488685,2.253139,2.446477,-4.748987,-0.291971,-9.840866,-0.175110,6.743333,8.426710,-7.655064,6.595494,2.960912,1.266556,7.239103,-0.136077,1.821314,2.346954,4.126124,-4.027322,9.753062,7.698480,0.595664,-6.123567,-5.116924,-1.030454,-1.307862,-1.790921,6.855398,2.202530,9.090257,0.304825,6.105976,8.098224,-1.470414,-5.046802,-9.549508,7.966411,-8.059067,7.989256,-5.960237,8.517228,3.054863,-4.498529,6.346106,6.156534,-6.116585,0.811846,2.265631,-1.072776,-2.024834,2.454498,9.573412,-8.178260,-8.890598,-1.938667,-1.875559,4.032248,-3.769063,-0.622274,1.566253,-3.627835,-7.908161,-3.434112,8.086371,5.206323,0.751384,-1.227252,-1.720593,-4.141272,-1.973231,5.011579,0.144727,-2.531215,-2.404051,1.297322,-3.582047,5.356475,-6.836092,-6.929604,9.734737,4.504005,7.011339,2.908262,5.530928,-4.156390,-7.502449,-0.656506,6.898849,5.179292,7.237197,5.394604,6.930352,-3.165546,-4.493794,0.578903,1.244973,7.619766,-5.603391,-7.028763,-8.861875,-3.992509,-2.991476,-4.785459,6.278331,1.596882,6.224129,2.986893,-9.413285,-7.217318,-9.318977,-8.560984,-1.794651,-2.804925,-9.596476,-0.216808,-5.164451,2.476266,5.083428,-8.988676,-2.159958,3.451892,-3.207655,-5.262678,7.950118,-8.435358,-6.366033,9.105671,-6.215008,7.472835,-8.079572,5.249892,-4.800441,1.731279,3.189009,6.169567,1.151476,8.659431,0.930711,-0.682251,-8.921463,-2.523808,4.982445,8.227232,-6.278002,-5.670799,2.136453,8.171106,3.235254,9.766886,-1.598003,-3.334720,-6.713134,3.568485,5.581318,-7.352220,-2.925177,-1.909054,-1.266023,1.060014,-0.688950,0.547614,-8.204372,-4.352602,3.821396,-6.972569,-3.450774,9.006357,-0.808844,-5.697306,0.507492,2.044523,5.615186,4.263063,8.433000,-1.825388,1.307294,6.906680,-0.344920,4.905593,-2.035528,3.409324,-8.171281,8.800177,-5.670968,-7.355582,-6.393189,0.884982,5.601823,1.034113,-2.350916,-5.199405,3.250682,9.792510,7.208352,6.160693,-7.223706,-3.238532,9.301614,4.169461,9.701861,3.946043,3.955499,-3.702680,-6.195074,1.661425,0.009714,-4.618245,-9.977030,6.715034,-9.349108,8.443947,8.514355,1.892458,3.529652,-3.367508,-8.998683,-8.876100,4.509283,-9.629125,-1.139510,-7.634396,8.310587,-2.662236,-2.798893,-7.798470,-1.406904,3.085179,6.144401,-7.149116,5.697196,-5.428020,7.762160,5.293809,6.853963,-5.747591,3.873601,7.993190,9.423664,-9.418950,6.446105,-7.542952,-9.416571,-0.245862,-9.354514,-2.801055,7.215541,2.441988,1.239254,6.960103,-6.685733,-8.170980,-8.323291,-5.158761,8.767441,4.847227,1.456483,-3.657221,5.791573,-4.924704,-4.700211,0.058585,8.840605,-8.133533,2.375561,7.237886,7.090782,-9.968474,2.204577,2.892622,3.772595,-2.761310,-9.257424,8.985985,4.545761,5.593185,-3.307502,3.494630,8.194840,1.404741,-4.036418,-8.277710,-1.387842,8.176836,6.969304,4.007372,-1.311957,-1.859180,-1.849349,-2.326953,2.487371,5.704044,8.004034,0.190793,-1.335120,7.010280,9.909072,-6.529808,-9.875792,0.038920,-6.416035,6.878946,-5.626465,8.025621,0.773101,-4.233151,2.399229,-8.142756,7.334470,6.359849,-0.343054,-7.051645,-3.556318,-0.779761,-9.740268,7.371345,-9.749924,6.939075,-5.411719,3.567959,7.328646,-2.816981,-4.522073,3.306203,-4.925370,0.211326,0.613599,-4.053455,0.098594,8.360086,-0.921862,-9.103992,8.175399,-0.272381,5.815113,1.687510,9.849018,4.078814,-7.058194,1.484725,-2.736408,-7.209624,-1.895917,0.550077,1.528829,-6.982474,2.828065,-8.126845,-6.235380,-6.563375,-5.334453,-9.819012,1.040470,7.296404,-9.684998,-4.623589,-7.227241,6.916805,0.447542,-0.622529,3.440602,3.208102,7.721065,4.541510,-2.308498,7.768580,6.697920,-6.358112,-7.714625,-9.089471,8.269035,2.616397,3.090136,-9.089972,4.519110,9.132100,6.084655,-7.539590,-2.575037,6.100786,5.473757,-5.666178,-2.278411,-7.298228,-7.401079,-5.190268,3.465664,5.414912,-8.376356,-8.743187,-7.735131,-1.459989,-8.503899,2.403049,-4.213477,6.001693,1.644419,-9.974494,-1.382899,-4.411731,5.149143,-6.751247,-8.472528,-9.336266,-2.631998,0.962756,-2.706576,-5.237910,-7.217754,-1.714216,-7.668208,-7.732579,1.921000,-0.498472,9.232782,-6.093332,1.356330,-5.548551,6.670361,-4.264143,3.635199,-7.993411,4.910610,-3.712817,-7.071198,-8.333914,-6.851975,7.273084,9.174196,1.213377,-1.100317,1.106054,6.142352,-1.873080,-4.291514,-9.746821,-9.004425,-5.886484,6.400278,4.425107,6.936678,6.524962,-9.309249,7.770252,-8.205309,1.673503,-3.388760,-8.405498,-7.443588,-9.819749,2.171712,-2.581870,-8.295136,7.978339,5.332990,5.686099,-7.947188,-8.901692,3.414736,-3.902045,-1.383948,5.451749,-2.353223,-8.395612,-8.217503,-6.191959,1.425989,0.945059,4.963155,-4.498699,9.269082,4.196033,-7.601291,-3.196580,8.027745,1.195103,-3.859201,-2.870869,-5.572883,3.381567,-8.872472,-4.039025,-7.461879,1.198248,-4.362228,-1.788598,9.543801,0.146197,0.852852,-2.988722,-1.214811,9.815658,-8.208359,1.951538,-9.046000,0.975564,-4.981311,7.274158,4.788149,-8.146714,-3.028402,7.155405,-7.602561,4.136061,-1.637209,-1.012738,2.631922,-6.737474,-8.858581,-0.170117,-5.483010,2.249294,0.632376,-0.966264,0.469660,-1.978030,4.214717,6.945726,-4.800084,-2.438648,-7.649547,9.315950,-9.697453,6.637029,9.409759,4.561101,9.273431,7.820559,8.787958,0.013309,-2.515094,-1.029348,5.935519,-0.789646,-4.926420,2.995390,9.602097,-4.420596,-4.387034,-6.946355,0.482933,3.089158,-6.319405,7.368075,-9.869886,-8.852823,-4.150515,4.023992,7.181016,7.292357,-6.296341,-2.816465,6.132719,8.865608,6.372052,-1.000957,4.667660,4.557086,-4.724929,-6.473976,-2.974885,8.683051,4.793097,-4.192314,-8.821743,6.156178,-3.486425,7.377652,-1.924346,8.120092,-8.691570,2.191134,-7.925087,-9.958532,9.997701,5.992864,1.782351,8.185890,4.105654,0.774992,0.727326,-6.036028,6.647966,-5.743006,-7.671541,3.508468,0.420155,8.632044,2.329344,-6.796536,-1.763189,-7.119000,-2.242538,-5.268470,-4.554629,-8.422317,-6.022648,6.809902,-6.039045,-0.775160,-1.832950,2.690683,-8.969908,3.532091,-3.463149,-7.041691,4.836213,3.537028,-3.636870,-0.067572,5.636945,5.977314,0.615200,4.664084,-9.787657,8.441788,4.254910,-9.718422,2.198825,-1.412830,0.875834,-8.933604,6.449075,-5.161167,1.293913,-7.756522,4.560694,5.542282,9.170803,-8.160359,-4.837083,-3.541442,7.035628], dtype = "float64")#candidate|5078|(768,)|const|float64
const_5079 = relay.const([-2.455884,-1.214232,-7.200085,-9.642805,-4.772657,6.905814,5.514911,-0.553180,-0.840618,9.023790,4.208027,-5.016296,-7.800703,-7.072581,-2.789744,5.409367,-0.374458,1.892338,4.251030,6.506107,9.491089,9.323049,-4.322720,0.553203,9.724326,6.412516,-4.140518,-8.423884,3.511966,-5.968794,5.588586,6.159998,-7.229394,-4.514938,-6.135749,5.970160,3.572647,-0.446340,-7.796074,-3.150000,9.054122,-8.254699,4.231968,-3.626180,9.139098,-3.644846,-6.492342,-1.762485,-7.817740,-2.035218,-8.815517,-4.134076,-0.248895,0.182360,9.423455,-5.759429,-5.598485,-5.416916,6.584019,-5.597457,-5.038278,0.193330,-7.531739,8.973133,4.542982,-8.490505,7.800523,6.448349,3.470803,-3.323026,-2.905761,7.119406,0.309286,-3.051503,-4.598811,2.584558,1.136733,4.229460,-5.208763,-3.422921,4.835071,5.795672,3.389338,-9.823764,-9.922464,2.329122,-4.623466,7.710474,5.620746,-0.054303,-5.860891,-6.780647,1.623231,-2.358603,-5.255112,2.102920], dtype = "float32")#candidate|5079|(96,)|const|float32
var_5080 = relay.var("var_5080", dtype = "float64", shape = (31360,))#candidate|5080|(31360,)|var|float64
call_5077 = relay.TupleGetItem(func_3443_call(relay.reshape(const_5078.astype('float64'), [768,]), relay.reshape(const_5079.astype('float32'), [2, 48]), relay.reshape(const_5061.astype('float32'), [490,]), relay.reshape(var_5080.astype('float64'), [1960, 16]), ), 10)
call_5081 = relay.TupleGetItem(func_3449_call(relay.reshape(const_5078.astype('float64'), [768,]), relay.reshape(const_5079.astype('float32'), [2, 48]), relay.reshape(const_5061.astype('float32'), [490,]), relay.reshape(var_5080.astype('float64'), [1960, 16]), ), 10)
bop_5089 = relay.not_equal(call_5054.astype('bool'), const_5079.astype('bool')) # shape=(3, 9, 96)
bop_5092 = relay.not_equal(call_5055.astype('bool'), const_5079.astype('bool')) # shape=(3, 9, 96)
var_5093 = relay.var("var_5093", dtype = "float32", shape = (3, 9, 4))#candidate|5093|(3, 9, 4)|var|float32
bop_5094 = relay.equal(uop_5071.astype('bool'), var_5093.astype('bool')) # shape=(3, 9, 4)
bop_5097 = relay.equal(uop_5073.astype('bool'), var_5093.astype('bool')) # shape=(3, 9, 4)
uop_5098 = relay.exp(call_5077.astype('float64')) # shape=(1960, 16)
uop_5100 = relay.exp(call_5081.astype('float64')) # shape=(1960, 16)
func_4857_call = mod.get_global_var('func_4857')
func_4858_call = mutated_mod.get_global_var('func_4858')
call_5103 = func_4857_call()
call_5104 = func_4857_call()
func_1762_call = mod.get_global_var('func_1762')
func_1764_call = mutated_mod.get_global_var('func_1764')
var_5108 = relay.var("var_5108", dtype = "float64", shape = (720,))#candidate|5108|(720,)|var|float64
call_5107 = relay.TupleGetItem(func_1762_call(relay.reshape(var_5108.astype('float64'), [3, 16, 15])), 0)
call_5109 = relay.TupleGetItem(func_1764_call(relay.reshape(var_5108.astype('float64'), [3, 16, 15])), 0)
output = relay.Tuple([call_5059,const_5060,const_5061,call_5065,const_5066,const_5078,var_5080,bop_5089,bop_5094,uop_5098,call_5103,call_5107,var_5108,])
output2 = relay.Tuple([call_5062,const_5060,const_5061,call_5067,const_5066,const_5078,var_5080,bop_5092,bop_5097,uop_5100,call_5104,call_5109,var_5108,])
func_5110 = relay.Function([var_5080,var_5093,var_5108,], output)
mod['func_5110'] = func_5110
mod = relay.transform.InferType()(mod)
mutated_mod['func_5110'] = func_5110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5110_call = mutated_mod.get_global_var('func_5110')
var_5112 = relay.var("var_5112", dtype = "float64", shape = (31360,))#candidate|5112|(31360,)|var|float64
var_5113 = relay.var("var_5113", dtype = "float32", shape = (3, 9, 4))#candidate|5113|(3, 9, 4)|var|float32
var_5114 = relay.var("var_5114", dtype = "float64", shape = (720,))#candidate|5114|(720,)|var|float64
call_5111 = func_5110_call(var_5112,var_5113,var_5114,)
output = call_5111
func_5115 = relay.Function([var_5112,var_5113,var_5114,], output)
mutated_mod['func_5115'] = func_5115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2980_call = mod.get_global_var('func_2980')
func_2981_call = mutated_mod.get_global_var('func_2981')
call_5155 = relay.TupleGetItem(func_2980_call(), 0)
call_5156 = relay.TupleGetItem(func_2981_call(), 0)
output = relay.Tuple([call_5155,])
output2 = relay.Tuple([call_5156,])
func_5181 = relay.Function([], output)
mod['func_5181'] = func_5181
mod = relay.transform.InferType()(mod)
output = func_5181()
func_5182 = relay.Function([], output)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4974_call = mod.get_global_var('func_4974')
func_4976_call = mutated_mod.get_global_var('func_4976')
call_5183 = relay.TupleGetItem(func_4974_call(), 0)
call_5184 = relay.TupleGetItem(func_4976_call(), 0)
const_5201 = relay.const([[[9.010917],[4.234090],[0.397387],[-9.390782],[-8.015625],[-8.528965],[2.453513],[-7.309017],[2.998554]],[[0.355976],[-6.202279],[6.107345],[-1.253731],[2.859738],[9.920224],[-8.879060],[7.405475],[9.982876]],[[-8.641319],[9.730450],[-7.412778],[3.763174],[-0.984517],[5.357380],[-2.763368],[1.792567],[-9.706619]]], dtype = "float32")#candidate|5201|(3, 9, 1)|const|float32
bop_5202 = relay.multiply(call_5183.astype('uint64'), relay.reshape(const_5201.astype('uint64'), relay.shape_of(call_5183))) # shape=(3, 9, 1)
bop_5205 = relay.multiply(call_5184.astype('uint64'), relay.reshape(const_5201.astype('uint64'), relay.shape_of(call_5184))) # shape=(3, 9, 1)
uop_5206 = relay.exp(bop_5202.astype('float32')) # shape=(3, 9, 1)
uop_5208 = relay.exp(bop_5205.astype('float32')) # shape=(3, 9, 1)
output = relay.Tuple([uop_5206,])
output2 = relay.Tuple([uop_5208,])
func_5214 = relay.Function([], output)
mod['func_5214'] = func_5214
mod = relay.transform.InferType()(mod)
mutated_mod['func_5214'] = func_5214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5214_call = mutated_mod.get_global_var('func_5214')
call_5215 = func_5214_call()
output = call_5215
func_5216 = relay.Function([], output)
mutated_mod['func_5216'] = func_5216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5244 = relay.var("var_5244", dtype = "float64", shape = (8, 4, 1))#candidate|5244|(8, 4, 1)|var|float64
uop_5245 = relay.log10(var_5244.astype('float64')) # shape=(8, 4, 1)
func_3494_call = mod.get_global_var('func_3494')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_5249 = relay.TupleGetItem(func_3494_call(), 0)
call_5250 = relay.TupleGetItem(func_3496_call(), 0)
func_658_call = mod.get_global_var('func_658')
func_662_call = mutated_mod.get_global_var('func_662')
const_5254 = relay.const([9.480395,-8.887857,-7.704105,-7.747476,-4.938754,-8.880070,7.692084,-4.418752,6.399588,-7.494109,9.856780,-1.889229,-4.695484,0.287725,-1.897607,-4.026553,-7.639870,0.457097,3.025812,8.017391,-6.827339,-2.752741,-2.084515,-2.390299,7.464384,-7.565547,-0.933202,7.005061,9.763380,-4.066302,1.176629,9.924616,0.112419,3.294008,-4.825164,5.690862,-2.566042,2.853013,-3.922868,-1.731100,-0.141730,3.779436,-1.046802,-0.452617,2.889773,7.725623,9.478398,-9.661344,4.205754,8.074232,-0.736399,-5.393711,-5.190581,-1.630721,-6.100980,1.839892,9.660971,3.507519,5.457192,2.560309,-5.996734,-6.314063,-7.604332,-1.681589,-5.381735,8.392435,-6.649282,6.635174,4.670828,-6.487741,-7.496853,1.396847,-3.372487,8.628009,-4.727266,-4.272776,7.577121,-4.535268,8.408536,-0.504747,-0.322795,-1.026566,2.059065,6.686143,9.253673,-7.029851,7.345030,2.899923,-4.998262,-7.311583,-1.977142,2.181282,0.046168,1.431102,7.213118,-4.427515,1.423525,-3.675381,-0.201250,-9.455277], dtype = "float64")#candidate|5254|(100,)|const|float64
const_5255 = relay.const([-4,2,-7,8,3,-1,5,-7,10,9,1,3,2,9,8,1,-5,1,-8,-8,-2,5,-10,6,-4,-7,10,7,8,1,9,10,-7,-8,10,5,-4,9,-3,-4,-1,-1,3,-4,-5,-6,9,10,1,-4,-5,-2,9,5,-8,10,9,2,-1,-2,-3,5,-8,-1,-5,9,2,-9,5,-7,-2,-4,-8,5,-5,10,-5,2,-9,2,6,2,-5,10,-6,4,-4,8,-9,5,-10,-3,-7,-10,-6,10,6,-1,-4,10,8,7,4,-5,-10,6,5,-5,-2,1,-9,-1,3,-5,-3,-5,9,-4,-7,6,9,-7,9,7,9,1,-6,-5,4,-4,-7,7,-2,10,10,-7,8,-3,6,-10,7,6,-4,2,5,5,8,-9,-7,-10,-7,-5,-10,3,10,2,-5,-1,-1,6,-3,-9,7,1,-9,10,-5,10,-7,3,6,-3,6,-9,10,-5,10,-4,-2,-2,4,-6,9,6,10,-1,7,-7,-1,3,4,4,4,3,-5,-8,7,9,1,-1,-7,7,-10,8,-1,-3,-1,-10,-9,2,8,-2,-3,10,-8,-4,7,8,8,-9,9,5,-2,-4,8,2,5,2,5,-1,-4,8,8,7,4,-6,-9,-4,6,10,5,3,-8,-7,4,5,-4,-9,1,-10,-3,7,-7,-3,-10,-10,-6,4,-5,-8,10,9,8,-8,-6,-3,5,1,2,7,-8,6,10,-10,2,4,-3,6,2,2,2,-9,7,9,5,-3,4,6,1,9,-6,-3,-7,-2,-3,-1,10,-2,-1,10,8,10,3,6,-4,7,-7,8,-9,4,-5,-5,-4,-3,7,-4,7,8,2,5,-6,-7,-1,8,-3,2,-7,2,5,8,-9,8,8,7,8,7,2,-9,-7,5,-9,-10,3,8,9,9,-10,-5,2,10,2,8,-9,9,3,-10,10,-9,-5,-2,-4,-4,9,-7,-1,-5,-2,9,9,1,-3,-4,-2,9,-1,2,3,4,-7,-4,-5,3,3,3,1,4,5,-8,-3,2,9,1,-2,-3,5,-5,-10,2,-2,3,-6,-9,9,6,6,5,-4,7,-3,-4,10,1,-10,3,-5,-7,-5,2,6,5,-9,-9,-9,10,-9,-2,-4,10,3,7,-2,-1,-1,-1,10,-2,8,-4,10,-1,-6,9,-4,-5,-4,7,7,3,10,8,9,10,3,-4,-6,3,8,4,-3,-10,-1,3,4,5,-7,5,3,5,7,-1,6,7,-8,-5,9,-9,4,-6,5,4,2,-10,-3,1,6,-5,5,-4,2,-5,-7,-1,4,9,7,-5,-3,8,-2,9,10,-8,-7,-10,-4,-2,-9,1,-8,-7,6,-8,7,-6,-4,6,-9,2,9,-7,-9,3,9,3,4,4,10,-6,7,-7,-7,6,-9,3,2,-10,-6,9,7,-5,-10,9,-3,8,-9,3,-9,-3,1,6,-4,2,-1,9,3,-7,3,4,2,-7,6,-8,-3,5,7,-7,10,-2,2,-7,5,7,-1,-5,-2,6,6,-5,5,3,1,-2,1,2,-5,-8,4,-10,8,-9,-10,10,-9,5,5,5,-9,-7,-10,4,9,-8,7,9,3,-6,5,9,1,7,5,9,8,6,6,-5,-2,-9,1,4,8,-9,4,-6,-3,8,-4,3,5,-9,-9,-8,-9,10,5,-6,-2,7,-2,-2,7,-2,-8,-4,-4,6,9,-6,8,-8,10,9,8,1,-2,-4,10,1,-3,-3,-10,-2,-10,7,4,5,1,9,2,1,10,3,5,10,-1,-3,-1,-1,-3,10,-6,-3,-9,-10,10,-4,-1,2,1,2,-6,-4,-1,-7,5,-4,-2,-2,7,1,7,10,2,-4,6,6,4,-9,9,1,-5,7,-2,-8,2,8,7,-5,-4,2,6,3,2,-5,10,-4,-3,-4,-9,3,4,-9,3,-9,-5,-8,3,-9,5,-5,-1,2,2,-8,8,2,-7,4,7,7,-8,-10,-6,7,4,6,3,-1,4,5,1,6,8,-5,5,4,-9,-4,7,6,-5,9,10,2,7,6,5,-5,-1,-8,4,-2,10,10,9,-1,8,-2,-9,-2,2,-6,9,-1,-4,7,-3,-3,-6,2,-8,-8,2,5,-4,10,5,4,9,-4,-4,-3,1,2,8,3,-7,-2,-10,-10,4,-2,-8,-2,-2,10,-7,-5,-8,6,-2,-3,9,-8,2,5,8,6,-4,2,3,1,6,8,4,-1,-2,-5,-10,10,-3,-10,10,6,4,-9,-2,9,-6,-4,-1,-7,1,-2,7,5,-6,-8,10,-10,3,-1,10,5,-7,6,-7,-10,5,9,5,9,-8,-8,4,-1,7,-4,-2,-5,-1,6,4,-6,2,-10,-1,6,7,-8,-4,-7,-10,10,-1,10,5,-10,6,7,-5,-2,-3,6,4,2,2,1,-2,6,5,5,-4,1,3,7,-3,4,9,8,5,-3,1,1,-4,-5,4,1,7,7,9,9,5,8,5,-9,-7,-7,6,-10,-2,-1,8,-4,5,-6,9,6,9,6,-1,-2,9,9,-7,8,-5,-8,3,8,5,-4,-9,6,6,4,1,10,-5,-5,-7,4,2,-6,3,-4,-10,-3,-1,-9,-5,6,8,5,-4,-8,3,-4,-3,1,6,4,-6,-7,8,-5,8,8,-9,3,-3,-6,-2,-9,-3,-1,-6,7,10,8,-9,-10,4,6,10,7,-10,-10,-3,9,9,-5,5,-8,5,4,9,-2,3,-8,-7,8,8,-2,-7,7,1,3,-3,10,7,1,-9,2,-10,4,-5,-5,-10,-4,-9,3,2,-7,-6,-2,-2,-2,-5,-2,-5,4,-1,-5,-9,-6,-9,-8,4,5,-4,-5,-9,7,1,10,-6,-8,-5,-7,-1,1,-3,-8,-6,-9,9,7,2,1,-3,-3,-5,-5,-3,5,5,-1,-6,-5,3,5,9,9,5,-9,9,7,-3,4,-5,8,-4,-8,10,-7,9,-5,3,2,-2,-6,2,-6,-8,-9,-9,10,-7,-8,-2,-8,-4,-9,-6,6,-3,10,-8,8,-7,8,5,-1,-8,9,-3,-3,1,5,5,5,6,3,2,-9,-10,6,6,-8,-8,4,-4,-10,1,2,9,-5,-5,-10,-10,5,-7,-7,-8,-7,2,8,10,-2,-5,8,4,-10,2,5,10,-1,-8,-10,-5,-3,-2,-6,-8,3,5,-1,5,-9,3,8,-1,-2,9,-5,1,-3,8,-5,-8,-4,-2,-3,8,5,-5,7,-3,-6,1,9,9,4,9,-6,10,9,4,-10,-3,4,-9,1,7,4,-9,1,5,7,-7,-1,10,-8,2,-7,-4,-1,9,6,-1,6,-3,2,-2,-4,-10,3,-4,8,-2,1,5,10,-7,-2,7,2,4,-10,1,-5,-8,4,-1,10,-5,-1,4,-4,8,-1,5,6,7,6,-9,-10,-9,-1,-5,6,-1,-2,-8,7,-6,2,-4,-9,-4,7,-5,-4,-1,5,-3,10,5,8,2,-1,4,8,-2,8,-3,3,4,-10,-10,3,-5,-7,6,-6,-1,-7,-10,4,5,10,-7,-5,10,-5,2,6,-4,-10,8,-1,2,-7,-4,-6,3,6,-1,-2,-10,-3,-7,-2,2,1,7,-3,9,-3,1,1,-7,3,-2,1,1,4,3,-9,9,6,-2,-9,9,4,-3,-1,4,10,-8,-7,3,7,1,-10,7,-8,-5,4,9,1,4,4,-7,-5,-3,3,6,-1,-7,-7,9,7,-2,-7,8,-5,-1,4,3,-2,-2,4,5,6,10,-10,1,-10,-10,-8,-4,-3,-3,-2,6,7,-7,9,8,-7,1,7,7,-6,6,-7,8,5,9,-10,-9,5,9,9,-9,8,-6,-3,4,-9,-5,1,8,-7,-3,-4,-5,10,4,1,-8,5,-4,8,-8,-8,-5,8,-5,2,3,2,-6,-4,-4,6,-6,7,-7,-9,1,-10,6,-2,3,1,-2,8,5,-10,8,10,-7,5,-9,-1,-2,1,-8,-3,8,9,-6,2,6,8,-10,-8,-3,-10,-7,-7,3,1,10,2,-7,-2,7,-2,-5,-9,-9,1,1,-8,-4,1,2,1,-5,4,4,-5,-9,6,-7,9,3,10,1,4,1,-5,7,-9,-10,4,-6,-7,-6,-8,-7,1,-7,3,6,-7,3,4,-9,2,-3,-3,7,-3,-2,-8,-8,-8,1,-4,9,8,5,-1,2,-2,-2,-5,5,-4,8,4,2,-2,-5,1,-10,-5,-8,7,-2,8,-6,-2,10,-7,-9,-8,-5,3,-9,-4,-3,3,-7,-3,1,-4,-4,-7,-4,7,-5,4,7,10,4,-6,4,8,2,-10,-5,-2,-3,-5,3,-10,-9,10,4,4,5,4,-9,-9,-8,-6,7,1,-6,7,-10,-10,9,-7,-4,-2,-10,6,-1,-2,8,-9,3,5,10,-1,-6,1,2,10,-10,-5,-9,2,8,8,-2,-10,-10,-4,-4,-1,5,6,2,5,10,-2,9,-10,8,2,6,-4,-7,-5,5,-1,-7,-2,-7,-9,-5,6,5,-2,4,4,9,4,-10,7,4,10,9,10,-8,-10,4,-8,2,3,-7,-3,6,-2,-8,-4,9,6,5,-1,-9,-6,1,-1,6,-8,-2,9,10,-6,2,-1,-3,6,-4,-1,-2,-3,10,5,-7,-3,3,9,-5,4,-5,6,-3,-6,-1,-8,-3,-5,7,3,2,5,7,-1,-8,-8,1,3,-8,10,7,4,1,4,-9,1,10,7,1,10,6,-4,-1,2,7,1,-2,-5,4,2,-6,-7,1,6,3,-3,5,5,-4,7,8,7,-5,-6,2,4,-3,8,6,-7,-3,9,8,4,-10,-3,-1,2,-3,-4,-6,-4,-1,4,10,6,2,9,-9,1,-8,-10,5,4,10,-4,8,7,2,-7,-3,-6,-10,6,-2,1,-1,6,4,-3,-9,3,5,-9,1,1,-10,-2,4,2,-3,3,-3,-10,-10,-1,10,-8,-4,-3,-4,-3,-1,-5,-1,8,-9,7,-1,-8,10,2,3,-6,-9,-4,-1,-7,1,7,8,-7,-6,8,-3,-10,6,-4,4,-6,9,5,-8,-2,4,-1,5,-1,4,10,-8,2,-4,2,6,-2,9,-5,-10,6,-8,-8,6,-6,1,-10,8,-2,8,-2,-4,-9,2,2,5,-7,8,6,5,6,7,6,8,10,3,-10], dtype = "uint8")#candidate|5255|(1960,)|const|uint8
call_5253 = relay.TupleGetItem(func_658_call(relay.reshape(const_5254.astype('float64'), [5, 2, 10]), relay.reshape(const_5255.astype('uint8'), [1960,]), ), 0)
call_5256 = relay.TupleGetItem(func_662_call(relay.reshape(const_5254.astype('float64'), [5, 2, 10]), relay.reshape(const_5255.astype('uint8'), [1960,]), ), 0)
func_5046_call = mod.get_global_var('func_5046')
func_5049_call = mutated_mod.get_global_var('func_5049')
const_5259 = relay.const([0.933557,-0.594721,-4.967140,-1.360506,-1.164061,-8.539906,-8.350989,-2.786453,-9.621682,-3.493544,-0.396911,5.970475,-2.463490,5.409420,2.524249,2.250017,-4.473722,0.215798,-9.885007,3.754021,8.625589,4.093004,6.463550,-1.624457,-9.003854,-9.980723,-7.992843,-9.272671,-7.733762,-5.818597,8.071775,-6.773318,8.306409,-4.285835,2.605560,-0.958713,8.282501,-1.741027,5.506019,-9.490715,-2.135359,9.799407,-4.764241,1.744371,2.053523,-3.980619,-9.026085,-4.075766,1.814622,0.016594,9.156327,1.396183,1.424782,1.515325,-7.668825,-1.180605,-2.226675,0.454483,-0.393413,-5.887892,-3.900870,-3.019689,4.615156,-5.986699,-9.761123,-8.525305,0.942501,-1.916162,9.778386,-6.514534,-2.311716,-7.893404,-1.187179,6.231384,0.548505,-4.202687,8.941962,-9.974651,-0.465321,9.278698,-8.192436,-9.752131,6.767485,-7.524837,-8.222409,-3.119399,-1.419478,-2.199941,-8.967280,5.699476,7.163059,5.222794,-3.984743,2.322313,-3.941219,0.427177,-0.056470,-7.938831,9.615912,1.659075,1.203795,-3.167907,-5.370250,-6.255522,-4.496845,-7.324622,-2.711298,-5.889247,3.232939,4.071234,-2.913735,-8.675105,-3.322132,-0.421902,-4.160824,0.775537,7.127157,7.249904,-0.769189,-4.189967,3.849444,-9.954401,-4.546527,-1.555323,9.971631,3.561581,0.483545,-5.754330,6.866747,4.702416,-5.866530,2.541890,-6.490596,-7.344034,5.154363,8.041364,0.180471,-4.004061,4.715793,-1.722420,-8.114544,-1.515239,9.606805,3.852519,-0.804348,-9.728231,6.993403,-3.818545,-9.862629,7.242815,-7.169923,-4.513398,-8.941262,5.413264,-7.774708,-3.316962,-6.613338,-4.477429,-3.982092,-3.249830,-0.990286,6.108992,-2.297024,6.536251,-3.760910,-5.347921,7.879810,6.531816,0.089876,7.464464,-7.318564,-8.798452,4.878802,-8.376320,-8.480063,-6.964535,-0.128349,7.925731,7.542055,5.406752,2.427056,-3.962804,2.675961,-8.595157,0.358843,-7.998337,-2.534820,-1.186820,4.648613,4.000202,4.429826,-7.593431,8.873645,-8.935695,-2.301873,1.492877,-3.905676,-5.647982,5.033094,-2.834510,6.877689,-2.109874,-8.070448,6.876730,1.146627,5.980828,-6.104911,-7.333134,4.146039,-5.249832,5.775837,3.266194,-3.498298,5.491098,6.593936,-5.519249,-1.755544,-5.392472,3.079499,-4.165403,-4.924631,0.320702,6.055398,-8.464519,-1.007815,-7.414807,-4.554603,8.154890,5.014031,-0.069579,9.804063,2.607739,6.352342,-5.954320,8.391845,-4.574994,-5.319742,-2.267679,9.068220,5.952540,-0.062162,7.464750,1.380374,7.633885,8.451591,7.705112,-1.633991,-4.166218,-9.288691,-7.322706,7.898133,3.795471,-0.594865,8.018459,3.323686,1.184975,-7.831131,-6.276492,-1.400848,5.775762,-4.808231,-2.642298,8.144490,-3.811209,5.888122,-6.541891,2.341998,-3.592997,1.368739,-5.754301,-3.420807,-4.318732,-4.668736,4.989991,-9.421194,4.919011,6.969516,1.069347,-5.065739,9.694846,-2.345558,8.362991,4.131288,0.831369,2.870994,9.769758,-8.447562,1.850573,4.282064,0.706278,6.561382,-5.093427,-6.771786,9.888401,6.605890,-3.037222,-3.790565,-5.258175,1.300066,9.057137,5.443171,6.110090,-1.534046,-7.175614,5.082109,-0.972240,-0.073471,7.562362,-3.835822,-4.938014,7.376071,-7.781804,-0.216978,-4.211800,-9.249348,-0.966932,-9.297819,2.541433,-3.620454,-3.412551,9.508671,-5.351854,1.438091,-6.109188,7.321558,-4.534527,9.704155,-6.754823,1.208564,-9.783538,-2.342135,6.369081,-7.311167,-6.056281,-0.269337,-9.353888,3.730851,-0.781781,-7.148563,-7.009555,9.296187,9.629890,4.101776,-2.514199,-6.774466,1.530529,9.783366,4.907032,1.129162,6.232724,6.090871,-7.501180,-8.381791,7.075325,8.022296,-0.482550,-4.328867,-9.625279,-1.318299,-7.471178,3.388239,7.270925,-1.699010,-8.523210,-7.909117,-7.606776,0.228254,-7.689620,6.997371,-0.460501,-8.719138,4.064884,-8.990791,-1.005506,-9.604251,4.915033,-7.337093,-9.080363,-0.957767,6.302730,-8.551363,-7.821443,-0.340110,-2.717975,-3.090049,-2.124597,2.850969,-1.420831,2.044618,-0.786808,7.365191,5.137765,5.589319,9.668758,-9.608579,-0.340893,-8.649910,-4.092820,-4.768503,-2.034287,-6.917427,8.433515,-9.054216,1.429568,-6.101531,0.661159,-7.832623,-7.644713,-7.480715,2.400205,-3.859422,-8.604774,-5.295846,9.050085,3.059321,7.339965,-0.576413,1.174292,-8.100501,5.425848,2.631451,9.199279,0.704883,2.159368,6.972057,7.478350,-2.960736,-0.747474,-1.383104,2.811653,9.535534,2.978796,2.850211,-7.472939,-2.770635,9.750753,-2.354928,9.014909,-9.161042,5.093019,4.136605,8.268010,-4.343222,-6.303834,3.230773,-5.450432,-5.424865,-5.589517,7.750697,-9.762899,-0.286994,7.514447,-5.822803,8.747963,2.792864,-4.153886,5.146371,-7.288660,4.490418,-4.315475,0.300895,8.275793,1.920309,8.887030,-0.897760,-7.181078,3.566741,2.493151,-7.699279,-4.642121,1.149300,-1.651009,-7.110946,6.689706,9.831632,-2.809725,-8.607709,-5.350851,-7.001052,-6.693938], dtype = "float64")#candidate|5259|(480,)|const|float64
call_5258 = relay.TupleGetItem(func_5046_call(relay.reshape(const_5259.astype('float64'), [8, 4, 15])), 2)
call_5260 = relay.TupleGetItem(func_5049_call(relay.reshape(const_5259.astype('float64'), [8, 4, 15])), 2)
uop_5261 = relay.asinh(uop_5245.astype('float64')) # shape=(8, 4, 1)
func_1797_call = mod.get_global_var('func_1797')
func_1802_call = mutated_mod.get_global_var('func_1802')
var_5264 = relay.var("var_5264", dtype = "float64", shape = (208,))#candidate|5264|(208,)|var|float64
const_5265 = relay.const([1.049655,0.755588,-7.314294,-4.827546,-3.335094,8.618836,-2.221388,2.071400,-3.518162,1.112378,-8.097394,-7.606389,7.806135,-1.950402,1.547537,-5.949343,7.537555,-3.670133,-0.323110,-5.322353,1.726743,2.946833,5.554791,3.614761,0.755147,-5.877861,-4.720601,-1.151514,-9.179718,-5.253719,3.587234,7.304436,-9.730148,-2.902701,-4.610039,3.802667,-7.759225,-7.967004,9.864052,-2.039129,-5.362031,-1.727337,8.244599,-7.222187,2.961122,3.939013,8.111962,1.233606,5.906531,-2.796753,-0.633310,2.353243,7.734640,4.625839,0.080778,8.481887,-8.354960,-9.770564,-1.988356,6.373053,7.716005,-7.136345,5.550949,-2.563617,4.640933,8.915157,-8.254752,0.880045,-3.341074,-0.997024,-6.759471,4.750209,8.414933,-2.029070,-1.174650,2.511012,-5.270610,-5.860766,-7.003985,-0.224985,-4.894294,1.669306,-2.777508,-9.770191,0.035473,1.961350,-2.544045,-3.771288,-1.171593,9.674838,9.670860,9.196814,-6.756519,6.265908,-6.868594,-4.889648], dtype = "float32")#candidate|5265|(96,)|const|float32
const_5266 = relay.const([-4.230944,-1.116038,4.772273,6.757315,-6.260422,-4.977662,-3.161664,6.948117,-2.930063,-2.960064,5.762050,1.637589,7.968240,-2.315022,-7.980004,2.173027,0.232014,-7.761276,2.158749,-1.949617,-0.903426,-9.937174,-9.691978,-5.900104,-8.121747,0.577071,-8.774290,-9.581153,-3.088543,8.093488,6.117066,-7.837157,-9.609985,8.604623,-1.604631,-1.154537,-3.773699,-5.640545,-6.679537,-4.119377,6.534873,-0.926592,-0.687237,9.835513,7.886895,1.599542,7.692198,4.378330,3.517299,0.383313,-8.061290,-4.883314,4.351218,3.664070,7.216786,-4.094584,6.247032,-5.336660,6.193804,4.865427,-1.183000,4.459025,-1.222708,-8.732767,-7.279847,6.206426,0.294470,0.742568,-1.632194,-4.643009,-3.988654,-6.688361,-1.864202,-5.123853,4.316618,-5.255028,-0.905316,4.347421,4.063456,-2.674232,-9.222739,-1.970868,5.478842,-6.894653,0.097563,2.892736,3.537059,3.711836,9.136312,-1.416910,0.473941,-2.692712,-5.065074,-5.778493,3.876384,7.146165,2.799086,4.684520,-2.583786,-6.731293,8.226817,3.111643,-5.215241,-2.883095,-7.557181,-1.669928,7.358520,-3.880536,-1.789435,5.335604,9.183905,0.621189,0.313141,-1.744183,-7.345181,8.741802,-9.042670,5.752474,1.091158,-6.412082,-9.023640,-5.875980,-9.422214,0.248879,5.949150,-1.212631,-2.870850,5.679840,1.827766,3.436500,9.683905,2.454515,8.647490,-7.144522,-2.630220,9.247914,6.350940,-0.888505,-6.081454,-5.530165,4.199650,-4.104789,1.910136,9.019369,2.983858,-4.767293,6.793272,0.563365,-4.620278,3.612242,-1.816835,4.711087,-4.332637,8.278347,-0.153954,0.827289,9.754640,5.432559,4.778342,9.377755,5.939370,9.355907,8.769549,4.905380,-4.018543,-2.531324,9.273896,-1.695197,7.558641,-9.440605,-0.240020,0.439332,-6.349140,-8.361450,6.052530,-2.050884,1.534194,9.831320,-8.897800,2.232514,-5.858483,-1.278567,8.742479,4.965815,-6.622416,-4.253157,2.278277,-0.187777,-7.745753,-8.903105,-9.526197,-3.540735,-1.293759,-5.549578,4.881275,-4.566795,2.244530,1.552217,5.843938,-8.848560,7.025815,-5.048921,-9.304619,-3.438792,9.636650,0.985011,4.074175,-0.552814,8.246957,6.419857,-6.461635,-5.833418,-1.557845,-0.276593,4.402278,1.235338,-7.744201,5.072181,8.687624,0.697235,-3.420901,-2.182113,0.921264,-8.001163,-4.245961,6.398703,2.992433,-8.558246,9.278293,4.558005,5.315709,3.306133,4.105745,1.701193,-6.036036,7.167893,7.909665,0.388037,-3.734279,2.725579,9.883387,9.311494,7.079678,-4.907886,3.322590,1.698280,-2.761403,-1.951256,8.159045,-8.102986,-9.476863,2.171924,-6.760744,-8.858935,-2.341900,8.558796,-5.750630,-2.719203,-0.377251,4.358179,-9.241691,5.639205,9.825525,-4.855653,6.945298,1.927639,5.011370,7.620926,0.544951,-1.881020,0.221926,9.173477,1.263475,9.674028,-8.655158,5.581429,1.026086,5.702236,-5.235820,-0.999261,0.799060,0.142335,-3.745294,-4.768351,0.937021,3.017957,-6.605941,-7.193254,-1.679476,0.151017,-3.800620,3.607097,7.510853,0.904243,8.066159,8.425947,2.027564,7.857225,4.687483,7.504535,-5.571958,-8.920098,6.245391,-2.835986,-6.884216,-4.870152,-1.244147,8.651297,-7.850771,5.780842,-8.187727,-8.610325,-1.234249,2.833771,6.251388,-1.828425,8.097580,-6.418292,0.665840,-0.036857,7.619431,0.095532,-5.256944,2.588266,7.295854,-9.614828,-0.569638,0.517376,-2.568081,-0.639354,3.976118,-2.549988,0.990549,6.436998,6.094707,3.788086,-4.869462,4.937113,9.870929,2.109873,1.991328,-7.453000,0.216204,-2.302414,-2.591687,3.708637,6.333233,-0.738440,1.651045,-6.830036,7.213572,2.318760,-0.005446,-1.182950,1.738003,-4.144626,-8.648452,-5.272402,-2.676545,0.231642,-9.300622,-1.264186,-0.679847,-6.851136,-9.547296,4.741256,-3.479889,7.791397,4.036278,-9.494820,9.196812,0.769617,8.827919,7.745579,1.218379,-3.069254,-3.191812,3.497792,7.433206,-9.705624,-3.191492,2.033721,-7.037502,7.072894,0.885080,-8.848447,-9.868404,-7.126596,-8.106159,0.464368,-5.482564,4.927369,-5.545953,-8.205471,-8.471812,2.950848,-3.685753,-0.493086,1.444790,-8.462264,6.912051,-7.747475,-5.193338,-5.987355,-3.397009,-9.202351,0.900699,5.289582,5.579419,-3.014824,-0.563218,-2.253542,-1.473088,9.481336,7.737627,-7.249035,9.516290,-4.638080,9.815401,-8.753358,5.850962,0.949022,-1.680875,-0.096198,-4.435353,6.747339,4.826890,3.199035,-3.138276,5.776375,-1.451536,3.279540,-1.237915,7.254925,-4.353959,-9.737511,2.757810,-4.964961,-9.829076,2.604291,4.561205,-2.124020,-6.285029,6.441046,-0.941535,-7.228534,-0.221356,-2.321455,-4.536191,1.969446,8.356447,-5.465604,2.988820,-0.956047,5.935932,-7.463176,6.996061,3.347311,-2.829474,-7.729592,-8.863378,6.501720,-1.062649,6.732278,0.881412,1.392056,-7.678187,3.547066,7.562155,-4.990759,7.038184,5.345836,7.383475,7.270058,9.503439,-9.107215,-3.415823,4.002037,-5.823333,4.424640,7.324978,-9.858689,-1.286771,4.127661,-6.395636,9.573713,-0.934899,-8.174498,6.296976,7.061244], dtype = "float32")#candidate|5266|(490,)|const|float32
call_5263 = relay.TupleGetItem(func_1797_call(relay.reshape(var_5264.astype('float64'), [16, 13, 1]), relay.reshape(const_5265.astype('float32'), [96,]), relay.reshape(const_5266.astype('float32'), [245, 2]), ), 0)
call_5267 = relay.TupleGetItem(func_1802_call(relay.reshape(var_5264.astype('float64'), [16, 13, 1]), relay.reshape(const_5265.astype('float32'), [96,]), relay.reshape(const_5266.astype('float32'), [245, 2]), ), 0)
func_3797_call = mod.get_global_var('func_3797')
func_3800_call = mutated_mod.get_global_var('func_3800')
call_5277 = relay.TupleGetItem(func_3797_call(relay.reshape(call_5253.astype('float64'), [100,]), relay.reshape(const_5255.astype('uint8'), [140, 14]), ), 0)
call_5278 = relay.TupleGetItem(func_3800_call(relay.reshape(call_5253.astype('float64'), [100,]), relay.reshape(const_5255.astype('uint8'), [140, 14]), ), 0)
output = relay.Tuple([call_5249,call_5253,const_5254,const_5255,call_5258,const_5259,uop_5261,call_5263,var_5264,const_5265,const_5266,call_5277,])
output2 = relay.Tuple([call_5250,call_5256,const_5254,const_5255,call_5260,const_5259,uop_5261,call_5267,var_5264,const_5265,const_5266,call_5278,])
func_5280 = relay.Function([var_5244,var_5264,], output)
mod['func_5280'] = func_5280
mod = relay.transform.InferType()(mod)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5280_call = mutated_mod.get_global_var('func_5280')
var_5282 = relay.var("var_5282", dtype = "float64", shape = (8, 4, 1))#candidate|5282|(8, 4, 1)|var|float64
var_5283 = relay.var("var_5283", dtype = "float64", shape = (208,))#candidate|5283|(208,)|var|float64
call_5281 = func_5280_call(var_5282,var_5283,)
output = call_5281
func_5284 = relay.Function([var_5282,var_5283,], output)
mutated_mod['func_5284'] = func_5284
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5339 = relay.const([[[1.775575,-9.886131,6.448595,-7.745493,0.565764,-7.019247,-3.432144,7.364644,-2.799333,-9.105763,8.107881,5.974862,7.098573],[2.320206,-8.665540,-9.653844,2.543899,4.005615,8.147335,8.333923,5.410617,-5.953700,-2.970958,9.637061,8.421282,7.844541],[-5.940116,4.452942,-6.816880,-4.760975,-6.678298,-7.867365,-4.469915,-2.993693,-9.162414,-0.957078,-3.363274,1.632537,-5.149111],[0.669446,-6.957171,0.605585,-5.847455,-4.440502,0.514421,4.087402,0.146171,-1.541688,-1.292252,9.458226,-9.404237,-1.821725],[5.762119,2.661035,-5.295328,2.554927,2.015884,8.967631,1.513858,-2.644718,0.851774,-9.431842,-9.325028,-8.882672,-1.391443],[1.458098,6.346871,1.425593,4.195422,-1.799292,5.967684,-5.691265,-7.959934,-9.019095,6.100592,8.681446,0.982139,-0.379022],[-1.582654,-7.436548,-6.362020,2.776329,6.879931,-6.462346,9.273341,9.741813,-8.725083,6.701838,0.972745,9.881108,6.659160]],[[4.640556,-1.257253,-0.886341,-6.510333,5.526716,-4.716669,-4.801907,4.069000,-9.143530,-8.978312,-9.672314,8.794466,3.648713],[8.425746,6.919221,0.280712,5.256784,-5.590306,-6.043883,-4.179056,-8.626232,-6.203506,4.692716,7.921199,-4.432528,5.466585],[0.692278,8.679845,3.219895,8.167021,9.091874,-1.828327,-0.258945,-7.465584,7.611695,1.047044,6.601562,8.438385,6.251305],[-4.748374,-6.264266,-0.698145,-0.557357,-3.696709,3.542894,-3.785885,9.548098,2.870537,-6.021587,-8.509953,4.561669,7.570452],[-0.882245,6.496609,5.727679,6.922901,4.399667,9.675942,3.406073,3.275922,0.112064,8.480873,-3.493742,3.381711,-9.194487],[4.707547,9.946055,-9.166563,6.649378,8.128547,1.461765,-4.160449,8.185746,-7.263706,4.963705,2.706245,-4.382480,2.147727],[9.364528,7.895162,2.418990,0.408402,2.332314,-4.683402,5.088371,3.072597,-8.732497,7.483835,-5.018119,4.033986,-8.051717]],[[-8.568620,8.253044,8.184545,-0.369567,2.805985,5.309170,-0.333597,-8.236112,4.767749,2.468103,4.959766,-8.010238,2.587950],[-1.470850,3.336358,0.755238,3.851618,9.436513,1.839300,3.907559,3.026895,-5.618112,3.694270,-8.832584,-6.944023,-2.888124],[-1.347400,3.411748,8.121746,-8.889780,-5.351485,-1.700393,-4.890471,-6.266940,-3.627426,-9.717098,4.282510,7.688839,-8.687374],[7.071959,0.721044,-9.281708,7.117088,3.664413,4.427423,7.520560,4.934754,-1.639525,3.222196,-4.233840,-2.755686,-9.672508],[6.570820,8.622325,9.924079,-5.730593,-3.805498,-5.616874,-1.050147,-9.406626,3.699398,2.244422,9.325763,2.981690,8.761023],[-4.796718,-2.348937,3.051247,2.783727,8.194394,6.752914,2.817138,-5.364198,7.646786,-6.221418,6.300321,4.086227,-9.793608],[-4.732516,-9.295596,5.166927,7.887411,9.872449,0.045025,9.223971,3.198828,9.227844,-0.666961,1.644197,-4.450386,4.437944]],[[8.641960,1.530964,-8.007213,9.963346,6.749718,4.900315,8.597669,9.976267,5.238901,0.078190,2.233364,-5.056633,7.732903],[-7.104771,6.345022,7.484534,-0.975294,-0.775157,-8.937820,7.460457,4.963228,-6.448633,4.113812,1.102325,7.160296,-9.144998],[2.485014,-5.633217,-0.895721,9.713300,8.506704,-1.220219,7.072020,-3.637634,6.504320,7.884370,-2.145736,1.274250,4.047762],[6.281402,1.720460,5.508474,-8.490549,2.395711,-3.394373,-2.997800,1.075436,-3.892560,7.986692,-1.127964,-8.271229,7.020676],[-3.138126,0.721543,-9.134727,-4.592132,-8.064490,-4.555991,0.449808,4.346525,-7.468471,6.709644,-1.790956,-8.931298,-4.977602],[-0.939766,-4.382190,-0.569987,-3.859342,-6.911696,-2.159492,3.005676,0.175527,7.425726,7.982229,-3.292489,-0.462098,-4.853980],[9.343637,-9.459493,7.918460,5.491128,7.369711,-0.284199,5.660402,-6.357080,0.149317,-1.874862,4.713224,-5.184807,-4.582595]],[[8.107838,-2.386441,1.085477,-6.480862,-5.173988,3.025601,-3.403327,3.895190,-0.006325,7.297101,-9.514720,-8.144372,4.506029],[-4.330143,8.459756,8.631163,9.352246,-6.884258,4.140707,-5.842986,-7.232036,2.085455,-2.129233,-4.043908,5.387256,4.171584],[-8.614264,-3.027428,-6.509270,7.443482,9.890211,-2.249220,9.455580,-2.877052,5.648231,-0.216932,-8.218788,-1.636997,-6.399593],[9.386534,6.802181,4.906221,3.036448,4.240103,-9.919005,2.460024,7.216432,-0.748281,-2.525020,-4.614103,3.102199,1.609171],[-0.804853,1.129280,-5.006445,3.348061,8.196252,-4.709602,-4.914109,-3.082645,-5.388612,1.105266,3.612707,-6.900598,-5.510060],[-9.629809,8.657003,6.803059,2.819441,-4.161091,3.814249,1.507044,-3.017967,9.309513,-8.095441,9.881563,2.795198,-0.372393],[-2.864402,-1.284376,5.913157,1.542805,6.070028,7.160416,6.608685,-5.081370,4.866578,0.898624,6.738880,-7.723014,8.018489]],[[2.310992,-8.816973,0.344434,-2.081204,0.968313,-6.735950,5.698294,5.568533,8.158892,-7.449843,-5.986820,8.315939,-5.529151],[-0.502988,-2.094212,-5.246009,0.131231,-0.109186,-1.771724,-4.684347,-3.283577,-8.453053,-9.905407,-4.172436,-1.597862,-9.007169],[-0.966949,-9.485530,-4.561280,-7.772188,-7.369525,-2.069188,4.142699,2.546062,-6.924446,-7.669545,-9.997644,-9.502051,-7.289883],[-5.252716,3.433335,3.381440,8.925566,-2.632157,7.743382,-6.761338,-6.405014,9.099261,6.753779,5.690172,-0.799511,4.776151],[-5.075600,-0.655637,-2.205947,4.452637,6.263941,-4.410708,-6.975956,-6.907175,7.158259,-9.396865,-6.387079,0.854509,-6.285757],[0.909233,-3.068849,4.416739,-0.851913,-8.931311,9.939333,-9.208506,-4.890856,7.503257,-6.571632,-0.079557,-9.014788,6.498448],[-2.695193,9.261177,2.502257,-9.812639,6.771013,-3.084560,4.372194,-6.961668,-7.324913,9.229148,4.029578,3.584672,-3.231664]],[[1.127023,-7.746522,3.185296,-3.420205,6.881510,2.049795,8.859103,-3.501448,-3.593743,-8.334135,-9.804795,-0.398693,-8.030212],[-9.393348,8.493189,2.232164,0.077257,7.758154,0.497309,7.110051,6.973792,-7.665323,6.396652,-9.194513,-4.629903,4.657670],[3.969334,-2.539041,9.997662,0.801966,8.110264,-7.869572,2.939038,-2.762377,5.229666,6.462551,-5.146004,0.244221,-5.650377],[-2.380724,4.150234,8.462269,4.889044,-4.566265,-4.817337,2.337354,-7.067016,2.894636,0.837382,-4.767749,0.060043,7.622589],[8.428008,-0.122674,-7.553010,-3.959775,-0.582853,-8.729705,7.380687,-1.099929,-8.412617,-9.870178,0.499401,-6.371472,3.851450],[7.870600,5.781648,-8.048611,-7.650174,-1.804642,2.320773,-9.852158,0.563739,4.227645,7.697752,-1.370936,6.709712,-7.473231],[-3.248734,6.556678,-1.759815,3.484903,6.410745,-5.939783,-4.945459,-3.183328,-1.314388,5.156315,3.604049,-1.294172,-7.680153]],[[3.807673,7.713570,2.997182,-6.517877,6.751405,6.161563,-7.790321,3.530211,-3.376796,-7.232629,4.840409,7.800348,-0.794115],[-7.653065,0.555429,7.327485,-4.983806,6.433070,9.693785,8.383032,-0.969691,2.107224,1.955391,6.889908,-2.094716,6.531439],[-7.898271,-0.459115,6.306360,-6.164317,4.321900,6.225257,-6.898660,7.283985,5.537722,1.481481,-8.244740,-7.668354,6.306284],[1.072233,2.096246,2.405127,-7.438151,-2.006019,-2.308223,-8.570463,4.476653,-1.172697,-2.044543,6.262254,-7.153213,4.001125],[8.046452,-7.716779,-5.105232,-1.464215,-2.090380,7.486604,7.913682,3.363638,-2.429194,2.972425,3.626044,-8.520785,-7.546424],[9.645307,-6.962263,7.083512,3.005445,-9.543739,1.275051,9.534314,-0.780306,-7.805691,8.452414,-4.163004,-6.118621,0.852535],[1.285096,1.972167,2.064888,-4.192371,-9.535746,8.110385,7.694397,0.759035,-6.547813,5.370357,4.230801,-8.751485,9.298240]],[[1.134813,-5.311707,1.328088,-5.319725,4.411518,-2.052160,8.539678,5.765251,-2.307574,-0.226370,-6.007435,-4.151597,7.281262],[6.912377,-6.180181,-1.672550,-7.899013,-5.657207,-1.753429,6.565908,-1.452970,1.371144,-5.137318,-2.917523,-5.570770,-2.370615],[8.040655,-0.148059,-6.779878,-3.367863,-9.783850,-5.367160,-0.079472,-9.302167,7.556825,-8.715548,6.508796,7.568634,2.856606],[-3.455788,-3.286580,-9.485277,-9.535893,4.480272,-8.585992,5.634703,-7.322154,-0.793415,5.595835,-1.095639,-5.473025,-8.901419],[-9.963077,4.871240,-5.002441,1.995932,-6.334124,-4.579662,-2.408980,0.349744,-3.539832,9.337441,7.729889,8.714373,9.062643],[2.016178,-6.863445,4.937735,-8.195498,-8.512226,6.785596,5.128726,4.577866,-6.751505,7.773554,4.892457,-9.770693,3.387810],[-4.484590,-9.935149,-8.761687,5.204192,-9.159573,9.925908,7.159623,5.830025,-0.093778,-2.438149,-0.842219,4.714573,-0.159972]]], dtype = "float32")#candidate|5339|(9, 7, 13)|const|float32
const_5340 = relay.const([[[-5.095100,-4.524760,1.699079,-0.934702,1.898381,8.192107,-1.247392,-4.439076,-4.704428,-3.952404,-3.404247,9.467268,2.025043],[6.453976,5.709255,6.191858,5.214658,-0.875264,-1.523991,-8.722610,-0.581164,0.597702,-1.472301,-7.692877,2.968549,2.538398],[8.317578,6.859371,-3.875727,-9.538901,0.999743,8.159706,-0.962802,-3.021715,-6.121747,-6.518733,-7.036405,1.213948,2.958124],[5.443636,1.128534,-1.823712,1.724478,8.711759,-1.036782,8.638854,4.232449,-3.651305,-9.744273,3.544730,7.285600,8.300334],[8.996246,0.162313,-1.788488,-5.687566,2.609167,-6.216824,-6.767505,-6.362877,-4.155712,-6.989731,-7.012809,3.121652,6.345833],[2.629973,-1.913541,-6.913588,-8.816577,-8.981065,3.231555,-9.004416,3.399129,7.430490,-2.968425,3.895305,-3.131200,2.517089],[-8.733419,0.023936,5.856865,3.276930,-1.514594,5.890346,1.632107,2.686625,-3.417146,7.190277,7.636505,9.041528,7.424672]],[[-3.698996,0.377848,-4.853223,-6.845321,3.871112,7.758004,3.815409,6.716862,-7.511439,-3.160539,0.637662,4.550875,-7.510235],[5.671667,-7.767096,-3.215435,-4.380520,-8.252039,-4.121786,7.274575,-0.016910,-9.217420,-0.162688,1.865413,-3.181512,-4.551749],[-5.775377,-0.116236,-3.017235,4.275764,-7.908211,2.124513,1.203892,-6.032449,-9.990497,9.930222,-2.951371,-3.875511,6.014096],[8.899574,3.302372,8.865798,5.747226,0.027093,-4.308961,-1.006344,-2.476958,4.250077,-4.061194,7.337051,7.108566,9.482991],[-8.027950,-5.778298,7.552003,2.865529,-6.926117,8.194141,0.412847,1.820233,3.231028,-9.853333,-7.991730,2.397694,5.062233],[2.814762,7.884417,-1.336612,6.099591,-4.025755,-5.269539,8.336401,-9.685321,-3.939201,2.530363,9.693890,-9.538192,6.209285],[-0.679702,9.012557,4.350914,-2.656619,4.899915,3.251603,-6.107888,-5.579645,4.072361,0.235537,-6.877121,8.677893,5.509091]],[[-9.660852,9.527048,-0.904353,-9.106077,9.667514,2.598707,-3.662869,4.387926,8.794282,6.208468,-2.286881,0.941419,9.054578],[-2.386901,-4.789586,2.919855,4.490285,-9.845625,-0.343267,7.532392,-2.226651,-3.414941,7.738339,-3.987996,6.380895,-2.695180],[0.246713,9.112500,0.838720,3.373379,2.771184,-1.583289,6.720015,5.193372,5.792144,-2.806795,5.093579,7.412545,-3.392817],[6.636071,9.175920,8.642036,1.234059,0.669090,-8.695912,-7.636445,-8.022682,-9.361258,0.635318,8.652706,-7.477765,9.489141],[-4.699504,6.233022,-0.318594,-1.452791,-1.853296,-3.949531,-1.532072,1.336600,9.271090,9.273069,-7.800930,9.705388,8.805909],[5.557145,-9.174716,1.303390,0.770938,9.718040,5.659894,7.411075,-5.615950,7.349842,-4.153710,8.873318,8.185989,0.936723],[6.077592,5.227128,7.304124,-8.727618,1.728309,2.923562,-7.140333,2.738008,-1.815963,-4.585128,-8.744160,-1.296885,-4.253235]],[[-4.666119,-3.591620,7.762841,4.293369,-9.316497,3.121556,-2.641455,-4.139603,3.104850,4.678526,-2.380680,-1.204485,-9.120902],[-5.278623,8.963516,-0.893202,-6.588518,9.699204,-4.780795,7.580685,3.600347,-3.679137,6.073460,4.313520,7.049954,4.920318],[7.417341,-0.572423,4.399257,-1.857526,4.950925,-3.248818,1.373075,-6.224995,-7.994288,-9.172755,-6.994077,-8.680671,9.311687],[4.861507,-2.120499,-7.852672,-8.357061,0.859236,7.914886,-8.253874,-7.092489,1.754348,-0.417354,-2.121818,5.580267,-4.603506],[7.621512,7.099914,8.994746,3.523994,-1.628648,5.209613,7.926847,-5.179780,-7.405135,3.786856,0.240086,-9.020374,-9.584545],[1.059577,1.186724,-6.372292,-3.426704,7.396405,-1.761653,3.045304,-8.645602,9.546267,0.915633,-4.320644,-4.251812,-8.221785],[-1.788707,2.596155,1.662422,-4.841063,-2.924849,0.507986,7.512714,-7.242615,-2.062953,-8.557104,-7.080087,-1.564140,9.727232]],[[1.129926,-6.321384,2.199099,-4.726703,-2.099534,5.142535,-6.880671,0.683316,-7.690707,-8.574982,-6.382244,-4.914620,6.496078],[-8.746338,-5.722271,1.149734,6.887673,-9.600511,-2.212044,7.619870,-8.190274,-8.101275,-2.765851,3.716229,-7.963804,-3.144617],[-5.235237,5.086152,4.951893,9.375189,5.853965,-2.782716,-9.693997,6.956735,0.424036,7.879254,-1.033604,1.496802,4.436574],[5.023850,-8.280850,-3.434950,9.921480,6.583439,7.780462,-9.476464,4.577947,4.411165,3.365455,-5.649938,4.154294,5.297363],[4.288235,7.781683,1.728235,-2.776202,-4.078465,-0.825199,-0.861441,-0.664154,-9.150231,-5.709651,7.707490,2.160103,7.025156],[-5.211248,-0.714612,-2.085471,-8.105294,-0.338032,-2.247312,5.928595,-1.186369,-2.655095,8.334626,-5.679447,-1.359969,5.023261],[1.684601,-7.005955,3.753362,6.703912,-8.105054,0.166815,5.695863,-0.243060,6.836499,-7.708829,3.713327,-6.285882,-9.571181]],[[-0.575523,-6.635501,-3.073862,1.736087,-1.772748,4.365423,-1.628882,8.336165,-4.651446,3.024501,-7.760566,8.977873,-1.734741],[-2.970441,6.751554,-4.921782,8.394057,-8.338281,-5.453465,-7.050424,-2.209958,-7.519570,-2.238177,-0.253663,3.256840,6.506982],[-8.267581,-1.588253,-1.264448,-2.347042,9.264451,0.505705,4.123772,7.510665,6.179219,-1.813167,2.715517,-3.374685,-1.828391],[0.207448,7.811496,6.677869,3.053611,-1.615853,-6.390971,0.402737,2.043078,-1.663002,-7.456477,-9.170757,-4.048213,8.096657],[-8.061427,4.454003,0.205791,-3.561543,8.024807,-2.945766,3.059612,-4.792769,0.193265,-5.043509,6.873710,5.984133,-2.297204],[3.842027,-2.853697,-5.112290,4.286838,1.120623,-8.790357,7.784147,-9.816952,-8.564929,-9.506747,2.197800,0.648473,0.287987],[2.550360,-6.503855,-5.377697,-1.001789,4.849201,6.878323,-4.752203,4.910353,-3.516385,-3.829837,-3.473785,8.663384,-0.290695]],[[1.432235,-1.133637,-2.412620,2.495603,7.995733,-5.481736,0.474254,-6.174500,-8.367047,1.411149,-0.822071,-0.521557,-1.159838],[4.250564,-7.560525,2.042276,3.240218,-2.373289,1.989806,3.753032,8.910901,-5.089288,6.889257,-7.974217,1.824306,5.138558],[2.492210,-1.607949,-4.488735,0.317244,7.877364,-6.093642,-6.768755,-1.398622,3.420420,-9.698806,-4.157503,1.071990,-3.334716],[4.282640,4.105336,3.824211,6.062076,9.344985,8.315501,-1.737448,9.582245,-2.476740,9.588852,5.943256,-7.622993,9.201427],[-8.341034,-9.919460,-1.660263,-1.689954,-8.629667,7.181493,7.804166,0.675813,1.270281,-1.287499,5.340417,7.715902,6.591837],[2.942141,-1.331051,-1.763578,3.651015,7.708117,9.379229,9.195817,1.365853,9.063134,0.208784,-2.894673,-2.572267,8.479066],[7.656499,-7.877243,0.912139,-9.770796,-3.721376,-1.261498,1.963787,-7.929226,1.164558,-3.307025,-8.037153,-0.087912,-4.265892]],[[-5.010808,6.205733,-4.472120,-0.234789,0.012282,-8.098760,-0.596723,2.734807,-1.704424,-7.271095,1.749115,4.949395,0.958694],[8.885769,8.065504,-3.234371,-4.727207,-1.830743,-5.341999,1.052424,-8.670181,4.806011,-7.526813,-4.203224,4.540881,2.999321],[-5.197290,-8.253816,-4.304531,9.343673,4.605845,-5.881055,1.577154,4.030888,6.243587,-3.674744,-6.612683,-7.212832,-1.909817],[-0.156683,-6.171415,-3.948661,-9.376536,-9.931572,-9.277918,-6.277537,8.662316,4.960026,4.560390,-3.457382,3.715667,3.140281],[-1.927943,-0.652820,-5.558766,-8.355694,7.068143,7.020938,1.278230,-2.618056,-8.516563,4.718879,2.709257,-7.153973,0.824190],[-9.125357,3.244703,3.494657,0.480187,-8.823772,-7.753199,-9.698161,5.171446,6.817619,4.320164,-6.051055,-4.153115,0.086679],[-1.886780,1.037867,-8.389973,-7.966535,7.768552,7.519474,-2.370172,-3.619745,-1.155487,-0.363165,-0.393390,-0.367138,3.299382]],[[7.851195,6.594041,-3.328818,8.737127,7.840975,5.386977,4.140980,2.597034,4.925848,8.008077,-0.983192,0.783770,9.698398],[-9.594726,3.277010,1.552686,-9.158791,-3.302695,-3.633794,-1.647033,9.520825,-8.369631,-6.633144,-6.732415,6.081159,6.506849],[8.954337,-0.559074,-9.591408,5.580518,-5.298901,0.107220,2.012281,2.877819,7.207122,0.653256,2.310514,5.481645,-5.877085],[-0.203856,4.722581,7.195363,-3.359916,-6.341658,2.835808,-4.686437,-5.122939,-1.663742,2.436571,4.463976,1.899604,-5.296548],[-7.666243,-0.373507,5.078525,-5.256612,-1.162614,5.834975,8.524239,2.105206,8.013520,4.335282,6.327019,2.509557,3.405679],[6.449554,-9.630265,-1.914350,-0.891582,4.879163,2.788539,-4.457098,7.432769,-9.950062,0.094775,7.291725,7.252249,-1.825390],[-8.504516,-9.800423,8.950521,-8.239037,9.183657,-0.620774,1.836333,6.190827,-1.304012,-7.536296,9.209466,-0.473476,6.688460]]], dtype = "float32")#candidate|5340|(9, 7, 13)|const|float32
bop_5341 = relay.greater(const_5339.astype('bool'), relay.reshape(const_5340.astype('bool'), relay.shape_of(const_5339))) # shape=(9, 7, 13)
output = relay.Tuple([bop_5341,])
output2 = relay.Tuple([bop_5341,])
func_5348 = relay.Function([], output)
mod['func_5348'] = func_5348
mod = relay.transform.InferType()(mod)
output = func_5348()
func_5349 = relay.Function([], output)
mutated_mod['func_5349'] = func_5349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5214_call = mod.get_global_var('func_5214')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_5374 = relay.TupleGetItem(func_5214_call(), 0)
call_5375 = relay.TupleGetItem(func_5216_call(), 0)
func_3647_call = mod.get_global_var('func_3647')
func_3651_call = mutated_mod.get_global_var('func_3651')
const_5397 = relay.const([-9,6,10,-10,-9,6,-5,-6,2,1,-2,3,4,6,-10,-6,-3,-10,8,-5,-4,5,-3,6,-4,-9,8,6,1,-7,-8,9,-5,-6,10,-10,-4,4,7,-5,8,9,7,9,1,8,-9,1,-7,-9,-10,-1,-5,6,-8,-4,4,-4,1,10,9,1,4,-2,-1,-7,-1,9,-5,9,-5,-10,8,-1,-5,-3,8,2,6,-4,4,-1,-10,-10,-5,-10,4,9,-4,-1,1,5,7,-1,1,1,-7,-2,-3,3,3,-8,3,-7,10,-8,-3,10,8,3,7,5,-6,-2,-9,-7,-8,9,4,10,7,7,-9,-8,-10,-6,-6,-10,10,-1,7,-3,-5,-10,-10,7,8,-7,-10,-4,7,7,3,-6,-1,3,-7,5,-9,-2,-7,6,2,-2,8,5,8,-9,-1,-5,1,2,-4,-1,4,-10,2,-6,-9,1,4,3,9,-6,-6,-5,-1,-7,6,6,1,2,-3,-2,-7,-10,-8,-7,-2,7,4,-6,-9,-9,-1,8,4,9,-8,-10,3,-8,-2,6,-5,-3,-5,7,-10,-2,5,4,9,7,-2,4,8,6,4,5,7,2,6,9,-6,-6,-10,-10,-2,8,-7,-1,4,-6,-1,10,10,-1,1,-10,-10,10,9,-1,-9,6,1,3,-7,6,2,10,-9,-8,-3,-1,-7,5,1,6,6,7,1,5,-1,-10,8,-4,-2,-7,-1,10,-9,3,-2,1,-10,5,10,-1,-2,3,10,-7,10,-7,-4,10,-9,-5,-1,-9,9,-4,6,10,-4,-10,-10,7,2,-10,1,10,-2,-3,3,4,5,-1,-3,1,-3,4,-7,-3,6,-3,-5,9,10,-10,3,7,4,-1,10,-6,4,-6,2,-9,-5,7,7,-9,7,4,-5,-10,-10,8,6,2,-4,10,-10,-4,3,-6,7,-1,-5,6,7,-3,-8,6,-4,3,-7,-4,4,-3,-9,-7,-4,-3,-3,-1,7,-7,4,1,4,-6,9,-9,7,-9,-10,-5,7,1,10,-2,7,-4,-5,-9,-8,-9,4,-1,-1,-7,7,3,-3,5,8,10,7,4,-8,-10,-7,-5,-8,-2,-7,9,-3,9,5,-7,1,8,-1,1,-7,-8,-1,-7,-9,9,-8,-9,9,6,2,-8,-1,3,3,3,-7,6,4,-9,4,9,6,-4,-6,10,-4,-2,-9,10,9,1,6,3,3,-3,10,1,-9,-3,-7,-2,-5,9,9,3,-5,-3,-2,-1,10,3,7,6,-1,1,-3,-9,9,-2,7,8,2,3,10,10,-7,10,9,9,6,-5,7,9,4,-6,-9,-5,8,6,9,7,-10,-9,4,6,10,-1,9,-2,-5,6,-1,-6,8,-6,-9,2,-10,8,-8,6,-10,-4,-8,2,3,9,10,4,7,-4,2,6,8,8,10,6,2,9,-4,-3,-10,2,8,-5,-5,1,-4,3,-3,-7,-6,5,3,-8,-4,6,5,-1,4,-8,-6,10,10,-1,4,-7,3,8,5,-4,9,2,-10,7,-10,4,-7,-5,6,9,-6,-10,-10,6,4,-4,-2,5,9,5,-8,-5,-3,-2,-4,1,-1,10,1,9,-8,6,-9,-9,6,8,-2,9,-1,4,-5,-9,8,-10,-7,-2,-9,-6,-3,9,-8,-3,9,-8,4,10,-9,-8,8,5,4,-2,-10,-3,3,10,8,6,5,2,7,1,-10,-4,6,6,1,-2,8,3,9,7,-7,7,-8,-5,8,1,-6,8,4,-1,6,5,-1,7,2,-7,10,2,10,1,3,8,6,-3,-10,7,-10,-1,-9,-10,4,-9,-1,10,-8,1,-4,-5,5,-1,2,2,-10,-2,-1,1,10,-2,3,-2,7,-6,-4,-1,9,-5,-2,3,-2,-3,5,-2,6,-6,8,-3,1,3,-10,-4,6,10,-8,10,-5,-5,-8,5,-1,-6,9,3,9,-5,10,-10,1,-6,4,-1,10,-1,-2,-6,-9,1,2,-8,-8,1,-4,-6,-2,6,-10,-7,2,1,-6,5,7,-3,-8,9,-8,7,3,9,-6,3,9,-6,-8,4,-2,-1,-7,-10,-9,-2,-1,-9,4,2,-2,-6,5,-3,-1,-8,6,-3,-6,-9,-2,-2,-1,7,-8,5,-4,-10,-5,3,-9,-8,-2,9,4,3,-8,8,5,-5,4,2,1,6,-4,-3,-2,8,-3,-4,-5,-4,-3,2,-8,2,7,10,7,-5,7,-3,-2,-4,10,-4,8,-5,10,10,4,-10,5,10,-5,2,4,2,-8,3,-8,-10,4,-7,7,-2,7,-2,1,-4,-9,-10,-2,9,3,-8,8,5,-7,8,-10,-5,-10,1,10,-8,2,2,-2,-5,-4,4,-3,5,3,-4,-2,2,-7,-5,-8,6,1,-5,-8,8,5,3,4,10,9,-2,4,-5,7,-9,-3,5,10,8,10,9,1,5,-8,-5,-10,10,-3,6,6,-2,-10,-2,-7,-10,8,6,9,-7,6,-8,10,-10,-4,10,-2,7,-1,4,-1,7,-4,-1,4,-2,1,-7,-7,-4,3,-10,-8,1,-8,-7,1,-10,-9,-8,2,-5,1,4,9,10,3,9,9,-3,6,9,6,-10,2,-1,-1,7,-6,-1,-8,7,3,5,7,-2,-7,-8,-10,-1,-10,7,7,-5,-5,-8,-9,6,-4,-5,-8,3,8,2,4,10,-6,-7,-9,7,-1,6,-3,-4,-5,5,-8,1,-2,1,6,9,-8,-6,9,10,-10,9,-1,10,2,9,6,5,1,-3,7,1,-10,-2,-10,-8,1,6,10,5,-5,-1,4,-10,-2,-4,-7,-4,-9,6,3,4,3,5,7,-3,-4,-3,10,3,-6,-1,-1,-2,3,2,3,-9,5,10,-4,4,9,8,1,-9,10,2,7,2,3,8,-1,2,1,-9,5,4,-3,3,-4,10,4,-7,-5,1,-4,-4,5,2,10,-10,-7,10,7,-3,-8,6,7,3,2,-2,2,-3,3,-3,-9,7,7,7,3,-4,-6,-2,-2,7,-8,2,4,-7,3,10,-2,9,4,-3,9,-7,8,6,-2,-5,1,-10,-5,9,-6,-9,6,10,-5,9,10,6,3,9,-6,-8,2,-9,-3,-4,-9,-9,-10,-7,2,8,1,-10,-10,2,3,-1,7,1,-2,1,7,-8,-1,-3,-2,4,9,-10,1,2,-3,9,7,-10,-7,10,-2,-3,3,5,1,1,-1,6,4,-8,-5,6,10,-10,-8,-3,9,3,-3,7,6,-1,-8,3,-9,8,-9,-3,-10,-6,-3,9,4,-4,-8,1,1,-5,3,1,-8,-3,3,5,-10,10,-7,-5,-10,-8,-4,-4,-2,-3,6,6,-5,10,6,-1,-6,4,-1,4,10,10,2,-8,-5,-1,7,5,-6,-9,-10,-3,-3,-10,5,-6,8,8,1,6,7,7,3,-7,8,-5,8,7,-4,6,2,4,-7,10,10,-4,-1,2,-6,7,7,-4,-8,6,7,3,3,9], dtype = "int16")#candidate|5397|(1320,)|const|int16
var_5398 = relay.var("var_5398", dtype = "float64", shape = (770,))#candidate|5398|(770,)|var|float64
call_5396 = relay.TupleGetItem(func_3647_call(relay.reshape(const_5397.astype('int16'), [11, 12, 10]), relay.reshape(const_5397.astype('int16'), [11, 12, 10]), relay.reshape(var_5398.astype('float64'), [77, 10]), ), 0)
call_5399 = relay.TupleGetItem(func_3651_call(relay.reshape(const_5397.astype('int16'), [11, 12, 10]), relay.reshape(const_5397.astype('int16'), [11, 12, 10]), relay.reshape(var_5398.astype('float64'), [77, 10]), ), 0)
func_5046_call = mod.get_global_var('func_5046')
func_5049_call = mutated_mod.get_global_var('func_5049')
var_5403 = relay.var("var_5403", dtype = "float64", shape = (480,))#candidate|5403|(480,)|var|float64
call_5402 = relay.TupleGetItem(func_5046_call(relay.reshape(var_5403.astype('float64'), [8, 4, 15])), 1)
call_5404 = relay.TupleGetItem(func_5049_call(relay.reshape(var_5403.astype('float64'), [8, 4, 15])), 1)
output = relay.Tuple([call_5374,call_5396,const_5397,var_5398,call_5402,var_5403,])
output2 = relay.Tuple([call_5375,call_5399,const_5397,var_5398,call_5404,var_5403,])
func_5406 = relay.Function([var_5398,var_5403,], output)
mod['func_5406'] = func_5406
mod = relay.transform.InferType()(mod)
mutated_mod['func_5406'] = func_5406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5406_call = mutated_mod.get_global_var('func_5406')
var_5408 = relay.var("var_5408", dtype = "float64", shape = (770,))#candidate|5408|(770,)|var|float64
var_5409 = relay.var("var_5409", dtype = "float64", shape = (480,))#candidate|5409|(480,)|var|float64
call_5407 = func_5406_call(var_5408,var_5409,)
output = call_5407
func_5410 = relay.Function([var_5408,var_5409,], output)
mutated_mod['func_5410'] = func_5410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_5437 = func_2874_call()
call_5438 = func_2874_call()
output = relay.Tuple([call_5437,])
output2 = relay.Tuple([call_5438,])
func_5443 = relay.Function([], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
output = func_5443()
func_5444 = relay.Function([], output)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5495 = relay.const([[[-4],[-9],[-7]],[[-10],[5],[-10]],[[4],[-7],[2]],[[-9],[3],[-7]],[[-7],[-6],[-6]],[[-9],[3],[-1]],[[-6],[-9],[6]],[[-3],[9],[-5]]], dtype = "uint32")#candidate|5495|(8, 3, 1)|const|uint32
const_5496 = relay.const([[[-5,-4,-1,-9,3,1,-8,-10,3,10,7,1,6],[10,-8,5,-7,-8,-1,-9,-2,6,3,1,-2,-9],[-6,-10,8,-4,-5,4,10,-2,8,-3,2,-2,-5]],[[-4,-1,9,3,2,1,10,4,8,5,-5,3,-3],[7,-1,-8,1,-6,-9,-10,-2,6,5,-5,6,-4],[3,10,2,1,2,-6,1,3,-3,-10,4,-7,5]],[[-3,-10,-3,4,-8,3,-10,1,7,-10,-1,-3,-7],[4,-5,6,2,-5,-8,10,-7,-7,7,-7,-9,7],[1,8,9,4,5,-2,-5,-3,9,-8,6,5,1]],[[-2,-8,-10,-10,-9,-2,-3,-2,-3,-3,7,-2,10],[10,3,-7,4,3,6,-2,-2,-7,-1,-1,3,3],[-8,7,-2,3,-10,10,6,8,9,-7,6,8,-5]],[[2,-3,-10,-9,-8,5,6,-2,9,-2,-1,9,-5],[-4,-2,2,-6,10,-7,-4,8,8,5,2,9,-1],[8,10,4,-4,4,-10,-2,-8,-9,-4,10,-1,-2]],[[-8,-9,-3,2,-10,-9,3,-2,-4,3,-1,-4,9],[9,-10,-5,3,-9,2,-2,-8,-7,-6,3,-3,-4],[1,1,2,2,-10,2,2,2,3,-6,-6,-3,4]],[[-2,4,-3,-4,7,-4,-9,5,-10,3,10,-5,-10],[-9,-1,8,-10,-1,-1,7,10,4,-8,1,5,7],[1,-2,-2,3,-4,7,7,-6,3,-4,-7,-4,-9]],[[-2,-2,-2,2,5,6,7,1,5,4,-4,-9,1],[9,10,4,-2,10,9,-9,3,-2,-7,-4,9,-6],[-4,1,10,3,-8,9,-1,-6,-8,-5,-10,1,10]]], dtype = "uint32")#candidate|5496|(8, 3, 13)|const|uint32
bop_5497 = relay.bitwise_or(const_5495.astype('uint32'), const_5496.astype('uint32')) # shape=(8, 3, 13)
func_603_call = mod.get_global_var('func_603')
func_605_call = mutated_mod.get_global_var('func_605')
const_5505 = relay.const([[-3.505018,-9.709696,2.836026,8.914539,-4.104436,-9.747826,5.168048,4.119010,0.922971,0.752287,8.674322,-3.145122,6.093198,-7.144090,0.382621,6.121602,-0.309797,-4.922145,9.198483,-4.974810,1.880017,2.552095,-5.844341,-7.736361,4.614739,3.864864,-3.939483,-8.160391,8.724090,0.071817,2.224724,-2.088602,-7.096334,7.072321,-3.486593,4.463252,4.699835,-0.261953,7.708397,6.762248,7.206025,5.180540,-4.699104,8.597887,-2.209370,-6.267130,-7.621515,4.548102,-5.876933,-7.717318,-8.741300,-1.643295,-7.232471,7.655687,3.067407,-9.140306,5.366444,-9.552975,0.943152,0.744647,-2.397923,3.274136,0.381619,-5.319110,-3.592104,-6.166183,-1.786012,-3.794734,-9.849625,1.214559,-3.962490,-2.700588,2.137202,-0.310062,-2.029201,6.694994,5.933794,0.523415,1.665700,-7.781021,2.314765,3.594320,8.181618,-3.914886,3.232593,9.227739,-4.190799,-8.351474,-6.809944,-4.354748,-0.293288,-4.049453,0.877503,-6.450658,4.142972,-1.417891,-5.550222,-2.791031,1.899749,1.346928,-2.370839,-6.180535,-7.905230,5.716753,2.120711,4.327555,3.992325,-3.620220,-3.641009,4.317997,0.821228,-3.783927,4.866829,-7.561572,9.424976,-3.600583,-4.880734,-9.751029,8.415495,-8.733469,-3.809676,-1.922565,4.925183,-7.672999,-3.305667,2.868218,5.844830,0.471491,-6.551281,7.056212,5.514182,-7.737380,-6.851385,-8.129480,-7.152743,3.816310,-1.569891,-4.788549,-7.393942,1.955107,-4.376711,-4.601472,-9.997398,5.110632,9.748128,5.196260,-2.206692,0.684040,-9.401292,-0.842147,-5.816722,8.652858,4.088039,-2.882969,-8.421481,-1.075289,-6.799006,-5.500792,-4.098749,7.604458,-4.390483,-7.410075,-5.018448,-3.351044,9.295831,1.762829,-6.093475,6.852383,-7.189976,1.493187,0.698038,-8.000443,-3.787731,3.572801,-0.258791,7.045198,9.341198,0.780743,0.779830,-1.979265,-4.682541,-2.667905,1.915273,-1.567266,1.251693,-5.826261,-5.845015,-1.268373,-6.423918,9.591305,-3.345497,8.101738,3.505408,-1.096392,-7.871212,7.685960,-8.763591,9.818551,7.681426,-3.329039,8.874699,-3.757626,4.290319,5.501430,-6.077939,-1.733659,0.272025,-0.004505,-2.302541,7.577507,2.387206,3.702303,-5.813883,0.691909,-5.833148,-6.524023,5.896148,5.029033,8.858584,-5.744982,-5.182566,-9.936752,-4.234658,-7.539665,1.374925,-9.854317,-2.630906,8.703563,-6.940038,2.634712,-9.834710,6.159878,-1.625788,-9.879955,2.186779,0.997409,2.694858,9.115171,-5.026917,-1.059498,6.152251,-8.407218,-7.480160,-5.499998,9.810554,8.360190,6.749142,4.174084,-4.192765,9.504536,-9.797602,9.685255,-4.350776,4.787069,-9.796310,4.635685,-0.038298,6.678715,7.213741,-6.512294,1.302493,-4.263876,-6.040375,-1.529528,0.809994,-7.214076,-1.145021,0.405747,-8.853700,9.277025,-6.093007,-7.917617,0.747686,1.190866,4.581663,8.930516,0.150222,9.039016,4.772350,-0.800241,6.547276,-6.649674,-8.583673,-4.180545,-7.976228,1.398605,-0.242747,-7.887522,-0.297941,-1.091724,6.213061,-9.184498,8.689933,-5.605048,-9.200940,6.298957,5.367913,4.285516,2.692858,-0.095549,-4.531790,-8.523527,8.976681,-2.066108,-7.413454,6.543468,-5.822513,8.754452,4.113358,-1.751617,-8.933192,8.079705,3.263173,-1.702359,-1.789169,-1.572665,-8.030766,-8.613122,1.245121,5.280568,8.598937,6.421129,7.553375,-5.427537,-3.781407,-7.532472,-4.691310,-9.354631,-0.279129,1.635736,0.239544,6.071887,-4.231462,0.408114,-5.714074,-8.299915,9.391076,5.982628,-5.223083,2.808407,-2.909748,2.607419,6.866554,-4.963801,-9.371600,9.782481,-8.243563,-9.688715,-1.181378,-7.809498,-0.277662,-4.965208,5.103243,-1.766728,1.430405,-8.760142,6.969017,5.651315,-9.558320,5.673532,6.776647,-5.529757,1.183929,-4.941724,4.688305,8.390139,0.351919,1.446786,8.001316,-1.924529,-7.399805,8.103570,5.995915,-6.310667,-9.125335,-9.846404,-0.543535,8.463085,3.816317,8.767306,3.822150,7.952816,3.743284,3.299257],[-4.839759,8.123389,-7.889415,2.796780,5.443469,4.657392,0.804276,8.987633,9.184668,7.898072,7.883911,5.173619,3.325247,5.450810,1.285944,-4.664454,6.127093,-6.881910,-9.432757,9.103095,-0.007567,9.992162,-3.587649,8.325597,-6.510505,1.882305,-2.371941,-2.924392,6.822217,-7.546793,-4.400345,-5.821649,-6.804191,4.153710,-9.504101,1.369608,-0.087420,-6.333442,6.850447,-6.715365,9.141182,9.241405,-0.571351,0.850870,-7.730950,-3.273724,-1.655078,-1.800920,-8.030420,2.013929,-2.601873,5.192956,-2.997194,1.574515,0.019426,4.402164,6.971316,-1.547444,-6.793759,8.466454,8.556301,3.967930,8.859021,1.787684,0.448658,-3.822399,9.971748,-0.884834,-1.726279,2.790754,1.686973,-1.847564,-8.645663,-8.603379,-9.888921,8.712102,-4.291916,-5.259415,-9.486663,9.439937,-5.469109,5.109383,0.314782,8.185348,4.167676,6.545963,1.422873,-1.328050,9.798072,-1.584053,-8.778955,6.960989,-8.018496,-2.808371,5.832200,2.911014,-8.219457,7.756476,-7.043281,2.892562,-0.732694,4.664398,-7.324421,4.659355,-8.708009,1.914042,5.742107,6.151376,-3.300439,-1.676538,5.001935,-0.948433,-7.838650,2.866379,-4.368341,-4.303912,-3.169918,5.483251,5.992174,-8.323743,-3.630262,8.831185,-5.150000,-9.323785,-6.924742,7.408472,-3.507638,9.478430,6.066635,0.562936,3.926918,-9.036546,8.182220,-8.887022,-9.398676,6.373514,3.631470,-9.535081,4.858036,-7.372685,7.662975,-9.693728,4.140872,-3.638052,-1.424376,2.307158,-7.311249,4.954055,3.751858,-2.615084,-5.288300,-1.052756,-1.642718,-4.022766,1.834763,-3.067950,-1.979981,-5.447564,-4.189760,-5.392542,6.865912,1.112681,-5.980947,0.292376,-6.048532,6.143677,1.196864,-9.142792,5.070828,-7.737412,-0.101395,5.791737,3.385386,-7.184790,8.983253,-2.869776,-5.678652,-9.189446,5.770513,-7.367404,9.890770,-9.421884,-2.495951,3.555433,9.223985,-4.405350,-2.070745,-9.538378,-7.148044,2.594485,-4.737108,-3.268855,3.877081,2.008058,-4.483005,6.994263,4.477177,7.778284,-5.102857,9.548436,-0.631674,3.791805,-8.402853,-1.771044,9.697551,-3.255511,2.633453,-5.089974,4.170011,9.033396,-9.631525,2.432427,3.737779,6.638323,7.938166,5.326307,-2.477843,-6.608761,3.915161,5.441422,4.724302,-4.572228,-3.286666,9.495370,-0.560044,-5.592346,1.783838,-8.953656,-2.037961,7.027208,9.383915,6.680797,5.285808,-5.324126,-5.205973,6.950058,2.403265,-4.594158,6.475915,9.958134,0.109284,-3.183645,3.274049,0.652691,-0.667914,-0.198908,1.576880,8.838314,7.271464,7.344442,-2.954858,7.580355,-5.751142,7.941473,-3.776988,1.972391,-7.543591,-7.190186,9.220212,7.190222,-4.620716,8.432823,4.054966,1.175891,-6.293977,-7.084645,6.628008,-5.696129,-1.490258,9.595607,-0.417297,-4.992886,-7.404984,-4.749378,-7.407064,9.986208,4.617058,-2.276320,-8.016885,-4.627560,1.149908,2.767405,-4.726801,-9.838184,7.340577,6.212553,2.851417,6.292173,2.425304,1.520376,0.446141,-3.898397,0.250268,-7.145670,-5.306471,-6.132682,7.991715,8.122239,5.744605,-2.438297,0.377401,-0.510543,0.106723,0.972940,5.441059,-9.791094,8.229551,-3.646613,-7.359593,-1.522930,0.932425,-9.004947,-7.205123,-5.989967,5.650464,3.146189,6.916931,3.462540,1.232556,4.765403,9.729092,4.005255,-0.405051,0.890665,-1.851047,-3.674989,-1.413130,2.218866,-9.922388,-4.176706,-5.388903,-2.173744,1.897302,5.327409,-6.168903,-9.039627,-2.779078,9.816182,7.086813,9.995036,-4.822103,7.667753,-7.893478,-1.753549,-2.152555,5.316775,-9.238214,-9.251481,1.076608,-9.368303,-6.231190,-6.244955,-0.566390,-9.178476,-6.073421,-6.074997,3.411585,-7.470536,-6.064162,-9.035972,6.161246,3.502439,4.922896,-9.335812,3.823592,9.188324,0.975983,6.505763,9.819164,4.814434,0.034389,-8.892554,3.209121,1.475756,3.118905,-2.062666,0.441681,-5.467465,-9.981950,3.576492,5.926452,9.436988,-7.208396,5.154840]], dtype = "float64")#candidate|5505|(2, 384)|const|float64
call_5504 = func_603_call(relay.reshape(const_5505.astype('float64'), [8, 8, 12]))
call_5506 = func_603_call(relay.reshape(const_5505.astype('float64'), [8, 8, 12]))
output = relay.Tuple([bop_5497,call_5504,const_5505,])
output2 = relay.Tuple([bop_5497,call_5506,const_5505,])
func_5511 = relay.Function([], output)
mod['func_5511'] = func_5511
mod = relay.transform.InferType()(mod)
mutated_mod['func_5511'] = func_5511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5511_call = mutated_mod.get_global_var('func_5511')
call_5512 = func_5511_call()
output = call_5512
func_5513 = relay.Function([], output)
mutated_mod['func_5513'] = func_5513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_5539 = relay.TupleGetItem(func_3494_call(), 0)
call_5540 = relay.TupleGetItem(func_3496_call(), 0)
uop_5541 = relay.rsqrt(call_5539.astype('float32')) # shape=(3, 9, 1)
uop_5543 = relay.rsqrt(call_5540.astype('float32')) # shape=(3, 9, 1)
output = relay.Tuple([uop_5541,])
output2 = relay.Tuple([uop_5543,])
func_5551 = relay.Function([], output)
mod['func_5551'] = func_5551
mod = relay.transform.InferType()(mod)
output = func_5551()
func_5552 = relay.Function([], output)
mutated_mod['func_5552'] = func_5552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4238_call = mod.get_global_var('func_4238')
func_4240_call = mutated_mod.get_global_var('func_4240')
call_5648 = relay.TupleGetItem(func_4238_call(), 0)
call_5649 = relay.TupleGetItem(func_4240_call(), 0)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_5661 = func_2874_call()
call_5662 = func_2874_call()
output = relay.Tuple([call_5648,call_5661,])
output2 = relay.Tuple([call_5649,call_5662,])
func_5672 = relay.Function([], output)
mod['func_5672'] = func_5672
mod = relay.transform.InferType()(mod)
output = func_5672()
func_5673 = relay.Function([], output)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5214_call = mod.get_global_var('func_5214')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_5685 = relay.TupleGetItem(func_5214_call(), 0)
call_5686 = relay.TupleGetItem(func_5216_call(), 0)
func_3023_call = mod.get_global_var('func_3023')
func_3025_call = mutated_mod.get_global_var('func_3025')
const_5693 = relay.const([-4.174332,2.610255,-8.731229,5.044198,-1.100845,1.671812,5.474855,3.365245,5.331323,-0.315827,-9.091192,5.901075,-8.900212,-6.422148,-4.481071,4.642651,2.864625,-8.280137,-7.912328,0.808702,2.962943,-7.917006,9.837608,7.776984,-7.022063,-3.715845,-1.467292,-4.580843,-4.825086,-8.029254,2.805840,-2.271021,-3.800352,-3.187010,-8.523969,8.443315,-4.838636,-3.580338,-5.931267,-5.589637,-5.506422,4.498162,-7.337762,8.744031,-1.293264,0.968646,6.081185,-2.659774,-7.668975,-9.311690,3.729904,1.560113,3.146525,2.310669,2.755704,7.843638,1.971602,-8.824131,-4.514075,-5.711729,5.573900,-4.907997,3.944355,9.821712,-1.425526,-2.331162,8.858001,7.552518,-3.342999,-9.605430,2.076360,8.740447,-3.797649,-8.349012,9.053387,2.422786,0.390699,3.232829,2.595259,-5.194078,5.367385,0.953650,-6.460552,8.092941,1.041889,-8.041070,7.977488,3.154565,7.504556,5.162169,1.046422,-9.448242,-6.210304,3.844016,-8.820771,7.647659,4.909060,-7.497413,-5.347228,-8.494748,-2.428773,-7.576621,-4.180386,6.477218,7.502372,-1.227950,-6.482768,6.300068,-5.706277,-0.145591,4.925270,-2.317441,-8.926623,-8.684065,3.998958,-9.296769,-5.131235,0.707367,3.700406,-9.957244,5.787882,5.919390,4.045376,9.589243,9.701075,-8.027811,3.397397,5.433609,-6.987192,-6.797694,-9.171622,4.025008,3.357361,5.404775,1.354478,-2.910764,-2.036255,-1.999190,-8.971125,-3.467222,3.319500,-6.924999,6.778681,-5.378422,-1.310681,8.947064,-4.661399,3.051643,-8.637074,-5.598792,-5.549106,-1.747958,-6.055470,5.137730,-2.443276,-5.785534,-6.143935,3.734793,4.012892,0.582063,-0.484897,-9.410668,2.343425,7.277097,2.691690,-5.227976,-5.291958,-6.368630,9.949042,3.731993,7.899645,-0.140005,2.089369,-8.295861,7.182056,-3.970188,-6.025892,-5.192751,-3.435400,4.259398,4.597626,8.928645,6.524899,-9.912159,8.896150,-5.094480,-1.341750,9.762818,-6.580997,-2.688131,3.461506,-5.388444,6.272582,-7.376964,-4.616143,0.517897,9.980768,8.599415,4.231186,4.373735,1.514907,0.792967,-1.529600,6.047022,-7.538378,7.673736,-0.885910,-9.046360,-0.519602,7.896014,-0.315631,4.913890,-8.382522,-2.471479,-8.869988,-1.014879], dtype = "float32")#candidate|5693|(216,)|const|float32
call_5692 = relay.TupleGetItem(func_3023_call(relay.reshape(const_5693.astype('float32'), [3, 9, 8])), 0)
call_5694 = relay.TupleGetItem(func_3025_call(relay.reshape(const_5693.astype('float32'), [3, 9, 8])), 0)
output = relay.Tuple([call_5685,call_5692,const_5693,])
output2 = relay.Tuple([call_5686,call_5694,const_5693,])
func_5708 = relay.Function([], output)
mod['func_5708'] = func_5708
mod = relay.transform.InferType()(mod)
output = func_5708()
func_5709 = relay.Function([], output)
mutated_mod['func_5709'] = func_5709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mod.get_global_var('func_3565')
func_3566_call = mutated_mod.get_global_var('func_3566')
call_5727 = relay.TupleGetItem(func_3565_call(), 0)
call_5728 = relay.TupleGetItem(func_3566_call(), 0)
var_5739 = relay.var("var_5739", dtype = "float32", shape = (3, 9, 6))#candidate|5739|(3, 9, 6)|var|float32
bop_5740 = relay.power(call_5727.astype('float32'), var_5739.astype('float32')) # shape=(3, 9, 6)
bop_5743 = relay.power(call_5728.astype('float32'), var_5739.astype('float32')) # shape=(3, 9, 6)
func_3227_call = mod.get_global_var('func_3227')
func_3231_call = mutated_mod.get_global_var('func_3231')
const_5747 = relay.const(0.361342, dtype = "float64")#candidate|5747|()|const|float64
var_5748 = relay.var("var_5748", dtype = "float64", shape = (910,))#candidate|5748|(910,)|var|float64
call_5746 = relay.TupleGetItem(func_3227_call(relay.reshape(const_5747.astype('float64'), []), relay.reshape(var_5748.astype('float64'), [10, 7, 13]), ), 0)
call_5749 = relay.TupleGetItem(func_3231_call(relay.reshape(const_5747.astype('float64'), []), relay.reshape(var_5748.astype('float64'), [10, 7, 13]), ), 0)
func_2712_call = mod.get_global_var('func_2712')
func_2716_call = mutated_mod.get_global_var('func_2716')
var_5752 = relay.var("var_5752", dtype = "float64", shape = (100,))#candidate|5752|(100,)|var|float64
const_5753 = relay.const([-5,1,7,9,3,-6,9,6,5,-6,9,3,-7,-3,5,6,-1,5,-4,-9,-4,-7,-8,-6,5,2,-9,9,-1,-9,-10,-6,6,10,-10,7,4,4,9,5,-1,7,-3,-7,9,-1,-3,-2,10,6,-1,-3,-9,6,-8,-1,9,-8,6,-9,1,2,6,-2,-5,6,1,10,-6,-9,9,-3,10,5,9,9,-1,-6,6,-3,4,5,-1,-9,-3,-3,-8,5,2,-4,-3,2,3,-10,4,9,7,7,-1,8,5,-8,-10,1,-2,-2,7,8,-10,10,-6,-5,-3,4,9,9,3,-6,-10,-4,3,9,10,1,-8,5,8,-10,2,-8,-5,-4,-4,-1,1,-7,1,-4,3,-2,-4,8,7,-6,1,-10,9,-5,8,7,3,-6,2,-7,5,10,6,-5,8,-2,5,5,9,9,8,-7,-2,9,-2,2,6,9,10,5,-5,-6,10,-6,-3,-6,-3,-6,-7,10,9,-9,4,9,3,-3,-2,3,-2,10,-4,-8,1,-1,-9,10,-4,5,10,-5,7,-5,9,-10,7,-8,-8,7,10,-10,10,9,2,4,-7,6,7,4,9,6,-7,8,-1,-7,-4,2,-8,10,6,-3], dtype = "uint8")#candidate|5753|(234,)|const|uint8
call_5751 = relay.TupleGetItem(func_2712_call(relay.reshape(var_5752.astype('float64'), [100,]), relay.reshape(const_5753.astype('uint8'), [39, 6]), ), 2)
call_5754 = relay.TupleGetItem(func_2716_call(relay.reshape(var_5752.astype('float64'), [100,]), relay.reshape(const_5753.astype('uint8'), [39, 6]), ), 2)
bop_5755 = relay.left_shift(const_5753.astype('uint16'), call_5727.astype('uint16')) # shape=(3, 9, 234)
bop_5758 = relay.left_shift(const_5753.astype('uint16'), call_5728.astype('uint16')) # shape=(3, 9, 234)
output = relay.Tuple([bop_5740,call_5746,const_5747,var_5748,call_5751,var_5752,bop_5755,])
output2 = relay.Tuple([bop_5743,call_5749,const_5747,var_5748,call_5754,var_5752,bop_5758,])
func_5772 = relay.Function([var_5739,var_5748,var_5752,], output)
mod['func_5772'] = func_5772
mod = relay.transform.InferType()(mod)
mutated_mod['func_5772'] = func_5772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5772_call = mutated_mod.get_global_var('func_5772')
var_5774 = relay.var("var_5774", dtype = "float32", shape = (3, 9, 6))#candidate|5774|(3, 9, 6)|var|float32
var_5775 = relay.var("var_5775", dtype = "float64", shape = (910,))#candidate|5775|(910,)|var|float64
var_5776 = relay.var("var_5776", dtype = "float64", shape = (100,))#candidate|5776|(100,)|var|float64
call_5773 = func_5772_call(var_5774,var_5775,var_5776,)
output = call_5773
func_5777 = relay.Function([var_5774,var_5775,var_5776,], output)
mutated_mod['func_5777'] = func_5777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_5791 = relay.TupleGetItem(func_3494_call(), 0)
call_5792 = relay.TupleGetItem(func_3496_call(), 0)
output = call_5791
output2 = call_5792
func_5802 = relay.Function([], output)
mod['func_5802'] = func_5802
mod = relay.transform.InferType()(mod)
mutated_mod['func_5802'] = func_5802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5802_call = mutated_mod.get_global_var('func_5802')
call_5803 = func_5802_call()
output = call_5803
func_5804 = relay.Function([], output)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3767_call = mod.get_global_var('func_3767')
func_3769_call = mutated_mod.get_global_var('func_3769')
call_5823 = relay.TupleGetItem(func_3767_call(), 0)
call_5824 = relay.TupleGetItem(func_3769_call(), 0)
func_3533_call = mod.get_global_var('func_3533')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_5826 = func_3533_call()
call_5827 = func_3533_call()
func_2312_call = mod.get_global_var('func_2312')
func_2315_call = mutated_mod.get_global_var('func_2315')
var_5833 = relay.var("var_5833", dtype = "float64", shape = (3328,))#candidate|5833|(3328,)|var|float64
call_5832 = relay.TupleGetItem(func_2312_call(relay.reshape(var_5833.astype('float64'), [16, 16, 13]), relay.reshape(var_5833.astype('float64'), [16, 16, 13]), ), 0)
call_5834 = relay.TupleGetItem(func_2315_call(relay.reshape(var_5833.astype('float64'), [16, 16, 13]), relay.reshape(var_5833.astype('float64'), [16, 16, 13]), ), 0)
func_4238_call = mod.get_global_var('func_4238')
func_4240_call = mutated_mod.get_global_var('func_4240')
call_5842 = relay.TupleGetItem(func_4238_call(), 0)
call_5843 = relay.TupleGetItem(func_4240_call(), 0)
func_4562_call = mod.get_global_var('func_4562')
func_4566_call = mutated_mod.get_global_var('func_4566')
var_5862 = relay.var("var_5862", dtype = "float32", shape = (560,))#candidate|5862|(560,)|var|float32
const_5863 = relay.const([-9.129068,-2.777544,-6.650289,3.299302,-4.794751,-0.851580,9.578660,6.371981,-7.514455,8.288202,-1.280353,5.959637,-3.616298,2.006032,-6.980403,-9.782315,-3.555189,-7.292771,8.501972,6.484560,-8.850300,1.530611,5.753601,6.203177,-5.226102,8.923489,1.546815,2.555573,-5.755405,8.322891,-3.960969,4.709696,-0.065495,-2.100220,-9.199864,-4.760816,3.087505,-9.066561,-3.787079,-6.102943,-3.859221,2.185982,4.674698,5.005215,4.574057,-0.609178,-4.449262,6.658716,8.027457,-2.110226,1.643165,-7.295742,4.234116,8.776176,2.501116,-1.551357,-8.079512,6.315297,-6.755103,9.057342,0.450938,7.479507,4.533039,-8.815696,-6.604950,-4.441841,9.637970,6.068674,5.129801,6.221319,-2.559992,6.901715,0.530690,-2.475535,2.678214,-1.704928,3.174172,6.699731,-2.221989,-0.963470,-2.173589,-6.114367,3.030149,-1.108368,4.982363,0.597857,2.017771,-4.002888,5.846273,-9.292653,-4.058505,2.462988,4.070410,-1.069844,8.874524,-3.812665], dtype = "float32")#candidate|5863|(96,)|const|float32
var_5864 = relay.var("var_5864", dtype = "float32", shape = (490,))#candidate|5864|(490,)|var|float32
call_5861 = relay.TupleGetItem(func_4562_call(relay.reshape(var_5862.astype('float32'), [8, 7, 10]), relay.reshape(const_5863.astype('float32'), [96,]), relay.reshape(var_5864.astype('float32'), [7, 70]), ), 4)
call_5865 = relay.TupleGetItem(func_4566_call(relay.reshape(var_5862.astype('float32'), [8, 7, 10]), relay.reshape(const_5863.astype('float32'), [96,]), relay.reshape(var_5864.astype('float32'), [7, 70]), ), 4)
uop_5867 = relay.asinh(call_5832.astype('float64')) # shape=(16, 16, 13)
uop_5869 = relay.asinh(call_5834.astype('float64')) # shape=(16, 16, 13)
func_2665_call = mod.get_global_var('func_2665')
func_2667_call = mutated_mod.get_global_var('func_2667')
call_5872 = relay.TupleGetItem(func_2665_call(), 0)
call_5873 = relay.TupleGetItem(func_2667_call(), 0)
output = relay.Tuple([call_5823,call_5826,var_5833,call_5842,call_5861,var_5862,const_5863,var_5864,uop_5867,call_5872,])
output2 = relay.Tuple([call_5824,call_5827,var_5833,call_5843,call_5865,var_5862,const_5863,var_5864,uop_5869,call_5873,])
func_5875 = relay.Function([var_5833,var_5862,var_5864,], output)
mod['func_5875'] = func_5875
mod = relay.transform.InferType()(mod)
mutated_mod['func_5875'] = func_5875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5875_call = mutated_mod.get_global_var('func_5875')
var_5877 = relay.var("var_5877", dtype = "float64", shape = (3328,))#candidate|5877|(3328,)|var|float64
var_5878 = relay.var("var_5878", dtype = "float32", shape = (560,))#candidate|5878|(560,)|var|float32
var_5879 = relay.var("var_5879", dtype = "float32", shape = (490,))#candidate|5879|(490,)|var|float32
call_5876 = func_5875_call(var_5877,var_5878,var_5879,)
output = call_5876
func_5880 = relay.Function([var_5877,var_5878,var_5879,], output)
mutated_mod['func_5880'] = func_5880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5912 = relay.var("var_5912", dtype = "float32", shape = (3, 8, 9))#candidate|5912|(3, 8, 9)|var|float32
uop_5913 = relay.acosh(var_5912.astype('float32')) # shape=(3, 8, 9)
output = uop_5913
output2 = uop_5913
F = relay.Function([var_5912,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5912,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

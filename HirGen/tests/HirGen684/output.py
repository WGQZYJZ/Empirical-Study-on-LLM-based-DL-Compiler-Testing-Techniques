import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_8 = relay.var("var_8", dtype = "float32", shape = (15, 16, 7))#candidate|8|(15, 16, 7)|var|float32
uop_9 = relay.exp(var_8.astype('float32')) # shape=(15, 16, 7)
bop_59 = relay.left_shift(var_8.astype('uint8'), relay.reshape(uop_9.astype('uint8'), relay.shape_of(var_8))) # shape=(15, 16, 7)
bop_66 = relay.less_equal(bop_59.astype('bool'), relay.reshape(var_8.astype('bool'), relay.shape_of(bop_59))) # shape=(15, 16, 7)
bop_77 = relay.logical_and(bop_59.astype('bool'), relay.reshape(var_8.astype('bool'), relay.shape_of(bop_59))) # shape=(15, 16, 7)
bop_80 = relay.multiply(var_8.astype('int8'), relay.reshape(bop_59.astype('int8'), relay.shape_of(var_8))) # shape=(15, 16, 7)
output = relay.Tuple([bop_66,bop_77,bop_80,])
output2 = relay.Tuple([bop_66,bop_77,bop_80,])
func_91 = relay.Function([var_8,], output)
mod['func_91'] = func_91
mod = relay.transform.InferType()(mod)
mutated_mod['func_91'] = func_91
mutated_mod = relay.transform.InferType()(mutated_mod)
var_92 = relay.var("var_92", dtype = "float32", shape = (15, 16, 7))#candidate|92|(15, 16, 7)|var|float32
func_91_call = mutated_mod.get_global_var('func_91')
call_93 = func_91_call(var_92)
output = call_93
func_94 = relay.Function([var_92], output)
mutated_mod['func_94'] = func_94
mutated_mod = relay.transform.InferType()(mutated_mod)
var_258 = relay.var("var_258", dtype = "float64", shape = (6, 4, 8))#candidate|258|(6, 4, 8)|var|float64
const_259 = relay.const([[[5.583434,7.258179,-2.201057,4.658419,3.590367,4.355225,-5.887948,-4.797388],[7.729743,3.290394,-8.756730,5.305845,-9.273323,9.009186,-8.858438,-3.083657],[-4.785541,3.940104,-2.824329,-3.738939,2.656846,2.175824,3.883420,9.661438],[9.177361,-2.803387,-0.995628,-6.691427,-3.580472,-7.082958,-1.685148,-7.879257]],[[-2.991474,-8.699422,-8.203290,-1.378152,-0.237283,9.267197,8.687295,-8.622407],[4.011534,-2.773144,-6.736559,-5.166592,4.683856,-0.127763,-0.668344,-9.105458],[-8.246681,5.750556,2.182175,-5.919664,8.205325,4.989189,8.147468,3.031100],[8.678651,-6.279938,-6.411359,-3.298239,6.272462,0.455194,3.602122,-1.150730]],[[-2.308139,-2.069743,-6.153905,5.309341,-3.663340,-9.021037,-5.870781,-5.942118],[-2.173880,-1.748757,-3.453664,-5.459761,4.586664,4.302979,9.475503,-3.183888],[4.510888,3.375251,3.552579,9.299349,7.113428,8.705781,4.717283,7.748062],[8.066710,-4.601995,-7.260390,2.698497,-4.221608,-2.243005,0.950137,-6.138695]],[[5.813939,-2.323500,-5.027807,-5.068196,5.032189,-3.534488,-4.800886,-1.893609],[2.215490,1.397652,9.406826,4.672572,9.455981,2.746913,-3.711169,0.800960],[8.823960,-5.382732,2.259925,-9.186187,6.773009,1.121183,-7.518257,4.296350],[-2.005805,-8.183924,5.654024,7.022051,4.667912,8.470792,-5.542472,-1.733853]],[[-4.804654,-4.753081,7.979806,0.480792,7.745862,-6.591889,-5.377210,2.223717],[-0.744870,2.195120,4.188278,-7.095055,9.768006,-2.542265,-9.852117,-4.557710],[2.251550,-9.554446,7.605705,7.162463,-0.228442,-0.194978,8.452441,5.949323],[0.106317,-0.008987,-7.657077,-3.149011,-2.149844,8.477939,2.910818,-0.018586]],[[-3.008337,4.259063,-0.849803,-6.538099,3.526187,8.303785,-6.479555,-0.814547],[3.920817,-9.535769,-3.915100,-8.129478,0.407610,3.902986,9.819249,-0.086314],[9.013205,9.580280,-8.191291,-1.325788,-3.843836,7.526730,3.042138,6.577412],[-6.656798,-4.617979,-7.465372,5.867971,-3.277710,-5.673266,-9.771399,-1.841717]]], dtype = "float64")#candidate|259|(6, 4, 8)|const|float64
bop_260 = relay.mod(var_258.astype('float64'), relay.reshape(const_259.astype('float64'), relay.shape_of(var_258))) # shape=(6, 4, 8)
func_91_call = mod.get_global_var('func_91')
func_94_call = mutated_mod.get_global_var('func_94')
var_264 = relay.var("var_264", dtype = "float32", shape = (1680,))#candidate|264|(1680,)|var|float32
call_263 = relay.TupleGetItem(func_91_call(relay.reshape(var_264.astype('float32'), [15, 16, 7])), 2)
call_265 = relay.TupleGetItem(func_94_call(relay.reshape(var_264.astype('float32'), [15, 16, 7])), 2)
uop_266 = relay.acosh(var_258.astype('float32')) # shape=(6, 4, 8)
uop_269 = relay.asinh(uop_266.astype('float64')) # shape=(6, 4, 8)
bop_273 = relay.logical_xor(uop_269.astype('uint32'), relay.reshape(uop_266.astype('uint32'), relay.shape_of(uop_269))) # shape=(6, 4, 8)
uop_276 = relay.log2(bop_260.astype('float32')) # shape=(6, 4, 8)
output = relay.Tuple([call_263,var_264,bop_273,uop_276,])
output2 = relay.Tuple([call_265,var_264,bop_273,uop_276,])
func_290 = relay.Function([var_258,var_264,], output)
mod['func_290'] = func_290
mod = relay.transform.InferType()(mod)
var_291 = relay.var("var_291", dtype = "float64", shape = (6, 4, 8))#candidate|291|(6, 4, 8)|var|float64
var_292 = relay.var("var_292", dtype = "float32", shape = (1680,))#candidate|292|(1680,)|var|float32
output = func_290(var_291,var_292,)
func_293 = relay.Function([var_291,var_292,], output)
mutated_mod['func_293'] = func_293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_447 = relay.var("var_447", dtype = "uint32", shape = (14, 9, 5))#candidate|447|(14, 9, 5)|var|uint32
const_448 = relay.const([[[9,-6,-10,2,-1],[-2,10,-10,10,-1],[-6,-1,3,4,-9],[7,10,-8,-8,10],[-3,-8,6,5,3],[-8,7,10,3,8],[-4,10,6,-4,-10],[-8,7,-8,-4,-6],[7,6,5,1,-7]],[[-10,4,4,-9,8],[5,2,10,4,3],[8,7,-1,9,2],[3,-8,-3,-10,-5],[4,2,1,-6,-5],[6,-8,-9,-7,2],[-6,-1,-3,9,9],[-10,1,8,4,-6],[2,4,6,8,-2]],[[1,7,-4,-8,-4],[6,-7,5,-8,9],[10,7,3,7,-5],[4,-9,-1,9,-6],[4,6,9,-7,4],[3,9,-10,-1,6],[8,-5,-8,9,-4],[10,-5,3,2,10],[-8,-2,3,1,-8]],[[4,-4,-4,5,-2],[6,-1,10,6,-4],[10,1,10,3,-10],[6,-1,-2,5,-6],[-6,-10,-7,1,-4],[2,-8,7,7,-7],[5,10,8,-8,-9],[1,-9,4,-1,9],[-9,-9,-4,-3,8]],[[-9,-7,-6,-10,9],[1,7,-9,7,-4],[-5,-9,-10,-3,-5],[4,6,10,-8,8],[-2,-7,10,7,-8],[-6,-6,9,8,-8],[7,-7,-5,4,-9],[-1,1,9,-6,9],[-9,-6,9,-10,1]],[[10,-2,-8,-3,-8],[-5,3,-7,-7,1],[6,10,7,-9,-6],[7,-6,-2,3,7],[8,-10,-7,-5,9],[-10,-8,-7,10,1],[6,-10,4,7,7],[-1,-9,10,-8,-10],[-3,-4,-3,-3,6]],[[-6,2,5,8,-5],[9,4,7,-1,8],[-3,-6,-9,9,9],[-8,8,-3,-7,-6],[-7,-8,-10,-4,-9],[-6,3,-1,-8,-6],[8,6,-5,-8,9],[7,-8,9,-10,-10],[-5,-5,-6,-3,-7]],[[-5,-5,10,7,4],[-3,-4,-6,8,5],[-6,4,-1,8,-7],[2,-1,-3,7,-10],[-8,2,5,-6,-5],[-2,-3,4,7,7],[8,-9,6,-1,-4],[8,5,5,-9,4],[-3,-6,-1,10,4]],[[-5,9,-3,-6,2],[7,-3,9,2,-10],[-1,-3,1,9,3],[1,6,-1,-6,3],[-8,-5,3,-10,1],[1,5,1,7,9],[3,-9,-9,8,-9],[3,-1,10,-2,7],[2,-5,2,-5,6]],[[-1,4,-10,2,10],[8,1,-2,1,1],[5,-10,2,-6,2],[-5,-3,-5,-3,10],[10,-7,-7,-10,-10],[8,6,-8,9,9],[8,-6,-2,3,-8],[9,10,9,-4,6],[1,9,-4,-10,-3]],[[-6,-3,-1,5,-10],[-8,3,6,7,-10],[-4,-9,-10,10,-7],[9,3,8,-6,-1],[-6,-9,10,8,5],[-10,-10,-2,3,-2],[-4,-6,2,-2,-6],[7,3,-10,3,-10],[-9,7,-1,-10,2]],[[9,-3,-4,8,5],[2,-6,10,-8,6],[-9,-10,4,7,10],[-8,-7,1,-7,-1],[2,4,8,4,5],[4,6,-4,7,-8],[3,3,6,1,-4],[-6,4,2,4,-8],[7,6,-7,-6,2]],[[-1,-10,2,10,-1],[-8,1,-7,-5,-1],[1,-6,3,-7,-10],[-3,-3,7,10,1],[-4,-8,-2,-7,7],[10,6,-7,1,-10],[-3,6,-7,-3,4],[8,-4,2,3,-1],[-5,-2,-8,2,3]],[[4,4,-3,-5,-5],[2,-7,-2,-10,-8],[7,3,6,8,-3],[-7,-6,7,1,-6],[2,-2,4,-8,10],[7,-9,7,-4,-1],[-6,5,1,-3,-5],[9,-9,-6,6,7],[-10,-3,7,-2,7]]], dtype = "uint32")#candidate|448|(14, 9, 5)|const|uint32
bop_449 = relay.bitwise_or(var_447.astype('uint32'), relay.reshape(const_448.astype('uint32'), relay.shape_of(var_447))) # shape=(14, 9, 5)
bop_455 = relay.logical_and(const_448.astype('bool'), relay.reshape(var_447.astype('bool'), relay.shape_of(const_448))) # shape=(14, 9, 5)
func_91_call = mod.get_global_var('func_91')
func_94_call = mutated_mod.get_global_var('func_94')
const_465 = relay.const([[0.463740,5.741588,0.367174,3.464216,9.440075,-9.956307,7.498279,0.516575,-8.255868,-4.406257,-9.069504,-6.364315,-0.785954,8.563411,-4.982418,-7.247750,-6.304800,3.489807,-6.382061,-0.411890,-4.632204,3.432251,-7.949501,-0.728532,6.820616,3.415477,-2.338522,-9.123790,2.920399,6.354969,0.819268,9.202722,9.315390,2.494404,-2.020780,-0.137038,-6.740600,-9.005131,-9.931973,0.480637,9.028902,5.408820,-0.337953,-4.848242,8.628257,0.094996,-4.431590,4.102906,3.135006,6.472657,-5.632778,-4.291972,-1.491577,0.542638,-9.462930,-0.745518,5.615222,6.410165,2.105310,7.478267,-1.087285,0.588205,-1.084661,-9.640910,1.484015,2.582374,5.914516,-6.017959,-1.528232,8.923922,-1.305929,2.045494,7.934821,5.228919,-4.328016,-8.879482,1.704294,5.713290,-3.901905,-3.989441,-6.608876,1.054144,3.850816,0.320472,-4.624347,-5.041805,-7.644859,-2.734923,2.510056,8.722972,9.441620,-2.715993,9.528350,-1.287359,3.662221,-9.187684,-3.884559,-0.088302,2.463648,7.468829,-7.950548,1.266651,9.638435,-1.687108,4.238041,2.617916,4.113481,-2.066336,1.134658,-6.695178,5.665143,-3.970505,0.734027,3.289998,-2.293706,-4.323693,2.810605,-4.634420,1.061151,2.723388,-7.884695,6.258705,-0.635836,-8.459291,-5.900811,-9.770525,0.382382,6.730704,4.442643,-7.877317,-9.490864,-9.709121,-1.671011,-3.207489,-8.286717,-0.785410,-2.745150,-7.483389,1.129196,7.047363,-9.764291,0.705883,-5.856124,-2.899578,-7.724922,-7.193056,3.497630,-5.332626,6.965099,1.666380,-0.270929,-8.100227,-7.814886,6.229456,1.647682,7.365668,-5.036036,-7.895349,-4.234622,6.069107,3.301681,4.512065,-2.564088,-0.376209,-3.732707,5.330076,2.086107,-0.903482,3.264579,-2.746812,-0.740000,-9.443951,-6.825968,2.642935,4.247474,2.686781,-6.554033,9.098211,-9.529678,-6.938386,8.344178,2.496227,3.781201,-5.996143,9.084821,-4.156633,2.039252,4.556657,0.056931,-1.614236,9.468814,0.570678,-3.905222,-2.454032,-1.061064,3.383929,5.397049,-6.140855,-5.725465,1.982531,8.925905,5.277879,-2.721151,0.105014,-0.821612,-0.613674,1.079349,6.862209,-2.486242,8.147904,4.666154,-5.514844,2.760867,6.409547,-4.198893,-6.929356,-0.045228,-6.458973,-1.467869,-1.870511,8.386263,-6.393745,-9.221050,-3.752906,2.651450,9.239219,-1.169485,8.253344,1.812754,-8.955339,9.933914,0.327270,-9.625843,-5.802487,5.777189,9.089716,4.118431,-1.592521,-9.467236,-3.517843,-5.904810,-0.296669,-2.784813,-6.414486,-9.402328,7.501399,7.863293,-5.162984,-7.414883,-9.659955,9.194369,-4.933348,7.571738,4.165636,7.406102,-1.289462,9.159106,-6.908094,-9.390807,7.991363,7.549002,2.837544,-9.755176,4.582298,-1.291581,-7.112869,5.009332,3.938088,0.383032,-9.361159,-1.095668,-9.385213,8.315183,9.570719,-3.346806,9.660653,2.962838,-8.838005,-0.799939,-9.850539,-0.770681,-6.277735,5.558627,-8.912735,-8.744248,3.451637,5.562344,0.813511,4.767827,3.785081,2.393040,8.744897,8.221451,-3.057186,1.846418,-5.758564,-8.338025,-2.458288,-0.105908,-4.612754,2.072583,-9.764890,-0.906849,-9.389284,-3.403168,7.492551,-4.406492,9.195317,-1.094777,8.096191,-3.377502,3.090053,-8.485198,9.966941,5.961734,-1.403234,5.463610,3.614419,-4.462012,6.984438,1.270041,-4.847863,-4.610014,6.153936,-9.455955,-5.312223,2.165266,6.591055,7.742918,-6.241243,-1.099706,-9.812486,4.884651,8.802578,8.932872,0.022556,6.361659,-7.931776,7.755512,8.782262,-1.710793,-9.339953,5.858920,9.466185,-5.850290,8.139093,-1.944299,7.750667,-1.336936,6.083319,6.021967,-1.514124,0.294595,-5.917010,5.333648,-3.798901,-9.476612,8.226319,-5.907175,-9.088747,-9.071866,7.509713,0.459064,3.901989,-8.574886,6.865431,5.091812,-0.254724,-2.160866,4.631372,-6.006453,9.469615,-6.590640,7.360498,-6.220332,-7.631950,7.510070,0.566035,-0.421010,-2.965428,-3.922606,-4.428123,-6.400023,-4.512738,-8.452337,-3.267104,2.389328,1.431675,-9.840718,-1.279367,-3.560896,5.702806,-2.015156,2.554926,2.545471,5.999253,8.451850,6.508494,4.982583,8.710944,4.438218,-4.095372,6.960452,0.700361,-3.938706,-8.354863,-7.973216,8.782583,1.563878,9.457942,-9.739580,-1.638752,-2.168008,7.432835,8.978858,6.807970,-9.659220,2.131628,0.093040,5.971153,-3.167191,3.440929,-3.192968,8.240332,7.973177,-2.458944,-1.091200,3.847510,4.522078,-7.324202,5.968944,0.973197,3.301134,-5.366974,6.592009,8.699749,7.107549,-3.684318,1.383613,2.025395,-3.255952,-0.176422,-1.833012,-3.857966,3.536319,-5.929071,-4.406321,-4.313614,-2.496647,1.498882,9.968408,6.322789,4.437823,-1.926157,-5.870099,2.469797,2.445817,4.929556,4.391629,1.662573,-4.392969,-1.150507,-3.559919,-9.134787,3.152635,-5.222536,-3.908602,8.106723,-6.069887,-1.360394,-7.748762,4.035775,-4.002424,6.483204,-8.098581,-3.178052,2.547034,-0.311929,2.690554,-3.954192,-3.440414,2.766438,8.865343,-6.382023,-6.232031,-7.013940,-5.040180,7.704076,-8.918562,-9.755813,6.334965,6.578840,3.691454,-6.272769,-7.085727,5.388122,-5.374056,-1.457522,-9.112436,8.703283,5.009611,6.100820,4.455485,-1.797726,5.551243,8.468393,9.378808,8.510173,-7.047964,-6.859790,9.918663,6.455975,-1.573194,6.878480,-3.471956,-7.481958,-3.094521,2.255237,-1.405878,1.547607,-4.283130,-2.957730,6.370271,7.995691,-3.655945,-1.526774,4.139148,1.357810,4.202086,-4.212021,5.401313,-6.655963,-4.937360,3.997370,0.483256,2.699517,8.645988,-3.598283,2.456000,-8.022128,3.022528,1.356658,-4.870725,-1.060211,3.731198,1.277149,1.959987,-5.351205,1.054761,-5.817723,-3.854933,6.218981,-6.234414,-4.403582,2.389752,6.926080,-1.071839,2.580474,7.495226,-0.206258,2.133571,6.740211,2.440552,-9.320269,3.814657,-6.704287,-4.050281,-7.576929,9.560224,4.471132,2.836418,5.742654,3.987186,3.229058,-9.045871,-7.124800,5.958743,5.254148,5.812575,-5.437181,-3.955468,2.757490,-9.316704,4.883443,-0.461437,-0.222145,7.979241,8.655097,-7.325816,9.528683,1.749996,-3.806976,6.487376,3.645686,-6.614968,-6.762466,-4.890793,5.951762,3.577348,-6.021977,4.749655,0.895229,-2.061064,-5.120701,8.231075,-3.136194,6.324379,-9.173870,-7.433028,0.071088,5.394865,7.959727,9.336786,-1.694298,-6.539118,8.879155,3.055588,-1.037612,9.821647,-7.269711,6.578266,6.301656,-5.377425,5.725579,-1.556155,8.250895,-8.305970,6.058009,8.185149,-6.691370,8.398852,-3.450599,9.211380,-7.470419,0.510752,6.731098,8.922868,6.979700,-8.642455,-8.708177,4.403701,-3.524974,4.033628,-6.835878,6.307473,-1.012256,-6.731840,3.124128,5.310439,-1.007612,4.544891,6.199841,3.065864,-1.581674,-6.378000,-5.352504,-0.851311,9.332983,-4.139133,-2.499163,1.213340,-0.821043,9.706480,7.726407,-1.979749,1.095727,7.903692,-0.544007,2.094638,8.477749,-5.578895,-4.678808,-4.613125,-3.305756,8.477994,9.963096,7.540422,-6.830380,9.604890,7.466532,5.476053,9.986213,-7.210096,0.563733,-5.506218,4.354230,-9.725648,0.553486,4.597793,-5.857337,8.453464,5.587828,1.126074,3.771127,6.141909,-1.627221,-7.356059,-4.168804,-1.037947,-8.443248,-3.211989,7.149777,5.299053,4.129430,-8.546488,4.117483,3.389512,-5.988650,-0.301614,-5.470767,-5.627629,3.085885,-4.236264,6.910866,2.144104,-3.434539,0.852280,5.154437,-6.130151,-2.212927,-3.448760,-4.065370,-0.315321,-9.520229,6.476347,0.295513,-0.902097,-8.194341,-0.998049,6.227578,8.624739,8.677121,8.967415,-4.575585,7.023565,-2.216385,-0.774400,-7.383417,1.325186,-0.896278,6.751624,-4.566935,-6.914801,-2.539485,0.282738,-4.495761,1.141352,6.294420,-3.597967,5.868496,-3.866116,3.728629,-8.282968,-9.324235,4.762941,-7.931097,-6.979025,-3.836822,7.059565,4.615251,-4.594472,-7.614270,7.856993,-6.286424,3.081845,1.847969,8.164846,-2.167038,-3.326455,6.649434,1.292325,-5.664181,-3.569660,-5.768814,-1.529697,-7.424000,-3.192691,-2.608039,9.076830,7.566407,-5.902927,-0.586218,-0.305934,-5.393498,1.971793,-6.117553,2.212121,-1.974491,5.043699,-3.458713,-3.065428,-0.450223,9.563750,-4.400232,4.153039,2.787738,8.837357,9.423704,-7.426822,-5.688725,8.064930,3.567969,-9.960885,-9.220769,-4.291005,9.184503,-2.576933,0.547810,-3.644179,-1.744294,-3.961712,-1.275740,6.740912,7.850304,8.461511,-5.132574,-3.881104,0.831838,6.108419,-6.583885,-2.034442,4.007279,6.418095,-9.846511,-1.331307,8.184898,-7.914325,-9.115019,3.614650,-0.774535,-0.428862,2.397754,-8.696574,8.814871,-7.614252,0.439055,2.212971,5.750939,-7.507917,-1.675427],[-2.981846,8.141225,6.882352,2.550728,1.842998,0.654915,-9.918719,-3.897194,-2.239526,-2.304661,7.617950,7.835284,-9.690391,7.101363,9.463261,-7.664583,6.135034,-7.176848,4.546256,4.994068,6.709253,-1.857474,8.720975,-0.154072,-5.097063,-7.755872,7.576367,-5.734736,4.043618,-5.089830,-1.119269,-7.694031,-8.442158,-3.702975,-5.031865,-9.575273,2.781995,5.292518,8.688029,-3.215347,3.362412,3.490254,-8.886687,-5.465320,3.008691,-0.953166,6.523241,8.368391,-7.383530,-9.499930,3.584243,-2.078811,7.903085,3.824846,-0.155525,3.273913,-1.753430,-9.657505,-1.959476,-3.569703,5.601577,2.215992,-3.110383,-7.811424,7.418730,1.503420,0.251278,0.747769,-2.517309,0.807377,-0.117377,-2.752122,6.561725,4.395370,0.532202,5.170939,4.379296,-6.373494,5.870365,-3.917743,1.816008,6.375892,8.427969,0.199430,8.472186,-2.259208,2.923380,-5.563129,7.994291,1.422608,-4.476167,8.465992,0.154614,0.908444,-0.392594,5.900176,8.194689,-0.996466,5.637617,-5.336023,-2.376397,-7.467475,9.274753,-3.645725,4.092235,-2.324842,-6.668328,9.313036,3.137157,-7.324333,-9.799654,3.901142,-0.989764,-9.137102,8.504947,-7.352831,-4.557531,-5.747120,-5.524216,-0.482479,-8.020342,6.176765,2.727667,-5.183656,0.821164,-5.019275,3.577619,0.724611,-1.560422,9.670158,6.313925,5.969341,4.512588,3.274699,5.507552,9.629619,-0.039951,-6.543392,5.207028,-1.239792,-6.814575,-8.042018,-5.174358,9.021941,7.365212,6.249472,0.188886,-1.048049,-9.318184,-8.097995,-5.060599,9.490016,-0.290332,-2.018126,-4.202680,-9.935731,1.867564,-6.161137,-0.257443,-6.349714,3.245279,-5.664692,6.475798,3.491254,0.151458,6.471020,6.670085,-2.804259,-4.016075,0.477828,-8.812378,9.670630,-3.930516,9.992211,-5.527437,-9.493012,7.989359,-5.464457,-5.597532,-2.227240,6.923302,2.436597,-2.246839,-7.252250,-0.810435,-0.022306,6.789717,-3.905465,4.161396,-1.411468,-3.888344,9.877774,-4.647756,-5.434570,6.638574,-0.522079,-7.645508,3.607663,4.905911,3.304763,8.992950,-1.511566,-2.251925,-6.086112,5.386018,0.900524,-6.884611,8.760204,-9.357201,5.613532,3.383022,-6.932315,1.600472,-4.536085,2.240277,-4.963109,9.066346,9.555680,0.442577,-3.526470,-0.759125,-5.586709,-1.586852,3.805773,3.036373,5.610483,-6.879942,-4.397915,5.373353,8.591425,1.631258,-9.609317,-1.281437,-1.225212,8.065501,-0.822525,-7.474684,-8.278065,1.094436,3.246683,-5.144730,8.691789,-6.889384,-8.585201,-5.485083,-7.662042,4.787029,1.971138,-2.081123,-2.702465,-4.805544,4.045612,9.306570,5.208795,-3.377765,-1.726554,5.928244,5.382085,6.118062,-0.598692,8.967766,0.047969,3.625747,7.495894,-4.934043,1.526581,-3.448492,9.960039,1.903340,-5.954778,9.224959,-3.539357,-0.598267,-8.916713,-6.698140,-2.141758,1.660413,-7.400880,-9.904678,-3.677290,0.878214,4.339419,1.158886,-2.651227,2.224188,-8.133663,2.091327,-1.969335,-9.716252,9.473645,8.808890,9.372344,-0.858203,4.315256,7.274338,5.252835,6.115316,-6.277952,-9.573002,1.849448,-3.353023,-1.683790,3.905076,9.776312,-8.819384,-4.532707,-6.074909,-9.083841,1.859140,2.110933,-0.199920,-7.486280,9.426157,-6.357116,7.070764,-9.062227,7.067273,8.193834,7.846831,-6.301316,2.140460,9.295097,-7.681004,-3.195877,0.882349,-2.037464,3.758353,4.635435,-2.940424,-7.091309,-0.464728,3.987451,7.702527,-1.933821,9.810612,-3.330419,2.441918,5.644218,-8.708378,6.508921,2.432052,0.865748,-5.840977,-4.879888,-3.972486,-4.068228,4.668468,-6.363667,-7.564226,0.986414,5.928121,9.468327,8.829398,2.895748,-1.054087,4.991411,-0.655427,-8.742895,5.709262,9.930216,0.535075,-6.866993,4.629945,-7.506940,3.952255,-7.226070,2.554939,5.594858,-3.244382,-4.363244,-6.600566,-2.825516,-6.886331,4.490349,0.923814,5.448431,0.974624,3.878151,-6.716686,-5.676830,6.678612,9.774756,-5.204255,5.981793,8.902986,-0.773062,5.516483,-4.335403,3.039259,-1.335159,7.129571,-2.668856,7.929197,3.647974,6.056568,-8.618678,-4.502708,3.395011,-8.585959,0.513118,0.028356,7.399291,3.780079,-3.523932,-6.456858,4.312776,5.814042,-2.056762,-5.726149,-0.685877,3.323326,-7.830560,-6.865445,6.270378,8.492685,-5.406574,-5.911090,7.499800,-8.062562,-0.674505,-9.549651,-7.825297,9.641146,1.430381,-1.158374,0.520005,-1.818079,-8.402555,-9.421343,2.463234,-3.504560,-2.291371,-5.076765,-4.423631,0.048468,6.472026,0.735915,7.464748,-9.987027,-7.193956,0.778778,-4.657265,3.534679,-6.781161,-8.214243,9.034510,-1.306504,4.739067,-8.097995,7.566793,3.103069,4.153282,-2.044541,9.410458,3.557322,2.220090,-3.896480,-3.834360,-7.226198,5.015177,9.336364,-7.690784,-1.297125,-2.680602,1.344209,-0.765568,-5.135354,8.055068,2.948986,8.598133,-9.252351,2.639365,-5.271723,2.034570,-5.065751,-5.638934,8.424641,4.218519,-8.631635,-6.819184,0.504840,-5.619030,7.923757,-8.782673,9.611227,6.034029,5.026372,-7.631483,1.945376,-8.895413,-2.447017,5.201425,3.607760,6.585917,-5.352459,-9.738084,-1.760713,7.674206,-3.174141,-1.116968,8.945889,-2.313927,-7.371541,-6.132281,-4.117241,-4.383670,7.068466,-6.306206,-7.609320,5.898786,-0.662799,9.333218,-6.993366,-4.398121,-5.154905,-8.602263,-7.947954,-3.338709,4.888773,-3.711792,-2.765409,-6.440857,-4.283472,-9.582186,-9.695041,8.466065,7.977798,-4.038533,1.054417,5.609289,1.915396,6.547259,-4.119853,0.705759,0.835250,2.264018,-7.293434,9.742907,-9.276262,4.824080,7.497581,4.833185,6.089728,1.246789,-0.919674,1.014110,-2.430226,-9.474783,-6.678673,6.851601,8.836311,9.219630,-8.654842,5.521174,1.694063,-9.257680,7.034300,5.285536,7.366084,-0.879791,3.743253,6.065637,-0.901046,-5.417882,3.239265,-9.760549,-1.302883,-9.889000,1.357540,-4.502310,4.924903,9.966440,-3.158695,1.176346,8.570216,-8.551562,2.499392,4.853867,8.306475,7.513030,3.426911,8.626450,4.491754,-3.021761,3.798896,6.666411,3.100802,-2.045731,-8.784386,1.039113,5.477431,-7.912402,-2.559453,-5.610823,-7.233150,-4.496083,-3.908121,4.452265,-5.736269,-4.431964,-7.311694,-2.230343,-2.943203,-7.349032,-8.426720,5.230741,5.162074,3.137016,5.244589,0.929002,2.803928,0.266664,3.376661,2.508646,-3.883644,-7.820969,-1.151008,5.697815,6.413051,8.023481,3.658686,2.859065,-9.658796,-8.771047,-4.437276,8.434910,-3.148615,8.376583,-1.955323,0.664392,-6.187582,9.334311,-8.610308,-9.434678,-2.064225,7.037992,-6.995911,-7.500475,5.908753,-8.619578,-0.114342,6.908309,-2.007454,5.792633,-2.800791,1.257714,-5.649779,4.637025,1.921090,-0.759245,5.400006,-2.842987,-8.274360,-9.255482,2.632316,2.880208,1.671264,-3.203389,-0.806173,-5.832244,-2.011274,9.289061,-1.301251,8.228255,-9.530273,-9.573638,-5.321033,4.379403,3.111198,-2.557780,-0.322475,6.599097,8.748109,0.645232,1.538328,-1.998626,-4.381054,-5.652764,-2.377317,-8.289273,9.766694,-2.113889,6.967916,-7.748046,9.675181,-0.569004,-3.089149,6.122296,6.454688,9.215434,-8.563321,3.075418,-4.388481,-1.598948,5.050838,1.648228,4.875673,-2.018860,-9.277798,9.473717,-6.296267,4.991975,0.501423,-0.410929,-4.915593,0.667963,7.830663,9.708868,-1.271209,-8.557156,-2.752837,-8.594269,6.575764,2.928631,7.049787,8.712546,-2.406448,2.511785,-5.864883,-8.885451,6.723563,8.883275,-1.505197,-7.984928,-2.279427,0.921612,2.555560,-9.369111,-1.556737,-5.854281,4.499052,5.332071,-1.478464,7.031592,-7.099439,0.383673,-9.932790,-9.127782,0.975468,1.038636,8.549539,3.877434,4.429428,7.230916,0.044957,2.699735,-5.407910,-1.720371,4.347745,5.649809,4.361340,-0.142452,1.107509,8.706602,6.955908,3.019307,5.180971,4.685368,-1.993603,-9.308052,-4.036372,-1.585904,3.068416,-3.251756,9.773504,-8.742831,-7.047630,-4.963637,-3.821841,9.226619,-5.350348,-9.486980,3.422766,-2.159635,7.515375,5.247361,3.434783,-5.912349,-1.049296,4.574533,-9.938238,-5.227559,-9.799039,-5.648424,-2.904357,3.527030,-2.844083,-4.391195,4.315076,-5.693351,-8.390884,6.566668,1.602284,-7.948554,-9.653519,9.904077,6.548282,0.860461,-0.451758,-7.333960,0.179952,-7.335232,-7.504437,1.588872,0.692424,-6.211935,1.542389,5.811692,6.457761,-8.306528,-6.035587,-8.293334,-5.935398,2.118241,2.048323,2.395046,4.341222,4.198465,9.857838,-7.266483,-9.191534,-6.425358,-8.677016,-5.724631,1.967422,7.800570,4.959303,4.881445,3.198312,-6.109497,4.177492,-1.686058,4.222965,-9.746433,-6.797751,-5.137467,3.123758,3.390983,-1.105434,7.777964]], dtype = "float32")#candidate|465|(2, 840)|const|float32
call_464 = relay.TupleGetItem(func_91_call(relay.reshape(const_465.astype('float32'), [15, 16, 7])), 1)
call_466 = relay.TupleGetItem(func_94_call(relay.reshape(const_465.astype('float32'), [15, 16, 7])), 1)
func_91_call = mod.get_global_var('func_91')
func_94_call = mutated_mod.get_global_var('func_94')
call_470 = relay.TupleGetItem(func_91_call(relay.reshape(const_465.astype('float32'), [15, 16, 7])), 1)
call_471 = relay.TupleGetItem(func_94_call(relay.reshape(const_465.astype('float32'), [15, 16, 7])), 1)
func_290_call = mod.get_global_var('func_290')
func_293_call = mutated_mod.get_global_var('func_293')
const_477 = relay.const([5.331953,-0.838709,-2.385164,-4.336409,2.768419,5.641729,5.780228,6.349873,-7.939043,8.479957,3.973885,-1.251023,5.153733,-2.961825,-0.997465,-3.389711,-0.201627,5.786086,-3.363556,-6.839635,7.842109,3.492330,0.933542,-7.057891,-6.923906,6.622299,-2.049034,4.595044,3.564687,-0.145122,3.082003,6.147849,-9.512191,-0.710198,4.104279,-0.160622,-2.236419,8.284251,0.070954,-1.825023,5.809070,0.406397,1.515509,6.773890,-7.639155,-9.681588,-3.548256,-7.091860,-0.049008,-0.167610,6.851984,-8.819120,-0.906556,4.668998,8.664009,3.227732,5.670346,-0.056711,9.791046,-7.542836,-9.611332,3.706717,-9.143695,2.972154,6.709805,-4.950381,-2.140295,-0.605945,-3.825746,-1.845970,5.853475,-4.994168,8.433259,2.220034,-3.172811,-9.579752,-3.388894,-2.518924,5.106539,6.301359,5.652618,5.038782,8.081889,-8.601869,-6.337819,5.948753,3.348181,-3.240859,7.234809,5.702687,6.856055,-2.605023,-7.125251,7.167460,-8.646826,-3.031464,-6.460942,5.651990,0.598033,-6.091075,4.899142,-6.416203,0.932655,6.454857,-0.563755,7.715373,-4.404652,-3.739312,-2.985784,7.026966,-5.183838,-0.953591,6.298196,-8.368187,4.856884,-2.825718,1.471723,8.637469,-9.425716,5.764937,-2.666934,-5.154414,-3.040783,5.849301,-2.563571,7.360813,-1.943216,-1.711961,6.191820,-5.280654,1.795264,8.699788,8.537094,7.208245,9.669385,8.243838,6.528097,4.659136,-9.713309,-4.557980,2.138741,4.084821,3.082792,1.377452,9.126889,-6.693147,5.000468,1.804082,-1.910498,-6.066407,7.340936,5.823410,8.894133,-2.997916,9.109481,6.545577,-8.892329,-5.488885,-9.298013,-3.926557,-5.320049,-6.979735,8.580369,-9.743033,-8.160145,2.198205,-4.358032,0.585400,3.857928,6.179849,-5.577001,7.100330,-9.380935,1.407062,-4.046387,-0.774085,-3.980709,-0.646535,-7.454466,2.817251,1.739860,-9.439841,-3.857415,4.670207,0.364609,-1.664470,8.323069,-2.431930,-4.940337,-6.716041,0.921572,9.394021], dtype = "float64")#candidate|477|(192,)|const|float64
call_476 = relay.TupleGetItem(func_290_call(relay.reshape(const_477.astype('float64'), [6, 4, 8]), relay.reshape(call_464.astype('float32'), [1680,]), ), 2)
call_478 = relay.TupleGetItem(func_293_call(relay.reshape(const_477.astype('float64'), [6, 4, 8]), relay.reshape(call_464.astype('float32'), [1680,]), ), 2)
output = relay.Tuple([bop_449,bop_455,call_464,const_465,call_470,call_476,const_477,])
output2 = relay.Tuple([bop_449,bop_455,call_466,const_465,call_471,call_478,const_477,])
func_484 = relay.Function([var_447,], output)
mod['func_484'] = func_484
mod = relay.transform.InferType()(mod)
mutated_mod['func_484'] = func_484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_485 = relay.var("var_485", dtype = "uint32", shape = (14, 9, 5))#candidate|485|(14, 9, 5)|var|uint32
func_484_call = mutated_mod.get_global_var('func_484')
call_486 = func_484_call(var_485)
output = call_486
func_487 = relay.Function([var_485], output)
mutated_mod['func_487'] = func_487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1988 = relay.var("var_1988", dtype = "float32", shape = (3, 8, 12))#candidate|1988|(3, 8, 12)|var|float32
const_1989 = relay.const([[[7.593999,4.533044,-7.464537,5.966036,9.077215,3.306013,-2.334767,-8.208858,0.400103,-0.594367,-1.184645,8.705030],[2.543099,-4.929016,8.992634,-7.677181,-6.427859,-4.966721,5.888044,-6.981975,-6.712647,9.203781,4.451836,1.406237],[-7.262908,-3.652487,-9.532475,0.605165,1.734828,-3.408707,8.848637,7.503031,-8.630848,-2.602569,-4.602805,2.323945],[2.920409,8.151649,-2.070098,3.155379,-6.640291,5.201928,6.494625,-2.764203,-1.203607,2.633479,-2.878648,3.878618],[-1.940180,-4.631166,-0.129992,3.410762,-0.335712,-6.410360,-9.531096,2.090243,9.955643,8.868326,-6.625035,-7.578224],[-4.790376,-3.253317,-0.022711,8.639775,-4.602713,6.151736,3.272835,-8.384939,2.553439,-9.051329,-9.207810,-0.123209],[-6.562062,0.238664,-0.720264,8.917655,9.651016,6.157203,2.040988,8.084637,-1.249254,-7.872163,4.396763,8.192109],[9.530428,-5.871094,8.278713,-3.828199,-1.517209,-8.241158,9.935282,4.374221,-9.002836,-0.693892,-5.842618,8.147662]],[[9.867006,-8.907307,-1.551434,5.799149,-4.387376,8.549275,1.252556,9.562715,8.612411,-0.345092,-8.561198,-0.790179],[-8.678130,-2.970734,-0.526121,8.290718,-2.181977,-0.254473,6.842987,-1.822211,-3.547087,5.413351,7.642789,8.880474],[7.687772,7.176453,-8.799914,-2.863441,5.566086,1.529641,-6.260966,5.742532,-5.487845,3.218459,0.445831,3.821003],[5.138451,4.802209,-5.127194,-2.128584,-7.900169,9.087885,3.411169,3.042861,-9.097798,-3.104492,5.922348,1.714235],[6.134389,4.241866,2.003983,-2.595487,-7.691822,1.998411,7.713213,-7.994170,-8.284557,-2.234420,0.210185,-9.916942],[-9.188136,-2.941079,-4.300238,6.804591,-1.628106,-8.201397,-9.845911,-9.554578,2.948371,7.359038,2.585590,-4.479388],[8.398147,3.830050,1.951430,-4.971802,-3.539492,2.178535,9.783840,5.019910,-8.966615,4.792716,-9.417425,8.189502],[4.608843,-6.439142,-1.085311,-1.382225,8.518715,-6.002015,5.831403,-6.169475,8.277667,-0.725624,0.987597,-4.704801]],[[-9.912266,-7.221132,2.881634,-0.732797,-6.928803,-6.926065,4.965589,-1.684058,-2.540334,3.576757,1.451581,-0.213272],[-0.614210,8.254851,-4.819428,3.897102,1.648712,4.263995,1.976714,-1.742777,6.021978,-3.749060,8.023335,9.153291],[0.477305,-7.596627,1.036091,7.316279,8.238202,8.112260,-9.949874,-1.098818,-3.348090,-9.613948,9.657953,9.922457],[2.562279,-7.718808,-2.957864,9.603068,-7.078480,-6.958438,-1.928164,4.572356,2.007114,7.141660,5.371328,7.907259],[0.912291,1.783393,-1.120102,0.622065,-1.005727,2.646220,-7.413276,-1.406160,-9.242003,-9.389522,-6.675418,-1.674542],[-9.933210,8.083984,-5.324655,3.244580,4.848412,-2.521308,9.036823,7.007522,3.342605,-3.455891,9.914351,7.644014],[6.261734,-7.096695,6.395418,3.959638,-1.445151,-8.177764,-6.478713,2.850055,-2.608635,2.808115,0.539433,-4.214152],[1.234190,-0.179346,6.298293,-1.381984,2.565695,4.170748,-1.900877,-6.191796,1.603698,4.166072,-9.193522,2.321629]]], dtype = "float32")#candidate|1989|(3, 8, 12)|const|float32
bop_1990 = relay.power(var_1988.astype('float32'), relay.reshape(const_1989.astype('float32'), relay.shape_of(var_1988))) # shape=(3, 8, 12)
output = bop_1990
output2 = bop_1990
func_1998 = relay.Function([var_1988,], output)
mod['func_1998'] = func_1998
mod = relay.transform.InferType()(mod)
var_1999 = relay.var("var_1999", dtype = "float32", shape = (3, 8, 12))#candidate|1999|(3, 8, 12)|var|float32
output = func_1998(var_1999)
func_2000 = relay.Function([var_1999], output)
mutated_mod['func_2000'] = func_2000
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2200 = relay.const([[[True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True],[False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False],[False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False],[False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False],[True,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False],[False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False],[True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True],[False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True],[False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True],[True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False],[True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True]],[[True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,False],[False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False],[True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True],[True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True],[True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False],[False,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True],[False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,False],[False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False],[False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True],[False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False],[False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,False]],[[True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False],[True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True],[True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True],[False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True],[True,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False],[True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False],[True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False],[True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True],[True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False],[True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,True],[True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True]],[[True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False],[True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False],[True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False],[False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True],[True,True,False,True,False,True,True,True,True,True,False,False,False,True,True,False],[True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False],[True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,True],[False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True],[True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False],[True,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False],[True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True]],[[False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True],[False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,False],[False,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True],[True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True],[True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False],[False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False],[False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False],[True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True],[False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True],[False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True],[True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True]],[[False,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False],[True,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False],[True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True],[False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True],[False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False],[False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,True],[False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True],[False,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False],[True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True],[True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False],[True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True]],[[True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False],[True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,False],[False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False],[True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False],[True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True],[True,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False],[False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True],[False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False],[False,False,True,False,False,False,True,True,False,True,False,False,True,False,False,True],[True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False],[False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True]],[[False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True],[False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True],[True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False],[False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False],[False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False],[False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True],[True,False,True,True,True,False,True,False,True,False,True,True,True,False,False,True],[False,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True],[False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False],[True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False],[True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False]],[[True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,False],[False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False],[True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True],[True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False],[True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True],[True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True],[False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False],[False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True],[False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False],[False,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True],[True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False]],[[False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False],[True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False],[True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False],[True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False],[True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False],[False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False],[True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False],[False,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True],[True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True],[True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,False],[True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True]],[[False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False],[False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True],[True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False],[False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True],[True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False],[False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True],[True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True],[False,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True],[True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True],[True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False],[True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True]],[[True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True],[True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,True],[True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,True],[True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False],[False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False],[False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True],[False,True,False,True,True,False,False,False,False,True,True,True,True,True,True,True],[False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False],[False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True],[True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True],[True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True]]], dtype = "bool")#candidate|2200|(12, 11, 16)|const|bool
var_2201 = relay.var("var_2201", dtype = "bool", shape = (12, 11, 16))#candidate|2201|(12, 11, 16)|var|bool
bop_2202 = relay.logical_or(const_2200.astype('bool'), relay.reshape(var_2201.astype('bool'), relay.shape_of(const_2200))) # shape=(12, 11, 16)
output = bop_2202
output2 = bop_2202
func_2207 = relay.Function([var_2201,], output)
mod['func_2207'] = func_2207
mod = relay.transform.InferType()(mod)
mutated_mod['func_2207'] = func_2207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2208 = relay.var("var_2208", dtype = "bool", shape = (12, 11, 16))#candidate|2208|(12, 11, 16)|var|bool
func_2207_call = mutated_mod.get_global_var('func_2207')
call_2209 = func_2207_call(var_2208)
output = call_2209
func_2210 = relay.Function([var_2208], output)
mutated_mod['func_2210'] = func_2210
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2260 = relay.var("var_2260", dtype = "float64", shape = (6, 14, 4))#candidate|2260|(6, 14, 4)|var|float64
var_2261 = relay.var("var_2261", dtype = "float64", shape = (6, 14, 4))#candidate|2261|(6, 14, 4)|var|float64
bop_2262 = relay.mod(var_2260.astype('float64'), relay.reshape(var_2261.astype('float64'), relay.shape_of(var_2260))) # shape=(6, 14, 4)
output = bop_2262
output2 = bop_2262
func_2266 = relay.Function([var_2260,var_2261,], output)
mod['func_2266'] = func_2266
mod = relay.transform.InferType()(mod)
var_2267 = relay.var("var_2267", dtype = "float64", shape = (6, 14, 4))#candidate|2267|(6, 14, 4)|var|float64
var_2268 = relay.var("var_2268", dtype = "float64", shape = (6, 14, 4))#candidate|2268|(6, 14, 4)|var|float64
output = func_2266(var_2267,var_2268,)
func_2269 = relay.Function([var_2267,var_2268,], output)
mutated_mod['func_2269'] = func_2269
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2456 = relay.const([[[1.421253,-2.987671,3.591608,5.108104,-1.139225,-1.978077],[0.372160,-8.239736,-0.399224,3.428580,-9.471876,-5.880732],[-3.598542,3.431456,2.874947,-8.108078,-6.546681,6.667650],[-7.291150,6.170580,-6.760507,7.963351,7.616984,-6.653943],[0.591507,-1.079502,5.012321,9.332587,8.675481,3.276837],[9.222920,8.229403,-0.609556,5.626872,9.489614,3.487711],[-5.115479,-8.167249,7.788920,-1.646282,-3.146454,-5.849165],[2.087482,5.764343,-8.040091,7.028090,-0.942388,9.963231],[2.275430,-8.009230,4.742320,-2.083840,-4.992248,-5.748551],[1.173462,-4.046058,6.050985,-4.315747,-4.579701,6.190382],[-7.570178,-3.544922,2.507541,2.619200,-3.737259,-9.964513],[4.546957,-5.392734,1.503270,0.552377,7.817647,-4.486154],[-5.741786,9.492120,4.079700,-1.722698,2.351028,-6.478990],[-5.987292,-1.822158,2.554958,6.678999,8.604738,-5.097227],[-6.533970,-3.614267,-8.340114,-8.223797,8.850522,8.233275],[-2.769711,-5.380749,0.134226,-6.270178,-2.504910,-0.190820]],[[5.456917,-3.728647,3.081028,6.336988,8.481178,3.837313],[0.146586,-2.686822,0.612727,3.364677,5.886143,-2.221661],[-3.442266,5.225555,1.873499,9.346914,1.748862,2.314918],[-0.563434,-9.536077,-8.032903,6.843934,3.694299,-7.238443],[-4.467173,-0.758044,2.677650,-3.511424,3.511898,-7.017628],[1.413054,-4.904983,-3.297202,-2.305917,-2.528471,-4.513350],[-7.652962,-7.260216,9.209447,6.159979,-9.483163,-3.362944],[-7.854604,-0.506441,-7.419392,-5.730034,-9.037267,-6.505013],[-5.381285,1.489653,9.483426,-6.380006,-9.954979,7.806175],[6.671224,1.408415,-5.460462,-9.235178,-9.613526,-2.643495],[3.523960,-4.957411,5.238641,-1.821962,6.405493,5.126416],[7.777662,3.132536,-6.993186,-3.870164,3.403140,-5.789216],[8.071349,-1.085007,7.733198,-6.707885,2.603098,-0.612788],[5.565226,-8.653801,-9.096981,9.605648,7.689415,2.772932],[5.944406,-8.667865,2.938484,-4.768897,1.636997,-5.982546],[6.320832,4.646831,-8.731696,-6.966033,0.806870,-3.541086]],[[-3.313619,2.151968,-4.115965,0.120241,-5.073894,-1.112691],[-7.094052,-5.180541,2.048533,-8.139293,9.060545,0.195672],[8.688116,6.210709,9.416206,2.252509,0.150048,5.610056],[5.324935,8.590833,-4.618293,-9.481390,-5.608969,-0.985015],[4.804911,1.577463,7.180083,-6.939487,-2.203620,3.743350],[-3.504930,1.778764,1.630452,3.000587,9.111381,4.090524],[9.855810,3.101435,-5.493972,7.724965,-8.114060,4.604871],[-2.890801,0.692446,9.752842,-2.188931,6.056051,-7.879919],[-7.861203,8.759811,-8.640569,-6.113418,-4.816140,-5.421911],[9.789537,2.572698,-3.568529,4.068951,-8.338166,1.173141],[3.057587,3.327197,4.033754,-9.827421,-4.804410,6.169705],[-1.246182,-1.140690,4.193284,7.594553,-1.055957,8.334835],[5.761426,7.158096,9.555974,-5.602305,-6.107966,2.538006],[1.859780,-9.316031,0.947806,-0.782874,4.520547,7.455365],[1.377899,3.709390,1.333644,-5.431906,-6.149248,-8.792594],[-4.563328,-5.092453,4.736366,-1.175897,8.399171,-5.575446]],[[5.642230,-2.116750,6.263183,1.385779,2.224909,-7.321162],[8.885540,8.013374,7.298423,2.847902,-5.262648,-7.418292],[2.484519,-1.528770,5.068885,-1.389065,-2.768187,4.227704],[-9.215832,-1.107845,-7.634623,-2.808663,-0.791712,9.724343],[9.808658,9.389447,-0.850707,9.402376,6.192590,8.027817],[-2.989331,9.400547,-1.744788,-9.584639,2.473650,-4.476747],[-5.385009,-9.373007,9.209679,-1.436011,-5.871860,-4.235744],[5.464281,3.134401,-0.039192,-8.112969,-6.664497,2.217893],[-0.429000,2.155909,-6.551048,7.985846,-2.007029,5.308988],[5.982597,-2.091970,-2.851992,1.286037,7.003174,-4.639532],[6.201220,-3.326795,-8.984242,-6.417303,-9.804638,-0.716054],[-2.235623,6.259416,0.091951,-6.354861,-1.279119,1.661665],[4.143661,-0.854740,8.274080,-0.201026,4.355093,-3.378126],[-5.845935,6.253122,-5.490609,-7.879008,5.588389,7.172991],[-4.291934,-5.533015,-1.465140,7.958468,-0.921126,-9.596609],[-9.291636,-7.463155,-5.391646,2.218253,5.605626,2.674353]],[[7.870723,-6.234027,1.150525,8.532892,8.068066,-0.339058],[2.661089,-1.470011,0.643980,7.250567,3.614578,-2.996460],[-0.553164,5.399474,-8.640498,0.249922,-4.078694,-4.254824],[3.496840,5.052437,3.198954,2.039916,-2.446584,-4.116239],[-3.023546,0.022448,8.904717,5.113941,-4.254989,-5.746164],[6.500153,-9.699654,2.296962,7.933461,-8.939140,-7.801466],[-2.056386,2.609657,8.518833,9.158083,2.567596,8.286498],[-5.425694,2.506025,3.467648,1.064195,3.661279,-3.271777],[-0.953800,-8.160560,9.440195,0.085736,-2.562376,-2.532224],[-5.026439,2.955207,-6.279625,0.075687,-7.626777,0.318184],[-2.675493,-6.233482,-8.590408,-3.641243,5.539420,-1.263507],[0.057149,-8.446047,-8.304640,2.838697,-7.043042,-5.160142],[-4.893661,3.611681,-3.632345,-5.483128,5.090732,1.646659],[-5.887680,9.740882,-3.661348,-4.946166,8.867294,2.498720],[3.011981,-8.308083,7.175157,-4.470231,-3.458575,-2.702048],[5.490199,2.373454,-5.326025,-1.965610,6.809170,-0.083812]],[[9.864357,1.088670,4.410845,-1.871247,-3.000033,8.220618],[-7.138574,2.937905,2.270643,7.091036,-3.779718,-2.078183],[2.922051,8.670287,-9.222787,-2.193706,-7.080035,-1.987445],[-4.659800,-5.998556,9.985943,8.105724,-6.109979,1.693495],[-7.463314,-3.059150,6.338436,3.273770,9.954289,9.493673],[-1.158124,-9.937392,-0.415206,2.666797,2.940410,4.648548],[5.302792,-3.706617,0.919972,3.705760,4.496357,-6.331089],[-3.425615,0.510363,3.764572,0.821297,8.519235,-5.969560],[-8.818570,-9.547961,-1.728660,0.859897,-7.508495,8.777946],[4.053755,-8.906359,-1.885270,4.812916,-0.801336,-2.363573],[-6.712396,-0.633511,5.162653,4.693345,-1.997530,-1.012454],[8.267117,-7.137976,8.087793,4.610336,-2.048758,2.141422],[-2.135026,-9.445673,-6.979216,-2.364603,-7.632805,-5.116094],[-1.111168,-9.567691,9.900423,1.473889,-4.316507,2.815144],[7.914111,-9.153717,-4.604075,-9.551002,-6.508761,4.334451],[1.634560,2.334574,-6.428945,-4.997620,6.964463,0.770623]],[[7.488972,3.116603,-9.740278,1.715287,7.797876,-3.824518],[-9.821021,9.812671,7.753717,5.308599,-7.554129,-2.444295],[-6.209180,4.735214,7.054884,-9.614248,8.131420,-4.427284],[-0.849064,9.036012,6.385000,4.810546,-1.213419,7.776725],[-8.123757,2.519468,6.359135,0.862091,-1.913166,-5.071261],[-0.436852,-8.278530,-1.860629,2.201936,-7.921636,3.246104],[-3.592519,5.435336,2.509286,-4.253763,7.489171,-5.453232],[-9.349172,-1.641770,1.463513,-2.677529,-0.874366,1.503134],[-7.173718,3.186673,-4.778367,-8.648814,-2.480406,7.157103],[-5.160293,8.910762,4.548347,1.662521,6.962246,-1.135611],[-4.505475,-9.148465,1.694506,7.759043,7.764798,7.028879],[5.879423,-4.766002,4.473323,9.936792,-4.513773,-4.915947],[0.952645,6.745939,6.980088,1.081206,-6.405835,-9.245976],[2.617161,4.648619,5.602572,-5.407103,2.398325,-4.956809],[5.925341,-0.921896,-4.014513,4.736833,-5.888272,-0.061395],[9.654673,0.030325,-6.513855,6.553475,-2.377527,-9.258887]],[[2.368780,-3.109485,6.571359,-6.475131,9.947637,-1.371478],[1.461341,7.435248,-3.966094,4.955617,0.365050,-5.615011],[1.091275,2.146976,-5.758374,5.167367,6.488602,-7.665300],[-0.461001,2.664792,-5.656422,6.642765,0.628636,8.434846],[-6.958209,3.857829,-1.642940,2.361295,-0.528265,5.873511],[-4.103142,-4.702693,-5.954620,1.257228,1.063321,-6.221568],[-2.673023,1.910227,-9.223136,-1.195625,-3.914995,-0.355997],[9.054112,-6.479402,4.083199,-9.329723,-6.180815,4.831536],[-5.507017,2.784495,9.400595,9.879070,4.678783,6.415635],[2.832294,-0.059036,-7.618564,-9.098617,7.251052,5.193970],[-4.181834,-8.137560,-2.252033,-8.848328,-0.817997,2.342998],[8.330305,-2.691860,1.765022,2.380912,0.707118,-6.294627],[-5.104412,3.681818,6.723644,-5.892866,-9.937521,-3.938424],[-9.654633,9.140207,-7.707855,-7.324169,3.699654,-9.992543],[5.595325,-1.631826,-3.521679,-1.692545,4.511227,-3.222815],[-0.784671,7.237843,3.525304,3.069435,-4.997950,8.960152]],[[8.501505,-0.439033,-4.945921,-0.307139,-2.353939,-7.545503],[1.101842,-4.870711,-2.730566,-3.310387,9.476813,3.899437],[9.903680,7.455685,-1.988670,4.501923,-0.260699,-7.918890],[-3.402390,-5.677503,4.168505,5.786251,1.181089,-3.157467],[-0.379671,-2.086423,-1.293597,3.994435,5.757783,7.017030],[4.182270,1.395277,-5.119334,-0.132422,-5.393389,-9.612711],[4.491912,2.119759,3.052497,-1.352506,-1.481492,4.507021],[-6.317795,-1.835452,3.990020,2.233982,-9.499768,8.063898],[9.449556,-0.428154,-6.364089,4.268149,-0.480227,1.843873],[-7.898799,-2.505349,-8.664946,7.054553,-7.672593,-0.397092],[4.955305,-2.473272,6.524304,8.933819,0.262780,-3.398084],[-1.879101,7.817747,-3.814172,-5.089604,-8.839897,1.458787],[-7.688340,2.323169,6.611336,5.016096,-0.561239,-9.476702],[5.266260,-7.590535,4.254333,-6.600463,-5.751773,6.146878],[-0.458985,-9.340584,-6.171124,-6.844362,-0.627772,5.036530],[0.150012,8.394082,-5.896477,3.097909,6.628198,-6.480233]],[[3.429891,-1.603658,-1.403358,-5.122446,6.662285,9.504991],[2.241348,-0.713321,2.699736,0.093704,-6.277993,-8.580935],[-0.982873,-4.054359,5.060392,6.166574,-4.734672,0.514881],[2.460769,3.694421,-7.104963,-9.173989,-1.818339,0.445045],[-9.836372,8.999786,9.761525,2.800331,2.690406,9.805303],[-7.741097,0.503512,-1.871129,9.254060,7.197310,-1.200516],[7.662436,0.355512,-3.666643,7.482831,9.527804,6.394586],[5.272706,-7.964311,4.870197,9.576596,-2.234706,-6.899386],[1.486252,-3.480566,-5.148692,-8.981183,3.169192,-1.077801],[8.700854,-7.868319,-1.350181,6.976753,-4.038402,-4.329271],[-9.246970,7.154523,4.384137,4.368158,5.782757,3.401448],[1.109539,6.039915,3.725304,-1.377731,-6.597063,0.468924],[-7.979917,-5.239244,-3.185214,-9.784141,-7.352040,-0.404262],[9.312530,6.782104,6.356807,9.693439,-3.604320,-3.356610],[-9.381188,-3.972429,9.950094,1.170762,3.683658,6.723929],[-4.218506,-0.932911,0.674302,-4.699004,-8.363057,-9.237700]],[[-2.573144,-6.789101,-1.262148,-5.929943,9.154095,0.629958],[-9.734590,6.303307,-7.862561,-4.322951,-3.209606,-3.557045],[5.773695,3.208104,-4.242603,8.003509,8.306153,8.895555],[-9.094211,-7.061126,7.315633,7.804339,-7.646654,2.395158],[4.379835,4.723335,-0.055781,6.108770,9.605581,2.072577],[-2.004049,-6.888302,1.871036,-0.155306,-3.411658,1.992159],[-5.451097,1.026568,8.490631,-4.700587,-0.764317,3.419059],[6.444904,-8.422082,1.689115,-5.005099,0.835340,3.386092],[-2.943229,-9.254028,-4.573720,-9.229898,-3.721307,4.651505],[-4.516160,-0.923034,3.536725,5.545618,2.040583,9.940772],[-9.053388,-2.951440,0.486303,-2.785785,2.309095,-7.792040],[-5.100931,1.499360,-4.798869,6.351073,-5.680287,-8.622253],[5.883235,-0.886819,9.187169,5.524064,5.638769,6.990463],[3.905557,-1.312970,7.039919,-2.427321,-6.413220,-7.689482],[-7.492359,3.466446,-7.799955,-8.421591,-7.883799,-1.673122],[4.484524,0.331550,3.581586,7.214452,-6.720887,-1.348104]],[[-6.630185,6.828362,-0.971149,6.170290,8.033459,3.511409],[-9.685909,6.195772,-1.805079,9.457463,5.355436,-4.035487],[1.476081,7.263464,8.587300,7.008413,-0.472853,-3.116474],[0.527031,9.705016,0.791073,-7.733041,6.397000,-0.843733],[9.288455,7.697374,-4.524544,9.207752,8.945092,7.111261],[-9.997985,-4.171924,9.663894,0.311715,-7.547262,-4.728300],[0.178087,-3.725021,-4.004927,-4.260582,-2.095555,5.361944],[1.770268,-2.041834,0.094306,-1.735276,0.619851,8.798268],[2.884414,1.194603,8.292327,8.272219,-3.238831,4.737173],[-5.877538,-0.564479,3.230809,0.046134,-2.193220,1.389613],[6.202090,-2.258712,-1.126318,-1.705732,-6.942907,-8.501566],[5.946775,5.189863,3.564867,-9.420996,-2.471645,-2.085442],[-4.574978,4.139484,7.619204,2.014592,-7.694087,8.294413],[2.611641,-9.606535,7.868431,5.788543,2.774245,-2.252253],[-1.360280,-9.725271,7.938126,-4.070103,0.901067,7.849578],[5.640536,3.425433,-2.299951,-9.297530,-6.191745,3.732830]],[[9.840452,-4.416771,3.822786,3.914370,-2.753108,5.487301],[-4.350745,3.990484,9.840779,0.034479,9.775785,-6.188266],[0.663615,6.980329,0.975839,-3.708265,-0.657967,1.948538],[1.866850,0.318913,1.151649,-6.229573,-8.956785,3.978189],[-5.316077,-2.913709,0.701778,8.621846,-5.569054,7.375726],[6.068121,-1.734300,-8.860824,-4.412318,2.380746,7.387477],[-5.090621,-8.187782,-5.523441,-1.643110,-9.582661,-2.713138],[9.255042,6.477907,6.239020,4.522204,-1.897311,-7.191136],[-5.339747,-4.856806,-1.313985,-8.382559,4.899488,6.940620],[-6.020368,-6.587204,2.777286,-4.996736,-9.734644,-2.120182],[-0.150418,9.331183,6.176638,-6.297078,-0.955028,4.885901],[-3.090975,5.469317,6.645177,3.898248,-9.835696,-5.484521],[4.305438,-5.317911,-3.869606,0.969616,-1.321972,1.424119],[-9.963107,0.291727,0.719659,4.807505,-8.572580,3.845594],[1.712911,7.082612,6.231347,9.793040,7.602577,-1.530288],[-2.864524,-0.330754,-7.474665,0.254199,5.581560,4.636855]],[[5.264442,6.330755,1.198850,8.574667,3.436003,-0.124657],[5.039808,6.318594,2.605960,-6.114305,4.904752,4.287605],[6.903255,-3.993955,5.429924,1.590537,-9.904136,3.374285],[4.570859,1.107448,6.538624,1.825112,5.016373,7.632776],[0.220097,7.905728,9.829255,-0.093552,4.268619,5.694999],[0.231023,0.918193,5.703691,0.086087,-8.408671,-3.635389],[7.272886,-2.451053,-2.287500,5.277891,2.602814,4.707219],[6.033069,3.710022,-6.882351,-3.402421,7.118788,-9.953536],[-8.377442,-7.644343,-1.960661,-8.528990,-9.764224,-4.023200],[1.227502,-7.018557,-8.357357,7.205462,-6.054347,-0.520604],[4.884943,-1.505525,0.268413,-1.520054,-0.784473,-6.369683],[9.693241,-4.353728,5.706603,-1.731399,7.535256,1.695792],[-6.327000,1.849509,-8.681354,-3.841687,-4.112295,-8.693232],[8.006462,1.305407,1.767060,-0.255445,7.679036,3.926035],[4.774159,5.278150,-6.829019,2.278820,9.068486,6.959359],[-2.261610,2.587041,-0.905605,-7.877044,-9.437299,-4.826058]],[[3.590068,-5.225777,4.001845,0.079001,-6.064091,3.108593],[-7.194595,3.850141,-5.069333,5.480237,-1.597370,3.357243],[-1.092539,-2.023071,-5.621022,2.177709,8.336921,-6.578100],[8.365886,-2.331644,-8.530801,-7.434361,-5.844168,-9.392018],[2.713552,9.694822,-8.330605,-2.158240,4.342437,-9.604717],[5.716807,6.033776,2.861799,-3.546731,-6.432206,-3.973407],[-9.453007,7.022491,9.397290,4.007948,6.057929,-4.739022],[-9.809822,-4.420549,-7.877767,8.981370,-6.165297,-5.829781],[-8.274996,-1.058383,4.432220,3.547320,-8.646239,-4.384279],[-1.161567,-2.962100,1.704765,2.472959,9.916649,0.544504],[-6.373038,-4.689441,6.523059,5.828344,4.308002,-6.750048],[-8.027476,-3.677617,-5.927437,-4.789058,9.888533,-7.171015],[-0.287038,-1.644073,-3.464367,1.690513,-5.415241,4.859185],[-2.111964,8.320509,1.265636,3.949410,3.253857,-4.095099],[-6.215072,-6.784798,0.984226,-2.819984,-5.189930,1.293670],[-1.325601,-3.966679,-9.943426,4.707569,-8.132665,-0.210284]],[[-7.891912,1.699503,-2.521201,-9.112062,8.594538,-9.231004],[0.146107,-0.970753,3.336308,-7.766511,-5.438280,-7.842076],[0.268199,8.143214,-0.978333,6.046001,9.312733,-4.034005],[-0.530890,3.142795,6.448307,-3.868330,-0.754337,-5.611611],[-0.871192,-5.792384,8.565948,-1.073122,-3.588162,-7.720693],[3.349648,2.777324,5.524903,-9.914347,-7.338966,2.874938],[6.379716,8.860268,-0.888463,9.023939,-9.237435,7.529425],[-3.154280,-7.467502,0.205929,1.905252,-7.040031,-4.562984],[-9.782658,6.638945,-5.074526,-5.213245,-1.210594,9.528145],[-0.835232,-5.484110,-2.509367,-5.828592,1.154137,6.105677],[-6.685118,4.582279,-5.375290,-3.141487,8.240682,3.418881],[-3.072573,0.311550,5.739512,2.962165,-4.682684,1.583250],[3.594375,9.269752,-3.356333,6.481300,-8.027574,-2.157503],[-1.638999,6.082526,-9.767780,6.588754,4.425099,-7.540701],[-1.331998,-5.535100,3.871113,2.870892,1.178249,7.463374],[-2.939501,-7.602822,7.799757,9.433949,8.628295,3.974915]]], dtype = "float64")#candidate|2456|(16, 16, 6)|const|float64
uop_2457 = relay.acos(const_2456.astype('float64')) # shape=(16, 16, 6)
output = uop_2457
output2 = uop_2457
func_2461 = relay.Function([], output)
mod['func_2461'] = func_2461
mod = relay.transform.InferType()(mod)
mutated_mod['func_2461'] = func_2461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mutated_mod.get_global_var('func_2461')
call_2462 = func_2461_call()
output = call_2462
func_2463 = relay.Function([], output)
mutated_mod['func_2463'] = func_2463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_2493 = func_2461_call()
call_2494 = func_2461_call()
func_1998_call = mod.get_global_var('func_1998')
func_2000_call = mutated_mod.get_global_var('func_2000')
const_2499 = relay.const([7.685112,2.486314,3.993607,5.930675,8.433244,-6.940156,-0.943369,6.389828,7.673305,9.737474,4.658801,-9.917469,7.955335,-1.120931,0.138022,6.599086,4.624186,-6.144825,-3.752524,-9.066172,3.858920,-2.400326,-5.533015,6.283754,4.575535,-1.327152,6.846910,0.375537,-1.969566,6.273590,5.783095,7.495880,1.005668,7.578360,4.668624,7.232035,-9.333819,-9.817268,7.057324,-0.838920,-2.746713,-0.116370,2.675124,-4.302327,2.902608,4.499269,8.430809,6.073215,9.314432,-5.004691,9.401982,1.421545,2.159328,-9.458720,-2.352099,-6.013200,6.566005,-8.483698,-2.294753,6.785384,9.764316,-6.665661,9.170887,0.218546,5.076990,7.265427,-9.796045,-2.961085,1.100652,-6.632733,-7.279440,-0.739485,3.227210,-7.450333,-9.482500,4.588901,8.221283,-1.893548,-7.649580,1.595660,6.779530,-7.280482,7.431362,-0.456715,0.517529,-7.501322,3.481681,-0.960870,-6.175871,-0.715800,-7.542444,-7.258021,-4.877159,-2.227625,-8.950456,-4.637171,-1.300004,5.072181,5.099019,-8.236735,4.181434,-0.181446,-6.473890,9.857539,-3.500596,0.366833,-8.134129,-8.692751,-0.484081,5.320182,-2.270234,-3.236294,-1.687801,-2.456425,4.262499,-9.668806,-7.937396,7.077511,7.431150,5.704045,5.000881,-8.810022,-4.453474,-2.724488,8.134949,1.078544,0.150099,0.562840,-1.960941,5.984158,-4.888986,-7.106779,6.899428,0.969778,-4.989187,-6.768240,9.238215,4.222867,8.970805,-9.902032,5.970385,-7.589252,-4.643103,-2.632412,4.586380,-6.932128,-9.550228,-8.192075,8.331813,-4.461273,-5.826852,4.386390,-8.562551,0.286189,-2.936498,-8.420451,-0.715908,-3.828362,-4.097463,8.306166,-1.992093,-8.632361,-5.958600,-6.517181,-1.446573,3.180996,3.952521,1.458105,-8.122296,5.026706,-8.306105,-4.428261,-6.855320,9.751256,-3.758489,4.365539,7.159984,7.669341,-2.730600,9.019057,-7.835103,-5.236980,7.275453,3.549893,-7.262013,-7.607128,5.972055,9.791962,3.572520,-0.754544,6.092574,-2.806808,1.662262,-8.107143,-1.154823,2.770813,6.524025,-1.153979,5.245644,-8.498260,2.052927,-0.318559,1.804032,-9.952592,2.098217,-6.260865,-4.115130,7.525954,-0.820585,-2.351587,5.840846,-3.714733,8.596437,0.170683,-9.880115,-8.980454,-9.927749,-2.897941,5.210829,-3.886935,-2.271350,8.986661,5.331598,-0.349881,9.293737,-8.428203,-5.920293,9.763339,-2.931537,-7.087455,-1.864773,-2.516312,-9.745211,-9.904373,7.556553,-3.898762,-1.834294,5.960198,-8.291983,1.197742,-4.267957,-4.136127,-9.004870,-2.246544,-8.452547,-1.634290,2.817770,5.203396,5.716567,4.492663,-9.816028,-4.847665,-7.125803,-8.006786,-9.335310,-1.263719,-9.431526,8.530142,-1.447916,8.855211,9.026925,0.207900,-7.023202,-4.024908,-0.125266,-0.207832,8.153219,4.611952,-8.630772,-4.878534,-3.254872,8.391029,7.498525,7.357716,-3.622937,-8.203144,-9.726090,3.469527,-1.620500,8.030665,3.994137,1.292165,-2.811614,-0.855451,-2.441969,8.679406,4.031139,6.152700], dtype = "float32")#candidate|2499|(288,)|const|float32
call_2498 = func_1998_call(relay.reshape(const_2499.astype('float32'), [3, 8, 12]))
call_2500 = func_1998_call(relay.reshape(const_2499.astype('float32'), [3, 8, 12]))
output = relay.Tuple([call_2493,call_2498,const_2499,])
output2 = relay.Tuple([call_2494,call_2500,const_2499,])
func_2501 = relay.Function([], output)
mod['func_2501'] = func_2501
mod = relay.transform.InferType()(mod)
output = func_2501()
func_2502 = relay.Function([], output)
mutated_mod['func_2502'] = func_2502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_2508 = func_2461_call()
call_2509 = func_2461_call()
func_91_call = mod.get_global_var('func_91')
func_94_call = mutated_mod.get_global_var('func_94')
const_2524 = relay.const([5.559047,-7.064396,-8.648482,8.277658,8.957245,3.078258,8.542115,7.294825,5.356833,-6.238000,8.287655,-5.026759,5.872576,-3.700757,6.083201,-2.302596,2.279583,0.077670,2.393705,8.287184,-7.022901,9.255227,-1.522913,-7.139277,-0.443651,7.675062,8.578994,9.467333,2.565008,-9.301157,2.169451,-7.952529,2.950043,-7.155415,-9.429216,6.488760,7.848302,-2.967388,7.677583,9.860748,5.415735,6.269186,-3.897228,-8.275602,2.312495,5.029093,9.386358,1.783100,6.228512,6.225719,6.907701,7.293952,8.990808,-6.355690,-0.941265,-2.800735,7.943823,-7.255737,-5.515452,1.729043,3.940382,7.133422,-4.131822,7.572627,-7.099410,3.665369,5.144694,-8.584397,3.740589,4.844578,5.632730,7.535581,-2.979265,-0.877300,-3.477711,-4.087260,-6.877012,-8.034027,-7.096444,7.674301,-4.246062,4.520258,7.594756,-3.404535,-4.626091,-2.814206,-3.910402,-1.374755,0.805757,6.954917,9.217497,-5.118134,1.954441,-7.300702,-8.626618,7.807033,0.328419,6.530344,-2.500172,5.959744,2.963526,-0.210871,3.697196,-1.645110,-5.275230,5.323798,5.065436,7.023518,-6.403572,9.664729,0.835067,-1.498697,2.274891,2.485027,9.388454,-7.747676,-2.102686,-1.992097,-7.373859,6.424213,4.269325,-7.158875,-0.502154,6.781620,1.126046,5.908191,6.795285,7.549739,5.101294,1.770480,8.305362,-5.013748,-2.281732,-0.274505,7.694065,8.784547,-9.403193,-9.330962,-3.333409,6.398499,-3.745113,-2.795764,-7.629984,-8.652166,3.524833,5.045947,2.324624,-3.684324,-3.545568,-4.447277,-0.460127,-1.076688,4.459272,1.106988,9.228937,-4.232216,-2.438180,5.978922,-4.331129,-3.863887,1.163412,1.164407,6.311796,1.469484,-6.192008,-1.318674,3.051550,7.219111,4.435741,-8.655835,3.631234,-3.106651,-8.493897,8.762494,3.851958,-8.295760,0.688007,0.750285,3.283875,-8.524708,9.644394,6.098433,-9.443366,0.075895,9.331844,-0.874477,-0.966036,-4.960540,-4.401697,-7.340327,-7.841452,9.083717,-8.159347,-3.272136,2.682045,5.341108,3.819410,2.004415,9.113738,4.763850,1.125338,3.695734,-9.896875,-4.108906,1.022299,-8.750325,0.443089,9.054781,2.658899,9.960904,2.825956,1.420081,0.877822,-7.527238,7.298840,-7.110160,1.331923,8.744373,7.873269,-4.627587,-3.393109,-8.346027,-2.243271,9.993773,-2.774162,-3.327268,3.749711,-3.757636,8.065869,2.780896,5.458314,0.832156,8.161432,-7.936909,-0.209803,-7.796816,-5.238322,-2.334713,-2.186056,-7.072330,-1.649007,-9.471868,-5.985366,4.091870,7.875789,-4.300719,-2.920060,2.267140,-5.244343,-2.873151,1.070583,0.548826,-2.175281,-4.376106,0.191955,4.716690,-3.411890,0.627375,-3.431636,-0.879633,4.075085,-7.200712,-8.735211,-0.776321,-9.043941,0.421774,6.193462,9.098721,-6.947588,-1.415659,-8.469318,6.089645,-1.230618,1.707112,2.683232,-0.899706,-8.517929,-7.873495,7.083677,-0.114161,-2.991303,9.149924,-4.166043,8.433003,-8.432255,3.504439,2.779540,3.810407,4.395472,-6.003357,-1.724997,-4.738720,-0.959269,0.623051,4.648881,1.637821,5.606346,4.241464,6.608086,-8.356833,-8.462290,-0.195210,5.714960,5.427030,-8.828266,0.261617,4.617794,2.337480,7.887036,5.672119,-1.306550,-1.589053,7.879243,-9.650823,-1.918111,-0.919735,-6.457353,-3.016406,5.995274,-8.235851,1.445510,-3.414215,2.214734,-3.541783,5.491040,9.172973,-8.529582,3.467525,0.788464,-6.598805,2.416269,3.131744,3.523661,1.506333,3.230667,-9.225297,0.054688,4.798477,8.112574,2.041660,9.986210,-6.950668,-9.534920,4.670842,7.608756,1.379415,1.052344,-0.486425,-7.314418,9.601258,-1.944597,9.288853,-1.841693,-0.507625,-5.411687,-9.388134,2.662433,-1.361099,1.799806,2.756108,5.550350,3.033678,6.430482,-7.637687,2.571625,-3.333007,5.666003,4.381617,-2.189436,2.111088,-4.794419,6.747752,6.422293,8.223660,2.064578,1.360032,-2.202363,7.255074,0.566072,0.670548,0.741710,-2.140771,8.574977,9.364470,7.209668,3.923146,-8.420248,0.317741,-9.660496,-6.193443,-8.184283,-3.261936,-4.928869,-9.919462,1.201878,-5.415311,6.553949,-9.319281,0.460279,0.727150,-0.067669,-2.810470,3.972674,-8.558272,-6.551563,2.207778,7.681155,1.816789,-8.008836,1.849205,-7.630381,-3.960103,-6.357113,-7.486179,-3.126387,-1.150076,-7.217267,-0.313277,5.605723,3.963657,0.669191,-4.451303,0.578356,0.155588,1.086854,8.292432,-3.232583,-1.425596,-8.547030,-9.544659,-5.787203,-2.755365,0.785907,-2.618842,7.694228,5.497153,-1.778066,1.177267,9.977062,2.582520,5.849695,-2.615629,8.746513,-5.392484,-3.678323,-7.932892,-0.039552,3.723459,9.503798,-6.261336,-0.014241,-9.226320,8.231883,-2.880561,-3.956723,6.280827,-8.833156,8.438900,-0.360496,-6.598465,1.362480,0.262726,5.039430,4.237414,-5.104197,3.496525,6.588171,-2.430379,-6.161519,-9.833226,-3.275521,-2.535150,4.371873,-2.149220,-1.940245,-9.010382,-3.767269,2.353752,7.161834,-9.437422,-1.476743,-3.197141,5.396089,-6.043629,9.091764,-0.960366,-5.724227,-8.719087,2.220037,-2.516763,0.335231,5.802594,-5.625538,3.654720,1.950838,-3.338720,-7.327688,-3.174835,7.433320,9.912715,8.192830,-8.425280,-2.912483,5.233169,-2.994073,9.872461,6.139780,4.855574,2.415917,3.414742,-4.619235,-7.828147,-1.772223,8.884912,1.361444,-2.936822,-2.833087,2.086216,6.902553,-2.766592,-2.545908,-8.738247,-7.603487,1.722937,-5.432557,1.627831,-5.821007,6.813294,-0.055677,-9.636499,9.902558,-7.744613,-2.936041,2.378855,-2.798833,7.374115,4.569691,-4.228524,6.115159,-4.550836,-3.494144,-6.292644,5.992234,1.444029,-3.343254,-4.722534,-8.753759,-4.261660,-5.245509,0.303422,6.651966,0.517849,-7.409096,6.751215,3.367875,3.509500,4.802735,4.907368,-6.941135,-2.695256,-4.492901,-0.528307,8.941410,6.861668,-4.596947,-6.730081,6.785115,2.818594,-3.624438,3.724190,-7.846032,4.272142,1.648897,-5.114936,-7.936406,-9.895288,6.660095,8.122853,6.098501,-7.798847,2.051324,-7.003517,-7.731291,-1.889786,-0.760704,9.273336,7.877677,-3.824193,5.937084,-3.186237,5.404283,-6.618562,1.415636,7.591272,7.869413,4.586293,-9.104286,7.209797,8.666849,6.199996,-6.866343,-5.410807,-1.007131,-1.356012,7.659588,6.799655,5.501167,-4.919256,4.598627,-5.238501,4.586543,-6.180282,8.132032,0.014472,9.567077,-6.987062,0.154375,2.291791,5.974497,2.002224,-1.564796,8.694538,-7.021506,3.751078,8.559582,-8.381386,5.777568,-3.891979,7.437768,0.165689,4.959558,-0.759663,-0.139290,-1.418156,3.830240,-6.727004,-8.587055,9.144031,8.525384,-7.532560,-6.248868,-1.640568,3.660459,-5.459983,-9.807989,-1.791235,0.188596,-8.082853,-2.500592,8.139377,-9.169842,-3.105601,1.424307,2.221964,-0.708343,7.692657,7.828242,-3.247159,6.541774,2.942253,-3.121766,8.015913,-3.055245,3.715575,-6.159777,-0.123002,-7.763455,4.401172,-7.344664,4.524535,-9.672650,-9.799863,-8.408858,7.250552,5.802834,8.584594,-8.679966,-9.323862,-5.464518,0.803288,-1.105358,1.906690,-9.670626,3.988360,6.494416,4.482637,6.673394,8.083309,-0.846209,1.180063,5.813199,2.386261,7.314813,-9.654516,4.754219,-2.248810,7.276596,8.923147,-6.105427,6.158413,9.547222,-3.265518,-4.045492,-3.146784,-0.710475,-0.495945,-0.659416,0.191492,2.754266,1.686906,9.721905,5.393037,6.775547,7.662008,3.521727,7.214801,5.792253,7.563883,-5.841273,0.084054,-2.799246,-0.773299,0.087388,-9.562934,-7.368119,-6.412690,-8.867599,-0.511002,-6.755546,8.907250,-1.066206,-7.712040,-7.310879,4.616255,9.111229,5.848840,4.448567,-4.611474,5.199501,3.137806,-6.698134,-8.501127,1.608850,-5.053276,-9.087593,3.607700,-7.830406,-1.580576,-3.543157,1.117189,-2.165326,3.356180,2.313399,1.883649,-5.421763,-7.591938,-7.630050,4.897062,7.752088,9.801298,-5.462639,5.155310,-0.979756,2.461561,9.213612,-3.872160,-3.884802,5.299043,5.378298,-4.738639,-4.355477,-6.125702,6.343469,-9.150264,7.782529,-3.623331,8.673463,-5.597297,-8.779453,-5.793834,2.972144,5.129480,-4.192008,6.514173,1.349881,4.253669,-7.006848,-5.497979,-8.185748,-5.542304,-6.203730,5.580574,-2.356160,6.475528,2.032679,9.389484,-9.512813,-6.763075,7.868208,-7.815763,-2.530531,-3.416403,5.471029,-1.945452,-7.315272,3.213096,-5.020022,-1.366515,2.810056,3.265792,9.028109,8.402774,9.210113,-4.108634,7.335817,-7.031340,-1.913613,-6.721343,8.516868,7.660999,4.798497,8.186067,2.693962,4.796483,7.158274,-7.501444,0.750042,8.914909,2.885330,0.478817,-6.277137,-9.368940,3.428833,1.017629,-1.060297,-9.978819,8.166767,6.476158,6.296349,4.553217,7.979687,5.218902,4.907038,9.227338,-8.054147,1.814557,-5.469517,9.824930,-8.213197,9.104116,-0.836108,9.872795,0.193073,-6.832695,6.529288,5.306790,6.231297,2.959004,3.536218,-9.152397,6.189135,8.136217,3.549493,8.758205,8.185663,-9.090272,-0.888420,1.844098,-0.569835,-8.318728,-4.443190,-0.455323,-1.782645,-2.325032,6.811429,2.764957,3.086115,-7.046232,-3.127141,-3.234212,-7.746938,5.107612,-7.262411,-4.145311,-3.820444,-0.265287,0.949267,6.702750,-4.717165,5.086552,-7.143098,5.650640,4.560631,-0.988274,2.919334,7.220837,-7.035663,2.512146,-5.302949,6.192115,-6.679565,9.190071,9.883900,-8.033739,-8.404737,0.181856,-4.452127,-8.014052,-2.063223,4.819351,-8.363367,-3.168978,0.710622,9.316400,3.720508,6.592915,7.179630,1.811739,2.117445,-9.784555,-1.217481,-4.015366,-1.385105,-9.259036,8.868917,7.894818,8.972360,-9.768754,8.060937,-3.252118,8.685218,-1.699530,-5.341117,7.005911,9.814102,7.194274,6.846932,1.292392,5.441151,-5.727703,5.470379,-5.103441,2.287796,-5.840363,-8.404584,-2.946865,-2.833025,-1.120879,-9.728356,-3.085578,-8.769817,8.769456,9.444818,5.588452,1.933980,7.920470,8.081671,3.550062,4.427164,9.501797,-1.598358,0.491475,1.783143,6.740088,9.939190,2.572702,2.062757,2.499376,7.426595,0.481970,-8.234286,-4.338769,-1.219612,5.856773,9.512113,-4.255759,-9.386567,-2.267079,0.418523,8.594889,6.115540,-4.278074,-8.547057,5.382250,0.494252,-6.242323,9.007042,1.143424,-3.263545,9.401215,-2.559048,9.144439,8.203466,-7.497751,3.663020,4.442254,-0.041644,1.269196,6.819265,9.503828,-8.972721,2.960040,-2.077028,4.991373,0.749114,-2.100833,-2.588326,-0.784456,2.638261,0.563744,-6.056563,1.400263,-3.558720,9.715167,1.243654,-8.418341,-7.133860,1.622621,2.782372,0.443512,-8.322917,-3.351946,5.072894,-3.483902,5.507032,4.498334,4.417602,-5.416555,-4.662489,0.152571,-5.298882,6.514848,6.928384,7.091348,0.989742,3.493253,-7.108101,2.888062,-3.015828,-2.712591,3.411652,-1.276236,-1.154947,-2.924050,-5.738167,-8.416876,-6.283978,-5.516907,2.245658,-1.601023,-6.873672,-4.922577,2.449064,3.883548,2.258277,3.514444,1.454801,2.719068,-5.855710,-4.164588,-4.459616,-6.280294,-6.310347,-6.689212,-2.027322,8.041120,3.863652,-9.137001,0.381728,-3.335934,3.040971,8.569718,2.998643,9.697259,-0.249925,6.942327,-1.768484,2.471404,-2.713813,-3.639864,-2.175630,4.576469,3.592941,-7.536700,0.412901,-6.026762,-0.697383,-4.641407,-0.196554,-4.160715,3.821386,1.338304,4.390179,0.423276,2.452262,-1.268809,5.881572,7.823628,0.823211,5.869727,-4.149520,-5.257742,6.541980,5.401092,-0.696286,-9.060193,6.133198,3.273867,8.912930,-5.372673,5.079023,-1.114614,-9.994024,3.633886,-4.024871,1.274261,-1.050245,4.865196,-5.043537,-8.593935,-1.280686,-6.046603,-9.548456,-9.141195,-3.259225,-1.144247,-4.906288,-7.078850,-8.138776,-6.256005,-8.609689,-1.785567,3.378312,-9.244301,-4.260230,-2.477589,-5.934972,-9.417999,6.964877,-8.011954,0.928089,9.342053,7.295973,-4.719041,0.174726,-7.567266,-5.841352,6.202105,5.161449,5.600657,-9.445478,-0.279026,1.814837,5.687716,-3.908971,-3.339265,9.890351,7.853970,-1.573032,-8.387711,-1.802371,8.547300,5.122760,0.282579,1.457728,-6.702643,-8.762968,-7.721605,2.421287,-7.694991,7.298133,8.538658,-8.784697,2.126341,0.508402,6.139641,3.996085,-8.980808,8.004429,8.695983,5.865107,-9.836895,-7.108186,2.122358,-3.652640,9.083998,-4.247747,-4.442936,0.434305,5.312639,-9.726516,8.041991,-4.902643,-0.284224,3.632891,-0.491853,-4.290539,-0.708643,4.287923,-5.014567,-7.634347,1.859425,7.258133,9.126541,6.792739,0.976915,4.696860,7.909705,-6.799394,9.533020,8.100654,-6.485369,-7.697009,4.056762,-1.608182,-2.090215,7.333349,-8.847430,3.390937,-6.960314,-8.904600,-0.143036,-5.516264,6.810820,-4.024613,-2.715426,-3.415235,5.377366,6.735610,-9.984706,-4.019464,-1.757925,-9.070363,-4.732263,6.107486,5.083121,-9.644710,1.248102,9.969640,-1.100089,-1.980043,-9.195588,4.672008,6.344492,-9.970829,4.602051,-9.694728,-7.352650,-8.696143,5.768758,4.926481,5.720583,-4.548656,-2.676364,-7.363859,4.941919,5.422495,0.228703,3.169554,-3.708314,7.384180,4.559060,4.335680,-0.286460,-2.660634,7.991641,-3.561147,-1.898081,-1.444694,9.775480,8.706763,6.727352,-9.647850,7.152388,5.745866,9.559820,8.040925,3.971044,-5.132541,-0.368870,8.292385,9.460970,1.761162,-1.339391,-7.127663,-2.122239,1.831012,9.745603,-5.997229,0.118205,-7.635175,-0.709619,8.649912,-0.528070,-8.560013,5.247800,4.479061,5.070895,-1.047422,-4.285791,7.020413,-4.290926,-2.048782,-3.804754,-8.669363,-6.871850,-1.363600,1.474988,-2.628320,-0.952701,-1.062312,-8.299762,-4.416062,-0.725590,-3.341272,9.663615,9.900202,-9.656010,0.761303,1.484975,-4.613138,-6.142882,-0.167835,8.588437,-5.762169,3.344937,0.216309,-9.833595,-7.943148,-0.794072,3.503482,-0.504479,5.522087,-7.701636,-3.025665,-1.880660,2.805772,9.155964,-0.944190,8.983571,-8.859484,-4.757025,-4.680555,8.384204,2.428315,8.612195,-7.509043,-7.265242,-1.163355,-8.952715,-8.495520,-3.470450,-2.621771,2.027549,-5.626623,6.199445,-4.767098,-7.648169,-4.800869,6.348286,4.408232,-4.918446,-7.646180,3.215462,1.760970,5.564170,-7.802555,3.919163,-5.470723,-4.429871,8.076584,0.464500,5.932802,1.152928,-2.612130,2.526633,2.078239,8.786583,-2.392774,3.623018,-0.541618,0.384647,-0.717913,0.550945,-4.128998,4.979919,2.264250,9.507326,-7.491036,-4.999425,2.684469,-8.791060,2.748664,-9.814218,-5.393308,8.029879,1.234787,8.042886,-3.169859,-7.922659,-8.545578,-5.002513,-3.121538,-6.492500,-3.218485,2.747461,2.376657,6.207222,2.322792,-2.918179,9.710113,2.516230,8.198035,-3.950040,5.680137,-6.374793,-6.758159,-0.508515,-0.463148,7.297258,7.825809,-4.489010,-0.011742,-9.070583,7.724118,5.320345,-7.559935,0.225938,1.767380,6.003790,-6.199349,3.517816,9.995616,-1.138874,-2.018876,-7.767218,-9.292752,-3.745214,-9.707648,8.499204,-1.554374,-3.966337,1.863072,-9.324410,3.572282,9.449635,1.416683,-3.376772,-1.979034,-1.048880,-3.564932,8.709863,3.024853,6.178903,-0.538486,7.055533,4.243296,0.589082,-2.689599,-8.491291,-5.730369,4.577885,-6.417285,-5.459011,-7.756771,0.179502,5.901728,-6.056144,3.899119,9.476254,-8.207358,-1.711865,-2.582410,-3.487574,2.245397,6.068384,-0.525977,8.453580,-6.959645,-4.496543,-9.183723,-5.475135,-3.753629,-4.195734,-8.366670,0.455735,-3.161759,0.094860,8.546418,8.757647,-0.168577,-8.284497,-5.164626,8.357260,3.040811,7.100470,2.773606,-9.747327,-7.080385,3.819758,-3.912595,6.169781,-9.867835,8.480450,-9.980499,-8.130528,9.892068,-4.959875,-7.833989,4.513287,4.386597,0.611497,-5.755709,-5.048779,-9.531735,7.882297,-6.495026,-8.122508,4.122541,-6.315074,-3.071779,-3.542377,-5.504230,0.557444,-2.492607,-8.433336,-4.867203,8.463348,6.667562,9.761256,5.218364,-4.069234,-0.599387,0.973687,1.655957,9.151480,-8.993794,0.198788,-4.448489,-3.500050,7.625758,-4.243366,-0.666140,-2.829429,3.622315,-5.886343,5.949606,-3.630623,8.752340,6.723474,-6.089649,-6.738942,8.310652,4.954911,0.873201,-0.678825,-9.245110,-5.992605,-5.383314,6.875437,-8.491511,3.527237,-1.454795,4.911133,8.102744,-8.412693,-4.595817,-6.614045,0.928023,9.281122,4.355022,5.585729,9.233013,1.722609,7.096801,7.720073,-2.099000,8.211038,6.112362,-8.208194,5.897026,-9.401791,0.189285,3.155355,-8.293891,5.516343,7.730690,5.114911,-4.421252,-6.644834,1.737559,-8.394034,-6.343557,9.007020,-2.568564,-3.603520,-5.202691,3.761185,-0.713537,-4.293176,-9.742796,-0.950674,6.813970,-6.991190,-9.403212,2.415616,-2.329598,1.060806,1.880066,-0.937733,-4.440707,0.886434,5.661373,7.666277,-7.710054,-7.255011,9.210997,-8.163969,4.549243,9.289324,7.675152,1.782974,-6.180633,3.886198,5.063626,0.335493,-9.287148,3.727882,-2.113355,3.770742,-6.331058,2.121387,6.106662,-2.182232,-6.666822,-5.396584,-8.551413,3.678998,7.240601,-0.048699,9.222410,-5.593569,1.004777,4.125933,-4.312199,-6.052162,5.154471,9.718135,2.998599,7.344848,3.871416,8.219282,3.403549,-3.062540,8.951864,-1.538912,-1.742832,8.587646,-5.327466,5.580564,0.574777,0.858124,6.395955,5.130645,5.219847,-0.881700,9.084359,-6.734829,7.784642,3.692634,-9.226178,8.906475,-2.441240,-3.747467,3.660562,-3.090562,5.078261,7.419200,-7.053357,9.911690], dtype = "float32")#candidate|2524|(1680,)|const|float32
call_2523 = relay.TupleGetItem(func_91_call(relay.reshape(const_2524.astype('float32'), [15, 16, 7])), 0)
call_2525 = relay.TupleGetItem(func_94_call(relay.reshape(const_2524.astype('float32'), [15, 16, 7])), 0)
uop_2541 = relay.sinh(call_2523.astype('float64')) # shape=(15, 16, 7)
uop_2543 = relay.sinh(call_2525.astype('float64')) # shape=(15, 16, 7)
bop_2546 = relay.subtract(call_2523.astype('int16'), relay.reshape(uop_2541.astype('int16'), relay.shape_of(call_2523))) # shape=(15, 16, 7)
bop_2549 = relay.subtract(call_2525.astype('int16'), relay.reshape(uop_2543.astype('int16'), relay.shape_of(call_2525))) # shape=(15, 16, 7)
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
var_2552 = relay.var("var_2552", dtype = "uint32", shape = (630,))#candidate|2552|(630,)|var|uint32
call_2551 = relay.TupleGetItem(func_484_call(relay.reshape(var_2552.astype('uint32'), [14, 9, 5])), 2)
call_2553 = relay.TupleGetItem(func_487_call(relay.reshape(var_2552.astype('uint32'), [14, 9, 5])), 2)
output = relay.Tuple([call_2508,const_2524,bop_2546,call_2551,var_2552,])
output2 = relay.Tuple([call_2509,const_2524,bop_2549,call_2553,var_2552,])
func_2559 = relay.Function([var_2552,], output)
mod['func_2559'] = func_2559
mod = relay.transform.InferType()(mod)
var_2560 = relay.var("var_2560", dtype = "uint32", shape = (630,))#candidate|2560|(630,)|var|uint32
output = func_2559(var_2560)
func_2561 = relay.Function([var_2560], output)
mutated_mod['func_2561'] = func_2561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2588 = relay.var("var_2588", dtype = "int32", shape = (3, 1, 11))#candidate|2588|(3, 1, 11)|var|int32
var_2589 = relay.var("var_2589", dtype = "int32", shape = (3, 8, 11))#candidate|2589|(3, 8, 11)|var|int32
bop_2590 = relay.less(var_2588.astype('bool'), var_2589.astype('bool')) # shape=(3, 8, 11)
output = bop_2590
output2 = bop_2590
func_2596 = relay.Function([var_2588,var_2589,], output)
mod['func_2596'] = func_2596
mod = relay.transform.InferType()(mod)
var_2597 = relay.var("var_2597", dtype = "int32", shape = (3, 1, 11))#candidate|2597|(3, 1, 11)|var|int32
var_2598 = relay.var("var_2598", dtype = "int32", shape = (3, 8, 11))#candidate|2598|(3, 8, 11)|var|int32
output = func_2596(var_2597,var_2598,)
func_2599 = relay.Function([var_2597,var_2598,], output)
mutated_mod['func_2599'] = func_2599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_2640 = func_2461_call()
call_2641 = func_2461_call()
output = call_2640
output2 = call_2641
func_2652 = relay.Function([], output)
mod['func_2652'] = func_2652
mod = relay.transform.InferType()(mod)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mutated_mod.get_global_var('func_2652')
call_2653 = func_2652_call()
output = call_2653
func_2654 = relay.Function([], output)
mutated_mod['func_2654'] = func_2654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_2674 = relay.TupleGetItem(func_2501_call(), 1)
call_2675 = relay.TupleGetItem(func_2502_call(), 1)
output = call_2674
output2 = call_2675
func_2686 = relay.Function([], output)
mod['func_2686'] = func_2686
mod = relay.transform.InferType()(mod)
output = func_2686()
func_2687 = relay.Function([], output)
mutated_mod['func_2687'] = func_2687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2691 = relay.var("var_2691", dtype = "int64", shape = (4, 16, 5))#candidate|2691|(4, 16, 5)|var|int64
var_2692 = relay.var("var_2692", dtype = "int64", shape = (4, 16, 5))#candidate|2692|(4, 16, 5)|var|int64
bop_2693 = relay.logical_xor(var_2691.astype('int64'), relay.reshape(var_2692.astype('int64'), relay.shape_of(var_2691))) # shape=(4, 16, 5)
uop_2702 = relay.cos(bop_2693.astype('float64')) # shape=(4, 16, 5)
func_1998_call = mod.get_global_var('func_1998')
func_2000_call = mutated_mod.get_global_var('func_2000')
const_2710 = relay.const([2.379620,3.883183,-1.207759,-6.846720,4.397161,-7.678337,-0.433315,3.724502,1.319297,-7.175894,-2.271057,-3.332757,2.801629,-7.179489,9.507869,9.054091,3.138338,3.873600,5.671171,4.502539,4.759185,5.685106,-6.345810,2.128543,-6.096941,8.443704,6.514952,9.389406,-4.579234,5.554549,-8.655590,3.199860,8.674451,7.141947,-5.704795,9.041615,-8.276049,1.910346,-5.004419,-2.230669,-9.052199,2.036310,4.217564,2.555014,-3.780551,7.700109,9.628177,-8.912873,2.721984,-8.592555,-4.303290,8.478578,-5.938839,3.980706,-5.351768,0.987259,9.223005,-5.180604,-6.287072,6.435842,6.231484,3.451726,3.545188,3.308696,4.930972,-6.074019,-3.413462,-0.078116,5.543154,1.187257,-3.124810,-4.078064,6.882140,-8.709036,-1.659292,5.564615,0.461417,0.966869,-9.671557,2.649432,-9.843221,-5.172659,-0.932193,9.111779,-3.077175,0.580930,2.696607,5.762164,-3.205641,-4.549476,3.523003,-1.343323,-3.358902,8.111585,1.362316,-4.934119,-6.366711,-9.876337,-5.393050,-2.695213,-8.329115,0.899421,-8.835334,-3.638949,-3.982462,8.579016,-5.781279,-9.470876,2.903819,-8.420574,5.096297,-5.705082,4.846353,-8.347990,-0.051444,-2.085695,-8.498212,8.536016,-3.518056,6.083418,-3.710758,-5.532232,1.331955,-9.272719,-0.069603,7.458122,2.685534,-7.240277,-2.865725,-1.504487,1.504243,2.368773,-1.179377,-1.112851,-5.969686,-9.706181,5.395155,-3.774339,7.569008,5.529270,5.985678,5.813300,4.748943,6.023552,-5.026889,-3.226794,-2.540676,5.925903,-4.700366,-5.752010,-9.271861,-4.258797,9.340615,-6.322969,1.454313,7.844511,-8.014910,2.987373,-6.177343,4.660795,7.208073,-3.019588,4.570537,-5.719300,-7.469367,-6.231184,0.442651,-3.700460,3.362014,-6.790291,-8.478145,3.039161,-7.595412,-3.549908,0.878564,-1.415649,-8.851083,3.402113,-8.821851,1.456030,-7.835835,9.134874,-0.849318,-6.388296,-9.756868,-3.677542,-0.125384,0.697261,9.910346,8.299588,6.561280,7.164512,2.821508,4.853422,-1.142592,-2.997791,8.685626,3.990352,0.536177,9.292335,-5.131255,-0.703421,-2.702884,9.634925,-0.307863,-0.046183,-2.741936,5.947359,-3.115060,-3.897557,3.751842,6.046457,-9.564628,8.300601,8.996673,-6.138463,-7.642104,-6.451355,-1.099250,-5.552001,8.665845,9.102940,-9.950997,7.317869,7.168836,-6.986456,-1.704263,2.138348,-7.632367,-2.334599,-9.802997,4.797388,8.914457,8.385693,8.137172,-5.410506,-5.811522,9.227371,-1.800578,-4.910475,-0.395563,5.505212,-9.762145,7.325913,1.084974,-2.981900,-9.409202,-3.814038,-4.467383,-9.509960,-6.529901,-8.154469,-9.235347,1.753155,-6.195572,-1.768847,-6.126964,9.457393,8.143262,9.302497,-9.928068,-5.421246,8.947083,-8.095603,-7.436280,-0.224744,-6.977291,0.396280,-6.170164,1.078332,-0.286695,9.021391,9.626707,-3.992680,7.234317,9.483564,0.062282,0.885324,0.754269,-3.143826,-8.528103,-3.671769,9.735836,2.935093,-9.146590,-0.453183,-5.888794,-8.473331], dtype = "float32")#candidate|2710|(288,)|const|float32
call_2709 = func_1998_call(relay.reshape(const_2710.astype('float32'), [3, 8, 12]))
call_2711 = func_1998_call(relay.reshape(const_2710.astype('float32'), [3, 8, 12]))
output = relay.Tuple([uop_2702,call_2709,const_2710,])
output2 = relay.Tuple([uop_2702,call_2711,const_2710,])
func_2715 = relay.Function([var_2691,var_2692,], output)
mod['func_2715'] = func_2715
mod = relay.transform.InferType()(mod)
mutated_mod['func_2715'] = func_2715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mutated_mod.get_global_var('func_2715')
var_2717 = relay.var("var_2717", dtype = "int64", shape = (4, 16, 5))#candidate|2717|(4, 16, 5)|var|int64
var_2718 = relay.var("var_2718", dtype = "int64", shape = (4, 16, 5))#candidate|2718|(4, 16, 5)|var|int64
call_2716 = func_2715_call(var_2717,var_2718,)
output = call_2716
func_2719 = relay.Function([var_2717,var_2718,], output)
mutated_mod['func_2719'] = func_2719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_2723 = relay.TupleGetItem(func_2501_call(), 0)
call_2724 = relay.TupleGetItem(func_2502_call(), 0)
func_2686_call = mod.get_global_var('func_2686')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_2741 = func_2686_call()
call_2742 = func_2686_call()
func_2715_call = mod.get_global_var('func_2715')
func_2719_call = mutated_mod.get_global_var('func_2719')
const_2744 = relay.const([-5,2,9,3,2,-6,-3,-6,-5,10,1,-10,8,-10,-8,-5,-5,10,-10,8,1,9,-4,6,-1,5,-2,-8,2,9,9,4,-3,-8,7,7,1,3,10,5,6,5,4,-2,3,8,-7,4,9,3,1,6,-5,-9,8,10,3,6,1,4,9,-4,4,-4,-3,9,-6,-7,-3,10,10,7,-5,3,-1,10,8,-6,-3,5,9,1,10,10,4,-7,8,-10,-9,9,-9,-9,4,-1,-8,-4,-2,-4,-4,-6,-2,5,-6,-5,5,4,4,2,1,-4,10,5,6,2,2,8,-10,-6,-7,1,6,7,1,7,-3,-10,-2,2,-4,7,4,-2,8,1,10,9,-7,5,6,-1,-4,1,-6,1,9,6,3,6,-5,-9,8,8,-6,5,-6,10,-7,-3,4,-3,-3,-4,4,-8,-8,-1,-6,-4,-3,-4,-7,-8,-7,-7,6,-6,8,5,-2,2,-3,6,3,2,1,6,2,4,4,2,3,1,8,3,3,9,8,5,-7,9,3,-8,9,6,-3,-5,6,8,-4,-5,-8,-2,2,-10,-4,-9,-6,4,8,9,10,-8,2,2,8,-4,4,5,-3,8,-7,4,5,7,10,7,-1,-8,-2,2,10,8,-4,-3,-9,-4,-8,-8,-6,6,-4,-6,9,-10,6,1,-10,1,4,-10,-5,-9,-3,-5,3,-5,-4,2,4,-4,-5,-6,6,8,-1,2,3,8,10,4,-5,-2,9,2,-7,-6,3,-7,9,-8,-4,-8,-2,2,8,-5,5,3,3,-1,-2,-3,9,4,7,-10,-10,7,-5,-4,-7,7,8,7,-5,-2,-3,2,6,10], dtype = "int64")#candidate|2744|(320,)|const|int64
call_2743 = relay.TupleGetItem(func_2715_call(relay.reshape(const_2744.astype('int64'), [4, 16, 5]), relay.reshape(const_2744.astype('int64'), [4, 16, 5]), ), 1)
call_2745 = relay.TupleGetItem(func_2719_call(relay.reshape(const_2744.astype('int64'), [4, 16, 5]), relay.reshape(const_2744.astype('int64'), [4, 16, 5]), ), 1)
output = relay.Tuple([call_2723,call_2741,call_2743,const_2744,])
output2 = relay.Tuple([call_2724,call_2742,call_2745,const_2744,])
func_2758 = relay.Function([], output)
mod['func_2758'] = func_2758
mod = relay.transform.InferType()(mod)
mutated_mod['func_2758'] = func_2758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mutated_mod.get_global_var('func_2758')
call_2759 = func_2758_call()
output = call_2759
func_2760 = relay.Function([], output)
mutated_mod['func_2760'] = func_2760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_2805 = func_2461_call()
call_2806 = func_2461_call()
func_2596_call = mod.get_global_var('func_2596')
func_2599_call = mutated_mod.get_global_var('func_2599')
var_2813 = relay.var("var_2813", dtype = "int32", shape = (33,))#candidate|2813|(33,)|var|int32
var_2814 = relay.var("var_2814", dtype = "int32", shape = (264,))#candidate|2814|(264,)|var|int32
call_2812 = func_2596_call(relay.reshape(var_2813.astype('int32'), [3, 1, 11]), relay.reshape(var_2814.astype('int32'), [3, 8, 11]), )
call_2815 = func_2596_call(relay.reshape(var_2813.astype('int32'), [3, 1, 11]), relay.reshape(var_2814.astype('int32'), [3, 8, 11]), )
output = relay.Tuple([call_2805,call_2812,var_2813,var_2814,])
output2 = relay.Tuple([call_2806,call_2815,var_2813,var_2814,])
func_2835 = relay.Function([var_2813,var_2814,], output)
mod['func_2835'] = func_2835
mod = relay.transform.InferType()(mod)
var_2836 = relay.var("var_2836", dtype = "int32", shape = (33,))#candidate|2836|(33,)|var|int32
var_2837 = relay.var("var_2837", dtype = "int32", shape = (264,))#candidate|2837|(264,)|var|int32
output = func_2835(var_2836,var_2837,)
func_2838 = relay.Function([var_2836,var_2837,], output)
mutated_mod['func_2838'] = func_2838
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2858 = relay.const([[[2.656829,4.942413,-0.724123,0.537981,8.660341,-8.179297,-3.537376,2.662941,0.481722,5.063992,-9.717296,-0.013698,-5.836070,9.546377,4.329987],[6.297327,-7.634290,-9.768283,4.409069,-5.926065,5.699465,7.537381,-1.003166,1.988414,1.947306,8.376730,-8.030348,-8.899330,9.578313,-7.259838],[-0.571754,7.268790,-7.034252,-4.274319,-0.830410,-1.456369,7.878979,9.276459,2.802914,6.352636,2.816845,-2.488291,-3.857535,-9.227250,-1.877341]]], dtype = "float64")#candidate|2858|(1, 3, 15)|const|float64
uop_2859 = relay.atanh(const_2858.astype('float64')) # shape=(1, 3, 15)
uop_2885 = relay.sqrt(const_2858.astype('float64')) # shape=(1, 3, 15)
var_2890 = relay.var("var_2890", dtype = "float64", shape = (8, 3, 15))#candidate|2890|(8, 3, 15)|var|float64
bop_2891 = relay.logical_and(const_2858.astype('bool'), var_2890.astype('bool')) # shape=(8, 3, 15)
output = relay.Tuple([uop_2859,uop_2885,bop_2891,])
output2 = relay.Tuple([uop_2859,uop_2885,bop_2891,])
func_2897 = relay.Function([var_2890,], output)
mod['func_2897'] = func_2897
mod = relay.transform.InferType()(mod)
mutated_mod['func_2897'] = func_2897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2898 = relay.var("var_2898", dtype = "float64", shape = (8, 3, 15))#candidate|2898|(8, 3, 15)|var|float64
func_2897_call = mutated_mod.get_global_var('func_2897')
call_2899 = func_2897_call(var_2898)
output = call_2899
func_2900 = relay.Function([var_2898], output)
mutated_mod['func_2900'] = func_2900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_2905 = func_2686_call()
call_2906 = func_2686_call()
output = call_2905
output2 = call_2906
func_2919 = relay.Function([], output)
mod['func_2919'] = func_2919
mod = relay.transform.InferType()(mod)
mutated_mod['func_2919'] = func_2919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2919_call = mutated_mod.get_global_var('func_2919')
call_2920 = func_2919_call()
output = call_2920
func_2921 = relay.Function([], output)
mutated_mod['func_2921'] = func_2921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_2974 = relay.TupleGetItem(func_2501_call(), 1)
call_2975 = relay.TupleGetItem(func_2502_call(), 1)
func_2686_call = mod.get_global_var('func_2686')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_2976 = func_2686_call()
call_2977 = func_2686_call()
output = relay.Tuple([call_2974,call_2976,])
output2 = relay.Tuple([call_2975,call_2977,])
func_2981 = relay.Function([], output)
mod['func_2981'] = func_2981
mod = relay.transform.InferType()(mod)
mutated_mod['func_2981'] = func_2981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mutated_mod.get_global_var('func_2981')
call_2982 = func_2981_call()
output = call_2982
func_2983 = relay.Function([], output)
mutated_mod['func_2983'] = func_2983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_3070 = func_2461_call()
call_3071 = func_2461_call()
output = call_3070
output2 = call_3071
func_3074 = relay.Function([], output)
mod['func_3074'] = func_3074
mod = relay.transform.InferType()(mod)
mutated_mod['func_3074'] = func_3074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mutated_mod.get_global_var('func_3074')
call_3075 = func_3074_call()
output = call_3075
func_3076 = relay.Function([], output)
mutated_mod['func_3076'] = func_3076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_3130 = func_2461_call()
call_3131 = func_2461_call()
func_2266_call = mod.get_global_var('func_2266')
func_2269_call = mutated_mod.get_global_var('func_2269')
const_3138 = relay.const([-9.195619,6.107311,-6.128826,0.512628,2.701088,-8.316439,-5.866389,-1.955924,0.500360,9.363474,-3.617812,-8.242258,-9.938655,-7.437185,-1.425068,-0.455037,8.998197,8.014238,-8.804577,7.920521,-7.090722,-0.445700,0.245290,-4.788431,5.051586,-0.002648,0.868242,2.808501,0.369035,7.774844,6.819901,8.860316,0.689002,-8.326774,5.172488,7.494239,-0.064578,-7.142512,-1.824370,-0.147678,-5.335152,0.922129,2.496453,2.365366,-6.099673,-9.126435,-7.355700,-5.077738,6.325491,-0.530537,-8.845611,-1.918926,5.865208,3.701758,1.312910,5.424368,-7.591940,9.185451,2.792519,-9.102605,2.609445,2.102627,-1.512675,-6.149979,-2.078343,6.498829,-3.858188,9.183350,-1.128243,-1.500209,-0.793332,-7.225103,-5.504365,-7.694835,-0.882246,-7.153614,-2.097568,-3.546306,6.471660,-3.232627,9.942753,0.809604,4.156049,4.356043,3.306738,9.387169,3.090776,-6.680650,6.602295,9.572467,5.040453,1.229740,5.958124,0.159995,-2.972548,-4.176454,0.267933,-6.117610,4.822045,-2.275020,7.988747,-5.877296,0.037434,-0.336322,-6.487330,6.981406,1.953049,8.538636,-9.259534,-0.393108,-1.719269,-5.947112,-5.023087,-4.409845,-4.817364,-6.741765,-7.111523,-9.858335,1.706812,-8.556779,-2.555891,2.791756,-8.208975,-8.722570,1.551350,-2.157941,1.391938,8.279268,6.998676,6.558010,8.104529,6.581484,3.708624,2.421740,-2.943938,-2.934860,9.603733,0.267405,-3.429878,-4.660250,-7.279981,7.895205,0.292633,4.120486,-3.660095,-5.123105,-4.312364,8.938900,5.480391,-8.729897,-3.089937,-1.934236,-0.184986,6.947963,1.134418,4.482421,-9.180320,-8.310453,1.276669,-0.764456,-2.894969,4.575686,-1.387095,-4.769643,-6.976731,-5.576735,8.182208,-4.453930,-4.585091,-2.230768,-3.854657,8.643338,-4.743981,-3.967555,8.706226,2.737711,-6.999885,-7.236452,3.824083,-4.065025,9.498844,-1.705806,-2.967449,-3.338894,9.031802,-2.752607,-3.488573,-1.432623,5.841811,1.442941,-5.650934,8.069131,5.486019,5.186356,-1.629895,-6.560947,-1.232285,2.266948,-9.792033,1.878817,-1.743328,4.345737,8.827231,-2.619753,-1.037151,2.921529,-5.674610,4.701158,-4.312817,2.191942,5.545552,-4.799342,-4.311004,-7.063358,-3.459197,-0.570027,9.676985,0.176261,-1.628339,-3.431357,4.064565,9.922011,-2.492994,-8.736695,6.000604,1.796813,8.968036,3.515519,1.568881,-4.085534,9.678649,6.675905,-3.501047,-3.255019,-3.646830,-3.651199,-7.811158,7.337202,-7.826775,-6.097131,5.496454,-1.115281,7.065086,4.643084,6.687636,-2.117455,-3.058085,-9.800305,6.541733,2.007430,1.340752,9.799203,0.619864,-7.828212,-8.850201,-5.522332,-4.605208,3.884891,-4.353827,3.038944,-9.426570,-2.628932,2.396187,-6.522935,4.563764,-1.336788,8.440035,2.936442,-1.705802,-1.775532,-5.104595,8.748955,-0.864745,-3.724148,0.369950,-4.278949,-8.203321,-7.082629,5.846412,-5.768161,7.933266,1.800129,-0.530305,7.691880,-6.131806,-7.996967,-5.076676,-3.311164,-7.906456,8.890689,-2.710609,0.227161,0.180538,-5.758895,-0.489198,2.774997,9.347913,-7.700382,4.747564,-2.806454,-9.796480,-4.804248,-9.012426,9.915994,-4.922089,-8.953334,-0.689401,7.628243,-5.850956,9.658294,-1.997652,-2.285160,5.327651,3.799863,-5.463932,1.373194,-6.406211,-9.543118,-3.021410,5.514041,-3.136260,1.912490,-4.111189,-2.967978,-0.581426,7.713743,5.113017,-5.074178,3.607670,5.816879,6.141615,-6.348058,2.072631,0.457036,-3.413904,-6.099042], dtype = "float64")#candidate|3138|(336,)|const|float64
call_3137 = func_2266_call(relay.reshape(const_3138.astype('float64'), [6, 14, 4]), relay.reshape(const_3138.astype('float64'), [6, 14, 4]), )
call_3139 = func_2266_call(relay.reshape(const_3138.astype('float64'), [6, 14, 4]), relay.reshape(const_3138.astype('float64'), [6, 14, 4]), )
output = relay.Tuple([call_3130,call_3137,const_3138,])
output2 = relay.Tuple([call_3131,call_3139,const_3138,])
func_3144 = relay.Function([], output)
mod['func_3144'] = func_3144
mod = relay.transform.InferType()(mod)
output = func_3144()
func_3145 = relay.Function([], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3144_call = mod.get_global_var('func_3144')
func_3145_call = mutated_mod.get_global_var('func_3145')
call_3198 = relay.TupleGetItem(func_3144_call(), 0)
call_3199 = relay.TupleGetItem(func_3145_call(), 0)
output = relay.Tuple([call_3198,])
output2 = relay.Tuple([call_3199,])
func_3202 = relay.Function([], output)
mod['func_3202'] = func_3202
mod = relay.transform.InferType()(mod)
mutated_mod['func_3202'] = func_3202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mutated_mod.get_global_var('func_3202')
call_3203 = func_3202_call()
output = call_3203
func_3204 = relay.Function([], output)
mutated_mod['func_3204'] = func_3204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_3213 = func_2652_call()
call_3214 = func_2652_call()
output = call_3213
output2 = call_3214
func_3222 = relay.Function([], output)
mod['func_3222'] = func_3222
mod = relay.transform.InferType()(mod)
mutated_mod['func_3222'] = func_3222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3222_call = mutated_mod.get_global_var('func_3222')
call_3223 = func_3222_call()
output = call_3223
func_3224 = relay.Function([], output)
mutated_mod['func_3224'] = func_3224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_3343 = func_2461_call()
call_3344 = func_2461_call()
output = call_3343
output2 = call_3344
func_3352 = relay.Function([], output)
mod['func_3352'] = func_3352
mod = relay.transform.InferType()(mod)
output = func_3352()
func_3353 = relay.Function([], output)
mutated_mod['func_3353'] = func_3353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_3395 = func_2461_call()
call_3396 = func_2461_call()
output = relay.Tuple([call_3395,])
output2 = relay.Tuple([call_3396,])
func_3408 = relay.Function([], output)
mod['func_3408'] = func_3408
mod = relay.transform.InferType()(mod)
mutated_mod['func_3408'] = func_3408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3408_call = mutated_mod.get_global_var('func_3408')
call_3409 = func_3408_call()
output = call_3409
func_3410 = relay.Function([], output)
mutated_mod['func_3410'] = func_3410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_3457 = func_3352_call()
call_3458 = func_3352_call()
output = relay.Tuple([call_3457,])
output2 = relay.Tuple([call_3458,])
func_3465 = relay.Function([], output)
mod['func_3465'] = func_3465
mod = relay.transform.InferType()(mod)
output = func_3465()
func_3466 = relay.Function([], output)
mutated_mod['func_3466'] = func_3466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3487 = func_3074_call()
call_3488 = func_3074_call()
func_3222_call = mod.get_global_var('func_3222')
func_3224_call = mutated_mod.get_global_var('func_3224')
call_3489 = func_3222_call()
call_3490 = func_3222_call()
output = relay.Tuple([call_3487,call_3489,])
output2 = relay.Tuple([call_3488,call_3490,])
func_3491 = relay.Function([], output)
mod['func_3491'] = func_3491
mod = relay.transform.InferType()(mod)
mutated_mod['func_3491'] = func_3491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3491_call = mutated_mod.get_global_var('func_3491')
call_3492 = func_3491_call()
output = call_3492
func_3493 = relay.Function([], output)
mutated_mod['func_3493'] = func_3493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3408_call = mod.get_global_var('func_3408')
func_3410_call = mutated_mod.get_global_var('func_3410')
call_3496 = relay.TupleGetItem(func_3408_call(), 0)
call_3497 = relay.TupleGetItem(func_3410_call(), 0)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_3500 = relay.TupleGetItem(func_3202_call(), 0)
call_3501 = relay.TupleGetItem(func_3204_call(), 0)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_3515 = func_2461_call()
call_3516 = func_2461_call()
func_2266_call = mod.get_global_var('func_2266')
func_2269_call = mutated_mod.get_global_var('func_2269')
var_3518 = relay.var("var_3518", dtype = "float64", shape = (1, 336))#candidate|3518|(1, 336)|var|float64
call_3517 = func_2266_call(relay.reshape(var_3518.astype('float64'), [6, 14, 4]), relay.reshape(var_3518.astype('float64'), [6, 14, 4]), )
call_3519 = func_2266_call(relay.reshape(var_3518.astype('float64'), [6, 14, 4]), relay.reshape(var_3518.astype('float64'), [6, 14, 4]), )
func_2559_call = mod.get_global_var('func_2559')
func_2561_call = mutated_mod.get_global_var('func_2561')
var_3521 = relay.var("var_3521", dtype = "uint32", shape = (630,))#candidate|3521|(630,)|var|uint32
call_3520 = relay.TupleGetItem(func_2559_call(relay.reshape(var_3521.astype('uint32'), [630,])), 1)
call_3522 = relay.TupleGetItem(func_2561_call(relay.reshape(var_3521.astype('uint32'), [630,])), 1)
bop_3525 = relay.bitwise_or(call_3500.astype('uint32'), relay.reshape(call_3515.astype('uint32'), relay.shape_of(call_3500))) # shape=(16, 16, 6)
bop_3528 = relay.bitwise_or(call_3501.astype('uint32'), relay.reshape(call_3516.astype('uint32'), relay.shape_of(call_3501))) # shape=(16, 16, 6)
func_1998_call = mod.get_global_var('func_1998')
func_2000_call = mutated_mod.get_global_var('func_2000')
const_3530 = relay.const([[-2.872817,9.367959],[-6.496763,8.823006],[5.911376,-7.424548],[3.801659,-0.176697],[-0.911336,5.825586],[4.848279,0.953282],[9.871707,3.211075],[7.774509,-1.115541],[9.474463,-5.285689],[-8.770439,-2.474920],[9.028497,-7.154394],[8.058990,-4.578839],[3.377373,-4.301234],[2.555630,-1.341276],[-3.052613,-4.587428],[-9.119422,1.072003],[-2.745709,6.682397],[5.516302,-4.267308],[6.974292,-4.489072],[1.332208,-3.987018],[-1.594145,-7.238399],[-4.030338,-5.904458],[-4.970308,-6.951759],[2.546212,-4.010081],[1.498563,-1.845649],[3.502957,-6.239434],[3.978153,1.675226],[6.731358,5.983739],[-5.262986,0.944908],[-0.438488,5.420386],[-5.616732,-7.569242],[3.632260,7.506030],[-4.981519,-6.125640],[-4.953229,-0.903285],[7.699554,7.901526],[4.424999,-6.621494],[-1.248953,0.626775],[8.408553,0.936929],[-5.592160,9.626756],[0.497315,0.551629],[-3.912826,5.928511],[-8.425096,-2.152017],[-4.762250,-8.667139],[-2.786706,0.901349],[5.447705,2.302858],[-3.051196,-2.386450],[-9.293463,-8.271282],[1.767282,-6.996703],[0.152935,-0.336811],[2.199808,5.119032],[-9.791643,-4.286806],[-1.270938,5.864329],[-5.738255,-9.256909],[-0.470315,7.203237],[-7.741790,-8.331744],[0.278419,2.612418],[-4.546863,-2.002266],[-6.922429,7.608279],[-3.201418,8.042794],[-0.131619,-1.544650],[-1.835898,8.102336],[4.712610,1.925401],[-7.306182,7.189764],[-2.342797,4.730523],[5.236222,3.820565],[7.260663,-5.085367],[-2.390714,9.832022],[3.302768,3.712146],[-9.902997,-4.562663],[3.526870,-0.593552],[3.376553,-8.740173],[-5.829855,-6.673712],[6.367803,-6.498968],[1.510207,-9.076600],[-4.045610,-7.481185],[3.379732,9.994077],[-4.036417,-8.503444],[-1.869350,7.924736],[-6.896707,6.880435],[3.370092,-9.805365],[2.825123,-5.486955],[-5.689123,-8.798475],[-3.910401,-8.735003],[-5.653744,0.818487],[0.352889,1.013988],[-6.496029,4.055907],[-0.646980,-0.337825],[-6.705886,-1.247090],[9.464701,-9.566053],[-1.650168,-8.521455],[9.494728,-4.882204],[5.146064,-8.026981],[6.971892,-7.993719],[3.045449,0.449189],[-6.318836,3.307645],[-4.013393,8.205067],[-8.594804,8.074505],[-6.601052,2.900315],[-5.315809,-9.512811],[-5.860501,-6.417712],[-5.144161,5.319761],[-0.622000,7.597571],[-7.511839,-6.037195],[-7.208868,-2.291230],[8.069886,1.705785],[-5.397933,-1.622236],[6.220322,-6.240083],[4.727385,3.909527],[1.587510,5.088542],[1.726485,-5.253649],[-9.037239,5.124198],[-9.723256,3.278589],[4.575508,-8.568155],[-7.223818,6.176968],[6.012690,6.064141],[-6.234091,-0.064679],[1.797980,-1.322856],[-7.458478,2.603219],[2.955380,9.024124],[-5.400746,0.050078],[-9.518967,4.172059],[-5.981265,-5.149082],[-3.226331,4.665372],[-2.420435,-7.235163],[4.766947,8.036658],[-8.993633,-4.397221],[5.897417,2.342569],[1.798217,1.971897],[-3.202460,-0.306261],[7.479719,-5.931570],[-4.642745,7.547955],[6.088584,-2.734876],[-5.197876,-8.538802],[-5.762310,-6.779043],[2.155609,-8.793336],[-6.216659,-3.088994],[-8.863473,-0.207190],[7.330611,-2.271977],[-1.530887,-1.869542],[2.883513,-3.835190],[-3.299373,-3.502955],[-8.377469,-1.724051],[1.010363,-7.201070],[9.696340,-1.386690]], dtype = "float32")#candidate|3530|(144, 2)|const|float32
call_3529 = func_1998_call(relay.reshape(const_3530.astype('float32'), [3, 8, 12]))
call_3531 = func_1998_call(relay.reshape(const_3530.astype('float32'), [3, 8, 12]))
func_3465_call = mod.get_global_var('func_3465')
func_3466_call = mutated_mod.get_global_var('func_3466')
call_3535 = relay.TupleGetItem(func_3465_call(), 0)
call_3536 = relay.TupleGetItem(func_3466_call(), 0)
func_1998_call = mod.get_global_var('func_1998')
func_2000_call = mutated_mod.get_global_var('func_2000')
call_3548 = func_1998_call(relay.reshape(const_3530.astype('float32'), [3, 8, 12]))
call_3549 = func_1998_call(relay.reshape(const_3530.astype('float32'), [3, 8, 12]))
output = relay.Tuple([call_3496,call_3517,var_3518,call_3520,var_3521,bop_3525,call_3529,const_3530,call_3535,call_3548,])
output2 = relay.Tuple([call_3497,call_3519,var_3518,call_3522,var_3521,bop_3528,call_3531,const_3530,call_3536,call_3549,])
func_3557 = relay.Function([var_3518,var_3521,], output)
mod['func_3557'] = func_3557
mod = relay.transform.InferType()(mod)
var_3558 = relay.var("var_3558", dtype = "float64", shape = (1, 336))#candidate|3558|(1, 336)|var|float64
var_3559 = relay.var("var_3559", dtype = "uint32", shape = (630,))#candidate|3559|(630,)|var|uint32
output = func_3557(var_3558,var_3559,)
func_3560 = relay.Function([var_3558,var_3559,], output)
mutated_mod['func_3560'] = func_3560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_3580 = relay.TupleGetItem(func_2981_call(), 1)
call_3581 = relay.TupleGetItem(func_2983_call(), 1)
output = call_3580
output2 = call_3581
func_3585 = relay.Function([], output)
mod['func_3585'] = func_3585
mod = relay.transform.InferType()(mod)
output = func_3585()
func_3586 = relay.Function([], output)
mutated_mod['func_3586'] = func_3586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_3592 = relay.TupleGetItem(func_2981_call(), 0)
call_3593 = relay.TupleGetItem(func_2983_call(), 0)
uop_3615 = relay.atan(call_3592.astype('float32')) # shape=(3, 8, 12)
uop_3617 = relay.atan(call_3593.astype('float32')) # shape=(3, 8, 12)
output = uop_3615
output2 = uop_3617
func_3643 = relay.Function([], output)
mod['func_3643'] = func_3643
mod = relay.transform.InferType()(mod)
output = func_3643()
func_3644 = relay.Function([], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3408_call = mod.get_global_var('func_3408')
func_3410_call = mutated_mod.get_global_var('func_3410')
call_3652 = relay.TupleGetItem(func_3408_call(), 0)
call_3653 = relay.TupleGetItem(func_3410_call(), 0)
func_2715_call = mod.get_global_var('func_2715')
func_2719_call = mutated_mod.get_global_var('func_2719')
const_3656 = relay.const([7,3,8,-7,1,1,-5,6,4,-5,7,2,6,6,-8,-9,10,6,-7,-2,-2,-2,4,10,10,-4,1,-2,7,-5,10,2,8,-9,9,-5,-6,10,3,-9,-7,-1,-9,7,8,3,-8,9,10,-10,9,2,2,-7,-5,-9,9,3,10,4,-4,7,9,-7,-4,-10,2,-8,7,1,-4,-4,-10,-1,-9,-10,3,6,-3,-2,9,10,3,6,-5,-10,9,4,-5,10,1,8,9,-5,-6,-9,-7,6,7,10,3,3,-7,9,-1,5,-3,3,6,4,6,-7,-2,-5,-7,3,6,-9,-2,-3,1,4,-1,-6,6,7,3,5,6,-6,-6,2,6,2,-2,-10,5,5,-10,10,-10,8,-2,-1,-4,1,6,9,-5,-10,10,-7,2,10,4,-8,9,-8,-10,9,-5,-3,4,-5,-6,5,4,10,8,8,10,-4,3,-9,-10,8,-9,-8,-4,5,5,6,3,-7,-6,1,-2,-2,-9,-9,-9,4,-9,-4,-5,-3,-8,2,-6,2,-4,7,-2,-3,10,-9,9,9,-8,-1,2,5,-6,1,4,4,-8,5,10,10,8,-2,-7,-6,-4,7,-2,5,-7,-10,10,2,6,10,3,-7,1,1,10,10,4,-1,-10,-6,3,-2,1,2,1,-5,-2,-9,-4,9,-8,2,-8,2,-1,9,-6,8,-4,7,2,2,-6,7,1,-6,8,-3,-10,6,-1,5,5,7,6,9,-5,4,-1,-1,-8,3,4,-4,-9,6,-7,-9,6,6,-9,-10,5,6,-4,2,6,9,9,2,8,-10,-9,-1,-5,7,-1,8,8,6,3,-5,1,-6,-9,-10], dtype = "int64")#candidate|3656|(320,)|const|int64
call_3655 = relay.TupleGetItem(func_2715_call(relay.reshape(const_3656.astype('int64'), [4, 16, 5]), relay.reshape(const_3656.astype('int64'), [4, 16, 5]), ), 1)
call_3657 = relay.TupleGetItem(func_2719_call(relay.reshape(const_3656.astype('int64'), [4, 16, 5]), relay.reshape(const_3656.astype('int64'), [4, 16, 5]), ), 1)
output = relay.Tuple([call_3652,call_3655,const_3656,])
output2 = relay.Tuple([call_3653,call_3657,const_3656,])
func_3667 = relay.Function([], output)
mod['func_3667'] = func_3667
mod = relay.transform.InferType()(mod)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mutated_mod.get_global_var('func_3667')
call_3668 = func_3667_call()
output = call_3668
func_3669 = relay.Function([], output)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3677 = func_3074_call()
call_3678 = func_3074_call()
func_2207_call = mod.get_global_var('func_2207')
func_2210_call = mutated_mod.get_global_var('func_2210')
var_3684 = relay.var("var_3684", dtype = "bool", shape = (528, 4))#candidate|3684|(528, 4)|var|bool
call_3683 = func_2207_call(relay.reshape(var_3684.astype('bool'), [12, 11, 16]))
call_3685 = func_2207_call(relay.reshape(var_3684.astype('bool'), [12, 11, 16]))
func_2559_call = mod.get_global_var('func_2559')
func_2561_call = mutated_mod.get_global_var('func_2561')
const_3695 = relay.const([[-7,7,3,2,-10,-9,5,-4,-4,6,-3,9,-9,-5,-10,8,-3,5,9,-10,-6,8,4,2,-6,-4,-3,5,9,-6,7,6,1,4,9,-8,4,-6,-7,-8,9,4,-4,-5,-10,-2,7,5,-1,5,-4,7,-1,6,-3,5,-6,-5,7,-3,-3,2,-7,5,7,-10,-6,-8,-1,-7,1,-8,8,-7,-5,3,-7,7,3,2,5,10,-10,-8,-5,7,6,2,9,10,2,-4,-8,5,-5,1,10,9,4,-10,2,-6,3,4,-7,-7,-8,10,-2,-9,-1,-6,6,2,5,-8,9,7,1,-5,-6,9,-5,-3,-5,5],[5,-8,7,10,10,-10,3,1,9,-4,8,10,-4,2,5,5,9,10,3,-7,-9,4,-4,-6,10,-7,-3,4,8,-7,3,3,-5,-7,3,1,-3,-4,9,10,-9,-10,2,10,-3,-2,-8,10,8,-2,-3,4,10,-5,-9,-8,3,-1,-5,-6,-7,-5,-3,-10,2,3,7,-3,5,-3,2,3,1,-10,-4,-5,7,7,4,-1,9,2,-1,-10,3,-3,7,2,-1,-6,-1,7,2,-7,1,-3,-2,-6,-9,1,2,-7,-1,8,-3,8,-7,1,-9,6,-8,10,-3,5,3,-4,-2,-3,-1,-9,-9,-8,2,-8,8,2],[-2,-6,-1,6,8,8,-10,7,3,-6,2,1,-3,-6,-2,9,-3,10,7,-7,-6,9,5,9,-1,-2,-9,7,-9,-7,3,4,2,-9,2,5,10,-5,-9,5,-1,3,10,-6,-6,2,8,7,-2,8,-2,-1,9,9,2,8,-1,-7,-4,1,-7,-1,-9,-2,5,-4,-5,1,-10,-1,-4,-10,-1,-5,-2,-7,9,4,6,-8,8,-2,-6,-6,-5,1,-8,-4,9,-6,-8,-2,10,-7,-3,-9,-9,-5,-6,-1,10,2,-4,6,8,6,6,-4,-3,-3,8,-9,-7,-9,-7,-5,4,-4,-4,2,6,-7,-8,-7,4,9],[-5,8,-5,4,7,9,-5,-10,5,10,-3,-4,-9,-4,-2,-6,5,7,-1,10,-10,-1,-1,-3,-6,10,1,-2,2,5,1,10,-5,4,2,6,-2,-7,10,1,-5,7,2,8,5,9,7,2,10,10,3,-4,-4,7,-4,-4,-9,5,-8,7,-6,-1,-8,7,-10,-10,4,7,-6,6,5,9,8,-5,-8,-2,-7,-9,8,4,2,3,1,-4,6,-7,9,-3,3,-5,-8,-7,-2,3,4,-9,3,-2,2,1,7,7,5,3,9,9,9,-4,4,-2,-7,5,-3,-4,5,10,-5,-8,-8,10,-2,-5,-7,-1,-8,-1],[4,-5,-7,1,-6,5,-10,2,7,7,3,8,3,-2,4,8,-3,6,-1,1,-8,9,-1,-9,-4,-6,10,-6,-7,6,4,-1,6,-7,4,4,-6,1,-3,8,7,-4,-9,-2,9,-8,-1,-1,6,-3,10,4,10,5,-8,-1,-8,3,-5,4,10,-8,2,-7,-1,-1,-8,9,2,3,9,-6,1,4,2,-10,1,5,-7,-6,-5,-9,1,2,2,-3,1,7,9,-6,9,-7,-3,-8,9,1,10,-8,8,4,7,-10,-9,10,8,2,3,-10,4,-9,1,-6,9,-1,5,-8,7,3,-5,-5,-3,2,6,4,-1,10]], dtype = "uint32")#candidate|3695|(5, 126)|const|uint32
call_3694 = relay.TupleGetItem(func_2559_call(relay.reshape(const_3695.astype('uint32'), [630,])), 1)
call_3696 = relay.TupleGetItem(func_2561_call(relay.reshape(const_3695.astype('uint32'), [630,])), 1)
func_3465_call = mod.get_global_var('func_3465')
func_3466_call = mutated_mod.get_global_var('func_3466')
call_3697 = relay.TupleGetItem(func_3465_call(), 0)
call_3698 = relay.TupleGetItem(func_3466_call(), 0)
uop_3727 = relay.sqrt(var_3684.astype('float64')) # shape=(528, 4)
func_3585_call = mod.get_global_var('func_3585')
func_3586_call = mutated_mod.get_global_var('func_3586')
call_3729 = func_3585_call()
call_3730 = func_3585_call()
func_1998_call = mod.get_global_var('func_1998')
func_2000_call = mutated_mod.get_global_var('func_2000')
call_3734 = func_1998_call(relay.reshape(call_3729.astype('float32'), [3, 8, 12]))
call_3735 = func_1998_call(relay.reshape(call_3729.astype('float32'), [3, 8, 12]))
bop_3738 = relay.power(uop_3727.astype('float64'), relay.reshape(var_3684.astype('float64'), relay.shape_of(uop_3727))) # shape=(528, 4)
uop_3744 = relay.cosh(uop_3727.astype('float64')) # shape=(528, 4)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_3747 = func_3352_call()
call_3748 = func_3352_call()
uop_3751 = relay.asinh(uop_3727.astype('float32')) # shape=(528, 4)
output = relay.Tuple([call_3677,call_3683,call_3694,const_3695,call_3697,call_3729,call_3734,bop_3738,uop_3744,call_3747,uop_3751,])
output2 = relay.Tuple([call_3678,call_3685,call_3696,const_3695,call_3698,call_3730,call_3735,bop_3738,uop_3744,call_3748,uop_3751,])
func_3754 = relay.Function([var_3684,], output)
mod['func_3754'] = func_3754
mod = relay.transform.InferType()(mod)
var_3755 = relay.var("var_3755", dtype = "bool", shape = (528, 4))#candidate|3755|(528, 4)|var|bool
output = func_3754(var_3755)
func_3756 = relay.Function([var_3755], output)
mutated_mod['func_3756'] = func_3756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_3766 = func_2652_call()
call_3767 = func_2652_call()
output = relay.Tuple([call_3766,])
output2 = relay.Tuple([call_3767,])
func_3770 = relay.Function([], output)
mod['func_3770'] = func_3770
mod = relay.transform.InferType()(mod)
mutated_mod['func_3770'] = func_3770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3770_call = mutated_mod.get_global_var('func_3770')
call_3771 = func_3770_call()
output = call_3771
func_3772 = relay.Function([], output)
mutated_mod['func_3772'] = func_3772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_3785 = func_3352_call()
call_3786 = func_3352_call()
output = relay.Tuple([call_3785,])
output2 = relay.Tuple([call_3786,])
func_3787 = relay.Function([], output)
mod['func_3787'] = func_3787
mod = relay.transform.InferType()(mod)
output = func_3787()
func_3788 = relay.Function([], output)
mutated_mod['func_3788'] = func_3788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_3937 = func_3352_call()
call_3938 = func_3352_call()
output = relay.Tuple([call_3937,])
output2 = relay.Tuple([call_3938,])
func_3954 = relay.Function([], output)
mod['func_3954'] = func_3954
mod = relay.transform.InferType()(mod)
mutated_mod['func_3954'] = func_3954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3954_call = mutated_mod.get_global_var('func_3954')
call_3955 = func_3954_call()
output = call_3955
func_3956 = relay.Function([], output)
mutated_mod['func_3956'] = func_3956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2919_call = mod.get_global_var('func_2919')
func_2921_call = mutated_mod.get_global_var('func_2921')
call_4012 = func_2919_call()
call_4013 = func_2919_call()
func_290_call = mod.get_global_var('func_290')
func_293_call = mutated_mod.get_global_var('func_293')
const_4022 = relay.const([3.353998,-2.594044,-0.559155,-7.768472,0.281196,-0.774934,8.710008,5.850507,4.263390,-7.224344,6.684030,2.470024,-8.660863,8.222508,-1.022880,-9.221600,0.209493,-6.993435,2.278852,-1.577173,5.026299,-2.130375,7.849529,7.441580,-3.466686,4.954413,-2.707965,6.506302,-4.884176,4.988455,3.093505,7.460750,-1.955978,-6.820407,-3.398933,-9.950162,0.494658,-1.955583,-3.069456,0.656291,0.492054,1.580427,0.154491,-6.556498,1.077340,-1.677336,9.411960,7.050378,-5.270515,-5.930160,2.290657,-1.999627,1.784471,5.189823,0.947825,-6.774098,-4.209848,-2.731367,-1.017217,5.559197,-2.186457,-6.605315,2.374052,5.020969,2.505055,-5.446790,-6.132627,3.749466,5.087723,-7.926386,-0.671003,7.535490,-4.658780,-8.466709,6.088299,-3.093895,-8.490398,1.868215,3.022626,5.687361,-2.448206,3.789788,-4.315580,-9.648080,1.266504,-0.600980,9.911156,-2.408257,-3.072088,-4.076535,4.794175,8.909972,0.080085,2.752712,-1.281807,5.657809,3.831823,3.587946,-8.206146,7.354107,-4.305908,8.470383,-1.887535,7.882704,-9.085395,-9.802162,2.210147,0.401586,-3.212900,5.834993,7.866087,-0.538150,7.334222,1.867875,4.951623,5.147279,-5.805301,-1.804433,3.339289,5.106948,9.391503,4.152231,-5.612402,-8.709232,3.020617,1.592549,-9.013072,4.024471,4.534212,0.002537,-1.394725,1.904104,9.638633,8.550506,3.538006,4.230272,-1.885303,1.410367,1.080940,0.026049,8.451207,-5.185067,-1.091565,2.309487,-2.043998,6.529871,-0.183531,8.060710,-6.709946,-5.765396,-3.357912,-7.615382,-9.356188,1.563717,6.776330,-1.021843,3.452950,2.091309,0.390442,6.302575,7.387721,-5.216874,4.647545,-9.484751,-7.647943,-1.387117,-6.701811,8.402502,-9.899627,-0.925618,1.143014,3.907153,1.522002,6.329640,4.450916,-3.543436,7.640447,-2.797725,7.994873,-5.733189,8.797755,-0.690226,8.160550,-8.581377,-1.856943,-3.757094,-4.942236,-5.190554,-3.039818,-2.521803,-2.805378,-4.171798], dtype = "float64")#candidate|4022|(192,)|const|float64
const_4023 = relay.const([9.222606,-1.716804,-6.501700,-6.272053,-5.426592,3.067245,-9.390214,-8.798485,0.933620,-1.751737,-8.250866,-8.795833,-9.115031,-8.967277,9.767180,-7.588013,9.570935,-8.794780,5.052808,-4.809320,8.969623,-3.023385,3.434433,-1.252407,2.028704,-8.976811,5.679804,-2.571132,8.623748,7.389436,-6.867454,-4.430144,-0.033642,4.296064,6.970041,2.639598,-5.175494,-7.724112,1.094715,-2.128985,-5.653384,-6.191841,6.848893,4.756120,-7.029228,-1.680519,-3.584489,-0.173605,2.716383,-3.144717,7.685900,6.029231,9.767526,6.931377,5.109023,8.358088,-8.083525,4.063747,-2.508314,2.659074,-8.349823,-5.039820,-7.385830,0.410295,-6.776425,-2.695394,-2.914468,3.184801,-5.511568,-3.019648,2.996278,9.889562,6.700170,1.883220,2.275196,-6.039194,-1.680012,-2.216929,-5.035212,-7.080131,6.362384,-8.809727,8.322836,1.454005,6.574813,8.303731,6.209421,-2.637141,8.662405,-2.731573,-7.589563,-7.968554,9.250273,7.472208,0.393848,6.573082,0.578946,-4.013542,1.079736,-3.617896,3.993180,5.152957,-1.501809,4.447527,-5.374954,-5.745380,8.851179,0.980134,9.886193,-8.042870,1.617842,0.015355,6.828312,0.423335,7.401313,4.635958,3.139931,8.454342,1.099117,0.643677,-7.318376,-2.240670,1.790203,7.063921,6.414626,3.327746,2.247793,4.587776,-5.658118,1.795293,-9.358398,-5.701403,-5.759882,4.695663,-7.573364,2.856019,-8.985583,-7.431999,8.578587,-9.407177,2.271200,1.530055,-5.050740,-3.709804,2.993141,-3.759389,-8.999371,6.652078,-0.396887,-5.533483,-1.235971,6.295066,-3.458175,-1.858093,1.687773,-2.699780,-7.925854,7.293751,-9.446507,6.231903,-3.475021,9.068003,-3.588225,6.537365,1.171112,0.831468,0.107582,-6.130201,7.277931,9.595643,0.898638,7.470079,-1.120861,-1.174668,-2.199009,-0.201403,1.471576,-3.604407,4.148791,-6.246117,3.937527,-3.114675,-7.765501,-8.714758,9.810479,8.666109,0.444896,-3.331350,1.364739,-1.361587,-4.580629,-7.508570,-5.796409,1.602987,-9.113783,-7.661254,5.448642,-0.449889,4.469099,5.775104,8.701427,7.173157,-6.033232,-1.709185,-6.193978,9.441922,6.218846,-6.992407,-2.450571,9.077500,9.216140,7.242194,-2.678782,8.670986,-3.302195,-4.646225,5.658238,8.517687,8.600344,7.271122,-6.529503,-5.112432,3.184182,-6.446233,-2.012665,-4.897116,7.169151,4.097504,-3.774513,-9.059128,3.680088,-5.445078,-6.676254,-6.110423,8.911042,-8.789005,4.420904,6.768843,5.909203,-5.134768,-2.677292,-7.918110,-4.124573,1.588512,-5.049269,-1.155866,0.099438,-6.174105,-6.497861,0.738930,-9.956628,6.511411,3.709628,-1.326134,-5.116233,-0.779540,-0.868021,3.373709,-5.191028,1.848940,-6.752104,5.917490,-9.294138,6.979709,-0.265884,-4.651218,-3.643425,-2.368539,-2.371717,7.909903,-4.035133,9.813411,-1.702109,6.391276,-3.064119,6.594615,-6.012614,-9.433099,-4.352914,4.028354,-3.709655,3.173363,-2.297412,-0.932851,7.061273,5.461736,-2.213874,-4.571209,1.006604,9.746141,-2.579047,-4.815462,1.933824,3.543931,5.116685,2.478754,-3.540361,-6.035974,-8.993517,1.977125,-0.928360,9.661327,-5.889796,3.560204,-6.279547,8.449886,9.667041,2.657551,-3.502230,-5.910545,-9.008795,3.724028,9.860378,4.010541,5.600641,6.035614,6.846527,-0.976539,-1.508338,-5.001009,-4.397215,1.510012,7.185584,3.228056,1.090838,1.636473,3.237250,-8.455213,1.465249,-0.620904,-1.993423,-5.169767,1.720508,7.852858,0.738393,-3.676846,4.981007,5.618286,-2.585353,-9.479489,1.673962,9.413895,2.790665,2.202713,5.931512,7.245102,6.980893,-6.931453,-8.836228,-4.059627,8.320141,0.906119,-9.464715,0.773163,4.355120,-7.763649,-0.714813,9.247951,4.318380,-4.188593,4.488053,-6.049301,1.255198,5.881977,5.946976,6.879467,-2.399207,2.351531,-3.611975,9.542064,6.042930,-1.209239,-2.474392,1.484550,-8.956793,-7.808298,2.892555,-1.638301,3.301197,-6.956237,3.889612,7.541120,-6.169740,-8.957326,-6.213144,1.422695,6.170805,2.168209,3.768770,6.928674,-4.423767,0.335123,-6.057568,-0.180605,1.730508,-1.987124,7.639637,-8.118308,7.494264,-1.917820,9.784194,1.492071,9.921157,-2.834249,1.491510,-8.536198,0.001367,0.216198,9.376901,-2.697170,-3.930801,4.041157,-5.617808,5.269205,-9.358870,2.365043,1.119829,-6.560881,4.934074,-9.358619,-8.033140,-7.122732,-7.117222,5.764416,-1.782915,3.100882,7.797096,-6.311963,-9.899837,2.076213,0.162644,-1.688821,1.092439,0.075902,9.692368,2.947061,-1.848784,-6.608860,5.734377,-1.242928,4.352878,-2.596547,-3.289167,-1.425956,-8.597692,0.832220,5.157885,0.596520,-6.321417,4.059398,-8.070642,0.892516,3.005281,0.347964,6.840747,-5.695221,0.228823,6.275931,2.767738,5.492802,9.585375,7.589491,-6.222780,1.662583,1.186582,5.573870,7.503607,-7.947747,-7.386948,0.365590,6.119298,-9.332152,-0.877593,-4.939841,4.376677,-4.588740,-9.967487,7.302704,-4.415031,4.618964,-8.395497,9.089372,0.891403,-7.146915,3.880145,0.826785,0.679836,-5.340188,-5.572767,6.107018,-7.475629,-9.416894,4.570634,5.295840,3.422835,2.656115,4.679387,4.394127,-5.152527,-6.053543,-6.019703,-5.685037,9.538950,7.573793,1.711427,-8.321534,-0.375326,-1.592872,-7.252594,5.951187,-8.928738,1.613636,0.808109,-7.241664,-8.725868,-7.795330,-1.416987,-7.047196,9.808498,7.553382,-7.263445,-1.094646,8.141063,-4.199755,-5.817821,6.932682,-5.974338,1.665091,5.680664,3.018889,-3.921926,-9.332861,-6.239644,9.865934,0.836313,-8.604218,-7.291932,-8.985337,5.090612,2.915850,4.559434,-0.326370,-2.742737,7.133380,2.516133,6.938690,-7.507393,1.368078,6.411772,-3.489341,2.995029,-8.966572,1.376313,9.152355,-1.039638,6.513337,8.653813,3.683450,9.010094,-3.214856,-0.211139,-9.824943,4.105780,2.291197,-3.232945,7.099139,5.679076,0.447397,4.077136,0.523472,-7.649190,8.351125,2.389888,3.677724,1.593724,2.076269,1.951858,5.315058,2.104835,8.364490,-4.172913,-1.106139,1.380175,5.976052,-7.936271,-4.395323,3.677133,1.761027,-5.981734,9.901012,-1.119063,4.915662,-9.921711,-2.801489,-0.457940,-1.689794,8.376696,-6.079581,-8.110739,8.078861,-5.787745,6.970185,5.273346,-9.709792,6.161571,0.046045,0.667328,-7.427362,5.170428,1.971642,-6.617145,0.427687,-8.986970,-6.995103,7.003233,-4.710781,9.950550,6.835725,-6.290263,3.627502,5.220961,9.998848,0.184927,-7.697850,-6.742487,-5.074290,7.037547,-6.247044,6.142328,2.075678,-5.981454,0.938627,0.120165,-5.134816,-9.241380,-9.586688,8.925638,-0.643717,3.881336,1.726849,5.908740,-0.858506,5.137728,-4.526039,-8.930270,6.447864,1.427547,-8.146905,2.356057,-2.064820,-0.876236,7.134225,-0.678637,2.763116,6.503961,-0.232984,-0.670866,9.507251,8.299165,5.899906,5.496480,4.419412,8.450355,-7.185646,-3.427652,-1.258509,7.752946,-6.427975,-9.012804,8.092736,3.963178,-7.435525,-0.278886,6.852735,0.639920,8.464128,-2.198614,-2.908505,9.987026,-8.222410,8.433055,-3.400753,7.700074,3.724848,-2.607174,7.931876,-8.440789,-8.349706,7.211185,-5.885434,-4.164542,-7.807991,-0.245414,-8.905024,2.631293,-6.434436,5.176764,2.444213,7.574330,-4.157586,7.740767,8.209404,9.081392,-4.013255,-1.128971,-0.333250,1.993049,8.910748,1.810372,9.175990,-2.730242,2.663253,-0.547814,-3.403278,7.084418,-9.756977,-7.047537,-7.742691,8.068888,8.809273,-9.121561,-1.285365,-5.326699,4.856536,0.261891,-9.682257,-6.647433,3.315252,-8.464776,2.106510,4.728167,-4.491705,0.235473,7.645213,6.345559,-1.664646,-9.368278,3.827602,-2.282687,-2.531361,8.880395,-5.077851,7.360884,8.813060,0.559248,7.974099,-6.509515,6.770249,0.569824,-1.512965,3.735242,-9.969886,2.918461,-5.576852,-0.784164,5.621790,8.486059,-5.503956,2.555275,-6.438715,-7.063560,5.661336,6.562247,-7.655964,-6.644054,6.734904,-5.062825,1.655365,-1.845415,9.174814,7.434036,-2.480817,-6.853126,0.011018,-2.957444,9.560565,6.995804,5.380450,1.581079,7.348868,-7.708795,3.254420,-4.070983,-5.249561,-0.527431,-0.875035,-2.501276,-6.273779,7.258619,0.888209,8.346916,-5.014639,8.070491,7.440998,3.332823,-2.834112,6.708577,-1.437521,7.731868,-4.905845,0.821148,0.937417,-8.304109,-2.914970,4.352906,1.174837,-4.838340,7.443064,-7.312908,-6.039341,-2.338371,7.494013,-8.676685,6.468847,0.393653,8.029145,-8.329702,-9.898202,-8.361597,-1.057457,-6.270045,-0.445490,1.348661,6.964516,-9.230828,-2.074410,-2.660478,7.479268,8.490116,-5.775038,-5.006691,6.729521,-0.500385,2.740464,7.945672,-1.887879,-8.191178,-2.169427,6.914377,2.297023,-4.351807,-0.226747,3.345278,1.951135,-1.152351,2.336533,-1.004579,-6.298030,4.026130,8.967478,1.638700,-5.485722,7.994998,-3.587412,-5.970111,-4.401272,1.481411,-6.364658,-1.982814,0.118508,8.504310,-2.838349,-7.848956,8.411959,-9.130272,-9.633055,-5.062097,5.471047,9.166650,-3.360148,4.338845,-3.743898,5.996356,-2.799939,7.459197,8.767087,-2.663042,-2.105956,-1.445725,-2.677397,-5.153593,-7.999056,-9.444414,-8.321439,3.900799,6.822273,-5.441071,0.348425,-0.566983,6.864056,-3.809086,2.301281,-3.989821,2.483127,6.323080,-7.222996,-6.757052,-8.807294,-9.047835,-5.659104,-5.687794,7.866625,-3.315072,-8.456701,-9.654395,-7.137414,-8.072148,2.573400,4.738240,8.182026,5.037460,-2.892823,7.988952,-8.857861,-2.068594,9.012104,-2.373244,2.046106,-1.546476,-8.493606,7.779162,3.857061,-1.230128,2.711023,7.079004,-0.142970,-4.532445,-5.850562,7.438788,1.064318,4.235592,-2.570422,4.152576,-6.898735,-4.061351,-7.846744,3.463919,0.577798,2.277763,4.558859,-6.355848,0.535767,3.925897,-8.118324,-6.077595,-7.080794,-5.374225,0.377944,-9.262632,6.578613,-8.327408,-8.871174,1.956282,2.000905,-6.240429,4.027898,-8.658048,9.577637,-5.206387,2.827304,-0.515904,7.601904,-6.194252,-7.027870,-5.310624,4.678410,-4.100221,0.621314,-2.064149,-0.423963,8.326801,8.552149,-2.607628,4.979811,-8.347100,1.146960,-6.108707,2.353261,3.382395,1.295686,-2.300371,3.897890,6.984355,-1.220369,0.160908,-7.707889,6.142177,3.703909,6.300365,-7.374768,3.992284,-1.183874,-7.332713,-8.663769,7.020619,-6.866185,3.283894,-7.757981,-4.674766,-0.696226,5.306104,-2.740561,-8.751428,-7.099581,3.357151,3.544547,-0.854737,-7.733130,9.216413,0.262768,4.334165,-1.097711,6.124458,4.588547,-0.635066,1.868719,-8.374110,-3.031017,4.669243,-9.214726,3.529485,8.112369,2.876517,4.747058,0.612728,-9.457827,-2.094588,4.386805,6.941748,7.489739,-6.869728,-4.579188,-7.361664,4.248248,1.334391,-9.694451,4.135764,6.904629,-7.135416,7.977580,1.182461,-8.972648,8.718865,2.797411,-8.466513,-7.811537,7.369634,8.270395,2.717830,-2.817466,6.744611,3.358228,-5.434522,0.282945,9.577832,-4.565710,-7.975696,-9.948180,-5.380097,6.515867,-6.481698,6.710512,-9.338056,-1.790227,6.638920,-2.965934,7.881323,1.744271,-7.232356,-5.941403,-1.791189,-2.543150,9.245127,-9.186472,-8.698067,-7.428201,7.323088,3.907508,0.027417,0.994588,-3.443970,6.447898,0.741004,0.752270,6.209533,-6.665063,6.602328,0.358176,2.104907,-2.871919,3.718577,3.835670,9.362443,-7.744524,-4.293343,5.674791,0.501651,-0.797917,-8.482934,6.616262,-8.854046,5.721577,-4.438824,-4.249715,-3.425220,-5.643057,-1.996384,-0.144017,-0.912203,-5.658923,-1.550321,8.238479,-0.178334,-4.829579,5.877208,-5.836703,0.878567,4.085840,-7.279938,-5.447223,7.824039,-2.298789,-8.838302,0.241421,8.979408,6.956962,5.072105,-7.651587,-4.525788,-1.878257,-7.706293,3.887572,-9.157158,0.112545,5.316786,7.963763,-8.797705,-3.131484,-2.401046,1.061667,4.467319,2.732737,6.093840,-3.214911,2.763249,-1.738589,0.675234,9.758922,-8.350744,4.255140,-2.613649,-0.468765,-3.304614,3.681242,-1.216969,1.285426,5.096325,1.910459,-0.989703,4.653033,-1.665499,4.529329,8.097854,-0.227130,8.081201,8.832493,-3.935616,1.287088,-3.801427,-0.814160,9.559762,-2.502032,-9.395835,-4.602293,8.869045,-5.848152,6.167862,-0.366663,4.848828,-1.324485,-4.465043,-8.925982,-5.871246,1.208057,0.972068,5.590263,1.601835,5.652974,5.514058,-4.879258,1.977175,2.702257,-7.783017,-1.860943,-5.697454,5.421291,-4.927434,5.469513,8.092706,-7.688014,-7.198879,6.394187,3.308284,-3.137289,-5.971452,-8.229479,3.960620,-2.592875,4.560528,5.246544,-0.433042,-9.554739,8.654832,7.830483,-2.677745,3.086881,7.612898,4.620572,8.344750,-6.206864,-4.153991,-3.141915,-6.709604,-9.937057,4.042349,9.844806,-8.284882,-4.903968,9.584769,-9.002283,3.448255,2.436236,-2.790682,-6.619098,-8.903275,-8.640548,6.817374,-4.518464,6.629603,4.541474,7.262960,-2.721172,-8.243852,1.712461,-8.972437,1.134895,8.434317,9.629966,6.199087,7.402518,-6.984583,9.766090,-0.918921,3.903456,-7.383281,-4.922494,0.118094,3.327296,-7.910011,0.822412,-8.104872,-7.949032,2.987636,6.073498,8.972231,-5.260369,-0.128429,3.885475,-1.773528,0.355654,5.467941,-2.020140,-0.312772,-7.686998,-8.859319,-7.469156,4.948990,-1.956262,-2.649195,1.587796,-0.034362,3.516796,0.241018,-1.176543,5.906812,-4.789022,7.750079,0.401263,-8.412047,-4.708789,1.787521,7.611614,-6.468137,-0.658920,-3.031877,-2.696423,7.085545,9.615113,8.706071,-1.382742,6.495253,1.480593,9.131881,9.437850,0.572332,-9.511628,-9.968770,3.012096,6.590503,8.149507,7.300427,2.237001,2.477430,-1.733844,-7.006740,9.305957,5.979741,-6.368956,7.630967,3.726009,-5.310895,0.865511,5.344295,8.838039,-8.018250,-7.841242,-6.172578,8.800351,8.164564,-6.045361,-8.980631,1.964309,8.198915,2.090698,9.845468,7.928527,-2.457331,-1.201716,2.324490,1.446412,-1.776842,1.987438,4.330196,-6.900723,-1.568735,-1.327720,-1.518718,5.282766,5.196042,-5.035211,6.669243,-7.853261,7.987494,6.534623,-8.205956,-0.924436,0.078229,-3.277244,-6.304612,5.565145,1.618770,-8.314015,8.990191,3.183305,-8.024805,-5.629434,4.723733,4.672939,3.000778,3.224679,3.420568,3.117344,-3.157668,5.524172,-1.882027,6.033757,-1.733334,-3.743797,1.733041,3.470304,9.134668,5.123043,-3.654437,3.001896,-5.316280,-2.116002,4.479793,-1.044872,1.081740,-2.512110,-3.762153,5.916253,9.036099,-9.049904,-8.119701,-8.879849,1.462493,-8.399170,9.204592,-6.349201,9.643442,5.468107,-0.382168,-6.607727,-4.754683,6.219895,-8.341872,1.847440,-9.322889,5.570728,0.358771,8.304405,9.041675,0.351842,1.326897,-2.861827,-9.384375,0.528186,1.786490,-5.501705,5.121868,-9.055757,-8.033667,5.054130,-2.945122,8.318446,7.708283,-2.453410,0.766716,3.943831,0.164841,9.651967,2.754997,-8.564478,-7.357974,-4.035834,7.721453,1.382629,7.376704,-6.898637,3.479651,5.324711,-9.404381,-5.517804,9.588135,2.096145,2.919602,-7.409219,5.503430,-2.549138,5.328705,0.157191,3.762456,9.932800,-4.282656,-5.122776,3.291472,-6.733891,-3.257721,2.298713,-8.271435,-8.974616,9.777944,-2.843545,-5.718548,-3.706373,-5.086961,-2.390172,3.392954,-4.429384,6.508161,2.207938,-8.446674,8.857290,-4.510260,0.742554,2.247865,6.792412,-5.744240,5.433930,-0.890919,4.965390,-5.158003,-2.950850,5.347988,9.930054,-4.334904,7.763448,-0.268045,5.886116,-6.607880,3.257886,-9.883484,-2.189822,-2.971034,3.349381,-4.624866,6.112124,-9.433434,-4.942163,-3.555881,1.161527,-7.479167,-4.730548,6.658134,-1.025659,-6.438018,4.400366,-0.080324,7.892504,6.468449,6.339019,9.325151,-7.127139,-6.617773,4.155120,-5.738495,8.859048,-6.397661,3.225136,0.121373,5.440268,0.026917,2.691987,-9.914673,9.075180,6.264495,8.892550,7.947306,1.779024,-7.499634,5.813580,7.554944,-9.365343,-2.919667,5.549792,7.957490,1.023473,2.737098,-6.778464,8.955130,7.722285,-8.226970,-6.643822,4.185606,2.817438,-0.939517,-7.101680,-4.200102,4.118078,5.237775,-8.623572,7.974274,9.428772,-8.810595,9.036522,5.454552,2.258834,4.048802,-1.114149,1.169605,0.783151,-7.855287,0.481501,-3.013832,4.749091,9.517766,-5.818388,5.430669,8.324248,8.883374,8.336185,1.561460,-3.199266,-9.944546,2.433459,-3.327091,-1.280254,2.984289,7.870738,-4.646847,5.561519,5.955942,4.347886,8.210063,-0.689480,4.182284,-6.670229,-9.765809,9.664908,5.365991,-8.512030,0.130128,-8.195915,-6.655225,-8.776911,-8.242069,-9.951459,0.788188,-9.024656,-5.550102,6.572216,-5.818781,1.238757,-8.441154,-9.122544,5.398854,-8.620949,3.420769,5.619063,-1.929776,-6.778824,3.596965,-4.257463,-8.281997,-1.399921,-1.585400,-1.074657,5.787360,6.073139,0.962004,5.265807,8.992676,7.405916,-9.355819,-3.985124,4.539046,9.715288,-5.574349,6.373831,-2.620550,9.517795,-0.738052,0.199811,2.538309,9.798744,-2.448523,-4.948696,-3.156680,-9.441243,-9.625574,-0.718023,-5.414910,6.842183,6.552807,5.508933,-9.019153,-8.973535,8.831305,-7.626745,5.988808,5.415742,-9.621824,2.308285,0.025603,1.300703,-4.223853,0.495747,2.327606,5.115358,-3.180736,-5.106785,-5.370744,0.527709,-8.854170,-3.308559,0.333205,-7.916885,8.516389,5.345056,2.222409,2.607891,-2.615836,-4.665784,0.622936,-0.497448,0.973883,-7.162926,-4.294634,4.120404], dtype = "float32")#candidate|4023|(1680,)|const|float32
call_4021 = relay.TupleGetItem(func_290_call(relay.reshape(const_4022.astype('float64'), [6, 4, 8]), relay.reshape(const_4023.astype('float32'), [1680,]), ), 1)
call_4024 = relay.TupleGetItem(func_293_call(relay.reshape(const_4022.astype('float64'), [6, 4, 8]), relay.reshape(const_4023.astype('float32'), [1680,]), ), 1)
output = relay.Tuple([call_4012,call_4021,const_4022,const_4023,])
output2 = relay.Tuple([call_4013,call_4024,const_4022,const_4023,])
func_4030 = relay.Function([], output)
mod['func_4030'] = func_4030
mod = relay.transform.InferType()(mod)
output = func_4030()
func_4031 = relay.Function([], output)
mutated_mod['func_4031'] = func_4031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_4041 = relay.TupleGetItem(func_3202_call(), 0)
call_4042 = relay.TupleGetItem(func_3204_call(), 0)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_4047 = relay.TupleGetItem(func_3202_call(), 0)
call_4048 = relay.TupleGetItem(func_3204_call(), 0)
output = relay.Tuple([call_4041,call_4047,])
output2 = relay.Tuple([call_4042,call_4048,])
func_4051 = relay.Function([], output)
mod['func_4051'] = func_4051
mod = relay.transform.InferType()(mod)
output = func_4051()
func_4052 = relay.Function([], output)
mutated_mod['func_4052'] = func_4052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_4063 = relay.TupleGetItem(func_2981_call(), 1)
call_4064 = relay.TupleGetItem(func_2983_call(), 1)
output = relay.Tuple([call_4063,])
output2 = relay.Tuple([call_4064,])
func_4067 = relay.Function([], output)
mod['func_4067'] = func_4067
mod = relay.transform.InferType()(mod)
mutated_mod['func_4067'] = func_4067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4067_call = mutated_mod.get_global_var('func_4067')
call_4068 = func_4067_call()
output = call_4068
func_4069 = relay.Function([], output)
mutated_mod['func_4069'] = func_4069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3770_call = mod.get_global_var('func_3770')
func_3772_call = mutated_mod.get_global_var('func_3772')
call_4093 = relay.TupleGetItem(func_3770_call(), 0)
call_4094 = relay.TupleGetItem(func_3772_call(), 0)
func_2715_call = mod.get_global_var('func_2715')
func_2719_call = mutated_mod.get_global_var('func_2719')
var_4124 = relay.var("var_4124", dtype = "int64", shape = (320,))#candidate|4124|(320,)|var|int64
call_4123 = relay.TupleGetItem(func_2715_call(relay.reshape(var_4124.astype('int64'), [4, 16, 5]), relay.reshape(var_4124.astype('int64'), [4, 16, 5]), ), 0)
call_4125 = relay.TupleGetItem(func_2719_call(relay.reshape(var_4124.astype('int64'), [4, 16, 5]), relay.reshape(var_4124.astype('int64'), [4, 16, 5]), ), 0)
func_3585_call = mod.get_global_var('func_3585')
func_3586_call = mutated_mod.get_global_var('func_3586')
call_4128 = func_3585_call()
call_4129 = func_3585_call()
output = relay.Tuple([call_4093,call_4123,var_4124,call_4128,])
output2 = relay.Tuple([call_4094,call_4125,var_4124,call_4129,])
func_4130 = relay.Function([var_4124,], output)
mod['func_4130'] = func_4130
mod = relay.transform.InferType()(mod)
var_4131 = relay.var("var_4131", dtype = "int64", shape = (320,))#candidate|4131|(320,)|var|int64
output = func_4130(var_4131)
func_4132 = relay.Function([var_4131], output)
mutated_mod['func_4132'] = func_4132
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4134 = relay.var("var_4134", dtype = "float32", shape = (13, 6, 13))#candidate|4134|(13, 6, 13)|var|float32
uop_4135 = relay.log(var_4134.astype('float32')) # shape=(13, 6, 13)
output = uop_4135
output2 = uop_4135
func_4139 = relay.Function([var_4134,], output)
mod['func_4139'] = func_4139
mod = relay.transform.InferType()(mod)
mutated_mod['func_4139'] = func_4139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4140 = relay.var("var_4140", dtype = "float32", shape = (13, 6, 13))#candidate|4140|(13, 6, 13)|var|float32
func_4139_call = mutated_mod.get_global_var('func_4139')
call_4141 = func_4139_call(var_4140)
output = call_4141
func_4142 = relay.Function([var_4140], output)
mutated_mod['func_4142'] = func_4142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4030_call = mod.get_global_var('func_4030')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_4163 = relay.TupleGetItem(func_4030_call(), 3)
call_4164 = relay.TupleGetItem(func_4031_call(), 3)
func_4051_call = mod.get_global_var('func_4051')
func_4052_call = mutated_mod.get_global_var('func_4052')
call_4168 = relay.TupleGetItem(func_4051_call(), 0)
call_4169 = relay.TupleGetItem(func_4052_call(), 0)
func_290_call = mod.get_global_var('func_290')
func_293_call = mutated_mod.get_global_var('func_293')
const_4174 = relay.const([-1.898754,-0.705883,-6.444350,-0.994674,-0.194280,-3.248845,-5.146507,3.759372,-4.249549,-9.604110,-7.484929,-4.475312,5.621514,-9.989871,-9.618400,6.187617,-9.347382,-8.028123,-8.627994,-0.699589,-8.558703,8.312994,6.186384,9.133777,3.374958,0.259655,-2.624253,-7.634366,3.939431,-1.755716,-8.228176,7.334559,-3.525366,1.448795,-1.048494,6.525891,9.027669,9.557485,-3.223682,-6.161270,7.556773,8.666027,2.440182,3.480103,0.816781,7.314492,-0.653979,-9.237952,-4.932955,7.806058,-4.158198,-3.506511,2.277909,-3.483594,-5.806343,-1.652785,-1.487759,8.472913,5.859696,-8.828701,-4.327970,-9.913179,-1.667533,4.896728,-7.701752,3.235801,-2.117239,-5.686961,-5.164842,7.710178,7.812122,-9.411158,8.908010,-5.226795,-9.950453,4.565552,-5.814501,2.725966,0.173649,7.838967,4.376465,-3.967380,-9.390451,-0.879211,2.855936,2.762551,9.313750,-0.097598,1.348611,7.115523,0.975552,4.667016,-7.544119,7.574447,8.572322,1.232417,9.437186,-7.813790,3.634860,-7.266503,-4.111603,1.057030,4.138054,6.357827,-7.734604,8.170566,8.964998,0.043479,9.001101,2.098630,-1.849419,-6.416063,-9.062020,1.163294,3.891797,-5.830620,-8.105709,3.871492,5.569402,-6.807293,5.269259,-6.203633,-6.118198,-7.775195,-4.264193,3.682840,-1.401788,-4.811688,-6.808543,-8.040839,-4.282223,-8.465959,9.208890,-0.821862,-7.719429,-8.362535,-6.165019,-2.842164,8.042135,2.225790,9.525634,-0.569596,-5.301736,-1.709495,-9.334874,-8.904140,-8.157600,5.769732,-2.017066,-5.814080,3.124950,-2.985188,9.233699,-5.739956,4.855317,-6.711702,-3.338846,-2.485519,-8.042586,-0.749203,-0.520923,4.949499,6.170857,-1.743950,-8.816947,-9.762925,5.451920,-7.747590,0.811636,3.356477,-6.427521,9.142116,-6.977420,9.299996,4.479657,-2.715065,-7.137685,-8.735219,-9.100601,5.695824,0.938056,-6.776944,-8.479445,-6.321725,-1.433565,-4.034120,7.220521,8.022637,1.483310,-3.257775,-6.601824,-9.982131], dtype = "float64")#candidate|4174|(192,)|const|float64
call_4173 = relay.TupleGetItem(func_290_call(relay.reshape(const_4174.astype('float64'), [6, 4, 8]), relay.reshape(call_4163.astype('float32'), [1680,]), ), 2)
call_4175 = relay.TupleGetItem(func_293_call(relay.reshape(const_4174.astype('float64'), [6, 4, 8]), relay.reshape(call_4163.astype('float32'), [1680,]), ), 2)
output = relay.Tuple([call_4163,call_4168,call_4173,const_4174,])
output2 = relay.Tuple([call_4164,call_4169,call_4175,const_4174,])
func_4178 = relay.Function([], output)
mod['func_4178'] = func_4178
mod = relay.transform.InferType()(mod)
output = func_4178()
func_4179 = relay.Function([], output)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_4247 = relay.TupleGetItem(func_2981_call(), 0)
call_4248 = relay.TupleGetItem(func_2983_call(), 0)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
const_4275 = relay.const([False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False], dtype = "bool")#candidate|4275|(2112,)|const|bool
call_4274 = relay.TupleGetItem(func_3754_call(relay.reshape(const_4275.astype('bool'), [528, 4])), 10)
call_4276 = relay.TupleGetItem(func_3756_call(relay.reshape(const_4275.astype('bool'), [528, 4])), 10)
output = relay.Tuple([call_4247,call_4274,const_4275,])
output2 = relay.Tuple([call_4248,call_4276,const_4275,])
func_4279 = relay.Function([], output)
mod['func_4279'] = func_4279
mod = relay.transform.InferType()(mod)
output = func_4279()
func_4280 = relay.Function([], output)
mutated_mod['func_4280'] = func_4280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4279_call = mod.get_global_var('func_4279')
func_4280_call = mutated_mod.get_global_var('func_4280')
call_4300 = relay.TupleGetItem(func_4279_call(), 1)
call_4301 = relay.TupleGetItem(func_4280_call(), 1)
var_4302 = relay.var("var_4302", dtype = "float32", shape = (528, 4))#candidate|4302|(528, 4)|var|float32
bop_4303 = relay.mod(call_4300.astype('float32'), relay.reshape(var_4302.astype('float32'), relay.shape_of(call_4300))) # shape=(528, 4)
bop_4306 = relay.mod(call_4301.astype('float32'), relay.reshape(var_4302.astype('float32'), relay.shape_of(call_4301))) # shape=(528, 4)
uop_4307 = relay.sinh(call_4300.astype('float64')) # shape=(528, 4)
uop_4309 = relay.sinh(call_4301.astype('float64')) # shape=(528, 4)
func_2207_call = mod.get_global_var('func_2207')
func_2210_call = mutated_mod.get_global_var('func_2210')
call_4310 = func_2207_call(relay.reshape(bop_4303.astype('bool'), [12, 11, 16]))
call_4311 = func_2207_call(relay.reshape(bop_4303.astype('bool'), [12, 11, 16]))
var_4312 = relay.var("var_4312", dtype = "float32", shape = (528, 4))#candidate|4312|(528, 4)|var|float32
bop_4313 = relay.subtract(bop_4303.astype('uint64'), relay.reshape(var_4312.astype('uint64'), relay.shape_of(bop_4303))) # shape=(528, 4)
bop_4316 = relay.subtract(bop_4306.astype('uint64'), relay.reshape(var_4312.astype('uint64'), relay.shape_of(bop_4306))) # shape=(528, 4)
output = relay.Tuple([uop_4307,call_4310,bop_4313,])
output2 = relay.Tuple([uop_4309,call_4311,bop_4316,])
func_4320 = relay.Function([var_4302,var_4312,], output)
mod['func_4320'] = func_4320
mod = relay.transform.InferType()(mod)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4320_call = mutated_mod.get_global_var('func_4320')
var_4322 = relay.var("var_4322", dtype = "float32", shape = (528, 4))#candidate|4322|(528, 4)|var|float32
var_4323 = relay.var("var_4323", dtype = "float32", shape = (528, 4))#candidate|4323|(528, 4)|var|float32
call_4321 = func_4320_call(var_4322,var_4323,)
output = call_4321
func_4324 = relay.Function([var_4322,var_4323,], output)
mutated_mod['func_4324'] = func_4324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3954_call = mod.get_global_var('func_3954')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_4329 = relay.TupleGetItem(func_3954_call(), 0)
call_4330 = relay.TupleGetItem(func_3956_call(), 0)
var_4337 = relay.var("var_4337", dtype = "float64", shape = (16, 16, 6))#candidate|4337|(16, 16, 6)|var|float64
bop_4338 = relay.logical_xor(call_4329.astype('uint16'), relay.reshape(var_4337.astype('uint16'), relay.shape_of(call_4329))) # shape=(16, 16, 6)
bop_4341 = relay.logical_xor(call_4330.astype('uint16'), relay.reshape(var_4337.astype('uint16'), relay.shape_of(call_4330))) # shape=(16, 16, 6)
var_4376 = relay.var("var_4376", dtype = "float64", shape = (16, 16, 6))#candidate|4376|(16, 16, 6)|var|float64
bop_4377 = relay.divide(var_4337.astype('float32'), relay.reshape(var_4376.astype('float32'), relay.shape_of(var_4337))) # shape=(16, 16, 6)
func_3465_call = mod.get_global_var('func_3465')
func_3466_call = mutated_mod.get_global_var('func_3466')
call_4387 = relay.TupleGetItem(func_3465_call(), 0)
call_4388 = relay.TupleGetItem(func_3466_call(), 0)
output = relay.Tuple([bop_4338,bop_4377,call_4387,])
output2 = relay.Tuple([bop_4341,bop_4377,call_4388,])
func_4391 = relay.Function([var_4337,var_4376,], output)
mod['func_4391'] = func_4391
mod = relay.transform.InferType()(mod)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4391_call = mutated_mod.get_global_var('func_4391')
var_4393 = relay.var("var_4393", dtype = "float64", shape = (16, 16, 6))#candidate|4393|(16, 16, 6)|var|float64
var_4394 = relay.var("var_4394", dtype = "float64", shape = (16, 16, 6))#candidate|4394|(16, 16, 6)|var|float64
call_4392 = func_4391_call(var_4393,var_4394,)
output = call_4392
func_4395 = relay.Function([var_4393,var_4394,], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_4473 = func_3352_call()
call_4474 = func_3352_call()
var_4484 = relay.var("var_4484", dtype = "float64", shape = (16, 16, 6))#candidate|4484|(16, 16, 6)|var|float64
bop_4485 = relay.mod(call_4473.astype('float64'), relay.reshape(var_4484.astype('float64'), relay.shape_of(call_4473))) # shape=(16, 16, 6)
bop_4488 = relay.mod(call_4474.astype('float64'), relay.reshape(var_4484.astype('float64'), relay.shape_of(call_4474))) # shape=(16, 16, 6)
func_2266_call = mod.get_global_var('func_2266')
func_2269_call = mutated_mod.get_global_var('func_2269')
var_4503 = relay.var("var_4503", dtype = "float64", shape = (336,))#candidate|4503|(336,)|var|float64
call_4502 = func_2266_call(relay.reshape(var_4503.astype('float64'), [6, 14, 4]), relay.reshape(var_4503.astype('float64'), [6, 14, 4]), )
call_4504 = func_2266_call(relay.reshape(var_4503.astype('float64'), [6, 14, 4]), relay.reshape(var_4503.astype('float64'), [6, 14, 4]), )
bop_4515 = relay.right_shift(bop_4485.astype('uint16'), relay.reshape(var_4484.astype('uint16'), relay.shape_of(bop_4485))) # shape=(16, 16, 6)
bop_4518 = relay.right_shift(bop_4488.astype('uint16'), relay.reshape(var_4484.astype('uint16'), relay.shape_of(bop_4488))) # shape=(16, 16, 6)
func_2835_call = mod.get_global_var('func_2835')
func_2838_call = mutated_mod.get_global_var('func_2838')
var_4526 = relay.var("var_4526", dtype = "int32", shape = (1, 33))#candidate|4526|(1, 33)|var|int32
const_4527 = relay.const([8,-10,10,-1,-6,2,-2,1,4,6,2,-5,-3,6,-8,4,4,3,5,-10,6,-4,-2,-8,3,-2,-9,-3,-1,2,9,-5,2,-6,10,8,9,6,1,10,10,-8,-10,1,-2,-9,3,-2,2,1,-6,-9,3,6,1,-7,-9,10,-7,-9,8,-10,1,-5,1,-4,7,2,1,5,8,-5,-10,-6,-7,-8,4,7,9,10,-10,-7,-10,-8,-8,4,-8,1,-3,-4,4,7,-9,5,6,6,-10,4,1,-10,8,5,1,3,4,6,1,-8,-10,6,8,4,6,-7,-2,8,-1,4,-8,7,6,10,7,-6,10,-2,4,6,6,7,-10,-5,-7,-2,10,6,3,1,-5,8,9,-6,8,4,-9,1,7,10,-9,-8,-6,-4,2,10,4,-7,-7,-7,8,10,-6,7,-7,7,1,-4,4,5,-3,5,2,2,6,-6,-3,-2,-7,2,5,-1,-9,-5,-3,8,5,5,7,9,-9,10,1,-2,-8,-2,6,-1,-10,-7,-7,1,10,3,5,3,-7,5,2,6,-4,2,4,4,-10,-7,7,2,5,-5,5,6,10,10,1,-1,-6,4,8,2,-8,-6,-8,-2,-4,-5,4,3,-3,5,10,-8,1,-6,9,-9,-8,3,5,-1,2,-8,-9,2,5,-7,-3,1,6,-5,7,1,-10,3,10,4], dtype = "int32")#candidate|4527|(264,)|const|int32
call_4525 = relay.TupleGetItem(func_2835_call(relay.reshape(var_4526.astype('int32'), [33,]), relay.reshape(const_4527.astype('int32'), [264,]), ), 2)
call_4528 = relay.TupleGetItem(func_2838_call(relay.reshape(var_4526.astype('int32'), [33,]), relay.reshape(const_4527.astype('int32'), [264,]), ), 2)
output = relay.Tuple([call_4502,var_4503,bop_4515,call_4525,var_4526,const_4527,])
output2 = relay.Tuple([call_4504,var_4503,bop_4518,call_4528,var_4526,const_4527,])
func_4531 = relay.Function([var_4484,var_4503,var_4526,], output)
mod['func_4531'] = func_4531
mod = relay.transform.InferType()(mod)
var_4532 = relay.var("var_4532", dtype = "float64", shape = (16, 16, 6))#candidate|4532|(16, 16, 6)|var|float64
var_4533 = relay.var("var_4533", dtype = "float64", shape = (336,))#candidate|4533|(336,)|var|float64
var_4534 = relay.var("var_4534", dtype = "int32", shape = (1, 33))#candidate|4534|(1, 33)|var|int32
output = func_4531(var_4532,var_4533,var_4534,)
func_4535 = relay.Function([var_4532,var_4533,var_4534,], output)
mutated_mod['func_4535'] = func_4535
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4615 = relay.var("var_4615", dtype = "float64", shape = (11, 5, 13))#candidate|4615|(11, 5, 13)|var|float64
uop_4616 = relay.sqrt(var_4615.astype('float64')) # shape=(11, 5, 13)
output = uop_4616
output2 = uop_4616
func_4618 = relay.Function([var_4615,], output)
mod['func_4618'] = func_4618
mod = relay.transform.InferType()(mod)
mutated_mod['func_4618'] = func_4618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4619 = relay.var("var_4619", dtype = "float64", shape = (11, 5, 13))#candidate|4619|(11, 5, 13)|var|float64
func_4618_call = mutated_mod.get_global_var('func_4618')
call_4620 = func_4618_call(var_4619)
output = call_4620
func_4621 = relay.Function([var_4619], output)
mutated_mod['func_4621'] = func_4621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3222_call = mod.get_global_var('func_3222')
func_3224_call = mutated_mod.get_global_var('func_3224')
call_4687 = func_3222_call()
call_4688 = func_3222_call()
output = relay.Tuple([call_4687,])
output2 = relay.Tuple([call_4688,])
func_4704 = relay.Function([], output)
mod['func_4704'] = func_4704
mod = relay.transform.InferType()(mod)
output = func_4704()
func_4705 = relay.Function([], output)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4718 = relay.var("var_4718", dtype = "float64", shape = (2, 15, 6))#candidate|4718|(2, 15, 6)|var|float64
uop_4719 = relay.cos(var_4718.astype('float64')) # shape=(2, 15, 6)
func_4704_call = mod.get_global_var('func_4704')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_4724 = relay.TupleGetItem(func_4704_call(), 0)
call_4725 = relay.TupleGetItem(func_4705_call(), 0)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_4727 = func_3352_call()
call_4728 = func_3352_call()
func_3222_call = mod.get_global_var('func_3222')
func_3224_call = mutated_mod.get_global_var('func_3224')
call_4732 = func_3222_call()
call_4733 = func_3222_call()
func_3557_call = mod.get_global_var('func_3557')
func_3560_call = mutated_mod.get_global_var('func_3560')
const_4741 = relay.const([[-3.665494,-5.596118,-0.316404,2.063386,1.553543,-7.070561,-1.622150,3.066948,0.041496,-3.617567,9.502792,-4.418322,-9.701687,7.260605,7.978567,6.989536,-9.419549,-9.774786,2.046701,-4.949257,3.410437,2.789244,-7.030100,3.218491,-0.939444,-4.355751,-9.826788,3.361072,-0.036481,8.688928,0.943343,8.926546,-6.148651,-7.149256,-1.900106,-6.203410,8.028961,7.592416,-9.308131,1.009232,-8.947882,-2.006712,2.947829,-7.401353,-2.236270,7.304251,-0.187401,2.330779,-8.094481,-3.116317,4.068028,-7.283207,-1.021842,-0.146489,9.393976,1.218221,-5.449455,-2.253731,-2.756901,6.753007,-2.747172,-7.814367,-6.198685,1.010847,3.178425,0.995355,5.059897,-8.108076,6.001626,-7.556190,-7.589949,-8.753048,-3.335776,-3.605666,6.006307,8.837256,-1.535151,-8.921372,-0.335851,-2.203776,5.430939,-0.347431,5.077179,-3.648008,8.024349,6.388103,0.493910,-2.103492,-5.459350,-4.648075,0.483151,1.120796,1.559928,-0.253761,-9.994924,0.589352,-9.626890,-3.599011,-1.159677,-2.591140,3.375699,-9.659013,8.384068,-3.703231,3.591684,-6.380032,4.934652,1.530738,8.838796,-9.920487,-1.383584,-4.275038,4.631661,-8.987544,3.291224,0.022516,2.242880,8.324478,9.864868,-3.560668,-7.238697,6.618488,3.781571,-2.130300,-2.100849,-6.758817,1.406188,6.307727,3.414814,-5.719039,-9.067126,5.462182,6.764713,-0.895498,3.809713,-5.654767,9.598486,2.799179,-7.173320,-0.251044,-5.105336,2.267330,1.069373,-6.593051,-5.080991,1.945172,-1.890825,-1.792510,-0.994480,-1.128546,-8.970005,4.776649,-1.857753,-6.536714,1.370969,8.375299,4.847492,6.592701,6.747401,2.676017,-1.762182,-0.933623,2.246259,5.630342,-3.961174,4.912504,-6.535912,-6.725628,5.635578,6.946555,5.095937,-1.685331,6.297591,1.340730,4.393913,-1.270871,-4.413800,2.873381,-8.457314,2.286835,-1.754170,2.914195,7.506334,-5.958236,-0.495221,0.161063,-7.474661,-5.468830,6.760329,4.312505,-1.336740,4.248665,-5.303715,-8.173722,6.912307,6.594504,6.118980,-2.421061,0.152147,7.717804,-7.078254,1.945734,1.344855,-6.052481,-3.064345,7.113520,0.290692,7.532386,3.198885,-1.563471,8.894225,2.294032,-7.595982,9.965040,-8.622552,6.490556,-4.580807,0.466100,-7.474404,-2.840546,7.449095,2.329548,-3.939723,9.361431,2.380003,-1.869794,0.491747,1.809823,6.064092,4.142693,7.626574,-0.443510,-1.074213,5.929894,7.039913,2.478593,-9.499687,-6.069995,1.221809,-6.427910,1.434014,8.642716,-0.148150,9.878784,5.061666,4.501430,8.833096,-4.704314,-0.841775,2.248198,-7.515248,-0.374629,4.602735,9.022175,-1.757118,3.491063,6.600005,8.581990,9.875899,4.454953,1.887661,-4.814978,2.384044,-7.219897,-3.483792,2.274189,-3.037034,0.893165,-8.208912,-1.002394,0.480671,8.827661,-5.225619,-6.016416,7.712272,3.639122,7.896380,7.848940,-5.501986,-1.627659,0.387325,1.762338,4.971611,-5.778612,-8.785948,4.392195,-0.012080,-4.589519,2.688029,2.477902,-8.302055,5.483533,-9.256723,-1.954381,3.525535,0.828235,3.060602,-8.343322,-6.253413,-3.288166,-5.755725,-9.474207,-7.724215,1.963797,7.628517,-9.263168,6.921825,9.790833,6.474983,9.505471,-2.340903,7.052950,8.308715,0.998971,-7.424867,-7.870909,1.576528,-1.623335,8.924965,3.191060,-4.822211,4.521267,4.264972,6.328060,-5.782878,5.755357,4.560174,-2.112499,8.259512,-2.691175,-1.047209,-4.988654,1.837579,5.637582,-8.201356,-0.066092]], dtype = "float64")#candidate|4741|(1, 336)|const|float64
const_4742 = relay.const([2,-7,3,6,-3,8,10,-9,5,1,2,9,4,4,-10,-3,10,-1,-2,-6,7,-10,5,9,9,-2,-5,-7,-2,-5,9,-5,10,3,4,-4,3,-9,7,10,10,-9,2,-6,-6,-7,10,3,7,-9,-5,-5,1,5,-3,-4,-7,-10,8,3,6,6,-1,8,-4,10,-2,-6,-8,10,7,6,4,5,1,-5,-8,-5,-9,7,-9,-3,-4,5,1,5,7,6,-5,-5,-8,5,1,-7,4,6,-4,6,9,10,-5,9,-4,5,-5,8,-1,3,5,-2,5,4,-8,-7,-4,-6,10,10,2,3,-8,-3,6,-10,-6,-1,10,-2,8,5,4,10,1,-6,-7,-10,-4,3,9,-2,-6,5,2,6,5,-1,-5,3,-3,8,-9,-7,1,2,1,-4,1,-3,-7,3,10,-10,-5,10,-1,-9,9,5,6,-10,3,4,-1,5,5,1,1,2,-4,5,-3,10,-2,1,-10,3,-3,7,5,4,-1,-5,8,-10,10,-10,2,4,-4,-10,-4,-10,-1,4,1,5,-5,-4,-8,5,-2,10,6,-5,-8,5,-9,2,-3,5,-4,-6,1,-2,-6,8,6,1,-1,-4,-3,-3,-5,-2,1,2,10,-6,8,1,-9,-4,-6,-8,-1,-7,3,-7,-7,7,-10,7,7,-2,-5,10,1,-8,-7,5,-1,2,-4,-10,-10,1,6,-10,1,-7,-5,10,-1,3,7,7,2,-9,8,7,8,8,8,-4,-7,5,10,-10,-6,-10,-2,-10,-8,-9,10,-6,8,2,-1,-4,9,-2,5,-1,-4,-5,-10,1,3,6,-9,-2,6,10,-10,10,4,-10,4,1,4,6,-10,-4,8,8,2,-2,-6,10,7,-7,1,-1,1,-5,-5,-9,-10,9,2,-3,7,-5,-10,-1,4,-9,5,10,-1,1,7,-2,-2,3,6,10,-3,-8,-9,-1,7,8,9,8,-2,-5,-8,4,-8,5,4,9,10,2,6,-4,5,-3,-9,-4,9,-10,8,8,-4,10,-8,-7,6,-10,5,3,6,-4,-10,-8,2,7,-3,-4,10,4,2,-8,1,1,4,5,4,6,2,3,3,1,-7,-2,-10,-6,-10,-9,4,8,-5,-9,4,1,1,-9,-3,10,-7,8,-1,-10,-9,-1,-10,-3,3,2,-7,-5,-6,-3,-7,3,-5,3,-5,6,-1,-7,7,-6,1,-8,-10,9,7,8,-4,10,-2,-5,4,-9,10,6,7,10,9,-8,-2,6,10,-5,-3,-4,-8,1,2,-6,9,2,5,4,1,-2,1,-6,10,-3,-6,9,8,5,2,-2,5,-7,-7,2,-4,-3,-10,4,-10,-6,-6,10,7,-1,7,9,7,-10,-8,-2,-7,-7,-4,1,-10,10,-2,-9,6,-7,5,-4,-6,7,-9,6,4,4,-6,3,10,1,4,10,-2,-4,4,9,2,-4,5,-8,-5,10,-7,-7,-6,10,2,1,-8,-3,3,-4,10,-8,2,-5,-8,10,7,2,-10,3,-4,-6,-9,9,-10,9,-3,-6,-2,-3,5,-6,3,-6,-2,-2,3,-3,6,-4,-4,-8,-1,3,-5,-2,10,-5,-5,5,-9,-6,-5,-5,-10,1,4,-1,4,-8,10,1,7,-2,-6,2,4,-10,-6,1,-5,-9,4,6,4,6], dtype = "uint32")#candidate|4742|(630,)|const|uint32
call_4740 = relay.TupleGetItem(func_3557_call(relay.reshape(const_4741.astype('float64'), [1, 336]), relay.reshape(const_4742.astype('uint32'), [630,]), ), 1)
call_4743 = relay.TupleGetItem(func_3560_call(relay.reshape(const_4741.astype('float64'), [1, 336]), relay.reshape(const_4742.astype('uint32'), [630,]), ), 1)
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
call_4759 = relay.TupleGetItem(func_484_call(relay.reshape(const_4742.astype('uint32'), [14, 9, 5])), 6)
call_4760 = relay.TupleGetItem(func_487_call(relay.reshape(const_4742.astype('uint32'), [14, 9, 5])), 6)
output = relay.Tuple([uop_4719,call_4724,call_4727,call_4732,call_4740,const_4741,const_4742,call_4759,])
output2 = relay.Tuple([uop_4719,call_4725,call_4728,call_4733,call_4743,const_4741,const_4742,call_4760,])
func_4768 = relay.Function([var_4718,], output)
mod['func_4768'] = func_4768
mod = relay.transform.InferType()(mod)
mutated_mod['func_4768'] = func_4768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4769 = relay.var("var_4769", dtype = "float64", shape = (2, 15, 6))#candidate|4769|(2, 15, 6)|var|float64
func_4768_call = mutated_mod.get_global_var('func_4768')
call_4770 = func_4768_call(var_4769)
output = call_4770
func_4771 = relay.Function([var_4769], output)
mutated_mod['func_4771'] = func_4771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2919_call = mod.get_global_var('func_2919')
func_2921_call = mutated_mod.get_global_var('func_2921')
call_4818 = func_2919_call()
call_4819 = func_2919_call()
output = relay.Tuple([call_4818,])
output2 = relay.Tuple([call_4819,])
func_4829 = relay.Function([], output)
mod['func_4829'] = func_4829
mod = relay.transform.InferType()(mod)
output = func_4829()
func_4830 = relay.Function([], output)
mutated_mod['func_4830'] = func_4830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_4870 = relay.TupleGetItem(func_2501_call(), 1)
call_4871 = relay.TupleGetItem(func_2502_call(), 1)
output = relay.Tuple([call_4870,])
output2 = relay.Tuple([call_4871,])
func_4879 = relay.Function([], output)
mod['func_4879'] = func_4879
mod = relay.transform.InferType()(mod)
mutated_mod['func_4879'] = func_4879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mutated_mod.get_global_var('func_4879')
call_4880 = func_4879_call()
output = call_4880
func_4881 = relay.Function([], output)
mutated_mod['func_4881'] = func_4881
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4902 = relay.const([[[3,-7,2,-6,-5],[3,7,2,1,-4]],[[-10,-6,7,8,-6],[-9,2,9,-10,-6]],[[-8,-4,-9,8,-8],[-10,-3,5,-4,-5]],[[3,-1,-10,10,7],[-2,-5,10,5,-3]],[[2,-3,-2,7,1],[-8,4,1,2,-1]],[[-7,6,1,7,-3],[1,6,2,-2,3]],[[9,-10,-1,-6,-4],[3,-3,-5,-2,2]],[[-3,-1,-7,-6,-2],[-4,2,-3,-9,-7]],[[-9,8,9,8,-6],[-7,5,9,-2,3]],[[-5,2,-5,10,7],[8,-8,-10,10,6]]], dtype = "uint8")#candidate|4902|(10, 2, 5)|const|uint8
var_4903 = relay.var("var_4903", dtype = "uint8", shape = (10, 2, 5))#candidate|4903|(10, 2, 5)|var|uint8
bop_4904 = relay.add(const_4902.astype('uint8'), relay.reshape(var_4903.astype('uint8'), relay.shape_of(const_4902))) # shape=(10, 2, 5)
output = bop_4904
output2 = bop_4904
func_4911 = relay.Function([var_4903,], output)
mod['func_4911'] = func_4911
mod = relay.transform.InferType()(mod)
var_4912 = relay.var("var_4912", dtype = "uint8", shape = (10, 2, 5))#candidate|4912|(10, 2, 5)|var|uint8
output = func_4911(var_4912)
func_4913 = relay.Function([var_4912], output)
mutated_mod['func_4913'] = func_4913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_4950 = relay.TupleGetItem(func_2981_call(), 0)
call_4951 = relay.TupleGetItem(func_2983_call(), 0)
output = call_4950
output2 = call_4951
func_4961 = relay.Function([], output)
mod['func_4961'] = func_4961
mod = relay.transform.InferType()(mod)
output = func_4961()
func_4962 = relay.Function([], output)
mutated_mod['func_4962'] = func_4962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4829_call = mod.get_global_var('func_4829')
func_4830_call = mutated_mod.get_global_var('func_4830')
call_5009 = relay.TupleGetItem(func_4829_call(), 0)
call_5010 = relay.TupleGetItem(func_4830_call(), 0)
func_4618_call = mod.get_global_var('func_4618')
func_4621_call = mutated_mod.get_global_var('func_4621')
const_5022 = relay.const([8.214558,-9.599630,-1.485252,1.361517,7.969424,-7.374355,7.818449,-3.441749,2.141352,-6.716230,0.073748,-7.094428,8.729735,6.458488,6.906265,9.703193,-7.716695,6.734644,-1.835909,-7.273606,7.118330,-6.116446,-5.098929,9.663313,0.826815,-5.831684,6.122836,5.442588,-7.709732,8.663854,-8.943570,4.154638,-1.596688,-1.034964,1.984093,-7.010318,2.437338,9.642466,-2.965579,1.235759,-4.295549,-1.015804,6.095871,7.689668,-3.258880,7.132892,1.715812,-1.558158,2.662396,8.342571,0.307841,-4.696518,-6.447971,-7.687787,-7.717040,-9.890407,-9.642950,-9.624806,-5.293766,4.961665,-6.925822,-8.842079,3.366856,4.893756,0.283994,9.767802,-8.178967,2.221935,0.833008,1.403337,5.554765,0.688212,-5.649938,2.557840,8.081440,-9.567958,9.821362,4.412099,2.818432,-1.373664,7.821488,2.172712,9.443743,-0.842725,-0.665756,-4.905473,-8.172070,6.971355,2.753081,0.295334,-9.723424,-6.893770,-3.151679,-0.378839,-5.017001,-3.826268,1.567016,8.687522,-3.857887,1.400243,-7.923810,4.411886,5.142907,5.195588,5.654301,6.540420,-5.711963,-4.672040,-8.528214,-9.420358,6.944736,-9.094874,-7.563972,0.239796,-5.078418,-4.843375,-7.264261,6.674429,-6.773930,-2.953332,6.617342,6.556285,7.368146,3.564015,6.737453,-1.580210,-2.325512,9.374638,-3.307242,-8.716539,1.466670,5.996868,-7.714800,-3.040304,-0.097722,-8.453285,-9.100997,1.611993,3.341863,2.085023,7.430065,3.029336,8.293688,-6.563771,1.711728,-1.174835,6.120592,-0.164355,-1.598063,3.306274,1.488943,-1.445097,6.126480,5.472930,-1.270159,7.501268,-5.731037,-0.546882,5.381986,-3.616578,2.391782,-0.946706,-7.634224,-3.551201,5.359465,5.723488,6.478965,-4.270310,-2.661583,-0.616944,7.995009,-4.697189,-9.764453,2.812989,9.540735,7.855042,-6.693996,-2.192889,-9.102758,1.425057,-2.668048,7.617873,-3.787253,-5.878329,3.575004,-1.523237,0.187480,9.477930,0.964173,6.174769,-5.454862,0.052126,-1.054513,6.849981,-0.054344,-7.595306,-4.646296,-6.666874,-8.031990,9.956633,5.276240,-9.717030,-0.260258,5.220418,-5.436992,-5.988120,3.668154,2.714963,1.179821,-0.903614,1.420169,-8.329656,-3.621425,-7.217286,-8.320323,9.459091,1.823467,-7.084314,7.275972,5.676693,-3.432924,-8.581242,4.781657,-6.618436,-3.174793,-7.697163,4.548971,7.638395,-2.566454,-3.402504,9.535679,-0.353118,7.523413,-5.021088,-0.413641,-8.868219,-3.433652,-3.157390,-1.160151,-2.653175,-4.918490,-4.666371,-6.704651,2.276028,-3.742105,4.707818,0.205467,-6.871291,-9.811361,6.210343,5.964817,3.250063,-2.155510,2.349426,-3.444493,-7.981869,9.297364,8.312575,-2.483868,-9.769874,-7.729425,9.652534,8.591726,7.873335,-0.879127,2.621142,-2.685781,4.553852,-1.024246,-8.959410,8.750703,6.037229,6.868386,-4.248960,-0.139937,-1.719274,-0.478704,-9.043837,-1.189117,4.576766,6.893639,-2.993138,2.840182,-8.935384,-6.185850,4.133575,0.046729,-0.042888,9.530679,5.475386,1.339328,-7.057296,0.655155,-7.323577,-7.466474,-5.987266,-4.823397,-7.008024,4.589146,8.963140,3.567383,2.687382,-4.666461,4.822998,-2.859348,9.960279,4.674986,0.656048,-1.120273,-5.173211,8.836932,-1.358341,1.525270,9.453104,-3.795436,-8.981038,5.649487,-1.115533,-2.212381,7.402261,-7.420772,-4.766618,2.059017,-9.445165,8.577976,-5.601206,-0.256875,-4.008629,8.718944,-6.881410,5.780450,8.279706,-6.784540,-5.942137,-8.223317,5.158697,-2.714182,-6.171932,4.003641,3.692717,9.092603,8.362152,9.399471,1.315405,5.193432,-6.383499,-5.699641,-4.150841,3.400018,0.834969,-4.579685,9.412004,7.349936,-9.361461,-8.030936,7.136553,-7.304212,6.542858,9.457075,-0.195001,-7.802247,4.843979,2.594245,8.663694,-1.018824,-9.889842,6.007260,5.903620,1.718502,0.763610,2.332370,2.101548,4.081865,4.632074,0.958725,-2.909835,-3.617445,-7.290416,6.165762,7.437809,1.663733,-6.712881,3.542163,7.375900,-8.261709,-7.555456,7.622747,2.170782,5.652864,0.308172,-2.162083,-1.079883,8.776284,-8.010383,8.005942,-6.838537,3.085937,2.842778,-7.267311,3.147885,-0.040145,7.980857,1.824189,-5.012236,9.660799,2.849892,6.791700,4.361155,0.184783,1.248725,9.676240,5.827835,3.114402,1.997168,9.667982,-4.623559,-0.856001,0.377665,-6.305456,-9.383634,-4.176793,5.126958,-7.610653,-5.287212,4.841927,-6.770359,-3.620762,3.583541,-7.223635,3.529842,-5.781656,2.545197,7.616623,-7.081953,1.810450,-1.412718,4.487662,9.920937,-6.584448,3.435002,-0.527673,-3.493935,3.322909,-8.567290,-3.659089,2.956626,3.417311,6.225364,8.814512,-1.645475,4.169168,-1.988406,-9.071287,-5.140514,-9.818251,-7.785008,5.496902,9.688019,4.757584,-1.678708,2.342549,-4.731101,7.062765,-2.122839,6.028876,6.822338,1.806932,5.249548,3.987943,-8.726304,4.974018,-1.030050,2.240581,6.727127,4.452721,-8.334778,9.671246,4.492918,-0.398236,-7.449116,-2.444322,-5.189851,0.573175,-7.225294,6.016483,-0.548433,1.001417,9.736355,-4.424909,2.554516,0.119178,2.252629,-3.172796,7.216955,-8.567461,6.160443,3.151149,-4.106432,6.808427,7.091198,8.319631,-7.669679,1.375952,2.288867,-2.327781,6.292529,-1.433800,6.395941,-8.895494,2.528429,-1.039649,5.315637,3.987635,-2.203592,-2.194775,8.030080,-4.842339,5.979021,-9.208478,0.854887,2.573916,-5.276978,0.048886,1.126424,-1.426791,-0.026527,0.794831,-3.888704,9.277928,7.733178,-4.751598,6.962025,-5.081741,-3.835600,3.807108,-8.677414,1.344527,-1.752747,-4.945186,-9.483770,4.104315,7.643593,-5.275802,9.589075,-6.136091,-4.101317,2.384724,9.071289,-6.959094,-8.476798,-3.201262,-6.501721,3.930957,-0.483849,-5.069477,-6.599100,-7.996412,-0.018926,8.114673,-4.521223,6.718396,3.752904,9.375074,-6.868289,-9.908526,8.813725,8.751456,-9.697774,2.180223,-6.491246,6.433488,0.705888,-9.688206,6.082147,5.898834,-3.283054,-5.495989,5.941364,-4.059517,1.433236,3.182267,9.557943,-6.365479,0.503169,1.378725,-2.544843,2.526498,-9.576363,6.001087,6.396952,3.425552,1.109267,9.413636,1.959271,6.298916,7.623073,-3.820720,3.191270,-0.906184,-4.691815,1.593084,4.683449,-4.061153,-6.389876,7.694480,-8.093592,1.674105,-7.357749,-8.350277,3.160004,-2.338288,-6.096274,1.268647,6.770735,4.490986,6.124740,-1.181263,2.592927,-6.709944,1.477082,7.342398,8.905800,0.248446,-9.846255,2.532918,6.565517,-4.750514,-8.015474,-7.453720,4.226438,8.051307,-9.837594,5.964021,-2.827723,5.601946,0.032501,2.274997,-9.334583,-9.218591,4.042321,-1.589249,0.684962,-2.761612,-9.222236,-3.085270,-6.695590,9.978962,4.293654,-7.762983,-0.834667,0.175486,5.224409,-9.254076,-7.361971,-4.653386,4.811353,-2.645215,2.951950,-1.181170,9.506743,5.199132,2.017307,-7.065651,-7.317097,-9.488926,1.549735,-1.999865,2.710137,-8.079556,-6.569744,7.457476,2.053615,-7.895358,-4.097929,-5.764770,9.665104,-6.875052,-7.467743,-3.908358,5.278051,-3.649096,-7.432040,9.149537,7.699838,1.526133,-1.436203,6.915331,2.958786,-5.993965,7.646655,3.344186,9.283715,5.140384,5.099859,-3.935994,-5.510600,2.606372,0.863828,-0.638747,-0.503762,-4.014147,-3.827026,-8.767029,-4.548116,-4.681450,2.775260,-6.593928,6.750560,4.152316,6.384279,5.341410,-5.224684,1.197415,-8.696622,-8.798026], dtype = "float64")#candidate|5022|(715,)|const|float64
call_5021 = func_4618_call(relay.reshape(const_5022.astype('float64'), [11, 5, 13]))
call_5023 = func_4618_call(relay.reshape(const_5022.astype('float64'), [11, 5, 13]))
output = relay.Tuple([call_5009,call_5021,const_5022,])
output2 = relay.Tuple([call_5010,call_5023,const_5022,])
func_5038 = relay.Function([], output)
mod['func_5038'] = func_5038
mod = relay.transform.InferType()(mod)
output = func_5038()
func_5039 = relay.Function([], output)
mutated_mod['func_5039'] = func_5039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_5043 = relay.TupleGetItem(func_2981_call(), 0)
call_5044 = relay.TupleGetItem(func_2983_call(), 0)
output = relay.Tuple([call_5043,])
output2 = relay.Tuple([call_5044,])
func_5064 = relay.Function([], output)
mod['func_5064'] = func_5064
mod = relay.transform.InferType()(mod)
mutated_mod['func_5064'] = func_5064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5065 = func_5064_call()
output = call_5065
func_5066 = relay.Function([], output)
mutated_mod['func_5066'] = func_5066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_5128 = func_3352_call()
call_5129 = func_3352_call()
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
var_5151 = relay.var("var_5151", dtype = "uint32", shape = (630,))#candidate|5151|(630,)|var|uint32
call_5150 = relay.TupleGetItem(func_484_call(relay.reshape(var_5151.astype('uint32'), [14, 9, 5])), 3)
call_5152 = relay.TupleGetItem(func_487_call(relay.reshape(var_5151.astype('uint32'), [14, 9, 5])), 3)
output = relay.Tuple([call_5128,call_5150,var_5151,])
output2 = relay.Tuple([call_5129,call_5152,var_5151,])
func_5158 = relay.Function([var_5151,], output)
mod['func_5158'] = func_5158
mod = relay.transform.InferType()(mod)
var_5159 = relay.var("var_5159", dtype = "uint32", shape = (630,))#candidate|5159|(630,)|var|uint32
output = func_5158(var_5159)
func_5160 = relay.Function([var_5159], output)
mutated_mod['func_5160'] = func_5160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_5162 = relay.TupleGetItem(func_3202_call(), 0)
call_5163 = relay.TupleGetItem(func_3204_call(), 0)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_5176 = relay.TupleGetItem(func_3202_call(), 0)
call_5177 = relay.TupleGetItem(func_3204_call(), 0)
output = relay.Tuple([call_5162,call_5176,])
output2 = relay.Tuple([call_5163,call_5177,])
func_5201 = relay.Function([], output)
mod['func_5201'] = func_5201
mod = relay.transform.InferType()(mod)
mutated_mod['func_5201'] = func_5201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5201_call = mutated_mod.get_global_var('func_5201')
call_5202 = func_5201_call()
output = call_5202
func_5203 = relay.Function([], output)
mutated_mod['func_5203'] = func_5203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3585_call = mod.get_global_var('func_3585')
func_3586_call = mutated_mod.get_global_var('func_3586')
call_5279 = func_3585_call()
call_5280 = func_3585_call()
func_5038_call = mod.get_global_var('func_5038')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_5294 = relay.TupleGetItem(func_5038_call(), 2)
call_5295 = relay.TupleGetItem(func_5039_call(), 2)
func_3144_call = mod.get_global_var('func_3144')
func_3145_call = mutated_mod.get_global_var('func_3145')
call_5302 = relay.TupleGetItem(func_3144_call(), 1)
call_5303 = relay.TupleGetItem(func_3145_call(), 1)
output = relay.Tuple([call_5279,call_5294,call_5302,])
output2 = relay.Tuple([call_5280,call_5295,call_5303,])
func_5313 = relay.Function([], output)
mod['func_5313'] = func_5313
mod = relay.transform.InferType()(mod)
mutated_mod['func_5313'] = func_5313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5313_call = mutated_mod.get_global_var('func_5313')
call_5314 = func_5313_call()
output = call_5314
func_5315 = relay.Function([], output)
mutated_mod['func_5315'] = func_5315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_5324 = relay.TupleGetItem(func_3202_call(), 0)
call_5325 = relay.TupleGetItem(func_3204_call(), 0)
output = call_5324
output2 = call_5325
func_5332 = relay.Function([], output)
mod['func_5332'] = func_5332
mod = relay.transform.InferType()(mod)
mutated_mod['func_5332'] = func_5332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5332_call = mutated_mod.get_global_var('func_5332')
call_5333 = func_5332_call()
output = call_5333
func_5334 = relay.Function([], output)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_5367 = func_3643_call()
call_5368 = func_3643_call()
output = call_5367
output2 = call_5368
func_5376 = relay.Function([], output)
mod['func_5376'] = func_5376
mod = relay.transform.InferType()(mod)
output = func_5376()
func_5377 = relay.Function([], output)
mutated_mod['func_5377'] = func_5377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4961_call = mod.get_global_var('func_4961')
func_4962_call = mutated_mod.get_global_var('func_4962')
call_5534 = func_4961_call()
call_5535 = func_4961_call()
func_3770_call = mod.get_global_var('func_3770')
func_3772_call = mutated_mod.get_global_var('func_3772')
call_5536 = relay.TupleGetItem(func_3770_call(), 0)
call_5537 = relay.TupleGetItem(func_3772_call(), 0)
uop_5543 = relay.tan(call_5536.astype('float64')) # shape=(16, 16, 6)
uop_5545 = relay.tan(call_5537.astype('float64')) # shape=(16, 16, 6)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_5553 = relay.TupleGetItem(func_3667_call(), 1)
call_5554 = relay.TupleGetItem(func_3669_call(), 1)
func_3787_call = mod.get_global_var('func_3787')
func_3788_call = mutated_mod.get_global_var('func_3788')
call_5560 = relay.TupleGetItem(func_3787_call(), 0)
call_5561 = relay.TupleGetItem(func_3788_call(), 0)
func_3465_call = mod.get_global_var('func_3465')
func_3466_call = mutated_mod.get_global_var('func_3466')
call_5564 = relay.TupleGetItem(func_3465_call(), 0)
call_5565 = relay.TupleGetItem(func_3466_call(), 0)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_5570 = relay.TupleGetItem(func_4879_call(), 0)
call_5571 = relay.TupleGetItem(func_4881_call(), 0)
output = relay.Tuple([call_5534,uop_5543,call_5553,call_5560,call_5564,call_5570,])
output2 = relay.Tuple([call_5535,uop_5545,call_5554,call_5561,call_5565,call_5571,])
func_5572 = relay.Function([], output)
mod['func_5572'] = func_5572
mod = relay.transform.InferType()(mod)
mutated_mod['func_5572'] = func_5572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5572_call = mutated_mod.get_global_var('func_5572')
call_5573 = func_5572_call()
output = call_5573
func_5574 = relay.Function([], output)
mutated_mod['func_5574'] = func_5574
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5588 = relay.const([[[-7.037277,-5.478926,5.228318,7.674394],[-4.122912,-9.838757,-7.956730,-5.580237],[2.867373,6.608360,-2.218831,-0.607220],[-5.152152,7.934082,8.861540,-1.265159],[8.333712,-8.708302,1.930047,-4.715030],[1.385123,-4.201662,8.609204,0.735759],[7.426100,-0.744114,-2.058540,-4.181950]],[[-5.258931,9.378241,-8.701415,1.897911],[-5.853844,2.832723,-3.398816,-6.317369],[-4.057848,8.977615,8.328269,-4.817924],[5.448963,-8.594727,0.281133,-9.549927],[-7.978219,1.167427,1.303284,-2.945879],[6.725724,-4.857546,-9.861919,3.855425],[9.694966,-4.045869,4.217664,-9.473434]],[[0.407259,-9.312315,9.476919,-0.965634],[-6.974737,-0.983695,0.987980,-2.112372],[-0.889556,-8.959367,2.080453,5.879785],[-1.040566,3.159059,-7.454475,7.293912],[-5.496670,-8.992705,-6.212146,-7.212541],[5.851089,8.625782,8.571275,2.135505],[-9.879215,-7.898906,7.267704,-4.632104]],[[9.587085,7.548873,5.869484,1.864197],[-8.107039,2.928831,1.371816,6.355059],[7.218654,7.488464,-2.381928,-8.912608],[-5.636144,-5.233160,7.156542,3.993511],[-5.418278,-8.626207,5.986479,-3.510719],[-5.545145,9.296496,0.717223,-5.267413],[2.411477,9.394207,-2.143315,-8.845704]],[[7.975208,-2.500304,9.649069,6.489171],[-2.481085,-3.173539,-3.445109,6.100708],[-0.757319,-6.476493,5.014564,-2.758501],[-6.584659,0.538959,-7.643192,4.186444],[-5.330180,-2.355633,3.740819,-3.903755],[3.981144,-8.219311,4.912101,-4.601447],[-3.294447,6.150050,7.031567,-7.444011]]], dtype = "float32")#candidate|5588|(5, 7, 4)|const|float32
uop_5589 = relay.rsqrt(const_5588.astype('float32')) # shape=(5, 7, 4)
output = relay.Tuple([uop_5589,])
output2 = relay.Tuple([uop_5589,])
func_5593 = relay.Function([], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5594 = func_5593_call()
output = call_5594
func_5595 = relay.Function([], output)
mutated_mod['func_5595'] = func_5595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3954_call = mod.get_global_var('func_3954')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_5605 = relay.TupleGetItem(func_3954_call(), 0)
call_5606 = relay.TupleGetItem(func_3956_call(), 0)
func_5332_call = mod.get_global_var('func_5332')
func_5334_call = mutated_mod.get_global_var('func_5334')
call_5610 = func_5332_call()
call_5611 = func_5332_call()
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
const_5613 = relay.const([-9,-2,5,-10,-10,-5,9,-4,-3,-3,4,-8,-4,-10,-1,9,-3,1,-8,3,9,7,-1,8,-10,9,-9,-2,1,8,-5,4,-7,6,-5,5,8,-1,5,-3,8,-10,-8,-10,4,-10,6,-7,-8,-10,1,-6,7,7,7,-6,-9,-2,9,-5,1,-4,-1,1,3,4,-5,4,-8,-4,1,9,-8,-7,4,-2,9,-3,-6,-10,4,-6,4,2,10,-6,6,1,8,-3,-1,-9,-10,1,-7,-8,6,-1,-3,-2,-9,-6,-6,8,-8,-8,5,-9,2,-4,2,-1,5,1,-6,-5,-3,-9,9,-5,-10,5,-10,2,-6,-10,-8,9,4,-1,2,7,-8,-6,-6,3,-4,3,5,-6,2,1,9,-3,-9,5,-2,-9,-9,-7,-10,10,3,9,-1,-8,3,2,9,-4,10,10,-10,-2,7,-3,-2,-10,8,-10,4,-3,9,-8,-1,-5,-2,2,-5,2,-4,7,-9,10,6,-8,1,-5,7,7,6,10,8,-1,-8,4,-7,9,-10,5,10,6,7,2,-7,-3,-2,2,-8,-2,5,10,7,-9,-10,-4,-10,-4,2,-2,-4,3,-9,-3,-7,3,10,-5,3,-5,10,5,-10,8,2,2,-6,-1,7,2,-10,-5,8,-7,-5,4,-2,5,8,3,-3,8,-9,4,5,-1,1,-5,-9,10,7,-7,-2,10,-8,-10,9,10,-6,-7,10,-8,-7,10,9,7,-5,-6,9,-7,-2,-7,6,10,-4,5,-6,-9,-9,-6,10,-4,-8,-1,8,-3,8,1,9,-8,-8,-1,7,7,8,4,-5,-2,-1,-9,5,-9,-1,-7,-4,7,7,8,7,-9,7,2,4,-4,-9,3,-4,-4,-5,-7,-3,10,-4,3,-2,-6,-6,10,2,-4,-6,2,-1,4,7,-2,-8,2,3,-1,10,5,-6,7,-8,9,-7,-3,-9,-4,-8,9,-1,8,-8,8,-6,3,9,-2,-10,2,-1,-8,1,9,8,-7,-10,-2,6,6,4,-6,1,9,-8,-3,-5,-9,2,-10,-5,1,4,6,5,3,-3,-2,6,10,-2,1,3,-6,10,-5,-4,10,10,-7,-8,-4,-9,7,-8,7,9,7,-2,7,8,-6,-10,10,2,7,-10,-3,7,-2,9,5,1,-10,-7,-2,-8,-9,5,-10,-9,-7,8,-5,1,2,-9,6,2,-3,-2,4,-3,10,-4,-5,7,-9,-3,2,4,-4,4,4,-7,-3,-10,-10,-3,1,1,8,9,3,-4,5,-10,4,10,-7,5,-5,10,9,8,-1,-7,8,-8,9,-9,-1,-5,2,3,10,1,2,-3,-7,1,1,-6,-6,-4,-6,9,-10,2,-10,1,-4,5,8,-7,10,-10,7,-2,10,-8,-6,4,3,-8,-3,-3,5,-3,8,7,-7,1,-5,-9,-8,9,-7,-10,1,5,10,10,-8,8,2,-5,2,-7,8,10,-4,-10,4,-1,-9,-8,6,4,-3,-1,-8,6,-2,-7,-6,6,7,-2,5,5,-2,5,-3,10,-3,-10,7,3,6,4,8,-3,6,-6,-9,-9,8,-6,4,6,9,10,-2,9,-2,2,-3,-7,-2,-3,5,-1,5,3,-7,7,-5,-6,-10,6,8,-4,-5,-1,3,8,-6,-1,8,8,-5,3,-2,8,4,5,-2], dtype = "uint32")#candidate|5613|(630,)|const|uint32
call_5612 = relay.TupleGetItem(func_484_call(relay.reshape(const_5613.astype('uint32'), [14, 9, 5])), 1)
call_5614 = relay.TupleGetItem(func_487_call(relay.reshape(const_5613.astype('uint32'), [14, 9, 5])), 1)
func_5038_call = mod.get_global_var('func_5038')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_5629 = relay.TupleGetItem(func_5038_call(), 1)
call_5630 = relay.TupleGetItem(func_5039_call(), 1)
output = relay.Tuple([call_5605,call_5610,call_5612,const_5613,call_5629,])
output2 = relay.Tuple([call_5606,call_5611,call_5614,const_5613,call_5630,])
func_5639 = relay.Function([], output)
mod['func_5639'] = func_5639
mod = relay.transform.InferType()(mod)
output = func_5639()
func_5640 = relay.Function([], output)
mutated_mod['func_5640'] = func_5640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4067_call = mod.get_global_var('func_4067')
func_4069_call = mutated_mod.get_global_var('func_4069')
call_5651 = relay.TupleGetItem(func_4067_call(), 0)
call_5652 = relay.TupleGetItem(func_4069_call(), 0)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_5658 = func_3643_call()
call_5659 = func_3643_call()
output = relay.Tuple([call_5651,call_5658,])
output2 = relay.Tuple([call_5652,call_5659,])
func_5677 = relay.Function([], output)
mod['func_5677'] = func_5677
mod = relay.transform.InferType()(mod)
output = func_5677()
func_5678 = relay.Function([], output)
mutated_mod['func_5678'] = func_5678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2760_call = mutated_mod.get_global_var('func_2760')
call_5750 = relay.TupleGetItem(func_2758_call(), 1)
call_5751 = relay.TupleGetItem(func_2760_call(), 1)
func_4178_call = mod.get_global_var('func_4178')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_5766 = relay.TupleGetItem(func_4178_call(), 1)
call_5767 = relay.TupleGetItem(func_4179_call(), 1)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_5786 = relay.TupleGetItem(func_3202_call(), 0)
call_5787 = relay.TupleGetItem(func_3204_call(), 0)
var_5798 = relay.var("var_5798", dtype = "float32", shape = (3, 8, 12))#candidate|5798|(3, 8, 12)|var|float32
bop_5799 = relay.bitwise_xor(call_5750.astype('uint8'), relay.reshape(var_5798.astype('uint8'), relay.shape_of(call_5750))) # shape=(3, 8, 12)
bop_5802 = relay.bitwise_xor(call_5751.astype('uint8'), relay.reshape(var_5798.astype('uint8'), relay.shape_of(call_5751))) # shape=(3, 8, 12)
func_5677_call = mod.get_global_var('func_5677')
func_5678_call = mutated_mod.get_global_var('func_5678')
call_5809 = relay.TupleGetItem(func_5677_call(), 0)
call_5810 = relay.TupleGetItem(func_5678_call(), 0)
output = relay.Tuple([call_5766,call_5786,bop_5799,call_5809,])
output2 = relay.Tuple([call_5767,call_5787,bop_5802,call_5810,])
func_5813 = relay.Function([var_5798,], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5814 = relay.var("var_5814", dtype = "float32", shape = (3, 8, 12))#candidate|5814|(3, 8, 12)|var|float32
func_5813_call = mutated_mod.get_global_var('func_5813')
call_5815 = func_5813_call(var_5814)
output = call_5815
func_5816 = relay.Function([var_5814], output)
mutated_mod['func_5816'] = func_5816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5841 = relay.var("var_5841", dtype = "float32", shape = (9, 5, 15))#candidate|5841|(9, 5, 15)|var|float32
uop_5842 = relay.atan(var_5841.astype('float32')) # shape=(9, 5, 15)
output = uop_5842
output2 = uop_5842
func_5851 = relay.Function([var_5841,], output)
mod['func_5851'] = func_5851
mod = relay.transform.InferType()(mod)
var_5852 = relay.var("var_5852", dtype = "float32", shape = (9, 5, 15))#candidate|5852|(9, 5, 15)|var|float32
output = func_5851(var_5852)
func_5853 = relay.Function([var_5852], output)
mutated_mod['func_5853'] = func_5853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3491_call = mod.get_global_var('func_3491')
func_3493_call = mutated_mod.get_global_var('func_3493')
call_5868 = relay.TupleGetItem(func_3491_call(), 1)
call_5869 = relay.TupleGetItem(func_3493_call(), 1)
output = call_5868
output2 = call_5869
func_5880 = relay.Function([], output)
mod['func_5880'] = func_5880
mod = relay.transform.InferType()(mod)
mutated_mod['func_5880'] = func_5880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5880_call = mutated_mod.get_global_var('func_5880')
call_5881 = func_5880_call()
output = call_5881
func_5882 = relay.Function([], output)
mutated_mod['func_5882'] = func_5882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4030_call = mod.get_global_var('func_4030')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_5887 = relay.TupleGetItem(func_4030_call(), 2)
call_5888 = relay.TupleGetItem(func_4031_call(), 2)
func_4961_call = mod.get_global_var('func_4961')
func_4962_call = mutated_mod.get_global_var('func_4962')
call_5894 = func_4961_call()
call_5895 = func_4961_call()
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_5920 = relay.TupleGetItem(func_5593_call(), 0)
call_5921 = relay.TupleGetItem(func_5595_call(), 0)
output = relay.Tuple([call_5887,call_5894,call_5920,])
output2 = relay.Tuple([call_5888,call_5895,call_5921,])
func_5924 = relay.Function([], output)
mod['func_5924'] = func_5924
mod = relay.transform.InferType()(mod)
output = func_5924()
func_5925 = relay.Function([], output)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3408_call = mod.get_global_var('func_3408')
func_3410_call = mutated_mod.get_global_var('func_3410')
call_5999 = relay.TupleGetItem(func_3408_call(), 0)
call_6000 = relay.TupleGetItem(func_3410_call(), 0)
output = call_5999
output2 = call_6000
func_6006 = relay.Function([], output)
mod['func_6006'] = func_6006
mod = relay.transform.InferType()(mod)
output = func_6006()
func_6007 = relay.Function([], output)
mutated_mod['func_6007'] = func_6007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2760_call = mutated_mod.get_global_var('func_2760')
call_6047 = relay.TupleGetItem(func_2758_call(), 3)
call_6048 = relay.TupleGetItem(func_2760_call(), 3)
output = relay.Tuple([call_6047,])
output2 = relay.Tuple([call_6048,])
func_6049 = relay.Function([], output)
mod['func_6049'] = func_6049
mod = relay.transform.InferType()(mod)
output = func_6049()
func_6050 = relay.Function([], output)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6054 = relay.const([[[3.811267,-7.683855,-9.818508,-7.832926,6.554112,-3.956250,3.813656,7.966585,4.136062,4.839045,-0.559370,-1.968335],[-5.918880,-7.245130,-5.564449,1.839979,-7.675972,-7.559659,-5.034001,-1.788221,-0.429350,-9.724586,6.771206,5.927667],[-3.623554,-4.607884,-9.676837,-5.558831,-5.680762,5.531302,-8.912093,-5.007726,8.690649,0.664152,-9.241680,5.715266],[7.762685,-7.671269,4.577932,8.899347,-4.762117,6.173960,-4.240667,3.121390,-0.733013,9.220960,-9.285280,3.277442],[3.351226,2.813062,-2.618205,-7.887340,3.711013,-0.298431,-4.504300,-6.579691,-5.949486,-0.875869,2.671079,6.250108],[-6.287254,6.619400,1.307031,-0.245426,5.463858,-0.659533,4.047162,2.252592,4.935220,6.322834,5.033720,1.494104],[2.752599,2.994612,4.449477,-6.224903,6.995411,-4.869385,1.852177,4.155208,6.235828,-1.687712,-0.592572,8.629933]],[[-7.692155,-9.613174,-9.782308,1.918244,2.399647,5.748375,8.485573,-5.072116,9.623740,0.715527,-1.223801,7.224362],[-0.526428,-9.763664,-1.344624,4.539371,-3.420572,-1.620766,4.828113,2.467001,-9.951320,0.701547,-0.458757,5.769454],[4.600644,-5.809544,2.556834,9.659792,-5.241111,6.928480,4.793094,5.354343,-5.288805,-5.792833,2.070528,-8.599176],[-9.723565,8.019877,5.375931,-0.223382,-8.414292,-0.761589,5.657860,2.900407,0.826754,-8.305553,1.867675,6.448109],[7.041528,1.044170,2.092528,4.489883,-4.330669,-4.571123,8.051626,-2.118397,-9.251704,6.625933,-3.813879,3.591911],[4.168031,-6.245444,8.528561,-9.802332,2.125540,8.178127,5.892555,5.941184,8.262436,-0.536684,-1.285545,-1.262343],[4.749075,-9.437696,1.888842,-4.878359,0.928486,3.693959,-6.105086,-9.406170,-8.734908,-0.545999,-9.433501,9.691720]],[[9.192952,-6.548202,-2.816109,-5.874529,-8.228529,9.569053,-4.809278,9.148343,-4.496214,-1.278651,-0.392618,-4.448621],[-0.615212,5.785575,-5.031004,2.817375,-9.495225,-2.288722,-4.033398,-6.529494,7.066250,-1.265089,9.231321,-2.240703],[5.412845,-4.107960,8.729284,-6.886831,3.823717,-5.734810,-0.964487,-0.010292,5.352250,3.959038,8.656831,-8.844458],[4.004949,2.814520,-6.275788,-6.774875,-2.217503,-1.976121,4.000575,-4.742185,-5.165450,1.683817,-3.372592,8.307019],[-6.236728,7.250709,-9.412721,-9.066675,6.564630,4.799932,0.656072,6.300316,-5.452671,9.514924,-7.685520,9.109261],[-5.379906,5.740089,-9.838481,-3.237184,2.988747,-1.730601,-3.084907,3.714120,-2.181183,9.399409,-3.298113,-4.264234],[-8.858014,-0.126517,9.090706,0.147281,-6.124977,-5.506549,1.975633,7.664911,-6.811134,6.228832,5.310524,-2.930696]],[[3.451474,0.158219,-4.638115,-7.649954,-3.156985,4.833491,-6.859144,8.934228,5.362387,3.365207,6.534516,2.251676],[6.871349,-8.208985,8.259780,-2.902847,-1.884855,-9.114226,6.308405,-4.139890,-1.725162,3.372001,-6.572537,1.185002],[-9.436349,0.762263,-5.204844,-5.006759,7.331477,-9.712701,9.914414,7.385362,-8.530960,5.349677,-7.531951,5.020256],[1.611860,-5.682278,-9.754063,-7.580471,-7.433666,-2.963138,-9.326751,-4.405002,5.471180,8.362599,-2.346933,-3.356010],[-6.874322,-1.110821,9.660795,2.681318,9.464224,0.601926,-5.872999,-7.939604,4.226697,9.123600,6.348250,0.302286],[-6.242131,-7.501985,1.320286,6.029147,-4.389865,-7.403500,-2.183180,-5.061837,4.895128,4.844529,4.990841,3.170627],[-7.717187,8.910771,-0.209867,-4.954312,3.390974,9.164262,6.496214,-9.411399,0.895510,-3.492938,8.516189,0.516634]],[[-6.744125,-8.339677,-0.919499,-1.961644,-4.680310,5.088542,-3.527233,6.037246,-5.575854,-6.588423,9.447577,9.750519],[0.077877,-1.563623,-4.166647,-5.646469,-6.511443,9.104173,-6.665369,4.752971,6.984477,9.217362,-0.499822,4.125583],[-4.522737,9.814309,-5.430649,-9.106479,-7.909312,-1.377222,-2.350992,1.390426,3.308337,2.739176,-5.356841,-6.322814],[5.202174,0.532791,-5.632749,-6.693686,-2.582221,2.076136,-2.301827,-0.105640,-4.384083,-9.880770,5.136847,-6.981755],[-6.922331,-1.103590,-2.373799,-8.240998,2.595536,-3.962971,-2.804679,-3.811875,-1.570168,3.034139,7.121077,8.481600],[0.620456,-6.691921,3.304623,4.634313,-6.167339,-2.248412,7.987831,6.139287,-5.138033,-7.602541,-0.647719,3.034140],[-8.987736,-9.618662,-6.184730,-1.192344,1.662589,6.485096,1.286206,-1.565768,-2.131032,-0.658018,3.944763,-1.447089]],[[4.016390,-8.581699,1.206360,-3.481402,-6.943399,1.498520,-4.590725,-7.387089,-9.983011,-7.708270,6.431046,-6.958484],[4.333360,4.146232,-8.377465,-1.153722,-8.945571,1.301742,-2.778466,-3.502061,-5.184615,-8.577516,8.030292,-4.388858],[-9.359591,2.771704,9.851185,9.676122,-5.083706,1.335904,4.413353,2.990331,-4.004626,5.131186,-2.656903,-6.174071],[-5.524401,-6.476765,7.326529,9.032920,2.562204,4.593825,-8.674629,-8.829699,3.577954,4.270975,5.387440,8.677080],[-1.747545,0.386173,-1.659364,2.626730,-9.834880,-8.860689,0.740563,0.150638,-9.076949,0.550261,8.204955,6.802592],[-4.142962,9.991590,6.024020,5.990936,-3.968426,6.813007,-4.965709,1.896290,-4.898551,8.906952,0.095477,-1.518090],[3.681616,6.941083,1.980923,-3.028402,8.530398,-9.103808,-0.718366,-1.988047,-1.601967,6.656798,3.586951,7.710875]],[[-6.275822,1.804648,3.568161,1.874785,4.704570,2.760784,2.184518,-2.532890,-0.071519,-8.744980,9.700201,0.304094],[-4.301382,-3.735226,0.293127,9.977840,-5.087231,1.409257,-9.326479,5.116846,8.606658,4.928324,-9.776587,-9.606553],[-9.571203,7.434474,7.282183,9.795884,1.820132,8.779807,4.983452,-7.930984,1.826955,5.763265,-0.079608,-5.104692],[4.414228,-8.941109,0.206092,-2.976711,9.608758,3.012381,-0.667607,-6.701423,1.475835,-9.606039,-1.406503,-6.941770],[8.523725,-0.950981,-0.110686,3.747593,-9.520849,0.870212,-4.953133,4.802603,1.865321,5.413018,9.058033,2.102785],[6.885260,4.305675,-5.456760,-8.345765,2.817674,8.284286,4.829584,9.770654,2.019792,4.648209,5.500566,4.565983],[-8.523958,-0.716498,2.774150,-1.381172,-1.916935,-0.221114,7.977495,-7.928191,5.683127,6.884792,-2.706493,-2.087466]],[[1.408880,-1.643822,-6.357143,-8.669569,-0.716240,-1.630627,-4.771888,-1.170132,-7.480104,-3.862922,2.310806,-6.169086],[-1.601491,3.209373,6.473882,-0.703221,-4.852754,1.896284,8.595576,9.329241,-2.557634,5.152668,-6.819931,9.639280],[-7.948495,-8.449027,-7.424952,4.737601,-9.576111,-1.751954,-2.180351,8.426697,2.268101,-6.450802,-5.706923,-2.778190],[3.173740,2.670219,4.068817,1.502135,-0.776526,-3.425473,-6.136616,-8.580453,-6.648133,-2.312057,2.482830,5.453884],[-0.971671,7.826481,4.573118,-2.675797,7.593259,-8.219476,-8.472829,9.276552,-0.931125,-8.227243,6.106763,0.091343],[8.183635,-6.235774,0.150919,3.376501,0.177034,-2.038847,-3.534235,-3.877258,7.365181,-1.774542,-8.469732,-9.382233],[1.106808,2.486516,5.545253,0.272617,2.716151,-3.835820,6.123204,-4.481150,-7.705748,-1.295478,8.119563,1.726642]],[[7.428230,9.811217,8.927432,-6.101103,-8.448739,3.206286,5.714546,-2.839468,-5.044855,0.397509,-1.810807,8.277806],[0.052011,5.223758,-2.440596,8.589704,-8.141213,5.980205,-3.960564,3.957803,8.041732,2.835385,3.421915,2.790836],[-2.442267,1.526886,5.784390,0.017868,-6.439702,6.312297,2.492820,9.601981,8.360162,2.646968,-8.564048,-7.518219],[2.768907,-5.133049,7.619412,5.591416,7.662753,-2.261474,5.468469,9.267143,-6.604649,-7.699522,4.555773,-4.666552],[-7.298667,-6.169916,-9.147658,-1.314025,-6.619604,-5.937023,2.681939,4.075347,-0.892841,4.105466,-9.925031,-9.361355],[7.678830,-4.592366,-7.518036,-9.744844,2.244039,9.840298,2.268305,8.447088,1.136503,-1.548767,9.742132,1.371116],[0.824242,9.919940,7.079807,4.131504,-7.099345,1.106420,-1.128149,7.754738,-7.591857,1.443090,8.618282,-0.907476]],[[-9.254957,1.809698,-4.339027,5.719256,8.272532,2.092846,-9.194832,3.638548,7.273099,2.696158,-8.299555,4.577848],[-3.903935,8.065514,9.663243,-9.319703,-3.824096,-9.423415,-8.790840,-9.406905,-1.066721,-0.276649,-2.749384,-1.672708],[-2.668307,1.994560,-4.924901,9.613418,5.301489,-7.227181,-1.738113,-1.897626,-9.311371,-0.976711,4.047250,-7.135099],[-0.867245,-4.986338,3.809270,-1.013203,7.866682,-0.803958,-7.067330,-0.663310,-1.805416,6.468732,6.283416,2.390112],[-8.578088,-3.642626,1.484987,7.790757,3.799901,-8.875364,-2.307907,-9.085544,7.972615,-7.829810,-3.778047,4.638862],[2.989781,-7.475582,2.522321,3.667711,3.264369,0.124701,-8.179722,-8.161204,-9.109474,-5.437507,-6.280896,-5.569111],[-5.447141,7.366326,4.998312,7.782155,8.691406,1.884611,-8.031625,-2.561575,-0.339347,-9.491234,8.311135,-3.250075]],[[8.665553,-3.172504,8.044408,7.554705,4.405599,1.407326,-1.404496,-7.010727,-9.146162,-2.991602,-8.459956,-7.949492],[-6.674218,5.766091,9.982484,2.703466,4.883907,-0.579560,8.997631,-6.614029,1.618256,0.167468,-1.532044,6.665957],[-2.471021,4.292289,6.290811,7.526209,-0.760954,6.326914,1.907923,8.982077,-6.811040,1.152272,8.526752,2.358658],[6.545281,-1.343782,-1.022133,-7.938769,9.643102,8.970215,4.241251,-2.227873,4.243828,-8.714041,0.994931,3.242290],[9.957892,8.797126,-0.181732,4.927605,1.017829,-1.019385,-4.461953,-3.129951,-5.639881,-8.350111,0.382733,-4.140697],[-8.915217,7.384266,-3.515693,6.222275,6.432200,-3.506149,9.393814,-1.239886,-1.266554,-0.236080,2.982254,-6.616287],[-5.348025,-6.233976,-5.061409,6.586784,6.381434,-0.365780,1.625125,5.754760,-4.102583,1.456073,-8.006435,-3.454746]],[[-8.929669,5.079582,-6.678709,4.332128,-2.146644,-3.473564,-0.522564,6.181601,-3.126493,3.137946,5.679062,-3.474692],[3.955565,-2.626564,2.292577,-7.450484,3.021625,-0.115490,2.264975,8.634440,5.554932,-3.092210,9.217534,5.546681],[5.583340,5.459240,8.844726,-8.524320,7.254628,-8.061577,-3.284959,-4.866441,-7.493216,6.235924,8.289035,2.724778],[-5.121041,-6.685417,7.962012,7.888924,0.593763,-3.465724,-8.108600,2.845531,6.237326,5.888203,-3.339363,0.315886],[-5.548001,-1.712653,2.658095,-4.238968,-0.385107,3.125438,-5.944165,-0.109201,-8.342243,-2.697512,-4.313754,-9.410285],[-7.259491,6.885153,-3.352631,9.785074,9.006466,-3.252117,-8.984353,-5.605983,4.650235,-4.635443,-1.989346,7.640050],[6.693837,8.669398,9.011165,6.584566,7.687649,-5.698872,-5.584866,-4.083679,-5.014490,-8.395155,8.159535,9.979064]],[[5.175537,-6.220764,-4.833257,-0.952439,-3.221006,3.850166,7.063230,1.152334,5.660496,-5.472918,1.806476,1.483383],[1.451867,-2.111869,-0.013204,-2.672954,-3.393766,5.171503,-9.750524,-0.569761,-1.985136,6.435013,8.200559,-4.462233],[-3.685927,-3.100866,-3.822340,9.413205,7.958877,-1.580362,3.629179,4.859040,-0.314683,4.413500,-1.707497,3.190129],[8.621227,1.976673,6.459862,-2.104126,-1.690676,4.734446,-5.378586,1.035135,7.434794,-6.536848,-3.592407,-8.915715],[-3.317147,1.445409,1.821262,4.070013,9.819393,8.218105,8.665459,8.964922,-6.333876,-8.438606,4.850514,4.848015],[9.972646,-0.618717,0.216204,-1.915328,-7.220621,8.960349,-9.266562,-1.931858,3.487955,-4.520392,0.223121,-5.890584],[5.142242,3.328314,-9.820104,1.419297,-1.830516,4.227491,-2.794342,4.930448,-9.115333,-8.292462,-7.358949,-3.201046]],[[3.683584,-0.228135,-0.113413,-4.062939,0.400620,3.482174,-4.247473,7.264439,-9.338596,6.546584,9.950157,8.550469],[1.618627,-1.103119,-0.588623,8.812189,-5.885506,8.540750,-9.090107,-2.634554,2.125736,-2.245529,-2.675708,-3.559040],[-7.942258,1.819486,-4.091415,5.608757,-8.775631,3.044911,0.742673,-9.195234,-6.400903,-5.347844,-2.015593,-3.948220],[-7.713278,4.247694,3.349043,0.947656,4.720693,5.003642,1.985988,4.722787,-6.717576,4.441631,5.630445,7.191656],[3.181120,3.988169,-3.515789,8.057874,-5.585928,1.954665,-0.908741,7.563702,6.316643,5.656923,-0.780277,1.843195],[-8.627675,-8.469918,-7.862155,5.858009,7.907923,5.790825,5.486073,8.435615,-4.862569,0.584234,0.517032,-6.264119],[2.956763,-7.572063,4.788622,-3.403784,-5.190088,4.767277,5.040728,-6.075671,9.330764,-9.092604,-2.311445,-0.815875]],[[0.684559,9.332108,7.140315,7.406181,1.106479,-5.077691,5.937294,-3.114829,2.298973,1.679555,3.595008,6.078270],[0.307201,5.679106,5.593297,-7.998152,9.460850,-2.886900,-2.347562,7.483070,2.713860,-0.072009,-5.087278,-6.731984],[-5.182587,-5.318498,7.488460,4.516916,-9.440575,-1.646420,-4.662435,-1.741917,-0.649719,-0.490804,-7.889429,-5.833193],[9.390311,3.847520,-1.070532,2.222767,3.684279,-6.074736,-5.532022,1.377295,-6.046387,-8.750400,3.743455,-7.311549],[2.420413,-2.011400,-5.271848,9.901459,5.743825,1.055764,-3.608365,-2.451204,8.622064,-9.219051,-4.115511,-7.684061],[3.115063,-2.037646,7.509205,-8.752022,1.583806,-9.665324,-4.354630,-3.319639,-1.079652,6.736786,-8.682045,-0.147373],[-6.349434,7.554057,4.078422,5.027542,9.651080,6.660435,-4.271977,2.204604,-0.996282,0.409126,-4.843297,-8.591856]],[[9.494253,6.294618,6.638892,2.324880,0.928327,7.002469,-0.992927,0.062603,-8.533537,-6.724888,8.836332,-8.419398],[-8.783161,-1.923258,6.418314,3.288199,-7.041344,9.132378,5.601676,9.682098,6.307400,3.198092,6.070823,2.786400],[5.760716,-2.173080,-0.815859,-7.903811,-3.136917,5.345905,3.864074,-7.027359,5.014471,2.126108,2.838240,5.769539],[5.523337,-3.885721,-0.153610,-9.839456,-4.769456,-5.893196,-4.329707,4.067543,1.531953,-7.600796,8.225661,-9.036522],[-5.688932,1.675362,-9.037805,0.746626,7.903682,-5.040578,9.236520,0.798048,8.542191,-5.279463,-5.364286,-0.691249],[-9.968404,-2.412087,9.177580,8.503429,7.747561,9.981045,1.698965,3.871678,2.300721,-8.659810,1.549617,-9.620847],[2.489818,-3.543346,-6.956715,4.502625,7.822488,-0.706782,-4.731104,7.411290,8.665606,3.204740,4.485007,5.587891]]], dtype = "float32")#candidate|6054|(16, 7, 12)|const|float32
uop_6055 = relay.sin(const_6054.astype('float32')) # shape=(16, 7, 12)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_6063 = relay.TupleGetItem(func_3202_call(), 0)
call_6064 = relay.TupleGetItem(func_3204_call(), 0)
func_4829_call = mod.get_global_var('func_4829')
func_4830_call = mutated_mod.get_global_var('func_4830')
call_6069 = relay.TupleGetItem(func_4829_call(), 0)
call_6070 = relay.TupleGetItem(func_4830_call(), 0)
func_4911_call = mod.get_global_var('func_4911')
func_4913_call = mutated_mod.get_global_var('func_4913')
var_6076 = relay.var("var_6076", dtype = "uint8", shape = (100,))#candidate|6076|(100,)|var|uint8
call_6075 = func_4911_call(relay.reshape(var_6076.astype('uint8'), [10, 2, 5]))
call_6077 = func_4911_call(relay.reshape(var_6076.astype('uint8'), [10, 2, 5]))
func_5038_call = mod.get_global_var('func_5038')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_6080 = relay.TupleGetItem(func_5038_call(), 2)
call_6081 = relay.TupleGetItem(func_5039_call(), 2)
output = relay.Tuple([uop_6055,call_6063,call_6069,call_6075,var_6076,call_6080,])
output2 = relay.Tuple([uop_6055,call_6064,call_6070,call_6077,var_6076,call_6081,])
func_6086 = relay.Function([var_6076,], output)
mod['func_6086'] = func_6086
mod = relay.transform.InferType()(mod)
var_6087 = relay.var("var_6087", dtype = "uint8", shape = (100,))#candidate|6087|(100,)|var|uint8
output = func_6086(var_6087)
func_6088 = relay.Function([var_6087], output)
mutated_mod['func_6088'] = func_6088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3787_call = mod.get_global_var('func_3787')
func_3788_call = mutated_mod.get_global_var('func_3788')
call_6104 = relay.TupleGetItem(func_3787_call(), 0)
call_6105 = relay.TupleGetItem(func_3788_call(), 0)
output = call_6104
output2 = call_6105
func_6110 = relay.Function([], output)
mod['func_6110'] = func_6110
mod = relay.transform.InferType()(mod)
output = func_6110()
func_6111 = relay.Function([], output)
mutated_mod['func_6111'] = func_6111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3465_call = mod.get_global_var('func_3465')
func_3466_call = mutated_mod.get_global_var('func_3466')
call_6135 = relay.TupleGetItem(func_3465_call(), 0)
call_6136 = relay.TupleGetItem(func_3466_call(), 0)
func_5851_call = mod.get_global_var('func_5851')
func_5853_call = mutated_mod.get_global_var('func_5853')
var_6138 = relay.var("var_6138", dtype = "float32", shape = (675,))#candidate|6138|(675,)|var|float32
call_6137 = func_5851_call(relay.reshape(var_6138.astype('float32'), [9, 5, 15]))
call_6139 = func_5851_call(relay.reshape(var_6138.astype('float32'), [9, 5, 15]))
output = relay.Tuple([call_6135,call_6137,var_6138,])
output2 = relay.Tuple([call_6136,call_6139,var_6138,])
func_6152 = relay.Function([var_6138,], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6153 = relay.var("var_6153", dtype = "float32", shape = (675,))#candidate|6153|(675,)|var|float32
func_6152_call = mutated_mod.get_global_var('func_6152')
call_6154 = func_6152_call(var_6153)
output = call_6154
func_6155 = relay.Function([var_6153], output)
mutated_mod['func_6155'] = func_6155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5376_call = mod.get_global_var('func_5376')
func_5377_call = mutated_mod.get_global_var('func_5377')
call_6165 = func_5376_call()
call_6166 = func_5376_call()
uop_6175 = relay.sqrt(call_6165.astype('float32')) # shape=(3, 8, 12)
uop_6177 = relay.sqrt(call_6166.astype('float32')) # shape=(3, 8, 12)
func_3491_call = mod.get_global_var('func_3491')
func_3493_call = mutated_mod.get_global_var('func_3493')
call_6186 = relay.TupleGetItem(func_3491_call(), 1)
call_6187 = relay.TupleGetItem(func_3493_call(), 1)
output = relay.Tuple([uop_6175,call_6186,])
output2 = relay.Tuple([uop_6177,call_6187,])
func_6188 = relay.Function([], output)
mod['func_6188'] = func_6188
mod = relay.transform.InferType()(mod)
output = func_6188()
func_6189 = relay.Function([], output)
mutated_mod['func_6189'] = func_6189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6239 = relay.var("var_6239", dtype = "float32", shape = (11, 8, 11))#candidate|6239|(11, 8, 11)|var|float32
var_6240 = relay.var("var_6240", dtype = "float32", shape = (11, 8, 11))#candidate|6240|(11, 8, 11)|var|float32
bop_6241 = relay.greater(var_6239.astype('bool'), relay.reshape(var_6240.astype('bool'), relay.shape_of(var_6239))) # shape=(11, 8, 11)
var_6246 = relay.var("var_6246", dtype = "float32", shape = (11, 8, 11))#candidate|6246|(11, 8, 11)|var|float32
bop_6247 = relay.floor_mod(var_6239.astype('float64'), relay.reshape(var_6246.astype('float64'), relay.shape_of(var_6239))) # shape=(11, 8, 11)
output = relay.Tuple([bop_6241,bop_6247,])
output2 = relay.Tuple([bop_6241,bop_6247,])
func_6270 = relay.Function([var_6239,var_6240,var_6246,], output)
mod['func_6270'] = func_6270
mod = relay.transform.InferType()(mod)
mutated_mod['func_6270'] = func_6270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6270_call = mutated_mod.get_global_var('func_6270')
var_6272 = relay.var("var_6272", dtype = "float32", shape = (11, 8, 11))#candidate|6272|(11, 8, 11)|var|float32
var_6273 = relay.var("var_6273", dtype = "float32", shape = (11, 8, 11))#candidate|6273|(11, 8, 11)|var|float32
var_6274 = relay.var("var_6274", dtype = "float32", shape = (11, 8, 11))#candidate|6274|(11, 8, 11)|var|float32
call_6271 = func_6270_call(var_6272,var_6273,var_6274,)
output = call_6271
func_6275 = relay.Function([var_6272,var_6273,var_6274,], output)
mutated_mod['func_6275'] = func_6275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3787_call = mod.get_global_var('func_3787')
func_3788_call = mutated_mod.get_global_var('func_3788')
call_6288 = relay.TupleGetItem(func_3787_call(), 0)
call_6289 = relay.TupleGetItem(func_3788_call(), 0)
output = relay.Tuple([call_6288,])
output2 = relay.Tuple([call_6289,])
func_6297 = relay.Function([], output)
mod['func_6297'] = func_6297
mod = relay.transform.InferType()(mod)
output = func_6297()
func_6298 = relay.Function([], output)
mutated_mod['func_6298'] = func_6298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5313_call = mod.get_global_var('func_5313')
func_5315_call = mutated_mod.get_global_var('func_5315')
call_6331 = relay.TupleGetItem(func_5313_call(), 0)
call_6332 = relay.TupleGetItem(func_5315_call(), 0)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
const_6361 = relay.const([True,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True], dtype = "bool")#candidate|6361|(2112,)|const|bool
call_6360 = relay.TupleGetItem(func_3754_call(relay.reshape(const_6361.astype('bool'), [528, 4])), 9)
call_6362 = relay.TupleGetItem(func_3756_call(relay.reshape(const_6361.astype('bool'), [528, 4])), 9)
output = relay.Tuple([call_6331,call_6360,const_6361,])
output2 = relay.Tuple([call_6332,call_6362,const_6361,])
func_6371 = relay.Function([], output)
mod['func_6371'] = func_6371
mod = relay.transform.InferType()(mod)
mutated_mod['func_6371'] = func_6371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6371_call = mutated_mod.get_global_var('func_6371')
call_6372 = func_6371_call()
output = call_6372
func_6373 = relay.Function([], output)
mutated_mod['func_6373'] = func_6373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6413 = relay.var("var_6413", dtype = "float64", shape = (10, 13, 12))#candidate|6413|(10, 13, 12)|var|float64
uop_6414 = relay.atan(var_6413.astype('float64')) # shape=(10, 13, 12)
output = relay.Tuple([uop_6414,])
output2 = relay.Tuple([uop_6414,])
func_6419 = relay.Function([var_6413,], output)
mod['func_6419'] = func_6419
mod = relay.transform.InferType()(mod)
var_6420 = relay.var("var_6420", dtype = "float64", shape = (10, 13, 12))#candidate|6420|(10, 13, 12)|var|float64
output = func_6419(var_6420)
func_6421 = relay.Function([var_6420], output)
mutated_mod['func_6421'] = func_6421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_6433 = relay.TupleGetItem(func_5593_call(), 0)
call_6434 = relay.TupleGetItem(func_5595_call(), 0)
func_2919_call = mod.get_global_var('func_2919')
func_2921_call = mutated_mod.get_global_var('func_2921')
call_6435 = func_2919_call()
call_6436 = func_2919_call()
func_6297_call = mod.get_global_var('func_6297')
func_6298_call = mutated_mod.get_global_var('func_6298')
call_6437 = relay.TupleGetItem(func_6297_call(), 0)
call_6438 = relay.TupleGetItem(func_6298_call(), 0)
output = relay.Tuple([call_6433,call_6435,call_6437,])
output2 = relay.Tuple([call_6434,call_6436,call_6438,])
func_6442 = relay.Function([], output)
mod['func_6442'] = func_6442
mod = relay.transform.InferType()(mod)
mutated_mod['func_6442'] = func_6442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6442_call = mutated_mod.get_global_var('func_6442')
call_6443 = func_6442_call()
output = call_6443
func_6444 = relay.Function([], output)
mutated_mod['func_6444'] = func_6444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5201_call = mod.get_global_var('func_5201')
func_5203_call = mutated_mod.get_global_var('func_5203')
call_6594 = relay.TupleGetItem(func_5201_call(), 0)
call_6595 = relay.TupleGetItem(func_5203_call(), 0)
func_4911_call = mod.get_global_var('func_4911')
func_4913_call = mutated_mod.get_global_var('func_4913')
const_6600 = relay.const([-1,-1,1,9,3,-1,4,4,10,2,4,10,-5,-6,-5,-10,-9,1,2,-4,-1,3,-8,-1,-2,-8,4,2,7,10,5,6,-8,6,10,4,-4,9,3,-2,2,-1,-10,-6,9,8,-5,-7,-5,2,2,7,4,-10,3,-3,-4,1,-5,2,4,-9,-6,1,-1,5,2,1,-7,4,5,-6,10,-4,6,-3,5,9,-10,1,5,7,9,3,1,7,-5,-8,2,-1,9,9,6,5,10,7,3,5,4,-9], dtype = "uint8")#candidate|6600|(100,)|const|uint8
call_6599 = func_4911_call(relay.reshape(const_6600.astype('uint8'), [10, 2, 5]))
call_6601 = func_4911_call(relay.reshape(const_6600.astype('uint8'), [10, 2, 5]))
func_5851_call = mod.get_global_var('func_5851')
func_5853_call = mutated_mod.get_global_var('func_5853')
const_6624 = relay.const([7.894610,5.172784,-0.787993,9.642046,5.941687,-1.434310,0.995899,-9.238341,2.681030,2.242127,3.046759,-1.076443,9.803703,4.739231,5.950484,-6.463505,-3.980846,-8.801276,-3.671489,5.801142,-9.626830,-0.221415,4.437099,-8.555799,0.698347,-2.228262,7.176872,-1.493102,9.744659,3.484247,-2.698366,-7.906700,-2.218444,4.848027,-8.879609,-8.084733,-2.361207,-3.323001,6.657358,7.434362,-5.202812,-0.190334,-5.075262,-1.637057,-5.594251,6.366189,-6.555536,8.043515,-3.921702,9.344037,1.965166,-2.246124,-2.680972,3.025672,4.171491,-8.840899,-9.367714,9.222528,9.416247,1.612265,9.492473,5.123186,-9.710652,-5.268213,5.067177,1.012156,6.467924,2.397199,-1.930567,-9.003667,6.839234,-4.877835,5.670389,-6.749404,7.348194,-4.111297,-1.329185,-7.501056,-0.112412,-9.829126,-9.384916,-4.864806,3.138591,-4.328863,-4.409777,5.663017,1.068584,1.284893,4.935431,-7.237692,4.095121,4.667765,-6.275746,-0.556430,7.339668,-6.543353,-0.284156,1.387313,-0.665790,-0.369373,-1.578318,-6.660582,1.422628,-3.318003,-2.478084,6.004639,5.081616,5.307762,4.778325,-1.903764,-3.343990,-2.606181,7.744343,-2.047959,6.355781,-6.230771,-3.751961,-2.269963,8.764287,-2.718526,9.526714,9.701037,9.571980,-2.234090,4.853122,6.170133,6.986683,-7.617923,6.523714,5.219701,2.760922,0.201929,-6.749108,9.278398,-4.463556,1.416230,-3.018869,4.016813,-1.474143,-6.468771,-4.105059,9.841260,4.134688,9.987813,5.927925,-8.580664,-1.448290,-4.993747,9.141672,-8.388719,-3.235273,8.721202,8.444388,-0.110553,-6.365651,6.200439,-6.253895,-8.335422,-0.901474,-5.681219,-3.683270,4.659500,-3.849466,-9.131117,6.210009,-5.845831,-7.707381,-5.578685,-6.197985,9.918524,2.876459,1.138540,-8.407423,-8.719549,3.103522,-7.826917,6.017347,9.277752,6.808059,7.568721,-7.075079,-9.100059,2.704929,-6.112954,3.153304,-1.936125,-5.012451,-0.011523,4.794050,-8.346892,-4.376144,4.350022,-7.025980,7.820988,-4.663775,-6.630281,-9.747559,5.979541,-1.189655,9.396237,-5.196042,-9.913666,-7.633318,9.925663,9.586303,-8.804360,-3.626898,1.463862,-2.208247,-9.979339,0.239627,-4.732424,-4.958854,5.129421,9.983886,-5.125867,-7.203024,1.949762,-0.631666,0.821154,-6.131890,4.015629,4.712703,0.282990,7.476576,-6.071586,-3.766299,7.060478,-9.875726,3.286017,5.084673,6.586200,0.336024,-6.681655,2.203583,1.380709,-4.149141,-4.978325,-5.989498,2.681496,-0.129172,-3.615105,-9.394355,4.669684,1.549225,9.645203,-6.955253,-6.866227,6.651617,6.178428,-0.691026,-9.506995,7.602202,-3.176035,-6.833287,-7.597457,0.171003,9.400884,-9.358299,9.540636,-2.436454,-1.278081,8.894141,-8.777265,-4.654230,-3.753294,-8.031066,2.643091,8.378520,3.400497,2.824392,-0.875896,7.878204,2.074098,-5.380709,3.932275,9.039938,-1.013741,-6.514036,0.368819,-3.493028,-0.539645,-9.254643,0.079936,0.663251,7.271405,-0.134646,-8.426946,0.783445,6.897792,-2.208479,-7.192026,-3.774176,-4.756233,2.186926,4.796177,5.980742,0.440561,4.625630,-6.114159,9.106728,-4.816983,4.845201,5.440886,-3.164711,3.217121,2.297944,-3.073356,-9.983730,8.784597,-3.827006,0.021925,-5.911583,1.874696,0.658863,-1.362873,3.089847,-8.611343,9.302553,8.850316,-4.340944,-3.770860,0.592054,-3.439042,-0.650958,8.493147,-7.525933,-0.939080,6.836304,1.396656,1.305305,-8.156465,-6.393293,-7.598698,-9.029250,1.733395,-4.288350,0.426527,-2.650684,3.803785,0.844328,2.713383,4.150496,-5.160782,2.369358,-4.698594,2.121921,4.802374,4.440977,-7.517401,4.993376,6.649248,4.133208,8.542718,-4.512882,-3.962085,-5.085444,1.478848,-8.300348,-3.034148,4.799417,-8.391800,1.797884,-0.478685,7.094774,5.945995,-3.012927,-1.148294,4.105611,1.364558,-4.305481,8.108233,1.292907,0.940097,-9.774918,6.301948,-0.571535,-0.931430,8.493808,-3.997958,6.389160,-4.945693,-1.069752,-3.058644,-0.677733,7.204857,9.424863,1.857750,-8.700470,-1.396464,3.883534,-8.755351,-0.630023,4.294768,-8.654671,-4.883716,5.605434,3.889474,-1.146038,6.394052,-0.657043,2.030892,0.720338,-1.877808,7.546361,-9.278792,7.572303,-0.824035,-9.981879,6.341525,-4.085612,-7.202006,-8.947884,8.305395,7.684063,-5.311615,-3.797794,-0.078356,-5.436453,7.681598,8.846727,-3.099378,-4.193033,-5.614565,8.743164,1.985542,-3.342091,1.189852,-6.616597,8.543955,-6.254509,0.598496,9.771649,-3.676207,-1.088718,-1.267340,-8.160370,-3.701077,9.790398,1.215693,3.140269,-0.780280,-6.908393,-3.898135,9.505707,0.783490,3.395819,-0.833786,-2.184242,6.173022,-0.818395,-3.796834,-9.951840,2.876342,-7.857581,-9.338201,-8.768961,4.359462,9.156160,5.017914,6.533926,-8.520293,0.199209,4.560901,9.275699,-2.219565,-5.496178,-9.168071,-9.452638,6.874734,-2.046061,-8.319072,-2.001132,-7.381881,6.463381,-7.763133,-9.828401,-5.332373,0.801130,0.301935,-6.547863,-7.541978,-5.672294,8.358953,9.597285,5.054069,0.884921,-1.699962,7.456938,1.598071,-0.690206,6.377253,-5.965575,-5.214844,-7.368998,-7.929590,5.531506,4.173065,-0.791756,-4.423760,7.526252,7.408192,4.752558,6.789072,-5.068425,-9.958735,-7.709767,8.304015,3.150187,5.752429,4.385182,-8.431184,-5.855465,9.385987,-9.415380,-7.397540,2.548130,-6.605975,6.198368,-6.289526,-9.369379,-0.915992,-5.251401,8.604787,1.289052,5.834243,2.502591,-4.422181,-8.069651,-0.420191,0.119720,-7.351546,-8.571920,-9.856632,-6.141920,-7.566365,9.060476,-9.195586,-0.212260,8.485248,-4.352087,1.304323,-1.263675,8.307479,0.829399,2.165131,4.336176,6.891318,9.404157,3.051985,-8.672634,-1.354247,8.999233,-0.873570,6.940491,8.689203,-9.112055,7.200561,-4.634701,9.139106,-9.870121,8.497612,9.820686,0.291908,-7.213701,-2.732128,-8.213886,-3.377756,7.947214,-1.231784,-6.593897,-6.993357,-0.401795,5.478683,8.733123,-8.481947,5.396221,2.196695,-9.027135,2.398639,4.363434,-5.743091,3.574534,5.568788,1.781350,0.832761,-7.500881,-2.626789,2.430950,7.312318,0.700136,-0.880387,7.074365,1.491925,-2.488282,-0.277761,-3.611179,-0.111535,2.979339,0.586355,0.767242,-7.366987,-6.650460,-1.430454,-7.685807,-7.731029,9.329081,3.605341,-4.115861,-3.197531,2.380109,5.574761,2.852283,1.722589,0.294171,7.290630,5.756804,-8.558669,9.525988,3.730332,8.198999,0.805405,-9.311478,3.617394,4.628485,-7.470556,5.552711,-1.981510,5.449307,3.530342,-3.033569,2.914595,3.662380,-2.692407,-2.796591,-0.740816,4.918714,-4.961406,-2.152942,0.994158,7.390262,4.254688,1.127672,-9.500913,1.560772,8.513237,-4.282400,-2.509577,8.847418,-2.504861,-1.478663,5.982607,-9.184119,-3.773254,3.496022,-3.931561,2.634445,6.210541,-9.659386,9.001619,-8.227805,3.814561,3.969200,-9.093680,-4.855297,-8.906699,4.907515,9.645195,2.280114,1.939710,8.919736,5.105877,9.083094,1.124342,-2.415989], dtype = "float32")#candidate|6624|(675,)|const|float32
call_6623 = func_5851_call(relay.reshape(const_6624.astype('float32'), [9, 5, 15]))
call_6625 = func_5851_call(relay.reshape(const_6624.astype('float32'), [9, 5, 15]))
func_6086_call = mod.get_global_var('func_6086')
func_6088_call = mutated_mod.get_global_var('func_6088')
call_6631 = relay.TupleGetItem(func_6086_call(relay.reshape(call_6599.astype('uint8'), [100,])), 0)
call_6632 = relay.TupleGetItem(func_6088_call(relay.reshape(call_6599.astype('uint8'), [100,])), 0)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_6636 = relay.TupleGetItem(func_3667_call(), 2)
call_6637 = relay.TupleGetItem(func_3669_call(), 2)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_6649 = relay.TupleGetItem(func_4879_call(), 0)
call_6650 = relay.TupleGetItem(func_4881_call(), 0)
func_3787_call = mod.get_global_var('func_3787')
func_3788_call = mutated_mod.get_global_var('func_3788')
call_6651 = relay.TupleGetItem(func_3787_call(), 0)
call_6652 = relay.TupleGetItem(func_3788_call(), 0)
func_1998_call = mod.get_global_var('func_1998')
func_2000_call = mutated_mod.get_global_var('func_2000')
call_6677 = func_1998_call(relay.reshape(call_6649.astype('float32'), [3, 8, 12]))
call_6678 = func_1998_call(relay.reshape(call_6649.astype('float32'), [3, 8, 12]))
output = relay.Tuple([call_6594,call_6599,const_6600,call_6623,const_6624,call_6631,call_6636,call_6649,call_6651,call_6677,])
output2 = relay.Tuple([call_6595,call_6601,const_6600,call_6625,const_6624,call_6632,call_6637,call_6650,call_6652,call_6678,])
func_6683 = relay.Function([], output)
mod['func_6683'] = func_6683
mod = relay.transform.InferType()(mod)
mutated_mod['func_6683'] = func_6683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6683_call = mutated_mod.get_global_var('func_6683')
call_6684 = func_6683_call()
output = call_6684
func_6685 = relay.Function([], output)
mutated_mod['func_6685'] = func_6685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5376_call = mod.get_global_var('func_5376')
func_5377_call = mutated_mod.get_global_var('func_5377')
call_6753 = func_5376_call()
call_6754 = func_5376_call()
output = relay.Tuple([call_6753,])
output2 = relay.Tuple([call_6754,])
func_6760 = relay.Function([], output)
mod['func_6760'] = func_6760
mod = relay.transform.InferType()(mod)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mutated_mod.get_global_var('func_6760')
call_6761 = func_6760_call()
output = call_6761
func_6762 = relay.Function([], output)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4704_call = mod.get_global_var('func_4704')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_6906 = relay.TupleGetItem(func_4704_call(), 0)
call_6907 = relay.TupleGetItem(func_4705_call(), 0)
output = relay.Tuple([call_6906,])
output2 = relay.Tuple([call_6907,])
func_6910 = relay.Function([], output)
mod['func_6910'] = func_6910
mod = relay.transform.InferType()(mod)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6910_call = mutated_mod.get_global_var('func_6910')
call_6911 = func_6910_call()
output = call_6911
func_6912 = relay.Function([], output)
mutated_mod['func_6912'] = func_6912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5924_call = mod.get_global_var('func_5924')
func_5925_call = mutated_mod.get_global_var('func_5925')
call_6958 = relay.TupleGetItem(func_5924_call(), 2)
call_6959 = relay.TupleGetItem(func_5925_call(), 2)
func_2897_call = mod.get_global_var('func_2897')
func_2900_call = mutated_mod.get_global_var('func_2900')
const_6974 = relay.const([1.160478,8.632526,-8.760566,5.049662,-2.538566,9.908390,-2.613383,7.648831,-9.425296,6.510973,-7.168419,-0.673168,4.388612,-4.246765,0.641308,2.222892,0.413349,-4.406632,6.297368,3.042752,0.745867,-8.513930,3.437454,-1.226958,6.948181,-5.493129,-8.947591,9.018072,-8.848695,-8.665042,6.716852,-7.490719,6.305494,-2.483229,-4.099394,-2.108927,-0.401190,1.163939,-2.182360,3.648211,-4.469580,0.108566,-3.588862,-4.058037,2.030525,-4.036729,-1.335533,2.287068,9.929532,-5.234468,-4.762279,2.436567,-9.296471,-5.665664,8.811632,-5.571656,-5.474817,-8.931288,-6.215891,8.419107,0.058961,-4.668578,-1.152060,4.143038,5.131843,9.535082,-1.012916,-0.587912,7.884437,-1.108581,-4.765516,-6.727828,-9.914846,6.339608,-7.026788,-4.408730,0.527649,5.163637,7.992525,0.127546,3.258708,-4.054502,-0.566460,-2.785320,5.684298,-9.177761,4.059972,-9.285433,2.421925,2.238507,-2.159792,4.642408,-0.317865,5.409256,-4.164703,5.115885,5.308720,9.407172,-1.551190,-8.692237,-0.404164,-0.713275,4.613920,-9.304202,-7.207435,-9.911002,3.171916,-8.047758,9.851732,5.978045,8.257929,6.159007,-3.803654,-5.669281,-9.157318,4.269043,9.814707,-6.125152,-3.588455,6.729085,-1.583892,-3.704767,4.016160,-7.588201,-5.862263,-6.800362,-4.995504,8.717653,5.965157,8.207351,-5.694220,-8.658931,-4.748096,-7.715423,2.162936,-0.382709,-5.821777,-0.056254,7.843712,-8.147800,-0.060577,5.227342,-7.669710,-5.339442,-4.250840,3.261846,-0.410724,-7.095615,-8.531648,4.931759,-6.790456,-8.830551,-9.513812,0.031499,6.773458,-0.768186,-9.468608,-2.388782,-4.343036,-5.844493,-9.790561,6.929518,-0.356681,-5.539096,-8.088623,-9.412657,8.262544,9.436904,3.663120,3.915919,-6.313905,8.360668,-6.046337,9.362055,-9.820617,8.738115,6.972551,4.251130,7.878246,4.552329,5.472702,-2.483812,-6.913844,2.436437,-6.287855,-8.024661,-4.605408,-7.700396,5.562553,6.948158,7.859886,-1.186559,6.530685,-7.461573,5.939415,-8.110626,-4.907381,0.215456,2.020455,-8.887610,-5.739991,-2.005216,-6.144102,5.802272,2.830447,1.762791,0.656021,6.653771,0.752093,1.862456,4.289557,-1.352467,2.182938,-3.771326,-6.073430,-5.086846,2.577662,4.087383,8.057591,4.285004,4.717230,-4.068469,3.488160,5.973186,9.506943,3.891175,-8.201467,-1.753983,-0.836699,-4.728972,-1.120065,9.740144,-6.714271,5.088860,0.266820,-0.338636,-8.493536,6.669165,-0.976047,-4.405563,-3.661246,1.832598,3.869604,-2.998830,-3.801959,-4.152152,1.827265,1.503701,-8.878623,-4.979394,5.390649,-7.886153,5.362684,5.008454,-2.495629,2.670209,-6.727470,-8.249249,8.816504,6.493544,7.445127,-3.516530,1.924245,-6.459692,-9.640732,7.954064,3.842254,3.029014,0.706181,3.841434,9.309289,-8.182162,4.574277,9.368511,7.378991,-6.724122,7.201990,-0.104553,-1.635239,-0.641558,1.161767,1.753666,-0.503015,1.968363,3.184742,3.448423,6.131582,-0.774422,-5.131146,0.557042,-3.937917,5.770759,-1.147058,-9.914984,-2.895066,-5.740791,-2.371618,5.660261,-0.848843,4.937396,6.388790,-1.698866,-6.213651,0.198375,1.469781,6.019918,-7.619625,8.541469,-0.488209,-9.388953,-6.945742,-6.515441,-4.566775,1.336005,-3.434042,-3.536572,-1.617543,-1.332426,-7.710699,3.619282,2.585328,4.034921,4.300512,-4.324757,6.271680,8.900696,9.279995,-3.843971,0.821405,2.628349,-1.778163,6.487531,-7.568862,-7.454354,3.248003,-8.372964,-1.412754,-2.726565,-5.724246,2.527384,5.025639,-7.304647,-7.369600,-3.997258,-5.784889,7.300871,-9.826412,0.451445,-5.442353,0.242982,-7.668362,-5.049327,8.157060,-4.963893,-1.920500,1.890202,-8.702732,-4.290796,1.782742,-6.169511], dtype = "float64")#candidate|6974|(360,)|const|float64
call_6973 = relay.TupleGetItem(func_2897_call(relay.reshape(const_6974.astype('float64'), [8, 3, 15])), 1)
call_6975 = relay.TupleGetItem(func_2900_call(relay.reshape(const_6974.astype('float64'), [8, 3, 15])), 1)
var_6976 = relay.var("var_6976", dtype = "float32", shape = (5, 7, 4))#candidate|6976|(5, 7, 4)|var|float32
bop_6977 = relay.minimum(call_6958.astype('uint8'), relay.reshape(var_6976.astype('uint8'), relay.shape_of(call_6958))) # shape=(5, 7, 4)
bop_6980 = relay.minimum(call_6959.astype('uint8'), relay.reshape(var_6976.astype('uint8'), relay.shape_of(call_6959))) # shape=(5, 7, 4)
output = relay.Tuple([call_6973,const_6974,bop_6977,])
output2 = relay.Tuple([call_6975,const_6974,bop_6980,])
func_6983 = relay.Function([var_6976,], output)
mod['func_6983'] = func_6983
mod = relay.transform.InferType()(mod)
mutated_mod['func_6983'] = func_6983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6984 = relay.var("var_6984", dtype = "float32", shape = (5, 7, 4))#candidate|6984|(5, 7, 4)|var|float32
func_6983_call = mutated_mod.get_global_var('func_6983')
call_6985 = func_6983_call(var_6984)
output = call_6985
func_6986 = relay.Function([var_6984], output)
mutated_mod['func_6986'] = func_6986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6683_call = mod.get_global_var('func_6683')
func_6685_call = mutated_mod.get_global_var('func_6685')
call_7026 = relay.TupleGetItem(func_6683_call(), 9)
call_7027 = relay.TupleGetItem(func_6685_call(), 9)
func_4067_call = mod.get_global_var('func_4067')
func_4069_call = mutated_mod.get_global_var('func_4069')
call_7039 = relay.TupleGetItem(func_4067_call(), 0)
call_7040 = relay.TupleGetItem(func_4069_call(), 0)
output = relay.Tuple([call_7026,call_7039,])
output2 = relay.Tuple([call_7027,call_7040,])
func_7074 = relay.Function([], output)
mod['func_7074'] = func_7074
mod = relay.transform.InferType()(mod)
mutated_mod['func_7074'] = func_7074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7074_call = mutated_mod.get_global_var('func_7074')
call_7075 = func_7074_call()
output = call_7075
func_7076 = relay.Function([], output)
mutated_mod['func_7076'] = func_7076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_7094 = func_3074_call()
call_7095 = func_3074_call()
func_2559_call = mod.get_global_var('func_2559')
func_2561_call = mutated_mod.get_global_var('func_2561')
const_7099 = relay.const([-9,7,9,6,-9,-2,9,5,8,1,-4,-1,-7,9,5,4,-6,-3,6,-5,-10,3,8,-7,1,4,8,-8,-8,9,-8,9,-3,-7,10,5,-10,7,-6,6,-6,-1,-10,9,7,-3,-10,-8,-3,-3,-6,2,7,-6,6,10,-6,6,3,4,-1,4,-9,6,7,6,-6,-1,-10,5,1,-9,10,3,-1,3,5,-5,2,-8,-1,-4,3,-9,4,-8,-1,2,-2,-5,1,5,7,-8,-1,10,1,6,-1,6,3,10,10,-5,4,-3,8,-9,-8,-4,5,1,-7,-1,-4,-4,10,-10,4,3,7,-5,6,10,4,4,-9,7,-2,4,5,4,10,6,-1,-5,6,1,-5,7,6,-9,6,1,-6,5,-3,-7,-3,8,-3,-10,3,3,6,-7,3,7,4,9,-5,3,3,10,4,-2,2,-6,-7,3,10,6,-8,3,3,1,-6,5,-4,-7,-4,7,-3,1,3,1,-5,-7,2,-6,3,4,-4,1,3,-8,7,2,-8,7,-8,5,5,-10,-5,3,-4,7,5,7,6,-8,-1,-2,-5,10,-9,-9,-8,-3,-5,-1,5,-8,6,2,-1,4,1,8,-6,9,5,10,-7,6,-1,-3,-7,-7,-4,-4,7,4,-5,-4,-3,6,1,1,1,1,6,-8,-3,-5,-4,-2,8,-1,-10,-4,5,1,8,-5,-9,2,-10,-8,5,-4,2,-2,-3,3,-7,8,-1,-10,-9,9,-3,3,1,-10,5,-7,-9,-7,-3,8,1,2,7,8,-6,5,-8,-5,-10,-7,-7,1,-5,-10,1,6,8,-2,1,10,-9,-9,5,-5,-8,-9,-7,5,-9,10,-5,-1,-6,5,-5,5,1,-2,-7,-1,-1,4,-9,10,1,9,8,-8,-3,10,-1,-3,-8,-9,1,-1,-10,-10,1,-8,-2,10,-7,2,3,-7,6,7,4,-8,7,7,2,8,-7,-8,5,9,-6,1,5,-2,-9,-3,-4,-8,-10,-8,-2,6,5,10,-1,2,-2,-5,-3,7,5,-5,-3,-1,9,5,-8,-3,-6,2,6,3,9,6,-6,-3,3,3,2,8,5,-5,6,-5,4,10,-5,7,-2,3,-6,-2,-4,-4,8,10,-7,6,2,8,1,6,-2,10,-6,3,-9,2,1,-2,9,-2,-6,4,2,-3,-1,-8,2,6,-1,1,-5,5,-10,-4,-2,9,-7,-5,-4,-9,-7,-7,-5,8,-5,7,-3,-5,3,4,-6,-3,-6,9,7,7,6,-3,-9,8,10,-4,-10,-6,8,8,10,8,-10,-6,-6,-10,-6,-7,4,9,-3,-8,1,9,1,3,9,-7,-8,-5,-7,1,10,8,-3,9,-9,-2,9,10,-9,3,-4,-6,-5,-9,7,-6,7,-10,-3,8,-6,-4,2,-8,7,-8,2,-5,6,-1,-5,-2,3,3,-3,-1,3,-5,-9,3,-4,9,6,5,2,-7,-5,9,10,-5,7,1,1,-5,9,-6,-1,-1,3,-9,3,1,-4,7,6,-7,8,-5,4,-9,9,9,2,-7,5,-1,-1,-8,5,-8,-9,-6,-3,-6,-10,-3,2,-9,10,-1,-3,7,5,10,3,2,3,9,-10,2,-9,1,4,8,-7,3,1,5,-5,7,2,-8,-1,2,1,3,8,-1,-5,10], dtype = "uint32")#candidate|7099|(630,)|const|uint32
call_7098 = relay.TupleGetItem(func_2559_call(relay.reshape(const_7099.astype('uint32'), [630,])), 3)
call_7100 = relay.TupleGetItem(func_2561_call(relay.reshape(const_7099.astype('uint32'), [630,])), 3)
var_7112 = relay.var("var_7112", dtype = "bool", shape = (15, 16, 7))#candidate|7112|(15, 16, 7)|var|bool
bop_7113 = relay.divide(call_7098.astype('float64'), relay.reshape(var_7112.astype('float64'), relay.shape_of(call_7098))) # shape=(15, 16, 7)
bop_7116 = relay.divide(call_7100.astype('float64'), relay.reshape(var_7112.astype('float64'), relay.shape_of(call_7100))) # shape=(15, 16, 7)
output = relay.Tuple([call_7094,const_7099,bop_7113,])
output2 = relay.Tuple([call_7095,const_7099,bop_7116,])
func_7123 = relay.Function([var_7112,], output)
mod['func_7123'] = func_7123
mod = relay.transform.InferType()(mod)
var_7124 = relay.var("var_7124", dtype = "bool", shape = (15, 16, 7))#candidate|7124|(15, 16, 7)|var|bool
output = func_7123(var_7124)
func_7125 = relay.Function([var_7124], output)
mutated_mod['func_7125'] = func_7125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6683_call = mod.get_global_var('func_6683')
func_6685_call = mutated_mod.get_global_var('func_6685')
call_7180 = relay.TupleGetItem(func_6683_call(), 3)
call_7181 = relay.TupleGetItem(func_6685_call(), 3)
func_3465_call = mod.get_global_var('func_3465')
func_3466_call = mutated_mod.get_global_var('func_3466')
call_7184 = relay.TupleGetItem(func_3465_call(), 0)
call_7185 = relay.TupleGetItem(func_3466_call(), 0)
output = relay.Tuple([call_7180,call_7184,])
output2 = relay.Tuple([call_7181,call_7185,])
func_7193 = relay.Function([], output)
mod['func_7193'] = func_7193
mod = relay.transform.InferType()(mod)
output = func_7193()
func_7194 = relay.Function([], output)
mutated_mod['func_7194'] = func_7194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6006_call = mod.get_global_var('func_6006')
func_6007_call = mutated_mod.get_global_var('func_6007')
call_7195 = func_6006_call()
call_7196 = func_6006_call()
output = relay.Tuple([call_7195,])
output2 = relay.Tuple([call_7196,])
func_7212 = relay.Function([], output)
mod['func_7212'] = func_7212
mod = relay.transform.InferType()(mod)
mutated_mod['func_7212'] = func_7212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7212_call = mutated_mod.get_global_var('func_7212')
call_7213 = func_7212_call()
output = call_7213
func_7214 = relay.Function([], output)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mod.get_global_var('func_6760')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_7231 = relay.TupleGetItem(func_6760_call(), 0)
call_7232 = relay.TupleGetItem(func_6762_call(), 0)
output = relay.Tuple([call_7231,])
output2 = relay.Tuple([call_7232,])
func_7243 = relay.Function([], output)
mod['func_7243'] = func_7243
mod = relay.transform.InferType()(mod)
mutated_mod['func_7243'] = func_7243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7243_call = mutated_mod.get_global_var('func_7243')
call_7244 = func_7243_call()
output = call_7244
func_7245 = relay.Function([], output)
mutated_mod['func_7245'] = func_7245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_7349 = func_3352_call()
call_7350 = func_3352_call()
func_6086_call = mod.get_global_var('func_6086')
func_6088_call = mutated_mod.get_global_var('func_6088')
const_7387 = relay.const([[-1,-6,-6,3,10,2,7,-9,1,-3,-5,-8,5,10,5,-4,4,1,5,-3,7,4,-7,7,5,4,6,4,5,1,-7,6,4,-1,-5,-5,2,-8,-4,-8,7,-2,5,4,-9,-9,9,8,-7,6,5,-4,-1,-5,-9,6,4,-9,-6,-8,8,-1,-5,4,-10,-5,10,-2,-4,-7,-10,9,3,-3,-10,5,-10,-9,-7,-10,3,-2,5,-5,-10,1,7,4,-7,10,9,9,2,-8,-1,8,4,-7,3,-5]], dtype = "uint8")#candidate|7387|(1, 100)|const|uint8
call_7386 = relay.TupleGetItem(func_6086_call(relay.reshape(const_7387.astype('uint8'), [100,])), 5)
call_7388 = relay.TupleGetItem(func_6088_call(relay.reshape(const_7387.astype('uint8'), [100,])), 5)
func_2919_call = mod.get_global_var('func_2919')
func_2921_call = mutated_mod.get_global_var('func_2921')
call_7389 = func_2919_call()
call_7390 = func_2919_call()
const_7394 = relay.const([6.098712,-1.701912,-4.050656,-4.874408,5.120105,-4.057898,-1.265716,-6.466669,-5.458391,-0.563629,-6.930675,-4.173349,-7.343133,-8.897203,-1.239828,-4.909706,6.750438,0.418146,-4.391208,6.488422,4.497853,-0.658931,-5.020713,3.435790,-7.913410,-7.597515,-2.112320,3.659607,6.616366,-0.037182,-6.049084,9.631872,1.268152,3.487536,-9.290962,3.203863,3.748597,7.197102,-1.832413,-0.620567,0.042149,1.146950,9.878181,-9.562784,-6.450999,-4.437386,0.356346,0.928183,-4.572387,-0.081939,2.248678,-0.084707,-6.768799,-5.645194,3.926082,4.528914,-6.894773,-8.359246,-9.199535,-1.087663,2.793057,4.055325,-6.473015,0.507504,6.214478,-9.453563,0.795816,3.008213,-2.645330,-0.990625,8.183535,-6.519024,-9.095263,9.855067,7.559131,8.153559,5.955309,1.919212,0.027485,-4.698938,8.558803,6.983442,-7.106711,-0.395261,1.514891,-3.824384,-7.320949,-9.575986,0.160532,6.684952,1.084370,9.258890,3.606991,-4.879383,3.718886,-0.010095,0.420984,3.224988,-9.561580,0.779981,-9.481003,-9.850130,-8.264529,4.869198,3.526084,1.608502,4.113410,1.281290,6.260114,-3.973644,-0.065558,1.445753,-5.294476,6.097037,-2.398582,-8.567994,-4.861381,-9.960566,7.826291,-7.732404,-7.699995,9.702431,-5.832268,9.746481,3.202686,-9.470726,-7.646745,6.271239,-3.008476,9.845679,5.338453,4.311791,7.014540,8.269913,9.864175,8.970080,6.209226,-4.086084,2.269261,9.609361,7.074540,-4.059404,-8.673363,-3.578728,7.092601,3.645373,-6.272356,-1.870892,-1.620349,-0.127530,-3.479562,-3.247308,2.560230,7.394478,-6.979888,3.117719,2.090524,1.618587,9.023071,-2.276018,8.521133,-2.764887,4.470375,8.680155,-7.113066,7.382953,9.290590,-2.431363,-5.053693,7.159729,-5.147330,-8.584483,3.100576,6.327617,-0.092499,1.153677,-6.975963,9.965108,-9.541948,3.829545,-1.508300,9.490197,-6.372810,-7.966389,-8.136959,6.641766,-6.265152,-5.377565,4.828742,4.345392,9.313227,-6.721385,-0.871712,1.535641,-1.307024,1.281900,-9.879856,4.103482,-8.755631,1.012285,7.381681,5.117540,4.543483,5.846532,-5.154195,-8.813262,8.592557,9.480297,-9.767933,6.035913,0.934597,5.761117,7.797795,7.559797,1.398177,-8.010892,8.309469,-0.443856,5.545930,-1.022549,-6.576468,-9.887009,4.239449,2.683199,-1.965578,-9.776154,3.886849,1.903799,-3.037350,-5.375765,-8.231258,8.338832,2.790120,-1.246152,4.672061,-2.148914,3.161128,-8.052019,-7.613562,-2.957085,-8.841124,-1.798408,-8.178298,-4.953569,-5.684934,-8.974223,-3.911973,9.227841,-5.625993,-4.418613,-2.176146,2.995106,0.988566,-6.378011,-1.393015,1.181465,7.071953,-2.148529,5.632609,3.974037,-6.336252,-3.909465,3.294390,-6.991752,8.333283,4.680104,5.566470,3.435948,-2.479250,-7.430451,-6.872096,6.336533,8.131138,-3.599264,0.319957,6.221645,9.708783,-6.452229,7.808752,-9.795618,5.775476,-4.442568,1.853943,-9.222765,1.492767,-0.800774,-2.085217,4.654285,0.050816,-9.635628,7.689363,-0.776194,-6.964961,2.252099,4.521970,-6.385282,-7.116802,8.888546,4.646745,0.783111,-7.511710,-3.763701,-9.897141,3.592246,6.478184,-6.851495,2.435070,-5.017744,7.828307,4.130031,8.884115,4.623850,-2.533712,1.178758,-9.605368,-9.413443,-1.650754,5.149643,-4.027249,8.673957,4.192582,3.288718,-5.238623,-9.916742,5.857833,4.730455,8.140914,-1.447832,5.564225,6.282287,7.674340,8.488260,7.899660,-4.503492,8.802302,1.627641,1.962685,6.368120,-5.081068,9.457884,2.394942,4.364444,2.756251,-7.365773,5.650076,1.655520,2.048520,6.309848,5.936935,-4.722134,5.863730,0.757514,-4.639487,-1.962400,-8.176362,2.371851,-1.683399,4.280247,-2.516282,5.003419,7.297067,-0.881496,7.267727,7.677750,5.552545,6.461586,-4.816541,5.915347,9.198207,4.741697,4.845090,4.026239,2.804188,-8.616254,-7.960326,-5.778698,-3.085552,-2.981113,-6.359883,-7.652528,0.232831,-1.467464,1.448612,2.848442,4.318540,-4.950600,7.155263,0.503880,-4.846432,-7.563035,2.477530,4.490546,-1.295015,6.210191,4.523180,-2.435166,4.796896,-1.966518,3.860994,3.886963,8.642268,7.296462,6.907279,2.022110,-7.442187,-3.931765,-3.925325,2.990257,2.136322,3.353198,6.745381,1.714452,-4.722974,0.423047,8.104262,0.225861,-5.171403,7.209982,0.486840,-9.523524,4.907958,3.281848,-7.008295,-0.170592,1.624637,-4.484975,8.655793,8.345350,-0.394328,2.027430,5.515494,-2.901046,-2.661103,2.363115,-4.243669,0.366254,-3.214320,-3.080331,-7.260134,-2.276392,-9.826717,-4.081391,-3.520643,-5.353197,-7.826873,9.678913,-1.092757,7.413792,5.656576,-8.457168,-9.890604,9.605948,-8.218232,7.274491,-7.863592,-2.589458,4.314453,8.348005,-8.488392,-8.927305,3.081766,-6.784304,0.017801,-2.455681,-8.436010,-8.527530,0.210964,6.947467,1.143782,-7.730626,-4.878339,1.704045,9.419502,0.204064,-6.339027,-4.277175,9.514299,4.651600,-0.012640,-5.367979,-0.937097,-2.575892,-3.121840,9.374885,-7.707352,-6.138095,-5.562017,-7.759457,-5.108998,0.535467,7.726143,-8.074801,-9.414715,2.512216,-7.398250,0.154185,6.074637,-7.313082,9.243748,4.211543,0.004640,-8.658104,4.738091,9.154087,-5.229534,-8.184027,-0.432927,4.054138,-2.898636,7.244801,-8.042722,3.284120,-8.279490,9.441327,8.118151,-6.962939,-3.589981,-6.048722,2.669097,1.547329,-9.032566,-4.490345,5.322668,5.250995,-1.129129,-2.242999,3.935817,-5.428685,2.513876,1.639797,6.775133,8.604680,-4.631355,9.169871,7.202561,-6.344342,1.060571,-1.087986,-9.087079,-1.506719,-3.554221,4.641704,4.600256,-7.119371,3.084774,2.035763,1.567568,7.395143,6.016009,7.418969,4.752207,-7.550842,-9.379558,5.286710,4.310363,-0.499829,-1.756076,1.903154,8.190330,-3.046223,-4.106330,1.107165,-4.759951,5.962481,-8.658805,-5.020122,-7.272724,-1.619523,4.411743,5.767391,6.946057,0.508463,2.064983,2.484653,-0.979815,-0.440660,-1.356948,-8.197577,-1.706203,-5.330559,-3.343249,-8.610213,3.390630,-6.002044,9.579298,2.965471,4.094057,-5.285059,-6.288455,9.582330,-7.137370,0.216341,-1.513832,9.886737,1.493971,5.548892,8.144119,6.995695,-7.364057,8.027222,2.463233,-2.634122,7.580595,-2.582290,4.673678,-2.697377,8.635717,-6.527604,1.663541,-1.822531,0.132877,6.899426,2.734520,3.570473,-2.228295,7.929438,-9.825136,-0.829123,3.553156,6.094061,-8.228440,-3.657107,8.190484,7.776944,-8.918616,9.532082,5.674063,-9.634004,7.606026,-6.822198,3.851743,-2.469986,-2.576212,1.854372,8.198683,-7.833674,0.793829,7.643925,1.045430,1.040868,-0.282461,2.143382,3.467540,-1.532984,0.256978,-8.805219,2.939902,-2.634454,1.933025,4.347058,-8.722022,4.566483,-8.976297,-7.518309,3.092067,6.840757,2.508401,-8.904901,8.688912,3.002882,1.771918,9.775172,-0.469026,-0.434136,5.340153,-5.343078,1.547520,1.863101,-4.578830,1.583636,-4.554498,9.773982,3.270918,-3.242840,0.206936,-8.309981,-5.182079,8.870281,4.027126,-6.154763,5.442631,1.852381,-2.319675,-9.497879,-1.667956,0.743413,-7.024379,-3.046004,-5.246299,-9.753679,0.251200,-8.366468,-9.906568,-9.942655,-5.376303,3.787397,-6.616598,-1.084578,9.645031,5.160391,2.017275,-8.140640,-8.979364,4.751681,-3.701242,-9.296722,-3.611944,8.160101,-3.204127,6.364714,-3.476604,-4.084254,4.574270,-6.747572,2.669883], dtype = "float64")#candidate|7394|(715,)|const|float64
bop_7395 = relay.equal(call_7386.astype('bool'), relay.reshape(const_7394.astype('bool'), relay.shape_of(call_7386))) # shape=(715,)
bop_7398 = relay.equal(call_7388.astype('bool'), relay.reshape(const_7394.astype('bool'), relay.shape_of(call_7388))) # shape=(715,)
const_7401 = relay.const([[2,4,-3,10,4,3,-3,-6,-3,-3,-5,-9,-2,6,-4,4,10,-3,-3,-8,-10,-8,10,-4,-8,-6,-7,1,-7,7,-1,7,-1,6,-5,10,9,-2,3,-2,1,7,-2,-7,-3,-2,7,6,4,-3,-8,6,-2,-6,2,-9,-7,-3,3,10,6,10,5,-5,-10,6,1,5,10,-10,9,-7,6,-5,-10,4,-9,1,-4,3,-5,2,-2,-1,8,7,1,-4,-2,5,-8,-9,-7,2,-9,5,-3,1,-6,8],[-4,-3,-6,1,8,3,-8,2,5,5,9,9,7,-5,-2,8,7,10,-8,3,-8,-3,-1,2,-9,1,8,-9,-1,9,7,-9,7,-8,-10,-3,9,5,-3,7,5,-9,9,-8,-2,6,-2,-4,4,-6,-4,3,6,-7,-6,-10,-4,1,-9,-6,4,2,6,-7,-7,3,3,-9,5,-8,8,-1,9,6,1,-10,-3,-2,-6,7,3,7,7,5,-1,4,-10,-4,7,8,-1,4,9,-2,5,2,-1,-4,-6,2],[-3,-7,-9,4,10,-3,-8,-6,3,4,7,-7,-7,-7,-1,8,-5,-7,-5,-2,2,-5,-2,-1,-7,4,3,4,-2,10,-2,-5,3,-3,4,-3,-1,-9,9,8,5,2,3,7,-9,-9,5,-9,-8,9,8,-10,-10,9,-1,5,-1,5,3,1,6,4,-4,2,-5,-7,2,-9,-8,-2,-9,6,-4,-6,-2,-10,7,-2,6,6,-4,4,10,-10,6,-1,7,-5,-8,-9,-7,9,-4,4,4,1,3,-5,1,-5],[-5,1,4,6,-8,4,-5,-1,3,-7,5,6,5,3,7,4,4,8,3,2,9,9,9,1,7,-3,-9,-10,-2,-2,-1,-5,-4,-3,-6,-10,-10,-1,1,3,1,10,-4,-4,-5,7,5,-3,4,-7,10,7,10,-9,9,1,-5,-10,5,-5,-2,-8,-4,-9,-6,1,8,6,-8,-1,4,-9,-4,9,-4,-10,9,-7,-9,-3,3,-1,-6,8,-3,-10,-4,-7,7,10,2,-8,-7,4,-1,3,3,-4,-2,-10],[5,3,1,8,5,9,-7,8,4,-2,-9,9,-8,8,9,-6,-1,4,6,-10,-9,10,-8,9,-8,-6,-5,-8,2,-4,5,-5,-6,8,10,-7,-7,-4,3,6,4,10,-9,-2,-4,1,-4,-10,5,4,-6,-6,-6,-7,-2,4,-4,-5,3,-3,-2,10,3,6,-8,5,9,-6,-2,8,5,-9,-4,-6,-2,6,5,7,6,6,-6,-5,-4,2,5,1,-9,2,7,-2,7,10,-6,10,2,5,8,-3,-2,-10],[4,-6,4,-10,-4,-9,-4,2,5,1,7,7,5,-10,6,1,-5,-5,-5,-9,9,1,-6,3,-3,1,10,5,-10,4,9,6,-4,-3,7,-9,10,2,-1,9,1,5,-10,9,-7,3,-8,-2,-9,-3,-8,5,-2,-6,-1,-10,7,-4,-6,-4,-5,3,-6,-8,-1,-3,5,9,-2,2,-1,6,8,2,2,-8,-5,-2,5,5,-3,5,6,-5,10,-2,2,7,-7,-5,-7,5,4,-2,-9,7,7,10,-7,-2],[4,7,3,7,5,8,-7,-3,-2,1,1,-3,-9,2,10,4,9,2,-5,1,-3,1,1,10,-6,5,9,6,3,-8,3,6,3,-3,7,8,10,-9,-5,4,-1,1,-7,10,6,-2,9,-10,-4,-1,-4,2,-2,6,-9,9,1,10,8,9,-9,2,7,-2,-4,3,-4,5,-3,3,3,-1,-3,-4,2,-6,2,-9,-1,-1,4,4,-8,-5,-2,-4,10,3,8,-4,-1,-9,8,4,-9,-4,-1,-2,-9,-2],[3,10,-5,7,-10,-4,-1,4,3,1,-4,-4,5,-6,2,9,-5,-9,2,4,10,1,-10,-3,4,4,8,5,-5,10,-8,-1,6,3,-9,-7,6,-10,-4,9,4,-8,-3,-6,3,-4,-2,3,-6,-7,-7,3,6,-8,-4,-10,2,3,-2,-2,4,5,-10,8,-9,2,-9,7,-8,-6,4,3,6,9,-6,1,8,7,-6,-7,-8,-9,4,4,3,-6,-10,10,6,1,4,-1,-10,2,1,-1,6,10,7,4],[8,6,-9,-1,10,7,6,6,-4,3,8,8,7,-6,4,6,-9,7,1,-3,1,-4,-5,6,1,-9,-5,-2,5,-9,-9,-10,-9,6,-8,-8,-8,8,5,7,5,-2,2,-5,4,-7,-10,9,5,-7,6,-2,2,-2,-5,-10,6,1,7,-9,1,-4,-3,10,10,-1,-5,-5,-6,-3,-7,-3,8,-2,-1,8,7,3,-6,-9,2,-5,6,5,8,-3,2,9,-10,-7,-4,-5,6,2,-2,-8,-1,-1,-4,9],[6,-8,-7,-10,-2,2,-1,-6,4,9,-8,-10,10,6,-2,8,8,-6,-7,-6,5,-4,4,3,7,-5,9,-4,9,-4,6,8,-10,-10,3,5,-3,-4,10,-4,9,1,-5,6,-8,4,4,9,6,-2,-5,-5,-5,-3,6,1,-7,3,1,7,-2,5,-10,-2,6,-5,1,9,-1,-3,2,-2,8,2,-7,-1,9,-4,2,7,-10,-9,4,-6,-2,4,3,-4,3,2,-4,-10,-1,-4,-10,3,5,10,-1,6],[5,7,8,-1,-7,1,-6,-6,7,1,5,9,7,-1,6,-2,-9,-3,2,10,-6,3,-3,-10,3,8,-7,-7,-6,3,-8,-5,5,6,1,-9,6,-1,-2,-9,-4,2,2,6,-8,10,-5,2,4,-9,3,-1,9,8,-3,-8,-2,8,10,1,-2,-1,-9,-7,1,7,-4,-3,-2,-6,-5,-2,5,-2,4,10,-6,5,5,8,9,-10,-8,6,1,5,-8,-7,-8,7,-4,-10,-9,-8,8,-10,3,-8,2,-1],[9,3,2,10,8,-4,4,3,-10,8,8,2,10,4,-5,-7,8,2,7,-2,9,7,1,-7,-4,-6,6,6,10,-8,-3,-1,-2,-3,-5,5,-2,-7,6,-3,-2,-3,-8,2,6,-5,4,2,-9,4,1,-7,-4,5,10,-10,-8,9,-1,6,-3,-8,6,-3,-6,-10,8,9,2,2,5,-4,-5,1,-8,-5,7,-7,3,2,5,-4,9,-5,-1,-5,-10,-9,4,3,4,-2,-9,-6,7,10,9,-6,-1,-1],[9,9,5,-4,-6,2,5,3,-2,-6,8,-2,-4,-5,-1,-7,2,-8,2,9,-1,9,4,-9,2,5,3,-7,8,-2,-10,-7,-3,-1,-1,2,-3,7,3,-4,-1,-3,8,3,-1,3,2,-6,-7,7,-9,-9,9,10,1,-5,6,-9,9,2,-7,-3,-7,1,6,-3,8,-7,-7,9,2,-2,-3,5,-5,1,-2,-10,-3,-4,-10,4,-8,-4,-8,4,-8,-10,-9,2,2,7,-10,-2,9,-2,2,4,-6,4]], dtype = "uint8")#candidate|7401|(13, 100)|const|uint8
bop_7402 = relay.logical_or(const_7387.astype('bool'), const_7401.astype('bool')) # shape=(13, 100)
func_2596_call = mod.get_global_var('func_2596')
func_2599_call = mutated_mod.get_global_var('func_2599')
var_7418 = relay.var("var_7418", dtype = "int32", shape = (33,))#candidate|7418|(33,)|var|int32
var_7419 = relay.var("var_7419", dtype = "int32", shape = (264,))#candidate|7419|(264,)|var|int32
call_7417 = func_2596_call(relay.reshape(var_7418.astype('int32'), [3, 1, 11]), relay.reshape(var_7419.astype('int32'), [3, 8, 11]), )
call_7420 = func_2596_call(relay.reshape(var_7418.astype('int32'), [3, 1, 11]), relay.reshape(var_7419.astype('int32'), [3, 8, 11]), )
var_7422 = relay.var("var_7422", dtype = "bool", shape = (715,))#candidate|7422|(715,)|var|bool
bop_7423 = relay.not_equal(bop_7395.astype('bool'), relay.reshape(var_7422.astype('bool'), relay.shape_of(bop_7395))) # shape=(715,)
bop_7426 = relay.not_equal(bop_7398.astype('bool'), relay.reshape(var_7422.astype('bool'), relay.shape_of(bop_7398))) # shape=(715,)
output = relay.Tuple([call_7349,call_7389,bop_7402,call_7417,var_7418,var_7419,bop_7423,])
output2 = relay.Tuple([call_7350,call_7390,bop_7402,call_7420,var_7418,var_7419,bop_7426,])
func_7427 = relay.Function([var_7418,var_7419,var_7422,], output)
mod['func_7427'] = func_7427
mod = relay.transform.InferType()(mod)
mutated_mod['func_7427'] = func_7427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7427_call = mutated_mod.get_global_var('func_7427')
var_7429 = relay.var("var_7429", dtype = "int32", shape = (33,))#candidate|7429|(33,)|var|int32
var_7430 = relay.var("var_7430", dtype = "int32", shape = (264,))#candidate|7430|(264,)|var|int32
var_7431 = relay.var("var_7431", dtype = "bool", shape = (715,))#candidate|7431|(715,)|var|bool
call_7428 = func_7427_call(var_7429,var_7430,var_7431,)
output = call_7428
func_7432 = relay.Function([var_7429,var_7430,var_7431,], output)
mutated_mod['func_7432'] = func_7432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6683_call = mod.get_global_var('func_6683')
func_6685_call = mutated_mod.get_global_var('func_6685')
call_7477 = relay.TupleGetItem(func_6683_call(), 7)
call_7478 = relay.TupleGetItem(func_6685_call(), 7)
func_4391_call = mod.get_global_var('func_4391')
func_4395_call = mutated_mod.get_global_var('func_4395')
var_7484 = relay.var("var_7484", dtype = "float64", shape = (1536,))#candidate|7484|(1536,)|var|float64
call_7483 = relay.TupleGetItem(func_4391_call(relay.reshape(var_7484.astype('float64'), [16, 16, 6]), relay.reshape(var_7484.astype('float64'), [16, 16, 6]), ), 0)
call_7485 = relay.TupleGetItem(func_4395_call(relay.reshape(var_7484.astype('float64'), [16, 16, 6]), relay.reshape(var_7484.astype('float64'), [16, 16, 6]), ), 0)
output = relay.Tuple([call_7477,call_7483,var_7484,])
output2 = relay.Tuple([call_7478,call_7485,var_7484,])
func_7503 = relay.Function([var_7484,], output)
mod['func_7503'] = func_7503
mod = relay.transform.InferType()(mod)
var_7504 = relay.var("var_7504", dtype = "float64", shape = (1536,))#candidate|7504|(1536,)|var|float64
output = func_7503(var_7504)
func_7505 = relay.Function([var_7504], output)
mutated_mod['func_7505'] = func_7505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5880_call = mod.get_global_var('func_5880')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_7548 = func_5880_call()
call_7549 = func_5880_call()
func_6188_call = mod.get_global_var('func_6188')
func_6189_call = mutated_mod.get_global_var('func_6189')
call_7555 = relay.TupleGetItem(func_6188_call(), 0)
call_7556 = relay.TupleGetItem(func_6189_call(), 0)
func_6371_call = mod.get_global_var('func_6371')
func_6373_call = mutated_mod.get_global_var('func_6373')
call_7557 = relay.TupleGetItem(func_6371_call(), 0)
call_7558 = relay.TupleGetItem(func_6373_call(), 0)
func_6419_call = mod.get_global_var('func_6419')
func_6421_call = mutated_mod.get_global_var('func_6421')
const_7564 = relay.const([-9.984306,2.498602,-2.499470,-7.611717,0.906682,-2.582113,-4.479733,6.552754,-1.631089,5.664375,-0.840761,-9.811588,-8.195411,3.599036,-5.099069,8.886068,-3.202752,-9.031237,2.883962,9.714539,-5.982766,1.556292,-7.426913,-9.262888,-3.165035,-8.878968,-8.312227,1.091207,-0.587763,-4.499751,8.396543,7.428989,-1.378385,8.300751,6.701364,5.834392,-6.108642,-4.220197,9.860419,-3.667727,-7.618323,-0.392358,9.646005,9.484631,6.823557,3.999919,3.795812,-3.139230,-2.577355,7.136194,0.414365,1.471890,-9.418423,-8.451433,1.370937,2.856673,4.120763,-7.341059,-7.178931,-3.043306,-6.554709,-6.790655,9.341742,7.222794,-8.263619,9.090297,0.928641,-7.213290,-2.925783,6.883631,9.679375,9.370890,3.827131,8.248144,-3.072966,8.219197,2.477077,-7.251669,-6.391008,5.801491,5.380681,-0.473888,8.623956,-2.998559,-8.065076,0.864118,-3.069136,-5.287704,2.796911,1.275268,-0.722232,-6.630587,9.563561,-1.824443,-1.190191,-3.484906,-6.858907,1.815704,6.682160,4.893004,8.930184,9.382670,9.472921,1.000022,-1.994441,-4.983059,8.793783,-7.134478,-5.748918,9.412521,-8.850716,-8.713216,-0.636003,8.042647,3.604706,5.682893,7.721097,-8.569361,2.219738,2.134539,6.959851,-0.791551,-1.566762,8.553804,4.135286,-8.177999,-6.904833,-6.181391,-5.816275,5.493497,-5.530480,-5.635250,1.581851,-0.507668,9.886777,-9.829925,-8.800187,7.466733,-5.327829,6.446969,8.432860,4.854504,-4.234094,8.562757,9.895448,-6.982242,4.037524,-4.218157,6.863653,1.683311,-2.513709,0.501300,-6.163619,-7.169737,9.417714,-8.937476,1.554212,3.528783,3.069979,-3.314181,0.540426,-0.598858,2.091902,7.043897,-4.974589,4.190253,4.190176,4.671927,-5.881511,-6.982963,1.297372,-6.876570,-1.472146,-0.138399,-5.893857,3.781143,1.945436,6.158855,-1.832946,6.168780,8.959134,7.655614,-7.079998,8.823907,-1.193439,-4.169962,-1.782894,-0.533699,-3.989157,3.982972,8.241575,-5.493414,-5.321005,-9.643235,4.638788,8.088879,-9.489810,4.279248,9.829147,5.991416,-3.629194,6.688836,2.287818,3.795937,-7.917637,-3.735626,3.524502,-6.206395,-5.209881,-5.266766,3.443012,2.121112,6.270811,-7.013648,6.096706,-6.135468,3.316101,-0.057938,-8.690373,5.254969,-5.981603,-1.119632,-5.881136,-2.172232,4.352170,-0.772762,-0.824811,0.341951,-2.130479,4.786289,8.236595,3.872792,2.938776,5.656449,-0.761263,9.765385,4.628797,-6.972122,-8.051936,-0.193606,-6.916638,-4.550772,-1.130175,-7.403769,3.778269,-6.086266,0.099464,-2.406121,-3.627513,-7.283957,-3.127975,8.535442,-5.704367,6.032832,-2.779529,-5.025470,6.049863,-7.980624,-1.858379,-0.905850,-1.299894,5.656000,9.335169,-9.741564,5.674885,-8.390131,-3.334425,2.271395,5.594127,-5.981309,2.836505,-2.651932,3.223279,-9.048514,9.718442,-2.055140,-2.436786,-4.607455,3.895697,1.552389,0.802721,-3.903013,1.596781,-4.255133,-2.492975,3.095454,-6.272541,-0.026543,-6.771815,6.829431,-2.338654,6.507181,9.004976,-7.181865,-1.800338,-7.018620,9.148458,-8.629305,-2.594403,0.347564,7.596770,-3.312760,6.293080,2.006856,-9.159649,5.930336,-8.979922,2.941135,-9.855177,-4.220251,3.731141,0.966035,6.779724,9.303498,-0.096435,7.598331,7.010855,8.256889,-5.324384,-7.653330,-1.804913,9.807492,-4.354165,-7.811677,-2.170320,-5.506844,6.702762,-7.105241,1.989003,8.142241,9.669177,8.597858,-0.821054,0.455431,7.534001,3.652414,5.730467,1.060674,1.365850,1.508882,-4.649590,1.073648,6.326206,7.014640,-0.166554,-2.242823,7.058616,-0.509962,5.346282,-3.310150,-9.783447,-2.345944,2.132876,3.044887,2.758158,-3.801852,-7.642112,-4.077271,-1.657763,-4.444234,-4.830712,-8.940205,-9.491550,1.164291,-2.458924,3.606035,-5.277219,-2.092640,7.620370,-8.819341,-6.344267,-4.001224,1.473069,-6.203869,-8.426376,-9.637461,-9.327715,-9.609816,0.672356,-1.666526,-2.523899,-6.493716,7.344004,-1.080957,0.172217,7.840325,6.418422,-4.161878,-6.354731,-8.253852,-2.443754,4.825936,4.889626,3.274102,-3.239297,-8.390081,4.292486,2.732243,-5.718355,4.228765,-2.940830,9.193198,3.319156,-5.680963,8.909424,-2.378699,1.830107,-7.933094,-7.172028,-6.310920,0.410386,8.676045,3.031647,5.372743,-4.292715,4.494363,9.050032,-9.300885,6.568340,9.438214,-0.496050,-9.530727,3.629769,-2.290823,-5.942299,-6.741228,-8.009810,8.080106,-0.369144,5.048298,9.783910,-1.206031,1.148599,4.419585,0.636596,4.975340,5.663021,-8.962882,-9.279139,-8.285633,2.529210,-2.634265,-8.026816,3.489353,-5.286875,1.387555,-2.105617,5.555334,-8.226406,-1.956320,4.142363,8.306834,3.510482,8.343923,1.077962,-5.572249,0.519406,-5.434737,-0.771425,-9.316676,-5.771337,3.198764,1.382805,-0.375139,1.842344,-0.783522,0.778569,9.476606,1.913270,-4.199654,-0.308644,2.321691,-8.355647,0.567886,2.019000,4.688684,7.829592,-8.510549,7.066283,7.406488,9.128797,9.616489,5.286910,6.616623,-6.613470,9.622823,9.643885,-4.419305,-6.761763,-1.852353,0.843612,2.727096,-9.470703,-9.634652,7.534329,6.322948,9.980734,6.161985,1.595693,1.548679,-7.704173,2.102133,7.112000,9.213607,0.455737,0.071510,-5.325494,-0.192669,4.321688,-5.009716,-1.474890,1.559212,3.603796,-4.649125,-9.921292,-0.014513,0.700505,-3.426777,6.777983,-4.016848,8.643680,3.725166,3.016811,6.447883,-5.284814,2.981468,6.233404,-5.098837,0.506814,8.255590,-7.737376,-1.652428,3.493864,-5.851752,6.341040,-9.160207,3.727967,-2.144869,2.097687,8.197407,3.338706,-8.014674,6.983554,1.495098,1.844707,-2.772205,-9.005433,6.434001,6.015134,-4.484954,1.022338,-0.386493,7.748051,8.585757,-9.757220,-7.870132,7.053723,-3.882530,-0.651654,2.973375,-8.811105,1.505159,-4.625702,7.726848,8.276528,-6.962511,-0.878556,3.006560,3.133381,-3.380716,5.467909,-3.405506,4.973891,7.194454,-1.440806,9.997419,6.724908,-7.120003,-2.693365,4.668039,8.559762,-3.824353,-6.827518,3.750142,-9.571189,5.013600,6.544570,-5.877387,-2.759761,-7.378726,-7.483105,-9.917274,-0.761711,8.115647,-1.131394,-0.176062,6.797517,2.614718,-0.702797,4.270826,-4.839240,-6.532952,-2.805722,-3.679388,2.895502,-1.095501,-2.026317,2.446475,7.289612,3.630608,0.350948,8.610833,-5.850616,9.012742,-0.506115,1.317357,1.222111,-2.278273,-3.955330,7.292944,5.986446,0.617702,-9.212522,-6.612632,-7.249066,5.523381,-0.935955,-3.422296,7.248243,2.807923,-6.360785,-3.724449,6.199504,-3.451262,3.382971,8.149013,6.930066,-4.429514,1.336809,5.227720,8.292833,5.329362,1.884973,-3.417350,5.699922,-0.591239,2.406840,-1.632891,8.112716,-5.946303,-5.939088,2.067975,4.018009,1.610279,0.678841,-1.483046,7.172299,-0.572061,0.131122,4.795523,-1.327255,-5.929319,-0.734061,-9.460591,2.228915,-1.704095,-8.849444,1.553530,0.655316,-2.673505,9.634920,9.013811,9.493714,-5.831631,3.313227,5.541227,0.975305,6.798340,-4.416686,-0.233643,-4.717279,7.939195,-7.576945,-8.269319,3.986083,-7.195593,8.587937,6.213457,7.078587,2.674371,1.960450,4.870933,6.879147,-9.054247,-7.731484,5.311297,2.466509,-5.403246,-7.871533,-3.263428,1.368100,-0.123000,-6.608849,2.850512,6.871246,-7.839206,-6.597429,-9.526001,-6.052618,4.925169,4.118381,-9.238049,-3.036251,-8.566991,0.705383,-3.454852,-6.183357,-8.613386,7.125073,-4.876211,-8.933070,8.710493,-0.596926,-1.392833,5.098473,-4.278792,7.925230,4.665744,1.104988,-8.874092,-1.846586,3.946759,3.809307,-0.486785,-7.313762,-7.811703,3.503978,6.926664,9.210048,1.024340,1.396224,1.362535,-9.782775,-8.270946,-0.164299,-1.706681,-4.314672,5.828490,1.294182,-0.723585,5.332475,0.438005,-9.264214,-0.790655,-8.962799,-8.432609,9.312358,-3.445911,6.435255,1.659210,6.897848,-2.303832,-6.663913,-1.145649,8.184094,2.296360,4.889231,-7.260897,5.077154,9.089370,-6.036088,7.304547,1.637784,3.629445,8.736938,-3.637422,-0.981970,-2.681555,7.497390,9.678062,1.998030,5.096111,3.681984,-0.060664,-1.572460,-5.321013,-9.474794,8.141687,-6.596286,-1.919092,7.829888,-3.844887,9.434226,-7.450379,3.473457,-4.442693,-7.233734,2.816190,3.324062,-5.262855,5.926208,-9.151181,7.939761,1.968411,-9.886444,5.532170,4.025932,7.111878,-5.105509,8.413269,5.482933,-8.727843,3.407841,8.611459,3.370288,-6.003270,0.746222,-1.003763,-9.900410,-3.140615,5.040210,2.042150,9.597542,-6.793580,-5.757356,-7.122446,6.749023,-2.719964,-5.489245,8.412036,5.558719,4.351440,-5.115224,9.594328,3.178441,7.616860,0.997316,5.802284,5.647716,-3.937216,2.563070,-2.209567,5.036983,9.227301,-3.068868,-2.956224,5.459310,-9.634904,8.669621,-9.829120,3.791193,-9.101506,-6.514731,-4.758712,1.062880,-6.292052,8.056539,0.446752,8.226957,-8.584739,7.168632,9.725934,-6.914252,-0.878653,-2.509772,0.403529,-7.125908,-9.230573,5.438946,-1.505118,-0.549185,-7.818621,4.279763,-9.943808,-9.913024,9.881385,3.532123,-7.655123,-5.755816,-1.931870,-1.956815,5.306394,0.196624,6.237006,-4.785947,7.753773,-6.052868,-7.623342,5.509395,-3.753760,4.706483,8.606778,5.833970,4.862972,-4.789302,-5.890017,3.135605,3.166085,2.175008,6.815508,-7.567424,-2.849012,-1.806189,0.797897,-0.533948,-0.248083,1.597251,-1.596299,7.608210,-5.099296,7.455759,-0.974165,-7.771821,6.361944,3.003487,5.526116,7.196355,-9.189837,-3.338473,8.694158,-5.854908,3.928975,1.860983,-9.099295,8.419192,-8.360803,7.608360,0.708580,-1.030705,0.962905,8.401748,-0.710035,0.956112,6.702634,-1.037309,-8.312702,-3.674110,-6.581037,5.670065,-7.154887,4.326335,-1.097413,-1.817054,1.468690,-9.904322,-4.297875,2.861954,8.775321,5.467385,9.329865,7.055906,-9.829872,0.639971,-6.726323,2.125405,8.423205,8.169541,0.315065,1.073593,6.937165,-7.338469,3.369074,-9.752209,-4.027504,2.038837,8.021723,0.468783,-5.247404,-6.071245,9.909591,-2.712717,-2.233630,-2.577344,4.184161,-3.742672,-5.083840,-0.905548,2.545565,-8.521491,-4.393201,2.248560,-9.865359,-3.738159,9.066577,9.098927,-2.253429,1.368686,-0.656240,8.789468,1.755266,-4.997190,-6.288877,8.897098,2.602979,5.416983,-3.838550,9.343155,2.746542,7.675551,-9.640528,3.854177,-5.080668,7.372676,7.795290,-5.971686,6.863903,-8.045485,2.440092,9.269704,1.379735,3.388266,8.054180,-5.735754,-7.869786,5.902832,4.664022,5.308846,2.074886,-8.903229,1.200884,5.010140,3.592572,-1.995141,4.414585,4.481217,-8.026332,-4.992258,1.774969,-2.887954,5.973386,-2.584407,2.348067,-3.262569,-0.582174,6.625193,-5.529644,-1.087918,-0.935219,-7.340990,-7.332965,-4.485088,-7.391688,-7.384018,4.494010,3.060626,-7.484660,4.453716,-3.492260,-7.452082,-5.155151,-4.514041,-3.931517,-6.840866,-4.496340,0.072222,-5.477517,4.549457,-9.960630,-7.536451,0.247094,-0.428474,3.035205,6.584315,-7.522022,1.731740,9.641936,2.749209,-9.013335,-9.877036,-5.181561,-2.157879,1.295989,-9.287012,5.133226,5.321168,-3.510578,5.804557,-3.279437,1.497353,-0.172724,4.815729,5.908854,-1.916895,7.696422,-1.889685,-4.534769,-1.552645,-2.889132,3.140074,-4.234168,-3.969949,9.186191,-0.877667,-7.711765,-8.688055,-2.074216,-4.499792,-6.002377,-2.041380,9.757522,2.393430,7.413916,3.934319,-5.652375,0.452780,-5.834774,-5.553317,5.504806,1.091144,-7.569931,6.926156,3.885934,-3.115673,-3.283305,6.163827,5.453768,3.608745,3.404305,4.732378,3.288589,-0.654260,-8.726118,1.238896,0.038465,-9.122502,-8.983753,5.693258,7.440147,1.681202,-0.128228,-9.929144,-3.089543,-2.638882,-0.694798,1.799562,-7.844047,5.401222,-6.299065,9.965599,6.283565,-7.138852,3.476093,-9.703651,8.231484,-3.434554,-7.474075,-5.722074,-6.110914,-2.421006,-1.742575,-9.015426,0.249621,0.188177,4.197589,-0.440641,-6.413142,-8.654082,-5.521926,5.337959,5.698694,5.298190,-3.876151,-9.747326,-3.309642,9.915386,-2.081155,5.755947,-1.548991,-1.549901,0.542931,-7.226047,4.417249,5.715721,2.731553,0.254128,-1.826231,5.402838,-8.440643,1.216460,-9.885966,7.224536,2.684114,8.581534,-2.410692,5.076586,-3.416679,6.100194,-5.954969,8.756260,4.737910,-3.159722,3.608220,-7.810323,4.197346,-6.920448,0.729278,6.141371,-1.358750,-2.367816,-3.895072,5.423403,9.416525,-8.949254,6.417080,-9.617517,-0.065957,8.905983,-5.111053,-1.460504,4.432921,7.005588,-7.893337,8.240025,1.999953,4.976890,1.291360,-3.722232,-6.483309,5.606827,-8.017277,-9.636054,-7.184870,-9.908675,-0.664605,0.290024,0.064624,-0.710965,3.921629,3.413411,1.779326,-6.009811,7.952746,3.541804,2.883715,1.825977,-9.485119,-5.033286,1.716021,4.814762,6.009275,-9.613965,-7.563898,4.218921,-7.648440,-9.460716,9.530745,6.298104,-4.658906,-2.292005,8.786190,7.260387,-2.218214,-3.744825,6.946167,1.159670,-4.555090,6.890136,-6.871228,-2.261370,0.976740,-9.486248,9.712485,9.806811,-5.757812,4.316999,-3.432769,-3.397627,2.257792,-9.404252,-5.058890,9.322243,9.115688,9.294641,9.405246,9.933083,5.191637,-1.043850,1.201295,-0.216650,6.838311,5.356681,-7.315018,-9.505692,-5.037703,-9.994772,-4.576610,-3.650743,6.048805,3.556607,4.270956,6.362338,-8.163327,-1.528924,-5.707220,-5.295078,-7.392335,2.809591,9.363757,-9.487458,-5.114548,-0.617282,2.042134,1.671874,1.686447,2.521999,9.480428,2.169528,-8.885722,5.454253,-0.086189,7.257628,2.755254,9.714239,-6.702898,-9.143071,3.549777,-4.675445,4.524966,3.500991,-0.646552,-6.431652,2.045585,-0.905213,4.585935,-0.087369,1.756254,-6.116261,-3.496759,2.776381,-6.116525,-0.013823,-3.727420,-3.697919,-5.967596,-5.815219,-3.050239,-6.088231,-4.481081,-0.606196,-5.383405,7.330682,-8.102319,-7.820893,-5.536846,0.466045,6.993928,-3.642623,-4.283923,-9.090069,-8.871034,-0.941189,6.621178,-7.444826,8.812013,5.157012,-8.188098,9.178249,-3.484732,1.602425,8.489065,5.446558,-3.866879,-8.492759,-7.030752,7.427446,-1.427723,-3.943960,-2.062714,5.796911,5.881787,5.436163,-5.809277,-8.797608,-5.165660,0.426045,-9.308324,5.698805,-0.054400,-6.442070,-2.354434,6.817430,5.750849,-5.706396,-9.667338,5.048819,-9.979166,2.054364,6.852822,4.119143,-3.382140,1.229676,-1.802991,6.596108,-0.849487,4.864268,-9.964649,4.661729,-1.307178,0.821091,-8.042779,-2.073434,-1.296901,9.111036,2.953701,9.219879,5.573520,2.407090,2.765781,-7.823056,-6.432937,-1.993400,-0.334095,-1.407879,1.316181,6.839933,-3.625250,-5.589515,-7.756038,-5.071079,6.756120,8.546588,-5.884584,-0.754866,0.206101,2.953039,-5.733016,-7.951216,-1.247657,-6.992523,0.053434,6.570818,7.197528,-6.442447,8.119824,-2.144087,-1.853533,3.124543,-8.757766,8.415379,-4.449993,3.373978,-4.584039,8.242089,-6.989061,9.524921,9.004214,3.282995,-3.552259,-0.263575,-9.703629,-5.772442,-8.373675,3.459433,4.987806,8.313434,1.923377,4.537166,-0.006953,-4.010052,-8.350210,-8.160284,-0.246546,-1.332613,1.120945,-9.772038,0.432973,0.075629,-4.331039,-7.930098,6.489601,6.394588,-6.675423,-8.692714,7.920528,4.930558,-3.371533,-9.256938,7.612749,-4.634914,9.472137,-9.990194,3.586327,4.098788,-2.262996,-0.031507,5.778274,7.733805,-5.311453,-9.866318,-2.681890,4.969267,-2.214457,-9.144779,-7.176592,-7.361695,6.932675,8.187904,-3.946478,5.095866,-4.657030,-8.488671,6.180626,-3.108274,-3.274040,-8.839003,-4.761646,0.968076,1.294362,4.059366,-4.304625,7.245567,-0.550902,7.421899,7.520424,-0.619855,-6.325749,0.074594,-6.797368,1.428971,8.116108,3.504479,8.853086,-4.478501,-0.771864,-3.820261,2.563612,3.353771,-0.428512,2.216699,1.413420,-0.938163,-1.312381,0.782005,3.264293,8.576664,-5.915945,-5.102638,-4.498485,-8.181437,-4.994691,5.968169,4.254882,-2.775190,6.932894,9.228954,8.259658,-9.199473,-9.875025,-9.342719,-3.312586,-9.408097,-6.453694,-4.629919,3.788634,-2.994700,-1.896228,7.781932,-5.281295,6.458962,1.025872], dtype = "float64")#candidate|7564|(1560,)|const|float64
call_7563 = relay.TupleGetItem(func_6419_call(relay.reshape(const_7564.astype('float64'), [10, 13, 12])), 0)
call_7565 = relay.TupleGetItem(func_6421_call(relay.reshape(const_7564.astype('float64'), [10, 13, 12])), 0)
func_4391_call = mod.get_global_var('func_4391')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_7597 = relay.TupleGetItem(func_4391_call(relay.reshape(call_7548.astype('float64'), [16, 16, 6]), relay.reshape(call_7548.astype('float64'), [16, 16, 6]), ), 2)
call_7598 = relay.TupleGetItem(func_4395_call(relay.reshape(call_7548.astype('float64'), [16, 16, 6]), relay.reshape(call_7548.astype('float64'), [16, 16, 6]), ), 2)
output = relay.Tuple([call_7548,call_7555,call_7557,call_7563,const_7564,call_7597,])
output2 = relay.Tuple([call_7549,call_7556,call_7558,call_7565,const_7564,call_7598,])
func_7607 = relay.Function([], output)
mod['func_7607'] = func_7607
mod = relay.transform.InferType()(mod)
output = func_7607()
func_7608 = relay.Function([], output)
mutated_mod['func_7608'] = func_7608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_7660 = relay.TupleGetItem(func_2981_call(), 1)
call_7661 = relay.TupleGetItem(func_2983_call(), 1)
output = relay.Tuple([call_7660,])
output2 = relay.Tuple([call_7661,])
func_7664 = relay.Function([], output)
mod['func_7664'] = func_7664
mod = relay.transform.InferType()(mod)
output = func_7664()
func_7665 = relay.Function([], output)
mutated_mod['func_7665'] = func_7665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_7888 = relay.TupleGetItem(func_3667_call(), 0)
call_7889 = relay.TupleGetItem(func_3669_call(), 0)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
const_7896 = relay.const([True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,False], dtype = "bool")#candidate|7896|(2112,)|const|bool
call_7895 = relay.TupleGetItem(func_3754_call(relay.reshape(const_7896.astype('bool'), [528, 4])), 4)
call_7897 = relay.TupleGetItem(func_3756_call(relay.reshape(const_7896.astype('bool'), [528, 4])), 4)
const_7935 = relay.const([[[7.199866,-3.669213,7.885777,-7.392979,1.987176,4.742812],[-1.711168,-6.937283,-0.443857,7.212011,-9.852518,2.427353],[4.385854,0.993406,-4.287219,-1.380206,4.469683,9.364761],[6.617249,-5.984575,-0.889782,-3.948876,0.203465,6.063136],[3.615268,6.505492,-9.656682,-2.562963,-9.646899,-9.842733],[-5.485687,-0.507719,0.931360,-8.886008,7.161215,6.195416],[-1.965527,-4.607904,0.804081,-7.253672,-4.337857,-2.823951],[-9.157163,-8.635754,0.258447,4.894367,-0.777940,7.953336],[0.912620,-6.947282,-2.879011,-6.081847,7.247657,-7.666672],[7.176484,-9.798693,-8.346237,-3.089196,2.242937,2.176412],[-2.185319,-9.191872,-4.524337,-8.005502,7.363926,-4.845818],[8.442856,6.012847,2.581124,6.535930,-2.327144,2.364389],[-6.774172,9.440364,-5.341370,-2.183935,8.999586,7.448909],[-5.201729,-3.451893,4.424074,7.501133,5.801123,8.753337],[1.418324,4.491740,-5.680714,-1.813574,5.494238,-4.995031],[7.562390,-3.882708,7.402341,-5.965853,0.388351,-1.937296]],[[-0.816592,1.120042,-1.163093,-5.833242,1.062698,5.594341],[-3.379523,3.648820,6.225033,-1.500076,-1.402874,1.870874],[-1.692598,-3.411236,-7.618475,-0.543668,-1.703407,6.316388],[6.545765,-4.058582,0.331759,-1.084374,-6.512120,4.852986],[-1.947535,-1.948237,-4.567512,-0.473623,0.710322,4.819250],[0.950603,-5.506234,4.639614,-0.517052,-7.551167,-2.073156],[-4.119316,1.216135,-5.268841,-8.409634,-1.692185,8.938850],[0.647605,-7.843980,-4.936180,-3.104039,5.101393,-3.575173],[-6.937986,5.599361,1.662975,7.123445,1.106110,-1.187002],[7.664394,-2.048664,4.834479,2.585853,4.794745,-8.098613],[7.924232,-2.596154,5.716561,4.750498,2.231004,-7.507271],[-0.931660,2.207156,5.212421,9.071300,-0.871722,-2.863888],[-5.777546,-6.519920,5.790764,0.604098,-5.390337,-4.531126],[-4.855435,9.725223,-5.501598,6.721072,8.772514,-1.754185],[-2.795149,-9.405585,7.312553,6.923144,-0.715035,-2.059051],[-1.692597,-6.910276,5.342778,-8.651038,-2.199687,7.738493]],[[-3.519927,-5.115902,0.378762,-9.006073,-9.880105,1.007776],[2.326843,3.964844,-9.378838,-3.677414,-7.661214,6.431884],[4.388972,6.660982,-1.813011,-5.830555,7.390647,-0.732892],[-9.977113,3.561879,7.198106,-0.713558,8.921486,-3.482368],[0.608819,-1.786731,0.936394,0.396035,0.821875,5.980783],[-8.920462,-8.866311,-0.932153,-6.815830,1.473987,6.543694],[-2.705141,-8.950533,-9.171750,-1.197652,8.365622,5.834027],[-5.206947,6.821159,4.292883,8.926204,-2.473293,-9.784825],[4.352050,9.882685,-7.843042,4.781572,0.877712,-9.860170],[6.737604,9.551421,5.491496,5.971729,-8.043550,0.553244],[7.890131,8.368061,8.048366,-0.056917,-2.617330,0.434513],[1.626050,-9.377945,-6.036841,-5.923495,5.694682,-0.101443],[-6.786623,-4.613806,-4.727258,-0.265851,6.065546,-0.160095],[1.620945,7.259265,-9.085999,-5.191142,3.973920,-2.076655],[3.303552,9.953846,3.330296,3.047970,-7.311118,-9.954406],[-7.241171,-8.945276,-5.785573,-4.648846,-4.117932,1.103738]],[[-6.999004,-0.121221,-5.364047,-6.846281,9.413160,-6.078152],[2.221085,-6.804530,-6.322058,3.509592,3.206821,-4.077193],[-7.645666,-3.258107,-3.162681,2.540430,9.281260,-0.304798],[0.979652,-5.106805,7.565283,0.356011,-6.690879,-3.359549],[-9.522640,8.383763,0.218713,2.135584,-8.201312,-6.352445],[9.011237,-7.698386,6.481482,3.557778,2.807339,2.954064],[-8.700525,9.296418,-4.520422,6.138979,1.736636,9.881633],[-8.480246,-3.940639,-6.725196,0.491667,8.651285,-6.139555],[9.838435,0.990317,8.366847,0.843783,0.434607,7.367641],[-7.065493,-2.493436,1.103122,-1.164049,-8.793474,7.111989],[-0.086096,-1.725281,-4.581622,-8.468579,-7.253662,-3.876148],[6.714865,-6.498802,-2.978299,-9.569949,-3.600104,9.287257],[-9.212239,-9.457214,-1.275192,3.941036,-4.486357,-9.024083],[7.973395,-6.087991,-3.387264,2.964424,-3.981177,-3.881021],[6.208107,1.283149,7.879839,-5.866947,3.215012,-9.423043],[-6.053754,-8.869139,-7.630769,1.437657,3.813639,0.627550]],[[-1.266721,8.699574,-9.329133,1.251681,3.266687,-0.107635],[1.499423,-3.511665,2.504936,7.270631,5.938982,-2.959289],[-8.187065,6.794329,-3.961340,-5.717181,5.837457,8.286802],[8.923622,-4.853014,-6.741223,-0.229022,5.400157,-4.162719],[2.315718,-0.712963,0.932878,-7.991700,-7.325677,4.346314],[2.179819,2.072135,-4.307663,-8.632603,2.377541,-6.336237],[5.667471,-2.010330,3.961107,4.648051,-6.054085,3.977282],[6.611637,2.974508,0.866003,-9.825740,-2.603511,-9.766226],[-6.586103,2.974990,0.374303,6.478104,-7.447805,8.083907],[-4.513173,-1.917243,-5.726348,-3.069560,-6.626558,4.339933],[5.091361,-0.166337,4.774284,-4.890355,9.259254,8.106346],[8.506836,-6.204856,-2.622219,1.762915,-2.398265,4.012980],[-9.674818,-1.250873,-3.190165,-8.904905,4.522378,1.114202],[7.828058,5.230859,0.141957,3.152809,5.233353,-9.110654],[5.617688,8.789142,-0.728046,-2.857327,-7.052405,6.124135],[-7.572440,-6.966884,-1.470870,-6.241027,2.294687,-2.377897]],[[1.098530,5.889523,3.066378,-7.938618,-1.968247,8.486944],[0.194159,3.234359,-7.038160,-9.164615,-1.669468,4.911868],[-0.498686,1.473148,0.434857,2.091152,8.454388,3.219123],[-4.365819,-2.271616,5.046163,5.991251,2.259463,4.967635],[1.946596,8.865669,-9.905032,-5.869130,-4.141152,0.648198],[-1.969444,-6.004453,8.604745,-8.959147,-4.191930,-7.487853],[-9.953568,-7.768829,-8.691401,-7.907656,9.896137,-0.444596],[-1.835006,-3.433286,-2.944251,-7.718109,-6.470765,-1.494171],[-8.560976,-1.101322,2.090002,3.703454,-9.335940,-0.913113],[9.409333,1.785920,-1.907451,-2.152675,-9.426788,8.946219],[-5.638043,1.792065,8.470150,6.926968,1.399667,-2.949065],[-1.857779,-8.022038,0.029997,-5.471430,2.913579,6.159812],[8.271148,-1.633837,-7.571261,-6.074144,4.337542,-6.055057],[2.711689,9.190914,8.104716,-9.605200,4.458757,-8.312155],[9.170150,9.019868,-0.915267,-2.723198,-8.693088,-8.381339],[-6.155616,-3.790113,-2.811051,-1.488159,-9.641479,-1.601435]],[[5.457097,9.645363,-9.019477,2.143238,-2.461498,-7.132869],[6.313749,-6.701986,-3.599191,2.999986,4.230957,-0.700745],[-3.186456,-4.293000,-4.877244,-2.741031,8.317142,-5.337083],[8.298693,9.561303,-5.440262,1.311234,-7.080362,-6.861980],[-4.690231,3.563558,5.565837,4.436774,8.649274,-9.353640],[7.417023,3.130151,-2.427458,-1.145561,-6.951891,-0.944061],[0.224846,-8.196382,8.725552,-8.578408,-5.844140,-9.885948],[-5.204003,3.222744,1.992504,9.502791,-2.819329,6.510989],[9.428691,6.643686,3.620375,-7.507875,1.582972,-0.053726],[6.000473,-5.534032,-9.907725,4.544099,-6.894087,-2.301342],[-3.435459,-7.505003,7.438209,-7.152255,1.230757,-0.633861],[1.832395,-2.142509,7.043805,8.780925,1.058203,1.004683],[-0.595657,-3.028818,5.845876,-5.633336,3.490991,4.146121],[-8.617946,5.494181,8.247462,-1.285008,-0.862218,8.081028],[7.661006,0.681891,-7.116328,3.804521,0.272022,5.108818],[-1.531184,0.516243,4.463330,-7.021926,-8.517426,2.325015]],[[5.399614,-5.259260,-1.478872,-1.270793,-7.147553,1.769104],[-6.621249,-4.541256,-2.705730,-9.733466,1.921843,-6.954409],[-5.440484,3.860002,-8.686085,-4.850552,-4.438578,-2.906565],[-8.499213,6.165238,-3.159103,4.553145,0.601182,-7.052342],[-9.366584,-5.169408,-9.817141,-7.265641,-4.321526,3.054126],[-9.682798,-2.736699,-2.754162,-4.466880,6.371190,-4.236703],[-7.913483,-9.997499,3.719943,2.116423,-3.997042,9.586821],[4.987809,7.804167,2.664093,-4.289130,5.517085,5.129642],[4.049273,-3.120925,3.781670,-2.655018,8.192401,6.337259],[-5.202415,-6.111919,-5.725484,9.365825,9.196217,0.037933],[-1.899980,-5.310996,5.880666,8.374457,2.172548,5.547573],[-4.596789,-3.404547,8.665838,-8.628302,9.813181,-8.976292],[5.965855,4.864682,-5.342541,3.204845,-4.203749,-0.906916],[6.387723,0.869658,-0.926027,2.486623,-9.078863,-7.747318],[3.632823,0.228124,8.047446,4.625676,-2.993847,4.632915],[3.710776,6.778012,-2.520087,4.996069,3.756126,3.524231]],[[-9.890642,0.651401,-2.247549,-1.533468,-0.748745,-0.192576],[9.995556,-5.381054,-9.342506,-7.934452,1.010734,-8.452585],[-3.027730,8.833933,-4.114075,0.610889,-1.333198,5.833166],[-6.446401,-5.822570,-9.575516,-8.714102,-7.622850,1.865212],[-4.212106,6.451620,5.202645,3.519267,1.742459,1.188386],[5.953180,-3.610974,5.962962,3.961601,0.324928,4.819850],[-3.731482,9.072637,-8.377821,-9.097844,8.771344,-6.572689],[3.377725,-3.862674,0.003557,-7.036874,-1.944202,-7.276767],[-6.267546,3.256415,2.098202,6.917737,-8.582001,2.287866],[1.173318,5.130396,6.224519,9.087407,2.129822,5.573726],[-9.273332,-5.751752,0.567545,-4.353025,-5.727693,3.951072],[-7.563803,6.670314,-2.124869,-5.131320,-7.484475,-5.489412],[7.840122,-5.879169,4.256419,3.466389,7.762660,-3.238929],[-0.990319,7.584950,-0.622862,8.729751,5.246587,2.975866],[5.387229,-4.804188,3.761515,3.694283,-9.115895,0.241125],[6.038025,9.777714,-1.929021,3.812823,0.585694,1.183262]],[[-6.652298,-4.599121,-0.933548,2.742557,2.605890,4.983482],[-5.995689,-0.154512,9.919705,-7.814381,-3.729280,8.261044],[3.652976,-0.921472,8.678383,-3.267653,-0.261847,-7.656800],[-0.125630,-6.664229,0.529211,-2.094614,-5.814558,-7.116230],[-5.495866,-9.974248,3.090401,-3.474378,1.455400,3.531405],[-4.261267,-5.992987,-3.165977,5.142939,-3.280205,3.789216],[-6.106130,1.323598,-2.169872,-8.276562,-5.578579,7.082286],[-3.589312,-3.273421,-1.959757,2.938194,2.396655,1.898803],[-8.505915,-9.662887,-0.008644,-6.671188,9.821808,9.307547],[9.037193,-2.552077,8.951359,5.082943,8.455742,8.705997],[0.034232,3.497940,-1.964711,0.220586,6.756681,9.909699],[8.952089,-9.197546,9.056666,-7.222001,6.954109,-0.016090],[-1.727332,9.736953,2.282417,-4.317636,7.966888,2.075564],[-9.995576,-3.868656,-2.722144,-2.856870,1.581150,-4.384945],[-1.985216,5.106654,5.278146,-6.872335,-9.334636,-9.223890],[-7.718243,-0.280804,-1.975415,7.983924,-4.163762,-5.114943]],[[4.339942,-6.081793,-0.015819,9.633863,3.074078,-3.819437],[-2.259787,2.036171,-3.467680,-9.497302,-0.131331,-3.670139],[-6.565842,5.777110,6.949427,1.716271,-1.145324,9.517713],[-7.851103,-8.878238,-0.109119,7.556253,3.728014,1.667206],[-5.726205,3.163841,-1.487685,4.269166,5.592343,-5.445489],[-4.060220,-3.051866,7.410801,0.662654,-1.389750,-5.753778],[8.947688,-2.715664,-1.800426,-4.451043,7.501623,0.363973],[-3.415827,8.857552,0.451198,-0.718316,0.167203,5.729588],[9.738269,4.481481,-3.205515,-9.187156,3.724209,-0.555652],[-6.503025,-1.846194,-7.703618,8.839440,-0.160471,3.866419],[-6.626667,1.130739,-8.232058,0.739317,-9.320942,3.866902],[-1.176789,-3.144059,-0.940230,6.566094,3.375107,0.333299],[0.385229,-8.061307,8.227969,8.395476,-0.061524,8.940605],[7.536272,-6.032292,2.410390,-5.556692,4.105389,0.498650],[-6.236277,-7.815348,-2.868883,4.763738,-2.478566,6.304283],[7.883228,-8.415306,-6.841397,-3.338653,-9.370107,1.348960]],[[5.186326,3.350263,-8.107416,-9.076079,7.521292,-4.035988],[-0.917286,6.090854,-2.571498,-0.344136,0.973306,3.598432],[6.736201,-4.689920,-6.840488,0.034511,2.656048,-2.753517],[-0.634958,-3.091852,0.984545,6.314401,3.264362,-0.179888],[-5.977404,9.580615,9.553353,8.877271,6.330783,-8.628665],[8.749564,3.254238,-0.558393,-7.222113,-4.845057,-5.963011],[0.865860,-7.292660,-4.520597,-3.252285,9.555161,8.002023],[-0.340231,1.952262,-2.214146,9.249981,-3.275412,-7.604652],[-0.803475,8.605960,-6.568778,-3.162602,0.564759,-9.633176],[-2.165437,-4.675908,-7.310802,-7.154004,-5.537874,-4.022225],[-6.371171,-4.410673,-3.579371,4.820379,4.187683,-3.303599],[8.048102,-7.408293,7.106775,-3.248711,0.724301,2.447960],[-4.003945,0.652031,-3.671631,5.601765,6.191161,5.245598],[0.565945,4.009251,5.087572,-8.026766,-9.688478,4.972445],[7.736526,6.145753,8.478444,-0.557527,6.189580,-1.900516],[-6.327210,-4.056330,-8.894276,6.277902,-7.381363,-6.198421]],[[-3.362373,-1.400922,7.368883,-4.034827,-6.746753,-0.668434],[7.371133,1.023345,-1.756548,-9.004551,-1.609982,-4.747093],[-6.256195,-5.080541,-9.725481,-7.813051,8.845453,-7.713264],[-9.107654,1.233272,-1.668384,-3.474336,-8.962246,-0.708525],[-9.109115,1.411909,5.526259,1.685845,-6.199463,2.163181],[-6.476089,0.550642,-2.838311,4.431997,5.862448,1.898255],[-6.854634,7.331964,-9.409261,2.528410,-6.779276,1.378733],[-7.868431,8.831747,-8.715366,-8.632623,-7.489902,-1.110641],[2.746152,2.091230,-7.606247,-6.263907,0.208800,6.373209],[-3.527557,-5.424707,-0.516523,-0.235388,-5.523868,2.897830],[-0.100843,5.588036,0.420215,-1.337201,4.647779,6.518491],[-6.693351,-3.500264,5.698075,0.035103,-4.307696,-0.972914],[2.520620,-8.090377,-5.744097,-4.745626,1.246802,7.803619],[9.844051,9.804439,-9.116684,-4.154114,-8.955789,-1.778508],[4.427891,4.720071,6.198058,-9.298903,0.925233,-2.887524],[-7.258524,-2.330981,-9.128360,-1.327658,1.575518,2.054325]],[[1.307564,4.809822,-1.349616,7.113701,7.461466,-2.337670],[1.653038,-0.796376,9.791460,-9.415330,8.031374,9.572867],[8.471378,-9.192826,9.672931,-2.485550,1.046410,-8.820691],[6.338796,6.587283,2.060382,6.420085,-6.582456,3.931730],[-9.822990,3.589447,-8.310105,1.432354,6.118057,4.697116],[8.736787,7.452261,1.328823,0.491912,5.721904,2.977853],[-1.816621,7.488109,-6.235961,-6.621738,6.993927,7.880175],[-1.009989,4.799164,-8.325167,-1.957723,-2.873964,-4.953667],[1.326423,-1.277474,6.144521,9.101005,-4.722485,-2.179523],[4.728981,8.712882,8.628515,4.638764,4.650374,7.249204],[6.192413,-7.909104,5.486677,6.155920,-9.648878,8.744079],[4.028575,2.337399,-0.928769,6.477938,-7.393040,-7.928685],[8.883438,4.647536,-8.527616,-0.433257,-5.382124,3.628946],[5.383407,-6.408094,-4.701657,6.076620,7.600436,0.762275],[0.122065,7.299942,1.400090,3.447812,0.408399,4.424483],[9.519149,2.286341,-0.413210,1.878995,1.561160,1.422348]],[[5.657542,-9.557589,8.019523,-9.980206,-9.309374,-2.724318],[6.727046,-4.746267,-6.580178,-8.588703,6.773507,1.027506],[-2.337162,1.007510,9.112167,2.612880,-2.642391,8.734925],[9.736381,-3.891498,9.769675,0.899779,-1.676736,-9.870271],[-9.925516,-3.366324,-6.496093,7.952423,-3.007233,8.122535],[-2.862773,-7.381174,-9.396425,-1.117740,-3.528563,7.039573],[-2.116627,-2.267324,-5.462110,2.816200,-8.722431,-8.671854],[-8.108815,0.953106,-9.986467,-2.915820,-4.307107,5.394423],[-0.492457,-9.447246,-2.122644,-1.822689,7.324368,6.318067],[8.998796,-4.786183,-4.643040,5.610610,-8.492199,4.696492],[4.135709,6.140604,0.079404,-0.542706,4.548327,-8.917541],[-7.604920,-6.458740,0.340309,1.900726,-0.240621,-1.337280],[-7.288814,3.809431,7.366905,2.625316,-7.998339,-7.985203],[-1.729636,3.673439,8.353953,6.502742,9.547325,5.807800],[-7.644899,3.586227,-2.729875,7.757984,8.411823,-5.797584],[-8.995477,8.791335,-9.326436,-1.619119,-1.843813,-0.269579]],[[5.936956,3.179054,2.270468,4.612920,9.905832,3.253375],[8.626650,-6.585932,6.370416,7.335690,4.154686,7.361351],[-2.972945,-7.359408,6.091788,-0.362494,-9.604492,9.003240],[9.200100,0.529799,-0.716584,-7.000938,-0.025627,-2.058404],[6.367828,4.285973,1.587865,7.875790,-3.665249,-0.495776],[-5.161007,-4.821246,3.174845,8.969376,-4.096355,8.760306],[0.217383,-7.348715,2.540568,1.572153,-5.055251,9.072102],[2.013763,3.626844,-3.088305,-5.093614,0.701363,4.810282],[-2.899133,8.275253,-1.018634,4.595263,-6.657981,0.364457],[8.445264,0.070615,1.702709,2.049153,4.701486,-7.190634],[-2.220673,-5.730041,7.463467,-9.080826,-6.312287,-3.245298],[3.952304,-2.352689,-0.814779,2.328589,1.219657,2.372082],[1.639621,2.739887,-9.351177,-2.289141,-9.277185,-8.859502],[-9.628919,-1.425690,-4.441265,4.603538,-4.426428,6.039806],[7.914625,-5.074654,2.598147,0.288943,-1.779684,6.576114],[-0.204042,-8.461248,4.518335,-7.320801,6.227276,-3.684295]]], dtype = "float64")#candidate|7935|(16, 16, 6)|const|float64
bop_7936 = relay.add(call_7888.astype('uint8'), relay.reshape(const_7935.astype('uint8'), relay.shape_of(call_7888))) # shape=(16, 16, 6)
bop_7939 = relay.add(call_7889.astype('uint8'), relay.reshape(const_7935.astype('uint8'), relay.shape_of(call_7889))) # shape=(16, 16, 6)
func_2596_call = mod.get_global_var('func_2596')
func_2599_call = mutated_mod.get_global_var('func_2599')
const_7944 = relay.const([8,9,6,-10,2,9,-5,-5,-1,6,-3,-4,-7,-9,3,-4,8,5,-9,-4,-4,3,4,-8,6,2,6,-8,-8,2,1,-2,-1], dtype = "int32")#candidate|7944|(33,)|const|int32
var_7945 = relay.var("var_7945", dtype = "int32", shape = (264,))#candidate|7945|(264,)|var|int32
call_7943 = func_2596_call(relay.reshape(const_7944.astype('int32'), [3, 1, 11]), relay.reshape(var_7945.astype('int32'), [3, 8, 11]), )
call_7946 = func_2596_call(relay.reshape(const_7944.astype('int32'), [3, 1, 11]), relay.reshape(var_7945.astype('int32'), [3, 8, 11]), )
output = relay.Tuple([call_7895,const_7896,bop_7936,call_7943,const_7944,var_7945,])
output2 = relay.Tuple([call_7897,const_7896,bop_7939,call_7946,const_7944,var_7945,])
func_7953 = relay.Function([var_7945,], output)
mod['func_7953'] = func_7953
mod = relay.transform.InferType()(mod)
var_7954 = relay.var("var_7954", dtype = "int32", shape = (264,))#candidate|7954|(264,)|var|int32
output = func_7953(var_7954)
func_7955 = relay.Function([var_7954], output)
mutated_mod['func_7955'] = func_7955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4052_call = mutated_mod.get_global_var('func_4052')
call_7963 = relay.TupleGetItem(func_4051_call(), 1)
call_7964 = relay.TupleGetItem(func_4052_call(), 1)
func_4961_call = mod.get_global_var('func_4961')
func_4962_call = mutated_mod.get_global_var('func_4962')
call_7970 = func_4961_call()
call_7971 = func_4961_call()
func_7503_call = mod.get_global_var('func_7503')
func_7505_call = mutated_mod.get_global_var('func_7505')
call_7972 = relay.TupleGetItem(func_7503_call(relay.reshape(call_7963.astype('float64'), [1536,])), 2)
call_7973 = relay.TupleGetItem(func_7505_call(relay.reshape(call_7963.astype('float64'), [1536,])), 2)
func_6270_call = mod.get_global_var('func_6270')
func_6275_call = mutated_mod.get_global_var('func_6275')
var_7975 = relay.var("var_7975", dtype = "float32", shape = (968,))#candidate|7975|(968,)|var|float32
call_7974 = relay.TupleGetItem(func_6270_call(relay.reshape(var_7975.astype('float32'), [11, 8, 11]), relay.reshape(var_7975.astype('float32'), [11, 8, 11]), relay.reshape(var_7975.astype('float32'), [11, 8, 11]), ), 0)
call_7976 = relay.TupleGetItem(func_6275_call(relay.reshape(var_7975.astype('float32'), [11, 8, 11]), relay.reshape(var_7975.astype('float32'), [11, 8, 11]), relay.reshape(var_7975.astype('float32'), [11, 8, 11]), ), 0)
func_2835_call = mod.get_global_var('func_2835')
func_2838_call = mutated_mod.get_global_var('func_2838')
var_7978 = relay.var("var_7978", dtype = "int32", shape = (33,))#candidate|7978|(33,)|var|int32
const_7979 = relay.const([4,9,6,8,1,-10,-6,6,-7,-4,3,-9,-1,-10,-6,2,-2,-9,8,-4,-1,2,9,9,8,-10,-3,3,-3,-10,3,8,10,6,7,7,-4,-7,-6,1,-2,-6,2,-10,6,4,1,-5,-1,8,-10,-6,-5,-9,9,-6,-1,-7,-4,5,-6,-9,3,7,4,-10,2,1,8,10,-10,-10,1,-3,4,-4,9,9,-7,5,-2,8,-2,-5,8,10,4,-8,-7,9,-9,6,-6,1,1,-5,-3,-1,9,-5,-1,-5,-5,1,4,-7,-3,-2,-8,-10,-8,-2,-7,6,-8,3,6,-6,2,4,7,8,4,7,-2,-1,-2,-3,-7,-7,10,4,-9,-8,8,-7,-5,3,9,-3,8,3,-10,-1,5,-10,9,2,6,10,-4,-1,4,-2,5,-5,-1,3,3,8,3,3,-4,9,-7,-6,-8,1,2,-6,-1,7,7,3,7,10,-1,-1,1,9,-1,-8,3,-10,5,9,6,9,-8,-7,-6,-5,3,-4,-6,-10,-7,5,-2,-2,-2,4,-8,5,-5,-3,1,-8,3,-9,-6,-5,1,-2,8,1,-8,10,-8,-4,-9,-6,4,-5,7,-8,-4,7,-5,-8,4,3,-4,7,-1,-7,-7,-1,6,-8,1,-7,10,-2,-2,8,-10,9,7,6,-7,6,-5,-5,-6,-7,10,4,7,-5,-4,6,-5,8], dtype = "int32")#candidate|7979|(264,)|const|int32
call_7977 = relay.TupleGetItem(func_2835_call(relay.reshape(var_7978.astype('int32'), [33,]), relay.reshape(const_7979.astype('int32'), [264,]), ), 2)
call_7980 = relay.TupleGetItem(func_2838_call(relay.reshape(var_7978.astype('int32'), [33,]), relay.reshape(const_7979.astype('int32'), [264,]), ), 2)
func_2686_call = mod.get_global_var('func_2686')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_7985 = func_2686_call()
call_7986 = func_2686_call()
output = relay.Tuple([call_7963,call_7970,call_7972,call_7974,var_7975,call_7977,var_7978,const_7979,call_7985,])
output2 = relay.Tuple([call_7964,call_7971,call_7973,call_7976,var_7975,call_7980,var_7978,const_7979,call_7986,])
func_7989 = relay.Function([var_7975,var_7978,], output)
mod['func_7989'] = func_7989
mod = relay.transform.InferType()(mod)
var_7990 = relay.var("var_7990", dtype = "float32", shape = (968,))#candidate|7990|(968,)|var|float32
var_7991 = relay.var("var_7991", dtype = "int32", shape = (33,))#candidate|7991|(33,)|var|int32
output = func_7989(var_7990,var_7991,)
func_7992 = relay.Function([var_7990,var_7991,], output)
mutated_mod['func_7992'] = func_7992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4961_call = mod.get_global_var('func_4961')
func_4962_call = mutated_mod.get_global_var('func_4962')
call_8005 = func_4961_call()
call_8006 = func_4961_call()
func_5064_call = mod.get_global_var('func_5064')
func_5066_call = mutated_mod.get_global_var('func_5066')
call_8017 = relay.TupleGetItem(func_5064_call(), 0)
call_8018 = relay.TupleGetItem(func_5066_call(), 0)
output = relay.Tuple([call_8005,call_8017,])
output2 = relay.Tuple([call_8006,call_8018,])
func_8049 = relay.Function([], output)
mod['func_8049'] = func_8049
mod = relay.transform.InferType()(mod)
mutated_mod['func_8049'] = func_8049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8049_call = mutated_mod.get_global_var('func_8049')
call_8050 = func_8049_call()
output = call_8050
func_8051 = relay.Function([], output)
mutated_mod['func_8051'] = func_8051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4030_call = mod.get_global_var('func_4030')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_8175 = relay.TupleGetItem(func_4030_call(), 2)
call_8176 = relay.TupleGetItem(func_4031_call(), 2)
output = call_8175
output2 = call_8176
func_8204 = relay.Function([], output)
mod['func_8204'] = func_8204
mod = relay.transform.InferType()(mod)
mutated_mod['func_8204'] = func_8204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8204_call = mutated_mod.get_global_var('func_8204')
call_8205 = func_8204_call()
output = call_8205
func_8206 = relay.Function([], output)
mutated_mod['func_8206'] = func_8206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7243_call = mod.get_global_var('func_7243')
func_7245_call = mutated_mod.get_global_var('func_7245')
call_8261 = relay.TupleGetItem(func_7243_call(), 0)
call_8262 = relay.TupleGetItem(func_7245_call(), 0)
output = call_8261
output2 = call_8262
func_8267 = relay.Function([], output)
mod['func_8267'] = func_8267
mod = relay.transform.InferType()(mod)
output = func_8267()
func_8268 = relay.Function([], output)
mutated_mod['func_8268'] = func_8268
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8279 = relay.const([[[-4.159258,-8.042115,-6.653171,-6.563671,-5.793277,-8.949593,9.037135,0.679676,-5.248845,-0.525790,5.256798,-2.690642,-7.261255,9.898543],[3.462998,6.379760,-7.036012,7.292296,-6.423778,-6.962008,1.403697,8.161572,2.602036,5.331659,-8.556769,-8.415463,-4.521407,9.377254],[-8.799963,4.632148,-1.751663,1.618137,-4.510869,1.752501,6.797400,-0.384161,-2.894323,9.819784,-4.012152,-6.617538,-6.331853,8.926565],[7.482252,-2.681002,7.848270,1.728186,-0.460991,-8.390941,3.038118,-2.446375,2.187746,5.824584,-4.393532,5.321200,0.676753,-3.641601],[8.178728,-7.303802,-6.798513,-4.607643,-2.299429,0.066682,5.760078,-8.546157,6.876053,0.642632,7.329829,9.966043,0.845766,-2.509379],[-6.459278,5.272756,-2.379958,-6.751649,-2.322645,-2.494665,-9.494958,6.638961,3.806854,-2.274181,-6.604286,4.812339,-7.432418,-9.331551],[-5.214148,5.127222,0.486225,-4.341023,-6.577524,-4.964751,4.695857,-9.324955,9.057021,1.956896,2.641041,2.410403,6.934823,9.653302],[0.664410,-0.600686,-5.203035,-9.646560,-3.543937,-8.423865,3.172483,6.712368,7.651503,-2.500145,0.639615,-2.789893,1.100827,1.980293],[-2.937233,3.812327,-4.228798,8.489169,3.718276,-2.898218,-9.061248,-5.382001,3.058468,9.358226,5.667171,7.243184,1.778900,6.096843]],[[-6.921727,-9.016014,9.339993,-8.394244,1.554577,4.698178,-8.151298,-9.202660,-5.050983,-3.054566,-1.822957,-5.627299,-0.900785,-8.468987],[7.467941,-4.453777,-1.661125,2.828140,-2.922873,5.134200,4.444228,-8.783762,-5.578761,5.266985,-9.796222,8.876763,3.877545,-5.190718],[4.979035,1.486822,5.581748,-9.389825,-7.277314,4.531451,-1.719946,-2.146389,1.950229,5.244378,0.522834,-0.280015,-6.343714,-9.083831],[-3.951230,7.647419,-4.404356,-8.715258,6.849419,1.852166,-7.984272,-1.906711,-1.904696,0.406767,-0.971473,9.823345,6.442182,6.465656],[5.369916,5.582636,-0.830633,-2.186565,5.185054,-7.902820,8.913134,7.181628,2.220008,-3.719108,-5.000752,8.696600,-6.026827,4.906142],[7.446321,-1.349145,-2.197071,-5.111651,-4.844432,4.096298,5.963073,-1.737781,-9.837482,1.538894,-3.180959,4.711812,0.486694,4.313598],[7.481502,8.136611,1.593157,-8.640821,8.179788,-1.837723,5.607056,8.219383,-8.162944,6.155362,1.563026,-5.017909,6.959396,0.201755],[-2.541877,-4.769190,6.178875,-6.394459,7.350448,-6.014149,0.373313,0.951611,8.855952,-0.290327,-9.835698,-8.319133,-0.709668,3.035546],[-4.763508,-4.226674,7.773070,-0.905497,-3.912439,7.083968,4.284157,-3.998188,2.044746,0.389383,-3.589640,-3.453488,-8.287461,7.061124]],[[0.753425,-0.130984,4.891985,-4.622509,0.914892,9.389029,-9.146663,-2.049796,-7.734299,-9.709597,-6.321557,-6.392001,4.000128,4.210144],[0.271664,-9.791837,-0.813082,-7.857891,1.201114,-1.970943,-6.552679,-9.485853,0.241933,-1.628072,3.553617,4.571523,2.722421,0.624219],[-3.116315,-5.302550,0.783057,-5.266614,1.890929,8.827898,0.874155,9.095798,4.197000,-8.407653,-1.697378,-0.611667,-4.222503,3.522715],[-7.322394,-0.640997,-4.415072,-9.521545,-0.804194,4.235071,-7.311742,-8.475567,-3.416318,8.773176,-0.837769,-9.308321,-1.322734,-8.869168],[-5.425885,-5.373595,-6.734811,2.130802,3.114329,-9.093605,-7.775635,1.147775,-0.355134,1.565658,-4.595698,-8.932169,-2.117802,8.735811],[-7.371500,1.222724,-8.113479,2.568238,8.598319,7.650243,-0.449674,-6.300581,2.891165,8.882987,2.381121,-1.559665,5.902321,-6.583961],[-1.668457,7.360766,-1.526653,6.333525,-0.704760,1.396013,-5.095355,9.933895,7.725840,0.891943,1.366252,-0.787520,5.739754,-6.373088],[-6.949839,7.723329,5.363533,8.995308,9.301587,-5.134389,1.487363,3.208694,-8.101069,-9.447039,-3.209271,-6.357986,5.688065,6.785471],[3.119176,1.014461,-7.361630,-0.579448,1.907089,5.396787,1.391888,5.857970,-9.988578,-2.011863,8.584781,-5.470168,-2.021191,5.395157]],[[3.136570,6.452131,2.439193,-2.833433,2.643129,8.588187,-9.116472,3.582680,-7.056473,-2.245146,-9.501399,8.404117,-1.511202,2.967415],[-1.860931,-5.815362,1.071265,-6.891747,-6.055166,7.082433,-0.291925,1.603853,7.977704,-7.267501,2.308222,-0.022199,1.577863,9.925310],[9.468176,-8.901506,4.042507,-5.659350,-8.358928,7.979596,6.524708,-9.122193,0.464677,0.272578,1.630207,-4.058016,-7.069970,-0.733586],[-3.247245,3.398960,-4.624644,8.110319,-8.379888,0.824832,3.417622,-9.005906,0.441178,-9.400741,-3.593556,1.528936,3.208668,-9.666691],[4.216053,8.905076,-4.088610,4.929672,-9.851126,-6.594455,-8.439393,-4.215246,0.678101,7.963190,0.485577,0.524538,5.185154,5.555314],[8.163519,-3.339365,-0.526559,-7.191095,5.390722,-9.470339,4.472634,-3.266552,-4.034446,9.244140,5.855944,-9.349440,-5.167435,-8.991840],[-3.382612,-9.141145,6.258533,-7.626240,-4.179336,-9.689901,3.521371,8.599210,-3.030995,-8.757030,-4.303282,-7.198146,-7.469732,1.800387],[-7.777383,-9.920394,0.549608,-8.679603,-6.912667,3.182074,-6.390572,-8.093689,-0.578240,-4.134736,9.140139,2.022355,-8.894742,-9.053702],[-8.237336,0.808041,8.443470,7.029770,-3.209877,-2.623926,7.047171,5.121518,8.198024,2.431674,4.900436,-0.111989,-8.544217,7.093243]],[[1.666664,-6.298922,9.201259,5.385994,0.339651,4.862527,-1.798810,-1.744759,8.620235,2.792222,4.407481,-4.543127,-0.891494,-2.498929],[-4.909269,4.765345,5.709308,3.193867,1.592731,4.484971,-5.871895,-8.708230,-2.632809,-9.385251,-0.360501,3.810919,-5.903716,9.582539],[-3.334486,4.369856,4.642145,1.232903,-3.117816,9.074992,5.872619,0.510529,5.037887,-9.918630,-3.207745,-7.072227,4.911200,7.943345],[4.911949,-0.988846,-9.423835,0.333006,3.717046,-7.258201,3.379030,4.160916,-2.487708,-8.409233,4.013066,-4.385630,4.551545,-7.432014],[-3.266007,-1.853499,-7.979039,2.760546,2.428322,-1.048839,9.692055,-6.461577,-1.009974,8.853393,-4.487187,8.458325,0.077389,-5.247840],[-1.746283,4.737990,-2.890601,-5.644398,-9.077323,8.207293,-3.511687,-0.172461,-4.745141,8.771530,8.163864,4.756287,-1.741580,7.701303],[-2.054684,7.939408,-2.851000,0.559109,-0.094649,-7.545473,-7.534636,-8.082599,0.037873,-4.255089,-7.953997,2.568466,7.075930,8.152952],[2.254406,5.934176,-1.902502,-2.980115,6.386696,1.875154,6.336790,-7.549119,9.019576,1.893887,-2.776763,-8.096075,2.679742,-8.870830],[3.841917,-0.549487,-0.327033,-5.509004,-5.084696,1.883174,0.890196,-5.129984,-1.808586,-6.910272,7.693790,1.044667,9.240037,-3.432318]],[[4.446337,0.864431,8.901476,4.456261,7.176296,-6.173632,-7.718771,9.009887,2.765456,-8.694694,2.109056,3.456853,-2.216207,-3.776642],[8.574648,-0.127742,5.389997,1.733425,-4.920530,-7.996041,-7.897780,3.413669,-3.559691,-3.685369,-9.781237,-6.567100,9.177573,6.857460],[-4.583095,-3.248125,-9.005559,-2.168585,-9.482769,-2.971817,-3.332327,4.030680,-6.016614,4.282249,4.359918,-9.597627,-8.283262,6.037353],[-4.459705,-0.033935,-1.108397,-6.645176,3.485221,-8.206556,-4.741375,-8.833802,1.651897,-4.324982,3.543151,4.368124,5.477911,-5.394061],[-3.103276,-3.453921,-1.583266,1.355884,1.775330,-3.773078,-2.098883,-3.537334,0.122835,4.743672,-9.555350,-6.664858,0.452569,8.394668],[2.561702,-0.328484,5.288864,5.421432,2.850840,6.979239,-0.143761,-2.658282,-3.135208,-2.090312,7.736627,5.572431,2.071738,0.504613],[7.530344,8.778822,4.406511,-4.983869,-7.346684,-7.516459,-0.857967,-9.220114,7.225225,6.650441,-8.914063,-9.361580,8.368725,8.405908],[4.753374,3.359049,4.045725,-8.418248,-9.484587,-1.267096,-6.209917,4.441428,-5.781879,0.662386,-5.388530,0.653940,-6.498439,-0.807547],[1.999253,-8.954543,2.879948,3.626809,2.210911,5.871999,-4.765482,-4.291563,-2.775197,0.446097,-1.095860,6.761316,2.249281,5.697542]],[[-1.201179,3.549619,4.600441,-8.270488,0.701976,-2.273792,8.860275,7.630589,8.754311,-4.647493,7.691179,-0.600568,6.296604,-9.169091],[-3.543427,-4.439829,6.372240,6.679921,-2.689304,5.706196,5.594789,-9.429626,7.002420,8.374576,8.748009,5.191823,0.515869,-0.143338],[1.891346,-2.812286,-0.473291,-8.845295,-9.194301,0.551598,9.218494,0.785776,-7.289723,-6.291562,3.877370,-0.581162,2.063015,1.710719],[2.260030,0.487579,-9.153660,-0.488745,5.635761,-6.186483,-6.124202,-5.064754,4.440386,2.248308,7.241686,4.089841,4.143749,2.470332],[4.888394,7.172846,0.829745,4.389336,-2.025066,-3.427210,-1.431050,-4.525254,-0.661272,4.052032,-6.908281,6.697530,-4.004788,-1.211354],[-4.162262,-8.741304,-7.931124,-4.185830,2.476905,3.901620,-5.559041,3.014360,-3.594383,7.535031,-5.398065,-3.405456,8.320153,-9.921510],[2.633765,2.216582,-4.553198,7.152914,-8.469251,-8.342371,-3.636534,4.583967,-2.640202,9.389295,-8.908010,5.363100,1.001077,7.278630],[-5.106811,-8.718115,-2.362353,7.912729,-7.277442,2.135864,7.744711,-4.924386,0.857077,-1.149882,-6.084733,6.374661,-3.840867,2.842819],[-5.404010,8.979516,-6.895043,-9.012377,5.631913,3.389511,3.540197,-9.197097,5.442393,-9.927775,7.259499,-0.689465,-9.633949,-9.818959]],[[-7.111486,7.734346,8.788234,5.265493,-1.391091,-9.315268,-6.607374,5.664631,7.613958,-7.642966,-1.841436,8.069763,5.889599,0.099244],[7.860538,-2.808714,6.375816,8.819642,-1.019134,-7.254603,-8.794854,7.073287,5.472062,-5.262804,-1.030667,3.676674,7.098234,-4.460897],[-5.275039,3.557405,-6.673988,1.543508,6.961274,-5.627231,-2.226649,-6.629592,6.162825,4.897509,2.802314,6.068488,-2.196765,-4.337902],[-1.870740,-8.122173,7.194786,-0.619473,9.079032,8.888323,-2.268778,7.311902,2.147903,-5.858053,0.673899,5.630873,0.442726,-3.394677],[4.450396,-6.212941,-9.743016,-1.188942,-8.565186,2.725945,-6.117970,-3.394807,-9.637911,1.970594,4.709748,-5.532570,9.214603,5.720860],[2.439858,-3.992905,4.719057,-5.689877,4.996280,7.030566,3.279346,-7.387967,6.462484,5.616628,-5.726522,1.910106,-3.297366,-3.311734],[2.243240,-8.067662,6.290455,9.660047,8.587027,-5.490237,-4.893512,-4.045202,-2.220814,-1.164363,8.913538,5.147113,-2.458533,-4.552458],[6.415659,7.597588,-1.621494,7.336239,-9.701958,-4.841489,-7.954826,7.650351,-1.988278,-6.639844,-0.135642,1.554517,-0.868594,8.598269],[6.808182,2.051919,-8.106422,-5.944890,4.921309,-4.824101,-9.463005,8.620903,-2.881306,-1.532101,4.379329,6.012131,7.588900,3.320335]],[[-0.367566,-0.891179,-9.567897,-2.060642,-8.239809,-5.140715,-3.657574,-2.299442,6.288351,4.842951,-4.416628,8.646222,-2.447915,2.910390],[0.829141,-6.438905,8.500535,0.093110,-8.262552,-5.198619,-1.215071,-6.562246,9.345831,-9.262424,6.147811,-2.035459,0.869889,1.449980],[5.603779,2.408987,9.624264,-4.087084,-8.502619,5.122048,4.581328,-5.953897,-8.557366,-6.806214,8.678967,-6.553308,-2.217058,-3.840147],[-0.895774,5.739069,-3.414417,-4.984129,-4.716365,-6.844972,3.152455,-4.296311,9.317293,-9.195165,7.420280,3.726330,3.291901,2.082023],[1.716784,3.274824,7.079246,2.551629,8.830261,-0.275422,-4.882504,8.254959,-4.453254,-0.496917,-1.257418,3.135857,5.363311,-2.181560],[-0.434305,-1.540247,4.966206,-3.361283,-9.529755,-9.711285,9.718674,-5.246924,3.608607,0.807222,7.794608,9.165802,0.590237,7.668122],[5.911548,9.097134,-1.578860,2.146483,-7.998078,-6.862838,6.831537,-9.320214,4.532906,-4.052506,-8.042873,-3.233874,3.565711,6.648687],[-5.750714,1.310606,-8.080519,-0.409873,-4.724036,-8.236495,0.466847,-7.864859,2.384341,8.993814,4.898801,1.401983,-7.450029,6.822485],[0.224034,-0.586765,2.883027,-0.271169,-5.466793,-0.922483,-3.532473,2.990290,-5.277719,8.831698,6.278410,-1.450545,-6.566996,-0.562629]],[[-9.201389,6.371519,7.284176,0.723491,2.785832,-8.230220,-8.429887,5.540124,-5.357942,-1.554781,-8.341336,-6.962300,6.887995,-2.091717],[2.320218,-2.900179,-7.943269,5.447226,9.908262,-1.942115,-0.025215,-4.733634,-2.139280,-1.259696,5.230087,7.071128,-4.844827,6.148184],[-5.299827,3.373402,-3.752790,3.696843,8.160688,-5.477477,-2.773462,-3.968083,-7.001618,6.854073,-5.764832,9.379508,1.964343,6.010520],[-0.585801,2.353864,-1.480887,-4.854640,-1.151008,4.739900,0.678780,-5.129136,-3.367129,-6.887636,5.581945,0.130755,7.229751,9.087116],[2.038535,-6.032830,4.091635,4.684508,4.449503,6.324203,4.659179,2.027179,-4.454798,-6.387027,-6.824902,1.924459,9.811846,9.515403],[4.716062,4.030923,1.041244,0.674117,0.310190,-2.519173,-9.543830,-0.939059,-4.719415,-3.836035,6.482389,-1.771809,-7.047284,9.972007],[-0.172044,-7.091219,-0.602532,4.721499,-9.744889,-4.128107,2.836930,-8.365587,-8.347326,6.787724,-9.139735,-3.761935,5.806329,-3.183656],[-8.460644,3.054195,-2.117920,3.299345,1.023918,8.079688,2.882387,8.565262,-5.106921,-2.052456,-6.179505,-5.509531,-4.017403,-3.557703],[9.231192,0.747219,-7.903603,-2.453023,-9.481700,0.205455,-2.823743,7.802583,3.070629,-7.005245,-5.360808,-7.320682,5.611632,-3.541170]],[[2.579077,5.642877,3.491245,0.865246,1.926442,-7.181535,5.715052,2.494518,-9.271511,4.529171,9.602918,-3.323520,-9.425708,-9.903362],[4.507717,8.179337,5.201430,1.661320,1.953444,-8.712380,-0.223255,3.535995,6.643720,-8.868445,7.310694,3.817527,2.686205,8.830169],[-2.597873,0.240995,-6.972679,3.837391,3.372567,-9.176277,8.977940,3.177533,6.868825,9.151223,2.326951,9.712780,3.004544,6.641215],[-8.210971,-2.442037,-3.762316,-1.774339,1.730283,-3.900846,-0.542499,7.008476,-0.181552,3.868490,8.723800,-2.376501,-0.605513,-9.270059],[-9.462565,7.742747,-2.858724,4.028892,3.204077,1.567073,6.021684,-4.246843,-6.992476,1.184756,-0.670665,-1.109854,2.454911,6.864886],[-1.727313,1.272055,1.685258,8.025170,2.842064,7.926021,-2.696628,8.481719,-1.678156,8.853889,0.419155,5.331051,-4.075456,-2.029627],[-8.256962,8.225864,6.107494,7.291682,3.020808,-1.451860,-6.130344,-7.555111,-1.171967,-5.039495,4.975516,5.095153,9.573447,-3.336053],[-4.287041,7.799470,-2.461183,-5.480765,-4.669573,4.005785,-1.580625,-6.979070,2.562270,-1.932369,-2.885867,-7.926979,-3.235138,-6.132394],[2.000624,7.536195,0.596577,-6.756303,-1.205070,8.506751,6.215585,-8.628284,-8.455908,-6.036241,0.120778,2.491238,5.749566,4.974529]],[[0.990245,5.411083,3.503074,8.888727,-6.896269,-2.748550,-0.021479,8.500607,-0.683122,5.661726,-1.758323,-5.183425,-5.764027,1.022002],[-7.026953,-8.099918,-7.141427,-6.074135,-3.630271,4.552221,0.878987,0.512146,5.656802,1.622468,9.141481,1.507491,-4.241442,9.317988],[9.167263,2.859518,-4.645352,-7.218862,8.403055,-8.745705,-1.151946,-4.346103,1.477589,4.433061,-9.062140,6.892255,9.663503,1.104950],[-9.010132,7.920417,4.085298,4.266358,-4.950189,2.697626,-4.631762,4.969607,6.349129,1.596303,-4.585355,0.798891,9.133387,-1.332475],[1.811570,4.622983,-4.347242,-9.387516,3.628247,2.539377,5.423472,3.509570,-2.712269,-4.687704,7.031746,4.963513,-5.668767,-6.267973],[8.924619,-9.803388,3.695001,-3.603096,-9.297706,3.728229,8.411060,4.605099,3.883597,-3.983141,-7.898443,7.227570,-8.075860,2.599789],[-9.709990,2.993665,-5.097759,-0.823975,0.976758,2.512257,3.944786,3.637098,-8.047904,4.796211,1.313173,6.781402,-4.764862,3.101038],[8.355425,3.614370,0.355879,3.507810,7.311209,8.232190,3.046974,-7.253848,0.741220,2.274729,7.418912,-9.431387,-3.393078,-2.824999],[-1.133872,-9.892649,-6.997118,9.854239,-9.304115,2.227201,1.278436,-3.795392,9.175847,8.004016,-9.899827,-8.401785,-1.852785,-5.329603]]], dtype = "float32")#candidate|8279|(12, 9, 14)|const|float32
var_8280 = relay.var("var_8280", dtype = "float32", shape = (12, 9, 14))#candidate|8280|(12, 9, 14)|var|float32
bop_8281 = relay.greater_equal(const_8279.astype('bool'), relay.reshape(var_8280.astype('bool'), relay.shape_of(const_8279))) # shape=(12, 9, 14)
func_6760_call = mod.get_global_var('func_6760')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_8306 = relay.TupleGetItem(func_6760_call(), 0)
call_8307 = relay.TupleGetItem(func_6762_call(), 0)
output = relay.Tuple([bop_8281,call_8306,])
output2 = relay.Tuple([bop_8281,call_8307,])
func_8309 = relay.Function([var_8280,], output)
mod['func_8309'] = func_8309
mod = relay.transform.InferType()(mod)
var_8310 = relay.var("var_8310", dtype = "float32", shape = (12, 9, 14))#candidate|8310|(12, 9, 14)|var|float32
output = func_8309(var_8310)
func_8311 = relay.Function([var_8310], output)
mutated_mod['func_8311'] = func_8311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_8313 = relay.TupleGetItem(func_3202_call(), 0)
call_8314 = relay.TupleGetItem(func_3204_call(), 0)
uop_8338 = relay.log(call_8313.astype('float64')) # shape=(16, 16, 6)
uop_8340 = relay.log(call_8314.astype('float64')) # shape=(16, 16, 6)
output = relay.Tuple([uop_8338,])
output2 = relay.Tuple([uop_8340,])
func_8372 = relay.Function([], output)
mod['func_8372'] = func_8372
mod = relay.transform.InferType()(mod)
mutated_mod['func_8372'] = func_8372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8372_call = mutated_mod.get_global_var('func_8372')
call_8373 = func_8372_call()
output = call_8373
func_8374 = relay.Function([], output)
mutated_mod['func_8374'] = func_8374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4178_call = mod.get_global_var('func_4178')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_8382 = relay.TupleGetItem(func_4178_call(), 3)
call_8383 = relay.TupleGetItem(func_4179_call(), 3)
output = relay.Tuple([call_8382,])
output2 = relay.Tuple([call_8383,])
func_8394 = relay.Function([], output)
mod['func_8394'] = func_8394
mod = relay.transform.InferType()(mod)
output = func_8394()
func_8395 = relay.Function([], output)
mutated_mod['func_8395'] = func_8395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_8396 = func_3074_call()
call_8397 = func_3074_call()
func_5376_call = mod.get_global_var('func_5376')
func_5377_call = mutated_mod.get_global_var('func_5377')
call_8403 = func_5376_call()
call_8404 = func_5376_call()
output = relay.Tuple([call_8396,call_8403,])
output2 = relay.Tuple([call_8397,call_8404,])
func_8433 = relay.Function([], output)
mod['func_8433'] = func_8433
mod = relay.transform.InferType()(mod)
mutated_mod['func_8433'] = func_8433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8433_call = mutated_mod.get_global_var('func_8433')
call_8434 = func_8433_call()
output = call_8434
func_8435 = relay.Function([], output)
mutated_mod['func_8435'] = func_8435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5880_call = mod.get_global_var('func_5880')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_8503 = func_5880_call()
call_8504 = func_5880_call()
var_8510 = relay.var("var_8510", dtype = "float64", shape = (16, 16, 6))#candidate|8510|(16, 16, 6)|var|float64
bop_8511 = relay.less_equal(call_8503.astype('bool'), relay.reshape(var_8510.astype('bool'), relay.shape_of(call_8503))) # shape=(16, 16, 6)
bop_8514 = relay.less_equal(call_8504.astype('bool'), relay.reshape(var_8510.astype('bool'), relay.shape_of(call_8504))) # shape=(16, 16, 6)
func_2835_call = mod.get_global_var('func_2835')
func_2838_call = mutated_mod.get_global_var('func_2838')
var_8519 = relay.var("var_8519", dtype = "int32", shape = (33,))#candidate|8519|(33,)|var|int32
const_8520 = relay.const([[10,7,4,-6,-10,-3,3,-5,1,-5,9,4,-7,-7,-6,-10,-8,2,4,-10,8,9,1,4,-3,6,9,6,-4,-7,-9,-7,-6,2,-8,-6,-6,-10,8,-8,5,7,-6,7],[5,10,-1,-2,7,6,-6,4,7,8,9,10,-10,7,-7,5,10,-7,-2,7,5,-7,-8,-3,-6,-2,-9,-1,9,-6,-2,-8,4,-3,-6,-6,-6,2,-3,-10,-9,5,7,8],[2,10,-5,-8,6,7,-4,1,-7,5,-7,10,9,4,9,-2,6,-9,-2,1,-10,8,-1,-5,3,8,-7,5,-4,-4,3,-6,-7,1,1,7,-10,5,-5,2,2,-7,-10,7],[-5,7,-6,-10,-7,2,5,-9,-6,8,7,-9,-10,8,-3,4,-5,-8,3,3,9,7,-7,-10,-3,4,8,10,2,-8,4,-4,2,-9,-2,-2,-2,-4,5,1,2,-9,1,-8],[7,9,-9,-10,7,-3,-6,9,-6,-6,-8,-1,2,-1,-1,-5,7,10,9,5,9,-6,-5,-2,9,-3,5,-9,6,-2,-1,3,-3,3,3,9,-8,-9,-9,5,9,6,2,2],[5,4,1,3,-2,-7,4,7,10,-4,-8,-10,7,-10,-9,-6,6,-2,7,2,-2,4,-4,8,8,-4,1,1,10,-6,8,5,1,-3,-3,-8,2,10,3,-10,10,-7,-10,8]], dtype = "int32")#candidate|8520|(6, 44)|const|int32
call_8518 = relay.TupleGetItem(func_2835_call(relay.reshape(var_8519.astype('int32'), [33,]), relay.reshape(const_8520.astype('int32'), [264,]), ), 2)
call_8521 = relay.TupleGetItem(func_2838_call(relay.reshape(var_8519.astype('int32'), [33,]), relay.reshape(const_8520.astype('int32'), [264,]), ), 2)
func_3408_call = mod.get_global_var('func_3408')
func_3410_call = mutated_mod.get_global_var('func_3410')
call_8529 = relay.TupleGetItem(func_3408_call(), 0)
call_8530 = relay.TupleGetItem(func_3410_call(), 0)
output = relay.Tuple([bop_8511,call_8518,var_8519,const_8520,call_8529,])
output2 = relay.Tuple([bop_8514,call_8521,var_8519,const_8520,call_8530,])
func_8547 = relay.Function([var_8510,var_8519,], output)
mod['func_8547'] = func_8547
mod = relay.transform.InferType()(mod)
var_8548 = relay.var("var_8548", dtype = "float64", shape = (16, 16, 6))#candidate|8548|(16, 16, 6)|var|float64
var_8549 = relay.var("var_8549", dtype = "int32", shape = (33,))#candidate|8549|(33,)|var|int32
output = func_8547(var_8548,var_8549,)
func_8550 = relay.Function([var_8548,var_8549,], output)
mutated_mod['func_8550'] = func_8550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5572_call = mod.get_global_var('func_5572')
func_5574_call = mutated_mod.get_global_var('func_5574')
call_8577 = relay.TupleGetItem(func_5572_call(), 0)
call_8578 = relay.TupleGetItem(func_5574_call(), 0)
func_7243_call = mod.get_global_var('func_7243')
func_7245_call = mutated_mod.get_global_var('func_7245')
call_8589 = relay.TupleGetItem(func_7243_call(), 0)
call_8590 = relay.TupleGetItem(func_7245_call(), 0)
func_6086_call = mod.get_global_var('func_6086')
func_6088_call = mutated_mod.get_global_var('func_6088')
const_8608 = relay.const([1,-4,9,9,-2,5,7,7,-2,-6,3,4,-3,-1,-8,-1,-4,-5,2,10,8,-7,7,-2,-1,3,4,-3,-10,1,9,-8,-8,3,6,3,-9,9,-4,-7,1,-9,7,2,-10,-9,7,-1,-10,-5,10,-10,-10,-6,-2,-1,3,8,6,9,-4,-5,8,4,-10,4,-6,-10,-5,-3,9,10,6,2,-9,-9,1,-2,10,7,-6,2,7,-10,-8,9,-9,-7,-8,-8,-4,-8,1,-6,-9,-4,5,-6,-8,7], dtype = "uint8")#candidate|8608|(100,)|const|uint8
call_8607 = relay.TupleGetItem(func_6086_call(relay.reshape(const_8608.astype('uint8'), [100,])), 5)
call_8609 = relay.TupleGetItem(func_6088_call(relay.reshape(const_8608.astype('uint8'), [100,])), 5)
func_6297_call = mod.get_global_var('func_6297')
func_6298_call = mutated_mod.get_global_var('func_6298')
call_8614 = relay.TupleGetItem(func_6297_call(), 0)
call_8615 = relay.TupleGetItem(func_6298_call(), 0)
output = relay.Tuple([call_8577,call_8589,call_8607,const_8608,call_8614,])
output2 = relay.Tuple([call_8578,call_8590,call_8609,const_8608,call_8615,])
func_8627 = relay.Function([], output)
mod['func_8627'] = func_8627
mod = relay.transform.InferType()(mod)
output = func_8627()
func_8628 = relay.Function([], output)
mutated_mod['func_8628'] = func_8628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_8756 = relay.TupleGetItem(func_3667_call(), 0)
call_8757 = relay.TupleGetItem(func_3669_call(), 0)
uop_8758 = relay.sinh(call_8756.astype('float32')) # shape=(16, 16, 6)
uop_8760 = relay.sinh(call_8757.astype('float32')) # shape=(16, 16, 6)
output = relay.Tuple([uop_8758,])
output2 = relay.Tuple([uop_8760,])
func_8766 = relay.Function([], output)
mod['func_8766'] = func_8766
mod = relay.transform.InferType()(mod)
output = func_8766()
func_8767 = relay.Function([], output)
mutated_mod['func_8767'] = func_8767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mod.get_global_var('func_6760')
func_6762_call = mutated_mod.get_global_var('func_6762')
call_8768 = relay.TupleGetItem(func_6760_call(), 0)
call_8769 = relay.TupleGetItem(func_6762_call(), 0)
var_8774 = relay.var("var_8774", dtype = "float32", shape = (3, 8, 12))#candidate|8774|(3, 8, 12)|var|float32
bop_8775 = relay.less_equal(call_8768.astype('bool'), relay.reshape(var_8774.astype('bool'), relay.shape_of(call_8768))) # shape=(3, 8, 12)
bop_8778 = relay.less_equal(call_8769.astype('bool'), relay.reshape(var_8774.astype('bool'), relay.shape_of(call_8769))) # shape=(3, 8, 12)
output = bop_8775
output2 = bop_8778
func_8782 = relay.Function([var_8774,], output)
mod['func_8782'] = func_8782
mod = relay.transform.InferType()(mod)
mutated_mod['func_8782'] = func_8782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8783 = relay.var("var_8783", dtype = "float32", shape = (3, 8, 12))#candidate|8783|(3, 8, 12)|var|float32
func_8782_call = mutated_mod.get_global_var('func_8782')
call_8784 = func_8782_call(var_8783)
output = call_8784
func_8785 = relay.Function([var_8783], output)
mutated_mod['func_8785'] = func_8785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_8787 = relay.TupleGetItem(func_6049_call(), 0)
call_8788 = relay.TupleGetItem(func_6050_call(), 0)
var_8789 = relay.var("var_8789", dtype = "int64", shape = (320,))#candidate|8789|(320,)|var|int64
bop_8790 = relay.minimum(call_8787.astype('float32'), relay.reshape(var_8789.astype('float32'), relay.shape_of(call_8787))) # shape=(320,)
bop_8793 = relay.minimum(call_8788.astype('float32'), relay.reshape(var_8789.astype('float32'), relay.shape_of(call_8788))) # shape=(320,)
output = bop_8790
output2 = bop_8793
func_8800 = relay.Function([var_8789,], output)
mod['func_8800'] = func_8800
mod = relay.transform.InferType()(mod)
var_8801 = relay.var("var_8801", dtype = "int64", shape = (320,))#candidate|8801|(320,)|var|int64
output = func_8800(var_8801)
func_8802 = relay.Function([var_8801], output)
mutated_mod['func_8802'] = func_8802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_8827 = func_2652_call()
call_8828 = func_2652_call()
output = relay.Tuple([call_8827,])
output2 = relay.Tuple([call_8828,])
func_8833 = relay.Function([], output)
mod['func_8833'] = func_8833
mod = relay.transform.InferType()(mod)
output = func_8833()
func_8834 = relay.Function([], output)
mutated_mod['func_8834'] = func_8834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4704_call = mod.get_global_var('func_4704')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_8839 = relay.TupleGetItem(func_4704_call(), 0)
call_8840 = relay.TupleGetItem(func_4705_call(), 0)
func_3557_call = mod.get_global_var('func_3557')
func_3560_call = mutated_mod.get_global_var('func_3560')
var_8844 = relay.var("var_8844", dtype = "float64", shape = (24, 14))#candidate|8844|(24, 14)|var|float64
const_8845 = relay.const([-8,5,1,3,-7,-10,9,-7,6,2,-3,1,-4,2,-4,8,-5,-9,3,2,8,-1,2,9,-5,7,7,-9,1,-5,-4,4,-4,-8,6,10,-3,-2,-10,-3,4,-10,2,-2,-3,-5,-9,-6,5,-1,3,-6,4,-3,2,9,8,9,-1,10,-7,8,-5,9,8,2,5,2,-9,-4,-1,-7,4,-6,8,-8,-2,-10,-3,-8,3,4,7,7,-1,6,-6,10,10,5,-1,-2,-9,1,-3,3,-8,-4,-7,2,2,9,-1,-7,4,-1,-5,7,5,-8,-6,4,1,8,7,-5,7,8,-2,1,9,10,-4,9,-6,8,9,-5,-10,-8,4,7,-7,1,1,3,3,5,-2,-7,-3,-10,8,5,-10,-6,-4,6,-9,-1,9,2,7,9,6,-8,2,-3,3,8,-9,-8,7,-4,-2,-9,-1,3,10,9,-10,5,5,10,-4,-3,-1,5,6,-6,-6,-9,6,7,4,10,-3,5,2,7,-2,-8,3,2,-5,-10,-1,-10,-1,-3,-2,-10,-9,-10,8,5,-8,-6,-8,-2,7,6,9,7,4,6,4,-9,-10,-3,8,10,-3,-9,-5,4,1,1,7,-1,-7,-8,-2,5,-10,10,-8,-6,-9,10,5,7,5,5,6,-6,4,6,-1,-8,9,8,10,-8,8,2,-3,7,-7,-1,-2,-7,-1,2,6,-2,10,4,-4,1,-2,5,-4,-5,-9,-5,3,5,7,-5,-9,-9,7,-9,8,4,4,5,-4,-10,-7,3,-7,4,-8,-6,-4,-4,-2,3,-6,10,-6,10,7,4,3,4,8,5,-4,2,7,10,-2,9,-10,8,6,-10,5,7,-3,-9,8,6,-6,2,6,-3,7,-4,5,-6,9,-3,10,-4,2,6,9,4,10,-9,9,5,-7,4,-3,10,6,6,-7,9,-6,-1,-6,-10,-2,5,2,9,10,-9,4,5,-7,6,-1,-3,-9,-4,1,5,5,-7,1,4,9,-6,-5,1,-2,-5,-1,2,5,8,1,9,5,-1,-2,-10,2,-6,-7,-8,3,3,-4,-7,-2,4,10,9,1,-2,7,-6,7,6,10,-2,9,-8,-2,-3,3,10,-3,9,-9,9,-2,-6,6,3,-6,-8,4,-2,-4,-3,-2,-10,-3,1,9,-9,4,2,-7,-7,-3,10,4,4,-6,-4,-1,5,3,-6,-5,-5,-10,8,-3,-2,1,-4,3,2,-4,-10,-1,8,3,6,1,-7,-8,10,-2,-10,4,8,9,-9,-6,-9,-3,1,-1,4,-8,-4,-5,-10,9,-10,3,10,-9,6,-7,-4,-1,8,2,5,2,8,6,-6,9,7,5,-7,-6,10,9,-4,9,-4,4,2,-1,-3,10,3,5,-3,-7,5,-5,-5,-10,-5,-8,1,8,-8,-4,5,10,5,-8,-8,-9,6,-9,-8,-7,8,-10,9,-2,9,8,10,-2,5,-3,4,-7,8,1,-5,-9,-6,-1,8,-2,9,-1,-9,-6,-4,9,-3,-8,2,-6,-10,1,-3,2,8,-8,-5,-8,3,-1,4,-5,-8,-9,2,9,-10,9,3,-5,-7,-9,-2,-1,2,-2,-3,3,-9,6,-8,5,-5,1,8,-10,1,-1,6,-9,-3,-5,5,-10,2,6,-10,10,-7,-5,7,2,-3,-10,-5], dtype = "uint32")#candidate|8845|(630,)|const|uint32
call_8843 = relay.TupleGetItem(func_3557_call(relay.reshape(var_8844.astype('float64'), [1, 336]), relay.reshape(const_8845.astype('uint32'), [630,]), ), 7)
call_8846 = relay.TupleGetItem(func_3560_call(relay.reshape(var_8844.astype('float64'), [1, 336]), relay.reshape(const_8845.astype('uint32'), [630,]), ), 7)
uop_8868 = relay.log2(var_8844.astype('float64')) # shape=(24, 14)
uop_8878 = relay.acos(uop_8868.astype('float32')) # shape=(24, 14)
var_8887 = relay.var("var_8887", dtype = "float64", shape = (16, 16, 6))#candidate|8887|(16, 16, 6)|var|float64
bop_8888 = relay.subtract(call_8839.astype('int8'), relay.reshape(var_8887.astype('int8'), relay.shape_of(call_8839))) # shape=(16, 16, 6)
bop_8891 = relay.subtract(call_8840.astype('int8'), relay.reshape(var_8887.astype('int8'), relay.shape_of(call_8840))) # shape=(16, 16, 6)
func_5332_call = mod.get_global_var('func_5332')
func_5334_call = mutated_mod.get_global_var('func_5334')
call_8894 = func_5332_call()
call_8895 = func_5332_call()
bop_8897 = relay.less(uop_8868.astype('bool'), relay.reshape(var_8844.astype('bool'), relay.shape_of(uop_8868))) # shape=(24, 14)
uop_8904 = relay.sigmoid(bop_8897.astype('float32')) # shape=(24, 14)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_8910 = func_2461_call()
call_8911 = func_2461_call()
output = relay.Tuple([call_8843,const_8845,uop_8878,bop_8888,call_8894,uop_8904,call_8910,])
output2 = relay.Tuple([call_8846,const_8845,uop_8878,bop_8891,call_8895,uop_8904,call_8911,])
func_8915 = relay.Function([var_8844,var_8887,], output)
mod['func_8915'] = func_8915
mod = relay.transform.InferType()(mod)
mutated_mod['func_8915'] = func_8915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8915_call = mutated_mod.get_global_var('func_8915')
var_8917 = relay.var("var_8917", dtype = "float64", shape = (24, 14))#candidate|8917|(24, 14)|var|float64
var_8918 = relay.var("var_8918", dtype = "float64", shape = (16, 16, 6))#candidate|8918|(16, 16, 6)|var|float64
call_8916 = func_8915_call(var_8917,var_8918,)
output = call_8916
func_8919 = relay.Function([var_8917,var_8918,], output)
mutated_mod['func_8919'] = func_8919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5064_call = mod.get_global_var('func_5064')
func_5066_call = mutated_mod.get_global_var('func_5066')
call_8932 = relay.TupleGetItem(func_5064_call(), 0)
call_8933 = relay.TupleGetItem(func_5066_call(), 0)
func_6983_call = mod.get_global_var('func_6983')
func_6986_call = mutated_mod.get_global_var('func_6986')
const_8947 = relay.const([[8.080237,2.994071],[2.413078,0.146863],[3.659032,5.879179],[-8.606596,-1.695608],[-1.401789,-4.334767],[0.497994,-9.597693],[-5.439287,4.562324],[6.505963,7.805921],[1.749676,8.452156],[-8.456047,-7.565884],[-9.816875,-8.681454],[8.827088,-5.709546],[-7.130634,-3.676986],[-3.223556,9.378925],[-2.201749,9.775541],[9.425284,-8.455128],[0.652222,6.578201],[9.979893,6.896935],[9.483997,-6.534578],[-0.459693,-8.172312],[9.802416,-2.786037],[8.772642,-7.327595],[3.792701,-9.367497],[-3.524851,4.204835],[-1.627758,9.966114],[-4.666598,5.064225],[-9.168602,-6.752172],[-9.147738,1.023761],[0.448365,-8.791919],[1.411026,-6.477691],[-2.599325,-3.582454],[-5.047161,3.558369],[-2.274107,-2.427630],[8.237222,0.900908],[0.905461,9.165783],[-0.208232,7.894368],[-7.175402,1.069977],[-5.948155,-3.832366],[-3.979932,6.531963],[-4.740743,7.043464],[-5.297324,3.263380],[9.651415,5.912163],[-9.832187,-3.980807],[-3.934390,-5.956726],[7.319604,-8.058591],[-3.610490,2.148697],[8.602817,0.384665],[3.758595,9.800463],[-6.613224,1.936789],[1.267891,-8.769098],[1.356434,-2.821906],[-0.257929,0.879826],[-2.658854,9.514995],[-9.006549,3.989187],[0.572300,-4.487485],[6.734246,-6.836474],[-4.767521,9.220863],[9.326949,-7.428076],[6.178015,-2.156247],[6.633621,1.839414],[3.695242,-3.922025],[3.570836,-5.384860],[-2.076326,1.583431],[-0.037998,7.130780],[-3.002309,-2.466956],[-1.511658,-9.282172],[2.107364,7.075933],[-7.699854,2.357650],[1.082209,-0.823003],[0.952851,-0.129295]], dtype = "float32")#candidate|8947|(70, 2)|const|float32
call_8946 = relay.TupleGetItem(func_6983_call(relay.reshape(const_8947.astype('float32'), [5, 7, 4])), 0)
call_8948 = relay.TupleGetItem(func_6986_call(relay.reshape(const_8947.astype('float32'), [5, 7, 4])), 0)
func_7607_call = mod.get_global_var('func_7607')
func_7608_call = mutated_mod.get_global_var('func_7608')
call_8960 = relay.TupleGetItem(func_7607_call(), 1)
call_8961 = relay.TupleGetItem(func_7608_call(), 1)
func_7664_call = mod.get_global_var('func_7664')
func_7665_call = mutated_mod.get_global_var('func_7665')
call_8970 = relay.TupleGetItem(func_7664_call(), 0)
call_8971 = relay.TupleGetItem(func_7665_call(), 0)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_8980 = relay.TupleGetItem(func_6049_call(), 0)
call_8981 = relay.TupleGetItem(func_6050_call(), 0)
output = relay.Tuple([call_8932,call_8946,const_8947,call_8960,call_8970,call_8980,])
output2 = relay.Tuple([call_8933,call_8948,const_8947,call_8961,call_8971,call_8981,])
func_8984 = relay.Function([], output)
mod['func_8984'] = func_8984
mod = relay.transform.InferType()(mod)
output = func_8984()
func_8985 = relay.Function([], output)
mutated_mod['func_8985'] = func_8985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9026 = relay.var("var_9026", dtype = "float64", shape = (15, 2, 14))#candidate|9026|(15, 2, 14)|var|float64
uop_9027 = relay.exp(var_9026.astype('float64')) # shape=(15, 2, 14)
output = relay.Tuple([uop_9027,])
output2 = relay.Tuple([uop_9027,])
func_9038 = relay.Function([var_9026,], output)
mod['func_9038'] = func_9038
mod = relay.transform.InferType()(mod)
var_9039 = relay.var("var_9039", dtype = "float64", shape = (15, 2, 14))#candidate|9039|(15, 2, 14)|var|float64
output = func_9038(var_9039)
func_9040 = relay.Function([var_9039], output)
mutated_mod['func_9040'] = func_9040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5924_call = mod.get_global_var('func_5924')
func_5925_call = mutated_mod.get_global_var('func_5925')
call_9052 = relay.TupleGetItem(func_5924_call(), 0)
call_9053 = relay.TupleGetItem(func_5925_call(), 0)
output = relay.Tuple([call_9052,])
output2 = relay.Tuple([call_9053,])
func_9103 = relay.Function([], output)
mod['func_9103'] = func_9103
mod = relay.transform.InferType()(mod)
mutated_mod['func_9103'] = func_9103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9103_call = mutated_mod.get_global_var('func_9103')
call_9104 = func_9103_call()
output = call_9104
func_9105 = relay.Function([], output)
mutated_mod['func_9105'] = func_9105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_9108 = relay.TupleGetItem(func_6049_call(), 0)
call_9109 = relay.TupleGetItem(func_6050_call(), 0)
output = call_9108
output2 = call_9109
func_9143 = relay.Function([], output)
mod['func_9143'] = func_9143
mod = relay.transform.InferType()(mod)
mutated_mod['func_9143'] = func_9143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9143_call = mutated_mod.get_global_var('func_9143')
call_9144 = func_9143_call()
output = call_9144
func_9145 = relay.Function([], output)
mutated_mod['func_9145'] = func_9145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6297_call = mod.get_global_var('func_6297')
func_6298_call = mutated_mod.get_global_var('func_6298')
call_9156 = relay.TupleGetItem(func_6297_call(), 0)
call_9157 = relay.TupleGetItem(func_6298_call(), 0)
func_3557_call = mod.get_global_var('func_3557')
func_3560_call = mutated_mod.get_global_var('func_3560')
var_9186 = relay.var("var_9186", dtype = "float64", shape = (336, 1))#candidate|9186|(336, 1)|var|float64
var_9187 = relay.var("var_9187", dtype = "uint32", shape = (10, 63))#candidate|9187|(10, 63)|var|uint32
call_9185 = relay.TupleGetItem(func_3557_call(relay.reshape(var_9186.astype('float64'), [1, 336]), relay.reshape(var_9187.astype('uint32'), [630,]), ), 9)
call_9188 = relay.TupleGetItem(func_3560_call(relay.reshape(var_9186.astype('float64'), [1, 336]), relay.reshape(var_9187.astype('uint32'), [630,]), ), 9)
func_7664_call = mod.get_global_var('func_7664')
func_7665_call = mutated_mod.get_global_var('func_7665')
call_9189 = relay.TupleGetItem(func_7664_call(), 0)
call_9190 = relay.TupleGetItem(func_7665_call(), 0)
output = relay.Tuple([call_9156,call_9185,var_9186,var_9187,call_9189,])
output2 = relay.Tuple([call_9157,call_9188,var_9186,var_9187,call_9190,])
func_9195 = relay.Function([var_9186,var_9187,], output)
mod['func_9195'] = func_9195
mod = relay.transform.InferType()(mod)
mutated_mod['func_9195'] = func_9195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9195_call = mutated_mod.get_global_var('func_9195')
var_9197 = relay.var("var_9197", dtype = "float64", shape = (336, 1))#candidate|9197|(336, 1)|var|float64
var_9198 = relay.var("var_9198", dtype = "uint32", shape = (10, 63))#candidate|9198|(10, 63)|var|uint32
call_9196 = func_9195_call(var_9197,var_9198,)
output = call_9196
func_9199 = relay.Function([var_9197,var_9198,], output)
mutated_mod['func_9199'] = func_9199
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9264 = relay.var("var_9264", dtype = "float32", shape = (9, 6, 16))#candidate|9264|(9, 6, 16)|var|float32
uop_9265 = relay.cos(var_9264.astype('float32')) # shape=(9, 6, 16)
output = relay.Tuple([uop_9265,])
output2 = relay.Tuple([uop_9265,])
func_9267 = relay.Function([var_9264,], output)
mod['func_9267'] = func_9267
mod = relay.transform.InferType()(mod)
var_9268 = relay.var("var_9268", dtype = "float32", shape = (9, 6, 16))#candidate|9268|(9, 6, 16)|var|float32
output = func_9267(var_9268)
func_9269 = relay.Function([var_9268], output)
mutated_mod['func_9269'] = func_9269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5201_call = mod.get_global_var('func_5201')
func_5203_call = mutated_mod.get_global_var('func_5203')
call_9271 = relay.TupleGetItem(func_5201_call(), 0)
call_9272 = relay.TupleGetItem(func_5203_call(), 0)
output = relay.Tuple([call_9271,])
output2 = relay.Tuple([call_9272,])
func_9281 = relay.Function([], output)
mod['func_9281'] = func_9281
mod = relay.transform.InferType()(mod)
output = func_9281()
func_9282 = relay.Function([], output)
mutated_mod['func_9282'] = func_9282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3074_call = mod.get_global_var('func_3074')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_9285 = func_3074_call()
call_9286 = func_3074_call()
func_7503_call = mod.get_global_var('func_7503')
func_7505_call = mutated_mod.get_global_var('func_7505')
call_9294 = relay.TupleGetItem(func_7503_call(relay.reshape(call_9285.astype('float64'), [1536,])), 1)
call_9295 = relay.TupleGetItem(func_7505_call(relay.reshape(call_9285.astype('float64'), [1536,])), 1)
func_8394_call = mod.get_global_var('func_8394')
func_8395_call = mutated_mod.get_global_var('func_8395')
call_9309 = relay.TupleGetItem(func_8394_call(), 0)
call_9310 = relay.TupleGetItem(func_8395_call(), 0)
func_7427_call = mod.get_global_var('func_7427')
func_7432_call = mutated_mod.get_global_var('func_7432')
var_9313 = relay.var("var_9313", dtype = "int32", shape = (33,))#candidate|9313|(33,)|var|int32
var_9314 = relay.var("var_9314", dtype = "int32", shape = (3, 88))#candidate|9314|(3, 88)|var|int32
var_9315 = relay.var("var_9315", dtype = "bool", shape = (715,))#candidate|9315|(715,)|var|bool
call_9312 = relay.TupleGetItem(func_7427_call(relay.reshape(var_9313.astype('int32'), [33,]), relay.reshape(var_9314.astype('int32'), [264,]), relay.reshape(var_9315.astype('bool'), [715,]), ), 4)
call_9316 = relay.TupleGetItem(func_7432_call(relay.reshape(var_9313.astype('int32'), [33,]), relay.reshape(var_9314.astype('int32'), [264,]), relay.reshape(var_9315.astype('bool'), [715,]), ), 4)
func_5813_call = mod.get_global_var('func_5813')
func_5816_call = mutated_mod.get_global_var('func_5816')
const_9319 = relay.const([-7.922125,2.448784,-3.556113,-8.089677,-7.824133,1.532052,8.097934,-4.510950,-5.487030,-9.850513,4.607797,9.789785,-4.701502,7.943010,1.480157,0.701199,-7.001675,-1.654762,8.726789,-2.240918,8.138386,-5.652214,-2.927599,-0.665449,8.227833,-6.745200,7.299793,4.219984,9.434437,8.590732,-0.827072,-8.088973,2.959148,-8.431031,-5.824763,-1.064506,-1.923800,-9.378728,-8.229984,9.400295,-7.159087,-1.551549,-0.937853,7.170638,-6.504915,-6.732110,1.493239,5.059550,4.124145,0.542883,2.635716,4.829488,-9.918646,-6.555030,9.523578,-4.622751,2.224495,1.888385,-6.841879,-8.150416,3.097840,-7.589694,6.609334,-9.097214,8.006910,-6.280189,8.136816,-7.056490,-7.516706,-2.826718,-1.500042,2.895886,-9.477655,2.059739,7.725349,8.016996,-2.809487,7.177682,-5.369115,-7.001655,2.568011,-3.258656,4.849100,-9.446726,1.947418,3.445680,-5.872920,5.627930,0.805098,8.407045,-2.247002,5.861845,-4.216725,9.601201,-1.932009,-5.908523,-6.381493,9.437155,7.298248,4.770960,-4.301307,9.532833,7.009264,3.696352,1.787424,7.955850,-0.308649,9.703159,7.407667,3.701127,-2.838633,7.261013,-3.038366,-7.312293,5.907500,-0.815689,-1.214829,-3.097953,-1.895760,-2.708944,-6.579022,-5.692111,9.554295,-6.650333,-1.762347,-8.731829,3.774059,5.352138,-8.168958,-2.758450,-4.676492,-5.092532,-3.959832,-0.700798,-6.852466,-5.727834,3.222455,0.698506,-2.918431,9.349129,7.566308,-9.992388,-9.147817,-7.197994,4.318566,-3.481530,7.248278,2.125460,5.854630,5.699145,-9.050597,-6.797718,-0.919385,-1.374020,2.696423,9.934698,-1.256327,-1.739805,5.312485,6.857003,4.022644,-6.188318,-7.722315,-3.497503,-1.611753,-1.288593,3.802939,-9.335965,-2.032839,9.403106,-4.054251,6.821519,-9.366083,6.734678,-9.261598,-4.418862,-2.290301,5.454715,-8.561509,-7.427854,0.342658,-1.551978,-9.180060,-6.221172,6.487574,-0.258086,-4.846128,-5.790293,0.480481,-5.763514,9.241819,8.574125,-0.568183,-5.762248,-0.626090,1.016542,9.152007,0.303869,-5.132793,7.297363,7.183446,6.225699,9.267724,-5.268730,-2.604567,-2.939744,6.712800,8.938366,-2.750166,1.623602,4.464966,-5.982540,-3.784252,-1.296446,8.573080,-7.423108,6.139160,-2.372048,-7.420070,-1.718279,-5.096137,-8.653028,-7.414323,1.987620,9.330566,-3.673053,0.419293,-5.042154,-5.080349,-2.343912,-0.699191,-7.271899,-1.051661,-3.327725,1.382903,6.783460,6.675464,5.231599,-1.506105,5.941075,2.126015,-7.127830,-5.293769,-9.536691,8.826802,9.266558,-1.422130,6.988381,-8.942548,3.600790,-7.326208,3.690880,-2.041221,-3.333044,4.772436,-5.732407,2.503195,4.517049,7.632018,-2.848089,-7.449154,-6.739491,2.368350,-6.829719,1.577370,0.362404,-9.886149,-2.896465,1.930976,0.290250,-5.063595,-4.515297,-5.781435,2.930948,9.635919,-5.507268,6.423267,-5.379350,8.933989,8.914589,-9.471837,-3.894129,8.931719,1.239159,6.919712,-5.039692,3.072830,4.161057], dtype = "float32")#candidate|9319|(288,)|const|float32
call_9318 = relay.TupleGetItem(func_5813_call(relay.reshape(const_9319.astype('float32'), [3, 8, 12])), 1)
call_9320 = relay.TupleGetItem(func_5816_call(relay.reshape(const_9319.astype('float32'), [3, 8, 12])), 1)
output = relay.Tuple([call_9285,call_9294,call_9309,call_9312,var_9313,var_9314,var_9315,call_9318,const_9319,])
output2 = relay.Tuple([call_9286,call_9295,call_9310,call_9316,var_9313,var_9314,var_9315,call_9320,const_9319,])
func_9337 = relay.Function([var_9313,var_9314,var_9315,], output)
mod['func_9337'] = func_9337
mod = relay.transform.InferType()(mod)
mutated_mod['func_9337'] = func_9337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9337_call = mutated_mod.get_global_var('func_9337')
var_9339 = relay.var("var_9339", dtype = "int32", shape = (33,))#candidate|9339|(33,)|var|int32
var_9340 = relay.var("var_9340", dtype = "int32", shape = (3, 88))#candidate|9340|(3, 88)|var|int32
var_9341 = relay.var("var_9341", dtype = "bool", shape = (715,))#candidate|9341|(715,)|var|bool
call_9338 = func_9337_call(var_9339,var_9340,var_9341,)
output = call_9338
func_9342 = relay.Function([var_9339,var_9340,var_9341,], output)
mutated_mod['func_9342'] = func_9342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3465_call = mod.get_global_var('func_3465')
func_3466_call = mutated_mod.get_global_var('func_3466')
call_9397 = relay.TupleGetItem(func_3465_call(), 0)
call_9398 = relay.TupleGetItem(func_3466_call(), 0)
output = relay.Tuple([call_9397,])
output2 = relay.Tuple([call_9398,])
func_9403 = relay.Function([], output)
mod['func_9403'] = func_9403
mod = relay.transform.InferType()(mod)
mutated_mod['func_9403'] = func_9403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9403_call = mutated_mod.get_global_var('func_9403')
call_9404 = func_9403_call()
output = call_9404
func_9405 = relay.Function([], output)
mutated_mod['func_9405'] = func_9405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_9413 = func_3352_call()
call_9414 = func_3352_call()
output = call_9413
output2 = call_9414
func_9424 = relay.Function([], output)
mod['func_9424'] = func_9424
mod = relay.transform.InferType()(mod)
mutated_mod['func_9424'] = func_9424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9424_call = mutated_mod.get_global_var('func_9424')
call_9425 = func_9424_call()
output = call_9425
func_9426 = relay.Function([], output)
mutated_mod['func_9426'] = func_9426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3954_call = mod.get_global_var('func_3954')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_9452 = relay.TupleGetItem(func_3954_call(), 0)
call_9453 = relay.TupleGetItem(func_3956_call(), 0)
func_8204_call = mod.get_global_var('func_8204')
func_8206_call = mutated_mod.get_global_var('func_8206')
call_9470 = func_8204_call()
call_9471 = func_8204_call()
output = relay.Tuple([call_9452,call_9470,])
output2 = relay.Tuple([call_9453,call_9471,])
func_9473 = relay.Function([], output)
mod['func_9473'] = func_9473
mod = relay.transform.InferType()(mod)
mutated_mod['func_9473'] = func_9473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9473_call = mutated_mod.get_global_var('func_9473')
call_9474 = func_9473_call()
output = call_9474
func_9475 = relay.Function([], output)
mutated_mod['func_9475'] = func_9475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6371_call = mod.get_global_var('func_6371')
func_6373_call = mutated_mod.get_global_var('func_6373')
call_9478 = relay.TupleGetItem(func_6371_call(), 2)
call_9479 = relay.TupleGetItem(func_6373_call(), 2)
uop_9488 = relay.exp(call_9478.astype('float32')) # shape=(2112,)
uop_9490 = relay.exp(call_9479.astype('float32')) # shape=(2112,)
output = uop_9488
output2 = uop_9490
func_9492 = relay.Function([], output)
mod['func_9492'] = func_9492
mod = relay.transform.InferType()(mod)
mutated_mod['func_9492'] = func_9492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9492_call = mutated_mod.get_global_var('func_9492')
call_9493 = func_9492_call()
output = call_9493
func_9494 = relay.Function([], output)
mutated_mod['func_9494'] = func_9494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8766_call = mod.get_global_var('func_8766')
func_8767_call = mutated_mod.get_global_var('func_8767')
call_9495 = relay.TupleGetItem(func_8766_call(), 0)
call_9496 = relay.TupleGetItem(func_8767_call(), 0)
func_91_call = mod.get_global_var('func_91')
func_94_call = mutated_mod.get_global_var('func_94')
const_9500 = relay.const([-7.557170,2.828024,8.678328,1.747058,-5.856187,-9.379653,-1.759394,-4.530167,5.477637,9.865333,-5.666042,-0.439430,-2.718790,1.362503,9.090112,-5.090498,5.751332,-9.705704,7.759083,-1.379869,6.555807,5.000376,-6.248739,2.190146,-7.850227,3.542446,-1.433989,-9.080692,6.954062,-4.127360,-9.877346,-5.891842,-6.067114,-6.820000,1.475496,7.061197,-0.476551,-8.744793,-5.688857,-5.198966,-4.691997,2.599910,-2.402789,4.212182,9.556242,-8.393311,7.202459,2.814191,1.008041,1.694865,-9.995204,4.670556,0.917199,0.623689,6.744838,-9.110247,4.491749,-2.226235,8.817700,7.602127,1.770524,-4.075046,3.415527,-7.203891,-4.394087,1.760503,-4.019795,0.917647,-6.069818,7.087531,-8.259462,-8.835700,3.170118,7.964737,-7.894520,7.771832,-1.317348,-6.878134,3.339468,-5.188010,-0.514984,-0.907606,-6.216232,2.933469,-3.517000,4.063112,-6.018672,-4.551348,-0.662411,2.252984,2.837319,6.983493,-4.293536,5.372990,-1.112437,8.431917,1.199586,-1.296833,9.565104,-5.181050,-6.342792,1.286699,3.762992,2.128392,8.732297,0.061109,3.967100,7.619646,-8.141058,-7.731493,-3.454755,-6.872459,7.125130,-4.048338,-9.515848,3.423058,-9.350822,1.304567,-5.576549,0.761860,0.752623,-2.137184,5.487260,2.843547,-0.835011,2.356171,0.633160,-9.363202,-5.499676,-7.233553,-8.641168,4.578121,-7.698162,-1.420418,2.364557,-1.745602,-7.471378,-5.849492,-6.486199,-4.372911,1.119955,-5.177109,5.724672,9.127922,8.087050,-9.184142,6.721995,-5.938552,-0.757868,3.872749,-0.365790,4.121443,-6.076145,9.585604,2.179424,-3.290080,1.903588,1.744458,0.104170,-9.044414,-8.904439,-0.596756,-8.529208,0.888139,-6.677081,5.226378,8.978113,8.710240,-1.715803,-3.995240,-5.671599,-1.999984,4.293225,-3.865845,-0.537774,0.530820,7.303535,8.494601,-4.328589,9.710981,6.941667,-8.882608,8.273367,-0.295110,-8.298677,7.915189,7.316596,-1.659569,9.923911,-9.408209,1.727017,7.735531,3.049721,-8.180843,4.939851,-4.984579,-2.535930,2.885567,2.578804,9.228784,8.732436,-6.935354,-4.841720,6.507024,-0.370396,-5.126707,-5.914343,-6.713820,-0.571688,9.223332,-2.899627,-1.085958,-9.902403,-8.416893,1.813466,1.769744,-0.624577,-0.723332,-6.448857,6.867654,8.927653,-3.648838,8.429411,6.525134,-2.167779,4.146903,8.849803,3.182270,-9.260729,0.257953,-1.770548,-8.055058,-9.845614,6.740280,-4.355761,9.677364,-4.907504,8.746890,2.671056,8.929415,-3.486894,-2.441973,-3.180339,0.934525,-0.449639,9.980845,-4.978653,2.696774,-2.950801,2.956804,2.805431,-5.306899,1.965700,7.991539,-2.783332,-3.868974,-5.256739,-7.222117,-8.924091,4.111216,-0.677880,2.776081,-8.811660,-0.285887,-8.401247,6.876785,-4.134550,8.603288,-5.615635,-0.810871,-2.772155,3.932140,-8.296172,3.054412,2.019829,3.741624,1.404584,-3.652800,8.921094,-6.185836,3.879610,-8.882051,9.409220,8.245416,-9.604161,0.389607,-0.814453,8.644216,-5.427299,7.726384,6.998292,-4.876229,-1.262851,-4.078499,9.165541,3.246466,3.594479,-0.741222,4.935091,-8.990276,-4.876263,-1.673732,-2.320772,3.889618,4.967703,-1.268435,1.889783,1.777891,-2.181688,8.481583,4.336411,-4.435775,-4.639465,5.651161,-7.676960,-7.217155,5.184120,2.842228,-5.473624,2.476614,3.717807,0.667072,-3.597543,-6.438390,-2.565794,-4.702765,-8.035894,-9.571008,8.235073,2.326232,9.593960,-2.239641,-5.263296,-3.760064,-6.591454,-1.535327,-6.255577,-2.763376,5.918114,8.556369,4.243479,8.057842,-0.038950,-4.284793,4.912558,7.984080,8.115729,-1.848932,8.805907,6.700925,-0.374829,7.001252,7.014455,4.013948,4.822860,-4.459194,-9.823171,-7.976102,-8.004769,-9.894831,-5.553294,-6.574101,-8.931011,-8.014088,-3.618398,6.040554,5.487595,6.097228,1.681560,7.746337,9.141437,3.795087,3.885674,-1.063830,-5.008909,-3.023657,-7.128407,1.484026,0.800843,-1.319951,7.270230,-9.672509,-3.766550,1.867906,-2.754264,-3.383561,-3.352939,7.246552,-3.893168,3.265880,-0.905374,2.274260,0.978423,6.688943,-2.682229,-4.219417,-7.628177,3.911527,-1.512470,-5.641393,8.147099,-6.716843,-6.250859,-8.891574,0.565401,1.556170,7.503665,-2.189724,6.227597,3.800809,5.093301,4.029131,-6.068253,-8.328882,4.825121,7.615299,-2.766289,0.891899,8.914271,6.869473,4.664714,-6.054341,2.672950,2.671091,5.964174,0.924146,-8.649870,-8.703596,2.665659,5.947469,3.437655,5.081590,-0.360447,-0.768767,-9.089855,-7.071725,-2.895102,-8.653391,1.400818,7.871729,-4.001136,0.736285,1.181685,1.190450,2.121948,-9.098753,8.306353,-4.246949,-7.627303,9.054325,-6.276126,-5.922095,5.160028,-4.134271,5.398930,3.616627,-8.809849,-4.835801,-9.167104,-3.962962,2.618938,-5.436454,1.144528,-5.528756,1.376021,-5.538576,-8.842000,-3.044392,-1.814596,-2.126293,-2.559397,0.134427,1.564960,5.327856,-4.947147,2.152994,-5.353344,-3.303177,-4.233207,2.802408,9.739488,4.664407,-2.562323,6.115796,-8.182346,-7.255165,6.476007,-9.559952,-7.773437,-1.779936,2.541709,-3.584856,7.349224,5.099951,9.518694,6.135953,0.790459,-3.150847,-8.887870,-1.525567,-4.665877,-3.055802,-4.130941,-4.849039,-3.216224,6.697618,-6.890418,2.565661,3.563449,6.908231,4.344213,7.944061,5.867371,-8.363063,7.392495,-0.430122,-4.518631,7.436958,7.377549,4.327431,-9.435614,-9.637334,-0.074325,-6.850198,-8.208193,-6.126832,-2.499234,-7.118099,-0.057829,1.774154,7.688357,8.118605,-9.043040,5.954573,-4.319499,9.296563,6.895884,5.108069,1.055524,6.677868,3.053229,8.705369,3.344542,3.281507,9.780383,4.500904,-9.582428,-3.825415,2.503011,8.689867,-8.034955,-0.718632,-0.352063,6.830918,8.187534,2.502705,-3.807337,-8.418093,8.013605,4.418862,8.446930,1.701166,5.263033,-6.246976,1.818676,-0.840380,6.449306,-2.429347,-0.306249,6.874011,-7.489219,-9.614803,-3.999094,0.097744,-2.065103,-5.914337,4.343074,-1.326242,7.294662,-1.085025,-9.406379,-8.025179,4.401749,1.808862,-5.504764,-2.741853,2.356807,5.369614,4.185096,6.767809,-9.894989,8.568312,-5.353209,-4.752189,5.536517,-8.998604,-6.631161,3.448108,8.081498,6.180103,6.689695,2.950867,9.992764,-8.697559,5.183271,-2.158154,5.554421,4.184896,3.619101,8.269048,-8.186414,-1.637027,-7.169915,2.571467,-7.474849,9.254826,-8.596063,3.798535,-7.329162,-8.747744,3.215068,4.461772,6.178394,-4.378374,-6.738321,4.893435,-1.728148,3.510160,9.189642,-1.214388,-1.098492,0.337217,-0.721078,-7.019963,4.694478,-9.850660,2.630078,6.514959,4.642790,-5.713060,-5.159075,-3.994018,0.266484,7.886656,-9.652910,2.384893,-4.954053,2.325172,6.880596,7.991864,2.176273,7.675247,6.235960,1.344852,2.802566,-4.993807,7.686527,-8.597202,6.097486,2.574012,3.430881,-3.314001,0.188809,8.751056,7.523217,7.810809,-5.692732,2.990401,-7.156925,-4.431517,-2.193859,2.984565,-1.823497,5.551033,7.881443,1.903408,6.501402,-8.738273,-1.660173,8.070617,-8.586292,-7.752225,1.589270,-6.909108,-3.847425,6.499712,-2.364902,-6.564093,-9.002568,-3.367413,-2.626643,5.571809,4.865548,-5.479216,3.486724,6.452529,1.762155,-4.409717,3.335748,-9.055552,-6.248192,2.275957,-3.191734,3.274982,7.699585,-8.457372,6.718029,5.625796,-6.867484,-2.502030,7.787793,4.837781,2.856074,1.009758,8.685764,-3.999001,-9.053419,-2.129050,8.707156,2.132822,2.665242,-7.233694,5.762303,0.084754,-6.747892,2.777515,1.182074,-5.084647,1.635249,5.326624,0.758153,-1.114984,1.026295,-2.256152,-3.016247,0.745146,9.343985,-6.979321,3.615873,-4.553456,-6.314655,5.322694,3.841603,-8.162293,-0.946139,1.549748,-1.363980,0.774969,-7.058480,-0.395642,2.513543,-4.033573,-7.389280,-3.298408,-4.742196,8.619136,-1.464235,-2.860778,-2.334325,-7.494889,-5.470170,-7.259189,4.869533,5.346104,9.918173,-0.391861,6.712537,4.067220,-9.801441,-0.281211,8.990891,8.078190,-7.645379,6.744276,-1.243478,6.293667,1.569214,6.598665,9.699455,-3.897311,4.128217,-1.720968,2.726281,-4.589510,3.834499,-9.565851,-9.264657,-4.444687,5.793574,2.534689,-2.660020,-5.335642,-9.971217,-5.063067,-6.862439,-5.227466,-5.592154,3.146846,-1.878150,2.742982,-6.219516,-6.123897,1.860409,5.265842,-1.401387,-1.220965,-7.475488,-0.595891,3.563163,-8.189807,9.845211,9.761989,9.494307,7.197999,-2.730005,8.377930,-2.871934,8.058077,2.766685,-1.470325,4.984149,-9.089209,-4.223399,-5.116959,0.667528,3.527705,5.203312,-9.121773,4.055564,-8.569571,-6.468588,-1.337677,-5.693545,-8.256823,1.310289,3.155486,-9.438306,-5.792901,9.548136,-5.931433,6.270830,0.411224,-9.231966,-2.356206,-9.317979,9.285388,-1.522931,4.670344,5.428105,-7.203198,6.900361,4.477179,6.911149,-8.066967,-3.909007,-7.597660,-5.367203,-5.128968,6.216607,5.155286,3.420694,8.767337,-9.639358,-5.973701,-5.870902,-4.195068,5.829286,6.639636,4.574790,1.171214,-2.504145,-7.876323,1.398723,0.855313,0.388864,-7.658165,2.985059,-9.731372,4.401542,0.255918,-5.308877,9.267887,5.160924,-2.846003,-0.846642,-3.549682,8.455617,9.522650,1.950672,-5.627013,4.608516,-3.100570,-5.667301,7.391401,7.221892,0.919085,-2.230496,3.023886,-5.662690,4.372906,9.317522,1.966535,-0.379331,-9.272665,-5.404258,-5.672207,4.348743,-4.454283,2.836333,7.807069,3.625422,-8.534598,7.724960,4.488880,-3.917910,-4.040214,2.400675,-9.559025,9.051274,6.476532,1.227820,2.751315,-3.006565,-4.324937,9.549813,7.768129,2.944040,4.440286,3.244015,-9.617240,7.017160,-1.445947,-5.784460,-2.510788,5.551820,0.123353,5.746436,1.017271,6.033527,2.672638,-6.635690,2.914366,6.285511,-8.526610,3.612415,-5.899697,-9.996589,6.224270,2.806324,-6.310884,-9.777573,-8.826303,-9.184532,0.791907,1.471675,3.411215,0.757324,3.909899,6.675823,-5.359282,-8.599736,3.686985,4.335542,-2.171795,-6.640489,7.905300,-1.579984,-8.201280,7.276836,-4.010876,-7.079667,-9.666836,-2.956002,-8.455826,-3.093620,0.878891,9.790436,9.944883,0.269413,-6.847039,-6.375619,-0.452588,6.125962,5.188946,8.473074,4.078423,3.492386,9.502733,-6.430480,1.660453,-6.157445,4.754600,3.667738,-0.779943,-8.747451,-8.111595,-3.023031,-2.075683,5.164705,0.859892,2.812816,2.102248,-5.987968,4.871700,-7.814725,4.005007,0.828585,1.942318,5.817157,3.805082,-0.782319,-9.957149,3.411141,-5.584716,7.109300,2.891540,-1.292942,3.791717,6.711677,2.668267,-5.842924,9.179004,-3.505455,-8.009667,-4.700553,1.331191,-2.570569,-2.404030,-0.618848,-8.769539,-6.990154,0.948368,-3.313813,1.486380,2.800495,-6.606926,-3.287521,3.367321,-1.524509,-0.042767,6.881062,1.554644,-3.932758,7.273836,-8.126447,-7.333937,6.132121,8.872321,-2.658892,-3.747163,-0.970409,1.449974,-3.412573,3.593394,5.982106,1.348435,0.779593,-2.460473,-2.041313,6.121538,4.218598,2.790294,0.925975,7.624465,-3.758079,8.923081,-8.954709,6.263601,3.681061,6.999843,-7.536010,8.142083,7.000635,0.644806,-8.093898,-7.422755,-0.162790,-8.997050,-3.395391,-3.984415,4.413133,1.955353,-1.614154,-5.797454,3.793784,-0.096019,4.248310,-0.392379,1.824224,-9.914638,-7.051187,-4.443268,9.603725,-9.973062,-9.335710,-0.766385,-4.679193,1.649887,-6.001012,-0.492867,7.146076,3.934945,-3.948098,9.700417,-5.419894,4.651869,-1.165479,4.128790,4.210086,9.295213,-9.128212,9.276404,-5.201273,-9.319870,0.485173,-7.576669,0.973929,8.664104,0.289558,-5.942163,-7.736742,-9.155360,8.234881,-6.933781,4.650545,-6.401578,9.805515,-1.915736,-1.429056,-9.190078,1.546635,-3.863557,6.741178,5.675979,-9.756550,-6.759403,9.563780,1.962707,-5.948232,3.551564,2.128302,-5.754637,-1.258918,-4.244280,2.594688,-0.263495,-8.311579,9.697405,-3.645140,-6.473376,-3.832897,9.251245,-2.715272,-1.209385,9.367169,-1.529753,3.968425,6.206334,-2.160228,-5.034796,3.109602,-9.929145,3.188512,7.370904,-0.084629,-1.286011,-8.075753,5.927247,-3.840951,7.784638,5.489663,3.094229,-2.658462,-9.673764,-4.520676,-9.550462,0.629693,0.773730,0.052689,-5.516017,6.619111,-2.681238,0.669135,-3.774659,-8.793571,4.120233,1.070328,-6.271556,7.491723,-1.706938,-9.645859,3.770882,-2.102039,-6.348812,0.042307,7.509865,-0.094078,-2.417071,8.057788,3.933877,6.560684,-5.045844,5.066803,-9.114042,6.510959,2.307952,-4.005369,-0.604272,2.584550,-3.102126,3.831484,1.995004,8.944960,6.699895,-5.061225,-2.347884,5.603536,7.095484,-8.571713,-2.956243,-3.283276,7.119324,-2.733354,5.729944,-6.397885,1.593423,-6.419962,2.717840,-3.363616,-0.650877,-1.474464,-9.523903,8.407892,-0.733347,-7.809498,-2.186210,-9.483203,8.314443,8.757154,6.262739,-2.932065,8.213303,9.977329,-7.864661,-8.354246,3.739057,-2.514800,-2.442277,8.196676,7.712617,7.322501,-8.579896,0.363084,3.866435,2.564463,-4.466196,7.035433,-8.139489,5.685320,-3.084841,1.707591,-1.897986,-5.079325,-6.300500,5.750071,2.120440,2.462178,5.934645,8.102531,1.337391,0.175788,-7.580613,1.725230,9.220512,0.389180,-1.128785,4.961017,-6.406277,-5.654195,9.112662,-7.404276,-5.631674,0.258887,-8.702450,-7.967380,6.783325,-9.962368,-1.656281,-6.939709,-7.397574,-6.383683,-9.762949,8.411866,5.689176,0.911268,3.623773,8.652384,0.910981,8.551165,5.737529,9.855006,6.945612,-8.175639,-5.319598,-0.492858,-0.462343,4.173418,-1.163513,-5.558623,-6.837786,0.185380,7.054780,-4.137910,1.012339,7.896033,3.207492,6.467740,-2.390659,6.940405,-8.899539,7.387168,-9.614532,8.352280,4.534190,-3.887211,-3.994290,2.393308,-9.754238,-5.916411,-5.445709,-6.414306,0.887110,-8.507383,4.013586,-1.014146,5.973537,-8.000601,-6.550184,2.190953,6.587466,-0.978054,9.062531,-1.103100,2.716800,0.044644,-8.975264,8.583641,0.587255,3.297837,4.046863,-5.756915,3.457902,-1.548325,-7.110200,3.387003,1.218733,4.270484,8.117259,-0.924609,6.174499,-2.297646,1.526885,8.730697,-2.120624,1.553477,-7.119397,-9.343018,5.740644,5.788097,-9.192236,1.398483,-0.485485,-3.893558,-5.076807,-1.387762,-6.987087,9.588522,3.299671,-1.164828,5.676612,5.830134,5.739216,8.075246,9.545420,4.271367,7.480308,7.848298,6.332157,-7.645231,5.793385,9.913366,7.309920,5.380160,2.395046,-3.184666,-7.679541,-1.015831,-2.669801,-5.283606,6.734034,1.744935,-9.839593,-1.585941,9.144835,-9.606518,-9.468326,-9.635171,-0.185524,-1.402648,-8.444441,8.702762,-6.131259,-7.246361,3.279278,-9.584860,-8.788482,-9.850065,8.525717,4.842944,3.563947,0.063809,8.514800,8.131989,6.987434,-8.846302,2.971835,-8.462238,4.700837,-1.399963,4.319033,8.690983,-9.141659,3.254667,5.173951,-5.739131,-3.785903,-0.246995,-3.796668,6.729159,7.391516,3.900138,6.310439,-3.299181,-6.005505,-7.107434,-1.748729,-4.652490,9.287062,-0.397813,-1.421091,3.771718,-8.588765,-2.419916,6.462228,-4.947019,0.466513,9.578386,-0.677128,-0.218173,-3.117527,-2.423320,-4.327249,-8.635897,-0.450785,-6.142639,0.859979,3.733137,5.114809,-3.000880,-1.063279,3.369682,-1.799345,-0.444813,4.968669,-6.827315,8.735196,-3.132499,3.340047,1.420757,2.680580,-0.132382,9.912987,-3.890692,4.053142,-5.698808,3.428838,-5.258663,-0.532238,-1.967961,1.939687,-5.713559,-7.677078,-0.501980,6.444219,0.220264,-0.518562,3.882713,-8.154311,-0.719869,4.414400,4.368888,0.572397,-6.413157,-6.461240,0.307099,6.291420,2.495570,-3.548065,6.071809,7.724065,-2.042318,-9.976486,-1.190844,3.155685,2.817079,5.719967,2.408757,-5.324736,-9.083625,4.402040,-5.069335,0.069021,-8.892215,8.135869,2.656766,-6.427543,-2.072578,-1.227308,4.681478,-9.408228,-8.992090,4.479662,-2.268474,5.584977,3.158310,-5.153370,-8.445105,5.915267,2.697432,-9.620635,8.476394,-7.401836,-3.215066,-7.145911,-8.298134,-6.028804,-2.348730,-4.211008,3.273797,-0.201515,-5.562230,-3.651042,-2.080283,2.485836,-9.384422,2.650179,8.230772,-2.220427,-7.616370,9.408887,2.522455,0.532500,-4.330290,-9.933179,7.828275,-1.439028,3.555758,-4.814814,-6.683261,9.102814,-1.368875,-3.787584,-3.063541,7.211249,-1.769864,7.104482,-4.999146,8.750895,-9.869620,-0.476269,-2.938014,-8.246594,1.058743,-7.936493,-6.787334,-1.440214,-2.250355,-0.663206,2.523064,9.624063,6.313214,0.682147,6.637665,-6.697287,-3.993952,7.313377,6.600689,-3.670218,7.951341,-0.361017,-1.677584,-4.070583,1.314493,9.548828,-9.927999,-1.759838,2.249480,3.242758,3.820396,1.215728,-9.657763,-8.217303,-2.998450,-6.394960,0.737793,8.332154,9.554780,-8.800376,0.470322,-0.035694,-7.692823,7.062296,-6.899005,-5.346479,-5.014053,-2.170611,2.610028,-3.275952,9.902188,6.094469,1.879909,8.670761,-4.261657,3.632525,8.679222,1.831974,4.245432,-4.084008,7.554350,3.873343,-9.165826,-1.708679,-8.875946,3.431311,0.789329,1.861796,1.117784,9.172784,-6.172445,0.767357,-2.439765,-3.633242,2.854805,-9.905250,2.912713,-7.807063,0.933668,4.759786,4.780670,9.605518,0.741591,1.854352,4.408467,-2.864481,-3.475584,-2.625634,-9.753713,-7.447914,4.080865,-3.943370,-2.037228,-9.971667,5.590496,2.786861,-3.740001,9.673877,6.959628,-8.423566,-0.467808,5.504718], dtype = "float32")#candidate|9500|(1680,)|const|float32
call_9499 = relay.TupleGetItem(func_91_call(relay.reshape(const_9500.astype('float32'), [15, 16, 7])), 2)
call_9501 = relay.TupleGetItem(func_94_call(relay.reshape(const_9500.astype('float32'), [15, 16, 7])), 2)
func_2897_call = mod.get_global_var('func_2897')
func_2900_call = mutated_mod.get_global_var('func_2900')
var_9536 = relay.var("var_9536", dtype = "float64", shape = (360,))#candidate|9536|(360,)|var|float64
call_9535 = relay.TupleGetItem(func_2897_call(relay.reshape(var_9536.astype('float64'), [8, 3, 15])), 2)
call_9537 = relay.TupleGetItem(func_2900_call(relay.reshape(var_9536.astype('float64'), [8, 3, 15])), 2)
func_4279_call = mod.get_global_var('func_4279')
func_4280_call = mutated_mod.get_global_var('func_4280')
call_9545 = relay.TupleGetItem(func_4279_call(), 1)
call_9546 = relay.TupleGetItem(func_4280_call(), 1)
output = relay.Tuple([call_9495,call_9499,const_9500,call_9535,var_9536,call_9545,])
output2 = relay.Tuple([call_9496,call_9501,const_9500,call_9537,var_9536,call_9546,])
func_9551 = relay.Function([var_9536,], output)
mod['func_9551'] = func_9551
mod = relay.transform.InferType()(mod)
var_9552 = relay.var("var_9552", dtype = "float64", shape = (360,))#candidate|9552|(360,)|var|float64
output = func_9551(var_9552)
func_9553 = relay.Function([var_9552], output)
mutated_mod['func_9553'] = func_9553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5201_call = mod.get_global_var('func_5201')
func_5203_call = mutated_mod.get_global_var('func_5203')
call_9630 = relay.TupleGetItem(func_5201_call(), 1)
call_9631 = relay.TupleGetItem(func_5203_call(), 1)
output = call_9630
output2 = call_9631
func_9639 = relay.Function([], output)
mod['func_9639'] = func_9639
mod = relay.transform.InferType()(mod)
mutated_mod['func_9639'] = func_9639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9639_call = mutated_mod.get_global_var('func_9639')
call_9640 = func_9639_call()
output = call_9640
func_9641 = relay.Function([], output)
mutated_mod['func_9641'] = func_9641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2760_call = mutated_mod.get_global_var('func_2760')
call_9667 = relay.TupleGetItem(func_2758_call(), 3)
call_9668 = relay.TupleGetItem(func_2760_call(), 3)
output = relay.Tuple([call_9667,])
output2 = relay.Tuple([call_9668,])
func_9720 = relay.Function([], output)
mod['func_9720'] = func_9720
mod = relay.transform.InferType()(mod)
output = func_9720()
func_9721 = relay.Function([], output)
mutated_mod['func_9721'] = func_9721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5376_call = mod.get_global_var('func_5376')
func_5377_call = mutated_mod.get_global_var('func_5377')
call_9752 = func_5376_call()
call_9753 = func_5376_call()
output = call_9752
output2 = call_9753
func_9759 = relay.Function([], output)
mod['func_9759'] = func_9759
mod = relay.transform.InferType()(mod)
output = func_9759()
func_9760 = relay.Function([], output)
mutated_mod['func_9760'] = func_9760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8433_call = mod.get_global_var('func_8433')
func_8435_call = mutated_mod.get_global_var('func_8435')
call_9769 = relay.TupleGetItem(func_8433_call(), 1)
call_9770 = relay.TupleGetItem(func_8435_call(), 1)
output = call_9769
output2 = call_9770
func_9774 = relay.Function([], output)
mod['func_9774'] = func_9774
mod = relay.transform.InferType()(mod)
output = func_9774()
func_9775 = relay.Function([], output)
mutated_mod['func_9775'] = func_9775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9639_call = mod.get_global_var('func_9639')
func_9641_call = mutated_mod.get_global_var('func_9641')
call_9791 = func_9639_call()
call_9792 = func_9639_call()
const_9797 = relay.const([[[-5.465719,4.471401,-3.823749,-1.260173,5.915134,6.170693],[4.633286,9.884748,-4.605155,-1.010003,1.419542,-8.090572],[-9.125782,-6.636884,-1.964175,5.303174,-7.154987,6.293760],[-8.653441,-6.565063,-5.357519,-2.009477,-6.318402,1.705372],[4.535566,-2.137577,-7.122116,8.326469,-4.502022,3.042993],[0.181756,6.794726,-7.657923,-6.812298,-6.667732,-4.363103],[-3.267330,-3.994120,5.040516,-0.103190,-6.089467,6.178415],[8.797541,6.244484,-5.680737,-7.901868,0.132944,4.491176],[5.338350,-5.721897,8.217673,-0.240661,9.667670,-0.621030],[-2.298383,4.173251,-1.791217,6.695746,-5.353401,2.134218],[-9.951365,-4.811761,9.616688,8.525682,-2.118421,-1.631310],[-3.931060,1.163259,9.363804,-8.068297,-0.623644,-2.063299],[-8.257645,3.077538,-2.509620,9.463705,-2.897440,-5.258428],[-3.796541,-2.473511,-4.033000,-4.995113,-8.304743,-7.378096],[2.135719,6.427340,3.753173,-6.473302,-3.556912,-1.242898],[-2.731237,9.221765,3.242278,-5.919471,5.618162,-5.872102]],[[1.531442,-0.069172,7.576101,-3.525696,-0.677533,-2.204652],[3.248182,9.863178,-2.832178,3.717701,-8.892566,-4.326415],[-8.065708,1.313065,5.167964,2.195918,-6.460743,-7.656205],[3.796434,-7.520539,5.460740,5.522149,-9.715160,-6.008614],[-1.957916,0.579238,-4.030594,-3.551240,9.139553,-2.643671],[-2.491194,4.809012,0.639747,-5.868369,-7.258665,-6.162291],[4.058977,2.580395,6.405333,1.199325,7.034396,-3.765323],[-2.107778,-8.538625,-9.368537,-0.357764,6.168768,1.863747],[-6.459990,5.136045,-7.662695,-2.532360,9.021160,5.391132],[4.295574,-0.196324,-1.075396,-6.713864,0.755444,-7.590311],[8.573410,-6.923630,-4.528096,9.305789,9.821938,-0.678034],[3.582877,-3.692537,-4.733115,0.480180,-8.285851,-4.027608],[-2.691660,7.352704,4.531425,0.262495,-4.290040,9.985179],[8.082020,4.182571,6.988761,-7.231127,-2.613494,8.082752],[2.356469,-2.511580,-0.787948,-5.085445,5.392265,6.839888],[5.112237,8.952865,-6.059108,-8.922326,-0.591096,0.313899]],[[7.296686,-0.403692,-4.756383,-6.079016,-1.123020,0.296015],[1.341384,4.400627,6.243814,-0.197690,5.809694,-1.716359],[-2.445944,7.879928,7.117514,0.202541,-7.246232,-8.524157],[9.761265,-2.489373,-6.524426,8.481784,8.618099,-5.801575],[8.938966,7.272960,7.045756,-1.212862,2.195766,-7.226157],[-4.858755,2.940809,0.899698,1.216829,3.711218,-8.483728],[4.166784,9.826432,-6.258621,9.960705,-0.503983,-3.513913],[8.295039,-4.096691,-9.436881,7.064090,-5.536848,8.502651],[-7.425366,-3.482947,8.542009,6.533969,-5.948483,3.334177],[2.407964,-6.189530,-0.959682,4.366481,-0.741143,-3.949993],[-0.656159,9.799788,-8.782094,-4.406223,-4.107880,-1.221772],[8.744175,-6.408829,0.218703,-3.724220,7.020529,-6.350234],[5.775528,2.619306,6.431027,-1.931626,4.528330,-4.511347],[-4.578809,-0.210983,-1.859924,-0.213590,5.521106,9.886665],[7.309418,9.224140,2.046366,-3.792260,6.743664,-8.104821],[3.706299,-9.034919,-7.825906,-5.948936,4.785947,3.323363]],[[-2.367954,3.699626,5.548726,-7.485655,-2.966296,3.791048],[6.745007,-0.283761,1.863267,-8.875331,0.981094,1.559470],[0.927542,-3.753323,-5.666314,-8.232136,-5.674007,-7.698706],[5.232605,-4.364174,-8.816293,0.081077,5.621383,-7.957554],[-9.742735,3.203764,2.161084,2.483977,-7.370370,1.573000],[-6.401323,4.613801,7.325489,-2.327782,-8.390916,-7.899873],[-9.294044,1.530396,0.756710,-3.801981,-1.505354,1.335767],[-3.493952,-7.782666,5.878773,2.294178,-9.248040,-5.462073],[4.931652,-5.801012,4.456731,-9.524273,-6.574935,8.309310],[-0.781323,7.915185,9.671356,-6.602240,6.220243,-4.779164],[0.247314,-9.151804,6.646776,0.725163,5.631288,-4.048327],[2.090094,-9.029452,-6.676189,9.244005,9.130976,0.971175],[-1.261460,-3.614805,3.673489,-8.631876,9.970609,-8.655984],[1.913301,3.374266,3.040072,1.014693,-5.284911,-4.732314],[7.261031,1.515547,-1.548906,3.262794,0.556187,-3.630314],[-4.493765,7.250077,-6.975473,-5.120877,2.306705,-9.099942]],[[-6.177352,4.209463,-5.891622,5.419283,-0.148785,-9.550780],[-1.958340,4.422694,-9.682766,-5.895232,-1.542777,-6.267634],[1.506586,-7.221837,-1.220919,4.993099,-1.314727,9.059720],[-1.641491,-3.515484,-5.722958,3.824733,-6.960058,-8.211565],[-5.128554,2.867765,-1.767473,8.150539,6.528444,-8.272649],[1.476048,-9.207167,4.195402,-1.266948,-2.461845,-9.548298],[9.808655,2.724916,-4.624888,-2.016489,-6.076104,8.312014],[5.209019,-7.997812,-8.258165,-0.369746,-8.010807,5.141859],[6.382036,9.990423,-8.558488,-6.813451,4.092446,2.176916],[0.602560,5.644305,8.614940,-3.905236,2.392986,3.697091],[6.797587,0.748585,-8.882631,0.415036,-7.870058,-3.540133],[-6.764061,0.914233,-1.760044,5.588115,-9.446666,-5.137142],[8.767183,1.321481,3.497468,-3.628494,-6.959502,5.380407],[-0.300671,-8.712309,5.282496,0.252989,4.195489,-6.763337],[1.482153,7.616057,-6.487580,-4.381476,-3.828005,-5.850644],[-0.403526,4.721041,6.644935,-8.583145,1.927886,-5.936517]],[[6.425765,7.965913,-5.977637,-0.861985,0.395125,-1.658991],[2.496886,-5.280192,-0.189758,-7.062751,0.138489,0.646283],[-6.582947,8.091375,0.423185,-4.363785,3.021869,7.741553],[5.828611,-2.481561,-8.987923,-0.642800,2.120122,4.610696],[-2.102652,-9.199727,1.993916,-1.871828,0.035825,-1.505180],[3.031688,0.051351,-7.023810,7.295497,4.503886,-4.735434],[-8.521224,0.690876,1.887981,3.509333,-3.293282,-0.457231],[8.150592,6.190463,-9.679204,7.553802,7.550440,-5.907295],[-5.506022,4.611134,6.594327,9.791353,2.386303,3.191901],[2.715947,-8.008313,0.562163,-9.477288,2.239725,4.032583],[1.970363,0.587261,-8.190830,-2.634843,8.124965,-1.239835],[4.769507,-8.359243,-8.458382,-9.483380,-7.013144,-6.578894],[4.280211,7.448524,-0.895978,-2.747307,4.588090,-0.391051],[1.373996,-1.172713,0.792926,-7.724263,-0.340781,9.228247],[-2.486335,9.014959,-4.995365,-4.117581,-2.431596,-9.740961],[2.716561,-6.787574,-2.509318,-6.168267,5.572872,2.838362]],[[0.396635,1.375904,-0.045819,-7.688399,-8.717765,-7.588599],[4.064791,-9.349728,-3.062541,0.690022,5.369459,-1.178192],[-2.379963,-0.642298,-2.809279,-4.717360,6.708819,1.381416],[-0.905526,-1.939986,0.757372,8.660168,-3.999303,-6.599259],[-0.999023,-1.902915,6.915027,-3.175074,2.663723,8.160760],[-7.879479,0.376120,-9.294724,5.446391,-4.257727,2.317546],[-4.564999,3.874983,6.306874,4.470873,7.696394,8.628261],[7.772544,-3.596531,-4.377633,-4.147031,-4.548046,-6.797611],[-7.649266,3.992683,-1.457636,3.776550,-9.636441,9.943050],[-5.704458,8.750684,-2.060038,7.489586,-5.959395,-3.877765],[0.121667,1.238954,-3.905944,-5.526500,-7.381916,0.076580],[6.715679,4.464391,7.636194,0.334416,-3.625764,7.080102],[6.966599,-9.499794,4.521557,6.576931,9.705245,-1.278834],[-9.524726,-5.653476,-1.945752,2.255955,-3.412207,1.263321],[2.591719,-3.294786,-9.014991,-4.510834,-8.500732,0.896030],[0.782366,-1.301612,-4.801876,-4.183381,-6.697666,4.545567]],[[8.545418,-7.409501,9.009671,5.603681,-5.125521,-2.685947],[-4.517908,-4.616398,8.776231,-1.236515,-0.299776,5.689239],[0.187238,-7.957899,6.828780,-4.476158,-8.866466,-8.725796],[2.184897,3.202461,4.442133,-5.292780,-2.297961,-3.666764],[-6.605609,6.176500,-1.305858,4.857107,-8.296986,5.777519],[1.940695,-0.552143,-2.966421,-4.473589,7.754381,4.827303],[2.614896,-8.347081,-2.560341,-0.964525,6.447113,-0.176816],[-1.506148,9.819344,8.416240,-7.691017,-1.658128,-9.029933],[-7.819533,-7.301399,-3.338011,-9.365212,6.994143,-4.140653],[-6.936793,9.225028,-4.886610,3.976662,0.611937,8.744773],[3.474038,-2.113131,0.781316,-7.739465,2.376573,7.467499],[-3.429582,4.104002,-9.111672,2.771632,-9.842935,-1.367747],[-3.722782,-1.311402,-5.221020,-7.221685,7.961354,1.569707],[-3.982728,-6.168137,4.395866,1.541598,-6.231356,3.691837],[-4.052174,4.338277,6.876614,4.628831,3.848815,-6.222068],[-7.754761,7.715956,2.656271,-5.487747,-9.708531,9.125860]],[[-8.320191,3.369666,7.761204,3.164674,2.179682,4.735016],[-4.558609,2.749542,-9.882685,7.227671,-5.248637,-4.312308],[3.097522,0.095313,-6.848549,7.395705,-6.507755,4.559347],[-1.872102,9.189082,1.474670,-8.273129,-3.784981,3.902743],[3.144676,1.688121,4.585561,0.610286,-5.182108,-6.729101],[1.024592,3.987453,-2.470649,-0.933973,3.168221,-7.066280],[-4.044387,-7.034184,-6.816551,9.400873,-7.466019,-7.393634],[-4.386972,-8.780479,-7.004530,5.668085,6.046665,4.081216],[5.311963,-5.172285,-2.080099,0.797460,6.692171,9.831354],[6.331722,-6.482078,6.958781,0.376013,-4.534962,-0.930998],[-5.576593,5.011553,-3.001287,4.626560,-8.941365,-6.097037],[1.980600,1.032229,7.152509,-2.078326,9.480981,-6.241083],[7.349825,-6.689440,7.059275,0.006443,9.767866,3.871979],[3.188267,4.435436,-2.946475,-8.159608,-8.555141,7.235970],[-9.519522,-7.297498,-4.919703,-6.646152,7.460452,1.958735],[2.547287,-3.637055,0.920781,-7.874934,5.955574,-5.736836]],[[6.697483,8.806117,-3.620918,5.296950,-5.577422,-5.950922],[-1.515278,6.434387,-8.352509,6.944499,0.517208,-4.510730],[6.553839,8.531851,-6.648111,9.118718,0.623445,6.921876],[5.190358,-9.315204,2.830018,-5.425985,-5.693266,3.740136],[-2.602433,-6.461212,-5.235208,8.870840,-6.081685,-5.513229],[-6.163461,-6.380271,-8.869358,-1.898631,2.405718,-4.283497],[6.159441,-7.901934,-7.857462,-2.563163,-0.946501,-2.639181],[0.707609,9.826411,-9.216451,4.382876,9.938069,-9.217007],[2.181950,3.506344,-7.379906,8.442139,-1.238741,8.644812],[8.363452,8.642253,-2.391716,7.213234,5.453772,6.220297],[-0.016769,6.978493,3.865444,-3.307218,-8.034958,6.613289],[2.969695,-8.423001,-2.402295,-1.136305,-0.452243,-6.985802],[2.235876,-7.339045,-7.918639,-0.857137,-8.788632,-7.188335],[-4.844441,8.555259,-5.086628,1.914230,2.830626,0.113329],[4.981497,-8.528612,6.595713,-4.451733,-6.000636,-6.276986],[7.829321,0.279073,-2.925649,9.138233,-2.696896,8.170231]],[[0.571485,-7.440552,-4.982414,-7.686521,1.217499,8.314093],[6.740872,4.919382,2.450526,-2.282076,0.135801,-6.621571],[8.733618,-7.606193,-3.498035,-7.903181,-5.924521,8.085763],[-0.467576,-3.072497,-0.302121,2.493686,1.062252,2.817282],[-7.701789,3.895601,3.768795,3.802901,1.806836,3.584833],[8.481575,7.470948,-9.832719,-3.582864,1.908730,5.630244],[7.411788,7.701583,2.555711,2.739772,9.374876,2.243818],[-7.376742,1.768266,-9.151925,-7.757707,5.462617,6.026131],[-3.880828,-7.983080,-6.721090,1.530627,-0.567995,1.656069],[7.187687,7.810610,9.324235,8.576225,2.468758,-7.818567],[6.239051,3.193982,-2.910259,5.364732,4.090015,-0.154934],[7.123669,6.860560,8.876416,7.097923,0.592816,6.621778],[-7.228947,-0.882608,2.694472,8.032588,4.570972,5.265628],[-6.732600,-7.560823,7.999874,2.507338,-5.461241,-8.434002],[9.660825,-5.389054,8.467093,-3.732468,3.574444,8.677195],[9.443431,2.842182,-0.241594,-7.578812,2.916763,-6.613196]],[[-3.915833,8.042775,-7.544285,-5.708860,-2.470204,-6.276973],[-6.646635,4.677489,8.874129,-6.892574,8.233217,-7.486298],[0.613047,-3.482913,4.548417,6.575853,8.447646,0.583549],[-9.348422,5.901600,-3.614260,-9.637626,-2.119377,-0.824722],[2.628727,-1.476286,3.737516,-8.586508,-2.136637,4.864082],[4.100518,8.465254,-9.728582,-3.471418,-1.804400,5.266715],[1.724683,2.538229,2.247765,7.555943,-9.543100,0.735851],[-3.105067,-1.835453,1.381441,6.959237,-5.664319,1.503336],[7.300691,-3.182364,9.194672,-6.378475,8.505664,6.368124],[-2.187060,7.652491,-7.188892,-8.181436,-1.485427,3.270168],[-8.404965,-5.771733,4.050433,0.328179,7.192010,-5.759964],[3.126557,5.181086,-6.651325,5.855273,-5.275651,-7.224746],[-1.936951,7.582425,9.185165,-8.702181,3.747674,5.591007],[-1.539022,5.524644,-6.813628,-5.137097,8.898393,-3.627745],[-1.484185,-4.729091,9.634651,-5.981254,2.739120,-9.134992],[-5.857654,-7.458081,-0.809800,0.930591,5.012326,-2.188135]],[[-0.677649,6.683105,9.760742,-7.983185,-8.762394,-2.806325],[6.895332,5.049281,-6.618809,3.003735,-5.188165,4.419706],[3.341722,7.194955,9.369187,-9.439898,-7.488308,3.259521],[-8.532483,-3.468457,-9.168413,-5.028046,8.867680,-7.171017],[5.599912,-7.241213,-1.638687,-1.067360,-4.698611,-1.373675],[-0.224464,-9.971572,-2.210593,-3.778275,7.315675,0.521095],[8.659496,0.226622,0.215783,-8.791235,5.431348,-8.324339],[-2.879542,-1.414888,-5.342767,0.047067,7.357473,-3.804066],[7.873429,-8.906212,5.969656,7.887212,0.119652,7.898987],[-3.679832,-4.124323,-7.794019,6.994062,1.677366,-3.260157],[-6.395755,-1.296407,0.571979,-5.562250,4.079513,3.265748],[-5.327481,2.155169,9.744864,1.604545,9.080789,8.053316],[-5.933520,-4.919596,-5.765283,-2.149146,-8.969593,8.962318],[3.509549,9.015933,-7.967769,2.320262,4.138022,3.217900],[2.084272,-7.359204,-8.972806,-8.888306,7.237247,-9.467384],[0.687853,-7.650777,-9.446049,7.470815,6.912366,-9.215323]],[[8.347538,4.586690,1.114203,1.301100,7.072195,1.779979],[-9.961681,-2.429335,-2.329599,3.170305,3.157313,-0.537882],[3.851858,9.440034,-6.366052,9.976731,6.861339,-6.487580],[8.047833,7.180301,5.339332,-6.977660,6.159358,1.966098],[4.553922,7.184981,5.569590,-6.171712,-2.477244,2.905152],[-9.500725,-4.231035,6.830456,-1.870166,0.964246,6.012494],[-1.991120,-8.078638,9.990560,4.658382,-5.894949,0.856862],[-9.065956,7.651341,-5.364628,7.239041,6.564150,-7.113693],[-9.671796,1.888118,7.823302,7.136998,-5.419681,2.984451],[3.294212,-9.670623,6.533047,7.469384,-2.421925,-4.037354],[-2.407890,2.695043,-2.920758,-7.445714,-9.422140,-8.296061],[6.238350,1.824056,0.103839,4.179591,0.203641,-9.541366],[8.481093,8.871914,-7.479223,-4.026438,1.219683,-2.238401],[-6.324452,3.596288,-9.986721,-5.530042,6.060393,1.333559],[-2.367210,9.522410,0.868119,-5.752329,-6.693196,-3.361074],[-8.724705,7.375879,-2.968981,8.083168,-2.667020,0.278937]],[[-1.057488,-8.029377,3.967943,-2.247481,-9.136275,7.232576],[9.368918,4.324131,8.678675,5.729953,-9.590655,-6.157063],[-8.363803,5.375300,-5.496025,-1.394750,-4.727336,-0.114711],[-3.849542,2.657413,-0.504304,-1.711541,8.064322,1.302650],[0.133215,-3.288009,5.603564,-8.671495,-6.451873,9.386862],[-5.882802,3.378976,-6.474225,-3.058826,-1.198719,-4.804388],[4.318465,-2.786002,-9.754679,9.501825,-2.357693,0.012974],[-7.777031,-5.173837,-4.836953,4.034949,1.335296,5.136543],[-1.741603,-5.636332,-9.554982,-2.158863,-8.963446,-1.253766],[-4.773301,-8.399767,0.417526,4.422803,-7.334474,-4.261928],[8.891111,8.776173,-2.187011,-0.874222,0.637892,9.651334],[2.885851,0.551821,-4.313542,-2.696895,0.411328,-6.291082],[3.428496,4.514427,7.137032,-5.387904,1.886725,0.056758],[-8.716204,1.521598,-2.809991,3.832656,-3.127347,7.410900],[-1.166721,4.332935,7.315890,-2.643402,8.239622,-0.763690],[6.592922,7.106069,-3.668228,-0.216847,6.560032,-4.980279]],[[-4.331182,2.451348,-3.978889,-9.318998,4.225565,3.654975],[1.780513,3.570849,3.839647,0.036505,-8.840501,9.579995],[0.887324,9.396292,6.989931,-5.013179,-6.373710,-5.994378],[9.187903,9.907493,8.464433,8.262547,3.981871,8.697292],[-4.898721,2.418455,-3.698466,7.168146,3.105152,-3.913074],[1.293494,-2.061643,-3.445951,-6.524884,0.029881,-0.113049],[-9.437072,0.888748,-7.627803,-9.814501,2.691732,1.994865],[9.632620,9.981272,-1.350306,6.103913,6.571986,0.648807],[2.931853,9.733901,9.217792,4.284407,0.455366,0.635240],[6.624087,-5.631661,-0.560784,-8.434649,-8.003229,-0.618177],[6.354491,-6.190599,8.130494,8.652445,-3.779790,-9.439250],[-0.522341,9.241661,-7.411379,-2.709040,7.437721,1.198337],[-0.101228,9.536063,1.527316,5.669047,1.932866,4.341322],[5.495762,0.019830,5.510373,-2.806690,4.502818,0.658251],[-7.163334,-4.905191,-2.796358,4.427222,8.528277,-0.739996],[-5.031685,-2.778429,7.170462,9.810906,-2.475331,-7.991526]]], dtype = "float64")#candidate|9797|(16, 16, 6)|const|float64
bop_9798 = relay.floor_divide(call_9791.astype('float32'), relay.reshape(const_9797.astype('float32'), relay.shape_of(call_9791))) # shape=(16, 16, 6)
bop_9801 = relay.floor_divide(call_9792.astype('float32'), relay.reshape(const_9797.astype('float32'), relay.shape_of(call_9792))) # shape=(16, 16, 6)
output = bop_9798
output2 = bop_9801
func_9813 = relay.Function([], output)
mod['func_9813'] = func_9813
mod = relay.transform.InferType()(mod)
output = func_9813()
func_9814 = relay.Function([], output)
mutated_mod['func_9814'] = func_9814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6006_call = mod.get_global_var('func_6006')
func_6007_call = mutated_mod.get_global_var('func_6007')
call_9825 = func_6006_call()
call_9826 = func_6006_call()
output = call_9825
output2 = call_9826
func_9846 = relay.Function([], output)
mod['func_9846'] = func_9846
mod = relay.transform.InferType()(mod)
mutated_mod['func_9846'] = func_9846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9846_call = mutated_mod.get_global_var('func_9846')
call_9847 = func_9846_call()
output = call_9847
func_9848 = relay.Function([], output)
mutated_mod['func_9848'] = func_9848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2501_call = mod.get_global_var('func_2501')
func_2502_call = mutated_mod.get_global_var('func_2502')
call_9879 = relay.TupleGetItem(func_2501_call(), 0)
call_9880 = relay.TupleGetItem(func_2502_call(), 0)
output = call_9879
output2 = call_9880
func_9885 = relay.Function([], output)
mod['func_9885'] = func_9885
mod = relay.transform.InferType()(mod)
output = func_9885()
func_9886 = relay.Function([], output)
mutated_mod['func_9886'] = func_9886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8267_call = mod.get_global_var('func_8267')
func_8268_call = mutated_mod.get_global_var('func_8268')
call_9890 = func_8267_call()
call_9891 = func_8267_call()
output = relay.Tuple([call_9890,])
output2 = relay.Tuple([call_9891,])
func_9894 = relay.Function([], output)
mod['func_9894'] = func_9894
mod = relay.transform.InferType()(mod)
output = func_9894()
func_9895 = relay.Function([], output)
mutated_mod['func_9895'] = func_9895
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9907 = relay.const([[[-6.107375],[1.167892],[-1.547404],[6.809082],[-0.335828],[-2.146639],[-7.210068],[7.338858],[-4.639573],[5.761949],[2.562603],[-8.382901],[0.955548],[6.016205],[8.971004],[7.210493]],[[5.898755],[-0.947690],[-6.503285],[6.600297],[5.548504],[9.188215],[0.944168],[9.482395],[8.659832],[-4.150209],[-8.691607],[6.980233],[5.368188],[-7.223268],[9.136754],[-5.110301]],[[6.461207],[1.897733],[-0.588369],[-2.182278],[-1.009091],[-1.797569],[-9.654018],[2.476452],[-6.117307],[-7.492872],[-2.268964],[-2.526075],[8.878990],[4.691893],[-3.971492],[5.672984]],[[-4.805009],[-1.989043],[5.952032],[-6.089358],[-3.039094],[5.711707],[-3.027190],[-7.217270],[6.658005],[-1.254652],[-3.288146],[9.565583],[5.081095],[6.743933],[8.512772],[0.574524]],[[1.328534],[-8.738203],[-9.790095],[-3.042142],[5.085404],[-3.682310],[-1.672397],[-6.032075],[8.559270],[-8.248500],[-2.103624],[9.843631],[-4.342025],[8.742117],[-1.625011],[4.194754]],[[-9.461897],[-4.976217],[-2.206954],[-3.152083],[1.157600],[-6.597715],[8.723091],[5.870570],[3.058604],[3.270385],[4.496540],[9.967178],[2.999629],[1.189698],[-6.288644],[9.725432]],[[4.533939],[5.194842],[-1.880274],[0.275310],[-0.872172],[2.411622],[1.860100],[9.494210],[-3.494362],[-7.116937],[2.371352],[8.578839],[-9.641159],[-7.420768],[7.055005],[-2.866548]],[[-6.876406],[8.400696],[5.109853],[-4.516055],[-9.722002],[9.026499],[-2.357872],[-5.583545],[2.734234],[-4.082280],[-4.680147],[2.751061],[9.743151],[4.258587],[5.131165],[1.462708]],[[-9.511937],[-1.466594],[6.321188],[4.890739],[0.001379],[7.077565],[1.171325],[-1.155124],[-1.048000],[-9.083403],[4.668735],[-1.516559],[7.861456],[4.583776],[3.087690],[-6.958027]]], dtype = "float32")#candidate|9907|(9, 16, 1)|const|float32
uop_9908 = relay.erf(const_9907.astype('float32')) # shape=(9, 16, 1)
func_6683_call = mod.get_global_var('func_6683')
func_6685_call = mutated_mod.get_global_var('func_6685')
call_9915 = relay.TupleGetItem(func_6683_call(), 7)
call_9916 = relay.TupleGetItem(func_6685_call(), 7)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
var_9927 = relay.var("var_9927", dtype = "bool", shape = (132, 16))#candidate|9927|(132, 16)|var|bool
call_9926 = relay.TupleGetItem(func_3754_call(relay.reshape(var_9927.astype('bool'), [528, 4])), 4)
call_9928 = relay.TupleGetItem(func_3756_call(relay.reshape(var_9927.astype('bool'), [528, 4])), 4)
func_3954_call = mod.get_global_var('func_3954')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_9940 = relay.TupleGetItem(func_3954_call(), 0)
call_9941 = relay.TupleGetItem(func_3956_call(), 0)
func_5572_call = mod.get_global_var('func_5572')
func_5574_call = mutated_mod.get_global_var('func_5574')
call_9943 = relay.TupleGetItem(func_5572_call(), 2)
call_9944 = relay.TupleGetItem(func_5574_call(), 2)
func_5064_call = mod.get_global_var('func_5064')
func_5066_call = mutated_mod.get_global_var('func_5066')
call_9963 = relay.TupleGetItem(func_5064_call(), 0)
call_9964 = relay.TupleGetItem(func_5066_call(), 0)
bop_9967 = relay.left_shift(uop_9908.astype('uint8'), relay.reshape(const_9907.astype('uint8'), relay.shape_of(uop_9908))) # shape=(9, 16, 1)
func_7212_call = mod.get_global_var('func_7212')
func_7214_call = mutated_mod.get_global_var('func_7214')
call_9972 = relay.TupleGetItem(func_7212_call(), 0)
call_9973 = relay.TupleGetItem(func_7214_call(), 0)
func_4618_call = mod.get_global_var('func_4618')
func_4621_call = mutated_mod.get_global_var('func_4621')
const_10004 = relay.const([-6.445169,8.345599,5.436116,4.053734,-1.292969,7.304686,-9.242360,5.165990,-1.817066,-1.071292,-3.004015,4.172969,-0.939435,-7.944870,3.515958,2.069789,8.317677,6.622290,6.398229,6.421872,3.044236,8.010109,-3.346765,6.674516,-2.498040,0.251414,-9.637242,-0.222801,-2.026453,6.730248,5.990426,-8.565375,8.664045,4.734656,-5.786658,-0.231038,-5.528415,-4.357228,-2.413757,0.900201,8.520743,-7.484138,7.931102,-8.110941,5.008561,9.732749,-8.196208,-0.543635,-9.599830,-1.500041,-3.354059,-2.304238,4.628136,4.178800,-7.267991,-3.742409,-6.561846,0.518271,5.169121,5.134316,0.165447,-6.886297,-7.412442,-7.710338,-1.774857,-1.142195,3.783537,6.743386,1.316067,4.033233,9.423634,4.893910,-6.849487,5.724600,4.165861,-3.751745,-3.188121,-9.688985,3.842291,1.142188,-4.389451,8.485927,-7.612751,-9.034211,3.399028,6.053798,2.738992,-9.661672,4.625114,8.354904,1.141122,-8.539521,-9.028033,-7.357483,4.562969,-8.691899,7.480623,8.053277,-8.637986,3.445098,3.755653,1.118815,-8.108430,-5.484776,0.270180,-6.189546,-2.714365,-6.078451,3.505269,-9.031829,-8.031821,-9.792240,-4.288715,8.521284,0.420094,5.852523,9.665615,4.537605,-7.579697,-8.096569,-6.891448,-6.558054,9.839426,6.119769,-8.324265,2.835832,-1.840378,-1.557356,0.379629,-7.498073,1.709697,-2.072563,-2.249501,-0.430096,2.500682,-5.613447,4.914514,-9.397266,-1.122100,1.665891,-7.081714,4.778700,8.154887,8.250711,-2.827090,4.544594,7.117876,-5.825310,-1.538777,0.106812,0.306895,3.219346,-2.398859,4.395031,3.726752,9.197548,4.165681,4.922721,7.463060,-7.099667,-0.941335,3.832741,7.335412,8.548076,-1.073028,5.980588,-5.178536,-3.129060,1.499566,6.915240,-0.835261,-7.776990,-4.844327,-4.259149,-6.957503,2.010791,2.022190,5.742896,-0.477330,-2.895052,2.720854,4.651175,-3.886068,-3.026904,0.683755,-1.711079,2.433630,-1.157887,-6.240848,5.059844,1.942689,7.478676,1.623018,8.082961,0.513523,-9.140083,8.889567,6.095988,4.483719,1.100555,0.163653,-2.138814,-1.952736,-6.124282,-2.222911,-9.337626,-6.415717,-4.289121,-3.196155,-8.645832,8.402424,-2.833833,-3.532024,-9.325881,7.384948,-5.778004,7.632534,9.457714,7.593851,5.769623,7.911281,0.810028,6.812152,9.058528,9.586927,-6.809075,-0.279190,-5.881614,-0.760111,-8.720411,-8.642636,-4.191723,-9.367235,-0.663488,-9.804426,9.179977,3.887883,4.015811,-6.841863,-3.140437,-4.684368,-1.326426,9.208842,2.275189,0.980852,8.355360,2.420318,5.412510,-4.806049,7.747391,6.295035,-9.078398,-6.212344,-1.108721,1.961987,-9.152141,9.108296,-7.559951,4.364974,-0.149223,-9.795732,0.658706,8.503237,0.921229,-5.848787,-6.429606,7.587446,-0.576122,9.106982,-8.350441,5.630072,-4.646420,8.882517,3.197910,4.923621,0.789398,2.910525,8.613176,0.046441,-1.895824,6.250127,-6.941126,-3.953902,-3.387728,9.922175,-4.541182,-4.512757,2.062570,2.925477,-5.411303,-5.422483,-5.345649,-7.197416,-0.639706,-2.237473,1.070358,-2.162829,-3.045349,-5.472457,-4.372021,1.594346,-1.758871,9.146297,7.710734,-9.186729,0.366860,9.359910,1.037390,9.226238,-3.953081,-5.565067,-1.819748,7.025672,7.471016,0.199110,1.109502,-6.251507,-3.442400,7.540611,9.485520,-6.355990,-2.954515,-3.523498,6.262053,5.075372,-8.959698,-5.529866,-8.038048,0.484718,5.274089,1.197432,-4.645488,5.083571,-3.312693,-9.393377,-9.980214,-2.063829,6.148856,-5.355031,9.937034,-2.985217,-2.028467,-5.920435,-0.641248,-7.086019,-7.237126,-9.644706,-6.639393,-4.074185,-0.669904,-8.518892,2.905170,7.666946,9.456096,4.027523,7.532926,-3.351988,-6.785328,1.309813,4.696023,8.525828,7.530966,-4.137272,3.550890,-0.684063,3.827191,-9.792473,-1.117378,2.181449,-3.838470,-0.976242,-1.180280,0.536249,0.719173,9.007735,-6.695975,-2.830957,-7.475077,0.906297,7.356617,5.635583,-5.268700,8.041719,1.664329,1.788546,-6.204492,-0.563315,-8.933048,8.875646,-5.596133,-2.924275,4.378639,-2.804339,0.979850,2.014132,-3.198478,-6.534136,6.554844,5.367234,-5.962572,-6.950595,-8.011831,-3.459460,-5.933591,-0.426272,-4.747135,3.157102,5.249931,-8.659364,-3.319539,-8.128377,-8.937463,2.431465,-4.715127,0.509219,3.123387,8.668126,-5.706809,4.938625,-3.941998,7.393926,-3.181632,-1.634761,-2.645368,9.534373,2.704259,2.680243,-6.862419,6.261869,5.373694,2.938218,-7.479544,-5.239000,-5.492573,7.630171,5.115046,-8.859487,7.287395,-5.876786,4.763418,-2.190771,1.533871,-6.035197,5.755573,-2.887138,-1.238317,9.964634,1.880716,9.894106,9.856550,-1.256697,1.793079,0.817272,5.409531,4.332101,4.897384,6.420443,2.810582,-1.761995,4.877368,-6.341437,-7.811395,-8.327464,6.542563,-6.162688,-4.586224,-9.179978,2.690936,8.257502,9.279856,1.064170,-5.371662,5.587250,-5.565455,-4.627111,-5.490783,-3.694079,1.075775,-6.945216,-9.816840,0.258456,1.568460,9.167790,1.061323,-9.185482,4.142817,9.437325,-5.483147,8.702231,-1.282485,2.602804,-7.257577,-5.631032,-5.969173,6.982612,3.803367,-3.449888,-0.734862,0.994744,-8.395118,-8.459563,2.888743,7.828888,-7.200234,-1.369159,9.281513,6.863142,0.306801,5.265829,7.891767,8.041301,9.024982,1.260594,6.367504,-0.835603,-3.189558,1.338142,-0.656494,-6.670112,0.686302,-8.782302,-7.188652,0.551793,1.804365,6.770483,1.214370,9.649490,-5.309152,-2.407111,9.675873,1.176302,1.715626,4.392017,-5.443577,-1.763629,-7.001992,-5.552692,-0.935847,4.453740,-8.850847,-5.306639,8.211164,-3.631479,9.353591,5.240386,2.729610,-6.778609,6.288569,6.221999,4.011692,1.949618,-0.318252,-4.017141,4.435827,-4.329058,9.502719,3.262605,-8.300812,-8.114412,-5.510588,-4.863518,0.419038,-1.723454,-3.391793,-6.310256,8.759085,7.223262,8.614935,3.899518,6.175359,-7.225368,-5.267039,4.178124,9.351249,-6.401395,9.631027,-1.902043,-4.987615,9.518776,-6.153204,-5.931272,-8.891233,2.162804,-5.606447,-9.359752,-8.299392,-9.217539,3.772129,4.802992,4.671701,-4.114570,-2.746649,9.637495,-3.156039,0.789810,-8.586029,-0.221991,1.508799,-0.387648,-1.039667,-8.972729,9.549981,-5.435692,-2.363930,-5.484372,8.700408,5.470289,8.683810,-9.775868,7.448367,-7.254264,-0.256287,-4.690500,-7.890365,1.315516,-9.585997,9.921562,-6.644297,-7.409798,3.326302,-9.881453,8.401056,-5.240428,1.420145,-8.931260,-0.616608,-7.953060,-7.062038,-8.319902,-7.628462,6.541017,5.590885,-6.225942,-4.848790,9.221100,7.606253,2.441651,9.448567,2.863378,-9.064617,0.103786,-9.569584,8.606909,8.308522,0.473612,3.970319,-2.110924,9.184851,-4.760338,2.265156,6.113778,-8.852724,5.535479,-6.662894,-4.162764,8.328623,5.324767,3.774809,-2.461925,6.152458,-7.992473,-5.328311,6.486891,-2.149825,-3.239608,7.892694,-2.974113,-3.682305,4.767468,2.137472,1.955024,-4.128914,-0.734301,-7.167491,-2.730854,2.446496,-3.054449,7.033144,9.046982,-5.648861,0.400495,-3.975761,9.356973,6.253407,8.421120,-3.354647,2.556749,-9.511018,-7.155377,-9.442243,-9.251598,-4.897832,-9.959134,-8.929915,8.916354,6.984757,0.533120,-8.814485,-4.602902,5.421512,-2.455173,-6.629608,-8.164133,-8.001145,1.190794,4.157423,-1.101431,4.800531,6.839406,-9.383083,-7.834809,4.286790,0.536678,-2.413435,-5.541228], dtype = "float64")#candidate|10004|(715,)|const|float64
call_10003 = func_4618_call(relay.reshape(const_10004.astype('float64'), [11, 5, 13]))
call_10005 = func_4618_call(relay.reshape(const_10004.astype('float64'), [11, 5, 13]))
func_2897_call = mod.get_global_var('func_2897')
func_2900_call = mutated_mod.get_global_var('func_2900')
var_10012 = relay.var("var_10012", dtype = "float64", shape = (2, 180))#candidate|10012|(2, 180)|var|float64
call_10011 = relay.TupleGetItem(func_2897_call(relay.reshape(var_10012.astype('float64'), [8, 3, 15])), 2)
call_10013 = relay.TupleGetItem(func_2900_call(relay.reshape(var_10012.astype('float64'), [8, 3, 15])), 2)
output = relay.Tuple([call_9915,call_9926,var_9927,call_9940,call_9943,call_9963,bop_9967,call_9972,call_10003,const_10004,call_10011,var_10012,])
output2 = relay.Tuple([call_9916,call_9928,var_9927,call_9941,call_9944,call_9964,bop_9967,call_9973,call_10005,const_10004,call_10013,var_10012,])
func_10023 = relay.Function([var_9927,var_10012,], output)
mod['func_10023'] = func_10023
mod = relay.transform.InferType()(mod)
var_10024 = relay.var("var_10024", dtype = "bool", shape = (132, 16))#candidate|10024|(132, 16)|var|bool
var_10025 = relay.var("var_10025", dtype = "float64", shape = (2, 180))#candidate|10025|(2, 180)|var|float64
output = func_10023(var_10024,var_10025,)
func_10026 = relay.Function([var_10024,var_10025,], output)
mutated_mod['func_10026'] = func_10026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7607_call = mod.get_global_var('func_7607')
func_7608_call = mutated_mod.get_global_var('func_7608')
call_10059 = relay.TupleGetItem(func_7607_call(), 2)
call_10060 = relay.TupleGetItem(func_7608_call(), 2)
func_8915_call = mod.get_global_var('func_8915')
func_8919_call = mutated_mod.get_global_var('func_8919')
var_10093 = relay.var("var_10093", dtype = "float64", shape = (336,))#candidate|10093|(336,)|var|float64
var_10094 = relay.var("var_10094", dtype = "float64", shape = (32, 48))#candidate|10094|(32, 48)|var|float64
call_10092 = relay.TupleGetItem(func_8915_call(relay.reshape(var_10093.astype('float64'), [24, 14]), relay.reshape(var_10094.astype('float64'), [16, 16, 6]), ), 2)
call_10095 = relay.TupleGetItem(func_8919_call(relay.reshape(var_10093.astype('float64'), [24, 14]), relay.reshape(var_10094.astype('float64'), [16, 16, 6]), ), 2)
uop_10104 = relay.tan(call_10092.astype('float32')) # shape=(24, 14)
uop_10106 = relay.tan(call_10095.astype('float32')) # shape=(24, 14)
bop_10107 = relay.bitwise_or(uop_10104.astype('uint8'), relay.reshape(var_10093.astype('uint8'), relay.shape_of(uop_10104))) # shape=(24, 14)
bop_10110 = relay.bitwise_or(uop_10106.astype('uint8'), relay.reshape(var_10093.astype('uint8'), relay.shape_of(uop_10106))) # shape=(24, 14)
func_4178_call = mod.get_global_var('func_4178')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_10111 = relay.TupleGetItem(func_4178_call(), 1)
call_10112 = relay.TupleGetItem(func_4179_call(), 1)
output = relay.Tuple([call_10059,var_10094,bop_10107,call_10111,])
output2 = relay.Tuple([call_10060,var_10094,bop_10110,call_10112,])
func_10113 = relay.Function([var_10093,var_10094,], output)
mod['func_10113'] = func_10113
mod = relay.transform.InferType()(mod)
mutated_mod['func_10113'] = func_10113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10113_call = mutated_mod.get_global_var('func_10113')
var_10115 = relay.var("var_10115", dtype = "float64", shape = (336,))#candidate|10115|(336,)|var|float64
var_10116 = relay.var("var_10116", dtype = "float64", shape = (32, 48))#candidate|10116|(32, 48)|var|float64
call_10114 = func_10113_call(var_10115,var_10116,)
output = call_10114
func_10117 = relay.Function([var_10115,var_10116,], output)
mutated_mod['func_10117'] = func_10117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7607_call = mod.get_global_var('func_7607')
func_7608_call = mutated_mod.get_global_var('func_7608')
call_10173 = relay.TupleGetItem(func_7607_call(), 2)
call_10174 = relay.TupleGetItem(func_7608_call(), 2)
output = call_10173
output2 = call_10174
func_10175 = relay.Function([], output)
mod['func_10175'] = func_10175
mod = relay.transform.InferType()(mod)
output = func_10175()
func_10176 = relay.Function([], output)
mutated_mod['func_10176'] = func_10176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9103_call = mod.get_global_var('func_9103')
func_9105_call = mutated_mod.get_global_var('func_9105')
call_10197 = relay.TupleGetItem(func_9103_call(), 0)
call_10198 = relay.TupleGetItem(func_9105_call(), 0)
func_6086_call = mod.get_global_var('func_6086')
func_6088_call = mutated_mod.get_global_var('func_6088')
const_10209 = relay.const([-10,-8,8,2,10,5,-1,1,-7,3,-8,3,6,-8,-4,4,-7,-7,-4,4,10,3,-10,-1,-1,-2,-7,-8,4,10,8,2,-4,10,-9,5,-8,1,1,3,-8,10,-2,10,6,-4,4,8,6,-8,-4,4,-1,10,-1,-5,9,-4,-6,9,-4,4,10,6,10,2,-8,10,5,3,-4,-5,-4,6,-3,9,7,-3,-5,-6,4,-3,-8,2,-2,1,3,-10,7,6,10,-7,-9,5,-1,1,1,-8,6,2], dtype = "uint8")#candidate|10209|(100,)|const|uint8
call_10208 = relay.TupleGetItem(func_6086_call(relay.reshape(const_10209.astype('uint8'), [100,])), 5)
call_10210 = relay.TupleGetItem(func_6088_call(relay.reshape(const_10209.astype('uint8'), [100,])), 5)
func_8433_call = mod.get_global_var('func_8433')
func_8435_call = mutated_mod.get_global_var('func_8435')
call_10221 = relay.TupleGetItem(func_8433_call(), 0)
call_10222 = relay.TupleGetItem(func_8435_call(), 0)
func_2897_call = mod.get_global_var('func_2897')
func_2900_call = mutated_mod.get_global_var('func_2900')
var_10231 = relay.var("var_10231", dtype = "float64", shape = (1, 360))#candidate|10231|(1, 360)|var|float64
call_10230 = relay.TupleGetItem(func_2897_call(relay.reshape(var_10231.astype('float64'), [8, 3, 15])), 0)
call_10232 = relay.TupleGetItem(func_2900_call(relay.reshape(var_10231.astype('float64'), [8, 3, 15])), 0)
output = relay.Tuple([call_10197,call_10208,const_10209,call_10221,call_10230,var_10231,])
output2 = relay.Tuple([call_10198,call_10210,const_10209,call_10222,call_10232,var_10231,])
func_10234 = relay.Function([var_10231,], output)
mod['func_10234'] = func_10234
mod = relay.transform.InferType()(mod)
var_10235 = relay.var("var_10235", dtype = "float64", shape = (1, 360))#candidate|10235|(1, 360)|var|float64
output = func_10234(var_10235)
func_10236 = relay.Function([var_10235], output)
mutated_mod['func_10236'] = func_10236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8433_call = mod.get_global_var('func_8433')
func_8435_call = mutated_mod.get_global_var('func_8435')
call_10261 = relay.TupleGetItem(func_8433_call(), 1)
call_10262 = relay.TupleGetItem(func_8435_call(), 1)
output = relay.Tuple([call_10261,])
output2 = relay.Tuple([call_10262,])
func_10271 = relay.Function([], output)
mod['func_10271'] = func_10271
mod = relay.transform.InferType()(mod)
mutated_mod['func_10271'] = func_10271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10271_call = mutated_mod.get_global_var('func_10271')
call_10272 = func_10271_call()
output = call_10272
func_10273 = relay.Function([], output)
mutated_mod['func_10273'] = func_10273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7243_call = mod.get_global_var('func_7243')
func_7245_call = mutated_mod.get_global_var('func_7245')
call_10290 = relay.TupleGetItem(func_7243_call(), 0)
call_10291 = relay.TupleGetItem(func_7245_call(), 0)
output = relay.Tuple([call_10290,])
output2 = relay.Tuple([call_10291,])
func_10312 = relay.Function([], output)
mod['func_10312'] = func_10312
mod = relay.transform.InferType()(mod)
mutated_mod['func_10312'] = func_10312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10312_call = mutated_mod.get_global_var('func_10312')
call_10313 = func_10312_call()
output = call_10313
func_10314 = relay.Function([], output)
mutated_mod['func_10314'] = func_10314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9143_call = mod.get_global_var('func_9143')
func_9145_call = mutated_mod.get_global_var('func_9145')
call_10330 = func_9143_call()
call_10331 = func_9143_call()
func_6442_call = mod.get_global_var('func_6442')
func_6444_call = mutated_mod.get_global_var('func_6444')
call_10336 = relay.TupleGetItem(func_6442_call(), 2)
call_10337 = relay.TupleGetItem(func_6444_call(), 2)
func_5038_call = mod.get_global_var('func_5038')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_10366 = relay.TupleGetItem(func_5038_call(), 0)
call_10367 = relay.TupleGetItem(func_5039_call(), 0)
func_5677_call = mod.get_global_var('func_5677')
func_5678_call = mutated_mod.get_global_var('func_5678')
call_10379 = relay.TupleGetItem(func_5677_call(), 1)
call_10380 = relay.TupleGetItem(func_5678_call(), 1)
var_10390 = relay.var("var_10390", dtype = "float64", shape = (16, 16, 6))#candidate|10390|(16, 16, 6)|var|float64
bop_10391 = relay.bitwise_and(call_10336.astype('uint64'), relay.reshape(var_10390.astype('uint64'), relay.shape_of(call_10336))) # shape=(16, 16, 6)
bop_10394 = relay.bitwise_and(call_10337.astype('uint64'), relay.reshape(var_10390.astype('uint64'), relay.shape_of(call_10337))) # shape=(16, 16, 6)
func_10023_call = mod.get_global_var('func_10023')
func_10026_call = mutated_mod.get_global_var('func_10026')
var_10418 = relay.var("var_10418", dtype = "bool", shape = (2112,))#candidate|10418|(2112,)|var|bool
var_10419 = relay.var("var_10419", dtype = "float64", shape = (360,))#candidate|10419|(360,)|var|float64
call_10417 = relay.TupleGetItem(func_10023_call(relay.reshape(var_10418.astype('bool'), [132, 16]), relay.reshape(var_10419.astype('float64'), [2, 180]), ), 10)
call_10420 = relay.TupleGetItem(func_10026_call(relay.reshape(var_10418.astype('bool'), [132, 16]), relay.reshape(var_10419.astype('float64'), [2, 180]), ), 10)
output = relay.Tuple([call_10330,call_10366,call_10379,bop_10391,call_10417,var_10418,var_10419,])
output2 = relay.Tuple([call_10331,call_10367,call_10380,bop_10394,call_10420,var_10418,var_10419,])
func_10424 = relay.Function([var_10390,var_10418,var_10419,], output)
mod['func_10424'] = func_10424
mod = relay.transform.InferType()(mod)
var_10425 = relay.var("var_10425", dtype = "float64", shape = (16, 16, 6))#candidate|10425|(16, 16, 6)|var|float64
var_10426 = relay.var("var_10426", dtype = "bool", shape = (2112,))#candidate|10426|(2112,)|var|bool
var_10427 = relay.var("var_10427", dtype = "float64", shape = (360,))#candidate|10427|(360,)|var|float64
output = func_10424(var_10425,var_10426,var_10427,)
func_10428 = relay.Function([var_10425,var_10426,var_10427,], output)
mutated_mod['func_10428'] = func_10428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8433_call = mod.get_global_var('func_8433')
func_8435_call = mutated_mod.get_global_var('func_8435')
call_10461 = relay.TupleGetItem(func_8433_call(), 1)
call_10462 = relay.TupleGetItem(func_8435_call(), 1)
uop_10484 = relay.asinh(call_10461.astype('float32')) # shape=(3, 8, 12)
uop_10486 = relay.asinh(call_10462.astype('float32')) # shape=(3, 8, 12)
func_4178_call = mod.get_global_var('func_4178')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_10519 = relay.TupleGetItem(func_4178_call(), 2)
call_10520 = relay.TupleGetItem(func_4179_call(), 2)
func_9267_call = mod.get_global_var('func_9267')
func_9269_call = mutated_mod.get_global_var('func_9269')
const_10527 = relay.const([-6.396435,-8.757771,3.875328,0.929918,5.813485,-2.016628,0.970744,-3.491899,-0.142320,3.653325,-4.501590,0.601372,5.310304,2.792204,4.982382,-6.592191,-2.394636,-6.306508,7.032766,7.323442,-3.288874,2.034472,3.363477,-3.682840,5.143494,6.509005,-8.502172,-7.730741,3.276402,-4.003109,7.498520,-6.818093,2.120902,5.146676,-3.825211,-2.006506,0.359522,2.063392,1.958137,-3.433994,1.374718,-4.385369,-0.500378,6.368628,9.759843,8.336221,-7.870242,-7.733416,-9.831252,5.323744,-7.775245,-2.980450,1.005273,-5.690825,2.129936,5.333226,-8.118780,-7.261156,6.800992,-7.463444,-4.009636,1.691751,7.644398,-7.543665,-5.149775,4.881270,5.959918,-4.440894,7.120069,-0.068554,3.934249,8.977833,0.654198,8.624137,-5.974900,6.732640,7.674075,7.373136,-3.213145,-1.160140,6.327698,8.812798,4.158556,2.390422,-3.670952,9.473964,-6.570551,8.441342,4.212162,-0.981718,-0.113582,-6.355916,-2.917793,7.338136,7.119676,8.328768,9.649270,-5.753935,-7.455201,0.066617,4.603164,4.879173,1.801925,9.172989,5.503691,-0.906733,-7.608783,9.054975,4.976541,8.013689,-6.664105,5.936346,-9.359091,5.877255,-7.865208,9.123076,9.817787,2.288253,-4.746246,5.723335,-9.261667,6.993362,-6.830016,3.460163,4.945292,4.948355,-2.721316,3.328657,-4.958491,0.691803,4.813487,-3.444042,6.287612,-0.836159,-8.549365,1.392962,1.733131,7.801229,2.737799,6.667338,-0.979709,3.407577,-5.469452,2.048043,7.800276,1.067375,6.772995,4.078391,0.688025,-3.805293,-8.417873,-6.806783,7.979680,2.704705,-3.791768,1.243739,2.263184,1.906769,-3.822377,-8.674139,-3.551702,-2.129459,7.510671,-2.750756,3.713078,1.209304,8.948171,-1.863144,4.787496,6.450679,-8.707735,-7.493669,2.311137,7.118924,-9.456890,1.731054,5.575648,0.435938,-3.597483,1.845117,-6.462798,2.928523,-5.015811,-3.408276,9.592306,-9.113060,8.834568,-2.728010,-7.389037,-1.664602,0.972431,3.322472,8.678656,-4.465044,1.703559,-7.686940,-7.613223,8.691761,9.534697,-2.939430,0.022531,-5.957132,-0.056537,-7.783251,3.901161,1.233832,-1.366624,3.048417,8.360133,5.755201,-9.829077,3.339755,4.790081,9.671760,-8.899126,-7.164881,-0.586364,-3.630163,5.799214,-5.500309,8.666002,1.502656,-8.712985,-4.119366,-3.684498,-0.990838,9.143790,1.928541,-3.468404,5.580720,7.053060,8.278289,-0.584986,-4.827113,-0.992847,-0.020244,-1.090726,6.547821,9.167351,8.907015,-7.690090,-7.466339,3.696493,-5.486206,-6.880073,-1.976640,2.809792,-8.458989,-1.544885,3.051593,0.258207,-7.075573,-1.095850,-3.960159,2.237861,3.938894,-1.360323,0.930051,-5.200663,9.088814,7.388977,-7.426268,7.983535,2.159720,0.553362,-5.720526,-8.327349,-7.799595,4.271983,-7.913166,-7.981178,-3.522424,8.276494,-4.149962,1.375922,3.765578,-4.191172,-6.458881,-5.379105,6.525596,-2.822954,-6.470574,-7.972267,2.974656,3.063210,3.075010,-7.111879,-9.773530,7.300548,6.278443,8.003437,-3.214074,-5.146453,6.452939,-1.280735,-6.852980,7.920154,5.880877,2.336756,1.267343,3.688223,3.152155,-1.367197,9.331651,-9.985697,-9.899936,2.873792,6.068119,1.806208,-4.804955,2.321560,7.514628,9.617295,5.145946,2.169827,-6.556198,3.695988,-2.813981,8.652830,8.326463,-8.037942,1.031011,-5.272351,0.733195,-1.979907,9.042417,-9.149613,-2.957645,-2.210928,1.281488,-9.303242,-5.998564,5.768446,8.775119,-1.025434,-6.625936,-3.565501,4.943353,1.320713,1.419230,-5.972821,0.627855,1.085644,7.944464,2.751084,4.589064,-1.396003,1.466519,9.540519,-8.969235,-2.328723,-9.430276,6.313495,4.688785,8.884920,-2.703514,-7.944639,-1.616578,9.478138,8.370651,-5.482297,-1.575846,-2.665952,-0.429785,-6.473845,7.937061,-6.380980,0.357875,2.251567,-0.607160,2.774178,1.921975,-0.435770,2.671749,0.733719,7.461060,-9.982659,-3.850100,1.040181,-7.347186,1.067739,-3.991275,6.372462,7.912149,5.126246,1.855255,-7.099551,-9.700543,0.836336,-9.461989,-0.494407,-9.506258,5.851218,5.929070,-8.334160,-8.717689,6.055852,6.893681,0.188677,-3.960108,-5.829761,9.465088,-8.893087,5.350323,-4.709801,-9.186124,9.910046,3.373794,9.555050,-2.638919,-7.799221,6.257034,1.401855,-5.996013,-7.600678,5.045394,5.236906,4.398593,-5.460071,5.490764,3.960803,9.251695,-8.539986,5.817165,8.439682,2.905959,2.451632,-3.309482,0.756484,3.080150,0.906361,-0.500852,9.226351,-7.021730,8.130749,-9.712805,0.653600,2.952597,-0.918420,1.214635,-2.726744,1.494752,1.154237,4.868917,1.054713,-4.988860,4.045179,3.677723,6.932840,7.272218,1.433593,3.153246,1.482032,-3.191196,4.528749,-7.409525,7.770715,9.521161,7.168792,0.187193,1.151628,2.631198,9.657358,-8.018460,-3.117490,5.804146,5.758946,-0.500745,4.454840,9.915214,-2.559055,9.111124,1.412149,-8.697569,5.010540,3.058276,-1.353005,6.109846,9.556675,-4.299300,1.229433,5.276784,-0.267728,-2.399516,1.803414,-3.070000,4.039207,3.872785,5.104371,6.474093,3.961333,0.640971,2.773999,4.302820,-3.270067,-0.020626,1.648324,7.749790,3.154633,-9.443608,0.006299,-5.819439,-7.647734,2.188751,3.087747,-7.284365,-1.497247,-0.704710,-4.917689,-5.950392,6.245073,9.730622,4.199921,-5.983890,-0.785323,8.882404,-1.272077,-2.681292,3.500737,-7.682067,-6.388097,2.624777,-2.740046,-1.019291,-2.256349,-7.467448,2.271568,-8.379653,-5.288166,3.401577,4.053849,-5.430687,-0.518567,-6.959143,-6.849550,-4.774863,5.192933,5.970232,-3.224883,4.965357,7.852623,-8.817578,8.898366,6.403576,-3.155665,-3.254829,4.988143,2.975748,7.852832,2.676113,-4.529372,-5.358157,8.640426,2.569531,5.657106,-5.147155,-2.426355,0.329442,-1.056473,4.466882,5.088024,-7.278243,-5.623045,-4.487434,-3.982042,-5.488816,2.180821,-5.719940,-4.474248,-7.429234,-5.609298,-7.533631,-7.484810,-6.767207,-3.741729,9.462360,6.770469,-2.324296,7.508546,4.845514,-2.005285,-7.885464,-1.421718,4.790272,-4.171352,-1.976019,-1.818631,-9.326076,-9.322315,3.708796,-5.579693,-2.703336,7.346168,-8.613530,9.888614,-5.857389,2.006494,-1.141078,6.465778,-5.359152,1.945539,4.272230,-8.791894,-5.809869,-6.497033,7.381429,-7.027985,3.101171,5.806123,-4.211860,9.241264,-1.530919,2.861742,6.447432,-7.768690,5.906837,-5.877804,-5.959202,-5.938486,-3.446041,-3.100939,7.126296,7.862578,-0.800264,-0.305226,-4.783188,7.933601,-6.884745,3.359095,-3.235965,-2.789946,1.315413,-4.027484,3.934510,8.612606,3.042836,9.615632,-4.957852,8.760589,8.876820,-7.337408,-6.047497,7.620271,-4.910699,-8.298478,-8.031457,-0.225993,7.546635,6.748933,7.630594,-8.631415,7.171736,-3.758607,3.227849,-6.870384,9.460434,-8.312744,2.724314,5.003148,-4.034985,-5.202907,-4.930045,-1.629176,7.221359,-3.286686,-0.705585,1.904197,-3.261191,-3.610731,-4.160300,2.680582,7.048481,4.612796,0.683209,-6.391134,-1.375239,-4.053890,-5.472295,-6.254616,3.220641,-1.336460,-4.989244,2.017493,4.750673,-7.966606,-2.673940,-6.398916,8.134204,-7.916738,-1.149084,-9.865954,3.608724,7.585129,1.980036,8.018187,-5.015283,5.222357,-3.539972,0.099085,-6.483841,8.238269,4.412527,-5.789550,7.910027,7.255860,3.339253,-2.451365,9.685206,-5.555883,2.580578,7.795953,-8.286012,-1.096440,7.575897,-5.921911,2.621929,-6.791364,9.495147,8.733419,-5.252326,-4.856470,-0.872192,-8.362902,-5.985561,5.114831,8.239412,3.861687,1.143372,-0.555221,-7.963355,-8.003092,-6.601433,-2.951166,4.481928,-4.621059,6.957974,5.755096,7.648147,9.392459,4.856476,7.800853,9.862761,-2.387233,0.547457,4.659116,1.533129,4.846778,-3.771231,-5.435821,-3.490384,3.101143,0.095512,1.717399,1.849195,1.487527,3.585491,9.279840,4.147341,2.051126,-0.214347,-5.882318,-1.890990,1.462498,-2.830764,-6.176676,-6.391939,-4.857966,4.844506,-3.434662,-8.938366,4.786771,-8.758346,-7.842722,-5.907165,-2.449104,-9.495586,-1.310121,9.596031,3.409650,1.811079,-2.623631,-3.774054,-2.347057,-7.367867,-3.562420,-3.189846,0.832548,-4.376709,-4.068072,8.884027,1.637019,-3.278095,0.182510,5.729893,3.872879,-5.317117,-3.003459,-2.916589,-3.166839,8.073458,0.014138,-0.819301,-0.836510,-9.634744,6.374054,-8.177716,5.343402,3.621061,-2.797733,2.619023,8.487444,9.868540,-1.777100,-0.701832,-3.000298,0.651909,8.256557,-9.846304,-0.033300,8.171129,8.951935,-1.478286,-9.719120,1.743377,-1.258524,-1.761555,-2.176975,3.939108,9.262510,-2.641897,3.535148,5.391003,3.899834,1.443427,-1.395563,-8.166249,-2.105125,-0.596576,-8.853365,0.288306,-8.869853,-2.385672,9.850348,-5.834897,-0.922641,-1.019418,-8.990478,-4.185163,-2.030967,-6.993348,-1.357888,-4.150418,1.210793,4.646965,-8.670329,5.155862,-1.949588,1.843329,8.047792,-9.647083,-1.707811,-2.128641,-7.386233,1.029597], dtype = "float32")#candidate|10527|(864,)|const|float32
call_10526 = relay.TupleGetItem(func_9267_call(relay.reshape(const_10527.astype('float32'), [9, 6, 16])), 0)
call_10528 = relay.TupleGetItem(func_9269_call(relay.reshape(const_10527.astype('float32'), [9, 6, 16])), 0)
func_9103_call = mod.get_global_var('func_9103')
func_9105_call = mutated_mod.get_global_var('func_9105')
call_10531 = relay.TupleGetItem(func_9103_call(), 0)
call_10532 = relay.TupleGetItem(func_9105_call(), 0)
output = relay.Tuple([uop_10484,call_10519,call_10526,const_10527,call_10531,])
output2 = relay.Tuple([uop_10486,call_10520,call_10528,const_10527,call_10532,])
func_10536 = relay.Function([], output)
mod['func_10536'] = func_10536
mod = relay.transform.InferType()(mod)
mutated_mod['func_10536'] = func_10536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10536_call = mutated_mod.get_global_var('func_10536')
call_10537 = func_10536_call()
output = call_10537
func_10538 = relay.Function([], output)
mutated_mod['func_10538'] = func_10538
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10542 = relay.const([[[-1.798663],[3.725750],[-7.647307],[-0.541032],[8.867397],[-0.475223]],[[4.681248],[-7.732325],[-2.939584],[3.389213],[-1.486989],[-0.286772]],[[2.639347],[-7.364302],[-3.036026],[-1.675493],[2.535266],[-0.056179]],[[5.469267],[4.678181],[7.776208],[3.241576],[-0.401077],[-3.156566]],[[-1.837521],[7.586498],[0.630918],[5.137247],[-7.335903],[7.502937]],[[0.818167],[1.837972],[-0.113427],[-7.287592],[-6.246510],[-1.711166]],[[-6.218244],[-6.290568],[8.000639],[9.974132],[-5.701019],[-6.967689]],[[-2.689627],[-6.505388],[3.914551],[-5.092399],[6.472947],[5.799798]],[[5.391619],[8.092161],[6.289014],[7.817611],[3.889301],[6.028992]],[[-9.093241],[4.216088],[1.791936],[-6.046054],[8.854672],[-3.287795]],[[7.808405],[1.455590],[-1.774716],[-9.303343],[-1.915718],[9.584504]],[[7.266976],[7.294749],[6.762481],[3.908351],[7.354921],[-7.308091]],[[-5.103166],[3.803901],[-3.345425],[5.769050],[-1.656864],[-1.938603]],[[9.971507],[-7.757949],[4.842661],[-0.833553],[-0.654083],[2.206350]],[[-3.297974],[-4.367206],[0.261817],[-8.705773],[8.525416],[5.594390]]], dtype = "float64")#candidate|10542|(15, 6, 1)|const|float64
uop_10543 = relay.asin(const_10542.astype('float64')) # shape=(15, 6, 1)
output = relay.Tuple([uop_10543,])
output2 = relay.Tuple([uop_10543,])
func_10547 = relay.Function([], output)
mod['func_10547'] = func_10547
mod = relay.transform.InferType()(mod)
output = func_10547()
func_10548 = relay.Function([], output)
mutated_mod['func_10548'] = func_10548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5639_call = mod.get_global_var('func_5639')
func_5640_call = mutated_mod.get_global_var('func_5640')
call_10552 = relay.TupleGetItem(func_5639_call(), 3)
call_10553 = relay.TupleGetItem(func_5640_call(), 3)
output = relay.Tuple([call_10552,])
output2 = relay.Tuple([call_10553,])
func_10580 = relay.Function([], output)
mod['func_10580'] = func_10580
mod = relay.transform.InferType()(mod)
output = func_10580()
func_10581 = relay.Function([], output)
mutated_mod['func_10581'] = func_10581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10606 = relay.var("var_10606", dtype = "int16", shape = ())#candidate|10606|()|var|int16
const_10607 = relay.const([[[-2,3,-4,-4,3,3,5,-10,-8,7],[2,-1,5,-3,-6,-2,-5,-10,2,-8],[-6,-8,-8,-5,5,-8,-3,5,6,-7],[-7,5,-4,9,-10,2,9,-6,10,5]],[[-5,-4,1,6,-9,2,-2,8,-3,-3],[-5,9,-8,-10,8,6,10,2,9,-9],[-3,-6,9,2,-10,-4,-1,-8,-8,7],[-4,9,-3,5,3,2,-6,-10,2,-10]]], dtype = "int16")#candidate|10607|(2, 4, 10)|const|int16
bop_10608 = relay.equal(var_10606.astype('bool'), const_10607.astype('bool')) # shape=(2, 4, 10)
bop_10616 = relay.floor_divide(var_10606.astype('float64'), bop_10608.astype('float64')) # shape=(2, 4, 10)
output = relay.Tuple([bop_10616,])
output2 = relay.Tuple([bop_10616,])
func_10623 = relay.Function([var_10606,], output)
mod['func_10623'] = func_10623
mod = relay.transform.InferType()(mod)
var_10624 = relay.var("var_10624", dtype = "int16", shape = ())#candidate|10624|()|var|int16
output = func_10623(var_10624)
func_10625 = relay.Function([var_10624], output)
mutated_mod['func_10625'] = func_10625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9759_call = mod.get_global_var('func_9759')
func_9760_call = mutated_mod.get_global_var('func_9760')
call_10704 = func_9759_call()
call_10705 = func_9759_call()
output = call_10704
output2 = call_10705
func_10710 = relay.Function([], output)
mod['func_10710'] = func_10710
mod = relay.transform.InferType()(mod)
output = func_10710()
func_10711 = relay.Function([], output)
mutated_mod['func_10711'] = func_10711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_10718 = relay.TupleGetItem(func_2981_call(), 0)
call_10719 = relay.TupleGetItem(func_2983_call(), 0)
output = call_10718
output2 = call_10719
func_10724 = relay.Function([], output)
mod['func_10724'] = func_10724
mod = relay.transform.InferType()(mod)
mutated_mod['func_10724'] = func_10724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10724_call = mutated_mod.get_global_var('func_10724')
call_10725 = func_10724_call()
output = call_10725
func_10726 = relay.Function([], output)
mutated_mod['func_10726'] = func_10726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9720_call = mod.get_global_var('func_9720')
func_9721_call = mutated_mod.get_global_var('func_9721')
call_10755 = relay.TupleGetItem(func_9720_call(), 0)
call_10756 = relay.TupleGetItem(func_9721_call(), 0)
func_7427_call = mod.get_global_var('func_7427')
func_7432_call = mutated_mod.get_global_var('func_7432')
const_10766 = relay.const([8,2,10,-3,-2,-2,-2,-2,1,9,6,-6,2,-1,3,-8,-9,3,6,-8,8,7,-5,4,10,6,9,-4,7,7,-5,-1,7], dtype = "int32")#candidate|10766|(33,)|const|int32
var_10767 = relay.var("var_10767", dtype = "int32", shape = (264,))#candidate|10767|(264,)|var|int32
const_10768 = relay.const([True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True], dtype = "bool")#candidate|10768|(715,)|const|bool
call_10765 = relay.TupleGetItem(func_7427_call(relay.reshape(const_10766.astype('int32'), [33,]), relay.reshape(var_10767.astype('int32'), [264,]), relay.reshape(const_10768.astype('bool'), [715,]), ), 3)
call_10769 = relay.TupleGetItem(func_7432_call(relay.reshape(const_10766.astype('int32'), [33,]), relay.reshape(var_10767.astype('int32'), [264,]), relay.reshape(const_10768.astype('bool'), [715,]), ), 3)
output = relay.Tuple([call_10755,call_10765,const_10766,var_10767,const_10768,])
output2 = relay.Tuple([call_10756,call_10769,const_10766,var_10767,const_10768,])
func_10775 = relay.Function([var_10767,], output)
mod['func_10775'] = func_10775
mod = relay.transform.InferType()(mod)
var_10776 = relay.var("var_10776", dtype = "int32", shape = (264,))#candidate|10776|(264,)|var|int32
output = func_10775(var_10776)
func_10777 = relay.Function([var_10776], output)
mutated_mod['func_10777'] = func_10777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4704_call = mod.get_global_var('func_4704')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_10787 = relay.TupleGetItem(func_4704_call(), 0)
call_10788 = relay.TupleGetItem(func_4705_call(), 0)
output = relay.Tuple([call_10787,])
output2 = relay.Tuple([call_10788,])
func_10812 = relay.Function([], output)
mod['func_10812'] = func_10812
mod = relay.transform.InferType()(mod)
output = func_10812()
func_10813 = relay.Function([], output)
mutated_mod['func_10813'] = func_10813
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10868 = relay.var("var_10868", dtype = "float32", shape = (10, 11, 9))#candidate|10868|(10, 11, 9)|var|float32
uop_10869 = relay.acos(var_10868.astype('float32')) # shape=(10, 11, 9)
output = uop_10869
output2 = uop_10869
func_10883 = relay.Function([var_10868,], output)
mod['func_10883'] = func_10883
mod = relay.transform.InferType()(mod)
var_10884 = relay.var("var_10884", dtype = "float32", shape = (10, 11, 9))#candidate|10884|(10, 11, 9)|var|float32
output = func_10883(var_10884)
func_10885 = relay.Function([var_10884], output)
mutated_mod['func_10885'] = func_10885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10980 = relay.var("var_10980", dtype = "float32", shape = (13, 1, 11))#candidate|10980|(13, 1, 11)|var|float32
uop_10981 = relay.atan(var_10980.astype('float32')) # shape=(13, 1, 11)
output = relay.Tuple([uop_10981,])
output2 = relay.Tuple([uop_10981,])
func_10990 = relay.Function([var_10980,], output)
mod['func_10990'] = func_10990
mod = relay.transform.InferType()(mod)
var_10991 = relay.var("var_10991", dtype = "float32", shape = (13, 1, 11))#candidate|10991|(13, 1, 11)|var|float32
output = func_10990(var_10991)
func_10992 = relay.Function([var_10991], output)
mutated_mod['func_10992'] = func_10992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_11023 = relay.TupleGetItem(func_3202_call(), 0)
call_11024 = relay.TupleGetItem(func_3204_call(), 0)
output = call_11023
output2 = call_11024
func_11030 = relay.Function([], output)
mod['func_11030'] = func_11030
mod = relay.transform.InferType()(mod)
output = func_11030()
func_11031 = relay.Function([], output)
mutated_mod['func_11031'] = func_11031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11040 = relay.var("var_11040", dtype = "uint32", shape = ())#candidate|11040|()|var|uint32
const_11041 = relay.const([[[-6,-9,-6,4,-4,2,1,-10],[7,-7,-2,3,-9,8,4,5],[1,-5,-2,3,-3,8,4,-8],[8,4,-2,-10,1,-3,6,-5],[2,3,2,-10,10,-1,-5,-3]]], dtype = "uint32")#candidate|11041|(1, 5, 8)|const|uint32
bop_11042 = relay.bitwise_xor(var_11040.astype('uint32'), const_11041.astype('uint32')) # shape=(1, 5, 8)
output = relay.Tuple([bop_11042,])
output2 = relay.Tuple([bop_11042,])
func_11048 = relay.Function([var_11040,], output)
mod['func_11048'] = func_11048
mod = relay.transform.InferType()(mod)
mutated_mod['func_11048'] = func_11048
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11049 = relay.var("var_11049", dtype = "uint32", shape = ())#candidate|11049|()|var|uint32
func_11048_call = mutated_mod.get_global_var('func_11048')
call_11050 = func_11048_call(var_11049)
output = call_11050
func_11051 = relay.Function([var_11049], output)
mutated_mod['func_11051'] = func_11051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5064_call = mod.get_global_var('func_5064')
func_5066_call = mutated_mod.get_global_var('func_5066')
call_11063 = relay.TupleGetItem(func_5064_call(), 0)
call_11064 = relay.TupleGetItem(func_5066_call(), 0)
output = call_11063
output2 = call_11064
func_11104 = relay.Function([], output)
mod['func_11104'] = func_11104
mod = relay.transform.InferType()(mod)
output = func_11104()
func_11105 = relay.Function([], output)
mutated_mod['func_11105'] = func_11105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5880_call = mod.get_global_var('func_5880')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_11109 = func_5880_call()
call_11110 = func_5880_call()
output = relay.Tuple([call_11109,])
output2 = relay.Tuple([call_11110,])
func_11117 = relay.Function([], output)
mod['func_11117'] = func_11117
mod = relay.transform.InferType()(mod)
mutated_mod['func_11117'] = func_11117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11117_call = mutated_mod.get_global_var('func_11117')
call_11118 = func_11117_call()
output = call_11118
func_11119 = relay.Function([], output)
mutated_mod['func_11119'] = func_11119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11126 = relay.var("var_11126", dtype = "float64", shape = (4, 5, 5))#candidate|11126|(4, 5, 5)|var|float64
uop_11127 = relay.cosh(var_11126.astype('float64')) # shape=(4, 5, 5)
const_11129 = relay.const([[[9.132824,-2.970295,-4.390763,-3.433939,1.161832],[4.923160,8.458485,8.376890,7.218356,0.318769],[0.091997,-7.055744,5.357818,5.031282,0.416790],[9.906605,3.288389,-2.298560,8.329201,-0.935385],[4.995084,-4.228943,-8.080574,-7.400178,-4.232473]],[[-7.872211,8.776808,-3.553721,7.933099,-3.102183],[3.582057,9.822594,1.949791,-6.873842,-2.740411],[-5.956780,-9.814503,-4.965302,-5.634402,6.120464],[1.030468,-0.697994,-7.598469,8.368361,-6.180511],[-6.237655,9.525063,-4.668201,6.788750,9.740990]],[[0.619507,8.628674,-7.684322,-4.515929,-8.524801],[-8.407075,-1.130421,3.112874,1.197966,-1.055181],[-8.210029,7.844071,-5.692203,4.655008,5.030088],[1.492740,-1.209432,-4.910435,2.334861,0.895658],[-0.889949,3.407945,-2.532643,2.805943,6.761558]],[[1.901412,-2.412014,5.568220,7.513799,-4.045100],[5.973145,3.875719,9.635936,0.926632,5.107689],[-5.876867,-7.914805,-0.073728,-2.862858,-3.627025],[7.667087,-9.991885,7.036327,-2.972280,-2.283902],[6.442869,-7.399702,4.336644,-4.244200,-2.966686]]], dtype = "float64")#candidate|11129|(4, 5, 5)|const|float64
bop_11130 = relay.floor_divide(var_11126.astype('float32'), relay.reshape(const_11129.astype('float32'), relay.shape_of(var_11126))) # shape=(4, 5, 5)
output = relay.Tuple([uop_11127,bop_11130,])
output2 = relay.Tuple([uop_11127,bop_11130,])
func_11136 = relay.Function([var_11126,], output)
mod['func_11136'] = func_11136
mod = relay.transform.InferType()(mod)
mutated_mod['func_11136'] = func_11136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11137 = relay.var("var_11137", dtype = "float64", shape = (4, 5, 5))#candidate|11137|(4, 5, 5)|var|float64
func_11136_call = mutated_mod.get_global_var('func_11136')
call_11138 = func_11136_call(var_11137)
output = call_11138
func_11139 = relay.Function([var_11137], output)
mutated_mod['func_11139'] = func_11139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_11188 = func_3352_call()
call_11189 = func_3352_call()
func_6270_call = mod.get_global_var('func_6270')
func_6275_call = mutated_mod.get_global_var('func_6275')
var_11193 = relay.var("var_11193", dtype = "float32", shape = (968,))#candidate|11193|(968,)|var|float32
call_11192 = relay.TupleGetItem(func_6270_call(relay.reshape(var_11193.astype('float32'), [11, 8, 11]), relay.reshape(var_11193.astype('float32'), [11, 8, 11]), relay.reshape(var_11193.astype('float32'), [11, 8, 11]), ), 0)
call_11194 = relay.TupleGetItem(func_6275_call(relay.reshape(var_11193.astype('float32'), [11, 8, 11]), relay.reshape(var_11193.astype('float32'), [11, 8, 11]), relay.reshape(var_11193.astype('float32'), [11, 8, 11]), ), 0)
func_5880_call = mod.get_global_var('func_5880')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_11202 = func_5880_call()
call_11203 = func_5880_call()
uop_11210 = relay.asinh(var_11193.astype('float64')) # shape=(968,)
func_10234_call = mod.get_global_var('func_10234')
func_10236_call = mutated_mod.get_global_var('func_10236')
const_11217 = relay.const([-0.903028,-4.220069,-1.579225,-3.856107,1.854334,-4.636996,7.444736,-9.537767,-7.293319,-5.326676,-5.968247,2.569613,1.639806,8.253242,0.590319,-2.552052,1.111150,6.664957,1.077454,-8.305352,0.179836,-4.314702,0.569763,-7.848691,-6.559561,-2.116236,-4.137192,7.118876,9.423846,-0.494536,4.954838,-3.001031,0.697504,9.416987,-7.298868,0.362336,-2.105969,-7.446082,-4.508693,-1.772776,5.155713,3.096289,-4.540016,-5.034188,-1.652774,-2.321133,2.941486,-1.381297,-5.704659,-7.360440,0.953154,-8.730672,9.989943,2.143068,2.457777,-1.230447,3.139778,-9.959177,-0.079612,3.828732,-1.793508,7.133128,9.930561,-3.207310,1.419119,-1.901938,7.260890,-7.464709,0.735252,-7.743129,9.885003,-3.524337,7.921898,-5.129091,1.070415,-7.102408,0.078462,4.233608,5.909643,-3.124800,-9.136190,-6.141407,-5.791959,-5.302401,-4.423169,-9.032230,1.809089,-2.394540,-9.831270,5.890584,7.027698,0.684088,3.505533,9.965492,-4.472140,2.555271,-3.123453,-7.350763,-6.463278,-3.745804,-2.318955,6.061641,9.588943,-3.482865,-1.594213,1.126297,9.252047,3.030550,-7.377735,5.960157,-7.119160,6.451647,-8.003319,7.754123,9.743026,-6.207649,3.777180,1.537905,2.033748,-0.943181,4.087781,9.375198,-2.208212,1.619128,7.884460,8.145045,7.360212,-6.181270,7.316709,1.980506,-2.827431,-0.844889,4.678125,-6.967876,0.046004,-1.458682,2.514220,1.827659,-2.200273,-9.721524,0.541661,-0.431343,-8.537819,3.057156,-0.931239,-7.612261,-4.701941,-9.142502,6.011478,-6.639360,4.552735,6.749250,9.905670,-8.246845,-1.481189,3.335939,6.618421,-9.515853,5.704145,4.436489,-7.229758,-7.949537,-1.159147,-0.845102,4.869671,-9.029844,-9.467228,3.487523,-1.362817,3.387020,-6.421948,-5.137100,-9.925898,-4.993532,-0.339252,-1.014931,9.565904,6.175465,2.068137,3.504989,4.789685,-8.867587,-7.614329,0.632254,9.520650,2.112721,9.854986,8.312417,-1.584142,7.410381,0.443435,-1.355467,-5.305427,-4.463098,8.131081,3.979418,7.025350,-9.654728,9.522766,-7.252229,4.672463,9.219004,-0.714881,-2.395265,-5.921244,9.514963,5.621195,-9.588360,-7.147471,-2.270477,3.575044,-4.184269,7.343301,-4.845214,-4.305190,8.884360,-6.095370,-4.876398,-7.366477,2.463824,5.071512,-0.313984,-0.104969,-3.337077,-0.724836,5.073617,-6.433191,-0.943537,-8.879729,9.267550,-2.475848,-1.459678,6.786857,5.201650,-1.224075,-8.308077,6.469500,-2.760267,6.497790,-2.186987,6.132838,6.947561,4.470136,3.516276,-8.531839,-3.109689,-1.638149,5.112677,-3.264480,5.175016,-8.752065,-5.066683,-3.834033,2.318723,9.564257,0.068379,7.045038,6.252742,6.457332,2.636104,9.149427,-4.563330,-4.572356,6.461553,-7.641641,7.901226,-7.125836,-3.217226,1.709656,-9.955766,-2.212597,9.976508,2.032933,-3.340028,-7.462281,-3.395251,-8.469965,0.930212,2.053935,6.967898,6.731638,-0.449162,-6.965920,-1.233098,-5.613500,-4.009259,4.598647,1.913291,-3.679099,6.853946,4.080695,-7.066668,-6.670929,-6.428400,-0.389215,5.812774,9.156560,8.225874,-6.664417,2.135408,7.855437,3.567058,0.298949,2.418993,2.595931,-5.937271,-2.562518,-1.256632,-7.469106,-8.280415,-4.850497,-5.887182,3.998613,8.003819,-7.382708,8.267901,-6.210475,-3.227158,2.658842,-0.670274,-6.272152,5.809314,8.206394,7.869868,-7.564028,9.466309,2.248735,-8.295778,2.464569,-6.564034,-6.282433,9.816086,3.816361,8.713474,8.780048,3.001009,-8.520540,1.741415,-5.886346,-1.001808,-4.135825,3.086045,6.606766,7.630132,8.132597,-9.724373,5.922200,-8.809223,7.459369,3.775501,8.166227,-4.711304,9.080969,-3.929172,-1.443637,-3.448912,-2.888905,-5.504922,-1.780418,-5.609426], dtype = "float64")#candidate|11217|(360,)|const|float64
call_11216 = relay.TupleGetItem(func_10234_call(relay.reshape(const_11217.astype('float64'), [1, 360])), 5)
call_11218 = relay.TupleGetItem(func_10236_call(relay.reshape(const_11217.astype('float64'), [1, 360])), 5)
func_11048_call = mod.get_global_var('func_11048')
func_11051_call = mutated_mod.get_global_var('func_11051')
const_11224 = relay.const(-3, dtype = "uint32")#candidate|11224|()|const|uint32
call_11223 = relay.TupleGetItem(func_11048_call(relay.reshape(const_11224.astype('uint32'), [])), 0)
call_11225 = relay.TupleGetItem(func_11051_call(relay.reshape(const_11224.astype('uint32'), [])), 0)
bop_11227 = relay.left_shift(uop_11210.astype('uint64'), const_11224.astype('uint64')) # shape=(968,)
uop_11232 = relay.asin(uop_11210.astype('float32')) # shape=(968,)
func_3465_call = mod.get_global_var('func_3465')
func_3466_call = mutated_mod.get_global_var('func_3466')
call_11245 = relay.TupleGetItem(func_3465_call(), 0)
call_11246 = relay.TupleGetItem(func_3466_call(), 0)
func_7664_call = mod.get_global_var('func_7664')
func_7665_call = mutated_mod.get_global_var('func_7665')
call_11247 = relay.TupleGetItem(func_7664_call(), 0)
call_11248 = relay.TupleGetItem(func_7665_call(), 0)
output = relay.Tuple([call_11188,call_11192,call_11202,call_11216,const_11217,call_11223,bop_11227,uop_11232,call_11245,call_11247,])
output2 = relay.Tuple([call_11189,call_11194,call_11203,call_11218,const_11217,call_11225,bop_11227,uop_11232,call_11246,call_11248,])
func_11255 = relay.Function([var_11193,], output)
mod['func_11255'] = func_11255
mod = relay.transform.InferType()(mod)
mutated_mod['func_11255'] = func_11255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11256 = relay.var("var_11256", dtype = "float32", shape = (968,))#candidate|11256|(968,)|var|float32
func_11255_call = mutated_mod.get_global_var('func_11255')
call_11257 = func_11255_call(var_11256)
output = call_11257
func_11258 = relay.Function([var_11256], output)
mutated_mod['func_11258'] = func_11258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3408_call = mod.get_global_var('func_3408')
func_3410_call = mutated_mod.get_global_var('func_3410')
call_11299 = relay.TupleGetItem(func_3408_call(), 0)
call_11300 = relay.TupleGetItem(func_3410_call(), 0)
func_2207_call = mod.get_global_var('func_2207')
func_2210_call = mutated_mod.get_global_var('func_2210')
var_11307 = relay.var("var_11307", dtype = "bool", shape = (2, 1056))#candidate|11307|(2, 1056)|var|bool
call_11306 = func_2207_call(relay.reshape(var_11307.astype('bool'), [12, 11, 16]))
call_11308 = func_2207_call(relay.reshape(var_11307.astype('bool'), [12, 11, 16]))
output = relay.Tuple([call_11299,call_11306,var_11307,])
output2 = relay.Tuple([call_11300,call_11308,var_11307,])
func_11312 = relay.Function([var_11307,], output)
mod['func_11312'] = func_11312
mod = relay.transform.InferType()(mod)
var_11313 = relay.var("var_11313", dtype = "bool", shape = (2, 1056))#candidate|11313|(2, 1056)|var|bool
output = func_11312(var_11313)
func_11314 = relay.Function([var_11313], output)
mutated_mod['func_11314'] = func_11314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3491_call = mod.get_global_var('func_3491')
func_3493_call = mutated_mod.get_global_var('func_3493')
call_11333 = relay.TupleGetItem(func_3491_call(), 1)
call_11334 = relay.TupleGetItem(func_3493_call(), 1)
var_11358 = relay.var("var_11358", dtype = "float64", shape = (16, 16, 6))#candidate|11358|(16, 16, 6)|var|float64
bop_11359 = relay.floor_mod(call_11333.astype('float64'), relay.reshape(var_11358.astype('float64'), relay.shape_of(call_11333))) # shape=(16, 16, 6)
bop_11362 = relay.floor_mod(call_11334.astype('float64'), relay.reshape(var_11358.astype('float64'), relay.shape_of(call_11334))) # shape=(16, 16, 6)
output = relay.Tuple([bop_11359,])
output2 = relay.Tuple([bop_11362,])
func_11376 = relay.Function([var_11358,], output)
mod['func_11376'] = func_11376
mod = relay.transform.InferType()(mod)
var_11377 = relay.var("var_11377", dtype = "float64", shape = (16, 16, 6))#candidate|11377|(16, 16, 6)|var|float64
output = func_11376(var_11377)
func_11378 = relay.Function([var_11377], output)
mutated_mod['func_11378'] = func_11378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_11391 = func_3643_call()
call_11392 = func_3643_call()
func_9846_call = mod.get_global_var('func_9846')
func_9848_call = mutated_mod.get_global_var('func_9848')
call_11404 = func_9846_call()
call_11405 = func_9846_call()
output = relay.Tuple([call_11391,call_11404,])
output2 = relay.Tuple([call_11392,call_11405,])
func_11410 = relay.Function([], output)
mod['func_11410'] = func_11410
mod = relay.transform.InferType()(mod)
mutated_mod['func_11410'] = func_11410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11410_call = mutated_mod.get_global_var('func_11410')
call_11411 = func_11410_call()
output = call_11411
func_11412 = relay.Function([], output)
mutated_mod['func_11412'] = func_11412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8049_call = mod.get_global_var('func_8049')
func_8051_call = mutated_mod.get_global_var('func_8051')
call_11413 = relay.TupleGetItem(func_8049_call(), 1)
call_11414 = relay.TupleGetItem(func_8051_call(), 1)
output = relay.Tuple([call_11413,])
output2 = relay.Tuple([call_11414,])
func_11417 = relay.Function([], output)
mod['func_11417'] = func_11417
mod = relay.transform.InferType()(mod)
output = func_11417()
func_11418 = relay.Function([], output)
mutated_mod['func_11418'] = func_11418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6910_call = mod.get_global_var('func_6910')
func_6912_call = mutated_mod.get_global_var('func_6912')
call_11483 = relay.TupleGetItem(func_6910_call(), 0)
call_11484 = relay.TupleGetItem(func_6912_call(), 0)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_11489 = relay.TupleGetItem(func_3667_call(), 1)
call_11490 = relay.TupleGetItem(func_3669_call(), 1)
func_1998_call = mod.get_global_var('func_1998')
func_2000_call = mutated_mod.get_global_var('func_2000')
call_11505 = func_1998_call(relay.reshape(call_11489.astype('float32'), [3, 8, 12]))
call_11506 = func_1998_call(relay.reshape(call_11489.astype('float32'), [3, 8, 12]))
func_8782_call = mod.get_global_var('func_8782')
func_8785_call = mutated_mod.get_global_var('func_8785')
call_11520 = func_8782_call(relay.reshape(call_11505.astype('float32'), [3, 8, 12]))
call_11521 = func_8782_call(relay.reshape(call_11505.astype('float32'), [3, 8, 12]))
func_11410_call = mod.get_global_var('func_11410')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_11553 = relay.TupleGetItem(func_11410_call(), 0)
call_11554 = relay.TupleGetItem(func_11412_call(), 0)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_11563 = relay.TupleGetItem(func_4879_call(), 0)
call_11564 = relay.TupleGetItem(func_4881_call(), 0)
func_7607_call = mod.get_global_var('func_7607')
func_7608_call = mutated_mod.get_global_var('func_7608')
call_11581 = relay.TupleGetItem(func_7607_call(), 3)
call_11582 = relay.TupleGetItem(func_7608_call(), 3)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
var_11602 = relay.var("var_11602", dtype = "bool", shape = (2112,))#candidate|11602|(2112,)|var|bool
call_11601 = relay.TupleGetItem(func_3754_call(relay.reshape(var_11602.astype('bool'), [528, 4])), 6)
call_11603 = relay.TupleGetItem(func_3756_call(relay.reshape(var_11602.astype('bool'), [528, 4])), 6)
output = relay.Tuple([call_11483,call_11489,call_11505,call_11520,call_11553,call_11563,call_11581,call_11601,var_11602,])
output2 = relay.Tuple([call_11484,call_11490,call_11506,call_11521,call_11554,call_11564,call_11582,call_11603,var_11602,])
func_11605 = relay.Function([var_11602,], output)
mod['func_11605'] = func_11605
mod = relay.transform.InferType()(mod)
mutated_mod['func_11605'] = func_11605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11606 = relay.var("var_11606", dtype = "bool", shape = (2112,))#candidate|11606|(2112,)|var|bool
func_11605_call = mutated_mod.get_global_var('func_11605')
call_11607 = func_11605_call(var_11606)
output = call_11607
func_11608 = relay.Function([var_11606], output)
mutated_mod['func_11608'] = func_11608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5313_call = mod.get_global_var('func_5313')
func_5315_call = mutated_mod.get_global_var('func_5315')
call_11671 = relay.TupleGetItem(func_5313_call(), 1)
call_11672 = relay.TupleGetItem(func_5315_call(), 1)
var_11674 = relay.var("var_11674", dtype = "float64", shape = (715,))#candidate|11674|(715,)|var|float64
bop_11675 = relay.bitwise_xor(call_11671.astype('uint64'), relay.reshape(var_11674.astype('uint64'), relay.shape_of(call_11671))) # shape=(715,)
bop_11678 = relay.bitwise_xor(call_11672.astype('uint64'), relay.reshape(var_11674.astype('uint64'), relay.shape_of(call_11672))) # shape=(715,)
output = relay.Tuple([bop_11675,])
output2 = relay.Tuple([bop_11678,])
func_11679 = relay.Function([var_11674,], output)
mod['func_11679'] = func_11679
mod = relay.transform.InferType()(mod)
mutated_mod['func_11679'] = func_11679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11680 = relay.var("var_11680", dtype = "float64", shape = (715,))#candidate|11680|(715,)|var|float64
func_11679_call = mutated_mod.get_global_var('func_11679')
call_11681 = func_11679_call(var_11680)
output = call_11681
func_11682 = relay.Function([var_11680], output)
mutated_mod['func_11682'] = func_11682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11701 = relay.var("var_11701", dtype = "float64", shape = ())#candidate|11701|()|var|float64
var_11702 = relay.var("var_11702", dtype = "float64", shape = (12, 3, 13))#candidate|11702|(12, 3, 13)|var|float64
bop_11703 = relay.power(var_11701.astype('float64'), var_11702.astype('float64')) # shape=(12, 3, 13)
bop_11706 = relay.mod(var_11701.astype('float64'), var_11702.astype('float64')) # shape=(12, 3, 13)
output = relay.Tuple([bop_11703,bop_11706,])
output2 = relay.Tuple([bop_11703,bop_11706,])
func_11709 = relay.Function([var_11701,var_11702,], output)
mod['func_11709'] = func_11709
mod = relay.transform.InferType()(mod)
mutated_mod['func_11709'] = func_11709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11709_call = mutated_mod.get_global_var('func_11709')
var_11711 = relay.var("var_11711", dtype = "float64", shape = ())#candidate|11711|()|var|float64
var_11712 = relay.var("var_11712", dtype = "float64", shape = (12, 3, 13))#candidate|11712|(12, 3, 13)|var|float64
call_11710 = func_11709_call(var_11711,var_11712,)
output = call_11710
func_11713 = relay.Function([var_11711,var_11712,], output)
mutated_mod['func_11713'] = func_11713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4030_call = mod.get_global_var('func_4030')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_11741 = relay.TupleGetItem(func_4030_call(), 1)
call_11742 = relay.TupleGetItem(func_4031_call(), 1)
func_5313_call = mod.get_global_var('func_5313')
func_5315_call = mutated_mod.get_global_var('func_5315')
call_11763 = relay.TupleGetItem(func_5313_call(), 2)
call_11764 = relay.TupleGetItem(func_5315_call(), 2)
output = relay.Tuple([call_11741,call_11763,])
output2 = relay.Tuple([call_11742,call_11764,])
func_11766 = relay.Function([], output)
mod['func_11766'] = func_11766
mod = relay.transform.InferType()(mod)
output = func_11766()
func_11767 = relay.Function([], output)
mutated_mod['func_11767'] = func_11767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3144_call = mod.get_global_var('func_3144')
func_3145_call = mutated_mod.get_global_var('func_3145')
call_11795 = relay.TupleGetItem(func_3144_call(), 1)
call_11796 = relay.TupleGetItem(func_3145_call(), 1)
output = call_11795
output2 = call_11796
func_11815 = relay.Function([], output)
mod['func_11815'] = func_11815
mod = relay.transform.InferType()(mod)
mutated_mod['func_11815'] = func_11815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11815_call = mutated_mod.get_global_var('func_11815')
call_11816 = func_11815_call()
output = call_11816
func_11817 = relay.Function([], output)
mutated_mod['func_11817'] = func_11817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_11867 = relay.TupleGetItem(func_3667_call(), 0)
call_11868 = relay.TupleGetItem(func_3669_call(), 0)
output = relay.Tuple([call_11867,])
output2 = relay.Tuple([call_11868,])
func_11869 = relay.Function([], output)
mod['func_11869'] = func_11869
mod = relay.transform.InferType()(mod)
mutated_mod['func_11869'] = func_11869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11869_call = mutated_mod.get_global_var('func_11869')
call_11870 = func_11869_call()
output = call_11870
func_11871 = relay.Function([], output)
mutated_mod['func_11871'] = func_11871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3954_call = mod.get_global_var('func_3954')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_11874 = relay.TupleGetItem(func_3954_call(), 0)
call_11875 = relay.TupleGetItem(func_3956_call(), 0)
func_5064_call = mod.get_global_var('func_5064')
func_5066_call = mutated_mod.get_global_var('func_5066')
call_11885 = relay.TupleGetItem(func_5064_call(), 0)
call_11886 = relay.TupleGetItem(func_5066_call(), 0)
output = relay.Tuple([call_11874,call_11885,])
output2 = relay.Tuple([call_11875,call_11886,])
func_11942 = relay.Function([], output)
mod['func_11942'] = func_11942
mod = relay.transform.InferType()(mod)
output = func_11942()
func_11943 = relay.Function([], output)
mutated_mod['func_11943'] = func_11943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_11962 = relay.TupleGetItem(func_6049_call(), 0)
call_11963 = relay.TupleGetItem(func_6050_call(), 0)
output = call_11962
output2 = call_11963
func_11970 = relay.Function([], output)
mod['func_11970'] = func_11970
mod = relay.transform.InferType()(mod)
mutated_mod['func_11970'] = func_11970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11970_call = mutated_mod.get_global_var('func_11970')
call_11971 = func_11970_call()
output = call_11971
func_11972 = relay.Function([], output)
mutated_mod['func_11972'] = func_11972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5880_call = mod.get_global_var('func_5880')
func_5882_call = mutated_mod.get_global_var('func_5882')
call_11993 = func_5880_call()
call_11994 = func_5880_call()
var_11999 = relay.var("var_11999", dtype = "float64", shape = (16, 16, 6))#candidate|11999|(16, 16, 6)|var|float64
bop_12000 = relay.maximum(call_11993.astype('int32'), relay.reshape(var_11999.astype('int32'), relay.shape_of(call_11993))) # shape=(16, 16, 6)
bop_12003 = relay.maximum(call_11994.astype('int32'), relay.reshape(var_11999.astype('int32'), relay.shape_of(call_11994))) # shape=(16, 16, 6)
func_10271_call = mod.get_global_var('func_10271')
func_10273_call = mutated_mod.get_global_var('func_10273')
call_12007 = relay.TupleGetItem(func_10271_call(), 0)
call_12008 = relay.TupleGetItem(func_10273_call(), 0)
func_4067_call = mod.get_global_var('func_4067')
func_4069_call = mutated_mod.get_global_var('func_4069')
call_12015 = relay.TupleGetItem(func_4067_call(), 0)
call_12016 = relay.TupleGetItem(func_4069_call(), 0)
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_12022 = func_3352_call()
call_12023 = func_3352_call()
func_5376_call = mod.get_global_var('func_5376')
func_5377_call = mutated_mod.get_global_var('func_5377')
call_12026 = func_5376_call()
call_12027 = func_5376_call()
output = relay.Tuple([bop_12000,call_12007,call_12015,call_12022,call_12026,])
output2 = relay.Tuple([bop_12003,call_12008,call_12016,call_12023,call_12027,])
func_12034 = relay.Function([var_11999,], output)
mod['func_12034'] = func_12034
mod = relay.transform.InferType()(mod)
mutated_mod['func_12034'] = func_12034
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12035 = relay.var("var_12035", dtype = "float64", shape = (16, 16, 6))#candidate|12035|(16, 16, 6)|var|float64
func_12034_call = mutated_mod.get_global_var('func_12034')
call_12036 = func_12034_call(var_12035)
output = call_12036
func_12037 = relay.Function([var_12035], output)
mutated_mod['func_12037'] = func_12037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_12094 = func_2652_call()
call_12095 = func_2652_call()
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_12111 = relay.TupleGetItem(func_2981_call(), 0)
call_12112 = relay.TupleGetItem(func_2983_call(), 0)
output = relay.Tuple([call_12094,call_12111,])
output2 = relay.Tuple([call_12095,call_12112,])
func_12167 = relay.Function([], output)
mod['func_12167'] = func_12167
mod = relay.transform.InferType()(mod)
mutated_mod['func_12167'] = func_12167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12167_call = mutated_mod.get_global_var('func_12167')
call_12168 = func_12167_call()
output = call_12168
func_12169 = relay.Function([], output)
mutated_mod['func_12169'] = func_12169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4704_call = mod.get_global_var('func_4704')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_12205 = relay.TupleGetItem(func_4704_call(), 0)
call_12206 = relay.TupleGetItem(func_4705_call(), 0)
func_4030_call = mod.get_global_var('func_4030')
func_4031_call = mutated_mod.get_global_var('func_4031')
call_12214 = relay.TupleGetItem(func_4030_call(), 3)
call_12215 = relay.TupleGetItem(func_4031_call(), 3)
output = relay.Tuple([call_12205,call_12214,])
output2 = relay.Tuple([call_12206,call_12215,])
func_12216 = relay.Function([], output)
mod['func_12216'] = func_12216
mod = relay.transform.InferType()(mod)
output = func_12216()
func_12217 = relay.Function([], output)
mutated_mod['func_12217'] = func_12217
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12218 = relay.const(-10, dtype = "uint16")#candidate|12218|()|const|uint16
var_12219 = relay.var("var_12219", dtype = "uint16", shape = (16, 7, 14))#candidate|12219|(16, 7, 14)|var|uint16
bop_12220 = relay.subtract(const_12218.astype('uint16'), var_12219.astype('uint16')) # shape=(16, 7, 14)
func_4531_call = mod.get_global_var('func_4531')
func_4535_call = mutated_mod.get_global_var('func_4535')
const_12230 = relay.const([8.130494,-6.610673,2.296516,-2.303831,-6.449293,-0.481641,-2.047543,-9.835491,-9.838741,-3.106168,-5.316998,-5.217749,5.235894,6.810882,2.589217,-8.467536,-6.950978,6.363330,-1.426302,-4.566290,2.176895,-4.793161,5.817011,-2.048336,9.925785,-2.884348,3.291315,-1.467526,-9.381627,0.155735,7.055777,-9.863270,1.484820,-7.433797,3.365101,-4.749338,3.797153,3.434391,-7.211633,-9.234196,-4.206221,3.544862,-2.342718,-9.857752,-3.316285,-8.142874,-0.334538,4.594986,-8.264446,3.161568,-7.626907,-0.473475,-1.538425,-7.966856,-5.963137,0.025941,6.029847,-3.387218,-6.451971,-3.368235,0.223950,7.329087,-7.059856,9.470469,-8.082705,-7.989655,-8.868989,-5.114182,-8.825350,8.756951,-1.290474,-0.611144,-0.570164,8.618232,1.680884,7.706892,-9.572468,-9.961586,1.978931,-8.272962,8.246619,-2.496297,6.569788,-4.653249,0.441602,-2.348996,-4.547804,4.804571,-0.694869,-2.683085,-4.732718,-5.931030,-6.816650,6.594652,-0.096633,4.804941,5.500851,9.388930,-1.079873,-2.795930,-2.404278,7.253150,5.640178,7.709155,4.883298,-2.916236,7.492478,2.133412,5.122621,7.822520,-3.261980,8.484809,-8.746903,-6.292685,1.894518,-4.231496,-5.339549,-7.737946,-3.113451,6.079912,4.755418,9.332680,-0.938118,-8.366115,-5.818112,5.706410,-0.946299,-5.124604,9.061566,-8.469617,2.600540,-6.548508,-1.811429,-1.618665,-9.022500,4.811731,9.544459,-1.503844,7.508502,5.949233,-0.052138,-9.307778,-7.166527,3.625218,2.420651,-7.704534,-5.843555,-9.775961,1.256927,2.830172,-2.766190,-3.372321,-7.134751,2.698711,0.094859,2.474890,0.307478,8.305851,-7.436925,-0.351215,-5.409927,-5.356799,4.793858,2.361112,5.041514,6.952628,5.565737,0.053378,-4.378351,4.191753,-6.034344,-1.489639,-5.309980,4.622443,-4.878628,6.388449,-4.025536,-8.492047,-4.820618,-9.014560,-0.191868,-2.939763,1.691623,3.559232,-5.618063,-9.739074,9.175629,7.433085,-5.401674,-0.382122,-9.060035,9.453330,-3.324326,-6.693141,2.585344,-7.936547,-7.033822,-5.587050,7.045609,-2.525334,-6.184148,-2.467614,4.687088,-5.306637,-7.088760,-7.041524,-1.348280,7.064914,8.976182,4.950144,-7.340921,8.384602,-4.329188,5.470386,7.465207,-2.782675,-0.555819,-6.035705,-5.549813,5.775700,1.720220,4.475580,8.062408,-2.948879,-9.302277,1.292049,-8.377062,-0.363915,-4.573738,-8.062009,8.355439,-4.296716,6.960208,5.020257,8.942242,-5.346458,-2.690771,-1.204082,-2.784398,9.047246,-9.504117,3.310858,3.094099,-5.624677,0.367766,9.846985,4.297654,-2.376831,-1.611701,-9.664397,-1.250078,3.725464,-6.395254,-7.544604,-1.492524,7.231888,4.004520,3.382294,-3.644192,-8.105750,-6.267941,-3.290311,3.159483,-6.329670,-5.159036,9.317877,2.013135,-3.288912,-8.631965,-4.638028,-0.417949,-7.059671,0.672012,-7.778306,7.735181,7.574267,-5.734319,5.968097,2.604786,-6.185363,-3.177687,-8.063463,-6.345315,8.997144,-2.208543,8.649405,9.182731,-0.070087,-1.039348,8.329715,2.865206,1.812148,-1.905668,-0.581803,1.233150,-1.191044,-9.757476,9.441696,1.526747,-3.544185,9.133687,-0.903285,8.698033,3.636764,9.746866,2.308703,7.351007,-0.352977,6.469965,6.398479,9.014922,-5.578860,1.717130,-3.976322,-7.685044,-0.303340,8.139659,-4.469366,7.297145,-5.776304,-6.525625,2.087543,-1.575782,-7.641550,-1.268095,-5.184578,1.498527,-6.933863,9.095754,7.162989,4.160022,4.526494,-8.669899,9.255529,9.355036,-5.712573,2.253215,9.495536,6.013762,0.752665,-0.084689,-5.090312,-8.757704,-9.343857,8.203822,6.325121,0.909938,6.475712,-9.533413,2.925456,-5.388742,-3.937649,3.237169,-3.789297,3.380425,4.182958,0.250169,2.465244,-1.455561,2.705787,5.244029,-1.824728,1.746616,-1.121252,-9.436709,8.364648,1.523506,-2.646511,-2.572617,8.025334,-1.888129,2.938814,-5.879694,4.729516,-6.190970,7.354372,2.178484,-0.929862,7.041621,-6.072793,-9.867345,7.143785,5.988520,-8.956884,-0.053648,4.545736,-1.610878,-7.191679,6.843393,5.038900,1.440342,5.679733,-4.792699,1.334519,-6.430047,9.796354,-0.383333,-3.134344,-6.625772,3.774042,3.686629,4.686463,7.415294,-1.577274,1.164500,-4.409516,-9.413612,7.093686,6.029200,9.432094,8.457608,-5.062189,2.680761,3.960536,1.483954,-9.523461,-9.738675,1.822433,4.543624,-6.795212,4.409398,3.356127,1.150576,1.489825,-2.233478,-6.964248,1.212429,4.568219,-2.680837,6.887167,7.004747,-4.263314,4.290242,1.325746,1.997619,-8.790777,-1.941284,2.746558,-7.953639,-1.914869,4.249111,-8.115706,6.917307,2.112877,0.847548,2.707744,-9.469725,-4.333646,0.642259,-3.407420,4.178733,-3.631557,9.770691,5.251697,-5.394262,-3.030477,5.770754,-5.061148,-9.321167,-3.578584,-5.997909,-2.625281,6.438741,1.269762,-0.078002,3.607149,-8.609724,9.780169,4.758714,5.920949,-0.671217,3.479838,1.602148,-4.991184,6.119347,3.865246,-0.566317,-5.552461,-4.044572,3.282607,-4.901988,-5.871508,-9.772779,-4.795044,3.414569,6.979997,0.555861,4.313553,-7.612793,-2.730567,-5.779525,-4.659727,9.604873,-3.408414,-0.604889,-1.345145,-2.660193,8.745455,-4.292081,1.465116,2.396776,1.598643,3.518993,6.567861,-3.224266,-2.093565,6.040090,7.185034,6.770149,-1.758526,6.751150,-5.680479,-9.358905,-1.903735,1.977442,-5.723614,-3.103238,2.427307,-9.048480,-8.859594,-2.833488,3.490896,6.053925,-0.631689,-8.129803,-1.631029,2.483068,6.371343,-7.138102,-4.212517,9.442258,-6.317158,-2.101702,-8.592370,1.044224,7.227512,2.061735,7.887918,-7.653600,6.748941,0.159131,-7.405039,6.275558,-2.968435,-2.142338,0.554343,3.075705,8.139097,-3.179475,-3.141874,-1.698659,7.677275,-5.394462,-1.461242,9.270264,5.101815,5.805898,5.788697,4.507264,-3.065767,3.766024,-2.805689,-1.491096,-1.978853,7.371328,-3.075892,6.602754,2.665396,-7.387788,-7.266594,1.220838,-2.896247,7.824207,3.167451,8.488126,-5.795111,-1.176328,6.505632,3.320573,0.079742,-2.533469,-9.007889,1.413529,2.415093,-9.002038,8.634826,1.958900,-2.570004,-7.906946,-6.523784,-5.383602,-0.526086,1.600170,1.730811,2.711125,4.051881,-9.968983,4.544425,1.971700,5.110764,-3.211161,6.982200,1.884140,4.538760,-9.697971,6.833964,-8.419240,0.760928,-5.338072,-8.490152,0.651012,0.202827,-5.798446,9.614619,-1.547697,7.627716,-0.352971,-7.390179,-8.084797,7.789454,4.372272,0.957613,-7.467752,0.190072,9.856149,-5.061428,0.183081,-1.934452,5.131557,5.034614,9.078579,-2.438378,-7.902371,3.949016,-3.816068,0.613267,4.314566,-9.711387,5.318505,-5.130109,0.745003,0.939391,7.203015,-3.323845,1.228567,-2.063255,-3.169772,-8.570491,9.099549,-1.905700,-8.201654,-0.498747,-4.847019,0.814892,-8.153631,5.691482,5.040433,2.436459,-3.886583,8.180291,7.121689,-0.040679,-9.507025,-7.105785,-1.338982,-9.287070,-7.409499,2.366635,8.704543,-6.149658,-5.875597,5.156419,-9.115386,-4.301580,0.363153,9.705548,1.769727,-2.118562,-7.968180,-9.754185,8.258787,-2.788386,8.471298,8.090873,-7.298285,-9.049719,4.257623,-9.541504,-9.015398,-9.247921,-6.751833,7.407915,-1.126963,-7.886230,-2.339855,0.502630,1.782937,-0.541955,4.135481,3.821528,9.910652,3.328679,8.619754,2.979785,-6.747432,8.885030,3.088874,8.198878,2.285305,-8.088555,-8.232900,5.114321,4.100496,-4.782687,1.999614,7.590386,9.329038,2.020314,-8.755932,4.678575,0.864074,-0.945997,1.195369,-7.207649,1.330625,-4.443115,-9.750018,8.142604,9.927467,8.080826,5.105738,-3.887375,1.330819,3.690817,-6.010739,-0.345442,-6.976963,-5.583941,-2.164728,-3.785921,5.617875,4.654136,-6.791937,-1.411854,-0.029380,8.670303,-2.570013,6.684618,2.449944,8.269083,2.280299,0.875893,-2.173675,9.393410,-3.236174,-2.728527,-4.185198,-8.113265,-3.739161,7.464916,-7.276029,-1.592451,-0.632668,-0.056409,3.218439,8.796436,2.713852,-6.095435,-1.241548,4.320522,6.867849,-2.791553,9.564660,-0.376217,7.148975,5.219012,-5.389662,-8.816266,8.803110,9.586187,1.538485,1.254682,8.606482,-0.678504,2.728090,8.594959,-0.293953,-0.802607,-2.618932,9.758270,-9.142639,5.108271,9.322468,3.233443,-5.798488,3.162266,9.140357,-2.241264,-6.936802,-4.923579,-2.277728,-7.464362,-2.346487,7.291460,5.390947,-7.402491,2.777251,5.747638,-7.540189,5.112806,2.283642,-1.451134,7.261652,9.575877,1.274309,2.410764,8.220983,-1.180475,-9.805350,-9.611108,4.356661,-5.030187,-4.893734,3.183347,-0.865244,4.228169,2.149676,4.351810,5.771184,-3.191379,-6.921651,-9.747785,0.234633,8.832880,-0.870544,3.314974,6.532572,-0.560173,1.929658,-9.485056,-6.312936,7.282497,9.047806,-9.280800,-5.996190,5.230108,-5.389341,-2.839253,0.205422,-2.221553,-2.381412,2.427318,0.104463,1.229452,3.209420,-1.546830,-9.844120,8.852039,-2.680093,-6.034676,-4.788198,-0.130684,6.889803,-5.479137,-5.306916,1.111726,-9.482794,-2.505617,-6.388732,8.683042,7.290792,-2.939063,9.709482,9.951593,7.442603,-4.131240,-8.336000,8.552642,-4.802173,-3.430843,-1.231798,5.504864,-7.441521,-8.936922,2.033793,-5.460000,1.078452,-2.155018,-3.187554,0.185415,4.408158,2.410612,-2.086589,-1.230702,-6.025298,1.920293,-7.980891,9.745231,9.728142,0.927098,8.922222,9.708250,-8.514445,-0.578261,-0.391241,9.456054,8.488561,9.872377,6.748069,-2.721998,-0.741096,-4.789309,-4.403101,7.519036,6.185496,7.756846,-2.133222,0.854703,-9.963305,3.133870,4.088509,2.084812,4.723442,-9.152871,-9.257353,-6.660264,7.302635,2.830265,-3.888418,8.979133,5.509780,5.374467,3.841272,2.252385,-8.607184,-3.216797,0.444178,-7.489107,-3.822873,0.737356,-2.468990,3.115687,-7.995022,4.663330,1.353614,-2.177081,9.401395,-9.250233,-0.396705,0.722907,-0.255268,6.649420,6.012629,-2.026982,-6.176560,-2.339211,6.364922,-6.077490,-4.490732,1.015241,-5.993725,-2.041537,4.482678,4.031986,-5.285609,-2.602691,-2.511590,-1.310316,5.260857,-8.839341,-3.895803,-4.949117,-0.672819,1.099166,7.740547,5.742491,-4.338557,8.719364,-3.791696,-1.268388,1.528841,-6.281247,-9.128618,2.514672,6.232049,0.786109,-3.240476,-4.696023,6.662915,6.707973,-8.436688,-5.021356,8.987886,-2.865584,-6.812503,-9.931575,5.733647,-0.562402,-0.683713,6.058826,3.971316,2.848045,7.960266,-7.052931,-3.068798,4.312834,-7.626604,7.826300,3.700423,-6.911302,-3.286135,-2.768761,3.392989,2.939185,-0.246392,0.153532,-7.955280,-0.761277,-7.814293,-3.993199,-3.981537,1.526358,5.514324,-8.196241,-6.896361,3.734769,-5.260482,-1.575362,-9.524692,8.022889,0.391946,-6.109309,4.820494,5.843414,8.589210,-1.808140,2.899111,6.809881,1.978549,3.030928,-4.713450,-1.897074,-8.045433,-9.344201,7.128066,-9.880688,-6.535460,-0.714585,0.755541,-2.536058,6.829282,-3.679209,-6.050636,5.394289,-8.145058,-7.341469,1.074130,3.427558,5.753040,-9.422542,4.376636,7.651586,4.485894,8.936346,7.933371,-6.509042,4.645167,7.111928,-8.587083,7.469277,-0.487241,9.749517,-5.080204,0.685727,-9.274276,-9.219572,-0.756798,2.312956,7.140588,-9.457312,-4.930653,9.297282,-8.996501,-9.485782,-5.400671,1.271302,5.879330,-7.429353,3.359589,1.850981,-2.061929,8.797466,-9.151922,-0.593727,7.796195,-2.091661,8.842681,1.610888,1.357454,-9.347780,9.237965,-2.497514,-0.451329,5.643886,-6.067264,3.199136,-0.439571,-2.700006,-3.099525,9.558163,2.595246,9.817701,1.572579,-0.093865,-9.635382,-9.516262,-3.632847,-8.658861,-7.207350,-9.930335,5.272078,1.103062,-3.917862,-9.073970,-5.765735,4.362877,9.890374,3.889399,6.935623,8.945856,-7.864474,-3.637145,-2.991112,-6.884029,-6.405083,-6.625567,-5.244502,3.003802,0.961970,8.241397,3.556021,4.528564,-8.055447,-1.181063,7.174221,9.878474,1.237229,-4.190330,5.067100,-4.094851,-8.696174,8.925217,-8.645132,6.904910,-6.055598,-3.154150,9.243980,-1.744377,-1.242692,-8.746069,6.468280,3.484865,9.579699,-4.436786,-6.722439,-7.821337,7.862660,-8.973946,-6.735466,3.562331,-9.914298,0.784729,-0.335054,7.441190,-6.211941,-0.203813,-4.781317,-0.903442,6.209661,-6.025787,-1.987763,-2.849076,-2.199546,7.391639,3.126320,2.430243,-0.552177,7.096005,-2.046552,6.552568,-0.772835,-1.320875,-8.278629,-9.927901,-9.452944,4.127375,6.548445,-3.234126,-3.065814,0.095667,7.689183,-6.586355,8.642027,-1.778611,-0.169525,-4.039557,8.077488,6.685685,6.822034,0.321811,-4.698709,-4.756276,0.980225,6.907344,9.760483,6.778511,8.768821,-9.816549,3.437028,5.067663,7.708802,0.695350,-0.601562,-4.704563,-9.803033,2.482581,-6.389376,1.572843,2.873726,-9.039979,9.939249,9.752021,9.999863,8.398289,-4.179252,-6.879802,-6.397951,-7.414208,1.969747,-1.535080,-1.777740,-1.358354,-9.316262,-8.728676,8.892699,-9.638730,-4.009285,5.849398,2.581779,5.576721,0.552881,8.319948,6.645368,0.766594,-8.801468,-3.057756,1.205400,-8.981800,-2.269571,0.137309,6.005274,-4.257613,1.175103,2.460422,-6.637678,-6.415828,-7.770657,3.051082,2.635743,-4.803286,2.221294,6.254840,-3.688341,-8.564324,-0.414267,-8.069022,4.360898,-7.972060,-3.744934,1.146657,-1.214848,8.875538,-6.517083,-2.914487,9.928341,4.756345,5.684817,0.567126,-4.777755,8.934820,-4.152529,-8.331032,-7.076658,-3.572213,-7.664816,-4.397906,-1.040132,-0.275117,-6.524305,-3.998348,2.583018,-9.837661,-8.481979,-5.367773,8.786560,-4.942660,7.708675,8.267718,8.218837,0.696520,-4.088954,-5.897596,5.711378,1.369093,1.866186,6.011765,9.423543,3.006833,2.613707,8.114461,9.967185,-9.061110,-2.788424,7.246065,-0.627856,-1.370197,-5.853597,4.883093,4.738552,9.502642,-9.838966,5.509585,4.696946,-2.709654,2.022280,6.899995,1.625472,1.201402,-5.330176,2.420937,8.841179,9.818961,-0.887860,7.720652,9.432276,-1.360790,6.302271,9.994357,-7.042379,-9.890793,2.938898,9.450145,5.918964,0.596792,6.921831,-5.147766,-8.822353,-3.137471,-5.387423,-1.144915,-4.892656,-9.881249,-6.790272,-8.518430,1.155842,-6.895534,4.365395,6.787910,0.689500,-9.601226,7.715872,3.310412,-8.507187,-8.566233,-4.300454,-9.225276,3.681153,-6.252080,-5.078991,-1.908818,5.259876,5.082226,-5.909974,-0.219259,9.898330,-5.828428,8.452015,-5.623371,4.333811,3.245173,5.152879,9.209135,-4.873434,-6.435564,-1.508501,-8.396570,-4.487370,-8.045594,-0.667529,-5.009635,4.617371,-6.612717,-2.588493,-0.742409,8.726143,4.487118,7.917082,9.767957,9.479592,8.299480,-7.314459,6.046348,0.363073,-9.639319,-4.081070,4.414907,7.526134,9.753968,-8.937141,-7.108002,6.980884,-4.816873,-9.970943,-6.779173,4.510387,3.593820,6.234901,-3.459041,9.609154,-9.501331,0.436198,0.923092,3.744056,6.250387,9.962028,9.679706,5.343912,6.770932,3.525028,6.853187,1.791754,-3.491399,-8.541051,9.857338,1.705904,1.792084,0.541874,-8.454885,5.714136,-3.269272,0.430077,1.541654,6.799068,-0.630120,-5.148125,-5.655518,-5.342476,-6.153006,9.355426,-9.284540,5.136625,-9.835664,2.971797,0.914105,-3.244429,6.251216,2.126477,-8.557137,4.474865,8.153499,8.443339,-0.295969,2.227970,-1.136672,-6.656033,4.600474,-2.303964,5.494376,-9.695079,2.835766,-3.189453,-4.759328,7.608884,7.674057,2.747313,2.485095,-2.982479,1.276143,-7.147199,-6.502544,-2.298016,5.828645,0.319993,-0.818011,3.735766,-2.266912,-1.917403,-4.230877,-8.232783,7.734200,-4.783957,-1.791087,-8.377052,-0.742225,4.736136,4.051793,1.138665,-3.962354,6.966801,-1.160537,-3.419658,6.415710,-2.308363,7.699976,5.644013,-2.619800,0.849067,-6.295989,-5.226043,-4.719167,1.661321,-0.642011,-6.653022,-2.869152,2.777688,6.364265,4.293258,4.500985,-9.740902,-9.593425,0.019689,0.644166,3.961549,-4.808649,8.551629,6.683438], dtype = "float64")#candidate|12230|(1536,)|const|float64
var_12231 = relay.var("var_12231", dtype = "float64", shape = (336,))#candidate|12231|(336,)|var|float64
const_12232 = relay.const([-4,3,6,-1,-10,-10,3,-3,-9,-4,-7,-3,1,-6,-5,-10,-4,1,8,1,-2,9,4,8,4,10,-6,-2,6,-9,1,-8,-10], dtype = "int32")#candidate|12232|(33,)|const|int32
call_12229 = relay.TupleGetItem(func_4531_call(relay.reshape(const_12230.astype('float64'), [16, 16, 6]), relay.reshape(var_12231.astype('float64'), [336,]), relay.reshape(const_12232.astype('int32'), [1, 33]), ), 2)
call_12233 = relay.TupleGetItem(func_4535_call(relay.reshape(const_12230.astype('float64'), [16, 16, 6]), relay.reshape(var_12231.astype('float64'), [336,]), relay.reshape(const_12232.astype('int32'), [1, 33]), ), 2)
func_9103_call = mod.get_global_var('func_9103')
func_9105_call = mutated_mod.get_global_var('func_9105')
call_12245 = relay.TupleGetItem(func_9103_call(), 0)
call_12246 = relay.TupleGetItem(func_9105_call(), 0)
func_5313_call = mod.get_global_var('func_5313')
func_5315_call = mutated_mod.get_global_var('func_5315')
call_12250 = relay.TupleGetItem(func_5313_call(), 1)
call_12251 = relay.TupleGetItem(func_5315_call(), 1)
const_12266 = relay.const([[[-9,7,5,-10,8,10,-9,-10,10,1,8,-7,4,9],[9,1,6,5,1,10,7,-9,4,3,9,7,-3,2],[2,-9,5,-10,-8,-2,-10,8,2,-4,-7,2,1,5],[2,3,7,6,4,2,-8,-10,-7,-8,6,-5,8,-10],[5,-7,1,2,4,1,-3,-7,-7,1,-5,-1,2,-7],[3,1,1,6,8,1,7,9,4,1,4,3,3,-4],[10,-7,-7,1,-6,1,7,7,3,-4,-3,8,6,-9]],[[-5,-8,-4,-8,-3,10,-7,7,-2,-10,2,4,6,7],[3,-5,-8,-3,-7,-3,1,-4,-4,-6,7,5,-7,-7],[1,9,9,-2,6,-9,-10,5,-8,2,10,-10,2,-6],[-6,-4,-6,-1,-6,2,-2,-4,5,-6,8,5,-5,-5],[-4,-8,4,7,6,7,-3,-3,-3,-9,-6,-1,2,2],[-5,-6,8,7,-7,-3,4,-4,-2,4,-6,2,-6,8],[-1,5,9,-4,5,-10,10,7,5,9,-10,1,-5,-10]],[[9,1,10,7,9,-8,-7,-9,4,-8,-1,8,-1,-9],[-3,-9,9,-4,8,-10,-5,3,9,-8,10,-3,7,2],[10,4,10,-6,5,-10,3,10,-10,-9,-7,-1,-5,9],[4,9,5,-7,-1,6,5,9,-5,6,-3,4,4,-10],[10,10,-3,7,-6,-2,9,1,3,-4,10,-4,6,7],[-1,-8,6,-4,1,-4,-8,-2,-6,3,-4,8,8,10],[-9,-4,2,3,2,-5,-1,-9,-9,5,5,-5,-8,6]],[[-8,-10,1,-7,-5,-1,10,-9,-6,7,9,-1,4,7],[10,6,8,-4,9,2,-4,1,8,2,-8,9,2,4],[-7,-8,4,4,-9,3,-2,1,9,-9,-10,2,1,-7],[-3,-1,-4,7,2,-2,-2,8,-1,1,1,-8,4,-10],[5,-9,10,9,10,2,9,-4,10,-8,-1,2,10,2],[1,-8,9,5,9,3,-9,-1,2,3,7,4,8,-1],[-5,-2,-5,3,8,-5,-1,6,5,2,5,9,5,-4]],[[-9,-1,8,-3,4,8,3,8,-2,-7,6,-6,3,4],[9,10,3,-2,-7,-3,-10,-4,6,8,8,7,-5,4],[-8,-5,-8,-5,-8,-1,2,9,-7,-7,-5,-3,2,-7],[-2,-4,-1,7,6,2,1,-3,9,4,-3,9,6,10],[-1,-5,-8,-3,-10,8,-6,-1,4,-7,6,-9,2,8],[1,6,-3,-4,1,-9,2,6,8,3,9,-6,-1,5],[-4,-1,-9,6,-7,-4,-10,9,2,9,1,5,4,-7]],[[6,-10,3,5,10,7,-2,6,-5,5,10,-1,-10,3],[8,10,-1,2,4,7,9,-1,-4,2,-4,9,2,3],[6,5,7,8,8,2,-9,5,-5,-8,5,-10,-8,-3],[1,-2,3,3,-5,-5,-2,6,-10,-1,9,-3,9,5],[4,-10,3,4,-1,5,-9,-10,1,-4,9,5,-5,6],[4,3,-9,-3,-5,10,5,2,10,-4,-10,-2,-2,-10],[-7,-10,8,-9,6,-1,10,-7,-9,-6,2,9,-8,2]],[[-8,-8,-9,-6,-4,3,-8,1,6,-2,6,3,9,2],[3,-7,8,-5,-6,5,-7,-9,3,-2,5,-5,3,-1],[-9,10,-6,-2,4,1,-10,9,-5,2,-6,10,-10,6],[-2,-8,7,3,-6,-8,-4,-10,5,4,8,1,-2,-7],[5,-10,8,6,-5,-9,-3,3,5,-4,5,-2,5,6],[4,2,9,-6,9,4,-10,6,9,-1,-5,7,-2,-2],[4,-4,3,10,9,9,-8,3,8,-9,1,3,4,7]],[[-1,-3,-8,3,-5,3,9,-2,-7,-2,6,-1,-5,4],[-6,-7,1,2,-9,1,10,-7,-6,-3,-6,7,10,9],[-6,-5,6,-9,-2,-8,-8,4,-1,-6,-2,9,5,1],[5,1,5,-4,-7,-9,6,9,-6,-1,-4,5,5,5],[1,-9,6,-10,5,-3,8,3,-1,7,5,-4,2,-6],[-5,-1,7,-5,-10,-3,10,1,-9,-2,-7,8,7,-3],[-3,-8,-10,-5,10,9,6,7,7,5,-2,-6,6,-1]],[[8,-1,-2,1,1,8,-7,-1,8,-10,6,1,-2,5],[3,-8,9,-1,-2,3,-8,5,8,10,-4,1,6,5],[10,-4,5,3,-5,7,9,-1,10,4,-1,-6,-7,-2],[8,10,7,-1,10,-8,-8,-2,-4,-4,10,6,4,-6],[-6,1,6,-2,-7,-7,6,-2,10,-1,-9,-3,-5,-10],[-9,-8,-5,-1,-4,5,-5,-6,8,5,-2,-4,-3,1],[6,-7,-8,-9,7,5,2,-1,-2,10,-7,-8,3,-3]],[[9,-4,-3,-7,7,-5,8,4,-10,9,-5,2,5,-2],[-1,5,-9,2,-10,-5,9,-1,-10,8,-1,-1,-7,-8],[-2,1,7,1,6,8,-6,-3,4,1,9,3,-6,6],[-7,4,-7,3,2,2,9,4,-4,10,10,-2,-9,-9],[-9,-8,9,8,-8,4,4,8,5,-9,-8,8,10,-7],[3,4,10,2,6,7,-10,-4,6,-10,-3,-1,9,10],[-7,10,2,-6,8,2,-8,5,-2,2,2,-9,2,7]],[[1,-3,-4,-2,9,-9,-4,8,-9,-9,4,9,5,3],[9,-3,7,1,-8,-8,-9,-3,-7,6,-6,9,8,7],[5,3,2,-6,-3,-10,8,-8,-6,-1,-2,9,3,7],[3,5,6,3,7,6,-4,10,6,-10,-9,-5,9,-8],[-1,4,-10,3,-10,-3,6,4,8,4,2,-8,7,3],[-7,-8,7,-2,10,5,2,4,9,-9,-2,5,-9,6],[-6,1,1,2,1,6,-9,-1,1,8,3,-1,2,-2]],[[8,-6,6,-10,9,4,-5,-9,-3,5,6,-6,-3,-8],[2,8,6,6,3,1,-7,-2,-7,-7,1,-4,7,6],[6,7,-3,-10,10,5,2,-7,-2,9,10,-10,8,-6],[2,7,9,8,10,1,3,-5,-1,-2,-1,-2,9,-10],[4,3,1,5,-3,-9,2,3,5,8,10,9,-3,2],[1,-8,-7,2,-1,7,-4,9,6,9,1,9,9,5],[-7,3,-7,4,2,-4,-4,10,-7,4,-10,9,10,5]],[[4,-1,-6,-10,5,-9,-1,-3,3,-5,-10,-8,-1,6],[-4,3,10,10,8,9,5,4,10,-3,1,-3,-6,-5],[-7,10,-1,-9,7,-7,1,-2,-3,-2,-6,-5,-2,7],[-1,-7,-3,-2,-2,-5,2,5,9,10,6,4,9,-8],[-10,-1,9,-1,-6,7,4,6,6,-1,-3,-9,-5,10],[6,4,-4,7,4,-6,-9,-10,-6,10,2,-9,2,-3],[-4,-10,-4,6,-3,1,-1,10,9,4,8,9,5,4]],[[-7,6,-3,-4,3,3,3,5,-1,5,-7,-5,-4,5],[-2,7,-8,-5,-9,8,-10,-10,-4,-8,-10,-5,3,1],[2,-7,7,-8,-6,5,-1,-9,-3,6,4,2,-7,2],[-5,-5,9,5,-7,10,-5,1,8,-9,-1,-8,-6,-10],[7,3,4,-1,2,-10,9,2,-5,-2,-5,3,5,-4],[4,-4,-7,-5,6,6,3,7,-4,-8,2,-3,2,-4],[9,-7,-1,6,-9,10,6,-3,10,3,-9,-4,-4,7]],[[-2,2,-8,-6,10,-10,2,4,4,9,9,9,-4,6],[-1,-3,-5,-6,-3,-5,-6,-2,3,-8,-5,-2,-2,2],[-5,3,3,-8,-10,3,-7,-6,1,3,6,-2,2,-7],[6,-8,10,-6,-9,3,-9,5,-3,10,9,-10,7,-7],[-8,3,6,5,-5,8,5,5,8,-1,1,6,7,4],[-10,4,7,-3,9,8,-9,9,-8,10,-6,-6,4,-8],[2,6,-5,1,8,-5,-10,-2,-9,-4,9,4,3,-4]],[[-6,8,6,-9,6,3,1,-2,8,3,7,8,-9,5],[4,1,-4,5,4,-9,3,-4,-7,-7,-2,-6,-8,-7],[7,-9,1,-1,8,5,10,-2,-5,7,-5,-10,-7,-6],[-1,9,6,10,-7,-4,-7,-7,-2,-7,-5,8,-1,7],[-7,4,-7,-7,-3,2,-10,-7,3,3,4,2,-6,-1],[1,8,10,-7,5,10,2,9,8,8,-9,9,-3,-5],[3,10,2,1,8,-1,-3,2,-2,-7,5,4,-8,-1]]], dtype = "uint16")#candidate|12266|(16, 7, 14)|const|uint16
bop_12267 = relay.greater(var_12219.astype('bool'), relay.reshape(const_12266.astype('bool'), relay.shape_of(var_12219))) # shape=(16, 7, 14)
func_7664_call = mod.get_global_var('func_7664')
func_7665_call = mutated_mod.get_global_var('func_7665')
call_12282 = relay.TupleGetItem(func_7664_call(), 0)
call_12283 = relay.TupleGetItem(func_7665_call(), 0)
func_10271_call = mod.get_global_var('func_10271')
func_10273_call = mutated_mod.get_global_var('func_10273')
call_12308 = relay.TupleGetItem(func_10271_call(), 0)
call_12309 = relay.TupleGetItem(func_10273_call(), 0)
func_8372_call = mod.get_global_var('func_8372')
func_8374_call = mutated_mod.get_global_var('func_8374')
call_12310 = relay.TupleGetItem(func_8372_call(), 0)
call_12311 = relay.TupleGetItem(func_8374_call(), 0)
output = relay.Tuple([bop_12220,call_12229,const_12230,var_12231,const_12232,call_12245,call_12250,bop_12267,call_12282,call_12308,call_12310,])
output2 = relay.Tuple([bop_12220,call_12233,const_12230,var_12231,const_12232,call_12246,call_12251,bop_12267,call_12283,call_12309,call_12311,])
func_12317 = relay.Function([var_12219,var_12231,], output)
mod['func_12317'] = func_12317
mod = relay.transform.InferType()(mod)
var_12318 = relay.var("var_12318", dtype = "uint16", shape = (16, 7, 14))#candidate|12318|(16, 7, 14)|var|uint16
var_12319 = relay.var("var_12319", dtype = "float64", shape = (336,))#candidate|12319|(336,)|var|float64
output = func_12317(var_12318,var_12319,)
func_12320 = relay.Function([var_12318,var_12319,], output)
mutated_mod['func_12320'] = func_12320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8433_call = mod.get_global_var('func_8433')
func_8435_call = mutated_mod.get_global_var('func_8435')
call_12335 = relay.TupleGetItem(func_8433_call(), 1)
call_12336 = relay.TupleGetItem(func_8435_call(), 1)
func_3557_call = mod.get_global_var('func_3557')
func_3560_call = mutated_mod.get_global_var('func_3560')
const_12341 = relay.const([4.913945,-0.371325,-1.396141,-9.250060,-5.358063,-1.498884,-3.442448,-8.582000,-0.273560,4.448637,6.421374,-8.232096,-0.762277,8.915827,3.060023,9.609867,1.953034,5.401668,4.526677,6.018425,4.979825,8.491750,-6.065069,-5.725399,-9.333673,7.015203,3.211101,-3.878579,-8.026765,8.005837,-8.439769,-2.739369,-8.850534,-1.670037,-0.690128,2.422345,6.141825,9.920205,-9.474041,8.391661,4.243046,-1.256987,-1.387846,-5.949930,8.511914,4.898952,-4.681579,3.977017,7.384789,0.709638,6.743313,3.039627,9.244780,-3.074856,8.160632,-6.735764,-3.624443,6.362948,-4.758354,5.828788,2.236377,4.363914,6.734309,7.245696,-5.213758,-3.265752,0.995119,3.368237,-7.380981,7.107732,2.341988,-9.792389,-7.819593,-1.901943,9.892618,-2.839998,-0.735102,-5.204758,-5.705825,0.144855,-1.639218,3.075851,3.356026,9.831126,-4.796179,3.323821,-0.621672,-5.783648,2.383604,8.515435,-5.386589,-7.556455,-3.357190,-0.020399,-4.009772,2.524279,2.660795,-8.626978,2.128692,-8.248681,-0.673879,3.139447,3.941017,-5.203477,0.118101,5.357710,4.725214,-4.051380,3.535330,0.167805,-4.528654,-0.483025,6.298689,2.540843,-9.895056,-7.236671,4.265290,-2.481889,9.991646,-6.147327,-3.380413,7.148518,8.701571,2.456267,-0.503622,-0.368079,-1.713727,4.739259,7.737695,-0.936113,-3.713931,0.155866,4.558316,8.683249,-6.579793,0.914461,2.215231,-2.928649,-6.588967,2.402636,-3.046380,-0.758254,5.717094,-2.371858,-8.522799,-7.745979,-1.490587,-5.584721,6.008429,-4.048914,0.182577,4.539754,-0.963332,9.305962,7.729922,-1.083015,-1.968946,-2.938444,-9.466340,4.969444,-9.464756,3.414207,4.414132,-8.530803,2.477591,-5.604796,-3.622740,-5.142961,5.572819,3.934091,-0.218468,6.575586,-7.264528,-1.591624,-8.312157,3.698229,-1.328760,7.071877,7.638748,-9.138581,1.222770,3.975737,-2.904971,-5.345428,-3.946436,6.635000,6.331887,3.748485,-0.994388,-0.553332,5.166971,7.372476,3.168045,8.786723,-8.885708,2.708192,-8.643386,0.403074,-1.967810,8.992091,-2.966736,-8.854996,6.074438,7.659633,2.627620,-6.328980,-9.043392,-5.224642,5.767513,-4.622902,-2.122950,8.816113,-6.428342,7.476993,-1.863724,2.479096,3.057184,6.757820,-6.996225,6.756060,-5.808938,-6.422542,1.872178,-2.811146,0.912621,2.081136,5.077566,-7.120125,4.876050,-8.197905,-4.812821,-4.841856,9.117592,-9.370175,6.920625,-6.486370,-8.351547,-0.291381,8.531722,-0.112232,3.349887,-6.292339,-6.983612,-7.598776,4.654263,8.324154,2.950433,1.935207,1.422016,-6.024067,4.712234,1.029926,9.866763,-5.857730,-1.794445,9.317730,-9.759160,-4.824569,9.293415,-2.226601,-0.910536,-0.243855,-8.324145,-5.792018,-8.549229,-7.506706,9.314518,0.271980,8.297585,-9.700852,-6.691103,4.720408,8.293106,6.968125,-3.103980,1.365398,1.930873,-4.621277,-0.249334,-6.263130,9.016953,-7.799342,-6.812762,-1.339504,7.011757,8.878752,-0.947757,-2.892124,2.134479,-7.710886,-6.012210,-7.897121,-9.156150,9.845124,8.089919,9.102336,-0.451247,-7.936690,7.637775,-0.435527,6.871424,-4.406948,-2.919571,3.138028,-0.128843,9.100391,-9.051640,-5.977033,7.065050,3.134208,7.140271,8.872438,-5.816306,-7.377947,-7.331850,2.696430,2.986175,-9.977476,-1.684926,7.507497,9.452245,8.374460,-2.881939,-7.376607,2.842772,-2.172807,-0.761730,-1.066795,9.679105,-5.516536,4.332999,2.027491,8.176442,-2.861670,-7.998809,-0.845438], dtype = "float64")#candidate|12341|(336,)|const|float64
const_12342 = relay.const([8,-3,-7,2,-10,-10,-8,10,8,10,2,3,7,-10,-9,-8,-4,3,-4,9,-1,-8,-1,-6,-8,9,6,-1,9,8,6,-6,9,-4,-4,6,-3,4,-3,-5,9,-10,7,1,-5,-4,9,5,-1,2,1,1,-2,-10,-9,7,8,-4,1,10,6,-8,6,-4,2,2,-4,9,-10,-3,3,-9,-9,5,10,-7,1,-1,9,-6,1,-6,3,-3,8,3,7,-4,5,-8,7,3,-1,7,-2,-4,-2,-8,-10,7,-8,-9,4,-1,3,6,-7,7,3,-9,-8,-8,3,-5,-6,1,5,-10,1,8,3,3,-2,7,6,-10,8,7,3,-6,-4,-4,-7,8,6,-2,-9,-8,-5,6,-2,8,-4,3,4,-8,-8,-7,-9,-5,-10,-5,-9,-8,7,-6,10,-8,8,4,5,-2,6,-10,-4,-9,1,3,-6,-4,5,-1,5,-9,-5,5,-5,-4,8,-6,-10,-9,1,-1,-3,10,-5,2,4,-3,6,-8,-6,-4,10,-7,6,-1,5,4,7,5,6,-1,1,-7,1,8,2,10,-1,-2,2,-6,7,5,3,-5,-7,7,-2,5,-4,1,-2,-7,9,-3,-5,5,8,-6,-2,-10,-9,9,5,-5,6,6,8,-2,-5,7,4,1,-6,3,-2,-6,-1,-4,-8,5,6,3,-5,2,-10,1,5,-7,1,-6,4,3,9,-2,-6,-3,10,-8,-1,-6,-3,8,-9,6,5,-4,-8,-4,4,-5,7,-5,-6,-4,7,-1,-9,6,-1,9,-8,5,-9,10,7,6,-5,-10,3,-9,6,-1,-8,2,-1,7,5,3,3,7,-3,3,-3,-1,9,-9,10,9,-8,7,-5,9,8,-1,-9,10,-3,-10,-8,-5,10,1,5,-8,-4,-10,-9,6,-3,8,-9,-4,3,-9,6,7,9,6,9,-4,-8,1,-7,7,-8,-4,3,-9,3,-7,-3,2,2,5,3,6,8,-1,8,7,-2,5,8,-4,-4,-7,-3,1,1,9,-9,-5,4,-2,-1,8,-7,-1,-7,-5,3,-7,4,-4,-6,-9,9,2,8,-6,10,-4,-7,3,7,-4,-3,-9,-9,-2,-9,9,-4,9,-4,1,-9,4,-8,-9,-6,-7,3,6,2,-8,10,7,10,-6,-3,10,-1,-7,1,4,-8,-6,9,-5,-3,-2,-2,-7,-8,-9,-9,2,-1,-7,-6,10,5,7,2,-5,-4,-8,-9,-3,7,8,8,3,1,-4,4,3,1,-3,1,-8,6,-3,10,-2,7,2,-1,7,-9,-1,4,-10,5,10,3,10,3,-4,9,-1,-7,-2,-9,10,-9,-1,-6,-1,-4,4,-8,-7,-10,-5,9,7,-10,4,-7,9,5,2,1,-4,-2,-2,-5,-3,-2,-3,-8,-6,-9,-10,-5,4,-9,3,10,4,-8,-4,7,-7,10,1,2,6,8,-10,7,4,2,5,-7,-6,7,-7,1,-7,-5,9,-6,1,-5,8,6,-7,9,10,10,10,-8,-6,-10,10,-9,-5,5,10,6,9,10,-10,-7,5,-10,7,-10,7,-3,-7,5,1,7,-10,-1,-5,-5,10,-9,9,9,-7,8,1,8,-8,-10,-3,-2,10,-9,4,1,-8,-10,10,-5,-8,-1,-6,7,-10,-5,-5,-5,10,-1,-10,10,-5,-6,-8], dtype = "uint32")#candidate|12342|(630,)|const|uint32
call_12340 = relay.TupleGetItem(func_3557_call(relay.reshape(const_12341.astype('float64'), [1, 336]), relay.reshape(const_12342.astype('uint32'), [630,]), ), 7)
call_12343 = relay.TupleGetItem(func_3560_call(relay.reshape(const_12341.astype('float64'), [1, 336]), relay.reshape(const_12342.astype('uint32'), [630,]), ), 7)
output = relay.Tuple([call_12335,call_12340,const_12341,const_12342,])
output2 = relay.Tuple([call_12336,call_12343,const_12341,const_12342,])
func_12352 = relay.Function([], output)
mod['func_12352'] = func_12352
mod = relay.transform.InferType()(mod)
mutated_mod['func_12352'] = func_12352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12352_call = mutated_mod.get_global_var('func_12352')
call_12353 = func_12352_call()
output = call_12353
func_12354 = relay.Function([], output)
mutated_mod['func_12354'] = func_12354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10580_call = mod.get_global_var('func_10580')
func_10581_call = mutated_mod.get_global_var('func_10581')
call_12386 = relay.TupleGetItem(func_10580_call(), 0)
call_12387 = relay.TupleGetItem(func_10581_call(), 0)
func_8547_call = mod.get_global_var('func_8547')
func_8550_call = mutated_mod.get_global_var('func_8550')
var_12391 = relay.var("var_12391", dtype = "float64", shape = (1, 1536))#candidate|12391|(1, 1536)|var|float64
const_12392 = relay.const([8,-4,5,5,-8,6,4,-2,2,4,10,-6,2,-3,-6,8,-6,-8,2,5,-10,6,6,8,10,5,9,4,7,-8,6,8,-2], dtype = "int32")#candidate|12392|(33,)|const|int32
call_12390 = relay.TupleGetItem(func_8547_call(relay.reshape(var_12391.astype('float64'), [16, 16, 6]), relay.reshape(const_12392.astype('int32'), [33,]), ), 1)
call_12393 = relay.TupleGetItem(func_8550_call(relay.reshape(var_12391.astype('float64'), [16, 16, 6]), relay.reshape(const_12392.astype('int32'), [33,]), ), 1)
func_12216_call = mod.get_global_var('func_12216')
func_12217_call = mutated_mod.get_global_var('func_12217')
call_12396 = relay.TupleGetItem(func_12216_call(), 0)
call_12397 = relay.TupleGetItem(func_12217_call(), 0)
output = relay.Tuple([call_12386,call_12390,var_12391,const_12392,call_12396,])
output2 = relay.Tuple([call_12387,call_12393,var_12391,const_12392,call_12397,])
func_12399 = relay.Function([var_12391,], output)
mod['func_12399'] = func_12399
mod = relay.transform.InferType()(mod)
var_12400 = relay.var("var_12400", dtype = "float64", shape = (1, 1536))#candidate|12400|(1, 1536)|var|float64
output = func_12399(var_12400)
func_12401 = relay.Function([var_12400], output)
mutated_mod['func_12401'] = func_12401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12420 = relay.var("var_12420", dtype = "uint8", shape = ())#candidate|12420|()|var|uint8
var_12421 = relay.var("var_12421", dtype = "uint8", shape = (1, 2, 13))#candidate|12421|(1, 2, 13)|var|uint8
bop_12422 = relay.greater_equal(var_12420.astype('bool'), var_12421.astype('bool')) # shape=(1, 2, 13)
func_2835_call = mod.get_global_var('func_2835')
func_2838_call = mutated_mod.get_global_var('func_2838')
const_12427 = relay.const([[-6,7,1],[-3,-3,-9],[1,-4,1],[6,-4,-6],[-4,-8,10],[9,10,-9],[-10,-5,3],[9,-6,-4],[-9,-3,-1],[7,-9,-4],[-2,5,2]], dtype = "int32")#candidate|12427|(11, 3)|const|int32
var_12428 = relay.var("var_12428", dtype = "int32", shape = (264,))#candidate|12428|(264,)|var|int32
call_12426 = relay.TupleGetItem(func_2835_call(relay.reshape(const_12427.astype('int32'), [33,]), relay.reshape(var_12428.astype('int32'), [264,]), ), 1)
call_12429 = relay.TupleGetItem(func_2838_call(relay.reshape(const_12427.astype('int32'), [33,]), relay.reshape(var_12428.astype('int32'), [264,]), ), 1)
output = relay.Tuple([bop_12422,call_12426,const_12427,var_12428,])
output2 = relay.Tuple([bop_12422,call_12429,const_12427,var_12428,])
func_12431 = relay.Function([var_12420,var_12421,var_12428,], output)
mod['func_12431'] = func_12431
mod = relay.transform.InferType()(mod)
var_12432 = relay.var("var_12432", dtype = "uint8", shape = ())#candidate|12432|()|var|uint8
var_12433 = relay.var("var_12433", dtype = "uint8", shape = (1, 2, 13))#candidate|12433|(1, 2, 13)|var|uint8
var_12434 = relay.var("var_12434", dtype = "int32", shape = (264,))#candidate|12434|(264,)|var|int32
output = func_12431(var_12432,var_12433,var_12434,)
func_12435 = relay.Function([var_12432,var_12433,var_12434,], output)
mutated_mod['func_12435'] = func_12435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_12478 = func_2686_call()
call_12479 = func_2686_call()
func_11410_call = mod.get_global_var('func_11410')
func_11412_call = mutated_mod.get_global_var('func_11412')
call_12480 = relay.TupleGetItem(func_11410_call(), 1)
call_12481 = relay.TupleGetItem(func_11412_call(), 1)
output = relay.Tuple([call_12478,call_12480,])
output2 = relay.Tuple([call_12479,call_12481,])
func_12488 = relay.Function([], output)
mod['func_12488'] = func_12488
mod = relay.transform.InferType()(mod)
output = func_12488()
func_12489 = relay.Function([], output)
mutated_mod['func_12489'] = func_12489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4879_call = mod.get_global_var('func_4879')
func_4881_call = mutated_mod.get_global_var('func_4881')
call_12518 = relay.TupleGetItem(func_4879_call(), 0)
call_12519 = relay.TupleGetItem(func_4881_call(), 0)
output = call_12518
output2 = call_12519
func_12520 = relay.Function([], output)
mod['func_12520'] = func_12520
mod = relay.transform.InferType()(mod)
output = func_12520()
func_12521 = relay.Function([], output)
mutated_mod['func_12521'] = func_12521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10536_call = mod.get_global_var('func_10536')
func_10538_call = mutated_mod.get_global_var('func_10538')
call_12522 = relay.TupleGetItem(func_10536_call(), 4)
call_12523 = relay.TupleGetItem(func_10538_call(), 4)
output = relay.Tuple([call_12522,])
output2 = relay.Tuple([call_12523,])
func_12539 = relay.Function([], output)
mod['func_12539'] = func_12539
mod = relay.transform.InferType()(mod)
output = func_12539()
func_12540 = relay.Function([], output)
mutated_mod['func_12540'] = func_12540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11970_call = mod.get_global_var('func_11970')
func_11972_call = mutated_mod.get_global_var('func_11972')
call_12557 = func_11970_call()
call_12558 = func_11970_call()
func_6110_call = mod.get_global_var('func_6110')
func_6111_call = mutated_mod.get_global_var('func_6111')
call_12568 = func_6110_call()
call_12569 = func_6110_call()
func_8394_call = mod.get_global_var('func_8394')
func_8395_call = mutated_mod.get_global_var('func_8395')
call_12571 = relay.TupleGetItem(func_8394_call(), 0)
call_12572 = relay.TupleGetItem(func_8395_call(), 0)
func_3202_call = mod.get_global_var('func_3202')
func_3204_call = mutated_mod.get_global_var('func_3204')
call_12593 = relay.TupleGetItem(func_3202_call(), 0)
call_12594 = relay.TupleGetItem(func_3204_call(), 0)
func_11970_call = mod.get_global_var('func_11970')
func_11972_call = mutated_mod.get_global_var('func_11972')
call_12596 = func_11970_call()
call_12597 = func_11970_call()
func_5572_call = mod.get_global_var('func_5572')
func_5574_call = mutated_mod.get_global_var('func_5574')
call_12615 = relay.TupleGetItem(func_5572_call(), 3)
call_12616 = relay.TupleGetItem(func_5574_call(), 3)
func_6371_call = mod.get_global_var('func_6371')
func_6373_call = mutated_mod.get_global_var('func_6373')
call_12617 = relay.TupleGetItem(func_6371_call(), 1)
call_12618 = relay.TupleGetItem(func_6373_call(), 1)
output = relay.Tuple([call_12557,call_12568,call_12571,call_12593,call_12596,call_12615,call_12617,])
output2 = relay.Tuple([call_12558,call_12569,call_12572,call_12594,call_12597,call_12616,call_12618,])
func_12644 = relay.Function([], output)
mod['func_12644'] = func_12644
mod = relay.transform.InferType()(mod)
output = func_12644()
func_12645 = relay.Function([], output)
mutated_mod['func_12645'] = func_12645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10580_call = mod.get_global_var('func_10580')
func_10581_call = mutated_mod.get_global_var('func_10581')
call_12690 = relay.TupleGetItem(func_10580_call(), 0)
call_12691 = relay.TupleGetItem(func_10581_call(), 0)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_12694 = func_2461_call()
call_12695 = func_2461_call()
func_3352_call = mod.get_global_var('func_3352')
func_3353_call = mutated_mod.get_global_var('func_3353')
call_12698 = func_3352_call()
call_12699 = func_3352_call()
output = relay.Tuple([call_12690,call_12694,call_12698,])
output2 = relay.Tuple([call_12691,call_12695,call_12699,])
func_12718 = relay.Function([], output)
mod['func_12718'] = func_12718
mod = relay.transform.InferType()(mod)
mutated_mod['func_12718'] = func_12718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12718_call = mutated_mod.get_global_var('func_12718')
call_12719 = func_12718_call()
output = call_12719
func_12720 = relay.Function([], output)
mutated_mod['func_12720'] = func_12720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9143_call = mod.get_global_var('func_9143')
func_9145_call = mutated_mod.get_global_var('func_9145')
call_12766 = func_9143_call()
call_12767 = func_9143_call()
output = call_12766
output2 = call_12767
func_12768 = relay.Function([], output)
mod['func_12768'] = func_12768
mod = relay.transform.InferType()(mod)
mutated_mod['func_12768'] = func_12768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12768_call = mutated_mod.get_global_var('func_12768')
call_12769 = func_12768_call()
output = call_12769
func_12770 = relay.Function([], output)
mutated_mod['func_12770'] = func_12770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12768_call = mod.get_global_var('func_12768')
func_12770_call = mutated_mod.get_global_var('func_12770')
call_12771 = func_12768_call()
call_12772 = func_12768_call()
output = call_12771
output2 = call_12772
func_12773 = relay.Function([], output)
mod['func_12773'] = func_12773
mod = relay.transform.InferType()(mod)
output = func_12773()
func_12774 = relay.Function([], output)
mutated_mod['func_12774'] = func_12774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3408_call = mod.get_global_var('func_3408')
func_3410_call = mutated_mod.get_global_var('func_3410')
call_12815 = relay.TupleGetItem(func_3408_call(), 0)
call_12816 = relay.TupleGetItem(func_3410_call(), 0)
output = relay.Tuple([call_12815,])
output2 = relay.Tuple([call_12816,])
func_12823 = relay.Function([], output)
mod['func_12823'] = func_12823
mod = relay.transform.InferType()(mod)
mutated_mod['func_12823'] = func_12823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12823_call = mutated_mod.get_global_var('func_12823')
call_12824 = func_12823_call()
output = call_12824
func_12825 = relay.Function([], output)
mutated_mod['func_12825'] = func_12825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7212_call = mod.get_global_var('func_7212')
func_7214_call = mutated_mod.get_global_var('func_7214')
call_12826 = relay.TupleGetItem(func_7212_call(), 0)
call_12827 = relay.TupleGetItem(func_7214_call(), 0)
func_11117_call = mod.get_global_var('func_11117')
func_11119_call = mutated_mod.get_global_var('func_11119')
call_12830 = relay.TupleGetItem(func_11117_call(), 0)
call_12831 = relay.TupleGetItem(func_11119_call(), 0)
output = relay.Tuple([call_12826,call_12830,])
output2 = relay.Tuple([call_12827,call_12831,])
func_12863 = relay.Function([], output)
mod['func_12863'] = func_12863
mod = relay.transform.InferType()(mod)
mutated_mod['func_12863'] = func_12863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12863_call = mutated_mod.get_global_var('func_12863')
call_12864 = func_12863_call()
output = call_12864
func_12865 = relay.Function([], output)
mutated_mod['func_12865'] = func_12865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5064_call = mod.get_global_var('func_5064')
func_5066_call = mutated_mod.get_global_var('func_5066')
call_12886 = relay.TupleGetItem(func_5064_call(), 0)
call_12887 = relay.TupleGetItem(func_5066_call(), 0)
output = call_12886
output2 = call_12887
func_12908 = relay.Function([], output)
mod['func_12908'] = func_12908
mod = relay.transform.InferType()(mod)
output = func_12908()
func_12909 = relay.Function([], output)
mutated_mod['func_12909'] = func_12909
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12910 = relay.const([[[-6.394670,6.948917,2.702257,-7.686293,-4.973405,-5.132189,5.828004,-3.396298],[6.454201,3.837133,2.597987,5.189931,-9.036734,8.200901,-2.257061,8.604383],[7.715283,-2.475198,-9.722967,3.688730,-7.064070,-4.704496,9.162535,8.917517],[4.244309,-6.266787,-5.954374,1.873505,-4.990468,8.156456,-0.256883,0.533798],[3.993544,-7.063107,-6.532667,-1.485581,5.375476,0.467660,3.346960,9.040197],[5.462059,-9.433083,-1.420913,-4.671206,-5.043933,5.669134,-0.059579,-9.031288],[-6.500017,-6.289283,-4.433341,8.131510,5.861589,2.576738,8.585654,7.524293],[-7.290067,-4.848872,-1.022307,5.367732,-9.321984,2.105645,-4.341823,7.878383],[-6.577179,8.492124,-6.341118,-1.080387,7.302005,9.400837,2.684836,1.125497],[-5.202902,-0.149704,0.725237,5.910055,-8.726371,-8.285846,-0.463862,6.350803],[2.003336,-3.720790,4.452718,-2.610974,-3.808285,6.284073,-1.309749,2.796984],[-1.844470,4.116989,9.552956,7.450649,3.898754,-7.646323,2.127030,-4.318617],[9.619641,0.959925,-8.276269,8.668998,3.018069,-2.876511,-1.211428,-3.114442]],[[0.112666,-2.410924,-5.678449,-7.370691,8.937339,9.693257,-0.676156,-4.710110],[-2.188571,-9.616949,5.732146,4.437878,-8.313344,-0.743995,3.898708,4.989608],[1.305500,-7.815632,4.031644,6.818973,4.090897,-4.308470,4.429172,2.734236],[-2.305066,-4.494379,-9.749664,-7.904851,3.512227,4.613414,4.184300,4.656639],[-1.041836,-4.871885,-7.562163,-2.927961,-9.037801,9.584139,3.004742,-0.699222],[-7.203119,3.899790,-0.405551,3.069953,0.700037,7.031639,1.703398,5.259958],[-8.530268,2.055304,1.876142,-9.969350,-2.611129,3.152725,3.984297,3.634830],[-8.900428,-2.764157,-9.594705,-8.080973,-8.767795,-8.816303,-5.480991,3.080721],[9.033687,4.479227,-4.366859,9.108411,0.197763,8.960940,-2.783749,-7.647425],[4.580824,1.812886,-8.301472,1.684355,2.533379,-2.306930,4.836310,-0.628227],[8.815192,-1.152466,-2.147141,-6.932217,-0.811864,-3.732134,0.866341,-0.248405],[7.311917,-0.335293,7.120813,-6.148553,-2.876957,9.931272,-3.050658,-0.071050],[4.055820,2.781128,-6.975921,-6.266344,6.848470,1.843516,3.962844,-3.880885]],[[-8.007138,5.446177,-0.941768,-3.536482,-8.113146,1.930876,-5.838067,-7.923278],[-2.079911,4.701169,-1.401559,6.962702,-0.632450,-3.739981,-7.146400,-1.090213],[6.791841,2.613944,7.421901,-0.175667,3.353954,-7.511580,-8.935238,3.650010],[-6.856950,2.390751,-5.752013,6.160876,-3.258267,7.466746,-3.966400,9.520419],[1.877356,6.924959,-4.575744,-6.753531,5.636794,0.084725,-4.894488,-1.378343],[6.538083,9.768120,2.725058,-7.768288,-8.635124,-1.186626,2.531585,-1.278850],[-7.134930,0.113727,-7.692330,-0.134368,-1.914630,2.717888,3.918824,-2.593180],[7.720182,-6.053635,-4.521940,-5.727752,-7.476030,1.170179,-1.499716,-9.010135],[4.509568,-2.462316,-6.925800,-9.614031,-4.980565,1.294370,9.616871,6.004644],[3.652066,2.524952,-0.397995,-3.865561,2.847787,3.608986,3.679199,-0.357708],[7.985120,-3.074993,-1.694706,2.923289,-4.820475,-9.591249,-0.074409,6.360400],[7.350473,3.719775,-3.809419,3.698285,3.930935,-1.950743,-6.361161,1.958644],[3.243399,9.063001,-2.850545,-9.325791,0.318687,1.400267,-0.704682,1.605400]]], dtype = "float64")#candidate|12910|(3, 13, 8)|const|float64
uop_12911 = relay.cos(const_12910.astype('float64')) # shape=(3, 13, 8)
func_9473_call = mod.get_global_var('func_9473')
func_9475_call = mutated_mod.get_global_var('func_9475')
call_12924 = relay.TupleGetItem(func_9473_call(), 0)
call_12925 = relay.TupleGetItem(func_9475_call(), 0)
output = relay.Tuple([uop_12911,call_12924,])
output2 = relay.Tuple([uop_12911,call_12925,])
func_12942 = relay.Function([], output)
mod['func_12942'] = func_12942
mod = relay.transform.InferType()(mod)
mutated_mod['func_12942'] = func_12942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12942_call = mutated_mod.get_global_var('func_12942')
call_12943 = func_12942_call()
output = call_12943
func_12944 = relay.Function([], output)
mutated_mod['func_12944'] = func_12944
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12996 = relay.const(4, dtype = "int64")#candidate|12996|()|const|int64
var_12997 = relay.var("var_12997", dtype = "int64", shape = (4, 8, 3))#candidate|12997|(4, 8, 3)|var|int64
bop_12998 = relay.less_equal(const_12996.astype('bool'), var_12997.astype('bool')) # shape=(4, 8, 3)
output = relay.Tuple([bop_12998,])
output2 = relay.Tuple([bop_12998,])
func_13006 = relay.Function([var_12997,], output)
mod['func_13006'] = func_13006
mod = relay.transform.InferType()(mod)
var_13007 = relay.var("var_13007", dtype = "int64", shape = (4, 8, 3))#candidate|13007|(4, 8, 3)|var|int64
output = func_13006(var_13007)
func_13008 = relay.Function([var_13007], output)
mutated_mod['func_13008'] = func_13008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5064_call = mod.get_global_var('func_5064')
func_5066_call = mutated_mod.get_global_var('func_5066')
call_13015 = relay.TupleGetItem(func_5064_call(), 0)
call_13016 = relay.TupleGetItem(func_5066_call(), 0)
output = call_13015
output2 = call_13016
func_13022 = relay.Function([], output)
mod['func_13022'] = func_13022
mod = relay.transform.InferType()(mod)
mutated_mod['func_13022'] = func_13022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13022_call = mutated_mod.get_global_var('func_13022')
call_13023 = func_13022_call()
output = call_13023
func_13024 = relay.Function([], output)
mutated_mod['func_13024'] = func_13024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7212_call = mod.get_global_var('func_7212')
func_7214_call = mutated_mod.get_global_var('func_7214')
call_13045 = relay.TupleGetItem(func_7212_call(), 0)
call_13046 = relay.TupleGetItem(func_7214_call(), 0)
output = call_13045
output2 = call_13046
func_13047 = relay.Function([], output)
mod['func_13047'] = func_13047
mod = relay.transform.InferType()(mod)
mutated_mod['func_13047'] = func_13047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13047_call = mutated_mod.get_global_var('func_13047')
call_13048 = func_13047_call()
output = call_13048
func_13049 = relay.Function([], output)
mutated_mod['func_13049'] = func_13049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13081 = relay.var("var_13081", dtype = "int64", shape = (10, 4, 1))#candidate|13081|(10, 4, 1)|var|int64
var_13082 = relay.var("var_13082", dtype = "int64", shape = (10, 4, 5))#candidate|13082|(10, 4, 5)|var|int64
bop_13083 = relay.bitwise_or(var_13081.astype('int64'), var_13082.astype('int64')) # shape=(10, 4, 5)
output = bop_13083
output2 = bop_13083
func_13094 = relay.Function([var_13081,var_13082,], output)
mod['func_13094'] = func_13094
mod = relay.transform.InferType()(mod)
var_13095 = relay.var("var_13095", dtype = "int64", shape = (10, 4, 1))#candidate|13095|(10, 4, 1)|var|int64
var_13096 = relay.var("var_13096", dtype = "int64", shape = (10, 4, 5))#candidate|13096|(10, 4, 5)|var|int64
output = func_13094(var_13095,var_13096,)
func_13097 = relay.Function([var_13095,var_13096,], output)
mutated_mod['func_13097'] = func_13097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5201_call = mod.get_global_var('func_5201')
func_5203_call = mutated_mod.get_global_var('func_5203')
call_13099 = relay.TupleGetItem(func_5201_call(), 1)
call_13100 = relay.TupleGetItem(func_5203_call(), 1)
output = call_13099
output2 = call_13100
func_13105 = relay.Function([], output)
mod['func_13105'] = func_13105
mod = relay.transform.InferType()(mod)
output = func_13105()
func_13106 = relay.Function([], output)
mutated_mod['func_13106'] = func_13106
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13269 = relay.var("var_13269", dtype = "float64", shape = ())#candidate|13269|()|var|float64
var_13270 = relay.var("var_13270", dtype = "float64", shape = (1, 14, 8))#candidate|13270|(1, 14, 8)|var|float64
bop_13271 = relay.power(var_13269.astype('float64'), var_13270.astype('float64')) # shape=(1, 14, 8)
output = bop_13271
output2 = bop_13271
F = relay.Function([var_13269,var_13270,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_13269,var_13270,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3488(%var_3474: float64, %var_3475: Tensor[(2940), float64], %var_3476: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %0 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %1 = cast(%var_3474, dtype="float64") /* ty=float64 */;
  %2 = cast(%var_3475, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %3 = cast(%var_3476, dtype="float64") /* ty=Tensor[(350), float64] */;
  %4 = cast(%var_3475, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %5 = reshape(%1, newshape=[]) /* ty=float64 */;
  %6 = reshape(%2, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %7 = reshape(%3, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %8 = reshape(%4, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %9 = @func_2037(%5, %6, %7, %8) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %10 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %11 = @func_3243() /* ty=Tensor[(135), uint16] */;
  %12 = @func_3243() /* ty=Tensor[(135), uint16] */;
  %13 = %0.11;
  %14 = %9.1;
  (%10, %11, %12, %13, %14, %var_3474, %var_3475, %var_3476)
}

def @func_5039(%var_5029: Tensor[(1800), float32]) -> (Tensor[(1056), uint32], Tensor[(135), uint16], Tensor[(1800), uint64]) {
  %15 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %16 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %17 = @func_3723() /* ty=(Tensor[(1800), float64],) */;
  %18 = %17.0;
  %19 = cast(%18, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %20 = log10(%19) /* ty=Tensor[(1800), float32] */;
  %21 = cast(%var_5029, dtype="uint64") /* ty=Tensor[(1800), uint64] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(1), int32] */;
  %23 = cast(%20, dtype="uint64") /* ty=Tensor[(1800), uint64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %25 = %15.0;
  %26 = %16.1;
  %27 = bitwise_and(%23, %24) /* ty=Tensor[(1800), uint64] */;
  (%25, %26, %27)
}

def @func_8352() -> (Tensor[(135), uint16],) {
  %28 = @func_3243() /* ty=Tensor[(135), uint16] */;
  (%28,)
}

def @func_5581() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), float32]) {
  %29 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(15, 16, 9), float32] */;
  %31 = @func_2627() /* ty=Tensor[(135), uint16] */;
  %32 = acos(%30) /* ty=Tensor[(15, 16, 9), float32] */;
  (%31, %32)
}

def @func_6773() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %33 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %34 = @func_3243() /* ty=Tensor[(135), uint16] */;
  %35 = %33.0;
  (%34, %35)
}

def @func_3134() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %36 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %37 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %38 = %36.0;
  %39 = %37.0;
  %40 = @func_2627() /* ty=Tensor[(135), uint16] */;
  (%38, %39, %40)
}

def @func_6291(%var_6268: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) {
  %41 = cast(%var_6268, dtype="float64") /* ty=Tensor[(350), float64] */;
  %42 = reshape(%41, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
  %43 = @func_1238(%42) /* ty=(Tensor[(10, 7, 5), float64],) */;
  %44 = @func_5655() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */;
  %45 = @func_6220() /* ty=Tensor[(15, 16, 9), uint16] */;
  %46 = %43.0;
  %47 = %44.1;
  (%45, %46, %var_6268, %47)
}

def @func_9249() -> (Tensor[(45), float64], Tensor[(15, 16, 9), uint16]) {
  %48 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %49 = %48.11;
  %50 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%49, %50)
}

def @func_16259(%var_16252: Tensor[(1, 13, 7), uint16], %var_16253: Tensor[(9, 13, 7), uint16]) -> Tensor[(9, 13, 7), bool] {
  %51 = cast(%var_16252, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %52 = cast(%var_16253, dtype="bool") /* ty=Tensor[(9, 13, 7), bool] */;
  less_equal(%51, %52) /* ty=Tensor[(9, 13, 7), bool] */
}

def @func_15611() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %53 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %54 = @func_11802() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %55 = %53.1;
  %56 = %54.0;
  (%55, %56)
}

def @func_12130() -> (Tensor[(135), uint16],) {
  %57 = @func_9364() /* ty=Tensor[(135), uint16] */;
  (%57,)
}

def @func_13032() -> Tensor[(15, 16, 9), float32] {
  %58 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %58.0
}

def @func_7195(%var_7185: Tensor[(10), float64]) -> (Tensor[(9, 2, 16), uint64], Tensor[(2160), uint16], Tensor[(10), float64], Tensor[(135), uint16]) {
  %59 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %60 = cast(%var_7185, dtype="float64") /* ty=Tensor[(10), float64] */;
  %61 = reshape(%60, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %62 = @func_5165(%61) /* ty=(Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) */;
  %63 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %64 = %59.1;
  %65 = %62.0;
  %66 = %63.0;
  (%64, %65, %var_7185, %66)
}

def @func_7102() -> (Tensor[(15, 16, 9), uint16],) {
  %67 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %68 = %67.5;
  (%68,)
}

def @func_10117() -> (Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(968), float64]) {
  %69 = @func_10044() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 13), float64], Tensor[(1014, 1), float64]) */;
  %70 = cast(meta[relay.Constant][0] /* ty=Tensor[(968), float64] */, dtype="float64") /* ty=Tensor[(968), float64] */;
  %71 = reshape(%70, newshape=[11, 88]) /* ty=Tensor[(11, 88), float64] */;
  %72 = @func_7713(%71) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], Tensor[(5, 70), float64], Tensor[(11, 88), float64], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16]) */;
  %73 = %69.1;
  %74 = %72.0;
  (%73, %74, meta[relay.Constant][0] /* ty=Tensor[(968), float64] */)
}

def @func_14235() -> (Tensor[(135), uint16],) {
  %75 = @func_10891() /* ty=Tensor[(135), uint16] */;
  (%75,)
}

def @func_10700() -> Tensor[(6, 15, 10), float32] {
  @func_10248() /* ty=Tensor[(6, 15, 10), float32] */
}

def @func_15147() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  %76 = @func_14877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %77 = @func_9208() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %78 = %76.0;
  %79 = %77.0;
  (%78, %79)
}

def @func_15575() -> (Tensor[(135), uint16],) {
  %80 = @func_10891() /* ty=Tensor[(135), uint16] */;
  (%80,)
}

def @func_4714() -> Tensor[(135), uint16] {
  @func_3370() /* ty=Tensor[(135), uint16] */
}

def @func_3651() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) {
  %81 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %82 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  %83 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 15, 10), float32] */, dtype="bool") /* ty=Tensor[(6, 15, 10), bool] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="bool") /* ty=Tensor[(6, 15, 10), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = @func_3370() /* ty=Tensor[(135), uint16] */;
  %88 = %81.0;
  %89 = less(%85, %86) /* ty=Tensor[(6, 15, 10), bool] */;
  (%87, %88, %89)
}

def @func_13773() -> (Tensor[(15, 16, 9), uint16],) {
  %90 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %91 = %90.0;
  (%91,)
}

def @func_5755() -> (Tensor[(15, 16, 9), uint16],) {
  %92 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%92,)
}

def @func_17812() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %93 = @func_14877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %94 = @func_9635() /* ty=Tensor[(135), uint16] */;
  %95 = %93.1;
  (%94, %95)
}

def @func_5055() -> (Tensor[(135), uint16],) {
  %96 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %97 = %96.1;
  (%97,)
}

def @func_16968(%var_16957: float64, %var_16958: Tensor[(2940), float64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %98 = @func_13638() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */;
  %99 = cast(%var_16957, dtype="float64") /* ty=float64 */;
  %100 = cast(%var_16958, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %101 = cast(meta[relay.Constant][2] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %102 = cast(%var_16958, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %103 = reshape(%99, newshape=[]) /* ty=float64 */;
  %104 = reshape(%100, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %105 = reshape(%101, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %106 = reshape(%102, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %107 = @func_2037(%103, %104, %105, %106) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %108 = %98.0;
  %109 = @func_9635() /* ty=Tensor[(135), uint16] */;
  %110 = %107.2;
  (%108, %109, %110, %var_16957, %var_16958, meta[relay.Constant][2] /* ty=Tensor[(350), float64] */)
}

def @func_18336() -> (Tensor[(6, 15, 10), float32], Tensor[(88, 12), uint32], int64, Tensor[(24), int64], Tensor[(2160), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  %111 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %112 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %113 = cast(meta[relay.Constant][3] /* ty=Tensor[(24), int64] */, dtype="int64") /* ty=Tensor[(24), int64] */;
  %114 = reshape(%112, newshape=[]) /* ty=int64 */;
  %115 = reshape(%113, newshape=[6, 4]) /* ty=Tensor[(6, 4), int64] */;
  %116 = @func_15986(%114, %115) /* ty=(Tensor[(135), uint16], int64, Tensor[(88, 12), uint32], Tensor[(?, 2, 12), int8]) */;
  %117 = @func_14103() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(2160), uint16], Tensor[(2160), uint16]) */;
  %118 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %119 = @func_5884() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %120 = %111.1;
  %121 = %116.2;
  %122 = %117.2;
  %123 = %118.0;
  %124 = %119.0;
  (%120, %121, 1 /* ty=int64 */, meta[relay.Constant][3] /* ty=Tensor[(24), int64] */, %122, %123, %124)
}

def @func_2627() -> Tensor[(135), uint16] {
  %125 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %125.0
}

def @func_2946() -> (Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) {
  %126 = cast(meta[relay.Constant][4] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %127 = cast(meta[relay.Constant][4] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %128 = @func_2627() /* ty=Tensor[(135), uint16] */;
  %129 = cast(%128, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %130 = reshape(%126, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %131 = reshape(%127, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %132 = reshape(%129, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %133 = @func_475(%130, %131, %132) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
  %134 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %135 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %136 = cast(meta[relay.Constant][5] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %137 = cast(meta[relay.Constant][6] /* ty=Tensor[(88, 12), uint32] */, dtype="uint32") /* ty=Tensor[(88, 12), uint32] */;
  %138 = cast(%128, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %139 = reshape(%136, newshape=[]) /* ty=uint32 */;
  %140 = reshape(%137, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), uint32] */;
  %141 = reshape(%138, newshape=[3, 45]) /* ty=Tensor[(3, 45), uint16] */;
  %142 = @func_616(%139, %140, %141) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */;
  %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %144 = cast(meta[relay.Constant][8] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %145 = reshape(%143, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %146 = reshape(%144, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %147 = @func_1638(%145, %146) /* ty=(Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) */;
  %148 = %133.0;
  %149 = %134.0;
  %150 = @func_2627() /* ty=Tensor[(135), uint16] */;
  %151 = %135.0;
  %152 = %142.3;
  %153 = %147.3;
  (%128, %148, meta[relay.Constant][4] /* ty=Tensor[(288), uint64] */, %149, %150, %151, %152, meta[relay.Constant][5] /* ty=uint32 */, meta[relay.Constant][6] /* ty=Tensor[(88, 12), uint32] */, %153, meta[relay.Constant][7] /* ty=Tensor[(1800), float64] */, meta[relay.Constant][8] /* ty=Tensor[(45), float64] */)
}

def @func_4115() -> Tensor[(15, 16, 9), uint16] {
  %154 = @func_3814() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %154.0
}

def @func_10337() -> (Tensor[(45), float64],) {
  %155 = @func_9249() /* ty=(Tensor[(45), float64], Tensor[(15, 16, 9), uint16]) */;
  %156 = %155.0;
  (%156,)
}

def @func_11157() -> Tensor[(135), uint16] {
  %157 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
  %157.0
}

def @func_16737() -> (Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %158 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %159 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %160 = %158.0;
  %161 = %159.2;
  %162 = @func_11157() /* ty=Tensor[(135), uint16] */;
  (%160, %161, %162)
}

def @func_11563() -> Tensor[(135), uint16] {
  @func_3370() /* ty=Tensor[(135), uint16] */
}

def @func_4527() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) {
  %163 = @func_4493() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %164 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
  %165 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %166 = %163.1;
  %167 = %164.0;
  %168 = %165.0;
  (%166, %167, %168)
}

def @func_18406(%var_18401: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(182), float32], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  %169 = @func_14124() /* ty=(Tensor[(135), uint16],) */;
  %170 = cast(-7.91169f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %171 = cast(meta[relay.Constant][9] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %172 = reshape(%170, newshape=[]) /* ty=float64 */;
  %173 = reshape(%171, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %174 = @func_7287(%172, %173) /* ty=(Tensor[(135), uint16], Tensor[(3, 11, 7), uint16], Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(350), float64], Tensor[(15, 16, 9), uint16], Tensor[(?, 14, 13), bool]) */;
  %175 = %174.0;
  %176 = cast(%175, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %177 = cast(%var_18401, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %178 = reshape(%176, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %179 = reshape(%177, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %180 = @func_13(%178, %179) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %181 = %169.0;
  %182 = %180.0;
  (%181, %175, -7.91169f64 /* ty=float64 */, meta[relay.Constant][9] /* ty=Tensor[(182), float32] */, %182, %var_18401)
}

def @func_16194() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32], Tensor[(1056), uint32], Tensor[(350), float64], Tensor[(12, 15, 10), float64], Tensor[(1800), float64], Tensor[(45), float64]) {
  %183 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
  %184 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %185 = cast(meta[relay.Constant][10] /* ty=Tensor[(1056), uint32] */, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
  %186 = cast(meta[relay.Constant][11] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %187 = reshape(%185, newshape=[1056]) /* ty=Tensor[(1056), uint32] */;
  %188 = reshape(%186, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %189 = @func_11652(%187, %188) /* ty=(Tensor[(15, 16, 9), float32], Tensor[(15, 16, 9), uint16], Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(182), float32], Tensor[(350), float64], Tensor[(968), float64]) */;
  %190 = cast(meta[relay.Constant][12] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %191 = cast(meta[relay.Constant][13] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %192 = reshape(%190, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %193 = reshape(%191, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %194 = @func_1638(%192, %193) /* ty=(Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) */;
  %195 = %183.0;
  %196 = %184.0;
  %197 = %189.0;
  %198 = %194.0;
  (%195, %196, %197, meta[relay.Constant][10] /* ty=Tensor[(1056), uint32] */, meta[relay.Constant][11] /* ty=Tensor[(350), float64] */, %198, meta[relay.Constant][12] /* ty=Tensor[(1800), float64] */, meta[relay.Constant][13] /* ty=Tensor[(45), float64] */)
}

def @func_16049() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  %199 = @func_4694() /* ty=(Tensor[(135), uint16],) */;
  %200 = @func_12984() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %201 = @func_14877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %202 = %199.0;
  %203 = %200.0;
  %204 = %201.0;
  (%202, %203, %204)
}

def @func_10817() -> Tensor[(135), uint16] {
  %205 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %205.1
}

def @func_2517(%var_2515: Tensor[(2160), uint16]) -> (Tensor[(6, 15, 10), int8], Tensor[(6, 15, 10), int8], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16]) {
  %206 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %207 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %208 = cast(0.975399f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %209 = cast(meta[relay.Constant][14] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %210 = cast(meta[relay.Constant][15] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %211 = cast(meta[relay.Constant][14] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %212 = reshape(%208, newshape=[]) /* ty=float64 */;
  %213 = reshape(%209, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %214 = reshape(%210, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %215 = reshape(%211, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %216 = @func_2037(%212, %213, %214, %215) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %217 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %218 = cast(meta[relay.Constant][16] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %219 = cast(%var_2515, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %220 = reshape(%218, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %221 = reshape(%219, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %222 = @func_13(%220, %221) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %223 = %206.0;
  %224 = %207.0;
  %225 = %216.1;
  %226 = %217.3;
  %227 = %222.0;
  (%223, %224, %225, 0.975399f64 /* ty=float64 */, meta[relay.Constant][14] /* ty=Tensor[(2940), float64] */, meta[relay.Constant][15] /* ty=Tensor[(350), float64] */, %226, %227, meta[relay.Constant][16] /* ty=Tensor[(135), uint16] */, %var_2515)
}

def @func_5265() -> Tensor[(135), uint16] {
  %228 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %228.0
}

def @func_15432() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %229 = @func_12567() /* ty=(Tensor[(135), uint16],) */;
  %230 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
  %231 = @func_10641() /* ty=Tensor[(135), uint16] */;
  %232 = %229.0;
  (%230, %231, %232)
}

def @func_2815() -> (Tensor[(6, 15, 10), float32],) {
  %233 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  (%233,)
}

def @func_12567() -> (Tensor[(135), uint16],) {
  %234 = @func_10641() /* ty=Tensor[(135), uint16] */;
  (%234,)
}

def @func_4446() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %235 = @func_3814() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %236 = %235.0;
  %237 = @func_3370() /* ty=Tensor[(135), uint16] */;
  (%236, %237)
}

def @func_5595() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %238 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %239 = %238.2;
  %240 = @func_3243() /* ty=Tensor[(135), uint16] */;
  (%239, %240)
}

def @func_7003() -> (Tensor[(15, 16, 9), uint16],) {
  %241 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%241,)
}

def @func_16392() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %242 = @func_11418() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */;
  %243 = @func_14826() /* ty=(Tensor[(135), uint16],) */;
  %244 = %242.1;
  %245 = @func_15774() /* ty=Tensor[(135), uint16] */;
  %246 = %243.0;
  (%244, %245, %246)
}

def @func_5884() -> (Tensor[(15, 16, 9), float32],) {
  %247 = @func_5581() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), float32]) */;
  %248 = %247.1;
  (%248,)
}

def @func_7955(%var_7932: Tensor[(180, 12), uint16]) -> (Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(180, 12), int8], Tensor[(15, 16, 9), uint16]) {
  %249 = @func_5890() /* ty=(Tensor[(135), uint16],) */;
  %250 = cast(meta[relay.Constant][17] /* ty=Tensor[(180, 12), uint16] */, dtype="uint16") /* ty=Tensor[(180, 12), uint16] */;
  %251 = reshape(%250, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %252 = @func_2517(%251) /* ty=(Tensor[(6, 15, 10), int8], Tensor[(6, 15, 10), int8], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16]) */;
  %253 = cast(%var_7932, dtype="int8") /* ty=Tensor[(180, 12), int8] */;
  %254 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(180, 12), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %255 = cast(meta[relay.Constant][17] /* ty=Tensor[(180, 12), uint16] */, dtype="int8") /* ty=Tensor[(180, 12), int8] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %257 = @func_3814() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %258 = %249.0;
  %259 = %252.0;
  %260 = multiply(%255, %256) /* ty=Tensor[(180, 12), int8] */;
  %261 = %257.0;
  (%258, %259, %260, %261)
}

def @func_13926() -> Tensor[(15, 16, 9), uint16] {
  %262 = @func_13773() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %262.0
}

def @func_16591(%var_16550: Tensor[(10), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(450, 4), float32], Tensor[(135), uint16], Tensor[(10), float64], Tensor[(1014), float64]) {
  %263 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
  %264 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %265 = cast(meta[relay.Constant][18] /* ty=Tensor[(450, 4), float32] */, dtype="float32") /* ty=Tensor[(450, 4), float32] */;
  %266 = reshape(%265, newshape=[1800]) /* ty=Tensor[(1800), float32] */;
  %267 = @func_5039(%266) /* ty=(Tensor[(1056), uint32], Tensor[(135), uint16], Tensor[(1800), uint64]) */;
  %268 = cast(%var_16550, dtype="float64") /* ty=Tensor[(10), float64] */;
  %269 = cast(meta[relay.Constant][19] /* ty=Tensor[(1014), float64] */, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %270 = reshape(%268, newshape=[10]) /* ty=Tensor[(10), float64] */;
  %271 = reshape(%269, newshape=[1014]) /* ty=Tensor[(1014), float64] */;
  %272 = @func_13160(%270, %271) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(10), float64], Tensor[(13, 6, 13), float64], Tensor[(1014), float64]) */;
  %273 = %263.0;
  %274 = %264.0;
  %275 = %267.1;
  %276 = %272.0;
  (%273, %274, %275, meta[relay.Constant][18] /* ty=Tensor[(450, 4), float32] */, %276, %var_16550, meta[relay.Constant][19] /* ty=Tensor[(1014), float64] */)
}

def @func_1670(%var_1653: float32, %var_1654: Tensor[(1, 14, 13), float32]) -> (Tensor[(1, 14, 13), float32],) {
  %277 = cast(%var_1653, dtype="float32") /* ty=float32 */;
  %278 = cast(%var_1654, dtype="float32") /* ty=Tensor[(1, 14, 13), float32] */;
  %279 = maximum(%277, %278) /* ty=Tensor[(1, 14, 13), float32] */;
  (%279,)
}

def @func_16921() -> (Tensor[(1056), uint32],) {
  %280 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %281 = %280.0;
  (%281,)
}

def @func_18442(%var_18415: Tensor[(11, 6, 9), float32]) -> (Tensor[(11, 6, 9), float32], Tensor[(135), uint16], Tensor[(11, 6, 9), bool], Tensor[(182), float32], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) {
  %282 = cast(%var_18415, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %283 = @func_14124() /* ty=(Tensor[(135), uint16],) */;
  %284 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 9), bool] */;
  %285 = shape_of(%var_18415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%var_18415, dtype="bool") /* ty=Tensor[(11, 6, 9), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %288 = cast(meta[relay.Constant][21] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %289 = reshape(%288, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %290 = @func_8855(%289) /* ty=(Tensor[(15, 16, 9), float32], Tensor[(182), float32], Tensor[(462), float32], Tensor[(350), float64]) */;
  %291 = @func_12709() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32]) */;
  %292 = atan(%282) /* ty=Tensor[(11, 6, 9), float32] */;
  %293 = %283.0;
  %294 = less_equal(%286, %287) /* ty=Tensor[(11, 6, 9), bool] */;
  %295 = %290.1;
  %296 = %291.3;
  (%292, %293, %294, %295, meta[relay.Constant][21] /* ty=Tensor[(350), float64] */, %296)
}

def @func_1238(%var_1232: Tensor[(10, 7, 5), float64]) -> (Tensor[(10, 7, 5), float64],) {
  %297 = cast(%var_1232, dtype="float64") /* ty=Tensor[(10, 7, 5), float64] */;
  %298 = cosh(%297) /* ty=Tensor[(10, 7, 5), float64] */;
  (%298,)
}

def @func_9635() -> Tensor[(135), uint16] {
  %299 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %299.0
}

def @func_15219() -> (Tensor[(6, 15, 10), float32],) {
  %300 = @func_15147() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %301 = %300.1;
  (%301,)
}

def @func_10087() -> Tensor[(15, 16, 9), uint16] {
  @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_7457(%var_7407: Tensor[(5, 70), float64], %var_7423: Tensor[(5, 70), float32], %var_7440: float64) -> (Tensor[(6, 15, 10), float32], Tensor[(1, 182), float32], Tensor[(182), float32], Tensor[(5, 70), float32], float64, float64) {
  %302 = cast(%var_7407, dtype="float64") /* ty=Tensor[(5, 70), float64] */;
  %303 = cast(meta[relay.Constant][22] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %304 = reshape(%302, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %305 = reshape(%303, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %306 = @func_3779(%304, %305) /* ty=(uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) */;
  %307 = cast(%var_7407, dtype="float32") /* ty=Tensor[(5, 70), float32] */;
  %308 = log2(%307) /* ty=Tensor[(5, 70), float32] */;
  %309 = cast(%var_7423, dtype="bool") /* ty=Tensor[(5, 70), bool] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(2), int32] */;
  %311 = cast(%308, dtype="bool") /* ty=Tensor[(5, 70), bool] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %313 = greater_equal(%311, %312) /* ty=Tensor[(5, 70), bool] */;
  %314 = cast(%313, dtype="float32") /* ty=Tensor[(5, 70), float32] */;
  %315 = cast(%var_7440, dtype="float64") /* ty=float64 */;
  %316 = sin(%314) /* ty=Tensor[(5, 70), float32] */;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(5, 70), float64] */;
  %318 = cast(meta[relay.Constant][22] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %319 = reshape(%315, newshape=[]) /* ty=float64 */;
  %320 = reshape(%317, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %321 = reshape(%318, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %322 = @func_2650(%319, %320, %321) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %323 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %324 = %306.3;
  %325 = %322.2;
  (%323, %324, meta[relay.Constant][22] /* ty=Tensor[(182), float32] */, %316, %325, %var_7440)
}

def @func_4623(%var_4612: Tensor[(11, 3, 14), float32], %var_4613: Tensor[(11, 3, 14), float32], %var_4619: Tensor[(350), float64]) -> (Tensor[(11, 3, 14), float32], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(182), float32]) {
  %326 = cast(%var_4613, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %327 = shape_of(%var_4612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%var_4612, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %330 = cast(-2.63689f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %331 = cast(%var_4619, dtype="float64") /* ty=Tensor[(350), float64] */;
  %332 = cast(meta[relay.Constant][23] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %333 = reshape(%330, newshape=[]) /* ty=float64 */;
  %334 = reshape(%331, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %335 = reshape(%332, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %336 = @func_2650(%333, %334, %335) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %337 = floor_divide(%328, %329) /* ty=Tensor[(11, 3, 14), float32] */;
  %338 = %336.5;
  (%337, %338, -2.63689f64 /* ty=float64 */, %var_4619, meta[relay.Constant][23] /* ty=Tensor[(182), float32] */)
}

def @func_12413() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2160), uint16], Tensor[(135), uint16]) {
  %339 = @func_3134() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %340 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 2160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 2160), uint16] */;
  %341 = reshape(%340, newshape=[180, 12]) /* ty=Tensor[(180, 12), uint16] */;
  %342 = @func_7955(%341) /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(180, 12), int8], Tensor[(15, 16, 9), uint16]) */;
  %343 = %339.0;
  %344 = %342.0;
  %345 = @func_11030() /* ty=Tensor[(135), uint16] */;
  (%343, %344, meta[relay.Constant][24] /* ty=Tensor[(1, 2160), uint16] */, %345)
}

def @func_18858() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %346 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %347 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %348 = %346.2;
  %349 = %347.1;
  (%348, %349)
}

def @func_11418() -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) {
  %350 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
  %351 = @func_7102() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %352 = %350.1;
  %353 = %351.0;
  (%352, %353)
}

def @main(%var_19082: Tensor[(15, 2, 9), float64]) -> Tensor[(15, 2, 9), float64] {
  %354 = cast(%var_19082, dtype="float64") /* ty=Tensor[(15, 2, 9), float64] */;
  rsqrt(%354) /* ty=Tensor[(15, 2, 9), float64] */
}

def @func_10044() -> (Tensor[(135), uint16], Tensor[(13, 6, 13), float64], Tensor[(1014, 1), float64]) {
  %355 = cast(meta[relay.Constant][25] /* ty=Tensor[(1014, 1), float64] */, dtype="float64") /* ty=Tensor[(1014, 1), float64] */;
  %356 = reshape(%355, newshape=[13, 6, 13]) /* ty=Tensor[(13, 6, 13), float64] */;
  %357 = @func_6850(%356) /* ty=(Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350, 1), float64]) */;
  %358 = @func_8391() /* ty=Tensor[(135), uint16] */;
  %359 = %357.0;
  (%358, %359, meta[relay.Constant][25] /* ty=Tensor[(1014, 1), float64] */)
}

def @func_14723(%var_14721: Tensor[(350), float64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, float64, Tensor[(2940, 1), float64], Tensor[(350), float64]) {
  %360 = @func_12413() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2160), uint16], Tensor[(135), uint16]) */;
  %361 = cast(-3.51785f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %362 = cast(meta[relay.Constant][26] /* ty=Tensor[(2940, 1), float64] */, dtype="float64") /* ty=Tensor[(2940, 1), float64] */;
  %363 = cast(%var_14721, dtype="float64") /* ty=Tensor[(350), float64] */;
  %364 = reshape(%361, newshape=[]) /* ty=float64 */;
  %365 = reshape(%362, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %366 = reshape(%363, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %367 = @func_8523(%364, %365, %366) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %368 = %360.0;
  %369 = @func_9635() /* ty=Tensor[(135), uint16] */;
  %370 = %367.2;
  (%368, %369, %370, -3.51785f64 /* ty=float64 */, meta[relay.Constant][26] /* ty=Tensor[(2940, 1), float64] */, %var_14721)
}

def @func_8189() -> (Tensor[(135), uint16],) {
  %371 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
  %372 = %371.1;
  (%372,)
}

def @func_9208() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %373 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  %374 = @func_4041() /* ty=Tensor[(135), uint16] */;
  (%373, %374)
}

def @func_6623() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %375 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %376 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %377 = %375.0;
  %378 = %376.1;
  (%377, %378)
}

def @func_7593(%var_7513: Tensor[(2940), float64]) -> (Tensor[(6, 15, 10), float64], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float64], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) {
  %379 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %380 = %379.0;
  %381 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %382 = %381.1;
  %383 = cast(%382, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %384 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%380, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %387 = cast(-9.44843f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %388 = cast(%var_7513, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %389 = cast(meta[relay.Constant][27] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %390 = cast(%var_7513, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %391 = reshape(%387, newshape=[]) /* ty=float64 */;
  %392 = reshape(%388, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %393 = reshape(%389, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %394 = reshape(%390, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %395 = @func_2037(%391, %392, %393, %394) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %396 = cast(meta[relay.Constant][27] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %397 = reshape(%396, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %398 = @func_6291(%397) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) */;
  %399 = %398.3;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %401 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%380, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %404 = cast(%399, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
  %405 = divide(%385, %386) /* ty=Tensor[(6, 15, 10), float64] */;
  %406 = %395.2;
  %407 = floor_mod(%402, %403) /* ty=Tensor[(6, 15, 10), float64] */;
  %408 = rsqrt(%404) /* ty=Tensor[(6, 15, 10), float32] */;
  %409 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%405, %406, -9.44843f64 /* ty=float64 */, %var_7513, meta[relay.Constant][27] /* ty=Tensor[(350), float64] */, %407, %408, %409)
}

def @func_13561(%var_13555: Tensor[(288), uint64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(9, 1), float64], Tensor[(288), uint64]) {
  %410 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %411 = @func_9595() /* ty=(Tensor[(45), float64],) */;
  %412 = @func_10598() /* ty=(Tensor[(2, 4, 14), float64], Tensor[(135), uint16]) */;
  %413 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 1), float64] */, dtype="float64") /* ty=Tensor[(9, 1), float64] */;
  %414 = cast(%var_13555, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %415 = reshape(%413, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %416 = reshape(%414, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %417 = @func_3412(%415, %416) /* ty=(Tensor[(135), uint16], uint32, Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */;
  %418 = %410.0;
  %419 = @func_9433() /* ty=Tensor[(135), uint16] */;
  %420 = %411.0;
  %421 = %412.1;
  %422 = %417.0;
  (%418, %419, %420, %421, %422, meta[relay.Constant][28] /* ty=Tensor[(9, 1), float64] */, %var_13555)
}

def @func_2992() -> Tensor[(6, 15, 10), float32] {
  @func_2441() /* ty=Tensor[(6, 15, 10), float32] */
}

def @func_4827() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %423 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %424 = %423.2;
  %425 = @func_4714() /* ty=Tensor[(135), uint16] */;
  (%424, %425)
}

def @func_9524(%var_9505: Tensor[(5, 7, 6), uint16], %var_9506: Tensor[(5, 7, 6), uint16]) -> (Tensor[(5, 7, 6), uint16], Tensor[(6, 15, 10), float32]) {
  %426 = cast(%var_9506, dtype="uint16") /* ty=Tensor[(5, 7, 6), uint16] */;
  %427 = shape_of(%var_9505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%var_9505, dtype="uint16") /* ty=Tensor[(5, 7, 6), uint16] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %430 = bitwise_and(%428, %429) /* ty=Tensor[(5, 7, 6), uint16] */;
  %431 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  (%430, %431)
}

def @func_12228() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(231), uint16], Tensor[(2, 56), float32], Tensor[(135), uint16]) {
  %432 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %433 = @func_10306() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
  %434 = @func_3134() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %435 = cast(meta[relay.Constant][29] /* ty=Tensor[(231), uint16] */, dtype="uint16") /* ty=Tensor[(231), uint16] */;
  %436 = cast(meta[relay.Constant][29] /* ty=Tensor[(231), uint16] */, dtype="uint16") /* ty=Tensor[(231), uint16] */;
  %437 = reshape(%435, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), uint16] */;
  %438 = reshape(%436, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), uint16] */;
  %439 = @func_5101(%437, %438) /* ty=(Tensor[(3, 11, 7), uint16], Tensor[(135), uint16]) */;
  %440 = %432.5;
  %441 = %433.3;
  %442 = %434.0;
  %443 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %444 = %439.1;
  %445 = @func_7342() /* ty=Tensor[(2, 56), float32] */;
  %446 = @func_4801() /* ty=Tensor[(135), uint16] */;
  (%440, %441, %442, %443, %444, meta[relay.Constant][29] /* ty=Tensor[(231), uint16] */, %445, %446)
}

def @func_9743() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(1, 350), float64]) {
  %447 = @func_3877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) */;
  %448 = @func_3134() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %449 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 350), float64] */, dtype="float64") /* ty=Tensor[(1, 350), float64] */;
  %450 = reshape(%449, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
  %451 = @func_1238(%450) /* ty=(Tensor[(10, 7, 5), float64],) */;
  %452 = %447.2;
  %453 = %448.1;
  %454 = %451.0;
  (%452, %453, %454, meta[relay.Constant][30] /* ty=Tensor[(1, 350), float64] */)
}

def @func_16665(%var_16633: int16, %var_16634: Tensor[(9, 1, 3), int16]) -> (Tensor[(9, 1, 3), bool], Tensor[(15, 16, 9), float32]) {
  %455 = cast(%var_16633, dtype="bool") /* ty=bool */;
  %456 = cast(%var_16634, dtype="bool") /* ty=Tensor[(9, 1, 3), bool] */;
  %457 = greater_equal(%455, %456) /* ty=Tensor[(9, 1, 3), bool] */;
  %458 = @func_13032() /* ty=Tensor[(15, 16, 9), float32] */;
  (%457, %458)
}

def @func_4092(%var_4083: Tensor[(1, 182), float32]) -> (Tensor[(135), uint16], float64, float64, Tensor[(350), float64], Tensor[(1, 182), float32]) {
  %459 = cast(-5.93982f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %460 = cast(meta[relay.Constant][31] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %461 = cast(%var_4083, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %462 = reshape(%459, newshape=[]) /* ty=float64 */;
  %463 = reshape(%460, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %464 = reshape(%461, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %465 = @func_2650(%462, %463, %464) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %466 = @func_2453() /* ty=Tensor[(135), uint16] */;
  %467 = %465.2;
  (%466, %467, -5.93982f64 /* ty=float64 */, meta[relay.Constant][31] /* ty=Tensor[(350), float64] */, %var_4083)
}

def @func_16302() -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  %468 = @func_15219() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %469 = @func_12801() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
  %470 = %468.0;
  %471 = %469.2;
  (%470, %471)
}

def @func_12058() -> Tensor[(135), uint16] {
  %472 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %472.0
}

def @func_18101() -> (Tensor[(135), uint16],) {
  %473 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %474 = %473.0;
  (%474,)
}

def @func_8710() -> Tensor[(6, 15, 10), bool] {
  %475 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
  %475.2
}

def @func_12801() -> (Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  %476 = @func_10964() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %477 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %478 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %479 = %476.0;
  %480 = %477.1;
  %481 = %478.0;
  (%479, %480, %481)
}

def @func_15774() -> Tensor[(135), uint16] {
  %482 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %482.1
}

def @func_14490() -> (Tensor[(6, 15, 10), float32],) {
  %483 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %484 = %483.0;
  (%484,)
}

def @func_2414() -> (Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) {
  %485 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  %486 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(6, 15, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %489 = cast(meta[relay.Constant][34] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %490 = cast(meta[relay.Constant][35] /* ty=Tensor[(1056), uint32] */, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
  %491 = cast(meta[relay.Constant][36] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %492 = reshape(%489, newshape=[]) /* ty=uint32 */;
  %493 = reshape(%490, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), uint32] */;
  %494 = reshape(%491, newshape=[3, 45]) /* ty=Tensor[(3, 45), uint16] */;
  %495 = @func_616(%492, %493, %494) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */;
  %496 = bitwise_and(%487, %488) /* ty=Tensor[(6, 15, 10), int8] */;
  %497 = %495.4;
  (%496, %497, meta[relay.Constant][34] /* ty=uint32 */, meta[relay.Constant][35] /* ty=Tensor[(1056), uint32] */, meta[relay.Constant][36] /* ty=Tensor[(135), uint16] */)
}

def @func_7753() -> (Tensor[(6, 15, 10), float32],) {
  %498 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %499 = %498.0;
  (%499,)
}

def @func_7975() -> Tensor[(15, 16, 9), uint16] {
  %500 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %500.1
}

def @func_990(%var_967: Tensor[(3, 1, 3), float64], %var_968: Tensor[(3, 5, 3), float64], %var_984: Tensor[(2, 144), uint64]) -> (Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) {
  %501 = cast(%var_967, dtype="float64") /* ty=Tensor[(3, 1, 3), float64] */;
  %502 = cast(%var_968, dtype="float64") /* ty=Tensor[(3, 5, 3), float64] */;
  %503 = cast(%var_984, dtype="uint64") /* ty=Tensor[(2, 144), uint64] */;
  %504 = cast(%var_984, dtype="uint64") /* ty=Tensor[(2, 144), uint64] */;
  %505 = cast(meta[relay.Constant][37] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %506 = reshape(%503, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %507 = reshape(%504, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %508 = reshape(%505, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %509 = @func_475(%506, %507, %508) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
  %510 = floor_mod(%501, %502) /* ty=Tensor[(3, 5, 3), float64] */;
  %511 = %509.5;
  (%510, %511, %var_984, meta[relay.Constant][37] /* ty=Tensor[(135), uint16] */)
}

def @func_18124() -> (Tensor[(135), uint16],) {
  %512 = @func_13479() /* ty=(Tensor[(135), uint16],) */;
  %513 = %512.0;
  (%513,)
}

def @func_14065() -> (Tensor[(135), uint16],) {
  %514 = @func_10205() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %515 = %514.1;
  (%515,)
}

def @func_18746() -> Tensor[(135), uint16] {
  %516 = @func_15021() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %516.0
}

def @func_16806() -> (Tensor[(135), uint16],) {
  %517 = @func_3370() /* ty=Tensor[(135), uint16] */;
  (%517,)
}

def @func_5310() -> Tensor[(135), uint16] {
  @func_3370() /* ty=Tensor[(135), uint16] */
}

def @func_4970(%var_4962: int64, %var_4963: Tensor[(1, 2, 12), int64]) -> (Tensor[(1, 2, 12), int64],) {
  %518 = cast(%var_4962, dtype="int64") /* ty=int64 */;
  %519 = cast(%var_4963, dtype="int64") /* ty=Tensor[(1, 2, 12), int64] */;
  %520 = logical_xor(%518, %519) /* ty=Tensor[(1, 2, 12), int64] */;
  (%520,)
}

def @func_16452(%var_16422: float32) -> (Tensor[(6, 15, 10), float32], Tensor[(1, 14, 13), float32], float32, Tensor[(182), float32], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(135), uint16]) {
  %521 = @func_15147() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %522 = cast(%var_16422, dtype="float32") /* ty=float32 */;
  %523 = cast(meta[relay.Constant][38] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %524 = reshape(%522, newshape=[]) /* ty=float32 */;
  %525 = reshape(%523, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %526 = @func_1670(%524, %525) /* ty=(Tensor[(1, 14, 13), float32],) */;
  %527 = @func_11895() /* ty=(Tensor[(135), uint16],) */;
  %528 = @func_15491() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(5, 11, 6), float32], Tensor[(15, 16, 9), uint16]) */;
  %529 = @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %530 = %521.0;
  %531 = %526.0;
  %532 = %527.0;
  %533 = @func_7975() /* ty=Tensor[(15, 16, 9), uint16] */;
  %534 = %528.1;
  %535 = %529.1;
  (%530, %531, %var_16422, meta[relay.Constant][38] /* ty=Tensor[(182), float32] */, %532, %533, %534, %535)
}

def @func_5101(%var_5083: Tensor[(3, 11, 7), uint16], %var_5084: Tensor[(3, 11, 7), uint16]) -> (Tensor[(3, 11, 7), uint16], Tensor[(135), uint16]) {
  %536 = cast(%var_5084, dtype="uint16") /* ty=Tensor[(3, 11, 7), uint16] */;
  %537 = shape_of(%var_5083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%var_5083, dtype="uint16") /* ty=Tensor[(3, 11, 7), uint16] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %540 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %541 = left_shift(%538, %539) /* ty=Tensor[(3, 11, 7), uint16] */;
  %542 = %540.0;
  (%541, %542)
}

def @func_15641() -> Tensor[(135), uint16] {
  @func_4714() /* ty=Tensor[(135), uint16] */
}

def @func_5890() -> (Tensor[(135), uint16],) {
  %543 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %544 = %543.0;
  (%544,)
}

def @func_4493() -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %545 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %546 = cast(2.87629f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %547 = cast(meta[relay.Constant][39] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %548 = cast(meta[relay.Constant][40] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %549 = reshape(%546, newshape=[]) /* ty=float64 */;
  %550 = reshape(%547, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %551 = reshape(%548, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %552 = @func_3488(%549, %550, %551) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %553 = %545.0;
  %554 = %552.2;
  (%553, %554, 2.87629f64 /* ty=float64 */, meta[relay.Constant][39] /* ty=Tensor[(2940), float64] */, meta[relay.Constant][40] /* ty=Tensor[(350), float64] */)
}

def @func_13822(%var_13807: Tensor[(10), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10), float64]) {
  %555 = @func_7753() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %556 = cast(%var_13807, dtype="float64") /* ty=Tensor[(10), float64] */;
  %557 = reshape(%556, newshape=[1, 10]) /* ty=Tensor[(1, 10), float64] */;
  %558 = @func_6989(%557) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(1, 10), float64], Tensor[(135), uint16]) */;
  %559 = %555.0;
  %560 = @func_8782() /* ty=Tensor[(135), uint16] */;
  %561 = %558.3;
  (%559, %560, %561, %var_13807)
}

def @func_5813(%var_5803: Tensor[(2, 4, 14), float64]) -> (Tensor[(2, 4, 14), float64], Tensor[(2, 4, 14), float64]) {
  %562 = cast(%var_5803, dtype="float64") /* ty=Tensor[(2, 4, 14), float64] */;
  %563 = cast(%var_5803, dtype="float64") /* ty=Tensor[(2, 4, 14), float64] */;
  %564 = log10(%562) /* ty=Tensor[(2, 4, 14), float64] */;
  %565 = cosh(%563) /* ty=Tensor[(2, 4, 14), float64] */;
  (%564, %565)
}

def @func_14360() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %566 = @func_11927() /* ty=(Tensor[(135), uint16],) */;
  %567 = %566.0;
  %568 = @func_4714() /* ty=Tensor[(135), uint16] */;
  (%567, %568)
}

def @func_11895() -> (Tensor[(135), uint16],) {
  %569 = @func_4827() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %570 = %569.1;
  (%570,)
}

def @func_15356(%var_15335: Tensor[(2940), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(2940), float64], Tensor[(11, 16, 6), bool]) {
  %571 = @func_12801() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
  %572 = @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %573 = cast(meta[relay.Constant][41] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %574 = cast(%var_15335, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %575 = cast(meta[relay.Constant][42] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %576 = reshape(%573, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %577 = reshape(%574, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %578 = reshape(%575, newshape=[]) /* ty=uint32 */;
  %579 = @func_9880(%576, %577, %578) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(30, 98), float64], Tensor[(11, 16, 6), uint32], uint32, Tensor[(1056), uint32]) */;
  %580 = %579.5;
  %581 = cast(%580, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
  %582 = cast(meta[relay.Constant][42] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %583 = %571.1;
  %584 = %572.0;
  %585 = greater(%581, %582) /* ty=Tensor[(11, 16, 6), bool] */;
  (%583, %584, meta[relay.Constant][41] /* ty=Tensor[(2160), uint16] */, %var_15335, %585)
}

def @func_15986(%var_15947: int64, %var_15948: Tensor[(6, 4), int64]) -> (Tensor[(135), uint16], int64, Tensor[(88, 12), uint32], Tensor[(?, 2, 12), int8]) {
  %586 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %587 = cast(%var_15947, dtype="int64") /* ty=int64 */;
  %588 = cast(%var_15948, dtype="int64") /* ty=Tensor[(6, 4), int64] */;
  %589 = reshape(%587, newshape=[]) /* ty=int64 */;
  %590 = reshape(%588, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), int64] */;
  %591 = @func_4970(%589, %590) /* ty=(Tensor[(1, 2, 12), int64],) */;
  %592 = %591.0;
  %593 = cast(%var_15948, dtype="int8") /* ty=Tensor[(6, 4), int8] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="int8") /* ty=Tensor[(1, 2, 12), int8] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %597 = @func_6026() /* ty=Tensor[(135), uint16] */;
  %598 = %586.8;
  %599 = maximum(%595, %596) /* ty=Tensor[(?, 2, 12), int8] */;
  (%597, %var_15947, %598, %599)
}

def @func_4694() -> (Tensor[(135), uint16],) {
  %600 = @func_2453() /* ty=Tensor[(135), uint16] */;
  (%600,)
}

def @func_10994() -> (Tensor[(135), uint16],) {
  %601 = @func_10205() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %602 = %601.1;
  (%602,)
}

def @func_2453() -> Tensor[(135), uint16] {
  %603 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %603.4
}

def @func_10306() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  %604 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %605 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %606 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %607 = @func_5581() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), float32]) */;
  %608 = @func_5310() /* ty=Tensor[(135), uint16] */;
  %609 = %604.1;
  %610 = %605.0;
  %611 = %606.0;
  %612 = %607.1;
  (%608, %609, %610, %611, %612)
}

def @func_5694(%var_5677: Tensor[(175, 2), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(175, 2), float64]) {
  %613 = cast(%var_5677, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
  %614 = reshape(%613, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
  %615 = @func_1238(%614) /* ty=(Tensor[(10, 7, 5), float64],) */;
  %616 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
  %617 = %615.0;
  (%616, %617, %var_5677)
}

def @func_3243() -> Tensor[(135), uint16] {
  @func_2627() /* ty=Tensor[(135), uint16] */
}

def @func_12113() -> (Tensor[(135), uint16],) {
  %618 = @func_11171() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %619 = %618.0;
  (%619,)
}

def @func_15862(%var_15856: int64, %var_15857: Tensor[(12, 2), int64]) -> (Tensor[(350), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2, 12), int64], int64, Tensor[(12, 2), int64]) {
  %620 = @func_10017() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64]) */;
  %621 = cast(%var_15856, dtype="int64") /* ty=int64 */;
  %622 = cast(%var_15857, dtype="int64") /* ty=Tensor[(12, 2), int64] */;
  %623 = reshape(%621, newshape=[]) /* ty=int64 */;
  %624 = reshape(%622, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), int64] */;
  %625 = @func_4970(%623, %624) /* ty=(Tensor[(1, 2, 12), int64],) */;
  %626 = %620.3;
  %627 = @func_4801() /* ty=Tensor[(135), uint16] */;
  %628 = @func_4714() /* ty=Tensor[(135), uint16] */;
  %629 = %625.0;
  (%626, %627, %628, %629, %var_15856, %var_15857)
}

def @func_12754() -> Tensor[(135), uint16] {
  @func_11157() /* ty=Tensor[(135), uint16] */
}

def @func_4041() -> Tensor[(135), uint16] {
  %630 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %630.0
}

def @func_8782() -> Tensor[(135), uint16] {
  %631 = @func_8189() /* ty=(Tensor[(135), uint16],) */;
  %631.0
}

def @func_11030() -> Tensor[(135), uint16] {
  %632 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %632.0
}

def @func_6384() -> (Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) {
  %633 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %634 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 56), float64] */, dtype="float64") /* ty=Tensor[(2, 56), float64] */;
  %635 = reshape(%634, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %636 = @func_5813(%635) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(2, 4, 14), float64]) */;
  %637 = %633.1;
  %638 = %636.1;
  (%637, %638, meta[relay.Constant][43] /* ty=Tensor[(2, 56), float64] */)
}

def @func_15068() -> (Tensor[(135), uint16],) {
  %639 = @func_12567() /* ty=(Tensor[(135), uint16],) */;
  %640 = %639.0;
  (%640,)
}

def @func_10433() -> Tensor[(15, 16, 9), uint16] {
  %641 = @func_7003() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %641.0
}

def @func_9433() -> Tensor[(135), uint16] {
  %642 = @func_7631() /* ty=(Tensor[(135), uint16], Tensor[(33, 7), uint16]) */;
  %642.0
}

def @func_11927() -> (Tensor[(135), uint16],) {
  %643 = @func_9364() /* ty=Tensor[(135), uint16] */;
  (%643,)
}

def @func_13160(%var_13137: Tensor[(10), float64], %var_13151: Tensor[(1014), float64]) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(10), float64], Tensor[(13, 6, 13), float64], Tensor[(1014), float64]) {
  %644 = cast(%var_13137, dtype="float64") /* ty=Tensor[(10), float64] */;
  %645 = reshape(%644, newshape=[1, 10]) /* ty=Tensor[(1, 10), float64] */;
  %646 = @func_6989(%645) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(1, 10), float64], Tensor[(135), uint16]) */;
  %647 = cast(%var_13151, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %648 = reshape(%647, newshape=[13, 6, 13]) /* ty=Tensor[(13, 6, 13), float64] */;
  %649 = @func_6850(%648) /* ty=(Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350, 1), float64]) */;
  %650 = @func_9635() /* ty=Tensor[(135), uint16] */;
  %651 = %646.0;
  %652 = %649.0;
  (%650, %651, %var_13137, %652, %var_13151)
}

def @func_5509(%var_5493: Tensor[(182), float32]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(135), uint16], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(350), float64]) {
  %653 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %654 = cast(meta[relay.Constant][44] /* ty=Tensor[(60, 36), uint16] */, dtype="uint16") /* ty=Tensor[(60, 36), uint16] */;
  %655 = reshape(%654, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %656 = @func_4606(%655) /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(2160), uint16]) */;
  %657 = @func_4493() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %658 = %657.2;
  %659 = cast(meta[relay.Constant][44] /* ty=Tensor[(60, 36), uint16] */, dtype="uint8") /* ty=Tensor[(60, 36), uint8] */;
  %660 = cast(%658, dtype="uint8") /* ty=uint8 */;
  %661 = cast(%var_5493, dtype="float32") /* ty=Tensor[(182), float32] */;
  %662 = reshape(%661, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %663 = @func_4092(%662) /* ty=(Tensor[(135), uint16], float64, float64, Tensor[(350), float64], Tensor[(1, 182), float32]) */;
  %664 = cast(meta[relay.Constant][45] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %665 = cast(%var_5493, dtype="float32") /* ty=Tensor[(182), float32] */;
  %666 = reshape(%664, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %667 = reshape(%665, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %668 = @func_3779(%666, %667) /* ty=(uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) */;
  %669 = %653.0;
  %670 = %656.0;
  %671 = subtract(%659, %660) /* ty=Tensor[(60, 36), uint8] */;
  %672 = %663.0;
  %673 = %668.3;
  (%669, %670, %671, %672, %var_5493, %673, meta[relay.Constant][45] /* ty=Tensor[(350), float64] */)
}

def @func_5194() -> (Tensor[(135), uint16],) {
  %674 = @func_4041() /* ty=Tensor[(135), uint16] */;
  (%674,)
}

def @func_18255() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  %675 = @func_15219() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %676 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %677 = %675.0;
  %678 = %676.0;
  (%677, %678)
}

def @func_9693(%var_9650: Tensor[(6, 15, 10), float32], %var_9678: Tensor[(6, 15, 10), int16]) -> (Tensor[(6, 15, 10), uint16],) {
  %679 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %680 = %679.0;
  %681 = cast(%var_9650, dtype="int16") /* ty=Tensor[(6, 15, 10), int16] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%680, dtype="int16") /* ty=Tensor[(6, 15, 10), int16] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %685 = minimum(%683, %684) /* ty=Tensor[(6, 15, 10), int16] */;
  %686 = cast(%var_9678, dtype="uint16") /* ty=Tensor[(6, 15, 10), uint16] */;
  %687 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%685, dtype="uint16") /* ty=Tensor[(6, 15, 10), uint16] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %690 = subtract(%688, %689) /* ty=Tensor[(6, 15, 10), uint16] */;
  (%690,)
}

def @func_2650(%var_2641: float64, %var_2643: Tensor[(350), float64], %var_2648: Tensor[(182), float32]) -> (Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  %691 = cast(%var_2641, dtype="float64") /* ty=float64 */;
  %692 = cast(meta[relay.Constant][46] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %693 = cast(%var_2643, dtype="float64") /* ty=Tensor[(350), float64] */;
  %694 = cast(meta[relay.Constant][46] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %695 = reshape(%691, newshape=[]) /* ty=float64 */;
  %696 = reshape(%692, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %697 = reshape(%693, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %698 = reshape(%694, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %699 = @func_2037(%695, %696, %697, %698) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %700 = cast(%var_2641, dtype="float32") /* ty=float32 */;
  %701 = cast(%var_2648, dtype="float32") /* ty=Tensor[(182), float32] */;
  %702 = reshape(%700, newshape=[]) /* ty=float32 */;
  %703 = reshape(%701, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %704 = @func_1670(%702, %703) /* ty=(Tensor[(1, 14, 13), float32],) */;
  %705 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %706 = %699.0;
  %707 = %704.0;
  (%705, %706, %var_2641, meta[relay.Constant][46] /* ty=Tensor[(2940), float64] */, %var_2643, %707, %var_2648)
}

def @func_10762() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %708 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %709 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %710 = %708.1;
  %711 = %709.1;
  (%710, %711)
}

def @func_18669() -> (Tensor[(135), uint16],) {
  %712 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %713 = %712.0;
  (%713,)
}

def @func_11871() -> Tensor[(135), uint16] {
  %714 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %714.0
}

def @func_12984() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %715 = @func_12512() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %716 = @func_8189() /* ty=(Tensor[(135), uint16],) */;
  %717 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %718 = %715.0;
  %719 = %716.0;
  %720 = @func_5265() /* ty=Tensor[(135), uint16] */;
  %721 = %717.1;
  (%718, %719, %720, %721)
}

def @func_10598() -> (Tensor[(2, 4, 14), float64], Tensor[(135), uint16]) {
  %722 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
  %723 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
  %724 = %722.1;
  %725 = %723.0;
  (%724, %725)
}

def @func_13(%var_0: Tensor[(15, 1, 9), uint16], %var_1: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), uint16],) {
  %726 = cast(%var_0, dtype="uint16") /* ty=Tensor[(15, 1, 9), uint16] */;
  %727 = cast(%var_1, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %728 = maximum(%726, %727) /* ty=Tensor[(15, 16, 9), uint16] */;
  (%728,)
}

def @func_475(%var_440: Tensor[(9, 2, 16), uint64], %var_441: Tensor[(9, 2, 16), uint64], %var_458: Tensor[(135), uint16]) -> (Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) {
  %729 = cast(%var_441, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
  %730 = shape_of(%var_440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%var_440, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %733 = cast(%var_458, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %734 = cast(meta[relay.Constant][47] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %735 = reshape(%733, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %736 = reshape(%734, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %737 = @func_13(%735, %736) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %738 = cast(%var_458, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %739 = cast(meta[relay.Constant][47] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %740 = reshape(%738, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %741 = reshape(%739, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %742 = @func_13(%740, %741) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %743 = cast(%var_458, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %744 = %742.0;
  %745 = cast(%744, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %746 = reshape(%743, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %747 = reshape(%745, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %748 = @func_13(%746, %747) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %749 = left_shift(%731, %732) /* ty=Tensor[(9, 2, 16), uint64] */;
  %750 = %737.0;
  %751 = %748.0;
  (%749, %750, %var_458, meta[relay.Constant][47] /* ty=Tensor[(2160), uint16] */, %744, %751)
}

def @func_15021() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %752 = @func_9208() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %753 = @func_14296() /* ty=(Tensor[(135), float32], Tensor[(135), uint16]) */;
  %754 = %752.1;
  %755 = %753.1;
  (%754, %755)
}

def @func_18193() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %756 = @func_7975() /* ty=Tensor[(15, 16, 9), uint16] */;
  %757 = @func_18093() /* ty=Tensor[(135), uint16] */;
  (%756, %757)
}

def @func_3814() -> (Tensor[(15, 16, 9), uint16],) {
  %758 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %759 = %758.1;
  (%759,)
}

def @func_10964() -> (Tensor[(15, 16, 9), uint16],) {
  %760 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %761 = %760.1;
  (%761,)
}

def @func_18702() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %762 = @func_10017() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64]) */;
  %763 = @func_14490() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %764 = %762.0;
  %765 = %763.0;
  (%764, %765)
}

def @func_9425() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  %766 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
  %767 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %768 = @func_7753() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %769 = %766.0;
  %770 = %767.0;
  %771 = %768.0;
  (%769, %770, %771)
}

def @func_10641() -> Tensor[(135), uint16] {
  @func_2627() /* ty=Tensor[(135), uint16] */
}

def @func_6486() -> Tensor[(135), uint16] {
  %772 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %772.1
}

def @func_8523(%var_8505: float64, %var_8506: Tensor[(2940), float64], %var_8507: Tensor[(350), float64]) -> (Tensor[(135), uint16], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %773 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %774 = cast(%var_8505, dtype="float64") /* ty=float64 */;
  %775 = cast(%var_8506, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %776 = cast(%var_8507, dtype="float64") /* ty=Tensor[(350), float64] */;
  %777 = cast(%var_8506, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %778 = reshape(%774, newshape=[]) /* ty=float64 */;
  %779 = reshape(%775, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %780 = reshape(%776, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %781 = reshape(%777, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %782 = @func_2037(%778, %779, %780, %781) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %783 = %773.0;
  %784 = %782.1;
  (%783, %784, %var_8505, %var_8506, %var_8507)
}

def @func_13106(%var_13091: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(33, 7), float32], Tensor[(2160), uint16]) {
  %785 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %786 = cast(%var_13091, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %787 = reshape(%786, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %788 = @func_11087(%787) /* ty=(Tensor[(33, 7), float32], Tensor[(15, 16, 9), float32], Tensor[(12, 13, 7), bool], Tensor[(1092), uint8], Tensor[(15, 16, 9), float32]) */;
  %789 = %785.0;
  %790 = %788.0;
  (%789, %790, %var_13091)
}

def @func_6850(%var_6836: Tensor[(13, 6, 13), float64]) -> (Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350, 1), float64]) {
  %791 = cast(%var_6836, dtype="float64") /* ty=Tensor[(13, 6, 13), float64] */;
  %792 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %793 = cast(-7.65527f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %794 = cast(meta[relay.Constant][48] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %795 = cast(meta[relay.Constant][49] /* ty=Tensor[(350, 1), float64] */, dtype="float64") /* ty=Tensor[(350, 1), float64] */;
  %796 = reshape(%793, newshape=[]) /* ty=float64 */;
  %797 = reshape(%794, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %798 = reshape(%795, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %799 = @func_3488(%796, %797, %798) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %800 = sin(%791) /* ty=Tensor[(13, 6, 13), float64] */;
  %801 = %792.0;
  %802 = %799.6;
  (%800, %801, %802, -7.65527f64 /* ty=float64 */, meta[relay.Constant][48] /* ty=Tensor[(2940), float64] */, meta[relay.Constant][49] /* ty=Tensor[(350, 1), float64] */)
}

def @func_3877() -> (Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) {
  %803 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %804 = @func_3723() /* ty=(Tensor[(1800), float64],) */;
  %805 = %803.1;
  %806 = %804.0;
  %807 = @func_2627() /* ty=Tensor[(135), uint16] */;
  (%805, %806, %807)
}

def @func_17645(%var_17622: Tensor[(33, 7), float32]) -> (Tensor[(15, 16, 9), uint16], Tensor[(33, 7), float64]) {
  %808 = @func_10964() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %809 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
  %810 = %809.2;
  %811 = cast(%var_17622, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(2), int32] */;
  %813 = cast(%810, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %815 = %808.0;
  %816 = floor_mod(%813, %814) /* ty=Tensor[(33, 7), float64] */;
  (%815, %816)
}

def @func_3779(%var_3771: Tensor[(350), float64], %var_3772: Tensor[(1, 182), float32]) -> (uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) {
  %817 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %818 = %817.2;
  %819 = cast(%818, dtype="float64") /* ty=float64 */;
  %820 = cast(%var_3771, dtype="float64") /* ty=Tensor[(350), float64] */;
  %821 = cast(%var_3772, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %822 = reshape(%819, newshape=[]) /* ty=float64 */;
  %823 = reshape(%820, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %824 = reshape(%821, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %825 = @func_2650(%822, %823, %824) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %826 = %825.0;
  (%818, %826, %var_3771, %var_3772)
}

def @func_17589(%var_17535: Tensor[(6, 15, 10), float32], %var_17555: Tensor[(35, 10), float64], %var_17556: Tensor[(182), float32]) -> (Tensor[(6, 15, 10), uint8], Tensor[(1, 182), float32], Tensor[(35, 10), float64], Tensor[(182), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %827 = @func_12512() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %828 = %827.0;
  %829 = cast(%var_17535, dtype="uint8") /* ty=Tensor[(6, 15, 10), uint8] */;
  %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%828, dtype="uint8") /* ty=Tensor[(6, 15, 10), uint8] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %833 = cast(%var_17555, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %834 = cast(%var_17556, dtype="float32") /* ty=Tensor[(182), float32] */;
  %835 = reshape(%833, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %836 = reshape(%834, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %837 = @func_3779(%835, %836) /* ty=(uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) */;
  %838 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %839 = @func_5890() /* ty=(Tensor[(135), uint16],) */;
  %840 = @func_11171() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %841 = bitwise_xor(%831, %832) /* ty=Tensor[(6, 15, 10), uint8] */;
  %842 = %837.3;
  %843 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
  %844 = %838.0;
  %845 = %839.0;
  %846 = %840.1;
  (%841, %842, %var_17555, %var_17556, %843, %844, %845, %846)
}

def @func_6220() -> Tensor[(15, 16, 9), uint16] {
  %847 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %847.2
}

def @func_9998(%var_9988: int8, %var_9989: Tensor[(8, 5, 5), int8]) -> (Tensor[(8, 5, 5), bool],) {
  %848 = cast(%var_9988, dtype="bool") /* ty=bool */;
  %849 = cast(%var_9989, dtype="bool") /* ty=Tensor[(8, 5, 5), bool] */;
  %850 = less_equal(%848, %849) /* ty=Tensor[(8, 5, 5), bool] */;
  (%850,)
}

def @func_10526(%var_10522: Tensor[(1, 1800), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(1, 1800), float64], Tensor[(45), float64]) {
  %851 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %852 = cast(%var_10522, dtype="float64") /* ty=Tensor[(1, 1800), float64] */;
  %853 = cast(meta[relay.Constant][50] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %854 = reshape(%852, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %855 = reshape(%853, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %856 = @func_1638(%854, %855) /* ty=(Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) */;
  %857 = %851.0;
  %858 = %856.1;
  (%857, %858, %var_10522, meta[relay.Constant][50] /* ty=Tensor[(45), float64] */)
}

def @func_10205() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %859 = @func_7631() /* ty=(Tensor[(135), uint16], Tensor[(33, 7), uint16]) */;
  %860 = @func_10190() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %861 = %859.0;
  %862 = %860.1;
  (%861, %862)
}

def @func_15737() -> (Tensor[(15, 16, 9), uint16],) {
  %863 = @func_11477() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %864 = %863.0;
  (%864,)
}

def @func_10851() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %865 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %866 = %865.0;
  %867 = @func_4801() /* ty=Tensor[(135), uint16] */;
  (%866, %867)
}

def @func_9138(%var_9117: Tensor[(15, 16, 9), uint16], %var_9130: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), int8], Tensor[(182), float32], Tensor[(350), float64]) {
  %868 = @func_6220() /* ty=Tensor[(15, 16, 9), uint16] */;
  %869 = cast(%var_9117, dtype="int8") /* ty=Tensor[(15, 16, 9), int8] */;
  %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%868, dtype="int8") /* ty=Tensor[(15, 16, 9), int8] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %873 = cast(%var_9130, dtype="float64") /* ty=Tensor[(350), float64] */;
  %874 = reshape(%873, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %875 = @func_8855(%874) /* ty=(Tensor[(15, 16, 9), float32], Tensor[(182), float32], Tensor[(462), float32], Tensor[(350), float64]) */;
  %876 = multiply(%871, %872) /* ty=Tensor[(15, 16, 9), int8] */;
  %877 = %875.1;
  (%876, %877, %var_9130)
}

def @func_14938() -> (Tensor[(135), uint16],) {
  %878 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %879 = %878.1;
  (%879,)
}

def @func_4801() -> Tensor[(135), uint16] {
  @func_3243() /* ty=Tensor[(135), uint16] */
}

def @func_17253(%var_17229: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(350), float64], Tensor[(15, 16, 9), float32]) {
  %880 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %881 = cast(%var_17229, dtype="float64") /* ty=Tensor[(350), float64] */;
  %882 = reshape(%881, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %883 = @func_5694(%882) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(175, 2), float64]) */;
  %884 = @func_12801() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
  %885 = %880.0;
  %886 = %883.0;
  %887 = %884.2;
  (%885, %886, %var_17229, %887)
}

def @func_17898() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %888 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %889 = @func_11812() /* ty=Tensor[(135), uint16] */;
  %890 = %888.0;
  (%889, %890)
}

def @func_6989(%var_6926: Tensor[(1, 10), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(1, 10), float64], Tensor[(135), uint16]) {
  %891 = cast(%var_6926, dtype="float64") /* ty=Tensor[(1, 10), float64] */;
  %892 = reshape(%891, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %893 = @func_5165(%892) /* ty=(Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) */;
  %894 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
  %895 = %893.1;
  %896 = @func_6026() /* ty=Tensor[(135), uint16] */;
  (%894, %895, %var_6926, %896)
}

def @func_11087(%var_11050: Tensor[(15, 16, 9), uint16]) -> (Tensor[(33, 7), float32], Tensor[(15, 16, 9), float32], Tensor[(12, 13, 7), bool], Tensor[(1092), uint8], Tensor[(15, 16, 9), float32]) {
  %897 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
  %898 = @func_10851() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %899 = %898.0;
  %900 = cast(%var_11050, dtype="float64") /* ty=Tensor[(15, 16, 9), float64] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%899, dtype="float64") /* ty=Tensor[(15, 16, 9), float64] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %904 = floor_mod(%902, %903) /* ty=Tensor[(15, 16, 9), float64] */;
  %905 = cast(%904, dtype="float32") /* ty=Tensor[(15, 16, 9), float32] */;
  %906 = cast(meta[relay.Constant][51] /* ty=Tensor[(1092), uint8] */, dtype="uint8") /* ty=Tensor[(1092), uint8] */;
  %907 = reshape(%906, newshape=[12, 13, 7]) /* ty=Tensor[(12, 13, 7), uint8] */;
  %908 = @func_9456(%907) /* ty=(Tensor[(12, 13, 7), bool], Tensor[(2, 56), float32]) */;
  %909 = @func_5884() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %910 = %897.2;
  %911 = asin(%905) /* ty=Tensor[(15, 16, 9), float32] */;
  %912 = %908.0;
  %913 = %909.0;
  (%910, %911, %912, meta[relay.Constant][51] /* ty=Tensor[(1092), uint8] */, %913)
}

def @func_10190() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %914 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %915 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
  %916 = %914.0;
  %917 = %915.0;
  (%916, %917)
}

def @func_16323(%var_16312: Tensor[(8, 14, 16), uint64], %var_16313: Tensor[(8, 14, 16), uint64]) -> Tensor[(8, 14, 16), uint64] {
  %918 = cast(%var_16313, dtype="uint64") /* ty=Tensor[(8, 14, 16), uint64] */;
  %919 = shape_of(%var_16312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%var_16312, dtype="uint64") /* ty=Tensor[(8, 14, 16), uint64] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%920, %921) /* ty=Tensor[(8, 14, 16), uint64] */
}

def @func_6005(%var_5905: Tensor[(1056, 1), uint32], %var_5946: Tensor[(45), float64], %var_5955: Tensor[(1056, 1), float32], %var_5981: Tensor[(182), float32], %var_5985: Tensor[(5, 2), float64]) -> (Tensor[(3, 45), uint16], Tensor[(1056, 135), bool], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(1056, ?), uint16], Tensor[(15, 16, 9), uint16], Tensor[(1056, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(2160), uint16], Tensor[(5, 2), float64], Tensor[(1056, 1), float64], Tensor[(45), float64]) {
  %922 = cast(meta[relay.Constant][52] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %923 = cast(%var_5905, dtype="uint32") /* ty=Tensor[(1056, 1), uint32] */;
  %924 = @func_5310() /* ty=Tensor[(135), uint16] */;
  %925 = cast(%924, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %926 = reshape(%922, newshape=[]) /* ty=uint32 */;
  %927 = reshape(%923, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), uint32] */;
  %928 = reshape(%925, newshape=[3, 45]) /* ty=Tensor[(3, 45), uint16] */;
  %929 = @func_616(%926, %927, %928) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */;
  %930 = cast(%var_5905, dtype="bool") /* ty=Tensor[(1056, 1), bool] */;
  %931 = cast(%924, dtype="bool") /* ty=Tensor[(135), bool] */;
  %932 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %933 = cast(meta[relay.Constant][53] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %934 = cast(%var_5946, dtype="float64") /* ty=Tensor[(45), float64] */;
  %935 = %932.2;
  %936 = cast(%935, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %937 = reshape(%933, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %938 = reshape(%934, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %939 = reshape(%936, newshape=[2, 144]) /* ty=Tensor[(2, 144), uint64] */;
  %940 = @func_990(%937, %938, %939) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */;
  %941 = cast(%var_5905, dtype="float32") /* ty=Tensor[(1056, 1), float32] */;
  %942 = sin(%941) /* ty=Tensor[(1056, 1), float32] */;
  %943 = cast(%var_5955, dtype="uint16") /* ty=Tensor[(1056, 1), uint16] */;
  %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(2), int32] */;
  %945 = cast(%942, dtype="uint16") /* ty=Tensor[(1056, 1), uint16] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %947 = cast(%942, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %948 = asinh(%947) /* ty=Tensor[(1056, 1), float64] */;
  %949 = cast(%948, dtype="float32") /* ty=Tensor[(1056, 1), float32] */;
  %950 = cast(meta[relay.Constant][52] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
  %951 = cast(%var_5981, dtype="float32") /* ty=Tensor[(182), float32] */;
  %952 = reshape(%950, newshape=[]) /* ty=float32 */;
  %953 = reshape(%951, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %954 = @func_1670(%952, %953) /* ty=(Tensor[(1, 14, 13), float32],) */;
  %955 = cast(%var_5985, dtype="float64") /* ty=Tensor[(5, 2), float64] */;
  %956 = reshape(%955, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %957 = @func_5165(%956) /* ty=(Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) */;
  %958 = cast(%948, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %959 = log(%958) /* ty=Tensor[(1056, 1), float64] */;
  %960 = cast(%959, dtype="float32") /* ty=Tensor[(1056, 1), float32] */;
  %961 = cast(meta[relay.Constant][52] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
  %962 = divide(%960, %961) /* ty=Tensor[(1056, 1), float32] */;
  %963 = cast(%962, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %964 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %965 = %929.3;
  %966 = not_equal(%930, %931) /* ty=Tensor[(1056, 135), bool] */;
  %967 = %940.3;
  %968 = bitwise_xor(%945, %946) /* ty=Tensor[(1056, ?), uint16] */;
  %969 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
  %970 = log10(%949) /* ty=Tensor[(1056, 1), float32] */;
  %971 = %954.0;
  %972 = %957.0;
  %973 = atan(%963) /* ty=Tensor[(1056, 1), float64] */;
  %974 = %964.11;
  (%965, %966, %935, %967, meta[relay.Constant][53] /* ty=Tensor[(9), float64] */, %var_5946, %968, %969, %970, %971, %var_5981, %972, %var_5985, %973, %974)
}

def @func_6196() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) {
  %975 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %976 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %977 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 3, 5), int64] */, dtype="int8") /* ty=Tensor[(5, 3, 5), int8] */;
  %978 = cast(-2 /* ty=int64 */, dtype="int8") /* ty=int8 */;
  %979 = logical_xor(%977, %978) /* ty=Tensor[(5, 3, 5), int8] */;
  %980 = cast(-2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %981 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 3, 5), int64] */, dtype="int64") /* ty=Tensor[(5, 3, 5), int64] */;
  %982 = right_shift(%980, %981) /* ty=Tensor[(5, 3, 5), int64] */;
  %983 = cast(%982, dtype="bool") /* ty=Tensor[(5, 3, 5), bool] */;
  %984 = shape_of(%979, dtype="int32") /* ty=Tensor[(3), int32] */;
  %985 = cast(%979, dtype="bool") /* ty=Tensor[(5, 3, 5), bool] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %987 = greater(%985, %986) /* ty=Tensor[(5, 3, 5), bool] */;
  %988 = cast(%987, dtype="float64") /* ty=Tensor[(5, 3, 5), float64] */;
  %989 = asinh(%988) /* ty=Tensor[(5, 3, 5), float64] */;
  %990 = cast(%989, dtype="float32") /* ty=Tensor[(5, 3, 5), float32] */;
  %991 = rsqrt(%990) /* ty=Tensor[(5, 3, 5), float32] */;
  %992 = cast(%979, dtype="float32") /* ty=Tensor[(5, 3, 5), float32] */;
  %993 = shape_of(%991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%991, dtype="float32") /* ty=Tensor[(5, 3, 5), float32] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %996 = cast(%989, dtype="float32") /* ty=Tensor[(5, 3, 5), float32] */;
  %997 = @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %998 = @func_3243() /* ty=Tensor[(135), uint16] */;
  %999 = %975.1;
  %1000 = %976.4;
  %1001 = floor_divide(%994, %995) /* ty=Tensor[(5, 3, 5), float32] */;
  %1002 = acosh(%996) /* ty=Tensor[(5, 3, 5), float32] */;
  %1003 = %997.0;
  (%998, %999, %1000, %1001, %1002, %1003)
}

def @func_7342() -> Tensor[(2, 56), float32] {
  %1004 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
  %1005 = %1004.2;
  %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(2, 56), float32] */;
  sqrt(%1006) /* ty=Tensor[(2, 56), float32] */
}

def @func_12346() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1007 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %1008 = @func_10851() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1009 = %1007.0;
  %1010 = %1008.1;
  %1011 = @func_11563() /* ty=Tensor[(135), uint16] */;
  (%1009, %1010, %1011)
}

def @func_17201(%var_17156: Tensor[(33, 7), float32], %var_17172: Tensor[(2940), float64], %var_17173: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(33, 7), bool], Tensor[(33, 7), bool], Tensor[(6, 15, 10), float32], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %1012 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1013 = @func_10433() /* ty=Tensor[(15, 16, 9), uint16] */;
  %1014 = cast(%1013, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %1015 = reshape(%1014, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1016 = @func_11087(%1015) /* ty=(Tensor[(33, 7), float32], Tensor[(15, 16, 9), float32], Tensor[(12, 13, 7), bool], Tensor[(1092), uint8], Tensor[(15, 16, 9), float32]) */;
  %1017 = %1016.0;
  %1018 = cast(%var_17156, dtype="bool") /* ty=Tensor[(33, 7), bool] */;
  %1019 = shape_of(%1017, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1020 = cast(%1017, dtype="bool") /* ty=Tensor[(33, 7), bool] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1022 = cast(%var_17156, dtype="bool") /* ty=Tensor[(33, 7), bool] */;
  %1023 = shape_of(%1017, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1024 = cast(%1017, dtype="bool") /* ty=Tensor[(33, 7), bool] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1026 = @func_16302() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
  %1027 = cast(1.96163f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1028 = cast(%var_17172, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %1029 = cast(%var_17173, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1030 = reshape(%1027, newshape=[]) /* ty=float64 */;
  %1031 = reshape(%1028, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %1032 = reshape(%1029, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1033 = @func_8523(%1030, %1031, %1032) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %1034 = %1012.0;
  %1035 = greater(%1020, %1021) /* ty=Tensor[(33, 7), bool] */;
  %1036 = less(%1024, %1025) /* ty=Tensor[(33, 7), bool] */;
  %1037 = %1026.0;
  %1038 = %1033.3;
  (%1034, %1013, %1035, %1036, %1037, %1038, 1.96163f64 /* ty=float64 */, %var_17172, %var_17173)
}

def @func_3221() -> (Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) {
  %1039 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %1040 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1041 = %1039.3;
  %1042 = %1040.0;
  (%1041, %1042)
}

def @func_1145(%var_1124: Tensor[(11, 8, 11), float64]) -> (Tensor[(11, 8, 11), float64], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) {
  %1043 = cast(%var_1124, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  %1044 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(11, 8, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1045 = cast(meta[relay.Constant][55] /* ty=Tensor[(11, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1047 = cast(meta[relay.Constant][56] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1048 = cast(meta[relay.Constant][57] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %1049 = cast(meta[relay.Constant][58] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1050 = reshape(%1047, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %1051 = reshape(%1048, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %1052 = reshape(%1049, newshape=[2, 144]) /* ty=Tensor[(2, 144), uint64] */;
  %1053 = @func_990(%1050, %1051, %1052) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */;
  %1054 = power(%1045, %1046) /* ty=Tensor[(11, 8, 11), float64] */;
  %1055 = %1053.1;
  (%1054, %1055, meta[relay.Constant][56] /* ty=Tensor[(9), float64] */, meta[relay.Constant][57] /* ty=Tensor[(45), float64] */, meta[relay.Constant][58] /* ty=Tensor[(288), uint64] */)
}

def @func_18982() -> Tensor[(135), uint16] {
  @func_11563() /* ty=Tensor[(135), uint16] */
}

def @func_7148(%var_7113: Tensor[(1056), uint32], %var_7115: Tensor[(182), float32], %var_7136: Tensor[(350), float64], %var_7137: Tensor[(968), float64]) -> (Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(5, 9), float64], Tensor[(182), float32], Tensor[(10), float64], Tensor[(2, 4, 14), float32], float64, Tensor[(350), float64], Tensor[(968), float64], Tensor[(6, 15, 10), float32]) {
  %1056 = cast(%var_7113, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
  %1057 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 9), float64] */;
  %1058 = cast(%var_7113, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %1059 = cast(%var_7115, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1060 = cast(meta[relay.Constant][60] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %1061 = reshape(%1056, newshape=[1056, 1]) /* ty=Tensor[(1056, 1), uint32] */;
  %1062 = reshape(%1057, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %1063 = reshape(%1058, newshape=[1056, 1]) /* ty=Tensor[(1056, 1), float32] */;
  %1064 = reshape(%1059, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1065 = reshape(%1060, newshape=[5, 2]) /* ty=Tensor[(5, 2), float64] */;
  %1066 = @func_6005(%1061, %1062, %1063, %1064, %1065) /* ty=(Tensor[(3, 45), uint16], Tensor[(1056, 135), bool], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(1056, ?), uint16], Tensor[(15, 16, 9), uint16], Tensor[(1056, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(2160), uint16], Tensor[(5, 2), float64], Tensor[(1056, 1), float64], Tensor[(45), float64]) */;
  %1067 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
  %1068 = %1067.1;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(2, 4, 14), float32] */;
  %1070 = cast(%var_7136, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1071 = cast(%var_7137, dtype="float64") /* ty=Tensor[(968), float64] */;
  %1072 = reshape(%1070, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1073 = reshape(%1071, newshape=[22, 44]) /* ty=Tensor[(22, 44), float64] */;
  %1074 = @func_2771(%1072, %1073) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(9), float64], Tensor[(22, 44), float64]) */;
  %1075 = %1066.10;
  %1076 = sigmoid(%1069) /* ty=Tensor[(2, 4, 14), float32] */;
  %1077 = %1074.2;
  %1078 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  (%1075, %var_7113, meta[relay.Constant][59] /* ty=Tensor[(5, 9), float64] */, %var_7115, meta[relay.Constant][60] /* ty=Tensor[(10), float64] */, %1076, %1077, %var_7136, %var_7137, %1078)
}

def @func_7713(%var_7657: Tensor[(11, 88), float64]) -> (Tensor[(135), uint16], Tensor[(350), float64], Tensor[(5, 70), float64], Tensor[(11, 88), float64], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16]) {
  %1079 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1080 = cast(meta[relay.Constant][61] /* ty=Tensor[(5, 70), float64] */, dtype="float64") /* ty=Tensor[(5, 70), float64] */;
  %1081 = cast(%var_7657, dtype="float64") /* ty=Tensor[(11, 88), float64] */;
  %1082 = reshape(%1080, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1083 = reshape(%1081, newshape=[22, 44]) /* ty=Tensor[(22, 44), float64] */;
  %1084 = @func_2771(%1082, %1083) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(9), float64], Tensor[(22, 44), float64]) */;
  %1085 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 88), float64] */, dtype="float64") /* ty=Tensor[(11, 88), float64] */;
  %1086 = shape_of(%var_7657, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1087 = cast(%var_7657, dtype="float64") /* ty=Tensor[(11, 88), float64] */;
  %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1089 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %1090 = @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1091 = %1079.1;
  %1092 = %1084.1;
  %1093 = floor_divide(%1087, %1088) /* ty=Tensor[(11, 88), float64] */;
  %1094 = %1089.2;
  %1095 = %1090.0;
  (%1091, %1092, meta[relay.Constant][61] /* ty=Tensor[(5, 70), float64] */, %1093, %1094, %1095)
}

def @func_12081() -> (Tensor[(135), uint16], Tensor[(1800), float64]) {
  %1096 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1097 = @func_3877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) */;
  %1098 = %1096.0;
  %1099 = %1097.1;
  (%1098, %1099)
}

def @func_12449() -> (Tensor[(135), uint16],) {
  %1100 = @func_11157() /* ty=Tensor[(135), uint16] */;
  (%1100,)
}

def @func_17507() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1056), uint32]) {
  %1101 = @func_14826() /* ty=(Tensor[(135), uint16],) */;
  %1102 = @func_15575() /* ty=(Tensor[(135), uint16],) */;
  %1103 = @func_16921() /* ty=(Tensor[(1056), uint32],) */;
  %1104 = %1101.0;
  %1105 = %1102.0;
  %1106 = %1103.0;
  (%1104, %1105, %1106)
}

def @func_4907(%var_4852: Tensor[(2160), uint16], %var_4873: float64) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(10, 7, 5), float64], float64, Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(1, 2940), float64]) {
  %1107 = @func_3134() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1108 = %1107.0;
  %1109 = cast(%1108, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1110 = cast(%var_4852, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1111 = reshape(%1109, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %1112 = reshape(%1110, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1113 = @func_13(%1111, %1112) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1114 = cast(%var_4873, dtype="float64") /* ty=float64 */;
  %1115 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 2940), float64] */, dtype="float64") /* ty=Tensor[(1, 2940), float64] */;
  %1116 = cast(meta[relay.Constant][64] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1117 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 2940), float64] */, dtype="float64") /* ty=Tensor[(1, 2940), float64] */;
  %1118 = reshape(%1114, newshape=[]) /* ty=float64 */;
  %1119 = reshape(%1115, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1120 = reshape(%1116, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1121 = reshape(%1117, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1122 = @func_2037(%1118, %1119, %1120, %1121) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %1123 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %1124 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1125 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 2940), float64] */, dtype="float64") /* ty=Tensor[(1, 2940), float64] */;
  %1126 = %1113.0;
  %1127 = %1122.0;
  %1128 = %1123.0;
  %1129 = %1124.0;
  %1130 = tan(%1125) /* ty=Tensor[(1, 2940), float64] */;
  (%1108, %1126, %var_4852, %1127, %var_4873, meta[relay.Constant][64] /* ty=Tensor[(350), float64] */, %1128, %1129, %1130)
}

def @func_14805(%var_14786: float64) -> (Tensor[(6, 15, 10), float32], float64, Tensor[(1, 182), bool], Tensor[(350), float64], Tensor[(210, 14), float32], Tensor[(135), uint16]) {
  %1131 = cast(%var_14786, dtype="float64") /* ty=float64 */;
  %1132 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 182), float32] */, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %1133 = reshape(%1131, newshape=[]) /* ty=float64 */;
  %1134 = reshape(%1132, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %1135 = @func_12919(%1133, %1134) /* ty=(Tensor[(14, 2160), float32], Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(182, 1), float32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1136 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 182), float32] */, dtype="bool") /* ty=Tensor[(1, 182), bool] */;
  %1137 = cast(%var_14786, dtype="bool") /* ty=bool */;
  %1138 = cast(meta[relay.Constant][66] /* ty=Tensor[(210, 14), float64] */, dtype="float64") /* ty=Tensor[(210, 14), float64] */;
  %1139 = reshape(%1138, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %1140 = @func_7593(%1139) /* ty=(Tensor[(6, 15, 10), float64], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float64], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */;
  %1141 = cast(meta[relay.Constant][66] /* ty=Tensor[(210, 14), float64] */, dtype="float32") /* ty=Tensor[(210, 14), float32] */;
  %1142 = @func_11802() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1143 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %1144 = %1135.3;
  %1145 = logical_or(%1136, %1137) /* ty=Tensor[(1, 182), bool] */;
  %1146 = %1140.4;
  %1147 = log(%1141) /* ty=Tensor[(210, 14), float32] */;
  %1148 = %1142.0;
  (%1143, %1144, %1145, %1146, %1147, %1148)
}

def @func_17709() -> (Tensor[(135), uint16], Tensor[(1800), float64], Tensor[(6, 15, 10), float32]) {
  %1149 = @func_12130() /* ty=(Tensor[(135), uint16],) */;
  %1150 = @func_3723() /* ty=(Tensor[(1800), float64],) */;
  %1151 = %1149.0;
  %1152 = %1150.0;
  %1153 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  (%1151, %1152, %1153)
}

def @func_5423() -> (Tensor[(6, 15, 10), float32],) {
  %1154 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1155 = %1154.0;
  (%1155,)
}

def @func_14296() -> (Tensor[(135), float32], Tensor[(135), uint16]) {
  %1156 = @func_10190() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1157 = %1156.1;
  %1158 = cast(%1157, dtype="float32") /* ty=Tensor[(135), float32] */;
  %1159 = @func_12130() /* ty=(Tensor[(135), uint16],) */;
  %1160 = sin(%1158) /* ty=Tensor[(135), float32] */;
  %1161 = %1159.0;
  (%1160, %1161)
}

def @func_4372() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1162 = @func_4041() /* ty=Tensor[(135), uint16] */;
  %1163 = @func_2627() /* ty=Tensor[(135), uint16] */;
  %1164 = @func_3243() /* ty=Tensor[(135), uint16] */;
  (%1162, %1163, %1164)
}

def @func_7287(%var_7270: float64, %var_7272: Tensor[(1, 182), float32]) -> (Tensor[(135), uint16], Tensor[(3, 11, 7), uint16], Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(350), float64], Tensor[(15, 16, 9), uint16], Tensor[(?, 14, 13), bool]) {
  %1165 = @func_6714() /* ty=(Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(3, 11, 7), uint16], Tensor[(33, 7), uint16]) */;
  %1166 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1167 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1168 = @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1169 = cast(%var_7270, dtype="float64") /* ty=float64 */;
  %1170 = cast(meta[relay.Constant][67] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1171 = cast(%var_7272, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %1172 = reshape(%1169, newshape=[]) /* ty=float64 */;
  %1173 = reshape(%1170, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1174 = reshape(%1171, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1175 = @func_2650(%1172, %1173, %1174) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %1176 = %1175.5;
  %1177 = cast(%var_7272, dtype="bool") /* ty=Tensor[(1, 182), bool] */;
  %1178 = shape_of(%1176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1179 = cast(%1176, dtype="bool") /* ty=Tensor[(1, 14, 13), bool] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1181 = @func_4041() /* ty=Tensor[(135), uint16] */;
  %1182 = %1165.3;
  %1183 = %1166.0;
  %1184 = %1167.1;
  %1185 = %1168.0;
  %1186 = logical_or(%1179, %1180) /* ty=Tensor[(?, 14, 13), bool] */;
  (%1181, %1182, %1183, %1184, %var_7270, meta[relay.Constant][67] /* ty=Tensor[(350), float64] */, %1185, %1186)
}

def @func_13345() -> (Tensor[(6, 15, 10), float32], Tensor[(33, 7), float64]) {
  %1187 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1188 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
  %1189 = %1188.2;
  %1190 = cast(%1189, dtype="float32") /* ty=Tensor[(33, 7), float32] */;
  %1191 = cosh(%1190) /* ty=Tensor[(33, 7), float32] */;
  %1192 = cast(%1191, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %1193 = atanh(%1192) /* ty=Tensor[(33, 7), float64] */;
  %1194 = cast(%1191, dtype="int64") /* ty=Tensor[(33, 7), int64] */;
  %1195 = shape_of(%1193, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1196 = cast(%1193, dtype="int64") /* ty=Tensor[(33, 7), int64] */;
  %1197 = dyn.reshape(%1194, %1195, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1198 = logical_xor(%1196, %1197) /* ty=Tensor[(33, 7), int64] */;
  %1199 = cast(%1198, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %1200 = %1187.0;
  %1201 = log(%1199) /* ty=Tensor[(33, 7), float64] */;
  (%1200, %1201)
}

def @func_3069() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  %1202 = @func_2453() /* ty=Tensor[(135), uint16] */;
  %1203 = cast(%1202, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1204 = cast(meta[relay.Constant][68] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1205 = reshape(%1203, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %1206 = reshape(%1204, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1207 = @func_13(%1205, %1206) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1208 = %1207.0;
  (%1202, %1208, meta[relay.Constant][68] /* ty=Tensor[(2160), uint16] */)
}

def @func_18949() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1209 = @func_16806() /* ty=(Tensor[(135), uint16],) */;
  %1210 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
  %1211 = %1209.0;
  %1212 = @func_2453() /* ty=Tensor[(135), uint16] */;
  %1213 = %1210.0;
  (%1211, %1212, %1213)
}

def @func_4235() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %1214 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  %1215 = @func_3243() /* ty=Tensor[(135), uint16] */;
  (%1214, %1215)
}

def @func_18862() -> (Tensor[(15, 16, 9), float32],) {
  %1216 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %1217 = %1216.0;
  (%1217,)
}

def @func_5655() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %1218 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1219 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1220 = %1218.1;
  %1221 = %1219.0;
  (%1220, %1221)
}

def @func_8998() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1222 = @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1223 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %1224 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %1225 = @func_8391() /* ty=Tensor[(135), uint16] */;
  %1226 = %1222.0;
  %1227 = %1223.0;
  %1228 = %1224.0;
  (%1225, %1226, %1227, %1228)
}

def @func_11171() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1229 = @func_10994() /* ty=(Tensor[(135), uint16],) */;
  %1230 = @func_8998() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1231 = %1229.0;
  %1232 = %1230.3;
  (%1231, %1232)
}

def @func_6829(%var_6822: Tensor[(7, 8, 4), bool], %var_6823: Tensor[(7, 8, 4), bool]) -> (Tensor[(7, 8, 4), bool],) {
  %1233 = cast(%var_6823, dtype="bool") /* ty=Tensor[(7, 8, 4), bool] */;
  %1234 = shape_of(%var_6822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1235 = cast(%var_6822, dtype="bool") /* ty=Tensor[(7, 8, 4), bool] */;
  %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1237 = logical_and(%1235, %1236) /* ty=Tensor[(7, 8, 4), bool] */;
  (%1237,)
}

def @func_11538(%var_11524: Tensor[(968), float64]) -> (Tensor[(135), uint16], Tensor[(1800), float64], Tensor[(15, 16, 9), uint16], Tensor[(968), float64]) {
  %1238 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %1239 = @func_3877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) */;
  %1240 = cast(%var_11524, dtype="float64") /* ty=Tensor[(968), float64] */;
  %1241 = reshape(%1240, newshape=[11, 88]) /* ty=Tensor[(11, 88), float64] */;
  %1242 = @func_7713(%1241) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], Tensor[(5, 70), float64], Tensor[(11, 88), float64], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16]) */;
  %1243 = %1238.0;
  %1244 = %1239.1;
  %1245 = %1242.5;
  (%1243, %1244, %1245, %var_11524)
}

def @func_12848(%var_12810: Tensor[(10, 7, 11), bool], %var_12811: Tensor[(10, 7, 11), bool]) -> (Tensor[(10, 7, 11), float32], Tensor[(6, 15, 10), float32]) {
  %1246 = cast(%var_12811, dtype="bool") /* ty=Tensor[(10, 7, 11), bool] */;
  %1247 = shape_of(%var_12810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1248 = cast(%var_12810, dtype="bool") /* ty=Tensor[(10, 7, 11), bool] */;
  %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1250 = logical_and(%1248, %1249) /* ty=Tensor[(10, 7, 11), bool] */;
  %1251 = cast(%1250, dtype="float32") /* ty=Tensor[(10, 7, 11), float32] */;
  %1252 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1253 = sin(%1251) /* ty=Tensor[(10, 7, 11), float32] */;
  %1254 = %1252.0;
  (%1253, %1254)
}

def @func_16883() -> (Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(182), float32], Tensor[(6, 15, 10), float32]) {
  %1255 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1256 = cast(meta[relay.Constant][69] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1257 = reshape(%1256, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1258 = @func_5509(%1257) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(135), uint16], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(350), float64]) */;
  %1259 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %1260 = %1255.2;
  %1261 = %1258.2;
  %1262 = %1259.1;
  (%1260, %1261, meta[relay.Constant][69] /* ty=Tensor[(182), float32] */, %1262)
}

def @func_3986() -> (Tensor[(6, 15, 10), float32],) {
  %1263 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  (%1263,)
}

def @func_11652(%var_11607: Tensor[(1056), uint32], %var_11609: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), float32], Tensor[(15, 16, 9), uint16], Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(182), float32], Tensor[(350), float64], Tensor[(968), float64]) {
  %1264 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %1265 = %1264.0;
  %1266 = cast(%1265, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %1267 = reshape(%1266, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %1268 = @func_11311(%1267) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %1269 = cast(%var_11607, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
  %1270 = cast(meta[relay.Constant][70] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1271 = cast(%var_11609, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1272 = cast(meta[relay.Constant][71] /* ty=Tensor[(968), float64] */, dtype="float64") /* ty=Tensor[(968), float64] */;
  %1273 = reshape(%1269, newshape=[1056]) /* ty=Tensor[(1056), uint32] */;
  %1274 = reshape(%1270, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1275 = reshape(%1271, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1276 = reshape(%1272, newshape=[968]) /* ty=Tensor[(968), float64] */;
  %1277 = @func_7148(%1273, %1274, %1275, %1276) /* ty=(Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(5, 9), float64], Tensor[(182), float32], Tensor[(10), float64], Tensor[(2, 4, 14), float32], float64, Tensor[(350), float64], Tensor[(968), float64], Tensor[(6, 15, 10), float32]) */;
  %1278 = %1268.1;
  %1279 = %1277.0;
  (%1265, %1278, %1279, %var_11607, meta[relay.Constant][70] /* ty=Tensor[(182), float32] */, %var_11609, meta[relay.Constant][71] /* ty=Tensor[(968), float64] */)
}

def @func_13638() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %1280 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %1281 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1282 = %1280.0;
  %1283 = %1281.0;
  (%1282, %1283)
}

def @func_15540() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 182), float32], Tensor[(350), float64], float64) {
  %1284 = @func_10762() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1285 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1286 = cast(meta[relay.Constant][72] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1287 = cast(meta[relay.Constant][72] /* ty=Tensor[(350), float64] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %1288 = cast(-5.11528f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1289 = reshape(%1286, newshape=[5, 70]) /* ty=Tensor[(5, 70), float64] */;
  %1290 = reshape(%1287, newshape=[5, 70]) /* ty=Tensor[(5, 70), float32] */;
  %1291 = reshape(%1288, newshape=[]) /* ty=float64 */;
  %1292 = @func_7457(%1289, %1290, %1291) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1, 182), float32], Tensor[(182), float32], Tensor[(5, 70), float32], float64, float64) */;
  %1293 = %1284.1;
  %1294 = %1285.2;
  %1295 = %1292.1;
  (%1293, %1294, %1295, meta[relay.Constant][72] /* ty=Tensor[(350), float64] */, -5.11528f64 /* ty=float64 */)
}

def @func_5165(%var_5127: Tensor[(2, 1, 5), float64]) -> (Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) {
  %1296 = cast(meta[relay.Constant][73] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1297 = reshape(%1296, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %1298 = @func_4606(%1297) /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(2160), uint16]) */;
  %1299 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %1300 = cast(%var_5127, dtype="float64") /* ty=Tensor[(2, 1, 5), float64] */;
  %1301 = cos(%1300) /* ty=Tensor[(2, 1, 5), float64] */;
  %1302 = cast(%var_5127, dtype="bool") /* ty=Tensor[(2, 1, 5), bool] */;
  %1303 = shape_of(%1301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1304 = cast(%1301, dtype="bool") /* ty=Tensor[(2, 1, 5), bool] */;
  %1305 = dyn.reshape(%1302, %1303, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1306 = %1298.2;
  %1307 = %1299.1;
  %1308 = less(%1304, %1305) /* ty=Tensor[(2, ?, 5), bool] */;
  (%1306, meta[relay.Constant][73] /* ty=Tensor[(2160), uint16] */, %1307, %1308)
}

def @func_14648() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint16]) {
  %1309 = @func_8998() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1310 = cast(meta[relay.Constant][74] /* ty=Tensor[(60, 36), uint16] */, dtype="uint16") /* ty=Tensor[(60, 36), uint16] */;
  %1311 = reshape(%1310, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %1312 = @func_11311(%1311) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %1313 = @func_10700() /* ty=Tensor[(6, 15, 10), float32] */;
  %1314 = %1309.3;
  %1315 = %1312.0;
  (%1313, %1314, %1315, meta[relay.Constant][74] /* ty=Tensor[(60, 36), uint16] */)
}

def @func_16678() -> Tensor[(135), uint16] {
  %1316 = @func_10598() /* ty=(Tensor[(2, 4, 14), float64], Tensor[(135), uint16]) */;
  %1316.1
}

def @func_8855(%var_8852: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), float32], Tensor[(182), float32], Tensor[(462), float32], Tensor[(350), float64]) {
  %1317 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %1318 = cast(meta[relay.Constant][75] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %1319 = cast(meta[relay.Constant][75] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %1320 = cast(%var_8852, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1321 = reshape(%1318, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
  %1322 = reshape(%1319, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
  %1323 = reshape(%1320, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1324 = @func_4623(%1321, %1322, %1323) /* ty=(Tensor[(11, 3, 14), float32], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(182), float32]) */;
  %1325 = %1317.0;
  %1326 = %1324.4;
  (%1325, %1326, meta[relay.Constant][75] /* ty=Tensor[(462), float32] */, %var_8852)
}

def @func_2848() -> (Tensor[(135), uint16],) {
  %1327 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %1328 = %1327.4;
  (%1328,)
}

def @func_14826() -> (Tensor[(135), uint16],) {
  %1329 = @func_14124() /* ty=(Tensor[(135), uint16],) */;
  %1330 = %1329.0;
  (%1330,)
}

def @func_15491() -> (Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(5, 11, 6), float32], Tensor[(15, 16, 9), uint16]) {
  %1331 = cast(meta[relay.Constant][76] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1332 = cast(meta[relay.Constant][77] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1333 = reshape(%1331, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %1334 = reshape(%1332, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1335 = @func_3412(%1333, %1334) /* ty=(Tensor[(135), uint16], uint32, Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */;
  %1336 = @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1337 = cast(meta[relay.Constant][78] /* ty=Tensor[(5, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 6), float32] */;
  %1338 = log10(%1337) /* ty=Tensor[(5, 11, 6), float32] */;
  %1339 = cast(%1338, dtype="float32") /* ty=Tensor[(5, 11, 6), float32] */;
  %1340 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(5, 11, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1341 = cast(meta[relay.Constant][78] /* ty=Tensor[(5, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 6), float32] */;
  %1342 = dyn.reshape(%1339, %1340, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1343 = %1335.2;
  %1344 = %1336.1;
  %1345 = maximum(%1341, %1342) /* ty=Tensor[(5, 11, 6), float32] */;
  %1346 = @func_10087() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%1343, meta[relay.Constant][76] /* ty=Tensor[(9), float64] */, meta[relay.Constant][77] /* ty=Tensor[(288), uint64] */, %1344, %1345, %1346)
}

def @func_14124() -> (Tensor[(135), uint16],) {
  %1347 = @func_12984() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1348 = %1347.3;
  (%1348,)
}

def @func_10017() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64]) {
  %1349 = @func_9077() /* ty=(Tensor[(135), uint16],) */;
  %1350 = cast(meta[relay.Constant][79] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1351 = reshape(%1350, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
  %1352 = @func_1238(%1351) /* ty=(Tensor[(10, 7, 5), float64],) */;
  %1353 = %1349.0;
  %1354 = @func_5265() /* ty=Tensor[(135), uint16] */;
  %1355 = %1352.0;
  (%1353, %1354, %1355, meta[relay.Constant][79] /* ty=Tensor[(350), float64] */)
}

def @func_10940(%var_10929: float64, %var_10930: Tensor[(3, 2, 1), float64]) -> (Tensor[(3, 2, 1), float64], Tensor[(135), uint16]) {
  %1356 = cast(%var_10929, dtype="float64") /* ty=float64 */;
  %1357 = cast(%var_10930, dtype="float64") /* ty=Tensor[(3, 2, 1), float64] */;
  %1358 = @func_9208() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1359 = mod(%1356, %1357) /* ty=Tensor[(3, 2, 1), float64] */;
  %1360 = %1358.1;
  (%1359, %1360)
}

def @func_17349() -> Tensor[(135), uint16] {
  %1361 = @func_4694() /* ty=(Tensor[(135), uint16],) */;
  %1361.0
}

def @func_10503() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) {
  %1362 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %1363 = @func_7631() /* ty=(Tensor[(135), uint16], Tensor[(33, 7), uint16]) */;
  %1364 = %1363.1;
  %1365 = cast(%1364, dtype="float32") /* ty=Tensor[(33, 7), float32] */;
  %1366 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  %1367 = %1362.1;
  %1368 = sqrt(%1365) /* ty=Tensor[(33, 7), float32] */;
  (%1366, %1367, %1368)
}

def @func_13479() -> (Tensor[(135), uint16],) {
  %1369 = @func_12058() /* ty=Tensor[(135), uint16] */;
  (%1369,)
}

def @func_18532(%var_18475: Tensor[(45), float64]) -> (Tensor[(45), bool], Tensor[(45), int32], Tensor[(45), float64], Tensor[(288), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %1370 = @func_10337() /* ty=(Tensor[(45), float64],) */;
  %1371 = %1370.0;
  %1372 = cast(%var_18475, dtype="bool") /* ty=Tensor[(45), bool] */;
  %1373 = shape_of(%1371, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1374 = cast(%1371, dtype="bool") /* ty=Tensor[(45), bool] */;
  %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1376 = cast(%var_18475, dtype="int32") /* ty=Tensor[(45), int32] */;
  %1377 = shape_of(%1371, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1378 = cast(%1371, dtype="int32") /* ty=Tensor[(45), int32] */;
  %1379 = dyn.reshape(%1376, %1377, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1380 = cast(meta[relay.Constant][80] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1381 = reshape(%1380, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1382 = @func_13561(%1381) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(9, 1), float64], Tensor[(288), uint64]) */;
  %1383 = less_equal(%1374, %1375) /* ty=Tensor[(45), bool] */;
  %1384 = maximum(%1378, %1379) /* ty=Tensor[(45), int32] */;
  %1385 = %1382.2;
  %1386 = @func_13926() /* ty=Tensor[(15, 16, 9), uint16] */;
  %1387 = @func_9364() /* ty=Tensor[(135), uint16] */;
  (%1383, %1384, %1385, meta[relay.Constant][80] /* ty=Tensor[(288), uint64] */, %1386, %1387)
}

def @func_4606(%var_4598: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(2160), uint16]) {
  %1388 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
  %1389 = cast(%var_4598, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1390 = reshape(%1389, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %1391 = @func_2517(%1390) /* ty=(Tensor[(6, 15, 10), int8], Tensor[(6, 15, 10), int8], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16]) */;
  %1392 = %1388.0;
  %1393 = %1391.0;
  (%1392, %1393, %var_4598)
}

def @func_8240() -> (Tensor[(15, 16, 9), uint16],) {
  %1394 = @func_6220() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%1394,)
}

def @func_3723() -> (Tensor[(1800), float64],) {
  %1395 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %1396 = %1395.10;
  (%1396,)
}

def @func_9364() -> Tensor[(135), uint16] {
  %1397 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1397.0
}

def @func_11802() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %1398 = @func_10190() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1399 = @func_4694() /* ty=(Tensor[(135), uint16],) */;
  %1400 = @func_8240() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1401 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %1402 = @func_10641() /* ty=Tensor[(135), uint16] */;
  %1403 = %1398.1;
  %1404 = %1399.0;
  %1405 = %1400.0;
  %1406 = %1401.0;
  (%1402, %1403, %1404, %1405, %1406)
}

def @func_13742() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %1407 = @func_12567() /* ty=(Tensor[(135), uint16],) */;
  %1408 = @func_12081() /* ty=(Tensor[(135), uint16], Tensor[(1800), float64]) */;
  %1409 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1410 = @func_8782() /* ty=Tensor[(135), uint16] */;
  %1411 = %1407.0;
  %1412 = %1408.0;
  %1413 = %1409.0;
  (%1410, %1411, %1412, %1413)
}

def @func_16230() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2, 56), float64]) {
  %1414 = @func_10205() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1415 = @func_13666() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1416 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
  %1417 = %1414.1;
  %1418 = %1415.0;
  %1419 = %1416.2;
  (%1417, %1418, %1419)
}

def @func_9456(%var_9440: Tensor[(12, 13, 7), uint8]) -> (Tensor[(12, 13, 7), bool], Tensor[(2, 56), float32]) {
  %1420 = cast(meta[relay.Constant][81] /* ty=Tensor[(12, 13, 7), uint8] */, dtype="bool") /* ty=Tensor[(12, 13, 7), bool] */;
  %1421 = shape_of(%var_9440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1422 = cast(%var_9440, dtype="bool") /* ty=Tensor[(12, 13, 7), bool] */;
  %1423 = dyn.reshape(%1420, %1421, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1424 = less(%1422, %1423) /* ty=Tensor[(12, 13, 7), bool] */;
  %1425 = @func_7342() /* ty=Tensor[(2, 56), float32] */;
  (%1424, %1425)
}

def @func_12512() -> (Tensor[(6, 15, 10), float32],) {
  %1426 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1427 = %1426.0;
  (%1427,)
}

def @func_12709() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32]) {
  %1428 = @func_10044() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 13), float64], Tensor[(1014, 1), float64]) */;
  %1429 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1430 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %1431 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1432 = %1431.0;
  %1433 = cast(%1432, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
  %1434 = %1428.0;
  %1435 = %1429.0;
  %1436 = %1430.5;
  %1437 = cos(%1433) /* ty=Tensor[(6, 15, 10), float32] */;
  (%1434, %1435, %1436, %1437)
}

def @func_17461() -> Tensor[(135), uint16] {
  %1438 = @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1438.0
}

def @func_4929() -> Tensor[(15, 16, 9), uint16] {
  %1439 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1439.0
}

def @func_8035(%var_7998: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), bool], Tensor[(135), float32]) {
  %1440 = @func_3814() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1441 = %1440.0;
  %1442 = cast(%var_7998, dtype="bool") /* ty=Tensor[(15, 16, 9), bool] */;
  %1443 = shape_of(%1441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1444 = cast(%1441, dtype="bool") /* ty=Tensor[(15, 16, 9), bool] */;
  %1445 = dyn.reshape(%1442, %1443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1446 = @func_6486() /* ty=Tensor[(135), uint16] */;
  %1447 = cast(%1446, dtype="float32") /* ty=Tensor[(135), float32] */;
  %1448 = greater(%1444, %1445) /* ty=Tensor[(15, 16, 9), bool] */;
  %1449 = acosh(%1447) /* ty=Tensor[(135), float32] */;
  (%1448, %1449)
}

def @func_11311(%var_11296: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  %1450 = @func_8352() /* ty=(Tensor[(135), uint16],) */;
  %1451 = %1450.0;
  %1452 = cast(%1451, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1453 = cast(%var_11296, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1454 = reshape(%1452, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %1455 = reshape(%1453, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1456 = @func_13(%1454, %1455) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1457 = %1456.0;
  (%1451, %1457, %var_11296)
}

def @func_7862() -> (Tensor[(15, 16, 9), float32],) {
  %1458 = @func_5884() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %1459 = %1458.0;
  (%1459,)
}

def @func_15930() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1460 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
  %1461 = @func_5265() /* ty=Tensor[(135), uint16] */;
  %1462 = %1460.1;
  (%1461, %1462)
}

def @func_11812() -> Tensor[(135), uint16] {
  @func_3243() /* ty=Tensor[(135), uint16] */
}

def @func_16770() -> (Tensor[(135), uint16],) {
  %1463 = @func_14296() /* ty=(Tensor[(135), float32], Tensor[(135), uint16]) */;
  %1464 = %1463.1;
  (%1464,)
}

def @func_6026() -> Tensor[(135), uint16] {
  %1465 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %1465.0
}

def @func_14877() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %1466 = @func_14103() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(2160), uint16], Tensor[(2160), uint16]) */;
  %1467 = @func_10762() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1468 = %1466.0;
  %1469 = %1467.0;
  (%1468, %1469)
}

def @func_12353() -> Tensor[(6, 15, 10), float32] {
  %1470 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1470.0
}

def @func_17024() -> (Tensor[(6, 15, 10), float32],) {
  %1471 = @func_15219() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1472 = %1471.0;
  (%1472,)
}

def @func_7818(%var_7798: Tensor[(968), float64], %var_7813: Tensor[(350), float64], %var_7814: Tensor[(1, 182), float32]) -> (Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16], Tensor[(968), float64], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(1, 182), float32]) {
  %1473 = @func_7102() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1474 = cast(%var_7798, dtype="float64") /* ty=Tensor[(968), float64] */;
  %1475 = reshape(%1474, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float64] */;
  %1476 = @func_1145(%1475) /* ty=(Tensor[(11, 8, 11), float64], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */;
  %1477 = cast(9.68049f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1478 = cast(%var_7813, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1479 = cast(%var_7814, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %1480 = reshape(%1477, newshape=[]) /* ty=float64 */;
  %1481 = reshape(%1478, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1482 = reshape(%1479, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1483 = @func_2650(%1480, %1481, %1482) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %1484 = %1473.0;
  %1485 = %1476.1;
  %1486 = %1483.5;
  (%1484, %1485, %var_7798, %1486, 9.68049f64 /* ty=float64 */, %var_7813, %var_7814)
}

def @func_12919(%var_12895: float64, %var_12896: Tensor[(182, 1), float32]) -> (Tensor[(14, 2160), float32], Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(182, 1), float32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %1487 = @func_12413() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2160), uint16], Tensor[(135), uint16]) */;
  %1488 = %1487.2;
  %1489 = cast(%1488, dtype="int8") /* ty=Tensor[(1, 2160), int8] */;
  %1490 = cast(meta[relay.Constant][82] /* ty=Tensor[(14, 2160), uint16] */, dtype="int8") /* ty=Tensor[(14, 2160), int8] */;
  %1491 = add(%1489, %1490) /* ty=Tensor[(14, 2160), int8] */;
  %1492 = cast(%1491, dtype="float32") /* ty=Tensor[(14, 2160), float32] */;
  %1493 = @func_11418() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */;
  %1494 = cast(%var_12895, dtype="float64") /* ty=float64 */;
  %1495 = cast(%var_12896, dtype="float32") /* ty=Tensor[(182, 1), float32] */;
  %1496 = reshape(%1494, newshape=[]) /* ty=float64 */;
  %1497 = reshape(%1495, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %1498 = @func_7287(%1496, %1497) /* ty=(Tensor[(135), uint16], Tensor[(3, 11, 7), uint16], Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(350), float64], Tensor[(15, 16, 9), uint16], Tensor[(?, 14, 13), bool]) */;
  %1499 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
  %1500 = @func_6744() /* ty=(Tensor[(135), uint16],) */;
  %1501 = rsqrt(%1492) /* ty=Tensor[(14, 2160), float32] */;
  %1502 = %1493.0;
  %1503 = %1498.5;
  %1504 = %1499.0;
  %1505 = %1500.0;
  (%1501, %1502, %1503, %var_12895, %var_12896, %1504, %1505)
}

def @func_9077() -> (Tensor[(135), uint16],) {
  %1506 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1507 = %1506.0;
  (%1507,)
}

def @func_1638(%var_1609: Tensor[(12, 15, 10), float64], %var_1619: Tensor[(45), float64]) -> (Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) {
  %1508 = cast(%var_1609, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
  %1509 = cast(meta[relay.Constant][83] /* ty=Tensor[(9, 1), float64] */, dtype="float64") /* ty=Tensor[(9, 1), float64] */;
  %1510 = cast(%var_1619, dtype="float64") /* ty=Tensor[(45), float64] */;
  %1511 = cast(meta[relay.Constant][84] /* ty=Tensor[(1, 288), uint64] */, dtype="uint64") /* ty=Tensor[(1, 288), uint64] */;
  %1512 = reshape(%1509, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %1513 = reshape(%1510, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %1514 = reshape(%1511, newshape=[2, 144]) /* ty=Tensor[(2, 144), uint64] */;
  %1515 = @func_990(%1512, %1513, %1514) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */;
  %1516 = atan(%1508) /* ty=Tensor[(12, 15, 10), float64] */;
  %1517 = %1515.1;
  (%1516, %1517, meta[relay.Constant][83] /* ty=Tensor[(9, 1), float64] */, %var_1619, meta[relay.Constant][84] /* ty=Tensor[(1, 288), uint64] */)
}

def @func_616(%var_589: uint32, %var_590: Tensor[(11, 16, 6), uint32], %var_596: Tensor[(3, 45), uint16]) -> (Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) {
  %1518 = cast(%var_589, dtype="uint32") /* ty=uint32 */;
  %1519 = cast(%var_590, dtype="uint32") /* ty=Tensor[(11, 16, 6), uint32] */;
  %1520 = cast(meta[relay.Constant][85] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1521 = cast(meta[relay.Constant][85] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1522 = cast(%var_596, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
  %1523 = reshape(%1520, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %1524 = reshape(%1521, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %1525 = reshape(%1522, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1526 = @func_475(%1523, %1524, %1525) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
  %1527 = %1526.0;
  %1528 = cast(%1527, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
  %1529 = cast(%1527, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
  %1530 = cast(%var_596, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
  %1531 = reshape(%1528, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %1532 = reshape(%1529, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %1533 = reshape(%1530, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1534 = @func_475(%1531, %1532, %1533) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
  %1535 = %1534.0;
  %1536 = cast(%1535, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
  %1537 = cast(meta[relay.Constant][85] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1538 = cast(%var_596, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
  %1539 = reshape(%1536, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %1540 = reshape(%1537, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
  %1541 = reshape(%1538, newshape=[135]) /* ty=Tensor[(135), uint16] */;
  %1542 = @func_475(%1539, %1540, %1541) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
  %1543 = minimum(%1518, %1519) /* ty=Tensor[(11, 16, 6), uint32] */;
  %1544 = %1542.1;
  (%1543, %1527, meta[relay.Constant][85] /* ty=Tensor[(288), uint64] */, %var_596, %1535, %1544)
}

def @func_2037(%var_1970: float64, %var_1971: Tensor[(15, 14, 14), float64], %var_2017: Tensor[(350), float64], %var_2030: Tensor[(15, 14, 14), float64]) -> (Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) {
  %1545 = cast(%var_2017, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1546 = reshape(%1545, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
  %1547 = @func_1238(%1546) /* ty=(Tensor[(10, 7, 5), float64],) */;
  %1548 = cast(%var_1970, dtype="float64") /* ty=float64 */;
  %1549 = cast(%var_1971, dtype="float64") /* ty=Tensor[(15, 14, 14), float64] */;
  %1550 = floor_divide(%1548, %1549) /* ty=Tensor[(15, 14, 14), float64] */;
  %1551 = cast(%var_2030, dtype="bool") /* ty=Tensor[(15, 14, 14), bool] */;
  %1552 = shape_of(%1550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1553 = cast(%1550, dtype="bool") /* ty=Tensor[(15, 14, 14), bool] */;
  %1554 = dyn.reshape(%1551, %1552, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1555 = %1547.0;
  %1556 = logical_or(%1553, %1554) /* ty=Tensor[(15, 14, 14), bool] */;
  (%1555, %var_2017, %1556)
}

def @func_13405() -> (Tensor[(6, 15, 10), float32],) {
  %1557 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1558 = %1557.0;
  (%1558,)
}

def @func_9595() -> (Tensor[(45), float64],) {
  %1559 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %1560 = %1559.9;
  (%1560,)
}

def @func_7375() -> (Tensor[(6, 15, 10), float32],) {
  %1561 = @func_5655() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */;
  %1562 = %1561.1;
  (%1562,)
}

def @func_6714() -> (Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(3, 11, 7), uint16], Tensor[(33, 7), uint16]) {
  %1563 = @func_5884() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %1564 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1565 = @func_3723() /* ty=(Tensor[(1800), float64],) */;
  %1566 = cast(meta[relay.Constant][86] /* ty=Tensor[(33, 7), uint16] */, dtype="uint16") /* ty=Tensor[(33, 7), uint16] */;
  %1567 = cast(meta[relay.Constant][86] /* ty=Tensor[(33, 7), uint16] */, dtype="uint16") /* ty=Tensor[(33, 7), uint16] */;
  %1568 = reshape(%1566, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), uint16] */;
  %1569 = reshape(%1567, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), uint16] */;
  %1570 = @func_5101(%1568, %1569) /* ty=(Tensor[(3, 11, 7), uint16], Tensor[(135), uint16]) */;
  %1571 = %1563.0;
  %1572 = %1564.0;
  %1573 = %1565.0;
  %1574 = %1570.0;
  (%1571, %1572, %1573, %1574, meta[relay.Constant][86] /* ty=Tensor[(33, 7), uint16] */)
}

def @func_9880(%var_9866: Tensor[(2160), uint16], %var_9871: Tensor[(30, 98), float64], %var_9877: uint32) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(30, 98), float64], Tensor[(11, 16, 6), uint32], uint32, Tensor[(1056), uint32]) {
  %1575 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %1576 = %1575.2;
  %1577 = cast(%1576, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1578 = cast(%var_9866, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1579 = reshape(%1577, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %1580 = reshape(%1578, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1581 = @func_13(%1579, %1580) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1582 = cast(%var_9871, dtype="float64") /* ty=Tensor[(30, 98), float64] */;
  %1583 = reshape(%1582, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %1584 = @func_7593(%1583) /* ty=(Tensor[(6, 15, 10), float64], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float64], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */;
  %1585 = cast(%var_9877, dtype="uint32") /* ty=uint32 */;
  %1586 = cast(meta[relay.Constant][87] /* ty=Tensor[(1056), uint32] */, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
  %1587 = cast(%1576, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1588 = reshape(%1585, newshape=[]) /* ty=uint32 */;
  %1589 = reshape(%1586, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), uint32] */;
  %1590 = reshape(%1587, newshape=[3, 45]) /* ty=Tensor[(3, 45), uint16] */;
  %1591 = @func_616(%1588, %1589, %1590) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */;
  %1592 = %1581.0;
  %1593 = %1584.7;
  %1594 = %1591.0;
  (%1576, %1592, %var_9866, %1593, %var_9871, %1594, %var_9877, meta[relay.Constant][87] /* ty=Tensor[(1056), uint32] */)
}

def @func_9498(%var_9480: Tensor[(9, 16, 16), float64]) -> (Tensor[(9, 16, 16), float64], Tensor[(6, 15, 10), float32]) {
  %1595 = cast(%var_9480, dtype="float64") /* ty=Tensor[(9, 16, 16), float64] */;
  %1596 = @func_7753() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1597 = log10(%1595) /* ty=Tensor[(9, 16, 16), float64] */;
  %1598 = %1596.0;
  (%1597, %1598)
}

def @func_2603() -> (Tensor[(135), uint16],) {
  %1599 = @func_2453() /* ty=Tensor[(135), uint16] */;
  (%1599,)
}

def @func_10248() -> Tensor[(6, 15, 10), float32] {
  %1600 = @func_5655() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */;
  %1600.1
}

def @func_14599(%var_14579: Tensor[(4, 7, 12), float64], %var_14587: Tensor[(4, 7, 12), float64]) -> (Tensor[(4, 7, 12), uint32], Tensor[(135), uint16]) {
  %1601 = cast(%var_14579, dtype="float64") /* ty=Tensor[(4, 7, 12), float64] */;
  %1602 = atan(%1601) /* ty=Tensor[(4, 7, 12), float64] */;
  %1603 = cast(%var_14587, dtype="uint32") /* ty=Tensor[(4, 7, 12), uint32] */;
  %1604 = shape_of(%1602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1605 = cast(%1602, dtype="uint32") /* ty=Tensor[(4, 7, 12), uint32] */;
  %1606 = dyn.reshape(%1603, %1604, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1607 = @func_12130() /* ty=(Tensor[(135), uint16],) */;
  %1608 = bitwise_or(%1605, %1606) /* ty=Tensor[(4, 7, 12), uint32] */;
  %1609 = %1607.0;
  (%1608, %1609)
}

def @func_7631() -> (Tensor[(135), uint16], Tensor[(33, 7), uint16]) {
  %1610 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %1611 = @func_6714() /* ty=(Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(3, 11, 7), uint16], Tensor[(33, 7), uint16]) */;
  %1612 = %1610.0;
  %1613 = %1611.4;
  (%1612, %1613)
}

def @func_8391() -> Tensor[(135), uint16] {
  %1614 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1614.1
}

def @func_3370() -> Tensor[(135), uint16] {
  %1615 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %1615.0
}

def @func_18917() -> Tensor[(135), uint16] {
  %1616 = @func_10851() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1616.1
}

def @func_10891() -> Tensor[(135), uint16] {
  %1617 = @func_6744() /* ty=(Tensor[(135), uint16],) */;
  %1617.0
}

def @func_14103() -> (Tensor[(6, 15, 10), float32], Tensor[(2160), uint16], Tensor[(2160), uint16]) {
  %1618 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1619 = cast(meta[relay.Constant][88] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1620 = reshape(%1619, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %1621 = @func_11311(%1620) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %1622 = %1618.0;
  %1623 = %1621.2;
  (%1622, %1623, meta[relay.Constant][88] /* ty=Tensor[(2160), uint16] */)
}

def @func_15895() -> (Tensor[(9, 182), bool], Tensor[(9, 182), float32]) {
  %1624 = @func_15540() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 182), float32], Tensor[(350), float64], float64) */;
  %1625 = %1624.2;
  %1626 = cast(%1625, dtype="bool") /* ty=Tensor[(1, 182), bool] */;
  %1627 = cast(meta[relay.Constant][89] /* ty=Tensor[(9, 182), float32] */, dtype="bool") /* ty=Tensor[(9, 182), bool] */;
  %1628 = cast(meta[relay.Constant][89] /* ty=Tensor[(9, 182), float32] */, dtype="float32") /* ty=Tensor[(9, 182), float32] */;
  %1629 = less_equal(%1626, %1627) /* ty=Tensor[(9, 182), bool] */;
  %1630 = sin(%1628) /* ty=Tensor[(9, 182), float32] */;
  (%1629, %1630)
}

def @func_11477() -> (Tensor[(15, 16, 9), uint16],) {
  %1631 = @func_7975() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%1631,)
}

def @func_18093() -> Tensor[(135), uint16] {
  %1632 = @func_10994() /* ty=(Tensor[(135), uint16],) */;
  %1632.0
}

def @func_2441() -> Tensor[(6, 15, 10), float32] {
  %1633 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %1634 = %1633.0;
  %1635 = cast(%1634, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
  acosh(%1635) /* ty=Tensor[(6, 15, 10), float32] */
}

def @func_2771(%var_2762: Tensor[(350), float64], %var_2769: Tensor[(22, 44), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(9), float64], Tensor[(22, 44), float64]) {
  %1636 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %1637 = cast(%1636, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
  %1638 = cast(7.25058f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1639 = cast(meta[relay.Constant][90] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %1640 = cast(%var_2762, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1641 = cast(meta[relay.Constant][90] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %1642 = reshape(%1638, newshape=[]) /* ty=float64 */;
  %1643 = reshape(%1639, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1644 = reshape(%1640, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1645 = reshape(%1641, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1646 = @func_2037(%1642, %1643, %1644, %1645) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %1647 = cast(%var_2769, dtype="float64") /* ty=Tensor[(22, 44), float64] */;
  %1648 = reshape(%1647, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float64] */;
  %1649 = @func_1145(%1648) /* ty=(Tensor[(11, 8, 11), float64], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */;
  %1650 = log10(%1637) /* ty=Tensor[(6, 15, 10), float32] */;
  %1651 = %1646.1;
  %1652 = %1649.2;
  (%1650, %1651, 7.25058f64 /* ty=float64 */, meta[relay.Constant][90] /* ty=Tensor[(2940), float64] */, %var_2762, %1652, %var_2769)
}

def @func_3412(%var_3390: Tensor[(9), float64], %var_3392: Tensor[(288), uint64]) -> (Tensor[(135), uint16], uint32, Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) {
  %1653 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %1654 = cast(%var_3390, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1655 = cast(meta[relay.Constant][91] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %1656 = cast(%var_3392, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1657 = reshape(%1654, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %1658 = reshape(%1655, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %1659 = reshape(%1656, newshape=[2, 144]) /* ty=Tensor[(2, 144), uint64] */;
  %1660 = @func_990(%1657, %1658, %1659) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */;
  %1661 = @func_3370() /* ty=Tensor[(135), uint16] */;
  %1662 = %1653.7;
  %1663 = %1660.1;
  (%1661, %1662, %1663, %var_3390, meta[relay.Constant][91] /* ty=Tensor[(45), float64] */, %var_3392)
}

def @func_6744() -> (Tensor[(135), uint16],) {
  %1664 = @func_3243() /* ty=Tensor[(135), uint16] */;
  (%1664,)
}

def @func_13282(%var_13241: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(2160), float64], Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) {
  %1665 = @func_10762() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1666 = cast(%var_13241, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1667 = reshape(%1666, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %1668 = @func_13106(%1667) /* ty=(Tensor[(135), uint16], Tensor[(33, 7), float32], Tensor[(2160), uint16]) */;
  %1669 = %1668.2;
  %1670 = cast(%1669, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %1671 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %1672 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1673 = %1665.0;
  %1674 = log(%1670) /* ty=Tensor[(2160), float64] */;
  %1675 = %1671.3;
  %1676 = %1672.0;
  (%1673, %var_13241, %1674, %1675, %1676)
}

def @func_15683() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1677 = @func_14877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1678 = @func_15641() /* ty=Tensor[(135), uint16] */;
  %1679 = %1677.1;
  (%1678, %1679)
}

def @func_13666() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %1680 = @func_7102() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1681 = %1680.0;
  %1682 = @func_12058() /* ty=Tensor[(135), uint16] */;
  (%1681, %1682)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5194() -> (Tensor[(135), uint16],) {
  %0 = @func_4041() /* ty=Tensor[(135), uint16] */;
  (%0,)
}

def @func_5267() -> Tensor[(135), uint16] {
  @func_5265() /* ty=Tensor[(135), uint16] */
}

def @func_5755() -> (Tensor[(15, 16, 9), uint16],) {
  %1 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%1,)
}

def @func_5056() -> (Tensor[(135), uint16],) {
  %4 = fn () -> (Tensor[(135), uint16],) {
    %2 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
    %3 = %2.1;
    (%3,)
  };
  %4() /* ty=(Tensor[(135), uint16],) */
}

def @func_1148(%var_1146: Tensor[(11, 8, 11), float64]) -> (Tensor[(11, 8, 11), float64], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) {
  @func_1145(%var_1146) /* ty=(Tensor[(11, 8, 11), float64], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */
}

def @func_2947() -> (Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) {
  %33 = fn () -> (Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) {
    %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %7 = @func_2627() /* ty=Tensor[(135), uint16] */;
    %8 = cast(%7, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %9 = reshape(%5, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %10 = reshape(%6, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %11 = reshape(%8, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %12 = @func_475(%9, %10, %11) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
    %13 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %14 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
    %15 = cast(meta[relay.Constant][1] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(88, 12), uint32] */, dtype="uint32") /* ty=Tensor[(88, 12), uint32] */;
    %17 = cast(%7, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %18 = reshape(%15, newshape=[]) /* ty=uint32 */;
    %19 = reshape(%16, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), uint32] */;
    %20 = reshape(%17, newshape=[3, 45]) /* ty=Tensor[(3, 45), uint16] */;
    %21 = @func_616(%18, %19, %20) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */;
    %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %23 = cast(meta[relay.Constant][4] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %24 = reshape(%22, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
    %25 = reshape(%23, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %26 = @func_1638(%24, %25) /* ty=(Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) */;
    %27 = %12.0;
    %28 = %13.0;
    %29 = @func_2627() /* ty=Tensor[(135), uint16] */;
    %30 = %14.0;
    %31 = %21.3;
    %32 = %26.3;
    (%7, %27, meta[relay.Constant][0] /* ty=Tensor[(288), uint64] */, %28, %29, %30, %31, meta[relay.Constant][1] /* ty=uint32 */, meta[relay.Constant][2] /* ty=Tensor[(88, 12), uint32] */, %32, meta[relay.Constant][3] /* ty=Tensor[(1800), float64] */, meta[relay.Constant][4] /* ty=Tensor[(45), float64] */)
  };
  %33() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */
}

def @func_12711() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32]) {
  @func_12709() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32]) */
}

def @func_3069() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  %34 = @func_2453() /* ty=Tensor[(135), uint16] */;
  %35 = cast(%34, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %36 = cast(meta[relay.Constant][5] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %37 = reshape(%35, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %38 = reshape(%36, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %39 = @func_13(%37, %38) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %40 = %39.0;
  (%34, %40, meta[relay.Constant][5] /* ty=Tensor[(2160), uint16] */)
}

def @func_11802() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %41 = @func_10190() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %42 = @func_4694() /* ty=(Tensor[(135), uint16],) */;
  %43 = @func_8240() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %44 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %45 = @func_10641() /* ty=Tensor[(135), uint16] */;
  %46 = %41.1;
  %47 = %42.0;
  %48 = %43.0;
  %49 = %44.0;
  (%45, %46, %47, %48, %49)
}

def @func_5816(%var_5814: Tensor[(2, 4, 14), float64]) -> (Tensor[(2, 4, 14), float64], Tensor[(2, 4, 14), float64]) {
  @func_5813(%var_5814) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(2, 4, 14), float64]) */
}

def @func_2850() -> (Tensor[(135), uint16],) {
  @func_2848() /* ty=(Tensor[(135), uint16],) */
}

def @func_3782(%var_3780: Tensor[(350), float64], %var_3781: Tensor[(1, 182), float32]) -> (uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) {
  %60 = fn (%var_3771: Tensor[(350), float64], %var_3772: Tensor[(1, 182), float32]) -> (uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) {
    %50 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
    %51 = %50.2;
    %52 = cast(%51, dtype="float64") /* ty=float64 */;
    %53 = cast(%var_3771, dtype="float64") /* ty=Tensor[(350), float64] */;
    %54 = cast(%var_3772, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
    %55 = reshape(%52, newshape=[]) /* ty=float64 */;
    %56 = reshape(%53, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %57 = reshape(%54, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %58 = @func_2650(%55, %56, %57) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
    %59 = %58.0;
    (%51, %59, %var_3771, %var_3772)
  };
  %60(%var_3780, %var_3781) /* ty=(uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) */
}

def @func_3370() -> Tensor[(135), uint16] {
  %61 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %61.0
}

def @func_8783() -> Tensor[(135), uint16] {
  %63 = fn () -> Tensor[(135), uint16] {
    %62 = @func_8189() /* ty=(Tensor[(135), uint16],) */;
    %62.0
  };
  %63() /* ty=Tensor[(135), uint16] */
}

def @func_6384() -> (Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) {
  %64 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %65 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 56), float64] */, dtype="float64") /* ty=Tensor[(2, 56), float64] */;
  %66 = reshape(%65, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float64] */;
  %67 = @func_5813(%66) /* ty=(Tensor[(2, 4, 14), float64], Tensor[(2, 4, 14), float64]) */;
  %68 = %64.1;
  %69 = %67.1;
  (%68, %69, meta[relay.Constant][6] /* ty=Tensor[(2, 56), float64] */)
}

def @func_10529(%var_10527: Tensor[(1, 1800), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(1, 1800), float64], Tensor[(45), float64]) {
  @func_10526(%var_10527) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(1, 1800), float64], Tensor[(45), float64]) */
}

def @func_5891() -> (Tensor[(135), uint16],) {
  %72 = fn () -> (Tensor[(135), uint16],) {
    %70 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
    %71 = %70.0;
    (%71,)
  };
  %72() /* ty=(Tensor[(135), uint16],) */
}

def @func_6850(%var_6836: Tensor[(13, 6, 13), float64]) -> (Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350, 1), float64]) {
  %73 = cast(%var_6836, dtype="float64") /* ty=Tensor[(13, 6, 13), float64] */;
  %74 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %75 = cast(-7.65527f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %76 = cast(meta[relay.Constant][7] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %77 = cast(meta[relay.Constant][8] /* ty=Tensor[(350, 1), float64] */, dtype="float64") /* ty=Tensor[(350, 1), float64] */;
  %78 = reshape(%75, newshape=[]) /* ty=float64 */;
  %79 = reshape(%76, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %80 = reshape(%77, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %81 = @func_3488(%78, %79, %80) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %82 = sin(%73) /* ty=Tensor[(13, 6, 13), float64] */;
  %83 = %74.0;
  %84 = %81.6;
  (%82, %83, %84, -7.65527f64 /* ty=float64 */, meta[relay.Constant][7] /* ty=Tensor[(2940), float64] */, meta[relay.Constant][8] /* ty=Tensor[(350, 1), float64] */)
}

def @func_5167(%var_5166: Tensor[(2, 1, 5), float64]) -> (Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) {
  %98 = fn (%var_5127: Tensor[(2, 1, 5), float64]) -> (Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) {
    %85 = cast(meta[relay.Constant][9] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
    %86 = reshape(%85, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
    %87 = @func_4606(%86) /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(2160), uint16]) */;
    %88 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
    %89 = cast(%var_5127, dtype="float64") /* ty=Tensor[(2, 1, 5), float64] */;
    %90 = cos(%89) /* ty=Tensor[(2, 1, 5), float64] */;
    %91 = cast(%var_5127, dtype="bool") /* ty=Tensor[(2, 1, 5), bool] */;
    %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
    %93 = cast(%90, dtype="bool") /* ty=Tensor[(2, 1, 5), bool] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %95 = %87.2;
    %96 = %88.1;
    %97 = less(%93, %94) /* ty=Tensor[(2, ?, 5), bool] */;
    (%95, meta[relay.Constant][9] /* ty=Tensor[(2160), uint16] */, %96, %97)
  };
  %98(%var_5166) /* ty=(Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) */
}

def @func_11655(%var_11653: Tensor[(1056), uint32], %var_11654: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), float32], Tensor[(15, 16, 9), uint16], Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(182), float32], Tensor[(350), float64], Tensor[(968), float64]) {
  %115 = fn (%var_11607: Tensor[(1056), uint32], %var_11609: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), float32], Tensor[(15, 16, 9), uint16], Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(182), float32], Tensor[(350), float64], Tensor[(968), float64]) {
    %99 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
    %100 = %99.0;
    %101 = cast(%100, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
    %102 = reshape(%101, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
    %103 = @func_11311(%102) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
    %104 = cast(%var_11607, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
    %105 = cast(meta[relay.Constant][10] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %106 = cast(%var_11609, dtype="float64") /* ty=Tensor[(350), float64] */;
    %107 = cast(meta[relay.Constant][11] /* ty=Tensor[(968), float64] */, dtype="float64") /* ty=Tensor[(968), float64] */;
    %108 = reshape(%104, newshape=[1056]) /* ty=Tensor[(1056), uint32] */;
    %109 = reshape(%105, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %110 = reshape(%106, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %111 = reshape(%107, newshape=[968]) /* ty=Tensor[(968), float64] */;
    %112 = @func_7148(%108, %109, %110, %111) /* ty=(Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(5, 9), float64], Tensor[(182), float32], Tensor[(10), float64], Tensor[(2, 4, 14), float32], float64, Tensor[(350), float64], Tensor[(968), float64], Tensor[(6, 15, 10), float32]) */;
    %113 = %103.1;
    %114 = %112.0;
    (%100, %113, %114, %var_11607, meta[relay.Constant][10] /* ty=Tensor[(182), float32] */, %var_11609, meta[relay.Constant][11] /* ty=Tensor[(968), float64] */)
  };
  %115(%var_11653, %var_11654) /* ty=(Tensor[(15, 16, 9), float32], Tensor[(15, 16, 9), uint16], Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(182), float32], Tensor[(350), float64], Tensor[(968), float64]) */
}

def @func_11419() -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) {
  %120 = fn () -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) {
    %116 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
    %117 = @func_7102() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %118 = %116.1;
    %119 = %117.0;
    (%118, %119)
  };
  %120() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */
}

def @func_14602(%var_14600: Tensor[(4, 7, 12), float64], %var_14601: Tensor[(4, 7, 12), float64]) -> (Tensor[(4, 7, 12), uint32], Tensor[(135), uint16]) {
  %130 = fn (%var_14579: Tensor[(4, 7, 12), float64], %var_14587: Tensor[(4, 7, 12), float64]) -> (Tensor[(4, 7, 12), uint32], Tensor[(135), uint16]) {
    %121 = cast(%var_14579, dtype="float64") /* ty=Tensor[(4, 7, 12), float64] */;
    %122 = atan(%121) /* ty=Tensor[(4, 7, 12), float64] */;
    %123 = cast(%var_14587, dtype="uint32") /* ty=Tensor[(4, 7, 12), uint32] */;
    %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %125 = cast(%122, dtype="uint32") /* ty=Tensor[(4, 7, 12), uint32] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %127 = @func_12130() /* ty=(Tensor[(135), uint16],) */;
    %128 = bitwise_or(%125, %126) /* ty=Tensor[(4, 7, 12), uint32] */;
    %129 = %127.0;
    (%128, %129)
  };
  %130(%var_14600, %var_14601) /* ty=(Tensor[(4, 7, 12), uint32], Tensor[(135), uint16]) */
}

def @func_4117() -> Tensor[(15, 16, 9), uint16] {
  @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_2454() -> Tensor[(135), uint16] {
  %132 = fn () -> Tensor[(135), uint16] {
    %131 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
    %131.4
  };
  %132() /* ty=Tensor[(135), uint16] */
}

def @func_8528(%var_8525: float64, %var_8526: Tensor[(2940), float64], %var_8527: Tensor[(350), float64]) -> (Tensor[(135), uint16], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  @func_8523(%var_8525, %var_8526, %var_8527) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */
}

def @func_6005(%var_5905: Tensor[(1056, 1), uint32], %var_5946: Tensor[(45), float64], %var_5955: Tensor[(1056, 1), float32], %var_5981: Tensor[(182), float32], %var_5985: Tensor[(5, 2), float64]) -> (Tensor[(3, 45), uint16], Tensor[(1056, 135), bool], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(1056, ?), uint16], Tensor[(15, 16, 9), uint16], Tensor[(1056, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(2160), uint16], Tensor[(5, 2), float64], Tensor[(1056, 1), float64], Tensor[(45), float64]) {
  %133 = cast(meta[relay.Constant][12] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %134 = cast(%var_5905, dtype="uint32") /* ty=Tensor[(1056, 1), uint32] */;
  %135 = @func_5310() /* ty=Tensor[(135), uint16] */;
  %136 = cast(%135, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %137 = reshape(%133, newshape=[]) /* ty=uint32 */;
  %138 = reshape(%134, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), uint32] */;
  %139 = reshape(%136, newshape=[3, 45]) /* ty=Tensor[(3, 45), uint16] */;
  %140 = @func_616(%137, %138, %139) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */;
  %141 = cast(%var_5905, dtype="bool") /* ty=Tensor[(1056, 1), bool] */;
  %142 = cast(%135, dtype="bool") /* ty=Tensor[(135), bool] */;
  %143 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %144 = cast(meta[relay.Constant][13] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %145 = cast(%var_5946, dtype="float64") /* ty=Tensor[(45), float64] */;
  %146 = %143.2;
  %147 = cast(%146, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %148 = reshape(%144, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %149 = reshape(%145, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %150 = reshape(%147, newshape=[2, 144]) /* ty=Tensor[(2, 144), uint64] */;
  %151 = @func_990(%148, %149, %150) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */;
  %152 = cast(%var_5905, dtype="float32") /* ty=Tensor[(1056, 1), float32] */;
  %153 = sin(%152) /* ty=Tensor[(1056, 1), float32] */;
  %154 = cast(%var_5955, dtype="uint16") /* ty=Tensor[(1056, 1), uint16] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %156 = cast(%153, dtype="uint16") /* ty=Tensor[(1056, 1), uint16] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %158 = cast(%153, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %159 = asinh(%158) /* ty=Tensor[(1056, 1), float64] */;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(1056, 1), float32] */;
  %161 = cast(meta[relay.Constant][12] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
  %162 = cast(%var_5981, dtype="float32") /* ty=Tensor[(182), float32] */;
  %163 = reshape(%161, newshape=[]) /* ty=float32 */;
  %164 = reshape(%162, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %165 = @func_1670(%163, %164) /* ty=(Tensor[(1, 14, 13), float32],) */;
  %166 = cast(%var_5985, dtype="float64") /* ty=Tensor[(5, 2), float64] */;
  %167 = reshape(%166, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %168 = @func_5165(%167) /* ty=(Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) */;
  %169 = cast(%159, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %170 = log(%169) /* ty=Tensor[(1056, 1), float64] */;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(1056, 1), float32] */;
  %172 = cast(meta[relay.Constant][12] /* ty=uint32 */, dtype="float32") /* ty=float32 */;
  %173 = divide(%171, %172) /* ty=Tensor[(1056, 1), float32] */;
  %174 = cast(%173, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %175 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %176 = %140.3;
  %177 = not_equal(%141, %142) /* ty=Tensor[(1056, 135), bool] */;
  %178 = %151.3;
  %179 = bitwise_xor(%156, %157) /* ty=Tensor[(1056, ?), uint16] */;
  %180 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
  %181 = log10(%160) /* ty=Tensor[(1056, 1), float32] */;
  %182 = %165.0;
  %183 = %168.0;
  %184 = atan(%174) /* ty=Tensor[(1056, 1), float64] */;
  %185 = %175.11;
  (%176, %177, %146, %178, meta[relay.Constant][13] /* ty=Tensor[(9), float64] */, %var_5946, %179, %180, %181, %182, %var_5981, %183, %var_5985, %184, %185)
}

def @func_6716() -> (Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(3, 11, 7), uint16], Tensor[(33, 7), uint16]) {
  @func_6714() /* ty=(Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(3, 11, 7), uint16], Tensor[(33, 7), uint16]) */
}

def @func_12755() -> Tensor[(135), uint16] {
  %186 = fn () -> Tensor[(135), uint16] {
    @func_11157() /* ty=Tensor[(135), uint16] */
  };
  %186() /* ty=Tensor[(135), uint16] */
}

def @func_4828() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %190 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
    %187 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %188 = %187.2;
    %189 = @func_4714() /* ty=Tensor[(135), uint16] */;
    (%188, %189)
  };
  %190() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_5813(%var_5803: Tensor[(2, 4, 14), float64]) -> (Tensor[(2, 4, 14), float64], Tensor[(2, 4, 14), float64]) {
  %191 = cast(%var_5803, dtype="float64") /* ty=Tensor[(2, 4, 14), float64] */;
  %192 = cast(%var_5803, dtype="float64") /* ty=Tensor[(2, 4, 14), float64] */;
  %193 = log10(%191) /* ty=Tensor[(2, 4, 14), float64] */;
  %194 = cosh(%192) /* ty=Tensor[(2, 4, 14), float64] */;
  (%193, %194)
}

def @func_4696() -> (Tensor[(135), uint16],) {
  @func_4694() /* ty=(Tensor[(135), uint16],) */
}

def @func_16302() -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  %195 = @func_15219() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %196 = @func_12801() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
  %197 = %195.0;
  %198 = %196.2;
  (%197, %198)
}

def @func_4527() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) {
  %199 = @func_4493() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %200 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
  %201 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %202 = %199.1;
  %203 = %200.0;
  %204 = %201.0;
  (%202, %203, %204)
}

def @func_15738() -> (Tensor[(15, 16, 9), uint16],) {
  %207 = fn () -> (Tensor[(15, 16, 9), uint16],) {
    %205 = @func_11477() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %206 = %205.0;
    (%206,)
  };
  %207() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_9427() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */
}

def @func_12354() -> Tensor[(6, 15, 10), float32] {
  %209 = fn () -> Tensor[(6, 15, 10), float32] {
    %208 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
    %208.0
  };
  %209() /* ty=Tensor[(6, 15, 10), float32] */
}

def @func_6714() -> (Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(3, 11, 7), uint16], Tensor[(33, 7), uint16]) {
  %210 = @func_5884() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %211 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %212 = @func_3723() /* ty=(Tensor[(1800), float64],) */;
  %213 = cast(meta[relay.Constant][14] /* ty=Tensor[(33, 7), uint16] */, dtype="uint16") /* ty=Tensor[(33, 7), uint16] */;
  %214 = cast(meta[relay.Constant][14] /* ty=Tensor[(33, 7), uint16] */, dtype="uint16") /* ty=Tensor[(33, 7), uint16] */;
  %215 = reshape(%213, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), uint16] */;
  %216 = reshape(%214, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), uint16] */;
  %217 = @func_5101(%215, %216) /* ty=(Tensor[(3, 11, 7), uint16], Tensor[(135), uint16]) */;
  %218 = %210.0;
  %219 = %211.0;
  %220 = %212.0;
  %221 = %217.0;
  (%218, %219, %220, %221, meta[relay.Constant][14] /* ty=Tensor[(33, 7), uint16] */)
}

def @func_17507() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1056), uint32]) {
  %222 = @func_14826() /* ty=(Tensor[(135), uint16],) */;
  %223 = @func_15575() /* ty=(Tensor[(135), uint16],) */;
  %224 = @func_16921() /* ty=(Tensor[(1056), uint32],) */;
  %225 = %222.0;
  %226 = %223.0;
  %227 = %224.0;
  (%225, %226, %227)
}

def @func_3222() -> (Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) {
  %232 = fn () -> (Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) {
    %228 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
    %229 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %230 = %228.3;
    %231 = %229.0;
    (%230, %231)
  };
  %232() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */
}

def @func_18918() -> Tensor[(135), uint16] {
  %234 = fn () -> Tensor[(135), uint16] {
    %233 = @func_10851() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %233.1
  };
  %234() /* ty=Tensor[(135), uint16] */
}

def @func_7153(%var_7149: Tensor[(1056), uint32], %var_7150: Tensor[(182), float32], %var_7151: Tensor[(350), float64], %var_7152: Tensor[(968), float64]) -> (Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(5, 9), float64], Tensor[(182), float32], Tensor[(10), float64], Tensor[(2, 4, 14), float32], float64, Tensor[(350), float64], Tensor[(968), float64], Tensor[(6, 15, 10), float32]) {
  %258 = fn (%var_7113: Tensor[(1056), uint32], %var_7115: Tensor[(182), float32], %var_7136: Tensor[(350), float64], %var_7137: Tensor[(968), float64]) -> (Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(5, 9), float64], Tensor[(182), float32], Tensor[(10), float64], Tensor[(2, 4, 14), float32], float64, Tensor[(350), float64], Tensor[(968), float64], Tensor[(6, 15, 10), float32]) {
    %235 = cast(%var_7113, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
    %236 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 9), float64] */;
    %237 = cast(%var_7113, dtype="float32") /* ty=Tensor[(1056), float32] */;
    %238 = cast(%var_7115, dtype="float32") /* ty=Tensor[(182), float32] */;
    %239 = cast(meta[relay.Constant][16] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
    %240 = reshape(%235, newshape=[1056, 1]) /* ty=Tensor[(1056, 1), uint32] */;
    %241 = reshape(%236, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %242 = reshape(%237, newshape=[1056, 1]) /* ty=Tensor[(1056, 1), float32] */;
    %243 = reshape(%238, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %244 = reshape(%239, newshape=[5, 2]) /* ty=Tensor[(5, 2), float64] */;
    %245 = @func_6005(%240, %241, %242, %243, %244) /* ty=(Tensor[(3, 45), uint16], Tensor[(1056, 135), bool], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(1056, ?), uint16], Tensor[(15, 16, 9), uint16], Tensor[(1056, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(2160), uint16], Tensor[(5, 2), float64], Tensor[(1056, 1), float64], Tensor[(45), float64]) */;
    %246 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
    %247 = %246.1;
    %248 = cast(%247, dtype="float32") /* ty=Tensor[(2, 4, 14), float32] */;
    %249 = cast(%var_7136, dtype="float64") /* ty=Tensor[(350), float64] */;
    %250 = cast(%var_7137, dtype="float64") /* ty=Tensor[(968), float64] */;
    %251 = reshape(%249, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %252 = reshape(%250, newshape=[22, 44]) /* ty=Tensor[(22, 44), float64] */;
    %253 = @func_2771(%251, %252) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(9), float64], Tensor[(22, 44), float64]) */;
    %254 = %245.10;
    %255 = sigmoid(%248) /* ty=Tensor[(2, 4, 14), float32] */;
    %256 = %253.2;
    %257 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
    (%254, %var_7113, meta[relay.Constant][15] /* ty=Tensor[(5, 9), float64] */, %var_7115, meta[relay.Constant][16] /* ty=Tensor[(10), float64] */, %255, %256, %var_7136, %var_7137, %257)
  };
  %258(%var_7149, %var_7150, %var_7151, %var_7152) /* ty=(Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(5, 9), float64], Tensor[(182), float32], Tensor[(10), float64], Tensor[(2, 4, 14), float32], float64, Tensor[(350), float64], Tensor[(968), float64], Tensor[(6, 15, 10), float32]) */
}

def @func_14828() -> (Tensor[(135), uint16],) {
  @func_14826() /* ty=(Tensor[(135), uint16],) */
}

def @func_10192() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  @func_10190() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */
}

def @func_9456(%var_9440: Tensor[(12, 13, 7), uint8]) -> (Tensor[(12, 13, 7), bool], Tensor[(2, 56), float32]) {
  %259 = cast(meta[relay.Constant][17] /* ty=Tensor[(12, 13, 7), uint8] */, dtype="bool") /* ty=Tensor[(12, 13, 7), bool] */;
  %260 = shape_of(%var_9440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%var_9440, dtype="bool") /* ty=Tensor[(12, 13, 7), bool] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %263 = less(%261, %262) /* ty=Tensor[(12, 13, 7), bool] */;
  %264 = @func_7342() /* ty=Tensor[(2, 56), float32] */;
  (%263, %264)
}

def @func_6028() -> Tensor[(135), uint16] {
  @func_6026() /* ty=Tensor[(135), uint16] */
}

def @func_16806() -> (Tensor[(135), uint16],) {
  %265 = @func_3370() /* ty=Tensor[(135), uint16] */;
  (%265,)
}

def @func_10892() -> Tensor[(135), uint16] {
  %267 = fn () -> Tensor[(135), uint16] {
    %266 = @func_6744() /* ty=(Tensor[(135), uint16],) */;
    %266.0
  };
  %267() /* ty=Tensor[(135), uint16] */
}

def @func_11564() -> Tensor[(135), uint16] {
  %268 = fn () -> Tensor[(135), uint16] {
    @func_3370() /* ty=Tensor[(135), uint16] */
  };
  %268() /* ty=Tensor[(135), uint16] */
}

def @func_16972(%var_16970: float64, %var_16971: Tensor[(2940), float64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  @func_16968(%var_16970, %var_16971) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64]) */
}

def @func_2774(%var_2772: Tensor[(350), float64], %var_2773: Tensor[(22, 44), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(9), float64], Tensor[(22, 44), float64]) {
  %286 = fn (%var_2762: Tensor[(350), float64], %var_2769: Tensor[(22, 44), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(9), float64], Tensor[(22, 44), float64]) {
    %269 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
    %270 = cast(%269, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
    %271 = cast(7.25058f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %272 = cast(meta[relay.Constant][18] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %273 = cast(%var_2762, dtype="float64") /* ty=Tensor[(350), float64] */;
    %274 = cast(meta[relay.Constant][18] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %275 = reshape(%271, newshape=[]) /* ty=float64 */;
    %276 = reshape(%272, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
    %277 = reshape(%273, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %278 = reshape(%274, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
    %279 = @func_2037(%275, %276, %277, %278) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
    %280 = cast(%var_2769, dtype="float64") /* ty=Tensor[(22, 44), float64] */;
    %281 = reshape(%280, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float64] */;
    %282 = @func_1145(%281) /* ty=(Tensor[(11, 8, 11), float64], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */;
    %283 = log10(%270) /* ty=Tensor[(6, 15, 10), float32] */;
    %284 = %279.1;
    %285 = %282.2;
    (%283, %284, 7.25058f64 /* ty=float64 */, meta[relay.Constant][18] /* ty=Tensor[(2940), float64] */, %var_2762, %285, %var_2769)
  };
  %286(%var_2772, %var_2773) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(9), float64], Tensor[(22, 44), float64]) */
}

def @func_5657() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  @func_5655() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */
}

def @func_13405() -> (Tensor[(6, 15, 10), float32],) {
  %287 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %288 = %287.0;
  (%288,)
}

def @func_10306() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  %289 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %290 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %291 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %292 = @func_5581() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), float32]) */;
  %293 = @func_5310() /* ty=Tensor[(135), uint16] */;
  %294 = %289.1;
  %295 = %290.0;
  %296 = %291.0;
  %297 = %292.1;
  (%293, %294, %295, %296, %297)
}

def @func_10308() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  @func_10306() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */
}

def @func_6745() -> (Tensor[(135), uint16],) {
  %299 = fn () -> (Tensor[(135), uint16],) {
    %298 = @func_3243() /* ty=Tensor[(135), uint16] */;
    (%298,)
  };
  %299() /* ty=(Tensor[(135), uint16],) */
}

def @func_18406(%var_18401: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(182), float32], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  %300 = @func_14124() /* ty=(Tensor[(135), uint16],) */;
  %301 = cast(-7.91169f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %302 = cast(meta[relay.Constant][19] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %303 = reshape(%301, newshape=[]) /* ty=float64 */;
  %304 = reshape(%302, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %305 = @func_7287(%303, %304) /* ty=(Tensor[(135), uint16], Tensor[(3, 11, 7), uint16], Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(350), float64], Tensor[(15, 16, 9), uint16], Tensor[(?, 14, 13), bool]) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %308 = cast(%var_18401, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %309 = reshape(%307, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %310 = reshape(%308, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %311 = @func_13(%309, %310) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %312 = %300.0;
  %313 = %311.0;
  (%312, %306, -7.91169f64 /* ty=float64 */, meta[relay.Constant][19] /* ty=Tensor[(182), float32] */, %313, %var_18401)
}

def @func_15221() -> (Tensor[(6, 15, 10), float32],) {
  @func_15219() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_2037(%var_1970: float64, %var_1971: Tensor[(15, 14, 14), float64], %var_2017: Tensor[(350), float64], %var_2030: Tensor[(15, 14, 14), float64]) -> (Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) {
  %314 = cast(%var_2017, dtype="float64") /* ty=Tensor[(350), float64] */;
  %315 = reshape(%314, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
  %316 = @func_1238(%315) /* ty=(Tensor[(10, 7, 5), float64],) */;
  %317 = cast(%var_1970, dtype="float64") /* ty=float64 */;
  %318 = cast(%var_1971, dtype="float64") /* ty=Tensor[(15, 14, 14), float64] */;
  %319 = floor_divide(%317, %318) /* ty=Tensor[(15, 14, 14), float64] */;
  %320 = cast(%var_2030, dtype="bool") /* ty=Tensor[(15, 14, 14), bool] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="bool") /* ty=Tensor[(15, 14, 14), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %324 = %316.0;
  %325 = logical_or(%322, %323) /* ty=Tensor[(15, 14, 14), bool] */;
  (%324, %var_2017, %325)
}

def @func_18194() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %328 = fn () -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
    %326 = @func_7975() /* ty=Tensor[(15, 16, 9), uint16] */;
    %327 = @func_18093() /* ty=Tensor[(135), uint16] */;
    (%326, %327)
  };
  %328() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */
}

def @func_17898() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %329 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %330 = @func_11812() /* ty=Tensor[(135), uint16] */;
  %331 = %329.0;
  (%330, %331)
}

def @func_11314(%var_11312: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  @func_11311(%var_11312) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */
}

def @func_17594(%var_17591: Tensor[(6, 15, 10), float32], %var_17592: Tensor[(35, 10), float64], %var_17593: Tensor[(182), float32]) -> (Tensor[(6, 15, 10), uint8], Tensor[(1, 182), float32], Tensor[(35, 10), float64], Tensor[(182), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_17589(%var_17591, %var_17592, %var_17593) /* ty=(Tensor[(6, 15, 10), uint8], Tensor[(1, 182), float32], Tensor[(35, 10), float64], Tensor[(182), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_15930() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %332 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
  %333 = @func_5265() /* ty=Tensor[(135), uint16] */;
  %334 = %332.1;
  (%333, %334)
}

def @func_12709() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32]) {
  %335 = @func_10044() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 13), float64], Tensor[(1014, 1), float64]) */;
  %336 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %337 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %338 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %339 = %338.0;
  %340 = cast(%339, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
  %341 = %335.0;
  %342 = %336.0;
  %343 = %337.5;
  %344 = cos(%340) /* ty=Tensor[(6, 15, 10), float32] */;
  (%341, %342, %343, %344)
}

def @func_620(%var_617: uint32, %var_618: Tensor[(11, 16, 6), uint32], %var_619: Tensor[(3, 45), uint16]) -> (Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) {
  %372 = fn (%var_589: uint32, %var_590: Tensor[(11, 16, 6), uint32], %var_596: Tensor[(3, 45), uint16]) -> (Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) {
    %345 = cast(%var_589, dtype="uint32") /* ty=uint32 */;
    %346 = cast(%var_590, dtype="uint32") /* ty=Tensor[(11, 16, 6), uint32] */;
    %347 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %348 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %349 = cast(%var_596, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
    %350 = reshape(%347, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %351 = reshape(%348, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %352 = reshape(%349, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %353 = @func_475(%350, %351, %352) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
    %354 = %353.0;
    %355 = cast(%354, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
    %356 = cast(%354, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
    %357 = cast(%var_596, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
    %358 = reshape(%355, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %359 = reshape(%356, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %360 = reshape(%357, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %361 = @func_475(%358, %359, %360) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
    %362 = %361.0;
    %363 = cast(%362, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
    %364 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %365 = cast(%var_596, dtype="uint16") /* ty=Tensor[(3, 45), uint16] */;
    %366 = reshape(%363, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %367 = reshape(%364, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %368 = reshape(%365, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %369 = @func_475(%366, %367, %368) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
    %370 = minimum(%345, %346) /* ty=Tensor[(11, 16, 6), uint32] */;
    %371 = %369.1;
    (%370, %354, meta[relay.Constant][20] /* ty=Tensor[(288), uint64] */, %var_596, %362, %371)
  };
  %372(%var_617, %var_618, %var_619) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */
}

def @func_2629() -> Tensor[(135), uint16] {
  @func_2627() /* ty=Tensor[(135), uint16] */
}

def @func_10339() -> (Tensor[(45), float64],) {
  @func_10337() /* ty=(Tensor[(45), float64],) */
}

def @func_8857(%var_8856: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), float32], Tensor[(182), float32], Tensor[(462), float32], Tensor[(350), float64]) {
  %383 = fn (%var_8852: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), float32], Tensor[(182), float32], Tensor[(462), float32], Tensor[(350), float64]) {
    %373 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
    %374 = cast(meta[relay.Constant][21] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
    %375 = cast(meta[relay.Constant][21] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
    %376 = cast(%var_8852, dtype="float64") /* ty=Tensor[(350), float64] */;
    %377 = reshape(%374, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
    %378 = reshape(%375, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
    %379 = reshape(%376, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %380 = @func_4623(%377, %378, %379) /* ty=(Tensor[(11, 3, 14), float32], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(182), float32]) */;
    %381 = %373.0;
    %382 = %380.4;
    (%381, %382, meta[relay.Constant][21] /* ty=Tensor[(462), float32] */, %var_8852)
  };
  %383(%var_8856) /* ty=(Tensor[(15, 16, 9), float32], Tensor[(182), float32], Tensor[(462), float32], Tensor[(350), float64]) */
}

def @func_6386() -> (Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) {
  @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */
}

def @func_5265() -> Tensor[(135), uint16] {
  %384 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %384.0
}

def @func_6026() -> Tensor[(135), uint16] {
  %385 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %385.0
}

def @func_15576() -> (Tensor[(135), uint16],) {
  %387 = fn () -> (Tensor[(135), uint16],) {
    %386 = @func_10891() /* ty=Tensor[(135), uint16] */;
    (%386,)
  };
  %387() /* ty=(Tensor[(135), uint16],) */
}

def @func_11172() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %392 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
    %388 = @func_10994() /* ty=(Tensor[(135), uint16],) */;
    %389 = @func_8998() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %390 = %388.0;
    %391 = %389.3;
    (%390, %391)
  };
  %392() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_12414() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2160), uint16], Tensor[(135), uint16]) {
  %400 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2160), uint16], Tensor[(135), uint16]) {
    %393 = @func_3134() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %394 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 2160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 2160), uint16] */;
    %395 = reshape(%394, newshape=[180, 12]) /* ty=Tensor[(180, 12), uint16] */;
    %396 = @func_7955(%395) /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(180, 12), int8], Tensor[(15, 16, 9), uint16]) */;
    %397 = %393.0;
    %398 = %396.0;
    %399 = @func_11030() /* ty=Tensor[(135), uint16] */;
    (%397, %398, meta[relay.Constant][22] /* ty=Tensor[(1, 2160), uint16] */, %399)
  };
  %400() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2160), uint16], Tensor[(135), uint16]) */
}

def @func_6625() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_15611() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %401 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %402 = @func_11802() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %403 = %401.1;
  %404 = %402.0;
  (%403, %404)
}

def @func_10819() -> Tensor[(135), uint16] {
  @func_10817() /* ty=Tensor[(135), uint16] */
}

def @func_11158() -> Tensor[(135), uint16] {
  %406 = fn () -> Tensor[(135), uint16] {
    %405 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
    %405.0
  };
  %406() /* ty=Tensor[(135), uint16] */
}

def @func_15643() -> Tensor[(135), uint16] {
  @func_15641() /* ty=Tensor[(135), uint16] */
}

def @func_16262(%var_16260: Tensor[(1, 13, 7), uint16], %var_16261: Tensor[(9, 13, 7), uint16]) -> Tensor[(9, 13, 7), bool] {
  %409 = fn (%var_16252: Tensor[(1, 13, 7), uint16], %var_16253: Tensor[(9, 13, 7), uint16]) -> Tensor[(9, 13, 7), bool] {
    %407 = cast(%var_16252, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
    %408 = cast(%var_16253, dtype="bool") /* ty=Tensor[(9, 13, 7), bool] */;
    less_equal(%407, %408) /* ty=Tensor[(9, 13, 7), bool] */
  };
  %409(%var_16260, %var_16261) /* ty=Tensor[(9, 13, 7), bool] */
}

def @func_16923() -> (Tensor[(1056), uint32],) {
  @func_16921() /* ty=(Tensor[(1056), uint32],) */
}

def @func_9364() -> Tensor[(135), uint16] {
  %410 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %410.0
}

def @func_6832(%var_6830: Tensor[(7, 8, 4), bool], %var_6831: Tensor[(7, 8, 4), bool]) -> (Tensor[(7, 8, 4), bool],) {
  %416 = fn (%var_6822: Tensor[(7, 8, 4), bool], %var_6823: Tensor[(7, 8, 4), bool]) -> (Tensor[(7, 8, 4), bool],) {
    %411 = cast(%var_6823, dtype="bool") /* ty=Tensor[(7, 8, 4), bool] */;
    %412 = shape_of(%var_6822, dtype="int32") /* ty=Tensor[(3), int32] */;
    %413 = cast(%var_6822, dtype="bool") /* ty=Tensor[(7, 8, 4), bool] */;
    %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %415 = logical_and(%413, %414) /* ty=Tensor[(7, 8, 4), bool] */;
    (%415,)
  };
  %416(%var_6830, %var_6831) /* ty=(Tensor[(7, 8, 4), bool],) */
}

def @func_14492() -> (Tensor[(6, 15, 10), float32],) {
  @func_14490() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_18859() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %421 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
    %417 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %418 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
    %419 = %417.2;
    %420 = %418.1;
    (%419, %420)
  };
  %421() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_8242() -> (Tensor[(15, 16, 9), uint16],) {
  @func_8240() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_13638() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %422 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %423 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %424 = %422.0;
  %425 = %423.0;
  (%424, %425)
}

def @func_16968(%var_16957: float64, %var_16958: Tensor[(2940), float64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %426 = @func_13638() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */;
  %427 = cast(%var_16957, dtype="float64") /* ty=float64 */;
  %428 = cast(%var_16958, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %429 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %430 = cast(%var_16958, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %431 = reshape(%427, newshape=[]) /* ty=float64 */;
  %432 = reshape(%428, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %433 = reshape(%429, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %434 = reshape(%430, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %435 = @func_2037(%431, %432, %433, %434) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %436 = %426.0;
  %437 = @func_9635() /* ty=Tensor[(135), uint16] */;
  %438 = %435.2;
  (%436, %437, %438, %var_16957, %var_16958, meta[relay.Constant][23] /* ty=Tensor[(350), float64] */)
}

def @func_14826() -> (Tensor[(135), uint16],) {
  %439 = @func_14124() /* ty=(Tensor[(135), uint16],) */;
  %440 = %439.0;
  (%440,)
}

def @func_2654(%var_2651: float64, %var_2652: Tensor[(350), float64], %var_2653: Tensor[(182), float32]) -> (Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
  %458 = fn (%var_2641: float64, %var_2643: Tensor[(350), float64], %var_2648: Tensor[(182), float32]) -> (Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) {
    %441 = cast(%var_2641, dtype="float64") /* ty=float64 */;
    %442 = cast(meta[relay.Constant][24] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %443 = cast(%var_2643, dtype="float64") /* ty=Tensor[(350), float64] */;
    %444 = cast(meta[relay.Constant][24] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %445 = reshape(%441, newshape=[]) /* ty=float64 */;
    %446 = reshape(%442, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
    %447 = reshape(%443, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %448 = reshape(%444, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
    %449 = @func_2037(%445, %446, %447, %448) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
    %450 = cast(%var_2641, dtype="float32") /* ty=float32 */;
    %451 = cast(%var_2648, dtype="float32") /* ty=Tensor[(182), float32] */;
    %452 = reshape(%450, newshape=[]) /* ty=float32 */;
    %453 = reshape(%451, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
    %454 = @func_1670(%452, %453) /* ty=(Tensor[(1, 14, 13), float32],) */;
    %455 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
    %456 = %449.0;
    %457 = %454.0;
    (%455, %456, %var_2641, meta[relay.Constant][24] /* ty=Tensor[(2940), float64] */, %var_2643, %457, %var_2648)
  };
  %458(%var_2651, %var_2652, %var_2653) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */
}

def @func_10046() -> (Tensor[(135), uint16], Tensor[(13, 6, 13), float64], Tensor[(1014, 1), float64]) {
  @func_10044() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 13), float64], Tensor[(1014, 1), float64]) */
}

def @func_17350() -> Tensor[(135), uint16] {
  %460 = fn () -> Tensor[(135), uint16] {
    %459 = @func_4694() /* ty=(Tensor[(135), uint16],) */;
    %459.0
  };
  %460() /* ty=Tensor[(135), uint16] */
}

def @func_9885(%var_9882: Tensor[(2160), uint16], %var_9883: Tensor[(30, 98), float64], %var_9884: uint32) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(30, 98), float64], Tensor[(11, 16, 6), uint32], uint32, Tensor[(1056), uint32]) {
  @func_9880(%var_9882, %var_9883, %var_9884) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(30, 98), float64], Tensor[(11, 16, 6), uint32], uint32, Tensor[(1056), uint32]) */
}

def @func_7462(%var_7459: Tensor[(5, 70), float64], %var_7460: Tensor[(5, 70), float32], %var_7461: float64) -> (Tensor[(6, 15, 10), float32], Tensor[(1, 182), float32], Tensor[(182), float32], Tensor[(5, 70), float32], float64, float64) {
  @func_7457(%var_7459, %var_7460, %var_7461) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1, 182), float32], Tensor[(182), float32], Tensor[(5, 70), float32], float64, float64) */
}

def @func_10943(%var_10941: float64, %var_10942: Tensor[(3, 2, 1), float64]) -> (Tensor[(3, 2, 1), float64], Tensor[(135), uint16]) {
  %466 = fn (%var_10929: float64, %var_10930: Tensor[(3, 2, 1), float64]) -> (Tensor[(3, 2, 1), float64], Tensor[(135), uint16]) {
    %461 = cast(%var_10929, dtype="float64") /* ty=float64 */;
    %462 = cast(%var_10930, dtype="float64") /* ty=Tensor[(3, 2, 1), float64] */;
    %463 = @func_9208() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
    %464 = mod(%461, %462) /* ty=Tensor[(3, 2, 1), float64] */;
    %465 = %463.1;
    (%464, %465)
  };
  %466(%var_10941, %var_10942) /* ty=(Tensor[(3, 2, 1), float64], Tensor[(135), uint16]) */
}

def @func_7975() -> Tensor[(15, 16, 9), uint16] {
  %467 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %467.1
}

def @func_11478() -> (Tensor[(15, 16, 9), uint16],) {
  %469 = fn () -> (Tensor[(15, 16, 9), uint16],) {
    %468 = @func_7975() /* ty=Tensor[(15, 16, 9), uint16] */;
    (%468,)
  };
  %469() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_10964() -> (Tensor[(15, 16, 9), uint16],) {
  %470 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %471 = %470.1;
  (%471,)
}

def @func_5655() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %472 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %473 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %474 = %472.1;
  %475 = %473.0;
  (%474, %475)
}

def @func_7104() -> (Tensor[(15, 16, 9), uint16],) {
  @func_7102() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_16591(%var_16550: Tensor[(10), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(450, 4), float32], Tensor[(135), uint16], Tensor[(10), float64], Tensor[(1014), float64]) {
  %476 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
  %477 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %478 = cast(meta[relay.Constant][25] /* ty=Tensor[(450, 4), float32] */, dtype="float32") /* ty=Tensor[(450, 4), float32] */;
  %479 = reshape(%478, newshape=[1800]) /* ty=Tensor[(1800), float32] */;
  %480 = @func_5039(%479) /* ty=(Tensor[(1056), uint32], Tensor[(135), uint16], Tensor[(1800), uint64]) */;
  %481 = cast(%var_16550, dtype="float64") /* ty=Tensor[(10), float64] */;
  %482 = cast(meta[relay.Constant][26] /* ty=Tensor[(1014), float64] */, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %483 = reshape(%481, newshape=[10]) /* ty=Tensor[(10), float64] */;
  %484 = reshape(%482, newshape=[1014]) /* ty=Tensor[(1014), float64] */;
  %485 = @func_13160(%483, %484) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(10), float64], Tensor[(13, 6, 13), float64], Tensor[(1014), float64]) */;
  %486 = %476.0;
  %487 = %477.0;
  %488 = %480.1;
  %489 = %485.0;
  (%486, %487, %488, meta[relay.Constant][25] /* ty=Tensor[(450, 4), float32] */, %489, %var_16550, meta[relay.Constant][26] /* ty=Tensor[(1014), float64] */)
}

def @func_16770() -> (Tensor[(135), uint16],) {
  %490 = @func_14296() /* ty=(Tensor[(135), float32], Tensor[(135), uint16]) */;
  %491 = %490.1;
  (%491,)
}

def @func_2604() -> (Tensor[(135), uint16],) {
  %493 = fn () -> (Tensor[(135), uint16],) {
    %492 = @func_2453() /* ty=Tensor[(135), uint16] */;
    (%492,)
  };
  %493() /* ty=(Tensor[(135), uint16],) */
}

def @func_10764() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_10762() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_17647(%var_17646: Tensor[(33, 7), float32]) -> (Tensor[(15, 16, 9), uint16], Tensor[(33, 7), float64]) {
  %503 = fn (%var_17622: Tensor[(33, 7), float32]) -> (Tensor[(15, 16, 9), uint16], Tensor[(33, 7), float64]) {
    %494 = @func_10964() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %495 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
    %496 = %495.2;
    %497 = cast(%var_17622, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
    %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(2), int32] */;
    %499 = cast(%496, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %501 = %494.0;
    %502 = floor_mod(%499, %500) /* ty=Tensor[(33, 7), float64] */;
    (%501, %502)
  };
  %503(%var_17646) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(33, 7), float64]) */
}

def @func_2442() -> Tensor[(6, 15, 10), float32] {
  %507 = fn () -> Tensor[(6, 15, 10), float32] {
    %504 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
    %505 = %504.0;
    %506 = cast(%505, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
    acosh(%506) /* ty=Tensor[(6, 15, 10), float32] */
  };
  %507() /* ty=Tensor[(6, 15, 10), float32] */
}

def @func_7862() -> (Tensor[(15, 16, 9), float32],) {
  %508 = @func_5884() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %509 = %508.0;
  (%509,)
}

def @func_7754() -> (Tensor[(6, 15, 10), float32],) {
  %512 = fn () -> (Tensor[(6, 15, 10), float32],) {
    %510 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %511 = %510.0;
    (%511,)
  };
  %512() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_18748() -> Tensor[(135), uint16] {
  @func_18746() /* ty=Tensor[(135), uint16] */
}

def @func_18337() -> (Tensor[(6, 15, 10), float32], Tensor[(88, 12), uint32], int64, Tensor[(24), int64], Tensor[(2160), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  %527 = fn () -> (Tensor[(6, 15, 10), float32], Tensor[(88, 12), uint32], int64, Tensor[(24), int64], Tensor[(2160), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
    %513 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
    %514 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %515 = cast(meta[relay.Constant][27] /* ty=Tensor[(24), int64] */, dtype="int64") /* ty=Tensor[(24), int64] */;
    %516 = reshape(%514, newshape=[]) /* ty=int64 */;
    %517 = reshape(%515, newshape=[6, 4]) /* ty=Tensor[(6, 4), int64] */;
    %518 = @func_15986(%516, %517) /* ty=(Tensor[(135), uint16], int64, Tensor[(88, 12), uint32], Tensor[(?, 2, 12), int8]) */;
    %519 = @func_14103() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(2160), uint16], Tensor[(2160), uint16]) */;
    %520 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %521 = @func_5884() /* ty=(Tensor[(15, 16, 9), float32],) */;
    %522 = %513.1;
    %523 = %518.2;
    %524 = %519.2;
    %525 = %520.0;
    %526 = %521.0;
    (%522, %523, 1 /* ty=int64 */, meta[relay.Constant][27] /* ty=Tensor[(24), int64] */, %524, %525, %526)
  };
  %527() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(88, 12), uint32], int64, Tensor[(24), int64], Tensor[(2160), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */
}

def @func_18535(%var_18533: Tensor[(45), float64]) -> (Tensor[(45), bool], Tensor[(45), int32], Tensor[(45), float64], Tensor[(288), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  @func_18532(%var_18533) /* ty=(Tensor[(45), bool], Tensor[(45), int32], Tensor[(45), float64], Tensor[(288), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */
}

def @func_4929() -> Tensor[(15, 16, 9), uint16] {
  %528 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %528.0
}

def @func_17462() -> Tensor[(135), uint16] {
  %530 = fn () -> Tensor[(135), uint16] {
    %529 = @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %529.0
  };
  %530() /* ty=Tensor[(135), uint16] */
}

def @func_12985() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %538 = fn () -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
    %531 = @func_12512() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %532 = @func_8189() /* ty=(Tensor[(135), uint16],) */;
    %533 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %534 = %531.0;
    %535 = %532.0;
    %536 = @func_5265() /* ty=Tensor[(135), uint16] */;
    %537 = %533.1;
    (%534, %535, %536, %537)
  };
  %538() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_8037(%var_8036: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), bool], Tensor[(135), float32]) {
  %549 = fn (%var_7998: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), bool], Tensor[(135), float32]) {
    %539 = @func_3814() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %540 = %539.0;
    %541 = cast(%var_7998, dtype="bool") /* ty=Tensor[(15, 16, 9), bool] */;
    %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(3), int32] */;
    %543 = cast(%540, dtype="bool") /* ty=Tensor[(15, 16, 9), bool] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %545 = @func_6486() /* ty=Tensor[(135), uint16] */;
    %546 = cast(%545, dtype="float32") /* ty=Tensor[(135), float32] */;
    %547 = greater(%543, %544) /* ty=Tensor[(15, 16, 9), bool] */;
    %548 = acosh(%546) /* ty=Tensor[(135), float32] */;
    (%547, %548)
  };
  %549(%var_8036) /* ty=(Tensor[(15, 16, 9), bool], Tensor[(135), float32]) */
}

def @func_10119() -> (Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(968), float64]) {
  @func_10117() /* ty=(Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(968), float64]) */
}

def @func_1674(%var_1672: float32, %var_1673: Tensor[(1, 14, 13), float32]) -> (Tensor[(1, 14, 13), float32],) {
  @func_1670(%var_1672, %var_1673) /* ty=(Tensor[(1, 14, 13), float32],) */
}

def @func_3243() -> Tensor[(135), uint16] {
  @func_2627() /* ty=Tensor[(135), uint16] */
}

def @func_8523(%var_8505: float64, %var_8506: Tensor[(2940), float64], %var_8507: Tensor[(350), float64]) -> (Tensor[(135), uint16], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %550 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %551 = cast(%var_8505, dtype="float64") /* ty=float64 */;
  %552 = cast(%var_8506, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %553 = cast(%var_8507, dtype="float64") /* ty=Tensor[(350), float64] */;
  %554 = cast(%var_8506, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %555 = reshape(%551, newshape=[]) /* ty=float64 */;
  %556 = reshape(%552, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %557 = reshape(%553, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %558 = reshape(%554, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %559 = @func_2037(%555, %556, %557, %558) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %560 = %550.0;
  %561 = %559.1;
  (%560, %561, %var_8505, %var_8506, %var_8507)
}

def @func_8711() -> Tensor[(6, 15, 10), bool] {
  %563 = fn () -> Tensor[(6, 15, 10), bool] {
    %562 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
    %562.2
  };
  %563() /* ty=Tensor[(6, 15, 10), bool] */
}

def @func_5582() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), float32]) {
  %568 = fn () -> (Tensor[(135), uint16], Tensor[(15, 16, 9), float32]) {
    %564 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
    %565 = cast(%564, dtype="float32") /* ty=Tensor[(15, 16, 9), float32] */;
    %566 = @func_2627() /* ty=Tensor[(135), uint16] */;
    %567 = acos(%565) /* ty=Tensor[(15, 16, 9), float32] */;
    (%566, %567)
  };
  %568() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), float32]) */
}

def @func_11872() -> Tensor[(135), uint16] {
  %570 = fn () -> Tensor[(135), uint16] {
    %569 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
    %569.0
  };
  %570() /* ty=Tensor[(135), uint16] */
}

def @func_16669(%var_16667: int16, %var_16668: Tensor[(9, 1, 3), int16]) -> (Tensor[(9, 1, 3), bool], Tensor[(15, 16, 9), float32]) {
  @func_16665(%var_16667, %var_16668) /* ty=(Tensor[(9, 1, 3), bool], Tensor[(15, 16, 9), float32]) */
}

def @func_14235() -> (Tensor[(135), uint16],) {
  %571 = @func_10891() /* ty=Tensor[(135), uint16] */;
  (%571,)
}

def @func_9142(%var_9140: Tensor[(15, 16, 9), uint16], %var_9141: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), int8], Tensor[(182), float32], Tensor[(350), float64]) {
  @func_9138(%var_9140, %var_9141) /* ty=(Tensor[(15, 16, 9), int8], Tensor[(182), float32], Tensor[(350), float64]) */
}

def @func_7864() -> (Tensor[(15, 16, 9), float32],) {
  @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */
}

def @func_4374() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_475(%var_440: Tensor[(9, 2, 16), uint64], %var_441: Tensor[(9, 2, 16), uint64], %var_458: Tensor[(135), uint16]) -> (Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) {
  %572 = cast(%var_441, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
  %573 = shape_of(%var_440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_440, dtype="uint64") /* ty=Tensor[(9, 2, 16), uint64] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %576 = cast(%var_458, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %577 = cast(meta[relay.Constant][28] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %578 = reshape(%576, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %579 = reshape(%577, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %580 = @func_13(%578, %579) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %581 = cast(%var_458, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %582 = cast(meta[relay.Constant][28] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %583 = reshape(%581, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %584 = reshape(%582, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %585 = @func_13(%583, %584) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %586 = cast(%var_458, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %587 = %585.0;
  %588 = cast(%587, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %589 = reshape(%586, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %590 = reshape(%588, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %591 = @func_13(%589, %590) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %592 = left_shift(%574, %575) /* ty=Tensor[(9, 2, 16), uint64] */;
  %593 = %580.0;
  %594 = %591.0;
  (%592, %593, %var_458, meta[relay.Constant][28] /* ty=Tensor[(2160), uint16] */, %587, %594)
}

def @func_4042() -> Tensor[(135), uint16] {
  %596 = fn () -> Tensor[(135), uint16] {
    %595 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
    %595.0
  };
  %596() /* ty=Tensor[(135), uint16] */
}

def @func_9697(%var_9695: Tensor[(6, 15, 10), float32], %var_9696: Tensor[(6, 15, 10), int16]) -> (Tensor[(6, 15, 10), uint16],) {
  @func_9693(%var_9695, %var_9696) /* ty=(Tensor[(6, 15, 10), uint16],) */
}

def @func_15356(%var_15335: Tensor[(2940), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(2940), float64], Tensor[(11, 16, 6), bool]) {
  %597 = @func_12801() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
  %598 = @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %599 = cast(meta[relay.Constant][29] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %600 = cast(%var_15335, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %601 = cast(meta[relay.Constant][30] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %602 = reshape(%599, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %603 = reshape(%600, newshape=[30, 98]) /* ty=Tensor[(30, 98), float64] */;
  %604 = reshape(%601, newshape=[]) /* ty=uint32 */;
  %605 = @func_9880(%602, %603, %604) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(30, 98), float64], Tensor[(11, 16, 6), uint32], uint32, Tensor[(1056), uint32]) */;
  %606 = %605.5;
  %607 = cast(%606, dtype="bool") /* ty=Tensor[(11, 16, 6), bool] */;
  %608 = cast(meta[relay.Constant][30] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %609 = %597.1;
  %610 = %598.0;
  %611 = greater(%607, %608) /* ty=Tensor[(11, 16, 6), bool] */;
  (%609, %610, meta[relay.Constant][29] /* ty=Tensor[(2160), uint16] */, %var_15335, %611)
}

def @func_2043(%var_2039: float64, %var_2040: Tensor[(15, 14, 14), float64], %var_2041: Tensor[(350), float64], %var_2042: Tensor[(15, 14, 14), float64]) -> (Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) {
  @func_2037(%var_2039, %var_2040, %var_2041, %var_2042) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */
}

def @func_15491() -> (Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(5, 11, 6), float32], Tensor[(15, 16, 9), uint16]) {
  %612 = cast(meta[relay.Constant][31] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %613 = cast(meta[relay.Constant][32] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %614 = reshape(%612, newshape=[9]) /* ty=Tensor[(9), float64] */;
  %615 = reshape(%613, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %616 = @func_3412(%614, %615) /* ty=(Tensor[(135), uint16], uint32, Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */;
  %617 = @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %618 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 6), float32] */;
  %619 = log10(%618) /* ty=Tensor[(5, 11, 6), float32] */;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(5, 11, 6), float32] */;
  %621 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(5, 11, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 6), float32] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %624 = %616.2;
  %625 = %617.1;
  %626 = maximum(%622, %623) /* ty=Tensor[(5, 11, 6), float32] */;
  %627 = @func_10087() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%624, meta[relay.Constant][31] /* ty=Tensor[(9), float64] */, meta[relay.Constant][32] /* ty=Tensor[(288), uint64] */, %625, %626, %627)
}

def @func_15219() -> (Tensor[(6, 15, 10), float32],) {
  %628 = @func_15147() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %629 = %628.1;
  (%629,)
}

def @func_15021() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %630 = @func_9208() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %631 = @func_14296() /* ty=(Tensor[(135), float32], Tensor[(135), uint16]) */;
  %632 = %630.1;
  %633 = %631.1;
  (%632, %633)
}

def @func_6989(%var_6926: Tensor[(1, 10), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(1, 10), float64], Tensor[(135), uint16]) {
  %634 = cast(%var_6926, dtype="float64") /* ty=Tensor[(1, 10), float64] */;
  %635 = reshape(%634, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
  %636 = @func_5165(%635) /* ty=(Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) */;
  %637 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
  %638 = %636.1;
  %639 = @func_6026() /* ty=Tensor[(135), uint16] */;
  (%637, %638, %var_6926, %639)
}

def @func_10526(%var_10522: Tensor[(1, 1800), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(1, 1800), float64], Tensor[(45), float64]) {
  %640 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %641 = cast(%var_10522, dtype="float64") /* ty=Tensor[(1, 1800), float64] */;
  %642 = cast(meta[relay.Constant][34] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %643 = reshape(%641, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
  %644 = reshape(%642, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %645 = @func_1638(%643, %644) /* ty=(Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) */;
  %646 = %640.0;
  %647 = %645.1;
  (%646, %647, %var_10522, meta[relay.Constant][34] /* ty=Tensor[(45), float64] */)
}

def @func_10966() -> (Tensor[(15, 16, 9), uint16],) {
  @func_10964() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_17900() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  @func_17898() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */
}

def @func_12347() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %653 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
    %648 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
    %649 = @func_10851() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %650 = %648.0;
    %651 = %649.1;
    %652 = @func_11563() /* ty=Tensor[(135), uint16] */;
    (%650, %651, %652)
  };
  %653() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_16739() -> (Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  @func_16737() /* ty=(Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */
}

def @func_9744() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(1, 350), float64]) {
  %662 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(1, 350), float64]) {
    %654 = @func_3877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) */;
    %655 = @func_3134() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %656 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 350), float64] */, dtype="float64") /* ty=Tensor[(1, 350), float64] */;
    %657 = reshape(%656, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
    %658 = @func_1238(%657) /* ty=(Tensor[(10, 7, 5), float64],) */;
    %659 = %654.2;
    %660 = %655.1;
    %661 = %658.0;
    (%659, %660, %661, meta[relay.Constant][35] /* ty=Tensor[(1, 350), float64] */)
  };
  %662() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(1, 350), float64]) */
}

def @func_16680() -> Tensor[(135), uint16] {
  @func_16678() /* ty=Tensor[(135), uint16] */
}

def @func_15148() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  %667 = fn () -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
    %663 = @func_14877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
    %664 = @func_9208() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
    %665 = %663.0;
    %666 = %664.0;
    (%665, %666)
  };
  %667() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */
}

def @func_6775() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_18702() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %668 = @func_10017() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64]) */;
  %669 = @func_14490() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %670 = %668.0;
  %671 = %669.0;
  (%670, %671)
}

def @func_13667() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %675 = fn () -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
    %672 = @func_7102() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %673 = %672.0;
    %674 = @func_12058() /* ty=Tensor[(135), uint16] */;
    (%673, %674)
  };
  %675() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */
}

def @func_17201(%var_17156: Tensor[(33, 7), float32], %var_17172: Tensor[(2940), float64], %var_17173: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(33, 7), bool], Tensor[(33, 7), bool], Tensor[(6, 15, 10), float32], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %676 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %677 = @func_10433() /* ty=Tensor[(15, 16, 9), uint16] */;
  %678 = cast(%677, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %679 = reshape(%678, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %680 = @func_11087(%679) /* ty=(Tensor[(33, 7), float32], Tensor[(15, 16, 9), float32], Tensor[(12, 13, 7), bool], Tensor[(1092), uint8], Tensor[(15, 16, 9), float32]) */;
  %681 = %680.0;
  %682 = cast(%var_17156, dtype="bool") /* ty=Tensor[(33, 7), bool] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(2), int32] */;
  %684 = cast(%681, dtype="bool") /* ty=Tensor[(33, 7), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %686 = cast(%var_17156, dtype="bool") /* ty=Tensor[(33, 7), bool] */;
  %687 = shape_of(%681, dtype="int32") /* ty=Tensor[(2), int32] */;
  %688 = cast(%681, dtype="bool") /* ty=Tensor[(33, 7), bool] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %690 = @func_16302() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
  %691 = cast(1.96163f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %692 = cast(%var_17172, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %693 = cast(%var_17173, dtype="float64") /* ty=Tensor[(350), float64] */;
  %694 = reshape(%691, newshape=[]) /* ty=float64 */;
  %695 = reshape(%692, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %696 = reshape(%693, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %697 = @func_8523(%694, %695, %696) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %698 = %676.0;
  %699 = greater(%684, %685) /* ty=Tensor[(33, 7), bool] */;
  %700 = less(%688, %689) /* ty=Tensor[(33, 7), bool] */;
  %701 = %690.0;
  %702 = %697.3;
  (%698, %677, %699, %700, %701, %702, 1.96163f64 /* ty=float64 */, %var_17172, %var_17173)
}

def @func_13743() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  %710 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
    %703 = @func_12567() /* ty=(Tensor[(135), uint16],) */;
    %704 = @func_12081() /* ty=(Tensor[(135), uint16], Tensor[(1800), float64]) */;
    %705 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %706 = @func_8782() /* ty=Tensor[(135), uint16] */;
    %707 = %703.0;
    %708 = %704.0;
    %709 = %705.0;
    (%706, %707, %708, %709)
  };
  %710() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */
}

def @func_13284(%var_13283: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(2160), float64], Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) {
  %723 = fn (%var_13241: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(2160), float64], Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) {
    %711 = @func_10762() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %712 = cast(%var_13241, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
    %713 = reshape(%712, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
    %714 = @func_13106(%713) /* ty=(Tensor[(135), uint16], Tensor[(33, 7), float32], Tensor[(2160), uint16]) */;
    %715 = %714.2;
    %716 = cast(%715, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %717 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
    %718 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %719 = %711.0;
    %720 = log(%716) /* ty=Tensor[(2160), float64] */;
    %721 = %717.3;
    %722 = %718.0;
    (%719, %var_13241, %720, %721, %722)
  };
  %723(%var_13283) /* ty=(Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(2160), float64], Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */
}

def @func_4628(%var_4625: Tensor[(11, 3, 14), float32], %var_4626: Tensor[(11, 3, 14), float32], %var_4627: Tensor[(350), float64]) -> (Tensor[(11, 3, 14), float32], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(182), float32]) {
  @func_4623(%var_4625, %var_4626, %var_4627) /* ty=(Tensor[(11, 3, 14), float32], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(182), float32]) */
}

def @func_7344() -> Tensor[(2, 56), float32] {
  @func_7342() /* ty=Tensor[(2, 56), float32] */
}

def @func_4623(%var_4612: Tensor[(11, 3, 14), float32], %var_4613: Tensor[(11, 3, 14), float32], %var_4619: Tensor[(350), float64]) -> (Tensor[(11, 3, 14), float32], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(182), float32]) {
  %724 = cast(%var_4613, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %725 = shape_of(%var_4612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%var_4612, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %728 = cast(-2.63689f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %729 = cast(%var_4619, dtype="float64") /* ty=Tensor[(350), float64] */;
  %730 = cast(meta[relay.Constant][36] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %731 = reshape(%728, newshape=[]) /* ty=float64 */;
  %732 = reshape(%729, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %733 = reshape(%730, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %734 = @func_2650(%731, %732, %733) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %735 = floor_divide(%726, %727) /* ty=Tensor[(11, 3, 14), float32] */;
  %736 = %734.5;
  (%735, %736, -2.63689f64 /* ty=float64 */, %var_4619, meta[relay.Constant][36] /* ty=Tensor[(182), float32] */)
}

def @func_10995() -> (Tensor[(135), uint16],) {
  %739 = fn () -> (Tensor[(135), uint16],) {
    %737 = @func_10205() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %738 = %737.1;
    (%738,)
  };
  %739() /* ty=(Tensor[(135), uint16],) */
}

def @func_12131() -> (Tensor[(135), uint16],) {
  %741 = fn () -> (Tensor[(135), uint16],) {
    %740 = @func_9364() /* ty=Tensor[(135), uint16] */;
    (%740,)
  };
  %741() /* ty=(Tensor[(135), uint16],) */
}

def @func_13774() -> (Tensor[(15, 16, 9), uint16],) {
  %744 = fn () -> (Tensor[(15, 16, 9), uint16],) {
    %742 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %743 = %742.0;
    (%743,)
  };
  %744() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_3372() -> Tensor[(135), uint16] {
  @func_3370() /* ty=Tensor[(135), uint16] */
}

def @func_12922(%var_12920: float64, %var_12921: Tensor[(182, 1), float32]) -> (Tensor[(14, 2160), float32], Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(182, 1), float32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %764 = fn (%var_12895: float64, %var_12896: Tensor[(182, 1), float32]) -> (Tensor[(14, 2160), float32], Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(182, 1), float32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
    %745 = @func_12413() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2160), uint16], Tensor[(135), uint16]) */;
    %746 = %745.2;
    %747 = cast(%746, dtype="int8") /* ty=Tensor[(1, 2160), int8] */;
    %748 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 2160), uint16] */, dtype="int8") /* ty=Tensor[(14, 2160), int8] */;
    %749 = add(%747, %748) /* ty=Tensor[(14, 2160), int8] */;
    %750 = cast(%749, dtype="float32") /* ty=Tensor[(14, 2160), float32] */;
    %751 = @func_11418() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */;
    %752 = cast(%var_12895, dtype="float64") /* ty=float64 */;
    %753 = cast(%var_12896, dtype="float32") /* ty=Tensor[(182, 1), float32] */;
    %754 = reshape(%752, newshape=[]) /* ty=float64 */;
    %755 = reshape(%753, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
    %756 = @func_7287(%754, %755) /* ty=(Tensor[(135), uint16], Tensor[(3, 11, 7), uint16], Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(350), float64], Tensor[(15, 16, 9), uint16], Tensor[(?, 14, 13), bool]) */;
    %757 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
    %758 = @func_6744() /* ty=(Tensor[(135), uint16],) */;
    %759 = rsqrt(%750) /* ty=Tensor[(14, 2160), float32] */;
    %760 = %751.0;
    %761 = %756.5;
    %762 = %757.0;
    %763 = %758.0;
    (%759, %760, %761, %var_12895, %var_12896, %762, %763)
  };
  %764(%var_12920, %var_12921) /* ty=(Tensor[(14, 2160), float32], Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(182, 1), float32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */
}

def @func_3488(%var_3474: float64, %var_3475: Tensor[(2940), float64], %var_3476: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %765 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %766 = cast(%var_3474, dtype="float64") /* ty=float64 */;
  %767 = cast(%var_3475, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %768 = cast(%var_3476, dtype="float64") /* ty=Tensor[(350), float64] */;
  %769 = cast(%var_3475, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %770 = reshape(%766, newshape=[]) /* ty=float64 */;
  %771 = reshape(%767, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %772 = reshape(%768, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %773 = reshape(%769, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %774 = @func_2037(%770, %771, %772, %773) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %775 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %776 = @func_3243() /* ty=Tensor[(135), uint16] */;
  %777 = @func_3243() /* ty=Tensor[(135), uint16] */;
  %778 = %765.11;
  %779 = %774.1;
  (%775, %776, %777, %778, %779, %var_3474, %var_3475, %var_3476)
}

def @func_17589(%var_17535: Tensor[(6, 15, 10), float32], %var_17555: Tensor[(35, 10), float64], %var_17556: Tensor[(182), float32]) -> (Tensor[(6, 15, 10), uint8], Tensor[(1, 182), float32], Tensor[(35, 10), float64], Tensor[(182), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %780 = @func_12512() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %781 = %780.0;
  %782 = cast(%var_17535, dtype="uint8") /* ty=Tensor[(6, 15, 10), uint8] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%781, dtype="uint8") /* ty=Tensor[(6, 15, 10), uint8] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %786 = cast(%var_17555, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %787 = cast(%var_17556, dtype="float32") /* ty=Tensor[(182), float32] */;
  %788 = reshape(%786, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %789 = reshape(%787, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %790 = @func_3779(%788, %789) /* ty=(uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) */;
  %791 = @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %792 = @func_5890() /* ty=(Tensor[(135), uint16],) */;
  %793 = @func_11171() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %794 = bitwise_xor(%784, %785) /* ty=Tensor[(6, 15, 10), uint8] */;
  %795 = %790.3;
  %796 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
  %797 = %791.0;
  %798 = %792.0;
  %799 = %793.1;
  (%794, %795, %var_17555, %var_17556, %796, %797, %798, %799)
}

def @func_14103() -> (Tensor[(6, 15, 10), float32], Tensor[(2160), uint16], Tensor[(2160), uint16]) {
  %800 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %801 = cast(meta[relay.Constant][38] /* ty=Tensor[(2160), uint16] */, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %802 = reshape(%801, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %803 = @func_11311(%802) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %804 = %800.0;
  %805 = %803.2;
  (%804, %805, meta[relay.Constant][38] /* ty=Tensor[(2160), uint16] */)
}

def @func_13481() -> (Tensor[(135), uint16],) {
  @func_13479() /* ty=(Tensor[(135), uint16],) */
}

def @func_14105() -> (Tensor[(6, 15, 10), float32], Tensor[(2160), uint16], Tensor[(2160), uint16]) {
  @func_14103() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(2160), uint16], Tensor[(2160), uint16]) */
}

def @func_3416(%var_3414: Tensor[(9), float64], %var_3415: Tensor[(288), uint64]) -> (Tensor[(135), uint16], uint32, Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) {
  @func_3412(%var_3414, %var_3415) /* ty=(Tensor[(135), uint16], uint32, Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */
}

def @func_16678() -> Tensor[(135), uint16] {
  %806 = @func_10598() /* ty=(Tensor[(2, 4, 14), float64], Tensor[(135), uint16]) */;
  %806.1
}

def @func_5196() -> (Tensor[(135), uint16],) {
  @func_5194() /* ty=(Tensor[(135), uint16],) */
}

def @func_10001(%var_9999: int8, %var_10000: Tensor[(8, 5, 5), int8]) -> (Tensor[(8, 5, 5), bool],) {
  %810 = fn (%var_9988: int8, %var_9989: Tensor[(8, 5, 5), int8]) -> (Tensor[(8, 5, 5), bool],) {
    %807 = cast(%var_9988, dtype="bool") /* ty=bool */;
    %808 = cast(%var_9989, dtype="bool") /* ty=Tensor[(8, 5, 5), bool] */;
    %809 = less_equal(%807, %808) /* ty=Tensor[(8, 5, 5), bool] */;
    (%809,)
  };
  %810(%var_9999, %var_10000) /* ty=(Tensor[(8, 5, 5), bool],) */
}

def @func_10250() -> Tensor[(6, 15, 10), float32] {
  @func_10248() /* ty=Tensor[(6, 15, 10), float32] */
}

def @func_14237() -> (Tensor[(135), uint16],) {
  @func_14235() /* ty=(Tensor[(135), uint16],) */
}

def @func_16885() -> (Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(182), float32], Tensor[(6, 15, 10), float32]) {
  @func_16883() /* ty=(Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(182), float32], Tensor[(6, 15, 10), float32]) */
}

def @func_15989(%var_15987: int64, %var_15988: Tensor[(6, 4), int64]) -> (Tensor[(135), uint16], int64, Tensor[(88, 12), uint32], Tensor[(?, 2, 12), int8]) {
  %825 = fn (%var_15947: int64, %var_15948: Tensor[(6, 4), int64]) -> (Tensor[(135), uint16], int64, Tensor[(88, 12), uint32], Tensor[(?, 2, 12), int8]) {
    %811 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
    %812 = cast(%var_15947, dtype="int64") /* ty=int64 */;
    %813 = cast(%var_15948, dtype="int64") /* ty=Tensor[(6, 4), int64] */;
    %814 = reshape(%812, newshape=[]) /* ty=int64 */;
    %815 = reshape(%813, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), int64] */;
    %816 = @func_4970(%814, %815) /* ty=(Tensor[(1, 2, 12), int64],) */;
    %817 = %816.0;
    %818 = cast(%var_15948, dtype="int8") /* ty=Tensor[(6, 4), int8] */;
    %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(3), int32] */;
    %820 = cast(%817, dtype="int8") /* ty=Tensor[(1, 2, 12), int8] */;
    %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %822 = @func_6026() /* ty=Tensor[(135), uint16] */;
    %823 = %811.8;
    %824 = maximum(%820, %821) /* ty=Tensor[(?, 2, 12), int8] */;
    (%822, %var_15947, %823, %824)
  };
  %825(%var_15987, %var_15988) /* ty=(Tensor[(135), uint16], int64, Tensor[(88, 12), uint32], Tensor[(?, 2, 12), int8]) */
}

def @func_12060() -> Tensor[(135), uint16] {
  @func_12058() /* ty=Tensor[(135), uint16] */
}

def @func_10337() -> (Tensor[(45), float64],) {
  %826 = @func_9249() /* ty=(Tensor[(45), float64], Tensor[(15, 16, 9), uint16]) */;
  %827 = %826.0;
  (%827,)
}

def @func_13407() -> (Tensor[(6, 15, 10), float32],) {
  @func_13405() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_14939() -> (Tensor[(135), uint16],) {
  %830 = fn () -> (Tensor[(135), uint16],) {
    %828 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %829 = %828.1;
    (%829,)
  };
  %830() /* ty=(Tensor[(135), uint16],) */
}

def @func_10435() -> Tensor[(15, 16, 9), uint16] {
  @func_10433() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_18704() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  @func_18702() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */
}

def @func_5105(%var_5103: Tensor[(3, 11, 7), uint16], %var_5104: Tensor[(3, 11, 7), uint16]) -> (Tensor[(3, 11, 7), uint16], Tensor[(135), uint16]) {
  @func_5101(%var_5103, %var_5104) /* ty=(Tensor[(3, 11, 7), uint16], Tensor[(135), uint16]) */
}

def @func_14490() -> (Tensor[(6, 15, 10), float32],) {
  %831 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %832 = %831.0;
  (%832,)
}

def @func_17812() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %833 = @func_14877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %834 = @func_9635() /* ty=Tensor[(135), uint16] */;
  %835 = %833.1;
  (%834, %835)
}

def @func_1145(%var_1124: Tensor[(11, 8, 11), float64]) -> (Tensor[(11, 8, 11), float64], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) {
  %836 = cast(%var_1124, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  %837 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(11, 8, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 8, 11), float64] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %840 = cast(meta[relay.Constant][40] /* ty=Tensor[(9), float64] */, dtype="float64") /* ty=Tensor[(9), float64] */;
  %841 = cast(meta[relay.Constant][41] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %842 = cast(meta[relay.Constant][42] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %843 = reshape(%840, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %844 = reshape(%841, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %845 = reshape(%842, newshape=[2, 144]) /* ty=Tensor[(2, 144), uint64] */;
  %846 = @func_990(%843, %844, %845) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */;
  %847 = power(%838, %839) /* ty=Tensor[(11, 8, 11), float64] */;
  %848 = %846.1;
  (%847, %848, meta[relay.Constant][40] /* ty=Tensor[(9), float64] */, meta[relay.Constant][41] /* ty=Tensor[(45), float64] */, meta[relay.Constant][42] /* ty=Tensor[(288), uint64] */)
}

def @func_15896() -> (Tensor[(9, 182), bool], Tensor[(9, 182), float32]) {
  %856 = fn () -> (Tensor[(9, 182), bool], Tensor[(9, 182), float32]) {
    %849 = @func_15540() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 182), float32], Tensor[(350), float64], float64) */;
    %850 = %849.2;
    %851 = cast(%850, dtype="bool") /* ty=Tensor[(1, 182), bool] */;
    %852 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 182), float32] */, dtype="bool") /* ty=Tensor[(9, 182), bool] */;
    %853 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 182), float32] */, dtype="float32") /* ty=Tensor[(9, 182), float32] */;
    %854 = less_equal(%851, %852) /* ty=Tensor[(9, 182), bool] */;
    %855 = sin(%853) /* ty=Tensor[(9, 182), float32] */;
    (%854, %855)
  };
  %856() /* ty=(Tensor[(9, 182), bool], Tensor[(9, 182), float32]) */
}

def @func_10701() -> Tensor[(6, 15, 10), float32] {
  %857 = fn () -> Tensor[(6, 15, 10), float32] {
    @func_10248() /* ty=Tensor[(6, 15, 10), float32] */
  };
  %857() /* ty=Tensor[(6, 15, 10), float32] */
}

def @func_13109(%var_13107: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(33, 7), float32], Tensor[(2160), uint16]) {
  @func_13106(%var_13107) /* ty=(Tensor[(135), uint16], Tensor[(33, 7), float32], Tensor[(2160), uint16]) */
}

def @func_4802() -> Tensor[(135), uint16] {
  %858 = fn () -> Tensor[(135), uint16] {
    @func_3243() /* ty=Tensor[(135), uint16] */
  };
  %858() /* ty=Tensor[(135), uint16] */
}

def @func_3071() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */
}

def @func_5423() -> (Tensor[(6, 15, 10), float32],) {
  %859 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %860 = %859.0;
  (%860,)
}

def @func_11538(%var_11524: Tensor[(968), float64]) -> (Tensor[(135), uint16], Tensor[(1800), float64], Tensor[(15, 16, 9), uint16], Tensor[(968), float64]) {
  %861 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %862 = @func_3877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) */;
  %863 = cast(%var_11524, dtype="float64") /* ty=Tensor[(968), float64] */;
  %864 = reshape(%863, newshape=[11, 88]) /* ty=Tensor[(11, 88), float64] */;
  %865 = @func_7713(%864) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], Tensor[(5, 70), float64], Tensor[(11, 88), float64], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16]) */;
  %866 = %861.0;
  %867 = %862.1;
  %868 = %865.5;
  (%866, %867, %868, %var_11524)
}

def @func_9527(%var_9525: Tensor[(5, 7, 6), uint16], %var_9526: Tensor[(5, 7, 6), uint16]) -> (Tensor[(5, 7, 6), uint16], Tensor[(6, 15, 10), float32]) {
  %875 = fn (%var_9505: Tensor[(5, 7, 6), uint16], %var_9506: Tensor[(5, 7, 6), uint16]) -> (Tensor[(5, 7, 6), uint16], Tensor[(6, 15, 10), float32]) {
    %869 = cast(%var_9506, dtype="uint16") /* ty=Tensor[(5, 7, 6), uint16] */;
    %870 = shape_of(%var_9505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(%var_9505, dtype="uint16") /* ty=Tensor[(5, 7, 6), uint16] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %873 = bitwise_and(%871, %872) /* ty=Tensor[(5, 7, 6), uint16] */;
    %874 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
    (%873, %874)
  };
  %875(%var_9525, %var_9526) /* ty=(Tensor[(5, 7, 6), uint16], Tensor[(6, 15, 10), float32]) */
}

def @func_3493(%var_3490: float64, %var_3491: Tensor[(2940), float64], %var_3492: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  @func_3488(%var_3490, %var_3491, %var_3492) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */
}

def @func_10642() -> Tensor[(135), uint16] {
  %876 = fn () -> Tensor[(135), uint16] {
    @func_2627() /* ty=Tensor[(135), uint16] */
  };
  %876() /* ty=Tensor[(135), uint16] */
}

def @func_7290(%var_7288: float64, %var_7289: Tensor[(1, 182), float32]) -> (Tensor[(135), uint16], Tensor[(3, 11, 7), uint16], Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(350), float64], Tensor[(15, 16, 9), uint16], Tensor[(?, 14, 13), bool]) {
  %899 = fn (%var_7270: float64, %var_7272: Tensor[(1, 182), float32]) -> (Tensor[(135), uint16], Tensor[(3, 11, 7), uint16], Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(350), float64], Tensor[(15, 16, 9), uint16], Tensor[(?, 14, 13), bool]) {
    %877 = @func_6714() /* ty=(Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(3, 11, 7), uint16], Tensor[(33, 7), uint16]) */;
    %878 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %879 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %880 = @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %881 = cast(%var_7270, dtype="float64") /* ty=float64 */;
    %882 = cast(meta[relay.Constant][44] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %883 = cast(%var_7272, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
    %884 = reshape(%881, newshape=[]) /* ty=float64 */;
    %885 = reshape(%882, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %886 = reshape(%883, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %887 = @func_2650(%884, %885, %886) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
    %888 = %887.5;
    %889 = cast(%var_7272, dtype="bool") /* ty=Tensor[(1, 182), bool] */;
    %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
    %891 = cast(%888, dtype="bool") /* ty=Tensor[(1, 14, 13), bool] */;
    %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %893 = @func_4041() /* ty=Tensor[(135), uint16] */;
    %894 = %877.3;
    %895 = %878.0;
    %896 = %879.1;
    %897 = %880.0;
    %898 = logical_or(%891, %892) /* ty=Tensor[(?, 14, 13), bool] */;
    (%893, %894, %895, %896, %var_7270, meta[relay.Constant][44] /* ty=Tensor[(350), float64] */, %897, %898)
  };
  %899(%var_7288, %var_7289) /* ty=(Tensor[(135), uint16], Tensor[(3, 11, 7), uint16], Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(350), float64], Tensor[(15, 16, 9), uint16], Tensor[(?, 14, 13), bool]) */
}

def @func_16195() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32], Tensor[(1056), uint32], Tensor[(350), float64], Tensor[(12, 15, 10), float64], Tensor[(1800), float64], Tensor[(45), float64]) {
  %916 = fn () -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32], Tensor[(1056), uint32], Tensor[(350), float64], Tensor[(12, 15, 10), float64], Tensor[(1800), float64], Tensor[(45), float64]) {
    %900 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
    %901 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %902 = cast(meta[relay.Constant][45] /* ty=Tensor[(1056), uint32] */, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
    %903 = cast(meta[relay.Constant][46] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %904 = reshape(%902, newshape=[1056]) /* ty=Tensor[(1056), uint32] */;
    %905 = reshape(%903, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %906 = @func_11652(%904, %905) /* ty=(Tensor[(15, 16, 9), float32], Tensor[(15, 16, 9), uint16], Tensor[(182), float32], Tensor[(1056), uint32], Tensor[(182), float32], Tensor[(350), float64], Tensor[(968), float64]) */;
    %907 = cast(meta[relay.Constant][47] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %908 = cast(meta[relay.Constant][48] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %909 = reshape(%907, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), float64] */;
    %910 = reshape(%908, newshape=[45]) /* ty=Tensor[(45), float64] */;
    %911 = @func_1638(%909, %910) /* ty=(Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) */;
    %912 = %900.0;
    %913 = %901.0;
    %914 = %906.0;
    %915 = %911.0;
    (%912, %913, %914, meta[relay.Constant][45] /* ty=Tensor[(1056), uint32] */, meta[relay.Constant][46] /* ty=Tensor[(350), float64] */, %915, meta[relay.Constant][47] /* ty=Tensor[(1800), float64] */, meta[relay.Constant][48] /* ty=Tensor[(45), float64] */)
  };
  %916() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32], Tensor[(1056), uint32], Tensor[(350), float64], Tensor[(12, 15, 10), float64], Tensor[(1800), float64], Tensor[(45), float64]) */
}

def @func_10017() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64]) {
  %917 = @func_9077() /* ty=(Tensor[(135), uint16],) */;
  %918 = cast(meta[relay.Constant][49] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %919 = reshape(%918, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
  %920 = @func_1238(%919) /* ty=(Tensor[(10, 7, 5), float64],) */;
  %921 = %917.0;
  %922 = @func_5265() /* ty=Tensor[(135), uint16] */;
  %923 = %920.0;
  (%921, %922, %923, meta[relay.Constant][49] /* ty=Tensor[(350), float64] */)
}

def @func_8240() -> (Tensor[(15, 16, 9), uint16],) {
  %924 = @func_6220() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%924,)
}

def @func_2848() -> (Tensor[(135), uint16],) {
  %925 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %926 = %925.4;
  (%926,)
}

def @func_4931() -> Tensor[(15, 16, 9), uint16] {
  @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_5885() -> (Tensor[(15, 16, 9), float32],) {
  %929 = fn () -> (Tensor[(15, 16, 9), float32],) {
    %927 = @func_5581() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), float32]) */;
    %928 = %927.1;
    (%928,)
  };
  %929() /* ty=(Tensor[(15, 16, 9), float32],) */
}

def @func_11927() -> (Tensor[(135), uint16],) {
  %930 = @func_9364() /* ty=Tensor[(135), uint16] */;
  (%930,)
}

def @func_1238(%var_1232: Tensor[(10, 7, 5), float64]) -> (Tensor[(10, 7, 5), float64],) {
  %931 = cast(%var_1232, dtype="float64") /* ty=Tensor[(10, 7, 5), float64] */;
  %932 = cosh(%931) /* ty=Tensor[(10, 7, 5), float64] */;
  (%932,)
}

def @func_7377() -> (Tensor[(6, 15, 10), float32],) {
  @func_7375() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_8392() -> Tensor[(135), uint16] {
  %934 = fn () -> Tensor[(135), uint16] {
    %933 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
    %933.1
  };
  %934() /* ty=Tensor[(135), uint16] */
}

def @func_14066() -> (Tensor[(135), uint16],) {
  %937 = fn () -> (Tensor[(135), uint16],) {
    %935 = @func_10205() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %936 = %935.1;
    (%936,)
  };
  %937() /* ty=(Tensor[(135), uint16],) */
}

def @func_6221() -> Tensor[(15, 16, 9), uint16] {
  %939 = fn () -> Tensor[(15, 16, 9), uint16] {
    %938 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
    %938.2
  };
  %939() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_16050() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  %946 = fn () -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
    %940 = @func_4694() /* ty=(Tensor[(135), uint16],) */;
    %941 = @func_12984() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %942 = @func_14877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
    %943 = %940.0;
    %944 = %941.0;
    %945 = %942.0;
    (%943, %944, %945)
  };
  %946() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */
}

def @func_6623() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %947 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %948 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %949 = %947.0;
  %950 = %948.1;
  (%949, %950)
}

def @func_12450() -> (Tensor[(135), uint16],) {
  %952 = fn () -> (Tensor[(135), uint16],) {
    %951 = @func_11157() /* ty=Tensor[(135), uint16] */;
    (%951,)
  };
  %952() /* ty=(Tensor[(135), uint16],) */
}

def @func_7958(%var_7956: Tensor[(180, 12), uint16]) -> (Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(180, 12), int8], Tensor[(15, 16, 9), uint16]) {
  @func_7955(%var_7956) /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(180, 12), int8], Tensor[(15, 16, 9), uint16]) */
}

def @func_16452(%var_16422: float32) -> (Tensor[(6, 15, 10), float32], Tensor[(1, 14, 13), float32], float32, Tensor[(182), float32], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(135), uint16]) {
  %953 = @func_15147() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %954 = cast(%var_16422, dtype="float32") /* ty=float32 */;
  %955 = cast(meta[relay.Constant][50] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %956 = reshape(%954, newshape=[]) /* ty=float32 */;
  %957 = reshape(%955, newshape=[1, 14, 13]) /* ty=Tensor[(1, 14, 13), float32] */;
  %958 = @func_1670(%956, %957) /* ty=(Tensor[(1, 14, 13), float32],) */;
  %959 = @func_11895() /* ty=(Tensor[(135), uint16],) */;
  %960 = @func_15491() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(5, 11, 6), float32], Tensor[(15, 16, 9), uint16]) */;
  %961 = @func_6773() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %962 = %953.0;
  %963 = %958.0;
  %964 = %959.0;
  %965 = @func_7975() /* ty=Tensor[(15, 16, 9), uint16] */;
  %966 = %960.1;
  %967 = %961.1;
  (%962, %963, %var_16422, meta[relay.Constant][50] /* ty=Tensor[(182), float32] */, %964, %965, %966, %967)
}

def @func_12081() -> (Tensor[(135), uint16], Tensor[(1800), float64]) {
  %968 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %969 = @func_3877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) */;
  %970 = %968.0;
  %971 = %969.1;
  (%970, %971)
}

def @func_3135() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %977 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
    %972 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
    %973 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
    %974 = %972.0;
    %975 = %973.0;
    %976 = @func_2627() /* ty=Tensor[(135), uint16] */;
    (%974, %975, %976)
  };
  %977() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_3815() -> (Tensor[(15, 16, 9), uint16],) {
  %980 = fn () -> (Tensor[(15, 16, 9), uint16],) {
    %978 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
    %979 = %978.1;
    (%979,)
  };
  %980() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_7818(%var_7798: Tensor[(968), float64], %var_7813: Tensor[(350), float64], %var_7814: Tensor[(1, 182), float32]) -> (Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16], Tensor[(968), float64], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(1, 182), float32]) {
  %981 = @func_7102() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %982 = cast(%var_7798, dtype="float64") /* ty=Tensor[(968), float64] */;
  %983 = reshape(%982, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), float64] */;
  %984 = @func_1145(%983) /* ty=(Tensor[(11, 8, 11), float64], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */;
  %985 = cast(9.68049f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %986 = cast(%var_7813, dtype="float64") /* ty=Tensor[(350), float64] */;
  %987 = cast(%var_7814, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %988 = reshape(%985, newshape=[]) /* ty=float64 */;
  %989 = reshape(%986, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %990 = reshape(%987, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %991 = @func_2650(%988, %989, %990) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %992 = %981.0;
  %993 = %984.1;
  %994 = %991.5;
  (%992, %993, %var_7798, %994, 9.68049f64 /* ty=float64 */, %var_7813, %var_7814)
}

def @func_9636() -> Tensor[(135), uint16] {
  %996 = fn () -> Tensor[(135), uint16] {
    %995 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
    %995.0
  };
  %996() /* ty=Tensor[(135), uint16] */
}

def @func_12115() -> (Tensor[(135), uint16],) {
  @func_12113() /* ty=(Tensor[(135), uint16],) */
}

def @func_3724() -> (Tensor[(1800), float64],) {
  %999 = fn () -> (Tensor[(1800), float64],) {
    %997 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
    %998 = %997.10;
    (%998,)
  };
  %999() /* ty=(Tensor[(1800), float64],) */
}

def @func_9693(%var_9650: Tensor[(6, 15, 10), float32], %var_9678: Tensor[(6, 15, 10), int16]) -> (Tensor[(6, 15, 10), uint16],) {
  %1000 = @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1001 = %1000.0;
  %1002 = cast(%var_9650, dtype="int16") /* ty=Tensor[(6, 15, 10), int16] */;
  %1003 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1004 = cast(%1001, dtype="int16") /* ty=Tensor[(6, 15, 10), int16] */;
  %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1006 = minimum(%1004, %1005) /* ty=Tensor[(6, 15, 10), int16] */;
  %1007 = cast(%var_9678, dtype="uint16") /* ty=Tensor[(6, 15, 10), uint16] */;
  %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%1006, dtype="uint16") /* ty=Tensor[(6, 15, 10), uint16] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1011 = subtract(%1009, %1010) /* ty=Tensor[(6, 15, 10), uint16] */;
  (%1011,)
}

def @func_13(%var_0: Tensor[(15, 1, 9), uint16], %var_1: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), uint16],) {
  %1012 = cast(%var_0, dtype="uint16") /* ty=Tensor[(15, 1, 9), uint16] */;
  %1013 = cast(%var_1, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %1014 = maximum(%1012, %1013) /* ty=Tensor[(15, 16, 9), uint16] */;
  (%1014,)
}

def @func_1241(%var_1239: Tensor[(10, 7, 5), float64]) -> (Tensor[(10, 7, 5), float64],) {
  @func_1238(%var_1239) /* ty=(Tensor[(10, 7, 5), float64],) */
}

def @func_2520(%var_2518: Tensor[(2160), uint16]) -> (Tensor[(6, 15, 10), int8], Tensor[(6, 15, 10), int8], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16]) {
  @func_2517(%var_2518) /* ty=(Tensor[(6, 15, 10), int8], Tensor[(6, 15, 10), int8], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16]) */
}

def @func_5696(%var_5695: Tensor[(175, 2), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(175, 2), float64]) {
  %1020 = fn (%var_5677: Tensor[(175, 2), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(175, 2), float64]) {
    %1015 = cast(%var_5677, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
    %1016 = reshape(%1015, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
    %1017 = @func_1238(%1016) /* ty=(Tensor[(10, 7, 5), float64],) */;
    %1018 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
    %1019 = %1017.0;
    (%1018, %1019, %var_5677)
  };
  %1020(%var_5695) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(175, 2), float64]) */
}

def @func_18102() -> (Tensor[(135), uint16],) {
  %1023 = fn () -> (Tensor[(135), uint16],) {
    %1021 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
    %1022 = %1021.0;
    (%1022,)
  };
  %1023() /* ty=(Tensor[(135), uint16],) */
}

def @func_11813() -> Tensor[(135), uint16] {
  %1024 = fn () -> Tensor[(135), uint16] {
    @func_3243() /* ty=Tensor[(135), uint16] */
  };
  %1024() /* ty=Tensor[(135), uint16] */
}

def @func_16737() -> (Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %1025 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %1026 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %1027 = %1025.0;
  %1028 = %1026.2;
  %1029 = @func_11157() /* ty=Tensor[(135), uint16] */;
  (%1027, %1028, %1029)
}

def @func_16392() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1030 = @func_11418() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */;
  %1031 = @func_14826() /* ty=(Tensor[(135), uint16],) */;
  %1032 = %1030.1;
  %1033 = @func_15774() /* ty=Tensor[(135), uint16] */;
  %1034 = %1031.0;
  (%1032, %1033, %1034)
}

def @func_10044() -> (Tensor[(135), uint16], Tensor[(13, 6, 13), float64], Tensor[(1014, 1), float64]) {
  %1035 = cast(meta[relay.Constant][51] /* ty=Tensor[(1014, 1), float64] */, dtype="float64") /* ty=Tensor[(1014, 1), float64] */;
  %1036 = reshape(%1035, newshape=[13, 6, 13]) /* ty=Tensor[(13, 6, 13), float64] */;
  %1037 = @func_6850(%1036) /* ty=(Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350, 1), float64]) */;
  %1038 = @func_8391() /* ty=Tensor[(135), uint16] */;
  %1039 = %1037.0;
  (%1038, %1039, meta[relay.Constant][51] /* ty=Tensor[(1014, 1), float64] */)
}

def @func_11804() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  @func_11802() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */
}

def @func_7977() -> Tensor[(15, 16, 9), uint16] {
  @func_7975() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_14124() -> (Tensor[(135), uint16],) {
  %1040 = @func_12984() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1041 = %1040.3;
  (%1041,)
}

def @func_18670() -> (Tensor[(135), uint16],) {
  %1044 = fn () -> (Tensor[(135), uint16],) {
    %1042 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
    %1043 = %1042.0;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(135), uint16],) */
}

def @func_14726(%var_14724: Tensor[(350), float64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, float64, Tensor[(2940, 1), float64], Tensor[(350), float64]) {
  @func_14723(%var_14724) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], float64, float64, Tensor[(2940, 1), float64], Tensor[(350), float64]) */
}

def @func_14723(%var_14721: Tensor[(350), float64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, float64, Tensor[(2940, 1), float64], Tensor[(350), float64]) {
  %1045 = @func_12413() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2160), uint16], Tensor[(135), uint16]) */;
  %1046 = cast(-3.51785f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1047 = cast(meta[relay.Constant][52] /* ty=Tensor[(2940, 1), float64] */, dtype="float64") /* ty=Tensor[(2940, 1), float64] */;
  %1048 = cast(%var_14721, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1049 = reshape(%1046, newshape=[]) /* ty=float64 */;
  %1050 = reshape(%1047, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %1051 = reshape(%1048, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1052 = @func_8523(%1049, %1050, %1051) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
  %1053 = %1045.0;
  %1054 = @func_9635() /* ty=Tensor[(135), uint16] */;
  %1055 = %1052.2;
  (%1053, %1054, %1055, -3.51785f64 /* ty=float64 */, meta[relay.Constant][52] /* ty=Tensor[(2940, 1), float64] */, %var_14721)
}

def @func_10433() -> Tensor[(15, 16, 9), uint16] {
  %1056 = @func_7003() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1056.0
}

def @func_10248() -> Tensor[(6, 15, 10), float32] {
  %1057 = @func_5655() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */;
  %1057.1
}

def @func_15493() -> (Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(5, 11, 6), float32], Tensor[(15, 16, 9), uint16]) {
  @func_15491() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(5, 11, 6), float32], Tensor[(15, 16, 9), uint16]) */
}

def @func_9596() -> (Tensor[(45), float64],) {
  %1060 = fn () -> (Tensor[(45), float64],) {
    %1058 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
    %1059 = %1058.9;
    (%1059,)
  };
  %1060() /* ty=(Tensor[(45), float64],) */
}

def @func_13928() -> Tensor[(15, 16, 9), uint16] {
  @func_13926() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_3652() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) {
  %1070 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) {
    %1061 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
    %1062 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
    %1063 = cast(meta[relay.Constant][53] /* ty=Tensor[(6, 15, 10), float32] */, dtype="bool") /* ty=Tensor[(6, 15, 10), bool] */;
    %1064 = shape_of(%1062, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1065 = cast(%1062, dtype="bool") /* ty=Tensor[(6, 15, 10), bool] */;
    %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1067 = @func_3370() /* ty=Tensor[(135), uint16] */;
    %1068 = %1061.0;
    %1069 = less(%1065, %1066) /* ty=Tensor[(6, 15, 10), bool] */;
    (%1067, %1068, %1069)
  };
  %1070() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */
}

def @func_9366() -> Tensor[(135), uint16] {
  @func_9364() /* ty=Tensor[(135), uint16] */
}

def @func_13160(%var_13137: Tensor[(10), float64], %var_13151: Tensor[(1014), float64]) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(10), float64], Tensor[(13, 6, 13), float64], Tensor[(1014), float64]) {
  %1071 = cast(%var_13137, dtype="float64") /* ty=Tensor[(10), float64] */;
  %1072 = reshape(%1071, newshape=[1, 10]) /* ty=Tensor[(1, 10), float64] */;
  %1073 = @func_6989(%1072) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(1, 10), float64], Tensor[(135), uint16]) */;
  %1074 = cast(%var_13151, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %1075 = reshape(%1074, newshape=[13, 6, 13]) /* ty=Tensor[(13, 6, 13), float64] */;
  %1076 = @func_6850(%1075) /* ty=(Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350, 1), float64]) */;
  %1077 = @func_9635() /* ty=Tensor[(135), uint16] */;
  %1078 = %1073.0;
  %1079 = %1076.0;
  (%1077, %1078, %var_13137, %1079, %var_13151)
}

def @func_2414() -> (Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) {
  %1080 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  %1081 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(6, 15, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1082 = cast(meta[relay.Constant][54] /* ty=Tensor[(6, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(6, 15, 10), int8] */;
  %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1084 = cast(meta[relay.Constant][56] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1085 = cast(meta[relay.Constant][57] /* ty=Tensor[(1056), uint32] */, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
  %1086 = cast(meta[relay.Constant][58] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1087 = reshape(%1084, newshape=[]) /* ty=uint32 */;
  %1088 = reshape(%1085, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), uint32] */;
  %1089 = reshape(%1086, newshape=[3, 45]) /* ty=Tensor[(3, 45), uint16] */;
  %1090 = @func_616(%1087, %1088, %1089) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */;
  %1091 = bitwise_and(%1082, %1083) /* ty=Tensor[(6, 15, 10), int8] */;
  %1092 = %1090.4;
  (%1091, %1092, meta[relay.Constant][56] /* ty=uint32 */, meta[relay.Constant][57] /* ty=Tensor[(1056), uint32] */, meta[relay.Constant][58] /* ty=Tensor[(135), uint16] */)
}

def @func_18982() -> Tensor[(135), uint16] {
  @func_11563() /* ty=Tensor[(135), uint16] */
}

def @func_480(%var_477: Tensor[(9, 2, 16), uint64], %var_478: Tensor[(9, 2, 16), uint64], %var_479: Tensor[(135), uint16]) -> (Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) {
  @func_475(%var_477, %var_478, %var_479) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */
}

def @func_10019() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64]) {
  @func_10017() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64]) */
}

def @func_12801() -> (Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  %1093 = @func_10964() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1094 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %1095 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %1096 = %1093.0;
  %1097 = %1094.1;
  %1098 = %1095.0;
  (%1096, %1097, %1098)
}

def @func_15069() -> (Tensor[(135), uint16],) {
  %1101 = fn () -> (Tensor[(135), uint16],) {
    %1099 = @func_12567() /* ty=(Tensor[(135), uint16],) */;
    %1100 = %1099.0;
    (%1100,)
  };
  %1101() /* ty=(Tensor[(135), uint16],) */
}

def @func_2416() -> (Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) {
  @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */
}

def @func_15023() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_15021() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_9249() -> (Tensor[(45), float64], Tensor[(15, 16, 9), uint16]) {
  %1102 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %1103 = %1102.11;
  %1104 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%1103, %1104)
}

def @func_14650() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint16]) {
  @func_14648() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint16]) */
}

def @func_4448() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */
}

def @func_12083() -> (Tensor[(135), uint16], Tensor[(1800), float64]) {
  @func_12081() /* ty=(Tensor[(135), uint16], Tensor[(1800), float64]) */
}

def @func_4907(%var_4852: Tensor[(2160), uint16], %var_4873: float64) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(10, 7, 5), float64], float64, Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(1, 2940), float64]) {
  %1105 = @func_3134() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1106 = %1105.0;
  %1107 = cast(%1106, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1108 = cast(%var_4852, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1109 = reshape(%1107, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %1110 = reshape(%1108, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1111 = @func_13(%1109, %1110) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1112 = cast(%var_4873, dtype="float64") /* ty=float64 */;
  %1113 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 2940), float64] */, dtype="float64") /* ty=Tensor[(1, 2940), float64] */;
  %1114 = cast(meta[relay.Constant][60] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1115 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 2940), float64] */, dtype="float64") /* ty=Tensor[(1, 2940), float64] */;
  %1116 = reshape(%1112, newshape=[]) /* ty=float64 */;
  %1117 = reshape(%1113, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1118 = reshape(%1114, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1119 = reshape(%1115, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1120 = @func_2037(%1116, %1117, %1118, %1119) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %1121 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %1122 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1123 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 2940), float64] */, dtype="float64") /* ty=Tensor[(1, 2940), float64] */;
  %1124 = %1111.0;
  %1125 = %1120.0;
  %1126 = %1121.0;
  %1127 = %1122.0;
  %1128 = tan(%1123) /* ty=Tensor[(1, 2940), float64] */;
  (%1106, %1124, %var_4852, %1125, %var_4873, meta[relay.Constant][60] /* ty=Tensor[(350), float64] */, %1126, %1127, %1128)
}

def @func_7823(%var_7820: Tensor[(968), float64], %var_7821: Tensor[(350), float64], %var_7822: Tensor[(1, 182), float32]) -> (Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16], Tensor[(968), float64], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(1, 182), float32]) {
  @func_7818(%var_7820, %var_7821, %var_7822) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16], Tensor[(968), float64], Tensor[(1, 14, 13), float32], float64, Tensor[(350), float64], Tensor[(1, 182), float32]) */
}

def @func_7633() -> (Tensor[(135), uint16], Tensor[(33, 7), uint16]) {
  @func_7631() /* ty=(Tensor[(135), uint16], Tensor[(33, 7), uint16]) */
}

def @func_11929() -> (Tensor[(135), uint16],) {
  @func_11927() /* ty=(Tensor[(135), uint16],) */
}

def @func_9251() -> (Tensor[(45), float64], Tensor[(15, 16, 9), uint16]) {
  @func_9249() /* ty=(Tensor[(45), float64], Tensor[(15, 16, 9), uint16]) */
}

def @func_12851(%var_12849: Tensor[(10, 7, 11), bool], %var_12850: Tensor[(10, 7, 11), bool]) -> (Tensor[(10, 7, 11), float32], Tensor[(6, 15, 10), float32]) {
  %1138 = fn (%var_12810: Tensor[(10, 7, 11), bool], %var_12811: Tensor[(10, 7, 11), bool]) -> (Tensor[(10, 7, 11), float32], Tensor[(6, 15, 10), float32]) {
    %1129 = cast(%var_12811, dtype="bool") /* ty=Tensor[(10, 7, 11), bool] */;
    %1130 = shape_of(%var_12810, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1131 = cast(%var_12810, dtype="bool") /* ty=Tensor[(10, 7, 11), bool] */;
    %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1133 = logical_and(%1131, %1132) /* ty=Tensor[(10, 7, 11), bool] */;
    %1134 = cast(%1133, dtype="float32") /* ty=Tensor[(10, 7, 11), float32] */;
    %1135 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %1136 = sin(%1134) /* ty=Tensor[(10, 7, 11), float32] */;
    %1137 = %1135.0;
    (%1136, %1137)
  };
  %1138(%var_12849, %var_12850) /* ty=(Tensor[(10, 7, 11), float32], Tensor[(6, 15, 10), float32]) */
}

def @func_3987() -> (Tensor[(6, 15, 10), float32],) {
  %1140 = fn () -> (Tensor[(6, 15, 10), float32],) {
    %1139 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
    (%1139,)
  };
  %1140() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_7375() -> (Tensor[(6, 15, 10), float32],) {
  %1141 = @func_5655() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */;
  %1142 = %1141.1;
  (%1142,)
}

def @func_12229() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(231), uint16], Tensor[(2, 56), float32], Tensor[(135), uint16]) {
  %1158 = fn () -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(231), uint16], Tensor[(2, 56), float32], Tensor[(135), uint16]) {
    %1143 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
    %1144 = @func_10306() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
    %1145 = @func_3134() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %1146 = cast(meta[relay.Constant][61] /* ty=Tensor[(231), uint16] */, dtype="uint16") /* ty=Tensor[(231), uint16] */;
    %1147 = cast(meta[relay.Constant][61] /* ty=Tensor[(231), uint16] */, dtype="uint16") /* ty=Tensor[(231), uint16] */;
    %1148 = reshape(%1146, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), uint16] */;
    %1149 = reshape(%1147, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), uint16] */;
    %1150 = @func_5101(%1148, %1149) /* ty=(Tensor[(3, 11, 7), uint16], Tensor[(135), uint16]) */;
    %1151 = %1143.5;
    %1152 = %1144.3;
    %1153 = %1145.0;
    %1154 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
    %1155 = %1150.1;
    %1156 = @func_7342() /* ty=Tensor[(2, 56), float32] */;
    %1157 = @func_4801() /* ty=Tensor[(135), uint16] */;
    (%1151, %1152, %1153, %1154, %1155, meta[relay.Constant][61] /* ty=Tensor[(231), uint16] */, %1156, %1157)
  };
  %1158() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(231), uint16], Tensor[(2, 56), float32], Tensor[(135), uint16]) */
}

def @func_12568() -> (Tensor[(135), uint16],) {
  %1160 = fn () -> (Tensor[(135), uint16],) {
    %1159 = @func_10641() /* ty=Tensor[(135), uint16] */;
    (%1159,)
  };
  %1160() /* ty=(Tensor[(135), uint16],) */
}

def @func_5101(%var_5083: Tensor[(3, 11, 7), uint16], %var_5084: Tensor[(3, 11, 7), uint16]) -> (Tensor[(3, 11, 7), uint16], Tensor[(135), uint16]) {
  %1161 = cast(%var_5084, dtype="uint16") /* ty=Tensor[(3, 11, 7), uint16] */;
  %1162 = shape_of(%var_5083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1163 = cast(%var_5083, dtype="uint16") /* ty=Tensor[(3, 11, 7), uint16] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1165 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %1166 = left_shift(%1163, %1164) /* ty=Tensor[(3, 11, 7), uint16] */;
  %1167 = %1165.0;
  (%1166, %1167)
}

def @func_8190() -> (Tensor[(135), uint16],) {
  %1170 = fn () -> (Tensor[(135), uint16],) {
    %1168 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
    %1169 = %1168.1;
    (%1169,)
  };
  %1170() /* ty=(Tensor[(135), uint16],) */
}

def @func_18949() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1171 = @func_16806() /* ty=(Tensor[(135), uint16],) */;
  %1172 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
  %1173 = %1171.0;
  %1174 = @func_2453() /* ty=Tensor[(135), uint16] */;
  %1175 = %1172.0;
  (%1173, %1174, %1175)
}

def @func_10599() -> (Tensor[(2, 4, 14), float64], Tensor[(135), uint16]) {
  %1180 = fn () -> (Tensor[(2, 4, 14), float64], Tensor[(135), uint16]) {
    %1176 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
    %1177 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
    %1178 = %1176.1;
    %1179 = %1177.0;
    (%1178, %1179)
  };
  %1180() /* ty=(Tensor[(2, 4, 14), float64], Tensor[(135), uint16]) */
}

def @func_7593(%var_7513: Tensor[(2940), float64]) -> (Tensor[(6, 15, 10), float64], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float64], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) {
  %1181 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1182 = %1181.0;
  %1183 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %1184 = %1183.1;
  %1185 = cast(%1184, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %1186 = shape_of(%1182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1187 = cast(%1182, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1189 = cast(-9.44843f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1190 = cast(%var_7513, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %1191 = cast(meta[relay.Constant][62] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1192 = cast(%var_7513, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %1193 = reshape(%1189, newshape=[]) /* ty=float64 */;
  %1194 = reshape(%1190, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1195 = reshape(%1191, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1196 = reshape(%1192, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1197 = @func_2037(%1193, %1194, %1195, %1196) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %1198 = cast(meta[relay.Constant][62] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1199 = reshape(%1198, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1200 = @func_6291(%1199) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) */;
  %1201 = %1200.3;
  %1202 = cast(%1201, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %1203 = shape_of(%1182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1204 = cast(%1182, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1206 = cast(%1201, dtype="float32") /* ty=Tensor[(6, 15, 10), float32] */;
  %1207 = divide(%1187, %1188) /* ty=Tensor[(6, 15, 10), float64] */;
  %1208 = %1197.2;
  %1209 = floor_mod(%1204, %1205) /* ty=Tensor[(6, 15, 10), float64] */;
  %1210 = rsqrt(%1206) /* ty=Tensor[(6, 15, 10), float32] */;
  %1211 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
  (%1207, %1208, -9.44843f64 /* ty=float64 */, %var_7513, meta[relay.Constant][62] /* ty=Tensor[(350), float64] */, %1209, %1210, %1211)
}

def @func_4372() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1212 = @func_4041() /* ty=Tensor[(135), uint16] */;
  %1213 = @func_2627() /* ty=Tensor[(135), uint16] */;
  %1214 = @func_3243() /* ty=Tensor[(135), uint16] */;
  (%1212, %1213, %1214)
}

def @func_5757() -> (Tensor[(15, 16, 9), uint16],) {
  @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_16921() -> (Tensor[(1056), uint32],) {
  %1215 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %1216 = %1215.0;
  (%1216,)
}

def @func_4715() -> Tensor[(135), uint16] {
  %1217 = fn () -> Tensor[(135), uint16] {
    @func_3370() /* ty=Tensor[(135), uint16] */
  };
  %1217() /* ty=Tensor[(135), uint16] */
}

def @func_13479() -> (Tensor[(135), uint16],) {
  %1218 = @func_12058() /* ty=Tensor[(135), uint16] */;
  (%1218,)
}

def @func_3245() -> Tensor[(135), uint16] {
  @func_3243() /* ty=Tensor[(135), uint16] */
}

def @func_15433() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1223 = fn () -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
    %1219 = @func_12567() /* ty=(Tensor[(135), uint16],) */;
    %1220 = @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */;
    %1221 = @func_10641() /* ty=Tensor[(135), uint16] */;
    %1222 = %1219.0;
    (%1220, %1221, %1222)
  };
  %1223() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_7342() -> Tensor[(2, 56), float32] {
  %1224 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
  %1225 = %1224.2;
  %1226 = cast(%1225, dtype="float32") /* ty=Tensor[(2, 56), float32] */;
  sqrt(%1226) /* ty=Tensor[(2, 56), float32] */
}

def @func_5425() -> (Tensor[(6, 15, 10), float32],) {
  @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_13164(%var_13162: Tensor[(10), float64], %var_13163: Tensor[(1014), float64]) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(10), float64], Tensor[(13, 6, 13), float64], Tensor[(1014), float64]) {
  @func_13160(%var_13162, %var_13163) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(10), float64], Tensor[(13, 6, 13), float64], Tensor[(1014), float64]) */
}

def @func_14805(%var_14786: float64) -> (Tensor[(6, 15, 10), float32], float64, Tensor[(1, 182), bool], Tensor[(350), float64], Tensor[(210, 14), float32], Tensor[(135), uint16]) {
  %1227 = cast(%var_14786, dtype="float64") /* ty=float64 */;
  %1228 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 182), float32] */, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %1229 = reshape(%1227, newshape=[]) /* ty=float64 */;
  %1230 = reshape(%1228, newshape=[182, 1]) /* ty=Tensor[(182, 1), float32] */;
  %1231 = @func_12919(%1229, %1230) /* ty=(Tensor[(14, 2160), float32], Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(182, 1), float32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1232 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 182), float32] */, dtype="bool") /* ty=Tensor[(1, 182), bool] */;
  %1233 = cast(%var_14786, dtype="bool") /* ty=bool */;
  %1234 = cast(meta[relay.Constant][64] /* ty=Tensor[(210, 14), float64] */, dtype="float64") /* ty=Tensor[(210, 14), float64] */;
  %1235 = reshape(%1234, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %1236 = @func_7593(%1235) /* ty=(Tensor[(6, 15, 10), float64], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float64], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */;
  %1237 = cast(meta[relay.Constant][64] /* ty=Tensor[(210, 14), float64] */, dtype="float32") /* ty=Tensor[(210, 14), float32] */;
  %1238 = @func_11802() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1239 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %1240 = %1231.3;
  %1241 = logical_or(%1232, %1233) /* ty=Tensor[(1, 182), bool] */;
  %1242 = %1236.4;
  %1243 = log(%1237) /* ty=Tensor[(210, 14), float32] */;
  %1244 = %1238.0;
  (%1239, %1240, %1241, %1242, %1243, %1244)
}

def @func_10852() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %1248 = fn () -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
    %1245 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %1246 = %1245.0;
    %1247 = @func_4801() /* ty=Tensor[(135), uint16] */;
    (%1246, %1247)
  };
  %1248() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */
}

def @func_10762() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1249 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1250 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1251 = %1249.1;
  %1252 = %1250.1;
  (%1251, %1252)
}

def @func_7457(%var_7407: Tensor[(5, 70), float64], %var_7423: Tensor[(5, 70), float32], %var_7440: float64) -> (Tensor[(6, 15, 10), float32], Tensor[(1, 182), float32], Tensor[(182), float32], Tensor[(5, 70), float32], float64, float64) {
  %1253 = cast(%var_7407, dtype="float64") /* ty=Tensor[(5, 70), float64] */;
  %1254 = cast(meta[relay.Constant][65] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1255 = reshape(%1253, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1256 = reshape(%1254, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %1257 = @func_3779(%1255, %1256) /* ty=(uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) */;
  %1258 = cast(%var_7407, dtype="float32") /* ty=Tensor[(5, 70), float32] */;
  %1259 = log2(%1258) /* ty=Tensor[(5, 70), float32] */;
  %1260 = cast(%var_7423, dtype="bool") /* ty=Tensor[(5, 70), bool] */;
  %1261 = shape_of(%1259, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1262 = cast(%1259, dtype="bool") /* ty=Tensor[(5, 70), bool] */;
  %1263 = dyn.reshape(%1260, %1261, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1264 = greater_equal(%1262, %1263) /* ty=Tensor[(5, 70), bool] */;
  %1265 = cast(%1264, dtype="float32") /* ty=Tensor[(5, 70), float32] */;
  %1266 = cast(%var_7440, dtype="float64") /* ty=float64 */;
  %1267 = sin(%1265) /* ty=Tensor[(5, 70), float32] */;
  %1268 = cast(%1267, dtype="float64") /* ty=Tensor[(5, 70), float64] */;
  %1269 = cast(meta[relay.Constant][65] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1270 = reshape(%1266, newshape=[]) /* ty=float64 */;
  %1271 = reshape(%1268, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1272 = reshape(%1269, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1273 = @func_2650(%1270, %1271, %1272) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
  %1274 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  %1275 = %1257.3;
  %1276 = %1273.2;
  (%1274, %1275, meta[relay.Constant][65] /* ty=Tensor[(182), float32] */, %1267, %1276, %var_7440)
}

def @func_16883() -> (Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(182), float32], Tensor[(6, 15, 10), float32]) {
  %1277 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1278 = cast(meta[relay.Constant][66] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1279 = reshape(%1278, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %1280 = @func_5509(%1279) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(135), uint16], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(350), float64]) */;
  %1281 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
  %1282 = %1277.2;
  %1283 = %1280.2;
  %1284 = %1281.1;
  (%1282, %1283, meta[relay.Constant][66] /* ty=Tensor[(182), float32] */, %1284)
}

def @func_15683() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1285 = @func_14877() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1286 = @func_15641() /* ty=Tensor[(135), uint16] */;
  %1287 = %1285.1;
  (%1286, %1287)
}

def @func_4529() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) {
  @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */
}

def @func_10817() -> Tensor[(135), uint16] {
  %1288 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
  %1288.1
}

def @func_6773() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1289 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
  %1290 = @func_3243() /* ty=Tensor[(135), uint16] */;
  %1291 = %1289.0;
  (%1290, %1291)
}

def @func_7631() -> (Tensor[(135), uint16], Tensor[(33, 7), uint16]) {
  %1292 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %1293 = @func_6714() /* ty=(Tensor[(15, 16, 9), float32], Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(3, 11, 7), uint16], Tensor[(33, 7), uint16]) */;
  %1294 = %1292.0;
  %1295 = %1293.4;
  (%1294, %1295)
}

def @func_15932() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_15930() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_2993() -> Tensor[(6, 15, 10), float32] {
  %1296 = fn () -> Tensor[(6, 15, 10), float32] {
    @func_2441() /* ty=Tensor[(6, 15, 10), float32] */
  };
  %1296() /* ty=Tensor[(6, 15, 10), float32] */
}

def @func_5511(%var_5510: Tensor[(182), float32]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(135), uint16], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(350), float64]) {
  %1318 = fn (%var_5493: Tensor[(182), float32]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(135), uint16], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(350), float64]) {
    %1297 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
    %1298 = cast(meta[relay.Constant][67] /* ty=Tensor[(60, 36), uint16] */, dtype="uint16") /* ty=Tensor[(60, 36), uint16] */;
    %1299 = reshape(%1298, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
    %1300 = @func_4606(%1299) /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(2160), uint16]) */;
    %1301 = @func_4493() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
    %1302 = %1301.2;
    %1303 = cast(meta[relay.Constant][67] /* ty=Tensor[(60, 36), uint16] */, dtype="uint8") /* ty=Tensor[(60, 36), uint8] */;
    %1304 = cast(%1302, dtype="uint8") /* ty=uint8 */;
    %1305 = cast(%var_5493, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1306 = reshape(%1305, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
    %1307 = @func_4092(%1306) /* ty=(Tensor[(135), uint16], float64, float64, Tensor[(350), float64], Tensor[(1, 182), float32]) */;
    %1308 = cast(meta[relay.Constant][68] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %1309 = cast(%var_5493, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1310 = reshape(%1308, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %1311 = reshape(%1309, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
    %1312 = @func_3779(%1310, %1311) /* ty=(uint32, Tensor[(6, 15, 10), float32], Tensor[(350), float64], Tensor[(1, 182), float32]) */;
    %1313 = %1297.0;
    %1314 = %1300.0;
    %1315 = subtract(%1303, %1304) /* ty=Tensor[(60, 36), uint8] */;
    %1316 = %1307.0;
    %1317 = %1312.3;
    (%1313, %1314, %1315, %1316, %var_5493, %1317, meta[relay.Constant][68] /* ty=Tensor[(350), float64] */)
  };
  %1318(%var_5510) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint8], Tensor[(135), uint16], Tensor[(182), float32], Tensor[(1, 182), float32], Tensor[(350), float64]) */
}

def @func_14648() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(60, 36), uint16]) {
  %1319 = @func_8998() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1320 = cast(meta[relay.Constant][69] /* ty=Tensor[(60, 36), uint16] */, dtype="uint16") /* ty=Tensor[(60, 36), uint16] */;
  %1321 = reshape(%1320, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %1322 = @func_11311(%1321) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
  %1323 = @func_10700() /* ty=Tensor[(6, 15, 10), float32] */;
  %1324 = %1319.3;
  %1325 = %1322.0;
  (%1323, %1324, %1325, meta[relay.Constant][69] /* ty=Tensor[(60, 36), uint16] */)
}

def @func_18532(%var_18475: Tensor[(45), float64]) -> (Tensor[(45), bool], Tensor[(45), int32], Tensor[(45), float64], Tensor[(288), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %1326 = @func_10337() /* ty=(Tensor[(45), float64],) */;
  %1327 = %1326.0;
  %1328 = cast(%var_18475, dtype="bool") /* ty=Tensor[(45), bool] */;
  %1329 = shape_of(%1327, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1330 = cast(%1327, dtype="bool") /* ty=Tensor[(45), bool] */;
  %1331 = dyn.reshape(%1328, %1329, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1332 = cast(%var_18475, dtype="int32") /* ty=Tensor[(45), int32] */;
  %1333 = shape_of(%1327, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1334 = cast(%1327, dtype="int32") /* ty=Tensor[(45), int32] */;
  %1335 = dyn.reshape(%1332, %1333, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1336 = cast(meta[relay.Constant][70] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1337 = reshape(%1336, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1338 = @func_13561(%1337) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(9, 1), float64], Tensor[(288), uint64]) */;
  %1339 = less_equal(%1330, %1331) /* ty=Tensor[(45), bool] */;
  %1340 = maximum(%1334, %1335) /* ty=Tensor[(45), int32] */;
  %1341 = %1338.2;
  %1342 = @func_13926() /* ty=Tensor[(15, 16, 9), uint16] */;
  %1343 = @func_9364() /* ty=Tensor[(135), uint16] */;
  (%1339, %1340, %1341, meta[relay.Constant][70] /* ty=Tensor[(288), uint64] */, %1342, %1343)
}

def @func_15685() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_15683() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_6197() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) {
  %1373 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) {
    %1344 = @func_4446() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %1345 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
    %1346 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 3, 5), int64] */, dtype="int8") /* ty=Tensor[(5, 3, 5), int8] */;
    %1347 = cast(-2 /* ty=int64 */, dtype="int8") /* ty=int8 */;
    %1348 = logical_xor(%1346, %1347) /* ty=Tensor[(5, 3, 5), int8] */;
    %1349 = cast(-2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1350 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 3, 5), int64] */, dtype="int64") /* ty=Tensor[(5, 3, 5), int64] */;
    %1351 = right_shift(%1349, %1350) /* ty=Tensor[(5, 3, 5), int64] */;
    %1352 = cast(%1351, dtype="bool") /* ty=Tensor[(5, 3, 5), bool] */;
    %1353 = shape_of(%1348, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1354 = cast(%1348, dtype="bool") /* ty=Tensor[(5, 3, 5), bool] */;
    %1355 = dyn.reshape(%1352, %1353, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1356 = greater(%1354, %1355) /* ty=Tensor[(5, 3, 5), bool] */;
    %1357 = cast(%1356, dtype="float64") /* ty=Tensor[(5, 3, 5), float64] */;
    %1358 = asinh(%1357) /* ty=Tensor[(5, 3, 5), float64] */;
    %1359 = cast(%1358, dtype="float32") /* ty=Tensor[(5, 3, 5), float32] */;
    %1360 = rsqrt(%1359) /* ty=Tensor[(5, 3, 5), float32] */;
    %1361 = cast(%1348, dtype="float32") /* ty=Tensor[(5, 3, 5), float32] */;
    %1362 = shape_of(%1360, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1363 = cast(%1360, dtype="float32") /* ty=Tensor[(5, 3, 5), float32] */;
    %1364 = dyn.reshape(%1361, %1362, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1365 = cast(%1358, dtype="float32") /* ty=Tensor[(5, 3, 5), float32] */;
    %1366 = @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %1367 = @func_3243() /* ty=Tensor[(135), uint16] */;
    %1368 = %1344.1;
    %1369 = %1345.4;
    %1370 = floor_divide(%1363, %1364) /* ty=Tensor[(5, 3, 5), float32] */;
    %1371 = acosh(%1365) /* ty=Tensor[(5, 3, 5), float32] */;
    %1372 = %1366.0;
    (%1367, %1368, %1369, %1370, %1371, %1372)
  };
  %1373() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */
}

def @func_17206(%var_17203: Tensor[(33, 7), float32], %var_17204: Tensor[(2940), float64], %var_17205: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(33, 7), bool], Tensor[(33, 7), bool], Tensor[(6, 15, 10), float32], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  @func_17201(%var_17203, %var_17204, %var_17205) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(33, 7), bool], Tensor[(33, 7), bool], Tensor[(6, 15, 10), float32], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */
}

def @func_18125() -> (Tensor[(135), uint16],) {
  %1376 = fn () -> (Tensor[(135), uint16],) {
    %1374 = @func_13479() /* ty=(Tensor[(135), uint16],) */;
    %1375 = %1374.0;
    (%1375,)
  };
  %1376() /* ty=(Tensor[(135), uint16],) */
}

def @func_12803() -> (Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  @func_12801() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */
}

def @func_1670(%var_1653: float32, %var_1654: Tensor[(1, 14, 13), float32]) -> (Tensor[(1, 14, 13), float32],) {
  %1377 = cast(%var_1653, dtype="float32") /* ty=float32 */;
  %1378 = cast(%var_1654, dtype="float32") /* ty=Tensor[(1, 14, 13), float32] */;
  %1379 = maximum(%1377, %1378) /* ty=Tensor[(1, 14, 13), float32] */;
  (%1379,)
}

def @main(%var_19082: Tensor[(15, 2, 9), float64]) -> Tensor[(15, 2, 9), float64] {
  %1380 = cast(%var_19082, dtype="float64") /* ty=Tensor[(15, 2, 9), float64] */;
  rsqrt(%1380) /* ty=Tensor[(15, 2, 9), float64] */
}

def @func_11089(%var_11088: Tensor[(15, 16, 9), uint16]) -> (Tensor[(33, 7), float32], Tensor[(15, 16, 9), float32], Tensor[(12, 13, 7), bool], Tensor[(1092), uint8], Tensor[(15, 16, 9), float32]) {
  %1398 = fn (%var_11050: Tensor[(15, 16, 9), uint16]) -> (Tensor[(33, 7), float32], Tensor[(15, 16, 9), float32], Tensor[(12, 13, 7), bool], Tensor[(1092), uint8], Tensor[(15, 16, 9), float32]) {
    %1381 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
    %1382 = @func_10851() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %1383 = %1382.0;
    %1384 = cast(%var_11050, dtype="float64") /* ty=Tensor[(15, 16, 9), float64] */;
    %1385 = shape_of(%1383, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1386 = cast(%1383, dtype="float64") /* ty=Tensor[(15, 16, 9), float64] */;
    %1387 = dyn.reshape(%1384, %1385, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1388 = floor_mod(%1386, %1387) /* ty=Tensor[(15, 16, 9), float64] */;
    %1389 = cast(%1388, dtype="float32") /* ty=Tensor[(15, 16, 9), float32] */;
    %1390 = cast(meta[relay.Constant][72] /* ty=Tensor[(1092), uint8] */, dtype="uint8") /* ty=Tensor[(1092), uint8] */;
    %1391 = reshape(%1390, newshape=[12, 13, 7]) /* ty=Tensor[(12, 13, 7), uint8] */;
    %1392 = @func_9456(%1391) /* ty=(Tensor[(12, 13, 7), bool], Tensor[(2, 56), float32]) */;
    %1393 = @func_5884() /* ty=(Tensor[(15, 16, 9), float32],) */;
    %1394 = %1381.2;
    %1395 = asin(%1389) /* ty=Tensor[(15, 16, 9), float32] */;
    %1396 = %1392.0;
    %1397 = %1393.0;
    (%1394, %1395, %1396, meta[relay.Constant][72] /* ty=Tensor[(1092), uint8] */, %1397)
  };
  %1398(%var_11088) /* ty=(Tensor[(33, 7), float32], Tensor[(15, 16, 9), float32], Tensor[(12, 13, 7), bool], Tensor[(1092), uint8], Tensor[(15, 16, 9), float32]) */
}

def @func_10205() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1399 = @func_7631() /* ty=(Tensor[(135), uint16], Tensor[(33, 7), uint16]) */;
  %1400 = @func_10190() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
  %1401 = %1399.0;
  %1402 = %1400.1;
  (%1401, %1402)
}

def @func_16231() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2, 56), float64]) {
  %1409 = fn () -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2, 56), float64]) {
    %1403 = @func_10205() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %1404 = @func_13666() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %1405 = @func_6384() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2, 4, 14), float64], Tensor[(2, 56), float64]) */;
    %1406 = %1403.1;
    %1407 = %1404.0;
    %1408 = %1405.2;
    (%1406, %1407, %1408)
  };
  %1409() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2, 56), float64]) */
}

def @func_13346() -> (Tensor[(6, 15, 10), float32], Tensor[(33, 7), float64]) {
  %1425 = fn () -> (Tensor[(6, 15, 10), float32], Tensor[(33, 7), float64]) {
    %1410 = @func_3986() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %1411 = @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */;
    %1412 = %1411.2;
    %1413 = cast(%1412, dtype="float32") /* ty=Tensor[(33, 7), float32] */;
    %1414 = cosh(%1413) /* ty=Tensor[(33, 7), float32] */;
    %1415 = cast(%1414, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
    %1416 = atanh(%1415) /* ty=Tensor[(33, 7), float64] */;
    %1417 = cast(%1414, dtype="int64") /* ty=Tensor[(33, 7), int64] */;
    %1418 = shape_of(%1416, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1419 = cast(%1416, dtype="int64") /* ty=Tensor[(33, 7), int64] */;
    %1420 = dyn.reshape(%1417, %1418, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %1421 = logical_xor(%1419, %1420) /* ty=Tensor[(33, 7), int64] */;
    %1422 = cast(%1421, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
    %1423 = %1410.0;
    %1424 = log(%1422) /* ty=Tensor[(33, 7), float64] */;
    (%1423, %1424)
  };
  %1425() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(33, 7), float64]) */
}

def @func_13563(%var_13562: Tensor[(288), uint64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(9, 1), float64], Tensor[(288), uint64]) {
  %1439 = fn (%var_13555: Tensor[(288), uint64]) -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(9, 1), float64], Tensor[(288), uint64]) {
    %1426 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
    %1427 = @func_9595() /* ty=(Tensor[(45), float64],) */;
    %1428 = @func_10598() /* ty=(Tensor[(2, 4, 14), float64], Tensor[(135), uint16]) */;
    %1429 = cast(meta[relay.Constant][73] /* ty=Tensor[(9, 1), float64] */, dtype="float64") /* ty=Tensor[(9, 1), float64] */;
    %1430 = cast(%var_13555, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %1431 = reshape(%1429, newshape=[9]) /* ty=Tensor[(9), float64] */;
    %1432 = reshape(%1430, newshape=[288]) /* ty=Tensor[(288), uint64] */;
    %1433 = @func_3412(%1431, %1432) /* ty=(Tensor[(135), uint16], uint32, Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) */;
    %1434 = %1426.0;
    %1435 = @func_9433() /* ty=Tensor[(135), uint16] */;
    %1436 = %1427.0;
    %1437 = %1428.1;
    %1438 = %1433.0;
    (%1434, %1435, %1436, %1437, %1438, meta[relay.Constant][73] /* ty=Tensor[(9, 1), float64] */, %var_13555)
  };
  %1439(%var_13562) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(9, 1), float64], Tensor[(288), uint64]) */
}

def @func_14362() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_14360() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_16326(%var_16324: Tensor[(8, 14, 16), uint64], %var_16325: Tensor[(8, 14, 16), uint64]) -> Tensor[(8, 14, 16), uint64] {
  %1444 = fn (%var_16312: Tensor[(8, 14, 16), uint64], %var_16313: Tensor[(8, 14, 16), uint64]) -> Tensor[(8, 14, 16), uint64] {
    %1440 = cast(%var_16313, dtype="uint64") /* ty=Tensor[(8, 14, 16), uint64] */;
    %1441 = shape_of(%var_16312, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1442 = cast(%var_16312, dtype="uint64") /* ty=Tensor[(8, 14, 16), uint64] */;
    %1443 = dyn.reshape(%1440, %1441, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_and(%1442, %1443) /* ty=Tensor[(8, 14, 16), uint64] */
  };
  %1444(%var_16324, %var_16325) /* ty=Tensor[(8, 14, 16), uint64] */
}

def @func_5041(%var_5040: Tensor[(1800), float32]) -> (Tensor[(1056), uint32], Tensor[(135), uint16], Tensor[(1800), uint64]) {
  %1458 = fn (%var_5029: Tensor[(1800), float32]) -> (Tensor[(1056), uint32], Tensor[(135), uint16], Tensor[(1800), uint64]) {
    %1445 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
    %1446 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
    %1447 = @func_3723() /* ty=(Tensor[(1800), float64],) */;
    %1448 = %1447.0;
    %1449 = cast(%1448, dtype="float32") /* ty=Tensor[(1800), float32] */;
    %1450 = log10(%1449) /* ty=Tensor[(1800), float32] */;
    %1451 = cast(%var_5029, dtype="uint64") /* ty=Tensor[(1800), uint64] */;
    %1452 = shape_of(%1450, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1453 = cast(%1450, dtype="uint64") /* ty=Tensor[(1800), uint64] */;
    %1454 = dyn.reshape(%1451, %1452, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %1455 = %1445.0;
    %1456 = %1446.1;
    %1457 = bitwise_and(%1453, %1454) /* ty=Tensor[(1800), uint64] */;
    (%1455, %1456, %1457)
  };
  %1458(%var_5040) /* ty=(Tensor[(1056), uint32], Tensor[(135), uint16], Tensor[(1800), uint64]) */
}

def @func_7955(%var_7932: Tensor[(180, 12), uint16]) -> (Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(180, 12), int8], Tensor[(15, 16, 9), uint16]) {
  %1459 = @func_5890() /* ty=(Tensor[(135), uint16],) */;
  %1460 = cast(meta[relay.Constant][74] /* ty=Tensor[(180, 12), uint16] */, dtype="uint16") /* ty=Tensor[(180, 12), uint16] */;
  %1461 = reshape(%1460, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
  %1462 = @func_2517(%1461) /* ty=(Tensor[(6, 15, 10), int8], Tensor[(6, 15, 10), int8], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16]) */;
  %1463 = cast(%var_7932, dtype="int8") /* ty=Tensor[(180, 12), int8] */;
  %1464 = shape_of(meta[relay.Constant][74] /* ty=Tensor[(180, 12), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1465 = cast(meta[relay.Constant][74] /* ty=Tensor[(180, 12), uint16] */, dtype="int8") /* ty=Tensor[(180, 12), int8] */;
  %1466 = dyn.reshape(%1463, %1464, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1467 = @func_3814() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1468 = %1459.0;
  %1469 = %1462.0;
  %1470 = multiply(%1465, %1466) /* ty=Tensor[(180, 12), int8] */;
  %1471 = %1467.0;
  (%1468, %1469, %1470, %1471)
}

def @func_4973(%var_4971: int64, %var_4972: Tensor[(1, 2, 12), int64]) -> (Tensor[(1, 2, 12), int64],) {
  %1475 = fn (%var_4962: int64, %var_4963: Tensor[(1, 2, 12), int64]) -> (Tensor[(1, 2, 12), int64],) {
    %1472 = cast(%var_4962, dtype="int64") /* ty=int64 */;
    %1473 = cast(%var_4963, dtype="int64") /* ty=Tensor[(1, 2, 12), int64] */;
    %1474 = logical_xor(%1472, %1473) /* ty=Tensor[(1, 2, 12), int64] */;
    (%1474,)
  };
  %1475(%var_4971, %var_4972) /* ty=(Tensor[(1, 2, 12), int64],) */
}

def @func_4494() -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
  %1486 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(2940), float64], Tensor[(350), float64]) {
    %1476 = @func_2848() /* ty=(Tensor[(135), uint16],) */;
    %1477 = cast(2.87629f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1478 = cast(meta[relay.Constant][75] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
    %1479 = cast(meta[relay.Constant][76] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %1480 = reshape(%1477, newshape=[]) /* ty=float64 */;
    %1481 = reshape(%1478, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
    %1482 = reshape(%1479, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %1483 = @func_3488(%1480, %1481, %1482) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(45), float64], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64]) */;
    %1484 = %1476.0;
    %1485 = %1483.2;
    (%1484, %1485, 2.87629f64 /* ty=float64 */, meta[relay.Constant][75] /* ty=Tensor[(2940), float64] */, meta[relay.Constant][76] /* ty=Tensor[(350), float64] */)
  };
  %1486() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(2940), float64], Tensor[(350), float64]) */
}

def @func_11896() -> (Tensor[(135), uint16],) {
  %1489 = fn () -> (Tensor[(135), uint16],) {
    %1487 = @func_4827() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %1488 = %1487.1;
    (%1488,)
  };
  %1489() /* ty=(Tensor[(135), uint16],) */
}

def @func_16594(%var_16592: Tensor[(10), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(450, 4), float32], Tensor[(135), uint16], Tensor[(10), float64], Tensor[(1014), float64]) {
  @func_16591(%var_16592) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(450, 4), float32], Tensor[(135), uint16], Tensor[(10), float64], Tensor[(1014), float64]) */
}

def @func_17509() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1056), uint32]) {
  @func_17507() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1056), uint32]) */
}

def @func_16665(%var_16633: int16, %var_16634: Tensor[(9, 1, 3), int16]) -> (Tensor[(9, 1, 3), bool], Tensor[(15, 16, 9), float32]) {
  %1490 = cast(%var_16633, dtype="bool") /* ty=bool */;
  %1491 = cast(%var_16634, dtype="bool") /* ty=Tensor[(9, 1, 3), bool] */;
  %1492 = greater_equal(%1490, %1491) /* ty=Tensor[(9, 1, 3), bool] */;
  %1493 = @func_13032() /* ty=Tensor[(15, 16, 9), float32] */;
  (%1492, %1493)
}

def @func_17710() -> (Tensor[(135), uint16], Tensor[(1800), float64], Tensor[(6, 15, 10), float32]) {
  %1499 = fn () -> (Tensor[(135), uint16], Tensor[(1800), float64], Tensor[(6, 15, 10), float32]) {
    %1494 = @func_12130() /* ty=(Tensor[(135), uint16],) */;
    %1495 = @func_3723() /* ty=(Tensor[(1800), float64],) */;
    %1496 = %1494.0;
    %1497 = %1495.0;
    %1498 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
    (%1496, %1497, %1498)
  };
  %1499() /* ty=(Tensor[(135), uint16], Tensor[(1800), float64], Tensor[(6, 15, 10), float32]) */
}

def @func_9880(%var_9866: Tensor[(2160), uint16], %var_9871: Tensor[(30, 98), float64], %var_9877: uint32) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(30, 98), float64], Tensor[(11, 16, 6), uint32], uint32, Tensor[(1056), uint32]) {
  %1500 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %1501 = %1500.2;
  %1502 = cast(%1501, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1503 = cast(%var_9866, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1504 = reshape(%1502, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %1505 = reshape(%1503, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1506 = @func_13(%1504, %1505) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1507 = cast(%var_9871, dtype="float64") /* ty=Tensor[(30, 98), float64] */;
  %1508 = reshape(%1507, newshape=[2940]) /* ty=Tensor[(2940), float64] */;
  %1509 = @func_7593(%1508) /* ty=(Tensor[(6, 15, 10), float64], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float64], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */;
  %1510 = cast(%var_9877, dtype="uint32") /* ty=uint32 */;
  %1511 = cast(meta[relay.Constant][77] /* ty=Tensor[(1056), uint32] */, dtype="uint32") /* ty=Tensor[(1056), uint32] */;
  %1512 = cast(%1501, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1513 = reshape(%1510, newshape=[]) /* ty=uint32 */;
  %1514 = reshape(%1511, newshape=[11, 16, 6]) /* ty=Tensor[(11, 16, 6), uint32] */;
  %1515 = reshape(%1512, newshape=[3, 45]) /* ty=Tensor[(3, 45), uint16] */;
  %1516 = @func_616(%1513, %1514, %1515) /* ty=(Tensor[(11, 16, 6), uint32], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(3, 45), uint16], Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16]) */;
  %1517 = %1506.0;
  %1518 = %1509.7;
  %1519 = %1516.0;
  (%1501, %1517, %var_9866, %1518, %var_9871, %1519, %var_9877, meta[relay.Constant][77] /* ty=Tensor[(1056), uint32] */)
}

def @func_17814() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_17812() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_7102() -> (Tensor[(15, 16, 9), uint16],) {
  %1520 = @func_6196() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(5, 3, 5), float32], Tensor[(5, 3, 5), float32], Tensor[(15, 16, 9), uint16]) */;
  %1521 = %1520.5;
  (%1521,)
}

def @func_10503() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) {
  %1522 = @func_9425() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */;
  %1523 = @func_7631() /* ty=(Tensor[(135), uint16], Tensor[(33, 7), uint16]) */;
  %1524 = %1523.1;
  %1525 = cast(%1524, dtype="float32") /* ty=Tensor[(33, 7), float32] */;
  %1526 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  %1527 = %1522.1;
  %1528 = sqrt(%1525) /* ty=Tensor[(33, 7), float32] */;
  (%1526, %1527, %1528)
}

def @func_18746() -> Tensor[(135), uint16] {
  %1529 = @func_15021() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1529.0
}

def @func_8353() -> (Tensor[(135), uint16],) {
  %1531 = fn () -> (Tensor[(135), uint16],) {
    %1530 = @func_3243() /* ty=Tensor[(135), uint16] */;
    (%1530,)
  };
  %1531() /* ty=(Tensor[(135), uint16],) */
}

def @func_16304() -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) {
  @func_16302() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */
}

def @func_18862() -> (Tensor[(15, 16, 9), float32],) {
  %1532 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
  %1533 = %1532.0;
  (%1533,)
}

def @func_15541() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 182), float32], Tensor[(350), float64], float64) {
  %1546 = fn () -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 182), float32], Tensor[(350), float64], float64) {
    %1534 = @func_10762() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %1535 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %1536 = cast(meta[relay.Constant][78] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %1537 = cast(meta[relay.Constant][78] /* ty=Tensor[(350), float64] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %1538 = cast(-5.11528f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1539 = reshape(%1536, newshape=[5, 70]) /* ty=Tensor[(5, 70), float64] */;
    %1540 = reshape(%1537, newshape=[5, 70]) /* ty=Tensor[(5, 70), float32] */;
    %1541 = reshape(%1538, newshape=[]) /* ty=float64 */;
    %1542 = @func_7457(%1539, %1540, %1541) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1, 182), float32], Tensor[(182), float32], Tensor[(5, 70), float32], float64, float64) */;
    %1543 = %1534.1;
    %1544 = %1535.2;
    %1545 = %1542.1;
    (%1543, %1544, %1545, meta[relay.Constant][78] /* ty=Tensor[(350), float64] */, -5.11528f64 /* ty=float64 */)
  };
  %1546() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 182), float32], Tensor[(350), float64], float64) */
}

def @func_11541(%var_11539: Tensor[(968), float64]) -> (Tensor[(135), uint16], Tensor[(1800), float64], Tensor[(15, 16, 9), uint16], Tensor[(968), float64]) {
  @func_11538(%var_11539) /* ty=(Tensor[(135), uint16], Tensor[(1800), float64], Tensor[(15, 16, 9), uint16], Tensor[(968), float64]) */
}

def @func_3878() -> (Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) {
  %1552 = fn () -> (Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) {
    %1547 = @func_3221() /* ty=(Tensor[(1056), uint32], Tensor[(6, 15, 10), float32]) */;
    %1548 = @func_3723() /* ty=(Tensor[(1800), float64],) */;
    %1549 = %1547.1;
    %1550 = %1548.0;
    %1551 = @func_2627() /* ty=Tensor[(135), uint16] */;
    (%1549, %1550, %1551)
  };
  %1552() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1800), float64], Tensor[(135), uint16]) */
}

def @func_2815() -> (Tensor[(6, 15, 10), float32],) {
  %1553 = @func_2441() /* ty=Tensor[(6, 15, 10), float32] */;
  (%1553,)
}

def @func_4694() -> (Tensor[(135), uint16],) {
  %1554 = @func_2453() /* ty=Tensor[(135), uint16] */;
  (%1554,)
}

def @func_9077() -> (Tensor[(135), uint16],) {
  %1555 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1556 = %1555.0;
  (%1556,)
}

def @func_10505() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) {
  @func_10503() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32], Tensor[(33, 7), float32]) */
}

def @func_5596() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %1560 = fn () -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
    %1557 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
    %1558 = %1557.2;
    %1559 = @func_3243() /* ty=Tensor[(135), uint16] */;
    (%1558, %1559)
  };
  %1560() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */
}

def @func_10089() -> Tensor[(15, 16, 9), uint16] {
  @func_10087() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_13033() -> Tensor[(15, 16, 9), float32] {
  %1562 = fn () -> Tensor[(15, 16, 9), float32] {
    %1561 = @func_7862() /* ty=(Tensor[(15, 16, 9), float32],) */;
    %1561.0
  };
  %1562() /* ty=Tensor[(15, 16, 9), float32] */
}

def @func_10087() -> Tensor[(15, 16, 9), uint16] {
  @func_4115() /* ty=Tensor[(15, 16, 9), uint16] */
}

def @func_7004() -> (Tensor[(15, 16, 9), uint16],) {
  %1564 = fn () -> (Tensor[(15, 16, 9), uint16],) {
    %1563 = @func_4929() /* ty=Tensor[(15, 16, 9), uint16] */;
    (%1563,)
  };
  %1564() /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_14297() -> (Tensor[(135), float32], Tensor[(135), uint16]) {
  %1571 = fn () -> (Tensor[(135), float32], Tensor[(135), uint16]) {
    %1565 = @func_10190() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */;
    %1566 = %1565.1;
    %1567 = cast(%1566, dtype="float32") /* ty=Tensor[(135), float32] */;
    %1568 = @func_12130() /* ty=(Tensor[(135), uint16],) */;
    %1569 = sin(%1567) /* ty=Tensor[(135), float32] */;
    %1570 = %1568.0;
    (%1569, %1570)
  };
  %1571() /* ty=(Tensor[(135), float32], Tensor[(135), uint16]) */
}

def @func_18094() -> Tensor[(135), uint16] {
  %1573 = fn () -> Tensor[(135), uint16] {
    %1572 = @func_10994() /* ty=(Tensor[(135), uint16],) */;
    %1572.0
  };
  %1573() /* ty=Tensor[(135), uint16] */
}

def @func_16394() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_16392() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_18255() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  %1574 = @func_15219() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1575 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1576 = %1574.0;
  %1577 = %1575.0;
  (%1576, %1577)
}

def @func_9208() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %1578 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  %1579 = @func_4041() /* ty=Tensor[(135), uint16] */;
  (%1578, %1579)
}

def @func_9425() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  %1580 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
  %1581 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1582 = @func_7753() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1583 = %1580.0;
  %1584 = %1581.0;
  %1585 = %1582.0;
  (%1583, %1584, %1585)
}

def @func_17(%var_15: Tensor[(15, 1, 9), uint16], %var_16: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), uint16],) {
  @func_13(%var_15, %var_16) /* ty=(Tensor[(15, 16, 9), uint16],) */
}

def @func_3412(%var_3390: Tensor[(9), float64], %var_3392: Tensor[(288), uint64]) -> (Tensor[(135), uint16], uint32, Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(288), uint64]) {
  %1586 = @func_2946() /* ty=(Tensor[(135), uint16], Tensor[(9, 2, 16), uint64], Tensor[(288), uint64], Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(3, 45), uint16], uint32, Tensor[(88, 12), uint32], Tensor[(45), float64], Tensor[(1800), float64], Tensor[(45), float64]) */;
  %1587 = cast(%var_3390, dtype="float64") /* ty=Tensor[(9), float64] */;
  %1588 = cast(meta[relay.Constant][79] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %1589 = cast(%var_3392, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1590 = reshape(%1587, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
  %1591 = reshape(%1588, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %1592 = reshape(%1589, newshape=[2, 144]) /* ty=Tensor[(2, 144), uint64] */;
  %1593 = @func_990(%1590, %1591, %1592) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */;
  %1594 = @func_3370() /* ty=Tensor[(135), uint16] */;
  %1595 = %1586.7;
  %1596 = %1593.1;
  (%1594, %1595, %1596, %var_3390, meta[relay.Constant][79] /* ty=Tensor[(45), float64] */, %var_3392)
}

def @func_10190() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %1597 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
  %1598 = @func_5194() /* ty=(Tensor[(135), uint16],) */;
  %1599 = %1597.0;
  %1600 = %1598.0;
  (%1599, %1600)
}

def @func_15641() -> Tensor[(135), uint16] {
  @func_4714() /* ty=Tensor[(135), uint16] */
}

def @func_13640() -> (Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) {
  @func_13638() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */
}

def @func_16772() -> (Tensor[(135), uint16],) {
  @func_16770() /* ty=(Tensor[(135), uint16],) */
}

def @func_6486() -> Tensor[(135), uint16] {
  %1601 = @func_4527() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16]) */;
  %1601.1
}

def @func_9433() -> Tensor[(135), uint16] {
  %1602 = @func_7631() /* ty=(Tensor[(135), uint16], Tensor[(33, 7), uint16]) */;
  %1602.0
}

def @func_18442(%var_18415: Tensor[(11, 6, 9), float32]) -> (Tensor[(11, 6, 9), float32], Tensor[(135), uint16], Tensor[(11, 6, 9), bool], Tensor[(182), float32], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) {
  %1603 = cast(%var_18415, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %1604 = @func_14124() /* ty=(Tensor[(135), uint16],) */;
  %1605 = cast(meta[relay.Constant][80] /* ty=Tensor[(11, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 9), bool] */;
  %1606 = shape_of(%var_18415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1607 = cast(%var_18415, dtype="bool") /* ty=Tensor[(11, 6, 9), bool] */;
  %1608 = dyn.reshape(%1605, %1606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1609 = cast(meta[relay.Constant][81] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1610 = reshape(%1609, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1611 = @func_8855(%1610) /* ty=(Tensor[(15, 16, 9), float32], Tensor[(182), float32], Tensor[(462), float32], Tensor[(350), float64]) */;
  %1612 = @func_12709() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32]) */;
  %1613 = atan(%1603) /* ty=Tensor[(11, 6, 9), float32] */;
  %1614 = %1604.0;
  %1615 = less_equal(%1607, %1608) /* ty=Tensor[(11, 6, 9), bool] */;
  %1616 = %1611.1;
  %1617 = %1612.3;
  (%1613, %1614, %1615, %1616, meta[relay.Constant][81] /* ty=Tensor[(350), float64] */, %1617)
}

def @func_4446() -> (Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) {
  %1618 = @func_3814() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1619 = %1618.0;
  %1620 = @func_3370() /* ty=Tensor[(135), uint16] */;
  (%1619, %1620)
}

def @func_13106(%var_13091: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(33, 7), float32], Tensor[(2160), uint16]) {
  %1621 = @func_6623() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1622 = cast(%var_13091, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1623 = reshape(%1622, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1624 = @func_11087(%1623) /* ty=(Tensor[(33, 7), float32], Tensor[(15, 16, 9), float32], Tensor[(12, 13, 7), bool], Tensor[(1092), uint8], Tensor[(15, 16, 9), float32]) */;
  %1625 = %1621.0;
  %1626 = %1624.0;
  (%1625, %1626, %var_13091)
}

def @func_16455(%var_16453: float32) -> (Tensor[(6, 15, 10), float32], Tensor[(1, 14, 13), float32], float32, Tensor[(182), float32], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(135), uint16]) {
  @func_16452(%var_16453) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(1, 14, 13), float32], float32, Tensor[(182), float32], Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(9), float64], Tensor[(135), uint16]) */
}

def @func_10117() -> (Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(968), float64]) {
  %1627 = @func_10044() /* ty=(Tensor[(135), uint16], Tensor[(13, 6, 13), float64], Tensor[(1014, 1), float64]) */;
  %1628 = cast(meta[relay.Constant][82] /* ty=Tensor[(968), float64] */, dtype="float64") /* ty=Tensor[(968), float64] */;
  %1629 = reshape(%1628, newshape=[11, 88]) /* ty=Tensor[(11, 88), float64] */;
  %1630 = @func_7713(%1629) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], Tensor[(5, 70), float64], Tensor[(11, 88), float64], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16]) */;
  %1631 = %1627.1;
  %1632 = %1630.0;
  (%1631, %1632, meta[relay.Constant][82] /* ty=Tensor[(968), float64] */)
}

def @func_18951() -> (Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_18949() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_4115() -> Tensor[(15, 16, 9), uint16] {
  %1633 = @func_3814() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1633.0
}

def @func_15359(%var_15357: Tensor[(2940), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(2940), float64], Tensor[(11, 16, 6), bool]) {
  @func_15356(%var_15357) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(2940), float64], Tensor[(11, 16, 6), bool]) */
}

def @func_6853(%var_6851: Tensor[(13, 6, 13), float64]) -> (Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350, 1), float64]) {
  @func_6850(%var_6851) /* ty=(Tensor[(13, 6, 13), float64], Tensor[(135), uint16], Tensor[(2940), float64], float64, Tensor[(2940), float64], Tensor[(350, 1), float64]) */
}

def @func_18257() -> (Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) {
  @func_18255() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(6, 15, 10), float32]) */
}

def @func_14878() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %1638 = fn () -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
    %1634 = @func_14103() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(2160), uint16], Tensor[(2160), uint16]) */;
    %1635 = @func_10762() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %1636 = %1634.0;
    %1637 = %1635.0;
    (%1636, %1637)
  };
  %1638() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */
}

def @func_2817() -> (Tensor[(6, 15, 10), float32],) {
  @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_17025() -> (Tensor[(6, 15, 10), float32],) {
  %1641 = fn () -> (Tensor[(6, 15, 10), float32],) {
    %1639 = @func_15219() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %1640 = %1639.0;
    (%1640,)
  };
  %1641() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_4608(%var_4607: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(2160), uint16]) {
  %1648 = fn (%var_4598: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(2160), uint16]) {
    %1642 = @func_3651() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(6, 15, 10), bool]) */;
    %1643 = cast(%var_4598, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
    %1644 = reshape(%1643, newshape=[2160]) /* ty=Tensor[(2160), uint16] */;
    %1645 = @func_2517(%1644) /* ty=(Tensor[(6, 15, 10), int8], Tensor[(6, 15, 10), int8], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16]) */;
    %1646 = %1642.0;
    %1647 = %1645.0;
    (%1646, %1647, %var_4598)
  };
  %1648(%var_4607) /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), int8], Tensor[(2160), uint16]) */
}

def @func_14360() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1649 = @func_11927() /* ty=(Tensor[(135), uint16],) */;
  %1650 = %1649.0;
  %1651 = @func_4714() /* ty=Tensor[(135), uint16] */;
  (%1650, %1651)
}

def @func_994(%var_991: Tensor[(3, 1, 3), float64], %var_992: Tensor[(3, 5, 3), float64], %var_993: Tensor[(2, 144), uint64]) -> (Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) {
  %1663 = fn (%var_967: Tensor[(3, 1, 3), float64], %var_968: Tensor[(3, 5, 3), float64], %var_984: Tensor[(2, 144), uint64]) -> (Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) {
    %1652 = cast(%var_967, dtype="float64") /* ty=Tensor[(3, 1, 3), float64] */;
    %1653 = cast(%var_968, dtype="float64") /* ty=Tensor[(3, 5, 3), float64] */;
    %1654 = cast(%var_984, dtype="uint64") /* ty=Tensor[(2, 144), uint64] */;
    %1655 = cast(%var_984, dtype="uint64") /* ty=Tensor[(2, 144), uint64] */;
    %1656 = cast(meta[relay.Constant][83] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
    %1657 = reshape(%1654, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %1658 = reshape(%1655, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), uint64] */;
    %1659 = reshape(%1656, newshape=[135]) /* ty=Tensor[(135), uint16] */;
    %1660 = @func_475(%1657, %1658, %1659) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), uint16]) */;
    %1661 = floor_mod(%1652, %1653) /* ty=Tensor[(3, 5, 3), float64] */;
    %1662 = %1660.5;
    (%1661, %1662, %var_984, meta[relay.Constant][83] /* ty=Tensor[(135), uint16] */)
  };
  %1663(%var_991, %var_992, %var_993) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */
}

def @func_2517(%var_2515: Tensor[(2160), uint16]) -> (Tensor[(6, 15, 10), int8], Tensor[(6, 15, 10), int8], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(2160), uint16]) {
  %1664 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %1665 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %1666 = cast(0.975399f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1667 = cast(meta[relay.Constant][84] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %1668 = cast(meta[relay.Constant][85] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1669 = cast(meta[relay.Constant][84] /* ty=Tensor[(2940), float64] */, dtype="float64") /* ty=Tensor[(2940), float64] */;
  %1670 = reshape(%1666, newshape=[]) /* ty=float64 */;
  %1671 = reshape(%1667, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1672 = reshape(%1668, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1673 = reshape(%1669, newshape=[15, 14, 14]) /* ty=Tensor[(15, 14, 14), float64] */;
  %1674 = @func_2037(%1670, %1671, %1672, %1673) /* ty=(Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(15, 14, 14), bool]) */;
  %1675 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
  %1676 = cast(meta[relay.Constant][86] /* ty=Tensor[(135), uint16] */, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1677 = cast(%var_2515, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1678 = reshape(%1676, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %1679 = reshape(%1677, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1680 = @func_13(%1678, %1679) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1681 = %1664.0;
  %1682 = %1665.0;
  %1683 = %1674.1;
  %1684 = %1675.3;
  %1685 = %1680.0;
  (%1681, %1682, %1683, 0.975399f64 /* ty=float64 */, meta[relay.Constant][84] /* ty=Tensor[(2940), float64] */, meta[relay.Constant][85] /* ty=Tensor[(350), float64] */, %1684, %1685, meta[relay.Constant][86] /* ty=Tensor[(135), uint16] */, %var_2515)
}

def @func_11311(%var_11296: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  %1686 = @func_8352() /* ty=(Tensor[(135), uint16],) */;
  %1687 = %1686.0;
  %1688 = cast(%1687, dtype="uint16") /* ty=Tensor[(135), uint16] */;
  %1689 = cast(%var_11296, dtype="uint16") /* ty=Tensor[(2160), uint16] */;
  %1690 = reshape(%1688, newshape=[15, 1, 9]) /* ty=Tensor[(15, 1, 9), uint16] */;
  %1691 = reshape(%1689, newshape=[15, 16, 9]) /* ty=Tensor[(15, 16, 9), uint16] */;
  %1692 = @func_13(%1690, %1691) /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1693 = %1692.0;
  (%1687, %1693, %var_11296)
}

def @func_8999() -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
  %1701 = fn () -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) {
    %1694 = @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %1695 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
    %1696 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
    %1697 = @func_8391() /* ty=Tensor[(135), uint16] */;
    %1698 = %1694.0;
    %1699 = %1695.0;
    %1700 = %1696.0;
    (%1697, %1698, %1699, %1700)
  };
  %1701() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_18409(%var_18407: Tensor[(2160), uint16]) -> (Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(182), float32], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) {
  @func_18406(%var_18407) /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], float64, Tensor[(182), float32], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */
}

def @func_12513() -> (Tensor[(6, 15, 10), float32],) {
  %1704 = fn () -> (Tensor[(6, 15, 10), float32],) {
    %1702 = @func_2815() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %1703 = %1702.0;
    (%1703,)
  };
  %1704() /* ty=(Tensor[(6, 15, 10), float32],) */
}

def @func_15775() -> Tensor[(135), uint16] {
  %1706 = fn () -> Tensor[(135), uint16] {
    %1705 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %1705.1
  };
  %1706() /* ty=Tensor[(135), uint16] */
}

def @func_6012(%var_6007: Tensor[(1056, 1), uint32], %var_6008: Tensor[(45), float64], %var_6009: Tensor[(1056, 1), float32], %var_6010: Tensor[(182), float32], %var_6011: Tensor[(5, 2), float64]) -> (Tensor[(3, 45), uint16], Tensor[(1056, 135), bool], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(1056, ?), uint16], Tensor[(15, 16, 9), uint16], Tensor[(1056, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(2160), uint16], Tensor[(5, 2), float64], Tensor[(1056, 1), float64], Tensor[(45), float64]) {
  @func_6005(%var_6007, %var_6008, %var_6009, %var_6010, %var_6011) /* ty=(Tensor[(3, 45), uint16], Tensor[(1056, 135), bool], Tensor[(288), uint64], Tensor[(135), uint16], Tensor[(9), float64], Tensor[(45), float64], Tensor[(1056, ?), uint16], Tensor[(15, 16, 9), uint16], Tensor[(1056, 1), float32], Tensor[(1, 14, 13), float32], Tensor[(182), float32], Tensor[(2160), uint16], Tensor[(5, 2), float64], Tensor[(1056, 1), float64], Tensor[(45), float64]) */
}

def @func_2627() -> Tensor[(135), uint16] {
  %1707 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
  %1707.0
}

def @func_4235() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  %1708 = @func_2992() /* ty=Tensor[(6, 15, 10), float32] */;
  %1709 = @func_3243() /* ty=Tensor[(135), uint16] */;
  (%1708, %1709)
}

def @func_16808() -> (Tensor[(135), uint16],) {
  @func_16806() /* ty=(Tensor[(135), uint16],) */
}

def @func_6992(%var_6990: Tensor[(1, 10), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(1, 10), float64], Tensor[(135), uint16]) {
  @func_6989(%var_6990) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(1, 10), float64], Tensor[(135), uint16]) */
}

def @func_5311() -> Tensor[(135), uint16] {
  %1710 = fn () -> Tensor[(135), uint16] {
    @func_3370() /* ty=Tensor[(135), uint16] */
  };
  %1710() /* ty=Tensor[(135), uint16] */
}

def @func_9459(%var_9457: Tensor[(12, 13, 7), uint8]) -> (Tensor[(12, 13, 7), bool], Tensor[(2, 56), float32]) {
  @func_9456(%var_9457) /* ty=(Tensor[(12, 13, 7), bool], Tensor[(2, 56), float32]) */
}

def @func_6293(%var_6292: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) {
  %1718 = fn (%var_6268: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) {
    %1711 = cast(%var_6268, dtype="float64") /* ty=Tensor[(350), float64] */;
    %1712 = reshape(%1711, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), float64] */;
    %1713 = @func_1238(%1712) /* ty=(Tensor[(10, 7, 5), float64],) */;
    %1714 = @func_5655() /* ty=(Tensor[(135), uint16], Tensor[(6, 15, 10), float32]) */;
    %1715 = @func_6220() /* ty=Tensor[(15, 16, 9), uint16] */;
    %1716 = %1713.0;
    %1717 = %1714.1;
    (%1715, %1716, %var_6268, %1717)
  };
  %1718(%var_6292) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) */
}

def @func_14808(%var_14806: float64) -> (Tensor[(6, 15, 10), float32], float64, Tensor[(1, 182), bool], Tensor[(350), float64], Tensor[(210, 14), float32], Tensor[(135), uint16]) {
  @func_14805(%var_14806) /* ty=(Tensor[(6, 15, 10), float32], float64, Tensor[(1, 182), bool], Tensor[(350), float64], Tensor[(210, 14), float32], Tensor[(135), uint16]) */
}

def @func_15613() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_15611() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_18445(%var_18443: Tensor[(11, 6, 9), float32]) -> (Tensor[(11, 6, 9), float32], Tensor[(135), uint16], Tensor[(11, 6, 9), bool], Tensor[(182), float32], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) {
  @func_18442(%var_18443) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(135), uint16], Tensor[(11, 6, 9), bool], Tensor[(182), float32], Tensor[(350), float64], Tensor[(6, 15, 10), float32]) */
}

def @func_9079() -> (Tensor[(135), uint16],) {
  @func_9077() /* ty=(Tensor[(135), uint16],) */
}

def @func_6488() -> Tensor[(135), uint16] {
  @func_6486() /* ty=Tensor[(135), uint16] */
}

def @func_14126() -> (Tensor[(135), uint16],) {
  @func_14124() /* ty=(Tensor[(135), uint16],) */
}

def @func_13824(%var_13823: Tensor[(10), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10), float64]) {
  %1726 = fn (%var_13807: Tensor[(10), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10), float64]) {
    %1719 = @func_7753() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %1720 = cast(%var_13807, dtype="float64") /* ty=Tensor[(10), float64] */;
    %1721 = reshape(%1720, newshape=[1, 10]) /* ty=Tensor[(1, 10), float64] */;
    %1722 = @func_6989(%1721) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(1, 10), float64], Tensor[(135), uint16]) */;
    %1723 = %1719.0;
    %1724 = @func_8782() /* ty=Tensor[(135), uint16] */;
    %1725 = %1722.3;
    (%1723, %1724, %1725, %var_13807)
  };
  %1726(%var_13823) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10), float64]) */
}

def @func_15865(%var_15863: int64, %var_15864: Tensor[(12, 2), int64]) -> (Tensor[(350), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2, 12), int64], int64, Tensor[(12, 2), int64]) {
  %1737 = fn (%var_15856: int64, %var_15857: Tensor[(12, 2), int64]) -> (Tensor[(350), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2, 12), int64], int64, Tensor[(12, 2), int64]) {
    %1727 = @func_10017() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(10, 7, 5), float64], Tensor[(350), float64]) */;
    %1728 = cast(%var_15856, dtype="int64") /* ty=int64 */;
    %1729 = cast(%var_15857, dtype="int64") /* ty=Tensor[(12, 2), int64] */;
    %1730 = reshape(%1728, newshape=[]) /* ty=int64 */;
    %1731 = reshape(%1729, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), int64] */;
    %1732 = @func_4970(%1730, %1731) /* ty=(Tensor[(1, 2, 12), int64],) */;
    %1733 = %1727.3;
    %1734 = @func_4801() /* ty=Tensor[(135), uint16] */;
    %1735 = @func_4714() /* ty=Tensor[(135), uint16] */;
    %1736 = %1732.0;
    (%1733, %1734, %1735, %1736, %var_15856, %var_15857)
  };
  %1737(%var_15863, %var_15864) /* ty=(Tensor[(350), float64], Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(1, 2, 12), int64], int64, Tensor[(12, 2), int64]) */
}

def @func_9210() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  @func_9208() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */
}

def @func_11031() -> Tensor[(135), uint16] {
  %1739 = fn () -> Tensor[(135), uint16] {
    %1738 = @func_2603() /* ty=(Tensor[(135), uint16],) */;
    %1738.0
  };
  %1739() /* ty=Tensor[(135), uint16] */
}

def @func_10207() -> (Tensor[(135), uint16], Tensor[(135), uint16]) {
  @func_10205() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */
}

def @func_7197(%var_7196: Tensor[(10), float64]) -> (Tensor[(9, 2, 16), uint64], Tensor[(2160), uint16], Tensor[(10), float64], Tensor[(135), uint16]) {
  %1748 = fn (%var_7185: Tensor[(10), float64]) -> (Tensor[(9, 2, 16), uint64], Tensor[(2160), uint16], Tensor[(10), float64], Tensor[(135), uint16]) {
    %1740 = @func_2414() /* ty=(Tensor[(6, 15, 10), int8], Tensor[(9, 2, 16), uint64], uint32, Tensor[(1056), uint32], Tensor[(135), uint16]) */;
    %1741 = cast(%var_7185, dtype="float64") /* ty=Tensor[(10), float64] */;
    %1742 = reshape(%1741, newshape=[2, 1, 5]) /* ty=Tensor[(2, 1, 5), float64] */;
    %1743 = @func_5165(%1742) /* ty=(Tensor[(2160), uint16], Tensor[(2160), uint16], Tensor[(135), uint16], Tensor[(2, ?, 5), bool]) */;
    %1744 = @func_4372() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16], Tensor[(135), uint16]) */;
    %1745 = %1740.1;
    %1746 = %1743.0;
    %1747 = %1744.0;
    (%1745, %1746, %var_7185, %1747)
  };
  %1748(%var_7196) /* ty=(Tensor[(9, 2, 16), uint64], Tensor[(2160), uint16], Tensor[(10), float64], Tensor[(135), uint16]) */
}

def @func_9138(%var_9117: Tensor[(15, 16, 9), uint16], %var_9130: Tensor[(350), float64]) -> (Tensor[(15, 16, 9), int8], Tensor[(182), float32], Tensor[(350), float64]) {
  %1749 = @func_6220() /* ty=Tensor[(15, 16, 9), uint16] */;
  %1750 = cast(%var_9117, dtype="int8") /* ty=Tensor[(15, 16, 9), int8] */;
  %1751 = shape_of(%1749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1752 = cast(%1749, dtype="int8") /* ty=Tensor[(15, 16, 9), int8] */;
  %1753 = dyn.reshape(%1750, %1751, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1754 = cast(%var_9130, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1755 = reshape(%1754, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1756 = @func_8855(%1755) /* ty=(Tensor[(15, 16, 9), float32], Tensor[(182), float32], Tensor[(462), float32], Tensor[(350), float64]) */;
  %1757 = multiply(%1752, %1753) /* ty=Tensor[(15, 16, 9), int8] */;
  %1758 = %1756.1;
  (%1757, %1758, %var_9130)
}

def @func_18984() -> Tensor[(135), uint16] {
  @func_18982() /* ty=Tensor[(135), uint16] */
}

def @func_17255(%var_17254: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(350), float64], Tensor[(15, 16, 9), float32]) {
  %1767 = fn (%var_17229: Tensor[(350), float64]) -> (Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(350), float64], Tensor[(15, 16, 9), float32]) {
    %1759 = @func_5423() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %1760 = cast(%var_17229, dtype="float64") /* ty=Tensor[(350), float64] */;
    %1761 = reshape(%1760, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
    %1762 = @func_5694(%1761) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(10, 7, 5), float64], Tensor[(175, 2), float64]) */;
    %1763 = @func_12801() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), float32]) */;
    %1764 = %1759.0;
    %1765 = %1762.0;
    %1766 = %1763.2;
    (%1764, %1765, %var_17229, %1766)
  };
  %1767(%var_17254) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16], Tensor[(350), float64], Tensor[(15, 16, 9), float32]) */
}

def @func_4237() -> (Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) {
  @func_4235() /* ty=(Tensor[(6, 15, 10), float32], Tensor[(135), uint16]) */
}

def @func_13926() -> Tensor[(15, 16, 9), uint16] {
  %1768 = @func_13773() /* ty=(Tensor[(15, 16, 9), uint16],) */;
  %1768.0
}

def @func_7715(%var_7714: Tensor[(11, 88), float64]) -> (Tensor[(135), uint16], Tensor[(350), float64], Tensor[(5, 70), float64], Tensor[(11, 88), float64], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16]) {
  %1786 = fn (%var_7657: Tensor[(11, 88), float64]) -> (Tensor[(135), uint16], Tensor[(350), float64], Tensor[(5, 70), float64], Tensor[(11, 88), float64], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16]) {
    %1769 = @func_5595() /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(135), uint16]) */;
    %1770 = cast(meta[relay.Constant][87] /* ty=Tensor[(5, 70), float64] */, dtype="float64") /* ty=Tensor[(5, 70), float64] */;
    %1771 = cast(%var_7657, dtype="float64") /* ty=Tensor[(11, 88), float64] */;
    %1772 = reshape(%1770, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %1773 = reshape(%1771, newshape=[22, 44]) /* ty=Tensor[(22, 44), float64] */;
    %1774 = @func_2771(%1772, %1773) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(350), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(9), float64], Tensor[(22, 44), float64]) */;
    %1775 = cast(meta[relay.Constant][88] /* ty=Tensor[(11, 88), float64] */, dtype="float64") /* ty=Tensor[(11, 88), float64] */;
    %1776 = shape_of(%var_7657, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1777 = cast(%var_7657, dtype="float64") /* ty=Tensor[(11, 88), float64] */;
    %1778 = dyn.reshape(%1775, %1776, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1779 = @func_3069() /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16]) */;
    %1780 = @func_5755() /* ty=(Tensor[(15, 16, 9), uint16],) */;
    %1781 = %1769.1;
    %1782 = %1774.1;
    %1783 = floor_divide(%1777, %1778) /* ty=Tensor[(11, 88), float64] */;
    %1784 = %1779.2;
    %1785 = %1780.0;
    (%1781, %1782, meta[relay.Constant][87] /* ty=Tensor[(5, 70), float64] */, %1783, %1784, %1785)
  };
  %1786(%var_7714) /* ty=(Tensor[(135), uint16], Tensor[(350), float64], Tensor[(5, 70), float64], Tensor[(11, 88), float64], Tensor[(2160), uint16], Tensor[(15, 16, 9), uint16]) */
}

def @func_12058() -> Tensor[(135), uint16] {
  %1787 = @func_5055() /* ty=(Tensor[(135), uint16],) */;
  %1787.0
}

def @func_12113() -> (Tensor[(135), uint16],) {
  %1788 = @func_11171() /* ty=(Tensor[(135), uint16], Tensor[(135), uint16]) */;
  %1789 = %1788.0;
  (%1789,)
}

def @func_9435() -> Tensor[(135), uint16] {
  @func_9433() /* ty=Tensor[(135), uint16] */
}

def @func_18864() -> (Tensor[(15, 16, 9), float32],) {
  @func_18862() /* ty=(Tensor[(15, 16, 9), float32],) */
}

def @func_7596(%var_7594: Tensor[(2940), float64]) -> (Tensor[(6, 15, 10), float64], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float64], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) {
  @func_7593(%var_7594) /* ty=(Tensor[(6, 15, 10), float64], Tensor[(15, 14, 14), bool], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(6, 15, 10), float64], Tensor[(6, 15, 10), float32], Tensor[(15, 16, 9), uint16]) */
}

def @func_4094(%var_4093: Tensor[(1, 182), float32]) -> (Tensor[(135), uint16], float64, float64, Tensor[(350), float64], Tensor[(1, 182), float32]) {
  %1799 = fn (%var_4083: Tensor[(1, 182), float32]) -> (Tensor[(135), uint16], float64, float64, Tensor[(350), float64], Tensor[(1, 182), float32]) {
    %1790 = cast(-5.93982f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1791 = cast(meta[relay.Constant][89] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %1792 = cast(%var_4083, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
    %1793 = reshape(%1790, newshape=[]) /* ty=float64 */;
    %1794 = reshape(%1791, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %1795 = reshape(%1792, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %1796 = @func_2650(%1793, %1794, %1795) /* ty=(Tensor[(6, 15, 10), float32], Tensor[(10, 7, 5), float64], float64, Tensor[(2940), float64], Tensor[(350), float64], Tensor[(1, 14, 13), float32], Tensor[(182), float32]) */;
    %1797 = @func_2453() /* ty=Tensor[(135), uint16] */;
    %1798 = %1796.2;
    (%1797, %1798, -5.93982f64 /* ty=float64 */, meta[relay.Constant][89] /* ty=Tensor[(350), float64] */, %var_4083)
  };
  %1799(%var_4093) /* ty=(Tensor[(135), uint16], float64, float64, Tensor[(350), float64], Tensor[(1, 182), float32]) */
}

def @func_4911(%var_4909: Tensor[(2160), uint16], %var_4910: float64) -> (Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(10, 7, 5), float64], float64, Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(1, 2940), float64]) {
  @func_4907(%var_4909, %var_4910) /* ty=(Tensor[(135), uint16], Tensor[(15, 16, 9), uint16], Tensor[(2160), uint16], Tensor[(10, 7, 5), float64], float64, Tensor[(350), float64], Tensor[(1056), uint32], Tensor[(15, 16, 9), uint16], Tensor[(1, 2940), float64]) */
}

def @func_1641(%var_1639: Tensor[(12, 15, 10), float64], %var_1640: Tensor[(45), float64]) -> (Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) {
  %1810 = fn (%var_1609: Tensor[(12, 15, 10), float64], %var_1619: Tensor[(45), float64]) -> (Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) {
    %1800 = cast(%var_1609, dtype="float64") /* ty=Tensor[(12, 15, 10), float64] */;
    %1801 = cast(meta[relay.Constant][90] /* ty=Tensor[(9, 1), float64] */, dtype="float64") /* ty=Tensor[(9, 1), float64] */;
    %1802 = cast(%var_1619, dtype="float64") /* ty=Tensor[(45), float64] */;
    %1803 = cast(meta[relay.Constant][91] /* ty=Tensor[(1, 288), uint64] */, dtype="uint64") /* ty=Tensor[(1, 288), uint64] */;
    %1804 = reshape(%1801, newshape=[3, 1, 3]) /* ty=Tensor[(3, 1, 3), float64] */;
    %1805 = reshape(%1802, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
    %1806 = reshape(%1803, newshape=[2, 144]) /* ty=Tensor[(2, 144), uint64] */;
    %1807 = @func_990(%1804, %1805, %1806) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(15, 16, 9), uint16], Tensor[(2, 144), uint64], Tensor[(135), uint16]) */;
    %1808 = atan(%1800) /* ty=Tensor[(12, 15, 10), float64] */;
    %1809 = %1807.1;
    (%1808, %1809, meta[relay.Constant][90] /* ty=Tensor[(9, 1), float64] */, %var_1619, meta[relay.Constant][91] /* ty=Tensor[(1, 288), uint64] */)
  };
  %1810(%var_1639, %var_1640) /* ty=(Tensor[(12, 15, 10), float64], Tensor[(15, 16, 9), uint16], Tensor[(9, 1), float64], Tensor[(45), float64], Tensor[(1, 288), uint64]) */
}

def @func_9500(%var_9499: Tensor[(9, 16, 16), float64]) -> (Tensor[(9, 16, 16), float64], Tensor[(6, 15, 10), float32]) {
  %1815 = fn (%var_9480: Tensor[(9, 16, 16), float64]) -> (Tensor[(9, 16, 16), float64], Tensor[(6, 15, 10), float32]) {
    %1811 = cast(%var_9480, dtype="float64") /* ty=Tensor[(9, 16, 16), float64] */;
    %1812 = @func_7753() /* ty=(Tensor[(6, 15, 10), float32],) */;
    %1813 = log10(%1811) /* ty=Tensor[(9, 16, 16), float64] */;
    %1814 = %1812.0;
    (%1813, %1814)
  };
  %1815(%var_9499) /* ty=(Tensor[(9, 16, 16), float64], Tensor[(6, 15, 10), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen882/build/output.py:5670: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen882/build/output.py", line 5675, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(270) tvmgen_default_fused_rsqrt_kernel0(double* __restrict__ tensor, double* __restrict__ placeholder) {
  tensor[(((int)threadIdx.x))] = (1.000000e+00 / sqrt(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


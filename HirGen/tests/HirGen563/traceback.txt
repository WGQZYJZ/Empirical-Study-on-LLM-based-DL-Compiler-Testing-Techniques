==========mod==========
#[version = "0.0.5"]
def @func_6384() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %0 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1 = @func_3755() /* ty=Tensor[(160), uint64] */;
  %2 = %0.0;
  (%1, %2)
}

def @func_6528() -> (Tensor[(160), uint64],) {
  %3 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %4 = %3.0;
  (%4,)
}

def @func_7449() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) {
  %5 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %6 = @func_5318() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) */;
  %7 = @func_3782() /* ty=Tensor[(160), uint64] */;
  %8 = %5.0;
  %9 = %6.2;
  (%7, %8, %9)
}

def @main(%var_15927: Tensor[(4, 9, 12), bool], %var_15928: Tensor[(4, 9, 12), bool]) -> Tensor[(4, 9, 12), bool] {
  %10 = cast(%var_15928, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %11 = shape_of(%var_15927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%var_15927, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%12, %13) /* ty=Tensor[(4, 9, 12), bool] */
}

def @func_11996() -> (Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(4, 264), float64], Tensor[(7, 16, 11), float64]) {
  %14 = @func_9481() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 264), float64] */, dtype="float64") /* ty=Tensor[(4, 264), float64] */;
  %16 = reshape(%15, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %17 = @func_8692(%16) /* ty=(Tensor[(160), uint64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(3, 60), int8], Tensor[(7, 16, 11), float64], Tensor[(1152), float64], Tensor[(16, ?, 10), uint64]) */;
  %18 = %14.0;
  %19 = %17.8;
  %20 = @func_11917() /* ty=Tensor[(7, 16, 11), float64] */;
  (%18, %19, meta[relay.Constant][0] /* ty=Tensor[(4, 264), float64] */, %20)
}

def @func_14456() -> (Tensor[(7, 16, 11), float64],) {
  %21 = @func_9533() /* ty=Tensor[(7, 16, 11), float64] */;
  (%21,)
}

def @func_9719() -> (Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float32]) {
  %22 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %24 = @func_6415() /* ty=Tensor[(7, 16, 11), uint64] */;
  %25 = sinh(%23) /* ty=Tensor[(7, 16, 11), float32] */;
  (%24, %25)
}

def @func_9467() -> (Tensor[(160), uint64],) {
  %26 = @func_9285() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) */;
  %27 = %26.0;
  (%27,)
}

def @func_10902(%var_10896: Tensor[(1, 10, 7), int8], %var_10897: Tensor[(5, 10, 7), int8]) -> (Tensor[(5, 10, 7), int8],) {
  %28 = cast(%var_10896, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
  %29 = cast(%var_10897, dtype="int8") /* ty=Tensor[(5, 10, 7), int8] */;
  %30 = bitwise_and(%28, %29) /* ty=Tensor[(5, 10, 7), int8] */;
  (%30,)
}

def @func_2228(%var_2205: Tensor[(8, 9, 16), float64]) -> Tensor[(8, 9, 16), float64] {
  %31 = cast(%var_2205, dtype="float64") /* ty=Tensor[(8, 9, 16), float64] */;
  acosh(%31) /* ty=Tensor[(8, 9, 16), float64] */
}

def @func_3167(%var_3163: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32], Tensor[(168), float32]) {
  %32 = cast(%var_3163, dtype="float32") /* ty=Tensor[(168), float32] */;
  %33 = reshape(%32, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %34 = @func_3046(%33) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */;
  %35 = @func_2693() /* ty=Tensor[(7, 16, 11), float64] */;
  %36 = %34.2;
  (%35, %36, %var_3163)
}

def @func_11424(%var_11377: Tensor[(162), float32], %var_11417: Tensor[(1872), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(162), int32], Tensor[(162), float32], Tensor[(160), uint64], Tensor[(1872), float32]) {
  %37 = @func_10289() /* ty=(Tensor[(160), uint64],) */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %39 = cast(%var_11377, dtype="float32") /* ty=Tensor[(162), float32] */;
  %40 = reshape(%38, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
  %41 = reshape(%39, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %42 = @func_10507(%40, %41) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(162), int32]) */;
  %43 = @func_9467() /* ty=(Tensor[(160), uint64],) */;
  %44 = cast(%var_11417, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %45 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(1872), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?), float32] */;
  %48 = @func_5207() /* ty=Tensor[(160), uint64] */;
  %49 = %37.0;
  %50 = %42.6;
  %51 = %43.0;
  %52 = add(%46, %47) /* ty=Tensor[(1872), float32] */;
  (%48, %49, %50, %var_11377, %51, %52)
}

def @func_8847() -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) {
  %53 = @func_3000() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) */;
  %54 = @func_3496() /* ty=(Tensor[(160), uint64],) */;
  %55 = %54.0;
  %56 = cast(%55, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %57 = reshape(%56, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %58 = @func_4981() /* ty=Tensor[(160), uint64] */;
  %59 = %53.1;
  %60 = @func_334(%57) /* ty=Tensor[(16, ?, 10), uint64] */;
  (%58, %59, %55, %60)
}

def @func_9285() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) {
  %61 = @func_7924() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */;
  %62 = %61.2;
  %63 = @func_7090() /* ty=Tensor[(7, 16, 11), float32] */;
  (%62, %63)
}

def @func_9810() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %64 = @func_8456() /* ty=(Tensor[(160), uint64],) */;
  %65 = @func_8253() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %66 = %64.0;
  %67 = %65.2;
  (%66, %67)
}

def @func_7160(%var_7105: Tensor[(9, 3, 6), float32], %var_7146: Tensor[(1872), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(9, 3, 6), uint8], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(6, 16, 2), float32], Tensor[(1, 192), float32]) {
  %68 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %69 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
  %70 = cast(%var_7105, dtype="float32") /* ty=Tensor[(9, 3, 6), float32] */;
  %71 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(9, 3, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 6), float32] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %74 = power(%72, %73) /* ty=Tensor[(9, 3, 6), float32] */;
  %75 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 3, 6), float32] */, dtype="uint8") /* ty=Tensor[(9, 3, 6), uint8] */;
  %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%74, dtype="uint8") /* ty=Tensor[(9, 3, 6), uint8] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %79 = cast(%var_7146, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %80 = reshape(%79, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %81 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 192), float32] */, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
  %82 = reshape(%81, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %83 = @func_2620(%82) /* ty=(Tensor[(160), uint64], Tensor[(6, 16, 2), float32], Tensor[(192), float32]) */;
  %84 = %68.0;
  %85 = %69.0;
  %86 = subtract(%77, %78) /* ty=Tensor[(9, 3, 6), uint8] */;
  %87 = @func_6808(%80) /* ty=Tensor[(16, 13, 9), float32] */;
  %88 = %83.1;
  (%84, %85, %86, %87, %var_7146, %88, meta[relay.Constant][3] /* ty=Tensor[(1, 192), float32] */)
}

def @func_3949() -> (Tensor[(160), uint64],) {
  %89 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %90 = %89.1;
  (%90,)
}

def @func_10159(%var_10140: Tensor[(14, 3, 5), float64]) -> (Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64]) {
  %91 = cast(%var_10140, dtype="float64") /* ty=Tensor[(14, 3, 5), float64] */;
  %92 = cast(%var_10140, dtype="float64") /* ty=Tensor[(14, 3, 5), float64] */;
  %93 = tan(%91) /* ty=Tensor[(14, 3, 5), float64] */;
  %94 = cos(%92) /* ty=Tensor[(14, 3, 5), float64] */;
  (%93, %94)
}

def @func_14527() -> Tensor[(160), uint64] {
  %95 = @func_9153() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %95.0
}

def @func_2275() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) {
  %96 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %97 = cast(meta[relay.Constant][4] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %98 = reshape(%97, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %99 = @func_1542(%98) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %100 = %96.0;
  %101 = %99.3;
  (%100, %101, meta[relay.Constant][4] /* ty=Tensor[(168), float32] */)
}

def @func_9514() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32]) {
  %102 = @func_7030() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %103 = @func_9285() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) */;
  %104 = %102.0;
  %105 = %103.1;
  (%104, %105)
}

def @func_6120(%var_6097: Tensor[(24, 8), float32], %var_6098: Tensor[(16), int64]) -> (Tensor[(7, 16, 11), float64], Tensor[(1, 160), uint64], Tensor[(400), float64], Tensor[(24, 8), float32], Tensor[(16), int64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(84, 2), float32]) {
  %106 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %107 = cast(meta[relay.Constant][5] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %108 = cast(%var_6097, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %109 = cast(%var_6098, dtype="int64") /* ty=Tensor[(16), int64] */;
  %110 = reshape(%107, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %111 = reshape(%108, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %112 = reshape(%109, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %113 = @func_2196(%110, %111, %112) /* ty=(Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) */;
  %114 = cast(meta[relay.Constant][6] /* ty=Tensor[(84, 2), float32] */, dtype="float32") /* ty=Tensor[(84, 2), float32] */;
  %115 = reshape(%114, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %116 = @func_376(%115) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %117 = %106.0;
  %118 = %113.1;
  %119 = @func_5014() /* ty=Tensor[(7, 16, 11), float64] */;
  %120 = %116.0;
  (%117, %118, meta[relay.Constant][5] /* ty=Tensor[(400), float64] */, %var_6097, %var_6098, %119, %120, meta[relay.Constant][6] /* ty=Tensor[(84, 2), float32] */)
}

def @func_10110() -> Tensor[(160), uint64] {
  %121 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %121.0
}

def @func_11602() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %122 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
  %123 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %124 = %122.1;
  %125 = %123.0;
  (%124, %125)
}

def @func_3782() -> Tensor[(160), uint64] {
  %126 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %126.1
}

def @func_10776() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %127 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %128 = @func_7957() /* ty=Tensor[(160), uint64] */;
  %129 = %127.0;
  (%128, %129)
}

def @func_12563() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %130 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
  %131 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %132 = @func_10222() /* ty=Tensor[(7, 16, 11), float64] */;
  %133 = %130.0;
  %134 = %131.0;
  (%132, %133, %134)
}

def @func_12652(%var_12579: Tensor[(9, 11, 5), float32], %var_12580: Tensor[(9, 11, 5), float32], %var_12647: Tensor[(9, 11, 5), float32]) -> (Tensor[(9, 11, 5), float32], Tensor[(1056), float64], Tensor[(1232), float64], Tensor[(6, 30), int8], Tensor[(9, 11, 5), int16]) {
  %135 = cast(%var_12580, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %136 = shape_of(%var_12579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%var_12579, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %140 = cast(meta[relay.Constant][7] /* ty=Tensor[(1232), float64] */, dtype="int16") /* ty=Tensor[(1232), int16] */;
  %141 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 30), int8] */, dtype="int8") /* ty=Tensor[(6, 30), int8] */;
  %142 = reshape(%139, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %143 = reshape(%140, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), int16] */;
  %144 = reshape(%141, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %145 = @func_3232(%142, %143, %144) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */;
  %146 = cast(%var_12647, dtype="int16") /* ty=Tensor[(9, 11, 5), int16] */;
  %147 = shape_of(%var_12579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%var_12579, dtype="int16") /* ty=Tensor[(9, 11, 5), int16] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %150 = floor_mod(%137, %138) /* ty=Tensor[(9, 11, 5), float32] */;
  %151 = %145.3;
  %152 = add(%148, %149) /* ty=Tensor[(9, 11, 5), int16] */;
  (%150, %151, meta[relay.Constant][7] /* ty=Tensor[(1232), float64] */, meta[relay.Constant][8] /* ty=Tensor[(6, 30), int8] */, %152)
}

def @func_2196(%var_2134: Tensor[(10, 8, 5), float64], %var_2149: Tensor[(192), float32], %var_2152: Tensor[(16), int64]) -> (Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) {
  %153 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 160), uint64] */, dtype="uint64") /* ty=Tensor[(1, 160), uint64] */;
  %154 = reshape(%153, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %155 = cast(%var_2134, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %156 = atan(%155) /* ty=Tensor[(10, 8, 5), float64] */;
  %157 = cast(%var_2134, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %158 = shape_of(%156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%156, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %161 = cast(%var_2149, dtype="float32") /* ty=Tensor[(192), float32] */;
  %162 = reshape(%161, newshape=[6, 16, 2]) /* ty=Tensor[(6, 16, 2), float32] */;
  %163 = @func_899(%162) /* ty=(Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) */;
  %164 = %163.2;
  %165 = cast(%164, dtype="int64") /* ty=int64 */;
  %166 = cast(%var_2152, dtype="int64") /* ty=Tensor[(16), int64] */;
  %167 = @func_334(%154) /* ty=Tensor[(16, ?, 10), uint64] */;
  %168 = cast(%167, dtype="uint64") /* ty=Tensor[(16, ?, 10), uint64] */;
  %169 = reshape(%165, newshape=[]) /* ty=int64 */;
  %170 = reshape(%166, newshape=[1, 16]) /* ty=Tensor[(1, 16), int64] */;
  %171 = reshape(%168, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %172 = @func_1596(%169, %170, %171) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %173 = cast(%156, dtype="float32") /* ty=Tensor[(10, 8, 5), float32] */;
  %174 = acos(%173) /* ty=Tensor[(10, 8, 5), float32] */;
  %175 = cast(%174, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %176 = cast(%164, dtype="float64") /* ty=float64 */;
  %177 = reshape(%176, newshape=[]) /* ty=float64 */;
  %178 = @func_526(%177) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %179 = not_equal(%159, %160) /* ty=Tensor[(10, 8, 5), bool] */;
  %180 = %172.1;
  %181 = asinh(%175) /* ty=Tensor[(10, 8, 5), float64] */;
  %182 = %178.1;
  (%167, meta[relay.Constant][9] /* ty=Tensor[(1, 160), uint64] */, %179, %164, %var_2149, %180, %var_2152, %181, %182)
}

def @func_7487(%var_7482: Tensor[(192), float32]) -> (Tensor[(10, 3, 3), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(400), float64], Tensor[(192), float32]) {
  %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 3, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 3), float32] */;
  %184 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %185 = cast(meta[relay.Constant][11] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %186 = cast(%var_7482, dtype="float32") /* ty=Tensor[(192), float32] */;
  %187 = reshape(%185, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %188 = reshape(%186, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %189 = @func_3081(%187, %188) /* ty=(Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) */;
  %190 = acosh(%183) /* ty=Tensor[(10, 3, 3), float32] */;
  %191 = %184.0;
  %192 = %189.2;
  (%190, %191, %192, meta[relay.Constant][11] /* ty=Tensor[(400), float64] */, %var_7482)
}

def @func_4149() -> Tensor[(7, 16, 11), float64] {
  @func_2799() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_12130() -> (Tensor[(160), uint64],) {
  %193 = @func_10699() /* ty=(Tensor[(160), uint64],) */;
  %194 = %193.0;
  (%194,)
}

def @func_1596(%var_1580: int64, %var_1581: Tensor[(1, 16), int64], %var_1593: Tensor[(160), uint64]) -> (Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
  %195 = cast(%var_1580, dtype="int64") /* ty=int64 */;
  %196 = cast(%var_1581, dtype="int64") /* ty=Tensor[(1, 16), int64] */;
  %197 = cast(%var_1593, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %198 = reshape(%197, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %199 = bitwise_and(%195, %196) /* ty=Tensor[(1, 16), int64] */;
  %200 = @func_334(%198) /* ty=Tensor[(16, ?, 10), uint64] */;
  (%199, %200, %var_1593)
}

def @func_7712(%var_7682: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) {
  %201 = cast(%var_7682, dtype="int8") /* ty=Tensor[(180), int8] */;
  %202 = reshape(%201, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %203 = @func_4724(%202) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) */;
  %204 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %205 = %203.1;
  (%204, %205, %var_7682)
}

def @func_11545() -> Tensor[(160), uint64] {
  @func_3755() /* ty=Tensor[(160), uint64] */
}

def @func_9985() -> (Tensor[(160), uint64],) {
  %206 = @func_8709() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(160), uint64]) */;
  %207 = %206.1;
  (%207,)
}

def @func_10827(%var_10783: Tensor[(132, 2), float32], %var_10784: Tensor[(168), float32], %var_10785: Tensor[(1056), float64], %var_10786: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(180), int8], Tensor[(1232), float64], Tensor[(132, 2), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(264), float32]) {
  %208 = cast(meta[relay.Constant][12] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %209 = cast(%var_10783, dtype="float32") /* ty=Tensor[(132, 2), float32] */;
  %210 = cast(%var_10784, dtype="float32") /* ty=Tensor[(168), float32] */;
  %211 = cast(%var_10785, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %212 = cast(%var_10786, dtype="int8") /* ty=Tensor[(180), int8] */;
  %213 = reshape(%208, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %214 = reshape(%209, newshape=[264, 1]) /* ty=Tensor[(264, 1), float32] */;
  %215 = reshape(%210, newshape=[6, 28]) /* ty=Tensor[(6, 28), float32] */;
  %216 = reshape(%211, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %217 = reshape(%212, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %218 = @func_4944(%213, %214, %215, %216, %217) /* ty=(Tensor[(7, 16, 11), uint32], Tensor[(180), int8], Tensor[(264, 1), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(6, 28), float32], Tensor[(7, 16, 11), float32], Tensor[(600), float64], int8) */;
  %219 = @func_10776() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %220 = cast(%var_10785, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %221 = reshape(%220, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %222 = @func_8692(%221) /* ty=(Tensor[(160), uint64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(3, 60), int8], Tensor[(7, 16, 11), float64], Tensor[(1152), float64], Tensor[(16, ?, 10), uint64]) */;
  %223 = @func_5207() /* ty=Tensor[(160), uint64] */;
  %224 = %218.4;
  %225 = %219.1;
  %226 = %222.2;
  (%223, %224, meta[relay.Constant][12] /* ty=Tensor[(1232), float64] */, %var_10783, %var_10784, %var_10785, %var_10786, %225, %226)
}

def @func_10315() -> Tensor[(160), uint64] {
  %227 = @func_8847() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %227.0
}

def @func_2620(%var_2608: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(6, 16, 2), float32], Tensor[(192), float32]) {
  %228 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %229 = cast(%var_2608, dtype="float32") /* ty=Tensor[(192), float32] */;
  %230 = reshape(%229, newshape=[6, 16, 2]) /* ty=Tensor[(6, 16, 2), float32] */;
  %231 = @func_899(%230) /* ty=(Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) */;
  %232 = %228.1;
  %233 = %231.0;
  (%232, %233, %var_2608)
}

def @func_9688() -> (Tensor[(160), uint64],) {
  %234 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %235 = %234.1;
  (%235,)
}

def @func_12043() -> Tensor[(160), uint64] {
  %236 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %236.0
}

def @func_11615() -> Tensor[(7, 16, 11), float64] {
  %237 = @func_11602() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %237.1
}

def @func_9125() -> (Tensor[(160), uint64],) {
  %238 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %239 = %238.1;
  (%239,)
}

def @func_4724(%var_4716: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) {
  %240 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
  %241 = cast(%240, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %242 = cast(%240, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
  %243 = cast(%var_4716, dtype="int8") /* ty=Tensor[(180), int8] */;
  %244 = reshape(%241, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %245 = reshape(%242, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), int16] */;
  %246 = reshape(%243, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %247 = @func_3232(%244, %245, %246) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */;
  %248 = %247.3;
  (%240, %248, %var_4716)
}

def @func_4614(%var_4606: Tensor[(6, 13, 11), int16], %var_4607: Tensor[(6, 13, 11), int16]) -> (Tensor[(6, 13, 11), int16],) {
  %249 = cast(%var_4607, dtype="int16") /* ty=Tensor[(6, 13, 11), int16] */;
  %250 = shape_of(%var_4606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%var_4606, dtype="int16") /* ty=Tensor[(6, 13, 11), int16] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %253 = bitwise_or(%251, %252) /* ty=Tensor[(6, 13, 11), int16] */;
  (%253,)
}

def @func_15731() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %254 = @func_11455() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %255 = @func_11545() /* ty=Tensor[(160), uint64] */;
  %256 = @func_8859() /* ty=Tensor[(160), uint64] */;
  %257 = %254.0;
  (%255, %256, %257)
}

def @func_15770() -> Tensor[(160), uint64] {
  @func_12043() /* ty=Tensor[(160), uint64] */
}

def @func_6616() -> Tensor[(7, 16, 11), float64] {
  %258 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %258.0
}

def @func_14284() -> Tensor[(160), uint64] {
  %259 = @func_7924() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */;
  %259.0
}

def @func_6415() -> Tensor[(7, 16, 11), uint64] {
  %260 = @func_5626() /* ty=(Tensor[(7, 16, 11), uint64],) */;
  %260.0
}

def @func_14931(%var_14928: Tensor[(162), float32]) -> (Tensor[(160), uint64], Tensor[(162), int32], Tensor[(1, 1872), float32], Tensor[(162), float32]) {
  %261 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 1872), float32] */, dtype="float32") /* ty=Tensor[(1, 1872), float32] */;
  %262 = cast(%var_14928, dtype="float32") /* ty=Tensor[(162), float32] */;
  %263 = reshape(%261, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
  %264 = reshape(%262, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %265 = @func_10507(%263, %264) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(162), int32]) */;
  %266 = @func_10110() /* ty=Tensor[(160), uint64] */;
  %267 = %265.6;
  (%266, %267, meta[relay.Constant][13] /* ty=Tensor[(1, 1872), float32] */, %var_14928)
}

def @func_8765() -> (Tensor[(1152), float64],) {
  %268 = @func_3000() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) */;
  %269 = %268.2;
  (%269,)
}

def @func_2558(%var_2541: Tensor[(600), float64]) -> (Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) {
  %270 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %271 = cast(meta[relay.Constant][14] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %272 = reshape(%271, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %273 = @func_376(%272) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %274 = %273.0;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %276 = reshape(%275, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %277 = @func_1542(%276) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %278 = cast(%var_2541, dtype="float64") /* ty=Tensor[(600), float64] */;
  %279 = reshape(%278, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %280 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %281 = cast(meta[relay.Constant][15] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %282 = %270.1;
  %283 = cast(%282, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %284 = reshape(%280, newshape=[]) /* ty=int64 */;
  %285 = reshape(%281, newshape=[1, 16]) /* ty=Tensor[(1, 16), int64] */;
  %286 = reshape(%283, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %287 = @func_1596(%284, %285, %286) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %288 = %277.0;
  %289 = @func_1012(%279) /* ty=Tensor[(12, 5, 10), float64] */;
  %290 = %287.0;
  (%282, %274, meta[relay.Constant][14] /* ty=Tensor[(168), float32] */, %288, %289, %var_2541, %290, 9 /* ty=int64 */, meta[relay.Constant][15] /* ty=Tensor[(16), int64] */)
}

def @func_6581(%var_6574: Tensor[(9, 16, 10), uint64]) -> Tensor[(9, 16, 10), uint64] {
  %291 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 16, 10), uint64] */, dtype="uint64") /* ty=Tensor[(9, 16, 10), uint64] */;
  %292 = shape_of(%var_6574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%var_6574, dtype="uint64") /* ty=Tensor[(9, 16, 10), uint64] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%293, %294) /* ty=Tensor[(9, 16, 10), uint64] */
}

def @func_3000() -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) {
  %295 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %296 = cast(meta[relay.Constant][17] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %297 = reshape(%296, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
  %298 = @func_2351(%297) /* ty=(Tensor[(168), float32], Tensor[(168), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) */;
  %299 = %295.0;
  %300 = %298.0;
  (%299, %300, meta[relay.Constant][17] /* ty=Tensor[(1152), float64] */)
}

def @func_9834() -> Tensor[(160), uint64] {
  %301 = @func_8728() /* ty=(Tensor[(160), uint64],) */;
  %301.0
}

def @func_8136(%var_8123: Tensor[(3, 56), float32]) -> (Tensor[(160), uint64], Tensor[(3, 56), float32], Tensor[(12, 14, ?), uint16]) {
  %302 = @func_6384() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %303 = cast(%var_8123, dtype="float32") /* ty=Tensor[(3, 56), float32] */;
  %304 = reshape(%303, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %305 = @func_376(%304) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="float64") /* ty=Tensor[(12, 14, 1), float64] */;
  %308 = exp(%307) /* ty=Tensor[(12, 14, 1), float64] */;
  %309 = cast(%306, dtype="uint16") /* ty=Tensor[(12, 14, 1), uint16] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%308, dtype="uint16") /* ty=Tensor[(12, 14, 1), uint16] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %313 = %302.1;
  %314 = multiply(%311, %312) /* ty=Tensor[(12, 14, ?), uint16] */;
  (%313, %var_8123, %314)
}

def @func_8966(%var_8963: int8, %var_8964: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8]) {
  %315 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %316 = cast(%var_8963, dtype="int8") /* ty=int8 */;
  %317 = cast(%var_8964, dtype="int8") /* ty=Tensor[(180), int8] */;
  %318 = reshape(%316, newshape=[]) /* ty=int8 */;
  %319 = reshape(%317, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %320 = @func_1124(%318, %319) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %321 = @func_4992() /* ty=Tensor[(7, 16, 11), float64] */;
  %322 = %315.0;
  %323 = %320.0;
  (%321, %322, %323, %var_8963, %var_8964)
}

def @func_14685() -> (Tensor[(160), uint64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) {
  %324 = @func_9125() /* ty=(Tensor[(160), uint64],) */;
  %325 = cast(meta[relay.Constant][18] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %326 = reshape(%325, newshape=[9, 14, 10]) /* ty=Tensor[(9, 14, 10), float64] */;
  %327 = @func_11690(%326) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(9, 14, 10), float64]) */;
  %328 = %324.0;
  %329 = %327.0;
  (%328, %329, meta[relay.Constant][18] /* ty=Tensor[(1260), float64] */)
}

def @func_334(%var_323: Tensor[(16, 1, 10), uint64]) -> Tensor[(16, ?, 10), uint64] {
  %330 = cast(%var_323, dtype="uint64") /* ty=Tensor[(16, 1, 10), uint64] */;
  %331 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(16, 1, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 1, 10), uint64] */, dtype="uint64") /* ty=Tensor[(16, 1, 10), uint64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%332, %333) /* ty=Tensor[(16, ?, 10), uint64] */
}

def @func_8859() -> Tensor[(160), uint64] {
  %334 = @func_8151() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %334.1
}

def @func_8709() -> (Tensor[(7, 16, 11), uint64], Tensor[(160), uint64]) {
  %335 = @func_5626() /* ty=(Tensor[(7, 16, 11), uint64],) */;
  %336 = @func_7406() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %337 = %335.0;
  %338 = %336.0;
  (%337, %338)
}

def @func_5525() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %339 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %340 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %341 = %339.0;
  %342 = %340.2;
  (%341, %342)
}

def @func_7595() -> (Tensor[(160), uint64],) {
  %343 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %344 = %343.0;
  (%344,)
}

def @func_2799() -> Tensor[(7, 16, 11), float64] {
  %345 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %345.0
}

def @func_4944(%var_4906: Tensor[(7, 16, 11), float64], %var_4917: Tensor[(264, 1), float32], %var_4918: Tensor[(6, 28), float32], %var_4919: Tensor[(1056), float64], %var_4920: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), uint32], Tensor[(180), int8], Tensor[(264, 1), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(6, 28), float32], Tensor[(7, 16, 11), float32], Tensor[(600), float64], int8) {
  %346 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %347 = %346.0;
  %348 = cast(%var_4906, dtype="uint32") /* ty=Tensor[(7, 16, 11), uint32] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="uint32") /* ty=Tensor[(7, 16, 11), uint32] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %352 = cast(%var_4917, dtype="float32") /* ty=Tensor[(264, 1), float32] */;
  %353 = cast(%var_4917, dtype="float32") /* ty=Tensor[(264, 1), float32] */;
  %354 = cast(%var_4918, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %355 = cast(%var_4919, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %356 = cast(%var_4920, dtype="int8") /* ty=Tensor[(180), int8] */;
  %357 = cast(%var_4917, dtype="float32") /* ty=Tensor[(264, 1), float32] */;
  %358 = reshape(%352, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %359 = reshape(%353, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %360 = reshape(%354, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %361 = reshape(%355, newshape=[88, 12]) /* ty=Tensor[(88, 12), float64] */;
  %362 = reshape(%356, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %363 = reshape(%357, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %364 = @func_3531(%358, %359, %360, %361, %362, %363) /* ty=(Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) */;
  %365 = cast(%var_4918, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %366 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %367 = cast(%366, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %368 = cast(meta[relay.Constant][20] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %369 = cast(meta[relay.Constant][21] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %370 = reshape(%367, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %371 = reshape(%368, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %372 = reshape(%369, newshape=[]) /* ty=int8 */;
  %373 = @func_3429(%370, %371, %372) /* ty=(Tensor[(400), float64], Tensor[(192), float32], Tensor[(7, 16, 11), float32], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(16, ?, 10), bool], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 5, 10), float64]) */;
  %374 = add(%350, %351) /* ty=Tensor[(7, 16, 11), uint32] */;
  %375 = %364.5;
  %376 = asin(%365) /* ty=Tensor[(6, 28), float32] */;
  %377 = %373.2;
  (%374, %375, %var_4917, %var_4919, %var_4920, %366, %376, %377, meta[relay.Constant][20] /* ty=Tensor[(600), float64] */, meta[relay.Constant][21] /* ty=int8 */)
}

def @func_9533() -> Tensor[(7, 16, 11), float64] {
  %378 = @func_8424() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %378.0
}

def @func_7804(%var_7792: int64, %var_7793: Tensor[(16, 1), int64]) -> (Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), uint64], Tensor[(160), uint64], Tensor[(160), uint64], int64, Tensor[(16, 1), int64]) {
  %379 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %380 = cast(meta[relay.Constant][22] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %381 = reshape(%380, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %382 = @func_376(%381) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %383 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %384 = cast(%var_7792, dtype="int64") /* ty=int64 */;
  %385 = cast(%var_7793, dtype="int64") /* ty=Tensor[(16, 1), int64] */;
  %386 = %383.1;
  %387 = cast(%386, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %388 = reshape(%384, newshape=[]) /* ty=int64 */;
  %389 = reshape(%385, newshape=[1, 16]) /* ty=Tensor[(1, 16), int64] */;
  %390 = reshape(%387, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %391 = @func_1596(%388, %389, %390) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %392 = %379.0;
  %393 = %382.1;
  %394 = @func_7271() /* ty=Tensor[(7, 16, 11), uint64] */;
  %395 = %391.2;
  (%392, %393, meta[relay.Constant][22] /* ty=Tensor[(168), float32] */, %394, %386, %395, %var_7792, %var_7793)
}

def @func_10222() -> Tensor[(7, 16, 11), float64] {
  %396 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %396.0
}

def @func_6008() -> (Tensor[(160), uint64],) {
  %397 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %398 = %397.1;
  (%398,)
}

def @func_10665() -> (Tensor[(7, 16, 11), float32],) {
  %399 = @func_9719() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float32]) */;
  %400 = %399.1;
  (%400,)
}

def @func_10858(%var_10843: Tensor[(16, 4, 4), float64]) -> Tensor[(16, 4, 4), float32] {
  %401 = cast(%var_10843, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %402 = acosh(%401) /* ty=Tensor[(16, 4, 4), float64] */;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  sin(%403) /* ty=Tensor[(16, 4, 4), float32] */
}

def @func_5014() -> Tensor[(7, 16, 11), float64] {
  %404 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %404.0
}

def @func_14099() -> (Tensor[(7, 16, 11), float64],) {
  %405 = @func_5666() /* ty=Tensor[(7, 16, 11), float64] */;
  (%405,)
}

def @func_15802(%var_15790: Tensor[(1, 1, 1), float64]) -> (Tensor[(1, 1, 1), float64],) {
  %406 = cast(%var_15790, dtype="float64") /* ty=Tensor[(1, 1, 1), float64] */;
  %407 = log10(%406) /* ty=Tensor[(1, 1, 1), float64] */;
  (%407,)
}

def @func_6808(%var_6803: Tensor[(16, 13, 9), float32]) -> Tensor[(16, 13, 9), float32] {
  %408 = cast(%var_6803, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  asin(%408) /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_8456() -> (Tensor[(160), uint64],) {
  %409 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %410 = %409.0;
  (%410,)
}

def @func_10507(%var_10472: Tensor[(1872), float32], %var_10492: Tensor[(162), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(162), int32]) {
  %411 = @func_9688() /* ty=(Tensor[(160), uint64],) */;
  %412 = @func_9688() /* ty=(Tensor[(160), uint64],) */;
  %413 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %414 = reshape(%413, newshape=[3, 56]) /* ty=Tensor[(3, 56), float32] */;
  %415 = @func_8136(%414) /* ty=(Tensor[(160), uint64], Tensor[(3, 56), float32], Tensor[(12, 14, ?), uint16]) */;
  %416 = cast(meta[relay.Constant][24] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %417 = cast(%var_10472, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %418 = reshape(%416, newshape=[9, 3, 6]) /* ty=Tensor[(9, 3, 6), float32] */;
  %419 = reshape(%417, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
  %420 = @func_7160(%418, %419) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(9, 3, 6), uint8], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(6, 16, 2), float32], Tensor[(1, 192), float32]) */;
  %421 = cast(%var_10492, dtype="int32") /* ty=Tensor[(162), int32] */;
  %422 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(162), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %423 = cast(meta[relay.Constant][24] /* ty=Tensor[(162), float32] */, dtype="int32") /* ty=Tensor[(162), int32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?), int32] */;
  %425 = %411.0;
  %426 = %412.0;
  %427 = %415.0;
  %428 = %420.3;
  %429 = add(%423, %424) /* ty=Tensor[(162), int32] */;
  (%425, %426, %427, meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, %428, %var_10472, %429)
}

def @func_1690(%var_1659: Tensor[(16, 16, 12), int16], %var_1660: Tensor[(16, 16, 12), int16]) -> (Tensor[(16, 16, 12), int16],) {
  %430 = cast(%var_1660, dtype="int16") /* ty=Tensor[(16, 16, 12), int16] */;
  %431 = shape_of(%var_1659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%var_1659, dtype="int16") /* ty=Tensor[(16, 16, 12), int16] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %434 = subtract(%432, %433) /* ty=Tensor[(16, 16, 12), int16] */;
  (%434,)
}

def @func_2828() -> (Tensor[(7, 16, 11), float64],) {
  %435 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  (%435,)
}

def @func_1542(%var_1532: Tensor[(168), float32]) -> (Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) {
  %436 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 11, 13), uint16] */, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
  %437 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(7, 11, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 11, 13), uint16] */, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %440 = cast(-0.526713f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %441 = reshape(%440, newshape=[]) /* ty=float64 */;
  %442 = @func_526(%441) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %443 = cast(%var_1532, dtype="float32") /* ty=Tensor[(168), float32] */;
  %444 = reshape(%443, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %445 = @func_376(%444) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %446 = equal(%438, %439) /* ty=Tensor[(7, 11, 13), bool] */;
  %447 = %442.3;
  %448 = %445.2;
  (%446, %447, -0.526713f64 /* ty=float64 */, %448, %var_1532)
}

def @func_3617(%var_3591: Tensor[(16, 16, 10), uint64]) -> (Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) {
  %449 = @func_3496() /* ty=(Tensor[(160), uint64],) */;
  %450 = cast(1.51854f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %451 = reshape(%450, newshape=[]) /* ty=float64 */;
  %452 = @func_526(%451) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %453 = %452.3;
  %454 = cast(%453, dtype="int32") /* ty=Tensor[(16, ?, 10), int32] */;
  %455 = cast(%var_3591, dtype="int32") /* ty=Tensor[(16, 16, 10), int32] */;
  %456 = bitwise_xor(%454, %455) /* ty=Tensor[(16, 16, 10), int32] */;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(16, 16, 10), float32] */;
  %458 = %449.0;
  %459 = log(%457) /* ty=Tensor[(16, 16, 10), float32] */;
  (%458, 1.51854f64 /* ty=float64 */, %459)
}

def @func_10627() -> (Tensor[(160), uint64],) {
  %460 = @func_10587() /* ty=Tensor[(160), uint64] */;
  (%460,)
}

def @func_13285() -> (Tensor[(160), uint64],) {
  %461 = @func_3949() /* ty=(Tensor[(160), uint64],) */;
  %462 = %461.0;
  (%462,)
}

def @func_8253() -> (Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %463 = @func_7030() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %464 = @func_7030() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %465 = @func_7271() /* ty=Tensor[(7, 16, 11), uint64] */;
  %466 = %463.0;
  %467 = %464.0;
  (%465, %466, %467)
}

def @func_9368() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %468 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %469 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %470 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %471 = %468.0;
  %472 = %469.0;
  %473 = %470.0;
  (%471, %472, %473)
}

def @func_7924() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) {
  %474 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %475 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %476 = @func_7595() /* ty=(Tensor[(160), uint64],) */;
  %477 = cast(meta[relay.Constant][27] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %478 = reshape(%477, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
  %479 = @func_2351(%478) /* ty=(Tensor[(168), float32], Tensor[(168), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) */;
  %480 = %474.0;
  %481 = %475.0;
  %482 = %476.0;
  %483 = %479.3;
  (%480, %481, %482, %483, meta[relay.Constant][27] /* ty=Tensor[(1152), float64] */)
}

def @func_10289() -> (Tensor[(160), uint64],) {
  %484 = @func_9597() /* ty=Tensor[(160), uint64] */;
  (%484,)
}

def @func_7090() -> Tensor[(7, 16, 11), float32] {
  %485 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %486 = %485.0;
  %487 = cast(%486, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  cosh(%487) /* ty=Tensor[(7, 16, 11), float32] */
}

def @func_13340() -> (Tensor[(160), uint64],) {
  %488 = @func_9950() /* ty=Tensor[(160), uint64] */;
  (%488,)
}

def @func_5497(%var_5495: Tensor[(160), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
  %489 = cast(%var_5495, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %490 = reshape(%489, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %491 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  %492 = @func_334(%490) /* ty=Tensor[(16, ?, 10), uint64] */;
  (%491, %492, %var_5495)
}

def @func_5255() -> (Tensor[(168), float32],) {
  %493 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %494 = %493.0;
  (%494,)
}

def @func_5595(%var_5564: Tensor[(24, 48), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) {
  %495 = cast(%var_5564, dtype="float64") /* ty=Tensor[(24, 48), float64] */;
  %496 = reshape(%495, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), float64] */;
  %497 = @func_2228(%496) /* ty=Tensor[(8, 9, 16), float64] */;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(8, 9, 16), float64] */;
  %499 = sin(%498) /* ty=Tensor[(8, 9, 16), float64] */;
  %500 = cast(%499, dtype="float64") /* ty=Tensor[(8, 9, 16), float64] */;
  %501 = @func_4992() /* ty=Tensor[(7, 16, 11), float64] */;
  %502 = @func_3755() /* ty=Tensor[(160), uint64] */;
  %503 = acos(%500) /* ty=Tensor[(8, 9, 16), float64] */;
  (%501, %502, %var_5564, %503)
}

def @func_13393() -> Tensor[(160), uint64] {
  @func_11545() /* ty=Tensor[(160), uint64] */
}

def @func_2693() -> Tensor[(7, 16, 11), float64] {
  %504 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %504.0
}

def @func_13156() -> (Tensor[(160), uint64],) {
  %505 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %506 = %505.0;
  (%506,)
}

def @func_3100() -> Tensor[(7, 16, 11), float64] {
  @func_2799() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_5268() -> Tensor[(160), uint64] {
  %507 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %507.0
}

def @func_13735() -> Tensor[(160), uint64] {
  %508 = @func_8554() /* ty=(Tensor[(160), uint64],) */;
  %508.0
}

def @func_10044() -> (Tensor[(160), uint64],) {
  %509 = @func_6384() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %510 = %509.1;
  (%510,)
}

def @func_11690(%var_11675: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(9, 14, 10), float64]) {
  %511 = cast(%var_11675, dtype="float64") /* ty=Tensor[(9, 14, 10), float64] */;
  %512 = cast(%var_11675, dtype="float64") /* ty=Tensor[(9, 14, 10), float64] */;
  %513 = sinh(%511) /* ty=Tensor[(9, 14, 10), float64] */;
  %514 = log2(%512) /* ty=Tensor[(9, 14, 10), float64] */;
  (%513, %514)
}

def @func_14557(%var_14553: Tensor[(400), float64], %var_14554: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(9, 15, 13), float64], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(1232), float64]) {
  %515 = cast(%var_14553, dtype="float64") /* ty=Tensor[(400), float64] */;
  %516 = cast(%var_14554, dtype="float32") /* ty=Tensor[(192), float32] */;
  %517 = cast(meta[relay.Constant][28] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %518 = reshape(%515, newshape=[400, 1]) /* ty=Tensor[(400, 1), float64] */;
  %519 = reshape(%516, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %520 = reshape(%517, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %521 = @func_4494(%518, %519, %520) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) */;
  %522 = @func_10587() /* ty=Tensor[(160), uint64] */;
  %523 = @func_13440() /* ty=Tensor[(9, 15, 13), float64] */;
  %524 = %521.0;
  (%522, %523, %524, %var_14553, %var_14554, meta[relay.Constant][28] /* ty=Tensor[(1232), float64] */)
}

def @func_11006(%var_10986: Tensor[(264), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(264), float32], Tensor[(168, 1), float32], Tensor[(264, 4), float64], Tensor[(180), int8]) {
  %525 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %526 = cast(%var_10986, dtype="float32") /* ty=Tensor[(264), float32] */;
  %527 = cast(meta[relay.Constant][29] /* ty=Tensor[(168, 1), float32] */, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
  %528 = cast(meta[relay.Constant][30] /* ty=Tensor[(264, 4), float64] */, dtype="float64") /* ty=Tensor[(264, 4), float64] */;
  %529 = cast(meta[relay.Constant][31] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %530 = reshape(%526, newshape=[132, 2]) /* ty=Tensor[(132, 2), float32] */;
  %531 = reshape(%527, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %532 = reshape(%528, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %533 = reshape(%529, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %534 = @func_10827(%530, %531, %532, %533) /* ty=(Tensor[(160), uint64], Tensor[(180), int8], Tensor[(1232), float64], Tensor[(132, 2), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(264), float32]) */;
  %535 = %525.0;
  %536 = %534.0;
  (%535, %536, %var_10986, meta[relay.Constant][29] /* ty=Tensor[(168, 1), float32] */, meta[relay.Constant][30] /* ty=Tensor[(264, 4), float64] */, meta[relay.Constant][31] /* ty=Tensor[(180), int8] */)
}

def @func_899(%var_878: Tensor[(6, 16, 2), float32]) -> (Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) {
  %537 = cast(%var_878, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
  %538 = cast(8.15177f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %539 = reshape(%538, newshape=[]) /* ty=float64 */;
  %540 = @func_526(%539) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %541 = %540.2;
  %542 = cast(%541, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %543 = reshape(%542, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %544 = sigmoid(%537) /* ty=Tensor[(6, 16, 2), float32] */;
  %545 = @func_334(%543) /* ty=Tensor[(16, ?, 10), uint64] */;
  (%544, %541, 8.15177f64 /* ty=float64 */, %545)
}

def @func_10077() -> Tensor[(160), uint64] {
  @func_3755() /* ty=Tensor[(160), uint64] */
}

def @func_8016(%var_8006: Tensor[(5, 2, 13), int16], %var_8007: Tensor[(5, 2, 13), int16]) -> (Tensor[(5, 2, 13), int16], Tensor[(5, 2, 13), float32]) {
  %546 = cast(%var_8007, dtype="int16") /* ty=Tensor[(5, 2, 13), int16] */;
  %547 = shape_of(%var_8006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%var_8006, dtype="int16") /* ty=Tensor[(5, 2, 13), int16] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %550 = cast(%var_8006, dtype="float32") /* ty=Tensor[(5, 2, 13), float32] */;
  %551 = left_shift(%548, %549) /* ty=Tensor[(5, 2, 13), int16] */;
  %552 = log2(%550) /* ty=Tensor[(5, 2, 13), float32] */;
  (%551, %552)
}

def @func_10699() -> (Tensor[(160), uint64],) {
  %553 = @func_10110() /* ty=Tensor[(160), uint64] */;
  (%553,)
}

def @func_3232(%var_3182: Tensor[(1232), float64], %var_3186: Tensor[(7, 16, 11), int16], %var_3202: Tensor[(180), int8]) -> (Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) {
  %554 = @func_3000() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) */;
  %555 = cast(%var_3182, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %556 = reshape(%555, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %557 = @func_2398(%556) /* ty=(Tensor[(7, 16, 11), int16],) */;
  %558 = %557.0;
  %559 = cast(%var_3186, dtype="bool") /* ty=Tensor[(7, 16, 11), bool] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%558, dtype="bool") /* ty=Tensor[(7, 16, 11), bool] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %563 = cast(-4.89564f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
  %564 = cast(%var_3202, dtype="int8") /* ty=Tensor[(180), int8] */;
  %565 = reshape(%563, newshape=[]) /* ty=int8 */;
  %566 = reshape(%564, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %567 = @func_1124(%565, %566) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %568 = cast(-4.89564f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %569 = reshape(%568, newshape=[]) /* ty=float64 */;
  %570 = @func_526(%569) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %571 = cast(meta[relay.Constant][32] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %572 = cast(-4.89564f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %573 = cast(%var_3202, dtype="int8") /* ty=Tensor[(180), int8] */;
  %574 = reshape(%571, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float64] */;
  %575 = reshape(%572, newshape=[]) /* ty=float64 */;
  %576 = reshape(%573, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %577 = @func_1903(%574, %575, %576) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) */;
  %578 = %577.3;
  %579 = cast(%578, dtype="float32") /* ty=Tensor[(16, ?, 10), float32] */;
  %580 = %554.2;
  %581 = less_equal(%561, %562) /* ty=Tensor[(7, 16, 11), bool] */;
  %582 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  %583 = %567.0;
  %584 = %570.3;
  %585 = log(%579) /* ty=Tensor[(16, ?, 10), float32] */;
  (%580, %var_3182, %581, meta[relay.Constant][32] /* ty=Tensor[(1056), float64] */, -4.89564f64 /* ty=float64 */, %var_3202, %582, %583, %584, %585)
}

def @func_5940() -> (Tensor[(7, 16, 11), float64],) {
  %586 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %587 = %586.0;
  (%587,)
}

def @func_2020() -> (Tensor[(7, 16, 11), float64],) {
  %588 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 16, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %589 = acosh(%588) /* ty=Tensor[(7, 16, 11), float64] */;
  (%589,)
}

def @func_8321(%var_8259: Tensor[(5, 9, 9), float64], %var_8277: Tensor[(7, 16, 11), float64], %var_8303: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(8, 9, 16), float64], Tensor[(288, 4), float64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(5, 9, 9), bool]) {
  %590 = @func_8253() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %591 = %590.2;
  %592 = cast(%var_8277, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %596 = @func_7619() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %597 = cast(meta[relay.Constant][34] /* ty=Tensor[(288, 4), float64] */, dtype="float64") /* ty=Tensor[(288, 4), float64] */;
  %598 = reshape(%597, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), float64] */;
  %599 = cast(%var_8303, dtype="float32") /* ty=Tensor[(168), float32] */;
  %600 = reshape(%599, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %601 = @func_3046(%600) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */;
  %602 = cast(%var_8259, dtype="float64") /* ty=Tensor[(5, 9, 9), float64] */;
  %603 = sqrt(%602) /* ty=Tensor[(5, 9, 9), float64] */;
  %604 = cast(%var_8259, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %608 = floor_divide(%594, %595) /* ty=Tensor[(7, 16, 11), float64] */;
  %609 = %596.1;
  %610 = @func_2228(%598) /* ty=Tensor[(8, 9, 16), float64] */;
  %611 = %601.0;
  %612 = not_equal(%606, %607) /* ty=Tensor[(5, 9, 9), bool] */;
  (%608, %609, %610, meta[relay.Constant][34] /* ty=Tensor[(288, 4), float64] */, %611, %var_8303, %612)
}

def @func_2669(%var_2648: Tensor[(168), float32], %var_2665: Tensor[(1056), float64], %var_2666: float64, %var_2667: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), float64], float64, Tensor[(180), int8]) {
  %613 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %614 = cast(%var_2648, dtype="float32") /* ty=Tensor[(168), float32] */;
  %615 = reshape(%614, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %616 = @func_376(%615) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %617 = cast(%var_2665, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %618 = cast(%var_2666, dtype="float64") /* ty=float64 */;
  %619 = cast(%var_2667, dtype="int8") /* ty=Tensor[(180), int8] */;
  %620 = reshape(%617, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float64] */;
  %621 = reshape(%618, newshape=[]) /* ty=float64 */;
  %622 = reshape(%619, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %623 = @func_1903(%620, %621, %622) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) */;
  %624 = %613.1;
  %625 = %616.2;
  %626 = %623.4;
  (%624, %625, %var_2648, %626, %var_2665, %var_2666, %var_2667)
}

def @func_4009() -> (Tensor[(160), uint64],) {
  %627 = @func_3755() /* ty=Tensor[(160), uint64] */;
  (%627,)
}

def @func_13055() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %628 = @func_8151() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %629 = %628.0;
  %630 = @func_12074() /* ty=Tensor[(7, 16, 11), float64] */;
  %631 = @func_11917() /* ty=Tensor[(7, 16, 11), float64] */;
  (%629, %630, %631)
}

def @func_376(%var_349: Tensor[(12, 14, 1), float32]) -> (Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
  %632 = cast(%var_349, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %633 = log10(%632) /* ty=Tensor[(12, 14, 1), float32] */;
  %634 = cast(%633, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %635 = cast(meta[relay.Constant][35] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %636 = reshape(%635, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %637 = rsqrt(%634) /* ty=Tensor[(12, 14, 1), float32] */;
  %638 = @func_334(%636) /* ty=Tensor[(16, ?, 10), uint64] */;
  (%637, %638, meta[relay.Constant][35] /* ty=Tensor[(160), uint64] */)
}

def @func_12530() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %639 = @func_9368() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %640 = %639.2;
  %641 = @func_8911() /* ty=Tensor[(7, 16, 11), float64] */;
  (%640, %641)
}

def @func_9118(%var_9108: Tensor[(1872), float32]) -> (Tensor[(1152), float64], Tensor[(160), uint64], Tensor[(16, 13, 9), float32], Tensor[(1872), float32]) {
  %642 = @func_8765() /* ty=(Tensor[(1152), float64],) */;
  %643 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %644 = cast(%var_9108, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %645 = reshape(%644, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %646 = %642.0;
  %647 = %643.0;
  %648 = @func_6808(%645) /* ty=Tensor[(16, 13, 9), float32] */;
  (%646, %647, %648, %var_9108)
}

def @func_7547(%var_7502: Tensor[(192), float32], %var_7543: int8) -> (Tensor[(12, 14, 1), float32], Tensor[(192), float32], Tensor[(16), int64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(4, 9, 5), bool], Tensor[(180), int8], Tensor[(1232), float64], int8) {
  %649 = cast(%var_7502, dtype="float32") /* ty=Tensor[(192), float32] */;
  %650 = cast(meta[relay.Constant][36] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %651 = reshape(%649, newshape=[24, 8]) /* ty=Tensor[(24, 8), float32] */;
  %652 = reshape(%650, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %653 = @func_6120(%651, %652) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1, 160), uint64], Tensor[(400), float64], Tensor[(24, 8), float32], Tensor[(16), int64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(84, 2), float32]) */;
  %654 = %653.6;
  %655 = cast(%654, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %656 = reshape(%655, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %657 = @func_376(%656) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %658 = cast(meta[relay.Constant][37] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %659 = reshape(%658, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %660 = @func_2558(%659) /* ty=(Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) */;
  %661 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %662 = sin(%661) /* ty=Tensor[(4, 9, 5), float64] */;
  %663 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 9, 5), float64] */, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
  %664 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%662, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %667 = cast(meta[relay.Constant][39] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %668 = %660.4;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %670 = cast(%var_7543, dtype="int8") /* ty=int8 */;
  %671 = reshape(%667, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %672 = reshape(%669, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %673 = reshape(%670, newshape=[]) /* ty=int8 */;
  %674 = @func_3429(%671, %672, %673) /* ty=(Tensor[(400), float64], Tensor[(192), float32], Tensor[(7, 16, 11), float32], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(16, ?, 10), bool], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 5, 10), float64]) */;
  %675 = %657.2;
  %676 = greater(%665, %666) /* ty=Tensor[(4, 9, 5), bool] */;
  %677 = %674.8;
  (%654, %var_7502, meta[relay.Constant][36] /* ty=Tensor[(16), int64] */, %675, %668, meta[relay.Constant][37] /* ty=Tensor[(600), float64] */, %676, %677, meta[relay.Constant][39] /* ty=Tensor[(1232), float64] */, %var_7543)
}

def @func_526(%var_502: float64) -> (Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) {
  %678 = cast(%var_502, dtype="bool") /* ty=bool */;
  %679 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 8, 3), float64] */, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
  %680 = cast(meta[relay.Constant][41] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %681 = reshape(%680, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %682 = cast(meta[relay.Constant][41] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %683 = reshape(%682, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %684 = less_equal(%678, %679) /* ty=Tensor[(16, 8, 3), bool] */;
  %685 = @func_334(%681) /* ty=Tensor[(16, ?, 10), uint64] */;
  %686 = @func_334(%683) /* ty=Tensor[(16, ?, 10), uint64] */;
  (%684, %685, meta[relay.Constant][41] /* ty=Tensor[(160), uint64] */, %686)
}

def @func_6933() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %687 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %688 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %689 = %687.0;
  (%688, %689)
}

def @func_5666() -> Tensor[(7, 16, 11), float64] {
  %690 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %690.0
}

def @func_8151() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %691 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %692 = @func_3949() /* ty=(Tensor[(160), uint64],) */;
  %693 = %691.0;
  %694 = %692.0;
  (%693, %694)
}

def @func_13355() -> (Tensor[(160), uint64],) {
  %695 = @func_12693() /* ty=(Tensor[(160), uint64],) */;
  %696 = %695.0;
  (%696,)
}

def @func_9644(%var_9627: Tensor[(400), float64], %var_9628: Tensor[(192), float32], %var_9629: Tensor[(16), int64]) -> (Tensor[(160), uint64], float64, Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64], Tensor[(24, 48), float64], Tensor[(1152), float64]) {
  %697 = cast(%var_9627, dtype="float64") /* ty=Tensor[(400), float64] */;
  %698 = cast(%var_9628, dtype="float32") /* ty=Tensor[(192), float32] */;
  %699 = cast(%var_9629, dtype="int64") /* ty=Tensor[(16), int64] */;
  %700 = reshape(%697, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %701 = reshape(%698, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %702 = reshape(%699, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %703 = @func_2196(%700, %701, %702) /* ty=(Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) */;
  %704 = cast(meta[relay.Constant][42] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %705 = reshape(%704, newshape=[24, 48]) /* ty=Tensor[(24, 48), float64] */;
  %706 = @func_5595(%705) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) */;
  %707 = @func_8582() /* ty=Tensor[(160), uint64] */;
  %708 = %703.3;
  %709 = %706.2;
  (%707, %708, %var_9627, %var_9628, %var_9629, %709, meta[relay.Constant][42] /* ty=Tensor[(1152), float64] */)
}

def @func_6332(%var_6247: Tensor[(7, 16, 11), float64], %var_6313: Tensor[(180), int8], %var_6323: Tensor[(60, 10), float64]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), int16], Tensor[(7, 16, 11), float32], Tensor[(7, 16, 11), float64], Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(60, 10), float64]) {
  %710 = @func_3496() /* ty=(Tensor[(160), uint64],) */;
  %711 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %712 = %711.0;
  %713 = cast(%var_6247, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%712, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %717 = @func_5940() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %718 = %717.0;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %720 = sin(%719) /* ty=Tensor[(7, 16, 11), float32] */;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %722 = atanh(%721) /* ty=Tensor[(7, 16, 11), float64] */;
  %723 = cast(%722, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %724 = cast(%722, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %725 = bitwise_and(%715, %716) /* ty=Tensor[(7, 16, 11), int16] */;
  %726 = cast(%725, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %727 = cast(%var_6313, dtype="int8") /* ty=Tensor[(180), int8] */;
  %728 = reshape(%724, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %729 = reshape(%726, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %730 = reshape(%727, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %731 = @func_4274(%728, %729, %730) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(600), float64], Tensor[(7, 16, 11), bool], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64]) */;
  %732 = cast(%var_6323, dtype="float64") /* ty=Tensor[(60, 10), float64] */;
  %733 = reshape(%732, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %734 = @func_2558(%733) /* ty=(Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) */;
  %735 = %710.0;
  %736 = acos(%723) /* ty=Tensor[(7, 16, 11), float32] */;
  %737 = %731.2;
  %738 = %734.1;
  (%735, %725, %736, %737, %var_6313, %738, %var_6323)
}

def @func_7022(%var_6975: Tensor[(15, 7, 1), int8], %var_6976: Tensor[(15, 7, 12), int8], %var_7011: Tensor[(1440), uint64]) -> (Tensor[(9, 16, 10), uint64], Tensor[(1440), uint64], Tensor[(160), uint64], Tensor[(15, 7, 12), float64], Tensor[(168), float32]) {
  %739 = cast(%var_7011, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
  %740 = reshape(%739, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), uint64] */;
  %741 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %742 = cast(%var_6975, dtype="int8") /* ty=Tensor[(15, 7, 1), int8] */;
  %743 = cast(%var_6976, dtype="int8") /* ty=Tensor[(15, 7, 12), int8] */;
  %744 = left_shift(%742, %743) /* ty=Tensor[(15, 7, 12), int8] */;
  %745 = cast(%744, dtype="int8") /* ty=Tensor[(15, 7, 12), int8] */;
  %746 = cast(%var_6975, dtype="int8") /* ty=Tensor[(15, 7, 1), int8] */;
  %747 = bitwise_or(%745, %746) /* ty=Tensor[(15, 7, 12), int8] */;
  %748 = cast(%747, dtype="float64") /* ty=Tensor[(15, 7, 12), float64] */;
  %749 = @func_5255() /* ty=(Tensor[(168), float32],) */;
  %750 = @func_6581(%740) /* ty=Tensor[(9, 16, 10), uint64] */;
  %751 = %741.1;
  %752 = erf(%748) /* ty=Tensor[(15, 7, 12), float64] */;
  %753 = %749.0;
  (%750, %var_7011, %751, %752, %753)
}

def @func_4981() -> Tensor[(160), uint64] {
  %754 = @func_3496() /* ty=(Tensor[(160), uint64],) */;
  %754.0
}

def @func_11499() -> (Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) {
  %755 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
  %756 = @func_5940() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %757 = %755.2;
  %758 = %756.0;
  (%757, %758)
}

def @func_15128() -> (Tensor[(160), uint64], Tensor[(9, 14, 10), float64]) {
  %759 = @func_14685() /* ty=(Tensor[(160), uint64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) */;
  %760 = @func_5268() /* ty=Tensor[(160), uint64] */;
  %761 = %759.1;
  (%760, %761)
}

def @func_12463() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(192), float32]) {
  %762 = cast(meta[relay.Constant][43] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %763 = reshape(%762, newshape=[6, 16, 2]) /* ty=Tensor[(6, 16, 2), float32] */;
  %764 = @func_899(%763) /* ty=(Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) */;
  %765 = @func_5666() /* ty=Tensor[(7, 16, 11), float64] */;
  %766 = %764.1;
  (%765, %766, meta[relay.Constant][43] /* ty=Tensor[(192), float32] */)
}

def @func_8424() -> (Tensor[(7, 16, 11), float64],) {
  %767 = @func_2693() /* ty=Tensor[(7, 16, 11), float64] */;
  (%767,)
}

def @func_4274(%var_4231: Tensor[(7, 16, 11), float64], %var_4244: Tensor[(7, 16, 11), float64], %var_4251: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(600), float64], Tensor[(7, 16, 11), bool], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64]) {
  %768 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %769 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
  %770 = cast(%var_4231, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%769, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %774 = cast(meta[relay.Constant][44] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %775 = reshape(%774, newshape=[2, 300]) /* ty=Tensor[(2, 300), float64] */;
  %776 = @func_3914(%775) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(2, 300), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(160), uint64]) */;
  %777 = cast(%var_4244, dtype="bool") /* ty=Tensor[(7, 16, 11), bool] */;
  %778 = shape_of(%var_4231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%var_4231, dtype="bool") /* ty=Tensor[(7, 16, 11), bool] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %781 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %782 = cast(%781, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %783 = cast(%var_4231, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
  %784 = cast(%var_4251, dtype="int8") /* ty=Tensor[(180), int8] */;
  %785 = reshape(%782, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %786 = reshape(%783, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), int16] */;
  %787 = reshape(%784, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %788 = @func_3232(%785, %786, %787) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */;
  %789 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %790 = %768.0;
  %791 = minimum(%772, %773) /* ty=Tensor[(7, 16, 11), float64] */;
  %792 = %776.7;
  %793 = greater(%779, %780) /* ty=Tensor[(7, 16, 11), bool] */;
  %794 = %788.4;
  %795 = %789.0;
  (%781, %790, %791, %792, meta[relay.Constant][44] /* ty=Tensor[(600), float64] */, %793, %794, %var_4251, %795)
}

def @func_13683() -> (Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8]) {
  %796 = @func_8765() /* ty=(Tensor[(1152), float64],) */;
  %797 = cast(meta[relay.Constant][45] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %798 = cast(meta[relay.Constant][45] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %799 = cast(meta[relay.Constant][46] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %800 = cast(meta[relay.Constant][47] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %801 = cast(meta[relay.Constant][48] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %802 = cast(meta[relay.Constant][45] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %803 = reshape(%797, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %804 = reshape(%798, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %805 = reshape(%799, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %806 = reshape(%800, newshape=[88, 12]) /* ty=Tensor[(88, 12), float64] */;
  %807 = reshape(%801, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %808 = reshape(%802, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %809 = @func_3531(%803, %804, %805, %806, %807, %808) /* ty=(Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) */;
  %810 = @func_11545() /* ty=Tensor[(160), uint64] */;
  %811 = %796.0;
  %812 = %809.0;
  (%810, %811, %812, meta[relay.Constant][45] /* ty=Tensor[(264), float32] */, meta[relay.Constant][46] /* ty=Tensor[(168), float32] */, meta[relay.Constant][47] /* ty=Tensor[(1056), float64] */, meta[relay.Constant][48] /* ty=Tensor[(180), int8] */)
}

def @func_5318() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) {
  %813 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %814 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %815 = %814.1;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %817 = reshape(%816, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %818 = @func_2744(%817) /* ty=(Tensor[(16, 16, 12), int16], Tensor[(3072), int16], Tensor[(7, 16, 11), uint64]) */;
  %819 = %813.1;
  %820 = %818.2;
  (%819, %815, %820)
}

def @func_7406() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %821 = @func_6384() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %822 = @func_7049() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %823 = %821.1;
  %824 = %822.1;
  (%823, %824)
}

def @func_7030() -> (Tensor[(7, 16, 11), float64],) {
  %825 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  (%825,)
}

def @func_4328() -> (Tensor[(7, 16, 11), float64],) {
  %826 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  (%826,)
}

def @func_7957() -> Tensor[(160), uint64] {
  %827 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %827.0
}

def @func_3496() -> (Tensor[(160), uint64],) {
  %828 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
  %829 = %828.0;
  (%829,)
}

def @func_12966(%var_12934: Tensor[(9, 7, 4), float32]) -> (Tensor[(2, 7, 16), float64], uint16, Tensor[(112, 2), uint16], Tensor[(9, 7, 4), float32]) {
  %830 = cast(meta[relay.Constant][49] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %831 = cast(meta[relay.Constant][50] /* ty=Tensor[(112, 2), uint16] */, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
  %832 = reshape(%830, newshape=[]) /* ty=uint16 */;
  %833 = reshape(%831, newshape=[2, 7, 16]) /* ty=Tensor[(2, 7, 16), uint16] */;
  %834 = cast(%var_12934, dtype="float32") /* ty=Tensor[(9, 7, 4), float32] */;
  %835 = acos(%834) /* ty=Tensor[(9, 7, 4), float32] */;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(9, 7, 4), float32] */;
  %837 = shape_of(%var_12934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%var_12934, dtype="float32") /* ty=Tensor[(9, 7, 4), float32] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %840 = mod(%838, %839) /* ty=Tensor[(9, 7, 4), float32] */;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(9, 7, 4), float32] */;
  %842 = @func_3333(%832, %833) /* ty=Tensor[(2, 7, 16), float64] */;
  %843 = rsqrt(%841) /* ty=Tensor[(9, 7, 4), float32] */;
  (%842, meta[relay.Constant][49] /* ty=uint16 */, meta[relay.Constant][50] /* ty=Tensor[(112, 2), uint16] */, %843)
}

def @func_5852(%var_5795: Tensor[(400), float64], %var_5796: Tensor[(4, 48), float32], %var_5843: Tensor[(4, 48), float64]) -> (Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) {
  %844 = @func_5255() /* ty=(Tensor[(168), float32],) */;
  %845 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %846 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %847 = cast(%var_5796, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %848 = reshape(%847, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %849 = @func_2620(%848) /* ty=(Tensor[(160), uint64], Tensor[(6, 16, 2), float32], Tensor[(192), float32]) */;
  %850 = cast(%var_5795, dtype="float64") /* ty=Tensor[(400), float64] */;
  %851 = cast(%var_5796, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %852 = %845.2;
  %853 = cast(%852, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %854 = reshape(%850, newshape=[400, 1]) /* ty=Tensor[(400, 1), float64] */;
  %855 = reshape(%851, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %856 = reshape(%853, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %857 = @func_4494(%854, %855, %856) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) */;
  %858 = %857.2;
  %859 = cast(%858, dtype="float32") /* ty=Tensor[(400, 1), float32] */;
  %860 = cast(%var_5796, dtype="float64") /* ty=Tensor[(4, 48), float64] */;
  %861 = log(%860) /* ty=Tensor[(4, 48), float64] */;
  %862 = cast(%var_5843, dtype="bool") /* ty=Tensor[(4, 48), bool] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(2), int32] */;
  %864 = cast(%861, dtype="bool") /* ty=Tensor[(4, 48), bool] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %866 = %844.0;
  %867 = %846.2;
  %868 = %849.0;
  %869 = sigmoid(%859) /* ty=Tensor[(400, 1), float32] */;
  %870 = not_equal(%864, %865) /* ty=Tensor[(4, 48), bool] */;
  %871 = @func_5268() /* ty=Tensor[(160), uint64] */;
  (%866, %852, %var_5795, %867, %868, %869, %870, %871)
}

def @func_15606() -> Tensor[(160), uint64] {
  %872 = @func_9368() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %872.0
}

def @func_9950() -> Tensor[(160), uint64] {
  %873 = @func_9467() /* ty=(Tensor[(160), uint64],) */;
  %873.0
}

def @func_1124(%var_1118: int8, %var_1119: Tensor[(3, 10, 6), int8]) -> (Tensor[(3, 10, 6), int8],) {
  %874 = cast(%var_1118, dtype="int8") /* ty=int8 */;
  %875 = cast(%var_1119, dtype="int8") /* ty=Tensor[(3, 10, 6), int8] */;
  %876 = maximum(%874, %875) /* ty=Tensor[(3, 10, 6), int8] */;
  (%876,)
}

def @func_5169() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %877 = @func_3949() /* ty=(Tensor[(160), uint64],) */;
  %878 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %879 = %877.0;
  %880 = @func_3755() /* ty=Tensor[(160), uint64] */;
  %881 = %878.0;
  (%879, %880, %881)
}

def @func_5415(%var_5406: Tensor[(8, 132), float64], %var_5407: Tensor[(30, 6), int8]) -> (Tensor[(160), uint64], float64, Tensor[(2560), uint64], Tensor[(168), float32], Tensor[(180), int8], Tensor[(8, 132), float64], Tensor[(30, 6), int8]) {
  %882 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %883 = cast(meta[relay.Constant][51] /* ty=Tensor[(2560), uint64] */, dtype="uint64") /* ty=Tensor[(2560), uint64] */;
  %884 = reshape(%883, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), uint64] */;
  %885 = @func_3617(%884) /* ty=(Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) */;
  %886 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %887 = cast(%var_5406, dtype="float64") /* ty=Tensor[(8, 132), float64] */;
  %888 = %885.1;
  %889 = cast(%888, dtype="float64") /* ty=float64 */;
  %890 = cast(%var_5407, dtype="int8") /* ty=Tensor[(30, 6), int8] */;
  %891 = reshape(%887, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float64] */;
  %892 = reshape(%889, newshape=[]) /* ty=float64 */;
  %893 = reshape(%890, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %894 = @func_1903(%891, %892, %893) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) */;
  %895 = %882.1;
  %896 = %886.0;
  %897 = %894.2;
  (%895, %888, meta[relay.Constant][51] /* ty=Tensor[(2560), uint64] */, %896, %897, %var_5406, %var_5407)
}

def @func_6898(%var_6867: Tensor[(400), float64], %var_6868: Tensor[(48, 4), float32]) -> (Tensor[(7, 16, 11), uint64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(400), float64], Tensor[(48, 4), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) {
  %898 = cast(meta[relay.Constant][52] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %899 = reshape(%898, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %900 = cast(%var_6867, dtype="float64") /* ty=Tensor[(400), float64] */;
  %901 = cast(%var_6868, dtype="float32") /* ty=Tensor[(48, 4), float32] */;
  %902 = cast(%var_6868, dtype="float64") /* ty=Tensor[(48, 4), float64] */;
  %903 = reshape(%900, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %904 = reshape(%901, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %905 = reshape(%902, newshape=[4, 48]) /* ty=Tensor[(4, 48), float64] */;
  %906 = @func_5852(%903, %904, %905) /* ty=(Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) */;
  %907 = cast(meta[relay.Constant][53] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %908 = reshape(%907, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), float64] */;
  %909 = @func_6415() /* ty=Tensor[(7, 16, 11), uint64] */;
  %910 = @func_334(%899) /* ty=Tensor[(16, ?, 10), uint64] */;
  %911 = %906.5;
  %912 = @func_2228(%908) /* ty=Tensor[(8, 9, 16), float64] */;
  (%909, %910, meta[relay.Constant][52] /* ty=Tensor[(160), uint64] */, %911, %var_6867, %var_6868, %912, meta[relay.Constant][53] /* ty=Tensor[(1152), float64] */)
}

def @func_8108(%var_8040: uint8, %var_8055: Tensor[(3, 2, 12), uint8], %var_8099: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(6, ?, 12), bool], Tensor[(3, 2, 12), bool], Tensor[(1440), uint64], Tensor[(105), int8], Tensor[(1260), int8], Tensor[(720, 2), uint64], Tensor[(3072), int16], Tensor[(7, 16, 11), float64], Tensor[(180), int8]) {
  %913 = cast(%var_8040, dtype="bool") /* ty=bool */;
  %914 = cast(meta[relay.Constant][54] /* ty=Tensor[(6, 1, 12), uint8] */, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
  %915 = equal(%913, %914) /* ty=Tensor[(6, 1, 12), bool] */;
  %916 = cast(meta[relay.Constant][54] /* ty=Tensor[(6, 1, 12), uint8] */, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
  %917 = cast(%var_8040, dtype="bool") /* ty=bool */;
  %918 = not_equal(%916, %917) /* ty=Tensor[(6, 1, 12), bool] */;
  %919 = cast(%918, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
  %920 = shape_of(%915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%915, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %923 = cast(%var_8040, dtype="bool") /* ty=bool */;
  %924 = cast(%var_8055, dtype="bool") /* ty=Tensor[(3, 2, 12), bool] */;
  %925 = logical_or(%923, %924) /* ty=Tensor[(3, 2, 12), bool] */;
  %926 = cast(%925, dtype="bool") /* ty=Tensor[(3, 2, 12), bool] */;
  %927 = cast(%var_8040, dtype="bool") /* ty=bool */;
  %928 = cast(meta[relay.Constant][55] /* ty=Tensor[(105), int8] */, dtype="int8") /* ty=Tensor[(105), int8] */;
  %929 = cast(meta[relay.Constant][56] /* ty=Tensor[(1260), int8] */, dtype="int8") /* ty=Tensor[(1260), int8] */;
  %930 = cast(meta[relay.Constant][57] /* ty=Tensor[(720, 2), uint64] */, dtype="uint64") /* ty=Tensor[(720, 2), uint64] */;
  %931 = reshape(%928, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), int8] */;
  %932 = reshape(%929, newshape=[15, 7, 12]) /* ty=Tensor[(15, 7, 12), int8] */;
  %933 = reshape(%930, newshape=[1440]) /* ty=Tensor[(1440), uint64] */;
  %934 = @func_7022(%931, %932, %933) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(1440), uint64], Tensor[(160), uint64], Tensor[(15, 7, 12), float64], Tensor[(168), float32]) */;
  %935 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  %936 = cast(%935, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %937 = reshape(%936, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %938 = @func_2744(%937) /* ty=(Tensor[(16, 16, 12), int16], Tensor[(3072), int16], Tensor[(7, 16, 11), uint64]) */;
  %939 = cast(%var_8099, dtype="int8") /* ty=Tensor[(180), int8] */;
  %940 = reshape(%939, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %941 = @func_4724(%940) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) */;
  %942 = less_equal(%921, %922) /* ty=Tensor[(6, ?, 12), bool] */;
  %943 = not_equal(%926, %927) /* ty=Tensor[(3, 2, 12), bool] */;
  %944 = %934.1;
  %945 = %938.1;
  %946 = %941.0;
  (%935, %942, %943, %944, meta[relay.Constant][55] /* ty=Tensor[(105), int8] */, meta[relay.Constant][56] /* ty=Tensor[(1260), int8] */, meta[relay.Constant][57] /* ty=Tensor[(720, 2), uint64] */, %945, %946, %var_8099)
}

def @func_11455() -> (Tensor[(7, 16, 11), float64],) {
  %947 = @func_7406() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %948 = %947.1;
  (%948,)
}

def @func_7315(%var_7300: Tensor[(2, 8, 6), uint32], %var_7301: Tensor[(2, 8, 6), uint32]) -> (Tensor[(2, 8, 6), uint32],) {
  %949 = cast(%var_7301, dtype="uint32") /* ty=Tensor[(2, 8, 6), uint32] */;
  %950 = shape_of(%var_7300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%var_7300, dtype="uint32") /* ty=Tensor[(2, 8, 6), uint32] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %953 = minimum(%951, %952) /* ty=Tensor[(2, 8, 6), uint32] */;
  (%953,)
}

def @func_10728() -> (Tensor[(7, 16, 11), float64],) {
  %954 = @func_9514() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32]) */;
  %955 = %954.0;
  (%955,)
}

def @func_14032(%var_13981: Tensor[(70), int8], %var_13982: Tensor[(350), int8], %var_14012: int64, %var_14014: Tensor[(160), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(5, 10, 7), int8], Tensor[(70), int8], Tensor[(350), int8], Tensor[(16, ?, 10), uint64], int64, Tensor[(16), int64], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %956 = @func_7217() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(160, 1), uint64]) */;
  %957 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %958 = cast(%var_13981, dtype="int8") /* ty=Tensor[(70), int8] */;
  %959 = cast(%var_13982, dtype="int8") /* ty=Tensor[(350), int8] */;
  %960 = reshape(%958, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), int8] */;
  %961 = reshape(%959, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), int8] */;
  %962 = @func_10902(%960, %961) /* ty=(Tensor[(5, 10, 7), int8],) */;
  %963 = cast(%var_14012, dtype="int64") /* ty=int64 */;
  %964 = cast(meta[relay.Constant][58] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %965 = cast(%var_14014, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %966 = reshape(%963, newshape=[]) /* ty=int64 */;
  %967 = reshape(%964, newshape=[1, 16]) /* ty=Tensor[(1, 16), int64] */;
  %968 = reshape(%965, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %969 = @func_1596(%966, %967, %968) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %970 = @func_12693() /* ty=(Tensor[(160), uint64],) */;
  %971 = %956.0;
  %972 = %957.0;
  %973 = %962.0;
  %974 = %969.1;
  %975 = %970.0;
  (%971, %972, %973, %var_13981, %var_13982, %974, %var_14012, meta[relay.Constant][58] /* ty=Tensor[(16), int64] */, %var_14014, %975)
}

def @func_4494(%var_4467: Tensor[(400, 1), float64], %var_4468: Tensor[(192), float32], %var_4483: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) {
  %976 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %977 = cast(%var_4467, dtype="float64") /* ty=Tensor[(400, 1), float64] */;
  %978 = cast(%var_4468, dtype="float32") /* ty=Tensor[(192), float32] */;
  %979 = reshape(%977, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %980 = reshape(%978, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %981 = @func_3081(%979, %980) /* ty=(Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) */;
  %982 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
  %983 = cast(%var_4483, dtype="uint64") /* ty=Tensor[(7, 16, 11), uint64] */;
  %984 = shape_of(%982, dtype="int32") /* ty=Tensor[(3), int32] */;
  %985 = cast(%982, dtype="uint64") /* ty=Tensor[(7, 16, 11), uint64] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %987 = %976.0;
  %988 = %981.3;
  %989 = maximum(%985, %986) /* ty=Tensor[(7, 16, 11), uint64] */;
  (%987, %988, %var_4467, %var_4468, %989)
}

def @func_11196() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64]) {
  %990 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %991 = @func_9125() /* ty=(Tensor[(160), uint64],) */;
  %992 = @func_10077() /* ty=Tensor[(160), uint64] */;
  %993 = %990.0;
  %994 = %991.0;
  (%992, %993, %994)
}

def @func_5915(%var_5913: Tensor[(24, 8), float32]) -> (Tensor[(160), uint64], Tensor[(4, 48), bool], Tensor[(400), float64], Tensor[(24, 8), float32]) {
  %995 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %996 = cast(meta[relay.Constant][59] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %997 = cast(%var_5913, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %998 = cast(%var_5913, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %999 = reshape(%996, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1000 = reshape(%997, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %1001 = reshape(%998, newshape=[4, 48]) /* ty=Tensor[(4, 48), float64] */;
  %1002 = @func_5852(%999, %1000, %1001) /* ty=(Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) */;
  %1003 = %995.0;
  %1004 = %1002.6;
  (%1003, %1004, meta[relay.Constant][59] /* ty=Tensor[(400), float64] */, %var_5913)
}

def @func_11884() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1005 = @func_6933() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %1006 = @func_10044() /* ty=(Tensor[(160), uint64],) */;
  %1007 = @func_3949() /* ty=(Tensor[(160), uint64],) */;
  %1008 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
  %1009 = %1005.0;
  %1010 = %1006.0;
  %1011 = @func_11545() /* ty=Tensor[(160), uint64] */;
  %1012 = %1007.0;
  %1013 = %1008.0;
  (%1009, %1010, %1011, %1012, %1013)
}

def @func_15283() -> (Tensor[(160), uint64],) {
  %1014 = @func_12572() /* ty=(Tensor[(160), uint64],) */;
  %1015 = %1014.0;
  (%1015,)
}

def @func_6002(%var_5996: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(4, 308), float64], Tensor[(180), int8]) {
  %1016 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1017 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 308), float64] */, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
  %1018 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 308), float64] */, dtype="int16") /* ty=Tensor[(4, 308), int16] */;
  %1019 = cast(%var_5996, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1020 = reshape(%1017, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %1021 = reshape(%1018, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), int16] */;
  %1022 = reshape(%1019, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %1023 = @func_3232(%1020, %1021, %1022) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */;
  %1024 = %1016.0;
  %1025 = %1023.6;
  (%1024, %1025, meta[relay.Constant][60] /* ty=Tensor[(4, 308), float64] */, %var_5996)
}

def @func_8692(%var_8648: Tensor[(1056), float64]) -> (Tensor[(160), uint64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(3, 60), int8], Tensor[(7, 16, 11), float64], Tensor[(1152), float64], Tensor[(16, ?, 10), uint64]) {
  %1026 = @func_8554() /* ty=(Tensor[(160), uint64],) */;
  %1027 = cast(meta[relay.Constant][61] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1028 = cast(meta[relay.Constant][61] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1029 = cast(meta[relay.Constant][62] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1030 = cast(%var_8648, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %1031 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 60), int8] */, dtype="int8") /* ty=Tensor[(3, 60), int8] */;
  %1032 = cast(meta[relay.Constant][61] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1033 = reshape(%1027, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %1034 = reshape(%1028, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %1035 = reshape(%1029, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1036 = reshape(%1030, newshape=[88, 12]) /* ty=Tensor[(88, 12), float64] */;
  %1037 = reshape(%1031, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %1038 = reshape(%1032, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %1039 = @func_3531(%1033, %1034, %1035, %1036, %1037, %1038) /* ty=(Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) */;
  %1040 = cast(meta[relay.Constant][64] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %1041 = reshape(%1040, newshape=[24, 48]) /* ty=Tensor[(24, 48), float64] */;
  %1042 = @func_5595(%1041) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) */;
  %1043 = cast(meta[relay.Constant][62] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1044 = reshape(%1043, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1045 = @func_1542(%1044) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1046 = %1026.0;
  %1047 = %1039.0;
  %1048 = %1042.0;
  %1049 = %1045.1;
  (%1046, %1047, meta[relay.Constant][61] /* ty=Tensor[(264), float32] */, meta[relay.Constant][62] /* ty=Tensor[(168), float32] */, %var_8648, meta[relay.Constant][63] /* ty=Tensor[(3, 60), int8] */, %1048, meta[relay.Constant][64] /* ty=Tensor[(1152), float64] */, %1049)
}

def @func_2906() -> (Tensor[(160), uint64],) {
  %1050 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_8911() -> Tensor[(7, 16, 11), float64] {
  @func_2799() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_2488() -> (Tensor[(168), float32], Tensor[(160), uint64]) {
  %1052 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1053 = %1052.2;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1055 = reshape(%1054, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %1056 = @func_376(%1055) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1057 = %1056.2;
  (%1053, %1057)
}

def @func_12259() -> (Tensor[(160), uint64],) {
  %1058 = @func_10118() /* ty=Tensor[(160), uint64] */;
  (%1058,)
}

def @func_13464(%var_13442: Tensor[(13, 16, 12), float32]) -> (Tensor[(13, 16, 12), float32],) {
  %1059 = cast(%var_13442, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
  %1060 = cosh(%1059) /* ty=Tensor[(13, 16, 12), float32] */;
  (%1060,)
}

def @func_14370(%var_14361: Tensor[(600), float64]) -> (Tensor[(7, 16, 11), float32], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(600), float64]) {
  %1061 = @func_9285() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) */;
  %1062 = cast(%var_14361, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1063 = reshape(%1062, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %1064 = %1061.1;
  %1065 = @func_9950() /* ty=Tensor[(160), uint64] */;
  %1066 = @func_1012(%1063) /* ty=Tensor[(12, 5, 10), float64] */;
  (%1064, %1065, %1066, %var_14361)
}

def @func_12711() -> Tensor[(160), uint64] {
  @func_4981() /* ty=Tensor[(160), uint64] */
}

def @func_3429(%var_3377: Tensor[(7, 16, 11), float64], %var_3417: Tensor[(600), float64], %var_3424: int8) -> (Tensor[(400), float64], Tensor[(192), float32], Tensor[(7, 16, 11), float32], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(16, ?, 10), bool], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 5, 10), float64]) {
  %1067 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1068 = %1067.0;
  %1069 = cast(%var_3377, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %1070 = shape_of(%1068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1071 = cast(%1068, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1073 = cast(%var_3417, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1074 = reshape(%1073, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %1075 = cast(meta[relay.Constant][65] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1076 = cast(meta[relay.Constant][66] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1077 = reshape(%1075, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1078 = reshape(%1076, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1079 = @func_3081(%1077, %1078) /* ty=(Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) */;
  %1080 = %1079.1;
  %1081 = cast(%1080, dtype="float64") /* ty=Tensor[(16, ?, 10), float64] */;
  %1082 = atanh(%1081) /* ty=Tensor[(16, ?, 10), float64] */;
  %1083 = cast(%1080, dtype="bool") /* ty=Tensor[(16, ?, 10), bool] */;
  %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%1082, dtype="bool") /* ty=Tensor[(16, ?, 10), bool] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1087 = cast(%var_3424, dtype="int8") /* ty=int8 */;
  %1088 = cast(meta[relay.Constant][67] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1089 = reshape(%1087, newshape=[]) /* ty=int8 */;
  %1090 = reshape(%1088, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %1091 = @func_1124(%1089, %1090) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %1092 = cast(%var_3417, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1093 = reshape(%1092, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %1094 = divide(%1071, %1072) /* ty=Tensor[(7, 16, 11), float32] */;
  %1095 = @func_1012(%1074) /* ty=Tensor[(12, 5, 10), float64] */;
  %1096 = logical_or(%1085, %1086) /* ty=Tensor[(16, ?, 10), bool] */;
  %1097 = %1091.0;
  %1098 = @func_1012(%1093) /* ty=Tensor[(12, 5, 10), float64] */;
  (meta[relay.Constant][65] /* ty=Tensor[(400), float64] */, meta[relay.Constant][66] /* ty=Tensor[(192), float32] */, %1094, %1095, %var_3417, %1096, %1097, %var_3424, meta[relay.Constant][67] /* ty=Tensor[(180), int8] */, %1098)
}

def @func_9153() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1099 = @func_8151() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1100 = %1099.1;
  %1101 = @func_5207() /* ty=Tensor[(160), uint64] */;
  (%1100, %1101)
}

def @func_4992() -> Tensor[(7, 16, 11), float64] {
  @func_2693() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_3333(%var_3324: uint16, %var_3325: Tensor[(2, 7, 16), uint16]) -> Tensor[(2, 7, 16), float64] {
  %1102 = cast(%var_3324, dtype="bool") /* ty=bool */;
  %1103 = cast(%var_3325, dtype="bool") /* ty=Tensor[(2, 7, 16), bool] */;
  %1104 = greater_equal(%1102, %1103) /* ty=Tensor[(2, 7, 16), bool] */;
  %1105 = cast(%1104, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  log2(%1105) /* ty=Tensor[(2, 7, 16), float64] */
}

def @func_2744(%var_2713: Tensor[(7, 16, 11), float64]) -> (Tensor[(16, 16, 12), int16], Tensor[(3072), int16], Tensor[(7, 16, 11), uint64]) {
  %1106 = cast(meta[relay.Constant][68] /* ty=Tensor[(3072), int16] */, dtype="int16") /* ty=Tensor[(3072), int16] */;
  %1107 = cast(meta[relay.Constant][68] /* ty=Tensor[(3072), int16] */, dtype="int16") /* ty=Tensor[(3072), int16] */;
  %1108 = reshape(%1106, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), int16] */;
  %1109 = reshape(%1107, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), int16] */;
  %1110 = @func_1690(%1108, %1109) /* ty=(Tensor[(16, 16, 12), int16],) */;
  %1111 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1112 = %1111.0;
  %1113 = cast(%var_2713, dtype="uint64") /* ty=Tensor[(7, 16, 11), uint64] */;
  %1114 = shape_of(%1112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1115 = cast(%1112, dtype="uint64") /* ty=Tensor[(7, 16, 11), uint64] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1117 = %1110.0;
  %1118 = logical_xor(%1115, %1116) /* ty=Tensor[(7, 16, 11), uint64] */;
  (%1117, meta[relay.Constant][68] /* ty=Tensor[(3072), int16] */, %1118)
}

def @func_9759() -> (Tensor[(7, 16, 11), float64], Tensor[(168), float32], Tensor[(168), float32]) {
  %1119 = @func_5255() /* ty=(Tensor[(168), float32],) */;
  %1120 = %1119.0;
  %1121 = cast(%1120, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1122 = reshape(%1121, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1123 = @func_1542(%1122) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1124 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %1125 = %1123.4;
  (%1124, %1120, %1125)
}

def @func_11917() -> Tensor[(7, 16, 11), float64] {
  @func_8512() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_12288() -> Tensor[(160), uint64] {
  @func_9597() /* ty=Tensor[(160), uint64] */
}

def @func_14799() -> (Tensor[(7, 16, 11), float64],) {
  %1126 = @func_9810() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1127 = %1126.1;
  (%1127,)
}

def @func_5742() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1128 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1129 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1130 = %1128.0;
  %1131 = %1129.0;
  (%1130, %1131)
}

def @func_8728() -> (Tensor[(160), uint64],) {
  %1132 = @func_8554() /* ty=(Tensor[(160), uint64],) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_5626() -> (Tensor[(7, 16, 11), uint64],) {
  %1134 = @func_5318() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) */;
  %1135 = %1134.2;
  (%1135,)
}

def @func_15896(%var_15891: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), bool], Tensor[(1232), float64], Tensor[(180), int8]) {
  %1136 = @func_15020() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1137 = cast(meta[relay.Constant][69] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1138 = cast(meta[relay.Constant][69] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1139 = cast(%var_15891, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1140 = reshape(%1137, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %1141 = reshape(%1138, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %1142 = reshape(%1139, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %1143 = @func_4274(%1140, %1141, %1142) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(600), float64], Tensor[(7, 16, 11), bool], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64]) */;
  %1144 = %1136.1;
  %1145 = %1143.5;
  (%1144, %1145, meta[relay.Constant][69] /* ty=Tensor[(1232), float64] */, %var_15891)
}

def @func_9597() -> Tensor[(160), uint64] {
  %1146 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
  %1146.0
}

def @func_3081(%var_3074: Tensor[(400), float64], %var_3075: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) {
  %1147 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1148 = cast(%var_3074, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1149 = cast(%var_3075, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1150 = cast(meta[relay.Constant][70] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %1151 = reshape(%1148, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %1152 = reshape(%1149, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1153 = reshape(%1150, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %1154 = @func_2196(%1151, %1152, %1153) /* ty=(Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) */;
  %1155 = %1147.0;
  %1156 = %1154.8;
  (%1155, %1156, %var_3074, %var_3075, meta[relay.Constant][70] /* ty=Tensor[(16), int64] */)
}

def @func_1903(%var_1855: Tensor[(8, 11, 12), float64], %var_1866: float64, %var_1891: Tensor[(180), int8]) -> (Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) {
  %1157 = cast(%var_1855, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %1158 = log10(%1157) /* ty=Tensor[(8, 11, 12), float64] */;
  %1159 = cast(%var_1855, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %1160 = shape_of(%1158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1161 = cast(%1158, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1163 = cast(%var_1866, dtype="int8") /* ty=int8 */;
  %1164 = cast(%var_1891, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1165 = reshape(%1163, newshape=[]) /* ty=int8 */;
  %1166 = reshape(%1164, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %1167 = @func_1124(%1165, %1166) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %1168 = cast(%var_1866, dtype="float64") /* ty=float64 */;
  %1169 = reshape(%1168, newshape=[]) /* ty=float64 */;
  %1170 = @func_526(%1169) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %1171 = %1170.3;
  %1172 = cast(%1171, dtype="uint16") /* ty=Tensor[(16, ?, 10), uint16] */;
  %1173 = cast(%var_1866, dtype="uint16") /* ty=uint16 */;
  %1174 = cast(%1158, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
  %1175 = cast(%var_1866, dtype="bool") /* ty=bool */;
  %1176 = divide(%1161, %1162) /* ty=Tensor[(8, 11, 12), float64] */;
  %1177 = %1167.0;
  %1178 = bitwise_and(%1172, %1173) /* ty=Tensor[(16, ?, 10), uint16] */;
  %1179 = less_equal(%1174, %1175) /* ty=Tensor[(8, 11, 12), bool] */;
  (%1176, %1177, %var_1891, %1178, %1179)
}

def @func_10346(%var_10333: Tensor[(3, 14, 13), int8], %var_10334: Tensor[(3, 14, 13), int8]) -> Tensor[(3, 14, 13), int8] {
  %1180 = cast(%var_10334, dtype="int8") /* ty=Tensor[(3, 14, 13), int8] */;
  %1181 = shape_of(%var_10333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1182 = cast(%var_10333, dtype="int8") /* ty=Tensor[(3, 14, 13), int8] */;
  %1183 = dyn.reshape(%1180, %1181, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_xor(%1182, %1183) /* ty=Tensor[(3, 14, 13), int8] */
}

def @func_3531(%var_3512: Tensor[(6, 4, 11), float32], %var_3516: Tensor[(6, 4, 11), float32], %var_3522: Tensor[(168), float32], %var_3523: Tensor[(88, 12), float64], %var_3525: Tensor[(180), int8], %var_3527: Tensor[(6, 4, 11), float32]) -> (Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) {
  %1184 = cast(%var_3512, dtype="float32") /* ty=Tensor[(6, 4, 11), float32] */;
  %1185 = acosh(%1184) /* ty=Tensor[(6, 4, 11), float32] */;
  %1186 = cast(%var_3516, dtype="float32") /* ty=Tensor[(6, 4, 11), float32] */;
  %1187 = shape_of(%1185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1188 = cast(%1185, dtype="float32") /* ty=Tensor[(6, 4, 11), float32] */;
  %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1190 = cast(%var_3522, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1191 = cast(%var_3523, dtype="float64") /* ty=Tensor[(88, 12), float64] */;
  %1192 = cast(3.40362f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1193 = cast(%var_3525, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1194 = reshape(%1190, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1195 = reshape(%1191, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %1196 = reshape(%1192, newshape=[]) /* ty=float64 */;
  %1197 = reshape(%1193, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %1198 = @func_2669(%1194, %1195, %1196, %1197) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), float64], float64, Tensor[(180), int8]) */;
  %1199 = cast(%var_3527, dtype="float64") /* ty=Tensor[(6, 4, 11), float64] */;
  %1200 = shape_of(%1185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1201 = cast(%1185, dtype="float64") /* ty=Tensor[(6, 4, 11), float64] */;
  %1202 = dyn.reshape(%1199, %1200, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1203 = floor_divide(%1188, %1189) /* ty=Tensor[(6, 4, 11), float32] */;
  %1204 = %1198.4;
  %1205 = floor_mod(%1201, %1202) /* ty=Tensor[(6, 4, 11), float64] */;
  (%1203, %1204, %var_3522, %var_3523, 3.40362f64 /* ty=float64 */, %var_3525, %1205)
}

def @func_2398(%var_2371: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), int16],) {
  %1206 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1207 = %1206.0;
  %1208 = cast(%var_2371, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %1209 = shape_of(%1207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1210 = cast(%1207, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1212 = mod(%1210, %1211) /* ty=Tensor[(7, 16, 11), float64] */;
  %1213 = cast(%1212, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
  %1214 = shape_of(%var_2371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1215 = cast(%var_2371, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
  %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1217 = subtract(%1215, %1216) /* ty=Tensor[(7, 16, 11), int16] */;
  (%1217,)
}

def @func_13570() -> Tensor[(160), uint64] {
  %1218 = @func_13156() /* ty=(Tensor[(160), uint64],) */;
  %1218.0
}

def @func_15020() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1219 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %1220 = @func_14284() /* ty=Tensor[(160), uint64] */;
  %1221 = %1219.0;
  (%1220, %1221)
}

def @func_15053(%var_15045: Tensor[(64, 40), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(64, 40), uint64]) {
  %1222 = @func_6933() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %1223 = cast(%var_15045, dtype="uint64") /* ty=Tensor[(64, 40), uint64] */;
  %1224 = reshape(%1223, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), uint64] */;
  %1225 = @func_3617(%1224) /* ty=(Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) */;
  %1226 = %1222.0;
  %1227 = %1225.0;
  (%1226, %1227, %var_15045)
}

def @func_15384() -> (Tensor[(160), uint64], Tensor[(16, 13, 9), float32], Tensor[(1872), float32]) {
  %1228 = @func_9153() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1229 = cast(meta[relay.Constant][71] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %1230 = reshape(%1229, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %1231 = %1228.0;
  %1232 = @func_6808(%1230) /* ty=Tensor[(16, 13, 9), float32] */;
  (%1231, %1232, meta[relay.Constant][71] /* ty=Tensor[(1872), float32] */)
}

def @func_14149() -> (Tensor[(160), uint64],) {
  %1233 = @func_9125() /* ty=(Tensor[(160), uint64],) */;
  %1234 = %1233.0;
  (%1234,)
}

def @func_2888() -> (Tensor[(160), uint64],) {
  %1235 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1236 = %1235.0;
  (%1236,)
}

def @func_9246() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %1237 = @func_7595() /* ty=(Tensor[(160), uint64],) */;
  %1238 = %1237.0;
  %1239 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %1240 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
  (%1238, %1239, %1240)
}

def @func_11044() -> (Tensor[(160), uint64], Tensor[(192), float32], Tensor[(8, 50), float64], Tensor[(192), float32], Tensor[(1232), float64]) {
  %1241 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
  %1242 = cast(meta[relay.Constant][72] /* ty=Tensor[(8, 50), float64] */, dtype="float64") /* ty=Tensor[(8, 50), float64] */;
  %1243 = cast(meta[relay.Constant][73] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1244 = cast(meta[relay.Constant][74] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1245 = reshape(%1242, newshape=[400, 1]) /* ty=Tensor[(400, 1), float64] */;
  %1246 = reshape(%1243, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1247 = reshape(%1244, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %1248 = @func_4494(%1245, %1246, %1247) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) */;
  %1249 = %1241.0;
  %1250 = %1248.3;
  (%1249, %1250, meta[relay.Constant][72] /* ty=Tensor[(8, 50), float64] */, meta[relay.Constant][73] /* ty=Tensor[(192), float32] */, meta[relay.Constant][74] /* ty=Tensor[(1232), float64] */)
}

def @func_10118() -> Tensor[(160), uint64] {
  @func_8859() /* ty=Tensor[(160), uint64] */
}

def @func_15417() -> Tensor[(160), uint64] {
  @func_5207() /* ty=Tensor[(160), uint64] */
}

def @func_7049() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %1251 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1252 = %1251.0;
  %1253 = @func_5014() /* ty=Tensor[(7, 16, 11), float64] */;
  (%1252, %1253)
}

def @func_1177(%var_1156: Tensor[(9, 9, 4), float64], %var_1171: Tensor[(180, 1), int8]) -> (Tensor[(9, 9, 4), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180, 1), int8]) {
  %1254 = cast(%var_1156, dtype="float64") /* ty=Tensor[(9, 9, 4), float64] */;
  %1255 = cast(meta[relay.Constant][75] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1256 = cast(%var_1171, dtype="int8") /* ty=Tensor[(180, 1), int8] */;
  %1257 = reshape(%1255, newshape=[]) /* ty=int8 */;
  %1258 = reshape(%1256, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %1259 = @func_1124(%1257, %1258) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %1260 = atanh(%1254) /* ty=Tensor[(9, 9, 4), float64] */;
  %1261 = %1259.0;
  (%1260, %1261, meta[relay.Constant][75] /* ty=int8 */, %var_1171)
}

def @func_14995() -> Tensor[(1152), float64] {
  %1262 = @func_7924() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */;
  %1262.4
}

def @func_8512() -> Tensor[(7, 16, 11), float64] {
  %1263 = @func_7449() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) */;
  %1263.1
}

def @func_2351(%var_2337: Tensor[(1152), float64]) -> (Tensor[(168), float32], Tensor[(168), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) {
  %1264 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1265 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1266 = cast(%var_2337, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %1267 = reshape(%1266, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), float64] */;
  %1268 = %1264.2;
  %1269 = %1265.2;
  %1270 = @func_2228(%1267) /* ty=Tensor[(8, 9, 16), float64] */;
  (%1268, %1269, %1270, %var_2337)
}

def @func_12021(%var_12005: Tensor[(210), float64]) -> (Tensor[(160), uint64], Tensor[(14, 3, 5), float64], Tensor[(210), float64], Tensor[(400), float64], Tensor[(4, 48), float32]) {
  %1271 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %1272 = cast(%var_12005, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1273 = reshape(%1272, newshape=[14, 3, 5]) /* ty=Tensor[(14, 3, 5), float64] */;
  %1274 = @func_10159(%1273) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64]) */;
  %1275 = cast(meta[relay.Constant][76] /* ty=Tensor[(4, 48), float32] */, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %1276 = reshape(%1275, newshape=[24, 8]) /* ty=Tensor[(24, 8), float32] */;
  %1277 = @func_5915(%1276) /* ty=(Tensor[(160), uint64], Tensor[(4, 48), bool], Tensor[(400), float64], Tensor[(24, 8), float32]) */;
  %1278 = %1271.0;
  %1279 = %1274.1;
  %1280 = %1277.2;
  (%1278, %1279, %var_12005, %1280, meta[relay.Constant][76] /* ty=Tensor[(4, 48), float32] */)
}

def @func_12074() -> Tensor[(7, 16, 11), float64] {
  @func_8512() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_11789() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32]) {
  %1281 = cast(meta[relay.Constant][77] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1282 = reshape(%1281, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1283 = @func_3046(%1282) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */;
  %1284 = @func_11545() /* ty=Tensor[(160), uint64] */;
  %1285 = %1283.0;
  (%1284, %1285, meta[relay.Constant][77] /* ty=Tensor[(168), float32] */)
}

def @func_12985() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64]) {
  %1286 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1287 = %1286.0;
  %1288 = @func_10118() /* ty=Tensor[(160), uint64] */;
  (%1287, %1288)
}

def @func_9523() -> (Tensor[(160), uint64],) {
  %1289 = @func_7924() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */;
  %1290 = %1289.0;
  (%1290,)
}

def @func_7217() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(160, 1), uint64]) {
  %1291 = @func_7049() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %1292 = cast(meta[relay.Constant][78] /* ty=Tensor[(160, 1), uint64] */, dtype="uint64") /* ty=Tensor[(160, 1), uint64] */;
  %1293 = reshape(%1292, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1294 = @func_5497(%1293) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1295 = %1291.0;
  %1296 = %1294.0;
  (%1295, %1296, meta[relay.Constant][78] /* ty=Tensor[(160, 1), uint64] */)
}

def @func_1012(%var_1001: Tensor[(12, 5, 10), float64]) -> Tensor[(12, 5, 10), float64] {
  %1297 = cast(%var_1001, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  asinh(%1297) /* ty=Tensor[(12, 5, 10), float64] */
}

def @func_8554() -> (Tensor[(160), uint64],) {
  %1298 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %1299 = %1298.0;
  (%1299,)
}

def @func_3046(%var_3018: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) {
  %1300 = cast(%var_3018, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1301 = reshape(%1300, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1302 = @func_1542(%1301) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1303 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  %1304 = cast(%1303, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %1305 = %1302.3;
  %1306 = rsqrt(%1304) /* ty=Tensor[(7, 16, 11), float32] */;
  (%1305, %var_3018, %1306)
}

def @func_12163(%var_12161: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(168), float32]) {
  %1307 = cast(%var_12161, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1308 = reshape(%1307, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %1309 = @func_376(%1308) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1310 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
  %1311 = %1309.0;
  (%1310, %1311, %var_12161)
}

def @func_10886() -> (Tensor[(7, 16, 11), uint64],) {
  %1312 = @func_6415() /* ty=Tensor[(7, 16, 11), uint64] */;
  (%1312,)
}

def @func_12804() -> (Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) {
  %1313 = @func_11499() /* ty=(Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) */;
  %1314 = %1313.0;
  %1315 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  (%1314, %1315)
}

def @func_10330() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) {
  %1316 = @func_8554() /* ty=(Tensor[(160), uint64],) */;
  %1317 = cast(meta[relay.Constant][79] /* ty=Tensor[(2560), uint64] */, dtype="uint64") /* ty=Tensor[(2560), uint64] */;
  %1318 = reshape(%1317, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), uint64] */;
  %1319 = @func_3617(%1318) /* ty=(Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) */;
  %1320 = %1316.0;
  %1321 = %1319.0;
  (%1320, %1321, meta[relay.Constant][79] /* ty=Tensor[(2560), uint64] */)
}

def @func_12572() -> (Tensor[(160), uint64],) {
  %1322 = @func_5268() /* ty=Tensor[(160), uint64] */;
  (%1322,)
}

def @func_13254(%var_13248: Tensor[(14, 10, 11), float64]) -> (Tensor[(14, 10, 11), float64],) {
  %1323 = cast(%var_13248, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
  %1324 = acos(%1323) /* ty=Tensor[(14, 10, 11), float64] */;
  (%1324,)
}

def @func_15520(%var_15489: Tensor[(168, 1), float32]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32], Tensor[(168, 1), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1325 = @func_8728() /* ty=(Tensor[(160), uint64],) */;
  %1326 = cast(%var_15489, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
  %1327 = reshape(%1326, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1328 = @func_3167(%1327) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32], Tensor[(168), float32]) */;
  %1329 = %1325.0;
  %1330 = %1328.1;
  %1331 = @func_10315() /* ty=Tensor[(160), uint64] */;
  %1332 = @func_10587() /* ty=Tensor[(160), uint64] */;
  (%1329, %1330, %var_15489, %1331, %1332)
}

def @func_2845() -> (Tensor[(160), uint64],) {
  %1333 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %1334 = %1333.1;
  (%1334,)
}

def @func_13440() -> Tensor[(9, 15, 13), float64] {
  %1335 = cast(meta[relay.Constant][80] /* ty=Tensor[(9, 15, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 15, 13), float64] */;
  rsqrt(%1335) /* ty=Tensor[(9, 15, 13), float64] */
}

def @func_14899() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %1336 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1337 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1338 = %1336.0;
  %1339 = %1337.1;
  (%1338, %1339)
}

def @func_9481() -> (Tensor[(7, 16, 11), float64],) {
  %1340 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1341 = %1340.0;
  (%1341,)
}

def @func_4534() -> (Tensor[(7, 16, 11), float64],) {
  %1342 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  (%1342,)
}

def @func_8582() -> Tensor[(160), uint64] {
  %1343 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1343.0
}

def @func_11929() -> Tensor[(160), uint64] {
  %1344 = @func_9688() /* ty=(Tensor[(160), uint64],) */;
  %1344.0
}

def @func_13218(%var_13214: Tensor[(1260), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) {
  %1345 = @func_11602() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1346 = @func_12130() /* ty=(Tensor[(160), uint64],) */;
  %1347 = @func_9246() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %1348 = cast(%var_13214, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1349 = reshape(%1348, newshape=[9, 14, 10]) /* ty=Tensor[(9, 14, 10), float64] */;
  %1350 = @func_11690(%1349) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(9, 14, 10), float64]) */;
  %1351 = %1345.1;
  %1352 = %1346.0;
  %1353 = %1347.1;
  %1354 = %1350.0;
  (%1351, %1352, %1353, %1354, %var_13214)
}

def @func_13923(%var_13915: Tensor[(3, 15, 16), uint64], %var_13916: Tensor[(3, 15, 16), uint64]) -> Tensor[(3, 15, 16), bool] {
  %1355 = cast(%var_13916, dtype="bool") /* ty=Tensor[(3, 15, 16), bool] */;
  %1356 = shape_of(%var_13915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1357 = cast(%var_13915, dtype="bool") /* ty=Tensor[(3, 15, 16), bool] */;
  %1358 = dyn.reshape(%1355, %1356, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1357, %1358) /* ty=Tensor[(3, 15, 16), bool] */
}

def @func_15565(%var_15561: Tensor[(13, 12, 1), int16]) -> (Tensor[(13, 12, 1), bool],) {
  %1359 = cast(meta[relay.Constant][81] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %1360 = cast(%var_15561, dtype="bool") /* ty=Tensor[(13, 12, 1), bool] */;
  %1361 = equal(%1359, %1360) /* ty=Tensor[(13, 12, 1), bool] */;
  (%1361,)
}

def @func_6211(%var_6184: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32]) {
  %1362 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %1363 = cast(%var_6184, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1364 = reshape(%1363, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %1365 = @func_376(%1364) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1366 = @func_5207() /* ty=Tensor[(160), uint64] */;
  %1367 = @func_5207() /* ty=Tensor[(160), uint64] */;
  %1368 = %1362.0;
  %1369 = %1365.0;
  (%1366, %1367, %1368, %1369, %var_6184)
}

def @func_2958() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %1370 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %1371 = %1370.0;
  %1372 = @func_2693() /* ty=Tensor[(7, 16, 11), float64] */;
  (%1371, %1372)
}

def @func_12693() -> (Tensor[(160), uint64],) {
  %1373 = @func_10289() /* ty=(Tensor[(160), uint64],) */;
  %1374 = %1373.0;
  (%1374,)
}

def @func_7271() -> Tensor[(7, 16, 11), uint64] {
  @func_6415() /* ty=Tensor[(7, 16, 11), uint64] */
}

def @func_5207() -> Tensor[(160), uint64] {
  %1375 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %1375.0
}

def @func_7323() -> (Tensor[(168), float32],) {
  %1376 = @func_5255() /* ty=(Tensor[(168), float32],) */;
  %1377 = %1376.0;
  (%1377,)
}

def @func_3914(%var_3868: Tensor[(2, 300), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(2, 300), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(160), uint64]) {
  %1378 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
  %1379 = cast(%var_3868, dtype="float64") /* ty=Tensor[(2, 300), float64] */;
  %1380 = reshape(%1379, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %1381 = cast(meta[relay.Constant][82] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1382 = cast(meta[relay.Constant][83] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1383 = reshape(%1381, newshape=[]) /* ty=int8 */;
  %1384 = reshape(%1382, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %1385 = @func_1124(%1383, %1384) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %1386 = cast(%var_3868, dtype="float64") /* ty=Tensor[(2, 300), float64] */;
  %1387 = reshape(%1386, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %1388 = @func_2558(%1387) /* ty=(Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) */;
  %1389 = %1388.1;
  %1390 = cast(%1389, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %1391 = reshape(%1390, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1392 = @func_3046(%1391) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */;
  %1393 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  %1394 = %1378.0;
  %1395 = @func_1012(%1380) /* ty=Tensor[(12, 5, 10), float64] */;
  %1396 = %1385.0;
  %1397 = %1392.0;
  (%1393, %1394, %1395, %var_3868, %1396, meta[relay.Constant][82] /* ty=int8 */, meta[relay.Constant][83] /* ty=Tensor[(180), int8] */, %1389, %1397)
}

def @func_3755() -> Tensor[(160), uint64] {
  %1398 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
  %1398.0
}

def @func_15260() -> (Tensor[(2560), uint64], Tensor[(160), uint64]) {
  %1399 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
  %1400 = @func_9368() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1401 = %1399.2;
  %1402 = %1400.0;
  (%1401, %1402)
}

def @func_12892() -> Tensor[(7, 16, 11), float64] {
  %1403 = @func_9246() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %1403.1
}

def @func_10587() -> Tensor[(160), uint64] {
  %1404 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %1404.0
}

def @func_14828() -> (Tensor[(160), uint64],) {
  %1405 = @func_8151() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1406 = %1405.0;
  (%1406,)
}

def @func_14630() -> Tensor[(160), uint64] {
  %1407 = @func_6384() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1407.1
}

def @func_14726(%var_14709: Tensor[(1, 400), float64], %var_14710: Tensor[(192), float32]) -> (Tensor[(12, 11, 1), int16], Tensor[(7, 16, 11), float64], Tensor[(1, 400), float64], Tensor[(192), float32]) {
  %1408 = cast(meta[relay.Constant][84] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1409 = cast(meta[relay.Constant][85] /* ty=Tensor[(12, 11, 1), int16] */, dtype="int16") /* ty=Tensor[(12, 11, 1), int16] */;
  %1410 = cast(%var_14709, dtype="float64") /* ty=Tensor[(1, 400), float64] */;
  %1411 = cast(%var_14710, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1412 = cast(%var_14710, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1413 = reshape(%1410, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1414 = reshape(%1411, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %1415 = reshape(%1412, newshape=[4, 48]) /* ty=Tensor[(4, 48), float64] */;
  %1416 = @func_5852(%1413, %1414, %1415) /* ty=(Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) */;
  %1417 = add(%1408, %1409) /* ty=Tensor[(12, 11, 1), int16] */;
  %1418 = %1416.1;
  (%1417, %1418, %var_14709, %var_14710)
}

def @func_14267(%var_14223: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %1419 = @func_13355() /* ty=(Tensor[(160), uint64],) */;
  %1420 = cast(%var_14223, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1421 = reshape(%1420, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1422 = @func_3167(%1421) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32], Tensor[(168), float32]) */;
  %1423 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %1424 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1425 = %1419.0;
  %1426 = %1422.1;
  %1427 = %1423.1;
  %1428 = %1424.0;
  (%1425, %1426, %var_14223, %1427, %1428)
}

def @func_7619() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) {
  %1429 = @func_7217() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(160, 1), uint64]) */;
  %1430 = cast(meta[relay.Constant][86] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1431 = reshape(%1430, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %1432 = @func_376(%1431) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1433 = %1429.0;
  %1434 = %1432.2;
  (%1433, %1434, meta[relay.Constant][86] /* ty=Tensor[(168), float32] */)
}

def @func_15464(%var_15429: Tensor[(1152), float64]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(7, 16, 11), float64]) {
  %1435 = @func_12572() /* ty=(Tensor[(160), uint64],) */;
  %1436 = cast(meta[relay.Constant][87] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1437 = reshape(%1436, newshape=[3, 56]) /* ty=Tensor[(3, 56), float32] */;
  %1438 = @func_8136(%1437) /* ty=(Tensor[(160), uint64], Tensor[(3, 56), float32], Tensor[(12, 14, ?), uint16]) */;
  %1439 = cast(%var_15429, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %1440 = reshape(%1439, newshape=[24, 48]) /* ty=Tensor[(24, 48), float64] */;
  %1441 = @func_5595(%1440) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) */;
  %1442 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1443 = %1435.0;
  %1444 = %1438.0;
  %1445 = %1441.1;
  %1446 = %1442.0;
  (%1443, %1444, meta[relay.Constant][87] /* ty=Tensor[(168), float32] */, %1445, %var_15429, %1446)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10316() -> Tensor[(160), uint64] {
  %1 = fn () -> Tensor[(160), uint64] {
    %0 = @func_8847() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
    %0.0
  };
  %1() /* ty=Tensor[(160), uint64] */
}

def @func_10224() -> Tensor[(7, 16, 11), float64] {
  @func_10222() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_13395() -> Tensor[(160), uint64] {
  @func_13393() /* ty=Tensor[(160), uint64] */
}

def @func_8849() -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) {
  @func_8847() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */
}

def @func_11616() -> Tensor[(7, 16, 11), float64] {
  %3 = fn () -> Tensor[(7, 16, 11), float64] {
    %2 = @func_11602() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %2.1
  };
  %3() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_9759() -> (Tensor[(7, 16, 11), float64], Tensor[(168), float32], Tensor[(168), float32]) {
  %4 = @func_5255() /* ty=(Tensor[(168), float32],) */;
  %5 = %4.0;
  %6 = cast(%5, dtype="float32") /* ty=Tensor[(168), float32] */;
  %7 = reshape(%6, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %8 = @func_1542(%7) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %9 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %10 = %8.4;
  (%9, %5, %10)
}

def @func_9986() -> (Tensor[(160), uint64],) {
  %13 = fn () -> (Tensor[(160), uint64],) {
    %11 = @func_8709() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(160), uint64]) */;
    %12 = %11.1;
    (%12,)
  };
  %13() /* ty=(Tensor[(160), uint64],) */
}

def @func_7032() -> (Tensor[(7, 16, 11), float64],) {
  @func_7030() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_528(%var_527: float64) -> (Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) {
  %23 = fn (%var_502: float64) -> (Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) {
    %14 = cast(%var_502, dtype="bool") /* ty=bool */;
    %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 8, 3), float64] */, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
    %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %17 = reshape(%16, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
    %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %19 = reshape(%18, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
    %20 = less_equal(%14, %15) /* ty=Tensor[(16, 8, 3), bool] */;
    %21 = @func_334(%17) /* ty=Tensor[(16, ?, 10), uint64] */;
    %22 = @func_334(%19) /* ty=Tensor[(16, ?, 10), uint64] */;
    (%20, %21, meta[relay.Constant][1] /* ty=Tensor[(160), uint64] */, %22)
  };
  %23(%var_527) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */
}

def @func_12986() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64]) {
  %27 = fn () -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64]) {
    %24 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %25 = %24.0;
    %26 = @func_10118() /* ty=Tensor[(160), uint64] */;
    (%25, %26)
  };
  %27() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64]) */
}

def @func_1128(%var_1126: int8, %var_1127: Tensor[(3, 10, 6), int8]) -> (Tensor[(3, 10, 6), int8],) {
  @func_1124(%var_1126, %var_1127) /* ty=(Tensor[(3, 10, 6), int8],) */
}

def @func_334(%var_323: Tensor[(16, 1, 10), uint64]) -> Tensor[(16, ?, 10), uint64] {
  %28 = cast(%var_323, dtype="uint64") /* ty=Tensor[(16, 1, 10), uint64] */;
  %29 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(16, 1, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 1, 10), uint64] */, dtype="uint64") /* ty=Tensor[(16, 1, 10), uint64] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%30, %31) /* ty=Tensor[(16, ?, 10), uint64] */
}

def @func_2890() -> (Tensor[(160), uint64],) {
  @func_2888() /* ty=(Tensor[(160), uint64],) */
}

def @func_10861(%var_10859: Tensor[(16, 4, 4), float64]) -> Tensor[(16, 4, 4), float32] {
  @func_10858(%var_10859) /* ty=Tensor[(16, 4, 4), float32] */
}

def @func_14934(%var_14932: Tensor[(162), float32]) -> (Tensor[(160), uint64], Tensor[(162), int32], Tensor[(1, 1872), float32], Tensor[(162), float32]) {
  @func_14931(%var_14932) /* ty=(Tensor[(160), uint64], Tensor[(162), int32], Tensor[(1, 1872), float32], Tensor[(162), float32]) */
}

def @func_10587() -> Tensor[(160), uint64] {
  %32 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %32.0
}

def @func_13683() -> (Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8]) {
  %33 = @func_8765() /* ty=(Tensor[(1152), float64],) */;
  %34 = cast(meta[relay.Constant][3] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %36 = cast(meta[relay.Constant][4] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %37 = cast(meta[relay.Constant][5] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %38 = cast(meta[relay.Constant][6] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %39 = cast(meta[relay.Constant][3] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %40 = reshape(%34, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %41 = reshape(%35, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %42 = reshape(%36, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %43 = reshape(%37, newshape=[88, 12]) /* ty=Tensor[(88, 12), float64] */;
  %44 = reshape(%38, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %45 = reshape(%39, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %46 = @func_3531(%40, %41, %42, %43, %44, %45) /* ty=(Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) */;
  %47 = @func_11545() /* ty=Tensor[(160), uint64] */;
  %48 = %33.0;
  %49 = %46.0;
  (%47, %48, %49, meta[relay.Constant][3] /* ty=Tensor[(264), float32] */, meta[relay.Constant][4] /* ty=Tensor[(168), float32] */, meta[relay.Constant][5] /* ty=Tensor[(1056), float64] */, meta[relay.Constant][6] /* ty=Tensor[(180), int8] */)
}

def @func_3333(%var_3324: uint16, %var_3325: Tensor[(2, 7, 16), uint16]) -> Tensor[(2, 7, 16), float64] {
  %50 = cast(%var_3324, dtype="bool") /* ty=bool */;
  %51 = cast(%var_3325, dtype="bool") /* ty=Tensor[(2, 7, 16), bool] */;
  %52 = greater_equal(%50, %51) /* ty=Tensor[(2, 7, 16), bool] */;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  log2(%53) /* ty=Tensor[(2, 7, 16), float64] */
}

def @func_10728() -> (Tensor[(7, 16, 11), float64],) {
  %54 = @func_9514() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32]) */;
  %55 = %54.0;
  (%55,)
}

def @func_2353(%var_2352: Tensor[(1152), float64]) -> (Tensor[(168), float32], Tensor[(168), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) {
  %63 = fn (%var_2337: Tensor[(1152), float64]) -> (Tensor[(168), float32], Tensor[(168), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) {
    %56 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
    %57 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
    %58 = cast(%var_2337, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %59 = reshape(%58, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), float64] */;
    %60 = %56.2;
    %61 = %57.2;
    %62 = @func_2228(%59) /* ty=Tensor[(8, 9, 16), float64] */;
    (%60, %61, %62, %var_2337)
  };
  %63(%var_2352) /* ty=(Tensor[(168), float32], Tensor[(168), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) */
}

def @func_13735() -> Tensor[(160), uint64] {
  %64 = @func_8554() /* ty=(Tensor[(160), uint64],) */;
  %64.0
}

def @func_10858(%var_10843: Tensor[(16, 4, 4), float64]) -> Tensor[(16, 4, 4), float32] {
  %65 = cast(%var_10843, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %66 = acosh(%65) /* ty=Tensor[(16, 4, 4), float64] */;
  %67 = cast(%66, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  sin(%67) /* ty=Tensor[(16, 4, 4), float32] */
}

def @func_2908() -> (Tensor[(160), uint64],) {
  @func_2906() /* ty=(Tensor[(160), uint64],) */
}

def @func_14151() -> (Tensor[(160), uint64],) {
  @func_14149() /* ty=(Tensor[(160), uint64],) */
}

def @func_10511(%var_10509: Tensor[(1872), float32], %var_10510: Tensor[(162), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(162), int32]) {
  @func_10507(%var_10509, %var_10510) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(162), int32]) */
}

def @main(%var_15927: Tensor[(4, 9, 12), bool], %var_15928: Tensor[(4, 9, 12), bool]) -> Tensor[(4, 9, 12), bool] {
  %68 = cast(%var_15928, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %69 = shape_of(%var_15927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%var_15927, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%70, %71) /* ty=Tensor[(4, 9, 12), bool] */
}

def @func_5169() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %72 = @func_3949() /* ty=(Tensor[(160), uint64],) */;
  %73 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %74 = %72.0;
  %75 = @func_3755() /* ty=Tensor[(160), uint64] */;
  %76 = %73.0;
  (%74, %75, %76)
}

def @func_9125() -> (Tensor[(160), uint64],) {
  %77 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %78 = %77.1;
  (%78,)
}

def @func_6120(%var_6097: Tensor[(24, 8), float32], %var_6098: Tensor[(16), int64]) -> (Tensor[(7, 16, 11), float64], Tensor[(1, 160), uint64], Tensor[(400), float64], Tensor[(24, 8), float32], Tensor[(16), int64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(84, 2), float32]) {
  %79 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %80 = cast(meta[relay.Constant][7] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %81 = cast(%var_6097, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %82 = cast(%var_6098, dtype="int64") /* ty=Tensor[(16), int64] */;
  %83 = reshape(%80, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %84 = reshape(%81, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %85 = reshape(%82, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %86 = @func_2196(%83, %84, %85) /* ty=(Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) */;
  %87 = cast(meta[relay.Constant][8] /* ty=Tensor[(84, 2), float32] */, dtype="float32") /* ty=Tensor[(84, 2), float32] */;
  %88 = reshape(%87, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %89 = @func_376(%88) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %90 = %79.0;
  %91 = %86.1;
  %92 = @func_5014() /* ty=Tensor[(7, 16, 11), float64] */;
  %93 = %89.0;
  (%90, %91, meta[relay.Constant][7] /* ty=Tensor[(400), float64] */, %var_6097, %var_6098, %92, %93, meta[relay.Constant][8] /* ty=Tensor[(84, 2), float32] */)
}

def @func_8253() -> (Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %94 = @func_7030() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %95 = @func_7030() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %96 = @func_7271() /* ty=Tensor[(7, 16, 11), uint64] */;
  %97 = %94.0;
  %98 = %95.0;
  (%96, %97, %98)
}

def @func_8582() -> Tensor[(160), uint64] {
  %99 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %99.0
}

def @func_11693(%var_11691: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(9, 14, 10), float64]) {
  @func_11690(%var_11691) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(9, 14, 10), float64]) */
}

def @func_13341() -> (Tensor[(160), uint64],) {
  %101 = fn () -> (Tensor[(160), uint64],) {
    %100 = @func_9950() /* ty=Tensor[(160), uint64] */;
    (%100,)
  };
  %101() /* ty=(Tensor[(160), uint64],) */
}

def @func_5208() -> Tensor[(160), uint64] {
  %103 = fn () -> Tensor[(160), uint64] {
    %102 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
    %102.0
  };
  %103() /* ty=Tensor[(160), uint64] */
}

def @func_13287() -> (Tensor[(160), uint64],) {
  @func_13285() /* ty=(Tensor[(160), uint64],) */
}

def @func_7160(%var_7105: Tensor[(9, 3, 6), float32], %var_7146: Tensor[(1872), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(9, 3, 6), uint8], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(6, 16, 2), float32], Tensor[(1, 192), float32]) {
  %104 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %105 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
  %106 = cast(%var_7105, dtype="float32") /* ty=Tensor[(9, 3, 6), float32] */;
  %107 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(9, 3, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(meta[relay.Constant][9] /* ty=Tensor[(9, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 6), float32] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %110 = power(%108, %109) /* ty=Tensor[(9, 3, 6), float32] */;
  %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(9, 3, 6), float32] */, dtype="uint8") /* ty=Tensor[(9, 3, 6), uint8] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%110, dtype="uint8") /* ty=Tensor[(9, 3, 6), uint8] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %115 = cast(%var_7146, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %116 = reshape(%115, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %117 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 192), float32] */, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
  %118 = reshape(%117, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %119 = @func_2620(%118) /* ty=(Tensor[(160), uint64], Tensor[(6, 16, 2), float32], Tensor[(192), float32]) */;
  %120 = %104.0;
  %121 = %105.0;
  %122 = subtract(%113, %114) /* ty=Tensor[(9, 3, 6), uint8] */;
  %123 = @func_6808(%116) /* ty=Tensor[(16, 13, 9), float32] */;
  %124 = %119.1;
  (%120, %121, %122, %123, %var_7146, %124, meta[relay.Constant][10] /* ty=Tensor[(1, 192), float32] */)
}

def @func_10044() -> (Tensor[(160), uint64],) {
  %125 = @func_6384() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %126 = %125.1;
  (%126,)
}

def @func_8326(%var_8323: Tensor[(5, 9, 9), float64], %var_8324: Tensor[(7, 16, 11), float64], %var_8325: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(8, 9, 16), float64], Tensor[(288, 4), float64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(5, 9, 9), bool]) {
  @func_8321(%var_8323, %var_8324, %var_8325) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(8, 9, 16), float64], Tensor[(288, 4), float64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(5, 9, 9), bool]) */
}

def @func_5415(%var_5406: Tensor[(8, 132), float64], %var_5407: Tensor[(30, 6), int8]) -> (Tensor[(160), uint64], float64, Tensor[(2560), uint64], Tensor[(168), float32], Tensor[(180), int8], Tensor[(8, 132), float64], Tensor[(30, 6), int8]) {
  %127 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %128 = cast(meta[relay.Constant][11] /* ty=Tensor[(2560), uint64] */, dtype="uint64") /* ty=Tensor[(2560), uint64] */;
  %129 = reshape(%128, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), uint64] */;
  %130 = @func_3617(%129) /* ty=(Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) */;
  %131 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %132 = cast(%var_5406, dtype="float64") /* ty=Tensor[(8, 132), float64] */;
  %133 = %130.1;
  %134 = cast(%133, dtype="float64") /* ty=float64 */;
  %135 = cast(%var_5407, dtype="int8") /* ty=Tensor[(30, 6), int8] */;
  %136 = reshape(%132, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float64] */;
  %137 = reshape(%134, newshape=[]) /* ty=float64 */;
  %138 = reshape(%135, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %139 = @func_1903(%136, %137, %138) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) */;
  %140 = %127.1;
  %141 = %131.0;
  %142 = %139.2;
  (%140, %133, meta[relay.Constant][11] /* ty=Tensor[(2560), uint64] */, %141, %142, %var_5406, %var_5407)
}

def @func_11500() -> (Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) {
  %147 = fn () -> (Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) {
    %143 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
    %144 = @func_5940() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %145 = %143.2;
    %146 = %144.0;
    (%145, %146)
  };
  %147() /* ty=(Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_1544(%var_1543: Tensor[(168), float32]) -> (Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) {
  %161 = fn (%var_1532: Tensor[(168), float32]) -> (Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) {
    %148 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 11, 13), uint16] */, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
    %149 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(7, 11, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 11, 13), uint16] */, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %152 = cast(-0.526713f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %153 = reshape(%152, newshape=[]) /* ty=float64 */;
    %154 = @func_526(%153) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
    %155 = cast(%var_1532, dtype="float32") /* ty=Tensor[(168), float32] */;
    %156 = reshape(%155, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
    %157 = @func_376(%156) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
    %158 = equal(%150, %151) /* ty=Tensor[(7, 11, 13), bool] */;
    %159 = %154.3;
    %160 = %157.2;
    (%158, %159, -0.526713f64 /* ty=float64 */, %160, %var_1532)
  };
  %161(%var_1543) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */
}

def @func_3539(%var_3533: Tensor[(6, 4, 11), float32], %var_3534: Tensor[(6, 4, 11), float32], %var_3535: Tensor[(168), float32], %var_3536: Tensor[(88, 12), float64], %var_3537: Tensor[(180), int8], %var_3538: Tensor[(6, 4, 11), float32]) -> (Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) {
  @func_3531(%var_3533, %var_3534, %var_3535, %var_3536, %var_3537, %var_3538) /* ty=(Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) */
}

def @func_2888() -> (Tensor[(160), uint64],) {
  %162 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %163 = %162.0;
  (%163,)
}

def @func_11456() -> (Tensor[(7, 16, 11), float64],) {
  %166 = fn () -> (Tensor[(7, 16, 11), float64],) {
    %164 = @func_7406() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %165 = %164.1;
    (%165,)
  };
  %166() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_13467(%var_13465: Tensor[(13, 16, 12), float32]) -> (Tensor[(13, 16, 12), float32],) {
  @func_13464(%var_13465) /* ty=(Tensor[(13, 16, 12), float32],) */
}

def @func_7315(%var_7300: Tensor[(2, 8, 6), uint32], %var_7301: Tensor[(2, 8, 6), uint32]) -> (Tensor[(2, 8, 6), uint32],) {
  %167 = cast(%var_7301, dtype="uint32") /* ty=Tensor[(2, 8, 6), uint32] */;
  %168 = shape_of(%var_7300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%var_7300, dtype="uint32") /* ty=Tensor[(2, 8, 6), uint32] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %171 = minimum(%169, %170) /* ty=Tensor[(2, 8, 6), uint32] */;
  (%171,)
}

def @func_15261() -> (Tensor[(2560), uint64], Tensor[(160), uint64]) {
  %176 = fn () -> (Tensor[(2560), uint64], Tensor[(160), uint64]) {
    %172 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
    %173 = @func_9368() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %174 = %172.2;
    %175 = %173.0;
    (%174, %175)
  };
  %176() /* ty=(Tensor[(2560), uint64], Tensor[(160), uint64]) */
}

def @func_8584() -> Tensor[(160), uint64] {
  @func_8582() /* ty=Tensor[(160), uint64] */
}

def @func_11998() -> (Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(4, 264), float64], Tensor[(7, 16, 11), float64]) {
  @func_11996() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(4, 264), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_10330() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) {
  %177 = @func_8554() /* ty=(Tensor[(160), uint64],) */;
  %178 = cast(meta[relay.Constant][14] /* ty=Tensor[(2560), uint64] */, dtype="uint64") /* ty=Tensor[(2560), uint64] */;
  %179 = reshape(%178, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), uint64] */;
  %180 = @func_3617(%179) /* ty=(Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) */;
  %181 = %177.0;
  %182 = %180.0;
  (%181, %182, meta[relay.Constant][14] /* ty=Tensor[(2560), uint64] */)
}

def @func_10046() -> (Tensor[(160), uint64],) {
  @func_10044() /* ty=(Tensor[(160), uint64],) */
}

def @func_5499(%var_5498: Tensor[(160), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
  %187 = fn (%var_5495: Tensor[(160), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
    %183 = cast(%var_5495, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %184 = reshape(%183, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
    %185 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
    %186 = @func_334(%184) /* ty=Tensor[(16, ?, 10), uint64] */;
    (%185, %186, %var_5495)
  };
  %187(%var_5498) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */
}

def @func_3169(%var_3168: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32], Tensor[(168), float32]) {
  %193 = fn (%var_3163: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32], Tensor[(168), float32]) {
    %188 = cast(%var_3163, dtype="float32") /* ty=Tensor[(168), float32] */;
    %189 = reshape(%188, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %190 = @func_3046(%189) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */;
    %191 = @func_2693() /* ty=Tensor[(7, 16, 11), float64] */;
    %192 = %190.2;
    (%191, %192, %var_3163)
  };
  %193(%var_3168) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32], Tensor[(168), float32]) */
}

def @func_2275() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) {
  %194 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %195 = cast(meta[relay.Constant][15] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %196 = reshape(%195, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %197 = @func_1542(%196) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %198 = %194.0;
  %199 = %197.3;
  (%198, %199, meta[relay.Constant][15] /* ty=Tensor[(168), float32] */)
}

def @func_4328() -> (Tensor[(7, 16, 11), float64],) {
  %200 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  (%200,)
}

def @func_8255() -> (Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  @func_8253() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_376(%var_349: Tensor[(12, 14, 1), float32]) -> (Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
  %201 = cast(%var_349, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %202 = log10(%201) /* ty=Tensor[(12, 14, 1), float32] */;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %205 = reshape(%204, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %206 = rsqrt(%203) /* ty=Tensor[(12, 14, 1), float32] */;
  %207 = @func_334(%205) /* ty=Tensor[(16, ?, 10), uint64] */;
  (%206, %207, meta[relay.Constant][16] /* ty=Tensor[(160), uint64] */)
}

def @func_2847() -> (Tensor[(160), uint64],) {
  @func_2845() /* ty=(Tensor[(160), uint64],) */
}

def @func_8016(%var_8006: Tensor[(5, 2, 13), int16], %var_8007: Tensor[(5, 2, 13), int16]) -> (Tensor[(5, 2, 13), int16], Tensor[(5, 2, 13), float32]) {
  %208 = cast(%var_8007, dtype="int16") /* ty=Tensor[(5, 2, 13), int16] */;
  %209 = shape_of(%var_8006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%var_8006, dtype="int16") /* ty=Tensor[(5, 2, 13), int16] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %212 = cast(%var_8006, dtype="float32") /* ty=Tensor[(5, 2, 13), float32] */;
  %213 = left_shift(%210, %211) /* ty=Tensor[(5, 2, 13), int16] */;
  %214 = log2(%212) /* ty=Tensor[(5, 2, 13), float32] */;
  (%213, %214)
}

def @func_7597() -> (Tensor[(160), uint64],) {
  @func_7595() /* ty=(Tensor[(160), uint64],) */
}

def @func_7217() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(160, 1), uint64]) {
  %215 = @func_7049() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %216 = cast(meta[relay.Constant][17] /* ty=Tensor[(160, 1), uint64] */, dtype="uint64") /* ty=Tensor[(160, 1), uint64] */;
  %217 = reshape(%216, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %218 = @func_5497(%217) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %219 = %215.0;
  %220 = %218.0;
  (%219, %220, meta[relay.Constant][17] /* ty=Tensor[(160, 1), uint64] */)
}

def @func_14931(%var_14928: Tensor[(162), float32]) -> (Tensor[(160), uint64], Tensor[(162), int32], Tensor[(1, 1872), float32], Tensor[(162), float32]) {
  %221 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 1872), float32] */, dtype="float32") /* ty=Tensor[(1, 1872), float32] */;
  %222 = cast(%var_14928, dtype="float32") /* ty=Tensor[(162), float32] */;
  %223 = reshape(%221, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
  %224 = reshape(%222, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %225 = @func_10507(%223, %224) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(162), int32]) */;
  %226 = @func_10110() /* ty=Tensor[(160), uint64] */;
  %227 = %225.6;
  (%226, %227, meta[relay.Constant][18] /* ty=Tensor[(1, 1872), float32] */, %var_14928)
}

def @func_10827(%var_10783: Tensor[(132, 2), float32], %var_10784: Tensor[(168), float32], %var_10785: Tensor[(1056), float64], %var_10786: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(180), int8], Tensor[(1232), float64], Tensor[(132, 2), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(264), float32]) {
  %228 = cast(meta[relay.Constant][19] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %229 = cast(%var_10783, dtype="float32") /* ty=Tensor[(132, 2), float32] */;
  %230 = cast(%var_10784, dtype="float32") /* ty=Tensor[(168), float32] */;
  %231 = cast(%var_10785, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %232 = cast(%var_10786, dtype="int8") /* ty=Tensor[(180), int8] */;
  %233 = reshape(%228, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %234 = reshape(%229, newshape=[264, 1]) /* ty=Tensor[(264, 1), float32] */;
  %235 = reshape(%230, newshape=[6, 28]) /* ty=Tensor[(6, 28), float32] */;
  %236 = reshape(%231, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %237 = reshape(%232, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %238 = @func_4944(%233, %234, %235, %236, %237) /* ty=(Tensor[(7, 16, 11), uint32], Tensor[(180), int8], Tensor[(264, 1), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(6, 28), float32], Tensor[(7, 16, 11), float32], Tensor[(600), float64], int8) */;
  %239 = @func_10776() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %240 = cast(%var_10785, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %241 = reshape(%240, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %242 = @func_8692(%241) /* ty=(Tensor[(160), uint64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(3, 60), int8], Tensor[(7, 16, 11), float64], Tensor[(1152), float64], Tensor[(16, ?, 10), uint64]) */;
  %243 = @func_5207() /* ty=Tensor[(160), uint64] */;
  %244 = %238.4;
  %245 = %239.1;
  %246 = %242.2;
  (%243, %244, meta[relay.Constant][19] /* ty=Tensor[(1232), float64] */, %var_10783, %var_10784, %var_10785, %var_10786, %245, %246)
}

def @func_5627() -> (Tensor[(7, 16, 11), uint64],) {
  %249 = fn () -> (Tensor[(7, 16, 11), uint64],) {
    %247 = @func_5318() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) */;
    %248 = %247.2;
    (%248,)
  };
  %249() /* ty=(Tensor[(7, 16, 11), uint64],) */
}

def @func_6124(%var_6122: Tensor[(24, 8), float32], %var_6123: Tensor[(16), int64]) -> (Tensor[(7, 16, 11), float64], Tensor[(1, 160), uint64], Tensor[(400), float64], Tensor[(24, 8), float32], Tensor[(16), int64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(84, 2), float32]) {
  @func_6120(%var_6122, %var_6123) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1, 160), uint64], Tensor[(400), float64], Tensor[(24, 8), float32], Tensor[(16), int64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(84, 2), float32]) */
}

def @func_2196(%var_2134: Tensor[(10, 8, 5), float64], %var_2149: Tensor[(192), float32], %var_2152: Tensor[(16), int64]) -> (Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) {
  %250 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 160), uint64] */, dtype="uint64") /* ty=Tensor[(1, 160), uint64] */;
  %251 = reshape(%250, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %252 = cast(%var_2134, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %253 = atan(%252) /* ty=Tensor[(10, 8, 5), float64] */;
  %254 = cast(%var_2134, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%253, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %258 = cast(%var_2149, dtype="float32") /* ty=Tensor[(192), float32] */;
  %259 = reshape(%258, newshape=[6, 16, 2]) /* ty=Tensor[(6, 16, 2), float32] */;
  %260 = @func_899(%259) /* ty=(Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) */;
  %261 = %260.2;
  %262 = cast(%261, dtype="int64") /* ty=int64 */;
  %263 = cast(%var_2152, dtype="int64") /* ty=Tensor[(16), int64] */;
  %264 = @func_334(%251) /* ty=Tensor[(16, ?, 10), uint64] */;
  %265 = cast(%264, dtype="uint64") /* ty=Tensor[(16, ?, 10), uint64] */;
  %266 = reshape(%262, newshape=[]) /* ty=int64 */;
  %267 = reshape(%263, newshape=[1, 16]) /* ty=Tensor[(1, 16), int64] */;
  %268 = reshape(%265, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %269 = @func_1596(%266, %267, %268) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %270 = cast(%253, dtype="float32") /* ty=Tensor[(10, 8, 5), float32] */;
  %271 = acos(%270) /* ty=Tensor[(10, 8, 5), float32] */;
  %272 = cast(%271, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %273 = cast(%261, dtype="float64") /* ty=float64 */;
  %274 = reshape(%273, newshape=[]) /* ty=float64 */;
  %275 = @func_526(%274) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %276 = not_equal(%256, %257) /* ty=Tensor[(10, 8, 5), bool] */;
  %277 = %269.1;
  %278 = asinh(%272) /* ty=Tensor[(10, 8, 5), float64] */;
  %279 = %275.1;
  (%264, meta[relay.Constant][20] /* ty=Tensor[(1, 160), uint64] */, %276, %261, %var_2149, %277, %var_2152, %278, %279)
}

def @func_13285() -> (Tensor[(160), uint64],) {
  %280 = @func_3949() /* ty=(Tensor[(160), uint64],) */;
  %281 = %280.0;
  (%281,)
}

def @func_11791() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32]) {
  @func_11789() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32]) */
}

def @func_10222() -> Tensor[(7, 16, 11), float64] {
  %282 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %282.0
}

def @func_5744() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  @func_5742() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_11884() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %283 = @func_6933() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %284 = @func_10044() /* ty=(Tensor[(160), uint64],) */;
  %285 = @func_3949() /* ty=(Tensor[(160), uint64],) */;
  %286 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
  %287 = %283.0;
  %288 = %284.0;
  %289 = @func_11545() /* ty=Tensor[(160), uint64] */;
  %290 = %285.0;
  %291 = %286.0;
  (%287, %288, %289, %290, %291)
}

def @func_12260() -> (Tensor[(160), uint64],) {
  %293 = fn () -> (Tensor[(160), uint64],) {
    %292 = @func_10118() /* ty=Tensor[(160), uint64] */;
    (%292,)
  };
  %293() /* ty=(Tensor[(160), uint64],) */
}

def @func_4618(%var_4616: Tensor[(6, 13, 11), int16], %var_4617: Tensor[(6, 13, 11), int16]) -> (Tensor[(6, 13, 11), int16],) {
  @func_4614(%var_4616, %var_4617) /* ty=(Tensor[(6, 13, 11), int16],) */
}

def @func_10666() -> (Tensor[(7, 16, 11), float32],) {
  %296 = fn () -> (Tensor[(7, 16, 11), float32],) {
    %294 = @func_9719() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float32]) */;
    %295 = %294.1;
    (%295,)
  };
  %296() /* ty=(Tensor[(7, 16, 11), float32],) */
}

def @func_9127() -> (Tensor[(160), uint64],) {
  @func_9125() /* ty=(Tensor[(160), uint64],) */
}

def @func_2489() -> (Tensor[(168), float32], Tensor[(160), uint64]) {
  %303 = fn () -> (Tensor[(168), float32], Tensor[(160), uint64]) {
    %297 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
    %298 = %297.2;
    %299 = cast(%298, dtype="float32") /* ty=Tensor[(168), float32] */;
    %300 = reshape(%299, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
    %301 = @func_376(%300) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
    %302 = %301.2;
    (%298, %302)
  };
  %303() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */
}

def @func_3100() -> Tensor[(7, 16, 11), float64] {
  @func_2799() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_9118(%var_9108: Tensor[(1872), float32]) -> (Tensor[(1152), float64], Tensor[(160), uint64], Tensor[(16, 13, 9), float32], Tensor[(1872), float32]) {
  %304 = @func_8765() /* ty=(Tensor[(1152), float64],) */;
  %305 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %306 = cast(%var_9108, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %307 = reshape(%306, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %308 = %304.0;
  %309 = %305.0;
  %310 = @func_6808(%307) /* ty=Tensor[(16, 13, 9), float32] */;
  (%308, %309, %310, %var_9108)
}

def @func_9761() -> (Tensor[(7, 16, 11), float64], Tensor[(168), float32], Tensor[(168), float32]) {
  @func_9759() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(168), float32], Tensor[(168), float32]) */
}

def @func_2201(%var_2198: Tensor[(10, 8, 5), float64], %var_2199: Tensor[(192), float32], %var_2200: Tensor[(16), int64]) -> (Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) {
  @func_2196(%var_2198, %var_2199, %var_2200) /* ty=(Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) */
}

def @func_3497() -> (Tensor[(160), uint64],) {
  %313 = fn () -> (Tensor[(160), uint64],) {
    %311 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
    %312 = %311.0;
    (%312,)
  };
  %313() /* ty=(Tensor[(160), uint64],) */
}

def @func_6332(%var_6247: Tensor[(7, 16, 11), float64], %var_6313: Tensor[(180), int8], %var_6323: Tensor[(60, 10), float64]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), int16], Tensor[(7, 16, 11), float32], Tensor[(7, 16, 11), float64], Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(60, 10), float64]) {
  %314 = @func_3496() /* ty=(Tensor[(160), uint64],) */;
  %315 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %316 = %315.0;
  %317 = cast(%var_6247, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%316, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %321 = @func_5940() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %322 = %321.0;
  %323 = cast(%322, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %324 = sin(%323) /* ty=Tensor[(7, 16, 11), float32] */;
  %325 = cast(%324, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %326 = atanh(%325) /* ty=Tensor[(7, 16, 11), float64] */;
  %327 = cast(%326, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %328 = cast(%326, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %329 = bitwise_and(%319, %320) /* ty=Tensor[(7, 16, 11), int16] */;
  %330 = cast(%329, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %331 = cast(%var_6313, dtype="int8") /* ty=Tensor[(180), int8] */;
  %332 = reshape(%328, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %333 = reshape(%330, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %334 = reshape(%331, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %335 = @func_4274(%332, %333, %334) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(600), float64], Tensor[(7, 16, 11), bool], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64]) */;
  %336 = cast(%var_6323, dtype="float64") /* ty=Tensor[(60, 10), float64] */;
  %337 = reshape(%336, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %338 = @func_2558(%337) /* ty=(Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) */;
  %339 = %314.0;
  %340 = acos(%327) /* ty=Tensor[(7, 16, 11), float32] */;
  %341 = %335.2;
  %342 = %338.1;
  (%339, %329, %340, %341, %var_6313, %342, %var_6323)
}

def @func_14099() -> (Tensor[(7, 16, 11), float64],) {
  %343 = @func_5666() /* ty=Tensor[(7, 16, 11), float64] */;
  (%343,)
}

def @func_10905(%var_10903: Tensor[(1, 10, 7), int8], %var_10904: Tensor[(5, 10, 7), int8]) -> (Tensor[(5, 10, 7), int8],) {
  %347 = fn (%var_10896: Tensor[(1, 10, 7), int8], %var_10897: Tensor[(5, 10, 7), int8]) -> (Tensor[(5, 10, 7), int8],) {
    %344 = cast(%var_10896, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
    %345 = cast(%var_10897, dtype="int8") /* ty=Tensor[(5, 10, 7), int8] */;
    %346 = bitwise_and(%344, %345) /* ty=Tensor[(5, 10, 7), int8] */;
    (%346,)
  };
  %347(%var_10903, %var_10904) /* ty=(Tensor[(5, 10, 7), int8],) */
}

def @func_12532() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  @func_12530() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_15805(%var_15803: Tensor[(1, 1, 1), float64]) -> (Tensor[(1, 1, 1), float64],) {
  @func_15802(%var_15803) /* ty=(Tensor[(1, 1, 1), float64],) */
}

def @func_12656(%var_12653: Tensor[(9, 11, 5), float32], %var_12654: Tensor[(9, 11, 5), float32], %var_12655: Tensor[(9, 11, 5), float32]) -> (Tensor[(9, 11, 5), float32], Tensor[(1056), float64], Tensor[(1232), float64], Tensor[(6, 30), int8], Tensor[(9, 11, 5), int16]) {
  %366 = fn (%var_12579: Tensor[(9, 11, 5), float32], %var_12580: Tensor[(9, 11, 5), float32], %var_12647: Tensor[(9, 11, 5), float32]) -> (Tensor[(9, 11, 5), float32], Tensor[(1056), float64], Tensor[(1232), float64], Tensor[(6, 30), int8], Tensor[(9, 11, 5), int16]) {
    %348 = cast(%var_12580, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
    %349 = shape_of(%var_12579, dtype="int32") /* ty=Tensor[(3), int32] */;
    %350 = cast(%var_12579, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
    %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %352 = cast(meta[relay.Constant][21] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %353 = cast(meta[relay.Constant][21] /* ty=Tensor[(1232), float64] */, dtype="int16") /* ty=Tensor[(1232), int16] */;
    %354 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 30), int8] */, dtype="int8") /* ty=Tensor[(6, 30), int8] */;
    %355 = reshape(%352, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
    %356 = reshape(%353, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), int16] */;
    %357 = reshape(%354, newshape=[180]) /* ty=Tensor[(180), int8] */;
    %358 = @func_3232(%355, %356, %357) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */;
    %359 = cast(%var_12647, dtype="int16") /* ty=Tensor[(9, 11, 5), int16] */;
    %360 = shape_of(%var_12579, dtype="int32") /* ty=Tensor[(3), int32] */;
    %361 = cast(%var_12579, dtype="int16") /* ty=Tensor[(9, 11, 5), int16] */;
    %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %363 = floor_mod(%350, %351) /* ty=Tensor[(9, 11, 5), float32] */;
    %364 = %358.3;
    %365 = add(%361, %362) /* ty=Tensor[(9, 11, 5), int16] */;
    (%363, %364, meta[relay.Constant][21] /* ty=Tensor[(1232), float64] */, meta[relay.Constant][22] /* ty=Tensor[(6, 30), int8] */, %365)
  };
  %366(%var_12653, %var_12654, %var_12655) /* ty=(Tensor[(9, 11, 5), float32], Tensor[(1056), float64], Tensor[(1232), float64], Tensor[(6, 30), int8], Tensor[(9, 11, 5), int16]) */
}

def @func_5419(%var_5417: Tensor[(8, 132), float64], %var_5418: Tensor[(30, 6), int8]) -> (Tensor[(160), uint64], float64, Tensor[(2560), uint64], Tensor[(168), float32], Tensor[(180), int8], Tensor[(8, 132), float64], Tensor[(30, 6), int8]) {
  @func_5415(%var_5417, %var_5418) /* ty=(Tensor[(160), uint64], float64, Tensor[(2560), uint64], Tensor[(168), float32], Tensor[(180), int8], Tensor[(8, 132), float64], Tensor[(30, 6), int8]) */
}

def @func_15021() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %370 = fn () -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
    %367 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
    %368 = @func_14284() /* ty=Tensor[(160), uint64] */;
    %369 = %367.0;
    (%368, %369)
  };
  %370() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_13923(%var_13915: Tensor[(3, 15, 16), uint64], %var_13916: Tensor[(3, 15, 16), uint64]) -> Tensor[(3, 15, 16), bool] {
  %371 = cast(%var_13916, dtype="bool") /* ty=Tensor[(3, 15, 16), bool] */;
  %372 = shape_of(%var_13915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%var_13915, dtype="bool") /* ty=Tensor[(3, 15, 16), bool] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%373, %374) /* ty=Tensor[(3, 15, 16), bool] */
}

def @func_15285() -> (Tensor[(160), uint64],) {
  @func_15283() /* ty=(Tensor[(160), uint64],) */
}

def @func_2623(%var_2621: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(6, 16, 2), float32], Tensor[(192), float32]) {
  @func_2620(%var_2621) /* ty=(Tensor[(160), uint64], Tensor[(6, 16, 2), float32], Tensor[(192), float32]) */
}

def @func_9951() -> Tensor[(160), uint64] {
  %376 = fn () -> Tensor[(160), uint64] {
    %375 = @func_9467() /* ty=(Tensor[(160), uint64],) */;
    %375.0
  };
  %376() /* ty=Tensor[(160), uint64] */
}

def @func_12711() -> Tensor[(160), uint64] {
  @func_4981() /* ty=Tensor[(160), uint64] */
}

def @func_15608() -> Tensor[(160), uint64] {
  @func_15606() /* ty=Tensor[(160), uint64] */
}

def @func_8692(%var_8648: Tensor[(1056), float64]) -> (Tensor[(160), uint64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(3, 60), int8], Tensor[(7, 16, 11), float64], Tensor[(1152), float64], Tensor[(16, ?, 10), uint64]) {
  %377 = @func_8554() /* ty=(Tensor[(160), uint64],) */;
  %378 = cast(meta[relay.Constant][23] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %379 = cast(meta[relay.Constant][23] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %380 = cast(meta[relay.Constant][24] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %381 = cast(%var_8648, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %382 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 60), int8] */, dtype="int8") /* ty=Tensor[(3, 60), int8] */;
  %383 = cast(meta[relay.Constant][23] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %384 = reshape(%378, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %385 = reshape(%379, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %386 = reshape(%380, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %387 = reshape(%381, newshape=[88, 12]) /* ty=Tensor[(88, 12), float64] */;
  %388 = reshape(%382, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %389 = reshape(%383, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %390 = @func_3531(%384, %385, %386, %387, %388, %389) /* ty=(Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) */;
  %391 = cast(meta[relay.Constant][26] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %392 = reshape(%391, newshape=[24, 48]) /* ty=Tensor[(24, 48), float64] */;
  %393 = @func_5595(%392) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) */;
  %394 = cast(meta[relay.Constant][24] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %395 = reshape(%394, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %396 = @func_1542(%395) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %397 = %377.0;
  %398 = %390.0;
  %399 = %393.0;
  %400 = %396.1;
  (%397, %398, meta[relay.Constant][23] /* ty=Tensor[(264), float32] */, meta[relay.Constant][24] /* ty=Tensor[(168), float32] */, %var_8648, meta[relay.Constant][25] /* ty=Tensor[(3, 60), int8] */, %399, meta[relay.Constant][26] /* ty=Tensor[(1152), float64] */, %400)
}

def @func_11006(%var_10986: Tensor[(264), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(264), float32], Tensor[(168, 1), float32], Tensor[(264, 4), float64], Tensor[(180), int8]) {
  %401 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %402 = cast(%var_10986, dtype="float32") /* ty=Tensor[(264), float32] */;
  %403 = cast(meta[relay.Constant][27] /* ty=Tensor[(168, 1), float32] */, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
  %404 = cast(meta[relay.Constant][28] /* ty=Tensor[(264, 4), float64] */, dtype="float64") /* ty=Tensor[(264, 4), float64] */;
  %405 = cast(meta[relay.Constant][29] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %406 = reshape(%402, newshape=[132, 2]) /* ty=Tensor[(132, 2), float32] */;
  %407 = reshape(%403, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %408 = reshape(%404, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %409 = reshape(%405, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %410 = @func_10827(%406, %407, %408, %409) /* ty=(Tensor[(160), uint64], Tensor[(180), int8], Tensor[(1232), float64], Tensor[(132, 2), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(264), float32]) */;
  %411 = %401.0;
  %412 = %410.0;
  (%411, %412, %var_10986, meta[relay.Constant][27] /* ty=Tensor[(168, 1), float32] */, meta[relay.Constant][28] /* ty=Tensor[(264, 4), float64] */, meta[relay.Constant][29] /* ty=Tensor[(180), int8] */)
}

def @func_12573() -> (Tensor[(160), uint64],) {
  %414 = fn () -> (Tensor[(160), uint64],) {
    %413 = @func_5268() /* ty=Tensor[(160), uint64] */;
    (%413,)
  };
  %414() /* ty=(Tensor[(160), uint64],) */
}

def @func_7551(%var_7549: Tensor[(192), float32], %var_7550: int8) -> (Tensor[(12, 14, 1), float32], Tensor[(192), float32], Tensor[(16), int64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(4, 9, 5), bool], Tensor[(180), int8], Tensor[(1232), float64], int8) {
  @func_7547(%var_7549, %var_7550) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(192), float32], Tensor[(16), int64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(4, 9, 5), bool], Tensor[(180), int8], Tensor[(1232), float64], int8) */
}

def @func_2958() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %415 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %416 = %415.0;
  %417 = @func_2693() /* ty=Tensor[(7, 16, 11), float64] */;
  (%416, %417)
}

def @func_7026(%var_7023: Tensor[(15, 7, 1), int8], %var_7024: Tensor[(15, 7, 12), int8], %var_7025: Tensor[(1440), uint64]) -> (Tensor[(9, 16, 10), uint64], Tensor[(1440), uint64], Tensor[(160), uint64], Tensor[(15, 7, 12), float64], Tensor[(168), float32]) {
  %433 = fn (%var_6975: Tensor[(15, 7, 1), int8], %var_6976: Tensor[(15, 7, 12), int8], %var_7011: Tensor[(1440), uint64]) -> (Tensor[(9, 16, 10), uint64], Tensor[(1440), uint64], Tensor[(160), uint64], Tensor[(15, 7, 12), float64], Tensor[(168), float32]) {
    %418 = cast(%var_7011, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
    %419 = reshape(%418, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), uint64] */;
    %420 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %421 = cast(%var_6975, dtype="int8") /* ty=Tensor[(15, 7, 1), int8] */;
    %422 = cast(%var_6976, dtype="int8") /* ty=Tensor[(15, 7, 12), int8] */;
    %423 = left_shift(%421, %422) /* ty=Tensor[(15, 7, 12), int8] */;
    %424 = cast(%423, dtype="int8") /* ty=Tensor[(15, 7, 12), int8] */;
    %425 = cast(%var_6975, dtype="int8") /* ty=Tensor[(15, 7, 1), int8] */;
    %426 = bitwise_or(%424, %425) /* ty=Tensor[(15, 7, 12), int8] */;
    %427 = cast(%426, dtype="float64") /* ty=Tensor[(15, 7, 12), float64] */;
    %428 = @func_5255() /* ty=(Tensor[(168), float32],) */;
    %429 = @func_6581(%419) /* ty=Tensor[(9, 16, 10), uint64] */;
    %430 = %420.1;
    %431 = erf(%427) /* ty=Tensor[(15, 7, 12), float64] */;
    %432 = %428.0;
    (%429, %var_7011, %430, %431, %432)
  };
  %433(%var_7023, %var_7024, %var_7025) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(1440), uint64], Tensor[(160), uint64], Tensor[(15, 7, 12), float64], Tensor[(168), float32]) */
}

def @func_3084(%var_3082: Tensor[(400), float64], %var_3083: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) {
  %444 = fn (%var_3074: Tensor[(400), float64], %var_3075: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) {
    %434 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
    %435 = cast(%var_3074, dtype="float64") /* ty=Tensor[(400), float64] */;
    %436 = cast(%var_3075, dtype="float32") /* ty=Tensor[(192), float32] */;
    %437 = cast(meta[relay.Constant][30] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
    %438 = reshape(%435, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
    %439 = reshape(%436, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %440 = reshape(%437, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %441 = @func_2196(%438, %439, %440) /* ty=(Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) */;
    %442 = %434.0;
    %443 = %441.8;
    (%442, %443, %var_3074, %var_3075, meta[relay.Constant][30] /* ty=Tensor[(16), int64] */)
  };
  %444(%var_3082, %var_3083) /* ty=(Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) */
}

def @func_2669(%var_2648: Tensor[(168), float32], %var_2665: Tensor[(1056), float64], %var_2666: float64, %var_2667: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), float64], float64, Tensor[(180), int8]) {
  %445 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %446 = cast(%var_2648, dtype="float32") /* ty=Tensor[(168), float32] */;
  %447 = reshape(%446, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %448 = @func_376(%447) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %449 = cast(%var_2665, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %450 = cast(%var_2666, dtype="float64") /* ty=float64 */;
  %451 = cast(%var_2667, dtype="int8") /* ty=Tensor[(180), int8] */;
  %452 = reshape(%449, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float64] */;
  %453 = reshape(%450, newshape=[]) /* ty=float64 */;
  %454 = reshape(%451, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %455 = @func_1903(%452, %453, %454) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) */;
  %456 = %445.1;
  %457 = %448.2;
  %458 = %455.4;
  (%456, %457, %var_2648, %458, %var_2665, %var_2666, %var_2667)
}

def @func_5268() -> Tensor[(160), uint64] {
  %459 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
  %459.0
}

def @func_11428(%var_11426: Tensor[(162), float32], %var_11427: Tensor[(1872), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(162), int32], Tensor[(162), float32], Tensor[(160), uint64], Tensor[(1872), float32]) {
  @func_11424(%var_11426, %var_11427) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(162), int32], Tensor[(162), float32], Tensor[(160), uint64], Tensor[(1872), float32]) */
}

def @func_6337(%var_6334: Tensor[(7, 16, 11), float64], %var_6335: Tensor[(180), int8], %var_6336: Tensor[(60, 10), float64]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), int16], Tensor[(7, 16, 11), float32], Tensor[(7, 16, 11), float64], Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(60, 10), float64]) {
  @func_6332(%var_6334, %var_6335, %var_6336) /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), int16], Tensor[(7, 16, 11), float32], Tensor[(7, 16, 11), float64], Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(60, 10), float64]) */
}

def @func_12713() -> Tensor[(160), uint64] {
  @func_12711() /* ty=Tensor[(160), uint64] */
}

def @func_2694() -> Tensor[(7, 16, 11), float64] {
  %461 = fn () -> Tensor[(7, 16, 11), float64] {
    %460 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %460.0
  };
  %461() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_14032(%var_13981: Tensor[(70), int8], %var_13982: Tensor[(350), int8], %var_14012: int64, %var_14014: Tensor[(160), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(5, 10, 7), int8], Tensor[(70), int8], Tensor[(350), int8], Tensor[(16, ?, 10), uint64], int64, Tensor[(16), int64], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %462 = @func_7217() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(160, 1), uint64]) */;
  %463 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %464 = cast(%var_13981, dtype="int8") /* ty=Tensor[(70), int8] */;
  %465 = cast(%var_13982, dtype="int8") /* ty=Tensor[(350), int8] */;
  %466 = reshape(%464, newshape=[1, 10, 7]) /* ty=Tensor[(1, 10, 7), int8] */;
  %467 = reshape(%465, newshape=[5, 10, 7]) /* ty=Tensor[(5, 10, 7), int8] */;
  %468 = @func_10902(%466, %467) /* ty=(Tensor[(5, 10, 7), int8],) */;
  %469 = cast(%var_14012, dtype="int64") /* ty=int64 */;
  %470 = cast(meta[relay.Constant][31] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %471 = cast(%var_14014, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %472 = reshape(%469, newshape=[]) /* ty=int64 */;
  %473 = reshape(%470, newshape=[1, 16]) /* ty=Tensor[(1, 16), int64] */;
  %474 = reshape(%471, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %475 = @func_1596(%472, %473, %474) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %476 = @func_12693() /* ty=(Tensor[(160), uint64],) */;
  %477 = %462.0;
  %478 = %463.0;
  %479 = %468.0;
  %480 = %475.1;
  %481 = %476.0;
  (%477, %478, %479, %var_13981, %var_13982, %480, %var_14012, meta[relay.Constant][31] /* ty=Tensor[(16), int64] */, %var_14014, %481)
}

def @func_8020(%var_8018: Tensor[(5, 2, 13), int16], %var_8019: Tensor[(5, 2, 13), int16]) -> (Tensor[(5, 2, 13), int16], Tensor[(5, 2, 13), float32]) {
  @func_8016(%var_8018, %var_8019) /* ty=(Tensor[(5, 2, 13), int16], Tensor[(5, 2, 13), float32]) */
}

def @func_2960() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_1908(%var_1905: Tensor[(8, 11, 12), float64], %var_1906: float64, %var_1907: Tensor[(180), int8]) -> (Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) {
  @func_1903(%var_1905, %var_1906, %var_1907) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) */
}

def @func_2744(%var_2713: Tensor[(7, 16, 11), float64]) -> (Tensor[(16, 16, 12), int16], Tensor[(3072), int16], Tensor[(7, 16, 11), uint64]) {
  %482 = cast(meta[relay.Constant][32] /* ty=Tensor[(3072), int16] */, dtype="int16") /* ty=Tensor[(3072), int16] */;
  %483 = cast(meta[relay.Constant][32] /* ty=Tensor[(3072), int16] */, dtype="int16") /* ty=Tensor[(3072), int16] */;
  %484 = reshape(%482, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), int16] */;
  %485 = reshape(%483, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), int16] */;
  %486 = @func_1690(%484, %485) /* ty=(Tensor[(16, 16, 12), int16],) */;
  %487 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %488 = %487.0;
  %489 = cast(%var_2713, dtype="uint64") /* ty=Tensor[(7, 16, 11), uint64] */;
  %490 = shape_of(%488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %491 = cast(%488, dtype="uint64") /* ty=Tensor[(7, 16, 11), uint64] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %493 = %486.0;
  %494 = logical_xor(%491, %492) /* ty=Tensor[(7, 16, 11), uint64] */;
  (%493, meta[relay.Constant][32] /* ty=Tensor[(3072), int16] */, %494)
}

def @func_4278(%var_4275: Tensor[(7, 16, 11), float64], %var_4276: Tensor[(7, 16, 11), float64], %var_4277: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(600), float64], Tensor[(7, 16, 11), bool], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64]) {
  %523 = fn (%var_4231: Tensor[(7, 16, 11), float64], %var_4244: Tensor[(7, 16, 11), float64], %var_4251: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(600), float64], Tensor[(7, 16, 11), bool], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64]) {
    %495 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
    %496 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
    %497 = cast(%var_4231, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
    %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
    %499 = cast(%496, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %501 = cast(meta[relay.Constant][33] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
    %502 = reshape(%501, newshape=[2, 300]) /* ty=Tensor[(2, 300), float64] */;
    %503 = @func_3914(%502) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(2, 300), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(160), uint64]) */;
    %504 = cast(%var_4244, dtype="bool") /* ty=Tensor[(7, 16, 11), bool] */;
    %505 = shape_of(%var_4231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %506 = cast(%var_4231, dtype="bool") /* ty=Tensor[(7, 16, 11), bool] */;
    %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %508 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
    %509 = cast(%508, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
    %510 = cast(%var_4231, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
    %511 = cast(%var_4251, dtype="int8") /* ty=Tensor[(180), int8] */;
    %512 = reshape(%509, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
    %513 = reshape(%510, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), int16] */;
    %514 = reshape(%511, newshape=[180]) /* ty=Tensor[(180), int8] */;
    %515 = @func_3232(%512, %513, %514) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */;
    %516 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %517 = %495.0;
    %518 = minimum(%499, %500) /* ty=Tensor[(7, 16, 11), float64] */;
    %519 = %503.7;
    %520 = greater(%506, %507) /* ty=Tensor[(7, 16, 11), bool] */;
    %521 = %515.4;
    %522 = %516.0;
    (%508, %517, %518, %519, meta[relay.Constant][33] /* ty=Tensor[(600), float64] */, %520, %521, %var_4251, %522)
  };
  %523(%var_4275, %var_4276, %var_4277) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(600), float64], Tensor[(7, 16, 11), bool], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64]) */
}

def @func_15802(%var_15790: Tensor[(1, 1, 1), float64]) -> (Tensor[(1, 1, 1), float64],) {
  %524 = cast(%var_15790, dtype="float64") /* ty=Tensor[(1, 1, 1), float64] */;
  %525 = log10(%524) /* ty=Tensor[(1, 1, 1), float64] */;
  (%525,)
}

def @func_2830() -> (Tensor[(7, 16, 11), float64],) {
  @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_12044() -> Tensor[(160), uint64] {
  %527 = fn () -> Tensor[(160), uint64] {
    %526 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
    %526.0
  };
  %527() /* ty=Tensor[(160), uint64] */
}

def @func_12076() -> Tensor[(7, 16, 11), float64] {
  @func_12074() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_15128() -> (Tensor[(160), uint64], Tensor[(9, 14, 10), float64]) {
  %528 = @func_14685() /* ty=(Tensor[(160), uint64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) */;
  %529 = @func_5268() /* ty=Tensor[(160), uint64] */;
  %530 = %528.1;
  (%529, %530)
}

def @func_3756() -> Tensor[(160), uint64] {
  %532 = fn () -> Tensor[(160), uint64] {
    %531 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
    %531.0
  };
  %532() /* ty=Tensor[(160), uint64] */
}

def @func_9688() -> (Tensor[(160), uint64],) {
  %533 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %534 = %533.1;
  (%534,)
}

def @func_5857(%var_5854: Tensor[(400), float64], %var_5855: Tensor[(4, 48), float32], %var_5856: Tensor[(4, 48), float64]) -> (Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) {
  @func_5852(%var_5854, %var_5855, %var_5856) /* ty=(Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) */
}

def @func_3236(%var_3233: Tensor[(1232), float64], %var_3234: Tensor[(7, 16, 11), int16], %var_3235: Tensor[(180), int8]) -> (Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) {
  %567 = fn (%var_3182: Tensor[(1232), float64], %var_3186: Tensor[(7, 16, 11), int16], %var_3202: Tensor[(180), int8]) -> (Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) {
    %535 = @func_3000() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) */;
    %536 = cast(%var_3182, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %537 = reshape(%536, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %538 = @func_2398(%537) /* ty=(Tensor[(7, 16, 11), int16],) */;
    %539 = %538.0;
    %540 = cast(%var_3186, dtype="bool") /* ty=Tensor[(7, 16, 11), bool] */;
    %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
    %542 = cast(%539, dtype="bool") /* ty=Tensor[(7, 16, 11), bool] */;
    %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %544 = cast(-4.89564f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
    %545 = cast(%var_3202, dtype="int8") /* ty=Tensor[(180), int8] */;
    %546 = reshape(%544, newshape=[]) /* ty=int8 */;
    %547 = reshape(%545, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
    %548 = @func_1124(%546, %547) /* ty=(Tensor[(3, 10, 6), int8],) */;
    %549 = cast(-4.89564f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %550 = reshape(%549, newshape=[]) /* ty=float64 */;
    %551 = @func_526(%550) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
    %552 = cast(meta[relay.Constant][34] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %553 = cast(-4.89564f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %554 = cast(%var_3202, dtype="int8") /* ty=Tensor[(180), int8] */;
    %555 = reshape(%552, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), float64] */;
    %556 = reshape(%553, newshape=[]) /* ty=float64 */;
    %557 = reshape(%554, newshape=[180]) /* ty=Tensor[(180), int8] */;
    %558 = @func_1903(%555, %556, %557) /* ty=(Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) */;
    %559 = %558.3;
    %560 = cast(%559, dtype="float32") /* ty=Tensor[(16, ?, 10), float32] */;
    %561 = %535.2;
    %562 = less_equal(%542, %543) /* ty=Tensor[(7, 16, 11), bool] */;
    %563 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
    %564 = %548.0;
    %565 = %551.3;
    %566 = log(%560) /* ty=Tensor[(16, ?, 10), float32] */;
    (%561, %var_3182, %562, meta[relay.Constant][34] /* ty=Tensor[(1056), float64] */, -4.89564f64 /* ty=float64 */, %var_3202, %563, %564, %565, %566)
  };
  %567(%var_3233, %var_3234, %var_3235) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */
}

def @func_7324() -> (Tensor[(168), float32],) {
  %570 = fn () -> (Tensor[(168), float32],) {
    %568 = @func_5255() /* ty=(Tensor[(168), float32],) */;
    %569 = %568.0;
    (%569,)
  };
  %570() /* ty=(Tensor[(168), float32],) */
}

def @func_12530() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %571 = @func_9368() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %572 = %571.2;
  %573 = @func_8911() /* ty=Tensor[(7, 16, 11), float64] */;
  (%572, %573)
}

def @func_10627() -> (Tensor[(160), uint64],) {
  %574 = @func_10587() /* ty=Tensor[(160), uint64] */;
  (%574,)
}

def @func_4944(%var_4906: Tensor[(7, 16, 11), float64], %var_4917: Tensor[(264, 1), float32], %var_4918: Tensor[(6, 28), float32], %var_4919: Tensor[(1056), float64], %var_4920: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), uint32], Tensor[(180), int8], Tensor[(264, 1), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(6, 28), float32], Tensor[(7, 16, 11), float32], Tensor[(600), float64], int8) {
  %575 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %576 = %575.0;
  %577 = cast(%var_4906, dtype="uint32") /* ty=Tensor[(7, 16, 11), uint32] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%576, dtype="uint32") /* ty=Tensor[(7, 16, 11), uint32] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %581 = cast(%var_4917, dtype="float32") /* ty=Tensor[(264, 1), float32] */;
  %582 = cast(%var_4917, dtype="float32") /* ty=Tensor[(264, 1), float32] */;
  %583 = cast(%var_4918, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %584 = cast(%var_4919, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %585 = cast(%var_4920, dtype="int8") /* ty=Tensor[(180), int8] */;
  %586 = cast(%var_4917, dtype="float32") /* ty=Tensor[(264, 1), float32] */;
  %587 = reshape(%581, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %588 = reshape(%582, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %589 = reshape(%583, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %590 = reshape(%584, newshape=[88, 12]) /* ty=Tensor[(88, 12), float64] */;
  %591 = reshape(%585, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %592 = reshape(%586, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float32] */;
  %593 = @func_3531(%587, %588, %589, %590, %591, %592) /* ty=(Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) */;
  %594 = cast(%var_4918, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %595 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %597 = cast(meta[relay.Constant][35] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %598 = cast(meta[relay.Constant][36] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %599 = reshape(%596, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %600 = reshape(%597, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %601 = reshape(%598, newshape=[]) /* ty=int8 */;
  %602 = @func_3429(%599, %600, %601) /* ty=(Tensor[(400), float64], Tensor[(192), float32], Tensor[(7, 16, 11), float32], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(16, ?, 10), bool], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 5, 10), float64]) */;
  %603 = add(%579, %580) /* ty=Tensor[(7, 16, 11), uint32] */;
  %604 = %593.5;
  %605 = asin(%594) /* ty=Tensor[(6, 28), float32] */;
  %606 = %602.2;
  (%603, %604, %var_4917, %var_4919, %var_4920, %595, %605, %606, meta[relay.Constant][35] /* ty=Tensor[(600), float64] */, meta[relay.Constant][36] /* ty=int8 */)
}

def @func_10120() -> Tensor[(160), uint64] {
  @func_10118() /* ty=Tensor[(160), uint64] */
}

def @func_11996() -> (Tensor[(7, 16, 11), float64], Tensor[(16, ?, 10), uint64], Tensor[(4, 264), float64], Tensor[(7, 16, 11), float64]) {
  %607 = @func_9481() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %608 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 264), float64] */, dtype="float64") /* ty=Tensor[(4, 264), float64] */;
  %609 = reshape(%608, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %610 = @func_8692(%609) /* ty=(Tensor[(160), uint64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(3, 60), int8], Tensor[(7, 16, 11), float64], Tensor[(1152), float64], Tensor[(16, ?, 10), uint64]) */;
  %611 = %607.0;
  %612 = %610.8;
  %613 = @func_11917() /* ty=Tensor[(7, 16, 11), float64] */;
  (%611, %612, meta[relay.Constant][37] /* ty=Tensor[(4, 264), float64] */, %613)
}

def @func_15384() -> (Tensor[(160), uint64], Tensor[(16, 13, 9), float32], Tensor[(1872), float32]) {
  %614 = @func_9153() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %615 = cast(meta[relay.Constant][38] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %616 = reshape(%615, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %617 = %614.0;
  %618 = @func_6808(%616) /* ty=Tensor[(16, 13, 9), float32] */;
  (%617, %618, meta[relay.Constant][38] /* ty=Tensor[(1872), float32] */)
}

def @func_2561(%var_2559: Tensor[(600), float64]) -> (Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) {
  @func_2558(%var_2559) /* ty=(Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) */
}

def @func_11690(%var_11675: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(9, 14, 10), float64]) {
  %619 = cast(%var_11675, dtype="float64") /* ty=Tensor[(9, 14, 10), float64] */;
  %620 = cast(%var_11675, dtype="float64") /* ty=Tensor[(9, 14, 10), float64] */;
  %621 = sinh(%619) /* ty=Tensor[(9, 14, 10), float64] */;
  %622 = log2(%620) /* ty=Tensor[(9, 14, 10), float64] */;
  (%621, %622)
}

def @func_1181(%var_1179: Tensor[(9, 9, 4), float64], %var_1180: Tensor[(180, 1), int8]) -> (Tensor[(9, 9, 4), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180, 1), int8]) {
  @func_1177(%var_1179, %var_1180) /* ty=(Tensor[(9, 9, 4), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180, 1), int8]) */
}

def @func_11930() -> Tensor[(160), uint64] {
  %624 = fn () -> Tensor[(160), uint64] {
    %623 = @func_9688() /* ty=(Tensor[(160), uint64],) */;
    %623.0
  };
  %624() /* ty=Tensor[(160), uint64] */
}

def @func_12893() -> Tensor[(7, 16, 11), float64] {
  %626 = fn () -> Tensor[(7, 16, 11), float64] {
    %625 = @func_9246() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
    %625.1
  };
  %626() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_901(%var_900: Tensor[(6, 16, 2), float32]) -> (Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) {
  %636 = fn (%var_878: Tensor[(6, 16, 2), float32]) -> (Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) {
    %627 = cast(%var_878, dtype="float32") /* ty=Tensor[(6, 16, 2), float32] */;
    %628 = cast(8.15177f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %629 = reshape(%628, newshape=[]) /* ty=float64 */;
    %630 = @func_526(%629) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
    %631 = %630.2;
    %632 = cast(%631, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %633 = reshape(%632, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
    %634 = sigmoid(%627) /* ty=Tensor[(6, 16, 2), float32] */;
    %635 = @func_334(%633) /* ty=Tensor[(16, ?, 10), uint64] */;
    (%634, %631, 8.15177f64 /* ty=float64 */, %635)
  };
  %636(%var_900) /* ty=(Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) */
}

def @func_14630() -> Tensor[(160), uint64] {
  %637 = @func_6384() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %637.1
}

def @func_9285() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) {
  %638 = @func_7924() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */;
  %639 = %638.2;
  %640 = @func_7090() /* ty=Tensor[(7, 16, 11), float32] */;
  (%639, %640)
}

def @func_9690() -> (Tensor[(160), uint64],) {
  @func_9688() /* ty=(Tensor[(160), uint64],) */
}

def @func_2228(%var_2205: Tensor[(8, 9, 16), float64]) -> Tensor[(8, 9, 16), float64] {
  %641 = cast(%var_2205, dtype="float64") /* ty=Tensor[(8, 9, 16), float64] */;
  acosh(%641) /* ty=Tensor[(8, 9, 16), float64] */
}

def @func_10887() -> (Tensor[(7, 16, 11), uint64],) {
  %643 = fn () -> (Tensor[(7, 16, 11), uint64],) {
    %642 = @func_6415() /* ty=Tensor[(7, 16, 11), uint64] */;
    (%642,)
  };
  %643() /* ty=(Tensor[(7, 16, 11), uint64],) */
}

def @func_3916(%var_3915: Tensor[(2, 300), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(2, 300), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(160), uint64]) {
  %664 = fn (%var_3868: Tensor[(2, 300), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(2, 300), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(160), uint64]) {
    %644 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
    %645 = cast(%var_3868, dtype="float64") /* ty=Tensor[(2, 300), float64] */;
    %646 = reshape(%645, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
    %647 = cast(meta[relay.Constant][39] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %648 = cast(meta[relay.Constant][40] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
    %649 = reshape(%647, newshape=[]) /* ty=int8 */;
    %650 = reshape(%648, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
    %651 = @func_1124(%649, %650) /* ty=(Tensor[(3, 10, 6), int8],) */;
    %652 = cast(%var_3868, dtype="float64") /* ty=Tensor[(2, 300), float64] */;
    %653 = reshape(%652, newshape=[600]) /* ty=Tensor[(600), float64] */;
    %654 = @func_2558(%653) /* ty=(Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) */;
    %655 = %654.1;
    %656 = cast(%655, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
    %657 = reshape(%656, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %658 = @func_3046(%657) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */;
    %659 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
    %660 = %644.0;
    %661 = @func_1012(%646) /* ty=Tensor[(12, 5, 10), float64] */;
    %662 = %651.0;
    %663 = %658.0;
    (%659, %660, %661, %var_3868, %662, meta[relay.Constant][39] /* ty=int8 */, meta[relay.Constant][40] /* ty=Tensor[(180), int8] */, %655, %663)
  };
  %664(%var_3915) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(2, 300), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 14, 1), float32], Tensor[(160), uint64]) */
}

def @func_4498(%var_4495: Tensor[(400, 1), float64], %var_4496: Tensor[(192), float32], %var_4497: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) {
  %679 = fn (%var_4467: Tensor[(400, 1), float64], %var_4468: Tensor[(192), float32], %var_4483: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) {
    %665 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %666 = cast(%var_4467, dtype="float64") /* ty=Tensor[(400, 1), float64] */;
    %667 = cast(%var_4468, dtype="float32") /* ty=Tensor[(192), float32] */;
    %668 = reshape(%666, newshape=[400]) /* ty=Tensor[(400), float64] */;
    %669 = reshape(%667, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %670 = @func_3081(%668, %669) /* ty=(Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) */;
    %671 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
    %672 = cast(%var_4483, dtype="uint64") /* ty=Tensor[(7, 16, 11), uint64] */;
    %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
    %674 = cast(%671, dtype="uint64") /* ty=Tensor[(7, 16, 11), uint64] */;
    %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %676 = %665.0;
    %677 = %670.3;
    %678 = maximum(%674, %675) /* ty=Tensor[(7, 16, 11), uint64] */;
    (%676, %677, %var_4467, %var_4468, %678)
  };
  %679(%var_4495, %var_4496, %var_4497) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) */
}

def @func_14800() -> (Tensor[(7, 16, 11), float64],) {
  %682 = fn () -> (Tensor[(7, 16, 11), float64],) {
    %680 = @func_9810() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %681 = %680.1;
    (%681,)
  };
  %682() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_14284() -> Tensor[(160), uint64] {
  %683 = @func_7924() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */;
  %683.0
}

def @func_379(%var_377: Tensor[(12, 14, 1), float32]) -> (Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
  @func_376(%var_377) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */
}

def @func_13737() -> Tensor[(160), uint64] {
  @func_13735() /* ty=Tensor[(160), uint64] */
}

def @func_3337(%var_3335: uint16, %var_3336: Tensor[(2, 7, 16), uint16]) -> Tensor[(2, 7, 16), float64] {
  @func_3333(%var_3335, %var_3336) /* ty=Tensor[(2, 7, 16), float64] */
}

def @func_10776() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %684 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %685 = @func_7957() /* ty=Tensor[(160), uint64] */;
  %686 = %684.0;
  (%685, %686)
}

def @func_15732() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %691 = fn () -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
    %687 = @func_11455() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %688 = @func_11545() /* ty=Tensor[(160), uint64] */;
    %689 = @func_8859() /* ty=Tensor[(160), uint64] */;
    %690 = %687.0;
    (%688, %689, %690)
  };
  %691() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_7219() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(160, 1), uint64]) {
  @func_7217() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(160, 1), uint64]) */
}

def @func_12023(%var_12022: Tensor[(210), float64]) -> (Tensor[(160), uint64], Tensor[(14, 3, 5), float64], Tensor[(210), float64], Tensor[(400), float64], Tensor[(4, 48), float32]) {
  %702 = fn (%var_12005: Tensor[(210), float64]) -> (Tensor[(160), uint64], Tensor[(14, 3, 5), float64], Tensor[(210), float64], Tensor[(400), float64], Tensor[(4, 48), float32]) {
    %692 = @func_2906() /* ty=(Tensor[(160), uint64],) */;
    %693 = cast(%var_12005, dtype="float64") /* ty=Tensor[(210), float64] */;
    %694 = reshape(%693, newshape=[14, 3, 5]) /* ty=Tensor[(14, 3, 5), float64] */;
    %695 = @func_10159(%694) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64]) */;
    %696 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 48), float32] */, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
    %697 = reshape(%696, newshape=[24, 8]) /* ty=Tensor[(24, 8), float32] */;
    %698 = @func_5915(%697) /* ty=(Tensor[(160), uint64], Tensor[(4, 48), bool], Tensor[(400), float64], Tensor[(24, 8), float32]) */;
    %699 = %692.0;
    %700 = %695.1;
    %701 = %698.2;
    (%699, %700, %var_12005, %701, meta[relay.Constant][41] /* ty=Tensor[(4, 48), float32] */)
  };
  %702(%var_12022) /* ty=(Tensor[(160), uint64], Tensor[(14, 3, 5), float64], Tensor[(210), float64], Tensor[(400), float64], Tensor[(4, 48), float32]) */
}

def @func_11424(%var_11377: Tensor[(162), float32], %var_11417: Tensor[(1872), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(162), int32], Tensor[(162), float32], Tensor[(160), uint64], Tensor[(1872), float32]) {
  %703 = @func_10289() /* ty=(Tensor[(160), uint64],) */;
  %704 = cast(meta[relay.Constant][42] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %705 = cast(%var_11377, dtype="float32") /* ty=Tensor[(162), float32] */;
  %706 = reshape(%704, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
  %707 = reshape(%705, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %708 = @func_10507(%706, %707) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(162), int32]) */;
  %709 = @func_9467() /* ty=(Tensor[(160), uint64],) */;
  %710 = cast(%var_11417, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %711 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(1872), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %712 = cast(meta[relay.Constant][42] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?), float32] */;
  %714 = @func_5207() /* ty=Tensor[(160), uint64] */;
  %715 = %703.0;
  %716 = %708.6;
  %717 = %709.0;
  %718 = add(%712, %713) /* ty=Tensor[(1872), float32] */;
  (%714, %715, %716, %var_11377, %717, %718)
}

def @func_7050() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %722 = fn () -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
    %719 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %720 = %719.0;
    %721 = @func_5014() /* ty=Tensor[(7, 16, 11), float64] */;
    (%720, %721)
  };
  %722() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_8152() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %727 = fn () -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
    %723 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
    %724 = @func_3949() /* ty=(Tensor[(160), uint64],) */;
    %725 = %723.0;
    %726 = %724.0;
    (%725, %726)
  };
  %727() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_2906() -> (Tensor[(160), uint64],) {
  %728 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %729 = %728.0;
  (%729,)
}

def @func_14900() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %734 = fn () -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
    %730 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
    %731 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %732 = %730.0;
    %733 = %731.1;
    (%732, %733)
  };
  %734() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_9482() -> (Tensor[(7, 16, 11), float64],) {
  %737 = fn () -> (Tensor[(7, 16, 11), float64],) {
    %735 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %736 = %735.0;
    (%736,)
  };
  %737() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_4330() -> (Tensor[(7, 16, 11), float64],) {
  @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_8913() -> Tensor[(7, 16, 11), float64] {
  @func_8911() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_11197() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64]) {
  %743 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64]) {
    %738 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %739 = @func_9125() /* ty=(Tensor[(160), uint64],) */;
    %740 = @func_10077() /* ty=Tensor[(160), uint64] */;
    %741 = %738.0;
    %742 = %739.0;
    (%740, %741, %742)
  };
  %743() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64]) */
}

def @func_6213(%var_6212: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32]) {
  %752 = fn (%var_6184: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32]) {
    %744 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
    %745 = cast(%var_6184, dtype="float32") /* ty=Tensor[(168), float32] */;
    %746 = reshape(%745, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
    %747 = @func_376(%746) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
    %748 = @func_5207() /* ty=Tensor[(160), uint64] */;
    %749 = @func_5207() /* ty=Tensor[(160), uint64] */;
    %750 = %744.0;
    %751 = %747.0;
    (%748, %749, %750, %751, %var_6184)
  };
  %752(%var_6212) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32]) */
}

def @func_5940() -> (Tensor[(7, 16, 11), float64],) {
  %753 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %754 = %753.0;
  (%754,)
}

def @func_13441() -> Tensor[(9, 15, 13), float64] {
  %756 = fn () -> Tensor[(9, 15, 13), float64] {
    %755 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 15, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 15, 13), float64] */;
    rsqrt(%755) /* ty=Tensor[(9, 15, 13), float64] */
  };
  %756() /* ty=Tensor[(9, 15, 13), float64] */
}

def @func_1600(%var_1597: int64, %var_1598: Tensor[(1, 16), int64], %var_1599: Tensor[(160), uint64]) -> (Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
  %763 = fn (%var_1580: int64, %var_1581: Tensor[(1, 16), int64], %var_1593: Tensor[(160), uint64]) -> (Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) {
    %757 = cast(%var_1580, dtype="int64") /* ty=int64 */;
    %758 = cast(%var_1581, dtype="int64") /* ty=Tensor[(1, 16), int64] */;
    %759 = cast(%var_1593, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %760 = reshape(%759, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
    %761 = bitwise_and(%757, %758) /* ty=Tensor[(1, 16), int64] */;
    %762 = @func_334(%760) /* ty=Tensor[(16, ?, 10), uint64] */;
    (%761, %762, %var_1593)
  };
  %763(%var_1597, %var_1598, %var_1599) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */
}

def @func_15386() -> (Tensor[(160), uint64], Tensor[(16, 13, 9), float32], Tensor[(1872), float32]) {
  @func_15384() /* ty=(Tensor[(160), uint64], Tensor[(16, 13, 9), float32], Tensor[(1872), float32]) */
}

def @func_4982() -> Tensor[(160), uint64] {
  %765 = fn () -> Tensor[(160), uint64] {
    %764 = @func_3496() /* ty=(Tensor[(160), uint64],) */;
    %764.0
  };
  %765() /* ty=Tensor[(160), uint64] */
}

def @func_2022() -> (Tensor[(7, 16, 11), float64],) {
  @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_8766() -> (Tensor[(1152), float64],) {
  %768 = fn () -> (Tensor[(1152), float64],) {
    %766 = @func_3000() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) */;
    %767 = %766.2;
    (%767,)
  };
  %768() /* ty=(Tensor[(1152), float64],) */
}

def @func_7715(%var_7713: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) {
  @func_7712(%var_7713) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) */
}

def @func_7164(%var_7162: Tensor[(9, 3, 6), float32], %var_7163: Tensor[(1872), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(9, 3, 6), uint8], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(6, 16, 2), float32], Tensor[(1, 192), float32]) {
  @func_7160(%var_7162, %var_7163) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(9, 3, 6), uint8], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(6, 16, 2), float32], Tensor[(1, 192), float32]) */
}

def @func_8513() -> Tensor[(7, 16, 11), float64] {
  %770 = fn () -> Tensor[(7, 16, 11), float64] {
    %769 = @func_7449() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) */;
    %769.1
  };
  %770() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_14456() -> (Tensor[(7, 16, 11), float64],) {
  %771 = @func_9533() /* ty=Tensor[(7, 16, 11), float64] */;
  (%771,)
}

def @func_2620(%var_2608: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(6, 16, 2), float32], Tensor[(192), float32]) {
  %772 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %773 = cast(%var_2608, dtype="float32") /* ty=Tensor[(192), float32] */;
  %774 = reshape(%773, newshape=[6, 16, 2]) /* ty=Tensor[(6, 16, 2), float32] */;
  %775 = @func_899(%774) /* ty=(Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) */;
  %776 = %772.1;
  %777 = %775.0;
  (%776, %777, %var_2608)
}

def @func_6385() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %781 = fn () -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
    %778 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
    %779 = @func_3755() /* ty=Tensor[(160), uint64] */;
    %780 = %778.0;
    (%779, %780)
  };
  %781() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_3434(%var_3431: Tensor[(7, 16, 11), float64], %var_3432: Tensor[(600), float64], %var_3433: int8) -> (Tensor[(400), float64], Tensor[(192), float32], Tensor[(7, 16, 11), float32], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(16, ?, 10), bool], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 5, 10), float64]) {
  @func_3429(%var_3431, %var_3432, %var_3433) /* ty=(Tensor[(400), float64], Tensor[(192), float32], Tensor[(7, 16, 11), float32], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(16, ?, 10), bool], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 5, 10), float64]) */
}

def @func_14458() -> (Tensor[(7, 16, 11), float64],) {
  @func_14456() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_11789() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32]) {
  %782 = cast(meta[relay.Constant][44] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %783 = reshape(%782, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %784 = @func_3046(%783) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */;
  %785 = @func_11545() /* ty=Tensor[(160), uint64] */;
  %786 = %784.0;
  (%785, %786, meta[relay.Constant][44] /* ty=Tensor[(168), float32] */)
}

def @func_5918(%var_5916: Tensor[(24, 8), float32]) -> (Tensor[(160), uint64], Tensor[(4, 48), bool], Tensor[(400), float64], Tensor[(24, 8), float32]) {
  @func_5915(%var_5916) /* ty=(Tensor[(160), uint64], Tensor[(4, 48), bool], Tensor[(400), float64], Tensor[(24, 8), float32]) */
}

def @func_2277() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) {
  @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */
}

def @func_5597(%var_5596: Tensor[(24, 48), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) {
  %796 = fn (%var_5564: Tensor[(24, 48), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) {
    %787 = cast(%var_5564, dtype="float64") /* ty=Tensor[(24, 48), float64] */;
    %788 = reshape(%787, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), float64] */;
    %789 = @func_2228(%788) /* ty=Tensor[(8, 9, 16), float64] */;
    %790 = cast(%789, dtype="float64") /* ty=Tensor[(8, 9, 16), float64] */;
    %791 = sin(%790) /* ty=Tensor[(8, 9, 16), float64] */;
    %792 = cast(%791, dtype="float64") /* ty=Tensor[(8, 9, 16), float64] */;
    %793 = @func_4992() /* ty=Tensor[(7, 16, 11), float64] */;
    %794 = @func_3755() /* ty=Tensor[(160), uint64] */;
    %795 = acos(%792) /* ty=Tensor[(8, 9, 16), float64] */;
    (%793, %794, %var_5564, %795)
  };
  %796(%var_5596) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) */
}

def @func_5667() -> Tensor[(7, 16, 11), float64] {
  %798 = fn () -> Tensor[(7, 16, 11), float64] {
    %797 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %797.0
  };
  %798() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_2020() -> (Tensor[(7, 16, 11), float64],) {
  %799 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 16, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %800 = acosh(%799) /* ty=Tensor[(7, 16, 11), float64] */;
  (%800,)
}

def @func_15283() -> (Tensor[(160), uint64],) {
  %801 = @func_12572() /* ty=(Tensor[(160), uint64],) */;
  %802 = %801.0;
  (%802,)
}

def @func_6618() -> Tensor[(7, 16, 11), float64] {
  @func_6616() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_13218(%var_13214: Tensor[(1260), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) {
  %803 = @func_11602() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %804 = @func_12130() /* ty=(Tensor[(160), uint64],) */;
  %805 = @func_9246() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %806 = cast(%var_13214, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %807 = reshape(%806, newshape=[9, 14, 10]) /* ty=Tensor[(9, 14, 10), float64] */;
  %808 = @func_11690(%807) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(9, 14, 10), float64]) */;
  %809 = %803.1;
  %810 = %804.0;
  %811 = %805.1;
  %812 = %808.0;
  (%809, %810, %811, %812, %var_13214)
}

def @func_4951(%var_4946: Tensor[(7, 16, 11), float64], %var_4947: Tensor[(264, 1), float32], %var_4948: Tensor[(6, 28), float32], %var_4949: Tensor[(1056), float64], %var_4950: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), uint32], Tensor[(180), int8], Tensor[(264, 1), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(6, 28), float32], Tensor[(7, 16, 11), float32], Tensor[(600), float64], int8) {
  @func_4944(%var_4946, %var_4947, %var_4948, %var_4949, %var_4950) /* ty=(Tensor[(7, 16, 11), uint32], Tensor[(180), int8], Tensor[(264, 1), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(6, 28), float32], Tensor[(7, 16, 11), float32], Tensor[(600), float64], int8) */
}

def @func_14149() -> (Tensor[(160), uint64],) {
  %813 = @func_9125() /* ty=(Tensor[(160), uint64],) */;
  %814 = %813.0;
  (%814,)
}

def @func_5015() -> Tensor[(7, 16, 11), float64] {
  %816 = fn () -> Tensor[(7, 16, 11), float64] {
    %815 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %815.0
  };
  %816() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_13927(%var_13925: Tensor[(3, 15, 16), uint64], %var_13926: Tensor[(3, 15, 16), uint64]) -> Tensor[(3, 15, 16), bool] {
  @func_13923(%var_13925, %var_13926) /* ty=Tensor[(3, 15, 16), bool] */
}

def @func_13221(%var_13219: Tensor[(1260), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) {
  @func_13218(%var_13219) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) */
}

def @func_2231(%var_2229: Tensor[(8, 9, 16), float64]) -> Tensor[(8, 9, 16), float64] {
  @func_2228(%var_2229) /* ty=Tensor[(8, 9, 16), float64] */
}

def @func_9467() -> (Tensor[(160), uint64],) {
  %817 = @func_9285() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) */;
  %818 = %817.0;
  (%818,)
}

def @func_11546() -> Tensor[(160), uint64] {
  %819 = fn () -> Tensor[(160), uint64] {
    @func_3755() /* ty=Tensor[(160), uint64] */
  };
  %819() /* ty=Tensor[(160), uint64] */
}

def @func_8425() -> (Tensor[(7, 16, 11), float64],) {
  %821 = fn () -> (Tensor[(7, 16, 11), float64],) {
    %820 = @func_2693() /* ty=Tensor[(7, 16, 11), float64] */;
    (%820,)
  };
  %821() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_9524() -> (Tensor[(160), uint64],) {
  %824 = fn () -> (Tensor[(160), uint64],) {
    %822 = @func_7924() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */;
    %823 = %822.0;
    (%823,)
  };
  %824() /* ty=(Tensor[(160), uint64],) */
}

def @func_8458() -> (Tensor[(160), uint64],) {
  @func_8456() /* ty=(Tensor[(160), uint64],) */
}

def @func_10730() -> (Tensor[(7, 16, 11), float64],) {
  @func_10728() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_14370(%var_14361: Tensor[(600), float64]) -> (Tensor[(7, 16, 11), float32], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(600), float64]) {
  %825 = @func_9285() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) */;
  %826 = cast(%var_14361, dtype="float64") /* ty=Tensor[(600), float64] */;
  %827 = reshape(%826, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %828 = %825.1;
  %829 = @func_9950() /* ty=Tensor[(160), uint64] */;
  %830 = @func_1012(%827) /* ty=Tensor[(12, 5, 10), float64] */;
  (%828, %829, %830, %var_14361)
}

def @func_9811() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %835 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
    %831 = @func_8456() /* ty=(Tensor[(160), uint64],) */;
    %832 = @func_8253() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
    %833 = %831.0;
    %834 = %832.2;
    (%833, %834)
  };
  %835() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_9469() -> (Tensor[(160), uint64],) {
  @func_9467() /* ty=(Tensor[(160), uint64],) */
}

def @func_2400(%var_2399: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), int16],) {
  %848 = fn (%var_2371: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), int16],) {
    %836 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %837 = %836.0;
    %838 = cast(%var_2371, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
    %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
    %840 = cast(%837, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
    %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %842 = mod(%840, %841) /* ty=Tensor[(7, 16, 11), float64] */;
    %843 = cast(%842, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
    %844 = shape_of(%var_2371, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(%var_2371, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %847 = subtract(%845, %846) /* ty=Tensor[(7, 16, 11), int16] */;
    (%847,)
  };
  %848(%var_2399) /* ty=(Tensor[(7, 16, 11), int16],) */
}

def @func_7487(%var_7482: Tensor[(192), float32]) -> (Tensor[(10, 3, 3), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(400), float64], Tensor[(192), float32]) {
  %849 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 3, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 3), float32] */;
  %850 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %851 = cast(meta[relay.Constant][47] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %852 = cast(%var_7482, dtype="float32") /* ty=Tensor[(192), float32] */;
  %853 = reshape(%851, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %854 = reshape(%852, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %855 = @func_3081(%853, %854) /* ty=(Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) */;
  %856 = acosh(%849) /* ty=Tensor[(10, 3, 3), float32] */;
  %857 = %850.0;
  %858 = %855.2;
  (%856, %857, %858, meta[relay.Constant][47] /* ty=Tensor[(400), float64] */, %var_7482)
}

def @func_14828() -> (Tensor[(160), uint64],) {
  %859 = @func_8151() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %860 = %859.0;
  (%860,)
}

def @func_10589() -> Tensor[(160), uint64] {
  @func_10587() /* ty=Tensor[(160), uint64] */
}

def @func_10349(%var_10347: Tensor[(3, 14, 13), int8], %var_10348: Tensor[(3, 14, 13), int8]) -> Tensor[(3, 14, 13), int8] {
  %865 = fn (%var_10333: Tensor[(3, 14, 13), int8], %var_10334: Tensor[(3, 14, 13), int8]) -> Tensor[(3, 14, 13), int8] {
    %861 = cast(%var_10334, dtype="int8") /* ty=Tensor[(3, 14, 13), int8] */;
    %862 = shape_of(%var_10333, dtype="int32") /* ty=Tensor[(3), int32] */;
    %863 = cast(%var_10333, dtype="int8") /* ty=Tensor[(3, 14, 13), int8] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_xor(%863, %864) /* ty=Tensor[(3, 14, 13), int8] */
  };
  %865(%var_10347, %var_10348) /* ty=Tensor[(3, 14, 13), int8] */
}

def @func_3951() -> (Tensor[(160), uint64],) {
  @func_3949() /* ty=(Tensor[(160), uint64],) */
}

def @func_9534() -> Tensor[(7, 16, 11), float64] {
  %867 = fn () -> Tensor[(7, 16, 11), float64] {
    %866 = @func_8424() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %866.0
  };
  %867() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_8729() -> (Tensor[(160), uint64],) {
  %870 = fn () -> (Tensor[(160), uint64],) {
    %868 = @func_8554() /* ty=(Tensor[(160), uint64],) */;
    %869 = %868.0;
    (%869,)
  };
  %870() /* ty=(Tensor[(160), uint64],) */
}

def @func_8321(%var_8259: Tensor[(5, 9, 9), float64], %var_8277: Tensor[(7, 16, 11), float64], %var_8303: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(8, 9, 16), float64], Tensor[(288, 4), float64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(5, 9, 9), bool]) {
  %871 = @func_8253() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
  %872 = %871.2;
  %873 = cast(%var_8277, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %874 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%872, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %877 = @func_7619() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %878 = cast(meta[relay.Constant][48] /* ty=Tensor[(288, 4), float64] */, dtype="float64") /* ty=Tensor[(288, 4), float64] */;
  %879 = reshape(%878, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), float64] */;
  %880 = cast(%var_8303, dtype="float32") /* ty=Tensor[(168), float32] */;
  %881 = reshape(%880, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %882 = @func_3046(%881) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */;
  %883 = cast(%var_8259, dtype="float64") /* ty=Tensor[(5, 9, 9), float64] */;
  %884 = sqrt(%883) /* ty=Tensor[(5, 9, 9), float64] */;
  %885 = cast(%var_8259, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%884, dtype="bool") /* ty=Tensor[(5, 9, 9), bool] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %889 = floor_divide(%875, %876) /* ty=Tensor[(7, 16, 11), float64] */;
  %890 = %877.1;
  %891 = @func_2228(%879) /* ty=Tensor[(8, 9, 16), float64] */;
  %892 = %882.0;
  %893 = not_equal(%887, %888) /* ty=Tensor[(5, 9, 9), bool] */;
  (%889, %890, %891, meta[relay.Constant][48] /* ty=Tensor[(288, 4), float64] */, %892, %var_8303, %893)
}

def @func_4992() -> Tensor[(7, 16, 11), float64] {
  @func_2693() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_3949() -> (Tensor[(160), uint64],) {
  %894 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %895 = %894.1;
  (%895,)
}

def @func_5171() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_13157() -> (Tensor[(160), uint64],) {
  %898 = fn () -> (Tensor[(160), uint64],) {
    %896 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
    %897 = %896.0;
    (%897,)
  };
  %898() /* ty=(Tensor[(160), uint64],) */
}

def @func_2801() -> Tensor[(7, 16, 11), float64] {
  @func_2799() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_13464(%var_13442: Tensor[(13, 16, 12), float32]) -> (Tensor[(13, 16, 12), float32],) {
  %899 = cast(%var_13442, dtype="float32") /* ty=Tensor[(13, 16, 12), float32] */;
  %900 = cosh(%899) /* ty=Tensor[(13, 16, 12), float32] */;
  (%900,)
}

def @func_6529() -> (Tensor[(160), uint64],) {
  %903 = fn () -> (Tensor[(160), uint64],) {
    %901 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
    %902 = %901.0;
    (%902,)
  };
  %903() /* ty=(Tensor[(160), uint64],) */
}

def @func_11046() -> (Tensor[(160), uint64], Tensor[(192), float32], Tensor[(8, 50), float64], Tensor[(192), float32], Tensor[(1232), float64]) {
  @func_11044() /* ty=(Tensor[(160), uint64], Tensor[(192), float32], Tensor[(8, 50), float64], Tensor[(192), float32], Tensor[(1232), float64]) */
}

def @func_2845() -> (Tensor[(160), uint64],) {
  %904 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %905 = %904.1;
  (%905,)
}

def @func_5526() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %910 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
    %906 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
    %907 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %908 = %906.0;
    %909 = %907.2;
    (%908, %909)
  };
  %910() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_11918() -> Tensor[(7, 16, 11), float64] {
  %911 = fn () -> Tensor[(7, 16, 11), float64] {
    @func_8512() /* ty=Tensor[(7, 16, 11), float64] */
  };
  %911() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_12968(%var_12967: Tensor[(9, 7, 4), float32]) -> (Tensor[(2, 7, 16), float64], uint16, Tensor[(112, 2), uint16], Tensor[(9, 7, 4), float32]) {
  %926 = fn (%var_12934: Tensor[(9, 7, 4), float32]) -> (Tensor[(2, 7, 16), float64], uint16, Tensor[(112, 2), uint16], Tensor[(9, 7, 4), float32]) {
    %912 = cast(meta[relay.Constant][49] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %913 = cast(meta[relay.Constant][50] /* ty=Tensor[(112, 2), uint16] */, dtype="uint16") /* ty=Tensor[(112, 2), uint16] */;
    %914 = reshape(%912, newshape=[]) /* ty=uint16 */;
    %915 = reshape(%913, newshape=[2, 7, 16]) /* ty=Tensor[(2, 7, 16), uint16] */;
    %916 = cast(%var_12934, dtype="float32") /* ty=Tensor[(9, 7, 4), float32] */;
    %917 = acos(%916) /* ty=Tensor[(9, 7, 4), float32] */;
    %918 = cast(%917, dtype="float32") /* ty=Tensor[(9, 7, 4), float32] */;
    %919 = shape_of(%var_12934, dtype="int32") /* ty=Tensor[(3), int32] */;
    %920 = cast(%var_12934, dtype="float32") /* ty=Tensor[(9, 7, 4), float32] */;
    %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %922 = mod(%920, %921) /* ty=Tensor[(9, 7, 4), float32] */;
    %923 = cast(%922, dtype="float32") /* ty=Tensor[(9, 7, 4), float32] */;
    %924 = @func_3333(%914, %915) /* ty=Tensor[(2, 7, 16), float64] */;
    %925 = rsqrt(%923) /* ty=Tensor[(9, 7, 4), float32] */;
    (%924, meta[relay.Constant][49] /* ty=uint16 */, meta[relay.Constant][50] /* ty=Tensor[(112, 2), uint16] */, %925)
  };
  %926(%var_12967) /* ty=(Tensor[(2, 7, 16), float64], uint16, Tensor[(112, 2), uint16], Tensor[(9, 7, 4), float32]) */
}

def @func_7712(%var_7682: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) {
  %927 = cast(%var_7682, dtype="int8") /* ty=Tensor[(180), int8] */;
  %928 = reshape(%927, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %929 = @func_4724(%928) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) */;
  %930 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
  %931 = %929.1;
  (%930, %931, %var_7682)
}

def @func_1014(%var_1013: Tensor[(12, 5, 10), float64]) -> Tensor[(12, 5, 10), float64] {
  %933 = fn (%var_1001: Tensor[(12, 5, 10), float64]) -> Tensor[(12, 5, 10), float64] {
    %932 = cast(%var_1001, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
    asinh(%932) /* ty=Tensor[(12, 5, 10), float64] */
  };
  %933(%var_1013) /* ty=Tensor[(12, 5, 10), float64] */
}

def @func_6616() -> Tensor[(7, 16, 11), float64] {
  %934 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %934.0
}

def @func_11602() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %935 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
  %936 = @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %937 = %935.1;
  %938 = %936.0;
  (%937, %938)
}

def @func_15418() -> Tensor[(160), uint64] {
  %939 = fn () -> Tensor[(160), uint64] {
    @func_5207() /* ty=Tensor[(160), uint64] */
  };
  %939() /* ty=Tensor[(160), uint64] */
}

def @func_8969(%var_8967: int8, %var_8968: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8]) {
  %949 = fn (%var_8963: int8, %var_8964: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8]) {
    %940 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
    %941 = cast(%var_8963, dtype="int8") /* ty=int8 */;
    %942 = cast(%var_8964, dtype="int8") /* ty=Tensor[(180), int8] */;
    %943 = reshape(%941, newshape=[]) /* ty=int8 */;
    %944 = reshape(%942, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
    %945 = @func_1124(%943, %944) /* ty=(Tensor[(3, 10, 6), int8],) */;
    %946 = @func_4992() /* ty=Tensor[(7, 16, 11), float64] */;
    %947 = %940.0;
    %948 = %945.0;
    (%946, %947, %948, %var_8963, %var_8964)
  };
  %949(%var_8967, %var_8968) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8]) */
}

def @func_8555() -> (Tensor[(160), uint64],) {
  %952 = fn () -> (Tensor[(160), uint64],) {
    %950 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
    %951 = %950.0;
    (%951,)
  };
  %952() /* ty=(Tensor[(160), uint64],) */
}

def @func_4534() -> (Tensor[(7, 16, 11), float64],) {
  %953 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  (%953,)
}

def @func_14686() -> (Tensor[(160), uint64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) {
  %960 = fn () -> (Tensor[(160), uint64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) {
    %954 = @func_9125() /* ty=(Tensor[(160), uint64],) */;
    %955 = cast(meta[relay.Constant][51] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %956 = reshape(%955, newshape=[9, 14, 10]) /* ty=Tensor[(9, 14, 10), float64] */;
    %957 = @func_11690(%956) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(9, 14, 10), float64]) */;
    %958 = %954.0;
    %959 = %957.0;
    (%958, %959, meta[relay.Constant][51] /* ty=Tensor[(1260), float64] */)
  };
  %960() /* ty=(Tensor[(160), uint64], Tensor[(9, 14, 10), float64], Tensor[(1260), float64]) */
}

def @func_3429(%var_3377: Tensor[(7, 16, 11), float64], %var_3417: Tensor[(600), float64], %var_3424: int8) -> (Tensor[(400), float64], Tensor[(192), float32], Tensor[(7, 16, 11), float32], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(16, ?, 10), bool], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 5, 10), float64]) {
  %961 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %962 = %961.0;
  %963 = cast(%var_3377, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %967 = cast(%var_3417, dtype="float64") /* ty=Tensor[(600), float64] */;
  %968 = reshape(%967, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %969 = cast(meta[relay.Constant][52] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %970 = cast(meta[relay.Constant][53] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %971 = reshape(%969, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %972 = reshape(%970, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %973 = @func_3081(%971, %972) /* ty=(Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64]) */;
  %974 = %973.1;
  %975 = cast(%974, dtype="float64") /* ty=Tensor[(16, ?, 10), float64] */;
  %976 = atanh(%975) /* ty=Tensor[(16, ?, 10), float64] */;
  %977 = cast(%974, dtype="bool") /* ty=Tensor[(16, ?, 10), bool] */;
  %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%976, dtype="bool") /* ty=Tensor[(16, ?, 10), bool] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %981 = cast(%var_3424, dtype="int8") /* ty=int8 */;
  %982 = cast(meta[relay.Constant][54] /* ty=Tensor[(180), int8] */, dtype="int8") /* ty=Tensor[(180), int8] */;
  %983 = reshape(%981, newshape=[]) /* ty=int8 */;
  %984 = reshape(%982, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %985 = @func_1124(%983, %984) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %986 = cast(%var_3417, dtype="float64") /* ty=Tensor[(600), float64] */;
  %987 = reshape(%986, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %988 = divide(%965, %966) /* ty=Tensor[(7, 16, 11), float32] */;
  %989 = @func_1012(%968) /* ty=Tensor[(12, 5, 10), float64] */;
  %990 = logical_or(%979, %980) /* ty=Tensor[(16, ?, 10), bool] */;
  %991 = %985.0;
  %992 = @func_1012(%987) /* ty=Tensor[(12, 5, 10), float64] */;
  (meta[relay.Constant][52] /* ty=Tensor[(400), float64] */, meta[relay.Constant][53] /* ty=Tensor[(192), float32] */, %988, %989, %var_3417, %990, %991, %var_3424, meta[relay.Constant][54] /* ty=Tensor[(180), int8] */, %992)
}

def @func_8710() -> (Tensor[(7, 16, 11), uint64], Tensor[(160), uint64]) {
  %997 = fn () -> (Tensor[(7, 16, 11), uint64], Tensor[(160), uint64]) {
    %993 = @func_5626() /* ty=(Tensor[(7, 16, 11), uint64],) */;
    %994 = @func_7406() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %995 = %993.0;
    %996 = %994.0;
    (%995, %996)
  };
  %997() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(160), uint64]) */
}

def @func_9247() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %1002 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
    %998 = @func_7595() /* ty=(Tensor[(160), uint64],) */;
    %999 = %998.0;
    %1000 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
    %1001 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
    (%999, %1000, %1001)
  };
  %1002() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_8911() -> Tensor[(7, 16, 11), float64] {
  @func_2799() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_11044() -> (Tensor[(160), uint64], Tensor[(192), float32], Tensor[(8, 50), float64], Tensor[(192), float32], Tensor[(1232), float64]) {
  %1003 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
  %1004 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 50), float64] */, dtype="float64") /* ty=Tensor[(8, 50), float64] */;
  %1005 = cast(meta[relay.Constant][56] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1006 = cast(meta[relay.Constant][57] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1007 = reshape(%1004, newshape=[400, 1]) /* ty=Tensor[(400, 1), float64] */;
  %1008 = reshape(%1005, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1009 = reshape(%1006, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %1010 = @func_4494(%1007, %1008, %1009) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) */;
  %1011 = %1003.0;
  %1012 = %1010.3;
  (%1011, %1012, meta[relay.Constant][55] /* ty=Tensor[(8, 50), float64] */, meta[relay.Constant][56] /* ty=Tensor[(192), float32] */, meta[relay.Constant][57] /* ty=Tensor[(1232), float64] */)
}

def @func_9835() -> Tensor[(160), uint64] {
  %1014 = fn () -> Tensor[(160), uint64] {
    %1013 = @func_8728() /* ty=(Tensor[(160), uint64],) */;
    %1013.0
  };
  %1014() /* ty=Tensor[(160), uint64] */
}

def @func_10110() -> Tensor[(160), uint64] {
  %1015 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %1015.0
}

def @func_10629() -> (Tensor[(160), uint64],) {
  @func_10627() /* ty=(Tensor[(160), uint64],) */
}

def @func_12288() -> Tensor[(160), uint64] {
  @func_9597() /* ty=Tensor[(160), uint64] */
}

def @func_6583(%var_6582: Tensor[(9, 16, 10), uint64]) -> Tensor[(9, 16, 10), uint64] {
  %1020 = fn (%var_6574: Tensor[(9, 16, 10), uint64]) -> Tensor[(9, 16, 10), uint64] {
    %1016 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 16, 10), uint64] */, dtype="uint64") /* ty=Tensor[(9, 16, 10), uint64] */;
    %1017 = shape_of(%var_6574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1018 = cast(%var_6574, dtype="uint64") /* ty=Tensor[(9, 16, 10), uint64] */;
    %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%1018, %1019) /* ty=Tensor[(9, 16, 10), uint64] */
  };
  %1020(%var_6582) /* ty=Tensor[(9, 16, 10), uint64] */
}

def @func_2558(%var_2541: Tensor[(600), float64]) -> (Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) {
  %1021 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
  %1022 = cast(meta[relay.Constant][59] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1023 = reshape(%1022, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %1024 = @func_376(%1023) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1025 = %1024.0;
  %1026 = cast(%1025, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %1027 = reshape(%1026, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1028 = @func_1542(%1027) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1029 = cast(%var_2541, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1030 = reshape(%1029, newshape=[12, 5, 10]) /* ty=Tensor[(12, 5, 10), float64] */;
  %1031 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1032 = cast(meta[relay.Constant][60] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %1033 = %1021.1;
  %1034 = cast(%1033, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1035 = reshape(%1031, newshape=[]) /* ty=int64 */;
  %1036 = reshape(%1032, newshape=[1, 16]) /* ty=Tensor[(1, 16), int64] */;
  %1037 = reshape(%1034, newshape=[160]) /* ty=Tensor[(160), uint64] */;
  %1038 = @func_1596(%1035, %1036, %1037) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1039 = %1028.0;
  %1040 = @func_1012(%1030) /* ty=Tensor[(12, 5, 10), float64] */;
  %1041 = %1038.0;
  (%1033, %1025, meta[relay.Constant][59] /* ty=Tensor[(168), float32] */, %1039, %1040, %var_2541, %1041, 9 /* ty=int64 */, meta[relay.Constant][60] /* ty=Tensor[(16), int64] */)
}

def @func_9154() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1045 = fn () -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
    %1042 = @func_8151() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %1043 = %1042.1;
    %1044 = @func_5207() /* ty=Tensor[(160), uint64] */;
    (%1043, %1044)
  };
  %1045() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_9368() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %1046 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %1047 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1048 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1049 = %1046.0;
  %1050 = %1047.0;
  %1051 = %1048.0;
  (%1049, %1050, %1051)
}

def @func_14269(%var_14268: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %1062 = fn (%var_14223: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
    %1052 = @func_13355() /* ty=(Tensor[(160), uint64],) */;
    %1053 = cast(%var_14223, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1054 = reshape(%1053, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1055 = @func_3167(%1054) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32], Tensor[(168), float32]) */;
    %1056 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
    %1057 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %1058 = %1052.0;
    %1059 = %1055.1;
    %1060 = %1056.1;
    %1061 = %1057.0;
    (%1058, %1059, %var_14223, %1060, %1061)
  };
  %1062(%var_14268) /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_7547(%var_7502: Tensor[(192), float32], %var_7543: int8) -> (Tensor[(12, 14, 1), float32], Tensor[(192), float32], Tensor[(16), int64], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(4, 9, 5), bool], Tensor[(180), int8], Tensor[(1232), float64], int8) {
  %1063 = cast(%var_7502, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1064 = cast(meta[relay.Constant][61] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %1065 = reshape(%1063, newshape=[24, 8]) /* ty=Tensor[(24, 8), float32] */;
  %1066 = reshape(%1064, newshape=[16]) /* ty=Tensor[(16), int64] */;
  %1067 = @func_6120(%1065, %1066) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1, 160), uint64], Tensor[(400), float64], Tensor[(24, 8), float32], Tensor[(16), int64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(84, 2), float32]) */;
  %1068 = %1067.6;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(12, 14, 1), float32] */;
  %1070 = reshape(%1069, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %1071 = @func_376(%1070) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1072 = cast(meta[relay.Constant][62] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1073 = reshape(%1072, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %1074 = @func_2558(%1073) /* ty=(Tensor[(160), uint64], Tensor[(12, 14, 1), float32], Tensor[(168), float32], Tensor[(7, 11, 13), bool], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(1, 16), int64], int64, Tensor[(16), int64]) */;
  %1075 = cast(meta[relay.Constant][63] /* ty=Tensor[(4, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %1076 = sin(%1075) /* ty=Tensor[(4, 9, 5), float64] */;
  %1077 = cast(meta[relay.Constant][63] /* ty=Tensor[(4, 9, 5), float64] */, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
  %1078 = shape_of(%1076, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1079 = cast(%1076, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
  %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1081 = cast(meta[relay.Constant][64] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1082 = %1074.4;
  %1083 = cast(%1082, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %1084 = cast(%var_7543, dtype="int8") /* ty=int8 */;
  %1085 = reshape(%1081, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %1086 = reshape(%1083, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %1087 = reshape(%1084, newshape=[]) /* ty=int8 */;
  %1088 = @func_3429(%1085, %1086, %1087) /* ty=(Tensor[(400), float64], Tensor[(192), float32], Tensor[(7, 16, 11), float32], Tensor[(12, 5, 10), float64], Tensor[(600), float64], Tensor[(16, ?, 10), bool], Tensor[(3, 10, 6), int8], int8, Tensor[(180), int8], Tensor[(12, 5, 10), float64]) */;
  %1089 = %1071.2;
  %1090 = greater(%1079, %1080) /* ty=Tensor[(4, 9, 5), bool] */;
  %1091 = %1088.8;
  (%1068, %var_7502, meta[relay.Constant][61] /* ty=Tensor[(16), int64] */, %1089, %1082, meta[relay.Constant][62] /* ty=Tensor[(600), float64] */, %1090, %1091, meta[relay.Constant][64] /* ty=Tensor[(1232), float64] */, %var_7543)
}

def @func_9598() -> Tensor[(160), uint64] {
  %1093 = fn () -> Tensor[(160), uint64] {
    %1092 = @func_2888() /* ty=(Tensor[(160), uint64],) */;
    %1092.0
  };
  %1093() /* ty=Tensor[(160), uint64] */
}

def @func_7450() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) {
  %1099 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) {
    %1094 = @func_4328() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %1095 = @func_5318() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) */;
    %1096 = @func_3782() /* ty=Tensor[(160), uint64] */;
    %1097 = %1094.0;
    %1098 = %1095.2;
    (%1096, %1097, %1098)
  };
  %1099() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) */
}

def @func_9719() -> (Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float32]) {
  %1100 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  %1101 = cast(%1100, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
  %1102 = @func_6415() /* ty=Tensor[(7, 16, 11), uint64] */;
  %1103 = sinh(%1101) /* ty=Tensor[(7, 16, 11), float32] */;
  (%1102, %1103)
}

def @func_5942() -> (Tensor[(7, 16, 11), float64],) {
  @func_5940() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_6934() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %1107 = fn () -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
    %1104 = @func_2828() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %1105 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
    %1106 = %1104.0;
    (%1105, %1106)
  };
  %1107() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_2828() -> (Tensor[(7, 16, 11), float64],) {
  %1108 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  (%1108,)
}

def @func_10700() -> (Tensor[(160), uint64],) {
  %1110 = fn () -> (Tensor[(160), uint64],) {
    %1109 = @func_10110() /* ty=Tensor[(160), uint64] */;
    (%1109,)
  };
  %1110() /* ty=(Tensor[(160), uint64],) */
}

def @func_10112() -> Tensor[(160), uint64] {
  @func_10110() /* ty=Tensor[(160), uint64] */
}

def @func_13356() -> (Tensor[(160), uint64],) {
  %1113 = fn () -> (Tensor[(160), uint64],) {
    %1111 = @func_12693() /* ty=(Tensor[(160), uint64],) */;
    %1112 = %1111.0;
    (%1112,)
  };
  %1113() /* ty=(Tensor[(160), uint64],) */
}

def @func_6902(%var_6900: Tensor[(400), float64], %var_6901: Tensor[(48, 4), float32]) -> (Tensor[(7, 16, 11), uint64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(400), float64], Tensor[(48, 4), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) {
  @func_6898(%var_6900, %var_6901) /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(400), float64], Tensor[(48, 4), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) */
}

def @func_9514() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32]) {
  %1114 = @func_7030() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1115 = @func_9285() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) */;
  %1116 = %1114.0;
  %1117 = %1115.1;
  (%1116, %1117)
}

def @func_9287() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) {
  @func_9285() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32]) */
}

def @func_5270() -> Tensor[(160), uint64] {
  @func_5268() /* ty=Tensor[(160), uint64] */
}

def @func_14373(%var_14371: Tensor[(600), float64]) -> (Tensor[(7, 16, 11), float32], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(600), float64]) {
  @func_14370(%var_14371) /* ty=(Tensor[(7, 16, 11), float32], Tensor[(160), uint64], Tensor[(12, 5, 10), float64], Tensor[(600), float64]) */
}

def @func_3002() -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) {
  @func_3000() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) */
}

def @func_12290() -> Tensor[(160), uint64] {
  @func_12288() /* ty=Tensor[(160), uint64] */
}

def @func_10332() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) {
  @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */
}

def @func_10778() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  @func_10776() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_13056() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
  %1122 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) {
    %1118 = @func_8151() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %1119 = %1118.0;
    %1120 = @func_12074() /* ty=Tensor[(7, 16, 11), float64] */;
    %1121 = @func_11917() /* ty=Tensor[(7, 16, 11), float64] */;
    (%1119, %1120, %1121)
  };
  %1122() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_3620(%var_3618: Tensor[(16, 16, 10), uint64]) -> (Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) {
  @func_3617(%var_3618) /* ty=(Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) */
}

def @func_5742() -> (Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1123 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1124 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1125 = %1123.0;
  %1126 = %1124.0;
  (%1125, %1126)
}

def @func_12463() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(192), float32]) {
  %1127 = cast(meta[relay.Constant][65] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1128 = reshape(%1127, newshape=[6, 16, 2]) /* ty=Tensor[(6, 16, 2), float32] */;
  %1129 = @func_899(%1128) /* ty=(Tensor[(6, 16, 2), float32], Tensor[(160), uint64], float64, Tensor[(16, ?, 10), uint64]) */;
  %1130 = @func_5666() /* ty=Tensor[(7, 16, 11), float64] */;
  %1131 = %1129.1;
  (%1130, %1131, meta[relay.Constant][65] /* ty=Tensor[(192), float32] */)
}

def @func_9721() -> (Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float32]) {
  @func_9719() /* ty=(Tensor[(7, 16, 11), uint64], Tensor[(7, 16, 11), float32]) */
}

def @func_1903(%var_1855: Tensor[(8, 11, 12), float64], %var_1866: float64, %var_1891: Tensor[(180), int8]) -> (Tensor[(8, 11, 12), float64], Tensor[(3, 10, 6), int8], Tensor[(180), int8], Tensor[(16, ?, 10), uint16], Tensor[(8, 11, 12), bool]) {
  %1132 = cast(%var_1855, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %1133 = log10(%1132) /* ty=Tensor[(8, 11, 12), float64] */;
  %1134 = cast(%var_1855, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %1135 = shape_of(%1133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1136 = cast(%1133, dtype="float64") /* ty=Tensor[(8, 11, 12), float64] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1138 = cast(%var_1866, dtype="int8") /* ty=int8 */;
  %1139 = cast(%var_1891, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1140 = reshape(%1138, newshape=[]) /* ty=int8 */;
  %1141 = reshape(%1139, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %1142 = @func_1124(%1140, %1141) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %1143 = cast(%var_1866, dtype="float64") /* ty=float64 */;
  %1144 = reshape(%1143, newshape=[]) /* ty=float64 */;
  %1145 = @func_526(%1144) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %1146 = %1145.3;
  %1147 = cast(%1146, dtype="uint16") /* ty=Tensor[(16, ?, 10), uint16] */;
  %1148 = cast(%var_1866, dtype="uint16") /* ty=uint16 */;
  %1149 = cast(%1133, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
  %1150 = cast(%var_1866, dtype="bool") /* ty=bool */;
  %1151 = divide(%1136, %1137) /* ty=Tensor[(8, 11, 12), float64] */;
  %1152 = %1142.0;
  %1153 = bitwise_and(%1147, %1148) /* ty=Tensor[(16, ?, 10), uint16] */;
  %1154 = less_equal(%1149, %1150) /* ty=Tensor[(8, 11, 12), bool] */;
  (%1151, %1152, %var_1891, %1153, %1154)
}

def @func_10290() -> (Tensor[(160), uint64],) {
  %1156 = fn () -> (Tensor[(160), uint64],) {
    %1155 = @func_9597() /* ty=Tensor[(160), uint64] */;
    (%1155,)
  };
  %1156() /* ty=(Tensor[(160), uint64],) */
}

def @func_1124(%var_1118: int8, %var_1119: Tensor[(3, 10, 6), int8]) -> (Tensor[(3, 10, 6), int8],) {
  %1157 = cast(%var_1118, dtype="int8") /* ty=int8 */;
  %1158 = cast(%var_1119, dtype="int8") /* ty=Tensor[(3, 10, 6), int8] */;
  %1159 = maximum(%1157, %1158) /* ty=Tensor[(3, 10, 6), int8] */;
  (%1159,)
}

def @func_8695(%var_8693: Tensor[(1056), float64]) -> (Tensor[(160), uint64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(3, 60), int8], Tensor[(7, 16, 11), float64], Tensor[(1152), float64], Tensor[(16, ?, 10), uint64]) {
  @func_8692(%var_8693) /* ty=(Tensor[(160), uint64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(3, 60), int8], Tensor[(7, 16, 11), float64], Tensor[(1152), float64], Tensor[(16, ?, 10), uint64]) */
}

def @func_7620() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) {
  %1166 = fn () -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) {
    %1160 = @func_7217() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(160, 1), uint64]) */;
    %1161 = cast(meta[relay.Constant][66] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1162 = reshape(%1161, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
    %1163 = @func_376(%1162) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
    %1164 = %1160.0;
    %1165 = %1163.2;
    (%1164, %1165, meta[relay.Constant][66] /* ty=Tensor[(168), float32] */)
  };
  %1166() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */
}

def @func_6009() -> (Tensor[(160), uint64],) {
  %1169 = fn () -> (Tensor[(160), uint64],) {
    %1167 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
    %1168 = %1167.1;
    (%1168,)
  };
  %1169() /* ty=(Tensor[(160), uint64],) */
}

def @func_7958() -> Tensor[(160), uint64] {
  %1171 = fn () -> Tensor[(160), uint64] {
    %1170 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
    %1170.0
  };
  %1171() /* ty=Tensor[(160), uint64] */
}

def @func_15567(%var_15566: Tensor[(13, 12, 1), int16]) -> (Tensor[(13, 12, 1), bool],) {
  %1175 = fn (%var_15561: Tensor[(13, 12, 1), int16]) -> (Tensor[(13, 12, 1), bool],) {
    %1172 = cast(meta[relay.Constant][67] /* ty=int16 */, dtype="bool") /* ty=bool */;
    %1173 = cast(%var_15561, dtype="bool") /* ty=Tensor[(13, 12, 1), bool] */;
    %1174 = equal(%1172, %1173) /* ty=Tensor[(13, 12, 1), bool] */;
    (%1174,)
  };
  %1175(%var_15566) /* ty=(Tensor[(13, 12, 1), bool],) */
}

def @func_15772() -> Tensor[(160), uint64] {
  @func_15770() /* ty=Tensor[(160), uint64] */
}

def @func_13393() -> Tensor[(160), uint64] {
  @func_11545() /* ty=Tensor[(160), uint64] */
}

def @func_14632() -> Tensor[(160), uint64] {
  @func_14630() /* ty=Tensor[(160), uint64] */
}

def @func_12165(%var_12164: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(168), float32]) {
  %1181 = fn (%var_12161: Tensor[(168), float32]) -> (Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(168), float32]) {
    %1176 = cast(%var_12161, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1177 = reshape(%1176, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
    %1178 = @func_376(%1177) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
    %1179 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
    %1180 = %1178.0;
    (%1179, %1180, %var_12161)
  };
  %1181(%var_12164) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(168), float32]) */
}

def @func_14038(%var_14034: Tensor[(70), int8], %var_14035: Tensor[(350), int8], %var_14036: int64, %var_14037: Tensor[(160), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(5, 10, 7), int8], Tensor[(70), int8], Tensor[(350), int8], Tensor[(16, ?, 10), uint64], int64, Tensor[(16), int64], Tensor[(160), uint64], Tensor[(160), uint64]) {
  @func_14032(%var_14034, %var_14035, %var_14036, %var_14037) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64], Tensor[(5, 10, 7), int8], Tensor[(70), int8], Tensor[(350), int8], Tensor[(16, ?, 10), uint64], int64, Tensor[(16), int64], Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_14729(%var_14727: Tensor[(1, 400), float64], %var_14728: Tensor[(192), float32]) -> (Tensor[(12, 11, 1), int16], Tensor[(7, 16, 11), float64], Tensor[(1, 400), float64], Tensor[(192), float32]) {
  %1193 = fn (%var_14709: Tensor[(1, 400), float64], %var_14710: Tensor[(192), float32]) -> (Tensor[(12, 11, 1), int16], Tensor[(7, 16, 11), float64], Tensor[(1, 400), float64], Tensor[(192), float32]) {
    %1182 = cast(meta[relay.Constant][68] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1183 = cast(meta[relay.Constant][69] /* ty=Tensor[(12, 11, 1), int16] */, dtype="int16") /* ty=Tensor[(12, 11, 1), int16] */;
    %1184 = cast(%var_14709, dtype="float64") /* ty=Tensor[(1, 400), float64] */;
    %1185 = cast(%var_14710, dtype="float32") /* ty=Tensor[(192), float32] */;
    %1186 = cast(%var_14710, dtype="float64") /* ty=Tensor[(192), float64] */;
    %1187 = reshape(%1184, newshape=[400]) /* ty=Tensor[(400), float64] */;
    %1188 = reshape(%1185, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
    %1189 = reshape(%1186, newshape=[4, 48]) /* ty=Tensor[(4, 48), float64] */;
    %1190 = @func_5852(%1187, %1188, %1189) /* ty=(Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) */;
    %1191 = add(%1182, %1183) /* ty=Tensor[(12, 11, 1), int16] */;
    %1192 = %1190.1;
    (%1191, %1192, %var_14709, %var_14710)
  };
  %1193(%var_14727, %var_14728) /* ty=(Tensor[(12, 11, 1), int16], Tensor[(7, 16, 11), float64], Tensor[(1, 400), float64], Tensor[(192), float32]) */
}

def @func_15898(%var_15897: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), bool], Tensor[(1232), float64], Tensor[(180), int8]) {
  %1204 = fn (%var_15891: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), bool], Tensor[(1232), float64], Tensor[(180), int8]) {
    %1194 = @func_15020() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %1195 = cast(meta[relay.Constant][70] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %1196 = cast(meta[relay.Constant][70] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %1197 = cast(%var_15891, dtype="int8") /* ty=Tensor[(180), int8] */;
    %1198 = reshape(%1195, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %1199 = reshape(%1196, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %1200 = reshape(%1197, newshape=[180]) /* ty=Tensor[(180), int8] */;
    %1201 = @func_4274(%1198, %1199, %1200) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(12, 14, 1), float32], Tensor[(600), float64], Tensor[(7, 16, 11), bool], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64]) */;
    %1202 = %1194.1;
    %1203 = %1201.5;
    (%1202, %1203, meta[relay.Constant][70] /* ty=Tensor[(1232), float64] */, %var_15891)
  };
  %1204(%var_15897) /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), bool], Tensor[(1232), float64], Tensor[(180), int8]) */
}

def @func_7271() -> Tensor[(7, 16, 11), uint64] {
  @func_6415() /* ty=Tensor[(7, 16, 11), uint64] */
}

def @func_4536() -> (Tensor[(7, 16, 11), float64],) {
  @func_4534() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_14528() -> Tensor[(160), uint64] {
  %1206 = fn () -> Tensor[(160), uint64] {
    %1205 = @func_9153() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %1205.0
  };
  %1206() /* ty=Tensor[(160), uint64] */
}

def @func_3617(%var_3591: Tensor[(16, 16, 10), uint64]) -> (Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) {
  %1207 = @func_3496() /* ty=(Tensor[(160), uint64],) */;
  %1208 = cast(1.51854f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1209 = reshape(%1208, newshape=[]) /* ty=float64 */;
  %1210 = @func_526(%1209) /* ty=(Tensor[(16, 8, 3), bool], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) */;
  %1211 = %1210.3;
  %1212 = cast(%1211, dtype="int32") /* ty=Tensor[(16, ?, 10), int32] */;
  %1213 = cast(%var_3591, dtype="int32") /* ty=Tensor[(16, 16, 10), int32] */;
  %1214 = bitwise_xor(%1212, %1213) /* ty=Tensor[(16, 16, 10), int32] */;
  %1215 = cast(%1214, dtype="float32") /* ty=Tensor[(16, 16, 10), float32] */;
  %1216 = %1207.0;
  %1217 = log(%1215) /* ty=Tensor[(16, 16, 10), float32] */;
  (%1216, 1.51854f64 /* ty=float64 */, %1217)
}

def @func_12805() -> (Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) {
  %1221 = fn () -> (Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) {
    %1218 = @func_11499() /* ty=(Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) */;
    %1219 = %1218.0;
    %1220 = @func_3100() /* ty=Tensor[(7, 16, 11), float64] */;
    (%1219, %1220)
  };
  %1221() /* ty=(Tensor[(2560), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_7407() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  %1226 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
    %1222 = @func_6384() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %1223 = @func_7049() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
    %1224 = %1222.1;
    %1225 = %1223.1;
    (%1224, %1225)
  };
  %1226() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_10118() -> Tensor[(160), uint64] {
  @func_8859() /* ty=Tensor[(160), uint64] */
}

def @func_5256() -> (Tensor[(168), float32],) {
  %1229 = fn () -> (Tensor[(168), float32],) {
    %1227 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
    %1228 = %1227.0;
    (%1228,)
  };
  %1229() /* ty=(Tensor[(168), float32],) */
}

def @func_1177(%var_1156: Tensor[(9, 9, 4), float64], %var_1171: Tensor[(180, 1), int8]) -> (Tensor[(9, 9, 4), float64], Tensor[(3, 10, 6), int8], int8, Tensor[(180, 1), int8]) {
  %1230 = cast(%var_1156, dtype="float64") /* ty=Tensor[(9, 9, 4), float64] */;
  %1231 = cast(meta[relay.Constant][71] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1232 = cast(%var_1171, dtype="int8") /* ty=Tensor[(180, 1), int8] */;
  %1233 = reshape(%1231, newshape=[]) /* ty=int8 */;
  %1234 = reshape(%1232, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), int8] */;
  %1235 = @func_1124(%1233, %1234) /* ty=(Tensor[(3, 10, 6), int8],) */;
  %1236 = atanh(%1230) /* ty=Tensor[(9, 9, 4), float64] */;
  %1237 = %1235.0;
  (%1236, %1237, meta[relay.Constant][71] /* ty=int8 */, %var_1171)
}

def @func_13572() -> Tensor[(160), uint64] {
  @func_13570() /* ty=Tensor[(160), uint64] */
}

def @func_14286() -> Tensor[(160), uint64] {
  @func_14284() /* ty=Tensor[(160), uint64] */
}

def @func_9516() -> (Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32]) {
  @func_9514() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32]) */
}

def @func_15523(%var_15521: Tensor[(168, 1), float32]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32], Tensor[(168, 1), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
  @func_15520(%var_15521) /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float32], Tensor[(168, 1), float32], Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_14560(%var_14558: Tensor[(400), float64], %var_14559: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(9, 15, 13), float64], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(1232), float64]) {
  %1248 = fn (%var_14553: Tensor[(400), float64], %var_14554: Tensor[(192), float32]) -> (Tensor[(160), uint64], Tensor[(9, 15, 13), float64], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(1232), float64]) {
    %1238 = cast(%var_14553, dtype="float64") /* ty=Tensor[(400), float64] */;
    %1239 = cast(%var_14554, dtype="float32") /* ty=Tensor[(192), float32] */;
    %1240 = cast(meta[relay.Constant][72] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %1241 = reshape(%1238, newshape=[400, 1]) /* ty=Tensor[(400, 1), float64] */;
    %1242 = reshape(%1239, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %1243 = reshape(%1240, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %1244 = @func_4494(%1241, %1242, %1243) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) */;
    %1245 = @func_10587() /* ty=Tensor[(160), uint64] */;
    %1246 = @func_13440() /* ty=Tensor[(9, 15, 13), float64] */;
    %1247 = %1244.0;
    (%1245, %1246, %1247, %var_14553, %var_14554, meta[relay.Constant][72] /* ty=Tensor[(1232), float64] */)
  };
  %1248(%var_14558, %var_14559) /* ty=(Tensor[(160), uint64], Tensor[(9, 15, 13), float64], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(192), float32], Tensor[(1232), float64]) */
}

def @func_3048(%var_3047: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) {
  %1256 = fn (%var_3018: Tensor[(168), float32]) -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) {
    %1249 = cast(%var_3018, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1250 = reshape(%1249, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1251 = @func_1542(%1250) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(16, ?, 10), uint64], float64, Tensor[(160), uint64], Tensor[(168), float32]) */;
    %1252 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
    %1253 = cast(%1252, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
    %1254 = %1251.3;
    %1255 = rsqrt(%1253) /* ty=Tensor[(7, 16, 11), float32] */;
    (%1254, %var_3018, %1255)
  };
  %1256(%var_3047) /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), float32]) */
}

def @func_6811(%var_6809: Tensor[(16, 13, 9), float32]) -> Tensor[(16, 13, 9), float32] {
  @func_6808(%var_6809) /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_14830() -> (Tensor[(160), uint64],) {
  @func_14828() /* ty=(Tensor[(160), uint64],) */
}

def @func_10161(%var_10160: Tensor[(14, 3, 5), float64]) -> (Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64]) {
  %1261 = fn (%var_10140: Tensor[(14, 3, 5), float64]) -> (Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64]) {
    %1257 = cast(%var_10140, dtype="float64") /* ty=Tensor[(14, 3, 5), float64] */;
    %1258 = cast(%var_10140, dtype="float64") /* ty=Tensor[(14, 3, 5), float64] */;
    %1259 = tan(%1257) /* ty=Tensor[(14, 3, 5), float64] */;
    %1260 = cos(%1258) /* ty=Tensor[(14, 3, 5), float64] */;
    (%1259, %1260)
  };
  %1261(%var_10160) /* ty=(Tensor[(14, 3, 5), float64], Tensor[(14, 3, 5), float64]) */
}

def @func_337(%var_335: Tensor[(16, 1, 10), uint64]) -> Tensor[(16, ?, 10), uint64] {
  @func_334(%var_335) /* ty=Tensor[(16, ?, 10), uint64] */
}

def @func_7091() -> Tensor[(7, 16, 11), float32] {
  %1265 = fn () -> Tensor[(7, 16, 11), float32] {
    %1262 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
    %1263 = %1262.0;
    %1264 = cast(%1263, dtype="float32") /* ty=Tensor[(7, 16, 11), float32] */;
    cosh(%1264) /* ty=Tensor[(7, 16, 11), float32] */
  };
  %1265() /* ty=Tensor[(7, 16, 11), float32] */
}

def @func_7595() -> (Tensor[(160), uint64],) {
  %1266 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
  %1267 = %1266.0;
  (%1267,)
}

def @func_3000() -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) {
  %1268 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
  %1269 = cast(meta[relay.Constant][73] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %1270 = reshape(%1269, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
  %1271 = @func_2351(%1270) /* ty=(Tensor[(168), float32], Tensor[(168), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) */;
  %1272 = %1268.0;
  %1273 = %1271.0;
  (%1272, %1273, meta[relay.Constant][73] /* ty=Tensor[(1152), float64] */)
}

def @func_12694() -> (Tensor[(160), uint64],) {
  %1276 = fn () -> (Tensor[(160), uint64],) {
    %1274 = @func_10289() /* ty=(Tensor[(160), uint64],) */;
    %1275 = %1274.0;
    (%1275,)
  };
  %1276() /* ty=(Tensor[(160), uint64],) */
}

def @func_15130() -> (Tensor[(160), uint64], Tensor[(9, 14, 10), float64]) {
  @func_15128() /* ty=(Tensor[(160), uint64], Tensor[(9, 14, 10), float64]) */
}

def @func_8860() -> Tensor[(160), uint64] {
  %1278 = fn () -> Tensor[(160), uint64] {
    %1277 = @func_8151() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
    %1277.1
  };
  %1278() /* ty=Tensor[(160), uint64] */
}

def @func_13256(%var_13255: Tensor[(14, 10, 11), float64]) -> (Tensor[(14, 10, 11), float64],) {
  %1281 = fn (%var_13248: Tensor[(14, 10, 11), float64]) -> (Tensor[(14, 10, 11), float64],) {
    %1279 = cast(%var_13248, dtype="float64") /* ty=Tensor[(14, 10, 11), float64] */;
    %1280 = acos(%1279) /* ty=Tensor[(14, 10, 11), float64] */;
    (%1280,)
  };
  %1281(%var_13255) /* ty=(Tensor[(14, 10, 11), float64],) */
}

def @func_6416() -> Tensor[(7, 16, 11), uint64] {
  %1283 = fn () -> Tensor[(7, 16, 11), uint64] {
    %1282 = @func_5626() /* ty=(Tensor[(7, 16, 11), uint64],) */;
    %1282.0
  };
  %1283() /* ty=Tensor[(7, 16, 11), uint64] */
}

def @func_8456() -> (Tensor[(160), uint64],) {
  %1284 = @func_4009() /* ty=(Tensor[(160), uint64],) */;
  %1285 = %1284.0;
  (%1285,)
}

def @func_8847() -> (Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(16, ?, 10), uint64]) {
  %1286 = @func_3000() /* ty=(Tensor[(160), uint64], Tensor[(168), float32], Tensor[(1152), float64]) */;
  %1287 = @func_3496() /* ty=(Tensor[(160), uint64],) */;
  %1288 = %1287.0;
  %1289 = cast(%1288, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1290 = reshape(%1289, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %1291 = @func_4981() /* ty=Tensor[(160), uint64] */;
  %1292 = %1286.1;
  %1293 = @func_334(%1290) /* ty=Tensor[(16, ?, 10), uint64] */;
  (%1291, %1292, %1288, %1293)
}

def @func_15466(%var_15465: Tensor[(1152), float64]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(7, 16, 11), float64]) {
  %1306 = fn (%var_15429: Tensor[(1152), float64]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(7, 16, 11), float64]) {
    %1294 = @func_12572() /* ty=(Tensor[(160), uint64],) */;
    %1295 = cast(meta[relay.Constant][74] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1296 = reshape(%1295, newshape=[3, 56]) /* ty=Tensor[(3, 56), float32] */;
    %1297 = @func_8136(%1296) /* ty=(Tensor[(160), uint64], Tensor[(3, 56), float32], Tensor[(12, 14, ?), uint16]) */;
    %1298 = cast(%var_15429, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %1299 = reshape(%1298, newshape=[24, 48]) /* ty=Tensor[(24, 48), float64] */;
    %1300 = @func_5595(%1299) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) */;
    %1301 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
    %1302 = %1294.0;
    %1303 = %1297.0;
    %1304 = %1300.1;
    %1305 = %1301.0;
    (%1302, %1303, meta[relay.Constant][74] /* ty=Tensor[(168), float32] */, %1304, %var_15429, %1305)
  };
  %1306(%var_15465) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(7, 16, 11), float64]) */
}

def @func_4150() -> Tensor[(7, 16, 11), float64] {
  %1307 = fn () -> Tensor[(7, 16, 11), float64] {
    @func_2799() /* ty=Tensor[(7, 16, 11), float64] */
  };
  %1307() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_5319() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) {
  %1316 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) {
    %1308 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
    %1309 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %1310 = %1309.1;
    %1311 = cast(%1310, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
    %1312 = reshape(%1311, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %1313 = @func_2744(%1312) /* ty=(Tensor[(16, 16, 12), int16], Tensor[(3072), int16], Tensor[(7, 16, 11), uint64]) */;
    %1314 = %1308.1;
    %1315 = %1313.2;
    (%1314, %1310, %1315)
  };
  %1316() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), uint64]) */
}

def @func_8139(%var_8137: Tensor[(3, 56), float32]) -> (Tensor[(160), uint64], Tensor[(3, 56), float32], Tensor[(12, 14, ?), uint16]) {
  @func_8136(%var_8137) /* ty=(Tensor[(160), uint64], Tensor[(3, 56), float32], Tensor[(12, 14, ?), uint16]) */
}

def @func_15055(%var_15054: Tensor[(64, 40), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(64, 40), uint64]) {
  %1323 = fn (%var_15045: Tensor[(64, 40), uint64]) -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(64, 40), uint64]) {
    %1317 = @func_6933() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float64]) */;
    %1318 = cast(%var_15045, dtype="uint64") /* ty=Tensor[(64, 40), uint64] */;
    %1319 = reshape(%1318, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), uint64] */;
    %1320 = @func_3617(%1319) /* ty=(Tensor[(160), uint64], float64, Tensor[(16, 16, 10), float32]) */;
    %1321 = %1317.0;
    %1322 = %1320.0;
    (%1321, %1322, %var_15045)
  };
  %1323(%var_15054) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(64, 40), uint64]) */
}

def @func_1693(%var_1691: Tensor[(16, 16, 12), int16], %var_1692: Tensor[(16, 16, 12), int16]) -> (Tensor[(16, 16, 12), int16],) {
  %1329 = fn (%var_1659: Tensor[(16, 16, 12), int16], %var_1660: Tensor[(16, 16, 12), int16]) -> (Tensor[(16, 16, 12), int16],) {
    %1324 = cast(%var_1660, dtype="int16") /* ty=Tensor[(16, 16, 12), int16] */;
    %1325 = shape_of(%var_1659, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1326 = cast(%var_1659, dtype="int16") /* ty=Tensor[(16, 16, 12), int16] */;
    %1327 = dyn.reshape(%1324, %1325, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1328 = subtract(%1326, %1327) /* ty=Tensor[(16, 16, 12), int16] */;
    (%1328,)
  };
  %1329(%var_1691, %var_1692) /* ty=(Tensor[(16, 16, 12), int16],) */
}

def @func_4010() -> (Tensor[(160), uint64],) {
  %1331 = fn () -> (Tensor[(160), uint64],) {
    %1330 = @func_3755() /* ty=Tensor[(160), uint64] */;
    (%1330,)
  };
  %1331() /* ty=(Tensor[(160), uint64],) */
}

def @func_9121(%var_9119: Tensor[(1872), float32]) -> (Tensor[(1152), float64], Tensor[(160), uint64], Tensor[(16, 13, 9), float32], Tensor[(1872), float32]) {
  @func_9118(%var_9119) /* ty=(Tensor[(1152), float64], Tensor[(160), uint64], Tensor[(16, 13, 9), float32], Tensor[(1872), float32]) */
}

def @func_7490(%var_7488: Tensor[(192), float32]) -> (Tensor[(10, 3, 3), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(400), float64], Tensor[(192), float32]) {
  @func_7487(%var_7488) /* ty=(Tensor[(10, 3, 3), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(400), float64], Tensor[(192), float32]) */
}

def @func_4614(%var_4606: Tensor[(6, 13, 11), int16], %var_4607: Tensor[(6, 13, 11), int16]) -> (Tensor[(6, 13, 11), int16],) {
  %1332 = cast(%var_4607, dtype="int16") /* ty=Tensor[(6, 13, 11), int16] */;
  %1333 = shape_of(%var_4606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1334 = cast(%var_4606, dtype="int16") /* ty=Tensor[(6, 13, 11), int16] */;
  %1335 = dyn.reshape(%1332, %1333, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1336 = bitwise_or(%1334, %1335) /* ty=Tensor[(6, 13, 11), int16] */;
  (%1336,)
}

def @func_8136(%var_8123: Tensor[(3, 56), float32]) -> (Tensor[(160), uint64], Tensor[(3, 56), float32], Tensor[(12, 14, ?), uint16]) {
  %1337 = @func_6384() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64]) */;
  %1338 = cast(%var_8123, dtype="float32") /* ty=Tensor[(3, 56), float32] */;
  %1339 = reshape(%1338, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
  %1340 = @func_376(%1339) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
  %1341 = %1340.0;
  %1342 = cast(%1341, dtype="float64") /* ty=Tensor[(12, 14, 1), float64] */;
  %1343 = exp(%1342) /* ty=Tensor[(12, 14, 1), float64] */;
  %1344 = cast(%1341, dtype="uint16") /* ty=Tensor[(12, 14, 1), uint16] */;
  %1345 = shape_of(%1343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1346 = cast(%1343, dtype="uint16") /* ty=Tensor[(12, 14, 1), uint16] */;
  %1347 = dyn.reshape(%1344, %1345, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1348 = %1337.1;
  %1349 = multiply(%1346, %1347) /* ty=Tensor[(12, 14, ?), uint16] */;
  (%1348, %var_8123, %1349)
}

def @func_10833(%var_10829: Tensor[(132, 2), float32], %var_10830: Tensor[(168), float32], %var_10831: Tensor[(1056), float64], %var_10832: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(180), int8], Tensor[(1232), float64], Tensor[(132, 2), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(264), float32]) {
  @func_10827(%var_10829, %var_10830, %var_10831, %var_10832) /* ty=(Tensor[(160), uint64], Tensor[(180), int8], Tensor[(1232), float64], Tensor[(132, 2), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(264), float32]) */
}

def @func_10078() -> Tensor[(160), uint64] {
  %1350 = fn () -> Tensor[(160), uint64] {
    @func_3755() /* ty=Tensor[(160), uint64] */
  };
  %1350() /* ty=Tensor[(160), uint64] */
}

def @func_6808(%var_6803: Tensor[(16, 13, 9), float32]) -> Tensor[(16, 13, 9), float32] {
  %1351 = cast(%var_6803, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  asin(%1351) /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_3531(%var_3512: Tensor[(6, 4, 11), float32], %var_3516: Tensor[(6, 4, 11), float32], %var_3522: Tensor[(168), float32], %var_3523: Tensor[(88, 12), float64], %var_3525: Tensor[(180), int8], %var_3527: Tensor[(6, 4, 11), float32]) -> (Tensor[(6, 4, 11), float32], Tensor[(1056), float64], Tensor[(168), float32], Tensor[(88, 12), float64], float64, Tensor[(180), int8], Tensor[(6, 4, 11), float64]) {
  %1352 = cast(%var_3512, dtype="float32") /* ty=Tensor[(6, 4, 11), float32] */;
  %1353 = acosh(%1352) /* ty=Tensor[(6, 4, 11), float32] */;
  %1354 = cast(%var_3516, dtype="float32") /* ty=Tensor[(6, 4, 11), float32] */;
  %1355 = shape_of(%1353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1356 = cast(%1353, dtype="float32") /* ty=Tensor[(6, 4, 11), float32] */;
  %1357 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1358 = cast(%var_3522, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1359 = cast(%var_3523, dtype="float64") /* ty=Tensor[(88, 12), float64] */;
  %1360 = cast(3.40362f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1361 = cast(%var_3525, dtype="int8") /* ty=Tensor[(180), int8] */;
  %1362 = reshape(%1358, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1363 = reshape(%1359, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %1364 = reshape(%1360, newshape=[]) /* ty=float64 */;
  %1365 = reshape(%1361, newshape=[180]) /* ty=Tensor[(180), int8] */;
  %1366 = @func_2669(%1362, %1363, %1364, %1365) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), float64], float64, Tensor[(180), int8]) */;
  %1367 = cast(%var_3527, dtype="float64") /* ty=Tensor[(6, 4, 11), float64] */;
  %1368 = shape_of(%1353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1369 = cast(%1353, dtype="float64") /* ty=Tensor[(6, 4, 11), float64] */;
  %1370 = dyn.reshape(%1367, %1368, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1371 = floor_divide(%1356, %1357) /* ty=Tensor[(6, 4, 11), float32] */;
  %1372 = %1366.4;
  %1373 = floor_mod(%1369, %1370) /* ty=Tensor[(6, 4, 11), float64] */;
  (%1371, %1372, %var_3522, %var_3523, 3.40362f64 /* ty=float64 */, %var_3525, %1373)
}

def @func_12074() -> Tensor[(7, 16, 11), float64] {
  @func_8512() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_12131() -> (Tensor[(160), uint64],) {
  %1376 = fn () -> (Tensor[(160), uint64],) {
    %1374 = @func_10699() /* ty=(Tensor[(160), uint64],) */;
    %1375 = %1374.0;
    (%1375,)
  };
  %1376() /* ty=(Tensor[(160), uint64],) */
}

def @func_11604() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  @func_11602() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_12564() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1382 = fn () -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(160), uint64]) {
    %1377 = @func_10330() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(2560), uint64]) */;
    %1378 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
    %1379 = @func_10222() /* ty=Tensor[(7, 16, 11), float64] */;
    %1380 = %1377.0;
    %1381 = %1378.0;
    (%1379, %1380, %1381)
  };
  %1382() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(160), uint64]) */
}

def @func_15770() -> Tensor[(160), uint64] {
  @func_12043() /* ty=Tensor[(160), uint64] */
}

def @func_8112(%var_8109: uint8, %var_8110: Tensor[(3, 2, 12), uint8], %var_8111: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(6, ?, 12), bool], Tensor[(3, 2, 12), bool], Tensor[(1440), uint64], Tensor[(105), int8], Tensor[(1260), int8], Tensor[(720, 2), uint64], Tensor[(3072), int16], Tensor[(7, 16, 11), float64], Tensor[(180), int8]) {
  %1417 = fn (%var_8040: uint8, %var_8055: Tensor[(3, 2, 12), uint8], %var_8099: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(6, ?, 12), bool], Tensor[(3, 2, 12), bool], Tensor[(1440), uint64], Tensor[(105), int8], Tensor[(1260), int8], Tensor[(720, 2), uint64], Tensor[(3072), int16], Tensor[(7, 16, 11), float64], Tensor[(180), int8]) {
    %1383 = cast(%var_8040, dtype="bool") /* ty=bool */;
    %1384 = cast(meta[relay.Constant][75] /* ty=Tensor[(6, 1, 12), uint8] */, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
    %1385 = equal(%1383, %1384) /* ty=Tensor[(6, 1, 12), bool] */;
    %1386 = cast(meta[relay.Constant][75] /* ty=Tensor[(6, 1, 12), uint8] */, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
    %1387 = cast(%var_8040, dtype="bool") /* ty=bool */;
    %1388 = not_equal(%1386, %1387) /* ty=Tensor[(6, 1, 12), bool] */;
    %1389 = cast(%1388, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
    %1390 = shape_of(%1385, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1391 = cast(%1385, dtype="bool") /* ty=Tensor[(6, 1, 12), bool] */;
    %1392 = dyn.reshape(%1389, %1390, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1393 = cast(%var_8040, dtype="bool") /* ty=bool */;
    %1394 = cast(%var_8055, dtype="bool") /* ty=Tensor[(3, 2, 12), bool] */;
    %1395 = logical_or(%1393, %1394) /* ty=Tensor[(3, 2, 12), bool] */;
    %1396 = cast(%1395, dtype="bool") /* ty=Tensor[(3, 2, 12), bool] */;
    %1397 = cast(%var_8040, dtype="bool") /* ty=bool */;
    %1398 = cast(meta[relay.Constant][76] /* ty=Tensor[(105), int8] */, dtype="int8") /* ty=Tensor[(105), int8] */;
    %1399 = cast(meta[relay.Constant][77] /* ty=Tensor[(1260), int8] */, dtype="int8") /* ty=Tensor[(1260), int8] */;
    %1400 = cast(meta[relay.Constant][78] /* ty=Tensor[(720, 2), uint64] */, dtype="uint64") /* ty=Tensor[(720, 2), uint64] */;
    %1401 = reshape(%1398, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), int8] */;
    %1402 = reshape(%1399, newshape=[15, 7, 12]) /* ty=Tensor[(15, 7, 12), int8] */;
    %1403 = reshape(%1400, newshape=[1440]) /* ty=Tensor[(1440), uint64] */;
    %1404 = @func_7022(%1401, %1402, %1403) /* ty=(Tensor[(9, 16, 10), uint64], Tensor[(1440), uint64], Tensor[(160), uint64], Tensor[(15, 7, 12), float64], Tensor[(168), float32]) */;
    %1405 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
    %1406 = cast(%1405, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
    %1407 = reshape(%1406, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
    %1408 = @func_2744(%1407) /* ty=(Tensor[(16, 16, 12), int16], Tensor[(3072), int16], Tensor[(7, 16, 11), uint64]) */;
    %1409 = cast(%var_8099, dtype="int8") /* ty=Tensor[(180), int8] */;
    %1410 = reshape(%1409, newshape=[180]) /* ty=Tensor[(180), int8] */;
    %1411 = @func_4724(%1410) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) */;
    %1412 = less_equal(%1391, %1392) /* ty=Tensor[(6, ?, 12), bool] */;
    %1413 = not_equal(%1396, %1397) /* ty=Tensor[(3, 2, 12), bool] */;
    %1414 = %1404.1;
    %1415 = %1408.1;
    %1416 = %1411.0;
    (%1405, %1412, %1413, %1414, meta[relay.Constant][76] /* ty=Tensor[(105), int8] */, meta[relay.Constant][77] /* ty=Tensor[(1260), int8] */, meta[relay.Constant][78] /* ty=Tensor[(720, 2), uint64] */, %1415, %1416, %var_8099)
  };
  %1417(%var_8109, %var_8110, %var_8111) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(6, ?, 12), bool], Tensor[(3, 2, 12), bool], Tensor[(1440), uint64], Tensor[(105), int8], Tensor[(1260), int8], Tensor[(720, 2), uint64], Tensor[(3072), int16], Tensor[(7, 16, 11), float64], Tensor[(180), int8]) */
}

def @func_5852(%var_5795: Tensor[(400), float64], %var_5796: Tensor[(4, 48), float32], %var_5843: Tensor[(4, 48), float64]) -> (Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) {
  %1418 = @func_5255() /* ty=(Tensor[(168), float32],) */;
  %1419 = @func_5169() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1420 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
  %1421 = cast(%var_5796, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %1422 = reshape(%1421, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1423 = @func_2620(%1422) /* ty=(Tensor[(160), uint64], Tensor[(6, 16, 2), float32], Tensor[(192), float32]) */;
  %1424 = cast(%var_5795, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1425 = cast(%var_5796, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %1426 = %1419.2;
  %1427 = cast(%1426, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %1428 = reshape(%1424, newshape=[400, 1]) /* ty=Tensor[(400, 1), float64] */;
  %1429 = reshape(%1425, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1430 = reshape(%1427, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %1431 = @func_4494(%1428, %1429, %1430) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(192), float32], Tensor[(400, 1), float64], Tensor[(192), float32], Tensor[(7, 16, 11), uint64]) */;
  %1432 = %1431.2;
  %1433 = cast(%1432, dtype="float32") /* ty=Tensor[(400, 1), float32] */;
  %1434 = cast(%var_5796, dtype="float64") /* ty=Tensor[(4, 48), float64] */;
  %1435 = log(%1434) /* ty=Tensor[(4, 48), float64] */;
  %1436 = cast(%var_5843, dtype="bool") /* ty=Tensor[(4, 48), bool] */;
  %1437 = shape_of(%1435, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1438 = cast(%1435, dtype="bool") /* ty=Tensor[(4, 48), bool] */;
  %1439 = dyn.reshape(%1436, %1437, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1440 = %1418.0;
  %1441 = %1420.2;
  %1442 = %1423.0;
  %1443 = sigmoid(%1433) /* ty=Tensor[(400, 1), float32] */;
  %1444 = not_equal(%1438, %1439) /* ty=Tensor[(4, 48), bool] */;
  %1445 = @func_5268() /* ty=Tensor[(160), uint64] */;
  (%1440, %1426, %var_5795, %1441, %1442, %1443, %1444, %1445)
}

def @func_2799() -> Tensor[(7, 16, 11), float64] {
  %1446 = @func_2020() /* ty=(Tensor[(7, 16, 11), float64],) */;
  %1446.0
}

def @func_7925() -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) {
  %1457 = fn () -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) {
    %1447 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
    %1448 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
    %1449 = @func_7595() /* ty=(Tensor[(160), uint64],) */;
    %1450 = cast(meta[relay.Constant][79] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %1451 = reshape(%1450, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
    %1452 = @func_2351(%1451) /* ty=(Tensor[(168), float32], Tensor[(168), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) */;
    %1453 = %1447.0;
    %1454 = %1448.0;
    %1455 = %1449.0;
    %1456 = %1452.3;
    (%1453, %1454, %1455, %1456, meta[relay.Constant][79] /* ty=Tensor[(1152), float64] */)
  };
  %1457() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */
}

def @func_15606() -> Tensor[(160), uint64] {
  %1458 = @func_9368() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1458.0
}

def @func_4994() -> Tensor[(7, 16, 11), float64] {
  @func_4992() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_7319(%var_7317: Tensor[(2, 8, 6), uint32], %var_7318: Tensor[(2, 8, 6), uint32]) -> (Tensor[(2, 8, 6), uint32],) {
  @func_7315(%var_7317, %var_7318) /* ty=(Tensor[(2, 8, 6), uint32],) */
}

def @func_3783() -> Tensor[(160), uint64] {
  %1460 = fn () -> Tensor[(160), uint64] {
    %1459 = @func_2488() /* ty=(Tensor[(168), float32], Tensor[(160), uint64]) */;
    %1459.1
  };
  %1460() /* ty=Tensor[(160), uint64] */
}

def @func_13685() -> (Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8]) {
  @func_13683() /* ty=(Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(6, 4, 11), float32], Tensor[(264), float32], Tensor[(168), float32], Tensor[(1056), float64], Tensor[(180), int8]) */
}

def @func_2675(%var_2671: Tensor[(168), float32], %var_2672: Tensor[(1056), float64], %var_2673: float64, %var_2674: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), float64], float64, Tensor[(180), int8]) {
  @func_2669(%var_2671, %var_2672, %var_2673, %var_2674) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), float64], float64, Tensor[(180), int8]) */
}

def @func_6898(%var_6867: Tensor[(400), float64], %var_6868: Tensor[(48, 4), float32]) -> (Tensor[(7, 16, 11), uint64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(400), float64], Tensor[(48, 4), float32], Tensor[(8, 9, 16), float64], Tensor[(1152), float64]) {
  %1461 = cast(meta[relay.Constant][80] /* ty=Tensor[(160), uint64] */, dtype="uint64") /* ty=Tensor[(160), uint64] */;
  %1462 = reshape(%1461, newshape=[16, 1, 10]) /* ty=Tensor[(16, 1, 10), uint64] */;
  %1463 = cast(%var_6867, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1464 = cast(%var_6868, dtype="float32") /* ty=Tensor[(48, 4), float32] */;
  %1465 = cast(%var_6868, dtype="float64") /* ty=Tensor[(48, 4), float64] */;
  %1466 = reshape(%1463, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1467 = reshape(%1464, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %1468 = reshape(%1465, newshape=[4, 48]) /* ty=Tensor[(4, 48), float64] */;
  %1469 = @func_5852(%1466, %1467, %1468) /* ty=(Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) */;
  %1470 = cast(meta[relay.Constant][81] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %1471 = reshape(%1470, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), float64] */;
  %1472 = @func_6415() /* ty=Tensor[(7, 16, 11), uint64] */;
  %1473 = @func_334(%1462) /* ty=Tensor[(16, ?, 10), uint64] */;
  %1474 = %1469.5;
  %1475 = @func_2228(%1471) /* ty=Tensor[(8, 9, 16), float64] */;
  (%1472, %1473, meta[relay.Constant][80] /* ty=Tensor[(160), uint64] */, %1474, %var_6867, %var_6868, %1475, meta[relay.Constant][81] /* ty=Tensor[(1152), float64] */)
}

def @func_4726(%var_4725: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) {
  %1485 = fn (%var_4716: Tensor[(180), int8]) -> (Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) {
    %1476 = @func_4149() /* ty=Tensor[(7, 16, 11), float64] */;
    %1477 = cast(%1476, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
    %1478 = cast(%1476, dtype="int16") /* ty=Tensor[(7, 16, 11), int16] */;
    %1479 = cast(%var_4716, dtype="int8") /* ty=Tensor[(180), int8] */;
    %1480 = reshape(%1477, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
    %1481 = reshape(%1478, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), int16] */;
    %1482 = reshape(%1479, newshape=[180]) /* ty=Tensor[(180), int8] */;
    %1483 = @func_3232(%1480, %1481, %1482) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */;
    %1484 = %1483.3;
    (%1476, %1484, %var_4716)
  };
  %1485(%var_4725) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(1056), float64], Tensor[(180), int8]) */
}

def @func_13570() -> Tensor[(160), uint64] {
  %1486 = @func_13156() /* ty=(Tensor[(160), uint64],) */;
  %1486.0
}

def @func_9370() -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) {
  @func_9368() /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */
}

def @func_15520(%var_15489: Tensor[(168, 1), float32]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float32], Tensor[(168, 1), float32], Tensor[(160), uint64], Tensor[(160), uint64]) {
  %1487 = @func_8728() /* ty=(Tensor[(160), uint64],) */;
  %1488 = cast(%var_15489, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
  %1489 = reshape(%1488, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1490 = @func_3167(%1489) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(7, 16, 11), float32], Tensor[(168), float32]) */;
  %1491 = %1487.0;
  %1492 = %1490.1;
  %1493 = @func_10315() /* ty=Tensor[(160), uint64] */;
  %1494 = @func_10587() /* ty=Tensor[(160), uint64] */;
  (%1491, %1492, %var_15489, %1493, %1494)
}

def @func_2747(%var_2745: Tensor[(7, 16, 11), float64]) -> (Tensor[(16, 16, 12), int16], Tensor[(3072), int16], Tensor[(7, 16, 11), uint64]) {
  @func_2744(%var_2745) /* ty=(Tensor[(16, 16, 12), int16], Tensor[(3072), int16], Tensor[(7, 16, 11), uint64]) */
}

def @func_6004(%var_6003: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(4, 308), float64], Tensor[(180), int8]) {
  %1505 = fn (%var_5996: Tensor[(180), int8]) -> (Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(4, 308), float64], Tensor[(180), int8]) {
    %1495 = @func_2845() /* ty=(Tensor[(160), uint64],) */;
    %1496 = cast(meta[relay.Constant][82] /* ty=Tensor[(4, 308), float64] */, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
    %1497 = cast(meta[relay.Constant][82] /* ty=Tensor[(4, 308), float64] */, dtype="int16") /* ty=Tensor[(4, 308), int16] */;
    %1498 = cast(%var_5996, dtype="int8") /* ty=Tensor[(180), int8] */;
    %1499 = reshape(%1496, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
    %1500 = reshape(%1497, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), int16] */;
    %1501 = reshape(%1498, newshape=[180]) /* ty=Tensor[(180), int8] */;
    %1502 = @func_3232(%1499, %1500, %1501) /* ty=(Tensor[(1152), float64], Tensor[(1232), float64], Tensor[(7, 16, 11), bool], Tensor[(1056), float64], float64, Tensor[(180), int8], Tensor[(7, 16, 11), float64], Tensor[(3, 10, 6), int8], Tensor[(16, ?, 10), uint64], Tensor[(16, ?, 10), float32]) */;
    %1503 = %1495.0;
    %1504 = %1502.6;
    (%1503, %1504, meta[relay.Constant][82] /* ty=Tensor[(4, 308), float64] */, %var_5996)
  };
  %1505(%var_6003) /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(4, 308), float64], Tensor[(180), int8]) */
}

def @func_9648(%var_9645: Tensor[(400), float64], %var_9646: Tensor[(192), float32], %var_9647: Tensor[(16), int64]) -> (Tensor[(160), uint64], float64, Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64], Tensor[(24, 48), float64], Tensor[(1152), float64]) {
  %1519 = fn (%var_9627: Tensor[(400), float64], %var_9628: Tensor[(192), float32], %var_9629: Tensor[(16), int64]) -> (Tensor[(160), uint64], float64, Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64], Tensor[(24, 48), float64], Tensor[(1152), float64]) {
    %1506 = cast(%var_9627, dtype="float64") /* ty=Tensor[(400), float64] */;
    %1507 = cast(%var_9628, dtype="float32") /* ty=Tensor[(192), float32] */;
    %1508 = cast(%var_9629, dtype="int64") /* ty=Tensor[(16), int64] */;
    %1509 = reshape(%1506, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
    %1510 = reshape(%1507, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %1511 = reshape(%1508, newshape=[16]) /* ty=Tensor[(16), int64] */;
    %1512 = @func_2196(%1509, %1510, %1511) /* ty=(Tensor[(16, ?, 10), uint64], Tensor[(1, 160), uint64], Tensor[(10, 8, 5), bool], float64, Tensor[(192), float32], Tensor[(16, ?, 10), uint64], Tensor[(16), int64], Tensor[(10, 8, 5), float64], Tensor[(16, ?, 10), uint64]) */;
    %1513 = cast(meta[relay.Constant][83] /* ty=Tensor[(1152), float64] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %1514 = reshape(%1513, newshape=[24, 48]) /* ty=Tensor[(24, 48), float64] */;
    %1515 = @func_5595(%1514) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(24, 48), float64], Tensor[(8, 9, 16), float64]) */;
    %1516 = @func_8582() /* ty=Tensor[(160), uint64] */;
    %1517 = %1512.3;
    %1518 = %1515.2;
    (%1516, %1517, %var_9627, %var_9628, %var_9629, %1518, meta[relay.Constant][83] /* ty=Tensor[(1152), float64] */)
  };
  %1519(%var_9645, %var_9646, %var_9647) /* ty=(Tensor[(160), uint64], float64, Tensor[(400), float64], Tensor[(192), float32], Tensor[(16), int64], Tensor[(24, 48), float64], Tensor[(1152), float64]) */
}

def @func_14101() -> (Tensor[(7, 16, 11), float64],) {
  @func_14099() /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_3102() -> Tensor[(7, 16, 11), float64] {
  @func_3100() /* ty=Tensor[(7, 16, 11), float64] */
}

def @func_12465() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(192), float32]) {
  @func_12463() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(192), float32]) */
}

def @func_7807(%var_7805: int64, %var_7806: Tensor[(16, 1), int64]) -> (Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), uint64], Tensor[(160), uint64], Tensor[(160), uint64], int64, Tensor[(16, 1), int64]) {
  %1537 = fn (%var_7792: int64, %var_7793: Tensor[(16, 1), int64]) -> (Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), uint64], Tensor[(160), uint64], Tensor[(160), uint64], int64, Tensor[(16, 1), int64]) {
    %1520 = @func_6528() /* ty=(Tensor[(160), uint64],) */;
    %1521 = cast(meta[relay.Constant][84] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1522 = reshape(%1521, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), float32] */;
    %1523 = @func_376(%1522) /* ty=(Tensor[(12, 14, 1), float32], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
    %1524 = @func_2275() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(168), float32]) */;
    %1525 = cast(%var_7792, dtype="int64") /* ty=int64 */;
    %1526 = cast(%var_7793, dtype="int64") /* ty=Tensor[(16, 1), int64] */;
    %1527 = %1524.1;
    %1528 = cast(%1527, dtype="uint64") /* ty=Tensor[(160), uint64] */;
    %1529 = reshape(%1525, newshape=[]) /* ty=int64 */;
    %1530 = reshape(%1526, newshape=[1, 16]) /* ty=Tensor[(1, 16), int64] */;
    %1531 = reshape(%1528, newshape=[160]) /* ty=Tensor[(160), uint64] */;
    %1532 = @func_1596(%1529, %1530, %1531) /* ty=(Tensor[(1, 16), int64], Tensor[(16, ?, 10), uint64], Tensor[(160), uint64]) */;
    %1533 = %1520.0;
    %1534 = %1523.1;
    %1535 = @func_7271() /* ty=Tensor[(7, 16, 11), uint64] */;
    %1536 = %1532.2;
    (%1533, %1534, meta[relay.Constant][84] /* ty=Tensor[(168), float32] */, %1535, %1527, %1536, %var_7792, %var_7793)
  };
  %1537(%var_7805, %var_7806) /* ty=(Tensor[(160), uint64], Tensor[(16, ?, 10), uint64], Tensor[(168), float32], Tensor[(7, 16, 11), uint64], Tensor[(160), uint64], Tensor[(160), uint64], int64, Tensor[(16, 1), int64]) */
}

def @func_11009(%var_11007: Tensor[(264), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(264), float32], Tensor[(168, 1), float32], Tensor[(264, 4), float64], Tensor[(180), int8]) {
  @func_11006(%var_11007) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(264), float32], Tensor[(168, 1), float32], Tensor[(264, 4), float64], Tensor[(180), int8]) */
}

def @func_14996() -> Tensor[(1152), float64] {
  %1539 = fn () -> Tensor[(1152), float64] {
    %1538 = @func_7924() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(1152), float64], Tensor[(1152), float64]) */;
    %1538.4
  };
  %1539() /* ty=Tensor[(1152), float64] */
}

def @func_5915(%var_5913: Tensor[(24, 8), float32]) -> (Tensor[(160), uint64], Tensor[(4, 48), bool], Tensor[(400), float64], Tensor[(24, 8), float32]) {
  %1540 = @func_2958() /* ty=(Tensor[(160), uint64], Tensor[(7, 16, 11), float64]) */;
  %1541 = cast(meta[relay.Constant][85] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1542 = cast(%var_5913, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %1543 = cast(%var_5913, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %1544 = reshape(%1541, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1545 = reshape(%1542, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %1546 = reshape(%1543, newshape=[4, 48]) /* ty=Tensor[(4, 48), float64] */;
  %1547 = @func_5852(%1544, %1545, %1546) /* ty=(Tensor[(168), float32], Tensor[(7, 16, 11), float64], Tensor[(400), float64], Tensor[(168), float32], Tensor[(160), uint64], Tensor[(400, 1), float32], Tensor[(4, 48), bool], Tensor[(160), uint64]) */;
  %1548 = %1540.0;
  %1549 = %1547.6;
  (%1548, %1549, meta[relay.Constant][85] /* ty=Tensor[(400), float64] */, %var_5913)
}

def @func_7273() -> Tensor[(7, 16, 11), uint64] {
  @func_7271() /* ty=Tensor[(7, 16, 11), uint64] */
}

def @func_10507(%var_10472: Tensor[(1872), float32], %var_10492: Tensor[(162), float32]) -> (Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(168), float32], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(162), int32]) {
  %1550 = @func_9688() /* ty=(Tensor[(160), uint64],) */;
  %1551 = @func_9688() /* ty=(Tensor[(160), uint64],) */;
  %1552 = cast(meta[relay.Constant][86] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1553 = reshape(%1552, newshape=[3, 56]) /* ty=Tensor[(3, 56), float32] */;
  %1554 = @func_8136(%1553) /* ty=(Tensor[(160), uint64], Tensor[(3, 56), float32], Tensor[(12, 14, ?), uint16]) */;
  %1555 = cast(meta[relay.Constant][87] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %1556 = cast(%var_10472, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %1557 = reshape(%1555, newshape=[9, 3, 6]) /* ty=Tensor[(9, 3, 6), float32] */;
  %1558 = reshape(%1556, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
  %1559 = @func_7160(%1557, %1558) /* ty=(Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(9, 3, 6), uint8], Tensor[(16, 13, 9), float32], Tensor[(1872), float32], Tensor[(6, 16, 2), float32], Tensor[(1, 192), float32]) */;
  %1560 = cast(%var_10492, dtype="int32") /* ty=Tensor[(162), int32] */;
  %1561 = shape_of(meta[relay.Constant][87] /* ty=Tensor[(162), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1562 = cast(meta[relay.Constant][87] /* ty=Tensor[(162), float32] */, dtype="int32") /* ty=Tensor[(162), int32] */;
  %1563 = dyn.reshape(%1560, %1561, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1564 = %1550.0;
  %1565 = %1551.0;
  %1566 = %1554.0;
  %1567 = %1559.3;
  %1568 = add(%1562, %1563) /* ty=Tensor[(162), int32] */;
  (%1564, %1565, %1566, meta[relay.Constant][86] /* ty=Tensor[(168), float32] */, %1567, %var_10472, %1568)
}

def @func_7030() -> (Tensor[(7, 16, 11), float64],) {
  %1569 = @func_2799() /* ty=Tensor[(7, 16, 11), float64] */;
  (%1569,)
}

def @func_11886() -> (Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64]) {
  @func_11884() /* ty=(Tensor[(7, 16, 11), float64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64], Tensor[(160), uint64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen563/build/output.py:4925: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen563/build/output.py", line 4930, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(432) tvmgen_default_fused_reshape_logical_or_kernel0(signed char* __restrict__ T_logical_or, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_logical_or[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) || ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


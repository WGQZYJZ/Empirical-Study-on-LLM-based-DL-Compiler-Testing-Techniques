==========mod==========
#[version = "0.0.5"]
def @func_4623(%var_4616: Tensor[(12, 16, 16), float64]) -> (Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(507), float32] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %1 = reshape(%0, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
  %2 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %3 = %2.0;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(507), float32] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %5 = cast(%3, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %7 = reshape(%6, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %8 = @func_1143(%7) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %9 = cast(%3, dtype="uint8") /* ty=Tensor[(12, 16, 1), uint8] */;
  %10 = cast(%var_4616, dtype="uint8") /* ty=Tensor[(12, 16, 16), uint8] */;
  %11 = @func_2465(%1) /* ty=Tensor[(13, 13, 3), uint32] */;
  %12 = mod(%4, %5) /* ty=Tensor[(12, 16, 507), float64] */;
  %13 = %8.0;
  %14 = bitwise_or(%9, %10) /* ty=Tensor[(12, 16, 16), uint8] */;
  (%11, %12, %13, meta[relay.Constant][1] /* ty=Tensor[(1638), float64] */, %14)
}

def @func_7165() -> (Tensor[(512), float64],) {
  %15 = @func_4645() /* ty=Tensor[(512), float64] */;
  (%15,)
}

def @func_4814() -> Tensor[(12, 16, 1), float64] {
  %16 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %16.0
}

def @func_8320() -> (Tensor[(12, 16, 5), float32],) {
  %17 = @func_6360() /* ty=(Tensor[(12, 16, 5), float32], Tensor[(5, 13, 1), float64]) */;
  %18 = %17.0;
  (%18,)
}

def @func_5186(%var_5178: Tensor[(10, 8, 14), int16]) -> Tensor[(10, 8, 14), int16] {
  %19 = cast(%var_5178, dtype="int16") /* ty=Tensor[(10, 8, 14), int16] */;
  %20 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(10, 8, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 8, 14), int16] */, dtype="int16") /* ty=Tensor[(10, 8, 14), int16] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%21, %22) /* ty=Tensor[(10, 8, 14), int16] */
}

def @func_4645() -> Tensor[(512), float64] {
  @func_4247() /* ty=Tensor[(512), float64] */
}

def @func_3948(%var_3884: Tensor[(100), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(1, 11, 12), float64], Tensor[(66, 2), float32]) {
  %23 = cast(%var_3884, dtype="float32") /* ty=Tensor[(100), float32] */;
  %24 = reshape(%23, newshape=[10, 10]) /* ty=Tensor[(10, 10), float32] */;
  %25 = @func_3143(%24) /* ty=(Tensor[(10, 10), float32],) */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
  %27 = reshape(%26, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
  %28 = @func_117(%27) /* ty=(Tensor[(16, 2, 16), float64],) */;
  %29 = cast(meta[relay.Constant][4] /* ty=Tensor[(66, 2), float32] */, dtype="float32") /* ty=Tensor[(66, 2), float32] */;
  %30 = reshape(%29, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
  %31 = @func_370(%30) /* ty=(Tensor[(1, 11, 12), float64],) */;
  %32 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %33 = %25.0;
  %34 = %28.0;
  %35 = %31.0;
  (%32, %33, %var_3884, %34, meta[relay.Constant][3] /* ty=Tensor[(512), float64] */, %35, meta[relay.Constant][4] /* ty=Tensor[(66, 2), float32] */)
}

def @func_4699() -> Tensor[(5, 13, 1), float64] {
  %36 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 13, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 13, 1), float64] */;
  cosh(%36) /* ty=Tensor[(5, 13, 1), float64] */
}

def @func_5285() -> Tensor[(528), float32] {
  %37 = @func_5200() /* ty=(Tensor[(528), float32],) */;
  %37.0
}

def @func_1471(%var_1450: Tensor[(1, 12, 13), float64], %var_1454: Tensor[(14, 117), float64]) -> (Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) {
  %38 = cast(%var_1450, dtype="float64") /* ty=Tensor[(1, 12, 13), float64] */;
  %39 = cast(%var_1454, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %40 = reshape(%39, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %41 = @func_1143(%40) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %42 = cast(%var_1454, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %43 = reshape(%42, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %44 = @func_1143(%43) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %45 = erf(%38) /* ty=Tensor[(1, 12, 13), float64] */;
  %46 = %41.0;
  %47 = %44.0;
  (%45, %46, %var_1454, %47)
}

def @func_1143(%var_1126: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64],) {
  %48 = cast(%var_1126, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %49 = rsqrt(%48) /* ty=Tensor[(14, 13, 9), float64] */;
  (%49,)
}

def @func_3488() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  %50 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %51 = %50.0;
  %52 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  (%51, %52)
}

def @func_7099() -> (Tensor[(12, 16, 1), float64], Tensor[(512), float64], Tensor[(512), float64]) {
  %53 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %54 = @func_4247() /* ty=Tensor[(512), float64] */;
  %55 = @func_4247() /* ty=Tensor[(512), float64] */;
  (%53, %54, %55)
}

def @func_3427(%var_3422: Tensor[(1, 512), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) {
  %56 = cast(%var_3422, dtype="float64") /* ty=Tensor[(1, 512), float64] */;
  %57 = reshape(%56, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
  %58 = @func_117(%57) /* ty=(Tensor[(16, 2, 16), float64],) */;
  %59 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %60 = %58.0;
  (%59, %60, %var_3422)
}

def @func_4188(%var_4171: Tensor[(512), float64]) -> (Tensor[(512), float64], Tensor[(12, 16, ?), uint16], Tensor[(12, 16, 1), float64]) {
  %61 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %62 = %61.0;
  %63 = cast(%var_4171, dtype="float64") /* ty=Tensor[(512), float64] */;
  %64 = reshape(%63, newshape=[1, 512]) /* ty=Tensor[(1, 512), float64] */;
  %65 = @func_3427(%64) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) */;
  %66 = %65.0;
  %67 = cast(%66, dtype="uint16") /* ty=Tensor[(12, 16, 1), uint16] */;
  %68 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%62, dtype="uint16") /* ty=Tensor[(12, 16, 1), uint16] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %71 = cast(%66, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %72 = subtract(%69, %70) /* ty=Tensor[(12, 16, ?), uint16] */;
  %73 = asin(%71) /* ty=Tensor[(12, 16, 1), float64] */;
  (%var_4171, %72, %73)
}

def @func_7355() -> (Tensor[(12, 16, 1), float32], Tensor[(528), float32]) {
  %74 = @func_6568() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float32]) */;
  %75 = %74.1;
  %76 = @func_5285() /* ty=Tensor[(528), float32] */;
  (%75, %76)
}

def @func_8258() -> (Tensor[(5, 13, 1), float64], Tensor[(12, 16, 1), float64]) {
  %77 = @func_4699() /* ty=Tensor[(5, 13, 1), float64] */;
  %78 = @func_7890() /* ty=Tensor[(12, 16, 1), float64] */;
  (%77, %78)
}

def @func_5200() -> (Tensor[(528), float32],) {
  %79 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
  %80 = %79.2;
  (%80,)
}

def @func_6141() -> (Tensor[(12, 16, 512), float32],) {
  %81 = @func_5126() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) */;
  %82 = %81.1;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
  %84 = log(%83) /* ty=Tensor[(12, 16, 512), float32] */;
  (%84,)
}

def @func_3702(%var_3653: Tensor[(156), float64], %var_3654: Tensor[(1638), float64], %var_3658: Tensor[(39, 5), float32]) -> (Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1, 11, 12), float64], Tensor[(39, 5), float32], Tensor[(512), float64], Tensor[(13, 13, 3), uint32], Tensor[(507, 1), float32], Tensor[(12, 16, 1540), uint32]) {
  %85 = cast(%var_3653, dtype="float64") /* ty=Tensor[(156), float64] */;
  %86 = cast(%var_3654, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %87 = reshape(%85, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %88 = reshape(%86, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %89 = @func_1471(%87, %88) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %90 = cast(%var_3658, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %92 = cast(meta[relay.Constant][7] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
  %93 = cast(%var_3654, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %94 = cast(%var_3653, dtype="float64") /* ty=Tensor[(156), float64] */;
  %95 = reshape(%90, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %96 = reshape(%91, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %97 = reshape(%92, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %98 = reshape(%93, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %99 = reshape(%94, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %100 = @func_3307(%95, %96, %97, %98, %99) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %101 = cast(meta[relay.Constant][8] /* ty=Tensor[(507, 1), float32] */, dtype="float32") /* ty=Tensor[(507, 1), float32] */;
  %102 = reshape(%101, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
  %103 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %104 = %103.0;
  %105 = cast(meta[relay.Constant][6] /* ty=Tensor[(1540), float32] */, dtype="uint32") /* ty=Tensor[(1540), uint32] */;
  %106 = cast(%104, dtype="uint32") /* ty=Tensor[(12, 16, 1), uint32] */;
  %107 = %89.1;
  %108 = %100.1;
  %109 = @func_2465(%102) /* ty=Tensor[(13, 13, 3), uint32] */;
  %110 = logical_xor(%105, %106) /* ty=Tensor[(12, 16, 1540), uint32] */;
  (%107, %var_3653, %var_3654, %108, %var_3658, meta[relay.Constant][7] /* ty=Tensor[(512), float64] */, %109, meta[relay.Constant][8] /* ty=Tensor[(507, 1), float32] */, %110)
}

def @func_7485(%var_7480: Tensor[(14, 1, 14), int16], %var_7481: Tensor[(14, 5, 14), int16]) -> Tensor[(14, 5, 14), int16] {
  %111 = cast(%var_7480, dtype="int16") /* ty=Tensor[(14, 1, 14), int16] */;
  %112 = cast(%var_7481, dtype="int16") /* ty=Tensor[(14, 5, 14), int16] */;
  subtract(%111, %112) /* ty=Tensor[(14, 5, 14), int16] */
}

def @func_4896(%var_4888: Tensor[(39, 4), float64], %var_4889: Tensor[(1638), float64], %var_4890: Tensor[(195), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(1638), float64], Tensor[(195), float32]) {
  %113 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %114 = cast(%var_4888, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %115 = cast(%var_4889, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %116 = cast(%var_4890, dtype="float32") /* ty=Tensor[(195), float32] */;
  %117 = reshape(%114, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %118 = reshape(%115, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %119 = reshape(%116, newshape=[39, 5]) /* ty=Tensor[(39, 5), float32] */;
  %120 = @func_3702(%117, %118, %119) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1, 11, 12), float64], Tensor[(39, 5), float32], Tensor[(512), float64], Tensor[(13, 13, 3), uint32], Tensor[(507, 1), float32], Tensor[(12, 16, 1540), uint32]) */;
  %121 = %113.0;
  %122 = %120.2;
  (%121, %122, %var_4888, %var_4889, %var_4890)
}

def @func_7890() -> Tensor[(12, 16, 1), float64] {
  %123 = @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %123.0
}

def @func_7997(%var_7975: Tensor[(4, 1, 12), float64]) -> (Tensor[(4, ?, 12), bool], Tensor[(3, 6, 11), float32], Tensor[(198), float32]) {
  %124 = cast(%var_7975, dtype="float64") /* ty=Tensor[(4, 1, 12), float64] */;
  %125 = sigmoid(%124) /* ty=Tensor[(4, 1, 12), float64] */;
  %126 = cast(%var_7975, dtype="float32") /* ty=Tensor[(4, 1, 12), float32] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%125, dtype="float32") /* ty=Tensor[(4, 1, 12), float32] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %130 = floor_divide(%128, %129) /* ty=Tensor[(4, ?, 12), float32] */;
  %131 = cast(%125, dtype="bool") /* ty=Tensor[(4, 1, 12), bool] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="bool") /* ty=Tensor[(4, ?, 12), bool] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %135 = cast(meta[relay.Constant][9] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %136 = reshape(%135, newshape=[3, 6, 11]) /* ty=Tensor[(3, 6, 11), float32] */;
  %137 = @func_2877(%136) /* ty=(Tensor[(3, 6, 11), float32],) */;
  %138 = equal(%133, %134) /* ty=Tensor[(4, ?, 12), bool] */;
  %139 = %137.0;
  (%138, %139, meta[relay.Constant][9] /* ty=Tensor[(198), float32] */)
}

def @func_7954() -> (Tensor[(11, 6, 8), float32],) {
  %140 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
  %141 = %140.1;
  (%141,)
}

def @func_3143(%var_3132: Tensor[(10, 10), float32]) -> (Tensor[(10, 10), float32],) {
  %142 = cast(%var_3132, dtype="float32") /* ty=Tensor[(10, 10), float32] */;
  %143 = log(%142) /* ty=Tensor[(10, 10), float32] */;
  (%143,)
}

def @func_5325() -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 528), float32]) {
  %144 = @func_4780() /* ty=(Tensor[(512), float64],) */;
  %145 = %144.0;
  %146 = @func_4855() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %147 = %146.1;
  %148 = cast(%145, dtype="float64") /* ty=Tensor[(512), float64] */;
  %149 = cast(%147, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %150 = cast(%147, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %151 = sinh(%150) /* ty=Tensor[(12, 16, 1), float32] */;
  %152 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %153 = %152.0;
  %154 = cast(%151, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %155 = cast(%153, dtype="float32") /* ty=Tensor[(528), float32] */;
  %156 = multiply(%148, %149) /* ty=Tensor[(12, 16, 512), float64] */;
  %157 = subtract(%154, %155) /* ty=Tensor[(12, 16, 528), float32] */;
  (%156, %157)
}

def @func_4052() -> (Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) {
  %158 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
  %159 = cast(meta[relay.Constant][10] /* ty=Tensor[(195, 1), float32] */, dtype="float32") /* ty=Tensor[(195, 1), float32] */;
  %160 = cast(meta[relay.Constant][11] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %161 = cast(meta[relay.Constant][12] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
  %162 = cast(meta[relay.Constant][13] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %163 = reshape(%159, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %164 = reshape(%160, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %165 = reshape(%161, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %166 = reshape(%162, newshape=[1, 1638]) /* ty=Tensor[(1, 1638), float64] */;
  %167 = @func_3368(%163, %164, %165, %166) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */;
  %168 = %158.2;
  %169 = %167.3;
  (%168, %169, meta[relay.Constant][10] /* ty=Tensor[(195, 1), float32] */, meta[relay.Constant][11] /* ty=Tensor[(1540), float32] */, meta[relay.Constant][12] /* ty=Tensor[(512), float64] */, meta[relay.Constant][13] /* ty=Tensor[(1638), float64] */)
}

def @func_6027(%var_5991: Tensor[(12, 4, 15), uint8]) -> (Tensor[(12, 4, 15), uint8], Tensor[(12, 4, 15), int16]) {
  %170 = cast(%var_5991, dtype="uint8") /* ty=Tensor[(12, 4, 15), uint8] */;
  %171 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(12, 4, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 4, 15), uint8] */, dtype="uint8") /* ty=Tensor[(12, 4, 15), uint8] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %174 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 4, 15), uint8] */, dtype="bool") /* ty=Tensor[(12, 4, 15), bool] */;
  %175 = shape_of(%var_5991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_5991, dtype="bool") /* ty=Tensor[(12, 4, 15), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = not_equal(%176, %177) /* ty=Tensor[(12, 4, 15), bool] */;
  %179 = cast(%178, dtype="int16") /* ty=Tensor[(12, 4, 15), int16] */;
  %180 = shape_of(%var_5991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%var_5991, dtype="int16") /* ty=Tensor[(12, 4, 15), int16] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %183 = right_shift(%172, %173) /* ty=Tensor[(12, 4, 15), uint8] */;
  %184 = left_shift(%181, %182) /* ty=Tensor[(12, 4, 15), int16] */;
  (%183, %184)
}

def @func_7434() -> Tensor[(12, 16, 512), float32] {
  %185 = @func_6887() /* ty=(Tensor[(12, 16, 512), float32],) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
  rsqrt(%187) /* ty=Tensor[(12, 16, 512), float32] */
}

def @func_5513(%var_5486: Tensor[(156, 1), float64], %var_5506: Tensor[(12, 16, 1638), float32]) -> (Tensor[(528), float32], Tensor[(1638), float64], Tensor[(156, 1), float64], Tensor[(1, 195), float32], Tensor[(1, 11, 12), float64], Tensor[(100), float32], Tensor[(12, 16, 1638), bool]) {
  %188 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %189 = cast(%var_5486, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %190 = cast(meta[relay.Constant][15] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %191 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 195), float32] */, dtype="float32") /* ty=Tensor[(1, 195), float32] */;
  %192 = reshape(%189, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %193 = reshape(%190, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %194 = reshape(%191, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %195 = @func_4896(%192, %193, %194) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(1638), float64], Tensor[(195), float32]) */;
  %196 = cast(meta[relay.Constant][17] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %197 = reshape(%196, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %198 = @func_3948(%197) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(1, 11, 12), float64], Tensor[(66, 2), float32]) */;
  %199 = @func_4814() /* ty=Tensor[(12, 16, 1), float64] */;
  %200 = cast(meta[relay.Constant][15] /* ty=Tensor[(1638), float64] */, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %201 = cast(%199, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
  %202 = less(%200, %201) /* ty=Tensor[(12, 16, 1638), bool] */;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(12, 16, 1638), float32] */;
  %204 = sinh(%203) /* ty=Tensor[(12, 16, 1638), float32] */;
  %205 = cast(%var_5506, dtype="bool") /* ty=Tensor[(12, 16, 1638), bool] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%204, dtype="bool") /* ty=Tensor[(12, 16, 1638), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %209 = %188.0;
  %210 = %195.3;
  %211 = %198.5;
  %212 = equal(%207, %208) /* ty=Tensor[(12, 16, 1638), bool] */;
  (%209, %210, %var_5486, meta[relay.Constant][16] /* ty=Tensor[(1, 195), float32] */, %211, meta[relay.Constant][17] /* ty=Tensor[(100), float32] */, %212)
}

def @func_4414() -> (Tensor[(12, 16, 1), float64],) {
  %213 = @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %214 = %213.1;
  %215 = cast(%214, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %216 = log10(%215) /* ty=Tensor[(12, 16, 1), float64] */;
  (%216,)
}

def @func_2465(%var_2437: Tensor[(13, 13, 3), float32]) -> Tensor[(13, 13, 3), uint32] {
  %217 = cast(%var_2437, dtype="float32") /* ty=Tensor[(13, 13, 3), float32] */;
  %218 = exp(%217) /* ty=Tensor[(13, 13, 3), float32] */;
  %219 = cast(%var_2437, dtype="bool") /* ty=Tensor[(13, 13, 3), bool] */;
  %220 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%218, dtype="bool") /* ty=Tensor[(13, 13, 3), bool] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %223 = equal(%221, %222) /* ty=Tensor[(13, 13, 3), bool] */;
  %224 = cast(%var_2437, dtype="uint32") /* ty=Tensor[(13, 13, 3), uint32] */;
  %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%223, dtype="uint32") /* ty=Tensor[(13, 13, 3), uint32] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%226, %227) /* ty=Tensor[(13, 13, 3), uint32] */
}

def @func_6211(%var_6168: Tensor[(1120), int16], %var_6183: Tensor[(132), float32]) -> (Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(13, 13, 3), uint32], Tensor[(1, 507), float32], Tensor[(1, 11, 12), float64], Tensor[(132), float32], Tensor[(1, 11, 12), float64], Tensor[(12, 16, 512), uint32], Tensor[(1638), float64], Tensor[(156), float64]) {
  %228 = cast(meta[relay.Constant][18] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %229 = reshape(%228, newshape=[10, 10]) /* ty=Tensor[(10, 10), float32] */;
  %230 = @func_3143(%229) /* ty=(Tensor[(10, 10), float32],) */;
  %231 = cast(%var_6168, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %232 = reshape(%231, newshape=[10, 8, 14]) /* ty=Tensor[(10, 8, 14), int16] */;
  %233 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 507), float32] */, dtype="float32") /* ty=Tensor[(1, 507), float32] */;
  %234 = reshape(%233, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
  %235 = cast(%var_6183, dtype="float32") /* ty=Tensor[(132), float32] */;
  %236 = reshape(%235, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
  %237 = @func_370(%236) /* ty=(Tensor[(1, 11, 12), float64],) */;
  %238 = %237.0;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(1, 11, 12), float32] */;
  %240 = reshape(%239, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
  %241 = @func_370(%240) /* ty=(Tensor[(1, 11, 12), float64],) */;
  %242 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
  %243 = %242.1;
  %244 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 16, 512), float32] */, dtype="int64") /* ty=Tensor[(12, 16, 512), int64] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="int64") /* ty=Tensor[(12, 16, 512), int64] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %248 = right_shift(%246, %247) /* ty=Tensor[(12, 16, 512), int64] */;
  %249 = cast(%248, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
  %250 = sin(%249) /* ty=Tensor[(12, 16, 512), float32] */;
  %251 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 16, 512), float32] */, dtype="int8") /* ty=Tensor[(12, 16, 512), int8] */;
  %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%250, dtype="int8") /* ty=Tensor[(12, 16, 512), int8] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %255 = bitwise_or(%253, %254) /* ty=Tensor[(12, 16, 512), int8] */;
  %256 = cast(%243, dtype="uint32") /* ty=Tensor[(12, 16, 512), uint32] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%255, dtype="uint32") /* ty=Tensor[(12, 16, 512), uint32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %260 = cast(%var_6168, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %261 = cast(meta[relay.Constant][21] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %262 = reshape(%260, newshape=[1120]) /* ty=Tensor[(1120), int16] */;
  %263 = reshape(%261, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %264 = @func_5608(%262, %263) /* ty=(Tensor[(512), float64], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64]) */;
  %265 = %230.0;
  %266 = @func_5186(%232) /* ty=Tensor[(10, 8, 14), int16] */;
  %267 = @func_2465(%234) /* ty=Tensor[(13, 13, 3), uint32] */;
  %268 = %241.0;
  %269 = maximum(%258, %259) /* ty=Tensor[(12, 16, 512), uint32] */;
  %270 = %264.5;
  (%265, meta[relay.Constant][18] /* ty=Tensor[(100), float32] */, %266, %var_6168, %267, meta[relay.Constant][19] /* ty=Tensor[(1, 507), float32] */, %238, %var_6183, %268, %269, %270, meta[relay.Constant][21] /* ty=Tensor[(156), float64] */)
}

def @func_5008(%var_4980: Tensor[(12, 16, 9), float64], %var_5001: Tensor[(1638), float64], %var_5002: Tensor[(1540), float32]) -> (Tensor[(12, 16, 9), uint8], Tensor[(12, 16, 9), float32], Tensor[(156), float64], Tensor[(156, 1), float64], Tensor[(1638), float64], Tensor[(1540), float32]) {
  %271 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %272 = %271.0;
  %273 = cast(%272, dtype="uint8") /* ty=Tensor[(12, 16, 1), uint8] */;
  %274 = cast(%var_4980, dtype="uint8") /* ty=Tensor[(12, 16, 9), uint8] */;
  %275 = cast(%var_4980, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
  %276 = cast(meta[relay.Constant][22] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %277 = cast(%var_5001, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %278 = cast(%var_5002, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %279 = reshape(%276, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %280 = reshape(%277, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %281 = reshape(%278, newshape=[154, 10]) /* ty=Tensor[(154, 10), float32] */;
  %282 = @func_4228(%279, %280, %281) /* ty=(Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) */;
  %283 = bitwise_or(%273, %274) /* ty=Tensor[(12, 16, 9), uint8] */;
  %284 = sigmoid(%275) /* ty=Tensor[(12, 16, 9), float32] */;
  %285 = %282.5;
  (%283, %284, %285, meta[relay.Constant][22] /* ty=Tensor[(156, 1), float64] */, %var_5001, %var_5002)
}

def @func_6765(%var_6732: Tensor[(12, 14, 14), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(1638), float64], Tensor[(128, 4), float64], Tensor[(1638), float64], Tensor[(156), float64]) {
  %286 = cast(%var_6732, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %287 = cast(meta[relay.Constant][23] /* ty=Tensor[(128, 4), float64] */, dtype="float64") /* ty=Tensor[(128, 4), float64] */;
  %288 = cast(meta[relay.Constant][24] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %289 = cast(meta[relay.Constant][25] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %290 = reshape(%287, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %291 = reshape(%288, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %292 = reshape(%289, newshape=[3, 52]) /* ty=Tensor[(3, 52), float64] */;
  %293 = @func_4294(%290, %291, %292) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(780), float32], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(3, 52), float64]) */;
  %294 = sigmoid(%286) /* ty=Tensor[(12, 14, 14), float64] */;
  %295 = %293.5;
  (%294, %295, meta[relay.Constant][23] /* ty=Tensor[(128, 4), float64] */, meta[relay.Constant][24] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][25] /* ty=Tensor[(156), float64] */)
}

def @func_7620(%var_7590: Tensor[(528), float32], %var_7604: Tensor[(780), float32], %var_7609: Tensor[(1536, 2), float64]) -> (Tensor[(512), uint32], Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32], Tensor[(528), float32], Tensor[(11, 6, 8), float32], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(1638, 1), float64], Tensor[(156), float64], Tensor[(13, 13, 3), uint32], Tensor[(1536, 2), float64]) {
  %296 = @func_6262() /* ty=(Tensor[(12, 16, 512), float32],) */;
  %297 = cast(%var_7590, dtype="float32") /* ty=Tensor[(528), float32] */;
  %298 = reshape(%297, newshape=[11, 6, 8]) /* ty=Tensor[(11, 6, 8), float32] */;
  %299 = @func_3098(%298) /* ty=(Tensor[(11, 6, 8), float32],) */;
  %300 = @func_6898() /* ty=(Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32]) */;
  %301 = cast(%var_7604, dtype="float32") /* ty=Tensor[(780), float32] */;
  %302 = cast(meta[relay.Constant][26] /* ty=Tensor[(1638, 1), float64] */, dtype="float64") /* ty=Tensor[(1638, 1), float64] */;
  %303 = cast(meta[relay.Constant][27] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %304 = reshape(%301, newshape=[13, 4, 15]) /* ty=Tensor[(13, 4, 15), float32] */;
  %305 = reshape(%302, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %306 = reshape(%303, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %307 = @func_2221(%304, %305, %306) /* ty=(Tensor[(13, 4, 15), float32], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(16, 2, 16), float64], Tensor[(8, 64), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(132), float32], Tensor[(1540), float32], Tensor[(132), float32]) */;
  %308 = cast(%var_7609, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
  %309 = reshape(%308, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %310 = @func_4623(%309) /* ty=(Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) */;
  %311 = @func_5860() /* ty=Tensor[(512), uint32] */;
  %312 = %296.0;
  %313 = %299.0;
  %314 = %300.1;
  %315 = %307.5;
  %316 = %310.0;
  (%311, %312, %313, %var_7590, %314, %315, %var_7604, meta[relay.Constant][26] /* ty=Tensor[(1638, 1), float64] */, meta[relay.Constant][27] /* ty=Tensor[(156), float64] */, %316, %var_7609)
}

def @func_370(%var_358: Tensor[(1, 11, 12), float32]) -> (Tensor[(1, 11, 12), float64],) {
  %317 = cast(%var_358, dtype="float32") /* ty=Tensor[(1, 11, 12), float32] */;
  %318 = sinh(%317) /* ty=Tensor[(1, 11, 12), float32] */;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(1, 11, 12), float64] */;
  %320 = cos(%319) /* ty=Tensor[(1, 11, 12), float64] */;
  (%320,)
}

def @func_4373() -> (Tensor[(12, 16, 1), float64],) {
  %321 = @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %322 = %321.0;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %324 = asinh(%323) /* ty=Tensor[(12, 16, 1), float64] */;
  (%324,)
}

def @func_6803() -> Tensor[(12, 16, 512), float32] {
  %325 = @func_6141() /* ty=(Tensor[(12, 16, 512), float32],) */;
  %325.0
}

def @func_6648(%var_6630: Tensor[(12, 16, 11), float64], %var_6646: Tensor[(154, 4), float64]) -> (Tensor[(12, 16, 11), uint64], Tensor[(11, 8, 7), bool], Tensor[(154, 4), float64]) {
  %326 = @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %327 = %326.1;
  %328 = cast(%327, dtype="uint64") /* ty=Tensor[(12, 16, 1), uint64] */;
  %329 = cast(%var_6630, dtype="uint64") /* ty=Tensor[(12, 16, 11), uint64] */;
  %330 = bitwise_or(%328, %329) /* ty=Tensor[(12, 16, 11), uint64] */;
  %331 = cast(%330, dtype="uint64") /* ty=Tensor[(12, 16, 11), uint64] */;
  %332 = shape_of(%var_6630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_6630, dtype="uint64") /* ty=Tensor[(12, 16, 11), uint64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %335 = cast(%var_6646, dtype="float64") /* ty=Tensor[(154, 4), float64] */;
  %336 = reshape(%335, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float64] */;
  %337 = @func_6592(%336) /* ty=(Tensor[(11, 8, 7), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 13, 3), uint32], Tensor[(3072), float64]) */;
  %338 = bitwise_xor(%333, %334) /* ty=Tensor[(12, 16, 11), uint64] */;
  %339 = %337.0;
  (%338, %339, %var_6646)
}

def @func_4247() -> Tensor[(512), float64] {
  %340 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %340.4
}

def @func_5727() -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) {
  %341 = @func_4373() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %342 = %341.0;
  %343 = @func_4645() /* ty=Tensor[(512), float64] */;
  %344 = cast(%343, dtype="float32") /* ty=Tensor[(512), float32] */;
  %345 = sinh(%344) /* ty=Tensor[(512), float32] */;
  %346 = cast(%342, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %347 = cast(%345, dtype="float64") /* ty=Tensor[(512), float64] */;
  %348 = cast(%342, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %349 = cast(%343, dtype="float32") /* ty=Tensor[(512), float32] */;
  %350 = divide(%346, %347) /* ty=Tensor[(12, 16, 512), float64] */;
  %351 = floor_mod(%348, %349) /* ty=Tensor[(12, 16, 512), float32] */;
  (%350, %351)
}

def @func_6524(%var_6479: Tensor[(1638), float64], %var_6486: Tensor[(198), float32], %var_6510: Tensor[(512), float64]) -> (Tensor[(11, 6, 8), float32], Tensor[(507, 1), float32], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(13, 15), float32], Tensor[(3, 6, 11), float32], Tensor[(198), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(16, 2, 16), float64], Tensor[(512), float64]) {
  %352 = @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */;
  %353 = cast(meta[relay.Constant][28] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %354 = cast(%var_6479, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %355 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 15), float32] */;
  %356 = reshape(%353, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %357 = reshape(%354, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %358 = reshape(%355, newshape=[39, 5]) /* ty=Tensor[(39, 5), float32] */;
  %359 = @func_3702(%356, %357, %358) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1, 11, 12), float64], Tensor[(39, 5), float32], Tensor[(512), float64], Tensor[(13, 13, 3), uint32], Tensor[(507, 1), float32], Tensor[(12, 16, 1540), uint32]) */;
  %360 = cast(%var_6486, dtype="float32") /* ty=Tensor[(198), float32] */;
  %361 = reshape(%360, newshape=[3, 6, 11]) /* ty=Tensor[(3, 6, 11), float32] */;
  %362 = @func_2877(%361) /* ty=(Tensor[(3, 6, 11), float32],) */;
  %363 = cast(meta[relay.Constant][30] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %364 = cast(meta[relay.Constant][28] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %365 = reshape(%363, newshape=[1120]) /* ty=Tensor[(1120), int16] */;
  %366 = reshape(%364, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %367 = @func_5608(%365, %366) /* ty=(Tensor[(512), float64], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64]) */;
  %368 = cast(%var_6510, dtype="float64") /* ty=Tensor[(512), float64] */;
  %369 = reshape(%368, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
  %370 = @func_117(%369) /* ty=(Tensor[(16, 2, 16), float64],) */;
  %371 = %352.1;
  %372 = %359.7;
  %373 = %362.0;
  %374 = %367.1;
  %375 = %370.0;
  (%371, %372, meta[relay.Constant][28] /* ty=Tensor[(156), float64] */, %var_6479, meta[relay.Constant][29] /* ty=Tensor[(13, 15), float32] */, %373, %var_6486, %374, meta[relay.Constant][30] /* ty=Tensor[(1120), int16] */, %375, %var_6510)
}

def @func_117(%var_112: Tensor[(16, 2, 16), float64]) -> (Tensor[(16, 2, 16), float64],) {
  %376 = cast(%var_112, dtype="float64") /* ty=Tensor[(16, 2, 16), float64] */;
  %377 = rsqrt(%376) /* ty=Tensor[(16, 2, 16), float64] */;
  (%377,)
}

def @func_8265() -> (Tensor[(12, 16, 1), float64],) {
  %378 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %379 = %378.0;
  (%379,)
}

def @func_8411() -> (Tensor[(12, 16, 1), float64],) {
  %380 = @func_7307() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %381 = %380.0;
  (%381,)
}

def @func_8304() -> Tensor[(512), float64] {
  %382 = @func_7165() /* ty=(Tensor[(512), float64],) */;
  %382.0
}

def @func_8166(%var_8116: Tensor[(512), float64]) -> (Tensor[(512), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1540), uint64], Tensor[(12, 16, 512), float64]) {
  %383 = @func_5126() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) */;
  %384 = cast(%var_8116, dtype="float64") /* ty=Tensor[(512), float64] */;
  %385 = reshape(%384, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %386 = @func_4188(%385) /* ty=(Tensor[(512), float64], Tensor[(12, 16, ?), uint16], Tensor[(12, 16, 1), float64]) */;
  %387 = %386.2;
  %388 = @func_5622() /* ty=(Tensor[(1540), float32],) */;
  %389 = %388.0;
  %390 = cast(%387, dtype="uint64") /* ty=Tensor[(12, 16, 1), uint64] */;
  %391 = cast(%389, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %392 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
  %393 = %383.1;
  %394 = maximum(%390, %391) /* ty=Tensor[(12, 16, 1540), uint64] */;
  %395 = %392.0;
  (%var_8116, %393, %394, %395)
}

def @func_6452(%var_6428: Tensor[(314496), float64]) -> (Tensor[(12, 16, 528), float32], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(314496), uint64], Tensor[(12, 16, 1), float64]) {
  %396 = @func_5325() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 528), float32]) */;
  %397 = cast(meta[relay.Constant][31] /* ty=Tensor[(39, 4), float64] */, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %398 = cast(meta[relay.Constant][32] /* ty=Tensor[(314496), float32] */, dtype="float32") /* ty=Tensor[(314496), float32] */;
  %399 = reshape(%397, newshape=[156, 1]) /* ty=Tensor[(156, 1), float64] */;
  %400 = reshape(%398, newshape=[12, 16, 1638]) /* ty=Tensor[(12, 16, 1638), float32] */;
  %401 = @func_5513(%399, %400) /* ty=(Tensor[(528), float32], Tensor[(1638), float64], Tensor[(156, 1), float64], Tensor[(1, 195), float32], Tensor[(1, 11, 12), float64], Tensor[(100), float32], Tensor[(12, 16, 1638), bool]) */;
  %402 = cast(meta[relay.Constant][32] /* ty=Tensor[(314496), float32] */, dtype="float64") /* ty=Tensor[(314496), float64] */;
  %403 = cosh(%402) /* ty=Tensor[(314496), float64] */;
  %404 = cast(%var_6428, dtype="uint64") /* ty=Tensor[(314496), uint64] */;
  %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(1), int32] */;
  %406 = cast(%403, dtype="uint64") /* ty=Tensor[(314496), uint64] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %408 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %409 = %396.1;
  %410 = %401.1;
  %411 = bitwise_and(%406, %407) /* ty=Tensor[(314496), uint64] */;
  %412 = %408.0;
  (%409, %410, meta[relay.Constant][31] /* ty=Tensor[(39, 4), float64] */, %411, %412)
}

def @func_3447() -> (Tensor[(12, 16, 1), float64],) {
  %413 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  (%413,)
}

def @func_8485() -> Tensor[(12, 16, 1), float64] {
  @func_4814() /* ty=Tensor[(12, 16, 1), float64] */
}

def @func_5126() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) {
  %414 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %415 = %414.0;
  %416 = @func_4780() /* ty=(Tensor[(512), float64],) */;
  %417 = %416.0;
  %418 = cast(%415, dtype="uint16") /* ty=Tensor[(12, 16, 1), uint16] */;
  %419 = cast(%417, dtype="uint16") /* ty=Tensor[(512), uint16] */;
  %420 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %421 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %422 = bitwise_xor(%418, %419) /* ty=Tensor[(12, 16, 512), uint16] */;
  %423 = %420.0;
  (%421, %422, %423)
}

def @func_5672(%var_5652: Tensor[(64, 8), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64], Tensor[(1, 512), float64], Tensor[(512), float64], Tensor[(64, 8), float32]) {
  %424 = @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %425 = cast(%var_5652, dtype="float64") /* ty=Tensor[(64, 8), float64] */;
  %426 = reshape(%425, newshape=[1, 512]) /* ty=Tensor[(1, 512), float64] */;
  %427 = @func_3427(%426) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) */;
  %428 = cast(%var_5652, dtype="float32") /* ty=Tensor[(64, 8), float32] */;
  %429 = @func_4814() /* ty=Tensor[(12, 16, 1), float64] */;
  %430 = %424.0;
  %431 = %427.2;
  %432 = @func_4645() /* ty=Tensor[(512), float64] */;
  %433 = sqrt(%428) /* ty=Tensor[(64, 8), float32] */;
  (%429, %430, %431, %432, %433)
}

def @func_4228(%var_4218: Tensor[(156), float64], %var_4219: Tensor[(1638), float64], %var_4225: Tensor[(154, 10), float32]) -> (Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) {
  %434 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %435 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %436 = cast(%var_4218, dtype="float64") /* ty=Tensor[(156), float64] */;
  %437 = cast(%var_4219, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %438 = reshape(%436, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %439 = reshape(%437, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %440 = @func_1471(%438, %439) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %441 = cast(meta[relay.Constant][33] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %442 = cast(%var_4225, dtype="float32") /* ty=Tensor[(154, 10), float32] */;
  %443 = cast(meta[relay.Constant][34] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
  %444 = cast(%var_4219, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %445 = reshape(%441, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %446 = reshape(%442, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %447 = reshape(%443, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %448 = reshape(%444, newshape=[1, 1638]) /* ty=Tensor[(1, 1638), float64] */;
  %449 = @func_3368(%445, %446, %447, %448) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */;
  %450 = %434.0;
  %451 = %435.0;
  %452 = %440.2;
  %453 = %449.1;
  (%450, %451, %452, %var_4218, %var_4219, %453, meta[relay.Constant][33] /* ty=Tensor[(195), float32] */, %var_4225, meta[relay.Constant][34] /* ty=Tensor[(512), float64] */)
}

def @func_7805(%var_7797: Tensor[(156), float64], %var_7799: Tensor[(1540, 1), float32]) -> (Tensor[(12, 16, 512), float32], Tensor[(528), float32], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1540, 1), float32]) {
  %454 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
  %455 = cast(%var_7797, dtype="float64") /* ty=Tensor[(156), float64] */;
  %456 = cast(meta[relay.Constant][35] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %457 = cast(%var_7799, dtype="float32") /* ty=Tensor[(1540, 1), float32] */;
  %458 = reshape(%455, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %459 = reshape(%456, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %460 = reshape(%457, newshape=[154, 10]) /* ty=Tensor[(154, 10), float32] */;
  %461 = @func_4228(%458, %459, %460) /* ty=(Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) */;
  %462 = cast(%var_7799, dtype="float32") /* ty=Tensor[(1540, 1), float32] */;
  %463 = %454.1;
  %464 = %461.0;
  %465 = sin(%462) /* ty=Tensor[(1540, 1), float32] */;
  (%463, %464, %var_7797, meta[relay.Constant][35] /* ty=Tensor[(1638), float64] */, %465)
}

def @func_7389(%var_7365: Tensor[(10, 3, 12), float32], %var_7373: Tensor[(156, 1), float64]) -> (Tensor[(10, 3, 12), float32], Tensor[(195), float32], Tensor[(156, 1), float64], Tensor[(1638), bool], Tensor[(12, 16, 1), float64]) {
  %466 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 3, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 12), float32] */;
  %467 = shape_of(%var_7365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%var_7365, dtype="float32") /* ty=Tensor[(10, 3, 12), float32] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %470 = cast(%var_7373, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %471 = cast(meta[relay.Constant][37] /* ty=Tensor[(1638), bool] */, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %472 = cast(meta[relay.Constant][37] /* ty=Tensor[(1638), bool] */, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %473 = reshape(%470, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %474 = reshape(%471, newshape=[14, 117]) /* ty=Tensor[(14, 117), bool] */;
  %475 = reshape(%472, newshape=[14, 117]) /* ty=Tensor[(14, 117), bool] */;
  %476 = @func_4149(%473, %474, %475) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(15, 13, 1638), int8], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(156), float64], Tensor[(12, 16, 1), float64], Tensor[(14, 117), uint32], Tensor[(12, 16, 32), uint8], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float32]) */;
  %477 = @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %478 = divide(%468, %469) /* ty=Tensor[(10, 3, 12), float32] */;
  %479 = %476.3;
  %480 = %477.0;
  (%478, %479, %var_7373, meta[relay.Constant][37] /* ty=Tensor[(1638), bool] */, %480)
}

def @func_5963(%var_5939: Tensor[(1540), float32], %var_5941: Tensor[(1638), float64]) -> (Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(1638), float64], Tensor[(12, 16, 512), bool]) {
  %481 = cast(meta[relay.Constant][38] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %482 = cast(%var_5939, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %483 = cast(meta[relay.Constant][39] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
  %484 = cast(%var_5941, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %485 = reshape(%481, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %486 = reshape(%482, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %487 = reshape(%483, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %488 = reshape(%484, newshape=[1, 1638]) /* ty=Tensor[(1, 1638), float64] */;
  %489 = @func_3368(%485, %486, %487, %488) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */;
  %490 = @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %491 = %490.0;
  %492 = cast(%491, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
  %493 = cast(meta[relay.Constant][39] /* ty=Tensor[(512), float64] */, dtype="bool") /* ty=Tensor[(512), bool] */;
  %494 = %489.6;
  %495 = not_equal(%492, %493) /* ty=Tensor[(12, 16, 512), bool] */;
  (%494, meta[relay.Constant][38] /* ty=Tensor[(195), float32] */, %var_5939, %var_5941, %495)
}

def @func_7937(%var_7930: Tensor[(198, 1), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198, 1), float32]) {
  %496 = @func_4439() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %497 = cast(%var_7930, dtype="float32") /* ty=Tensor[(198, 1), float32] */;
  %498 = reshape(%497, newshape=[3, 6, 11]) /* ty=Tensor[(3, 6, 11), float32] */;
  %499 = @func_2877(%498) /* ty=(Tensor[(3, 6, 11), float32],) */;
  %500 = %496.0;
  %501 = %499.0;
  (%500, %501, %var_7930)
}

def @func_3825() -> (Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) {
  %502 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %503 = %502.0;
  %504 = cast(%503, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %505 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 132), float32] */, dtype="float32") /* ty=Tensor[(4, 132), float32] */;
  %506 = reshape(%505, newshape=[11, 6, 8]) /* ty=Tensor[(11, 6, 8), float32] */;
  %507 = @func_3098(%506) /* ty=(Tensor[(11, 6, 8), float32],) */;
  %508 = rsqrt(%504) /* ty=Tensor[(12, 16, 1), float64] */;
  %509 = %507.0;
  (%508, %509, meta[relay.Constant][40] /* ty=Tensor[(4, 132), float32] */)
}

def @func_3629() -> (Tensor[(12, 16, 1), float64],) {
  %510 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  (%510,)
}

def @func_4680() -> (Tensor[(12, 16, 1), float64],) {
  %511 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %512 = %511.0;
  (%512,)
}

def @main() -> (Tensor[(528), float32], Tensor[(512), float64], Tensor[(1540), float64]) {
  %513 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %514 = @func_7099() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(512), float64], Tensor[(512), float64]) */;
  %515 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %516 = %515.1;
  %517 = cast(%516, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %518 = sigmoid(%517) /* ty=Tensor[(1540), float64] */;
  %519 = cast(%518, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %520 = %513.0;
  %521 = %514.1;
  %522 = erf(%519) /* ty=Tensor[(1540), float64] */;
  (%520, %521, %522)
}

def @func_7056(%var_6958: Tensor[(132), float32], %var_6981: Tensor[(12, 16, 512), float32], %var_7007: Tensor[(4, 280), float64], %var_7020: Tensor[(720), uint8], %var_7049: Tensor[(4, 280), float64]) -> (Tensor[(4, 132), float32], Tensor[(156), float64], Tensor[(132), float32], Tensor[(12, 16, 512), float64], Tensor[(12, 16, 1), float64], Tensor[(12, 4, 15), uint8], Tensor[(720), uint8], Tensor[(5, 13, 1), float64], Tensor[(4, 280), bool]) {
  %523 = @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */;
  %524 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 280), int16] */, dtype="int16") /* ty=Tensor[(4, 280), int16] */;
  %525 = cast(%var_6958, dtype="float32") /* ty=Tensor[(132), float32] */;
  %526 = reshape(%524, newshape=[1120]) /* ty=Tensor[(1120), int16] */;
  %527 = reshape(%525, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %528 = @func_6211(%526, %527) /* ty=(Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(13, 13, 3), uint32], Tensor[(1, 507), float32], Tensor[(1, 11, 12), float64], Tensor[(132), float32], Tensor[(1, 11, 12), float64], Tensor[(12, 16, 512), uint32], Tensor[(1638), float64], Tensor[(156), float64]) */;
  %529 = @func_6141() /* ty=(Tensor[(12, 16, 512), float32],) */;
  %530 = %529.0;
  %531 = cast(%var_6981, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %532 = shape_of(%530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%530, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %535 = logical_and(%533, %534) /* ty=Tensor[(12, 16, 512), bool] */;
  %536 = cast(%530, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %540 = logical_or(%538, %539) /* ty=Tensor[(12, 16, 512), bool] */;
  %541 = cast(%540, dtype="float64") /* ty=Tensor[(12, 16, 512), float64] */;
  %542 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %543 = cast(%var_7020, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %544 = reshape(%543, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), uint8] */;
  %545 = @func_6027(%544) /* ty=(Tensor[(12, 4, 15), uint8], Tensor[(12, 4, 15), int16]) */;
  %546 = @func_6360() /* ty=(Tensor[(12, 16, 5), float32], Tensor[(5, 13, 1), float64]) */;
  %547 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 280), int16] */, dtype="float64") /* ty=Tensor[(4, 280), float64] */;
  %548 = exp(%547) /* ty=Tensor[(4, 280), float64] */;
  %549 = cast(%var_7007, dtype="uint32") /* ty=Tensor[(4, 280), uint32] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(2), int32] */;
  %551 = cast(%548, dtype="uint32") /* ty=Tensor[(4, 280), uint32] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %553 = logical_xor(%551, %552) /* ty=Tensor[(4, 280), uint32] */;
  %554 = cast(%var_7007, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(2), int32] */;
  %556 = cast(%553, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %558 = divide(%556, %557) /* ty=Tensor[(4, 280), float32] */;
  %559 = cast(%558, dtype="bool") /* ty=Tensor[(4, 280), bool] */;
  %560 = shape_of(%553, dtype="int32") /* ty=Tensor[(2), int32] */;
  %561 = cast(%553, dtype="bool") /* ty=Tensor[(4, 280), bool] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %563 = logical_or(%561, %562) /* ty=Tensor[(4, 280), bool] */;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %565 = sqrt(%564) /* ty=Tensor[(4, 280), float32] */;
  %566 = cast(%var_7049, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %567 = shape_of(%548, dtype="int32") /* ty=Tensor[(2), int32] */;
  %568 = cast(%548, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %570 = power(%568, %569) /* ty=Tensor[(4, 280), float32] */;
  %571 = cast(%570, dtype="bool") /* ty=Tensor[(4, 280), bool] */;
  %572 = shape_of(%565, dtype="int32") /* ty=Tensor[(2), int32] */;
  %573 = cast(%565, dtype="bool") /* ty=Tensor[(4, 280), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %575 = %523.2;
  %576 = %528.11;
  %577 = erf(%541) /* ty=Tensor[(12, 16, 512), float64] */;
  %578 = %542.0;
  %579 = %545.0;
  %580 = %546.1;
  %581 = not_equal(%573, %574) /* ty=Tensor[(4, 280), bool] */;
  (%575, %576, %var_6958, %577, %578, %579, %var_7020, %580, %581)
}

def @func_8356() -> Tensor[(12, 16, 1), float64] {
  %582 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %582.0
}

def @func_3098(%var_3088: Tensor[(11, 6, 8), float32]) -> (Tensor[(11, 6, 8), float32],) {
  %583 = cast(%var_3088, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
  %584 = acos(%583) /* ty=Tensor[(11, 6, 8), float32] */;
  (%584,)
}

def @func_5412(%var_5380: Tensor[(14, 117), float64], %var_5381: Tensor[(1540), float32]) -> (Tensor[(11, 6, 8), float32], Tensor[(1638), float64], Tensor[(1728), float64], Tensor[(14, 117), float64], Tensor[(1540), float32]) {
  %585 = @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */;
  %586 = cast(meta[relay.Constant][42] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %587 = cast(%var_5380, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %588 = cast(%var_5381, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %589 = reshape(%586, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float64] */;
  %590 = reshape(%587, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %591 = reshape(%588, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %592 = @func_5008(%589, %590, %591) /* ty=(Tensor[(12, 16, 9), uint8], Tensor[(12, 16, 9), float32], Tensor[(156), float64], Tensor[(156, 1), float64], Tensor[(1638), float64], Tensor[(1540), float32]) */;
  %593 = %585.1;
  %594 = %592.4;
  (%593, %594, meta[relay.Constant][42] /* ty=Tensor[(1728), float64] */, %var_5380, %var_5381)
}

def @func_3986() -> (Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) {
  %595 = cast(meta[relay.Constant][43] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %596 = reshape(%595, newshape=[11, 6, 8]) /* ty=Tensor[(11, 6, 8), float32] */;
  %597 = @func_3098(%596) /* ty=(Tensor[(11, 6, 8), float32],) */;
  %598 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %599 = %597.0;
  (%598, %599, meta[relay.Constant][43] /* ty=Tensor[(528), float32] */)
}

def @func_4736(%var_4729: Tensor[(12, 16, 11), float64]) -> Tensor[(12, 16, 11), bool] {
  %600 = @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */;
  %601 = %600.0;
  %602 = cast(%601, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
  %603 = cast(%var_4729, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
  logical_and(%602, %603) /* ty=Tensor[(12, 16, 11), bool] */
}

def @func_8290(%var_8282: Tensor[(78, 2), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64], Tensor[(78, 2), float64], Tensor[(1638), float64], Tensor[(1540), float32]) {
  %604 = @func_5750() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %605 = cast(%var_8282, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %606 = cast(meta[relay.Constant][44] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %607 = cast(meta[relay.Constant][45] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %608 = reshape(%605, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %609 = reshape(%606, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %610 = reshape(%607, newshape=[154, 10]) /* ty=Tensor[(154, 10), float32] */;
  %611 = @func_4228(%608, %609, %610) /* ty=(Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) */;
  %612 = %604.0;
  %613 = %611.1;
  (%612, %613, %var_8282, meta[relay.Constant][44] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][45] /* ty=Tensor[(1540), float32] */)
}

def @func_5244(%var_5239: Tensor[(8, 9, 16), int8]) -> Tensor[(8, 9, 16), int8] {
  %614 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 9, 16), int8] */, dtype="int8") /* ty=Tensor[(8, 9, 16), int8] */;
  %615 = shape_of(%var_5239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_5239, dtype="int8") /* ty=Tensor[(8, 9, 16), int8] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%616, %617) /* ty=Tensor[(8, 9, 16), int8] */
}

def @func_5622() -> (Tensor[(1540), float32],) {
  %618 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %619 = %618.1;
  (%619,)
}

def @func_6262() -> (Tensor[(12, 16, 512), float32],) {
  %620 = @func_6141() /* ty=(Tensor[(12, 16, 512), float32],) */;
  %621 = %620.0;
  %622 = cast(%621, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
  %623 = asin(%622) /* ty=Tensor[(12, 16, 512), float32] */;
  (%623,)
}

def @func_7281(%var_7239: Tensor[(2112), float64], %var_7272: Tensor[(11, 15, 9), float32]) -> (Tensor[(12, 16, 512), float32], Tensor[(12, 16, 11), bool], Tensor[(2112), float64], Tensor[(12, 16, 1), float64], Tensor[(11, 15, 9), bool]) {
  %624 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
  %625 = cast(%var_7239, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %626 = reshape(%625, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %627 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
  %628 = rsqrt(%627) /* ty=Tensor[(11, 15, 9), float32] */;
  %629 = cast(%628, dtype="float64") /* ty=Tensor[(11, 15, 9), float64] */;
  %630 = acosh(%629) /* ty=Tensor[(11, 15, 9), float64] */;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
  %632 = log10(%631) /* ty=Tensor[(11, 15, 9), float32] */;
  %633 = cast(%var_7272, dtype="bool") /* ty=Tensor[(11, 15, 9), bool] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="bool") /* ty=Tensor[(11, 15, 9), bool] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %637 = %624.1;
  %638 = @func_4736(%626) /* ty=Tensor[(12, 16, 11), bool] */;
  %639 = @func_4814() /* ty=Tensor[(12, 16, 1), float64] */;
  %640 = not_equal(%635, %636) /* ty=Tensor[(11, 15, 9), bool] */;
  (%637, %638, %var_7239, %639, %640)
}

def @func_7973() -> Tensor[(512), float64] {
  %641 = @func_4780() /* ty=(Tensor[(512), float64],) */;
  %641.0
}

def @func_6568() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float32]) {
  %642 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %643 = @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %644 = %643.1;
  %645 = cast(%644, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %646 = %642.0;
  %647 = atanh(%645) /* ty=Tensor[(12, 16, 1), float32] */;
  (%646, %647)
}

def @func_6887() -> (Tensor[(12, 16, 512), float32],) {
  %648 = @func_6803() /* ty=Tensor[(12, 16, 512), float32] */;
  (%648,)
}

def @func_3339() -> Tensor[(12, 16, 1), float64] {
  %649 = cast(1.28472f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %650 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  floor_mod(%649, %650) /* ty=Tensor[(12, 16, 1), float64] */
}

def @func_3307(%var_3233: Tensor[(15, 13, 1), float32], %var_3258: Tensor[(1540), float32], %var_3272: Tensor[(512), float64], %var_3279: Tensor[(1638), float64], %var_3284: Tensor[(156), float64]) -> (Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) {
  %651 = cast(%var_3233, dtype="float32") /* ty=Tensor[(15, 13, 1), float32] */;
  %652 = log2(%651) /* ty=Tensor[(15, 13, 1), float32] */;
  %653 = cast(%652, dtype="bool") /* ty=Tensor[(15, 13, 1), bool] */;
  %654 = shape_of(%var_3233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%var_3233, dtype="bool") /* ty=Tensor[(15, 13, 1), bool] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %657 = cast(%var_3258, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %658 = cast(meta[relay.Constant][49] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %659 = reshape(%657, newshape=[10, 11, 14]) /* ty=Tensor[(10, 11, 14), float32] */;
  %660 = reshape(%658, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %661 = @func_1789(%659, %660) /* ty=(Tensor[(10, 11, 14), bool], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) */;
  %662 = cast(%var_3272, dtype="float64") /* ty=Tensor[(512), float64] */;
  %663 = reshape(%662, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
  %664 = @func_117(%663) /* ty=(Tensor[(16, 2, 16), float64],) */;
  %665 = cast(%var_3279, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %666 = reshape(%665, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %667 = @func_1143(%666) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %668 = cast(meta[relay.Constant][50] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %669 = %667.0;
  %670 = cast(%669, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %671 = cast(%var_3284, dtype="float64") /* ty=Tensor[(156), float64] */;
  %672 = reshape(%668, newshape=[13, 4, 15]) /* ty=Tensor[(13, 4, 15), float32] */;
  %673 = reshape(%670, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %674 = reshape(%671, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %675 = @func_2221(%672, %673, %674) /* ty=(Tensor[(13, 4, 15), float32], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(16, 2, 16), float64], Tensor[(8, 64), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(132), float32], Tensor[(1540), float32], Tensor[(132), float32]) */;
  %676 = cast(%var_3279, dtype="int8") /* ty=Tensor[(1638), int8] */;
  %677 = cast(%652, dtype="int8") /* ty=Tensor[(15, 13, 1), int8] */;
  %678 = cast(meta[relay.Constant][49] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %679 = reshape(%678, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
  %680 = @func_370(%679) /* ty=(Tensor[(1, 11, 12), float64],) */;
  %681 = logical_or(%655, %656) /* ty=Tensor[(15, 13, ?), bool] */;
  %682 = %661.1;
  %683 = %664.0;
  %684 = %675.1;
  %685 = bitwise_and(%676, %677) /* ty=Tensor[(15, 13, 1638), int8] */;
  %686 = %680.0;
  (%681, %682, %var_3258, meta[relay.Constant][49] /* ty=Tensor[(132), float32] */, %683, %var_3272, %669, %684, meta[relay.Constant][50] /* ty=Tensor[(780), float32] */, %var_3284, %685, %686)
}

def @func_5230() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  %687 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %688 = %687.0;
  %689 = @func_4814() /* ty=Tensor[(12, 16, 1), float64] */;
  (%688, %689)
}

def @func_4149(%var_4070: Tensor[(156), float64], %var_4110: Tensor[(14, 117), bool], %var_4136: Tensor[(14, 117), bool]) -> (Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(15, 13, 1638), int8], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(156), float64], Tensor[(12, 16, 1), float64], Tensor[(14, 117), uint32], Tensor[(12, 16, 32), uint8], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float32]) {
  %690 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 117), float64] */, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %691 = reshape(%690, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %692 = @func_1143(%691) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %693 = cast(meta[relay.Constant][52] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %694 = cast(meta[relay.Constant][53] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %695 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 32), float64] */, dtype="float64") /* ty=Tensor[(16, 32), float64] */;
  %696 = %692.0;
  %697 = cast(%696, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %698 = cast(%var_4070, dtype="float64") /* ty=Tensor[(156), float64] */;
  %699 = reshape(%693, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %700 = reshape(%694, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %701 = reshape(%695, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %702 = reshape(%697, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %703 = reshape(%698, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %704 = @func_3307(%699, %700, %701, %702, %703) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %705 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 32), float64] */, dtype="float64") /* ty=Tensor[(16, 32), float64] */;
  %706 = reshape(%705, newshape=[1, 512]) /* ty=Tensor[(1, 512), float64] */;
  %707 = @func_3427(%706) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) */;
  %708 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %709 = %708.5;
  %710 = cast(%709, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %711 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(14, 117), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %712 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 117), float64] */, dtype="bool") /* ty=Tensor[(14, 117), bool] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %714 = not_equal(%712, %713) /* ty=Tensor[(14, 117), bool] */;
  %715 = cast(%var_4110, dtype="uint32") /* ty=Tensor[(14, 117), uint32] */;
  %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(2), int32] */;
  %717 = cast(%714, dtype="uint32") /* ty=Tensor[(14, 117), uint32] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %719 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %720 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 32), float64] */, dtype="uint8") /* ty=Tensor[(16, 32), uint8] */;
  %721 = cast(%719, dtype="uint8") /* ty=Tensor[(12, 16, 1), uint8] */;
  %722 = cast(meta[relay.Constant][52] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %723 = cast(meta[relay.Constant][53] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %724 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 32), float64] */, dtype="float64") /* ty=Tensor[(16, 32), float64] */;
  %725 = cast(%709, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %726 = cast(%var_4070, dtype="float64") /* ty=Tensor[(156), float64] */;
  %727 = reshape(%722, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %728 = reshape(%723, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %729 = reshape(%724, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %730 = reshape(%725, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %731 = reshape(%726, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %732 = @func_3307(%727, %728, %729, %730, %731) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %733 = cast(%var_4136, dtype="float32") /* ty=Tensor[(14, 117), float32] */;
  %734 = shape_of(%714, dtype="int32") /* ty=Tensor[(2), int32] */;
  %735 = cast(%714, dtype="float32") /* ty=Tensor[(14, 117), float32] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %737 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %738 = %704.10;
  %739 = %707.0;
  %740 = bitwise_or(%717, %718) /* ty=Tensor[(14, 117), uint32] */;
  %741 = logical_xor(%720, %721) /* ty=Tensor[(12, 16, 32), uint8] */;
  %742 = %732.6;
  %743 = floor_divide(%735, %736) /* ty=Tensor[(14, 117), float32] */;
  (%737, %696, %738, meta[relay.Constant][52] /* ty=Tensor[(195), float32] */, meta[relay.Constant][53] /* ty=Tensor[(1540), float32] */, %var_4070, %739, %740, %741, %742, %743)
}

def @func_6592(%var_6571: Tensor[(11, 8, 7), float64]) -> (Tensor[(11, 8, 7), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 13, 3), uint32], Tensor[(3072), float64]) {
  %744 = cast(meta[relay.Constant][55] /* ty=Tensor[(11, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(11, 8, 7), bool] */;
  %745 = shape_of(%var_6571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%var_6571, dtype="bool") /* ty=Tensor[(11, 8, 7), bool] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %748 = cast(meta[relay.Constant][56] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %749 = reshape(%748, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %750 = @func_1143(%749) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %751 = cast(meta[relay.Constant][57] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %752 = reshape(%751, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %753 = @func_4623(%752) /* ty=(Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) */;
  %754 = greater(%746, %747) /* ty=Tensor[(11, 8, 7), bool] */;
  %755 = %750.0;
  %756 = %753.0;
  (%754, %755, meta[relay.Constant][56] /* ty=Tensor[(1638), float64] */, %756, meta[relay.Constant][57] /* ty=Tensor[(3072), float64] */)
}

def @func_1789(%var_1766: Tensor[(10, 11, 14), float32], %var_1782: Tensor[(132), float32]) -> (Tensor[(10, 11, 14), bool], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) {
  %757 = cast(%var_1766, dtype="float32") /* ty=Tensor[(10, 11, 14), float32] */;
  %758 = rsqrt(%757) /* ty=Tensor[(10, 11, 14), float32] */;
  %759 = cast(%var_1766, dtype="bool") /* ty=Tensor[(10, 11, 14), bool] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="bool") /* ty=Tensor[(10, 11, 14), bool] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %763 = cast(%var_1782, dtype="float32") /* ty=Tensor[(132), float32] */;
  %764 = reshape(%763, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
  %765 = @func_370(%764) /* ty=(Tensor[(1, 11, 12), float64],) */;
  %766 = not_equal(%761, %762) /* ty=Tensor[(10, 11, 14), bool] */;
  %767 = %765.0;
  (%766, %767, %var_1782)
}

def @func_5860() -> Tensor[(512), uint32] {
  %768 = @func_4645() /* ty=Tensor[(512), float64] */;
  %769 = cast(%768, dtype="float32") /* ty=Tensor[(512), float32] */;
  %770 = exp(%769) /* ty=Tensor[(512), float32] */;
  %771 = cast(%768, dtype="uint32") /* ty=Tensor[(512), uint32] */;
  %772 = shape_of(%770, dtype="int32") /* ty=Tensor[(1), int32] */;
  %773 = cast(%770, dtype="uint32") /* ty=Tensor[(512), uint32] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?), uint32] */;
  bitwise_and(%773, %774) /* ty=Tensor[(512), uint32] */
}

def @func_2221(%var_2158: Tensor[(13, 4, 15), float32], %var_2174: Tensor[(1638), float64], %var_2195: Tensor[(39, 4), float64]) -> (Tensor[(13, 4, 15), float32], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(16, 2, 16), float64], Tensor[(8, 64), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(132), float32], Tensor[(1540), float32], Tensor[(132), float32]) {
  %775 = cast(%var_2158, dtype="float32") /* ty=Tensor[(13, 4, 15), float32] */;
  %776 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(13, 4, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 4, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 15), float32] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %779 = cast(%var_2174, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %780 = reshape(%779, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %781 = @func_1143(%780) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %782 = cast(meta[relay.Constant][59] /* ty=Tensor[(8, 64), float64] */, dtype="float64") /* ty=Tensor[(8, 64), float64] */;
  %783 = reshape(%782, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
  %784 = @func_117(%783) /* ty=(Tensor[(16, 2, 16), float64],) */;
  %785 = cast(%var_2195, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %786 = cast(%var_2174, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %787 = reshape(%785, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %788 = reshape(%786, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %789 = @func_1471(%787, %788) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %790 = cast(meta[relay.Constant][60] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %791 = cast(meta[relay.Constant][61] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %792 = reshape(%790, newshape=[10, 11, 14]) /* ty=Tensor[(10, 11, 14), float32] */;
  %793 = reshape(%791, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %794 = @func_1789(%792, %793) /* ty=(Tensor[(10, 11, 14), bool], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) */;
  %795 = floor_mod(%777, %778) /* ty=Tensor[(13, 4, 15), float32] */;
  %796 = %781.0;
  %797 = %784.0;
  %798 = %789.1;
  %799 = %794.2;
  (%795, %796, %var_2174, %797, meta[relay.Constant][59] /* ty=Tensor[(8, 64), float64] */, %798, %var_2195, %799, meta[relay.Constant][60] /* ty=Tensor[(1540), float32] */, meta[relay.Constant][61] /* ty=Tensor[(132), float32] */)
}

def @func_7186(%var_7181: Tensor[(9, 6, 16), uint64], %var_7182: Tensor[(9, 6, 16), uint64]) -> Tensor[(9, 6, 16), uint64] {
  %800 = cast(%var_7182, dtype="uint64") /* ty=Tensor[(9, 6, 16), uint64] */;
  %801 = shape_of(%var_7181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%var_7181, dtype="uint64") /* ty=Tensor[(9, 6, 16), uint64] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%802, %803) /* ty=Tensor[(9, 6, 16), uint64] */
}

def @func_7552() -> (Tensor[(12, 16, 512), float32],) {
  %804 = @func_6898() /* ty=(Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32]) */;
  %805 = %804.0;
  (%805,)
}

def @func_5608(%var_5591: Tensor[(1120), int16], %var_5598: Tensor[(156), float64]) -> (Tensor[(512), float64], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64]) {
  %806 = cast(%var_5591, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %807 = reshape(%806, newshape=[10, 8, 14]) /* ty=Tensor[(10, 8, 14), int16] */;
  %808 = cast(%var_5598, dtype="float64") /* ty=Tensor[(156), float64] */;
  %809 = cast(meta[relay.Constant][62] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %810 = reshape(%808, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %811 = reshape(%809, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %812 = @func_1471(%810, %811) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %813 = @func_4247() /* ty=Tensor[(512), float64] */;
  %814 = @func_5186(%807) /* ty=Tensor[(10, 8, 14), int16] */;
  %815 = %812.1;
  (%813, %814, %var_5591, %815, %var_5598, meta[relay.Constant][62] /* ty=Tensor[(1638), float64] */)
}

def @func_7307() -> (Tensor[(12, 16, 1), float64],) {
  %816 = @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %817 = %816.1;
  (%817,)
}

def @func_6693(%var_6687: Tensor[(1638), bool]) -> (Tensor[(512), float64], Tensor[(15, 13, 1638), int8], Tensor[(156, 1), float64], Tensor[(1638), bool]) {
  %818 = cast(meta[relay.Constant][63] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %819 = cast(%var_6687, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %820 = cast(%var_6687, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %821 = reshape(%818, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %822 = reshape(%819, newshape=[14, 117]) /* ty=Tensor[(14, 117), bool] */;
  %823 = reshape(%820, newshape=[14, 117]) /* ty=Tensor[(14, 117), bool] */;
  %824 = @func_4149(%821, %822, %823) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(15, 13, 1638), int8], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(156), float64], Tensor[(12, 16, 1), float64], Tensor[(14, 117), uint32], Tensor[(12, 16, 32), uint8], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float32]) */;
  %825 = @func_4645() /* ty=Tensor[(512), float64] */;
  %826 = %824.2;
  (%825, %826, meta[relay.Constant][63] /* ty=Tensor[(156, 1), float64] */, %var_6687)
}

def @func_6833() -> Tensor[(12, 16, 1), float64] {
  %827 = @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %827.1
}

def @func_6898() -> (Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32]) {
  %828 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
  %829 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
  %830 = %828.1;
  %831 = %829.1;
  (%830, %831)
}

def @func_4780() -> (Tensor[(512), float64],) {
  %832 = @func_4645() /* ty=Tensor[(512), float64] */;
  (%832,)
}

def @func_8058(%var_8042: Tensor[(12, 16, 14), float64], %var_8050: Tensor[(512), float64], %var_8051: Tensor[(1638), float64]) -> (Tensor[(12, 16, 14), bool], Tensor[(156), float64], Tensor[(39, 5), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(12, 16, 1), float64]) {
  %833 = @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %834 = %833.0;
  %835 = cast(%834, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
  %836 = cast(%var_8042, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %837 = cast(meta[relay.Constant][64] /* ty=Tensor[(39, 5), float32] */, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %838 = cast(meta[relay.Constant][65] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %839 = cast(%var_8050, dtype="float64") /* ty=Tensor[(512), float64] */;
  %840 = cast(%var_8051, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %841 = reshape(%837, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %842 = reshape(%838, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %843 = reshape(%839, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %844 = reshape(%840, newshape=[1, 1638]) /* ty=Tensor[(1, 1638), float64] */;
  %845 = @func_3368(%841, %842, %843, %844) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */;
  %846 = @func_4439() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %847 = logical_or(%835, %836) /* ty=Tensor[(12, 16, 14), bool] */;
  %848 = %845.1;
  %849 = %846.0;
  (%847, %848, meta[relay.Constant][64] /* ty=Tensor[(39, 5), float32] */, meta[relay.Constant][65] /* ty=Tensor[(1540), float32] */, %var_8050, %var_8051, %849)
}

def @func_8547() -> (Tensor[(12, 16, 1), float32], Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  %850 = @func_8265() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %851 = %850.0;
  %852 = cast(%851, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %853 = @func_7307() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %854 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %855 = sigmoid(%852) /* ty=Tensor[(12, 16, 1), float32] */;
  %856 = %853.0;
  %857 = %854.0;
  (%855, %856, %857)
}

def @func_4439() -> (Tensor[(12, 16, 1), float64],) {
  %858 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %859 = %858.0;
  (%859,)
}

def @func_8622() -> (Tensor[(12, 16, 512), float32], Tensor[(12, 16, 512), bool], Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198), float32]) {
  %860 = @func_5126() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) */;
  %861 = %860.1;
  %862 = cast(%861, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
  %863 = cast(%861, dtype="float64") /* ty=Tensor[(12, 16, 512), float64] */;
  %864 = cos(%863) /* ty=Tensor[(12, 16, 512), float64] */;
  %865 = cast(%864, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %866 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%861, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %869 = @func_8265() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %870 = cast(meta[relay.Constant][66] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %871 = reshape(%870, newshape=[198, 1]) /* ty=Tensor[(198, 1), float32] */;
  %872 = @func_7937(%871) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198, 1), float32]) */;
  %873 = sinh(%862) /* ty=Tensor[(12, 16, 512), float32] */;
  %874 = greater_equal(%867, %868) /* ty=Tensor[(12, 16, 512), bool] */;
  %875 = %869.0;
  %876 = %872.1;
  (%873, %874, %875, %876, meta[relay.Constant][66] /* ty=Tensor[(198), float32] */)
}

def @func_4294(%var_4287: Tensor[(512), float64], %var_4288: Tensor[(1638), float64], %var_4289: Tensor[(3, 52), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(780), float32], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(3, 52), float64]) {
  %877 = @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %878 = cast(meta[relay.Constant][67] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %879 = cast(meta[relay.Constant][68] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %880 = cast(%var_4287, dtype="float64") /* ty=Tensor[(512), float64] */;
  %881 = cast(%var_4288, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %882 = cast(%var_4289, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
  %883 = reshape(%878, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %884 = reshape(%879, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %885 = reshape(%880, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %886 = reshape(%881, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %887 = reshape(%882, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %888 = @func_3307(%883, %884, %885, %886, %887) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %889 = %877.0;
  %890 = %888.8;
  (%889, %890, meta[relay.Constant][67] /* ty=Tensor[(195), float32] */, meta[relay.Constant][68] /* ty=Tensor[(1540), float32] */, %var_4287, %var_4288, %var_4289)
}

def @func_3727(%var_3721: Tensor[(132), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) {
  %891 = cast(%var_3721, dtype="float32") /* ty=Tensor[(132), float32] */;
  %892 = reshape(%891, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
  %893 = @func_370(%892) /* ty=(Tensor[(1, 11, 12), float64],) */;
  %894 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %895 = %893.0;
  (%894, %895, %var_3721)
}

def @func_2877(%var_2872: Tensor[(3, 6, 11), float32]) -> (Tensor[(3, 6, 11), float32],) {
  %896 = cast(%var_2872, dtype="float32") /* ty=Tensor[(3, 6, 11), float32] */;
  %897 = cos(%896) /* ty=Tensor[(3, 6, 11), float32] */;
  (%897,)
}

def @func_3368(%var_3346: Tensor[(195), float32], %var_3347: Tensor[(1540), float32], %var_3348: Tensor[(512), float64], %var_3349: Tensor[(1, 1638), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) {
  %898 = cast(%var_3346, dtype="float32") /* ty=Tensor[(195), float32] */;
  %899 = cast(%var_3347, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %900 = cast(%var_3348, dtype="float64") /* ty=Tensor[(512), float64] */;
  %901 = cast(%var_3349, dtype="float64") /* ty=Tensor[(1, 1638), float64] */;
  %902 = cast(meta[relay.Constant][69] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %903 = reshape(%898, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %904 = reshape(%899, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %905 = reshape(%900, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %906 = reshape(%901, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %907 = reshape(%902, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %908 = @func_3307(%903, %904, %905, %906, %907) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %909 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %910 = %908.9;
  (%909, %910, %var_3346, %var_3347, %var_3348, %var_3349, meta[relay.Constant][69] /* ty=Tensor[(156), float64] */)
}

def @func_6360() -> (Tensor[(12, 16, 5), float32], Tensor[(5, 13, 1), float64]) {
  %911 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %912 = %911.0;
  %913 = cast(%912, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %914 = cast(meta[relay.Constant][70] /* ty=Tensor[(12, 16, 5), float64] */, dtype="float32") /* ty=Tensor[(12, 16, 5), float32] */;
  %915 = power(%913, %914) /* ty=Tensor[(12, 16, 5), float32] */;
  %916 = @func_4699() /* ty=Tensor[(5, 13, 1), float64] */;
  (%915, %916)
}

def @func_5750() -> (Tensor[(12, 16, 1), float64],) {
  %917 = @func_4439() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %918 = %917.0;
  (%918,)
}

def @func_6308(%var_6303: Tensor[(7, 234), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(7, 234), float64]) {
  %919 = @func_5750() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %920 = cast(meta[relay.Constant][71] /* ty=Tensor[(39, 4), float64] */, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %921 = cast(%var_6303, dtype="float64") /* ty=Tensor[(7, 234), float64] */;
  %922 = reshape(%920, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %923 = reshape(%921, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %924 = @func_1471(%922, %923) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %925 = %919.0;
  %926 = %924.3;
  (%925, %926, meta[relay.Constant][71] /* ty=Tensor[(39, 4), float64] */, %var_6303)
}

def @func_7748(%var_7721: Tensor[(1638), float64], %var_7738: Tensor[(3072), float64]) -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float64], Tensor[(1638), float64], Tensor[(1540), float32], Tensor[(12, 16, 512), bool], Tensor[(3072), float64], Tensor[(14, 13, 9), float64]) {
  %927 = @func_5325() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 528), float32]) */;
  %928 = %927.0;
  %929 = cast(meta[relay.Constant][72] /* ty=Tensor[(12, 16, 512), float64] */, dtype="float64") /* ty=Tensor[(12, 16, 512), float64] */;
  %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%928, dtype="float64") /* ty=Tensor[(12, 16, 512), float64] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %933 = cast(meta[relay.Constant][73] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %934 = cast(%var_7721, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %935 = cast(meta[relay.Constant][74] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %936 = reshape(%933, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float64] */;
  %937 = reshape(%934, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %938 = reshape(%935, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %939 = @func_5008(%936, %937, %938) /* ty=(Tensor[(12, 16, 9), uint8], Tensor[(12, 16, 9), float32], Tensor[(156), float64], Tensor[(156, 1), float64], Tensor[(1638), float64], Tensor[(1540), float32]) */;
  %940 = cast(%928, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %941 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(12, 16, 512), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(meta[relay.Constant][72] /* ty=Tensor[(12, 16, 512), float64] */, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %944 = cast(%var_7738, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %945 = reshape(%944, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %946 = @func_4623(%945) /* ty=(Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) */;
  %947 = %946.2;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %949 = power(%931, %932) /* ty=Tensor[(12, 16, 512), float64] */;
  %950 = %939.1;
  %951 = less_equal(%942, %943) /* ty=Tensor[(12, 16, 512), bool] */;
  %952 = acosh(%948) /* ty=Tensor[(14, 13, 9), float64] */;
  (%949, %950, meta[relay.Constant][73] /* ty=Tensor[(1728), float64] */, %var_7721, meta[relay.Constant][74] /* ty=Tensor[(1540), float32] */, %951, %var_7738, %952)
}

def @func_4855() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  %953 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %954 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
  %955 = %953.0;
  %956 = %954.0;
  (%955, %956)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7435() -> Tensor[(12, 16, 512), float32] {
  %3 = fn () -> Tensor[(12, 16, 512), float32] {
    %0 = @func_6887() /* ty=(Tensor[(12, 16, 512), float32],) */;
    %1 = %0.0;
    %2 = cast(%1, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
    rsqrt(%2) /* ty=Tensor[(12, 16, 512), float32] */
  };
  %3() /* ty=Tensor[(12, 16, 512), float32] */
}

def @func_4626(%var_4624: Tensor[(12, 16, 16), float64]) -> (Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) {
  @func_4623(%var_4624) /* ty=(Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) */
}

def @func_8486() -> Tensor[(12, 16, 1), float64] {
  %4 = fn () -> Tensor[(12, 16, 1), float64] {
    @func_4814() /* ty=Tensor[(12, 16, 1), float64] */
  };
  %4() /* ty=Tensor[(12, 16, 1), float64] */
}

def @func_6263() -> (Tensor[(12, 16, 512), float32],) {
  %9 = fn () -> (Tensor[(12, 16, 512), float32],) {
    %5 = @func_6141() /* ty=(Tensor[(12, 16, 512), float32],) */;
    %6 = %5.0;
    %7 = cast(%6, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
    %8 = asin(%7) /* ty=Tensor[(12, 16, 512), float32] */;
    (%8,)
  };
  %9() /* ty=(Tensor[(12, 16, 512), float32],) */
}

def @func_6833() -> Tensor[(12, 16, 1), float64] {
  %10 = @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %10.1
}

def @func_8412() -> (Tensor[(12, 16, 1), float64],) {
  %13 = fn () -> (Tensor[(12, 16, 1), float64],) {
    %11 = @func_7307() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %12 = %11.0;
    (%12,)
  };
  %13() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_7056(%var_6958: Tensor[(132), float32], %var_6981: Tensor[(12, 16, 512), float32], %var_7007: Tensor[(4, 280), float64], %var_7020: Tensor[(720), uint8], %var_7049: Tensor[(4, 280), float64]) -> (Tensor[(4, 132), float32], Tensor[(156), float64], Tensor[(132), float32], Tensor[(12, 16, 512), float64], Tensor[(12, 16, 1), float64], Tensor[(12, 4, 15), uint8], Tensor[(720), uint8], Tensor[(5, 13, 1), float64], Tensor[(4, 280), bool]) {
  %14 = @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 280), int16] */, dtype="int16") /* ty=Tensor[(4, 280), int16] */;
  %16 = cast(%var_6958, dtype="float32") /* ty=Tensor[(132), float32] */;
  %17 = reshape(%15, newshape=[1120]) /* ty=Tensor[(1120), int16] */;
  %18 = reshape(%16, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %19 = @func_6211(%17, %18) /* ty=(Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(13, 13, 3), uint32], Tensor[(1, 507), float32], Tensor[(1, 11, 12), float64], Tensor[(132), float32], Tensor[(1, 11, 12), float64], Tensor[(12, 16, 512), uint32], Tensor[(1638), float64], Tensor[(156), float64]) */;
  %20 = @func_6141() /* ty=(Tensor[(12, 16, 512), float32],) */;
  %21 = %20.0;
  %22 = cast(%var_6981, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = logical_and(%24, %25) /* ty=Tensor[(12, 16, 512), bool] */;
  %27 = cast(%21, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%26, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %31 = logical_or(%29, %30) /* ty=Tensor[(12, 16, 512), bool] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(12, 16, 512), float64] */;
  %33 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %34 = cast(%var_7020, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %35 = reshape(%34, newshape=[12, 4, 15]) /* ty=Tensor[(12, 4, 15), uint8] */;
  %36 = @func_6027(%35) /* ty=(Tensor[(12, 4, 15), uint8], Tensor[(12, 4, 15), int16]) */;
  %37 = @func_6360() /* ty=(Tensor[(12, 16, 5), float32], Tensor[(5, 13, 1), float64]) */;
  %38 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 280), int16] */, dtype="float64") /* ty=Tensor[(4, 280), float64] */;
  %39 = exp(%38) /* ty=Tensor[(4, 280), float64] */;
  %40 = cast(%var_7007, dtype="uint32") /* ty=Tensor[(4, 280), uint32] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(2), int32] */;
  %42 = cast(%39, dtype="uint32") /* ty=Tensor[(4, 280), uint32] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %44 = logical_xor(%42, %43) /* ty=Tensor[(4, 280), uint32] */;
  %45 = cast(%var_7007, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(2), int32] */;
  %47 = cast(%44, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %49 = divide(%47, %48) /* ty=Tensor[(4, 280), float32] */;
  %50 = cast(%49, dtype="bool") /* ty=Tensor[(4, 280), bool] */;
  %51 = shape_of(%44, dtype="int32") /* ty=Tensor[(2), int32] */;
  %52 = cast(%44, dtype="bool") /* ty=Tensor[(4, 280), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %54 = logical_or(%52, %53) /* ty=Tensor[(4, 280), bool] */;
  %55 = cast(%54, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %56 = sqrt(%55) /* ty=Tensor[(4, 280), float32] */;
  %57 = cast(%var_7049, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %58 = shape_of(%39, dtype="int32") /* ty=Tensor[(2), int32] */;
  %59 = cast(%39, dtype="float32") /* ty=Tensor[(4, 280), float32] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %61 = power(%59, %60) /* ty=Tensor[(4, 280), float32] */;
  %62 = cast(%61, dtype="bool") /* ty=Tensor[(4, 280), bool] */;
  %63 = shape_of(%56, dtype="int32") /* ty=Tensor[(2), int32] */;
  %64 = cast(%56, dtype="bool") /* ty=Tensor[(4, 280), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %66 = %14.2;
  %67 = %19.11;
  %68 = erf(%32) /* ty=Tensor[(12, 16, 512), float64] */;
  %69 = %33.0;
  %70 = %36.0;
  %71 = %37.1;
  %72 = not_equal(%64, %65) /* ty=Tensor[(4, 280), bool] */;
  (%66, %67, %var_6958, %68, %69, %70, %var_7020, %71, %72)
}

def @func_8306() -> Tensor[(512), float64] {
  @func_8304() /* ty=Tensor[(512), float64] */
}

def @func_4647() -> Tensor[(512), float64] {
  @func_4645() /* ty=Tensor[(512), float64] */
}

def @func_8290(%var_8282: Tensor[(78, 2), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64], Tensor[(78, 2), float64], Tensor[(1638), float64], Tensor[(1540), float32]) {
  %73 = @func_5750() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %74 = cast(%var_8282, dtype="float64") /* ty=Tensor[(78, 2), float64] */;
  %75 = cast(meta[relay.Constant][1] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %76 = cast(meta[relay.Constant][2] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %77 = reshape(%74, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %78 = reshape(%75, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %79 = reshape(%76, newshape=[154, 10]) /* ty=Tensor[(154, 10), float32] */;
  %80 = @func_4228(%77, %78, %79) /* ty=(Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) */;
  %81 = %73.0;
  %82 = %80.1;
  (%81, %82, %var_8282, meta[relay.Constant][1] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][2] /* ty=Tensor[(1540), float32] */)
}

def @func_4416() -> (Tensor[(12, 16, 1), float64],) {
  @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_5672(%var_5652: Tensor[(64, 8), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64], Tensor[(1, 512), float64], Tensor[(512), float64], Tensor[(64, 8), float32]) {
  %83 = @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %84 = cast(%var_5652, dtype="float64") /* ty=Tensor[(64, 8), float64] */;
  %85 = reshape(%84, newshape=[1, 512]) /* ty=Tensor[(1, 512), float64] */;
  %86 = @func_3427(%85) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) */;
  %87 = cast(%var_5652, dtype="float32") /* ty=Tensor[(64, 8), float32] */;
  %88 = @func_4814() /* ty=Tensor[(12, 16, 1), float64] */;
  %89 = %83.0;
  %90 = %86.2;
  %91 = @func_4645() /* ty=Tensor[(512), float64] */;
  %92 = sqrt(%87) /* ty=Tensor[(64, 8), float32] */;
  (%88, %89, %90, %91, %92)
}

def @func_8358() -> Tensor[(12, 16, 1), float64] {
  @func_8356() /* ty=Tensor[(12, 16, 1), float64] */
}

def @func_5247(%var_5245: Tensor[(8, 9, 16), int8]) -> Tensor[(8, 9, 16), int8] {
  @func_5244(%var_5245) /* ty=Tensor[(8, 9, 16), int8] */
}

def @func_3448() -> (Tensor[(12, 16, 1), float64],) {
  %94 = fn () -> (Tensor[(12, 16, 1), float64],) {
    %93 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
    (%93,)
  };
  %94() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_7356() -> (Tensor[(12, 16, 1), float32], Tensor[(528), float32]) {
  %98 = fn () -> (Tensor[(12, 16, 1), float32], Tensor[(528), float32]) {
    %95 = @func_6568() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float32]) */;
    %96 = %95.1;
    %97 = @func_5285() /* ty=Tensor[(528), float32] */;
    (%96, %97)
  };
  %98() /* ty=(Tensor[(12, 16, 1), float32], Tensor[(528), float32]) */
}

def @func_3630() -> (Tensor[(12, 16, 1), float64],) {
  %100 = fn () -> (Tensor[(12, 16, 1), float64],) {
    %99 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
    (%99,)
  };
  %100() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_8356() -> Tensor[(12, 16, 1), float64] {
  %101 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %101.0
}

def @func_4738(%var_4737: Tensor[(12, 16, 11), float64]) -> Tensor[(12, 16, 11), bool] {
  %106 = fn (%var_4729: Tensor[(12, 16, 11), float64]) -> Tensor[(12, 16, 11), bool] {
    %102 = @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */;
    %103 = %102.0;
    %104 = cast(%103, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
    %105 = cast(%var_4729, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
    logical_and(%104, %105) /* ty=Tensor[(12, 16, 11), bool] */
  };
  %106(%var_4737) /* ty=Tensor[(12, 16, 11), bool] */
}

def @func_5327() -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 528), float32]) {
  @func_5325() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 528), float32]) */
}

def @func_7752(%var_7750: Tensor[(1638), float64], %var_7751: Tensor[(3072), float64]) -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float64], Tensor[(1638), float64], Tensor[(1540), float32], Tensor[(12, 16, 512), bool], Tensor[(3072), float64], Tensor[(14, 13, 9), float64]) {
  @func_7748(%var_7750, %var_7751) /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float64], Tensor[(1638), float64], Tensor[(1540), float32], Tensor[(12, 16, 512), bool], Tensor[(3072), float64], Tensor[(14, 13, 9), float64]) */
}

def @func_8266() -> (Tensor[(12, 16, 1), float64],) {
  %109 = fn () -> (Tensor[(12, 16, 1), float64],) {
    %107 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %108 = %107.0;
    (%108,)
  };
  %109() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_4053() -> (Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) {
  %122 = fn () -> (Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) {
    %110 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
    %111 = cast(meta[relay.Constant][3] /* ty=Tensor[(195, 1), float32] */, dtype="float32") /* ty=Tensor[(195, 1), float32] */;
    %112 = cast(meta[relay.Constant][4] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %113 = cast(meta[relay.Constant][5] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
    %114 = cast(meta[relay.Constant][6] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %115 = reshape(%111, newshape=[195]) /* ty=Tensor[(195), float32] */;
    %116 = reshape(%112, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
    %117 = reshape(%113, newshape=[512]) /* ty=Tensor[(512), float64] */;
    %118 = reshape(%114, newshape=[1, 1638]) /* ty=Tensor[(1, 1638), float64] */;
    %119 = @func_3368(%115, %116, %117, %118) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */;
    %120 = %110.2;
    %121 = %119.3;
    (%120, %121, meta[relay.Constant][3] /* ty=Tensor[(195, 1), float32] */, meta[relay.Constant][4] /* ty=Tensor[(1540), float32] */, meta[relay.Constant][5] /* ty=Tensor[(512), float64] */, meta[relay.Constant][6] /* ty=Tensor[(1638), float64] */)
  };
  %122() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */
}

def @func_6804() -> Tensor[(12, 16, 512), float32] {
  %124 = fn () -> Tensor[(12, 16, 512), float32] {
    %123 = @func_6141() /* ty=(Tensor[(12, 16, 512), float32],) */;
    %123.0
  };
  %124() /* ty=Tensor[(12, 16, 512), float32] */
}

def @func_4623(%var_4616: Tensor[(12, 16, 16), float64]) -> (Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) {
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(507), float32] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %126 = reshape(%125, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
  %127 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %128 = %127.0;
  %129 = cast(meta[relay.Constant][7] /* ty=Tensor[(507), float32] */, dtype="float64") /* ty=Tensor[(507), float64] */;
  %130 = cast(%128, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %131 = cast(meta[relay.Constant][8] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %132 = reshape(%131, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %133 = @func_1143(%132) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %134 = cast(%128, dtype="uint8") /* ty=Tensor[(12, 16, 1), uint8] */;
  %135 = cast(%var_4616, dtype="uint8") /* ty=Tensor[(12, 16, 16), uint8] */;
  %136 = @func_2465(%126) /* ty=Tensor[(13, 13, 3), uint32] */;
  %137 = mod(%129, %130) /* ty=Tensor[(12, 16, 507), float64] */;
  %138 = %133.0;
  %139 = bitwise_or(%134, %135) /* ty=Tensor[(12, 16, 16), uint8] */;
  (%136, %137, %138, meta[relay.Constant][8] /* ty=Tensor[(1638), float64] */, %139)
}

def @func_3374(%var_3370: Tensor[(195), float32], %var_3371: Tensor[(1540), float32], %var_3372: Tensor[(512), float64], %var_3373: Tensor[(1, 1638), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) {
  @func_3368(%var_3370, %var_3371, %var_3372, %var_3373) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */
}

def @func_5186(%var_5178: Tensor[(10, 8, 14), int16]) -> Tensor[(10, 8, 14), int16] {
  %140 = cast(%var_5178, dtype="int16") /* ty=Tensor[(10, 8, 14), int16] */;
  %141 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(10, 8, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 8, 14), int16] */, dtype="int16") /* ty=Tensor[(10, 8, 14), int16] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%142, %143) /* ty=Tensor[(10, 8, 14), int16] */
}

def @func_5232() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */
}

def @func_1475(%var_1473: Tensor[(1, 12, 13), float64], %var_1474: Tensor[(14, 117), float64]) -> (Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) {
  @func_1471(%var_1473, %var_1474) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */
}

def @func_6362() -> (Tensor[(12, 16, 5), float32], Tensor[(5, 13, 1), float64]) {
  @func_6360() /* ty=(Tensor[(12, 16, 5), float32], Tensor[(5, 13, 1), float64]) */
}

def @func_4441() -> (Tensor[(12, 16, 1), float64],) {
  @func_4439() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_6214(%var_6212: Tensor[(1120), int16], %var_6213: Tensor[(132), float32]) -> (Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(13, 13, 3), uint32], Tensor[(1, 507), float32], Tensor[(1, 11, 12), float64], Tensor[(132), float32], Tensor[(1, 11, 12), float64], Tensor[(12, 16, 512), uint32], Tensor[(1638), float64], Tensor[(156), float64]) {
  %187 = fn (%var_6168: Tensor[(1120), int16], %var_6183: Tensor[(132), float32]) -> (Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(13, 13, 3), uint32], Tensor[(1, 507), float32], Tensor[(1, 11, 12), float64], Tensor[(132), float32], Tensor[(1, 11, 12), float64], Tensor[(12, 16, 512), uint32], Tensor[(1638), float64], Tensor[(156), float64]) {
    %144 = cast(meta[relay.Constant][10] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %145 = reshape(%144, newshape=[10, 10]) /* ty=Tensor[(10, 10), float32] */;
    %146 = @func_3143(%145) /* ty=(Tensor[(10, 10), float32],) */;
    %147 = cast(%var_6168, dtype="int16") /* ty=Tensor[(1120), int16] */;
    %148 = reshape(%147, newshape=[10, 8, 14]) /* ty=Tensor[(10, 8, 14), int16] */;
    %149 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 507), float32] */, dtype="float32") /* ty=Tensor[(1, 507), float32] */;
    %150 = reshape(%149, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
    %151 = cast(%var_6183, dtype="float32") /* ty=Tensor[(132), float32] */;
    %152 = reshape(%151, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
    %153 = @func_370(%152) /* ty=(Tensor[(1, 11, 12), float64],) */;
    %154 = %153.0;
    %155 = cast(%154, dtype="float32") /* ty=Tensor[(1, 11, 12), float32] */;
    %156 = reshape(%155, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
    %157 = @func_370(%156) /* ty=(Tensor[(1, 11, 12), float64],) */;
    %158 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
    %159 = %158.1;
    %160 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 16, 512), float32] */, dtype="int64") /* ty=Tensor[(12, 16, 512), int64] */;
    %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
    %162 = cast(%159, dtype="int64") /* ty=Tensor[(12, 16, 512), int64] */;
    %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %164 = right_shift(%162, %163) /* ty=Tensor[(12, 16, 512), int64] */;
    %165 = cast(%164, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
    %166 = sin(%165) /* ty=Tensor[(12, 16, 512), float32] */;
    %167 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 16, 512), float32] */, dtype="int8") /* ty=Tensor[(12, 16, 512), int8] */;
    %168 = shape_of(%166, dtype="int32") /* ty=Tensor[(3), int32] */;
    %169 = cast(%166, dtype="int8") /* ty=Tensor[(12, 16, 512), int8] */;
    %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %171 = bitwise_or(%169, %170) /* ty=Tensor[(12, 16, 512), int8] */;
    %172 = cast(%159, dtype="uint32") /* ty=Tensor[(12, 16, 512), uint32] */;
    %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
    %174 = cast(%171, dtype="uint32") /* ty=Tensor[(12, 16, 512), uint32] */;
    %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %176 = cast(%var_6168, dtype="int16") /* ty=Tensor[(1120), int16] */;
    %177 = cast(meta[relay.Constant][13] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
    %178 = reshape(%176, newshape=[1120]) /* ty=Tensor[(1120), int16] */;
    %179 = reshape(%177, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %180 = @func_5608(%178, %179) /* ty=(Tensor[(512), float64], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64]) */;
    %181 = %146.0;
    %182 = @func_5186(%148) /* ty=Tensor[(10, 8, 14), int16] */;
    %183 = @func_2465(%150) /* ty=Tensor[(13, 13, 3), uint32] */;
    %184 = %157.0;
    %185 = maximum(%174, %175) /* ty=Tensor[(12, 16, 512), uint32] */;
    %186 = %180.5;
    (%181, meta[relay.Constant][10] /* ty=Tensor[(100), float32] */, %182, %var_6168, %183, meta[relay.Constant][11] /* ty=Tensor[(1, 507), float32] */, %154, %var_6183, %184, %185, %186, meta[relay.Constant][13] /* ty=Tensor[(156), float64] */)
  };
  %187(%var_6212, %var_6213) /* ty=(Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(13, 13, 3), uint32], Tensor[(1, 507), float32], Tensor[(1, 11, 12), float64], Tensor[(132), float32], Tensor[(1, 11, 12), float64], Tensor[(12, 16, 512), uint32], Tensor[(1638), float64], Tensor[(156), float64]) */
}

def @func_3706(%var_3703: Tensor[(156), float64], %var_3704: Tensor[(1638), float64], %var_3705: Tensor[(39, 5), float32]) -> (Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1, 11, 12), float64], Tensor[(39, 5), float32], Tensor[(512), float64], Tensor[(13, 13, 3), uint32], Tensor[(507, 1), float32], Tensor[(12, 16, 1540), uint32]) {
  %214 = fn (%var_3653: Tensor[(156), float64], %var_3654: Tensor[(1638), float64], %var_3658: Tensor[(39, 5), float32]) -> (Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1, 11, 12), float64], Tensor[(39, 5), float32], Tensor[(512), float64], Tensor[(13, 13, 3), uint32], Tensor[(507, 1), float32], Tensor[(12, 16, 1540), uint32]) {
    %188 = cast(%var_3653, dtype="float64") /* ty=Tensor[(156), float64] */;
    %189 = cast(%var_3654, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %190 = reshape(%188, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
    %191 = reshape(%189, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
    %192 = @func_1471(%190, %191) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
    %193 = cast(%var_3658, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
    %194 = cast(meta[relay.Constant][14] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %195 = cast(meta[relay.Constant][15] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
    %196 = cast(%var_3654, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %197 = cast(%var_3653, dtype="float64") /* ty=Tensor[(156), float64] */;
    %198 = reshape(%193, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
    %199 = reshape(%194, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
    %200 = reshape(%195, newshape=[512]) /* ty=Tensor[(512), float64] */;
    %201 = reshape(%196, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %202 = reshape(%197, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %203 = @func_3307(%198, %199, %200, %201, %202) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
    %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(507, 1), float32] */, dtype="float32") /* ty=Tensor[(507, 1), float32] */;
    %205 = reshape(%204, newshape=[13, 13, 3]) /* ty=Tensor[(13, 13, 3), float32] */;
    %206 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %207 = %206.0;
    %208 = cast(meta[relay.Constant][14] /* ty=Tensor[(1540), float32] */, dtype="uint32") /* ty=Tensor[(1540), uint32] */;
    %209 = cast(%207, dtype="uint32") /* ty=Tensor[(12, 16, 1), uint32] */;
    %210 = %192.1;
    %211 = %203.1;
    %212 = @func_2465(%205) /* ty=Tensor[(13, 13, 3), uint32] */;
    %213 = logical_xor(%208, %209) /* ty=Tensor[(12, 16, 1540), uint32] */;
    (%210, %var_3653, %var_3654, %211, %var_3658, meta[relay.Constant][15] /* ty=Tensor[(512), float64] */, %212, meta[relay.Constant][16] /* ty=Tensor[(507, 1), float32] */, %213)
  };
  %214(%var_3703, %var_3704, %var_3705) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1, 11, 12), float64], Tensor[(39, 5), float32], Tensor[(512), float64], Tensor[(13, 13, 3), uint32], Tensor[(507, 1), float32], Tensor[(12, 16, 1540), uint32]) */
}

def @func_8547() -> (Tensor[(12, 16, 1), float32], Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  %215 = @func_8265() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %216 = %215.0;
  %217 = cast(%216, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %218 = @func_7307() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %219 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %220 = sigmoid(%217) /* ty=Tensor[(12, 16, 1), float32] */;
  %221 = %218.0;
  %222 = %219.0;
  (%220, %221, %222)
}

def @func_373(%var_371: Tensor[(1, 11, 12), float32]) -> (Tensor[(1, 11, 12), float64],) {
  @func_370(%var_371) /* ty=(Tensor[(1, 11, 12), float64],) */
}

def @func_8063(%var_8060: Tensor[(12, 16, 14), float64], %var_8061: Tensor[(512), float64], %var_8062: Tensor[(1638), float64]) -> (Tensor[(12, 16, 14), bool], Tensor[(156), float64], Tensor[(39, 5), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(12, 16, 1), float64]) {
  @func_8058(%var_8060, %var_8061, %var_8062) /* ty=(Tensor[(12, 16, 14), bool], Tensor[(156), float64], Tensor[(39, 5), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(12, 16, 1), float64]) */
}

def @func_4374() -> (Tensor[(12, 16, 1), float64],) {
  %227 = fn () -> (Tensor[(12, 16, 1), float64],) {
    %223 = @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
    %224 = %223.0;
    %225 = cast(%224, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
    %226 = asinh(%225) /* ty=Tensor[(12, 16, 1), float64] */;
    (%226,)
  };
  %227() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_4780() -> (Tensor[(512), float64],) {
  %228 = @func_4645() /* ty=Tensor[(512), float64] */;
  (%228,)
}

def @func_6454(%var_6453: Tensor[(314496), float64]) -> (Tensor[(12, 16, 528), float32], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(314496), uint64], Tensor[(12, 16, 1), float64]) {
  %246 = fn (%var_6428: Tensor[(314496), float64]) -> (Tensor[(12, 16, 528), float32], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(314496), uint64], Tensor[(12, 16, 1), float64]) {
    %229 = @func_5325() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 528), float32]) */;
    %230 = cast(meta[relay.Constant][17] /* ty=Tensor[(39, 4), float64] */, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
    %231 = cast(meta[relay.Constant][18] /* ty=Tensor[(314496), float32] */, dtype="float32") /* ty=Tensor[(314496), float32] */;
    %232 = reshape(%230, newshape=[156, 1]) /* ty=Tensor[(156, 1), float64] */;
    %233 = reshape(%231, newshape=[12, 16, 1638]) /* ty=Tensor[(12, 16, 1638), float32] */;
    %234 = @func_5513(%232, %233) /* ty=(Tensor[(528), float32], Tensor[(1638), float64], Tensor[(156, 1), float64], Tensor[(1, 195), float32], Tensor[(1, 11, 12), float64], Tensor[(100), float32], Tensor[(12, 16, 1638), bool]) */;
    %235 = cast(meta[relay.Constant][18] /* ty=Tensor[(314496), float32] */, dtype="float64") /* ty=Tensor[(314496), float64] */;
    %236 = cosh(%235) /* ty=Tensor[(314496), float64] */;
    %237 = cast(%var_6428, dtype="uint64") /* ty=Tensor[(314496), uint64] */;
    %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(1), int32] */;
    %239 = cast(%236, dtype="uint64") /* ty=Tensor[(314496), uint64] */;
    %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %241 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %242 = %229.1;
    %243 = %234.1;
    %244 = bitwise_and(%239, %240) /* ty=Tensor[(314496), uint64] */;
    %245 = %241.0;
    (%242, %243, meta[relay.Constant][17] /* ty=Tensor[(39, 4), float64] */, %244, %245)
  };
  %246(%var_6453) /* ty=(Tensor[(12, 16, 528), float32], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(314496), uint64], Tensor[(12, 16, 1), float64]) */
}

def @func_4414() -> (Tensor[(12, 16, 1), float64],) {
  %247 = @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %248 = %247.1;
  %249 = cast(%248, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %250 = log10(%249) /* ty=Tensor[(12, 16, 1), float64] */;
  (%250,)
}

def @func_4856() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  %255 = fn () -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
    %251 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %252 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
    %253 = %251.0;
    %254 = %252.0;
    (%253, %254)
  };
  %255() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */
}

def @func_6311(%var_6309: Tensor[(7, 234), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(7, 234), float64]) {
  @func_6308(%var_6309) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(7, 234), float64]) */
}

def @func_7890() -> Tensor[(12, 16, 1), float64] {
  %256 = @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %256.0
}

def @func_5623() -> (Tensor[(1540), float32],) {
  %259 = fn () -> (Tensor[(1540), float32],) {
    %257 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
    %258 = %257.1;
    (%258,)
  };
  %259() /* ty=(Tensor[(1540), float32],) */
}

def @func_7099() -> (Tensor[(12, 16, 1), float64], Tensor[(512), float64], Tensor[(512), float64]) {
  %260 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %261 = @func_4247() /* ty=Tensor[(512), float64] */;
  %262 = @func_4247() /* ty=Tensor[(512), float64] */;
  (%260, %261, %262)
}

def @func_5415(%var_5413: Tensor[(14, 117), float64], %var_5414: Tensor[(1540), float32]) -> (Tensor[(11, 6, 8), float32], Tensor[(1638), float64], Tensor[(1728), float64], Tensor[(14, 117), float64], Tensor[(1540), float32]) {
  %273 = fn (%var_5380: Tensor[(14, 117), float64], %var_5381: Tensor[(1540), float32]) -> (Tensor[(11, 6, 8), float32], Tensor[(1638), float64], Tensor[(1728), float64], Tensor[(14, 117), float64], Tensor[(1540), float32]) {
    %263 = @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */;
    %264 = cast(meta[relay.Constant][19] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
    %265 = cast(%var_5380, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
    %266 = cast(%var_5381, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %267 = reshape(%264, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float64] */;
    %268 = reshape(%265, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %269 = reshape(%266, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
    %270 = @func_5008(%267, %268, %269) /* ty=(Tensor[(12, 16, 9), uint8], Tensor[(12, 16, 9), float32], Tensor[(156), float64], Tensor[(156, 1), float64], Tensor[(1638), float64], Tensor[(1540), float32]) */;
    %271 = %263.1;
    %272 = %270.4;
    (%271, %272, meta[relay.Constant][19] /* ty=Tensor[(1728), float64] */, %var_5380, %var_5381)
  };
  %273(%var_5413, %var_5414) /* ty=(Tensor[(11, 6, 8), float32], Tensor[(1638), float64], Tensor[(1728), float64], Tensor[(14, 117), float64], Tensor[(1540), float32]) */
}

def @func_5012(%var_5009: Tensor[(12, 16, 9), float64], %var_5010: Tensor[(1638), float64], %var_5011: Tensor[(1540), float32]) -> (Tensor[(12, 16, 9), uint8], Tensor[(12, 16, 9), float32], Tensor[(156), float64], Tensor[(156, 1), float64], Tensor[(1638), float64], Tensor[(1540), float32]) {
  %289 = fn (%var_4980: Tensor[(12, 16, 9), float64], %var_5001: Tensor[(1638), float64], %var_5002: Tensor[(1540), float32]) -> (Tensor[(12, 16, 9), uint8], Tensor[(12, 16, 9), float32], Tensor[(156), float64], Tensor[(156, 1), float64], Tensor[(1638), float64], Tensor[(1540), float32]) {
    %274 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %275 = %274.0;
    %276 = cast(%275, dtype="uint8") /* ty=Tensor[(12, 16, 1), uint8] */;
    %277 = cast(%var_4980, dtype="uint8") /* ty=Tensor[(12, 16, 9), uint8] */;
    %278 = cast(%var_4980, dtype="float32") /* ty=Tensor[(12, 16, 9), float32] */;
    %279 = cast(meta[relay.Constant][20] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %280 = cast(%var_5001, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %281 = cast(%var_5002, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %282 = reshape(%279, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %283 = reshape(%280, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %284 = reshape(%281, newshape=[154, 10]) /* ty=Tensor[(154, 10), float32] */;
    %285 = @func_4228(%282, %283, %284) /* ty=(Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) */;
    %286 = bitwise_or(%276, %277) /* ty=Tensor[(12, 16, 9), uint8] */;
    %287 = sigmoid(%278) /* ty=Tensor[(12, 16, 9), float32] */;
    %288 = %285.5;
    (%286, %287, %288, meta[relay.Constant][20] /* ty=Tensor[(156, 1), float64] */, %var_5001, %var_5002)
  };
  %289(%var_5009, %var_5010, %var_5011) /* ty=(Tensor[(12, 16, 9), uint8], Tensor[(12, 16, 9), float32], Tensor[(156), float64], Tensor[(156, 1), float64], Tensor[(1638), float64], Tensor[(1540), float32]) */
}

def @func_4682() -> (Tensor[(12, 16, 1), float64],) {
  @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_3146(%var_3144: Tensor[(10, 10), float32]) -> (Tensor[(10, 10), float32],) {
  @func_3143(%var_3144) /* ty=(Tensor[(10, 10), float32],) */
}

def @func_2879(%var_2878: Tensor[(3, 6, 11), float32]) -> (Tensor[(3, 6, 11), float32],) {
  %292 = fn (%var_2872: Tensor[(3, 6, 11), float32]) -> (Tensor[(3, 6, 11), float32],) {
    %290 = cast(%var_2872, dtype="float32") /* ty=Tensor[(3, 6, 11), float32] */;
    %291 = cos(%290) /* ty=Tensor[(3, 6, 11), float32] */;
    (%291,)
  };
  %292(%var_2878) /* ty=(Tensor[(3, 6, 11), float32],) */
}

def @func_5189(%var_5187: Tensor[(10, 8, 14), int16]) -> Tensor[(10, 8, 14), int16] {
  @func_5186(%var_5187) /* ty=Tensor[(10, 8, 14), int16] */
}

def @func_5728() -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) {
  %304 = fn () -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) {
    %293 = @func_4373() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %294 = %293.0;
    %295 = @func_4645() /* ty=Tensor[(512), float64] */;
    %296 = cast(%295, dtype="float32") /* ty=Tensor[(512), float32] */;
    %297 = sinh(%296) /* ty=Tensor[(512), float32] */;
    %298 = cast(%294, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
    %299 = cast(%297, dtype="float64") /* ty=Tensor[(512), float64] */;
    %300 = cast(%294, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
    %301 = cast(%295, dtype="float32") /* ty=Tensor[(512), float32] */;
    %302 = divide(%298, %299) /* ty=Tensor[(12, 16, 512), float64] */;
    %303 = floor_mod(%300, %301) /* ty=Tensor[(12, 16, 512), float32] */;
    (%302, %303)
  };
  %304() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */
}

def @func_2221(%var_2158: Tensor[(13, 4, 15), float32], %var_2174: Tensor[(1638), float64], %var_2195: Tensor[(39, 4), float64]) -> (Tensor[(13, 4, 15), float32], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(16, 2, 16), float64], Tensor[(8, 64), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(132), float32], Tensor[(1540), float32], Tensor[(132), float32]) {
  %305 = cast(%var_2158, dtype="float32") /* ty=Tensor[(13, 4, 15), float32] */;
  %306 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(13, 4, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 4, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 15), float32] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %309 = cast(%var_2174, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %310 = reshape(%309, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %311 = @func_1143(%310) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %312 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 64), float64] */, dtype="float64") /* ty=Tensor[(8, 64), float64] */;
  %313 = reshape(%312, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
  %314 = @func_117(%313) /* ty=(Tensor[(16, 2, 16), float64],) */;
  %315 = cast(%var_2195, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %316 = cast(%var_2174, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %317 = reshape(%315, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %318 = reshape(%316, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %319 = @func_1471(%317, %318) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %320 = cast(meta[relay.Constant][23] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %321 = cast(meta[relay.Constant][24] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %322 = reshape(%320, newshape=[10, 11, 14]) /* ty=Tensor[(10, 11, 14), float32] */;
  %323 = reshape(%321, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %324 = @func_1789(%322, %323) /* ty=(Tensor[(10, 11, 14), bool], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) */;
  %325 = floor_mod(%307, %308) /* ty=Tensor[(13, 4, 15), float32] */;
  %326 = %311.0;
  %327 = %314.0;
  %328 = %319.1;
  %329 = %324.2;
  (%325, %326, %var_2174, %327, meta[relay.Constant][22] /* ty=Tensor[(8, 64), float64] */, %328, %var_2195, %329, meta[relay.Constant][23] /* ty=Tensor[(1540), float32] */, meta[relay.Constant][24] /* ty=Tensor[(132), float32] */)
}

def @func_4299(%var_4296: Tensor[(512), float64], %var_4297: Tensor[(1638), float64], %var_4298: Tensor[(3, 52), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(780), float32], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(3, 52), float64]) {
  @func_4294(%var_4296, %var_4297, %var_4298) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(780), float32], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(3, 52), float64]) */
}

def @func_6767(%var_6766: Tensor[(12, 14, 14), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(1638), float64], Tensor[(128, 4), float64], Tensor[(1638), float64], Tensor[(156), float64]) {
  %340 = fn (%var_6732: Tensor[(12, 14, 14), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(1638), float64], Tensor[(128, 4), float64], Tensor[(1638), float64], Tensor[(156), float64]) {
    %330 = cast(%var_6732, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %331 = cast(meta[relay.Constant][25] /* ty=Tensor[(128, 4), float64] */, dtype="float64") /* ty=Tensor[(128, 4), float64] */;
    %332 = cast(meta[relay.Constant][26] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %333 = cast(meta[relay.Constant][27] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
    %334 = reshape(%331, newshape=[512]) /* ty=Tensor[(512), float64] */;
    %335 = reshape(%332, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %336 = reshape(%333, newshape=[3, 52]) /* ty=Tensor[(3, 52), float64] */;
    %337 = @func_4294(%334, %335, %336) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(780), float32], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(3, 52), float64]) */;
    %338 = sigmoid(%330) /* ty=Tensor[(12, 14, 14), float64] */;
    %339 = %337.5;
    (%338, %339, meta[relay.Constant][25] /* ty=Tensor[(128, 4), float64] */, meta[relay.Constant][26] /* ty=Tensor[(1638), float64] */, meta[relay.Constant][27] /* ty=Tensor[(156), float64] */)
  };
  %340(%var_6766) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(1638), float64], Tensor[(128, 4), float64], Tensor[(1638), float64], Tensor[(156), float64]) */
}

def @func_7101() -> (Tensor[(12, 16, 1), float64], Tensor[(512), float64], Tensor[(512), float64]) {
  @func_7099() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(512), float64], Tensor[(512), float64]) */
}

def @func_7937(%var_7930: Tensor[(198, 1), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198, 1), float32]) {
  %341 = @func_4439() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %342 = cast(%var_7930, dtype="float32") /* ty=Tensor[(198, 1), float32] */;
  %343 = reshape(%342, newshape=[3, 6, 11]) /* ty=Tensor[(3, 6, 11), float32] */;
  %344 = @func_2877(%343) /* ty=(Tensor[(3, 6, 11), float32],) */;
  %345 = %341.0;
  %346 = %344.0;
  (%345, %346, %var_7930)
}

def @func_7955() -> (Tensor[(11, 6, 8), float32],) {
  %349 = fn () -> (Tensor[(11, 6, 8), float32],) {
    %347 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
    %348 = %347.1;
    (%348,)
  };
  %349() /* ty=(Tensor[(11, 6, 8), float32],) */
}

def @func_7974() -> Tensor[(512), float64] {
  %351 = fn () -> Tensor[(512), float64] {
    %350 = @func_4780() /* ty=(Tensor[(512), float64],) */;
    %350.0
  };
  %351() /* ty=Tensor[(512), float64] */
}

def @func_7999(%var_7998: Tensor[(4, 1, 12), float64]) -> (Tensor[(4, ?, 12), bool], Tensor[(3, 6, 11), float32], Tensor[(198), float32]) {
  %368 = fn (%var_7975: Tensor[(4, 1, 12), float64]) -> (Tensor[(4, ?, 12), bool], Tensor[(3, 6, 11), float32], Tensor[(198), float32]) {
    %352 = cast(%var_7975, dtype="float64") /* ty=Tensor[(4, 1, 12), float64] */;
    %353 = sigmoid(%352) /* ty=Tensor[(4, 1, 12), float64] */;
    %354 = cast(%var_7975, dtype="float32") /* ty=Tensor[(4, 1, 12), float32] */;
    %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
    %356 = cast(%353, dtype="float32") /* ty=Tensor[(4, 1, 12), float32] */;
    %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %358 = floor_divide(%356, %357) /* ty=Tensor[(4, ?, 12), float32] */;
    %359 = cast(%353, dtype="bool") /* ty=Tensor[(4, 1, 12), bool] */;
    %360 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
    %361 = cast(%358, dtype="bool") /* ty=Tensor[(4, ?, 12), bool] */;
    %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %363 = cast(meta[relay.Constant][28] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
    %364 = reshape(%363, newshape=[3, 6, 11]) /* ty=Tensor[(3, 6, 11), float32] */;
    %365 = @func_2877(%364) /* ty=(Tensor[(3, 6, 11), float32],) */;
    %366 = equal(%361, %362) /* ty=Tensor[(4, ?, 12), bool] */;
    %367 = %365.0;
    (%366, %367, meta[relay.Constant][28] /* ty=Tensor[(198), float32] */)
  };
  %368(%var_7998) /* ty=(Tensor[(4, ?, 12), bool], Tensor[(3, 6, 11), float32], Tensor[(198), float32]) */
}

def @func_4699() -> Tensor[(5, 13, 1), float64] {
  %369 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 13, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 13, 1), float64] */;
  cosh(%369) /* ty=Tensor[(5, 13, 1), float64] */
}

def @func_6652(%var_6650: Tensor[(12, 16, 11), float64], %var_6651: Tensor[(154, 4), float64]) -> (Tensor[(12, 16, 11), uint64], Tensor[(11, 8, 7), bool], Tensor[(154, 4), float64]) {
  @func_6648(%var_6650, %var_6651) /* ty=(Tensor[(12, 16, 11), uint64], Tensor[(11, 8, 7), bool], Tensor[(154, 4), float64]) */
}

def @func_6524(%var_6479: Tensor[(1638), float64], %var_6486: Tensor[(198), float32], %var_6510: Tensor[(512), float64]) -> (Tensor[(11, 6, 8), float32], Tensor[(507, 1), float32], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(13, 15), float32], Tensor[(3, 6, 11), float32], Tensor[(198), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(16, 2, 16), float64], Tensor[(512), float64]) {
  %370 = @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */;
  %371 = cast(meta[relay.Constant][30] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %372 = cast(%var_6479, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %373 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 15), float32] */;
  %374 = reshape(%371, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %375 = reshape(%372, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %376 = reshape(%373, newshape=[39, 5]) /* ty=Tensor[(39, 5), float32] */;
  %377 = @func_3702(%374, %375, %376) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1, 11, 12), float64], Tensor[(39, 5), float32], Tensor[(512), float64], Tensor[(13, 13, 3), uint32], Tensor[(507, 1), float32], Tensor[(12, 16, 1540), uint32]) */;
  %378 = cast(%var_6486, dtype="float32") /* ty=Tensor[(198), float32] */;
  %379 = reshape(%378, newshape=[3, 6, 11]) /* ty=Tensor[(3, 6, 11), float32] */;
  %380 = @func_2877(%379) /* ty=(Tensor[(3, 6, 11), float32],) */;
  %381 = cast(meta[relay.Constant][32] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %382 = cast(meta[relay.Constant][30] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %383 = reshape(%381, newshape=[1120]) /* ty=Tensor[(1120), int16] */;
  %384 = reshape(%382, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %385 = @func_5608(%383, %384) /* ty=(Tensor[(512), float64], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64]) */;
  %386 = cast(%var_6510, dtype="float64") /* ty=Tensor[(512), float64] */;
  %387 = reshape(%386, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
  %388 = @func_117(%387) /* ty=(Tensor[(16, 2, 16), float64],) */;
  %389 = %370.1;
  %390 = %377.7;
  %391 = %380.0;
  %392 = %385.1;
  %393 = %388.0;
  (%389, %390, meta[relay.Constant][30] /* ty=Tensor[(156), float64] */, %var_6479, meta[relay.Constant][31] /* ty=Tensor[(13, 15), float32] */, %391, %var_6486, %392, meta[relay.Constant][32] /* ty=Tensor[(1120), int16] */, %393, %var_6510)
}

def @func_3988() -> (Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) {
  @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */
}

def @func_6595(%var_6593: Tensor[(11, 8, 7), float64]) -> (Tensor[(11, 8, 7), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 13, 3), uint32], Tensor[(3072), float64]) {
  @func_6592(%var_6593) /* ty=(Tensor[(11, 8, 7), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 13, 3), uint32], Tensor[(3072), float64]) */
}

def @func_4701() -> Tensor[(5, 13, 1), float64] {
  @func_4699() /* ty=Tensor[(5, 13, 1), float64] */
}

def @func_5513(%var_5486: Tensor[(156, 1), float64], %var_5506: Tensor[(12, 16, 1638), float32]) -> (Tensor[(528), float32], Tensor[(1638), float64], Tensor[(156, 1), float64], Tensor[(1, 195), float32], Tensor[(1, 11, 12), float64], Tensor[(100), float32], Tensor[(12, 16, 1638), bool]) {
  %394 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %395 = cast(%var_5486, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %396 = cast(meta[relay.Constant][33] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %397 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 195), float32] */, dtype="float32") /* ty=Tensor[(1, 195), float32] */;
  %398 = reshape(%395, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %399 = reshape(%396, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %400 = reshape(%397, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %401 = @func_4896(%398, %399, %400) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(1638), float64], Tensor[(195), float32]) */;
  %402 = cast(meta[relay.Constant][35] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %403 = reshape(%402, newshape=[100]) /* ty=Tensor[(100), float32] */;
  %404 = @func_3948(%403) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(1, 11, 12), float64], Tensor[(66, 2), float32]) */;
  %405 = @func_4814() /* ty=Tensor[(12, 16, 1), float64] */;
  %406 = cast(meta[relay.Constant][33] /* ty=Tensor[(1638), float64] */, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %407 = cast(%405, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
  %408 = less(%406, %407) /* ty=Tensor[(12, 16, 1638), bool] */;
  %409 = cast(%408, dtype="float32") /* ty=Tensor[(12, 16, 1638), float32] */;
  %410 = sinh(%409) /* ty=Tensor[(12, 16, 1638), float32] */;
  %411 = cast(%var_5506, dtype="bool") /* ty=Tensor[(12, 16, 1638), bool] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%410, dtype="bool") /* ty=Tensor[(12, 16, 1638), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = %394.0;
  %416 = %401.3;
  %417 = %404.5;
  %418 = equal(%413, %414) /* ty=Tensor[(12, 16, 1638), bool] */;
  (%415, %416, %var_5486, meta[relay.Constant][34] /* ty=Tensor[(1, 195), float32] */, %417, meta[relay.Constant][35] /* ty=Tensor[(100), float32] */, %418)
}

def @func_7393(%var_7391: Tensor[(10, 3, 12), float32], %var_7392: Tensor[(156, 1), float64]) -> (Tensor[(10, 3, 12), float32], Tensor[(195), float32], Tensor[(156, 1), float64], Tensor[(1638), bool], Tensor[(12, 16, 1), float64]) {
  @func_7389(%var_7391, %var_7392) /* ty=(Tensor[(10, 3, 12), float32], Tensor[(195), float32], Tensor[(156, 1), float64], Tensor[(1638), bool], Tensor[(12, 16, 1), float64]) */
}

def @func_8549() -> (Tensor[(12, 16, 1), float32], Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  @func_8547() /* ty=(Tensor[(12, 16, 1), float32], Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */
}

def @func_1143(%var_1126: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64],) {
  %419 = cast(%var_1126, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %420 = rsqrt(%419) /* ty=Tensor[(14, 13, 9), float64] */;
  (%420,)
}

def @func_5608(%var_5591: Tensor[(1120), int16], %var_5598: Tensor[(156), float64]) -> (Tensor[(512), float64], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64]) {
  %421 = cast(%var_5591, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %422 = reshape(%421, newshape=[10, 8, 14]) /* ty=Tensor[(10, 8, 14), int16] */;
  %423 = cast(%var_5598, dtype="float64") /* ty=Tensor[(156), float64] */;
  %424 = cast(meta[relay.Constant][36] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %425 = reshape(%423, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %426 = reshape(%424, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %427 = @func_1471(%425, %426) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %428 = @func_4247() /* ty=Tensor[(512), float64] */;
  %429 = @func_5186(%422) /* ty=Tensor[(10, 8, 14), int16] */;
  %430 = %427.1;
  (%428, %429, %var_5591, %430, %var_5598, meta[relay.Constant][36] /* ty=Tensor[(1638), float64] */)
}

def @func_4645() -> Tensor[(512), float64] {
  @func_4247() /* ty=Tensor[(512), float64] */
}

def @func_4248() -> Tensor[(512), float64] {
  %432 = fn () -> Tensor[(512), float64] {
    %431 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
    %431.4
  };
  %432() /* ty=Tensor[(512), float64] */
}

def @func_6529(%var_6526: Tensor[(1638), float64], %var_6527: Tensor[(198), float32], %var_6528: Tensor[(512), float64]) -> (Tensor[(11, 6, 8), float32], Tensor[(507, 1), float32], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(13, 15), float32], Tensor[(3, 6, 11), float32], Tensor[(198), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(16, 2, 16), float64], Tensor[(512), float64]) {
  @func_6524(%var_6526, %var_6527, %var_6528) /* ty=(Tensor[(11, 6, 8), float32], Tensor[(507, 1), float32], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(13, 15), float32], Tensor[(3, 6, 11), float32], Tensor[(198), float32], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(16, 2, 16), float64], Tensor[(512), float64]) */
}

def @func_6308(%var_6303: Tensor[(7, 234), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(7, 234), float64]) {
  %433 = @func_5750() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %434 = cast(meta[relay.Constant][37] /* ty=Tensor[(39, 4), float64] */, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %435 = cast(%var_6303, dtype="float64") /* ty=Tensor[(7, 234), float64] */;
  %436 = reshape(%434, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %437 = reshape(%435, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %438 = @func_1471(%436, %437) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %439 = %433.0;
  %440 = %438.3;
  (%439, %440, meta[relay.Constant][37] /* ty=Tensor[(39, 4), float64] */, %var_6303)
}

def @func_5286() -> Tensor[(528), float32] {
  %442 = fn () -> Tensor[(528), float32] {
    %441 = @func_5200() /* ty=(Tensor[(528), float32],) */;
    %441.0
  };
  %442() /* ty=Tensor[(528), float32] */
}

def @func_4816() -> Tensor[(12, 16, 1), float64] {
  @func_4814() /* ty=Tensor[(12, 16, 1), float64] */
}

def @func_7554() -> (Tensor[(12, 16, 512), float32],) {
  @func_7552() /* ty=(Tensor[(12, 16, 512), float32],) */
}

def @func_7389(%var_7365: Tensor[(10, 3, 12), float32], %var_7373: Tensor[(156, 1), float64]) -> (Tensor[(10, 3, 12), float32], Tensor[(195), float32], Tensor[(156, 1), float64], Tensor[(1638), bool], Tensor[(12, 16, 1), float64]) {
  %443 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 3, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 3, 12), float32] */;
  %444 = shape_of(%var_7365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%var_7365, dtype="float32") /* ty=Tensor[(10, 3, 12), float32] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %447 = cast(%var_7373, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %448 = cast(meta[relay.Constant][39] /* ty=Tensor[(1638), bool] */, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %449 = cast(meta[relay.Constant][39] /* ty=Tensor[(1638), bool] */, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %450 = reshape(%447, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %451 = reshape(%448, newshape=[14, 117]) /* ty=Tensor[(14, 117), bool] */;
  %452 = reshape(%449, newshape=[14, 117]) /* ty=Tensor[(14, 117), bool] */;
  %453 = @func_4149(%450, %451, %452) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(15, 13, 1638), int8], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(156), float64], Tensor[(12, 16, 1), float64], Tensor[(14, 117), uint32], Tensor[(12, 16, 32), uint8], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float32]) */;
  %454 = @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %455 = divide(%445, %446) /* ty=Tensor[(10, 3, 12), float32] */;
  %456 = %453.3;
  %457 = %454.0;
  (%455, %456, %var_7373, meta[relay.Constant][39] /* ty=Tensor[(1638), bool] */, %457)
}

def @func_4154(%var_4151: Tensor[(156), float64], %var_4152: Tensor[(14, 117), bool], %var_4153: Tensor[(14, 117), bool]) -> (Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(15, 13, 1638), int8], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(156), float64], Tensor[(12, 16, 1), float64], Tensor[(14, 117), uint32], Tensor[(12, 16, 32), uint8], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float32]) {
  @func_4149(%var_4151, %var_4152, %var_4153) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(15, 13, 1638), int8], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(156), float64], Tensor[(12, 16, 1), float64], Tensor[(14, 117), uint32], Tensor[(12, 16, 32), uint8], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float32]) */
}

def @func_4680() -> (Tensor[(12, 16, 1), float64],) {
  %458 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %459 = %458.0;
  (%459,)
}

def @func_7808(%var_7806: Tensor[(156), float64], %var_7807: Tensor[(1540, 1), float32]) -> (Tensor[(12, 16, 512), float32], Tensor[(528), float32], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1540, 1), float32]) {
  %472 = fn (%var_7797: Tensor[(156), float64], %var_7799: Tensor[(1540, 1), float32]) -> (Tensor[(12, 16, 512), float32], Tensor[(528), float32], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1540, 1), float32]) {
    %460 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
    %461 = cast(%var_7797, dtype="float64") /* ty=Tensor[(156), float64] */;
    %462 = cast(meta[relay.Constant][40] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %463 = cast(%var_7799, dtype="float32") /* ty=Tensor[(1540, 1), float32] */;
    %464 = reshape(%461, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %465 = reshape(%462, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %466 = reshape(%463, newshape=[154, 10]) /* ty=Tensor[(154, 10), float32] */;
    %467 = @func_4228(%464, %465, %466) /* ty=(Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) */;
    %468 = cast(%var_7799, dtype="float32") /* ty=Tensor[(1540, 1), float32] */;
    %469 = %460.1;
    %470 = %467.0;
    %471 = sin(%468) /* ty=Tensor[(1540, 1), float32] */;
    (%469, %470, %var_7797, meta[relay.Constant][40] /* ty=Tensor[(1638), float64] */, %471)
  };
  %472(%var_7806, %var_7807) /* ty=(Tensor[(12, 16, 512), float32], Tensor[(528), float32], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1540, 1), float32]) */
}

def @func_3950(%var_3949: Tensor[(100), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(1, 11, 12), float64], Tensor[(66, 2), float32]) {
  %486 = fn (%var_3884: Tensor[(100), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(1, 11, 12), float64], Tensor[(66, 2), float32]) {
    %473 = cast(%var_3884, dtype="float32") /* ty=Tensor[(100), float32] */;
    %474 = reshape(%473, newshape=[10, 10]) /* ty=Tensor[(10, 10), float32] */;
    %475 = @func_3143(%474) /* ty=(Tensor[(10, 10), float32],) */;
    %476 = cast(meta[relay.Constant][41] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
    %477 = reshape(%476, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
    %478 = @func_117(%477) /* ty=(Tensor[(16, 2, 16), float64],) */;
    %479 = cast(meta[relay.Constant][42] /* ty=Tensor[(66, 2), float32] */, dtype="float32") /* ty=Tensor[(66, 2), float32] */;
    %480 = reshape(%479, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
    %481 = @func_370(%480) /* ty=(Tensor[(1, 11, 12), float64],) */;
    %482 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
    %483 = %475.0;
    %484 = %478.0;
    %485 = %481.0;
    (%482, %483, %var_3884, %484, meta[relay.Constant][41] /* ty=Tensor[(512), float64] */, %485, meta[relay.Constant][42] /* ty=Tensor[(66, 2), float32] */)
  };
  %486(%var_3949) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(10, 10), float32], Tensor[(100), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(1, 11, 12), float64], Tensor[(66, 2), float32]) */
}

def @func_7748(%var_7721: Tensor[(1638), float64], %var_7738: Tensor[(3072), float64]) -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 9), float32], Tensor[(1728), float64], Tensor[(1638), float64], Tensor[(1540), float32], Tensor[(12, 16, 512), bool], Tensor[(3072), float64], Tensor[(14, 13, 9), float64]) {
  %487 = @func_5325() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 528), float32]) */;
  %488 = %487.0;
  %489 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 16, 512), float64] */, dtype="float64") /* ty=Tensor[(12, 16, 512), float64] */;
  %490 = shape_of(%488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %491 = cast(%488, dtype="float64") /* ty=Tensor[(12, 16, 512), float64] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %493 = cast(meta[relay.Constant][44] /* ty=Tensor[(1728), float64] */, dtype="float64") /* ty=Tensor[(1728), float64] */;
  %494 = cast(%var_7721, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %495 = cast(meta[relay.Constant][45] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %496 = reshape(%493, newshape=[12, 16, 9]) /* ty=Tensor[(12, 16, 9), float64] */;
  %497 = reshape(%494, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %498 = reshape(%495, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %499 = @func_5008(%496, %497, %498) /* ty=(Tensor[(12, 16, 9), uint8], Tensor[(12, 16, 9), float32], Tensor[(156), float64], Tensor[(156, 1), float64], Tensor[(1638), float64], Tensor[(1540), float32]) */;
  %500 = cast(%488, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %501 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(12, 16, 512), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(meta[relay.Constant][43] /* ty=Tensor[(12, 16, 512), float64] */, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %504 = cast(%var_7738, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %505 = reshape(%504, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %506 = @func_4623(%505) /* ty=(Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) */;
  %507 = %506.2;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %509 = power(%491, %492) /* ty=Tensor[(12, 16, 512), float64] */;
  %510 = %499.1;
  %511 = less_equal(%502, %503) /* ty=Tensor[(12, 16, 512), bool] */;
  %512 = acosh(%508) /* ty=Tensor[(14, 13, 9), float64] */;
  (%509, %510, meta[relay.Constant][44] /* ty=Tensor[(1728), float64] */, %var_7721, meta[relay.Constant][45] /* ty=Tensor[(1540), float32] */, %511, %var_7738, %512)
}

def @func_5517(%var_5515: Tensor[(156, 1), float64], %var_5516: Tensor[(12, 16, 1638), float32]) -> (Tensor[(528), float32], Tensor[(1638), float64], Tensor[(156, 1), float64], Tensor[(1, 195), float32], Tensor[(1, 11, 12), float64], Tensor[(100), float32], Tensor[(12, 16, 1638), bool]) {
  @func_5513(%var_5515, %var_5516) /* ty=(Tensor[(528), float32], Tensor[(1638), float64], Tensor[(156, 1), float64], Tensor[(1, 195), float32], Tensor[(1, 11, 12), float64], Tensor[(100), float32], Tensor[(12, 16, 1638), bool]) */
}

def @func_5966(%var_5964: Tensor[(1540), float32], %var_5965: Tensor[(1638), float64]) -> (Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(1638), float64], Tensor[(12, 16, 512), bool]) {
  %528 = fn (%var_5939: Tensor[(1540), float32], %var_5941: Tensor[(1638), float64]) -> (Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(1638), float64], Tensor[(12, 16, 512), bool]) {
    %513 = cast(meta[relay.Constant][46] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
    %514 = cast(%var_5939, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %515 = cast(meta[relay.Constant][47] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
    %516 = cast(%var_5941, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %517 = reshape(%513, newshape=[195]) /* ty=Tensor[(195), float32] */;
    %518 = reshape(%514, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
    %519 = reshape(%515, newshape=[512]) /* ty=Tensor[(512), float64] */;
    %520 = reshape(%516, newshape=[1, 1638]) /* ty=Tensor[(1, 1638), float64] */;
    %521 = @func_3368(%517, %518, %519, %520) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */;
    %522 = @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %523 = %522.0;
    %524 = cast(%523, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
    %525 = cast(meta[relay.Constant][47] /* ty=Tensor[(512), float64] */, dtype="bool") /* ty=Tensor[(512), bool] */;
    %526 = %521.6;
    %527 = not_equal(%524, %525) /* ty=Tensor[(12, 16, 512), bool] */;
    (%526, meta[relay.Constant][46] /* ty=Tensor[(195), float32] */, %var_5939, %var_5941, %527)
  };
  %528(%var_5964, %var_5965) /* ty=(Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(1638), float64], Tensor[(12, 16, 512), bool]) */
}

def @func_7624(%var_7621: Tensor[(528), float32], %var_7622: Tensor[(780), float32], %var_7623: Tensor[(1536, 2), float64]) -> (Tensor[(512), uint32], Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32], Tensor[(528), float32], Tensor[(11, 6, 8), float32], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(1638, 1), float64], Tensor[(156), float64], Tensor[(13, 13, 3), uint32], Tensor[(1536, 2), float64]) {
  %550 = fn (%var_7590: Tensor[(528), float32], %var_7604: Tensor[(780), float32], %var_7609: Tensor[(1536, 2), float64]) -> (Tensor[(512), uint32], Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32], Tensor[(528), float32], Tensor[(11, 6, 8), float32], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(1638, 1), float64], Tensor[(156), float64], Tensor[(13, 13, 3), uint32], Tensor[(1536, 2), float64]) {
    %529 = @func_6262() /* ty=(Tensor[(12, 16, 512), float32],) */;
    %530 = cast(%var_7590, dtype="float32") /* ty=Tensor[(528), float32] */;
    %531 = reshape(%530, newshape=[11, 6, 8]) /* ty=Tensor[(11, 6, 8), float32] */;
    %532 = @func_3098(%531) /* ty=(Tensor[(11, 6, 8), float32],) */;
    %533 = @func_6898() /* ty=(Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32]) */;
    %534 = cast(%var_7604, dtype="float32") /* ty=Tensor[(780), float32] */;
    %535 = cast(meta[relay.Constant][48] /* ty=Tensor[(1638, 1), float64] */, dtype="float64") /* ty=Tensor[(1638, 1), float64] */;
    %536 = cast(meta[relay.Constant][49] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
    %537 = reshape(%534, newshape=[13, 4, 15]) /* ty=Tensor[(13, 4, 15), float32] */;
    %538 = reshape(%535, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %539 = reshape(%536, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
    %540 = @func_2221(%537, %538, %539) /* ty=(Tensor[(13, 4, 15), float32], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(16, 2, 16), float64], Tensor[(8, 64), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(132), float32], Tensor[(1540), float32], Tensor[(132), float32]) */;
    %541 = cast(%var_7609, dtype="float64") /* ty=Tensor[(1536, 2), float64] */;
    %542 = reshape(%541, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
    %543 = @func_4623(%542) /* ty=(Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) */;
    %544 = @func_5860() /* ty=Tensor[(512), uint32] */;
    %545 = %529.0;
    %546 = %532.0;
    %547 = %533.1;
    %548 = %540.5;
    %549 = %543.0;
    (%544, %545, %546, %var_7590, %547, %548, %var_7604, meta[relay.Constant][48] /* ty=Tensor[(1638, 1), float64] */, meta[relay.Constant][49] /* ty=Tensor[(156), float64] */, %549, %var_7609)
  };
  %550(%var_7621, %var_7622, %var_7623) /* ty=(Tensor[(512), uint32], Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32], Tensor[(528), float32], Tensor[(11, 6, 8), float32], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(1638, 1), float64], Tensor[(156), float64], Tensor[(13, 13, 3), uint32], Tensor[(1536, 2), float64]) */
}

def @func_8623() -> (Tensor[(12, 16, 512), float32], Tensor[(12, 16, 512), bool], Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198), float32]) {
  %568 = fn () -> (Tensor[(12, 16, 512), float32], Tensor[(12, 16, 512), bool], Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198), float32]) {
    %551 = @func_5126() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) */;
    %552 = %551.1;
    %553 = cast(%552, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
    %554 = cast(%552, dtype="float64") /* ty=Tensor[(12, 16, 512), float64] */;
    %555 = cos(%554) /* ty=Tensor[(12, 16, 512), float64] */;
    %556 = cast(%555, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
    %557 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
    %558 = cast(%552, dtype="bool") /* ty=Tensor[(12, 16, 512), bool] */;
    %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %560 = @func_8265() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %561 = cast(meta[relay.Constant][50] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
    %562 = reshape(%561, newshape=[198, 1]) /* ty=Tensor[(198, 1), float32] */;
    %563 = @func_7937(%562) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198, 1), float32]) */;
    %564 = sinh(%553) /* ty=Tensor[(12, 16, 512), float32] */;
    %565 = greater_equal(%558, %559) /* ty=Tensor[(12, 16, 512), bool] */;
    %566 = %560.0;
    %567 = %563.1;
    (%564, %565, %566, %567, meta[relay.Constant][50] /* ty=Tensor[(198), float32] */)
  };
  %568() /* ty=(Tensor[(12, 16, 512), float32], Tensor[(12, 16, 512), bool], Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198), float32]) */
}

def @func_5860() -> Tensor[(512), uint32] {
  %569 = @func_4645() /* ty=Tensor[(512), float64] */;
  %570 = cast(%569, dtype="float32") /* ty=Tensor[(512), float32] */;
  %571 = exp(%570) /* ty=Tensor[(512), float32] */;
  %572 = cast(%569, dtype="uint32") /* ty=Tensor[(512), uint32] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(1), int32] */;
  %574 = cast(%571, dtype="uint32") /* ty=Tensor[(512), uint32] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?), uint32] */;
  bitwise_and(%574, %575) /* ty=Tensor[(512), uint32] */
}

def @func_3314(%var_3309: Tensor[(15, 13, 1), float32], %var_3310: Tensor[(1540), float32], %var_3311: Tensor[(512), float64], %var_3312: Tensor[(1638), float64], %var_3313: Tensor[(156), float64]) -> (Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) {
  @func_3307(%var_3309, %var_3310, %var_3311, %var_3312, %var_3313) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */
}

def @func_119(%var_118: Tensor[(16, 2, 16), float64]) -> (Tensor[(16, 2, 16), float64],) {
  %578 = fn (%var_112: Tensor[(16, 2, 16), float64]) -> (Tensor[(16, 2, 16), float64],) {
    %576 = cast(%var_112, dtype="float64") /* ty=Tensor[(16, 2, 16), float64] */;
    %577 = rsqrt(%576) /* ty=Tensor[(16, 2, 16), float64] */;
    (%577,)
  };
  %578(%var_118) /* ty=(Tensor[(16, 2, 16), float64],) */
}

def @func_4896(%var_4888: Tensor[(39, 4), float64], %var_4889: Tensor[(1638), float64], %var_4890: Tensor[(195), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(1638), float64], Tensor[(195), float32]) {
  %579 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %580 = cast(%var_4888, dtype="float64") /* ty=Tensor[(39, 4), float64] */;
  %581 = cast(%var_4889, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %582 = cast(%var_4890, dtype="float32") /* ty=Tensor[(195), float32] */;
  %583 = reshape(%580, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %584 = reshape(%581, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %585 = reshape(%582, newshape=[39, 5]) /* ty=Tensor[(39, 5), float32] */;
  %586 = @func_3702(%583, %584, %585) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(1, 11, 12), float64], Tensor[(39, 5), float32], Tensor[(512), float64], Tensor[(13, 13, 3), uint32], Tensor[(507, 1), float32], Tensor[(12, 16, 1540), uint32]) */;
  %587 = %579.0;
  %588 = %586.2;
  (%587, %588, %var_4888, %var_4889, %var_4890)
}

def @func_5201() -> (Tensor[(528), float32],) {
  %591 = fn () -> (Tensor[(528), float32],) {
    %589 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
    %590 = %589.2;
    (%590,)
  };
  %591() /* ty=(Tensor[(528), float32],) */
}

def @func_4439() -> (Tensor[(12, 16, 1), float64],) {
  %592 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %593 = %592.0;
  (%593,)
}

def @func_4228(%var_4218: Tensor[(156), float64], %var_4219: Tensor[(1638), float64], %var_4225: Tensor[(154, 10), float32]) -> (Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) {
  %594 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %595 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %596 = cast(%var_4218, dtype="float64") /* ty=Tensor[(156), float64] */;
  %597 = cast(%var_4219, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %598 = reshape(%596, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %599 = reshape(%597, newshape=[14, 117]) /* ty=Tensor[(14, 117), float64] */;
  %600 = @func_1471(%598, %599) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) */;
  %601 = cast(meta[relay.Constant][51] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %602 = cast(%var_4225, dtype="float32") /* ty=Tensor[(154, 10), float32] */;
  %603 = cast(meta[relay.Constant][52] /* ty=Tensor[(512), float64] */, dtype="float64") /* ty=Tensor[(512), float64] */;
  %604 = cast(%var_4219, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %605 = reshape(%601, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %606 = reshape(%602, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %607 = reshape(%603, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %608 = reshape(%604, newshape=[1, 1638]) /* ty=Tensor[(1, 1638), float64] */;
  %609 = @func_3368(%605, %606, %607, %608) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */;
  %610 = %594.0;
  %611 = %595.0;
  %612 = %600.2;
  %613 = %609.1;
  (%610, %611, %612, %var_4218, %var_4219, %613, meta[relay.Constant][51] /* ty=Tensor[(195), float32] */, %var_4225, meta[relay.Constant][52] /* ty=Tensor[(512), float64] */)
}

def @func_6568() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float32]) {
  %614 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %615 = @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %616 = %615.1;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %618 = %614.0;
  %619 = atanh(%617) /* ty=Tensor[(12, 16, 1), float32] */;
  (%618, %619)
}

def @func_5751() -> (Tensor[(12, 16, 1), float64],) {
  %622 = fn () -> (Tensor[(12, 16, 1), float64],) {
    %620 = @func_4439() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %621 = %620.0;
    (%621,)
  };
  %622() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_7892() -> Tensor[(12, 16, 1), float64] {
  @func_7890() /* ty=Tensor[(12, 16, 1), float64] */
}

def @func_3307(%var_3233: Tensor[(15, 13, 1), float32], %var_3258: Tensor[(1540), float32], %var_3272: Tensor[(512), float64], %var_3279: Tensor[(1638), float64], %var_3284: Tensor[(156), float64]) -> (Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) {
  %623 = cast(%var_3233, dtype="float32") /* ty=Tensor[(15, 13, 1), float32] */;
  %624 = log2(%623) /* ty=Tensor[(15, 13, 1), float32] */;
  %625 = cast(%624, dtype="bool") /* ty=Tensor[(15, 13, 1), bool] */;
  %626 = shape_of(%var_3233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%var_3233, dtype="bool") /* ty=Tensor[(15, 13, 1), bool] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %629 = cast(%var_3258, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %630 = cast(meta[relay.Constant][53] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %631 = reshape(%629, newshape=[10, 11, 14]) /* ty=Tensor[(10, 11, 14), float32] */;
  %632 = reshape(%630, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %633 = @func_1789(%631, %632) /* ty=(Tensor[(10, 11, 14), bool], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) */;
  %634 = cast(%var_3272, dtype="float64") /* ty=Tensor[(512), float64] */;
  %635 = reshape(%634, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
  %636 = @func_117(%635) /* ty=(Tensor[(16, 2, 16), float64],) */;
  %637 = cast(%var_3279, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %638 = reshape(%637, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %639 = @func_1143(%638) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %640 = cast(meta[relay.Constant][54] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %641 = %639.0;
  %642 = cast(%641, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %643 = cast(%var_3284, dtype="float64") /* ty=Tensor[(156), float64] */;
  %644 = reshape(%640, newshape=[13, 4, 15]) /* ty=Tensor[(13, 4, 15), float32] */;
  %645 = reshape(%642, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %646 = reshape(%643, newshape=[39, 4]) /* ty=Tensor[(39, 4), float64] */;
  %647 = @func_2221(%644, %645, %646) /* ty=(Tensor[(13, 4, 15), float32], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(16, 2, 16), float64], Tensor[(8, 64), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(132), float32], Tensor[(1540), float32], Tensor[(132), float32]) */;
  %648 = cast(%var_3279, dtype="int8") /* ty=Tensor[(1638), int8] */;
  %649 = cast(%624, dtype="int8") /* ty=Tensor[(15, 13, 1), int8] */;
  %650 = cast(meta[relay.Constant][53] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %651 = reshape(%650, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
  %652 = @func_370(%651) /* ty=(Tensor[(1, 11, 12), float64],) */;
  %653 = logical_or(%627, %628) /* ty=Tensor[(15, 13, ?), bool] */;
  %654 = %633.1;
  %655 = %636.0;
  %656 = %647.1;
  %657 = bitwise_and(%648, %649) /* ty=Tensor[(15, 13, 1638), int8] */;
  %658 = %652.0;
  (%653, %654, %var_3258, meta[relay.Constant][53] /* ty=Tensor[(132), float32] */, %655, %var_3272, %641, %656, meta[relay.Constant][54] /* ty=Tensor[(780), float32] */, %var_3284, %657, %658)
}

def @func_7063(%var_7058: Tensor[(132), float32], %var_7059: Tensor[(12, 16, 512), float32], %var_7060: Tensor[(4, 280), float64], %var_7061: Tensor[(720), uint8], %var_7062: Tensor[(4, 280), float64]) -> (Tensor[(4, 132), float32], Tensor[(156), float64], Tensor[(132), float32], Tensor[(12, 16, 512), float64], Tensor[(12, 16, 1), float64], Tensor[(12, 4, 15), uint8], Tensor[(720), uint8], Tensor[(5, 13, 1), float64], Tensor[(4, 280), bool]) {
  @func_7056(%var_7058, %var_7059, %var_7060, %var_7061, %var_7062) /* ty=(Tensor[(4, 132), float32], Tensor[(156), float64], Tensor[(132), float32], Tensor[(12, 16, 512), float64], Tensor[(12, 16, 1), float64], Tensor[(12, 4, 15), uint8], Tensor[(720), uint8], Tensor[(5, 13, 1), float64], Tensor[(4, 280), bool]) */
}

def @main() -> (Tensor[(528), float32], Tensor[(512), float64], Tensor[(1540), float64]) {
  %659 = @func_4053() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %660 = @func_7101() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(512), float64], Tensor[(512), float64]) */;
  %661 = @func_4053() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %662 = %661.1;
  %663 = cast(%662, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %664 = sigmoid(%663) /* ty=Tensor[(1540), float64] */;
  %665 = cast(%664, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %666 = %659.0;
  %667 = %660.1;
  %668 = erf(%665) /* ty=Tensor[(1540), float64] */;
  (%666, %667, %668)
}

def @func_3429(%var_3428: Tensor[(1, 512), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) {
  %674 = fn (%var_3422: Tensor[(1, 512), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) {
    %669 = cast(%var_3422, dtype="float64") /* ty=Tensor[(1, 512), float64] */;
    %670 = reshape(%669, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), float64] */;
    %671 = @func_117(%670) /* ty=(Tensor[(16, 2, 16), float64],) */;
    %672 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
    %673 = %671.0;
    (%672, %673, %var_3422)
  };
  %674(%var_3428) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) */
}

def @func_3143(%var_3132: Tensor[(10, 10), float32]) -> (Tensor[(10, 10), float32],) {
  %675 = cast(%var_3132, dtype="float32") /* ty=Tensor[(10, 10), float32] */;
  %676 = log(%675) /* ty=Tensor[(10, 10), float32] */;
  (%676,)
}

def @func_7308() -> (Tensor[(12, 16, 1), float64],) {
  %679 = fn () -> (Tensor[(12, 16, 1), float64],) {
    %677 = @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
    %678 = %677.1;
    (%678,)
  };
  %679() /* ty=(Tensor[(12, 16, 1), float64],) */
}

def @func_3490() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */
}

def @func_5325() -> (Tensor[(12, 16, 512), float64], Tensor[(12, 16, 528), float32]) {
  %680 = @func_4780() /* ty=(Tensor[(512), float64],) */;
  %681 = %680.0;
  %682 = @func_4855() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %683 = %682.1;
  %684 = cast(%681, dtype="float64") /* ty=Tensor[(512), float64] */;
  %685 = cast(%683, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %686 = cast(%683, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %687 = sinh(%686) /* ty=Tensor[(12, 16, 1), float32] */;
  %688 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %689 = %688.0;
  %690 = cast(%687, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %691 = cast(%689, dtype="float32") /* ty=Tensor[(528), float32] */;
  %692 = multiply(%684, %685) /* ty=Tensor[(12, 16, 512), float64] */;
  %693 = subtract(%690, %691) /* ty=Tensor[(12, 16, 528), float32] */;
  (%692, %693)
}

def @func_3340() -> Tensor[(12, 16, 1), float64] {
  %696 = fn () -> Tensor[(12, 16, 1), float64] {
    %694 = cast(1.28472f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %695 = cast(meta[relay.Constant][55] /* ty=Tensor[(12, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
    floor_mod(%694, %695) /* ty=Tensor[(12, 16, 1), float64] */
  };
  %696() /* ty=Tensor[(12, 16, 1), float64] */
}

def @func_8259() -> (Tensor[(5, 13, 1), float64], Tensor[(12, 16, 1), float64]) {
  %699 = fn () -> (Tensor[(5, 13, 1), float64], Tensor[(12, 16, 1), float64]) {
    %697 = @func_4699() /* ty=Tensor[(5, 13, 1), float64] */;
    %698 = @func_7890() /* ty=Tensor[(12, 16, 1), float64] */;
    (%697, %698)
  };
  %699() /* ty=(Tensor[(5, 13, 1), float64], Tensor[(12, 16, 1), float64]) */
}

def @func_3729(%var_3728: Tensor[(132), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) {
  %705 = fn (%var_3721: Tensor[(132), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) {
    %700 = cast(%var_3721, dtype="float32") /* ty=Tensor[(132), float32] */;
    %701 = reshape(%700, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
    %702 = @func_370(%701) /* ty=(Tensor[(1, 11, 12), float64],) */;
    %703 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
    %704 = %702.0;
    (%703, %704, %var_3721)
  };
  %705(%var_3728) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) */
}

def @func_8293(%var_8291: Tensor[(78, 2), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64], Tensor[(78, 2), float64], Tensor[(1638), float64], Tensor[(1540), float32]) {
  @func_8290(%var_8291) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64], Tensor[(78, 2), float64], Tensor[(1638), float64], Tensor[(1540), float32]) */
}

def @func_370(%var_358: Tensor[(1, 11, 12), float32]) -> (Tensor[(1, 11, 12), float64],) {
  %706 = cast(%var_358, dtype="float32") /* ty=Tensor[(1, 11, 12), float32] */;
  %707 = sinh(%706) /* ty=Tensor[(1, 11, 12), float32] */;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(1, 11, 12), float64] */;
  %709 = cos(%708) /* ty=Tensor[(1, 11, 12), float64] */;
  (%709,)
}

def @func_6029(%var_6028: Tensor[(12, 4, 15), uint8]) -> (Tensor[(12, 4, 15), uint8], Tensor[(12, 4, 15), int16]) {
  %725 = fn (%var_5991: Tensor[(12, 4, 15), uint8]) -> (Tensor[(12, 4, 15), uint8], Tensor[(12, 4, 15), int16]) {
    %710 = cast(%var_5991, dtype="uint8") /* ty=Tensor[(12, 4, 15), uint8] */;
    %711 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(12, 4, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %712 = cast(meta[relay.Constant][56] /* ty=Tensor[(12, 4, 15), uint8] */, dtype="uint8") /* ty=Tensor[(12, 4, 15), uint8] */;
    %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %714 = cast(meta[relay.Constant][56] /* ty=Tensor[(12, 4, 15), uint8] */, dtype="bool") /* ty=Tensor[(12, 4, 15), bool] */;
    %715 = shape_of(%var_5991, dtype="int32") /* ty=Tensor[(3), int32] */;
    %716 = cast(%var_5991, dtype="bool") /* ty=Tensor[(12, 4, 15), bool] */;
    %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %718 = not_equal(%716, %717) /* ty=Tensor[(12, 4, 15), bool] */;
    %719 = cast(%718, dtype="int16") /* ty=Tensor[(12, 4, 15), int16] */;
    %720 = shape_of(%var_5991, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%var_5991, dtype="int16") /* ty=Tensor[(12, 4, 15), int16] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %723 = right_shift(%712, %713) /* ty=Tensor[(12, 4, 15), uint8] */;
    %724 = left_shift(%721, %722) /* ty=Tensor[(12, 4, 15), int16] */;
    (%723, %724)
  };
  %725(%var_6028) /* ty=(Tensor[(12, 4, 15), uint8], Tensor[(12, 4, 15), int16]) */
}

def @func_6835() -> Tensor[(12, 16, 1), float64] {
  @func_6833() /* ty=Tensor[(12, 16, 1), float64] */
}

def @func_5230() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  %726 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %727 = %726.0;
  %728 = @func_4814() /* ty=Tensor[(12, 16, 1), float64] */;
  (%727, %728)
}

def @func_8169(%var_8167: Tensor[(512), float64]) -> (Tensor[(512), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1540), uint64], Tensor[(12, 16, 512), float64]) {
  @func_8166(%var_8167) /* ty=(Tensor[(512), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1540), uint64], Tensor[(12, 16, 512), float64]) */
}

def @func_3986() -> (Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) {
  %729 = cast(meta[relay.Constant][57] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %730 = reshape(%729, newshape=[11, 6, 8]) /* ty=Tensor[(11, 6, 8), float32] */;
  %731 = @func_3098(%730) /* ty=(Tensor[(11, 6, 8), float32],) */;
  %732 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %733 = %731.0;
  (%732, %733, meta[relay.Constant][57] /* ty=Tensor[(528), float32] */)
}

def @func_7488(%var_7486: Tensor[(14, 1, 14), int16], %var_7487: Tensor[(14, 5, 14), int16]) -> Tensor[(14, 5, 14), int16] {
  %736 = fn (%var_7480: Tensor[(14, 1, 14), int16], %var_7481: Tensor[(14, 5, 14), int16]) -> Tensor[(14, 5, 14), int16] {
    %734 = cast(%var_7480, dtype="int16") /* ty=Tensor[(14, 1, 14), int16] */;
    %735 = cast(%var_7481, dtype="int16") /* ty=Tensor[(14, 5, 14), int16] */;
    subtract(%734, %735) /* ty=Tensor[(14, 5, 14), int16] */
  };
  %736(%var_7486, %var_7487) /* ty=Tensor[(14, 5, 14), int16] */
}

def @func_4149(%var_4070: Tensor[(156), float64], %var_4110: Tensor[(14, 117), bool], %var_4136: Tensor[(14, 117), bool]) -> (Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(15, 13, 1638), int8], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(156), float64], Tensor[(12, 16, 1), float64], Tensor[(14, 117), uint32], Tensor[(12, 16, 32), uint8], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float32]) {
  %737 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 117), float64] */, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %738 = reshape(%737, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %739 = @func_1143(%738) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %740 = cast(meta[relay.Constant][59] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %741 = cast(meta[relay.Constant][60] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %742 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 32), float64] */, dtype="float64") /* ty=Tensor[(16, 32), float64] */;
  %743 = %739.0;
  %744 = cast(%743, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %745 = cast(%var_4070, dtype="float64") /* ty=Tensor[(156), float64] */;
  %746 = reshape(%740, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %747 = reshape(%741, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %748 = reshape(%742, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %749 = reshape(%744, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %750 = reshape(%745, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %751 = @func_3307(%746, %747, %748, %749, %750) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %752 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 32), float64] */, dtype="float64") /* ty=Tensor[(16, 32), float64] */;
  %753 = reshape(%752, newshape=[1, 512]) /* ty=Tensor[(1, 512), float64] */;
  %754 = @func_3427(%753) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) */;
  %755 = @func_4052() /* ty=(Tensor[(528), float32], Tensor[(1540), float32], Tensor[(195, 1), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64]) */;
  %756 = %755.5;
  %757 = cast(%756, dtype="bool") /* ty=Tensor[(1638), bool] */;
  %758 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(14, 117), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %759 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 117), float64] */, dtype="bool") /* ty=Tensor[(14, 117), bool] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %761 = not_equal(%759, %760) /* ty=Tensor[(14, 117), bool] */;
  %762 = cast(%var_4110, dtype="uint32") /* ty=Tensor[(14, 117), uint32] */;
  %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(2), int32] */;
  %764 = cast(%761, dtype="uint32") /* ty=Tensor[(14, 117), uint32] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %766 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %767 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 32), float64] */, dtype="uint8") /* ty=Tensor[(16, 32), uint8] */;
  %768 = cast(%766, dtype="uint8") /* ty=Tensor[(12, 16, 1), uint8] */;
  %769 = cast(meta[relay.Constant][59] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %770 = cast(meta[relay.Constant][60] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %771 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 32), float64] */, dtype="float64") /* ty=Tensor[(16, 32), float64] */;
  %772 = cast(%756, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %773 = cast(%var_4070, dtype="float64") /* ty=Tensor[(156), float64] */;
  %774 = reshape(%769, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %775 = reshape(%770, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %776 = reshape(%771, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %777 = reshape(%772, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %778 = reshape(%773, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %779 = @func_3307(%774, %775, %776, %777, %778) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %780 = cast(%var_4136, dtype="float32") /* ty=Tensor[(14, 117), float32] */;
  %781 = shape_of(%761, dtype="int32") /* ty=Tensor[(2), int32] */;
  %782 = cast(%761, dtype="float32") /* ty=Tensor[(14, 117), float32] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %784 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %785 = %751.10;
  %786 = %754.0;
  %787 = bitwise_or(%764, %765) /* ty=Tensor[(14, 117), uint32] */;
  %788 = logical_xor(%767, %768) /* ty=Tensor[(12, 16, 32), uint8] */;
  %789 = %779.6;
  %790 = floor_divide(%782, %783) /* ty=Tensor[(14, 117), float32] */;
  (%784, %743, %785, meta[relay.Constant][59] /* ty=Tensor[(195), float32] */, meta[relay.Constant][60] /* ty=Tensor[(1540), float32] */, %var_4070, %786, %787, %788, %789, %790)
}

def @func_3100(%var_3099: Tensor[(11, 6, 8), float32]) -> (Tensor[(11, 6, 8), float32],) {
  %793 = fn (%var_3088: Tensor[(11, 6, 8), float32]) -> (Tensor[(11, 6, 8), float32],) {
    %791 = cast(%var_3088, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
    %792 = acos(%791) /* ty=Tensor[(11, 6, 8), float32] */;
    (%792,)
  };
  %793(%var_3099) /* ty=(Tensor[(11, 6, 8), float32],) */
}

def @func_1146(%var_1144: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64],) {
  @func_1143(%var_1144) /* ty=(Tensor[(14, 13, 9), float64],) */
}

def @func_7940(%var_7938: Tensor[(198, 1), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198, 1), float32]) {
  @func_7937(%var_7938) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(3, 6, 11), float32], Tensor[(198, 1), float32]) */
}

def @func_5612(%var_5610: Tensor[(1120), int16], %var_5611: Tensor[(156), float64]) -> (Tensor[(512), float64], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64]) {
  @func_5608(%var_5610, %var_5611) /* ty=(Tensor[(512), float64], Tensor[(10, 8, 14), int16], Tensor[(1120), int16], Tensor[(14, 13, 9), float64], Tensor[(156), float64], Tensor[(1638), float64]) */
}

def @func_8166(%var_8116: Tensor[(512), float64]) -> (Tensor[(512), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1540), uint64], Tensor[(12, 16, 512), float64]) {
  %794 = @func_5126() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) */;
  %795 = cast(%var_8116, dtype="float64") /* ty=Tensor[(512), float64] */;
  %796 = reshape(%795, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %797 = @func_4188(%796) /* ty=(Tensor[(512), float64], Tensor[(12, 16, ?), uint16], Tensor[(12, 16, 1), float64]) */;
  %798 = %797.2;
  %799 = @func_5622() /* ty=(Tensor[(1540), float32],) */;
  %800 = %799.0;
  %801 = cast(%798, dtype="uint64") /* ty=Tensor[(12, 16, 1), uint64] */;
  %802 = cast(%800, dtype="uint64") /* ty=Tensor[(1540), uint64] */;
  %803 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
  %804 = %794.1;
  %805 = maximum(%801, %802) /* ty=Tensor[(12, 16, 1540), uint64] */;
  %806 = %803.0;
  (%var_8116, %804, %805, %806)
}

def @func_4782() -> (Tensor[(512), float64],) {
  @func_4780() /* ty=(Tensor[(512), float64],) */
}

def @func_4901(%var_4898: Tensor[(39, 4), float64], %var_4899: Tensor[(1638), float64], %var_4900: Tensor[(195), float32]) -> (Tensor[(12, 16, 1), float64], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(1638), float64], Tensor[(195), float32]) {
  @func_4896(%var_4898, %var_4899, %var_4900) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(1638), float64], Tensor[(39, 4), float64], Tensor[(1638), float64], Tensor[(195), float32]) */
}

def @func_3488() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) {
  %807 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %808 = %807.0;
  %809 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  (%808, %809)
}

def @func_6570() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float32]) {
  @func_6568() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float32]) */
}

def @func_3827() -> (Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) {
  @func_3825() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) */
}

def @func_4294(%var_4287: Tensor[(512), float64], %var_4288: Tensor[(1638), float64], %var_4289: Tensor[(3, 52), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(780), float32], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(3, 52), float64]) {
  %810 = @func_3488() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %811 = cast(meta[relay.Constant][62] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %812 = cast(meta[relay.Constant][63] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %813 = cast(%var_4287, dtype="float64") /* ty=Tensor[(512), float64] */;
  %814 = cast(%var_4288, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %815 = cast(%var_4289, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
  %816 = reshape(%811, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %817 = reshape(%812, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %818 = reshape(%813, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %819 = reshape(%814, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %820 = reshape(%815, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %821 = @func_3307(%816, %817, %818, %819, %820) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %822 = %810.0;
  %823 = %821.8;
  (%822, %823, meta[relay.Constant][62] /* ty=Tensor[(195), float32] */, meta[relay.Constant][63] /* ty=Tensor[(1540), float32] */, %var_4287, %var_4288, %var_4289)
}

def @func_7166() -> (Tensor[(512), float64],) {
  %825 = fn () -> (Tensor[(512), float64],) {
    %824 = @func_4645() /* ty=Tensor[(512), float64] */;
    (%824,)
  };
  %825() /* ty=(Tensor[(512), float64],) */
}

def @func_2226(%var_2223: Tensor[(13, 4, 15), float32], %var_2224: Tensor[(1638), float64], %var_2225: Tensor[(39, 4), float64]) -> (Tensor[(13, 4, 15), float32], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(16, 2, 16), float64], Tensor[(8, 64), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(132), float32], Tensor[(1540), float32], Tensor[(132), float32]) {
  @func_2221(%var_2223, %var_2224, %var_2225) /* ty=(Tensor[(13, 4, 15), float32], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(16, 2, 16), float64], Tensor[(8, 64), float64], Tensor[(14, 13, 9), float64], Tensor[(39, 4), float64], Tensor[(132), float32], Tensor[(1540), float32], Tensor[(132), float32]) */
}

def @func_2467(%var_2466: Tensor[(13, 13, 3), float32]) -> Tensor[(13, 13, 3), uint32] {
  %837 = fn (%var_2437: Tensor[(13, 13, 3), float32]) -> Tensor[(13, 13, 3), uint32] {
    %826 = cast(%var_2437, dtype="float32") /* ty=Tensor[(13, 13, 3), float32] */;
    %827 = exp(%826) /* ty=Tensor[(13, 13, 3), float32] */;
    %828 = cast(%var_2437, dtype="bool") /* ty=Tensor[(13, 13, 3), bool] */;
    %829 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
    %830 = cast(%827, dtype="bool") /* ty=Tensor[(13, 13, 3), bool] */;
    %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %832 = equal(%830, %831) /* ty=Tensor[(13, 13, 3), bool] */;
    %833 = cast(%var_2437, dtype="uint32") /* ty=Tensor[(13, 13, 3), uint32] */;
    %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
    %835 = cast(%832, dtype="uint32") /* ty=Tensor[(13, 13, 3), uint32] */;
    %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    left_shift(%835, %836) /* ty=Tensor[(13, 13, 3), uint32] */
  };
  %837(%var_2466) /* ty=Tensor[(13, 13, 3), uint32] */
}

def @func_4814() -> Tensor[(12, 16, 1), float64] {
  %838 = @func_3447() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %838.0
}

def @func_3368(%var_3346: Tensor[(195), float32], %var_3347: Tensor[(1540), float32], %var_3348: Tensor[(512), float64], %var_3349: Tensor[(1, 1638), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) {
  %839 = cast(%var_3346, dtype="float32") /* ty=Tensor[(195), float32] */;
  %840 = cast(%var_3347, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %841 = cast(%var_3348, dtype="float64") /* ty=Tensor[(512), float64] */;
  %842 = cast(%var_3349, dtype="float64") /* ty=Tensor[(1, 1638), float64] */;
  %843 = cast(meta[relay.Constant][64] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %844 = reshape(%839, newshape=[15, 13, 1]) /* ty=Tensor[(15, 13, 1), float32] */;
  %845 = reshape(%840, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %846 = reshape(%841, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %847 = reshape(%842, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %848 = reshape(%843, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %849 = @func_3307(%844, %845, %846, %847, %848) /* ty=(Tensor[(15, 13, ?), bool], Tensor[(1, 11, 12), float64], Tensor[(1540), float32], Tensor[(132), float32], Tensor[(16, 2, 16), float64], Tensor[(512), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 13, 9), float64], Tensor[(780), float32], Tensor[(156), float64], Tensor[(15, 13, 1638), int8], Tensor[(1, 11, 12), float64]) */;
  %850 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
  %851 = %849.9;
  (%850, %851, %var_3346, %var_3347, %var_3348, %var_3349, meta[relay.Constant][64] /* ty=Tensor[(156), float64] */)
}

def @func_8304() -> Tensor[(512), float64] {
  %852 = @func_7165() /* ty=(Tensor[(512), float64],) */;
  %852.0
}

def @func_3825() -> (Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(4, 132), float32]) {
  %853 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %854 = %853.0;
  %855 = cast(%854, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %856 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 132), float32] */, dtype="float32") /* ty=Tensor[(4, 132), float32] */;
  %857 = reshape(%856, newshape=[11, 6, 8]) /* ty=Tensor[(11, 6, 8), float32] */;
  %858 = @func_3098(%857) /* ty=(Tensor[(11, 6, 8), float32],) */;
  %859 = rsqrt(%855) /* ty=Tensor[(12, 16, 1), float64] */;
  %860 = %858.0;
  (%859, %860, meta[relay.Constant][65] /* ty=Tensor[(4, 132), float32] */)
}

def @func_4233(%var_4230: Tensor[(156), float64], %var_4231: Tensor[(1638), float64], %var_4232: Tensor[(154, 10), float32]) -> (Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) {
  @func_4228(%var_4230, %var_4231, %var_4232) /* ty=(Tensor[(528), float32], Tensor[(12, 16, 1), float64], Tensor[(14, 117), float64], Tensor[(156), float64], Tensor[(1638), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(154, 10), float32], Tensor[(512), float64]) */
}

def @func_5244(%var_5239: Tensor[(8, 9, 16), int8]) -> Tensor[(8, 9, 16), int8] {
  %861 = cast(meta[relay.Constant][66] /* ty=Tensor[(8, 9, 16), int8] */, dtype="int8") /* ty=Tensor[(8, 9, 16), int8] */;
  %862 = shape_of(%var_5239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%var_5239, dtype="int8") /* ty=Tensor[(8, 9, 16), int8] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%863, %864) /* ty=Tensor[(8, 9, 16), int8] */
}

def @func_6360() -> (Tensor[(12, 16, 5), float32], Tensor[(5, 13, 1), float64]) {
  %865 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %866 = %865.0;
  %867 = cast(%866, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %868 = cast(meta[relay.Constant][67] /* ty=Tensor[(12, 16, 5), float64] */, dtype="float32") /* ty=Tensor[(12, 16, 5), float32] */;
  %869 = power(%867, %868) /* ty=Tensor[(12, 16, 5), float32] */;
  %870 = @func_4699() /* ty=Tensor[(5, 13, 1), float64] */;
  (%869, %870)
}

def @func_8321() -> (Tensor[(12, 16, 5), float32],) {
  %873 = fn () -> (Tensor[(12, 16, 5), float32],) {
    %871 = @func_6360() /* ty=(Tensor[(12, 16, 5), float32], Tensor[(5, 13, 1), float64]) */;
    %872 = %871.0;
    (%872,)
  };
  %873() /* ty=(Tensor[(12, 16, 5), float32],) */
}

def @func_7552() -> (Tensor[(12, 16, 512), float32],) {
  %874 = @func_6898() /* ty=(Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32]) */;
  %875 = %874.0;
  (%875,)
}

def @func_4191(%var_4189: Tensor[(512), float64]) -> (Tensor[(512), float64], Tensor[(12, 16, ?), uint16], Tensor[(12, 16, 1), float64]) {
  @func_4188(%var_4189) /* ty=(Tensor[(512), float64], Tensor[(12, 16, ?), uint16], Tensor[(12, 16, 1), float64]) */
}

def @func_6142() -> (Tensor[(12, 16, 512), float32],) {
  %880 = fn () -> (Tensor[(12, 16, 512), float32],) {
    %876 = @func_5126() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) */;
    %877 = %876.1;
    %878 = cast(%877, dtype="float32") /* ty=Tensor[(12, 16, 512), float32] */;
    %879 = log(%878) /* ty=Tensor[(12, 16, 512), float32] */;
    (%879,)
  };
  %880() /* ty=(Tensor[(12, 16, 512), float32],) */
}

def @func_6899() -> (Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32]) {
  %885 = fn () -> (Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32]) {
    %881 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
    %882 = @func_3986() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(11, 6, 8), float32], Tensor[(528), float32]) */;
    %883 = %881.1;
    %884 = %882.1;
    (%883, %884)
  };
  %885() /* ty=(Tensor[(12, 16, 512), float32], Tensor[(11, 6, 8), float32]) */
}

def @func_4188(%var_4171: Tensor[(512), float64]) -> (Tensor[(512), float64], Tensor[(12, 16, ?), uint16], Tensor[(12, 16, 1), float64]) {
  %886 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %887 = %886.0;
  %888 = cast(%var_4171, dtype="float64") /* ty=Tensor[(512), float64] */;
  %889 = reshape(%888, newshape=[1, 512]) /* ty=Tensor[(1, 512), float64] */;
  %890 = @func_3427(%889) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(16, 2, 16), float64], Tensor[(1, 512), float64]) */;
  %891 = %890.0;
  %892 = cast(%891, dtype="uint16") /* ty=Tensor[(12, 16, 1), uint16] */;
  %893 = shape_of(%887, dtype="int32") /* ty=Tensor[(3), int32] */;
  %894 = cast(%887, dtype="uint16") /* ty=Tensor[(12, 16, 1), uint16] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %896 = cast(%891, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %897 = subtract(%894, %895) /* ty=Tensor[(12, 16, ?), uint16] */;
  %898 = asin(%896) /* ty=Tensor[(12, 16, 1), float64] */;
  (%var_4171, %897, %898)
}

def @func_6592(%var_6571: Tensor[(11, 8, 7), float64]) -> (Tensor[(11, 8, 7), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 13, 3), uint32], Tensor[(3072), float64]) {
  %899 = cast(meta[relay.Constant][68] /* ty=Tensor[(11, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(11, 8, 7), bool] */;
  %900 = shape_of(%var_6571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%var_6571, dtype="bool") /* ty=Tensor[(11, 8, 7), bool] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %903 = cast(meta[relay.Constant][69] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %904 = reshape(%903, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %905 = @func_1143(%904) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %906 = cast(meta[relay.Constant][70] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %907 = reshape(%906, newshape=[12, 16, 16]) /* ty=Tensor[(12, 16, 16), float64] */;
  %908 = @func_4623(%907) /* ty=(Tensor[(13, 13, 3), uint32], Tensor[(12, 16, 507), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(12, 16, 16), uint8]) */;
  %909 = greater(%901, %902) /* ty=Tensor[(11, 8, 7), bool] */;
  %910 = %905.0;
  %911 = %908.0;
  (%909, %910, meta[relay.Constant][69] /* ty=Tensor[(1638), float64] */, %911, meta[relay.Constant][70] /* ty=Tensor[(3072), float64] */)
}

def @func_5862() -> Tensor[(512), uint32] {
  @func_5860() /* ty=Tensor[(512), uint32] */
}

def @func_6648(%var_6630: Tensor[(12, 16, 11), float64], %var_6646: Tensor[(154, 4), float64]) -> (Tensor[(12, 16, 11), uint64], Tensor[(11, 8, 7), bool], Tensor[(154, 4), float64]) {
  %912 = @func_5230() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64]) */;
  %913 = %912.1;
  %914 = cast(%913, dtype="uint64") /* ty=Tensor[(12, 16, 1), uint64] */;
  %915 = cast(%var_6630, dtype="uint64") /* ty=Tensor[(12, 16, 11), uint64] */;
  %916 = bitwise_or(%914, %915) /* ty=Tensor[(12, 16, 11), uint64] */;
  %917 = cast(%916, dtype="uint64") /* ty=Tensor[(12, 16, 11), uint64] */;
  %918 = shape_of(%var_6630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_6630, dtype="uint64") /* ty=Tensor[(12, 16, 11), uint64] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %921 = cast(%var_6646, dtype="float64") /* ty=Tensor[(154, 4), float64] */;
  %922 = reshape(%921, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float64] */;
  %923 = @func_6592(%922) /* ty=(Tensor[(11, 8, 7), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 13, 3), uint32], Tensor[(3072), float64]) */;
  %924 = bitwise_xor(%919, %920) /* ty=Tensor[(12, 16, 11), uint64] */;
  %925 = %923.0;
  (%924, %925, %var_6646)
}

def @func_6695(%var_6694: Tensor[(1638), bool]) -> (Tensor[(512), float64], Tensor[(15, 13, 1638), int8], Tensor[(156, 1), float64], Tensor[(1638), bool]) {
  %935 = fn (%var_6687: Tensor[(1638), bool]) -> (Tensor[(512), float64], Tensor[(15, 13, 1638), int8], Tensor[(156, 1), float64], Tensor[(1638), bool]) {
    %926 = cast(meta[relay.Constant][71] /* ty=Tensor[(156, 1), float64] */, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %927 = cast(%var_6687, dtype="bool") /* ty=Tensor[(1638), bool] */;
    %928 = cast(%var_6687, dtype="bool") /* ty=Tensor[(1638), bool] */;
    %929 = reshape(%926, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %930 = reshape(%927, newshape=[14, 117]) /* ty=Tensor[(14, 117), bool] */;
    %931 = reshape(%928, newshape=[14, 117]) /* ty=Tensor[(14, 117), bool] */;
    %932 = @func_4149(%929, %930, %931) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(14, 13, 9), float64], Tensor[(15, 13, 1638), int8], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(156), float64], Tensor[(12, 16, 1), float64], Tensor[(14, 117), uint32], Tensor[(12, 16, 32), uint8], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float32]) */;
    %933 = @func_4645() /* ty=Tensor[(512), float64] */;
    %934 = %932.2;
    (%933, %934, meta[relay.Constant][71] /* ty=Tensor[(156, 1), float64] */, %var_6687)
  };
  %935(%var_6694) /* ty=(Tensor[(512), float64], Tensor[(15, 13, 1638), int8], Tensor[(156, 1), float64], Tensor[(1638), bool]) */
}

def @func_1792(%var_1790: Tensor[(10, 11, 14), float32], %var_1791: Tensor[(132), float32]) -> (Tensor[(10, 11, 14), bool], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) {
  %947 = fn (%var_1766: Tensor[(10, 11, 14), float32], %var_1782: Tensor[(132), float32]) -> (Tensor[(10, 11, 14), bool], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) {
    %936 = cast(%var_1766, dtype="float32") /* ty=Tensor[(10, 11, 14), float32] */;
    %937 = rsqrt(%936) /* ty=Tensor[(10, 11, 14), float32] */;
    %938 = cast(%var_1766, dtype="bool") /* ty=Tensor[(10, 11, 14), bool] */;
    %939 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
    %940 = cast(%937, dtype="bool") /* ty=Tensor[(10, 11, 14), bool] */;
    %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %942 = cast(%var_1782, dtype="float32") /* ty=Tensor[(132), float32] */;
    %943 = reshape(%942, newshape=[1, 11, 12]) /* ty=Tensor[(1, 11, 12), float32] */;
    %944 = @func_370(%943) /* ty=(Tensor[(1, 11, 12), float64],) */;
    %945 = not_equal(%940, %941) /* ty=Tensor[(10, 11, 14), bool] */;
    %946 = %944.0;
    (%945, %946, %var_1782)
  };
  %947(%var_1790, %var_1791) /* ty=(Tensor[(10, 11, 14), bool], Tensor[(1, 11, 12), float64], Tensor[(132), float32]) */
}

def @func_5675(%var_5673: Tensor[(64, 8), float64]) -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64], Tensor[(1, 512), float64], Tensor[(512), float64], Tensor[(64, 8), float32]) {
  @func_5672(%var_5673) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 1), float64], Tensor[(1, 512), float64], Tensor[(512), float64], Tensor[(64, 8), float32]) */
}

def @func_8058(%var_8042: Tensor[(12, 16, 14), float64], %var_8050: Tensor[(512), float64], %var_8051: Tensor[(1638), float64]) -> (Tensor[(12, 16, 14), bool], Tensor[(156), float64], Tensor[(39, 5), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1638), float64], Tensor[(12, 16, 1), float64]) {
  %948 = @func_4680() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %949 = %948.0;
  %950 = cast(%949, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
  %951 = cast(%var_8042, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %952 = cast(meta[relay.Constant][72] /* ty=Tensor[(39, 5), float32] */, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %953 = cast(meta[relay.Constant][73] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %954 = cast(%var_8050, dtype="float64") /* ty=Tensor[(512), float64] */;
  %955 = cast(%var_8051, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %956 = reshape(%952, newshape=[195]) /* ty=Tensor[(195), float32] */;
  %957 = reshape(%953, newshape=[1540]) /* ty=Tensor[(1540), float32] */;
  %958 = reshape(%954, newshape=[512]) /* ty=Tensor[(512), float64] */;
  %959 = reshape(%955, newshape=[1, 1638]) /* ty=Tensor[(1, 1638), float64] */;
  %960 = @func_3368(%956, %957, %958, %959) /* ty=(Tensor[(12, 16, 1), float64], Tensor[(156), float64], Tensor[(195), float32], Tensor[(1540), float32], Tensor[(512), float64], Tensor[(1, 1638), float64], Tensor[(156), float64]) */;
  %961 = @func_4439() /* ty=(Tensor[(12, 16, 1), float64],) */;
  %962 = logical_or(%950, %951) /* ty=Tensor[(12, 16, 14), bool] */;
  %963 = %960.1;
  %964 = %961.0;
  (%962, %963, meta[relay.Constant][72] /* ty=Tensor[(39, 5), float32] */, meta[relay.Constant][73] /* ty=Tensor[(1540), float32] */, %var_8050, %var_8051, %964)
}

def @func_1471(%var_1450: Tensor[(1, 12, 13), float64], %var_1454: Tensor[(14, 117), float64]) -> (Tensor[(1, 12, 13), float64], Tensor[(14, 13, 9), float64], Tensor[(14, 117), float64], Tensor[(14, 13, 9), float64]) {
  %965 = cast(%var_1450, dtype="float64") /* ty=Tensor[(1, 12, 13), float64] */;
  %966 = cast(%var_1454, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %967 = reshape(%966, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %968 = @func_1143(%967) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %969 = cast(%var_1454, dtype="float64") /* ty=Tensor[(14, 117), float64] */;
  %970 = reshape(%969, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %971 = @func_1143(%970) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %972 = erf(%965) /* ty=Tensor[(1, 12, 13), float64] */;
  %973 = %968.0;
  %974 = %971.0;
  (%972, %973, %var_1454, %974)
}

def @func_7189(%var_7187: Tensor[(9, 6, 16), uint64], %var_7188: Tensor[(9, 6, 16), uint64]) -> Tensor[(9, 6, 16), uint64] {
  %979 = fn (%var_7181: Tensor[(9, 6, 16), uint64], %var_7182: Tensor[(9, 6, 16), uint64]) -> Tensor[(9, 6, 16), uint64] {
    %975 = cast(%var_7182, dtype="uint64") /* ty=Tensor[(9, 6, 16), uint64] */;
    %976 = shape_of(%var_7181, dtype="int32") /* ty=Tensor[(3), int32] */;
    %977 = cast(%var_7181, dtype="uint64") /* ty=Tensor[(9, 6, 16), uint64] */;
    %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%977, %978) /* ty=Tensor[(9, 6, 16), uint64] */
  };
  %979(%var_7187, %var_7188) /* ty=Tensor[(9, 6, 16), uint64] */
}

def @func_7284(%var_7282: Tensor[(2112), float64], %var_7283: Tensor[(11, 15, 9), float32]) -> (Tensor[(12, 16, 512), float32], Tensor[(12, 16, 11), bool], Tensor[(2112), float64], Tensor[(12, 16, 1), float64], Tensor[(11, 15, 9), bool]) {
  %997 = fn (%var_7239: Tensor[(2112), float64], %var_7272: Tensor[(11, 15, 9), float32]) -> (Tensor[(12, 16, 512), float32], Tensor[(12, 16, 11), bool], Tensor[(2112), float64], Tensor[(12, 16, 1), float64], Tensor[(11, 15, 9), bool]) {
    %980 = @func_5727() /* ty=(Tensor[(12, 16, 512), float64], Tensor[(12, 16, 512), float32]) */;
    %981 = cast(%var_7239, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %982 = reshape(%981, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %983 = cast(meta[relay.Constant][74] /* ty=Tensor[(11, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
    %984 = rsqrt(%983) /* ty=Tensor[(11, 15, 9), float32] */;
    %985 = cast(%984, dtype="float64") /* ty=Tensor[(11, 15, 9), float64] */;
    %986 = acosh(%985) /* ty=Tensor[(11, 15, 9), float64] */;
    %987 = cast(%986, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
    %988 = log10(%987) /* ty=Tensor[(11, 15, 9), float32] */;
    %989 = cast(%var_7272, dtype="bool") /* ty=Tensor[(11, 15, 9), bool] */;
    %990 = shape_of(%988, dtype="int32") /* ty=Tensor[(3), int32] */;
    %991 = cast(%988, dtype="bool") /* ty=Tensor[(11, 15, 9), bool] */;
    %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %993 = %980.1;
    %994 = @func_4736(%982) /* ty=Tensor[(12, 16, 11), bool] */;
    %995 = @func_4814() /* ty=Tensor[(12, 16, 1), float64] */;
    %996 = not_equal(%991, %992) /* ty=Tensor[(11, 15, 9), bool] */;
    (%993, %994, %var_7239, %995, %996)
  };
  %997(%var_7282, %var_7283) /* ty=(Tensor[(12, 16, 512), float32], Tensor[(12, 16, 11), bool], Tensor[(2112), float64], Tensor[(12, 16, 1), float64], Tensor[(11, 15, 9), bool]) */
}

def @func_6888() -> (Tensor[(12, 16, 512), float32],) {
  %999 = fn () -> (Tensor[(12, 16, 512), float32],) {
    %998 = @func_6803() /* ty=Tensor[(12, 16, 512), float32] */;
    (%998,)
  };
  %999() /* ty=(Tensor[(12, 16, 512), float32],) */
}

def @func_5127() -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) {
  %1010 = fn () -> (Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) {
    %1000 = @func_3629() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %1001 = %1000.0;
    %1002 = @func_4780() /* ty=(Tensor[(512), float64],) */;
    %1003 = %1002.0;
    %1004 = cast(%1001, dtype="uint16") /* ty=Tensor[(12, 16, 1), uint16] */;
    %1005 = cast(%1003, dtype="uint16") /* ty=Tensor[(512), uint16] */;
    %1006 = @func_4414() /* ty=(Tensor[(12, 16, 1), float64],) */;
    %1007 = @func_3339() /* ty=Tensor[(12, 16, 1), float64] */;
    %1008 = bitwise_xor(%1004, %1005) /* ty=Tensor[(12, 16, 512), uint16] */;
    %1009 = %1006.0;
    (%1007, %1008, %1009)
  };
  %1010() /* ty=(Tensor[(12, 16, 1), float64], Tensor[(12, 16, 512), uint16], Tensor[(12, 16, 1), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

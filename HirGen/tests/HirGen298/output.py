import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_26 = relay.var("var_26", dtype = "float32", shape = (11, 7, 11))#candidate|26|(11, 7, 11)|var|float32
uop_27 = relay.asin(var_26.astype('float32')) # shape=(11, 7, 11)
var_29 = relay.var("var_29", dtype = "float32", shape = (11, 7, 11))#candidate|29|(11, 7, 11)|var|float32
bop_30 = relay.divide(var_26.astype('float32'), relay.reshape(var_29.astype('float32'), relay.shape_of(var_26))) # shape=(11, 7, 11)
output = relay.Tuple([uop_27,bop_30,])
output2 = relay.Tuple([uop_27,bop_30,])
func_37 = relay.Function([var_26,var_29,], output)
mod['func_37'] = func_37
mod = relay.transform.InferType()(mod)
mutated_mod['func_37'] = func_37
mutated_mod = relay.transform.InferType()(mutated_mod)
func_37_call = mutated_mod.get_global_var('func_37')
var_39 = relay.var("var_39", dtype = "float32", shape = (11, 7, 11))#candidate|39|(11, 7, 11)|var|float32
var_40 = relay.var("var_40", dtype = "float32", shape = (11, 7, 11))#candidate|40|(11, 7, 11)|var|float32
call_38 = func_37_call(var_39,var_40,)
output = call_38
func_41 = relay.Function([var_39,var_40,], output)
mutated_mod['func_41'] = func_41
mutated_mod = relay.transform.InferType()(mutated_mod)
var_49 = relay.var("var_49", dtype = "float32", shape = (14, 7, 15))#candidate|49|(14, 7, 15)|var|float32
uop_50 = relay.erf(var_49.astype('float32')) # shape=(14, 7, 15)
output = uop_50
output2 = uop_50
func_78 = relay.Function([var_49,], output)
mod['func_78'] = func_78
mod = relay.transform.InferType()(mod)
mutated_mod['func_78'] = func_78
mutated_mod = relay.transform.InferType()(mutated_mod)
var_79 = relay.var("var_79", dtype = "float32", shape = (14, 7, 15))#candidate|79|(14, 7, 15)|var|float32
func_78_call = mutated_mod.get_global_var('func_78')
call_80 = func_78_call(var_79)
output = call_80
func_81 = relay.Function([var_79], output)
mutated_mod['func_81'] = func_81
mutated_mod = relay.transform.InferType()(mutated_mod)
var_183 = relay.var("var_183", dtype = "float64", shape = (10, 6, 5))#candidate|183|(10, 6, 5)|var|float64
var_184 = relay.var("var_184", dtype = "float64", shape = (10, 6, 5))#candidate|184|(10, 6, 5)|var|float64
bop_185 = relay.mod(var_183.astype('float64'), relay.reshape(var_184.astype('float64'), relay.shape_of(var_183))) # shape=(10, 6, 5)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
var_200 = relay.var("var_200", dtype = "float32", shape = (1470,))#candidate|200|(1470,)|var|float32
call_199 = func_78_call(relay.reshape(var_200.astype('float32'), [14, 7, 15]))
call_201 = func_78_call(relay.reshape(var_200.astype('float32'), [14, 7, 15]))
const_207 = relay.const([[[-0.738661,5.099752,-2.620805,-2.534238,9.969487],[-1.039237,2.626260,8.078556,-3.474341,2.506456],[-8.640218,1.866384,-9.684998,-5.857122,-5.300633],[-6.361814,-1.954127,-1.044530,-6.025694,-0.234979],[-2.791387,9.070248,6.769548,-8.363772,5.821697],[-4.336164,7.074334,-0.003142,2.303206,-2.766406]],[[-1.038605,9.721197,1.038367,-1.667715,-8.945121],[3.009312,2.682811,3.670703,3.713213,-3.758506],[6.532082,-1.705327,2.776681,-0.934644,9.226342],[-0.801211,5.304972,-7.455487,-9.243740,2.693488],[7.756459,5.313883,8.462063,-5.655697,-2.356579],[1.362953,2.252913,5.208589,-3.921810,-9.045819]],[[-0.776210,-6.201680,-9.246926,-5.346944,1.133881],[0.882241,-5.926946,0.018105,7.645877,6.580733],[4.108680,2.562598,-6.632897,2.830240,-9.326979],[6.410791,-3.269731,7.502026,-2.714219,6.662726],[4.079891,0.384528,-2.381468,0.960545,-0.657978],[3.449214,-5.582073,-5.506442,7.927737,9.172704]],[[7.050832,6.865238,-8.617473,-0.734511,-9.124525],[-0.529258,5.351652,-5.882395,5.541565,8.429307],[-1.679748,8.890410,-1.191481,6.819909,8.569612],[2.100127,7.971501,-7.806492,7.990148,2.557353],[6.162791,4.246942,8.278312,-9.700540,-6.895715],[-3.545533,-3.488943,7.597880,4.028346,6.282739]],[[7.281248,-4.268860,9.060350,3.418511,7.037698],[-7.544613,-5.055339,5.690495,3.269876,-4.476799],[-1.061148,-6.589761,-0.723530,2.513820,2.135597],[-8.708756,3.403028,7.944414,-7.214625,-6.600998],[6.587716,-9.683670,-2.861326,4.310364,2.206930],[4.567748,-4.179706,-5.938577,9.721175,4.307300]],[[-3.999820,-9.768689,-5.162811,-4.108289,-9.718354],[-4.348368,-4.662782,8.578628,4.511839,-2.190437],[3.051914,-6.760194,-0.339558,-5.814481,-4.613892],[-7.652916,-2.991261,-3.190704,-8.185023,9.196460],[5.259655,3.732325,-9.633799,2.474963,8.297650],[-1.060732,9.890978,1.783673,5.063427,-8.097149]],[[5.936645,8.999145,3.108293,-1.568526,-1.668590],[-7.854297,5.374007,2.963964,-7.308354,1.395099],[9.333887,-9.991730,-2.490547,-6.664083,-4.360112],[8.095850,3.933352,6.468002,8.801506,-4.309735],[8.130259,4.261031,-8.349007,-4.139383,8.406265],[1.684273,8.642399,-1.090200,6.497817,0.348014]],[[3.503055,7.266239,4.123087,5.420697,-7.736484],[0.299430,-4.737942,-1.940981,4.743286,6.021019],[4.153505,3.038253,2.914863,-0.004334,-3.754813],[-0.903421,8.142030,-0.753408,-0.547804,3.731675],[-3.247849,-5.872094,0.840355,5.168830,4.370760],[-9.268316,0.147495,7.757556,6.770860,9.367101]],[[3.330330,5.914788,7.761521,-5.879961,4.301686],[-2.951957,-7.525495,-7.273615,-7.321333,-9.882365],[-4.192197,-3.342100,2.050767,-2.765865,9.227079],[-5.256633,0.580380,6.166878,-0.350553,-8.961139],[3.482479,1.309253,4.954316,-0.751987,9.083461],[2.054658,7.343969,-9.737392,8.094133,4.651724]],[[-3.864456,-0.581781,3.333377,6.688040,6.651958],[4.153533,-8.390153,-1.510015,-7.737032,1.047119],[3.260135,8.236758,-6.316399,6.506312,6.203686],[3.207493,5.996960,9.168775,9.705784,-5.140232],[1.191058,-5.281254,-0.895281,2.034788,9.270789],[-2.412150,-8.250699,4.433651,9.469679,-2.327701]]], dtype = "float64")#candidate|207|(10, 6, 5)|const|float64
bop_208 = relay.divide(var_183.astype('float32'), relay.reshape(const_207.astype('float32'), relay.shape_of(var_183))) # shape=(10, 6, 5)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
call_224 = func_78_call(relay.reshape(call_199.astype('float32'), [14, 7, 15]))
call_225 = func_78_call(relay.reshape(call_199.astype('float32'), [14, 7, 15]))
const_226 = relay.const([[[-1.447478,1.113891,-2.886399,2.265835,-6.789322],[4.582358,-1.537344,-5.939293,-5.986100,-9.190827],[-6.727937,-5.373501,6.347625,5.745299,5.551285],[3.016245,-8.309730,0.579152,-6.262688,6.528991],[-2.442231,-3.486481,4.421585,-9.558654,1.313186],[5.056806,8.117298,-8.247608,5.900033,8.624205]],[[2.206774,4.493643,-8.559610,-4.856848,3.034887],[8.836019,2.593577,7.609359,-7.942391,-5.157777],[-9.124443,7.857540,5.196994,7.242175,6.047039],[1.753113,7.068968,-9.700525,2.498590,7.847195],[4.797683,1.072660,-4.259411,1.141866,-2.353416],[7.919486,-5.539410,-4.177710,-8.575856,-9.240768]],[[-3.494275,-0.501172,-8.380294,9.390749,-6.164132],[4.448332,9.907961,-4.067381,1.708790,-5.729487],[1.335112,-6.177311,8.833477,-5.374585,-7.429482],[0.319809,-2.677527,2.204505,6.189028,6.473652],[0.164250,4.362258,9.957134,-5.964037,4.539859],[-8.104080,-9.350751,-5.651824,4.802854,-1.974815]],[[-8.683437,-4.609176,6.893679,1.370442,1.534939],[-0.927317,2.307675,9.333002,5.337673,2.776446],[1.476252,-6.253187,7.317797,1.948502,3.194997],[-6.808148,3.360460,-7.223000,-8.150994,1.464359],[-1.596498,-5.686203,2.549540,-1.283333,-5.903029],[-9.109895,8.942070,1.916242,8.822682,1.619813]],[[-8.073927,-1.817180,0.306452,1.904968,5.796774],[9.211816,-2.162957,0.496767,3.267231,4.598943],[-6.657381,2.131311,-7.243262,-9.528687,2.836683],[-4.309607,3.983721,-2.653837,2.934514,2.851537],[-3.590380,7.295878,-0.585215,5.531040,-5.118188],[0.886051,-4.864478,3.838306,-8.421101,-0.365112]],[[9.906188,7.299368,-8.751113,6.177422,4.915499],[-5.930172,0.352652,1.794860,-8.315020,-5.071129],[3.083010,3.309642,-8.304631,-5.874045,-3.364170],[5.720265,4.089840,7.972487,-5.705708,8.544876],[5.239593,8.653000,3.459280,-8.968879,1.536329],[6.336762,3.841475,-7.172960,3.737342,-8.218468]],[[-8.780875,9.226656,-7.323372,3.275969,-8.289987],[0.424014,-7.583939,-6.257262,1.357602,9.340933],[0.698834,3.720517,-9.334890,3.832917,-6.378963],[3.080891,9.183377,-0.739287,3.449433,-4.952979],[-4.754975,2.633267,-2.454107,0.744527,8.900464],[4.197355,1.833938,1.246771,-5.292769,4.282867]],[[-9.111923,0.467078,9.923970,9.931673,4.896637],[-4.782825,6.713800,-0.481999,-2.441235,5.515023],[9.892721,-4.675355,5.533646,-2.552149,-8.362228],[-7.599912,-2.456625,-7.086592,7.266901,5.432346],[1.535998,8.873829,3.961212,8.357782,8.489388],[7.774164,5.004349,8.829131,1.376104,-8.873227]],[[8.021139,-1.540563,7.258144,6.329588,3.905273],[8.797975,5.053297,7.879798,5.378537,-8.191406],[-2.070742,0.466879,9.602614,-8.642761,-3.120601],[5.634537,-6.850099,7.582115,-5.998013,-5.337483],[7.857986,4.326054,-0.565572,-5.755687,7.778835],[-8.238146,-6.866135,4.233835,-5.670144,9.742610]],[[-8.866720,-4.500608,-1.601892,-5.194298,0.366348],[-2.169759,8.529306,9.687811,1.664587,7.069610],[-7.543659,-0.068797,8.003704,-3.425428,6.260680],[-9.867953,-7.724177,-8.965086,-9.992903,-2.029538],[-0.650638,4.280448,-9.241891,7.107086,-4.470057],[-9.863682,1.989537,2.617694,-0.437876,-2.445853]]], dtype = "float32")#candidate|226|(10, 6, 5)|const|float32
bop_227 = relay.bitwise_xor(bop_208.astype('uint8'), relay.reshape(const_226.astype('uint8'), relay.shape_of(bop_208))) # shape=(10, 6, 5)
output = relay.Tuple([bop_185,call_199,var_200,call_224,bop_227,])
output2 = relay.Tuple([bop_185,call_201,var_200,call_225,bop_227,])
func_231 = relay.Function([var_183,var_184,var_200,], output)
mod['func_231'] = func_231
mod = relay.transform.InferType()(mod)
var_232 = relay.var("var_232", dtype = "float64", shape = (10, 6, 5))#candidate|232|(10, 6, 5)|var|float64
var_233 = relay.var("var_233", dtype = "float64", shape = (10, 6, 5))#candidate|233|(10, 6, 5)|var|float64
var_234 = relay.var("var_234", dtype = "float32", shape = (1470,))#candidate|234|(1470,)|var|float32
output = func_231(var_232,var_233,var_234,)
func_235 = relay.Function([var_232,var_233,var_234,], output)
mutated_mod['func_235'] = func_235
mutated_mod = relay.transform.InferType()(mutated_mod)
const_352 = relay.const([[[-1.503080],[4.520226]],[[7.047509],[6.052124]],[[7.070829],[5.917169]],[[9.371342],[5.988734]],[[-1.647873],[6.972053]],[[-1.909791],[-3.107653]]], dtype = "float32")#candidate|352|(6, 2, 1)|const|float32
var_353 = relay.var("var_353", dtype = "float32", shape = (6, 2, 6))#candidate|353|(6, 2, 6)|var|float32
bop_354 = relay.power(const_352.astype('float32'), var_353.astype('float32')) # shape=(6, 2, 6)
output = relay.Tuple([bop_354,])
output2 = relay.Tuple([bop_354,])
func_360 = relay.Function([var_353,], output)
mod['func_360'] = func_360
mod = relay.transform.InferType()(mod)
mutated_mod['func_360'] = func_360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_361 = relay.var("var_361", dtype = "float32", shape = (6, 2, 6))#candidate|361|(6, 2, 6)|var|float32
func_360_call = mutated_mod.get_global_var('func_360')
call_362 = func_360_call(var_361)
output = call_362
func_363 = relay.Function([var_361], output)
mutated_mod['func_363'] = func_363
mutated_mod = relay.transform.InferType()(mutated_mod)
const_396 = relay.const([[[-4.756754,6.481155,0.323928,5.418718,-3.475907,-0.277655,-0.328406,-1.490145,-6.137462,-5.334366,9.091136,3.430713,-2.612739],[0.611442,-9.449402,5.076438,-1.831641,6.687464,7.509112,-8.040887,-9.929640,-2.813489,-9.071871,4.576967,1.580240,-1.873832],[8.582839,-6.402051,-1.862030,7.167940,0.538527,8.201612,-1.795307,4.696425,4.644626,2.132221,-9.785674,-8.171863,-6.757489]],[[7.369382,5.482013,8.073406,8.019834,-2.533092,5.486012,-4.949808,6.263580,-3.695857,5.326381,2.836464,1.981820,-3.685558],[-6.446897,-7.754461,9.258287,-9.716466,0.134986,3.496668,-5.704925,-9.408836,1.117102,-5.457486,-1.696135,-7.455845,-8.098020],[6.323228,-7.933219,6.397023,-8.732242,-4.684473,8.665683,2.397199,-4.023284,4.737704,-6.755897,-9.215647,3.863206,-2.959508]],[[5.118711,5.520838,3.891247,8.537444,-0.098864,-5.581446,-1.527340,-4.640606,-4.708816,8.657947,-7.418929,6.300539,-0.892719],[7.431401,-1.353876,-2.301949,-3.377358,7.547835,-5.068470,-3.940734,5.747344,3.149185,8.415628,4.358510,7.660944,-6.289997],[4.060598,0.904895,3.315179,3.462338,-3.516215,2.695852,0.747268,-4.733309,0.999117,1.388388,-8.663701,-4.470532,-5.937644]],[[4.656330,-1.118093,-5.841087,3.042020,-8.312392,-9.303903,-6.163800,5.626104,2.733783,-0.948716,-0.032573,-8.996759,-6.001745],[-4.947034,-7.059196,-9.961043,9.245691,2.894359,-4.058091,5.369569,5.434494,7.484278,-0.927724,8.383371,4.509439,-2.483070],[0.510177,1.696430,6.739484,8.780229,2.502537,3.942195,-3.901186,-4.957429,8.334937,6.463333,6.058145,-0.557421,1.328248]],[[8.530242,3.779255,-5.842997,1.233102,-3.734044,-6.847558,-4.918100,4.861878,-3.998730,8.075398,-9.368127,-8.849414,7.005924],[-2.825860,7.448634,-3.947035,6.776739,-0.337588,-9.883456,2.465378,-3.161534,-7.214212,6.668371,-0.172739,-8.094932,-6.636713],[-7.444497,-7.016257,-5.135338,5.814187,5.556366,3.500942,2.349433,-4.079133,6.919939,-2.317168,5.996819,-3.196211,-8.010552]],[[-8.669951,-2.097327,-4.797964,4.170015,6.023832,3.706929,-3.320425,-3.041933,9.950678,7.354236,2.388252,-0.358119,3.538732],[6.243919,-3.404961,-7.836514,-8.004614,-4.790543,-1.443310,4.433610,3.931717,-7.323608,8.994563,1.917056,7.393073,8.404562],[4.615182,-1.395387,4.410945,1.167072,-6.754489,2.087689,-8.633160,5.947873,3.066277,-3.983699,2.949409,-4.596159,9.964701]]], dtype = "float32")#candidate|396|(6, 3, 13)|const|float32
uop_397 = relay.atan(const_396.astype('float32')) # shape=(6, 3, 13)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
const_403 = relay.const([7.662039,-3.446350,-9.836059,9.356437,7.844884,-1.385646,-6.189051,7.036995,2.073950,-1.249070,-2.021181,-7.385819,-7.731287,8.288578,-9.803799,0.528238,2.084130,-2.594649,-3.442858,-0.910054,-2.628357,-8.201806,8.924671,-8.488619,3.285911,-6.984292,-0.006385,-9.341653,8.916452,-1.512539,1.779313,2.178354,-1.838237,-4.302434,0.386149,-3.749074,-4.880265,2.654369,0.520508,-9.000481,-2.026158,-1.938734,0.304217,2.051879,-9.661688,1.436301,-5.335414,-8.755400,-5.416907,9.621523,2.731594,4.670078,0.090818,7.820532,4.528566,6.213565,-5.936444,-6.961477,-3.655383,0.099028,-5.025314,-6.160653,3.606365,8.383190,1.907489,-0.520844,-5.165114,-5.489427,-6.855538,-9.235593,9.486688,1.167129,0.671899,-1.558777,7.979629,-6.066375,-0.198943,-7.310011,6.676086,0.797157,6.280460,-0.526095,-5.318665,0.139859,-1.132434,-6.219116,2.915093,-8.331103,0.821902,-3.223784,-4.313508,-6.874049,3.022393,-7.046525,-9.096347,1.532657,3.073786,-3.528025,3.235432,-6.504534,2.472749,3.640142,-2.387006,-7.727561,-4.672886,9.282489,4.469145,5.832404,-4.233740,-6.960200,-9.188107,-2.077165,9.014961,0.040034,-4.585045,-2.676631,-2.194604,-3.841877,1.270595,-5.385697,7.771459,-9.678485,-2.838108,8.467709,-4.713874,8.210246,-8.508054,-1.644724,-7.687532,-6.832898,-9.119373,0.609025,-1.566400,4.246145,-9.481479,-0.400741,4.247970,-5.056755,-2.319133,7.333677,6.261898,2.630234,-9.155673,2.586500,6.734302,-4.847172,5.124443,-9.709334,0.278904,0.243829,-6.375159,-4.180309,0.257213,5.730559,-4.886743,-6.746071,7.490340,8.648463,5.877133,3.758920,-8.838784,-3.173803,3.417473,-4.024880,9.537250,-0.695830,3.245572,6.750571,2.465284,-2.093349,4.751331,-0.324559,5.404643,6.610585,-7.883283,8.063338,-4.220616,-2.355035,7.893269,-2.159891,7.935416,-1.515100,1.882871,2.250501,-3.989233,5.132503,-2.799731,-6.512962,4.562240,-1.181964,-0.830739,9.481593,-6.616159,-4.046731,-4.843760,-0.145785,0.340042,-8.531740,-8.348967,-8.476482,5.511542,9.929996,3.290659,5.599022,9.698156,-1.796213,-0.746257,-9.059975,-4.688284,-2.685364,0.481978,-6.366313,4.361951,-6.584305,-7.718045,-9.151428,-3.218599,4.238381,7.450735,-8.738983,-4.785981,8.165233,-5.323291,6.022992,-8.169770,7.133888,-7.178994,1.024705,-4.896577,-2.706320,-6.914595,9.850708,-0.007212,-5.102072,0.068224,-2.922919,3.030424,-0.248793,8.201141,-9.335300,3.337157,7.457034,5.243895,2.274453,-0.787281,-3.144643,-8.683482,3.228544,-9.303048,4.889459,2.783637,-1.489499,7.263093,-5.804840,-7.101618,-1.856654,8.891812,-4.263141,-9.160188,-2.559753,6.132120,5.165491,-1.885859,-7.885610,-4.425413,1.350985,2.624462,6.595201,-3.629632,0.466585,-1.691486,2.756030,6.790946,0.750567,1.337903,4.016150,-2.497957,8.084255,4.873831,-9.978973,4.316962,9.067533,1.168251,5.722668,7.001786,-9.792719,-5.913465,3.905361,5.239596,-2.758478,-8.367559,0.434835,-3.475712,-5.674923,-1.505080,-5.022398,-0.277010,-0.583247,-4.581179,8.980613,-0.934915,7.532526,3.559455,6.815349,1.942011,-8.829240,0.813642,7.008290,-0.973125,5.668354,-6.198178,-9.808755,-2.633561,-8.016557,-2.041479,-4.764231,0.840410,3.092353,-9.329888,-4.466262,-8.810209,5.817356,-0.415375,-8.951870,-6.103749,-2.798471,7.484027,6.077507,2.643735,-6.218983,-8.533673,1.809423,-2.225064,-4.403360,8.695376,2.032052,0.034613,2.752088,6.136776,-5.776878,1.151325,-7.458728,4.028753,-6.441639,5.955395,-5.809153,7.939798,6.104131,3.145894,-5.238980,-4.611245,-0.029580,7.464831,-8.467230,0.892333,-0.045286,3.989636,2.679220,5.133897,1.363908,-8.483230,-9.544271,7.239133,-9.129392,3.717364,1.397275,-3.244490,-7.169297,1.510344,-5.937165,3.146596,-9.318935,6.530539,-4.336033,4.496812,6.616146,9.252115,-3.741336,9.225122,7.240947,5.856525,1.253708,0.758312,0.465240,-6.185026,5.515225,4.957340,-7.549778,-1.689261,6.553826,-7.834056,3.986934,-2.453990,6.632002,-3.498045,-1.054523,4.209422,5.455983,9.803722,-2.315744,-5.360866,-8.380125,8.226064,-8.198979,3.143232,6.468882,-9.082696,0.136029,-4.862334,2.802619,-3.869668,5.317080,5.111117,-3.524897,9.854172,-0.605085,-3.114572,1.389786,1.323202,4.896287,8.634961,-5.699587,-2.382161,-3.469762,-3.945558,1.349858,-5.011167,5.422037,-5.180923,-2.407017,-5.025215,2.332071,0.430526,-4.126934,1.367415,1.580275,-0.992598,-5.441119,-9.597778,-1.451059,-6.303407,7.532596,-6.761509,-0.612394,-4.733094,-5.347216,1.087431,9.426234,1.745481,1.466051,-6.361499,3.735183,4.206481,7.687948,1.492722,-8.024535,5.352196,-6.848871,-0.206682,-7.494020,8.610231,5.036220,9.736118,-0.295997,-3.524082,9.955664,-8.516399,-1.144900,-4.897437,5.924857,3.351634,-4.077753,8.803263,-8.520922,7.055385,-0.171961,7.150081,-8.968095,4.161249,9.619128,-6.799450,-7.833975,-5.071523,-3.759556,-6.100608,-4.920465,-6.918635,-4.714371,7.486617,5.829126,-9.726654,0.224825,-2.130634,-7.787087,-3.741971,2.034259,-5.849176,-7.643052,-5.686753,6.509042,-6.933515,-9.751768,-2.606108,0.473519,5.143217,0.301196,-2.332654,-1.132938,-8.196589,-8.123432,-5.520689,9.026051,3.299151,8.126307,4.592216,-5.546270,-9.154641,-0.947128,-8.890076,-9.335857,-9.671941,9.129273,9.390877,3.700026,-3.887969,-2.329555,-2.601464,3.936311,4.945940,1.176205,6.163697,2.579941,5.907127,6.564312,8.967971,9.858217,4.447315,-6.215850,-3.019609,-2.196048,-3.266753,-1.521629,-8.006965,-8.622643,-8.752183,-4.900198,-6.037040,-6.222865,1.204206,3.418703,8.503931,7.479889,4.204519,3.580577,3.659199,-0.889499,3.510752,-8.728915,-3.981233,6.166576,5.018724,-5.687048,2.360434,8.670991,-1.119385,2.178901,6.937303,-1.665972,2.538668,2.501290,1.295455,-5.424461,-7.193559,9.615091,9.166931,2.647173,-3.632913,-4.011848,-5.707339,5.951558,-6.658817,1.084625,7.548188,-7.112432,2.483179,1.665430,4.638371,6.964717,0.313835,-7.577881,-2.730727,8.917037,-7.698911,-6.650954,9.676751,9.889273,7.614469,9.568406,8.961167,1.057358,7.020660,6.555040,-6.206315,-3.935087,0.353113,-5.888843,0.608847,0.326106,-1.991144,-6.183521,3.708212,8.646226,-6.895261,3.014423,2.277059,1.479841,3.679170,9.259360,7.816366,0.630020,9.845708,-3.797849,6.673693,-2.329110,-9.829725,2.857876,-7.762648,-7.852888,-8.796917,-2.342499,-9.714054,-9.050150,3.912038,1.637252,-4.111475,9.731014,-6.110319,-6.518696,1.077961,0.543052,7.501441,2.542154,-0.098668,9.711242,4.012501,-3.242812,2.379946,-3.068695,-8.543877,5.104383,-0.456025,-0.675814,2.523502,4.994137,6.716046,-1.326610,5.566636,5.353677,1.147107,-0.317869,-6.884551,-8.819694,-6.317802,-5.612438,-7.337644,2.438883,0.864591,7.872759,-3.721020,3.779044,-3.470421,-2.355826,-4.086553,5.472039,-0.135667,-8.475418,-9.707477,-6.218066,2.813720,7.453641,0.721079,3.213341,3.635285,3.494488,1.372426,2.980393,-9.829716,3.514480,8.812828,-4.963822,6.672500,6.735812,4.139928,-7.830811,-8.644177,-8.134743,-8.915075,-0.595065,-2.484141,3.733632,8.285663,8.461718,-6.951069,-4.213760,3.120746,-8.724720,5.537632,-0.882471,8.175261,-9.234152,8.650292,6.771576,-3.094402,1.212928,0.483265,-7.092362,5.484022,-5.332628,-4.849094,-1.533429,5.944027,-8.632126,-5.819642,4.062640,9.292928,1.997764,-0.363651,-5.895449,0.842953,-6.699393,-4.346805,4.172963,-0.416435,-1.435921,-2.250396,2.363652,1.351895,-3.157429,-4.709952,3.796520,5.925815,-7.139272,-7.148428,-4.003135,-5.068853,-7.645751,4.160815,0.569645,-3.754336,6.360236,-6.810497,-3.110850,-2.102797,7.831389,7.623511,7.867651,9.896809,-7.344869,-3.104627,2.863323,3.989466,-4.907263,4.153642,0.527064,7.335043,-5.214935,1.730772,0.780487,-8.631454,-1.940256,1.657381,-7.524340,-9.097719,-6.144751,-6.989004,9.076326,-3.905040,-1.489590,9.773325,7.029218,-5.422370,-8.910651,-6.041659,-3.290257,-7.292126,-6.690249,-8.664516,3.142467,-2.983724,9.551369,4.291407,-2.223569,-1.012032,-9.345463,-1.980277,-8.319161,0.976409,-8.823629,-4.618129,-7.515701,-8.308624,3.519808,-7.906212,3.352867,-8.889526,4.439343,5.171902,1.374364,-8.100570,-2.024906,9.242798,-8.171719,9.214230,4.327606,1.860431,8.756734,-2.861045,-7.303880,0.619984,9.525095,-2.113889,6.963863,2.206987,-0.766553,-5.890572,-8.071423,8.951610,0.544775,-3.521086,2.526460,-2.798231,6.405962,8.778511,1.674821,2.283809,-3.527917,5.926754,4.364860,0.667153,2.793510,-9.378020,7.046813,-7.434217,4.522461,0.656676,-6.800426,3.070475,5.146847,7.276310,0.829337,1.385428,-8.805854,0.567447,5.633409,1.262772,2.131523,1.377645,-6.104932,4.631925,-1.955476,-5.596609,-5.603095,-1.495643,-9.319038,4.328797,-2.757296,1.627363,0.655170,-6.291499,1.694006,3.593553,-1.545214,-3.179993,-2.692007,-6.246724,-4.809745,5.823672,-0.838872,-4.646873,0.101098,-2.210377,5.857710,6.847104,-2.389921,5.307044,9.277560,-7.174740,7.518645,-9.219960,-1.918893,-3.601173,2.552074,-4.295896,8.306551,-0.353484,-6.429040,-5.429773,7.674489,-3.510981,-7.351671,5.364409,9.345502,6.716248,-1.130604,-1.002636,-6.728182,-5.770393,1.726277,9.518036,3.850865,7.023979,-6.986721,9.428289,5.354109,1.370149,-5.272177,-3.216743,0.749568,-0.657444,2.058544,-0.453913,-4.828820,-1.430772,0.436955,-5.647846,7.307339,-9.876158,-4.014049,1.190575,-0.899111,3.570734,-7.077190,-4.205540,1.912914,1.371009,9.506484,-7.548914,-7.586003,1.822719,-6.279602,6.619556,-5.148010,3.884887,0.542486,-7.381644,1.163134,-9.789720,1.902755,3.615517,-3.129530,-6.907548,1.647850,5.412170,8.138296,0.334304,-6.049666,2.625421,4.827490,2.101117,-8.964589,-7.451987,1.972455,5.068458,7.889057,2.507486,8.726845,4.600616,-3.435117,1.915582,-1.068895,1.119712,8.691096,1.761352,7.320065,4.811600,-7.874347,-7.167799,7.431493,8.753407,-3.452839,-9.235721,-8.060046,-7.285459,-9.599903,-9.727083,4.932207,2.371236,-3.763280,0.952984,-1.308933,9.550827,-6.161818,-7.002163,3.573015,-0.052211,4.048087,-7.472098,-1.514929,-5.813803,-5.270365,0.397791,4.865883,-2.344600,0.896975,1.707817,-1.644208,8.509622,-8.956784,-0.136825,3.238184,-4.490105,5.840172,-8.067018,4.004773,-4.693762,4.439793,6.258181,3.031112,-9.987260,1.207449,-8.428307,4.386323,-6.362697,3.861686,8.435512,7.208329,0.271615,-1.697469,1.917566,2.666268,6.784430,6.500681,0.638525,-2.090529,-9.821028,4.091084,-1.824875,-5.751659,0.127984,9.318513,-7.970334,-7.502822,-0.907201,2.121417,-0.990958,9.403655,3.107485,3.560874,6.932881,-8.224043,7.845913,-0.183090,-4.760103,7.792180,8.439574,1.023386,0.293004,4.436709,-9.743990,3.751382,2.253283,6.589710,-2.908121,6.356317,-6.430344,1.912263,-9.826939,7.292629,-8.759315,-3.297346,-9.057432,9.764618,7.575808,5.514408,4.303168,-7.681352,1.805826,9.152577,-3.644079,-4.751812,-2.601289,8.674889,9.418770,-4.078297,9.191687,1.641246,-0.147217,1.893073,-9.196199,8.690919,-4.846636,-7.216764,4.269888,4.751655,9.016482,9.907773,5.532171,-7.161170,2.924730,-5.487186,6.382673,-2.919826,-2.259742,9.966891,-2.505298,-6.154545,-3.514922,6.171835,-3.041700,-0.906840,-1.180436,5.175749,-0.173055,-4.443099,-7.662065,-4.625444,8.152857,6.711257,-1.729733,-3.318065,-2.514103,0.765401,3.981391,-7.994968,6.748798,0.377671,-3.945615,6.268456,-7.172787,1.763367,-1.744872,-8.573596,-3.042505,8.302247,-4.231596,-1.319504,-0.493103,-7.436781,-1.149676,3.577003,9.071184,5.023365,-4.780340,-0.275601,-5.400980,0.889669,7.756797,-1.756892,-6.927367,-3.814908,1.266092,4.989511,2.362108,-3.711363,-8.717345,1.975787,-6.699577,-4.205934,-2.619347,-2.581927,-9.936357,8.723401,8.356270,9.534882,-5.825187,5.297129,-8.031265,6.174515,-2.518197,1.517478,-9.072563,-2.665170,5.361910,1.417301,9.565941,7.322482,1.270722,1.681774,-3.111549,-3.130210,-2.251674,1.420856,-9.914455,-6.838450,-5.054827,-4.750526,9.928106,2.495496,1.594595,-4.271180,-9.295588,-5.438123,-7.652773,9.653411,-8.073925,5.034230,8.603677,-2.239264,-6.450763,-0.857327,-3.758510,0.141341,8.522165,6.379775,6.526118,2.428327,7.231180,0.852593,6.793178,-1.796506,9.079875,-7.946199,-9.042938,-9.561112,-9.954860,5.253840,1.083245,-8.006664,-6.431519,4.271758,5.275007,6.088224,-6.869559,-7.171933,3.103677,-9.355966,4.028806,5.521820,1.011392,-0.216135,-7.114104,-8.784261,-2.388193,-2.217577,-6.628074,-8.530917,-0.599800,-5.704897,-6.970093,-6.795650,-7.910529,-1.869993,-9.095053,0.694492,-5.146319,4.237703,-4.062051,-5.855010,-3.495652,6.657187,6.035290,-8.284657,1.840826,-7.469578,0.995069,-9.077803,6.970494,2.973239,-5.209125,1.164404,-9.119807,-9.757308,3.932958,5.398564,4.630560,-9.962292,-2.435353,0.872571,-1.577931,-8.693594,-0.245951,5.814733,7.368427,0.635153,0.118185,-7.747406,4.218892,-5.988901,-6.586593,-3.587914,-1.172032,-1.356890,7.142432,8.524948,5.237487,-7.091209,-9.442688,-5.311267,-4.109625,3.572423,-1.884068,-0.510837,-1.207719,-4.905588,-5.126629,5.645281,-1.244806,-0.172633,6.623158,4.884376,0.752344,-7.210638,8.362084,7.446945,5.936046,8.244956,7.666356,5.852110,2.534320,-7.014963,7.921942,-7.257638,1.719066,0.457575,-4.987541,4.139356,-9.215104,6.056633,-7.370143,-3.673235,-0.156942,-7.360991,4.877614,3.054628,6.943698,-9.149047,0.396041,-5.571856,0.133090,4.450624,-9.670186,8.145974,6.035969,-1.696874,-2.647155,4.957002,3.132019,-3.016022,9.421189,1.947273,3.027014,0.396290,-9.295626,1.100841,-9.390340,-6.634158,1.105306,4.723199,-9.401708,2.122437,-8.081154,5.586696,-7.809070,-4.485193,-7.381193,-1.677427,-3.638725,-7.207211,-7.217846,-8.354620,6.855793,8.138598,1.185808,6.637481,1.726817,-7.810137,7.262345,1.637715,7.066658,3.598752,5.895784,3.767880,-5.935865,-0.716992,1.283214,9.753254,8.699497,1.653370,2.717406,9.845460,6.019192,6.341755,5.668324,-4.976593,-6.505157,-9.585175,-9.547049,9.474241,-4.206095,9.331952,8.020624,-1.694474,6.038518,5.673070,-4.432045,0.004220,-7.590511,-2.427104,0.306962,-3.409059,-0.763378,6.756965,-2.274473,9.416130,8.151730,-3.588710,3.104781,9.684744,-1.108967,-0.410809,8.258102,6.064204,-9.257623,-4.723545,-1.449501,0.058320,2.410469,2.092266,-1.725633,-6.837669,8.946729,-8.648149,8.319892,-0.558720,-9.466557,-6.584886,-5.107104,9.081341,2.428079,4.045763,-2.795048,8.426898,8.518405,0.613884,9.430338,7.040742,-1.928550,-4.794221,-7.601152,6.376355,7.303994,-5.940028,7.646328,-6.612467,0.515634,5.201286,-8.056172,-9.483522,2.010680,8.051576,8.751056,-2.533135,-3.353993,-5.671765,0.446714,3.362134,9.829188,-8.547986,6.465722,-0.605388,-8.152578,-2.421634,-0.052017,4.745390,-9.237730,-4.266619,9.363582,4.054202,1.851053,-3.036475], dtype = "float32")#candidate|403|(1470,)|const|float32
call_402 = func_78_call(relay.reshape(const_403.astype('float32'), [14, 7, 15]))
call_404 = func_78_call(relay.reshape(const_403.astype('float32'), [14, 7, 15]))
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
call_409 = func_78_call(relay.reshape(const_403.astype('float32'), [14, 7, 15]))
call_410 = func_78_call(relay.reshape(const_403.astype('float32'), [14, 7, 15]))
output = relay.Tuple([uop_397,call_402,const_403,call_409,])
output2 = relay.Tuple([uop_397,call_404,const_403,call_410,])
func_422 = relay.Function([], output)
mod['func_422'] = func_422
mod = relay.transform.InferType()(mod)
output = func_422()
func_423 = relay.Function([], output)
mutated_mod['func_423'] = func_423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_436 = relay.var("var_436", dtype = "int64", shape = ())#candidate|436|()|var|int64
var_437 = relay.var("var_437", dtype = "int64", shape = (12, 8, 1))#candidate|437|(12, 8, 1)|var|int64
bop_438 = relay.minimum(var_436.astype('int64'), var_437.astype('int64')) # shape=(12, 8, 1)
bop_443 = relay.bitwise_or(var_437.astype('int64'), var_436.astype('int64')) # shape=(12, 8, 1)
output = relay.Tuple([bop_438,bop_443,])
output2 = relay.Tuple([bop_438,bop_443,])
func_458 = relay.Function([var_436,var_437,], output)
mod['func_458'] = func_458
mod = relay.transform.InferType()(mod)
var_459 = relay.var("var_459", dtype = "int64", shape = ())#candidate|459|()|var|int64
var_460 = relay.var("var_460", dtype = "int64", shape = (12, 8, 1))#candidate|460|(12, 8, 1)|var|int64
output = func_458(var_459,var_460,)
func_461 = relay.Function([var_459,var_460,], output)
mutated_mod['func_461'] = func_461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_465 = relay.TupleGetItem(func_422_call(), 1)
call_466 = relay.TupleGetItem(func_423_call(), 1)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_473 = relay.TupleGetItem(func_422_call(), 2)
call_474 = relay.TupleGetItem(func_423_call(), 2)
var_481 = relay.var("var_481", dtype = "float32", shape = (14, 7, 15))#candidate|481|(14, 7, 15)|var|float32
bop_482 = relay.less(call_465.astype('bool'), relay.reshape(var_481.astype('bool'), relay.shape_of(call_465))) # shape=(14, 7, 15)
bop_485 = relay.less(call_466.astype('bool'), relay.reshape(var_481.astype('bool'), relay.shape_of(call_466))) # shape=(14, 7, 15)
func_231_call = mod.get_global_var('func_231')
func_235_call = mutated_mod.get_global_var('func_235')
var_487 = relay.var("var_487", dtype = "float64", shape = (300,))#candidate|487|(300,)|var|float64
call_486 = relay.TupleGetItem(func_231_call(relay.reshape(var_487.astype('float64'), [10, 6, 5]), relay.reshape(var_487.astype('float64'), [10, 6, 5]), relay.reshape(call_473.astype('float32'), [1470,]), ), 4)
call_488 = relay.TupleGetItem(func_235_call(relay.reshape(var_487.astype('float64'), [10, 6, 5]), relay.reshape(var_487.astype('float64'), [10, 6, 5]), relay.reshape(call_473.astype('float32'), [1470,]), ), 4)
func_231_call = mod.get_global_var('func_231')
func_235_call = mutated_mod.get_global_var('func_235')
call_492 = relay.TupleGetItem(func_231_call(relay.reshape(var_487.astype('float64'), [10, 6, 5]), relay.reshape(call_486.astype('float64'), [10, 6, 5]), relay.reshape(bop_482.astype('float32'), [1470,]), ), 0)
call_493 = relay.TupleGetItem(func_235_call(relay.reshape(var_487.astype('float64'), [10, 6, 5]), relay.reshape(call_486.astype('float64'), [10, 6, 5]), relay.reshape(bop_482.astype('float32'), [1470,]), ), 0)
output = relay.Tuple([call_473,bop_482,call_486,var_487,call_492,])
output2 = relay.Tuple([call_474,bop_485,call_488,var_487,call_493,])
func_535 = relay.Function([var_481,var_487,], output)
mod['func_535'] = func_535
mod = relay.transform.InferType()(mod)
var_536 = relay.var("var_536", dtype = "float32", shape = (14, 7, 15))#candidate|536|(14, 7, 15)|var|float32
var_537 = relay.var("var_537", dtype = "float64", shape = (300,))#candidate|537|(300,)|var|float64
output = func_535(var_536,var_537,)
func_538 = relay.Function([var_536,var_537,], output)
mutated_mod['func_538'] = func_538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_543 = relay.TupleGetItem(func_422_call(), 3)
call_544 = relay.TupleGetItem(func_423_call(), 3)
const_545 = relay.const([[[-3.532519,8.757314,5.554453,5.994384,2.809547,-2.358956,-2.643150,-1.080471,-8.443949,-9.397814,2.318333,-7.879105,-7.837335,4.185653,-5.106519],[6.882640,-2.459446,-6.431817,-5.057024,-1.421842,-9.143490,-5.790792,-5.293885,-7.028027,-8.239356,-9.472104,-7.571294,7.613504,0.596975,-0.801227],[5.345889,-1.944872,-0.345370,6.054472,-6.753880,-2.769938,-6.463775,-2.557454,2.396303,3.493624,4.017658,8.980573,-2.377211,-8.868471,5.501191],[7.216871,7.121932,-1.500738,-8.957619,-2.462940,0.372183,9.480792,-5.300034,-1.030969,9.499935,6.462234,-4.955857,-2.302071,5.471919,-3.064735],[7.101636,0.015360,-5.332267,-4.543774,0.091826,7.896767,7.303080,-2.891102,-8.961449,1.500958,5.017990,-8.057061,1.515331,-8.030658,-4.769973],[2.994358,3.791400,-4.450437,-9.316244,-4.622857,6.503370,-9.443648,5.599787,-6.232941,-3.233048,2.660087,-3.378750,2.563934,-3.302110,-5.083948],[-8.097212,7.837015,-0.972221,2.159961,-8.307879,-1.350294,-1.560257,8.471473,-9.030028,9.186377,8.331938,-9.714856,6.508760,-2.123679,1.145484]],[[-5.802657,-4.079148,5.209221,3.012571,-3.052569,5.061560,2.803830,4.522575,5.380042,8.060993,-9.972388,2.540324,-0.283630,-6.702381,-5.443237],[-6.282528,-9.026273,-0.594935,6.180254,-6.181823,-4.805876,4.956678,2.984080,-5.635843,-0.919486,-2.243029,-0.310520,4.304033,-7.477026,9.582319],[8.101438,2.502384,9.396657,-5.914834,5.980963,-3.853032,-8.514041,3.911735,-5.433188,-7.590170,6.835124,-0.637249,-2.076445,4.439719,0.092731],[7.269752,-4.474504,-1.730990,3.253718,-2.948971,-2.475182,-0.742588,-5.840485,-7.428317,5.984622,8.334502,9.923973,-2.868718,1.927963,-8.703302],[6.314286,-0.429740,-9.705678,6.355300,9.538122,-9.534294,-0.562844,-3.066045,6.688572,9.774207,7.180463,0.764902,-1.256140,-3.027947,3.433880],[6.169678,-9.363534,-7.057316,-0.766029,-4.444246,-6.746580,6.165009,1.534539,3.426393,3.394985,0.295222,-6.279853,3.899785,4.460253,-9.702689],[3.685678,2.697168,9.502713,-6.338904,6.793721,7.587952,-9.599074,-3.548880,-0.645975,-7.263696,-4.344015,-5.463122,-2.842769,-4.942271,9.329116]],[[6.309961,-1.114943,0.912754,-1.961602,1.135691,-1.475298,1.681488,-5.256682,5.888810,-4.776148,-8.463913,5.085233,7.358217,-7.405465,1.108760],[-3.552708,-0.329908,6.532818,8.935771,-5.006891,0.679704,7.241932,8.908433,-1.488468,6.688835,-7.379785,-9.762154,-9.455483,1.714470,8.598306],[8.902445,2.783792,-5.015818,5.893653,0.105298,-0.732198,-9.574411,8.757340,9.064419,-4.798258,-0.022029,-8.806229,6.593802,-5.759518,-8.778725],[8.302172,-0.285290,8.394917,-7.790454,-3.179934,-6.621679,-1.323954,-4.911558,-4.967928,-6.227503,-3.797646,6.287353,4.667331,-5.768567,-5.884951],[8.633458,-2.703268,-5.885100,-3.904667,-0.201495,-2.839498,7.757182,0.646415,5.286749,-7.995129,6.364097,-9.088291,0.360558,0.527060,-1.966802],[-8.808309,3.331857,2.975868,8.536420,-5.421067,-6.326173,-9.416630,-4.146036,0.023033,-5.515663,8.735596,6.430062,-9.475539,6.614566,-6.675699],[2.447105,7.572101,7.378729,1.456398,-8.350942,-7.779011,-6.708667,-6.783756,-3.096465,-0.365340,5.065270,-8.441004,-6.482085,-7.934775,-5.595937]],[[2.787528,9.082931,3.055572,3.860439,8.258134,-7.648817,-5.565072,6.191487,6.780817,-3.614875,-9.179661,1.775296,-9.347526,0.945236,2.703016],[2.819759,-4.058999,0.162825,7.256520,-2.162640,-6.998611,-0.061276,3.006848,-2.952596,-2.495601,9.503298,-3.919021,6.138677,-3.237101,8.242005],[6.668425,-0.010663,-1.813628,0.825662,-9.543288,-3.949507,-0.849994,3.326249,-6.271401,4.067264,-3.147637,1.770884,3.443163,-5.668318,-9.030987],[-6.588284,-5.184284,5.963905,-6.299124,6.745990,-3.767479,-7.236186,-8.810222,-3.356235,1.740994,0.759649,-7.239343,-3.682914,-9.615994,2.409651],[1.780088,-1.041437,-6.211632,-2.109054,-8.721193,5.920695,0.574302,2.062672,9.677533,7.712996,1.990505,6.839571,9.324629,-4.450561,-0.328751],[-4.331190,9.653212,0.030031,-9.921950,-3.404885,3.409056,5.473072,6.568023,6.179306,7.941164,9.170417,6.784498,-2.443230,3.157049,-4.845223],[0.337883,6.392140,4.077604,-6.401589,-6.516030,-0.843102,8.560213,-2.523837,0.775447,4.171763,-1.642429,6.922815,8.084163,0.019373,-2.388289]],[[-8.010599,-1.094823,-9.535670,9.351379,-2.869539,-3.759278,0.590081,-6.387049,-8.795275,8.228986,-3.185945,3.594804,-5.399984,-4.362120,7.436932],[4.053489,-4.145185,4.406272,-8.602240,3.232811,-1.242379,8.414188,5.909374,7.814564,7.851077,-0.781135,9.738052,-5.829501,-8.823249,6.904595],[6.045447,-5.923223,-3.521107,4.599541,-3.135349,2.551620,-7.327255,-2.159780,6.582498,9.978306,3.014206,-3.144540,4.028292,-5.334121,7.354175],[1.663273,-4.998263,-1.040048,3.918717,1.405181,2.879929,-0.926822,-7.355454,2.119420,7.987529,-1.905931,-7.823251,0.972810,9.376986,-2.730662],[9.213215,-1.883614,2.976013,-5.975725,-1.562286,-7.706298,8.395844,3.786643,9.218903,3.042821,0.890027,9.029757,-0.299266,-5.527752,-2.262250],[2.260935,-1.550635,-4.913709,-5.506591,6.995355,-1.137028,-0.693176,-7.929247,4.636083,4.569071,-8.690474,4.366932,-2.548605,-6.668580,1.613828],[4.807293,-3.464149,-8.169375,2.462526,-8.249215,5.618795,-4.548620,-2.435633,8.851280,9.418255,-8.093667,-7.552996,6.392913,2.836309,8.698794]],[[7.723040,4.711603,-6.882690,-9.424391,3.337339,-1.347673,6.484753,-8.606082,-5.252833,-2.470596,-4.345616,3.496921,-9.983689,-0.675270,0.289258],[-6.257363,-8.244629,-1.581140,-9.936401,3.514765,4.889680,-6.972822,-2.315073,-6.851932,5.237747,-6.545253,7.532231,-6.111006,3.712770,-4.459493],[-5.170202,4.905310,-8.817014,7.710743,-9.697771,-6.638611,8.065515,-8.678548,-2.748974,-4.011335,2.815287,7.818734,-6.339419,-2.534782,-9.854648],[-8.577438,-2.135286,-8.063250,-8.865219,1.748659,-8.237603,-0.060815,-3.326865,7.167847,-6.923220,-0.885552,7.020333,-5.449050,2.864077,0.085602],[6.864905,-4.802601,1.956164,3.708137,1.981958,-0.896898,-1.373280,5.589139,6.008544,9.373813,-5.433520,-5.528140,-4.163118,2.178422,9.523406],[0.450168,7.832607,-6.332850,-8.183498,-5.693965,-2.773406,7.021689,2.232015,-0.451763,-9.221406,-6.280501,6.133578,-6.399724,-3.506725,-9.694020],[-3.992695,-8.581364,0.875450,-7.958813,-7.290491,1.706192,0.792217,-0.827684,7.217053,0.052925,-7.098070,-6.504365,-3.940505,9.762345,9.792507]],[[3.094637,-0.641011,8.568480,-7.734095,7.918207,-4.986617,-7.594904,-5.265616,-5.796764,6.749284,3.941585,-3.245994,4.894842,-5.773040,8.967345],[-8.997012,1.702807,-6.312632,8.185245,-0.017691,-0.789758,0.799079,-3.900876,5.145735,-6.352194,-3.811874,-8.301649,1.577433,-8.710366,5.847570],[9.617422,-8.472221,-0.074272,6.586870,0.767884,-7.915210,-2.485396,-8.700649,4.124612,-6.512393,-0.824186,3.905206,0.024736,6.909970,-8.773230],[8.729632,-8.717319,-4.472616,-0.992585,-7.573610,3.124906,5.384605,7.371702,-9.472938,2.112918,-7.631502,-4.940604,1.063869,-9.606809,4.874951],[9.506540,2.137344,-6.611454,-8.357073,5.358852,-7.572503,0.342882,1.857849,-4.920614,-5.918845,-1.424653,7.031030,-0.743023,-1.172587,5.022768],[-0.320953,-4.141926,8.796611,3.957523,7.155888,-8.680163,-4.620926,-7.866787,-5.768064,1.511273,-4.773973,2.026489,-5.667304,-3.311654,5.854682],[-3.615546,-0.941246,3.654769,0.429816,1.444789,1.745988,2.748259,-1.658004,1.777024,-7.100252,1.496909,-3.046309,-8.325620,-0.760610,9.142068]],[[5.228318,9.806212,-3.565539,6.142141,-5.155456,5.182587,-0.167293,8.122801,-9.311387,-1.775572,7.385566,4.383596,-7.558343,4.370926,4.699341],[-2.960822,-4.563361,-1.353226,-0.913332,1.936677,1.369896,3.865656,5.203735,-0.459021,2.091211,-0.551863,-5.836392,6.545765,9.782685,5.145595],[6.939370,3.128461,-0.398708,3.228152,5.619923,1.485758,8.299071,3.818833,2.487810,-9.636500,-3.839799,8.642496,-4.722824,3.485824,1.449517],[-0.186238,8.367221,0.547725,-0.409617,-7.885238,0.265963,-1.174858,-7.282882,0.734087,8.714852,0.801523,-4.782306,-8.580038,2.256494,-8.663254],[-4.049435,1.472028,0.341254,6.131046,3.098577,2.366464,8.678707,3.499483,6.364349,6.560134,-7.412475,-8.395168,-7.920545,-0.464144,5.598604],[-7.666857,2.998781,1.327200,-4.569879,-4.832896,-9.601310,-5.057697,4.704270,-1.547229,-9.528577,4.775916,-4.871106,2.844528,-6.241276,-5.850169],[9.877635,-3.533983,-1.110711,1.311559,-0.343883,2.942706,4.322519,9.225641,8.540581,-0.355412,4.187790,9.278029,6.182540,-4.888423,-1.367086]],[[4.538154,-0.715174,-2.730031,4.874578,6.373739,-5.618800,3.844085,4.283187,-2.023550,-4.048369,-7.630216,9.826567,8.815267,6.447523,-7.036943],[-5.476292,3.997941,8.084161,4.423164,0.162428,5.056053,9.053714,5.290471,7.323376,-3.708358,-5.181045,6.973973,-5.800312,7.900594,2.427588],[6.295168,7.618486,-0.034114,-3.227420,-0.982076,-2.424845,0.711962,-9.023891,-9.530013,8.766144,3.363699,-8.662816,5.221701,6.343649,-4.096254],[-0.815551,-1.617400,-0.717078,6.268694,-6.027612,-4.165904,6.956752,4.025417,-6.575935,4.939668,-6.956781,-0.298466,9.869707,9.873957,-6.055444],[2.112153,8.803363,-6.836411,-7.114231,-0.125565,0.884986,-7.317223,9.776313,-8.668614,3.734347,1.528811,-8.697215,-2.065014,2.902734,-2.354817],[7.987224,-0.973421,3.359337,-4.690070,-6.918961,4.475528,9.558171,-8.683256,0.299594,3.296910,-4.130969,-6.278069,-7.318143,7.017438,-3.192392],[0.797052,3.546628,-4.319712,-2.844308,5.271592,9.806385,6.661396,-8.824107,0.218556,-4.770561,-0.087723,4.669830,-9.498690,-9.425659,2.731197]],[[8.823124,-6.416513,7.044426,-2.530847,-8.832374,-8.147425,-2.539668,-2.230644,-6.287735,-3.332349,-8.584776,7.171416,9.110789,2.429621,9.667122],[-3.615606,8.167812,-2.545250,5.097736,1.889449,-0.461031,9.369193,4.311878,1.524698,-0.654771,-5.946562,-0.928967,-1.387044,1.369696,2.038126],[7.408711,-1.205161,8.262472,0.018427,2.206864,-0.065646,-2.704297,-5.388212,6.952881,1.533070,3.763824,6.523118,-3.944026,3.523321,9.062852],[-6.654008,-8.674021,-0.901945,5.125487,-0.375295,-5.613350,-1.877649,-7.542231,-6.788111,-3.240803,3.830125,7.644607,-2.915723,5.208276,-9.745182],[-5.766795,8.025807,9.574827,-8.970540,8.736185,6.798171,4.584228,-0.541572,-3.520692,-0.278976,6.136515,-2.519401,-1.399949,-7.351912,-2.489481],[-7.912332,2.469412,4.160502,9.740882,-3.922555,-9.546813,-3.778316,5.105581,0.756948,8.881867,6.938112,-2.392314,-8.704475,-6.599958,-7.700889],[7.092708,4.035483,-8.652392,1.630815,0.239642,-6.081146,6.486463,9.707794,6.013279,-8.131542,-8.135285,6.578916,5.900284,0.927144,-5.522051]],[[-8.953912,4.405789,4.113112,-1.231772,0.815889,-8.539125,3.503586,4.447692,-1.369450,6.218384,5.545209,-7.337169,-9.663146,-6.620743,1.458421],[5.568523,-3.039859,-5.413979,-0.761054,-5.932154,-0.462739,3.538234,-6.578011,-4.506929,-6.680753,1.202309,-0.869131,-9.039241,4.521426,-5.114606],[-7.820368,-3.980159,-2.308780,-4.020257,3.765906,7.230430,2.618063,0.452360,5.766643,-7.827638,-8.341381,6.055619,-2.799335,1.011126,9.448651],[-4.192687,-1.539631,-4.045354,9.880156,4.464640,-9.669242,-6.248427,-7.771747,1.342873,-1.117691,9.294748,-0.161620,8.425914,-0.547798,-0.416441],[-5.174751,0.337086,-1.513345,-7.707566,-4.595946,-6.295054,-2.680093,-6.371934,3.552109,-2.630863,-7.388665,-6.659524,-4.805211,8.652700,-4.484777],[-1.073137,-9.833379,8.658068,-0.227007,5.546225,-3.041074,1.779899,-4.267137,9.935189,3.275617,3.372094,7.268062,-3.484373,1.405563,-7.508444],[-6.661589,6.592608,1.321359,4.896146,-0.716627,-5.193208,-0.339340,1.716474,-3.925099,-4.532271,-1.925788,0.445068,8.708804,2.541311,6.575788]],[[7.543830,7.044765,-4.358666,3.809652,-0.158910,-3.549613,-1.925487,-9.201307,-8.440742,-4.123106,-2.791380,-2.129941,-1.756127,-0.385667,8.642717],[-1.919957,8.279335,8.173327,-6.040687,3.168728,-2.775924,3.210477,-9.861331,-3.327661,-5.009305,-4.885707,2.540983,-5.518544,-8.875174,0.416287],[-1.093657,-1.094810,9.390378,-1.226228,1.603135,-4.734154,4.411921,-1.222271,7.752792,-6.463898,-6.450541,2.115828,-8.499820,1.535035,-2.008821],[-3.171970,-7.893785,-7.738099,-9.248879,8.239584,-6.738073,0.380491,-1.519033,0.583994,-2.270838,5.871371,-8.375425,-9.629268,0.436258,-1.231258],[-0.676404,-2.712654,2.089795,7.397501,6.077813,8.446632,-2.080368,-0.031750,8.230588,5.917788,1.232168,-4.454803,4.445110,-1.931457,-8.043351],[-4.351741,7.030319,-4.902923,9.697092,-5.169524,-5.499052,-6.396422,-4.171044,8.097702,-3.259624,9.772798,-1.043344,-6.966041,-0.857457,-6.421476],[2.995651,-1.990439,0.705905,6.911229,-7.249010,-9.874054,-2.824843,5.947113,5.157597,-6.151363,8.189830,9.153862,9.499660,3.172760,7.559450]],[[-3.956963,-8.623244,3.742108,8.496906,-4.295196,8.093396,4.153257,3.411438,-0.305741,5.077716,3.661991,5.436080,-3.542756,-3.981216,-0.751749],[2.502302,-1.082977,1.757828,-3.373426,-5.097943,-6.648791,7.194146,1.515717,6.605705,8.456379,-2.081628,7.645906,0.856113,-0.789024,-4.390154],[6.688610,-6.266652,8.761418,-8.789619,-3.072716,8.330875,-8.330002,-2.820897,5.977462,6.182405,0.394221,1.527499,8.586169,-5.617016,-3.375405],[7.068741,4.360170,3.681942,8.857653,-6.884889,8.678312,0.383018,-5.327514,6.040189,8.532342,-5.072868,4.021319,1.212282,-4.552909,-0.659630],[-3.772571,1.473728,2.105890,6.527068,-6.479036,7.518603,2.120346,6.399169,-6.570384,7.347752,2.337852,-6.738060,-0.682629,-6.738183,-0.770754],[1.241302,-2.930156,-8.551071,-8.234321,-3.114147,8.860987,-5.333886,-4.681853,-3.223162,-3.120156,-2.981193,5.175064,-9.496944,8.748024,-1.477701],[-6.081241,-6.539096,-6.714283,-7.541239,-0.911993,8.160630,-9.785720,-0.840055,9.754104,-0.020830,9.033715,-2.845163,1.006553,-0.099670,3.620878]],[[-9.463508,-9.822628,-3.571217,8.214980,8.682991,1.653611,8.979569,-0.630514,0.648203,-3.414714,-8.138967,-1.644679,-4.493751,5.162734,-1.505378],[-6.801085,-9.453970,-7.115192,9.272706,-6.639487,4.360410,-6.989897,8.263076,8.783435,-3.932549,-9.361623,4.459138,6.621893,8.851619,-9.141169],[2.407201,-8.441864,8.632509,-0.802764,6.396535,-4.796834,3.207342,3.905509,5.855643,2.233193,5.152567,-6.045723,-7.241722,-3.034498,7.745958],[-4.541908,6.250728,-0.122323,1.338894,-9.453989,4.064119,5.095779,4.863043,-5.203326,5.995863,-8.396226,6.036727,2.762718,7.377871,0.817686],[-1.732157,3.602064,9.714408,5.893583,9.977517,0.024150,-9.156430,0.413167,5.616708,-8.394442,5.126306,7.728768,-1.791974,-6.355813,3.000264],[-5.209143,5.800020,2.907804,0.048016,5.713840,-6.688487,-9.201194,-1.386181,-4.214358,7.126815,-7.006454,-1.509210,5.931517,6.523967,-3.010625],[-1.871851,-9.486438,-5.334283,-0.069897,-8.372826,-6.017968,-8.642750,1.963503,-7.741096,-1.210187,2.834008,-3.959204,8.117119,-2.731547,-6.386224]]], dtype = "float32")#candidate|545|(14, 7, 15)|const|float32
bop_546 = relay.add(call_543.astype('int16'), relay.reshape(const_545.astype('int16'), relay.shape_of(call_543))) # shape=(14, 7, 15)
bop_549 = relay.add(call_544.astype('int16'), relay.reshape(const_545.astype('int16'), relay.shape_of(call_544))) # shape=(14, 7, 15)
output = bop_546
output2 = bop_549
func_555 = relay.Function([], output)
mod['func_555'] = func_555
mod = relay.transform.InferType()(mod)
mutated_mod['func_555'] = func_555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mutated_mod.get_global_var('func_555')
call_556 = func_555_call()
output = call_556
func_557 = relay.Function([], output)
mutated_mod['func_557'] = func_557
mutated_mod = relay.transform.InferType()(mutated_mod)
var_564 = relay.var("var_564", dtype = "uint64", shape = (13, 5, 1))#candidate|564|(13, 5, 1)|var|uint64
var_565 = relay.var("var_565", dtype = "uint64", shape = (13, 5, 9))#candidate|565|(13, 5, 9)|var|uint64
bop_566 = relay.less(var_564.astype('bool'), var_565.astype('bool')) # shape=(13, 5, 9)
uop_572 = relay.atan(var_564.astype('float64')) # shape=(13, 5, 1)
func_231_call = mod.get_global_var('func_231')
func_235_call = mutated_mod.get_global_var('func_235')
var_575 = relay.var("var_575", dtype = "float64", shape = (300,))#candidate|575|(300,)|var|float64
const_576 = relay.const([-5.572158,1.728306,3.458274,-8.514714,2.850111,-4.518284,-4.335337,-3.944350,-5.811320,-6.114472,-9.868137,-1.407528,-9.624697,-5.001865,-6.349126,-5.856059,6.083371,8.773892,-8.758209,0.902747,4.907274,9.776876,8.267096,8.972480,3.020338,4.203421,-8.655954,-5.545630,8.349702,7.368909,-0.446224,-5.647298,4.404652,-7.525898,-2.385129,4.308334,-3.196728,4.917415,3.749294,0.293755,-4.654684,-7.281554,-7.192539,7.469117,1.851360,3.096899,-6.788856,3.486492,1.777045,9.074231,1.306960,5.903649,3.759435,3.293363,-6.196723,-2.847186,4.285748,2.819510,1.671807,5.241953,4.715037,-3.774815,5.654362,5.008540,-7.409223,-2.914245,-0.354807,6.605596,-0.469803,-4.837902,8.619958,-2.213302,8.608508,-1.555250,-6.768470,5.633906,0.528313,-4.343868,4.306886,2.186965,-5.330349,6.557673,-1.053048,0.623224,0.379161,9.629396,-3.897677,-8.592498,6.920889,-3.186576,-6.174898,-9.266232,3.618324,-5.442609,-4.480145,-6.809293,2.002394,4.637378,-2.106028,4.003725,-5.042377,-2.937390,-9.349368,-6.623305,-4.695608,0.026383,-6.383381,-8.119545,-0.830184,-7.778107,-6.400371,-8.508750,-0.347914,0.294417,-1.352061,6.554668,7.655931,2.284695,-0.382742,-9.567343,-1.722963,7.100169,8.271485,-2.108130,4.880119,-9.400095,-4.384675,2.248581,5.383548,4.462046,3.790882,-7.621713,7.144355,-6.846040,-3.603153,-2.082639,9.531907,6.099529,3.960546,-5.232744,6.209378,-3.009167,3.372507,-5.216132,2.621274,-7.050876,-0.929816,3.878918,-2.701338,7.585247,-9.497336,7.415212,-2.251060,-7.539269,2.564032,-2.933372,-6.838266,-6.538689,-6.019530,-1.278613,-8.768315,1.529470,1.794320,-0.221319,-7.884628,-1.164227,5.931634,-3.789141,8.579286,8.346005,-9.271326,9.059843,9.085440,-8.627464,-1.876445,5.233989,-7.752864,-2.418885,8.337332,8.667493,-2.581958,2.827004,-9.934573,2.883124,-5.195854,-4.995048,-0.891524,3.221236,7.373565,-0.254684,-3.606652,-8.513004,-2.239815,8.689181,-1.018868,0.180114,-8.423062,-5.032081,5.721299,-2.237489,7.462264,-7.957962,-1.401778,8.925496,3.517670,-3.727617,0.089660,-8.274019,7.764842,5.302525,2.735095,-3.203766,1.122854,-8.456850,9.350503,8.622213,5.719390,-2.054716,6.198903,6.897553,5.563857,9.017944,-4.180290,-1.299388,9.841504,5.544586,2.215299,-7.867034,8.256835,2.615620,-9.904738,0.565789,-2.011026,6.565266,1.604870,-8.671104,-2.347447,8.548429,-9.688507,-1.700206,0.592696,-2.655315,-4.878171,-0.489639,8.807510,-5.461911,-4.875168,7.495449,8.352524,-6.603213,4.497463,-9.489027,-2.345069,-3.223029,9.595810,-6.653226,5.783130,6.234374,-8.524801,4.509004,2.837249,9.036327,8.659389,-8.874572,5.403264,5.069358,-6.484168,8.668819,4.610311,1.809586,-0.351148,4.538695,-2.552652,1.934869,-2.639838,-9.407766,-1.888521,0.344485,-5.011358,6.163637,5.724991,-9.568203,-3.926463,-3.572280,3.676133,-7.101373,-7.915483,8.378995,5.466539,3.999081,5.361149,8.350213,0.178010,6.779212,8.369201,3.085542,4.742710,-3.057505,9.642254,6.693197,-8.275313,9.450139,-7.498713,8.163120,0.638632,8.613320,-9.377146,7.383848,-8.370201,5.533697,3.596806,-5.840566,-5.603160,-5.957606,8.833005,-6.519168,4.955386,-1.970567,1.462561,7.186818,-7.100536,9.461504,-0.537043,-2.647147,-3.693227,-1.949085,3.214396,-3.329721,9.207973,4.748663,9.959107,-3.497579,2.016978,-7.325261,-4.348946,-9.033094,-4.475539,8.879854,-6.600136,9.303655,4.597677,-1.978575,-0.778660,-1.439820,9.686895,9.207665,2.051162,3.148213,-1.993172,8.107037,-9.843177,-8.152670,-9.755767,1.496889,8.024371,8.155019,-7.768822,7.075938,-3.180335,-9.394259,-7.712442,-1.285969,2.887038,-0.320594,0.287977,-1.212549,3.046635,9.764886,-8.691323,-7.792326,5.691807,-8.083379,0.096721,7.562576,6.522023,6.156091,1.358251,8.337874,-8.419804,-9.858824,-5.063284,8.471086,9.423924,6.962112,5.157394,-5.967792,6.079326,-3.094467,-1.882368,-4.998976,5.308476,7.112724,-9.104109,5.314645,0.541836,-1.475142,-1.299241,1.028842,-0.844285,0.942504,2.001362,6.852681,-8.627940,1.036023,0.319646,-9.406851,-8.291464,3.774232,-5.910967,3.389675,-9.356530,2.454024,6.232087,4.528426,2.181286,5.950102,-8.936602,4.273732,-5.988134,1.897193,3.272363,-9.348750,-1.731177,-6.500229,-2.464864,-1.738418,2.656183,3.580876,-4.487244,4.234284,1.171919,-8.516329,9.573212,-9.922334,4.395758,0.200568,5.753681,-9.041496,6.778669,-8.857289,-1.961993,-5.321017,4.016495,-7.421608,-3.298819,7.366019,-2.693489,8.675774,-2.516868,1.402084,-3.097582,-9.048098,-4.069492,2.544562,2.834821,2.078640,-4.513508,3.783889,5.888016,1.699154,4.308480,4.415503,0.552560,4.353626,-4.341306,6.272692,9.545641,-6.266410,-0.375719,3.869372,4.753259,7.251755,0.120595,1.899568,-1.102638,-8.291759,-1.390208,9.729029,2.184416,9.519399,4.881096,-4.001228,-0.651286,-2.449750,-3.829846,-9.787881,-1.843090,5.429823,-3.347040,-3.270313,6.567298,5.683657,-0.112716,7.892817,0.334361,1.457582,2.951762,-6.972057,-1.359060,-6.353493,-0.074612,-6.990619,-8.038462,-8.254037,7.823799,6.411848,-5.486849,-1.350654,1.167641,-9.496074,-1.045089,5.664113,3.892610,9.314130,-9.065988,-5.266193,-4.716731,1.496090,-7.492598,2.626013,-5.675436,-7.077474,6.612425,1.399642,8.376481,-0.551945,7.124584,8.009913,1.556438,-8.271500,4.952766,-0.176644,-9.766900,-3.134775,-4.688007,-2.975558,1.690942,9.920043,6.231454,5.237650,-2.769778,-9.971954,-2.489361,-0.972466,-4.771634,2.859020,0.761147,2.878783,-9.931463,-4.827459,7.936081,1.473458,2.103329,-9.294764,-0.844951,5.262195,0.959841,-4.598037,-9.266470,5.078575,-5.169633,-3.144618,-0.570749,2.301372,6.043330,2.421714,-4.920362,1.586327,6.823444,-3.706284,-6.856176,-3.885208,3.533356,3.875879,2.489990,-3.504313,8.611540,3.105469,-1.401725,-9.321590,-1.325945,-4.683850,2.524270,0.473227,6.130771,-6.965309,8.302575,9.883546,9.575939,-8.161129,8.338842,-1.400012,0.786542,6.609471,-1.034341,-9.465384,7.739534,2.406714,-2.623169,-6.492972,-9.746825,4.721469,0.824377,-1.761366,4.219886,-6.999494,5.404382,-5.063324,-9.668135,-1.203522,4.130511,-3.784792,-6.888437,2.006248,-9.602087,-1.045922,-7.995016,-5.402605,1.479251,2.142355,-2.347886,7.619971,-2.162920,-8.923630,9.095421,-7.485251,7.629638,-2.647483,-5.875690,2.251751,9.305281,-1.043888,3.647621,1.804521,2.764448,-9.479468,-7.410391,-9.809884,4.559905,-5.830552,5.040850,0.189101,9.320669,-9.209109,-1.023967,-1.447397,-6.369501,4.163893,2.769762,-2.141440,8.945623,-4.927798,-3.988426,6.461397,-9.904532,0.736873,-2.581471,-5.978059,-3.248944,5.767137,-5.375177,-5.941858,-7.821632,0.143169,-4.668100,5.801072,-0.434076,-0.199881,-5.584067,-9.961179,7.597432,-4.480130,-0.086568,3.015653,-0.503995,6.049784,-8.276470,7.150608,-0.645281,-7.427838,-5.946351,-4.745130,-3.136600,2.682280,-0.177663,9.729066,1.062358,5.106797,-0.142535,-8.549997,-6.228169,-6.837630,2.268518,3.514811,-7.046269,9.029223,6.438946,7.101453,-9.789474,-7.807653,-6.238441,-2.156619,-2.560493,7.687641,-3.796646,7.201934,-6.226578,6.060320,8.285406,8.398670,-3.435500,-8.856945,-9.447290,5.454321,-2.427129,-5.545206,4.368979,0.599965,-5.090609,7.773190,-7.430647,6.225909,-3.039239,7.149978,-9.570414,0.456863,3.114242,-2.886147,9.229726,-0.580164,-0.258316,-8.034812,5.041949,3.125571,-0.652986,-4.351101,7.973672,1.213056,-6.482132,8.350773,4.461420,4.699221,-9.110053,9.486859,-3.220534,5.355423,-9.443496,-1.938850,6.848028,7.258925,-0.876719,6.321035,-3.506341,5.492163,2.246997,5.156916,6.957883,1.108501,-8.632327,4.240429,-2.816557,1.525181,-6.407461,-9.842527,8.434266,-6.453374,7.044840,7.463303,-6.988229,-9.116522,1.735646,4.314782,-1.558705,-0.725465,4.839920,2.470591,9.173605,-6.784969,5.847180,3.602644,-5.343634,-8.866493,3.913598,6.081477,6.991945,6.039315,1.923852,8.545617,5.061117,4.371812,-8.075287,-3.429911,9.044690,4.691619,4.198778,-4.277501,-3.977147,3.053187,-6.295333,-5.252922,-7.432355,7.102264,-8.104390,-7.627423,-7.290337,-2.952788,-2.980154,-4.523152,8.105167,-9.350057,1.240989,-2.936625,-8.691778,1.406373,3.364135,-4.781138,-2.236415,6.959463,-4.084771,-7.264741,7.814633,0.511652,-2.646860,-7.811001,-6.141444,-8.481603,4.612468,4.967206,5.992217,-0.389221,-9.518742,-8.685015,-3.457374,6.523179,4.982730,-5.698958,-3.768051,2.260135,9.571047,-0.153072,-6.814501,6.802538,-6.003005,1.046902,-9.798494,-2.811885,-8.536910,8.217509,-2.856791,-6.163096,-1.986165,9.815118,-0.255342,2.167306,-2.070040,2.206420,0.658307,-2.402341,-3.542752,7.239232,6.123308,3.212206,-2.905031,4.046346,-1.213187,3.063568,-8.770060,0.478201,8.324687,-4.984980,2.104906,-4.001816,2.034270,-7.825166,0.835219,-8.908207,4.865591,-4.953446,-4.881739,-5.445223,7.622954,3.633799,-6.009747,1.508122,-1.580808,5.746446,1.509497,-5.914150,-1.658788,-8.279369,-7.563793,3.072828,6.940619,3.959751,8.185989,-8.266457,2.970481,-3.614093,-8.626405,9.776714,9.440300,-3.519043,2.559964,1.796224,4.361072,4.477615,-1.163604,1.551965,-0.226700,2.656753,5.144579,3.299944,-3.377620,-3.524999,2.823603,0.085394,7.929220,5.229925,-9.459413,-9.283274,6.010879,7.663023,-6.714168,9.578706,9.591413,-0.687366,-5.082681,-2.698730,6.217785,4.850725,-0.656842,-5.140367,9.646105,-4.913595,-7.939836,3.062402,-8.003901,-1.160926,-0.952589,-0.101503,-2.419473,-5.962156,-8.941893,0.178978,5.516272,-8.627486,5.414812,6.459742,-2.139256,-6.955652,5.476068,-3.287678,-9.647157,-7.340617,-3.765753,1.269342,-4.789626,9.793914,-7.055509,-1.464865,-5.669098,8.984148,5.374525,-0.096793,8.892287,1.360867,-1.015946,-0.815222,-3.692522,8.592811,5.145247,2.232009,-0.202616,-7.139849,-9.832112,5.184753,4.097971,-9.939041,1.192706,4.797373,-1.074572,0.353041,-8.801567,2.279085,2.628422,-5.566161,8.998495,-8.348006,-9.309521,-7.534418,7.752140,4.057669,8.759194,-3.075817,-1.589093,2.129577,-0.876347,-0.025025,-7.283080,1.785956,-0.808452,7.071527,0.773450,-4.611562,-2.045851,-9.587641,-9.359956,4.727770,-5.071574,-4.279432,2.640062,5.014697,5.331746,-3.637600,7.483667,9.489537,0.323968,-4.349647,-7.906250,5.068737,2.699881,-0.950308,8.326605,5.404217,3.849210,4.870895,1.654535,-2.150654,-8.886972,7.752495,-6.371736,6.033633,5.303521,7.107778,-8.723924,-2.734057,-6.435374,1.961233,-0.242710,0.959166,8.916737,-5.086168,2.161504,4.260570,-6.591072,-5.222093,6.337075,-7.839829,1.883235,-5.560758,-9.244698,8.631103,7.814566,5.282655,-2.627919,-8.707644,4.907002,-1.994195,7.029731,-6.475055,-0.041779,7.205515,-8.878091,-2.036116,2.708737,-4.488723,-1.666930,-5.524444,-9.576132,7.473325,0.157738,-1.615434,4.537575,5.591316,-8.475826,-7.000351,-2.480152,-9.443690,6.863760,-3.966347,3.493157,8.275668,2.649602,-5.688530,7.208230,-6.675623,8.085580,1.226937,6.125133,0.247013,-2.656850,2.500145,2.068860,9.493926,-4.654662,8.795097,-5.579632,6.594349,7.397290,-0.891869,-0.415911,8.753905,4.478443,-1.458081,4.881952,7.930943,8.828480,3.499795,-9.807111,6.107221,-1.108751,8.037193,9.107671,-3.211149,-4.499809,4.202374,1.739932,-7.581471,7.526665,-2.951968,-5.273286,-9.129079,-4.677657,2.971507,0.814679,3.649196,8.339061,-7.228322,-7.063080,8.061081,9.836830,1.448998,3.744190,-1.805702,-8.495610,-7.407729,-7.607447,-1.050309,-4.198527,4.947153,-2.774591,5.705174,6.206312,3.247701,6.218017,-5.234593,4.494389,4.694034,1.849386,-6.315384,-6.592868,2.226244,3.109372,0.367463,0.916240,0.973353,-6.096050,3.099104,8.893350,0.019578,-3.479719,4.078083,2.230655,-9.646570,-8.505615,-0.107342,7.965169,5.874533,1.013998,-8.719043,-0.383040,-3.083087,8.478420,-4.298308,-3.881932,8.004552,-5.549675,1.410955,8.307966,-2.693982,-2.229405,0.385391,-9.160364,-2.609568,9.276176,-6.927771,1.662111,-6.727835,4.630514,6.816783,-7.405728,-6.079258,9.623656,-6.390650,6.519635,4.566848,2.580312,-9.804848,4.296773,7.273103,9.957778,-5.407831,8.986779,6.589689,-0.865749,-1.859828,5.813547,8.377843,-5.075566,-7.116788,-2.900758,5.871400,-2.841834,-8.263776,9.513842,-0.372138,8.599573,8.497925,-9.141630,9.518604,5.173978,4.977880,-6.904640,8.397501,3.843876,4.634721,5.610852,2.734758,-8.683130,-4.645255,-9.992221,-4.632414,7.872345,-4.629208,3.583210,-6.411050,0.211340,7.351275,-8.885819,8.100533,-0.655590,-6.205566,1.461872,2.499047,6.557999,7.579048,0.058428,9.538069,7.444605,-6.723827,-3.585100,2.288074,-1.877695,3.697697,-1.133079,-6.185948,3.497410,-6.008501,8.038931,-3.283062,0.126300,-1.813929,-3.746214,-7.115785,6.768236,-0.793033,3.847289,3.850209,-4.518875,5.912057,2.725792,-5.018826,-8.269236,-2.845818,-8.220805,-4.339728,-9.454178,-2.391524,-9.959027,8.010559,3.222685,9.576824,4.197874,0.274362,-0.504221,-5.591542,-5.404710,-1.208487,-3.204655,-2.005720,-8.666518,-7.750114,0.262551,0.458188,4.950212,2.167482,-7.600960,-0.193788,-7.165704,3.548672,-6.033977,-4.405679,-0.839766,3.023877,3.027104,-4.222125,-1.280843,5.365739,2.811118,0.991563,9.236699,-2.893287,-3.525379,2.077966,-6.152482,4.993160,9.468027,0.812864,-6.332571,-2.034377,6.706271,3.519768,9.542809,1.274992,5.821524,-6.038834,-8.598994,-2.821814,9.330250,8.312628,1.164704,-2.746064,-1.136693,-6.872597,-5.197543,2.219272,2.418512,4.149517,6.615982,-0.881976,6.849773,5.482089,9.413269,-9.648201,6.954593,-7.250369,-1.622759,3.101816,-1.715410,-6.099158,-0.110487,-3.204911,-8.149596,4.341622,5.015061,0.644904,-8.400687,-7.474904,-1.801371,-9.309750,-9.302355,-8.239416,0.579475,5.013703,-3.016097,-7.703369,6.966742,-3.843136,-8.969224,9.120770,6.733480,-3.366027,8.417446,1.864607,-8.676955,-9.926350,-7.831919,5.613664,-4.316295,-3.250803,-2.611192,-9.972501,8.386947,-6.576865,-2.451311,0.197549,-0.630629,4.222553,-4.585276,5.362505,-1.569504,6.474104,6.275478,-7.607095,-5.481796,-2.415716,4.510764,-7.304993,7.465652,-9.513840,3.137219,-1.376952,0.891239,4.626793,-8.373343,-4.810557,-5.265235,-7.549698,3.824952,-4.137794,5.988387,-8.648399,3.570264,0.018180,1.504424,-5.639889,-6.639677,-4.210665,-5.991414,1.658882,2.019562,6.506048,-6.672150,8.860778,-5.854106,4.000367,-9.763025,-2.164967,-0.015154,-6.968632,9.018112,-8.489246,9.525509,8.310123,8.619247,4.200742,0.184297,-9.420067,-1.001921,1.578848,2.156051,-1.861389,-6.932303,7.284428,-9.402097,0.616348,-6.463044,5.904008,-3.038454,3.978627,-6.980719,-0.349782,0.671777,5.676355,-8.220126,-4.055257,0.599044,2.528394,3.513771,-1.993228,3.688381,7.005031,-5.753069,6.778218,-3.286898,-5.929080,4.090390,-9.565235,5.673445,-5.012164], dtype = "float32")#candidate|576|(1470,)|const|float32
call_574 = relay.TupleGetItem(func_231_call(relay.reshape(var_575.astype('float64'), [10, 6, 5]), relay.reshape(var_575.astype('float64'), [10, 6, 5]), relay.reshape(const_576.astype('float32'), [1470,]), ), 3)
call_577 = relay.TupleGetItem(func_235_call(relay.reshape(var_575.astype('float64'), [10, 6, 5]), relay.reshape(var_575.astype('float64'), [10, 6, 5]), relay.reshape(const_576.astype('float32'), [1470,]), ), 3)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
call_578 = func_78_call(relay.reshape(const_576.astype('float32'), [14, 7, 15]))
call_579 = func_78_call(relay.reshape(const_576.astype('float32'), [14, 7, 15]))
func_535_call = mod.get_global_var('func_535')
func_538_call = mutated_mod.get_global_var('func_538')
call_581 = relay.TupleGetItem(func_535_call(relay.reshape(call_574.astype('float32'), [14, 7, 15]), relay.reshape(var_575.astype('float64'), [300,]), ), 3)
call_582 = relay.TupleGetItem(func_538_call(relay.reshape(call_574.astype('float32'), [14, 7, 15]), relay.reshape(var_575.astype('float64'), [300,]), ), 3)
func_360_call = mod.get_global_var('func_360')
func_363_call = mutated_mod.get_global_var('func_363')
var_584 = relay.var("var_584", dtype = "float32", shape = (72, 1))#candidate|584|(72, 1)|var|float32
call_583 = relay.TupleGetItem(func_360_call(relay.reshape(var_584.astype('float32'), [6, 2, 6])), 0)
call_585 = relay.TupleGetItem(func_363_call(relay.reshape(var_584.astype('float32'), [6, 2, 6])), 0)
output = relay.Tuple([bop_566,uop_572,call_574,var_575,const_576,call_578,call_581,call_583,var_584,])
output2 = relay.Tuple([bop_566,uop_572,call_577,var_575,const_576,call_579,call_582,call_585,var_584,])
func_599 = relay.Function([var_564,var_565,var_575,var_584,], output)
mod['func_599'] = func_599
mod = relay.transform.InferType()(mod)
mutated_mod['func_599'] = func_599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_599_call = mutated_mod.get_global_var('func_599')
var_601 = relay.var("var_601", dtype = "uint64", shape = (13, 5, 1))#candidate|601|(13, 5, 1)|var|uint64
var_602 = relay.var("var_602", dtype = "uint64", shape = (13, 5, 9))#candidate|602|(13, 5, 9)|var|uint64
var_603 = relay.var("var_603", dtype = "float64", shape = (300,))#candidate|603|(300,)|var|float64
var_604 = relay.var("var_604", dtype = "float32", shape = (72, 1))#candidate|604|(72, 1)|var|float32
call_600 = func_599_call(var_601,var_602,var_603,var_604,)
output = call_600
func_605 = relay.Function([var_601,var_602,var_603,var_604,], output)
mutated_mod['func_605'] = func_605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_692 = func_555_call()
call_693 = func_555_call()
output = relay.Tuple([call_692,])
output2 = relay.Tuple([call_693,])
func_695 = relay.Function([], output)
mod['func_695'] = func_695
mod = relay.transform.InferType()(mod)
mutated_mod['func_695'] = func_695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mutated_mod.get_global_var('func_695')
call_696 = func_695_call()
output = call_696
func_697 = relay.Function([], output)
mutated_mod['func_697'] = func_697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_734 = relay.TupleGetItem(func_422_call(), 0)
call_735 = relay.TupleGetItem(func_423_call(), 0)
output = relay.Tuple([call_734,])
output2 = relay.Tuple([call_735,])
func_742 = relay.Function([], output)
mod['func_742'] = func_742
mod = relay.transform.InferType()(mod)
mutated_mod['func_742'] = func_742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_742_call = mutated_mod.get_global_var('func_742')
call_743 = func_742_call()
output = call_743
func_744 = relay.Function([], output)
mutated_mod['func_744'] = func_744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_755 = relay.var("var_755", dtype = "uint32", shape = (13, 12, 3))#candidate|755|(13, 12, 3)|var|uint32
const_756 = relay.const([[[9,3,-5],[10,9,-9],[7,-5,-1],[-5,-10,-4],[-10,8,-10],[-7,6,8],[8,-9,2],[-3,-3,-7],[1,-1,6],[8,10,6],[-7,-10,5],[-8,-6,2]],[[-6,4,-3],[-4,-4,-7],[-4,10,3],[3,-9,2],[-1,-6,7],[4,3,5],[-10,8,7],[8,-10,-5],[-4,-2,-3],[6,-7,2],[10,-9,3],[-7,-4,1]],[[-2,-3,7],[7,8,2],[-4,-7,1],[-6,5,-6],[-9,5,9],[5,5,6],[-5,1,10],[5,4,-6],[-1,-7,-10],[-9,5,-4],[-10,-8,4],[4,4,-5]],[[1,-10,-1],[-1,1,-1],[3,9,3],[-4,2,-7],[5,8,-9],[6,2,-8],[-2,-3,8],[-5,-3,-1],[-8,7,-9],[8,8,-3],[-8,8,5],[-1,4,2]],[[-10,-5,1],[-9,-2,-1],[-3,-5,5],[-7,-7,3],[10,10,1],[-7,9,4],[-9,1,1],[2,-10,-4],[-7,8,-7],[-7,-6,-2],[9,8,3],[-9,6,4]],[[3,1,5],[8,8,5],[8,2,-8],[-5,-6,-8],[6,3,-1],[-1,-5,8],[10,9,4],[3,7,-10],[-10,6,7],[-6,3,-6],[8,-9,-2],[10,-2,1]],[[-4,-10,8],[8,6,-5],[-9,-5,-2],[-7,10,1],[2,5,-2],[-2,1,-9],[-3,-10,-2],[1,7,6],[-8,-10,-10],[2,4,-7],[-6,-3,2],[-5,-1,-5]],[[9,4,3],[7,-2,2],[2,5,-1],[-4,-3,3],[1,2,4],[-2,-5,-1],[8,-10,7],[-4,5,-6],[-4,-3,-9],[2,-6,-1],[4,-5,2],[7,-6,-10]],[[-8,3,-6],[10,-1,-8],[-3,10,7],[-2,-7,-1],[-3,-8,-5],[3,5,-7],[-8,2,1],[-10,10,-4],[3,9,-2],[-8,-9,5],[7,7,7],[4,2,3]],[[-3,8,4],[2,7,-7],[2,-6,-2],[-6,1,10],[9,3,7],[5,-10,-5],[6,-2,-9],[-3,-4,3],[-2,-2,2],[2,3,3],[3,2,-2],[10,6,-2]],[[-2,-5,6],[2,-7,-10],[6,10,-9],[-1,-2,6],[2,3,-9],[-3,2,7],[8,-3,-4],[3,6,1],[-10,-6,7],[-8,9,9],[8,8,1],[-5,3,-3]],[[-2,-6,4],[4,2,-6],[-5,10,-10],[1,-2,-10],[-2,-2,-5],[-1,5,-5],[-5,-3,-10],[-5,-7,-8],[-3,-5,-6],[10,9,3],[8,1,9],[2,-7,-8]],[[6,-4,8],[10,-1,-10],[1,4,-1],[4,-1,3],[-4,-4,2],[10,7,2],[7,9,-6],[-4,-9,7],[-5,7,7],[-6,9,-4],[1,-10,7],[6,-4,2]]], dtype = "uint32")#candidate|756|(13, 12, 3)|const|uint32
bop_757 = relay.greater_equal(var_755.astype('bool'), relay.reshape(const_756.astype('bool'), relay.shape_of(var_755))) # shape=(13, 12, 3)
output = relay.Tuple([bop_757,])
output2 = relay.Tuple([bop_757,])
func_769 = relay.Function([var_755,], output)
mod['func_769'] = func_769
mod = relay.transform.InferType()(mod)
var_770 = relay.var("var_770", dtype = "uint32", shape = (13, 12, 3))#candidate|770|(13, 12, 3)|var|uint32
output = func_769(var_770)
func_771 = relay.Function([var_770], output)
mutated_mod['func_771'] = func_771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_776 = func_555_call()
call_777 = func_555_call()
func_360_call = mod.get_global_var('func_360')
func_363_call = mutated_mod.get_global_var('func_363')
const_779 = relay.const([-4.029163,-4.996486,-6.226252,2.122998,-9.540657,-0.900720,7.253313,6.120290,0.420836,-7.524373,6.459291,4.268089,-3.055662,7.845577,-3.085816,7.689616,-2.502523,5.045811,-6.869675,-9.765263,1.738160,9.654708,-5.466266,2.190463,8.515189,4.997965,0.520336,9.110600,6.585914,1.095834,7.199110,-1.382206,-2.125088,1.955307,3.088570,-4.975223,-2.324991,4.248705,-7.522634,-1.717298,-9.465040,-4.721479,-8.627590,6.840404,-7.414181,6.696724,-8.933929,-5.344348,-4.993833,5.424124,6.004227,-8.225253,-8.858221,-5.505702,-7.641081,-3.930665,6.737721,4.745056,-8.062610,7.043742,4.300927,2.436658,-6.275624,8.396510,9.656701,-6.077845,-6.973333,-4.977706,0.967188,9.502512,8.235613,-4.840423], dtype = "float32")#candidate|779|(72,)|const|float32
call_778 = relay.TupleGetItem(func_360_call(relay.reshape(const_779.astype('float32'), [6, 2, 6])), 0)
call_780 = relay.TupleGetItem(func_363_call(relay.reshape(const_779.astype('float32'), [6, 2, 6])), 0)
uop_784 = relay.cos(call_776.astype('float64')) # shape=(14, 7, 15)
uop_786 = relay.cos(call_777.astype('float64')) # shape=(14, 7, 15)
func_458_call = mod.get_global_var('func_458')
func_461_call = mutated_mod.get_global_var('func_461')
var_790 = relay.var("var_790", dtype = "int64", shape = ())#candidate|790|()|var|int64
var_791 = relay.var("var_791", dtype = "int64", shape = (96,))#candidate|791|(96,)|var|int64
call_789 = relay.TupleGetItem(func_458_call(relay.reshape(var_790.astype('int64'), []), relay.reshape(var_791.astype('int64'), [12, 8, 1]), ), 0)
call_792 = relay.TupleGetItem(func_461_call(relay.reshape(var_790.astype('int64'), []), relay.reshape(var_791.astype('int64'), [12, 8, 1]), ), 0)
func_769_call = mod.get_global_var('func_769')
func_771_call = mutated_mod.get_global_var('func_771')
var_795 = relay.var("var_795", dtype = "uint32", shape = (468,))#candidate|795|(468,)|var|uint32
call_794 = relay.TupleGetItem(func_769_call(relay.reshape(var_795.astype('uint32'), [13, 12, 3])), 0)
call_796 = relay.TupleGetItem(func_771_call(relay.reshape(var_795.astype('uint32'), [13, 12, 3])), 0)
func_742_call = mod.get_global_var('func_742')
func_744_call = mutated_mod.get_global_var('func_744')
call_802 = relay.TupleGetItem(func_742_call(), 0)
call_803 = relay.TupleGetItem(func_744_call(), 0)
output = relay.Tuple([call_778,const_779,uop_784,call_789,var_790,var_791,call_794,var_795,call_802,])
output2 = relay.Tuple([call_780,const_779,uop_786,call_792,var_790,var_791,call_796,var_795,call_803,])
func_806 = relay.Function([var_790,var_791,var_795,], output)
mod['func_806'] = func_806
mod = relay.transform.InferType()(mod)
var_807 = relay.var("var_807", dtype = "int64", shape = ())#candidate|807|()|var|int64
var_808 = relay.var("var_808", dtype = "int64", shape = (96,))#candidate|808|(96,)|var|int64
var_809 = relay.var("var_809", dtype = "uint32", shape = (468,))#candidate|809|(468,)|var|uint32
output = func_806(var_807,var_808,var_809,)
func_810 = relay.Function([var_807,var_808,var_809,], output)
mutated_mod['func_810'] = func_810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_847 = relay.TupleGetItem(func_695_call(), 0)
call_848 = relay.TupleGetItem(func_697_call(), 0)
const_852 = relay.const([[[-2,-4,9,-5,6,3,1,-8,7,8,-9,1,4,-5,-4],[-9,-1,7,10,6,6,-9,-9,-10,8,-8,-6,7,6,-5],[4,-9,6,6,9,-5,-9,-10,1,7,-9,-10,-5,-5,8],[1,3,-6,7,-8,-4,-1,-9,-3,2,-4,4,-8,-9,-8],[-2,-9,-1,7,-9,-4,7,-7,-6,-9,-10,-1,-6,-3,-3],[-2,-4,-1,9,2,-10,10,2,8,-10,8,1,-6,8,2],[4,6,6,-10,-3,3,-1,-5,-2,10,-9,2,8,4,9]],[[9,1,-9,3,2,-4,-1,9,7,-6,-5,-5,-4,-7,1],[4,9,-7,4,8,8,-2,8,-7,-7,1,-10,9,1,2],[-3,-4,-2,1,-1,-4,2,7,9,4,-7,-8,-1,-8,-4],[-4,7,-9,9,6,10,6,-6,-1,-7,3,-2,-8,7,-5],[8,-7,-9,5,8,-5,-1,-10,4,-6,-8,4,7,1,9],[4,-7,-2,9,2,9,6,8,9,-7,2,3,3,7,-3],[-2,-4,7,-7,5,6,7,-6,-7,-7,-1,10,-5,3,9]],[[-8,2,-3,-2,-7,-10,-1,-6,3,3,8,1,7,2,-7],[3,-3,-9,-5,-5,-8,-7,3,7,7,-6,-1,4,2,-7],[5,6,6,-4,-8,3,-5,6,-4,-2,2,-5,-6,2,-4],[-8,-8,9,-2,5,2,-8,8,5,-9,-2,-6,6,7,1],[-5,-10,-3,-1,2,7,-5,2,-2,-7,5,-2,8,2,-5],[5,-2,-7,4,4,-3,1,-7,-3,-10,-10,10,6,1,1],[3,-8,-3,-1,-2,-2,-5,4,5,-1,-8,10,4,-7,-5]],[[2,6,-2,6,5,-8,4,-9,-5,8,9,-8,5,6,10],[-10,-9,6,-7,-7,-2,-1,-8,7,-7,1,10,-7,-5,8],[-6,10,9,9,8,-8,2,-7,10,-6,-8,4,-8,6,4],[9,-4,-5,4,-7,-9,1,6,2,3,-2,-4,-10,7,-6],[-9,1,3,-6,-10,-7,2,2,9,4,1,2,4,8,9],[-2,-6,-4,9,-5,-7,-9,2,6,5,-3,6,2,9,-3],[3,-9,-8,-7,6,-7,-4,-3,8,-8,-9,-9,-6,7,10]],[[-6,-5,1,9,-2,2,8,-6,4,10,6,3,-4,-8,-6],[1,3,-8,-1,4,2,3,-4,2,-4,2,-2,9,5,9],[8,-7,5,-5,2,10,-7,-3,5,-9,-8,2,7,5,9],[-7,-3,-7,-8,5,-2,-4,-1,10,-4,6,1,9,-7,9],[-8,4,1,-10,-2,8,3,4,1,-9,-2,-7,2,10,10],[-7,8,-10,3,-5,-6,-10,9,2,-8,4,-7,-5,-7,-10],[4,7,-1,10,-8,8,10,-4,1,-10,8,-1,7,4,8]],[[-2,5,6,-10,-1,-1,-4,-8,3,-4,-10,-9,7,-4,-9],[-7,9,-4,-10,-1,-5,-2,7,-7,9,3,4,-8,-7,4],[-7,9,-4,10,9,7,-8,-3,8,5,-3,-9,-2,10,1],[7,4,1,1,4,-5,-2,-1,-7,-6,8,-5,-8,4,-8],[3,-3,1,7,-9,2,3,6,10,6,-8,-7,3,-1,7],[-4,-3,7,2,8,4,-5,3,-4,-5,-10,5,7,5,5],[-7,2,5,-6,3,10,3,4,-7,2,9,6,-1,1,2]],[[10,6,-1,-1,-10,10,-10,5,2,4,-3,-6,-6,5,3],[-5,9,4,2,7,-10,4,-2,7,1,6,4,-5,8,-8],[-7,3,4,-6,-5,-10,9,-6,-1,7,-4,-5,4,9,-10],[-3,9,3,-5,10,3,4,4,-5,3,-6,-4,3,1,-1],[8,9,4,-3,-2,-9,-2,7,3,10,5,-2,9,8,-9],[2,-7,-7,5,-9,4,4,-1,2,4,-1,-10,-5,-10,2],[5,7,6,-2,5,-10,9,4,4,7,10,4,-3,-2,3]],[[4,-7,-2,6,-6,5,-9,9,-6,1,-8,3,4,2,-1],[-9,4,6,1,-10,-5,2,-1,9,-3,-3,3,2,2,-5],[-8,9,-4,-8,9,3,-2,7,-5,1,9,8,1,-1,-5],[-7,-5,-7,-1,6,-2,3,-4,-9,9,7,-5,-9,-9,9],[-1,7,5,4,8,6,-7,-7,-1,1,6,7,-5,8,-1],[7,5,5,-7,-8,9,8,4,6,-2,5,-7,9,-3,7],[8,-3,6,-5,-8,-2,6,2,5,-5,-7,3,5,5,3]],[[-9,5,-3,1,-6,10,4,7,-4,-4,-7,9,4,-6,-1],[2,-9,3,8,2,3,-3,6,4,2,10,10,1,-5,-2],[5,8,1,-6,7,4,-7,-8,-6,-6,-2,-8,-10,-6,-4],[-3,4,-3,-5,5,-6,-4,5,10,6,-10,4,1,-6,9],[5,9,7,4,2,6,6,10,3,5,-6,8,-2,4,-3],[-8,-6,6,10,5,-9,9,-2,9,3,-3,-10,8,7,1],[-6,-8,7,-6,-6,-10,-4,10,-2,-1,2,3,-4,-5,-5]],[[-3,-5,-3,-7,-1,4,5,2,5,-4,-8,-10,-10,4,-5],[10,-9,-1,7,-5,-8,-10,8,10,-8,8,1,-9,-10,6],[3,7,3,6,3,-8,2,-8,10,2,10,-5,5,4,6],[-5,8,-1,-10,-10,-10,-8,8,1,-1,7,-2,-4,6,-6],[-10,1,3,-8,1,-7,-8,-5,8,4,10,1,-2,1,-3],[-10,8,-10,7,5,5,1,5,-10,4,2,-3,-8,-10,-5],[-5,-5,-10,5,10,-7,10,-10,6,9,2,-5,-8,4,-1]],[[-8,-5,3,-7,-5,8,4,10,6,4,5,9,-4,3,5],[-6,2,6,-1,4,2,5,-2,1,-8,-3,2,-3,1,4],[-9,8,6,-7,-7,-2,-4,6,-2,2,-2,5,9,10,-3],[3,-9,-3,5,1,-2,-4,1,-2,4,5,9,10,9,7],[6,-5,-10,-9,10,-10,4,1,-3,8,-5,1,-2,-3,3],[-4,9,-4,-8,6,7,-4,-2,-6,-6,-10,7,6,-4,-2],[-8,-8,8,3,-6,-5,9,-6,2,5,8,10,1,-7,-6]],[[4,7,-8,3,-2,4,-6,7,-3,-3,9,-6,-7,9,-3],[-4,9,-8,-8,-2,-4,6,-9,-1,3,3,-5,3,7,5],[8,-7,-1,-8,8,7,-6,1,7,-2,-3,-4,-5,10,10],[-3,5,9,-7,-6,7,-6,-8,2,6,-8,8,-9,3,-8],[7,3,-1,1,-9,2,10,-3,-4,6,9,-3,9,2,3],[5,1,-3,10,2,-9,-9,4,-9,-7,2,-10,4,7,9],[6,-10,-2,9,7,5,-6,4,8,-10,-8,-2,-7,8,-2]],[[4,3,-5,8,-8,7,-10,-2,5,-10,7,-7,-8,7,8],[7,7,5,4,8,-8,-9,-10,-5,-9,9,-4,-6,1,-10],[-3,3,4,4,3,2,-8,10,-10,-10,9,-6,8,-7,5],[9,4,-10,2,-8,7,-6,3,-1,-10,-3,-2,6,-4,8],[8,-7,-1,-1,-10,-6,1,2,-8,6,-3,1,-9,-7,7],[2,5,10,-8,-9,-9,7,-8,3,-9,-8,-7,2,-3,9],[-4,-9,-2,-5,9,-9,10,10,5,6,10,10,10,-3,9]],[[-6,3,-10,-4,5,10,4,2,-7,-7,2,-4,7,2,-10],[-2,-2,2,9,-8,7,-10,7,5,8,-7,-1,3,-7,-8],[6,3,-6,-1,-9,1,8,-9,3,8,-7,-4,-8,-8,1],[-3,-5,-4,-1,8,-3,-10,-10,5,4,-7,-10,3,7,2],[7,-3,-2,-5,-2,-3,-2,6,-3,-5,6,-1,-2,-4,-6],[-7,2,7,-8,4,-7,-7,-1,1,5,2,8,10,6,1],[10,4,1,-5,6,-1,8,2,-10,-5,8,10,9,-8,-4]]], dtype = "int16")#candidate|852|(14, 7, 15)|const|int16
bop_853 = relay.power(call_847.astype('float32'), relay.reshape(const_852.astype('float32'), relay.shape_of(call_847))) # shape=(14, 7, 15)
bop_856 = relay.power(call_848.astype('float32'), relay.reshape(const_852.astype('float32'), relay.shape_of(call_848))) # shape=(14, 7, 15)
bop_864 = relay.greater_equal(bop_853.astype('bool'), relay.reshape(const_852.astype('bool'), relay.shape_of(bop_853))) # shape=(14, 7, 15)
bop_867 = relay.greater_equal(bop_856.astype('bool'), relay.reshape(const_852.astype('bool'), relay.shape_of(bop_856))) # shape=(14, 7, 15)
func_360_call = mod.get_global_var('func_360')
func_363_call = mutated_mod.get_global_var('func_363')
var_869 = relay.var("var_869", dtype = "float32", shape = (72,))#candidate|869|(72,)|var|float32
call_868 = relay.TupleGetItem(func_360_call(relay.reshape(var_869.astype('float32'), [6, 2, 6])), 0)
call_870 = relay.TupleGetItem(func_363_call(relay.reshape(var_869.astype('float32'), [6, 2, 6])), 0)
bop_876 = relay.subtract(const_852.astype('uint8'), relay.reshape(bop_853.astype('uint8'), relay.shape_of(const_852))) # shape=(14, 7, 15)
bop_879 = relay.subtract(const_852.astype('uint8'), relay.reshape(bop_856.astype('uint8'), relay.shape_of(const_852))) # shape=(14, 7, 15)
uop_883 = relay.sinh(bop_853.astype('float32')) # shape=(14, 7, 15)
uop_885 = relay.sinh(bop_856.astype('float32')) # shape=(14, 7, 15)
var_905 = relay.var("var_905", dtype = "int16", shape = (14, 7, 15))#candidate|905|(14, 7, 15)|var|int16
bop_906 = relay.floor_mod(call_847.astype('float32'), relay.reshape(var_905.astype('float32'), relay.shape_of(call_847))) # shape=(14, 7, 15)
bop_909 = relay.floor_mod(call_848.astype('float32'), relay.reshape(var_905.astype('float32'), relay.shape_of(call_848))) # shape=(14, 7, 15)
uop_910 = relay.rsqrt(uop_883.astype('float32')) # shape=(14, 7, 15)
uop_912 = relay.rsqrt(uop_885.astype('float32')) # shape=(14, 7, 15)
uop_923 = relay.cosh(uop_883.astype('float32')) # shape=(14, 7, 15)
uop_925 = relay.cosh(uop_885.astype('float32')) # shape=(14, 7, 15)
func_599_call = mod.get_global_var('func_599')
func_605_call = mutated_mod.get_global_var('func_605')
var_928 = relay.var("var_928", dtype = "uint64", shape = (65,))#candidate|928|(65,)|var|uint64
var_929 = relay.var("var_929", dtype = "uint64", shape = (585,))#candidate|929|(585,)|var|uint64
const_930 = relay.const([8.179382,-8.937537,-9.962069,1.472691,-4.765195,-0.738026,-2.481352,-9.890593,6.125177,-4.461351,2.591133,5.484903,0.043766,-8.284926,-0.701264,4.393580,1.729578,6.171136,0.947989,-8.188855,8.221759,2.747430,4.140455,0.865731,-4.107539,5.875117,7.413322,5.100136,1.862166,1.274383,3.762814,-3.850540,8.490681,-2.677929,-1.883491,-4.256287,9.609818,5.196085,3.506392,6.295245,6.845979,4.796519,0.497944,3.219136,5.187667,-3.692050,-8.076914,1.451777,-6.546638,-9.253646,-5.348204,-0.415045,-6.049358,8.898258,3.514428,4.903623,8.641758,7.587751,5.869593,3.981595,-4.347115,8.172777,-7.702467,-6.066398,6.020595,-9.697165,5.007543,0.776525,-8.902580,0.769185,-0.584629,-3.394690,-7.520710,-0.033723,7.004538,-3.087424,-5.683778,-8.519307,-4.551191,4.193554,9.005003,-2.012666,2.897968,-2.243672,-7.242692,3.823386,-4.323812,-3.057895,8.688984,-0.137388,-3.989092,-2.032638,-5.806726,-9.332255,2.639940,-7.759139,2.880432,9.236706,6.478880,-1.120225,-6.382695,-9.398157,-3.794883,4.860857,4.067817,-4.931841,-3.275431,-9.624225,8.435451,1.317655,3.837267,7.879751,-2.432596,3.992487,-9.101201,8.966406,2.971400,9.574952,-1.648395,4.045281,-8.295198,-3.851295,3.152251,6.870122,1.596480,6.753750,9.099528,8.410204,-9.439846,2.005691,-1.420534,2.241015,-9.682210,4.164406,8.983841,-4.124690,-9.272314,-1.267267,-3.880736,-1.760162,-1.395089,-4.691587,-5.011561,-9.219856,-1.864990,5.210767,-1.170504,-4.102151,5.900867,-7.619498,-0.840512,-1.142513,8.250079,-0.669006,2.825356,6.200560,9.964559,4.646754,5.118625,-3.456345,9.427321,-0.259328,-3.056827,-4.777756,4.589181,-8.177530,6.746465,-0.493151,7.521668,-4.709181,-0.765075,-8.145274,7.841683,8.204100,2.455753,-3.295605,-6.136177,6.182932,8.775425,-3.618033,-1.489495,2.602110,-0.792775,-5.176855,-9.893680,-5.153988,-1.367058,-7.131337,-4.611790,-8.853686,1.519090,-4.235872,9.893861,-3.006993,4.399040,1.803576,3.493596,7.228633,1.336387,3.221698,3.852671,-5.650243,5.885875,4.387763,-4.897285,9.714212,5.498327,5.351317,0.798777,8.561369,6.734203,-0.483173,7.109687,-4.707683,1.574012,3.947182,7.344266,-5.265461,-2.241844,-0.795412,3.125477,9.094874,5.757489,-9.470343,-7.670454,7.624235,-7.826934,1.674864,8.048492,-8.579687,2.412928,3.231316,7.649406,1.620558,-8.565297,7.504841,-5.988136,-0.927114,1.080976,-5.749416,-4.364399,1.286493,-3.243733,9.760021,-5.590427,-7.941709,7.306203,-0.838227,-3.337422,-5.051025,6.125877,-8.202043,-4.619758,8.916357,3.981176,-8.278080,1.312264,8.902156,-4.141639,-6.306622,-5.150553,-0.089621,-8.079088,8.770578,2.499441,6.931323,6.954475,-5.712946,-7.863662,4.678410,2.959549,-3.184757,-7.451198,-8.185164,-2.292654,6.775785,-7.548164,-3.353237,3.150417,6.778280,4.560860,1.816820,-5.971980,0.738958,-7.423978,2.106983,-9.320632,-6.671931,8.495866,3.109665,0.403933,-3.818504,-4.062418,1.752329,-7.068318,-7.487799,4.106012,-3.014426,8.420449,2.588304], dtype = "float64")#candidate|930|(300,)|const|float64
call_927 = relay.TupleGetItem(func_599_call(relay.reshape(var_928.astype('uint64'), [13, 5, 1]), relay.reshape(var_929.astype('uint64'), [13, 5, 9]), relay.reshape(const_930.astype('float64'), [300,]), relay.reshape(var_869.astype('float32'), [72, 1]), ), 6)
call_931 = relay.TupleGetItem(func_605_call(relay.reshape(var_928.astype('uint64'), [13, 5, 1]), relay.reshape(var_929.astype('uint64'), [13, 5, 9]), relay.reshape(const_930.astype('float64'), [300,]), relay.reshape(var_869.astype('float32'), [72, 1]), ), 6)
output = relay.Tuple([bop_864,call_868,var_869,bop_876,bop_906,uop_910,uop_923,call_927,var_928,var_929,const_930,])
output2 = relay.Tuple([bop_867,call_870,var_869,bop_879,bop_909,uop_912,uop_925,call_931,var_928,var_929,const_930,])
func_933 = relay.Function([var_869,var_905,var_928,var_929,], output)
mod['func_933'] = func_933
mod = relay.transform.InferType()(mod)
var_934 = relay.var("var_934", dtype = "float32", shape = (72,))#candidate|934|(72,)|var|float32
var_935 = relay.var("var_935", dtype = "int16", shape = (14, 7, 15))#candidate|935|(14, 7, 15)|var|int16
var_936 = relay.var("var_936", dtype = "uint64", shape = (65,))#candidate|936|(65,)|var|uint64
var_937 = relay.var("var_937", dtype = "uint64", shape = (585,))#candidate|937|(585,)|var|uint64
output = func_933(var_934,var_935,var_936,var_937,)
func_938 = relay.Function([var_934,var_935,var_936,var_937,], output)
mutated_mod['func_938'] = func_938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_940 = func_555_call()
call_941 = func_555_call()
var_955 = relay.var("var_955", dtype = "int16", shape = (14, 7, 15))#candidate|955|(14, 7, 15)|var|int16
bop_956 = relay.left_shift(call_940.astype('uint64'), relay.reshape(var_955.astype('uint64'), relay.shape_of(call_940))) # shape=(14, 7, 15)
bop_959 = relay.left_shift(call_941.astype('uint64'), relay.reshape(var_955.astype('uint64'), relay.shape_of(call_941))) # shape=(14, 7, 15)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_962 = func_555_call()
call_963 = func_555_call()
output = relay.Tuple([bop_956,call_962,])
output2 = relay.Tuple([bop_959,call_963,])
func_967 = relay.Function([var_955,], output)
mod['func_967'] = func_967
mod = relay.transform.InferType()(mod)
mutated_mod['func_967'] = func_967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_968 = relay.var("var_968", dtype = "int16", shape = (14, 7, 15))#candidate|968|(14, 7, 15)|var|int16
func_967_call = mutated_mod.get_global_var('func_967')
call_969 = func_967_call(var_968)
output = call_969
func_970 = relay.Function([var_968], output)
mutated_mod['func_970'] = func_970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_975 = relay.var("var_975", dtype = "float64", shape = (7, 13, 14))#candidate|975|(7, 13, 14)|var|float64
uop_976 = relay.tan(var_975.astype('float64')) # shape=(7, 13, 14)
uop_983 = relay.acosh(uop_976.astype('float32')) # shape=(7, 13, 14)
output = uop_983
output2 = uop_983
func_989 = relay.Function([var_975,], output)
mod['func_989'] = func_989
mod = relay.transform.InferType()(mod)
var_990 = relay.var("var_990", dtype = "float64", shape = (7, 13, 14))#candidate|990|(7, 13, 14)|var|float64
output = func_989(var_990)
func_991 = relay.Function([var_990], output)
mutated_mod['func_991'] = func_991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_999 = relay.TupleGetItem(func_695_call(), 0)
call_1000 = relay.TupleGetItem(func_697_call(), 0)
uop_1021 = relay.tan(call_999.astype('float64')) # shape=(14, 7, 15)
uop_1023 = relay.tan(call_1000.astype('float64')) # shape=(14, 7, 15)
output = uop_1021
output2 = uop_1023
func_1026 = relay.Function([], output)
mod['func_1026'] = func_1026
mod = relay.transform.InferType()(mod)
output = func_1026()
func_1027 = relay.Function([], output)
mutated_mod['func_1027'] = func_1027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_1028 = func_555_call()
call_1029 = func_555_call()
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_1043 = func_555_call()
call_1044 = func_555_call()
func_360_call = mod.get_global_var('func_360')
func_363_call = mutated_mod.get_global_var('func_363')
var_1048 = relay.var("var_1048", dtype = "float32", shape = (72,))#candidate|1048|(72,)|var|float32
call_1047 = relay.TupleGetItem(func_360_call(relay.reshape(var_1048.astype('float32'), [6, 2, 6])), 0)
call_1049 = relay.TupleGetItem(func_363_call(relay.reshape(var_1048.astype('float32'), [6, 2, 6])), 0)
bop_1052 = relay.bitwise_xor(call_1047.astype('int64'), relay.reshape(var_1048.astype('int64'), relay.shape_of(call_1047))) # shape=(6, 2, 6)
bop_1055 = relay.bitwise_xor(call_1049.astype('int64'), relay.reshape(var_1048.astype('int64'), relay.shape_of(call_1049))) # shape=(6, 2, 6)
output = relay.Tuple([call_1028,call_1043,bop_1052,])
output2 = relay.Tuple([call_1029,call_1044,bop_1055,])
func_1060 = relay.Function([var_1048,], output)
mod['func_1060'] = func_1060
mod = relay.transform.InferType()(mod)
var_1061 = relay.var("var_1061", dtype = "float32", shape = (72,))#candidate|1061|(72,)|var|float32
output = func_1060(var_1061)
func_1062 = relay.Function([var_1061], output)
mutated_mod['func_1062'] = func_1062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_1113 = relay.TupleGetItem(func_695_call(), 0)
call_1114 = relay.TupleGetItem(func_697_call(), 0)
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
call_1128 = relay.TupleGetItem(func_967_call(relay.reshape(call_1113.astype('int16'), [14, 7, 15])), 0)
call_1129 = relay.TupleGetItem(func_970_call(relay.reshape(call_1113.astype('int16'), [14, 7, 15])), 0)
func_599_call = mod.get_global_var('func_599')
func_605_call = mutated_mod.get_global_var('func_605')
var_1132 = relay.var("var_1132", dtype = "uint64", shape = (65,))#candidate|1132|(65,)|var|uint64
const_1133 = relay.const([-7,-7,-8,-4,5,-5,-6,-8,-5,-10,-10,2,-8,2,-1,5,9,-10,-9,3,4,2,2,9,-7,-2,9,-4,1,6,-5,9,-3,3,3,-5,2,7,9,1,-6,-2,7,1,-2,-1,7,2,-6,1,-9,-8,-4,-6,10,9,-10,-8,-9,-8,-7,-1,-6,-4,8,-4,2,9,-7,-10,-2,-1,-4,-1,2,-5,6,-5,8,9,-7,-2,-4,-4,4,8,-5,-8,9,-1,1,-2,-3,-1,6,-5,-2,-3,-8,9,-3,7,7,-6,-9,9,-4,-6,6,7,7,7,9,-10,-7,10,-8,-7,-6,-3,-9,-2,-1,-9,6,-1,8,-6,9,5,-5,-5,3,7,-6,-2,-1,9,3,-9,4,5,9,10,-5,4,-1,2,3,-3,10,-6,-2,-2,-3,-7,2,-10,1,-7,-6,-6,-1,10,8,5,-1,-10,5,9,5,-4,7,-6,-3,-7,-5,5,1,-4,-3,8,9,8,-10,-4,4,-1,-2,-9,1,6,-9,6,8,-3,-8,-4,1,-2,10,5,4,5,5,2,10,-4,9,-8,-7,-8,4,-3,-6,5,1,-10,-7,2,8,8,4,-6,-1,1,-7,-4,-3,-3,1,4,9,-6,6,-10,4,2,-9,2,-5,1,-4,-3,3,-7,-6,-6,-3,-3,10,3,1,-3,-6,-2,10,10,-10,2,-1,-6,7,1,-4,-9,8,-10,9,-9,10,3,7,-3,-8,-8,3,-5,-6,2,-3,-6,-5,9,-2,9,2,-10,-9,5,10,-6,7,-3,10,-5,-6,-3,9,-5,4,3,-9,-6,7,-8,3,10,-5,-3,6,-9,8,5,6,8,-5,-8,5,-5,-3,9,-6,6,-2,8,8,2,9,-3,7,-7,-2,9,8,10,-6,7,-10,3,5,-9,1,7,1,7,1,2,-8,3,-4,7,-3,-2,-9,-4,8,-5,9,9,4,-5,9,-10,-8,-4,5,-4,8,-3,3,-1,-3,10,-2,1,6,-5,-5,5,-8,-8,2,5,-8,-9,8,-1,-8,-4,-1,-10,-10,5,10,1,-9,-4,8,1,10,6,9,10,8,10,8,10,5,-5,3,4,4,-3,9,-8,-3,6,2,9,-9,-3,1,9,7,2,2,2,-5,-8,-8,-3,3,-2,7,-6,2,-7,1,10,10,9,-7,-5,7,-9,2,-5,3,-9,-9,-9,4,-4,2,2,6,-3,2,7,3,-4,10,-9,9,5,3,-10,2,2,10,5,7,10,5,-9,-5,-3,-6,-10,-10,-6,-3,-10,2,8,-7,-9,8,-6,-7,1,-9,9,-5,-2,-5,8,5,-2,9,1,2,2,9,3,2,10,-8,-1,-7,8,1,2,3,5,6,9,5,-8,-9,10,6,-7,8,-5,-10,9,-8,-7,8,2,5,-2,3,5,-4,5,5,-2,9,8,-2,-9,9,-3,8,-3,-7,5,6,5,-7,9,4,6,3,-3,2,-7,-9,-10,-6,-4,-9,-6,-1,4,-3,1,-6,-1,3,-6,-7,10,3,-3,-4,-5,-7,7,-4,-7,5], dtype = "uint64")#candidate|1133|(585,)|const|uint64
var_1134 = relay.var("var_1134", dtype = "float64", shape = (300,))#candidate|1134|(300,)|var|float64
const_1135 = relay.const([[4.142144,-3.152076,8.068343,-9.977246,-7.157529,6.776810,5.643432,7.792090,5.072875,8.514170,3.329214,6.986437,-9.967093,-4.399982,7.661618,7.595640,-6.683124,9.803574,9.760142,8.864476,-2.614531,-0.585404,1.351658,1.902700],[2.167719,-1.135084,9.966235,5.128677,-5.815273,-7.730647,-8.668765,-5.573153,-6.897135,8.537809,9.014972,0.980700,9.052359,-8.229198,9.643953,2.185161,-5.840751,7.574382,7.767956,-6.036167,-2.535313,-0.197787,-6.120276,-2.384416],[-9.512000,7.389718,-1.038348,9.353779,-0.739848,-0.929119,2.599157,-4.788700,0.738547,9.874414,-7.810487,-8.551621,3.529009,-1.080035,4.966494,-0.085682,-9.257149,-8.187206,-7.876655,-6.213300,5.789792,6.218407,-1.332644,-6.925822]], dtype = "float32")#candidate|1135|(3, 24)|const|float32
call_1131 = relay.TupleGetItem(func_599_call(relay.reshape(var_1132.astype('uint64'), [13, 5, 1]), relay.reshape(const_1133.astype('uint64'), [13, 5, 9]), relay.reshape(var_1134.astype('float64'), [300,]), relay.reshape(const_1135.astype('float32'), [72, 1]), ), 5)
call_1136 = relay.TupleGetItem(func_605_call(relay.reshape(var_1132.astype('uint64'), [13, 5, 1]), relay.reshape(const_1133.astype('uint64'), [13, 5, 9]), relay.reshape(var_1134.astype('float64'), [300,]), relay.reshape(const_1135.astype('float32'), [72, 1]), ), 5)
output = relay.Tuple([call_1113,call_1128,call_1131,var_1132,const_1133,var_1134,const_1135,])
output2 = relay.Tuple([call_1114,call_1129,call_1136,var_1132,const_1133,var_1134,const_1135,])
func_1138 = relay.Function([var_1132,var_1134,], output)
mod['func_1138'] = func_1138
mod = relay.transform.InferType()(mod)
mutated_mod['func_1138'] = func_1138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1138_call = mutated_mod.get_global_var('func_1138')
var_1140 = relay.var("var_1140", dtype = "uint64", shape = (65,))#candidate|1140|(65,)|var|uint64
var_1141 = relay.var("var_1141", dtype = "float64", shape = (300,))#candidate|1141|(300,)|var|float64
call_1139 = func_1138_call(var_1140,var_1141,)
output = call_1139
func_1142 = relay.Function([var_1140,var_1141,], output)
mutated_mod['func_1142'] = func_1142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_1190 = relay.TupleGetItem(func_422_call(), 1)
call_1191 = relay.TupleGetItem(func_423_call(), 1)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
call_1194 = func_78_call(relay.reshape(call_1190.astype('float32'), [14, 7, 15]))
call_1195 = func_78_call(relay.reshape(call_1190.astype('float32'), [14, 7, 15]))
func_989_call = mod.get_global_var('func_989')
func_991_call = mutated_mod.get_global_var('func_991')
const_1197 = relay.const([7.563697,3.452156,-8.547655,6.812095,5.584181,-6.968865,-3.977462,4.124261,5.805670,-6.630520,8.993854,3.016888,9.832611,-9.924073,-4.787115,1.988752,-8.221844,3.668811,6.925724,4.556980,-3.506090,-5.317069,0.860188,-3.378429,8.178892,1.613467,3.194066,9.821076,4.894837,1.013641,8.423067,8.280241,-5.434420,-7.884460,3.488541,-6.482319,8.030077,1.788991,-0.460290,6.904956,-5.785577,-7.858936,-6.666984,-9.086338,-7.482640,3.442934,2.214346,0.303460,-9.458965,6.879928,3.922907,2.153595,-3.224837,5.281929,8.102026,-1.306677,8.364784,5.268876,7.000969,5.334369,5.812703,7.482957,1.601323,-4.485027,9.564570,-1.678799,3.739635,7.133488,-5.639411,-4.717146,-6.258303,5.310147,-1.960650,1.337780,-4.748639,2.750741,9.808786,-5.367494,6.994391,-8.582901,-8.730452,9.628036,4.688946,-2.575328,7.011961,8.414084,8.752968,9.446686,5.080393,7.615138,8.235166,9.261258,-1.810923,3.903819,7.080948,-0.835112,-8.559595,5.824831,-2.887326,1.366566,9.168680,9.200097,4.258113,-7.632380,5.935259,5.326855,-4.072563,-4.835102,-5.369969,-4.155169,5.423585,-7.659430,-2.466970,6.160505,4.954771,-6.310688,8.668396,7.140372,-9.616037,1.039059,-6.514210,-0.767220,-1.401301,5.528516,-8.671807,-3.864262,-4.399366,-5.921359,-2.569105,0.957299,-1.905928,-3.153502,-4.801125,4.565186,8.678260,-7.742517,0.171675,-1.428336,1.801295,-0.317924,2.010534,-6.507844,3.137444,-6.260007,-5.415772,5.037673,1.738758,2.572437,-4.161470,-6.439837,1.102122,3.043075,6.146916,-1.118498,2.857693,3.379068,0.987251,-0.991099,-2.734758,8.991187,-5.174784,9.060707,-2.365504,6.494534,2.421159,2.072181,8.986673,6.856687,-2.920799,0.659979,8.062105,2.546457,-0.675194,5.634493,-6.653775,-9.183005,-8.304738,7.503828,-8.823815,6.656844,-5.055853,-6.890754,0.991512,8.788205,-4.703460,5.293254,7.076290,-3.256028,-8.541441,-7.194739,-1.563905,3.207141,-9.964899,-0.794818,-7.167322,0.116222,-8.808594,-8.623588,1.730182,8.004676,-5.740948,5.146807,9.863585,-4.567592,-1.362566,5.057166,0.233772,1.781193,1.594348,-2.639762,0.923979,-1.133351,3.788151,2.971318,-5.106145,-3.543869,3.545053,-2.384412,-1.055926,-6.768740,6.915608,7.072673,-1.889193,7.829442,-1.999737,7.095875,5.011328,7.659565,-7.664854,5.430854,-7.517371,-7.315271,-8.266723,-1.903812,2.780644,0.705850,-3.169452,3.709873,7.245924,-0.912682,-8.214309,8.518275,-7.654195,-8.877209,3.919117,1.751845,-8.977121,8.161513,4.009169,4.395062,-4.716681,9.119276,5.877209,0.367453,5.192473,5.022940,-4.378789,8.531363,9.796601,1.393511,-8.709841,-0.595822,-1.838945,3.694219,-0.843651,-4.520418,7.009445,4.194578,-9.241362,7.417653,5.121833,9.719841,8.574103,-8.470362,5.699567,5.004268,-2.045971,-3.315038,2.540317,-3.760467,-0.750613,-8.331261,0.534128,-2.702125,-2.115064,5.677240,-7.893201,9.025356,-4.937140,5.598032,-9.399705,1.103248,-3.259140,4.437848,3.572441,0.789207,7.993959,1.952093,-3.725027,-0.675233,7.699713,-2.394638,3.355975,3.917272,9.463754,2.112614,3.568599,-0.772761,-7.489780,4.265881,-9.604271,4.895749,-5.188696,-5.907573,-9.359260,7.211218,-6.977613,-4.812079,-4.958673,1.623850,-1.853398,2.973613,3.247336,5.934553,8.768582,3.835068,-2.461992,1.433206,1.520789,4.729447,9.798178,7.240065,-1.381458,7.270225,7.097089,-1.708031,7.192667,6.498019,7.102609,-2.494655,1.721681,-3.244463,-6.983884,-6.680094,1.314582,2.527392,2.934435,9.526520,-7.430591,-1.125733,1.677825,6.486522,-6.225047,-7.829829,-2.481986,-4.573611,-9.841069,2.440772,7.036788,6.210860,0.311530,4.901226,1.228587,-5.588264,2.924650,-0.323882,6.349180,6.362165,-7.863260,3.575577,-6.633208,8.308499,0.018084,0.821729,-9.960702,5.422124,3.653856,-8.221849,1.271070,1.633647,3.158671,-9.617110,2.452417,-7.750559,8.076760,-1.940973,-3.650077,-0.486422,-4.040785,-8.149050,-7.682255,-2.045816,-1.739349,7.506297,3.953486,-2.663189,-6.330552,3.842056,-2.587743,7.161562,-3.156603,9.240189,3.029294,-9.131729,3.136506,9.606094,-8.382341,7.417469,-3.633514,3.454601,3.638111,9.403805,-2.057180,-7.374130,-6.702167,-8.727567,1.372991,1.215859,4.330393,0.305099,-8.244002,6.202821,-8.278094,1.353977,6.206470,9.550543,-5.843473,-9.049552,0.631678,0.473295,-0.321076,-0.517596,3.389441,2.041354,9.730439,3.203996,8.417318,6.959028,-0.267988,-7.047330,7.136040,-8.879076,-7.989280,-7.035912,6.933552,-3.341000,2.660393,-0.173250,-5.144235,1.483242,-5.188402,-4.426424,9.325882,3.808114,-6.796668,6.810384,9.648008,-1.187893,-4.300377,-4.699601,-9.612274,-6.918518,6.592347,2.871784,-0.281154,-2.694653,4.236196,-2.032000,-8.314582,-7.789761,5.627532,-2.211811,-0.748912,4.788075,5.098526,-5.859264,-6.556807,7.496872,6.922464,1.812559,8.969933,-5.186344,-9.913485,-1.180754,2.993478,-6.360060,-8.825014,9.252108,8.595906,-1.319432,-8.781203,-3.382792,0.685307,2.019713,-2.237691,-1.960573,-1.804546,3.149771,2.709846,5.818202,-8.127723,5.030847,-3.203627,6.053582,6.256633,-4.444162,1.537495,-8.205867,-9.147309,1.773871,5.267195,-4.352723,3.628129,-0.232856,7.595381,4.430428,7.065955,1.153403,5.288297,0.199225,-9.013306,3.039211,6.061059,-0.581542,3.452836,-4.809617,2.483932,-4.243221,-2.915031,8.134222,-9.685086,-5.221964,3.007976,1.179068,-7.040190,-8.207641,-2.291065,-0.912895,0.506971,8.154893,3.450021,0.455183,-8.908209,7.621893,0.043743,6.553766,3.473878,7.779213,8.710846,5.131464,-4.493153,-9.615007,6.749367,-5.396188,2.644857,6.014003,1.730610,7.067501,-2.848554,2.756849,7.124428,0.822162,-8.757058,3.961131,3.116727,7.850294,-9.125618,-9.699597,3.729742,0.355195,-3.464015,4.151653,5.380614,-2.069331,5.226983,9.010414,-5.933831,6.474209,-4.477609,-4.954493,1.596647,2.623287,8.032123,-6.735813,-0.491672,1.344855,-5.194060,-2.105765,9.643917,-0.990936,-1.637896,7.187476,-1.163245,3.192586,9.348963,2.590090,-3.908233,2.830153,-2.639708,-7.752964,3.708459,-1.545620,-3.184258,9.614016,3.407957,-4.569405,-6.162745,-4.561412,-4.390510,9.865046,7.850065,-7.945612,6.944299,9.680130,1.653919,-7.433727,6.639703,5.980500,0.752887,0.438066,-1.826494,1.839902,0.882952,8.821535,0.956677,2.154386,3.710851,-0.145193,0.085527,2.597936,4.788843,1.653193,-7.830060,-8.955327,-0.002567,-8.940454,8.956805,4.136561,1.139969,-3.311738,0.899629,0.328402,-6.298812,2.043051,5.518560,-4.465527,-8.523921,9.047518,-6.140676,-6.973700,6.057419,7.296541,-3.078285,0.726179,-2.461787,3.581924,6.190744,-0.569734,-6.944145,-1.887705,-3.606116,1.882077,-6.103388,0.089024,-5.733775,7.101157,-8.162967,9.905293,6.248493,-5.232990,-6.915679,9.775655,-6.779464,0.910773,4.485184,-1.122736,4.770922,-5.052323,-5.355612,-3.720434,-2.239575,-8.050269,6.455233,0.651442,-9.974669,-6.661258,9.192525,4.893753,0.332447,9.135501,-4.157771,2.918029,2.353816,5.980982,0.474795,-3.340180,-4.005066,4.270444,-9.996229,-8.945947,-8.218618,-9.738344,2.358746,-1.248114,-3.125275,7.610553,0.710483,-0.459632,3.644606,9.777808,-5.235253,-4.662356,-9.469287,-6.263167,-1.788809,-4.616544,9.997032,6.146384,-8.960240,6.854768,8.236346,4.155114,0.676010,7.936231,4.156172,-4.886600,-8.964731,-6.798380,-5.440742,-7.719011,-4.559207,4.014801,0.634144,-1.727833,-6.306056,-5.177141,-7.138173,3.166766,-5.429850,-5.223983,9.464096,3.633348,0.329893,-5.888062,-9.341848,7.640289,0.915856,-3.599493,8.545075,-8.577392,-0.264985,4.617605,-9.656732,8.935001,0.159543,6.729011,-1.336838,-5.977384,-2.816207,6.458907,1.091696,1.867745,5.889743,5.214929,-2.607143,4.274807,0.569281,-8.965574,1.939349,-2.200340,3.672833,4.170795,-2.541417,-7.685969,-7.850888,3.748258,-8.853093,7.359103,-7.485080,-4.020309,-2.918098,8.747514,-4.163995,-6.079148,5.822456,-3.094281,-9.728030,-0.446685,3.384441,4.634552,-8.670513,-8.306185,-3.333208,8.396609,-8.810227,1.552443,7.475759,-9.545773,-3.055703,1.337143,9.922027,8.643934,1.555125,-4.632804,-3.393097,-4.343948,-7.276943,6.866897,-0.498717,3.353451,-2.538026,-6.622442,-7.867628,3.517995,1.293733,-3.389661,-0.395328,-8.539635,-5.139777,-8.775272,-5.903815,0.703871,0.761089,6.129025,1.638198,6.470669,-8.113720,4.759092,-1.776691,3.052509,2.757684,7.103072,8.111623,7.957475,-8.432926,-4.770513,1.080567,-2.182091,-7.808156,-3.635649,-4.210832,0.346994,8.165221,9.645183,7.841211,8.997270,6.956358,-7.829804,-0.618866,-9.689883,-6.060371,-8.173356,-0.377282,-5.256683,-6.700594,0.947183,-8.235195,8.540394,2.142297,-0.315113,-0.374543,-9.047374,-1.035400,-4.414450,-2.495707,3.431829,-3.734211,-6.013070,-6.115304,9.505682,-8.450241,-3.915690,-7.814059,-3.898534,-7.580980,-4.711510,5.851876,-0.797550,-3.386148,-1.623269,1.696116,5.975144,9.001165,8.985934,-7.596217,8.194357,4.118505,-6.466052,5.183516,8.007408,5.502634,-4.453514,-3.117026,-2.525709,-0.162021,-4.950193,-0.043297,1.141947,2.376503,-8.707942,7.269919,-9.284131,6.034815,-0.356906,-6.638689,-3.458871,-2.937439,-0.278076,-0.969465,5.449192,5.112183,-5.527558,2.830159,-1.519861,-7.895893,-3.699632,-2.621893,-3.129279,8.279542,-4.577772,7.515119,5.329434,-8.319146,-0.778188,-6.173917,6.073557,2.495099,-1.990449,0.265151,-6.790664,1.564611,0.757881,5.516282,8.708404,8.213982,-8.080292,-5.019617,-7.718647,4.948857,7.726030,-5.981674,-0.080303,6.399490,-2.088517,7.650106,-9.204171,4.288269,-4.766604,-8.073163,-4.703209,5.511857,-8.951342,-3.664931,-8.320522,9.810943,-7.770448,-4.440429,-4.620972,5.546842,-0.095779,3.240203,4.513658,8.825041,1.750991,1.367174,9.373550,6.726885,-6.827367,-4.887491,2.164257,2.935486,1.731457,-4.791389,7.326335,-4.550858,-5.738056,-6.658026,-5.066434,4.234095,1.168082,4.622344,-1.695592,-5.604453,6.901319,1.915847,4.729951,-3.743486,2.269385,-8.279541,-1.772219,-1.867361,-2.326204,-6.454037,-1.803008,-5.408253,-1.436266,-0.946341,-3.831038,6.403183,3.661714,9.164357,1.767258,3.199719,-6.246510,0.680852,-8.405642,-3.191632,4.193270,-8.080760,-9.159946,2.558163,-8.612080,2.623740,4.946842,-5.948124,-6.525424,0.222206,5.472834,-3.745518,-0.974126,-9.891411,6.531192,4.665628,5.222184,2.650386,-4.207140,-9.637468,-1.797993,-0.809186,7.000372,5.516277,-5.496827,9.738133,3.941136,4.782210,-7.040138,1.325251,-0.287433,-5.862695,-6.599159,-3.647973,-7.073822,2.737516,-7.189532,-9.781034,9.234086,6.968527,-2.448909,5.394377,-2.855745,3.477816,4.120718,8.813731,9.051838,7.714468,3.372936,8.974147,1.212316,-0.333964,-4.878485,1.120363,-9.496858,5.160701,3.337905,8.458959,3.480413,-9.243781,9.859842,3.105290,3.013185,-2.025380,-4.376896,5.124570,-8.189444,3.433935,-5.876392,-6.230891,-0.387342,-8.651297,1.944353,4.681811,-0.388283,8.183447,1.243054,7.397554,3.894413,9.121699,6.412419,4.196491,5.270055,-9.795954,3.608660,-3.516354,-9.738592,-9.432648,-4.114295,-7.162424,7.410354,-6.698223,-3.048953,-5.810802,9.683206,5.318606,-9.534593,7.582261,-3.033330,9.767949,-6.380562,6.088050,-5.079748,-4.210179,0.044951,-6.209085,-2.298177,-8.239627,-1.798546,0.038503,-1.986366,-7.696394,3.368406,-6.950802,3.844926,-2.341109,-9.718242,-6.438410,9.312210,5.341803,9.566860,2.873214,9.817359,1.380383,-2.203474,6.941430,9.806035,1.418846,5.412342,-9.308046,-8.909934,4.187005,-7.554032,1.260750,-2.300515,1.286699,-3.550452,-1.810644,-6.262838,4.549990,-7.781031,7.305547,-2.512590,-7.574100,9.479299,-0.221687,4.109364,-4.030528,0.112905,3.276456,-4.510189,-4.369462,-8.290006,-9.067871,-6.163032,2.285913,1.129083,-3.855935,-9.564367,2.149567,-4.429964,8.463326,7.025523,2.506630,6.196073,7.937064,5.805945,1.811550,-7.600004,-7.208727,1.044379,9.301786,0.488563,0.297623,-4.510856,1.755494,-0.171752,1.761429,-9.302349,6.879938,3.263285,7.634410,-2.597688,-0.852355,3.099160,4.590131,2.084712,6.663427,-2.728171,-5.949586,6.451592,8.174615,-3.310930,-9.647485,-5.481950,-5.952075,-6.222838,-1.374654,-7.358538,9.348276,-7.179338,6.492133,2.031247,-2.025710,9.258186,-6.882167,-8.033290,-9.074766,-2.637157,9.695660,-4.079087,7.684904,1.468368,8.961002,-4.328361,9.401665,6.851530,-5.955068,1.805197,1.955516,2.090360,-8.216735,8.222785,-0.718794,7.545073,-2.193703,-1.356467,-4.899704,-7.580704,4.849161,-3.123841,0.052425,5.652035,-3.617343,-8.620347,4.447417,8.090209,4.939391,5.816299,2.644863,1.718747,-5.368829,4.115284,9.078168,5.465005,-1.148586,-0.957549,5.979364,-9.034960,-2.088154,3.091735,-1.499523,7.436301,-9.276308,-4.806827,4.191424,1.707618,5.368984,-2.966488,-3.614752,1.232009,1.785813,-1.267403,-8.845193,-7.819152,0.678850,-5.435312], dtype = "float64")#candidate|1197|(1274,)|const|float64
call_1196 = func_989_call(relay.reshape(const_1197.astype('float64'), [7, 13, 14]))
call_1198 = func_989_call(relay.reshape(const_1197.astype('float64'), [7, 13, 14]))
output = relay.Tuple([call_1190,call_1194,call_1196,const_1197,])
output2 = relay.Tuple([call_1191,call_1195,call_1198,const_1197,])
func_1201 = relay.Function([], output)
mod['func_1201'] = func_1201
mod = relay.transform.InferType()(mod)
output = func_1201()
func_1202 = relay.Function([], output)
mutated_mod['func_1202'] = func_1202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1026_call = mod.get_global_var('func_1026')
func_1027_call = mutated_mod.get_global_var('func_1027')
call_1216 = func_1026_call()
call_1217 = func_1026_call()
uop_1219 = relay.sin(call_1216.astype('float64')) # shape=(14, 7, 15)
uop_1221 = relay.sin(call_1217.astype('float64')) # shape=(14, 7, 15)
output = uop_1219
output2 = uop_1221
func_1225 = relay.Function([], output)
mod['func_1225'] = func_1225
mod = relay.transform.InferType()(mod)
output = func_1225()
func_1226 = relay.Function([], output)
mutated_mod['func_1226'] = func_1226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_1250 = relay.TupleGetItem(func_422_call(), 3)
call_1251 = relay.TupleGetItem(func_423_call(), 3)
output = call_1250
output2 = call_1251
func_1262 = relay.Function([], output)
mod['func_1262'] = func_1262
mod = relay.transform.InferType()(mod)
mutated_mod['func_1262'] = func_1262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1262_call = mutated_mod.get_global_var('func_1262')
call_1263 = func_1262_call()
output = call_1263
func_1264 = relay.Function([], output)
mutated_mod['func_1264'] = func_1264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1225_call = mod.get_global_var('func_1225')
func_1226_call = mutated_mod.get_global_var('func_1226')
call_1278 = func_1225_call()
call_1279 = func_1225_call()
func_599_call = mod.get_global_var('func_599')
func_605_call = mutated_mod.get_global_var('func_605')
const_1286 = relay.const([8,6,8,-4,3,-5,10,-1,9,10,-7,-10,9,10,-5,10,4,9,-1,-3,6,-3,7,7,9,1,-10,8,3,1,6,3,-7,-4,-3,3,4,-6,-1,6,2,-3,-2,-2,-1,-3,4,9,-8,2,-1,-3,-2,-5,-3,10,-2,-8,5,9,2,-3,10,10,6], dtype = "uint64")#candidate|1286|(65,)|const|uint64
const_1287 = relay.const([6,9,4,8,6,-5,-2,-3,2,5,4,2,1,-1,-3,-1,8,-6,5,-10,-3,-1,9,-4,-6,6,-8,-5,2,3,10,-4,-5,9,-2,10,5,2,5,-4,6,2,-10,-10,-5,-8,8,-1,10,-10,-2,-2,4,-10,10,10,8,8,1,10,3,-8,2,2,1,8,4,10,-2,7,-6,9,-10,-2,7,4,-4,10,4,-7,6,8,-5,-10,-1,-10,3,-1,-8,-4,8,4,-10,7,-6,1,-2,-4,9,6,2,-7,5,7,-4,8,-9,-2,-7,-7,5,-7,-6,4,8,5,5,-4,-1,-6,4,-5,-6,-3,7,-8,-7,9,-9,-9,2,6,4,-10,10,10,-9,6,1,8,1,-2,4,-2,-4,-9,-4,6,2,-5,-1,6,-7,5,6,-9,1,7,-3,-10,1,5,-2,-5,8,-1,-2,-9,1,-8,7,-6,-9,6,4,-8,5,2,6,-6,-5,3,3,-8,-6,-3,-6,-3,-4,6,7,4,-9,9,-4,-2,-9,-6,-9,-7,3,-9,-9,-3,-3,2,4,2,-2,3,-6,-3,-1,9,5,6,8,-6,-8,-1,-9,1,-6,-7,3,-4,-4,-6,-10,-7,-3,-3,-8,7,10,-7,8,2,-10,-4,-10,2,7,-1,4,-4,-2,-5,7,-8,-7,-8,4,1,-1,-7,-3,-5,8,9,-5,-9,9,-1,6,-5,-4,-10,-5,2,-3,-6,-1,-9,8,-1,1,2,-5,-8,2,-6,8,-7,-4,-6,-10,-5,3,10,-2,-6,2,-4,-1,-8,6,1,9,-5,-7,-9,-5,-9,-6,10,1,-2,-4,-10,9,-1,-3,8,-10,-2,-4,-5,-5,7,-3,-1,3,-7,-2,-5,8,-7,-6,-2,8,5,-7,10,5,3,-6,-4,2,7,2,-6,-6,1,7,-10,9,6,-6,-10,-6,10,-9,-3,10,6,4,2,4,5,9,6,-1,-6,9,-7,-8,8,-3,-10,-3,-5,-10,-8,-2,-8,8,-1,-4,-3,4,9,9,1,6,-7,10,7,-2,-4,8,7,6,3,6,5,8,-2,-9,10,-4,6,2,-4,8,9,10,2,-6,7,10,2,6,-6,-8,-2,-5,8,4,2,-10,10,8,5,6,6,6,4,1,-8,-8,3,3,-3,-1,-2,5,-10,-3,-5,-1,-3,-8,-10,10,-9,-10,-4,-4,-3,9,6,5,-8,-3,7,3,-10,10,-1,-7,9,-5,-4,7,3,-1,1,-7,6,4,-3,-5,10,-2,-6,-3,10,-7,8,2,-1,2,-2,-2,8,-4,-3,-5,-4,5,-10,6,-8,-6,8,-8,2,-4,-9,-3,-2,-2,-5,9,-8,1,7,-9,2,-3,-5,1,3,2,-2,10,1,3,3,-5,-10,-10,-6,2,-6,10,8,-9,-7,-2,3,4,-6,-9,-1,-9,-5,-8,9,10,-4,5,10,-2,4,-7,-8,2,-10,-4,-9,1,-3,4,-8,-5,5,-6,-5,-3,4,9,-2,5,-4,-2,1,7,-4,-6,-7,9,-1,8,-5,9,10,-9,-7,-4,-3,-3,2,10], dtype = "uint64")#candidate|1287|(585,)|const|uint64
const_1288 = relay.const([-2.618128,4.942463,5.913427,-3.395991,-9.150596,3.875368,-6.768670,2.349859,2.335627,-5.556593,7.547897,8.430547,-5.296324,-0.747816,-3.751328,9.572387,6.806535,-2.820931,-5.048891,3.775235,1.337539,-2.792680,-2.069261,2.316275,6.547445,8.195061,-0.825188,5.438349,1.942522,-0.820448,2.401828,8.664928,-5.016785,6.803471,-3.700622,0.171318,2.238790,5.896565,-6.228620,-7.022453,6.230125,-5.238475,-1.504903,-4.242347,2.550944,1.999144,-0.743964,-0.646463,-4.768945,8.655532,-8.173057,-8.433915,3.048038,8.528513,1.152163,7.319368,4.217666,-3.689116,8.658477,6.141266,5.805597,-3.163955,3.891023,-7.690259,-6.546235,8.584643,1.572934,6.801513,1.167324,-6.745079,-3.714077,9.964372,3.120212,1.889238,9.366172,3.372561,-4.312496,-1.638791,-7.673308,4.737598,9.832843,3.088947,7.376127,6.441341,1.321939,8.518190,0.337110,2.937019,-1.622732,-4.479036,-7.900560,-2.745894,3.642736,-2.344882,1.920573,-8.562437,-3.408302,4.226094,-3.750309,9.761270,-1.681120,2.846998,0.745281,-0.400836,-0.248962,2.901115,5.163961,8.864697,7.676088,-0.727748,4.035486,4.717196,0.457455,2.617877,1.752073,5.564414,5.150375,0.939518,-9.673595,-0.021790,-8.868516,3.922100,2.588598,-2.554066,-6.448613,-7.258109,-2.738958,-6.331384,-0.371211,3.717667,-8.030278,-3.705787,-4.467935,-3.268333,6.342159,1.600812,6.389662,3.859229,7.841014,9.228141,7.126001,5.872767,8.960315,0.569057,-5.469680,7.838688,9.134972,-7.278974,0.412731,-9.403899,-7.615985,3.878726,-9.933316,-9.862248,-6.221619,-8.512302,3.550409,7.385609,4.472476,1.810281,-1.083882,-9.471740,-0.514862,6.272120,8.229859,-7.152064,6.129117,2.057164,8.379408,6.204240,6.564929,4.617806,6.767399,8.892597,9.546781,-3.635948,6.483429,2.978145,-7.052390,-6.312189,9.012838,9.606163,-5.322379,-2.856471,-6.238663,3.566264,0.857973,6.167854,-1.184005,7.600925,4.001399,6.274107,-9.914903,-3.202115,7.571523,4.898086,1.175797,1.756927,1.280332,0.992190,3.746813,-7.056227,6.807384,3.219656,-4.290993,8.357224,5.076691,7.650220,-9.678595,-1.219911,-3.724160,-7.905271,-6.796793,9.849561,8.494482,0.601488,8.694634,-4.678172,6.301011,-3.499052,-1.554179,0.215507,-4.961668,-8.828425,-3.964153,-4.246361,-8.927185,7.927073,-6.844823,-3.109801,8.850314,-8.514956,0.936750,-2.430899,2.096262,1.168712,-4.737542,3.223622,2.212739,9.651281,-3.437306,-1.575702,-4.281766,0.871518,-5.649246,1.530016,7.439459,-7.872612,-0.024968,-4.159574,-7.053792,5.532934,-5.174854,5.808577,-0.155901,-3.127880,8.789003,0.861949,-2.582471,-6.058966,4.652678,-9.022069,-6.290084,1.195769,0.023932,-2.850398,8.572032,0.501154,-4.954175,1.783807,4.469688,8.575056,-5.879219,3.617076,8.925565,3.824107,9.432406,0.572887,6.013766,-8.936489,-7.113154,-6.120795,-8.218303,-2.386793,-5.367470,-6.192030,1.399132,-0.113648,-4.937314,-2.586500,-4.388226,-7.611693,8.922407,1.875962,5.060790,-6.138060,-4.370701,1.474902,-3.614068,4.826333], dtype = "float64")#candidate|1288|(300,)|const|float64
var_1289 = relay.var("var_1289", dtype = "float32", shape = (6, 12))#candidate|1289|(6, 12)|var|float32
call_1285 = relay.TupleGetItem(func_599_call(relay.reshape(const_1286.astype('uint64'), [13, 5, 1]), relay.reshape(const_1287.astype('uint64'), [13, 5, 9]), relay.reshape(const_1288.astype('float64'), [300,]), relay.reshape(var_1289.astype('float32'), [72, 1]), ), 5)
call_1290 = relay.TupleGetItem(func_605_call(relay.reshape(const_1286.astype('uint64'), [13, 5, 1]), relay.reshape(const_1287.astype('uint64'), [13, 5, 9]), relay.reshape(const_1288.astype('float64'), [300,]), relay.reshape(var_1289.astype('float32'), [72, 1]), ), 5)
output = relay.Tuple([call_1278,call_1285,const_1286,const_1287,const_1288,var_1289,])
output2 = relay.Tuple([call_1279,call_1290,const_1286,const_1287,const_1288,var_1289,])
func_1302 = relay.Function([var_1289,], output)
mod['func_1302'] = func_1302
mod = relay.transform.InferType()(mod)
var_1303 = relay.var("var_1303", dtype = "float32", shape = (6, 12))#candidate|1303|(6, 12)|var|float32
output = func_1302(var_1303)
func_1304 = relay.Function([var_1303], output)
mutated_mod['func_1304'] = func_1304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_1334 = func_1262_call()
call_1335 = func_1262_call()
output = relay.Tuple([call_1334,])
output2 = relay.Tuple([call_1335,])
func_1336 = relay.Function([], output)
mod['func_1336'] = func_1336
mod = relay.transform.InferType()(mod)
output = func_1336()
func_1337 = relay.Function([], output)
mutated_mod['func_1337'] = func_1337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_1395 = relay.TupleGetItem(func_695_call(), 0)
call_1396 = relay.TupleGetItem(func_697_call(), 0)
func_360_call = mod.get_global_var('func_360')
func_363_call = mutated_mod.get_global_var('func_363')
var_1402 = relay.var("var_1402", dtype = "float32", shape = (72,))#candidate|1402|(72,)|var|float32
call_1401 = relay.TupleGetItem(func_360_call(relay.reshape(var_1402.astype('float32'), [6, 2, 6])), 0)
call_1403 = relay.TupleGetItem(func_363_call(relay.reshape(var_1402.astype('float32'), [6, 2, 6])), 0)
func_360_call = mod.get_global_var('func_360')
func_363_call = mutated_mod.get_global_var('func_363')
call_1416 = relay.TupleGetItem(func_360_call(relay.reshape(var_1402.astype('float32'), [6, 2, 6])), 0)
call_1417 = relay.TupleGetItem(func_363_call(relay.reshape(var_1402.astype('float32'), [6, 2, 6])), 0)
func_1225_call = mod.get_global_var('func_1225')
func_1226_call = mutated_mod.get_global_var('func_1226')
call_1437 = func_1225_call()
call_1438 = func_1225_call()
func_458_call = mod.get_global_var('func_458')
func_461_call = mutated_mod.get_global_var('func_461')
const_1441 = relay.const(-6, dtype = "int64")#candidate|1441|()|const|int64
var_1442 = relay.var("var_1442", dtype = "int64", shape = (96,))#candidate|1442|(96,)|var|int64
call_1440 = relay.TupleGetItem(func_458_call(relay.reshape(const_1441.astype('int64'), []), relay.reshape(var_1442.astype('int64'), [12, 8, 1]), ), 1)
call_1443 = relay.TupleGetItem(func_461_call(relay.reshape(const_1441.astype('int64'), []), relay.reshape(var_1442.astype('int64'), [12, 8, 1]), ), 1)
output = relay.Tuple([call_1395,call_1401,var_1402,call_1416,call_1437,call_1440,const_1441,var_1442,])
output2 = relay.Tuple([call_1396,call_1403,var_1402,call_1417,call_1438,call_1443,const_1441,var_1442,])
func_1451 = relay.Function([var_1402,var_1442,], output)
mod['func_1451'] = func_1451
mod = relay.transform.InferType()(mod)
var_1452 = relay.var("var_1452", dtype = "float32", shape = (72,))#candidate|1452|(72,)|var|float32
var_1453 = relay.var("var_1453", dtype = "int64", shape = (96,))#candidate|1453|(96,)|var|int64
output = func_1451(var_1452,var_1453,)
func_1454 = relay.Function([var_1452,var_1453,], output)
mutated_mod['func_1454'] = func_1454
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1486 = relay.var("var_1486", dtype = "int16", shape = (11, 10, 1))#candidate|1486|(11, 10, 1)|var|int16
const_1487 = relay.const([[[-8,4,5,5],[-5,-5,-4,-9],[-8,7,-10,4],[3,-8,8,10],[-10,2,-8,-3],[5,-5,8,8],[-2,-9,2,-10],[3,-7,10,6],[2,3,6,-6],[-1,4,3,-5]],[[-6,7,-8,-3],[7,-1,-9,-4],[7,-2,5,-6],[7,8,-1,-6],[9,-7,2,-7],[1,-7,7,1],[1,10,1,4],[7,1,5,5],[3,-1,1,6],[-8,-2,4,-10]],[[7,1,-8,-8],[-7,1,6,-9],[9,4,10,3],[10,-4,9,9],[5,-5,-9,6],[-2,9,6,-7],[-10,6,-8,7],[-2,-4,6,-8],[7,2,4,1],[6,4,-10,6]],[[1,-9,8,-10],[-6,3,10,-2],[5,-1,5,-7],[-2,2,3,1],[1,4,5,-2],[-8,4,8,-5],[4,-2,-7,-10],[9,2,-2,-7],[-2,-2,6,-1],[-3,-4,-3,-6]],[[4,5,-8,-10],[-7,-10,-5,1],[9,-6,1,9],[2,-7,-2,-3],[-4,6,1,10],[8,6,8,-3],[-3,9,-6,-8],[-4,5,-1,-2],[7,6,4,4],[7,-7,9,1]],[[9,-6,10,5],[-10,-2,1,5],[-2,3,-8,-9],[-9,1,6,-10],[3,10,-9,-9],[-7,9,5,-5],[-4,4,-9,6],[-9,8,10,-10],[3,8,7,10],[-10,-4,-2,1]],[[-9,-7,-10,-6],[1,-6,-3,5],[6,-7,-3,-9],[-7,-10,-1,-6],[-8,9,-7,6],[-1,10,9,-8],[-1,10,-6,-8],[1,4,1,-10],[-3,6,6,-10],[6,-8,5,2]],[[5,-9,10,-3],[-7,2,-5,8],[1,-1,-8,3],[1,9,-9,2],[-4,4,10,4],[2,-5,8,8],[7,-8,8,-9],[3,5,-10,8],[9,7,-7,5],[6,-10,-5,-6]],[[8,7,3,7],[5,-8,10,-8],[-7,-8,-5,8],[5,8,6,2],[9,-2,-5,-8],[2,5,3,-2],[-8,7,-3,5],[-2,-10,8,-4],[1,-9,4,9],[7,-9,7,3]],[[10,-9,4,3],[-8,6,-4,4],[4,-2,-5,6],[4,4,-5,-7],[8,9,9,-10],[4,-6,6,-4],[5,1,-6,4],[10,-3,7,-9],[-5,1,-10,-4],[6,-5,-10,-3]],[[4,5,-10,-1],[-6,-5,-4,2],[-3,-5,3,-9],[7,-3,2,2],[-1,9,-5,-10],[-5,-8,9,8],[2,-7,5,5],[-10,1,-8,2],[-9,1,-3,6],[7,-7,-3,-10]]], dtype = "int16")#candidate|1487|(11, 10, 4)|const|int16
bop_1488 = relay.right_shift(var_1486.astype('int16'), const_1487.astype('int16')) # shape=(11, 10, 4)
output = bop_1488
output2 = bop_1488
func_1492 = relay.Function([var_1486,], output)
mod['func_1492'] = func_1492
mod = relay.transform.InferType()(mod)
var_1493 = relay.var("var_1493", dtype = "int16", shape = (11, 10, 1))#candidate|1493|(11, 10, 1)|var|int16
output = func_1492(var_1493)
func_1494 = relay.Function([var_1493], output)
mutated_mod['func_1494'] = func_1494
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1509 = relay.var("var_1509", dtype = "float64", shape = (13, 2, 16))#candidate|1509|(13, 2, 16)|var|float64
uop_1510 = relay.acos(var_1509.astype('float64')) # shape=(13, 2, 16)
output = relay.Tuple([uop_1510,])
output2 = relay.Tuple([uop_1510,])
func_1517 = relay.Function([var_1509,], output)
mod['func_1517'] = func_1517
mod = relay.transform.InferType()(mod)
mutated_mod['func_1517'] = func_1517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1518 = relay.var("var_1518", dtype = "float64", shape = (13, 2, 16))#candidate|1518|(13, 2, 16)|var|float64
func_1517_call = mutated_mod.get_global_var('func_1517')
call_1519 = func_1517_call(var_1518)
output = call_1519
func_1520 = relay.Function([var_1518], output)
mutated_mod['func_1520'] = func_1520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_1537 = func_555_call()
call_1538 = func_555_call()
func_1225_call = mod.get_global_var('func_1225')
func_1226_call = mutated_mod.get_global_var('func_1226')
call_1541 = func_1225_call()
call_1542 = func_1225_call()
bop_1553 = relay.logical_and(call_1541.astype('bool'), relay.reshape(call_1537.astype('bool'), relay.shape_of(call_1541))) # shape=(14, 7, 15)
bop_1556 = relay.logical_and(call_1542.astype('bool'), relay.reshape(call_1538.astype('bool'), relay.shape_of(call_1542))) # shape=(14, 7, 15)
output = bop_1553
output2 = bop_1556
func_1558 = relay.Function([], output)
mod['func_1558'] = func_1558
mod = relay.transform.InferType()(mod)
output = func_1558()
func_1559 = relay.Function([], output)
mutated_mod['func_1559'] = func_1559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1026_call = mod.get_global_var('func_1026')
func_1027_call = mutated_mod.get_global_var('func_1027')
call_1565 = func_1026_call()
call_1566 = func_1026_call()
func_806_call = mod.get_global_var('func_806')
func_810_call = mutated_mod.get_global_var('func_810')
var_1580 = relay.var("var_1580", dtype = "int64", shape = ())#candidate|1580|()|var|int64
var_1581 = relay.var("var_1581", dtype = "int64", shape = (96,))#candidate|1581|(96,)|var|int64
const_1582 = relay.const([3,9,5,-7,-5,10,-2,-5,-9,-7,2,5,5,-3,7,-3,-7,8,-2,-1,-5,9,9,-10,4,-5,7,-10,-3,-7,-9,5,-5,-10,-7,-6,-1,-10,8,-9,9,-1,-3,-9,4,-9,8,-10,6,-2,10,7,-4,2,-9,8,-4,-4,-2,3,1,-10,7,-2,10,10,-3,-1,-6,-8,-3,-4,-7,-4,-3,4,3,1,-4,5,-8,-5,-1,-5,-1,-3,1,-3,-8,-5,6,-3,5,-10,-8,4,1,-6,-8,-1,-5,-7,-4,7,9,-2,-3,-5,10,9,10,5,-5,-4,-3,-1,-1,-9,9,6,-7,-5,3,9,5,3,-1,7,-1,-8,7,-5,8,-5,7,6,-10,-4,-1,6,1,1,10,-8,10,5,5,-8,-3,3,4,6,2,-7,-3,7,2,7,-8,3,1,9,-8,-3,2,5,-5,8,-10,-10,-7,10,7,-3,2,-4,2,3,10,2,-1,-8,7,6,2,-2,-3,10,10,6,7,-7,3,10,-5,7,-9,-2,2,4,4,-3,-8,8,8,10,-3,-6,-6,-4,-9,4,-8,4,6,4,-6,8,3,2,9,-7,-8,3,-9,2,9,-8,6,-7,-2,4,-9,1,-10,3,4,6,-1,3,-5,10,5,-1,1,-5,8,-10,4,10,4,-5,-1,10,9,4,10,-8,-3,8,-8,7,-4,4,8,-2,-5,-1,-10,-10,6,-3,-9,3,-1,-4,-4,4,7,6,1,-10,-6,5,-3,5,9,6,-10,-10,10,9,-6,-1,-2,-10,4,-1,2,6,-1,7,-8,7,-1,-8,-10,4,1,-1,-10,-8,-3,-7,-5,2,-6,5,1,-2,9,-3,9,5,3,-5,-6,-9,9,4,9,-9,7,8,6,-2,4,-3,5,4,-3,2,9,-6,7,4,10,-2,-7,-4,-4,7,-2,-8,-8,4,1,-1,-7,-1,-9,-2,-10,5,-9,-2,5,-9,-2,3,-1,-3,3,3,1,4,-10,-8,-3,10,1,-2,-5,-3,-10,-9,5,1,6,-6,9,6,8,-10,6,-2,-3,-3,-7,-5,5,8,-8,8,5,10,5,1,-9,-2,-10,1,-9,10,-3,3,-1,-7,-9,2,10,6,-9,7,-8,2,-5,1,-7,2,-8,-7,-5,7,-1,8,4,-5,2,10,2,10,-4,1,-4,1,-7,8,-3,8,5,-5,1,-1,-3,5,-10,3,7,-5,-9,2,5,10,6,-3,-5,1], dtype = "uint32")#candidate|1582|(468,)|const|uint32
call_1579 = relay.TupleGetItem(func_806_call(relay.reshape(var_1580.astype('int64'), []), relay.reshape(var_1581.astype('int64'), [96,]), relay.reshape(const_1582.astype('uint32'), [468,]), ), 0)
call_1583 = relay.TupleGetItem(func_810_call(relay.reshape(var_1580.astype('int64'), []), relay.reshape(var_1581.astype('int64'), [96,]), relay.reshape(const_1582.astype('uint32'), [468,]), ), 0)
output = relay.Tuple([call_1565,call_1579,var_1580,var_1581,const_1582,])
output2 = relay.Tuple([call_1566,call_1583,var_1580,var_1581,const_1582,])
func_1600 = relay.Function([var_1580,var_1581,], output)
mod['func_1600'] = func_1600
mod = relay.transform.InferType()(mod)
var_1601 = relay.var("var_1601", dtype = "int64", shape = ())#candidate|1601|()|var|int64
var_1602 = relay.var("var_1602", dtype = "int64", shape = (96,))#candidate|1602|(96,)|var|int64
output = func_1600(var_1601,var_1602,)
func_1603 = relay.Function([var_1601,var_1602,], output)
mutated_mod['func_1603'] = func_1603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_1618 = func_555_call()
call_1619 = func_555_call()
output = relay.Tuple([call_1618,])
output2 = relay.Tuple([call_1619,])
func_1628 = relay.Function([], output)
mod['func_1628'] = func_1628
mod = relay.transform.InferType()(mod)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1628_call = mutated_mod.get_global_var('func_1628')
call_1629 = func_1628_call()
output = call_1629
func_1630 = relay.Function([], output)
mutated_mod['func_1630'] = func_1630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_1690 = relay.TupleGetItem(func_1336_call(), 0)
call_1691 = relay.TupleGetItem(func_1337_call(), 0)
output = relay.Tuple([call_1690,])
output2 = relay.Tuple([call_1691,])
func_1692 = relay.Function([], output)
mod['func_1692'] = func_1692
mod = relay.transform.InferType()(mod)
mutated_mod['func_1692'] = func_1692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1692_call = mutated_mod.get_global_var('func_1692')
call_1693 = func_1692_call()
output = call_1693
func_1694 = relay.Function([], output)
mutated_mod['func_1694'] = func_1694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_1695 = func_1558_call()
call_1696 = func_1558_call()
output = relay.Tuple([call_1695,])
output2 = relay.Tuple([call_1696,])
func_1702 = relay.Function([], output)
mod['func_1702'] = func_1702
mod = relay.transform.InferType()(mod)
output = func_1702()
func_1703 = relay.Function([], output)
mutated_mod['func_1703'] = func_1703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1702_call = mod.get_global_var('func_1702')
func_1703_call = mutated_mod.get_global_var('func_1703')
call_1721 = relay.TupleGetItem(func_1702_call(), 0)
call_1722 = relay.TupleGetItem(func_1703_call(), 0)
uop_1723 = relay.exp(call_1721.astype('float32')) # shape=(14, 7, 15)
uop_1725 = relay.exp(call_1722.astype('float32')) # shape=(14, 7, 15)
const_1730 = relay.const([[[False,False,True,True,False,False,False,False,False,True,False,False,False,False,False],[False,True,True,True,False,False,True,False,True,False,True,False,False,False,True],[True,False,False,False,True,False,False,True,False,False,True,False,True,True,False],[True,True,True,True,False,False,True,False,False,False,False,True,False,False,True],[False,True,True,False,True,True,False,True,False,False,False,True,False,True,False],[True,False,True,False,True,False,False,False,False,False,False,False,True,True,False],[False,True,False,False,True,True,True,True,True,True,True,True,True,True,False]],[[True,False,False,True,True,False,True,True,False,True,False,True,True,True,False],[True,False,True,True,False,False,True,True,True,False,False,False,True,True,True],[True,True,False,True,False,True,True,True,False,False,False,False,True,True,False],[True,False,False,False,False,False,False,True,True,True,True,True,True,False,True],[False,True,False,False,False,False,True,False,True,False,False,True,False,True,False],[False,False,False,False,False,False,False,False,True,True,True,False,True,False,False],[False,False,True,False,True,False,False,False,False,True,False,False,False,True,True]],[[False,True,True,False,False,True,True,False,True,False,False,False,True,True,False],[True,True,False,True,True,True,True,True,False,True,False,False,True,False,True],[False,False,True,True,False,True,False,True,True,True,False,True,True,True,False],[True,False,True,True,True,False,True,False,True,True,True,True,True,False,True],[True,False,True,False,True,False,True,True,True,False,False,True,False,True,False],[False,False,True,False,False,False,False,True,True,False,False,False,True,True,True],[True,False,True,False,False,True,False,True,False,False,False,True,True,False,False]],[[False,False,True,True,False,True,True,True,False,False,True,False,True,False,True],[False,True,False,True,False,False,False,False,False,True,False,False,False,False,False],[False,False,False,True,True,True,False,False,False,False,True,True,False,False,True],[False,False,True,False,True,True,False,False,True,False,True,False,False,True,False],[False,True,False,True,True,True,False,True,True,False,False,False,True,False,False],[False,False,False,True,False,False,False,True,False,False,True,True,False,False,False],[False,False,True,False,True,False,True,True,False,False,True,False,True,False,False]],[[True,True,True,False,False,True,False,True,False,False,True,False,True,True,False],[True,True,False,False,True,False,True,False,True,True,False,True,True,True,True],[True,True,False,False,True,True,False,True,False,False,True,True,False,False,False],[False,True,True,True,True,False,True,False,False,False,True,False,True,False,False],[True,False,True,True,False,False,False,False,True,False,True,False,True,True,False],[True,False,True,False,True,False,False,False,True,False,False,False,True,False,True],[True,True,True,False,False,True,False,True,False,True,True,True,True,True,False]],[[True,False,False,False,True,True,False,True,True,True,False,False,False,True,False],[True,False,True,False,False,True,True,False,False,True,True,False,False,False,True],[True,True,True,True,True,False,True,True,False,False,True,False,False,True,True],[False,False,True,True,False,True,True,True,True,True,True,False,True,True,False],[False,False,True,False,False,False,False,True,True,False,True,False,False,False,True],[True,False,True,False,False,True,True,True,True,False,False,False,False,False,True],[False,False,False,True,False,False,True,True,True,True,True,False,True,False,False]],[[True,True,True,False,False,True,False,True,False,True,False,False,True,False,False],[False,True,True,False,False,True,False,False,False,True,True,False,False,False,False],[False,True,True,True,False,True,False,False,True,False,True,True,True,False,True],[True,False,False,False,True,True,False,True,True,False,True,False,False,True,False],[False,True,False,False,True,False,True,True,False,False,False,True,True,True,True],[True,False,True,True,True,False,False,True,False,True,True,True,True,False,False],[False,False,True,False,False,False,False,False,False,False,False,False,True,False,True]],[[False,True,True,True,False,False,False,True,True,False,False,True,True,False,True],[True,False,True,False,False,False,True,False,False,True,False,False,True,True,False],[False,True,True,True,False,False,False,False,True,True,False,True,False,True,True],[True,False,True,True,True,True,True,False,True,True,True,True,True,False,False],[False,False,True,True,True,False,True,True,False,False,True,True,False,True,False],[True,True,True,True,False,False,False,True,False,False,False,True,True,True,True],[False,True,True,True,True,False,True,False,False,False,True,True,True,True,False]],[[True,False,True,False,True,True,False,False,False,False,False,False,True,True,False],[False,True,True,True,True,False,False,False,True,False,False,False,True,True,True],[True,True,True,True,True,True,False,False,True,True,False,True,True,False,False],[True,False,False,True,False,True,True,False,True,False,False,False,False,True,True],[True,False,False,True,True,False,False,False,False,True,True,False,False,False,False],[False,False,True,False,True,True,True,False,True,True,True,True,True,True,False],[False,True,False,True,False,False,True,False,False,True,True,True,True,True,True]],[[False,True,True,True,False,False,False,True,True,True,False,False,False,True,True],[False,False,False,False,True,False,False,False,False,False,True,True,True,False,False],[True,False,False,False,True,False,True,True,True,False,False,False,False,False,True],[True,False,True,False,True,False,False,True,False,True,False,True,False,True,False],[True,False,False,True,True,False,True,False,True,False,False,False,False,False,False],[False,True,True,True,True,False,False,False,True,False,True,True,False,True,True],[False,False,True,False,True,False,False,False,False,False,True,False,False,True,False]],[[False,True,False,True,True,True,True,True,True,True,True,False,False,True,False],[True,True,False,True,False,False,True,False,False,False,False,True,False,False,True],[True,True,False,True,False,True,False,False,False,False,True,False,False,True,True],[False,True,True,True,False,True,True,True,True,True,True,False,True,False,False],[False,True,True,False,False,False,False,False,False,False,False,True,False,True,False],[False,True,True,True,False,True,False,True,True,True,True,False,True,False,False],[False,False,True,True,False,True,True,False,False,True,True,False,False,True,True]],[[True,True,True,False,False,True,False,False,True,True,False,False,True,True,False],[False,True,False,True,True,False,True,False,True,True,False,False,True,False,True],[True,True,True,False,False,True,True,False,False,False,True,False,False,False,True],[False,False,True,False,False,False,True,True,False,False,False,False,False,True,True],[True,False,False,False,False,False,False,False,False,False,False,True,False,True,False],[True,True,False,False,False,False,False,True,True,True,True,True,True,True,True],[False,False,True,True,True,False,True,True,False,False,True,False,True,True,True]],[[True,False,True,False,True,True,False,True,False,False,False,True,True,False,False],[False,False,False,False,True,True,False,True,False,False,True,True,False,False,False],[False,False,True,True,False,False,False,False,True,False,False,False,True,False,False],[True,False,False,True,False,False,True,False,True,True,False,False,True,True,False],[True,True,False,False,False,False,False,False,True,False,False,True,False,True,True],[False,False,False,False,True,False,False,False,True,True,False,True,True,True,False],[False,False,True,False,True,True,True,True,True,False,True,True,True,True,False]],[[True,True,False,True,False,False,True,False,False,False,False,False,False,True,True],[False,True,False,False,False,True,True,True,False,True,True,False,False,False,True],[True,True,True,True,False,True,True,False,True,False,False,True,False,False,True],[False,True,False,False,True,False,True,False,True,True,True,False,True,False,True],[True,True,False,False,False,True,True,False,True,False,False,True,False,False,False],[True,False,True,True,False,False,False,True,False,True,True,False,False,False,False],[True,True,True,True,True,True,False,False,True,True,True,True,True,True,False]]], dtype = "bool")#candidate|1730|(14, 7, 15)|const|bool
bop_1731 = relay.right_shift(call_1721.astype('uint8'), relay.reshape(const_1730.astype('uint8'), relay.shape_of(call_1721))) # shape=(14, 7, 15)
bop_1734 = relay.right_shift(call_1722.astype('uint8'), relay.reshape(const_1730.astype('uint8'), relay.shape_of(call_1722))) # shape=(14, 7, 15)
func_1517_call = mod.get_global_var('func_1517')
func_1520_call = mutated_mod.get_global_var('func_1520')
const_1738 = relay.const([9.871490,-1.238593,-1.177147,-3.140538,-7.579937,-9.888601,4.350344,-3.932301,1.409348,-0.089422,3.314292,9.499908,3.468953,-2.324438,5.029184,-0.940522,-9.901833,9.328997,-8.518861,-6.893248,-9.862079,-2.031800,5.266106,8.838191,6.646004,-8.345288,-3.504980,3.327507,0.685350,-6.152461,-6.490185,5.862764,-3.319995,2.904972,6.657234,1.725369,-9.208779,9.926293,-0.771867,4.068523,-5.878313,4.624629,3.000617,2.580778,-5.240813,6.387726,-9.553541,-8.113555,3.625690,-1.989913,2.235438,5.883814,2.790160,7.595183,5.455197,6.609781,0.832080,-6.937127,-5.402914,5.508449,-1.258007,3.061881,-5.092006,5.063318,4.533395,-0.828012,3.092496,5.137851,-1.174871,-9.943703,0.419180,5.239656,-6.284547,1.062881,4.537917,-3.704779,6.363644,2.592467,6.656761,1.397937,-9.446235,5.527849,2.502732,-2.590723,7.424976,1.444477,6.598234,7.526436,6.145102,-8.243275,-7.783940,-2.699473,-6.380887,0.238652,-5.333217,-1.796672,-9.604450,-6.333676,-8.982408,9.029796,0.519687,-8.816901,6.560267,3.522079,-3.852699,-8.852303,-1.729095,-5.892014,-0.374711,-4.834102,3.957368,9.060076,-9.257675,6.734182,-0.905981,-0.911367,-0.808480,-4.069167,4.237092,-0.742342,1.618826,-0.270631,6.933914,-3.864096,-3.459339,-0.276475,-0.135575,4.034988,2.082661,0.625832,7.002274,8.267910,0.386160,5.729926,4.522700,-0.329979,-3.103686,-4.038072,-9.872155,9.611061,6.718256,-8.184104,5.837176,-7.866292,-6.055472,0.111204,-6.961158,7.575770,-7.844132,-2.060610,-2.944266,7.653620,2.129335,-9.723798,-8.293058,-6.618016,7.494232,7.403681,-9.308546,7.049466,-9.912214,-7.238733,-4.053481,-3.878492,-0.347872,-7.154884,2.179219,-6.689299,-5.458267,-6.146867,-0.190070,-7.393719,7.652036,8.384147,-0.808436,8.809233,2.339591,7.419443,3.509897,-3.323854,-5.386370,5.596052,-1.269992,-6.851821,-1.310970,-5.089505,3.011351,2.572316,-8.467159,-0.678419,1.864754,7.280610,2.775242,-9.226187,-1.337105,-9.806287,-7.040918,0.284697,4.035758,3.529679,-6.711342,3.861421,-6.035082,1.877784,1.891231,7.388205,8.810561,8.989455,5.177507,1.752158,-6.804960,-2.488507,1.350595,-4.075983,7.942587,5.892620,8.910201,3.764977,9.157484,-4.209585,-4.662346,9.837590,2.796963,-6.201856,5.974455,-3.272523,-8.175405,-7.507759,-6.303473,-9.978266,-0.782961,-8.063048,-1.602024,5.049632,-9.584252,-1.440663,-2.948585,-6.334523,-7.995119,-3.866362,-4.275835,-3.204569,-9.693174,4.296534,7.928414,-4.985655,3.004571,5.178656,7.759712,9.462171,-9.224876,-1.546616,3.435530,-8.281445,-1.307608,3.844371,-3.909576,5.340882,-5.336518,3.241911,-6.443796,0.326303,-9.033643,-5.706940,-3.077559,8.859226,3.375020,8.771523,-4.415512,7.535328,-4.856698,-3.075068,-8.925958,3.605949,-3.128476,-5.613760,9.833796,-5.019121,-5.131113,7.666330,-9.429959,1.098746,-0.236377,-9.962942,3.138149,7.426450,5.871664,-7.816460,2.807932,-3.101700,-8.911520,3.632834,8.889360,-3.787901,-2.111421,-4.172933,-2.290952,-3.951116,-9.537838,-7.425106,-5.115233,0.020722,5.507257,9.274907,-7.012461,-7.810641,-2.405711,-2.138145,5.074939,7.093321,-8.826693,-4.257063,-9.723139,2.176996,9.804170,-9.018991,-0.196001,5.888546,9.647724,-0.999404,1.082234,-9.820498,-6.632148,5.016979,2.626869,6.012970,-4.789462,8.346930,5.699952,6.672217,-6.863310,-5.921254,0.741782,-3.671283,3.388985,-0.992100,3.637546,-8.013583,2.691866,7.615120,1.393132,-3.355783,-1.955949,-1.804119,7.132540,-1.912496,9.073754,-9.540289,0.449032,4.529355,1.553237,9.359760,-7.444418,5.055648,1.670205,2.268204,2.977437,-9.286657,4.854426,8.840966,-8.096245,-6.389949,9.677097,-1.180900,4.545500,9.067804,-1.194019,3.886882,-4.901009,-8.003618,1.679203,-9.615850,-7.186541,-2.039387,9.044188,-3.174098,3.242599,8.160187,6.824856,7.135428,1.523973,5.649476,9.359214,9.187419,5.276396,3.240127,4.423574,-9.554087,-7.727040,6.802928,-6.229573,9.073704,-0.671169,-1.377645,8.706741,-8.280126,-1.848358,-2.106263,-4.243562,-7.366846,8.181103,-5.140974,7.434734,-3.072490,1.076164,-8.587892,8.714716,8.912160,-9.596498,2.605175,-3.711280,5.761661,-8.441027,-2.780307,4.411897,-8.159162], dtype = "float64")#candidate|1738|(416,)|const|float64
call_1737 = relay.TupleGetItem(func_1517_call(relay.reshape(const_1738.astype('float64'), [13, 2, 16])), 0)
call_1739 = relay.TupleGetItem(func_1520_call(relay.reshape(const_1738.astype('float64'), [13, 2, 16])), 0)
uop_1756 = relay.log2(const_1738.astype('float32')) # shape=(416,)
output = relay.Tuple([uop_1723,bop_1731,call_1737,uop_1756,])
output2 = relay.Tuple([uop_1725,bop_1734,call_1739,uop_1756,])
func_1769 = relay.Function([], output)
mod['func_1769'] = func_1769
mod = relay.transform.InferType()(mod)
output = func_1769()
func_1770 = relay.Function([], output)
mutated_mod['func_1770'] = func_1770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1692_call = mod.get_global_var('func_1692')
func_1694_call = mutated_mod.get_global_var('func_1694')
call_1792 = relay.TupleGetItem(func_1692_call(), 0)
call_1793 = relay.TupleGetItem(func_1694_call(), 0)
output = call_1792
output2 = call_1793
func_1807 = relay.Function([], output)
mod['func_1807'] = func_1807
mod = relay.transform.InferType()(mod)
mutated_mod['func_1807'] = func_1807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1807_call = mutated_mod.get_global_var('func_1807')
call_1808 = func_1807_call()
output = call_1808
func_1809 = relay.Function([], output)
mutated_mod['func_1809'] = func_1809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_742_call = mod.get_global_var('func_742')
func_744_call = mutated_mod.get_global_var('func_744')
call_1813 = relay.TupleGetItem(func_742_call(), 0)
call_1814 = relay.TupleGetItem(func_744_call(), 0)
output = relay.Tuple([call_1813,])
output2 = relay.Tuple([call_1814,])
func_1835 = relay.Function([], output)
mod['func_1835'] = func_1835
mod = relay.transform.InferType()(mod)
mutated_mod['func_1835'] = func_1835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1835_call = mutated_mod.get_global_var('func_1835')
call_1836 = func_1835_call()
output = call_1836
func_1837 = relay.Function([], output)
mutated_mod['func_1837'] = func_1837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_1920 = func_1262_call()
call_1921 = func_1262_call()
output = call_1920
output2 = call_1921
func_1923 = relay.Function([], output)
mod['func_1923'] = func_1923
mod = relay.transform.InferType()(mod)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mutated_mod.get_global_var('func_1923')
call_1924 = func_1923_call()
output = call_1924
func_1925 = relay.Function([], output)
mutated_mod['func_1925'] = func_1925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mod.get_global_var('func_1923')
func_1925_call = mutated_mod.get_global_var('func_1925')
call_1978 = func_1923_call()
call_1979 = func_1923_call()
output = call_1978
output2 = call_1979
func_1980 = relay.Function([], output)
mod['func_1980'] = func_1980
mod = relay.transform.InferType()(mod)
mutated_mod['func_1980'] = func_1980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1980_call = mutated_mod.get_global_var('func_1980')
call_1981 = func_1980_call()
output = call_1981
func_1982 = relay.Function([], output)
mutated_mod['func_1982'] = func_1982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1026_call = mod.get_global_var('func_1026')
func_1027_call = mutated_mod.get_global_var('func_1027')
call_1983 = func_1026_call()
call_1984 = func_1026_call()
output = relay.Tuple([call_1983,])
output2 = relay.Tuple([call_1984,])
func_1985 = relay.Function([], output)
mod['func_1985'] = func_1985
mod = relay.transform.InferType()(mod)
mutated_mod['func_1985'] = func_1985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1985_call = mutated_mod.get_global_var('func_1985')
call_1986 = func_1985_call()
output = call_1986
func_1987 = relay.Function([], output)
mutated_mod['func_1987'] = func_1987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_2017 = relay.TupleGetItem(func_422_call(), 3)
call_2018 = relay.TupleGetItem(func_423_call(), 3)
func_742_call = mod.get_global_var('func_742')
func_744_call = mutated_mod.get_global_var('func_744')
call_2033 = relay.TupleGetItem(func_742_call(), 0)
call_2034 = relay.TupleGetItem(func_744_call(), 0)
output = relay.Tuple([call_2017,call_2033,])
output2 = relay.Tuple([call_2018,call_2034,])
func_2042 = relay.Function([], output)
mod['func_2042'] = func_2042
mod = relay.transform.InferType()(mod)
output = func_2042()
func_2043 = relay.Function([], output)
mutated_mod['func_2043'] = func_2043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1985_call = mod.get_global_var('func_1985')
func_1987_call = mutated_mod.get_global_var('func_1987')
call_2056 = relay.TupleGetItem(func_1985_call(), 0)
call_2057 = relay.TupleGetItem(func_1987_call(), 0)
output = relay.Tuple([call_2056,])
output2 = relay.Tuple([call_2057,])
func_2067 = relay.Function([], output)
mod['func_2067'] = func_2067
mod = relay.transform.InferType()(mod)
mutated_mod['func_2067'] = func_2067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mutated_mod.get_global_var('func_2067')
call_2068 = func_2067_call()
output = call_2068
func_2069 = relay.Function([], output)
mutated_mod['func_2069'] = func_2069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2073 = relay.var("var_2073", dtype = "int32", shape = ())#candidate|2073|()|var|int32
var_2074 = relay.var("var_2074", dtype = "int32", shape = (11, 7, 2))#candidate|2074|(11, 7, 2)|var|int32
bop_2075 = relay.multiply(var_2073.astype('int32'), var_2074.astype('int32')) # shape=(11, 7, 2)
func_1980_call = mod.get_global_var('func_1980')
func_1982_call = mutated_mod.get_global_var('func_1982')
call_2078 = func_1980_call()
call_2079 = func_1980_call()
output = relay.Tuple([bop_2075,call_2078,])
output2 = relay.Tuple([bop_2075,call_2079,])
func_2088 = relay.Function([var_2073,var_2074,], output)
mod['func_2088'] = func_2088
mod = relay.transform.InferType()(mod)
var_2089 = relay.var("var_2089", dtype = "int32", shape = ())#candidate|2089|()|var|int32
var_2090 = relay.var("var_2090", dtype = "int32", shape = (11, 7, 2))#candidate|2090|(11, 7, 2)|var|int32
output = func_2088(var_2089,var_2090,)
func_2091 = relay.Function([var_2089,var_2090,], output)
mutated_mod['func_2091'] = func_2091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_2093 = func_1262_call()
call_2094 = func_1262_call()
output = relay.Tuple([call_2093,])
output2 = relay.Tuple([call_2094,])
func_2122 = relay.Function([], output)
mod['func_2122'] = func_2122
mod = relay.transform.InferType()(mod)
mutated_mod['func_2122'] = func_2122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2122_call = mutated_mod.get_global_var('func_2122')
call_2123 = func_2122_call()
output = call_2123
func_2124 = relay.Function([], output)
mutated_mod['func_2124'] = func_2124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_2125 = func_555_call()
call_2126 = func_555_call()
output = call_2125
output2 = call_2126
func_2132 = relay.Function([], output)
mod['func_2132'] = func_2132
mod = relay.transform.InferType()(mod)
output = func_2132()
func_2133 = relay.Function([], output)
mutated_mod['func_2133'] = func_2133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1985_call = mod.get_global_var('func_1985')
func_1987_call = mutated_mod.get_global_var('func_1987')
call_2150 = relay.TupleGetItem(func_1985_call(), 0)
call_2151 = relay.TupleGetItem(func_1987_call(), 0)
func_1517_call = mod.get_global_var('func_1517')
func_1520_call = mutated_mod.get_global_var('func_1520')
const_2177 = relay.const([4.513206,8.765420,-3.604923,-2.293379,-4.573459,-5.041993,-0.967225,-9.789059,0.171596,6.267898,0.556330,8.977746,-4.335893,9.700563,-6.057370,-3.870415,5.553861,-2.169524,-9.595590,2.951260,-7.096468,-9.720824,7.295620,-8.278808,-6.665031,8.327964,3.483838,0.836766,-5.238368,9.522373,-4.369868,-0.559160,4.887632,7.309730,3.766603,-9.407053,9.678298,0.583134,-4.206832,0.867231,5.809712,-2.245368,0.238590,-4.342275,7.964961,-0.603874,-4.793907,8.966634,4.954222,6.900579,5.566484,2.517987,-8.392101,2.907673,-8.511724,4.501178,-0.117818,-7.651496,-9.389140,5.834209,-6.196156,1.045515,-5.345763,-0.633099,2.252722,-6.298574,-4.396362,9.579505,-1.810943,0.776161,0.939137,2.854815,-5.770387,-3.229157,-2.603673,-4.210945,5.646593,7.998646,4.803140,-2.616154,9.121539,5.149074,-0.273207,-8.295500,-5.707344,7.290146,8.766198,6.548877,0.530319,-1.803040,8.294280,-5.017028,-8.348866,-6.476663,-5.972596,-1.786360,8.961154,2.498994,7.048392,5.220574,4.982064,0.066623,8.434992,-9.357196,-3.297694,-8.537169,-5.729761,3.684365,5.719118,-8.833877,-2.650365,4.598704,-4.085393,5.757203,8.538667,6.619071,4.376299,7.458682,9.829814,9.772112,-2.913107,2.495310,3.411727,6.072762,-0.576304,-2.142773,-6.522358,8.750148,-6.186598,-4.930164,8.913496,-8.261847,1.204509,3.975695,8.683933,-5.318091,-9.276670,-5.301988,-6.139060,-0.519902,9.896285,7.026640,8.287980,5.780887,4.254026,3.206242,8.682589,-1.430454,8.731985,-0.166400,-1.916936,-7.148443,-7.401024,-0.350563,-9.999590,-2.972359,3.349999,0.138217,-0.674668,-1.008761,4.110832,-4.269947,5.530019,5.534737,-0.054781,-9.503679,-4.541526,2.599107,9.032259,-6.454563,1.453513,-6.245053,-0.194351,2.460601,-0.292185,3.474230,7.740476,-5.244699,-2.305761,4.637170,4.583874,2.026995,-8.584704,6.017857,0.571982,3.207813,-6.754320,0.203374,1.261808,6.013948,1.454285,0.686176,-6.326573,9.713645,5.330064,8.612134,-8.112245,2.881676,2.266371,3.809373,-9.890466,8.028076,-9.127902,6.856259,1.585179,8.264740,5.282490,3.358315,-3.060414,-7.019474,4.688050,7.535826,4.092924,-8.468281,2.386445,7.585864,-5.598806,-1.585007,8.947952,8.123285,-8.359071,0.879001,8.523975,1.863104,-2.948692,-3.225064,8.879821,2.474985,-0.171181,6.595185,2.054162,6.355826,-2.370492,-5.691148,8.466545,-5.741217,-6.275765,-7.556020,7.315864,-3.865257,0.154466,1.222146,-2.653389,4.851012,0.404977,-3.328807,9.298130,-7.901313,9.060318,-5.314906,-5.296341,-9.783360,-6.166157,7.576225,-3.802176,0.964539,-8.291334,-7.837735,-4.920677,3.188695,-7.221075,-9.046042,5.289887,8.854606,-0.836559,5.473510,3.052787,7.620768,-6.812635,4.949136,-7.356121,4.494884,0.850940,0.133205,5.286667,7.345120,-8.526495,-2.334199,6.867031,-4.732224,4.070753,-2.036437,7.444369,-1.830503,-9.684396,-1.489502,1.440837,6.679750,0.236368,-7.750145,6.470829,5.920151,4.541552,2.258349,7.235459,-8.797344,-5.447675,2.099511,9.813299,1.996900,7.802802,-2.512418,9.064691,-3.484470,1.881709,-9.703145,-5.367025,-4.900697,5.353683,-0.012735,-0.776144,4.487471,-5.424352,-0.639466,-0.104638,9.950977,-2.194774,-2.529053,-1.952290,-2.809948,5.665541,-9.546738,-9.237794,-0.819870,0.910954,6.996698,3.303803,-5.771643,1.783918,4.302202,-4.710510,-1.965039,2.174284,2.308461,7.415395,1.609542,-1.248460,-0.550085,-5.387007,-8.082468,-5.961412,8.565693,-3.684095,4.177360,5.468022,5.282611,2.713465,-6.963930,7.669707,-0.261920,5.331652,9.392825,-6.063807,0.306133,-3.647562,-6.021139,3.373488,0.203321,7.681309,5.289590,7.646191,-3.437763,-8.802972,0.251213,-9.283956,-9.056602,4.897360,6.018537,-2.965180,9.591743,-2.903378,7.671481,5.719994,1.979973,0.958682,7.971928,-4.068743,9.436223,-4.675078,-5.665982,9.878635,3.485026,-3.097271,-1.361301,4.523551,-1.767816,2.789730,9.224193,-0.265933,4.148175,7.394238,-2.740954,-1.158668,6.149196,1.503089,-2.601652,-4.953950,4.982012,-4.678944,3.484419,0.528138,-7.895436,1.442105,-6.757945,-8.812456,0.453140,-2.215221,1.675674,-4.191058,-4.909655,-9.014208,-6.848088,-0.366075,-0.906730,9.624018,-0.003687], dtype = "float64")#candidate|2177|(416,)|const|float64
call_2176 = relay.TupleGetItem(func_1517_call(relay.reshape(const_2177.astype('float64'), [13, 2, 16])), 0)
call_2178 = relay.TupleGetItem(func_1520_call(relay.reshape(const_2177.astype('float64'), [13, 2, 16])), 0)
const_2186 = relay.const([[[0.033920,2.889699,-4.460146,6.761173,-2.295600,-5.408065,9.892799,8.029238,3.585034,1.554780,-7.029104,-9.176851,-2.290070,-5.916943,2.142687],[-3.913328,-5.537852,9.448813,3.224471,1.188125,-7.771835,3.494536,-7.924614,-1.137947,7.681912,6.357970,-7.496674,-7.653322,-1.055732,9.117969],[-5.469819,2.293309,3.665745,6.508973,4.132905,7.635887,8.953985,1.823856,7.633064,6.328719,-8.636378,-1.653750,-8.513488,7.405702,4.853106],[-6.538770,0.835840,-0.492641,6.891382,3.541988,9.654812,-7.089481,-4.739787,-4.362905,8.487145,-9.992636,-4.814297,8.076636,0.994869,7.001834],[0.605865,-0.953876,2.995309,0.284781,-7.578567,8.916490,4.055966,-8.674737,-4.167857,5.811923,-7.447008,4.999767,-4.744445,-6.606921,7.487118],[9.667373,9.393820,3.143212,-1.742838,2.516459,-5.168073,-2.328538,-8.140481,1.703831,9.206856,3.920087,-5.229165,-1.381741,1.916706,-9.736764],[0.202156,2.084767,8.003008,3.122577,9.515650,-1.156396,-6.970989,-2.056089,-9.661041,9.886861,-5.484380,3.761309,8.154301,-6.391470,-2.734840]],[[6.616452,-0.956390,6.230884,-1.492205,5.360299,9.475278,9.017695,2.810278,9.794307,7.154996,1.957213,9.376821,-2.110087,6.078815,7.040329],[1.255178,1.352103,9.195806,7.973809,6.160301,7.076729,-4.994526,-8.189411,-2.730407,4.495663,-5.249800,-2.865816,-1.309428,-4.444456,6.966617],[2.642826,1.095414,-1.659382,9.991661,-5.594186,-6.185555,-1.791517,-8.687279,-1.706931,-7.944580,-3.300246,6.381996,-2.500160,4.193953,8.728391],[-8.751367,3.369252,6.748974,-8.857003,6.193042,1.994406,-0.782178,-1.489204,3.957214,-2.941207,6.544208,-1.669300,8.699973,-1.122012,-5.175992],[6.659252,-3.415293,-0.326642,-7.877876,5.043108,6.571769,7.130286,-4.031787,-2.424033,1.568311,2.746633,3.958253,0.655895,-8.826946,5.033501],[4.141846,4.651963,2.837697,5.654028,-8.291698,0.999758,4.355261,8.073307,-7.445991,1.163301,-3.153291,-9.669412,4.888912,-7.725123,4.219378],[-9.435761,-0.210304,7.851633,5.080220,4.011820,8.839127,9.316684,-2.205905,-5.108638,-3.896930,-1.226594,-7.189527,-7.725198,-9.270811,1.348223]],[[-5.339099,-2.681026,9.286597,-5.189389,-8.574351,-5.662514,-4.715705,-4.125296,-3.164988,3.806282,8.100634,-6.862988,1.281639,4.954635,4.270070],[5.177272,-4.884668,0.829676,8.431466,-9.907007,0.789014,8.669208,-6.231979,-9.079680,-5.271837,2.786039,5.194354,0.180659,-5.733471,-8.999617],[8.445937,0.129121,3.638101,7.651753,-2.137307,-8.173107,-0.408362,2.190763,-2.456028,-0.817859,0.386103,-9.443047,1.028440,4.776982,-6.149227],[8.004384,-7.800763,4.837913,3.767930,-1.337932,-4.604898,-9.188100,4.397188,8.486115,3.513151,-0.759352,7.123034,-7.633696,5.613111,-9.413500],[3.052848,9.915223,-0.374292,-7.543646,-2.913618,3.960237,0.288922,8.384551,7.744337,-9.895089,-4.819843,3.129658,0.460558,-6.732646,-7.223260],[-1.876974,4.406595,0.945109,-2.719519,3.686455,-3.635479,8.994414,-6.819798,-1.167730,9.165191,3.575527,-6.343749,8.189674,-4.721004,-8.089149],[-6.379984,-4.928888,-9.710385,8.060686,1.984560,0.693805,8.462930,-4.403522,-0.979423,3.446279,9.975740,4.456885,-8.537002,-8.683639,0.470743]],[[7.492054,3.668217,2.299496,2.258075,8.178949,4.602121,-0.089336,3.624582,2.868379,-2.643310,-0.440300,8.020992,5.030654,-5.133694,-4.454758],[-0.192006,-3.503314,4.270953,1.731310,-4.669649,-9.472609,-6.280768,6.855748,9.332034,3.289218,4.984705,2.530514,9.419659,-0.747191,-1.895423],[9.273370,-2.877372,6.372707,3.276615,-5.414121,3.930063,-5.915461,-5.788899,7.212261,-8.991483,1.145228,-6.241092,-8.817452,7.070761,-5.413564],[3.719496,-3.348811,8.528176,0.220765,-1.342717,-6.388673,-4.401865,6.869269,-1.893416,-0.263628,6.019310,6.258854,9.213242,-0.898404,-3.622373],[-4.177512,-5.360312,-1.902856,-3.098603,8.879878,7.131739,-4.786504,-5.492768,-7.834651,7.548979,0.435339,-6.251638,-5.117490,-9.439784,-4.512353],[4.850353,-3.964927,2.745625,3.454746,-6.853215,3.208468,6.892801,-4.847155,3.662102,-8.461363,8.429130,-8.002606,-5.718516,9.525436,6.783723],[-9.773105,9.075049,-6.251071,3.897187,-3.262440,-8.813798,1.053839,-2.161824,6.238190,9.231632,-3.262976,0.425965,-3.776644,3.894226,-6.759006]],[[-0.835801,-7.062510,2.766207,-5.201986,-9.052661,3.762175,-7.865196,-9.232960,-7.613252,6.958709,-9.717784,-7.642180,-9.087878,3.413596,1.079112],[-4.393307,-9.821062,7.087505,3.825585,-0.250884,-0.980898,8.739319,8.809563,9.601192,0.422725,4.843199,-3.506038,-4.747145,-9.849331,1.572468],[9.451238,1.637809,-2.999309,-9.356518,0.015203,5.543499,-1.587465,-3.540180,6.413269,1.969086,-6.062765,-6.571883,-4.478131,9.546543,-0.614626],[-9.356980,-9.433482,-6.717370,-2.166508,0.326313,1.563186,-4.124453,5.956520,6.059618,-5.703928,2.250190,7.770998,-4.130707,-2.869093,3.787913],[-0.435811,1.325481,1.509440,6.579547,-9.324561,7.892000,2.265244,9.508155,3.284434,7.413014,8.276070,-0.424633,-5.551848,-6.273685,3.264751],[-5.853351,-6.475193,-5.067899,0.049794,0.250222,-5.790975,3.148153,-9.905404,-0.402011,-0.238843,-5.440044,0.734701,-0.856357,3.391007,-8.405118],[-2.940765,-7.324874,-3.711675,6.930706,-4.303653,0.684660,9.753843,-8.847912,4.461477,2.588843,4.655649,2.974636,6.085260,-6.499567,1.450663]],[[7.410764,9.893746,-2.388149,-9.900670,1.203603,-5.111924,-1.974497,-1.279258,-9.645672,4.031931,4.171380,2.248808,1.988980,-4.338424,6.301844],[8.469724,-8.345397,-9.054589,-9.926935,-8.532647,1.498343,1.779591,-8.086144,-9.629590,9.122028,4.622345,-6.109418,-0.637301,1.396301,-2.163453],[-2.181166,1.481462,-9.936955,9.546490,-1.072045,1.300985,-6.312640,4.941746,-8.531274,1.296672,-3.238067,-7.660710,6.552814,-3.165160,4.594794],[9.139956,-4.036367,-8.407302,-8.810908,-6.751344,7.011443,-5.845592,-0.868611,1.875614,-5.582255,-9.815244,6.442125,8.742238,3.641360,7.921552],[-8.001719,-9.431391,5.163749,-6.747550,-9.086980,-0.441389,-8.492679,-4.088389,3.725122,3.306469,-0.235697,-6.980049,-0.460996,6.896090,0.672698],[-8.110840,5.778204,7.282271,-2.577745,0.909544,-6.788147,-6.475398,-4.453346,1.936244,-0.794773,0.113429,-2.185557,-3.590330,-0.840443,8.187402],[-5.965313,6.024293,-7.433421,-6.264093,-3.754471,-8.103163,-8.672792,9.149675,8.313037,-1.823800,4.559367,-9.090771,7.192661,-0.829731,-4.466024]],[[1.306651,-6.449008,4.798936,4.237567,6.847436,3.672576,-2.624497,-7.560908,-6.803857,-5.340322,-4.370249,0.478172,-2.030994,0.330755,-0.493264],[-6.214801,7.578157,-8.148567,6.296541,-8.828562,-1.525106,-8.824801,8.786132,-9.656406,-1.925145,-6.612225,4.101948,-1.420465,-7.664206,-5.093962],[5.012386,9.107066,4.403064,4.410995,6.383271,6.092085,3.227966,7.849364,5.636064,3.164879,-9.920938,-8.324285,0.088830,2.676300,-8.866337],[-1.176927,-7.646234,-0.410656,5.284887,9.199043,-2.548315,-8.832424,-5.846130,-0.532061,-9.011759,-6.850767,-9.733713,-4.246594,4.497252,2.127416],[2.453805,7.278525,9.069045,-8.432361,-8.136105,-6.447799,-1.398901,-2.344056,-6.641983,-6.976979,-1.635297,2.123762,7.226966,-6.241285,-1.379495],[1.262716,4.689506,5.893796,-3.082351,-4.923157,0.588932,3.274625,4.389881,4.966184,0.968113,-9.615160,-1.025591,-1.984795,3.061758,-7.916214],[-1.863299,-3.193747,-5.279069,0.237951,8.675817,3.654124,-7.612137,-7.822857,5.851346,8.890891,-4.926367,-4.263855,2.301615,-3.344889,-0.889540]],[[-7.322754,-1.887451,-6.571216,8.325120,-4.385673,2.830190,0.695719,-7.916064,-7.145030,7.239160,-0.552718,3.093867,-1.518550,3.335756,-5.368475],[7.676099,7.864647,2.850242,3.693920,7.472422,1.425703,1.351332,-9.852373,-9.117170,1.512097,-9.407507,3.600852,7.674510,-8.216036,2.646308],[-1.716990,-0.607506,-3.689799,9.168006,-5.487939,6.556901,-2.091263,-4.995768,4.463097,3.757403,9.509820,-0.975195,2.912171,-9.721371,3.659933],[-0.579394,2.621408,2.609983,-0.205586,1.752621,9.666992,-3.195964,7.714555,-5.756801,-5.542831,-3.450053,6.635801,-9.521716,-8.664327,-8.728771],[-1.104929,6.187268,5.783121,-4.120782,7.483332,-1.328015,-3.752270,-3.652741,-5.368670,-4.056469,-6.352651,-1.323612,-6.427282,5.411582,6.463143],[-2.988961,-1.017682,2.827243,-7.400341,-0.617741,1.290848,-6.363893,2.389313,-8.497428,6.761462,-4.236334,1.235729,6.204190,-0.241618,-7.027092],[-9.868725,5.138661,-4.486841,2.269329,-3.627946,-6.588433,-9.016206,-0.555802,-1.513888,2.574640,5.950224,0.944397,-6.543147,-7.540196,5.514074]],[[4.432699,5.115095,6.705163,6.180363,-7.321755,-9.642900,-9.779098,0.593530,-7.802430,4.318277,7.566286,-4.086317,3.921223,6.868597,8.168846],[-5.755338,0.030216,7.798073,4.882373,6.013840,7.001724,-3.445328,-4.716819,-9.497969,7.933779,8.294356,-0.429420,-8.739075,-4.656614,-5.097422],[-7.083880,-5.820498,-3.006845,-1.440492,5.755185,-0.774004,2.485029,-6.644552,-5.027981,9.860415,-3.832127,8.156533,-4.239810,-4.247947,0.258853],[-5.863581,8.089242,1.730400,-6.782051,3.354956,4.218484,-0.449073,-6.581048,3.224173,0.895706,7.024209,1.195005,7.646037,-5.802864,-2.040649],[-8.650999,4.393944,-9.813239,9.838826,7.533754,-0.591980,-2.500694,6.725201,4.822061,-5.111136,6.694807,-1.701894,-5.784297,-5.789603,7.022418],[-4.276435,9.837625,4.573335,3.570321,5.830437,9.856126,8.294958,-2.944322,-8.758443,7.852761,7.094855,-5.589298,6.553973,4.353099,7.732961],[5.097692,-6.699704,-1.085074,-5.737379,-9.002768,-5.785370,0.905112,-1.399569,-4.990713,1.068875,6.895325,6.890031,-9.439257,-3.830135,-9.294344]],[[-7.651116,0.697176,4.997686,-0.808106,8.953398,5.524223,-8.551360,-3.339780,-1.504389,7.738984,-4.210778,-5.116092,8.215783,8.795948,-5.552197],[2.846014,3.040910,9.006750,-0.404609,-4.815618,6.947013,6.626836,-7.691008,-9.777811,8.906147,-1.075881,-8.303231,6.739046,3.105833,2.022268],[-4.425431,-9.262275,6.086870,-1.167122,6.491613,-1.479306,-3.744820,-5.987759,0.320612,-1.705276,-5.751774,-1.462087,9.302132,-1.476021,-2.113732],[5.427839,8.142098,-1.068524,4.576603,-4.388769,9.879245,3.889260,0.073163,-3.020074,-8.905079,9.864900,0.160531,5.344366,4.738459,2.030491],[0.506578,-0.665661,-1.987025,-0.372215,-0.280734,-8.344583,5.424357,1.178805,9.134600,1.851791,-1.639228,3.256563,-7.463282,9.898757,-6.133296],[-8.508918,7.906734,-0.719049,5.035704,6.489464,-5.951148,-3.077522,-2.264764,-3.288009,2.658585,4.327123,-2.468356,-7.524220,-8.755411,-8.846299],[-9.906636,-0.591907,8.373373,-5.520135,0.111741,-3.357326,7.311044,0.166032,3.126138,-8.741368,0.718236,-7.806602,-4.484876,4.560707,-8.885858]],[[5.216464,-0.733261,-2.113880,8.708920,-1.971406,1.456064,-6.989057,9.145315,-7.666355,7.476227,-8.352849,-1.713388,-6.407610,2.497036,0.510662],[6.394600,-4.546228,9.647479,8.463129,6.739632,7.804539,3.594433,-3.019881,-6.316484,2.078417,6.531175,-8.908911,-8.436332,-2.322754,-7.894346],[-8.397702,-1.295702,0.233848,8.274036,-1.134092,2.003760,2.270021,9.310883,9.932833,-6.917301,7.990349,-7.517378,-5.760668,-7.472424,-1.615336],[-4.787443,-8.448539,-0.610362,-3.158276,1.148062,-8.248623,4.061612,1.059381,8.724440,-7.320239,2.321909,8.562742,4.227336,-8.180470,-0.389764],[7.096562,2.836091,-8.222011,3.658010,-0.406234,7.962028,5.292820,-3.778318,-8.185880,-9.115799,-8.234727,-8.755396,5.432776,7.469416,-0.974268],[2.395862,-3.391553,8.903378,-1.580575,-0.252221,2.355811,6.053247,-9.694488,7.744309,-4.076503,4.113811,6.987285,-6.514705,8.057112,8.500769],[-4.589030,9.669635,5.120724,0.241201,-4.326706,-9.569063,4.698856,-2.296149,-5.742399,-9.912668,3.511927,8.614228,-9.507723,-5.817216,0.900171]],[[3.107110,-4.452061,-8.732988,9.920049,5.964853,9.269309,-6.710223,0.176441,-6.013739,-1.958039,-5.170373,-4.790701,2.213770,-3.129724,3.695126],[6.654829,3.699544,6.064800,9.175744,1.762369,-2.233729,6.105997,0.706868,-3.740620,-4.566720,8.380123,-3.783158,-3.399389,-2.947119,0.261868],[-6.061839,-2.568732,-7.048830,0.783405,-8.421869,-8.496047,-9.046897,3.485322,8.503868,3.060921,4.434003,-4.532223,2.185600,0.583959,5.423709],[1.225280,7.351284,8.794139,0.693813,1.286035,4.600817,2.146342,4.243088,-1.770366,-6.214201,-8.213765,-7.687811,7.548042,6.962875,3.635933],[-9.007354,-5.942197,-9.509200,3.625795,2.183985,7.130943,6.678207,-9.548559,-0.079237,6.454109,-2.649272,-5.450414,-9.572158,-6.919223,-7.528168],[6.048761,-8.444641,-0.747796,3.923210,8.124001,-9.158605,-4.774087,9.520204,1.768837,3.931841,-0.592532,-3.207253,-0.374786,-4.843423,9.421874],[-0.316832,8.007886,-6.457501,1.808093,-8.291159,-2.195684,7.131540,-7.436185,7.184845,-2.889563,-7.061981,6.110397,4.304092,3.503428,-7.654678]],[[-8.260164,8.919474,-1.735822,0.475526,-2.930947,-4.953353,1.957056,2.777645,-8.211403,0.415259,2.008485,5.104104,-5.426160,-6.764632,-5.492454],[-4.589549,5.575599,8.360250,-0.725263,1.138060,-1.271237,7.409377,7.147153,0.913196,-4.582316,5.269371,-5.045631,-5.698426,7.890562,-8.634531],[2.398680,8.824767,0.927872,-5.608378,4.438195,-4.436923,3.709681,4.769023,-7.504574,-4.406858,5.302398,-2.292755,-7.391322,0.844319,3.873290],[-2.159356,-2.083994,6.604078,-7.284294,8.458071,5.759096,1.537321,-8.398764,6.746123,4.099256,7.278647,3.591056,-2.361818,-6.724333,-3.598131],[1.634558,-0.818776,-2.129032,6.977293,-1.554324,-5.851022,-1.089928,-0.603014,9.552442,2.823067,-1.120884,4.731178,-8.815724,9.690935,2.863024],[-3.482486,-0.932715,8.008502,-6.710515,9.307980,8.124785,-9.374054,4.363128,-2.892560,0.339047,1.539781,-9.243791,8.518997,-4.312465,3.924862],[-6.611608,3.693023,0.592452,4.625990,8.534950,-4.507347,7.592699,3.079693,5.392059,7.512695,1.933643,-0.309833,6.224993,4.906734,9.803149]],[[-4.284785,-7.508084,-7.880306,-9.360910,-2.252516,9.202859,-6.395502,9.730185,8.747645,-8.257420,3.321140,-8.596190,9.640673,-5.435260,3.750985],[-3.246455,5.737125,3.532732,-9.228528,-6.241795,-6.896269,7.513287,-3.360581,-0.604477,3.796354,-3.035641,-5.862491,4.106513,-4.901143,-8.360171],[7.779747,3.240185,-7.319670,-8.260286,-4.490739,8.604022,-7.405482,-5.002913,6.449767,0.921266,6.168781,-8.655098,-8.758676,5.966484,7.463706],[-6.519894,-2.934980,7.708626,4.290199,0.767487,-1.354683,-8.250878,7.760381,1.365773,6.880764,-1.534029,-8.137428,-9.884333,-6.011683,-1.143668],[-6.918344,-1.524743,-4.316153,1.994491,2.420267,-9.118821,9.537042,2.563696,5.800858,9.358222,9.194599,8.846846,-7.419310,-3.752710,6.065512],[-3.949954,2.297268,7.775261,2.674425,8.935974,5.651011,-0.750724,-2.178221,-6.496505,2.244580,-5.715018,5.156303,-1.335892,-6.715729,-8.588099],[3.386707,3.961297,6.107852,1.979228,0.288683,0.176164,-4.197183,6.300196,9.147863,-7.312452,1.083146,3.178116,-8.053663,2.385964,-7.421526]]], dtype = "float64")#candidate|2186|(14, 7, 15)|const|float64
bop_2187 = relay.multiply(call_2150.astype('int16'), relay.reshape(const_2186.astype('int16'), relay.shape_of(call_2150))) # shape=(14, 7, 15)
bop_2190 = relay.multiply(call_2151.astype('int16'), relay.reshape(const_2186.astype('int16'), relay.shape_of(call_2151))) # shape=(14, 7, 15)
func_1302_call = mod.get_global_var('func_1302')
func_1304_call = mutated_mod.get_global_var('func_1304')
var_2206 = relay.var("var_2206", dtype = "float32", shape = (72,))#candidate|2206|(72,)|var|float32
call_2205 = relay.TupleGetItem(func_1302_call(relay.reshape(var_2206.astype('float32'), [6, 12])), 4)
call_2207 = relay.TupleGetItem(func_1304_call(relay.reshape(var_2206.astype('float32'), [6, 12])), 4)
output = relay.Tuple([call_2176,const_2177,bop_2187,call_2205,var_2206,])
output2 = relay.Tuple([call_2178,const_2177,bop_2190,call_2207,var_2206,])
func_2231 = relay.Function([var_2206,], output)
mod['func_2231'] = func_2231
mod = relay.transform.InferType()(mod)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2232 = relay.var("var_2232", dtype = "float32", shape = (72,))#candidate|2232|(72,)|var|float32
func_2231_call = mutated_mod.get_global_var('func_2231')
call_2233 = func_2231_call(var_2232)
output = call_2233
func_2234 = relay.Function([var_2232], output)
mutated_mod['func_2234'] = func_2234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1202_call = mutated_mod.get_global_var('func_1202')
call_2264 = relay.TupleGetItem(func_1201_call(), 2)
call_2265 = relay.TupleGetItem(func_1202_call(), 2)
output = relay.Tuple([call_2264,])
output2 = relay.Tuple([call_2265,])
func_2276 = relay.Function([], output)
mod['func_2276'] = func_2276
mod = relay.transform.InferType()(mod)
mutated_mod['func_2276'] = func_2276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2276_call = mutated_mod.get_global_var('func_2276')
call_2277 = func_2276_call()
output = call_2277
func_2278 = relay.Function([], output)
mutated_mod['func_2278'] = func_2278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_2289 = func_1558_call()
call_2290 = func_1558_call()
output = relay.Tuple([call_2289,])
output2 = relay.Tuple([call_2290,])
func_2296 = relay.Function([], output)
mod['func_2296'] = func_2296
mod = relay.transform.InferType()(mod)
output = func_2296()
func_2297 = relay.Function([], output)
mutated_mod['func_2297'] = func_2297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_2300 = relay.TupleGetItem(func_1336_call(), 0)
call_2301 = relay.TupleGetItem(func_1337_call(), 0)
output = relay.Tuple([call_2300,])
output2 = relay.Tuple([call_2301,])
func_2306 = relay.Function([], output)
mod['func_2306'] = func_2306
mod = relay.transform.InferType()(mod)
output = func_2306()
func_2307 = relay.Function([], output)
mutated_mod['func_2307'] = func_2307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1985_call = mod.get_global_var('func_1985')
func_1987_call = mutated_mod.get_global_var('func_1987')
call_2345 = relay.TupleGetItem(func_1985_call(), 0)
call_2346 = relay.TupleGetItem(func_1987_call(), 0)
output = relay.Tuple([call_2345,])
output2 = relay.Tuple([call_2346,])
func_2356 = relay.Function([], output)
mod['func_2356'] = func_2356
mod = relay.transform.InferType()(mod)
output = func_2356()
func_2357 = relay.Function([], output)
mutated_mod['func_2357'] = func_2357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mod.get_global_var('func_2306')
func_2307_call = mutated_mod.get_global_var('func_2307')
call_2367 = relay.TupleGetItem(func_2306_call(), 0)
call_2368 = relay.TupleGetItem(func_2307_call(), 0)
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_2378 = relay.TupleGetItem(func_2122_call(), 0)
call_2379 = relay.TupleGetItem(func_2124_call(), 0)
func_2042_call = mod.get_global_var('func_2042')
func_2043_call = mutated_mod.get_global_var('func_2043')
call_2389 = relay.TupleGetItem(func_2042_call(), 0)
call_2390 = relay.TupleGetItem(func_2043_call(), 0)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_2393 = relay.TupleGetItem(func_422_call(), 3)
call_2394 = relay.TupleGetItem(func_423_call(), 3)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_2402 = func_2132_call()
call_2403 = func_2132_call()
output = relay.Tuple([call_2367,call_2378,call_2389,call_2393,call_2402,])
output2 = relay.Tuple([call_2368,call_2379,call_2390,call_2394,call_2403,])
func_2404 = relay.Function([], output)
mod['func_2404'] = func_2404
mod = relay.transform.InferType()(mod)
mutated_mod['func_2404'] = func_2404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2404_call = mutated_mod.get_global_var('func_2404')
call_2405 = func_2404_call()
output = call_2405
func_2406 = relay.Function([], output)
mutated_mod['func_2406'] = func_2406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1835_call = mod.get_global_var('func_1835')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_2409 = relay.TupleGetItem(func_1835_call(), 0)
call_2410 = relay.TupleGetItem(func_1837_call(), 0)
output = call_2409
output2 = call_2410
func_2427 = relay.Function([], output)
mod['func_2427'] = func_2427
mod = relay.transform.InferType()(mod)
mutated_mod['func_2427'] = func_2427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2427_call = mutated_mod.get_global_var('func_2427')
call_2428 = func_2427_call()
output = call_2428
func_2429 = relay.Function([], output)
mutated_mod['func_2429'] = func_2429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2430 = relay.var("var_2430", dtype = "bool", shape = (16, 5, 10))#candidate|2430|(16, 5, 10)|var|bool
const_2431 = relay.const([[[False,True,True,True,True,False,True,True,False,False],[True,True,False,False,False,False,True,False,False,False],[False,False,False,False,False,True,True,False,False,False],[True,True,True,False,False,False,False,True,True,True],[True,False,False,False,True,False,False,False,True,True]],[[True,True,True,True,True,True,True,True,True,True],[True,False,False,False,True,False,True,True,True,False],[False,True,True,False,True,False,True,True,False,False],[False,True,True,True,True,False,False,False,True,False],[True,False,False,False,True,True,False,False,True,False]],[[False,True,True,True,False,False,True,True,True,False],[True,False,True,False,True,False,False,False,False,False],[False,False,False,False,False,True,False,False,True,True],[False,False,False,True,True,False,True,True,True,True],[True,False,True,False,False,False,True,True,False,True]],[[True,False,True,True,True,True,True,True,False,False],[False,False,False,False,False,False,True,True,True,False],[False,False,True,True,False,True,False,True,False,False],[True,True,True,False,True,False,False,False,True,False],[False,True,False,True,True,False,True,False,False,False]],[[True,False,False,False,False,False,True,False,False,False],[False,True,True,True,True,False,True,True,False,False],[True,True,True,False,False,True,False,True,True,False],[True,False,True,True,False,True,True,False,True,True],[False,True,False,True,True,False,False,False,True,False]],[[True,True,True,False,True,True,True,True,False,True],[False,True,True,True,False,False,False,False,False,True],[True,False,False,False,True,True,False,True,False,True],[False,True,False,True,True,True,True,True,True,True],[False,True,True,True,False,True,True,False,True,True]],[[True,True,True,True,True,True,True,True,False,True],[False,False,False,True,False,True,False,True,False,True],[False,False,False,True,False,False,True,True,False,False],[True,True,True,False,True,False,True,False,True,False],[True,False,False,True,True,False,False,True,True,True]],[[True,False,True,True,True,True,False,False,True,False],[True,False,False,False,False,True,True,False,True,False],[False,False,False,False,True,True,True,True,True,False],[False,False,False,False,True,False,True,True,False,False],[False,True,False,False,False,True,True,True,True,False]],[[True,True,False,False,True,True,True,False,False,False],[True,True,False,True,True,False,True,False,True,False],[True,True,True,True,True,True,False,False,False,True],[False,False,False,False,False,False,True,True,False,False],[False,True,True,False,True,False,False,False,False,False]],[[False,True,True,False,True,True,True,True,True,False],[True,False,False,True,False,False,True,False,True,False],[False,True,True,True,False,False,True,False,True,True],[False,True,True,False,True,False,True,True,True,False],[True,False,False,True,False,True,True,True,True,False]],[[True,True,False,True,False,False,True,True,False,False],[False,True,False,True,True,True,True,False,False,True],[False,True,True,True,False,True,False,True,True,True],[False,False,False,False,True,False,False,True,True,False],[True,True,True,True,True,False,True,False,False,True]],[[True,True,True,True,False,True,False,False,True,True],[True,True,False,True,True,True,True,True,False,False],[True,False,True,True,True,False,True,False,True,False],[False,False,True,True,True,True,False,False,True,True],[True,False,False,True,True,True,True,False,False,True]],[[False,False,True,True,True,True,False,False,True,True],[False,True,True,True,False,True,False,True,True,True],[False,False,True,True,False,False,False,True,False,True],[False,False,True,False,False,False,True,False,False,False],[True,True,False,False,False,False,True,True,True,False]],[[False,False,True,False,True,True,False,True,False,True],[False,False,True,True,False,True,True,True,True,False],[False,False,True,False,True,True,False,False,False,False],[True,True,False,False,True,True,True,True,False,True],[False,True,True,False,False,False,True,False,True,True]],[[False,True,True,True,True,False,False,False,True,True],[False,False,False,False,False,True,True,True,False,True],[False,True,False,True,True,True,True,False,True,True],[True,True,False,True,False,False,True,False,False,False],[True,False,False,True,False,False,False,True,True,True]],[[False,True,False,True,True,True,False,False,True,True],[True,True,False,False,False,False,False,True,False,False],[False,False,False,False,True,False,True,False,True,False],[True,True,False,True,False,True,False,False,True,True],[True,True,False,True,True,False,True,True,False,False]]], dtype = "bool")#candidate|2431|(16, 5, 10)|const|bool
bop_2432 = relay.logical_and(var_2430.astype('bool'), relay.reshape(const_2431.astype('bool'), relay.shape_of(var_2430))) # shape=(16, 5, 10)
var_2442 = relay.var("var_2442", dtype = "bool", shape = (16, 5, 10))#candidate|2442|(16, 5, 10)|var|bool
bop_2443 = relay.left_shift(var_2430.astype('int8'), relay.reshape(var_2442.astype('int8'), relay.shape_of(var_2430))) # shape=(16, 5, 10)
func_1225_call = mod.get_global_var('func_1225')
func_1226_call = mutated_mod.get_global_var('func_1226')
call_2446 = func_1225_call()
call_2447 = func_1225_call()
var_2448 = relay.var("var_2448", dtype = "int8", shape = (16, 5, 10))#candidate|2448|(16, 5, 10)|var|int8
bop_2449 = relay.right_shift(bop_2443.astype('int64'), relay.reshape(var_2448.astype('int64'), relay.shape_of(bop_2443))) # shape=(16, 5, 10)
output = relay.Tuple([bop_2432,call_2446,bop_2449,])
output2 = relay.Tuple([bop_2432,call_2447,bop_2449,])
func_2481 = relay.Function([var_2430,var_2442,var_2448,], output)
mod['func_2481'] = func_2481
mod = relay.transform.InferType()(mod)
var_2482 = relay.var("var_2482", dtype = "bool", shape = (16, 5, 10))#candidate|2482|(16, 5, 10)|var|bool
var_2483 = relay.var("var_2483", dtype = "bool", shape = (16, 5, 10))#candidate|2483|(16, 5, 10)|var|bool
var_2484 = relay.var("var_2484", dtype = "int8", shape = (16, 5, 10))#candidate|2484|(16, 5, 10)|var|int8
output = func_2481(var_2482,var_2483,var_2484,)
func_2485 = relay.Function([var_2482,var_2483,var_2484,], output)
mutated_mod['func_2485'] = func_2485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2490 = relay.var("var_2490", dtype = "float32", shape = (15, 10, 7))#candidate|2490|(15, 10, 7)|var|float32
uop_2491 = relay.tan(var_2490.astype('float32')) # shape=(15, 10, 7)
uop_2496 = relay.log2(uop_2491.astype('float64')) # shape=(15, 10, 7)
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_2508 = func_1262_call()
call_2509 = func_1262_call()
output = relay.Tuple([uop_2496,call_2508,])
output2 = relay.Tuple([uop_2496,call_2509,])
func_2519 = relay.Function([var_2490,], output)
mod['func_2519'] = func_2519
mod = relay.transform.InferType()(mod)
mutated_mod['func_2519'] = func_2519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2520 = relay.var("var_2520", dtype = "float32", shape = (15, 10, 7))#candidate|2520|(15, 10, 7)|var|float32
func_2519_call = mutated_mod.get_global_var('func_2519')
call_2521 = func_2519_call(var_2520)
output = call_2521
func_2522 = relay.Function([var_2520], output)
mutated_mod['func_2522'] = func_2522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_2633 = func_2132_call()
call_2634 = func_2132_call()
uop_2637 = relay.atan(call_2633.astype('float64')) # shape=(14, 7, 15)
uop_2639 = relay.atan(call_2634.astype('float64')) # shape=(14, 7, 15)
func_2427_call = mod.get_global_var('func_2427')
func_2429_call = mutated_mod.get_global_var('func_2429')
call_2645 = func_2427_call()
call_2646 = func_2427_call()
func_1558_call = mod.get_global_var('func_1558')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_2652 = func_1558_call()
call_2653 = func_1558_call()
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_2656 = relay.TupleGetItem(func_2122_call(), 0)
call_2657 = relay.TupleGetItem(func_2124_call(), 0)
output = relay.Tuple([uop_2637,call_2645,call_2652,call_2656,])
output2 = relay.Tuple([uop_2639,call_2646,call_2653,call_2657,])
func_2660 = relay.Function([], output)
mod['func_2660'] = func_2660
mod = relay.transform.InferType()(mod)
mutated_mod['func_2660'] = func_2660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mutated_mod.get_global_var('func_2660')
call_2661 = func_2660_call()
output = call_2661
func_2662 = relay.Function([], output)
mutated_mod['func_2662'] = func_2662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2757 = relay.var("var_2757", dtype = "float32", shape = ())#candidate|2757|()|var|float32
var_2758 = relay.var("var_2758", dtype = "float32", shape = (16, 3, 8))#candidate|2758|(16, 3, 8)|var|float32
bop_2759 = relay.power(var_2757.astype('float32'), var_2758.astype('float32')) # shape=(16, 3, 8)
func_2404_call = mod.get_global_var('func_2404')
func_2406_call = mutated_mod.get_global_var('func_2406')
call_2776 = relay.TupleGetItem(func_2404_call(), 3)
call_2777 = relay.TupleGetItem(func_2406_call(), 3)
output = relay.Tuple([bop_2759,call_2776,])
output2 = relay.Tuple([bop_2759,call_2777,])
func_2779 = relay.Function([var_2757,var_2758,], output)
mod['func_2779'] = func_2779
mod = relay.transform.InferType()(mod)
mutated_mod['func_2779'] = func_2779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2779_call = mutated_mod.get_global_var('func_2779')
var_2781 = relay.var("var_2781", dtype = "float32", shape = ())#candidate|2781|()|var|float32
var_2782 = relay.var("var_2782", dtype = "float32", shape = (16, 3, 8))#candidate|2782|(16, 3, 8)|var|float32
call_2780 = func_2779_call(var_2781,var_2782,)
output = call_2780
func_2783 = relay.Function([var_2781,var_2782,], output)
mutated_mod['func_2783'] = func_2783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2042_call = mod.get_global_var('func_2042')
func_2043_call = mutated_mod.get_global_var('func_2043')
call_2850 = relay.TupleGetItem(func_2042_call(), 1)
call_2851 = relay.TupleGetItem(func_2043_call(), 1)
const_2876 = relay.const([[[-2.853679,3.809874,-4.042657,-7.291243,5.014079,8.682132,5.442246,0.065176,-3.771185,6.407544,9.206163,8.121881,-0.449274],[9.055419,-8.473164,4.686573,1.556225,0.393039,-9.704058,-4.269006,-5.410077,2.738080,7.149048,0.450193,2.381741,-7.051500],[3.981179,-0.539017,-4.298013,-7.975479,2.725786,2.730045,-8.869661,-2.564579,6.335856,-9.516678,-0.194925,9.410167,-4.138105]],[[9.239157,-4.123958,7.432604,-4.067514,7.561951,9.596993,0.757994,8.054773,-1.496223,7.762506,9.317537,2.522878,2.640662],[0.344094,8.942554,9.102764,-6.481792,-4.784754,8.920097,4.386261,-3.731125,-5.076845,8.651291,-6.377486,7.156583,-2.005262],[-9.009003,5.989183,5.849206,2.023993,-3.578241,-8.148217,-4.958825,-1.572030,9.970488,-0.398531,3.245126,1.833594,3.634742]],[[-0.116597,2.837503,3.834906,-2.277452,6.313050,6.987225,0.464399,-9.241228,-5.563505,-7.927405,-0.747242,3.390148,7.961853],[-6.198767,2.562861,0.542664,-8.042428,1.281007,-4.978274,-3.585345,1.574005,-6.549683,-9.137151,-8.821776,3.958961,8.539102],[-0.881000,5.662592,1.732262,-7.214939,2.048806,-0.801652,2.763154,0.922023,-4.609841,9.050614,7.733691,-0.442155,-4.918415]],[[8.451310,2.570209,-2.060577,9.217890,-7.274458,3.529073,5.976502,-8.247503,-1.511066,3.072048,6.206639,-6.013388,-0.422831],[9.854379,3.382101,3.586514,6.965005,2.865752,8.623547,4.046888,-7.801003,-3.547263,3.620196,3.968296,-7.113006,2.786651],[-2.304398,7.079166,-7.402238,8.198219,-7.456744,-4.463214,-5.819835,6.386678,-4.488462,3.380645,4.182077,-0.161890,-3.697833]],[[6.183000,3.834324,-3.167616,-1.921631,-3.402965,-9.909459,-5.287164,-2.620680,1.070118,-3.945628,-7.653655,7.746529,9.301861],[-0.188980,-1.117006,-2.095314,0.142657,-9.916330,4.485227,4.631246,4.693036,-7.469060,0.603565,-5.484357,1.290180,4.751197],[5.671008,8.033885,-6.011246,4.788505,-1.929386,-9.635326,0.630290,3.136539,2.705779,-9.059181,9.376435,-0.636071,9.103308]],[[8.050884,8.986861,4.269820,8.782560,-8.372096,-6.221053,-8.561678,5.542044,-3.736103,-9.777850,4.344843,4.296262,-4.264419],[-7.260681,7.200894,-9.460662,-4.670648,6.961373,-6.037310,-3.937344,-3.944650,-4.270644,6.382313,3.783644,-3.530383,-1.698008],[3.910228,7.098518,-1.934278,-0.801791,-7.177155,-3.259880,7.300027,-7.316032,-1.819880,-6.012106,4.493774,-9.447567,-2.103696]]], dtype = "float32")#candidate|2876|(6, 3, 13)|const|float32
bop_2877 = relay.greater_equal(call_2850.astype('bool'), relay.reshape(const_2876.astype('bool'), relay.shape_of(call_2850))) # shape=(6, 3, 13)
bop_2880 = relay.greater_equal(call_2851.astype('bool'), relay.reshape(const_2876.astype('bool'), relay.shape_of(call_2851))) # shape=(6, 3, 13)
func_1980_call = mod.get_global_var('func_1980')
func_1982_call = mutated_mod.get_global_var('func_1982')
call_2884 = func_1980_call()
call_2885 = func_1980_call()
output = relay.Tuple([bop_2877,call_2884,])
output2 = relay.Tuple([bop_2880,call_2885,])
func_2901 = relay.Function([], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
output = func_2901()
func_2902 = relay.Function([], output)
mutated_mod['func_2902'] = func_2902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1692_call = mod.get_global_var('func_1692')
func_1694_call = mutated_mod.get_global_var('func_1694')
call_2909 = relay.TupleGetItem(func_1692_call(), 0)
call_2910 = relay.TupleGetItem(func_1694_call(), 0)
uop_2912 = relay.sqrt(call_2909.astype('float64')) # shape=(14, 7, 15)
uop_2914 = relay.sqrt(call_2910.astype('float64')) # shape=(14, 7, 15)
func_989_call = mod.get_global_var('func_989')
func_991_call = mutated_mod.get_global_var('func_991')
const_2917 = relay.const([4.016966,2.041754,-5.078911,0.804168,-1.096007,-4.527104,-9.676068,6.332391,8.876356,-5.479628,-8.399097,9.761628,4.514503,-3.783088,-1.911652,9.412039,8.495271,1.958249,1.184674,3.646451,6.341429,5.037195,-0.573579,-1.351566,-7.405487,4.562100,2.669309,0.029644,6.124399,4.958487,2.061908,-7.495363,9.326593,6.185415,-5.316449,0.088673,-5.545872,1.405595,0.076090,-5.936573,-3.480476,-6.934700,-2.822063,-6.186124,4.625843,-1.537849,9.103745,-4.404626,-7.042511,9.778061,-2.483913,-2.539140,-9.711364,4.367361,-4.017818,5.923061,-9.178153,-5.082193,-5.667772,-2.046136,-7.466804,-7.802881,4.859490,-6.774259,-8.004232,-0.097402,-6.226321,2.973460,-2.116636,-5.791810,9.286378,-5.749392,-0.580759,-0.801777,0.851068,-9.077914,1.813243,4.969346,6.850920,-0.739245,-3.256153,-3.206164,-5.970297,4.170419,6.826307,3.236891,5.991249,-2.489851,-1.278886,-8.767456,1.309105,3.658068,-1.645119,-4.642012,-6.533964,3.112291,0.659258,-8.875139,-1.063410,2.395172,1.666544,-3.955555,-9.233888,-4.504045,6.755246,-9.576238,-6.770134,-4.580082,5.192377,-9.817808,8.011869,-5.360127,-2.540642,-7.364211,-4.823046,-9.484870,-9.970699,-7.825810,0.416416,7.564057,-4.424013,1.844178,0.237283,3.016815,-5.706069,5.503554,1.622066,6.056946,-5.494955,-9.221124,6.330687,-6.388775,7.537967,-3.517886,-8.060284,-8.571188,6.194911,2.329958,0.724876,5.040836,-8.634136,5.233970,-1.958415,3.327814,9.495695,9.332126,-7.157656,-6.659033,6.369085,-3.814416,0.961300,-5.061702,8.604824,6.539845,-9.179404,-6.140217,3.564664,-3.233897,-5.212616,-4.646225,-7.707867,-2.767942,-0.303262,-1.637951,3.940751,2.252597,4.673810,-2.801307,2.289407,4.022020,-8.671168,-5.272148,-0.213987,-1.121103,9.034755,-0.302102,-9.776076,-4.439863,1.916977,-7.093040,-4.880761,4.201354,1.893651,-1.569709,-9.604235,-9.339852,0.215903,-3.569755,-0.573567,0.902380,-5.692825,8.348786,-4.065360,5.534088,-1.169552,7.935588,4.983914,8.060998,-5.616941,8.326719,2.462880,7.008356,-4.674945,-8.468302,-8.797687,-9.976696,6.255748,-4.678107,-7.861933,-2.507804,6.023190,3.737730,-3.873852,-9.829880,-8.754972,6.436871,5.586896,-2.756958,2.456016,-1.032610,-3.637687,-1.788554,-6.136854,-2.436944,-0.436224,-7.165533,-7.111461,-3.599437,-7.526913,7.837472,-1.690598,-3.206231,9.873636,2.297123,-4.008613,5.309860,9.132916,-2.617429,-8.088687,-6.498917,3.700133,-5.951900,-6.935794,9.237468,5.195454,5.232567,9.484104,-6.011928,-9.738691,2.914767,5.271213,-4.275262,-2.161030,1.237573,9.622697,4.186593,-7.714332,-6.043531,-5.679909,7.177937,-2.840457,4.804475,-7.295668,-8.058315,-5.927647,2.326401,-9.658542,-9.281068,8.544860,7.257737,6.034848,1.028936,7.457372,-9.589787,1.802237,4.789775,-5.596643,-1.866664,-3.208712,6.120289,-4.199052,7.435548,-4.870075,-5.048534,3.397094,-2.469066,-8.430594,-4.020395,1.972202,-7.069835,-9.777548,-4.761591,-9.463775,1.819312,-5.676143,4.069944,-2.886685,2.905182,-8.249894,-2.187080,-5.490378,-9.898039,-8.910985,-1.704784,5.394336,7.039386,-2.006510,-3.220064,-1.675247,-7.325220,5.872860,9.330196,-0.049508,-7.392254,-9.793429,-5.711293,-6.972570,-7.947025,2.907801,-0.996345,8.557794,-2.689943,-1.155344,-4.845734,-6.192911,3.930593,7.789096,7.948495,9.843995,-4.916112,-8.757373,-7.316964,-3.919472,-8.670998,3.301392,-8.148897,-2.664507,0.467326,-8.880194,5.318448,-9.901919,-5.730811,8.481546,8.605785,8.763581,7.596897,-2.953900,-3.795672,-5.601683,-5.175666,-1.655921,-3.003219,9.894346,6.662303,6.086982,-8.593254,7.664588,0.630205,6.994355,2.533295,8.172145,-0.036903,2.986736,-6.119959,4.191383,3.256263,4.073875,-0.804971,4.913133,-1.052881,-9.945090,-9.488765,7.983047,9.899216,-2.820175,-4.975813,2.897382,7.698676,4.362253,-8.388398,-8.550899,-7.512184,5.496537,-4.203134,-3.019378,8.402584,-3.631616,-9.340708,-8.371309,-4.218073,5.015097,-5.321291,6.149109,9.853790,7.234271,-3.081358,2.157710,5.845895,9.630754,-5.873138,8.900598,6.804693,5.361091,9.299607,0.936964,0.433072,-8.243280,9.835330,8.687331,0.928740,-7.104455,5.906443,-3.137155,-0.915950,-3.610364,-5.923956,-0.752649,3.849007,2.252605,3.064649,-5.527551,0.589098,-0.176734,9.543475,7.183029,-8.290129,-5.008150,-4.301582,7.878759,-8.399635,2.880917,0.704732,-0.340651,4.112960,0.637302,-7.778876,9.619547,8.282216,-6.317752,-3.476849,8.021601,7.458978,-3.536889,-6.321882,-4.943968,8.440142,0.055649,-1.076212,-0.419727,-2.791809,-2.692415,9.921619,-3.389206,-8.514524,3.730524,0.657257,8.216404,-7.850586,-2.755424,1.603592,-0.587647,-6.284303,2.660750,1.116320,-9.663296,-5.463043,3.624597,2.525003,-8.938606,-9.533294,-6.161590,-1.114121,9.264310,1.472584,8.060398,-3.031485,4.696726,-1.469365,4.982203,-3.469587,5.017182,4.781213,0.158330,-5.905926,-9.768193,5.491883,-4.637562,-1.793916,0.101826,5.226296,9.952236,-8.207229,-6.926624,3.510938,-1.789708,-4.444934,-9.652900,-5.595189,-5.245784,7.234882,-4.953417,6.257427,-6.536468,-4.676060,8.836605,7.816393,1.520291,4.901525,-9.133223,-0.489768,1.120187,-5.843136,-0.833840,0.020025,0.585154,0.219884,9.792354,8.881168,-6.119455,0.083815,7.067277,-6.671595,-0.879074,9.975106,0.104308,-2.606627,-3.644455,-4.092265,2.974127,0.077658,9.116052,-4.653726,5.497081,-6.975879,5.036327,9.156217,-3.565736,-4.404022,2.001125,5.425930,4.282737,2.525378,-7.204875,-9.163824,0.154894,0.593338,-7.691538,-8.288047,4.234589,8.585785,-3.940123,1.798484,2.956227,-7.543396,7.652936,2.721772,3.954868,-4.368088,-9.642075,7.142766,-6.308053,-1.036873,7.038469,-4.728966,-1.989851,9.155871,-9.932782,1.813964,-0.318814,4.101872,-4.078010,-4.656769,4.300396,8.837467,7.804746,-5.197252,9.083705,-1.174335,1.633166,6.226215,1.305669,-6.205908,-8.069269,2.704218,5.587556,-7.037722,9.518223,0.865438,-7.835401,-5.030576,-4.000806,7.048685,-0.966623,-8.730396,7.533261,7.366600,-8.640935,-0.874546,7.022952,-0.823221,-7.655923,-6.005277,0.992095,2.065561,7.131782,-8.804417,-6.545927,3.118751,9.184595,-1.633833,-4.681458,0.520405,1.155691,2.247362,2.224576,-0.835925,-2.005361,0.611900,-5.314227,7.288581,3.115813,8.648395,-9.871063,-0.478756,-7.938188,-3.086701,-9.747156,-4.553814,7.079417,-3.324025,5.947112,4.336336,-7.502810,9.919256,9.874633,-0.941884,-0.869437,-4.444141,-5.836552,4.472276,0.002847,2.450915,4.176305,4.123658,7.953922,-5.880972,-6.174030,5.915256,-9.396373,-6.773824,5.049879,-8.460716,-6.694169,-8.880735,2.845069,-7.973481,8.586297,-7.862180,2.329456,-0.592460,-2.946017,1.621953,-5.425120,3.828644,6.527554,-9.862627,-6.353103,0.199608,5.589254,9.970959,2.322018,5.050415,-2.039280,5.098636,6.930167,-9.273071,-9.151351,9.680407,-5.766033,-2.975275,-1.142389,5.027494,8.774939,0.443907,-2.443311,-8.130630,-8.272191,1.742875,1.591334,-9.583042,-7.848803,-4.307700,-5.693544,8.358482,-4.998641,2.249937,-4.009151,6.946245,5.086914,-5.278352,-5.587717,8.914043,-9.012252,5.202151,8.819060,-4.258687,-6.264867,3.369058,-7.546782,-3.838606,-0.221028,0.277944,-6.182234,-9.536686,-7.113941,2.327129,5.735357,9.934740,3.183460,-9.488215,9.379704,-9.111414,1.881114,-6.266997,-4.904762,0.081665,-2.425488,9.160772,1.232218,-7.090094,-5.411344,-3.470341,-3.674768,2.434513,-4.230010,0.678230,9.530683,-5.400500,4.616982,-0.176205,6.181497,-2.137232,7.130043,-1.659489,8.747154,-8.046100,-6.585447,-5.230815,-6.457256,4.673358,8.001103,-8.686612,-4.827747,1.097315,-2.115588,-4.961065,3.967624,2.927304,-3.742457,-8.309568,3.902081,-3.836860,3.908302,-5.536116,-1.531117,9.394146,-9.141400,-2.012424,-5.184239,-8.350862,-5.388260,-2.132869,3.158710,-9.238461,9.018264,-0.655904,8.312635,-5.894762,0.374462,-1.132284,-4.776077,2.504769,-9.134807,-1.534765,1.422587,0.124712,3.547936,-7.481537,8.402741,-8.630309,1.225589,3.451275,7.378505,4.713451,1.824932,1.815385,3.249488,-2.590861,-5.831177,-8.333829,-4.995306,0.214344,9.243293,-6.066908,-2.296880,4.969170,1.173863,-3.244839,5.018165,7.045570,-6.732219,-0.122632,0.936343,9.962265,5.540959,-4.945977,5.419392,8.458824,3.370407,0.948163,3.610410,7.400597,-2.122019,7.963074,2.396965,-6.210693,5.396457,-8.161658,6.138666,9.869411,0.320999,-1.014445,3.082055,-7.860441,-0.639057,8.753900,-1.082916,-2.249777,-7.334157,-8.405803,3.094594,4.292377,-8.669036,2.622516,2.114672,-5.719476,-5.128281,6.229958,0.502161,-7.022102,-4.312768,1.560747,-2.802918,6.765587,6.938845,9.948840,-5.822817,-5.809814,-3.125439,-6.145978,-9.672240,-9.450181,-7.137147,-9.208366,2.403441,0.272842,-4.303057,0.197912,-3.313710,-4.623261,-0.321609,-2.547747,-1.919207,0.159046,5.265433,7.654053,2.685212,-5.462542,3.750962,9.089636,-7.562438,-5.178189,8.427111,7.205545,-8.645320,7.959129,1.275447,4.831941,-7.683783,-4.360823,1.088932,4.142437,-0.690046,-7.388067,1.374037,-7.818569,-0.634136,-9.119868,-9.661881,6.607977,1.991897,-1.484138,6.555939,5.760262,-6.134194,6.064823,4.488043,-6.398545,-5.128283,3.861479,-9.615122,1.506173,7.623205,-6.976623,-9.627989,-1.190248,0.436246,-9.249408,3.702026,-5.216187,-2.247539,2.367037,2.491020,8.415823,-7.310541,7.842653,-3.360279,8.910076,-6.947473,-0.663137,7.905436,6.497759,3.201836,4.244472,1.926703,-0.090383,1.988433,4.982540,-4.529115,0.017366,5.352529,1.006405,0.560444,8.070706,0.215393,-7.246893,8.406494,3.428149,-7.128193,9.852470,-5.747848,3.442449,0.210353,-4.050725,9.917785,-2.030948,-1.986074,-0.976091,-3.578359,-5.926760,7.330836,-1.755385,-3.102599,1.828992,7.791508,-3.493849,7.615498,5.782012,-3.903899,-4.387029,9.690283,-8.335703,-9.831295,-8.225498,4.763471,-2.887759,8.892358,1.098945,-5.071939,-3.460869,4.439753,-7.954468,-4.191710,2.223331,0.794498,-8.035396,-3.170689,1.463026,-8.493085,3.960382,-4.624928,-2.580085,-7.265069,6.130365,0.533305,-6.036878,-4.498438,9.960812,3.139571,5.828570,-1.308735,6.715904,-6.023664,0.093485,-1.891085,-9.376749,1.612916,3.020041,-8.958359,-3.104884,-0.709523,-9.780400,9.683825,-2.287858,-7.524845,-5.536868,5.844040,7.937373,-7.566778,-6.249314,6.748141,5.647387,-1.468920,7.283497,9.634242,-8.774346,-8.432013,-1.999788,-0.955990,-0.553198,-5.159051,3.224408,8.387550,5.994176,6.485960,-2.967315,5.774384,0.393990,-6.384341,-9.487036,4.195682,-7.099011,-4.130096,4.585507,1.661850,4.738396,-3.556986,6.662830,-9.271259,9.747287,8.370541,-3.197609,9.452459,-5.739400,-0.739386,3.826746,0.328649,-1.975279,-8.960910,-4.641678,4.683174,3.584489,-6.669703,6.267334,-4.461589,-2.995575,3.547758,-3.518410,1.401876,-7.491485,4.788410,5.922511,8.741461,-4.059254,8.471809,3.042354,5.320107,8.604961,-9.659214,-4.425390,6.409154,-3.665352,8.591305,-5.081915,2.640301,6.646510,-0.052381,9.570908,-5.102398,-4.227275,-0.797869,-1.563419,-7.949546,7.049747,0.180160,3.371133,-0.516542,2.615334,-8.386591,-9.874266,-9.625461,7.230767,-8.346166,4.274814,-7.718227,1.773260,8.481686,-1.444274,2.980945,-1.121309,4.345220,9.486481,3.355157,-6.214182,-6.079324,9.390345,-9.432528,-6.339554,0.784876,3.601017,7.696497,-2.723871,-6.967898,-1.273498,-9.093195,-5.610505,4.433115,-2.884082,-6.552800,-5.574425,4.944401,-2.476597,-6.411453,3.219953,-0.383748,-5.091419,7.997802,-2.079074,2.898361,5.654567,-1.312884,-7.354476,1.862460,-4.813951,3.689963,0.998719,4.580365,-6.810474,-2.992798,0.058885,-3.753351,-7.805847,4.588891,1.754662,9.653372,-0.924508,6.207787,1.210110,7.479378,-8.324027,4.962247,-5.718748,1.081203,-0.921956,-8.518146,-8.865161,6.979450,-5.727599,-3.666234,-5.739399,-7.422426,3.160045,8.650929,-4.423753,-2.631923,6.445372,-1.632024,-9.244246,-3.053748,5.984687,5.637907,9.039716,-7.295562,1.719818,9.182263,3.117354,-1.721749,5.898150,2.015469,4.901756,2.476933,4.004361,-6.163113,4.654134,1.554845,5.142941,2.939836,8.152260,-1.474174,-7.781305,-8.717418,3.997995,-6.202348,-9.070874,-1.372860,9.043401,-8.256945,-0.850709,7.400002,1.669663,-5.677984,4.119577,3.463467,-8.241575,9.911666,-6.326241,-9.301730,-1.125158,-7.661720,-6.237128,-0.151827,-8.994220,6.724753,8.289175,7.784505,2.212664,6.130365,7.177004,7.526594,-9.688921,-0.227329,6.059552,-1.433567,7.921808,-2.496592,-5.651518,4.189778,-6.527802,2.547241,0.770698,-4.737220,-8.163926,4.115851,6.953910,9.878232,2.713674,-5.387344,-4.915107,2.634101,5.599189,-5.678598,-2.136854,6.399854,-9.684324,0.885857,2.319093,-3.947103,8.507940,3.898175,-1.639524,8.245514,-5.771027,-4.843708,-2.976416,-9.877165,-4.338074,3.256463,-6.374192,4.817803,9.173425,6.264461,-4.931192,7.987535,5.928524], dtype = "float64")#candidate|2917|(1274,)|const|float64
call_2916 = func_989_call(relay.reshape(const_2917.astype('float64'), [7, 13, 14]))
call_2918 = func_989_call(relay.reshape(const_2917.astype('float64'), [7, 13, 14]))
output = relay.Tuple([uop_2912,call_2916,const_2917,])
output2 = relay.Tuple([uop_2914,call_2918,const_2917,])
func_2932 = relay.Function([], output)
mod['func_2932'] = func_2932
mod = relay.transform.InferType()(mod)
mutated_mod['func_2932'] = func_2932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2932_call = mutated_mod.get_global_var('func_2932')
call_2933 = func_2932_call()
output = call_2933
func_2934 = relay.Function([], output)
mutated_mod['func_2934'] = func_2934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_2973 = relay.TupleGetItem(func_695_call(), 0)
call_2974 = relay.TupleGetItem(func_697_call(), 0)
func_1451_call = mod.get_global_var('func_1451')
func_1454_call = mutated_mod.get_global_var('func_1454')
const_2976 = relay.const([0.282289,6.689264,4.283015,7.712136,-4.601700,-3.461148,-3.744894,-2.000728,-0.189780,7.888303,7.704997,-3.521219,-1.144277,-0.219845,5.686442,4.566167,0.613529,2.161324,-3.701817,8.142904,-7.583487,3.944565,4.946527,-0.836262,1.407864,-9.649117,9.571025,-9.583857,6.142525,4.786342,8.769099,8.872514,3.601006,5.063797,9.057494,-0.129993,-0.999692,-2.362034,-4.277024,1.055696,8.167261,-5.860952,6.941602,-6.073181,7.838155,0.574185,-8.060799,4.061170,3.735286,-8.233785,1.555723,2.958747,-9.593795,6.142947,-4.489097,3.245463,-3.448162,-3.724545,-7.389694,-3.174451,-5.248699,-1.215301,-6.378484,-9.867007,-1.823571,-7.139716,8.660117,9.349254,-9.887556,-8.852773,-8.876561,-5.220326], dtype = "float32")#candidate|2976|(72,)|const|float32
const_2977 = relay.const([[-3,10,4,-1,-9,1,-7,10,3,-10,-10,-3,-9,-9,-7,8,3,10,-6,-10,3,-8,2,2,3,-8,-8,-9,-10,-5,-1,-8,3,-2,9,3,-5,2,10,-5,-10,7,4,7,4,10,7,8,6,-8,-3,-8,-1,-6,-6,5,3,-6,-7,10,6,-7,-8,4,8,-8,2,-9,-8,-5,7,-2,3,-9,10,-4,-9,-9,9,-10,5,7,-6,2,5,-8,-1,-7,8,-7,-7,-5,5,5,7,-10]], dtype = "int64")#candidate|2977|(1, 96)|const|int64
call_2975 = relay.TupleGetItem(func_1451_call(relay.reshape(const_2976.astype('float32'), [72,]), relay.reshape(const_2977.astype('int64'), [96,]), ), 7)
call_2978 = relay.TupleGetItem(func_1454_call(relay.reshape(const_2976.astype('float32'), [72,]), relay.reshape(const_2977.astype('int64'), [96,]), ), 7)
uop_2982 = relay.cosh(const_2977.astype('float32')) # shape=(1, 96)
var_2988 = relay.var("var_2988", dtype = "float32", shape = (9, 96))#candidate|2988|(9, 96)|var|float32
bop_2989 = relay.bitwise_xor(uop_2982.astype('uint32'), var_2988.astype('uint32')) # shape=(9, 96)
output = relay.Tuple([call_2973,call_2975,const_2976,bop_2989,])
output2 = relay.Tuple([call_2974,call_2978,const_2976,bop_2989,])
func_2992 = relay.Function([var_2988,], output)
mod['func_2992'] = func_2992
mod = relay.transform.InferType()(mod)
mutated_mod['func_2992'] = func_2992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2993 = relay.var("var_2993", dtype = "float32", shape = (9, 96))#candidate|2993|(9, 96)|var|float32
func_2992_call = mutated_mod.get_global_var('func_2992')
call_2994 = func_2992_call(var_2993)
output = call_2994
func_2995 = relay.Function([var_2993], output)
mutated_mod['func_2995'] = func_2995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1702_call = mod.get_global_var('func_1702')
func_1703_call = mutated_mod.get_global_var('func_1703')
call_3006 = relay.TupleGetItem(func_1702_call(), 0)
call_3007 = relay.TupleGetItem(func_1703_call(), 0)
output = call_3006
output2 = call_3007
func_3009 = relay.Function([], output)
mod['func_3009'] = func_3009
mod = relay.transform.InferType()(mod)
output = func_3009()
func_3010 = relay.Function([], output)
mutated_mod['func_3010'] = func_3010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1807_call = mod.get_global_var('func_1807')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_3061 = func_1807_call()
call_3062 = func_1807_call()
var_3095 = relay.var("var_3095", dtype = "float32", shape = (14, 7, 15))#candidate|3095|(14, 7, 15)|var|float32
bop_3096 = relay.bitwise_and(call_3061.astype('int16'), relay.reshape(var_3095.astype('int16'), relay.shape_of(call_3061))) # shape=(14, 7, 15)
bop_3099 = relay.bitwise_and(call_3062.astype('int16'), relay.reshape(var_3095.astype('int16'), relay.shape_of(call_3062))) # shape=(14, 7, 15)
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_3101 = relay.TupleGetItem(func_1769_call(), 2)
call_3102 = relay.TupleGetItem(func_1770_call(), 2)
output = relay.Tuple([bop_3096,call_3101,])
output2 = relay.Tuple([bop_3099,call_3102,])
func_3105 = relay.Function([var_3095,], output)
mod['func_3105'] = func_3105
mod = relay.transform.InferType()(mod)
mutated_mod['func_3105'] = func_3105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3106 = relay.var("var_3106", dtype = "float32", shape = (14, 7, 15))#candidate|3106|(14, 7, 15)|var|float32
func_3105_call = mutated_mod.get_global_var('func_3105')
call_3107 = func_3105_call(var_3106)
output = call_3107
func_3108 = relay.Function([var_3106], output)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1202_call = mutated_mod.get_global_var('func_1202')
call_3142 = relay.TupleGetItem(func_1201_call(), 2)
call_3143 = relay.TupleGetItem(func_1202_call(), 2)
func_2901_call = mod.get_global_var('func_2901')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_3155 = relay.TupleGetItem(func_2901_call(), 0)
call_3156 = relay.TupleGetItem(func_2902_call(), 0)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_3182 = relay.TupleGetItem(func_422_call(), 1)
call_3183 = relay.TupleGetItem(func_423_call(), 1)
uop_3193 = relay.asinh(call_3142.astype('float32')) # shape=(7, 13, 14)
uop_3195 = relay.asinh(call_3143.astype('float32')) # shape=(7, 13, 14)
output = relay.Tuple([call_3155,call_3182,uop_3193,])
output2 = relay.Tuple([call_3156,call_3183,uop_3195,])
func_3200 = relay.Function([], output)
mod['func_3200'] = func_3200
mod = relay.transform.InferType()(mod)
mutated_mod['func_3200'] = func_3200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3200_call = mutated_mod.get_global_var('func_3200')
call_3201 = func_3200_call()
output = call_3201
func_3202 = relay.Function([], output)
mutated_mod['func_3202'] = func_3202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mod.get_global_var('func_1923')
func_1925_call = mutated_mod.get_global_var('func_1925')
call_3289 = func_1923_call()
call_3290 = func_1923_call()
func_1451_call = mod.get_global_var('func_1451')
func_1454_call = mutated_mod.get_global_var('func_1454')
var_3313 = relay.var("var_3313", dtype = "float32", shape = (72, 1))#candidate|3313|(72, 1)|var|float32
var_3314 = relay.var("var_3314", dtype = "int64", shape = (96, 1))#candidate|3314|(96, 1)|var|int64
call_3312 = relay.TupleGetItem(func_1451_call(relay.reshape(var_3313.astype('float32'), [72,]), relay.reshape(var_3314.astype('int64'), [96,]), ), 1)
call_3315 = relay.TupleGetItem(func_1454_call(relay.reshape(var_3313.astype('float32'), [72,]), relay.reshape(var_3314.astype('int64'), [96,]), ), 1)
output = relay.Tuple([call_3289,call_3312,var_3313,var_3314,])
output2 = relay.Tuple([call_3290,call_3315,var_3313,var_3314,])
func_3322 = relay.Function([var_3313,var_3314,], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mutated_mod.get_global_var('func_3322')
var_3324 = relay.var("var_3324", dtype = "float32", shape = (72, 1))#candidate|3324|(72, 1)|var|float32
var_3325 = relay.var("var_3325", dtype = "int64", shape = (96, 1))#candidate|3325|(96, 1)|var|int64
call_3323 = func_3322_call(var_3324,var_3325,)
output = call_3323
func_3326 = relay.Function([var_3324,var_3325,], output)
mutated_mod['func_3326'] = func_3326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2404_call = mod.get_global_var('func_2404')
func_2406_call = mutated_mod.get_global_var('func_2406')
call_3335 = relay.TupleGetItem(func_2404_call(), 1)
call_3336 = relay.TupleGetItem(func_2406_call(), 1)
func_2231_call = mod.get_global_var('func_2231')
func_2234_call = mutated_mod.get_global_var('func_2234')
var_3343 = relay.var("var_3343", dtype = "float32", shape = (72,))#candidate|3343|(72,)|var|float32
call_3342 = relay.TupleGetItem(func_2231_call(relay.reshape(var_3343.astype('float32'), [72,])), 2)
call_3344 = relay.TupleGetItem(func_2234_call(relay.reshape(var_3343.astype('float32'), [72,])), 2)
output = relay.Tuple([call_3335,call_3342,var_3343,])
output2 = relay.Tuple([call_3336,call_3344,var_3343,])
func_3354 = relay.Function([var_3343,], output)
mod['func_3354'] = func_3354
mod = relay.transform.InferType()(mod)
var_3355 = relay.var("var_3355", dtype = "float32", shape = (72,))#candidate|3355|(72,)|var|float32
output = func_3354(var_3355)
func_3356 = relay.Function([var_3355], output)
mutated_mod['func_3356'] = func_3356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2932_call = mod.get_global_var('func_2932')
func_2934_call = mutated_mod.get_global_var('func_2934')
call_3405 = relay.TupleGetItem(func_2932_call(), 2)
call_3406 = relay.TupleGetItem(func_2934_call(), 2)
uop_3407 = relay.tan(call_3405.astype('float32')) # shape=(1274,)
uop_3409 = relay.tan(call_3406.astype('float32')) # shape=(1274,)
output = uop_3407
output2 = uop_3409
func_3413 = relay.Function([], output)
mod['func_3413'] = func_3413
mod = relay.transform.InferType()(mod)
output = func_3413()
func_3414 = relay.Function([], output)
mutated_mod['func_3414'] = func_3414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3458 = relay.var("var_3458", dtype = "uint64", shape = (15, 1, 10))#candidate|3458|(15, 1, 10)|var|uint64
var_3459 = relay.var("var_3459", dtype = "uint64", shape = (15, 12, 10))#candidate|3459|(15, 12, 10)|var|uint64
bop_3460 = relay.bitwise_and(var_3458.astype('uint64'), var_3459.astype('uint64')) # shape=(15, 12, 10)
output = bop_3460
output2 = bop_3460
func_3471 = relay.Function([var_3458,var_3459,], output)
mod['func_3471'] = func_3471
mod = relay.transform.InferType()(mod)
var_3472 = relay.var("var_3472", dtype = "uint64", shape = (15, 1, 10))#candidate|3472|(15, 1, 10)|var|uint64
var_3473 = relay.var("var_3473", dtype = "uint64", shape = (15, 12, 10))#candidate|3473|(15, 12, 10)|var|uint64
output = func_3471(var_3472,var_3473,)
func_3474 = relay.Function([var_3472,var_3473,], output)
mutated_mod['func_3474'] = func_3474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3486 = relay.var("var_3486", dtype = "float64", shape = (4, 12, 8))#candidate|3486|(4, 12, 8)|var|float64
uop_3487 = relay.sinh(var_3486.astype('float64')) # shape=(4, 12, 8)
bop_3495 = relay.less_equal(uop_3487.astype('bool'), relay.reshape(var_3486.astype('bool'), relay.shape_of(uop_3487))) # shape=(4, 12, 8)
output = bop_3495
output2 = bop_3495
func_3502 = relay.Function([var_3486,], output)
mod['func_3502'] = func_3502
mod = relay.transform.InferType()(mod)
mutated_mod['func_3502'] = func_3502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3503 = relay.var("var_3503", dtype = "float64", shape = (4, 12, 8))#candidate|3503|(4, 12, 8)|var|float64
func_3502_call = mutated_mod.get_global_var('func_3502')
call_3504 = func_3502_call(var_3503)
output = call_3504
func_3505 = relay.Function([var_3503], output)
mutated_mod['func_3505'] = func_3505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2660_call = mod.get_global_var('func_2660')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_3602 = relay.TupleGetItem(func_2660_call(), 1)
call_3603 = relay.TupleGetItem(func_2662_call(), 1)
output = call_3602
output2 = call_3603
func_3611 = relay.Function([], output)
mod['func_3611'] = func_3611
mod = relay.transform.InferType()(mod)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mutated_mod.get_global_var('func_3611')
call_3612 = func_3611_call()
output = call_3612
func_3613 = relay.Function([], output)
mutated_mod['func_3613'] = func_3613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_3645 = relay.TupleGetItem(func_1336_call(), 0)
call_3646 = relay.TupleGetItem(func_1337_call(), 0)
func_2231_call = mod.get_global_var('func_2231')
func_2234_call = mutated_mod.get_global_var('func_2234')
var_3649 = relay.var("var_3649", dtype = "float32", shape = (1, 72))#candidate|3649|(1, 72)|var|float32
call_3648 = relay.TupleGetItem(func_2231_call(relay.reshape(var_3649.astype('float32'), [72,])), 3)
call_3650 = relay.TupleGetItem(func_2234_call(relay.reshape(var_3649.astype('float32'), [72,])), 3)
var_3668 = relay.var("var_3668", dtype = "float32", shape = (5, 72))#candidate|3668|(5, 72)|var|float32
bop_3669 = relay.logical_and(var_3649.astype('bool'), var_3668.astype('bool')) # shape=(5, 72)
output = relay.Tuple([call_3645,call_3648,bop_3669,])
output2 = relay.Tuple([call_3646,call_3650,bop_3669,])
func_3681 = relay.Function([var_3649,var_3668,], output)
mod['func_3681'] = func_3681
mod = relay.transform.InferType()(mod)
mutated_mod['func_3681'] = func_3681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3681_call = mutated_mod.get_global_var('func_3681')
var_3683 = relay.var("var_3683", dtype = "float32", shape = (1, 72))#candidate|3683|(1, 72)|var|float32
var_3684 = relay.var("var_3684", dtype = "float32", shape = (5, 72))#candidate|3684|(5, 72)|var|float32
call_3682 = func_3681_call(var_3683,var_3684,)
output = call_3682
func_3685 = relay.Function([var_3683,var_3684,], output)
mutated_mod['func_3685'] = func_3685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3687 = relay.var("var_3687", dtype = "int32", shape = ())#candidate|3687|()|var|int32
const_3688 = relay.const([[3,-1,5,-4,-3,9,3,-6,-10,9,-3,9,-6,9,-2,-3]], dtype = "int32")#candidate|3688|(1, 16)|const|int32
bop_3689 = relay.left_shift(var_3687.astype('int32'), const_3688.astype('int32')) # shape=(1, 16)
output = bop_3689
output2 = bop_3689
func_3725 = relay.Function([var_3687,], output)
mod['func_3725'] = func_3725
mod = relay.transform.InferType()(mod)
var_3726 = relay.var("var_3726", dtype = "int32", shape = ())#candidate|3726|()|var|int32
output = func_3725(var_3726)
func_3727 = relay.Function([var_3726], output)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3760 = relay.const([[[-6,8,-7,1,-7,7,-1],[2,9,-3,5,-4,-5,9]],[[2,3,-3,3,9,3,-8],[-7,1,9,3,-3,-3,9]],[[-6,1,8,-9,6,-8,6],[10,4,-5,7,8,-5,2]],[[6,8,-10,3,5,-9,-1],[-6,10,3,5,10,-1,4]],[[9,-5,-9,-8,-4,-7,10],[1,-2,-10,-3,8,-10,-10]],[[9,6,1,-5,-6,9,4],[2,9,9,10,-6,2,-3]],[[-2,-3,8,-9,3,-1,-6],[1,-6,6,-4,-9,-4,-9]],[[8,-1,6,1,3,5,1],[5,6,-9,-6,-10,-10,9]],[[3,-2,-2,1,-7,10,-2],[8,-10,-3,8,3,-5,-6]]], dtype = "int8")#candidate|3760|(9, 2, 7)|const|int8
var_3761 = relay.var("var_3761", dtype = "int8", shape = (9, 2, 7))#candidate|3761|(9, 2, 7)|var|int8
bop_3762 = relay.logical_xor(const_3760.astype('int8'), relay.reshape(var_3761.astype('int8'), relay.shape_of(const_3760))) # shape=(9, 2, 7)
output = relay.Tuple([bop_3762,])
output2 = relay.Tuple([bop_3762,])
func_3770 = relay.Function([var_3761,], output)
mod['func_3770'] = func_3770
mod = relay.transform.InferType()(mod)
mutated_mod['func_3770'] = func_3770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3771 = relay.var("var_3771", dtype = "int8", shape = (9, 2, 7))#candidate|3771|(9, 2, 7)|var|int8
func_3770_call = mutated_mod.get_global_var('func_3770')
call_3772 = func_3770_call(var_3771)
output = call_3772
func_3773 = relay.Function([var_3771], output)
mutated_mod['func_3773'] = func_3773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3786 = relay.var("var_3786", dtype = "float64", shape = (4, 2, 3))#candidate|3786|(4, 2, 3)|var|float64
uop_3787 = relay.cosh(var_3786.astype('float64')) # shape=(4, 2, 3)
bop_3795 = relay.mod(uop_3787.astype('float64'), relay.reshape(var_3786.astype('float64'), relay.shape_of(uop_3787))) # shape=(4, 2, 3)
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_3807 = relay.TupleGetItem(func_2122_call(), 0)
call_3808 = relay.TupleGetItem(func_2124_call(), 0)
output = relay.Tuple([bop_3795,call_3807,])
output2 = relay.Tuple([bop_3795,call_3808,])
func_3812 = relay.Function([var_3786,], output)
mod['func_3812'] = func_3812
mod = relay.transform.InferType()(mod)
mutated_mod['func_3812'] = func_3812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3813 = relay.var("var_3813", dtype = "float64", shape = (4, 2, 3))#candidate|3813|(4, 2, 3)|var|float64
func_3812_call = mutated_mod.get_global_var('func_3812')
call_3814 = func_3812_call(var_3813)
output = call_3814
func_3815 = relay.Function([var_3813], output)
mutated_mod['func_3815'] = func_3815
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3817 = relay.const([[[-1,1,8],[5,7,1],[7,10,3],[-2,-3,8]],[[-6,-9,10],[-10,6,-8],[3,-8,9],[6,9,5]],[[-1,10,-7],[-10,-5,-10],[2,-7,5],[-5,-1,9]],[[-4,-5,4],[4,-6,1],[-3,10,1],[5,2,-4]],[[-9,5,3],[9,8,-8],[-3,8,-7],[5,-10,-9]]], dtype = "int8")#candidate|3817|(5, 4, 3)|const|int8
const_3818 = relay.const([[[-5,-10,7],[-10,2,-1],[1,-4,6],[8,-6,7]],[[4,-6,-10],[-8,3,-5],[5,-9,7],[4,7,2]],[[-7,-5,-9],[10,-2,4],[5,9,1],[8,1,5]],[[-5,-6,8],[-8,-6,7],[-5,9,-3],[9,6,-4]],[[4,-4,-7],[-1,-9,-7],[-4,-1,7],[-6,-7,10]]], dtype = "int8")#candidate|3818|(5, 4, 3)|const|int8
bop_3819 = relay.less(const_3817.astype('bool'), relay.reshape(const_3818.astype('bool'), relay.shape_of(const_3817))) # shape=(5, 4, 3)
output = bop_3819
output2 = bop_3819
func_3829 = relay.Function([], output)
mod['func_3829'] = func_3829
mod = relay.transform.InferType()(mod)
mutated_mod['func_3829'] = func_3829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3829_call = mutated_mod.get_global_var('func_3829')
call_3830 = func_3829_call()
output = call_3830
func_3831 = relay.Function([], output)
mutated_mod['func_3831'] = func_3831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3894 = relay.var("var_3894", dtype = "float64", shape = (12, 8, 15))#candidate|3894|(12, 8, 15)|var|float64
const_3895 = relay.const([[[0.238304,6.105962,-7.793843,-7.268913,2.394135,-4.880244,3.582126,2.135722,-3.916547,5.751502,-7.021095,0.123737,2.974429,-5.604357,9.388418],[-9.220323,7.092542,2.592393,4.860637,8.517673,2.856274,-4.206758,-0.991296,-9.254856,-2.003636,9.203082,6.439570,1.530566,6.274375,1.120963],[5.059925,8.384279,8.964150,-9.224606,-9.098099,5.016027,4.603685,7.084854,-7.505960,-8.300579,9.176475,2.472808,-5.021699,4.316016,-2.170446],[5.245345,-2.193145,-1.061366,5.587415,4.239402,-5.951004,3.746282,-3.173834,2.176892,-4.416234,8.313196,4.212881,7.962366,0.272564,0.916046],[8.545718,1.371700,-6.274936,3.578130,-6.747989,2.623420,8.008846,-6.631584,8.318496,-4.770184,-1.700397,7.659340,-2.623833,6.598314,-3.670502],[-9.178442,8.503327,5.807507,3.705256,8.955499,8.671968,8.019176,-4.682272,-2.279315,1.607857,7.375506,-4.876490,-5.830589,1.491965,-3.059151],[-6.484013,4.193783,-7.864314,0.154559,3.554316,6.062808,-9.171448,-0.093089,8.552343,-3.908364,2.431276,-1.727034,9.153071,8.978734,-2.261289],[-4.768306,-9.237413,3.409182,-3.175202,-7.375490,5.269271,0.003319,-4.495938,-9.158276,-2.936797,1.651097,3.210401,-4.925150,-9.852148,0.358193]],[[1.598782,0.380995,-2.841503,2.190864,-9.419567,-6.107955,6.121650,1.622645,0.677411,6.578166,-8.424966,-4.014850,-0.282977,-3.723671,-7.398767],[-6.490863,8.971764,4.317141,-6.930734,8.839486,-9.154123,-1.882794,0.726451,-7.277522,-3.520202,-1.592290,-4.580601,-9.442330,3.637113,1.546593],[-6.110584,-5.943109,3.208083,7.883059,-6.134467,-7.454869,0.241711,-8.890670,-9.713495,4.116445,3.152290,-9.187081,-1.594879,-3.732320,6.128785],[9.944113,0.303037,-4.640466,0.386937,-2.094077,-8.333782,1.047730,-5.211557,-4.380064,-9.838964,2.768595,2.891555,0.266256,-7.221443,-2.563870],[3.412208,1.732644,9.922133,5.634765,-5.418745,-7.698940,1.338621,-6.567128,4.125229,-5.170594,-7.100412,3.492657,4.688122,-4.042373,1.467587],[-2.370772,-0.681570,9.937225,3.157790,2.661207,3.866875,-2.610687,9.011262,-5.014777,6.809777,-6.683860,-1.261356,1.368629,-1.170637,6.687451],[-7.846182,-4.490064,6.971933,-1.675861,-1.457037,-9.884341,4.741450,-6.796822,7.490593,-5.514364,-5.316766,7.985272,-8.179802,-7.856790,-2.319363],[-3.406469,3.093782,4.812365,1.566834,3.088929,2.593631,1.003713,-2.827606,4.184335,-1.652785,-8.624943,-7.222703,3.517553,5.367310,3.233772]],[[6.673481,-4.164709,-9.263336,5.335211,-7.734109,-5.472986,1.335262,-6.557254,6.943015,0.421758,9.833677,-2.462408,9.320145,5.910279,-1.782059],[-5.785563,-3.466531,-3.896486,4.560215,-5.228796,6.300833,1.595890,-8.291037,-5.312300,-7.928136,4.523700,-1.355776,4.987770,6.416656,-1.240501],[-7.189547,1.584586,7.268733,7.109032,-1.846852,-6.119519,-1.311589,-8.095937,-2.264473,5.734902,-8.514263,-5.016412,-2.340438,0.049404,-4.517087],[4.490527,-1.596043,-9.538552,5.901388,-3.763795,8.635265,0.141243,1.355023,1.146515,-4.072618,-6.804133,7.892834,9.537253,-0.038233,-1.052454],[-7.653690,7.098045,-3.082966,5.738231,-1.175770,4.221225,-2.333125,5.206047,-6.578698,2.216016,5.863842,-1.888337,6.835085,6.210542,-7.090119],[-8.439082,8.630090,9.964348,8.796593,5.459156,2.885996,-0.655079,7.988529,4.104053,-9.669101,5.506341,-1.807998,-4.996229,6.678352,4.897034],[9.493632,0.703699,-3.644681,4.697750,1.464165,1.098626,3.637968,-8.462817,3.484741,5.200257,8.485327,-2.763493,-9.786373,8.133096,-9.072686],[1.711766,-4.780419,-3.940047,9.779388,2.540209,9.754452,7.003429,-2.424250,0.908958,2.931819,3.707688,3.394391,-3.234929,-8.943306,-2.216615]],[[0.627964,5.344448,-2.122723,-6.303306,3.186764,-8.828720,-1.341903,8.662242,1.290957,-3.551378,7.469359,6.417194,7.571179,-2.342629,1.520228],[-3.347518,-7.189547,0.202339,-1.749979,5.112831,1.074542,-6.605545,7.901337,-7.059219,-3.543851,-6.882703,-3.439051,0.939320,1.946139,0.677363],[-5.737187,3.678797,6.691076,1.616237,-5.033970,3.008854,-0.013303,2.618947,-1.077898,-8.816012,6.794154,-3.484862,6.935033,3.338151,-7.414939],[8.008990,2.964783,5.763135,4.806977,-1.392486,0.456611,1.009629,8.202138,-4.298605,-6.881808,-3.443532,6.038844,7.072131,-1.151674,9.700678],[-2.127693,5.501012,-6.282963,-2.264626,1.013156,3.245714,2.799426,-1.036506,-3.886119,-0.021085,-1.728953,-7.600707,5.342625,-2.676154,-0.976588],[-0.374988,-4.813698,-3.007823,8.116338,1.352216,2.977506,8.832512,4.383206,6.550709,-3.866607,7.342115,2.146316,-3.733480,7.795572,-6.715918],[4.739252,-3.129996,4.235153,-3.190970,-8.730476,4.018750,-1.712552,-0.500879,5.489022,2.473672,4.953233,-6.935661,-6.285403,2.750601,8.596280],[-1.721385,7.874371,-5.076518,3.036022,0.003967,-7.787188,-3.910329,5.536548,5.283784,-3.674328,4.153155,1.876085,-3.619251,-6.251426,9.927574]],[[-4.387882,-2.379253,8.121772,-4.757103,5.863176,-9.614231,-2.648702,4.045339,1.635393,-7.759163,8.426638,0.454863,4.998319,5.111779,1.270007],[3.111455,-5.905558,5.069888,9.378969,-5.934351,5.379340,-3.965815,5.921225,-9.142939,-4.898543,6.568472,-5.643523,-5.959437,-7.112991,2.900475],[1.564910,0.126871,4.629022,7.003933,-3.263045,7.127662,-0.080346,-3.316892,6.411306,-0.487950,6.065730,-8.923524,-4.965257,-7.342858,-8.920884],[-5.153531,-4.330165,5.966042,1.508657,-5.347280,-5.194186,8.659869,-8.950165,2.880669,-8.816922,7.917875,9.484333,4.464349,2.959848,-3.194936],[-0.900368,6.420363,3.159393,-3.151037,1.793266,-4.447954,-7.897082,-5.552441,5.580203,5.630782,2.647302,-6.857810,-2.658135,-6.324540,6.444615],[9.256493,3.448748,-2.695805,0.304591,3.729072,-0.097547,-7.823494,-9.779341,1.073451,-0.768496,7.351647,7.542329,-4.168216,-0.733274,0.601368],[-9.331058,9.427567,6.351447,-0.669868,-0.455283,5.036411,7.402083,0.558034,-4.388453,-5.736551,0.133416,-4.152941,4.328914,-4.513813,4.501279],[6.492551,-9.934950,-6.358144,-8.933517,-6.422783,-9.222227,8.646819,-6.924349,5.689827,5.902889,2.978916,-0.129184,-6.262669,8.932857,2.967214]],[[-0.777536,-6.414030,9.638913,8.099106,1.297642,-5.969484,5.652595,5.730906,-7.308114,8.342112,-7.819909,8.079309,-0.387117,-0.585346,-9.625515],[6.736222,-3.123892,-5.960993,-2.552356,-3.092513,8.343071,7.892139,-6.996872,-2.574270,-9.041891,3.826173,2.173965,7.842030,-2.436729,4.357405],[4.220800,2.311839,-2.854726,0.641832,3.140658,-0.519848,-1.949748,-1.615749,-9.002044,5.225609,-4.611222,-8.877373,1.629412,7.584915,3.703610],[5.871998,0.163285,7.722383,-3.314205,-9.909296,-4.049498,-4.362340,0.568990,6.091589,-3.705258,-8.660555,6.642155,-9.414260,-8.024239,-6.252375],[-4.003851,-3.090552,6.812256,1.766507,-3.068843,5.887877,-2.030122,3.277111,-7.160993,7.134434,2.312761,0.806317,-9.278432,-4.991840,-3.945252],[5.708947,-2.530316,-6.850442,9.630478,8.132539,-6.302139,-9.391254,-5.250823,-8.449265,-3.140627,1.347567,1.563844,8.030736,-2.783841,-3.278124],[-5.919680,8.813221,6.600619,-7.556555,7.937019,-7.214999,7.177824,-3.819918,-5.339490,-3.799137,9.774946,-8.052609,7.985210,-6.842738,4.167370],[-1.239912,-9.577837,-6.197472,1.230005,-3.877291,-9.921273,-2.217705,4.315773,-0.867128,6.577033,9.200968,-6.432541,3.475835,3.580837,-0.075618]],[[-1.863546,-0.133536,-3.025229,-5.558866,-3.084291,4.119775,6.362085,-2.170357,-7.535546,-1.874330,4.347679,-9.106998,-6.633266,0.678180,-8.366121],[-3.249816,-6.744034,3.768973,-5.323795,1.972897,0.200383,4.895597,-4.113171,7.028604,-3.988695,7.233665,5.851071,-3.967892,1.031437,7.087767],[2.362785,9.022553,3.340553,-6.554079,-3.417290,-5.446339,-1.137695,7.594543,9.812794,-3.856650,-5.138345,5.449218,6.414734,4.621147,-1.548087],[-6.466328,1.335082,9.389414,1.261712,-8.602531,3.728425,6.079172,-8.593305,4.339842,3.845739,-9.075150,7.020661,-0.964545,3.432389,4.558643],[-9.273748,8.455773,4.658044,-7.293719,-1.769225,1.390984,3.156565,-6.895228,0.968376,7.464922,9.554573,-6.276773,-1.696732,0.889468,5.123033],[4.551299,5.361375,2.232656,3.585764,7.412297,-7.727934,-4.763892,9.338025,0.487286,-4.904718,1.137989,-2.009163,-2.239905,-2.603185,-0.166472],[-7.406652,-8.059199,-8.700048,4.196593,7.161621,-6.498007,2.951658,-7.252367,0.856877,1.084841,-2.167514,8.712308,-7.039015,3.201897,5.041160],[-5.622823,7.088232,8.329500,-6.319723,-2.867048,0.475662,2.612035,5.286647,4.425230,-2.660375,-3.746845,-1.953466,3.215186,5.622320,4.957844]],[[2.555679,-8.305578,-5.127062,-6.697688,-5.492214,3.769042,4.215386,-0.154687,-6.066009,4.737843,-2.449366,2.604454,4.243778,-6.270766,-5.339231],[-5.774647,4.058426,-7.820975,-7.098514,2.421343,3.371143,8.930413,6.709921,2.781977,1.764667,-0.863289,-6.621810,-4.010585,8.587235,-6.465593],[2.728623,3.245860,-1.822771,-9.699499,-5.017535,8.213707,-9.253522,7.206012,9.243636,8.986443,9.044754,-8.120554,-1.261771,-0.108870,7.740421],[2.363924,1.612262,-2.726336,-6.785123,-1.087593,-0.141914,0.146810,-8.202185,-8.335273,4.470495,9.665020,-4.625208,1.151363,-4.771161,-8.963834],[-7.724961,-4.727851,-9.180639,8.916704,-6.355590,1.247947,-1.445270,3.760345,7.327205,-7.809415,-0.209763,-2.654616,8.299285,5.214653,2.294709],[-3.466489,6.616806,7.565076,6.322197,-4.445529,-9.317844,-7.673404,-3.224680,-2.230691,0.822131,2.228057,-4.952763,-5.590451,9.669717,3.896991],[4.225842,-5.773672,3.060242,-3.853216,6.493047,-9.549747,0.613822,-0.967145,-8.732317,0.380639,2.505760,6.968051,-4.018502,4.645736,7.695700],[-5.734962,-7.426461,2.760793,-7.915206,-3.514155,7.037070,-0.475925,2.419832,-2.959487,0.886187,-4.087796,-2.007096,-5.390920,6.310191,-1.466944]],[[-8.709177,-8.843895,-7.037743,-5.729646,8.453253,-3.952819,2.319589,4.078893,2.196596,8.393276,-4.446689,3.764143,4.208756,1.160360,8.934376],[-2.508938,0.740657,7.746945,-1.556625,-5.252662,-5.109304,-0.711728,2.868073,8.602549,-1.835107,5.429465,-3.565643,1.984391,-9.760897,-7.289450],[5.756683,-3.628385,9.737826,-3.903967,3.192504,-7.767308,5.680479,-3.172275,-7.640425,4.957309,-3.853472,9.306803,7.984340,-7.491374,-5.329240],[8.361101,2.226959,-8.847915,5.560922,4.046385,8.211572,9.043725,-2.128214,-0.922011,3.182341,2.436679,-8.615836,-6.605000,-0.490324,-3.794877],[4.766162,-3.448111,8.153369,-7.115845,0.314822,6.199477,9.686836,7.619924,-6.970271,-1.654867,7.455497,9.829174,2.781125,4.934666,0.275533],[-0.872023,2.737368,7.235720,7.618999,-0.871331,2.943192,6.202362,-8.547812,3.190038,-5.027198,-0.848877,6.074029,-4.452257,6.436242,-1.277212],[3.764343,8.822571,7.709880,9.360428,-8.526899,7.463928,6.907347,-0.870677,2.525799,9.334046,-8.462190,3.261589,7.009613,-1.145275,4.812360],[5.112832,0.323183,-1.200424,-8.288133,4.139427,4.149326,-8.583622,8.821911,-9.556363,-4.874565,9.814775,7.506307,8.438014,-5.269391,0.528350]],[[-1.031717,-8.820181,3.081334,6.790421,-8.315654,5.546196,5.910819,-8.633991,-9.630065,-9.387735,-1.891352,0.821454,-3.168320,8.057749,-3.917004],[4.981724,6.691944,-0.741210,-8.005935,-9.137837,-4.494269,-1.052199,-1.056114,4.451814,5.836838,3.633261,5.253120,7.059229,3.444537,-6.973926],[5.489087,2.285224,3.696998,0.379956,5.089980,-6.372458,6.310235,1.680507,9.980978,3.579354,-8.592512,2.503276,4.407141,-5.800481,8.138474],[9.548708,-0.118813,3.258345,-5.398536,6.883183,9.583173,-2.097990,-4.264280,-1.396692,-1.600794,-9.326814,-8.502087,-2.818846,-3.752563,4.837093],[4.776184,-1.536534,1.144411,1.994189,-3.542210,9.566378,-0.039227,1.750482,5.654468,-5.228589,7.719391,8.358713,-3.028340,1.144517,-1.230235],[-8.275016,5.202048,2.918261,6.129416,0.676950,5.339806,2.624652,-7.948215,-3.658185,-8.933404,8.909165,8.709605,6.428091,-0.076138,-5.769920],[7.886946,-0.489087,4.373707,3.478517,-8.257860,-7.145884,8.823354,8.457145,-0.909789,-6.127505,-8.752132,-0.276279,-3.422858,-0.312846,7.491239],[5.639880,1.670320,5.662436,1.420969,9.059614,8.397475,9.448688,4.052193,-6.383977,-2.129636,-9.981271,-5.669065,-1.626524,9.317789,7.400027]],[[6.715781,6.157214,-4.271752,0.415760,-0.664991,8.641958,-7.895949,-9.770343,8.642202,-5.157196,2.355195,8.492374,5.042712,-6.679528,-2.584096],[3.230473,-1.247873,-1.866216,-1.720644,-0.271794,3.740611,-4.360197,-0.775216,8.921330,-8.952616,9.943765,3.151257,8.724596,-1.393564,1.165405],[-6.884814,-1.392138,2.487464,2.779219,-0.298201,-8.417380,-1.288016,-8.275783,-2.601394,-3.937538,8.931228,-9.834553,-0.019582,0.120549,-1.461374],[0.289267,-8.926244,9.765037,7.740004,8.425988,4.385871,9.988479,-7.559493,-3.884467,6.117746,4.315071,0.092392,7.662417,-3.544955,-5.268676],[9.530115,7.732121,-5.716865,-1.992475,7.447181,4.785554,7.362788,-6.696165,-6.180865,-4.292821,-9.448686,-8.196251,-9.450638,9.704213,3.477725],[9.526136,-0.263284,-7.456043,3.940346,-4.093605,-6.758014,9.917548,-3.153671,5.275344,7.683604,-7.530631,-9.658079,9.351695,9.103417,7.006430],[-8.400021,8.819453,9.489566,0.999958,-8.825228,2.724187,-6.025163,3.920238,2.385467,0.523877,-9.319535,-8.746810,0.551695,3.551984,-9.335217],[5.066349,7.112167,4.876647,-2.510833,-5.603465,-6.921785,5.908362,-3.123404,3.269833,0.125744,-4.136683,5.847004,-6.368649,-3.460353,0.292385]],[[-1.142771,-8.839079,8.764214,-9.103867,-0.840121,8.940115,3.100376,5.761366,0.395260,0.549993,-8.483287,-8.596477,-7.355281,-7.594979,3.151048],[0.452358,-4.942778,4.431434,-5.482982,3.370939,-1.566022,5.246843,8.904675,-8.927175,-7.769156,0.027631,7.372355,-7.390252,9.084672,1.788337],[-4.469787,-7.445668,-2.339330,-1.867518,-8.045359,0.874030,-1.386991,-6.046838,-4.401258,-1.126441,-6.303369,3.840580,-6.759244,5.169631,-5.252673],[-1.441712,2.037889,9.031376,-7.793157,-0.813367,2.833974,-5.239725,4.197258,5.544353,7.417013,-3.052236,3.005888,1.811092,5.587480,8.940784],[3.236629,-4.853037,7.707218,-8.033960,8.975896,-5.025609,5.973822,8.021575,8.874388,-0.569303,-9.119854,-0.310454,-4.265856,2.950099,-3.424324],[2.209313,-8.859311,-1.396507,4.131489,-0.608866,-5.584749,6.551647,1.892389,-7.313206,2.185064,7.990600,6.566310,8.029098,8.744944,6.155338],[-4.098038,-1.395377,-3.635232,-0.400026,9.997971,-9.323250,3.065705,8.598002,-1.530725,4.765384,-4.350226,-2.229145,-4.905491,6.604830,-3.186985],[2.804477,6.280093,-7.138395,-8.346880,4.459751,4.374498,1.045444,5.638835,9.397581,-2.268700,5.836713,7.470830,-1.034064,-0.303323,5.172234]]], dtype = "float64")#candidate|3895|(12, 8, 15)|const|float64
bop_3896 = relay.add(var_3894.astype('float64'), relay.reshape(const_3895.astype('float64'), relay.shape_of(var_3894))) # shape=(12, 8, 15)
const_3900 = relay.const([[[5.472570,7.186730,4.861251,0.780121,-0.291455,-7.802756,-2.702788,-1.029019,-3.674391,7.212147,1.457517,-9.790408,-6.356026,3.305097,-0.267055],[-2.151652,-6.611418,-5.494569,0.628425,-2.958098,-3.087095,-5.097082,1.739742,-2.896976,-1.682450,-4.649169,-6.317303,0.681832,1.052333,-2.600382],[-0.391022,2.016686,8.023283,-7.638667,9.285416,-9.215970,4.292865,3.882577,4.487728,-4.548686,8.738111,7.975163,5.432400,-5.185207,-5.585698],[-5.857043,3.371566,7.364529,7.756274,-3.082154,4.008054,-1.581249,0.634477,2.082441,8.939910,-6.394361,1.603348,9.353592,-5.344842,6.894323],[-6.726893,2.591206,-2.928871,-7.385614,-8.709712,-5.474980,0.565039,-2.358102,-6.730186,-0.448713,6.755344,-2.957631,-4.042217,5.628246,-0.988971],[7.958337,-4.407582,-5.271732,-3.264254,5.170777,4.823888,-0.534406,-0.141738,0.534538,-3.134449,9.579302,-1.952255,-6.791993,9.909284,-7.573318],[9.947020,-7.785751,-3.367365,-4.315906,-9.561229,-3.666034,3.650310,-0.397722,0.345414,0.970755,2.484407,-7.520795,-3.478785,7.089644,-2.883748],[6.490909,9.495277,-1.789307,0.746657,-0.122516,-0.034710,1.710815,4.707304,3.392024,-7.840788,8.274107,8.857947,8.174977,-9.285215,4.410017]],[[-8.679203,-3.411267,5.175405,-4.662597,0.454983,-3.433314,2.270510,-2.810469,4.883779,6.302210,-1.306263,-9.015863,-9.311043,3.286931,-8.740237],[-8.720330,-5.726865,-5.588394,0.776038,-9.622976,-3.937266,-3.129971,-8.668588,-7.706548,-7.538364,9.291262,-5.028264,4.713845,-9.680703,-0.386892],[1.198915,5.268605,0.507821,0.648629,-3.891128,-2.451915,-4.522523,-7.347671,7.527817,4.405124,4.680985,-7.166716,-6.783893,-9.986605,-3.559379],[6.544507,1.116146,7.192802,-0.121789,4.599221,-8.057682,0.908219,-6.577665,-4.353906,5.136684,-1.223284,-7.834812,-3.325275,-7.718451,6.086415],[1.739631,-6.523890,-1.065728,-3.738917,0.612863,8.225069,6.464872,-1.168155,3.719518,1.077474,-9.961943,0.633475,-6.671763,6.350596,-6.433845],[8.283444,4.404204,2.478850,-3.149806,9.225690,3.178617,8.699827,5.560401,4.847881,-7.008596,6.147502,-6.106423,-5.875745,4.206003,9.968500],[-1.832207,6.610316,-7.002927,9.221088,-1.422317,-3.245903,-9.725628,-6.852281,-8.095796,-3.238967,-7.397714,3.172742,-0.242419,6.365443,-2.297822],[0.245039,-7.446930,-9.454676,6.935467,2.536884,-7.474063,-7.777357,1.555459,8.823612,-6.008951,4.274524,6.979231,1.858423,-5.792580,8.449464]],[[3.038845,7.331329,-6.940114,-1.461771,-5.671177,8.677488,-6.998528,1.198021,9.034020,2.289767,-8.403609,-8.601332,9.951616,3.096379,7.727117],[-3.575041,0.211398,-2.124081,-4.564695,-2.676067,-1.924149,9.013945,1.398820,-7.888248,9.726885,-6.067822,-4.619865,-0.006010,-3.563893,3.402868],[-4.986633,-4.840816,-2.882610,4.864951,8.930183,8.012693,-8.486632,-9.085054,6.061725,-4.621821,-1.095320,-3.303275,8.750910,1.606158,-6.660711],[9.328813,-1.519010,-9.368917,-0.294480,8.266335,2.173049,2.783469,-2.208487,6.006839,3.478770,-4.085675,-7.817174,-8.683980,8.722688,9.393571],[9.773602,0.578637,-2.068497,-1.224240,5.635360,5.963462,-3.868301,-4.436949,-2.722282,-8.160393,9.783742,-6.072435,3.084434,-5.737524,-4.771904],[-2.743525,-6.280459,3.987048,7.516112,-4.093894,-4.471310,-3.048884,-2.703195,4.217538,-7.149675,-9.605604,-7.783681,-4.865288,-4.581447,5.935937],[-3.779927,-3.704141,9.866284,-4.867940,8.146506,6.270991,-6.315253,-6.859913,1.339001,8.579749,9.478813,2.563815,-4.576523,3.306593,-9.327360],[7.099440,-8.354406,-2.306046,-4.151846,-3.481794,1.857009,3.761274,9.592654,-6.348553,9.403849,5.210403,-5.449645,-7.381837,-3.489737,1.324172]],[[-8.045637,8.115591,-6.817368,-7.228211,-3.460711,-4.520170,7.834161,7.659634,1.431489,1.978736,-5.097345,9.296640,4.119861,3.782531,0.736541],[8.979060,-6.441210,-2.070881,-4.930332,4.183570,9.528312,-6.063976,8.876258,-8.608907,3.369664,3.502351,-4.310546,-5.671185,-6.000491,3.946161],[-3.150288,-5.795889,0.238753,2.080574,7.214350,4.731959,-3.561400,9.769558,4.531739,-6.534728,4.387864,-5.025552,-2.813946,-4.969980,4.723496],[-9.597219,-3.161049,-4.315316,9.928179,6.863729,-8.455932,-6.253926,-8.296722,-3.034855,9.903784,-8.344055,-0.736296,-8.564713,-5.699803,0.406615],[-4.520999,0.727535,-1.087881,-6.442293,-7.020182,4.598636,-8.566740,8.460649,1.739945,0.007527,4.181973,-7.340813,-2.128487,-8.962773,5.772189],[-3.725362,-2.335300,-2.818554,0.955906,-3.821412,-6.775932,-2.277951,7.532968,9.872108,4.739579,5.410034,-3.524939,-4.185761,-6.272904,3.762198],[5.888833,3.243522,-1.031361,-1.452803,9.691260,7.043463,-4.243017,-1.293941,7.917940,1.311884,-4.541601,5.703883,-6.819661,-1.927223,5.766191],[-4.668199,6.524505,-3.928709,4.539934,-4.833598,7.788611,-3.089124,6.034309,-4.173154,-1.724570,-7.909539,-7.474510,0.832211,9.038235,-5.854369]],[[-1.456627,5.770701,-2.806033,6.678080,2.631958,-9.940791,4.155034,-9.202813,-0.686437,4.092862,-2.035868,7.375345,-4.258557,5.497738,-3.424494],[-1.471069,-9.605737,5.493583,3.509066,-8.473260,-2.173418,0.293171,5.316539,-0.880807,-3.176257,-1.205129,8.945233,-5.184496,3.436745,-9.935260],[1.638054,-1.459600,-0.693513,-4.991128,-0.919351,-5.427895,-7.503465,-9.254093,-3.335595,3.347857,-3.320959,2.493081,2.997779,0.932181,-3.829806],[0.707115,-1.292452,6.790852,6.863820,-9.755211,5.797572,-7.051874,3.243155,3.669542,7.288046,-2.983205,8.381809,-0.513207,6.978990,3.110639],[5.523535,8.037683,-5.622929,-6.033976,7.480445,4.430074,-5.243864,-6.917008,-9.393397,1.211013,-5.865608,7.888702,3.547475,-7.581277,-1.114006],[-5.151847,-4.756843,3.025661,1.495232,-0.258687,0.933551,0.939147,7.021348,8.204611,0.225212,-8.449728,-9.026322,9.257614,2.206741,2.305375],[9.645109,2.688725,9.060736,-4.523824,-0.231607,7.262009,-1.198488,3.420342,-6.593632,5.663848,9.602872,1.771770,-1.560481,-5.650900,3.988713],[3.808023,8.010489,-7.753603,5.595054,9.877307,-2.831706,0.978350,3.352385,-9.820756,8.913693,-6.849216,3.647359,4.569244,-9.580393,2.048170]],[[8.647974,7.763892,1.256008,1.674701,-0.059123,2.622276,-7.806677,-2.581853,7.648535,0.359637,-5.406214,-6.409855,-7.832452,4.541734,4.949409],[-5.485946,5.185866,7.058265,7.920694,-9.961969,-5.147577,-8.506503,-4.868083,-3.486235,-5.859350,4.675932,2.730473,-0.453399,5.174838,3.140111],[8.984956,4.312913,1.118231,7.848868,5.589038,-4.384891,3.606330,-3.539571,2.383046,-6.902215,7.372212,8.050014,1.415156,-9.309557,8.977040],[5.041835,5.411633,-9.461119,1.733708,4.100148,8.975607,-8.206956,5.546882,-7.183752,-0.902084,-8.203661,-0.432755,-6.044662,5.599609,-3.397772],[-2.268017,7.755500,-7.869357,-9.409554,-1.836124,3.847950,-9.390180,-9.003576,-1.842218,-8.384715,2.239233,-4.352344,-9.661267,5.771669,0.421208],[9.802821,3.448119,9.022917,-2.062225,-1.842781,-1.713575,-8.123862,0.121953,-0.113805,3.042972,-6.886680,9.532911,9.719733,-8.530415,1.553499],[-6.902261,8.850736,-6.913444,-7.685736,4.992380,0.348374,-1.296570,-2.315135,-4.575941,3.074943,5.738934,6.200777,5.020483,2.463381,2.448743],[1.001355,9.074422,-8.448652,-8.603428,-8.306239,0.514181,3.686083,5.259877,5.540393,-3.562840,3.562785,2.109302,-5.927335,5.414702,-9.953129]],[[-0.530895,7.655303,-2.625804,6.211314,-8.848984,-0.034391,7.981942,1.432281,2.427546,9.548419,7.484230,-5.021979,8.808897,2.578446,-7.984142],[6.512422,-6.149692,-3.185263,-1.562481,6.156586,6.891529,-3.490134,9.639984,7.598218,7.012030,-4.321450,5.810297,3.954257,9.719506,-2.668013],[-4.468181,-0.756172,-5.812284,2.000756,9.844455,8.090153,9.241383,4.279712,6.370367,1.493239,4.461470,8.779544,-2.043550,7.921053,-5.426338],[1.275307,-4.603820,0.814931,-8.226849,1.202604,7.953714,-8.079515,9.826554,6.455351,-6.879196,4.014877,-5.912539,3.443317,2.808280,-7.707964],[-1.264552,-7.589537,6.526022,3.684318,-5.955710,3.343412,5.527807,-3.630314,-6.675758,1.610138,5.844043,-0.044618,5.318716,-2.176961,0.827674],[-3.055191,2.003541,-5.697251,-4.513483,-1.385037,-3.229343,-1.935070,-9.282074,-8.920320,-2.918665,7.564759,-5.254073,4.873023,4.332160,-6.036223],[-0.917130,-5.335711,9.994623,5.427874,-0.514100,1.461750,1.316093,-8.291438,-6.052143,-5.963709,-8.380882,-2.532211,-5.113311,1.392963,-3.346068],[-1.134258,-2.212415,-8.315570,0.556523,-8.763546,1.064207,-9.609471,1.581264,-6.281579,-9.420693,7.014909,8.616559,2.515299,6.056790,6.178193]],[[1.268950,1.004535,7.165128,3.170310,9.701718,-2.900898,4.560189,4.847077,-3.861545,9.180615,5.890794,5.137461,-5.259928,-2.847645,2.796853],[7.313237,0.584071,8.515600,-6.531233,9.475589,-8.081319,0.676149,-9.611747,-5.957831,-7.773447,3.901213,-6.005252,-7.241691,-7.235007,9.911847],[5.372752,-0.431866,4.715373,4.629362,-6.539176,6.243321,-4.723636,7.938735,3.675388,5.466176,7.010536,5.066943,-6.849192,-6.352937,-1.088751],[-2.080535,5.317110,-3.289379,-2.293988,-9.283578,-5.685634,5.296547,-3.213324,-0.623141,9.871647,-1.448739,-6.774430,-4.700662,0.957046,1.805655],[-2.399613,9.879507,-3.746624,-9.063900,9.596521,-9.419508,-6.809239,1.414989,-5.534015,4.738263,1.511102,-6.052476,9.106865,-9.547223,3.284314],[2.613187,-0.606190,2.569324,-0.825768,0.460274,8.926660,-3.825071,-0.676259,-4.366477,4.940828,-2.564947,8.111491,-5.845815,3.200923,-6.201899],[8.931462,6.922734,-2.121182,-0.856621,-2.275792,1.977502,0.960228,-3.063760,5.435925,-2.375285,-9.329650,7.267200,0.543374,-3.351768,1.499806],[-1.114264,-9.507759,-4.223700,-9.791284,-4.091903,-4.537094,-1.163652,5.643988,5.095508,-4.230274,2.895395,-3.526413,-2.613873,-4.414697,8.585909]],[[4.712731,-9.124972,6.770105,1.990085,-8.170648,-2.176722,0.901512,-0.960931,4.788472,6.143669,-9.143015,-2.254197,1.194419,-5.551746,-7.391634],[6.654058,2.741087,5.499167,-7.980005,6.659240,-8.441561,-3.430878,-9.032383,-5.460164,-5.384567,2.912488,-6.160725,-7.933900,8.495489,-7.792796],[-1.925280,1.298161,7.792913,-3.498908,2.117978,-4.101118,7.448169,3.986054,-8.868462,-6.739073,2.946227,0.382235,1.297588,-9.686214,-0.812383],[-1.007910,-1.690926,1.681914,0.765851,-4.890003,9.462122,-6.518272,4.687380,-3.878146,-4.396351,-8.343628,7.470660,8.841353,9.967027,9.746535],[-2.032639,-3.136928,9.753210,1.159333,8.497831,-0.024059,-9.691119,-2.408086,-2.392539,3.417830,2.355471,5.838640,8.372987,4.882977,-0.791012],[9.590725,0.191595,6.349282,0.186121,1.074842,-6.070799,5.420363,-1.628200,-0.758179,-5.678637,2.642552,-0.730113,-6.333274,-2.339164,-5.236497],[-7.399716,2.230689,-8.718814,2.053062,0.383216,-2.513700,-6.580294,7.630742,3.261759,5.384039,8.328288,4.553682,8.984107,-0.469820,-1.582234],[-6.260543,-5.841541,-1.380213,8.099018,-1.128942,-1.638482,-9.634352,-6.529666,6.075475,-5.795236,7.287944,-5.054740,3.763381,7.172752,2.126721]],[[-1.979148,-9.445506,4.188189,8.748263,-4.240378,-5.117688,8.272909,2.254241,-2.296132,1.167475,-6.705921,-6.328440,-3.637875,-0.974257,8.277601],[0.890555,-1.910453,-1.341003,-1.331231,-9.275391,7.654658,8.286265,6.815003,-1.419152,1.729367,-6.364274,3.478609,-7.970743,-6.722727,3.900203],[-7.737070,-1.853774,-4.468848,6.886128,-8.784142,-0.486092,-0.862958,-1.262637,-5.187483,2.177960,5.616833,8.010384,-3.852844,-5.671583,8.673263],[7.406547,-1.191170,-1.741631,-3.276590,5.018575,1.917238,9.102874,3.245188,2.750123,-4.190468,8.281680,2.642593,-5.399946,7.166475,-0.175711],[-8.078372,-5.677406,4.278983,-3.842589,-2.712389,1.874945,5.698401,0.050849,-8.862496,-3.802447,6.755767,-0.451562,9.273540,4.070539,3.712562],[9.907928,8.470689,-5.510080,-2.757005,-8.981348,-5.338482,-7.581163,-2.045909,-2.686947,-8.099124,-6.451540,0.492542,-6.867076,5.060448,4.476891],[-5.941405,3.456141,-1.272295,-6.349243,-0.474312,-2.851001,-0.163085,-6.694604,-9.237865,-2.553849,8.351020,6.829656,2.655539,6.601633,2.149095],[-3.970577,3.016635,3.248833,0.965711,-4.656153,-3.790576,6.754909,3.821107,-0.186227,-1.881051,9.106974,4.798592,-1.827750,-1.652469,7.799938]],[[-8.172997,4.697821,7.762178,-0.129753,7.876653,-2.934126,1.356274,-5.688876,2.940048,-8.657746,1.087520,-4.908461,-0.113938,-9.691202,-0.648177],[-4.109004,1.093317,3.188552,-6.250717,5.343363,-4.747286,-8.015524,5.997801,6.108282,8.631252,7.397498,2.220830,1.272747,-5.554143,-9.520016],[5.805071,-0.191576,5.435974,-2.608613,2.829643,5.438009,6.313348,9.844734,-9.485590,-2.776281,-7.995083,3.374385,9.037442,-9.051657,-8.178474],[-0.870795,7.326225,-2.127565,-3.665029,2.528094,-3.150450,-4.723765,-5.162187,8.275946,-9.841201,-6.884975,7.409705,-5.053227,-0.649325,-4.409644],[5.145220,-1.094020,0.695309,4.220957,3.707984,2.070935,7.072029,-0.388245,0.927887,6.642977,7.566703,4.913727,0.523776,8.997639,-7.571235],[-5.551059,-0.523604,-8.604059,8.558088,-1.798631,-4.536666,-5.603565,1.686149,7.263211,-2.007092,-8.472010,-4.089745,-5.073748,7.618447,4.778951],[-7.392349,0.070700,0.221803,-0.328483,-1.301725,9.743966,9.373740,-8.559608,-5.621431,7.845232,-6.943126,-2.297267,7.846729,-8.906260,-5.730404],[-4.546512,9.205789,-9.661674,-6.724370,4.436869,1.678038,2.440556,9.843115,8.741951,-0.191999,-2.873746,-8.542833,1.494275,-2.999199,-2.168599]],[[-1.364196,0.786453,-1.770800,-1.320378,-4.397891,3.601093,-6.568781,-3.509669,8.587570,-8.825433,2.228366,-5.318267,9.833728,3.266042,-4.909897],[1.006442,8.270437,-1.066525,-3.279732,-6.807051,1.264548,-6.480218,-0.989425,8.287414,-6.902590,6.474660,-3.520318,7.474519,-5.441821,6.259203],[-3.520943,4.426849,6.031872,8.155755,-6.324224,0.150511,-6.398236,6.705110,-7.155460,-0.793980,-9.372738,-5.022400,9.617232,5.847687,8.720145],[-6.059437,9.018203,6.343938,-7.344446,-7.289835,-8.661202,-3.067204,2.408248,5.269814,-9.996117,-3.965546,-9.844027,3.348351,-8.043867,7.160491],[-8.320877,0.282084,5.381192,-6.188739,8.391975,-9.310647,-4.544348,-2.695237,-1.437792,-7.148719,2.045753,-1.421639,1.908403,-2.682761,-1.750302],[2.601729,9.348467,-6.117589,9.422531,-4.709099,4.982185,-6.010423,5.151113,2.571605,8.647464,-0.258566,-7.431974,-2.475660,2.555999,2.269681],[-1.677471,-3.470681,2.789608,-0.181103,7.732099,1.605798,0.047995,4.601882,0.769991,-0.581882,-8.737987,4.071506,7.002040,-1.993437,-6.183352],[-9.101185,1.295070,3.152886,6.828423,0.570151,-3.782853,7.806943,7.298288,0.223416,5.549670,2.451065,-3.615911,-0.144606,-7.403127,-8.262265]]], dtype = "float64")#candidate|3900|(12, 8, 15)|const|float64
bop_3901 = relay.bitwise_or(var_3894.astype('int16'), relay.reshape(const_3900.astype('int16'), relay.shape_of(var_3894))) # shape=(12, 8, 15)
uop_3904 = relay.rsqrt(bop_3901.astype('float64')) # shape=(12, 8, 15)
output = relay.Tuple([bop_3896,uop_3904,])
output2 = relay.Tuple([bop_3896,uop_3904,])
func_3908 = relay.Function([var_3894,], output)
mod['func_3908'] = func_3908
mod = relay.transform.InferType()(mod)
var_3909 = relay.var("var_3909", dtype = "float64", shape = (12, 8, 15))#candidate|3909|(12, 8, 15)|var|float64
output = func_3908(var_3909)
func_3910 = relay.Function([var_3909], output)
mutated_mod['func_3910'] = func_3910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1628_call = mod.get_global_var('func_1628')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_3912 = relay.TupleGetItem(func_1628_call(), 0)
call_3913 = relay.TupleGetItem(func_1630_call(), 0)
output = call_3912
output2 = call_3913
func_3918 = relay.Function([], output)
mod['func_3918'] = func_3918
mod = relay.transform.InferType()(mod)
output = func_3918()
func_3919 = relay.Function([], output)
mutated_mod['func_3919'] = func_3919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_3959 = func_2132_call()
call_3960 = func_2132_call()
func_2404_call = mod.get_global_var('func_2404')
func_2406_call = mutated_mod.get_global_var('func_2406')
call_3994 = relay.TupleGetItem(func_2404_call(), 0)
call_3995 = relay.TupleGetItem(func_2406_call(), 0)
func_742_call = mod.get_global_var('func_742')
func_744_call = mutated_mod.get_global_var('func_744')
call_3997 = relay.TupleGetItem(func_742_call(), 0)
call_3998 = relay.TupleGetItem(func_744_call(), 0)
output = relay.Tuple([call_3959,call_3994,call_3997,])
output2 = relay.Tuple([call_3960,call_3995,call_3998,])
func_3999 = relay.Function([], output)
mod['func_3999'] = func_3999
mod = relay.transform.InferType()(mod)
output = func_3999()
func_4000 = relay.Function([], output)
mutated_mod['func_4000'] = func_4000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1692_call = mod.get_global_var('func_1692')
func_1694_call = mutated_mod.get_global_var('func_1694')
call_4090 = relay.TupleGetItem(func_1692_call(), 0)
call_4091 = relay.TupleGetItem(func_1694_call(), 0)
const_4109 = relay.const([[[0.990828,-4.308985,-6.742144,3.052415,-5.805699,-7.069656,3.588962,-8.578283,2.218881,0.695585,-1.997447,-4.489704,-8.154971,-3.587465,1.850805],[5.618836,8.135930,8.521134,8.519233,4.859687,0.548006,-3.637529,-0.645045,-4.164600,1.418338,0.276257,2.466222,8.861548,-2.595766,5.624002],[2.437038,-7.212659,-2.283982,-9.904042,1.828106,4.299200,7.806661,2.063354,9.372327,-8.945444,8.419941,-4.919154,4.853398,-9.967987,2.537644],[1.691234,9.013476,3.401246,9.487173,0.327934,-8.875390,3.924798,9.575313,4.788185,-4.012410,4.634801,1.504190,-8.703258,8.796798,7.751461],[-9.800688,8.427514,-8.378496,-3.119097,-9.813183,-6.708136,-3.027151,4.178955,-2.048504,-8.227100,-8.034858,8.277296,-8.100151,-0.430970,-9.024627],[-6.756148,-2.749026,-9.292567,6.650635,9.656638,3.379273,-0.238803,7.280234,3.290136,-0.323724,1.725183,4.163125,-0.819620,-5.735726,7.878354],[-3.487242,-1.987062,0.896739,-6.915936,7.340434,-0.921469,2.960579,-4.245796,-3.071565,1.996149,-2.295662,5.587785,6.555453,0.067853,-6.628372]],[[-5.611219,-8.620776,-3.947447,-7.017873,-3.893906,-1.046739,-9.410837,6.036979,-8.005470,-8.262001,-6.427789,-1.106472,-8.816162,-3.223612,-9.390272],[-0.998057,1.413628,5.462225,-3.301445,-0.639790,9.995951,7.658883,1.465079,-8.934162,9.881600,5.412068,3.303971,5.903590,4.082946,0.072874],[3.226456,-8.425069,9.746014,-9.632174,8.743181,-3.125907,6.595312,-4.510252,5.561172,-7.658866,6.553748,-5.400059,-6.498153,-1.322773,2.451126],[4.483756,8.924598,-6.793652,2.814318,-3.356687,7.288376,4.072528,4.958536,3.654562,-5.347819,5.275249,6.137140,0.286791,2.494973,9.931251],[8.769141,6.839673,5.089148,4.266757,-7.056002,4.320241,8.087541,-6.355129,7.795097,4.307385,-3.395676,3.206755,-8.992978,2.558015,8.248134],[7.249324,2.814236,3.080168,-4.209044,8.580267,3.385036,-0.665438,8.938475,3.102225,3.000574,-4.572579,4.370174,5.430011,-6.016154,5.411474],[-1.063969,4.941745,-2.267497,-8.031560,0.591437,3.170787,-7.741289,8.606170,8.738212,-9.258553,9.068352,-1.687619,0.715666,5.274959,-6.953308]],[[3.982252,2.315980,-2.637124,6.019416,-5.004107,-5.408174,4.303190,4.788047,-4.204962,2.194240,5.631842,1.127996,1.625501,-3.753914,4.579229],[-3.908166,0.522330,0.735214,3.953268,-6.520641,6.818900,3.058933,8.094344,-7.647937,3.656946,1.187220,-8.114652,-7.417284,7.132967,-8.467475],[0.337563,4.240410,-5.600567,-4.363869,8.423474,8.169718,2.833540,-7.277660,-8.874482,-9.773823,-4.750557,-8.875961,9.863640,6.817976,6.001001],[2.632830,-4.524650,9.742516,9.901752,-1.434879,-4.921922,9.659247,-0.584308,8.345960,-6.357392,1.736979,6.860098,-4.781634,-4.712704,1.115280],[5.314680,5.633588,0.730537,0.809244,-5.717715,8.027104,6.545427,1.089066,-0.950654,-0.934839,-1.694066,-7.466901,-1.131320,-0.568060,-5.212305],[-2.117526,-8.758189,8.635206,6.462021,-2.405250,-4.694242,-9.880196,3.876845,3.956604,-1.259666,-2.962768,4.991463,-4.565615,4.930106,2.954067],[-2.957070,-6.396678,2.497205,-9.043384,-5.165223,-9.821943,0.543083,-0.332128,-0.810335,-9.079527,-0.289691,-5.189198,0.848172,9.202670,4.509647]],[[-6.350068,-6.036615,3.041785,-9.914730,-3.718729,-0.362187,6.170433,-8.487701,-5.180048,-6.119119,1.035694,-2.138568,-1.286216,1.676326,-8.959131],[-3.352045,-1.679853,6.799642,-8.438104,-0.363471,-6.095588,-1.165898,-4.909303,-4.336121,9.543991,7.832503,3.797379,-2.546561,-7.108470,0.036018],[5.994544,1.379370,-3.144823,1.108729,9.119772,-2.937518,-5.052970,3.461538,5.161152,-1.508390,-2.927772,3.577804,1.007807,-7.957700,7.261908],[-8.261157,9.273020,1.280290,1.947902,7.881412,-4.559615,-6.647394,-5.522786,3.276968,4.282741,-2.263583,1.201415,5.468886,-6.247198,-0.534093],[5.634771,-5.093175,5.160563,6.707375,-9.821159,3.195910,-1.512527,1.067402,4.011140,-6.547932,-0.030396,0.362949,-1.607482,-7.410821,-1.060383],[3.063581,-9.343098,-7.041198,1.463271,-2.630023,-2.795951,-4.696919,6.159192,5.956341,-0.137252,-3.425705,4.963578,-0.282667,-5.591379,-4.997241],[-1.205511,1.518752,3.922467,-2.235306,9.919992,-4.091453,-6.484315,-5.686104,-7.266883,-6.797178,9.302154,-7.844216,-9.781306,-1.937637,6.730833]],[[1.284479,-4.167248,-2.359151,2.654241,-2.071876,4.708371,-5.944471,3.724218,-2.766688,6.301882,-1.603907,0.324489,8.398593,-4.673960,-0.403034],[-0.612028,3.016131,-7.069314,-6.424583,-4.791744,-6.765531,7.110289,9.009040,4.731300,-4.544011,-6.140756,4.033428,1.510224,-5.694578,5.087111],[-4.772879,-3.196711,-1.059521,9.146609,-3.437107,-8.289949,-2.015877,-7.027769,-1.583460,2.379209,-4.870140,-8.624339,8.499876,-8.906484,9.634851],[-4.013381,4.961678,9.403951,-3.543439,-7.043088,-1.752468,5.739606,-5.342662,-3.435177,-4.912522,5.511703,6.003746,-1.888578,-2.465157,-1.851982],[-8.032867,3.933439,-7.844668,-2.897671,2.845674,3.856915,6.509059,-8.224466,-7.550278,-6.505855,-9.885288,4.428775,4.148241,-2.390449,-9.874704],[5.846517,-7.348788,-3.872578,7.597001,4.577982,9.692705,-7.494963,4.890067,-6.941782,3.838607,-5.814701,2.393875,-3.619445,-5.710561,-0.469101],[9.081946,1.458656,-9.745810,-8.740751,-8.931016,-8.515836,5.549671,-1.374641,-9.885839,-3.416107,-6.551955,5.798948,1.242160,-1.207957,2.364756]],[[-0.492840,3.376619,-9.071262,-3.654863,5.594559,-6.284007,-3.146420,4.290626,-3.151940,-8.884767,6.079494,-1.609756,-8.988779,-5.025261,9.091981],[9.732393,2.184400,8.269630,-0.629516,-5.084758,3.091497,2.213010,-0.105908,-7.057494,-2.978662,-2.713754,0.389542,2.139144,-3.091105,8.398421],[1.419115,4.385048,2.014060,-5.304899,-1.279084,3.953780,2.760677,-3.380554,8.328036,-0.495032,6.323197,-5.105926,1.904265,-1.824110,6.487863],[7.011695,-4.286619,9.629832,-8.830326,6.497972,4.811438,-8.543647,6.371734,-0.892632,6.504019,7.318089,6.907170,-2.755124,2.166770,-0.213422],[-5.919893,5.038087,5.755855,-1.632769,-8.742629,-4.209252,-3.410249,-3.535481,2.088073,2.637072,9.612483,0.206492,-1.236148,-3.362082,-3.176097],[-8.736614,-7.463816,9.437495,9.822050,2.662270,0.865939,2.998957,-7.671628,-2.415268,-7.729319,9.971766,-9.056273,2.846754,-3.520608,-6.968068],[-1.480024,7.464297,-4.461604,-9.829870,-4.918878,4.363077,-5.607556,2.254137,-5.451816,-9.414686,2.716327,-5.353071,0.925127,-5.116441,4.192592]],[[-3.783627,-5.866309,4.015727,5.592574,-3.982810,3.349188,3.326147,-4.005880,7.808281,-9.525476,6.367930,9.428602,4.606470,1.264116,-7.620494],[-7.978535,6.352139,-1.008971,2.216626,-5.105960,0.827465,4.996608,9.969630,3.150403,-7.073392,1.931692,-3.049129,-6.660034,8.017197,4.086747],[-5.891598,-0.868358,-7.906496,-9.272339,-0.595206,4.693986,8.682739,3.715426,-4.036064,8.256333,-5.284258,9.095982,5.982320,9.029444,7.723536],[-6.993591,-2.841322,2.294069,8.791286,3.022547,9.336069,6.884663,8.794974,2.110204,7.299174,2.678844,8.234630,-3.384316,-4.315936,4.965316],[9.064518,8.638114,3.787200,-3.806244,9.584618,-1.067340,0.148407,9.315416,-0.062674,-7.424352,9.233186,-9.522309,-0.696098,9.582589,-6.499168],[4.187523,-7.776822,6.996914,5.230813,-8.001622,1.534359,4.653264,-3.814229,-9.181492,-2.959424,-0.365633,-7.927746,-8.859054,-1.723342,7.107716],[2.892047,-1.978662,5.766446,8.428537,8.062834,9.616884,-8.999787,7.557087,8.902999,-6.613222,0.314201,8.917347,5.694262,-5.010575,6.873557]],[[-9.530435,-5.392393,-8.502739,-5.144517,1.344701,1.354634,7.802759,8.124189,-9.940415,-5.665139,-9.190063,-6.737694,8.786457,-8.294905,7.284517],[7.721758,-8.549134,-9.604583,5.841766,-8.187836,-0.981483,-1.239506,4.122893,5.781816,-8.466480,-9.830205,2.287220,1.132520,-9.296287,-7.338988],[9.484731,5.220481,-8.635065,1.990683,1.998988,-8.709632,4.920988,1.494732,-3.034166,8.033676,-0.918229,-8.347355,-6.585302,-8.184911,6.563899],[-7.216264,-0.514136,-3.624568,6.836157,-9.744620,2.722349,-6.174519,1.219413,7.589738,-9.597205,7.625110,9.897500,-1.179562,7.187713,-9.091470],[-0.416669,2.327244,2.829336,7.706699,6.371459,7.045642,-4.268467,-9.184127,9.634294,7.535817,-0.720741,-6.946243,-2.410325,4.159176,3.362906],[-9.312116,-7.512647,-7.826683,5.573493,-4.903837,7.205485,7.027892,3.746659,-4.769593,-1.346998,5.131019,-4.058138,-4.702715,-0.984330,-9.216894],[8.534051,5.236260,-4.658860,5.498328,4.501916,4.229052,4.544121,-5.512450,-3.276904,0.965297,2.829373,9.227189,-0.610070,-5.437496,0.708906]],[[-3.906949,-0.079768,-2.123037,8.533528,-9.116926,6.470371,-1.687028,9.660486,5.726470,5.913725,-1.428028,4.580691,-9.195224,4.334688,8.581843],[5.069032,7.152789,9.628650,-4.366187,-2.238895,-6.551872,-0.843592,-0.840055,7.779110,2.763363,2.902385,7.116979,6.669374,-7.557281,5.910447],[5.764701,-7.525854,-4.415299,-8.225964,-9.903101,0.945021,-9.984107,7.386535,0.381592,4.667519,7.068847,-6.930635,7.231496,-5.229640,-0.254353],[4.412066,-0.254915,4.100392,-0.581519,-9.631261,-8.709102,2.757233,0.224126,4.972732,3.502651,-7.548257,4.432001,-9.048032,-9.038173,2.997863],[-1.846683,9.646825,-5.100265,4.813820,-2.711075,5.610498,4.594693,-6.007585,-7.091192,-7.368971,-4.970922,-8.413856,1.231565,-8.145794,-8.632641],[0.045575,9.219330,2.205624,9.157359,-6.129427,-9.156776,-5.043476,-6.253085,5.322351,-2.901990,-2.754236,-9.388238,5.393684,8.710760,0.753374],[9.107060,-8.706489,4.874548,-3.740165,-6.126966,5.021766,-5.627812,8.846412,-4.391601,3.440429,-7.730608,2.696219,8.010723,-3.672723,-9.768828]],[[-5.103482,-2.723351,-2.865528,-8.857751,-9.661497,9.512371,-2.692653,3.508011,-3.211175,-6.292110,5.954544,-8.553677,8.754940,8.979199,-7.962628],[0.384679,9.659835,-8.680484,-8.094637,-0.803045,0.919611,-8.322165,2.000293,7.019337,0.961545,-1.368099,-0.826430,9.211797,-1.603570,-2.607639],[-5.641608,1.658099,8.152337,-8.250578,-6.079295,4.601055,-6.504872,3.636825,5.696519,-3.876282,-3.225641,2.774191,3.398950,-5.648345,5.680950],[-8.258920,0.422610,4.706841,7.650125,-7.193999,-2.167436,-2.747053,4.117594,7.900601,-5.159705,5.607741,-6.127803,-8.709264,2.975234,6.977017],[2.962106,-2.793321,7.435436,6.648088,5.856066,-6.069259,0.928854,8.580699,4.104397,-7.792551,-2.795541,-2.673271,-9.792947,-3.736573,-8.068784],[0.691229,1.613625,-0.758513,9.406989,-9.557104,9.954645,3.230769,6.465443,9.172141,9.080249,-6.148016,4.461790,-5.723512,6.425719,0.282590],[-9.628216,1.152051,-7.534011,-4.263388,-6.367222,5.456974,5.972635,-6.636980,8.118671,0.014753,9.639102,-9.641345,9.082156,7.422814,1.488989]],[[-4.551584,1.512538,7.268295,2.261785,5.031559,-3.860447,4.128733,9.020270,-3.839448,4.847133,7.672755,-7.904387,7.478270,-8.659070,-6.234307],[9.218128,0.260924,0.009241,-2.770962,-5.592058,-5.484590,-2.783290,9.334199,3.332586,-1.482434,7.704536,-0.696302,4.168300,8.230331,-9.707146],[6.611612,-7.174311,-1.889917,-8.191351,-1.032834,-6.381598,5.020163,-0.541030,6.446116,8.667727,-7.572440,6.906877,-5.977384,-1.366443,3.415514],[4.347498,-3.376080,2.264642,4.243347,-3.630199,2.151692,-9.158694,7.274358,1.966429,3.156469,8.100927,8.771580,-0.888665,3.232130,-0.815065],[0.075985,-1.345132,2.057781,-9.224905,3.956388,5.940914,3.162803,0.793855,-6.450947,4.607573,3.968677,-4.250007,-3.620690,-2.202886,5.360114],[-8.312194,2.609431,9.415843,-9.228888,5.139001,-4.942031,-9.590940,4.016919,-8.319459,-5.446346,5.904381,-5.639623,5.875610,-9.957853,6.081354],[-1.893674,-9.195736,-3.167018,-5.997977,2.366856,-5.259373,-9.232675,4.733296,-3.044467,-4.208501,-1.078396,1.019676,3.595846,1.956243,-7.106281]],[[2.820163,-7.395369,-9.682891,4.641485,1.579631,6.583334,-9.113829,1.538669,2.078714,-6.158038,-5.672772,0.423599,6.155182,-7.769841,-6.857080],[1.575718,3.012385,7.002856,-1.967613,2.143873,9.439415,2.428203,-9.276415,4.250602,7.056486,9.030938,-8.707504,6.104610,2.983527,-6.853418],[-1.805313,-4.530035,2.988021,-0.847741,-2.903464,-6.908391,-3.391703,-9.999445,-6.989063,-2.812138,0.854493,0.357171,-6.474561,9.179225,3.393010],[8.167803,-6.334131,3.697854,2.825392,9.594769,7.012764,1.454475,-5.513813,6.255062,1.155266,-6.483628,2.288983,2.501448,-7.763657,-2.700301],[-2.486337,4.237647,6.362576,4.978457,-0.193648,-9.530870,-1.907640,3.518459,2.265680,0.031678,-1.563279,4.084688,4.321127,0.287570,-3.580240],[0.380793,4.936196,9.334458,-8.884438,5.608072,4.154072,-3.116836,4.740618,-1.644333,-1.600495,-9.269116,1.296036,3.266462,-0.465001,-6.299484],[-2.969831,1.299595,7.619983,-8.063667,7.081312,-9.221612,5.666813,-0.972630,0.690172,-7.436675,-2.310035,-9.793408,-6.413799,5.710766,3.907363]],[[9.102402,6.812672,9.968382,4.356896,-3.832964,-1.508478,-8.163588,-7.260212,-7.806977,4.488498,8.148237,9.496929,-9.517974,4.591843,-8.901593],[2.095759,-3.399837,8.846850,3.194919,6.225046,6.611619,8.892024,-2.087097,0.079358,9.271425,9.141172,-4.675382,-2.577579,-9.233541,-8.578380],[-9.741066,8.221949,7.421711,2.276856,7.393651,-6.997699,-5.379255,-9.741729,0.066586,0.694349,8.348643,-8.260397,-9.723271,-6.763885,-2.166933],[8.427723,-8.017268,-9.571823,6.508441,6.803211,-8.479878,-2.370435,8.557725,5.011530,-5.411287,7.525835,9.107462,2.528328,-1.175703,7.570795],[2.910961,-7.939324,5.345106,3.962144,-0.101614,3.052071,-7.879270,8.656907,1.819732,1.515203,9.701552,4.727958,-3.459295,-1.390534,-1.877067],[5.845669,9.060405,1.202486,-0.493023,1.371732,7.306595,-9.285383,-1.890372,6.687816,-4.170062,6.606592,4.204786,4.909195,-4.744878,7.786482],[6.212091,-8.375035,-1.009557,2.342987,-2.222111,0.203762,4.032958,0.900136,3.625994,5.107981,3.139152,6.990558,1.949244,-3.140660,4.147914]],[[-4.616525,9.532928,3.089737,3.948490,-4.076008,9.263537,8.595274,7.363090,5.803497,-0.794549,1.864789,1.891414,-0.776793,6.964304,-1.089196],[-9.561518,9.602332,9.141764,3.988902,2.002822,-2.665815,4.655138,0.935442,1.527165,8.736064,-4.606559,7.948230,-7.146673,-5.537586,5.309614],[-2.613590,-1.602625,8.738010,-6.217481,-3.468249,-8.138581,-6.168195,-6.700248,9.584588,-3.069434,5.767259,7.010589,4.297250,3.490659,3.153477],[-7.669394,-3.007969,4.220478,4.135883,7.429749,7.403125,-9.404233,4.426877,2.298638,-8.137288,-5.130320,-9.464822,0.313593,7.832209,-9.819486],[5.867038,-2.057173,8.660575,5.086248,5.905275,-2.621473,-4.837601,-4.285470,0.317739,-8.041418,-5.501299,-4.187705,-6.562634,-9.072241,-7.842825],[-1.449940,7.178046,5.852040,-2.547886,9.958678,8.562943,-2.290282,8.988127,-5.788599,7.520781,-3.306084,0.543747,-5.548416,-9.894378,1.499713],[8.454978,-0.590001,-4.624218,0.400828,-9.165373,-3.161923,-0.297796,-7.622761,2.618986,6.144199,8.550530,-7.067821,-9.292199,2.639289,1.167129]]], dtype = "float32")#candidate|4109|(14, 7, 15)|const|float32
bop_4110 = relay.minimum(call_4090.astype('uint16'), relay.reshape(const_4109.astype('uint16'), relay.shape_of(call_4090))) # shape=(14, 7, 15)
bop_4113 = relay.minimum(call_4091.astype('uint16'), relay.reshape(const_4109.astype('uint16'), relay.shape_of(call_4091))) # shape=(14, 7, 15)
output = relay.Tuple([bop_4110,])
output2 = relay.Tuple([bop_4113,])
func_4114 = relay.Function([], output)
mod['func_4114'] = func_4114
mod = relay.transform.InferType()(mod)
mutated_mod['func_4114'] = func_4114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4114_call = mutated_mod.get_global_var('func_4114')
call_4115 = func_4114_call()
output = call_4115
func_4116 = relay.Function([], output)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1628_call = mod.get_global_var('func_1628')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_4126 = relay.TupleGetItem(func_1628_call(), 0)
call_4127 = relay.TupleGetItem(func_1630_call(), 0)
func_2231_call = mod.get_global_var('func_2231')
func_2234_call = mutated_mod.get_global_var('func_2234')
var_4130 = relay.var("var_4130", dtype = "float32", shape = (72,))#candidate|4130|(72,)|var|float32
call_4129 = relay.TupleGetItem(func_2231_call(relay.reshape(var_4130.astype('float32'), [72,])), 4)
call_4131 = relay.TupleGetItem(func_2234_call(relay.reshape(var_4130.astype('float32'), [72,])), 4)
output = relay.Tuple([call_4126,call_4129,var_4130,])
output2 = relay.Tuple([call_4127,call_4131,var_4130,])
func_4149 = relay.Function([var_4130,], output)
mod['func_4149'] = func_4149
mod = relay.transform.InferType()(mod)
var_4150 = relay.var("var_4150", dtype = "float32", shape = (72,))#candidate|4150|(72,)|var|float32
output = func_4149(var_4150)
func_4151 = relay.Function([var_4150], output)
mutated_mod['func_4151'] = func_4151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_4165 = relay.TupleGetItem(func_2067_call(), 0)
call_4166 = relay.TupleGetItem(func_2069_call(), 0)
output = call_4165
output2 = call_4166
func_4167 = relay.Function([], output)
mod['func_4167'] = func_4167
mod = relay.transform.InferType()(mod)
output = func_4167()
func_4168 = relay.Function([], output)
mutated_mod['func_4168'] = func_4168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4173 = relay.var("var_4173", dtype = "float32", shape = (2, 2, 12))#candidate|4173|(2, 2, 12)|var|float32
uop_4174 = relay.acosh(var_4173.astype('float32')) # shape=(2, 2, 12)
uop_4179 = relay.exp(var_4173.astype('float64')) # shape=(2, 2, 12)
output = relay.Tuple([uop_4174,uop_4179,])
output2 = relay.Tuple([uop_4174,uop_4179,])
func_4181 = relay.Function([var_4173,], output)
mod['func_4181'] = func_4181
mod = relay.transform.InferType()(mod)
var_4182 = relay.var("var_4182", dtype = "float32", shape = (2, 2, 12))#candidate|4182|(2, 2, 12)|var|float32
output = func_4181(var_4182)
func_4183 = relay.Function([var_4182], output)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mod.get_global_var('func_1923')
func_1925_call = mutated_mod.get_global_var('func_1925')
call_4201 = func_1923_call()
call_4202 = func_1923_call()
output = relay.Tuple([call_4201,])
output2 = relay.Tuple([call_4202,])
func_4219 = relay.Function([], output)
mod['func_4219'] = func_4219
mod = relay.transform.InferType()(mod)
output = func_4219()
func_4220 = relay.Function([], output)
mutated_mod['func_4220'] = func_4220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1702_call = mod.get_global_var('func_1702')
func_1703_call = mutated_mod.get_global_var('func_1703')
call_4283 = relay.TupleGetItem(func_1702_call(), 0)
call_4284 = relay.TupleGetItem(func_1703_call(), 0)
output = call_4283
output2 = call_4284
func_4321 = relay.Function([], output)
mod['func_4321'] = func_4321
mod = relay.transform.InferType()(mod)
output = func_4321()
func_4322 = relay.Function([], output)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4167_call = mod.get_global_var('func_4167')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_4426 = func_4167_call()
call_4427 = func_4167_call()
output = call_4426
output2 = call_4427
func_4428 = relay.Function([], output)
mod['func_4428'] = func_4428
mod = relay.transform.InferType()(mod)
output = func_4428()
func_4429 = relay.Function([], output)
mutated_mod['func_4429'] = func_4429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mod.get_global_var('func_2306')
func_2307_call = mutated_mod.get_global_var('func_2307')
call_4460 = relay.TupleGetItem(func_2306_call(), 0)
call_4461 = relay.TupleGetItem(func_2307_call(), 0)
output = relay.Tuple([call_4460,])
output2 = relay.Tuple([call_4461,])
func_4464 = relay.Function([], output)
mod['func_4464'] = func_4464
mod = relay.transform.InferType()(mod)
mutated_mod['func_4464'] = func_4464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4464_call = mutated_mod.get_global_var('func_4464')
call_4465 = func_4464_call()
output = call_4465
func_4466 = relay.Function([], output)
mutated_mod['func_4466'] = func_4466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_4474 = relay.TupleGetItem(func_422_call(), 2)
call_4475 = relay.TupleGetItem(func_423_call(), 2)
output = call_4474
output2 = call_4475
func_4476 = relay.Function([], output)
mod['func_4476'] = func_4476
mod = relay.transform.InferType()(mod)
output = func_4476()
func_4477 = relay.Function([], output)
mutated_mod['func_4477'] = func_4477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_4529 = relay.TupleGetItem(func_1336_call(), 0)
call_4530 = relay.TupleGetItem(func_1337_call(), 0)
uop_4564 = relay.log2(call_4529.astype('float64')) # shape=(14, 7, 15)
uop_4566 = relay.log2(call_4530.astype('float64')) # shape=(14, 7, 15)
func_3322_call = mod.get_global_var('func_3322')
func_3326_call = mutated_mod.get_global_var('func_3326')
var_4568 = relay.var("var_4568", dtype = "float32", shape = (72,))#candidate|4568|(72,)|var|float32
var_4569 = relay.var("var_4569", dtype = "int64", shape = (96,))#candidate|4569|(96,)|var|int64
call_4567 = relay.TupleGetItem(func_3322_call(relay.reshape(var_4568.astype('float32'), [72, 1]), relay.reshape(var_4569.astype('int64'), [96, 1]), ), 1)
call_4570 = relay.TupleGetItem(func_3326_call(relay.reshape(var_4568.astype('float32'), [72, 1]), relay.reshape(var_4569.astype('int64'), [96, 1]), ), 1)
func_769_call = mod.get_global_var('func_769')
func_771_call = mutated_mod.get_global_var('func_771')
const_4582 = relay.const([1,8,7,-7,5,2,4,2,2,-6,-2,8,3,-7,3,2,7,2,-5,9,-4,6,9,-3,7,9,-10,-1,10,-7,-1,9,-9,2,-9,-6,9,2,-9,10,-4,7,-5,-7,8,10,-3,5,-1,7,-7,-2,6,-6,-8,-3,5,-6,-10,-7,-7,6,-7,3,10,-5,-7,-3,2,-8,-8,-3,-10,-5,-2,-9,-1,-10,-9,-4,6,-6,-8,-4,10,1,2,3,4,4,-2,4,9,-2,8,-7,-9,7,-2,8,-2,2,-4,6,10,-6,5,6,6,2,5,-8,2,2,6,-8,10,2,4,3,-8,-8,9,-6,-3,-8,-10,5,-4,8,8,8,-7,-1,6,4,-3,6,-8,6,3,-2,-10,6,3,-4,3,8,-10,-10,-4,-2,-1,-8,3,10,8,10,8,-4,2,-1,-7,5,-7,6,3,8,-8,-3,-2,10,5,-10,6,4,-9,4,-4,-7,-8,-4,-3,-5,1,-4,10,-1,-4,6,4,-1,-4,10,6,3,-10,-4,-9,6,8,-3,5,-3,-6,2,-10,-2,8,6,-1,7,-6,-6,4,7,3,-2,5,-1,6,-2,4,5,-7,-7,10,2,7,-10,-2,-2,-8,-5,-10,5,-8,6,-10,8,-2,6,9,7,-5,-6,8,2,-4,9,3,-2,1,-7,-9,-10,9,4,-3,-5,-1,-5,-1,-5,6,-9,-9,4,-8,-5,-5,7,-1,4,-3,-4,2,-3,8,7,1,-5,-8,-2,-1,3,-2,-9,-3,-8,-2,1,4,6,-2,-8,-1,-5,3,5,-6,9,1,10,-3,-2,-1,-10,9,-8,2,-3,-10,-4,-8,6,-7,10,5,2,8,-6,7,5,3,-6,-1,8,7,-4,-8,9,-9,5,-10,-5,-1,9,-4,-3,-10,-2,9,-2,-9,-3,1,4,10,-6,-6,-9,10,4,-4,3,-7,-7,-4,-3,7,9,8,10,3,-8,-6,6,7,-2,-9,7,1,-4,-4,7,3,-1,-1,10,-6,-3,-7,8,8,-9,8,-5,-9,-3,6,-4,8,-1,-6,-5,1,-3,-6,6,-3,-1,10,-10,-4,4,5,-8,-5,3,2,-2,-5,-5,9,5,4,-5,-3,-5,-9,5,-7,8,4,3,-9,-10,1,-5,5,-2,-7,5,-1,-5,9,4,-4,10,-4,-3,10,-9,-7,1,6,2,2,5,10,-6,1,7,-4,1,-1,-3,8,-2,-8,-6,10,-2,-7,-8,7,6], dtype = "uint32")#candidate|4582|(468,)|const|uint32
call_4581 = relay.TupleGetItem(func_769_call(relay.reshape(const_4582.astype('uint32'), [13, 12, 3])), 0)
call_4583 = relay.TupleGetItem(func_771_call(relay.reshape(const_4582.astype('uint32'), [13, 12, 3])), 0)
bop_4590 = relay.divide(uop_4564.astype('float64'), relay.reshape(call_4529.astype('float64'), relay.shape_of(uop_4564))) # shape=(14, 7, 15)
bop_4593 = relay.divide(uop_4566.astype('float64'), relay.reshape(call_4530.astype('float64'), relay.shape_of(uop_4566))) # shape=(14, 7, 15)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_4594 = func_555_call()
call_4595 = func_555_call()
func_3413_call = mod.get_global_var('func_3413')
func_3414_call = mutated_mod.get_global_var('func_3414')
call_4610 = func_3413_call()
call_4611 = func_3413_call()
output = relay.Tuple([call_4567,var_4568,var_4569,call_4581,const_4582,bop_4590,call_4594,call_4610,])
output2 = relay.Tuple([call_4570,var_4568,var_4569,call_4583,const_4582,bop_4593,call_4595,call_4611,])
func_4612 = relay.Function([var_4568,var_4569,], output)
mod['func_4612'] = func_4612
mod = relay.transform.InferType()(mod)
var_4613 = relay.var("var_4613", dtype = "float32", shape = (72,))#candidate|4613|(72,)|var|float32
var_4614 = relay.var("var_4614", dtype = "int64", shape = (96,))#candidate|4614|(96,)|var|int64
output = func_4612(var_4613,var_4614,)
func_4615 = relay.Function([var_4613,var_4614,], output)
mutated_mod['func_4615'] = func_4615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4644 = relay.var("var_4644", dtype = "float32", shape = (2, 9, 3))#candidate|4644|(2, 9, 3)|var|float32
uop_4645 = relay.acosh(var_4644.astype('float32')) # shape=(2, 9, 3)
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_4684 = relay.TupleGetItem(func_2122_call(), 0)
call_4685 = relay.TupleGetItem(func_2124_call(), 0)
uop_4690 = relay.acos(call_4684.astype('float32')) # shape=(14, 7, 15)
uop_4692 = relay.acos(call_4685.astype('float32')) # shape=(14, 7, 15)
bop_4705 = relay.maximum(uop_4645.astype('uint16'), relay.reshape(var_4644.astype('uint16'), relay.shape_of(uop_4645))) # shape=(2, 9, 3)
output = relay.Tuple([uop_4690,bop_4705,])
output2 = relay.Tuple([uop_4692,bop_4705,])
func_4712 = relay.Function([var_4644,], output)
mod['func_4712'] = func_4712
mod = relay.transform.InferType()(mod)
mutated_mod['func_4712'] = func_4712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4713 = relay.var("var_4713", dtype = "float32", shape = (2, 9, 3))#candidate|4713|(2, 9, 3)|var|float32
func_4712_call = mutated_mod.get_global_var('func_4712')
call_4714 = func_4712_call(var_4713)
output = call_4714
func_4715 = relay.Function([var_4713], output)
mutated_mod['func_4715'] = func_4715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_4760 = relay.TupleGetItem(func_1769_call(), 3)
call_4761 = relay.TupleGetItem(func_1770_call(), 3)
uop_4774 = relay.asin(call_4760.astype('float32')) # shape=(416,)
uop_4776 = relay.asin(call_4761.astype('float32')) # shape=(416,)
func_2992_call = mod.get_global_var('func_2992')
func_2995_call = mutated_mod.get_global_var('func_2995')
var_4787 = relay.var("var_4787", dtype = "float32", shape = (864,))#candidate|4787|(864,)|var|float32
call_4786 = relay.TupleGetItem(func_2992_call(relay.reshape(var_4787.astype('float32'), [9, 96])), 1)
call_4788 = relay.TupleGetItem(func_2995_call(relay.reshape(var_4787.astype('float32'), [9, 96])), 1)
func_1492_call = mod.get_global_var('func_1492')
func_1494_call = mutated_mod.get_global_var('func_1494')
var_4799 = relay.var("var_4799", dtype = "int16", shape = (110,))#candidate|4799|(110,)|var|int16
call_4798 = func_1492_call(relay.reshape(var_4799.astype('int16'), [11, 10, 1]))
call_4800 = func_1492_call(relay.reshape(var_4799.astype('int16'), [11, 10, 1]))
bop_4803 = relay.maximum(uop_4774.astype('uint64'), relay.reshape(call_4760.astype('uint64'), relay.shape_of(uop_4774))) # shape=(416,)
bop_4806 = relay.maximum(uop_4776.astype('uint64'), relay.reshape(call_4761.astype('uint64'), relay.shape_of(uop_4776))) # shape=(416,)
func_2042_call = mod.get_global_var('func_2042')
func_2043_call = mutated_mod.get_global_var('func_2043')
call_4809 = relay.TupleGetItem(func_2042_call(), 1)
call_4810 = relay.TupleGetItem(func_2043_call(), 1)
func_4149_call = mod.get_global_var('func_4149')
func_4151_call = mutated_mod.get_global_var('func_4151')
var_4817 = relay.var("var_4817", dtype = "float32", shape = (1, 72))#candidate|4817|(1, 72)|var|float32
call_4816 = relay.TupleGetItem(func_4149_call(relay.reshape(var_4817.astype('float32'), [72,])), 2)
call_4818 = relay.TupleGetItem(func_4151_call(relay.reshape(var_4817.astype('float32'), [72,])), 2)
func_2481_call = mod.get_global_var('func_2481')
func_2485_call = mutated_mod.get_global_var('func_2485')
const_4832 = relay.const([False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True], dtype = "bool")#candidate|4832|(800,)|const|bool
call_4831 = relay.TupleGetItem(func_2481_call(relay.reshape(const_4832.astype('bool'), [16, 5, 10]), relay.reshape(const_4832.astype('bool'), [16, 5, 10]), relay.reshape(const_4832.astype('int8'), [16, 5, 10]), ), 1)
call_4833 = relay.TupleGetItem(func_2485_call(relay.reshape(const_4832.astype('bool'), [16, 5, 10]), relay.reshape(const_4832.astype('bool'), [16, 5, 10]), relay.reshape(const_4832.astype('int8'), [16, 5, 10]), ), 1)
output = relay.Tuple([call_4786,var_4787,call_4798,var_4799,bop_4803,call_4809,call_4816,var_4817,call_4831,const_4832,])
output2 = relay.Tuple([call_4788,var_4787,call_4800,var_4799,bop_4806,call_4810,call_4818,var_4817,call_4833,const_4832,])
func_4837 = relay.Function([var_4787,var_4799,var_4817,], output)
mod['func_4837'] = func_4837
mod = relay.transform.InferType()(mod)
var_4838 = relay.var("var_4838", dtype = "float32", shape = (864,))#candidate|4838|(864,)|var|float32
var_4839 = relay.var("var_4839", dtype = "int16", shape = (110,))#candidate|4839|(110,)|var|int16
var_4840 = relay.var("var_4840", dtype = "float32", shape = (1, 72))#candidate|4840|(1, 72)|var|float32
output = func_4837(var_4838,var_4839,var_4840,)
func_4841 = relay.Function([var_4838,var_4839,var_4840,], output)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4428_call = mod.get_global_var('func_4428')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_4925 = func_4428_call()
call_4926 = func_4428_call()
output = relay.Tuple([call_4925,])
output2 = relay.Tuple([call_4926,])
func_4949 = relay.Function([], output)
mod['func_4949'] = func_4949
mod = relay.transform.InferType()(mod)
mutated_mod['func_4949'] = func_4949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mutated_mod.get_global_var('func_4949')
call_4950 = func_4949_call()
output = call_4950
func_4951 = relay.Function([], output)
mutated_mod['func_4951'] = func_4951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_4957 = relay.TupleGetItem(func_2067_call(), 0)
call_4958 = relay.TupleGetItem(func_2069_call(), 0)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
call_4964 = func_78_call(relay.reshape(call_4957.astype('float32'), [14, 7, 15]))
call_4965 = func_78_call(relay.reshape(call_4957.astype('float32'), [14, 7, 15]))
bop_4979 = relay.bitwise_xor(call_4957.astype('uint64'), relay.reshape(call_4964.astype('uint64'), relay.shape_of(call_4957))) # shape=(14, 7, 15)
bop_4982 = relay.bitwise_xor(call_4958.astype('uint64'), relay.reshape(call_4965.astype('uint64'), relay.shape_of(call_4958))) # shape=(14, 7, 15)
output = bop_4979
output2 = bop_4982
func_4983 = relay.Function([], output)
mod['func_4983'] = func_4983
mod = relay.transform.InferType()(mod)
output = func_4983()
func_4984 = relay.Function([], output)
mutated_mod['func_4984'] = func_4984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1026_call = mod.get_global_var('func_1026')
func_1027_call = mutated_mod.get_global_var('func_1027')
call_4992 = func_1026_call()
call_4993 = func_1026_call()
uop_5005 = relay.sigmoid(call_4992.astype('float64')) # shape=(14, 7, 15)
uop_5007 = relay.sigmoid(call_4993.astype('float64')) # shape=(14, 7, 15)
func_2306_call = mod.get_global_var('func_2306')
func_2307_call = mutated_mod.get_global_var('func_2307')
call_5012 = relay.TupleGetItem(func_2306_call(), 0)
call_5013 = relay.TupleGetItem(func_2307_call(), 0)
func_1807_call = mod.get_global_var('func_1807')
func_1809_call = mutated_mod.get_global_var('func_1809')
call_5015 = func_1807_call()
call_5016 = func_1807_call()
uop_5024 = relay.asin(call_4992.astype('float64')) # shape=(14, 7, 15)
uop_5026 = relay.asin(call_4993.astype('float64')) # shape=(14, 7, 15)
output = relay.Tuple([uop_5005,call_5012,call_5015,uop_5024,])
output2 = relay.Tuple([uop_5007,call_5013,call_5016,uop_5026,])
func_5027 = relay.Function([], output)
mod['func_5027'] = func_5027
mod = relay.transform.InferType()(mod)
mutated_mod['func_5027'] = func_5027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5027_call = mutated_mod.get_global_var('func_5027')
call_5028 = func_5027_call()
output = call_5028
func_5029 = relay.Function([], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mod.get_global_var('func_1923')
func_1925_call = mutated_mod.get_global_var('func_1925')
call_5030 = func_1923_call()
call_5031 = func_1923_call()
output = call_5030
output2 = call_5031
func_5040 = relay.Function([], output)
mod['func_5040'] = func_5040
mod = relay.transform.InferType()(mod)
mutated_mod['func_5040'] = func_5040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5040_call = mutated_mod.get_global_var('func_5040')
call_5041 = func_5040_call()
output = call_5041
func_5042 = relay.Function([], output)
mutated_mod['func_5042'] = func_5042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_555_call = mod.get_global_var('func_555')
func_557_call = mutated_mod.get_global_var('func_557')
call_5063 = func_555_call()
call_5064 = func_555_call()
func_599_call = mod.get_global_var('func_599')
func_605_call = mutated_mod.get_global_var('func_605')
const_5075 = relay.const([-10,-9,-6,10,8,-8,8,-5,-4,-4,-5,-10,2,4,-5,-9,1,-3,6,-9,-3,-9,4,3,-10,1,-1,6,9,5,2,8,5,-2,-7,5,9,-2,-10,1,2,-7,-2,-6,-2,-4,-8,-10,4,-4,-5,2,7,-7,10,6,1,-7,-6,-4,8,3,-10,9,-4], dtype = "uint64")#candidate|5075|(65,)|const|uint64
var_5076 = relay.var("var_5076", dtype = "uint64", shape = (585,))#candidate|5076|(585,)|var|uint64
const_5077 = relay.const([1.375752,3.498893,8.991255,9.433678,-8.592203,3.811147,3.708203,-9.685329,8.872835,5.937770,-8.786987,6.376448,-3.979445,5.990836,3.826750,7.258947,-6.114748,-2.308460,-8.242808,-2.731543,-3.010056,5.657881,8.316335,-0.365864,-5.761841,6.696643,5.740071,7.310537,-7.666024,-0.448235,-4.748885,-4.820295,-8.564535,-0.229026,-2.366805,-3.794114,-4.419759,-2.160647,0.072166,0.566471,-4.612831,-4.109774,1.269920,-2.079984,-4.208570,7.676647,-2.507119,-1.353528,-7.670020,5.405747,6.374957,-7.740105,-2.245053,-9.328536,2.759935,4.473974,-5.367714,-8.515839,0.293072,1.002312,9.378887,-1.396549,4.537308,-1.577664,-7.779759,-3.792316,0.845733,3.978903,-4.888687,2.524618,6.962229,5.231370,-0.460089,-6.336870,-7.405583,-6.784607,-5.701925,-3.078305,0.472214,-8.837284,-4.899939,0.701499,3.503977,0.038392,-8.573320,0.100121,3.479442,3.504633,-6.468081,-6.510588,-6.794884,-2.523602,4.051049,-7.375447,-3.549685,-9.780829,6.334245,-2.959374,0.429650,-8.694500,7.430050,8.566964,9.779206,-8.718749,-4.917216,-5.941178,3.210544,-2.725933,5.908942,2.552317,8.429102,6.965363,-2.767312,0.316627,6.390051,2.012853,0.065986,-7.753896,-6.349461,5.110935,2.641527,6.410788,-0.556173,5.240241,-6.277005,6.464512,1.273779,-7.459674,5.561602,4.501793,-4.733654,7.166976,8.399214,-8.040855,-3.625631,4.224682,1.739080,3.651930,-8.345179,-4.505247,4.773391,-5.304437,-4.654104,-2.439954,-4.136460,-2.885937,1.700933,-1.333026,7.157484,-7.831399,-9.944898,0.630146,-7.499394,-1.678010,-6.071997,1.194494,-5.498729,-1.589359,-3.946829,-3.891292,-9.051056,2.904962,-9.849031,-0.337579,-1.977093,-8.634298,-3.521382,4.343617,-8.361298,1.039091,-1.560066,-1.052262,-0.022985,1.007749,-8.206934,6.665144,-9.426375,-7.300708,1.891251,5.916026,7.932287,-7.601963,7.491421,-1.726532,0.612941,-6.988244,-4.797555,6.811466,5.732352,2.337744,-5.514436,-8.108367,-7.622943,-7.035467,-7.301031,5.620484,2.598774,5.533802,8.084960,-9.530520,-3.522867,-1.538648,4.220745,2.261064,-4.530875,-5.179231,-3.379844,-2.792632,3.875219,-5.701026,-6.720222,4.838432,0.883873,-8.628966,-8.867578,-3.845715,-8.325455,9.463426,-3.102259,-3.065208,-7.751590,6.230332,-0.583095,0.450228,-6.341534,7.892791,0.470486,-4.488749,6.555357,-5.616187,1.176413,-2.433282,9.330233,-6.269716,1.893972,5.982021,7.443463,-2.067420,-3.090282,-5.577789,0.562607,2.105199,-1.370004,4.353873,-2.730821,-0.674114,-6.244245,2.303935,-2.763079,3.587313,2.732122,1.411427,-0.198984,-6.485081,7.217980,5.152531,-2.412077,-7.150993,8.834901,-9.374454,9.260826,2.203975,-6.808345,6.909096,-0.335174,-5.405532,7.239294,6.177641,6.639888,-1.408556,-0.392267,4.810911,-7.051177,3.635751,3.769313,-9.435771,-4.074708,5.245031,-3.481521,-7.590629,5.451349,-2.857066,-6.712798,-4.042588,9.483170,9.509420,7.971257,-9.119790,-3.338074,6.840879,-8.878137,-3.347890,6.359562,3.352985,-3.634456,1.768613,-2.121388,8.068934,6.170807,-3.015514], dtype = "float64")#candidate|5077|(300,)|const|float64
var_5078 = relay.var("var_5078", dtype = "float32", shape = (72, 1))#candidate|5078|(72, 1)|var|float32
call_5074 = relay.TupleGetItem(func_599_call(relay.reshape(const_5075.astype('uint64'), [13, 5, 1]), relay.reshape(var_5076.astype('uint64'), [13, 5, 9]), relay.reshape(const_5077.astype('float64'), [300,]), relay.reshape(var_5078.astype('float32'), [72, 1]), ), 4)
call_5079 = relay.TupleGetItem(func_605_call(relay.reshape(const_5075.astype('uint64'), [13, 5, 1]), relay.reshape(var_5076.astype('uint64'), [13, 5, 9]), relay.reshape(const_5077.astype('float64'), [300,]), relay.reshape(var_5078.astype('float32'), [72, 1]), ), 4)
bop_5084 = relay.greater_equal(const_5077.astype('bool'), var_5078.astype('bool')) # shape=(72, 300)
var_5089 = relay.var("var_5089", dtype = "bool", shape = (72, 300))#candidate|5089|(72, 300)|var|bool
bop_5090 = relay.logical_and(bop_5084.astype('bool'), relay.reshape(var_5089.astype('bool'), relay.shape_of(bop_5084))) # shape=(72, 300)
func_1302_call = mod.get_global_var('func_1302')
func_1304_call = mutated_mod.get_global_var('func_1304')
call_5102 = relay.TupleGetItem(func_1302_call(relay.reshape(var_5078.astype('float32'), [6, 12])), 3)
call_5103 = relay.TupleGetItem(func_1304_call(relay.reshape(var_5078.astype('float32'), [6, 12])), 3)
var_5105 = relay.var("var_5105", dtype = "bool", shape = (72, 300))#candidate|5105|(72, 300)|var|bool
bop_5106 = relay.bitwise_xor(bop_5084.astype('int16'), relay.reshape(var_5105.astype('int16'), relay.shape_of(bop_5084))) # shape=(72, 300)
output = relay.Tuple([call_5063,call_5074,const_5075,var_5076,bop_5090,call_5102,bop_5106,])
output2 = relay.Tuple([call_5064,call_5079,const_5075,var_5076,bop_5090,call_5103,bop_5106,])
func_5131 = relay.Function([var_5076,var_5078,var_5089,var_5105,], output)
mod['func_5131'] = func_5131
mod = relay.transform.InferType()(mod)
var_5132 = relay.var("var_5132", dtype = "uint64", shape = (585,))#candidate|5132|(585,)|var|uint64
var_5133 = relay.var("var_5133", dtype = "float32", shape = (72, 1))#candidate|5133|(72, 1)|var|float32
var_5134 = relay.var("var_5134", dtype = "bool", shape = (72, 300))#candidate|5134|(72, 300)|var|bool
var_5135 = relay.var("var_5135", dtype = "bool", shape = (72, 300))#candidate|5135|(72, 300)|var|bool
output = func_5131(var_5132,var_5133,var_5134,var_5135,)
func_5136 = relay.Function([var_5132,var_5133,var_5134,var_5135,], output)
mutated_mod['func_5136'] = func_5136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_5175 = func_1262_call()
call_5176 = func_1262_call()
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_5189 = relay.TupleGetItem(func_1769_call(), 0)
call_5190 = relay.TupleGetItem(func_1770_call(), 0)
output = relay.Tuple([call_5175,call_5189,])
output2 = relay.Tuple([call_5176,call_5190,])
func_5193 = relay.Function([], output)
mod['func_5193'] = func_5193
mod = relay.transform.InferType()(mod)
output = func_5193()
func_5194 = relay.Function([], output)
mutated_mod['func_5194'] = func_5194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2276_call = mod.get_global_var('func_2276')
func_2278_call = mutated_mod.get_global_var('func_2278')
call_5199 = relay.TupleGetItem(func_2276_call(), 0)
call_5200 = relay.TupleGetItem(func_2278_call(), 0)
output = relay.Tuple([call_5199,])
output2 = relay.Tuple([call_5200,])
func_5201 = relay.Function([], output)
mod['func_5201'] = func_5201
mod = relay.transform.InferType()(mod)
mutated_mod['func_5201'] = func_5201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5201_call = mutated_mod.get_global_var('func_5201')
call_5202 = func_5201_call()
output = call_5202
func_5203 = relay.Function([], output)
mutated_mod['func_5203'] = func_5203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mod.get_global_var('func_2306')
func_2307_call = mutated_mod.get_global_var('func_2307')
call_5216 = relay.TupleGetItem(func_2306_call(), 0)
call_5217 = relay.TupleGetItem(func_2307_call(), 0)
func_535_call = mod.get_global_var('func_535')
func_538_call = mutated_mod.get_global_var('func_538')
var_5221 = relay.var("var_5221", dtype = "float64", shape = (300,))#candidate|5221|(300,)|var|float64
call_5220 = relay.TupleGetItem(func_535_call(relay.reshape(call_5216.astype('float32'), [14, 7, 15]), relay.reshape(var_5221.astype('float64'), [300,]), ), 2)
call_5222 = relay.TupleGetItem(func_538_call(relay.reshape(call_5216.astype('float32'), [14, 7, 15]), relay.reshape(var_5221.astype('float64'), [300,]), ), 2)
func_2276_call = mod.get_global_var('func_2276')
func_2278_call = mutated_mod.get_global_var('func_2278')
call_5227 = relay.TupleGetItem(func_2276_call(), 0)
call_5228 = relay.TupleGetItem(func_2278_call(), 0)
output = relay.Tuple([call_5216,call_5220,var_5221,call_5227,])
output2 = relay.Tuple([call_5217,call_5222,var_5221,call_5228,])
func_5239 = relay.Function([var_5221,], output)
mod['func_5239'] = func_5239
mod = relay.transform.InferType()(mod)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5240 = relay.var("var_5240", dtype = "float64", shape = (300,))#candidate|5240|(300,)|var|float64
func_5239_call = mutated_mod.get_global_var('func_5239')
call_5241 = func_5239_call(var_5240)
output = call_5241
func_5242 = relay.Function([var_5240], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5246 = relay.const([[[-7,-4,-7,1,4,-3,10,6,5],[5,-5,-8,1,3,7,2,7,4],[8,-7,5,-1,-1,-2,-2,4,-7]],[[-6,10,-10,1,3,-8,4,-2,8],[-9,2,-6,8,-3,-5,7,-9,-9],[5,9,-2,5,-2,-4,-2,-9,-5]],[[-1,3,5,6,-1,10,2,-2,3],[7,-9,-3,-9,-8,-3,3,3,-10],[6,-2,-9,-7,-8,-1,4,-9,8]],[[5,-8,6,-5,-5,-7,-9,-9,1],[5,-10,-8,6,-10,6,6,7,-4],[3,-4,-10,-3,5,3,-1,-4,3]],[[-3,-6,3,-3,3,1,5,-9,-4],[1,9,1,-1,-2,5,-9,-4,1],[6,6,-6,-7,1,-9,6,-4,7]],[[6,-10,-5,4,3,-10,7,10,5],[8,-6,-7,-8,4,-7,7,-1,2],[2,-1,-5,-1,6,4,7,3,-5]],[[-8,-5,-4,5,8,10,3,7,9],[6,-4,1,-6,-2,-10,1,-9,-2],[9,-6,-3,-6,-8,-10,-4,-5,9]]], dtype = "int16")#candidate|5246|(7, 3, 9)|const|int16
var_5247 = relay.var("var_5247", dtype = "int16", shape = (7, 3, 9))#candidate|5247|(7, 3, 9)|var|int16
bop_5248 = relay.minimum(const_5246.astype('int16'), relay.reshape(var_5247.astype('int16'), relay.shape_of(const_5246))) # shape=(7, 3, 9)
uop_5256 = relay.erf(var_5247.astype('float64')) # shape=(7, 3, 9)
func_5027_call = mod.get_global_var('func_5027')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_5263 = relay.TupleGetItem(func_5027_call(), 3)
call_5264 = relay.TupleGetItem(func_5029_call(), 3)
output = relay.Tuple([bop_5248,uop_5256,call_5263,])
output2 = relay.Tuple([bop_5248,uop_5256,call_5264,])
func_5272 = relay.Function([var_5247,], output)
mod['func_5272'] = func_5272
mod = relay.transform.InferType()(mod)
mutated_mod['func_5272'] = func_5272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5273 = relay.var("var_5273", dtype = "int16", shape = (7, 3, 9))#candidate|5273|(7, 3, 9)|var|int16
func_5272_call = mutated_mod.get_global_var('func_5272')
call_5274 = func_5272_call(var_5273)
output = call_5274
func_5275 = relay.Function([var_5273], output)
mutated_mod['func_5275'] = func_5275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5350 = relay.var("var_5350", dtype = "uint16", shape = (7, 5, 7))#candidate|5350|(7, 5, 7)|var|uint16
const_5351 = relay.const([[[-3,8,5,10,-7,5,9],[7,-1,-9,1,-5,4,-2],[-7,6,3,1,-5,-2,-10],[-8,5,7,4,-4,1,7],[-3,10,-1,-9,10,10,1]],[[-6,1,3,1,-1,-3,-9],[4,-10,7,6,-8,-10,-9],[4,4,-4,-5,-10,-5,1],[-6,4,6,-7,-6,3,-2],[-4,5,2,7,-4,-10,-7]],[[7,-3,-8,-3,1,-9,4],[2,-5,8,2,9,3,10],[-2,-6,-6,-2,-6,-1,6],[3,-2,-8,1,6,4,-1],[-3,-10,-1,-1,-7,-3,9]],[[-9,4,5,-7,2,10,1],[7,1,-4,-4,9,-2,-10],[9,-9,-4,-10,-10,3,5],[1,-7,8,10,-1,7,-2],[6,5,3,2,8,8,9]],[[9,-5,9,-1,-2,-9,7],[-4,-8,-5,6,7,-5,1],[3,7,5,-2,-5,-1,6],[-1,9,-2,-6,8,-4,9],[1,5,2,-8,5,1,-5]],[[-7,6,3,-1,-10,3,8],[-6,9,9,-3,-7,9,-1],[1,5,-6,-8,-6,-4,-6],[8,-4,-3,4,-8,-4,-8],[-8,3,4,1,-3,-6,8]],[[7,9,-9,2,8,5,-10],[3,-4,-6,4,7,7,2],[8,7,5,-5,-1,-10,10],[6,-6,10,4,7,6,-1],[5,-8,5,-2,-3,9,-1]]], dtype = "uint16")#candidate|5351|(7, 5, 7)|const|uint16
bop_5352 = relay.subtract(var_5350.astype('uint16'), relay.reshape(const_5351.astype('uint16'), relay.shape_of(var_5350))) # shape=(7, 5, 7)
bop_5362 = relay.logical_and(const_5351.astype('bool'), relay.reshape(bop_5352.astype('bool'), relay.shape_of(const_5351))) # shape=(7, 5, 7)
output = bop_5362
output2 = bop_5362
func_5370 = relay.Function([var_5350,], output)
mod['func_5370'] = func_5370
mod = relay.transform.InferType()(mod)
var_5371 = relay.var("var_5371", dtype = "uint16", shape = (7, 5, 7))#candidate|5371|(7, 5, 7)|var|uint16
output = func_5370(var_5371)
func_5372 = relay.Function([var_5371], output)
mutated_mod['func_5372'] = func_5372
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5386 = relay.const([[[1.031278,-8.482238,-4.232980,4.574257,4.109508,-1.645045,-3.253146,8.160170,4.652177,-6.018766,5.803866],[-2.068186,-3.685919,-0.584795,9.374760,3.047867,5.685367,-2.974387,-9.715861,-6.613747,-1.175329,-2.842467],[5.988905,0.074928,6.587081,-1.630383,-0.411258,-7.216921,-2.327590,4.401720,-6.713395,-0.018277,-8.722316],[-0.286983,-6.061277,-7.807202,6.422893,-8.017764,-4.849147,-9.924961,0.356890,-3.392065,2.818964,-1.942670],[1.559428,3.399292,4.025121,-0.680162,-1.515326,-4.835157,7.964356,8.737171,-5.811074,7.737570,2.786076],[-8.380049,9.779791,-9.082108,7.812380,-9.564421,-4.826351,-2.957048,-8.952318,6.763141,3.774300,5.057202],[-1.522219,-0.371230,-4.035023,-7.713451,5.056489,1.511565,1.140991,1.020068,-0.190771,-6.014093,4.357686],[-5.346777,9.272808,-6.659970,-0.880323,4.310660,-4.653613,5.778768,7.930503,-9.151070,-8.771543,5.741530],[2.463703,-9.230711,8.761652,4.070890,0.568050,-0.876614,9.907147,-6.831708,-5.166356,1.112092,8.953090],[-3.854665,-7.305959,9.742896,-6.286077,-3.027500,3.293475,5.565457,6.988707,2.825351,7.559125,4.559982],[-5.643384,-1.478152,4.980405,5.767983,-8.037729,-1.137010,-8.044620,1.543396,-8.827724,-3.587971,-6.291008],[-8.732292,-2.022722,-7.541315,9.022615,6.758168,3.054717,0.523839,7.360005,1.062892,-7.175939,-4.240111],[3.833925,4.121731,1.230100,6.959630,1.927052,-0.209077,2.346969,3.707424,-3.786069,-8.239368,-0.367001]],[[0.528804,-5.924378,1.094828,-5.774919,7.124804,6.180170,8.686909,0.703226,-8.098831,6.770618,-8.249732],[-8.510206,4.771887,-1.721284,-1.128534,8.957555,-6.118498,3.326233,-7.095674,2.392377,8.208774,-9.750675],[-7.919772,-7.423793,4.402291,0.029207,-1.051662,4.800158,-2.027527,-1.252189,6.419404,-4.656142,0.536789],[1.496918,0.482901,-2.540610,-3.328867,-8.101969,-5.989982,3.304811,-0.186981,6.431817,-3.766092,-2.186814],[7.944193,-3.892399,5.212820,-8.462247,-4.507067,-9.082822,2.486833,-6.141353,-7.227323,-5.485087,6.941559],[-6.269501,-1.898421,3.555473,-8.285071,4.147572,-0.166640,-1.773559,8.573893,-1.365068,1.297009,4.846197],[9.205162,-8.110236,-4.411523,-1.546733,-0.050886,5.571640,9.480823,-7.879497,4.985777,7.417561,8.582020],[1.313013,-0.861967,-4.276221,-9.791378,-8.972247,1.093928,3.826046,2.470774,-0.285694,-4.027292,-8.518590],[-2.494929,-2.076422,9.979851,9.403948,2.005709,9.686746,-1.191471,4.166622,8.669539,3.223438,-7.400208],[7.333616,-4.238076,-6.611762,5.774156,-7.779876,2.590257,8.676289,-9.564524,8.856620,9.715190,-8.317105],[-8.546684,8.534812,0.261318,-0.080240,9.012502,-1.439439,9.962532,6.778447,4.502293,-9.376878,-7.815525],[0.627501,-4.379404,-1.577255,3.350800,-0.042230,0.058858,-7.816441,-2.916336,-6.613126,-5.284366,8.114274],[9.819421,-6.047584,0.433277,0.343629,9.439609,-3.193333,2.914188,0.922956,5.549018,-2.885975,9.104255]],[[-1.358496,-6.126430,-0.885644,5.310033,-7.277457,-9.264381,8.013732,-5.394033,9.849120,-6.314189,4.261883],[-6.359774,-4.753304,-8.201452,-5.094101,1.671586,0.933641,-8.298195,-5.102601,-0.855637,-9.584543,-5.183408],[-7.900332,6.873254,-0.743722,4.143545,5.765130,-9.266409,-0.393971,3.713872,9.046090,7.943875,-5.532064],[-1.908970,4.856835,8.573109,7.770880,0.110878,-6.218232,6.596707,-5.584560,9.040839,-9.384146,-1.532566],[-6.814375,-4.816901,-6.834597,5.065735,1.705506,-2.645489,-1.690121,-2.602323,5.351447,2.999123,-2.729338],[-4.724544,7.780776,1.500127,0.417803,-6.071252,3.760063,2.808401,-4.344758,-8.985459,-0.915675,-1.873808],[-9.825428,-9.383282,0.573763,-2.817861,-4.921106,-1.446312,-8.240706,-7.216075,5.645062,1.791572,1.527811],[0.980731,7.584901,1.562971,-7.381852,-5.054230,-6.910669,-4.016108,-0.369387,-6.352455,1.595764,8.120980],[-4.488188,2.956253,-7.804324,-5.812288,-9.579967,-2.790159,3.514454,7.672314,6.203534,-5.569702,7.132652],[4.829660,6.888125,-3.170626,3.468134,-1.063089,8.789637,0.099756,4.500258,2.322653,1.592845,8.294202],[4.227178,-7.850262,4.897383,5.030849,2.094197,-3.920026,-4.803387,0.197924,-2.273475,1.036005,-4.439627],[-4.309690,-4.080697,4.728604,9.814286,-5.200074,3.594937,7.903483,0.259791,6.299624,-5.795685,-0.519437],[6.143669,-6.997819,6.012230,9.129762,-7.653119,5.867762,-6.388557,0.019939,-0.245095,-4.264337,-3.385551]],[[-3.365386,-5.278132,8.016150,8.370708,0.876741,0.033247,1.865493,9.872339,-1.721342,-4.198622,-9.161000],[-1.481597,-9.636429,6.639753,3.986762,-6.588499,-1.785214,8.913073,2.913269,5.562959,8.652010,-4.812666],[3.300514,-0.677723,-7.585836,-8.678798,2.611927,-6.358893,0.298689,-1.692356,6.474026,-1.021513,-1.253432],[9.082857,-2.566132,-0.682920,-0.700737,-8.524865,5.384314,6.286358,1.110032,-4.220841,1.545116,-4.046363],[2.521965,6.933957,-6.522687,-0.251821,8.190222,-7.223947,-8.085020,-9.199099,-4.228478,-9.250151,7.761113],[4.629645,0.888547,8.959970,-3.802768,0.274185,-1.043412,-8.211070,-6.096944,0.114625,4.264324,-6.576746],[7.910685,-6.843036,9.800455,5.997181,-6.458896,-8.937325,-0.852095,-1.760017,9.033512,-9.942774,-8.909040],[-0.796921,0.105986,2.240052,-9.439501,-4.283669,-3.954769,2.441279,-5.451728,-3.838814,9.411041,-3.761789],[-4.797489,-2.393256,5.674755,2.827906,1.692195,-4.663317,-3.537828,6.872939,1.057011,-8.603821,-9.225124],[-3.512312,-3.966673,-1.677551,8.407804,2.934861,2.185925,3.262859,6.101966,2.222283,2.155937,7.910633],[2.115166,-2.242580,7.387466,-1.690000,-7.364716,-4.508018,1.352748,-4.004605,1.712770,-9.549553,6.448724],[5.527828,-0.971872,7.650327,7.999401,0.375415,-9.925388,7.780226,-7.857550,5.967740,-2.774550,9.978551],[-2.193518,-4.008704,-9.028952,4.029711,3.304570,-3.132071,6.717556,8.536312,-0.039562,5.556928,-6.647986]]], dtype = "float32")#candidate|5386|(4, 13, 11)|const|float32
uop_5387 = relay.log10(const_5386.astype('float32')) # shape=(4, 13, 11)
output = uop_5387
output2 = uop_5387
func_5390 = relay.Function([], output)
mod['func_5390'] = func_5390
mod = relay.transform.InferType()(mod)
output = func_5390()
func_5391 = relay.Function([], output)
mutated_mod['func_5391'] = func_5391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3413_call = mod.get_global_var('func_3413')
func_3414_call = mutated_mod.get_global_var('func_3414')
call_5470 = func_3413_call()
call_5471 = func_3413_call()
uop_5480 = relay.log(call_5470.astype('float64')) # shape=(1274,)
uop_5482 = relay.log(call_5471.astype('float64')) # shape=(1274,)
func_3770_call = mod.get_global_var('func_3770')
func_3773_call = mutated_mod.get_global_var('func_3773')
var_5498 = relay.var("var_5498", dtype = "int8", shape = (126,))#candidate|5498|(126,)|var|int8
call_5497 = relay.TupleGetItem(func_3770_call(relay.reshape(var_5498.astype('int8'), [9, 2, 7])), 0)
call_5499 = relay.TupleGetItem(func_3773_call(relay.reshape(var_5498.astype('int8'), [9, 2, 7])), 0)
bop_5504 = relay.less(uop_5480.astype('bool'), relay.reshape(call_5470.astype('bool'), relay.shape_of(uop_5480))) # shape=(1274,)
bop_5507 = relay.less(uop_5482.astype('bool'), relay.reshape(call_5471.astype('bool'), relay.shape_of(uop_5482))) # shape=(1274,)
output = relay.Tuple([call_5497,var_5498,bop_5504,])
output2 = relay.Tuple([call_5499,var_5498,bop_5507,])
func_5509 = relay.Function([var_5498,], output)
mod['func_5509'] = func_5509
mod = relay.transform.InferType()(mod)
mutated_mod['func_5509'] = func_5509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5510 = relay.var("var_5510", dtype = "int8", shape = (126,))#candidate|5510|(126,)|var|int8
func_5509_call = mutated_mod.get_global_var('func_5509')
call_5511 = func_5509_call(var_5510)
output = call_5511
func_5512 = relay.Function([var_5510], output)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mod.get_global_var('func_4219')
func_4220_call = mutated_mod.get_global_var('func_4220')
call_5548 = relay.TupleGetItem(func_4219_call(), 0)
call_5549 = relay.TupleGetItem(func_4220_call(), 0)
func_3009_call = mod.get_global_var('func_3009')
func_3010_call = mutated_mod.get_global_var('func_3010')
call_5553 = func_3009_call()
call_5554 = func_3009_call()
output = relay.Tuple([call_5548,call_5553,])
output2 = relay.Tuple([call_5549,call_5554,])
func_5561 = relay.Function([], output)
mod['func_5561'] = func_5561
mod = relay.transform.InferType()(mod)
output = func_5561()
func_5562 = relay.Function([], output)
mutated_mod['func_5562'] = func_5562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_5594 = func_3611_call()
call_5595 = func_3611_call()
func_5193_call = mod.get_global_var('func_5193')
func_5194_call = mutated_mod.get_global_var('func_5194')
call_5596 = relay.TupleGetItem(func_5193_call(), 0)
call_5597 = relay.TupleGetItem(func_5194_call(), 0)
func_3681_call = mod.get_global_var('func_3681')
func_3685_call = mutated_mod.get_global_var('func_3685')
var_5619 = relay.var("var_5619", dtype = "float32", shape = (72,))#candidate|5619|(72,)|var|float32
const_5620 = relay.const([[6.230273,-0.563473,-2.397834,-6.454123,4.387100,-9.704516,6.494065,3.379560,4.730555,0.767588,3.701196,6.340641,-2.446962,3.758649,-0.447860,0.114822,5.902744,6.058789,3.354792,9.110477,-8.433582,-9.262917,-5.918185,-3.081268,3.406006,-8.018287,9.085781,-4.454050,9.322324,6.151040,5.692542,0.486817,-8.736101,-8.214354,3.914803,-2.589381,1.683707,2.254299,-7.256825,-6.192114,1.143989,-0.627103,-3.999326,8.651491,-8.171027,5.863996,0.561454,5.139662,-3.900380,9.909536,9.795887,4.391112,-3.618113,0.787419,-7.766720,-3.960153,-9.046258,8.809293,3.268455,-7.272357,1.040973,-8.622630,8.572531,-0.644179,9.527961,6.634587,-9.360535,-6.533257,5.998070,6.303901,7.887901,-0.973100,1.647258,-6.875143,-8.167479,-1.878577,-5.858792,-6.667186,-5.737902,9.717969,0.447647,7.935552,-2.714010,-6.424460,2.288008,8.841530,-4.464994,-2.938426,2.549111,-7.869700,-3.258535,1.141881,5.108874,-7.873335,9.431500,-8.694107,-9.677764,-3.916692,5.037354,-1.131467,-8.497246,3.858118,7.915603,-7.745991,-5.381428,-1.866809,-4.067827,9.109810,-8.150205,0.663846,-2.111808,-1.406740,5.228627,3.349645,5.300251,8.440609,0.225962,-6.512755,3.428157,-4.324495,-2.966423,-8.831411,-1.422813,-1.019426,4.317326,-2.443526,6.160352,-1.123861,4.510966,5.910547,4.362408,4.914697,4.922954,-8.563571,-1.788998,-7.057679,2.440824,3.154037,4.375044,-9.755487,-4.702777,-7.783680,2.577781,-9.182548,-6.168979,-4.525974,2.092423,-5.112950,6.089434,6.677466,2.597068,-5.861375,-2.259591,2.261638,-1.377867,-2.361334,-1.091632,-4.586910,3.959155,3.832263,8.290451,1.180330,5.421607,7.138594,-5.955424,-0.161471,8.191083,7.341309,2.111079,6.865072,-4.817215,-2.343046,-5.989937,7.185675,1.512123,2.871882,-5.009303,9.570862,-9.485502,-6.493458,1.011395,4.819448,-2.083657,-5.598010,4.051324,3.638193,7.317490,-5.963529,-4.888036,5.314631,-5.593785,-5.717466,-1.329641,-2.460036,9.620910,7.013735,-9.911490,0.936814,6.538767,-8.284916,3.545606,3.840290,1.542636,-8.676626,6.002157,4.281362,-1.601559,-1.421097,-1.948153,9.307440,3.825891,-9.991469,6.017081,-0.895251,-4.558453,5.080748,-0.048301,-4.388321,4.993114,-4.358400,1.973531,-4.988433,1.069713,-3.661042,-5.857257,9.594759,-8.724752,6.387659,4.695897,5.956885,-0.178849,6.427544,3.591685,-4.319681,-7.116068,2.504298,-9.767390,1.253190,-0.521159,3.447914,-0.572439,-8.598472,7.348737,-5.657514,-0.524533,-6.742074,2.234539,1.433444,9.274466,2.765385,-0.521119,3.689877,-8.536344,2.125516,-0.254683,0.423748,3.060020,-1.179132,4.836822,-9.510212,-7.698815,-7.598079,-4.421317,-6.996304,2.565697,-5.021738,-6.718598,9.436732,-1.720261,9.863501,6.688428,6.114135,-6.994406,3.218789,1.654936,7.400204,-2.316532,7.151697,-6.736866,5.514472,6.727861,4.042668,2.010618,-4.185541,9.504884,9.483911,0.246602,-3.911584,-8.480080,1.292980,4.002539,7.966677,3.248589,-1.887225,-2.827901,3.658304,7.462873,2.228841,9.641471,0.986680,1.556963,-6.503637,9.030531,-7.666030,-7.051316,5.973569,1.167026,-0.048496,7.956117,-1.943291,-5.330121,5.299485,-2.953226,-5.857321,1.075401,4.531035,-9.201586,1.352169,-2.476490,4.662193,9.043400,-8.686044,7.020215,4.321674,1.657072,-1.295061,-7.268166,-8.784316,-5.940944,-4.939281,-7.147077,-0.004279,8.746754,-2.975104,-1.430948,6.678612,1.415020,-5.533300,-1.748237,8.618888,0.097811,5.152817,-4.696735,-9.554180,-6.523934,-9.743059,-5.900495,-7.349218,-8.488295,7.445689,-2.243678,-5.688546,-7.401893,4.628294,2.548372,5.852930,-5.383892,-1.853748,-7.931752,-5.239503]], dtype = "float32")#candidate|5620|(1, 360)|const|float32
call_5618 = relay.TupleGetItem(func_3681_call(relay.reshape(var_5619.astype('float32'), [1, 72]), relay.reshape(const_5620.astype('float32'), [5, 72]), ), 1)
call_5621 = relay.TupleGetItem(func_3685_call(relay.reshape(var_5619.astype('float32'), [1, 72]), relay.reshape(const_5620.astype('float32'), [5, 72]), ), 1)
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_5632 = relay.TupleGetItem(func_1769_call(), 2)
call_5633 = relay.TupleGetItem(func_1770_call(), 2)
output = relay.Tuple([call_5594,call_5596,call_5618,var_5619,const_5620,call_5632,])
output2 = relay.Tuple([call_5595,call_5597,call_5621,var_5619,const_5620,call_5633,])
func_5636 = relay.Function([var_5619,], output)
mod['func_5636'] = func_5636
mod = relay.transform.InferType()(mod)
var_5637 = relay.var("var_5637", dtype = "float32", shape = (72,))#candidate|5637|(72,)|var|float32
output = func_5636(var_5637)
func_5638 = relay.Function([var_5637], output)
mutated_mod['func_5638'] = func_5638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3413_call = mod.get_global_var('func_3413')
func_3414_call = mutated_mod.get_global_var('func_3414')
call_5782 = func_3413_call()
call_5783 = func_3413_call()
output = call_5782
output2 = call_5783
func_5813 = relay.Function([], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5813_call = mutated_mod.get_global_var('func_5813')
call_5814 = func_5813_call()
output = call_5814
func_5815 = relay.Function([], output)
mutated_mod['func_5815'] = func_5815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2042_call = mod.get_global_var('func_2042')
func_2043_call = mutated_mod.get_global_var('func_2043')
call_5826 = relay.TupleGetItem(func_2042_call(), 0)
call_5827 = relay.TupleGetItem(func_2043_call(), 0)
const_5838 = relay.const([[[9.816071,-8.564341,-1.867461,1.899421,0.976938,4.648638,4.814445,2.895375,4.049132,9.979084,6.506151,-5.876451,1.895059,4.323035,0.460032],[4.150692,1.181649,-1.629094,7.775180,-7.759915,-7.157348,-5.793995,-5.550598,-5.535533,-0.256793,-3.143859,3.278034,5.814200,3.212400,0.722571],[7.534411,6.638804,-5.022331,2.628151,2.288151,3.874934,0.729919,0.281475,6.330722,4.609824,9.450468,1.444929,0.063844,3.437995,3.485577],[1.027318,6.866520,0.373423,2.794288,-5.397814,-9.703044,-6.181051,6.653730,-0.661164,6.285125,-8.641105,0.550814,5.637891,-8.613581,6.810565],[-8.828475,6.706944,2.939114,1.758992,9.069006,3.718248,5.423839,2.884296,6.520454,2.136601,-2.481835,9.984047,6.434463,-2.769434,1.054320],[2.151683,-3.350827,-1.784151,1.715793,-7.125503,9.261813,6.414653,0.126676,2.909724,-2.921323,4.971225,-4.771167,-7.358905,-6.537965,-4.227103],[-1.783274,8.528409,-1.398024,-5.745993,7.030081,-7.880425,-8.538761,-1.909328,-7.685248,-7.225165,-5.312772,9.579685,-1.909436,1.269174,-9.745061]],[[-4.109491,6.797385,-3.609303,7.983278,-6.935812,2.031109,8.292711,-4.257886,-7.118232,3.199985,4.553195,-6.978583,3.259916,-5.408574,2.878896],[-2.514904,6.428146,7.846980,1.924300,-0.518262,-5.356239,-4.242211,1.132960,6.934650,6.834085,-9.487519,-2.975846,-6.678817,4.446434,-4.790944],[1.814920,-8.895003,2.536552,-2.403886,1.002524,-0.364367,7.005077,6.259236,1.082407,-4.448178,-6.751432,1.858080,5.426844,-3.493137,-4.062783],[-5.761459,7.626706,-4.802084,-1.379439,3.566049,0.594810,3.675014,-8.363007,6.420153,7.309379,-8.452619,-9.941608,8.419239,9.272025,-5.841645],[-5.169070,-6.284548,4.500037,-5.000687,7.548545,9.537869,7.609203,4.085046,-9.726727,6.003291,-8.170385,9.469840,3.122567,7.523981,-9.604822],[-9.634220,-6.785945,-0.587964,4.064848,5.481968,-8.043543,0.661886,-2.164197,7.593849,2.011185,-5.941168,-9.637491,-1.297324,-0.234653,7.724639],[6.135159,-0.965688,-0.174433,-8.477069,5.124390,-9.444671,-3.378424,-7.375660,9.525337,9.762260,-1.199830,-9.819734,0.530039,4.254083,-8.302682]],[[-5.772560,-1.126237,4.861887,6.984241,7.211619,-9.565429,-9.344530,5.699612,0.662170,-7.465692,-3.445561,-8.717199,-9.462591,9.123117,-0.078455],[-5.800255,-9.092129,5.367307,2.868959,5.365339,1.074949,-8.708255,-1.741987,-3.370316,-9.474071,7.718607,-3.174283,-9.393163,6.916186,-5.313146],[0.411470,0.455226,8.870135,-0.456565,3.623120,6.357234,5.764947,5.687921,-5.639926,5.763591,-5.826822,0.193578,-5.290917,3.898582,6.828279],[1.252882,-2.693358,-5.669430,1.377876,-4.779013,-6.902701,-9.569025,-8.027188,-7.489596,2.533114,6.538534,-8.435013,-2.666089,-3.637257,-3.973631],[3.748468,7.781439,-9.632561,-0.958150,-5.018737,3.728266,-4.938726,-3.304525,6.216406,5.122104,-2.345942,-9.922796,5.927044,3.943457,4.151271],[-8.847125,-6.578215,-7.766093,3.497848,-5.173659,-8.353144,9.330059,9.386381,8.442954,-6.401911,-8.555228,8.324583,0.572817,1.925367,1.656947],[-5.923093,-5.982124,8.666973,-5.685464,1.451418,-9.146180,-9.931680,-6.264178,9.508836,-2.963960,2.560595,-3.374929,3.980263,9.633735,-7.616583]],[[8.280792,-6.405541,0.502046,8.255566,7.586933,6.989197,-0.990993,4.538478,2.496923,-9.013280,-4.865106,-1.229204,-4.787654,-4.139436,9.670624],[-6.153844,0.011573,-5.723556,-0.408747,-6.923774,-0.248948,5.146155,1.997383,1.767668,0.914698,-9.575469,4.149650,-2.918471,4.028623,-3.781495],[-0.325526,7.388603,2.488289,-1.860266,6.849467,3.553169,-5.122495,-7.238529,3.345571,3.333136,2.172993,-0.757442,-5.153479,2.516277,6.423478],[-9.717927,-4.841611,-0.570449,0.144888,-5.982025,3.720816,-1.183476,-2.664508,-8.986607,4.437197,7.920588,6.550939,0.203900,-3.411431,4.433383],[-8.710980,9.311222,-1.543302,7.124792,0.395302,-6.011526,2.345621,-6.777196,-4.026699,-4.855961,-8.115494,-7.521350,7.305077,-0.001060,-5.023882],[-5.712139,2.790215,-6.281568,1.367355,-7.042766,7.066673,1.463641,4.666483,-4.766156,-6.456818,4.883174,-5.491075,4.722483,-2.079184,-4.763780],[3.665506,1.062765,-3.605647,-3.685190,6.264446,-8.420495,-9.403892,-7.235534,-0.317188,5.120455,0.392008,3.717978,-3.761109,3.174072,-9.631044]],[[-2.968359,-8.951358,3.086893,9.621478,-7.697922,-7.156853,8.687699,7.577817,-9.931993,-1.404065,-8.209797,9.737438,-6.151580,-0.280238,-1.774386],[1.524924,4.509751,-4.353800,-1.151406,-7.678430,2.556709,-3.108826,6.137012,-8.028983,8.508564,6.020876,-4.593351,1.966971,5.814599,-8.891968],[9.141751,-9.683899,-7.507199,6.636593,-0.612694,1.494986,-1.867831,-9.657679,7.260105,7.994115,0.521602,5.505409,0.469534,-7.998278,-4.572373],[-4.600732,-5.788545,-2.394028,-8.467614,-1.560330,-0.228731,-8.956992,2.419614,-4.007599,6.144385,1.982058,9.824263,-5.560036,1.606678,3.865800],[7.541872,3.559273,-5.441350,-8.334176,5.808633,5.852638,3.867432,-4.496589,-9.053926,9.135856,1.816003,-9.083548,1.836122,3.364517,-2.440546],[2.698545,1.931813,4.466138,-0.626429,-9.923304,-6.918025,2.357652,5.843296,-6.846140,5.402414,0.086534,-8.115327,1.344209,-8.703612,1.782038],[8.753205,-0.814620,7.711508,-7.317811,-6.251789,-4.320668,-7.643229,-6.824746,2.754216,6.615014,-5.435640,6.924782,-3.640999,5.290459,-1.543732]],[[5.829750,0.168909,-3.248986,-1.641038,-5.111759,4.390458,9.148861,1.450548,8.903500,2.553587,7.571192,7.348001,-5.572384,1.308069,-8.865496],[-5.705048,8.997847,7.402805,0.641751,-8.666604,-0.378419,-4.717767,7.347089,5.148150,-6.644537,5.901791,3.002301,1.119956,-2.590108,0.201595],[-2.423372,5.110838,5.959725,3.055531,-4.441952,-9.094221,3.120185,-4.053898,-0.739644,9.804536,-2.149866,-0.752938,6.671235,-0.737565,-7.157028],[-0.118189,3.768012,-0.882133,-8.500059,9.815030,9.808417,-1.071379,-1.324748,5.507942,-4.484315,-8.359007,3.140141,-3.914481,-6.841176,8.147982],[-4.240914,0.875444,5.054676,-3.009451,5.775039,-3.669296,-6.557592,7.577221,5.482159,5.585753,3.038194,2.371407,0.425748,6.715570,-7.032036],[-6.232387,-5.222779,-1.393706,-2.494763,5.225439,9.910003,-1.900939,-8.318861,-2.713378,8.109357,-1.244144,7.173850,1.350924,5.622515,-3.128244],[2.916795,9.402441,-9.250104,1.093211,-7.003574,-6.904758,-5.330203,0.893454,-0.793005,8.840366,-6.334262,-5.298799,7.521509,-6.109412,-2.039704]],[[-0.419368,6.475685,7.316402,6.764080,-0.516418,-8.380018,8.102237,-0.013154,3.948030,0.924589,-9.449393,-1.919276,4.880935,-3.037862,8.827244],[1.458303,5.538294,7.093128,-8.691349,2.223938,-6.551694,-5.190022,8.768787,3.277788,0.947897,6.212497,-6.868444,1.152165,4.427503,4.727631],[-7.762110,-8.302433,2.744257,9.916969,-6.036134,4.673681,-3.863252,5.010105,-4.263290,-3.931224,1.953017,0.391958,-7.405125,1.107481,-4.239363],[-6.253636,8.272612,-6.902111,-6.216883,3.825923,3.253139,1.523279,-7.665666,6.196390,7.636830,-9.098272,3.586754,-3.195029,-1.996295,3.678298],[-0.980600,-4.455452,-9.482197,9.238149,-2.013497,0.074454,2.107046,4.762317,4.533170,-3.033288,-7.698194,3.195804,-1.604633,3.597608,-8.237200],[0.146591,-8.034128,-8.200085,1.677206,6.460351,-4.113745,3.667937,-6.561653,2.600730,1.248236,-3.694994,7.030538,0.546179,-0.687925,-4.495363],[1.140010,9.492205,6.067969,-7.025502,3.838535,-6.775444,-0.340751,8.873678,-2.536240,6.305780,-5.123434,-9.756799,5.391212,0.415629,-4.534101]],[[-6.131263,-6.599826,-9.476201,-0.890966,-4.202491,-3.473641,6.902007,-8.949630,3.700058,-5.132001,-6.408015,1.307992,-1.936660,-5.317044,-2.466608],[2.549053,-0.024935,-1.229057,-0.522238,5.296099,3.183899,2.068172,-7.568204,7.659914,8.515230,-3.852727,9.511807,-7.022413,7.356936,6.212003],[6.079449,-9.680485,-6.787378,-0.900975,8.532730,3.419623,-4.457602,-9.492524,-6.953324,-4.943509,4.300960,9.448892,-4.507581,-2.611521,-8.140486],[2.199521,-3.624902,0.741109,9.251971,1.262338,3.956758,6.043001,-1.292458,1.958093,7.565669,-1.105266,-4.389058,3.775454,2.163428,-6.710805],[-1.101289,7.333962,-4.654714,1.173430,3.345339,-2.167510,-0.649985,-3.823698,4.072904,3.121426,9.583259,9.354070,-5.187267,6.858835,-9.914304],[5.087027,0.022072,-8.119529,-1.356016,1.302379,-5.782968,-7.060941,1.664343,0.691786,-2.713184,-4.725278,-5.312395,-9.722749,-6.932621,-2.823100],[2.342112,6.703927,7.299456,-1.584505,-2.278789,3.697585,-9.825092,4.521887,-7.412607,-5.160403,1.957775,-1.872950,8.467501,-1.570415,-4.434336]],[[-0.375801,9.966883,8.224280,5.793645,-1.025087,2.782865,4.249254,2.539697,-5.065545,8.390056,0.455882,6.895554,6.024302,-1.811649,-1.783590],[-0.014028,-5.545604,8.931288,-3.539497,-1.098990,-1.923560,-1.583656,3.063200,-7.194204,2.923863,-3.994859,-3.577464,8.533366,-8.265946,-8.376277],[-2.141122,-1.271898,-3.310462,-7.530319,-1.427162,6.528507,5.961115,-0.467185,2.880724,-5.686765,7.135936,0.265216,-7.443791,2.531100,-9.747246],[8.184860,-6.303619,-5.584272,0.351351,-2.889837,8.853653,-2.533870,8.896282,6.525511,4.593420,-2.284109,-9.105482,9.364647,-0.599238,-1.548631],[-4.871572,8.090829,6.296300,0.092705,7.150914,-2.269178,9.992773,4.815221,-8.131053,8.418921,-3.281322,-4.699719,-9.595654,1.868138,-9.807491],[3.808216,7.902587,6.406849,-6.909984,-7.656751,-2.132043,-9.095121,3.742596,8.401597,-4.287502,-1.485674,-4.894107,-7.052941,-5.312475,6.617494],[4.070243,9.302564,5.142638,9.655050,1.677567,6.806456,-2.263357,3.662394,1.006320,4.780522,0.876241,-0.434869,-4.131878,-1.895858,-4.797962]],[[9.915621,2.574389,4.660701,-7.696895,-1.714625,-5.283591,5.626952,-2.907241,-1.042460,1.184202,1.796883,0.315419,-9.799374,-3.505972,-7.412771],[-4.475599,-8.016174,-0.652325,5.051194,-9.455199,-0.684742,6.667570,-5.710089,-5.324474,-3.793465,-4.113015,6.044699,9.727848,-0.221295,-7.483657],[8.761744,-4.074911,-2.202561,7.332830,3.424924,-1.654368,-4.267951,-5.448951,7.616482,1.650763,-3.489884,0.582352,-5.421717,-2.043776,1.839902],[5.690300,8.399572,-3.386625,3.334515,9.034492,-9.535727,-4.817882,-7.612312,5.579054,-4.399846,1.879548,-6.002373,-1.001587,6.664409,1.523197],[1.441605,4.534464,6.586663,0.868205,3.546831,1.171543,-9.543828,-9.269052,-7.782568,-9.892798,6.063257,-0.465797,-3.152377,-7.424124,2.599572],[-9.504682,-5.499813,3.905566,-5.714948,-5.457932,-0.731486,3.165983,-9.963561,7.682456,9.340933,5.258649,3.413420,-9.762535,-0.755738,1.468029],[7.227483,-9.562302,-9.374909,2.880977,-5.804408,-9.226508,1.849891,8.247061,-7.586502,3.142601,-5.819160,-3.518854,-6.276701,-0.226925,5.533641]],[[-1.610251,8.250004,-4.774861,-9.052261,-5.761143,-4.844437,0.478930,-4.833345,0.276306,8.843226,-0.421384,0.863487,4.947819,-5.502520,-9.485177],[-5.204256,-3.466667,2.379463,0.231741,-2.563973,0.522756,-6.228021,-9.225706,0.824540,0.797958,-6.514416,3.275381,-2.029337,2.742022,-3.809085],[-9.612616,-3.855622,-4.762088,-7.053812,-4.193622,-4.623639,3.193969,-5.881156,2.242909,9.328201,5.234543,6.949491,1.302659,0.202076,-5.236420],[-7.581971,-8.766633,9.697132,-6.536027,-8.384248,-9.529696,-7.432048,-6.122229,2.848742,1.895726,-8.549280,8.197109,7.633730,-1.548725,9.589842],[-9.885866,2.479009,7.833000,3.126332,-7.114159,-4.546591,-2.503663,-5.414411,4.426602,7.585978,-3.032537,3.623263,7.689430,-5.497122,-9.617339],[-5.666538,4.911747,6.101023,-3.663712,9.018154,0.908516,5.880549,-4.621470,-4.558299,3.776633,-0.109688,9.744428,8.197298,-8.518537,-9.971563],[-5.690056,0.482269,2.177135,-3.978781,-5.112180,-7.315389,0.067313,6.811969,-3.477368,1.683626,8.942459,5.966242,-9.898722,6.783627,2.553241]],[[9.602226,-6.880548,8.803141,2.974765,1.583717,3.640769,5.860825,0.708013,7.620021,-2.086752,-8.794894,-7.487702,4.531853,-4.743224,-6.974489],[-2.242166,5.953368,-1.715712,-2.483324,-6.549065,3.822074,-9.077988,-3.328028,-9.857563,8.250815,6.629465,-2.281290,4.033169,-4.674349,0.140969],[7.071085,-7.673944,-1.778130,-1.269285,-2.699526,7.748810,-9.145046,6.454195,6.785048,-3.624969,-9.655283,-2.646846,-3.805559,-9.984524,-4.326741],[8.470031,-2.615095,-3.717613,-1.684478,5.098428,-2.436375,0.269714,-2.597630,4.321234,-7.038668,-5.899250,9.465162,6.363110,1.872821,-2.720102],[8.523944,5.721367,7.366646,2.255328,-8.876295,3.629982,7.085424,-5.927905,0.211562,2.137424,3.363146,-9.489765,3.163965,-5.059668,-2.024003],[-9.829510,-1.157129,2.360002,1.661192,-4.697207,0.934305,-7.941389,-1.603607,0.855738,9.540574,6.876537,-7.063319,7.515432,3.760917,-7.245366],[2.761513,-8.962961,0.033414,7.446876,-4.306294,-4.568034,6.779994,-2.390007,2.135818,3.423609,-4.161905,-0.214919,5.573579,-3.840268,6.561695]],[[-3.885916,9.098327,9.217670,-4.658020,-0.647491,-4.710928,-8.812188,9.757183,3.627850,-0.035867,5.717873,4.015960,-5.495860,-1.113362,6.164759],[2.565994,-9.027169,-8.229964,3.220431,-5.720918,3.536557,6.896561,4.807418,-0.396935,1.002688,4.408261,-1.771704,-2.989544,9.752065,5.048096],[1.628979,-3.592179,-6.404358,1.652975,3.916761,0.174907,-9.081252,0.481666,5.334207,-8.583175,-9.674601,-6.918849,-6.749286,4.384749,0.532969],[-5.781626,-9.272294,-1.142397,-3.260756,-5.609656,9.575691,-4.188294,-7.670768,2.241938,-6.308394,3.649412,-2.862464,6.857919,-2.998515,-5.360322],[4.367505,-4.825307,-8.210952,-4.905000,-1.614543,-3.056181,-8.577940,0.367252,-8.673848,5.299933,-4.691540,-4.147030,-5.306049,7.658072,-8.259468],[-2.194957,6.753616,3.089073,3.738698,-1.948990,9.631032,8.200451,4.746060,-8.190365,-2.010358,-5.170213,-7.439296,4.036308,-0.683286,-2.486182],[-9.360708,0.360376,6.968444,8.215387,-8.491035,4.831979,3.959112,-2.205085,4.895619,-8.085364,-3.589500,4.893818,1.981777,8.786126,6.814505]],[[7.630380,-4.345195,5.546870,9.375315,-0.389084,-2.324951,6.702991,-4.889854,7.609243,1.571350,6.035947,-9.209697,-1.499519,9.942427,-3.796384],[8.326016,0.389315,-2.363710,-6.601512,2.029363,9.587570,-9.658006,6.119578,-7.032466,-7.915847,6.267206,1.957916,-9.430928,2.715929,4.452972],[9.520801,4.685270,-3.389903,7.002636,-1.006581,2.567814,4.017994,-8.762404,9.593448,1.712680,-7.469402,8.360047,-1.515589,-9.125003,-2.861680],[0.111491,-8.059875,-7.758936,-9.933623,3.139660,-0.371292,7.582796,-8.437767,4.515730,-4.792198,-3.500498,8.374648,7.719035,4.763219,6.490921],[9.451988,5.894439,-2.999504,2.473532,-1.376157,9.525981,2.205268,-5.937137,-6.785223,6.103890,-5.735359,-9.801393,-5.621660,7.463198,7.681007],[1.692887,-7.609594,-2.787629,-8.030615,6.661252,6.436486,9.753043,7.296970,-6.979485,7.162563,2.553606,7.815210,2.119152,0.511954,-7.165297],[-1.031476,2.791404,-9.892348,6.972236,2.226427,5.659225,3.515524,-1.146020,-0.779467,-5.333258,-5.851184,8.278359,0.155767,3.973182,-3.308079]]], dtype = "float32")#candidate|5838|(14, 7, 15)|const|float32
bop_5839 = relay.bitwise_or(call_5826.astype('uint16'), relay.reshape(const_5838.astype('uint16'), relay.shape_of(call_5826))) # shape=(14, 7, 15)
bop_5842 = relay.bitwise_or(call_5827.astype('uint16'), relay.reshape(const_5838.astype('uint16'), relay.shape_of(call_5827))) # shape=(14, 7, 15)
output = bop_5839
output2 = bop_5842
func_5843 = relay.Function([], output)
mod['func_5843'] = func_5843
mod = relay.transform.InferType()(mod)
mutated_mod['func_5843'] = func_5843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mutated_mod.get_global_var('func_5843')
call_5844 = func_5843_call()
output = call_5844
func_5845 = relay.Function([], output)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mod.get_global_var('func_1923')
func_1925_call = mutated_mod.get_global_var('func_1925')
call_5858 = func_1923_call()
call_5859 = func_1923_call()
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_5865 = relay.TupleGetItem(func_1336_call(), 0)
call_5866 = relay.TupleGetItem(func_1337_call(), 0)
output = relay.Tuple([call_5858,call_5865,])
output2 = relay.Tuple([call_5859,call_5866,])
func_5870 = relay.Function([], output)
mod['func_5870'] = func_5870
mod = relay.transform.InferType()(mod)
output = func_5870()
func_5871 = relay.Function([], output)
mutated_mod['func_5871'] = func_5871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mod.get_global_var('func_1923')
func_1925_call = mutated_mod.get_global_var('func_1925')
call_5880 = func_1923_call()
call_5881 = func_1923_call()
output = relay.Tuple([call_5880,])
output2 = relay.Tuple([call_5881,])
func_5884 = relay.Function([], output)
mod['func_5884'] = func_5884
mod = relay.transform.InferType()(mod)
output = func_5884()
func_5885 = relay.Function([], output)
mutated_mod['func_5885'] = func_5885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1559_call = mutated_mod.get_global_var('func_1559')
call_5896 = func_1558_call()
call_5897 = func_1558_call()
output = call_5896
output2 = call_5897
func_5898 = relay.Function([], output)
mod['func_5898'] = func_5898
mod = relay.transform.InferType()(mod)
output = func_5898()
func_5899 = relay.Function([], output)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4167_call = mod.get_global_var('func_4167')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_5915 = func_4167_call()
call_5916 = func_4167_call()
uop_5920 = relay.log10(call_5915.astype('float64')) # shape=(14, 7, 15)
uop_5922 = relay.log10(call_5916.astype('float64')) # shape=(14, 7, 15)
func_4837_call = mod.get_global_var('func_4837')
func_4841_call = mutated_mod.get_global_var('func_4841')
var_5934 = relay.var("var_5934", dtype = "float32", shape = (864,))#candidate|5934|(864,)|var|float32
var_5935 = relay.var("var_5935", dtype = "int16", shape = (110,))#candidate|5935|(110,)|var|int16
const_5936 = relay.const([7.977731,-8.924021,-1.706811,-1.258646,-8.274052,1.989989,9.423754,-0.533196,-6.748560,4.683585,8.052550,-5.450085,-2.608619,-7.563519,8.596663,-5.438158,1.262403,6.442114,-8.819693,-7.356598,1.717140,-4.110147,1.284574,8.188645,6.919471,8.836917,-7.925651,-6.842447,-6.414399,3.716398,3.628116,-4.611799,-1.522879,-9.350055,-2.668347,9.927955,9.212414,-2.056357,-9.128069,-3.628075,-1.331222,-5.355012,-6.631287,9.107655,1.739757,-8.518923,-1.181843,5.636143,-7.353004,4.915574,3.048346,-1.607003,1.205023,8.280881,2.387561,7.781714,3.850471,-0.330712,-9.501346,-9.217666,-4.168438,-1.846165,-7.063526,8.882862,-0.964939,6.601053,6.204000,-9.293703,-1.904850,-1.102876,9.845055,5.229447], dtype = "float32")#candidate|5936|(72,)|const|float32
call_5933 = relay.TupleGetItem(func_4837_call(relay.reshape(var_5934.astype('float32'), [864,]), relay.reshape(var_5935.astype('int16'), [110,]), relay.reshape(const_5936.astype('float32'), [1, 72]), ), 6)
call_5937 = relay.TupleGetItem(func_4841_call(relay.reshape(var_5934.astype('float32'), [864,]), relay.reshape(var_5935.astype('int16'), [110,]), relay.reshape(const_5936.astype('float32'), [1, 72]), ), 6)
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
call_5949 = relay.TupleGetItem(func_967_call(relay.reshape(uop_5920.astype('int16'), [14, 7, 15])), 1)
call_5950 = relay.TupleGetItem(func_970_call(relay.reshape(uop_5920.astype('int16'), [14, 7, 15])), 1)
output = relay.Tuple([uop_5920,call_5933,var_5934,var_5935,const_5936,call_5949,])
output2 = relay.Tuple([uop_5922,call_5937,var_5934,var_5935,const_5936,call_5950,])
func_5978 = relay.Function([var_5934,var_5935,], output)
mod['func_5978'] = func_5978
mod = relay.transform.InferType()(mod)
mutated_mod['func_5978'] = func_5978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5978_call = mutated_mod.get_global_var('func_5978')
var_5980 = relay.var("var_5980", dtype = "float32", shape = (864,))#candidate|5980|(864,)|var|float32
var_5981 = relay.var("var_5981", dtype = "int16", shape = (110,))#candidate|5981|(110,)|var|int16
call_5979 = func_5978_call(var_5980,var_5981,)
output = call_5979
func_5982 = relay.Function([var_5980,var_5981,], output)
mutated_mod['func_5982'] = func_5982
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5996 = relay.const([[[8],[-9],[8],[4],[-8],[1],[-1],[-3],[9],[2],[8],[7],[4],[-10],[-10],[-9]],[[10],[5],[3],[-5],[8],[-7],[6],[-10],[5],[-3],[3],[10],[9],[8],[-5],[-8]],[[-6],[3],[4],[-10],[-6],[1],[-9],[9],[4],[9],[-1],[-7],[-7],[2],[4],[6]]], dtype = "uint8")#candidate|5996|(3, 16, 1)|const|uint8
var_5997 = relay.var("var_5997", dtype = "uint8", shape = (3, 16, 16))#candidate|5997|(3, 16, 16)|var|uint8
bop_5998 = relay.bitwise_or(const_5996.astype('uint8'), var_5997.astype('uint8')) # shape=(3, 16, 16)
func_2088_call = mod.get_global_var('func_2088')
func_2091_call = mutated_mod.get_global_var('func_2091')
var_6032 = relay.var("var_6032", dtype = "int32", shape = ())#candidate|6032|()|var|int32
var_6033 = relay.var("var_6033", dtype = "int32", shape = (22, 7))#candidate|6033|(22, 7)|var|int32
call_6031 = relay.TupleGetItem(func_2088_call(relay.reshape(var_6032.astype('int32'), []), relay.reshape(var_6033.astype('int32'), [11, 7, 2]), ), 1)
call_6034 = relay.TupleGetItem(func_2091_call(relay.reshape(var_6032.astype('int32'), []), relay.reshape(var_6033.astype('int32'), [11, 7, 2]), ), 1)
func_5027_call = mod.get_global_var('func_5027')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_6038 = relay.TupleGetItem(func_5027_call(), 2)
call_6039 = relay.TupleGetItem(func_5029_call(), 2)
func_3725_call = mod.get_global_var('func_3725')
func_3727_call = mutated_mod.get_global_var('func_3727')
call_6041 = func_3725_call(relay.reshape(var_6032.astype('int32'), []))
call_6042 = func_3725_call(relay.reshape(var_6032.astype('int32'), []))
uop_6043 = relay.sin(const_5996.astype('float32')) # shape=(3, 16, 1)
var_6045 = relay.var("var_6045", dtype = "float32", shape = (3, 16, 15))#candidate|6045|(3, 16, 15)|var|float32
bop_6046 = relay.logical_or(uop_6043.astype('bool'), var_6045.astype('bool')) # shape=(3, 16, 15)
output = relay.Tuple([bop_5998,call_6031,var_6032,var_6033,call_6038,call_6041,bop_6046,])
output2 = relay.Tuple([bop_5998,call_6034,var_6032,var_6033,call_6039,call_6042,bop_6046,])
func_6051 = relay.Function([var_5997,var_6032,var_6033,var_6045,], output)
mod['func_6051'] = func_6051
mod = relay.transform.InferType()(mod)
mutated_mod['func_6051'] = func_6051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6051_call = mutated_mod.get_global_var('func_6051')
var_6053 = relay.var("var_6053", dtype = "uint8", shape = (3, 16, 16))#candidate|6053|(3, 16, 16)|var|uint8
var_6054 = relay.var("var_6054", dtype = "int32", shape = ())#candidate|6054|()|var|int32
var_6055 = relay.var("var_6055", dtype = "int32", shape = (22, 7))#candidate|6055|(22, 7)|var|int32
var_6056 = relay.var("var_6056", dtype = "float32", shape = (3, 16, 15))#candidate|6056|(3, 16, 15)|var|float32
call_6052 = func_6051_call(var_6053,var_6054,var_6055,var_6056,)
output = call_6052
func_6057 = relay.Function([var_6053,var_6054,var_6055,var_6056,], output)
mutated_mod['func_6057'] = func_6057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6072 = relay.var("var_6072", dtype = "int16", shape = (13, 16, 8))#candidate|6072|(13, 16, 8)|var|int16
var_6073 = relay.var("var_6073", dtype = "int16", shape = (13, 16, 8))#candidate|6073|(13, 16, 8)|var|int16
bop_6074 = relay.bitwise_or(var_6072.astype('int16'), relay.reshape(var_6073.astype('int16'), relay.shape_of(var_6072))) # shape=(13, 16, 8)
func_967_call = mod.get_global_var('func_967')
func_970_call = mutated_mod.get_global_var('func_970')
const_6078 = relay.const([-7,-9,2,-6,8,-5,4,-8,10,2,4,-1,-4,-6,-8,-3,4,1,5,-8,-3,-3,-2,7,5,-6,-7,-9,-3,-3,10,7,9,9,-5,-7,9,-5,-1,2,4,-6,-8,-2,-7,-3,1,10,-6,-4,-5,9,-8,-4,-9,-4,6,-1,-4,5,-8,-10,-6,10,9,-7,2,-8,-10,-9,1,-1,-5,3,-7,-3,-7,-5,3,-9,9,9,-1,4,-1,2,8,1,8,-3,2,-10,-8,4,-2,6,-8,-3,-3,-2,-9,8,-8,1,3,-10,9,-4,7,-10,2,10,-10,10,-9,-8,7,-8,-5,10,4,-10,10,-3,3,-5,7,6,-8,3,-9,8,6,-8,6,8,-7,-4,-6,3,-8,6,-4,5,1,1,-8,5,-4,7,-2,-9,-5,6,-10,3,-9,-7,3,7,1,-5,7,-5,4,1,8,7,-3,-7,3,-4,8,5,3,-5,-2,-3,10,-9,9,2,-10,-1,1,-7,-7,-5,2,4,4,2,-10,6,-5,6,-7,-1,5,-1,1,1,8,-1,-7,-10,6,8,6,-8,9,5,2,4,-10,-6,-2,9,2,-2,8,-8,3,2,10,-2,-6,6,5,-7,-2,7,7,-3,9,6,9,-2,3,-4,8,3,-3,1,-10,4,-1,-7,-9,9,-8,-5,-2,9,-3,-8,9,4,-2,-1,-5,-4,7,9,2,4,-7,-8,6,-4,-2,-9,-6,4,-9,-10,-1,-3,6,2,1,1,-7,-7,-6,-3,5,-1,6,-9,-2,9,3,-10,5,-8,-10,-6,-8,9,8,-2,3,-4,-9,-3,-3,-4,8,7,8,2,4,6,-5,-6,8,-5,-3,1,3,-5,-8,-3,3,-2,5,8,3,3,-10,10,9,8,-4,6,-2,-4,-7,7,-6,10,2,-3,3,-5,-5,8,8,-5,-4,-2,1,-9,2,8,-6,1,6,4,-8,-10,-4,6,-6,-6,2,-9,3,-1,5,-3,6,8,8,1,3,-8,4,10,-4,2,-6,9,10,-4,-7,-5,-3,-7,7,6,1,-6,7,-5,-2,-7,10,6,5,-7,9,9,5,10,6,-1,-1,4,-10,-8,-5,-1,-2,7,8,-2,-5,8,7,-3,5,9,-10,-5,1,-5,10,-3,6,10,1,-3,-2,-8,1,9,-5,4,-3,-8,-2,-1,2,5,-4,-3,8,3,7,9,3,5,-8,5,-10,8,-9,-6,-4,10,7,-7,9,7,3,7,-3,6,-3,-5,-6,-7,-1,-8,4,-5,1,-6,-1,-10,8,-10,2,-4,-7,-10,-3,9,-7,-1,5,10,7,8,-10,2,-6,10,-8,-4,5,-1,-8,2,-7,4,8,-8,3,-5,-6,2,-1,1,9,8,9,10,-10,-3,-7,9,-3,2,-4,-9,-4,-2,5,6,-1,8,4,5,2,8,-5,5,-3,3,4,8,7,4,-5,6,5,-6,-3,2,9,5,7,3,6,9,-10,-9,1,8,6,-2,9,-1,-8,-10,-2,-2,-4,3,1,-4,-1,5,-6,7,-7,2,-8,-10,3,5,4,6,-4,-10,1,5,6,-5,5,4,-3,-9,9,-9,-9,10,6,1,-5,5,6,-9,4,-7,-5,2,-7,-9,2,1,-2,7,6,-8,-3,-6,-6,3,8,8,9,1,1,-4,-8,6,-3,10,3,2,-2,2,5,6,5,7,4,-2,8,9,9,5,-10,-5,2,6,-6,-2,6,-6,-1,-7,-3,-9,-4,-6,-6,9,8,7,-9,-6,3,-10,3,2,-9,9,5,-4,8,4,-4,10,-4,4,3,-2,5,7,-8,-3,5,10,4,1,-5,-8,5,-1,-8,-4,-4,-7,-8,8,-3,-2,5,-10,-7,2,5,1,7,-1,-8,6,-1,10,9,-5,8,-3,-1,-3,6,-2,-5,-3,6,9,-6,3,-10,-9,2,-1,1,-5,-9,-3,-6,-7,8,3,-1,6,-7,-7,6,6,-9,-8,5,5,6,10,-4,10,7,6,6,-7,4,2,9,-8,6,-9,1,-4,5,-8,-3,1,-4,1,-8,4,4,2,3,4,-5,-10,-8,-5,10,-1,4,6,6,7,-8,6,7,7,-7,7,5,-10,4,5,-1,-1,-6,-2,-6,8,9,8,-1,4,-8,-2,2,6,-9,10,-7,4,7,8,6,9,-10,-1,-2,1,-8,10,4,6,7,5,8,-9,-7,10,1,-9,4,1,5,-5,4,-4,1,4,-7,-4,-2,2,10,-5,9,1,3,1,-4,4,-4,-8,10,5,-3,-4,1,-6,-6,-1,4,10,6,7,10,9,10,8,-1,9,1,-1,-9,-5,-8,2,10,1,-7,-7,-10,8,-6,-3,-9,-1,8,-5,10,2,6,-2,-9,-4,1,-1,8,2,8,-10,-10,9,4,-2,6,4,1,-10,-9,5,6,1,-9,-9,-10,6,-4,5,1,-4,-5,-8,-2,-7,5,-1,1,-8,-6,-7,-9,-6,8,-1,-3,5,-1,6,-3,6,-6,10,10,-8,-6,3,-8,8,-4,-4,-2,-7,-3,-10,-6,6,-5,9,-6,-2,-2,8,7,5,-5,-8,-7,1,10,6,-10,-9,-9,-10,5,-9,-8,6,-5,5,-9,6,-10,8,10,7,8,-7,-4,4,-9,-8,-10,-10,-7,-4,10,4,8,-1,8,10,-3,5,-2,-1,-1,-7,5,-7,-2,1,-10,-3,9,-7,-1,-2,-4,4,-5,-6,-5,-7,-10,-5,5,4,2,-6,-9,-5,1,-7,-6,10,7,8,-1,-2,-1,-3,4,-4,3,5,-4,-4,-10,10,3,7,-10,-4,10,-1,-5,-7,-2,-5,-2,8,-3,-9,-5,-10,10,10,10,2,10,-3,10,5,-3,-6,1,9,8,8,8,4,3,10,8,7,5,-4,-10,-6,9,5,8,5,-1,-7,-1,9,-5,-9,-10,2,6,2,-6,6,2,9,-5,-4,-7,7,4,-2,-6,-3,-7,4,4,9,6,-7,-7,8,1,10,7,-4,5,1,8,10,10,9,1,5,-3,8,1,2,8,-7,-3,-5,8,-2,1,-2,-7,6,-10,7,-5,3,-1,-7,-9,5,7,10,7,4,3,10,8,8,-8,9,-10,-1,-7,1,3,8,5,9,-10,-1,-10,3,-8,6,-5,-9,-9,-5,9,4,1,3,-2,9,5,4,-2,1,-9,-4,-4,-9,-3,9,2,3,-7,-1,-7,10,-2,-5,-5,-2,7,-7,1,4,-2,-8,-8,8,-7,4,-9,6,-1,4,1,-8,-2,-9,-3,-6,6,7,-5,7,4,-6,6,-4,6,4,-4,8,-7,10,8,5,2,-7,-9,-10,8,5,9,4,7,-5,-10,8,9,-9,6,2,8,-6,8,9,2,-3,-3,-10,-2,-1,7,-2,-9,-5,5,-4,9,-9,6,2,-3,-10,-9,-9,5,-5,-1,-1,8,-7,3,5,1,-8,3,6,-4,-4,-7,6,-3,8,-10,4,5,8,-3,2,6,-3,-8,4,-7,5,-1,8,5,-8,5,10,5,1,-10,4,-1,-4,-7,-2,-9,10,9,-4,6,-9,5,-2,-9,8,4,-5,10,5,-2,-4,6,-10,2,9,-7,-8,8,-1,-2,6,3,-2,-5,-10,6,9,-8,4,5,7,-4,4,-4,10,-8,-2,2,-3,3,-5,7,-8,2,-6,-9,-1,-5,-6,-2,7,-7,-10,-4,-7,4,5,-3,-10,-7,4,-7,-1,-9,-5,7,10,10,-2,-1,-1,-10,-10,-1,10,5,6,-8,-8,5,-8,3,6,-8,-8,-9,5,5,-2,8,-6,7,-6,-10,2,8,-10,7,-4,6,5,-1,5,-10,4,-1,10,4,-3,-2,2,4,-1,-7,8,-9,9,5,-5,2,-2,4,3,8,4,2,10], dtype = "int16")#candidate|6078|(1470,)|const|int16
call_6077 = relay.TupleGetItem(func_967_call(relay.reshape(const_6078.astype('int16'), [14, 7, 15])), 0)
call_6079 = relay.TupleGetItem(func_970_call(relay.reshape(const_6078.astype('int16'), [14, 7, 15])), 0)
output = relay.Tuple([bop_6074,call_6077,const_6078,])
output2 = relay.Tuple([bop_6074,call_6079,const_6078,])
func_6082 = relay.Function([var_6072,var_6073,], output)
mod['func_6082'] = func_6082
mod = relay.transform.InferType()(mod)
var_6083 = relay.var("var_6083", dtype = "int16", shape = (13, 16, 8))#candidate|6083|(13, 16, 8)|var|int16
var_6084 = relay.var("var_6084", dtype = "int16", shape = (13, 16, 8))#candidate|6084|(13, 16, 8)|var|int16
output = func_6082(var_6083,var_6084,)
func_6085 = relay.Function([var_6083,var_6084,], output)
mutated_mod['func_6085'] = func_6085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4428_call = mod.get_global_var('func_4428')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_6125 = func_4428_call()
call_6126 = func_4428_call()
output = call_6125
output2 = call_6126
func_6130 = relay.Function([], output)
mod['func_6130'] = func_6130
mod = relay.transform.InferType()(mod)
mutated_mod['func_6130'] = func_6130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6130_call = mutated_mod.get_global_var('func_6130')
call_6131 = func_6130_call()
output = call_6131
func_6132 = relay.Function([], output)
mutated_mod['func_6132'] = func_6132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_6208 = relay.TupleGetItem(func_2067_call(), 0)
call_6209 = relay.TupleGetItem(func_2069_call(), 0)
output = call_6208
output2 = call_6209
func_6238 = relay.Function([], output)
mod['func_6238'] = func_6238
mod = relay.transform.InferType()(mod)
mutated_mod['func_6238'] = func_6238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6238_call = mutated_mod.get_global_var('func_6238')
call_6239 = func_6238_call()
output = call_6239
func_6240 = relay.Function([], output)
mutated_mod['func_6240'] = func_6240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4476_call = mod.get_global_var('func_4476')
func_4477_call = mutated_mod.get_global_var('func_4477')
call_6254 = func_4476_call()
call_6255 = func_4476_call()
uop_6259 = relay.tan(call_6254.astype('float64')) # shape=(1470,)
uop_6261 = relay.tan(call_6255.astype('float64')) # shape=(1470,)
func_5561_call = mod.get_global_var('func_5561')
func_5562_call = mutated_mod.get_global_var('func_5562')
call_6267 = relay.TupleGetItem(func_5561_call(), 0)
call_6268 = relay.TupleGetItem(func_5562_call(), 0)
output = relay.Tuple([uop_6259,call_6267,])
output2 = relay.Tuple([uop_6261,call_6268,])
func_6295 = relay.Function([], output)
mod['func_6295'] = func_6295
mod = relay.transform.InferType()(mod)
output = func_6295()
func_6296 = relay.Function([], output)
mutated_mod['func_6296'] = func_6296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6307 = relay.var("var_6307", dtype = "float32", shape = (11, 14, 11))#candidate|6307|(11, 14, 11)|var|float32
uop_6308 = relay.log10(var_6307.astype('float32')) # shape=(11, 14, 11)
output = uop_6308
output2 = uop_6308
func_6310 = relay.Function([var_6307,], output)
mod['func_6310'] = func_6310
mod = relay.transform.InferType()(mod)
var_6311 = relay.var("var_6311", dtype = "float32", shape = (11, 14, 11))#candidate|6311|(11, 14, 11)|var|float32
output = func_6310(var_6311)
func_6312 = relay.Function([var_6311], output)
mutated_mod['func_6312'] = func_6312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1202_call = mutated_mod.get_global_var('func_1202')
call_6360 = relay.TupleGetItem(func_1201_call(), 0)
call_6361 = relay.TupleGetItem(func_1202_call(), 0)
func_5813_call = mod.get_global_var('func_5813')
func_5815_call = mutated_mod.get_global_var('func_5815')
call_6365 = func_5813_call()
call_6366 = func_5813_call()
func_458_call = mod.get_global_var('func_458')
func_461_call = mutated_mod.get_global_var('func_461')
var_6368 = relay.var("var_6368", dtype = "int64", shape = ())#candidate|6368|()|var|int64
var_6369 = relay.var("var_6369", dtype = "int64", shape = (96,))#candidate|6369|(96,)|var|int64
call_6367 = relay.TupleGetItem(func_458_call(relay.reshape(var_6368.astype('int64'), []), relay.reshape(var_6369.astype('int64'), [12, 8, 1]), ), 1)
call_6370 = relay.TupleGetItem(func_461_call(relay.reshape(var_6368.astype('int64'), []), relay.reshape(var_6369.astype('int64'), [12, 8, 1]), ), 1)
bop_6374 = relay.greater_equal(call_6365.astype('bool'), call_6367.astype('bool')) # shape=(12, 8, 1274)
bop_6377 = relay.greater_equal(call_6366.astype('bool'), call_6370.astype('bool')) # shape=(12, 8, 1274)
output = relay.Tuple([call_6360,var_6368,var_6369,bop_6374,])
output2 = relay.Tuple([call_6361,var_6368,var_6369,bop_6377,])
func_6378 = relay.Function([var_6368,var_6369,], output)
mod['func_6378'] = func_6378
mod = relay.transform.InferType()(mod)
mutated_mod['func_6378'] = func_6378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6378_call = mutated_mod.get_global_var('func_6378')
var_6380 = relay.var("var_6380", dtype = "int64", shape = ())#candidate|6380|()|var|int64
var_6381 = relay.var("var_6381", dtype = "int64", shape = (96,))#candidate|6381|(96,)|var|int64
call_6379 = func_6378_call(var_6380,var_6381,)
output = call_6379
func_6382 = relay.Function([var_6380,var_6381,], output)
mutated_mod['func_6382'] = func_6382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_742_call = mod.get_global_var('func_742')
func_744_call = mutated_mod.get_global_var('func_744')
call_6444 = relay.TupleGetItem(func_742_call(), 0)
call_6445 = relay.TupleGetItem(func_744_call(), 0)
func_3200_call = mod.get_global_var('func_3200')
func_3202_call = mutated_mod.get_global_var('func_3202')
call_6448 = relay.TupleGetItem(func_3200_call(), 0)
call_6449 = relay.TupleGetItem(func_3202_call(), 0)
output = relay.Tuple([call_6444,call_6448,])
output2 = relay.Tuple([call_6445,call_6449,])
func_6450 = relay.Function([], output)
mod['func_6450'] = func_6450
mod = relay.transform.InferType()(mod)
output = func_6450()
func_6451 = relay.Function([], output)
mutated_mod['func_6451'] = func_6451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_695_call = mod.get_global_var('func_695')
func_697_call = mutated_mod.get_global_var('func_697')
call_6763 = relay.TupleGetItem(func_695_call(), 0)
call_6764 = relay.TupleGetItem(func_697_call(), 0)
output = relay.Tuple([call_6763,])
output2 = relay.Tuple([call_6764,])
func_6773 = relay.Function([], output)
mod['func_6773'] = func_6773
mod = relay.transform.InferType()(mod)
output = func_6773()
func_6774 = relay.Function([], output)
mutated_mod['func_6774'] = func_6774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1262_call = mod.get_global_var('func_1262')
func_1264_call = mutated_mod.get_global_var('func_1264')
call_6870 = func_1262_call()
call_6871 = func_1262_call()
output = call_6870
output2 = call_6871
func_6893 = relay.Function([], output)
mod['func_6893'] = func_6893
mod = relay.transform.InferType()(mod)
output = func_6893()
func_6894 = relay.Function([], output)
mutated_mod['func_6894'] = func_6894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6926 = relay.var("var_6926", dtype = "uint16", shape = (7, 14, 4))#candidate|6926|(7, 14, 4)|var|uint16
var_6927 = relay.var("var_6927", dtype = "uint16", shape = (7, 14, 4))#candidate|6927|(7, 14, 4)|var|uint16
bop_6928 = relay.left_shift(var_6926.astype('uint16'), relay.reshape(var_6927.astype('uint16'), relay.shape_of(var_6926))) # shape=(7, 14, 4)
output = relay.Tuple([bop_6928,])
output2 = relay.Tuple([bop_6928,])
func_6933 = relay.Function([var_6926,var_6927,], output)
mod['func_6933'] = func_6933
mod = relay.transform.InferType()(mod)
mutated_mod['func_6933'] = func_6933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6933_call = mutated_mod.get_global_var('func_6933')
var_6935 = relay.var("var_6935", dtype = "uint16", shape = (7, 14, 4))#candidate|6935|(7, 14, 4)|var|uint16
var_6936 = relay.var("var_6936", dtype = "uint16", shape = (7, 14, 4))#candidate|6936|(7, 14, 4)|var|uint16
call_6934 = func_6933_call(var_6935,var_6936,)
output = call_6934
func_6937 = relay.Function([var_6935,var_6936,], output)
mutated_mod['func_6937'] = func_6937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_422_call = mod.get_global_var('func_422')
func_423_call = mutated_mod.get_global_var('func_423')
call_6962 = relay.TupleGetItem(func_422_call(), 3)
call_6963 = relay.TupleGetItem(func_423_call(), 3)
output = relay.Tuple([call_6962,])
output2 = relay.Tuple([call_6963,])
func_6966 = relay.Function([], output)
mod['func_6966'] = func_6966
mod = relay.transform.InferType()(mod)
output = func_6966()
func_6967 = relay.Function([], output)
mutated_mod['func_6967'] = func_6967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3999_call = mod.get_global_var('func_3999')
func_4000_call = mutated_mod.get_global_var('func_4000')
call_7043 = relay.TupleGetItem(func_3999_call(), 1)
call_7044 = relay.TupleGetItem(func_4000_call(), 1)
func_5040_call = mod.get_global_var('func_5040')
func_5042_call = mutated_mod.get_global_var('func_5042')
call_7057 = func_5040_call()
call_7058 = func_5040_call()
uop_7060 = relay.atanh(call_7057.astype('float64')) # shape=(14, 7, 15)
uop_7062 = relay.atanh(call_7058.astype('float64')) # shape=(14, 7, 15)
output = relay.Tuple([call_7043,uop_7060,])
output2 = relay.Tuple([call_7044,uop_7062,])
func_7074 = relay.Function([], output)
mod['func_7074'] = func_7074
mod = relay.transform.InferType()(mod)
output = func_7074()
func_7075 = relay.Function([], output)
mutated_mod['func_7075'] = func_7075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_7110 = relay.TupleGetItem(func_2067_call(), 0)
call_7111 = relay.TupleGetItem(func_2069_call(), 0)
output = call_7110
output2 = call_7111
func_7114 = relay.Function([], output)
mod['func_7114'] = func_7114
mod = relay.transform.InferType()(mod)
output = func_7114()
func_7115 = relay.Function([], output)
mutated_mod['func_7115'] = func_7115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mod.get_global_var('func_2901')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_7136 = relay.TupleGetItem(func_2901_call(), 0)
call_7137 = relay.TupleGetItem(func_2902_call(), 0)
func_1451_call = mod.get_global_var('func_1451')
func_1454_call = mutated_mod.get_global_var('func_1454')
var_7140 = relay.var("var_7140", dtype = "float32", shape = (72,))#candidate|7140|(72,)|var|float32
var_7141 = relay.var("var_7141", dtype = "int64", shape = (4, 24))#candidate|7141|(4, 24)|var|int64
call_7139 = relay.TupleGetItem(func_1451_call(relay.reshape(var_7140.astype('float32'), [72,]), relay.reshape(var_7141.astype('int64'), [96,]), ), 1)
call_7142 = relay.TupleGetItem(func_1454_call(relay.reshape(var_7140.astype('float32'), [72,]), relay.reshape(var_7141.astype('int64'), [96,]), ), 1)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_7157 = relay.TupleGetItem(func_1336_call(), 0)
call_7158 = relay.TupleGetItem(func_1337_call(), 0)
func_4612_call = mod.get_global_var('func_4612')
func_4615_call = mutated_mod.get_global_var('func_4615')
call_7163 = relay.TupleGetItem(func_4612_call(relay.reshape(call_7139.astype('float32'), [72,]), relay.reshape(var_7141.astype('int64'), [96,]), ), 4)
call_7164 = relay.TupleGetItem(func_4615_call(relay.reshape(call_7139.astype('float32'), [72,]), relay.reshape(var_7141.astype('int64'), [96,]), ), 4)
output = relay.Tuple([call_7136,call_7139,var_7140,var_7141,call_7157,call_7163,])
output2 = relay.Tuple([call_7137,call_7142,var_7140,var_7141,call_7158,call_7164,])
func_7166 = relay.Function([var_7140,var_7141,], output)
mod['func_7166'] = func_7166
mod = relay.transform.InferType()(mod)
mutated_mod['func_7166'] = func_7166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7166_call = mutated_mod.get_global_var('func_7166')
var_7168 = relay.var("var_7168", dtype = "float32", shape = (72,))#candidate|7168|(72,)|var|float32
var_7169 = relay.var("var_7169", dtype = "int64", shape = (4, 24))#candidate|7169|(4, 24)|var|int64
call_7167 = func_7166_call(var_7168,var_7169,)
output = call_7167
func_7170 = relay.Function([var_7168,var_7169,], output)
mutated_mod['func_7170'] = func_7170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2296_call = mod.get_global_var('func_2296')
func_2297_call = mutated_mod.get_global_var('func_2297')
call_7255 = relay.TupleGetItem(func_2296_call(), 0)
call_7256 = relay.TupleGetItem(func_2297_call(), 0)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_7281 = func_2132_call()
call_7282 = func_2132_call()
func_3918_call = mod.get_global_var('func_3918')
func_3919_call = mutated_mod.get_global_var('func_3919')
call_7287 = func_3918_call()
call_7288 = func_3918_call()
func_2088_call = mod.get_global_var('func_2088')
func_2091_call = mutated_mod.get_global_var('func_2091')
var_7303 = relay.var("var_7303", dtype = "int32", shape = ())#candidate|7303|()|var|int32
var_7304 = relay.var("var_7304", dtype = "int32", shape = (154,))#candidate|7304|(154,)|var|int32
call_7302 = relay.TupleGetItem(func_2088_call(relay.reshape(var_7303.astype('int32'), []), relay.reshape(var_7304.astype('int32'), [11, 7, 2]), ), 0)
call_7305 = relay.TupleGetItem(func_2091_call(relay.reshape(var_7303.astype('int32'), []), relay.reshape(var_7304.astype('int32'), [11, 7, 2]), ), 0)
uop_7309 = relay.log10(call_7302.astype('float64')) # shape=(11, 7, 2)
uop_7311 = relay.log10(call_7305.astype('float64')) # shape=(11, 7, 2)
uop_7330 = relay.sinh(uop_7309.astype('float64')) # shape=(11, 7, 2)
uop_7332 = relay.sinh(uop_7311.astype('float64')) # shape=(11, 7, 2)
func_6933_call = mod.get_global_var('func_6933')
func_6937_call = mutated_mod.get_global_var('func_6937')
var_7344 = relay.var("var_7344", dtype = "uint16", shape = (392,))#candidate|7344|(392,)|var|uint16
call_7343 = relay.TupleGetItem(func_6933_call(relay.reshape(var_7344.astype('uint16'), [7, 14, 4]), relay.reshape(var_7344.astype('uint16'), [7, 14, 4]), ), 0)
call_7345 = relay.TupleGetItem(func_6937_call(relay.reshape(var_7344.astype('uint16'), [7, 14, 4]), relay.reshape(var_7344.astype('uint16'), [7, 14, 4]), ), 0)
func_6893_call = mod.get_global_var('func_6893')
func_6894_call = mutated_mod.get_global_var('func_6894')
call_7347 = func_6893_call()
call_7348 = func_6893_call()
uop_7350 = relay.asinh(uop_7330.astype('float32')) # shape=(11, 7, 2)
uop_7352 = relay.asinh(uop_7332.astype('float32')) # shape=(11, 7, 2)
output = relay.Tuple([call_7255,call_7281,call_7287,var_7303,var_7304,call_7343,var_7344,call_7347,uop_7350,])
output2 = relay.Tuple([call_7256,call_7282,call_7288,var_7303,var_7304,call_7345,var_7344,call_7348,uop_7352,])
F = relay.Function([var_7303,var_7304,var_7344,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7303,var_7304,var_7344,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_5434(%var_5424: Tensor[(273), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(2, 28), float64], Tensor[(462, 2), uint16], Tensor[(273), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(462, 2), uint16] */, dtype="uint16") /* ty=Tensor[(462, 2), uint16] */;
  %1 = cast(%var_5424, dtype="float32") /* ty=Tensor[(273), float32] */;
  %2 = reshape(%0, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %3 = reshape(%1, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %4 = @func_4339(%2, %3) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */;
  %5 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
  %6 = %4.2;
  (%5, %6, meta[relay.Constant][0] /* ty=Tensor[(462, 2), uint16] */, %var_5424)
}

def @func_12475() -> Tensor[(6, 3, 10), float64] {
  %7 = @func_5907() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %7.0
}

def @func_15824() -> (Tensor[(6, 3, 10), float64],) {
  %8 = @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %9 = %8.1;
  (%9,)
}

def @func_5141() -> Tensor[(6, 3, 10), float64] {
  %10 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %10.0
}

def @func_5960(%var_5950: Tensor[(364), int8]) -> Tensor[(364), bool] {
  %11 = @func_4441() /* ty=Tensor[(364), int8] */;
  %12 = cast(%var_5950, dtype="bool") /* ty=Tensor[(364), bool] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(1), int32] */;
  %14 = cast(%11, dtype="bool") /* ty=Tensor[(364), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?), bool] */;
  logical_and(%14, %15) /* ty=Tensor[(364), bool] */
}

def @func_11709(%var_11648: Tensor[(9, 11, 9), float32]) -> (Tensor[(9, 11, 9), float32], Tensor[(364), int8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  %16 = cast(%var_11648, dtype="float32") /* ty=Tensor[(9, 11, 9), float32] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(180, 1), float64] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %18 = reshape(%17, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %19 = @func_9671(%18) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
  %20 = @func_11341() /* ty=(Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64]) */;
  %21 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %22 = log(%16) /* ty=Tensor[(9, 11, 9), float32] */;
  %23 = %19.0;
  %24 = %20.1;
  %25 = %21.2;
  (%22, %23, meta[relay.Constant][1] /* ty=Tensor[(180, 1), float64] */, %24, %25)
}

def @func_728(%var_682: Tensor[(11, 7, 12), uint16], %var_724: Tensor[(1, 273), float32], %var_725: Tensor[(56), float64]) -> (Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) {
  %26 = cast(%var_682, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %27 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(11, 7, 12), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 7, 12), uint16] */, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %30 = cast(%var_724, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
  %31 = cast(%var_725, dtype="float64") /* ty=Tensor[(56), float64] */;
  %32 = reshape(%30, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float32] */;
  %33 = reshape(%31, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %34 = @func_153(%32, %33) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) */;
  %35 = less(%28, %29) /* ty=Tensor[(11, 7, 12), bool] */;
  %36 = %34.1;
  (%35, %36, %var_724, %var_725)
}

def @func_16472() -> (Tensor[(168), float32],) {
  %37 = @func_11626() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(364), int8], Tensor[(168), float32], Tensor[(364), int8]) */;
  %38 = %37.3;
  (%38,)
}

def @func_5275(%var_5240: Tensor[(924), uint16], %var_5241: Tensor[(273), float32], %var_5246: Tensor[(156), uint8], %var_5269: Tensor[(6, 3, 10), float64]) -> (Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) {
  %39 = cast(%var_5240, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %40 = cast(%var_5241, dtype="float32") /* ty=Tensor[(273), float32] */;
  %41 = reshape(%39, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %42 = reshape(%40, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %43 = @func_4339(%41, %42) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */;
  %44 = cast(%var_5246, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %45 = cast(%var_5246, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %46 = reshape(%44, newshape=[13, 12, 1]) /* ty=Tensor[(13, 12, 1), uint8] */;
  %47 = reshape(%45, newshape=[13, 12, 1]) /* ty=Tensor[(13, 12, 1), uint8] */;
  %48 = @func_1960(%46, %47) /* ty=(Tensor[(13, 12, ?), uint8],) */;
  %49 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %50 = %49.0;
  %51 = cast(%var_5269, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%50, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %55 = %43.1;
  %56 = %48.0;
  %57 = @func_4384() /* ty=Tensor[(364), int8] */;
  %58 = logical_or(%53, %54) /* ty=Tensor[(6, 3, 10), bool] */;
  (%55, %var_5240, %var_5241, %56, %var_5246, %57, %58)
}

def @func_7886(%var_7794: Tensor[(1, 15, 9), uint32], %var_7795: Tensor[(15, 15, 9), uint32], %var_7803: Tensor[(924), uint16], %var_7813: Tensor[(180, 9), float64], %var_7846: Tensor[(56), float64]) -> (Tensor[(15, 15, 9), uint32], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(336), float64], Tensor[(56), float64], Tensor[(462, 2), bool], Tensor[(180, 9), float64], Tensor[(462, 2), float32], Tensor[(4, 7, 13), int8]) {
  %59 = cast(%var_7794, dtype="uint32") /* ty=Tensor[(1, 15, 9), uint32] */;
  %60 = cast(%var_7795, dtype="uint32") /* ty=Tensor[(15, 15, 9), uint32] */;
  %61 = @func_5907() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %62 = cast(meta[relay.Constant][6] /* ty=Tensor[(180, 1), float64] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %63 = cast(7.5211f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %65 = cast(%var_7803, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %66 = reshape(%62, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %67 = reshape(%63, newshape=[]) /* ty=float32 */;
  %68 = reshape(%64, newshape=[1352]) /* ty=Tensor[(1352), float32] */;
  %69 = reshape(%65, newshape=[462, 2]) /* ty=Tensor[(462, 2), uint16] */;
  %70 = @func_5731(%66, %67, %68, %69) /* ty=(Tensor[(6, 3, 10), uint8], Tensor[(4, 7, 13), int8], float32, Tensor[(1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(364, 1), int8], Tensor[(6, 3, 10), bool]) */;
  %71 = %70.4;
  %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %75 = cast(%var_7846, dtype="float64") /* ty=Tensor[(56), float64] */;
  %76 = cast(meta[relay.Constant][3] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %77 = cast(%71, dtype="uint16") /* ty=Tensor[(462, 2), uint16] */;
  %78 = reshape(%72, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %79 = reshape(%73, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %80 = reshape(%74, newshape=[8, 42]) /* ty=Tensor[(8, 42), float64] */;
  %81 = reshape(%75, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %82 = reshape(%76, newshape=[26, 52]) /* ty=Tensor[(26, 52), float32] */;
  %83 = reshape(%77, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %84 = @func_4807(%78, %79, %80, %81, %82, %83) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */;
  %85 = %84.5;
  %86 = cast(%85, dtype="bool") /* ty=Tensor[(924), bool] */;
  %87 = shape_of(%71, dtype="int32") /* ty=Tensor[(2), int32] */;
  %88 = cast(%71, dtype="bool") /* ty=Tensor[(462, 2), bool] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %90 = cast(meta[relay.Constant][6] /* ty=Tensor[(180, 1), float64] */, dtype="uint32") /* ty=Tensor[(180, 1), uint32] */;
  %91 = cast(%var_7813, dtype="uint32") /* ty=Tensor[(180, 9), uint32] */;
  %92 = left_shift(%90, %91) /* ty=Tensor[(180, 9), uint32] */;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(180, 9), float64] */;
  %94 = cast(%71, dtype="float32") /* ty=Tensor[(462, 2), float32] */;
  %95 = cast(7.5211f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %96 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %97 = bitwise_and(%59, %60) /* ty=Tensor[(15, 15, 9), uint32] */;
  %98 = %61.0;
  %99 = less_equal(%88, %89) /* ty=Tensor[(462, 2), bool] */;
  %100 = sin(%93) /* ty=Tensor[(180, 9), float64] */;
  %101 = mod(%94, %95) /* ty=Tensor[(462, 2), float32] */;
  %102 = %96.0;
  (%97, meta[relay.Constant][3] /* ty=Tensor[(1352), float32] */, %var_7803, %98, meta[relay.Constant][4] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][5] /* ty=Tensor[(336), float64] */, %var_7846, %99, %100, %101, %102)
}

def @func_9570(%var_9558: bool, %var_9559: Tensor[(14, 1, 9), bool]) -> Tensor[(14, 1, 9), bool] {
  %103 = cast(%var_9558, dtype="bool") /* ty=bool */;
  %104 = cast(%var_9559, dtype="bool") /* ty=Tensor[(14, 1, 9), bool] */;
  logical_or(%103, %104) /* ty=Tensor[(14, 1, 9), bool] */
}

def @func_13349() -> (Tensor[(364), int8], Tensor[(14, 66), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %105 = @func_4384() /* ty=Tensor[(364), int8] */;
  %106 = cast(%105, dtype="int8") /* ty=Tensor[(364), int8] */;
  %107 = reshape(%106, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %108 = @func_9070(%107) /* ty=(Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %109 = %108.5;
  %110 = cast(%109, dtype="float64") /* ty=Tensor[(14, 66), float64] */;
  %111 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %112 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %113 = acos(%110) /* ty=Tensor[(14, 66), float64] */;
  %114 = %111.1;
  %115 = %112.0;
  (%105, %113, %114, %115)
}

def @func_8602() -> Tensor[(6, 3, 10), float64] {
  %116 = @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %116.0
}

def @func_7346() -> Tensor[(6, 3, 10), float64] {
  %117 = @func_6770() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %117.0
}

def @func_5090(%var_5080: float32, %var_5083: Tensor[(56), float64]) -> (Tensor[(364), int8], Tensor[(1, 1352), float32], float32, Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(56), float64]) {
  %118 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %119 = cast(%var_5080, dtype="float32") /* ty=float32 */;
  %120 = cast(meta[relay.Constant][7] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %121 = cast(meta[relay.Constant][8] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %122 = cast(%var_5083, dtype="float64") /* ty=Tensor[(56), float64] */;
  %123 = %118.0;
  %124 = cast(%123, dtype="int8") /* ty=Tensor[(364), int8] */;
  %125 = reshape(%119, newshape=[]) /* ty=float32 */;
  %126 = reshape(%120, newshape=[1, 1352]) /* ty=Tensor[(1, 1352), float32] */;
  %127 = reshape(%121, newshape=[462, 2]) /* ty=Tensor[(462, 2), uint16] */;
  %128 = reshape(%122, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %129 = reshape(%124, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %130 = @func_1845(%125, %126, %127, %128, %129) /* ty=(Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
  %131 = %130.2;
  (%123, %131, %var_5080, meta[relay.Constant][7] /* ty=Tensor[(1352), float32] */, meta[relay.Constant][8] /* ty=Tensor[(924), uint16] */, %var_5083)
}

def @func_7384() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %132 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %133 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %134 = @func_5569() /* ty=Tensor[(6, 3, 10), float64] */;
  %135 = @func_4654() /* ty=Tensor[(6, 3, 10), float64] */;
  (%132, %133, %134, %135)
}

def @func_10211() -> (Tensor[(6, 3, 10), float64],) {
  %136 = @func_8950() /* ty=Tensor[(6, 3, 10), float64] */;
  (%136,)
}

def @func_10661() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %137 = @func_8950() /* ty=Tensor[(6, 3, 10), float64] */;
  %138 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
  %139 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  (%137, %138, %139)
}

def @func_8324() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %140 = @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %141 = %140.0;
  %142 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %146 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %147 = floor_mod(%144, %145) /* ty=Tensor[(6, 3, 10), float64] */;
  %148 = %146.0;
  %149 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
  (%147, %148, %149)
}

def @func_8587() -> Tensor[(6, 3, 10), bool] {
  %150 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
  %150.1
}

def @func_12872() -> (Tensor[(6, 3, 10), float64],) {
  %151 = @func_6451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %152 = %151.1;
  (%152,)
}

def @func_10150() -> (Tensor[(6, 3, 10), float64],) {
  %153 = @func_8001() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %154 = %153.1;
  (%154,)
}

def @func_4946() -> (Tensor[(6, 3, 10), float64],) {
  %155 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
  (%155,)
}

def @func_12820() -> Tensor[(6, 3, 10), float64] {
  %156 = @func_10661() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %156.1
}

def @func_7929(%var_7911: Tensor[(924), uint16], %var_7912: Tensor[(39, 7), float32], %var_7913: Tensor[(156), uint8], %var_7924: Tensor[(360), uint64], %var_7925: Tensor[(336), float64], %var_7927: Tensor[(1352, 1), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(156), uint8], Tensor[(924), uint16], Tensor[(39, 7), float32], Tensor[(156), uint8], Tensor[(924), uint16], Tensor[(360), uint64], Tensor[(336), float64], Tensor[(56), float64], Tensor[(1352, 1), float32]) {
  %157 = cast(%var_7911, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %158 = cast(%var_7912, dtype="float32") /* ty=Tensor[(39, 7), float32] */;
  %159 = cast(%var_7913, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %160 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
  %161 = cast(%160, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %162 = reshape(%157, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %163 = reshape(%158, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %164 = reshape(%159, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %165 = reshape(%161, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %166 = @func_5275(%162, %163, %164, %165) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %167 = cast(%var_7924, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %168 = cast(%var_7924, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %169 = cast(%var_7925, dtype="float64") /* ty=Tensor[(336), float64] */;
  %170 = cast(meta[relay.Constant][10] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %171 = cast(%var_7927, dtype="float32") /* ty=Tensor[(1352, 1), float32] */;
  %172 = cast(%var_7911, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %173 = reshape(%167, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %174 = reshape(%168, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %175 = reshape(%169, newshape=[8, 42]) /* ty=Tensor[(8, 42), float64] */;
  %176 = reshape(%170, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %177 = reshape(%171, newshape=[26, 52]) /* ty=Tensor[(26, 52), float32] */;
  %178 = reshape(%172, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %179 = @func_4807(%173, %174, %175, %176, %177, %178) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */;
  %180 = %166.4;
  %181 = %179.5;
  (%160, %180, %var_7911, %var_7912, %var_7913, %181, %var_7924, %var_7925, meta[relay.Constant][10] /* ty=Tensor[(56), float64] */, %var_7927)
}

def @func_13938() -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  %182 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %183 = @func_11854() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */;
  %184 = %182.1;
  %185 = %183.1;
  (%184, %185)
}

def @func_14045(%var_14020: Tensor[(6, 1, 14), float64], %var_14026: Tensor[(364), int8]) -> (Tensor[(6, 1, 14), float64], Tensor[(364), int8], Tensor[(364), int8]) {
  %186 = cast(%var_14020, dtype="float64") /* ty=Tensor[(6, 1, 14), float64] */;
  %187 = cast(%var_14026, dtype="int8") /* ty=Tensor[(364), int8] */;
  %188 = reshape(%187, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %189 = @func_9070(%188) /* ty=(Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %190 = sqrt(%186) /* ty=Tensor[(6, 1, 14), float64] */;
  %191 = %189.7;
  (%190, %191, %var_14026)
}

def @func_15708(%var_15700: Tensor[(14, 66), float64]) -> (Tensor[(364), int8], Tensor[(14, 66), int16]) {
  %192 = @func_13349() /* ty=(Tensor[(364), int8], Tensor[(14, 66), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %193 = %192.1;
  %194 = cast(%var_15700, dtype="int16") /* ty=Tensor[(14, 66), int16] */;
  %195 = shape_of(%193, dtype="int32") /* ty=Tensor[(2), int32] */;
  %196 = cast(%193, dtype="int16") /* ty=Tensor[(14, 66), int16] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %198 = @func_4384() /* ty=Tensor[(364), int8] */;
  %199 = logical_xor(%196, %197) /* ty=Tensor[(14, 66), int16] */;
  (%198, %199)
}

def @func_9958() -> (Tensor[(6, 3, 10), float64], Tensor[(385, 3), int32], Tensor[(1155), float32]) {
  %200 = @func_8001() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %202 = reshape(%201, newshape=[385, 3]) /* ty=Tensor[(385, 3), float32] */;
  %203 = @func_7593(%202) /* ty=(Tensor[(385, 3), int32],) */;
  %204 = %200.1;
  %205 = %203.0;
  (%204, %205, meta[relay.Constant][11] /* ty=Tensor[(1155), float32] */)
}

def @func_14621() -> (Tensor[(6, 3, 10), float64],) {
  %206 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %207 = %206.0;
  (%207,)
}

def @func_12328(%var_12322: Tensor[(4, 8, 12), float32]) -> Tensor[(4, 8, 12), float32] {
  %208 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 8, 1), float32] */;
  %209 = cast(%var_12322, dtype="float32") /* ty=Tensor[(4, 8, 12), float32] */;
  floor_divide(%208, %209) /* ty=Tensor[(4, 8, 12), float32] */
}

def @func_15393() -> Tensor[(6, 3, 10), float64] {
  %210 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %210.0
}

def @func_5059() -> (Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) {
  %211 = cast(meta[relay.Constant][13] /* ty=Tensor[(154, 6), uint16] */, dtype="uint16") /* ty=Tensor[(154, 6), uint16] */;
  %212 = cast(meta[relay.Constant][14] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %213 = reshape(%211, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %214 = reshape(%212, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %215 = @func_4339(%213, %214) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */;
  %216 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %217 = %216.0;
  %218 = cast(%217, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
  %219 = %215.0;
  %220 = sqrt(%218) /* ty=Tensor[(6, 3, 10), float32] */;
  (%219, meta[relay.Constant][13] /* ty=Tensor[(154, 6), uint16] */, meta[relay.Constant][14] /* ty=Tensor[(273), float32] */, %220)
}

def @func_14815(%var_14794: Tensor[(1155), float32]) -> (Tensor[(6, 3, 10), bool], Tensor[(56), float64], Tensor[(1155), float32]) {
  %221 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %222 = cast(%var_14794, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %223 = reshape(%222, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %224 = @func_5380(%223) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float32], Tensor[(56), float64], float32, Tensor[(56), float64], Tensor[(4, 7, 13), int8], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
  %225 = %221.0;
  %226 = %224.2;
  (%225, %226, %var_14794)
}

def @func_10822(%var_10807: Tensor[(4, 7, 13), int8]) -> (Tensor[(180), float64], Tensor[(4, 7, 13), float64], Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  %227 = @func_9699() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %228 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %229 = %228.0;
  %230 = cast(%var_10807, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%229, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %234 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
  %235 = cast(%234, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %236 = reshape(%235, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %237 = @func_4502(%236) /* ty=(Tensor[(364), int8], Tensor[(364), int8], Tensor[(6, 3, 10), int64], Tensor[(364), int8], Tensor[(364), int8]) */;
  %238 = %227.1;
  %239 = subtract(%232, %233) /* ty=Tensor[(4, 7, 13), float64] */;
  %240 = %237.3;
  (%238, %239, %234, %240)
}

def @func_15323() -> Tensor[(6, 3, 10), float64] {
  %241 = @func_5907() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %241.0
}

def @func_15515() -> Tensor[(273), float64] {
  @func_10369() /* ty=Tensor[(273), float64] */
}

def @func_14904(%var_14883: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %242 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %243 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %244 = cast(%var_14883, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %245 = reshape(%244, newshape=[4, 660]) /* ty=Tensor[(4, 660), uint8] */;
  %246 = @func_10075(%245) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(4, 660), float32]) */;
  %247 = @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %248 = %242.0;
  %249 = %243.1;
  %250 = %246.1;
  %251 = %247.2;
  %252 = @func_12475() /* ty=Tensor[(6, 3, 10), float64] */;
  (%248, %249, %250, %var_14883, %251, %252)
}

def @func_16556() -> (Tensor[(6, 3, 10), float64],) {
  %253 = @func_8602() /* ty=Tensor[(6, 3, 10), float64] */;
  (%253,)
}

def @func_12903() -> (Tensor[(6, 3, 10), float64],) {
  %254 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
  (%254,)
}

def @func_12428(%var_12334: Tensor[(1, 10, 9), float32], %var_12335: Tensor[(10, 10, 9), float32], %var_12372: Tensor[(48), float64], %var_12375: Tensor[(364), int8]) -> (Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(13, 12, ?), uint8], Tensor[(48), float64], Tensor[(364), bool], Tensor[(364), int8], Tensor[(10, 10, 9), float32]) {
  %255 = cast(meta[relay.Constant][15] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %256 = cast(meta[relay.Constant][16] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %257 = reshape(%255, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %258 = reshape(%256, newshape=[78, 2]) /* ty=Tensor[(78, 2), uint8] */;
  %259 = @func_5778(%257, %258) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(78, 2), uint8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64]) */;
  %260 = cast(%var_12372, dtype="float64") /* ty=Tensor[(48), float64] */;
  %261 = reshape(%260, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float64] */;
  %262 = @func_2433(%261) /* ty=(Tensor[(8, 6, ?), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8]) */;
  %263 = cast(%var_12375, dtype="int8") /* ty=Tensor[(364), int8] */;
  %264 = reshape(%263, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %265 = cast(%var_12334, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %266 = cast(%var_12335, dtype="float32") /* ty=Tensor[(10, 10, 9), float32] */;
  %267 = mod(%265, %266) /* ty=Tensor[(10, 10, 9), float32] */;
  %268 = cast(%var_12334, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %269 = cast(%267, dtype="float32") /* ty=Tensor[(10, 10, 9), float32] */;
  %270 = %259.1;
  %271 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
  %272 = %262.3;
  %273 = @func_5960(%264) /* ty=Tensor[(364), bool] */;
  %274 = divide(%268, %269) /* ty=Tensor[(10, 10, 9), float32] */;
  (%270, meta[relay.Constant][15] /* ty=Tensor[(924), uint16] */, meta[relay.Constant][16] /* ty=Tensor[(156), uint8] */, %271, %272, %var_12372, %273, %var_12375, %274)
}

def @func_10075(%var_10060: Tensor[(4, 660), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(4, 660), float32]) {
  %275 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %276 = cast(%var_10060, dtype="uint8") /* ty=Tensor[(4, 660), uint8] */;
  %277 = cast(%var_10060, dtype="uint8") /* ty=Tensor[(4, 660), uint8] */;
  %278 = reshape(%276, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), uint8] */;
  %279 = reshape(%277, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), uint8] */;
  %280 = @func_5124(%278, %279) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(6, 3, 10), float64]) */;
  %281 = cast(%var_10060, dtype="float32") /* ty=Tensor[(4, 660), float32] */;
  %282 = %275.3;
  %283 = %280.0;
  %284 = atanh(%281) /* ty=Tensor[(4, 660), float32] */;
  (%282, %283, %284)
}

def @func_13731(%var_13656: Tensor[(1352), float32], %var_13729: Tensor[(126), bool]) -> (Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(168, 2), float64], Tensor[(924), uint16], Tensor[(1352), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(28, 2), bool], Tensor[(8, 7, 2), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(1155), float32], Tensor[(1352), float32], Tensor[(6, 3, 10), bool], Tensor[(48, 2), int64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) {
  %285 = cast(meta[relay.Constant][20] /* ty=Tensor[(1352), float32] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %286 = shape_of(%var_13656, dtype="int32") /* ty=Tensor[(1), int32] */;
  %287 = cast(%var_13656, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?), float64] */;
  %289 = cast(meta[relay.Constant][18] /* ty=Tensor[(168, 2), float64] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %290 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %291 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %292 = cast(meta[relay.Constant][18] /* ty=Tensor[(168, 2), float64] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %293 = cast(meta[relay.Constant][21] /* ty=Tensor[(28, 2), float64] */, dtype="float64") /* ty=Tensor[(28, 2), float64] */;
  %294 = cast(%var_13656, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %295 = cast(meta[relay.Constant][19] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %296 = reshape(%290, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %297 = reshape(%291, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %298 = reshape(%292, newshape=[8, 42]) /* ty=Tensor[(8, 42), float64] */;
  %299 = reshape(%293, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %300 = reshape(%294, newshape=[26, 52]) /* ty=Tensor[(26, 52), float32] */;
  %301 = reshape(%295, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %302 = @func_4807(%296, %297, %298, %299, %300, %301) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */;
  %303 = %302.3;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(56), float64] */;
  %305 = cast(meta[relay.Constant][20] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %306 = cast(meta[relay.Constant][19] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %307 = reshape(%289, newshape=[4, 7, 12]) /* ty=Tensor[(4, 7, 12), float64] */;
  %308 = reshape(%304, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %309 = reshape(%305, newshape=[13, 104]) /* ty=Tensor[(13, 104), float32] */;
  %310 = reshape(%306, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %311 = @func_3035(%307, %308, %309, %310) /* ty=(Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) */;
  %312 = cast(%303, dtype="bool") /* ty=Tensor[(56), bool] */;
  %313 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(28, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %314 = cast(meta[relay.Constant][21] /* ty=Tensor[(28, 2), float64] */, dtype="bool") /* ty=Tensor[(28, 2), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %316 = @func_9110() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(112), float64]) */;
  %317 = @func_8222() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %318 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
  %319 = cast(meta[relay.Constant][20] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %320 = %318.0;
  %321 = cast(%320, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %322 = cast(meta[relay.Constant][22] /* ty=Tensor[(48, 2), int64] */, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
  %323 = reshape(%321, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %324 = reshape(%322, newshape=[48, 2]) /* ty=Tensor[(48, 2), int64] */;
  %325 = @func_11150(%323, %324) /* ty=(Tensor[(273), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(48, 2), int64]) */;
  %326 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %327 = cast(%var_13729, dtype="bool") /* ty=Tensor[(126), bool] */;
  %328 = reshape(%326, newshape=[]) /* ty=bool */;
  %329 = reshape(%327, newshape=[14, 1, 9]) /* ty=Tensor[(14, 1, 9), bool] */;
  %330 = @func_8641() /* ty=Tensor[(6, 3, 10), float64] */;
  %331 = minimum(%287, %288) /* ty=Tensor[(1352), float64] */;
  %332 = @func_11294() /* ty=Tensor[(6, 3, 10), float64] */;
  %333 = %311.0;
  %334 = greater_equal(%314, %315) /* ty=Tensor[(28, 2), bool] */;
  %335 = %316.1;
  %336 = %317.0;
  %337 = @func_8641() /* ty=Tensor[(6, 3, 10), float64] */;
  %338 = sqrt(%319) /* ty=Tensor[(1352), float32] */;
  %339 = %325.4;
  %340 = @func_9570(%328, %329) /* ty=Tensor[(14, 1, 9), bool] */;
  (%330, meta[relay.Constant][17] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][18] /* ty=Tensor[(168, 2), float64] */, meta[relay.Constant][19] /* ty=Tensor[(924), uint16] */, %331, %332, %333, %334, %335, %336, %337, %320, %338, %339, meta[relay.Constant][22] /* ty=Tensor[(48, 2), int64] */, %340, False /* ty=bool */, %var_13729)
}

def @func_9699() -> (Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
  %341 = @func_5569() /* ty=Tensor[(6, 3, 10), float64] */;
  %342 = cast(%341, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %343 = reshape(%342, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %344 = @func_9671(%343) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
  %345 = %344.2;
  (%341, %345)
}

def @func_13886() -> Tensor[(364), int8] {
  %346 = @func_11854() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */;
  %346.1
}

def @func_10894() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %347 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %348 = %347.2;
  %349 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
  (%348, %349)
}

def @func_13032(%var_13028: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8], Tensor[(6, 3, 10), float64]) {
  %350 = @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %351 = cast(%var_13028, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %352 = reshape(%351, newshape=[2640]) /* ty=Tensor[(2640), uint8] */;
  %353 = @func_7326(%352) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8]) */;
  %354 = @func_6451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %355 = %350.3;
  %356 = %353.1;
  %357 = %354.1;
  (%355, %356, %var_13028, %357)
}

def @func_15920(%var_15888: Tensor[(156), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(273), float32], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
  %358 = cast(%var_15888, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %359 = cast(%var_15888, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %360 = reshape(%358, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %361 = reshape(%359, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %362 = @func_9467(%360, %361) /* ty=(Tensor[(364), int8], Tensor[(273), float32], Tensor[(156), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %363 = @func_12773() /* ty=(Tensor[(273), float64],) */;
  %364 = @func_8467() /* ty=Tensor[(6, 3, 10), float64] */;
  %365 = %362.1;
  %366 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  %367 = %363.0;
  (%364, %365, %var_15888, %366, %367)
}

def @func_437(%var_433: Tensor[(4, 7, 13), int8]) -> (Tensor[(4, 7, 13), int8],) {
  %368 = cast(%var_433, dtype="int8") /* ty=Tensor[(4, 7, 13), int8] */;
  %369 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(4, 7, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 7, 13), int8] */, dtype="int8") /* ty=Tensor[(4, 7, 13), int8] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %372 = bitwise_and(%370, %371) /* ty=Tensor[(4, 7, 13), int8] */;
  (%372,)
}

def @func_6840() -> (Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) {
  %373 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %374 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %375 = %373.2;
  %376 = %374.0;
  (%375, %376)
}

def @func_8051() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %377 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %378 = %377.0;
  %379 = @func_7477() /* ty=Tensor[(6, 3, 10), float64] */;
  (%378, %379)
}

def @func_1960(%var_1943: Tensor[(13, 12, 1), uint8], %var_1944: Tensor[(13, 12, 1), uint8]) -> (Tensor[(13, 12, ?), uint8],) {
  %380 = cast(%var_1944, dtype="uint8") /* ty=Tensor[(13, 12, 1), uint8] */;
  %381 = shape_of(%var_1943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_1943, dtype="uint8") /* ty=Tensor[(13, 12, 1), uint8] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %384 = multiply(%382, %383) /* ty=Tensor[(13, 12, ?), uint8] */;
  (%384,)
}

def @func_10704(%var_10687: Tensor[(360, 1), uint64], %var_10691: Tensor[(924), uint16], %var_10693: Tensor[(10, 5, 9), float32]) -> (Tensor[(7, 3, 13), bool], Tensor[(360, 1), uint64], Tensor[(2, 168), float64], Tensor[(56), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(10, 5, 9), float32]) {
  %385 = cast(%var_10687, dtype="uint64") /* ty=Tensor[(360, 1), uint64] */;
  %386 = cast(%var_10687, dtype="uint64") /* ty=Tensor[(360, 1), uint64] */;
  %387 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 168), float64] */, dtype="float64") /* ty=Tensor[(2, 168), float64] */;
  %388 = cast(meta[relay.Constant][25] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %389 = cast(meta[relay.Constant][26] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %390 = cast(%var_10691, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %391 = reshape(%385, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %392 = reshape(%386, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %393 = reshape(%387, newshape=[8, 42]) /* ty=Tensor[(8, 42), float64] */;
  %394 = reshape(%388, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %395 = reshape(%389, newshape=[26, 52]) /* ty=Tensor[(26, 52), float32] */;
  %396 = reshape(%390, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %397 = @func_4807(%391, %392, %393, %394, %395, %396) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */;
  %398 = @func_5812() /* ty=Tensor[(10, 5, 9), float32] */;
  %399 = cast(%var_10693, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %403 = %397.1;
  %404 = multiply(%401, %402) /* ty=Tensor[(10, 5, 9), float32] */;
  (%403, %var_10687, meta[relay.Constant][24] /* ty=Tensor[(2, 168), float64] */, meta[relay.Constant][25] /* ty=Tensor[(56), float64] */, meta[relay.Constant][26] /* ty=Tensor[(1352), float32] */, %var_10691, %404)
}

def @func_15036() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(11, 2, 10), float64], Tensor[(364), int8], Tensor[(364), int8]) {
  %405 = @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %406 = cast(meta[relay.Constant][27] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %407 = reshape(%406, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %408 = @func_12291(%407) /* ty=(Tensor[(364), uint8], Tensor[(11, 2, 10), float64], Tensor[(220), float64]) */;
  %409 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %411 = reshape(%410, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %412 = @func_9671(%411) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
  %413 = %405.2;
  %414 = @func_12150() /* ty=Tensor[(6, 3, 10), float64] */;
  %415 = %408.1;
  %416 = %412.0;
  (%409, %413, %414, %415, meta[relay.Constant][27] /* ty=Tensor[(364), int8] */, %416)
}

def @func_8105(%var_8094: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(1, 273), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(56), float64]) {
  %417 = cast(%var_8094, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %418 = cast(meta[relay.Constant][28] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %419 = cast(meta[relay.Constant][29] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %420 = reshape(%417, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), uint16] */;
  %421 = reshape(%418, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %422 = reshape(%419, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %423 = @func_728(%420, %421, %422) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */;
  %424 = @func_4654() /* ty=Tensor[(6, 3, 10), float64] */;
  %425 = %423.2;
  (%424, %425, %var_8094, meta[relay.Constant][28] /* ty=Tensor[(273), float32] */, meta[relay.Constant][29] /* ty=Tensor[(56), float64] */)
}

def @func_14276() -> (Tensor[(6, 3, 10), float64],) {
  %426 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %427 = %426.3;
  (%427,)
}

def @func_7477() -> Tensor[(6, 3, 10), float64] {
  @func_4654() /* ty=Tensor[(6, 3, 10), float64] */
}

def @main(%var_16840: int32, %var_16841: Tensor[(16, 7, 12), int32]) -> Tensor[(16, 7, 12), bool] {
  %428 = cast(%var_16840, dtype="bool") /* ty=bool */;
  %429 = cast(%var_16841, dtype="bool") /* ty=Tensor[(16, 7, 12), bool] */;
  greater(%428, %429) /* ty=Tensor[(16, 7, 12), bool] */
}

def @func_6503(%var_6498: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float64], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
  %430 = cast(%var_6498, dtype="int8") /* ty=Tensor[(364), int8] */;
  %431 = reshape(%430, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
  %432 = @func_437(%431) /* ty=(Tensor[(4, 7, 13), int8],) */;
  %433 = @func_5619() /* ty=Tensor[(6, 3, 10), float64] */;
  %434 = %432.0;
  (%433, %434, %var_6498)
}

def @func_10855(%var_10849: Tensor[(11, 11, 4), float32]) -> (Tensor[(11, 11, 4), float32],) {
  %435 = cast(%var_10849, dtype="float32") /* ty=Tensor[(11, 11, 4), float32] */;
  %436 = exp(%435) /* ty=Tensor[(11, 11, 4), float32] */;
  (%436,)
}

def @func_16620() -> (Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
  %437 = @func_13385() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %438 = @func_8555() /* ty=Tensor[(273), float64] */;
  %439 = %437.0;
  (%438, %439)
}

def @func_8001() -> (Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  %440 = @func_4441() /* ty=Tensor[(364), int8] */;
  %441 = @func_5169() /* ty=Tensor[(6, 3, 10), float64] */;
  (%440, %441)
}

def @func_10729() -> (Tensor[(364), int8],) {
  %442 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %443 = %442.0;
  (%443,)
}

def @func_10369() -> Tensor[(273), float64] {
  @func_8199() /* ty=Tensor[(273), float64] */
}

def @func_4772() -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) {
  %444 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %446 = log2(%445) /* ty=Tensor[(6, 3, 10), float64] */;
  %447 = cast(%446, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %448 = cast(meta[relay.Constant][30] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %449 = reshape(%448, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %450 = log10(%447) /* ty=Tensor[(6, 3, 10), float64] */;
  %451 = @func_3520(%449) /* ty=Tensor[(7, 11, 15), float32] */;
  (%450, %451, meta[relay.Constant][30] /* ty=Tensor[(1155), float32] */)
}

def @func_5907() -> (Tensor[(6, 3, 10), float64],) {
  %452 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %453 = %452.2;
  (%453,)
}

def @func_8382(%var_8334: Tensor[(2, 28), float64], %var_8336: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(2, 28), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64], Tensor[(8, 42), uint16], Tensor[(6, 3, 10), bool], Tensor[(8, 42), float64]) {
  %454 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 42), float64] */, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
  %455 = cast(%var_8334, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %456 = cast(meta[relay.Constant][32] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %457 = cast(%var_8336, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %458 = reshape(%454, newshape=[4, 7, 12]) /* ty=Tensor[(4, 7, 12), float64] */;
  %459 = reshape(%455, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %460 = reshape(%456, newshape=[13, 104]) /* ty=Tensor[(13, 104), float32] */;
  %461 = reshape(%457, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %462 = @func_3035(%458, %459, %460, %461) /* ty=(Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) */;
  %463 = @func_7699() /* ty=(Tensor[(6, 3, 10), float32], Tensor[(1155), float32]) */;
  %464 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 42), float64] */, dtype="float32") /* ty=Tensor[(8, 42), float32] */;
  %465 = log2(%464) /* ty=Tensor[(8, 42), float32] */;
  %466 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 42), float32] */, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
  %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(2), int32] */;
  %468 = cast(%465, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %470 = not_equal(%468, %469) /* ty=Tensor[(8, 42), bool] */;
  %471 = cast(%465, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(2), int32] */;
  %473 = cast(%470, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %475 = logical_and(%473, %474) /* ty=Tensor[(8, 42), bool] */;
  %476 = cast(%465, dtype="uint16") /* ty=Tensor[(8, 42), uint16] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(2), int32] */;
  %478 = cast(%475, dtype="uint16") /* ty=Tensor[(8, 42), uint16] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %480 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %481 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 42), bool] */, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
  %482 = shape_of(%475, dtype="int32") /* ty=Tensor[(2), int32] */;
  %483 = cast(%475, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %485 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  %486 = %462.0;
  %487 = %463.0;
  %488 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
  %489 = bitwise_or(%478, %479) /* ty=Tensor[(8, 42), uint16] */;
  %490 = %480.2;
  %491 = multiply(%483, %484) /* ty=Tensor[(8, 42), float64] */;
  (%485, %486, %var_8334, meta[relay.Constant][32] /* ty=Tensor[(1352), float32] */, %var_8336, %487, %488, %489, %490, %491)
}

def @func_5931(%var_5928: Tensor[(1, 156), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 156), uint8]) {
  %492 = cast(meta[relay.Constant][35] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %493 = cast(meta[relay.Constant][36] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %494 = cast(%var_5928, dtype="uint8") /* ty=Tensor[(1, 156), uint8] */;
  %495 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %497 = reshape(%492, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %498 = reshape(%493, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %499 = reshape(%494, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %500 = reshape(%496, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %501 = @func_5275(%497, %498, %499, %500) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %502 = %501.6;
  (%495, %502, meta[relay.Constant][35] /* ty=Tensor[(924), uint16] */, meta[relay.Constant][36] /* ty=Tensor[(273), float32] */, %var_5928)
}

def @func_8950() -> Tensor[(6, 3, 10), float64] {
  @func_4654() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_6203() -> (Tensor[(6, 3, 10), float64],) {
  %503 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  (%503,)
}

def @func_4339(%var_4324: Tensor[(924), uint16], %var_4325: Tensor[(1, 273), float32]) -> (Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) {
  %504 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %505 = cast(%var_4324, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %506 = cast(%var_4325, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
  %507 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %508 = reshape(%505, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), uint16] */;
  %509 = reshape(%506, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %510 = reshape(%507, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %511 = @func_728(%508, %509, %510) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */;
  %512 = %511.2;
  %513 = cast(%512, dtype="float64") /* ty=Tensor[(1, 273), float64] */;
  %514 = shape_of(%var_4325, dtype="int32") /* ty=Tensor[(2), int32] */;
  %515 = cast(%var_4325, dtype="float64") /* ty=Tensor[(1, 273), float64] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %517 = %504.0;
  %518 = power(%515, %516) /* ty=Tensor[(?, 273), float64] */;
  (%517, %var_4324, meta[relay.Constant][37] /* ty=Tensor[(2, 28), float64] */, %518)
}

def @func_153(%var_116: Tensor[(7, 3, 13), float32], %var_131: Tensor[(56), float64]) -> (Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) {
  %519 = cast(0.851169f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %520 = cast(%var_116, dtype="bool") /* ty=Tensor[(7, 3, 13), bool] */;
  %521 = cast(%var_131, dtype="float64") /* ty=Tensor[(56), float64] */;
  %522 = reshape(%521, newshape=[7, 1, 8]) /* ty=Tensor[(7, 1, 8), float64] */;
  %523 = greater_equal(%519, %520) /* ty=Tensor[(7, 3, 13), bool] */;
  %524 = @func_13(%522) /* ty=Tensor[(7, 1, 8), float64] */;
  (%523, %524, %var_131)
}

def @func_8199() -> Tensor[(273), float64] {
  %525 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
  %525.0
}

def @func_2433(%var_2364: Tensor[(8, 6, 1), float64]) -> (Tensor[(8, 6, ?), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8]) {
  %526 = cast(%var_2364, dtype="float64") /* ty=Tensor[(8, 6, 1), float64] */;
  %527 = cos(%526) /* ty=Tensor[(8, 6, 1), float64] */;
  %528 = cast(%var_2364, dtype="bool") /* ty=Tensor[(8, 6, 1), bool] */;
  %529 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%527, dtype="bool") /* ty=Tensor[(8, 6, 1), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %532 = cast(meta[relay.Constant][38] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %533 = reshape(%532, newshape=[7, 1, 8]) /* ty=Tensor[(7, 1, 8), float64] */;
  %534 = cast(meta[relay.Constant][39] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %535 = cast(meta[relay.Constant][39] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %536 = reshape(%534, newshape=[13, 12, 1]) /* ty=Tensor[(13, 12, 1), uint8] */;
  %537 = reshape(%535, newshape=[13, 12, 1]) /* ty=Tensor[(13, 12, 1), uint8] */;
  %538 = @func_1960(%536, %537) /* ty=(Tensor[(13, 12, ?), uint8],) */;
  %539 = less(%530, %531) /* ty=Tensor[(8, 6, ?), bool] */;
  %540 = @func_13(%533) /* ty=Tensor[(7, 1, 8), float64] */;
  %541 = %538.0;
  (%539, %540, meta[relay.Constant][38] /* ty=Tensor[(56), float64] */, %541, meta[relay.Constant][39] /* ty=Tensor[(156), uint8] */)
}

def @func_11047() -> (Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(924), uint16]) {
  %542 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
  %543 = cast(meta[relay.Constant][40] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %544 = reshape(%543, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %545 = @func_8105(%544) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(1, 273), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */;
  %546 = %542.1;
  %547 = %545.2;
  (%546, %547, meta[relay.Constant][40] /* ty=Tensor[(924), uint16] */)
}

def @func_11562() -> Tensor[(6, 3, 10), float64] {
  %548 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %548.0
}

def @func_9340(%var_9308: Tensor[(12, 15, 16), uint64]) -> (Tensor[(12, 15, 16), uint64], Tensor[(6, 3, 10), float64]) {
  %549 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 15, 16), uint64] */, dtype="uint64") /* ty=Tensor[(12, 15, 16), uint64] */;
  %550 = shape_of(%var_9308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%var_9308, dtype="uint64") /* ty=Tensor[(12, 15, 16), uint64] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %553 = left_shift(%551, %552) /* ty=Tensor[(12, 15, 16), uint64] */;
  %554 = @func_5169() /* ty=Tensor[(6, 3, 10), float64] */;
  (%553, %554)
}

def @func_12291(%var_12260: Tensor[(364), int8]) -> (Tensor[(364), uint8], Tensor[(11, 2, 10), float64], Tensor[(220), float64]) {
  %555 = @func_11955() /* ty=Tensor[(364), int8] */;
  %556 = cast(%var_12260, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %557 = shape_of(%555, dtype="int32") /* ty=Tensor[(1), int32] */;
  %558 = cast(%555, dtype="uint8") /* ty=Tensor[(364), uint8] */;
  %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %560 = cast(meta[relay.Constant][42] /* ty=Tensor[(220), float64] */, dtype="float64") /* ty=Tensor[(220), float64] */;
  %561 = reshape(%560, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float64] */;
  %562 = left_shift(%558, %559) /* ty=Tensor[(364), uint8] */;
  %563 = @func_10965(%561) /* ty=Tensor[(11, 2, 10), float64] */;
  (%562, %563, meta[relay.Constant][42] /* ty=Tensor[(220), float64] */)
}

def @func_5941() -> (Tensor[(6, 3, 10), float64],) {
  %564 = @func_5619() /* ty=Tensor[(6, 3, 10), float64] */;
  (%564,)
}

def @func_10990() -> Tensor[(6, 3, 10), bool] {
  %565 = @func_9001() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %565.0
}

def @func_11004(%var_10994: Tensor[(9, 1, 5), float64]) -> (Tensor[(9, 1, 5), float64],) {
  %566 = cast(%var_10994, dtype="float64") /* ty=Tensor[(9, 1, 5), float64] */;
  %567 = log10(%566) /* ty=Tensor[(9, 1, 5), float64] */;
  (%567,)
}

def @func_8140(%var_8126: Tensor[(8, 7, 11), uint8]) -> (Tensor[(8, 7, 11), uint8],) {
  %568 = cast(%var_8126, dtype="uint8") /* ty=Tensor[(8, 7, 11), uint8] */;
  %569 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(8, 7, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 7, 11), uint8] */, dtype="uint8") /* ty=Tensor[(8, 7, 11), uint8] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %572 = bitwise_and(%570, %571) /* ty=Tensor[(8, 7, 11), uint8] */;
  (%572,)
}

def @func_11541() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %573 = @func_7300() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %574 = @func_11341() /* ty=(Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64]) */;
  %575 = %573.0;
  %576 = @func_11294() /* ty=Tensor[(6, 3, 10), float64] */;
  %577 = %574.1;
  %578 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  (%575, %576, %577, %578)
}

def @func_13593() -> (Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
  %579 = @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %580 = @func_12773() /* ty=(Tensor[(273), float64],) */;
  %581 = %579.3;
  %582 = %580.0;
  (%581, %582)
}

def @func_14520() -> (Tensor[(6, 3, 10), float64],) {
  %583 = @func_12872() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %584 = %583.0;
  (%584,)
}

def @func_10965(%var_10955: Tensor[(11, 2, 10), float64]) -> Tensor[(11, 2, 10), float64] {
  %585 = cast(%var_10955, dtype="float64") /* ty=Tensor[(11, 2, 10), float64] */;
  sigmoid(%585) /* ty=Tensor[(11, 2, 10), float64] */
}

def @func_15260() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %586 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %587 = %586.3;
  %588 = @func_4654() /* ty=Tensor[(6, 3, 10), float64] */;
  (%587, %588)
}

def @func_15732() -> (Tensor[(6, 3, 10), float64],) {
  %589 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
  (%589,)
}

def @func_4550() -> Tensor[(6, 3, 10), float64] {
  %590 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %590.2
}

def @func_8255() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %591 = @func_6451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %592 = %591.0;
  %593 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
  (%592, %593)
}

def @func_8555() -> Tensor[(273), float64] {
  @func_8199() /* ty=Tensor[(273), float64] */
}

def @func_11294() -> Tensor[(6, 3, 10), float64] {
  %594 = @func_10150() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %594.0
}

def @func_14015() -> Tensor[(6, 3, 10), float32] {
  @func_10042() /* ty=Tensor[(6, 3, 10), float32] */
}

def @func_7944() -> (Tensor[(6, 3, 10), float64],) {
  %595 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %596 = %595.2;
  (%596,)
}

def @func_6971(%var_6946: Tensor[(8, 3, 4), int64], %var_6947: Tensor[(8, 3, 4), int64]) -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(8, 3, 4), float32]) {
  %597 = cast(meta[relay.Constant][44] /* ty=Tensor[(385, 3), float32] */, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
  %598 = reshape(%597, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %599 = cast(%var_6947, dtype="int64") /* ty=Tensor[(8, 3, 4), int64] */;
  %600 = shape_of(%var_6946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%var_6946, dtype="int64") /* ty=Tensor[(8, 3, 4), int64] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %603 = minimum(%601, %602) /* ty=Tensor[(8, 3, 4), int64] */;
  %604 = cast(%var_6946, dtype="float32") /* ty=Tensor[(8, 3, 4), float32] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="float32") /* ty=Tensor[(8, 3, 4), float32] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %608 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
  %609 = @func_3520(%598) /* ty=Tensor[(7, 11, 15), float32] */;
  %610 = maximum(%606, %607) /* ty=Tensor[(8, 3, 4), float32] */;
  (%608, %609, meta[relay.Constant][44] /* ty=Tensor[(385, 3), float32] */, %610)
}

def @func_6072() -> (Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) {
  %611 = @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */;
  %612 = %611.2;
  %613 = cast(%612, dtype="float64") /* ty=Tensor[(273), float64] */;
  %614 = cast(meta[relay.Constant][45] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %615 = reshape(%614, newshape=[1, 156]) /* ty=Tensor[(1, 156), uint8] */;
  %616 = @func_5931(%615) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 156), uint8]) */;
  %617 = %616.0;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %619 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %620 = log2(%613) /* ty=Tensor[(273), float64] */;
  %621 = atan(%618) /* ty=Tensor[(6, 3, 10), float64] */;
  %622 = %619.2;
  (%620, meta[relay.Constant][45] /* ty=Tensor[(156), uint8] */, %621, %622)
}

def @func_8174(%var_8167: Tensor[(8, 7, 2), float64]) -> (Tensor[(8, 7, 2), float64],) {
  %623 = cast(%var_8167, dtype="float64") /* ty=Tensor[(8, 7, 2), float64] */;
  %624 = sigmoid(%623) /* ty=Tensor[(8, 7, 2), float64] */;
  (%624,)
}

def @func_10306() -> (Tensor[(6, 3, 10), bool], Tensor[(2, 28), float64], Tensor[(56), float64], Tensor[(924), uint16], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %625 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %626 = cast(meta[relay.Constant][46] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %627 = cast(meta[relay.Constant][47] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %628 = reshape(%626, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %629 = reshape(%627, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %630 = @func_8382(%628, %629) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(2, 28), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64], Tensor[(8, 42), uint16], Tensor[(6, 3, 10), bool], Tensor[(8, 42), float64]) */;
  %631 = @func_9743() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %632 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %633 = %625.3;
  %634 = %630.2;
  %635 = %631.1;
  %636 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
  %637 = %632.0;
  (%633, %634, meta[relay.Constant][46] /* ty=Tensor[(56), float64] */, meta[relay.Constant][47] /* ty=Tensor[(924), uint16] */, %635, %636, %637)
}

def @func_11341() -> (Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64]) {
  %638 = @func_10042() /* ty=Tensor[(6, 3, 10), float32] */;
  %639 = @func_11294() /* ty=Tensor[(6, 3, 10), float64] */;
  (%638, %639)
}

def @func_11955() -> Tensor[(364), int8] {
  %640 = @func_10729() /* ty=(Tensor[(364), int8],) */;
  %640.0
}

def @func_5380(%var_5322: Tensor[(1155), float32]) -> (Tensor[(364), int8], Tensor[(6, 3, 10), float32], Tensor[(56), float64], float32, Tensor[(56), float64], Tensor[(4, 7, 13), int8], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
  %641 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %642 = @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */;
  %643 = cast(-9.99037f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %644 = cast(meta[relay.Constant][48] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %645 = reshape(%643, newshape=[]) /* ty=float32 */;
  %646 = reshape(%644, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %647 = @func_5090(%645, %646) /* ty=(Tensor[(364), int8], Tensor[(1, 1352), float32], float32, Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(56), float64]) */;
  %648 = %641.0;
  %649 = cast(%648, dtype="int8") /* ty=Tensor[(364), int8] */;
  %650 = reshape(%649, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
  %651 = @func_437(%650) /* ty=(Tensor[(4, 7, 13), int8],) */;
  %652 = cast(%var_5322, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %653 = reshape(%652, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %654 = cast(%648, dtype="int8") /* ty=Tensor[(364), int8] */;
  %655 = reshape(%654, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
  %656 = @func_437(%655) /* ty=(Tensor[(4, 7, 13), int8],) */;
  %657 = %642.3;
  %658 = %647.5;
  %659 = %651.0;
  %660 = @func_3520(%653) /* ty=Tensor[(7, 11, 15), float32] */;
  %661 = %656.0;
  %662 = @func_4441() /* ty=Tensor[(364), int8] */;
  (%648, %657, %658, -9.99037f /* ty=float32 */, meta[relay.Constant][48] /* ty=Tensor[(56), float64] */, %659, %660, %var_5322, %661, %662)
}

def @func_11969() -> Tensor[(6, 3, 10), float64] {
  %663 = @func_6770() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %663.0
}

def @func_16331(%var_16319: Tensor[(10, 2, 11), float32]) -> (Tensor[(10, 2, 11), float32], Tensor[(6, 3, 10), float64], Tensor[(1, 126), bool]) {
  %664 = cast(%var_16319, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
  %665 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 126), bool] */, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %666 = reshape(%665, newshape=[126]) /* ty=Tensor[(126), bool] */;
  %667 = @func_11380(%666) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) */;
  %668 = sigmoid(%664) /* ty=Tensor[(10, 2, 11), float32] */;
  %669 = %667.2;
  (%668, %669, meta[relay.Constant][49] /* ty=Tensor[(1, 126), bool] */)
}

def @func_6174() -> (Tensor[(6, 3, 10), bool],) {
  %670 = @func_5451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %671 = %670.1;
  %672 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 3, 10), float64] */, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
  %673 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%671, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %676 = not_equal(%674, %675) /* ty=Tensor[(6, 3, 10), bool] */;
  (%676,)
}

def @func_11380(%var_11371: Tensor[(126), bool]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) {
  %677 = @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %678 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %679 = cast(%var_11371, dtype="bool") /* ty=Tensor[(126), bool] */;
  %680 = reshape(%678, newshape=[]) /* ty=bool */;
  %681 = reshape(%679, newshape=[14, 1, 9]) /* ty=Tensor[(14, 1, 9), bool] */;
  %682 = %677.0;
  %683 = @func_8587() /* ty=Tensor[(6, 3, 10), bool] */;
  %684 = @func_7477() /* ty=Tensor[(6, 3, 10), float64] */;
  %685 = @func_9570(%680, %681) /* ty=Tensor[(14, 1, 9), bool] */;
  (%682, %683, %684, %685, False /* ty=bool */, %var_11371)
}

def @func_5527(%var_5522: Tensor[(6, 3, 10), float64]) -> (Tensor[(6, 3, 10), bool],) {
  %686 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %687 = %686.0;
  %688 = cast(%var_5522, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = greater(%690, %691) /* ty=Tensor[(6, 3, 10), bool] */;
  (%692,)
}

def @func_11749() -> (Tensor[(6, 3, 10), float32],) {
  %693 = @func_11562() /* ty=Tensor[(6, 3, 10), float64] */;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
  %695 = exp(%694) /* ty=Tensor[(6, 3, 10), float32] */;
  (%695,)
}

def @func_13012() -> (Tensor[(6, 3, 10), float32],) {
  %696 = @func_5893() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) */;
  %697 = %696.1;
  (%697,)
}

def @func_14400() -> (Tensor[(6, 3, 10), float64],) {
  %698 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
  (%698,)
}

def @func_12124(%var_12075: Tensor[(1155), float32], %var_12095: Tensor[(273), float32], %var_12096: Tensor[(56), float64]) -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(28, 4), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(364), float64], Tensor[(385, 3), int32], Tensor[(1155), float32], Tensor[(6, 3, 10), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(7, 11, 15), float32], Tensor[(6, 3, 10), float64]) {
  %699 = @func_6770() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %700 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %701 = cast(meta[relay.Constant][51] /* ty=Tensor[(28, 4), float64] */, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %702 = reshape(%701, newshape=[8, 7, 2]) /* ty=Tensor[(8, 7, 2), float64] */;
  %703 = @func_8174(%702) /* ty=(Tensor[(8, 7, 2), float64],) */;
  %704 = @func_8255() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %705 = @func_4441() /* ty=Tensor[(364), int8] */;
  %706 = cast(%705, dtype="float64") /* ty=Tensor[(364), float64] */;
  %707 = cast(%var_12075, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %708 = reshape(%707, newshape=[385, 3]) /* ty=Tensor[(385, 3), float32] */;
  %709 = @func_7593(%708) /* ty=(Tensor[(385, 3), int32],) */;
  %710 = @func_8971() /* ty=Tensor[(6, 3, 10), float64] */;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %712 = cast(%var_12095, dtype="float32") /* ty=Tensor[(273), float32] */;
  %713 = cast(%var_12096, dtype="float64") /* ty=Tensor[(56), float64] */;
  %714 = reshape(%712, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float32] */;
  %715 = reshape(%713, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %716 = @func_153(%714, %715) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) */;
  %717 = %709.0;
  %718 = cast(%717, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
  %719 = reshape(%718, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %720 = @func_10990() /* ty=Tensor[(6, 3, 10), bool] */;
  %721 = %699.1;
  %722 = %700.1;
  %723 = %703.0;
  %724 = @func_8641() /* ty=Tensor[(6, 3, 10), float64] */;
  %725 = %704.0;
  %726 = log2(%706) /* ty=Tensor[(364), float64] */;
  %727 = asinh(%711) /* ty=Tensor[(6, 3, 10), float64] */;
  %728 = %716.0;
  %729 = @func_3520(%719) /* ty=Tensor[(7, 11, 15), float32] */;
  %730 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
  (%720, %721, %722, %723, meta[relay.Constant][51] /* ty=Tensor[(28, 4), float64] */, %724, %725, %726, %717, %var_12075, %727, %728, %var_12095, %var_12096, %729, %730)
}

def @func_4441() -> Tensor[(364), int8] {
  @func_4384() /* ty=Tensor[(364), int8] */
}

def @func_10251() -> Tensor[(10, 5, 9), float32] {
  @func_5812() /* ty=Tensor[(10, 5, 9), float32] */
}

def @func_6653() -> Tensor[(6, 3, 10), float64] {
  @func_5569() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_9824(%var_9822: Tensor[(48, 1), float64]) -> (Tensor[(180), float64], Tensor[(156), uint8], Tensor[(48, 1), float64]) {
  %731 = @func_9699() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %732 = cast(%var_9822, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %733 = reshape(%732, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float64] */;
  %734 = @func_2433(%733) /* ty=(Tensor[(8, 6, ?), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8]) */;
  %735 = %731.1;
  %736 = %734.4;
  (%735, %736, %var_9822)
}

def @func_16432() -> (Tensor[(6, 3, 10), bool], Tensor[(2640), uint8], Tensor[(12, 220), uint8]) {
  %737 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %738 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 220), uint8] */, dtype="uint8") /* ty=Tensor[(12, 220), uint8] */;
  %739 = reshape(%738, newshape=[2640]) /* ty=Tensor[(2640), uint8] */;
  %740 = @func_7326(%739) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8]) */;
  %741 = %737.2;
  %742 = %740.2;
  (%741, %742, meta[relay.Constant][52] /* ty=Tensor[(12, 220), uint8] */)
}

def @func_16513() -> Tensor[(6, 3, 10), float64] {
  %743 = @func_16171() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(273), float32]) */;
  %743.1
}

def @func_5778(%var_5750: Tensor[(924), uint16], %var_5752: Tensor[(78, 2), uint8]) -> (Tensor[(364), int8], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(78, 2), uint8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64]) {
  %744 = cast(%var_5750, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %745 = cast(meta[relay.Constant][53] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %746 = cast(%var_5752, dtype="uint8") /* ty=Tensor[(78, 2), uint8] */;
  %747 = cast(meta[relay.Constant][54] /* ty=Tensor[(180, 1), float64] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
  %748 = reshape(%744, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %749 = reshape(%745, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %750 = reshape(%746, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %751 = reshape(%747, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %752 = @func_5275(%748, %749, %750, %751) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %753 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %754 = @func_4441() /* ty=Tensor[(364), int8] */;
  %755 = %752.0;
  %756 = %753.0;
  (%754, %755, %var_5750, meta[relay.Constant][53] /* ty=Tensor[(273), float32] */, %var_5752, meta[relay.Constant][54] /* ty=Tensor[(180, 1), float64] */, %756)
}

def @func_5619() -> Tensor[(6, 3, 10), float64] {
  %757 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %757.0
}

def @func_8452(%var_8418: Tensor[(6, 3, 10), float64]) -> Tensor[(6, 3, 10), uint64] {
  %758 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %759 = %758.0;
  %760 = cast(%var_8418, dtype="uint64") /* ty=Tensor[(6, 3, 10), uint64] */;
  %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%759, dtype="uint64") /* ty=Tensor[(6, 3, 10), uint64] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%762, %763) /* ty=Tensor[(6, 3, 10), uint64] */
}

def @func_14598(%var_14557: Tensor[(2640), uint8], %var_14588: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint16]) {
  %764 = @func_14520() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %765 = @func_12965() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %766 = cast(%var_14557, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %767 = reshape(%766, newshape=[4, 660]) /* ty=Tensor[(4, 660), uint8] */;
  %768 = @func_10075(%767) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(4, 660), float32]) */;
  %769 = cast(%var_14588, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %770 = shape_of(%var_14557, dtype="int32") /* ty=Tensor[(1), int32] */;
  %771 = cast(%var_14557, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %773 = %764.0;
  %774 = %765.0;
  %775 = %768.0;
  %776 = left_shift(%771, %772) /* ty=Tensor[(2640), uint16] */;
  (%773, %774, %775, %776)
}

def @func_7699() -> (Tensor[(6, 3, 10), float32], Tensor[(1155), float32]) {
  %777 = @func_5169() /* ty=Tensor[(6, 3, 10), float64] */;
  %778 = cast(%777, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
  %779 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
  %780 = sigmoid(%778) /* ty=Tensor[(6, 3, 10), float32] */;
  %781 = %779.0;
  (%780, %781)
}

def @func_11888() -> (Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1, 924), uint16], Tensor[(156), uint8]) {
  %782 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %783 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %784 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 924), uint16] */, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %785 = cast(meta[relay.Constant][56] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %786 = reshape(%784, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %787 = reshape(%785, newshape=[78, 2]) /* ty=Tensor[(78, 2), uint8] */;
  %788 = @func_5778(%786, %787) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(78, 2), uint8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64]) */;
  %789 = %782.0;
  %790 = %783.0;
  %791 = %788.0;
  (%789, %790, %791, meta[relay.Constant][55] /* ty=Tensor[(1, 924), uint16] */, meta[relay.Constant][56] /* ty=Tensor[(156), uint8] */)
}

def @func_5494() -> Tensor[(6, 3, 10), float64] {
  %792 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %792.0
}

def @func_7300() -> (Tensor[(6, 3, 10), float64],) {
  %793 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
  (%793,)
}

def @func_12150() -> Tensor[(6, 3, 10), float64] {
  @func_4557() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_11626() -> (Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(364), int8], Tensor[(168), float32], Tensor[(364), int8]) {
  %794 = cast(meta[relay.Constant][57] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %795 = reshape(%794, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %796 = @func_9070(%795) /* ty=(Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %797 = @func_8793() /* ty=(Tensor[(10, 5, 9), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32]) */;
  %798 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %800 = reshape(%799, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %801 = @func_9671(%800) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
  %802 = %796.1;
  %803 = %797.2;
  %804 = %801.0;
  (%798, %802, meta[relay.Constant][57] /* ty=Tensor[(364), int8] */, %803, %804)
}

def @func_14366() -> Tensor[(364), int8] {
  %805 = @func_11626() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(364), int8], Tensor[(168), float32], Tensor[(364), int8]) */;
  %805.4
}

def @func_8467() -> Tensor[(6, 3, 10), float64] {
  @func_4557() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_13859() -> (Tensor[(6, 3, 10), float64],) {
  %806 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %807 = %806.0;
  (%807,)
}

def @func_13071() -> (Tensor[(364), int8],) {
  %808 = @func_11888() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1, 924), uint16], Tensor[(156), uint8]) */;
  %809 = %808.1;
  (%809,)
}

def @func_5124(%var_5113: Tensor[(16, 11, 15), uint8], %var_5114: Tensor[(16, 11, 15), uint8]) -> (Tensor[(16, 11, 15), uint8], Tensor[(6, 3, 10), float64]) {
  %810 = cast(%var_5114, dtype="uint8") /* ty=Tensor[(16, 11, 15), uint8] */;
  %811 = shape_of(%var_5113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(%var_5113, dtype="uint8") /* ty=Tensor[(16, 11, 15), uint8] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %814 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %815 = multiply(%812, %813) /* ty=Tensor[(16, 11, 15), uint8] */;
  %816 = %814.0;
  (%815, %816)
}

def @func_14689(%var_14663: Tensor[(84), float64], %var_14664: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(364), int8], Tensor[(84), float64], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  %817 = @func_11749() /* ty=(Tensor[(6, 3, 10), float32],) */;
  %818 = cast(meta[relay.Constant][58] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %819 = reshape(%818, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %820 = cast(%var_14663, dtype="float64") /* ty=Tensor[(84), float64] */;
  %821 = cast(%var_14664, dtype="int8") /* ty=Tensor[(364), int8] */;
  %822 = reshape(%820, newshape=[6, 1, 14]) /* ty=Tensor[(6, 1, 14), float64] */;
  %823 = reshape(%821, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %824 = @func_14045(%822, %823) /* ty=(Tensor[(6, 1, 14), float64], Tensor[(364), int8], Tensor[(364), int8]) */;
  %825 = @func_13593() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(273), float64]) */;
  %826 = %817.0;
  %827 = @func_3520(%819) /* ty=Tensor[(7, 11, 15), float32] */;
  %828 = %824.1;
  %829 = %825.0;
  (%826, %827, meta[relay.Constant][58] /* ty=Tensor[(1155), float32] */, %828, %var_14663, %var_14664, %829)
}

def @func_6464() -> Tensor[(6, 3, 10), float64] {
  @func_5141() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_16583() -> Tensor[(6, 3, 10), float64] {
  %830 = @func_14276() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %830.0
}

def @func_11462() -> Tensor[(7, 11, 15), float32] {
  %831 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %831.1
}

def @func_11854() -> (Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
  %832 = @func_10494() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %833 = @func_6897() /* ty=(Tensor[(273), float64],) */;
  %834 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %835 = %832.1;
  %836 = @func_5650() /* ty=Tensor[(364), int8] */;
  %837 = %833.0;
  %838 = %834.1;
  (%835, %836, %837, %838)
}

def @func_9110() -> (Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(112), float64]) {
  %839 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %840 = cast(meta[relay.Constant][59] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %841 = reshape(%840, newshape=[8, 7, 2]) /* ty=Tensor[(8, 7, 2), float64] */;
  %842 = @func_8174(%841) /* ty=(Tensor[(8, 7, 2), float64],) */;
  %843 = %839.0;
  %844 = %842.0;
  (%843, %844, meta[relay.Constant][59] /* ty=Tensor[(112), float64] */)
}

def @func_10434(%var_10407: float64, %var_10408: Tensor[(7, 1, 5), float64], %var_10418: Tensor[(7, 3, 5), float64]) -> (Tensor[(7, 1, 5), float64], Tensor[(6, 3, 10), bool], Tensor[(7, 3, 5), int64]) {
  %845 = cast(%var_10407, dtype="float64") /* ty=float64 */;
  %846 = cast(%var_10408, dtype="float64") /* ty=Tensor[(7, 1, 5), float64] */;
  %847 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %848 = cast(%var_10408, dtype="int64") /* ty=Tensor[(7, 1, 5), int64] */;
  %849 = cast(%var_10418, dtype="int64") /* ty=Tensor[(7, 3, 5), int64] */;
  %850 = floor_mod(%845, %846) /* ty=Tensor[(7, 1, 5), float64] */;
  %851 = %847.0;
  %852 = multiply(%848, %849) /* ty=Tensor[(7, 3, 5), int64] */;
  (%850, %851, %852)
}

def @func_8971() -> Tensor[(6, 3, 10), float64] {
  %853 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %853.1
}

def @func_8641() -> Tensor[(6, 3, 10), float64] {
  @func_5494() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_9001() -> (Tensor[(6, 3, 10), bool],) {
  %854 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %855 = %854.3;
  (%855,)
}

def @func_10531(%var_10523: Tensor[(14, 8, 11), float64]) -> (Tensor[(14, 8, 11), float64], Tensor[(14, 8, 11), float32]) {
  %856 = cast(%var_10523, dtype="float64") /* ty=Tensor[(14, 8, 11), float64] */;
  %857 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(14, 8, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(meta[relay.Constant][60] /* ty=Tensor[(14, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 11), float64] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %860 = cast(meta[relay.Constant][60] /* ty=Tensor[(14, 8, 11), float64] */, dtype="float32") /* ty=Tensor[(14, 8, 11), float32] */;
  %861 = floor_mod(%858, %859) /* ty=Tensor[(14, 8, 11), float64] */;
  %862 = atan(%860) /* ty=Tensor[(14, 8, 11), float32] */;
  (%861, %862)
}

def @func_14765() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint8]) {
  %863 = @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %864 = cast(meta[relay.Constant][61] /* ty=Tensor[(2640), uint8] */, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %865 = cast(meta[relay.Constant][61] /* ty=Tensor[(2640), uint8] */, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %866 = reshape(%864, newshape=[2640]) /* ty=Tensor[(2640), uint8] */;
  %867 = reshape(%865, newshape=[2640]) /* ty=Tensor[(2640), uint8] */;
  %868 = @func_14598(%866, %867) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint16]) */;
  %869 = %863.0;
  %870 = %868.0;
  (%869, %870, meta[relay.Constant][61] /* ty=Tensor[(2640), uint8] */)
}

def @func_6644() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %871 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %872 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %873 = %871.0;
  (%872, %873)
}

def @func_13(%var_0: Tensor[(7, 1, 8), float64]) -> Tensor[(7, 1, 8), float64] {
  %874 = cast(%var_0, dtype="float64") /* ty=Tensor[(7, 1, 8), float64] */;
  sigmoid(%874) /* ty=Tensor[(7, 1, 8), float64] */
}

def @func_12773() -> (Tensor[(273), float64],) {
  %875 = @func_8199() /* ty=Tensor[(273), float64] */;
  (%875,)
}

def @func_6822() -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  %876 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %877 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %878 = %876.0;
  %879 = cast(%878, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %880 = reshape(%879, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %881 = @func_5527(%880) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %882 = %877.0;
  %883 = %881.0;
  (%878, %882, %883)
}

def @func_12965() -> (Tensor[(6, 3, 10), float64],) {
  %884 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %885 = %884.0;
  (%885,)
}

def @func_13528() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(7, 11, 15), float64]) {
  %886 = @func_12872() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %887 = @func_5893() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) */;
  %888 = @func_13051() /* ty=Tensor[(7, 11, 15), float64] */;
  %889 = cast(%888, dtype="float64") /* ty=Tensor[(7, 11, 15), float64] */;
  %890 = %886.0;
  %891 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
  %892 = %887.1;
  %893 = acos(%889) /* ty=Tensor[(7, 11, 15), float64] */;
  (%890, %891, %892, %893)
}

def @func_9743() -> (Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  %894 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %895 = @func_5650() /* ty=Tensor[(364), int8] */;
  %896 = %894.1;
  (%895, %896)
}

def @func_13385() -> (Tensor[(6, 3, 10), float64],) {
  %897 = @func_5569() /* ty=Tensor[(6, 3, 10), float64] */;
  (%897,)
}

def @func_16812(%var_16772: Tensor[(9, 9, 16), int64]) -> (Tensor[(9, 9, 16), bool], Tensor[(11, 11, 4), float32], Tensor[(484), float32], Tensor[(364), int8], Tensor[(11, 11, 4), float32]) {
  %898 = cast(meta[relay.Constant][62] /* ty=Tensor[(9, 9, 16), int64] */, dtype="bool") /* ty=Tensor[(9, 9, 16), bool] */;
  %899 = shape_of(%var_16772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%var_16772, dtype="bool") /* ty=Tensor[(9, 9, 16), bool] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %902 = cast(meta[relay.Constant][63] /* ty=Tensor[(484), float32] */, dtype="float32") /* ty=Tensor[(484), float32] */;
  %903 = reshape(%902, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), float32] */;
  %904 = @func_10855(%903) /* ty=(Tensor[(11, 11, 4), float32],) */;
  %905 = %904.0;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(11, 11, 4), float32] */;
  %907 = reshape(%906, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), float32] */;
  %908 = @func_10855(%907) /* ty=(Tensor[(11, 11, 4), float32],) */;
  %909 = less(%900, %901) /* ty=Tensor[(9, 9, 16), bool] */;
  %910 = @func_11955() /* ty=Tensor[(364), int8] */;
  %911 = %908.0;
  (%909, %905, meta[relay.Constant][63] /* ty=Tensor[(484), float32] */, %910, %911)
}

def @func_16370() -> (Tensor[(6, 3, 10), float64],) {
  %912 = @func_7944() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %913 = %912.0;
  (%913,)
}

def @func_5169() -> Tensor[(6, 3, 10), float64] {
  %914 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %914.0
}

def @func_5650() -> Tensor[(364), int8] {
  @func_4441() /* ty=Tensor[(364), int8] */
}

def @func_6451() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  %915 = @func_5893() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) */;
  %916 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
  %917 = cast(%916, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %918 = reshape(%917, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %919 = @func_5527(%918) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %920 = %915.0;
  %921 = %919.0;
  (%920, %916, %921)
}

def @func_1482(%var_1439: Tensor[(13, 8, 13), float32], %var_1471: Tensor[(1, 924), uint16], %var_1473: Tensor[(56), float64]) -> (Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) {
  %922 = cast(%var_1439, dtype="float32") /* ty=Tensor[(13, 8, 13), float32] */;
  %923 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(13, 8, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(meta[relay.Constant][64] /* ty=Tensor[(13, 8, 13), float32] */, dtype="float32") /* ty=Tensor[(13, 8, 13), float32] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %926 = cast(%var_1471, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %927 = cast(meta[relay.Constant][65] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %928 = cast(%var_1473, dtype="float64") /* ty=Tensor[(56), float64] */;
  %929 = reshape(%926, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), uint16] */;
  %930 = reshape(%927, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %931 = reshape(%928, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %932 = @func_728(%929, %930, %931) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */;
  %933 = power(%924, %925) /* ty=Tensor[(13, 8, 13), float32] */;
  %934 = %932.3;
  (%933, %934, %var_1471, meta[relay.Constant][65] /* ty=Tensor[(273), float32] */, %var_1473)
}

def @func_8729() -> (Tensor[(364), int8], Tensor[(8, 7, 11), uint8], Tensor[(616), uint8]) {
  %935 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %936 = cast(meta[relay.Constant][66] /* ty=Tensor[(616), uint8] */, dtype="uint8") /* ty=Tensor[(616), uint8] */;
  %937 = reshape(%936, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), uint8] */;
  %938 = @func_8140(%937) /* ty=(Tensor[(8, 7, 11), uint8],) */;
  %939 = %935.1;
  %940 = %938.0;
  (%939, %940, meta[relay.Constant][66] /* ty=Tensor[(616), uint8] */)
}

def @func_4306() -> (Tensor[(364), int8],) {
  %941 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %942 = %941.1;
  (%942,)
}

def @func_4585() -> (Tensor[(6, 3, 10), float64],) {
  %943 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  (%943,)
}

def @func_13554() -> (Tensor[(3, 13, 11), float64], Tensor[(616), uint8]) {
  %944 = cast(meta[relay.Constant][68] /* ty=Tensor[(3, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %945 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(3, 13, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %946 = cast(meta[relay.Constant][67] /* ty=Tensor[(3, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %948 = @func_8729() /* ty=(Tensor[(364), int8], Tensor[(8, 7, 11), uint8], Tensor[(616), uint8]) */;
  %949 = mod(%946, %947) /* ty=Tensor[(3, 13, 11), float64] */;
  %950 = %948.2;
  (%949, %950)
}

def @func_13120() -> Tensor[(6, 3, 10), bool] {
  %951 = @func_9001() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %951.0
}

def @func_7706() -> Tensor[(156), uint8] {
  %952 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
  %952.1
}

def @func_5569() -> Tensor[(6, 3, 10), float64] {
  %953 = @func_5451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %953.0
}

def @func_11150(%var_11086: Tensor[(1155), float32], %var_11122: Tensor[(48, 2), int64]) -> (Tensor[(273), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(48, 2), int64]) {
  %954 = cast(%var_11086, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %955 = reshape(%954, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %956 = @func_11047() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(924), uint16]) */;
  %957 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %958 = cast(%var_11122, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
  %959 = cast(%var_11122, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
  %960 = reshape(%958, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), int64] */;
  %961 = reshape(%959, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), int64] */;
  %962 = @func_6971(%960, %961) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(8, 3, 4), float32]) */;
  %963 = @func_8555() /* ty=Tensor[(273), float64] */;
  %964 = @func_3520(%955) /* ty=Tensor[(7, 11, 15), float32] */;
  %965 = %956.2;
  %966 = %957.2;
  %967 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
  %968 = %962.0;
  (%963, %964, %var_11086, %965, %966, %967, %968, %var_11122)
}

def @func_7655() -> Tensor[(6, 3, 10), float64] {
  @func_4654() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_6770() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %969 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
  %970 = @func_6451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %971 = %969.2;
  %972 = %970.1;
  (%971, %972)
}

def @func_14223() -> (Tensor[(13, 4, 5), uint32], Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
  %973 = cast(meta[relay.Constant][69] /* ty=Tensor[(13, 4, 5), float64] */, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
  %974 = rsqrt(%973) /* ty=Tensor[(13, 4, 5), float64] */;
  %975 = cast(meta[relay.Constant][69] /* ty=Tensor[(13, 4, 5), float64] */, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %976 = shape_of(%974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%974, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %979 = @func_10211() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %980 = minimum(%977, %978) /* ty=Tensor[(13, 4, 5), uint32] */;
  %981 = %979.0;
  %982 = @func_10369() /* ty=Tensor[(273), float64] */;
  (%980, %981, %982)
}

def @func_5731(%var_5700: Tensor[(6, 3, 10), float64], %var_5715: float32, %var_5716: Tensor[(1352), float32], %var_5717: Tensor[(462, 2), uint16]) -> (Tensor[(6, 3, 10), uint8], Tensor[(4, 7, 13), int8], float32, Tensor[(1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(364, 1), int8], Tensor[(6, 3, 10), bool]) {
  %983 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %984 = %983.0;
  %985 = cast(%var_5700, dtype="uint8") /* ty=Tensor[(6, 3, 10), uint8] */;
  %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %987 = cast(%984, dtype="uint8") /* ty=Tensor[(6, 3, 10), uint8] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %989 = cast(%var_5715, dtype="float32") /* ty=float32 */;
  %990 = cast(%var_5716, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %991 = cast(%var_5717, dtype="uint16") /* ty=Tensor[(462, 2), uint16] */;
  %992 = cast(meta[relay.Constant][70] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %993 = cast(meta[relay.Constant][71] /* ty=Tensor[(364, 1), int8] */, dtype="int8") /* ty=Tensor[(364, 1), int8] */;
  %994 = reshape(%989, newshape=[]) /* ty=float32 */;
  %995 = reshape(%990, newshape=[1, 1352]) /* ty=Tensor[(1, 1352), float32] */;
  %996 = reshape(%991, newshape=[462, 2]) /* ty=Tensor[(462, 2), uint16] */;
  %997 = reshape(%992, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %998 = reshape(%993, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %999 = @func_1845(%994, %995, %996, %997, %998) /* ty=(Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
  %1000 = left_shift(%987, %988) /* ty=Tensor[(6, 3, 10), uint8] */;
  %1001 = cast(%1000, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1002 = reshape(%1001, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %1003 = @func_5527(%1002) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %1004 = %999.6;
  %1005 = %1003.0;
  (%1000, %1004, %var_5715, %var_5716, %var_5717, meta[relay.Constant][70] /* ty=Tensor[(56), float64] */, meta[relay.Constant][71] /* ty=Tensor[(364, 1), int8] */, %1005)
}

def @func_3035(%var_3005: Tensor[(4, 7, 12), float64], %var_3011: Tensor[(56), float64], %var_3018: Tensor[(13, 104), float32], %var_3019: Tensor[(1, 924), uint16]) -> (Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) {
  %1006 = cast(%var_3005, dtype="float64") /* ty=Tensor[(4, 7, 12), float64] */;
  %1007 = cast(meta[relay.Constant][72] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1008 = cast(%var_3011, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1009 = reshape(%1007, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float32] */;
  %1010 = reshape(%1008, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1011 = @func_153(%1009, %1010) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) */;
  %1012 = cast(%var_3018, dtype="float32") /* ty=Tensor[(13, 104), float32] */;
  %1013 = cast(%var_3019, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %1014 = cast(%var_3011, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1015 = reshape(%1012, newshape=[13, 8, 13]) /* ty=Tensor[(13, 8, 13), float32] */;
  %1016 = reshape(%1013, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %1017 = reshape(%1014, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1018 = @func_1482(%1015, %1016, %1017) /* ty=(Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */;
  %1019 = exp(%1006) /* ty=Tensor[(4, 7, 12), float64] */;
  %1020 = %1011.0;
  %1021 = %1018.1;
  (%1019, %1020, meta[relay.Constant][72] /* ty=Tensor[(273), float32] */, %var_3011, %1021, %var_3018, %var_3019)
}

def @func_9467(%var_9401: Tensor[(156), uint8], %var_9426: Tensor[(156), uint8]) -> (Tensor[(364), int8], Tensor[(273), float32], Tensor[(156), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1022 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %1023 = cast(%var_9401, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %1024 = reshape(%1023, newshape=[1, 156]) /* ty=Tensor[(1, 156), uint8] */;
  %1025 = @func_5931(%1024) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 156), uint8]) */;
  %1026 = cast(%var_9426, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1027 = shape_of(%var_9401, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1028 = cast(%var_9401, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1030 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %1031 = %1022.0;
  %1032 = %1025.3;
  %1033 = mod(%1028, %1029) /* ty=Tensor[(156), float64] */;
  %1034 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %1035 = %1030.0;
  (%1031, %1032, %1033, %1034, %1035)
}

def @func_10042() -> Tensor[(6, 3, 10), float32] {
  %1036 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1037 = %1036.0;
  %1038 = cast(%1037, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
  atanh(%1038) /* ty=Tensor[(6, 3, 10), float32] */
}

def @func_12589(%var_12571: Tensor[(364), int8]) -> (Tensor[(1155), float32], Tensor[(6, 3, 10), float32], Tensor[(364), bool], Tensor[(364), int8]) {
  %1039 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
  %1040 = cast(%var_12571, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1041 = reshape(%1040, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %1042 = %1039.0;
  %1043 = @func_10042() /* ty=Tensor[(6, 3, 10), float32] */;
  %1044 = @func_5960(%1041) /* ty=Tensor[(364), bool] */;
  (%1042, %1043, %1044, %var_12571)
}

def @func_14292() -> Tensor[(6, 3, 10), float64] {
  @func_12475() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_3520(%var_3502: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
  %1045 = cast(%var_3502, dtype="float32") /* ty=Tensor[(7, 11, 15), float32] */;
  sqrt(%1045) /* ty=Tensor[(7, 11, 15), float32] */
}

def @func_15372() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1046 = @func_5451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1047 = %1046.1;
  %1048 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1047, %1048)
}

def @func_7593(%var_7587: Tensor[(385, 3), float32]) -> (Tensor[(385, 3), int32],) {
  %1049 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %1050 = %1049.2;
  %1051 = cast(%var_7587, dtype="int32") /* ty=Tensor[(385, 3), int32] */;
  %1052 = shape_of(%1050, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1053 = cast(%1050, dtype="int32") /* ty=Tensor[(385, 3), int32] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1055 = multiply(%1053, %1054) /* ty=Tensor[(385, 3), int32] */;
  (%1055,)
}

def @func_15180(%var_15129: Tensor[(273), float32], %var_15156: Tensor[(1232), float64]) -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(?, 273), float64], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) {
  %1056 = @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1057 = @func_10729() /* ty=(Tensor[(364), int8],) */;
  %1058 = %1056.1;
  %1059 = cast(%1058, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1060 = reshape(%1059, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %1061 = @func_9671(%1060) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
  %1062 = cast(meta[relay.Constant][73] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1063 = cast(%var_15129, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1064 = reshape(%1062, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1065 = reshape(%1063, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %1066 = @func_4339(%1064, %1065) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */;
  %1067 = cast(%var_15156, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1068 = reshape(%1067, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float64] */;
  %1069 = @func_10531(%1068) /* ty=(Tensor[(14, 8, 11), float64], Tensor[(14, 8, 11), float32]) */;
  %1070 = %1057.0;
  %1071 = %1061.1;
  %1072 = %1066.3;
  %1073 = %1069.0;
  (%1058, %1070, %1071, %1072, meta[relay.Constant][73] /* ty=Tensor[(924), uint16] */, %var_15129, %1073, %var_15156)
}

def @func_4557() -> Tensor[(6, 3, 10), float64] {
  @func_4550() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_10494() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1074 = @func_9001() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %1075 = @func_5907() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1076 = @func_10211() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1077 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %1078 = %1074.0;
  %1079 = %1075.0;
  %1080 = %1076.0;
  (%1077, %1078, %1079, %1080)
}

def @func_5812() -> Tensor[(10, 5, 9), float32] {
  %1081 = cast(meta[relay.Constant][74] /* ty=Tensor[(10, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  log(%1081) /* ty=Tensor[(10, 5, 9), float32] */
}

def @func_5893() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) {
  %1082 = @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */;
  %1083 = cast(meta[relay.Constant][75] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1084 = reshape(%1083, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %1085 = @func_5434(%1084) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(2, 28), float64], Tensor[(462, 2), uint16], Tensor[(273), float32]) */;
  %1086 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
  %1087 = %1082.3;
  %1088 = %1085.1;
  (%1086, %1087, %1088, meta[relay.Constant][75] /* ty=Tensor[(273), float32] */)
}

def @func_15951() -> Tensor[(6, 3, 10), float64] {
  %1089 = @func_8255() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1089.0
}

def @func_13964() -> (Tensor[(6, 3, 10), float64],) {
  %1090 = @func_11969() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1090,)
}

def @func_4502(%var_4480: Tensor[(6, 3, 10), float64]) -> (Tensor[(364), int8], Tensor[(364), int8], Tensor[(6, 3, 10), int64], Tensor[(364), int8], Tensor[(364), int8]) {
  %1091 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1092 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %1093 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1094 = %1093.2;
  %1095 = cast(%var_4480, dtype="int64") /* ty=Tensor[(6, 3, 10), int64] */;
  %1096 = shape_of(%1094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1097 = cast(%1094, dtype="int64") /* ty=Tensor[(6, 3, 10), int64] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1099 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %1100 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1101 = %1091.1;
  %1102 = %1092.0;
  %1103 = bitwise_or(%1097, %1098) /* ty=Tensor[(6, 3, 10), int64] */;
  %1104 = %1099.0;
  %1105 = %1100.1;
  (%1101, %1102, %1103, %1104, %1105)
}

def @func_8793() -> (Tensor[(10, 5, 9), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32]) {
  %1106 = cast(meta[relay.Constant][76] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1107 = reshape(%1106, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float32] */;
  %1108 = @func_7787(%1107) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(7, 11, 15), float32], Tensor[(2, 12, 7), float32]) */;
  %1109 = @func_5812() /* ty=Tensor[(10, 5, 9), float32] */;
  %1110 = %1108.0;
  (%1109, %1110, meta[relay.Constant][76] /* ty=Tensor[(168), float32] */)
}

def @func_7741() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1111 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
  %1112 = @func_5569() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1111, %1112)
}

def @func_8771(%var_8757: Tensor[(6, 16, 12), int16]) -> (Tensor[(6, 16, 12), int16],) {
  %1113 = cast(meta[relay.Constant][77] /* ty=Tensor[(6, 16, 12), int16] */, dtype="int16") /* ty=Tensor[(6, 16, 12), int16] */;
  %1114 = shape_of(%var_8757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1115 = cast(%var_8757, dtype="int16") /* ty=Tensor[(6, 16, 12), int16] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1117 = bitwise_or(%1115, %1116) /* ty=Tensor[(6, 16, 12), int16] */;
  (%1117,)
}

def @func_16128(%var_16083: Tensor[(1352), float32], %var_16085: Tensor[(1, 56), float64], %var_16123: Tensor[(84, 1), float64], %var_16124: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(924), uint16], Tensor[(1, 56), float64], Tensor[(1352), float64], Tensor[(6, 1, 14), float64], Tensor[(84, 1), float64], Tensor[(364), int8]) {
  %1118 = @func_9743() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1119 = @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1120 = @func_15372() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1121 = cast(%var_16083, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %1122 = cast(meta[relay.Constant][78] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1123 = cast(%var_16085, dtype="float64") /* ty=Tensor[(1, 56), float64] */;
  %1124 = reshape(%1121, newshape=[13, 8, 13]) /* ty=Tensor[(13, 8, 13), float32] */;
  %1125 = reshape(%1122, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %1126 = reshape(%1123, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1127 = @func_1482(%1124, %1125, %1126) /* ty=(Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */;
  %1128 = cast(%var_16083, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %1129 = atanh(%1128) /* ty=Tensor[(1352), float32] */;
  %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %1131 = cast(%var_16123, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
  %1132 = cast(%var_16124, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1133 = reshape(%1131, newshape=[6, 1, 14]) /* ty=Tensor[(6, 1, 14), float64] */;
  %1134 = reshape(%1132, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %1135 = @func_14045(%1133, %1134) /* ty=(Tensor[(6, 1, 14), float64], Tensor[(364), int8], Tensor[(364), int8]) */;
  %1136 = %1118.1;
  %1137 = %1119.0;
  %1138 = %1120.0;
  %1139 = %1127.1;
  %1140 = atan(%1130) /* ty=Tensor[(1352), float64] */;
  %1141 = %1135.0;
  (%1136, %1137, %1138, %1139, meta[relay.Constant][78] /* ty=Tensor[(924), uint16] */, %var_16085, %1140, %1141, %var_16123, %var_16124)
}

def @func_7787(%var_7767: Tensor[(2, 12, 7), float32]) -> (Tensor[(2, 12, 7), float32], Tensor[(7, 11, 15), float32], Tensor[(2, 12, 7), float32]) {
  %1142 = cast(%var_7767, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %1143 = asinh(%1142) /* ty=Tensor[(2, 12, 7), float32] */;
  %1144 = cast(%1143, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %1145 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %1146 = cast(%1143, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %1147 = atanh(%1144) /* ty=Tensor[(2, 12, 7), float32] */;
  %1148 = %1145.1;
  %1149 = log10(%1146) /* ty=Tensor[(2, 12, 7), float32] */;
  (%1147, %1148, %1149)
}

def @func_16707() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  %1150 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  %1151 = cast(%1150, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1152 = reshape(%1151, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %1153 = @func_9671(%1152) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
  %1154 = %1153.1;
  (%1150, %1154)
}

def @func_5451() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1155 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1156 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1157 = %1155.0;
  %1158 = %1156.2;
  (%1157, %1158)
}

def @func_15465() -> (Tensor[(180), float64], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
  %1159 = @func_9699() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %1160 = %1159.1;
  %1161 = @func_10369() /* ty=Tensor[(273), float64] */;
  %1162 = @func_15393() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1160, %1161, %1162)
}

def @func_4807(%var_4777: Tensor[(4, 9, 10), uint64], %var_4778: Tensor[(4, 9, 10), uint64], %var_4789: Tensor[(8, 42), float64], %var_4790: Tensor[(56), float64], %var_4791: Tensor[(26, 52), float32], %var_4792: Tensor[(924), uint16]) -> (Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) {
  %1163 = cast(%var_4778, dtype="bool") /* ty=Tensor[(4, 9, 10), bool] */;
  %1164 = shape_of(%var_4777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1165 = cast(%var_4777, dtype="bool") /* ty=Tensor[(4, 9, 10), bool] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1167 = cast(%var_4789, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
  %1168 = cast(%var_4790, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1169 = cast(%var_4791, dtype="float32") /* ty=Tensor[(26, 52), float32] */;
  %1170 = cast(%var_4792, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1171 = reshape(%1167, newshape=[4, 7, 12]) /* ty=Tensor[(4, 7, 12), float64] */;
  %1172 = reshape(%1168, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1173 = reshape(%1169, newshape=[13, 104]) /* ty=Tensor[(13, 104), float32] */;
  %1174 = reshape(%1170, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %1175 = @func_3035(%1171, %1172, %1173, %1174) /* ty=(Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) */;
  %1176 = not_equal(%1165, %1166) /* ty=Tensor[(4, 9, 10), bool] */;
  %1177 = %1175.1;
  (%1176, %1177, %var_4789, %var_4790, %var_4791, %var_4792)
}

def @func_4384() -> Tensor[(364), int8] {
  %1178 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1178.1
}

def @func_8527() -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  %1179 = @func_7300() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1180 = %1179.0;
  %1181 = @func_4384() /* ty=Tensor[(364), int8] */;
  (%1180, %1181)
}

def @func_14935(%var_14909: Tensor[(12, 9, 9), float32]) -> (Tensor[(12, 9, 9), float32],) {
  %1182 = cast(%var_14909, dtype="float32") /* ty=Tensor[(12, 9, 9), float32] */;
  %1183 = erf(%1182) /* ty=Tensor[(12, 9, 9), float32] */;
  (%1183,)
}

def @func_7326(%var_7323: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8]) {
  %1184 = cast(%var_7323, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %1185 = cast(%var_7323, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %1186 = reshape(%1184, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), uint8] */;
  %1187 = reshape(%1185, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), uint8] */;
  %1188 = @func_5124(%1186, %1187) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(6, 3, 10), float64]) */;
  %1189 = @func_5169() /* ty=Tensor[(6, 3, 10), float64] */;
  %1190 = %1188.0;
  (%1189, %1190, %var_7323)
}

def @func_6897() -> (Tensor[(273), float64],) {
  %1191 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
  %1192 = %1191.0;
  (%1192,)
}

def @func_7727() -> (Tensor[(6, 3, 10), float64], Tensor[(154, 6), uint16]) {
  %1193 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1194 = @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */;
  %1195 = %1193.0;
  %1196 = %1194.1;
  (%1195, %1196)
}

def @func_16171() -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(273), float32]) {
  %1197 = @func_9001() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %1198 = @func_13859() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1199 = @func_11854() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */;
  %1200 = %1199.2;
  %1201 = cast(%1200, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1202 = %1197.0;
  %1203 = %1198.0;
  %1204 = rsqrt(%1201) /* ty=Tensor[(273), float32] */;
  (%1202, %1203, %1204)
}

def @func_7174() -> Tensor[(6, 3, 10), float64] {
  @func_5619() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_14091(%var_14081: Tensor[(1152, 1), int16]) -> (Tensor[(168), float32], Tensor[(6, 3, 10), float64], Tensor[(924), uint16], Tensor[(1352), float32], Tensor[(126), bool], Tensor[(6, 3, 10), bool], Tensor[(6, 16, 12), int16], Tensor[(1152, 1), int16]) {
  %1205 = @func_8793() /* ty=(Tensor[(10, 5, 9), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32]) */;
  %1206 = cast(meta[relay.Constant][79] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %1207 = cast(meta[relay.Constant][80] /* ty=Tensor[(126), bool] */, dtype="bool") /* ty=Tensor[(126), bool] */;
  %1208 = reshape(%1206, newshape=[1352]) /* ty=Tensor[(1352), float32] */;
  %1209 = reshape(%1207, newshape=[126]) /* ty=Tensor[(126), bool] */;
  %1210 = @func_13731(%1208, %1209) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(168, 2), float64], Tensor[(924), uint16], Tensor[(1352), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(28, 2), bool], Tensor[(8, 7, 2), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(1155), float32], Tensor[(1352), float32], Tensor[(6, 3, 10), bool], Tensor[(48, 2), int64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) */;
  %1211 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %1212 = cast(%var_14081, dtype="int16") /* ty=Tensor[(1152, 1), int16] */;
  %1213 = reshape(%1212, newshape=[6, 16, 12]) /* ty=Tensor[(6, 16, 12), int16] */;
  %1214 = @func_8771(%1213) /* ty=(Tensor[(6, 16, 12), int16],) */;
  %1215 = %1205.2;
  %1216 = @func_5619() /* ty=Tensor[(6, 3, 10), float64] */;
  %1217 = %1210.3;
  %1218 = %1211.0;
  %1219 = %1214.0;
  (%1215, %1216, %1217, meta[relay.Constant][79] /* ty=Tensor[(1352), float32] */, meta[relay.Constant][80] /* ty=Tensor[(126), bool] */, %1218, %1219, %var_14081)
}

def @func_6367() -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) {
  %1220 = @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1221 = %1220.0;
  %1222 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1223 = %1222.0;
  %1224 = cast(%1223, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1225 = shape_of(%1221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1226 = cast(%1221, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1228 = cast(meta[relay.Constant][81] /* ty=Tensor[(385, 3), float32] */, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
  %1229 = reshape(%1228, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %1230 = floor_divide(%1226, %1227) /* ty=Tensor[(6, 3, 10), float64] */;
  %1231 = cast(%1230, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1232 = reshape(%1231, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %1233 = @func_5527(%1232) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %1234 = @func_3520(%1229) /* ty=Tensor[(7, 11, 15), float32] */;
  %1235 = %1233.0;
  (%1230, %1234, meta[relay.Constant][81] /* ty=Tensor[(385, 3), float32] */, %1235)
}

def @func_9671(%var_9667: Tensor[(180), float64]) -> (Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) {
  %1236 = cast(%var_9667, dtype="float64") /* ty=Tensor[(180), float64] */;
  %1237 = reshape(%1236, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %1238 = @func_5527(%1237) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %1239 = @func_4384() /* ty=Tensor[(364), int8] */;
  %1240 = %1238.0;
  (%1239, %1240, %var_9667)
}

def @func_4271() -> (Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  %1241 = cast(meta[relay.Constant][82] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1242 = reshape(%1241, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
  %1243 = @func_437(%1242) /* ty=(Tensor[(4, 7, 13), int8],) */;
  %1244 = cast(meta[relay.Constant][83] /* ty=Tensor[(6, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1245 = cosh(%1244) /* ty=Tensor[(6, 3, 10), float64] */;
  %1246 = cast(%1245, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1247 = %1243.0;
  %1248 = cos(%1246) /* ty=Tensor[(6, 3, 10), float64] */;
  (%1247, meta[relay.Constant][82] /* ty=Tensor[(364), int8] */, %1248)
}

def @func_13051() -> Tensor[(7, 11, 15), float64] {
  %1249 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %1250 = %1249.1;
  %1251 = cast(%1250, dtype="float64") /* ty=Tensor[(7, 11, 15), float64] */;
  %1252 = tan(%1251) /* ty=Tensor[(7, 11, 15), float64] */;
  %1253 = cast(%1252, dtype="float64") /* ty=Tensor[(7, 11, 15), float64] */;
  cos(%1253) /* ty=Tensor[(7, 11, 15), float64] */
}

def @func_16750() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  %1254 = @func_10894() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1255 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %1256 = @func_16513() /* ty=Tensor[(6, 3, 10), float64] */;
  %1257 = %1254.1;
  %1258 = %1255.0;
  (%1256, %1257, %1258)
}

def @func_2215(%var_2200: Tensor[(14, 9, 8), float32], %var_2209: float32, %var_2210: Tensor[(13, 104), float32], %var_2211: Tensor[(924), uint16], %var_2212: Tensor[(56), float64], %var_2213: Tensor[(364), int8]) -> (Tensor[(14, 9, 8), float32], Tensor[(4, 7, 13), int8], float32, Tensor[(13, 104), float32], Tensor[(924), uint16], Tensor[(56), float64], Tensor[(364), int8]) {
  %1259 = cast(%var_2200, dtype="float32") /* ty=Tensor[(14, 9, 8), float32] */;
  %1260 = cast(%var_2209, dtype="float32") /* ty=float32 */;
  %1261 = cast(%var_2210, dtype="float32") /* ty=Tensor[(13, 104), float32] */;
  %1262 = cast(%var_2211, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1263 = cast(%var_2212, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1264 = cast(%var_2213, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1265 = reshape(%1260, newshape=[]) /* ty=float32 */;
  %1266 = reshape(%1261, newshape=[1, 1352]) /* ty=Tensor[(1, 1352), float32] */;
  %1267 = reshape(%1262, newshape=[462, 2]) /* ty=Tensor[(462, 2), uint16] */;
  %1268 = reshape(%1263, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1269 = reshape(%1264, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %1270 = @func_1845(%1265, %1266, %1267, %1268, %1269) /* ty=(Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
  %1271 = acosh(%1259) /* ty=Tensor[(14, 9, 8), float32] */;
  %1272 = %1270.6;
  (%1271, %1272, %var_2209, %var_2210, %var_2211, %var_2212, %var_2213)
}

def @func_13780() -> (Tensor[(7, 11, 15), float32], Tensor[(9, 1, 5), float64], Tensor[(45), float64]) {
  %1273 = cast(meta[relay.Constant][84] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %1274 = reshape(%1273, newshape=[9, 1, 5]) /* ty=Tensor[(9, 1, 5), float64] */;
  %1275 = @func_11004(%1274) /* ty=(Tensor[(9, 1, 5), float64],) */;
  %1276 = @func_11462() /* ty=Tensor[(7, 11, 15), float32] */;
  %1277 = %1275.0;
  (%1276, %1277, meta[relay.Constant][84] /* ty=Tensor[(45), float64] */)
}

def @func_9070(%var_9059: Tensor[(364), int8]) -> (Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) {
  %1278 = @func_8199() /* ty=Tensor[(273), float64] */;
  %1279 = cast(meta[relay.Constant][85] /* ty=Tensor[(273), float64] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1280 = shape_of(%1278, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1281 = cast(%1278, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1282 = dyn.reshape(%1279, %1280, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1283 = cast(meta[relay.Constant][86] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1284 = cast(-5.54874f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1285 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 1352), float32] */, dtype="float32") /* ty=Tensor[(1, 1352), float32] */;
  %1286 = cast(meta[relay.Constant][88] /* ty=Tensor[(14, 66), uint16] */, dtype="uint16") /* ty=Tensor[(14, 66), uint16] */;
  %1287 = cast(meta[relay.Constant][89] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1288 = cast(%var_9059, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1289 = reshape(%1283, newshape=[14, 9, 8]) /* ty=Tensor[(14, 9, 8), float32] */;
  %1290 = reshape(%1284, newshape=[]) /* ty=float32 */;
  %1291 = reshape(%1285, newshape=[13, 104]) /* ty=Tensor[(13, 104), float32] */;
  %1292 = reshape(%1286, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1293 = reshape(%1287, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1294 = reshape(%1288, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %1295 = @func_2215(%1289, %1290, %1291, %1292, %1293, %1294) /* ty=(Tensor[(14, 9, 8), float32], Tensor[(4, 7, 13), int8], float32, Tensor[(13, 104), float32], Tensor[(924), uint16], Tensor[(56), float64], Tensor[(364), int8]) */;
  %1296 = mod(%1281, %1282) /* ty=Tensor[(273), float32] */;
  %1297 = %1295.5;
  %1298 = @func_8587() /* ty=Tensor[(6, 3, 10), bool] */;
  (%1296, %1297, meta[relay.Constant][86] /* ty=Tensor[(1008), float32] */, -5.54874f /* ty=float32 */, meta[relay.Constant][87] /* ty=Tensor[(1, 1352), float32] */, meta[relay.Constant][88] /* ty=Tensor[(14, 66), uint16] */, meta[relay.Constant][89] /* ty=Tensor[(56), float64] */, %var_9059, %1298)
}

def @func_7094(%var_7028: Tensor[(1155), float32], %var_7042: Tensor[(924), uint16], %var_7043: Tensor[(273), float32], %var_7089: Tensor[(6, 273), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 273), float64], Tensor[(6, 273), bool]) {
  %1299 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
  %1300 = cast(%var_7028, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %1301 = reshape(%1300, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %1302 = @func_5380(%1301) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float32], Tensor[(56), float64], float32, Tensor[(56), float64], Tensor[(4, 7, 13), int8], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
  %1303 = cast(%var_7042, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1304 = cast(%var_7043, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1305 = %1302.4;
  %1306 = cast(%1305, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1307 = reshape(%1303, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), uint16] */;
  %1308 = reshape(%1304, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %1309 = reshape(%1306, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1310 = @func_728(%1307, %1308, %1309) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */;
  %1311 = %1310.2;
  %1312 = cast(%1311, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
  %1313 = atan(%1312) /* ty=Tensor[(1, 273), float32] */;
  %1314 = cast(%1313, dtype="float64") /* ty=Tensor[(1, 273), float64] */;
  %1315 = cast(%1313, dtype="bool") /* ty=Tensor[(1, 273), bool] */;
  %1316 = cast(%var_7089, dtype="bool") /* ty=Tensor[(6, 273), bool] */;
  %1317 = %1299.2;
  %1318 = erf(%1314) /* ty=Tensor[(1, 273), float64] */;
  %1319 = equal(%1315, %1316) /* ty=Tensor[(6, 273), bool] */;
  (%1317, %1305, %var_7028, %var_7042, %var_7043, %1318, %1319)
}

def @func_9219(%var_9215: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(13, 21), float32], Tensor[(156), uint8]) {
  %1320 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1321 = cast(%var_9215, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1322 = cast(meta[relay.Constant][90] /* ty=Tensor[(13, 21), float32] */, dtype="float32") /* ty=Tensor[(13, 21), float32] */;
  %1323 = cast(meta[relay.Constant][91] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %1324 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
  %1325 = cast(%1324, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1326 = reshape(%1321, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1327 = reshape(%1322, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %1328 = reshape(%1323, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %1329 = reshape(%1325, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %1330 = @func_5275(%1326, %1327, %1328, %1329) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %1331 = %1320.1;
  %1332 = %1330.0;
  (%1324, %1331, %1332, %var_9215, meta[relay.Constant][90] /* ty=Tensor[(13, 21), float32] */, meta[relay.Constant][91] /* ty=Tensor[(156), uint8] */)
}

def @func_4654() -> Tensor[(6, 3, 10), float64] {
  @func_4557() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_1845(%var_1818: float32, %var_1828: Tensor[(1, 1352), float32], %var_1829: Tensor[(462, 2), uint16], %var_1830: Tensor[(56), float64], %var_1843: Tensor[(364), int8]) -> (Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
  %1333 = cast(%var_1818, dtype="bool") /* ty=bool */;
  %1334 = cast(meta[relay.Constant][92] /* ty=Tensor[(6, 1, 16), float32] */, dtype="bool") /* ty=Tensor[(6, 1, 16), bool] */;
  %1335 = greater_equal(%1333, %1334) /* ty=Tensor[(6, 1, 16), bool] */;
  %1336 = cast(%var_1818, dtype="int32") /* ty=int32 */;
  %1337 = cast(%1335, dtype="int32") /* ty=Tensor[(6, 1, 16), int32] */;
  %1338 = cast(%var_1828, dtype="float32") /* ty=Tensor[(1, 1352), float32] */;
  %1339 = cast(%var_1829, dtype="uint16") /* ty=Tensor[(462, 2), uint16] */;
  %1340 = cast(%var_1830, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1341 = reshape(%1338, newshape=[13, 8, 13]) /* ty=Tensor[(13, 8, 13), float32] */;
  %1342 = reshape(%1339, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %1343 = reshape(%1340, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1344 = @func_1482(%1341, %1342, %1343) /* ty=(Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */;
  %1345 = cast(%var_1818, dtype="bool") /* ty=bool */;
  %1346 = cast(%1335, dtype="bool") /* ty=Tensor[(6, 1, 16), bool] */;
  %1347 = cast(%var_1843, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1348 = reshape(%1347, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
  %1349 = @func_437(%1348) /* ty=(Tensor[(4, 7, 13), int8],) */;
  %1350 = right_shift(%1336, %1337) /* ty=Tensor[(6, 1, 16), int32] */;
  %1351 = %1344.1;
  %1352 = less_equal(%1345, %1346) /* ty=Tensor[(6, 1, 16), bool] */;
  %1353 = %1349.0;
  (%1350, %1351, %var_1828, %var_1829, %var_1830, %1352, %1353, %var_1843)
}

def @func_8222() -> (Tensor[(6, 3, 10), float64],) {
  %1354 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1355 = %1354.1;
  (%1355,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4656() -> Tensor[(6, 3, 10), float64] {
  @func_4654() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_12428(%var_12334: Tensor[(1, 10, 9), float32], %var_12335: Tensor[(10, 10, 9), float32], %var_12372: Tensor[(48), float64], %var_12375: Tensor[(364), int8]) -> (Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(13, 12, ?), uint8], Tensor[(48), float64], Tensor[(364), bool], Tensor[(364), int8], Tensor[(10, 10, 9), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1 = cast(meta[relay.Constant][1] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %2 = reshape(%0, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %3 = reshape(%1, newshape=[78, 2]) /* ty=Tensor[(78, 2), uint8] */;
  %4 = @func_5778(%2, %3) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(78, 2), uint8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64]) */;
  %5 = cast(%var_12372, dtype="float64") /* ty=Tensor[(48), float64] */;
  %6 = reshape(%5, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float64] */;
  %7 = @func_2433(%6) /* ty=(Tensor[(8, 6, ?), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8]) */;
  %8 = cast(%var_12375, dtype="int8") /* ty=Tensor[(364), int8] */;
  %9 = reshape(%8, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %10 = cast(%var_12334, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %11 = cast(%var_12335, dtype="float32") /* ty=Tensor[(10, 10, 9), float32] */;
  %12 = mod(%10, %11) /* ty=Tensor[(10, 10, 9), float32] */;
  %13 = cast(%var_12334, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %14 = cast(%12, dtype="float32") /* ty=Tensor[(10, 10, 9), float32] */;
  %15 = %4.1;
  %16 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
  %17 = %7.3;
  %18 = @func_5960(%9) /* ty=Tensor[(364), bool] */;
  %19 = divide(%13, %14) /* ty=Tensor[(10, 10, 9), float32] */;
  (%15, meta[relay.Constant][0] /* ty=Tensor[(924), uint16] */, meta[relay.Constant][1] /* ty=Tensor[(156), uint8] */, %16, %17, %var_12372, %18, %var_12375, %19)
}

def @func_5382(%var_5381: Tensor[(1155), float32]) -> (Tensor[(364), int8], Tensor[(6, 3, 10), float32], Tensor[(56), float64], float32, Tensor[(56), float64], Tensor[(4, 7, 13), int8], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
  %42 = fn (%var_5322: Tensor[(1155), float32]) -> (Tensor[(364), int8], Tensor[(6, 3, 10), float32], Tensor[(56), float64], float32, Tensor[(56), float64], Tensor[(4, 7, 13), int8], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
    %20 = @func_4306() /* ty=(Tensor[(364), int8],) */;
    %21 = @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */;
    %22 = cast(-9.99037f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %24 = reshape(%22, newshape=[]) /* ty=float32 */;
    %25 = reshape(%23, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %26 = @func_5090(%24, %25) /* ty=(Tensor[(364), int8], Tensor[(1, 1352), float32], float32, Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(56), float64]) */;
    %27 = %20.0;
    %28 = cast(%27, dtype="int8") /* ty=Tensor[(364), int8] */;
    %29 = reshape(%28, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
    %30 = @func_437(%29) /* ty=(Tensor[(4, 7, 13), int8],) */;
    %31 = cast(%var_5322, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %32 = reshape(%31, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
    %33 = cast(%27, dtype="int8") /* ty=Tensor[(364), int8] */;
    %34 = reshape(%33, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
    %35 = @func_437(%34) /* ty=(Tensor[(4, 7, 13), int8],) */;
    %36 = %21.3;
    %37 = %26.5;
    %38 = %30.0;
    %39 = @func_3520(%32) /* ty=Tensor[(7, 11, 15), float32] */;
    %40 = %35.0;
    %41 = @func_4441() /* ty=Tensor[(364), int8] */;
    (%27, %36, %37, -9.99037f /* ty=float32 */, meta[relay.Constant][2] /* ty=Tensor[(56), float64] */, %38, %39, %var_5322, %40, %41)
  };
  %42(%var_5381) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float32], Tensor[(56), float64], float32, Tensor[(56), float64], Tensor[(4, 7, 13), int8], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */
}

def @func_7937(%var_7931: Tensor[(924), uint16], %var_7932: Tensor[(39, 7), float32], %var_7933: Tensor[(156), uint8], %var_7934: Tensor[(360), uint64], %var_7935: Tensor[(336), float64], %var_7936: Tensor[(1352, 1), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(156), uint8], Tensor[(924), uint16], Tensor[(39, 7), float32], Tensor[(156), uint8], Tensor[(924), uint16], Tensor[(360), uint64], Tensor[(336), float64], Tensor[(56), float64], Tensor[(1352, 1), float32]) {
  @func_7929(%var_7931, %var_7932, %var_7933, %var_7934, %var_7935, %var_7936) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(156), uint8], Tensor[(924), uint16], Tensor[(39, 7), float32], Tensor[(156), uint8], Tensor[(924), uint16], Tensor[(360), uint64], Tensor[(336), float64], Tensor[(56), float64], Tensor[(1352, 1), float32]) */
}

def @func_5530(%var_5528: Tensor[(6, 3, 10), float64]) -> (Tensor[(6, 3, 10), bool],) {
  @func_5527(%var_5528) /* ty=(Tensor[(6, 3, 10), bool],) */
}

def @func_11341() -> (Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64]) {
  %43 = @func_10042() /* ty=Tensor[(6, 3, 10), float32] */;
  %44 = @func_11294() /* ty=Tensor[(6, 3, 10), float64] */;
  (%43, %44)
}

def @func_5814() -> Tensor[(10, 5, 9), float32] {
  @func_5812() /* ty=Tensor[(10, 5, 9), float32] */
}

def @func_5933(%var_5932: Tensor[(1, 156), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 156), uint8]) {
  %56 = fn (%var_5928: Tensor[(1, 156), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 156), uint8]) {
    %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %46 = cast(meta[relay.Constant][4] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
    %47 = cast(%var_5928, dtype="uint8") /* ty=Tensor[(1, 156), uint8] */;
    %48 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
    %49 = cast(%48, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %50 = reshape(%45, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %51 = reshape(%46, newshape=[273]) /* ty=Tensor[(273), float32] */;
    %52 = reshape(%47, newshape=[156]) /* ty=Tensor[(156), uint8] */;
    %53 = reshape(%49, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
    %54 = @func_5275(%50, %51, %52, %53) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
    %55 = %54.6;
    (%48, %55, meta[relay.Constant][3] /* ty=Tensor[(924), uint16] */, meta[relay.Constant][4] /* ty=Tensor[(273), float32] */, %var_5928)
  };
  %56(%var_5932) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 156), uint8]) */
}

def @func_5527(%var_5522: Tensor[(6, 3, 10), float64]) -> (Tensor[(6, 3, 10), bool],) {
  %57 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %58 = %57.0;
  %59 = cast(%var_5522, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = greater(%61, %62) /* ty=Tensor[(6, 3, 10), bool] */;
  (%63,)
}

def @func_7301() -> (Tensor[(6, 3, 10), float64],) {
  %65 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %64 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
    (%64,)
  };
  %65() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_6822() -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  %66 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %67 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %68 = %66.0;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %70 = reshape(%69, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %71 = @func_5527(%70) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %72 = %67.0;
  %73 = %71.0;
  (%68, %72, %73)
}

def @func_13351() -> (Tensor[(364), int8], Tensor[(14, 66), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_13349() /* ty=(Tensor[(364), int8], Tensor[(14, 66), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_6654() -> Tensor[(6, 3, 10), float64] {
  %74 = fn () -> Tensor[(6, 3, 10), float64] {
    @func_5569() /* ty=Tensor[(6, 3, 10), float64] */
  };
  %74() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_4272() -> (Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  %83 = fn () -> (Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
    %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
    %76 = reshape(%75, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
    %77 = @func_437(%76) /* ty=(Tensor[(4, 7, 13), int8],) */;
    %78 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %79 = cosh(%78) /* ty=Tensor[(6, 3, 10), float64] */;
    %80 = cast(%79, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %81 = %77.0;
    %82 = cos(%80) /* ty=Tensor[(6, 3, 10), float64] */;
    (%81, meta[relay.Constant][5] /* ty=Tensor[(364), int8] */, %82)
  };
  %83() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */
}

def @func_7944() -> (Tensor[(6, 3, 10), float64],) {
  %84 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %85 = %84.2;
  (%85,)
}

def @func_8324() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %86 = @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %87 = %86.0;
  %88 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%87, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %92 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %93 = floor_mod(%90, %91) /* ty=Tensor[(6, 3, 10), float64] */;
  %94 = %92.0;
  %95 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
  (%93, %94, %95)
}

def @func_4587() -> (Tensor[(6, 3, 10), float64],) {
  @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_13939() -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  %100 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
    %96 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %97 = @func_11854() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */;
    %98 = %96.1;
    %99 = %97.1;
    (%98, %99)
  };
  %100() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(364), int8]) */
}

def @func_10075(%var_10060: Tensor[(4, 660), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(4, 660), float32]) {
  %101 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %102 = cast(%var_10060, dtype="uint8") /* ty=Tensor[(4, 660), uint8] */;
  %103 = cast(%var_10060, dtype="uint8") /* ty=Tensor[(4, 660), uint8] */;
  %104 = reshape(%102, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), uint8] */;
  %105 = reshape(%103, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), uint8] */;
  %106 = @func_5124(%104, %105) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(6, 3, 10), float64]) */;
  %107 = cast(%var_10060, dtype="float32") /* ty=Tensor[(4, 660), float32] */;
  %108 = %101.3;
  %109 = %106.0;
  %110 = atanh(%107) /* ty=Tensor[(4, 660), float32] */;
  (%108, %109, %110)
}

def @func_14907(%var_14905: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_14904(%var_14905) /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_5619() -> Tensor[(6, 3, 10), float64] {
  %111 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %111.0
}

def @func_11627() -> (Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(364), int8], Tensor[(168), float32], Tensor[(364), int8]) {
  %123 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(364), int8], Tensor[(168), float32], Tensor[(364), int8]) {
    %112 = cast(meta[relay.Constant][8] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
    %113 = reshape(%112, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %114 = @func_9070(%113) /* ty=(Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
    %115 = @func_8793() /* ty=(Tensor[(10, 5, 9), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32]) */;
    %116 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
    %117 = cast(%116, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %118 = reshape(%117, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %119 = @func_9671(%118) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
    %120 = %114.1;
    %121 = %115.2;
    %122 = %119.0;
    (%116, %120, meta[relay.Constant][8] /* ty=Tensor[(364), int8] */, %121, %122)
  };
  %123() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(364), int8], Tensor[(168), float32], Tensor[(364), int8]) */
}

def @func_16371() -> (Tensor[(6, 3, 10), float64],) {
  %126 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %124 = @func_7944() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %125 = %124.0;
    (%125,)
  };
  %126() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_16620() -> (Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
  %127 = @func_13385() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %128 = @func_8555() /* ty=Tensor[(273), float64] */;
  %129 = %127.0;
  (%128, %129)
}

def @func_8529() -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  @func_8527() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(364), int8]) */
}

def @func_6452() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  %137 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
    %130 = @func_5893() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) */;
    %131 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
    %132 = cast(%131, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %133 = reshape(%132, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
    %134 = @func_5527(%133) /* ty=(Tensor[(6, 3, 10), bool],) */;
    %135 = %130.0;
    %136 = %134.0;
    (%135, %131, %136)
  };
  %137() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */
}

def @func_15711(%var_15709: Tensor[(14, 66), float64]) -> (Tensor[(364), int8], Tensor[(14, 66), int16]) {
  @func_15708(%var_15709) /* ty=(Tensor[(364), int8], Tensor[(14, 66), int16]) */
}

def @func_15466() -> (Tensor[(180), float64], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
  %142 = fn () -> (Tensor[(180), float64], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
    %138 = @func_9699() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
    %139 = %138.1;
    %140 = @func_10369() /* ty=Tensor[(273), float64] */;
    %141 = @func_15393() /* ty=Tensor[(6, 3, 10), float64] */;
    (%139, %140, %141)
  };
  %142() /* ty=(Tensor[(180), float64], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_5621() -> Tensor[(6, 3, 10), float64] {
  @func_5619() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_9072(%var_9071: Tensor[(364), int8]) -> (Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) {
  %164 = fn (%var_9059: Tensor[(364), int8]) -> (Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) {
    %143 = @func_8199() /* ty=Tensor[(273), float64] */;
    %144 = cast(meta[relay.Constant][9] /* ty=Tensor[(273), float64] */, dtype="float32") /* ty=Tensor[(273), float32] */;
    %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(1), int32] */;
    %146 = cast(%143, dtype="float32") /* ty=Tensor[(273), float32] */;
    %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?), float32] */;
    %148 = cast(meta[relay.Constant][10] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %149 = cast(-5.54874f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %150 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 1352), float32] */, dtype="float32") /* ty=Tensor[(1, 1352), float32] */;
    %151 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 66), uint16] */, dtype="uint16") /* ty=Tensor[(14, 66), uint16] */;
    %152 = cast(meta[relay.Constant][13] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %153 = cast(%var_9059, dtype="int8") /* ty=Tensor[(364), int8] */;
    %154 = reshape(%148, newshape=[14, 9, 8]) /* ty=Tensor[(14, 9, 8), float32] */;
    %155 = reshape(%149, newshape=[]) /* ty=float32 */;
    %156 = reshape(%150, newshape=[13, 104]) /* ty=Tensor[(13, 104), float32] */;
    %157 = reshape(%151, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %158 = reshape(%152, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %159 = reshape(%153, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %160 = @func_2215(%154, %155, %156, %157, %158, %159) /* ty=(Tensor[(14, 9, 8), float32], Tensor[(4, 7, 13), int8], float32, Tensor[(13, 104), float32], Tensor[(924), uint16], Tensor[(56), float64], Tensor[(364), int8]) */;
    %161 = mod(%146, %147) /* ty=Tensor[(273), float32] */;
    %162 = %160.5;
    %163 = @func_8587() /* ty=Tensor[(6, 3, 10), bool] */;
    (%161, %162, meta[relay.Constant][10] /* ty=Tensor[(1008), float32] */, -5.54874f /* ty=float32 */, meta[relay.Constant][11] /* ty=Tensor[(1, 1352), float32] */, meta[relay.Constant][12] /* ty=Tensor[(14, 66), uint16] */, meta[relay.Constant][13] /* ty=Tensor[(56), float64] */, %var_9059, %163)
  };
  %164(%var_9071) /* ty=(Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */
}

def @func_11956() -> Tensor[(364), int8] {
  %166 = fn () -> Tensor[(364), int8] {
    %165 = @func_10729() /* ty=(Tensor[(364), int8],) */;
    %165.0
  };
  %166() /* ty=Tensor[(364), int8] */
}

def @func_13735(%var_13733: Tensor[(1352), float32], %var_13734: Tensor[(126), bool]) -> (Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(168, 2), float64], Tensor[(924), uint16], Tensor[(1352), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(28, 2), bool], Tensor[(8, 7, 2), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(1155), float32], Tensor[(1352), float32], Tensor[(6, 3, 10), bool], Tensor[(48, 2), int64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) {
  @func_13731(%var_13733, %var_13734) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(168, 2), float64], Tensor[(924), uint16], Tensor[(1352), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(28, 2), bool], Tensor[(8, 7, 2), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(1155), float32], Tensor[(1352), float32], Tensor[(6, 3, 10), bool], Tensor[(48, 2), int64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) */
}

def @func_4550() -> Tensor[(6, 3, 10), float64] {
  %167 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %167.2
}

def @func_5571() -> Tensor[(6, 3, 10), float64] {
  @func_5569() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_12820() -> Tensor[(6, 3, 10), float64] {
  %168 = @func_10661() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %168.1
}

def @func_14401() -> (Tensor[(6, 3, 10), float64],) {
  %170 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %169 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
    (%169,)
  };
  %170() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_8385(%var_8383: Tensor[(2, 28), float64], %var_8384: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(2, 28), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64], Tensor[(8, 42), uint16], Tensor[(6, 3, 10), bool], Tensor[(8, 42), float64]) {
  %209 = fn (%var_8334: Tensor[(2, 28), float64], %var_8336: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(2, 28), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64], Tensor[(8, 42), uint16], Tensor[(6, 3, 10), bool], Tensor[(8, 42), float64]) {
    %171 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 42), float64] */, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
    %172 = cast(%var_8334, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
    %173 = cast(meta[relay.Constant][15] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
    %174 = cast(%var_8336, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %175 = reshape(%171, newshape=[4, 7, 12]) /* ty=Tensor[(4, 7, 12), float64] */;
    %176 = reshape(%172, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %177 = reshape(%173, newshape=[13, 104]) /* ty=Tensor[(13, 104), float32] */;
    %178 = reshape(%174, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
    %179 = @func_3035(%175, %176, %177, %178) /* ty=(Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) */;
    %180 = @func_7699() /* ty=(Tensor[(6, 3, 10), float32], Tensor[(1155), float32]) */;
    %181 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 42), float64] */, dtype="float32") /* ty=Tensor[(8, 42), float32] */;
    %182 = log2(%181) /* ty=Tensor[(8, 42), float32] */;
    %183 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 42), float32] */, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
    %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(2), int32] */;
    %185 = cast(%182, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %187 = not_equal(%185, %186) /* ty=Tensor[(8, 42), bool] */;
    %188 = cast(%182, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
    %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(2), int32] */;
    %190 = cast(%187, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
    %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %192 = logical_and(%190, %191) /* ty=Tensor[(8, 42), bool] */;
    %193 = cast(%182, dtype="uint16") /* ty=Tensor[(8, 42), uint16] */;
    %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(2), int32] */;
    %195 = cast(%192, dtype="uint16") /* ty=Tensor[(8, 42), uint16] */;
    %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %197 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
    %198 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 42), bool] */, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
    %199 = shape_of(%192, dtype="int32") /* ty=Tensor[(2), int32] */;
    %200 = cast(%192, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
    %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %202 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
    %203 = %179.0;
    %204 = %180.0;
    %205 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
    %206 = bitwise_or(%195, %196) /* ty=Tensor[(8, 42), uint16] */;
    %207 = %197.2;
    %208 = multiply(%200, %201) /* ty=Tensor[(8, 42), float64] */;
    (%202, %203, %var_8334, meta[relay.Constant][15] /* ty=Tensor[(1352), float32] */, %var_8336, %204, %205, %206, %207, %208)
  };
  %209(%var_8383, %var_8384) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(2, 28), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64], Tensor[(8, 42), uint16], Tensor[(6, 3, 10), bool], Tensor[(8, 42), float64]) */
}

def @func_16707() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  %210 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %212 = reshape(%211, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %213 = @func_9671(%212) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
  %214 = %213.1;
  (%210, %214)
}

def @func_8587() -> Tensor[(6, 3, 10), bool] {
  %215 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
  %215.1
}

def @func_9745() -> (Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  @func_9743() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */
}

def @func_16474() -> (Tensor[(168), float32],) {
  @func_16472() /* ty=(Tensor[(168), float32],) */
}

def @func_15(%var_14: Tensor[(7, 1, 8), float64]) -> Tensor[(7, 1, 8), float64] {
  %217 = fn (%var_0: Tensor[(7, 1, 8), float64]) -> Tensor[(7, 1, 8), float64] {
    %216 = cast(%var_0, dtype="float64") /* ty=Tensor[(7, 1, 8), float64] */;
    sigmoid(%216) /* ty=Tensor[(7, 1, 8), float64] */
  };
  %217(%var_14) /* ty=Tensor[(7, 1, 8), float64] */
}

def @func_8771(%var_8757: Tensor[(6, 16, 12), int16]) -> (Tensor[(6, 16, 12), int16],) {
  %218 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 16, 12), int16] */, dtype="int16") /* ty=Tensor[(6, 16, 12), int16] */;
  %219 = shape_of(%var_8757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%var_8757, dtype="int16") /* ty=Tensor[(6, 16, 12), int16] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %222 = bitwise_or(%220, %221) /* ty=Tensor[(6, 16, 12), int16] */;
  (%222,)
}

def @func_11562() -> Tensor[(6, 3, 10), float64] {
  %223 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %223.0
}

def @func_5124(%var_5113: Tensor[(16, 11, 15), uint8], %var_5114: Tensor[(16, 11, 15), uint8]) -> (Tensor[(16, 11, 15), uint8], Tensor[(6, 3, 10), float64]) {
  %224 = cast(%var_5114, dtype="uint8") /* ty=Tensor[(16, 11, 15), uint8] */;
  %225 = shape_of(%var_5113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%var_5113, dtype="uint8") /* ty=Tensor[(16, 11, 15), uint8] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %228 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %229 = multiply(%226, %227) /* ty=Tensor[(16, 11, 15), uint8] */;
  %230 = %228.0;
  (%229, %230)
}

def @func_6974(%var_6972: Tensor[(8, 3, 4), int64], %var_6973: Tensor[(8, 3, 4), int64]) -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(8, 3, 4), float32]) {
  %245 = fn (%var_6946: Tensor[(8, 3, 4), int64], %var_6947: Tensor[(8, 3, 4), int64]) -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(8, 3, 4), float32]) {
    %231 = cast(meta[relay.Constant][19] /* ty=Tensor[(385, 3), float32] */, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
    %232 = reshape(%231, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
    %233 = cast(%var_6947, dtype="int64") /* ty=Tensor[(8, 3, 4), int64] */;
    %234 = shape_of(%var_6946, dtype="int32") /* ty=Tensor[(3), int32] */;
    %235 = cast(%var_6946, dtype="int64") /* ty=Tensor[(8, 3, 4), int64] */;
    %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %237 = minimum(%235, %236) /* ty=Tensor[(8, 3, 4), int64] */;
    %238 = cast(%var_6946, dtype="float32") /* ty=Tensor[(8, 3, 4), float32] */;
    %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
    %240 = cast(%237, dtype="float32") /* ty=Tensor[(8, 3, 4), float32] */;
    %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %242 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
    %243 = @func_3520(%232) /* ty=Tensor[(7, 11, 15), float32] */;
    %244 = maximum(%240, %241) /* ty=Tensor[(8, 3, 4), float32] */;
    (%242, %243, meta[relay.Constant][19] /* ty=Tensor[(385, 3), float32] */, %244)
  };
  %245(%var_6972, %var_6973) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(8, 3, 4), float32]) */
}

def @func_5737(%var_5733: Tensor[(6, 3, 10), float64], %var_5734: float32, %var_5735: Tensor[(1352), float32], %var_5736: Tensor[(462, 2), uint16]) -> (Tensor[(6, 3, 10), uint8], Tensor[(4, 7, 13), int8], float32, Tensor[(1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(364, 1), int8], Tensor[(6, 3, 10), bool]) {
  @func_5731(%var_5733, %var_5734, %var_5735, %var_5736) /* ty=(Tensor[(6, 3, 10), uint8], Tensor[(4, 7, 13), int8], float32, Tensor[(1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(364, 1), int8], Tensor[(6, 3, 10), bool]) */
}

def @func_12967() -> (Tensor[(6, 3, 10), float64],) {
  @func_12965() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_9959() -> (Tensor[(6, 3, 10), float64], Tensor[(385, 3), int32], Tensor[(1155), float32]) {
  %252 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(385, 3), int32], Tensor[(1155), float32]) {
    %246 = @func_8001() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %247 = cast(meta[relay.Constant][20] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %248 = reshape(%247, newshape=[385, 3]) /* ty=Tensor[(385, 3), float32] */;
    %249 = @func_7593(%248) /* ty=(Tensor[(385, 3), int32],) */;
    %250 = %246.1;
    %251 = %249.0;
    (%250, %251, meta[relay.Constant][20] /* ty=Tensor[(1155), float32] */)
  };
  %252() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(385, 3), int32], Tensor[(1155), float32]) */
}

def @func_5960(%var_5950: Tensor[(364), int8]) -> Tensor[(364), bool] {
  %253 = @func_4441() /* ty=Tensor[(364), int8] */;
  %254 = cast(%var_5950, dtype="bool") /* ty=Tensor[(364), bool] */;
  %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(1), int32] */;
  %256 = cast(%253, dtype="bool") /* ty=Tensor[(364), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?), bool] */;
  logical_and(%256, %257) /* ty=Tensor[(364), bool] */
}

def @func_8556() -> Tensor[(273), float64] {
  %258 = fn () -> Tensor[(273), float64] {
    @func_8199() /* ty=Tensor[(273), float64] */
  };
  %258() /* ty=Tensor[(273), float64] */
}

def @func_12124(%var_12075: Tensor[(1155), float32], %var_12095: Tensor[(273), float32], %var_12096: Tensor[(56), float64]) -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(28, 4), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(364), float64], Tensor[(385, 3), int32], Tensor[(1155), float32], Tensor[(6, 3, 10), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(7, 11, 15), float32], Tensor[(6, 3, 10), float64]) {
  %259 = @func_6770() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %260 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %261 = cast(meta[relay.Constant][21] /* ty=Tensor[(28, 4), float64] */, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %262 = reshape(%261, newshape=[8, 7, 2]) /* ty=Tensor[(8, 7, 2), float64] */;
  %263 = @func_8174(%262) /* ty=(Tensor[(8, 7, 2), float64],) */;
  %264 = @func_8255() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %265 = @func_4441() /* ty=Tensor[(364), int8] */;
  %266 = cast(%265, dtype="float64") /* ty=Tensor[(364), float64] */;
  %267 = cast(%var_12075, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %268 = reshape(%267, newshape=[385, 3]) /* ty=Tensor[(385, 3), float32] */;
  %269 = @func_7593(%268) /* ty=(Tensor[(385, 3), int32],) */;
  %270 = @func_8971() /* ty=Tensor[(6, 3, 10), float64] */;
  %271 = cast(%270, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %272 = cast(%var_12095, dtype="float32") /* ty=Tensor[(273), float32] */;
  %273 = cast(%var_12096, dtype="float64") /* ty=Tensor[(56), float64] */;
  %274 = reshape(%272, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float32] */;
  %275 = reshape(%273, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %276 = @func_153(%274, %275) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) */;
  %277 = %269.0;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
  %279 = reshape(%278, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %280 = @func_10990() /* ty=Tensor[(6, 3, 10), bool] */;
  %281 = %259.1;
  %282 = %260.1;
  %283 = %263.0;
  %284 = @func_8641() /* ty=Tensor[(6, 3, 10), float64] */;
  %285 = %264.0;
  %286 = log2(%266) /* ty=Tensor[(364), float64] */;
  %287 = asinh(%271) /* ty=Tensor[(6, 3, 10), float64] */;
  %288 = %276.0;
  %289 = @func_3520(%279) /* ty=Tensor[(7, 11, 15), float32] */;
  %290 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
  (%280, %281, %282, %283, meta[relay.Constant][21] /* ty=Tensor[(28, 4), float64] */, %284, %285, %286, %277, %var_12075, %287, %288, %var_12095, %var_12096, %289, %290)
}

def @func_6074() -> (Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) {
  @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */
}

def @func_15733() -> (Tensor[(6, 3, 10), float64],) {
  %292 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %291 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
    (%291,)
  };
  %292() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_8326() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_10434(%var_10407: float64, %var_10408: Tensor[(7, 1, 5), float64], %var_10418: Tensor[(7, 3, 5), float64]) -> (Tensor[(7, 1, 5), float64], Tensor[(6, 3, 10), bool], Tensor[(7, 3, 5), int64]) {
  %293 = cast(%var_10407, dtype="float64") /* ty=float64 */;
  %294 = cast(%var_10408, dtype="float64") /* ty=Tensor[(7, 1, 5), float64] */;
  %295 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %296 = cast(%var_10408, dtype="int64") /* ty=Tensor[(7, 1, 5), int64] */;
  %297 = cast(%var_10418, dtype="int64") /* ty=Tensor[(7, 3, 5), int64] */;
  %298 = floor_mod(%293, %294) /* ty=Tensor[(7, 1, 5), float64] */;
  %299 = %295.0;
  %300 = multiply(%296, %297) /* ty=Tensor[(7, 3, 5), int64] */;
  (%298, %299, %300)
}

def @func_7929(%var_7911: Tensor[(924), uint16], %var_7912: Tensor[(39, 7), float32], %var_7913: Tensor[(156), uint8], %var_7924: Tensor[(360), uint64], %var_7925: Tensor[(336), float64], %var_7927: Tensor[(1352, 1), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(156), uint8], Tensor[(924), uint16], Tensor[(39, 7), float32], Tensor[(156), uint8], Tensor[(924), uint16], Tensor[(360), uint64], Tensor[(336), float64], Tensor[(56), float64], Tensor[(1352, 1), float32]) {
  %301 = cast(%var_7911, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %302 = cast(%var_7912, dtype="float32") /* ty=Tensor[(39, 7), float32] */;
  %303 = cast(%var_7913, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %304 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
  %305 = cast(%304, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %306 = reshape(%301, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %307 = reshape(%302, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %308 = reshape(%303, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %309 = reshape(%305, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %310 = @func_5275(%306, %307, %308, %309) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %311 = cast(%var_7924, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %312 = cast(%var_7924, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %313 = cast(%var_7925, dtype="float64") /* ty=Tensor[(336), float64] */;
  %314 = cast(meta[relay.Constant][22] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %315 = cast(%var_7927, dtype="float32") /* ty=Tensor[(1352, 1), float32] */;
  %316 = cast(%var_7911, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %317 = reshape(%311, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %318 = reshape(%312, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %319 = reshape(%313, newshape=[8, 42]) /* ty=Tensor[(8, 42), float64] */;
  %320 = reshape(%314, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %321 = reshape(%315, newshape=[26, 52]) /* ty=Tensor[(26, 52), float32] */;
  %322 = reshape(%316, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %323 = @func_4807(%317, %318, %319, %320, %321, %322) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */;
  %324 = %310.4;
  %325 = %323.5;
  (%304, %324, %var_7911, %var_7912, %var_7913, %325, %var_7924, %var_7925, meta[relay.Constant][22] /* ty=Tensor[(56), float64] */, %var_7927)
}

def @func_5781(%var_5779: Tensor[(924), uint16], %var_5780: Tensor[(78, 2), uint8]) -> (Tensor[(364), int8], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(78, 2), uint8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64]) {
  %339 = fn (%var_5750: Tensor[(924), uint16], %var_5752: Tensor[(78, 2), uint8]) -> (Tensor[(364), int8], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(78, 2), uint8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64]) {
    %326 = cast(%var_5750, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %327 = cast(meta[relay.Constant][23] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
    %328 = cast(%var_5752, dtype="uint8") /* ty=Tensor[(78, 2), uint8] */;
    %329 = cast(meta[relay.Constant][24] /* ty=Tensor[(180, 1), float64] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %330 = reshape(%326, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %331 = reshape(%327, newshape=[273]) /* ty=Tensor[(273), float32] */;
    %332 = reshape(%328, newshape=[156]) /* ty=Tensor[(156), uint8] */;
    %333 = reshape(%329, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
    %334 = @func_5275(%330, %331, %332, %333) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
    %335 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
    %336 = @func_4441() /* ty=Tensor[(364), int8] */;
    %337 = %334.0;
    %338 = %335.0;
    (%336, %337, %var_5750, meta[relay.Constant][23] /* ty=Tensor[(273), float32] */, %var_5752, meta[relay.Constant][24] /* ty=Tensor[(180, 1), float64] */, %338)
  };
  %339(%var_5779, %var_5780) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(78, 2), uint8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_9827(%var_9825: Tensor[(48, 1), float64]) -> (Tensor[(180), float64], Tensor[(156), uint8], Tensor[(48, 1), float64]) {
  @func_9824(%var_9825) /* ty=(Tensor[(180), float64], Tensor[(156), uint8], Tensor[(48, 1), float64]) */
}

def @func_5569() -> Tensor[(6, 3, 10), float64] {
  %340 = @func_5451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %340.0
}

def @func_9574(%var_9572: bool, %var_9573: Tensor[(14, 1, 9), bool]) -> Tensor[(14, 1, 9), bool] {
  @func_9570(%var_9572, %var_9573) /* ty=Tensor[(14, 1, 9), bool] */
}

def @func_7946() -> (Tensor[(6, 3, 10), float64],) {
  @func_7944() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_13034(%var_13033: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8], Tensor[(6, 3, 10), float64]) {
  %349 = fn (%var_13028: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8], Tensor[(6, 3, 10), float64]) {
    %341 = @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %342 = cast(%var_13028, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
    %343 = reshape(%342, newshape=[2640]) /* ty=Tensor[(2640), uint8] */;
    %344 = @func_7326(%343) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8]) */;
    %345 = @func_6451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
    %346 = %341.3;
    %347 = %344.1;
    %348 = %345.1;
    (%346, %347, %var_13028, %348)
  };
  %349(%var_13033) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8], Tensor[(6, 3, 10), float64]) */
}

def @func_6771() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %354 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
    %350 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
    %351 = @func_6451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
    %352 = %350.2;
    %353 = %351.1;
    (%352, %353)
  };
  %354() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_16172() -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(273), float32]) {
  %363 = fn () -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(273), float32]) {
    %355 = @func_9001() /* ty=(Tensor[(6, 3, 10), bool],) */;
    %356 = @func_13859() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %357 = @func_11854() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */;
    %358 = %357.2;
    %359 = cast(%358, dtype="float32") /* ty=Tensor[(273), float32] */;
    %360 = %355.0;
    %361 = %356.0;
    %362 = rsqrt(%359) /* ty=Tensor[(273), float32] */;
    (%360, %361, %362)
  };
  %363() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(273), float32]) */
}

def @func_16472() -> (Tensor[(168), float32],) {
  %364 = @func_11626() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(364), int8], Tensor[(168), float32], Tensor[(364), int8]) */;
  %365 = %364.3;
  (%365,)
}

def @func_15180(%var_15129: Tensor[(273), float32], %var_15156: Tensor[(1232), float64]) -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(?, 273), float64], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) {
  %366 = @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %367 = @func_10729() /* ty=(Tensor[(364), int8],) */;
  %368 = %366.1;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %370 = reshape(%369, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %371 = @func_9671(%370) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
  %372 = cast(meta[relay.Constant][25] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %373 = cast(%var_15129, dtype="float32") /* ty=Tensor[(273), float32] */;
  %374 = reshape(%372, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %375 = reshape(%373, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %376 = @func_4339(%374, %375) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */;
  %377 = cast(%var_15156, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %378 = reshape(%377, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float64] */;
  %379 = @func_10531(%378) /* ty=(Tensor[(14, 8, 11), float64], Tensor[(14, 8, 11), float32]) */;
  %380 = %367.0;
  %381 = %371.1;
  %382 = %376.3;
  %383 = %379.0;
  (%368, %380, %381, %382, meta[relay.Constant][25] /* ty=Tensor[(924), uint16] */, %var_15129, %383, %var_15156)
}

def @func_13120() -> Tensor[(6, 3, 10), bool] {
  %384 = @func_9001() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %384.0
}

def @func_5908() -> (Tensor[(6, 3, 10), float64],) {
  %387 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %385 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %386 = %385.2;
    (%386,)
  };
  %387() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_14522() -> (Tensor[(6, 3, 10), float64],) {
  @func_14520() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_16432() -> (Tensor[(6, 3, 10), bool], Tensor[(2640), uint8], Tensor[(12, 220), uint8]) {
  %388 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %389 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 220), uint8] */, dtype="uint8") /* ty=Tensor[(12, 220), uint8] */;
  %390 = reshape(%389, newshape=[2640]) /* ty=Tensor[(2640), uint8] */;
  %391 = @func_7326(%390) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8]) */;
  %392 = %388.2;
  %393 = %391.2;
  (%392, %393, meta[relay.Constant][26] /* ty=Tensor[(12, 220), uint8] */)
}

def @func_15393() -> Tensor[(6, 3, 10), float64] {
  %394 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %394.0
}

def @func_6175() -> (Tensor[(6, 3, 10), bool],) {
  %402 = fn () -> (Tensor[(6, 3, 10), bool],) {
    %395 = @func_5451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %396 = %395.1;
    %397 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 3, 10), float64] */, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
    %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
    %399 = cast(%396, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
    %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %401 = not_equal(%399, %400) /* ty=Tensor[(6, 3, 10), bool] */;
    (%401,)
  };
  %402() /* ty=(Tensor[(6, 3, 10), bool],) */
}

def @func_8142(%var_8141: Tensor[(8, 7, 11), uint8]) -> (Tensor[(8, 7, 11), uint8],) {
  %408 = fn (%var_8126: Tensor[(8, 7, 11), uint8]) -> (Tensor[(8, 7, 11), uint8],) {
    %403 = cast(%var_8126, dtype="uint8") /* ty=Tensor[(8, 7, 11), uint8] */;
    %404 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(8, 7, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %405 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 7, 11), uint8] */, dtype="uint8") /* ty=Tensor[(8, 7, 11), uint8] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %407 = bitwise_and(%405, %406) /* ty=Tensor[(8, 7, 11), uint8] */;
    (%407,)
  };
  %408(%var_8141) /* ty=(Tensor[(8, 7, 11), uint8],) */
}

def @func_11380(%var_11371: Tensor[(126), bool]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) {
  %409 = @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %410 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %411 = cast(%var_11371, dtype="bool") /* ty=Tensor[(126), bool] */;
  %412 = reshape(%410, newshape=[]) /* ty=bool */;
  %413 = reshape(%411, newshape=[14, 1, 9]) /* ty=Tensor[(14, 1, 9), bool] */;
  %414 = %409.0;
  %415 = @func_8587() /* ty=Tensor[(6, 3, 10), bool] */;
  %416 = @func_7477() /* ty=Tensor[(6, 3, 10), float64] */;
  %417 = @func_9570(%412, %413) /* ty=Tensor[(14, 1, 9), bool] */;
  (%414, %415, %416, %417, False /* ty=bool */, %var_11371)
}

def @func_5496() -> Tensor[(6, 3, 10), float64] {
  @func_5494() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_13012() -> (Tensor[(6, 3, 10), float32],) {
  %418 = @func_5893() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) */;
  %419 = %418.1;
  (%419,)
}

def @func_15920(%var_15888: Tensor[(156), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(273), float32], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
  %420 = cast(%var_15888, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %421 = cast(%var_15888, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %422 = reshape(%420, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %423 = reshape(%421, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %424 = @func_9467(%422, %423) /* ty=(Tensor[(364), int8], Tensor[(273), float32], Tensor[(156), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %425 = @func_12773() /* ty=(Tensor[(273), float64],) */;
  %426 = @func_8467() /* ty=Tensor[(6, 3, 10), float64] */;
  %427 = %424.1;
  %428 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  %429 = %425.0;
  (%426, %427, %var_15888, %428, %429)
}

def @func_10251() -> Tensor[(10, 5, 9), float32] {
  @func_5812() /* ty=Tensor[(10, 5, 9), float32] */
}

def @func_11153(%var_11151: Tensor[(1155), float32], %var_11152: Tensor[(48, 2), int64]) -> (Tensor[(273), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(48, 2), int64]) {
  %445 = fn (%var_11086: Tensor[(1155), float32], %var_11122: Tensor[(48, 2), int64]) -> (Tensor[(273), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(48, 2), int64]) {
    %430 = cast(%var_11086, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %431 = reshape(%430, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
    %432 = @func_11047() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(924), uint16]) */;
    %433 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
    %434 = cast(%var_11122, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
    %435 = cast(%var_11122, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
    %436 = reshape(%434, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), int64] */;
    %437 = reshape(%435, newshape=[8, 3, 4]) /* ty=Tensor[(8, 3, 4), int64] */;
    %438 = @func_6971(%436, %437) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(8, 3, 4), float32]) */;
    %439 = @func_8555() /* ty=Tensor[(273), float64] */;
    %440 = @func_3520(%431) /* ty=Tensor[(7, 11, 15), float32] */;
    %441 = %432.2;
    %442 = %433.2;
    %443 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
    %444 = %438.0;
    (%439, %440, %var_11086, %441, %442, %443, %444, %var_11122)
  };
  %445(%var_11151, %var_11152) /* ty=(Tensor[(273), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(48, 2), int64]) */
}

def @func_14294() -> Tensor[(6, 3, 10), float64] {
  @func_14292() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_12873() -> (Tensor[(6, 3, 10), float64],) {
  %448 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %446 = @func_6451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
    %447 = %446.1;
    (%447,)
  };
  %448() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_13731(%var_13656: Tensor[(1352), float32], %var_13729: Tensor[(126), bool]) -> (Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(168, 2), float64], Tensor[(924), uint16], Tensor[(1352), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(28, 2), bool], Tensor[(8, 7, 2), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(1155), float32], Tensor[(1352), float32], Tensor[(6, 3, 10), bool], Tensor[(48, 2), int64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) {
  %449 = cast(meta[relay.Constant][32] /* ty=Tensor[(1352), float32] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %450 = shape_of(%var_13656, dtype="int32") /* ty=Tensor[(1), int32] */;
  %451 = cast(%var_13656, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?), float64] */;
  %453 = cast(meta[relay.Constant][30] /* ty=Tensor[(168, 2), float64] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %454 = cast(meta[relay.Constant][29] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %455 = cast(meta[relay.Constant][29] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %456 = cast(meta[relay.Constant][30] /* ty=Tensor[(168, 2), float64] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %457 = cast(meta[relay.Constant][33] /* ty=Tensor[(28, 2), float64] */, dtype="float64") /* ty=Tensor[(28, 2), float64] */;
  %458 = cast(%var_13656, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %459 = cast(meta[relay.Constant][31] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %460 = reshape(%454, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %461 = reshape(%455, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %462 = reshape(%456, newshape=[8, 42]) /* ty=Tensor[(8, 42), float64] */;
  %463 = reshape(%457, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %464 = reshape(%458, newshape=[26, 52]) /* ty=Tensor[(26, 52), float32] */;
  %465 = reshape(%459, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %466 = @func_4807(%460, %461, %462, %463, %464, %465) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */;
  %467 = %466.3;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(56), float64] */;
  %469 = cast(meta[relay.Constant][32] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %470 = cast(meta[relay.Constant][31] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %471 = reshape(%453, newshape=[4, 7, 12]) /* ty=Tensor[(4, 7, 12), float64] */;
  %472 = reshape(%468, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %473 = reshape(%469, newshape=[13, 104]) /* ty=Tensor[(13, 104), float32] */;
  %474 = reshape(%470, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %475 = @func_3035(%471, %472, %473, %474) /* ty=(Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) */;
  %476 = cast(%467, dtype="bool") /* ty=Tensor[(56), bool] */;
  %477 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(28, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %478 = cast(meta[relay.Constant][33] /* ty=Tensor[(28, 2), float64] */, dtype="bool") /* ty=Tensor[(28, 2), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %480 = @func_9110() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(112), float64]) */;
  %481 = @func_8222() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %482 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
  %483 = cast(meta[relay.Constant][32] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %484 = %482.0;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %486 = cast(meta[relay.Constant][34] /* ty=Tensor[(48, 2), int64] */, dtype="int64") /* ty=Tensor[(48, 2), int64] */;
  %487 = reshape(%485, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %488 = reshape(%486, newshape=[48, 2]) /* ty=Tensor[(48, 2), int64] */;
  %489 = @func_11150(%487, %488) /* ty=(Tensor[(273), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(48, 2), int64]) */;
  %490 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %491 = cast(%var_13729, dtype="bool") /* ty=Tensor[(126), bool] */;
  %492 = reshape(%490, newshape=[]) /* ty=bool */;
  %493 = reshape(%491, newshape=[14, 1, 9]) /* ty=Tensor[(14, 1, 9), bool] */;
  %494 = @func_8641() /* ty=Tensor[(6, 3, 10), float64] */;
  %495 = minimum(%451, %452) /* ty=Tensor[(1352), float64] */;
  %496 = @func_11294() /* ty=Tensor[(6, 3, 10), float64] */;
  %497 = %475.0;
  %498 = greater_equal(%478, %479) /* ty=Tensor[(28, 2), bool] */;
  %499 = %480.1;
  %500 = %481.0;
  %501 = @func_8641() /* ty=Tensor[(6, 3, 10), float64] */;
  %502 = sqrt(%483) /* ty=Tensor[(1352), float32] */;
  %503 = %489.4;
  %504 = @func_9570(%492, %493) /* ty=Tensor[(14, 1, 9), bool] */;
  (%494, meta[relay.Constant][29] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][30] /* ty=Tensor[(168, 2), float64] */, meta[relay.Constant][31] /* ty=Tensor[(924), uint16] */, %495, %496, %497, %498, %499, %500, %501, %484, %502, %503, meta[relay.Constant][34] /* ty=Tensor[(48, 2), int64] */, %504, False /* ty=bool */, %var_13729)
}

def @func_10704(%var_10687: Tensor[(360, 1), uint64], %var_10691: Tensor[(924), uint16], %var_10693: Tensor[(10, 5, 9), float32]) -> (Tensor[(7, 3, 13), bool], Tensor[(360, 1), uint64], Tensor[(2, 168), float64], Tensor[(56), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(10, 5, 9), float32]) {
  %505 = cast(%var_10687, dtype="uint64") /* ty=Tensor[(360, 1), uint64] */;
  %506 = cast(%var_10687, dtype="uint64") /* ty=Tensor[(360, 1), uint64] */;
  %507 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 168), float64] */, dtype="float64") /* ty=Tensor[(2, 168), float64] */;
  %508 = cast(meta[relay.Constant][36] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %509 = cast(meta[relay.Constant][37] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %510 = cast(%var_10691, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %511 = reshape(%505, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %512 = reshape(%506, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
  %513 = reshape(%507, newshape=[8, 42]) /* ty=Tensor[(8, 42), float64] */;
  %514 = reshape(%508, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %515 = reshape(%509, newshape=[26, 52]) /* ty=Tensor[(26, 52), float32] */;
  %516 = reshape(%510, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %517 = @func_4807(%511, %512, %513, %514, %515, %516) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */;
  %518 = @func_5812() /* ty=Tensor[(10, 5, 9), float32] */;
  %519 = cast(%var_10693, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%518, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %523 = %517.1;
  %524 = multiply(%521, %522) /* ty=Tensor[(10, 5, 9), float32] */;
  (%523, %var_10687, meta[relay.Constant][35] /* ty=Tensor[(2, 168), float64] */, meta[relay.Constant][36] /* ty=Tensor[(56), float64] */, meta[relay.Constant][37] /* ty=Tensor[(1352), float32] */, %var_10691, %524)
}

def @func_11462() -> Tensor[(7, 11, 15), float32] {
  %525 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %525.1
}

def @func_14277() -> (Tensor[(6, 3, 10), float64],) {
  %528 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %526 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %527 = %526.3;
    (%527,)
  };
  %528() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_13556() -> (Tensor[(3, 13, 11), float64], Tensor[(616), uint8]) {
  @func_13554() /* ty=(Tensor[(3, 13, 11), float64], Tensor[(616), uint8]) */
}

def @func_13554() -> (Tensor[(3, 13, 11), float64], Tensor[(616), uint8]) {
  %529 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %530 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(3, 13, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(3, 13, 11), float64] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %533 = @func_8729() /* ty=(Tensor[(364), int8], Tensor[(8, 7, 11), uint8], Tensor[(616), uint8]) */;
  %534 = mod(%531, %532) /* ty=Tensor[(3, 13, 11), float64] */;
  %535 = %533.2;
  (%534, %535)
}

def @func_7741() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %536 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
  %537 = @func_5569() /* ty=Tensor[(6, 3, 10), float64] */;
  (%536, %537)
}

def @func_7175() -> Tensor[(6, 3, 10), float64] {
  %538 = fn () -> Tensor[(6, 3, 10), float64] {
    @func_5619() /* ty=Tensor[(6, 3, 10), float64] */
  };
  %538() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_14292() -> Tensor[(6, 3, 10), float64] {
  @func_12475() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_5171() -> Tensor[(6, 3, 10), float64] {
  @func_5169() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_14223() -> (Tensor[(13, 4, 5), uint32], Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
  %539 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 4, 5), float64] */, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
  %540 = rsqrt(%539) /* ty=Tensor[(13, 4, 5), float64] */;
  %541 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 4, 5), float64] */, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%540, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %545 = @func_10211() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %546 = minimum(%543, %544) /* ty=Tensor[(13, 4, 5), uint32] */;
  %547 = %545.0;
  %548 = @func_10369() /* ty=Tensor[(273), float64] */;
  (%546, %547, %548)
}

def @func_8222() -> (Tensor[(6, 3, 10), float64],) {
  %549 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %550 = %549.1;
  (%550,)
}

def @func_14091(%var_14081: Tensor[(1152, 1), int16]) -> (Tensor[(168), float32], Tensor[(6, 3, 10), float64], Tensor[(924), uint16], Tensor[(1352), float32], Tensor[(126), bool], Tensor[(6, 3, 10), bool], Tensor[(6, 16, 12), int16], Tensor[(1152, 1), int16]) {
  %551 = @func_8793() /* ty=(Tensor[(10, 5, 9), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32]) */;
  %552 = cast(meta[relay.Constant][41] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %553 = cast(meta[relay.Constant][42] /* ty=Tensor[(126), bool] */, dtype="bool") /* ty=Tensor[(126), bool] */;
  %554 = reshape(%552, newshape=[1352]) /* ty=Tensor[(1352), float32] */;
  %555 = reshape(%553, newshape=[126]) /* ty=Tensor[(126), bool] */;
  %556 = @func_13731(%554, %555) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(168, 2), float64], Tensor[(924), uint16], Tensor[(1352), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(28, 2), bool], Tensor[(8, 7, 2), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(1155), float32], Tensor[(1352), float32], Tensor[(6, 3, 10), bool], Tensor[(48, 2), int64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) */;
  %557 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %558 = cast(%var_14081, dtype="int16") /* ty=Tensor[(1152, 1), int16] */;
  %559 = reshape(%558, newshape=[6, 16, 12]) /* ty=Tensor[(6, 16, 12), int16] */;
  %560 = @func_8771(%559) /* ty=(Tensor[(6, 16, 12), int16],) */;
  %561 = %551.2;
  %562 = @func_5619() /* ty=Tensor[(6, 3, 10), float64] */;
  %563 = %556.3;
  %564 = %557.0;
  %565 = %560.0;
  (%561, %562, %563, meta[relay.Constant][41] /* ty=Tensor[(1352), float32] */, meta[relay.Constant][42] /* ty=Tensor[(126), bool] */, %564, %565, %var_14081)
}

def @func_13594() -> (Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
  %570 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
    %566 = @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %567 = @func_12773() /* ty=(Tensor[(273), float64],) */;
    %568 = %566.3;
    %569 = %567.0;
    (%568, %569)
  };
  %570() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(273), float64]) */
}

def @func_7099(%var_7095: Tensor[(1155), float32], %var_7096: Tensor[(924), uint16], %var_7097: Tensor[(273), float32], %var_7098: Tensor[(6, 273), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 273), float64], Tensor[(6, 273), bool]) {
  %592 = fn (%var_7028: Tensor[(1155), float32], %var_7042: Tensor[(924), uint16], %var_7043: Tensor[(273), float32], %var_7089: Tensor[(6, 273), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 273), float64], Tensor[(6, 273), bool]) {
    %571 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
    %572 = cast(%var_7028, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %573 = reshape(%572, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
    %574 = @func_5380(%573) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float32], Tensor[(56), float64], float32, Tensor[(56), float64], Tensor[(4, 7, 13), int8], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
    %575 = cast(%var_7042, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %576 = cast(%var_7043, dtype="float32") /* ty=Tensor[(273), float32] */;
    %577 = %574.4;
    %578 = cast(%577, dtype="float64") /* ty=Tensor[(56), float64] */;
    %579 = reshape(%575, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), uint16] */;
    %580 = reshape(%576, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
    %581 = reshape(%578, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %582 = @func_728(%579, %580, %581) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */;
    %583 = %582.2;
    %584 = cast(%583, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
    %585 = atan(%584) /* ty=Tensor[(1, 273), float32] */;
    %586 = cast(%585, dtype="float64") /* ty=Tensor[(1, 273), float64] */;
    %587 = cast(%585, dtype="bool") /* ty=Tensor[(1, 273), bool] */;
    %588 = cast(%var_7089, dtype="bool") /* ty=Tensor[(6, 273), bool] */;
    %589 = %571.2;
    %590 = erf(%586) /* ty=Tensor[(1, 273), float64] */;
    %591 = equal(%587, %588) /* ty=Tensor[(6, 273), bool] */;
    (%589, %577, %var_7028, %var_7042, %var_7043, %590, %591)
  };
  %592(%var_7095, %var_7096, %var_7097, %var_7098) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(1155), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 273), float64], Tensor[(6, 273), bool]) */
}

def @func_12822() -> Tensor[(6, 3, 10), float64] {
  @func_12820() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_8972() -> Tensor[(6, 3, 10), float64] {
  %594 = fn () -> Tensor[(6, 3, 10), float64] {
    %593 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
    %593.1
  };
  %594() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_13861() -> (Tensor[(6, 3, 10), float64],) {
  @func_13859() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_10439(%var_10436: float64, %var_10437: Tensor[(7, 1, 5), float64], %var_10438: Tensor[(7, 3, 5), float64]) -> (Tensor[(7, 1, 5), float64], Tensor[(6, 3, 10), bool], Tensor[(7, 3, 5), int64]) {
  @func_10434(%var_10436, %var_10437, %var_10438) /* ty=(Tensor[(7, 1, 5), float64], Tensor[(6, 3, 10), bool], Tensor[(7, 3, 5), int64]) */
}

def @func_15515() -> Tensor[(273), float64] {
  @func_10369() /* ty=Tensor[(273), float64] */
}

def @func_6646() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_9570(%var_9558: bool, %var_9559: Tensor[(14, 1, 9), bool]) -> Tensor[(14, 1, 9), bool] {
  %595 = cast(%var_9558, dtype="bool") /* ty=bool */;
  %596 = cast(%var_9559, dtype="bool") /* ty=Tensor[(14, 1, 9), bool] */;
  logical_or(%595, %596) /* ty=Tensor[(14, 1, 9), bool] */
}

def @func_5280(%var_5276: Tensor[(924), uint16], %var_5277: Tensor[(273), float32], %var_5278: Tensor[(156), uint8], %var_5279: Tensor[(6, 3, 10), float64]) -> (Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) {
  %617 = fn (%var_5240: Tensor[(924), uint16], %var_5241: Tensor[(273), float32], %var_5246: Tensor[(156), uint8], %var_5269: Tensor[(6, 3, 10), float64]) -> (Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) {
    %597 = cast(%var_5240, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %598 = cast(%var_5241, dtype="float32") /* ty=Tensor[(273), float32] */;
    %599 = reshape(%597, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %600 = reshape(%598, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
    %601 = @func_4339(%599, %600) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */;
    %602 = cast(%var_5246, dtype="uint8") /* ty=Tensor[(156), uint8] */;
    %603 = cast(%var_5246, dtype="uint8") /* ty=Tensor[(156), uint8] */;
    %604 = reshape(%602, newshape=[13, 12, 1]) /* ty=Tensor[(13, 12, 1), uint8] */;
    %605 = reshape(%603, newshape=[13, 12, 1]) /* ty=Tensor[(13, 12, 1), uint8] */;
    %606 = @func_1960(%604, %605) /* ty=(Tensor[(13, 12, ?), uint8],) */;
    %607 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
    %608 = %607.0;
    %609 = cast(%var_5269, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
    %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %611 = cast(%608, dtype="bool") /* ty=Tensor[(6, 3, 10), bool] */;
    %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %613 = %601.1;
    %614 = %606.0;
    %615 = @func_4384() /* ty=Tensor[(364), int8] */;
    %616 = logical_or(%611, %612) /* ty=Tensor[(6, 3, 10), bool] */;
    (%613, %var_5240, %var_5241, %614, %var_5246, %615, %616)
  };
  %617(%var_5276, %var_5277, %var_5278, %var_5279) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */
}

def @func_16558() -> (Tensor[(6, 3, 10), float64],) {
  @func_16556() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_13052() -> Tensor[(7, 11, 15), float64] {
  %623 = fn () -> Tensor[(7, 11, 15), float64] {
    %618 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
    %619 = %618.1;
    %620 = cast(%619, dtype="float64") /* ty=Tensor[(7, 11, 15), float64] */;
    %621 = tan(%620) /* ty=Tensor[(7, 11, 15), float64] */;
    %622 = cast(%621, dtype="float64") /* ty=Tensor[(7, 11, 15), float64] */;
    cos(%622) /* ty=Tensor[(7, 11, 15), float64] */
  };
  %623() /* ty=Tensor[(7, 11, 15), float64] */
}

def @func_5093(%var_5091: float32, %var_5092: Tensor[(56), float64]) -> (Tensor[(364), int8], Tensor[(1, 1352), float32], float32, Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(56), float64]) {
  %638 = fn (%var_5080: float32, %var_5083: Tensor[(56), float64]) -> (Tensor[(364), int8], Tensor[(1, 1352), float32], float32, Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(56), float64]) {
    %624 = @func_4306() /* ty=(Tensor[(364), int8],) */;
    %625 = cast(%var_5080, dtype="float32") /* ty=float32 */;
    %626 = cast(meta[relay.Constant][43] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
    %627 = cast(meta[relay.Constant][44] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %628 = cast(%var_5083, dtype="float64") /* ty=Tensor[(56), float64] */;
    %629 = %624.0;
    %630 = cast(%629, dtype="int8") /* ty=Tensor[(364), int8] */;
    %631 = reshape(%625, newshape=[]) /* ty=float32 */;
    %632 = reshape(%626, newshape=[1, 1352]) /* ty=Tensor[(1, 1352), float32] */;
    %633 = reshape(%627, newshape=[462, 2]) /* ty=Tensor[(462, 2), uint16] */;
    %634 = reshape(%628, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %635 = reshape(%630, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %636 = @func_1845(%631, %632, %633, %634, %635) /* ty=(Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
    %637 = %636.2;
    (%629, %637, %var_5080, meta[relay.Constant][43] /* ty=Tensor[(1352), float32] */, meta[relay.Constant][44] /* ty=Tensor[(924), uint16] */, %var_5083)
  };
  %638(%var_5091, %var_5092) /* ty=(Tensor[(364), int8], Tensor[(1, 1352), float32], float32, Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(56), float64]) */
}

def @func_5494() -> Tensor[(6, 3, 10), float64] {
  %639 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %639.0
}

def @func_9002() -> (Tensor[(6, 3, 10), bool],) {
  %642 = fn () -> (Tensor[(6, 3, 10), bool],) {
    %640 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
    %641 = %640.3;
    (%641,)
  };
  %642() /* ty=(Tensor[(6, 3, 10), bool],) */
}

def @func_9824(%var_9822: Tensor[(48, 1), float64]) -> (Tensor[(180), float64], Tensor[(156), uint8], Tensor[(48, 1), float64]) {
  %643 = @func_9699() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %644 = cast(%var_9822, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %645 = reshape(%644, newshape=[8, 6, 1]) /* ty=Tensor[(8, 6, 1), float64] */;
  %646 = @func_2433(%645) /* ty=(Tensor[(8, 6, ?), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8]) */;
  %647 = %643.1;
  %648 = %646.4;
  (%647, %648, %var_9822)
}

def @func_11048() -> (Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(924), uint16]) {
  %655 = fn () -> (Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(924), uint16]) {
    %649 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
    %650 = cast(meta[relay.Constant][45] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %651 = reshape(%650, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %652 = @func_8105(%651) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(1, 273), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */;
    %653 = %649.1;
    %654 = %652.2;
    (%653, %654, meta[relay.Constant][45] /* ty=Tensor[(924), uint16] */)
  };
  %655() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(924), uint16]) */
}

def @func_6897() -> (Tensor[(273), float64],) {
  %656 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
  %657 = %656.0;
  (%657,)
}

def @func_10661() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %658 = @func_8950() /* ty=Tensor[(6, 3, 10), float64] */;
  %659 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
  %660 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  (%658, %659, %660)
}

def @func_5436(%var_5435: Tensor[(273), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(2, 28), float64], Tensor[(462, 2), uint16], Tensor[(273), float32]) {
  %668 = fn (%var_5424: Tensor[(273), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(2, 28), float64], Tensor[(462, 2), uint16], Tensor[(273), float32]) {
    %661 = cast(meta[relay.Constant][46] /* ty=Tensor[(462, 2), uint16] */, dtype="uint16") /* ty=Tensor[(462, 2), uint16] */;
    %662 = cast(%var_5424, dtype="float32") /* ty=Tensor[(273), float32] */;
    %663 = reshape(%661, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %664 = reshape(%662, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
    %665 = @func_4339(%663, %664) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */;
    %666 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
    %667 = %665.2;
    (%666, %667, meta[relay.Constant][46] /* ty=Tensor[(462, 2), uint16] */, %var_5424)
  };
  %668(%var_5435) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(2, 28), float64], Tensor[(462, 2), uint16], Tensor[(273), float32]) */
}

def @func_10730() -> (Tensor[(364), int8],) {
  %671 = fn () -> (Tensor[(364), int8],) {
    %669 = @func_4306() /* ty=(Tensor[(364), int8],) */;
    %670 = %669.0;
    (%670,)
  };
  %671() /* ty=(Tensor[(364), int8],) */
}

def @func_8105(%var_8094: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(1, 273), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(56), float64]) {
  %672 = cast(%var_8094, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %673 = cast(meta[relay.Constant][47] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %674 = cast(meta[relay.Constant][48] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %675 = reshape(%672, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), uint16] */;
  %676 = reshape(%673, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %677 = reshape(%674, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %678 = @func_728(%675, %676, %677) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */;
  %679 = @func_4654() /* ty=Tensor[(6, 3, 10), float64] */;
  %680 = %678.2;
  (%679, %680, %var_8094, meta[relay.Constant][47] /* ty=Tensor[(273), float32] */, meta[relay.Constant][48] /* ty=Tensor[(56), float64] */)
}

def @func_7347() -> Tensor[(6, 3, 10), float64] {
  %682 = fn () -> Tensor[(6, 3, 10), float64] {
    %681 = @func_6770() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %681.0
  };
  %682() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_6203() -> (Tensor[(6, 3, 10), float64],) {
  %683 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  (%683,)
}

def @func_7892(%var_7887: Tensor[(1, 15, 9), uint32], %var_7888: Tensor[(15, 15, 9), uint32], %var_7889: Tensor[(924), uint16], %var_7890: Tensor[(180, 9), float64], %var_7891: Tensor[(56), float64]) -> (Tensor[(15, 15, 9), uint32], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(336), float64], Tensor[(56), float64], Tensor[(462, 2), bool], Tensor[(180, 9), float64], Tensor[(462, 2), float32], Tensor[(4, 7, 13), int8]) {
  %728 = fn (%var_7794: Tensor[(1, 15, 9), uint32], %var_7795: Tensor[(15, 15, 9), uint32], %var_7803: Tensor[(924), uint16], %var_7813: Tensor[(180, 9), float64], %var_7846: Tensor[(56), float64]) -> (Tensor[(15, 15, 9), uint32], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(336), float64], Tensor[(56), float64], Tensor[(462, 2), bool], Tensor[(180, 9), float64], Tensor[(462, 2), float32], Tensor[(4, 7, 13), int8]) {
    %684 = cast(%var_7794, dtype="uint32") /* ty=Tensor[(1, 15, 9), uint32] */;
    %685 = cast(%var_7795, dtype="uint32") /* ty=Tensor[(15, 15, 9), uint32] */;
    %686 = @func_5907() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %687 = cast(meta[relay.Constant][52] /* ty=Tensor[(180, 1), float64] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %688 = cast(7.5211f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %689 = cast(meta[relay.Constant][49] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
    %690 = cast(%var_7803, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %691 = reshape(%687, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
    %692 = reshape(%688, newshape=[]) /* ty=float32 */;
    %693 = reshape(%689, newshape=[1352]) /* ty=Tensor[(1352), float32] */;
    %694 = reshape(%690, newshape=[462, 2]) /* ty=Tensor[(462, 2), uint16] */;
    %695 = @func_5731(%691, %692, %693, %694) /* ty=(Tensor[(6, 3, 10), uint8], Tensor[(4, 7, 13), int8], float32, Tensor[(1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(364, 1), int8], Tensor[(6, 3, 10), bool]) */;
    %696 = %695.4;
    %697 = cast(meta[relay.Constant][50] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %698 = cast(meta[relay.Constant][50] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %699 = cast(meta[relay.Constant][51] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %700 = cast(%var_7846, dtype="float64") /* ty=Tensor[(56), float64] */;
    %701 = cast(meta[relay.Constant][49] /* ty=Tensor[(1352), float32] */, dtype="float32") /* ty=Tensor[(1352), float32] */;
    %702 = cast(%696, dtype="uint16") /* ty=Tensor[(462, 2), uint16] */;
    %703 = reshape(%697, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
    %704 = reshape(%698, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), uint64] */;
    %705 = reshape(%699, newshape=[8, 42]) /* ty=Tensor[(8, 42), float64] */;
    %706 = reshape(%700, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %707 = reshape(%701, newshape=[26, 52]) /* ty=Tensor[(26, 52), float32] */;
    %708 = reshape(%702, newshape=[924]) /* ty=Tensor[(924), uint16] */;
    %709 = @func_4807(%703, %704, %705, %706, %707, %708) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */;
    %710 = %709.5;
    %711 = cast(%710, dtype="bool") /* ty=Tensor[(924), bool] */;
    %712 = shape_of(%696, dtype="int32") /* ty=Tensor[(2), int32] */;
    %713 = cast(%696, dtype="bool") /* ty=Tensor[(462, 2), bool] */;
    %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %715 = cast(meta[relay.Constant][52] /* ty=Tensor[(180, 1), float64] */, dtype="uint32") /* ty=Tensor[(180, 1), uint32] */;
    %716 = cast(%var_7813, dtype="uint32") /* ty=Tensor[(180, 9), uint32] */;
    %717 = left_shift(%715, %716) /* ty=Tensor[(180, 9), uint32] */;
    %718 = cast(%717, dtype="float64") /* ty=Tensor[(180, 9), float64] */;
    %719 = cast(%696, dtype="float32") /* ty=Tensor[(462, 2), float32] */;
    %720 = cast(7.5211f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %721 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %722 = bitwise_and(%684, %685) /* ty=Tensor[(15, 15, 9), uint32] */;
    %723 = %686.0;
    %724 = less_equal(%713, %714) /* ty=Tensor[(462, 2), bool] */;
    %725 = sin(%718) /* ty=Tensor[(180, 9), float64] */;
    %726 = mod(%719, %720) /* ty=Tensor[(462, 2), float32] */;
    %727 = %721.0;
    (%722, meta[relay.Constant][49] /* ty=Tensor[(1352), float32] */, %var_7803, %723, meta[relay.Constant][50] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][51] /* ty=Tensor[(336), float64] */, %var_7846, %724, %725, %726, %727)
  };
  %728(%var_7887, %var_7888, %var_7889, %var_7890, %var_7891) /* ty=(Tensor[(15, 15, 9), uint32], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float64], Tensor[(360), uint64], Tensor[(336), float64], Tensor[(56), float64], Tensor[(462, 2), bool], Tensor[(180, 9), float64], Tensor[(462, 2), float32], Tensor[(4, 7, 13), int8]) */
}

def @func_8793() -> (Tensor[(10, 5, 9), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32]) {
  %729 = cast(meta[relay.Constant][53] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %730 = reshape(%729, newshape=[2, 12, 7]) /* ty=Tensor[(2, 12, 7), float32] */;
  %731 = @func_7787(%730) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(7, 11, 15), float32], Tensor[(2, 12, 7), float32]) */;
  %732 = @func_5812() /* ty=Tensor[(10, 5, 9), float32] */;
  %733 = %731.0;
  (%732, %733, meta[relay.Constant][53] /* ty=Tensor[(168), float32] */)
}

def @func_8952() -> Tensor[(6, 3, 10), float64] {
  @func_8950() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_13014() -> (Tensor[(6, 3, 10), float32],) {
  @func_13012() /* ty=(Tensor[(6, 3, 10), float32],) */
}

def @func_11855() -> (Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
  %741 = fn () -> (Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
    %734 = @func_10494() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %735 = @func_6897() /* ty=(Tensor[(273), float64],) */;
    %736 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %737 = %734.1;
    %738 = @func_5650() /* ty=Tensor[(364), int8] */;
    %739 = %735.0;
    %740 = %736.1;
    (%737, %738, %739, %740)
  };
  %741() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_4308() -> (Tensor[(364), int8],) {
  @func_4306() /* ty=(Tensor[(364), int8],) */
}

def @func_16134(%var_16130: Tensor[(1352), float32], %var_16131: Tensor[(1, 56), float64], %var_16132: Tensor[(84, 1), float64], %var_16133: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(924), uint16], Tensor[(1, 56), float64], Tensor[(1352), float64], Tensor[(6, 1, 14), float64], Tensor[(84, 1), float64], Tensor[(364), int8]) {
  @func_16128(%var_16130, %var_16131, %var_16132, %var_16133) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(924), uint16], Tensor[(1, 56), float64], Tensor[(1352), float64], Tensor[(6, 1, 14), float64], Tensor[(84, 1), float64], Tensor[(364), int8]) */
}

def @func_7384() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %742 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %743 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %744 = @func_5569() /* ty=Tensor[(6, 3, 10), float64] */;
  %745 = @func_4654() /* ty=Tensor[(6, 3, 10), float64] */;
  (%742, %743, %744, %745)
}

def @func_12150() -> Tensor[(6, 3, 10), float64] {
  @func_4557() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_15037() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(11, 2, 10), float64], Tensor[(364), int8], Tensor[(364), int8]) {
  %758 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(11, 2, 10), float64], Tensor[(364), int8], Tensor[(364), int8]) {
    %746 = @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %747 = cast(meta[relay.Constant][54] /* ty=Tensor[(364), int8] */, dtype="int8") /* ty=Tensor[(364), int8] */;
    %748 = reshape(%747, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %749 = @func_12291(%748) /* ty=(Tensor[(364), uint8], Tensor[(11, 2, 10), float64], Tensor[(220), float64]) */;
    %750 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
    %751 = cast(%750, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %752 = reshape(%751, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %753 = @func_9671(%752) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
    %754 = %746.2;
    %755 = @func_12150() /* ty=Tensor[(6, 3, 10), float64] */;
    %756 = %749.1;
    %757 = %753.0;
    (%750, %754, %755, %756, meta[relay.Constant][54] /* ty=Tensor[(364), int8] */, %757)
  };
  %758() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(11, 2, 10), float64], Tensor[(364), int8], Tensor[(364), int8]) */
}

def @func_733(%var_730: Tensor[(11, 7, 12), uint16], %var_731: Tensor[(1, 273), float32], %var_732: Tensor[(56), float64]) -> (Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) {
  @func_728(%var_730, %var_731, %var_732) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */
}

def @func_6367() -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) {
  %759 = @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %760 = %759.0;
  %761 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %762 = %761.0;
  %763 = cast(%762, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %764 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%760, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %767 = cast(meta[relay.Constant][55] /* ty=Tensor[(385, 3), float32] */, dtype="float32") /* ty=Tensor[(385, 3), float32] */;
  %768 = reshape(%767, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
  %769 = floor_divide(%765, %766) /* ty=Tensor[(6, 3, 10), float64] */;
  %770 = cast(%769, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %771 = reshape(%770, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %772 = @func_5527(%771) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %773 = @func_3520(%768) /* ty=Tensor[(7, 11, 15), float32] */;
  %774 = %772.0;
  (%769, %773, meta[relay.Constant][55] /* ty=Tensor[(385, 3), float32] */, %774)
}

def @func_7655() -> Tensor[(6, 3, 10), float64] {
  @func_4654() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_6841() -> (Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) {
  %779 = fn () -> (Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) {
    %775 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
    %776 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
    %777 = %775.2;
    %778 = %776.0;
    (%777, %778)
  };
  %779() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */
}

def @func_14692(%var_14690: Tensor[(84), float64], %var_14691: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(364), int8], Tensor[(84), float64], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  %793 = fn (%var_14663: Tensor[(84), float64], %var_14664: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(364), int8], Tensor[(84), float64], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
    %780 = @func_11749() /* ty=(Tensor[(6, 3, 10), float32],) */;
    %781 = cast(meta[relay.Constant][56] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %782 = reshape(%781, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
    %783 = cast(%var_14663, dtype="float64") /* ty=Tensor[(84), float64] */;
    %784 = cast(%var_14664, dtype="int8") /* ty=Tensor[(364), int8] */;
    %785 = reshape(%783, newshape=[6, 1, 14]) /* ty=Tensor[(6, 1, 14), float64] */;
    %786 = reshape(%784, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %787 = @func_14045(%785, %786) /* ty=(Tensor[(6, 1, 14), float64], Tensor[(364), int8], Tensor[(364), int8]) */;
    %788 = @func_13593() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(273), float64]) */;
    %789 = %780.0;
    %790 = @func_3520(%782) /* ty=Tensor[(7, 11, 15), float32] */;
    %791 = %787.1;
    %792 = %788.0;
    (%789, %790, meta[relay.Constant][56] /* ty=Tensor[(1155), float32] */, %791, %var_14663, %var_14664, %792)
  };
  %793(%var_14690, %var_14691) /* ty=(Tensor[(6, 3, 10), float32], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(364), int8], Tensor[(84), float64], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */
}

def @func_15374() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_15372() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_14622() -> (Tensor[(6, 3, 10), float64],) {
  %796 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %794 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
    %795 = %794.0;
    (%795,)
  };
  %796() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_1482(%var_1439: Tensor[(13, 8, 13), float32], %var_1471: Tensor[(1, 924), uint16], %var_1473: Tensor[(56), float64]) -> (Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) {
  %797 = cast(%var_1439, dtype="float32") /* ty=Tensor[(13, 8, 13), float32] */;
  %798 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(13, 8, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 8, 13), float32] */, dtype="float32") /* ty=Tensor[(13, 8, 13), float32] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %801 = cast(%var_1471, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %802 = cast(meta[relay.Constant][58] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %803 = cast(%var_1473, dtype="float64") /* ty=Tensor[(56), float64] */;
  %804 = reshape(%801, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), uint16] */;
  %805 = reshape(%802, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %806 = reshape(%803, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %807 = @func_728(%804, %805, %806) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */;
  %808 = power(%799, %800) /* ty=Tensor[(13, 8, 13), float32] */;
  %809 = %807.3;
  (%808, %809, %var_1471, meta[relay.Constant][58] /* ty=Tensor[(273), float32] */, %var_1473)
}

def @func_5652() -> Tensor[(364), int8] {
  @func_5650() /* ty=Tensor[(364), int8] */
}

def @func_5893() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) {
  %810 = @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */;
  %811 = cast(meta[relay.Constant][59] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %812 = reshape(%811, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %813 = @func_5434(%812) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(2, 28), float64], Tensor[(462, 2), uint16], Tensor[(273), float32]) */;
  %814 = @func_5141() /* ty=Tensor[(6, 3, 10), float64] */;
  %815 = %810.3;
  %816 = %813.1;
  (%814, %815, %816, meta[relay.Constant][59] /* ty=Tensor[(273), float32] */)
}

def @func_11890() -> (Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1, 924), uint16], Tensor[(156), uint8]) {
  @func_11888() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1, 924), uint16], Tensor[(156), uint8]) */
}

def @func_13349() -> (Tensor[(364), int8], Tensor[(14, 66), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %817 = @func_4384() /* ty=Tensor[(364), int8] */;
  %818 = cast(%817, dtype="int8") /* ty=Tensor[(364), int8] */;
  %819 = reshape(%818, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %820 = @func_9070(%819) /* ty=(Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %821 = %820.5;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(14, 66), float64] */;
  %823 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %824 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %825 = acos(%822) /* ty=Tensor[(14, 66), float64] */;
  %826 = %823.1;
  %827 = %824.0;
  (%817, %825, %826, %827)
}

def @func_12965() -> (Tensor[(6, 3, 10), float64],) {
  %828 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %829 = %828.0;
  (%829,)
}

def @func_1852(%var_1847: float32, %var_1848: Tensor[(1, 1352), float32], %var_1849: Tensor[(462, 2), uint16], %var_1850: Tensor[(56), float64], %var_1851: Tensor[(364), int8]) -> (Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
  @func_1845(%var_1847, %var_1848, %var_1849, %var_1850, %var_1851) /* ty=(Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */
}

def @func_9743() -> (Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  %830 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %831 = @func_5650() /* ty=Tensor[(364), int8] */;
  %832 = %830.1;
  (%831, %832)
}

def @func_13072() -> (Tensor[(364), int8],) {
  %835 = fn () -> (Tensor[(364), int8],) {
    %833 = @func_11888() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1, 924), uint16], Tensor[(156), uint8]) */;
    %834 = %833.1;
    (%834,)
  };
  %835() /* ty=(Tensor[(364), int8],) */
}

def @func_15260() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %836 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %837 = %836.3;
  %838 = @func_4654() /* ty=Tensor[(6, 3, 10), float64] */;
  (%837, %838)
}

def @func_16333(%var_16332: Tensor[(10, 2, 11), float32]) -> (Tensor[(10, 2, 11), float32], Tensor[(6, 3, 10), float64], Tensor[(1, 126), bool]) {
  %845 = fn (%var_16319: Tensor[(10, 2, 11), float32]) -> (Tensor[(10, 2, 11), float32], Tensor[(6, 3, 10), float64], Tensor[(1, 126), bool]) {
    %839 = cast(%var_16319, dtype="float32") /* ty=Tensor[(10, 2, 11), float32] */;
    %840 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 126), bool] */, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
    %841 = reshape(%840, newshape=[126]) /* ty=Tensor[(126), bool] */;
    %842 = @func_11380(%841) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) */;
    %843 = sigmoid(%839) /* ty=Tensor[(10, 2, 11), float32] */;
    %844 = %842.2;
    (%843, %844, meta[relay.Constant][60] /* ty=Tensor[(1, 126), bool] */)
  };
  %845(%var_16332) /* ty=(Tensor[(10, 2, 11), float32], Tensor[(6, 3, 10), float64], Tensor[(1, 126), bool]) */
}

def @func_11383(%var_11381: Tensor[(126), bool]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) {
  @func_11380(%var_11381) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(14, 1, 9), bool], bool, Tensor[(126), bool]) */
}

def @func_7386() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_14766() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint8]) {
  %854 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint8]) {
    %846 = @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %847 = cast(meta[relay.Constant][61] /* ty=Tensor[(2640), uint8] */, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
    %848 = cast(meta[relay.Constant][61] /* ty=Tensor[(2640), uint8] */, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
    %849 = reshape(%847, newshape=[2640]) /* ty=Tensor[(2640), uint8] */;
    %850 = reshape(%848, newshape=[2640]) /* ty=Tensor[(2640), uint8] */;
    %851 = @func_14598(%849, %850) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint16]) */;
    %852 = %846.0;
    %853 = %851.0;
    (%852, %853, meta[relay.Constant][61] /* ty=Tensor[(2640), uint8] */)
  };
  %854() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint8]) */
}

def @func_5061() -> (Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) {
  @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */
}

def @func_11343() -> (Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64]) {
  @func_11341() /* ty=(Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64]) */
}

def @func_5143() -> Tensor[(6, 3, 10), float64] {
  @func_5141() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_12129(%var_12126: Tensor[(1155), float32], %var_12127: Tensor[(273), float32], %var_12128: Tensor[(56), float64]) -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(28, 4), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(364), float64], Tensor[(385, 3), int32], Tensor[(1155), float32], Tensor[(6, 3, 10), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(7, 11, 15), float32], Tensor[(6, 3, 10), float64]) {
  @func_12124(%var_12126, %var_12127, %var_12128) /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(28, 4), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(364), float64], Tensor[(385, 3), int32], Tensor[(1155), float32], Tensor[(6, 3, 10), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(7, 11, 15), float32], Tensor[(6, 3, 10), float64]) */
}

def @func_7657() -> Tensor[(6, 3, 10), float64] {
  @func_7655() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_14904(%var_14883: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %855 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %856 = @func_7384() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %857 = cast(%var_14883, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %858 = reshape(%857, newshape=[4, 660]) /* ty=Tensor[(4, 660), uint8] */;
  %859 = @func_10075(%858) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(4, 660), float32]) */;
  %860 = @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %861 = %855.0;
  %862 = %856.1;
  %863 = %859.1;
  %864 = %860.2;
  %865 = @func_12475() /* ty=Tensor[(6, 3, 10), float64] */;
  (%861, %862, %863, %var_14883, %864, %865)
}

def @func_15953() -> Tensor[(6, 3, 10), float64] {
  @func_15951() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_12434(%var_12430: Tensor[(1, 10, 9), float32], %var_12431: Tensor[(10, 10, 9), float32], %var_12432: Tensor[(48), float64], %var_12433: Tensor[(364), int8]) -> (Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(13, 12, ?), uint8], Tensor[(48), float64], Tensor[(364), bool], Tensor[(364), int8], Tensor[(10, 10, 9), float32]) {
  @func_12428(%var_12430, %var_12431, %var_12432, %var_12433) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(13, 12, ?), uint8], Tensor[(48), float64], Tensor[(364), bool], Tensor[(364), int8], Tensor[(10, 10, 9), float32]) */
}

def @func_7707() -> Tensor[(156), uint8] {
  %867 = fn () -> Tensor[(156), uint8] {
    %866 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
    %866.1
  };
  %867() /* ty=Tensor[(156), uint8] */
}

def @func_14016() -> Tensor[(6, 3, 10), float32] {
  %868 = fn () -> Tensor[(6, 3, 10), float32] {
    @func_10042() /* ty=Tensor[(6, 3, 10), float32] */
  };
  %868() /* ty=Tensor[(6, 3, 10), float32] */
}

def @func_7479() -> Tensor[(6, 3, 10), float64] {
  @func_7477() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_14598(%var_14557: Tensor[(2640), uint8], %var_14588: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint16]) {
  %869 = @func_14520() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %870 = @func_12965() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %871 = cast(%var_14557, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %872 = reshape(%871, newshape=[4, 660]) /* ty=Tensor[(4, 660), uint8] */;
  %873 = @func_10075(%872) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(4, 660), float32]) */;
  %874 = cast(%var_14588, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %875 = shape_of(%var_14557, dtype="int32") /* ty=Tensor[(1), int32] */;
  %876 = cast(%var_14557, dtype="uint16") /* ty=Tensor[(2640), uint16] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %878 = %869.0;
  %879 = %870.0;
  %880 = %873.0;
  %881 = left_shift(%876, %877) /* ty=Tensor[(2640), uint16] */;
  (%878, %879, %880, %881)
}

def @func_5941() -> (Tensor[(6, 3, 10), float64],) {
  %882 = @func_5619() /* ty=Tensor[(6, 3, 10), float64] */;
  (%882,)
}

def @func_8950() -> Tensor[(6, 3, 10), float64] {
  @func_4654() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_13528() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(7, 11, 15), float64]) {
  %883 = @func_12872() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %884 = @func_5893() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) */;
  %885 = @func_13051() /* ty=Tensor[(7, 11, 15), float64] */;
  %886 = cast(%885, dtype="float64") /* ty=Tensor[(7, 11, 15), float64] */;
  %887 = %883.0;
  %888 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
  %889 = %884.1;
  %890 = acos(%886) /* ty=Tensor[(7, 11, 15), float64] */;
  (%887, %888, %889, %890)
}

def @func_4814(%var_4808: Tensor[(4, 9, 10), uint64], %var_4809: Tensor[(4, 9, 10), uint64], %var_4810: Tensor[(8, 42), float64], %var_4811: Tensor[(56), float64], %var_4812: Tensor[(26, 52), float32], %var_4813: Tensor[(924), uint16]) -> (Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) {
  %906 = fn (%var_4777: Tensor[(4, 9, 10), uint64], %var_4778: Tensor[(4, 9, 10), uint64], %var_4789: Tensor[(8, 42), float64], %var_4790: Tensor[(56), float64], %var_4791: Tensor[(26, 52), float32], %var_4792: Tensor[(924), uint16]) -> (Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) {
    %891 = cast(%var_4778, dtype="bool") /* ty=Tensor[(4, 9, 10), bool] */;
    %892 = shape_of(%var_4777, dtype="int32") /* ty=Tensor[(3), int32] */;
    %893 = cast(%var_4777, dtype="bool") /* ty=Tensor[(4, 9, 10), bool] */;
    %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %895 = cast(%var_4789, dtype="float64") /* ty=Tensor[(8, 42), float64] */;
    %896 = cast(%var_4790, dtype="float64") /* ty=Tensor[(56), float64] */;
    %897 = cast(%var_4791, dtype="float32") /* ty=Tensor[(26, 52), float32] */;
    %898 = cast(%var_4792, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %899 = reshape(%895, newshape=[4, 7, 12]) /* ty=Tensor[(4, 7, 12), float64] */;
    %900 = reshape(%896, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %901 = reshape(%897, newshape=[13, 104]) /* ty=Tensor[(13, 104), float32] */;
    %902 = reshape(%898, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
    %903 = @func_3035(%899, %900, %901, %902) /* ty=(Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) */;
    %904 = not_equal(%893, %894) /* ty=Tensor[(4, 9, 10), bool] */;
    %905 = %903.1;
    (%904, %905, %var_4789, %var_4790, %var_4791, %var_4792)
  };
  %906(%var_4808, %var_4809, %var_4810, %var_4811, %var_4812, %var_4813) /* ty=(Tensor[(4, 9, 10), bool], Tensor[(7, 3, 13), bool], Tensor[(8, 42), float64], Tensor[(56), float64], Tensor[(26, 52), float32], Tensor[(924), uint16]) */
}

def @func_8643() -> Tensor[(6, 3, 10), float64] {
  @func_8641() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_8174(%var_8167: Tensor[(8, 7, 2), float64]) -> (Tensor[(8, 7, 2), float64],) {
  %907 = cast(%var_8167, dtype="float64") /* ty=Tensor[(8, 7, 2), float64] */;
  %908 = sigmoid(%907) /* ty=Tensor[(8, 7, 2), float64] */;
  (%908,)
}

def @func_1487(%var_1484: Tensor[(13, 8, 13), float32], %var_1485: Tensor[(1, 924), uint16], %var_1486: Tensor[(56), float64]) -> (Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) {
  @func_1482(%var_1484, %var_1485, %var_1486) /* ty=(Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */
}

def @func_16709() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  @func_16707() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */
}

def @func_15923(%var_15921: Tensor[(156), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(273), float32], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
  @func_15920(%var_15921) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(273), float32], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(273), float64]) */
}

def @func_8255() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %909 = @func_6451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
  %910 = %909.0;
  %911 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
  (%910, %911)
}

def @func_728(%var_682: Tensor[(11, 7, 12), uint16], %var_724: Tensor[(1, 273), float32], %var_725: Tensor[(56), float64]) -> (Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) {
  %912 = cast(%var_682, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %913 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(11, 7, 12), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 7, 12), uint16] */, dtype="bool") /* ty=Tensor[(11, 7, 12), bool] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %916 = cast(%var_724, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
  %917 = cast(%var_725, dtype="float64") /* ty=Tensor[(56), float64] */;
  %918 = reshape(%916, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float32] */;
  %919 = reshape(%917, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %920 = @func_153(%918, %919) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) */;
  %921 = less(%914, %915) /* ty=Tensor[(11, 7, 12), bool] */;
  %922 = %920.1;
  (%921, %922, %var_724, %var_725)
}

def @func_9111() -> (Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(112), float64]) {
  %929 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(112), float64]) {
    %923 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %924 = cast(meta[relay.Constant][63] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %925 = reshape(%924, newshape=[8, 7, 2]) /* ty=Tensor[(8, 7, 2), float64] */;
    %926 = @func_8174(%925) /* ty=(Tensor[(8, 7, 2), float64],) */;
    %927 = %923.0;
    %928 = %926.0;
    (%927, %928, meta[relay.Constant][63] /* ty=Tensor[(112), float64] */)
  };
  %929() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(8, 7, 2), float64], Tensor[(112), float64]) */
}

def @func_10152() -> (Tensor[(6, 3, 10), float64],) {
  @func_10150() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_13781() -> (Tensor[(7, 11, 15), float32], Tensor[(9, 1, 5), float64], Tensor[(45), float64]) {
  %935 = fn () -> (Tensor[(7, 11, 15), float32], Tensor[(9, 1, 5), float64], Tensor[(45), float64]) {
    %930 = cast(meta[relay.Constant][64] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
    %931 = reshape(%930, newshape=[9, 1, 5]) /* ty=Tensor[(9, 1, 5), float64] */;
    %932 = @func_11004(%931) /* ty=(Tensor[(9, 1, 5), float64],) */;
    %933 = @func_11462() /* ty=Tensor[(7, 11, 15), float32] */;
    %934 = %932.0;
    (%933, %934, meta[relay.Constant][64] /* ty=Tensor[(45), float64] */)
  };
  %935() /* ty=(Tensor[(7, 11, 15), float32], Tensor[(9, 1, 5), float64], Tensor[(45), float64]) */
}

def @func_6506(%var_6504: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float64], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
  @func_6503(%var_6504) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */
}

def @func_6072() -> (Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) {
  %936 = @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */;
  %937 = %936.2;
  %938 = cast(%937, dtype="float64") /* ty=Tensor[(273), float64] */;
  %939 = cast(meta[relay.Constant][65] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %940 = reshape(%939, newshape=[1, 156]) /* ty=Tensor[(1, 156), uint8] */;
  %941 = @func_5931(%940) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 156), uint8]) */;
  %942 = %941.0;
  %943 = cast(%942, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %944 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
  %945 = log2(%938) /* ty=Tensor[(273), float64] */;
  %946 = atan(%943) /* ty=Tensor[(6, 3, 10), float64] */;
  %947 = %944.2;
  (%945, meta[relay.Constant][65] /* ty=Tensor[(156), uint8] */, %946, %947)
}

def @func_10991() -> Tensor[(6, 3, 10), bool] {
  %949 = fn () -> Tensor[(6, 3, 10), bool] {
    %948 = @func_9001() /* ty=(Tensor[(6, 3, 10), bool],) */;
    %948.0
  };
  %949() /* ty=Tensor[(6, 3, 10), bool] */
}

def @func_8467() -> Tensor[(6, 3, 10), float64] {
  @func_4557() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_4947() -> (Tensor[(6, 3, 10), float64],) {
  %951 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %950 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
    (%950,)
  };
  %951() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_9222(%var_9220: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(13, 21), float32], Tensor[(156), uint8]) {
  @func_9219(%var_9220) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(13, 21), float32], Tensor[(156), uint8]) */
}

def @func_14366() -> Tensor[(364), int8] {
  %952 = @func_11626() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(364), int8], Tensor[(168), float32], Tensor[(364), int8]) */;
  %952.4
}

def @func_7700() -> (Tensor[(6, 3, 10), float32], Tensor[(1155), float32]) {
  %958 = fn () -> (Tensor[(6, 3, 10), float32], Tensor[(1155), float32]) {
    %953 = @func_5169() /* ty=Tensor[(6, 3, 10), float64] */;
    %954 = cast(%953, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
    %955 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
    %956 = sigmoid(%954) /* ty=Tensor[(6, 3, 10), float32] */;
    %957 = %955.0;
    (%956, %957)
  };
  %958() /* ty=(Tensor[(6, 3, 10), float32], Tensor[(1155), float32]) */
}

def @func_14520() -> (Tensor[(6, 3, 10), float64],) {
  %959 = @func_12872() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %960 = %959.0;
  (%960,)
}

def @func_10965(%var_10955: Tensor[(11, 2, 10), float64]) -> Tensor[(11, 2, 10), float64] {
  %961 = cast(%var_10955, dtype="float64") /* ty=Tensor[(11, 2, 10), float64] */;
  sigmoid(%961) /* ty=Tensor[(11, 2, 10), float64] */
}

def @func_5943() -> (Tensor[(6, 3, 10), float64],) {
  @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_16584() -> Tensor[(6, 3, 10), float64] {
  %963 = fn () -> Tensor[(6, 3, 10), float64] {
    %962 = @func_14276() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %962.0
  };
  %963() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_14602(%var_14600: Tensor[(2640), uint8], %var_14601: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint16]) {
  @func_14598(%var_14600, %var_14601) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(2640), uint16]) */
}

def @func_16556() -> (Tensor[(6, 3, 10), float64],) {
  %964 = @func_8602() /* ty=Tensor[(6, 3, 10), float64] */;
  (%964,)
}

def @func_9671(%var_9667: Tensor[(180), float64]) -> (Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) {
  %965 = cast(%var_9667, dtype="float64") /* ty=Tensor[(180), float64] */;
  %966 = reshape(%965, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %967 = @func_5527(%966) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %968 = @func_4384() /* ty=Tensor[(364), int8] */;
  %969 = %967.0;
  (%968, %969, %var_9667)
}

def @func_13886() -> Tensor[(364), int8] {
  %970 = @func_11854() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */;
  %970.1
}

def @func_7728() -> (Tensor[(6, 3, 10), float64], Tensor[(154, 6), uint16]) {
  %975 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(154, 6), uint16]) {
    %971 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %972 = @func_5059() /* ty=(Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) */;
    %973 = %971.0;
    %974 = %972.1;
    (%973, %974)
  };
  %975() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(154, 6), uint16]) */
}

def @func_12904() -> (Tensor[(6, 3, 10), float64],) {
  %977 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %976 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
    (%976,)
  };
  %977() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_11971() -> Tensor[(6, 3, 10), float64] {
  @func_11969() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_8774(%var_8772: Tensor[(6, 16, 12), int16]) -> (Tensor[(6, 16, 12), int16],) {
  @func_8771(%var_8772) /* ty=(Tensor[(6, 16, 12), int16],) */
}

def @func_6369() -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) {
  @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */
}

def @func_8589() -> Tensor[(6, 3, 10), bool] {
  @func_8587() /* ty=Tensor[(6, 3, 10), bool] */
}

def @func_10857(%var_10856: Tensor[(11, 11, 4), float32]) -> (Tensor[(11, 11, 4), float32],) {
  %980 = fn (%var_10849: Tensor[(11, 11, 4), float32]) -> (Tensor[(11, 11, 4), float32],) {
    %978 = cast(%var_10849, dtype="float32") /* ty=Tensor[(11, 11, 4), float32] */;
    %979 = exp(%978) /* ty=Tensor[(11, 11, 4), float32] */;
    (%979,)
  };
  %980(%var_10856) /* ty=(Tensor[(11, 11, 4), float32],) */
}

def @main(%var_16840: int32, %var_16841: Tensor[(16, 7, 12), int32]) -> Tensor[(16, 7, 12), bool] {
  %981 = cast(%var_16840, dtype="bool") /* ty=bool */;
  %982 = cast(%var_16841, dtype="bool") /* ty=Tensor[(16, 7, 12), bool] */;
  greater(%981, %982) /* ty=Tensor[(16, 7, 12), bool] */
}

def @func_14049(%var_14047: Tensor[(6, 1, 14), float64], %var_14048: Tensor[(364), int8]) -> (Tensor[(6, 1, 14), float64], Tensor[(364), int8], Tensor[(364), int8]) {
  @func_14045(%var_14047, %var_14048) /* ty=(Tensor[(6, 1, 14), float64], Tensor[(364), int8], Tensor[(364), int8]) */
}

def @func_6503(%var_6498: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float64], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
  %983 = cast(%var_6498, dtype="int8") /* ty=Tensor[(364), int8] */;
  %984 = reshape(%983, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
  %985 = @func_437(%984) /* ty=(Tensor[(4, 7, 13), int8],) */;
  %986 = @func_5619() /* ty=Tensor[(6, 3, 10), float64] */;
  %987 = %985.0;
  (%986, %987, %var_6498)
}

def @func_12589(%var_12571: Tensor[(364), int8]) -> (Tensor[(1155), float32], Tensor[(6, 3, 10), float32], Tensor[(364), bool], Tensor[(364), int8]) {
  %988 = @func_6840() /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), bool]) */;
  %989 = cast(%var_12571, dtype="int8") /* ty=Tensor[(364), int8] */;
  %990 = reshape(%989, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %991 = %988.0;
  %992 = @func_10042() /* ty=Tensor[(6, 3, 10), float32] */;
  %993 = @func_5960(%990) /* ty=Tensor[(364), bool] */;
  (%991, %992, %993, %var_12571)
}

def @func_5812() -> Tensor[(10, 5, 9), float32] {
  %994 = cast(meta[relay.Constant][66] /* ty=Tensor[(10, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  log(%994) /* ty=Tensor[(10, 5, 9), float32] */
}

def @func_9470(%var_9468: Tensor[(156), uint8], %var_9469: Tensor[(156), uint8]) -> (Tensor[(364), int8], Tensor[(273), float32], Tensor[(156), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1009 = fn (%var_9401: Tensor[(156), uint8], %var_9426: Tensor[(156), uint8]) -> (Tensor[(364), int8], Tensor[(273), float32], Tensor[(156), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
    %995 = @func_4306() /* ty=(Tensor[(364), int8],) */;
    %996 = cast(%var_9401, dtype="uint8") /* ty=Tensor[(156), uint8] */;
    %997 = reshape(%996, newshape=[1, 156]) /* ty=Tensor[(1, 156), uint8] */;
    %998 = @func_5931(%997) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(1, 156), uint8]) */;
    %999 = cast(%var_9426, dtype="float64") /* ty=Tensor[(156), float64] */;
    %1000 = shape_of(%var_9401, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1001 = cast(%var_9401, dtype="float64") /* ty=Tensor[(156), float64] */;
    %1002 = dyn.reshape(%999, %1000, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1003 = @func_4772() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */;
    %1004 = %995.0;
    %1005 = %998.3;
    %1006 = mod(%1001, %1002) /* ty=Tensor[(156), float64] */;
    %1007 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
    %1008 = %1003.0;
    (%1004, %1005, %1006, %1007, %1008)
  };
  %1009(%var_9468, %var_9469) /* ty=(Tensor[(364), int8], Tensor[(273), float32], Tensor[(156), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_5128(%var_5126: Tensor[(16, 11, 15), uint8], %var_5127: Tensor[(16, 11, 15), uint8]) -> (Tensor[(16, 11, 15), uint8], Tensor[(6, 3, 10), float64]) {
  @func_5124(%var_5126, %var_5127) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(6, 3, 10), float64]) */
}

def @func_8603() -> Tensor[(6, 3, 10), float64] {
  %1011 = fn () -> Tensor[(6, 3, 10), float64] {
    %1010 = @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %1010.0
  };
  %1011() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_16752() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  @func_16750() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(364), int8]) */
}

def @func_8177(%var_8175: Tensor[(8, 7, 2), float64]) -> (Tensor[(8, 7, 2), float64],) {
  @func_8174(%var_8175) /* ty=(Tensor[(8, 7, 2), float64],) */
}

def @func_11564() -> Tensor[(6, 3, 10), float64] {
  @func_11562() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_4343(%var_4341: Tensor[(924), uint16], %var_4342: Tensor[(1, 273), float32]) -> (Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) {
  @func_4339(%var_4341, %var_4342) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */
}

def @func_15825() -> (Tensor[(6, 3, 10), float64],) {
  %1014 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %1012 = @func_8324() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %1013 = %1012.1;
    (%1013,)
  };
  %1014() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_11750() -> (Tensor[(6, 3, 10), float32],) {
  %1018 = fn () -> (Tensor[(6, 3, 10), float32],) {
    %1015 = @func_11562() /* ty=Tensor[(6, 3, 10), float64] */;
    %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
    %1017 = exp(%1016) /* ty=Tensor[(6, 3, 10), float32] */;
    (%1017,)
  };
  %1018() /* ty=(Tensor[(6, 3, 10), float32],) */
}

def @func_4558() -> Tensor[(6, 3, 10), float64] {
  %1019 = fn () -> Tensor[(6, 3, 10), float64] {
    @func_4550() /* ty=Tensor[(6, 3, 10), float64] */
  };
  %1019() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_8001() -> (Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  %1020 = @func_4441() /* ty=Tensor[(364), int8] */;
  %1021 = @func_5169() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1020, %1021)
}

def @func_4585() -> (Tensor[(6, 3, 10), float64],) {
  %1022 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1022,)
}

def @func_8108(%var_8106: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(1, 273), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(56), float64]) {
  @func_8105(%var_8106) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(1, 273), float32], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */
}

def @func_7595(%var_7594: Tensor[(385, 3), float32]) -> (Tensor[(385, 3), int32],) {
  %1030 = fn (%var_7587: Tensor[(385, 3), float32]) -> (Tensor[(385, 3), int32],) {
    %1023 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
    %1024 = %1023.2;
    %1025 = cast(%var_7587, dtype="int32") /* ty=Tensor[(385, 3), int32] */;
    %1026 = shape_of(%1024, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1027 = cast(%1024, dtype="int32") /* ty=Tensor[(385, 3), int32] */;
    %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %1029 = multiply(%1027, %1028) /* ty=Tensor[(385, 3), int32] */;
    (%1029,)
  };
  %1030(%var_7594) /* ty=(Tensor[(385, 3), int32],) */
}

def @func_8795() -> (Tensor[(10, 5, 9), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32]) {
  @func_8793() /* ty=(Tensor[(10, 5, 9), float32], Tensor[(2, 12, 7), float32], Tensor[(168), float32]) */
}

def @func_12475() -> Tensor[(6, 3, 10), float64] {
  %1031 = @func_5907() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1031.0
}

def @func_7743() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_12774() -> (Tensor[(273), float64],) {
  %1033 = fn () -> (Tensor[(273), float64],) {
    %1032 = @func_8199() /* ty=Tensor[(273), float64] */;
    (%1032,)
  };
  %1033() /* ty=(Tensor[(273), float64],) */
}

def @func_10663() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_10661() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_15324() -> Tensor[(6, 3, 10), float64] {
  %1035 = fn () -> Tensor[(6, 3, 10), float64] {
    %1034 = @func_5907() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %1034.0
  };
  %1035() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_8257() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_8255() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_11888() -> (Tensor[(6, 3, 10), bool], Tensor[(364), int8], Tensor[(364), int8], Tensor[(1, 924), uint16], Tensor[(156), uint8]) {
  %1036 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %1037 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %1038 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 924), uint16] */, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
  %1039 = cast(meta[relay.Constant][68] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %1040 = reshape(%1038, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1041 = reshape(%1039, newshape=[78, 2]) /* ty=Tensor[(78, 2), uint8] */;
  %1042 = @func_5778(%1040, %1041) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(78, 2), uint8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64]) */;
  %1043 = %1036.0;
  %1044 = %1037.0;
  %1045 = %1042.0;
  (%1043, %1044, %1045, meta[relay.Constant][67] /* ty=Tensor[(1, 924), uint16] */, meta[relay.Constant][68] /* ty=Tensor[(156), uint8] */)
}

def @func_13530() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(7, 11, 15), float64]) {
  @func_13528() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(7, 11, 15), float64]) */
}

def @func_4654() -> Tensor[(6, 3, 10), float64] {
  @func_4557() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_12293(%var_12292: Tensor[(364), int8]) -> (Tensor[(364), uint8], Tensor[(11, 2, 10), float64], Tensor[(220), float64]) {
  %1055 = fn (%var_12260: Tensor[(364), int8]) -> (Tensor[(364), uint8], Tensor[(11, 2, 10), float64], Tensor[(220), float64]) {
    %1046 = @func_11955() /* ty=Tensor[(364), int8] */;
    %1047 = cast(%var_12260, dtype="uint8") /* ty=Tensor[(364), uint8] */;
    %1048 = shape_of(%1046, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1049 = cast(%1046, dtype="uint8") /* ty=Tensor[(364), uint8] */;
    %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %1051 = cast(meta[relay.Constant][69] /* ty=Tensor[(220), float64] */, dtype="float64") /* ty=Tensor[(220), float64] */;
    %1052 = reshape(%1051, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float64] */;
    %1053 = left_shift(%1049, %1050) /* ty=Tensor[(364), uint8] */;
    %1054 = @func_10965(%1052) /* ty=Tensor[(11, 2, 10), float64] */;
    (%1053, %1054, meta[relay.Constant][69] /* ty=Tensor[(220), float64] */)
  };
  %1055(%var_12292) /* ty=(Tensor[(364), uint8], Tensor[(11, 2, 10), float64], Tensor[(220), float64]) */
}

def @func_8224() -> (Tensor[(6, 3, 10), float64],) {
  @func_8222() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_1963(%var_1961: Tensor[(13, 12, 1), uint8], %var_1962: Tensor[(13, 12, 1), uint8]) -> (Tensor[(13, 12, ?), uint8],) {
  %1061 = fn (%var_1943: Tensor[(13, 12, 1), uint8], %var_1944: Tensor[(13, 12, 1), uint8]) -> (Tensor[(13, 12, ?), uint8],) {
    %1056 = cast(%var_1944, dtype="uint8") /* ty=Tensor[(13, 12, 1), uint8] */;
    %1057 = shape_of(%var_1943, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1058 = cast(%var_1943, dtype="uint8") /* ty=Tensor[(13, 12, 1), uint8] */;
    %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1060 = multiply(%1058, %1059) /* ty=Tensor[(13, 12, ?), uint8] */;
    (%1060,)
  };
  %1061(%var_1961, %var_1962) /* ty=(Tensor[(13, 12, ?), uint8],) */
}

def @func_8641() -> Tensor[(6, 3, 10), float64] {
  @func_5494() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_15951() -> Tensor[(6, 3, 10), float64] {
  %1062 = @func_8255() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1062.0
}

def @func_10531(%var_10523: Tensor[(14, 8, 11), float64]) -> (Tensor[(14, 8, 11), float64], Tensor[(14, 8, 11), float32]) {
  %1063 = cast(%var_10523, dtype="float64") /* ty=Tensor[(14, 8, 11), float64] */;
  %1064 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(14, 8, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1065 = cast(meta[relay.Constant][70] /* ty=Tensor[(14, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 11), float64] */;
  %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1067 = cast(meta[relay.Constant][70] /* ty=Tensor[(14, 8, 11), float64] */, dtype="float32") /* ty=Tensor[(14, 8, 11), float32] */;
  %1068 = floor_mod(%1065, %1066) /* ty=Tensor[(14, 8, 11), float64] */;
  %1069 = atan(%1067) /* ty=Tensor[(14, 8, 11), float32] */;
  (%1068, %1069)
}

def @func_1845(%var_1818: float32, %var_1828: Tensor[(1, 1352), float32], %var_1829: Tensor[(462, 2), uint16], %var_1830: Tensor[(56), float64], %var_1843: Tensor[(364), int8]) -> (Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) {
  %1070 = cast(%var_1818, dtype="bool") /* ty=bool */;
  %1071 = cast(meta[relay.Constant][71] /* ty=Tensor[(6, 1, 16), float32] */, dtype="bool") /* ty=Tensor[(6, 1, 16), bool] */;
  %1072 = greater_equal(%1070, %1071) /* ty=Tensor[(6, 1, 16), bool] */;
  %1073 = cast(%var_1818, dtype="int32") /* ty=int32 */;
  %1074 = cast(%1072, dtype="int32") /* ty=Tensor[(6, 1, 16), int32] */;
  %1075 = cast(%var_1828, dtype="float32") /* ty=Tensor[(1, 1352), float32] */;
  %1076 = cast(%var_1829, dtype="uint16") /* ty=Tensor[(462, 2), uint16] */;
  %1077 = cast(%var_1830, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1078 = reshape(%1075, newshape=[13, 8, 13]) /* ty=Tensor[(13, 8, 13), float32] */;
  %1079 = reshape(%1076, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %1080 = reshape(%1077, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1081 = @func_1482(%1078, %1079, %1080) /* ty=(Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */;
  %1082 = cast(%var_1818, dtype="bool") /* ty=bool */;
  %1083 = cast(%1072, dtype="bool") /* ty=Tensor[(6, 1, 16), bool] */;
  %1084 = cast(%var_1843, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1085 = reshape(%1084, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), int8] */;
  %1086 = @func_437(%1085) /* ty=(Tensor[(4, 7, 13), int8],) */;
  %1087 = right_shift(%1073, %1074) /* ty=Tensor[(6, 1, 16), int32] */;
  %1088 = %1081.1;
  %1089 = less_equal(%1082, %1083) /* ty=Tensor[(6, 1, 16), bool] */;
  %1090 = %1086.0;
  (%1087, %1088, %var_1828, %var_1829, %var_1830, %1089, %1090, %var_1843)
}

def @func_3520(%var_3502: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
  %1091 = cast(%var_3502, dtype="float32") /* ty=Tensor[(7, 11, 15), float32] */;
  sqrt(%1091) /* ty=Tensor[(7, 11, 15), float32] */
}

def @func_7477() -> Tensor[(6, 3, 10), float64] {
  @func_4654() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_9219(%var_9215: Tensor[(924), uint16]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(13, 21), float32], Tensor[(156), uint8]) {
  %1092 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1093 = cast(%var_9215, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1094 = cast(meta[relay.Constant][72] /* ty=Tensor[(13, 21), float32] */, dtype="float32") /* ty=Tensor[(13, 21), float32] */;
  %1095 = cast(meta[relay.Constant][73] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
  %1096 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
  %1097 = cast(%1096, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1098 = reshape(%1093, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1099 = reshape(%1094, newshape=[273]) /* ty=Tensor[(273), float32] */;
  %1100 = reshape(%1095, newshape=[156]) /* ty=Tensor[(156), uint8] */;
  %1101 = reshape(%1097, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %1102 = @func_5275(%1098, %1099, %1100, %1101) /* ty=(Tensor[(924), uint16], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %1103 = %1092.1;
  %1104 = %1102.0;
  (%1096, %1103, %1104, %var_9215, meta[relay.Constant][72] /* ty=Tensor[(13, 21), float32] */, meta[relay.Constant][73] /* ty=Tensor[(156), uint8] */)
}

def @func_15517() -> Tensor[(273), float64] {
  @func_15515() /* ty=Tensor[(273), float64] */
}

def @func_8053() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_8051() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_8003() -> (Tensor[(364), int8], Tensor[(6, 3, 10), float64]) {
  @func_8001() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */
}

def @func_6465() -> Tensor[(6, 3, 10), float64] {
  %1105 = fn () -> Tensor[(6, 3, 10), float64] {
    @func_5141() /* ty=Tensor[(6, 3, 10), float64] */
  };
  %1105() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_8051() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1106 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1107 = %1106.0;
  %1108 = @func_7477() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1107, %1108)
}

def @func_2435(%var_2434: Tensor[(8, 6, 1), float64]) -> (Tensor[(8, 6, ?), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8]) {
  %1125 = fn (%var_2364: Tensor[(8, 6, 1), float64]) -> (Tensor[(8, 6, ?), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8]) {
    %1109 = cast(%var_2364, dtype="float64") /* ty=Tensor[(8, 6, 1), float64] */;
    %1110 = cos(%1109) /* ty=Tensor[(8, 6, 1), float64] */;
    %1111 = cast(%var_2364, dtype="bool") /* ty=Tensor[(8, 6, 1), bool] */;
    %1112 = shape_of(%1110, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1113 = cast(%1110, dtype="bool") /* ty=Tensor[(8, 6, 1), bool] */;
    %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1115 = cast(meta[relay.Constant][74] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %1116 = reshape(%1115, newshape=[7, 1, 8]) /* ty=Tensor[(7, 1, 8), float64] */;
    %1117 = cast(meta[relay.Constant][75] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
    %1118 = cast(meta[relay.Constant][75] /* ty=Tensor[(156), uint8] */, dtype="uint8") /* ty=Tensor[(156), uint8] */;
    %1119 = reshape(%1117, newshape=[13, 12, 1]) /* ty=Tensor[(13, 12, 1), uint8] */;
    %1120 = reshape(%1118, newshape=[13, 12, 1]) /* ty=Tensor[(13, 12, 1), uint8] */;
    %1121 = @func_1960(%1119, %1120) /* ty=(Tensor[(13, 12, ?), uint8],) */;
    %1122 = less(%1113, %1114) /* ty=Tensor[(8, 6, ?), bool] */;
    %1123 = @func_13(%1116) /* ty=Tensor[(7, 1, 8), float64] */;
    %1124 = %1121.0;
    (%1122, %1123, meta[relay.Constant][74] /* ty=Tensor[(56), float64] */, %1124, meta[relay.Constant][75] /* ty=Tensor[(156), uint8] */)
  };
  %1125(%var_2434) /* ty=(Tensor[(8, 6, ?), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64], Tensor[(13, 12, ?), uint8], Tensor[(156), uint8]) */
}

def @func_10534(%var_10532: Tensor[(14, 8, 11), float64]) -> (Tensor[(14, 8, 11), float64], Tensor[(14, 8, 11), float32]) {
  @func_10531(%var_10532) /* ty=(Tensor[(14, 8, 11), float64], Tensor[(14, 8, 11), float32]) */
}

def @func_8469() -> Tensor[(6, 3, 10), float64] {
  @func_8467() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_8201() -> Tensor[(273), float64] {
  @func_8199() /* ty=Tensor[(273), float64] */
}

def @func_11711(%var_11710: Tensor[(9, 11, 9), float32]) -> (Tensor[(9, 11, 9), float32], Tensor[(364), int8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  %1136 = fn (%var_11648: Tensor[(9, 11, 9), float32]) -> (Tensor[(9, 11, 9), float32], Tensor[(364), int8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
    %1126 = cast(%var_11648, dtype="float32") /* ty=Tensor[(9, 11, 9), float32] */;
    %1127 = cast(meta[relay.Constant][76] /* ty=Tensor[(180, 1), float64] */, dtype="float64") /* ty=Tensor[(180, 1), float64] */;
    %1128 = reshape(%1127, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %1129 = @func_9671(%1128) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
    %1130 = @func_11341() /* ty=(Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64]) */;
    %1131 = @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */;
    %1132 = log(%1126) /* ty=Tensor[(9, 11, 9), float32] */;
    %1133 = %1129.0;
    %1134 = %1130.1;
    %1135 = %1131.2;
    (%1132, %1133, meta[relay.Constant][76] /* ty=Tensor[(180, 1), float64] */, %1134, %1135)
  };
  %1136(%var_11710) /* ty=(Tensor[(9, 11, 9), float32], Tensor[(364), int8], Tensor[(180, 1), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */
}

def @func_15395() -> Tensor[(6, 3, 10), float64] {
  @func_15393() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_10253() -> Tensor[(10, 5, 9), float32] {
  @func_10251() /* ty=Tensor[(10, 5, 9), float32] */
}

def @func_14094(%var_14092: Tensor[(1152, 1), int16]) -> (Tensor[(168), float32], Tensor[(6, 3, 10), float64], Tensor[(924), uint16], Tensor[(1352), float32], Tensor[(126), bool], Tensor[(6, 3, 10), bool], Tensor[(6, 16, 12), int16], Tensor[(1152, 1), int16]) {
  @func_14091(%var_14092) /* ty=(Tensor[(168), float32], Tensor[(6, 3, 10), float64], Tensor[(924), uint16], Tensor[(1352), float32], Tensor[(126), bool], Tensor[(6, 3, 10), bool], Tensor[(6, 16, 12), int16], Tensor[(1152, 1), int16]) */
}

def @func_4552() -> Tensor[(6, 3, 10), float64] {
  @func_4550() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_14225() -> (Tensor[(13, 4, 5), uint32], Tensor[(6, 3, 10), float64], Tensor[(273), float64]) {
  @func_14223() /* ty=(Tensor[(13, 4, 5), uint32], Tensor[(6, 3, 10), float64], Tensor[(273), float64]) */
}

def @func_5731(%var_5700: Tensor[(6, 3, 10), float64], %var_5715: float32, %var_5716: Tensor[(1352), float32], %var_5717: Tensor[(462, 2), uint16]) -> (Tensor[(6, 3, 10), uint8], Tensor[(4, 7, 13), int8], float32, Tensor[(1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(364, 1), int8], Tensor[(6, 3, 10), bool]) {
  %1137 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1138 = %1137.0;
  %1139 = cast(%var_5700, dtype="uint8") /* ty=Tensor[(6, 3, 10), uint8] */;
  %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%1138, dtype="uint8") /* ty=Tensor[(6, 3, 10), uint8] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1143 = cast(%var_5715, dtype="float32") /* ty=float32 */;
  %1144 = cast(%var_5716, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %1145 = cast(%var_5717, dtype="uint16") /* ty=Tensor[(462, 2), uint16] */;
  %1146 = cast(meta[relay.Constant][77] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1147 = cast(meta[relay.Constant][78] /* ty=Tensor[(364, 1), int8] */, dtype="int8") /* ty=Tensor[(364, 1), int8] */;
  %1148 = reshape(%1143, newshape=[]) /* ty=float32 */;
  %1149 = reshape(%1144, newshape=[1, 1352]) /* ty=Tensor[(1, 1352), float32] */;
  %1150 = reshape(%1145, newshape=[462, 2]) /* ty=Tensor[(462, 2), uint16] */;
  %1151 = reshape(%1146, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1152 = reshape(%1147, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %1153 = @func_1845(%1148, %1149, %1150, %1151, %1152) /* ty=(Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
  %1154 = left_shift(%1141, %1142) /* ty=Tensor[(6, 3, 10), uint8] */;
  %1155 = cast(%1154, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %1156 = reshape(%1155, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %1157 = @func_5527(%1156) /* ty=(Tensor[(6, 3, 10), bool],) */;
  %1158 = %1153.6;
  %1159 = %1157.0;
  (%1154, %1158, %var_5715, %var_5716, %var_5717, meta[relay.Constant][77] /* ty=Tensor[(56), float64] */, meta[relay.Constant][78] /* ty=Tensor[(364, 1), int8] */, %1159)
}

def @func_9343(%var_9341: Tensor[(12, 15, 16), uint64]) -> (Tensor[(12, 15, 16), uint64], Tensor[(6, 3, 10), float64]) {
  @func_9340(%var_9341) /* ty=(Tensor[(12, 15, 16), uint64], Tensor[(6, 3, 10), float64]) */
}

def @func_10895() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1163 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
    %1160 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %1161 = %1160.2;
    %1162 = @func_4557() /* ty=Tensor[(6, 3, 10), float64] */;
    (%1161, %1162)
  };
  %1163() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_4504(%var_4503: Tensor[(6, 3, 10), float64]) -> (Tensor[(364), int8], Tensor[(364), int8], Tensor[(6, 3, 10), int64], Tensor[(364), int8], Tensor[(364), int8]) {
  %1179 = fn (%var_4480: Tensor[(6, 3, 10), float64]) -> (Tensor[(364), int8], Tensor[(364), int8], Tensor[(6, 3, 10), int64], Tensor[(364), int8], Tensor[(364), int8]) {
    %1164 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %1165 = @func_4306() /* ty=(Tensor[(364), int8],) */;
    %1166 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %1167 = %1166.2;
    %1168 = cast(%var_4480, dtype="int64") /* ty=Tensor[(6, 3, 10), int64] */;
    %1169 = shape_of(%1167, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1170 = cast(%1167, dtype="int64") /* ty=Tensor[(6, 3, 10), int64] */;
    %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1172 = @func_4306() /* ty=(Tensor[(364), int8],) */;
    %1173 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %1174 = %1164.1;
    %1175 = %1165.0;
    %1176 = bitwise_or(%1170, %1171) /* ty=Tensor[(6, 3, 10), int64] */;
    %1177 = %1172.0;
    %1178 = %1173.1;
    (%1174, %1175, %1176, %1177, %1178)
  };
  %1179(%var_4503) /* ty=(Tensor[(364), int8], Tensor[(364), int8], Tensor[(6, 3, 10), int64], Tensor[(364), int8], Tensor[(364), int8]) */
}

def @func_8731() -> (Tensor[(364), int8], Tensor[(8, 7, 11), uint8], Tensor[(616), uint8]) {
  @func_8729() /* ty=(Tensor[(364), int8], Tensor[(8, 7, 11), uint8], Tensor[(616), uint8]) */
}

def @func_11007(%var_11005: Tensor[(9, 1, 5), float64]) -> (Tensor[(9, 1, 5), float64],) {
  @func_11004(%var_11005) /* ty=(Tensor[(9, 1, 5), float64],) */
}

def @func_6824() -> (Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) {
  @func_6822() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool]) */
}

def @func_4773() -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) {
  %1188 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) {
    %1180 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
    %1181 = cast(%1180, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %1182 = log2(%1181) /* ty=Tensor[(6, 3, 10), float64] */;
    %1183 = cast(%1182, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %1184 = cast(meta[relay.Constant][79] /* ty=Tensor[(1155), float32] */, dtype="float32") /* ty=Tensor[(1155), float32] */;
    %1185 = reshape(%1184, newshape=[7, 11, 15]) /* ty=Tensor[(7, 11, 15), float32] */;
    %1186 = log10(%1183) /* ty=Tensor[(6, 3, 10), float64] */;
    %1187 = @func_3520(%1185) /* ty=Tensor[(7, 11, 15), float32] */;
    (%1186, %1187, meta[relay.Constant][79] /* ty=Tensor[(1155), float32] */)
  };
  %1188() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(1155), float32]) */
}

def @func_3523(%var_3521: Tensor[(7, 11, 15), float32]) -> Tensor[(7, 11, 15), float32] {
  @func_3520(%var_3521) /* ty=Tensor[(7, 11, 15), float32] */
}

def @func_4385() -> Tensor[(364), int8] {
  %1190 = fn () -> Tensor[(364), int8] {
    %1189 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %1189.1
  };
  %1190() /* ty=Tensor[(364), int8] */
}

def @func_13386() -> (Tensor[(6, 3, 10), float64],) {
  %1192 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %1191 = @func_5569() /* ty=Tensor[(6, 3, 10), float64] */;
    (%1191,)
  };
  %1192() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_8454(%var_8453: Tensor[(6, 3, 10), float64]) -> Tensor[(6, 3, 10), uint64] {
  %1199 = fn (%var_8418: Tensor[(6, 3, 10), float64]) -> Tensor[(6, 3, 10), uint64] {
    %1193 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %1194 = %1193.0;
    %1195 = cast(%var_8418, dtype="uint64") /* ty=Tensor[(6, 3, 10), uint64] */;
    %1196 = shape_of(%1194, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1197 = cast(%1194, dtype="uint64") /* ty=Tensor[(6, 3, 10), uint64] */;
    %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    right_shift(%1197, %1198) /* ty=Tensor[(6, 3, 10), uint64] */
  };
  %1199(%var_8453) /* ty=Tensor[(6, 3, 10), uint64] */
}

def @func_13888() -> Tensor[(364), int8] {
  @func_13886() /* ty=Tensor[(364), int8] */
}

def @func_11004(%var_10994: Tensor[(9, 1, 5), float64]) -> (Tensor[(9, 1, 5), float64],) {
  %1200 = cast(%var_10994, dtype="float64") /* ty=Tensor[(9, 1, 5), float64] */;
  %1201 = log10(%1200) /* ty=Tensor[(9, 1, 5), float64] */;
  (%1201,)
}

def @func_6205() -> (Tensor[(6, 3, 10), float64],) {
  @func_6203() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_11464() -> Tensor[(7, 11, 15), float32] {
  @func_11462() /* ty=Tensor[(7, 11, 15), float32] */
}

def @func_11541() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1202 = @func_7300() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1203 = @func_11341() /* ty=(Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64]) */;
  %1204 = %1202.0;
  %1205 = @func_11294() /* ty=Tensor[(6, 3, 10), float64] */;
  %1206 = %1203.1;
  %1207 = @func_4550() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1204, %1205, %1206, %1207)
}

def @func_11543() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_11541() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_5059() -> (Tensor[(364), int8], Tensor[(154, 6), uint16], Tensor[(273), float32], Tensor[(6, 3, 10), float32]) {
  %1208 = cast(meta[relay.Constant][80] /* ty=Tensor[(154, 6), uint16] */, dtype="uint16") /* ty=Tensor[(154, 6), uint16] */;
  %1209 = cast(meta[relay.Constant][81] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
  %1210 = reshape(%1208, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1211 = reshape(%1209, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %1212 = @func_4339(%1210, %1211) /* ty=(Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) */;
  %1213 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1214 = %1213.0;
  %1215 = cast(%1214, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
  %1216 = %1212.0;
  %1217 = sqrt(%1215) /* ty=Tensor[(6, 3, 10), float32] */;
  (%1216, meta[relay.Constant][80] /* ty=Tensor[(154, 6), uint16] */, meta[relay.Constant][81] /* ty=Tensor[(273), float32] */, %1217)
}

def @func_5963(%var_5961: Tensor[(364), int8]) -> Tensor[(364), bool] {
  @func_5960(%var_5961) /* ty=Tensor[(364), bool] */
}

def @func_5895() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) {
  @func_5893() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float32], Tensor[(2, 28), float64], Tensor[(273), float32]) */
}

def @func_10212() -> (Tensor[(6, 3, 10), float64],) {
  %1219 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %1218 = @func_8950() /* ty=Tensor[(6, 3, 10), float64] */;
    (%1218,)
  };
  %1219() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_14815(%var_14794: Tensor[(1155), float32]) -> (Tensor[(6, 3, 10), bool], Tensor[(56), float64], Tensor[(1155), float32]) {
  %1220 = @func_6174() /* ty=(Tensor[(6, 3, 10), bool],) */;
  %1221 = cast(%var_14794, dtype="float32") /* ty=Tensor[(1155), float32] */;
  %1222 = reshape(%1221, newshape=[1155]) /* ty=Tensor[(1155), float32] */;
  %1223 = @func_5380(%1222) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float32], Tensor[(56), float64], float32, Tensor[(56), float64], Tensor[(4, 7, 13), int8], Tensor[(7, 11, 15), float32], Tensor[(1155), float32], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
  %1224 = %1220.0;
  %1225 = %1223.2;
  (%1224, %1225, %var_14794)
}

def @func_156(%var_154: Tensor[(7, 3, 13), float32], %var_155: Tensor[(56), float64]) -> (Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) {
  %1232 = fn (%var_116: Tensor[(7, 3, 13), float32], %var_131: Tensor[(56), float64]) -> (Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) {
    %1226 = cast(0.851169f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %1227 = cast(%var_116, dtype="bool") /* ty=Tensor[(7, 3, 13), bool] */;
    %1228 = cast(%var_131, dtype="float64") /* ty=Tensor[(56), float64] */;
    %1229 = reshape(%1228, newshape=[7, 1, 8]) /* ty=Tensor[(7, 1, 8), float64] */;
    %1230 = greater_equal(%1226, %1227) /* ty=Tensor[(7, 3, 13), bool] */;
    %1231 = @func_13(%1229) /* ty=Tensor[(7, 1, 8), float64] */;
    (%1230, %1231, %var_131)
  };
  %1232(%var_154, %var_155) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) */
}

def @func_8729() -> (Tensor[(364), int8], Tensor[(8, 7, 11), uint8], Tensor[(616), uint8]) {
  %1233 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1234 = cast(meta[relay.Constant][82] /* ty=Tensor[(616), uint8] */, dtype="uint8") /* ty=Tensor[(616), uint8] */;
  %1235 = reshape(%1234, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), uint8] */;
  %1236 = @func_8140(%1235) /* ty=(Tensor[(8, 7, 11), uint8],) */;
  %1237 = %1233.1;
  %1238 = %1236.0;
  (%1237, %1238, meta[relay.Constant][82] /* ty=Tensor[(616), uint8] */)
}

def @func_10968(%var_10966: Tensor[(11, 2, 10), float64]) -> Tensor[(11, 2, 10), float64] {
  @func_10965(%var_10966) /* ty=Tensor[(11, 2, 10), float64] */
}

def @func_8199() -> Tensor[(273), float64] {
  %1239 = @func_6072() /* ty=(Tensor[(273), float64], Tensor[(156), uint8], Tensor[(6, 3, 10), float64], Tensor[(1155), float32]) */;
  %1239.0
}

def @func_5452() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1244 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
    %1240 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %1241 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %1242 = %1240.0;
    %1243 = %1241.2;
    (%1242, %1243)
  };
  %1244() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_10495() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1252 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
    %1245 = @func_9001() /* ty=(Tensor[(6, 3, 10), bool],) */;
    %1246 = @func_5907() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %1247 = @func_10211() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %1248 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
    %1249 = %1245.0;
    %1250 = %1246.0;
    %1251 = %1247.0;
    (%1248, %1249, %1250, %1251)
  };
  %1252() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_14937(%var_14936: Tensor[(12, 9, 9), float32]) -> (Tensor[(12, 9, 9), float32],) {
  %1255 = fn (%var_14909: Tensor[(12, 9, 9), float32]) -> (Tensor[(12, 9, 9), float32],) {
    %1253 = cast(%var_14909, dtype="float32") /* ty=Tensor[(12, 9, 9), float32] */;
    %1254 = erf(%1253) /* ty=Tensor[(12, 9, 9), float32] */;
    (%1254,)
  };
  %1255(%var_14936) /* ty=(Tensor[(12, 9, 9), float32],) */
}

def @func_11295() -> Tensor[(6, 3, 10), float64] {
  %1257 = fn () -> Tensor[(6, 3, 10), float64] {
    %1256 = @func_10150() /* ty=(Tensor[(6, 3, 10), float64],) */;
    %1256.0
  };
  %1257() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_6644() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1258 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1259 = @func_5494() /* ty=Tensor[(6, 3, 10), float64] */;
  %1260 = %1258.0;
  (%1259, %1260)
}

def @func_10150() -> (Tensor[(6, 3, 10), float64],) {
  %1261 = @func_8001() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1262 = %1261.1;
  (%1262,)
}

def @func_2222(%var_2216: Tensor[(14, 9, 8), float32], %var_2217: float32, %var_2218: Tensor[(13, 104), float32], %var_2219: Tensor[(924), uint16], %var_2220: Tensor[(56), float64], %var_2221: Tensor[(364), int8]) -> (Tensor[(14, 9, 8), float32], Tensor[(4, 7, 13), int8], float32, Tensor[(13, 104), float32], Tensor[(924), uint16], Tensor[(56), float64], Tensor[(364), int8]) {
  %1277 = fn (%var_2200: Tensor[(14, 9, 8), float32], %var_2209: float32, %var_2210: Tensor[(13, 104), float32], %var_2211: Tensor[(924), uint16], %var_2212: Tensor[(56), float64], %var_2213: Tensor[(364), int8]) -> (Tensor[(14, 9, 8), float32], Tensor[(4, 7, 13), int8], float32, Tensor[(13, 104), float32], Tensor[(924), uint16], Tensor[(56), float64], Tensor[(364), int8]) {
    %1263 = cast(%var_2200, dtype="float32") /* ty=Tensor[(14, 9, 8), float32] */;
    %1264 = cast(%var_2209, dtype="float32") /* ty=float32 */;
    %1265 = cast(%var_2210, dtype="float32") /* ty=Tensor[(13, 104), float32] */;
    %1266 = cast(%var_2211, dtype="uint16") /* ty=Tensor[(924), uint16] */;
    %1267 = cast(%var_2212, dtype="float64") /* ty=Tensor[(56), float64] */;
    %1268 = cast(%var_2213, dtype="int8") /* ty=Tensor[(364), int8] */;
    %1269 = reshape(%1264, newshape=[]) /* ty=float32 */;
    %1270 = reshape(%1265, newshape=[1, 1352]) /* ty=Tensor[(1, 1352), float32] */;
    %1271 = reshape(%1266, newshape=[462, 2]) /* ty=Tensor[(462, 2), uint16] */;
    %1272 = reshape(%1267, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %1273 = reshape(%1268, newshape=[364]) /* ty=Tensor[(364), int8] */;
    %1274 = @func_1845(%1269, %1270, %1271, %1272, %1273) /* ty=(Tensor[(6, 1, 16), int32], Tensor[(56), float64], Tensor[(1, 1352), float32], Tensor[(462, 2), uint16], Tensor[(56), float64], Tensor[(6, 1, 16), bool], Tensor[(4, 7, 13), int8], Tensor[(364), int8]) */;
    %1275 = acosh(%1263) /* ty=Tensor[(14, 9, 8), float32] */;
    %1276 = %1274.6;
    (%1275, %1276, %var_2209, %var_2210, %var_2211, %var_2212, %var_2213)
  };
  %1277(%var_2216, %var_2217, %var_2218, %var_2219, %var_2220, %var_2221) /* ty=(Tensor[(14, 9, 8), float32], Tensor[(4, 7, 13), int8], float32, Tensor[(13, 104), float32], Tensor[(924), uint16], Tensor[(56), float64], Tensor[(364), int8]) */
}

def @func_14368() -> Tensor[(364), int8] {
  @func_14366() /* ty=Tensor[(364), int8] */
}

def @func_13859() -> (Tensor[(6, 3, 10), float64],) {
  %1278 = @func_7741() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1279 = %1278.0;
  (%1279,)
}

def @func_7326(%var_7323: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8]) {
  %1280 = cast(%var_7323, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %1281 = cast(%var_7323, dtype="uint8") /* ty=Tensor[(2640), uint8] */;
  %1282 = reshape(%1280, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), uint8] */;
  %1283 = reshape(%1281, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), uint8] */;
  %1284 = @func_5124(%1282, %1283) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(6, 3, 10), float64]) */;
  %1285 = @func_5169() /* ty=Tensor[(6, 3, 10), float64] */;
  %1286 = %1284.0;
  (%1285, %1286, %var_7323)
}

def @func_15372() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1287 = @func_5451() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1288 = %1287.1;
  %1289 = @func_7346() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1288, %1289)
}

def @func_6899() -> (Tensor[(273), float64],) {
  @func_6897() /* ty=(Tensor[(273), float64],) */
}

def @func_16622() -> (Tensor[(273), float64], Tensor[(6, 3, 10), float64]) {
  @func_16620() /* ty=(Tensor[(273), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_4339(%var_4324: Tensor[(924), uint16], %var_4325: Tensor[(1, 273), float32]) -> (Tensor[(364), int8], Tensor[(924), uint16], Tensor[(2, 28), float64], Tensor[(?, 273), float64]) {
  %1290 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %1291 = cast(%var_4324, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1292 = cast(%var_4325, dtype="float32") /* ty=Tensor[(1, 273), float32] */;
  %1293 = cast(meta[relay.Constant][83] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %1294 = reshape(%1291, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), uint16] */;
  %1295 = reshape(%1292, newshape=[1, 273]) /* ty=Tensor[(1, 273), float32] */;
  %1296 = reshape(%1293, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1297 = @func_728(%1294, %1295, %1296) /* ty=(Tensor[(11, 7, 12), bool], Tensor[(7, 1, 8), float64], Tensor[(1, 273), float32], Tensor[(56), float64]) */;
  %1298 = %1297.2;
  %1299 = cast(%1298, dtype="float64") /* ty=Tensor[(1, 273), float64] */;
  %1300 = shape_of(%var_4325, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1301 = cast(%var_4325, dtype="float64") /* ty=Tensor[(1, 273), float64] */;
  %1302 = dyn.reshape(%1299, %1300, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1303 = %1290.0;
  %1304 = power(%1301, %1302) /* ty=Tensor[(?, 273), float64] */;
  (%1303, %var_4324, meta[relay.Constant][83] /* ty=Tensor[(2, 28), float64] */, %1304)
}

def @func_15262() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_15260() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_12152() -> Tensor[(6, 3, 10), float64] {
  @func_12150() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_16128(%var_16083: Tensor[(1352), float32], %var_16085: Tensor[(1, 56), float64], %var_16123: Tensor[(84, 1), float64], %var_16124: Tensor[(364), int8]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(56), float64], Tensor[(924), uint16], Tensor[(1, 56), float64], Tensor[(1352), float64], Tensor[(6, 1, 14), float64], Tensor[(84, 1), float64], Tensor[(364), int8]) {
  %1305 = @func_9743() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1306 = @func_5941() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1307 = @func_15372() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1308 = cast(%var_16083, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %1309 = cast(meta[relay.Constant][84] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1310 = cast(%var_16085, dtype="float64") /* ty=Tensor[(1, 56), float64] */;
  %1311 = reshape(%1308, newshape=[13, 8, 13]) /* ty=Tensor[(13, 8, 13), float32] */;
  %1312 = reshape(%1309, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
  %1313 = reshape(%1310, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %1314 = @func_1482(%1311, %1312, %1313) /* ty=(Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */;
  %1315 = cast(%var_16083, dtype="float32") /* ty=Tensor[(1352), float32] */;
  %1316 = atanh(%1315) /* ty=Tensor[(1352), float32] */;
  %1317 = cast(%1316, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %1318 = cast(%var_16123, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
  %1319 = cast(%var_16124, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1320 = reshape(%1318, newshape=[6, 1, 14]) /* ty=Tensor[(6, 1, 14), float64] */;
  %1321 = reshape(%1319, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %1322 = @func_14045(%1320, %1321) /* ty=(Tensor[(6, 1, 14), float64], Tensor[(364), int8], Tensor[(364), int8]) */;
  %1323 = %1305.1;
  %1324 = %1306.0;
  %1325 = %1307.0;
  %1326 = %1314.1;
  %1327 = atan(%1317) /* ty=Tensor[(1352), float64] */;
  %1328 = %1322.0;
  (%1323, %1324, %1325, %1326, meta[relay.Constant][84] /* ty=Tensor[(924), uint16] */, %var_16085, %1327, %1328, %var_16123, %var_16124)
}

def @func_7790(%var_7788: Tensor[(2, 12, 7), float32]) -> (Tensor[(2, 12, 7), float32], Tensor[(7, 11, 15), float32], Tensor[(2, 12, 7), float32]) {
  @func_7787(%var_7788) /* ty=(Tensor[(2, 12, 7), float32], Tensor[(7, 11, 15), float32], Tensor[(2, 12, 7), float32]) */
}

def @func_7329(%var_7327: Tensor[(2640), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8]) {
  @func_7326(%var_7327) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(2640), uint8]) */
}

def @func_11969() -> Tensor[(6, 3, 10), float64] {
  %1329 = @func_6770() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1329.0
}

def @func_4442() -> Tensor[(364), int8] {
  %1330 = fn () -> Tensor[(364), int8] {
    @func_4384() /* ty=Tensor[(364), int8] */
  };
  %1330() /* ty=Tensor[(364), int8] */
}

def @func_5169() -> Tensor[(6, 3, 10), float64] {
  %1331 = @func_4946() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1331.0
}

def @func_8527() -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  %1332 = @func_7300() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1333 = %1332.0;
  %1334 = @func_4384() /* ty=Tensor[(364), int8] */;
  (%1333, %1334)
}

def @func_7787(%var_7767: Tensor[(2, 12, 7), float32]) -> (Tensor[(2, 12, 7), float32], Tensor[(7, 11, 15), float32], Tensor[(2, 12, 7), float32]) {
  %1335 = cast(%var_7767, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %1336 = asinh(%1335) /* ty=Tensor[(2, 12, 7), float32] */;
  %1337 = cast(%1336, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %1338 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %1339 = cast(%1336, dtype="float32") /* ty=Tensor[(2, 12, 7), float32] */;
  %1340 = atanh(%1337) /* ty=Tensor[(2, 12, 7), float32] */;
  %1341 = %1338.1;
  %1342 = log10(%1339) /* ty=Tensor[(2, 12, 7), float32] */;
  (%1340, %1341, %1342)
}

def @func_10709(%var_10706: Tensor[(360, 1), uint64], %var_10707: Tensor[(924), uint16], %var_10708: Tensor[(10, 5, 9), float32]) -> (Tensor[(7, 3, 13), bool], Tensor[(360, 1), uint64], Tensor[(2, 168), float64], Tensor[(56), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(10, 5, 9), float32]) {
  @func_10704(%var_10706, %var_10707, %var_10708) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(360, 1), uint64], Tensor[(2, 168), float64], Tensor[(56), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(10, 5, 9), float32]) */
}

def @func_12330(%var_12329: Tensor[(4, 8, 12), float32]) -> Tensor[(4, 8, 12), float32] {
  %1345 = fn (%var_12322: Tensor[(4, 8, 12), float32]) -> Tensor[(4, 8, 12), float32] {
    %1343 = cast(meta[relay.Constant][85] /* ty=Tensor[(4, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 8, 1), float32] */;
    %1344 = cast(%var_12322, dtype="float32") /* ty=Tensor[(4, 8, 12), float32] */;
    floor_divide(%1343, %1344) /* ty=Tensor[(4, 8, 12), float32] */
  };
  %1345(%var_12329) /* ty=Tensor[(4, 8, 12), float32] */
}

def @func_16434() -> (Tensor[(6, 3, 10), bool], Tensor[(2640), uint8], Tensor[(12, 220), uint8]) {
  @func_16432() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(2640), uint8], Tensor[(12, 220), uint8]) */
}

def @func_439(%var_438: Tensor[(4, 7, 13), int8]) -> (Tensor[(4, 7, 13), int8],) {
  %1351 = fn (%var_433: Tensor[(4, 7, 13), int8]) -> (Tensor[(4, 7, 13), int8],) {
    %1346 = cast(%var_433, dtype="int8") /* ty=Tensor[(4, 7, 13), int8] */;
    %1347 = shape_of(meta[relay.Constant][86] /* ty=Tensor[(4, 7, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1348 = cast(meta[relay.Constant][86] /* ty=Tensor[(4, 7, 13), int8] */, dtype="int8") /* ty=Tensor[(4, 7, 13), int8] */;
    %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1350 = bitwise_and(%1348, %1349) /* ty=Tensor[(4, 7, 13), int8] */;
    (%1350,)
  };
  %1351(%var_438) /* ty=(Tensor[(4, 7, 13), int8],) */
}

def @func_5141() -> Tensor[(6, 3, 10), float64] {
  %1352 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1352.0
}

def @func_10043() -> Tensor[(6, 3, 10), float32] {
  %1356 = fn () -> Tensor[(6, 3, 10), float32] {
    %1353 = @func_6644() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
    %1354 = %1353.0;
    %1355 = cast(%1354, dtype="float32") /* ty=Tensor[(6, 3, 10), float32] */;
    atanh(%1355) /* ty=Tensor[(6, 3, 10), float32] */
  };
  %1356() /* ty=Tensor[(6, 3, 10), float32] */
}

def @func_16750() -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  %1357 = @func_10894() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1358 = @func_4306() /* ty=(Tensor[(364), int8],) */;
  %1359 = @func_16513() /* ty=Tensor[(6, 3, 10), float64] */;
  %1360 = %1357.1;
  %1361 = %1358.0;
  (%1359, %1360, %1361)
}

def @func_13122() -> Tensor[(6, 3, 10), bool] {
  @func_13120() /* ty=Tensor[(6, 3, 10), bool] */
}

def @func_9340(%var_9308: Tensor[(12, 15, 16), uint64]) -> (Tensor[(12, 15, 16), uint64], Tensor[(6, 3, 10), float64]) {
  %1362 = cast(meta[relay.Constant][87] /* ty=Tensor[(12, 15, 16), uint64] */, dtype="uint64") /* ty=Tensor[(12, 15, 16), uint64] */;
  %1363 = shape_of(%var_9308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1364 = cast(%var_9308, dtype="uint64") /* ty=Tensor[(12, 15, 16), uint64] */;
  %1365 = dyn.reshape(%1362, %1363, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1366 = left_shift(%1364, %1365) /* ty=Tensor[(12, 15, 16), uint64] */;
  %1367 = @func_5169() /* ty=Tensor[(6, 3, 10), float64] */;
  (%1366, %1367)
}

def @func_10078(%var_10076: Tensor[(4, 660), uint8]) -> (Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(4, 660), float32]) {
  @func_10075(%var_10076) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(16, 11, 15), uint8], Tensor[(4, 660), float32]) */
}

def @func_13965() -> (Tensor[(6, 3, 10), float64],) {
  %1369 = fn () -> (Tensor[(6, 3, 10), float64],) {
    %1368 = @func_11969() /* ty=Tensor[(6, 3, 10), float64] */;
    (%1368,)
  };
  %1369() /* ty=(Tensor[(6, 3, 10), float64],) */
}

def @func_9674(%var_9672: Tensor[(180), float64]) -> (Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) {
  @func_9671(%var_9672) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */
}

def @func_3040(%var_3036: Tensor[(4, 7, 12), float64], %var_3037: Tensor[(56), float64], %var_3038: Tensor[(13, 104), float32], %var_3039: Tensor[(1, 924), uint16]) -> (Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) {
  %1386 = fn (%var_3005: Tensor[(4, 7, 12), float64], %var_3011: Tensor[(56), float64], %var_3018: Tensor[(13, 104), float32], %var_3019: Tensor[(1, 924), uint16]) -> (Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) {
    %1370 = cast(%var_3005, dtype="float64") /* ty=Tensor[(4, 7, 12), float64] */;
    %1371 = cast(meta[relay.Constant][88] /* ty=Tensor[(273), float32] */, dtype="float32") /* ty=Tensor[(273), float32] */;
    %1372 = cast(%var_3011, dtype="float64") /* ty=Tensor[(56), float64] */;
    %1373 = reshape(%1371, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float32] */;
    %1374 = reshape(%1372, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %1375 = @func_153(%1373, %1374) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(7, 1, 8), float64], Tensor[(56), float64]) */;
    %1376 = cast(%var_3018, dtype="float32") /* ty=Tensor[(13, 104), float32] */;
    %1377 = cast(%var_3019, dtype="uint16") /* ty=Tensor[(1, 924), uint16] */;
    %1378 = cast(%var_3011, dtype="float64") /* ty=Tensor[(56), float64] */;
    %1379 = reshape(%1376, newshape=[13, 8, 13]) /* ty=Tensor[(13, 8, 13), float32] */;
    %1380 = reshape(%1377, newshape=[1, 924]) /* ty=Tensor[(1, 924), uint16] */;
    %1381 = reshape(%1378, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %1382 = @func_1482(%1379, %1380, %1381) /* ty=(Tensor[(13, 8, 13), float32], Tensor[(56), float64], Tensor[(1, 924), uint16], Tensor[(273), float32], Tensor[(56), float64]) */;
    %1383 = exp(%1370) /* ty=Tensor[(4, 7, 12), float64] */;
    %1384 = %1375.0;
    %1385 = %1382.1;
    (%1383, %1384, meta[relay.Constant][88] /* ty=Tensor[(273), float32] */, %var_3011, %1385, %var_3018, %var_3019)
  };
  %1386(%var_3036, %var_3037, %var_3038, %var_3039) /* ty=(Tensor[(4, 7, 12), float64], Tensor[(7, 3, 13), bool], Tensor[(273), float32], Tensor[(56), float64], Tensor[(56), float64], Tensor[(13, 104), float32], Tensor[(1, 924), uint16]) */
}

def @func_14818(%var_14816: Tensor[(1155), float32]) -> (Tensor[(6, 3, 10), bool], Tensor[(56), float64], Tensor[(1155), float32]) {
  @func_14815(%var_14816) /* ty=(Tensor[(6, 3, 10), bool], Tensor[(56), float64], Tensor[(1155), float32]) */
}

def @func_12592(%var_12590: Tensor[(364), int8]) -> (Tensor[(1155), float32], Tensor[(6, 3, 10), float32], Tensor[(364), bool], Tensor[(364), int8]) {
  @func_12589(%var_12590) /* ty=(Tensor[(1155), float32], Tensor[(6, 3, 10), float32], Tensor[(364), bool], Tensor[(364), int8]) */
}

def @func_12477() -> Tensor[(6, 3, 10), float64] {
  @func_12475() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_16514() -> Tensor[(6, 3, 10), float64] {
  %1388 = fn () -> Tensor[(6, 3, 10), float64] {
    %1387 = @func_16171() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(6, 3, 10), float64], Tensor[(273), float32]) */;
    %1387.1
  };
  %1388() /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_14045(%var_14020: Tensor[(6, 1, 14), float64], %var_14026: Tensor[(364), int8]) -> (Tensor[(6, 1, 14), float64], Tensor[(364), int8], Tensor[(364), int8]) {
  %1389 = cast(%var_14020, dtype="float64") /* ty=Tensor[(6, 1, 14), float64] */;
  %1390 = cast(%var_14026, dtype="int8") /* ty=Tensor[(364), int8] */;
  %1391 = reshape(%1390, newshape=[364]) /* ty=Tensor[(364), int8] */;
  %1392 = @func_9070(%1391) /* ty=(Tensor[(273), float32], Tensor[(56), float64], Tensor[(1008), float32], float32, Tensor[(1, 1352), float32], Tensor[(14, 66), uint16], Tensor[(56), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool]) */;
  %1393 = sqrt(%1389) /* ty=Tensor[(6, 1, 14), float64] */;
  %1394 = %1392.7;
  (%1393, %1394, %var_14026)
}

def @func_9700() -> (Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
  %1400 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
    %1395 = @func_5569() /* ty=Tensor[(6, 3, 10), float64] */;
    %1396 = cast(%1395, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %1397 = reshape(%1396, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %1398 = @func_9671(%1397) /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(180), float64]) */;
    %1399 = %1398.2;
    (%1395, %1399)
  };
  %1400() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */
}

def @func_10306() -> (Tensor[(6, 3, 10), bool], Tensor[(2, 28), float64], Tensor[(56), float64], Tensor[(924), uint16], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  %1401 = @func_6367() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(7, 11, 15), float32], Tensor[(385, 3), float32], Tensor[(6, 3, 10), bool]) */;
  %1402 = cast(meta[relay.Constant][89] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1403 = cast(meta[relay.Constant][90] /* ty=Tensor[(924), uint16] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1404 = reshape(%1402, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %1405 = reshape(%1403, newshape=[924]) /* ty=Tensor[(924), uint16] */;
  %1406 = @func_8382(%1404, %1405) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(4, 7, 12), float64], Tensor[(2, 28), float64], Tensor[(1352), float32], Tensor[(924), uint16], Tensor[(6, 3, 10), float32], Tensor[(6, 3, 10), float64], Tensor[(8, 42), uint16], Tensor[(6, 3, 10), bool], Tensor[(8, 42), float64]) */;
  %1407 = @func_9743() /* ty=(Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1408 = @func_4585() /* ty=(Tensor[(6, 3, 10), float64],) */;
  %1409 = %1401.3;
  %1410 = %1406.2;
  %1411 = %1407.1;
  %1412 = @func_6653() /* ty=Tensor[(6, 3, 10), float64] */;
  %1413 = %1408.0;
  (%1409, %1410, meta[relay.Constant][89] /* ty=Tensor[(56), float64] */, meta[relay.Constant][90] /* ty=Tensor[(924), uint16] */, %1411, %1412, %1413)
}

def @func_15708(%var_15700: Tensor[(14, 66), float64]) -> (Tensor[(364), int8], Tensor[(14, 66), int16]) {
  %1414 = @func_13349() /* ty=(Tensor[(364), int8], Tensor[(14, 66), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */;
  %1415 = %1414.1;
  %1416 = cast(%var_15700, dtype="int16") /* ty=Tensor[(14, 66), int16] */;
  %1417 = shape_of(%1415, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1418 = cast(%1415, dtype="int16") /* ty=Tensor[(14, 66), int16] */;
  %1419 = dyn.reshape(%1416, %1417, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1420 = @func_4384() /* ty=Tensor[(364), int8] */;
  %1421 = logical_xor(%1418, %1419) /* ty=Tensor[(14, 66), int16] */;
  (%1420, %1421)
}

def @func_10370() -> Tensor[(273), float64] {
  %1422 = fn () -> Tensor[(273), float64] {
    @func_8199() /* ty=Tensor[(273), float64] */
  };
  %1422() /* ty=Tensor[(273), float64] */
}

def @func_10308() -> (Tensor[(6, 3, 10), bool], Tensor[(2, 28), float64], Tensor[(56), float64], Tensor[(924), uint16], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) {
  @func_10306() /* ty=(Tensor[(6, 3, 10), bool], Tensor[(2, 28), float64], Tensor[(56), float64], Tensor[(924), uint16], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64]) */
}

def @func_16814(%var_16813: Tensor[(9, 9, 16), int64]) -> (Tensor[(9, 9, 16), bool], Tensor[(11, 11, 4), float32], Tensor[(484), float32], Tensor[(364), int8], Tensor[(11, 11, 4), float32]) {
  %1437 = fn (%var_16772: Tensor[(9, 9, 16), int64]) -> (Tensor[(9, 9, 16), bool], Tensor[(11, 11, 4), float32], Tensor[(484), float32], Tensor[(364), int8], Tensor[(11, 11, 4), float32]) {
    %1423 = cast(meta[relay.Constant][91] /* ty=Tensor[(9, 9, 16), int64] */, dtype="bool") /* ty=Tensor[(9, 9, 16), bool] */;
    %1424 = shape_of(%var_16772, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1425 = cast(%var_16772, dtype="bool") /* ty=Tensor[(9, 9, 16), bool] */;
    %1426 = dyn.reshape(%1423, %1424, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1427 = cast(meta[relay.Constant][92] /* ty=Tensor[(484), float32] */, dtype="float32") /* ty=Tensor[(484), float32] */;
    %1428 = reshape(%1427, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), float32] */;
    %1429 = @func_10855(%1428) /* ty=(Tensor[(11, 11, 4), float32],) */;
    %1430 = %1429.0;
    %1431 = cast(%1430, dtype="float32") /* ty=Tensor[(11, 11, 4), float32] */;
    %1432 = reshape(%1431, newshape=[11, 11, 4]) /* ty=Tensor[(11, 11, 4), float32] */;
    %1433 = @func_10855(%1432) /* ty=(Tensor[(11, 11, 4), float32],) */;
    %1434 = less(%1425, %1426) /* ty=Tensor[(9, 9, 16), bool] */;
    %1435 = @func_11955() /* ty=Tensor[(364), int8] */;
    %1436 = %1433.0;
    (%1434, %1430, meta[relay.Constant][92] /* ty=Tensor[(484), float32] */, %1435, %1436)
  };
  %1437(%var_16813) /* ty=(Tensor[(9, 9, 16), bool], Tensor[(11, 11, 4), float32], Tensor[(484), float32], Tensor[(364), int8], Tensor[(11, 11, 4), float32]) */
}

def @func_4306() -> (Tensor[(364), int8],) {
  %1438 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
  %1439 = %1438.1;
  (%1439,)
}

def @func_10824(%var_10823: Tensor[(4, 7, 13), int8]) -> (Tensor[(180), float64], Tensor[(4, 7, 13), float64], Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
  %1454 = fn (%var_10807: Tensor[(4, 7, 13), int8]) -> (Tensor[(180), float64], Tensor[(4, 7, 13), float64], Tensor[(6, 3, 10), float64], Tensor[(364), int8]) {
    %1440 = @func_9699() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
    %1441 = @func_4271() /* ty=(Tensor[(4, 7, 13), int8], Tensor[(364), int8], Tensor[(6, 3, 10), float64]) */;
    %1442 = %1441.0;
    %1443 = cast(%var_10807, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
    %1444 = shape_of(%1442, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1445 = cast(%1442, dtype="float64") /* ty=Tensor[(4, 7, 13), float64] */;
    %1446 = dyn.reshape(%1443, %1444, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1447 = @func_6464() /* ty=Tensor[(6, 3, 10), float64] */;
    %1448 = cast(%1447, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    %1449 = reshape(%1448, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
    %1450 = @func_4502(%1449) /* ty=(Tensor[(364), int8], Tensor[(364), int8], Tensor[(6, 3, 10), int64], Tensor[(364), int8], Tensor[(364), int8]) */;
    %1451 = %1440.1;
    %1452 = subtract(%1445, %1446) /* ty=Tensor[(4, 7, 13), float64] */;
    %1453 = %1450.3;
    (%1451, %1452, %1447, %1453)
  };
  %1454(%var_10823) /* ty=(Tensor[(180), float64], Tensor[(4, 7, 13), float64], Tensor[(6, 3, 10), float64], Tensor[(364), int8]) */
}

def @func_15184(%var_15182: Tensor[(273), float32], %var_15183: Tensor[(1232), float64]) -> (Tensor[(6, 3, 10), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(?, 273), float64], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) {
  @func_15180(%var_15182, %var_15183) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(364), int8], Tensor[(6, 3, 10), bool], Tensor[(?, 273), float64], Tensor[(924), uint16], Tensor[(273), float32], Tensor[(14, 8, 11), float64], Tensor[(1232), float64]) */
}

def @func_5650() -> Tensor[(364), int8] {
  @func_4441() /* ty=Tensor[(364), int8] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen885/build/output.py:4557: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen885/build/output.py", line 4562, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_cast_greater_kernel0(signed char* __restrict__ T_greater, int* __restrict__ placeholder, int* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1344) {
    T_greater[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((signed char)(((bool)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]) < ((bool)placeholder1[(0)])));
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


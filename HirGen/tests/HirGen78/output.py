import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_54 = relay.const(7, dtype = "int64")#candidate|54|()|const|int64
var_55 = relay.var("var_55", dtype = "int64", shape = (2, 12, 1))#candidate|55|(2, 12, 1)|var|int64
bop_56 = relay.greater_equal(const_54.astype('bool'), var_55.astype('bool')) # shape=(2, 12, 1)
bop_67 = relay.logical_or(const_54.astype('bool'), var_55.astype('bool')) # shape=(2, 12, 1)
bop_95 = relay.not_equal(var_55.astype('bool'), const_54.astype('bool')) # shape=(2, 12, 1)
output = relay.Tuple([bop_56,bop_67,bop_95,])
output2 = relay.Tuple([bop_56,bop_67,bop_95,])
func_100 = relay.Function([var_55,], output)
mod['func_100'] = func_100
mod = relay.transform.InferType()(mod)
var_101 = relay.var("var_101", dtype = "int64", shape = (2, 12, 1))#candidate|101|(2, 12, 1)|var|int64
output = func_100(var_101)
func_102 = relay.Function([var_101], output)
mutated_mod['func_102'] = func_102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_118 = relay.var("var_118", dtype = "float64", shape = (3, 10, 3))#candidate|118|(3, 10, 3)|var|float64
const_119 = relay.const([[[7.183199,-5.476581,-3.483803],[-2.671672,1.147132,-3.882655],[-0.413748,-6.421639,-5.893326],[-9.709039,-4.641961,2.822787],[2.001132,8.513556,5.304076],[-1.464944,-3.457504,6.819460],[-0.536243,-2.055554,4.573089],[-2.729449,3.720893,-3.465773],[-2.403512,-7.427832,5.890455],[-0.194139,6.638635,-2.557666]],[[-8.690884,4.981751,1.196929],[2.287741,-8.940370,3.886852],[5.146345,5.145848,-3.039479],[-6.787501,-5.315301,7.114263],[1.681028,-1.139724,-7.261512],[3.513858,-7.248055,2.178661],[3.391682,2.427456,-1.415952],[-7.924060,-7.317337,6.233575],[0.269246,-0.668136,-9.819776],[1.605960,2.312941,-8.164994]],[[-0.032573,-9.653141,-6.541218],[8.354892,0.776921,7.463520],[3.256210,1.549555,3.125887],[0.358692,-0.639361,-7.167713],[8.216493,-8.017157,-0.742404],[-0.124355,-0.624244,0.874648],[-7.802217,0.854433,6.881657],[-1.992899,-4.158598,-0.433235],[-0.781833,-6.760170,8.816216],[3.231478,3.855661,3.443979]]], dtype = "float64")#candidate|119|(3, 10, 3)|const|float64
bop_120 = relay.floor_divide(var_118.astype('float64'), relay.reshape(const_119.astype('float64'), relay.shape_of(var_118))) # shape=(3, 10, 3)
uop_125 = relay.cosh(var_118.astype('float32')) # shape=(3, 10, 3)
uop_130 = relay.rsqrt(uop_125.astype('float64')) # shape=(3, 10, 3)
output = relay.Tuple([bop_120,uop_130,])
output2 = relay.Tuple([bop_120,uop_130,])
func_133 = relay.Function([var_118,], output)
mod['func_133'] = func_133
mod = relay.transform.InferType()(mod)
mutated_mod['func_133'] = func_133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_134 = relay.var("var_134", dtype = "float64", shape = (3, 10, 3))#candidate|134|(3, 10, 3)|var|float64
func_133_call = mutated_mod.get_global_var('func_133')
call_135 = func_133_call(var_134)
output = call_135
func_136 = relay.Function([var_134], output)
mutated_mod['func_136'] = func_136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_238 = relay.var("var_238", dtype = "uint32", shape = (16, 5, 6))#candidate|238|(16, 5, 6)|var|uint32
var_239 = relay.var("var_239", dtype = "uint32", shape = (16, 5, 6))#candidate|239|(16, 5, 6)|var|uint32
bop_240 = relay.maximum(var_238.astype('uint32'), relay.reshape(var_239.astype('uint32'), relay.shape_of(var_238))) # shape=(16, 5, 6)
uop_244 = relay.sigmoid(var_238.astype('float64')) # shape=(16, 5, 6)
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
var_257 = relay.var("var_257", dtype = "int64", shape = (24,))#candidate|257|(24,)|var|int64
call_256 = relay.TupleGetItem(func_100_call(relay.reshape(var_257.astype('int64'), [2, 12, 1])), 2)
call_258 = relay.TupleGetItem(func_102_call(relay.reshape(var_257.astype('int64'), [2, 12, 1])), 2)
output = relay.Tuple([bop_240,uop_244,call_256,var_257,])
output2 = relay.Tuple([bop_240,uop_244,call_258,var_257,])
func_264 = relay.Function([var_238,var_239,var_257,], output)
mod['func_264'] = func_264
mod = relay.transform.InferType()(mod)
var_265 = relay.var("var_265", dtype = "uint32", shape = (16, 5, 6))#candidate|265|(16, 5, 6)|var|uint32
var_266 = relay.var("var_266", dtype = "uint32", shape = (16, 5, 6))#candidate|266|(16, 5, 6)|var|uint32
var_267 = relay.var("var_267", dtype = "int64", shape = (24,))#candidate|267|(24,)|var|int64
output = func_264(var_265,var_266,var_267,)
func_268 = relay.Function([var_265,var_266,var_267,], output)
mutated_mod['func_268'] = func_268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_599 = relay.var("var_599", dtype = "float32", shape = (1, 14, 1))#candidate|599|(1, 14, 1)|var|float32
uop_600 = relay.erf(var_599.astype('float32')) # shape=(1, 14, 1)
bop_615 = relay.power(var_599.astype('float64'), relay.reshape(uop_600.astype('float64'), relay.shape_of(var_599))) # shape=(1, 14, 1)
output = bop_615
output2 = bop_615
func_622 = relay.Function([var_599,], output)
mod['func_622'] = func_622
mod = relay.transform.InferType()(mod)
mutated_mod['func_622'] = func_622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_623 = relay.var("var_623", dtype = "float32", shape = (1, 14, 1))#candidate|623|(1, 14, 1)|var|float32
func_622_call = mutated_mod.get_global_var('func_622')
call_624 = func_622_call(var_623)
output = call_624
func_625 = relay.Function([var_623], output)
mutated_mod['func_625'] = func_625
mutated_mod = relay.transform.InferType()(mutated_mod)
var_629 = relay.var("var_629", dtype = "float64", shape = (1, 15, 11))#candidate|629|(1, 15, 11)|var|float64
uop_630 = relay.erf(var_629.astype('float64')) # shape=(1, 15, 11)
output = uop_630
output2 = uop_630
func_633 = relay.Function([var_629,], output)
mod['func_633'] = func_633
mod = relay.transform.InferType()(mod)
var_634 = relay.var("var_634", dtype = "float64", shape = (1, 15, 11))#candidate|634|(1, 15, 11)|var|float64
output = func_633(var_634)
func_635 = relay.Function([var_634], output)
mutated_mod['func_635'] = func_635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_686 = relay.var("var_686", dtype = "uint8", shape = (4, 14, 4))#candidate|686|(4, 14, 4)|var|uint8
var_687 = relay.var("var_687", dtype = "uint8", shape = (4, 14, 4))#candidate|687|(4, 14, 4)|var|uint8
bop_688 = relay.left_shift(var_686.astype('uint8'), relay.reshape(var_687.astype('uint8'), relay.shape_of(var_686))) # shape=(4, 14, 4)
func_633_call = mod.get_global_var('func_633')
func_635_call = mutated_mod.get_global_var('func_635')
const_695 = relay.const([-7.198806,-5.293021,9.408849,6.728704,1.786017,-4.204070,-7.503203,-1.940332,3.994379,-7.712758,9.342497,-4.801967,-0.646140,9.280673,7.012261,8.655819,3.782031,-0.215154,-0.619050,-1.464478,7.938445,-2.566248,4.151340,4.886785,-5.120692,2.186517,2.703322,-7.655622,8.260030,5.607523,-3.374642,-7.272823,-1.968018,4.792225,7.098263,2.985437,-1.997985,-3.011687,-2.205193,1.054330,-3.096744,-9.472326,-4.636702,9.178710,-6.492744,-6.648997,5.546652,-0.067709,2.796232,3.543812,-8.312747,-9.311297,-1.905412,-0.663406,-7.444219,9.953590,9.877123,-3.598200,-4.341382,4.098766,-4.202466,2.607023,1.013916,-8.114580,5.578313,6.904205,-7.092310,8.599218,-3.829563,3.842683,8.619396,1.995377,2.022354,-1.800269,-7.120781,-8.659280,8.353079,-0.584645,-8.372215,3.774033,-9.822515,5.020363,-3.602334,4.688383,-3.605146,-2.946823,6.396285,-3.052688,4.517918,-9.842550,5.814402,7.794463,7.446224,6.697485,-1.868893,1.287031,0.540038,9.472653,3.829699,-0.818189,3.410162,2.158891,5.844769,6.705400,-6.477304,-9.295611,5.211719,-5.219194,3.519060,-0.364243,0.621736,9.127437,-7.223896,-8.507692,3.267180,7.490108,8.515089,-8.735327,1.648124,-5.776311,0.664681,1.319970,-1.914621,9.936476,3.474885,2.490462,-5.898137,4.091549,5.210196,-7.436176,-5.736835,5.808907,3.408122,-4.405831,-7.527015,-4.080253,2.771469,-7.570541,-5.869478,-0.611500,2.955082,-8.619070,-1.525546,-8.247349,0.966874,-0.568173,-0.365069,-5.814141,7.373603,-6.160899,1.045991,-8.223092,-7.531230,-7.733149,-6.771672,-3.250768,-2.776307,3.913694,-3.869051,-9.981231,2.234938,-7.557254,-2.423874,3.621258,5.294769], dtype = "float64")#candidate|695|(165,)|const|float64
call_694 = func_633_call(relay.reshape(const_695.astype('float64'), [1, 15, 11]))
call_696 = func_633_call(relay.reshape(const_695.astype('float64'), [1, 15, 11]))
bop_705 = relay.greater(var_686.astype('bool'), relay.reshape(bop_688.astype('bool'), relay.shape_of(var_686))) # shape=(4, 14, 4)
uop_711 = relay.log(var_687.astype('float64')) # shape=(4, 14, 4)
bop_713 = relay.floor_mod(uop_711.astype('float64'), relay.reshape(bop_688.astype('float64'), relay.shape_of(uop_711))) # shape=(4, 14, 4)
bop_717 = relay.equal(bop_713.astype('bool'), relay.reshape(var_686.astype('bool'), relay.shape_of(bop_713))) # shape=(4, 14, 4)
bop_728 = relay.logical_or(bop_713.astype('bool'), relay.reshape(bop_705.astype('bool'), relay.shape_of(bop_713))) # shape=(4, 14, 4)
bop_731 = relay.less_equal(bop_717.astype('bool'), relay.reshape(var_686.astype('bool'), relay.shape_of(bop_717))) # shape=(4, 14, 4)
var_734 = relay.var("var_734", dtype = "bool", shape = (4, 14, 4))#candidate|734|(4, 14, 4)|var|bool
bop_735 = relay.maximum(bop_728.astype('int16'), relay.reshape(var_734.astype('int16'), relay.shape_of(bop_728))) # shape=(4, 14, 4)
func_633_call = mod.get_global_var('func_633')
func_635_call = mutated_mod.get_global_var('func_635')
call_742 = func_633_call(relay.reshape(const_695.astype('float64'), [1, 15, 11]))
call_743 = func_633_call(relay.reshape(const_695.astype('float64'), [1, 15, 11]))
output = relay.Tuple([call_694,const_695,bop_731,bop_735,call_742,])
output2 = relay.Tuple([call_696,const_695,bop_731,bop_735,call_743,])
func_746 = relay.Function([var_686,var_687,var_734,], output)
mod['func_746'] = func_746
mod = relay.transform.InferType()(mod)
var_747 = relay.var("var_747", dtype = "uint8", shape = (4, 14, 4))#candidate|747|(4, 14, 4)|var|uint8
var_748 = relay.var("var_748", dtype = "uint8", shape = (4, 14, 4))#candidate|748|(4, 14, 4)|var|uint8
var_749 = relay.var("var_749", dtype = "bool", shape = (4, 14, 4))#candidate|749|(4, 14, 4)|var|bool
output = func_746(var_747,var_748,var_749,)
func_750 = relay.Function([var_747,var_748,var_749,], output)
mutated_mod['func_750'] = func_750
mutated_mod = relay.transform.InferType()(mutated_mod)
const_801 = relay.const([[[-3.380889,9.863432,7.176764,-4.315221,-5.046173,-5.313050,6.633295,8.427920,2.985697,3.778284,-1.441454,5.728017,0.692427],[5.429401,-2.685087,9.420449,6.727263,3.047967,6.979935,-5.141866,7.236273,-6.725625,2.198386,-2.351877,6.929850,6.616649],[4.040929,5.212619,-9.967323,6.050540,9.254872,5.575555,-2.915938,-5.442999,-2.321028,5.776749,4.947112,-4.198675,0.940498],[8.466065,-6.509272,4.189229,6.762942,5.294668,6.534971,3.623190,8.886719,-4.823013,5.071530,2.048847,0.155751,6.280455],[4.693110,9.895131,-4.936986,3.267690,8.895926,-6.797424,1.455676,-5.748277,6.657620,-5.759494,-4.500887,-6.364755,7.640350],[2.627032,-5.422066,0.431416,-8.078671,5.563088,-1.340464,-3.458954,4.324134,-8.920700,-0.412724,9.789280,-6.860088,-3.822902]],[[-2.560064,0.635155,4.056973,-7.682605,6.953155,5.753438,9.764783,5.412740,3.313284,5.384115,-5.906330,0.315265,7.998438],[-3.689055,-7.221818,-5.318578,9.827753,-9.969041,3.363060,9.119771,2.511802,-2.547631,6.033821,-9.776976,5.122057,4.714872],[4.765356,-2.772276,0.547588,1.142003,-5.721818,8.083758,8.789293,-3.474776,-4.342183,0.474538,-3.164229,-8.890378,4.350171],[-6.181336,2.557055,2.076933,-0.759686,1.776300,-9.830349,-2.364731,-8.820168,5.362106,7.067972,-7.673681,1.282598,9.243643],[-7.072665,8.164595,-0.060519,-3.611163,9.939523,5.971283,-0.898655,9.801962,4.156066,9.580263,9.844409,1.487619,-8.345654],[0.936977,6.421565,8.769047,-6.660817,-1.362482,-8.372974,-1.654726,-3.080507,8.514411,-1.359437,0.400356,-1.231179,-3.697368]],[[0.045959,1.842703,8.438061,2.011389,7.565128,-5.386319,3.112697,3.520165,-0.934248,2.967535,4.749143,7.365701,-1.502956],[5.354474,6.023417,-0.611564,1.804054,-0.308420,-6.909339,0.101054,-5.753712,-9.033482,-9.280389,3.767979,8.414215,7.022521],[1.153010,1.728649,-1.280913,3.377164,-9.103782,-5.430299,5.293131,-4.881880,8.150618,2.368832,-1.586384,8.533547,7.424745],[2.438776,-3.747481,7.383043,9.958710,0.274843,4.420676,5.889501,-5.657782,4.701638,-5.666532,-4.559188,-9.640761,6.516928],[7.107221,3.544876,1.262473,3.666987,-6.905328,9.446207,8.635710,1.620668,8.701028,-0.022656,-8.778231,0.378310,-3.739658],[-0.952499,-8.936394,3.534536,6.981663,-4.329427,5.499047,-2.193846,9.759108,7.079330,-2.880347,1.622341,9.199808,6.155838]],[[-8.608716,-0.854661,-5.449564,5.952551,-5.527007,-0.884969,5.115082,-2.021108,0.236610,-8.321897,-7.039742,4.907717,-5.522346],[1.443573,8.205672,-4.614082,7.773424,-6.169669,9.302887,-5.140298,-9.584736,6.644795,-5.301793,-7.199814,-7.332808,-3.947641],[-8.125006,8.275669,-9.818651,-9.684409,-3.700564,9.702681,9.872074,5.127863,9.055303,-7.848683,4.531565,-6.819714,5.140235],[2.926313,5.718780,-8.946604,5.478866,6.656142,-4.065061,5.201416,-5.571310,9.381787,-5.833822,-5.059023,-2.044348,0.024575],[3.281598,3.807033,-4.810891,-2.729370,-0.732370,7.824846,9.499408,-8.825219,-6.816470,-6.941669,-5.270295,-4.441268,-1.859669],[2.882885,8.038293,-4.527148,-4.007365,6.908434,-5.784873,-8.210462,3.810245,2.491474,-3.480318,-1.075585,3.692985,2.492654]],[[-0.658580,5.083522,5.809454,-9.015376,0.410844,7.297421,-2.984645,8.464855,-2.063192,-7.421706,7.824936,-7.319131,9.576494],[1.487168,7.133202,-0.716465,-1.287293,7.781497,-3.733750,5.161861,-9.143184,6.998901,0.395860,-2.310510,5.614372,9.735397],[-8.457293,-7.789331,8.894129,-5.012766,1.161708,-9.889382,-0.846568,0.680273,4.555346,6.254146,4.851175,4.666176,8.740349],[-7.217045,-6.424760,9.860407,-0.504565,-0.512680,8.905895,-3.460089,6.909375,4.665585,-1.544236,8.338145,2.946444,-1.778353],[3.022730,7.672040,8.984109,0.804677,-8.283246,-7.473463,7.219073,-4.247357,9.633962,5.671426,0.600980,6.340199,5.051442],[-9.965142,4.050202,1.975440,-2.589344,5.086130,-4.425413,8.037338,7.482110,3.524864,-4.369808,-7.874302,8.000569,-0.481116]],[[-5.724131,-7.789636,-6.988187,-7.389658,2.777224,1.399937,-7.168790,9.559367,8.781975,5.657769,-9.291504,7.061473,-8.934494],[9.646646,9.144552,6.927146,1.348984,0.840873,-9.438806,9.483847,1.989024,1.734886,9.043745,9.846489,8.799173,5.693176],[6.217398,-4.595391,-2.400176,4.520895,6.641028,4.387338,6.849776,0.446822,-8.083267,5.006486,1.899478,-2.288926,-5.400590],[6.363536,-6.860929,8.573974,-3.225061,-0.125079,3.871894,-9.211065,-3.704140,0.062797,4.695986,5.586170,5.541753,0.904630],[7.965133,8.552897,1.439066,3.833347,-7.634303,-4.801218,-9.480394,5.402917,-0.424699,-7.574705,-9.783398,-4.339354,-5.380808],[2.859998,7.928605,-3.321172,-7.222420,-7.327736,0.771396,-0.720729,-4.540260,-3.985054,7.018650,6.624209,4.997810,-5.990362]],[[4.111610,3.911243,-1.912174,-7.225123,-9.019299,-5.514762,-9.819945,-6.956126,-0.818239,0.497669,1.601337,6.360770,-1.703219],[6.683142,-6.524340,0.197078,-5.502210,-7.753673,4.148513,-7.881508,5.960885,5.549220,3.146431,8.992983,-0.047059,7.902172],[-1.853866,-3.057101,7.601412,0.620784,7.449178,5.585223,6.912394,-8.041351,-2.208771,-3.733262,8.674999,-7.167590,-9.450120],[-6.705178,-8.488412,-5.966390,-6.862786,2.652925,-6.711117,3.644645,4.639979,-4.667679,-4.564738,-0.571467,4.605227,4.078083],[-5.154213,-7.446915,2.794195,1.352030,-9.458424,8.000898,-9.379737,-0.397940,9.491058,-2.599784,-1.614852,4.083839,6.954564],[-6.509584,7.241210,1.390145,7.229958,-3.597026,-9.648196,-4.949422,7.271202,9.710478,4.459927,4.907555,6.809931,5.783818]],[[-5.837913,0.385284,-8.555630,-7.075452,1.540668,6.367363,9.761403,1.443787,9.589618,-9.139396,8.705017,-1.744325,4.657073],[8.710345,9.759753,7.676311,-9.304507,2.567677,-5.455117,-6.449436,3.957138,-9.328371,7.933392,-9.752898,3.859968,9.082084],[-3.824298,1.429197,8.857741,7.601715,-6.771680,-8.068233,1.860486,6.127204,-7.882329,9.009318,-5.046839,-7.341129,8.750725],[-6.782714,-7.127798,-7.632130,-4.875641,-7.598563,-2.476132,-7.312311,-4.395818,5.545564,0.309592,9.010633,-9.328173,0.955694],[-4.959291,-6.743905,6.007737,3.764748,5.288256,-5.257582,2.689094,7.041398,-2.122457,-4.190754,9.538697,-6.303421,5.222245],[-7.820367,-3.662099,-3.285467,5.733101,6.659846,6.804817,-8.402638,-4.461657,-1.682741,-7.163406,1.934125,-2.416176,4.894094]],[[-6.687651,-2.324241,-0.907514,9.481149,-9.276672,2.109375,5.157754,-4.897721,8.321909,7.755223,-8.857265,-1.929034,4.668839],[9.045551,9.395312,9.469273,8.254337,5.592847,-0.527010,-7.856985,-0.764145,0.929708,-8.520963,7.591284,-3.444664,0.043274],[-2.125888,0.217402,-7.927148,3.833879,-2.391274,1.451894,-4.673731,6.392487,3.685320,-6.250058,2.735542,5.034852,1.571507],[-7.244533,3.414788,-6.358118,8.310846,-6.588003,2.616934,0.669582,-2.533380,6.645207,-7.798438,-3.293634,-1.325993,8.593923],[-9.587047,-8.748847,5.831908,5.134163,-9.401396,0.863940,-2.590320,7.738402,5.823817,5.085572,5.596370,4.586903,5.799004],[-6.359936,-1.913429,6.069509,-2.217415,-1.731535,-0.351645,2.065282,-7.732449,-2.685309,-4.497490,-3.101850,2.606973,7.165393]],[[-7.098058,-6.866752,-2.611699,2.482447,-0.221478,7.322355,-7.271695,7.907599,-0.289381,-7.761395,9.223801,9.639523,-9.115698],[9.953845,6.706120,9.670642,4.159119,8.871548,-9.468591,-0.152027,1.900130,5.282957,-8.429588,0.464689,1.263639,0.656395],[-1.457524,-7.966957,-6.125991,-4.070972,9.723520,1.768812,8.663171,-7.468572,3.296335,5.882988,4.770182,9.667680,0.476251],[-5.213613,-0.510883,4.827176,-8.714183,6.240341,1.508559,-9.206211,5.261280,-5.059924,-2.442907,-8.334978,8.954492,-0.200423],[4.967972,-5.140146,-0.945522,5.583377,-8.771900,-7.491463,1.042398,9.341660,9.452112,3.868380,9.033650,-6.516959,-5.402461],[-9.358353,-4.097457,-2.464187,-6.028609,-8.816071,9.778370,1.888888,-6.255987,-3.086894,4.254752,-0.596930,9.455504,-2.833241]],[[3.787171,-8.948589,9.711591,-2.418111,-4.206225,0.565787,5.100690,0.958629,-5.365376,6.582148,-3.070368,-6.985705,9.109489],[6.933717,-0.394641,-3.079724,-5.798894,6.162504,8.951740,2.695234,5.501363,-0.516324,-4.296522,6.076875,-1.625476,5.789798],[6.866181,-4.755516,-9.279229,0.091082,4.481322,1.883042,8.009916,-4.644526,-9.884992,-5.469934,-8.477153,-9.395239,-1.266219],[6.758662,-5.014209,-0.005852,-3.104533,2.475373,-1.517668,2.166840,-1.819496,0.220728,-6.647343,-5.410359,1.422292,-4.229165],[5.742943,-8.328267,-8.571321,-2.703355,-9.690721,-4.197335,8.997862,6.599746,9.783562,-6.076963,4.808627,4.525040,8.874697],[-8.084337,-6.383032,-0.938199,-9.897198,9.911151,8.371596,9.486957,-5.803113,-9.698585,0.441595,8.196260,8.576378,-7.231867]]], dtype = "float32")#candidate|801|(11, 6, 13)|const|float32
var_802 = relay.var("var_802", dtype = "float32", shape = (11, 6, 13))#candidate|802|(11, 6, 13)|var|float32
bop_803 = relay.floor_divide(const_801.astype('float32'), relay.reshape(var_802.astype('float32'), relay.shape_of(const_801))) # shape=(11, 6, 13)
uop_815 = relay.erf(bop_803.astype('float32')) # shape=(11, 6, 13)
output = relay.Tuple([uop_815,])
output2 = relay.Tuple([uop_815,])
func_845 = relay.Function([var_802,], output)
mod['func_845'] = func_845
mod = relay.transform.InferType()(mod)
var_846 = relay.var("var_846", dtype = "float32", shape = (11, 6, 13))#candidate|846|(11, 6, 13)|var|float32
output = func_845(var_846)
func_847 = relay.Function([var_846], output)
mutated_mod['func_847'] = func_847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1114 = relay.var("var_1114", dtype = "float32", shape = (14, 15, 5))#candidate|1114|(14, 15, 5)|var|float32
var_1115 = relay.var("var_1115", dtype = "float32", shape = (14, 15, 5))#candidate|1115|(14, 15, 5)|var|float32
bop_1116 = relay.divide(var_1114.astype('float32'), relay.reshape(var_1115.astype('float32'), relay.shape_of(var_1114))) # shape=(14, 15, 5)
uop_1133 = relay.log(var_1114.astype('float64')) # shape=(14, 15, 5)
func_746_call = mod.get_global_var('func_746')
func_750_call = mutated_mod.get_global_var('func_750')
var_1153 = relay.var("var_1153", dtype = "uint8", shape = (224,))#candidate|1153|(224,)|var|uint8
call_1152 = relay.TupleGetItem(func_746_call(relay.reshape(var_1153.astype('uint8'), [4, 14, 4]), relay.reshape(var_1153.astype('uint8'), [4, 14, 4]), relay.reshape(var_1153.astype('bool'), [4, 14, 4]), ), 0)
call_1154 = relay.TupleGetItem(func_750_call(relay.reshape(var_1153.astype('uint8'), [4, 14, 4]), relay.reshape(var_1153.astype('uint8'), [4, 14, 4]), relay.reshape(var_1153.astype('bool'), [4, 14, 4]), ), 0)
output = relay.Tuple([bop_1116,uop_1133,call_1152,var_1153,])
output2 = relay.Tuple([bop_1116,uop_1133,call_1154,var_1153,])
func_1155 = relay.Function([var_1114,var_1115,var_1153,], output)
mod['func_1155'] = func_1155
mod = relay.transform.InferType()(mod)
mutated_mod['func_1155'] = func_1155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1155_call = mutated_mod.get_global_var('func_1155')
var_1157 = relay.var("var_1157", dtype = "float32", shape = (14, 15, 5))#candidate|1157|(14, 15, 5)|var|float32
var_1158 = relay.var("var_1158", dtype = "float32", shape = (14, 15, 5))#candidate|1158|(14, 15, 5)|var|float32
var_1159 = relay.var("var_1159", dtype = "uint8", shape = (224,))#candidate|1159|(224,)|var|uint8
call_1156 = func_1155_call(var_1157,var_1158,var_1159,)
output = call_1156
func_1160 = relay.Function([var_1157,var_1158,var_1159,], output)
mutated_mod['func_1160'] = func_1160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1175 = relay.var("var_1175", dtype = "int16", shape = ())#candidate|1175|()|var|int16
var_1176 = relay.var("var_1176", dtype = "int16", shape = (6, 1))#candidate|1176|(6, 1)|var|int16
bop_1177 = relay.multiply(var_1175.astype('int16'), var_1176.astype('int16')) # shape=(6, 1)
output = bop_1177
output2 = bop_1177
func_1190 = relay.Function([var_1175,var_1176,], output)
mod['func_1190'] = func_1190
mod = relay.transform.InferType()(mod)
mutated_mod['func_1190'] = func_1190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1190_call = mutated_mod.get_global_var('func_1190')
var_1192 = relay.var("var_1192", dtype = "int16", shape = ())#candidate|1192|()|var|int16
var_1193 = relay.var("var_1193", dtype = "int16", shape = (6, 1))#candidate|1193|(6, 1)|var|int16
call_1191 = func_1190_call(var_1192,var_1193,)
output = call_1191
func_1194 = relay.Function([var_1192,var_1193,], output)
mutated_mod['func_1194'] = func_1194
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1250 = relay.const(1.218643, dtype = "float64")#candidate|1250|()|const|float64
var_1251 = relay.var("var_1251", dtype = "float64", shape = (16, 2, 16))#candidate|1251|(16, 2, 16)|var|float64
bop_1252 = relay.power(const_1250.astype('float64'), var_1251.astype('float64')) # shape=(16, 2, 16)
uop_1262 = relay.sinh(var_1251.astype('float32')) # shape=(16, 2, 16)
uop_1277 = relay.log(var_1251.astype('float64')) # shape=(16, 2, 16)
output = relay.Tuple([bop_1252,uop_1262,uop_1277,])
output2 = relay.Tuple([bop_1252,uop_1262,uop_1277,])
func_1285 = relay.Function([var_1251,], output)
mod['func_1285'] = func_1285
mod = relay.transform.InferType()(mod)
mutated_mod['func_1285'] = func_1285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1286 = relay.var("var_1286", dtype = "float64", shape = (16, 2, 16))#candidate|1286|(16, 2, 16)|var|float64
func_1285_call = mutated_mod.get_global_var('func_1285')
call_1287 = func_1285_call(var_1286)
output = call_1287
func_1288 = relay.Function([var_1286], output)
mutated_mod['func_1288'] = func_1288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1304 = relay.var("var_1304", dtype = "int32", shape = (7, 2, 1))#candidate|1304|(7, 2, 1)|var|int32
var_1305 = relay.var("var_1305", dtype = "int32", shape = (7, 2, 7))#candidate|1305|(7, 2, 7)|var|int32
bop_1306 = relay.greater_equal(var_1304.astype('bool'), var_1305.astype('bool')) # shape=(7, 2, 7)
output = relay.Tuple([bop_1306,])
output2 = relay.Tuple([bop_1306,])
func_1323 = relay.Function([var_1304,var_1305,], output)
mod['func_1323'] = func_1323
mod = relay.transform.InferType()(mod)
var_1324 = relay.var("var_1324", dtype = "int32", shape = (7, 2, 1))#candidate|1324|(7, 2, 1)|var|int32
var_1325 = relay.var("var_1325", dtype = "int32", shape = (7, 2, 7))#candidate|1325|(7, 2, 7)|var|int32
output = func_1323(var_1324,var_1325,)
func_1326 = relay.Function([var_1324,var_1325,], output)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1353 = relay.var("var_1353", dtype = "float64", shape = (7, 9, 1))#candidate|1353|(7, 9, 1)|var|float64
uop_1354 = relay.asinh(var_1353.astype('float64')) # shape=(7, 9, 1)
func_845_call = mod.get_global_var('func_845')
func_847_call = mutated_mod.get_global_var('func_847')
const_1357 = relay.const([-7.836943,-3.556723,3.879155,-8.203623,-1.611660,7.109687,3.851851,-2.829559,-2.843040,-8.244589,0.959391,1.635771,4.813422,-0.171668,6.334455,4.333786,2.121276,3.177502,-4.902207,-3.699783,-6.157819,-5.087448,-2.513622,8.269001,-4.305779,6.647550,-6.244334,7.355873,9.702343,-2.209848,7.371888,-3.758114,-9.818186,9.993624,9.224113,5.798615,-8.659614,1.898135,-6.013126,3.418257,1.955751,0.201217,1.612319,5.495728,-8.476933,-6.908211,0.966493,7.465494,-9.134016,9.921330,-2.756393,8.578590,-0.749459,2.866116,1.152506,6.057149,-5.973352,-9.378821,3.839734,-6.009263,-3.748205,-0.169789,4.409473,1.897217,-7.584179,8.628155,2.321158,2.495978,-9.260150,-8.586917,2.713464,-5.204572,-6.900619,-2.672400,-1.237641,-6.452254,3.743593,-0.862675,-3.342617,-0.229187,-3.062989,0.359499,-5.644763,-6.709791,6.967241,0.498226,-8.865224,-1.327058,-6.415851,0.615170,4.375964,9.390359,-8.079485,3.928577,5.413467,8.558510,-2.790660,3.965583,-9.616160,6.434981,3.879486,-4.120523,-1.750074,-8.814378,3.384149,9.260682,2.521969,6.956889,-1.596260,-9.428192,-1.581703,-4.635202,-0.104001,-3.248491,3.282767,2.691674,-0.148132,-2.681900,-5.520372,6.906971,-9.557158,5.553606,-0.199699,8.963626,5.048631,-0.142989,-7.304928,-1.259860,3.249780,9.242862,-3.091414,6.291911,-1.643119,6.623223,-9.786324,7.120067,1.774109,2.093326,9.296626,6.568151,-1.363651,0.923580,-0.693464,-6.776306,-3.209768,-6.493135,-8.075032,3.006255,3.181919,2.438498,6.795581,7.413800,2.411102,-7.275427,3.856132,-1.803813,-1.398009,-7.979031,6.605262,-5.708693,-1.671917,9.733447,-2.669302,-7.781724,9.787595,8.652056,-7.438339,-9.269885,1.401823,-6.305402,-4.627875,5.354455,-5.067311,9.989090,-5.327946,7.446083,-8.569309,0.944532,0.157375,-3.762532,3.581952,-4.086886,-3.972882,-7.183686,2.446041,3.159291,4.101655,-5.652947,-2.858902,1.993437,5.972189,-7.604816,2.164323,-1.426282,6.228303,-0.243508,7.250985,-5.248139,6.519953,2.039031,3.208529,-8.103816,1.102789,5.334313,-7.936812,-5.443016,1.089205,9.623171,-8.446673,-2.180120,-5.046795,6.560873,2.513857,-7.821302,-3.563113,1.694559,-6.133427,-1.405854,2.677354,1.654912,-3.855183,3.291049,-2.924333,6.703976,6.837056,-8.306230,-4.086720,3.263339,4.647748,-5.505638,6.110662,-1.732468,9.292883,-6.073285,-1.007787,-9.921401,5.588279,-5.574253,-1.027842,1.867387,4.425597,7.359036,8.581404,3.530502,-7.071442,-0.858155,-3.229121,5.806388,5.783545,-3.318458,-8.482118,-7.270859,-8.425867,2.612459,-4.675496,-1.643609,8.737956,0.315091,-7.698481,2.354495,-6.130944,0.370347,-4.926938,-9.101681,-7.670427,1.986552,7.518261,-8.886136,2.347930,-8.294546,-4.901233,4.932837,9.235642,-1.613884,-3.961098,-4.040968,8.380486,6.857518,7.565292,8.651947,-7.850605,-8.779985,2.241543,0.741324,-5.939535,-8.447705,8.438471,-2.708256,6.233678,-1.478565,4.535545,-3.619734,-5.317717,-3.892373,-5.084408,9.535582,2.832182,-9.797858,5.949281,5.550227,-0.251937,-1.081083,0.303958,-8.030531,-4.992621,-4.810524,1.603504,-0.820495,-9.624759,5.667958,2.003659,3.809291,-4.047723,5.417584,-7.043330,-8.997387,-7.971165,-9.623364,8.271444,-0.703219,6.340590,9.129262,-1.928623,1.912518,3.060441,2.051879,5.563017,2.419433,-6.164093,6.213615,2.662738,9.037324,7.325941,5.141417,-3.070254,-3.258924,9.680385,4.316361,2.419147,-2.218475,5.174804,6.479320,6.477158,9.552359,1.214287,-5.171053,-8.812474,9.371271,7.695769,-6.639540,-0.101227,3.049922,1.078508,0.559277,8.726234,9.902122,6.654996,-1.315092,6.399567,8.199731,-5.011936,6.362219,0.344488,-1.750076,5.853848,4.890060,9.975329,9.101933,5.372802,-4.010300,9.899976,6.084260,-5.215550,9.686352,9.967552,1.022125,-8.434398,-3.234445,2.420762,-2.506543,-5.187762,-0.863058,-7.549508,-5.019677,0.857224,4.357437,-5.467399,4.179815,-2.596444,-5.992204,2.394847,1.325231,-4.157521,-9.143290,0.602667,-8.476613,-8.344768,4.588929,4.697824,-0.073520,-4.483564,2.278780,-0.923361,-5.032758,1.201452,1.449198,-4.195165,-1.982213,-5.017596,-9.180469,1.769149,1.443527,9.258407,-6.363787,-8.927645,5.824502,-9.534056,0.437282,-3.779316,1.406136,-1.030844,-4.789674,-5.680932,5.777938,1.333200,-2.903705,5.885210,-5.190218,-0.030026,7.217811,4.092830,-1.172076,0.111585,5.193623,5.944143,8.635987,9.294791,-2.676698,-7.287018,-4.828567,0.972850,-8.946980,6.899195,8.354427,0.378988,-3.275562,-0.028473,4.207447,0.681420,3.469410,6.147060,-9.008341,-9.835015,-4.599503,8.432829,2.895008,0.591825,0.937357,-4.228927,5.951657,1.843368,3.181200,-0.953082,1.283562,1.611406,-7.740686,7.709998,2.477814,5.719489,-2.726995,-7.974695,9.512530,2.909908,-4.889736,5.085168,8.924597,-0.741810,-7.433908,7.645599,-8.119629,-4.329375,-2.624926,9.514775,-9.441681,3.552917,8.958961,-1.643418,-6.423591,9.958176,6.890765,-9.228486,0.160327,2.033825,0.221507,2.092707,5.472286,-4.226254,6.000691,1.687561,-4.962022,-8.723745,8.470004,-7.934908,-3.683808,-3.167182,-9.048676,7.040972,6.188842,-4.062179,8.491524,-0.044237,7.355987,-8.217390,8.682967,-3.554273,5.564539,4.715956,8.981516,-0.902336,-6.888949,-4.754826,0.607544,-3.135054,-2.775215,5.705697,7.013144,8.159474,-7.687108,6.737777,9.374266,0.655516,2.450091,7.605756,-2.484647,-6.818409,5.450989,4.704064,-5.942058,8.308080,-1.369821,1.930589,0.184755,3.179706,-5.384572,5.527802,-6.095888,-9.309677,9.355857,7.233260,7.056937,-5.191253,-9.094240,8.728020,-5.036318,6.771372,8.321273,-9.592532,4.088873,-7.706148,-0.314813,-7.534612,-8.164312,-3.366391,-3.162791,5.471962,-5.770215,-7.044644,-0.712849,7.535871,0.214466,0.771105,1.588354,9.582628,4.149574,0.562956,2.874950,5.169276,-6.926753,4.420539,1.893084,1.310398,5.349141,-3.867340,9.601613,-9.012652,-4.429095,-4.063195,8.715597,9.152822,9.141060,-4.680178,-5.192504,9.339007,-7.339399,8.412849,7.856707,3.388828,1.088751,-2.680915,0.268637,1.215870,0.847537,-3.367151,5.388817,9.398256,-2.679451,6.080808,8.155882,4.754619,0.371313,6.560424,2.268448,8.995644,-9.616720,-9.664932,-2.765037,-6.919657,6.790030,-3.589862,-9.825148,1.589347,-6.689606,8.204750,8.426723,9.178497,1.591747,-8.344466,7.109692,0.613443,5.295377,9.974310,0.344834,2.229160,-0.991052,9.487342,-0.456927,0.346935,9.926972,-5.341408,-7.240818,-4.095759,7.361778,-8.959400,-1.278850,-0.385546,4.824189,-1.766206,4.719968,6.677430,5.194125,-0.629617,-1.144817,-0.304996,-6.638356,-4.382204,-6.152794,6.764844,3.355652,-3.510426,2.670592,-2.022457,2.408917,-8.113009,-1.335980,-7.400299,-1.742352,5.778265,9.600949,4.416203,8.750000,-3.642813,-5.380720,5.213442,2.074336,9.131502,-7.768734,-5.641481,-3.794807,4.576960,-9.459014,0.007879,-4.790830,8.858945,-5.073909,-3.044600,7.684242,-9.153333,-7.057268,8.466007,5.568167,-5.827544,-4.670198,5.868619,3.031187,-3.404377,4.873821,9.425442,-2.450250,6.506592,5.745595,-0.180947,-3.922171,-6.879495,-9.231868,-5.592434,-4.707794,-8.625119,6.502219,-7.563150,-5.260504,1.862789,-9.457228,5.168063,1.967299,5.722612,-9.651425,3.713311,-2.600303,1.837580,-0.685731,9.312025,4.282048,7.914116,4.717320,0.685495,-7.369693,8.023295,9.650965,-4.632091,2.749028,1.570744,8.677263,-0.734928,-4.359661,6.423705,-6.404863,-0.053163,-2.183703,-2.797937,7.721961,4.475045,-0.932283,-3.492851,5.411156,0.454766,-6.817366,2.920975,7.836816,-8.519003,6.399650,-5.982913,-1.041735,2.746588,7.287525,-1.586613,-8.048082,-0.678232,5.681694,-3.538495,7.924503,3.886844,3.650421,-4.266131,4.601225,-8.365677,-0.382384,-4.763887,3.799009,3.478174,1.239117,8.577829,2.728756,4.214644,-8.013203,0.581685,3.260826,-7.419249,5.388537,2.539108,3.230192,-8.477712,3.425999,-0.883851,-0.062734,0.974170,2.357524,2.976037,-6.704268,4.692660,6.357125,9.414645,-7.311096,8.138195,-9.701484,-2.850759,-0.887395,0.201604,1.701077,9.651506,4.862584,1.792776,7.588781,2.067010,8.948912,5.630798,8.785454,9.554048,-3.825860,-5.815321,-2.472111,-6.491544,7.136967,-6.468039,7.423402,-1.422907,-9.397168,5.673903,7.256164,1.832219,-1.402040,0.419561,0.919467,2.809089,3.198470,-1.600160,-6.681084,-2.682739,-1.133989,-6.354378,-9.285246,-2.429350,-0.098136,6.348086,-6.213774,4.394874,6.450786,6.015497,5.956699,-2.658886,-9.875802,-6.615220,8.745097,-4.762020,5.464361,3.397962,3.434286,-5.767201,5.860993,6.206816,2.267218,-5.858782,5.607391,2.478915,-7.063152,4.391649,0.257885,4.179658,3.371510], dtype = "float32")#candidate|1357|(858,)|const|float32
call_1356 = relay.TupleGetItem(func_845_call(relay.reshape(const_1357.astype('float32'), [11, 6, 13])), 0)
call_1358 = relay.TupleGetItem(func_847_call(relay.reshape(const_1357.astype('float32'), [11, 6, 13])), 0)
output = relay.Tuple([uop_1354,call_1356,const_1357,])
output2 = relay.Tuple([uop_1354,call_1358,const_1357,])
func_1361 = relay.Function([var_1353,], output)
mod['func_1361'] = func_1361
mod = relay.transform.InferType()(mod)
var_1362 = relay.var("var_1362", dtype = "float64", shape = (7, 9, 1))#candidate|1362|(7, 9, 1)|var|float64
output = func_1361(var_1362)
func_1363 = relay.Function([var_1362], output)
mutated_mod['func_1363'] = func_1363
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1501 = relay.const([[[2.056009,7.142253,5.800243,-4.265145,-2.886479,8.829345],[-8.090941,-1.943381,-8.722034,2.108449,5.870384,-8.400368],[2.958438,0.900747,7.512123,-4.230462,2.383146,5.167527],[4.363254,2.533762,-4.388208,-3.608787,-6.343223,0.938200],[6.122477,1.129807,-3.472622,-4.903016,9.857399,7.256451],[-2.003935,4.732684,9.238025,-5.832393,-5.724927,3.495283],[9.692085,-4.359161,-3.781321,-8.287775,-9.912459,-3.564259],[7.062467,8.418902,-1.782050,-0.379760,-3.472075,-4.071455],[-9.083838,-2.142505,1.234235,-8.891797,6.812981,-9.865490],[-3.890018,8.533160,-9.143616,2.396416,-9.210040,-4.038055],[3.684492,-6.990064,-4.804754,-1.563194,3.822037,-3.577304],[-3.875501,3.255088,1.269673,9.307597,0.462086,-9.587346],[-1.978070,9.303069,-1.790339,4.234046,-9.446897,-0.192077]],[[-6.434036,-6.463948,6.725206,-0.503609,9.356312,-8.659911],[0.415985,-2.913040,-8.701382,-4.757027,-1.471337,-4.422117],[8.681764,-6.215656,7.042650,4.389532,3.217560,9.086492],[-5.759371,-7.059530,-5.680732,-3.022289,-3.554661,-4.865745],[3.173079,4.998689,-5.708568,0.446212,3.380377,-1.378905],[-2.284283,9.752038,3.597312,-1.774095,-6.218994,0.711426],[4.639302,4.406280,-3.521991,0.130299,-0.758836,1.720968],[-4.335480,1.379694,-6.169474,-9.972923,8.248055,8.980698],[-5.478370,-5.113715,-0.596972,7.091378,7.507012,-1.660377],[-9.398059,9.885642,-9.337383,-6.852241,8.704405,2.687374],[4.914262,-2.053124,4.538352,4.650987,-7.994263,-0.186309],[9.112313,-5.653196,-1.233890,-9.065962,-5.781121,-6.046890],[-7.484700,5.243421,-3.548132,8.165386,-1.582352,-0.730081]]], dtype = "float32")#candidate|1501|(2, 13, 6)|const|float32
uop_1502 = relay.rsqrt(const_1501.astype('float32')) # shape=(2, 13, 6)
uop_1513 = relay.acosh(uop_1502.astype('float64')) # shape=(2, 13, 6)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
const_1529 = relay.const([-1.237067,-4.863141,-3.010509,-6.458046,-6.763036,-2.170602,-4.524201,-8.905027,1.963493,1.975681,-5.726707,-4.708490,-5.303729,-6.664733], dtype = "float32")#candidate|1529|(14,)|const|float32
call_1528 = func_622_call(relay.reshape(const_1529.astype('float32'), [1, 14, 1]))
call_1530 = func_622_call(relay.reshape(const_1529.astype('float32'), [1, 14, 1]))
bop_1543 = relay.floor_mod(uop_1513.astype('float32'), relay.reshape(uop_1502.astype('float32'), relay.shape_of(uop_1513))) # shape=(2, 13, 6)
output = relay.Tuple([call_1528,const_1529,bop_1543,])
output2 = relay.Tuple([call_1530,const_1529,bop_1543,])
func_1546 = relay.Function([], output)
mod['func_1546'] = func_1546
mod = relay.transform.InferType()(mod)
mutated_mod['func_1546'] = func_1546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mutated_mod.get_global_var('func_1546')
call_1547 = func_1546_call()
output = call_1547
func_1548 = relay.Function([], output)
mutated_mod['func_1548'] = func_1548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_1558 = relay.TupleGetItem(func_1546_call(), 0)
call_1559 = relay.TupleGetItem(func_1548_call(), 0)
output = call_1558
output2 = call_1559
func_1560 = relay.Function([], output)
mod['func_1560'] = func_1560
mod = relay.transform.InferType()(mod)
mutated_mod['func_1560'] = func_1560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mutated_mod.get_global_var('func_1560')
call_1561 = func_1560_call()
output = call_1561
func_1562 = relay.Function([], output)
mutated_mod['func_1562'] = func_1562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1652 = func_1560_call()
call_1653 = func_1560_call()
var_1661 = relay.var("var_1661", dtype = "float64", shape = (11, 14, 11))#candidate|1661|(11, 14, 11)|var|float64
bop_1662 = relay.left_shift(call_1652.astype('uint32'), var_1661.astype('uint32')) # shape=(11, 14, 11)
bop_1665 = relay.left_shift(call_1653.astype('uint32'), var_1661.astype('uint32')) # shape=(11, 14, 11)
uop_1673 = relay.rsqrt(bop_1662.astype('float64')) # shape=(11, 14, 11)
uop_1675 = relay.rsqrt(bop_1665.astype('float64')) # shape=(11, 14, 11)
output = uop_1673
output2 = uop_1675
func_1676 = relay.Function([var_1661,], output)
mod['func_1676'] = func_1676
mod = relay.transform.InferType()(mod)
var_1677 = relay.var("var_1677", dtype = "float64", shape = (11, 14, 11))#candidate|1677|(11, 14, 11)|var|float64
output = func_1676(var_1677)
func_1678 = relay.Function([var_1677], output)
mutated_mod['func_1678'] = func_1678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_1723 = relay.TupleGetItem(func_1546_call(), 1)
call_1724 = relay.TupleGetItem(func_1548_call(), 1)
output = call_1723
output2 = call_1724
func_1741 = relay.Function([], output)
mod['func_1741'] = func_1741
mod = relay.transform.InferType()(mod)
output = func_1741()
func_1742 = relay.Function([], output)
mutated_mod['func_1742'] = func_1742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1749 = func_1560_call()
call_1750 = func_1560_call()
uop_1764 = relay.rsqrt(call_1749.astype('float32')) # shape=(1, 14, 1)
uop_1766 = relay.rsqrt(call_1750.astype('float32')) # shape=(1, 14, 1)
output = relay.Tuple([uop_1764,])
output2 = relay.Tuple([uop_1766,])
func_1769 = relay.Function([], output)
mod['func_1769'] = func_1769
mod = relay.transform.InferType()(mod)
output = func_1769()
func_1770 = relay.Function([], output)
mutated_mod['func_1770'] = func_1770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1840 = relay.var("var_1840", dtype = "float32", shape = (11, 3, 9))#candidate|1840|(11, 3, 9)|var|float32
uop_1841 = relay.sin(var_1840.astype('float32')) # shape=(11, 3, 9)
bop_1870 = relay.subtract(var_1840.astype('uint16'), relay.reshape(uop_1841.astype('uint16'), relay.shape_of(var_1840))) # shape=(11, 3, 9)
bop_1874 = relay.mod(uop_1841.astype('float64'), relay.reshape(bop_1870.astype('float64'), relay.shape_of(uop_1841))) # shape=(11, 3, 9)
func_1361_call = mod.get_global_var('func_1361')
func_1363_call = mutated_mod.get_global_var('func_1363')
const_1879 = relay.const([7.155369,-0.602287,-0.576193,-6.188145,-0.437270,6.588463,4.674529,8.276817,-3.140883,-4.277026,-4.137416,-9.165832,-7.498675,-5.022021,-2.680838,-4.823218,9.902796,5.690278,3.052112,2.783372,-3.955034,0.028528,3.201824,4.254822,-5.833335,-3.348181,4.895921,-4.911182,-2.730073,4.118135,-1.028384,-5.788701,7.055757,-4.055771,-9.808587,-4.919938,-7.482689,-4.578419,-0.458145,1.312208,1.947528,7.308778,-9.277486,7.275822,-1.184424,2.906972,-7.712760,-5.002154,8.685418,-8.033682,5.776839,-5.173784,-2.456097,7.156157,0.121127,0.572433,-6.751662,5.495896,0.324093,9.679733,-1.216861,-4.988594,-5.438311], dtype = "float64")#candidate|1879|(63,)|const|float64
call_1878 = relay.TupleGetItem(func_1361_call(relay.reshape(const_1879.astype('float64'), [7, 9, 1])), 0)
call_1880 = relay.TupleGetItem(func_1363_call(relay.reshape(const_1879.astype('float64'), [7, 9, 1])), 0)
bop_1889 = relay.less_equal(uop_1841.astype('bool'), relay.reshape(bop_1870.astype('bool'), relay.shape_of(uop_1841))) # shape=(11, 3, 9)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
const_1907 = relay.const([7.471710,-0.960558,-3.148701,-2.773187,-7.938619,6.855718,4.438552,0.208937,3.133078,-0.756778,3.722314,-1.978419,7.775005,-2.805459,-3.899023,4.125713,-1.361941,-1.962593,-1.400601,-8.090432,1.243246,-5.139507,-1.034847,-9.024072,-3.036695,1.469897,-1.751455,-8.500685,-3.247859,-4.581475,-4.746994,-1.380907,8.087340,0.207373,-3.013654,7.471942,3.965325,-5.111081,9.345311,-6.851185,1.012217,0.513702,2.662231,9.968094,-6.981715,-9.446651,8.653264,-2.857828,9.546949,7.682142,9.259018,7.443442,-1.543091,-6.993992,-0.486226,-1.508363,-6.163060,3.043693,2.465037,2.854689,-5.791645,-8.449135,1.559188,3.847489,8.105249,-1.596433,6.497011,3.682674,8.041766,8.497024,-2.239160,7.387164,2.726582,0.596687,9.492058,9.269904,-8.808466,-3.628907,-8.239969,3.190682,-4.701203,-6.976192,2.247563,6.484086,6.334636,5.317176,-5.070340,-5.703410,1.349807,-9.337202,0.756681,1.519619,-0.741783,1.943834,6.602700,-3.527969,-7.717870,8.948637,-0.176695,-5.575784,9.840477,-2.728953,-5.468435,1.849534,-2.804130,-2.081208,1.313492,4.265663,5.017126,-1.769205,9.628896,-5.484992,4.570891,-8.296504,2.171738,6.217515,-4.437669,-8.319744,9.406189,-8.389745,-6.033824,6.115837,-3.516076,8.052740,1.518213,-4.401562,-7.197825,-6.144489,-3.660641,6.093637,2.409373,-3.586331,-3.934116,-5.856814,6.914316,4.673694,6.491241,3.122182,-8.652978,-0.414577,7.427925,-9.641962,4.138225,2.583795,6.261216,5.188566,-7.370398,-7.579483,7.836259,-3.585398,-6.472159,-7.870410,-4.499163,7.473122,-1.192954,-7.719458,9.463557,9.275623,4.725465,-3.184295,7.953346,7.869089,-4.113927,3.240826,-5.731605,-0.257450,9.524953,-7.319116,-9.522978,-7.047700,4.043819,-9.455670,-2.157888,-8.805394,1.397633,-4.510588,-4.527813,-1.555994,-0.335277,-8.914938,5.838816,4.707443,6.071658,-8.463634,2.700495,-4.177441,3.968494,2.401792,-6.351052,8.364241,8.414861,0.655168,5.165824,-0.936354,2.621923,-9.534872,4.966540,1.542102,6.033255,-5.136142,9.678021,-1.591385,-1.529790,-7.866555,1.032833,-4.656566,3.243319,-0.829477,7.104533,-4.258873,-3.226711,0.639792,-7.596965,-8.811764,-5.992143,3.807372,-6.663819,-4.289692,0.871734,7.141212,-7.741911,7.680973,6.520521,-7.798539,-2.347899,5.592578,8.835062,-5.440037,-1.776808,3.799137,-6.986488,-4.490347,-5.936383,1.962345,9.731143,-2.793309,-9.564048,4.544463,-0.789852,-2.950577,9.786297,4.352630,-2.562987,-7.047427,-9.383374,5.346895,-8.423615,8.882778,-7.730291,3.474926,-7.430562,2.785029,5.308352,-9.465222,-6.085674,8.613674,0.200881,-5.492286,-6.650285,-1.810719,-3.377239,7.485048,5.193077,-2.476025,0.004726,0.358973,6.263485,-7.684823,0.534186,-7.362942,4.589202,8.639033,-8.656297,-5.377577,4.507553,-3.089007,-6.552309,-8.011728,-9.425797,0.029061,-7.973182,7.936815,5.457363,7.226847,8.062771,-8.443381,9.063495,0.651759,3.226457,-7.015708,-8.452114,3.687153,0.345382,-1.224023,-5.090218,4.317424,-6.253311,-6.948367,6.749304,-8.425155,-7.159923,5.167127,7.081559,9.858160,3.248460,9.745007,-2.514660,-8.673705,-6.664643,-9.485065,9.973507,-5.255817,-0.197055,7.670981,-5.339933,-7.122144,4.344828,-4.723941,-9.334412,0.408427,1.466133,1.929876,5.383663,5.087438,-0.461061,-6.534573,-7.673186,1.097601,-4.996841,-9.815180,2.020642,8.365490,-6.522208,7.763606,6.584864,-8.856904,7.194115,3.841981,-9.840576,-8.405168,-9.956580,-4.588111,0.700045,6.790325,-2.838017,-6.543577,6.406508,-6.396736,0.844607,-7.367245,9.168247,-3.763707,2.019500,7.598855,-6.300028,-5.271208,6.703577,4.846825,2.804852,-3.164174,-6.273565,3.035913,-3.654025,-9.918110,4.323566,-4.741298,3.765279,1.999140,-5.036981,-9.259770,-5.788422,0.662716,6.586240,3.792516,-7.801653,2.524210,-5.420095,-2.102191,-7.734883,2.878968,3.943232,-5.944104,-3.582812,3.021526,3.888587,3.723312,5.687125,5.802033,-7.090524,5.008444,-5.733080,5.254303,6.503411,6.132384,-9.972513,6.576267,-2.582081,1.769562,4.831937,-1.475655,-6.037433,-7.844817,-6.331257,3.093575,-3.506795,4.798917,9.326697,-1.968419,-1.637914,-3.216614,-8.760461,1.529955,-9.476129,8.418550,6.761387,-0.761589,9.715816,3.847733,-4.272829,-3.178214,5.601118,5.147868,0.202345,4.014218,1.517961,-6.455015,5.515291,-4.793314,-5.215450,4.746284,8.701579,-1.955888,7.873591,5.401695,-3.662773,-6.371492,6.665992,-3.988708,9.710392,7.792254,5.507772,-1.324689,1.416957,-6.986631,-8.873336,1.177964,1.038821,4.049769,-2.864921,-0.306195,-3.641124,-2.604617,-4.421893,-7.469056,4.853189,-9.876500,-0.114363,4.082449,-5.314922,0.250466,-2.361944,-7.338002,-8.978777,-6.044214,-0.624228,7.132337,2.271408,6.738410,-8.885790,-0.152143,3.364365,0.544485,2.707941,8.693073,-9.887569,2.320818,0.371688,5.210059,0.104773,-7.468983,-4.925798,-8.189435,-7.987319,-8.559499,-2.969554,-2.374808,1.301180,1.264537,-2.730945,-4.348781,1.873613,7.621785,-2.238510,0.393821,-3.588629,5.179560,7.556317,4.604469,6.608261,9.816020,-4.245997,3.419605,2.245551,-2.696001,6.383778,-4.630840,-6.438954,-2.759980,-0.208340,-5.778661,7.938665,-9.180370,-6.780176,-8.143841,9.342824,6.852069,3.649687,9.425655,3.854596,0.573015,0.236257,6.132028,2.550427,-6.108289,6.796958,3.579836,-2.298295,-4.762144,0.305584,1.672828,-4.708579,-7.038736,4.435269,-9.577926,5.685353,-2.146825,8.627709,2.633639,2.620635,3.567139,-5.069913,0.323502,-0.096498,3.606672,5.804482,-1.268097,7.490249,7.133589,-8.165865,3.094069,5.702835,-5.047624,-6.181668,-2.760539,6.341989,-0.943941,-1.808045,6.838297,4.463966,-1.239692,5.631370,-1.826958,8.638646,2.325935,4.336496,3.342147,-4.439417,-9.461283,1.112743,-7.633084,-7.896908,4.520109,6.005760,6.818529,1.984986,3.429553,-8.393297,-2.644080,2.635415,8.453330,-2.851569,-9.389548,8.253041,2.491305,6.040808,7.858155,2.182709,-1.950014,0.568212,6.201587,9.416137,6.766705,5.065566,5.574548,-9.546527,0.650350,9.836624,5.415553,-7.978360,-3.204132,1.383294,6.047393,-0.014532,6.540894,5.275565,-8.990692,1.515122,-9.251551,1.731902,2.885714,0.908308,1.082708,-0.306745,3.233631,6.571736,-6.684490,6.077077,3.863433,0.693040,-9.243323,-1.683392,7.846031,-0.711256,-1.629475,5.379775,2.393812,-3.844878,-8.458881,-5.975594,-8.532585,8.053648,-0.290068,-8.954753,-6.234924,-4.690605,6.356186,2.423467,-8.648705,-3.841710,-9.238156,-2.488371,-3.908423,-3.435794,-0.738351,-6.921326,-3.282976,5.591016,5.701303,4.712690,-5.130476,-9.547994,-1.177572,-5.432981,9.867664,1.052360,1.457865,-5.708797,-3.085006,-6.020836,4.872705,7.822177,-6.858092,-7.661154,0.333008,8.650761,0.745813,4.773067,4.153640,-1.677801,-6.445542,-5.361796,6.845434,-5.900490,2.073800,-2.992089,5.036517,0.711762,0.680016,2.109621,6.482830,-9.502677,-0.864706,-0.561762,4.727570,1.957095,-8.169883,2.112834,-1.283977,7.043692,-7.496403,-6.010621,-7.492528,1.636206,8.642702,-1.825005,6.126093,5.330834,-2.308778,-5.310798,-2.055552,1.444879,7.648181,-9.010436,-4.495729,-1.719046,-0.469981,9.975969,-4.655980,-1.082608,2.899896,-8.295463,7.190608,8.601063,0.137554,0.534308,3.850151,-1.969917,-5.279477,-3.629249,-6.064423,7.650943,2.956940,0.950392,-6.201094,0.862973,-4.733669,-6.019842,6.771286,1.716808,2.689487,-3.096992,-2.690216,-9.971206,9.522614,1.022006,1.681345,-2.559081,1.117773,-7.054447,9.630802,-0.435489,6.144108,0.111948,-9.904895,7.147012,-6.232080,-4.200351,-6.430131,2.727006,3.362735,7.464516,5.277762,2.416919,-4.852169,-0.398476,4.657746,6.800168,-1.800542,3.720957,-1.910193,-2.104591,-0.427663,4.549413,7.639504,-6.742123,3.409123,8.089599,-9.925847,-4.939533,-7.755876,-1.016819,3.841727,-9.088473,7.791078,-2.743439,-9.910645,-6.041157,8.991477,7.158229,-4.882100,6.109291,-0.533544,-1.401589,7.176489,2.846098,-0.904331,9.300619,6.051205,6.420761,7.941869,-7.235028,-6.857997,-9.539585,-9.828536,3.507511,6.345597,5.144396,5.185560,-8.937492,-3.673166,6.607938,-7.945500,-2.630568,-7.959449,-8.186336,1.070976,-0.280295,7.477759,7.487657,-2.785702,-4.531875,3.484605,9.397145,4.648440,2.146362,4.908978,-0.614610,8.073661,-6.823267,-7.617526,4.478961,8.849728,-3.778342,-7.669152,8.432810,-9.719482,-5.611638,9.029518,-0.075568,-7.303312,-7.668343,-8.412559,7.669293,5.850933,-3.202090,-6.539181,0.214344,7.350354,-1.071030,0.719433,-4.339642,8.028990,0.927629,2.729427,9.233322,3.638263,7.542218,0.941533,8.367928,-6.173014,-3.159727,6.022308,6.445935,6.349087,-4.961023,7.477648,-0.876708,7.247163,6.790296,-9.921712,-8.987585,-4.881349,1.098831,-4.158467,-2.117381,-6.782457,3.401949,-0.073915,-7.428157,-2.836845,-8.731557,-8.642001,-4.709776,-4.800340,-5.844761,6.850379,-6.317043,-2.686740,6.594372,-4.061217,-0.765574,-3.754460,-4.438073,-7.235679,2.821521,0.651966,-7.624336,-1.155753,6.420503,-1.568241,7.574631,3.570945,6.622093,-9.359621,-4.677856,-0.757650,7.051437,3.282055,6.579308,1.413667,-3.796556,-0.375503,-1.978626,-1.120457,0.473752,1.198727,-6.150765,-2.096888,-5.333753,-2.914658,0.169962,7.572971,1.608854,-1.617345,-9.412686,4.866336,-7.007189,7.288413,6.643157,-2.745076,-0.723467,2.549996,-9.205207,-1.555338,-1.535238,-4.326126,1.590703,9.528761,-6.232183,0.884234,6.757356,1.509171,-3.420035,-1.335918,-6.205325,-7.986875,-1.532426,3.154999,2.641540,5.613335,-0.622048,7.461906,-8.869909,6.739286,-1.075062,6.954453,7.274149,5.510449,-6.133649,3.876052,5.770779,0.324428,-5.837361,-6.530659,7.210980,0.481146,1.069458,6.440413,9.381952,-8.519474,-9.028093,9.562737,3.254794,2.542069,-2.041805,-6.179414,9.946693,9.090130,2.583452,6.342705,-9.336169,-6.801475,-6.608465,9.958383,-5.815298,8.886546,7.050461,2.943667,-5.974336,-9.824775,8.141771,-9.257758,5.240529,-8.840448,8.697337,1.479020,3.301375,-9.069279,5.298725,3.852191,8.330731,-7.538770,-1.296003,1.129342,3.511287,7.798675,3.444057,6.101548,-8.994707,5.245157,2.076318,4.850386,-5.256708,-8.567524,1.336636,-7.495301,9.183080,0.284617,-9.753010,-6.397307,7.850074,-2.943512,0.324363,5.340192,-7.722160,0.417019,1.934948,-7.469166,-2.939673,9.702244,-0.025459,6.630158,5.014762,6.087805,6.173613,4.260204,-5.441302,1.372581,7.858100,4.771278,8.843463,6.586971,3.186269,2.997432,0.568509,8.288619,-4.530759,1.223978,5.338189,9.275251,-2.475981,8.244018,-0.710283,-6.488188,7.008064,3.872076,-5.192362,0.718804,-5.432129,-5.564806,-6.259828,-8.373716,-7.172207,-6.077682,-3.849330,-3.149268,-8.865459,7.997038,2.653646,-7.617483,9.981930,6.546139,-7.685411,6.084954,1.213719,-1.855941,6.819595,-9.223435,-0.927793,-7.095529,-7.803462,1.416886,-4.177951,-4.277597,-5.810543,9.795029,-6.001120,-4.195123,1.527817,-7.938590,8.901156,-6.522103,8.336060,-0.687998,3.193267,-7.490816,5.806920,-0.733234,6.741306,3.764284,7.404667,3.095989,-1.379873,9.231154,-3.261574,-7.443046,-7.816998,-6.186856,-9.174935,-6.521076,2.413192,8.368811,-8.888682,8.632532,-4.724003,-8.349087,0.506266,-2.362678,2.110210,0.882090,3.644663,8.137275,0.606439,6.419670,-4.912192,9.226639,-3.933259,-6.600396,3.752960,-1.083490,9.041984,4.167151,5.276129,-1.717073,6.317689,-8.273409,0.168043,3.256591,6.079267,-3.577916,-7.033518,-8.938416,3.862392,3.977709,-9.281968,-0.806935,-9.207927,-6.568506,8.738503,-7.102871,-3.570789,6.229737,-6.213124,-9.118262,9.047799,2.954113,8.986980,9.139400,4.330705,0.050666,-7.452768,0.299795,3.708205,-7.831341,-9.759147,-6.938111,8.462718,-1.743647,-3.946851,-6.277668,-0.296990,4.615956,3.236344,-0.844907,6.186718,-7.057809,9.270396,8.282323,4.142208,-1.550661,-5.148771,-9.095788,-6.686833,-9.441451,-4.503995,7.128868,-0.278728,-5.183124,8.937632,-7.362117,-6.980381,-2.357860,-2.302037,-7.401211,-8.695011,5.871017,1.577690,-5.386267,8.794178,-5.112059,1.567544,-5.570408,-9.557138,7.433088,3.394885,9.375063,-5.832821,8.648939,3.979767,-8.358063,-9.464778,-7.648797,-8.998460,-8.593188,4.920657,7.760034,-2.999457,6.285714,-2.780233,-8.163203,-6.067028,8.161723,7.899816,-0.341722,-7.764186,-1.497551,-7.558219,9.272879,-2.467176,-1.119676,-6.557961,-8.476728,2.576078,-3.633942,2.595741,1.109788,-8.740829,-1.253539,-6.957691,-2.059591,-0.172364,1.155956,8.594626,8.084774,-5.459565,-2.730072,1.846364,3.842025,-7.979530,-2.612510,-2.684537,6.682727,-1.071037,2.420629,-0.081097,0.189356,-6.140923,-4.778869,7.441778,7.735602,9.546308,2.918407,3.138928,-5.073710,-3.097949,3.753223,-6.444669,6.458887,-7.888984,9.284853,-7.769646,5.172184,-9.213236,-2.736254,2.546935,7.835228,2.080131,5.288873,-3.562389,-0.319551,-3.122798,1.838848,3.911108,9.890439,3.638119,-2.267364,-1.720644,6.466558,6.318071,-8.717706,7.373162,-3.654004,-9.701355,0.518454,5.370108,7.192670,5.899124,-3.026896,5.754485,3.766326,3.664618,-2.278993,3.778289,-3.546608,-7.694248,-7.940107,-6.397003,-9.103390,-6.903358,9.930522,-6.250061,-8.009613,-6.276750,-8.539515,-5.671098,-0.092408,7.718601,3.181576,-8.457526,-7.367111,9.024651,9.192883,0.737172,-4.476580,3.792514,5.084195,9.695847,-0.221517,-1.981281,8.851086,-1.409516,-4.905832,5.202360,-3.498571,3.439926,-1.141352,8.718140,8.793847,2.284024,4.835567,2.335980,-4.001899,-3.033714,-9.885561,9.552162,5.595776,-0.519026,-5.251941,-9.018709,8.023098,1.737749,-6.246109,6.032885,3.272388,7.259966,-3.046939,4.457099,7.387506,3.156107,-6.737726,-6.910340,-0.209741,-3.535859,-0.541810,9.214919,-4.832304,3.612741,-6.810558,-1.866976,7.791205,-8.894834,0.179405,9.578938,7.203574,-0.189810,2.011994,6.634049,0.566440,-6.769277,-7.097230,-7.494412,-5.041313,6.892937,-9.477953,-2.209703,-7.761683,9.840785,-8.180006,-3.087826,2.636116,-7.104631,6.476891,-8.007091,6.503825,-6.439855,2.315733,-4.483268,-1.393754,-6.466267,-2.163613,2.785530,9.391080,-1.681524,8.235545,2.717005,9.368708,7.495134,3.744228,-8.050430,6.571337,5.698409,1.600977,-1.256323,3.588782,-0.236388,-2.281956,-2.633722,0.499914,6.170012,-6.661760,5.326276,-4.528311,-6.427195,9.066218,-8.866363,-5.196249,9.719349,-9.926317,5.555130,-8.265632,4.494356,7.473429,-6.192365,-9.481918,5.643997,-1.502417,-3.127768,-2.082651,-6.788668,3.358567,-3.696922,-0.232617,4.536890,7.606481,5.536445,7.132268,-7.713766,-3.630918,2.232358,8.903621,7.004871,7.000624,-4.987403,4.619603,1.863846,-0.155618,-5.836432,9.920748,2.965334,-5.118850,-4.960824,8.085231,9.522432,5.323061,-2.291027,8.768837,-8.899107,2.612567,-1.370681,-3.756389,-3.435787,1.923082,2.889719,-6.173103,-1.030633,5.688817,-6.128312,2.638688,6.634512,-2.653726,7.006523,7.945991,3.488685,7.228149,0.246383,3.706906,-3.035155,-8.872995,-3.039725,-8.777610,-4.214794,6.266336,-5.026502,-3.895893,-6.671627,8.522900,-5.482050,1.452782,4.631624,-9.225246,-9.612928,-3.157218,-6.028584,4.102500,-7.400926,4.283235,6.814317,4.989404,-1.891500,6.086118,4.005490,-7.725953,-3.947755,7.691332,-6.814091,-9.081071,4.628668,7.456610,-1.661989,-9.011294,-0.873744,7.510763,8.875306,8.515470,-2.897774,-5.142998,1.122507,6.727345,-5.777765,-1.991437,-6.084493,-1.752070,8.747524,-5.159478,-7.778318,-7.461197,-6.265539,-8.151208,4.064500,4.160267,9.940574,4.858436,7.356708,-1.164859,0.269720,-8.015600,2.930556,4.898917,1.500290,-5.609809,2.132529,-7.943669,-3.988504,0.269260,5.789658,3.659556,-9.760832,5.065744,-2.622956,2.228356,-2.943034,4.862462,-0.514714,2.334790,-4.317228,5.924796,-0.383708,-2.855475,7.979230,-6.200470,-5.563956,9.713288,-3.349802,-4.425388,-0.540618,-9.341481,-7.951501,-6.785133,2.382108,-3.801050,-4.120792,8.554239,1.385102,4.166413,6.774456,9.080136,-4.966128,-1.055349,-3.039672,8.471163,-5.151256,4.285503,3.421339,-1.412979,0.783447,0.483018,-0.456287,1.920997,-7.209107,-9.568265,-7.715423,3.863192,-9.285047,-2.235371,5.346799,7.014579,0.393314,-5.565731,8.707444,1.053051,6.766675,-2.128289,6.168556,5.212801,-9.647681,6.249154,-3.456655,9.991880,-7.158633,9.799829,7.559579,-2.342807,4.310181,-5.181107,5.385772,-9.139482,-2.603762,-3.447902,-5.271866,3.686566,-2.127085,7.615525,4.081437,2.000312,-5.474908,7.897890,-4.048330,6.097788,-2.554276,-9.898872,4.404005,-9.374055,2.191221,-9.718227,5.080307,-1.969454,-3.238564,-4.867104,6.803428,-0.589193,-1.114683,5.410226,2.075581,-9.074935,-1.621050,6.218347,9.194976,8.433445,-5.670897,-5.944144,8.804185,1.626224,0.364454,-3.381025,-3.254994,-8.074259,-3.237167,3.845730,-1.189275,-2.611658,-8.845708,6.799474,5.720360,-4.101440,-3.336210,2.471983,6.784297,8.354738,-1.795031,1.639126,-0.901086,4.204106,-6.118225,-9.924574,9.476824,1.162130,-0.191161,0.842921,-6.623224,-3.818089,2.702794,-6.005107,-4.660146,5.576056,3.366399,9.282314,-9.878979,7.597332,3.907540,-1.644953,-2.866173,-2.860265,-0.925065,-9.615562], dtype = "float64")#candidate|1907|(1694,)|const|float64
call_1906 = func_1676_call(relay.reshape(const_1907.astype('float64'), [11, 14, 11]))
call_1908 = func_1676_call(relay.reshape(const_1907.astype('float64'), [11, 14, 11]))
bop_1913 = relay.logical_xor(bop_1874.astype('int32'), relay.reshape(bop_1870.astype('int32'), relay.shape_of(bop_1874))) # shape=(11, 3, 9)
func_1155_call = mod.get_global_var('func_1155')
func_1160_call = mutated_mod.get_global_var('func_1160')
var_1919 = relay.var("var_1919", dtype = "float32", shape = (1050,))#candidate|1919|(1050,)|var|float32
var_1920 = relay.var("var_1920", dtype = "uint8", shape = (2, 112))#candidate|1920|(2, 112)|var|uint8
call_1918 = relay.TupleGetItem(func_1155_call(relay.reshape(var_1919.astype('float32'), [14, 15, 5]), relay.reshape(var_1919.astype('float32'), [14, 15, 5]), relay.reshape(var_1920.astype('uint8'), [224,]), ), 2)
call_1921 = relay.TupleGetItem(func_1160_call(relay.reshape(var_1919.astype('float32'), [14, 15, 5]), relay.reshape(var_1919.astype('float32'), [14, 15, 5]), relay.reshape(var_1920.astype('uint8'), [224,]), ), 2)
output = relay.Tuple([call_1878,const_1879,bop_1889,call_1906,const_1907,bop_1913,call_1918,var_1919,var_1920,])
output2 = relay.Tuple([call_1880,const_1879,bop_1889,call_1908,const_1907,bop_1913,call_1921,var_1919,var_1920,])
func_1923 = relay.Function([var_1840,var_1919,var_1920,], output)
mod['func_1923'] = func_1923
mod = relay.transform.InferType()(mod)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mutated_mod.get_global_var('func_1923')
var_1925 = relay.var("var_1925", dtype = "float32", shape = (11, 3, 9))#candidate|1925|(11, 3, 9)|var|float32
var_1926 = relay.var("var_1926", dtype = "float32", shape = (1050,))#candidate|1926|(1050,)|var|float32
var_1927 = relay.var("var_1927", dtype = "uint8", shape = (2, 112))#candidate|1927|(2, 112)|var|uint8
call_1924 = func_1923_call(var_1925,var_1926,var_1927,)
output = call_1924
func_1928 = relay.Function([var_1925,var_1926,var_1927,], output)
mutated_mod['func_1928'] = func_1928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1741_call = mod.get_global_var('func_1741')
func_1742_call = mutated_mod.get_global_var('func_1742')
call_1932 = func_1741_call()
call_1933 = func_1741_call()
func_1361_call = mod.get_global_var('func_1361')
func_1363_call = mutated_mod.get_global_var('func_1363')
const_1969 = relay.const([3.094178,8.134573,1.204541,-3.526898,0.030528,9.633491,-5.409381,-8.053393,5.252938,-9.341799,-7.971998,0.747124,-6.764574,9.503897,8.644808,-5.031003,9.853925,-1.114640,1.820299,-0.961527,4.885613,-0.428132,0.031036,-6.667017,-5.059958,4.330165,4.182761,-4.359233,-3.760347,1.025321,-0.434629,-0.157174,8.322606,6.479484,8.407954,-8.691171,2.173474,-8.638212,1.709841,2.562427,-8.194805,4.892896,7.108450,1.853681,4.687067,-2.779721,2.765819,-9.090606,4.348783,8.884526,1.368656,2.615770,-3.780777,1.666278,1.648538,0.564211,-1.685689,4.808822,-7.765730,8.833866,-9.367806,-1.969515,-4.750844], dtype = "float64")#candidate|1969|(63,)|const|float64
call_1968 = relay.TupleGetItem(func_1361_call(relay.reshape(const_1969.astype('float64'), [7, 9, 1])), 2)
call_1970 = relay.TupleGetItem(func_1363_call(relay.reshape(const_1969.astype('float64'), [7, 9, 1])), 2)
output = relay.Tuple([call_1932,call_1968,const_1969,])
output2 = relay.Tuple([call_1933,call_1970,const_1969,])
func_1973 = relay.Function([], output)
mod['func_1973'] = func_1973
mod = relay.transform.InferType()(mod)
output = func_1973()
func_1974 = relay.Function([], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1741_call = mod.get_global_var('func_1741')
func_1742_call = mutated_mod.get_global_var('func_1742')
call_2002 = func_1741_call()
call_2003 = func_1741_call()
func_133_call = mod.get_global_var('func_133')
func_136_call = mutated_mod.get_global_var('func_136')
var_2007 = relay.var("var_2007", dtype = "float64", shape = (90,))#candidate|2007|(90,)|var|float64
call_2006 = relay.TupleGetItem(func_133_call(relay.reshape(var_2007.astype('float64'), [3, 10, 3])), 1)
call_2008 = relay.TupleGetItem(func_136_call(relay.reshape(var_2007.astype('float64'), [3, 10, 3])), 1)
uop_2024 = relay.exp(call_2006.astype('float64')) # shape=(3, 10, 3)
uop_2026 = relay.exp(call_2008.astype('float64')) # shape=(3, 10, 3)
func_1190_call = mod.get_global_var('func_1190')
func_1194_call = mutated_mod.get_global_var('func_1194')
const_2031 = relay.const(1, dtype = "int16")#candidate|2031|()|const|int16
const_2032 = relay.const([5,-1,-5,-4,-1,-1], dtype = "int16")#candidate|2032|(6,)|const|int16
call_2030 = func_1190_call(relay.reshape(const_2031.astype('int16'), []), relay.reshape(const_2032.astype('int16'), [6, 1]), )
call_2033 = func_1190_call(relay.reshape(const_2031.astype('int16'), []), relay.reshape(const_2032.astype('int16'), [6, 1]), )
func_1285_call = mod.get_global_var('func_1285')
func_1288_call = mutated_mod.get_global_var('func_1288')
var_2035 = relay.var("var_2035", dtype = "float64", shape = (512,))#candidate|2035|(512,)|var|float64
call_2034 = relay.TupleGetItem(func_1285_call(relay.reshape(var_2035.astype('float64'), [16, 2, 16])), 0)
call_2036 = relay.TupleGetItem(func_1288_call(relay.reshape(var_2035.astype('float64'), [16, 2, 16])), 0)
var_2038 = relay.var("var_2038", dtype = "float64", shape = (3, 10, 3))#candidate|2038|(3, 10, 3)|var|float64
bop_2039 = relay.bitwise_and(uop_2024.astype('int8'), relay.reshape(var_2038.astype('int8'), relay.shape_of(uop_2024))) # shape=(3, 10, 3)
bop_2042 = relay.bitwise_and(uop_2026.astype('int8'), relay.reshape(var_2038.astype('int8'), relay.shape_of(uop_2026))) # shape=(3, 10, 3)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2049 = relay.TupleGetItem(func_1973_call(), 2)
call_2050 = relay.TupleGetItem(func_1974_call(), 2)
uop_2051 = relay.tan(uop_2024.astype('float64')) # shape=(3, 10, 3)
uop_2053 = relay.tan(uop_2026.astype('float64')) # shape=(3, 10, 3)
func_1190_call = mod.get_global_var('func_1190')
func_1194_call = mutated_mod.get_global_var('func_1194')
call_2055 = func_1190_call(relay.reshape(const_2031.astype('int16'), []), relay.reshape(const_2032.astype('int16'), [6, 1]), )
call_2056 = func_1190_call(relay.reshape(const_2031.astype('int16'), []), relay.reshape(const_2032.astype('int16'), [6, 1]), )
uop_2058 = relay.erf(uop_2051.astype('float32')) # shape=(3, 10, 3)
uop_2060 = relay.erf(uop_2053.astype('float32')) # shape=(3, 10, 3)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_2061 = func_1560_call()
call_2062 = func_1560_call()
uop_2065 = relay.log10(uop_2058.astype('float64')) # shape=(3, 10, 3)
uop_2067 = relay.log10(uop_2060.astype('float64')) # shape=(3, 10, 3)
output = relay.Tuple([call_2002,var_2007,call_2030,const_2031,const_2032,call_2034,var_2035,bop_2039,call_2049,call_2055,call_2061,uop_2065,])
output2 = relay.Tuple([call_2003,var_2007,call_2033,const_2031,const_2032,call_2036,var_2035,bop_2042,call_2050,call_2056,call_2062,uop_2067,])
func_2083 = relay.Function([var_2007,var_2035,var_2038,], output)
mod['func_2083'] = func_2083
mod = relay.transform.InferType()(mod)
mutated_mod['func_2083'] = func_2083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2083_call = mutated_mod.get_global_var('func_2083')
var_2085 = relay.var("var_2085", dtype = "float64", shape = (90,))#candidate|2085|(90,)|var|float64
var_2086 = relay.var("var_2086", dtype = "float64", shape = (512,))#candidate|2086|(512,)|var|float64
var_2087 = relay.var("var_2087", dtype = "float64", shape = (3, 10, 3))#candidate|2087|(3, 10, 3)|var|float64
call_2084 = func_2083_call(var_2085,var_2086,var_2087,)
output = call_2084
func_2088 = relay.Function([var_2085,var_2086,var_2087,], output)
mutated_mod['func_2088'] = func_2088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_2125 = relay.TupleGetItem(func_1769_call(), 0)
call_2126 = relay.TupleGetItem(func_1770_call(), 0)
const_2129 = relay.const([[[0.912402,-7.487239,-2.677653,5.270808,-9.105564,3.321899,-0.338823,2.478078,6.474225,-4.010806,-6.251934,6.407130],[9.522522,-5.527456,8.359031,-0.281390,0.833929,-3.948923,0.288324,4.481115,-2.064035,-5.179390,3.841363,-7.173394],[0.818160,-9.566781,0.746408,-0.020684,3.843930,3.449885,-8.677108,3.695691,-9.596263,1.935174,1.580127,-7.198160],[9.577711,3.020465,-5.899269,-2.494149,-9.994587,-7.598785,-9.730100,-2.736958,4.346865,7.217417,-2.974739,7.689710],[-8.080689,-8.910778,-9.591592,3.832887,8.601591,-2.804750,-6.814448,-4.150269,-2.724123,5.497991,7.815362,-1.654639],[2.297523,-5.207303,3.839908,-0.385881,-3.651449,7.606431,8.589523,-5.998281,4.347182,4.916522,5.584189,-7.681052],[-4.946160,5.167535,-7.542804,-8.838432,8.559675,9.802747,0.462623,-8.370674,-1.710067,-2.056477,-6.458154,-5.621999],[8.071160,-2.205703,4.986813,-2.917499,-0.665171,0.286083,-4.606897,-0.937657,-0.497470,-1.426005,7.009022,9.361504],[-0.345419,-2.015670,7.927690,9.046897,-8.293126,8.416811,-5.591302,2.872590,2.571746,7.403839,-4.231270,3.691749],[3.359473,-4.491426,-6.494043,-2.542110,5.667547,-9.500587,-2.203825,-1.103033,2.582343,-3.058988,3.018129,-2.465577],[1.163798,-3.449237,1.736546,-7.663611,6.543566,2.003189,4.364556,9.148427,-3.966180,7.592605,0.924034,6.406167],[1.960482,-7.217267,0.548521,-6.809026,5.693968,2.402688,-2.409920,9.892952,-3.305966,-6.881641,1.756097,4.843577],[6.975422,-0.774339,-4.490200,3.645876,5.734948,-3.360706,-9.188030,8.016936,-6.221911,-9.555324,8.614367,-5.911445],[-5.098314,6.955143,-1.163264,-3.698553,8.949754,-4.832647,-5.107482,5.107634,-0.238115,7.371746,-5.772908,-4.473488]],[[3.997801,-1.611098,-7.453134,-7.157140,3.902198,-2.164125,-5.211809,1.394604,5.134970,1.490163,2.430491,-5.276373],[9.776147,-9.958233,-9.841070,-3.046738,1.818542,-3.843909,4.636975,-3.370682,-8.250765,7.509896,9.018747,-0.547621],[-9.505683,6.411613,2.291607,4.236821,2.283028,-6.324102,-9.130064,2.312704,1.717350,-7.496856,-3.539298,7.015196],[0.614071,-0.151038,8.688418,-4.433853,-2.010202,2.108867,1.600286,-7.079885,-7.788159,-8.782031,4.245948,-2.894380],[-6.030184,-9.101464,-2.066893,1.876840,-3.500201,-1.092473,6.007337,6.522668,-4.714007,3.139874,-4.204688,-4.796159],[-2.102821,9.884590,-6.772370,6.273921,-1.787098,-0.219287,8.657298,9.330337,1.465142,-9.147859,-9.394264,-8.969035],[-2.373821,-9.495934,-4.506105,-4.373387,3.094466,-8.362365,2.750642,-0.350242,8.956422,-7.118413,7.715214,-4.929531],[-1.420281,9.805756,4.970570,4.243740,4.663082,-2.440962,5.212260,-3.191822,-9.618360,-1.367752,-4.570419,-3.885475],[8.034439,3.403034,-1.738216,7.718047,-8.325685,5.156920,7.318111,9.396529,-5.691706,-1.287901,-3.089951,-8.422140],[6.592575,0.003172,-4.642317,-1.285994,-8.889737,-1.873006,4.209908,9.451539,-6.697723,8.638169,-1.170266,-5.817780],[-6.384340,-8.694163,2.557692,-9.382658,7.906028,7.696455,4.522515,-5.744407,1.231891,-5.517894,-6.655348,-6.242046],[-8.974529,-4.558651,-8.453284,6.239907,5.283802,-9.554515,-1.392501,-6.102742,-1.685923,0.690286,4.087606,1.432409],[-9.863201,2.423048,-3.115590,4.016455,-1.121186,6.420409,-5.401333,2.461695,-4.829582,7.693422,-8.180395,-7.852309],[6.488647,-8.871526,2.934678,5.112438,3.136426,2.758130,-1.938490,-6.569164,-4.536379,1.796015,-4.209646,2.770383]]], dtype = "float32")#candidate|2129|(2, 14, 12)|const|float32
bop_2130 = relay.not_equal(call_2125.astype('bool'), const_2129.astype('bool')) # shape=(2, 14, 12)
bop_2133 = relay.not_equal(call_2126.astype('bool'), const_2129.astype('bool')) # shape=(2, 14, 12)
uop_2134 = relay.acos(bop_2130.astype('float32')) # shape=(2, 14, 12)
uop_2136 = relay.acos(bop_2133.astype('float32')) # shape=(2, 14, 12)
output = uop_2134
output2 = uop_2136
func_2139 = relay.Function([], output)
mod['func_2139'] = func_2139
mod = relay.transform.InferType()(mod)
mutated_mod['func_2139'] = func_2139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2139_call = mutated_mod.get_global_var('func_2139')
call_2140 = func_2139_call()
output = call_2140
func_2141 = relay.Function([], output)
mutated_mod['func_2141'] = func_2141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_2161 = relay.TupleGetItem(func_1769_call(), 0)
call_2162 = relay.TupleGetItem(func_1770_call(), 0)
func_1676_call = mod.get_global_var('func_1676')
func_1678_call = mutated_mod.get_global_var('func_1678')
var_2165 = relay.var("var_2165", dtype = "float64", shape = (1694,))#candidate|2165|(1694,)|var|float64
call_2164 = func_1676_call(relay.reshape(var_2165.astype('float64'), [11, 14, 11]))
call_2166 = func_1676_call(relay.reshape(var_2165.astype('float64'), [11, 14, 11]))
func_264_call = mod.get_global_var('func_264')
func_268_call = mutated_mod.get_global_var('func_268')
const_2175 = relay.const([-5,-6,-10,-4,4,-5,-2,1,-4,-2,-5,7,10,6,-3,9,10,8,-2,-6,2,-3,4,4,2,-9,8,7,-5,5,-3,-9,2,4,-10,2,-2,8,-6,7,8,-7,10,-4,6,-5,6,6,1,-3,2,5,-10,-3,-5,6,-4,2,8,1,7,-5,-9,-2,2,-1,3,-10,9,9,4,9,-10,-4,-7,4,-10,-9,-1,1,-8,-10,10,-6,-3,-5,2,-5,-5,1,-3,-5,6,-3,-5,-2,1,-6,2,-4,-4,-2,-4,-9,5,10,6,10,-9,1,-1,7,-7,-5,-2,5,-7,-4,-3,10,4,-5,-5,-6,-10,-8,-2,-3,5,-7,4,-5,-9,1,-4,10,-3,10,-2,2,-3,-2,-5,-3,2,9,2,-8,5,-2,2,-6,-9,-5,-1,4,9,-9,3,-7,2,3,-2,-6,2,-3,-4,-1,5,5,-3,2,-6,-4,-2,6,-7,-1,-9,5,7,-8,-6,3,3,9,-6,5,1,3,-10,-1,-7,7,9,9,-9,6,-4,-9,6,10,-9,6,-4,-5,-7,5,-9,9,-4,6,5,-9,1,-3,-5,1,-10,6,-7,2,9,9,10,6,8,7,3,10,5,-1,8,6,10,-4,5,2,-3,-2,10,-7,9,10,10,-6,-5,5,10,3,-5,6,3,4,10,9,3,6,9,-3,-8,-6,-5,-8,6,4,8,-1,-9,-7,8,-7,-3,2,1,-3,-4,1,3,4,-9,-9,8,10,-5,-8,-2,-6,10,-6,-3,9,1,-7,-9,4,-1,9,-4,-9,-3,-4,4,9,-7,-4,-8,-8,-4,5,-7,-5,1,10,-10,-4,5,-9,7,-2,7,-3,-10,-5,-5,2,-7,-2,1,-4,10,4,-6,-6,-3,7,4,-4,-10,-3,-9,-9,-1,5,-3,-3,-8,8,-1,7,3,-3,-4,3,6,-1,10,1,2,-3,6,-8,4,8,-2,-9,-9,-4,-9,-10,-5,-2,-4,-8,9,-1,-9,9,9,-9,2,-6,8,7,8,-6,8,-10,1,9,1,-6,1,6,-3,-10,10,-6,-7,10,10,-8,2,-1,6,-6,9,9,-7,1,9,5,-7,-10,3,10,3,-2,-8,1,-2,-10,9,3,6,6,-3,-5,-1,9,-4,-9,-8,4,-3,-9,2,-6,-1,-6,10,4,-2,-8,-3,-9,7,-4,9,1,2,7,-1,4,-9,-1,-2,-4,4,-7,8,-4,6,-10,-5,-8,-2,1,-5,7,5,5,-3,-10,-1,-3,-7,-6,4,-9], dtype = "uint32")#candidate|2175|(480,)|const|uint32
var_2176 = relay.var("var_2176", dtype = "int64", shape = (24,))#candidate|2176|(24,)|var|int64
call_2174 = relay.TupleGetItem(func_264_call(relay.reshape(const_2175.astype('uint32'), [16, 5, 6]), relay.reshape(const_2175.astype('uint32'), [16, 5, 6]), relay.reshape(var_2176.astype('int64'), [24,]), ), 2)
call_2177 = relay.TupleGetItem(func_268_call(relay.reshape(const_2175.astype('uint32'), [16, 5, 6]), relay.reshape(const_2175.astype('uint32'), [16, 5, 6]), relay.reshape(var_2176.astype('int64'), [24,]), ), 2)
output = relay.Tuple([call_2161,call_2164,var_2165,call_2174,const_2175,var_2176,])
output2 = relay.Tuple([call_2162,call_2166,var_2165,call_2177,const_2175,var_2176,])
func_2186 = relay.Function([var_2165,var_2176,], output)
mod['func_2186'] = func_2186
mod = relay.transform.InferType()(mod)
mutated_mod['func_2186'] = func_2186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2186_call = mutated_mod.get_global_var('func_2186')
var_2188 = relay.var("var_2188", dtype = "float64", shape = (1694,))#candidate|2188|(1694,)|var|float64
var_2189 = relay.var("var_2189", dtype = "int64", shape = (24,))#candidate|2189|(24,)|var|int64
call_2187 = func_2186_call(var_2188,var_2189,)
output = call_2187
func_2190 = relay.Function([var_2188,var_2189,], output)
mutated_mod['func_2190'] = func_2190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_2202 = relay.TupleGetItem(func_1769_call(), 0)
call_2203 = relay.TupleGetItem(func_1770_call(), 0)
output = call_2202
output2 = call_2203
func_2209 = relay.Function([], output)
mod['func_2209'] = func_2209
mod = relay.transform.InferType()(mod)
mutated_mod['func_2209'] = func_2209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2209_call = mutated_mod.get_global_var('func_2209')
call_2210 = func_2209_call()
output = call_2210
func_2211 = relay.Function([], output)
mutated_mod['func_2211'] = func_2211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2209_call = mod.get_global_var('func_2209')
func_2211_call = mutated_mod.get_global_var('func_2211')
call_2218 = func_2209_call()
call_2219 = func_2209_call()
output = call_2218
output2 = call_2219
func_2225 = relay.Function([], output)
mod['func_2225'] = func_2225
mod = relay.transform.InferType()(mod)
mutated_mod['func_2225'] = func_2225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mutated_mod.get_global_var('func_2225')
call_2226 = func_2225_call()
output = call_2226
func_2227 = relay.Function([], output)
mutated_mod['func_2227'] = func_2227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2139_call = mod.get_global_var('func_2139')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2251 = func_2139_call()
call_2252 = func_2139_call()
output = relay.Tuple([call_2251,])
output2 = relay.Tuple([call_2252,])
func_2257 = relay.Function([], output)
mod['func_2257'] = func_2257
mod = relay.transform.InferType()(mod)
output = func_2257()
func_2258 = relay.Function([], output)
mutated_mod['func_2258'] = func_2258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2292 = relay.var("var_2292", dtype = "int8", shape = (3, 8, 4))#candidate|2292|(3, 8, 4)|var|int8
var_2293 = relay.var("var_2293", dtype = "int8", shape = (3, 8, 4))#candidate|2293|(3, 8, 4)|var|int8
bop_2294 = relay.bitwise_and(var_2292.astype('int8'), relay.reshape(var_2293.astype('int8'), relay.shape_of(var_2292))) # shape=(3, 8, 4)
bop_2298 = relay.logical_or(var_2293.astype('bool'), relay.reshape(bop_2294.astype('bool'), relay.shape_of(var_2293))) # shape=(3, 8, 4)
func_746_call = mod.get_global_var('func_746')
func_750_call = mutated_mod.get_global_var('func_750')
var_2302 = relay.var("var_2302", dtype = "uint8", shape = (224,))#candidate|2302|(224,)|var|uint8
call_2301 = relay.TupleGetItem(func_746_call(relay.reshape(var_2302.astype('uint8'), [4, 14, 4]), relay.reshape(var_2302.astype('uint8'), [4, 14, 4]), relay.reshape(var_2302.astype('bool'), [4, 14, 4]), ), 4)
call_2303 = relay.TupleGetItem(func_750_call(relay.reshape(var_2302.astype('uint8'), [4, 14, 4]), relay.reshape(var_2302.astype('uint8'), [4, 14, 4]), relay.reshape(var_2302.astype('bool'), [4, 14, 4]), ), 4)
output = relay.Tuple([bop_2298,call_2301,var_2302,])
output2 = relay.Tuple([bop_2298,call_2303,var_2302,])
func_2306 = relay.Function([var_2292,var_2293,var_2302,], output)
mod['func_2306'] = func_2306
mod = relay.transform.InferType()(mod)
var_2307 = relay.var("var_2307", dtype = "int8", shape = (3, 8, 4))#candidate|2307|(3, 8, 4)|var|int8
var_2308 = relay.var("var_2308", dtype = "int8", shape = (3, 8, 4))#candidate|2308|(3, 8, 4)|var|int8
var_2309 = relay.var("var_2309", dtype = "uint8", shape = (224,))#candidate|2309|(224,)|var|uint8
output = func_2306(var_2307,var_2308,var_2309,)
func_2310 = relay.Function([var_2307,var_2308,var_2309,], output)
mutated_mod['func_2310'] = func_2310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_2322 = relay.TupleGetItem(func_1769_call(), 0)
call_2323 = relay.TupleGetItem(func_1770_call(), 0)
var_2336 = relay.var("var_2336", dtype = "float32", shape = (7, 14, 4))#candidate|2336|(7, 14, 4)|var|float32
bop_2337 = relay.not_equal(call_2322.astype('bool'), var_2336.astype('bool')) # shape=(7, 14, 4)
bop_2340 = relay.not_equal(call_2323.astype('bool'), var_2336.astype('bool')) # shape=(7, 14, 4)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2341 = relay.TupleGetItem(func_1973_call(), 1)
call_2342 = relay.TupleGetItem(func_1974_call(), 1)
func_1923_call = mod.get_global_var('func_1923')
func_1928_call = mutated_mod.get_global_var('func_1928')
var_2344 = relay.var("var_2344", dtype = "float32", shape = (297,))#candidate|2344|(297,)|var|float32
const_2345 = relay.const([-0.479868,7.024421,6.744242,-7.292673,4.916412,-3.371844,0.047332,8.939164,-1.566432,8.979011,-6.132262,-5.901523,-6.008894,7.414252,1.197818,-2.581396,0.011131,6.025902,8.214266,3.328214,3.681346,7.688023,2.766487,0.784600,1.173811,3.338737,-1.599978,-9.896544,3.458911,2.494231,-4.251787,-1.095481,9.361433,7.998253,-3.893042,0.174069,-5.175235,-0.497158,-5.394817,8.821996,-5.486777,6.983156,-9.554803,-4.559530,-1.306070,-4.616923,9.102876,-8.678032,5.728551,3.533592,-2.976738,4.497475,-7.073561,2.797154,3.948100,-7.862266,0.758067,7.441585,9.698097,8.026416,6.848403,0.945475,-5.467161,6.700250,0.300408,6.519612,-2.169859,-6.605726,4.260296,6.038357,-9.876146,-4.575262,1.195973,2.062354,8.258110,-2.775672,0.274719,7.857506,-3.266322,2.256872,-3.675169,7.136398,0.612035,9.045941,3.706298,6.106131,-3.935817,4.154765,0.433502,-2.924932,5.302199,2.912839,-4.664550,9.955909,-2.371843,-0.481638,0.055743,8.249387,6.523229,9.358525,5.415298,-2.315195,9.107680,9.592305,6.069884,1.981372,1.866557,0.175373,-9.069622,-8.488952,8.796689,9.699695,-3.692679,0.001620,3.475009,3.897297,6.159341,-6.750711,4.753579,-0.198423,2.300531,-6.386284,-9.117212,6.103517,-6.618828,2.322509,-0.360769,-6.678673,6.963651,0.307575,1.910683,3.055233,-6.204947,7.670860,-9.622947,-9.263836,4.029520,-7.589305,-5.233131,-3.923218,0.276954,-3.644957,-5.067042,-7.792584,-4.984961,-6.868100,-9.363000,6.830911,1.963320,6.441983,-0.099775,-2.943702,-6.674606,4.957447,-2.757072,0.271527,-8.613585,3.839322,-9.788168,-3.663536,1.471090,-0.209998,3.217711,8.725156,-9.628947,-3.034962,-5.887395,6.895212,1.505665,-1.652759,-6.850664,2.171595,3.176932,-3.991727,-4.932827,6.169704,4.481954,-3.798214,9.743688,-3.551221,-5.333397,-8.911909,3.759068,6.195240,-0.111988,-8.393928,9.997552,0.619404,-3.178853,-5.789711,8.854265,6.340667,-2.295467,4.645339,9.295831,9.649162,-9.771192,-3.014909,9.594775,-8.263048,1.435354,9.220882,-0.199763,-8.461441,-8.636630,1.454807,-3.260803,-0.712166,-3.677713,-5.238950,0.741482,0.198020,9.037523,6.098481,9.088283,-7.563407,-3.214327,7.807524,8.028508,-8.073135,4.775050,7.910471,-8.227859,-0.917216,7.633334,-5.209888,-9.680069,-1.987420,5.268183,2.772640,0.470735,-2.655723,3.026686,-9.529415,4.840394,-0.744102,-4.466113,-5.074157,5.990992,-7.372456,8.622282,-7.215642,-6.412223,4.506247,-5.460146,3.526025,-8.275956,-7.368670,9.511247,-5.707085,8.850763,2.265440,-9.569683,-6.108040,-2.130373,-0.210555,1.141937,-3.038606,8.673314,0.820160,-4.745338,6.197235,-1.224872,-7.154201,-7.466075,-3.311707,0.689867,-7.368471,6.177710,6.179547,6.709665,6.336189,-9.817847,-0.483199,3.487088,-3.894532,-7.521606,8.272056,8.307946,2.166919,-7.547393,6.907747,6.046363,-9.929271,-7.550778,5.778454,3.013623,-0.228930,-7.727476,-8.581540,-3.229278,8.669667,-9.954545,-7.397814,-7.079417,-2.848737,5.736933,-3.884721,5.685617,-6.474794,-1.101266,6.806678,-4.382799,-8.412616,-3.725248,2.539659,9.593724,-7.999754,5.381627,6.109546,-7.142981,-6.849039,1.325205,-2.696499,0.650385,-7.493179,-2.862748,-4.667068,8.590124,2.180518,8.051282,-9.431000,9.061133,-0.764731,4.576705,-1.906421,0.219089,-6.812903,2.087181,0.455352,6.507391,8.048202,7.518158,-0.554315,-8.743486,8.716207,-5.456921,-1.380804,-8.481713,-0.011530,-6.475552,2.359447,-7.673575,-0.410984,-6.009849,-5.839058,3.735938,-7.512616,1.988106,0.396616,-0.534247,6.687242,-1.224880,1.156473,7.498819,9.760293,-9.597497,7.836667,-7.944904,9.129094,-5.279294,-1.869525,9.146078,-8.965765,8.796732,-7.968163,-6.080038,2.769656,0.285781,0.508010,-9.233444,-9.636688,7.139332,4.165196,9.410654,8.641372,8.320127,9.559505,-9.080008,4.123357,0.820224,5.260256,-1.432849,-8.252759,3.194772,-9.416388,-7.872392,6.013934,-5.590259,1.487788,6.258811,1.851088,-7.942678,0.598981,7.700675,1.577311,-9.499810,-4.682965,9.986493,-2.274406,5.584622,-2.187255,6.007877,3.141730,1.190014,5.486624,2.396682,2.958197,2.750478,-5.114796,8.803038,1.604698,9.850550,-0.138308,-7.545441,7.805988,0.403746,-9.236165,2.763540,6.592768,-5.737567,0.570679,2.405444,-0.125299,6.658759,3.797684,-8.830602,-1.632734,6.104054,-7.849467,9.749355,6.631116,6.388038,6.537709,3.059772,4.068246,3.162232,-7.361075,9.733887,6.326352,3.533633,-9.038610,0.121992,3.065627,2.035349,5.529534,-2.004570,-6.754165,-7.407142,-6.007553,-7.996101,0.978525,7.587138,-2.134972,-2.480112,2.140378,2.422825,6.284166,8.363913,1.478728,-0.867332,4.165112,4.591568,2.178836,-9.867480,1.107003,6.619956,-6.819028,-4.765388,-1.251139,4.327443,8.699692,8.907784,0.419656,8.468736,2.542729,1.873884,-2.971329,-8.320813,-5.609919,-6.908838,6.195061,9.450552,-1.181758,6.346160,-4.370867,-0.111516,2.173590,1.054477,-3.885016,3.679901,-8.256100,1.302712,8.987006,-2.210810,-4.390157,6.527489,7.229255,2.726664,9.734591,-9.218399,5.433353,2.672740,-7.793795,-0.011987,8.379980,-8.959032,-4.889830,2.345160,-3.560983,-7.405285,-0.941207,-5.006419,-1.320915,6.759720,-7.192997,7.862898,-7.985269,-7.073648,5.739601,-7.206510,-0.311455,9.771216,-5.331235,-9.631431,-4.014487,3.823585,8.244690,-4.340916,2.223987,7.502415,5.177324,-2.024330,4.330423,-8.773992,5.858628,7.172160,-0.900447,-4.455489,4.439857,2.459050,6.790707,-5.640321,-7.381867,-5.546250,-9.136607,-6.941161,6.519984,-2.958449,0.296677,3.212093,9.848048,4.801159,2.101092,-8.735287,-8.734905,9.234441,-2.935843,-3.766272,-1.010215,-1.197430,-7.689923,5.732935,0.289741,-1.022979,-2.988316,1.439189,3.593355,3.822900,9.383382,6.797886,4.880292,3.671420,3.689982,3.547529,0.981451,-1.897995,-9.027165,0.383316,1.634625,-0.762185,1.183107,1.864269,-9.145446,-8.694241,-9.257611,-2.881349,-1.344839,0.502774,1.137333,3.628392,5.427122,5.950624,7.368484,9.257270,-2.973415,7.174340,-7.444189,-9.013974,0.194882,-4.484152,5.310398,-0.450301,-1.430545,0.858844,-9.029080,-7.692754,-3.940741,6.603846,-6.420645,3.748387,-5.215086,7.133933,3.029751,-9.202532,-0.238670,6.315574,4.769786,8.512530,1.191737,3.019969,8.197921,4.692015,9.727896,-0.971165,-5.678740,5.591059,-1.885739,5.258986,-4.056394,-8.685837,-2.637268,-0.879422,4.158069,7.429919,-6.136628,-6.958808,5.696617,-8.067620,-6.806977,-1.105794,-7.793216,-3.688166,-0.787673,-1.131029,2.927570,5.060333,-6.883961,0.959278,3.042505,4.156999,1.366983,-2.837141,1.369308,-4.552372,1.381181,-3.510939,-1.175820,-2.528907,-7.611700,7.817763,7.734534,5.254042,1.201671,-8.895785,-9.037816,-6.191210,8.133710,-0.456497,7.266326,8.318217,7.523163,-5.176664,-0.085089,8.394216,-7.929025,-9.340759,5.741267,7.682992,-0.619865,-2.826395,9.897325,-4.332579,9.114246,-0.631120,4.881407,4.132841,1.680844,-7.252963,-3.367749,5.929045,3.337758,-4.029350,2.310715,6.703160,2.258756,-5.764342,-4.352370,-4.963598,7.582604,1.763313,-1.172802,-5.459513,-8.130537,4.460131,-2.504531,2.447622,-6.488258,-2.746443,-3.559985,5.956509,0.136172,-4.063921,-8.315645,5.000129,4.679761,0.395591,9.331557,-9.367670,-6.003253,-9.592378,-5.594088,-6.393553,-2.578627,-2.208729,-4.054061,-8.113836,-4.513333,-6.067781,4.714372,-8.496086,-5.298688,-6.057504,4.725829,6.623659,-6.389056,-5.120791,-4.958073,6.811972,-1.682311,7.911975,0.097597,-8.026120,-2.080537,0.233289,7.340148,0.698471,3.135637,9.122742,-1.595812,-8.650571,3.721635,9.130619,-8.582849,-2.832656,-3.876898,8.057973,4.658725,5.500644,-1.421168,-0.162040,1.447256,8.149918,5.078110,6.794684,-9.341268,8.526610,1.715664,1.533253,4.897292,-9.822346,7.345489,-4.881196,6.931504,-8.939570,-9.059042,4.579713,-5.519231,-9.489137,-1.947029,3.086049,0.148252,-8.333335,2.412439,-2.274893,0.010549,7.578889,1.902513,1.720728,3.270317,-2.122592,-3.145503,7.916552,2.871526,5.541810,-2.765653,-5.245331,5.271285,-9.600189,-4.631985,0.424000,2.537168,-9.402200,-4.134772,8.790187,2.178574,8.317564,-9.170113,9.771434,-3.810959,3.470204,2.975471,7.386672,-8.591115,-0.240204,-4.302464,-6.220797,-0.703273,-7.916628,-3.708370,-0.083603,-2.897374,-3.722507,2.880245,-6.828823,-4.868741,-4.590891,1.205298,-4.445156,1.186151,-4.358433,-5.442810,0.307259,8.800239,-8.337071,5.183980,0.848475,-3.858457,-8.384488,6.145052,-9.447958,-2.851300,-4.299264,-8.438667,8.197184,1.708067,2.771582,-3.175859,-0.300016,1.930399,-1.131620,4.057756,-1.798442,7.464062,4.865060,3.451448,-4.480521,-1.723746,6.535667,0.134487,-7.871128,-2.340953,-0.402137,-8.821097,-1.777732,0.019819,8.013324,-1.384199,3.856650,-0.144507,2.763560,-9.135704,-4.396555,-0.794754,0.531401,-2.803021,-2.139599,7.303499,-7.496111,8.629591,1.856444,4.825955,1.770793,-6.819942,3.460438,-0.327911,-0.104267,-9.104198,1.316809,-6.900000,-4.595412,3.494316,7.848247,1.818374,-1.855419,-5.890172,-8.923310,-8.781323,-5.470195,-4.145004,-6.007044,-9.119712,4.310588,6.472143,4.929311,5.802555,-8.781710,-6.177342,5.065284,4.681465,-9.344310,-0.561016,7.744558,-3.284670,8.758909,2.349349,8.475360,6.522250,-8.644507,-2.101277,-6.092755,3.976911,-1.391619,9.139039,-8.109161,1.393639,-4.109818,8.641961,2.864057,5.531097,-1.428846,-2.920625,-3.057337,-9.038696,-1.663208,-0.288668,-0.482486,0.847811,6.618917,-7.267027,-4.081197,-9.250738,8.969847,-4.597384,-0.658464,-4.567301,7.818382,-3.441698,-8.649286,-6.703545,1.987839,6.064434,4.158283,-9.537386,9.540415,-7.204068,6.983478,7.284175,-8.318151,5.984164,9.640858,7.650094,-3.552544,1.172263,-6.592628,6.534390,-4.417779,1.738897,2.747663,1.266215,-4.918825,-1.507214,-4.256923,2.286200,-4.209516,0.138822,-4.325255,-5.254899,0.745844,9.723598,9.421858,0.419280,4.527417,3.232504,7.152347,-1.781041,-7.109697,7.809723,-9.376415,9.192153,9.644287,-9.094235,0.825888,-1.927822,-8.614070,-9.694160,-0.435407,-1.529813,-5.311940,-1.409350,-1.485913,-7.359351,-1.001898,9.056750,-5.012583,2.129735,-3.317690,6.494813,-4.851253,-8.417599,1.718393,-9.142972,-5.360994,6.435989,8.933984,-6.173411,-3.517480,-8.345747,-9.431485,0.659601,9.453438,-1.982739,2.280501,1.111313,7.668102,-8.675105,1.744976,-7.705788,0.132688,-3.642973,-0.590375,-9.699351,0.921454,8.643257,1.320103,-1.119044,8.761281,-0.827336,-3.654158,-3.949073,5.737968,-3.931677,7.349582,-0.528812,7.672915,3.313369,-5.760034,-2.276163,5.151790,3.200853], dtype = "float32")#candidate|2345|(1050,)|const|float32
const_2346 = relay.const([7,9,8,5,-3,6,-2,-3,-1,5,2,-9,-10,-3,2,-6,-5,7,7,3,-6,9,8,-2,-9,-5,8,5,4,10,4,-7,5,2,-5,-9,6,10,8,-2,-8,9,2,4,3,-4,-2,-8,4,-8,-7,-1,-4,6,2,10,-7,-5,-2,7,-5,-2,3,-3,-10,-7,7,-1,-10,5,-6,-1,4,2,-5,3,1,8,-5,-10,-3,3,6,2,-10,-7,2,9,-3,3,-3,9,-4,-7,-9,6,-5,-1,5,-6,-10,3,-10,9,-7,-1,-1,-4,7,-3,-2,6,2,-10,-3,-3,-1,5,3,3,6,-10,-4,1,-10,6,7,-9,3,7,-8,-9,1,8,-5,1,7,-10,10,2,8,-9,-4,-6,-10,3,7,4,-3,1,-7,3,6,5,-5,-5,7,-1,-4,7,2,-9,1,9,8,-4,-2,9,8,-3,2,-9,-2,9,-7,-8,-6,10,-2,1,-6,-5,2,6,9,-5,7,-8,-4,5,-5,10,1,9,8,-5,7,-5,-5,10,-2,3,-1,-10,-9,-6,-7,-8,-8,-2,-8,-3,9,3,2,-6,-8,-6,9,4,9,4,8,-4], dtype = "uint8")#candidate|2346|(224,)|const|uint8
call_2343 = relay.TupleGetItem(func_1923_call(relay.reshape(var_2344.astype('float32'), [11, 3, 9]), relay.reshape(const_2345.astype('float32'), [1050,]), relay.reshape(const_2346.astype('uint8'), [2, 112]), ), 5)
call_2347 = relay.TupleGetItem(func_1928_call(relay.reshape(var_2344.astype('float32'), [11, 3, 9]), relay.reshape(const_2345.astype('float32'), [1050,]), relay.reshape(const_2346.astype('uint8'), [2, 112]), ), 5)
func_264_call = mod.get_global_var('func_264')
func_268_call = mutated_mod.get_global_var('func_268')
const_2350 = relay.const([6,-8,4,9,8,1,-4,-5,7,-2,7,7,-1,1,7,-3,-4,3,3,-10,-1,-8,-3,-10,3,9,3,3,-3,1,8,4,-4,-10,8,10,10,6,9,4,-1,1,10,-7,6,-2,1,8,2,-2,7,2,10,-5,-8,-2,-3,-1,6,-4,6,-9,-2,10,-7,6,4,5,8,4,8,-4,-8,-2,5,-7,3,-7,4,-9,-2,9,3,-2,2,6,2,1,-7,4,-10,-10,-8,-8,-6,5,1,4,8,4,3,-1,2,-7,-6,10,2,9,-8,-2,1,2,3,-6,3,-2,2,3,7,4,9,-9,3,-10,-2,-7,4,-5,-7,-10,10,9,9,-9,-10,-10,-6,-9,-7,-2,-5,-2,-8,8,9,-6,-1,-5,4,9,-7,-2,-7,4,4,-3,-6,-10,5,8,7,2,-10,10,-1,8,5,-2,3,-8,-5,5,-7,4,2,-5,7,-7,-4,-10,6,-4,-10,-5,6,9,6,1,-9,-7,-6,-10,-10,1,-5,-3,-1,-2,-5,5,2,-1,9,4,-6,1,-3,-6,-9,1,1,5,-10,4,-5,7,2,6,9,-9,2,6,2,-10,-2,-7,6,-7,-10,-4,-2,2,8,-7,-9,1,-8,-7,-10,1,2,6,-1,-6,4,8,10,9,-10,-4,-3,-2,-3,-3,-10,6,-4,9,3,-6,5,2,4,3,8,-4,-4,3,-7,-10,-1,-6,9,10,-3,9,-2,3,-2,1,4,2,4,-5,2,-6,4,-7,9,4,-6,10,-4,4,-9,-6,2,1,3,-7,-5,-7,-4,1,4,7,-6,7,-2,-6,8,4,-9,-8,-4,7,-7,-6,9,-6,3,-2,-4,9,-2,7,-8,-3,-5,-9,-5,8,-1,3,-4,-2,6,-5,6,6,-10,9,-3,3,3,-9,-8,-10,-1,-6,4,9,-5,2,-8,-9,-1,-6,-1,2,-3,-4,-8,-8,9,-4,-6,-5,-7,10,5,-6,8,-1,-3,4,-4,4,3,10,8,5,9,2,-6,3,-4,10,-5,2,3,-3,-6,-10,-9,-3,6,-10,9,-1,8,10,7,5,-8,7,5,-10,-6,-4,-3,-3,-6,-4,-9,-3,10,-7,1,8,-9,5,-6,-6,7,1,-8,9,-1,10,7,-5,7,6,3,1,3,-9,1,5,-7,6,-3,9,7,2,-3,2,10,-9,-4,-7,4,-9,-1,-3,-1,4,-3,7,-2,-3,-7,-6,3,-10,-6,5,2,7,8,-4,10,-4,8,-2,-10,7,7,4], dtype = "uint32")#candidate|2350|(480,)|const|uint32
const_2351 = relay.const([[-10,-8,-9,-8,6,8,9,-8,3,7,-4,3,-8,-3,1,-5,-6,-5,-10,2,4,-4,1,-10]], dtype = "int64")#candidate|2351|(1, 24)|const|int64
call_2349 = relay.TupleGetItem(func_264_call(relay.reshape(const_2350.astype('uint32'), [16, 5, 6]), relay.reshape(const_2350.astype('uint32'), [16, 5, 6]), relay.reshape(const_2351.astype('int64'), [24,]), ), 2)
call_2352 = relay.TupleGetItem(func_268_call(relay.reshape(const_2350.astype('uint32'), [16, 5, 6]), relay.reshape(const_2350.astype('uint32'), [16, 5, 6]), relay.reshape(const_2351.astype('int64'), [24,]), ), 2)
output = relay.Tuple([bop_2337,call_2341,call_2343,var_2344,const_2345,const_2346,call_2349,const_2350,const_2351,])
output2 = relay.Tuple([bop_2340,call_2342,call_2347,var_2344,const_2345,const_2346,call_2352,const_2350,const_2351,])
func_2362 = relay.Function([var_2336,var_2344,], output)
mod['func_2362'] = func_2362
mod = relay.transform.InferType()(mod)
var_2363 = relay.var("var_2363", dtype = "float32", shape = (7, 14, 4))#candidate|2363|(7, 14, 4)|var|float32
var_2364 = relay.var("var_2364", dtype = "float32", shape = (297,))#candidate|2364|(297,)|var|float32
output = func_2362(var_2363,var_2364,)
func_2365 = relay.Function([var_2363,var_2364,], output)
mutated_mod['func_2365'] = func_2365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_2370 = relay.TupleGetItem(func_1546_call(), 2)
call_2371 = relay.TupleGetItem(func_1548_call(), 2)
func_1323_call = mod.get_global_var('func_1323')
func_1326_call = mutated_mod.get_global_var('func_1326')
const_2381 = relay.const([-7,-6,-3,-10,-4,3,-9,3,9,-5,1,9,4,5], dtype = "int32")#candidate|2381|(14,)|const|int32
var_2382 = relay.var("var_2382", dtype = "int32", shape = (98,))#candidate|2382|(98,)|var|int32
call_2380 = relay.TupleGetItem(func_1323_call(relay.reshape(const_2381.astype('int32'), [7, 2, 1]), relay.reshape(var_2382.astype('int32'), [7, 2, 7]), ), 0)
call_2383 = relay.TupleGetItem(func_1326_call(relay.reshape(const_2381.astype('int32'), [7, 2, 1]), relay.reshape(var_2382.astype('int32'), [7, 2, 7]), ), 0)
output = relay.Tuple([call_2370,call_2380,const_2381,var_2382,])
output2 = relay.Tuple([call_2371,call_2383,const_2381,var_2382,])
func_2387 = relay.Function([var_2382,], output)
mod['func_2387'] = func_2387
mod = relay.transform.InferType()(mod)
var_2388 = relay.var("var_2388", dtype = "int32", shape = (98,))#candidate|2388|(98,)|var|int32
output = func_2387(var_2388)
func_2389 = relay.Function([var_2388], output)
mutated_mod['func_2389'] = func_2389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2139_call = mod.get_global_var('func_2139')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2412 = func_2139_call()
call_2413 = func_2139_call()
output = call_2412
output2 = call_2413
func_2414 = relay.Function([], output)
mod['func_2414'] = func_2414
mod = relay.transform.InferType()(mod)
mutated_mod['func_2414'] = func_2414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2415 = func_2414_call()
output = call_2415
func_2416 = relay.Function([], output)
mutated_mod['func_2416'] = func_2416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2139_call = mod.get_global_var('func_2139')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2451 = func_2139_call()
call_2452 = func_2139_call()
func_1361_call = mod.get_global_var('func_1361')
func_1363_call = mutated_mod.get_global_var('func_1363')
var_2455 = relay.var("var_2455", dtype = "float64", shape = (1, 63))#candidate|2455|(1, 63)|var|float64
call_2454 = relay.TupleGetItem(func_1361_call(relay.reshape(var_2455.astype('float64'), [7, 9, 1])), 1)
call_2456 = relay.TupleGetItem(func_1363_call(relay.reshape(var_2455.astype('float64'), [7, 9, 1])), 1)
uop_2457 = relay.sinh(var_2455.astype('float32')) # shape=(1, 63)
output = relay.Tuple([call_2451,call_2454,uop_2457,])
output2 = relay.Tuple([call_2452,call_2456,uop_2457,])
func_2460 = relay.Function([var_2455,], output)
mod['func_2460'] = func_2460
mod = relay.transform.InferType()(mod)
mutated_mod['func_2460'] = func_2460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2461 = relay.var("var_2461", dtype = "float64", shape = (1, 63))#candidate|2461|(1, 63)|var|float64
func_2460_call = mutated_mod.get_global_var('func_2460')
call_2462 = func_2460_call(var_2461)
output = call_2462
func_2463 = relay.Function([var_2461], output)
mutated_mod['func_2463'] = func_2463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_2465 = func_2414_call()
call_2466 = func_2414_call()
output = call_2465
output2 = call_2466
func_2472 = relay.Function([], output)
mod['func_2472'] = func_2472
mod = relay.transform.InferType()(mod)
output = func_2472()
func_2473 = relay.Function([], output)
mutated_mod['func_2473'] = func_2473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_2568 = func_2225_call()
call_2569 = func_2225_call()
var_2570 = relay.var("var_2570", dtype = "float32", shape = (3, 14, 8))#candidate|2570|(3, 14, 8)|var|float32
bop_2571 = relay.right_shift(call_2568.astype('uint16'), var_2570.astype('uint16')) # shape=(3, 14, 8)
bop_2574 = relay.right_shift(call_2569.astype('uint16'), var_2570.astype('uint16')) # shape=(3, 14, 8)
func_1361_call = mod.get_global_var('func_1361')
func_1363_call = mutated_mod.get_global_var('func_1363')
var_2579 = relay.var("var_2579", dtype = "float64", shape = (7, 9))#candidate|2579|(7, 9)|var|float64
call_2578 = relay.TupleGetItem(func_1361_call(relay.reshape(var_2579.astype('float64'), [7, 9, 1])), 1)
call_2580 = relay.TupleGetItem(func_1363_call(relay.reshape(var_2579.astype('float64'), [7, 9, 1])), 1)
output = relay.Tuple([bop_2571,call_2578,var_2579,])
output2 = relay.Tuple([bop_2574,call_2580,var_2579,])
func_2589 = relay.Function([var_2570,var_2579,], output)
mod['func_2589'] = func_2589
mod = relay.transform.InferType()(mod)
var_2590 = relay.var("var_2590", dtype = "float32", shape = (3, 14, 8))#candidate|2590|(3, 14, 8)|var|float32
var_2591 = relay.var("var_2591", dtype = "float64", shape = (7, 9))#candidate|2591|(7, 9)|var|float64
output = func_2589(var_2590,var_2591,)
func_2592 = relay.Function([var_2590,var_2591,], output)
mutated_mod['func_2592'] = func_2592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2603 = relay.var("var_2603", dtype = "uint16", shape = (6, 9, 14))#candidate|2603|(6, 9, 14)|var|uint16
const_2604 = relay.const([[[8,-6,-1,8,2,4,2,10,-2,-5,9,2,2,2],[10,9,-5,4,7,-4,9,-3,-9,-2,3,1,-5,-10],[4,8,-4,-3,-3,-5,-8,-7,4,-10,5,7,1,10],[1,-3,-3,-3,10,-6,-3,-3,-7,-10,10,-7,3,-3],[-1,10,-4,-9,6,4,7,10,8,-5,-6,7,6,-1],[5,3,8,10,-6,8,10,-1,9,-1,7,-3,10,8],[-3,4,4,6,1,-1,4,1,1,-2,-3,9,-6,2],[-10,3,9,1,-5,3,-2,2,-6,-9,5,9,-4,-10],[9,-10,10,4,9,3,4,-9,-4,2,4,-9,5,-8]],[[6,-1,8,6,3,9,5,7,2,6,6,6,-9,8],[-4,-3,2,5,-5,10,-3,3,5,-7,-5,2,1,9],[4,-4,-4,9,10,8,7,7,-8,-7,-10,9,9,7],[1,2,5,-4,-2,5,-8,-1,-10,4,9,-3,6,-4],[-5,-7,-1,2,4,5,10,9,-2,3,-9,1,6,6],[-6,-9,3,7,-4,10,-6,5,4,4,-6,-9,1,2],[-2,9,9,10,3,-6,6,-6,-8,8,9,-9,6,10],[7,-5,2,-8,-4,-3,-6,6,2,4,-7,3,6,-10],[1,10,-4,9,-10,7,5,-1,-8,3,-2,-1,1,2]],[[-9,10,2,7,6,2,-3,10,-10,9,9,-7,8,10],[5,9,-4,-1,10,4,6,-3,-8,6,-5,5,6,-7],[-1,8,-8,-9,5,-3,-10,2,-7,-6,10,-1,9,-1],[10,-3,-4,7,7,6,-8,8,8,-5,-7,-7,4,-3],[6,10,-1,-4,-4,-9,-9,-5,-6,4,-5,6,-9,-10],[-3,-6,7,4,10,3,1,7,8,6,6,-5,-10,-4],[6,-3,-9,7,-6,-3,8,-10,-9,10,10,-9,-9,-9],[7,-9,-9,1,3,3,-10,-6,10,9,7,-7,7,-3],[-10,3,-8,-2,5,5,3,7,-2,-2,-3,4,-8,6]],[[6,-10,-2,6,7,6,-3,-2,-1,-8,6,-9,-10,-8],[3,6,3,-10,10,4,-5,-3,-3,5,-6,9,2,10],[1,2,1,-7,-3,9,2,5,4,-6,-3,-1,3,-10],[7,8,-7,4,-8,4,6,9,7,-7,-1,9,5,10],[1,-4,-9,8,5,-8,3,-8,-5,8,10,6,10,5],[7,-5,7,-9,-2,-4,7,3,4,-8,8,-5,-3,2],[-6,3,6,2,-5,-4,7,7,-2,3,-2,6,-1,10],[10,9,1,-1,-10,-2,5,-4,-6,6,3,-3,-2,-3],[-8,7,5,7,-10,4,-1,-4,4,7,-1,7,2,-7]],[[7,-9,4,-4,-2,6,-7,-1,-9,-5,3,3,6,-7],[8,-5,7,1,-10,10,-5,-5,7,3,8,-8,-1,-4],[1,-5,7,-5,4,6,10,-7,2,-7,5,-6,-9,2],[7,7,9,-8,-4,3,-8,1,4,-1,7,7,10,-4],[2,-1,4,-9,-9,-3,2,10,-4,-8,-8,-7,8,8],[-9,-1,8,10,-7,7,7,-9,-4,9,-2,8,-7,-7],[-9,7,5,1,-7,3,1,1,10,9,1,-3,4,-2],[-4,-7,2,-5,9,10,10,-1,-3,-10,-2,-8,6,5],[1,-2,6,2,-3,-7,-4,10,10,6,4,8,-5,-9]],[[6,-3,-3,3,-4,7,3,-2,9,-10,3,-4,-4,-3],[7,-1,7,-1,1,-10,-1,4,1,9,-8,-10,-7,-10],[-7,9,6,-8,-6,-5,-4,-1,2,-7,9,-4,6,-10],[10,-3,4,10,4,6,8,-4,-6,5,10,10,9,8],[10,10,9,-7,-7,-6,-7,-8,4,7,-9,-8,4,8],[-2,1,-4,1,4,10,-5,10,-9,-6,2,-4,6,10],[10,7,2,-5,9,-2,4,-4,-8,-10,5,-1,1,-10],[9,-9,5,2,-4,-6,1,-5,9,3,-4,-6,10,5],[-5,8,-4,3,-5,-7,-10,-3,2,-7,7,-10,-4,9]]], dtype = "uint16")#candidate|2604|(6, 9, 14)|const|uint16
bop_2605 = relay.multiply(var_2603.astype('uint16'), relay.reshape(const_2604.astype('uint16'), relay.shape_of(var_2603))) # shape=(6, 9, 14)
var_2614 = relay.var("var_2614", dtype = "uint16", shape = (6, 9, 14))#candidate|2614|(6, 9, 14)|var|uint16
bop_2615 = relay.greater(const_2604.astype('bool'), relay.reshape(var_2614.astype('bool'), relay.shape_of(const_2604))) # shape=(6, 9, 14)
output = relay.Tuple([bop_2605,bop_2615,])
output2 = relay.Tuple([bop_2605,bop_2615,])
func_2639 = relay.Function([var_2603,var_2614,], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
mutated_mod['func_2639'] = func_2639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2639_call = mutated_mod.get_global_var('func_2639')
var_2641 = relay.var("var_2641", dtype = "uint16", shape = (6, 9, 14))#candidate|2641|(6, 9, 14)|var|uint16
var_2642 = relay.var("var_2642", dtype = "uint16", shape = (6, 9, 14))#candidate|2642|(6, 9, 14)|var|uint16
call_2640 = func_2639_call(var_2641,var_2642,)
output = call_2640
func_2643 = relay.Function([var_2641,var_2642,], output)
mutated_mod['func_2643'] = func_2643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_2650 = func_2414_call()
call_2651 = func_2414_call()
output = relay.Tuple([call_2650,])
output2 = relay.Tuple([call_2651,])
func_2664 = relay.Function([], output)
mod['func_2664'] = func_2664
mod = relay.transform.InferType()(mod)
output = func_2664()
func_2665 = relay.Function([], output)
mutated_mod['func_2665'] = func_2665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_2748 = func_1560_call()
call_2749 = func_1560_call()
uop_2758 = relay.cosh(call_2748.astype('float64')) # shape=(1, 14, 1)
uop_2760 = relay.cosh(call_2749.astype('float64')) # shape=(1, 14, 1)
bop_2767 = relay.mod(uop_2758.astype('float32'), relay.reshape(call_2748.astype('float32'), relay.shape_of(uop_2758))) # shape=(1, 14, 1)
bop_2770 = relay.mod(uop_2760.astype('float32'), relay.reshape(call_2749.astype('float32'), relay.shape_of(uop_2760))) # shape=(1, 14, 1)
uop_2792 = relay.log10(bop_2767.astype('float32')) # shape=(1, 14, 1)
uop_2794 = relay.log10(bop_2770.astype('float32')) # shape=(1, 14, 1)
func_622_call = mod.get_global_var('func_622')
func_625_call = mutated_mod.get_global_var('func_625')
call_2800 = func_622_call(relay.reshape(call_2748.astype('float32'), [1, 14, 1]))
call_2801 = func_622_call(relay.reshape(call_2748.astype('float32'), [1, 14, 1]))
uop_2802 = relay.acosh(uop_2792.astype('float32')) # shape=(1, 14, 1)
uop_2804 = relay.acosh(uop_2794.astype('float32')) # shape=(1, 14, 1)
bop_2814 = relay.greater(uop_2802.astype('bool'), relay.reshape(uop_2792.astype('bool'), relay.shape_of(uop_2802))) # shape=(1, 14, 1)
bop_2817 = relay.greater(uop_2804.astype('bool'), relay.reshape(uop_2794.astype('bool'), relay.shape_of(uop_2804))) # shape=(1, 14, 1)
func_264_call = mod.get_global_var('func_264')
func_268_call = mutated_mod.get_global_var('func_268')
var_2826 = relay.var("var_2826", dtype = "uint32", shape = (480,))#candidate|2826|(480,)|var|uint32
const_2827 = relay.const([-3,-3,-7,-1,-5,7,-10,1,-7,8,1,-2,-1,9,-8,-9,3,-2,-9,5,7,2,-6,1], dtype = "int64")#candidate|2827|(24,)|const|int64
call_2825 = relay.TupleGetItem(func_264_call(relay.reshape(var_2826.astype('uint32'), [16, 5, 6]), relay.reshape(var_2826.astype('uint32'), [16, 5, 6]), relay.reshape(const_2827.astype('int64'), [24,]), ), 1)
call_2828 = relay.TupleGetItem(func_268_call(relay.reshape(var_2826.astype('uint32'), [16, 5, 6]), relay.reshape(var_2826.astype('uint32'), [16, 5, 6]), relay.reshape(const_2827.astype('int64'), [24,]), ), 1)
bop_2835 = relay.left_shift(uop_2802.astype('int8'), relay.reshape(uop_2792.astype('int8'), relay.shape_of(uop_2802))) # shape=(1, 14, 1)
bop_2838 = relay.left_shift(uop_2804.astype('int8'), relay.reshape(uop_2794.astype('int8'), relay.shape_of(uop_2804))) # shape=(1, 14, 1)
output = relay.Tuple([call_2800,bop_2814,call_2825,var_2826,const_2827,bop_2835,])
output2 = relay.Tuple([call_2801,bop_2817,call_2828,var_2826,const_2827,bop_2838,])
func_2862 = relay.Function([var_2826,], output)
mod['func_2862'] = func_2862
mod = relay.transform.InferType()(mod)
var_2863 = relay.var("var_2863", dtype = "uint32", shape = (480,))#candidate|2863|(480,)|var|uint32
output = func_2862(var_2863)
func_2864 = relay.Function([var_2863], output)
mutated_mod['func_2864'] = func_2864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2209_call = mod.get_global_var('func_2209')
func_2211_call = mutated_mod.get_global_var('func_2211')
call_2885 = func_2209_call()
call_2886 = func_2209_call()
uop_2896 = relay.exp(call_2885.astype('float64')) # shape=(1, 14, 1)
uop_2898 = relay.exp(call_2886.astype('float64')) # shape=(1, 14, 1)
output = relay.Tuple([uop_2896,])
output2 = relay.Tuple([uop_2898,])
func_2902 = relay.Function([], output)
mod['func_2902'] = func_2902
mod = relay.transform.InferType()(mod)
output = func_2902()
func_2903 = relay.Function([], output)
mutated_mod['func_2903'] = func_2903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2902_call = mod.get_global_var('func_2902')
func_2903_call = mutated_mod.get_global_var('func_2903')
call_2912 = relay.TupleGetItem(func_2902_call(), 0)
call_2913 = relay.TupleGetItem(func_2903_call(), 0)
func_133_call = mod.get_global_var('func_133')
func_136_call = mutated_mod.get_global_var('func_136')
const_2918 = relay.const([6.646139,3.153985,-4.986729,-7.175672,3.712167,0.803540,-6.722531,-7.966957,7.066726,1.010024,-3.240897,1.750846,3.744854,-6.617062,-3.995822,-5.016622,6.980721,-4.412384,8.260276,-9.124676,7.939516,-0.283160,-0.297903,-9.015989,7.044899,5.912094,-2.697152,2.762686,4.605113,-4.833835,3.525947,2.501747,-5.227430,-9.493900,-2.339271,-5.635606,-1.769611,7.635651,6.490747,-5.033824,-3.556672,-6.418937,-9.159735,-9.705321,-2.532876,2.245310,-7.576806,-9.032844,2.144081,-6.382208,7.701508,4.149025,-0.206486,-9.522512,-0.215769,-0.310992,-8.345176,3.113829,-5.789091,-4.942702,-6.318812,-7.917431,-8.097221,1.006988,0.961639,-8.658008,-2.116243,-6.760572,-4.464097,6.008707,-7.137291,0.563668,-1.973687,2.794016,7.198608,5.504976,-3.177248,-7.463145,-5.956166,-8.958839,4.643017,-1.196176,-5.029417,-9.555867,-1.782966,-9.658713,-2.305463,1.403356,-4.280043,0.038706], dtype = "float64")#candidate|2918|(90,)|const|float64
call_2917 = relay.TupleGetItem(func_133_call(relay.reshape(const_2918.astype('float64'), [3, 10, 3])), 0)
call_2919 = relay.TupleGetItem(func_136_call(relay.reshape(const_2918.astype('float64'), [3, 10, 3])), 0)
output = relay.Tuple([call_2912,call_2917,const_2918,])
output2 = relay.Tuple([call_2913,call_2919,const_2918,])
func_2923 = relay.Function([], output)
mod['func_2923'] = func_2923
mod = relay.transform.InferType()(mod)
output = func_2923()
func_2924 = relay.Function([], output)
mutated_mod['func_2924'] = func_2924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2139_call = mod.get_global_var('func_2139')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2933 = func_2139_call()
call_2934 = func_2139_call()
output = call_2933
output2 = call_2934
func_2943 = relay.Function([], output)
mod['func_2943'] = func_2943
mod = relay.transform.InferType()(mod)
mutated_mod['func_2943'] = func_2943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2943_call = mutated_mod.get_global_var('func_2943')
call_2944 = func_2943_call()
output = call_2944
func_2945 = relay.Function([], output)
mutated_mod['func_2945'] = func_2945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_2981 = func_2414_call()
call_2982 = func_2414_call()
output = relay.Tuple([call_2981,])
output2 = relay.Tuple([call_2982,])
func_3008 = relay.Function([], output)
mod['func_3008'] = func_3008
mod = relay.transform.InferType()(mod)
output = func_3008()
func_3009 = relay.Function([], output)
mutated_mod['func_3009'] = func_3009
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3062 = relay.var("var_3062", dtype = "float64", shape = (4, 12, 4))#candidate|3062|(4, 12, 4)|var|float64
uop_3063 = relay.log10(var_3062.astype('float64')) # shape=(4, 12, 4)
output = relay.Tuple([uop_3063,])
output2 = relay.Tuple([uop_3063,])
func_3075 = relay.Function([var_3062,], output)
mod['func_3075'] = func_3075
mod = relay.transform.InferType()(mod)
mutated_mod['func_3075'] = func_3075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3076 = relay.var("var_3076", dtype = "float64", shape = (4, 12, 4))#candidate|3076|(4, 12, 4)|var|float64
func_3075_call = mutated_mod.get_global_var('func_3075')
call_3077 = func_3075_call(var_3076)
output = call_3077
func_3078 = relay.Function([var_3076], output)
mutated_mod['func_3078'] = func_3078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2943_call = mod.get_global_var('func_2943')
func_2945_call = mutated_mod.get_global_var('func_2945')
call_3189 = func_2943_call()
call_3190 = func_2943_call()
output = relay.Tuple([call_3189,])
output2 = relay.Tuple([call_3190,])
func_3194 = relay.Function([], output)
mod['func_3194'] = func_3194
mod = relay.transform.InferType()(mod)
output = func_3194()
func_3195 = relay.Function([], output)
mutated_mod['func_3195'] = func_3195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3194_call = mod.get_global_var('func_3194')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_3259 = relay.TupleGetItem(func_3194_call(), 0)
call_3260 = relay.TupleGetItem(func_3195_call(), 0)
output = call_3259
output2 = call_3260
func_3266 = relay.Function([], output)
mod['func_3266'] = func_3266
mod = relay.transform.InferType()(mod)
output = func_3266()
func_3267 = relay.Function([], output)
mutated_mod['func_3267'] = func_3267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3268 = relay.var("var_3268", dtype = "float32", shape = (14, 10, 13))#candidate|3268|(14, 10, 13)|var|float32
uop_3269 = relay.atan(var_3268.astype('float32')) # shape=(14, 10, 13)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_3275 = relay.TupleGetItem(func_1973_call(), 0)
call_3276 = relay.TupleGetItem(func_1974_call(), 0)
uop_3290 = relay.erf(var_3268.astype('float64')) # shape=(14, 10, 13)
func_2387_call = mod.get_global_var('func_2387')
func_2389_call = mutated_mod.get_global_var('func_2389')
var_3294 = relay.var("var_3294", dtype = "int32", shape = (98,))#candidate|3294|(98,)|var|int32
call_3293 = relay.TupleGetItem(func_2387_call(relay.reshape(var_3294.astype('int32'), [98,])), 3)
call_3295 = relay.TupleGetItem(func_2389_call(relay.reshape(var_3294.astype('int32'), [98,])), 3)
bop_3297 = relay.logical_and(uop_3269.astype('bool'), relay.reshape(var_3268.astype('bool'), relay.shape_of(uop_3269))) # shape=(14, 10, 13)
output = relay.Tuple([call_3275,uop_3290,call_3293,var_3294,bop_3297,])
output2 = relay.Tuple([call_3276,uop_3290,call_3295,var_3294,bop_3297,])
func_3305 = relay.Function([var_3268,var_3294,], output)
mod['func_3305'] = func_3305
mod = relay.transform.InferType()(mod)
mutated_mod['func_3305'] = func_3305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3305_call = mutated_mod.get_global_var('func_3305')
var_3307 = relay.var("var_3307", dtype = "float32", shape = (14, 10, 13))#candidate|3307|(14, 10, 13)|var|float32
var_3308 = relay.var("var_3308", dtype = "int32", shape = (98,))#candidate|3308|(98,)|var|int32
call_3306 = func_3305_call(var_3307,var_3308,)
output = call_3306
func_3309 = relay.Function([var_3307,var_3308,], output)
mutated_mod['func_3309'] = func_3309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1741_call = mod.get_global_var('func_1741')
func_1742_call = mutated_mod.get_global_var('func_1742')
call_3427 = func_1741_call()
call_3428 = func_1741_call()
func_264_call = mod.get_global_var('func_264')
func_268_call = mutated_mod.get_global_var('func_268')
var_3431 = relay.var("var_3431", dtype = "uint32", shape = (2, 240))#candidate|3431|(2, 240)|var|uint32
var_3432 = relay.var("var_3432", dtype = "int64", shape = (24,))#candidate|3432|(24,)|var|int64
call_3430 = relay.TupleGetItem(func_264_call(relay.reshape(var_3431.astype('uint32'), [16, 5, 6]), relay.reshape(var_3431.astype('uint32'), [16, 5, 6]), relay.reshape(var_3432.astype('int64'), [24,]), ), 0)
call_3433 = relay.TupleGetItem(func_268_call(relay.reshape(var_3431.astype('uint32'), [16, 5, 6]), relay.reshape(var_3431.astype('uint32'), [16, 5, 6]), relay.reshape(var_3432.astype('int64'), [24,]), ), 0)
output = relay.Tuple([call_3427,call_3430,var_3431,var_3432,])
output2 = relay.Tuple([call_3428,call_3433,var_3431,var_3432,])
func_3436 = relay.Function([var_3431,var_3432,], output)
mod['func_3436'] = func_3436
mod = relay.transform.InferType()(mod)
var_3437 = relay.var("var_3437", dtype = "uint32", shape = (2, 240))#candidate|3437|(2, 240)|var|uint32
var_3438 = relay.var("var_3438", dtype = "int64", shape = (24,))#candidate|3438|(24,)|var|int64
output = func_3436(var_3437,var_3438,)
func_3439 = relay.Function([var_3437,var_3438,], output)
mutated_mod['func_3439'] = func_3439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3487 = relay.var("var_3487", dtype = "int16", shape = (13, 12, 9))#candidate|3487|(13, 12, 9)|var|int16
var_3488 = relay.var("var_3488", dtype = "int16", shape = (13, 12, 9))#candidate|3488|(13, 12, 9)|var|int16
bop_3489 = relay.maximum(var_3487.astype('int16'), relay.reshape(var_3488.astype('int16'), relay.shape_of(var_3487))) # shape=(13, 12, 9)
output = relay.Tuple([bop_3489,])
output2 = relay.Tuple([bop_3489,])
func_3497 = relay.Function([var_3487,var_3488,], output)
mod['func_3497'] = func_3497
mod = relay.transform.InferType()(mod)
var_3498 = relay.var("var_3498", dtype = "int16", shape = (13, 12, 9))#candidate|3498|(13, 12, 9)|var|int16
var_3499 = relay.var("var_3499", dtype = "int16", shape = (13, 12, 9))#candidate|3499|(13, 12, 9)|var|int16
output = func_3497(var_3498,var_3499,)
func_3500 = relay.Function([var_3498,var_3499,], output)
mutated_mod['func_3500'] = func_3500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2943_call = mod.get_global_var('func_2943')
func_2945_call = mutated_mod.get_global_var('func_2945')
call_3507 = func_2943_call()
call_3508 = func_2943_call()
var_3524 = relay.var("var_3524", dtype = "float32", shape = (2, 14, 12))#candidate|3524|(2, 14, 12)|var|float32
bop_3525 = relay.bitwise_xor(call_3507.astype('int8'), relay.reshape(var_3524.astype('int8'), relay.shape_of(call_3507))) # shape=(2, 14, 12)
bop_3528 = relay.bitwise_xor(call_3508.astype('int8'), relay.reshape(var_3524.astype('int8'), relay.shape_of(call_3508))) # shape=(2, 14, 12)
func_2862_call = mod.get_global_var('func_2862')
func_2864_call = mutated_mod.get_global_var('func_2864')
const_3552 = relay.const([-8,2,-7,-4,-9,-3,-8,-7,-3,2,-9,-7,7,-2,-4,3,-2,-3,-1,3,-5,6,3,6,2,8,-10,-8,-1,-6,-3,-8,-1,7,-10,-3,-5,10,4,-3,-4,2,8,-3,-10,5,-7,10,5,-1,8,-10,4,-10,-4,9,-4,3,8,-10,-6,-2,9,10,-1,-7,-8,-9,-4,3,2,7,-2,9,-8,-8,5,7,6,-7,2,-4,-2,-5,4,6,1,-3,8,2,-10,-10,4,10,-9,-7,-3,-1,7,-3,3,8,-5,-6,-2,8,-1,-6,10,-7,3,7,-6,-2,4,4,3,1,3,-2,8,-7,-10,5,9,6,7,-7,-4,8,4,-5,-5,6,6,3,8,4,-2,-8,3,2,-7,-5,-10,1,4,-1,-4,7,5,-5,-9,-10,8,-2,10,-2,-5,-2,-7,-8,-8,-10,-6,-2,4,-3,-6,5,-9,-4,-3,7,-3,-4,1,1,-3,-10,7,-9,1,5,-2,-9,9,1,-2,-1,-9,-5,-9,8,9,-10,-3,-7,-10,10,-3,5,4,4,-4,1,2,-4,4,10,3,10,-8,8,9,9,7,-6,10,5,4,9,-1,6,6,-9,-7,-3,-5,-2,7,8,7,-4,-3,3,4,5,5,-3,7,-10,-2,-9,3,3,5,5,7,-9,10,-2,-5,2,-8,3,-8,10,-7,6,10,-4,-3,9,10,-4,1,7,-1,-6,-5,-4,3,10,3,-3,-7,10,-8,2,6,-2,-10,-2,7,9,8,-2,7,2,10,-5,-4,7,-3,-2,4,7,-3,4,9,-2,9,8,8,8,-7,2,-7,3,-7,2,-1,5,7,5,-5,3,-3,-3,-2,8,3,1,9,1,-1,7,-1,-7,2,-6,-1,2,-1,4,6,-5,1,1,1,8,-7,5,7,-8,-6,-7,-5,-10,6,2,-5,2,-2,-10,7,7,4,1,6,10,4,-10,8,5,-5,5,3,-7,-10,-10,-6,-10,8,2,1,-9,-9,3,-10,-9,-5,-6,2,5,-2,-9,-1,9,-10,-5,-2,5,-5,9,9,10,-4,4,2,10,-4,2,-9,7,1,10,8,5,6,-9,-3,8,-5,-3,-2,3,-3,-3,8,-4,6,2,-1,-7,2,1,5,3,2,1,1,9,-6,8,6,3,-8,-6,-4,6,-9,1,6,7,10,-1,-9,4,-5,-1,4,3,-3,-1,-1,4,5,7,-9,-1,-2,1,5,1,8,2,-10,-6,-3,-9,-5,6,10,3,-10,10,9,7], dtype = "uint32")#candidate|3552|(480,)|const|uint32
call_3551 = relay.TupleGetItem(func_2862_call(relay.reshape(const_3552.astype('uint32'), [480,])), 0)
call_3553 = relay.TupleGetItem(func_2864_call(relay.reshape(const_3552.astype('uint32'), [480,])), 0)
uop_3557 = relay.sqrt(var_3524.astype('float64')) # shape=(2, 14, 12)
output = relay.Tuple([bop_3525,call_3551,const_3552,uop_3557,])
output2 = relay.Tuple([bop_3528,call_3553,const_3552,uop_3557,])
func_3574 = relay.Function([var_3524,], output)
mod['func_3574'] = func_3574
mod = relay.transform.InferType()(mod)
var_3575 = relay.var("var_3575", dtype = "float32", shape = (2, 14, 12))#candidate|3575|(2, 14, 12)|var|float32
output = func_3574(var_3575)
func_3576 = relay.Function([var_3575], output)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_3607 = func_2472_call()
call_3608 = func_2472_call()
output = call_3607
output2 = call_3608
func_3624 = relay.Function([], output)
mod['func_3624'] = func_3624
mod = relay.transform.InferType()(mod)
output = func_3624()
func_3625 = relay.Function([], output)
mutated_mod['func_3625'] = func_3625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_3646 = func_2225_call()
call_3647 = func_2225_call()
var_3650 = relay.var("var_3650", dtype = "float32", shape = (13, 14, 8))#candidate|3650|(13, 14, 8)|var|float32
bop_3651 = relay.floor_mod(call_3646.astype('float64'), var_3650.astype('float64')) # shape=(13, 14, 8)
bop_3654 = relay.floor_mod(call_3647.astype('float64'), var_3650.astype('float64')) # shape=(13, 14, 8)
func_3574_call = mod.get_global_var('func_3574')
func_3576_call = mutated_mod.get_global_var('func_3576')
var_3659 = relay.var("var_3659", dtype = "float32", shape = (336,))#candidate|3659|(336,)|var|float32
call_3658 = relay.TupleGetItem(func_3574_call(relay.reshape(var_3659.astype('float32'), [2, 14, 12])), 0)
call_3660 = relay.TupleGetItem(func_3576_call(relay.reshape(var_3659.astype('float32'), [2, 14, 12])), 0)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_3673 = func_2472_call()
call_3674 = func_2472_call()
func_1741_call = mod.get_global_var('func_1741')
func_1742_call = mutated_mod.get_global_var('func_1742')
call_3677 = func_1741_call()
call_3678 = func_1741_call()
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_3686 = func_1560_call()
call_3687 = func_1560_call()
bop_3692 = relay.logical_xor(call_3673.astype('int16'), relay.reshape(var_3659.astype('int16'), relay.shape_of(call_3673))) # shape=(2, 14, 12)
bop_3695 = relay.logical_xor(call_3674.astype('int16'), relay.reshape(var_3659.astype('int16'), relay.shape_of(call_3674))) # shape=(2, 14, 12)
func_3194_call = mod.get_global_var('func_3194')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_3701 = relay.TupleGetItem(func_3194_call(), 0)
call_3702 = relay.TupleGetItem(func_3195_call(), 0)
bop_3709 = relay.greater(var_3650.astype('bool'), call_3646.astype('bool')) # shape=(13, 14, 8)
bop_3712 = relay.greater(var_3650.astype('bool'), call_3647.astype('bool')) # shape=(13, 14, 8)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
var_3729 = relay.var("var_3729", dtype = "int8", shape = (96,))#candidate|3729|(96,)|var|int8
const_3730 = relay.const([[7,-1,-2,-8,6,-9,-4,-5,-4,6,6,-5,-5,-2,-10,-1,2,7,8,-5,3,-7,8,-3,4,6,-9,-2,-9,-3,-3,-5,-8,-8,-8,-1,9,-9,-2,9,-2,-6,7,5,-2,-6,5,-1,6,1,4,-6,-2,8,-7,-1,-4,-2,-5,-7,-7,6,-6,7,8,-5,-10,3,-6,-7,10,4,3,2,-4,8,6,3,1,-2,-8,9,-8,9,5,-4,1,8,-3,5,3,-9,5,9,-2,5,9,-7,10,8,-3,10,-2,10,-1,3,8,3,5,-1,4,-6,-4,10,2,-7,2,-9,-8,-2,-5,4,-8,-9,10,10,8,7,-3,-5,-4,-8,-2,3,-9,2,9,-7,5,-1,-8,9,9,7,2,6,6,4,-2,-9,-9,5,9,6,10,8,-8,-5,2,10,-5,2,2,-9,-1,7,1,2,6,3,7,5,10,-4,-1,8,1,-7,-6,-7,-9,8,6,2,-10,-7,6,-2,-9,9,-1,8,-7,-2,3,9,-4,2,9,-2,-6,-7,1,1,6,-2,8,-6,4,9,7,-7,-7,3,-10,-6,-3,1,2,4,5,-4,5,-10]], dtype = "uint8")#candidate|3730|(1, 224)|const|uint8
call_3728 = relay.TupleGetItem(func_2306_call(relay.reshape(var_3729.astype('int8'), [3, 8, 4]), relay.reshape(var_3729.astype('int8'), [3, 8, 4]), relay.reshape(const_3730.astype('uint8'), [224,]), ), 1)
call_3731 = relay.TupleGetItem(func_2310_call(relay.reshape(var_3729.astype('int8'), [3, 8, 4]), relay.reshape(var_3729.astype('int8'), [3, 8, 4]), relay.reshape(const_3730.astype('uint8'), [224,]), ), 1)
output = relay.Tuple([bop_3651,call_3658,call_3677,call_3686,bop_3692,call_3701,bop_3709,call_3728,var_3729,const_3730,])
output2 = relay.Tuple([bop_3654,call_3660,call_3678,call_3687,bop_3695,call_3702,bop_3712,call_3731,var_3729,const_3730,])
func_3736 = relay.Function([var_3650,var_3659,var_3729,], output)
mod['func_3736'] = func_3736
mod = relay.transform.InferType()(mod)
mutated_mod['func_3736'] = func_3736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3736_call = mutated_mod.get_global_var('func_3736')
var_3738 = relay.var("var_3738", dtype = "float32", shape = (13, 14, 8))#candidate|3738|(13, 14, 8)|var|float32
var_3739 = relay.var("var_3739", dtype = "float32", shape = (336,))#candidate|3739|(336,)|var|float32
var_3740 = relay.var("var_3740", dtype = "int8", shape = (96,))#candidate|3740|(96,)|var|int8
call_3737 = func_3736_call(var_3738,var_3739,var_3740,)
output = call_3737
func_3741 = relay.Function([var_3738,var_3739,var_3740,], output)
mutated_mod['func_3741'] = func_3741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_3743 = func_3266_call()
call_3744 = func_3266_call()
func_845_call = mod.get_global_var('func_845')
func_847_call = mutated_mod.get_global_var('func_847')
var_3775 = relay.var("var_3775", dtype = "float32", shape = (858,))#candidate|3775|(858,)|var|float32
call_3774 = relay.TupleGetItem(func_845_call(relay.reshape(var_3775.astype('float32'), [11, 6, 13])), 0)
call_3776 = relay.TupleGetItem(func_847_call(relay.reshape(var_3775.astype('float32'), [11, 6, 13])), 0)
func_3624_call = mod.get_global_var('func_3624')
func_3625_call = mutated_mod.get_global_var('func_3625')
call_3790 = func_3624_call()
call_3791 = func_3624_call()
func_1323_call = mod.get_global_var('func_1323')
func_1326_call = mutated_mod.get_global_var('func_1326')
var_3797 = relay.var("var_3797", dtype = "int32", shape = (14, 1))#candidate|3797|(14, 1)|var|int32
var_3798 = relay.var("var_3798", dtype = "int32", shape = (98,))#candidate|3798|(98,)|var|int32
call_3796 = relay.TupleGetItem(func_1323_call(relay.reshape(var_3797.astype('int32'), [7, 2, 1]), relay.reshape(var_3798.astype('int32'), [7, 2, 7]), ), 0)
call_3799 = relay.TupleGetItem(func_1326_call(relay.reshape(var_3797.astype('int32'), [7, 2, 1]), relay.reshape(var_3798.astype('int32'), [7, 2, 7]), ), 0)
bop_3800 = relay.left_shift(var_3775.astype('int8'), var_3797.astype('int8')) # shape=(14, 858)
uop_3803 = relay.acosh(var_3798.astype('float32')) # shape=(98,)
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
var_3808 = relay.var("var_3808", dtype = "int64", shape = (24,))#candidate|3808|(24,)|var|int64
call_3807 = relay.TupleGetItem(func_100_call(relay.reshape(var_3808.astype('int64'), [2, 12, 1])), 1)
call_3809 = relay.TupleGetItem(func_102_call(relay.reshape(var_3808.astype('int64'), [2, 12, 1])), 1)
output = relay.Tuple([call_3743,call_3774,call_3790,call_3796,bop_3800,uop_3803,call_3807,var_3808,])
output2 = relay.Tuple([call_3744,call_3776,call_3791,call_3799,bop_3800,uop_3803,call_3809,var_3808,])
func_3821 = relay.Function([var_3775,var_3797,var_3798,var_3808,], output)
mod['func_3821'] = func_3821
mod = relay.transform.InferType()(mod)
var_3822 = relay.var("var_3822", dtype = "float32", shape = (858,))#candidate|3822|(858,)|var|float32
var_3823 = relay.var("var_3823", dtype = "int32", shape = (14, 1))#candidate|3823|(14, 1)|var|int32
var_3824 = relay.var("var_3824", dtype = "int32", shape = (98,))#candidate|3824|(98,)|var|int32
var_3825 = relay.var("var_3825", dtype = "int64", shape = (24,))#candidate|3825|(24,)|var|int64
output = func_3821(var_3822,var_3823,var_3824,var_3825,)
func_3826 = relay.Function([var_3822,var_3823,var_3824,var_3825,], output)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2943_call = mod.get_global_var('func_2943')
func_2945_call = mutated_mod.get_global_var('func_2945')
call_3849 = func_2943_call()
call_3850 = func_2943_call()
output = relay.Tuple([call_3849,])
output2 = relay.Tuple([call_3850,])
func_3854 = relay.Function([], output)
mod['func_3854'] = func_3854
mod = relay.transform.InferType()(mod)
output = func_3854()
func_3855 = relay.Function([], output)
mutated_mod['func_3855'] = func_3855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2209_call = mod.get_global_var('func_2209')
func_2211_call = mutated_mod.get_global_var('func_2211')
call_3869 = func_2209_call()
call_3870 = func_2209_call()
output = call_3869
output2 = call_3870
func_3884 = relay.Function([], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3884_call = mutated_mod.get_global_var('func_3884')
call_3885 = func_3884_call()
output = call_3885
func_3886 = relay.Function([], output)
mutated_mod['func_3886'] = func_3886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_3893 = func_3266_call()
call_3894 = func_3266_call()
func_3574_call = mod.get_global_var('func_3574')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_3895 = relay.TupleGetItem(func_3574_call(relay.reshape(call_3893.astype('float32'), [2, 14, 12])), 1)
call_3896 = relay.TupleGetItem(func_3576_call(relay.reshape(call_3893.astype('float32'), [2, 14, 12])), 1)
uop_3912 = relay.exp(call_3893.astype('float64')) # shape=(2, 14, 12)
uop_3914 = relay.exp(call_3894.astype('float64')) # shape=(2, 14, 12)
func_3194_call = mod.get_global_var('func_3194')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_3924 = relay.TupleGetItem(func_3194_call(), 0)
call_3925 = relay.TupleGetItem(func_3195_call(), 0)
func_3075_call = mod.get_global_var('func_3075')
func_3078_call = mutated_mod.get_global_var('func_3078')
const_3942 = relay.const([[9.223010,-2.904224,-0.138924,-0.127294,1.449574,-4.735280,3.513456,-6.714256,-9.088287,1.434891,-6.034656,1.659639,9.582940,7.757414,5.598921,6.391415,-7.649247,-7.559876,-3.409791,-8.592814,6.181875,-8.539867,3.633916,4.917759,7.643020,-1.729208,3.774430,0.732338,6.345226,-2.755094,-5.958548,3.546570,3.134067,-1.711970,-0.329246,0.322499,6.576995,-2.247027,-8.186298,-1.893556,-6.481840,5.145374,-9.852570,-3.243766,8.432106,-4.084836,6.945494,6.931183,-1.789779,-1.092736,-0.918134,-2.540827,8.207464,-5.802535,0.400301,-0.258334,0.447093,6.178786,-6.920560,3.867569,-6.831938,1.466562,7.245447,-2.309615,-5.987896,0.449646,8.009311,-0.626806,-3.772272,-5.298258,6.758527,-2.059137,3.901794,4.551830,5.927418,8.836416,-1.778858,4.691230,5.455389,7.312611,-4.690548,-3.545820,0.296571,8.937900,9.680024,4.771356,-2.004026,-9.603160,0.959032,8.717812,-8.931024,-9.509807,7.902617,2.063160,4.079539,7.965288],[9.231217,9.481905,-4.833762,-8.302240,3.546586,5.743023,7.711826,7.116263,7.264109,-8.485135,7.667595,-1.709547,-9.727474,-4.947361,1.943323,-9.050486,3.310821,4.091750,-6.068628,-1.952135,2.154388,6.619503,2.530575,1.621248,9.526151,-4.826615,-0.982687,9.086197,-8.055973,-2.278450,3.807130,-1.212575,4.010669,9.510507,-5.604354,0.398917,8.270605,-1.906485,1.318939,3.655189,2.119079,4.408935,-6.319236,1.618190,-5.720730,-2.885899,-6.206768,6.218961,-2.645844,8.656017,-6.744736,-4.006339,8.611695,-0.863417,-0.253619,3.825979,4.955077,3.988529,6.679879,9.570530,9.329206,-5.392762,-2.918420,6.071700,-5.041743,3.539367,4.802271,-4.494126,4.453716,4.674801,-9.190495,0.175811,2.885220,4.727520,7.078594,3.833390,5.103679,-9.818979,1.476474,-8.545546,-2.847933,-4.478279,-6.239034,-8.920724,3.118978,3.088206,-6.521168,9.197794,-4.635214,2.669203,0.732234,-9.349967,-1.062596,1.930662,-8.917892,7.433804]], dtype = "float64")#candidate|3942|(2, 96)|const|float64
call_3941 = relay.TupleGetItem(func_3075_call(relay.reshape(const_3942.astype('float64'), [4, 12, 4])), 0)
call_3943 = relay.TupleGetItem(func_3078_call(relay.reshape(const_3942.astype('float64'), [4, 12, 4])), 0)
uop_3955 = relay.rsqrt(call_3941.astype('float64')) # shape=(4, 12, 4)
uop_3957 = relay.rsqrt(call_3943.astype('float64')) # shape=(4, 12, 4)
func_845_call = mod.get_global_var('func_845')
func_847_call = mutated_mod.get_global_var('func_847')
var_3961 = relay.var("var_3961", dtype = "float32", shape = (858,))#candidate|3961|(858,)|var|float32
call_3960 = relay.TupleGetItem(func_845_call(relay.reshape(var_3961.astype('float32'), [11, 6, 13])), 0)
call_3962 = relay.TupleGetItem(func_847_call(relay.reshape(var_3961.astype('float32'), [11, 6, 13])), 0)
uop_3970 = relay.log2(uop_3955.astype('float64')) # shape=(4, 12, 4)
uop_3972 = relay.log2(uop_3957.astype('float64')) # shape=(4, 12, 4)
uop_3973 = relay.log(var_3961.astype('float64')) # shape=(858,)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_3981 = relay.TupleGetItem(func_1546_call(), 2)
call_3982 = relay.TupleGetItem(func_1548_call(), 2)
func_2943_call = mod.get_global_var('func_2943')
func_2945_call = mutated_mod.get_global_var('func_2945')
call_3986 = func_2943_call()
call_3987 = func_2943_call()
output = relay.Tuple([call_3895,uop_3912,call_3924,const_3942,call_3960,uop_3970,uop_3973,call_3981,call_3986,])
output2 = relay.Tuple([call_3896,uop_3914,call_3925,const_3942,call_3962,uop_3972,uop_3973,call_3982,call_3987,])
func_3990 = relay.Function([var_3961,], output)
mod['func_3990'] = func_3990
mod = relay.transform.InferType()(mod)
mutated_mod['func_3990'] = func_3990
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3991 = relay.var("var_3991", dtype = "float32", shape = (858,))#candidate|3991|(858,)|var|float32
func_3990_call = mutated_mod.get_global_var('func_3990')
call_3992 = func_3990_call(var_3991)
output = call_3992
func_3993 = relay.Function([var_3991], output)
mutated_mod['func_3993'] = func_3993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_4005 = relay.TupleGetItem(func_1973_call(), 2)
call_4006 = relay.TupleGetItem(func_1974_call(), 2)
func_3194_call = mod.get_global_var('func_3194')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_4010 = relay.TupleGetItem(func_3194_call(), 0)
call_4011 = relay.TupleGetItem(func_3195_call(), 0)
var_4017 = relay.var("var_4017", dtype = "float64", shape = (63,))#candidate|4017|(63,)|var|float64
bop_4018 = relay.bitwise_and(call_4005.astype('int8'), relay.reshape(var_4017.astype('int8'), relay.shape_of(call_4005))) # shape=(63,)
bop_4021 = relay.bitwise_and(call_4006.astype('int8'), relay.reshape(var_4017.astype('int8'), relay.shape_of(call_4006))) # shape=(63,)
uop_4035 = relay.acosh(var_4017.astype('float64')) # shape=(63,)
const_4055 = relay.const([1.192581,5.531236,-2.658551,-3.712741,-0.792982,2.720930,3.255147,-1.452380,1.795628,-3.354931,-0.936922,-2.066293,-5.840311,-1.572252,6.515793,-5.816727,0.271743,8.127233,-0.193128,3.896569,5.698968,-4.204996,6.931687,0.148956,0.991995,2.251275,-3.883561,-3.517452,0.316030,0.555072,-6.269688,2.690798,5.762855,5.219463,4.154556,-3.857612,7.232210,1.712168,-0.317065,8.162763,4.971997,3.544471,9.492394,-2.931489,-2.273892,3.535536,1.974274,-4.583479,-1.806582,8.955639,5.414409,-0.300060,-6.455779,8.119278,0.990864,-9.215492,-6.869458,-4.454275,8.877374,-2.942466,3.831123,2.287715,7.131229], dtype = "float64")#candidate|4055|(63,)|const|float64
bop_4056 = relay.greater_equal(uop_4035.astype('bool'), relay.reshape(const_4055.astype('bool'), relay.shape_of(uop_4035))) # shape=(63,)
func_1285_call = mod.get_global_var('func_1285')
func_1288_call = mutated_mod.get_global_var('func_1288')
const_4062 = relay.const([2.573528,-9.029352,-2.835216,3.144339,-0.087520,9.604678,-6.743398,3.834495,2.475419,7.908612,-8.848915,9.013433,-2.905981,4.607960,6.202871,-4.056878,3.947714,7.071744,-7.532600,8.122072,2.576428,0.265482,-1.436633,-1.723052,5.165513,-7.261988,9.141669,-8.104416,-2.281283,6.957436,-0.463755,-3.432073,6.610836,9.344164,-5.058090,-1.262346,-9.924874,9.346781,-4.825160,-9.189178,0.599515,2.073722,-5.763954,-1.924942,-2.736602,-4.925718,1.547240,-7.566033,5.859593,4.489997,1.246433,4.737415,6.600983,-8.693682,0.744427,7.914017,2.294683,7.823435,6.904097,-4.792433,-2.249909,-0.547824,3.029720,-0.827169,1.106395,-2.067015,8.708909,-6.265750,-0.082947,6.482747,1.248334,1.578204,8.174446,5.426554,-1.534518,-1.198429,-5.274632,8.623279,-5.731951,-9.600828,9.724923,-3.589759,9.903192,0.872592,5.788198,7.428274,-6.966872,9.315197,1.714046,-4.142637,6.482949,-5.882548,8.958978,4.609441,6.323220,3.961804,8.831703,-3.347609,-5.340128,-7.490353,-0.479172,0.653424,-7.799724,-2.201942,7.615171,-4.617737,-9.522741,-9.589457,-6.490675,3.813246,-4.475040,-3.894889,-2.057950,-3.185208,-5.072531,-7.097192,-7.050297,2.393056,-6.580450,-2.410216,-3.557574,-7.225281,-3.166524,7.391290,2.246095,-9.739653,5.013488,4.574482,9.351225,1.577043,-4.796104,-7.847689,4.288645,-7.263800,-7.040966,0.753405,4.772363,7.523986,-2.200518,-0.192122,4.203556,9.869629,8.633440,-5.768220,-6.487999,-1.457679,7.491684,2.653124,9.823886,-5.680488,2.592426,-9.941568,-6.333017,-3.507441,-0.756359,-8.391396,3.105041,6.570317,-1.003287,-6.723601,4.662463,3.349154,2.096270,1.138345,-5.091836,-2.399098,5.610757,-3.616466,-0.018873,-1.926014,4.031869,-2.535922,8.353638,2.845357,0.675800,-9.232658,8.483866,9.673713,7.162775,2.302234,9.377081,1.397159,-7.681406,-5.782072,-7.181341,-6.441305,9.820282,-2.711932,-0.931230,-5.973519,0.310867,-0.064258,-5.498273,-4.296905,-3.054752,-5.405660,6.947242,-8.858789,3.206708,0.481894,9.817566,-6.655259,-8.260899,1.956038,-4.845290,9.266575,9.356293,-1.774885,3.375227,1.789117,-4.286564,9.633634,2.194870,-9.788028,-7.708513,-0.438874,3.905903,-5.264699,1.495092,-2.478223,2.191892,-9.352776,5.288974,4.038280,7.426601,-9.301297,-1.814685,7.892931,4.214626,-4.749607,0.607769,1.496675,0.925901,6.876182,-8.542752,1.283004,9.666809,-5.651173,-5.914310,0.964130,-6.451806,-1.896535,-2.016448,-7.029158,5.499007,2.931958,2.941036,9.317794,8.473746,9.714361,-0.551474,7.244760,-3.235809,-2.912927,3.637503,-2.037938,1.093053,-9.231685,3.059822,7.268452,-3.350780,9.795699,1.392719,-1.861502,0.380770,-7.870558,-1.181878,0.970430,1.118563,-8.712952,-3.079952,-4.450277,4.777989,0.444733,0.385592,2.210636,5.978377,2.229235,8.601494,5.681459,-0.743667,-0.765782,-0.201310,5.894858,6.947642,-4.149049,8.930065,0.328122,-6.838678,7.658694,1.603708,6.469742,3.653692,2.636802,-9.740954,-3.516392,6.877174,-5.693367,-9.441963,3.704018,0.154128,2.770240,3.321555,2.923925,2.373977,3.958038,5.919864,-7.687328,-6.673202,3.702984,-2.439449,5.135717,-5.711901,8.057587,3.709242,-2.511394,4.448389,5.517104,-9.470185,-1.896654,5.424175,-6.484352,-1.338017,-8.573931,-7.285151,1.587073,1.701457,-5.375626,-2.805278,-5.122033,5.129092,-7.269117,1.523238,8.843067,-4.953997,8.203253,6.997744,-3.800467,-3.746463,-4.746523,-6.960235,-0.015620,-2.338400,4.927555,-8.774527,0.952391,-8.120856,-8.382796,5.425432,9.476816,8.802795,-8.681966,-9.159768,-7.350799,2.585302,-9.311969,8.689912,8.837490,0.467624,-1.508193,-7.903280,4.603646,-8.334309,-6.932019,9.409902,0.064000,2.867342,-5.237328,0.476805,-3.551462,1.916800,-5.454590,0.636158,6.881165,1.021957,0.755413,9.940103,-6.039208,-2.609033,9.283892,5.708260,2.406139,-3.112810,-3.765495,-5.922092,-0.166467,7.627821,-7.533261,-5.071665,-2.094210,-5.781204,-9.136284,-1.339008,0.764864,8.631513,2.375958,2.096253,0.386496,-0.311160,3.347955,5.885723,-5.256538,0.419395,3.336347,-2.235703,6.237855,0.434991,-5.396805,-1.011203,0.649276,0.746918,-2.399141,5.057699,-2.292124,-4.019901,-7.778954,-6.046337,-0.368504,-0.314040,2.767114,1.093871,0.491762,-6.337171,4.693367,2.964316,7.703655,3.161965,1.862695,2.621437,-1.093317,-5.179115,7.610283,6.625672,-9.755262,-0.832726,3.672124,-9.911586,-0.770143,-6.053698,5.276241,-7.645403,-4.714389,2.595855,-8.954833,-2.950924,-2.782570,-9.036651,8.616848,1.097888,7.182647,7.083728,-0.421099,0.429856,5.303783,-5.402909,8.357006,7.479753,-7.857841,5.587744,6.281320,0.494667,-6.594536,-0.061459,0.507787,5.094137,8.066022,5.746547,-1.463679,-2.336253,0.765085,7.647321,-6.126454,-2.581046,9.540794,2.960487,1.978005,-8.097491,-2.384041,2.838350,-3.131253,-2.828163,-2.614206,7.670269,-9.355495,-5.292569,-7.978018,-6.945119,-4.185734,7.697243,8.167911,-1.568326,8.862545,-8.123664,7.622973,-6.522054,6.702135,3.353330,-8.337951,-5.173042,2.237266,-2.839034,-5.726119,-4.914069,-3.169119,-5.190811,-0.594609,-4.864858,4.165162,-3.329722,5.157451,4.997727,3.587946], dtype = "float64")#candidate|4062|(512,)|const|float64
call_4061 = relay.TupleGetItem(func_1285_call(relay.reshape(const_4062.astype('float64'), [16, 2, 16])), 2)
call_4063 = relay.TupleGetItem(func_1288_call(relay.reshape(const_4062.astype('float64'), [16, 2, 16])), 2)
output = relay.Tuple([call_4010,bop_4018,bop_4056,call_4061,const_4062,])
output2 = relay.Tuple([call_4011,bop_4021,bop_4056,call_4063,const_4062,])
func_4082 = relay.Function([var_4017,], output)
mod['func_4082'] = func_4082
mod = relay.transform.InferType()(mod)
var_4083 = relay.var("var_4083", dtype = "float64", shape = (63,))#candidate|4083|(63,)|var|float64
output = func_4082(var_4083)
func_4084 = relay.Function([var_4083], output)
mutated_mod['func_4084'] = func_4084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_4094 = func_2472_call()
call_4095 = func_2472_call()
uop_4113 = relay.sinh(call_4094.astype('float64')) # shape=(2, 14, 12)
uop_4115 = relay.sinh(call_4095.astype('float64')) # shape=(2, 14, 12)
func_4082_call = mod.get_global_var('func_4082')
func_4084_call = mutated_mod.get_global_var('func_4084')
var_4118 = relay.var("var_4118", dtype = "float64", shape = (63,))#candidate|4118|(63,)|var|float64
call_4117 = relay.TupleGetItem(func_4082_call(relay.reshape(var_4118.astype('float64'), [63,])), 1)
call_4119 = relay.TupleGetItem(func_4084_call(relay.reshape(var_4118.astype('float64'), [63,])), 1)
output = relay.Tuple([uop_4113,call_4117,var_4118,])
output2 = relay.Tuple([uop_4115,call_4119,var_4118,])
func_4124 = relay.Function([var_4118,], output)
mod['func_4124'] = func_4124
mod = relay.transform.InferType()(mod)
var_4125 = relay.var("var_4125", dtype = "float64", shape = (63,))#candidate|4125|(63,)|var|float64
output = func_4124(var_4125)
func_4126 = relay.Function([var_4125], output)
mutated_mod['func_4126'] = func_4126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3854_call = mod.get_global_var('func_3854')
func_3855_call = mutated_mod.get_global_var('func_3855')
call_4161 = relay.TupleGetItem(func_3854_call(), 0)
call_4162 = relay.TupleGetItem(func_3855_call(), 0)
output = call_4161
output2 = call_4162
func_4190 = relay.Function([], output)
mod['func_4190'] = func_4190
mod = relay.transform.InferType()(mod)
output = func_4190()
func_4191 = relay.Function([], output)
mutated_mod['func_4191'] = func_4191
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4216 = relay.var("var_4216", dtype = "float32", shape = (16, 6, 16))#candidate|4216|(16, 6, 16)|var|float32
uop_4217 = relay.acos(var_4216.astype('float32')) # shape=(16, 6, 16)
output = relay.Tuple([uop_4217,])
output2 = relay.Tuple([uop_4217,])
func_4230 = relay.Function([var_4216,], output)
mod['func_4230'] = func_4230
mod = relay.transform.InferType()(mod)
var_4231 = relay.var("var_4231", dtype = "float32", shape = (16, 6, 16))#candidate|4231|(16, 6, 16)|var|float32
output = func_4230(var_4231)
func_4232 = relay.Function([var_4231], output)
mutated_mod['func_4232'] = func_4232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3854_call = mod.get_global_var('func_3854')
func_3855_call = mutated_mod.get_global_var('func_3855')
call_4242 = relay.TupleGetItem(func_3854_call(), 0)
call_4243 = relay.TupleGetItem(func_3855_call(), 0)
output = call_4242
output2 = call_4243
func_4246 = relay.Function([], output)
mod['func_4246'] = func_4246
mod = relay.transform.InferType()(mod)
output = func_4246()
func_4247 = relay.Function([], output)
mutated_mod['func_4247'] = func_4247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_4270 = relay.TupleGetItem(func_2923_call(), 2)
call_4271 = relay.TupleGetItem(func_2924_call(), 2)
output = call_4270
output2 = call_4271
func_4284 = relay.Function([], output)
mod['func_4284'] = func_4284
mod = relay.transform.InferType()(mod)
output = func_4284()
func_4285 = relay.Function([], output)
mutated_mod['func_4285'] = func_4285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1769_call = mod.get_global_var('func_1769')
func_1770_call = mutated_mod.get_global_var('func_1770')
call_4289 = relay.TupleGetItem(func_1769_call(), 0)
call_4290 = relay.TupleGetItem(func_1770_call(), 0)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_4294 = func_3266_call()
call_4295 = func_3266_call()
uop_4330 = relay.asinh(call_4294.astype('float64')) # shape=(2, 14, 12)
uop_4332 = relay.asinh(call_4295.astype('float64')) # shape=(2, 14, 12)
output = relay.Tuple([call_4289,uop_4330,])
output2 = relay.Tuple([call_4290,uop_4332,])
func_4339 = relay.Function([], output)
mod['func_4339'] = func_4339
mod = relay.transform.InferType()(mod)
output = func_4339()
func_4340 = relay.Function([], output)
mutated_mod['func_4340'] = func_4340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4368 = relay.var("var_4368", dtype = "float64", shape = (10, 15))#candidate|4368|(10, 15)|var|float64
uop_4369 = relay.asin(var_4368.astype('float64')) # shape=(10, 15)
func_3497_call = mod.get_global_var('func_3497')
func_3500_call = mutated_mod.get_global_var('func_3500')
var_4392 = relay.var("var_4392", dtype = "int16", shape = (1404,))#candidate|4392|(1404,)|var|int16
call_4391 = relay.TupleGetItem(func_3497_call(relay.reshape(var_4392.astype('int16'), [13, 12, 9]), relay.reshape(var_4392.astype('int16'), [13, 12, 9]), ), 0)
call_4393 = relay.TupleGetItem(func_3500_call(relay.reshape(var_4392.astype('int16'), [13, 12, 9]), relay.reshape(var_4392.astype('int16'), [13, 12, 9]), ), 0)
output = relay.Tuple([uop_4369,call_4391,var_4392,])
output2 = relay.Tuple([uop_4369,call_4393,var_4392,])
func_4396 = relay.Function([var_4368,var_4392,], output)
mod['func_4396'] = func_4396
mod = relay.transform.InferType()(mod)
var_4397 = relay.var("var_4397", dtype = "float64", shape = (10, 15))#candidate|4397|(10, 15)|var|float64
var_4398 = relay.var("var_4398", dtype = "int16", shape = (1404,))#candidate|4398|(1404,)|var|int16
output = func_4396(var_4397,var_4398,)
func_4399 = relay.Function([var_4397,var_4398,], output)
mutated_mod['func_4399'] = func_4399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3008_call = mod.get_global_var('func_3008')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_4414 = relay.TupleGetItem(func_3008_call(), 0)
call_4415 = relay.TupleGetItem(func_3009_call(), 0)
output = relay.Tuple([call_4414,])
output2 = relay.Tuple([call_4415,])
func_4420 = relay.Function([], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
output = func_4420()
func_4421 = relay.Function([], output)
mutated_mod['func_4421'] = func_4421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4446 = relay.var("var_4446", dtype = "float32", shape = (8, 12))#candidate|4446|(8, 12)|var|float32
uop_4447 = relay.atan(var_4446.astype('float32')) # shape=(8, 12)
output = uop_4447
output2 = uop_4447
func_4453 = relay.Function([var_4446,], output)
mod['func_4453'] = func_4453
mod = relay.transform.InferType()(mod)
var_4454 = relay.var("var_4454", dtype = "float32", shape = (8, 12))#candidate|4454|(8, 12)|var|float32
output = func_4453(var_4454)
func_4455 = relay.Function([var_4454], output)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_4470 = relay.TupleGetItem(func_1546_call(), 0)
call_4471 = relay.TupleGetItem(func_1548_call(), 0)
func_3497_call = mod.get_global_var('func_3497')
func_3500_call = mutated_mod.get_global_var('func_3500')
const_4476 = relay.const([[-6,6,-9,-5,8,4,9,-4,-8,-2,-3,2,9,-6,9,-8,8,6,-8,4,-6,7,2,2,2,7],[-10,1,-2,-8,6,-7,-9,-10,5,2,2,7,-3,-6,-4,-2,1,-6,10,-3,1,1,-4,-8,6,-2],[-1,6,1,1,-6,-2,6,-9,3,5,5,-5,-10,10,2,6,-5,7,4,-1,-1,-7,-2,-5,2,10],[-7,-6,7,3,-2,-5,1,2,2,-8,-8,-1,-5,7,6,5,-4,10,-9,-1,2,-5,-9,-10,2,-3],[-3,3,9,-5,1,10,-1,5,3,-10,-3,6,3,1,4,-8,-6,-6,2,4,9,9,4,9,-1,10],[3,-5,4,2,2,6,10,7,-1,-7,4,-2,9,6,2,5,-6,4,8,9,-5,-10,-4,8,7,-8],[1,-1,-5,2,5,-3,-8,10,-2,-10,3,-3,-8,-2,8,7,-4,-2,7,4,-1,-2,3,-9,-2,-1],[8,2,7,-10,-6,4,7,-8,-10,-6,-9,-10,-4,-9,-5,-1,-6,-10,7,-6,8,4,8,10,4,6],[8,-10,-4,-9,1,3,-3,8,2,-6,8,6,1,1,-3,3,-7,-4,-1,-2,-2,-10,10,6,4,4],[1,-7,7,-10,-8,-2,5,6,8,8,4,7,-6,8,5,3,2,-10,9,-9,-2,-2,8,3,-5,-8],[-9,-5,-9,4,-4,2,8,-5,2,5,-7,-1,6,-3,-6,-2,-5,7,-9,-8,9,-9,1,-3,-9,7],[7,3,3,-6,4,-4,-6,-2,4,-8,-1,-10,-10,-3,3,-5,9,4,1,-1,-10,5,-5,-1,-1,2],[3,-2,4,1,7,-8,1,8,-5,-8,-3,-1,2,-9,-10,-4,-4,-5,4,-8,2,-7,1,5,-4,9],[8,8,-1,-2,10,3,2,4,5,-7,7,2,-1,4,-1,-5,-4,-6,1,-5,4,5,-9,10,-1,3],[-2,8,1,9,4,9,-8,-2,-5,-2,-6,-2,7,8,-10,-10,5,6,-9,-8,-10,2,3,10,2,8],[-8,4,4,-5,-5,7,-2,-4,9,-5,-10,-10,2,3,-10,3,-1,7,-1,10,-9,3,-9,4,10,8],[8,-3,7,-6,4,7,6,-1,-6,2,7,7,-4,-7,-10,-6,-2,-9,-4,-6,-4,-6,-6,-9,7,8],[-7,-1,3,7,2,2,-2,-4,5,5,-2,-4,-7,1,-6,-7,1,6,-5,-9,-6,-10,1,-5,4,10],[10,-4,-6,-10,-3,5,-6,-10,-4,7,-10,-8,-10,9,-2,10,10,-10,9,1,10,6,7,-6,-4,10],[-9,7,3,3,-3,-1,9,3,3,1,-10,-9,4,-7,-8,4,-9,-9,7,10,-7,6,2,7,3,-1],[5,-1,7,9,7,5,4,-8,5,2,-9,-9,8,-8,-4,-6,-1,9,-5,5,10,7,3,-7,-5,2],[9,-5,-9,-2,6,-1,-4,-6,9,-2,1,-4,-7,5,-4,-6,-8,4,7,-10,3,-9,4,-10,7,1],[-1,4,-10,2,6,8,10,-1,7,8,-5,-1,-2,-3,2,7,-2,5,-8,7,4,7,-7,-1,-2,-8],[-7,9,1,6,-7,-1,2,1,1,-5,3,-1,4,9,-2,-6,-8,-6,-6,-4,-7,-4,-9,10,-2,8],[-1,-8,-10,1,-5,-1,-2,4,1,-3,-3,7,1,-5,-6,-8,2,10,-4,4,-7,-2,3,-9,4,-5],[10,-10,-1,3,7,-2,9,1,-4,3,-1,2,-1,-8,-6,1,-5,6,5,3,3,3,9,7,8,-7],[-5,2,-4,10,-3,6,3,6,-3,1,6,10,-7,-1,5,5,8,5,-6,-2,7,9,-1,-9,3,2],[4,-5,7,6,-5,-5,8,7,-6,-5,8,-2,-6,-5,10,8,-9,5,-10,-1,3,10,-5,-5,7,-1],[-1,-5,-3,6,10,-5,9,-7,2,6,4,-5,4,-8,-10,-9,4,-10,6,10,1,7,5,9,-1,-3],[2,4,7,-10,-4,10,10,-5,-9,4,-10,10,-4,5,7,-10,5,6,9,1,-2,1,2,-10,-1,-2],[5,8,-2,-7,-8,-7,-3,7,6,5,-8,2,2,-2,8,6,8,5,5,-9,8,-8,-9,-5,2,5],[-6,-3,-10,-1,-10,2,-1,8,-10,10,2,-1,4,10,-3,7,3,-8,-6,-1,-6,-4,1,-2,8,-9],[2,5,-5,4,-1,9,-1,-7,8,3,1,10,9,5,7,-10,-5,7,-10,-9,-1,5,5,-9,9,6],[9,-4,-1,-8,4,-9,4,8,-6,5,5,-9,1,5,10,-10,7,-9,-4,7,4,-6,2,4,-2,7],[-10,-10,-4,1,-6,3,8,4,-9,-9,-8,3,2,10,-6,-3,-1,7,10,9,10,1,-4,-9,9,7],[-6,9,-8,2,-6,-10,8,4,7,5,-5,-7,-3,-3,-6,-10,-3,-8,8,6,-5,-2,-4,-2,-10,-10],[5,-8,-2,1,-3,10,-1,-6,-8,-4,-9,-7,-5,-5,8,-3,-1,-1,10,-2,-6,9,-1,-8,-7,2],[-3,8,8,4,-7,6,6,2,1,10,-6,-5,-2,-4,7,5,-4,7,-4,-5,8,8,1,9,-4,7],[8,5,-7,8,-8,6,-6,4,-6,1,-10,-7,9,-3,4,2,-4,-1,9,-4,4,7,-5,-10,-9,6],[-9,10,-8,10,-5,-4,-1,-7,-8,-5,3,4,2,10,4,3,-8,5,8,-7,-10,-9,8,1,-8,-8],[-8,-10,6,-4,-7,-8,-9,-10,8,9,8,7,3,2,4,-4,-2,-5,-8,1,-5,10,-9,3,10,3],[10,-6,10,6,-9,6,-5,-2,-1,8,-9,2,-1,-5,-8,8,10,1,-3,-4,5,6,5,5,-10,-2],[3,8,2,4,-6,6,-6,8,3,-4,3,2,-7,-4,10,-9,-1,-7,-2,10,5,4,4,3,-5,8],[6,-6,5,-3,5,9,8,-10,9,10,8,5,7,9,-4,10,5,4,-5,8,-8,-7,-3,1,-6,3],[-7,6,-6,-10,2,-10,-7,10,3,3,2,-10,-8,6,1,8,10,6,10,6,-5,2,5,3,7,9],[-7,-6,-1,-8,2,2,1,7,3,5,4,-9,9,-8,9,8,8,2,-6,2,6,9,-4,-3,4,5],[5,-6,10,-3,-3,7,-4,-1,-9,8,8,7,6,9,7,-7,-1,-9,8,10,-2,3,7,-8,-8,4],[-4,10,-10,-9,4,-1,10,6,1,-9,4,-1,-7,-9,-5,-3,-5,-10,-1,-2,-6,9,-3,4,-10,9],[7,9,8,1,5,4,-6,-5,-5,3,9,9,-7,-6,-8,-3,4,10,-1,5,6,6,-4,-10,-9,10],[5,10,2,8,-10,6,-4,5,-9,3,-2,7,1,6,-10,-10,6,6,-5,-10,7,8,-4,1,7,-9],[5,6,-5,8,1,-2,-7,6,3,6,2,1,10,9,8,-8,-4,-10,9,6,-5,6,5,3,-8,7],[-6,-7,-2,4,4,2,-6,-9,-10,4,3,9,-2,5,-3,9,3,-6,2,-5,-9,8,-9,2,-4,-7],[6,5,8,5,4,-3,-10,4,-8,-10,-7,-2,-5,-8,-1,-6,-8,-5,10,-2,-6,1,-3,-7,3,-9],[6,-7,-6,-10,9,-5,6,5,-2,10,1,5,6,8,9,-2,-9,-6,3,3,1,-10,10,2,-2,1]], dtype = "int16")#candidate|4476|(54, 26)|const|int16
call_4475 = relay.TupleGetItem(func_3497_call(relay.reshape(const_4476.astype('int16'), [13, 12, 9]), relay.reshape(const_4476.astype('int16'), [13, 12, 9]), ), 0)
call_4477 = relay.TupleGetItem(func_3500_call(relay.reshape(const_4476.astype('int16'), [13, 12, 9]), relay.reshape(const_4476.astype('int16'), [13, 12, 9]), ), 0)
func_1923_call = mod.get_global_var('func_1923')
func_1928_call = mutated_mod.get_global_var('func_1928')
const_4488 = relay.const([3.164048,-2.353719,9.374814,-9.333945,-3.725860,6.887257,6.577478,-3.068432,-1.486536,-0.354662,-0.062401,6.316268,9.884919,1.317195,-7.320421,9.301691,-1.266139,8.023454,-2.695300,5.593715,-3.021245,-0.476281,-0.175526,-0.986994,-1.173917,-1.015063,2.577331,8.900731,-1.814935,-5.459401,-1.387832,-0.445986,9.021163,-5.858734,-3.865138,-7.427759,-3.669423,-8.664297,8.491877,4.666620,0.514557,1.885219,-6.301811,0.740047,6.052822,2.284992,9.043892,9.964795,3.787727,-9.065613,4.270964,2.801601,1.104057,-9.774870,-7.052094,1.544153,-0.121560,5.352455,4.139667,3.767532,-3.122154,-0.468568,9.509731,-6.260086,-0.254832,-3.772269,2.162669,8.792248,9.320817,-3.664707,-8.426395,2.415979,-2.599853,6.029115,9.262415,-2.591196,1.257525,1.383941,-8.173676,0.033050,2.785884,-2.708889,7.532597,8.100620,-0.527557,0.690949,2.022853,8.613130,6.607376,-4.964428,2.604320,-3.827588,3.734714,4.412757,8.956994,-1.947315,-1.290606,5.076641,7.903261,-4.268662,-2.787379,-3.548975,-7.347100,3.902165,-0.448007,-9.678460,9.971072,-0.412103,5.350474,-4.028780,-7.271545,8.441144,-2.176836,2.571804,2.039463,9.645128,7.388510,-3.211285,7.620308,2.554011,7.338343,4.999043,-7.638248,7.729633,-7.792190,-0.442312,4.871119,1.725127,-3.581912,7.997026,9.625420,-1.987896,-9.418746,-2.541599,-0.880049,6.333273,-7.376448,-3.808795,-4.336325,-0.710242,-5.784311,1.234451,-0.016745,3.531469,7.639068,-0.006769,1.062767,3.724358,8.593417,6.322805,0.144274,8.134502,5.672037,-1.038911,-7.267768,-2.024449,6.297188,-6.872352,2.466586,4.235995,-3.652759,4.944502,-5.604214,1.762609,-3.354189,0.330131,5.696383,6.965592,8.153389,-6.077884,-6.829606,-8.285334,-7.570120,3.263194,-1.600880,2.840902,8.092889,-5.889948,3.113244,8.741234,-4.820179,-4.846005,-0.544770,-1.849250,3.046945,2.197451,-2.674148,-4.614222,-6.814126,-2.618960,-9.382834,2.441594,-3.023038,7.681310,9.396861,5.757183,0.726129,4.993595,-3.404734,7.619466,-1.749252,7.988229,-7.233884,7.268248,-7.380711,9.276976,6.986302,-7.146629,-3.090023,-6.763402,-3.288459,0.012545,6.622172,3.542746,3.263665,3.976984,3.125030,-1.380693,-3.316135,-1.883708,1.058263,7.407724,-0.505093,-4.841781,7.020279,-8.196032,-6.548425,-2.141362,-5.736833,3.147632,-1.223513,1.205328,-2.254196,-0.381495,-9.920464,0.962865,-7.326882,-6.032360,-2.317592,-1.612011,6.266085,1.059093,-0.560911,6.578289,-8.891195,-8.868725,-4.262010,-3.480430,8.872671,7.379669,-1.110146,3.660157,-9.693156,8.040917,-6.788813,-6.695997,0.985064,-0.235096,5.002172,-5.376811,-4.473833,2.879749,1.512484,4.804626,-4.640116,-9.838611,0.378564,9.267292,2.788681,-9.159073,-0.532294,-3.834196,1.660809,-3.911475,-3.358441,-0.215856,7.778992,4.132265,2.375406,-3.937772,-3.296189,-5.877659,-0.345123,8.758055,9.612514,-5.018305,-0.246214,1.954715,8.451770,2.460218,-6.788405,-8.669816,7.482167,-9.530467,8.627513,-8.345533,3.498207], dtype = "float32")#candidate|4488|(297,)|const|float32
const_4489 = relay.const([-3.446004,5.626624,-4.377686,6.904175,1.658529,4.320772,-4.297170,-6.761562,2.203298,5.003883,-0.085255,-4.426745,-5.321108,-1.408634,-8.590279,-4.383232,-8.340876,1.997555,2.648601,-7.563640,5.286074,2.477707,1.818300,-3.099457,4.523974,5.595066,-0.059539,-7.483880,6.886896,3.082820,-1.225824,-7.215152,6.983594,7.458851,-2.135038,6.029039,0.454388,-5.406905,-9.169688,1.471321,-8.243193,7.428846,1.880448,1.740473,-0.904822,-6.849275,-2.552083,6.766087,-8.038794,-1.604366,-7.770409,-2.889237,3.420509,1.568066,1.927289,6.700109,6.365436,7.293166,3.861967,6.534351,9.589141,-7.727873,6.520409,2.530036,-9.707979,-9.360876,5.588303,-8.953256,1.389590,-8.081034,-5.359067,-0.171007,-2.880203,-7.968323,-4.776277,-3.886521,3.378411,6.273300,-3.141017,-5.475339,9.202616,-3.201069,0.734823,5.126057,-3.610665,-2.916333,4.827503,-0.580436,-6.115019,3.384153,-3.345849,-0.325785,-2.401522,-0.910357,-4.806997,1.549394,-1.335949,-8.462799,-5.947991,-2.224670,3.939691,-2.860599,-8.744588,-8.007958,8.672933,3.594347,6.535513,-9.874391,-4.290341,4.388390,8.196159,-0.022669,-9.378791,-7.247304,-0.213366,9.745764,4.630731,-5.077571,-0.413419,-2.280940,5.611395,4.525374,6.768854,-8.477585,4.288836,-2.398340,2.913646,-2.640826,6.987676,-7.159967,0.959161,9.747549,4.471991,-3.004029,-6.125024,-0.011184,4.732822,7.892744,3.757243,-8.413792,5.054211,0.661441,0.233347,-5.386346,-5.419188,-2.934271,-5.089196,-7.661142,8.853830,4.938203,9.175145,9.944342,8.262823,0.311207,8.189853,4.851182,-3.069626,4.331648,-7.613078,-8.454990,-1.774390,7.066778,-2.268966,9.055427,-9.660834,-1.992173,-8.403487,-4.402358,-0.720647,-1.389281,1.174142,-5.503006,-5.682869,5.065786,0.295995,-1.970135,-0.288012,-9.084260,1.544513,7.525141,-2.199712,-5.156852,2.035718,-5.058184,-7.608784,3.642847,7.879690,-2.005395,0.397908,-0.780506,2.495922,2.609828,-9.528431,6.178021,7.884277,-8.144635,-8.117487,-3.244895,0.704469,1.801199,1.317359,-0.108593,-1.100318,-5.115048,-7.475544,-9.367361,5.026039,-0.520853,8.098494,-2.679810,-9.736491,-1.935560,8.254462,-9.568286,3.965172,-3.284709,0.395572,2.977780,1.863680,7.379945,6.260841,-0.224719,9.685225,-1.092075,-9.359326,6.969153,8.094653,0.846182,-4.852945,-0.611764,4.460802,-6.641914,6.615664,-5.623155,-1.591990,-5.720145,0.001222,-4.023011,7.304689,6.851981,9.200949,-4.542726,-1.824917,1.252106,-8.908138,-0.607465,0.461295,-5.553637,4.124647,7.501009,-7.545707,7.234592,-1.232487,5.716608,-2.327826,3.266329,2.557540,4.498462,7.360139,3.419447,-8.049577,5.652207,-9.076108,-4.810273,-0.134704,1.415022,8.699831,-6.028855,9.642604,-1.435977,-3.248997,1.632174,7.420642,0.202600,-7.426945,-0.679890,1.969800,-7.979961,0.816874,5.714967,-5.567358,1.885730,3.032266,-0.633396,9.549984,-9.216924,-5.418141,4.721760,-6.401291,1.351141,2.945716,9.186505,3.038658,9.503985,-2.200028,2.425088,6.234646,6.716462,-3.303963,0.123594,-3.498035,-4.687630,-3.382952,-5.784278,-8.581521,7.223285,-6.590704,-1.274691,-8.440087,-4.326475,-1.550633,9.007358,-5.865229,-8.580957,-5.099008,-2.222213,-4.122505,-4.273505,6.913443,1.397622,-6.178948,7.209561,-7.562262,-9.130138,2.629767,8.925951,-5.062122,-0.277794,2.320679,-4.365414,-5.049525,-8.547919,3.105684,8.930972,-1.735932,-3.905604,6.463125,5.247143,-4.133156,-3.411872,-9.665414,5.912747,2.414321,-1.241088,8.779820,-3.499679,8.126566,-2.486389,2.118815,2.053662,-0.912262,-4.935787,-4.043116,9.946933,-5.317550,-5.116839,-1.033462,6.662642,1.925871,-5.888569,-2.158622,2.749036,-8.343976,-3.721387,6.805589,8.408794,-4.268008,-7.218402,7.283914,0.221140,2.825934,-7.991312,0.271682,3.291695,8.389800,8.912076,8.820297,-8.809146,-7.701907,5.567556,-1.846995,-5.229241,3.107825,2.902005,-2.355644,-9.767319,9.368978,0.167953,-3.403525,5.533610,9.103367,-1.604141,2.093291,-0.213983,7.194405,-4.373882,-3.627333,-9.354093,9.991980,-5.990775,-0.526569,5.185199,8.467630,3.208342,-2.160014,-2.422554,3.706117,-7.287895,7.743268,7.314774,-2.454540,-5.804407,-8.564786,-9.231140,5.983119,7.913750,0.385340,1.565873,-7.531185,5.134196,8.146064,-5.182960,-6.702870,-5.178778,7.450308,-6.303645,7.391058,-1.035101,-0.942422,6.931841,6.389039,2.402924,7.878611,5.038865,3.055051,-8.047636,-5.409909,-6.554630,9.100322,-3.342505,-0.521022,2.400241,-9.810970,7.528111,-2.872812,-6.709226,1.815701,5.047441,-9.988399,-2.023136,3.213681,-2.177044,3.971008,-0.345176,0.521265,8.032341,5.257400,3.951827,-4.729501,-6.324029,5.114640,-3.869357,0.223174,-3.845341,5.789692,2.141781,5.710505,-2.019431,-9.677189,-3.437069,-5.030760,5.037052,-0.432950,9.280914,0.781821,4.225649,-2.850161,-9.441521,8.711064,0.942236,4.974850,0.033728,-2.388328,-8.632439,-4.867635,6.276241,-7.630726,6.160836,0.967727,-1.757654,-1.097747,-9.863995,8.623950,-5.725278,3.968787,4.881240,5.644799,6.444995,4.356093,-4.681889,-2.719597,-1.819794,2.531325,2.640199,-7.044498,7.313060,-4.109827,9.640969,-6.099107,-8.684343,2.932765,2.268161,1.566151,-5.453586,-3.776067,-4.126919,-2.695672,8.453885,-1.543154,9.261423,-4.998179,-7.297945,-1.737202,3.050105,9.739810,-1.126365,2.697572,0.256882,-2.324924,9.871630,2.150665,-2.040353,-2.773702,2.537652,-8.222947,1.710800,8.037061,6.552407,8.886705,4.309373,9.306406,4.738780,2.863891,7.269871,0.792534,-6.352698,-4.697993,-5.259341,-8.654819,-1.363372,-8.227324,-3.479020,1.480856,2.623500,-5.600370,9.855986,-2.053453,-6.669055,-4.597240,-1.477679,1.849364,-8.646248,0.810044,-7.711426,-5.858686,-5.657214,5.866163,-7.744692,4.983194,8.690372,-9.820131,0.950393,-0.009246,-7.043488,1.582512,-2.632969,2.041213,-7.365908,3.017708,1.955555,6.019608,8.670550,-3.374655,7.868982,4.320278,3.466405,-1.755493,6.400037,-9.482290,3.460091,-9.229200,-0.082600,-6.456143,-0.224581,-6.414458,1.218365,2.603761,-1.111606,-7.580961,7.690701,-4.023438,-3.244701,1.246738,6.548123,3.596184,7.329637,-8.247585,-2.431230,4.320391,1.745070,-4.770465,0.733649,9.657080,7.760782,-6.435514,3.978785,9.926725,8.382870,2.733597,-2.802892,9.806818,-6.183519,-9.955580,-9.135685,7.874279,6.374616,-5.357054,-5.645742,-3.182612,0.335653,-1.364726,4.315891,-6.391458,1.218258,-5.377299,7.963401,4.301348,7.779224,-3.936463,7.831320,7.320171,4.553283,-3.319916,8.247356,6.315695,2.044511,-0.895043,1.311477,3.015752,-6.620839,-9.198362,3.428542,-5.722336,0.622361,-6.139987,-1.151254,3.775531,8.205813,2.530590,-9.948125,3.655255,2.160782,6.031161,6.493241,8.576531,-2.307758,8.431241,0.942177,-4.810149,-4.489324,-4.234704,3.930469,-4.995509,7.834518,3.315821,-0.245893,7.876922,-0.207363,-6.011196,9.398256,-4.771864,6.676391,9.221970,8.387478,-4.499184,-1.796596,-9.170974,-5.398763,-9.503736,8.851835,-3.229314,-4.255155,7.615108,-0.883689,-2.850392,9.293774,2.928998,-5.490088,8.637885,-0.754850,5.201187,-6.266351,-2.523080,-0.379758,-0.283643,7.778020,9.127074,-6.199007,-4.690537,-4.348668,-0.241593,3.387260,9.107387,-0.145032,0.987463,-3.595026,4.136257,3.873842,0.817213,-7.754400,4.597309,-0.770130,-5.828004,0.366063,2.078866,1.744363,0.202067,9.194923,5.463199,3.550294,9.001245,7.040443,9.758372,-5.283994,3.496549,-4.618346,-6.367979,2.699859,-1.930257,-4.509126,3.329556,6.063805,-5.563454,9.333916,3.589549,7.327380,-7.800993,7.242147,5.888985,-9.511140,3.826351,4.644382,-4.834096,-0.167074,5.352963,-5.414087,-7.237180,1.303136,5.354361,-0.035017,2.771594,7.102671,2.332605,8.349644,-9.656042,1.118729,1.117835,-0.729912,2.742641,-0.843680,3.668357,5.416614,-6.814724,-7.706241,5.642889,-8.619475,-1.183860,-2.019689,9.628077,-8.627826,-0.028595,6.934654,-3.602047,4.320907,-1.055159,-0.599073,-3.016192,4.316286,-7.898739,-5.836024,7.558404,5.662581,-3.499743,8.155226,2.558894,-2.350001,4.083192,4.481094,6.198045,7.358998,-3.629570,7.257013,-6.719496,-7.430379,-0.025745,-6.302185,6.645657,-7.005728,-0.980704,4.423618,2.783190,9.729193,0.493555,6.998658,8.490929,-3.858286,-1.268739,-7.908800,1.631233,-5.944241,-8.448526,0.357706,-6.428582,8.667079,8.772234,-7.674808,-0.987129,8.536883,7.279628,-6.700013,2.781163,-1.456516,-8.242252,-6.944095,7.848794,-4.750907,-7.068555,-9.430149,6.082143,2.802653,-5.707327,2.980030,8.843873,0.374419,3.413621,0.402511,-3.375095,2.131436,-8.638328,-1.901704,-5.967233,8.229990,-8.933340,5.479824,-4.754402,-6.709682,-0.973252,8.097897,-2.518690,-4.957688,7.335999,2.561760,-1.779921,-9.698548,-6.942954,-1.714167,0.012016,6.041267,4.047666,9.861824,0.819214,1.911173,-8.549386,9.125233,0.592189,-4.065352,8.342953,-3.126366,-8.355142,3.069329,-7.421919,7.062632,7.839326,0.441959,8.539284,-0.819696,8.107446,1.826665,7.828563,-6.003985,-2.863966,5.957775,-3.817370,2.698154,-6.760087,-6.175431,6.299153,7.642191,-2.569570,7.290846,8.088233,8.066534,8.390847,-0.665788,0.879967,1.738716,-0.406803,-3.892163,6.897443,7.223284,-7.063959,-6.744039,-3.175103,-6.670495,-7.158735,-8.126400,-2.279687,-6.243392,-4.896202,-0.862531,-8.606976,-8.741134,-4.162119,3.310594,-8.619132,5.634880,-1.900961,-3.184936,0.088924,-7.688646,7.440851,-9.558370,-6.887239,2.324416,2.495609,-1.707383,-7.776590,-1.195493,9.692070,-3.188941,9.032704,-5.370998,4.674838,-0.769879,-6.559256,-3.183943,3.730862,2.037788,-5.801855,0.584078,-0.671186,2.022288,-1.951303,6.827097,4.667267,0.103953,6.497576,2.373747,1.401715,-0.939514,-3.068492,7.235054,0.646423,3.508381,1.391786,3.527993,-6.578271,-4.723338,2.218470,5.057046,0.478987,6.993418,-7.026757,1.705433,-9.020578,1.160428,9.897718,-6.295786,1.429203,-0.411247,-7.578427,-2.220725,-6.327852,6.859639,-4.168786,-2.591911,-3.748260,5.416784,-2.750433,-6.901514,-8.272486,7.164385,-7.817942,-2.157436,9.834222,-8.707502,-2.815618,9.486709,-4.993466,-9.306067,1.566701,-7.179255,-1.577460,-2.857555,2.025794,7.593498,4.417536,8.127329,3.611961,9.275722,-3.687383,-3.211684,9.856844,5.193015,8.120531,-8.466651,-6.470410,-6.839557,-5.663802,-4.595130,2.235197,3.497478,-5.521483,-2.954006,-9.013357,8.031031,8.590650,-4.500040,1.463818,-3.858023,1.517127,1.202640,-4.068191,5.040786,-0.482342,-3.719959,8.225487,-5.208319,-2.856637,7.268190,4.505409,1.126288,2.280011,4.264548,4.244445,4.135355,-6.685667,-0.586029,-0.149531,-0.837431], dtype = "float32")#candidate|4489|(1050,)|const|float32
const_4490 = relay.const([10,-9,1,1,5,-1,-5,-1,-6,-4,-2,-6,6,7,-10,-10,-2,-9,3,10,-5,-10,-3,-3,-9,-9,-4,9,1,-2,6,3,1,10,1,-3,-4,1,5,8,8,4,-10,-4,6,-4,-7,2,-9,3,2,-8,-8,-6,2,-6,9,6,2,-2,5,-3,-5,10,5,3,9,6,2,-2,-5,-7,-8,-4,1,9,4,-8,-6,2,-10,-3,-8,-8,-2,-5,9,-1,-4,-9,3,-3,-1,7,-7,-3,3,8,6,2,-6,-4,8,4,-10,-9,5,1,10,5,6,4,5,-3,-8,8,-3,-9,-10,2,-7,3,10,-8,-2,8,3,9,6,9,-6,-9,1,-9,2,1,4,-1,-9,-7,-4,-1,8,6,-10,9,-4,-5,6,-8,-7,8,-6,-6,-10,8,-7,-4,8,9,7,-8,-6,-7,-8,1,-5,-9,-9,-8,7,6,6,10,-2,-6,9,-9,6,9,3,1,10,1,-4,-10,-6,8,-8,7,-9,6,-6,5,3,8,-6,3,9,-5,4,8,6,3,-4,4,3,1,7,3,-2,3,10,-3,-4,3,-6,8,-7,-5,-3,-4,1,8], dtype = "uint8")#candidate|4490|(224,)|const|uint8
call_4487 = relay.TupleGetItem(func_1923_call(relay.reshape(const_4488.astype('float32'), [11, 3, 9]), relay.reshape(const_4489.astype('float32'), [1050,]), relay.reshape(const_4490.astype('uint8'), [2, 112]), ), 3)
call_4491 = relay.TupleGetItem(func_1928_call(relay.reshape(const_4488.astype('float32'), [11, 3, 9]), relay.reshape(const_4489.astype('float32'), [1050,]), relay.reshape(const_4490.astype('uint8'), [2, 112]), ), 3)
output = relay.Tuple([call_4470,call_4475,const_4476,call_4487,const_4488,const_4489,const_4490,])
output2 = relay.Tuple([call_4471,call_4477,const_4476,call_4491,const_4488,const_4489,const_4490,])
func_4500 = relay.Function([], output)
mod['func_4500'] = func_4500
mod = relay.transform.InferType()(mod)
output = func_4500()
func_4501 = relay.Function([], output)
mutated_mod['func_4501'] = func_4501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_4513 = relay.TupleGetItem(func_2257_call(), 0)
call_4514 = relay.TupleGetItem(func_2258_call(), 0)
func_2664_call = mod.get_global_var('func_2664')
func_2665_call = mutated_mod.get_global_var('func_2665')
call_4522 = relay.TupleGetItem(func_2664_call(), 0)
call_4523 = relay.TupleGetItem(func_2665_call(), 0)
output = relay.Tuple([call_4513,call_4522,])
output2 = relay.Tuple([call_4514,call_4523,])
func_4525 = relay.Function([], output)
mod['func_4525'] = func_4525
mod = relay.transform.InferType()(mod)
output = func_4525()
func_4526 = relay.Function([], output)
mutated_mod['func_4526'] = func_4526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4563 = relay.var("var_4563", dtype = "uint16", shape = ())#candidate|4563|()|var|uint16
var_4564 = relay.var("var_4564", dtype = "uint16", shape = (3, 15, 2))#candidate|4564|(3, 15, 2)|var|uint16
bop_4565 = relay.bitwise_xor(var_4563.astype('uint16'), var_4564.astype('uint16')) # shape=(3, 15, 2)
output = bop_4565
output2 = bop_4565
func_4570 = relay.Function([var_4563,var_4564,], output)
mod['func_4570'] = func_4570
mod = relay.transform.InferType()(mod)
var_4571 = relay.var("var_4571", dtype = "uint16", shape = ())#candidate|4571|()|var|uint16
var_4572 = relay.var("var_4572", dtype = "uint16", shape = (3, 15, 2))#candidate|4572|(3, 15, 2)|var|uint16
output = func_4570(var_4571,var_4572,)
func_4573 = relay.Function([var_4571,var_4572,], output)
mutated_mod['func_4573'] = func_4573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2139_call = mod.get_global_var('func_2139')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_4577 = func_2139_call()
call_4578 = func_2139_call()
func_845_call = mod.get_global_var('func_845')
func_847_call = mutated_mod.get_global_var('func_847')
var_4583 = relay.var("var_4583", dtype = "float32", shape = (429, 2))#candidate|4583|(429, 2)|var|float32
call_4582 = relay.TupleGetItem(func_845_call(relay.reshape(var_4583.astype('float32'), [11, 6, 13])), 0)
call_4584 = relay.TupleGetItem(func_847_call(relay.reshape(var_4583.astype('float32'), [11, 6, 13])), 0)
func_3884_call = mod.get_global_var('func_3884')
func_3886_call = mutated_mod.get_global_var('func_3886')
call_4585 = func_3884_call()
call_4586 = func_3884_call()
output = relay.Tuple([call_4577,call_4582,var_4583,call_4585,])
output2 = relay.Tuple([call_4578,call_4584,var_4583,call_4586,])
func_4588 = relay.Function([var_4583,], output)
mod['func_4588'] = func_4588
mod = relay.transform.InferType()(mod)
mutated_mod['func_4588'] = func_4588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4589 = relay.var("var_4589", dtype = "float32", shape = (429, 2))#candidate|4589|(429, 2)|var|float32
func_4588_call = mutated_mod.get_global_var('func_4588')
call_4590 = func_4588_call(var_4589)
output = call_4590
func_4591 = relay.Function([var_4589], output)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2139_call = mod.get_global_var('func_2139')
func_2141_call = mutated_mod.get_global_var('func_2141')
call_4595 = func_2139_call()
call_4596 = func_2139_call()
output = relay.Tuple([call_4595,])
output2 = relay.Tuple([call_4596,])
func_4603 = relay.Function([], output)
mod['func_4603'] = func_4603
mod = relay.transform.InferType()(mod)
output = func_4603()
func_4604 = relay.Function([], output)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_4634 = func_1560_call()
call_4635 = func_1560_call()
var_4644 = relay.var("var_4644", dtype = "float64", shape = (5, 14, 12))#candidate|4644|(5, 14, 12)|var|float64
bop_4645 = relay.bitwise_xor(call_4634.astype('uint16'), var_4644.astype('uint16')) # shape=(5, 14, 12)
bop_4648 = relay.bitwise_xor(call_4635.astype('uint16'), var_4644.astype('uint16')) # shape=(5, 14, 12)
bop_4649 = relay.bitwise_and(call_4634.astype('uint16'), var_4644.astype('uint16')) # shape=(5, 14, 12)
bop_4652 = relay.bitwise_and(call_4635.astype('uint16'), var_4644.astype('uint16')) # shape=(5, 14, 12)
output = relay.Tuple([bop_4645,bop_4649,])
output2 = relay.Tuple([bop_4648,bop_4652,])
func_4653 = relay.Function([var_4644,], output)
mod['func_4653'] = func_4653
mod = relay.transform.InferType()(mod)
mutated_mod['func_4653'] = func_4653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4654 = relay.var("var_4654", dtype = "float64", shape = (5, 14, 12))#candidate|4654|(5, 14, 12)|var|float64
func_4653_call = mutated_mod.get_global_var('func_4653')
call_4655 = func_4653_call(var_4654)
output = call_4655
func_4656 = relay.Function([var_4654], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4658 = relay.var("var_4658", dtype = "float32", shape = (11, 6, 16))#candidate|4658|(11, 6, 16)|var|float32
uop_4659 = relay.sigmoid(var_4658.astype('float32')) # shape=(11, 6, 16)
uop_4669 = relay.asinh(var_4658.astype('float32')) # shape=(11, 6, 16)
func_2943_call = mod.get_global_var('func_2943')
func_2945_call = mutated_mod.get_global_var('func_2945')
call_4672 = func_2943_call()
call_4673 = func_2943_call()
func_4190_call = mod.get_global_var('func_4190')
func_4191_call = mutated_mod.get_global_var('func_4191')
call_4675 = func_4190_call()
call_4676 = func_4190_call()
uop_4677 = relay.cosh(uop_4669.astype('float64')) # shape=(11, 6, 16)
func_2225_call = mod.get_global_var('func_2225')
func_2227_call = mutated_mod.get_global_var('func_2227')
call_4680 = func_2225_call()
call_4681 = func_2225_call()
const_4686 = relay.const([[[-6.390172,6.415487,0.006089,8.677228,-0.872809,4.973450,2.778761,8.585618,3.813762,-7.885047,-1.360519,-5.354040,-8.829105,8.317175,1.521115,8.731779],[-5.860954,4.006351,6.231205,-1.624801,-0.393356,-1.662104,4.890228,5.263613,-1.423616,-6.774404,1.490589,-2.708922,-1.091881,0.991148,-0.238385,8.564496],[6.965418,-4.787038,-3.860429,-6.698838,-4.769884,-8.944931,-8.626946,8.227617,0.067798,4.175987,-1.344795,-1.095297,0.391379,-2.897899,3.291056,-2.064738],[7.885444,9.134060,-5.776767,-6.523909,-8.823822,-5.037081,-8.749419,3.766496,8.443236,-0.843395,0.304894,-2.957819,-2.107916,-9.022514,-2.315836,-4.691173],[-1.556912,0.350152,9.190120,3.120710,-6.402735,-7.704190,8.700001,5.719317,-5.635292,-8.760871,-8.707875,1.901208,-1.647066,-6.227388,-6.708620,-9.531233],[-7.531989,4.193022,4.367124,-5.703551,-8.092516,-2.281113,-7.482681,-7.105463,1.764882,-5.852884,4.103432,1.687125,-6.568412,0.761158,-7.435503,0.219509]],[[8.784288,5.279814,6.627818,8.150195,-6.747408,-6.297492,3.696527,-4.639609,0.222218,-3.991476,-7.594006,-9.992369,-2.095294,8.496726,8.878648,6.084482],[-8.967847,3.824363,-8.471712,1.914131,-1.509280,-7.770727,6.621278,3.224002,6.591790,6.353880,9.560928,-7.364709,9.791988,-5.636640,-5.853573,-4.165410],[-6.653286,0.211066,-9.049439,-9.229820,-7.219328,-7.293808,8.059299,-0.996928,6.202973,-1.239727,-3.808238,-3.571058,-4.507333,-3.598990,4.770872,5.731951],[4.771242,-4.112573,-3.231265,-9.406883,0.772358,-9.967525,-6.926769,-3.219815,-9.033217,-4.432295,2.977684,8.688721,-7.343080,6.436162,-4.388795,6.363424],[7.447720,1.203221,-4.000248,-6.057469,-4.712932,-2.287557,5.028128,-4.113320,7.829191,-5.698291,-9.917945,4.889948,-8.884155,-5.051742,2.514701,-6.086268],[8.903423,-0.057606,3.469148,-7.087811,4.151592,5.414294,1.969552,7.219278,-4.037814,1.589270,4.271072,7.073842,4.270955,-7.118547,-5.986713,8.853352]],[[-9.319328,1.454126,-9.979787,9.981076,9.925621,7.576761,-4.835152,6.201907,-4.551041,8.349658,6.397899,5.504828,-3.537877,-9.158171,-6.168809,3.883872],[4.027639,0.587894,-4.213859,-2.072980,7.740698,-9.701189,-7.544929,-0.271830,-7.275639,-4.090488,3.584606,1.168932,0.531584,-7.230320,2.039867,-8.279327],[-6.725424,5.081771,-6.649089,-0.913341,5.510340,5.061525,7.792131,-5.025600,-0.573847,9.332072,9.052610,5.191358,-0.900063,-1.438462,4.935604,2.122066],[-0.057580,-3.865788,-2.249760,-7.611968,4.494754,1.823454,-9.784229,4.054763,-7.139577,-8.123974,6.697753,-5.778090,4.928449,4.154702,1.668918,-7.112289],[4.098184,-5.680345,-0.110803,6.019728,-9.790599,-5.151854,8.968756,1.257397,-3.351054,7.946821,-7.105129,-0.438338,-9.354343,-0.479976,-7.453309,-4.346317],[-4.188408,2.196438,0.767627,-8.300535,7.998384,-0.217337,-9.477678,-9.729046,1.600555,-9.226890,4.050214,6.683664,5.624639,5.925370,9.407219,9.025055]],[[-1.194022,-2.338821,-5.271249,2.160245,9.258028,-6.059615,-9.209075,-1.462837,-6.335692,1.293587,0.578309,5.077266,-3.054604,-4.149709,-0.552477,8.770819],[-0.481737,9.105116,1.551386,-5.494460,-0.339673,-9.813429,4.457933,8.985215,-1.913214,4.711656,7.514003,-2.354363,7.821755,6.684269,-2.175769,-3.768993],[-2.782316,3.875408,2.533231,-7.644102,-3.014423,-2.129813,-0.831838,8.939103,-1.224972,-6.602394,-6.938651,7.600290,-1.465932,6.120992,-6.447288,1.475703],[1.837106,-4.259645,4.024416,5.857114,5.170460,1.371426,5.588621,-3.520106,-3.132116,5.788798,3.579740,-1.363377,-3.498245,0.265129,-1.194776,8.135464],[1.236627,-6.719154,7.551788,0.346846,6.020733,-4.952932,7.930200,-5.761894,4.897296,-7.356542,-0.494659,-9.668865,7.509633,7.307846,2.310881,7.269872],[-4.993341,5.885625,5.798759,8.007268,3.773297,9.668077,-2.516331,-2.198504,-0.952036,1.458089,-7.414439,2.596956,2.163777,9.987201,4.496147,2.990690]],[[-4.530755,6.781170,4.874647,-2.494555,-9.857591,-7.163955,6.007840,1.996993,1.968305,-6.199719,-6.733221,1.440253,8.005516,-5.716052,-0.999865,-5.483308],[-6.166910,-1.490129,-6.531677,2.663409,5.638168,-6.393443,-6.428488,-8.916191,-4.806194,7.396984,-3.191347,-1.056165,5.831594,-4.636915,-1.168903,-1.403988],[3.641908,4.145576,7.791000,-3.899185,-0.195558,9.308477,-4.369998,-4.977837,6.954860,-2.457474,8.632620,3.187381,4.151886,-5.720715,-6.729303,2.219794],[0.816003,-8.890834,2.974345,4.354076,9.837164,-1.446270,-3.278531,-8.585333,6.217313,1.091356,8.872585,7.979159,9.667148,-8.361749,6.987754,1.706252],[-3.002188,2.871036,-2.948119,0.324380,-1.249454,-2.243306,8.283167,-7.755176,0.803115,4.461519,-5.120207,4.833832,-6.872202,1.905580,2.211759,-4.026330],[-1.407100,3.302397,7.604609,-3.341123,4.092627,-0.018704,9.110570,4.531892,8.575005,8.536783,8.301506,8.907327,8.905475,6.480937,4.832898,-4.664280]],[[-7.003676,-8.540961,1.643007,1.745071,2.292187,1.071651,-6.544556,8.048370,6.441941,9.100014,-7.756734,-1.336202,3.197327,-5.937746,9.156233,0.368336],[6.220504,0.214591,-3.309506,8.823222,9.590857,9.662892,2.761506,9.536249,2.943370,4.151572,4.679250,1.265574,-6.657800,4.620501,0.063467,3.763762],[-1.790596,0.572553,2.598623,9.453106,2.213537,-0.120399,7.742231,4.676686,-8.099072,-5.785240,-8.169793,-6.459564,-0.673816,-7.127046,-4.519873,-0.665636],[6.150159,-3.250335,-6.786467,1.284271,-2.529066,-0.987977,8.322338,-9.360974,-8.138461,1.877497,9.652696,1.722287,9.084384,3.540731,8.193495,-4.574720],[4.481098,7.343880,-4.161482,3.234472,-4.986420,5.642606,5.450868,4.473280,-6.205247,-8.217537,2.163114,8.146541,7.718015,-8.814197,-1.880732,8.812571],[7.276952,1.808603,3.594274,-6.119536,-3.273306,8.157186,-7.267112,-6.252374,8.883220,-5.426028,-6.950161,9.283559,-2.476601,0.591080,3.878231,-6.237862]],[[3.471102,-1.958952,-7.795600,0.403339,-2.097167,-9.100666,0.641667,-4.353897,0.573324,0.210986,-3.947793,3.473821,9.603178,-6.394207,-7.983091,1.267222],[-6.204240,-8.403748,0.291524,-6.972437,6.770959,-0.463183,6.513476,7.795047,9.557222,-6.729457,-9.928492,-1.604875,-9.470858,-2.710786,7.782964,2.058767],[7.266471,-6.695219,6.351648,0.368770,6.050684,6.065367,-6.316760,2.159612,-3.112375,6.188594,3.936808,-8.100158,-0.384112,-4.941534,-3.333595,-6.913407],[-7.220135,-1.429219,2.269585,-0.895502,3.701082,4.135242,-4.110689,4.636440,-2.801757,6.580423,-0.086010,-6.913241,-4.950935,-0.203377,-0.105342,7.342081],[5.363566,-9.488737,1.293538,1.360508,-7.917077,-8.292789,0.509174,7.475517,-1.158074,-9.721483,-7.920446,-4.034073,8.453813,-9.130957,5.496495,-7.957528],[5.616500,8.155808,2.380073,-2.052964,5.837037,3.494131,-8.412104,-6.693422,2.829550,-6.080981,1.263060,6.508125,7.030317,-2.381164,6.912948,-8.824956]],[[2.744727,8.884293,-9.334340,3.714268,-5.395530,9.087107,9.195200,0.500762,-1.687711,9.466357,-9.318136,-8.856937,-2.271628,-3.387497,-8.250823,-5.809730],[-0.852748,-8.099549,1.402716,-0.861863,-4.968751,3.980196,-7.084206,0.433103,-0.927450,-0.815510,4.904283,-1.388544,-1.606775,5.940194,6.618651,-4.580309],[7.276649,5.387977,-7.281358,-4.228318,8.914075,3.222824,-9.166137,-0.286421,8.014969,-2.476586,1.521969,-6.176967,9.352053,-7.405173,8.228168,1.426202],[-3.374158,-9.105508,-8.261569,7.077381,-9.283823,8.217467,1.844910,6.972527,4.395057,3.418502,-0.995035,-4.572339,0.221710,1.815728,0.787442,8.913736],[2.456895,5.226862,-8.604434,5.866005,0.029900,-7.885305,-7.039993,2.429544,5.008426,-5.914270,-6.071267,9.746882,-7.724487,-1.377802,1.679076,5.801115],[6.143166,1.446392,4.123580,-7.950231,9.945770,-7.387589,-2.794358,4.747061,-3.821954,-1.570737,-8.316618,7.732106,-0.012543,6.202580,8.632087,-7.486006]],[[2.901603,0.444728,-5.052258,8.451396,-9.966580,0.433679,9.238050,-6.172681,-5.836487,-6.434901,-0.208251,2.527867,4.527248,0.016054,0.868057,-8.406599],[8.201499,-3.779003,5.289304,4.716717,9.537884,6.659021,-9.430047,-7.949527,-7.467042,2.122930,-7.232091,1.123655,9.684954,0.877637,-1.525971,2.453684],[8.824818,5.138124,4.443441,-3.593524,7.365761,9.961028,7.193873,-5.326515,-1.177452,-0.615514,6.329686,1.973411,-5.536570,3.051344,-5.668767,-6.029216],[-4.550812,-4.897874,2.893478,-5.204001,-6.525041,-5.283260,-1.325649,2.086350,-2.857564,3.120416,3.577562,0.456675,1.706219,-4.433123,0.510435,3.613952],[-2.908398,-1.782453,-4.729450,-1.850942,-2.781500,-4.540487,-6.937737,-6.430875,-7.999118,-8.686708,-6.986434,8.355744,-9.010982,5.587620,2.822491,-4.815610],[-3.825401,4.824751,4.458614,-2.720745,-8.625381,-7.579233,-3.607766,6.566962,3.292454,1.670340,5.733080,4.622064,-7.917278,-6.000671,-6.550612,-2.021769]],[[1.283726,1.453506,5.483226,-8.939876,7.768874,-9.263951,6.768622,-9.651147,7.601889,-7.904251,-4.207888,2.894864,-3.975887,-1.871506,-8.250453,-0.748614],[-6.979247,-6.841809,9.700771,9.942290,-3.764288,-3.299570,-7.283563,-3.495703,-5.864042,-2.104334,-2.994668,-3.925072,7.324599,7.560015,6.607125,0.874777],[-0.142030,3.037958,3.055421,-0.051241,6.393232,5.624008,0.059210,2.177703,7.635841,-6.341021,9.041035,-3.933163,-7.169090,-7.586046,5.137836,1.290125],[-4.806726,3.621333,-7.649121,0.397506,3.215984,4.240588,-6.134541,-9.377823,-2.038185,4.121327,4.983835,4.880776,-5.776306,5.265192,6.295969,9.290657],[-9.009837,1.630500,-5.687857,-8.738755,-8.639312,-4.914293,-7.072655,-2.038458,0.024221,3.547657,1.256397,-4.959695,-1.005210,-9.219969,8.070069,1.631030],[-1.243429,-7.696376,0.828574,-6.272483,-9.855575,-0.329781,-9.571012,9.951226,8.269761,-7.234489,5.434068,-8.702838,4.863695,-3.735204,-0.354716,-7.074138]],[[-4.511637,0.704887,2.517686,8.229476,-1.154716,-7.216407,-6.175038,-2.762395,-5.923239,1.773743,-6.724867,-4.925939,-3.802885,-4.761050,-2.192841,7.016244],[1.088383,7.938400,5.071844,-5.476637,-9.955583,-7.553185,-3.327621,-0.521918,0.705116,9.313512,2.696184,9.983106,-9.695938,-5.708586,-1.088272,2.995869],[-6.269404,-8.088752,-5.030759,8.874549,-9.437769,1.352346,2.069226,2.165201,3.645456,-8.145833,-5.821385,-9.277097,1.656105,-6.664543,7.210708,5.246517],[-5.749634,4.947630,-2.961630,6.375707,-2.628034,9.052770,0.775495,-0.871574,3.872989,6.943941,3.204611,-0.378205,7.561975,-4.982620,1.723760,-4.880851],[-7.643007,-6.709814,5.181657,9.985747,-5.040635,1.380330,3.249255,2.035732,-8.530518,3.823285,-0.689838,-0.956885,-0.202400,-6.304582,-2.077044,3.159082],[-0.155902,7.427260,1.950740,3.135753,2.291106,2.922818,8.047173,-3.248897,-9.127779,5.046340,0.908510,-5.330473,-3.475784,5.427285,6.210577,3.649717]]], dtype = "float64")#candidate|4686|(11, 6, 16)|const|float64
bop_4687 = relay.floor_mod(uop_4677.astype('float64'), relay.reshape(const_4686.astype('float64'), relay.shape_of(uop_4677))) # shape=(11, 6, 16)
bop_4692 = relay.maximum(uop_4677.astype('uint32'), relay.reshape(uop_4659.astype('uint32'), relay.shape_of(uop_4677))) # shape=(11, 6, 16)
func_3436_call = mod.get_global_var('func_3436')
func_3439_call = mutated_mod.get_global_var('func_3439')
const_4702 = relay.const([[-7,3,-2,7,3,-5,-2,-10,1,9,-9,1,1,4,5,-3,2,2,8,-10,-1,-1,-8,-9,10,7,3,3,-3,-7,1,-1,-7,9,-4,-6,5,-7,-10,-2,-4,-2,-6,-5,9,9,4,-7,7,-6,-6,-6,-2,4,9,4,6,2,-8,4,9,-1,5,1,5,-3,-2,4,1,-5,5,-4,5,6,1,5,3,-10,-6,-2,-10,4,1,-5,-7,3,-10,-4,10,-10,-9,-10,1,-1,-3,-9,-8,-7,2,-3,4,2,10,-1,-7,-1,6,-9,3,5,4,1,9,-3,3,10,10,1,2,-2,3,-5,7,7,7,6,-7,5,8,-5,-4,8,8,7,3,9,3,6,-10,-9,-4,10,3,-5,3,-4,8,-2,3,-8,-9,4,-3,-1,3,1,7,9,5,5,-8,7,-10,2,-8,-2,7,10,-6,4,3,9,5,1,3,-9,4,-7,-7,-10,9,-4,9,8,-7,7,8,-9,1,4,-8,7,1,6,2,4,9,-2,4,-6,-2,10,-6,-2,8,2,-9,8,10,-9,-2,-6,3,-3,-7,9,-9,-9,5,-3,7,1,-4,-7,6,9,-9,1,4,-10,-3,2,5,7,3,6,-5,8,-7,4,-1,1,9,-3,-8,-5,1,2,-9,7,-9,3,-2,-3,-8,-4,3,8,-9,-6,1,7,7,7,8,-7,6,3,3,-7,-5,9,-8,10,5,6,7,9,3,-9,1,-8,-8,-7,6,-3,6,-1,-8,-2,8,2,-1,7,-8,-5,-2,7,1,-2,-9,10,-6,10,1,-6,1,-2,8,8,-8,6,5,2,9,-5,-9,-6,3,9,-9,2,-5,-6,-8,1,-7,-5,-2,8,-3,2,5,6,-5,5,2,-5,4,1,6,-7,1,-3,1,6,4,3,-7,1,-6,7,-4,6,-6,9,9,4,9,2,-1,-1,8,6,5,-9,-4,10,9,-7,2,-6,3,10,-9,10,-3,-7,-5,6,10,10,2,-1,7,-5,-3,4,2,6,8,-1,6,-2,1,-8,5,-7,1,5,8,-9,-10,-9,-8,-4,-2,5,-5,7,-7,8,-7,7,3,-6,-4,3,9,-8,6,1,-9,4,-5,9,-9,4,-10,-2,4,5,2,-2,8,7,-2,-2,7,4,-10,-4,7,-5,-10,1,4,10,4,6,-3,-7,-1,5,-8,2,1,-7,5,-5,-8,6,2,7,-1,-7,-7,-9,-5,8,5,-1,5,5,9,-4,-6,-6,-10,2]], dtype = "uint32")#candidate|4702|(1, 480)|const|uint32
const_4703 = relay.const([-4,-6,-3,-9,-2,9,1,1,-6,5,7,2,-10,6,4,3,-6,-4,8,7,10,-3,-4,8], dtype = "int64")#candidate|4703|(24,)|const|int64
call_4701 = relay.TupleGetItem(func_3436_call(relay.reshape(const_4702.astype('uint32'), [2, 240]), relay.reshape(const_4703.astype('int64'), [24,]), ), 1)
call_4704 = relay.TupleGetItem(func_3439_call(relay.reshape(const_4702.astype('uint32'), [2, 240]), relay.reshape(const_4703.astype('int64'), [24,]), ), 1)
output = relay.Tuple([call_4672,call_4675,call_4680,bop_4687,bop_4692,call_4701,const_4702,const_4703,])
output2 = relay.Tuple([call_4673,call_4676,call_4681,bop_4687,bop_4692,call_4704,const_4702,const_4703,])
func_4729 = relay.Function([var_4658,], output)
mod['func_4729'] = func_4729
mod = relay.transform.InferType()(mod)
var_4730 = relay.var("var_4730", dtype = "float32", shape = (11, 6, 16))#candidate|4730|(11, 6, 16)|var|float32
output = func_4729(var_4730)
func_4731 = relay.Function([var_4730], output)
mutated_mod['func_4731'] = func_4731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2416_call = mutated_mod.get_global_var('func_2416')
call_4790 = func_2414_call()
call_4791 = func_2414_call()
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
const_4803 = relay.const([9,1,6,-2,6,10,2,10,-1,-6,6,-10,-3,-8,-5,3,4,9,-9,-3,-4,9,-5,8,3,-8,7,3,-5,5,9,-1,1,5,2,-5,2,-4,2,-2,8,-3,2,-5,8,-4,-7,1,6,9,3,8,-9,-2,-6,7,8,7,5,-4,1,1,-4,5,10,10,8,-9,-10,-10,-9,8,-7,5,8,-7,9,4,-2,-1,-3,-8,-9,-9,-9,-5,4,-6,-10,-2,-4,7,9,-5,10,-3], dtype = "int8")#candidate|4803|(96,)|const|int8
var_4804 = relay.var("var_4804", dtype = "uint8", shape = (224,))#candidate|4804|(224,)|var|uint8
call_4802 = relay.TupleGetItem(func_2306_call(relay.reshape(const_4803.astype('int8'), [3, 8, 4]), relay.reshape(const_4803.astype('int8'), [3, 8, 4]), relay.reshape(var_4804.astype('uint8'), [224,]), ), 1)
call_4805 = relay.TupleGetItem(func_2310_call(relay.reshape(const_4803.astype('int8'), [3, 8, 4]), relay.reshape(const_4803.astype('int8'), [3, 8, 4]), relay.reshape(var_4804.astype('uint8'), [224,]), ), 1)
func_4246_call = mod.get_global_var('func_4246')
func_4247_call = mutated_mod.get_global_var('func_4247')
call_4813 = func_4246_call()
call_4814 = func_4246_call()
var_4820 = relay.var("var_4820", dtype = "float64", shape = (12, 15, 11))#candidate|4820|(12, 15, 11)|var|float64
bop_4821 = relay.bitwise_and(call_4802.astype('int16'), var_4820.astype('int16')) # shape=(12, 15, 11)
bop_4824 = relay.bitwise_and(call_4805.astype('int16'), var_4820.astype('int16')) # shape=(12, 15, 11)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_4836 = func_3266_call()
call_4837 = func_3266_call()
func_4420_call = mod.get_global_var('func_4420')
func_4421_call = mutated_mod.get_global_var('func_4421')
call_4847 = relay.TupleGetItem(func_4420_call(), 0)
call_4848 = relay.TupleGetItem(func_4421_call(), 0)
func_4603_call = mod.get_global_var('func_4603')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_4857 = relay.TupleGetItem(func_4603_call(), 0)
call_4858 = relay.TupleGetItem(func_4604_call(), 0)
output = relay.Tuple([call_4790,const_4803,var_4804,call_4813,bop_4821,call_4836,call_4847,call_4857,])
output2 = relay.Tuple([call_4791,const_4803,var_4804,call_4814,bop_4824,call_4837,call_4848,call_4858,])
func_4866 = relay.Function([var_4804,var_4820,], output)
mod['func_4866'] = func_4866
mod = relay.transform.InferType()(mod)
mutated_mod['func_4866'] = func_4866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4866_call = mutated_mod.get_global_var('func_4866')
var_4868 = relay.var("var_4868", dtype = "uint8", shape = (224,))#candidate|4868|(224,)|var|uint8
var_4869 = relay.var("var_4869", dtype = "float64", shape = (12, 15, 11))#candidate|4869|(12, 15, 11)|var|float64
call_4867 = func_4866_call(var_4868,var_4869,)
output = call_4867
func_4870 = relay.Function([var_4868,var_4869,], output)
mutated_mod['func_4870'] = func_4870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2664_call = mod.get_global_var('func_2664')
func_2665_call = mutated_mod.get_global_var('func_2665')
call_4879 = relay.TupleGetItem(func_2664_call(), 0)
call_4880 = relay.TupleGetItem(func_2665_call(), 0)
func_4082_call = mod.get_global_var('func_4082')
func_4084_call = mutated_mod.get_global_var('func_4084')
const_4891 = relay.const([1.630732,-6.750423,6.254812,6.872642,-9.259644,1.405334,4.602631,-4.536460,-1.118378,2.254369,-7.170657,1.108160,-6.996866,2.429274,-5.915249,1.049258,-6.844477,-9.079453,-6.948439,-8.424597,-9.512400,5.237597,7.782001,9.547178,0.562569,-9.593625,-9.844034,4.043821,6.621117,-8.002842,2.030621,4.189158,-1.066624,3.461120,8.617784,1.188261,4.639634,-9.937358,-4.218011,-4.400621,-4.287343,-3.837564,6.287343,9.481422,-7.728558,-9.349000,-1.497739,-8.162783,3.767767,7.611657,8.947796,-1.650752,2.275663,8.393827,-1.806976,-7.817010,-2.750601,0.507323,-1.859888,-7.819278,1.116336,-8.839308,7.621850], dtype = "float64")#candidate|4891|(63,)|const|float64
call_4890 = relay.TupleGetItem(func_4082_call(relay.reshape(const_4891.astype('float64'), [63,])), 0)
call_4892 = relay.TupleGetItem(func_4084_call(relay.reshape(const_4891.astype('float64'), [63,])), 0)
func_100_call = mod.get_global_var('func_100')
func_102_call = mutated_mod.get_global_var('func_102')
const_4907 = relay.const([-1,-6,-2,-10,2,-7,-2,-4,6,-6,-9,6,-2,-4,-1,3,-7,4,3,-10,-5,-9,-8,4], dtype = "int64")#candidate|4907|(24,)|const|int64
call_4906 = relay.TupleGetItem(func_100_call(relay.reshape(const_4907.astype('int64'), [2, 12, 1])), 1)
call_4908 = relay.TupleGetItem(func_102_call(relay.reshape(const_4907.astype('int64'), [2, 12, 1])), 1)
uop_4921 = relay.sin(const_4907.astype('float64')) # shape=(24,)
func_4570_call = mod.get_global_var('func_4570')
func_4573_call = mutated_mod.get_global_var('func_4573')
const_4926 = relay.const(-7, dtype = "uint16")#candidate|4926|()|const|uint16
var_4927 = relay.var("var_4927", dtype = "uint16", shape = (90,))#candidate|4927|(90,)|var|uint16
call_4925 = func_4570_call(relay.reshape(const_4926.astype('uint16'), []), relay.reshape(var_4927.astype('uint16'), [3, 15, 2]), )
call_4928 = func_4570_call(relay.reshape(const_4926.astype('uint16'), []), relay.reshape(var_4927.astype('uint16'), [3, 15, 2]), )
output = relay.Tuple([call_4879,call_4890,const_4891,call_4906,uop_4921,call_4925,const_4926,var_4927,])
output2 = relay.Tuple([call_4880,call_4892,const_4891,call_4908,uop_4921,call_4928,const_4926,var_4927,])
func_4933 = relay.Function([var_4927,], output)
mod['func_4933'] = func_4933
mod = relay.transform.InferType()(mod)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4934 = relay.var("var_4934", dtype = "uint16", shape = (90,))#candidate|4934|(90,)|var|uint16
func_4933_call = mutated_mod.get_global_var('func_4933')
call_4935 = func_4933_call(var_4934)
output = call_4935
func_4936 = relay.Function([var_4934], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1741_call = mod.get_global_var('func_1741')
func_1742_call = mutated_mod.get_global_var('func_1742')
call_4971 = func_1741_call()
call_4972 = func_1741_call()
output = relay.Tuple([call_4971,])
output2 = relay.Tuple([call_4972,])
func_4980 = relay.Function([], output)
mod['func_4980'] = func_4980
mod = relay.transform.InferType()(mod)
output = func_4980()
func_4981 = relay.Function([], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2257_call = mod.get_global_var('func_2257')
func_2258_call = mutated_mod.get_global_var('func_2258')
call_5063 = relay.TupleGetItem(func_2257_call(), 0)
call_5064 = relay.TupleGetItem(func_2258_call(), 0)
const_5067 = relay.const([[[-3.345966,-7.178339,-7.910086,2.446635,-8.126559,-5.959906,2.308340,7.637793,4.952288,-9.759842,-4.069994,4.867430],[3.334000,-8.543754,-2.694928,-3.738850,-9.778598,-9.678005,-4.889357,4.097765,-8.121482,8.620287,-5.788481,-1.507707],[5.893295,-5.528852,-3.760209,-6.364838,7.438731,-6.521103,-7.586529,3.212341,0.684494,6.268198,3.792309,0.897025],[-5.071512,9.546130,2.870165,5.091833,7.622479,9.771970,7.079860,9.081666,-7.847327,-9.244657,-1.856390,-1.589110],[-3.995205,5.216239,-6.608452,1.438324,9.157340,5.776667,-6.201882,-9.389781,-0.504650,-9.944521,7.589033,8.236332],[8.649538,-8.414122,9.822840,-7.434177,-5.271592,5.724390,-0.109148,4.642318,-8.830655,-9.033995,8.998158,-7.306766],[-0.408365,6.628516,-6.581497,-7.012787,8.924473,8.283554,5.840839,-7.986763,2.512173,-6.579293,-8.134556,2.187214],[-2.976501,-3.760687,-2.750282,-1.922411,2.328317,-4.434211,-4.484977,0.141697,1.956696,-4.026816,-0.085961,-2.804692],[-7.445237,6.869059,1.786960,3.916696,5.025232,0.988885,-9.266616,-4.652136,-6.184665,6.169204,5.472759,-3.830802],[9.273911,0.212082,1.463046,3.272743,-6.756537,-3.483733,-3.712631,-7.215158,6.356576,0.300056,5.354386,7.023393],[4.937053,-6.118147,-2.790777,7.669476,8.142084,4.407468,5.798991,-3.255521,-8.134129,4.181698,9.181007,-8.219360],[4.103029,-7.602104,6.108725,-8.399727,1.091632,-0.308248,8.118804,1.956781,-2.401968,9.274213,-1.522844,-8.901965],[4.254761,8.592115,4.061073,5.079406,7.096423,4.862444,-8.614208,9.316285,-2.477309,6.251595,-1.488025,-6.868635],[4.457237,-0.738768,7.814522,-3.533687,-1.486444,3.242624,0.164037,-1.763657,5.306987,-5.005326,-3.034351,7.822497]],[[3.002099,-3.213101,8.822447,-7.958546,4.702112,-4.776837,8.269999,5.814574,-0.803153,7.405566,9.729959,0.378982],[4.874962,-7.780130,1.098353,-1.261638,-8.719118,-1.167267,8.643918,9.594380,6.745100,-5.396471,-1.792140,-6.088856],[-9.080834,7.396761,-0.002962,-8.839612,-9.899681,5.194923,-5.472089,-8.927719,-9.904284,8.217871,5.932709,-3.640221],[-9.335417,-6.293194,-2.743161,-2.871111,-5.088368,8.472857,-3.573537,5.787700,-4.847399,-4.740561,-3.032138,-8.445263],[-8.850053,2.603145,-0.153980,-0.405404,-4.394844,4.030284,-9.420148,7.452201,1.736754,2.135034,6.426288,-4.263015],[0.243103,-0.484834,6.603152,-1.322128,-0.463604,-2.830789,-7.564361,-6.884992,5.459930,6.594512,6.672843,-5.551610],[7.824565,-2.364659,-6.212466,3.481020,8.380427,-7.393453,-9.457104,-3.459719,-3.063798,5.182422,-4.547059,0.907078],[9.349105,7.214366,5.841728,-0.859494,7.433836,5.350314,9.158184,2.510063,1.740716,-5.175724,-0.140438,-0.686280],[1.338837,0.386708,3.384680,8.001885,-9.103338,1.141113,-1.382603,-9.826036,-4.110691,-6.253050,-0.988849,8.375643],[0.744622,3.079487,-5.122235,-5.218206,8.717708,4.784808,-6.185723,-2.086283,8.896140,-0.214694,2.304764,4.913380],[3.499670,0.488262,6.721558,1.963982,-3.119890,7.012262,-0.654527,-7.138222,2.339206,0.626388,-2.031785,-3.840943],[3.539159,-8.447343,-9.501822,7.772849,6.772872,2.466124,2.546083,5.351518,-1.605117,-9.522256,-7.119655,-8.679131],[1.693194,4.172448,1.747633,9.430626,-6.863452,9.498262,-1.873119,-6.455641,-1.193042,-3.443446,-6.591603,2.038664],[-0.494554,-8.687039,9.002911,0.833183,-0.399395,-7.312241,-2.333549,-7.200285,0.926421,7.319535,-5.048947,0.056719]]], dtype = "float32")#candidate|5067|(2, 14, 12)|const|float32
bop_5068 = relay.bitwise_and(call_5063.astype('int64'), relay.reshape(const_5067.astype('int64'), relay.shape_of(call_5063))) # shape=(2, 14, 12)
bop_5071 = relay.bitwise_and(call_5064.astype('int64'), relay.reshape(const_5067.astype('int64'), relay.shape_of(call_5064))) # shape=(2, 14, 12)
func_2209_call = mod.get_global_var('func_2209')
func_2211_call = mutated_mod.get_global_var('func_2211')
call_5086 = func_2209_call()
call_5087 = func_2209_call()
output = relay.Tuple([bop_5068,call_5086,])
output2 = relay.Tuple([bop_5071,call_5087,])
func_5105 = relay.Function([], output)
mod['func_5105'] = func_5105
mod = relay.transform.InferType()(mod)
mutated_mod['func_5105'] = func_5105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5105_call = mutated_mod.get_global_var('func_5105')
call_5106 = func_5105_call()
output = call_5106
func_5107 = relay.Function([], output)
mutated_mod['func_5107'] = func_5107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3194_call = mod.get_global_var('func_3194')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_5155 = relay.TupleGetItem(func_3194_call(), 0)
call_5156 = relay.TupleGetItem(func_3195_call(), 0)
var_5170 = relay.var("var_5170", dtype = "float32", shape = (2, 14, 12))#candidate|5170|(2, 14, 12)|var|float32
bop_5171 = relay.multiply(call_5155.astype('float64'), relay.reshape(var_5170.astype('float64'), relay.shape_of(call_5155))) # shape=(2, 14, 12)
bop_5174 = relay.multiply(call_5156.astype('float64'), relay.reshape(var_5170.astype('float64'), relay.shape_of(call_5156))) # shape=(2, 14, 12)
func_3497_call = mod.get_global_var('func_3497')
func_3500_call = mutated_mod.get_global_var('func_3500')
const_5180 = relay.const([[-5,-4,-8,8,7,1,-3,10,2,9,-1,-9,10,5,-5,-6,-7,9,-1,-5,3,10,8,9,7,3,4,-9,5,-2,-6,-3,7,10,-10,-6,1,-8,-5,-1,6,-2,-8,-5,-6,3,5,7,-9,10,2,-10,-2,-1,5,3,6,4,-6,-6,5,-6,-9,-2,10,8,10,2,-8,10,5,-7,-9,-6,1,1,5,-6],[-10,3,-2,9,-10,-5,6,-2,-1,3,-3,6,2,9,5,-2,-6,3,5,-2,-5,-3,-2,-3,7,2,-6,1,-6,-5,-6,3,1,1,-2,-3,8,9,3,3,-9,-8,-3,-2,1,-9,-6,10,10,5,2,8,-4,-2,-8,-6,1,-1,5,3,-3,-5,-5,-6,4,-7,-9,-8,2,1,6,7,5,10,-3,8,-7,5],[-5,5,2,10,6,6,10,8,-9,1,-4,4,8,-3,2,-5,7,-10,3,-10,-10,7,-6,-5,-9,-8,1,-10,3,-4,-9,4,10,-5,-4,5,3,-1,6,-3,4,10,3,-4,3,-1,-6,10,-7,-2,2,-4,-9,4,-2,-2,10,2,2,-10,-2,9,6,-6,4,5,-3,-1,-5,-8,1,3,-2,5,-9,-10,9,-8],[9,-1,2,-1,6,-9,-6,-8,-7,-8,-4,-4,1,-3,-5,7,-7,-1,4,-5,-3,-1,-3,5,8,10,8,4,-10,-10,-7,1,5,4,1,10,-6,-2,-8,9,-2,-7,-3,-2,7,7,10,2,7,5,-7,-3,-5,-2,-6,10,-9,8,9,4,3,4,9,-9,9,-6,8,-9,-6,8,1,-8,7,4,-8,-6,10,-2],[-3,5,4,8,1,-5,-8,9,-2,-2,4,9,-4,3,-2,-3,6,6,-9,4,-2,7,3,-3,-2,8,-9,-8,-9,-7,5,-5,-7,-3,-5,-6,-7,1,6,6,9,4,10,-2,-10,-1,8,6,-7,4,7,3,5,-3,-9,1,-3,-5,6,4,-6,-10,1,4,6,-3,9,6,-1,-7,8,-8,10,5,-1,-3,-4,-5],[-1,-4,-8,10,5,3,5,-6,-5,-3,10,-2,-7,-9,-8,-7,-5,7,-9,1,5,10,4,-2,-2,6,4,-2,3,-1,8,-1,8,6,-7,1,-1,-1,-1,-3,-7,-5,-7,2,-2,4,-3,-3,-4,-10,4,-2,-4,-1,7,8,-5,5,-3,3,-1,5,3,-5,-5,-10,8,-5,7,5,-1,8,-7,-7,1,6,-8,-6],[-7,2,7,10,-5,8,-2,-8,8,-7,10,-7,-4,2,6,-5,-10,6,8,-5,-2,5,-5,-6,-8,10,-9,-8,4,6,-8,2,7,-7,3,-8,-4,10,7,-4,1,2,3,-2,9,-6,1,7,7,5,-6,6,9,9,3,10,7,3,-9,8,5,5,3,3,5,-9,-2,-1,2,4,1,-9,-5,10,-9,4,-2,9],[-2,-5,-10,-8,-1,3,8,9,1,-2,10,2,8,-3,-6,6,-5,-5,-5,-9,-3,-8,-10,-4,6,-9,6,8,-7,4,5,1,1,7,8,-10,6,2,6,-9,10,1,-9,-1,9,-2,-7,6,-7,-2,7,-6,4,1,3,-4,-9,-10,1,-7,-9,7,-1,2,4,-7,-7,-5,10,-3,-7,-8,10,-5,9,3,2,-2],[1,-5,9,7,4,9,2,-8,8,5,2,-9,3,-9,-10,-10,-6,-7,8,4,-9,-5,-6,-8,-9,-10,-5,3,1,-3,-4,3,9,-6,-5,8,-5,5,-5,6,7,4,7,10,-9,8,-7,5,2,-2,2,-2,-4,-10,1,-3,-4,-10,6,8,4,-9,6,6,5,-4,9,-6,3,2,-4,2,-3,6,4,-5,9,-9],[9,-2,5,-3,-1,9,-7,-8,7,-6,6,-10,-7,1,10,-10,7,-5,-7,9,9,2,1,6,3,8,7,10,-4,9,-10,5,10,-2,-10,7,-10,-5,2,-9,-7,-2,7,-8,2,-7,8,-2,3,7,6,3,4,7,3,-1,-2,-5,-5,-2,-2,-1,-4,-1,8,2,-4,2,-3,4,-6,6,-7,9,-6,9,3,-10],[-5,-5,9,-9,-10,-2,1,-1,-2,4,-8,1,5,1,2,-6,2,-9,9,-5,10,-4,-5,7,1,-7,6,2,10,3,7,-8,-1,2,-7,-8,6,8,-6,1,8,-6,-7,-10,-6,-8,10,-1,-5,10,-2,10,8,-1,5,-4,9,-9,-10,3,2,8,9,3,-2,7,9,6,-7,6,1,7,9,8,5,-5,3,8],[-1,-8,-4,-1,-6,4,3,5,7,-4,8,-4,-3,9,-10,-2,10,8,-8,-6,-5,6,-10,2,3,-2,9,-3,6,-2,2,9,-3,3,5,4,2,8,2,-9,-7,7,8,-10,-3,1,6,7,-1,1,-2,6,8,7,-5,7,7,9,4,-8,-4,4,2,-1,2,9,-10,9,2,-10,-2,10,-10,3,-2,5,-3,-8],[-8,8,-5,-3,5,-3,-8,3,-1,-7,5,9,2,-5,-10,-10,6,-8,8,-3,3,-7,10,-1,6,-4,-10,8,4,9,-10,2,-8,4,2,-6,-7,6,-6,8,8,2,-4,2,-8,4,9,-2,6,2,7,-3,-4,2,7,-1,-4,5,-7,-8,7,3,-7,4,2,1,7,-2,2,-10,-3,-8,-7,-7,-7,9,6,-9],[-4,-4,10,-6,9,7,-1,4,9,3,2,-10,2,4,-1,10,-7,-4,10,-3,7,4,-8,-3,10,-5,-3,-1,6,4,-10,3,-1,-4,6,-1,9,2,-4,4,-9,6,6,1,-5,-7,1,10,-6,2,2,-6,1,-8,-1,8,-3,-5,2,-1,1,9,10,4,6,10,3,10,-2,-8,-3,6,-9,-7,7,7,7,-1],[-7,-5,-3,2,-10,10,1,6,4,-9,3,5,3,-7,10,-7,3,10,4,-1,-4,-6,-1,-8,6,-2,-3,-8,-9,-7,3,5,-4,3,9,-2,-7,10,3,-6,5,-8,5,7,9,4,-5,-9,8,-9,-7,9,-1,3,7,3,-7,4,-4,-5,-2,8,-10,8,-8,4,-8,-1,-4,-5,4,-6,-8,3,9,9,-1,-1],[-4,8,4,7,-6,2,-3,-2,-4,9,9,6,-4,-1,1,-5,-3,-7,4,10,4,-2,9,-5,-4,-7,-8,5,9,6,-10,-5,3,-9,-9,9,-10,-10,4,-4,-2,3,1,4,4,9,1,6,-9,-1,3,-4,10,6,1,-4,8,-3,-5,-10,-6,-2,7,3,4,-6,5,-2,4,-8,-7,-6,-10,-5,-5,-4,5,10],[-4,8,8,-7,-4,5,-8,-2,7,-9,6,-10,8,-6,9,-3,-10,3,6,10,-10,7,9,-2,-7,1,-4,8,6,2,-1,-10,-9,6,4,5,-10,1,-4,-6,-3,-8,-10,6,-10,3,7,-2,-10,-2,-6,-8,3,-8,2,10,2,2,-4,-2,-9,8,8,-4,10,-3,-5,3,-2,-7,-4,2,4,-2,2,-5,-6,-9],[-4,-5,9,1,10,-3,4,1,-4,-5,-6,-9,8,-9,10,1,1,8,-7,-5,2,1,6,3,-4,-2,-3,1,6,8,-8,-10,8,-10,-9,-1,-2,7,6,-10,8,3,3,-5,-3,-5,-5,-1,-2,-7,5,4,-10,-5,-10,-9,9,2,-5,10,-3,9,9,10,-1,4,4,-3,-8,-5,5,9,-5,5,7,7,10,7]], dtype = "int16")#candidate|5180|(18, 78)|const|int16
call_5179 = relay.TupleGetItem(func_3497_call(relay.reshape(const_5180.astype('int16'), [13, 12, 9]), relay.reshape(const_5180.astype('int16'), [13, 12, 9]), ), 0)
call_5181 = relay.TupleGetItem(func_3500_call(relay.reshape(const_5180.astype('int16'), [13, 12, 9]), relay.reshape(const_5180.astype('int16'), [13, 12, 9]), ), 0)
output = relay.Tuple([bop_5171,call_5179,const_5180,])
output2 = relay.Tuple([bop_5174,call_5181,const_5180,])
func_5194 = relay.Function([var_5170,], output)
mod['func_5194'] = func_5194
mod = relay.transform.InferType()(mod)
mutated_mod['func_5194'] = func_5194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5195 = relay.var("var_5195", dtype = "float32", shape = (2, 14, 12))#candidate|5195|(2, 14, 12)|var|float32
func_5194_call = mutated_mod.get_global_var('func_5194')
call_5196 = func_5194_call(var_5195)
output = call_5196
func_5197 = relay.Function([var_5195], output)
mutated_mod['func_5197'] = func_5197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3266_call = mod.get_global_var('func_3266')
func_3267_call = mutated_mod.get_global_var('func_3267')
call_5213 = func_3266_call()
call_5214 = func_3266_call()
var_5221 = relay.var("var_5221", dtype = "float32", shape = (2, 14, 12))#candidate|5221|(2, 14, 12)|var|float32
bop_5222 = relay.subtract(call_5213.astype('uint32'), relay.reshape(var_5221.astype('uint32'), relay.shape_of(call_5213))) # shape=(2, 14, 12)
bop_5225 = relay.subtract(call_5214.astype('uint32'), relay.reshape(var_5221.astype('uint32'), relay.shape_of(call_5214))) # shape=(2, 14, 12)
func_4729_call = mod.get_global_var('func_4729')
func_4731_call = mutated_mod.get_global_var('func_4731')
var_5231 = relay.var("var_5231", dtype = "float32", shape = (1056,))#candidate|5231|(1056,)|var|float32
call_5230 = relay.TupleGetItem(func_4729_call(relay.reshape(var_5231.astype('float32'), [11, 6, 16])), 3)
call_5232 = relay.TupleGetItem(func_4731_call(relay.reshape(var_5231.astype('float32'), [11, 6, 16])), 3)
bop_5233 = relay.greater(call_5230.astype('bool'), relay.reshape(var_5231.astype('bool'), relay.shape_of(call_5230))) # shape=(11, 6, 16)
bop_5236 = relay.greater(call_5232.astype('bool'), relay.reshape(var_5231.astype('bool'), relay.shape_of(call_5232))) # shape=(11, 6, 16)
func_633_call = mod.get_global_var('func_633')
func_635_call = mutated_mod.get_global_var('func_635')
const_5260 = relay.const([-5.499007,7.021555,-8.946468,-6.709987,-7.561598,-3.975613,-9.475774,-9.238766,-2.666298,1.222760,-5.289404,8.401010,-5.902420,-0.057682,3.969903,-9.014628,-3.312222,6.652529,-7.508512,4.165570,-3.128925,-4.767746,-6.327895,1.950911,0.321217,-3.398244,7.217929,1.437984,-8.174224,6.465902,5.930016,8.807383,0.520493,3.027839,6.902237,-1.067369,-9.134631,-9.296227,7.470768,1.499741,-7.930939,-9.768918,5.590336,-1.147915,4.845262,2.389427,8.517497,8.774559,-2.844352,-3.711763,2.393543,4.590567,2.448210,4.779147,4.291927,-7.738404,-6.839385,9.671903,-8.759428,1.794449,7.152058,-9.268164,-2.200594,-8.883319,-2.393660,-3.558096,0.171815,1.184640,7.357506,-3.811419,-7.244484,3.508799,5.209558,-5.768835,-0.160703,-7.232850,1.145810,-2.641255,-3.922544,-7.487476,3.162307,-6.792284,-8.596555,-8.382455,-1.850495,-2.530901,5.579736,7.350252,-5.764439,-6.694873,-8.522894,-6.927739,0.607693,9.938553,9.504310,9.347753,-9.553342,-3.834071,3.860327,-4.667325,6.801876,-8.336850,-8.175741,8.888208,-4.295871,9.825381,-1.912448,-1.640996,-6.717830,2.919251,6.680635,6.144135,5.188133,-8.092399,-3.429342,-5.406210,3.797920,-2.155205,3.522738,-7.496634,1.326178,-7.831799,9.620709,4.003923,-2.633537,-9.548046,2.208602,4.672825,8.675993,-9.158169,-5.013997,8.821967,2.993485,-2.576735,0.508680,-7.368410,-6.787443,7.727312,3.198768,-8.536835,5.094822,8.840170,-9.029145,8.939449,-4.537318,0.544341,7.681574,-1.875004,-0.425108,0.462288,3.579647,-1.005508,-9.021098,-1.626498,-4.391652,6.686533,8.054185,0.642330,6.019431,6.049797,-6.540605,-0.899451,5.601464,-0.952308,2.634470], dtype = "float64")#candidate|5260|(165,)|const|float64
call_5259 = func_633_call(relay.reshape(const_5260.astype('float64'), [1, 15, 11]))
call_5261 = func_633_call(relay.reshape(const_5260.astype('float64'), [1, 15, 11]))
output = relay.Tuple([bop_5222,bop_5233,call_5259,const_5260,])
output2 = relay.Tuple([bop_5225,bop_5236,call_5261,const_5260,])
func_5272 = relay.Function([var_5221,var_5231,], output)
mod['func_5272'] = func_5272
mod = relay.transform.InferType()(mod)
var_5273 = relay.var("var_5273", dtype = "float32", shape = (2, 14, 12))#candidate|5273|(2, 14, 12)|var|float32
var_5274 = relay.var("var_5274", dtype = "float32", shape = (1056,))#candidate|5274|(1056,)|var|float32
output = func_5272(var_5273,var_5274,)
func_5275 = relay.Function([var_5273,var_5274,], output)
mutated_mod['func_5275'] = func_5275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4284_call = mod.get_global_var('func_4284')
func_4285_call = mutated_mod.get_global_var('func_4285')
call_5340 = func_4284_call()
call_5341 = func_4284_call()
func_1285_call = mod.get_global_var('func_1285')
func_1288_call = mutated_mod.get_global_var('func_1288')
var_5352 = relay.var("var_5352", dtype = "float64", shape = (512,))#candidate|5352|(512,)|var|float64
call_5351 = relay.TupleGetItem(func_1285_call(relay.reshape(var_5352.astype('float64'), [16, 2, 16])), 0)
call_5353 = relay.TupleGetItem(func_1288_call(relay.reshape(var_5352.astype('float64'), [16, 2, 16])), 0)
output = relay.Tuple([call_5340,call_5351,var_5352,])
output2 = relay.Tuple([call_5341,call_5353,var_5352,])
func_5363 = relay.Function([var_5352,], output)
mod['func_5363'] = func_5363
mod = relay.transform.InferType()(mod)
mutated_mod['func_5363'] = func_5363
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5364 = relay.var("var_5364", dtype = "float64", shape = (512,))#candidate|5364|(512,)|var|float64
func_5363_call = mutated_mod.get_global_var('func_5363')
call_5365 = func_5363_call(var_5364)
output = call_5365
func_5366 = relay.Function([var_5364], output)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mod.get_global_var('func_2472')
func_2473_call = mutated_mod.get_global_var('func_2473')
call_5408 = func_2472_call()
call_5409 = func_2472_call()
uop_5418 = relay.cos(call_5408.astype('float32')) # shape=(2, 14, 12)
uop_5420 = relay.cos(call_5409.astype('float32')) # shape=(2, 14, 12)
output = uop_5418
output2 = uop_5420
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_509 = relay.var("var_509", dtype = "float64", shape = (11, 12, 14))#candidate|509|(11, 12, 14)|var|float64
const_510 = relay.const([[[-5.103407,7.492323,-4.724249,-6.626547,-3.846404,8.220305,-1.365143,5.791888,2.575108,-0.423598,-5.193809,-5.989859,-0.022510,7.931904],[5.012315,2.352436,-7.352425,9.316082,-4.534901,-6.483752,0.095696,-9.431853,2.222092,-5.752330,-9.073750,2.440367,-8.631904,7.893856],[-5.835421,-2.034446,5.735070,-7.800812,7.496708,-7.499327,3.059538,-8.450249,9.031533,-0.216751,6.998404,7.012051,7.685400,-9.828243],[-5.375994,9.563793,-2.324446,5.194473,2.907507,0.914164,7.489879,-3.787385,-3.256423,6.299324,4.147932,9.349606,-3.795595,9.117614],[3.389475,-7.805589,4.300570,-5.685090,7.888305,-1.926847,0.273080,3.146438,7.801841,0.220915,7.561649,1.695592,6.474038,1.994794],[-7.645609,4.592022,-3.183336,9.768232,1.541667,2.089399,0.169459,2.569043,1.693656,-7.877155,-8.834951,2.932853,-2.575219,7.177437],[9.102017,-1.556133,6.473132,1.263635,1.566356,9.028068,-9.917724,1.246132,-0.323615,7.649022,-2.191930,9.096595,3.002517,-6.236568],[3.293918,6.094497,-9.680107,-6.233351,-8.222371,2.108209,3.004258,-7.126588,5.125843,3.493082,3.179800,9.948434,-6.021514,-4.122631],[8.277188,-1.513150,-7.766535,2.047371,8.408580,-2.940496,8.654988,5.653672,6.616575,1.010233,0.630296,-8.849344,5.689603,-0.959858],[-8.762009,2.320704,6.802223,2.018419,-0.585644,-0.423431,-6.990294,4.871645,-1.819161,-9.955309,-6.758295,-9.746357,1.714245,-6.322660],[9.735122,-8.918620,-8.085790,3.675398,1.323354,9.886232,-6.548593,2.972727,6.254124,-1.270582,9.602634,5.381275,-5.695589,-1.289634],[-9.970681,-6.345508,1.252176,-4.884111,3.534775,-5.831515,-4.706893,-8.792249,6.538702,9.746841,-3.734425,4.066020,2.858371,1.854336]],[[-7.701938,5.771981,7.900128,-6.835078,-8.910550,-1.238953,2.792597,6.562135,-3.460834,-1.041915,3.255329,-7.071307,9.653793,-1.550333],[-4.047547,8.961048,7.090603,-7.192232,-5.260027,6.160284,6.480913,-7.951166,-4.351571,-6.936828,7.405908,3.632966,-7.389375,-0.019351],[3.864267,-2.196012,8.214630,-0.966345,-5.478007,8.096602,-5.075236,-7.597735,-0.395572,-7.894065,-0.254779,1.929126,4.309293,-9.676865],[0.511699,8.398405,3.154460,-4.357175,3.898838,9.718141,7.302844,6.069624,-8.556967,3.092440,-3.413137,0.632844,-5.734765,3.917543],[2.268526,-0.857792,-1.075817,0.882380,9.776354,-3.309194,0.564449,6.917471,-9.443275,-0.903994,-3.389421,0.051438,4.324247,5.801487],[-7.499999,5.303056,-9.822294,-4.315810,7.009390,7.806080,0.003902,-3.772086,6.130197,-7.701764,-2.299171,-5.396041,-2.206923,3.160346],[1.254662,-6.155622,5.728852,4.419252,2.964012,0.302363,-2.963940,9.350322,-7.842874,-5.581219,7.563423,-0.151143,9.170130,-9.540442],[-5.757713,7.520010,-5.325284,2.956642,5.500991,-7.686041,-4.835559,9.313921,-2.322162,9.230287,-7.806323,-6.712494,-8.073778,5.018322],[-2.734594,8.822161,-4.278487,-8.612315,-8.980314,-6.079884,-2.139578,-0.560695,-1.449375,2.860885,4.349682,-7.106791,-0.488029,2.961572],[0.083742,-1.802747,0.765515,-8.405647,-5.946174,-9.691007,1.430523,-3.748389,3.188249,-4.269772,0.546277,-1.994033,-9.754301,-1.705480],[-1.375157,8.179493,0.782221,9.505649,-4.035440,-7.689782,-7.509667,9.488665,9.032088,3.155815,7.951718,2.857973,-9.153385,4.588346],[-6.401829,7.128506,0.532322,-0.481207,8.153159,4.377409,6.190673,-2.673032,3.563016,1.785086,-7.398352,8.634115,2.712275,-5.799162]],[[8.507873,-0.204073,1.028209,-2.209885,2.437386,1.739184,-8.140390,-5.257119,-4.264304,7.493992,-2.154586,1.166220,5.993224,-5.036085],[8.763471,-1.962104,-5.109621,-5.581836,6.488094,6.197442,2.499011,1.496106,3.664489,2.031944,-5.039282,4.678569,-2.216869,5.282292],[-6.874773,-7.075781,-9.719663,-6.363583,0.354251,4.831809,5.858984,2.566886,6.112503,-5.215687,-4.867134,2.372753,-5.515119,-9.317486],[8.008242,-5.736703,9.048555,3.286855,-3.355268,8.158080,-5.412562,-1.360454,6.438234,-5.873157,-3.528751,4.146940,-1.080745,6.310907],[-0.909784,6.806584,-9.470461,2.107469,-5.147088,9.356436,-7.453975,6.428067,5.493127,-0.109840,0.598844,-4.392300,9.390058,2.819795],[-9.466625,-3.207111,-4.029323,-8.060629,0.804918,-8.626724,-8.280116,-9.417977,-4.989356,5.774132,0.895464,-1.699076,-9.192716,-8.100374],[3.857389,6.433992,5.178318,-9.026943,-1.754167,-8.367533,-3.655460,3.296296,-2.960768,5.955942,2.885469,1.054973,-7.512767,-1.584699],[-6.793503,-1.658524,-9.051057,5.914213,9.817918,2.689956,-5.248288,6.058063,-4.508496,1.017956,5.886825,-0.957689,0.847317,9.940418],[4.587912,-4.402710,2.222418,3.890670,-0.283040,2.094677,-3.211842,7.497599,-9.690379,7.174122,-2.818306,7.653829,5.940922,-9.646767],[0.928462,-1.015579,5.943555,-0.574165,4.303573,-4.903758,-5.452696,3.799203,-2.141383,0.053052,-4.868526,-6.495074,4.683540,-2.290904],[4.684280,7.285200,-9.539024,1.367393,-2.067222,-0.980657,-4.005361,-7.195885,-3.873668,7.666649,-7.517113,9.286819,-4.868669,0.689958],[-8.573796,-5.978326,0.421949,-2.410633,-6.324158,6.682289,-8.632943,-2.551825,0.828632,2.934261,5.569172,-2.454352,-6.997072,-5.164812]],[[4.169483,-1.539676,0.077836,2.972493,3.024879,-6.150604,-5.520176,-5.661262,-8.085119,4.848532,1.688484,1.444432,0.624192,9.146019],[-4.185497,-9.956538,8.369465,9.721687,-5.534000,8.584152,-7.854163,7.499695,-2.498236,4.679079,-7.707823,-4.524601,-7.785782,-0.988045],[1.644637,2.713638,0.567760,-0.426082,-7.678829,1.637111,-5.425465,-2.885469,3.350081,6.258277,-1.596594,-8.809064,2.612532,-6.296960],[-9.114769,-5.807877,-3.763467,9.962496,5.762231,1.596032,4.645724,-6.115702,8.728948,3.608141,-4.343381,-5.734260,6.430520,-1.141737],[8.485203,-7.292008,0.782123,-5.002340,-1.812559,-0.040798,8.694153,-4.476249,-8.832010,-6.259608,7.185374,-2.938680,4.958759,-9.503537],[7.737528,5.568703,-4.101204,8.214981,-1.251049,1.865547,9.987387,9.261935,7.045840,-9.600753,-1.889681,-5.440869,-2.923285,-3.147269],[8.065176,-4.575591,6.030709,-0.859597,-0.447270,2.484739,9.418968,0.306725,-3.258831,9.877712,-3.099566,-8.177060,-1.126017,7.152015],[6.560969,-1.561514,-8.903328,-5.505824,4.695781,4.374836,-1.033041,-3.119671,-3.265073,-0.331326,-1.219838,-2.638782,3.140944,-5.596007],[5.161400,-9.779658,8.738040,-5.589436,-5.204622,3.741347,7.472863,5.104148,2.534097,1.877292,7.869488,1.338392,6.182387,1.055046],[-0.676169,-6.172189,2.543101,-2.921822,-4.763350,-9.508692,8.849018,-0.882162,9.382588,-7.277581,7.475072,-0.789677,-9.971950,7.418880],[9.815853,-7.852762,-1.825936,-7.122885,-8.413962,-1.845733,3.868931,4.701955,-2.271341,3.663652,1.340975,-2.110705,5.466424,8.264808],[-2.722909,4.058263,8.172892,0.240221,-3.269920,2.932176,3.033719,1.361709,3.649850,8.843819,-2.253099,0.621514,4.774260,9.964838]],[[-2.794403,-2.458195,4.224757,-2.323631,2.948466,-4.350060,2.570834,-5.638889,4.664295,3.153433,-3.425545,-6.225879,6.521952,-2.889093],[7.383578,2.973520,1.134849,0.696443,6.068107,9.033921,6.650065,3.899030,-0.516858,4.767649,1.710846,-3.760247,-0.814862,2.900090],[-1.297945,-0.851251,4.854065,1.295991,9.663755,6.366694,-0.597646,3.315335,-4.224743,6.694838,3.573683,-2.394062,8.886234,-5.268852],[4.167411,-5.319695,-6.077261,3.005971,-1.541053,-4.586022,1.739684,2.150385,-2.526765,-2.040698,5.702168,9.004062,-4.561427,7.883380],[-3.268476,8.908376,6.547702,7.491264,-5.763371,0.941637,7.933959,-2.532678,5.476481,7.403714,1.876788,-5.621974,8.508801,9.652484],[5.891192,8.048697,-8.997491,9.201678,-4.918474,5.653647,-7.226414,-4.512864,-7.127164,-0.241065,-6.079767,-9.995605,5.375929,-6.699133],[-8.624399,1.270476,-3.709547,-0.748844,9.761324,0.462671,-1.711266,3.959472,7.987581,0.259443,-6.137275,-6.295471,6.496918,-8.428614],[7.383317,4.612736,-2.266480,-3.913198,9.125717,-5.016260,-9.461486,6.055006,-8.372164,5.510799,-0.571905,-7.245289,5.820316,3.988540],[2.831904,7.453836,-6.674657,-8.677227,9.612889,2.340413,3.523287,-2.233574,2.422908,4.658352,-8.723647,-7.188512,6.256553,5.108803],[8.615337,7.474398,1.741793,6.171455,9.826632,-3.040545,-0.857072,1.103154,7.297259,-7.177955,9.153372,0.674451,-9.858085,-4.108471],[-4.227543,-1.985424,-1.832980,-8.591343,8.562654,7.014583,3.950469,7.966488,-9.620359,-9.620100,-3.333358,-8.976460,-6.839084,8.596362],[6.857962,-2.428739,-0.910018,6.185469,-4.956573,-2.368704,-8.018411,-3.935759,0.836240,0.463463,-5.760308,-4.445096,-2.036453,0.784071]],[[-6.154451,-6.382507,-3.615565,0.875823,3.908192,-8.267782,-4.663187,4.304410,-0.876199,-4.531423,-0.479589,6.358727,5.712497,1.005445],[1.639111,-6.574728,-3.713492,8.435127,2.522114,1.273353,-0.524988,-9.813853,-6.108166,3.694303,9.145183,-2.186020,5.664374,5.157485],[7.406010,9.104043,7.092095,-2.075039,-6.897383,-0.973596,-3.388847,-2.667244,3.412491,1.747212,6.505381,3.517268,7.314715,-5.978110],[5.050229,7.222691,-4.616291,1.809612,0.997008,7.781395,-1.384871,4.954979,9.651694,3.791310,6.271241,-3.228636,6.929556,7.523875],[-8.880279,5.822816,0.904032,-4.212056,9.757603,1.631799,-6.452682,-4.974530,1.731409,6.379152,-7.029933,1.232019,-0.022098,-1.085001],[7.353954,-4.978468,9.291508,-6.855006,-1.082696,-6.042037,-0.964576,-9.788634,2.635073,2.945229,5.936868,2.433013,9.456082,3.811770],[4.914289,6.847422,4.818717,-6.513546,-9.402952,-2.275463,3.153825,-0.663187,-8.993908,-5.272661,-9.636819,-2.660902,4.013394,6.347801],[5.855185,-2.585656,-1.542632,7.756642,3.046828,-8.447466,-6.030747,-8.945348,4.208421,-0.942698,-7.540110,5.034681,-2.400276,-2.631995],[-6.379573,3.545149,-1.619432,-0.818403,2.099699,-5.065405,0.482413,-3.356287,9.537133,9.305141,-3.470422,0.912501,8.845473,2.401961],[-5.958703,3.879896,1.171686,-1.242519,-3.516576,-5.758055,7.969925,-6.425424,7.853016,-0.582081,3.678414,7.008327,7.607199,-0.876318],[-1.452613,6.295925,6.918937,4.177807,2.839106,-8.530738,-3.256785,7.226089,-0.327178,-1.295521,7.893571,-5.380001,-4.522838,-1.991046],[-6.005068,-2.455384,-5.605027,-1.485631,-1.370821,-0.294358,0.749949,2.697556,6.422444,7.517279,-4.924942,0.700539,0.059959,5.825711]],[[2.255052,1.730915,-7.263177,-1.823323,4.606657,6.278347,-9.582207,7.897174,-5.585629,5.717388,-4.833370,6.964418,-4.112820,-2.706516],[9.204030,-1.807767,1.478939,-7.829091,2.838610,-1.589919,7.382733,1.405483,0.969301,-8.057001,2.722625,6.753721,-0.736857,3.521711],[7.721324,-0.566814,2.380501,5.337919,0.710349,-7.049375,7.039420,6.476655,-4.216652,-5.398202,-2.308535,-9.119677,8.936949,8.989546],[-0.701943,-5.270504,-4.047998,-1.096371,6.173933,-7.549911,-8.379117,-6.683509,7.934031,-2.857867,-7.997370,6.061432,9.116800,-1.388879],[1.268293,7.491728,-7.560383,6.519805,-4.421398,-7.270944,1.804934,-4.132860,-3.862512,3.890718,9.594701,1.132644,3.601072,-8.066191],[-4.535500,3.280633,-5.797195,-4.861674,-8.951449,3.576026,2.064036,3.668502,-9.551013,-4.217224,-5.756094,-4.477124,-8.191373,3.701026],[-4.348830,-8.386003,-2.532877,-7.174424,-1.908410,-3.800807,-5.539147,-6.230673,4.105190,-6.599789,5.239160,-5.635468,8.880200,2.253582],[8.728521,0.632487,-1.241185,-3.271615,1.234300,0.479523,7.136150,-4.319081,3.121072,-3.912983,-6.537603,-4.750979,5.985019,0.485104],[2.938970,-6.552241,3.518552,-2.880288,-0.671604,6.933233,1.395496,8.679804,-7.374157,-1.185649,-6.974653,-5.562722,-6.778799,3.700592],[-9.465450,-8.590603,8.672430,-6.007249,-1.058093,9.176682,8.888192,-7.184999,5.954530,-5.488057,2.218743,-8.771533,2.790206,4.655032],[1.124565,6.550067,1.460938,-5.339420,9.408419,-2.529750,2.488795,-1.181559,-6.367547,-4.240521,-2.835426,8.707505,4.262816,-3.635464],[-9.586788,-7.645960,-3.716868,6.556507,1.387464,-7.806598,-6.224542,-0.282164,-4.825475,4.739425,0.069149,1.888536,-3.756534,-8.295567]],[[-7.866082,-0.958349,-9.244657,-3.379704,-1.392466,-1.535521,8.315578,-4.858110,1.365819,-4.651241,2.328284,-2.711609,1.852669,1.239547],[-4.690379,0.745183,-0.312845,-8.813153,4.627037,8.035210,-6.284088,7.316621,-9.664501,-7.477669,7.577898,-6.327467,-0.134926,9.382889],[-0.074818,9.019242,-4.554825,4.650089,-9.954481,4.762586,-4.377662,8.226310,0.131716,7.020938,9.079562,2.742860,-0.706298,3.262876],[0.223382,-6.793012,9.494042,-9.474064,-0.655249,-9.744826,3.787147,-8.275728,-7.359395,5.709878,5.014590,-1.707754,-6.526419,4.874751],[1.268177,4.861681,4.240278,-5.042760,5.414586,4.326058,-2.559119,-8.297076,7.274624,5.237285,-5.325663,2.953929,9.931459,-2.471756],[-4.138207,-5.707385,9.153555,-9.470359,9.899742,5.109033,5.931737,1.119124,1.473184,-1.967217,-9.440380,-2.707355,-0.329241,-1.474084],[7.501182,0.362821,-0.797584,1.292523,3.872191,5.159869,-1.268500,7.405068,7.893182,9.142146,-0.308512,7.262079,-3.617483,7.614563],[-6.748704,-9.806297,4.689670,1.224748,-7.390155,6.809410,-7.370557,-1.276232,5.429121,-3.016059,-9.526134,5.687106,6.072877,-4.701719],[3.995591,-3.574235,0.937000,4.461283,-7.796400,5.412116,-4.137114,-2.705959,9.468995,7.931511,-7.182419,6.578296,-7.035063,8.388071],[8.463584,0.650703,-2.739926,-0.749657,-1.221115,-2.507295,-5.059910,3.252599,-0.506698,9.802952,9.067647,-4.529582,4.494308,-5.781548],[2.634628,6.097601,6.020219,2.762741,9.113162,-8.018699,0.568017,-9.758705,-7.038627,-0.404457,-0.504869,-7.457098,2.591649,5.849300],[-5.747668,-6.226984,-2.633219,-4.738878,-2.223561,4.481065,-3.736999,1.253136,-5.370708,8.168291,-8.645874,6.798876,-9.672690,-0.490695]],[[-8.121059,-3.706135,7.901398,-7.413662,-0.736983,-1.253740,-5.913313,-5.741071,4.134111,8.168022,-0.742890,-7.520946,-5.728637,1.718161],[9.271406,-1.907690,7.245221,-4.339725,1.683196,-4.541457,0.149724,-0.264597,-4.337548,-4.482850,6.388004,8.544183,1.182977,-1.954790],[3.337774,-1.281102,4.769925,1.076208,5.764497,6.619679,-2.103448,-2.610609,-5.433026,-0.269431,-7.554504,-1.581365,-0.407855,2.712660],[4.692940,0.392074,0.190242,3.016095,1.827792,4.973087,-1.497904,2.517645,1.913518,4.246306,8.560280,-6.274666,-3.337229,6.824299],[8.825363,-3.003333,-0.804892,7.537209,0.059330,-8.696089,0.114996,9.450806,-7.572522,9.419124,5.460325,-7.089508,-0.292322,-9.807007],[7.598871,0.241963,-8.778061,-9.502954,8.870899,-7.174112,-3.500930,0.666554,-7.741409,-1.412027,-5.303979,-6.487661,-3.221042,-9.829035],[-7.592403,4.797748,-6.644982,-8.912099,7.937319,0.304658,-6.936751,6.620418,-6.515696,9.163518,-7.861911,5.195414,6.235150,-4.064682],[-0.829097,-6.484537,0.222168,2.246527,-0.905621,-8.550139,-1.624750,-9.365173,9.091823,1.475827,1.606099,-7.315236,-8.355822,-6.857425],[-7.507619,9.618624,1.130387,5.609738,-1.689861,-1.388943,-7.812065,-8.243144,-3.155173,7.985797,-2.605046,5.985241,6.919463,7.427398],[6.563647,9.779248,-3.667341,4.097729,-7.826332,-0.682285,9.932605,5.132346,9.711779,-7.159581,7.954135,4.938441,-7.988073,8.834863],[8.272620,-7.221323,-0.200458,-0.130693,-9.809861,-2.662472,-4.661558,6.470886,6.829122,6.712066,-9.659747,-4.869419,2.691432,-0.456585],[-3.814381,-1.617878,-9.563335,-4.956695,-7.775105,-6.904614,-3.632794,-6.699058,6.520465,-8.641741,-0.191066,-4.182873,7.630758,-1.045793]],[[-0.524615,4.101806,-4.871262,-5.095394,-8.583222,6.726223,0.197635,6.193790,-8.190809,-3.747068,-3.372101,-5.800641,-5.220911,1.048761],[6.548191,6.130418,-3.965032,-8.587492,-3.852860,-0.292638,-1.995496,3.378676,5.117368,5.558975,-7.582135,8.493324,9.902092,-7.260053],[-7.261118,3.102188,1.221313,-6.882634,1.404953,8.258916,6.513160,-6.909472,7.115945,-3.955456,3.209388,2.305945,8.550801,-8.036919],[-3.543336,9.476641,-6.665420,5.958428,4.211972,-5.943838,-3.058876,-1.757005,5.652307,8.206914,-0.821983,2.935422,-9.712783,-6.767559],[7.518492,-6.322321,2.501970,4.294964,-0.575930,3.919005,-9.754728,0.948855,6.665022,-4.824443,-1.683282,-7.561065,1.611759,-5.529664],[-4.857031,-5.256363,0.649206,8.946553,-2.029489,0.409322,7.161416,-1.287516,-6.381981,8.420651,4.203598,-8.782859,1.987830,-8.251428],[-1.521804,-0.928848,5.733260,-2.908175,4.615600,0.661047,-4.296649,8.109341,-0.006262,8.414569,3.652399,-2.825048,0.514484,-0.196548],[8.901694,9.661864,-7.909631,-1.310288,-4.356412,-1.954891,7.430428,3.277600,-6.098600,9.140922,-2.122883,3.747599,2.276020,-3.130097],[-3.860925,-2.919161,-2.958989,1.884817,9.342681,-7.094781,0.031335,-3.835167,0.836100,-4.124179,-5.191312,-6.137054,4.917143,-2.528966],[3.130194,6.473040,8.596571,-0.713775,0.143768,-3.593390,1.358778,1.843091,-0.946698,6.633719,6.346732,9.553278,-6.584413,7.531473],[-0.944429,-6.191097,-6.999020,5.848176,4.792082,6.772250,-8.891614,-4.922867,6.454394,-9.569537,1.613096,9.819482,6.633215,-6.289366],[-0.670113,5.285538,5.228457,-3.998689,9.621144,5.657736,8.156467,-6.018077,1.075808,-4.130828,-2.953489,-2.168304,-7.904230,-8.144468]],[[-1.881991,2.917485,-1.434060,6.256288,5.368274,-1.616066,-9.718660,7.387133,-2.704067,8.147439,-3.399998,-1.459459,-2.325568,-2.221660],[-8.602164,-2.052030,3.875303,4.376117,7.915986,9.477215,4.986204,9.297049,-8.726452,1.453625,-2.984571,-8.292900,-1.801313,8.736727],[1.620061,-2.612538,6.188698,-2.769778,-5.983950,-7.156124,8.116956,-5.222804,2.818526,-4.013229,5.963020,6.121804,-2.406453,-4.558095],[-7.231549,0.712642,-8.572831,-9.877638,-1.628197,-1.914339,-7.917957,-4.826958,4.259427,-0.348348,7.910597,-0.929989,9.130262,-3.810329],[1.754891,-0.366454,9.842102,0.754283,1.443088,9.651542,-4.919566,7.554782,-9.432835,-5.733776,-1.575355,4.169847,0.993885,-2.158365],[5.949968,-5.987175,-2.129222,-0.458698,-7.415136,8.838469,8.105754,-9.913164,-6.372176,3.326938,1.496126,-3.146582,-6.083285,1.654749],[4.991697,-5.021751,7.208659,7.905939,-7.135069,2.298181,5.316245,-3.051549,3.423660,1.815738,-7.897050,-6.380118,-3.207688,-0.327616],[-6.592951,9.081451,1.261999,-9.241291,-0.120488,-4.223664,-9.518004,-9.367614,-5.591294,-5.129737,1.138531,-8.361584,-7.746053,5.590172],[7.027873,-5.462849,-0.663066,-3.693315,6.134129,-3.147536,-8.631163,-2.737815,-8.880083,2.515515,-3.688229,-4.992622,8.970243,4.568464],[2.249976,-3.108143,-0.437449,4.179217,-8.873449,3.551795,-0.757920,-6.925876,-1.550730,3.841600,3.640323,-8.662853,0.610025,6.310593],[1.318365,-4.416922,5.732374,1.006093,0.226149,-4.377022,-5.815895,-0.328683,2.567319,-5.384657,6.819276,-7.069137,-5.530447,-8.018152],[6.170093,-8.483133,1.921475,-5.495982,9.769432,-5.237296,-2.908574,0.180116,-6.225824,6.967756,-9.642286,-7.274653,-2.995873,-4.755498]]], dtype = "float64")#candidate|510|(11, 12, 14)|const|float64
bop_511 = relay.not_equal(var_509.astype('bool'), relay.reshape(const_510.astype('bool'), relay.shape_of(var_509))) # shape=(11, 12, 14)
bop_524 = relay.greater(var_509.astype('bool'), relay.reshape(const_510.astype('bool'), relay.shape_of(var_509))) # shape=(11, 12, 14)
output = relay.Tuple([bop_511,bop_524,])
output2 = relay.Tuple([bop_511,bop_524,])
func_532 = relay.Function([var_509,], output)
mod['func_532'] = func_532
mod = relay.transform.InferType()(mod)
var_533 = relay.var("var_533", dtype = "float64", shape = (11, 12, 14))#candidate|533|(11, 12, 14)|var|float64
output = func_532(var_533)
func_534 = relay.Function([var_533], output)
mutated_mod['func_534'] = func_534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_987 = relay.var("var_987", dtype = "float32", shape = ())#candidate|987|()|var|float32
const_988 = relay.const([[[2.258950,3.907196],[5.118481,3.545857]],[[-3.167659,0.288497],[-1.185209,-1.638030]],[[-0.540692,-9.783089],[2.141063,0.508978]],[[8.134721,-8.631648],[0.338889,6.871341]],[[0.087020,2.332994],[6.726412,-2.853509]],[[2.942102,3.028648],[0.369950,-3.734757]],[[1.642619,-6.784582],[5.661565,-2.776594]],[[-7.219232,-0.033065],[-7.036122,-8.536330]],[[-4.582637,-6.480704],[-2.372623,-2.365483]],[[9.722983,5.950919],[9.152451,-5.681022]],[[9.994563,5.982398],[-5.193654,4.651620]],[[-4.057796,-5.764061],[-8.687281,-5.190280]],[[-0.779799,-7.315210],[1.072981,-6.861417]],[[-5.680929,8.571358],[8.715598,-7.181129]]], dtype = "float32")#candidate|988|(14, 2, 2)|const|float32
bop_989 = relay.floor_mod(var_987.astype('float32'), const_988.astype('float32')) # shape=(14, 2, 2)
output = relay.Tuple([bop_989,])
output2 = relay.Tuple([bop_989,])
func_992 = relay.Function([var_987,], output)
mod['func_992'] = func_992
mod = relay.transform.InferType()(mod)
var_993 = relay.var("var_993", dtype = "float32", shape = ())#candidate|993|()|var|float32
output = func_992(var_993)
func_994 = relay.Function([var_993], output)
mutated_mod['func_994'] = func_994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1090 = relay.var("var_1090", dtype = "float64", shape = (15, 15, 3))#candidate|1090|(15, 15, 3)|var|float64
var_1091 = relay.var("var_1091", dtype = "float64", shape = (15, 15, 3))#candidate|1091|(15, 15, 3)|var|float64
bop_1092 = relay.less(var_1090.astype('bool'), relay.reshape(var_1091.astype('bool'), relay.shape_of(var_1090))) # shape=(15, 15, 3)
output = bop_1092
output2 = bop_1092
func_1098 = relay.Function([var_1090,var_1091,], output)
mod['func_1098'] = func_1098
mod = relay.transform.InferType()(mod)
mutated_mod['func_1098'] = func_1098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1098_call = mutated_mod.get_global_var('func_1098')
var_1100 = relay.var("var_1100", dtype = "float64", shape = (15, 15, 3))#candidate|1100|(15, 15, 3)|var|float64
var_1101 = relay.var("var_1101", dtype = "float64", shape = (15, 15, 3))#candidate|1101|(15, 15, 3)|var|float64
call_1099 = func_1098_call(var_1100,var_1101,)
output = call_1099
func_1102 = relay.Function([var_1100,var_1101,], output)
mutated_mod['func_1102'] = func_1102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1252 = relay.var("var_1252", dtype = "int32", shape = ())#candidate|1252|()|var|int32
var_1253 = relay.var("var_1253", dtype = "int32", shape = (8, 4, 8))#candidate|1253|(8, 4, 8)|var|int32
bop_1254 = relay.less(var_1252.astype('bool'), var_1253.astype('bool')) # shape=(8, 4, 8)
bop_1258 = relay.right_shift(var_1252.astype('int16'), bop_1254.astype('int16')) # shape=(8, 4, 8)
uop_1266 = relay.atan(var_1253.astype('float64')) # shape=(8, 4, 8)
uop_1271 = relay.sqrt(bop_1254.astype('float64')) # shape=(8, 4, 8)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
call_1280 = relay.TupleGetItem(func_992_call(relay.reshape(var_1252.astype('float32'), [])), 0)
call_1281 = relay.TupleGetItem(func_994_call(relay.reshape(var_1252.astype('float32'), [])), 0)
uop_1286 = relay.asinh(uop_1271.astype('float64')) # shape=(8, 4, 8)
output = relay.Tuple([bop_1258,uop_1266,call_1280,uop_1286,])
output2 = relay.Tuple([bop_1258,uop_1266,call_1281,uop_1286,])
func_1288 = relay.Function([var_1252,var_1253,], output)
mod['func_1288'] = func_1288
mod = relay.transform.InferType()(mod)
mutated_mod['func_1288'] = func_1288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1288_call = mutated_mod.get_global_var('func_1288')
var_1290 = relay.var("var_1290", dtype = "int32", shape = ())#candidate|1290|()|var|int32
var_1291 = relay.var("var_1291", dtype = "int32", shape = (8, 4, 8))#candidate|1291|(8, 4, 8)|var|int32
call_1289 = func_1288_call(var_1290,var_1291,)
output = call_1289
func_1292 = relay.Function([var_1290,var_1291,], output)
mutated_mod['func_1292'] = func_1292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1366 = relay.var("var_1366", dtype = "float64", shape = (1, 5, 7))#candidate|1366|(1, 5, 7)|var|float64
var_1367 = relay.var("var_1367", dtype = "float64", shape = (6, 5, 7))#candidate|1367|(6, 5, 7)|var|float64
bop_1368 = relay.floor_mod(var_1366.astype('float64'), var_1367.astype('float64')) # shape=(6, 5, 7)
output = bop_1368
output2 = bop_1368
func_1374 = relay.Function([var_1366,var_1367,], output)
mod['func_1374'] = func_1374
mod = relay.transform.InferType()(mod)
var_1375 = relay.var("var_1375", dtype = "float64", shape = (1, 5, 7))#candidate|1375|(1, 5, 7)|var|float64
var_1376 = relay.var("var_1376", dtype = "float64", shape = (6, 5, 7))#candidate|1376|(6, 5, 7)|var|float64
output = func_1374(var_1375,var_1376,)
func_1377 = relay.Function([var_1375,var_1376,], output)
mutated_mod['func_1377'] = func_1377
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1526 = relay.const([[[3.478478,-6.253482,-4.344903,6.233412,-5.583114,7.525175,-6.390995,1.367577]],[[-6.427679,1.948589,-3.267794,1.545084,4.405801,-3.268215,-8.470064,-8.100623]],[[5.466461,4.823507,3.561000,-1.106150,6.371511,-4.747443,-5.470806,5.303852]],[[7.850658,7.649877,1.283439,5.532482,5.374008,-8.256736,2.897796,-5.625395]]], dtype = "float32")#candidate|1526|(4, 1, 8)|const|float32
uop_1527 = relay.log(const_1526.astype('float32')) # shape=(4, 1, 8)
func_1288_call = mod.get_global_var('func_1288')
func_1292_call = mutated_mod.get_global_var('func_1292')
const_1536 = relay.const(-2, dtype = "int32")#candidate|1536|()|const|int32
const_1537 = relay.const([8,-8,2,-7,3,-6,-9,1,-6,2,-8,3,9,-3,7,-9,-5,-8,-4,-3,-6,-3,1,1,-5,-1,3,6,-10,-3,10,-1,-10,9,3,-10,10,2,-9,9,9,6,6,6,-10,2,-10,4,-2,-3,-6,-2,8,6,-10,-1,6,2,7,5,-4,7,10,5,6,-4,3,-7,-1,-6,9,-1,5,7,9,1,-1,-9,-10,2,4,-8,-4,-8,1,8,-3,7,10,2,-5,3,1,-6,10,-9,-4,3,-4,-4,5,5,1,-8,5,10,-10,6,9,-4,-2,3,-10,5,-5,8,-9,2,4,-10,-9,-9,-5,2,-10,1,9,-7,10,10,-1,9,-1,1,-10,-4,-1,-10,1,10,-8,3,-7,-4,-4,-4,3,6,-4,-1,8,-3,-2,7,5,-5,2,-10,-2,-8,1,1,7,9,-6,6,-8,5,4,-3,1,3,8,4,8,-6,4,-2,-7,-2,3,-7,1,-1,3,-5,2,10,1,-9,6,9,-5,10,-4,-4,-2,-8,-10,9,2,8,6,-5,-1,-8,-2,-6,-8,6,1,-6,1,-10,-2,-4,7,-10,1,-9,-2,9,4,10,4,-3,-7,1,-5,-7,-10,-1,5,9,9,-8,5,-6,5,-2,-1,5,5,6,-7,-7,3,5,3,4,9,2,9,4,3,2], dtype = "int32")#candidate|1537|(256,)|const|int32
call_1535 = relay.TupleGetItem(func_1288_call(relay.reshape(const_1536.astype('int32'), []), relay.reshape(const_1537.astype('int32'), [8, 4, 8]), ), 2)
call_1538 = relay.TupleGetItem(func_1292_call(relay.reshape(const_1536.astype('int32'), []), relay.reshape(const_1537.astype('int32'), [8, 4, 8]), ), 2)
output = relay.Tuple([uop_1527,call_1535,const_1536,const_1537,])
output2 = relay.Tuple([uop_1527,call_1538,const_1536,const_1537,])
func_1560 = relay.Function([], output)
mod['func_1560'] = func_1560
mod = relay.transform.InferType()(mod)
mutated_mod['func_1560'] = func_1560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mutated_mod.get_global_var('func_1560')
call_1561 = func_1560_call()
output = call_1561
func_1562 = relay.Function([], output)
mutated_mod['func_1562'] = func_1562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1594 = relay.TupleGetItem(func_1560_call(), 3)
call_1595 = relay.TupleGetItem(func_1562_call(), 3)
func_1098_call = mod.get_global_var('func_1098')
func_1102_call = mutated_mod.get_global_var('func_1102')
const_1605 = relay.const([[9.257207,0.884366,2.488567],[-4.117529,0.074103,-8.454703],[2.576955,6.498476,6.221830],[6.265802,-5.841889,6.287160],[-6.043991,-6.890343,-4.180217],[5.939381,3.819028,9.086758],[-8.743013,5.219873,6.612609],[-3.538045,-8.798714,3.347985],[1.104903,-5.950835,7.708091],[-5.909202,-4.689433,-4.057072],[-5.660769,-4.495103,-9.593392],[-0.543098,-1.275747,-3.332136],[1.015413,-3.959537,3.912833],[-4.062459,-5.039503,-4.183728],[-5.954053,6.561390,8.898585],[-5.532380,0.001319,-7.550419],[-0.544339,-9.836683,-3.880994],[-5.928571,9.314256,9.549669],[-3.400447,-5.809869,-3.803349],[-6.382052,8.008071,-7.764204],[7.260652,-8.665839,5.096348],[5.703600,5.132396,-4.288035],[-6.627824,0.951594,8.787575],[-9.913512,-4.157715,-8.567124],[-1.640728,-9.183524,-4.688030],[-8.263915,2.325191,-1.803263],[2.502518,-9.241095,3.843109],[5.363975,6.841357,-0.370481],[0.381130,-5.022040,7.136986],[7.846603,-9.705404,5.741417],[-7.121577,-0.119448,-0.990241],[-3.723461,-3.927984,-7.661284],[-2.769170,-1.192598,-5.513880],[-4.085208,0.980395,-2.727509],[-4.149938,-7.506071,4.300647],[9.368192,-6.620692,6.294392],[0.175760,-7.843836,-2.724341],[8.409785,-0.651272,-5.174467],[-8.912763,4.806673,0.714286],[-7.203199,8.821244,-6.093102],[-9.688448,-7.009283,-0.745930],[5.556921,9.863227,5.440695],[-2.675293,-5.882965,-8.398166],[-1.231535,-5.342677,0.110038],[2.475637,0.693610,-7.696395],[6.274093,2.157965,0.021357],[4.769632,8.147738,0.300132],[-0.820584,-4.927892,-2.343982],[5.508175,5.606985,-4.027253],[4.111852,2.056694,-9.721146],[2.162771,-7.693820,4.263269],[-5.170428,1.547688,-0.271894],[-4.278260,-1.307354,5.658849],[-3.168687,7.067570,-7.861698],[-2.883441,0.117751,-5.438414],[5.193514,2.917648,7.235026],[-4.603132,0.538655,2.352603],[-1.853860,-7.860973,-5.085244],[4.957846,-1.508563,5.749748],[8.147466,1.987025,6.634204],[-8.394463,0.585744,-5.681014],[4.936975,-0.928588,-4.621914],[-3.942846,4.484571,-0.983009],[-5.383306,-2.171338,-6.552281],[-2.825195,3.895548,3.668803],[7.035433,-6.782698,8.114869],[2.558599,2.971115,-4.400062],[-0.113821,-5.928842,2.781424],[3.887040,-6.983003,5.256580],[2.552044,-3.031540,0.390867],[6.090200,-9.069336,7.721173],[8.313104,-5.648853,-7.121957],[-4.785854,7.027693,-6.758893],[1.527335,-1.947327,-8.676174],[5.219696,8.255316,-3.863480],[0.520739,-9.248926,0.105399],[9.430685,-9.210730,5.075340],[-0.801215,5.167362,-0.837435],[0.439924,-7.636982,-9.919666],[4.418020,-8.432821,3.508614],[1.258936,2.684027,-9.073743],[7.556660,9.226046,8.337045],[-1.418879,-5.979222,0.664302],[6.383050,0.282155,4.665089],[-5.718011,7.096282,5.549065],[-5.440756,8.138426,-0.199512],[-4.660409,4.119136,-7.847232],[3.164285,9.026584,-5.031789],[-8.886302,3.228454,4.394902],[6.317473,8.809380,6.593260],[-3.353590,9.399495,1.825934],[8.506322,4.328827,0.777621],[-7.337548,-0.572145,-3.380503],[-4.786698,-0.534457,-5.306578],[-1.297583,-3.294216,-4.929553],[8.784123,5.250949,-5.680128],[-6.411746,-6.289812,0.154844],[1.971220,-7.043738,3.618503],[1.385236,-8.324641,3.282451],[8.992771,-6.476647,8.089074],[4.909516,8.433843,6.747305],[6.268270,-2.517065,8.525168],[5.389047,7.008379,-2.200270],[7.989349,-8.545174,1.691302],[-4.141885,-8.985240,-9.978935],[-1.284692,-7.120163,-7.096287],[5.167330,4.159460,-3.178257],[2.313493,-6.779459,1.550788],[6.667520,-2.209119,-0.015691],[6.705632,-0.417436,-0.920157],[4.648390,7.022420,-6.085422],[0.934425,3.682417,9.647747],[2.501424,-8.641856,9.827228],[-8.281882,-6.657552,0.019626],[0.142876,9.204198,-3.934139],[-8.703534,-0.076580,4.439822],[-4.186554,8.483615,6.223188],[0.638286,1.369162,-6.256222],[0.225372,-3.107403,6.092589],[4.277370,-8.459846,7.415725],[-9.830911,8.676856,0.780690],[6.190353,8.555015,5.843857],[-4.719072,-9.215037,-2.814519],[-5.692357,4.762903,3.800726],[-5.764468,8.122353,-1.011950],[7.210620,6.378784,9.744576],[2.227026,-4.591877,1.500653],[-7.138387,-6.956742,-9.014256],[5.024107,-4.673930,9.398735],[-7.792071,-2.930031,-3.749177],[-8.807544,9.322226,-0.708822],[-2.757604,-2.675445,8.875306],[-5.980803,6.894082,-7.063653],[-3.149060,-2.040189,-4.485153],[-5.775586,-1.640941,5.955829],[8.576277,-8.372351,0.150724],[-5.845259,8.911879,-7.083564],[-6.355342,-4.790585,1.204997],[1.381953,-8.226394,-4.273948],[4.714900,5.423538,-5.588631],[8.496558,-1.547411,-2.571862],[-9.410005,3.097949,3.301957],[-0.285634,3.851846,4.660493],[0.667182,-9.255704,0.481775],[1.017328,5.682021,-8.078090],[7.671891,-1.503093,0.998175],[9.891388,8.087351,7.186518],[-9.042768,-4.744308,-2.808839],[-9.011635,8.205365,-2.739166],[1.683646,6.241535,-3.661137],[-1.182701,6.598291,-3.596775],[-8.306185,4.948232,-4.724368],[-2.236080,-2.651646,-9.315909],[9.523315,1.538788,5.394269],[1.711402,6.503913,-2.016353],[-2.229435,0.659553,5.043353],[-6.703606,0.949651,3.551841],[1.299103,-6.703110,-8.380634],[-0.252946,0.117857,-4.978384],[8.040892,5.477961,6.495526],[4.456817,3.681934,3.318834],[-6.094218,-1.800812,9.902712],[3.808165,8.798144,8.558483],[8.352478,1.796375,2.800236],[2.208935,5.254583,6.232547],[-2.440705,-6.753144,9.343384],[-6.947731,-7.281090,8.514128],[-9.371868,-4.935717,-1.489519],[-5.030562,3.967846,-2.348942],[2.250028,-6.591611,-2.031203],[7.814274,-8.796375,-9.793885],[-5.296967,5.491855,7.587411],[-4.241292,3.790658,-2.713689],[-2.176415,7.730910,-9.228897],[-3.431569,-3.539517,1.666199],[-6.052065,4.494697,-3.184528],[-1.817017,3.141798,3.697142],[-8.354170,-7.672447,-4.736772],[5.768330,1.703198,8.980106],[-1.292018,-8.968325,-0.449645],[-9.426244,-5.166446,9.569220],[5.048852,1.181700,3.217540],[-8.676626,4.033082,3.705874],[8.771152,-9.149272,-6.444478],[-5.853456,-5.988341,8.953021],[-9.885223,1.640293,9.564485],[-5.576160,9.326796,1.142148],[-4.983529,-8.247969,4.209694],[-8.959043,9.694600,4.140174],[-3.424656,-7.895780,-1.328129],[9.148949,6.188265,-7.512290],[9.356669,-1.159236,-2.696571],[8.485999,3.404496,-4.165230],[6.930791,6.939483,-3.492487],[-1.991824,-8.962465,4.106321],[-5.400680,-0.499055,3.849913],[6.679756,7.399645,7.400413],[7.466823,-2.643720,4.585460],[5.449634,7.621910,2.296231],[-8.891883,-5.154391,-7.127071],[6.615599,-8.950987,3.240185],[-3.167609,-4.517611,-1.275797],[-3.764663,-2.310161,-7.132598],[9.806125,6.805706,-8.191084],[-1.329551,-1.608087,5.906276],[-7.297275,-6.475491,-4.918612],[3.963459,-3.020370,-5.836448],[4.461848,-4.189579,-1.686543],[9.639488,0.416993,-6.844348],[9.088376,-0.178342,-5.282580],[6.644721,-8.354078,8.030143],[5.760014,-7.866615,7.081335],[-2.840682,3.545363,-7.168136],[1.693219,8.103692,-7.026634],[-1.607489,9.574054,-9.829686],[-6.243638,-1.777283,1.798528],[-1.808495,-0.084053,-2.283435],[0.518744,8.585308,6.437954],[-6.923912,3.476583,2.658690],[-7.813806,-0.103724,-5.953748],[3.741677,-3.533537,-8.788479],[9.402473,-2.869250,8.173554],[2.004075,3.764327,5.481729],[8.007577,4.700609,5.213354],[-4.485541,-2.861721,9.858906]], dtype = "float64")#candidate|1605|(225, 3)|const|float64
call_1604 = func_1098_call(relay.reshape(const_1605.astype('float64'), [15, 15, 3]), relay.reshape(const_1605.astype('float64'), [15, 15, 3]), )
call_1606 = func_1098_call(relay.reshape(const_1605.astype('float64'), [15, 15, 3]), relay.reshape(const_1605.astype('float64'), [15, 15, 3]), )
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1611 = relay.TupleGetItem(func_1560_call(), 1)
call_1612 = relay.TupleGetItem(func_1562_call(), 1)
uop_1613 = relay.asin(const_1605.astype('float32')) # shape=(225, 3)
output = relay.Tuple([call_1594,call_1604,call_1611,uop_1613,])
output2 = relay.Tuple([call_1595,call_1606,call_1612,uop_1613,])
func_1624 = relay.Function([], output)
mod['func_1624'] = func_1624
mod = relay.transform.InferType()(mod)
output = func_1624()
func_1625 = relay.Function([], output)
mutated_mod['func_1625'] = func_1625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1639 = relay.TupleGetItem(func_1560_call(), 0)
call_1640 = relay.TupleGetItem(func_1562_call(), 0)
output = relay.Tuple([call_1639,])
output2 = relay.Tuple([call_1640,])
func_1653 = relay.Function([], output)
mod['func_1653'] = func_1653
mod = relay.transform.InferType()(mod)
output = func_1653()
func_1654 = relay.Function([], output)
mutated_mod['func_1654'] = func_1654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_1703 = relay.TupleGetItem(func_1624_call(), 1)
call_1704 = relay.TupleGetItem(func_1625_call(), 1)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1708 = relay.TupleGetItem(func_1560_call(), 0)
call_1709 = relay.TupleGetItem(func_1562_call(), 0)
var_1722 = relay.var("var_1722", dtype = "bool", shape = (15, 15, 3))#candidate|1722|(15, 15, 3)|var|bool
bop_1723 = relay.floor_mod(call_1703.astype('float32'), relay.reshape(var_1722.astype('float32'), relay.shape_of(call_1703))) # shape=(15, 15, 3)
bop_1726 = relay.floor_mod(call_1704.astype('float32'), relay.reshape(var_1722.astype('float32'), relay.shape_of(call_1704))) # shape=(15, 15, 3)
bop_1734 = relay.multiply(var_1722.astype('uint8'), relay.reshape(call_1703.astype('uint8'), relay.shape_of(var_1722))) # shape=(15, 15, 3)
bop_1737 = relay.multiply(var_1722.astype('uint8'), relay.reshape(call_1704.astype('uint8'), relay.shape_of(var_1722))) # shape=(15, 15, 3)
output = relay.Tuple([call_1708,bop_1723,bop_1734,])
output2 = relay.Tuple([call_1709,bop_1726,bop_1737,])
func_1743 = relay.Function([var_1722,], output)
mod['func_1743'] = func_1743
mod = relay.transform.InferType()(mod)
mutated_mod['func_1743'] = func_1743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1744 = relay.var("var_1744", dtype = "bool", shape = (15, 15, 3))#candidate|1744|(15, 15, 3)|var|bool
func_1743_call = mutated_mod.get_global_var('func_1743')
call_1745 = func_1743_call(var_1744)
output = call_1745
func_1746 = relay.Function([var_1744], output)
mutated_mod['func_1746'] = func_1746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mod.get_global_var('func_1653')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_1779 = relay.TupleGetItem(func_1653_call(), 0)
call_1780 = relay.TupleGetItem(func_1654_call(), 0)
output = relay.Tuple([call_1779,])
output2 = relay.Tuple([call_1780,])
func_1792 = relay.Function([], output)
mod['func_1792'] = func_1792
mod = relay.transform.InferType()(mod)
output = func_1792()
func_1793 = relay.Function([], output)
mutated_mod['func_1793'] = func_1793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mod.get_global_var('func_1653')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_1797 = relay.TupleGetItem(func_1653_call(), 0)
call_1798 = relay.TupleGetItem(func_1654_call(), 0)
output = relay.Tuple([call_1797,])
output2 = relay.Tuple([call_1798,])
func_1799 = relay.Function([], output)
mod['func_1799'] = func_1799
mod = relay.transform.InferType()(mod)
output = func_1799()
func_1800 = relay.Function([], output)
mutated_mod['func_1800'] = func_1800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mod.get_global_var('func_1653')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_1801 = relay.TupleGetItem(func_1653_call(), 0)
call_1802 = relay.TupleGetItem(func_1654_call(), 0)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_1807 = relay.TupleGetItem(func_1624_call(), 3)
call_1808 = relay.TupleGetItem(func_1625_call(), 3)
output = relay.Tuple([call_1801,call_1807,])
output2 = relay.Tuple([call_1802,call_1808,])
func_1829 = relay.Function([], output)
mod['func_1829'] = func_1829
mod = relay.transform.InferType()(mod)
mutated_mod['func_1829'] = func_1829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mutated_mod.get_global_var('func_1829')
call_1830 = func_1829_call()
output = call_1830
func_1831 = relay.Function([], output)
mutated_mod['func_1831'] = func_1831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_1893 = relay.TupleGetItem(func_1624_call(), 2)
call_1894 = relay.TupleGetItem(func_1625_call(), 2)
output = call_1893
output2 = call_1894
func_1895 = relay.Function([], output)
mod['func_1895'] = func_1895
mod = relay.transform.InferType()(mod)
mutated_mod['func_1895'] = func_1895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1895_call = mutated_mod.get_global_var('func_1895')
call_1896 = func_1895_call()
output = call_1896
func_1897 = relay.Function([], output)
mutated_mod['func_1897'] = func_1897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1799_call = mod.get_global_var('func_1799')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_1905 = relay.TupleGetItem(func_1799_call(), 0)
call_1906 = relay.TupleGetItem(func_1800_call(), 0)
output = relay.Tuple([call_1905,])
output2 = relay.Tuple([call_1906,])
func_1915 = relay.Function([], output)
mod['func_1915'] = func_1915
mod = relay.transform.InferType()(mod)
output = func_1915()
func_1916 = relay.Function([], output)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_1979 = relay.TupleGetItem(func_1624_call(), 2)
call_1980 = relay.TupleGetItem(func_1625_call(), 2)
output = call_1979
output2 = call_1980
func_1982 = relay.Function([], output)
mod['func_1982'] = func_1982
mod = relay.transform.InferType()(mod)
mutated_mod['func_1982'] = func_1982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1982_call = mutated_mod.get_global_var('func_1982')
call_1983 = func_1982_call()
output = call_1983
func_1984 = relay.Function([], output)
mutated_mod['func_1984'] = func_1984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_2015 = relay.TupleGetItem(func_1829_call(), 1)
call_2016 = relay.TupleGetItem(func_1831_call(), 1)
func_1895_call = mod.get_global_var('func_1895')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2028 = func_1895_call()
call_2029 = func_1895_call()
var_2047 = relay.var("var_2047", dtype = "float32", shape = (225, 3))#candidate|2047|(225, 3)|var|float32
bop_2048 = relay.floor_divide(call_2015.astype('float64'), relay.reshape(var_2047.astype('float64'), relay.shape_of(call_2015))) # shape=(225, 3)
bop_2051 = relay.floor_divide(call_2016.astype('float64'), relay.reshape(var_2047.astype('float64'), relay.shape_of(call_2016))) # shape=(225, 3)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_2071 = relay.TupleGetItem(func_1792_call(), 0)
call_2072 = relay.TupleGetItem(func_1793_call(), 0)
output = relay.Tuple([call_2028,bop_2048,call_2071,])
output2 = relay.Tuple([call_2029,bop_2051,call_2072,])
func_2073 = relay.Function([var_2047,], output)
mod['func_2073'] = func_2073
mod = relay.transform.InferType()(mod)
mutated_mod['func_2073'] = func_2073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2074 = relay.var("var_2074", dtype = "float32", shape = (225, 3))#candidate|2074|(225, 3)|var|float32
func_2073_call = mutated_mod.get_global_var('func_2073')
call_2075 = func_2073_call(var_2074)
output = call_2075
func_2076 = relay.Function([var_2074], output)
mutated_mod['func_2076'] = func_2076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_2091 = relay.TupleGetItem(func_1792_call(), 0)
call_2092 = relay.TupleGetItem(func_1793_call(), 0)
output = call_2091
output2 = call_2092
func_2107 = relay.Function([], output)
mod['func_2107'] = func_2107
mod = relay.transform.InferType()(mod)
mutated_mod['func_2107'] = func_2107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2107_call = mutated_mod.get_global_var('func_2107')
call_2108 = func_2107_call()
output = call_2108
func_2109 = relay.Function([], output)
mutated_mod['func_2109'] = func_2109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1895_call = mod.get_global_var('func_1895')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2110 = func_1895_call()
call_2111 = func_1895_call()
output = relay.Tuple([call_2110,])
output2 = relay.Tuple([call_2111,])
func_2115 = relay.Function([], output)
mod['func_2115'] = func_2115
mod = relay.transform.InferType()(mod)
mutated_mod['func_2115'] = func_2115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2115_call = mutated_mod.get_global_var('func_2115')
call_2116 = func_2115_call()
output = call_2116
func_2117 = relay.Function([], output)
mutated_mod['func_2117'] = func_2117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_2153 = relay.TupleGetItem(func_1829_call(), 0)
call_2154 = relay.TupleGetItem(func_1831_call(), 0)
func_1895_call = mod.get_global_var('func_1895')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2157 = func_1895_call()
call_2158 = func_1895_call()
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_2159 = relay.TupleGetItem(func_1624_call(), 1)
call_2160 = relay.TupleGetItem(func_1625_call(), 1)
func_1982_call = mod.get_global_var('func_1982')
func_1984_call = mutated_mod.get_global_var('func_1984')
call_2165 = func_1982_call()
call_2166 = func_1982_call()
func_1098_call = mod.get_global_var('func_1098')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_2172 = func_1098_call(relay.reshape(call_2159.astype('float64'), [15, 15, 3]), relay.reshape(call_2159.astype('float64'), [15, 15, 3]), )
call_2173 = func_1098_call(relay.reshape(call_2159.astype('float64'), [15, 15, 3]), relay.reshape(call_2159.astype('float64'), [15, 15, 3]), )
output = relay.Tuple([call_2153,call_2157,call_2159,call_2165,call_2172,])
output2 = relay.Tuple([call_2154,call_2158,call_2160,call_2166,call_2173,])
func_2185 = relay.Function([], output)
mod['func_2185'] = func_2185
mod = relay.transform.InferType()(mod)
output = func_2185()
func_2186 = relay.Function([], output)
mutated_mod['func_2186'] = func_2186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1799_call = mod.get_global_var('func_1799')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2196 = relay.TupleGetItem(func_1799_call(), 0)
call_2197 = relay.TupleGetItem(func_1800_call(), 0)
const_2203 = relay.const([[[-5.778729,-9.132156,-5.700799,-8.038676,4.360772,9.919937,-0.722112,1.264709],[-1.143160,8.122095,0.437272,-3.279568,1.389996,8.352399,-1.456449,-4.583594],[-8.172099,-2.035057,-2.719230,8.182856,-1.002330,4.099601,-8.611869,3.896718],[-1.489516,5.364055,-6.995431,3.524345,-7.018006,1.303105,8.197894,1.129217]],[[-3.809830,3.092349,-5.349908,-6.885048,5.572105,0.011438,4.563718,-2.972811],[1.911198,5.069998,-1.348085,6.119470,3.585980,9.966249,8.645869,-6.887368],[-3.545149,-6.235553,4.775305,1.091535,-6.248046,-9.394157,1.051406,1.614670],[-6.960794,-6.461369,-8.505259,5.747415,4.273139,-1.900028,-5.387522,-1.273397]],[[-7.928301,6.081821,-9.473447,7.963692,-3.973772,-0.231409,-1.382539,-2.972769],[-9.005916,5.064913,9.664145,8.198105,0.393924,3.780680,-8.964080,3.119601],[-8.139113,-2.783449,1.930437,6.879530,-1.941992,-5.357585,3.627112,3.477445],[9.460993,-1.228258,-5.993287,8.945338,-7.930941,4.242048,2.626755,4.985226]],[[7.337877,-1.135027,7.095471,-5.111131,1.896209,8.596058,-1.667335,-1.158330],[8.531323,-9.203727,-3.687497,-1.189948,-8.882280,-9.350312,-2.385032,6.212266],[1.156327,-2.832804,6.826319,-2.636736,1.407610,7.044054,3.552379,-3.593746],[7.308516,-9.331985,-1.889461,-1.732204,-6.909729,-7.844339,-3.027403,-7.299622]]], dtype = "float32")#candidate|2203|(4, 4, 8)|const|float32
bop_2204 = relay.less_equal(call_2196.astype('bool'), const_2203.astype('bool')) # shape=(4, 4, 8)
bop_2207 = relay.less_equal(call_2197.astype('bool'), const_2203.astype('bool')) # shape=(4, 4, 8)
output = bop_2204
output2 = bop_2207
func_2210 = relay.Function([], output)
mod['func_2210'] = func_2210
mod = relay.transform.InferType()(mod)
mutated_mod['func_2210'] = func_2210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2210_call = mutated_mod.get_global_var('func_2210')
call_2211 = func_2210_call()
output = call_2211
func_2212 = relay.Function([], output)
mutated_mod['func_2212'] = func_2212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mod.get_global_var('func_1653')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_2221 = relay.TupleGetItem(func_1653_call(), 0)
call_2222 = relay.TupleGetItem(func_1654_call(), 0)
uop_2226 = relay.rsqrt(call_2221.astype('float64')) # shape=(4, 1, 8)
uop_2228 = relay.rsqrt(call_2222.astype('float64')) # shape=(4, 1, 8)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_2229 = relay.TupleGetItem(func_1829_call(), 0)
call_2230 = relay.TupleGetItem(func_1831_call(), 0)
uop_2240 = relay.sinh(uop_2226.astype('float32')) # shape=(4, 1, 8)
uop_2242 = relay.sinh(uop_2228.astype('float32')) # shape=(4, 1, 8)
output = relay.Tuple([call_2229,uop_2240,])
output2 = relay.Tuple([call_2230,uop_2242,])
func_2246 = relay.Function([], output)
mod['func_2246'] = func_2246
mod = relay.transform.InferType()(mod)
output = func_2246()
func_2247 = relay.Function([], output)
mutated_mod['func_2247'] = func_2247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_2263 = relay.TupleGetItem(func_1829_call(), 1)
call_2264 = relay.TupleGetItem(func_1831_call(), 1)
var_2269 = relay.var("var_2269", dtype = "float32", shape = (225, 3))#candidate|2269|(225, 3)|var|float32
bop_2270 = relay.multiply(call_2263.astype('uint32'), relay.reshape(var_2269.astype('uint32'), relay.shape_of(call_2263))) # shape=(225, 3)
bop_2273 = relay.multiply(call_2264.astype('uint32'), relay.reshape(var_2269.astype('uint32'), relay.shape_of(call_2264))) # shape=(225, 3)
uop_2307 = relay.atan(bop_2270.astype('float32')) # shape=(225, 3)
uop_2309 = relay.atan(bop_2273.astype('float32')) # shape=(225, 3)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_2311 = relay.TupleGetItem(func_1560_call(), 0)
call_2312 = relay.TupleGetItem(func_1562_call(), 0)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_2314 = relay.TupleGetItem(func_1792_call(), 0)
call_2315 = relay.TupleGetItem(func_1793_call(), 0)
uop_2333 = relay.sin(uop_2307.astype('float32')) # shape=(225, 3)
uop_2335 = relay.sin(uop_2309.astype('float32')) # shape=(225, 3)
bop_2340 = relay.mod(uop_2333.astype('float32'), relay.reshape(var_2269.astype('float32'), relay.shape_of(uop_2333))) # shape=(225, 3)
bop_2343 = relay.mod(uop_2335.astype('float32'), relay.reshape(var_2269.astype('float32'), relay.shape_of(uop_2335))) # shape=(225, 3)
bop_2344 = relay.equal(bop_2270.astype('bool'), relay.reshape(uop_2307.astype('bool'), relay.shape_of(bop_2270))) # shape=(225, 3)
bop_2347 = relay.equal(bop_2273.astype('bool'), relay.reshape(uop_2309.astype('bool'), relay.shape_of(bop_2273))) # shape=(225, 3)
func_1915_call = mod.get_global_var('func_1915')
func_1916_call = mutated_mod.get_global_var('func_1916')
call_2355 = relay.TupleGetItem(func_1915_call(), 0)
call_2356 = relay.TupleGetItem(func_1916_call(), 0)
output = relay.Tuple([call_2311,call_2314,bop_2340,bop_2344,call_2355,])
output2 = relay.Tuple([call_2312,call_2315,bop_2343,bop_2347,call_2356,])
func_2358 = relay.Function([var_2269,], output)
mod['func_2358'] = func_2358
mod = relay.transform.InferType()(mod)
mutated_mod['func_2358'] = func_2358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2359 = relay.var("var_2359", dtype = "float32", shape = (225, 3))#candidate|2359|(225, 3)|var|float32
func_2358_call = mutated_mod.get_global_var('func_2358')
call_2360 = func_2358_call(var_2359)
output = call_2360
func_2361 = relay.Function([var_2359], output)
mutated_mod['func_2361'] = func_2361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_2378 = relay.TupleGetItem(func_1829_call(), 0)
call_2379 = relay.TupleGetItem(func_1831_call(), 0)
func_1895_call = mod.get_global_var('func_1895')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2390 = func_1895_call()
call_2391 = func_1895_call()
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_2395 = func_2210_call()
call_2396 = func_2210_call()
bop_2407 = relay.maximum(call_2378.astype('int32'), call_2395.astype('int32')) # shape=(4, 4, 8)
bop_2410 = relay.maximum(call_2379.astype('int32'), call_2396.astype('int32')) # shape=(4, 4, 8)
output = relay.Tuple([call_2390,bop_2407,])
output2 = relay.Tuple([call_2391,bop_2410,])
func_2412 = relay.Function([], output)
mod['func_2412'] = func_2412
mod = relay.transform.InferType()(mod)
mutated_mod['func_2412'] = func_2412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mutated_mod.get_global_var('func_2412')
call_2413 = func_2412_call()
output = call_2413
func_2414 = relay.Function([], output)
mutated_mod['func_2414'] = func_2414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2107_call = mod.get_global_var('func_2107')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_2450 = func_2107_call()
call_2451 = func_2107_call()
output = call_2450
output2 = call_2451
func_2456 = relay.Function([], output)
mod['func_2456'] = func_2456
mod = relay.transform.InferType()(mod)
mutated_mod['func_2456'] = func_2456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2456_call = mutated_mod.get_global_var('func_2456')
call_2457 = func_2456_call()
output = call_2457
func_2458 = relay.Function([], output)
mutated_mod['func_2458'] = func_2458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_2472 = relay.TupleGetItem(func_1624_call(), 0)
call_2473 = relay.TupleGetItem(func_1625_call(), 0)
output = relay.Tuple([call_2472,])
output2 = relay.Tuple([call_2473,])
func_2474 = relay.Function([], output)
mod['func_2474'] = func_2474
mod = relay.transform.InferType()(mod)
output = func_2474()
func_2475 = relay.Function([], output)
mutated_mod['func_2475'] = func_2475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1895_call = mod.get_global_var('func_1895')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2545 = func_1895_call()
call_2546 = func_1895_call()
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_2551 = func_2210_call()
call_2552 = func_2210_call()
uop_2585 = relay.cosh(call_2551.astype('float64')) # shape=(4, 4, 8)
uop_2587 = relay.cosh(call_2552.astype('float64')) # shape=(4, 4, 8)
uop_2602 = relay.sinh(uop_2585.astype('float32')) # shape=(4, 4, 8)
uop_2604 = relay.sinh(uop_2587.astype('float32')) # shape=(4, 4, 8)
func_1653_call = mod.get_global_var('func_1653')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_2625 = relay.TupleGetItem(func_1653_call(), 0)
call_2626 = relay.TupleGetItem(func_1654_call(), 0)
bop_2629 = relay.multiply(uop_2585.astype('uint8'), relay.reshape(uop_2602.astype('uint8'), relay.shape_of(uop_2585))) # shape=(4, 4, 8)
bop_2632 = relay.multiply(uop_2587.astype('uint8'), relay.reshape(uop_2604.astype('uint8'), relay.shape_of(uop_2587))) # shape=(4, 4, 8)
output = relay.Tuple([call_2545,call_2625,bop_2629,])
output2 = relay.Tuple([call_2546,call_2626,bop_2632,])
func_2635 = relay.Function([], output)
mod['func_2635'] = func_2635
mod = relay.transform.InferType()(mod)
mutated_mod['func_2635'] = func_2635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2636 = func_2635_call()
output = call_2636
func_2637 = relay.Function([], output)
mutated_mod['func_2637'] = func_2637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2682 = relay.var("var_2682", dtype = "int64", shape = ())#candidate|2682|()|var|int64
var_2683 = relay.var("var_2683", dtype = "int64", shape = (14, 12, 4))#candidate|2683|(14, 12, 4)|var|int64
bop_2684 = relay.bitwise_and(var_2682.astype('int64'), var_2683.astype('int64')) # shape=(14, 12, 4)
uop_2699 = relay.erf(bop_2684.astype('float64')) # shape=(14, 12, 4)
output = relay.Tuple([uop_2699,])
output2 = relay.Tuple([uop_2699,])
func_2727 = relay.Function([var_2682,var_2683,], output)
mod['func_2727'] = func_2727
mod = relay.transform.InferType()(mod)
mutated_mod['func_2727'] = func_2727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2727_call = mutated_mod.get_global_var('func_2727')
var_2729 = relay.var("var_2729", dtype = "int64", shape = ())#candidate|2729|()|var|int64
var_2730 = relay.var("var_2730", dtype = "int64", shape = (14, 12, 4))#candidate|2730|(14, 12, 4)|var|int64
call_2728 = func_2727_call(var_2729,var_2730,)
output = call_2728
func_2731 = relay.Function([var_2729,var_2730,], output)
mutated_mod['func_2731'] = func_2731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mod.get_global_var('func_1653')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_2753 = relay.TupleGetItem(func_1653_call(), 0)
call_2754 = relay.TupleGetItem(func_1654_call(), 0)
var_2759 = relay.var("var_2759", dtype = "float32", shape = (4, 7, 8))#candidate|2759|(4, 7, 8)|var|float32
bop_2760 = relay.logical_and(call_2753.astype('bool'), var_2759.astype('bool')) # shape=(4, 7, 8)
bop_2763 = relay.logical_and(call_2754.astype('bool'), var_2759.astype('bool')) # shape=(4, 7, 8)
output = relay.Tuple([bop_2760,])
output2 = relay.Tuple([bop_2763,])
func_2794 = relay.Function([var_2759,], output)
mod['func_2794'] = func_2794
mod = relay.transform.InferType()(mod)
var_2795 = relay.var("var_2795", dtype = "float32", shape = (4, 7, 8))#candidate|2795|(4, 7, 8)|var|float32
output = func_2794(var_2795)
func_2796 = relay.Function([var_2795], output)
mutated_mod['func_2796'] = func_2796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2814 = relay.var("var_2814", dtype = "uint32", shape = ())#candidate|2814|()|var|uint32
var_2815 = relay.var("var_2815", dtype = "uint32", shape = (6, 7, 15))#candidate|2815|(6, 7, 15)|var|uint32
bop_2816 = relay.less(var_2814.astype('bool'), var_2815.astype('bool')) # shape=(6, 7, 15)
func_2107_call = mod.get_global_var('func_2107')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_2823 = func_2107_call()
call_2824 = func_2107_call()
bop_2830 = relay.floor_divide(var_2815.astype('float32'), relay.reshape(bop_2816.astype('float32'), relay.shape_of(var_2815))) # shape=(6, 7, 15)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_2834 = func_2210_call()
call_2835 = func_2210_call()
bop_2836 = relay.mod(call_2823.astype('float32'), var_2814.astype('float32')) # shape=(4, 1, 8)
bop_2839 = relay.mod(call_2824.astype('float32'), var_2814.astype('float32')) # shape=(4, 1, 8)
func_1098_call = mod.get_global_var('func_1098')
func_1102_call = mutated_mod.get_global_var('func_1102')
var_2841 = relay.var("var_2841", dtype = "float64", shape = (15, 45))#candidate|2841|(15, 45)|var|float64
call_2840 = func_1098_call(relay.reshape(var_2841.astype('float64'), [15, 15, 3]), relay.reshape(var_2841.astype('float64'), [15, 15, 3]), )
call_2842 = func_1098_call(relay.reshape(var_2841.astype('float64'), [15, 15, 3]), relay.reshape(var_2841.astype('float64'), [15, 15, 3]), )
func_1982_call = mod.get_global_var('func_1982')
func_1984_call = mutated_mod.get_global_var('func_1984')
call_2850 = func_1982_call()
call_2851 = func_1982_call()
output = relay.Tuple([bop_2830,call_2834,bop_2836,call_2840,var_2841,call_2850,])
output2 = relay.Tuple([bop_2830,call_2835,bop_2839,call_2842,var_2841,call_2851,])
func_2857 = relay.Function([var_2814,var_2815,var_2841,], output)
mod['func_2857'] = func_2857
mod = relay.transform.InferType()(mod)
mutated_mod['func_2857'] = func_2857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2857_call = mutated_mod.get_global_var('func_2857')
var_2859 = relay.var("var_2859", dtype = "uint32", shape = ())#candidate|2859|()|var|uint32
var_2860 = relay.var("var_2860", dtype = "uint32", shape = (6, 7, 15))#candidate|2860|(6, 7, 15)|var|uint32
var_2861 = relay.var("var_2861", dtype = "float64", shape = (15, 45))#candidate|2861|(15, 45)|var|float64
call_2858 = func_2857_call(var_2859,var_2860,var_2861,)
output = call_2858
func_2862 = relay.Function([var_2859,var_2860,var_2861,], output)
mutated_mod['func_2862'] = func_2862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1916_call = mutated_mod.get_global_var('func_1916')
call_2875 = relay.TupleGetItem(func_1915_call(), 0)
call_2876 = relay.TupleGetItem(func_1916_call(), 0)
output = relay.Tuple([call_2875,])
output2 = relay.Tuple([call_2876,])
func_2877 = relay.Function([], output)
mod['func_2877'] = func_2877
mod = relay.transform.InferType()(mod)
mutated_mod['func_2877'] = func_2877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2877_call = mutated_mod.get_global_var('func_2877')
call_2878 = func_2877_call()
output = call_2878
func_2879 = relay.Function([], output)
mutated_mod['func_2879'] = func_2879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_2937 = relay.TupleGetItem(func_1624_call(), 0)
call_2938 = relay.TupleGetItem(func_1625_call(), 0)
func_2115_call = mod.get_global_var('func_2115')
func_2117_call = mutated_mod.get_global_var('func_2117')
call_2950 = relay.TupleGetItem(func_2115_call(), 0)
call_2951 = relay.TupleGetItem(func_2117_call(), 0)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_2956 = relay.TupleGetItem(func_1560_call(), 1)
call_2957 = relay.TupleGetItem(func_1562_call(), 1)
output = relay.Tuple([call_2937,call_2950,call_2956,])
output2 = relay.Tuple([call_2938,call_2951,call_2957,])
func_2961 = relay.Function([], output)
mod['func_2961'] = func_2961
mod = relay.transform.InferType()(mod)
output = func_2961()
func_2962 = relay.Function([], output)
mutated_mod['func_2962'] = func_2962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2115_call = mod.get_global_var('func_2115')
func_2117_call = mutated_mod.get_global_var('func_2117')
call_2965 = relay.TupleGetItem(func_2115_call(), 0)
call_2966 = relay.TupleGetItem(func_2117_call(), 0)
output = call_2965
output2 = call_2966
func_2969 = relay.Function([], output)
mod['func_2969'] = func_2969
mod = relay.transform.InferType()(mod)
output = func_2969()
func_2970 = relay.Function([], output)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1895_call = mod.get_global_var('func_1895')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2999 = func_1895_call()
call_3000 = func_1895_call()
output = relay.Tuple([call_2999,])
output2 = relay.Tuple([call_3000,])
func_3008 = relay.Function([], output)
mod['func_3008'] = func_3008
mod = relay.transform.InferType()(mod)
mutated_mod['func_3008'] = func_3008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3008_call = mutated_mod.get_global_var('func_3008')
call_3009 = func_3008_call()
output = call_3009
func_3010 = relay.Function([], output)
mutated_mod['func_3010'] = func_3010
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3062 = relay.var("var_3062", dtype = "uint32", shape = (2, 6, 6))#candidate|3062|(2, 6, 6)|var|uint32
var_3063 = relay.var("var_3063", dtype = "uint32", shape = (2, 6, 6))#candidate|3063|(2, 6, 6)|var|uint32
bop_3064 = relay.minimum(var_3062.astype('uint32'), relay.reshape(var_3063.astype('uint32'), relay.shape_of(var_3062))) # shape=(2, 6, 6)
output = relay.Tuple([bop_3064,])
output2 = relay.Tuple([bop_3064,])
func_3084 = relay.Function([var_3062,var_3063,], output)
mod['func_3084'] = func_3084
mod = relay.transform.InferType()(mod)
var_3085 = relay.var("var_3085", dtype = "uint32", shape = (2, 6, 6))#candidate|3085|(2, 6, 6)|var|uint32
var_3086 = relay.var("var_3086", dtype = "uint32", shape = (2, 6, 6))#candidate|3086|(2, 6, 6)|var|uint32
output = func_3084(var_3085,var_3086,)
func_3087 = relay.Function([var_3085,var_3086,], output)
mutated_mod['func_3087'] = func_3087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2474_call = mod.get_global_var('func_2474')
func_2475_call = mutated_mod.get_global_var('func_2475')
call_3111 = relay.TupleGetItem(func_2474_call(), 0)
call_3112 = relay.TupleGetItem(func_2475_call(), 0)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_3149 = func_2969_call()
call_3150 = func_2969_call()
output = relay.Tuple([call_3111,call_3149,])
output2 = relay.Tuple([call_3112,call_3150,])
func_3151 = relay.Function([], output)
mod['func_3151'] = func_3151
mod = relay.transform.InferType()(mod)
mutated_mod['func_3151'] = func_3151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3151_call = mutated_mod.get_global_var('func_3151')
call_3152 = func_3151_call()
output = call_3152
func_3153 = relay.Function([], output)
mutated_mod['func_3153'] = func_3153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_3170 = relay.TupleGetItem(func_1624_call(), 0)
call_3171 = relay.TupleGetItem(func_1625_call(), 0)
output = call_3170
output2 = call_3171
func_3182 = relay.Function([], output)
mod['func_3182'] = func_3182
mod = relay.transform.InferType()(mod)
output = func_3182()
func_3183 = relay.Function([], output)
mutated_mod['func_3183'] = func_3183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_3202 = func_2210_call()
call_3203 = func_2210_call()
const_3204 = relay.const([[[True,True,False,True,True,True,False,True],[True,False,False,True,False,True,True,False],[True,True,False,True,False,False,False,True],[True,True,True,False,False,True,False,True]],[[False,False,True,True,True,True,True,True],[True,True,False,True,True,False,True,False],[True,True,True,False,False,True,True,True],[False,True,True,False,False,True,False,False]],[[True,True,True,False,False,False,True,False],[False,False,True,True,False,True,True,True],[False,False,True,False,True,True,True,True],[False,False,True,False,True,True,False,False]],[[False,True,True,True,False,False,True,False],[False,False,True,False,True,False,False,False],[False,True,False,True,False,False,False,False],[False,True,False,False,True,False,False,True]]], dtype = "bool")#candidate|3204|(4, 4, 8)|const|bool
bop_3205 = relay.bitwise_and(call_3202.astype('int64'), relay.reshape(const_3204.astype('int64'), relay.shape_of(call_3202))) # shape=(4, 4, 8)
bop_3208 = relay.bitwise_and(call_3203.astype('int64'), relay.reshape(const_3204.astype('int64'), relay.shape_of(call_3203))) # shape=(4, 4, 8)
func_1098_call = mod.get_global_var('func_1098')
func_1102_call = mutated_mod.get_global_var('func_1102')
const_3211 = relay.const([-9.512150,-9.142002,-6.795647,-7.294391,-7.924073,-5.025190,-6.749352,4.754046,2.765566,1.682329,-7.309439,7.687426,8.883934,-7.912383,8.749967,-7.848616,1.400527,2.104525,3.387574,3.881651,-5.566735,2.288182,1.826432,8.450542,8.950997,3.169368,1.411235,6.211569,0.966391,-6.708857,8.661986,-9.706905,1.869476,-4.819718,1.111876,-1.396664,-4.597306,-2.821676,-6.879853,-8.996998,-1.134564,9.854491,-0.403218,-3.717729,2.649654,-7.232409,-8.115545,6.065742,7.868487,-7.821941,9.081280,-5.536306,-8.823504,-9.590678,-5.414145,6.497077,-3.767297,1.286092,3.716725,1.874380,-1.453711,3.728207,-5.426825,-1.754970,-2.111449,8.155663,4.680436,2.777073,-9.469333,-1.643307,-2.223845,-9.287329,6.691024,7.941590,3.170590,9.178320,6.716014,-1.938954,8.644440,2.339942,-4.044447,9.205476,-7.058548,1.071031,-6.029350,8.056692,0.619657,-3.907959,9.236277,5.498207,-3.469290,-4.872949,5.845632,1.832078,2.268557,4.700143,3.899147,3.527640,6.805067,6.526524,6.326263,6.244411,-2.581755,7.612213,0.238645,-4.504253,2.980761,0.185912,-8.947104,8.726302,5.618010,3.625559,0.049352,-0.215337,8.807218,6.039445,6.234842,-8.432420,-1.390707,6.701570,-9.895339,4.830914,9.613085,4.559895,2.181828,0.039865,4.160742,-9.357369,-2.401755,5.044865,-5.910259,-8.457065,9.379049,1.729335,-9.608968,-8.617566,-4.195843,-9.579118,-5.585631,9.082320,-2.833235,4.721029,8.095354,-8.471406,-0.674530,-2.318323,-2.643650,-7.381512,4.878671,2.419056,9.004006,-2.712149,2.935623,2.508978,-3.287602,-7.172976,5.399415,-2.427808,3.728228,-9.452137,0.539047,-6.462479,5.057772,0.987419,-2.200789,-4.905400,-6.278483,5.503445,8.665284,-3.474115,-9.915138,-0.407186,-9.713980,-6.524320,-8.215521,9.614959,5.467878,5.485867,5.036585,1.515317,-5.529426,9.634155,5.371311,-4.933274,5.563266,-2.973737,1.746592,9.482028,-0.828317,5.951981,2.047702,-1.005473,-2.582944,9.480900,-9.808472,8.567436,6.748006,-8.907839,-2.496921,8.167383,1.275921,1.364943,3.503123,-8.561325,-1.975174,-4.199547,-4.135081,5.749162,-2.975841,-1.815202,9.547839,5.440801,-1.009845,8.802971,4.709702,-7.957150,6.665778,7.319801,9.837477,-9.927251,-1.658287,9.498575,9.360211,3.158734,8.479706,-4.134456,-2.933040,2.158322,2.937641,6.769885,-7.461961,4.096032,5.895728,-5.251645,-7.660230,-1.094093,8.517832,-5.577917,-7.682996,-9.852843,9.737121,0.514402,4.501983,2.177546,2.466311,7.224379,-5.069899,0.546202,4.233972,-1.616001,-1.501596,-9.587619,-0.030617,-5.271955,4.792171,2.349956,-6.570847,-4.961297,4.949962,-8.635103,-5.827467,-0.564416,0.391234,-0.304563,8.689461,-9.895945,0.795616,3.821702,2.608383,0.311333,1.402005,-8.639661,9.759457,2.436928,-2.009834,3.210279,9.160985,2.913283,-4.394787,7.199407,2.058079,8.083976,2.682287,-4.429402,5.647548,8.444105,-3.702148,-3.758137,-7.871618,3.550328,6.655709,7.134672,-1.713535,4.500524,-0.659766,4.684725,7.708529,-7.767178,3.727522,8.386652,-7.507632,8.161007,-6.767570,-2.162803,2.946340,8.987247,8.718423,1.744827,-2.699912,-8.909925,-8.435219,-9.003054,-0.931662,-4.198841,7.803624,-7.417881,-7.652532,7.289389,0.212666,2.808456,9.243349,-4.725797,7.405573,-0.870872,-6.346159,-4.505344,-7.321961,-5.192498,9.032303,8.093892,8.485293,6.742164,0.854523,-8.522684,-1.871951,-9.980158,7.771262,-7.334108,-8.161247,-5.816777,2.138275,2.334531,0.431730,0.731891,-2.458359,5.608785,-9.152991,1.969983,6.237816,8.644800,8.820100,6.079577,-0.120608,4.761638,5.080440,5.038977,-8.659710,-0.867078,7.185941,1.218405,-5.048420,9.454445,5.182282,9.296213,-2.825131,-2.706248,-8.603248,-7.658707,-8.892582,8.828046,6.631306,-3.104342,-9.487495,9.802507,-9.588303,7.889698,-8.549606,-8.649984,-7.227750,-5.694115,-8.886747,-9.098645,0.738991,9.265157,6.415032,3.349251,0.829277,-4.698142,-8.588511,6.933945,-1.501190,-5.152209,0.530103,-7.144775,-0.373641,7.756708,-7.392386,1.388135,-5.505467,2.995698,9.022555,2.205499,-6.037306,-9.382823,4.710036,-8.473868,8.359781,-3.905933,0.208069,-8.155699,-7.152501,-8.545013,3.173567,-7.226507,-8.638101,3.523520,-5.009710,-7.164550,8.037015,7.606427,4.492592,-0.209256,-5.637643,1.618992,-6.195940,2.014899,5.518756,3.095461,2.429858,4.297656,6.012634,-9.732303,2.633587,-0.550727,3.568875,1.856359,8.308947,4.602975,4.221824,7.962041,-6.902264,-2.369653,-5.756755,2.675369,9.959645,4.519404,0.506824,-3.013537,2.719955,6.429081,-0.047271,2.866835,2.318545,-8.981278,9.622211,-9.251979,-7.733907,-8.487906,-8.302397,0.842503,-1.684727,-5.446200,-3.656082,-5.479795,7.251988,-4.717680,-5.198853,-3.308018,3.875264,-8.938685,-7.485928,-2.003169,9.469873,-7.255129,-8.476826,7.342051,-6.455341,0.715510,-0.830619,-5.996793,0.251678,-7.060844,-6.337187,0.512721,7.321350,9.172195,-6.335614,-4.523646,-3.334827,8.695597,-8.730166,6.134259,-6.201729,1.925416,-3.861485,7.302173,6.648853,1.355827,-3.019185,0.541675,8.085657,1.073225,-9.239709,3.011017,-6.617761,-9.795989,-1.603846,-1.993701,-8.026713,8.284617,7.249318,-0.022190,-0.830755,5.196258,5.492831,-2.239016,2.629771,-4.610206,-1.239521,-3.072649,5.932430,7.014978,-7.725746,-5.980484,-3.841922,8.475826,-5.317661,-2.790638,9.887674,4.112688,-8.511859,9.697604,-1.663109,7.308410,-5.089636,0.922702,-4.961132,7.880429,-2.541040,8.146135,9.560061,7.670310,9.929335,9.544200,2.075084,1.319644,-9.932762,0.630849,-3.186555,0.254881,-3.533553,-2.636018,-5.531502,3.950249,-3.615713,8.479515,1.273491,4.160900,-6.446421,9.798019,-7.690471,7.078902,-7.659833,3.417238,6.318729,1.896722,5.904317,7.972440,3.670159,5.340557,5.146340,0.695953,7.753721,4.232531,7.564943,8.600758,8.905758,1.031918,6.753008,5.481048,5.631178,-7.239089,-0.856613,-0.043779,-9.535550,4.864365,-2.798025,-3.601962,-2.800905,9.685519,-1.079580,5.582162,9.074823,2.586230,1.112359,-1.674521,7.023124,4.680293,-7.923102,6.207736,5.806301,-2.966083,-3.371769,4.891785,4.793277,-6.838737,0.616755,3.510274,-0.093521,6.242700,7.081866,3.255240,-5.474065,5.285216,-8.466811,8.063434,9.071977,-1.236646,-2.785651,-5.108655,-6.544270,-9.443839,-1.802868,9.442559,-2.189103,-5.418500,-8.160445,5.882110,9.462102,1.063418,8.550391,3.068548,-2.051304,-3.524303,-9.872993,-9.211039,-7.051457,-5.346823,1.394171,0.785654,8.803125,0.378009,9.567926,-9.337057,3.186866,8.098708,8.844120,-8.664405,-2.590627,-6.670589,1.742993,7.921016,7.412187,3.171743,4.490090,9.855618,-7.282315,-4.906528,1.257279,-0.554918,-7.983583,2.258814,0.330644,-1.718923,5.067487,-7.648588,6.698523,-6.777668,4.722637,7.797377,-0.521489,8.183886,-3.686209,0.734854,9.867188], dtype = "float64")#candidate|3211|(675,)|const|float64
call_3210 = func_1098_call(relay.reshape(const_3211.astype('float64'), [15, 15, 3]), relay.reshape(const_3211.astype('float64'), [15, 15, 3]), )
call_3212 = func_1098_call(relay.reshape(const_3211.astype('float64'), [15, 15, 3]), relay.reshape(const_3211.astype('float64'), [15, 15, 3]), )
output = relay.Tuple([bop_3205,call_3210,const_3211,])
output2 = relay.Tuple([bop_3208,call_3212,const_3211,])
func_3222 = relay.Function([], output)
mod['func_3222'] = func_3222
mod = relay.transform.InferType()(mod)
output = func_3222()
func_3223 = relay.Function([], output)
mutated_mod['func_3223'] = func_3223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1799_call = mod.get_global_var('func_1799')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_3315 = relay.TupleGetItem(func_1799_call(), 0)
call_3316 = relay.TupleGetItem(func_1800_call(), 0)
output = call_3315
output2 = call_3316
func_3328 = relay.Function([], output)
mod['func_3328'] = func_3328
mod = relay.transform.InferType()(mod)
output = func_3328()
func_3329 = relay.Function([], output)
mutated_mod['func_3329'] = func_3329
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3332 = relay.var("var_3332", dtype = "float64", shape = (16, 10, 11))#candidate|3332|(16, 10, 11)|var|float64
uop_3333 = relay.cos(var_3332.astype('float64')) # shape=(16, 10, 11)
output = uop_3333
output2 = uop_3333
func_3339 = relay.Function([var_3332,], output)
mod['func_3339'] = func_3339
mod = relay.transform.InferType()(mod)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3340 = relay.var("var_3340", dtype = "float64", shape = (16, 10, 11))#candidate|3340|(16, 10, 11)|var|float64
func_3339_call = mutated_mod.get_global_var('func_3339')
call_3341 = func_3339_call(var_3340)
output = call_3341
func_3342 = relay.Function([var_3340], output)
mutated_mod['func_3342'] = func_3342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3408 = relay.var("var_3408", dtype = "float64", shape = (16, 3, 11))#candidate|3408|(16, 3, 11)|var|float64
uop_3409 = relay.erf(var_3408.astype('float64')) # shape=(16, 3, 11)
func_1098_call = mod.get_global_var('func_1098')
func_1102_call = mutated_mod.get_global_var('func_1102')
var_3417 = relay.var("var_3417", dtype = "float64", shape = (75, 9))#candidate|3417|(75, 9)|var|float64
call_3416 = func_1098_call(relay.reshape(var_3417.astype('float64'), [15, 15, 3]), relay.reshape(var_3417.astype('float64'), [15, 15, 3]), )
call_3418 = func_1098_call(relay.reshape(var_3417.astype('float64'), [15, 15, 3]), relay.reshape(var_3417.astype('float64'), [15, 15, 3]), )
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_3425 = func_2969_call()
call_3426 = func_2969_call()
func_2107_call = mod.get_global_var('func_2107')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_3430 = func_2107_call()
call_3431 = func_2107_call()
func_2857_call = mod.get_global_var('func_2857')
func_2862_call = mutated_mod.get_global_var('func_2862')
var_3434 = relay.var("var_3434", dtype = "uint32", shape = ())#candidate|3434|()|var|uint32
const_3435 = relay.const([[10,-9,3,2,-8,7,-3,4,2,-6,-7,3,-9,-6,4,3,1,4,9,-3,2,-6,5,-7,-3,9,-10,-6,9,-9,1,8,7,-7,10,5,2,-7,3,-5,-6,8,7,6,-5,2,10,9,1,-4,-8,3,2,6,-1,-6,5,5,-8,-1,-8,1,2,3,-8,6,-8,5,-6,-9,-3,-6,-7,-2,3,-7,6,-9,10,2,1,-3,7,-2,10,-2,4,-3,2,-7,-1,-6,-4,5,-8,-1,7,9,5,-8,1,-8,-9,-8,-6,-6,1,4,-6,9,-8,-3,8,8,1,6,6,-9,-7,-6,3,-10,3,-10,-4,2],[-1,4,7,1,-8,4,-5,8,1,4,3,10,9,4,-9,5,5,9,3,-2,9,4,-8,-3,-4,4,-3,5,2,-5,-8,-3,2,-7,-2,-6,6,2,-4,-4,3,8,-10,-8,-2,5,7,-5,8,4,2,8,3,3,-8,-6,2,-7,-6,-5,1,-2,-6,7,-10,3,-2,9,4,1,-6,-2,-2,1,5,-8,-5,-5,7,6,-3,-9,-1,-10,-10,-4,-9,-7,5,-9,-5,7,5,-1,-3,10,-4,-1,-9,10,2,-8,-10,2,-6,-6,-7,-8,-4,-7,-4,3,7,-4,4,8,8,7,-4,1,-1,8,9,-4,-3,-2],[-9,-6,8,5,-4,8,-10,9,-5,1,-9,-5,4,-3,-10,5,-9,-10,-3,-1,-9,-10,-3,2,-1,-5,3,-9,9,6,-9,3,-6,-9,7,7,-6,-6,7,-8,-2,-9,4,1,-1,7,10,2,-2,-4,-8,6,9,4,9,-4,-6,3,2,5,3,-5,-9,-8,7,-9,-4,-2,6,-8,-9,-3,7,7,2,-5,2,-7,-9,4,-6,5,-10,2,3,3,6,9,4,5,7,-2,-3,4,5,-10,-2,2,1,10,-5,8,-8,7,4,-1,-3,2,3,8,1,-2,2,-7,-9,-7,-9,-6,-1,-3,6,-5,-7,6,10,-2],[3,-6,-8,-8,-1,1,-1,10,-1,-6,-5,9,8,3,-9,-1,-7,-9,-1,1,-3,3,-1,-3,-4,-1,-2,2,-6,-7,8,-9,-4,-1,5,-6,-8,10,2,2,-6,6,7,-7,-10,10,-2,-6,-7,-1,1,-1,-8,8,8,-5,-7,10,6,-7,-4,8,-7,-2,1,9,3,-3,-4,-9,5,5,-5,-5,4,1,8,4,4,-10,-1,1,10,5,8,-6,-9,4,8,7,3,2,7,-7,-1,-10,-7,-6,-6,2,-6,9,-9,-1,4,3,-6,-9,10,-6,4,-3,8,1,-2,-9,1,-6,-1,-1,3,-2,-6,3,-4,7],[4,10,-1,5,-4,-4,2,-7,-6,-10,2,-9,-1,-4,-1,5,-5,7,-6,1,-9,-6,6,-6,4,3,-5,4,-5,1,3,1,-2,4,-3,9,2,2,1,-10,1,-10,-4,-2,-5,4,10,-4,6,-2,2,8,9,2,8,-6,3,-7,2,-7,4,-3,-9,-7,-6,3,-2,-4,4,2,5,-1,8,7,-7,5,8,-6,-8,3,3,1,-8,8,-10,4,-10,8,-4,8,-9,-5,-2,5,3,3,3,-3,1,-3,-2,10,3,-2,5,8,-2,3,3,5,4,-4,-3,8,-8,9,-9,4,9,8,-5,-7,1,-2,-8,4]], dtype = "uint32")#candidate|3435|(5, 126)|const|uint32
call_3433 = relay.TupleGetItem(func_2857_call(relay.reshape(var_3434.astype('uint32'), []), relay.reshape(const_3435.astype('uint32'), [6, 7, 15]), relay.reshape(call_3416.astype('float64'), [15, 45]), ), 0)
call_3436 = relay.TupleGetItem(func_2862_call(relay.reshape(var_3434.astype('uint32'), []), relay.reshape(const_3435.astype('uint32'), [6, 7, 15]), relay.reshape(call_3416.astype('float64'), [15, 45]), ), 0)
uop_3439 = relay.acos(uop_3409.astype('float32')) # shape=(16, 3, 11)
bop_3451 = relay.less(uop_3439.astype('bool'), relay.reshape(uop_3409.astype('bool'), relay.shape_of(uop_3439))) # shape=(16, 3, 11)
bop_3480 = relay.add(uop_3409.astype('uint16'), relay.reshape(var_3408.astype('uint16'), relay.shape_of(uop_3409))) # shape=(16, 3, 11)
func_1098_call = mod.get_global_var('func_1098')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_3486 = func_1098_call(relay.reshape(var_3417.astype('float64'), [15, 15, 3]), relay.reshape(call_3416.astype('float64'), [15, 15, 3]), )
call_3487 = func_1098_call(relay.reshape(var_3417.astype('float64'), [15, 15, 3]), relay.reshape(call_3416.astype('float64'), [15, 15, 3]), )
uop_3488 = relay.cosh(uop_3439.astype('float32')) # shape=(16, 3, 11)
func_3008_call = mod.get_global_var('func_3008')
func_3010_call = mutated_mod.get_global_var('func_3010')
call_3492 = relay.TupleGetItem(func_3008_call(), 0)
call_3493 = relay.TupleGetItem(func_3010_call(), 0)
func_2107_call = mod.get_global_var('func_2107')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_3500 = func_2107_call()
call_3501 = func_2107_call()
uop_3506 = relay.tan(uop_3488.astype('float64')) # shape=(16, 3, 11)
func_2794_call = mod.get_global_var('func_2794')
func_2796_call = mutated_mod.get_global_var('func_2796')
const_3509 = relay.const([3.087850,2.790373,3.438162,-3.677011,-8.549605,-7.023837,-2.478185,-7.757552,-9.660567,0.740275,-1.473685,3.093570,-7.546019,-2.717014,-8.351555,-0.885779,-5.248892,-8.278166,-0.066139,5.974850,5.112751,7.724809,-4.567946,-8.861898,3.074045,9.514885,-9.373289,5.523907,4.092219,-2.698203,2.903525,4.947130,4.115981,3.957464,-7.715122,-9.859695,-5.636738,2.877928,8.140880,2.453335,2.007659,-1.336779,6.984175,-6.441858,5.644482,-6.976933,9.000424,-8.894514,8.953993,-6.533216,-4.883764,0.252296,2.797987,1.973720,-5.585559,2.718686,7.009998,8.964489,3.541105,5.830574,0.386104,4.804202,2.206035,7.821073,0.316017,-2.539572,-2.583069,-0.684856,-3.491679,-8.184678,-9.329985,-0.527493,0.359303,-9.869975,9.888854,7.495389,6.031305,5.298573,-7.061414,-5.679339,4.874102,8.770258,-7.966566,5.607946,-1.117425,-7.881278,4.272079,-9.766360,-9.274909,-4.993984,2.577356,-6.104582,-0.795570,3.692683,-3.184742,4.889527,7.105165,6.897840,-2.610645,-6.471261,-5.680489,-9.715192,-7.088001,-1.256702,2.537533,-4.087928,-5.917728,-7.087686,5.318605,4.371882,2.495307,1.991991,-2.538647,-9.805290,1.068922,6.551340,4.135851,1.488389,-2.798103,1.861912,-5.256935,-9.055924,-3.561671,-8.076325,6.292445,-8.947674,-5.720246,4.417278,-9.477093,8.753654,-4.644578,-2.019850,-9.837972,4.888715,9.417561,1.721640,9.806467,9.603259,-9.324653,1.088052,4.645289,-0.278688,3.756012,-2.205658,3.859718,2.214519,-6.736215,-7.622614,2.524215,-3.213777,-5.199415,1.273021,6.949990,2.737481,-2.186272,4.506998,-6.360727,3.548839,0.143334,-9.351782,2.206297,6.233302,3.983570,4.525864,7.076623,5.876225,9.383853,8.111546,6.992334,-0.654571,3.230350,-6.919122,5.415607,9.160990,1.188280,1.122306,9.630984,7.342916,-1.790527,-6.957739,-4.930427,6.153797,-3.828883,-0.179550,-4.460431,8.558521,4.795013,6.361050,3.491093,9.646665,-6.967917,8.355390,4.274173,-3.089583,8.979746,-1.543406,2.357680,5.753100,-4.689221,1.691637,-4.410114,6.239024,-5.458568,-6.690393,6.302905,6.289304,2.851559,-8.869554,6.513092,-4.897282,1.316790,-4.760930,0.919394,-3.523793,4.032645,-7.898567,-0.662018,7.947727,-0.973665,-6.190890,-0.559008,-5.577294,-5.147712,-2.320937], dtype = "float32")#candidate|3509|(224,)|const|float32
call_3508 = relay.TupleGetItem(func_2794_call(relay.reshape(const_3509.astype('float32'), [4, 7, 8])), 0)
call_3510 = relay.TupleGetItem(func_2796_call(relay.reshape(const_3509.astype('float32'), [4, 7, 8])), 0)
bop_3515 = relay.logical_and(uop_3488.astype('bool'), relay.reshape(uop_3506.astype('bool'), relay.shape_of(uop_3488))) # shape=(16, 3, 11)
func_3084_call = mod.get_global_var('func_3084')
func_3087_call = mutated_mod.get_global_var('func_3087')
var_3519 = relay.var("var_3519", dtype = "uint32", shape = (1, 72))#candidate|3519|(1, 72)|var|uint32
call_3518 = relay.TupleGetItem(func_3084_call(relay.reshape(var_3519.astype('uint32'), [2, 6, 6]), relay.reshape(var_3519.astype('uint32'), [2, 6, 6]), ), 0)
call_3520 = relay.TupleGetItem(func_3087_call(relay.reshape(var_3519.astype('uint32'), [2, 6, 6]), relay.reshape(var_3519.astype('uint32'), [2, 6, 6]), ), 0)
uop_3523 = relay.sigmoid(uop_3506.astype('float32')) # shape=(16, 3, 11)
output = relay.Tuple([call_3416,var_3417,call_3425,call_3430,call_3433,var_3434,const_3435,bop_3451,bop_3480,call_3486,call_3492,call_3500,call_3508,const_3509,bop_3515,call_3518,var_3519,uop_3523,])
output2 = relay.Tuple([call_3418,var_3417,call_3426,call_3431,call_3436,var_3434,const_3435,bop_3451,bop_3480,call_3487,call_3493,call_3501,call_3510,const_3509,bop_3515,call_3520,var_3519,uop_3523,])
func_3526 = relay.Function([var_3408,var_3417,var_3434,var_3519,], output)
mod['func_3526'] = func_3526
mod = relay.transform.InferType()(mod)
var_3527 = relay.var("var_3527", dtype = "float64", shape = (16, 3, 11))#candidate|3527|(16, 3, 11)|var|float64
var_3528 = relay.var("var_3528", dtype = "float64", shape = (75, 9))#candidate|3528|(75, 9)|var|float64
var_3529 = relay.var("var_3529", dtype = "uint32", shape = ())#candidate|3529|()|var|uint32
var_3530 = relay.var("var_3530", dtype = "uint32", shape = (1, 72))#candidate|3530|(1, 72)|var|uint32
output = func_3526(var_3527,var_3528,var_3529,var_3530,)
func_3531 = relay.Function([var_3527,var_3528,var_3529,var_3530,], output)
mutated_mod['func_3531'] = func_3531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_3549 = relay.TupleGetItem(func_1560_call(), 1)
call_3550 = relay.TupleGetItem(func_1562_call(), 1)
var_3558 = relay.var("var_3558", dtype = "float32", shape = (14, 2, 2))#candidate|3558|(14, 2, 2)|var|float32
bop_3559 = relay.logical_or(call_3549.astype('bool'), relay.reshape(var_3558.astype('bool'), relay.shape_of(call_3549))) # shape=(14, 2, 2)
bop_3562 = relay.logical_or(call_3550.astype('bool'), relay.reshape(var_3558.astype('bool'), relay.shape_of(call_3550))) # shape=(14, 2, 2)
output = relay.Tuple([bop_3559,])
output2 = relay.Tuple([bop_3562,])
func_3565 = relay.Function([var_3558,], output)
mod['func_3565'] = func_3565
mod = relay.transform.InferType()(mod)
mutated_mod['func_3565'] = func_3565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3566 = relay.var("var_3566", dtype = "float32", shape = (14, 2, 2))#candidate|3566|(14, 2, 2)|var|float32
func_3565_call = mutated_mod.get_global_var('func_3565')
call_3567 = func_3565_call(var_3566)
output = call_3567
func_3568 = relay.Function([var_3566], output)
mutated_mod['func_3568'] = func_3568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3636 = relay.var("var_3636", dtype = "float32", shape = (14, 15, 11))#candidate|3636|(14, 15, 11)|var|float32
uop_3637 = relay.asin(var_3636.astype('float32')) # shape=(14, 15, 11)
output = uop_3637
output2 = uop_3637
func_3643 = relay.Function([var_3636,], output)
mod['func_3643'] = func_3643
mod = relay.transform.InferType()(mod)
mutated_mod['func_3643'] = func_3643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3644 = relay.var("var_3644", dtype = "float32", shape = (14, 15, 11))#candidate|3644|(14, 15, 11)|var|float32
func_3643_call = mutated_mod.get_global_var('func_3643')
call_3645 = func_3643_call(var_3644)
output = call_3645
func_3646 = relay.Function([var_3644], output)
mutated_mod['func_3646'] = func_3646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3222_call = mod.get_global_var('func_3222')
func_3223_call = mutated_mod.get_global_var('func_3223')
call_3721 = relay.TupleGetItem(func_3222_call(), 0)
call_3722 = relay.TupleGetItem(func_3223_call(), 0)
func_1374_call = mod.get_global_var('func_1374')
func_1377_call = mutated_mod.get_global_var('func_1377')
var_3747 = relay.var("var_3747", dtype = "float64", shape = (35,))#candidate|3747|(35,)|var|float64
var_3748 = relay.var("var_3748", dtype = "float64", shape = (210,))#candidate|3748|(210,)|var|float64
call_3746 = func_1374_call(relay.reshape(var_3747.astype('float64'), [1, 5, 7]), relay.reshape(var_3748.astype('float64'), [6, 5, 7]), )
call_3749 = func_1374_call(relay.reshape(var_3747.astype('float64'), [1, 5, 7]), relay.reshape(var_3748.astype('float64'), [6, 5, 7]), )
output = relay.Tuple([call_3721,call_3746,var_3747,var_3748,])
output2 = relay.Tuple([call_3722,call_3749,var_3747,var_3748,])
func_3756 = relay.Function([var_3747,var_3748,], output)
mod['func_3756'] = func_3756
mod = relay.transform.InferType()(mod)
var_3757 = relay.var("var_3757", dtype = "float64", shape = (35,))#candidate|3757|(35,)|var|float64
var_3758 = relay.var("var_3758", dtype = "float64", shape = (210,))#candidate|3758|(210,)|var|float64
output = func_3756(var_3757,var_3758,)
func_3759 = relay.Function([var_3757,var_3758,], output)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_3784 = relay.TupleGetItem(func_2635_call(), 1)
call_3785 = relay.TupleGetItem(func_2637_call(), 1)
uop_3791 = relay.atanh(call_3784.astype('float32')) # shape=(4, 1, 8)
uop_3793 = relay.atanh(call_3785.astype('float32')) # shape=(4, 1, 8)
func_2857_call = mod.get_global_var('func_2857')
func_2862_call = mutated_mod.get_global_var('func_2862')
const_3802 = relay.const(-3, dtype = "uint32")#candidate|3802|()|const|uint32
var_3803 = relay.var("var_3803", dtype = "uint32", shape = (630,))#candidate|3803|(630,)|var|uint32
var_3804 = relay.var("var_3804", dtype = "float64", shape = (675,))#candidate|3804|(675,)|var|float64
call_3801 = relay.TupleGetItem(func_2857_call(relay.reshape(const_3802.astype('uint32'), []), relay.reshape(var_3803.astype('uint32'), [6, 7, 15]), relay.reshape(var_3804.astype('float64'), [15, 45]), ), 3)
call_3805 = relay.TupleGetItem(func_2862_call(relay.reshape(const_3802.astype('uint32'), []), relay.reshape(var_3803.astype('uint32'), [6, 7, 15]), relay.reshape(var_3804.astype('float64'), [15, 45]), ), 3)
func_3643_call = mod.get_global_var('func_3643')
func_3646_call = mutated_mod.get_global_var('func_3646')
var_3807 = relay.var("var_3807", dtype = "float32", shape = (14, 165))#candidate|3807|(14, 165)|var|float32
call_3806 = func_3643_call(relay.reshape(var_3807.astype('float32'), [14, 15, 11]))
call_3808 = func_3643_call(relay.reshape(var_3807.astype('float32'), [14, 15, 11]))
func_1799_call = mod.get_global_var('func_1799')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_3809 = relay.TupleGetItem(func_1799_call(), 0)
call_3810 = relay.TupleGetItem(func_1800_call(), 0)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_3813 = func_2969_call()
call_3814 = func_2969_call()
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_3817 = func_2969_call()
call_3818 = func_2969_call()
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_3819 = relay.TupleGetItem(func_1560_call(), 3)
call_3820 = relay.TupleGetItem(func_1562_call(), 3)
var_3821 = relay.var("var_3821", dtype = "float32", shape = (4, 12, 8))#candidate|3821|(4, 12, 8)|var|float32
bop_3822 = relay.subtract(uop_3791.astype('uint32'), var_3821.astype('uint32')) # shape=(4, 12, 8)
bop_3825 = relay.subtract(uop_3793.astype('uint32'), var_3821.astype('uint32')) # shape=(4, 12, 8)
output = relay.Tuple([call_3801,const_3802,var_3803,var_3804,call_3806,var_3807,call_3809,call_3813,call_3817,call_3819,bop_3822,])
output2 = relay.Tuple([call_3805,const_3802,var_3803,var_3804,call_3808,var_3807,call_3810,call_3814,call_3818,call_3820,bop_3825,])
func_3832 = relay.Function([var_3803,var_3804,var_3807,var_3821,], output)
mod['func_3832'] = func_3832
mod = relay.transform.InferType()(mod)
var_3833 = relay.var("var_3833", dtype = "uint32", shape = (630,))#candidate|3833|(630,)|var|uint32
var_3834 = relay.var("var_3834", dtype = "float64", shape = (675,))#candidate|3834|(675,)|var|float64
var_3835 = relay.var("var_3835", dtype = "float32", shape = (14, 165))#candidate|3835|(14, 165)|var|float32
var_3836 = relay.var("var_3836", dtype = "float32", shape = (4, 12, 8))#candidate|3836|(4, 12, 8)|var|float32
output = func_3832(var_3833,var_3834,var_3835,var_3836,)
func_3837 = relay.Function([var_3833,var_3834,var_3835,var_3836,], output)
mutated_mod['func_3837'] = func_3837
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3872 = relay.var("var_3872", dtype = "float64", shape = ())#candidate|3872|()|var|float64
var_3873 = relay.var("var_3873", dtype = "float64", shape = (12, 1))#candidate|3873|(12, 1)|var|float64
bop_3874 = relay.divide(var_3872.astype('float64'), var_3873.astype('float64')) # shape=(12, 1)
func_2727_call = mod.get_global_var('func_2727')
func_2731_call = mutated_mod.get_global_var('func_2731')
const_3889 = relay.const([[6,9],[-10,2],[-1,-6],[-8,10],[6,-1],[-6,-10],[-2,3],[-7,-1],[5,-6],[10,-4],[7,-9],[-6,-8],[2,3],[8,5],[10,-7],[7,2],[7,-6],[8,-9],[-9,9],[-9,10],[-4,-9],[6,-2],[2,-5],[-7,-2],[5,-1],[-7,5],[1,1],[-8,-9],[-2,7],[-2,6],[8,4],[6,-10],[-3,3],[3,6],[-1,4],[-8,6],[-3,9],[3,9],[7,-9],[-9,-4],[-1,-10],[7,10],[5,-1],[-9,4],[-1,-7],[-10,-8],[-2,-10],[5,1],[2,-10],[-1,9],[4,-8],[7,5],[7,-4],[10,2],[10,-3],[5,-1],[-9,-6],[-9,4],[-4,-6],[-6,-3],[-5,-10],[1,-7],[5,6],[-7,-8],[5,-7],[-10,-10],[5,7],[7,4],[7,6],[-5,8],[4,9],[10,8],[-3,2],[9,-8],[-5,8],[5,3],[6,-1],[-2,-1],[5,-8],[7,-10],[4,-2],[3,-9],[-6,-2],[9,-2],[-5,-5],[4,-3],[-6,-3],[8,5],[-7,-7],[8,-9],[-3,5],[8,-8],[-10,8],[-1,-2],[4,1],[-9,6],[-3,6],[-10,-6],[-8,6],[8,-7],[-9,4],[-9,-6],[-2,-7],[-5,-6],[-7,-2],[7,-10],[10,-1],[2,-9],[-4,-10],[9,-6],[-4,9],[7,6],[10,-10],[7,-2],[-8,5],[2,10],[7,8],[3,-5],[8,-4],[1,-6],[-1,8],[8,5],[6,5],[-6,-3],[-2,-10],[-7,-4],[1,8],[2,-5],[-4,-1],[6,8],[9,-7],[8,-9],[2,-9],[-6,-4],[3,-1],[9,9],[10,4],[9,-5],[7,5],[-3,-8],[-6,6],[10,-7],[1,9],[3,-3],[-10,-6],[-1,7],[-4,-3],[-7,-3],[-8,2],[-8,-10],[-6,-9],[8,1],[-9,5],[9,-7],[-4,-1],[-3,-1],[3,8],[4,-10],[-8,-9],[-3,4],[-9,-3],[1,-1],[-2,6],[-9,6],[-2,-3],[4,-7],[6,-1],[-6,2],[-6,-4],[-7,-1],[-9,4],[-6,10],[-7,-4],[-10,-7],[7,-5],[3,-10],[4,-5],[1,10],[5,-8],[6,-10],[-4,-6],[-3,1],[1,3],[-7,2],[-7,2],[6,-7],[-8,3],[4,-9],[-8,-3],[7,1],[1,-1],[-8,-10],[1,4],[8,10],[8,-1],[7,-1],[6,7],[9,1],[-5,10],[5,-10],[-4,4],[8,9],[7,8],[-2,10],[6,-1],[-7,-5],[-5,6],[7,-6],[2,4],[-6,-6],[2,1],[-5,-4],[-8,6],[-9,8],[7,4],[9,6],[4,1],[-2,-6],[-1,10],[6,8],[3,9],[-6,6],[10,9],[1,-1],[5,4],[-9,2],[5,-9],[-10,-7],[5,-2],[5,-6],[7,-8],[-9,1],[3,1],[-8,-3],[7,-8],[-10,-7],[-2,-6],[9,6],[7,4],[3,2],[-5,-7],[6,-7],[-3,-9],[9,10],[8,-2],[7,-3],[-2,-2],[4,-10],[-5,-1],[-10,-5],[1,-5],[-3,-4],[10,8],[-4,4],[9,2],[8,-2],[10,5],[2,-2],[-5,5],[-4,6],[5,-3],[-6,4],[3,-1],[-7,-5],[6,8],[9,1],[6,9],[-5,4],[-1,-8],[6,-4],[-9,9],[8,6],[1,2],[-3,-3],[8,-9],[-10,-2],[3,-8],[5,5],[7,-1],[-5,8],[10,-7],[10,-2],[-3,1],[5,4],[5,-7],[6,-2],[6,-7],[-2,-9],[3,-3],[-6,-3],[-7,4],[-8,-2],[-10,1],[10,8],[-9,-9],[2,-3],[-3,-9],[-3,-2],[7,-4],[4,-7],[-2,-10],[-4,-10],[-7,-5],[-8,3],[-9,2],[7,4],[-10,2],[-2,-8],[-9,-1],[-1,7],[-10,9],[5,9],[6,-5],[7,-10],[6,3],[-9,6],[-3,1],[6,4],[-4,-5],[-4,-10],[8,-5],[5,-6],[-5,2],[-1,-4],[-3,-10],[6,-6],[8,-7],[8,7],[5,2],[7,-4],[6,10],[2,4],[10,-4],[-2,5],[4,6],[-1,7]], dtype = "int64")#candidate|3889|(336, 2)|const|int64
call_3888 = relay.TupleGetItem(func_2727_call(relay.reshape(var_3872.astype('int64'), []), relay.reshape(const_3889.astype('int64'), [14, 12, 4]), ), 0)
call_3890 = relay.TupleGetItem(func_2731_call(relay.reshape(var_3872.astype('int64'), []), relay.reshape(const_3889.astype('int64'), [14, 12, 4]), ), 0)
bop_3903 = relay.maximum(bop_3874.astype('uint32'), call_3888.astype('uint32')) # shape=(14, 12, 4)
bop_3906 = relay.maximum(bop_3874.astype('uint32'), call_3890.astype('uint32')) # shape=(14, 12, 4)
func_2877_call = mod.get_global_var('func_2877')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_3911 = relay.TupleGetItem(func_2877_call(), 0)
call_3912 = relay.TupleGetItem(func_2879_call(), 0)
output = relay.Tuple([const_3889,bop_3903,call_3911,])
output2 = relay.Tuple([const_3889,bop_3906,call_3912,])
func_3929 = relay.Function([var_3872,var_3873,], output)
mod['func_3929'] = func_3929
mod = relay.transform.InferType()(mod)
var_3930 = relay.var("var_3930", dtype = "float64", shape = ())#candidate|3930|()|var|float64
var_3931 = relay.var("var_3931", dtype = "float64", shape = (12, 1))#candidate|3931|(12, 1)|var|float64
output = func_3929(var_3930,var_3931,)
func_3932 = relay.Function([var_3930,var_3931,], output)
mutated_mod['func_3932'] = func_3932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2246_call = mod.get_global_var('func_2246')
func_2247_call = mutated_mod.get_global_var('func_2247')
call_3966 = relay.TupleGetItem(func_2246_call(), 0)
call_3967 = relay.TupleGetItem(func_2247_call(), 0)
output = call_3966
output2 = call_3967
func_3981 = relay.Function([], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mutated_mod.get_global_var('func_3981')
call_3982 = func_3981_call()
output = call_3982
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2185_call = mod.get_global_var('func_2185')
func_2186_call = mutated_mod.get_global_var('func_2186')
call_3995 = relay.TupleGetItem(func_2185_call(), 1)
call_3996 = relay.TupleGetItem(func_2186_call(), 1)
uop_3999 = relay.asin(call_3995.astype('float32')) # shape=(14, 2, 2)
uop_4001 = relay.asin(call_3996.astype('float32')) # shape=(14, 2, 2)
output = uop_3999
output2 = uop_4001
func_4002 = relay.Function([], output)
mod['func_4002'] = func_4002
mod = relay.transform.InferType()(mod)
mutated_mod['func_4002'] = func_4002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4002_call = mutated_mod.get_global_var('func_4002')
call_4003 = func_4002_call()
output = call_4003
func_4004 = relay.Function([], output)
mutated_mod['func_4004'] = func_4004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2246_call = mod.get_global_var('func_2246')
func_2247_call = mutated_mod.get_global_var('func_2247')
call_4008 = relay.TupleGetItem(func_2246_call(), 1)
call_4009 = relay.TupleGetItem(func_2247_call(), 1)
func_3151_call = mod.get_global_var('func_3151')
func_3153_call = mutated_mod.get_global_var('func_3153')
call_4016 = relay.TupleGetItem(func_3151_call(), 0)
call_4017 = relay.TupleGetItem(func_3153_call(), 0)
output = relay.Tuple([call_4008,call_4016,])
output2 = relay.Tuple([call_4009,call_4017,])
func_4036 = relay.Function([], output)
mod['func_4036'] = func_4036
mod = relay.transform.InferType()(mod)
output = func_4036()
func_4037 = relay.Function([], output)
mutated_mod['func_4037'] = func_4037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2456_call = mod.get_global_var('func_2456')
func_2458_call = mutated_mod.get_global_var('func_2458')
call_4042 = func_2456_call()
call_4043 = func_2456_call()
output = relay.Tuple([call_4042,])
output2 = relay.Tuple([call_4043,])
func_4053 = relay.Function([], output)
mod['func_4053'] = func_4053
mod = relay.transform.InferType()(mod)
output = func_4053()
func_4054 = relay.Function([], output)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3182_call = mod.get_global_var('func_3182')
func_3183_call = mutated_mod.get_global_var('func_3183')
call_4057 = func_3182_call()
call_4058 = func_3182_call()
output = call_4057
output2 = call_4058
func_4060 = relay.Function([], output)
mod['func_4060'] = func_4060
mod = relay.transform.InferType()(mod)
mutated_mod['func_4060'] = func_4060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mutated_mod.get_global_var('func_4060')
call_4061 = func_4060_call()
output = call_4061
func_4062 = relay.Function([], output)
mutated_mod['func_4062'] = func_4062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_4063 = relay.TupleGetItem(func_2961_call(), 2)
call_4064 = relay.TupleGetItem(func_2962_call(), 2)
output = call_4063
output2 = call_4064
func_4065 = relay.Function([], output)
mod['func_4065'] = func_4065
mod = relay.transform.InferType()(mod)
output = func_4065()
func_4066 = relay.Function([], output)
mutated_mod['func_4066'] = func_4066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2474_call = mod.get_global_var('func_2474')
func_2475_call = mutated_mod.get_global_var('func_2475')
call_4074 = relay.TupleGetItem(func_2474_call(), 0)
call_4075 = relay.TupleGetItem(func_2475_call(), 0)
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_4077 = relay.TupleGetItem(func_2961_call(), 2)
call_4078 = relay.TupleGetItem(func_2962_call(), 2)
func_1743_call = mod.get_global_var('func_1743')
func_1746_call = mutated_mod.get_global_var('func_1746')
const_4083 = relay.const([False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False], dtype = "bool")#candidate|4083|(675,)|const|bool
call_4082 = relay.TupleGetItem(func_1743_call(relay.reshape(const_4083.astype('bool'), [15, 15, 3])), 1)
call_4084 = relay.TupleGetItem(func_1746_call(relay.reshape(const_4083.astype('bool'), [15, 15, 3])), 1)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_4108 = relay.TupleGetItem(func_1560_call(), 0)
call_4109 = relay.TupleGetItem(func_1562_call(), 0)
bop_4111 = relay.maximum(const_4083.astype('float64'), relay.reshape(call_4082.astype('float64'), relay.shape_of(const_4083))) # shape=(675,)
bop_4114 = relay.maximum(const_4083.astype('float64'), relay.reshape(call_4084.astype('float64'), relay.shape_of(const_4083))) # shape=(675,)
var_4117 = relay.var("var_4117", dtype = "float32", shape = (14, 2, 2))#candidate|4117|(14, 2, 2)|var|float32
bop_4118 = relay.greater(call_4077.astype('bool'), relay.reshape(var_4117.astype('bool'), relay.shape_of(call_4077))) # shape=(14, 2, 2)
bop_4121 = relay.greater(call_4078.astype('bool'), relay.reshape(var_4117.astype('bool'), relay.shape_of(call_4078))) # shape=(14, 2, 2)
output = relay.Tuple([call_4074,call_4108,bop_4111,bop_4118,])
output2 = relay.Tuple([call_4075,call_4109,bop_4114,bop_4121,])
func_4130 = relay.Function([var_4117,], output)
mod['func_4130'] = func_4130
mod = relay.transform.InferType()(mod)
mutated_mod['func_4130'] = func_4130
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4131 = relay.var("var_4131", dtype = "float32", shape = (14, 2, 2))#candidate|4131|(14, 2, 2)|var|float32
func_4130_call = mutated_mod.get_global_var('func_4130')
call_4132 = func_4130_call(var_4131)
output = call_4132
func_4133 = relay.Function([var_4131], output)
mutated_mod['func_4133'] = func_4133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4174 = relay.var("var_4174", dtype = "float64", shape = (5, 9, 12))#candidate|4174|(5, 9, 12)|var|float64
var_4175 = relay.var("var_4175", dtype = "float64", shape = (5, 9, 12))#candidate|4175|(5, 9, 12)|var|float64
bop_4176 = relay.divide(var_4174.astype('float64'), relay.reshape(var_4175.astype('float64'), relay.shape_of(var_4174))) # shape=(5, 9, 12)
output = relay.Tuple([bop_4176,])
output2 = relay.Tuple([bop_4176,])
func_4185 = relay.Function([var_4174,var_4175,], output)
mod['func_4185'] = func_4185
mod = relay.transform.InferType()(mod)
var_4186 = relay.var("var_4186", dtype = "float64", shape = (5, 9, 12))#candidate|4186|(5, 9, 12)|var|float64
var_4187 = relay.var("var_4187", dtype = "float64", shape = (5, 9, 12))#candidate|4187|(5, 9, 12)|var|float64
output = func_4185(var_4186,var_4187,)
func_4188 = relay.Function([var_4186,var_4187,], output)
mutated_mod['func_4188'] = func_4188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4002_call = mod.get_global_var('func_4002')
func_4004_call = mutated_mod.get_global_var('func_4004')
call_4196 = func_4002_call()
call_4197 = func_4002_call()
output = call_4196
output2 = call_4197
func_4201 = relay.Function([], output)
mod['func_4201'] = func_4201
mod = relay.transform.InferType()(mod)
output = func_4201()
func_4202 = relay.Function([], output)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4232 = relay.var("var_4232", dtype = "uint32", shape = (15, 5, 16))#candidate|4232|(15, 5, 16)|var|uint32
var_4233 = relay.var("var_4233", dtype = "uint32", shape = (15, 5, 16))#candidate|4233|(15, 5, 16)|var|uint32
bop_4234 = relay.minimum(var_4232.astype('uint32'), relay.reshape(var_4233.astype('uint32'), relay.shape_of(var_4232))) # shape=(15, 5, 16)
func_4036_call = mod.get_global_var('func_4036')
func_4037_call = mutated_mod.get_global_var('func_4037')
call_4243 = relay.TupleGetItem(func_4036_call(), 0)
call_4244 = relay.TupleGetItem(func_4037_call(), 0)
func_4002_call = mod.get_global_var('func_4002')
func_4004_call = mutated_mod.get_global_var('func_4004')
call_4255 = func_4002_call()
call_4256 = func_4002_call()
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_4280 = relay.TupleGetItem(func_2635_call(), 1)
call_4281 = relay.TupleGetItem(func_2637_call(), 1)
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_4290 = relay.TupleGetItem(func_2635_call(), 1)
call_4291 = relay.TupleGetItem(func_2637_call(), 1)
uop_4300 = relay.sin(bop_4234.astype('float64')) # shape=(15, 5, 16)
output = relay.Tuple([call_4243,call_4255,call_4280,call_4290,uop_4300,])
output2 = relay.Tuple([call_4244,call_4256,call_4281,call_4291,uop_4300,])
func_4326 = relay.Function([var_4232,var_4233,], output)
mod['func_4326'] = func_4326
mod = relay.transform.InferType()(mod)
mutated_mod['func_4326'] = func_4326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4326_call = mutated_mod.get_global_var('func_4326')
var_4328 = relay.var("var_4328", dtype = "uint32", shape = (15, 5, 16))#candidate|4328|(15, 5, 16)|var|uint32
var_4329 = relay.var("var_4329", dtype = "uint32", shape = (15, 5, 16))#candidate|4329|(15, 5, 16)|var|uint32
call_4327 = func_4326_call(var_4328,var_4329,)
output = call_4327
func_4330 = relay.Function([var_4328,var_4329,], output)
mutated_mod['func_4330'] = func_4330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mod.get_global_var('func_4060')
func_4062_call = mutated_mod.get_global_var('func_4062')
call_4358 = func_4060_call()
call_4359 = func_4060_call()
func_1915_call = mod.get_global_var('func_1915')
func_1916_call = mutated_mod.get_global_var('func_1916')
call_4362 = relay.TupleGetItem(func_1915_call(), 0)
call_4363 = relay.TupleGetItem(func_1916_call(), 0)
func_2794_call = mod.get_global_var('func_2794')
func_2796_call = mutated_mod.get_global_var('func_2796')
var_4366 = relay.var("var_4366", dtype = "float32", shape = (224,))#candidate|4366|(224,)|var|float32
call_4365 = relay.TupleGetItem(func_2794_call(relay.reshape(var_4366.astype('float32'), [4, 7, 8])), 0)
call_4367 = relay.TupleGetItem(func_2796_call(relay.reshape(var_4366.astype('float32'), [4, 7, 8])), 0)
func_2246_call = mod.get_global_var('func_2246')
func_2247_call = mutated_mod.get_global_var('func_2247')
call_4369 = relay.TupleGetItem(func_2246_call(), 0)
call_4370 = relay.TupleGetItem(func_2247_call(), 0)
func_3526_call = mod.get_global_var('func_3526')
func_3531_call = mutated_mod.get_global_var('func_3531')
const_4376 = relay.const([2.603997,-3.810774,1.116055,-2.782518,-7.564367,-5.152893,-9.777765,4.203771,-3.469135,-1.896959,-4.916941,9.315130,0.487698,7.941512,-8.958363,5.910849,-4.130698,0.199071,6.077179,-2.579823,4.137150,-9.387568,-8.913838,6.556085,1.393215,6.210296,-7.088012,-7.968672,-1.660681,3.960616,6.004883,6.417202,-8.128014,8.882082,-4.393178,3.895376,-8.274379,1.385469,4.373084,-1.404194,-6.682428,1.230883,-3.016559,-7.096545,6.012831,7.777786,0.543818,-3.729222,9.356686,1.654433,6.042148,-4.224156,-3.884417,-2.829626,-3.696916,6.889663,-6.660841,3.778678,-5.842197,-0.879460,6.431400,-4.624893,-1.081815,-6.491630,5.493373,1.487727,8.720424,-8.157006,5.504581,4.218145,9.937121,-9.034060,4.404919,0.426739,1.597983,-3.783713,5.243302,5.569834,7.315931,-2.017275,7.200185,-1.959759,8.288457,8.150591,1.010650,-9.008275,4.027652,9.091734,-6.025995,-2.665214,-6.994771,7.058432,-9.711744,8.992530,-3.766003,-1.057265,5.640158,-3.078292,7.600350,7.267342,5.597669,-5.584363,-8.181155,5.724953,-5.778933,-2.932000,-5.764380,-5.978739,4.702750,1.665445,8.983855,3.369065,-7.726645,9.482794,2.615855,-2.866864,-3.704003,3.447636,-2.421460,-4.084451,9.987472,9.715375,-4.415821,-7.902461,6.931495,8.309100,6.865412,9.572649,3.975274,3.701734,6.142023,1.854732,-8.375848,-2.125731,6.134763,8.576707,-6.478738,1.398881,2.080217,-2.391347,2.596647,0.067543,-0.598572,-5.597865,-2.744335,8.241074,0.984279,7.631817,3.375264,3.146246,-6.475159,2.644408,4.499658,2.094033,-9.345616,-2.565923,-8.543019,-1.179810,-3.183477,-1.396156,5.312182,3.209709,-7.545289,-3.100024,-2.514967,-6.666588,6.892291,8.929257,-8.562937,4.866909,-9.080855,-9.179122,2.484527,-8.004746,1.335267,-1.211042,-8.635160,-4.751449,3.308893,-3.822375,-7.617917,-7.649238,8.611654,-2.252525,7.765687,-6.009017,6.854961,-6.122559,-4.164175,0.493759,4.739517,-6.980293,3.247379,-3.837763,7.002883,-6.070678,0.400923,6.625257,4.682510,8.105999,5.289781,-8.493158,-5.622642,-7.863113,2.657308,5.195328,9.977248,-1.189534,-6.060470,8.358613,-9.855904,3.273923,6.952642,-3.798285,-0.519375,6.947079,8.694383,8.451404,-9.150525,-7.759711,9.189556,-7.729221,8.970556,4.658634,6.628059,-8.422977,-2.891633,4.367026,-5.080705,-4.139147,8.146115,8.675765,-7.032447,4.968148,-3.074017,-2.947252,7.006096,-2.411659,-2.871495,-4.570513,0.297440,5.764246,-7.804430,8.134752,-9.153634,0.972884,2.512665,-1.840989,2.804730,-6.951843,-9.698436,5.114098,7.245763,-0.589511,4.578448,2.487493,0.073765,7.016215,3.391061,6.924736,-0.106486,-1.195324,4.604188,2.447104,-7.456186,-8.146778,3.629080,-6.267202,0.619621,-3.667519,0.607025,8.780924,-7.105343,-1.099637,6.488919,9.596495,-5.481637,0.569137,-4.550315,8.570131,-8.730411,8.633124,9.338700,-2.228955,6.239630,-2.245683,-7.224225,0.295394,-3.564341,4.702604,6.916950,1.249543,-3.395446,8.062113,-9.045591,4.476756,-9.568690,-4.937710,-8.773053,9.795462,5.396835,-7.150564,9.413483,-7.360979,9.118499,-4.771853,-6.029202,-9.054848,-7.615613,5.039361,-8.610533,-2.350042,-8.016784,4.277686,9.006938,-1.230203,-5.117148,9.688743,-4.110378,7.553306,5.370320,2.868324,6.018241,-2.713473,2.135837,-1.603699,-3.340730,5.090466,9.639814,1.744684,7.094260,1.367700,-7.987723,9.000130,-7.611057,-7.489380,-1.441547,6.241442,7.327096,-3.576381,-1.266563,3.347851,4.595086,4.763512,4.674225,5.576846,-2.146820,-7.249005,3.344372,9.099398,-6.969528,4.219629,3.639269,-7.977463,-9.674565,-4.834660,-2.696217,9.580891,-4.174987,-9.225405,4.996799,-6.487280,2.964317,-8.926971,-3.355339,-8.665837,6.630489,-4.395254,7.525561,-3.007615,7.914917,-5.198685,-8.048339,2.157886,-4.235708,-0.811709,7.587118,4.044870,8.546740,-3.931592,6.967803,-4.347568,-2.088228,-2.042600,0.471949,-0.363630,4.530223,-6.888649,-9.787824,-5.018621,-4.742632,5.522657,8.948818,-1.001710,-3.017507,-4.400383,0.925595,9.093407,1.055170,0.344016,-3.201621,7.971419,-9.119860,4.140435,4.849525,0.822705,-1.562239,-8.530747,8.752387,-0.607499,1.140423,-5.360088,8.982226,-6.269439,9.310973,7.510392,3.203052,1.340967,3.024806,4.642899,-9.574466,-6.262314,2.742524,-1.172288,2.450081,-8.788593,1.491218,5.399053,-0.064048,-8.698872,-7.106940,0.914917,-5.304250,9.294843,3.116948,8.759112,-4.411135,-8.605657,-1.080908,-7.809778,8.667762,-9.036961,4.121314,0.188666,1.461428,2.365405,-8.283916,-6.044280,1.509542,-1.033491,-8.286809,-3.919488,2.277394,-5.571647,1.496976,6.179876,1.843940,-4.561962,8.036421,8.582300,5.913150,-0.454666,8.351043,-2.343466,1.434491,-7.284710,-6.033765,-2.732338,6.856406,1.903406,4.993721,-4.050162,-7.518577,-6.208110,-5.239582,4.999044,-8.125769,8.111217,-1.877884,4.821874,-5.961920,9.551480,-5.884658,-5.670819,-2.662216,6.374459,-9.303833,-5.107799,-0.307823,1.078154,-2.410276,-4.892893,-7.122673,8.648213,6.336002,-6.591871,-9.911925,1.577692,8.399637,-2.250855,5.146623,-5.262663,2.499666,5.514969,8.156363,3.087370,3.988995,-9.310796,1.248245,-1.954308,-5.443664,9.082532,-1.333341,-5.996368,-3.189639,4.371158,-5.838189,-7.419720,-7.668741,2.113343,-7.897119,-0.768819,-9.962268,8.117124,-7.785157,-8.754119,3.670369,0.828935], dtype = "float64")#candidate|4376|(528,)|const|float64
var_4377 = relay.var("var_4377", dtype = "float64", shape = (675,))#candidate|4377|(675,)|var|float64
var_4378 = relay.var("var_4378", dtype = "uint32", shape = ())#candidate|4378|()|var|uint32
const_4379 = relay.const([[-3,7,4,2,3,4,3,-8,7,-3,-5,2],[2,-4,1,2,-5,-3,-4,6,-10,-9,-10,6],[-10,-4,2,1,-4,-2,4,-1,2,-1,9,-4],[-6,6,1,-5,10,5,9,-8,2,-8,-2,7],[-4,-10,6,4,8,-9,-1,-9,-6,-5,-4,-8],[2,5,8,10,10,7,-6,9,-2,-3,5,-5]], dtype = "uint32")#candidate|4379|(6, 12)|const|uint32
call_4375 = relay.TupleGetItem(func_3526_call(relay.reshape(const_4376.astype('float64'), [16, 3, 11]), relay.reshape(var_4377.astype('float64'), [75, 9]), relay.reshape(var_4378.astype('uint32'), []), relay.reshape(const_4379.astype('uint32'), [1, 72]), ), 15)
call_4380 = relay.TupleGetItem(func_3531_call(relay.reshape(const_4376.astype('float64'), [16, 3, 11]), relay.reshape(var_4377.astype('float64'), [75, 9]), relay.reshape(var_4378.astype('uint32'), []), relay.reshape(const_4379.astype('uint32'), [1, 72]), ), 15)
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_4381 = relay.TupleGetItem(func_2961_call(), 1)
call_4382 = relay.TupleGetItem(func_2962_call(), 1)
output = relay.Tuple([call_4358,call_4362,call_4365,var_4366,call_4369,call_4375,const_4376,var_4377,var_4378,const_4379,call_4381,])
output2 = relay.Tuple([call_4359,call_4363,call_4367,var_4366,call_4370,call_4380,const_4376,var_4377,var_4378,const_4379,call_4382,])
func_4401 = relay.Function([var_4366,var_4377,var_4378,], output)
mod['func_4401'] = func_4401
mod = relay.transform.InferType()(mod)
mutated_mod['func_4401'] = func_4401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4401_call = mutated_mod.get_global_var('func_4401')
var_4403 = relay.var("var_4403", dtype = "float32", shape = (224,))#candidate|4403|(224,)|var|float32
var_4404 = relay.var("var_4404", dtype = "float64", shape = (675,))#candidate|4404|(675,)|var|float64
var_4405 = relay.var("var_4405", dtype = "uint32", shape = ())#candidate|4405|()|var|uint32
call_4402 = func_4401_call(var_4403,var_4404,var_4405,)
output = call_4402
func_4406 = relay.Function([var_4403,var_4404,var_4405,], output)
mutated_mod['func_4406'] = func_4406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_4546 = relay.TupleGetItem(func_2961_call(), 0)
call_4547 = relay.TupleGetItem(func_2962_call(), 0)
output = call_4546
output2 = call_4547
func_4564 = relay.Function([], output)
mod['func_4564'] = func_4564
mod = relay.transform.InferType()(mod)
output = func_4564()
func_4565 = relay.Function([], output)
mutated_mod['func_4565'] = func_4565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_4582 = relay.TupleGetItem(func_1829_call(), 0)
call_4583 = relay.TupleGetItem(func_1831_call(), 0)
uop_4584 = relay.acos(call_4582.astype('float32')) # shape=(4, 1, 8)
uop_4586 = relay.acos(call_4583.astype('float32')) # shape=(4, 1, 8)
func_2727_call = mod.get_global_var('func_2727')
func_2731_call = mutated_mod.get_global_var('func_2731')
const_4592 = relay.const(4, dtype = "int64")#candidate|4592|()|const|int64
const_4593 = relay.const([1,7,-1,8,-10,4,-7,-9,-4,4,5,7,8,-9,1,7,-10,-3,3,2,2,-5,-7,-5,-3,3,6,-9,5,1,1,-1,-4,5,-8,1,5,8,-2,-2,-1,-2,-4,-3,8,6,4,4,2,7,6,-1,-4,2,-1,1,-1,8,4,6,-9,-3,10,3,7,-3,6,4,4,-7,10,6,1,-7,-9,-8,5,-1,1,8,-4,10,6,3,10,4,8,-1,8,-5,-3,5,-8,-3,-2,6,-4,7,2,2,10,4,-10,8,-7,2,9,7,4,6,-3,-2,-1,-8,9,-5,-8,8,5,3,-10,-9,-4,8,-8,-6,7,7,8,-10,-5,-7,-3,-8,-2,10,8,3,-8,2,5,7,5,-9,9,-10,-4,7,4,8,8,8,-9,-10,1,-5,9,10,5,-6,9,-9,3,-10,3,2,6,-9,-2,6,-10,-2,10,-2,-1,9,4,-3,-8,-5,3,-4,9,5,-4,-7,-9,-5,10,8,-8,3,7,-1,3,7,5,-4,-9,-6,-10,-7,-3,-2,2,6,8,-1,9,1,-8,-7,-2,-7,-2,3,-7,4,5,-3,-7,6,-2,10,7,-3,-2,7,-3,-4,-9,-8,-9,4,-10,2,10,3,-3,5,-4,6,-1,1,-9,-9,-4,-3,-9,9,-8,5,9,9,-10,-1,-5,2,1,-9,10,7,5,7,8,3,6,-3,-7,6,-9,4,5,-9,1,7,6,-5,3,-4,9,9,7,-2,-6,-2,7,-8,-1,-9,5,-4,-9,1,-1,4,-2,7,5,-4,8,-6,9,7,1,6,3,6,-9,3,1,1,-10,-3,-10,6,10,-4,3,2,-9,-9,-8,-2,1,-8,5,-4,-10,10,3,-7,-7,5,-2,6,-5,6,2,-10,-5,3,-8,5,-7,7,2,-4,-6,-10,6,-2,5,-4,-7,-9,-3,-2,-1,-10,-3,-8,-2,3,1,-8,1,6,9,-2,4,-9,-4,-9,-10,-5,7,-8,-6,-9,-6,2,9,5,7,4,-9,-10,6,9,-6,6,8,2,-7,-8,8,-2,9,-6,-7,10,3,-10,-7,4,-5,-9,-4,-6,-2,6,6,8,5,4,4,9,-3,-8,-8,-8,-5,-6,7,-2,6,-10,5,-8,4,4,7,9,2,2,2,-3,-4,5,-10,-10,-4,9,-2,10,10,-6,-7,6,-6,9,8,-4,4,-4,8,-1,8,-2,10,6,7,-4,9,-4,-8,-3,-9,-9,-8,-7,10,-9,-1,-9,-4,-8,9,5,-4,2,-6,-10,-4,9,-3,8,-6,2,-7,-8,-5,2,-2,1,8,2,10,8,-1,6,3,9,-1,9,-9,-1,-5,8,9,-5,-3,-10,9,5,-5,5,-4,-7,5,-3,5,9,-6,-9,-6,-2,1,10,-10,-1,-7,-2,1,6,-9,2,-2,4,-10,2,7,-3,-8,10,9,4,8,-6,9,-6,-10,10,9,-1,7,5,9,-4,-2,-6,6,6,8,-6,4,3,2,6,-7,2,-10,10,4,8,-6,8,4,7,-8,7,5,-5,-5,-8,-8,6,7,9,8,9,2,8,-3,-8,-8,-4,8,9,2,4,8,-10,-6,6,8,1,-3,6,4,9,-2,4,-2,-1,-8,6,7,-1,-7,-10,-4,-5,-10,5,8,7,-8,-9,-1,7,-7,7,9,8,7,-2,-1,-8,-9,-6,-8,6,1,6,-6,-3,-6,-9,-8,-2,7,8,1,8,10,7,-6,-3,8,10,2,9,2,2,6,-7,-8,-10,2,6], dtype = "int64")#candidate|4593|(672,)|const|int64
call_4591 = relay.TupleGetItem(func_2727_call(relay.reshape(const_4592.astype('int64'), []), relay.reshape(const_4593.astype('int64'), [14, 12, 4]), ), 0)
call_4594 = relay.TupleGetItem(func_2731_call(relay.reshape(const_4592.astype('int64'), []), relay.reshape(const_4593.astype('int64'), [14, 12, 4]), ), 0)
bop_4595 = relay.logical_or(uop_4584.astype('bool'), const_4592.astype('bool')) # shape=(4, 1, 8)
bop_4598 = relay.logical_or(uop_4586.astype('bool'), const_4592.astype('bool')) # shape=(4, 1, 8)
output = relay.Tuple([call_4591,const_4593,bop_4595,])
output2 = relay.Tuple([call_4594,const_4593,bop_4598,])
func_4602 = relay.Function([], output)
mod['func_4602'] = func_4602
mod = relay.transform.InferType()(mod)
mutated_mod['func_4602'] = func_4602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4602_call = mutated_mod.get_global_var('func_4602')
call_4603 = func_4602_call()
output = call_4603
func_4604 = relay.Function([], output)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mod.get_global_var('func_4060')
func_4062_call = mutated_mod.get_global_var('func_4062')
call_4607 = func_4060_call()
call_4608 = func_4060_call()
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_4613 = relay.TupleGetItem(func_2961_call(), 1)
call_4614 = relay.TupleGetItem(func_2962_call(), 1)
output = relay.Tuple([call_4607,call_4613,])
output2 = relay.Tuple([call_4608,call_4614,])
func_4620 = relay.Function([], output)
mod['func_4620'] = func_4620
mod = relay.transform.InferType()(mod)
mutated_mod['func_4620'] = func_4620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4620_call = mutated_mod.get_global_var('func_4620')
call_4621 = func_4620_call()
output = call_4621
func_4622 = relay.Function([], output)
mutated_mod['func_4622'] = func_4622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1982_call = mod.get_global_var('func_1982')
func_1984_call = mutated_mod.get_global_var('func_1984')
call_4626 = func_1982_call()
call_4627 = func_1982_call()
output = relay.Tuple([call_4626,])
output2 = relay.Tuple([call_4627,])
func_4629 = relay.Function([], output)
mod['func_4629'] = func_4629
mod = relay.transform.InferType()(mod)
mutated_mod['func_4629'] = func_4629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4629_call = mutated_mod.get_global_var('func_4629')
call_4630 = func_4629_call()
output = call_4630
func_4631 = relay.Function([], output)
mutated_mod['func_4631'] = func_4631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3151_call = mod.get_global_var('func_3151')
func_3153_call = mutated_mod.get_global_var('func_3153')
call_4659 = relay.TupleGetItem(func_3151_call(), 0)
call_4660 = relay.TupleGetItem(func_3153_call(), 0)
func_1374_call = mod.get_global_var('func_1374')
func_1377_call = mutated_mod.get_global_var('func_1377')
const_4662 = relay.const([7.394714,2.704173,-5.165281,4.817266,6.385369,0.920683,5.660927,-2.222969,-1.122193,4.662612,-2.661198,0.274526,-8.585522,-2.140429,-6.753260,5.384062,-3.010076,1.307926,0.128171,4.920416,1.364055,-9.114193,-0.079154,4.620794,0.091356,-0.852082,2.060671,-9.500386,-4.961490,5.545185,-4.255932,5.301175,-3.742023,1.210259,4.717773], dtype = "float64")#candidate|4662|(35,)|const|float64
var_4663 = relay.var("var_4663", dtype = "float64", shape = (210,))#candidate|4663|(210,)|var|float64
call_4661 = func_1374_call(relay.reshape(const_4662.astype('float64'), [1, 5, 7]), relay.reshape(var_4663.astype('float64'), [6, 5, 7]), )
call_4664 = func_1374_call(relay.reshape(const_4662.astype('float64'), [1, 5, 7]), relay.reshape(var_4663.astype('float64'), [6, 5, 7]), )
output = relay.Tuple([call_4659,call_4661,const_4662,var_4663,])
output2 = relay.Tuple([call_4660,call_4664,const_4662,var_4663,])
func_4666 = relay.Function([var_4663,], output)
mod['func_4666'] = func_4666
mod = relay.transform.InferType()(mod)
mutated_mod['func_4666'] = func_4666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4667 = relay.var("var_4667", dtype = "float64", shape = (210,))#candidate|4667|(210,)|var|float64
func_4666_call = mutated_mod.get_global_var('func_4666')
call_4668 = func_4666_call(var_4667)
output = call_4668
func_4669 = relay.Function([var_4667], output)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2877_call = mod.get_global_var('func_2877')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_4713 = relay.TupleGetItem(func_2877_call(), 0)
call_4714 = relay.TupleGetItem(func_2879_call(), 0)
var_4720 = relay.var("var_4720", dtype = "float32", shape = (4, 4, 8))#candidate|4720|(4, 4, 8)|var|float32
bop_4721 = relay.power(call_4713.astype('float32'), var_4720.astype('float32')) # shape=(4, 4, 8)
bop_4724 = relay.power(call_4714.astype('float32'), var_4720.astype('float32')) # shape=(4, 4, 8)
output = bop_4721
output2 = bop_4724
func_4727 = relay.Function([var_4720,], output)
mod['func_4727'] = func_4727
mod = relay.transform.InferType()(mod)
mutated_mod['func_4727'] = func_4727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4728 = relay.var("var_4728", dtype = "float32", shape = (4, 4, 8))#candidate|4728|(4, 4, 8)|var|float32
func_4727_call = mutated_mod.get_global_var('func_4727')
call_4729 = func_4727_call(var_4728)
output = call_4729
func_4730 = relay.Function([var_4728], output)
mutated_mod['func_4730'] = func_4730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_4748 = relay.TupleGetItem(func_2635_call(), 0)
call_4749 = relay.TupleGetItem(func_2637_call(), 0)
const_4751 = relay.const([[[-6.540316,0.206195],[5.235350,-8.130696]],[[7.532226,0.955263],[-8.742239,3.906422]],[[-3.947979,-3.118857],[2.495233,-4.477294]],[[-1.473943,-2.795476],[-4.809261,-2.901007]],[[9.088046,-8.887599],[8.057861,4.640274]],[[2.052990,-0.187681],[3.723897,-7.296693]],[[7.353734,-7.529500],[-2.850800,-9.373453]],[[-6.974100,1.872071],[-2.436923,0.501067]],[[6.914541,-3.787534],[4.942722,2.605697]],[[-1.957386,-2.497408],[0.715610,-8.538530]],[[1.880080,9.313145],[6.235411,-3.532656]],[[7.083915,-3.922395],[4.279339,6.692240]],[[1.903356,-8.947656],[-0.159294,-5.904590]],[[7.419057,-6.450511],[3.302115,0.219884]]], dtype = "float32")#candidate|4751|(14, 2, 2)|const|float32
bop_4752 = relay.bitwise_and(call_4748.astype('uint64'), relay.reshape(const_4751.astype('uint64'), relay.shape_of(call_4748))) # shape=(14, 2, 2)
bop_4755 = relay.bitwise_and(call_4749.astype('uint64'), relay.reshape(const_4751.astype('uint64'), relay.shape_of(call_4749))) # shape=(14, 2, 2)
output = relay.Tuple([bop_4752,])
output2 = relay.Tuple([bop_4755,])
func_4764 = relay.Function([], output)
mod['func_4764'] = func_4764
mod = relay.transform.InferType()(mod)
mutated_mod['func_4764'] = func_4764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4764_call = mutated_mod.get_global_var('func_4764')
call_4765 = func_4764_call()
output = call_4765
func_4766 = relay.Function([], output)
mutated_mod['func_4766'] = func_4766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_4828 = relay.TupleGetItem(func_1624_call(), 1)
call_4829 = relay.TupleGetItem(func_1625_call(), 1)
output = relay.Tuple([call_4828,])
output2 = relay.Tuple([call_4829,])
func_4834 = relay.Function([], output)
mod['func_4834'] = func_4834
mod = relay.transform.InferType()(mod)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4834_call = mutated_mod.get_global_var('func_4834')
call_4835 = func_4834_call()
output = call_4835
func_4836 = relay.Function([], output)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2246_call = mod.get_global_var('func_2246')
func_2247_call = mutated_mod.get_global_var('func_2247')
call_4837 = relay.TupleGetItem(func_2246_call(), 0)
call_4838 = relay.TupleGetItem(func_2247_call(), 0)
uop_4849 = relay.exp(call_4837.astype('float32')) # shape=(4, 1, 8)
uop_4851 = relay.exp(call_4838.astype('float32')) # shape=(4, 1, 8)
output = relay.Tuple([uop_4849,])
output2 = relay.Tuple([uop_4851,])
func_4852 = relay.Function([], output)
mod['func_4852'] = func_4852
mod = relay.transform.InferType()(mod)
output = func_4852()
func_4853 = relay.Function([], output)
mutated_mod['func_4853'] = func_4853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4876 = func_3981_call()
call_4877 = func_3981_call()
output = call_4876
output2 = call_4877
func_4882 = relay.Function([], output)
mod['func_4882'] = func_4882
mod = relay.transform.InferType()(mod)
output = func_4882()
func_4883 = relay.Function([], output)
mutated_mod['func_4883'] = func_4883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mod.get_global_var('func_3328')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_4889 = func_3328_call()
call_4890 = func_3328_call()
output = call_4889
output2 = call_4890
func_4892 = relay.Function([], output)
mod['func_4892'] = func_4892
mod = relay.transform.InferType()(mod)
mutated_mod['func_4892'] = func_4892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4892_call = mutated_mod.get_global_var('func_4892')
call_4893 = func_4892_call()
output = call_4893
func_4894 = relay.Function([], output)
mutated_mod['func_4894'] = func_4894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5024 = relay.var("var_5024", dtype = "float32", shape = (1, 16, 4))#candidate|5024|(1, 16, 4)|var|float32
const_5025 = relay.const([[[8.894178,1.535036,-2.491379,-8.050969],[-2.379653,-5.758592,-3.291504,6.063915],[-1.065776,-4.769925,-3.378721,-5.117009],[-5.843008,-2.687046,-2.698465,-9.262733],[-5.766167,6.318307,-4.854471,-9.756149],[6.490347,0.231814,-4.822842,5.541198],[-5.079362,-6.386201,-3.026222,-1.615746],[-7.140185,2.420710,-2.200677,1.310126],[-7.024847,-2.671201,-4.619217,9.828038],[0.359276,0.478437,2.636853,-0.239478],[-1.023678,-6.290284,9.027567,-2.649753],[-1.547390,-9.304718,2.474629,0.970465],[-1.398017,-6.090932,-5.691453,-1.074486],[8.527953,-1.390628,-3.851637,-6.225248],[1.419975,-5.596987,1.340131,1.522920],[-0.108525,5.877683,8.109900,4.223658]],[[-8.961279,-8.441009,-6.268146,-3.377743],[-9.499040,-1.538327,2.120029,-3.015713],[-8.618027,1.106106,8.646800,0.154886],[-3.093024,1.675006,8.241149,1.200138],[3.916526,8.161823,-2.506912,2.969644],[-8.229129,-3.340155,-6.752102,-7.185937],[9.104667,3.931028,-7.506271,-8.347128],[0.206049,-7.301903,2.535780,-5.657800],[4.128366,-8.377018,1.535862,1.348206],[6.834110,3.280176,-4.600738,-1.660800],[0.235409,-9.245160,-8.281193,-4.815088],[-9.572614,9.216047,-8.743562,-8.128513],[1.825066,7.560770,-6.078464,-5.695205],[-5.947866,-5.580524,9.009597,-1.112247],[-4.399574,9.872340,-8.500146,-1.041850],[-4.034451,-6.473330,1.929985,9.407082]],[[1.423524,0.821510,8.813477,6.235459],[2.764497,-4.919802,9.613432,8.895255],[5.575819,-7.138073,-2.212860,-5.372872],[-1.803702,3.358156,-1.180861,-8.875045],[8.382730,1.176219,6.258102,0.285571],[-3.013322,-1.903247,-6.933951,8.672996],[-2.388559,0.161784,-0.945822,5.302978],[-0.925669,-5.799312,8.385263,-0.187597],[-5.413143,3.569172,2.646171,-0.905016],[-1.322069,4.455424,-6.717011,-5.398900],[-9.748868,9.094674,-6.815985,-1.995289],[8.237518,6.063112,9.504461,-1.971763],[9.725176,-3.433551,-7.106860,4.760322],[6.252786,5.210983,9.557104,-3.814284],[-0.258324,5.096490,-8.317631,6.093717],[-5.610587,0.402057,3.964648,-1.150788]],[[8.724445,6.212858,9.049795,5.770048],[3.882143,4.713445,-7.205436,-4.072770],[6.641602,8.341881,6.535642,-4.907544],[7.892538,-3.158277,9.025019,-7.045594],[0.086652,-4.202110,-0.089080,2.597934],[-8.149041,-9.467421,-9.138639,1.641880],[-8.577626,7.130530,-9.729235,-4.260689],[8.149434,-8.277125,2.937493,-5.821201],[-9.581167,9.264189,-8.005616,-3.496116],[0.208039,5.567296,4.492269,-3.746828],[-1.755190,-4.090769,3.225104,-3.302465],[7.674927,1.925684,7.953555,3.153427],[-4.236763,-6.232647,7.952802,7.406815],[-5.120567,-0.856965,-8.423542,9.263069],[-6.421737,1.499282,-5.108534,2.987747],[-7.641467,-3.605459,-3.079394,1.799980]],[[5.466832,2.476560,-6.556705,2.710557],[9.654179,-6.316039,-8.314457,-7.769071],[7.420176,-1.821996,-3.692187,5.252621],[-9.179223,-9.451736,7.322926,8.526879],[-0.867338,5.993700,-8.963879,9.992493],[-1.596239,1.733657,1.537831,-0.670402],[2.030702,0.213729,-4.730023,-0.676455],[-0.825651,6.400988,-9.303066,-7.308577],[0.287505,3.323436,7.339896,7.183500],[-0.460196,-5.176174,8.177268,9.165470],[-9.892750,-2.457996,8.368759,2.362343],[6.783575,-3.717131,-0.647880,-9.474603],[-4.136176,8.523143,-1.757407,-7.131205],[6.579707,3.760309,5.512030,5.724442],[8.239983,-9.755843,-3.463860,-7.713942],[-2.869162,1.325526,-3.704660,-9.952593]],[[0.409852,-3.677952,-7.808637,-4.562778],[8.574701,-2.823720,-4.803677,-2.437438],[2.037182,5.440422,9.186012,-2.157600],[-2.533206,-7.267960,4.224008,6.264144],[-3.382196,8.935472,-6.775749,-5.815515],[6.130461,-2.513084,-1.581971,2.604937],[5.781912,4.095726,-2.759939,-2.999886],[4.596976,1.370743,5.572478,9.436219],[-9.240718,2.308023,-4.624824,1.780059],[-1.318749,-3.711000,-0.897726,4.826718],[-3.148350,-2.291947,-6.699408,8.801302],[3.541474,-2.815729,7.220389,-7.999521],[-8.455315,4.504645,1.706671,-2.946027],[-1.511568,-2.679632,-6.568323,4.371659],[-3.834878,-0.839713,-5.097411,-1.543971],[-9.884724,4.659408,-0.806427,-2.094999]],[[9.474275,-3.820624,-5.059133,-0.546668],[2.989091,2.295064,-5.641085,-3.837420],[0.258096,4.659374,-5.475871,1.669784],[3.626815,-7.772779,7.042510,-0.402898],[-2.088621,3.852973,-7.007841,-0.769157],[7.879152,3.737423,-3.411709,-0.206606],[-3.928697,0.401320,-1.119648,-0.968933],[9.201066,9.840841,2.695804,5.929744],[-5.762350,-1.658172,4.693057,-5.431455],[-0.080647,-0.770047,5.507166,-3.946782],[1.772023,-5.125642,4.357736,7.798273],[-5.408598,6.150375,-2.949090,1.126278],[2.872854,7.264542,-6.315171,1.547230],[-1.607818,3.002822,2.205288,6.029239],[-6.471490,-3.813700,-8.653430,-0.490456],[-6.756027,-1.618779,2.308749,-1.138495]],[[9.876722,5.401038,9.586494,9.853720],[-0.213696,-7.279672,-1.813316,-4.716998],[4.352256,-9.766264,-7.902831,-2.876084],[-4.867892,-1.440828,3.569590,5.242747],[-6.006267,-5.180860,3.902684,3.946825],[9.333420,7.286733,-9.404217,-9.431915],[-3.301603,2.670243,7.364049,-7.637976],[6.230495,1.119239,4.986501,2.115282],[8.437438,9.915578,8.003004,8.477931],[-0.246408,3.548153,-2.064294,2.789348],[-5.295903,-4.977508,-2.358487,-7.507388],[5.818229,-8.062438,-0.088919,-1.157454],[-8.105403,-9.808065,9.167321,-2.102354],[1.184514,-1.364503,3.688249,-0.274234],[-9.067209,9.843071,9.619568,-4.270312],[-5.463149,6.532085,3.212764,-2.468621]],[[-8.292885,5.585586,-3.187323,4.572277],[9.341716,-4.436276,5.756346,2.560836],[0.894484,2.611472,-0.834673,1.381721],[-9.432839,0.473272,-2.445286,6.633106],[-9.607849,-0.073063,-0.692767,-0.291612],[8.895961,-8.928694,-1.194596,2.502295],[9.138571,-1.264933,-4.148153,-2.546529],[6.210592,-6.738424,8.998010,-1.424920],[4.875459,0.760687,-3.948143,7.378057],[-7.924655,9.324805,3.141971,-8.617695],[8.557349,-4.004364,-5.140252,-4.450992],[-1.453364,3.871077,8.578566,-6.804204],[3.257352,-4.064714,0.679624,2.632178],[-7.289663,-4.486837,8.473908,-5.444614],[-7.690405,4.344585,3.511718,-4.920569],[-1.726115,1.326712,4.085996,-8.052750]],[[1.126952,-6.719798,7.913427,-4.075450],[-4.551786,0.246115,9.172237,-5.050351],[8.178618,-6.257907,-6.407736,-9.487589],[4.181677,-4.906630,5.457745,4.091012],[9.599084,-5.842982,5.164326,-0.715249],[0.118210,-3.218422,0.393704,-1.688084],[-8.520904,2.273340,7.919855,1.568847],[-1.303718,9.132321,8.203434,-6.326594],[7.076852,2.534408,-7.879948,-0.053539],[9.978356,-4.479196,-7.056304,5.721006],[-8.337699,6.371639,3.363739,-1.688800],[-9.966705,1.085563,-1.852656,-8.875229],[-8.116340,-5.095417,-5.535592,8.378851],[6.938699,-6.067092,-6.279276,-4.964117],[3.131460,3.196724,1.033015,-4.195080],[0.100889,0.293562,3.959630,3.639477]],[[9.815510,-6.783106,0.375381,0.885739],[-3.151666,-0.363363,-0.087403,2.912654],[-8.656417,-3.589045,-2.253023,2.082338],[-7.969496,4.020561,-2.566148,-0.984266],[-2.236196,6.336075,-8.014250,2.672164],[8.992085,6.218064,-6.454249,9.753192],[5.977359,-0.946949,-1.682927,-3.644458],[-0.175462,-9.360974,-0.993799,-3.587537],[-8.344062,-2.321347,6.211953,9.125162],[8.407424,-1.802009,7.335426,-8.367694],[5.640224,-8.754451,-5.224270,-4.594525],[-0.367769,-5.758212,9.824236,8.217362],[-0.024210,-0.455243,4.412853,-1.238988],[3.555163,0.841210,-8.619514,0.422310],[-6.946960,1.024715,-6.301270,-5.213868],[2.570079,-5.752576,4.879148,-1.208304]],[[8.168288,1.778749,-3.320128,-6.944307],[-5.165244,-5.841744,3.152033,-9.601524],[6.681098,0.064240,-0.303235,-8.083079],[-3.037668,-3.098819,-2.582692,8.269324],[-5.787922,3.022100,5.598288,-9.209625],[0.498040,-3.345601,-1.450419,-4.944808],[2.854192,-9.881514,4.225078,5.348825],[3.628733,-9.979338,-6.559250,5.225314],[-2.187105,3.177498,-8.317373,-9.204052],[-8.659855,5.710003,7.995794,-4.468479],[6.731859,-4.234837,4.250349,-1.587724],[-2.205239,-3.233127,-3.553897,9.704970],[-7.584454,-8.914960,-8.612830,-7.195292],[-1.372689,3.230069,-6.989915,-5.606183],[-3.706283,-8.535046,-1.186082,-7.303405],[9.115790,8.799600,5.555935,7.084506]],[[0.260624,-1.948884,-4.035222,-6.536900],[-6.445023,-2.983043,5.149473,-4.204861],[-9.988304,4.987440,3.152777,6.677039],[-2.049758,1.293310,9.416942,-4.333390],[-1.575091,-7.901677,5.828056,7.463828],[-9.039669,-3.595393,-0.505783,-1.036517],[-0.503600,5.075610,7.419027,-9.926760],[2.099817,6.042659,-9.650606,8.987059],[2.818922,6.394270,-0.674728,-9.846763],[2.166746,-1.086402,-9.423442,-4.063183],[-0.025371,-8.478607,-7.259816,-7.479309],[-2.605830,-7.001841,0.674542,-8.194083],[6.877866,4.880871,-8.361777,-9.552236],[2.981398,-3.853517,2.724995,-3.950309],[-5.461006,-3.290316,4.961526,3.646902],[-6.651535,2.592836,7.668325,-1.674975]],[[1.627191,7.715407,-0.999329,3.718913],[-0.036622,8.842980,-1.893992,-6.272806],[-2.095820,8.701504,0.314218,-7.648529],[-6.366623,8.520092,8.066247,-9.384222],[0.632054,-2.656073,-9.350200,5.901422],[8.179934,-4.569845,-9.489485,4.075049],[7.556211,0.807729,2.330223,6.014074],[4.602745,8.739772,-0.002350,8.804623],[9.016262,9.141017,-7.246312,1.339896],[5.810250,3.063292,-9.425827,9.256320],[-5.052866,-1.174018,-7.765286,6.745140],[-7.307150,-9.172095,0.320172,-7.984319],[5.778258,-3.475496,5.106692,-4.194626],[0.711073,-8.270337,-5.952247,-5.165299],[-9.156781,-9.198952,-0.849032,-7.315416],[-1.919778,8.651609,1.085631,9.032650]],[[-9.157684,-4.175281,4.049251,-7.753557],[-2.602053,-6.706054,-3.950353,4.012988],[6.576824,0.868976,-5.880725,-0.006785],[-3.160302,-8.099898,5.305457,3.399641],[3.294834,6.299434,-7.692078,4.351757],[0.969159,8.578182,-4.906142,-5.079544],[-2.069637,7.989880,-4.932483,6.462601],[-9.517678,-7.502195,6.109589,7.498548],[2.083908,7.242642,-2.511297,-5.295230],[-1.151740,-0.192228,3.813523,-6.317603],[-4.606628,-9.613577,7.066073,-5.260699],[8.052728,-5.114160,-5.233187,3.688183],[-1.378025,7.505623,9.961094,-5.592251],[1.709358,9.996045,-1.149494,-7.338732],[0.651056,4.785639,-9.248358,-4.829669],[-8.671357,9.364425,-3.384398,-5.796186]],[[9.382257,-1.941043,6.366419,9.766623],[8.278771,4.545033,-2.705359,-3.914075],[-5.997751,6.568770,1.922709,-4.511884],[-4.802143,-3.746017,-8.558195,6.264451],[-5.426138,2.921034,3.444257,-8.116125],[5.620035,-1.555377,6.290478,6.275552],[-9.946272,8.977021,5.641322,8.563322],[8.773715,-6.472437,-6.881876,8.762320],[3.670080,-0.741430,8.719845,9.683434],[8.835191,3.589104,1.307551,-0.869112],[0.941601,9.720927,-9.059113,-1.490714],[4.529411,5.615368,-9.290409,-6.189463],[8.874608,-3.999680,-7.415458,1.653976],[7.828690,-3.016349,-9.108106,-8.854631],[-7.490655,-5.480560,-7.480940,-6.414159],[4.857944,6.937243,2.422532,-6.126258]]], dtype = "float32")#candidate|5025|(16, 16, 4)|const|float32
bop_5026 = relay.power(var_5024.astype('float32'), const_5025.astype('float32')) # shape=(16, 16, 4)
func_2794_call = mod.get_global_var('func_2794')
func_2796_call = mutated_mod.get_global_var('func_2796')
const_5047 = relay.const([-5.725715,8.530165,2.375868,2.323135,-9.966613,-1.229993,-7.089990,-8.236212,-9.009642,-8.329835,2.833310,-1.573185,3.080540,-4.137885,5.606949,5.568536,6.958475,-9.334856,-5.740041,-8.745575,9.427766,-6.337077,-4.431211,6.149448,5.014995,7.534732,-6.525433,-8.787894,-5.474539,-7.643641,-4.925845,2.183295,1.452383,-0.315028,1.196298,-4.860697,-1.247550,-2.247876,0.989960,8.853238,-7.200456,-0.970904,7.234581,-8.269963,3.986747,0.689978,-2.714310,2.368105,-3.435252,-5.494956,-2.922974,-1.513573,2.253686,-2.383188,-1.895791,4.719062,-6.841176,4.153838,-1.459778,0.055154,6.721939,-2.749912,8.759982,5.316029,5.597933,1.528868,-8.900848,-8.529104,-2.371471,-7.043109,3.834429,9.958643,1.440301,0.592702,-1.381658,7.266569,4.302855,-0.573758,-5.463268,2.007276,6.355777,4.448638,-4.692211,4.736331,-0.786162,-4.895495,6.878049,3.451273,-6.864730,1.866045,4.277902,-8.106350,-3.833300,5.364878,-5.575743,-5.540612,0.378048,5.659885,-7.015615,5.990789,9.180194,-1.190272,5.851023,2.448854,-7.425351,9.492742,-0.931645,-1.625664,-3.658143,6.602256,-8.372398,-4.617737,9.258856,-9.498741,-5.577715,4.442497,6.898584,-1.841803,6.555004,-2.150507,-4.680657,-5.341484,-4.479201,5.194030,-9.967706,6.498794,5.577369,5.769113,-4.463980,-7.631827,6.727626,-9.374135,5.946793,2.499209,-2.164163,-7.404402,9.712985,7.775599,8.858644,-4.635746,3.891850,8.176293,4.556614,-5.418048,-3.937257,-9.688890,-7.235893,-6.375330,-8.387961,-1.566788,3.525561,9.671631,1.736167,-2.450064,-0.207542,1.670156,9.920233,-5.969404,8.716552,-8.294902,9.293139,5.455275,0.698200,3.157291,2.552050,-5.583190,-4.179402,-1.314433,0.628330,-9.849749,0.839077,9.068180,-7.485714,-0.910564,-2.598714,2.876723,5.742469,6.773691,-6.210217,-0.227495,0.628648,6.648372,9.669436,2.058717,-1.448281,-0.808324,4.980785,-7.112904,2.904556,5.649677,7.840452,2.176259,1.132208,9.635603,5.942920,-2.388532,9.820482,-1.634238,9.394007,1.981811,9.764652,4.970009,2.083275,8.708030,-9.654797,4.282310,1.804325,9.637414,2.867117,9.373202,-1.628549,7.327991,0.601272,-0.709635,-1.811605,-5.155541,0.024163,-0.997718,-2.266917,0.781546,8.634135,-6.787983,1.182984,6.492747], dtype = "float32")#candidate|5047|(224,)|const|float32
call_5046 = relay.TupleGetItem(func_2794_call(relay.reshape(const_5047.astype('float32'), [4, 7, 8])), 0)
call_5048 = relay.TupleGetItem(func_2796_call(relay.reshape(const_5047.astype('float32'), [4, 7, 8])), 0)
func_2857_call = mod.get_global_var('func_2857')
func_2862_call = mutated_mod.get_global_var('func_2862')
var_5057 = relay.var("var_5057", dtype = "uint32", shape = ())#candidate|5057|()|var|uint32
const_5058 = relay.const([-4,-5,2,1,-6,-7,3,-10,7,3,10,-8,-2,-1,5,4,-6,-8,-6,8,-2,-1,-7,9,7,-6,4,9,4,-10,10,8,2,4,-5,-8,-5,1,1,10,1,-4,7,-10,3,-1,3,-9,-5,1,-5,-4,-9,4,6,10,9,4,-5,-8,4,1,9,2,-3,4,5,8,-5,-6,8,8,-7,-3,7,-3,1,10,-4,-3,-9,-6,-7,10,9,-2,-1,-4,3,5,9,2,-9,-1,7,1,3,2,-4,-1,-8,1,5,10,-5,9,10,-7,4,-6,-3,8,-6,5,3,-4,1,10,3,4,-4,3,4,5,-7,2,-9,6,-1,5,1,4,-7,9,-4,-7,8,2,-1,4,9,-9,-6,-2,-8,-2,-8,-2,-9,-2,-4,9,2,-5,-10,2,5,-6,6,10,8,-2,6,-9,5,-8,-4,-2,-8,-1,8,-8,3,-3,-3,-5,-3,-7,-1,4,10,6,8,-10,6,7,-3,6,8,-8,-4,-3,-8,-8,7,-6,5,-8,-9,-1,10,-1,-2,10,8,-4,1,-1,-8,-9,-10,-9,-6,-8,-7,-1,9,-1,-9,-1,-9,9,-2,8,-9,4,-3,-6,4,-3,5,10,-6,-2,-10,-3,-10,10,3,4,6,-3,3,-7,3,9,-5,-1,8,9,-10,10,7,4,7,-3,-5,3,4,-6,1,7,4,1,1,1,-2,-1,-10,-8,2,1,8,9,3,10,-3,-10,-5,1,8,-7,-3,-9,5,8,-9,-7,3,10,3,8,7,5,10,7,-7,10,5,1,-9,9,9,6,4,-8,5,7,5,-3,-7,4,-7,4,-4,-3,-5,10,10,6,1,3,1,8,-1,2,3,3,-10,3,-1,6,1,-2,3,5,3,10,7,1,-10,7,8,-3,-5,2,-5,4,6,6,-5,5,-8,-1,4,-6,-4,8,-1,2,-9,5,-5,-9,6,-2,6,-6,-4,-3,8,1,-10,-4,1,-8,2,-4,4,-10,9,-1,1,1,-6,-4,-4,6,5,7,-8,6,-10,-7,-6,-7,8,1,-7,5,-9,-8,3,8,-6,1,2,3,10,8,-4,-10,-5,2,-3,7,-5,6,-1,-5,7,-2,-5,-1,-5,-8,4,-1,-7,2,1,4,6,-3,2,5,-6,-10,-2,-4,10,5,-10,-4,1,-8,5,8,2,8,1,-7,10,8,8,8,3,-3,-10,-9,5,3,9,-1,7,7,5,-5,-1,9,-4,-9,-2,8,-1,3,4,8,-9,6,-10,-4,-9,2,-1,-1,-1,9,-5,5,6,4,4,-5,10,-9,-6,-5,-3,9,1,-8,-10,-6,-6,3,-1,-1,-6,9,10,6,2,-5,2,8,3,6,3,-10,-4,-10,-7,-9,-9,-9,-8,-7,8,-5,3,4,9,1,3,-2,2,2,-7,4,-1,7,10,10,-5,8,10,5,-3,5,8,5,-1,1,9,-6,-8,10,6,-6,6,-10,-6,-8,-3,-5,2,3,6,-1,-9,3,-9,-7,-2,-5,-7,-5,-2,-1,7,6,-5,-3,4,6,-1,3,2,3,3,4,-5,-2,-3,-9,-1,2,-5,7,-8,-5,1,-7,7,9,-1,9,-4,-10,8,-1,-8,4,-5,5,1,-2,-5,7,2,4,-1,-7,8,5,-1,-4,7,-2], dtype = "uint32")#candidate|5058|(630,)|const|uint32
const_5059 = relay.const([-1.397422,0.264659,-3.421155,9.757183,-2.918635,-0.342105,7.384083,3.464391,6.339557,-9.195561,3.667810,-4.823137,-4.482238,6.815861,0.212381,3.715675,-9.892565,-5.728463,5.160088,3.968554,-8.015945,1.766122,-5.185079,4.549865,-0.228097,-3.424171,-1.171546,-0.787539,5.637869,-1.472140,7.285712,-5.895374,-7.475114,8.830814,3.705243,-6.850096,-0.476758,5.465041,-5.069032,-3.146057,-9.350158,-2.060190,2.256101,-3.839667,4.995088,-2.302183,-1.612476,-4.245254,6.382538,-6.597359,-4.461800,2.933626,-1.640197,9.275371,2.463583,0.697398,1.444892,-0.616499,-5.838668,1.037471,4.524964,9.787088,9.267242,6.465349,6.447685,5.282639,-4.590734,-2.549980,7.870909,7.743847,-4.145835,-6.311834,-4.329251,-8.967375,5.438156,-4.543751,6.449086,-6.004708,-4.699785,-5.372009,5.927081,6.404997,-0.990401,-6.470900,-8.399761,-3.258277,6.820959,-2.819637,-1.077589,-8.436443,-3.929814,-2.351013,-4.861154,-2.571764,-4.265417,-8.656695,-2.730123,6.568388,-2.022869,-3.489927,6.090756,4.961515,-8.137701,6.237118,-8.540946,-1.052224,-8.015121,2.223389,-8.125969,2.998417,-0.017226,-9.012821,-6.462314,3.263193,-2.790818,4.076877,-0.021768,-5.628791,-2.257123,7.507829,3.427826,4.220637,1.670184,5.694707,2.347467,-3.052784,-7.318774,-8.529388,5.627295,2.061908,-7.942997,1.190342,3.659935,1.881793,7.331532,6.538993,-9.483201,4.049824,3.617783,8.584134,8.316254,-2.873930,2.568733,-1.193120,-7.939656,-7.790271,-6.548025,3.842159,1.210674,9.121439,-6.964572,5.265146,-8.026532,-8.386904,1.583777,-0.705168,1.558599,6.871594,9.136740,4.942298,0.594779,-6.024494,-5.014945,-2.764136,-6.517001,-1.214801,-3.222842,-5.288783,-2.063089,-3.590752,-6.386910,8.530343,8.061306,-9.109431,-7.568565,-3.649059,7.187574,-1.523698,-3.834973,3.682182,-0.950595,0.040585,-1.038428,3.650389,-7.864640,-5.963396,-1.276931,8.054734,-2.725318,6.671461,3.066650,7.398809,-7.414388,-7.480596,-5.562168,-3.906187,-9.141913,0.946148,4.212838,1.643244,-5.638889,-8.675792,1.846605,-0.086003,-3.989192,2.976987,1.554131,-1.022869,-5.548343,-6.842507,6.808257,4.669863,4.476264,-8.743262,-0.131328,-6.812084,0.076805,9.030606,-6.541741,5.763045,0.319385,3.930917,5.562776,2.738744,-7.227553,-4.356184,-8.110510,5.044037,-3.309642,-8.849037,-1.467890,7.333096,8.579598,-3.547489,-0.511243,-6.002915,-5.707581,-9.770797,-5.997436,8.506950,8.013790,-6.850031,-9.683290,7.010857,4.211184,7.861928,6.721339,3.192014,6.458892,-0.679444,9.576667,-5.226648,-0.164681,7.632823,-6.301551,-7.479072,-8.506156,5.998673,-8.772410,2.850434,-8.097575,1.220450,3.936206,-0.686480,3.535589,-1.662298,-4.592767,-9.228443,7.447512,8.959786,1.489691,-2.205684,-5.658118,-7.256936,-9.486168,-9.893138,-8.608192,-2.238390,-4.454391,-0.081527,-8.170806,0.769072,2.081735,4.268289,2.081550,-0.207040,-7.838102,8.757443,-1.240703,-5.051828,7.315157,1.314748,-0.494295,-0.308849,9.055372,-5.600013,5.069002,-5.055109,-6.907822,-3.649824,-1.453456,-2.610959,2.213135,4.349955,3.696199,-0.712995,-4.219812,-0.816280,-6.636221,6.501497,0.058917,7.383842,7.135937,-9.711813,5.731518,-6.340116,5.559168,2.434297,-3.526726,2.864952,-7.251100,-3.149685,8.874824,2.080633,3.055881,1.730176,1.265339,-4.228358,-5.836127,-2.350934,9.040796,4.193366,4.619277,2.677851,8.908413,4.264613,-1.949450,-3.088299,-1.076932,9.410235,4.806630,-5.079991,2.619162,5.182411,3.271101,-9.428954,-7.716667,-0.539817,-1.385695,0.967480,-9.696675,2.166290,2.098368,-1.291034,7.627422,6.527579,0.153676,7.472170,-4.886881,-8.934366,-5.208309,-5.663880,0.703118,-5.077681,-0.175494,3.468768,-8.398575,-7.446464,9.585604,8.736207,-5.550830,1.544332,2.785185,0.870693,8.780992,9.708977,-5.888849,5.446398,-4.601069,5.415392,7.679903,9.719750,2.783151,5.359928,7.979413,3.815840,-6.115363,9.787975,-7.961009,8.930084,-2.421191,3.652870,9.281982,-5.767710,4.601087,-9.685699,6.221601,-1.653579,4.734912,8.645830,0.448867,8.392182,7.301954,0.447795,3.000724,6.253174,4.750040,-2.542008,8.192730,6.156483,-7.334809,-2.791507,2.116264,-5.949961,-7.799270,7.711167,-0.367761,9.302608,1.144488,4.474754,-6.538761,1.173352,-1.798639,-7.616381,-2.177179,-3.922430,8.604023,-5.808616,0.616800,-1.290025,-5.753451,1.870203,-2.946007,-3.640708,9.310543,-5.446917,3.038329,-7.812248,1.719825,8.057113,-3.757633,-7.617487,-3.826926,-0.639204,0.073060,-1.553705,4.160955,-1.135390,-7.725987,3.713499,1.185430,3.053300,3.016134,-4.476684,-8.477251,7.815840,2.479557,1.845179,-9.505075,6.320922,-2.338672,-6.685547,-2.245501,2.380432,7.225768,-7.525133,-0.398007,0.252849,3.754012,-7.039620,-8.899011,-8.335208,1.259695,4.822682,-4.719789,7.191191,-1.376240,-3.831281,-3.121331,-6.045050,-0.286228,-7.082608,-7.775660,3.689716,3.379437,-1.473062,8.262847,8.202595,-5.235164,-7.849188,-9.842025,0.073649,3.311944,6.875191,2.286753,-2.867304,-8.580761,-5.561901,-7.507695,9.923804,7.731236,0.470881,-2.240418,4.801123,-9.431357,0.389287,9.032052,1.806077,-8.720775,-2.564342,-6.967342,-0.604929,-1.211653,-8.695364,-3.070398,-8.154393,2.181743,-4.036575,5.071721,-1.738900,0.519260,-3.534460,-6.396461,-4.461170,-9.336070,-2.835279,6.550471,7.459481,7.861046,-0.312124,6.829782,0.825378,4.213311,3.384391,3.643829,-3.304335,0.879617,6.395722,-3.639184,4.177205,-3.325179,-5.183924,-3.854991,7.596223,5.648604,7.190798,3.178862,2.528350,-2.310373,6.020755,-2.758577,-8.948413,-9.288223,7.250379,5.691916,9.065481,-9.117733,3.947592,3.617386,-6.082550,1.565966,-4.554010,-2.898515,2.781945,-3.894500,-8.660243,-7.333714,-1.812094,-3.258082,8.593640,-5.960142,4.858398,-5.839152,0.708267,-1.725736,-8.845451,6.340050,-3.042163,-4.752291,-4.376614,-1.145511,0.511126,-2.810899,0.487345,5.342124,-7.762136,4.411490,-7.559761,9.679481,9.929363,6.216444,9.387842,-5.214094,-8.889398,7.506134,0.859635,2.140848,-5.475513,7.005657,-3.216908,-6.222973,-6.724114,5.210396,-5.477542,9.395586,-1.764670,1.881043,1.782323,8.590907,4.938024,0.401146,-9.662134,5.765397,-9.746264,-9.419139,-2.403639,6.394178,-3.117791,0.041816,7.036543,-0.201024,-7.255784,7.821496,-8.110010,1.648414,7.169099,-5.959685,-5.086608,-1.887830,-7.117136,8.423856,-2.403733,-6.157229,1.902743,5.711488,-1.918551,-3.621614,1.303402,-0.497146,-7.573922,6.632807,-8.492457,7.880425,-5.867933,6.609244,-3.800181,2.231382,-9.808447,4.233119,4.639800,-1.347728,2.760260,-9.193396,7.090369,-6.974065,3.663612,3.990604,4.918636,-0.257409,6.208144,8.436204,-6.885959,-2.589150,-8.118303,2.609876,-4.461021,4.604327,-6.045424,-1.259996,-8.701514,-3.429930,2.533701,-6.591682,-0.098125,-1.411941], dtype = "float64")#candidate|5059|(675,)|const|float64
call_5056 = relay.TupleGetItem(func_2857_call(relay.reshape(var_5057.astype('uint32'), []), relay.reshape(const_5058.astype('uint32'), [6, 7, 15]), relay.reshape(const_5059.astype('float64'), [15, 45]), ), 4)
call_5060 = relay.TupleGetItem(func_2862_call(relay.reshape(var_5057.astype('uint32'), []), relay.reshape(const_5058.astype('uint32'), [6, 7, 15]), relay.reshape(const_5059.astype('float64'), [15, 45]), ), 4)
output = relay.Tuple([bop_5026,call_5046,const_5047,call_5056,var_5057,const_5058,const_5059,])
output2 = relay.Tuple([bop_5026,call_5048,const_5047,call_5060,var_5057,const_5058,const_5059,])
func_5065 = relay.Function([var_5024,var_5057,], output)
mod['func_5065'] = func_5065
mod = relay.transform.InferType()(mod)
var_5066 = relay.var("var_5066", dtype = "float32", shape = (1, 16, 4))#candidate|5066|(1, 16, 4)|var|float32
var_5067 = relay.var("var_5067", dtype = "uint32", shape = ())#candidate|5067|()|var|uint32
output = func_5065(var_5066,var_5067,)
func_5068 = relay.Function([var_5066,var_5067,], output)
mutated_mod['func_5068'] = func_5068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4602_call = mod.get_global_var('func_4602')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_5083 = relay.TupleGetItem(func_4602_call(), 1)
call_5084 = relay.TupleGetItem(func_4604_call(), 1)
func_4629_call = mod.get_global_var('func_4629')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_5130 = relay.TupleGetItem(func_4629_call(), 0)
call_5131 = relay.TupleGetItem(func_4631_call(), 0)
output = relay.Tuple([call_5083,call_5130,])
output2 = relay.Tuple([call_5084,call_5131,])
func_5134 = relay.Function([], output)
mod['func_5134'] = func_5134
mod = relay.transform.InferType()(mod)
mutated_mod['func_5134'] = func_5134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5134_call = mutated_mod.get_global_var('func_5134')
call_5135 = func_5134_call()
output = call_5135
func_5136 = relay.Function([], output)
mutated_mod['func_5136'] = func_5136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_5150 = relay.TupleGetItem(func_2961_call(), 1)
call_5151 = relay.TupleGetItem(func_2962_call(), 1)
output = relay.Tuple([call_5150,])
output2 = relay.Tuple([call_5151,])
func_5157 = relay.Function([], output)
mod['func_5157'] = func_5157
mod = relay.transform.InferType()(mod)
output = func_5157()
func_5158 = relay.Function([], output)
mutated_mod['func_5158'] = func_5158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4620_call = mod.get_global_var('func_4620')
func_4622_call = mutated_mod.get_global_var('func_4622')
call_5175 = relay.TupleGetItem(func_4620_call(), 0)
call_5176 = relay.TupleGetItem(func_4622_call(), 0)
output = relay.Tuple([call_5175,])
output2 = relay.Tuple([call_5176,])
func_5183 = relay.Function([], output)
mod['func_5183'] = func_5183
mod = relay.transform.InferType()(mod)
output = func_5183()
func_5184 = relay.Function([], output)
mutated_mod['func_5184'] = func_5184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1915_call = mod.get_global_var('func_1915')
func_1916_call = mutated_mod.get_global_var('func_1916')
call_5312 = relay.TupleGetItem(func_1915_call(), 0)
call_5313 = relay.TupleGetItem(func_1916_call(), 0)
func_4629_call = mod.get_global_var('func_4629')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_5314 = relay.TupleGetItem(func_4629_call(), 0)
call_5315 = relay.TupleGetItem(func_4631_call(), 0)
output = relay.Tuple([call_5312,call_5314,])
output2 = relay.Tuple([call_5313,call_5315,])
func_5365 = relay.Function([], output)
mod['func_5365'] = func_5365
mod = relay.transform.InferType()(mod)
output = func_5365()
func_5366 = relay.Function([], output)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_5396 = func_3981_call()
call_5397 = func_3981_call()
output = call_5396
output2 = call_5397
func_5411 = relay.Function([], output)
mod['func_5411'] = func_5411
mod = relay.transform.InferType()(mod)
mutated_mod['func_5411'] = func_5411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mutated_mod.get_global_var('func_5411')
call_5412 = func_5411_call()
output = call_5412
func_5413 = relay.Function([], output)
mutated_mod['func_5413'] = func_5413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1831_call = mutated_mod.get_global_var('func_1831')
call_5419 = relay.TupleGetItem(func_1829_call(), 0)
call_5420 = relay.TupleGetItem(func_1831_call(), 0)
output = call_5419
output2 = call_5420
func_5426 = relay.Function([], output)
mod['func_5426'] = func_5426
mod = relay.transform.InferType()(mod)
output = func_5426()
func_5427 = relay.Function([], output)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mod.get_global_var('func_5411')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_5484 = func_5411_call()
call_5485 = func_5411_call()
func_4834_call = mod.get_global_var('func_4834')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_5493 = relay.TupleGetItem(func_4834_call(), 0)
call_5494 = relay.TupleGetItem(func_4836_call(), 0)
const_5504 = relay.const([[[True,True,True],[True,False,False],[False,True,False],[False,False,False],[False,True,False],[True,True,True],[True,True,False],[True,True,False],[False,True,True],[False,False,True],[False,True,True],[True,False,True],[True,False,True],[False,True,True],[False,True,False]],[[False,True,True],[False,False,False],[False,True,True],[False,True,False],[False,True,False],[True,False,False],[False,True,False],[False,True,True],[True,True,False],[False,True,True],[False,True,False],[True,True,False],[False,True,True],[True,False,False],[False,False,False]],[[False,True,False],[False,False,True],[True,False,False],[False,True,True],[False,True,False],[True,True,False],[False,False,True],[False,False,True],[False,False,True],[False,False,True],[False,False,False],[False,True,False],[False,False,False],[False,False,True],[False,False,False]],[[False,True,True],[False,True,False],[False,False,False],[True,False,False],[False,False,False],[True,True,True],[True,True,False],[False,True,False],[False,False,False],[False,False,False],[False,False,True],[False,True,True],[False,True,True],[False,False,True],[True,False,True]],[[True,True,False],[False,False,False],[False,False,True],[False,True,True],[False,True,True],[False,True,False],[False,True,True],[True,True,False],[False,False,False],[True,True,False],[False,False,True],[True,True,True],[True,True,False],[False,False,True],[False,False,False]],[[True,True,True],[True,True,True],[False,False,False],[False,False,False],[False,True,True],[False,True,False],[True,False,True],[True,True,False],[True,False,False],[False,False,True],[False,True,False],[True,True,True],[False,True,True],[True,False,True],[True,False,False]],[[True,True,True],[True,False,False],[False,True,True],[False,False,True],[True,False,True],[False,False,True],[False,False,False],[True,False,True],[False,True,True],[True,True,False],[True,False,True],[False,True,True],[False,True,True],[False,True,True],[True,False,False]],[[True,False,False],[False,False,False],[False,True,True],[True,True,False],[True,False,True],[True,True,True],[False,False,False],[True,False,True],[False,False,True],[False,False,True],[False,True,False],[False,True,False],[True,True,False],[False,False,True],[False,True,False]],[[False,False,True],[True,False,True],[False,False,False],[True,False,False],[False,False,False],[False,False,True],[False,True,False],[False,False,True],[False,False,False],[False,False,True],[False,False,False],[True,False,False],[True,False,False],[True,True,True],[True,False,True]],[[False,False,False],[True,False,True],[False,False,True],[True,True,True],[True,True,True],[True,True,False],[True,False,False],[True,True,False],[False,False,True],[True,False,True],[False,False,True],[False,True,True],[True,True,False],[False,True,True],[True,False,False]],[[True,True,True],[True,False,True],[True,False,True],[True,False,True],[False,True,True],[False,True,True],[True,False,True],[True,True,False],[True,False,True],[False,True,False],[False,False,True],[True,True,False],[False,False,False],[True,True,False],[True,False,True]],[[False,False,False],[False,True,False],[True,False,False],[True,True,False],[True,True,True],[True,True,False],[False,False,True],[False,True,False],[False,False,True],[False,True,True],[True,False,True],[False,False,True],[False,True,True],[False,False,True],[False,True,False]],[[False,False,False],[False,True,False],[True,True,True],[True,False,False],[True,False,True],[False,False,True],[False,False,True],[True,False,False],[False,True,True],[True,True,False],[False,True,True],[False,True,False],[False,True,True],[False,False,True],[False,True,False]],[[True,False,False],[True,False,False],[False,True,False],[True,True,True],[False,True,True],[False,True,False],[True,True,False],[True,True,True],[True,True,True],[False,True,True],[False,True,True],[False,False,True],[False,False,False],[True,True,True],[False,True,False]],[[True,False,True],[False,True,False],[False,True,False],[True,False,True],[False,False,True],[True,True,False],[False,True,False],[True,False,False],[True,True,False],[True,True,True],[True,True,True],[True,True,True],[True,True,False],[True,False,False],[True,False,False]]], dtype = "bool")#candidate|5504|(15, 15, 3)|const|bool
bop_5505 = relay.subtract(call_5493.astype('float32'), relay.reshape(const_5504.astype('float32'), relay.shape_of(call_5493))) # shape=(15, 15, 3)
bop_5508 = relay.subtract(call_5494.astype('float32'), relay.reshape(const_5504.astype('float32'), relay.shape_of(call_5494))) # shape=(15, 15, 3)
output = relay.Tuple([call_5484,bop_5505,])
output2 = relay.Tuple([call_5485,bop_5508,])
func_5509 = relay.Function([], output)
mod['func_5509'] = func_5509
mod = relay.transform.InferType()(mod)
output = func_5509()
func_5510 = relay.Function([], output)
mutated_mod['func_5510'] = func_5510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5183_call = mod.get_global_var('func_5183')
func_5184_call = mutated_mod.get_global_var('func_5184')
call_5521 = relay.TupleGetItem(func_5183_call(), 0)
call_5522 = relay.TupleGetItem(func_5184_call(), 0)
output = call_5521
output2 = call_5522
func_5526 = relay.Function([], output)
mod['func_5526'] = func_5526
mod = relay.transform.InferType()(mod)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5526_call = mutated_mod.get_global_var('func_5526')
call_5527 = func_5526_call()
output = call_5527
func_5528 = relay.Function([], output)
mutated_mod['func_5528'] = func_5528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_5562 = relay.TupleGetItem(func_2635_call(), 2)
call_5563 = relay.TupleGetItem(func_2637_call(), 2)
output = call_5562
output2 = call_5563
func_5566 = relay.Function([], output)
mod['func_5566'] = func_5566
mod = relay.transform.InferType()(mod)
output = func_5566()
func_5567 = relay.Function([], output)
mutated_mod['func_5567'] = func_5567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3151_call = mod.get_global_var('func_3151')
func_3153_call = mutated_mod.get_global_var('func_3153')
call_5573 = relay.TupleGetItem(func_3151_call(), 1)
call_5574 = relay.TupleGetItem(func_3153_call(), 1)
output = call_5573
output2 = call_5574
func_5579 = relay.Function([], output)
mod['func_5579'] = func_5579
mod = relay.transform.InferType()(mod)
output = func_5579()
func_5580 = relay.Function([], output)
mutated_mod['func_5580'] = func_5580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4002_call = mod.get_global_var('func_4002')
func_4004_call = mutated_mod.get_global_var('func_4004')
call_5614 = func_4002_call()
call_5615 = func_4002_call()
func_5579_call = mod.get_global_var('func_5579')
func_5580_call = mutated_mod.get_global_var('func_5580')
call_5618 = func_5579_call()
call_5619 = func_5579_call()
output = relay.Tuple([call_5614,call_5618,])
output2 = relay.Tuple([call_5615,call_5619,])
func_5628 = relay.Function([], output)
mod['func_5628'] = func_5628
mod = relay.transform.InferType()(mod)
output = func_5628()
func_5629 = relay.Function([], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_5675 = relay.TupleGetItem(func_1792_call(), 0)
call_5676 = relay.TupleGetItem(func_1793_call(), 0)
const_5691 = relay.const([[[4.040419,-9.977436,-0.440694,-5.920373,9.668916,5.541845,-8.312463,-0.166204],[-6.018260,8.110506,7.900244,0.738326,-8.469539,2.025328,-4.533431,-2.795616],[6.167595,-1.999330,1.065011,-0.302279,5.729023,7.269211,1.036960,-5.933339],[-7.478769,-4.039680,2.716913,-5.803219,-1.158913,5.655409,-1.138647,-2.420634],[5.002349,2.550949,-7.509482,9.386092,7.426551,6.061973,6.319384,8.015153],[-9.406364,2.890237,1.949644,1.841090,3.260344,-0.845799,-3.081371,-7.622938],[5.098550,-9.993397,1.447022,1.909817,-6.777605,1.597233,-6.975089,-5.928122],[0.041978,2.849772,5.315953,-7.467682,2.198997,-1.313359,-9.724089,2.902284],[-3.489340,2.875503,-1.483075,-3.263959,1.483652,-0.787152,-0.301326,-9.862712],[-8.700373,-6.189061,-8.264293,-7.667616,6.494539,-5.038222,0.658089,5.467826],[0.227987,8.800978,9.343199,8.680138,-6.640904,1.640049,-0.192720,-4.757686],[5.764755,-1.800839,4.443290,1.665919,7.859937,-5.649370,-1.265133,-7.534350],[-8.760262,2.706143,0.813551,8.400745,-5.183289,8.122660,-0.639076,0.839977]],[[-9.596415,-6.451705,-1.440688,6.491968,9.703189,3.381131,3.785347,6.897120],[6.005396,-5.017374,6.685096,-7.062456,-6.916041,-4.328919,7.523666,-4.875988],[4.743086,-2.679557,-8.483270,8.272720,7.840295,3.885345,-4.683841,6.631397],[1.436081,0.362065,8.631810,-1.295084,9.534955,-6.570721,-3.176200,-8.056520],[3.064270,-9.590825,-1.899090,0.071562,-7.522004,6.834843,-4.024034,-9.580163],[-3.528006,-1.057400,-6.363282,5.514906,-8.399062,-0.115567,-4.394217,-6.022181],[4.373514,5.459640,0.010500,-7.317420,-3.066879,-8.725371,-6.519922,-0.564963],[-4.192345,-5.303544,-7.018068,-7.579261,4.279829,2.084512,-1.703328,-9.906965],[-7.690798,2.916823,-6.788660,3.190737,6.978149,0.237828,8.155050,-6.473050],[3.365215,-8.990454,-1.463988,-0.912554,7.275067,8.210246,2.176350,-0.542479],[-3.535531,9.837602,6.393601,1.557244,2.904006,-1.830037,-5.384320,-0.238829],[9.832375,1.815354,-1.835920,6.753037,-5.203595,8.120420,-5.933420,7.504800],[8.142038,-8.044204,-1.107338,-4.270514,-3.034263,-3.190944,2.980741,-2.508020]],[[8.413556,9.082344,7.405035,2.493834,3.264046,-2.074117,-1.793477,-2.159255],[-1.618544,-1.861445,-3.292122,-5.584679,7.276449,-7.944168,-9.918302,0.010493],[-8.927294,7.926657,-3.511259,7.742588,8.746328,4.840449,-1.273988,4.037313],[-2.809147,2.180379,-3.488488,-2.407040,-9.219613,6.475819,7.127442,-8.828598],[0.718116,-5.586723,-7.633748,3.122201,9.192459,-9.644721,9.012663,-4.304264],[0.567630,-6.000009,-3.603065,-1.063968,2.144702,4.390327,-7.817827,3.163621],[5.519992,6.318677,3.829381,2.883034,-9.084379,-0.914444,6.448330,1.904063],[-9.615359,1.569782,-4.283908,7.637268,1.107347,6.126866,-2.574169,2.563060],[-1.933845,-5.931745,4.240914,-3.190068,9.624733,9.117812,8.394818,5.079749],[8.385829,-8.038058,-6.785243,9.514249,-3.281278,-8.426424,8.961533,-2.150177],[-6.513148,-0.341730,-0.049265,1.639177,4.652855,5.528226,-7.590976,9.018005],[3.516064,0.189074,1.339163,4.206506,9.747875,4.200554,8.397742,-8.453027],[-3.399646,7.728533,8.511227,-1.144315,-1.504538,-8.666412,-4.266587,-5.307685]],[[5.628277,-4.296589,-7.414887,9.810105,9.901450,9.598066,-7.496440,-5.980601],[-1.619643,-1.164856,9.488777,-0.853252,-3.717522,-0.304769,-1.753090,-4.937750],[-9.444349,3.856653,-0.630344,0.881045,9.218076,-9.227295,-8.875869,-6.151353],[-0.399186,3.192938,2.760374,4.383046,-2.064920,-6.504321,-2.079860,-3.800593],[6.811896,-7.942669,-3.305270,6.302563,-3.607943,-6.851939,2.139767,9.047347],[8.271066,6.010440,-6.485758,-2.932654,-7.434616,-9.391932,8.459926,0.697278],[-6.965787,-4.121466,7.760911,-2.486976,4.352257,9.148254,0.886411,-1.505750],[6.419264,0.621355,3.851945,-9.604113,-8.912901,-5.889098,2.089901,1.037609],[7.555427,0.995635,3.088486,-7.565479,-9.577407,8.778435,-4.335654,-0.068633],[1.219156,-3.391272,3.586890,-7.798988,7.710442,4.935533,9.147713,-4.922620],[-1.139417,4.143580,6.686338,-6.948165,0.746268,5.266766,0.268300,1.370394],[9.866845,6.659601,-7.344426,-3.196869,5.461823,3.742770,-8.631291,4.769617],[5.416348,3.350827,2.305400,-7.191311,2.332141,-2.373909,2.479353,-9.999733]]], dtype = "float32")#candidate|5691|(4, 13, 8)|const|float32
bop_5692 = relay.floor_divide(call_5675.astype('float32'), const_5691.astype('float32')) # shape=(4, 13, 8)
bop_5695 = relay.floor_divide(call_5676.astype('float32'), const_5691.astype('float32')) # shape=(4, 13, 8)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_5700 = func_3981_call()
call_5701 = func_3981_call()
output = relay.Tuple([bop_5692,call_5700,])
output2 = relay.Tuple([bop_5695,call_5701,])
func_5705 = relay.Function([], output)
mod['func_5705'] = func_5705
mod = relay.transform.InferType()(mod)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5705_call = mutated_mod.get_global_var('func_5705')
call_5706 = func_5705_call()
output = call_5706
func_5707 = relay.Function([], output)
mutated_mod['func_5707'] = func_5707
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5856 = relay.const([[[-3,8,4,5,-6],[9,5,-2,-7,-2],[4,10,5,-6,2],[-5,-10,7,6,10]],[[-2,1,-1,2,3],[-4,5,8,-3,-3],[4,2,-4,7,-8],[-1,8,-2,6,-6]],[[-5,-5,-6,2,-7],[-6,2,4,6,-5],[10,9,-1,-6,-2],[-5,5,-9,3,2]],[[-4,-3,-6,-4,10],[-7,9,-8,-6,7],[-9,6,4,-6,-5],[-9,7,-9,8,-3]],[[5,9,-7,-4,3],[2,-6,7,2,-7],[2,-9,-7,-9,-2],[-5,6,10,-1,8]],[[-6,6,-9,-1,8],[1,3,8,6,9],[2,4,-8,-5,1],[-4,6,-10,-3,-7]],[[9,1,-5,4,-8],[9,6,10,-10,-4],[-8,9,-8,-8,-9],[4,-2,10,3,9]],[[8,1,-3,-8,6],[5,10,-10,2,9],[-3,-9,-5,-2,-4],[2,-1,6,4,9]],[[7,7,-8,4,-3],[1,-6,-2,-1,3],[-5,7,-6,10,-8],[3,2,5,-5,2]],[[-3,-5,-3,-2,-1],[-10,-8,2,2,7],[2,-7,7,4,10],[1,9,2,5,8]]], dtype = "uint16")#candidate|5856|(10, 4, 5)|const|uint16
var_5857 = relay.var("var_5857", dtype = "uint16", shape = (10, 4, 5))#candidate|5857|(10, 4, 5)|var|uint16
bop_5858 = relay.left_shift(const_5856.astype('uint16'), relay.reshape(var_5857.astype('uint16'), relay.shape_of(const_5856))) # shape=(10, 4, 5)
output = relay.Tuple([bop_5858,])
output2 = relay.Tuple([bop_5858,])
func_5863 = relay.Function([var_5857,], output)
mod['func_5863'] = func_5863
mod = relay.transform.InferType()(mod)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5864 = relay.var("var_5864", dtype = "uint16", shape = (10, 4, 5))#candidate|5864|(10, 4, 5)|var|uint16
func_5863_call = mutated_mod.get_global_var('func_5863')
call_5865 = func_5863_call(var_5864)
output = call_5865
func_5866 = relay.Function([var_5864], output)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_5970 = relay.TupleGetItem(func_2635_call(), 2)
call_5971 = relay.TupleGetItem(func_2637_call(), 2)
uop_5985 = relay.acos(call_5970.astype('float64')) # shape=(4, 4, 8)
uop_5987 = relay.acos(call_5971.astype('float64')) # shape=(4, 4, 8)
func_2794_call = mod.get_global_var('func_2794')
func_2796_call = mutated_mod.get_global_var('func_2796')
var_5998 = relay.var("var_5998", dtype = "float32", shape = (4, 56))#candidate|5998|(4, 56)|var|float32
call_5997 = relay.TupleGetItem(func_2794_call(relay.reshape(var_5998.astype('float32'), [4, 7, 8])), 0)
call_5999 = relay.TupleGetItem(func_2796_call(relay.reshape(var_5998.astype('float32'), [4, 7, 8])), 0)
output = relay.Tuple([uop_5985,call_5997,var_5998,])
output2 = relay.Tuple([uop_5987,call_5999,var_5998,])
func_6008 = relay.Function([var_5998,], output)
mod['func_6008'] = func_6008
mod = relay.transform.InferType()(mod)
mutated_mod['func_6008'] = func_6008
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6009 = relay.var("var_6009", dtype = "float32", shape = (4, 56))#candidate|6009|(4, 56)|var|float32
func_6008_call = mutated_mod.get_global_var('func_6008')
call_6010 = func_6008_call(var_6009)
output = call_6010
func_6011 = relay.Function([var_6009], output)
mutated_mod['func_6011'] = func_6011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3222_call = mod.get_global_var('func_3222')
func_3223_call = mutated_mod.get_global_var('func_3223')
call_6013 = relay.TupleGetItem(func_3222_call(), 0)
call_6014 = relay.TupleGetItem(func_3223_call(), 0)
func_4036_call = mod.get_global_var('func_4036')
func_4037_call = mutated_mod.get_global_var('func_4037')
call_6015 = relay.TupleGetItem(func_4036_call(), 1)
call_6016 = relay.TupleGetItem(func_4037_call(), 1)
func_1653_call = mod.get_global_var('func_1653')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_6021 = relay.TupleGetItem(func_1653_call(), 0)
call_6022 = relay.TupleGetItem(func_1654_call(), 0)
uop_6024 = relay.atanh(call_6013.astype('float32')) # shape=(4, 4, 8)
uop_6026 = relay.atanh(call_6014.astype('float32')) # shape=(4, 4, 8)
output = relay.Tuple([call_6015,call_6021,uop_6024,])
output2 = relay.Tuple([call_6016,call_6022,uop_6026,])
func_6027 = relay.Function([], output)
mod['func_6027'] = func_6027
mod = relay.transform.InferType()(mod)
mutated_mod['func_6027'] = func_6027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6027_call = mutated_mod.get_global_var('func_6027')
call_6028 = func_6027_call()
output = call_6028
func_6029 = relay.Function([], output)
mutated_mod['func_6029'] = func_6029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5705_call = mod.get_global_var('func_5705')
func_5707_call = mutated_mod.get_global_var('func_5707')
call_6042 = relay.TupleGetItem(func_5705_call(), 1)
call_6043 = relay.TupleGetItem(func_5707_call(), 1)
var_6051 = relay.var("var_6051", dtype = "float32", shape = (4, 5, 8))#candidate|6051|(4, 5, 8)|var|float32
bop_6052 = relay.less(call_6042.astype('bool'), var_6051.astype('bool')) # shape=(4, 5, 8)
bop_6055 = relay.less(call_6043.astype('bool'), var_6051.astype('bool')) # shape=(4, 5, 8)
output = bop_6052
output2 = bop_6055
func_6061 = relay.Function([var_6051,], output)
mod['func_6061'] = func_6061
mod = relay.transform.InferType()(mod)
mutated_mod['func_6061'] = func_6061
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6062 = relay.var("var_6062", dtype = "float32", shape = (4, 5, 8))#candidate|6062|(4, 5, 8)|var|float32
func_6061_call = mutated_mod.get_global_var('func_6061')
call_6063 = func_6061_call(var_6062)
output = call_6063
func_6064 = relay.Function([var_6062], output)
mutated_mod['func_6064'] = func_6064
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6066 = relay.var("var_6066", dtype = "uint8", shape = ())#candidate|6066|()|var|uint8
var_6067 = relay.var("var_6067", dtype = "uint8", shape = (8, 3, 3))#candidate|6067|(8, 3, 3)|var|uint8
bop_6068 = relay.subtract(var_6066.astype('uint8'), var_6067.astype('uint8')) # shape=(8, 3, 3)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_6079 = relay.TupleGetItem(func_1792_call(), 0)
call_6080 = relay.TupleGetItem(func_1793_call(), 0)
func_4564_call = mod.get_global_var('func_4564')
func_4565_call = mutated_mod.get_global_var('func_4565')
call_6082 = func_4564_call()
call_6083 = func_4564_call()
output = relay.Tuple([bop_6068,call_6079,call_6082,])
output2 = relay.Tuple([bop_6068,call_6080,call_6083,])
func_6092 = relay.Function([var_6066,var_6067,], output)
mod['func_6092'] = func_6092
mod = relay.transform.InferType()(mod)
mutated_mod['func_6092'] = func_6092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mutated_mod.get_global_var('func_6092')
var_6094 = relay.var("var_6094", dtype = "uint8", shape = ())#candidate|6094|()|var|uint8
var_6095 = relay.var("var_6095", dtype = "uint8", shape = (8, 3, 3))#candidate|6095|(8, 3, 3)|var|uint8
call_6093 = func_6092_call(var_6094,var_6095,)
output = call_6093
func_6096 = relay.Function([var_6094,var_6095,], output)
mutated_mod['func_6096'] = func_6096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2474_call = mod.get_global_var('func_2474')
func_2475_call = mutated_mod.get_global_var('func_2475')
call_6100 = relay.TupleGetItem(func_2474_call(), 0)
call_6101 = relay.TupleGetItem(func_2475_call(), 0)
func_2727_call = mod.get_global_var('func_2727')
func_2731_call = mutated_mod.get_global_var('func_2731')
var_6106 = relay.var("var_6106", dtype = "int64", shape = ())#candidate|6106|()|var|int64
const_6107 = relay.const([-9,-4,-9,7,-6,-6,-4,-9,-2,1,3,1,-8,3,-3,3,-7,6,-5,-3,2,3,2,6,-1,9,7,-2,-8,-9,9,-3,-7,4,6,5,7,-5,-10,-5,6,-6,4,9,1,5,10,-8,-8,10,-10,-1,3,-7,5,-5,-8,5,7,5,2,9,7,10,10,9,-5,6,-6,-2,-7,-3,5,6,-4,3,-1,9,-10,5,-8,-7,-5,-2,5,2,-2,6,3,-1,-3,4,-7,-3,-1,-6,-3,2,7,6,2,4,3,1,-4,-4,7,2,-10,-2,1,9,-10,-9,9,-8,5,2,4,5,-6,-4,6,8,8,8,7,-5,-10,-1,-2,-9,1,-5,5,-2,9,-5,-1,-5,-4,-10,2,-5,10,1,-4,-10,-2,-1,-5,9,8,-2,-8,8,2,4,-3,-6,6,4,-10,7,9,8,-1,-1,10,8,2,1,-3,-8,5,-7,3,-2,-8,-2,9,5,6,6,1,5,9,-7,-2,-9,9,7,9,-5,-10,-8,-9,-6,-10,1,8,5,2,2,-7,1,6,9,1,6,3,10,-8,-6,-1,-2,-3,-10,10,-8,-2,-4,1,6,9,3,8,3,10,-6,6,-1,6,-3,5,5,4,-6,5,7,5,-6,-3,-9,-10,-3,-3,-7,-8,-5,-4,10,10,-5,9,-10,3,-9,9,-9,-5,5,-9,-8,3,-1,6,6,-9,-2,6,5,10,-6,-4,-5,-7,8,3,2,1,-4,5,2,5,-2,-6,8,3,-2,-9,5,-9,2,8,1,-7,6,-7,8,2,10,-9,3,-4,-8,-6,-9,-5,-9,6,4,-5,7,-1,-3,-7,3,3,7,-3,-10,-7,5,1,8,-6,-1,5,2,-3,8,-9,-5,9,8,8,-2,-9,8,3,-7,8,-9,-4,-8,-7,6,-9,6,2,9,-6,-4,10,-6,7,1,9,-6,-10,-1,-1,2,-7,-8,-6,6,10,6,-1,-2,-4,-2,2,10,-4,-10,8,-7,-2,-4,1,-8,-8,-10,7,-7,-4,5,-9,-7,-8,2,-9,-10,3,7,4,9,-2,-10,3,-1,6,-3,5,-2,7,6,4,-6,2,2,-3,-7,-10,-7,4,-9,7,7,-2,-2,2,8,6,2,-9,3,7,-8,-6,-1,-4,9,2,1,5,-6,1,-5,-8,-6,-3,-1,-8,-9,-6,3,1,-1,-9,9,-4,-5,7,-4,6,1,1,-10,-3,-1,9,10,9,-3,2,4,-4,-4,8,-7,-10,-4,2,-7,-4,5,6,3,5,-4,7,4,9,-6,8,1,-10,6,-8,-7,5,8,-7,7,-9,10,10,-1,2,8,-9,-7,-4,2,-9,-6,3,6,-5,2,5,-1,-6,6,8,-9,4,7,-10,-4,10,-3,-4,-10,3,6,-4,5,-9,-9,6,5,5,-10,1,-3,-3,-3,-9,-9,-7,-2,-10,-2,-9,-8,-10,-5,-7,1,8,-8,-2,10,-5,4,4,4,3,4,8,7,5,6,-8,1,-1,-8,1,6,9,-8,6,-6,10,2,-2,-10,2,10,-1,7,9,6,-3,5,-2,4,5,-8,-10,4,1,10,10,-3,-10,-4,6,-8,-2,-3,-6,-4,-7,-9,-5,2,7,-9,-3,-7,-3,-3,-10,-7,3,-7,-7,3,5,4,5,6,-7,8,-7,4,-5,-8,7,7,7,1,5,1,-6,-10,10,-4,2,8,8,-1,8,-7,-7,7,10,-8,-3,-7,-4,1,-4,3,-6,5,-5,-6,8,-10,-10,8,6,-7,5,-10], dtype = "int64")#candidate|6107|(672,)|const|int64
call_6105 = relay.TupleGetItem(func_2727_call(relay.reshape(var_6106.astype('int64'), []), relay.reshape(const_6107.astype('int64'), [14, 12, 4]), ), 0)
call_6108 = relay.TupleGetItem(func_2731_call(relay.reshape(var_6106.astype('int64'), []), relay.reshape(const_6107.astype('int64'), [14, 12, 4]), ), 0)
bop_6112 = relay.bitwise_xor(const_6107.astype('int8'), var_6106.astype('int8')) # shape=(672,)
output = relay.Tuple([call_6100,call_6105,bop_6112,])
output2 = relay.Tuple([call_6101,call_6108,bop_6112,])
func_6128 = relay.Function([var_6106,], output)
mod['func_6128'] = func_6128
mod = relay.transform.InferType()(mod)
var_6129 = relay.var("var_6129", dtype = "int64", shape = ())#candidate|6129|()|var|int64
output = func_6128(var_6129)
func_6130 = relay.Function([var_6129], output)
mutated_mod['func_6130'] = func_6130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mod.get_global_var('func_3328')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_6135 = func_3328_call()
call_6136 = func_3328_call()
output = relay.Tuple([call_6135,])
output2 = relay.Tuple([call_6136,])
func_6137 = relay.Function([], output)
mod['func_6137'] = func_6137
mod = relay.transform.InferType()(mod)
mutated_mod['func_6137'] = func_6137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6137_call = mutated_mod.get_global_var('func_6137')
call_6138 = func_6137_call()
output = call_6138
func_6139 = relay.Function([], output)
mutated_mod['func_6139'] = func_6139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2246_call = mod.get_global_var('func_2246')
func_2247_call = mutated_mod.get_global_var('func_2247')
call_6160 = relay.TupleGetItem(func_2246_call(), 0)
call_6161 = relay.TupleGetItem(func_2247_call(), 0)
uop_6172 = relay.log10(call_6160.astype('float32')) # shape=(4, 1, 8)
uop_6174 = relay.log10(call_6161.astype('float32')) # shape=(4, 1, 8)
bop_6188 = relay.logical_xor(call_6160.astype('int16'), relay.reshape(uop_6172.astype('int16'), relay.shape_of(call_6160))) # shape=(4, 1, 8)
bop_6191 = relay.logical_xor(call_6161.astype('int16'), relay.reshape(uop_6174.astype('int16'), relay.shape_of(call_6161))) # shape=(4, 1, 8)
output = relay.Tuple([bop_6188,])
output2 = relay.Tuple([bop_6191,])
func_6198 = relay.Function([], output)
mod['func_6198'] = func_6198
mod = relay.transform.InferType()(mod)
output = func_6198()
func_6199 = relay.Function([], output)
mutated_mod['func_6199'] = func_6199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4002_call = mod.get_global_var('func_4002')
func_4004_call = mutated_mod.get_global_var('func_4004')
call_6233 = func_4002_call()
call_6234 = func_4002_call()
func_5157_call = mod.get_global_var('func_5157')
func_5158_call = mutated_mod.get_global_var('func_5158')
call_6253 = relay.TupleGetItem(func_5157_call(), 0)
call_6254 = relay.TupleGetItem(func_5158_call(), 0)
uop_6277 = relay.atan(call_6253.astype('float64')) # shape=(14, 2, 2)
uop_6279 = relay.atan(call_6254.astype('float64')) # shape=(14, 2, 2)
bop_6289 = relay.equal(uop_6277.astype('bool'), relay.reshape(call_6253.astype('bool'), relay.shape_of(uop_6277))) # shape=(14, 2, 2)
bop_6292 = relay.equal(uop_6279.astype('bool'), relay.reshape(call_6254.astype('bool'), relay.shape_of(uop_6279))) # shape=(14, 2, 2)
func_1098_call = mod.get_global_var('func_1098')
func_1102_call = mutated_mod.get_global_var('func_1102')
var_6296 = relay.var("var_6296", dtype = "float64", shape = (675,))#candidate|6296|(675,)|var|float64
call_6295 = func_1098_call(relay.reshape(var_6296.astype('float64'), [15, 15, 3]), relay.reshape(var_6296.astype('float64'), [15, 15, 3]), )
call_6297 = func_1098_call(relay.reshape(var_6296.astype('float64'), [15, 15, 3]), relay.reshape(var_6296.astype('float64'), [15, 15, 3]), )
output = relay.Tuple([call_6233,bop_6289,call_6295,var_6296,])
output2 = relay.Tuple([call_6234,bop_6292,call_6297,var_6296,])
func_6298 = relay.Function([var_6296,], output)
mod['func_6298'] = func_6298
mod = relay.transform.InferType()(mod)
var_6299 = relay.var("var_6299", dtype = "float64", shape = (675,))#candidate|6299|(675,)|var|float64
output = func_6298(var_6299)
func_6300 = relay.Function([var_6299], output)
mutated_mod['func_6300'] = func_6300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4882_call = mod.get_global_var('func_4882')
func_4883_call = mutated_mod.get_global_var('func_4883')
call_6307 = func_4882_call()
call_6308 = func_4882_call()
func_5411_call = mod.get_global_var('func_5411')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_6320 = func_5411_call()
call_6321 = func_5411_call()
output = relay.Tuple([call_6307,call_6320,])
output2 = relay.Tuple([call_6308,call_6321,])
func_6322 = relay.Function([], output)
mod['func_6322'] = func_6322
mod = relay.transform.InferType()(mod)
mutated_mod['func_6322'] = func_6322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6322_call = mutated_mod.get_global_var('func_6322')
call_6323 = func_6322_call()
output = call_6323
func_6324 = relay.Function([], output)
mutated_mod['func_6324'] = func_6324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5705_call = mod.get_global_var('func_5705')
func_5707_call = mutated_mod.get_global_var('func_5707')
call_6358 = relay.TupleGetItem(func_5705_call(), 0)
call_6359 = relay.TupleGetItem(func_5707_call(), 0)
func_4326_call = mod.get_global_var('func_4326')
func_4330_call = mutated_mod.get_global_var('func_4330')
var_6374 = relay.var("var_6374", dtype = "uint32", shape = (600, 2))#candidate|6374|(600, 2)|var|uint32
call_6373 = relay.TupleGetItem(func_4326_call(relay.reshape(var_6374.astype('uint32'), [15, 5, 16]), relay.reshape(var_6374.astype('uint32'), [15, 5, 16]), ), 1)
call_6375 = relay.TupleGetItem(func_4330_call(relay.reshape(var_6374.astype('uint32'), [15, 5, 16]), relay.reshape(var_6374.astype('uint32'), [15, 5, 16]), ), 1)
uop_6383 = relay.log(var_6374.astype('float64')) # shape=(600, 2)
var_6399 = relay.var("var_6399", dtype = "float64", shape = (600, 2))#candidate|6399|(600, 2)|var|float64
bop_6400 = relay.greater(uop_6383.astype('bool'), relay.reshape(var_6399.astype('bool'), relay.shape_of(uop_6383))) # shape=(600, 2)
var_6410 = relay.var("var_6410", dtype = "bool", shape = (600, 2))#candidate|6410|(600, 2)|var|bool
bop_6411 = relay.subtract(bop_6400.astype('float64'), relay.reshape(var_6410.astype('float64'), relay.shape_of(bop_6400))) # shape=(600, 2)
output = relay.Tuple([call_6358,call_6373,bop_6411,])
output2 = relay.Tuple([call_6359,call_6375,bop_6411,])
func_6416 = relay.Function([var_6374,var_6399,var_6410,], output)
mod['func_6416'] = func_6416
mod = relay.transform.InferType()(mod)
var_6417 = relay.var("var_6417", dtype = "uint32", shape = (600, 2))#candidate|6417|(600, 2)|var|uint32
var_6418 = relay.var("var_6418", dtype = "float64", shape = (600, 2))#candidate|6418|(600, 2)|var|float64
var_6419 = relay.var("var_6419", dtype = "bool", shape = (600, 2))#candidate|6419|(600, 2)|var|bool
output = func_6416(var_6417,var_6418,var_6419,)
func_6420 = relay.Function([var_6417,var_6418,var_6419,], output)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_6482 = relay.TupleGetItem(func_2412_call(), 0)
call_6483 = relay.TupleGetItem(func_2414_call(), 0)
var_6497 = relay.var("var_6497", dtype = "float32", shape = (14, 2, 2))#candidate|6497|(14, 2, 2)|var|float32
bop_6498 = relay.right_shift(call_6482.astype('uint16'), relay.reshape(var_6497.astype('uint16'), relay.shape_of(call_6482))) # shape=(14, 2, 2)
bop_6501 = relay.right_shift(call_6483.astype('uint16'), relay.reshape(var_6497.astype('uint16'), relay.shape_of(call_6483))) # shape=(14, 2, 2)
func_4834_call = mod.get_global_var('func_4834')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_6514 = relay.TupleGetItem(func_4834_call(), 0)
call_6515 = relay.TupleGetItem(func_4836_call(), 0)
output = relay.Tuple([bop_6498,call_6514,])
output2 = relay.Tuple([bop_6501,call_6515,])
func_6516 = relay.Function([var_6497,], output)
mod['func_6516'] = func_6516
mod = relay.transform.InferType()(mod)
var_6517 = relay.var("var_6517", dtype = "float32", shape = (14, 2, 2))#candidate|6517|(14, 2, 2)|var|float32
output = func_6516(var_6517)
func_6518 = relay.Function([var_6517], output)
mutated_mod['func_6518'] = func_6518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2185_call = mod.get_global_var('func_2185')
func_2186_call = mutated_mod.get_global_var('func_2186')
call_6538 = relay.TupleGetItem(func_2185_call(), 1)
call_6539 = relay.TupleGetItem(func_2186_call(), 1)
output = call_6538
output2 = call_6539
func_6549 = relay.Function([], output)
mod['func_6549'] = func_6549
mod = relay.transform.InferType()(mod)
output = func_6549()
func_6550 = relay.Function([], output)
mutated_mod['func_6550'] = func_6550
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6556 = relay.const(8, dtype = "int16")#candidate|6556|()|const|int16
var_6557 = relay.var("var_6557", dtype = "int16", shape = (4, 9, 12))#candidate|6557|(4, 9, 12)|var|int16
bop_6558 = relay.add(const_6556.astype('int16'), var_6557.astype('int16')) # shape=(4, 9, 12)
output = bop_6558
output2 = bop_6558
func_6561 = relay.Function([var_6557,], output)
mod['func_6561'] = func_6561
mod = relay.transform.InferType()(mod)
mutated_mod['func_6561'] = func_6561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6562 = relay.var("var_6562", dtype = "int16", shape = (4, 9, 12))#candidate|6562|(4, 9, 12)|var|int16
func_6561_call = mutated_mod.get_global_var('func_6561')
call_6563 = func_6561_call(var_6562)
output = call_6563
func_6564 = relay.Function([var_6562], output)
mutated_mod['func_6564'] = func_6564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4629_call = mod.get_global_var('func_4629')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_6822 = relay.TupleGetItem(func_4629_call(), 0)
call_6823 = relay.TupleGetItem(func_4631_call(), 0)
output = call_6822
output2 = call_6823
func_6828 = relay.Function([], output)
mod['func_6828'] = func_6828
mod = relay.transform.InferType()(mod)
mutated_mod['func_6828'] = func_6828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6828_call = mutated_mod.get_global_var('func_6828')
call_6829 = func_6828_call()
output = call_6829
func_6830 = relay.Function([], output)
mutated_mod['func_6830'] = func_6830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4036_call = mod.get_global_var('func_4036')
func_4037_call = mutated_mod.get_global_var('func_4037')
call_6863 = relay.TupleGetItem(func_4036_call(), 0)
call_6864 = relay.TupleGetItem(func_4037_call(), 0)
output = call_6863
output2 = call_6864
func_6880 = relay.Function([], output)
mod['func_6880'] = func_6880
mod = relay.transform.InferType()(mod)
mutated_mod['func_6880'] = func_6880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6880_call = mutated_mod.get_global_var('func_6880')
call_6881 = func_6880_call()
output = call_6881
func_6882 = relay.Function([], output)
mutated_mod['func_6882'] = func_6882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_6895 = relay.TupleGetItem(func_1792_call(), 0)
call_6896 = relay.TupleGetItem(func_1793_call(), 0)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_6902 = relay.TupleGetItem(func_1792_call(), 0)
call_6903 = relay.TupleGetItem(func_1793_call(), 0)
func_532_call = mod.get_global_var('func_532')
func_534_call = mutated_mod.get_global_var('func_534')
var_6910 = relay.var("var_6910", dtype = "float64", shape = (12, 154))#candidate|6910|(12, 154)|var|float64
call_6909 = relay.TupleGetItem(func_532_call(relay.reshape(var_6910.astype('float64'), [11, 12, 14])), 1)
call_6911 = relay.TupleGetItem(func_534_call(relay.reshape(var_6910.astype('float64'), [11, 12, 14])), 1)
output = relay.Tuple([call_6895,call_6902,call_6909,var_6910,])
output2 = relay.Tuple([call_6896,call_6903,call_6911,var_6910,])
func_6926 = relay.Function([var_6910,], output)
mod['func_6926'] = func_6926
mod = relay.transform.InferType()(mod)
var_6927 = relay.var("var_6927", dtype = "float64", shape = (12, 154))#candidate|6927|(12, 154)|var|float64
output = func_6926(var_6927)
func_6928 = relay.Function([var_6927], output)
mutated_mod['func_6928'] = func_6928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6942 = relay.var("var_6942", dtype = "float64", shape = (12, 3, 14))#candidate|6942|(12, 3, 14)|var|float64
uop_6943 = relay.cos(var_6942.astype('float64')) # shape=(12, 3, 14)
bop_6945 = relay.bitwise_and(uop_6943.astype('int8'), relay.reshape(var_6942.astype('int8'), relay.shape_of(uop_6943))) # shape=(12, 3, 14)
func_5365_call = mod.get_global_var('func_5365')
func_5366_call = mutated_mod.get_global_var('func_5366')
call_6948 = relay.TupleGetItem(func_5365_call(), 0)
call_6949 = relay.TupleGetItem(func_5366_call(), 0)
output = relay.Tuple([bop_6945,call_6948,])
output2 = relay.Tuple([bop_6945,call_6949,])
func_6951 = relay.Function([var_6942,], output)
mod['func_6951'] = func_6951
mod = relay.transform.InferType()(mod)
mutated_mod['func_6951'] = func_6951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6952 = relay.var("var_6952", dtype = "float64", shape = (12, 3, 14))#candidate|6952|(12, 3, 14)|var|float64
func_6951_call = mutated_mod.get_global_var('func_6951')
call_6953 = func_6951_call(var_6952)
output = call_6953
func_6954 = relay.Function([var_6952], output)
mutated_mod['func_6954'] = func_6954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4620_call = mod.get_global_var('func_4620')
func_4622_call = mutated_mod.get_global_var('func_4622')
call_6987 = relay.TupleGetItem(func_4620_call(), 1)
call_6988 = relay.TupleGetItem(func_4622_call(), 1)
output = relay.Tuple([call_6987,])
output2 = relay.Tuple([call_6988,])
func_7000 = relay.Function([], output)
mod['func_7000'] = func_7000
mod = relay.transform.InferType()(mod)
mutated_mod['func_7000'] = func_7000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7000_call = mutated_mod.get_global_var('func_7000')
call_7001 = func_7000_call()
output = call_7001
func_7002 = relay.Function([], output)
mutated_mod['func_7002'] = func_7002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_7008 = relay.TupleGetItem(func_2961_call(), 0)
call_7009 = relay.TupleGetItem(func_2962_call(), 0)
output = call_7008
output2 = call_7009
func_7020 = relay.Function([], output)
mod['func_7020'] = func_7020
mod = relay.transform.InferType()(mod)
mutated_mod['func_7020'] = func_7020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7020_call = mutated_mod.get_global_var('func_7020')
call_7021 = func_7020_call()
output = call_7021
func_7022 = relay.Function([], output)
mutated_mod['func_7022'] = func_7022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2107_call = mod.get_global_var('func_2107')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_7037 = func_2107_call()
call_7038 = func_2107_call()
const_7043 = relay.const([[[1.166105,-7.764913,-3.190179,-1.953908,-1.785894,-9.235655,-4.395946,6.111423],[-7.582286,1.965455,-6.397975,-9.074606,9.068153,3.193235,9.072484,4.185154]],[[8.058343,-4.021599,1.377075,8.267163,-2.801496,-0.767627,-9.840171,-7.228288],[6.964879,-8.322322,-9.953464,5.484909,0.463049,0.949046,2.151912,-0.318030]],[[1.052098,3.982830,7.793571,-2.029551,-1.768382,-2.771799,2.070859,-6.343406],[-4.786307,-0.268107,0.807295,-0.665373,-8.568760,2.928124,-4.604535,-9.542695]],[[7.887250,5.093275,-8.926598,-1.524570,-6.140204,8.072152,0.979749,-7.793339],[4.556123,-4.403544,0.887422,3.396376,-0.029062,3.838837,-7.868244,-1.799969]]], dtype = "float32")#candidate|7043|(4, 2, 8)|const|float32
bop_7044 = relay.mod(call_7037.astype('float64'), const_7043.astype('float64')) # shape=(4, 2, 8)
bop_7047 = relay.mod(call_7038.astype('float64'), const_7043.astype('float64')) # shape=(4, 2, 8)
func_3084_call = mod.get_global_var('func_3084')
func_3087_call = mutated_mod.get_global_var('func_3087')
const_7059 = relay.const([-6,-4,6,-7,7,7,6,3,-5,-10,5,6,10,3,4,4,1,-4,9,-3,3,-6,-7,-8,-9,-9,-2,6,-6,7,7,1,9,-6,9,5,-1,-4,-1,-3,3,-9,-8,9,1,6,-7,-7,4,-7,3,6,-2,-2,-3,7,6,10,-10,8,5,1,-2,-10,-2,-9,6,8,-6,-3,5,2], dtype = "uint32")#candidate|7059|(72,)|const|uint32
call_7058 = relay.TupleGetItem(func_3084_call(relay.reshape(const_7059.astype('uint32'), [2, 6, 6]), relay.reshape(const_7059.astype('uint32'), [2, 6, 6]), ), 0)
call_7060 = relay.TupleGetItem(func_3087_call(relay.reshape(const_7059.astype('uint32'), [2, 6, 6]), relay.reshape(const_7059.astype('uint32'), [2, 6, 6]), ), 0)
output = relay.Tuple([bop_7044,call_7058,const_7059,])
output2 = relay.Tuple([bop_7047,call_7060,const_7059,])
func_7062 = relay.Function([], output)
mod['func_7062'] = func_7062
mod = relay.transform.InferType()(mod)
mutated_mod['func_7062'] = func_7062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7062_call = mutated_mod.get_global_var('func_7062')
call_7063 = func_7062_call()
output = call_7063
func_7064 = relay.Function([], output)
mutated_mod['func_7064'] = func_7064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1624_call = mod.get_global_var('func_1624')
func_1625_call = mutated_mod.get_global_var('func_1625')
call_7121 = relay.TupleGetItem(func_1624_call(), 2)
call_7122 = relay.TupleGetItem(func_1625_call(), 2)
output = relay.Tuple([call_7121,])
output2 = relay.Tuple([call_7122,])
func_7143 = relay.Function([], output)
mod['func_7143'] = func_7143
mod = relay.transform.InferType()(mod)
output = func_7143()
func_7144 = relay.Function([], output)
mutated_mod['func_7144'] = func_7144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_7177 = func_2969_call()
call_7178 = func_2969_call()
output = relay.Tuple([call_7177,])
output2 = relay.Tuple([call_7178,])
func_7189 = relay.Function([], output)
mod['func_7189'] = func_7189
mod = relay.transform.InferType()(mod)
output = func_7189()
func_7190 = relay.Function([], output)
mutated_mod['func_7190'] = func_7190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5365_call = mod.get_global_var('func_5365')
func_5366_call = mutated_mod.get_global_var('func_5366')
call_7261 = relay.TupleGetItem(func_5365_call(), 1)
call_7262 = relay.TupleGetItem(func_5366_call(), 1)
func_6137_call = mod.get_global_var('func_6137')
func_6139_call = mutated_mod.get_global_var('func_6139')
call_7303 = relay.TupleGetItem(func_6137_call(), 0)
call_7304 = relay.TupleGetItem(func_6139_call(), 0)
output = relay.Tuple([call_7261,call_7303,])
output2 = relay.Tuple([call_7262,call_7304,])
func_7316 = relay.Function([], output)
mod['func_7316'] = func_7316
mod = relay.transform.InferType()(mod)
mutated_mod['func_7316'] = func_7316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7316_call = mutated_mod.get_global_var('func_7316')
call_7317 = func_7316_call()
output = call_7317
func_7318 = relay.Function([], output)
mutated_mod['func_7318'] = func_7318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5183_call = mod.get_global_var('func_5183')
func_5184_call = mutated_mod.get_global_var('func_5184')
call_7325 = relay.TupleGetItem(func_5183_call(), 0)
call_7326 = relay.TupleGetItem(func_5184_call(), 0)
output = relay.Tuple([call_7325,])
output2 = relay.Tuple([call_7326,])
func_7344 = relay.Function([], output)
mod['func_7344'] = func_7344
mod = relay.transform.InferType()(mod)
output = func_7344()
func_7345 = relay.Function([], output)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4882_call = mod.get_global_var('func_4882')
func_4883_call = mutated_mod.get_global_var('func_4883')
call_7346 = func_4882_call()
call_7347 = func_4882_call()
output = call_7346
output2 = call_7347
func_7350 = relay.Function([], output)
mod['func_7350'] = func_7350
mod = relay.transform.InferType()(mod)
mutated_mod['func_7350'] = func_7350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7350_call = mutated_mod.get_global_var('func_7350')
call_7351 = func_7350_call()
output = call_7351
func_7352 = relay.Function([], output)
mutated_mod['func_7352'] = func_7352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7417 = relay.var("var_7417", dtype = "bool", shape = (11, 9, 3))#candidate|7417|(11, 9, 3)|var|bool
var_7418 = relay.var("var_7418", dtype = "bool", shape = (11, 9, 3))#candidate|7418|(11, 9, 3)|var|bool
bop_7419 = relay.logical_and(var_7417.astype('bool'), relay.reshape(var_7418.astype('bool'), relay.shape_of(var_7417))) # shape=(11, 9, 3)
func_6561_call = mod.get_global_var('func_6561')
func_6564_call = mutated_mod.get_global_var('func_6564')
const_7451 = relay.const([-2,3,8,-2,-6,-7,7,-1,9,6,-3,1,-9,1,1,-2,-10,5,-9,-4,7,-9,9,3,1,1,-10,-1,1,-9,-1,5,5,1,7,8,9,10,9,-5,1,-4,2,3,1,-6,-2,6,-9,3,4,-9,1,2,-5,10,-7,-8,-4,-2,3,-7,-9,4,2,3,9,1,-3,1,4,-3,-8,1,2,-6,3,1,8,9,3,6,-4,-3,3,-5,5,-9,-1,-4,-6,-9,4,1,3,2,2,7,6,-2,-4,-8,-7,2,9,-10,-6,6,-6,2,8,5,-1,-5,2,7,-6,-5,-4,-8,2,-2,6,-8,6,2,-3,4,-1,2,8,-1,6,7,4,-7,-5,5,-6,4,7,5,-4,6,10,1,7,4,8,3,9,8,-8,7,-10,-5,-8,-6,1,-8,-8,-3,-10,8,8,-2,3,5,7,-5,-3,-1,-3,5,-9,-9,1,3,6,-1,-7,5,7,1,-2,-8,-7,7,-7,5,5,-6,5,10,-3,10,-8,-7,-3,-6,5,1,6,-5,2,1,-6,-4,6,-4,6,8,7,8,6,-8,-9,-6,-8,-8,-10,6,7,7,-7,-2,-5,7,-8,3,-9,6,9,-3,-10,7,-1,6,-4,-1,3,4,-4,9,7,7,-4,-6,-2,2,-9,3,-2,7,-9,-9,-2,10,5,1,3,8,8,2,2,-3,1,-2,-5,10,-9,-8,-9,10,-8,-6,6,10,-7,-5,4,-9,-6,-9,3,-6,-6,5,3,-1,-6,-3,10,-8,6,5,3,-7,6,1,5,2,-4,-1,2,-9,9,-3,-7,-6,-4,5,5,-10,9,-10,1,-8,-9,-3,10,-1,5,-10,5,-7,6,-10,-5,-4,2,-9,-6,-9,5,-7,-3,4,4,-2,9,-2,3,-6,10,1,3,-4,-6,-5,-4,-5,-3,-7,-2,-8,10,6,9,2,-1,3,4,3,2,-8,-10,-5,2,2,3,-7,-9,8,4,-9,-4,8,-2,7,-1,-10,8,6,7,5,5,5,-2,1,-3,-2,-5,-7,3,10,-9,-3,-6,-8,-6,-3,3,-4,-10,-3,-7,2,-5,-8,-4,-10,-9,-9,-3,-9,10,-9,-9,9,10,-2,5,1,-4,-8,-9,1,-1,-4,9,-3], dtype = "int16")#candidate|7451|(432,)|const|int16
call_7450 = func_6561_call(relay.reshape(const_7451.astype('int16'), [4, 9, 12]))
call_7452 = func_6561_call(relay.reshape(const_7451.astype('int16'), [4, 9, 12]))
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_7454 = relay.TupleGetItem(func_1792_call(), 0)
call_7455 = relay.TupleGetItem(func_1793_call(), 0)
uop_7462 = relay.acos(call_7450.astype('float32')) # shape=(4, 9, 12)
uop_7464 = relay.acos(call_7452.astype('float32')) # shape=(4, 9, 12)
output = relay.Tuple([bop_7419,const_7451,call_7454,uop_7462,])
output2 = relay.Tuple([bop_7419,const_7451,call_7455,uop_7464,])
func_7465 = relay.Function([var_7417,var_7418,], output)
mod['func_7465'] = func_7465
mod = relay.transform.InferType()(mod)
var_7466 = relay.var("var_7466", dtype = "bool", shape = (11, 9, 3))#candidate|7466|(11, 9, 3)|var|bool
var_7467 = relay.var("var_7467", dtype = "bool", shape = (11, 9, 3))#candidate|7467|(11, 9, 3)|var|bool
output = func_7465(var_7466,var_7467,)
func_7468 = relay.Function([var_7466,var_7467,], output)
mutated_mod['func_7468'] = func_7468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7344_call = mod.get_global_var('func_7344')
func_7345_call = mutated_mod.get_global_var('func_7345')
call_7500 = relay.TupleGetItem(func_7344_call(), 0)
call_7501 = relay.TupleGetItem(func_7345_call(), 0)
func_2794_call = mod.get_global_var('func_2794')
func_2796_call = mutated_mod.get_global_var('func_2796')
const_7503 = relay.const([-6.038586,8.265678,-2.782265,0.834937,-0.657867,6.026050,-0.843546,3.144060,-3.070698,2.907538,6.134189,-3.968092,7.210069,1.996845,-1.079958,8.793056,-7.514865,-9.908882,-2.501434,-0.918540,7.894388,5.734971,7.257701,-6.941589,-6.999451,0.224216,7.491777,9.219985,-7.547050,9.463352,7.294493,5.359809,9.029783,-9.798530,5.891056,-0.116655,-2.342619,1.268865,-9.927610,6.114565,8.777773,-1.225850,-4.111058,5.649249,-7.044932,-7.624729,-4.283376,-4.827273,4.026748,4.101671,2.401430,-3.851144,9.894290,-6.231231,8.734133,-5.891565,-0.321937,-6.221670,-7.210737,1.602625,-0.977498,-3.864190,-5.591191,9.767322,5.633593,-6.736401,-4.815868,4.628465,-0.888583,-4.119108,2.722011,1.236674,8.867232,7.466581,1.248430,0.695722,-0.007702,-1.402817,-4.941505,-5.397725,-6.212413,-2.058220,1.616583,-9.164147,5.263149,-9.705379,-8.385730,0.544781,1.441234,5.818188,8.643992,-0.843180,5.757618,-7.979047,-0.970174,6.540694,-8.413725,-1.467253,7.511050,8.257049,2.809700,-8.953878,7.184351,4.283376,-5.664995,-2.993827,7.549076,9.615525,2.683008,-1.980578,-7.182428,1.515211,-4.885433,0.597243,-8.114653,-8.095230,-3.883424,5.645136,-8.398625,-4.150738,-4.977525,9.485481,2.644527,-9.966014,-5.632999,9.658568,-1.282638,8.486003,-2.308437,5.925890,-0.889988,-8.217973,-2.460445,-4.374444,-2.213293,7.278926,5.000644,1.349177,4.930911,-3.644238,-1.488874,-0.534823,-9.376575,8.293218,-0.864027,0.261758,3.995032,3.266461,-5.027771,-7.845883,-9.302946,0.116426,-5.473487,5.431740,-7.331673,-3.589904,9.271350,4.149645,-6.075733,-5.034435,5.596477,3.060752,5.513997,-6.285150,3.887585,-9.051670,-9.304804,5.732623,-8.412827,-1.971251,-4.940564,-7.641373,-6.047983,3.149605,-8.513289,9.046227,-6.395539,-3.103856,-8.103602,6.971029,-8.579262,0.990971,6.681049,5.090993,7.950365,-7.054885,-9.850108,1.702646,-2.994498,-8.252831,-4.340388,2.490877,-7.298189,-6.442346,-3.509609,-7.871835,-5.009656,-1.024955,7.194568,4.182192,0.469463,-4.940542,-9.775121,-5.516196,7.906132,-4.317944,8.987391,-2.959236,1.466863,-0.368024,-4.058844,-1.311436,-5.642964,-2.223987,6.078482,2.728081,4.548836,-6.174456,6.142097,-4.750712,2.749015,8.538110,-7.875448,1.109875], dtype = "float32")#candidate|7503|(224,)|const|float32
call_7502 = relay.TupleGetItem(func_2794_call(relay.reshape(const_7503.astype('float32'), [4, 7, 8])), 0)
call_7504 = relay.TupleGetItem(func_2796_call(relay.reshape(const_7503.astype('float32'), [4, 7, 8])), 0)
output = relay.Tuple([call_7500,call_7502,const_7503,])
output2 = relay.Tuple([call_7501,call_7504,const_7503,])
func_7509 = relay.Function([], output)
mod['func_7509'] = func_7509
mod = relay.transform.InferType()(mod)
mutated_mod['func_7509'] = func_7509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7509_call = mutated_mod.get_global_var('func_7509')
call_7510 = func_7509_call()
output = call_7510
func_7511 = relay.Function([], output)
mutated_mod['func_7511'] = func_7511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_7520 = func_2210_call()
call_7521 = func_2210_call()
func_1288_call = mod.get_global_var('func_1288')
func_1292_call = mutated_mod.get_global_var('func_1292')
const_7541 = relay.const(2, dtype = "int32")#candidate|7541|()|const|int32
const_7542 = relay.const([5,-5,-3,3,-6,5,-7,3,4,6,1,7,-4,5,4,-10,8,-9,10,3,6,5,2,3,-3,10,-8,3,-5,-6,2,8,-9,-3,9,-8,-7,8,8,-5,-4,-8,3,2,10,7,-4,-4,-9,6,4,-5,-7,-10,6,-10,2,1,-9,-3,3,-9,-4,1,-9,-3,3,5,1,-6,3,-7,2,-10,3,10,-3,4,-3,3,6,-6,-4,-8,8,-3,-8,8,2,-2,3,-2,10,-6,-3,-6,4,7,-5,-4,6,8,2,5,5,-9,-9,7,-7,2,-9,-10,-2,-3,-9,-2,6,1,5,10,-3,-8,-9,2,7,7,-4,-1,1,1,-2,-9,2,-6,7,-7,-6,3,-2,-1,-10,-9,5,-1,5,-10,-5,-3,10,4,-7,10,-7,-9,9,-10,-8,3,10,-2,6,-9,-1,-9,-6,-8,3,-4,-10,-1,-3,-10,-9,-6,9,-3,-10,-7,7,-1,1,5,9,6,2,-10,8,8,5,6,2,10,-4,-2,-4,-5,6,1,-9,7,-2,-8,7,8,10,7,-5,-1,-3,-9,7,4,-4,-9,9,4,-2,-2,8,2,-5,-9,3,7,-4,7,-2,5,5,9,-1,-5,-5,2,8,3,-3,2,-2,-4,-9,8,-1,7,8,-9,-9,1,-3,9,-9,3,-5,-7,-5,-3], dtype = "int32")#candidate|7542|(256,)|const|int32
call_7540 = relay.TupleGetItem(func_1288_call(relay.reshape(const_7541.astype('int32'), []), relay.reshape(const_7542.astype('int32'), [8, 4, 8]), ), 1)
call_7543 = relay.TupleGetItem(func_1292_call(relay.reshape(const_7541.astype('int32'), []), relay.reshape(const_7542.astype('int32'), [8, 4, 8]), ), 1)
output = relay.Tuple([call_7520,call_7540,const_7541,const_7542,])
output2 = relay.Tuple([call_7521,call_7543,const_7541,const_7542,])
func_7550 = relay.Function([], output)
mod['func_7550'] = func_7550
mod = relay.transform.InferType()(mod)
output = func_7550()
func_7551 = relay.Function([], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4036_call = mod.get_global_var('func_4036')
func_4037_call = mutated_mod.get_global_var('func_4037')
call_7700 = relay.TupleGetItem(func_4036_call(), 0)
call_7701 = relay.TupleGetItem(func_4037_call(), 0)
output = call_7700
output2 = call_7701
func_7703 = relay.Function([], output)
mod['func_7703'] = func_7703
mod = relay.transform.InferType()(mod)
mutated_mod['func_7703'] = func_7703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7703_call = mutated_mod.get_global_var('func_7703')
call_7704 = func_7703_call()
output = call_7704
func_7705 = relay.Function([], output)
mutated_mod['func_7705'] = func_7705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_7726 = relay.TupleGetItem(func_2961_call(), 2)
call_7727 = relay.TupleGetItem(func_2962_call(), 2)
uop_7747 = relay.sinh(call_7726.astype('float32')) # shape=(14, 2, 2)
uop_7749 = relay.sinh(call_7727.astype('float32')) # shape=(14, 2, 2)
func_2727_call = mod.get_global_var('func_2727')
func_2731_call = mutated_mod.get_global_var('func_2731')
const_7761 = relay.const(-2, dtype = "int64")#candidate|7761|()|const|int64
const_7762 = relay.const([9,-7,7,4,3,3,-5,7,8,-3,-2,8,-6,-7,-1,4,-4,-5,-9,8,8,6,-6,-3,-1,-1,5,10,-10,-8,7,-8,-5,10,1,7,-9,7,8,-2,-6,1,-2,3,-9,-10,-4,-5,-3,-4,5,8,-6,3,-2,-2,-8,10,-5,-2,3,-9,4,6,3,4,1,3,-6,3,1,-8,10,1,-2,-8,-8,-2,2,-10,7,-2,5,-10,-2,-10,-8,-4,-6,-2,9,-3,-8,9,-4,7,-2,-4,6,9,6,-3,-8,3,-1,4,8,8,4,-7,8,-2,5,-9,-9,-9,8,9,6,-7,10,10,9,-3,-7,1,-4,-6,-10,-8,-3,-4,-8,4,7,-2,5,5,9,-8,8,-2,6,-1,-4,3,-7,-8,-2,-8,8,-5,1,-8,8,9,-9,8,8,10,-10,9,2,10,-2,2,-10,2,9,-6,-7,-2,-3,-2,4,2,8,9,9,-3,-2,10,4,-5,-1,9,-5,6,5,-10,-3,1,6,-1,-1,-7,-1,-5,8,-9,3,10,-9,8,4,1,2,9,3,-4,-6,7,9,-4,6,-7,1,8,4,4,-4,5,8,-6,6,5,-3,1,8,9,1,2,-3,-2,6,5,2,10,6,10,7,1,-2,2,-10,-4,6,10,10,-4,-7,-8,9,-8,-5,-6,-6,2,1,-9,-4,-9,3,-10,1,-9,5,7,7,-10,4,7,-4,9,5,-4,3,1,-3,6,9,2,3,9,-5,-4,-4,10,-10,-3,8,-5,-1,6,-9,5,8,-1,7,2,-8,2,5,-2,-2,1,-2,-1,-3,4,9,-10,-9,7,3,-9,-6,-5,-10,8,-1,1,5,4,-9,2,2,-5,4,-8,-3,-8,-5,-10,9,8,-6,3,3,1,-8,1,6,-10,2,-7,-2,-4,7,3,-1,-6,-1,2,8,7,-8,-5,-6,5,10,3,-7,10,-10,-2,5,-1,6,-2,7,-10,8,9,10,-2,-8,-4,-1,-10,9,-3,9,3,-7,2,4,1,7,6,6,8,2,-8,6,5,10,-2,-1,-4,9,4,-8,-7,-5,-2,2,2,2,8,-7,-7,-10,6,3,-10,6,10,-7,8,-2,2,10,10,5,4,-1,-1,-10,-2,6,7,-6,-7,4,4,6,9,-9,10,7,5,4,8,-2,-7,2,2,3,-10,5,-2,-9,6,2,-1,-9,6,4,-7,6,-7,-8,-8,-10,-7,-4,5,3,-3,-7,-3,-3,-2,-5,-5,1,-1,3,-9,10,10,-6,-9,-6,4,-7,4,6,-8,2,-3,-5,3,6,3,-9,-9,-7,6,1,1,-6,9,-8,2,10,7,10,7,2,-1,4,8,10,-7,1,-8,-10,9,-6,1,6,3,-6,3,10,-10,4,8,-9,5,-2,7,4,1,8,-3,-10,4,7,-5,-9,-3,-1,9,5,-2,-8,8,-6,1,-1,-10,-3,6,-2,-8,5,6,-2,8,10,2,-8,2,-9,7,7,2,4,9,8,8,9,-1,-8,8,-6,8,1,7,-2,2,4,9,-2,5,-8,-5,-7,-9,5,5,-8,-5,-2,10,9,-3,-8,2,-5,-3,-1,9,7,7,5,-3,-4,3,3,1,-7,-4,9,6,6,-6,-8,-7,2,6,5,-10,10,-8,-7,4,3,1,-5,-5,-4,9,5,6,-9,5,-4,6,8,-8,1,1,9,6,-6,-6,-2,-4,-1,4,-5,-8,4,2,8,-9,1,4,1,-5,-3,-9,5,1,8,-8,4,1], dtype = "int64")#candidate|7762|(672,)|const|int64
call_7760 = relay.TupleGetItem(func_2727_call(relay.reshape(const_7761.astype('int64'), []), relay.reshape(const_7762.astype('int64'), [14, 12, 4]), ), 0)
call_7763 = relay.TupleGetItem(func_2731_call(relay.reshape(const_7761.astype('int64'), []), relay.reshape(const_7762.astype('int64'), [14, 12, 4]), ), 0)
func_3832_call = mod.get_global_var('func_3832')
func_3837_call = mutated_mod.get_global_var('func_3837')
var_7765 = relay.var("var_7765", dtype = "uint32", shape = (630, 1))#candidate|7765|(630, 1)|var|uint32
const_7766 = relay.const([[7.218071,-7.182191,-3.200130,4.408349,-7.865598,8.984812,4.365246,9.656959,-6.360081],[-3.851532,7.161176,-5.033885,7.459170,-2.985841,5.241569,9.774013,3.066537,-5.429605],[-5.840930,9.391175,-0.743674,4.176436,8.376819,6.605698,-0.670059,2.929568,-7.804314],[7.968730,6.025053,0.416085,-3.127924,4.014483,-5.607483,8.971421,-7.162753,3.126207],[5.791175,-2.050052,1.750234,-6.014098,-3.864535,0.758863,8.276162,-5.963407,-1.163698],[0.232307,-5.735985,-5.436747,-2.239569,7.678162,-9.615591,8.753908,6.959259,2.028518],[1.564434,-4.649041,6.384320,-0.975265,-4.369777,4.547422,-1.530264,6.672839,-4.289054],[2.296607,1.602653,2.380749,4.394781,-6.328983,-4.933273,2.794767,4.197452,1.145719],[-9.882552,-5.642659,-8.392640,0.817725,-8.557948,4.544453,8.027806,-8.221037,-5.336616],[-4.961076,-3.686137,-9.688646,-4.665385,6.600500,-7.419704,-8.298136,-7.655178,0.663690],[5.546278,-7.419949,-6.678753,-6.828137,-8.910984,-7.212412,-2.843513,3.131343,6.399794],[4.846516,3.722746,-3.200725,-4.528382,-8.525123,4.053711,1.595419,4.788752,-8.713951],[-8.411939,2.332589,2.281564,3.428727,-1.256221,4.063035,-8.719312,-1.624823,2.783775],[0.905038,0.301475,-0.722156,-1.071018,9.442666,2.277116,9.595815,-0.178899,1.384746],[-8.209324,4.730994,5.474868,6.512034,-3.346034,4.902887,-8.638065,4.572060,4.483701],[-8.175859,8.909542,2.230917,5.796648,-0.128855,0.677447,-2.099680,-9.004660,-7.168183],[-5.967445,-5.400905,3.209362,-6.552989,-8.362210,-1.976034,4.000295,4.766726,-8.361576],[-5.122082,9.779306,-6.786401,-8.450282,8.143798,-2.515907,-8.890023,5.215641,4.456732],[-3.088709,-5.893725,8.810283,-8.823262,3.117445,-8.601733,-7.399338,2.619148,5.526817],[-6.409447,-5.774366,5.354108,-7.545131,8.186302,-4.523050,-3.879620,-6.256863,9.883404],[5.192247,9.389407,-6.913864,6.034952,-0.007038,-1.489585,-0.743436,9.183389,-2.389586],[8.137568,-3.202092,-9.756475,-3.700080,0.819413,0.161049,-1.790581,1.112864,2.070024],[6.232391,-2.788590,-6.979511,-2.408668,-4.343620,0.856094,-7.964257,7.299629,-8.562312],[9.183836,-7.201591,8.700291,2.663275,2.366703,2.644394,-0.364563,3.624992,-7.960896],[-2.131627,-3.664959,-2.245549,1.576245,-2.491903,4.524036,9.020946,6.510965,-5.833225],[1.300037,5.527530,-9.176204,-5.446840,1.615121,1.275048,9.603069,-0.018126,-6.870902],[2.117918,9.444517,-4.492871,-0.381291,1.300180,-6.549734,5.328898,-2.108115,-7.552925],[2.391860,7.568688,-3.022415,4.013759,-3.824736,7.890092,-6.105483,7.161281,-8.385390],[9.116783,0.401134,4.360414,-2.861391,3.025991,1.787825,7.061976,-8.946865,1.534583],[6.445984,-2.823877,2.919347,4.960663,2.960878,5.830682,-5.183395,-7.454489,-3.312403],[9.162607,-7.221394,7.927684,-7.716872,5.154053,8.581169,9.710998,3.564372,7.989094],[8.520965,-9.183391,1.884212,5.875831,-7.403727,5.284915,0.188780,2.790190,2.778353],[1.443820,6.980247,6.216828,2.156289,-1.469229,-9.951974,8.009302,-4.595767,-6.414150],[-7.559623,5.249985,-9.439857,6.364344,-2.476313,8.041381,2.830714,4.333394,2.018178],[6.752753,-6.222488,1.006026,0.374900,-8.357987,7.924633,3.714164,-5.046347,-9.396553],[2.350220,-2.626438,2.277885,-8.221627,-0.448368,7.454448,-2.608184,6.702761,-4.178223],[1.204866,3.007296,8.121885,8.667130,-7.339430,-4.070056,-9.029278,-9.713989,1.877686],[-6.063044,-6.827799,8.650537,2.368400,4.564973,-6.754807,6.319654,5.690117,-8.524671],[5.015180,-6.205255,1.585716,2.295949,-3.275869,7.303883,7.472380,1.291700,-5.013735],[7.024842,-4.029328,-4.890215,4.570746,4.249740,6.894129,2.340158,8.745081,-3.781103],[-0.221132,-3.296900,-2.073424,-2.852512,7.789467,2.890050,6.732108,4.416559,2.615604],[-8.274535,-3.346932,-8.543381,9.454251,-6.958096,4.865180,-9.475851,-2.125731,-2.235413],[-2.106065,-9.066020,0.158944,3.442100,2.436319,-7.356919,1.023324,2.583068,-9.028720],[3.353733,6.884182,-4.038502,-1.919234,8.299788,6.964452,2.930551,-6.442255,-3.581060],[-2.609150,-1.765107,-3.193510,-7.841916,-3.335997,8.883213,0.794989,-9.765278,4.640147],[8.954186,1.372295,-6.257574,3.172323,-4.584634,-4.338038,2.213342,8.004875,-5.771483],[-9.316622,3.761403,-0.444515,-7.699024,3.048610,-4.916228,8.462208,-2.548836,-7.417443],[-5.747500,9.089314,-3.397074,3.679367,-0.132107,9.706972,-3.197724,6.807621,-0.595700],[2.329399,-6.150943,-7.578054,7.852647,-1.836422,-0.440244,-1.283612,-0.690656,-2.570847],[3.783777,-6.213207,-5.825312,-2.328028,-1.256281,-4.489174,8.058374,9.668750,-7.130813],[7.477696,3.062415,8.377059,-0.775611,-7.890295,8.968114,2.448324,-1.276939,-0.070745],[-5.034323,-7.042210,4.799984,4.260708,-4.447240,-3.930416,-9.017692,-9.897898,0.759873],[-1.969448,8.389885,6.497437,2.084031,-1.320423,-0.799352,-0.810514,7.788791,2.511542],[7.157595,-4.778773,9.287968,-2.985474,-7.826912,-3.558020,-1.910902,5.576503,9.843938],[2.645582,-4.007153,1.432957,-5.252548,6.093827,-6.939459,-1.026649,7.022411,5.032621],[1.641678,1.283285,-3.770037,-5.349833,-7.771456,-6.215257,-3.216275,-4.765347,7.083540],[3.180265,1.348706,-5.522747,-4.948141,6.674997,6.670745,-9.367598,-7.702692,-1.713402],[9.780232,2.278787,-7.932622,-0.172799,6.389532,7.167788,-4.537015,3.943790,7.713055],[4.229162,-1.600411,-6.960079,7.875368,6.968013,-8.280448,-9.325679,-8.696287,0.921213],[5.554191,8.554119,-6.175358,-5.185004,8.075475,-8.703429,8.126890,-3.028418,-9.651206],[2.306944,-5.349579,7.206067,-7.488605,-7.065535,8.060161,2.758209,5.528427,-5.345436],[-2.448154,-4.807513,-6.726908,-8.881129,-1.686260,2.091231,3.776687,-4.508064,7.817102],[-8.061219,8.386602,-2.242194,-6.200381,-2.124387,-2.004948,8.973779,7.006359,2.467038],[-2.387599,8.597565,-2.656649,1.049096,4.314725,2.804301,0.319240,-3.374279,9.870745],[-2.832092,-3.415630,6.851956,3.177396,5.085992,1.300425,-6.892506,0.726207,-9.459790],[-6.269156,8.856210,-1.679048,4.621492,9.179705,-8.401179,-1.687497,-1.365603,0.217947],[-8.095451,9.346723,9.526314,-0.069241,-1.224685,1.943095,0.075772,5.901181,2.533688],[-2.206256,4.497696,-8.098151,-6.404273,-6.049632,-2.817863,-5.974639,-4.874198,-4.061052],[-2.030908,9.730956,-8.899158,-0.678442,0.218224,6.634886,8.652689,4.199061,4.997096],[-8.536627,-7.427839,-6.492044,0.297893,2.026200,-7.421769,2.367861,-5.035645,-3.146594],[-3.888874,9.266076,-5.764879,-7.076331,-0.523886,-0.219448,-2.071409,1.671082,-1.549386],[3.615681,-8.011947,0.434388,-1.035073,-5.441033,-1.230086,-0.149148,0.172990,-6.690358],[-1.084820,8.617654,-4.698577,-6.020614,-3.684393,5.921872,2.798347,-4.350646,-8.527483],[9.231328,2.819151,8.761969,-9.523681,-3.008831,3.140231,0.863830,4.886067,-0.774875],[-6.292163,-3.855399,-8.309804,6.601356,-9.533405,-0.913440,-7.191986,-9.013767,7.446001]], dtype = "float64")#candidate|7766|(75, 9)|const|float64
const_7767 = relay.const([2.921898,-5.982203,-3.870310,9.627378,0.786290,9.560970,-5.944062,0.825904,9.430619,-6.539603,-7.915641,4.419218,-6.606379,1.345821,-1.271687,0.545819,7.717988,-6.995096,1.350073,2.684593,-9.949426,1.812508,-8.280862,-6.056665,-7.957987,9.013543,0.910446,1.209014,3.310411,4.764727,9.245434,6.266156,-8.615188,-1.301139,5.410704,-3.010526,-6.075787,4.427980,5.310919,1.710106,-7.326719,-5.739173,3.774250,8.207744,-4.633198,9.307828,0.687940,3.298378,-3.682261,5.149552,9.743353,9.124102,7.262137,-0.857398,6.557735,2.696924,5.868688,7.622376,2.018676,0.192311,-0.497116,-5.294323,-9.219618,5.221975,1.926666,-1.344998,9.814582,0.336079,-2.246694,8.378650,9.098023,6.303499,-9.107703,6.075504,4.848456,-6.563870,9.400613,2.936534,-6.845188,1.823995,-8.505387,-0.590977,3.002844,-5.447452,2.138145,0.191821,-7.634720,5.425474,-4.909697,1.464906,-7.901950,2.597212,-0.091131,3.062379,7.563274,-9.553060,-3.694456,6.253533,-1.614150,-5.084324,4.315338,-4.218846,-3.310140,6.185171,8.979457,6.985330,-4.688011,0.136877,3.521688,5.164590,2.966283,-2.475582,-5.676329,-9.088956,-0.607714,-5.809076,-2.803755,9.679059,4.708447,5.559556,9.882636,-5.417747,8.699776,-1.726074,-9.364909,-7.751016,-2.567520,1.902159,-9.288730,1.608992,-3.919635,5.516850,3.883262,-3.654658,1.786658,0.186641,-9.298457,-6.087630,1.965359,-7.720472,-0.920339,-9.636923,-3.710547,6.102821,3.065270,6.223410,-1.686082,-8.828368,5.058783,-6.522399,6.384333,-8.543584,7.593890,5.150614,6.235978,-0.784532,-5.527754,-0.337457,0.419162,-6.986102,3.530262,-1.838516,-4.847778,5.809057,1.007180,-0.146024,8.416873,-9.969873,7.134683,6.610929,-6.901694,-5.669196,-2.866075,6.037992,-5.990885,-1.129104,2.942555,7.118923,-7.431980,9.065393,2.637760,-5.962431,-6.944426,0.949840,-1.914664,2.592502,3.769688,-3.791003,-0.817123,6.816517,0.611308,-5.358669,-3.334150,-1.405860,-6.740916,0.232622,3.237366,-6.302592,-0.992589,3.341479,0.214296,3.411004,-9.786748,-8.909276,0.427979,8.480465,-6.292298,5.287187,1.121213,0.047894,-8.478174,4.464323,-3.785803,8.395175,-0.825357,4.800287,8.548188,-4.617856,-9.037655,0.248320,-2.346411,-1.020878,-0.744521,8.507412,0.131797,-6.149118,0.704894,4.662523,5.789088,2.442935,8.869221,5.910135,6.286438,-5.189628,7.156585,-1.204924,-6.126248,-7.390003,-9.545566,2.939312,-2.979788,1.699161,7.361989,8.063104,-1.818556,-3.190782,0.947528,-6.510761,1.107487,3.111444,-0.483947,-6.639093,-3.478574,-5.056070,6.337833,7.940091,3.364837,4.495166,1.993679,9.334103,2.803979,-8.930013,-3.411931,-9.562476,2.300275,-1.179261,5.265342,3.854355,5.053911,-2.606090,9.098907,-1.706690,7.686576,7.600305,-3.923531,-1.124825,5.827433,-7.975839,5.943888,6.491721,-8.507077,6.199001,8.453088,-8.634015,-5.118404,2.697938,-0.757379,-9.695902,3.836754,-2.167436,-9.402911,-8.838351,4.915695,9.788105,6.520915,-3.860819,-6.058547,1.977676,-4.988854,-4.155322,-6.173332,-7.516026,0.843144,-1.401738,-9.394337,-2.385888,1.930036,-2.856763,-9.505758,-1.750680,9.937111,9.552613,-5.714630,9.109112,-2.661931,1.750174,4.780424,6.418023,-2.961332,5.452258,4.591430,6.673268,-8.748479,1.118655,-7.913252,-2.756056,-0.842597,8.629338,-7.943396,1.956104,4.224427,-7.716280,-7.167692,3.925200,5.835113,-4.532618,5.048743,-6.044672,1.414770,-4.997855,1.766197,4.963659,-0.934382,-7.822661,4.342188,-2.017684,-0.410161,3.812031,-6.034603,3.538290,-7.363954,-3.292260,2.735819,2.503530,3.424031,-9.863385,4.397461,-5.502802,7.278857,-6.694457,3.383669,9.971208,0.679335,-9.583968,6.345347,-6.474292,8.639687,5.355194,8.978212,-0.313572,-6.445162,8.551855,-5.873916,-9.654172,-9.373540,8.639049,6.063895,9.336735,8.019447,-6.008164,7.476264,-0.718028,-7.809189,3.444607,1.005695,-8.679976,9.784963,5.826252,5.860222,7.660903,-3.746843,7.684417,2.165868,3.136662,9.781325,7.621218,-5.594062,9.874934,-6.989354,-1.664776,-3.755614,0.445729,-8.942777,-6.218131,-8.606388,1.345810,-4.063461,-4.919269,1.543067,-5.595031,-5.377970,9.311875,-2.486326,7.496680,2.954015,-3.362648,-8.604940,8.324486,-8.753640,-0.505012,4.196931,8.388859,6.656752,7.953774,6.436381,5.264305,-9.847591,-3.036991,6.416705,6.758114,3.270245,8.611693,6.975152,-3.315042,-2.120362,0.539735,-7.935077,8.477003,-9.063169,-1.976397,-8.539961,9.967336,-8.722041,7.070055,3.885333,0.805679,-5.616878,-3.060494,9.155273,3.062470,-5.353460,-4.679055,-5.391666,-7.725302,-7.147487,-2.243851,-7.513307,3.684545,-1.553649,-5.502175,3.800758,-3.991149,-9.477238,-8.521053,-1.020668,5.357464,-6.776705,3.524335,0.170582,9.521365,3.478958,5.773360,-9.525292,-7.145938,2.338977,-3.789029,-3.360106,4.917129,-8.037942,1.492326,3.673156,6.249149,-7.977028,-3.511266,-2.850942,1.145579,-8.009108,3.719725,-5.005584,8.058385,-5.750124,-9.992101,-8.836047,-6.467486,0.215142,9.223358,-6.335882,-8.140743,-2.992190,7.284309,4.550916,-4.348115,0.072251,-0.816064,3.229387,5.227383,9.748825,9.999615,7.932159,-8.340563,1.410325,-4.061745,-7.579994,-5.314362,0.485324,9.852761,-1.731570,-9.780381,0.834459,1.843747,-1.012129,6.957859,6.554439,-8.715291,-9.529655,4.448352,-7.497717,0.764515,7.747647,7.057951,0.313821,2.536091,-4.472441,4.710110,-6.879517,6.926773,-1.466524,-1.520694,8.697930,-4.924035,-0.400155,8.180421,1.489144,7.664560,-0.253459,-8.692225,-4.768754,2.762041,9.353817,-9.519514,-3.038446,6.627464,-0.627317,-2.955661,-8.279697,3.367026,-5.810431,1.421202,-8.195282,-1.563737,-2.118740,-9.918306,-9.786576,5.355618,7.037208,1.184579,0.600834,-2.756186,6.028529,0.420957,9.536208,-1.943644,1.991869,-6.010878,-6.612102,-9.855861,9.957241,2.417580,0.639210,1.356289,9.665441,-4.413101,7.739693,-9.600375,2.481845,-8.550893,8.689245,-9.240725,6.766349,-0.875425,-8.109538,-3.665725,3.478012,9.128819,-8.545870,8.920521,-8.439222,7.441745,-3.235514,-6.417702,2.122056,7.483529,9.251750,-6.478243,-0.837389,-7.700391,3.651634,-8.643836,6.869617,3.138312,-1.635434,7.116063,-4.402041,2.080158,-8.530108,-2.727735,-7.757987,-3.847917,-9.538492,-5.910726,4.717850,9.919803,3.598259,-1.889499,9.753308,9.055238,-8.654270,-1.311733,2.478378,-6.264729,0.687483,4.316558,-0.376306,5.313479,-2.396215,1.433209,1.000410,3.763994,-0.871441,4.377443,4.840165,7.519406,9.290228,7.782734,8.979399,-7.177147,-4.519423,7.559397,-0.429394,5.177744,-2.353878,-0.647563,4.183129,9.780874,2.761723,-7.661430,7.131460,7.497785,4.112196,8.514835,-9.346980,-6.076143,4.379057,8.083319,-1.532663,9.135689,7.745252,-5.577512,4.435589,-6.781136,-1.265456,7.294356,-6.948642,-9.499277,8.505340,9.150243,-9.000921,0.137244,1.958186,8.310326,3.813128,-4.152859,-1.562463,-7.417713,-0.489459,9.320464,6.644545,-5.691587,6.176009,4.119398,-5.313894,-9.089075,-2.698605,2.451908,-4.884300,-7.099079,9.075721,-1.517317,5.288283,3.300722,8.986558,3.311825,4.197342,-8.734548,-8.490358,-5.934041,-9.299570,5.936591,-7.979611,-2.752011,6.587503,-1.596094,-7.119910,8.472894,2.081490,9.112045,7.891393,3.367292,3.375916,3.658860,-7.010116,-0.409868,-6.870034,8.008382,-5.561071,2.465065,-7.663946,-9.057138,-8.770672,8.533632,-0.606251,-4.772011,5.558576,6.416365,7.344592,-9.672379,-7.334364,6.470951,2.347658,8.234336,-7.963397,1.776905,-1.779447,4.121732,3.255250,2.369567,-2.557500,6.024631,3.901429,-0.599620,7.383625,-5.648663,5.743814,-1.227433,5.052533,0.137378,-1.475690,-0.361156,-7.038169,1.437978,-8.586840,-2.857499,-0.013743,-5.612153,-3.712882,6.707033,-9.457566,2.075090,1.655988,-4.277905,2.569076,-7.904415,-8.650923,-9.918724,7.033446,3.963203,-4.831342,-2.290565,3.893787,8.550872,6.981726,-3.927039,-2.892954,0.236852,0.189340,-5.082503,8.485530,2.018423,-6.677991,9.041227,8.087881,6.849012,-2.425245,9.310585,9.971384,3.197018,2.691780,-6.021278,2.333461,3.991588,7.091967,4.144554,-4.170468,-4.761732,-7.817200,-6.020681,-7.132419,-5.638357,4.094661,9.871672,-9.175793,0.971266,-8.460062,4.634188,-5.736224,-7.812263,6.573007,-1.720869,-6.343602,-8.597276,-0.440389,7.308494,-9.622258,6.586162,6.517250,-5.376947,7.575886,5.095330,4.000741,2.807579,4.346593,4.224710,3.615492,-7.075376,5.150020,5.011381,-9.153586,-4.151254,-4.424033,-4.035811,-9.206646,0.214650,0.128418,5.890804,8.009229,-4.807375,1.090368,1.265727,6.264899,-9.698137,-4.820580,5.947365,-4.271009,-2.191265,2.373720,-3.965369,6.106218,-4.958701,-1.902792,-1.586417,-1.669029,-9.060930,-7.191154,9.961220,-7.540171,-1.825552,7.146690,2.619580,-8.952266,-9.350438,-3.915420,2.175691,-9.682102,-9.087972,-3.681471,-7.759655,4.339429,-7.026346,1.539668,-8.463766,1.255099,-7.136127,-9.674269,3.231622,6.625227,-6.496900,-9.186934,-9.988105,3.837526,-1.602459,9.048264,4.574333,5.546191,-3.443205,2.255186,-1.238618,-1.904570,2.189580,-7.409056,0.882465,-4.810812,-8.406300,1.982911,8.355941,9.014437,-2.908466,-6.560389,-5.532932,6.774655,-7.258849,2.373570,-4.817428,-2.495683,-4.310810,-2.853891,-1.219120,1.090102,7.550585,6.211755,-3.687878,-2.447774,3.709796,-8.093890,0.363761,2.110838,-0.596744,-2.404369,-8.637934,-5.730245,-4.955515,-1.384013,1.132596,7.124729,-2.864774,7.142348,8.364758,-5.047263,-2.079358,-1.201513,-0.874279,-6.996362,-7.339182,5.284389,5.488075,2.125127,-5.992864,-4.115218,-4.847041,8.487755,7.438129,2.654377,-0.695025,7.659929,-3.577769,-3.844631,6.559719,8.388313,-3.219381,-3.182421,-5.050024,5.703279,1.906078,-1.289055,0.969670,9.731496,-4.755297,0.612470,-4.772123,4.405035,0.996072,6.253922,-4.141713,-2.888331,-1.525469,-9.420250,5.461138,7.632032,-7.765444,-5.979734,3.781219,-6.367829,-3.289869,3.068301,-2.679415,6.789955,-8.814823,0.100373,3.370503,5.544161,-1.130717,-3.336436,0.562989,7.174559,5.298792,3.088335,6.280930,-1.404208,-3.027768,-1.312422,-2.059554,-3.163736,-9.338960,-1.639021,5.635773,2.759074,2.306475,0.073974,-5.473015,-1.427195,-1.975781,-3.536953,3.901855,4.202388,-7.348538,6.586530,6.313960,-2.806662,3.750058,2.679735,-7.532260,-7.073785,-3.162669,6.494493,-8.130453,-1.348977,5.039530,-1.057672,6.920177,-0.753421,8.041664,3.210433,3.718180,2.325253,-5.239158,-8.310203,5.763393,-1.610217,-2.965525,-9.692420,-2.965608,-2.264698,-3.370271,-4.520559,-3.734058,8.177286,-9.687952,8.140392,-3.923561,-9.863780,1.637008,-6.990799,-4.386328,5.197201,-0.899640,7.366748,-6.342481,-5.038743,3.212023,8.141471,-9.364159,3.417785,4.994984,-8.447229,3.643008,-2.423843,0.598824,-2.428642,2.056177,3.112438,2.092201,-1.638111,-2.055478,-0.431905,-0.412022,7.467990,9.679045,3.921791,4.266096,-3.083295,6.868914,-7.678584,4.746508,-5.252843,-1.231410,-2.971528,-7.274994,9.925724,-7.509798,-8.638285,6.247037,1.367270,3.087001,3.472064,-9.395226,5.658454,-2.645332,1.132827,-2.859337,5.732286,6.592419,9.382866,-9.039343,-7.254675,-5.986605,7.815698,-9.595875,-7.862846,-6.705539,6.870427,-7.612000,-0.626482,-6.335168,-2.992760,0.812723,1.021820,-2.550903,-1.599476,1.881786,6.839080,-3.475063,-8.938890,5.404543,-0.963738,-1.705060,-6.920146,-3.966566,-6.872577,-4.221635,-8.339091,-1.433602,-1.068894,-6.079054,6.002901,9.902721,7.652970,-5.485576,3.735687,4.862614,8.462936,0.499094,-4.791413,-3.058114,-6.112869,3.265193,-9.600729,-6.988450,-4.740975,4.391846,-8.796648,-0.062089,-6.915718,2.809846,-3.660166,8.345853,3.715937,-4.945147,3.944484,-0.644589,8.431162,-6.150992,3.817632,3.954227,7.711484,0.614808,2.546466,4.083510,-6.310100,0.889282,5.706934,-1.179821,6.302151,-4.038511,2.234736,-0.156421,5.783486,-6.965838,8.913875,-0.167287,4.094580,0.630022,-6.789751,-9.795960,9.798469,9.484643,4.400190,0.427932,-6.158679,7.533901,-6.147488,0.931170,-1.197679,-0.455746,8.818787,-0.041348,5.987976,8.116717,-1.108664,-4.775904,-4.781419,7.338897,-3.663440,-5.249146,-4.107405,-5.957853,-6.491665,-3.192085,-1.976352,-3.323364,-7.917342,-8.071477,-1.653670,0.924689,1.628879,1.012009,2.264556,9.219235,2.777930,6.735894,5.450856,4.501586,1.630408,-8.191940,-9.547153,4.448017,5.711994,-4.477790,4.629193,2.210162,-4.532202,-0.680970,2.845263,1.602999,-5.668825,-3.453082,-5.551888,0.967968,-6.533927,8.515977,-2.668243,5.967599,-8.045935,-3.754793,0.947453,3.366726,-1.104667,8.947037,3.656989,-5.831510,1.277077,-1.933613,-1.426501,0.860677,7.860260,-4.695497,7.149675,-0.526271,4.636760,-1.497424,-4.190256,-1.816804,8.882309,-8.757624,-5.137697,-3.873942,8.422368,-8.201322,-3.873500,-6.944803,-4.696315,-4.114955,-8.801306,-6.065121,7.229797,-3.883540,-6.182284,-9.648360,8.768449,-3.242443,0.780514,3.645836,3.992567,8.998129,-3.908573,-6.194760,-6.993584,-5.295966,3.885595,-8.693069,5.738426,-6.987414,-3.784840,-6.398185,1.766921,6.659390,6.939799,1.502467,-9.068242,0.854509,8.614782,-7.807258,-4.780282,-1.435528,4.711197,-8.994381,-8.989676,-1.802964,4.977750,-9.678963,5.356506,2.491759,-8.433602,-7.039407,2.018961,7.258411,3.722147,-5.473108,2.983260,4.816496,-0.071914,2.594149,-8.946404,6.426032,-1.451755,-6.701505,9.916325,8.733709,-2.715161,7.909459,0.930825,-5.878124,-6.513260,-0.192462,-7.872269,-8.739493,4.230776,0.714526,9.245896,0.531032,-4.541858,1.081866,8.268298,8.536118,-6.059519,-8.880957,-2.263090,-7.004823,0.857537,-3.867884,-6.661948,-4.830629,-3.209472,7.005588,-4.961242,-8.822199,-0.054707,5.121419,-1.573133,-4.705224,9.100008,-8.135204,2.069704,-3.805227,0.527766,-8.125185,8.386573,6.392943,-0.981459,4.055685,3.698475,7.038106,4.371214,1.205136,-4.533087,9.158306,-5.016337,0.582163,-1.932684,2.324894,-0.742803,-4.879550,-4.276633,7.800026,-8.523042,-6.846066,-1.873781,-6.787090,-8.119768,9.383598,1.254145,-8.620229,-0.531089,6.644981,0.974877,-9.900425,5.999270,7.423079,-6.306650,-5.752164,0.315288,-7.969962,9.216084,0.576665,9.547683,-9.567560,3.153576,-5.119671,-5.242124,7.874790,-7.214711,2.144109,-1.604168,-3.260976,2.853721,8.053660,4.571235,7.011651,-3.095106,-6.960582,4.654658,-4.065854,0.131509,0.945797,9.024948,9.312758,-5.573664,8.486861,9.991547,-6.314995,-1.115646,0.874167,3.150768,-2.291643,7.721167,3.171329,4.070943,-0.585806,4.251883,-5.285332,-0.500291,-4.770535,-8.898082,5.207768,2.812351,8.950630,7.444539,1.044588,9.656872,5.922198,-7.028805,7.144661,-4.009052,-5.811481,8.942184,-2.147061,-8.006572,2.047477,-0.607222,-5.027635,-8.079084,-4.384131,-5.631625,-3.433609,8.137321,8.695930,0.535131,-9.861104,-3.766825,4.752280,9.005566,7.573389,-9.854365,6.006019,7.296570,4.794580,1.466379,3.440833,4.786327,3.247587,4.175138,7.015282,1.502852,5.985281,-4.239278,-5.374490,-1.671628,-7.344411,-6.627585,-3.685315,2.998569,5.995622,7.374285,1.108189,-2.519314,8.315042,2.195916,-0.063956,-9.491463,-8.346221,-9.016479,5.139614,-3.393688,-6.265269,8.219940,-6.091504,-9.508491,7.140120,-6.688439,-2.693940,0.865220,5.540636,-7.253109,0.367011,5.320563,-4.928721,-6.144838,-3.124356,5.974782,7.320739,0.463422,0.574561,0.022989,4.148730,8.624857,2.307119,-4.570325,9.845482,-7.661717,1.313615,-2.688122,-5.526572,6.345912,7.166704,2.500131,2.575576,-8.264435,-7.132864,1.757836,-5.477628,1.183501,6.094283,-3.078062,9.141366,-6.803495,-9.015079,-5.036326,2.065862,0.819091,-8.333805,-2.283927,-3.895614,-6.187415,-3.792316,-9.550990,1.412268,-1.139510,9.165584,0.758438,-6.877989,-0.429703,4.508337,1.832614,-2.090790,6.214811,8.876202,9.583941,5.032390,-4.416738,8.585080,-9.819562,-6.181446,-7.090006,1.008630,-9.607432,9.962783,-7.472710,0.880463,7.743548,-0.279599,-0.862801,-9.243615,3.890569,-9.878810,-0.263826,0.808259,-0.755783,0.931483,8.902772,-9.757006,-6.969005,-1.128048,-5.182910,-9.344085,-5.100551,3.862901,-2.059036,-1.014283,6.046642,1.511937,-2.875743,-8.953048,4.906914,9.863195,-6.604576,-5.662109,8.526366,0.939810,1.558245,-6.765416,-3.220633,-4.592027,1.372577,6.016258,6.211755,-7.458936,8.590049,-7.927784,2.519713,2.222258,-3.267570,-8.240829,8.600378,8.373137,-4.547063,-2.165882,7.466735,2.648328,7.480773,0.904399,-8.901996,-8.035111,-5.228702,-2.759732,2.569761,8.909896,2.318553,2.826589,3.127647,1.111949,-2.647051,5.438062,4.133250,4.180673,7.479823,4.063306,-0.820139,9.990054,3.632817,-6.849896,5.428493,-1.424926,-5.727639,7.313405,-3.561574,1.267506,-1.932312,6.969772,6.245060,-1.098859,3.674363,-2.799929,-7.351236,2.481571,4.933256,-8.782295,7.343829,-5.662334,-3.828831,-5.932108,-3.734135,-0.768705,-0.047631,-8.453344,-4.538500,-7.667893,2.488075,1.726446,-9.539514,6.820809,5.351033,-3.173802,-1.876056,-7.188257,0.448896,0.716201,-5.791185,-1.794015,6.891211,-9.031173,-6.883993,-3.473444,-8.456347,9.214002,-6.701869,-6.978859,-9.941918,-0.529172,4.924382,6.687064,2.984874,0.689977,-4.729167,-4.041720,-8.858363,0.818105,4.290696,-2.699505,-2.381819,-7.212651,-6.335141,-5.164768,-1.242747,5.271342,9.388051,-1.455461,-7.503346,-2.447814,0.436453,-0.291294,8.998423,-3.030831,4.045505,-2.930208,-3.647050,-0.569312,-3.132289,2.755495,-9.275005,-2.392050,-6.712792,-3.914411,-4.141602,6.850370,-8.091687,-9.548721,-3.247977,-2.186500,6.053068,8.110965,-2.847826,1.036155,-2.308139,6.187572,9.555811,-4.132566,-4.840606,-1.677941,5.563243,-3.026788,-1.056279,9.397620,-3.895842,-7.932209,4.734064,5.656340,-6.380344,-1.732729,-9.959075,4.870551,4.527790,3.721743,-4.915581,4.108204,2.828923,1.605894,-0.791316,-2.582592,4.700292,-1.301933,-6.674268,-1.079154,-9.059877,9.942869,-4.623888,3.832129,-9.158202,4.811059,-3.960035,-6.504763,-5.711923,6.896595,3.406802,9.861146,1.966322,7.003237,-4.266313,-9.313771,-9.962262,5.411042,-3.100294,-7.015296,1.588005,6.145274,-7.831843,1.715473,-2.049329,1.705072,2.033809,-7.517622,5.886114,-5.187580,2.946348,-6.543498,9.814037,-4.562456,-5.781000,-0.084527,-9.032498,-2.191727,-1.098123,1.991919,-4.541153,-1.689481,-7.453601,-6.566401,-9.891395,7.985261,3.932263,4.611900,7.820870,-8.050231,-7.701538,8.293840,6.515424,-1.495330,7.314314,-4.416974,-6.913781,7.751787,5.249790,-4.600771,2.635286,4.850882,-0.414672,7.966163,-9.157691,8.052810,-7.565547,6.458232,-1.103503,9.199317,6.321391,-4.176683,-0.104385,-2.823319,4.069554,3.872606,-9.067700,-8.318120,9.526453,-7.352368,1.612037,7.819155,-5.417793,4.208115,-2.654119,1.484295,-6.616099,6.391844,1.061538,-7.046854,2.258689,1.713998,-9.991643,-2.691890,0.672771,3.673914,-1.731844,0.424784,5.478229,-5.389821,3.758893,-8.287007,8.057656,2.950693,2.127929,4.793920,2.711321,7.627290,-7.613966,-3.296246,-4.015546,0.353223,-3.363066,-2.353096,4.331705,9.377844,-8.624094,7.192784,4.541435,-1.761171,-4.691975,3.201007,6.539108,-5.450142,-2.508916,5.092630,-1.166075,-2.904725,7.432092,6.221427,7.541795,-3.414145,-0.592171,3.347001,-5.380465,-3.399500,1.751263,-1.564139,-9.950522,9.778876,1.825497,-6.507519,9.203397,-6.509686,5.090415,0.200248,-2.678515,-8.905474,5.469678,9.033330,6.020488,4.818169,4.901684,5.919310,-4.517988,4.362157,-2.484523,6.744598,-9.531502,-4.433124,7.654189,-6.778897,2.764732,-6.186990,-1.129241,-2.548325,-2.834503,-5.818996,-7.357330,3.384067,-7.698696,-4.865083,-6.875490,-8.087497,-3.578364,-7.086042,0.574326,3.768800,7.150552,1.118322,7.942156,-8.639163,2.764985,-3.521681,-4.497002,-4.639528,-9.899687,1.713757,5.030773,3.772934,6.622340,1.970860,-0.012402,3.645710,0.005249,0.850054,7.897947,-7.014953,-9.339055,-0.490731,-4.116425,-6.950346,0.044406,-6.856263,2.434064,-6.472446,0.322290,2.765942,8.119074,-9.021256,-3.946553,6.161271,4.811175,-4.313308,-3.716949,-8.516057,-8.950678,1.485415,2.020438,-3.435562,8.185957,6.753075,-4.759852,-9.605507,7.404661,-7.685498,-0.337605,1.016346,2.230200,-7.970735,-6.152907,3.708758,3.729319,7.203201,-1.619591,0.788290,-5.781836,-1.894849,-9.530699,-8.827346,5.530190,9.145384,6.846009,2.111679,-8.405544,-3.827675,4.326294,8.050940,0.394595,4.700440,-8.375270,8.133087,7.411158,-8.129736,3.095398,5.243177,0.465797,-6.699216,-9.733840,-8.083975,6.974559,7.478089,-4.199872,7.848847,3.222068,1.465038,-3.424175,2.125532,-5.379736,9.926039,-2.985946,5.690654,9.323821,-4.076674,4.204502,-5.250020,-1.705880,9.784667,1.019335,-4.610238,4.134796,-7.890887,-8.874666,9.986444,5.541486,-0.343268,-7.886129,-7.649886,-4.730113,3.913086,9.223088,-9.975985,1.261582,-1.029694,1.138939,-1.398059,-4.837145,-2.534110,-6.703975,9.620389,-6.807664,8.042995,3.085887,-9.285903,4.462476,-4.838771,2.962853,-1.293026,-3.794587,4.017895,9.784371,1.082844,3.668802,-8.893306,3.550069,6.384419,-6.530402,-2.412450,-4.314420,6.040864,-7.210844,-5.537051,-4.182278,5.621248,1.993727,-0.627453,-8.151579,-8.545424,5.445354,2.979933,0.715780,-8.656789,0.260527,3.298687,9.438538,8.500782,-3.063447,-7.932648,-2.528346,-0.769223,-1.572155,-2.484683,-1.226879,-1.115006,-1.675048,-8.129453,8.617001,8.044517,-0.054435,-7.799206,8.378078,5.440644,-5.554500,-4.405341,3.775195,-8.816177,-2.549202,-9.506770,-7.491081,-5.384404,-1.209509,-9.568616,-9.632183,0.113539,-4.963329,-5.218444,6.471858,-9.185451,9.782222,9.302510,7.282243,8.123063,-1.132427,-9.748172,-0.542319,9.365780,5.985988,-0.091080,2.329668,-0.480971,-1.048564,4.332655,1.153499,0.317332,3.875960,9.279994,-2.364562,-5.202500,0.980290,8.639750,6.170971,-0.367741,-2.673299,-7.708081,-6.133427,-8.007497,-9.395550,6.543521,6.115574,-3.697050,7.094158,1.546106,-3.641853,-0.524829,-8.896925,-4.097782,1.756233,-6.930858,7.955888,8.946074,-2.996009,-4.160822,-2.469972,-4.764928,-5.262137,-6.248452,-0.534030,-4.773351,4.649212,-5.199918,-4.012702,7.377511,-4.124586,-8.633763,4.090603,4.508602,6.051364,-2.209471,1.541634,8.484723,1.946634,0.315302,9.327144,1.420125,9.271038,-0.551084,-2.144543,1.660547,0.633155,-3.280286,0.930041,-9.206376,-6.369387,-0.227167,8.964400,6.081892,2.957654,5.023291,-1.924027,8.634191,-8.755162,-7.546181,-1.412045,2.753882,2.451551,-0.243202,-2.382858,5.519175,2.056602,-1.395618,3.735575,0.087359,3.869178,5.071361,5.537606,7.890429,-4.476830,-8.306178,7.080084,-4.745161,-0.146440,8.903924,-0.983048,3.929044,6.953701,-1.257123,3.456623,4.541924,-7.279589,7.466777,-5.618196,-0.148057,-5.634580,7.272144,-5.699779,-2.838430,-6.371556,3.218364,-6.532797,-5.074788,9.282890,-3.285811,-3.189773,7.296512,-3.724587,4.349077,3.958512,5.541471,-9.590797,2.957445,-4.619400,5.704584,2.052274,0.052826,4.251913,0.639444,7.495528,-9.165794,-0.141661,-5.525328,-3.472415,7.768490,5.219978,7.696272,1.808260,2.324310,-8.050517,-2.724176,7.742438,1.292534,4.058586,9.854160,-5.767971,-2.238821,4.636439,5.349425,-8.099552,5.065410,2.800290,-7.695487,4.361716,-7.118913,-6.791546,-7.134849,5.158938,9.345630,-0.946086,8.530939,-1.604872,8.769741], dtype = "float32")#candidate|7767|(2310,)|const|float32
var_7768 = relay.var("var_7768", dtype = "float32", shape = (384,))#candidate|7768|(384,)|var|float32
call_7764 = relay.TupleGetItem(func_3832_call(relay.reshape(var_7765.astype('uint32'), [630,]), relay.reshape(const_7766.astype('float64'), [675,]), relay.reshape(const_7767.astype('float32'), [14, 165]), relay.reshape(var_7768.astype('float32'), [4, 12, 8]), ), 7)
call_7769 = relay.TupleGetItem(func_3837_call(relay.reshape(var_7765.astype('uint32'), [630,]), relay.reshape(const_7766.astype('float64'), [675,]), relay.reshape(const_7767.astype('float32'), [14, 165]), relay.reshape(var_7768.astype('float32'), [4, 12, 8]), ), 7)
output = relay.Tuple([uop_7747,call_7760,const_7761,const_7762,call_7764,var_7765,const_7766,const_7767,var_7768,])
output2 = relay.Tuple([uop_7749,call_7763,const_7761,const_7762,call_7769,var_7765,const_7766,const_7767,var_7768,])
func_7774 = relay.Function([var_7765,var_7768,], output)
mod['func_7774'] = func_7774
mod = relay.transform.InferType()(mod)
mutated_mod['func_7774'] = func_7774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7774_call = mutated_mod.get_global_var('func_7774')
var_7776 = relay.var("var_7776", dtype = "uint32", shape = (630, 1))#candidate|7776|(630, 1)|var|uint32
var_7777 = relay.var("var_7777", dtype = "float32", shape = (384,))#candidate|7777|(384,)|var|float32
call_7775 = func_7774_call(var_7776,var_7777,)
output = call_7775
func_7778 = relay.Function([var_7776,var_7777,], output)
mutated_mod['func_7778'] = func_7778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2115_call = mod.get_global_var('func_2115')
func_2117_call = mutated_mod.get_global_var('func_2117')
call_7793 = relay.TupleGetItem(func_2115_call(), 0)
call_7794 = relay.TupleGetItem(func_2117_call(), 0)
var_7799 = relay.var("var_7799", dtype = "float32", shape = (14, 2, 2))#candidate|7799|(14, 2, 2)|var|float32
bop_7800 = relay.power(call_7793.astype('float32'), relay.reshape(var_7799.astype('float32'), relay.shape_of(call_7793))) # shape=(14, 2, 2)
bop_7803 = relay.power(call_7794.astype('float32'), relay.reshape(var_7799.astype('float32'), relay.shape_of(call_7794))) # shape=(14, 2, 2)
func_4036_call = mod.get_global_var('func_4036')
func_4037_call = mutated_mod.get_global_var('func_4037')
call_7805 = relay.TupleGetItem(func_4036_call(), 0)
call_7806 = relay.TupleGetItem(func_4037_call(), 0)
func_5134_call = mod.get_global_var('func_5134')
func_5136_call = mutated_mod.get_global_var('func_5136')
call_7808 = relay.TupleGetItem(func_5134_call(), 0)
call_7809 = relay.TupleGetItem(func_5136_call(), 0)
output = relay.Tuple([bop_7800,call_7805,call_7808,])
output2 = relay.Tuple([bop_7803,call_7806,call_7809,])
func_7812 = relay.Function([var_7799,], output)
mod['func_7812'] = func_7812
mod = relay.transform.InferType()(mod)
mutated_mod['func_7812'] = func_7812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7813 = relay.var("var_7813", dtype = "float32", shape = (14, 2, 2))#candidate|7813|(14, 2, 2)|var|float32
func_7812_call = mutated_mod.get_global_var('func_7812')
call_7814 = func_7812_call(var_7813)
output = call_7814
func_7815 = relay.Function([var_7813], output)
mutated_mod['func_7815'] = func_7815
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7885 = relay.const([[[3.141225,4.108298,-3.964210,-4.780218,-3.177913,3.830421,6.869140,1.418347,8.912847,9.167483,3.881357,-3.475377,-9.702348],[0.639322,-0.882087,-5.505043,5.747765,9.708340,3.746997,7.880882,2.111952,0.926193,-4.822457,-4.033990,-4.783873,-0.573879],[-2.885314,-3.433408,-3.955184,-0.413515,-2.141105,-7.511589,-0.183515,1.541325,9.931463,0.521369,9.842674,-4.961077,4.675416],[3.168982,-5.385927,5.219163,7.708023,5.546570,-2.130235,-3.134866,-9.073466,-7.095182,-7.787744,-7.649364,0.904190,-2.534374],[-0.047456,-3.803116,2.926321,1.391496,0.088162,-9.510737,0.684083,7.756534,4.386590,-0.427483,-4.888358,-6.709936,3.891169],[6.078817,-5.227034,3.731675,-3.240180,7.575012,-8.008463,1.448054,9.058240,-1.975172,5.460301,-7.201514,1.247342,-2.455431],[-9.961800,-0.376792,8.955521,-1.355608,1.589291,-4.314690,5.315073,5.392342,-3.382130,-0.418900,5.474550,-7.730896,-8.429251],[5.260486,-6.074798,1.639852,1.839185,-7.357917,8.548491,-1.191818,-2.389336,-7.895884,-1.434935,0.372617,-7.868235,3.236095],[-4.597947,-8.491835,-3.230848,-3.440924,4.125216,1.964567,9.634462,0.609804,-6.590122,8.184936,-2.342832,4.990670,-2.868115],[-2.689724,-7.815327,-4.293034,4.340019,0.427918,-3.282660,-5.146457,2.348890,-3.348918,7.572006,-0.097072,-6.439120,2.478483],[7.027035,2.095160,9.047939,4.460126,5.377496,6.767371,-6.543252,3.238138,-6.036185,6.541496,4.490238,9.465779,3.254550],[9.469536,6.254347,1.352659,1.377389,-7.289350,-4.024228,-6.330598,1.707237,-7.078749,-5.520467,3.089946,-6.879122,-8.286559],[-7.804313,-7.828638,5.768785,2.102663,-2.409168,-0.561968,-8.992906,2.511392,-5.129991,-8.515257,2.807655,1.373684,-9.492103],[-5.038593,7.609583,5.592063,-3.320785,-2.963629,1.016844,5.222025,-6.552518,3.693335,-9.209235,4.075729,-5.904555,0.810036],[-7.840546,7.565789,8.259739,8.698921,-3.447943,-6.213232,8.166001,2.279565,4.979864,-9.311541,-7.967861,-2.819562,-4.778388]]], dtype = "float32")#candidate|7885|(1, 15, 13)|const|float32
uop_7886 = relay.atan(const_7885.astype('float32')) # shape=(1, 15, 13)
func_5365_call = mod.get_global_var('func_5365')
func_5366_call = mutated_mod.get_global_var('func_5366')
call_7896 = relay.TupleGetItem(func_5365_call(), 1)
call_7897 = relay.TupleGetItem(func_5366_call(), 1)
func_992_call = mod.get_global_var('func_992')
func_994_call = mutated_mod.get_global_var('func_994')
var_7899 = relay.var("var_7899", dtype = "float32", shape = ())#candidate|7899|()|var|float32
call_7898 = relay.TupleGetItem(func_992_call(relay.reshape(var_7899.astype('float32'), [])), 0)
call_7900 = relay.TupleGetItem(func_994_call(relay.reshape(var_7899.astype('float32'), [])), 0)
uop_7918 = relay.tan(const_7885.astype('float64')) # shape=(1, 15, 13)
uop_7921 = relay.log10(uop_7886.astype('float32')) # shape=(1, 15, 13)
output = relay.Tuple([call_7896,call_7898,var_7899,uop_7918,uop_7921,])
output2 = relay.Tuple([call_7897,call_7900,var_7899,uop_7918,uop_7921,])
func_7924 = relay.Function([var_7899,], output)
mod['func_7924'] = func_7924
mod = relay.transform.InferType()(mod)
mutated_mod['func_7924'] = func_7924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7925 = relay.var("var_7925", dtype = "float32", shape = ())#candidate|7925|()|var|float32
func_7924_call = mutated_mod.get_global_var('func_7924')
call_7926 = func_7924_call(var_7925)
output = call_7926
func_7927 = relay.Function([var_7925], output)
mutated_mod['func_7927'] = func_7927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7934 = relay.var("var_7934", dtype = "uint16", shape = (7, 13, 11))#candidate|7934|(7, 13, 11)|var|uint16
var_7935 = relay.var("var_7935", dtype = "uint16", shape = (7, 13, 11))#candidate|7935|(7, 13, 11)|var|uint16
bop_7936 = relay.maximum(var_7934.astype('uint16'), relay.reshape(var_7935.astype('uint16'), relay.shape_of(var_7934))) # shape=(7, 13, 11)
output = bop_7936
output2 = bop_7936
func_7961 = relay.Function([var_7934,var_7935,], output)
mod['func_7961'] = func_7961
mod = relay.transform.InferType()(mod)
mutated_mod['func_7961'] = func_7961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7961_call = mutated_mod.get_global_var('func_7961')
var_7963 = relay.var("var_7963", dtype = "uint16", shape = (7, 13, 11))#candidate|7963|(7, 13, 11)|var|uint16
var_7964 = relay.var("var_7964", dtype = "uint16", shape = (7, 13, 11))#candidate|7964|(7, 13, 11)|var|uint16
call_7962 = func_7961_call(var_7963,var_7964,)
output = call_7962
func_7965 = relay.Function([var_7963,var_7964,], output)
mutated_mod['func_7965'] = func_7965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7020_call = mod.get_global_var('func_7020')
func_7022_call = mutated_mod.get_global_var('func_7022')
call_7989 = func_7020_call()
call_7990 = func_7020_call()
output = relay.Tuple([call_7989,])
output2 = relay.Tuple([call_7990,])
func_8000 = relay.Function([], output)
mod['func_8000'] = func_8000
mod = relay.transform.InferType()(mod)
mutated_mod['func_8000'] = func_8000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8000_call = mutated_mod.get_global_var('func_8000')
call_8001 = func_8000_call()
output = call_8001
func_8002 = relay.Function([], output)
mutated_mod['func_8002'] = func_8002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4892_call = mod.get_global_var('func_4892')
func_4894_call = mutated_mod.get_global_var('func_4894')
call_8034 = func_4892_call()
call_8035 = func_4892_call()
output = relay.Tuple([call_8034,])
output2 = relay.Tuple([call_8035,])
func_8041 = relay.Function([], output)
mod['func_8041'] = func_8041
mod = relay.transform.InferType()(mod)
output = func_8041()
func_8042 = relay.Function([], output)
mutated_mod['func_8042'] = func_8042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mod.get_global_var('func_1653')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_8152 = relay.TupleGetItem(func_1653_call(), 0)
call_8153 = relay.TupleGetItem(func_1654_call(), 0)
func_7961_call = mod.get_global_var('func_7961')
func_7965_call = mutated_mod.get_global_var('func_7965')
const_8156 = relay.const([-9,10,-6,4,9,6,1,-7,-5,7,-1,3,6,-6,-8,-8,2,10,4,-3,-9,10,6,-4,10,-8,4,8,3,8,-7,-8,-6,-8,-4,5,9,-3,5,-4,9,-8,7,-6,2,-2,2,-7,-10,-1,3,8,-1,6,8,-3,-4,-1,-8,1,-1,-6,-3,-3,7,7,-2,-3,6,1,9,-3,6,4,-3,4,8,-8,5,3,-7,-4,-5,-4,-6,5,10,10,1,1,-1,-7,7,9,7,5,-4,5,-8,10,-3,-1,10,8,-7,3,-4,-6,-6,-4,-1,-10,-8,4,-5,1,-7,2,6,-9,1,-1,-4,7,-6,-4,-9,-3,1,-2,2,-6,-6,8,-8,-6,-9,-5,8,5,-2,10,-5,-8,-10,3,-4,3,-7,3,-6,-6,8,1,3,7,-5,7,-1,6,-5,-5,10,-8,-9,-4,-2,3,10,-3,10,-8,-8,-4,-10,-4,3,-2,7,2,3,-2,-4,2,-7,-7,-4,1,-2,4,-9,-6,8,-5,-10,-3,-3,-7,-10,-1,3,-5,6,2,2,9,2,4,-1,-9,8,-3,6,7,10,-6,-7,1,-6,-9,-9,-2,4,-3,6,6,-3,-4,3,-9,-9,-6,-6,10,-2,-10,9,-3,7,8,9,7,6,-5,5,10,8,10,6,4,3,10,8,-7,-1,-8,10,6,-9,5,-4,-7,2,6,9,6,6,6,-9,-8,-7,-5,-4,-4,-10,6,-5,-6,-10,5,-4,3,-8,3,1,2,-10,8,-7,-6,3,-3,-2,-5,3,2,-4,-7,-4,-2,4,7,-2,-7,-9,-6,-2,1,9,-6,10,10,-3,-6,7,-5,3,-6,-7,4,3,-10,-8,-1,-7,-9,-5,10,-6,-6,-8,6,3,8,3,7,1,-3,6,-8,-10,-1,6,4,2,6,9,3,4,-1,5,-6,-5,7,-4,-6,2,9,3,-1,-3,4,1,-3,1,3,-4,-2,8,10,-2,6,6,-3,1,5,-3,6,-8,-8,-7,-7,-9,-1,8,-1,-10,6,4,-6,-5,1,-9,9,-7,8,-7,-6,4,5,1,-2,-3,-8,8,-4,-4,-1,1,2,-9,4,3,-4,1,9,-3,10,9,-3,-1,-10,-9,8,2,-9,-10,7,-7,2,-8,8,10,-9,8,-8,8,-6,10,8,5,3,2,-1,-10,-5,-2,2,-2,2,5,-1,-7,-10,10,-9,7,2,-1,-6,-4,1,-5,1,-6,-9,5,1,-6,1,3,3,-1,7,8,4,6,9,8,1,4,-2,10,1,8,-2,-1,9,1,-5,-1,10,-4,-1,8,-6,-9,-1,4,5,-3,1,3,5,7,-3,-1,-6,-10,7,6,-2,2,6,-5,-7,7,10,7,-5,7,1,-9,-3,5,-10,-5,-7,-6,-2,3,7,7,-1,-5,9,4,-10,-8,-3,4,3,6,6,-5,10,8,-10,-7,9,9,5,-7,-6,9,7,5,-3,-2,-10,7,-4,7,10,-5,7,-7,7,7,-9,5,10,-8,8,1,-6,7,-3,-4,-2,4,-4,2,-4,-5,5,-1,-1,-7,-8,8,-7,5,-1,5,-7,3,-7,-3,1,-4,-1,1,-3,-10,7,6,-2,3,10,-7,6,-10,-4,-6,10,-3,-4,-2,5,9,-9,3,7,-5,6,6,3,-5,-7,-3,-10,10,3,2,-6,-7,9,6,-9,-3,-4,-7,4,-5,-4,2,7,9,-5,-7,5,6,7,9,5,-9,2,-10,-7,-9,-5,4,-6,3,7,4,5,5,4,-6,-8,9,-10,-8,4,-9,-10,-1,7,10,6,-7,4,3,-5,-8,-5,-5,-6,3,10,-10,-6,-9,-7,-8,-2,3,4,-3,-4,-4,-8,5,9,7,-1,-4,-10,-9,-1,-9,1,-9,10,6,5,-5,8,-10,-10,-8,3,-10,-4,-9,8,-10,-2,6,4,-5,3,-3,-2,7,9,-4,7,5,-5,-10,4,3,-10,-7,-10,-3,-4,3,-1,-7,6,-5,5,6,-6,-4,8,-8,6,-5,2,9,-6,2,-3,-10,-10,3,4,-7,6,3,-9,-2,-8,1,-5,-4,5,10,4,-6,-2,-4,-8,7,4,-10,10,-8,-1,8,9,8,-7,1,-8,-8,8,9,2,-2,7,-9,-3,7,6,-1,7,-1,10,8,3,-10,-7,-6,6,-7,-9,-2,-5,-8,2,8,-1,-4,4,-8,-7,5,9,2,9,-8,8,-1,-7,-4,10,-8,2,1,1,1,10,-1,9,-4,-5,-9,10,-5,-10,-8,10,1,-8,-8,-4,9,6,4,-3,6,-1,-2,6,10,4,-6,3,-6,2,2,-4,-1,-8,8,3,3,8,7,-1,-9,6,-1,5,-2,3,4,-4,10,1,-5,-1,-8,-4,-4,-3,-1,-8,-10,2,-1,-5,-4,1,-10,1,5,-4,10,2,-2,-7,-6,5,-10,-7,6,8,-10,6,-9,5,-9,-1,-8,3,7,-3,4,8,-7,-7,-8,4,1,-10,-7,6,-6,4,-7,-2,-6,-9,2,-6,-4,-3,7,-2,9,1,-9,-1,2,-8,2,-5,-6,-9,-4,1,-10,-2,-4,-5,8,-7,3,-1,3,5,-1,4,-5,-8,-9,-6,-3,-6,-3,-10,-9,8,-6,6,-10,5,-1,9,-3,4,-7,-1,-9], dtype = "uint16")#candidate|8156|(1001,)|const|uint16
call_8155 = func_7961_call(relay.reshape(const_8156.astype('uint16'), [7, 13, 11]), relay.reshape(const_8156.astype('uint16'), [7, 13, 11]), )
call_8157 = func_7961_call(relay.reshape(const_8156.astype('uint16'), [7, 13, 11]), relay.reshape(const_8156.astype('uint16'), [7, 13, 11]), )
var_8163 = relay.var("var_8163", dtype = "float32", shape = (4, 3, 8))#candidate|8163|(4, 3, 8)|var|float32
bop_8164 = relay.logical_or(call_8152.astype('bool'), var_8163.astype('bool')) # shape=(4, 3, 8)
bop_8167 = relay.logical_or(call_8153.astype('bool'), var_8163.astype('bool')) # shape=(4, 3, 8)
output = relay.Tuple([call_8155,const_8156,bop_8164,])
output2 = relay.Tuple([call_8157,const_8156,bop_8167,])
func_8170 = relay.Function([var_8163,], output)
mod['func_8170'] = func_8170
mod = relay.transform.InferType()(mod)
var_8171 = relay.var("var_8171", dtype = "float32", shape = (4, 3, 8))#candidate|8171|(4, 3, 8)|var|float32
output = func_8170(var_8171)
func_8172 = relay.Function([var_8171], output)
mutated_mod['func_8172'] = func_8172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5134_call = mod.get_global_var('func_5134')
func_5136_call = mutated_mod.get_global_var('func_5136')
call_8237 = relay.TupleGetItem(func_5134_call(), 1)
call_8238 = relay.TupleGetItem(func_5136_call(), 1)
output = relay.Tuple([call_8237,])
output2 = relay.Tuple([call_8238,])
func_8256 = relay.Function([], output)
mod['func_8256'] = func_8256
mod = relay.transform.InferType()(mod)
output = func_8256()
func_8257 = relay.Function([], output)
mutated_mod['func_8257'] = func_8257
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8274 = relay.const([[[-5.377843,4.856545]],[[-8.493500,-8.022019]],[[1.069042,0.223308]]], dtype = "float64")#candidate|8274|(3, 1, 2)|const|float64
uop_8275 = relay.asinh(const_8274.astype('float64')) # shape=(3, 1, 2)
bop_8279 = relay.subtract(const_8274.astype('float64'), relay.reshape(uop_8275.astype('float64'), relay.shape_of(const_8274))) # shape=(3, 1, 2)
bop_8285 = relay.bitwise_xor(const_8274.astype('int64'), relay.reshape(bop_8279.astype('int64'), relay.shape_of(const_8274))) # shape=(3, 1, 2)
bop_8295 = relay.less_equal(bop_8279.astype('bool'), relay.reshape(bop_8285.astype('bool'), relay.shape_of(bop_8279))) # shape=(3, 1, 2)
bop_8300 = relay.minimum(bop_8295.astype('int16'), relay.reshape(const_8274.astype('int16'), relay.shape_of(bop_8295))) # shape=(3, 1, 2)
uop_8310 = relay.sigmoid(uop_8275.astype('float64')) # shape=(3, 1, 2)
output = relay.Tuple([bop_8300,uop_8310,])
output2 = relay.Tuple([bop_8300,uop_8310,])
func_8313 = relay.Function([], output)
mod['func_8313'] = func_8313
mod = relay.transform.InferType()(mod)
output = func_8313()
func_8314 = relay.Function([], output)
mutated_mod['func_8314'] = func_8314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7143_call = mod.get_global_var('func_7143')
func_7144_call = mutated_mod.get_global_var('func_7144')
call_8320 = relay.TupleGetItem(func_7143_call(), 0)
call_8321 = relay.TupleGetItem(func_7144_call(), 0)
output = relay.Tuple([call_8320,])
output2 = relay.Tuple([call_8321,])
func_8330 = relay.Function([], output)
mod['func_8330'] = func_8330
mod = relay.transform.InferType()(mod)
output = func_8330()
func_8331 = relay.Function([], output)
mutated_mod['func_8331'] = func_8331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5526_call = mod.get_global_var('func_5526')
func_5528_call = mutated_mod.get_global_var('func_5528')
call_8345 = func_5526_call()
call_8346 = func_5526_call()
func_4564_call = mod.get_global_var('func_4564')
func_4565_call = mutated_mod.get_global_var('func_4565')
call_8355 = func_4564_call()
call_8356 = func_4564_call()
output = relay.Tuple([call_8345,call_8355,])
output2 = relay.Tuple([call_8346,call_8356,])
func_8383 = relay.Function([], output)
mod['func_8383'] = func_8383
mod = relay.transform.InferType()(mod)
mutated_mod['func_8383'] = func_8383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8383_call = mutated_mod.get_global_var('func_8383')
call_8384 = func_8383_call()
output = call_8384
func_8385 = relay.Function([], output)
mutated_mod['func_8385'] = func_8385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8389 = relay.var("var_8389", dtype = "int32", shape = ())#candidate|8389|()|var|int32
var_8390 = relay.var("var_8390", dtype = "int32", shape = (8, 12, 1))#candidate|8390|(8, 12, 1)|var|int32
bop_8391 = relay.less_equal(var_8389.astype('bool'), var_8390.astype('bool')) # shape=(8, 12, 1)
output = bop_8391
output2 = bop_8391
func_8394 = relay.Function([var_8389,var_8390,], output)
mod['func_8394'] = func_8394
mod = relay.transform.InferType()(mod)
var_8395 = relay.var("var_8395", dtype = "int32", shape = ())#candidate|8395|()|var|int32
var_8396 = relay.var("var_8396", dtype = "int32", shape = (8, 12, 1))#candidate|8396|(8, 12, 1)|var|int32
output = func_8394(var_8395,var_8396,)
func_8397 = relay.Function([var_8395,var_8396,], output)
mutated_mod['func_8397'] = func_8397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8449 = relay.var("var_8449", dtype = "float32", shape = (5, 14, 14))#candidate|8449|(5, 14, 14)|var|float32
uop_8450 = relay.asin(var_8449.astype('float32')) # shape=(5, 14, 14)
output = relay.Tuple([uop_8450,])
output2 = relay.Tuple([uop_8450,])
func_8455 = relay.Function([var_8449,], output)
mod['func_8455'] = func_8455
mod = relay.transform.InferType()(mod)
var_8456 = relay.var("var_8456", dtype = "float32", shape = (5, 14, 14))#candidate|8456|(5, 14, 14)|var|float32
output = func_8455(var_8456)
func_8457 = relay.Function([var_8456], output)
mutated_mod['func_8457'] = func_8457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6137_call = mod.get_global_var('func_6137')
func_6139_call = mutated_mod.get_global_var('func_6139')
call_8491 = relay.TupleGetItem(func_6137_call(), 0)
call_8492 = relay.TupleGetItem(func_6139_call(), 0)
func_4326_call = mod.get_global_var('func_4326')
func_4330_call = mutated_mod.get_global_var('func_4330')
var_8496 = relay.var("var_8496", dtype = "uint32", shape = (1200,))#candidate|8496|(1200,)|var|uint32
call_8495 = relay.TupleGetItem(func_4326_call(relay.reshape(var_8496.astype('uint32'), [15, 5, 16]), relay.reshape(var_8496.astype('uint32'), [15, 5, 16]), ), 2)
call_8497 = relay.TupleGetItem(func_4330_call(relay.reshape(var_8496.astype('uint32'), [15, 5, 16]), relay.reshape(var_8496.astype('uint32'), [15, 5, 16]), ), 2)
func_4882_call = mod.get_global_var('func_4882')
func_4883_call = mutated_mod.get_global_var('func_4883')
call_8501 = func_4882_call()
call_8502 = func_4882_call()
output = relay.Tuple([call_8491,call_8495,var_8496,call_8501,])
output2 = relay.Tuple([call_8492,call_8497,var_8496,call_8502,])
func_8520 = relay.Function([var_8496,], output)
mod['func_8520'] = func_8520
mod = relay.transform.InferType()(mod)
var_8521 = relay.var("var_8521", dtype = "uint32", shape = (1200,))#candidate|8521|(1200,)|var|uint32
output = func_8520(var_8521)
func_8522 = relay.Function([var_8521], output)
mutated_mod['func_8522'] = func_8522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5705_call = mod.get_global_var('func_5705')
func_5707_call = mutated_mod.get_global_var('func_5707')
call_8529 = relay.TupleGetItem(func_5705_call(), 0)
call_8530 = relay.TupleGetItem(func_5707_call(), 0)
func_2961_call = mod.get_global_var('func_2961')
func_2962_call = mutated_mod.get_global_var('func_2962')
call_8531 = relay.TupleGetItem(func_2961_call(), 0)
call_8532 = relay.TupleGetItem(func_2962_call(), 0)
output = relay.Tuple([call_8529,call_8531,])
output2 = relay.Tuple([call_8530,call_8532,])
func_8533 = relay.Function([], output)
mod['func_8533'] = func_8533
mod = relay.transform.InferType()(mod)
mutated_mod['func_8533'] = func_8533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8533_call = mutated_mod.get_global_var('func_8533')
call_8534 = func_8533_call()
output = call_8534
func_8535 = relay.Function([], output)
mutated_mod['func_8535'] = func_8535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3328_call = mod.get_global_var('func_3328')
func_3329_call = mutated_mod.get_global_var('func_3329')
call_8573 = func_3328_call()
call_8574 = func_3328_call()
func_3339_call = mod.get_global_var('func_3339')
func_3342_call = mutated_mod.get_global_var('func_3342')
const_8576 = relay.const([6.107438,8.988654,4.780861,4.958283,-0.685510,-0.129330,-8.200294,6.994329,-8.239975,-9.799425,6.964322,9.623963,7.047629,4.154519,-0.199772,-7.442925,-4.158051,-2.168035,-2.265127,-9.700461,4.040558,8.042664,-3.053605,-4.154326,-4.069644,-6.022003,-7.015003,-7.947469,0.651630,-7.149362,9.686982,9.830281,-3.603605,7.737568,9.437186,-4.313164,-4.870747,-2.325314,-2.534746,1.308590,-5.497845,1.937405,-7.803281,-6.661715,0.626555,8.620403,4.884514,7.822327,-9.086393,-5.186445,-3.254810,-3.971727,-7.309050,-5.906427,6.143020,7.450606,3.413424,-8.699742,-3.170023,1.855649,-6.992733,-7.961930,9.806080,4.014809,9.973362,4.475876,-3.667019,-6.244145,5.100417,-5.903292,6.394704,-6.646558,-4.019578,-2.526133,3.111086,-9.664857,-3.197482,6.848229,-4.828881,-0.592962,-5.451268,-8.580341,4.469811,6.837498,1.664767,-9.042582,8.213803,2.264538,6.301526,-9.030888,2.090707,-4.076277,-0.578532,4.246185,8.659045,-9.089915,9.038110,-5.274258,8.424149,4.142717,6.747182,1.027397,-8.796111,-7.796441,-3.253893,-1.486258,-9.537012,-8.290411,-9.677100,5.551634,9.952648,2.424645,-9.608557,7.476451,7.314780,-9.179587,-8.984716,2.067239,-7.706694,0.238872,3.537527,-4.053740,-3.831996,-1.459337,-7.555924,-8.615254,4.490532,3.385367,-6.362772,7.080833,7.869825,-0.644382,-1.519655,6.422145,-6.772102,2.739773,-3.376243,9.625366,-0.531027,-4.956693,5.890072,-4.403120,-8.055297,3.478940,8.060198,0.499924,-9.003409,-8.934339,3.766409,-7.738309,-5.243174,8.114162,1.512854,-3.283810,-5.062661,6.362303,2.784146,-8.249371,0.049230,-0.388425,7.499874,4.567483,-2.363344,-1.562187,6.515559,3.851450,-0.481590,3.200052,7.938608,-3.685509,-3.270552,8.307667,9.313278,2.528822,4.068002,1.321841,2.738162,6.876110,1.373831,-5.108846,-1.218192,-3.979382,-8.399386,-2.639682,3.200143,-2.006449,-7.733063,-3.579684,7.652730,-1.785532,1.987817,2.804374,5.283180,-1.450446,-2.315921,1.687108,-2.497457,-3.115789,2.448267,-4.820523,9.984064,-6.800418,2.428858,8.247903,5.929313,3.529476,-3.116637,7.129940,2.874683,-3.171890,-7.257088,-4.525879,3.565666,-3.831368,-2.002276,-6.167805,1.751707,5.456760,8.391822,6.823603,6.868787,4.134635,-4.936284,2.330260,5.065019,9.191080,9.321042,-9.380707,-3.220646,-3.054465,-4.224763,-5.944255,5.143246,-6.553066,6.745841,4.171055,-7.636841,-7.803791,-3.472670,1.150229,3.158363,3.932617,-7.330241,7.605099,-6.447187,8.835185,-6.991631,-0.390889,-8.389581,-3.944807,5.673150,-4.533354,9.571478,-5.306020,-9.827485,6.020542,-7.791396,-1.047736,-4.093138,-8.090112,4.348118,1.811977,4.660683,-6.833942,-6.508804,0.933087,-4.736532,-3.415088,-6.359525,0.143404,-4.105479,-1.456304,-1.378554,7.988434,0.176154,4.289615,-2.703109,-4.672506,0.860935,4.299671,-4.765492,9.453124,-7.815202,-0.927867,-4.321234,5.025869,-4.146985,0.423065,-3.639794,9.853411,-2.471096,5.291489,-8.655299,5.894835,-4.186248,2.251077,8.980476,7.137403,-1.197737,9.719350,-0.997421,6.777834,-3.671990,7.998681,-6.205305,-6.699565,0.801321,7.431862,-8.007008,4.043780,5.976194,7.458010,5.525531,-9.059246,-8.951869,-9.195384,-7.191333,4.040981,3.899890,5.204882,9.090421,-1.527605,8.099343,-8.458777,-6.282234,-8.385981,2.153593,0.696731,1.465234,-9.059099,2.620388,-2.082388,6.482518,-4.958136,-5.592042,-5.375123,-4.384207,-6.501233,-7.297386,3.688243,5.428782,-4.724080,1.335507,1.085550,6.388530,-8.598055,6.239881,-3.825674,-6.216892,6.013229,-1.934323,-7.917960,-5.749103,4.420145,-8.667380,-9.573481,-1.802010,-3.049936,-6.526382,-9.982294,6.582707,-2.348771,0.995210,4.628716,1.569073,-9.267440,-9.295440,-8.037366,-7.918015,2.129128,-9.218359,-2.710595,-6.877239,-8.493416,-9.651704,-0.737937,5.491887,-3.098135,0.824787,-4.974915,-2.259499,2.634149,-0.328101,-6.743478,0.221046,2.466706,2.284544,-6.722457,-9.667013,-9.056176,-2.005889,-8.178086,4.389809,-4.070232,5.800932,9.913211,-9.917669,-5.972966,8.860292,7.587053,9.278132,-8.102548,-3.536767,-6.900887,-4.332624,8.158779,-6.672196,-3.418347,2.992206,-9.793761,-6.789667,-9.984784,-8.107792,4.102206,7.471762,-2.468826,8.641905,4.340670,-7.652998,-2.055645,-0.811203,0.656417,2.631560,-0.690108,-5.937465,2.061676,2.141490,2.084944,0.534553,4.868009,2.112208,5.819144,-0.258068,-0.360504,-6.423795,5.736816,9.068651,0.946388,2.440465,2.829588,9.985703,-2.279270,-9.227214,-9.331910,-9.132667,0.467719,-9.883223,-0.307138,6.815326,9.759580,4.880967,1.333460,0.897254,2.514373,-6.875495,-0.424889,-0.010667,-0.019104,7.662546,-3.030398,-8.154318,7.106424,-8.470237,-5.665711,7.474768,3.293318,-7.369527,8.921919,-8.417350,-9.551453,9.350374,-5.682046,1.102560,-3.779505,4.383318,-1.336208,-9.745018,-4.318503,3.664173,4.155923,-3.879269,0.266295,1.427615,-0.159443,-1.291301,-6.544589,-1.626675,6.509978,-4.264927,-7.943818,-5.897631,0.747923,-5.740064,7.514133,-5.689475,-5.514846,1.379645,-8.760858,-3.458567,-3.644593,3.302726,-3.212391,8.537033,-6.669152,-9.910337,-6.322045,3.933316,4.152925,3.318629,-9.798489,0.435304,5.569466,-8.702139,9.936804,-3.988289,4.077811,3.999464,3.236714,3.926087,-9.058208,-7.251942,-1.648009,-3.515215,-2.600898,-9.587993,-7.428841,3.558551,3.338297,3.054308,2.937748,-4.539469,9.156295,-0.895716,0.055466,-5.216601,8.840485,-0.327499,4.672545,-3.181188,-0.203856,-5.059279,-6.304725,-3.258060,4.891955,8.103946,-3.649074,-9.460978,5.140056,-0.533175,-8.654209,-2.254535,-5.261433,-9.570454,8.189593,3.018734,5.486993,-4.349071,3.330869,2.928666,-0.315253,4.836106,8.449330,1.106726,3.588328,4.120636,-9.754502,5.944447,-5.459359,-9.563776,-5.276077,9.596771,2.939904,-3.996295,0.357625,-5.274780,-4.888989,-4.655651,3.811564,-6.630659,3.621058,-0.906203,8.830227,-4.651059,4.039506,5.618014,-3.377068,-5.413462,4.398893,9.511101,-0.514061,-9.784509,9.762882,-6.365623,-2.729397,3.265086,-8.154841,-4.823053,-8.976978,6.594870,6.580004,3.350997,-6.651898,-4.182528,-3.171159,-0.584629,0.278381,9.805705,1.954385,5.201469,-7.597409,3.479649,-4.154568,-1.841442,7.397111,6.751282,5.370711,-9.187560,-7.656390,4.262050,-4.063294,5.826624,-9.047929,4.480739,3.272358,-8.713443,5.163195,-8.555319,2.209334,-6.619249,1.929221,5.882974,6.728693,-6.641192,-1.428703,-2.461056,3.952412,-7.731366,8.464991,0.259745,-4.369177,-2.619526,3.393688,-1.244281,-0.564553,9.732246,-5.602343,-1.257061,2.727648,7.431303,-7.256253,-8.662658,4.464095,7.934870,-6.945973,0.899359,-6.619845,3.380700,9.607292,-4.386995,-6.118667,3.197649,7.814132,-7.769788,-7.733997,-1.504405,-3.643296,-4.467390,-0.292811,-9.270604,-3.749177,8.985615,2.740442,-1.118628,-1.049940,-1.062281,4.896922,9.642489,0.497930,8.972283,0.891136,-1.814984,-7.910294,-3.366396,3.413572,-9.933480,-8.420192,-2.926303,-7.854326,-4.787110,-3.543176,4.515632,-0.008370,-1.692462,1.609175,6.320026,9.600108,-9.661638,-8.248271,-1.838377,6.021252,3.590159,8.159202,4.589762,1.164345,-7.742918,0.163457,9.655568,7.648094,5.059429,7.145838,2.489787,2.759072,-5.601579,-5.732917,7.569115,3.799529,-3.518065,-3.348920,-9.742527,8.720064,8.023613,1.317229,7.963228,-8.245400,9.452201,3.465724,4.138814,-7.881086,2.351474,-0.551157,-0.128817,3.987484,-7.362707,-1.310587,5.312839,-9.615093,-3.796296,3.524436,-4.338429,6.048763,7.954078,-0.693505,0.391740,5.918261,-0.300912,6.345699,7.206202,4.020129,-6.784190,2.704140,6.618438,2.101024,5.864171,3.980886,-2.243191,2.755853,-1.574362,-0.801055,-2.288967,-3.830390,-9.785339,0.172015,-9.556319,7.410785,-6.225007,9.130243,-2.883738,-5.999041,4.582599,0.294242,-6.981087,-9.566460,2.048458,-0.398746,-9.334948,-2.260766,-9.054142,-9.506522,-3.388472,7.574259,-5.716522,-2.794400,4.898185,-1.230752,3.361124,2.756364,-4.442229,-2.666548,-5.118259,9.431250,5.582346,9.247532,1.522954,-6.841329,-2.630529,1.349613,-6.710172,2.366389,-0.422537,6.839105,-0.898141,1.249953,-4.356429,-2.616988,-7.738069,1.226831,1.847509,5.174138,-8.467006,-5.688503,5.271901,-1.262262,3.563135,-2.246424,8.984402,7.359236,-5.092879,2.991864,-0.502870,1.106852,6.966222,-6.001038,-2.041467,-2.822391,-1.937304,8.310991,-6.062933,4.451337,1.253421,3.318938,0.624609,-2.954887,8.308786,-0.183038,3.198352,-6.545180,-0.803116,3.466229,-5.475494,-4.147820,-3.887922,-8.324403,9.814554,1.701439,0.357909,2.465036,2.303698,-3.476503,2.250387,8.907349,9.101104,-0.050487,-0.487416,-1.415756,8.259313,0.436309,-0.067958,-1.648264,-2.180678,-5.168867,-2.196624,-2.705290,-0.480258,-9.352728,-8.187858,-9.173881,2.765707,4.875862,1.178694,-3.465810,-3.323738,-3.683802,5.537490,-9.054253,-6.662413,-7.680605,4.583173,7.469064,9.697690,0.413320,1.329591,5.283435,-0.212860,-2.687800,-4.395443,-3.052226,0.546210,6.175851,6.083336,-0.101948,6.596344,-9.036306,9.548659,-7.639270,0.807760,-8.417720,4.820174,9.092740,8.560021,3.864442,-8.505777,-6.432221,5.372575,8.455721,-1.515173,-3.843427,-8.377284,-3.472464,-2.005237,-1.361363,-1.172661,-1.783993,7.618097,-2.370682,-9.281143,-6.265339,7.793385,-7.758933,0.432082,-4.034510,9.937682,6.503221,6.541869,2.669247,-2.940750,-7.500450,5.800543,-1.855494,-4.218920,6.818775,3.765794,-2.651833,-8.493487,8.810657,-4.580610,5.506472,-9.301739,4.943085,-7.627158,-2.375067,-1.472015,-9.081634,0.282064,-0.036609,1.320283,-3.554632,-8.726549,0.492036,3.759741,-2.472663,-0.616870,6.054352,-3.867497,3.462973,-2.219799,2.301809,-0.347332,-9.162007,-5.146333,6.625426,-6.416321,-3.639480,-2.141183,5.226682,-1.245702,7.870685,-4.708851,-2.694177,3.506562,7.768412,4.367353,0.816769,-8.949326,1.173920,-0.229040,-6.314673,2.980990,2.833432,8.681561,4.106071,-6.408891,-0.955741,-4.797637,0.871392,-8.498662,8.782191,4.335174,1.473575,-1.472136,8.137003,-6.629421,0.831229,-4.937697,9.014673,0.005925,-2.598557,-7.260418,-2.905620,8.576715,-4.149155,3.545329,0.212917,-9.616302,-6.366757,6.508977,-3.653093,-7.330713,2.128855,-7.042864,-0.897225,-7.797660,-1.807210,8.536801,1.619946,-2.786731,0.472935,6.184526,2.338596,7.885011,-0.715517,5.762701,-6.103708,-3.150496,-1.759676,7.788779,-1.922212,4.675571,-8.465375,-8.592423,7.149004,1.738966,-2.796602,0.665519,7.891815,0.368424,-8.198333,-8.270675,-7.794731,-2.780775,1.303981,0.804634,8.176042,-8.243300,-8.431037,4.496671,-2.712853,-1.151122,8.856317,-0.276496,-7.557812,-1.770951,-3.136778,-1.083978,5.967608,6.185077,-8.885053,7.950302,-5.890584,5.591706,-3.593966,-3.777619,2.201440,7.493485,1.924805,7.039228,1.398432,-0.375364,-8.714640,7.453711,9.568994,5.510883,6.231976,-7.375098,-2.915545,-4.935763,-5.691328,7.264132,6.436701,5.450393,-5.230711,1.448563,-9.214634,4.557402,-2.522989,2.904515,-7.953529,4.859311,4.807169,7.579741,2.710753,-4.407167,-8.129919,7.166361,-0.809984,-8.359839,-1.869605,-2.688138,9.352875,3.939668,-9.588644,-5.229089,7.926575,4.565701,7.075817,1.729148,-5.820487,-9.512183,7.250685,0.357823,-1.044195,5.311948,7.075325,-3.067638,6.099024,-4.408134,-8.718498,-1.558398,-0.498077,-4.256043,-5.157685,-6.924390,5.370391,-0.904696,-0.448476,-9.460375,8.697422,6.002431,0.588235,-0.573017,-4.938763,3.552673,1.239911,-2.006142,0.515519,4.375345,-2.069648,-3.951538,-3.570182,8.120856,-6.774912,-9.329880,6.721684,-9.126195,7.515557,8.693872,5.286406,-0.981521,7.610153,-0.954980,8.278559,-5.912695,8.393270,4.452306,8.818685,6.158734,-1.035765,-0.466337,7.688917,-3.597680,2.847361,-0.674412,-5.704561,0.022186,-5.908623,-9.427635,5.137037,4.270062,-2.788764,-2.200255,3.876566,2.399383,2.908547,9.872460,1.951695,2.138897,-0.248081,4.816839,-6.942428,-0.102901,2.071969,-3.180353,6.172540,4.999364,-4.324936,-4.274642,9.032394,7.521979,7.284189,-1.671958,9.505658,8.960750,1.375073,-2.207246,3.847858,-3.220971,-5.387533,0.415143,0.491265,6.143601,-7.933671,9.835259,4.914439,1.862714,-2.667837,6.041420,2.792207,8.919118,-1.362173,4.480524,-0.263143,-2.583655,-4.514798,-9.412164,-9.524083,-2.636000,5.646848,5.587970,-5.741244,2.317415,-4.020554,-0.750904,8.413080,-6.511650,-8.855327,8.696445,-2.674534,8.355487,5.243964,-8.353991,5.696682,9.345163,-0.761510,3.907084,9.066750,2.719011,-9.210080,1.123208,0.636810,7.992630,0.737366,-9.907753,-1.577634,7.322606,-5.386832,7.201228,-3.226666,-6.214691,0.354785,1.100674,4.466958,-8.973864,4.644180,0.710696,-2.158432,-0.325837,-9.048500,9.802608,-3.390859,-1.511604,-3.839257,-5.279503,-1.494551,9.871964,-4.864075,-6.229196,-2.243439,5.732075,9.640420,-7.733297,0.540342,2.146025,-5.748373,-1.600182,2.964751,0.655679,0.596392,-8.761167,-6.503762,2.012732,9.803121,-3.628290,7.209438,4.601381,1.625617,-0.548057,-2.933801,-7.750725,-1.139279,5.093508,7.028456,9.649149,-7.185047,7.966878,5.549029,0.335425,-2.270693,-5.743890,-9.647631,-5.913093,-7.707913,-5.251227,4.067492,7.647901,-6.006296,9.749877,2.808543,-4.294201,9.053488,-9.458793,-5.654980,5.843601,-9.463424,-5.947537,4.398439,-7.308747,7.778701,-2.761744,7.232801,-5.197014,-0.097398,7.673557,-5.913896,7.019392,7.079161,4.553286,4.611462,2.146417,-2.571065,-2.358650,-8.365129,6.094000,-5.144613,-6.692696,6.183382,2.427783,3.142657,4.430602,-4.061853,8.939331,3.302350,3.240682,8.976502,-0.385535,0.114988,3.645575,0.550777,1.220292,-6.204930,0.287404,7.126492,2.943783,6.132800,-3.292727,7.075553,-9.142055,-5.359831,6.913221,-4.530912,-2.280098,8.915706,2.803547,-1.430042,-4.810338,5.177519,0.167131,-4.720621,8.558691,1.193089,9.249659,6.982012,6.190202,8.332701,3.185883,-9.681443,7.356305,8.429546,-9.584545,-7.801443,-0.652688,-2.102805,-2.878944,-6.964016,4.017514,7.182469,-5.430792,-7.340061,1.075953,-0.612290,8.733955,-5.536883,-6.805362,0.240023,5.519498,7.145971,0.778973,3.593942,-4.066104,8.835051,-1.465450,-1.971607,7.215776,-9.309361,4.008879,5.494831,-7.382963,3.065204,9.867945,7.068905,-0.016554,-2.456102,9.082501,3.791371,4.242344,1.579041,-6.943787,-0.085531,-9.932483,-8.260054,-4.854734,-8.071589,3.363471,9.781592,-7.955652,6.708603,-4.214699,5.873597,-7.704907,6.649142,8.502215,1.453049,5.429241,-2.805766,-4.884291,4.262528,-9.755354,0.960422,3.425802,1.364921,-0.713789,4.468864,-2.762515,-7.361427,6.674176,9.007185,-4.091534,-9.363980,-9.898035,3.001547,1.227734,1.214866,-9.078925,7.832156,-1.438102,7.332962,-2.733915,3.854163,4.783702,7.857088,1.536508,-3.683175,9.871601,3.917436,8.898558,-1.470649,5.115850,-1.084483,0.174870,-2.424907,-9.203475,-8.730265,-3.021648,-9.225658,2.190677,-4.438960,-3.827372,-5.611520,-5.065582,3.677919,-9.763617,-8.081074,-7.970358,4.127137,5.865158,7.358201,9.021361,-9.573041,9.281942,-9.528309,-4.789759,6.407719,9.491176,-0.693159,-2.890343,5.997565,2.318629,-3.791280,-2.484191,3.086083,2.989804,-5.874665,-2.197239,-6.686768,1.085407,-3.331973,-9.190565,-5.418070,5.058438,9.871583,-1.037710,-9.795189,-2.542053,3.037438,-5.592557,-8.346660,6.947004,6.202863,5.637209,3.580514,-2.631165,-2.979190,-8.421132,-7.811016,6.938770,4.867685,-5.441846,-3.904994,-6.151443,9.518130,-3.006549,1.150912,-7.237313,-4.165616,-5.958477,-3.599560,7.377341,9.884191,3.622915,-6.558967,4.979024,5.807519,9.915403,9.492923,1.546799,8.902750,-1.827873,-0.776651,9.184971,1.161618,-4.818802,-0.973254,-3.238069,6.545353,9.534997,3.571239,5.483810,-9.205965,-7.503290,3.350156,-7.456023,4.859734,1.361487,-2.877445,-0.469531,-1.948564,4.268621,9.582269,3.165012,-6.867804,-6.215811,2.040356,-9.670029,-7.838424,5.704048,-4.144738,-4.559232,9.578872,3.231067,-9.459052,6.647808,5.792287,2.366023,-8.243382,3.153866,8.806840,-1.892588,-8.160733,-9.537426,5.311568,-3.449396,-7.514653,-8.418946,-3.711571,7.892919,0.625121,5.400892,9.491595,8.100298,1.645004,-4.015224,-3.564123,-1.263800,2.594643,-6.182799,-6.613501,2.885045,3.205985,-6.351908,1.717397,8.236623,-8.726874,6.920030,9.467078,-8.079786,-2.087607,-5.791849,3.072353,0.252410,1.833259,-2.497240,-2.288836,-6.623983,6.784321,8.116679,-5.204065,5.842633,7.599967,2.945879,-7.886159,-8.261656,-0.797252,6.078317,9.587728,1.908595,-9.277424,-2.571440,3.115701,6.164302,-2.721648,3.163060,2.782415,3.317026,-2.523605,0.282018,-5.167567,8.390618,-7.834795,3.376534,4.481723,1.238714,-0.591349,-0.084416,-8.674508,-8.252644,-3.302745,-6.579529,-7.846220,-6.716490,-2.986702,0.839425,1.311320,0.900980,-5.233474,4.134537,2.712363,8.913032,2.792979,7.901955,0.014945,-5.269383,-4.068031,7.760552,-3.585762,1.928745,-7.588107,-6.871092,1.341986,0.831301,-8.710808,7.789685,6.744725,7.824334,-2.905704,3.423431,-9.770469,1.668181,-5.450439,8.220923,-0.069667,1.138936,-6.599836,6.464212,2.879960,3.983995,8.763502,-5.739469,9.887401,1.257183,-6.051305,-5.649660,-2.885435,3.104793,-5.199108,-5.489318,1.270011,6.984413,3.768720,5.976653,-5.626963,-5.206976,3.743468,-7.415841,-4.829107,-0.759827,-6.587779,0.675189,-5.706095,3.124368,1.032366,-6.694751,6.302865,-6.815678,-1.557067,-9.845383,-2.644298,-4.915063,5.256973,0.113682,1.880813,-1.609128,-2.649949,-3.425081,5.713906,1.684333,7.149418,0.718025,-1.729689,0.975204,-6.186790,9.691305,-4.855177,-3.816201,-1.369911,2.314407,-6.448031,-2.046712,7.797061,0.413718,-5.224092,-9.795718,-7.650410,6.382605,3.977093,3.248723,-5.139327,4.025163,3.108298,-1.343827,4.511478,2.872904,6.270603], dtype = "float64")#candidate|8576|(1760,)|const|float64
call_8575 = func_3339_call(relay.reshape(const_8576.astype('float64'), [16, 10, 11]))
call_8577 = func_3339_call(relay.reshape(const_8576.astype('float64'), [16, 10, 11]))
output = relay.Tuple([call_8573,call_8575,const_8576,])
output2 = relay.Tuple([call_8574,call_8577,const_8576,])
func_8582 = relay.Function([], output)
mod['func_8582'] = func_8582
mod = relay.transform.InferType()(mod)
mutated_mod['func_8582'] = func_8582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8582_call = mutated_mod.get_global_var('func_8582')
call_8583 = func_8582_call()
output = call_8583
func_8584 = relay.Function([], output)
mutated_mod['func_8584'] = func_8584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4629_call = mod.get_global_var('func_4629')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_8689 = relay.TupleGetItem(func_4629_call(), 0)
call_8690 = relay.TupleGetItem(func_4631_call(), 0)
func_7020_call = mod.get_global_var('func_7020')
func_7022_call = mutated_mod.get_global_var('func_7022')
call_8696 = func_7020_call()
call_8697 = func_7020_call()
func_4727_call = mod.get_global_var('func_4727')
func_4730_call = mutated_mod.get_global_var('func_4730')
var_8701 = relay.var("var_8701", dtype = "float32", shape = (128,))#candidate|8701|(128,)|var|float32
call_8700 = func_4727_call(relay.reshape(var_8701.astype('float32'), [4, 4, 8]))
call_8702 = func_4727_call(relay.reshape(var_8701.astype('float32'), [4, 4, 8]))
func_5579_call = mod.get_global_var('func_5579')
func_5580_call = mutated_mod.get_global_var('func_5580')
call_8706 = func_5579_call()
call_8707 = func_5579_call()
output = relay.Tuple([call_8689,call_8696,call_8700,var_8701,call_8706,])
output2 = relay.Tuple([call_8690,call_8697,call_8702,var_8701,call_8707,])
func_8711 = relay.Function([var_8701,], output)
mod['func_8711'] = func_8711
mod = relay.transform.InferType()(mod)
var_8712 = relay.var("var_8712", dtype = "float32", shape = (128,))#candidate|8712|(128,)|var|float32
output = func_8711(var_8712)
func_8713 = relay.Function([var_8712], output)
mutated_mod['func_8713'] = func_8713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mod.get_global_var('func_5411')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_8715 = func_5411_call()
call_8716 = func_5411_call()
func_4629_call = mod.get_global_var('func_4629')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_8717 = relay.TupleGetItem(func_4629_call(), 0)
call_8718 = relay.TupleGetItem(func_4631_call(), 0)
output = relay.Tuple([call_8715,call_8717,])
output2 = relay.Tuple([call_8716,call_8718,])
func_8722 = relay.Function([], output)
mod['func_8722'] = func_8722
mod = relay.transform.InferType()(mod)
output = func_8722()
func_8723 = relay.Function([], output)
mutated_mod['func_8723'] = func_8723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2210_call = mod.get_global_var('func_2210')
func_2212_call = mutated_mod.get_global_var('func_2212')
call_8727 = func_2210_call()
call_8728 = func_2210_call()
uop_8735 = relay.erf(call_8727.astype('float64')) # shape=(4, 4, 8)
uop_8737 = relay.erf(call_8728.astype('float64')) # shape=(4, 4, 8)
output = relay.Tuple([uop_8735,])
output2 = relay.Tuple([uop_8737,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

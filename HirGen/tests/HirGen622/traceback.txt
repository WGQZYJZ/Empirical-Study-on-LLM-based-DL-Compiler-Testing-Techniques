==========mod==========
#[version = "0.0.5"]
def @func_12365() -> (Tensor[(2, 7, 7), float32],) {
  %0 = @func_6271() /* ty=(Tensor[(2, 7, 7), float32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_18664() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %2 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %3 = @func_12046() /* ty=Tensor[(3, 8, 7), float64] */;
  %4 = %2.0;
  (%3, %4)
}

def @func_11929() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 3, 10), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
  %5 = @func_11231() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %7 = reshape(%6, newshape=[3, 3, 10]) /* ty=Tensor[(3, 3, 10), float64] */;
  %8 = @func_7275() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %9 = @func_11231() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
  %10 = @func_8689() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64]) */;
  %11 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
  %12 = %5.0;
  %13 = @func_4789(%7) /* ty=Tensor[(3, 3, 10), float64] */;
  %14 = %8.0;
  %15 = %9.0;
  %16 = @func_11130() /* ty=Tensor[(3, 8, 7), int64] */;
  %17 = %10.2;
  %18 = %11.0;
  %19 = @func_10675() /* ty=Tensor[(3, 8, 7), float64] */;
  (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(90), float64] */, %14, %15, %16, %17, %18, %19)
}

def @func_18785() -> Tensor[(3, 8, 7), uint16] {
  %20 = @func_16865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(3, 8, 7), int64]) */;
  %20.1
}

def @func_9575(%var_9566: Tensor[(5, 4, 2), float64]) -> (Tensor[(5, 4, 2), float64],) {
  %21 = cast(%var_9566, dtype="float64") /* ty=Tensor[(5, 4, 2), float64] */;
  %22 = sigmoid(%21) /* ty=Tensor[(5, 4, 2), float64] */;
  (%22,)
}

def @func_10080() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %23 = @func_5937() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %24 = %23.0;
  %25 = @func_3417() /* ty=Tensor[(3, 8, 7), int64] */;
  (%24, %25)
}

def @func_11231() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) {
  %26 = @func_911() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %27 = @func_7471() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */;
  %28 = %26.0;
  %29 = %27.0;
  %30 = @func_8120() /* ty=Tensor[(3, 8, 7), int64] */;
  %31 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  (%28, %29, %30, %31)
}

def @func_19906() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %32 = @func_7252() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %33 = @func_13314() /* ty=Tensor[(3, 8, 7), float32] */;
  %34 = %32.0;
  (%33, %34)
}

def @func_10296() -> Tensor[(3, 8, 7), int64] {
  %35 = @func_4461() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */;
  %35.2
}

def @func_6614() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) {
  %36 = @func_3413() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */;
  %37 = @func_2581() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %38 = %36.3;
  %39 = %37.0;
  %40 = @func_5334() /* ty=Tensor[(2, 7, 7), float32] */;
  (%38, %39, %40)
}

def @func_14695() -> (Tensor[(3, 6, 6), float32],) {
  %41 = @func_5299() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) */;
  %42 = %41.1;
  (%42,)
}

def @func_7493() -> Tensor[(3, 8, 7), int64] {
  %43 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %43.1
}

def @func_16499() -> Tensor[(3, 8, 7), int64] {
  @func_12848() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_911() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %44 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %45 = %44.0;
  %46 = cast(%45, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %47 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %48 = atanh(%46) /* ty=Tensor[(3, 8, 7), float64] */;
  %49 = %47.0;
  (%48, %49)
}

def @func_5908() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %50 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %51 = @func_5064() /* ty=Tensor[(10, 4, 14), float64] */;
  (%50, %51)
}

def @func_11167() -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %52 = @func_6693() /* ty=(Tensor[(11, 8, 3), float64],) */;
  %53 = @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %54 = @func_1742() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %55 = @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %56 = %52.0;
  %57 = %53.1;
  %58 = %54.2;
  %59 = %55.0;
  (%56, %57, %58, %59)
}

def @func_11438() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %60 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
  %61 = @func_4003() /* ty=Tensor[(3, 8, 7), int64] */;
  %62 = %60.0;
  (%61, %62)
}

def @func_11579() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %63 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %64 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %65 = %63.0;
  %66 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %67 = %64.0;
  (%65, %66, %67)
}

def @func_5064() -> Tensor[(10, 4, 14), float64] {
  %68 = @func_4522() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %68.0
}

def @func_12848() -> Tensor[(3, 8, 7), int64] {
  %69 = @func_7275() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %69.0
}

def @func_2581() -> (Tensor[(10, 4, 14), float64],) {
  %70 = @func_2213() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %71 = %70.0;
  (%71,)
}

def @func_15231() -> (Tensor[(10, 4, 14), float64],) {
  %72 = @func_3991() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %73 = %72.0;
  (%73,)
}

def @func_17826() -> Tensor[(5, 4, 2), float64] {
  %74 = @func_13890() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(5, 4, 2), float64], Tensor[(40), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), bool]) */;
  %74.2
}

def @func_13697() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) {
  %75 = @func_5101() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64]) */;
  %76 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %77 = @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %78 = @func_2676() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */;
  %79 = %75.0;
  %80 = %76.1;
  %81 = %77.0;
  %82 = %78.1;
  (%79, %80, %81, %82)
}

def @func_18565() -> Tensor[(10, 4, 14), float64] {
  %83 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %83.0
}

def @func_6271() -> (Tensor[(2, 7, 7), float32],) {
  %84 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %85 = %84.0;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(2, 7, 7), float32] */;
  %87 = asin(%86) /* ty=Tensor[(2, 7, 7), float32] */;
  (%87,)
}

def @func_3814() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %88 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %89 = @func_911() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %90 = %88.0;
  %91 = %89.1;
  (%90, %91)
}

def @func_4739() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %92 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %93 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %94 = @func_4011() /* ty=(Tensor[(3, 6, 6), float32],) */;
  %95 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %96 = %92.0;
  %97 = %93.1;
  %98 = %94.0;
  %99 = %95.0;
  %100 = @func_3319() /* ty=Tensor[(3, 8, 7), float64] */;
  (%96, %97, %98, %99, %100)
}

def @func_14606() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  %101 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %102 = %101.0;
  %103 = @func_2459() /* ty=Tensor[(3, 8, 7), int64] */;
  (%102, %103)
}

def @func_744() -> (Tensor[(3, 8, 7), int64],) {
  %104 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %105 = %104.0;
  (%105,)
}

def @func_8298() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %106 = @func_4177() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %107 = %106.3;
  %108 = @func_2428() /* ty=Tensor[(3, 8, 7), int64] */;
  (%107, %108)
}

def @func_758() -> (Tensor[(3, 8, 7), int64],) {
  %109 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %110 = %109.0;
  (%110,)
}

def @func_9125() -> Tensor[(3, 8, 7), int64] {
  @func_3919() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_7124() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %111 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %112 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %113 = %111.0;
  %114 = %112.0;
  (%113, %114)
}

def @func_6513(%var_6502: Tensor[(40), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(2, 5, 4), float64], Tensor[(40), float64]) {
  %115 = @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %116 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %117 = cast(%var_6502, dtype="float64") /* ty=Tensor[(40), float64] */;
  %118 = reshape(%117, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float64] */;
  %119 = @func_4561(%118) /* ty=(Tensor[(2, 5, 4), float64],) */;
  %120 = %115.0;
  %121 = %116.2;
  %122 = %119.0;
  (%120, %121, %122, %var_6502)
}

def @func_10478() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %123 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %124 = @func_10427() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %125 = %123.0;
  %126 = %124.2;
  (%125, %126)
}

def @func_1953() -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) {
  %127 = @func_1610() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */;
  %128 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %129 = %127.0;
  %130 = %128.0;
  (%129, %130)
}

def @func_3899() -> Tensor[(3, 8, 7), int64] {
  %131 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %131.0
}

def @func_19622() -> (Tensor[(3, 8, 7), float64],) {
  %132 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %133 = %132.0;
  (%133,)
}

def @func_20469(%var_20414: Tensor[(560), float64], %var_20431: Tensor[(18), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(560), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), bool], Tensor[(18), float64], Tensor[(1, 98), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32], Tensor[(90), float64]) {
  %134 = cast(%var_20414, dtype="float64") /* ty=Tensor[(560), float64] */;
  %135 = reshape(%134, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), float64] */;
  %136 = @func_6104() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %137 = cast(%var_20431, dtype="float64") /* ty=Tensor[(18), float64] */;
  %138 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 98), float32] */, dtype="float32") /* ty=Tensor[(1, 98), float32] */;
  %139 = reshape(%137, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %140 = reshape(%138, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), float32] */;
  %141 = @func_19041(%139, %140) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, ?, 6), bool], Tensor[(2, 7, 7), bool], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) */;
  %142 = @func_2213() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %143 = @func_14130() /* ty=(Tensor[(10, 4, 14), float32],) */;
  %144 = @func_7756() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %145 = @func_11130() /* ty=Tensor[(3, 8, 7), int64] */;
  %146 = @func_19652() /* ty=Tensor[(3, 8, 7), int64] */;
  %147 = @func_7030(%135) /* ty=Tensor[(10, 4, 14), float32] */;
  %148 = %136.1;
  %149 = %141.2;
  %150 = %142.0;
  %151 = %143.0;
  %152 = %144.2;
  (%145, %146, %147, %var_20414, %148, %149, %var_20431, meta[relay.Constant][1] /* ty=Tensor[(1, 98), float32] */, %150, %151, %152)
}

def @func_13414(%var_13385: Tensor[(9, 3, 7), bool], %var_13386: Tensor[(9, 3, 7), bool]) -> Tensor[(9, 3, 7), bool] {
  %153 = cast(%var_13386, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %154 = shape_of(%var_13385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%var_13385, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%155, %156) /* ty=Tensor[(9, 3, 7), bool] */
}

def @func_3675(%var_3638: Tensor[(4, 5, 8), float64], %var_3642: Tensor[(594), uint32], %var_3656: Tensor[(4, 5, 8), float64]) -> (Tensor[(9, 6, 11), bool], Tensor[(594), uint32], Tensor[(10, 4, 14), float64], Tensor[(4, 5, 8), int64], Tensor[(3, 8, 7), int64]) {
  %157 = cast(%var_3642, dtype="uint32") /* ty=Tensor[(594), uint32] */;
  %158 = reshape(%157, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), uint32] */;
  %159 = @func_1181(%158) /* ty=(Tensor[(9, 6, 11), bool],) */;
  %160 = cast(%var_3638, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
  %161 = cosh(%160) /* ty=Tensor[(4, 5, 8), float64] */;
  %162 = cast(%var_3656, dtype="int64") /* ty=Tensor[(4, 5, 8), int64] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="int64") /* ty=Tensor[(4, 5, 8), int64] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %166 = %159.0;
  %167 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
  %168 = logical_xor(%164, %165) /* ty=Tensor[(4, 5, 8), int64] */;
  %169 = @func_2428() /* ty=Tensor[(3, 8, 7), int64] */;
  (%166, %var_3642, %167, %168, %169)
}

def @func_7336() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32]) {
  %170 = @func_2996() /* ty=Tensor[(10, 4, 14), float64] */;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  %172 = reshape(%171, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), float64] */;
  %173 = @func_7030(%172) /* ty=Tensor[(10, 4, 14), float32] */;
  (%170, %173)
}

def @func_5101() -> (Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64]) {
  %174 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %175 = %174.3;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %177 = @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %178 = asin(%176) /* ty=Tensor[(10, 4, 14), float32] */;
  %179 = %177.1;
  (%178, %179)
}

def @func_13158() -> (Tensor[(2, 7, 7), float32],) {
  %180 = @func_5334() /* ty=Tensor[(2, 7, 7), float32] */;
  (%180,)
}

def @func_7471() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) {
  %181 = @func_6104() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %182 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %183 = %181.1;
  %184 = %182.0;
  (%183, %184)
}

def @func_16959() -> (Tensor[(10, 4, 14), float32],) {
  %185 = @func_14130() /* ty=(Tensor[(10, 4, 14), float32],) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %188 = acosh(%187) /* ty=Tensor[(10, 4, 14), float32] */;
  (%188,)
}

def @func_18264() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %189 = @func_3991() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %190 = @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %191 = @func_9125() /* ty=Tensor[(3, 8, 7), int64] */;
  %192 = %189.0;
  %193 = %190.0;
  (%191, %192, %193)
}

def @func_17064() -> Tensor[(3, 8, 7), int64] {
  %194 = @func_10080() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %194.0
}

def @func_12660() -> (Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) {
  %195 = @func_8100() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %196 = @func_7124() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
  %197 = %195.0;
  %198 = %196.1;
  (%197, %198)
}

def @func_20545() -> Tensor[(10, 4, 14), float64] {
  @func_8234() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_3319() -> Tensor[(3, 8, 7), float64] {
  %199 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %199.0
}

def @func_15008() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %200 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %201 = @func_14577() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %202 = @func_3554() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %203 = @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %204 = %200.0;
  %205 = %201.1;
  %206 = %202.7;
  %207 = %203.1;
  (%204, %205, %206, %207)
}

def @func_11130() -> Tensor[(3, 8, 7), int64] {
  %208 = @func_4967() /* ty=(Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) */;
  %208.1
}

def @func_6693() -> (Tensor[(11, 8, 3), float64],) {
  %209 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %210 = %209.0;
  (%210,)
}

def @func_6660() -> (Tensor[(2, 7, 7), float32],) {
  %211 = @func_4522() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %212 = %211.1;
  (%212,)
}

def @func_1150() -> Tensor[(3, 8, 7), float32] {
  @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_2213() -> (Tensor[(10, 4, 14), float64],) {
  %213 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
  (%213,)
}

def @func_8546() -> (Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) {
  %214 = @func_1610() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */;
  %215 = @func_5908() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %216 = %214.1;
  %217 = %215.1;
  (%216, %217)
}

def @func_10261() -> Tensor[(10, 4, 14), float64] {
  %218 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %218.0
}

def @func_16306() -> Tensor[(3, 8, 7), float32] {
  %219 = @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %219.0
}

def @func_4675() -> Tensor[(10, 4, 14), float64] {
  %220 = @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %220.0
}

def @func_14201() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %221 = @func_7252() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %222 = @func_6864() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %223 = %221.0;
  %224 = %222.0;
  (%223, %224)
}

def @func_2384() -> (Tensor[(3, 8, 7), float64],) {
  %225 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %226 = %225.1;
  %227 = cast(%226, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %228 = log(%227) /* ty=Tensor[(3, 8, 7), float64] */;
  (%228,)
}

def @func_14413() -> (Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %229 = @func_8689() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64]) */;
  %230 = @func_11817() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %231 = @func_14070() /* ty=Tensor[(3, 6, 6), float32] */;
  %232 = @func_5064() /* ty=Tensor[(10, 4, 14), float64] */;
  %233 = %229.1;
  %234 = %230.0;
  (%231, %232, %233, %234)
}

def @func_19041(%var_18999: Tensor[(18), float64], %var_19027: Tensor[(2, 7, 7), float32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, ?, 6), bool], Tensor[(2, 7, 7), bool], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) {
  %235 = @func_5908() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %236 = cast(%var_18999, dtype="float64") /* ty=Tensor[(18), float64] */;
  %237 = reshape(%236, newshape=[3, 1, 6]) /* ty=Tensor[(3, 1, 6), float64] */;
  %238 = @func_6759(%237) /* ty=Tensor[(3, 1, 6), float64] */;
  %239 = cast(%var_18999, dtype="int64") /* ty=Tensor[(18), int64] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%238, dtype="int64") /* ty=Tensor[(3, 1, 6), int64] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %243 = minimum(%241, %242) /* ty=Tensor[(3, ?, 6), int64] */;
  %244 = cast(%var_18999, dtype="bool") /* ty=Tensor[(18), bool] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="bool") /* ty=Tensor[(3, ?, 6), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = @func_5334() /* ty=Tensor[(2, 7, 7), float32] */;
  %249 = cast(%var_19027, dtype="bool") /* ty=Tensor[(2, 7, 7), bool] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%248, dtype="bool") /* ty=Tensor[(2, 7, 7), bool] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %253 = cast(meta[relay.Constant][2] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %254 = reshape(%253, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %255 = %235.0;
  %256 = not_equal(%246, %247) /* ty=Tensor[(3, ?, 6), bool] */;
  %257 = less_equal(%251, %252) /* ty=Tensor[(2, 7, 7), bool] */;
  %258 = @func_1399(%254) /* ty=Tensor[(16, 14, 9), float64] */;
  (%255, %256, %257, %258, meta[relay.Constant][2] /* ty=Tensor[(2016), float64] */)
}

def @func_19825() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %259 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %260 = @func_12423() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %261 = %259.0;
  %262 = %260.0;
  (%261, %262)
}

def @func_11817() -> (Tensor[(10, 4, 14), float64],) {
  %263 = @func_8546() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) */;
  %264 = %263.1;
  (%264,)
}

def @func_18853() -> (Tensor[(3, 8, 7), int64], Tensor[(560), bool]) {
  %265 = @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %266 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %267 = %265.0;
  %268 = %266.1;
  (%267, %268)
}

def @func_14015(%var_13981: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), int8], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32]) {
  %269 = cast(%var_13981, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %270 = exp(%269) /* ty=Tensor[(16, 3, 12), float64] */;
  %271 = cast(%270, dtype="int8") /* ty=Tensor[(16, 3, 12), int8] */;
  %272 = shape_of(%var_13981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%var_13981, dtype="int8") /* ty=Tensor[(16, 3, 12), int8] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %275 = right_shift(%273, %274) /* ty=Tensor[(16, 3, 12), int8] */;
  %276 = @func_7299() /* ty=Tensor[(3, 8, 7), float64] */;
  %277 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  (%275, %276, %277)
}

def @func_19149() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32]) {
  %278 = @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */;
  %279 = @func_10331() /* ty=Tensor[(10, 4, 14), float64] */;
  %280 = %278.0;
  (%279, %280)
}

def @func_19498(%var_19480: Tensor[(4, 5, 5), float64]) -> (Tensor[(4, 5, 5), uint16],) {
  %281 = @func_7378() /* ty=(Tensor[(4, 5, 5), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %282 = %281.0;
  %283 = cast(%var_19480, dtype="uint16") /* ty=Tensor[(4, 5, 5), uint16] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%282, dtype="uint16") /* ty=Tensor[(4, 5, 5), uint16] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %287 = right_shift(%285, %286) /* ty=Tensor[(4, 5, 5), uint16] */;
  (%287,)
}

def @func_4003() -> Tensor[(3, 8, 7), int64] {
  %288 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %288.0
}

def @func_10675() -> Tensor[(3, 8, 7), float64] {
  %289 = @func_4177() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %289.1
}

def @func_7299() -> Tensor[(3, 8, 7), float64] {
  %290 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %290.0
}

def @func_10188() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %291 = @func_9091() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) */;
  %292 = @func_7471() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */;
  %293 = @func_4393() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) */;
  %294 = @func_3413() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */;
  %295 = %291.0;
  %296 = %292.0;
  %297 = %293.1;
  %298 = %294.0;
  %299 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  (%295, %296, %297, %298, %299)
}

def @func_11536() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %300 = @func_8100() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %301 = @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %302 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %303 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %304 = %300.1;
  %305 = %301.1;
  %306 = %302.0;
  %307 = %303.0;
  (%304, %305, %306, %307)
}

def @func_7696() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %308 = @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %309 = @func_7275() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %310 = %308.2;
  %311 = %309.0;
  (%310, %311)
}

def @func_14510() -> Tensor[(3, 8, 7), float64] {
  @func_10675() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_19453() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %312 = @func_11536() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %313 = @func_4739() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %314 = %312.1;
  %315 = %313.0;
  (%314, %315)
}

def @func_13314() -> Tensor[(3, 8, 7), float32] {
  @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_2676() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) {
  %316 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %317 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  %318 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %319 = %316.4;
  (%317, %318, %319)
}

def @func_6926() -> (Tensor[(10, 4, 14), float64],) {
  %320 = @func_1742() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %321 = %320.2;
  (%321,)
}

def @func_17740() -> (Tensor[(3, 8, 7), int64],) {
  %322 = @func_4967() /* ty=(Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) */;
  %323 = %322.1;
  (%323,)
}

def @func_1531() -> (Tensor[(3, 8, 7), int64],) {
  %324 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %325 = %324.0;
  (%325,)
}

def @func_5537() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %326 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %327 = %326.0;
  %328 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
  (%327, %328)
}

def @func_10828() -> Tensor[(3, 8, 7), float32] {
  %329 = @func_10560() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
  cos(%331) /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_17312() -> (Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %332 = @func_13697() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
  %333 = @func_15231() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %334 = @func_4281() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %335 = %332.0;
  %336 = %333.0;
  %337 = %334.0;
  (%335, %336, %337)
}

def @func_2945() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %338 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %339 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %340 = %338.0;
  %341 = %339.4;
  (%340, %341)
}

def @func_7756() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  %342 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %343 = cast(meta[relay.Constant][3] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %344 = reshape(%343, newshape=[3, 3, 10]) /* ty=Tensor[(3, 3, 10), float64] */;
  %345 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %346 = %342.0;
  %347 = cast(%346, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %348 = reshape(%347, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %349 = @func_497(%348) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %350 = @func_4789(%344) /* ty=Tensor[(3, 3, 10), float64] */;
  %351 = %345.0;
  %352 = %349.0;
  (%346, %350, meta[relay.Constant][3] /* ty=Tensor[(90), float64] */, %351, %352)
}

def @func_11720(%var_11713: Tensor[(3, 15, 8), uint8], %var_11714: Tensor[(3, 15, 8), uint8]) -> Tensor[(3, 15, 8), uint8] {
  %353 = cast(%var_11714, dtype="uint8") /* ty=Tensor[(3, 15, 8), uint8] */;
  %354 = shape_of(%var_11713, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%var_11713, dtype="uint8") /* ty=Tensor[(3, 15, 8), uint8] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%355, %356) /* ty=Tensor[(3, 15, 8), uint8] */
}

def @func_11557() -> (Tensor[(3, 8, 7), int64],) {
  %357 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %358 = %357.1;
  (%358,)
}

def @func_15396() -> Tensor[(10, 4, 14), float64] {
  %359 = @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %359.0
}

def @func_1742() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %360 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %361 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %362 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %363 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %364 = %360.0;
  %365 = %361.0;
  %366 = %362.0;
  %367 = %363.0;
  (%364, %365, %366, %367)
}

def @func_2184(%var_2152: Tensor[(12, 7, 13), float32]) -> Tensor[(12, 7, 13), int32] {
  %368 = cast(%var_2152, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  %369 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(12, 7, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 7, 13), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %372 = divide(%370, %371) /* ty=Tensor[(12, 7, 13), float32] */;
  %373 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 7, 13), float32] */, dtype="int64") /* ty=Tensor[(12, 7, 13), int64] */;
  %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%372, dtype="int64") /* ty=Tensor[(12, 7, 13), int64] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %377 = bitwise_or(%375, %376) /* ty=Tensor[(12, 7, 13), int64] */;
  %378 = cast(%377, dtype="int32") /* ty=Tensor[(12, 7, 13), int32] */;
  %379 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%372, dtype="int32") /* ty=Tensor[(12, 7, 13), int32] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%380, %381) /* ty=Tensor[(12, 7, 13), int32] */
}

def @func_15714() -> (Tensor[(10, 4, 14), float64],) {
  %382 = @func_3771() /* ty=Tensor[(10, 4, 14), float64] */;
  (%382,)
}

def @func_737() -> (Tensor[(3, 8, 7), int64],) {
  %383 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %384 = asin(%383) /* ty=Tensor[(3, 8, 7), float64] */;
  %385 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 8, 7), float64] */, dtype="int64") /* ty=Tensor[(3, 8, 7), int64] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="int64") /* ty=Tensor[(3, 8, 7), int64] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %389 = bitwise_xor(%387, %388) /* ty=Tensor[(3, 8, 7), int64] */;
  (%389,)
}

def @func_19383() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %390 = @func_18139() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %391 = @func_16089() /* ty=Tensor[(3, 8, 7), float64] */;
  %392 = %390.0;
  (%391, %392)
}

def @func_4789(%var_4763: Tensor[(3, 3, 10), float64]) -> Tensor[(3, 3, 10), float64] {
  %393 = cast(%var_4763, dtype="float64") /* ty=Tensor[(3, 3, 10), float64] */;
  asin(%393) /* ty=Tensor[(3, 3, 10), float64] */
}

def @func_15996() -> Tensor[(3, 6, 6), float32] {
  %394 = @func_14070() /* ty=Tensor[(3, 6, 6), float32] */;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(3, 6, 6), float32] */;
  asinh(%395) /* ty=Tensor[(3, 6, 6), float32] */
}

def @func_17089() -> Tensor[(3, 8, 7), int64] {
  %396 = @func_15912() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %396.0
}

def @func_12948(%var_12937: Tensor[(8, 3, 3), int8], %var_12938: Tensor[(8, 3, 3), int8]) -> (Tensor[(8, 3, 3), bool],) {
  %397 = cast(%var_12938, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %398 = shape_of(%var_12937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%var_12937, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %401 = less(%399, %400) /* ty=Tensor[(8, 3, 3), bool] */;
  (%401,)
}

def @func_16544() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  %402 = @func_16306() /* ty=Tensor[(3, 8, 7), float32] */;
  %403 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  (%402, %403)
}

def @func_19845() -> Tensor[(3, 8, 7), int64] {
  %404 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %404.0
}

def @func_15782() -> Tensor[(16, 9, 10), bool] {
  %405 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 9, 10), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
  %406 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(16, 9, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 9, 10), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%407, %408) /* ty=Tensor[(16, 9, 10), bool] */
}

def @func_11342() -> (Tensor[(3, 8, 7), int64],) {
  %409 = @func_3899() /* ty=Tensor[(3, 8, 7), int64] */;
  (%409,)
}

def @func_18532() -> Tensor[(10, 4, 14), float64] {
  @func_3771() /* ty=Tensor[(10, 4, 14), float64] */
}

def @main(%var_20607: Tensor[(15, 2, 11), float32], %var_20608: Tensor[(15, 2, 11), float32]) -> (Tensor[(15, 2, 11), float32],) {
  %410 = cast(%var_20608, dtype="float32") /* ty=Tensor[(15, 2, 11), float32] */;
  %411 = shape_of(%var_20607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%var_20607, dtype="float32") /* ty=Tensor[(15, 2, 11), float32] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %414 = divide(%412, %413) /* ty=Tensor[(15, 2, 11), float32] */;
  (%414,)
}

def @func_14130() -> (Tensor[(10, 4, 14), float32],) {
  %415 = @func_10261() /* ty=Tensor[(10, 4, 14), float64] */;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %417 = sin(%416) /* ty=Tensor[(10, 4, 14), float32] */;
  (%417,)
}

def @func_5299() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) {
  %418 = @func_4739() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %419 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %420 = %418.2;
  (%419, %420)
}

def @func_16775() -> Tensor[(3, 8, 7), float32] {
  %421 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %421.0
}

def @func_19952() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64]) {
  %422 = @func_19906() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %423 = %422.1;
  %424 = @func_12046() /* ty=Tensor[(3, 8, 7), float64] */;
  (%423, %424)
}

def @func_14790(%var_14774: Tensor[(560), uint32], %var_14776: Tensor[(1, 594), uint32]) -> (Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64], Tensor[(560), uint32], Tensor[(16, 10), float64], Tensor[(1, 594), uint32], Tensor[(8, 3, 3), bool], Tensor[(72), int8]) {
  %425 = @func_4967() /* ty=(Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) */;
  %426 = cast(%var_14774, dtype="uint32") /* ty=Tensor[(560), uint32] */;
  %427 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 10), float64] */, dtype="float64") /* ty=Tensor[(16, 10), float64] */;
  %428 = cast(%var_14776, dtype="uint32") /* ty=Tensor[(1, 594), uint32] */;
  %429 = reshape(%426, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), uint32] */;
  %430 = reshape(%427, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %431 = reshape(%428, newshape=[594]) /* ty=Tensor[(594), uint32] */;
  %432 = @func_5472(%429, %430, %431) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), int8], Tensor[(3, 8, 7), int64], Tensor[(160), float64], Tensor[(594), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %433 = cast(meta[relay.Constant][9] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %434 = cast(meta[relay.Constant][9] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %435 = reshape(%433, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), int8] */;
  %436 = reshape(%434, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), int8] */;
  %437 = @func_12948(%435, %436) /* ty=(Tensor[(8, 3, 3), bool],) */;
  %438 = %425.0;
  %439 = %432.1;
  %440 = %437.0;
  (%438, %439, %var_14774, meta[relay.Constant][8] /* ty=Tensor[(16, 10), float64] */, %var_14776, %440, meta[relay.Constant][9] /* ty=Tensor[(72), int8] */)
}

def @func_16630() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %441 = @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %442 = @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %443 = @func_6614() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) */;
  %444 = %441.1;
  %445 = %442.1;
  %446 = %443.0;
  (%444, %445, %446)
}

def @func_12114() -> Tensor[(3, 8, 7), int64] {
  %447 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %447.1
}

def @func_20258() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %448 = @func_14375() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %449 = @func_18479() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 6, 6), float32]) */;
  %450 = %448.0;
  %451 = %449.0;
  (%450, %451)
}

def @func_18479() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 6, 6), float32]) {
  %452 = @func_12414() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %453 = %452.1;
  %454 = @func_14070() /* ty=Tensor[(3, 6, 6), float32] */;
  (%453, %454)
}

def @func_7252() -> (Tensor[(10, 4, 14), float64],) {
  %455 = @func_3413() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */;
  %456 = %455.0;
  (%456,)
}

def @func_5617() -> Tensor[(3, 8, 7), float64] {
  %457 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %457.1
}

def @func_8100() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %458 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %459 = @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %460 = @func_3554() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %461 = %458.3;
  %462 = %459.0;
  %463 = %460.8;
  (%461, %462, %463)
}

def @func_3991() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %464 = @func_2213() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %465 = @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %466 = %464.0;
  %467 = %465.0;
  (%466, %467)
}

def @func_8723() -> (Tensor[(3, 8, 7), int64],) {
  %468 = @func_3848() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %469 = %468.0;
  (%469,)
}

def @func_19346() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %470 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %471 = @func_17740() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %472 = %470.0;
  %473 = %471.0;
  (%472, %473)
}

def @func_5763() -> Tensor[(3, 8, 7), int64] {
  %474 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %474.1
}

def @func_5584() -> (Tensor[(3, 8, 7), int64],) {
  %475 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %476 = %475.0;
  (%476,)
}

def @func_972() -> (Tensor[(10, 4, 14), float64],) {
  %477 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %478 = %477.2;
  (%478,)
}

def @func_10503() -> Tensor[(10, 4, 14), float64] {
  %479 = @func_8298() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %479.0
}

def @func_20592() -> (Tensor[(10, 4, 14), bool],) {
  %480 = @func_7756() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %481 = %480.4;
  (%481,)
}

def @func_13757(%var_13750: Tensor[(12, 14, 5), float64]) -> Tensor[(12, 14, 5), float64] {
  %482 = cast(%var_13750, dtype="float64") /* ty=Tensor[(12, 14, 5), float64] */;
  %483 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(12, 14, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 5), float64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%484, %485) /* ty=Tensor[(12, 14, 5), float64] */
}

def @func_7068() -> (Tensor[(3, 8, 7), int64],) {
  %486 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %487 = %486.0;
  (%487,)
}

def @func_1807() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %488 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %489 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %490 = %489.0;
  %491 = cast(%490, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %492 = %488.0;
  %493 = acos(%491) /* ty=Tensor[(3, 8, 7), float64] */;
  (%492, %493)
}

def @func_5793() -> Tensor[(3, 8, 7), float32] {
  %494 = @func_5299() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) */;
  %494.0
}

def @func_8830(%var_8736: Tensor[(2, 660), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 660), float32], Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float32]) {
  %495 = @func_8298() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %496 = cast(%var_8736, dtype="float64") /* ty=Tensor[(2, 660), float64] */;
  %497 = cast(%var_8736, dtype="float64") /* ty=Tensor[(2, 660), float64] */;
  %498 = reshape(%496, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %499 = reshape(%497, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %500 = @func_2029(%498, %499) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(11, 8, 15), int16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
  %501 = %500.3;
  %502 = @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %503 = %502.0;
  %504 = cast(%503, dtype="uint32") /* ty=Tensor[(3, 8, 7), uint32] */;
  %505 = shape_of(%501, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%501, dtype="uint32") /* ty=Tensor[(3, 8, 7), uint32] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %508 = right_shift(%506, %507) /* ty=Tensor[(3, 8, 7), uint32] */;
  %509 = cast(%508, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
  %510 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %511 = @func_4281() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %512 = @func_4522() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %513 = cast(%var_8736, dtype="float32") /* ty=Tensor[(2, 660), float32] */;
  %514 = @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */;
  %515 = @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %516 = %515.0;
  %517 = cast(%516, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %518 = %495.0;
  %519 = sigmoid(%509) /* ty=Tensor[(3, 8, 7), float32] */;
  %520 = %510.0;
  %521 = %511.0;
  %522 = %512.2;
  %523 = erf(%513) /* ty=Tensor[(2, 660), float32] */;
  %524 = %514.0;
  %525 = log10(%517) /* ty=Tensor[(10, 4, 14), float32] */;
  (%518, %519, %520, %521, %522, %523, %524, %525)
}

def @func_17145() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %526 = @func_15414() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %527 = @func_3413() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */;
  %528 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %529 = %526.0;
  %530 = @func_2996() /* ty=Tensor[(10, 4, 14), float64] */;
  %531 = %527.1;
  %532 = %528.0;
  (%529, %530, %531, %532)
}

def @func_12414() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %533 = @func_3554() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %534 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %535 = %533.6;
  %536 = %534.0;
  (%535, %536)
}

def @func_12519() -> Tensor[(10, 4, 14), float64] {
  %537 = @func_4177() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %537.3
}

def @func_17885(%var_17865: Tensor[(15, 11, 9), float64]) -> (Tensor[(15, 11, 9), float64], Tensor[(15, 11, 9), float32]) {
  %538 = cast(%var_17865, dtype="float64") /* ty=Tensor[(15, 11, 9), float64] */;
  %539 = cast(%var_17865, dtype="float32") /* ty=Tensor[(15, 11, 9), float32] */;
  %540 = erf(%538) /* ty=Tensor[(15, 11, 9), float64] */;
  %541 = atanh(%539) /* ty=Tensor[(15, 11, 9), float32] */;
  (%540, %541)
}

def @func_3438() -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) {
  %542 = cast(meta[relay.Constant][11] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %543 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 8, 3), uint64] */, dtype="uint64") /* ty=Tensor[(11, 8, 3), uint64] */;
  %544 = minimum(%542, %543) /* ty=Tensor[(11, 8, 3), uint64] */;
  %545 = cast(%544, dtype="float64") /* ty=Tensor[(11, 8, 3), float64] */;
  %546 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %547 = exp(%545) /* ty=Tensor[(11, 8, 3), float64] */;
  %548 = %546.0;
  (%547, %548)
}

def @func_1610() -> (Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) {
  %549 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 7, 7), float32] */, dtype="float32") /* ty=Tensor[(2, 7, 7), float32] */;
  %550 = erf(%549) /* ty=Tensor[(2, 7, 7), float32] */;
  %551 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  (%550, %551)
}

def @func_3417() -> Tensor[(3, 8, 7), int64] {
  @func_2428() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_10427() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %552 = @func_8298() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %553 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %554 = @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %555 = @func_7805() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32]) */;
  %556 = %552.1;
  %557 = %553.0;
  %558 = %554.0;
  %559 = %555.0;
  (%556, %557, %558, %559)
}

def @func_989() -> (Tensor[(10, 4, 14), float64],) {
  %560 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %561 = %560.0;
  (%561,)
}

def @func_7422() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %562 = @func_7275() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %563 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %564 = %562.0;
  %565 = %563.0;
  (%564, %565)
}

def @func_16383() -> (Tensor[(3, 8, 7), float32], Tensor[(2, 7, 7), float32]) {
  %566 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %567 = @func_5334() /* ty=Tensor[(2, 7, 7), float32] */;
  (%566, %567)
}

def @func_15414() -> (Tensor[(3, 8, 7), int64],) {
  %568 = @func_11342() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %569 = %568.0;
  (%569,)
}

def @func_7275() -> (Tensor[(3, 8, 7), int64],) {
  %570 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %571 = %570.0;
  (%571,)
}

def @func_20268() -> (Tensor[(10, 4, 14), float64],) {
  %572 = @func_8546() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) */;
  %573 = %572.1;
  (%573,)
}

def @func_9777() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %574 = @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %575 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %576 = @func_9201() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %577 = @func_5937() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %578 = %574.5;
  %579 = %575.0;
  %580 = %576.2;
  %581 = %577.0;
  (%578, %579, %580, %581)
}

def @func_13233() -> Tensor[(3, 8, 7), int64] {
  @func_12848() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_15745() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %582 = @func_4522() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %583 = @func_7493() /* ty=Tensor[(3, 8, 7), int64] */;
  %584 = %582.1;
  (%583, %584)
}

def @func_16865() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(3, 8, 7), int64]) {
  %585 = @func_6864() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %586 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %587 = %585.0;
  %588 = %586.3;
  %589 = @func_2428() /* ty=Tensor[(3, 8, 7), int64] */;
  (%587, %588, %589)
}

def @func_2698() -> (Tensor[(2, 7, 7), float32],) {
  %590 = @func_1610() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */;
  %591 = %590.0;
  (%591,)
}

def @func_1331() -> Tensor[(10, 4, 14), float64] {
  %592 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %592.0
}

def @func_7259() -> (Tensor[(11, 8, 3), float64],) {
  %593 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %594 = %593.0;
  (%594,)
}

def @func_2730() -> (Tensor[(3, 8, 7), float64],) {
  %595 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %596 = %595.0;
  (%596,)
}

def @func_15971() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %597 = @func_10795() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %598 = @func_6864() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %599 = %597.0;
  %600 = @func_12046() /* ty=Tensor[(3, 8, 7), float64] */;
  %601 = %598.0;
  (%599, %600, %601)
}

def @func_18628() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %602 = @func_13482() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %603 = @func_12778() /* ty=Tensor[(3, 8, 7), int64] */;
  %604 = %602.2;
  (%603, %604)
}

def @func_12449() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %605 = @func_6468() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %606 = @func_11167() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %607 = %605.0;
  %608 = %606.1;
  (%607, %608)
}

def @func_5272() -> Tensor[(10, 4, 14), float64] {
  %609 = @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %609.0
}

def @func_17990(%var_17951: Tensor[(594), uint32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(66, 9), uint64]) {
  %610 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %611 = @func_14467() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %612 = cast(%var_17951, dtype="uint32") /* ty=Tensor[(594), uint32] */;
  %613 = @func_13314() /* ty=Tensor[(3, 8, 7), float32] */;
  %614 = cast(%613, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %615 = reshape(%612, newshape=[66, 9]) /* ty=Tensor[(66, 9), uint32] */;
  %616 = reshape(%614, newshape=[3, 8, 7]) /* ty=Tensor[(3, 8, 7), float64] */;
  %617 = @func_9548(%615, %616) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(3, 8, 7), uint16], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %618 = %617.2;
  %619 = cast(%var_17951, dtype="uint64") /* ty=Tensor[(594), uint64] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(2), int32] */;
  %621 = cast(%618, dtype="uint64") /* ty=Tensor[(66, 9), uint64] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %623 = %610.0;
  %624 = %611.1;
  %625 = bitwise_or(%621, %622) /* ty=Tensor[(66, 9), uint64] */;
  (%613, %623, %624, %625)
}

def @func_14252() -> Tensor[(10, 4, 14), float64] {
  %626 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %626.0
}

def @func_10335() -> Tensor[(10, 4, 14), float64] {
  %627 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %627.0
}

def @func_19652() -> Tensor[(3, 8, 7), int64] {
  %628 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %628.0
}

def @func_7936() -> (Tensor[(10, 4, 14), float64],) {
  %629 = @func_3796() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %630 = %629.2;
  (%630,)
}

def @func_13963(%var_13953: Tensor[(14, 9, 4), float64]) -> (Tensor[(14, 9, 4), float64],) {
  %631 = cast(%var_13953, dtype="float64") /* ty=Tensor[(14, 9, 4), float64] */;
  %632 = sigmoid(%631) /* ty=Tensor[(14, 9, 4), float64] */;
  (%632,)
}

def @func_16744() -> (Tensor[(3, 8, 7), int64],) {
  %633 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %634 = %633.0;
  (%634,)
}

def @func_4177() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %635 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %636 = cast(%635, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %637 = @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %638 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %639 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %640 = atan(%636) /* ty=Tensor[(3, 8, 7), float64] */;
  %641 = %637.2;
  %642 = %638.0;
  (%639, %640, %641, %642)
}

def @func_15550() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) {
  %643 = @func_12423() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %644 = @func_5793() /* ty=Tensor[(3, 8, 7), float32] */;
  %645 = @func_12778() /* ty=Tensor[(3, 8, 7), int64] */;
  %646 = %643.0;
  (%644, %645, %646)
}

def @func_14577() -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) {
  %647 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %648 = @func_12414() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %649 = %647.0;
  %650 = %648.0;
  (%649, %650)
}

def @func_10560() -> (Tensor[(3, 8, 7), float32],) {
  %651 = @func_7471() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */;
  %652 = %651.1;
  (%652,)
}

def @func_17429() -> Tensor[(3, 6, 6), float32] {
  %653 = @func_15568() /* ty=(Tensor[(3, 6, 6), float32],) */;
  %653.0
}

def @func_2029(%var_1981: Tensor[(11, 8, 15), float64], %var_1982: Tensor[(11, 8, 15), float64]) -> (Tensor[(11, 8, 15), float64], Tensor[(11, 8, 15), int16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %654 = cast(%var_1982, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %655 = shape_of(%var_1981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_1981, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %658 = cast(%var_1981, dtype="int16") /* ty=Tensor[(11, 8, 15), int16] */;
  %659 = shape_of(%var_1982, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_1982, dtype="int16") /* ty=Tensor[(11, 8, 15), int16] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %662 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %663 = divide(%656, %657) /* ty=Tensor[(11, 8, 15), float64] */;
  %664 = left_shift(%660, %661) /* ty=Tensor[(11, 8, 15), int16] */;
  %665 = %662.0;
  %666 = @func_1054() /* ty=Tensor[(3, 8, 7), float32] */;
  (%663, %664, %665, %666)
}

def @func_16823(%var_16794: Tensor[(16, 2, 4), int64], %var_16795: Tensor[(16, 2, 4), int64]) -> (Tensor[(16, 2, 4), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64]) {
  %667 = cast(%var_16795, dtype="int64") /* ty=Tensor[(16, 2, 4), int64] */;
  %668 = shape_of(%var_16794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_16794, dtype="int64") /* ty=Tensor[(16, 2, 4), int64] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %671 = @func_4081() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %672 = bitwise_xor(%669, %670) /* ty=Tensor[(16, 2, 4), int64] */;
  %673 = %671.1;
  %674 = @func_14510() /* ty=Tensor[(3, 8, 7), float64] */;
  (%672, %673, %674)
}

def @func_8689() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64]) {
  %675 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %676 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %677 = cast(meta[relay.Constant][14] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %678 = reshape(%677, newshape=[3, 3, 10]) /* ty=Tensor[(3, 3, 10), float64] */;
  %679 = %675.0;
  %680 = %676.0;
  %681 = @func_4789(%678) /* ty=Tensor[(3, 3, 10), float64] */;
  (%679, %680, %681, meta[relay.Constant][14] /* ty=Tensor[(90), float64] */)
}

def @func_2314() -> (Tensor[(10, 4, 14), float64],) {
  %682 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %683 = %682.0;
  (%683,)
}

def @func_8978(%var_8903: Tensor[(16, 2, 4), float32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(16, 2, 4), int64], Tensor[(3, 8, 7), int64]) {
  %684 = @func_5908() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %685 = @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %686 = cast(%var_8903, dtype="float32") /* ty=Tensor[(16, 2, 4), float32] */;
  %687 = asinh(%686) /* ty=Tensor[(16, 2, 4), float32] */;
  %688 = cast(%687, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
  %689 = erf(%688) /* ty=Tensor[(16, 2, 4), float64] */;
  %690 = cast(%689, dtype="bool") /* ty=Tensor[(16, 2, 4), bool] */;
  %691 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%687, dtype="bool") /* ty=Tensor[(16, 2, 4), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %694 = less(%692, %693) /* ty=Tensor[(16, 2, 4), bool] */;
  %695 = cast(%687, dtype="int64") /* ty=Tensor[(16, 2, 4), int64] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%694, dtype="int64") /* ty=Tensor[(16, 2, 4), int64] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %699 = %684.0;
  %700 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  %701 = %685.0;
  %702 = subtract(%697, %698) /* ty=Tensor[(16, 2, 4), int64] */;
  %703 = @func_2459() /* ty=Tensor[(3, 8, 7), int64] */;
  (%699, %700, %701, %702, %703)
}

def @func_1494() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %704 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %705 = %704.0;
  %706 = cast(%705, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %707 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %708 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %709 = cosh(%706) /* ty=Tensor[(3, 8, 7), float64] */;
  %710 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %711 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  %712 = %707.0;
  (%708, %709, %710, %711, %712)
}

def @func_12296(%var_12288: Tensor[(28, 72), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(16, 14, 9), float64], Tensor[(28, 72), float64], Tensor[(3, 8, 7), int64]) {
  %713 = @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %714 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %715 = @func_11438() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
  %716 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %717 = @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %718 = cast(%var_12288, dtype="float64") /* ty=Tensor[(28, 72), float64] */;
  %719 = reshape(%718, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %720 = %713.0;
  %721 = %714.0;
  %722 = %715.0;
  %723 = %716.1;
  %724 = %717.0;
  %725 = @func_5793() /* ty=Tensor[(3, 8, 7), float32] */;
  %726 = @func_9125() /* ty=Tensor[(3, 8, 7), int64] */;
  %727 = @func_1399(%719) /* ty=Tensor[(16, 14, 9), float64] */;
  %728 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  (%720, %721, %722, %723, %724, %725, %726, %727, %var_12288, %728)
}

def @func_13212(%var_13175: Tensor[(40), float64], %var_13196: Tensor[(120), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(2, 5, 4), float64], Tensor[(40), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(5, 6, 4), float64], Tensor[(120), float64], Tensor[(10, 4, 14), float64]) {
  %729 = @func_6614() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) */;
  %730 = cast(%var_13175, dtype="float64") /* ty=Tensor[(40), float64] */;
  %731 = reshape(%730, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float64] */;
  %732 = @func_4561(%731) /* ty=(Tensor[(2, 5, 4), float64],) */;
  %733 = cast(meta[relay.Constant][15] /* ty=Tensor[(66, 9), uint32] */, dtype="uint32") /* ty=Tensor[(66, 9), uint32] */;
  %734 = reshape(%733, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), uint32] */;
  %735 = @func_1181(%734) /* ty=(Tensor[(9, 6, 11), bool],) */;
  %736 = cast(%var_13196, dtype="float64") /* ty=Tensor[(120), float64] */;
  %737 = reshape(%736, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %738 = @func_8469(%737) /* ty=(Tensor[(5, 6, 4), float64],) */;
  %739 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %740 = %729.1;
  %741 = %732.0;
  %742 = %735.0;
  %743 = %738.0;
  %744 = %739.0;
  (%740, %741, %var_13175, %742, meta[relay.Constant][15] /* ty=Tensor[(66, 9), uint32] */, %743, %var_13196, %744)
}

def @func_9548(%var_9520: Tensor[(66, 9), uint32], %var_9522: Tensor[(3, 8, 7), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(3, 8, 7), uint16], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
  %745 = cast(%var_9520, dtype="uint32") /* ty=Tensor[(66, 9), uint32] */;
  %746 = reshape(%745, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), uint32] */;
  %747 = @func_1181(%746) /* ty=(Tensor[(9, 6, 11), bool],) */;
  %748 = @func_7378() /* ty=(Tensor[(4, 5, 5), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %749 = %748.2;
  %750 = cast(%var_9522, dtype="uint16") /* ty=Tensor[(3, 8, 7), uint16] */;
  %751 = shape_of(%749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(%749, dtype="uint16") /* ty=Tensor[(3, 8, 7), uint16] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %754 = @func_7124() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
  %755 = @func_2227() /* ty=Tensor[(10, 4, 14), float64] */;
  %756 = %747.0;
  %757 = subtract(%752, %753) /* ty=Tensor[(3, 8, 7), uint16] */;
  %758 = %754.1;
  %759 = @func_5617() /* ty=Tensor[(3, 8, 7), float64] */;
  (%755, %756, %var_9520, %757, %758, %759)
}

def @func_3796() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %760 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %761 = @func_2581() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %762 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %763 = %760.0;
  %764 = %761.0;
  (%762, %763, %764)
}

def @func_7896() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %765 = @func_4281() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %766 = @func_5617() /* ty=Tensor[(3, 8, 7), float64] */;
  %767 = %765.0;
  (%766, %767)
}

def @func_9484() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %768 = @func_7896() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
  %769 = @func_7299() /* ty=Tensor[(3, 8, 7), float64] */;
  %770 = %768.1;
  (%769, %770)
}

def @func_6468() -> (Tensor[(3, 8, 7), float64],) {
  %771 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %772 = %771.1;
  (%772,)
}

def @func_17924() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %773 = @func_11027() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %774 = %773.1;
  %775 = @func_10331() /* ty=Tensor[(10, 4, 14), float64] */;
  (%774, %775)
}

def @func_17852() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32]) {
  %776 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %777 = @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */;
  %778 = %776.0;
  %779 = %777.0;
  (%778, %779)
}

def @func_13890() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(5, 4, 2), float64], Tensor[(40), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), bool]) {
  %780 = @func_9893() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %781 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %782 = reshape(%781, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float64] */;
  %783 = @func_9575(%782) /* ty=(Tensor[(5, 4, 2), float64],) */;
  %784 = @func_1054() /* ty=Tensor[(3, 8, 7), float32] */;
  %785 = %780.0;
  %786 = %783.0;
  %787 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %788 = @func_10593() /* ty=Tensor[(10, 4, 14), bool] */;
  (%784, %785, %786, meta[relay.Constant][16] /* ty=Tensor[(40), float64] */, %787, %788)
}

def @func_18005() -> Tensor[(3, 8, 7), float64] {
  %789 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %789.0
}

def @func_1015() -> Tensor[(3, 8, 7), int64] {
  %790 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %790.0
}

def @func_2634() -> Tensor[(3, 8, 7), float32] {
  @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_6435() -> (Tensor[(10, 4, 14), float64],) {
  %791 = @func_4461() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */;
  %792 = %791.0;
  (%792,)
}

def @func_18216() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %793 = @func_14252() /* ty=Tensor[(10, 4, 14), float64] */;
  %794 = @func_17064() /* ty=Tensor[(3, 8, 7), int64] */;
  (%793, %794)
}

def @func_18432() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
  %795 = @func_11027() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %796 = @func_4461() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */;
  %797 = @func_11231() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
  %798 = @func_16544() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %799 = %795.2;
  %800 = %796.2;
  %801 = %797.2;
  %802 = %798.0;
  %803 = @func_15265() /* ty=Tensor[(3, 8, 7), float64] */;
  (%799, %800, %801, %802, %803)
}

def @func_19242(%var_19235: Tensor[(15, 13, 11), float32], %var_19238: Tensor[(15, 13, 11), float32]) -> Tensor[(15, 13, 11), uint64] {
  %804 = cast(%var_19235, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
  %805 = acos(%804) /* ty=Tensor[(15, 13, 11), float32] */;
  %806 = cast(%var_19238, dtype="uint64") /* ty=Tensor[(15, 13, 11), uint64] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="uint64") /* ty=Tensor[(15, 13, 11), uint64] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%808, %809) /* ty=Tensor[(15, 13, 11), uint64] */
}

def @func_4461() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) {
  %810 = @func_3796() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %811 = %810.2;
  %812 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %813 = @func_3417() /* ty=Tensor[(3, 8, 7), int64] */;
  (%811, %812, %813)
}

def @func_12963() -> Tensor[(3, 8, 7), float64] {
  %814 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %814.0
}

def @func_8120() -> Tensor[(3, 8, 7), int64] {
  %815 = @func_8100() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %815.1
}

def @func_7581() -> (Tensor[(3, 8, 7), int64],) {
  %816 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %817 = %816.4;
  (%817,)
}

def @func_9817() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %818 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %819 = @func_6435() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %820 = %818.0;
  %821 = %819.0;
  (%820, %821)
}

def @func_8886() -> (Tensor[(10, 4, 14), float64],) {
  %822 = @func_1742() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %823 = %822.3;
  (%823,)
}

def @func_15151(%var_15133: Tensor[(225, 14), float32]) -> (Tensor[(10, 4, 14), float64], Tensor[(15, 15, 14), float32], Tensor[(225, 14), float32], Tensor[(3, 8, 7), int64]) {
  %824 = cast(%var_15133, dtype="float32") /* ty=Tensor[(225, 14), float32] */;
  %825 = reshape(%824, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), float32] */;
  %826 = @func_3063(%825) /* ty=(Tensor[(15, 15, 14), float32], Tensor[(3, 8, 7), float32]) */;
  %827 = @func_8100() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %828 = @func_5272() /* ty=Tensor[(10, 4, 14), float64] */;
  %829 = %826.0;
  %830 = %827.1;
  (%828, %829, %var_15133, %830)
}

def @func_2227() -> Tensor[(10, 4, 14), float64] {
  %831 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %831.2
}

def @func_7171() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %832 = @func_6104() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %833 = @func_2428() /* ty=Tensor[(3, 8, 7), int64] */;
  %834 = %832.0;
  (%833, %834)
}

def @func_20209() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32]) {
  %835 = @func_19622() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %836 = @func_15568() /* ty=(Tensor[(3, 6, 6), float32],) */;
  %837 = %835.0;
  %838 = %836.0;
  (%837, %838)
}

def @func_10723() -> (Tensor[(10, 4, 14), float32],) {
  %839 = @func_7336() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32]) */;
  %840 = %839.1;
  (%840,)
}

def @func_3364() -> (Tensor[(3, 8, 7), int64],) {
  %841 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %842 = %841.0;
  (%842,)
}

def @func_1100() -> Tensor[(10, 4, 14), uint32] {
  %843 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %844 = %843.0;
  %845 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 4, 14), float64] */, dtype="uint32") /* ty=Tensor[(10, 4, 14), uint32] */;
  %846 = shape_of(%844, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%844, dtype="uint32") /* ty=Tensor[(10, 4, 14), uint32] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%847, %848) /* ty=Tensor[(10, 4, 14), uint32] */
}

def @func_14906() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %849 = @func_11387() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %850 = @func_7299() /* ty=Tensor[(3, 8, 7), float64] */;
  %851 = %849.1;
  (%850, %851)
}

def @func_10795() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %852 = @func_10560() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %853 = %852.0;
  %854 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
  (%853, %854)
}

def @func_5937() -> (Tensor[(3, 8, 7), int64],) {
  %855 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %856 = %855.1;
  (%856,)
}

def @func_15265() -> Tensor[(3, 8, 7), float64] {
  %857 = @func_11579() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %857.0
}

def @func_3274() -> (Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %858 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %859 = %858.0;
  %860 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 4, 14), float64] */, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%859, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %864 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %865 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %866 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %867 = greater(%862, %863) /* ty=Tensor[(10, 4, 14), bool] */;
  %868 = %864.0;
  %869 = %865.0;
  %870 = %866.0;
  (%867, %868, %869, %870)
}

def @func_17084() -> Tensor[(3, 8, 7), int64] {
  @func_4003() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_4022() -> (Tensor[(3, 8, 7), float32],) {
  %871 = @func_1054() /* ty=Tensor[(3, 8, 7), float32] */;
  (%871,)
}

def @func_3848() -> (Tensor[(3, 8, 7), int64],) {
  %872 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %873 = %872.0;
  (%873,)
}

def @func_497(%var_475: Tensor[(10, 4, 14), bool]) -> (Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) {
  %874 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %875 = cast(%var_475, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %876 = cast(%var_475, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  %877 = logical_or(%874, %875) /* ty=Tensor[(10, 4, 14), bool] */;
  %878 = sigmoid(%876) /* ty=Tensor[(10, 4, 14), float64] */;
  (%877, %878)
}

def @func_12046() -> Tensor[(3, 8, 7), float64] {
  %879 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %879.0
}

def @func_17479(%var_17476: Tensor[(576), float64]) -> (Tensor[(11, 8, 3), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), float64], Tensor[(576), float64]) {
  %880 = @func_6693() /* ty=(Tensor[(11, 8, 3), float64],) */;
  %881 = @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */;
  %882 = cast(%var_17476, dtype="float64") /* ty=Tensor[(576), float64] */;
  %883 = reshape(%882, newshape=[16, 3, 12]) /* ty=Tensor[(16, 3, 12), float64] */;
  %884 = @func_14015(%883) /* ty=(Tensor[(16, 3, 12), int8], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32]) */;
  %885 = %880.0;
  %886 = %881.0;
  %887 = %884.1;
  (%885, %886, %887, %var_17476)
}

def @func_9201() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %888 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %889 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %890 = %888.0;
  %891 = @func_7299() /* ty=Tensor[(3, 8, 7), float64] */;
  %892 = %889.0;
  (%890, %891, %892)
}

def @func_2534(%var_2510: Tensor[(12, 10, 16), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(12, 10, 16), float32], Tensor[(10, 4, 14), float64]) {
  %893 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %894 = cast(%var_2510, dtype="float64") /* ty=Tensor[(12, 10, 16), float64] */;
  %895 = sqrt(%894) /* ty=Tensor[(12, 10, 16), float64] */;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(12, 10, 16), float32] */;
  %897 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %898 = %893.0;
  %899 = acosh(%896) /* ty=Tensor[(12, 10, 16), float32] */;
  %900 = %897.0;
  (%898, %899, %900)
}

def @func_16190() -> Tensor[(3, 8, 7), int64] {
  %901 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %901.0
}

def @func_20352() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %902 = @func_15213() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %903 = @func_16594() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %904 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %905 = @func_16346() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %906 = %902.2;
  %907 = %903.0;
  %908 = %904.0;
  %909 = %905.2;
  (%906, %907, %908, %909)
}

def @func_4081() -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
  %910 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %911 = %910.0;
  %912 = @func_3319() /* ty=Tensor[(3, 8, 7), float64] */;
  (%911, %912)
}

def @func_2074() -> (Tensor[(10, 4, 14), float64],) {
  %913 = @func_1303() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
  %914 = %913.0;
  %915 = cast(%914, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  %916 = atanh(%915) /* ty=Tensor[(10, 4, 14), float64] */;
  (%916,)
}

def @func_6864() -> (Tensor[(10, 4, 14), float64],) {
  %917 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
  (%917,)
}

def @func_12644() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %918 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %919 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %920 = %918.0;
  %921 = %919.2;
  (%920, %921)
}

def @func_1913() -> (Tensor[(3, 8, 7), int64],) {
  %922 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %923 = %922.0;
  (%923,)
}

def @func_18172() -> Tensor[(3, 8, 7), int64] {
  %924 = @func_16630() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %924.0
}

def @func_17254() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %925 = @func_15714() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %926 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %927 = %925.0;
  %928 = %926.0;
  (%927, %928)
}

def @func_15680() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) {
  %929 = @func_10723() /* ty=(Tensor[(10, 4, 14), float32],) */;
  %930 = @func_4927() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %931 = %929.0;
  %932 = %930.0;
  (%931, %932)
}

def @func_19591() -> Tensor[(3, 8, 7), float32] {
  %933 = @func_14375() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %933.0
}

def @func_3633() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %934 = @func_1742() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %935 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %936 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %937 = %934.0;
  %938 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %939 = %935.0;
  %940 = %936.0;
  (%937, %938, %939, %940)
}

def @func_17630() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %941 = @func_15008() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
  %942 = %941.3;
  %943 = @func_17084() /* ty=Tensor[(3, 8, 7), int64] */;
  (%942, %943)
}

def @func_12778() -> Tensor[(3, 8, 7), int64] {
  %944 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %944.0
}

def @func_4011() -> (Tensor[(3, 6, 6), float32],) {
  %945 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 6, 6), float32] */, dtype="float32") /* ty=Tensor[(3, 6, 6), float32] */;
  %946 = atanh(%945) /* ty=Tensor[(3, 6, 6), float32] */;
  (%946,)
}

def @func_16346() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %947 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %948 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %949 = %947.0;
  %950 = %948.0;
  %951 = @func_16190() /* ty=Tensor[(3, 8, 7), int64] */;
  (%949, %950, %951)
}

def @func_11027() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  %952 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %953 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %954 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %955 = %953.0;
  %956 = cast(%955, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %957 = reshape(%956, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %958 = @func_497(%957) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %959 = %952.3;
  %960 = @func_3919() /* ty=Tensor[(3, 8, 7), int64] */;
  %961 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  %962 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  %963 = %954.0;
  %964 = %958.0;
  (%959, %960, %961, %962, %955, %963, %964)
}

def @func_4897() -> (Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) {
  %965 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %966 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %967 = %965.0;
  %968 = %966.0;
  (%967, %968)
}

def @func_12620() -> (Tensor[(10, 4, 14), float64],) {
  %969 = @func_8886() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %970 = %969.0;
  (%970,)
}

def @func_4973() -> (Tensor[(10, 4, 14), float64],) {
  %971 = @func_3771() /* ty=Tensor[(10, 4, 14), float64] */;
  (%971,)
}

def @func_6415() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %972 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %973 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %974 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
  %975 = cast(%974, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %976 = @func_4739() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %977 = @func_5101() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64]) */;
  %978 = @func_3848() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %979 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %980 = %972.0;
  %981 = %973.1;
  %982 = log2(%975) /* ty=Tensor[(10, 4, 14), float32] */;
  %983 = %976.2;
  %984 = %977.0;
  %985 = %978.0;
  %986 = %979.0;
  (%980, %981, %982, %983, %984, %985, %986)
}

def @func_865() -> (Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %987 = cast(meta[relay.Constant][20] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %988 = reshape(%987, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %989 = @func_497(%988) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %990 = cast(meta[relay.Constant][20] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %991 = reshape(%990, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %992 = @func_497(%991) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %993 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %994 = %993.0;
  %995 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 8, 7), int64] */, dtype="uint16") /* ty=Tensor[(3, 8, 7), uint16] */;
  %996 = shape_of(%994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %997 = cast(%994, dtype="uint16") /* ty=Tensor[(3, 8, 7), uint16] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %999 = %992.1;
  %1000 = cast(%999, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %1001 = reshape(%1000, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %1002 = @func_497(%1001) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %1003 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1004 = %989.1;
  %1005 = left_shift(%997, %998) /* ty=Tensor[(3, 8, 7), uint16] */;
  %1006 = %1002.1;
  %1007 = %1003.0;
  (%1004, meta[relay.Constant][20] /* ty=Tensor[(560), bool] */, %999, %1005, %1006, %1007)
}

def @func_7378() -> (Tensor[(4, 5, 5), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %1008 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 5, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 5), float64] */;
  %1009 = sin(%1008) /* ty=Tensor[(4, 5, 5), float64] */;
  %1010 = @func_4003() /* ty=Tensor[(3, 8, 7), int64] */;
  %1011 = @func_6675() /* ty=Tensor[(3, 8, 7), float64] */;
  (%1009, %1010, %1011)
}

def @func_14393() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1012 = @func_11027() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %1013 = @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1014 = %1012.1;
  %1015 = %1013.0;
  (%1014, %1015)
}

def @func_9407() -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float32]) {
  %1016 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
  %1017 = @func_1303() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
  %1018 = %1016.0;
  %1019 = %1017.1;
  (%1018, %1019)
}

def @func_20287(%var_20279: Tensor[(15, 16, 14), int64], %var_20280: Tensor[(15, 16, 14), int64]) -> Tensor[(15, 16, 14), int64] {
  %1020 = cast(%var_20280, dtype="int64") /* ty=Tensor[(15, 16, 14), int64] */;
  %1021 = shape_of(%var_20279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%var_20279, dtype="int64") /* ty=Tensor[(15, 16, 14), int64] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  right_shift(%1022, %1023) /* ty=Tensor[(15, 16, 14), int64] */
}

def @func_2600() -> (Tensor[(10, 4, 14), float64],) {
  %1024 = @func_2581() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1025 = %1024.0;
  (%1025,)
}

def @func_13363() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
  %1026 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1027 = @func_7896() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
  %1028 = %1026.0;
  %1029 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %1030 = %1027.0;
  (%1028, %1029, %1030)
}

def @func_2996() -> Tensor[(10, 4, 14), float64] {
  %1031 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1031.0
}

def @func_8163() -> Tensor[(3, 8, 7), float32] {
  @func_5793() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_1380() -> (Tensor[(10, 4, 14), float64],) {
  %1032 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1033 = %1032.4;
  (%1033,)
}

def @func_14863(%var_14831: Tensor[(2016), float64]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(2016), float64], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), float64]) {
  %1034 = @func_10560() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %1035 = @func_5584() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1036 = cast(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1037 = reshape(%1036, newshape=[28, 72]) /* ty=Tensor[(28, 72), float64] */;
  %1038 = @func_12296(%1037) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(16, 14, 9), float64], Tensor[(28, 72), float64], Tensor[(3, 8, 7), int64]) */;
  %1039 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %1040 = @func_7471() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */;
  %1041 = @func_6468() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %1042 = cast(%var_14831, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %1043 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1044 = cast(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1046 = maximum(%1044, %1045) /* ty=Tensor[(2016), float32] */;
  %1047 = cast(meta[relay.Constant][23] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1048 = shape_of(%1046, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1049 = cast(%1046, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1051 = @func_14130() /* ty=(Tensor[(10, 4, 14), float32],) */;
  %1052 = @func_14762() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
  %1053 = %1034.0;
  %1054 = %1035.0;
  %1055 = %1038.0;
  %1056 = %1039.0;
  %1057 = %1040.1;
  %1058 = %1041.0;
  %1059 = floor_mod(%1049, %1050) /* ty=Tensor[(2016), float64] */;
  %1060 = %1051.0;
  %1061 = %1052.0;
  (%1053, %1054, %1055, %1056, %1057, %1058, %1059, %1060, %1061)
}

def @func_8469(%var_8466: Tensor[(5, 6, 4), float64]) -> (Tensor[(5, 6, 4), float64],) {
  %1062 = cast(%var_8466, dtype="float64") /* ty=Tensor[(5, 6, 4), float64] */;
  %1063 = cosh(%1062) /* ty=Tensor[(5, 6, 4), float64] */;
  (%1063,)
}

def @func_16121() -> Tensor[(10, 4, 14), float64] {
  %1064 = @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1064.0
}

def @func_1054() -> Tensor[(3, 8, 7), float32] {
  %1065 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1066 = %1065.0;
  %1067 = cast(%1066, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
  sinh(%1067) /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_16594() -> (Tensor[(3, 8, 7), int64],) {
  %1068 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1068,)
}

def @func_15213() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1069 = @func_9701() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1070 = @func_7896() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
  %1071 = %1069.0;
  %1072 = @func_10503() /* ty=Tensor[(10, 4, 14), float64] */;
  %1073 = %1070.1;
  (%1071, %1072, %1073)
}

def @func_4249() -> (Tensor[(3, 8, 7), float64],) {
  %1074 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %1075 = %1074.0;
  (%1075,)
}

def @func_19545() -> (Tensor[(560), bool],) {
  %1076 = @func_18853() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(560), bool]) */;
  %1077 = %1076.1;
  (%1077,)
}

def @func_17707(%var_17655: Tensor[(3, 6, 7), uint32], %var_17656: Tensor[(3, 6, 7), uint32]) -> (Tensor[(3, 6, 7), uint32],) {
  %1078 = cast(%var_17656, dtype="uint32") /* ty=Tensor[(3, 6, 7), uint32] */;
  %1079 = shape_of(%var_17655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1080 = cast(%var_17655, dtype="uint32") /* ty=Tensor[(3, 6, 7), uint32] */;
  %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1082 = left_shift(%1080, %1081) /* ty=Tensor[(3, 6, 7), uint32] */;
  (%1082,)
}

def @func_13499() -> Tensor[(10, 4, 14), float64] {
  %1083 = @func_6926() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1083.0
}

def @func_2428() -> Tensor[(3, 8, 7), int64] {
  %1084 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1084.0
}

def @func_16576() -> (Tensor[(3, 8, 7), int64],) {
  %1085 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1086 = %1085.1;
  (%1086,)
}

def @func_7805() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32]) {
  %1087 = @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1088 = @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1089 = %1087.0;
  %1090 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  %1091 = %1088.2;
  (%1089, %1090, %1091)
}

def @func_9893() -> (Tensor[(3, 8, 7), int64],) {
  %1092 = @func_2459() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1092,)
}

def @func_2799(%var_2784: int8, %var_2785: Tensor[(13, 11, 5), int8]) -> (Tensor[(13, 11, 5), int8], Tensor[(13, 11, 5), int8], Tensor[(10, 4, 14), float64]) {
  %1093 = cast(%var_2784, dtype="int8") /* ty=int8 */;
  %1094 = cast(%var_2785, dtype="int8") /* ty=Tensor[(13, 11, 5), int8] */;
  %1095 = cast(%var_2784, dtype="int8") /* ty=int8 */;
  %1096 = cast(%var_2785, dtype="int8") /* ty=Tensor[(13, 11, 5), int8] */;
  %1097 = @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1098 = multiply(%1093, %1094) /* ty=Tensor[(13, 11, 5), int8] */;
  %1099 = logical_xor(%1095, %1096) /* ty=Tensor[(13, 11, 5), int8] */;
  %1100 = %1097.0;
  (%1098, %1099, %1100)
}

def @func_19465(%var_19458: Tensor[(5, 12, 13), float64]) -> Tensor[(5, 12, 13), float64] {
  %1101 = cast(%var_19458, dtype="float64") /* ty=Tensor[(5, 12, 13), float64] */;
  sin(%1101) /* ty=Tensor[(5, 12, 13), float64] */
}

def @func_9858(%var_9828: Tensor[(10, 16, 15), int8], %var_9829: Tensor[(10, 16, 15), int8], %var_9838: Tensor[(10, 16, 15), int8]) -> (Tensor[(10, 16, 15), int8], Tensor[(10, 16, 15), float32], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %1102 = cast(%var_9829, dtype="int8") /* ty=Tensor[(10, 16, 15), int8] */;
  %1103 = shape_of(%var_9828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%var_9828, dtype="int8") /* ty=Tensor[(10, 16, 15), int8] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1106 = cast(%var_9838, dtype="float32") /* ty=Tensor[(10, 16, 15), float32] */;
  %1107 = shape_of(%var_9828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1108 = cast(%var_9828, dtype="float32") /* ty=Tensor[(10, 16, 15), float32] */;
  %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1110 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
  %1111 = left_shift(%1104, %1105) /* ty=Tensor[(10, 16, 15), int8] */;
  %1112 = power(%1108, %1109) /* ty=Tensor[(10, 16, 15), float32] */;
  %1113 = @func_7493() /* ty=Tensor[(3, 8, 7), int64] */;
  %1114 = %1110.0;
  (%1111, %1112, %1113, %1114)
}

def @func_11387() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  %1115 = @func_9701() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1116 = @func_9091() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) */;
  %1117 = @func_8120() /* ty=Tensor[(3, 8, 7), int64] */;
  %1118 = %1115.0;
  %1119 = %1116.1;
  (%1117, %1118, %1119)
}

def @func_17788() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1120 = @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1121 = @func_14393() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1122 = %1120.0;
  %1123 = %1121.0;
  (%1122, %1123)
}

def @func_4927() -> (Tensor[(3, 8, 7), int64],) {
  %1124 = @func_4177() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %1125 = %1124.2;
  (%1125,)
}

def @func_1399(%var_1386: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float64] {
  %1126 = cast(%var_1386, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  asinh(%1126) /* ty=Tensor[(16, 14, 9), float64] */
}

def @func_5919() -> (Tensor[(3, 8, 7), int64],) {
  %1127 = @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1128 = %1127.3;
  (%1128,)
}

def @func_3592() -> Tensor[(3, 8, 7), float32] {
  @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_15568() -> (Tensor[(3, 6, 6), float32],) {
  %1129 = @func_14070() /* ty=Tensor[(3, 6, 6), float32] */;
  (%1129,)
}

def @func_2968() -> (Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1130 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1131 = @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1132 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1133 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %1134 = %1130.0;
  %1135 = %1131.0;
  %1136 = %1132.2;
  (%1133, %1134, %1135, %1136)
}

def @func_6759(%var_6730: Tensor[(3, 1, 6), float64]) -> Tensor[(3, 1, 6), float64] {
  %1137 = cast(%var_6730, dtype="float64") /* ty=Tensor[(3, 1, 6), float64] */;
  rsqrt(%1137) /* ty=Tensor[(3, 1, 6), float64] */
}

def @func_929() -> (Tensor[(3, 8, 7), int64],) {
  %1138 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1139 = %1138.5;
  (%1139,)
}

def @func_2140() -> (Tensor[(10, 4, 14), float64],) {
  %1140 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_20071() -> Tensor[(3, 8, 7), int64] {
  %1142 = @func_19346() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1142.0
}

def @func_4561(%var_4545: Tensor[(2, 5, 4), float64]) -> (Tensor[(2, 5, 4), float64],) {
  %1143 = cast(%var_4545, dtype="float64") /* ty=Tensor[(2, 5, 4), float64] */;
  %1144 = acos(%1143) /* ty=Tensor[(2, 5, 4), float64] */;
  (%1144,)
}

def @func_11779() -> (Tensor[(10, 4, 14), float64],) {
  %1145 = @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1146 = %1145.0;
  (%1146,)
}

def @func_17535() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %1147 = @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1148 = @func_8234() /* ty=Tensor[(10, 4, 14), float64] */;
  %1149 = %1147.0;
  (%1148, %1149)
}

def @func_5334() -> Tensor[(2, 7, 7), float32] {
  %1150 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
  %1150.0
}

def @func_13153() -> (Tensor[(2, 7, 7), uint64], Tensor[(3, 8, 7), int64]) {
  %1151 = @func_6614() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) */;
  %1152 = %1151.2;
  %1153 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 7, 7), float32] */, dtype="uint64") /* ty=Tensor[(2, 7, 7), uint64] */;
  %1154 = shape_of(%1152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1155 = cast(%1152, dtype="uint64") /* ty=Tensor[(2, 7, 7), uint64] */;
  %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1157 = @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1158 = subtract(%1155, %1156) /* ty=Tensor[(2, 7, 7), uint64] */;
  %1159 = %1157.0;
  (%1158, %1159)
}

def @func_18103() -> Tensor[(10, 4, 14), float64] {
  %1160 = @func_11779() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1160.0
}

def @func_12064(%var_12054: Tensor[(4, 11, 6), int64], %var_12055: Tensor[(4, 11, 6), int64]) -> Tensor[(4, 11, 6), int64] {
  %1161 = cast(%var_12055, dtype="int64") /* ty=Tensor[(4, 11, 6), int64] */;
  %1162 = shape_of(%var_12054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1163 = cast(%var_12054, dtype="int64") /* ty=Tensor[(4, 11, 6), int64] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  minimum(%1163, %1164) /* ty=Tensor[(4, 11, 6), int64] */
}

def @func_3771() -> Tensor[(10, 4, 14), float64] {
  %1165 = @func_2227() /* ty=Tensor[(10, 4, 14), float64] */;
  %1166 = cast(%1165, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  rsqrt(%1166) /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_15492() -> (Tensor[(3, 8, 7), float64], Tensor[(2, 7, 7), uint8], Tensor[(2, 7, 7), float64], Tensor[(10, 4, 14), uint32]) {
  %1167 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1168 = %1167.0;
  %1169 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 7, 7), float32] */, dtype="uint8") /* ty=Tensor[(2, 7, 7), uint8] */;
  %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1171 = cast(%1168, dtype="uint8") /* ty=Tensor[(2, 7, 7), uint8] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1173 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 7, 7), float32] */, dtype="float64") /* ty=Tensor[(2, 7, 7), float64] */;
  %1174 = @func_11231() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
  %1175 = @func_12046() /* ty=Tensor[(3, 8, 7), float64] */;
  %1176 = left_shift(%1171, %1172) /* ty=Tensor[(2, 7, 7), uint8] */;
  %1177 = cosh(%1173) /* ty=Tensor[(2, 7, 7), float64] */;
  %1178 = %1174.3;
  (%1175, %1176, %1177, %1178)
}

def @func_3554() -> (Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %1179 = cast(meta[relay.Constant][26] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %1180 = reshape(%1179, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %1181 = @func_2184(%1180) /* ty=Tensor[(12, 7, 13), int32] */;
  %1182 = cast(%1181, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  %1183 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1184 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1185 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1186 = @func_911() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1187 = @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1188 = @func_3417() /* ty=Tensor[(3, 8, 7), int64] */;
  %1189 = atanh(%1182) /* ty=Tensor[(12, 7, 13), float32] */;
  %1190 = %1183.0;
  %1191 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %1192 = %1184.1;
  %1193 = %1185.0;
  %1194 = %1186.0;
  %1195 = %1187.2;
  (%1188, meta[relay.Constant][26] /* ty=Tensor[(1092), float32] */, %1189, %1190, %1191, %1192, %1193, %1194, %1195)
}

def @func_19119() -> Tensor[(3, 8, 7), float32] {
  @func_2634() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_6675() -> Tensor[(3, 8, 7), float64] {
  %1196 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %1196.0
}

def @func_15912() -> (Tensor[(3, 8, 7), int64],) {
  %1197 = @func_10687() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1197,)
}

def @func_9091() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) {
  %1198 = @func_2227() /* ty=Tensor[(10, 4, 14), float64] */;
  %1199 = @func_8038() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1200 = %1199.0;
  %1201 = cast(%1200, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %1202 = shape_of(%1198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1203 = cast(%1198, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1205 = @func_3319() /* ty=Tensor[(3, 8, 7), float64] */;
  %1206 = equal(%1203, %1204) /* ty=Tensor[(10, 4, 14), bool] */;
  (%1205, %1206)
}

def @func_2459() -> Tensor[(3, 8, 7), int64] {
  @func_1015() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_1303() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %1207 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1208 = %1207.2;
  %1209 = @func_1054() /* ty=Tensor[(3, 8, 7), float32] */;
  (%1208, %1209)
}

def @func_10687() -> Tensor[(3, 8, 7), int64] {
  %1210 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %1210.1
}

def @func_15874() -> Tensor[(11, 8, 3), float64] {
  %1211 = @func_6693() /* ty=(Tensor[(11, 8, 3), float64],) */;
  %1211.0
}

def @func_12082() -> (Tensor[(10, 4, 14), float64],) {
  %1212 = @func_8234() /* ty=Tensor[(10, 4, 14), float64] */;
  (%1212,)
}

def @func_10593() -> Tensor[(10, 4, 14), bool] {
  %1213 = @func_9091() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) */;
  %1213.1
}

def @func_20153(%var_20137: Tensor[(11, 7, 8), int8], %var_20138: Tensor[(11, 7, 8), int8]) -> Tensor[(11, 7, 8), int8] {
  %1214 = cast(%var_20138, dtype="int8") /* ty=Tensor[(11, 7, 8), int8] */;
  %1215 = shape_of(%var_20137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%var_20137, dtype="int8") /* ty=Tensor[(11, 7, 8), int8] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%1216, %1217) /* ty=Tensor[(11, 7, 8), int8] */
}

def @func_6723() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1218 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1219 = %1218.2;
  %1220 = @func_2996() /* ty=Tensor[(10, 4, 14), float64] */;
  (%1219, %1220)
}

def @func_16567() -> (Tensor[(10, 4, 14), float64],) {
  %1221 = @func_12414() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %1222 = %1221.1;
  (%1222,)
}

def @func_3919() -> Tensor[(3, 8, 7), int64] {
  %1223 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1223.1
}

def @func_1181(%var_1172: Tensor[(9, 6, 11), uint32]) -> (Tensor[(9, 6, 11), bool],) {
  %1224 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 6, 11), uint32] */, dtype="bool") /* ty=Tensor[(9, 6, 11), bool] */;
  %1225 = shape_of(%var_1172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1226 = cast(%var_1172, dtype="bool") /* ty=Tensor[(9, 6, 11), bool] */;
  %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1228 = not_equal(%1226, %1227) /* ty=Tensor[(9, 6, 11), bool] */;
  (%1228,)
}

def @func_14171() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %1229 = @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1230 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1231 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1232 = %1229.0;
  %1233 = @func_8163() /* ty=Tensor[(3, 8, 7), float32] */;
  %1234 = %1230.0;
  %1235 = %1231.0;
  (%1232, %1233, %1234, %1235)
}

def @func_18724() -> Tensor[(3, 8, 7), float32] {
  @func_10828() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_13112(%var_13021: Tensor[(2016), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(2016), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(16, 14, 9), float64]) {
  %1236 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %1237 = cast(%var_13021, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1238 = reshape(%1237, newshape=[28, 72]) /* ty=Tensor[(28, 72), float64] */;
  %1239 = @func_12296(%1238) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(16, 14, 9), float64], Tensor[(28, 72), float64], Tensor[(3, 8, 7), int64]) */;
  %1240 = @func_10795() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %1241 = @func_7805() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32]) */;
  %1242 = @func_12082() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1243 = cast(%var_13021, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1244 = reshape(%1243, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %1245 = @func_3771() /* ty=Tensor[(10, 4, 14), float64] */;
  %1246 = %1236.0;
  %1247 = %1239.2;
  %1248 = %1240.0;
  %1249 = @func_3899() /* ty=Tensor[(3, 8, 7), int64] */;
  %1250 = %1241.1;
  %1251 = %1242.0;
  %1252 = @func_1399(%1244) /* ty=Tensor[(16, 14, 9), float64] */;
  (%1245, %1246, %1247, %var_13021, %1248, %1249, %1250, %1251, %1252)
}

def @func_5256() -> (Tensor[(10, 4, 14), float64],) {
  %1253 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1254 = %1253.0;
  (%1254,)
}

def @func_13482() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1255 = @func_9201() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1256 = @func_10188() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
  %1257 = @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1258 = %1255.1;
  %1259 = %1256.2;
  %1260 = %1257.0;
  (%1258, %1259, %1260)
}

def @func_11661() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  %1261 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1262 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %1263 = %1261.0;
  (%1262, %1263)
}

def @func_5472(%var_5434: Tensor[(10, 4, 14), uint32], %var_5440: Tensor[(160), float64], %var_5441: Tensor[(594), uint32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), int8], Tensor[(3, 8, 7), int64], Tensor[(160), float64], Tensor[(594), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %1264 = @func_4003() /* ty=Tensor[(3, 8, 7), int64] */;
  %1265 = cast(%1264, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
  %1266 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1267 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1268 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1269 = %1268.2;
  %1270 = cast(%var_5434, dtype="int8") /* ty=Tensor[(10, 4, 14), int8] */;
  %1271 = shape_of(%1269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1272 = cast(%1269, dtype="int8") /* ty=Tensor[(10, 4, 14), int8] */;
  %1273 = dyn.reshape(%1270, %1271, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1274 = cast(%var_5440, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1275 = cast(%var_5441, dtype="uint32") /* ty=Tensor[(594), uint32] */;
  %1276 = cast(%var_5440, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1277 = reshape(%1274, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
  %1278 = reshape(%1275, newshape=[594]) /* ty=Tensor[(594), uint32] */;
  %1279 = reshape(%1276, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
  %1280 = @func_3675(%1277, %1278, %1279) /* ty=(Tensor[(9, 6, 11), bool], Tensor[(594), uint32], Tensor[(10, 4, 14), float64], Tensor[(4, 5, 8), int64], Tensor[(3, 8, 7), int64]) */;
  %1281 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1282 = erf(%1265) /* ty=Tensor[(3, 8, 7), float32] */;
  %1283 = @func_3899() /* ty=Tensor[(3, 8, 7), int64] */;
  %1284 = @func_2227() /* ty=Tensor[(10, 4, 14), float64] */;
  %1285 = %1266.0;
  %1286 = %1267.0;
  %1287 = maximum(%1272, %1273) /* ty=Tensor[(10, 4, 14), int8] */;
  %1288 = %1280.4;
  %1289 = %1281.0;
  %1290 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
  (%1282, %1283, %1284, %1285, %1286, %1287, %1288, %var_5440, %var_5441, %1289, %1290)
}

def @func_8234() -> Tensor[(10, 4, 14), float64] {
  %1291 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1291.0
}

def @func_18060(%var_18053: Tensor[(10, 7, 14), int16]) -> (Tensor[(10, 7, 14), int16],) {
  %1292 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 7, 14), int16] */, dtype="int16") /* ty=Tensor[(10, 7, 14), int16] */;
  %1293 = shape_of(%var_18053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1294 = cast(%var_18053, dtype="int16") /* ty=Tensor[(10, 7, 14), int16] */;
  %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1296 = bitwise_or(%1294, %1295) /* ty=Tensor[(10, 7, 14), int16] */;
  (%1296,)
}

def @func_19727() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) {
  %1297 = @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1298 = @func_14695() /* ty=(Tensor[(3, 6, 6), float32],) */;
  %1299 = %1297.1;
  %1300 = @func_16306() /* ty=Tensor[(3, 8, 7), float32] */;
  %1301 = %1298.0;
  (%1299, %1300, %1301)
}

def @func_14375() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
  %1302 = @func_12423() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %1303 = %1302.0;
  %1304 = @func_5617() /* ty=Tensor[(3, 8, 7), float64] */;
  (%1303, %1304)
}

def @func_15113() -> (Tensor[(3, 8, 7), float64],) {
  %1305 = @func_9201() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1306 = %1305.0;
  (%1306,)
}

def @func_6633(%var_6622: Tensor[(13, 6, 16), int16], %var_6623: Tensor[(13, 6, 16), int16]) -> (Tensor[(13, 6, 16), int16], Tensor[(3, 8, 7), int64]) {
  %1307 = cast(%var_6623, dtype="int16") /* ty=Tensor[(13, 6, 16), int16] */;
  %1308 = shape_of(%var_6622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1309 = cast(%var_6622, dtype="int16") /* ty=Tensor[(13, 6, 16), int16] */;
  %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1311 = @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %1312 = subtract(%1309, %1310) /* ty=Tensor[(13, 6, 16), int16] */;
  %1313 = %1311.0;
  (%1312, %1313)
}

def @func_9701() -> (Tensor[(3, 8, 7), int64],) {
  %1314 = @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1315 = %1314.0;
  (%1315,)
}

def @func_4393() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) {
  %1316 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1317 = %1316.0;
  %1318 = cast(%1317, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %1319 = cos(%1318) /* ty=Tensor[(10, 4, 14), float32] */;
  %1320 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1319, %1320)
}

def @func_12423() -> (Tensor[(3, 8, 7), float32],) {
  %1321 = @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %1322 = %1321.0;
  (%1322,)
}

def @func_18736() -> Tensor[(10, 4, 14), float64] {
  %1323 = @func_9817() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %1323.0
}

def @func_6104() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1324 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1325 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1326 = %1324.1;
  %1327 = %1325.1;
  (%1326, %1327)
}

def @func_4201(%var_4192: Tensor[(2016), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) {
  %1328 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1329 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1330 = cast(%var_4192, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %1331 = reshape(%1330, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %1332 = %1328.3;
  %1333 = %1329.0;
  %1334 = @func_1399(%1331) /* ty=Tensor[(16, 14, 9), float64] */;
  (%1332, %1333, %1334, %var_4192)
}

def @func_16266() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1335 = @func_7896() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
  %1336 = @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %1337 = %1335.1;
  %1338 = %1336.1;
  (%1337, %1338)
}

def @func_5980() -> (Tensor[(10, 4, 14), uint32],) {
  %1339 = @func_4897() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) */;
  %1340 = %1339.0;
  (%1340,)
}

def @func_17015(%var_16987: Tensor[(15, 6, 11), uint8], %var_16988: Tensor[(15, 6, 11), uint8]) -> (Tensor[(15, 6, 11), uint8],) {
  %1341 = cast(%var_16988, dtype="uint8") /* ty=Tensor[(15, 6, 11), uint8] */;
  %1342 = shape_of(%var_16987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1343 = cast(%var_16987, dtype="uint8") /* ty=Tensor[(15, 6, 11), uint8] */;
  %1344 = dyn.reshape(%1341, %1342, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1345 = bitwise_and(%1343, %1344) /* ty=Tensor[(15, 6, 11), uint8] */;
  (%1345,)
}

def @func_14467() -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %1346 = @func_7124() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
  %1347 = @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1348 = %1346.1;
  %1349 = %1347.1;
  %1350 = @func_5272() /* ty=Tensor[(10, 4, 14), float64] */;
  (%1348, %1349, %1350)
}

def @func_15641(%var_15618: Tensor[(13, 1, 14), uint8], %var_15619: Tensor[(13, 14, 14), uint8], %var_15624: Tensor[(840), float64]) -> (Tensor[(13, 14, 14), uint8], Tensor[(12, 14, 5), float64], Tensor[(840), float64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1351 = cast(%var_15618, dtype="uint8") /* ty=Tensor[(13, 1, 14), uint8] */;
  %1352 = cast(%var_15619, dtype="uint8") /* ty=Tensor[(13, 14, 14), uint8] */;
  %1353 = cast(%var_15624, dtype="float64") /* ty=Tensor[(840), float64] */;
  %1354 = reshape(%1353, newshape=[12, 14, 5]) /* ty=Tensor[(12, 14, 5), float64] */;
  %1355 = @func_12414() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %1356 = left_shift(%1351, %1352) /* ty=Tensor[(13, 14, 14), uint8] */;
  %1357 = @func_13757(%1354) /* ty=Tensor[(12, 14, 5), float64] */;
  %1358 = @func_14252() /* ty=Tensor[(10, 4, 14), float64] */;
  %1359 = %1355.1;
  (%1356, %1357, %var_15624, %1358, %1359)
}

def @func_3341() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  %1360 = @func_1303() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
  %1361 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1362 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
  %1363 = %1360.1;
  %1364 = %1361.0;
  (%1362, %1363, %1364)
}

def @func_7030(%var_7016: Tensor[(10, 4, 14), float64]) -> Tensor[(10, 4, 14), float32] {
  %1365 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
  %1366 = cast(%var_7016, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %1367 = shape_of(%1365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1368 = cast(%1365, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %1369 = dyn.reshape(%1366, %1367, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1368, %1369) /* ty=Tensor[(10, 4, 14), float32] */
}

def @func_4281() -> (Tensor[(10, 4, 14), float64],) {
  %1370 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1371 = %1370.0;
  (%1371,)
}

def @func_14762() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %1372 = @func_13363() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %1373 = @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1374 = @func_4081() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %1375 = %1372.2;
  %1376 = %1373.2;
  %1377 = %1374.0;
  (%1375, %1376, %1377)
}

def @func_14070() -> Tensor[(3, 6, 6), float32] {
  %1378 = @func_5299() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) */;
  %1378.1
}

def @func_3063(%var_3050: Tensor[(15, 15, 14), float32]) -> (Tensor[(15, 15, 14), float32], Tensor[(3, 8, 7), float32]) {
  %1379 = cast(%var_3050, dtype="float32") /* ty=Tensor[(15, 15, 14), float32] */;
  %1380 = sigmoid(%1379) /* ty=Tensor[(15, 15, 14), float32] */;
  %1381 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  (%1380, %1381)
}

def @func_4522() -> (Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) {
  %1382 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1383 = @func_1610() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */;
  %1384 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1385 = %1382.0;
  %1386 = %1383.0;
  %1387 = %1384.0;
  (%1385, %1386, %1387)
}

def @func_3413() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) {
  %1388 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %1389 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1390 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1391 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
  %1392 = %1388.1;
  %1393 = %1389.3;
  %1394 = %1390.0;
  (%1391, %1392, %1393, %1394)
}

def @func_8038() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %1395 = @func_7252() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1396 = %1395.0;
  %1397 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1396, %1397)
}

def @func_18139() -> (Tensor[(10, 4, 14), float64],) {
  %1398 = @func_7936() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1399 = %1398.0;
  (%1399,)
}

def @func_16089() -> Tensor[(3, 8, 7), float64] {
  %1400 = @func_10427() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %1400.1
}

def @func_18921() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %1401 = @func_15714() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1402 = @func_12519() /* ty=Tensor[(10, 4, 14), float64] */;
  %1403 = %1401.0;
  %1404 = @func_13314() /* ty=Tensor[(3, 8, 7), float32] */;
  (%1402, %1403, %1404)
}

def @func_10331() -> Tensor[(10, 4, 14), float64] {
  %1405 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1405.0
}

def @func_4967() -> (Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) {
  %1406 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %1407 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1408 = %1407.0;
  %1409 = cast(%1408, dtype="bool") /* ty=Tensor[(3, 8, 7), bool] */;
  %1410 = shape_of(%1406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1411 = cast(%1406, dtype="bool") /* ty=Tensor[(3, 8, 7), bool] */;
  %1412 = dyn.reshape(%1409, %1410, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1413 = @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1414 = greater_equal(%1411, %1412) /* ty=Tensor[(3, 8, 7), bool] */;
  %1415 = %1413.0;
  (%1414, %1415)
}

def @func_20517() -> Tensor[(4, 5, 9), float32] {
  %1416 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 5, 9), float32] */;
  sinh(%1416) /* ty=Tensor[(4, 5, 9), float32] */
}

def @func_947() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %1417 = @func_911() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1418 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1419 = %1417.0;
  %1420 = %1418.0;
  (%1419, %1420)
}

def @func_18327(%var_18321: Tensor[(14, 4, 13), float64]) -> (Tensor[(14, 4, 13), float64], Tensor[(14, 4, 13), float32]) {
  %1421 = cast(%var_18321, dtype="float64") /* ty=Tensor[(14, 4, 13), float64] */;
  %1422 = cast(%var_18321, dtype="float32") /* ty=Tensor[(14, 4, 13), float32] */;
  %1423 = rsqrt(%1421) /* ty=Tensor[(14, 4, 13), float64] */;
  %1424 = acosh(%1422) /* ty=Tensor[(14, 4, 13), float32] */;
  (%1423, %1424)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11232() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) {
  %6 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) {
    %0 = @func_911() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %1 = @func_7471() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */;
    %2 = %0.0;
    %3 = %1.0;
    %4 = @func_8120() /* ty=Tensor[(3, 8, 7), int64] */;
    %5 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
    (%2, %3, %4, %5)
  };
  %6() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */
}

def @func_5910() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  @func_5908() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */
}

def @func_10725() -> (Tensor[(10, 4, 14), float32],) {
  @func_10723() /* ty=(Tensor[(10, 4, 14), float32],) */
}

def @func_12850() -> Tensor[(3, 8, 7), int64] {
  @func_12848() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_4013() -> (Tensor[(3, 6, 6), float32],) {
  @func_4011() /* ty=(Tensor[(3, 6, 6), float32],) */
}

def @func_19846() -> Tensor[(3, 8, 7), int64] {
  %8 = fn () -> Tensor[(3, 8, 7), int64] {
    %7 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %7.0
  };
  %8() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_7260() -> (Tensor[(11, 8, 3), float64],) {
  %11 = fn () -> (Tensor[(11, 8, 3), float64],) {
    %9 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
    %10 = %9.0;
    (%10,)
  };
  %11() /* ty=(Tensor[(11, 8, 3), float64],) */
}

def @func_1533() -> (Tensor[(3, 8, 7), int64],) {
  @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_4011() -> (Tensor[(3, 6, 6), float32],) {
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 6, 6), float32] */, dtype="float32") /* ty=Tensor[(3, 6, 6), float32] */;
  %13 = atanh(%12) /* ty=Tensor[(3, 6, 6), float32] */;
  (%13,)
}

def @func_19953() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64]) {
  %17 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64]) {
    %14 = @func_19906() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
    %15 = %14.1;
    %16 = @func_12046() /* ty=Tensor[(3, 8, 7), float64] */;
    (%15, %16)
  };
  %17() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64]) */
}

def @func_14577() -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) {
  %18 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %19 = @func_12414() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %20 = %18.0;
  %21 = %19.0;
  (%20, %21)
}

def @func_12621() -> (Tensor[(10, 4, 14), float64],) {
  %24 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %22 = @func_8886() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %23 = %22.0;
    (%23,)
  };
  %24() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_10593() -> Tensor[(10, 4, 14), bool] {
  %25 = @func_9091() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) */;
  %25.1
}

def @func_19454() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %30 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
    %26 = @func_11536() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
    %27 = @func_4739() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
    %28 = %26.1;
    %29 = %27.0;
    (%28, %29)
  };
  %30() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_4523() -> (Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) {
  %37 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) {
    %31 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %32 = @func_1610() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */;
    %33 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %34 = %31.0;
    %35 = %32.0;
    %36 = %33.0;
    (%34, %35, %36)
  };
  %37() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_20270() -> (Tensor[(10, 4, 14), float64],) {
  @func_20268() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_2700() -> (Tensor[(2, 7, 7), float32],) {
  @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */
}

def @func_5619() -> Tensor[(3, 8, 7), float64] {
  @func_5617() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_1100() -> Tensor[(10, 4, 14), uint32] {
  %38 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %39 = %38.0;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 4, 14), float64] */, dtype="uint32") /* ty=Tensor[(10, 4, 14), uint32] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="uint32") /* ty=Tensor[(10, 4, 14), uint32] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%42, %43) /* ty=Tensor[(10, 4, 14), uint32] */
}

def @func_14017(%var_14016: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), int8], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32]) {
  %53 = fn (%var_13981: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), int8], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32]) {
    %44 = cast(%var_13981, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
    %45 = exp(%44) /* ty=Tensor[(16, 3, 12), float64] */;
    %46 = cast(%45, dtype="int8") /* ty=Tensor[(16, 3, 12), int8] */;
    %47 = shape_of(%var_13981, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%var_13981, dtype="int8") /* ty=Tensor[(16, 3, 12), int8] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %50 = right_shift(%48, %49) /* ty=Tensor[(16, 3, 12), int8] */;
    %51 = @func_7299() /* ty=Tensor[(3, 8, 7), float64] */;
    %52 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
    (%50, %51, %52)
  };
  %53(%var_14016) /* ty=(Tensor[(16, 3, 12), int8], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32]) */
}

def @func_4249() -> (Tensor[(3, 8, 7), float64],) {
  %54 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %55 = %54.0;
  (%55,)
}

def @func_4178() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %64 = fn () -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
    %56 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
    %57 = cast(%56, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
    %58 = @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %59 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %60 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
    %61 = atan(%57) /* ty=Tensor[(3, 8, 7), float64] */;
    %62 = %58.2;
    %63 = %59.0;
    (%60, %61, %62, %63)
  };
  %64() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */
}

def @func_14203() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  @func_14201() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_3815() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %69 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
    %65 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %66 = @func_911() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %67 = %65.0;
    %68 = %66.1;
    (%67, %68)
  };
  %69() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_8164() -> Tensor[(3, 8, 7), float32] {
  %70 = fn () -> Tensor[(3, 8, 7), float32] {
    @func_5793() /* ty=Tensor[(3, 8, 7), float32] */
  };
  %70() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_4929() -> (Tensor[(3, 8, 7), int64],) {
  @func_4927() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_5476(%var_5473: Tensor[(10, 4, 14), uint32], %var_5474: Tensor[(160), float64], %var_5475: Tensor[(594), uint32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), int8], Tensor[(3, 8, 7), int64], Tensor[(160), float64], Tensor[(594), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %98 = fn (%var_5434: Tensor[(10, 4, 14), uint32], %var_5440: Tensor[(160), float64], %var_5441: Tensor[(594), uint32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), int8], Tensor[(3, 8, 7), int64], Tensor[(160), float64], Tensor[(594), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
    %71 = @func_4003() /* ty=Tensor[(3, 8, 7), int64] */;
    %72 = cast(%71, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
    %73 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %74 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %75 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %76 = %75.2;
    %77 = cast(%var_5434, dtype="int8") /* ty=Tensor[(10, 4, 14), int8] */;
    %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
    %79 = cast(%76, dtype="int8") /* ty=Tensor[(10, 4, 14), int8] */;
    %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %81 = cast(%var_5440, dtype="float64") /* ty=Tensor[(160), float64] */;
    %82 = cast(%var_5441, dtype="uint32") /* ty=Tensor[(594), uint32] */;
    %83 = cast(%var_5440, dtype="float64") /* ty=Tensor[(160), float64] */;
    %84 = reshape(%81, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
    %85 = reshape(%82, newshape=[594]) /* ty=Tensor[(594), uint32] */;
    %86 = reshape(%83, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
    %87 = @func_3675(%84, %85, %86) /* ty=(Tensor[(9, 6, 11), bool], Tensor[(594), uint32], Tensor[(10, 4, 14), float64], Tensor[(4, 5, 8), int64], Tensor[(3, 8, 7), int64]) */;
    %88 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %89 = erf(%72) /* ty=Tensor[(3, 8, 7), float32] */;
    %90 = @func_3899() /* ty=Tensor[(3, 8, 7), int64] */;
    %91 = @func_2227() /* ty=Tensor[(10, 4, 14), float64] */;
    %92 = %73.0;
    %93 = %74.0;
    %94 = maximum(%79, %80) /* ty=Tensor[(10, 4, 14), int8] */;
    %95 = %87.4;
    %96 = %88.0;
    %97 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
    (%89, %90, %91, %92, %93, %94, %95, %var_5440, %var_5441, %96, %97)
  };
  %98(%var_5473, %var_5474, %var_5475) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), int8], Tensor[(3, 8, 7), int64], Tensor[(160), float64], Tensor[(594), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */
}

def @func_6106() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_6104() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_13315() -> Tensor[(3, 8, 7), float32] {
  %99 = fn () -> Tensor[(3, 8, 7), float32] {
    @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
  };
  %99() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_20073() -> Tensor[(3, 8, 7), int64] {
  @func_20071() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_6615() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) {
  %105 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) {
    %100 = @func_3413() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */;
    %101 = @func_2581() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %102 = %100.3;
    %103 = %101.0;
    %104 = @func_5334() /* ty=Tensor[(2, 7, 7), float32] */;
    (%102, %103, %104)
  };
  %105() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) */
}

def @func_20352() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %106 = @func_15213() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %107 = @func_16594() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %108 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %109 = @func_16346() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %110 = %106.2;
  %111 = %107.0;
  %112 = %108.0;
  %113 = %109.2;
  (%110, %111, %112, %113)
}

def @func_1954() -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) {
  %118 = fn () -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) {
    %114 = @func_1610() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */;
    %115 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %116 = %114.0;
    %117 = %115.0;
    (%116, %117)
  };
  %118() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_9819() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  @func_9817() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_1531() -> (Tensor[(3, 8, 7), int64],) {
  %119 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %120 = %119.0;
  (%120,)
}

def @func_5980() -> (Tensor[(10, 4, 14), uint32],) {
  %121 = @func_4897() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) */;
  %122 = %121.0;
  (%122,)
}

def @func_14172() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %130 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
    %123 = @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %124 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %125 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
    %126 = %123.0;
    %127 = @func_8163() /* ty=Tensor[(3, 8, 7), float32] */;
    %128 = %124.0;
    %129 = %125.0;
    (%126, %127, %128, %129)
  };
  %130() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */
}

def @func_13891() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(5, 4, 2), float64], Tensor[(40), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), bool]) {
  %140 = fn () -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(5, 4, 2), float64], Tensor[(40), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), bool]) {
    %131 = @func_9893() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %132 = cast(meta[relay.Constant][2] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %133 = reshape(%132, newshape=[5, 4, 2]) /* ty=Tensor[(5, 4, 2), float64] */;
    %134 = @func_9575(%133) /* ty=(Tensor[(5, 4, 2), float64],) */;
    %135 = @func_1054() /* ty=Tensor[(3, 8, 7), float32] */;
    %136 = %131.0;
    %137 = %134.0;
    %138 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
    %139 = @func_10593() /* ty=Tensor[(10, 4, 14), bool] */;
    (%135, %136, %137, meta[relay.Constant][2] /* ty=Tensor[(40), float64] */, %138, %139)
  };
  %140() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(5, 4, 2), float64], Tensor[(40), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), bool]) */
}

def @func_17479(%var_17476: Tensor[(576), float64]) -> (Tensor[(11, 8, 3), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), float64], Tensor[(576), float64]) {
  %141 = @func_6693() /* ty=(Tensor[(11, 8, 3), float64],) */;
  %142 = @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */;
  %143 = cast(%var_17476, dtype="float64") /* ty=Tensor[(576), float64] */;
  %144 = reshape(%143, newshape=[16, 3, 12]) /* ty=Tensor[(16, 3, 12), float64] */;
  %145 = @func_14015(%144) /* ty=(Tensor[(16, 3, 12), int8], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32]) */;
  %146 = %141.0;
  %147 = %142.0;
  %148 = %145.1;
  (%146, %147, %148, %var_17476)
}

def @func_14070() -> Tensor[(3, 6, 6), float32] {
  %149 = @func_5299() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) */;
  %149.1
}

def @func_7936() -> (Tensor[(10, 4, 14), float64],) {
  %150 = @func_3796() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %151 = %150.2;
  (%151,)
}

def @func_12082() -> (Tensor[(10, 4, 14), float64],) {
  %152 = @func_8234() /* ty=Tensor[(10, 4, 14), float64] */;
  (%152,)
}

def @func_15714() -> (Tensor[(10, 4, 14), float64],) {
  %153 = @func_3771() /* ty=Tensor[(10, 4, 14), float64] */;
  (%153,)
}

def @func_3850() -> (Tensor[(3, 8, 7), int64],) {
  @func_3848() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_18172() -> Tensor[(3, 8, 7), int64] {
  %154 = @func_16630() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %154.0
}

def @func_2945() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %155 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %156 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %157 = %155.0;
  %158 = %156.4;
  (%157, %158)
}

def @func_18923() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  @func_18921() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */
}

def @func_5301() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) {
  @func_5299() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) */
}

def @func_6515(%var_6514: Tensor[(40), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(2, 5, 4), float64], Tensor[(40), float64]) {
  %167 = fn (%var_6502: Tensor[(40), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(2, 5, 4), float64], Tensor[(40), float64]) {
    %159 = @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %160 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %161 = cast(%var_6502, dtype="float64") /* ty=Tensor[(40), float64] */;
    %162 = reshape(%161, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float64] */;
    %163 = @func_4561(%162) /* ty=(Tensor[(2, 5, 4), float64],) */;
    %164 = %159.0;
    %165 = %160.2;
    %166 = %163.0;
    (%164, %165, %166, %var_6502)
  };
  %167(%var_6514) /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(2, 5, 4), float64], Tensor[(40), float64]) */
}

def @func_14376() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
  %171 = fn () -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
    %168 = @func_12423() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %169 = %168.0;
    %170 = @func_5617() /* ty=Tensor[(3, 8, 7), float64] */;
    (%169, %170)
  };
  %171() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */
}

def @func_6637(%var_6635: Tensor[(13, 6, 16), int16], %var_6636: Tensor[(13, 6, 16), int16]) -> (Tensor[(13, 6, 16), int16], Tensor[(3, 8, 7), int64]) {
  @func_6633(%var_6635, %var_6636) /* ty=(Tensor[(13, 6, 16), int16], Tensor[(3, 8, 7), int64]) */
}

def @func_18060(%var_18053: Tensor[(10, 7, 14), int16]) -> (Tensor[(10, 7, 14), int16],) {
  %172 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 7, 14), int16] */, dtype="int16") /* ty=Tensor[(10, 7, 14), int16] */;
  %173 = shape_of(%var_18053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_18053, dtype="int16") /* ty=Tensor[(10, 7, 14), int16] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %176 = bitwise_or(%174, %175) /* ty=Tensor[(10, 7, 14), int16] */;
  (%176,)
}

def @func_9895() -> (Tensor[(3, 8, 7), int64],) {
  @func_9893() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_8101() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %183 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
    %177 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %178 = @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %179 = @func_3554() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %180 = %177.3;
    %181 = %178.0;
    %182 = %179.8;
    (%180, %181, %182)
  };
  %183() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_6417() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_18139() -> (Tensor[(10, 4, 14), float64],) {
  %184 = @func_7936() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %185 = %184.0;
  (%185,)
}

def @func_13153() -> (Tensor[(2, 7, 7), uint64], Tensor[(3, 8, 7), int64]) {
  %186 = @func_6614() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) */;
  %187 = %186.2;
  %188 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 7, 7), float32] */, dtype="uint64") /* ty=Tensor[(2, 7, 7), uint64] */;
  %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%187, dtype="uint64") /* ty=Tensor[(2, 7, 7), uint64] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %192 = @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %193 = subtract(%190, %191) /* ty=Tensor[(2, 7, 7), uint64] */;
  %194 = %192.0;
  (%193, %194)
}

def @func_2802(%var_2800: int8, %var_2801: Tensor[(13, 11, 5), int8]) -> (Tensor[(13, 11, 5), int8], Tensor[(13, 11, 5), int8], Tensor[(10, 4, 14), float64]) {
  %203 = fn (%var_2784: int8, %var_2785: Tensor[(13, 11, 5), int8]) -> (Tensor[(13, 11, 5), int8], Tensor[(13, 11, 5), int8], Tensor[(10, 4, 14), float64]) {
    %195 = cast(%var_2784, dtype="int8") /* ty=int8 */;
    %196 = cast(%var_2785, dtype="int8") /* ty=Tensor[(13, 11, 5), int8] */;
    %197 = cast(%var_2784, dtype="int8") /* ty=int8 */;
    %198 = cast(%var_2785, dtype="int8") /* ty=Tensor[(13, 11, 5), int8] */;
    %199 = @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %200 = multiply(%195, %196) /* ty=Tensor[(13, 11, 5), int8] */;
    %201 = logical_xor(%197, %198) /* ty=Tensor[(13, 11, 5), int8] */;
    %202 = %199.0;
    (%200, %201, %202)
  };
  %203(%var_2800, %var_2801) /* ty=(Tensor[(13, 11, 5), int8], Tensor[(13, 11, 5), int8], Tensor[(10, 4, 14), float64]) */
}

def @func_2142() -> (Tensor[(10, 4, 14), float64],) {
  @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_3592() -> Tensor[(3, 8, 7), float32] {
  @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_13364() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
  %209 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
    %204 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %205 = @func_7896() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
    %206 = %204.0;
    %207 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
    %208 = %205.0;
    (%206, %207, %208)
  };
  %209() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */
}

def @func_7805() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32]) {
  %210 = @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %211 = @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %212 = %210.0;
  %213 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  %214 = %211.2;
  (%212, %213, %214)
}

def @func_18480() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 6, 6), float32]) {
  %218 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 6, 6), float32]) {
    %215 = @func_12414() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %216 = %215.1;
    %217 = @func_14070() /* ty=Tensor[(3, 6, 6), float32] */;
    (%216, %217)
  };
  %218() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 6, 6), float32]) */
}

def @func_3556() -> (Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  @func_3554() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_7807() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32]) {
  @func_7805() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32]) */
}

def @func_20290(%var_20288: Tensor[(15, 16, 14), int64], %var_20289: Tensor[(15, 16, 14), int64]) -> Tensor[(15, 16, 14), int64] {
  %223 = fn (%var_20279: Tensor[(15, 16, 14), int64], %var_20280: Tensor[(15, 16, 14), int64]) -> Tensor[(15, 16, 14), int64] {
    %219 = cast(%var_20280, dtype="int64") /* ty=Tensor[(15, 16, 14), int64] */;
    %220 = shape_of(%var_20279, dtype="int32") /* ty=Tensor[(3), int32] */;
    %221 = cast(%var_20279, dtype="int64") /* ty=Tensor[(15, 16, 14), int64] */;
    %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    right_shift(%221, %222) /* ty=Tensor[(15, 16, 14), int64] */
  };
  %223(%var_20288, %var_20289) /* ty=Tensor[(15, 16, 14), int64] */
}

def @func_4792(%var_4790: Tensor[(3, 3, 10), float64]) -> Tensor[(3, 3, 10), float64] {
  @func_4789(%var_4790) /* ty=Tensor[(3, 3, 10), float64] */
}

def @func_1402(%var_1400: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float64] {
  @func_1399(%var_1400) /* ty=Tensor[(16, 14, 9), float64] */
}

def @func_16383() -> (Tensor[(3, 8, 7), float32], Tensor[(2, 7, 7), float32]) {
  %224 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %225 = @func_5334() /* ty=Tensor[(2, 7, 7), float32] */;
  (%224, %225)
}

def @func_2635() -> Tensor[(3, 8, 7), float32] {
  %226 = fn () -> Tensor[(3, 8, 7), float32] {
    @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
  };
  %226() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_8469(%var_8466: Tensor[(5, 6, 4), float64]) -> (Tensor[(5, 6, 4), float64],) {
  %227 = cast(%var_8466, dtype="float64") /* ty=Tensor[(5, 6, 4), float64] */;
  %228 = cosh(%227) /* ty=Tensor[(5, 6, 4), float64] */;
  (%228,)
}

def @func_4251() -> (Tensor[(3, 8, 7), float64],) {
  @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */
}

def @func_930() -> (Tensor[(3, 8, 7), int64],) {
  %231 = fn () -> (Tensor[(3, 8, 7), int64],) {
    %229 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %230 = %229.5;
    (%230,)
  };
  %231() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_5102() -> (Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64]) {
  %238 = fn () -> (Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64]) {
    %232 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %233 = %232.3;
    %234 = cast(%233, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
    %235 = @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %236 = asin(%234) /* ty=Tensor[(10, 4, 14), float32] */;
    %237 = %235.1;
    (%236, %237)
  };
  %238() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64]) */
}

def @func_15550() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) {
  %239 = @func_12423() /* ty=(Tensor[(3, 8, 7), float32],) */;
  %240 = @func_5793() /* ty=Tensor[(3, 8, 7), float32] */;
  %241 = @func_12778() /* ty=Tensor[(3, 8, 7), int64] */;
  %242 = %239.0;
  (%240, %241, %242)
}

def @func_17535() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %243 = @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %244 = @func_8234() /* ty=Tensor[(10, 4, 14), float64] */;
  %245 = %243.0;
  (%244, %245)
}

def @func_19654() -> Tensor[(3, 8, 7), int64] {
  @func_19652() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_11724(%var_11722: Tensor[(3, 15, 8), uint8], %var_11723: Tensor[(3, 15, 8), uint8]) -> Tensor[(3, 15, 8), uint8] {
  @func_11720(%var_11722, %var_11723) /* ty=Tensor[(3, 15, 8), uint8] */
}

def @func_9893() -> (Tensor[(3, 8, 7), int64],) {
  %246 = @func_2459() /* ty=Tensor[(3, 8, 7), int64] */;
  (%246,)
}

def @func_5982() -> (Tensor[(10, 4, 14), uint32],) {
  @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */
}

def @func_7070() -> (Tensor[(3, 8, 7), int64],) {
  @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_14696() -> (Tensor[(3, 6, 6), float32],) {
  %249 = fn () -> (Tensor[(3, 6, 6), float32],) {
    %247 = @func_5299() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) */;
    %248 = %247.1;
    (%248,)
  };
  %249() /* ty=(Tensor[(3, 6, 6), float32],) */
}

def @func_17431() -> Tensor[(3, 6, 6), float32] {
  @func_17429() /* ty=Tensor[(3, 6, 6), float32] */
}

def @func_18567() -> Tensor[(10, 4, 14), float64] {
  @func_18565() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_13215(%var_13213: Tensor[(40), float64], %var_13214: Tensor[(120), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(2, 5, 4), float64], Tensor[(40), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(5, 6, 4), float64], Tensor[(120), float64], Tensor[(10, 4, 14), float64]) {
  %266 = fn (%var_13175: Tensor[(40), float64], %var_13196: Tensor[(120), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(2, 5, 4), float64], Tensor[(40), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(5, 6, 4), float64], Tensor[(120), float64], Tensor[(10, 4, 14), float64]) {
    %250 = @func_6614() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) */;
    %251 = cast(%var_13175, dtype="float64") /* ty=Tensor[(40), float64] */;
    %252 = reshape(%251, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float64] */;
    %253 = @func_4561(%252) /* ty=(Tensor[(2, 5, 4), float64],) */;
    %254 = cast(meta[relay.Constant][5] /* ty=Tensor[(66, 9), uint32] */, dtype="uint32") /* ty=Tensor[(66, 9), uint32] */;
    %255 = reshape(%254, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), uint32] */;
    %256 = @func_1181(%255) /* ty=(Tensor[(9, 6, 11), bool],) */;
    %257 = cast(%var_13196, dtype="float64") /* ty=Tensor[(120), float64] */;
    %258 = reshape(%257, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
    %259 = @func_8469(%258) /* ty=(Tensor[(5, 6, 4), float64],) */;
    %260 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %261 = %250.1;
    %262 = %253.0;
    %263 = %256.0;
    %264 = %259.0;
    %265 = %260.0;
    (%261, %262, %var_13175, %263, meta[relay.Constant][5] /* ty=Tensor[(66, 9), uint32] */, %264, %var_13196, %265)
  };
  %266(%var_13213, %var_13214) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 5, 4), float64], Tensor[(40), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(5, 6, 4), float64], Tensor[(120), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_15414() -> (Tensor[(3, 8, 7), int64],) {
  %267 = @func_11342() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %268 = %267.0;
  (%268,)
}

def @func_12068(%var_12066: Tensor[(4, 11, 6), int64], %var_12067: Tensor[(4, 11, 6), int64]) -> Tensor[(4, 11, 6), int64] {
  @func_12064(%var_12066, %var_12067) /* ty=Tensor[(4, 11, 6), int64] */
}

def @func_4968() -> (Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) {
  %279 = fn () -> (Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) {
    %269 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
    %270 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %271 = %270.0;
    %272 = cast(%271, dtype="bool") /* ty=Tensor[(3, 8, 7), bool] */;
    %273 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
    %274 = cast(%269, dtype="bool") /* ty=Tensor[(3, 8, 7), bool] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %276 = @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %277 = greater_equal(%274, %275) /* ty=Tensor[(3, 8, 7), bool] */;
    %278 = %276.0;
    (%277, %278)
  };
  %279() /* ty=(Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) */
}

def @func_13697() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) {
  %280 = @func_5101() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64]) */;
  %281 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %282 = @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %283 = @func_2676() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */;
  %284 = %280.0;
  %285 = %281.1;
  %286 = %282.0;
  %287 = %283.1;
  (%284, %285, %286, %287)
}

def @func_9201() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %288 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %289 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %290 = %288.0;
  %291 = @func_7299() /* ty=Tensor[(3, 8, 7), float64] */;
  %292 = %289.0;
  (%290, %291, %292)
}

def @func_3899() -> Tensor[(3, 8, 7), int64] {
  %293 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %293.0
}

def @func_1382() -> (Tensor[(10, 4, 14), float64],) {
  @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_17537() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  @func_17535() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_9126() -> Tensor[(3, 8, 7), int64] {
  %294 = fn () -> Tensor[(3, 8, 7), int64] {
    @func_3919() /* ty=Tensor[(3, 8, 7), int64] */
  };
  %294() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_1494() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %295 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %296 = %295.0;
  %297 = cast(%296, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %298 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %299 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %300 = cosh(%297) /* ty=Tensor[(3, 8, 7), float64] */;
  %301 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %302 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  %303 = %298.0;
  (%299, %300, %301, %302, %303)
}

def @func_10687() -> Tensor[(3, 8, 7), int64] {
  %304 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %304.1
}

def @func_497(%var_475: Tensor[(10, 4, 14), bool]) -> (Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) {
  %305 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %306 = cast(%var_475, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %307 = cast(%var_475, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  %308 = logical_or(%305, %306) /* ty=Tensor[(10, 4, 14), bool] */;
  %309 = sigmoid(%307) /* ty=Tensor[(10, 4, 14), float64] */;
  (%308, %309)
}

def @func_19346() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %310 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %311 = @func_17740() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %312 = %310.0;
  %313 = %311.0;
  (%312, %313)
}

def @func_2534(%var_2510: Tensor[(12, 10, 16), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(12, 10, 16), float32], Tensor[(10, 4, 14), float64]) {
  %314 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %315 = cast(%var_2510, dtype="float64") /* ty=Tensor[(12, 10, 16), float64] */;
  %316 = sqrt(%315) /* ty=Tensor[(12, 10, 16), float64] */;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(12, 10, 16), float32] */;
  %318 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %319 = %314.0;
  %320 = acosh(%317) /* ty=Tensor[(12, 10, 16), float32] */;
  %321 = %318.0;
  (%319, %320, %321)
}

def @func_16192() -> Tensor[(3, 8, 7), int64] {
  @func_16190() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_16385() -> (Tensor[(3, 8, 7), float32], Tensor[(2, 7, 7), float32]) {
  @func_16383() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(2, 7, 7), float32]) */
}

def @func_19652() -> Tensor[(3, 8, 7), int64] {
  %322 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %322.0
}

def @func_8038() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %323 = @func_7252() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %324 = %323.0;
  %325 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  (%324, %325)
}

def @func_14607() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  %329 = fn () -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
    %326 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
    %327 = %326.0;
    %328 = @func_2459() /* ty=Tensor[(3, 8, 7), int64] */;
    (%327, %328)
  };
  %329() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_10689() -> Tensor[(3, 8, 7), int64] {
  @func_10687() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_16826(%var_16824: Tensor[(16, 2, 4), int64], %var_16825: Tensor[(16, 2, 4), int64]) -> (Tensor[(16, 2, 4), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64]) {
  %338 = fn (%var_16794: Tensor[(16, 2, 4), int64], %var_16795: Tensor[(16, 2, 4), int64]) -> (Tensor[(16, 2, 4), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64]) {
    %330 = cast(%var_16795, dtype="int64") /* ty=Tensor[(16, 2, 4), int64] */;
    %331 = shape_of(%var_16794, dtype="int32") /* ty=Tensor[(3), int32] */;
    %332 = cast(%var_16794, dtype="int64") /* ty=Tensor[(16, 2, 4), int64] */;
    %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %334 = @func_4081() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */;
    %335 = bitwise_xor(%332, %333) /* ty=Tensor[(16, 2, 4), int64] */;
    %336 = %334.1;
    %337 = @func_14510() /* ty=Tensor[(3, 8, 7), float64] */;
    (%335, %336, %337)
  };
  %338(%var_16824, %var_16825) /* ty=(Tensor[(16, 2, 4), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64]) */
}

def @func_5585() -> (Tensor[(3, 8, 7), int64],) {
  %341 = fn () -> (Tensor[(3, 8, 7), int64],) {
    %339 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %340 = %339.0;
    (%340,)
  };
  %341() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_20210() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32]) {
  %346 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32]) {
    %342 = @func_19622() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %343 = @func_15568() /* ty=(Tensor[(3, 6, 6), float32],) */;
    %344 = %342.0;
    %345 = %343.0;
    (%344, %345)
  };
  %346() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32]) */
}

def @func_2730() -> (Tensor[(3, 8, 7), float64],) {
  %347 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %348 = %347.0;
  (%348,)
}

def @func_14793(%var_14791: Tensor[(560), uint32], %var_14792: Tensor[(1, 594), uint32]) -> (Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64], Tensor[(560), uint32], Tensor[(16, 10), float64], Tensor[(1, 594), uint32], Tensor[(8, 3, 3), bool], Tensor[(72), int8]) {
  %365 = fn (%var_14774: Tensor[(560), uint32], %var_14776: Tensor[(1, 594), uint32]) -> (Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64], Tensor[(560), uint32], Tensor[(16, 10), float64], Tensor[(1, 594), uint32], Tensor[(8, 3, 3), bool], Tensor[(72), int8]) {
    %349 = @func_4967() /* ty=(Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) */;
    %350 = cast(%var_14774, dtype="uint32") /* ty=Tensor[(560), uint32] */;
    %351 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 10), float64] */, dtype="float64") /* ty=Tensor[(16, 10), float64] */;
    %352 = cast(%var_14776, dtype="uint32") /* ty=Tensor[(1, 594), uint32] */;
    %353 = reshape(%350, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), uint32] */;
    %354 = reshape(%351, newshape=[160]) /* ty=Tensor[(160), float64] */;
    %355 = reshape(%352, newshape=[594]) /* ty=Tensor[(594), uint32] */;
    %356 = @func_5472(%353, %354, %355) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), int8], Tensor[(3, 8, 7), int64], Tensor[(160), float64], Tensor[(594), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %357 = cast(meta[relay.Constant][7] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
    %358 = cast(meta[relay.Constant][7] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
    %359 = reshape(%357, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), int8] */;
    %360 = reshape(%358, newshape=[8, 3, 3]) /* ty=Tensor[(8, 3, 3), int8] */;
    %361 = @func_12948(%359, %360) /* ty=(Tensor[(8, 3, 3), bool],) */;
    %362 = %349.0;
    %363 = %356.1;
    %364 = %361.0;
    (%362, %363, %var_14774, meta[relay.Constant][6] /* ty=Tensor[(16, 10), float64] */, %var_14776, %364, meta[relay.Constant][7] /* ty=Tensor[(72), int8] */)
  };
  %365(%var_14791, %var_14792) /* ty=(Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64], Tensor[(560), uint32], Tensor[(16, 10), float64], Tensor[(1, 594), uint32], Tensor[(8, 3, 3), bool], Tensor[(72), int8]) */
}

def @func_9092() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) {
  %375 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) {
    %366 = @func_2227() /* ty=Tensor[(10, 4, 14), float64] */;
    %367 = @func_8038() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %368 = %367.0;
    %369 = cast(%368, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
    %370 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %371 = cast(%366, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
    %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %373 = @func_3319() /* ty=Tensor[(3, 8, 7), float64] */;
    %374 = equal(%371, %372) /* ty=Tensor[(10, 4, 14), bool] */;
    (%373, %374)
  };
  %375() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) */
}

def @func_4395() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) {
  @func_4393() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_1102() -> Tensor[(10, 4, 14), uint32] {
  @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */
}

def @func_19151() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32]) {
  @func_19149() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32]) */
}

def @func_19826() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %380 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
    %376 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %377 = @func_12423() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %378 = %376.0;
    %379 = %377.0;
    (%378, %379)
  };
  %380() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */
}

def @func_3438() -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) {
  %381 = cast(meta[relay.Constant][8] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %382 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 8, 3), uint64] */, dtype="uint64") /* ty=Tensor[(11, 8, 3), uint64] */;
  %383 = minimum(%381, %382) /* ty=Tensor[(11, 8, 3), uint64] */;
  %384 = cast(%383, dtype="float64") /* ty=Tensor[(11, 8, 3), float64] */;
  %385 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %386 = exp(%384) /* ty=Tensor[(11, 8, 3), float64] */;
  %387 = %385.0;
  (%386, %387)
}

def @func_18853() -> (Tensor[(3, 8, 7), int64], Tensor[(560), bool]) {
  %388 = @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %389 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %390 = %388.0;
  %391 = %389.1;
  (%390, %391)
}

def @func_8547() -> (Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) {
  %396 = fn () -> (Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) {
    %392 = @func_1610() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */;
    %393 = @func_5908() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
    %394 = %392.1;
    %395 = %393.1;
    (%394, %395)
  };
  %396() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) */
}

def @func_15010() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  @func_15008() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_7897() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %400 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
    %397 = @func_4281() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %398 = @func_5617() /* ty=Tensor[(3, 8, 7), float64] */;
    %399 = %397.0;
    (%398, %399)
  };
  %400() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_17631() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %404 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
    %401 = @func_15008() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
    %402 = %401.3;
    %403 = @func_17084() /* ty=Tensor[(3, 8, 7), int64] */;
    (%402, %403)
  };
  %404() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_10796() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %408 = fn () -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
    %405 = @func_10560() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %406 = %405.0;
    %407 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
    (%406, %407)
  };
  %408() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */
}

def @func_7583() -> (Tensor[(3, 8, 7), int64],) {
  @func_7581() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_2602() -> (Tensor[(10, 4, 14), float64],) {
  @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_17312() -> (Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %409 = @func_13697() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
  %410 = @func_15231() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %411 = @func_4281() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %412 = %409.0;
  %413 = %410.0;
  %414 = %411.0;
  (%412, %413, %414)
}

def @func_5256() -> (Tensor[(10, 4, 14), float64],) {
  %415 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %416 = %415.0;
  (%416,)
}

def @func_1054() -> Tensor[(3, 8, 7), float32] {
  %417 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %418 = %417.0;
  %419 = cast(%418, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
  sinh(%419) /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_3554() -> (Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %420 = cast(meta[relay.Constant][10] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %421 = reshape(%420, newshape=[12, 7, 13]) /* ty=Tensor[(12, 7, 13), float32] */;
  %422 = @func_2184(%421) /* ty=Tensor[(12, 7, 13), int32] */;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  %424 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %425 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %426 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %427 = @func_911() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %428 = @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %429 = @func_3417() /* ty=Tensor[(3, 8, 7), int64] */;
  %430 = atanh(%423) /* ty=Tensor[(12, 7, 13), float32] */;
  %431 = %424.0;
  %432 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %433 = %425.1;
  %434 = %426.0;
  %435 = %427.0;
  %436 = %428.2;
  (%429, meta[relay.Constant][10] /* ty=Tensor[(1092), float32] */, %430, %431, %432, %433, %434, %435, %436)
}

def @func_2460() -> Tensor[(3, 8, 7), int64] {
  %437 = fn () -> Tensor[(3, 8, 7), int64] {
    @func_1015() /* ty=Tensor[(3, 8, 7), int64] */
  };
  %437() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_14764() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  @func_14762() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */
}

def @func_18855() -> (Tensor[(3, 8, 7), int64], Tensor[(560), bool]) {
  @func_18853() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(560), bool]) */
}

def @func_7030(%var_7016: Tensor[(10, 4, 14), float64]) -> Tensor[(10, 4, 14), float32] {
  %438 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
  %439 = cast(%var_7016, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%441, %442) /* ty=Tensor[(10, 4, 14), float32] */
}

def @func_7033(%var_7031: Tensor[(10, 4, 14), float64]) -> Tensor[(10, 4, 14), float32] {
  @func_7030(%var_7031) /* ty=Tensor[(10, 4, 14), float32] */
}

def @func_17090() -> Tensor[(3, 8, 7), int64] {
  %444 = fn () -> Tensor[(3, 8, 7), int64] {
    %443 = @func_15912() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %443.0
  };
  %444() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_5617() -> Tensor[(3, 8, 7), float64] {
  %445 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %445.1
}

def @func_11344() -> (Tensor[(3, 8, 7), int64],) {
  @func_11342() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_739() -> (Tensor[(3, 8, 7), int64],) {
  @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_5908() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %446 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
  %447 = @func_5064() /* ty=Tensor[(10, 4, 14), float64] */;
  (%446, %447)
}

def @func_5065() -> Tensor[(10, 4, 14), float64] {
  %449 = fn () -> Tensor[(10, 4, 14), float64] {
    %448 = @func_4522() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
    %448.0
  };
  %449() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_14393() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %450 = @func_11027() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %451 = @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %452 = %450.1;
  %453 = %451.0;
  (%452, %453)
}

def @func_7172() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %457 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
    %454 = @func_6104() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %455 = @func_2428() /* ty=Tensor[(3, 8, 7), int64] */;
    %456 = %454.0;
    (%455, %456)
  };
  %457() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_19149() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32]) {
  %458 = @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */;
  %459 = @func_10331() /* ty=Tensor[(10, 4, 14), float64] */;
  %460 = %458.0;
  (%459, %460)
}

def @func_14762() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %461 = @func_13363() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %462 = @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %463 = @func_4081() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %464 = %461.2;
  %465 = %462.2;
  %466 = %463.0;
  (%464, %465, %466)
}

def @func_2385() -> (Tensor[(3, 8, 7), float64],) {
  %471 = fn () -> (Tensor[(3, 8, 7), float64],) {
    %467 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
    %468 = %467.1;
    %469 = cast(%468, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
    %470 = log(%469) /* ty=Tensor[(3, 8, 7), float64] */;
    (%470,)
  };
  %471() /* ty=(Tensor[(3, 8, 7), float64],) */
}

def @func_12521() -> Tensor[(10, 4, 14), float64] {
  @func_12519() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_4463() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) {
  @func_4461() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */
}

def @func_15747() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  @func_15745() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */
}

def @func_8690() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64]) {
  %479 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64]) {
    %472 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %473 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %474 = cast(meta[relay.Constant][11] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %475 = reshape(%474, newshape=[3, 3, 10]) /* ty=Tensor[(3, 3, 10), float64] */;
    %476 = %472.0;
    %477 = %473.0;
    %478 = @func_4789(%475) /* ty=Tensor[(3, 3, 10), float64] */;
    (%476, %477, %478, meta[relay.Constant][11] /* ty=Tensor[(90), float64] */)
  };
  %479() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64]) */
}

def @func_18737() -> Tensor[(10, 4, 14), float64] {
  %481 = fn () -> Tensor[(10, 4, 14), float64] {
    %480 = @func_9817() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %480.0
  };
  %481() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_13966(%var_13964: Tensor[(14, 9, 4), float64]) -> (Tensor[(14, 9, 4), float64],) {
  @func_13963(%var_13964) /* ty=(Tensor[(14, 9, 4), float64],) */
}

def @func_13112(%var_13021: Tensor[(2016), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(2016), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(16, 14, 9), float64]) {
  %482 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %483 = cast(%var_13021, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %484 = reshape(%483, newshape=[28, 72]) /* ty=Tensor[(28, 72), float64] */;
  %485 = @func_12296(%484) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(16, 14, 9), float64], Tensor[(28, 72), float64], Tensor[(3, 8, 7), int64]) */;
  %486 = @func_10795() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %487 = @func_7805() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32]) */;
  %488 = @func_12082() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %489 = cast(%var_13021, dtype="float64") /* ty=Tensor[(2016), float64] */;
  %490 = reshape(%489, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
  %491 = @func_3771() /* ty=Tensor[(10, 4, 14), float64] */;
  %492 = %482.0;
  %493 = %485.2;
  %494 = %486.0;
  %495 = @func_3899() /* ty=Tensor[(3, 8, 7), int64] */;
  %496 = %487.1;
  %497 = %488.0;
  %498 = @func_1399(%490) /* ty=Tensor[(16, 14, 9), float64] */;
  (%491, %492, %493, %var_13021, %494, %495, %496, %497, %498)
}

def @func_7698() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_7696() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_13158() -> (Tensor[(2, 7, 7), float32],) {
  %499 = @func_5334() /* ty=Tensor[(2, 7, 7), float32] */;
  (%499,)
}

def @func_10829() -> Tensor[(3, 8, 7), float32] {
  %503 = fn () -> Tensor[(3, 8, 7), float32] {
    %500 = @func_10560() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %501 = %500.0;
    %502 = cast(%501, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
    cos(%502) /* ty=Tensor[(3, 8, 7), float32] */
  };
  %503() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_15973() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  @func_15971() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_6677() -> Tensor[(3, 8, 7), float64] {
  @func_6675() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_18265() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %509 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
    %504 = @func_3991() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %505 = @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %506 = @func_9125() /* ty=Tensor[(3, 8, 7), int64] */;
    %507 = %504.0;
    %508 = %505.0;
    (%506, %507, %508)
  };
  %509() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_12415() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %514 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
    %510 = @func_3554() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %511 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %512 = %510.6;
    %513 = %511.0;
    (%512, %513)
  };
  %514() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */
}

def @func_15680() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) {
  %515 = @func_10723() /* ty=(Tensor[(10, 4, 14), float32],) */;
  %516 = @func_4927() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %517 = %515.0;
  %518 = %516.0;
  (%517, %518)
}

def @func_12449() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %519 = @func_6468() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %520 = @func_11167() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %521 = %519.0;
  %522 = %520.1;
  (%521, %522)
}

def @func_7338() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32]) {
  @func_7336() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32]) */
}

def @func_947() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %523 = @func_911() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %524 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %525 = %523.0;
  %526 = %524.0;
  (%525, %526)
}

def @func_9575(%var_9566: Tensor[(5, 4, 2), float64]) -> (Tensor[(5, 4, 2), float64],) {
  %527 = cast(%var_9566, dtype="float64") /* ty=Tensor[(5, 4, 2), float64] */;
  %528 = sigmoid(%527) /* ty=Tensor[(5, 4, 2), float64] */;
  (%528,)
}

def @func_2314() -> (Tensor[(10, 4, 14), float64],) {
  %529 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %530 = %529.0;
  (%530,)
}

def @func_2074() -> (Tensor[(10, 4, 14), float64],) {
  %531 = @func_1303() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
  %532 = %531.0;
  %533 = cast(%532, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  %534 = atanh(%533) /* ty=Tensor[(10, 4, 14), float64] */;
  (%534,)
}

def @func_18921() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %535 = @func_15714() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %536 = @func_12519() /* ty=Tensor[(10, 4, 14), float64] */;
  %537 = %535.0;
  %538 = @func_13314() /* ty=Tensor[(3, 8, 7), float32] */;
  (%536, %537, %538)
}

def @func_1303() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %539 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %540 = %539.2;
  %541 = @func_1054() /* ty=Tensor[(3, 8, 7), float32] */;
  (%540, %541)
}

def @func_18432() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
  %542 = @func_11027() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %543 = @func_4461() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */;
  %544 = @func_11231() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
  %545 = @func_16544() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %546 = %542.2;
  %547 = %543.2;
  %548 = %544.2;
  %549 = %545.0;
  %550 = @func_15265() /* ty=Tensor[(3, 8, 7), float64] */;
  (%546, %547, %548, %549, %550)
}

def @func_10505() -> Tensor[(10, 4, 14), float64] {
  @func_10503() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_912() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %557 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
    %551 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %552 = %551.0;
    %553 = cast(%552, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
    %554 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %555 = atanh(%553) /* ty=Tensor[(3, 8, 7), float64] */;
    %556 = %554.0;
    (%555, %556)
  };
  %557() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_14579() -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) {
  @func_14577() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_5272() -> Tensor[(10, 4, 14), float64] {
  %558 = @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %558.0
}

def @func_9551(%var_9549: Tensor[(66, 9), uint32], %var_9550: Tensor[(3, 8, 7), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(3, 8, 7), uint16], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
  %574 = fn (%var_9520: Tensor[(66, 9), uint32], %var_9522: Tensor[(3, 8, 7), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(3, 8, 7), uint16], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
    %559 = cast(%var_9520, dtype="uint32") /* ty=Tensor[(66, 9), uint32] */;
    %560 = reshape(%559, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), uint32] */;
    %561 = @func_1181(%560) /* ty=(Tensor[(9, 6, 11), bool],) */;
    %562 = @func_7378() /* ty=(Tensor[(4, 5, 5), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
    %563 = %562.2;
    %564 = cast(%var_9522, dtype="uint16") /* ty=Tensor[(3, 8, 7), uint16] */;
    %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
    %566 = cast(%563, dtype="uint16") /* ty=Tensor[(3, 8, 7), uint16] */;
    %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %568 = @func_7124() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
    %569 = @func_2227() /* ty=Tensor[(10, 4, 14), float64] */;
    %570 = %561.0;
    %571 = subtract(%566, %567) /* ty=Tensor[(3, 8, 7), uint16] */;
    %572 = %568.1;
    %573 = @func_5617() /* ty=Tensor[(3, 8, 7), float64] */;
    (%569, %570, %var_9520, %571, %572, %573)
  };
  %574(%var_9549, %var_9550) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(3, 8, 7), uint16], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */
}

def @func_17482(%var_17480: Tensor[(576), float64]) -> (Tensor[(11, 8, 3), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), float64], Tensor[(576), float64]) {
  @func_17479(%var_17480) /* ty=(Tensor[(11, 8, 3), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), float64], Tensor[(576), float64]) */
}

def @func_7756() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  %575 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %576 = cast(meta[relay.Constant][12] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %577 = reshape(%576, newshape=[3, 3, 10]) /* ty=Tensor[(3, 3, 10), float64] */;
  %578 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %579 = %575.0;
  %580 = cast(%579, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %581 = reshape(%580, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %582 = @func_497(%581) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %583 = @func_4789(%577) /* ty=Tensor[(3, 3, 10), float64] */;
  %584 = %578.0;
  %585 = %582.0;
  (%579, %583, meta[relay.Constant][12] /* ty=Tensor[(90), float64] */, %584, %585)
}

def @func_17788() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %586 = @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %587 = @func_14393() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %588 = %586.0;
  %589 = %587.0;
  (%588, %589)
}

def @func_18630() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_18628() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_3414() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) {
  %597 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) {
    %590 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
    %591 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %592 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %593 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
    %594 = %590.1;
    %595 = %591.3;
    %596 = %592.0;
    (%593, %594, %595, %596)
  };
  %597() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */
}

def @func_3901() -> Tensor[(3, 8, 7), int64] {
  @func_3899() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_10480() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_20260() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  @func_20258() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */
}

def @func_10723() -> (Tensor[(10, 4, 14), float32],) {
  %598 = @func_7336() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32]) */;
  %599 = %598.1;
  (%599,)
}

def @func_18104() -> Tensor[(10, 4, 14), float64] {
  %601 = fn () -> Tensor[(10, 4, 14), float64] {
    %600 = @func_11779() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %600.0
  };
  %601() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_19593() -> Tensor[(3, 8, 7), float32] {
  @func_19591() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_15783() -> Tensor[(16, 9, 10), bool] {
  %606 = fn () -> Tensor[(16, 9, 10), bool] {
    %602 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 9, 10), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
    %603 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(16, 9, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %604 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 9, 10), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 10), bool] */;
    %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%604, %605) /* ty=Tensor[(16, 9, 10), bool] */
  };
  %606() /* ty=Tensor[(16, 9, 10), bool] */
}

def @func_12780() -> Tensor[(3, 8, 7), int64] {
  @func_12778() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_5921() -> (Tensor[(3, 8, 7), int64],) {
  @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_19044(%var_19042: Tensor[(18), float64], %var_19043: Tensor[(2, 7, 7), float32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, ?, 6), bool], Tensor[(2, 7, 7), bool], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) {
  %631 = fn (%var_18999: Tensor[(18), float64], %var_19027: Tensor[(2, 7, 7), float32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, ?, 6), bool], Tensor[(2, 7, 7), bool], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) {
    %607 = @func_5908() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
    %608 = cast(%var_18999, dtype="float64") /* ty=Tensor[(18), float64] */;
    %609 = reshape(%608, newshape=[3, 1, 6]) /* ty=Tensor[(3, 1, 6), float64] */;
    %610 = @func_6759(%609) /* ty=Tensor[(3, 1, 6), float64] */;
    %611 = cast(%var_18999, dtype="int64") /* ty=Tensor[(18), int64] */;
    %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
    %613 = cast(%610, dtype="int64") /* ty=Tensor[(3, 1, 6), int64] */;
    %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %615 = minimum(%613, %614) /* ty=Tensor[(3, ?, 6), int64] */;
    %616 = cast(%var_18999, dtype="bool") /* ty=Tensor[(18), bool] */;
    %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
    %618 = cast(%615, dtype="bool") /* ty=Tensor[(3, ?, 6), bool] */;
    %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %620 = @func_5334() /* ty=Tensor[(2, 7, 7), float32] */;
    %621 = cast(%var_19027, dtype="bool") /* ty=Tensor[(2, 7, 7), bool] */;
    %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
    %623 = cast(%620, dtype="bool") /* ty=Tensor[(2, 7, 7), bool] */;
    %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %625 = cast(meta[relay.Constant][15] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %626 = reshape(%625, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %627 = %607.0;
    %628 = not_equal(%618, %619) /* ty=Tensor[(3, ?, 6), bool] */;
    %629 = less_equal(%623, %624) /* ty=Tensor[(2, 7, 7), bool] */;
    %630 = @func_1399(%626) /* ty=Tensor[(16, 14, 9), float64] */;
    (%627, %628, %629, %630, meta[relay.Constant][15] /* ty=Tensor[(2016), float64] */)
  };
  %631(%var_19042, %var_19043) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, ?, 6), bool], Tensor[(2, 7, 7), bool], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) */
}

def @func_10082() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_10080() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_4281() -> (Tensor[(10, 4, 14), float64],) {
  %632 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %633 = %632.0;
  (%633,)
}

def @func_12367() -> (Tensor[(2, 7, 7), float32],) {
  @func_12365() /* ty=(Tensor[(2, 7, 7), float32],) */
}

def @func_16577() -> (Tensor[(3, 8, 7), int64],) {
  %636 = fn () -> (Tensor[(3, 8, 7), int64],) {
    %634 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
    %635 = %634.1;
    (%635,)
  };
  %636() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_16596() -> (Tensor[(3, 8, 7), int64],) {
  @func_16594() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_10188() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %637 = @func_9091() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) */;
  %638 = @func_7471() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */;
  %639 = @func_4393() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) */;
  %640 = @func_3413() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */;
  %641 = %637.0;
  %642 = %638.0;
  %643 = %639.1;
  %644 = %640.0;
  %645 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  (%641, %642, %643, %644, %645)
}

def @func_3418() -> Tensor[(3, 8, 7), int64] {
  %646 = fn () -> Tensor[(3, 8, 7), int64] {
    @func_2428() /* ty=Tensor[(3, 8, 7), int64] */
  };
  %646() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_15231() -> (Tensor[(10, 4, 14), float64],) {
  %647 = @func_3991() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %648 = %647.0;
  (%648,)
}

def @func_16546() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  @func_16544() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_2076() -> (Tensor[(10, 4, 14), float64],) {
  @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_12848() -> Tensor[(3, 8, 7), int64] {
  %649 = @func_7275() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %649.0
}

def @func_4003() -> Tensor[(3, 8, 7), int64] {
  %650 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %650.0
}

def @func_1016() -> Tensor[(3, 8, 7), int64] {
  %652 = fn () -> Tensor[(3, 8, 7), int64] {
    %651 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %651.0
  };
  %652() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_1056() -> Tensor[(3, 8, 7), float32] {
  @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_3993() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  @func_3991() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_3065(%var_3064: Tensor[(15, 15, 14), float32]) -> (Tensor[(15, 15, 14), float32], Tensor[(3, 8, 7), float32]) {
  %656 = fn (%var_3050: Tensor[(15, 15, 14), float32]) -> (Tensor[(15, 15, 14), float32], Tensor[(3, 8, 7), float32]) {
    %653 = cast(%var_3050, dtype="float32") /* ty=Tensor[(15, 15, 14), float32] */;
    %654 = sigmoid(%653) /* ty=Tensor[(15, 15, 14), float32] */;
    %655 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
    (%654, %655)
  };
  %656(%var_3064) /* ty=(Tensor[(15, 15, 14), float32], Tensor[(3, 8, 7), float32]) */
}

def @func_1151() -> Tensor[(3, 8, 7), float32] {
  %657 = fn () -> Tensor[(3, 8, 7), float32] {
    @func_1054() /* ty=Tensor[(3, 8, 7), float32] */
  };
  %657() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_11661() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  %658 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %659 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %660 = %658.0;
  (%659, %660)
}

def @func_11537() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %669 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
    %661 = @func_8100() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %662 = @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %663 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %664 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %665 = %661.1;
    %666 = %662.1;
    %667 = %663.0;
    %668 = %664.0;
    (%665, %666, %667, %668)
  };
  %669() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */
}

def @func_10261() -> Tensor[(10, 4, 14), float64] {
  %670 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %670.0
}

def @func_990() -> (Tensor[(10, 4, 14), float64],) {
  %673 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %671 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %672 = %671.0;
    (%672,)
  };
  %673() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_1915() -> (Tensor[(3, 8, 7), int64],) {
  @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_12963() -> Tensor[(3, 8, 7), float64] {
  %674 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %674.0
}

def @func_6762(%var_6760: Tensor[(3, 1, 6), float64]) -> Tensor[(3, 1, 6), float64] {
  @func_6759(%var_6760) /* ty=Tensor[(3, 1, 6), float64] */
}

def @func_11663() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_14130() -> (Tensor[(10, 4, 14), float32],) {
  %675 = @func_10261() /* ty=Tensor[(10, 4, 14), float64] */;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %677 = sin(%676) /* ty=Tensor[(10, 4, 14), float32] */;
  (%677,)
}

def @func_11780() -> (Tensor[(10, 4, 14), float64],) {
  %680 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %678 = @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %679 = %678.0;
    (%679,)
  };
  %680() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_19467(%var_19466: Tensor[(5, 12, 13), float64]) -> Tensor[(5, 12, 13), float64] {
  %682 = fn (%var_19458: Tensor[(5, 12, 13), float64]) -> Tensor[(5, 12, 13), float64] {
    %681 = cast(%var_19458, dtype="float64") /* ty=Tensor[(5, 12, 13), float64] */;
    sin(%681) /* ty=Tensor[(5, 12, 13), float64] */
  };
  %682(%var_19466) /* ty=Tensor[(5, 12, 13), float64] */
}

def @func_745() -> (Tensor[(3, 8, 7), int64],) {
  %685 = fn () -> (Tensor[(3, 8, 7), int64],) {
    %683 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %684 = %683.0;
    (%684,)
  };
  %685() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_9408() -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float32]) {
  %690 = fn () -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float32]) {
    %686 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
    %687 = @func_1303() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
    %688 = %686.0;
    %689 = %687.1;
    (%688, %689)
  };
  %690() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float32]) */
}

def @func_1399(%var_1386: Tensor[(16, 14, 9), float64]) -> Tensor[(16, 14, 9), float64] {
  %691 = cast(%var_1386, dtype="float64") /* ty=Tensor[(16, 14, 9), float64] */;
  asinh(%691) /* ty=Tensor[(16, 14, 9), float64] */
}

def @func_973() -> (Tensor[(10, 4, 14), float64],) {
  %694 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %692 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %693 = %692.2;
    (%693,)
  };
  %694() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_6725() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_3440() -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) {
  @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_10478() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %695 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %696 = @func_10427() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %697 = %695.0;
  %698 = %696.2;
  (%697, %698)
}

def @func_17064() -> Tensor[(3, 8, 7), int64] {
  %699 = @func_10080() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %699.0
}

def @func_14253() -> Tensor[(10, 4, 14), float64] {
  %701 = fn () -> Tensor[(10, 4, 14), float64] {
    %700 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %700.0
  };
  %701() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_20156(%var_20154: Tensor[(11, 7, 8), int8], %var_20155: Tensor[(11, 7, 8), int8]) -> Tensor[(11, 7, 8), int8] {
  %706 = fn (%var_20137: Tensor[(11, 7, 8), int8], %var_20138: Tensor[(11, 7, 8), int8]) -> Tensor[(11, 7, 8), int8] {
    %702 = cast(%var_20138, dtype="int8") /* ty=Tensor[(11, 7, 8), int8] */;
    %703 = shape_of(%var_20137, dtype="int32") /* ty=Tensor[(3), int32] */;
    %704 = cast(%var_20137, dtype="int8") /* ty=Tensor[(11, 7, 8), int8] */;
    %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_or(%704, %705) /* ty=Tensor[(11, 7, 8), int8] */
  };
  %706(%var_20154, %var_20155) /* ty=Tensor[(11, 7, 8), int8] */
}

def @func_10190() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  @func_10188() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */
}

def @func_2997() -> Tensor[(10, 4, 14), float64] {
  %708 = fn () -> Tensor[(10, 4, 14), float64] {
    %707 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %707.0
  };
  %708() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_11720(%var_11713: Tensor[(3, 15, 8), uint8], %var_11714: Tensor[(3, 15, 8), uint8]) -> Tensor[(3, 15, 8), uint8] {
  %709 = cast(%var_11714, dtype="uint8") /* ty=Tensor[(3, 15, 8), uint8] */;
  %710 = shape_of(%var_11713, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_11713, dtype="uint8") /* ty=Tensor[(3, 15, 8), uint8] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%711, %712) /* ty=Tensor[(3, 15, 8), uint8] */
}

def @func_865() -> (Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %713 = cast(meta[relay.Constant][16] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %714 = reshape(%713, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %715 = @func_497(%714) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %716 = cast(meta[relay.Constant][16] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %717 = reshape(%716, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %718 = @func_497(%717) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %719 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %720 = %719.0;
  %721 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 8, 7), int64] */, dtype="uint16") /* ty=Tensor[(3, 8, 7), uint16] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="uint16") /* ty=Tensor[(3, 8, 7), uint16] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %725 = %718.1;
  %726 = cast(%725, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %727 = reshape(%726, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %728 = @func_497(%727) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %729 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %730 = %715.1;
  %731 = left_shift(%723, %724) /* ty=Tensor[(3, 8, 7), uint16] */;
  %732 = %728.1;
  %733 = %729.0;
  (%730, meta[relay.Constant][16] /* ty=Tensor[(560), bool] */, %725, %731, %732, %733)
}

def @func_4393() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) {
  %734 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %735 = %734.0;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %737 = cos(%736) /* ty=Tensor[(10, 4, 14), float32] */;
  %738 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  (%737, %738)
}

def @func_15154(%var_15152: Tensor[(225, 14), float32]) -> (Tensor[(10, 4, 14), float64], Tensor[(15, 15, 14), float32], Tensor[(225, 14), float32], Tensor[(3, 8, 7), int64]) {
  @func_15151(%var_15152) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(15, 15, 14), float32], Tensor[(225, 14), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_16267() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %743 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
    %739 = @func_7896() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
    %740 = @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %741 = %739.1;
    %742 = %740.1;
    (%741, %742)
  };
  %743() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_15971() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %744 = @func_10795() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
  %745 = @func_6864() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %746 = %744.0;
  %747 = @func_12046() /* ty=Tensor[(3, 8, 7), float64] */;
  %748 = %745.0;
  (%746, %747, %748)
}

def @main(%var_20607: Tensor[(15, 2, 11), float32], %var_20608: Tensor[(15, 2, 11), float32]) -> (Tensor[(15, 2, 11), float32],) {
  %749 = cast(%var_20608, dtype="float32") /* ty=Tensor[(15, 2, 11), float32] */;
  %750 = shape_of(%var_20607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%var_20607, dtype="float32") /* ty=Tensor[(15, 2, 11), float32] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %753 = divide(%751, %752) /* ty=Tensor[(15, 2, 11), float32] */;
  (%753,)
}

def @func_20354() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  @func_20352() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_12048() -> Tensor[(3, 8, 7), float64] {
  @func_12046() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_15646(%var_15643: Tensor[(13, 1, 14), uint8], %var_15644: Tensor[(13, 14, 14), uint8], %var_15645: Tensor[(840), float64]) -> (Tensor[(13, 14, 14), uint8], Tensor[(12, 14, 5), float64], Tensor[(840), float64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  @func_15641(%var_15643, %var_15644, %var_15645) /* ty=(Tensor[(13, 14, 14), uint8], Tensor[(12, 14, 5), float64], Tensor[(840), float64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_8120() -> Tensor[(3, 8, 7), int64] {
  %754 = @func_8100() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %754.1
}

def @func_3848() -> (Tensor[(3, 8, 7), int64],) {
  %755 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %756 = %755.0;
  (%756,)
}

def @func_13155() -> (Tensor[(2, 7, 7), uint64], Tensor[(3, 8, 7), int64]) {
  @func_13153() /* ty=(Tensor[(2, 7, 7), uint64], Tensor[(3, 8, 7), int64]) */
}

def @func_16122() -> Tensor[(10, 4, 14), float64] {
  %758 = fn () -> Tensor[(10, 4, 14), float64] {
    %757 = @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %757.0
  };
  %758() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_15569() -> (Tensor[(3, 6, 6), float32],) {
  %760 = fn () -> (Tensor[(3, 6, 6), float32],) {
    %759 = @func_14070() /* ty=Tensor[(3, 6, 6), float32] */;
    (%759,)
  };
  %760() /* ty=(Tensor[(3, 6, 6), float32],) */
}

def @func_16190() -> Tensor[(3, 8, 7), int64] {
  %761 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %761.0
}

def @func_2429() -> Tensor[(3, 8, 7), int64] {
  %763 = fn () -> Tensor[(3, 8, 7), int64] {
    %762 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %762.0
  };
  %763() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_2229() -> Tensor[(10, 4, 14), float64] {
  @func_2227() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_18532() -> Tensor[(10, 4, 14), float64] {
  @func_3771() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_15214() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %769 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
    %764 = @func_9701() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %765 = @func_7896() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
    %766 = %764.0;
    %767 = @func_10503() /* ty=Tensor[(10, 4, 14), float64] */;
    %768 = %765.1;
    (%766, %767, %768)
  };
  %769() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_9486() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  @func_9484() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_18218() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  @func_18216() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_3635() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_1305() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  @func_1303() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */
}

def @func_8236() -> Tensor[(10, 4, 14), float64] {
  @func_8234() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_1183(%var_1182: Tensor[(9, 6, 11), uint32]) -> (Tensor[(9, 6, 11), bool],) {
  %775 = fn (%var_1172: Tensor[(9, 6, 11), uint32]) -> (Tensor[(9, 6, 11), bool],) {
    %770 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 6, 11), uint32] */, dtype="bool") /* ty=Tensor[(9, 6, 11), bool] */;
    %771 = shape_of(%var_1172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %772 = cast(%var_1172, dtype="bool") /* ty=Tensor[(9, 6, 11), bool] */;
    %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %774 = not_equal(%772, %773) /* ty=Tensor[(9, 6, 11), bool] */;
    (%774,)
  };
  %775(%var_1182) /* ty=(Tensor[(9, 6, 11), bool],) */
}

def @func_2600() -> (Tensor[(10, 4, 14), float64],) {
  %776 = @func_2581() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %777 = %776.0;
  (%777,)
}

def @func_2970() -> (Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_20518() -> Tensor[(4, 5, 9), float32] {
  %779 = fn () -> Tensor[(4, 5, 9), float32] {
    %778 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 5, 9), float32] */;
    sinh(%778) /* ty=Tensor[(4, 5, 9), float32] */
  };
  %779() /* ty=Tensor[(4, 5, 9), float32] */
}

def @func_3633() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %780 = @func_1742() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %781 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %782 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %783 = %780.0;
  %784 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %785 = %781.0;
  %786 = %782.0;
  (%783, %784, %785, %786)
}

def @func_7299() -> Tensor[(3, 8, 7), float64] {
  %787 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %787.0
}

def @func_11558() -> (Tensor[(3, 8, 7), int64],) {
  %790 = fn () -> (Tensor[(3, 8, 7), int64],) {
    %788 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %789 = %788.1;
    (%789,)
  };
  %790() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_20546() -> Tensor[(10, 4, 14), float64] {
  %791 = fn () -> Tensor[(10, 4, 14), float64] {
    @func_8234() /* ty=Tensor[(10, 4, 14), float64] */
  };
  %791() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_5538() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %795 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
    %792 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %793 = %792.0;
    %794 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
    (%793, %794)
  };
  %795() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_20593() -> (Tensor[(10, 4, 14), bool],) {
  %798 = fn () -> (Tensor[(10, 4, 14), bool],) {
    %796 = @func_7756() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
    %797 = %796.4;
    (%797,)
  };
  %798() /* ty=(Tensor[(10, 4, 14), bool],) */
}

def @func_19623() -> (Tensor[(3, 8, 7), float64],) {
  %801 = fn () -> (Tensor[(3, 8, 7), float64],) {
    %799 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %800 = %799.0;
    (%800,)
  };
  %801() /* ty=(Tensor[(3, 8, 7), float64],) */
}

def @func_12365() -> (Tensor[(2, 7, 7), float32],) {
  %802 = @func_6271() /* ty=(Tensor[(2, 7, 7), float32],) */;
  %803 = %802.0;
  (%803,)
}

def @func_19384() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %807 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
    %804 = @func_18139() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %805 = @func_16089() /* ty=Tensor[(3, 8, 7), float64] */;
    %806 = %804.0;
    (%805, %806)
  };
  %807() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_4563(%var_4562: Tensor[(2, 5, 4), float64]) -> (Tensor[(2, 5, 4), float64],) {
  %810 = fn (%var_4545: Tensor[(2, 5, 4), float64]) -> (Tensor[(2, 5, 4), float64],) {
    %808 = cast(%var_4545, dtype="float64") /* ty=Tensor[(2, 5, 4), float64] */;
    %809 = acos(%808) /* ty=Tensor[(2, 5, 4), float64] */;
    (%809,)
  };
  %810(%var_4562) /* ty=(Tensor[(2, 5, 4), float64],) */
}

def @func_6633(%var_6622: Tensor[(13, 6, 16), int16], %var_6623: Tensor[(13, 6, 16), int16]) -> (Tensor[(13, 6, 16), int16], Tensor[(3, 8, 7), int64]) {
  %811 = cast(%var_6623, dtype="int16") /* ty=Tensor[(13, 6, 16), int16] */;
  %812 = shape_of(%var_6622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%var_6622, dtype="int16") /* ty=Tensor[(13, 6, 16), int16] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %815 = @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %816 = subtract(%813, %814) /* ty=Tensor[(13, 6, 16), int16] */;
  %817 = %815.0;
  (%816, %817)
}

def @func_19545() -> (Tensor[(560), bool],) {
  %818 = @func_18853() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(560), bool]) */;
  %819 = %818.1;
  (%819,)
}

def @func_7124() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %820 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %821 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %822 = %820.0;
  %823 = %821.0;
  (%822, %823)
}

def @func_5764() -> Tensor[(3, 8, 7), int64] {
  %825 = fn () -> Tensor[(3, 8, 7), int64] {
    %824 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %824.1
  };
  %825() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_2582() -> (Tensor[(10, 4, 14), float64],) {
  %828 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %826 = @func_2213() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %827 = %826.0;
    (%827,)
  };
  %828() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_11168() -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %837 = fn () -> (Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
    %829 = @func_6693() /* ty=(Tensor[(11, 8, 3), float64],) */;
    %830 = @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %831 = @func_1742() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %832 = @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %833 = %829.0;
    %834 = %830.1;
    %835 = %831.2;
    %836 = %832.0;
    (%833, %834, %835, %836)
  };
  %837() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_2732() -> (Tensor[(3, 8, 7), float64],) {
  @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */
}

def @func_17990(%var_17951: Tensor[(594), uint32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(66, 9), uint64]) {
  %838 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %839 = @func_14467() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %840 = cast(%var_17951, dtype="uint32") /* ty=Tensor[(594), uint32] */;
  %841 = @func_13314() /* ty=Tensor[(3, 8, 7), float32] */;
  %842 = cast(%841, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %843 = reshape(%840, newshape=[66, 9]) /* ty=Tensor[(66, 9), uint32] */;
  %844 = reshape(%842, newshape=[3, 8, 7]) /* ty=Tensor[(3, 8, 7), float64] */;
  %845 = @func_9548(%843, %844) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(9, 6, 11), bool], Tensor[(66, 9), uint32], Tensor[(3, 8, 7), uint16], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %846 = %845.2;
  %847 = cast(%var_17951, dtype="uint64") /* ty=Tensor[(594), uint64] */;
  %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(2), int32] */;
  %849 = cast(%846, dtype="uint64") /* ty=Tensor[(66, 9), uint64] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %851 = %838.0;
  %852 = %839.1;
  %853 = bitwise_or(%849, %850) /* ty=Tensor[(66, 9), uint64] */;
  (%841, %851, %852, %853)
}

def @func_12952(%var_12950: Tensor[(8, 3, 3), int8], %var_12951: Tensor[(8, 3, 3), int8]) -> (Tensor[(8, 3, 3), bool],) {
  @func_12948(%var_12950, %var_12951) /* ty=(Tensor[(8, 3, 3), bool],) */
}

def @func_760() -> (Tensor[(3, 8, 7), int64],) {
  @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_7494() -> Tensor[(3, 8, 7), int64] {
  %855 = fn () -> Tensor[(3, 8, 7), int64] {
    %854 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %854.1
  };
  %855() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_8234() -> Tensor[(10, 4, 14), float64] {
  %856 = @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %856.0
}

def @func_18174() -> Tensor[(3, 8, 7), int64] {
  @func_18172() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_5299() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) {
  %857 = @func_4739() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %858 = @func_2634() /* ty=Tensor[(3, 8, 7), float32] */;
  %859 = %857.2;
  (%858, %859)
}

def @func_1332() -> Tensor[(10, 4, 14), float64] {
  %861 = fn () -> Tensor[(10, 4, 14), float64] {
    %860 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %860.0
  };
  %861() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_1380() -> (Tensor[(10, 4, 14), float64],) {
  %862 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %863 = %862.4;
  (%863,)
}

def @func_4082() -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
  %867 = fn () -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
    %864 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
    %865 = %864.0;
    %866 = @func_3319() /* ty=Tensor[(3, 8, 7), float64] */;
    (%865, %866)
  };
  %867() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */
}

def @func_17853() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32]) {
  %872 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32]) {
    %868 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %869 = @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */;
    %870 = %868.0;
    %871 = %869.0;
    (%870, %871)
  };
  %872() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32]) */
}

def @func_4024() -> (Tensor[(3, 8, 7), float32],) {
  @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */
}

def @func_8832(%var_8831: Tensor[(2, 660), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 660), float32], Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float32]) {
  %904 = fn (%var_8736: Tensor[(2, 660), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 660), float32], Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float32]) {
    %873 = @func_8298() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %874 = cast(%var_8736, dtype="float64") /* ty=Tensor[(2, 660), float64] */;
    %875 = cast(%var_8736, dtype="float64") /* ty=Tensor[(2, 660), float64] */;
    %876 = reshape(%874, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
    %877 = reshape(%875, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
    %878 = @func_2029(%876, %877) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(11, 8, 15), int16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
    %879 = %878.3;
    %880 = @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %881 = %880.0;
    %882 = cast(%881, dtype="uint32") /* ty=Tensor[(3, 8, 7), uint32] */;
    %883 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
    %884 = cast(%879, dtype="uint32") /* ty=Tensor[(3, 8, 7), uint32] */;
    %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %886 = right_shift(%884, %885) /* ty=Tensor[(3, 8, 7), uint32] */;
    %887 = cast(%886, dtype="float32") /* ty=Tensor[(3, 8, 7), float32] */;
    %888 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %889 = @func_4281() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %890 = @func_4522() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
    %891 = cast(%var_8736, dtype="float32") /* ty=Tensor[(2, 660), float32] */;
    %892 = @func_5980() /* ty=(Tensor[(10, 4, 14), uint32],) */;
    %893 = @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %894 = %893.0;
    %895 = cast(%894, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
    %896 = %873.0;
    %897 = sigmoid(%887) /* ty=Tensor[(3, 8, 7), float32] */;
    %898 = %888.0;
    %899 = %889.0;
    %900 = %890.2;
    %901 = erf(%891) /* ty=Tensor[(2, 660), float32] */;
    %902 = %892.0;
    %903 = log10(%895) /* ty=Tensor[(10, 4, 14), float32] */;
    (%896, %897, %898, %899, %900, %901, %902, %903)
  };
  %904(%var_8831) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 660), float32], Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float32]) */
}

def @func_8725() -> (Tensor[(3, 8, 7), int64],) {
  @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_18664() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %905 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %906 = @func_12046() /* ty=Tensor[(3, 8, 7), float64] */;
  %907 = %905.0;
  (%906, %907)
}

def @func_758() -> (Tensor[(3, 8, 7), int64],) {
  %908 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %909 = %908.0;
  (%909,)
}

def @func_15114() -> (Tensor[(3, 8, 7), float64],) {
  %912 = fn () -> (Tensor[(3, 8, 7), float64],) {
    %910 = @func_9201() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %911 = %910.0;
    (%911,)
  };
  %912() /* ty=(Tensor[(3, 8, 7), float64],) */
}

def @func_16500() -> Tensor[(3, 8, 7), int64] {
  %913 = fn () -> Tensor[(3, 8, 7), int64] {
    @func_12848() /* ty=Tensor[(3, 8, 7), int64] */
  };
  %913() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_14908() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  @func_14906() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_3797() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %919 = fn () -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
    %914 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %915 = @func_2581() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %916 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
    %917 = %914.0;
    %918 = %915.0;
    (%916, %917, %918)
  };
  %919() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_4927() -> (Tensor[(3, 8, 7), int64],) {
  %920 = @func_4177() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %921 = %920.2;
  (%921,)
}

def @func_7379() -> (Tensor[(4, 5, 5), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %926 = fn () -> (Tensor[(4, 5, 5), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
    %922 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 5, 5), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 5), float64] */;
    %923 = sin(%922) /* ty=Tensor[(4, 5, 5), float64] */;
    %924 = @func_4003() /* ty=Tensor[(3, 8, 7), int64] */;
    %925 = @func_6675() /* ty=Tensor[(3, 8, 7), float64] */;
    (%923, %924, %925)
  };
  %926() /* ty=(Tensor[(4, 5, 5), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */
}

def @func_6415() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %927 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %928 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %929 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
  %930 = cast(%929, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %931 = @func_4739() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
  %932 = @func_5101() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64]) */;
  %933 = @func_3848() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %934 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %935 = %927.0;
  %936 = %928.1;
  %937 = log2(%930) /* ty=Tensor[(10, 4, 14), float32] */;
  %938 = %931.2;
  %939 = %932.0;
  %940 = %933.0;
  %941 = %934.0;
  (%935, %936, %937, %938, %939, %940, %941)
}

def @func_6927() -> (Tensor[(10, 4, 14), float64],) {
  %944 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %942 = @func_1742() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %943 = %942.2;
    (%943,)
  };
  %944() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_15398() -> Tensor[(10, 4, 14), float64] {
  @func_15396() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_15914() -> (Tensor[(3, 8, 7), int64],) {
  @func_15912() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_16775() -> Tensor[(3, 8, 7), float32] {
  %945 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %945.0
}

def @func_17828() -> Tensor[(5, 4, 2), float64] {
  @func_17826() /* ty=Tensor[(5, 4, 2), float64] */
}

def @func_9702() -> (Tensor[(3, 8, 7), int64],) {
  %948 = fn () -> (Tensor[(3, 8, 7), int64],) {
    %946 = @func_5919() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %947 = %946.0;
    (%947,)
  };
  %948() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_19348() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_19346() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_6271() -> (Tensor[(2, 7, 7), float32],) {
  %949 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %950 = %949.0;
  %951 = cast(%950, dtype="float32") /* ty=Tensor[(2, 7, 7), float32] */;
  %952 = asin(%951) /* ty=Tensor[(2, 7, 7), float32] */;
  (%952,)
}

def @func_4022() -> (Tensor[(3, 8, 7), float32],) {
  %953 = @func_1054() /* ty=Tensor[(3, 8, 7), float32] */;
  (%953,)
}

def @func_3921() -> Tensor[(3, 8, 7), int64] {
  @func_3919() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_2184(%var_2152: Tensor[(12, 7, 13), float32]) -> Tensor[(12, 7, 13), int32] {
  %954 = cast(%var_2152, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  %955 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(12, 7, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %956 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 7, 13), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 13), float32] */;
  %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %958 = divide(%956, %957) /* ty=Tensor[(12, 7, 13), float32] */;
  %959 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 7, 13), float32] */, dtype="int64") /* ty=Tensor[(12, 7, 13), int64] */;
  %960 = shape_of(%958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %961 = cast(%958, dtype="int64") /* ty=Tensor[(12, 7, 13), int64] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %963 = bitwise_or(%961, %962) /* ty=Tensor[(12, 7, 13), int64] */;
  %964 = cast(%963, dtype="int32") /* ty=Tensor[(12, 7, 13), int32] */;
  %965 = shape_of(%958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%958, dtype="int32") /* ty=Tensor[(12, 7, 13), int32] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%966, %967) /* ty=Tensor[(12, 7, 13), int32] */
}

def @func_15416() -> (Tensor[(3, 8, 7), int64],) {
  @func_15414() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_17790() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_17788() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_17740() -> (Tensor[(3, 8, 7), int64],) {
  %968 = @func_4967() /* ty=(Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) */;
  %969 = %968.1;
  (%969,)
}

def @func_15494() -> (Tensor[(3, 8, 7), float64], Tensor[(2, 7, 7), uint8], Tensor[(2, 7, 7), float64], Tensor[(10, 4, 14), uint32]) {
  @func_15492() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(2, 7, 7), uint8], Tensor[(2, 7, 7), float64], Tensor[(10, 4, 14), uint32]) */
}

def @func_18565() -> Tensor[(10, 4, 14), float64] {
  %970 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %970.0
}

def @func_11819() -> (Tensor[(10, 4, 14), float64],) {
  @func_11817() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_2537(%var_2535: Tensor[(12, 10, 16), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(12, 10, 16), float32], Tensor[(10, 4, 14), float64]) {
  @func_2534(%var_2535) /* ty=(Tensor[(3, 8, 7), int64], Tensor[(12, 10, 16), float32], Tensor[(10, 4, 14), float64]) */
}

def @func_9484() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %971 = @func_7896() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */;
  %972 = @func_7299() /* ty=Tensor[(3, 8, 7), float64] */;
  %973 = %971.1;
  (%972, %973)
}

def @func_15641(%var_15618: Tensor[(13, 1, 14), uint8], %var_15619: Tensor[(13, 14, 14), uint8], %var_15624: Tensor[(840), float64]) -> (Tensor[(13, 14, 14), uint8], Tensor[(12, 14, 5), float64], Tensor[(840), float64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %974 = cast(%var_15618, dtype="uint8") /* ty=Tensor[(13, 1, 14), uint8] */;
  %975 = cast(%var_15619, dtype="uint8") /* ty=Tensor[(13, 14, 14), uint8] */;
  %976 = cast(%var_15624, dtype="float64") /* ty=Tensor[(840), float64] */;
  %977 = reshape(%976, newshape=[12, 14, 5]) /* ty=Tensor[(12, 14, 5), float64] */;
  %978 = @func_12414() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %979 = left_shift(%974, %975) /* ty=Tensor[(13, 14, 14), uint8] */;
  %980 = @func_13757(%977) /* ty=Tensor[(12, 14, 5), float64] */;
  %981 = @func_14252() /* ty=Tensor[(10, 4, 14), float64] */;
  %982 = %978.1;
  (%979, %980, %var_15624, %981, %982)
}

def @func_19500(%var_19499: Tensor[(4, 5, 5), float64]) -> (Tensor[(4, 5, 5), uint16],) {
  %990 = fn (%var_19480: Tensor[(4, 5, 5), float64]) -> (Tensor[(4, 5, 5), uint16],) {
    %983 = @func_7378() /* ty=(Tensor[(4, 5, 5), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
    %984 = %983.0;
    %985 = cast(%var_19480, dtype="uint16") /* ty=Tensor[(4, 5, 5), uint16] */;
    %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
    %987 = cast(%984, dtype="uint16") /* ty=Tensor[(4, 5, 5), uint16] */;
    %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %989 = right_shift(%987, %988) /* ty=Tensor[(4, 5, 5), uint16] */;
    (%989,)
  };
  %990(%var_19499) /* ty=(Tensor[(4, 5, 5), uint16],) */
}

def @func_10263() -> Tensor[(10, 4, 14), float64] {
  @func_10261() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_7253() -> (Tensor[(10, 4, 14), float64],) {
  %993 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %991 = @func_3413() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */;
    %992 = %991.0;
    (%992,)
  };
  %993() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_4283() -> (Tensor[(10, 4, 14), float64],) {
  @func_4281() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_12965() -> Tensor[(3, 8, 7), float64] {
  @func_12963() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_12046() -> Tensor[(3, 8, 7), float64] {
  %994 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %994.0
}

def @func_18534() -> Tensor[(10, 4, 14), float64] {
  @func_18532() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_2032(%var_2030: Tensor[(11, 8, 15), float64], %var_2031: Tensor[(11, 8, 15), float64]) -> (Tensor[(11, 8, 15), float64], Tensor[(11, 8, 15), int16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %1008 = fn (%var_1981: Tensor[(11, 8, 15), float64], %var_1982: Tensor[(11, 8, 15), float64]) -> (Tensor[(11, 8, 15), float64], Tensor[(11, 8, 15), int16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
    %995 = cast(%var_1982, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
    %996 = shape_of(%var_1981, dtype="int32") /* ty=Tensor[(3), int32] */;
    %997 = cast(%var_1981, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
    %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %999 = cast(%var_1981, dtype="int16") /* ty=Tensor[(11, 8, 15), int16] */;
    %1000 = shape_of(%var_1982, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1001 = cast(%var_1982, dtype="int16") /* ty=Tensor[(11, 8, 15), int16] */;
    %1002 = dyn.reshape(%999, %1000, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1003 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1004 = divide(%997, %998) /* ty=Tensor[(11, 8, 15), float64] */;
    %1005 = left_shift(%1001, %1002) /* ty=Tensor[(11, 8, 15), int16] */;
    %1006 = %1003.0;
    %1007 = @func_1054() /* ty=Tensor[(3, 8, 7), float32] */;
    (%1004, %1005, %1006, %1007)
  };
  %1008(%var_2030, %var_2031) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(11, 8, 15), int16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */
}

def @func_10562() -> (Tensor[(3, 8, 7), float32],) {
  @func_10560() /* ty=(Tensor[(3, 8, 7), float32],) */
}

def @func_5937() -> (Tensor[(3, 8, 7), int64],) {
  %1009 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %1010 = %1009.1;
  (%1010,)
}

def @func_18141() -> (Tensor[(10, 4, 14), float64],) {
  @func_18139() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_14511() -> Tensor[(3, 8, 7), float64] {
  %1011 = fn () -> Tensor[(3, 8, 7), float64] {
    @func_10675() /* ty=Tensor[(3, 8, 7), float64] */
  };
  %1011() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_8122() -> Tensor[(3, 8, 7), int64] {
  @func_8120() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_3364() -> (Tensor[(3, 8, 7), int64],) {
  %1012 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_11131() -> Tensor[(3, 8, 7), int64] {
  %1015 = fn () -> Tensor[(3, 8, 7), int64] {
    %1014 = @func_4967() /* ty=(Tensor[(3, 8, 7), bool], Tensor[(3, 8, 7), int64]) */;
    %1014.1
  };
  %1015() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_15008() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  %1016 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1017 = @func_14577() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
  %1018 = @func_3554() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(1092), float32], Tensor[(12, 7, 13), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1019 = @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %1020 = %1016.0;
  %1021 = %1017.1;
  %1022 = %1018.7;
  %1023 = %1019.1;
  (%1020, %1021, %1022, %1023)
}

def @func_20268() -> (Tensor[(10, 4, 14), float64],) {
  %1024 = @func_8546() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) */;
  %1025 = %1024.1;
  (%1025,)
}

def @func_2947() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  @func_2945() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */
}

def @func_17429() -> Tensor[(3, 6, 6), float32] {
  %1026 = @func_15568() /* ty=(Tensor[(3, 6, 6), float32],) */;
  %1026.0
}

def @func_15745() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %1027 = @func_4522() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1028 = @func_7493() /* ty=Tensor[(3, 8, 7), int64] */;
  %1029 = %1027.1;
  (%1028, %1029)
}

def @func_17019(%var_17017: Tensor[(15, 6, 11), uint8], %var_17018: Tensor[(15, 6, 11), uint8]) -> (Tensor[(15, 6, 11), uint8],) {
  @func_17015(%var_17017, %var_17018) /* ty=(Tensor[(15, 6, 11), uint8],) */
}

def @func_12298(%var_12297: Tensor[(28, 72), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(16, 14, 9), float64], Tensor[(28, 72), float64], Tensor[(3, 8, 7), int64]) {
  %1046 = fn (%var_12288: Tensor[(28, 72), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(16, 14, 9), float64], Tensor[(28, 72), float64], Tensor[(3, 8, 7), int64]) {
    %1030 = @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %1031 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %1032 = @func_11438() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
    %1033 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
    %1034 = @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %1035 = cast(%var_12288, dtype="float64") /* ty=Tensor[(28, 72), float64] */;
    %1036 = reshape(%1035, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %1037 = %1030.0;
    %1038 = %1031.0;
    %1039 = %1032.0;
    %1040 = %1033.1;
    %1041 = %1034.0;
    %1042 = @func_5793() /* ty=Tensor[(3, 8, 7), float32] */;
    %1043 = @func_9125() /* ty=Tensor[(3, 8, 7), int64] */;
    %1044 = @func_1399(%1036) /* ty=Tensor[(16, 14, 9), float64] */;
    %1045 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
    (%1037, %1038, %1039, %1040, %1041, %1042, %1043, %1044, %var_12288, %1045)
  };
  %1046(%var_12297) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(16, 14, 9), float64], Tensor[(28, 72), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_3320() -> Tensor[(3, 8, 7), float64] {
  %1048 = fn () -> Tensor[(3, 8, 7), float64] {
    %1047 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %1047.0
  };
  %1048() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_2968() -> (Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1049 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1050 = @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1051 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1052 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %1053 = %1049.0;
  %1054 = %1050.0;
  %1055 = %1051.2;
  (%1052, %1053, %1054, %1055)
}

def @func_18666() -> (Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) {
  @func_18664() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_2140() -> (Tensor[(10, 4, 14), float64],) {
  %1056 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1057 = %1056.0;
  (%1057,)
}

def @func_12115() -> Tensor[(3, 8, 7), int64] {
  %1059 = fn () -> Tensor[(3, 8, 7), int64] {
    %1058 = @func_3814() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %1058.1
  };
  %1059() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_11387() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  %1060 = @func_9701() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1061 = @func_9091() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), bool]) */;
  %1062 = @func_8120() /* ty=Tensor[(3, 8, 7), int64] */;
  %1063 = %1060.0;
  %1064 = %1061.1;
  (%1062, %1063, %1064)
}

def @func_13234() -> Tensor[(3, 8, 7), int64] {
  %1065 = fn () -> Tensor[(3, 8, 7), int64] {
    @func_12848() /* ty=Tensor[(3, 8, 7), int64] */
  };
  %1065() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_17742() -> (Tensor[(3, 8, 7), int64],) {
  @func_17740() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_6723() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1066 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1067 = %1066.2;
  %1068 = @func_2996() /* ty=Tensor[(10, 4, 14), float64] */;
  (%1067, %1068)
}

def @func_11930() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 3, 10), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
  %1084 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 3, 10), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) {
    %1069 = @func_11231() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
    %1070 = cast(meta[relay.Constant][22] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %1071 = reshape(%1070, newshape=[3, 3, 10]) /* ty=Tensor[(3, 3, 10), float64] */;
    %1072 = @func_7275() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1073 = @func_11231() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
    %1074 = @func_8689() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64]) */;
    %1075 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
    %1076 = %1069.0;
    %1077 = @func_4789(%1071) /* ty=Tensor[(3, 3, 10), float64] */;
    %1078 = %1072.0;
    %1079 = %1073.0;
    %1080 = @func_11130() /* ty=Tensor[(3, 8, 7), int64] */;
    %1081 = %1074.2;
    %1082 = %1075.0;
    %1083 = @func_10675() /* ty=Tensor[(3, 8, 7), float64] */;
    (%1076, %1077, meta[relay.Constant][22] /* ty=Tensor[(90), float64] */, %1078, %1079, %1080, %1081, %1082, %1083)
  };
  %1084() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 3, 10), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), float64]) */
}

def @func_16090() -> Tensor[(3, 8, 7), float64] {
  %1086 = fn () -> Tensor[(3, 8, 7), float64] {
    %1085 = @func_10427() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %1085.1
  };
  %1086() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_3919() -> Tensor[(3, 8, 7), int64] {
  %1087 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1087.1
}

def @func_15151(%var_15133: Tensor[(225, 14), float32]) -> (Tensor[(10, 4, 14), float64], Tensor[(15, 15, 14), float32], Tensor[(225, 14), float32], Tensor[(3, 8, 7), int64]) {
  %1088 = cast(%var_15133, dtype="float32") /* ty=Tensor[(225, 14), float32] */;
  %1089 = reshape(%1088, newshape=[15, 15, 14]) /* ty=Tensor[(15, 15, 14), float32] */;
  %1090 = @func_3063(%1089) /* ty=(Tensor[(15, 15, 14), float32], Tensor[(3, 8, 7), float32]) */;
  %1091 = @func_8100() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1092 = @func_5272() /* ty=Tensor[(10, 4, 14), float64] */;
  %1093 = %1090.0;
  %1094 = %1091.1;
  (%1092, %1093, %var_15133, %1094)
}

def @func_1743() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1103 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
    %1095 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1096 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1097 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1098 = @func_989() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1099 = %1095.0;
    %1100 = %1096.0;
    %1101 = %1097.0;
    %1102 = %1098.0;
    (%1099, %1100, %1101, %1102)
  };
  %1103() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_9862(%var_9859: Tensor[(10, 16, 15), int8], %var_9860: Tensor[(10, 16, 15), int8], %var_9861: Tensor[(10, 16, 15), int8]) -> (Tensor[(10, 16, 15), int8], Tensor[(10, 16, 15), float32], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %1117 = fn (%var_9828: Tensor[(10, 16, 15), int8], %var_9829: Tensor[(10, 16, 15), int8], %var_9838: Tensor[(10, 16, 15), int8]) -> (Tensor[(10, 16, 15), int8], Tensor[(10, 16, 15), float32], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
    %1104 = cast(%var_9829, dtype="int8") /* ty=Tensor[(10, 16, 15), int8] */;
    %1105 = shape_of(%var_9828, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1106 = cast(%var_9828, dtype="int8") /* ty=Tensor[(10, 16, 15), int8] */;
    %1107 = dyn.reshape(%1104, %1105, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1108 = cast(%var_9838, dtype="float32") /* ty=Tensor[(10, 16, 15), float32] */;
    %1109 = shape_of(%var_9828, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1110 = cast(%var_9828, dtype="float32") /* ty=Tensor[(10, 16, 15), float32] */;
    %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1112 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
    %1113 = left_shift(%1106, %1107) /* ty=Tensor[(10, 16, 15), int8] */;
    %1114 = power(%1110, %1111) /* ty=Tensor[(10, 16, 15), float32] */;
    %1115 = @func_7493() /* ty=Tensor[(3, 8, 7), int64] */;
    %1116 = %1112.0;
    (%1113, %1114, %1115, %1116)
  };
  %1117(%var_9859, %var_9860, %var_9861) /* ty=(Tensor[(10, 16, 15), int8], Tensor[(10, 16, 15), float32], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */
}

def @func_737() -> (Tensor[(3, 8, 7), int64],) {
  %1118 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
  %1119 = asin(%1118) /* ty=Tensor[(3, 8, 7), float64] */;
  %1120 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 8, 7), float64] */, dtype="int64") /* ty=Tensor[(3, 8, 7), int64] */;
  %1121 = shape_of(%1119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1122 = cast(%1119, dtype="int64") /* ty=Tensor[(3, 8, 7), int64] */;
  %1123 = dyn.reshape(%1120, %1121, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1124 = bitwise_xor(%1122, %1123) /* ty=Tensor[(3, 8, 7), int64] */;
  (%1124,)
}

def @func_7758() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  @func_7756() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */
}

def @func_2316() -> (Tensor[(10, 4, 14), float64],) {
  @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_6675() -> Tensor[(3, 8, 7), float64] {
  %1125 = @func_4249() /* ty=(Tensor[(3, 8, 7), float64],) */;
  %1125.0
}

def @func_3679(%var_3676: Tensor[(4, 5, 8), float64], %var_3677: Tensor[(594), uint32], %var_3678: Tensor[(4, 5, 8), float64]) -> (Tensor[(9, 6, 11), bool], Tensor[(594), uint32], Tensor[(10, 4, 14), float64], Tensor[(4, 5, 8), int64], Tensor[(3, 8, 7), int64]) {
  %1139 = fn (%var_3638: Tensor[(4, 5, 8), float64], %var_3642: Tensor[(594), uint32], %var_3656: Tensor[(4, 5, 8), float64]) -> (Tensor[(9, 6, 11), bool], Tensor[(594), uint32], Tensor[(10, 4, 14), float64], Tensor[(4, 5, 8), int64], Tensor[(3, 8, 7), int64]) {
    %1126 = cast(%var_3642, dtype="uint32") /* ty=Tensor[(594), uint32] */;
    %1127 = reshape(%1126, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), uint32] */;
    %1128 = @func_1181(%1127) /* ty=(Tensor[(9, 6, 11), bool],) */;
    %1129 = cast(%var_3638, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
    %1130 = cosh(%1129) /* ty=Tensor[(4, 5, 8), float64] */;
    %1131 = cast(%var_3656, dtype="int64") /* ty=Tensor[(4, 5, 8), int64] */;
    %1132 = shape_of(%1130, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1133 = cast(%1130, dtype="int64") /* ty=Tensor[(4, 5, 8), int64] */;
    %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1135 = %1128.0;
    %1136 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
    %1137 = logical_xor(%1133, %1134) /* ty=Tensor[(4, 5, 8), int64] */;
    %1138 = @func_2428() /* ty=Tensor[(3, 8, 7), int64] */;
    (%1135, %var_3642, %1136, %1137, %1138)
  };
  %1139(%var_3676, %var_3677, %var_3678) /* ty=(Tensor[(9, 6, 11), bool], Tensor[(594), uint32], Tensor[(10, 4, 14), float64], Tensor[(4, 5, 8), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_10503() -> Tensor[(10, 4, 14), float64] {
  %1140 = @func_8298() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1140.0
}

def @func_12519() -> Tensor[(10, 4, 14), float64] {
  %1141 = @func_4177() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
  %1141.3
}

def @func_12778() -> Tensor[(3, 8, 7), int64] {
  %1142 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1142.0
}

def @func_11342() -> (Tensor[(3, 8, 7), int64],) {
  %1143 = @func_3899() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1143,)
}

def @func_19906() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %1144 = @func_7252() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1145 = @func_13314() /* ty=Tensor[(3, 8, 7), float32] */;
  %1146 = %1144.0;
  (%1145, %1146)
}

def @func_17015(%var_16987: Tensor[(15, 6, 11), uint8], %var_16988: Tensor[(15, 6, 11), uint8]) -> (Tensor[(15, 6, 11), uint8],) {
  %1147 = cast(%var_16988, dtype="uint8") /* ty=Tensor[(15, 6, 11), uint8] */;
  %1148 = shape_of(%var_16987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1149 = cast(%var_16987, dtype="uint8") /* ty=Tensor[(15, 6, 11), uint8] */;
  %1150 = dyn.reshape(%1147, %1148, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1151 = bitwise_and(%1149, %1150) /* ty=Tensor[(15, 6, 11), uint8] */;
  (%1151,)
}

def @func_17084() -> Tensor[(3, 8, 7), int64] {
  @func_4003() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_7423() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %1156 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
    %1152 = @func_7275() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1153 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %1154 = %1152.0;
    %1155 = %1153.0;
    (%1154, %1155)
  };
  %1156() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */
}

def @func_3594() -> Tensor[(3, 8, 7), float32] {
  @func_3592() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_3343() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  @func_3341() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_5335() -> Tensor[(2, 7, 7), float32] {
  %1158 = fn () -> Tensor[(2, 7, 7), float32] {
    %1157 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
    %1157.0
  };
  %1158() /* ty=Tensor[(2, 7, 7), float32] */
}

def @func_12662() -> (Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) {
  @func_12660() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) */
}

def @func_16568() -> (Tensor[(10, 4, 14), float64],) {
  %1161 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %1159 = @func_12414() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %1160 = %1159.1;
    (%1160,)
  };
  %1161() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_4741() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  @func_4739() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */
}

def @func_6662() -> (Tensor[(2, 7, 7), float32],) {
  @func_6660() /* ty=(Tensor[(2, 7, 7), float32],) */
}

def @func_4005() -> Tensor[(3, 8, 7), int64] {
  @func_4003() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_5274() -> Tensor[(10, 4, 14), float64] {
  @func_5272() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_20472(%var_20470: Tensor[(560), float64], %var_20471: Tensor[(18), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(560), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), bool], Tensor[(18), float64], Tensor[(1, 98), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32], Tensor[(90), float64]) {
  %1181 = fn (%var_20414: Tensor[(560), float64], %var_20431: Tensor[(18), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(560), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), bool], Tensor[(18), float64], Tensor[(1, 98), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32], Tensor[(90), float64]) {
    %1162 = cast(%var_20414, dtype="float64") /* ty=Tensor[(560), float64] */;
    %1163 = reshape(%1162, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), float64] */;
    %1164 = @func_6104() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %1165 = cast(%var_20431, dtype="float64") /* ty=Tensor[(18), float64] */;
    %1166 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 98), float32] */, dtype="float32") /* ty=Tensor[(1, 98), float32] */;
    %1167 = reshape(%1165, newshape=[18]) /* ty=Tensor[(18), float64] */;
    %1168 = reshape(%1166, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), float32] */;
    %1169 = @func_19041(%1167, %1168) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, ?, 6), bool], Tensor[(2, 7, 7), bool], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) */;
    %1170 = @func_2213() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1171 = @func_14130() /* ty=(Tensor[(10, 4, 14), float32],) */;
    %1172 = @func_7756() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
    %1173 = @func_11130() /* ty=Tensor[(3, 8, 7), int64] */;
    %1174 = @func_19652() /* ty=Tensor[(3, 8, 7), int64] */;
    %1175 = @func_7030(%1163) /* ty=Tensor[(10, 4, 14), float32] */;
    %1176 = %1164.1;
    %1177 = %1169.2;
    %1178 = %1170.0;
    %1179 = %1171.0;
    %1180 = %1172.2;
    (%1173, %1174, %1175, %var_20414, %1176, %1177, %var_20431, meta[relay.Constant][24] /* ty=Tensor[(1, 98), float32] */, %1178, %1179, %1180)
  };
  %1181(%var_20470, %var_20471) /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(560), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), bool], Tensor[(18), float64], Tensor[(1, 98), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32], Tensor[(90), float64]) */
}

def @func_20258() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %1182 = @func_14375() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %1183 = @func_18479() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 6, 6), float32]) */;
  %1184 = %1182.0;
  %1185 = %1183.0;
  (%1184, %1185)
}

def @func_7336() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float32]) {
  %1186 = @func_2996() /* ty=Tensor[(10, 4, 14), float64] */;
  %1187 = cast(%1186, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  %1188 = reshape(%1187, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), float64] */;
  %1189 = @func_7030(%1188) /* ty=Tensor[(10, 4, 14), float32] */;
  (%1186, %1189)
}

def @func_867() -> (Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_19728() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) {
  %1195 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) {
    %1190 = @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %1191 = @func_14695() /* ty=(Tensor[(3, 6, 6), float32],) */;
    %1192 = %1190.1;
    %1193 = @func_16306() /* ty=Tensor[(3, 8, 7), float32] */;
    %1194 = %1191.0;
    (%1192, %1193, %1194)
  };
  %1195() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) */
}

def @func_18434() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) {
  @func_18432() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */
}

def @func_4975() -> (Tensor[(10, 4, 14), float64],) {
  @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_15682() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) {
  @func_15680() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64]) */
}

def @func_13160() -> (Tensor[(2, 7, 7), float32],) {
  @func_13158() /* ty=(Tensor[(2, 7, 7), float32],) */
}

def @func_10428() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %1204 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
    %1196 = @func_8298() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %1197 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %1198 = @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1199 = @func_7805() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32]) */;
    %1200 = %1196.1;
    %1201 = %1197.0;
    %1202 = %1198.0;
    %1203 = %1199.0;
    (%1200, %1201, %1202, %1203)
  };
  %1204() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */
}

def @func_20071() -> Tensor[(3, 8, 7), int64] {
  %1205 = @func_19346() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1205.0
}

def @func_4203(%var_4202: Tensor[(2016), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) {
  %1213 = fn (%var_4192: Tensor[(2016), float64]) -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) {
    %1206 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %1207 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
    %1208 = cast(%var_4192, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %1209 = reshape(%1208, newshape=[16, 14, 9]) /* ty=Tensor[(16, 14, 9), float64] */;
    %1210 = %1206.3;
    %1211 = %1207.0;
    %1212 = @func_1399(%1209) /* ty=Tensor[(16, 14, 9), float64] */;
    (%1210, %1211, %1212, %var_4192)
  };
  %1213(%var_4202) /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32], Tensor[(16, 14, 9), float64], Tensor[(2016), float64]) */
}

def @func_18725() -> Tensor[(3, 8, 7), float32] {
  %1214 = fn () -> Tensor[(3, 8, 7), float32] {
    @func_10828() /* ty=Tensor[(3, 8, 7), float32] */
  };
  %1214() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_17993(%var_17991: Tensor[(594), uint32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(66, 9), uint64]) {
  @func_17990(%var_17991) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(66, 9), uint64]) */
}

def @func_19591() -> Tensor[(3, 8, 7), float32] {
  %1215 = @func_14375() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64]) */;
  %1215.0
}

def @func_12084() -> (Tensor[(10, 4, 14), float64],) {
  @func_12082() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_17710(%var_17708: Tensor[(3, 6, 7), uint32], %var_17709: Tensor[(3, 6, 7), uint32]) -> (Tensor[(3, 6, 7), uint32],) {
  %1221 = fn (%var_17655: Tensor[(3, 6, 7), uint32], %var_17656: Tensor[(3, 6, 7), uint32]) -> (Tensor[(3, 6, 7), uint32],) {
    %1216 = cast(%var_17656, dtype="uint32") /* ty=Tensor[(3, 6, 7), uint32] */;
    %1217 = shape_of(%var_17655, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1218 = cast(%var_17655, dtype="uint32") /* ty=Tensor[(3, 6, 7), uint32] */;
    %1219 = dyn.reshape(%1216, %1217, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1220 = left_shift(%1218, %1219) /* ty=Tensor[(3, 6, 7), uint32] */;
    (%1220,)
  };
  %1221(%var_17708, %var_17709) /* ty=(Tensor[(3, 6, 7), uint32],) */
}

def @func_10298() -> Tensor[(3, 8, 7), int64] {
  @func_10296() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_14201() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1222 = @func_7252() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1223 = @func_6864() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1224 = %1222.0;
  %1225 = %1223.0;
  (%1224, %1225)
}

def @func_6435() -> (Tensor[(10, 4, 14), float64],) {
  %1226 = @func_4461() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */;
  %1227 = %1226.0;
  (%1227,)
}

def @func_5258() -> (Tensor[(10, 4, 14), float64],) {
  @func_5256() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_12646() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  @func_12644() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_15912() -> (Tensor[(3, 8, 7), int64],) {
  %1228 = @func_10687() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1228,)
}

def @func_11817() -> (Tensor[(10, 4, 14), float64],) {
  %1229 = @func_8546() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) */;
  %1230 = %1229.1;
  (%1230,)
}

def @func_949() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_17066() -> Tensor[(3, 8, 7), int64] {
  @func_17064() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_6660() -> (Tensor[(2, 7, 7), float32],) {
  %1231 = @func_4522() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1232 = %1231.1;
  (%1232,)
}

def @func_17146() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %1240 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
    %1233 = @func_15414() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1234 = @func_3413() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64]) */;
    %1235 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1236 = %1233.0;
    %1237 = @func_2996() /* ty=Tensor[(10, 4, 14), float64] */;
    %1238 = %1234.1;
    %1239 = %1235.0;
    (%1236, %1237, %1238, %1239)
  };
  %1240() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_15552() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) {
  @func_15550() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */
}

def @func_11029() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  @func_11027() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */
}

def @func_8886() -> (Tensor[(10, 4, 14), float64],) {
  %1241 = @func_1742() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %1242 = %1241.3;
  (%1242,)
}

def @func_11440() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  @func_11438() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */
}

def @func_13699() -> (Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) {
  @func_13697() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */
}

def @func_14414() -> (Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1249 = fn () -> (Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
    %1243 = @func_8689() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 3, 10), float64], Tensor[(90), float64]) */;
    %1244 = @func_11817() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1245 = @func_14070() /* ty=Tensor[(3, 6, 6), float32] */;
    %1246 = @func_5064() /* ty=Tensor[(10, 4, 14), float64] */;
    %1247 = %1243.1;
    %1248 = %1244.0;
    (%1245, %1246, %1247, %1248)
  };
  %1249() /* ty=(Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_16307() -> Tensor[(3, 8, 7), float32] {
  %1251 = fn () -> Tensor[(3, 8, 7), float32] {
    %1250 = @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %1250.0
  };
  %1251() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_4973() -> (Tensor[(10, 4, 14), float64],) {
  %1252 = @func_3771() /* ty=Tensor[(10, 4, 14), float64] */;
  (%1252,)
}

def @func_10080() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1253 = @func_5937() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1254 = %1253.0;
  %1255 = @func_3417() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1254, %1255)
}

def @func_4461() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) {
  %1256 = @func_3796() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
  %1257 = %1256.2;
  %1258 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
  %1259 = @func_3417() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1257, %1258, %1259)
}

def @func_16960() -> (Tensor[(10, 4, 14), float32],) {
  %1264 = fn () -> (Tensor[(10, 4, 14), float32],) {
    %1260 = @func_14130() /* ty=(Tensor[(10, 4, 14), float32],) */;
    %1261 = %1260.0;
    %1262 = cast(%1261, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
    %1263 = acosh(%1262) /* ty=Tensor[(10, 4, 14), float32] */;
    (%1263,)
  };
  %1264() /* ty=(Tensor[(10, 4, 14), float32],) */
}

def @func_17925() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %1268 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
    %1265 = @func_11027() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
    %1266 = %1265.1;
    %1267 = @func_10331() /* ty=Tensor[(10, 4, 14), float64] */;
    (%1266, %1267)
  };
  %1268() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */
}

def @func_18628() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1269 = @func_13482() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1270 = @func_12778() /* ty=Tensor[(3, 8, 7), int64] */;
  %1271 = %1269.2;
  (%1270, %1271)
}

def @func_3275() -> (Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1285 = fn () -> (Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
    %1272 = @func_972() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1273 = %1272.0;
    %1274 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 4, 14), float64] */, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
    %1275 = shape_of(%1273, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1276 = cast(%1273, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
    %1277 = dyn.reshape(%1274, %1275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1278 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %1279 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1280 = @func_929() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1281 = greater(%1276, %1277) /* ty=Tensor[(10, 4, 14), bool] */;
    %1282 = %1278.0;
    %1283 = %1279.0;
    %1284 = %1280.0;
    (%1281, %1282, %1283, %1284)
  };
  %1285() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_12064(%var_12054: Tensor[(4, 11, 6), int64], %var_12055: Tensor[(4, 11, 6), int64]) -> Tensor[(4, 11, 6), int64] {
  %1286 = cast(%var_12055, dtype="int64") /* ty=Tensor[(4, 11, 6), int64] */;
  %1287 = shape_of(%var_12054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1288 = cast(%var_12054, dtype="int64") /* ty=Tensor[(4, 11, 6), int64] */;
  %1289 = dyn.reshape(%1286, %1287, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  minimum(%1288, %1289) /* ty=Tensor[(4, 11, 6), int64] */
}

def @func_5939() -> (Tensor[(3, 8, 7), int64],) {
  @func_5937() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_8723() -> (Tensor[(3, 8, 7), int64],) {
  %1290 = @func_3848() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1291 = %1290.0;
  (%1291,)
}

def @func_7581() -> (Tensor[(3, 8, 7), int64],) {
  %1292 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1293 = %1292.4;
  (%1293,)
}

def @func_11438() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  %1294 = @func_2698() /* ty=(Tensor[(2, 7, 7), float32],) */;
  %1295 = @func_4003() /* ty=Tensor[(3, 8, 7), int64] */;
  %1296 = %1294.0;
  (%1295, %1296)
}

def @func_7301() -> Tensor[(3, 8, 7), float64] {
  @func_7299() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_13115(%var_13113: Tensor[(2016), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(2016), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(16, 14, 9), float64]) {
  @func_13112(%var_13113) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(2016), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(16, 14, 9), float64]) */
}

def @func_8980(%var_8979: Tensor[(16, 2, 4), float32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(16, 2, 4), int64], Tensor[(3, 8, 7), int64]) {
  %1317 = fn (%var_8903: Tensor[(16, 2, 4), float32]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(16, 2, 4), int64], Tensor[(3, 8, 7), int64]) {
    %1297 = @func_5908() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
    %1298 = @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1299 = cast(%var_8903, dtype="float32") /* ty=Tensor[(16, 2, 4), float32] */;
    %1300 = asinh(%1299) /* ty=Tensor[(16, 2, 4), float32] */;
    %1301 = cast(%1300, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
    %1302 = erf(%1301) /* ty=Tensor[(16, 2, 4), float64] */;
    %1303 = cast(%1302, dtype="bool") /* ty=Tensor[(16, 2, 4), bool] */;
    %1304 = shape_of(%1300, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1305 = cast(%1300, dtype="bool") /* ty=Tensor[(16, 2, 4), bool] */;
    %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1307 = less(%1305, %1306) /* ty=Tensor[(16, 2, 4), bool] */;
    %1308 = cast(%1300, dtype="int64") /* ty=Tensor[(16, 2, 4), int64] */;
    %1309 = shape_of(%1307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1310 = cast(%1307, dtype="int64") /* ty=Tensor[(16, 2, 4), int64] */;
    %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1312 = %1297.0;
    %1313 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
    %1314 = %1298.0;
    %1315 = subtract(%1310, %1311) /* ty=Tensor[(16, 2, 4), int64] */;
    %1316 = @func_2459() /* ty=Tensor[(3, 8, 7), int64] */;
    (%1312, %1313, %1314, %1315, %1316)
  };
  %1317(%var_8979) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(16, 2, 4), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_12948(%var_12937: Tensor[(8, 3, 3), int8], %var_12938: Tensor[(8, 3, 3), int8]) -> (Tensor[(8, 3, 3), bool],) {
  %1318 = cast(%var_12938, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %1319 = shape_of(%var_12937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1320 = cast(%var_12937, dtype="bool") /* ty=Tensor[(8, 3, 3), bool] */;
  %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1322 = less(%1320, %1321) /* ty=Tensor[(8, 3, 3), bool] */;
  (%1322,)
}

def @func_16745() -> (Tensor[(3, 8, 7), int64],) {
  %1325 = fn () -> (Tensor[(3, 8, 7), int64],) {
    %1323 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1324 = %1323.0;
    (%1324,)
  };
  %1325() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_8040() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  @func_8038() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_2187(%var_2185: Tensor[(12, 7, 13), float32]) -> Tensor[(12, 7, 13), int32] {
  @func_2184(%var_2185) /* ty=Tensor[(12, 7, 13), int32] */
}

def @func_12424() -> (Tensor[(3, 8, 7), float32],) {
  %1328 = fn () -> (Tensor[(3, 8, 7), float32],) {
    %1326 = @func_4022() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %1327 = %1326.0;
    (%1327,)
  };
  %1328() /* ty=(Tensor[(3, 8, 7), float32],) */
}

def @func_16347() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1334 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
    %1329 = @func_7068() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1330 = @func_744() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1331 = %1329.0;
    %1332 = %1330.0;
    %1333 = @func_16190() /* ty=Tensor[(3, 8, 7), int64] */;
    (%1331, %1332, %1333)
  };
  %1334() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_9578(%var_9576: Tensor[(5, 4, 2), float64]) -> (Tensor[(5, 4, 2), float64],) {
  @func_9575(%var_9576) /* ty=(Tensor[(5, 4, 2), float64],) */
}

def @func_18006() -> Tensor[(3, 8, 7), float64] {
  %1336 = fn () -> Tensor[(3, 8, 7), float64] {
    %1335 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %1335.0
  };
  %1336() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_8472(%var_8470: Tensor[(5, 6, 4), float64]) -> (Tensor[(5, 6, 4), float64],) {
  @func_8469(%var_8470) /* ty=(Tensor[(5, 6, 4), float64],) */
}

def @func_3366() -> (Tensor[(3, 8, 7), int64],) {
  @func_3364() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_18786() -> Tensor[(3, 8, 7), uint16] {
  %1338 = fn () -> Tensor[(3, 8, 7), uint16] {
    %1337 = @func_16865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(3, 8, 7), int64]) */;
    %1337.1
  };
  %1338() /* ty=Tensor[(3, 8, 7), uint16] */
}

def @func_17314() -> (Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  @func_17312() /* ty=(Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_19245(%var_19243: Tensor[(15, 13, 11), float32], %var_19244: Tensor[(15, 13, 11), float32]) -> Tensor[(15, 13, 11), uint64] {
  %1345 = fn (%var_19235: Tensor[(15, 13, 11), float32], %var_19238: Tensor[(15, 13, 11), float32]) -> Tensor[(15, 13, 11), uint64] {
    %1339 = cast(%var_19235, dtype="float32") /* ty=Tensor[(15, 13, 11), float32] */;
    %1340 = acos(%1339) /* ty=Tensor[(15, 13, 11), float32] */;
    %1341 = cast(%var_19238, dtype="uint64") /* ty=Tensor[(15, 13, 11), uint64] */;
    %1342 = shape_of(%1340, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1343 = cast(%1340, dtype="uint64") /* ty=Tensor[(15, 13, 11), uint64] */;
    %1344 = dyn.reshape(%1341, %1342, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%1343, %1344) /* ty=Tensor[(15, 13, 11), uint64] */
  };
  %1345(%var_19243, %var_19244) /* ty=Tensor[(15, 13, 11), uint64] */
}

def @func_15396() -> Tensor[(10, 4, 14), float64] {
  %1346 = @func_2600() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1346.0
}

def @func_17255() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
  %1351 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) {
    %1347 = @func_15714() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1348 = @func_11661() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) */;
    %1349 = %1347.0;
    %1350 = %1348.0;
    (%1349, %1350)
  };
  %1351() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */
}

def @func_13759(%var_13758: Tensor[(12, 14, 5), float64]) -> Tensor[(12, 14, 5), float64] {
  %1356 = fn (%var_13750: Tensor[(12, 14, 5), float64]) -> Tensor[(12, 14, 5), float64] {
    %1352 = cast(%var_13750, dtype="float64") /* ty=Tensor[(12, 14, 5), float64] */;
    %1353 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(12, 14, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1354 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 5), float64] */;
    %1355 = dyn.reshape(%1352, %1353, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%1354, %1355) /* ty=Tensor[(12, 14, 5), float64] */
  };
  %1356(%var_13758) /* ty=Tensor[(12, 14, 5), float64] */
}

def @func_4677() -> Tensor[(10, 4, 14), float64] {
  @func_4675() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_10332() -> Tensor[(10, 4, 14), float64] {
  %1358 = fn () -> Tensor[(10, 4, 14), float64] {
    %1357 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1357.0
  };
  %1358() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_15233() -> (Tensor[(10, 4, 14), float64],) {
  @func_15231() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_9817() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1359 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1360 = @func_6435() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1361 = %1359.0;
  %1362 = %1360.0;
  (%1361, %1362)
}

def @func_16866() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(3, 8, 7), int64]) {
  %1368 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(3, 8, 7), int64]) {
    %1363 = @func_6864() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1364 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %1365 = %1363.0;
    %1366 = %1364.3;
    %1367 = @func_2428() /* ty=Tensor[(3, 8, 7), int64] */;
    (%1365, %1366, %1367)
  };
  %1368() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(3, 8, 7), int64]) */
}

def @func_18329(%var_18328: Tensor[(14, 4, 13), float64]) -> (Tensor[(14, 4, 13), float64], Tensor[(14, 4, 13), float32]) {
  %1373 = fn (%var_18321: Tensor[(14, 4, 13), float64]) -> (Tensor[(14, 4, 13), float64], Tensor[(14, 4, 13), float32]) {
    %1369 = cast(%var_18321, dtype="float64") /* ty=Tensor[(14, 4, 13), float64] */;
    %1370 = cast(%var_18321, dtype="float32") /* ty=Tensor[(14, 4, 13), float32] */;
    %1371 = rsqrt(%1369) /* ty=Tensor[(14, 4, 13), float64] */;
    %1372 = acosh(%1370) /* ty=Tensor[(14, 4, 13), float32] */;
    (%1371, %1372)
  };
  %1373(%var_18328) /* ty=(Tensor[(14, 4, 13), float64], Tensor[(14, 4, 13), float32]) */
}

def @func_10337() -> Tensor[(10, 4, 14), float64] {
  @func_10335() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_14072() -> Tensor[(3, 6, 6), float32] {
  @func_14070() /* ty=Tensor[(3, 6, 6), float32] */
}

def @func_6694() -> (Tensor[(11, 8, 3), float64],) {
  %1376 = fn () -> (Tensor[(11, 8, 3), float64],) {
    %1374 = @func_3438() /* ty=(Tensor[(11, 8, 3), float64], Tensor[(3, 8, 7), int64]) */;
    %1375 = %1374.0;
    (%1375,)
  };
  %1376() /* ty=(Tensor[(11, 8, 3), float64],) */
}

def @func_12451() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  @func_12449() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_5919() -> (Tensor[(3, 8, 7), int64],) {
  %1377 = @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1378 = %1377.3;
  (%1378,)
}

def @func_13482() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1379 = @func_9201() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1380 = @func_10188() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
  %1381 = @func_8723() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1382 = %1379.1;
  %1383 = %1380.2;
  %1384 = %1381.0;
  (%1382, %1383, %1384)
}

def @func_1913() -> (Tensor[(3, 8, 7), int64],) {
  %1385 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1386 = %1385.0;
  (%1386,)
}

def @func_14468() -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
  %1392 = fn () -> (Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) {
    %1387 = @func_7124() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
    %1388 = @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %1389 = %1387.1;
    %1390 = %1388.1;
    %1391 = @func_5272() /* ty=Tensor[(10, 4, 14), float64] */;
    (%1389, %1390, %1391)
  };
  %1392() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */
}

def @func_19120() -> Tensor[(3, 8, 7), float32] {
  %1393 = fn () -> Tensor[(3, 8, 7), float32] {
    @func_2634() /* ty=Tensor[(3, 8, 7), float32] */
  };
  %1393() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_7276() -> (Tensor[(3, 8, 7), int64],) {
  %1396 = fn () -> (Tensor[(3, 8, 7), int64],) {
    %1394 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1395 = %1394.0;
    (%1395,)
  };
  %1396() /* ty=(Tensor[(3, 8, 7), int64],) */
}

def @func_11580() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  %1402 = fn () -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
    %1397 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %1398 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1399 = %1397.0;
    %1400 = @func_1150() /* ty=Tensor[(3, 8, 7), float32] */;
    %1401 = %1398.0;
    (%1399, %1400, %1401)
  };
  %1402() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */
}

def @func_16777() -> Tensor[(3, 8, 7), float32] {
  @func_16775() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_3772() -> Tensor[(10, 4, 14), float64] {
  %1405 = fn () -> Tensor[(10, 4, 14), float64] {
    %1403 = @func_2227() /* ty=Tensor[(10, 4, 14), float64] */;
    %1404 = cast(%1403, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
    rsqrt(%1404) /* ty=Tensor[(10, 4, 14), float64] */
  };
  %1405() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_4739() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 6, 6), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %1406 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1407 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1408 = @func_4011() /* ty=(Tensor[(3, 6, 6), float32],) */;
  %1409 = @func_1913() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1410 = %1406.0;
  %1411 = %1407.1;
  %1412 = %1408.0;
  %1413 = %1409.0;
  %1414 = @func_3319() /* ty=Tensor[(3, 8, 7), float64] */;
  (%1410, %1411, %1412, %1413, %1414)
}

def @func_10560() -> (Tensor[(3, 8, 7), float32],) {
  %1415 = @func_7471() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */;
  %1416 = %1415.1;
  (%1416,)
}

def @func_17086() -> Tensor[(3, 8, 7), int64] {
  @func_17084() /* ty=Tensor[(3, 8, 7), int64] */
}

def @func_16631() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1423 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
    %1417 = @func_10478() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
    %1418 = @func_6723() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %1419 = @func_6614() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) */;
    %1420 = %1417.1;
    %1421 = %1418.1;
    %1422 = %1419.0;
    (%1420, %1421, %1422)
  };
  %1423() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */
}

def @func_11389() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  @func_11387() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */
}

def @func_5794() -> Tensor[(3, 8, 7), float32] {
  %1425 = fn () -> Tensor[(3, 8, 7), float32] {
    %1424 = @func_5299() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 6, 6), float32]) */;
    %1424.0
  };
  %1425() /* ty=Tensor[(3, 8, 7), float32] */
}

def @func_10335() -> Tensor[(10, 4, 14), float64] {
  %1426 = @func_2074() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1426.0
}

def @func_16544() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  %1427 = @func_16306() /* ty=Tensor[(3, 8, 7), float32] */;
  %1428 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1427, %1428)
}

def @func_18063(%var_18061: Tensor[(10, 7, 14), int16]) -> (Tensor[(10, 7, 14), int16],) {
  @func_18060(%var_18061) /* ty=(Tensor[(10, 7, 14), int16],) */
}

def @func_10595() -> Tensor[(10, 4, 14), bool] {
  @func_10593() /* ty=Tensor[(10, 4, 14), bool] */
}

def @func_12644() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %1429 = @func_1380() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1430 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1431 = %1429.0;
  %1432 = %1430.2;
  (%1431, %1432)
}

def @func_19908() -> (Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) {
  @func_19906() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */
}

def @func_15716() -> (Tensor[(10, 4, 14), float64],) {
  @func_15714() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_18216() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %1433 = @func_14252() /* ty=Tensor[(10, 4, 14), float64] */;
  %1434 = @func_17064() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1433, %1434)
}

def @func_6469() -> (Tensor[(3, 8, 7), float64],) {
  %1437 = fn () -> (Tensor[(3, 8, 7), float64],) {
    %1435 = @func_1807() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */;
    %1436 = %1435.1;
    (%1436,)
  };
  %1437() /* ty=(Tensor[(3, 8, 7), float64],) */
}

def @func_6104() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1438 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1439 = @func_947() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
  %1440 = %1438.1;
  %1441 = %1439.1;
  (%1440, %1441)
}

def @func_2227() -> Tensor[(10, 4, 14), float64] {
  %1442 = @func_865() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(560), bool], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), uint16], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */;
  %1442.2
}

def @func_1808() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
  %1449 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) {
    %1443 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1444 = @func_1531() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1445 = %1444.0;
    %1446 = cast(%1445, dtype="float64") /* ty=Tensor[(3, 8, 7), float64] */;
    %1447 = %1443.0;
    %1448 = acos(%1446) /* ty=Tensor[(3, 8, 7), float64] */;
    (%1447, %1448)
  };
  %1449() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64]) */
}

def @func_15492() -> (Tensor[(3, 8, 7), float64], Tensor[(2, 7, 7), uint8], Tensor[(2, 7, 7), float64], Tensor[(10, 4, 14), uint32]) {
  %1450 = @func_1953() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(3, 8, 7), int64]) */;
  %1451 = %1450.0;
  %1452 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 7, 7), float32] */, dtype="uint8") /* ty=Tensor[(2, 7, 7), uint8] */;
  %1453 = shape_of(%1451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1454 = cast(%1451, dtype="uint8") /* ty=Tensor[(2, 7, 7), uint8] */;
  %1455 = dyn.reshape(%1452, %1453, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1456 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 7, 7), float32] */, dtype="float64") /* ty=Tensor[(2, 7, 7), float64] */;
  %1457 = @func_11231() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32]) */;
  %1458 = @func_12046() /* ty=Tensor[(3, 8, 7), float64] */;
  %1459 = left_shift(%1454, %1455) /* ty=Tensor[(2, 7, 7), uint8] */;
  %1460 = cosh(%1456) /* ty=Tensor[(2, 7, 7), float64] */;
  %1461 = %1457.3;
  (%1458, %1459, %1460, %1461)
}

def @func_13414(%var_13385: Tensor[(9, 3, 7), bool], %var_13386: Tensor[(9, 3, 7), bool]) -> Tensor[(9, 3, 7), bool] {
  %1462 = cast(%var_13386, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %1463 = shape_of(%var_13385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1464 = cast(%var_13385, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %1465 = dyn.reshape(%1462, %1463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1464, %1465) /* ty=Tensor[(9, 3, 7), bool] */
}

def @func_10676() -> Tensor[(3, 8, 7), float64] {
  %1467 = fn () -> Tensor[(3, 8, 7), float64] {
    %1466 = @func_4177() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %1466.1
  };
  %1467() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_9203() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  @func_9201() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */
}

def @func_2214() -> (Tensor[(10, 4, 14), float64],) {
  %1469 = fn () -> (Tensor[(10, 4, 14), float64],) {
    %1468 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
    (%1468,)
  };
  %1469() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_1496() -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_4675() -> Tensor[(10, 4, 14), float64] {
  %1470 = @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1470.0
}

def @func_19547() -> (Tensor[(560), bool],) {
  @func_19545() /* ty=(Tensor[(560), bool],) */
}

def @func_9778() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1479 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
    %1471 = @func_6415() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float32], Tensor[(3, 6, 6), float32], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %1472 = @func_2730() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %1473 = @func_9201() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) */;
    %1474 = @func_5937() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1475 = %1471.5;
    %1476 = %1472.0;
    %1477 = %1473.2;
    %1478 = %1474.0;
    (%1475, %1476, %1477, %1478)
  };
  %1479() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_1611() -> (Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) {
  %1483 = fn () -> (Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) {
    %1480 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 7, 7), float32] */, dtype="float32") /* ty=Tensor[(2, 7, 7), float32] */;
    %1481 = erf(%1480) /* ty=Tensor[(2, 7, 7), float32] */;
    %1482 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
    (%1481, %1482)
  };
  %1483() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */
}

def @func_6759(%var_6730: Tensor[(3, 1, 6), float64]) -> Tensor[(3, 1, 6), float64] {
  %1484 = cast(%var_6730, dtype="float64") /* ty=Tensor[(3, 1, 6), float64] */;
  rsqrt(%1484) /* ty=Tensor[(3, 1, 6), float64] */
}

def @func_14395() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_14393() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_2677() -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) {
  %1489 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) {
    %1485 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %1486 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
    %1487 = @func_1100() /* ty=Tensor[(10, 4, 14), uint32] */;
    %1488 = %1485.4;
    (%1486, %1487, %1488)
  };
  %1489() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */
}

def @func_6864() -> (Tensor[(10, 4, 14), float64],) {
  %1490 = @func_4675() /* ty=Tensor[(10, 4, 14), float64] */;
  (%1490,)
}

def @func_6437() -> (Tensor[(10, 4, 14), float64],) {
  @func_6435() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_7696() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  %1491 = @func_3633() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1492 = @func_7275() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1493 = %1491.2;
  %1494 = %1492.0;
  (%1493, %1494)
}

def @func_15266() -> Tensor[(3, 8, 7), float64] {
  %1496 = fn () -> Tensor[(3, 8, 7), float64] {
    %1495 = @func_11579() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), float64]) */;
    %1495.0
  };
  %1496() /* ty=Tensor[(3, 8, 7), float64] */
}

def @func_17887(%var_17886: Tensor[(15, 11, 9), float64]) -> (Tensor[(15, 11, 9), float64], Tensor[(15, 11, 9), float32]) {
  %1501 = fn (%var_17865: Tensor[(15, 11, 9), float64]) -> (Tensor[(15, 11, 9), float64], Tensor[(15, 11, 9), float32]) {
    %1497 = cast(%var_17865, dtype="float64") /* ty=Tensor[(15, 11, 9), float64] */;
    %1498 = cast(%var_17865, dtype="float32") /* ty=Tensor[(15, 11, 9), float32] */;
    %1499 = erf(%1497) /* ty=Tensor[(15, 11, 9), float64] */;
    %1500 = atanh(%1498) /* ty=Tensor[(15, 11, 9), float32] */;
    (%1499, %1500)
  };
  %1501(%var_17886) /* ty=(Tensor[(15, 11, 9), float64], Tensor[(15, 11, 9), float32]) */
}

def @func_7068() -> (Tensor[(3, 8, 7), int64],) {
  %1502 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1503 = %1502.0;
  (%1503,)
}

def @func_10296() -> Tensor[(3, 8, 7), int64] {
  %1504 = @func_4461() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64]) */;
  %1504.2
}

def @func_13500() -> Tensor[(10, 4, 14), float64] {
  %1506 = fn () -> Tensor[(10, 4, 14), float64] {
    %1505 = @func_6926() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1505.0
  };
  %1506() /* ty=Tensor[(10, 4, 14), float64] */
}

def @func_7472() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) {
  %1511 = fn () -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) {
    %1507 = @func_6104() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %1508 = @func_1494() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
    %1509 = %1507.1;
    %1510 = %1508.0;
    (%1509, %1510)
  };
  %1511() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */
}

def @func_15875() -> Tensor[(11, 8, 3), float64] {
  %1513 = fn () -> Tensor[(11, 8, 3), float64] {
    %1512 = @func_6693() /* ty=(Tensor[(11, 8, 3), float64],) */;
    %1512.0
  };
  %1513() /* ty=Tensor[(11, 8, 3), float64] */
}

def @func_17826() -> Tensor[(5, 4, 2), float64] {
  %1514 = @func_13890() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(5, 4, 2), float64], Tensor[(40), float64], Tensor[(3, 8, 7), float32], Tensor[(10, 4, 14), bool]) */;
  %1514.2
}

def @func_12660() -> (Tensor[(10, 4, 14), float64], Tensor[(2, 7, 7), float32]) {
  %1515 = @func_8100() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1516 = @func_7124() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
  %1517 = %1515.0;
  %1518 = %1516.1;
  (%1517, %1518)
}

def @func_14865(%var_14864: Tensor[(2016), float64]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(2016), float64], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), float64]) {
  %1547 = fn (%var_14831: Tensor[(2016), float64]) -> (Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(2016), float64], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), float64]) {
    %1519 = @func_10560() /* ty=(Tensor[(3, 8, 7), float32],) */;
    %1520 = @func_5584() /* ty=(Tensor[(3, 8, 7), int64],) */;
    %1521 = cast(meta[relay.Constant][29] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %1522 = reshape(%1521, newshape=[28, 72]) /* ty=Tensor[(28, 72), float64] */;
    %1523 = @func_12296(%1522) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(16, 14, 9), float64], Tensor[(28, 72), float64], Tensor[(3, 8, 7), int64]) */;
    %1524 = @func_2384() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %1525 = @func_7471() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), float32]) */;
    %1526 = @func_6468() /* ty=(Tensor[(3, 8, 7), float64],) */;
    %1527 = cast(%var_14831, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %1528 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(2016), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1529 = cast(meta[relay.Constant][29] /* ty=Tensor[(2016), float64] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %1530 = dyn.reshape(%1527, %1528, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1531 = maximum(%1529, %1530) /* ty=Tensor[(2016), float32] */;
    %1532 = cast(meta[relay.Constant][29] /* ty=Tensor[(2016), float64] */, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %1533 = shape_of(%1531, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1534 = cast(%1531, dtype="float64") /* ty=Tensor[(2016), float64] */;
    %1535 = dyn.reshape(%1532, %1533, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1536 = @func_14130() /* ty=(Tensor[(10, 4, 14), float32],) */;
    %1537 = @func_14762() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */;
    %1538 = %1519.0;
    %1539 = %1520.0;
    %1540 = %1523.0;
    %1541 = %1524.0;
    %1542 = %1525.1;
    %1543 = %1526.0;
    %1544 = floor_mod(%1534, %1535) /* ty=Tensor[(2016), float64] */;
    %1545 = %1536.0;
    %1546 = %1537.0;
    (%1538, %1539, %1540, %1541, %1542, %1543, %1544, %1545, %1546)
  };
  %1547(%var_14864) /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(2016), float64], Tensor[(10, 4, 14), float32], Tensor[(3, 8, 7), float64]) */
}

def @func_2698() -> (Tensor[(2, 7, 7), float32],) {
  %1548 = @func_1610() /* ty=(Tensor[(2, 7, 7), float32], Tensor[(10, 4, 14), uint32]) */;
  %1549 = %1548.0;
  (%1549,)
}

def @func_6273() -> (Tensor[(2, 7, 7), float32],) {
  @func_6271() /* ty=(Tensor[(2, 7, 7), float32],) */
}

def @func_500(%var_498: Tensor[(10, 4, 14), bool]) -> (Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) {
  @func_497(%var_498) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */
}

def @func_14906() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64]) {
  %1550 = @func_11387() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) */;
  %1551 = @func_7299() /* ty=Tensor[(3, 8, 7), float64] */;
  %1552 = %1550.1;
  (%1551, %1552)
}

def @func_6866() -> (Tensor[(10, 4, 14), float64],) {
  @func_6864() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_11027() -> (Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), bool]) {
  %1553 = @func_3274() /* ty=(Tensor[(10, 4, 14), bool], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */;
  %1554 = @func_4973() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1555 = @func_737() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1556 = %1554.0;
  %1557 = cast(%1556, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %1558 = reshape(%1557, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), bool] */;
  %1559 = @func_497(%1558) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 4, 14), float64]) */;
  %1560 = %1553.3;
  %1561 = @func_3919() /* ty=Tensor[(3, 8, 7), int64] */;
  %1562 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  %1563 = @func_1015() /* ty=Tensor[(3, 8, 7), int64] */;
  %1564 = %1555.0;
  %1565 = %1559.0;
  (%1560, %1561, %1562, %1563, %1556, %1564, %1565)
}

def @func_7126() -> (Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) {
  @func_7124() /* ty=(Tensor[(3, 8, 7), int64], Tensor[(2, 7, 7), float32]) */
}

def @func_4898() -> (Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) {
  %1570 = fn () -> (Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) {
    %1566 = @func_2968() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) */;
    %1567 = @func_2140() /* ty=(Tensor[(10, 4, 14), float64],) */;
    %1568 = %1566.0;
    %1569 = %1567.0;
    (%1568, %1569)
  };
  %1570() /* ty=(Tensor[(10, 4, 14), uint32], Tensor[(10, 4, 14), float64]) */
}

def @func_13418(%var_13416: Tensor[(9, 3, 7), bool], %var_13417: Tensor[(9, 3, 7), bool]) -> Tensor[(9, 3, 7), bool] {
  @func_13414(%var_13416, %var_13417) /* ty=Tensor[(9, 3, 7), bool] */
}

def @func_8888() -> (Tensor[(10, 4, 14), float64],) {
  @func_8886() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_7938() -> (Tensor[(10, 4, 14), float64],) {
  @func_7936() /* ty=(Tensor[(10, 4, 14), float64],) */
}

def @func_13484() -> (Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) {
  @func_13482() /* ty=(Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(3, 8, 7), int64]) */
}

def @func_4789(%var_4763: Tensor[(3, 3, 10), float64]) -> Tensor[(3, 3, 10), float64] {
  %1571 = cast(%var_4763, dtype="float64") /* ty=Tensor[(3, 3, 10), float64] */;
  asin(%1571) /* ty=Tensor[(3, 3, 10), float64] */
}

def @func_3341() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), int64]) {
  %1572 = @func_1303() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), float32]) */;
  %1573 = @func_758() /* ty=(Tensor[(3, 8, 7), int64],) */;
  %1574 = @func_1331() /* ty=Tensor[(10, 4, 14), float64] */;
  %1575 = %1572.1;
  %1576 = %1573.0;
  (%1574, %1575, %1576)
}

def @func_16594() -> (Tensor[(3, 8, 7), int64],) {
  %1577 = @func_5763() /* ty=Tensor[(3, 8, 7), int64] */;
  (%1577,)
}

def @func_15997() -> Tensor[(3, 6, 6), float32] {
  %1580 = fn () -> Tensor[(3, 6, 6), float32] {
    %1578 = @func_14070() /* ty=Tensor[(3, 6, 6), float32] */;
    %1579 = cast(%1578, dtype="float32") /* ty=Tensor[(3, 6, 6), float32] */;
    asinh(%1579) /* ty=Tensor[(3, 6, 6), float32] */
  };
  %1580() /* ty=Tensor[(3, 6, 6), float32] */
}

def @func_13963(%var_13953: Tensor[(14, 9, 4), float64]) -> (Tensor[(14, 9, 4), float64],) {
  %1581 = cast(%var_13953, dtype="float64") /* ty=Tensor[(14, 9, 4), float64] */;
  %1582 = sigmoid(%1581) /* ty=Tensor[(14, 9, 4), float64] */;
  (%1582,)
}

def @func_3991() -> (Tensor[(10, 4, 14), float64], Tensor[(10, 4, 14), float64]) {
  %1583 = @func_2213() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1584 = @func_2314() /* ty=(Tensor[(10, 4, 14), float64],) */;
  %1585 = %1583.0;
  %1586 = %1584.0;
  (%1585, %1586)
}

def @func_14132() -> (Tensor[(10, 4, 14), float32],) {
  @func_14130() /* ty=(Tensor[(10, 4, 14), float32],) */
}

def @func_8299() -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
  %1590 = fn () -> (Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) {
    %1587 = @func_4177() /* ty=(Tensor[(3, 8, 7), float32], Tensor[(3, 8, 7), float64], Tensor[(3, 8, 7), int64], Tensor[(10, 4, 14), float64]) */;
    %1588 = %1587.3;
    %1589 = @func_2428() /* ty=Tensor[(3, 8, 7), int64] */;
    (%1588, %1589)
  };
  %1590() /* ty=(Tensor[(10, 4, 14), float64], Tensor[(3, 8, 7), int64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen622/build/output.py:6692: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen622/build/output.py", line 6697, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(330) tvmgen_default_fused_reshape_divide_kernel0(float* __restrict__ T_divide, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_divide[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


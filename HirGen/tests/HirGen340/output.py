import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_327 = relay.var("var_327", dtype = "float64", shape = (6, 1, 12))#candidate|327|(6, 1, 12)|var|float64
uop_328 = relay.erf(var_327.astype('float64')) # shape=(6, 1, 12)
bop_335 = relay.logical_xor(var_327.astype('int32'), relay.reshape(uop_328.astype('int32'), relay.shape_of(var_327))) # shape=(6, 1, 12)
output = bop_335
output2 = bop_335
func_340 = relay.Function([var_327,], output)
mod['func_340'] = func_340
mod = relay.transform.InferType()(mod)
var_341 = relay.var("var_341", dtype = "float64", shape = (6, 1, 12))#candidate|341|(6, 1, 12)|var|float64
output = func_340(var_341)
func_342 = relay.Function([var_341], output)
mutated_mod['func_342'] = func_342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_900 = relay.var("var_900", dtype = "float64", shape = (4, 13, 2))#candidate|900|(4, 13, 2)|var|float64
var_901 = relay.var("var_901", dtype = "float64", shape = (4, 13, 2))#candidate|901|(4, 13, 2)|var|float64
bop_902 = relay.floor_mod(var_900.astype('float64'), relay.reshape(var_901.astype('float64'), relay.shape_of(var_900))) # shape=(4, 13, 2)
output = bop_902
output2 = bop_902
func_931 = relay.Function([var_900,var_901,], output)
mod['func_931'] = func_931
mod = relay.transform.InferType()(mod)
mutated_mod['func_931'] = func_931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_931_call = mutated_mod.get_global_var('func_931')
var_933 = relay.var("var_933", dtype = "float64", shape = (4, 13, 2))#candidate|933|(4, 13, 2)|var|float64
var_934 = relay.var("var_934", dtype = "float64", shape = (4, 13, 2))#candidate|934|(4, 13, 2)|var|float64
call_932 = func_931_call(var_933,var_934,)
output = call_932
func_935 = relay.Function([var_933,var_934,], output)
mutated_mod['func_935'] = func_935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_951 = relay.var("var_951", dtype = "float32", shape = (1, 10, 10))#candidate|951|(1, 10, 10)|var|float32
uop_952 = relay.tan(var_951.astype('float32')) # shape=(1, 10, 10)
func_931_call = mod.get_global_var('func_931')
func_935_call = mutated_mod.get_global_var('func_935')
var_968 = relay.var("var_968", dtype = "float64", shape = (1, 104))#candidate|968|(1, 104)|var|float64
call_967 = func_931_call(relay.reshape(var_968.astype('float64'), [4, 13, 2]), relay.reshape(var_968.astype('float64'), [4, 13, 2]), )
call_969 = func_931_call(relay.reshape(var_968.astype('float64'), [4, 13, 2]), relay.reshape(var_968.astype('float64'), [4, 13, 2]), )
func_340_call = mod.get_global_var('func_340')
func_342_call = mutated_mod.get_global_var('func_342')
var_972 = relay.var("var_972", dtype = "float64", shape = (1, 72))#candidate|972|(1, 72)|var|float64
call_971 = func_340_call(relay.reshape(var_972.astype('float64'), [6, 1, 12]))
call_973 = func_340_call(relay.reshape(var_972.astype('float64'), [6, 1, 12]))
bop_980 = relay.maximum(var_972.astype('int64'), relay.reshape(call_971.astype('int64'), relay.shape_of(var_972))) # shape=(1, 72)
bop_983 = relay.maximum(var_972.astype('int64'), relay.reshape(call_973.astype('int64'), relay.shape_of(var_972))) # shape=(1, 72)
uop_984 = relay.rsqrt(uop_952.astype('float32')) # shape=(1, 10, 10)
func_340_call = mod.get_global_var('func_340')
func_342_call = mutated_mod.get_global_var('func_342')
call_989 = func_340_call(relay.reshape(var_972.astype('float64'), [6, 1, 12]))
call_990 = func_340_call(relay.reshape(var_972.astype('float64'), [6, 1, 12]))
func_340_call = mod.get_global_var('func_340')
func_342_call = mutated_mod.get_global_var('func_342')
call_1006 = func_340_call(relay.reshape(var_972.astype('float64'), [6, 1, 12]))
call_1007 = func_340_call(relay.reshape(var_972.astype('float64'), [6, 1, 12]))
bop_1009 = relay.less(uop_984.astype('bool'), relay.reshape(var_951.astype('bool'), relay.shape_of(uop_984))) # shape=(1, 10, 10)
output = relay.Tuple([call_967,var_968,bop_980,call_989,call_1006,bop_1009,])
output2 = relay.Tuple([call_969,var_968,bop_983,call_990,call_1007,bop_1009,])
func_1012 = relay.Function([var_951,var_968,var_972,], output)
mod['func_1012'] = func_1012
mod = relay.transform.InferType()(mod)
mutated_mod['func_1012'] = func_1012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mutated_mod.get_global_var('func_1012')
var_1014 = relay.var("var_1014", dtype = "float32", shape = (1, 10, 10))#candidate|1014|(1, 10, 10)|var|float32
var_1015 = relay.var("var_1015", dtype = "float64", shape = (1, 104))#candidate|1015|(1, 104)|var|float64
var_1016 = relay.var("var_1016", dtype = "float64", shape = (1, 72))#candidate|1016|(1, 72)|var|float64
call_1013 = func_1012_call(var_1014,var_1015,var_1016,)
output = call_1013
func_1017 = relay.Function([var_1014,var_1015,var_1016,], output)
mutated_mod['func_1017'] = func_1017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1649 = relay.var("var_1649", dtype = "float32", shape = (16, 5, 3))#candidate|1649|(16, 5, 3)|var|float32
uop_1650 = relay.sigmoid(var_1649.astype('float32')) # shape=(16, 5, 3)
func_931_call = mod.get_global_var('func_931')
func_935_call = mutated_mod.get_global_var('func_935')
var_1657 = relay.var("var_1657", dtype = "float64", shape = (104,))#candidate|1657|(104,)|var|float64
call_1656 = func_931_call(relay.reshape(var_1657.astype('float64'), [4, 13, 2]), relay.reshape(var_1657.astype('float64'), [4, 13, 2]), )
call_1658 = func_931_call(relay.reshape(var_1657.astype('float64'), [4, 13, 2]), relay.reshape(var_1657.astype('float64'), [4, 13, 2]), )
bop_1660 = relay.minimum(uop_1650.astype('int16'), relay.reshape(var_1649.astype('int16'), relay.shape_of(uop_1650))) # shape=(16, 5, 3)
uop_1672 = relay.atan(bop_1660.astype('float32')) # shape=(16, 5, 3)
uop_1681 = relay.log2(uop_1672.astype('float64')) # shape=(16, 5, 3)
bop_1683 = relay.bitwise_xor(uop_1681.astype('int8'), relay.reshape(uop_1650.astype('int8'), relay.shape_of(uop_1681))) # shape=(16, 5, 3)
func_340_call = mod.get_global_var('func_340')
func_342_call = mutated_mod.get_global_var('func_342')
var_1691 = relay.var("var_1691", dtype = "float64", shape = (72,))#candidate|1691|(72,)|var|float64
call_1690 = func_340_call(relay.reshape(var_1691.astype('float64'), [6, 1, 12]))
call_1692 = func_340_call(relay.reshape(var_1691.astype('float64'), [6, 1, 12]))
output = relay.Tuple([call_1656,var_1657,bop_1683,call_1690,var_1691,])
output2 = relay.Tuple([call_1658,var_1657,bop_1683,call_1692,var_1691,])
func_1697 = relay.Function([var_1649,var_1657,var_1691,], output)
mod['func_1697'] = func_1697
mod = relay.transform.InferType()(mod)
mutated_mod['func_1697'] = func_1697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mutated_mod.get_global_var('func_1697')
var_1699 = relay.var("var_1699", dtype = "float32", shape = (16, 5, 3))#candidate|1699|(16, 5, 3)|var|float32
var_1700 = relay.var("var_1700", dtype = "float64", shape = (104,))#candidate|1700|(104,)|var|float64
var_1701 = relay.var("var_1701", dtype = "float64", shape = (72,))#candidate|1701|(72,)|var|float64
call_1698 = func_1697_call(var_1699,var_1700,var_1701,)
output = call_1698
func_1702 = relay.Function([var_1699,var_1700,var_1701,], output)
mutated_mod['func_1702'] = func_1702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1858 = relay.var("var_1858", dtype = "int64", shape = (8, 6, 14))#candidate|1858|(8, 6, 14)|var|int64
const_1859 = relay.const([[[-6,4,3,9,-3,10,3,-3,5,7,-10,-9,10,7],[6,7,-2,-7,8,-5,-7,8,-8,-2,5,-8,-8,-2],[-10,-6,10,10,6,-1,3,5,10,9,6,-10,1,-6],[6,-7,8,-3,-7,-2,-10,7,-8,3,-6,7,-6,-5],[-4,-3,-10,7,4,-6,-2,-1,-5,6,-1,-3,-3,-2],[-7,3,-7,-4,-1,-5,-10,3,3,-4,4,-2,-1,5]],[[7,-5,2,8,6,-8,-2,1,6,-3,2,7,-1,3],[8,-8,-5,9,-10,-9,-8,5,-2,1,-2,6,4,-2],[-4,7,-4,7,7,-9,5,-5,-6,3,7,-3,10,5],[-3,-1,1,-9,4,-4,-1,7,-10,-9,3,4,7,2],[-7,3,1,8,-3,-9,-2,7,-6,9,9,4,-3,-3],[-8,-10,-2,-6,9,7,3,-1,8,10,4,-2,9,-4]],[[-8,5,-4,10,7,10,-4,-10,-2,-1,8,-6,3,5],[8,6,-10,10,3,-1,10,8,10,-10,-10,-7,-4,-3],[3,-9,-1,6,6,-7,-10,3,2,1,-3,6,-1,4],[-6,-2,-6,1,-8,9,5,-6,4,2,-3,8,3,9],[-7,-1,9,3,8,1,10,-1,5,9,-7,3,-5,5],[-5,6,-5,-6,-2,-8,-4,6,2,-1,5,4,3,3]],[[10,-8,10,10,2,-10,6,7,-10,4,-10,-6,-4,-10],[-2,7,-1,-9,-10,8,7,-6,-7,-3,-6,8,-1,-5],[-7,-4,-8,-2,-7,-1,2,-6,-5,-1,7,-9,10,-1],[2,-8,10,9,-2,-8,2,5,-7,10,-5,-6,5,-3],[1,-4,9,3,3,-1,10,5,9,5,-10,7,6,-6],[-9,5,-5,4,-10,-7,-6,9,6,-8,-3,10,-8,7]],[[-2,-6,-3,10,8,2,-10,3,7,-2,6,-7,-2,10],[-6,5,-9,-9,-10,10,5,-7,3,9,-2,3,10,4],[-9,-4,-3,-2,-8,5,-2,-5,9,9,2,1,2,1],[-6,-6,1,-9,-6,9,2,1,10,-10,-8,2,1,-3],[9,-5,-10,1,10,6,-1,-10,-10,8,7,-9,-8,-4],[-6,10,-2,2,5,-3,-1,10,5,-6,1,5,1,10]],[[6,-6,2,8,2,-5,-1,-3,1,-6,-3,1,8,9],[-9,9,-4,8,3,-9,-3,-4,-5,9,-10,2,9,7],[-9,-7,7,6,2,-5,-9,2,9,6,-2,-7,10,-6],[-3,8,-1,-4,10,-8,-3,7,-9,6,4,-3,-7,-9],[-2,-7,1,-8,-10,-9,-2,5,3,-1,-3,-2,7,3],[6,2,-10,2,6,-4,-2,-1,3,4,-1,8,-10,-1]],[[4,2,10,7,-6,-3,-8,-3,1,7,-1,10,3,-6],[-8,9,-2,3,6,-6,-8,-7,6,-7,3,1,-2,-5],[-8,-8,-7,10,10,3,-1,2,-8,6,-8,-2,-4,6],[3,2,10,10,9,-9,1,-8,-3,-4,9,6,2,10],[-1,3,-8,9,-5,5,9,4,8,-4,2,3,-9,-9],[-6,-8,-7,-5,6,-3,3,4,4,1,9,4,-7,-3]],[[7,-7,4,2,-6,6,-2,-4,1,-6,7,-8,7,10],[-10,-10,8,1,-5,-3,1,5,-10,-10,-9,5,-8,-4],[6,8,-8,4,10,-6,-10,9,10,-7,-5,1,-5,-9],[1,7,7,7,8,9,-9,-4,-4,10,-9,4,6,-7],[4,-2,-9,-2,6,10,-1,1,-4,8,-8,-3,7,-10],[-5,-4,2,3,6,-8,7,4,8,9,-10,1,-7,-6]]], dtype = "int64")#candidate|1859|(8, 6, 14)|const|int64
bop_1860 = relay.less(var_1858.astype('bool'), relay.reshape(const_1859.astype('bool'), relay.shape_of(var_1858))) # shape=(8, 6, 14)
func_1697_call = mod.get_global_var('func_1697')
func_1702_call = mutated_mod.get_global_var('func_1702')
var_1869 = relay.var("var_1869", dtype = "float32", shape = (240,))#candidate|1869|(240,)|var|float32
var_1870 = relay.var("var_1870", dtype = "float64", shape = (104,))#candidate|1870|(104,)|var|float64
var_1871 = relay.var("var_1871", dtype = "float64", shape = (72, 1))#candidate|1871|(72, 1)|var|float64
call_1868 = relay.TupleGetItem(func_1697_call(relay.reshape(var_1869.astype('float32'), [16, 5, 3]), relay.reshape(var_1870.astype('float64'), [104,]), relay.reshape(var_1871.astype('float64'), [72,]), ), 3)
call_1872 = relay.TupleGetItem(func_1702_call(relay.reshape(var_1869.astype('float32'), [16, 5, 3]), relay.reshape(var_1870.astype('float64'), [104,]), relay.reshape(var_1871.astype('float64'), [72,]), ), 3)
bop_1886 = relay.not_equal(var_1858.astype('bool'), relay.reshape(const_1859.astype('bool'), relay.shape_of(var_1858))) # shape=(8, 6, 14)
uop_1906 = relay.cosh(var_1871.astype('float64')) # shape=(72, 1)
uop_1924 = relay.sin(uop_1906.astype('float64')) # shape=(72, 1)
func_1012_call = mod.get_global_var('func_1012')
func_1017_call = mutated_mod.get_global_var('func_1017')
const_1930 = relay.const([3.559145,2.492766,-2.869909,-4.359108,-9.903222,-7.347737,-6.041696,0.425118,-6.194606,-1.802606,-6.327735,4.705420,7.294872,6.880514,3.421346,-4.160322,4.779346,6.716665,6.327404,1.564630,-6.375273,-6.508757,0.709057,-7.586627,1.323211,6.195539,9.551657,2.901939,7.854279,2.084401,-5.877436,7.927393,-1.146158,3.521304,6.638188,9.484310,-2.184172,-9.447356,1.151237,-5.331006,5.089948,-2.888972,-9.370947,-4.394919,-5.399031,-0.969477,1.136018,7.809848,9.578626,8.336179,0.313910,-5.696704,-7.129535,0.247498,8.837457,-6.340101,-9.746003,4.297655,8.971322,-6.776419,7.694974,-5.824112,-5.775848,-6.702319,-6.237519,-9.965752,-9.342232,-4.692228,-8.303279,8.530515,2.577834,-3.126895,-0.630024,-0.056056,3.364761,-1.932745,6.209083,7.637074,-6.046687,3.293767,5.286564,-8.032731,-3.696917,-4.642681,-2.870691,-5.401088,-7.876947,2.021011,-2.540394,-1.369103,-0.395567,9.893219,7.252321,-6.914143,-6.211639,-4.868257,3.920220,-4.458926,3.107483,-6.991701], dtype = "float32")#candidate|1930|(100,)|const|float32
call_1929 = relay.TupleGetItem(func_1012_call(relay.reshape(const_1930.astype('float32'), [1, 10, 10]), relay.reshape(var_1870.astype('float64'), [1, 104]), relay.reshape(uop_1906.astype('float64'), [1, 72]), ), 5)
call_1931 = relay.TupleGetItem(func_1017_call(relay.reshape(const_1930.astype('float32'), [1, 10, 10]), relay.reshape(var_1870.astype('float64'), [1, 104]), relay.reshape(uop_1906.astype('float64'), [1, 72]), ), 5)
output = relay.Tuple([bop_1860,call_1868,var_1869,var_1870,bop_1886,uop_1924,call_1929,const_1930,])
output2 = relay.Tuple([bop_1860,call_1872,var_1869,var_1870,bop_1886,uop_1924,call_1931,const_1930,])
func_1935 = relay.Function([var_1858,var_1869,var_1870,var_1871,], output)
mod['func_1935'] = func_1935
mod = relay.transform.InferType()(mod)
var_1936 = relay.var("var_1936", dtype = "int64", shape = (8, 6, 14))#candidate|1936|(8, 6, 14)|var|int64
var_1937 = relay.var("var_1937", dtype = "float32", shape = (240,))#candidate|1937|(240,)|var|float32
var_1938 = relay.var("var_1938", dtype = "float64", shape = (104,))#candidate|1938|(104,)|var|float64
var_1939 = relay.var("var_1939", dtype = "float64", shape = (72, 1))#candidate|1939|(72, 1)|var|float64
output = func_1935(var_1936,var_1937,var_1938,var_1939,)
func_1940 = relay.Function([var_1936,var_1937,var_1938,var_1939,], output)
mutated_mod['func_1940'] = func_1940
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2170 = relay.const([[[-8,-9,-9,4,-9,-2,-1,9],[8,-3,-4,-9,4,-9,-1,-10],[7,5,-6,10,7,4,-2,-7],[-10,1,7,7,4,-10,-1,5]],[[2,6,10,-1,-7,-7,1,1],[-6,7,4,5,-2,-4,-7,-10],[2,7,9,1,7,7,3,9],[-2,-5,10,4,-8,2,-9,6]],[[-8,5,3,3,5,-5,-10,2],[-1,-6,-6,3,-9,9,9,1],[-8,-3,2,8,10,8,8,-1],[6,9,10,-7,-9,8,2,3]],[[6,3,-6,7,-6,5,4,2],[3,-1,-5,3,5,-10,-1,-10],[-1,-6,4,10,-8,-4,10,4],[9,-8,4,-8,3,7,-3,2]],[[10,10,3,5,-6,6,9,1],[5,-4,-1,9,4,-9,-5,-2],[10,10,-3,-5,-8,-7,2,6],[-7,6,5,-3,1,6,2,-2]],[[2,-6,-1,-4,-3,-5,-8,2],[-3,7,-4,-7,-4,-3,-2,9],[-7,9,-7,6,-3,-4,-3,-10],[5,-4,-10,5,5,2,-3,1]],[[7,9,-2,-5,7,10,8,-6],[-9,-3,1,-5,-8,-4,-10,-2],[-3,-3,7,2,9,-3,1,-1],[8,-1,4,5,-5,-4,2,-3]],[[8,-1,-4,-8,-4,10,-8,8],[-5,-5,9,2,7,-10,-3,-5],[9,-5,-9,-5,-1,8,4,-5],[7,7,-10,-9,-4,-7,1,7]],[[5,2,2,-7,-2,4,3,2],[-9,-5,7,-7,4,-5,3,-7],[-3,-4,-8,-10,6,-6,-3,-8],[-9,-1,-6,7,-2,6,-4,6]]], dtype = "uint32")#candidate|2170|(9, 4, 8)|const|uint32
var_2171 = relay.var("var_2171", dtype = "uint32", shape = (9, 4, 8))#candidate|2171|(9, 4, 8)|var|uint32
bop_2172 = relay.equal(const_2170.astype('bool'), relay.reshape(var_2171.astype('bool'), relay.shape_of(const_2170))) # shape=(9, 4, 8)
func_340_call = mod.get_global_var('func_340')
func_342_call = mutated_mod.get_global_var('func_342')
const_2177 = relay.const([[-0.248363,0.283224,0.475097,9.526934,-2.170976,-4.015416,-7.321247,7.914619,3.287772,-6.690571,-6.044566,-7.816498],[8.859172,-8.634961,5.713395,2.844908,2.280089,1.123723,-8.956855,-0.237226,9.326126,-6.513187,-5.578785,1.503941],[-6.790823,7.432812,-6.774838,4.077706,5.064792,-3.780712,2.894395,-4.155627,-3.418994,4.353970,-3.201023,5.061888],[9.516552,4.100840,6.293287,0.544458,-8.968279,7.868764,-8.117871,-4.914268,-0.106211,-0.170588,-0.608354,2.538838],[3.455436,0.498965,-3.633368,6.937756,6.552750,1.864947,8.850094,-0.381955,7.297719,2.939001,-2.496697,4.067185],[-2.860480,-8.075886,-5.898970,0.709156,-7.349463,2.844521,-5.017913,-2.879224,5.926677,-2.615598,-2.576981,-0.301979]], dtype = "float64")#candidate|2177|(6, 12)|const|float64
call_2176 = func_340_call(relay.reshape(const_2177.astype('float64'), [6, 1, 12]))
call_2178 = func_340_call(relay.reshape(const_2177.astype('float64'), [6, 1, 12]))
func_1012_call = mod.get_global_var('func_1012')
func_1017_call = mutated_mod.get_global_var('func_1017')
const_2194 = relay.const([[-9.493781,-1.026641],[-4.153168,-4.380669],[-5.179801,2.104831],[8.210070,8.782723],[-0.413128,7.610863],[9.136023,-5.539359],[1.604437,-3.442527],[-3.282577,-1.514319],[8.714931,7.588721],[8.812953,4.761723],[-0.686545,-5.449282],[4.974243,-4.334231],[-5.607930,-1.810423],[0.070026,9.328625],[-1.730227,2.464044],[-3.643869,-4.517227],[-4.751460,5.736342],[5.098027,-0.876426],[2.248984,5.283432],[-9.942485,-2.033547],[1.618265,0.389433],[1.281335,8.363120],[-9.491178,2.925628],[-1.093073,9.073411],[8.367729,-2.355659],[0.893957,-1.605069],[-4.161846,1.151816],[7.669949,5.235936],[-3.537773,-6.036241],[5.124253,6.910915],[-8.374277,0.601244],[-5.051884,8.233862],[4.309943,-1.424722],[-3.952372,-0.276771],[-7.347929,-5.290899],[5.352707,-4.318935],[-1.632941,-8.698268],[0.801748,8.444077],[-1.454014,-4.645206],[9.905517,-4.260914],[-2.916942,8.919630],[1.599105,8.560052],[4.024408,-6.332880],[2.725749,-5.411975],[8.664722,-2.652046],[5.353916,-4.299358],[-9.844478,-4.794667],[-4.472060,-4.522925],[-9.081309,-7.526108],[6.612705,0.254894]], dtype = "float32")#candidate|2194|(50, 2)|const|float32
const_2195 = relay.const([[-8.202365,8.307774,4.647065,-2.479989,-2.731405,-5.581527,8.283836,5.148805,0.948121,3.270281,7.437965,2.827010,-8.129865,-9.033349,-7.800945,0.929750,-4.143993,1.034935,7.495777,8.676971,-9.681887,3.154513,5.999737,8.305376,-6.970946,-8.286772,-5.137540,-6.103524,-1.791853,7.046156,-4.335047,5.692639,6.390184,-7.536120,-8.884939,-8.264226,-8.036578,-2.104472,-0.842042,-9.593185,0.856200,-7.482393,9.938624,-4.845963,-6.421667,-6.610678,-3.816995,9.395162,-8.238329,2.627054,-1.891022,6.639775,5.923500,-8.152306,6.117640,-2.660389,8.650915,-9.075520,5.718421,-1.387321,-6.690276,7.972091,-4.520698,-6.359148,-8.208399,7.996428,9.101053,9.895120,0.073074,-7.513106,5.895965,9.006686,-5.213987,3.854704,-8.360869,1.635024,-8.158183,4.013465,5.570474,1.658795,8.222906,-2.160703,1.426021,1.180354,4.394115,1.271039,-9.758858,2.392284,8.656881,0.050554,-8.719321,-4.393764,1.813156,8.143453,-9.632686,-7.721589,-2.235092,-8.510175,8.196848,-7.206990,-3.562853,4.822176,-6.085739,8.358831]], dtype = "float64")#candidate|2195|(1, 104)|const|float64
call_2193 = relay.TupleGetItem(func_1012_call(relay.reshape(const_2194.astype('float32'), [1, 10, 10]), relay.reshape(const_2195.astype('float64'), [1, 104]), relay.reshape(const_2177.astype('float64'), [1, 72]), ), 4)
call_2196 = relay.TupleGetItem(func_1017_call(relay.reshape(const_2194.astype('float32'), [1, 10, 10]), relay.reshape(const_2195.astype('float64'), [1, 104]), relay.reshape(const_2177.astype('float64'), [1, 72]), ), 4)
func_1697_call = mod.get_global_var('func_1697')
func_1702_call = mutated_mod.get_global_var('func_1702')
var_2208 = relay.var("var_2208", dtype = "float32", shape = (240,))#candidate|2208|(240,)|var|float32
call_2207 = relay.TupleGetItem(func_1697_call(relay.reshape(var_2208.astype('float32'), [16, 5, 3]), relay.reshape(const_2195.astype('float64'), [104,]), relay.reshape(call_2193.astype('float64'), [72,]), ), 0)
call_2209 = relay.TupleGetItem(func_1702_call(relay.reshape(var_2208.astype('float32'), [16, 5, 3]), relay.reshape(const_2195.astype('float64'), [104,]), relay.reshape(call_2193.astype('float64'), [72,]), ), 0)
func_931_call = mod.get_global_var('func_931')
func_935_call = mutated_mod.get_global_var('func_935')
call_2212 = func_931_call(relay.reshape(call_2207.astype('float64'), [4, 13, 2]), relay.reshape(const_2195.astype('float64'), [4, 13, 2]), )
call_2213 = func_931_call(relay.reshape(call_2207.astype('float64'), [4, 13, 2]), relay.reshape(const_2195.astype('float64'), [4, 13, 2]), )
bop_2226 = relay.less(const_2195.astype('bool'), relay.reshape(call_2212.astype('bool'), relay.shape_of(const_2195))) # shape=(1, 104)
bop_2229 = relay.less(const_2195.astype('bool'), relay.reshape(call_2213.astype('bool'), relay.shape_of(const_2195))) # shape=(1, 104)
output = relay.Tuple([bop_2172,call_2176,const_2177,call_2193,const_2194,call_2207,var_2208,bop_2226,])
output2 = relay.Tuple([bop_2172,call_2178,const_2177,call_2196,const_2194,call_2209,var_2208,bop_2229,])
func_2236 = relay.Function([var_2171,var_2208,], output)
mod['func_2236'] = func_2236
mod = relay.transform.InferType()(mod)
mutated_mod['func_2236'] = func_2236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mutated_mod.get_global_var('func_2236')
var_2238 = relay.var("var_2238", dtype = "uint32", shape = (9, 4, 8))#candidate|2238|(9, 4, 8)|var|uint32
var_2239 = relay.var("var_2239", dtype = "float32", shape = (240,))#candidate|2239|(240,)|var|float32
call_2237 = func_2236_call(var_2238,var_2239,)
output = call_2237
func_2240 = relay.Function([var_2238,var_2239,], output)
mutated_mod['func_2240'] = func_2240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2502 = relay.var("var_2502", dtype = "bool", shape = ())#candidate|2502|()|var|bool
var_2503 = relay.var("var_2503", dtype = "bool", shape = (2, 14, 15))#candidate|2503|(2, 14, 15)|var|bool
bop_2504 = relay.logical_or(var_2502.astype('bool'), var_2503.astype('bool')) # shape=(2, 14, 15)
output = bop_2504
output2 = bop_2504
func_2509 = relay.Function([var_2502,var_2503,], output)
mod['func_2509'] = func_2509
mod = relay.transform.InferType()(mod)
mutated_mod['func_2509'] = func_2509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2509_call = mutated_mod.get_global_var('func_2509')
var_2511 = relay.var("var_2511", dtype = "bool", shape = ())#candidate|2511|()|var|bool
var_2512 = relay.var("var_2512", dtype = "bool", shape = (2, 14, 15))#candidate|2512|(2, 14, 15)|var|bool
call_2510 = func_2509_call(var_2511,var_2512,)
output = call_2510
func_2513 = relay.Function([var_2511,var_2512,], output)
mutated_mod['func_2513'] = func_2513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2843 = relay.var("var_2843", dtype = "uint16", shape = ())#candidate|2843|()|var|uint16
var_2844 = relay.var("var_2844", dtype = "uint16", shape = (15, 3, 5))#candidate|2844|(15, 3, 5)|var|uint16
bop_2845 = relay.bitwise_xor(var_2843.astype('uint16'), var_2844.astype('uint16')) # shape=(15, 3, 5)
func_2509_call = mod.get_global_var('func_2509')
func_2513_call = mutated_mod.get_global_var('func_2513')
var_2856 = relay.var("var_2856", dtype = "bool", shape = (420,))#candidate|2856|(420,)|var|bool
call_2855 = func_2509_call(relay.reshape(var_2843.astype('bool'), []), relay.reshape(var_2856.astype('bool'), [2, 14, 15]), )
call_2857 = func_2509_call(relay.reshape(var_2843.astype('bool'), []), relay.reshape(var_2856.astype('bool'), [2, 14, 15]), )
bop_2873 = relay.maximum(call_2855.astype('float32'), relay.reshape(var_2856.astype('float32'), relay.shape_of(call_2855))) # shape=(2, 14, 15)
bop_2876 = relay.maximum(call_2857.astype('float32'), relay.reshape(var_2856.astype('float32'), relay.shape_of(call_2857))) # shape=(2, 14, 15)
uop_2886 = relay.acosh(bop_2873.astype('float32')) # shape=(2, 14, 15)
uop_2888 = relay.acosh(bop_2876.astype('float32')) # shape=(2, 14, 15)
output = relay.Tuple([bop_2845,uop_2886,])
output2 = relay.Tuple([bop_2845,uop_2888,])
func_2889 = relay.Function([var_2843,var_2844,var_2856,], output)
mod['func_2889'] = func_2889
mod = relay.transform.InferType()(mod)
var_2890 = relay.var("var_2890", dtype = "uint16", shape = ())#candidate|2890|()|var|uint16
var_2891 = relay.var("var_2891", dtype = "uint16", shape = (15, 3, 5))#candidate|2891|(15, 3, 5)|var|uint16
var_2892 = relay.var("var_2892", dtype = "bool", shape = (420,))#candidate|2892|(420,)|var|bool
output = func_2889(var_2890,var_2891,var_2892,)
func_2893 = relay.Function([var_2890,var_2891,var_2892,], output)
mutated_mod['func_2893'] = func_2893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3085 = relay.var("var_3085", dtype = "float64", shape = (10, 15, 5))#candidate|3085|(10, 15, 5)|var|float64
var_3086 = relay.var("var_3086", dtype = "float64", shape = (10, 15, 5))#candidate|3086|(10, 15, 5)|var|float64
bop_3087 = relay.divide(var_3085.astype('float64'), relay.reshape(var_3086.astype('float64'), relay.shape_of(var_3085))) # shape=(10, 15, 5)
func_931_call = mod.get_global_var('func_931')
func_935_call = mutated_mod.get_global_var('func_935')
const_3091 = relay.const([7.579645,2.788146,7.312510,2.967615,-0.734842,-1.570223,8.724496,-6.036134,0.628525,-4.550877,-6.644293,-8.744422,-0.423383,-6.799683,4.148775,9.825577,-9.907295,-8.685697,-1.386053,2.473304,5.003372,5.452705,3.056502,-6.670124,-1.585005,-0.659370,8.445710,-1.197779,-1.689555,-1.069842,1.712810,-6.593492,-7.183382,2.151245,-8.524974,-8.640597,-5.625771,-0.186048,5.817747,-2.131317,-1.649869,-4.431407,1.063775,5.693060,4.271933,-7.020799,2.887918,2.606278,1.019369,-0.864649,4.617315,-4.651386,-5.835529,4.664774,5.257893,-1.361257,-3.594740,7.030219,6.572193,7.490173,-4.201918,0.299665,-6.349446,-7.469286,-1.304299,5.776926,1.214653,2.705945,9.999696,2.634205,9.589755,-1.172885,-8.638229,5.070706,-4.934810,9.222953,-0.311509,-1.839779,3.540746,0.864643,-0.656840,0.028244,-6.860534,3.011599,8.386193,-2.246492,-0.999098,-1.043933,-6.878018,2.845898,7.646920,-5.177755,5.679929,-0.527491,8.568025,-9.793986,0.968837,4.437498,1.933066,4.722802,8.277101,9.164998,-7.778209,-1.455029], dtype = "float64")#candidate|3091|(104,)|const|float64
call_3090 = func_931_call(relay.reshape(const_3091.astype('float64'), [4, 13, 2]), relay.reshape(const_3091.astype('float64'), [4, 13, 2]), )
call_3092 = func_931_call(relay.reshape(const_3091.astype('float64'), [4, 13, 2]), relay.reshape(const_3091.astype('float64'), [4, 13, 2]), )
uop_3103 = relay.atanh(var_3086.astype('float64')) # shape=(10, 15, 5)
bop_3109 = relay.minimum(call_3090.astype('uint64'), relay.reshape(const_3091.astype('uint64'), relay.shape_of(call_3090))) # shape=(4, 13, 2)
bop_3112 = relay.minimum(call_3092.astype('uint64'), relay.reshape(const_3091.astype('uint64'), relay.shape_of(call_3092))) # shape=(4, 13, 2)
func_1697_call = mod.get_global_var('func_1697')
func_1702_call = mutated_mod.get_global_var('func_1702')
const_3115 = relay.const([-8.040929,7.792998,-0.196581,0.009115,6.794607,-0.416664,4.539079,0.420311,-4.826105,2.126004,0.615847,-7.319130,6.994761,-1.686592,4.813402,0.176446,7.197950,9.265140,-3.499767,7.152525,-2.380153,-7.008892,-3.963569,-6.315606,5.760277,-4.331954,7.691604,3.257633,7.333956,4.106834,-0.903784,-9.002481,-5.550364,8.133393,8.554506,-8.699248,-5.713423,0.784076,-8.382726,-6.752445,4.832098,-7.255565,0.650840,-4.152452,8.058215,3.211463,-5.455112,-3.862570,-5.199760,3.139885,-0.150640,0.382700,-6.142636,4.767675,-5.528182,-0.324253,-7.939202,-0.076349,-0.610577,-2.710614,2.234690,7.187510,2.971433,-7.685921,8.823972,0.839692,0.886754,6.643451,-4.676381,-2.832904,-5.525411,-8.680133,-5.115965,-9.820868,7.789760,-1.476749,1.867893,-0.492549,2.291018,-1.734235,-9.290261,-8.304395,-1.003895,8.651476,-6.812848,0.261227,7.026049,8.792737,-3.516028,-8.722256,-6.860284,-1.166642,8.981772,8.646373,3.559502,3.831135,1.388139,4.125023,5.865573,-8.316657,4.587440,-6.107500,-0.003121,-8.138422,-2.827088,-2.728844,2.097749,-7.929407,-3.710133,-8.234919,6.975371,2.360689,4.105549,-8.747859,-6.031970,2.086125,-6.204038,-9.119789,4.060100,9.101872,2.548098,5.777988,4.639846,0.393376,2.456721,3.752534,-5.165332,5.547846,-0.914915,-0.550566,5.930660,-2.871334,-5.048764,-9.134771,5.129181,9.999841,4.661656,2.323697,-3.683442,-1.093122,-0.834173,-0.371869,8.059357,2.110184,8.488967,-3.043341,2.660817,-7.068744,2.943577,8.357388,-2.914776,7.821280,1.535980,-4.567319,-0.884657,9.642419,8.629235,2.278056,-0.874220,-4.369898,-0.770129,-1.374020,4.840432,6.359897,8.162085,2.546618,1.888566,1.207505,2.415985,-0.390432,1.320450,8.996321,5.027843,5.637118,4.127713,1.902176,-6.149114,2.136102,-0.882711,-4.232954,5.002997,-9.815642,-6.996320,-1.025897,3.866156,6.386155,-3.961828,5.488285,7.741613,2.457639,-4.363760,8.929330,-0.089413,-2.909308,0.999333,-6.166010,-2.466788,-8.097463,2.738149,7.500344,8.700933,1.318592,2.014902,-4.270797,8.343793,4.267390,-5.216061,-0.903476,2.052568,-3.946554,1.900028,0.533454,3.924125,-6.113515,-2.856525,8.000586,8.312685,-1.177862,-9.073659,9.996644,-7.697190,8.460746,7.201354,-3.808264,8.219963,-1.872309,1.558244,-4.135234,1.107036,2.551360,-9.628209,4.126451,5.903212,-3.743992,-2.821468,8.242197,-0.249897,-1.103423,-1.484010,-3.631601], dtype = "float32")#candidate|3115|(240,)|const|float32
var_3116 = relay.var("var_3116", dtype = "float64", shape = (72,))#candidate|3116|(72,)|var|float64
call_3114 = relay.TupleGetItem(func_1697_call(relay.reshape(const_3115.astype('float32'), [16, 5, 3]), relay.reshape(const_3091.astype('float64'), [104,]), relay.reshape(var_3116.astype('float64'), [72,]), ), 2)
call_3117 = relay.TupleGetItem(func_1702_call(relay.reshape(const_3115.astype('float32'), [16, 5, 3]), relay.reshape(const_3091.astype('float64'), [104,]), relay.reshape(var_3116.astype('float64'), [72,]), ), 2)
output = relay.Tuple([bop_3087,uop_3103,bop_3109,call_3114,const_3115,var_3116,])
output2 = relay.Tuple([bop_3087,uop_3103,bop_3112,call_3117,const_3115,var_3116,])
func_3130 = relay.Function([var_3085,var_3086,var_3116,], output)
mod['func_3130'] = func_3130
mod = relay.transform.InferType()(mod)
mutated_mod['func_3130'] = func_3130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3130_call = mutated_mod.get_global_var('func_3130')
var_3132 = relay.var("var_3132", dtype = "float64", shape = (10, 15, 5))#candidate|3132|(10, 15, 5)|var|float64
var_3133 = relay.var("var_3133", dtype = "float64", shape = (10, 15, 5))#candidate|3133|(10, 15, 5)|var|float64
var_3134 = relay.var("var_3134", dtype = "float64", shape = (72,))#candidate|3134|(72,)|var|float64
call_3131 = func_3130_call(var_3132,var_3133,var_3134,)
output = call_3131
func_3135 = relay.Function([var_3132,var_3133,var_3134,], output)
mutated_mod['func_3135'] = func_3135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3379 = relay.var("var_3379", dtype = "uint8", shape = (9, 7, 11))#candidate|3379|(9, 7, 11)|var|uint8
var_3380 = relay.var("var_3380", dtype = "uint8", shape = (9, 7, 11))#candidate|3380|(9, 7, 11)|var|uint8
bop_3381 = relay.greater_equal(var_3379.astype('bool'), relay.reshape(var_3380.astype('bool'), relay.shape_of(var_3379))) # shape=(9, 7, 11)
func_3130_call = mod.get_global_var('func_3130')
func_3135_call = mutated_mod.get_global_var('func_3135')
const_3390 = relay.const([-1.287299,-3.093809,-5.190409,-2.401080,-6.977166,3.792175,-1.673719,7.038632,0.408447,-1.867946,-5.921922,-4.554985,4.364384,9.165885,-0.817227,5.763215,2.057397,-4.595851,-0.099026,5.043067,9.333876,0.553393,-8.295858,1.172334,-0.419231,-2.459145,9.680886,-6.492953,-2.508170,9.612648,2.127550,5.401378,9.502872,8.990903,-4.256436,-8.200882,1.752562,0.574359,-7.155896,9.484049,7.478022,5.724632,1.279629,0.151639,-1.166012,-7.840939,2.767924,-0.091488,7.923687,8.419157,0.482334,-6.290170,0.022686,-1.928105,-8.921665,-4.930852,-5.048131,-8.764795,8.465910,9.236285,8.569285,-1.030830,2.586744,2.146823,-8.961739,-6.957413,-2.706385,-1.360590,-5.962048,-4.773321,7.510374,-5.866266,-9.324009,0.402653,-5.196326,8.777455,-1.150289,8.703820,9.529206,0.469612,9.128157,9.893381,-0.676614,5.588067,-9.299027,4.305412,9.873749,3.742810,-9.924721,1.877354,7.983311,-0.112473,-2.036889,9.596646,-3.019275,3.272274,-7.577268,-8.967791,7.866746,-2.680388,0.391601,3.333460,1.187192,-6.583463,8.502384,5.832695,8.932407,-6.572667,5.757757,1.268159,-6.561298,2.376606,5.414242,1.316837,1.947239,-7.222116,1.734512,9.121542,4.984920,4.062719,-0.438177,4.528224,-4.197874,5.267070,-0.114326,-8.549869,-5.253952,5.011163,3.800762,-1.815459,-5.322637,7.831964,-1.043653,8.031924,-2.112162,-5.000335,5.819671,-0.358990,4.774302,7.782946,-1.842155,2.915929,9.632109,-1.392560,4.423604,0.527244,-8.761000,-8.276983,-8.812091,-3.722499,-8.921445,9.757187,-6.931797,9.501876,1.718339,6.783545,-6.763107,-2.560197,-2.713024,-1.234475,0.474785,3.597572,-6.247218,-4.321134,4.183587,-9.204520,6.968909,7.849379,5.267621,-8.283675,2.846160,4.339263,-8.831024,2.258620,-4.117264,-5.140137,-4.027606,0.840816,4.909743,4.229316,-2.925383,-2.081493,5.632455,-1.260702,6.463047,7.465273,-6.647153,-2.972770,7.803976,6.362772,-0.847544,8.703120,-1.642820,8.146340,9.766190,-6.022662,-2.613698,0.380741,4.256984,3.166405,-6.951065,5.323583,4.207159,9.358641,-0.597863,-4.075744,7.856839,5.854142,5.393129,2.260191,1.918037,-5.107108,9.197473,4.331577,7.566248,1.068163,2.399591,9.393044,-8.027179,4.673586,9.567039,0.338074,-1.167372,-6.765147,-5.538529,-0.442168,-9.516486,1.722011,-7.493106,-7.331465,1.833435,-9.638564,-9.691521,3.088216,-3.898113,3.746518,1.332220,-3.966914,8.455399,7.885629,2.624248,3.999036,-6.810906,4.110308,7.856876,8.778192,8.694437,-4.946845,6.094860,-9.476762,-5.247936,8.707808,0.456644,3.064683,8.416675,-2.862491,-3.679331,-2.596315,-9.468708,-9.037159,9.454498,0.868425,8.045474,-1.169718,8.801340,-8.473125,8.090861,7.236489,-3.588503,4.887711,7.939969,-1.417682,-5.323369,9.136369,-3.198934,-9.863114,8.371836,-9.133854,1.642457,7.717733,4.706743,2.993726,7.440664,8.086688,1.399407,3.437906,-4.586010,1.869735,-8.721360,-5.727285,-5.857271,-0.997162,-5.548672,-4.642397,-9.303312,-5.041421,6.585581,-3.883653,6.688352,-8.584389,-6.634498,9.687098,4.853667,3.444321,6.899239,-8.180240,6.738735,6.993104,0.440439,8.100807,5.324843,-3.225879,8.044063,-2.381825,-5.883863,-0.828654,-2.468933,-9.430787,-5.352975,-6.505206,0.654423,9.587625,9.800624,-9.545048,-4.249852,-8.794044,0.302597,-9.881199,3.955047,6.652252,-6.839480,2.880800,-2.296841,-2.641668,3.413510,-1.711643,-9.083225,2.245731,7.705747,-2.960845,-0.088031,7.668546,0.071756,-4.909385,-7.169324,4.354830,8.024543,-9.701137,-0.964016,-4.429867,7.025151,-7.368079,-4.386950,1.098354,6.618404,1.315444,5.439239,1.717653,9.501029,3.700816,-6.978679,-8.203874,4.498440,5.574528,5.832385,-1.766505,-5.596098,-7.285715,-3.085157,-9.515720,-8.432786,9.715195,5.869619,-4.675490,6.468276,-6.513464,-1.208203,7.352720,3.293208,1.040153,0.687502,4.004741,-5.451205,-4.026973,-7.305360,-3.367368,8.635816,-7.763862,6.557692,1.305855,-0.887956,-1.816058,-0.707467,5.562126,-6.073639,-4.445787,-9.769807,5.983540,-2.212590,4.324452,4.751414,6.455357,-7.821845,7.436935,-8.816588,-4.720692,-1.140975,-6.493813,-0.084873,4.068536,-3.225212,-9.198025,2.004658,-5.221937,-3.562265,-7.917599,5.529888,-2.639199,9.814833,5.838919,-8.764980,6.879086,-7.372606,9.470529,4.075271,8.241625,-7.960594,-5.599644,-2.754184,4.301414,-4.075191,-9.509946,8.925276,0.737765,-1.127326,1.072428,-5.135298,8.786297,-7.800183,-7.817020,6.046637,0.963794,3.601951,-5.489234,-1.902166,-4.482398,4.571241,4.940432,9.565401,-5.382322,9.038802,-5.518939,-0.557072,4.320581,-1.858270,-1.435426,7.101622,-1.773233,0.991464,-7.067329,-4.014337,-7.688988,7.734872,0.067112,6.293982,-1.065351,4.344719,-8.079554,5.626702,-4.212867,7.435180,4.047850,-6.941914,-4.332237,-3.574430,-9.275700,7.578531,9.029730,-5.183804,-1.718712,-3.381164,-2.387926,7.855448,8.138336,-4.381907,2.919311,-8.437351,4.068727,-8.308651,-8.876023,-0.305341,1.905170,2.342635,2.101854,8.691638,7.951077,-8.539283,7.359391,4.657638,-2.662284,-9.868225,1.049388,0.520835,-1.346642,-9.026027,-2.312451,0.166078,6.541111,-6.089923,-8.464393,-5.385541,7.239821,7.531661,-0.913185,6.448906,7.917586,-8.148510,-6.356385,4.403097,8.230662,0.734961,-8.866090,-7.395521,-3.666227,-9.271013,-4.855203,-0.723416,-4.860022,6.436544,-1.252587,8.951225,-7.201422,1.143148,4.373402,2.155053,-9.562716,3.200481,6.873053,-0.019943,-9.536401,-9.882871,8.329588,2.155675,6.633265,8.686549,1.646171,9.770422,-6.463501,4.032051,0.807802,6.329907,0.583702,-9.653358,-6.010379,-3.445706,-2.185602,4.605142,-9.725791,8.150229,6.943666,2.570844,4.233528,1.136160,1.851026,-8.685687,3.957705,2.435427,-4.337282,-5.985520,-7.475460,4.296001,8.446412,1.468686,4.744182,5.249594,2.267321,-8.451107,4.607625,-1.256339,-4.308561,9.450302,-2.949738,-4.203100,8.617593,2.392546,-5.286600,-9.543948,-0.635001,7.227688,-4.373162,-1.431684,1.005061,-7.126185,-5.461947,-5.025294,0.954546,3.553661,-5.909678,-0.098417,-8.315299,7.047310,4.707029,-9.443067,1.052002,4.479492,9.353511,2.357362,-6.042158,2.252740,0.327134,2.057184,-3.086299,-5.259253,1.200579,-1.462896,8.670164,-5.127863,7.654751,-4.401067,-2.594957,-1.694751,2.216389,-1.598075,0.223914,6.425519,1.906468,-0.284990,6.690724,-3.366089,8.534047,-1.551821,9.628970,2.735457,0.365819,0.754473,-3.955509,1.767523,-1.404353,9.662423,-6.606984,-6.368664,-7.130593,0.758325,0.807150,-3.337950,-7.805603,2.906473,3.600813,-8.174197,-0.489395,-7.435601,6.815385,6.114998,2.118944,5.968981,6.605317,-6.633171,-3.482820,4.185641,3.683637,3.096007,-0.752101,8.888144,1.000621,-8.723134,-4.365665,-4.144672,9.843638,9.580796,1.951865,-0.724311,-8.444514,-6.356359,-2.554348,-4.792739,0.788991,3.063172,1.429564,2.909713,-1.740564,-6.574826,-6.274868,-1.470651,-7.782730,-7.474361,-1.158216,-6.386000,4.319669,-7.291042,-6.980359,-5.353796,-7.965340,2.532915,-5.650072,-0.377159,9.109716,3.420235,-5.840951,0.246785,7.255100,-6.012748,-9.434910,-4.778718,5.251183,8.948927,-4.354831,2.950171,7.251424,-2.235886,1.002805,-9.936797,0.293587,-4.344442,4.160645,5.954483,0.461588,-2.831331,-1.534190,-1.010545,1.852744,-0.878245,4.757132,-6.992124,-7.071178,-6.978930,-2.287691,-4.385782,6.193313,4.612650,-0.430331,6.148025,-8.422047,6.556201,9.596145,-5.146836,9.647230,-9.863191,-7.543018,6.830198,9.063604,-8.523372,-7.033352,4.507832,9.513709,-1.784380,9.730729,8.578554,-9.268420,2.730035,-6.064162], dtype = "float64")#candidate|3390|(750,)|const|float64
var_3391 = relay.var("var_3391", dtype = "float64", shape = (72,))#candidate|3391|(72,)|var|float64
call_3389 = relay.TupleGetItem(func_3130_call(relay.reshape(const_3390.astype('float64'), [10, 15, 5]), relay.reshape(const_3390.astype('float64'), [10, 15, 5]), relay.reshape(var_3391.astype('float64'), [72,]), ), 5)
call_3392 = relay.TupleGetItem(func_3135_call(relay.reshape(const_3390.astype('float64'), [10, 15, 5]), relay.reshape(const_3390.astype('float64'), [10, 15, 5]), relay.reshape(var_3391.astype('float64'), [72,]), ), 5)
bop_3397 = relay.maximum(var_3380.astype('int8'), relay.reshape(var_3379.astype('int8'), relay.shape_of(var_3380))) # shape=(9, 7, 11)
output = relay.Tuple([bop_3381,call_3389,const_3390,var_3391,bop_3397,])
output2 = relay.Tuple([bop_3381,call_3392,const_3390,var_3391,bop_3397,])
func_3406 = relay.Function([var_3379,var_3380,var_3391,], output)
mod['func_3406'] = func_3406
mod = relay.transform.InferType()(mod)
var_3407 = relay.var("var_3407", dtype = "uint8", shape = (9, 7, 11))#candidate|3407|(9, 7, 11)|var|uint8
var_3408 = relay.var("var_3408", dtype = "uint8", shape = (9, 7, 11))#candidate|3408|(9, 7, 11)|var|uint8
var_3409 = relay.var("var_3409", dtype = "float64", shape = (72,))#candidate|3409|(72,)|var|float64
output = func_3406(var_3407,var_3408,var_3409,)
func_3410 = relay.Function([var_3407,var_3408,var_3409,], output)
mutated_mod['func_3410'] = func_3410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3781 = relay.var("var_3781", dtype = "float32", shape = ())#candidate|3781|()|var|float32
var_3782 = relay.var("var_3782", dtype = "float32", shape = (7, 7, 14))#candidate|3782|(7, 7, 14)|var|float32
bop_3783 = relay.power(var_3781.astype('float32'), var_3782.astype('float32')) # shape=(7, 7, 14)
func_2236_call = mod.get_global_var('func_2236')
func_2240_call = mutated_mod.get_global_var('func_2240')
const_3791 = relay.const([[10,9,-4,8,1,8,-4,8,4,-5,-1,2,2,-5,-10,4,2,9,-6,9,-8,-1,-1,-2,-3,4,1,-3,2,7,-2,3,8,-1,-9,-2,-7,-1,-3,3,-9,9,-5,-2,-2,-8,-2,10,2,-4,4,-2,-8,1,-6,-7,-1,5,-9,-2,10,5,10,-1,9,-5,-1,3,-10,1,7,2],[-2,-8,8,4,-8,9,6,-10,7,-5,-4,10,-3,1,6,-9,-4,1,-7,-9,6,2,-2,-7,10,9,-2,-8,-7,4,4,-2,-2,-10,10,3,9,-9,8,10,-2,1,-8,-9,-10,8,10,-2,-5,-3,-4,-2,-2,4,1,-7,4,6,-7,-5,-2,10,-3,4,7,-4,4,5,-10,-7,4,-3],[3,10,-6,8,-8,-10,3,2,1,-2,-3,-2,-10,4,-4,4,-4,-9,9,-10,6,-9,-4,-10,6,-2,2,2,5,-6,10,-6,2,7,-3,-8,7,-1,-6,-5,-4,1,-3,8,6,-8,-3,3,10,-7,-8,-5,2,-5,-6,3,9,7,-7,-1,10,1,4,9,7,8,-2,-10,8,5,6,-5],[1,1,9,-3,3,-2,-10,-2,10,-10,-4,9,6,5,1,10,-2,-2,-3,1,8,1,-8,-5,-5,-3,7,-9,5,6,-6,9,-7,10,-3,4,-8,-1,9,5,1,3,9,1,-7,-9,5,-2,7,10,5,-3,-10,9,8,-5,1,7,9,-1,4,1,8,-2,5,4,6,5,4,7,-8,-3]], dtype = "uint32")#candidate|3791|(4, 72)|const|uint32
var_3792 = relay.var("var_3792", dtype = "float32", shape = (240,))#candidate|3792|(240,)|var|float32
call_3790 = relay.TupleGetItem(func_2236_call(relay.reshape(const_3791.astype('uint32'), [9, 4, 8]), relay.reshape(var_3792.astype('float32'), [240,]), ), 4)
call_3793 = relay.TupleGetItem(func_2240_call(relay.reshape(const_3791.astype('uint32'), [9, 4, 8]), relay.reshape(var_3792.astype('float32'), [240,]), ), 4)
bop_3801 = relay.multiply(bop_3783.astype('float64'), relay.reshape(var_3782.astype('float64'), relay.shape_of(bop_3783))) # shape=(7, 7, 14)
output = relay.Tuple([call_3790,const_3791,var_3792,bop_3801,])
output2 = relay.Tuple([call_3793,const_3791,var_3792,bop_3801,])
func_3805 = relay.Function([var_3781,var_3782,var_3792,], output)
mod['func_3805'] = func_3805
mod = relay.transform.InferType()(mod)
var_3806 = relay.var("var_3806", dtype = "float32", shape = ())#candidate|3806|()|var|float32
var_3807 = relay.var("var_3807", dtype = "float32", shape = (7, 7, 14))#candidate|3807|(7, 7, 14)|var|float32
var_3808 = relay.var("var_3808", dtype = "float32", shape = (240,))#candidate|3808|(240,)|var|float32
output = func_3805(var_3806,var_3807,var_3808,)
func_3809 = relay.Function([var_3806,var_3807,var_3808,], output)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3879 = relay.const(0.737457, dtype = "float64")#candidate|3879|()|const|float64
const_3880 = relay.const([[[3.844916,6.592567,-3.445593],[-6.651343,-7.424026,6.034155],[-6.084820,-9.831547,-7.796443],[-8.508219,-3.041564,-2.566619],[2.966103,7.645728,8.562046],[2.845295,8.631982,6.434463],[-0.310395,-6.585791,-4.230755],[-8.465864,-6.825372,6.769014],[7.472172,-2.766467,-3.059063],[2.200818,-9.747934,-8.088381],[7.965494,8.600341,-7.969821]],[[-1.583629,-7.652519,7.235714],[7.286415,1.212170,-3.160253],[-4.010851,1.518080,-1.285833],[4.308126,4.230204,-4.680777],[-7.484501,1.079003,-1.935555],[-9.852729,-5.547141,2.441538],[-1.468439,9.997695,-2.243841],[-3.507996,2.925544,7.523630],[2.746389,4.382873,7.732082],[-8.069358,0.669467,3.280161],[5.067105,4.524800,-3.886777]],[[9.121202,7.254483,-0.598521],[4.985457,-0.960396,-0.708729],[-5.531421,-9.588953,-8.244322],[8.020106,3.157167,-8.782447],[-1.867494,0.581220,6.303786],[7.806636,-1.618633,-4.129027],[-9.550115,0.869845,-0.832639],[3.879402,0.883626,8.314772],[0.201583,-0.285841,5.659666],[0.658764,-0.477591,2.965710],[-6.742757,-7.204246,4.486947]],[[5.910844,-5.536617,-9.536656],[8.758307,3.362103,-5.657261],[-2.774063,0.650296,-5.333531],[-0.979184,1.840863,-1.919206],[-1.482110,0.320759,1.571822],[0.449078,-4.800030,5.149763],[1.082551,-3.572345,2.226985],[7.388014,-4.214312,-5.173867],[5.118555,-3.040711,1.009398],[-4.291125,5.230937,7.752833],[-6.277520,-4.895936,-8.355524]],[[-0.319117,-5.442368,4.055272],[3.935537,4.194610,0.920367],[-0.505214,-2.709531,6.814298],[-7.138570,-7.893041,8.498717],[-7.757152,-8.482119,0.337548],[9.274863,-2.953089,-2.047737],[5.210347,-2.604953,-6.368770],[2.076705,9.758046,0.884843],[7.738984,-1.966341,-6.415592],[2.441742,4.722371,0.839252],[8.582939,-5.006267,-7.249930]],[[6.075034,-2.954438,-0.545022],[7.289763,-8.630594,-1.719592],[-1.812384,4.838639,6.252035],[-0.759794,-2.290463,-7.902331],[-6.678042,-9.973786,-3.866753],[-0.782078,8.216559,4.118014],[3.948110,7.568902,1.776563],[7.339917,8.788118,-9.008757],[-1.439764,-4.053853,4.217847],[-4.596330,-3.418192,-4.298059],[5.829445,-1.282173,-7.186042]],[[0.411856,-0.860942,8.562808],[-8.414149,4.067570,9.413437],[-4.801631,3.036711,-9.122672],[5.768952,-5.305089,-3.518580],[-9.331034,2.417348,-0.738451],[4.514927,6.131406,-0.844680],[0.773337,-2.241426,-4.298833],[3.870962,4.313583,1.146479],[7.588384,1.030159,-8.162870],[-8.026794,7.558341,1.805370],[6.995429,1.515607,2.155748]]], dtype = "float64")#candidate|3880|(7, 11, 3)|const|float64
bop_3881 = relay.floor_divide(const_3879.astype('float64'), const_3880.astype('float64')) # shape=(7, 11, 3)
bop_3886 = relay.logical_or(const_3880.astype('bool'), const_3879.astype('bool')) # shape=(7, 11, 3)
uop_3896 = relay.atan(bop_3881.astype('float32')) # shape=(7, 11, 3)
func_3130_call = mod.get_global_var('func_3130')
func_3135_call = mutated_mod.get_global_var('func_3135')
var_3901 = relay.var("var_3901", dtype = "float64", shape = (750,))#candidate|3901|(750,)|var|float64
var_3902 = relay.var("var_3902", dtype = "float64", shape = (72,))#candidate|3902|(72,)|var|float64
call_3900 = relay.TupleGetItem(func_3130_call(relay.reshape(var_3901.astype('float64'), [10, 15, 5]), relay.reshape(var_3901.astype('float64'), [10, 15, 5]), relay.reshape(var_3902.astype('float64'), [72,]), ), 3)
call_3903 = relay.TupleGetItem(func_3135_call(relay.reshape(var_3901.astype('float64'), [10, 15, 5]), relay.reshape(var_3901.astype('float64'), [10, 15, 5]), relay.reshape(var_3902.astype('float64'), [72,]), ), 3)
bop_3910 = relay.greater(uop_3896.astype('bool'), relay.reshape(bop_3881.astype('bool'), relay.shape_of(uop_3896))) # shape=(7, 11, 3)
output = relay.Tuple([bop_3886,call_3900,var_3901,var_3902,bop_3910,])
output2 = relay.Tuple([bop_3886,call_3903,var_3901,var_3902,bop_3910,])
func_3913 = relay.Function([var_3901,var_3902,], output)
mod['func_3913'] = func_3913
mod = relay.transform.InferType()(mod)
var_3914 = relay.var("var_3914", dtype = "float64", shape = (750,))#candidate|3914|(750,)|var|float64
var_3915 = relay.var("var_3915", dtype = "float64", shape = (72,))#candidate|3915|(72,)|var|float64
output = func_3913(var_3914,var_3915,)
func_3916 = relay.Function([var_3914,var_3915,], output)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3927 = relay.const([[[-8,1,-5],[8,-3,2],[9,-5,4],[-8,2,4]],[[8,-6,-4],[-10,-4,-8],[10,-8,6],[4,-7,-4]],[[-10,-1,2],[4,5,-3],[-3,-1,-6],[5,-5,-10]],[[-4,-8,-1],[9,3,-4],[5,4,-9],[7,10,6]],[[-5,1,-7],[-4,-5,-1],[3,10,10],[-10,1,5]],[[1,-2,7],[6,-1,5],[9,-9,10],[-1,-10,8]],[[4,-6,-3],[6,2,8],[6,-5,-2],[6,-10,8]],[[-5,-2,1],[-6,1,1],[-3,-10,3],[-6,4,7]],[[-2,9,-8],[-1,-7,5],[-4,-2,-2],[-8,8,-4]],[[8,1,1],[-7,-10,4],[-3,-10,-5],[-6,-7,3]],[[9,-6,9],[-9,10,-6],[9,6,10],[-9,3,3]],[[4,9,8],[-1,-3,-6],[-9,-9,7],[3,-1,-7]],[[-7,3,-6],[1,6,1],[2,-8,3],[7,-9,4]],[[-2,-3,-6],[-3,7,-4],[-2,2,5],[-9,7,1]],[[-3,3,-5],[-1,-4,1],[3,4,9],[10,4,-1]]], dtype = "uint32")#candidate|3927|(15, 4, 3)|const|uint32
var_3928 = relay.var("var_3928", dtype = "uint32", shape = (15, 4, 3))#candidate|3928|(15, 4, 3)|var|uint32
bop_3929 = relay.multiply(const_3927.astype('uint32'), relay.reshape(var_3928.astype('uint32'), relay.shape_of(const_3927))) # shape=(15, 4, 3)
uop_3932 = relay.log10(bop_3929.astype('float32')) # shape=(15, 4, 3)
func_931_call = mod.get_global_var('func_931')
func_935_call = mutated_mod.get_global_var('func_935')
var_3938 = relay.var("var_3938", dtype = "float64", shape = (104,))#candidate|3938|(104,)|var|float64
call_3937 = func_931_call(relay.reshape(var_3938.astype('float64'), [4, 13, 2]), relay.reshape(var_3938.astype('float64'), [4, 13, 2]), )
call_3939 = func_931_call(relay.reshape(var_3938.astype('float64'), [4, 13, 2]), relay.reshape(var_3938.astype('float64'), [4, 13, 2]), )
output = relay.Tuple([uop_3932,call_3937,var_3938,])
output2 = relay.Tuple([uop_3932,call_3939,var_3938,])
func_3941 = relay.Function([var_3928,var_3938,], output)
mod['func_3941'] = func_3941
mod = relay.transform.InferType()(mod)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3941_call = mutated_mod.get_global_var('func_3941')
var_3943 = relay.var("var_3943", dtype = "uint32", shape = (15, 4, 3))#candidate|3943|(15, 4, 3)|var|uint32
var_3944 = relay.var("var_3944", dtype = "float64", shape = (104,))#candidate|3944|(104,)|var|float64
call_3942 = func_3941_call(var_3943,var_3944,)
output = call_3942
func_3945 = relay.Function([var_3943,var_3944,], output)
mutated_mod['func_3945'] = func_3945
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4037 = relay.const([[[9.666170,1.831052,-2.421316,-5.976252,1.362626,-0.658827,2.282470,-5.523432,-1.883985,-8.545350,-5.661489,4.429628,-6.025936,6.971730,4.318200,1.954067],[2.678166,3.631608,3.242622,6.141488,-9.782096,5.598699,-2.977536,-7.806813,-4.657264,9.222716,4.107786,6.433945,-8.374078,-1.439118,0.888794,-2.997383],[1.888657,1.116558,3.488091,0.959388,-4.565768,9.700915,-7.689098,5.016151,-2.632071,3.623519,0.582455,-8.877532,3.240630,2.320174,-0.343701,7.550218],[-0.368543,-6.461343,0.397524,1.235459,-2.715586,-0.494123,-8.013066,-9.097677,7.507513,-3.960448,-0.848699,-1.697000,-1.448805,4.967104,5.661132,-8.012864],[1.162738,1.062968,-7.674611,-9.468299,9.338583,7.014929,-4.393356,3.540429,-4.218478,-1.811926,-0.750260,-0.896024,-2.781010,0.233512,9.153156,9.973398],[0.057219,3.679850,6.637925,-7.183017,4.515925,-5.018828,7.362586,8.566578,-9.122228,8.390748,-9.377567,6.610136,7.223872,-3.995045,-7.538318,2.131307],[-6.048752,7.869954,-2.329040,-7.483577,8.496078,8.579887,-1.541893,-6.578240,-5.401989,2.767290,-6.634851,6.253428,-8.716479,-5.995536,-2.357813,-1.062235],[-1.681194,-9.377961,7.107928,-2.734107,-5.189620,-9.284528,-4.436007,3.773396,-1.826168,6.089898,7.431752,-9.528634,-2.118686,-0.127494,-1.759395,8.029626],[-9.754870,2.247997,1.911338,-4.021270,3.649678,-0.067808,-7.406014,-4.258794,4.821032,4.368457,-8.240690,-2.401879,-0.535934,3.259506,8.985233,4.482278],[7.895328,6.154113,2.112095,-0.708938,-4.130640,-9.081743,-0.324681,8.311884,8.152224,-5.071730,-4.485966,-1.594625,9.845517,2.561117,5.399840,-8.655597],[6.823470,9.248964,8.955005,6.585763,-0.797300,-4.404064,-2.587407,-9.784465,-8.266290,-5.393250,9.826125,8.268815,-0.408607,8.911483,-1.142980,-6.621083],[-6.379418,-2.723605,6.618835,0.531694,7.019808,-4.537793,-9.413967,2.820544,8.479072,4.219237,4.691783,9.804580,-7.472615,7.954734,-5.504703,-7.441418],[2.431936,9.396559,9.717079,-0.016756,-6.703521,-7.402037,-9.636397,-8.342414,5.309685,-8.184093,-5.853729,3.954401,0.863436,0.250337,-3.529649,-6.826129],[-6.873041,8.972003,-2.136615,7.104938,-9.779636,1.671461,9.352580,7.865009,-4.519946,4.670737,2.452208,1.854032,9.948910,1.956326,-8.710928,0.088225],[8.073664,-6.374409,1.905051,-5.100549,-0.282271,-5.680325,7.471209,-6.198146,6.800530,5.982971,-5.397822,0.090714,7.395583,-2.096749,-5.242477,5.324781]],[[-5.432908,-8.079023,6.022235,4.487858,-4.620009,5.531573,3.404841,9.515158,-2.949127,-3.132616,0.024810,-6.672536,-7.072224,1.657929,0.022617,-4.219449],[-6.881399,1.637933,9.239516,4.050902,-8.073313,-0.713431,2.224823,-7.957806,-3.814184,-1.171302,9.225648,-5.884478,2.572402,-2.517236,-0.838137,-5.976586],[6.374761,-5.623086,2.565028,7.162411,7.970847,6.573360,6.180275,-9.277781,-5.963922,-6.951667,7.130254,5.864483,-2.685725,0.960288,-4.831919,2.006503],[5.369422,7.095223,-7.237783,-5.984021,-6.377300,-6.845628,-9.157332,0.731046,7.588821,-0.887994,-7.994038,-4.122249,3.237338,-1.115578,4.157697,-1.666164],[0.067574,6.967454,-4.329315,9.193190,-7.844718,-2.721871,-7.365400,5.259407,3.208049,2.437377,-5.172491,-3.952163,0.288033,5.120002,8.695250,-0.078622],[4.154473,-2.061257,4.358703,-9.338728,2.723026,-9.319266,-9.930137,5.110906,4.578551,-9.598389,-4.916896,-9.978991,4.295694,4.407367,9.818677,7.045618],[2.855281,-8.101324,-6.344646,-1.048264,3.307109,8.857695,2.140052,-3.745299,7.999535,-5.771406,5.664572,-2.952551,-9.234238,7.834584,2.668219,2.514568],[-0.716510,8.476477,-0.639474,-6.156572,6.610975,-4.914711,9.839148,1.994159,2.488482,-8.061231,-3.851043,4.998637,-4.286312,-4.461134,6.338836,7.575401],[7.650412,-9.335273,-3.360062,-2.630916,8.459614,-0.619504,9.495930,5.822979,9.151075,1.540599,-9.085871,5.877549,-5.571790,-4.596295,4.105563,0.582685],[7.276768,-9.329363,3.516900,4.747473,0.516193,7.529710,2.948679,3.573825,-5.447058,4.013707,8.574458,-6.838013,-6.718578,-1.800333,-4.093565,8.586311],[9.765032,7.332668,-9.500871,5.092309,4.283042,-3.845733,-5.275827,7.798886,-4.433157,5.388071,2.964770,7.565032,9.123185,9.716173,-5.836711,0.783170],[0.958159,-9.002372,8.859160,4.313204,-0.085010,2.662153,-7.795994,0.319906,8.616989,-7.523592,-7.078704,9.191040,8.742891,9.437428,2.977703,-2.373383],[-0.263135,-4.834351,-4.125841,-9.463463,6.626075,4.268010,-2.098863,-2.776266,-6.470645,8.614441,9.202141,-1.804760,8.948121,-2.993313,-3.458038,0.292043],[2.936286,-7.437621,-7.599034,-5.759430,-9.684863,7.193428,-2.106672,8.001715,-0.799905,-6.194783,7.333057,8.949264,-8.485732,8.753649,-5.412951,9.505745],[-6.126672,8.567155,-9.070030,-2.529196,-6.496077,-1.405881,2.138402,7.315721,-1.509007,8.239558,-2.768670,-7.599103,-2.554863,0.979729,8.934674,-0.492335]],[[-6.850919,-3.234196,4.932018,9.237757,-1.168917,7.958352,5.120140,5.327079,-4.043112,3.570704,7.455727,6.874313,7.141548,-0.149323,-3.048904,-8.051243],[6.494466,7.652312,0.499681,-5.948368,-7.207307,-1.894467,-4.102733,9.414650,-7.620978,1.286445,9.164478,-1.260826,4.882203,1.546470,2.277424,-8.077741],[-0.134082,-5.600501,-9.621881,5.056182,-9.893784,0.580953,6.506397,0.342900,9.271333,-4.897261,9.675803,-6.816993,0.637935,-9.115455,8.312010,5.584197],[8.074771,-8.251382,-6.373691,-6.050175,6.480439,0.353241,1.813586,-6.668142,8.434563,8.040934,1.677609,8.495500,1.309536,-6.554314,-4.769719,-3.103548],[0.667763,-6.394063,-1.364991,-6.778973,-1.021060,-4.341609,-4.192233,-9.554153,3.579347,-1.943840,8.320576,-9.985470,-6.877949,-4.383509,-0.886643,-8.850276],[4.983568,-4.434714,4.382142,5.339265,-7.736016,6.267643,-7.049973,9.992984,4.535209,2.295596,2.611720,2.648951,-4.055140,1.517456,-8.677953,-0.671217],[-3.387316,2.983689,8.067293,3.424020,7.198521,-9.752483,-2.395306,9.044737,3.268710,6.818827,-4.835398,-0.100007,-9.951948,-2.242531,4.615962,-1.202010],[1.842198,-9.452813,-3.905856,-7.408804,-5.727225,3.165615,-2.320989,3.854638,1.756130,9.425337,5.184640,-6.175422,0.855203,2.744810,3.271407,-8.356238],[9.912274,0.892756,-3.192847,7.079281,-4.030525,3.919513,-3.220285,4.336666,0.379982,3.357779,-0.081208,-9.217118,-7.519970,8.574526,5.037415,-6.585615],[-3.369187,-6.723368,-3.786938,5.921982,8.550381,8.217003,3.611950,3.047788,9.453097,-7.191366,3.733454,4.846177,-5.396430,8.321411,-5.627174,-5.716821],[-8.789545,2.640657,3.379267,8.762998,-6.835860,-0.048272,7.917413,-6.678495,-8.922549,6.590957,-8.374011,-3.735148,7.510657,-6.595476,1.439043,-9.506994],[-8.065306,-4.955139,-7.789788,-8.065246,6.272610,5.998152,-0.196196,2.857094,-7.573000,-1.744459,-7.704726,3.568914,8.669132,3.569502,-9.698091,-1.317880],[-2.688133,-4.352141,-1.246557,4.093918,3.540839,6.438648,-6.832947,1.231120,9.388286,9.692632,-2.008629,1.057974,8.350398,-2.761381,-5.251441,-0.242357],[-3.265200,6.717817,4.840369,-1.963139,0.495430,-3.100085,-6.363144,-9.036635,-8.720727,5.637915,-9.118967,-3.461811,-0.660108,-3.214686,4.665762,6.825921],[1.384208,-4.888489,6.982602,-3.446775,-0.611146,-1.936365,-4.850425,-2.083852,1.718155,9.140452,-4.550465,8.696837,-6.873935,7.497115,-4.369626,2.754432]],[[-8.115808,-7.025056,-4.990953,-7.644740,1.675145,-7.925395,-6.036373,-8.099173,-4.021885,3.327714,9.916758,4.257728,-7.324482,1.336300,0.912343,2.485123],[9.137163,2.206339,-7.859373,-3.696718,9.374633,9.692351,-0.307977,8.505094,9.785100,5.384474,0.403533,-7.165451,-0.341872,-7.264876,9.444888,5.237637],[8.425203,-0.255292,-5.113251,1.135724,1.293144,9.234845,1.696255,6.327977,-6.787359,1.400511,1.525864,4.018655,-3.439644,-1.817326,7.642211,-7.833991],[-6.547018,-9.736393,5.907375,-3.367583,-4.634713,-0.789752,-9.007814,-1.605309,9.871321,-4.745379,-9.328278,-5.156114,3.658098,-4.657251,-2.312486,0.863480],[9.825961,5.511826,-9.614301,-0.396780,-9.093863,-5.776337,-9.972555,3.307895,-6.907620,-5.972747,7.920187,8.248476,6.023802,-4.670100,-2.044813,0.989761],[5.504515,1.600195,-7.088637,7.140768,-8.730995,-8.479843,-9.515286,-8.148912,0.304181,0.007471,0.158388,-8.035216,-3.687941,-1.215480,-4.425933,1.795118],[2.426056,3.547143,-5.793442,-5.035520,-8.199642,5.343346,-0.998115,-8.342793,-9.921933,-6.219051,-4.925952,6.009672,2.823400,-5.692954,6.048925,-4.427746],[-5.448100,-9.388659,-5.302341,9.974662,6.002947,4.636467,9.491561,-0.598249,-6.842722,3.177428,7.276738,5.465926,7.311997,-1.362076,0.831387,6.065198],[4.111438,-0.661490,-3.574903,-5.920685,-6.762533,5.192819,9.972418,-6.081029,-5.151710,0.969198,-8.158589,0.470333,-0.304690,-2.392362,-1.168733,8.868555],[5.559640,7.302967,6.615984,-0.766785,6.362364,6.279160,6.471546,-4.725442,-9.897749,3.035125,1.311126,-7.104614,-8.606771,2.180781,-9.433199,-6.681561],[4.410855,8.859204,-1.988503,-4.844942,3.421223,-2.850803,5.587563,-5.308327,-4.207551,-3.780309,-9.762570,4.680861,3.950114,6.271512,7.999631,-1.327786],[2.843539,-5.575918,1.799805,-9.835562,-1.439585,0.544559,4.485046,1.545342,1.781665,8.161242,-1.076992,-1.200045,-7.803317,5.914810,-8.929171,-8.276754],[4.930263,5.622849,8.942792,1.998484,-9.829950,-3.770447,0.053933,-3.305585,9.436002,-3.235867,-8.853462,-2.086349,6.219958,6.474013,1.098682,0.866373],[-3.657807,2.127116,-6.213885,5.802631,0.756537,6.380673,-8.171966,3.403615,2.304085,4.002926,-8.782909,-8.352871,-2.799602,7.895631,3.330761,-7.640156],[0.745682,-7.328402,3.831159,7.870595,9.866399,3.498829,-8.931413,5.021832,-5.764331,6.865078,-3.143902,-5.971849,2.500162,-8.504433,8.105162,-3.252306]],[[-4.278268,-0.616497,6.622742,-1.412822,-3.807233,-5.072732,-7.826968,2.928613,-2.714867,-9.617850,-3.109138,6.323747,-6.101731,2.610727,7.744451,2.868631],[-2.190798,0.864616,4.838809,-0.576783,5.545637,-3.434167,-0.935449,-0.654056,-7.885188,-6.954287,-2.739710,7.389404,0.774102,-6.540340,-1.190397,8.428599],[9.217451,-8.203436,-7.982424,1.696153,2.818166,-3.883477,0.477948,8.128403,4.823838,-3.485267,5.233200,-4.734114,-6.008837,1.741635,-4.388442,1.275911],[5.587118,-8.356039,-3.093363,4.987178,1.117334,-6.077295,1.510633,3.937996,1.042828,-2.112759,2.564368,8.443520,5.866070,-4.702069,4.152858,9.651360],[-3.323653,8.640467,7.659137,-5.623063,-7.136854,2.044899,-5.857560,-5.188954,0.652897,1.236500,4.019642,-9.387758,9.762998,7.240526,4.461509,-3.774132],[-7.823280,-7.467953,-7.579518,6.631477,4.474786,-6.090279,5.682480,1.477250,3.198759,0.738518,-1.632333,4.153024,-9.631359,-6.724047,-7.432771,0.651624],[-5.273675,-4.886076,8.724889,9.852698,1.007185,-5.566958,-3.819720,6.038087,-1.820521,5.147306,-9.903936,7.749517,3.887134,-2.579628,-4.623750,-1.164561],[-1.525602,4.767452,-9.207119,-3.041124,0.002747,-1.589310,9.061692,8.156932,-8.087259,-3.313349,-1.231148,-1.342985,7.367616,2.650972,-8.794538,8.541231],[-2.985622,-1.899027,0.713124,-9.650716,-8.976597,9.607053,-6.779185,2.127028,1.148585,-1.868052,1.456960,0.055824,9.341024,-0.641235,-4.385954,-7.135097],[0.017185,-0.529278,-8.366071,8.394860,5.391086,-5.809026,4.061941,3.635284,9.223774,-7.506522,-1.899352,9.363874,-8.503576,7.961351,0.053466,-3.434781],[3.128343,-8.920491,2.492511,-7.039135,-0.474702,3.868594,-0.429638,-3.259072,-5.284838,7.497467,-2.773320,-1.328708,-0.716474,1.842875,-3.033397,-5.621687],[-7.963877,0.506732,-8.758350,1.567834,-8.837691,2.226190,2.499344,-9.209706,-9.038378,-0.436519,-7.678162,-5.668958,-7.349671,1.875742,5.881081,-8.694394],[-6.179173,9.240092,3.317181,5.860512,4.329522,8.919513,-5.988808,-7.898387,7.940206,1.522196,-5.187738,-4.359273,3.273880,7.269891,-9.601638,1.190937],[1.226871,7.524915,5.973767,-7.269198,3.723490,0.143563,8.140956,2.588626,-8.482417,-1.591943,-5.367207,9.315919,-9.072761,-1.138622,1.494323,2.779894],[-8.767779,2.131780,4.471728,2.451357,3.898834,-2.166344,-0.197629,5.165701,-2.802534,1.502055,9.435586,7.961578,7.301780,-3.056242,0.083809,9.773187]],[[-0.867509,0.091341,-7.163059,0.144352,3.941525,-1.323316,8.492115,-8.491764,-5.160632,-2.366813,-5.523740,4.431030,7.134427,-9.922242,-7.283081,-8.628324],[9.646881,-4.535983,-9.944531,1.554994,-3.425704,-7.370641,-6.844073,1.279111,-9.648058,-6.675842,7.909576,1.129633,2.736038,5.542194,2.866931,-8.653155],[9.142988,7.504270,-7.199444,1.794325,-4.150147,-1.894969,-4.201246,0.247087,7.336675,-7.488777,-7.860095,2.691049,8.890905,1.498227,9.688489,8.194144],[-2.691851,-4.751357,-9.497781,2.971775,9.320640,3.523964,-9.930832,0.252471,-9.788084,-3.371431,3.502577,-6.794690,6.464003,9.791401,9.124651,9.420827],[9.471512,7.003253,-1.149019,8.044610,-8.406609,5.221196,7.521784,9.749425,-0.267232,-0.395199,5.363311,8.963943,-0.382403,2.465492,4.957445,-1.204850],[3.799151,-5.097477,-0.621680,7.615870,-3.184714,0.025819,5.488028,7.032249,1.645042,7.227173,-8.135543,4.081743,-6.056340,1.704663,1.343751,-0.499060],[0.691227,-6.267828,-6.385823,-8.143985,3.763216,3.740855,-0.106557,-8.130471,-0.632493,2.582466,-6.297431,-4.054664,9.595570,9.249839,7.309600,8.928448],[-2.157032,-7.626171,-5.229153,-5.659253,6.348242,-5.013206,-2.833272,5.818640,6.576844,-7.732440,2.809918,-4.073014,-5.724300,4.327607,2.335438,-1.091664],[7.224238,7.473663,8.672460,0.994520,6.376283,8.240176,-4.856339,-2.178537,9.117809,-5.247253,9.838416,4.406359,-9.540427,3.713242,-6.162697,8.274806],[3.390176,1.460345,-7.110083,5.984292,-7.635068,-0.649438,4.384402,-8.642791,2.291901,4.334335,2.054440,-5.320730,6.258136,-3.041737,0.849347,1.767137],[-8.525919,2.307828,2.923735,-2.095449,7.836975,5.043348,2.424283,1.985350,-1.529709,-2.402239,-0.966239,6.130192,-2.829060,1.380266,4.416018,-7.439371],[0.890107,5.934915,-6.009071,-5.599623,-1.443397,-5.580525,-5.846275,-0.814318,-5.430858,-8.901688,4.095794,9.977182,6.548210,2.801823,8.436649,-5.094810],[0.852784,-6.025475,8.490671,-8.577641,-9.261147,-8.897746,-3.410653,6.623833,0.048121,0.389712,1.718921,-3.792710,2.790067,4.899145,-1.577929,1.167696],[0.598810,0.458312,9.720179,-3.026253,3.252564,-8.482891,0.216333,-8.101494,3.484169,6.246055,-2.326272,-1.849760,1.999405,8.815145,7.315241,-5.786516],[-2.266819,-2.534756,3.813649,8.504524,3.185118,-7.141150,7.570318,7.847408,0.306147,1.377904,-2.210390,1.956385,3.608398,3.475906,-3.847733,-6.663061]],[[-5.359270,-5.223006,2.795963,-1.998321,3.739680,-4.722629,0.050290,2.814258,-9.461115,8.681071,-9.401746,8.976280,6.582066,6.631584,-9.601378,-7.692127],[-3.805055,-4.704269,-0.369810,-7.065634,3.418797,-3.717871,-3.589714,5.502661,-9.962962,3.835336,-5.367987,-4.786640,-9.082490,5.119658,1.921364,0.965745],[-6.575688,-1.081945,-6.655710,-7.872869,5.460511,-9.061500,-3.559562,-5.682216,-8.615184,-0.850691,-5.182915,-4.311048,-6.827747,7.697274,1.013133,3.935030],[-6.383401,-3.195185,-2.962623,8.548692,6.657246,9.587590,1.812111,-3.140632,8.981740,-2.936451,-1.776957,-0.485897,-0.352822,-8.018112,-1.700641,3.301327],[6.223846,6.977421,-9.829889,1.914121,8.950923,-4.486182,8.177929,-9.437070,0.210678,-4.899338,-3.991199,-1.250622,1.546824,-2.055650,-7.845049,-6.986083],[-7.850843,4.575783,-2.256191,-0.455247,9.571624,4.344966,-3.189415,9.753292,-5.379552,7.477966,2.972419,-7.014751,-7.798897,-8.980294,-7.583907,8.924077],[5.465689,-0.074013,3.884724,9.949893,3.034739,6.347630,-3.970688,9.003159,8.402212,9.595293,-2.131275,2.074053,1.548761,2.095786,-2.839325,-9.175728],[3.627490,-0.207811,0.569034,6.194195,-9.819532,-4.024779,5.217010,5.888597,-1.124876,2.685151,-8.122594,-0.892422,6.210792,-5.175057,-8.697120,6.593789],[0.809305,-8.477135,8.663797,3.383221,0.951112,-2.922697,5.385531,3.903233,6.317674,-5.464543,0.563149,5.004409,-1.808532,-3.354037,-8.236784,-3.067330],[5.342438,-6.791209,-8.564288,-6.837760,-8.351390,-7.622398,3.855588,0.964321,3.398002,-9.762896,-0.362030,3.198161,6.512378,5.065585,7.330483,1.742769],[4.369702,0.832871,5.806258,6.796893,-4.794211,6.939127,4.024360,-1.989251,-9.658150,8.335954,-4.382828,4.410328,-1.827112,4.947494,-6.602500,8.422301],[5.328824,2.476891,-2.727856,-2.925955,6.852419,-8.664541,-5.229196,1.870998,-3.660437,-1.113445,3.653962,-0.674440,-2.556244,1.148563,9.583936,-4.466173],[1.096315,9.588985,-7.810191,-0.684793,-2.164422,-0.128598,-2.626761,5.388333,-5.597800,3.264074,-1.297632,-5.189791,-0.887260,8.980349,-6.458108,-0.751410],[-0.603553,5.290054,7.115928,-4.340878,4.107658,-2.372564,-5.018832,-1.673393,9.169553,-4.027653,4.294307,5.832792,-5.709586,9.930157,-5.283611,-7.761691],[-2.223857,-1.817518,3.374944,4.950472,0.083572,-3.751779,6.539858,5.228145,2.015259,-7.608634,-2.779071,-6.826791,7.114695,2.151937,1.896950,-2.991345]],[[0.810361,0.148072,7.288384,6.222895,-6.857191,-8.599337,-3.809204,5.098449,4.925462,8.531009,9.963446,-5.864788,7.960641,-0.855248,7.237394,-1.318312],[2.491316,4.629491,-3.601588,-4.571855,5.675664,2.658025,-1.966261,3.280001,-6.892589,2.154235,-0.827238,-0.103505,6.194602,-6.557047,5.119640,1.589066],[-8.852735,6.944222,-5.999389,5.927502,-4.875662,8.940622,3.009592,-8.235467,0.948876,0.336978,1.664380,-1.863389,8.703143,6.157415,2.191247,4.511799],[-4.402831,5.949855,-2.759629,-5.201039,5.249912,0.709435,-3.722170,-5.272548,4.839147,1.654615,-4.097602,6.512569,-8.612694,-8.177567,-8.365864,9.745408],[8.346697,8.462281,4.743004,-6.165017,9.497887,-5.313285,-8.583119,-8.400984,-9.134959,-5.894919,6.640734,-8.140052,2.917281,9.250646,4.016792,-8.333042],[1.802726,-2.413641,1.327355,0.187634,4.115598,-6.296505,7.181245,0.008574,-7.541427,-8.515444,-4.620804,8.162779,8.225258,9.062143,7.482845,2.538367],[0.018074,9.709996,5.068772,9.031811,-1.091764,-3.780037,-6.784473,-8.058108,5.318973,-4.739285,8.871110,8.504417,3.378198,7.856383,-7.558755,3.020564],[1.622603,-7.959537,-7.778070,9.060439,4.865294,-4.957796,7.447029,-2.518066,3.716806,-9.563307,-7.070683,1.201999,-6.462877,-0.203661,-6.283060,-5.214091],[6.060492,-0.550261,0.345140,-5.260636,9.621550,-9.210387,6.722739,1.307411,-8.389531,-8.919067,-7.476643,-6.437553,-3.345343,0.116826,-8.760026,-1.364139],[1.256805,9.643448,-8.858435,0.954906,-3.511709,4.891727,4.500098,-5.549430,-9.391962,-2.622841,2.994125,-0.166372,-6.649555,-5.235853,2.624906,-8.570075],[6.236941,5.886825,1.247048,0.713644,7.141439,-3.347230,0.811819,-8.790595,0.861897,-7.819202,1.199022,-1.765633,6.586773,-5.436526,-5.389458,1.826262],[6.697077,9.367987,4.233905,-3.200515,2.692553,6.179953,-1.005474,3.296427,4.517325,-4.577913,-4.635546,-8.075619,7.909376,-9.406398,7.461966,7.836087],[8.713751,9.782462,7.802726,8.104143,-1.766349,4.621522,-6.065144,-1.321232,1.947817,-4.574141,-3.975190,9.273517,7.136363,5.287584,2.160934,4.463768],[8.264335,6.663920,9.736709,-9.941084,-6.800585,-7.027519,-7.512815,-1.200779,6.069253,3.998980,6.396645,5.768178,-2.645342,1.146021,0.270944,-1.991355],[6.095512,0.229839,-2.738665,4.557565,7.571417,0.176915,-4.922213,1.962666,-8.180849,9.727504,8.327875,0.615813,2.969164,6.515372,7.209310,-3.975545]],[[-0.134983,5.240771,7.728710,4.980263,-6.434679,-6.443946,-1.137002,-4.874546,-3.840050,-4.986386,-4.209784,3.035916,-6.282622,-6.407628,2.566285,-1.370004],[-4.086255,-9.114602,-1.047278,7.700248,6.609871,-8.049659,6.219944,-6.001243,-8.060234,-4.347294,-7.749017,4.376301,-1.039253,6.532488,-6.006069,2.154350],[6.071046,-3.429578,1.028939,1.921145,3.324622,-9.504667,-8.281151,-9.066234,5.163716,-2.780071,-9.968003,-5.326176,1.844875,-7.716721,-0.898532,7.910057],[-6.394317,9.976413,0.898316,-3.839960,-9.437127,1.862816,1.014388,-0.436574,-7.354535,0.230946,-6.956904,-0.016475,7.322632,7.336538,-6.065591,9.507533],[-7.498800,6.617896,7.130024,-8.650774,-0.045125,0.908266,0.600508,8.659690,-2.931663,-7.461993,-8.202907,-5.481359,-9.630505,4.400453,-6.582953,4.684482],[-9.104642,-4.327319,-7.630331,7.822786,7.685169,-5.275806,-6.017788,-5.783603,-9.036115,6.704629,1.589725,-8.213747,8.613864,5.973775,8.903538,-4.524747],[6.925391,0.179591,7.050492,-2.435816,5.412351,5.509794,-9.872463,-9.026991,6.394475,-0.417038,-1.221714,-6.806709,-6.773129,1.396627,-3.302012,0.090481],[8.534217,0.980829,-0.578139,4.862421,-0.999747,2.278952,-9.253209,-2.406572,-5.241629,9.671369,3.286849,-9.130575,8.850948,1.531539,-3.637343,3.364805],[-3.456240,-8.626763,-1.149419,-3.376261,6.289241,-4.271170,-0.172220,3.434306,9.474205,9.824249,-8.229000,-1.461603,6.372888,7.674242,6.799055,2.082590],[7.731346,-9.260371,1.219256,-7.683969,-9.286667,0.815965,5.086851,8.397248,7.296715,-5.456334,7.355396,4.657961,-9.773667,-8.787390,4.232463,4.414800],[5.059575,-4.012255,2.015411,5.764141,6.216436,-7.134924,8.253729,0.791543,-6.563433,-1.886636,4.596265,-6.023911,-2.742556,1.762337,8.753461,-7.854520],[-0.170830,2.563869,-7.319785,0.588727,5.125935,-2.481380,-8.058767,4.959876,5.669339,-9.782257,3.211144,6.946233,4.791843,6.239824,0.977302,9.438516],[0.450746,2.440641,-5.709622,9.794342,-0.126466,-4.567345,-2.972110,5.853037,-7.784984,-3.041076,1.278070,3.865251,-8.136892,9.040966,4.719148,6.289884],[0.280813,-8.308428,4.848669,-5.149282,1.752982,-4.294067,-9.109617,-3.016972,9.553769,3.088958,-8.645953,9.656702,5.045924,-1.212275,-4.621013,5.651072],[2.718453,1.230488,-6.524897,-4.942945,-4.093509,5.971514,7.782760,5.978649,-9.823346,1.189477,-3.342422,6.494890,2.873475,-3.711493,1.492921,5.496865]],[[9.431690,7.515247,-4.050837,0.220463,4.100228,-2.074127,-8.714590,7.329471,-7.334040,2.469742,-2.979896,-6.983638,0.330239,1.230130,9.307138,7.300782],[1.287352,-5.063982,-7.034201,-2.054671,-1.618249,-6.484269,2.740940,0.197576,-6.116991,-7.611352,2.198086,-3.505894,2.132944,5.907265,2.853387,0.625837],[7.408247,-0.662256,4.663807,0.018507,3.723190,0.366380,-1.158512,-7.002414,5.705620,9.462364,-3.858111,8.803301,9.492926,-9.716642,9.930973,3.875802],[6.246724,5.360666,-3.743466,-2.937497,-0.835048,-1.288569,-5.816509,-7.145624,2.777612,-3.951603,0.848972,4.676598,-9.165991,3.316038,4.353291,-9.796662],[1.179406,-0.429896,8.705557,9.712956,-5.698784,-3.780217,1.696301,-1.359372,-0.582321,-7.847232,4.416477,-1.239968,6.227103,3.105648,-7.236407,9.278899],[0.902884,6.695034,-3.156302,2.294287,5.358187,5.990814,-2.377723,7.650184,-3.735332,-3.465559,-5.189145,7.935545,5.909807,-1.148095,-9.543264,7.794191],[3.452681,-9.793560,3.328643,-1.602838,9.671308,8.580534,-6.152460,-6.289763,-9.598861,-2.108668,1.798291,-8.535316,-0.367651,-5.459877,-5.663991,3.661406],[2.709691,1.806144,1.216400,2.235825,3.689642,-5.190865,1.208149,-7.308681,9.387757,-2.977612,-7.909976,5.411509,-5.145117,-7.015145,5.305600,-6.056732],[5.319009,-0.367774,-3.378706,-6.640468,-1.150196,2.258998,2.706334,-7.873931,-7.848159,-6.740782,6.397162,6.708452,7.092501,6.382044,3.867451,5.815053],[1.639167,9.253749,1.645624,-5.228991,-3.361538,-8.541690,2.609761,0.239632,2.457839,1.835740,9.787147,-8.093956,-7.397550,-4.716411,-1.948450,-9.809202],[0.127275,8.886180,9.427964,-0.518128,3.049401,-2.874461,8.755188,-1.182282,5.957511,-6.335467,-6.039984,1.727186,-4.046324,4.509042,-2.208511,-8.703167],[9.003580,-1.921511,2.440641,7.544579,3.933659,-3.898960,7.371888,-6.619033,-2.253952,9.059442,2.638781,5.435022,-7.674020,-0.554982,-8.834499,-9.927913],[-3.541557,3.123180,-7.859928,-0.791786,-2.892246,-9.717098,7.293090,-7.037672,1.588012,1.318348,-2.350950,-8.944213,3.063769,3.008484,-6.699937,7.451893],[1.089307,-5.769653,9.337584,2.990049,6.638580,8.372907,-0.639052,-8.391878,-1.082343,0.997876,-6.640119,2.541256,-4.989518,-1.118604,4.085187,-8.803830],[-7.471601,-7.579150,7.384742,4.919754,9.234941,-5.904565,-8.696324,-2.636404,-8.287874,9.524390,0.767350,-5.589381,-5.233390,-7.750087,-2.489518,-0.395153]],[[-7.946710,3.818905,-8.967892,-2.249372,9.488469,-4.377293,-2.053241,-7.999570,-0.654992,8.536557,2.414993,5.454833,-6.220243,9.782139,-8.773178,8.411381],[-8.263045,5.976551,3.330958,-4.325749,-0.004713,-6.450753,5.675684,6.327216,4.813556,-5.347303,-7.701230,-3.276160,0.629465,4.976457,0.152504,-3.042005],[2.388275,-2.781632,-9.839934,-9.905580,1.201042,2.885533,7.934435,-3.666881,3.008455,9.594674,6.979727,4.847502,6.374305,-1.872918,6.078851,-7.379749],[-0.915352,-6.021324,-7.558480,0.630721,7.067712,-6.185522,9.619448,0.219726,4.633807,-0.503256,-2.686323,-2.090979,4.302932,-4.665019,4.463027,0.436542],[-3.550406,-0.194124,-3.343339,-5.457593,-0.898166,0.671424,-4.856494,9.339838,1.010696,-1.146268,6.333170,-0.261478,2.592061,0.701833,6.730594,9.933579],[-3.649258,-0.105563,3.557730,5.519489,-7.708691,-7.032044,5.314414,-9.494346,9.242539,1.889008,3.110757,7.030690,-5.774607,-5.863388,-7.370419,6.828642],[8.330142,5.021947,4.644084,3.274203,6.157483,-7.508723,3.916058,-5.450388,7.621221,8.493682,5.405265,8.590840,6.027359,2.638506,1.352873,8.566950],[2.332643,-5.100906,1.189723,-8.727921,5.098558,0.678442,6.695720,3.305929,4.353082,-1.959219,-3.940458,0.661778,2.129630,9.462282,8.617589,8.655799],[8.144486,2.365936,1.167854,-4.096043,-4.776968,8.560285,2.394159,-1.163772,5.040640,7.020624,8.153772,-6.989897,4.692219,4.714005,-3.748296,9.331353],[-1.151109,-8.409224,-9.659345,-3.260097,-1.539389,9.013406,5.736664,1.463169,-3.270875,-8.017270,1.132450,-6.366804,-4.315105,6.434693,-0.826655,-1.709102],[-6.823164,4.191744,1.821553,6.558192,6.426027,2.292189,6.707528,-4.865913,5.765651,1.425375,4.510944,-7.627525,3.731070,-3.185371,-2.997030,3.008763],[3.136480,-9.565002,-6.645024,-3.432383,-5.671280,-6.049618,-1.333046,7.475661,1.775210,-2.804797,-8.271302,-6.692346,2.348781,3.555880,-6.195971,-8.992993],[1.856996,-0.942435,-3.062086,-8.664704,4.510130,-4.641024,2.500311,1.035348,-1.772446,8.245933,-8.401427,5.757568,-8.765011,-6.787769,4.980160,-1.315337],[7.186857,-0.617183,6.450637,-3.723611,-2.653984,3.392724,-2.000082,-3.795530,-4.297248,9.711368,-9.978431,-3.515702,8.888715,4.586497,4.049825,-4.168233],[-1.546947,7.361693,3.856839,-6.494012,-8.629607,9.197443,5.636129,-1.100643,0.234588,-0.621664,-4.948378,-4.887456,6.071175,-9.546826,9.732571,2.484369]],[[2.869442,5.400596,-3.525342,-2.145547,8.273360,9.778980,-8.348723,1.824301,5.308781,8.281198,-5.746006,-8.757154,7.248929,0.552708,2.066662,-9.988239],[7.088217,0.911617,-0.351261,-3.850000,3.010405,-6.117473,7.409204,8.901917,9.321830,-5.534046,-3.582891,-4.854830,6.978220,-6.841082,-2.521074,-8.367507],[-4.206489,-3.454281,9.127436,8.599229,-1.501744,-6.059232,2.995284,1.248447,-3.011266,-4.394214,-7.329032,-8.296905,-3.691338,-8.455952,-4.230841,-6.716841],[-8.864357,8.851027,-0.294146,-8.691540,-0.602937,-0.060694,-8.277221,-0.066371,-7.845022,8.739063,9.467040,-3.730534,-0.790565,5.032552,3.919439,1.821487],[-2.961037,-0.228075,5.177528,8.387131,6.720815,8.622396,6.491630,0.567936,4.936865,-0.813641,-5.893961,-9.014096,5.976207,9.438799,-9.564779,-9.916656],[7.234266,1.798549,9.564158,-4.025999,-8.693736,-5.410776,-8.873258,9.913356,-7.549165,-4.958692,6.457000,8.565721,-2.760588,5.515126,-4.047588,0.735897],[-3.076143,-5.721988,-8.152979,4.697404,8.271497,-2.971689,3.589823,2.741171,-9.323795,-3.424172,-1.353165,-3.945856,2.596076,3.588350,-0.955603,7.231305],[6.104895,-4.197576,4.815459,0.205036,-1.758543,-9.383757,2.239371,8.067172,4.546620,2.355919,-3.177906,7.018690,-7.688760,8.106953,2.149913,6.164524],[-9.152931,-0.611686,5.183297,-3.174757,-7.846283,3.250819,-1.649066,3.125394,4.115712,-2.501348,-2.409861,6.472195,-0.733697,0.253976,1.464207,9.154827],[0.555249,4.322298,8.860218,-5.168181,-7.045968,4.345751,-7.668711,7.659339,-8.871061,8.886125,6.441254,5.158764,3.078154,0.176164,1.927829,4.853629],[2.602702,-3.693447,-1.452773,-5.248575,-5.208626,-2.709148,-9.188111,-5.711186,0.319561,4.614019,-5.069116,-4.423609,-9.586883,6.325024,-4.374465,-3.024894],[2.361810,-9.493445,2.184690,9.485866,3.483542,-0.825060,4.239285,-1.447574,3.365779,8.342540,-2.544376,8.338879,8.219395,-2.412991,9.243980,9.871042],[7.870926,8.032458,-8.319970,9.996164,-7.773410,2.803124,-2.910208,-4.734086,-5.972048,-7.138036,8.422661,8.151369,-5.557033,6.140581,-8.724082,-1.146442],[-8.623196,-7.999084,-3.412807,-6.182555,3.956021,-6.057661,7.598651,5.897831,-3.484114,-1.694300,-8.453116,1.706700,-1.280583,-6.609576,3.104547,-9.655934],[-0.841726,9.618405,-4.533065,4.487018,2.876470,-1.695574,-0.500294,-5.501950,3.001781,7.492601,-0.284327,-9.542535,2.896310,6.994785,0.124039,-4.420398]]], dtype = "float32")#candidate|4037|(12, 15, 16)|const|float32
uop_4038 = relay.tan(const_4037.astype('float32')) # shape=(12, 15, 16)
bop_4040 = relay.divide(const_4037.astype('float32'), relay.reshape(uop_4038.astype('float32'), relay.shape_of(const_4037))) # shape=(12, 15, 16)
func_2509_call = mod.get_global_var('func_2509')
func_2513_call = mutated_mod.get_global_var('func_2513')
var_4044 = relay.var("var_4044", dtype = "bool", shape = ())#candidate|4044|()|var|bool
const_4045 = relay.const([[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True]], dtype = "bool")#candidate|4045|(420, 1)|const|bool
call_4043 = func_2509_call(relay.reshape(var_4044.astype('bool'), []), relay.reshape(const_4045.astype('bool'), [2, 14, 15]), )
call_4046 = func_2509_call(relay.reshape(var_4044.astype('bool'), []), relay.reshape(const_4045.astype('bool'), [2, 14, 15]), )
output = relay.Tuple([bop_4040,call_4043,var_4044,const_4045,])
output2 = relay.Tuple([bop_4040,call_4046,var_4044,const_4045,])
func_4049 = relay.Function([var_4044,], output)
mod['func_4049'] = func_4049
mod = relay.transform.InferType()(mod)
mutated_mod['func_4049'] = func_4049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4050 = relay.var("var_4050", dtype = "bool", shape = ())#candidate|4050|()|var|bool
func_4049_call = mutated_mod.get_global_var('func_4049')
call_4051 = func_4049_call(var_4050)
output = call_4051
func_4052 = relay.Function([var_4050], output)
mutated_mod['func_4052'] = func_4052
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4122 = relay.var("var_4122", dtype = "uint16", shape = ())#candidate|4122|()|var|uint16
var_4123 = relay.var("var_4123", dtype = "uint16", shape = (14, 8, 1))#candidate|4123|(14, 8, 1)|var|uint16
bop_4124 = relay.not_equal(var_4122.astype('bool'), var_4123.astype('bool')) # shape=(14, 8, 1)
output = relay.Tuple([bop_4124,])
output2 = relay.Tuple([bop_4124,])
func_4128 = relay.Function([var_4122,var_4123,], output)
mod['func_4128'] = func_4128
mod = relay.transform.InferType()(mod)
var_4129 = relay.var("var_4129", dtype = "uint16", shape = ())#candidate|4129|()|var|uint16
var_4130 = relay.var("var_4130", dtype = "uint16", shape = (14, 8, 1))#candidate|4130|(14, 8, 1)|var|uint16
output = func_4128(var_4129,var_4130,)
func_4131 = relay.Function([var_4129,var_4130,], output)
mutated_mod['func_4131'] = func_4131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4484 = relay.var("var_4484", dtype = "float32", shape = (5, 10, 9))#candidate|4484|(5, 10, 9)|var|float32
uop_4485 = relay.erf(var_4484.astype('float32')) # shape=(5, 10, 9)
uop_4487 = relay.cos(uop_4485.astype('float64')) # shape=(5, 10, 9)
func_4128_call = mod.get_global_var('func_4128')
func_4131_call = mutated_mod.get_global_var('func_4131')
const_4490 = relay.const(-10, dtype = "uint16")#candidate|4490|()|const|uint16
const_4491 = relay.const([[-7,-2,7,-1,-8,-1,-6,-6,-4,7,-2,5,1,-2,7,2,9,7,8,4,-6,8,1,-7,9,-7,2,-3,-9,8,5,10,-6,1,4,-9,10,2,-3,8,-10,3,8,-5,-8,-5,-4,10,1,-1,-9,-5,8,-2,-4,-5,9,8,-1,-6,-7,6,7,1,-7,3,3,-5,-5,5,9,-8,5,8,1,9,-5,9,-10,10,-3,1,2,10,-3,7,-5,2,10,-8,-4,-1,3,-10,2,-8,4,-4,7,4,-9,4,7,-5,-6,10,-3,8,10,-7,-10,9]], dtype = "uint16")#candidate|4491|(1, 112)|const|uint16
call_4489 = relay.TupleGetItem(func_4128_call(relay.reshape(const_4490.astype('uint16'), []), relay.reshape(const_4491.astype('uint16'), [14, 8, 1]), ), 0)
call_4492 = relay.TupleGetItem(func_4131_call(relay.reshape(const_4490.astype('uint16'), []), relay.reshape(const_4491.astype('uint16'), [14, 8, 1]), ), 0)
output = relay.Tuple([uop_4487,call_4489,const_4490,const_4491,])
output2 = relay.Tuple([uop_4487,call_4492,const_4490,const_4491,])
func_4503 = relay.Function([var_4484,], output)
mod['func_4503'] = func_4503
mod = relay.transform.InferType()(mod)
var_4504 = relay.var("var_4504", dtype = "float32", shape = (5, 10, 9))#candidate|4504|(5, 10, 9)|var|float32
output = func_4503(var_4504)
func_4505 = relay.Function([var_4504], output)
mutated_mod['func_4505'] = func_4505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4696 = relay.var("var_4696", dtype = "int8", shape = (13, 10, 16))#candidate|4696|(13, 10, 16)|var|int8
var_4697 = relay.var("var_4697", dtype = "int8", shape = (13, 10, 16))#candidate|4697|(13, 10, 16)|var|int8
bop_4698 = relay.less(var_4696.astype('bool'), relay.reshape(var_4697.astype('bool'), relay.shape_of(var_4696))) # shape=(13, 10, 16)
func_3913_call = mod.get_global_var('func_3913')
func_3916_call = mutated_mod.get_global_var('func_3916')
var_4703 = relay.var("var_4703", dtype = "float64", shape = (750,))#candidate|4703|(750,)|var|float64
var_4704 = relay.var("var_4704", dtype = "float64", shape = (72,))#candidate|4704|(72,)|var|float64
call_4702 = relay.TupleGetItem(func_3913_call(relay.reshape(var_4703.astype('float64'), [750,]), relay.reshape(var_4704.astype('float64'), [72,]), ), 0)
call_4705 = relay.TupleGetItem(func_3916_call(relay.reshape(var_4703.astype('float64'), [750,]), relay.reshape(var_4704.astype('float64'), [72,]), ), 0)
output = relay.Tuple([bop_4698,call_4702,var_4703,var_4704,])
output2 = relay.Tuple([bop_4698,call_4705,var_4703,var_4704,])
func_4735 = relay.Function([var_4696,var_4697,var_4703,var_4704,], output)
mod['func_4735'] = func_4735
mod = relay.transform.InferType()(mod)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4735_call = mutated_mod.get_global_var('func_4735')
var_4737 = relay.var("var_4737", dtype = "int8", shape = (13, 10, 16))#candidate|4737|(13, 10, 16)|var|int8
var_4738 = relay.var("var_4738", dtype = "int8", shape = (13, 10, 16))#candidate|4738|(13, 10, 16)|var|int8
var_4739 = relay.var("var_4739", dtype = "float64", shape = (750,))#candidate|4739|(750,)|var|float64
var_4740 = relay.var("var_4740", dtype = "float64", shape = (72,))#candidate|4740|(72,)|var|float64
call_4736 = func_4735_call(var_4737,var_4738,var_4739,var_4740,)
output = call_4736
func_4741 = relay.Function([var_4737,var_4738,var_4739,var_4740,], output)
mutated_mod['func_4741'] = func_4741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4990 = relay.var("var_4990", dtype = "float64", shape = (16, 5, 7))#candidate|4990|(16, 5, 7)|var|float64
const_4991 = relay.const([[[2.802803,-1.341993,3.733272,-9.334507,1.848375,-5.056036,-5.984456],[-9.274991,4.733561,3.651985,2.084489,4.540298,-6.772616,8.091042],[-9.247046,1.888994,-1.505596,-5.840238,2.461025,-9.207505,6.383353],[-6.052016,-8.563495,1.231897,-6.286612,7.001703,-1.489097,2.972110],[3.337672,9.961591,6.953304,0.641224,-0.960213,-1.924667,-2.290848]],[[-2.325415,4.823241,2.556693,-4.615688,-8.680128,4.292916,-3.710588],[-7.058029,3.070956,-0.216737,6.617921,6.742729,-3.332351,-7.729826],[-8.535169,0.535338,2.563899,1.884663,-8.795869,0.715605,-2.181222],[-0.606534,-5.214445,-8.654836,-8.244272,-8.661782,0.660999,-8.034907],[6.665256,-8.519957,-8.988801,9.828199,-0.128742,-8.694457,-7.797264]],[[7.422402,5.637233,5.965837,6.286692,0.695725,5.997162,0.765682],[8.779395,-7.606078,6.979906,-0.657775,-5.972330,3.351481,-7.398734],[9.045192,4.240208,-4.999943,-2.139974,-1.202549,5.674882,2.508195],[3.235932,6.088299,-2.895561,3.771435,-7.388364,1.505604,8.395419],[-1.551924,2.752762,-2.309038,-7.561443,4.974055,7.169891,-5.950630]],[[9.131737,9.860445,2.286951,0.786207,-1.961866,5.092175,8.492808],[9.448631,9.996750,-7.612821,2.628369,3.891420,8.865989,-0.465080],[-9.118102,-1.845390,-3.088038,-6.832039,-1.405773,9.384993,-8.039801],[-4.864579,-3.107689,3.591126,7.996006,-3.346917,-9.195159,-7.971859],[-1.264737,-5.307470,-3.907627,-3.370029,-8.613582,-1.282077,-2.766097]],[[9.647758,-9.245069,-1.643664,8.483855,-9.919047,-2.361568,6.168495],[-1.207907,-2.826186,-5.920920,8.135715,4.194442,3.878160,-6.640307],[8.229745,-8.152585,7.291729,-6.560614,5.383194,0.068078,-5.969085],[-8.593012,4.135858,6.349846,7.478914,-8.562454,-5.270411,-4.958359],[-2.247731,4.706815,4.072055,-4.038157,-9.761401,1.751057,2.776607]],[[7.768433,-9.852501,0.457859,-5.578798,7.371154,9.123345,-9.275326],[-8.697442,7.107435,2.346697,-8.424511,-6.681449,-6.937249,1.702737],[-4.238787,-9.720598,-4.893656,8.731555,-6.700927,-6.781636,2.709661],[-1.864105,-3.935454,-5.809070,5.687579,-3.792905,0.135962,-7.259518],[-6.004551,8.386915,-8.452856,-1.866934,-3.207428,7.158507,-7.779230]],[[-6.973625,6.627103,7.816772,1.322297,0.250612,-6.942212,-1.032752],[5.856405,9.004910,-3.109869,-7.108090,-0.095398,5.778062,2.542677],[-0.021037,5.703465,2.756478,1.765399,-2.424656,7.776281,9.026314],[5.277234,8.973392,-7.797483,-7.162746,8.332087,-1.341260,-2.840353],[-7.281012,-6.960921,5.741701,3.916849,-0.757110,6.551999,-0.605721]],[[-4.522939,-0.002172,7.246612,-6.260330,-0.460718,1.566533,-1.213483],[-8.693351,0.120288,-0.115069,8.572585,0.619596,-5.178706,7.526851],[-9.387313,-7.509982,5.411797,1.427485,-2.181065,-1.597068,-6.367427],[-3.255074,2.323750,1.987958,2.571183,-2.885875,1.846603,-0.828168],[3.067639,-2.820122,2.030511,7.998891,2.337467,0.685342,-1.831355]],[[6.433375,8.589733,8.762444,-7.781047,-1.448270,-9.059593,-5.013703],[-4.263508,-1.232204,-5.389941,-3.010916,0.548101,-7.290687,-5.712688],[6.905134,2.417996,4.394823,-3.243928,-2.836562,-9.729571,2.096379],[9.385065,-2.077055,-3.043488,-5.545685,2.936502,-0.063327,-7.925963],[-7.724141,-3.693588,4.527938,-8.121438,4.862465,-2.758986,0.130026]],[[-1.353993,2.384929,-1.592613,5.549225,-1.335045,9.159566,-1.918983],[9.849896,-1.133618,6.661039,7.485042,-3.836753,-4.491678,-5.614882],[7.737777,7.961181,-6.350827,-1.365975,-5.045386,2.242416,8.449984],[0.397145,-5.958182,-6.031798,-7.136725,-7.222662,-4.453536,7.221995],[-1.081773,5.064220,7.717517,0.095228,-3.092192,-4.336039,3.532174]],[[6.731105,-0.302838,0.777958,3.588037,5.295460,6.478768,0.892682],[-0.891803,-6.697189,3.059950,5.939246,-9.985532,-2.613268,-6.276223],[-4.139323,6.664451,-9.242926,-9.952179,-0.848594,6.009406,2.312258],[2.322144,-3.270975,8.174084,-4.937090,9.760598,6.499632,-8.737410],[-4.962940,-3.171097,5.954638,-1.098728,5.590077,3.453968,6.569857]],[[9.102958,0.480697,4.696762,-5.033641,5.968254,8.115342,-5.156181],[-1.060269,6.414952,2.485522,2.010250,4.000880,-5.177640,-4.496680],[-7.890360,-5.588298,-7.810460,8.577470,-5.231155,-8.630787,-1.001077],[-8.976726,-0.566464,-6.044371,1.462710,4.845051,-5.279003,-7.004392],[3.472210,-3.699542,-3.204415,8.331346,-8.258383,6.829790,2.140283]],[[-7.405292,2.187094,-5.601810,-3.881811,6.742811,0.596059,-1.918584],[5.819932,-9.150912,-6.275276,9.083583,-4.490008,5.044604,6.890243],[9.330279,2.867582,-1.981410,-1.780556,-0.241316,7.462234,-4.239939],[3.929502,-8.767981,9.498665,1.856711,1.228379,7.369041,-0.204787],[4.800166,6.114110,-4.386860,-1.286842,8.408445,8.411328,6.018635]],[[-8.421276,5.242767,7.886670,-3.068785,0.120356,-8.497686,-4.846939],[-2.704227,-3.625828,-0.931566,-9.089703,-4.235448,-7.467028,9.985600],[-9.235105,-7.752559,-7.048075,-0.533398,-6.175245,-9.093247,-8.549463],[-9.597031,-1.111046,4.087489,-6.906002,-4.939942,-0.661622,-0.125650],[6.410064,9.716267,-6.617666,-3.987523,4.185969,-4.525650,3.668817]],[[1.645860,4.928419,9.891234,-3.058411,4.694248,-3.302466,9.313136],[-5.612493,5.926401,3.059234,2.973151,7.790123,-6.642055,-1.303988],[-2.656066,-9.746340,-1.267444,1.272917,0.365838,-4.811557,9.347820],[6.660806,-2.005848,-0.884065,3.915335,-5.967339,6.711373,-0.519741],[-4.694542,1.536410,-5.586648,1.399469,6.227870,-1.460241,-7.249527]],[[8.901959,-1.010629,4.122985,5.669956,-1.704452,7.181442,6.319238],[-3.647214,6.093061,1.886918,2.523557,-9.011553,-2.632207,-3.693850],[-7.636786,1.071002,-9.280644,-2.730355,-8.643972,0.745176,-9.655724],[3.519115,1.524505,0.406146,6.219698,4.431596,5.006359,2.227968],[-5.872894,-1.410243,-0.190129,-2.042867,5.073275,-3.410156,-5.743484]]], dtype = "float64")#candidate|4991|(16, 5, 7)|const|float64
bop_4992 = relay.divide(var_4990.astype('float64'), relay.reshape(const_4991.astype('float64'), relay.shape_of(var_4990))) # shape=(16, 5, 7)
func_2889_call = mod.get_global_var('func_2889')
func_2893_call = mutated_mod.get_global_var('func_2893')
const_5005 = relay.const(-2, dtype = "uint16")#candidate|5005|()|const|uint16
var_5006 = relay.var("var_5006", dtype = "uint16", shape = (225,))#candidate|5006|(225,)|var|uint16
var_5007 = relay.var("var_5007", dtype = "bool", shape = (420,))#candidate|5007|(420,)|var|bool
call_5004 = relay.TupleGetItem(func_2889_call(relay.reshape(const_5005.astype('uint16'), []), relay.reshape(var_5006.astype('uint16'), [15, 3, 5]), relay.reshape(var_5007.astype('bool'), [420,]), ), 1)
call_5008 = relay.TupleGetItem(func_2893_call(relay.reshape(const_5005.astype('uint16'), []), relay.reshape(var_5006.astype('uint16'), [15, 3, 5]), relay.reshape(var_5007.astype('bool'), [420,]), ), 1)
output = relay.Tuple([bop_4992,call_5004,const_5005,var_5006,var_5007,])
output2 = relay.Tuple([bop_4992,call_5008,const_5005,var_5006,var_5007,])
func_5017 = relay.Function([var_4990,var_5006,var_5007,], output)
mod['func_5017'] = func_5017
mod = relay.transform.InferType()(mod)
mutated_mod['func_5017'] = func_5017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5017_call = mutated_mod.get_global_var('func_5017')
var_5019 = relay.var("var_5019", dtype = "float64", shape = (16, 5, 7))#candidate|5019|(16, 5, 7)|var|float64
var_5020 = relay.var("var_5020", dtype = "uint16", shape = (225,))#candidate|5020|(225,)|var|uint16
var_5021 = relay.var("var_5021", dtype = "bool", shape = (420,))#candidate|5021|(420,)|var|bool
call_5018 = func_5017_call(var_5019,var_5020,var_5021,)
output = call_5018
func_5022 = relay.Function([var_5019,var_5020,var_5021,], output)
mutated_mod['func_5022'] = func_5022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5130 = relay.var("var_5130", dtype = "float32", shape = (7, 3, 9))#candidate|5130|(7, 3, 9)|var|float32
uop_5131 = relay.log2(var_5130.astype('float32')) # shape=(7, 3, 9)
func_2236_call = mod.get_global_var('func_2236')
func_2240_call = mutated_mod.get_global_var('func_2240')
var_5152 = relay.var("var_5152", dtype = "uint32", shape = (288,))#candidate|5152|(288,)|var|uint32
const_5153 = relay.const([-9.878943,-8.685014,5.528879,6.902638,-3.768951,6.307456,-9.239871,-7.008438,-2.534995,2.325795,5.227949,-3.096511,-1.396101,-5.248275,2.100561,1.404669,5.703697,-8.545630,9.491821,-5.191683,8.488213,-1.428862,-7.427787,-6.209692,-0.736008,-4.662991,-8.262844,5.341127,3.019047,-5.284369,2.927130,-4.801977,3.426053,3.285533,-2.794678,-4.627904,7.751235,6.517402,-4.883441,8.504933,4.337710,-2.887366,-4.426659,-6.529600,8.449752,-7.398939,3.834429,8.552702,-2.243278,2.404831,-4.180575,-3.050766,-5.308140,-2.029025,2.349813,-3.532679,3.210734,-0.115508,-9.184289,4.784513,9.639237,-6.838485,-3.911809,4.106461,5.575423,7.265110,1.750184,8.783293,2.997564,-9.963747,8.776815,4.144556,1.746383,2.272687,-6.963475,8.368295,-7.045556,-6.044827,-2.857996,9.615139,6.042934,9.859622,1.655667,-5.389578,-8.657586,6.421393,4.601789,-9.026779,5.558449,9.575529,-9.585771,6.634834,-3.932887,0.782892,-7.139789,-1.238366,1.338425,-4.897320,1.837132,7.656601,2.647625,2.082355,7.092180,5.256384,9.596347,5.870889,2.794178,6.500658,-3.167606,-1.146506,3.573310,-2.239218,3.975689,0.580825,-5.260323,-5.413384,-2.991700,-9.718166,-2.391691,-0.905865,-9.308843,2.058701,-1.674382,-3.855381,-9.557798,7.232938,8.452384,-7.537242,-7.423134,7.840656,3.026379,-6.358041,-2.638310,2.884049,-4.667665,-4.526751,5.854110,6.316907,-6.271477,7.143114,-0.738382,4.791630,-7.629283,-8.067739,2.324829,2.883972,-9.451708,-0.927296,2.426661,8.591013,9.120330,-7.081079,8.526953,6.633968,4.196462,-5.544297,5.496146,-0.216162,-7.327070,4.685866,-7.660878,-6.492800,-3.584505,1.780396,-0.371689,-2.649942,5.262086,2.360637,-5.581375,-6.156702,6.707356,6.262699,-0.389657,-0.187063,6.589616,2.238801,2.500191,-1.806587,-6.098032,4.971889,-2.557602,5.268894,-0.106200,-8.576050,7.753015,1.922908,-7.444465,1.117127,-4.921063,6.354598,3.456590,6.493819,-1.226969,4.495480,-7.650697,1.994990,-1.409826,-6.018581,1.982891,4.839124,2.509065,6.631699,7.871660,4.960146,6.308547,0.694280,1.984007,3.166676,-5.545771,-4.708332,0.935562,8.332041,-2.165772,-4.888177,7.704400,-8.604210,-2.755059,-6.930977,0.910718,8.061443,-5.556041,0.188803,-7.051127,4.847888,7.512041,5.800735,9.903778,-3.110082,-3.062825,-1.506160,-1.895194,-3.954463,-7.913775,9.260891,-7.396357,-0.819736,2.759645,-4.719972,-7.150467,6.485764], dtype = "float32")#candidate|5153|(240,)|const|float32
call_5151 = relay.TupleGetItem(func_2236_call(relay.reshape(var_5152.astype('uint32'), [9, 4, 8]), relay.reshape(const_5153.astype('float32'), [240,]), ), 6)
call_5154 = relay.TupleGetItem(func_2240_call(relay.reshape(var_5152.astype('uint32'), [9, 4, 8]), relay.reshape(const_5153.astype('float32'), [240,]), ), 6)
uop_5161 = relay.cos(var_5130.astype('float32')) # shape=(7, 3, 9)
func_2236_call = mod.get_global_var('func_2236')
func_2240_call = mutated_mod.get_global_var('func_2240')
call_5163 = relay.TupleGetItem(func_2236_call(relay.reshape(var_5152.astype('uint32'), [9, 4, 8]), relay.reshape(call_5151.astype('float32'), [240,]), ), 5)
call_5164 = relay.TupleGetItem(func_2240_call(relay.reshape(var_5152.astype('uint32'), [9, 4, 8]), relay.reshape(call_5151.astype('float32'), [240,]), ), 5)
output = relay.Tuple([uop_5131,call_5151,var_5152,const_5153,uop_5161,call_5163,])
output2 = relay.Tuple([uop_5131,call_5154,var_5152,const_5153,uop_5161,call_5164,])
func_5170 = relay.Function([var_5130,var_5152,], output)
mod['func_5170'] = func_5170
mod = relay.transform.InferType()(mod)
var_5171 = relay.var("var_5171", dtype = "float32", shape = (7, 3, 9))#candidate|5171|(7, 3, 9)|var|float32
var_5172 = relay.var("var_5172", dtype = "uint32", shape = (288,))#candidate|5172|(288,)|var|uint32
output = func_5170(var_5171,var_5172,)
func_5173 = relay.Function([var_5171,var_5172,], output)
mutated_mod['func_5173'] = func_5173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5504 = relay.var("var_5504", dtype = "float64", shape = (9, 11, 4))#candidate|5504|(9, 11, 4)|var|float64
uop_5505 = relay.rsqrt(var_5504.astype('float64')) # shape=(9, 11, 4)
output = uop_5505
output2 = uop_5505
func_5507 = relay.Function([var_5504,], output)
mod['func_5507'] = func_5507
mod = relay.transform.InferType()(mod)
var_5508 = relay.var("var_5508", dtype = "float64", shape = (9, 11, 4))#candidate|5508|(9, 11, 4)|var|float64
output = func_5507(var_5508)
func_5509 = relay.Function([var_5508], output)
mutated_mod['func_5509'] = func_5509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5748 = relay.var("var_5748", dtype = "uint8", shape = (1, 7, 13))#candidate|5748|(1, 7, 13)|var|uint8
var_5749 = relay.var("var_5749", dtype = "uint8", shape = (13, 7, 13))#candidate|5749|(13, 7, 13)|var|uint8
bop_5750 = relay.bitwise_and(var_5748.astype('uint8'), var_5749.astype('uint8')) # shape=(13, 7, 13)
uop_5775 = relay.log2(bop_5750.astype('float64')) # shape=(13, 7, 13)
output = uop_5775
output2 = uop_5775
func_5777 = relay.Function([var_5748,var_5749,], output)
mod['func_5777'] = func_5777
mod = relay.transform.InferType()(mod)
var_5778 = relay.var("var_5778", dtype = "uint8", shape = (1, 7, 13))#candidate|5778|(1, 7, 13)|var|uint8
var_5779 = relay.var("var_5779", dtype = "uint8", shape = (13, 7, 13))#candidate|5779|(13, 7, 13)|var|uint8
output = func_5777(var_5778,var_5779,)
func_5780 = relay.Function([var_5778,var_5779,], output)
mutated_mod['func_5780'] = func_5780
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5792 = relay.const([[[-7.639079,-7.956819,-7.784754,-9.260573,-4.589273,-8.258330,2.088441,0.582441,2.701824,-8.295936],[-3.193227,-6.725509,5.629775,3.684218,-0.436697,-0.186395,5.015657,-9.761399,3.579038,-8.901562],[0.636366,5.540137,-7.220758,4.364963,-3.440912,-6.639252,-0.226732,8.893138,-0.424698,5.204207],[0.486478,2.698914,-9.104212,-1.664157,-9.885393,2.068185,-0.799983,-5.480111,7.294881,-8.119247],[8.648237,-9.612145,6.017212,4.854330,7.681546,-1.880490,-1.088286,3.643831,1.792878,9.500707],[3.576531,-4.531366,6.319238,-8.241218,-1.370091,9.558895,-7.643300,5.108836,5.810016,2.360212],[-8.026389,1.412196,4.189688,0.911930,-6.063984,-2.356471,-2.633336,7.005164,2.519843,-1.434194],[-3.851201,0.502320,-1.480360,-9.406040,1.644128,-7.478157,-6.032952,2.177821,-8.213940,-8.854219],[4.456537,-1.625126,4.346372,1.301401,-5.544493,-6.807634,8.080517,7.764052,6.825489,2.638020],[6.474528,-2.820575,7.374562,7.678621,-0.130427,1.742177,-0.767414,8.163738,6.549147,-0.203422],[2.989222,6.133709,-3.985373,-9.602156,-6.648101,-7.743434,8.470965,3.517357,-7.673052,-9.914223],[7.496695,-2.495984,-8.814134,9.680654,9.479185,8.120101,2.653415,6.030374,1.897839,0.062943],[-4.397689,5.116834,-6.713518,-8.156414,6.550659,1.194759,-3.130837,-5.683112,-1.553014,2.278190],[8.298647,-1.344707,3.261443,-1.653231,3.675299,-8.142212,4.669225,6.972649,4.690277,4.221248]],[[-3.150290,7.337705,-7.309568,9.229895,7.202774,-5.264911,4.656694,3.556735,0.402577,8.074173],[4.284613,-9.239721,5.022454,-1.367618,1.663871,2.596116,9.607909,5.276190,-4.890162,-9.512911],[4.777586,-8.316885,9.676618,2.308474,3.274291,0.753764,-1.500351,-3.249606,7.380325,-4.536663],[-5.420242,-5.192470,-4.764488,7.415747,7.994217,7.516983,8.731193,1.531298,9.370545,8.047151],[-4.406164,-4.228403,-3.286986,-3.776587,1.800028,-9.602917,4.458283,2.429421,-0.128368,-6.248694],[-1.029943,-1.251606,-4.527347,-6.653461,-0.292822,-3.749945,-9.420330,-8.414874,8.538770,-9.730827],[3.245449,-8.421424,-9.667695,4.191121,7.072583,-6.083547,2.471968,1.147412,-8.651120,3.449693],[4.367597,3.521825,-2.991355,-0.964141,8.738736,6.957470,8.103330,1.595844,5.245363,0.462952],[-3.523094,6.172009,-7.053298,3.868147,-0.484464,-3.758491,0.761153,-3.007000,3.049508,0.063307],[5.243793,9.778740,4.576573,-4.320548,4.885910,6.443914,2.214476,7.352311,5.313763,2.922785],[-3.446240,3.274509,5.386471,4.891414,-4.449751,9.956570,4.811790,-1.944909,3.937360,-8.631125],[-9.407762,9.082249,-6.493269,-8.330558,8.692809,1.802015,0.918814,9.430517,-5.133206,1.727618],[-2.868305,7.956499,8.830399,-4.374535,-4.484718,-9.830593,-6.779670,9.567934,-2.453618,-1.701558],[1.150261,2.600297,-9.987670,7.285262,-2.328909,8.615014,-8.216097,-3.271354,-3.624902,-9.922362]],[[5.644398,-4.091117,-1.591366,-1.996885,9.178723,4.219529,4.575031,7.699890,1.460387,-7.881812],[4.610735,-5.741352,-5.350392,6.003616,1.164858,-8.435730,-5.319131,-6.369432,-4.787506,-4.814100],[5.748643,-8.436976,-1.734997,-3.517461,-4.746272,0.566276,-4.398738,1.479461,5.523236,-7.068611],[3.079213,0.589052,6.377463,-4.455646,9.059373,8.816108,-3.605266,8.724573,4.147457,8.844536],[-2.567600,0.694878,-8.995864,-5.341276,5.545425,4.683601,4.218137,1.447830,-3.249485,-1.902831],[-9.074807,3.152413,5.440368,3.809365,-0.780440,-0.231888,-9.284016,-3.732412,3.084371,-2.506002],[3.048307,1.162589,-7.025153,5.233153,-2.214746,-5.912360,2.652862,-7.402649,-8.211430,6.270037],[-6.990938,-5.668776,8.160158,1.884484,4.905702,2.183766,1.244762,0.520037,7.976849,3.519770],[-0.329299,-6.509045,5.172262,-8.379046,4.305050,-4.593157,6.963243,-4.339147,2.100994,5.483581],[3.418855,8.868072,6.062521,-2.169972,0.940020,3.124116,-9.081821,9.592454,-4.357473,7.967949],[7.348754,4.121977,-3.784470,0.134417,0.107075,-7.530378,-1.113606,-2.306474,-9.502447,-9.113519],[-7.939664,3.948701,-6.508070,-2.858036,-0.326794,-3.134598,9.904946,2.147478,4.231892,-1.024973],[4.188492,3.293176,-6.867856,-6.228078,-5.701877,0.999310,-7.538620,7.288415,4.522633,3.550130],[-6.512311,-0.981471,4.931983,7.106209,-9.146439,8.184091,3.950773,3.964558,-7.319233,-1.995359]],[[5.463035,6.298020,4.031090,-6.510066,-3.760030,-5.962001,7.673829,6.007975,-5.110896,7.255892],[-4.890709,9.467457,3.106935,8.334780,-3.634358,-9.362774,0.699834,4.702652,0.366867,-7.117986],[9.508872,-2.058038,6.266918,8.915179,-6.895272,-0.025876,8.122756,-1.547206,9.634971,5.504193],[-0.443382,3.071274,8.612811,-7.219783,-1.448567,8.268013,8.479601,-0.089555,8.457225,3.224468],[-6.777177,-7.889922,1.865998,-0.704445,-3.526403,-9.439645,1.305582,6.882233,-4.783056,3.726892],[-6.884278,-4.201763,-3.721340,-9.556791,-2.955867,-5.093815,1.483019,-1.058149,6.695366,3.635129],[-4.534694,-9.737153,5.108713,5.770092,0.883065,-5.835533,7.878626,-4.243207,3.390252,3.271930],[-9.928335,-9.703146,-2.648629,-2.278020,9.760392,5.449946,3.481708,-4.008563,9.149803,-8.566576],[-5.494699,-3.894520,3.698816,-0.038966,5.041978,-1.816568,0.612123,-5.431907,7.607283,3.478306],[-8.044966,8.245899,6.580526,0.077197,0.370464,8.576695,-3.559042,0.638068,-8.585087,2.154665],[3.041091,8.522648,-3.568365,-9.490517,-3.607410,1.508418,-9.434422,-3.763823,-9.052387,1.593422],[9.214696,1.077037,-8.946603,2.803762,-1.691306,1.402497,-1.756698,-8.961067,-3.969662,1.086423],[1.078602,1.720301,6.761180,2.461149,8.005590,4.051986,2.123130,2.325733,7.890177,0.836521],[1.801241,3.487768,2.932662,-3.217827,-5.443954,3.955849,-6.557302,0.447224,-5.192941,4.352023]],[[2.906611,5.061716,-0.352885,3.582703,3.480122,5.640573,5.356397,5.276177,7.140688,-0.418391],[8.717988,9.237670,-3.609782,7.024894,5.972611,6.341238,3.366903,5.217325,5.511008,2.371019],[2.915016,9.400143,0.215014,-8.587356,-6.540999,-0.507752,-5.578763,-0.386302,-4.280647,7.201604],[-4.676830,5.052326,5.174666,2.088938,1.489141,-2.377521,-0.232103,9.759607,-5.887545,-2.627290],[-2.739640,-3.921179,-1.929462,5.524353,-4.600844,-7.853572,2.818641,-7.299493,-5.499039,5.556469],[-7.702377,3.066011,5.221662,-5.171091,-7.950747,8.743872,3.869359,4.880810,-7.447165,-0.025095],[8.041077,0.225383,-5.757814,-5.485443,-9.686451,-0.028679,7.050291,2.799077,-3.105298,-0.030937],[-3.889647,1.239202,2.587038,3.965971,-1.797301,-1.547738,-3.129217,-4.645630,2.881154,1.337346],[1.699969,-9.035508,7.582764,3.694932,6.756970,-9.862951,7.888318,4.934091,-1.386752,-7.375941],[-3.812401,8.835532,9.776624,-3.415039,-5.995001,-4.811306,0.773723,-0.985851,-8.421487,5.699909],[9.890030,2.371828,5.102242,9.895455,3.673826,-0.569647,-6.936002,-6.392091,-7.288044,-1.411693],[-3.086855,-1.867952,8.837680,6.648501,-4.699685,9.064582,-3.270315,9.938716,7.304479,-3.993308],[-9.972754,-9.797353,-4.862734,-9.349249,8.938028,5.065870,9.218333,-9.227860,-3.849198,-4.239334],[-3.458409,-0.202283,-4.130137,-4.003028,-2.771468,-6.981840,-4.203850,6.665106,7.551062,5.860667]],[[-1.544332,8.785125,-9.330330,-0.929696,4.613577,9.038719,-4.002669,-5.607584,3.102031,-1.505004],[7.059657,4.869418,7.465343,-7.442675,-9.033050,-2.477394,-7.274170,3.755508,8.171443,2.452112],[-9.903511,-2.834893,-1.807555,-3.114527,8.345473,5.362786,2.237370,-8.998889,4.278427,-1.967998],[-6.160402,-1.905656,-3.065670,4.429783,0.831643,-3.178907,-8.352202,-3.350333,0.236150,-5.444052],[7.858431,-6.878474,-9.840365,-1.077091,8.555868,-0.889204,6.009907,9.290224,-9.096115,5.863667],[0.781395,5.983056,-1.088694,9.326488,-9.153217,-5.845611,8.775132,7.584896,-6.649794,-7.062413],[-3.937829,6.965156,6.266525,6.187265,-5.555246,-4.321786,-9.346862,1.401642,3.704089,-7.826852],[-5.929584,-8.597414,6.666364,-2.109253,5.375471,-4.872358,9.599730,1.399846,-3.079903,-1.646379],[3.314125,-1.462946,-4.181163,-5.758165,-1.479612,-2.294962,4.714223,6.626652,-6.641055,-3.191011],[-1.807614,6.836672,2.528123,-9.231057,9.512351,-2.449994,8.219211,-1.360724,-5.677097,-3.027759],[7.556460,7.423152,5.642041,-9.696574,-8.988900,3.576646,3.439074,-2.744071,8.017973,-8.210966],[5.825215,8.901869,6.461266,5.742658,-1.646003,1.199717,-7.582789,-9.011977,5.079099,9.942887],[-7.005452,-4.216309,1.303604,-2.299365,5.163035,1.975396,3.541245,-6.623293,-3.782945,-8.597107],[7.595442,-8.879363,-8.145128,5.215590,4.725884,-2.545302,3.134461,8.898679,4.422777,3.919915]],[[-0.496795,-1.628904,0.226367,8.512204,-5.310870,-4.171467,6.523842,4.268580,6.866785,3.083489],[4.728305,-1.300574,-6.795399,8.450739,4.534621,-8.945727,2.582368,6.880112,7.894467,-0.670939],[-2.107150,4.585366,3.727486,-9.754687,3.229406,-7.670461,2.786858,0.149193,-1.481534,1.386135],[1.491346,-1.819965,-8.904342,5.690747,-1.968566,9.157530,-9.076000,-2.323442,4.491834,3.878146],[-1.267048,0.757010,-3.803338,8.102995,7.832129,9.248105,-0.765712,7.159352,3.561772,1.333098],[-0.578784,9.946390,7.613236,7.739447,-7.791156,-6.488782,-0.394646,-5.269380,-2.470646,8.101011],[-3.327606,4.626857,-4.196890,-3.056520,9.934612,7.266116,-6.139304,8.564145,-8.244138,8.309460],[7.357203,6.664485,9.284640,-0.191162,9.640506,-1.069919,-1.119539,6.477324,-2.906817,2.603641],[8.651149,-9.104124,6.759986,2.802812,-6.140064,-6.919934,-7.368943,2.261766,1.440907,-2.897348],[4.961452,-3.942026,-9.518140,9.638209,1.460856,-8.618251,2.437462,3.197631,-1.038696,0.993656],[5.261662,-2.940990,1.460199,5.591318,-2.946012,-4.721349,-7.022701,7.254099,-8.692288,-7.940204],[0.558589,-2.061530,2.936363,7.789217,-6.533293,-9.666650,-2.912925,-3.204473,-8.840697,-5.051825],[7.497839,-3.645282,-3.361945,-6.440339,-4.678866,-0.135261,4.755123,3.576422,-2.993400,9.898043],[2.636885,-3.912397,-8.180672,6.694448,0.117935,7.493439,-9.106069,-1.231854,-2.474285,3.052658]],[[8.521984,-3.131443,-7.623285,5.875368,4.435256,-8.508092,-6.964282,-9.111047,2.661647,1.621376],[-7.982802,8.566692,0.721639,9.770473,-5.795462,-2.435845,-8.082180,-6.407573,-1.139069,-0.533130],[-7.652547,-8.543025,2.096635,-2.350879,9.017185,4.152094,-6.616179,-4.653831,4.570010,2.177881],[3.984279,6.954999,4.835984,-2.033024,-3.809406,5.224674,3.008047,4.167062,-2.216565,1.808295],[-3.012634,0.082429,6.643515,-2.909123,1.039789,-9.084344,1.937926,2.021144,-7.472215,3.741357],[-1.276481,8.639197,-7.787281,-2.485201,-9.550731,-3.894109,1.591109,-8.874209,-9.247008,7.488935],[-0.143096,-7.221651,8.755233,-2.494897,3.342680,-7.915237,-9.304376,-6.070152,9.158393,-6.691750],[-1.716291,-9.939142,-8.729120,8.119579,0.990263,6.665572,-1.218499,5.611183,4.954753,0.307323],[6.217413,-4.324493,-2.889807,1.144209,1.376767,1.740455,-8.442468,8.662700,-6.389672,5.830287],[4.953069,-4.730899,-2.280698,-5.561402,2.708618,5.768770,2.585047,8.165752,-8.630810,1.100230],[-7.946945,4.243430,-8.784349,7.047201,7.853098,-4.794197,2.112784,0.573365,4.247658,9.353174],[5.151531,1.401516,-5.189835,-1.576099,9.680661,4.683032,4.615160,3.551704,8.754712,-1.371494],[2.652565,-1.746349,2.008354,2.211854,5.385617,-4.131787,7.998776,4.231435,-7.741839,-7.374432],[-1.392355,9.537211,-4.009168,5.040023,0.724832,5.385400,3.377678,-7.719973,2.530851,2.634529]],[[-3.371974,1.461503,1.543694,-7.027925,9.268423,-3.619607,-1.803181,0.255658,-6.740386,-5.080723],[-5.667963,-3.536390,2.312234,4.957910,-6.251947,2.456232,-2.537446,-9.850009,-3.287754,1.517886],[9.032555,9.584963,9.727555,3.026314,2.483352,7.722925,1.292236,8.957333,-3.644866,8.740382],[9.540755,-3.691073,6.647412,-6.370062,2.843610,3.353604,9.197422,-0.427746,3.764500,-4.786630],[4.299750,6.967441,1.908808,-1.832492,5.616164,2.447985,-6.434024,-8.111946,-5.047519,4.213551],[-6.889651,8.978116,8.688387,-9.329244,8.933058,-2.011648,-4.723170,0.386666,-3.088458,-9.832870],[7.327487,2.094614,4.539576,6.680143,-4.231900,5.242173,-4.465839,-7.371867,-4.853632,-6.259711],[8.850360,-2.560163,-1.791228,7.817280,8.346432,-2.066398,5.469039,8.721790,0.797334,7.343276],[5.114146,-3.798211,3.201110,-6.273908,7.905636,1.724910,8.011912,6.218767,7.906720,-4.060676],[-2.659408,8.503219,-5.021087,-0.487758,4.627988,8.342038,-9.199947,-2.570868,-6.137901,8.587748],[-1.740010,-2.656432,-5.794017,8.963330,5.017416,4.500459,4.385745,1.178888,9.294075,4.939029],[3.026065,7.813485,8.573474,3.478729,-7.743276,7.842129,7.691320,-7.371291,2.763569,4.338799],[-9.378884,-4.435132,2.114378,2.497578,3.590833,-6.932336,-2.182074,-2.628817,1.385928,2.896636],[-2.730441,-2.035947,2.625720,-5.188897,5.184877,1.367974,-9.215693,1.241141,7.554610,-9.275359]],[[8.694005,-4.089391,-9.384843,0.253278,-5.730983,-2.377240,-4.824246,6.811786,9.934603,-1.294608],[6.339035,-3.697436,-9.575676,-0.624114,7.568160,-9.079652,8.428822,-9.637366,-0.254973,5.221702],[-5.548258,5.553822,0.717405,-6.370733,-8.730492,0.608894,-2.153631,4.226419,1.375465,0.007673],[-6.885543,7.697434,-3.187416,-1.750021,-5.080336,2.849889,9.986837,4.029494,4.368835,5.975013],[-9.379291,-4.897948,7.930498,1.888115,8.958756,8.225572,2.687432,6.563843,-3.907373,-7.621927],[9.941207,0.915041,-2.683295,4.093264,8.218891,-2.022725,1.350959,-2.782248,-7.088265,5.771708],[-7.545250,-0.341203,-0.905918,9.139479,7.811023,2.846241,-5.358214,2.572873,5.806162,-9.684554],[8.967928,-2.637383,6.126517,0.905390,8.064303,8.485115,5.671933,4.170780,3.812359,-8.924977],[-7.729085,-5.521734,4.125948,7.180099,-7.828136,4.099975,-6.508251,9.702907,-0.432592,-5.148969],[1.637648,-5.709576,0.898137,-7.525597,-1.910308,6.431998,-7.791595,6.104845,2.975487,-4.586740],[9.497440,3.526525,-4.819632,9.677658,-8.784262,-9.905266,-3.757175,-9.260529,-4.948908,-5.916957],[-2.880703,9.106282,3.841405,-0.002189,3.040397,0.449028,-6.024986,4.893308,9.192691,9.916857],[-1.582829,7.236321,-1.774591,-4.334899,4.476370,-3.365121,-4.577243,-8.128382,-9.336012,-6.194818],[-6.452928,-5.397654,-6.348780,3.626575,5.879026,2.841553,-1.229288,-1.961599,4.763555,7.707868]],[[3.749322,-5.433334,2.375052,-0.083389,8.592434,3.978507,-4.234916,-0.866617,6.178035,-0.322191],[-6.914039,-6.999121,-7.852577,-6.329871,1.323419,-9.743738,0.009405,-1.894741,-9.338742,-7.304057],[0.061419,6.443984,-7.442710,1.213722,3.890568,-9.861506,8.436457,-6.585177,1.137932,7.946197],[-1.408827,1.150651,-7.522241,-3.389668,-8.463229,-8.673661,-7.167691,0.924845,7.292594,8.438670],[-4.439959,3.529774,-2.879642,-9.081813,-8.594853,5.765235,6.842174,-4.836967,-7.028972,-8.159787],[9.248745,3.855402,-5.548946,-3.133743,7.605080,-2.805251,4.462621,8.474504,1.788542,8.557476],[-1.331062,-0.154854,-4.016360,1.046436,9.953260,8.343707,0.831398,0.983316,-6.710717,8.857749],[6.890785,7.451325,6.482389,-4.238366,-5.546096,-7.463147,-5.981329,4.316114,0.472155,-9.537353],[-7.484817,-5.581802,-1.884128,-9.579683,0.520682,-6.832307,7.582954,-4.632290,-3.323548,-0.876464],[-5.484751,9.469139,4.472569,0.323166,-1.203926,-8.195487,-4.714006,-6.471506,-1.562097,5.184074],[-5.206744,-2.799406,3.230456,2.308882,6.441095,7.007528,-2.386488,9.453898,1.743475,4.593395],[-1.166549,-3.596471,-5.496050,4.258685,1.302903,-3.846108,-1.107107,-4.115961,9.225759,1.070931],[4.685808,4.496437,-4.818414,8.285545,7.873278,6.994731,-2.792692,-5.172051,-3.599172,4.601442],[-6.785075,9.696217,-2.571007,3.837469,0.973202,9.019049,6.572505,9.633831,6.598512,9.483949]]], dtype = "float64")#candidate|5792|(11, 14, 10)|const|float64
var_5793 = relay.var("var_5793", dtype = "float64", shape = (11, 14, 10))#candidate|5793|(11, 14, 10)|var|float64
bop_5794 = relay.floor_divide(const_5792.astype('float64'), relay.reshape(var_5793.astype('float64'), relay.shape_of(const_5792))) # shape=(11, 14, 10)
func_1935_call = mod.get_global_var('func_1935')
func_1940_call = mutated_mod.get_global_var('func_1940')
const_5798 = relay.const([-7,10,-6,-4,-10,-2,-9,-7,6,-10,-7,8,4,3,4,-4,4,10,-10,10,7,-10,9,-9,-9,-5,-4,10,-2,8,10,10,5,-5,4,6,-9,8,-6,-2,-5,-3,7,-7,-6,-8,8,-2,8,9,-5,3,-1,-2,5,-4,-1,9,10,-1,-2,3,-7,-2,-10,-6,6,-9,-8,6,6,-6,-6,-5,5,-3,4,-9,-8,-3,4,7,9,-8,8,-4,5,9,9,10,-1,10,-10,6,10,10,1,5,-3,8,-9,4,-4,-9,-9,4,-3,-5,3,-3,-3,8,-8,3,-8,-1,-3,2,9,10,-10,10,-9,6,-8,-9,-10,2,-10,9,6,-4,6,6,-5,3,-1,9,-10,3,4,9,-9,-3,-8,8,4,-4,-7,-6,-7,10,-4,9,5,-1,4,-6,3,-5,-4,6,4,-10,10,-7,-9,-4,-9,-6,-5,-5,1,5,1,-6,10,4,-1,8,2,-6,-4,3,-3,8,-8,-10,-4,-4,2,9,1,7,10,3,3,-3,2,-10,5,-7,-1,-3,-10,10,-8,-6,-6,10,2,-6,-5,-10,4,-3,8,-3,5,-5,-2,8,6,10,-1,-8,6,-6,2,7,7,-5,8,-5,-4,9,-5,-8,3,5,-10,4,6,6,-7,-5,1,-9,-8,3,5,1,-6,-3,7,-2,-8,3,-8,1,10,-2,-6,1,7,9,3,-4,-9,10,2,4,-10,-5,6,8,3,-8,-2,4,-2,-1,-3,7,-1,-9,-1,-4,-10,1,-6,1,-8,-8,-7,-10,-7,7,8,-3,1,2,3,-2,7,-8,-4,-10,-7,5,-3,6,-9,-2,-6,-6,7,6,-3,4,4,3,-10,-2,-5,2,5,-10,10,9,-8,-1,-2,6,9,-7,1,-3,-7,9,-6,-10,10,3,-3,-6,-9,8,7,-1,4,-9,10,-10,-9,-6,2,3,-5,2,3,1,-6,-5,2,9,-4,3,-2,-10,1,-5,-4,-5,-7,9,6,3,-6,6,4,4,-8,1,-9,1,9,-5,6,-1,10,4,9,-1,-6,3,-4,8,-3,4,-10,-3,2,-3,9,-5,6,-6,-9,-8,-4,4,7,2,1,-1,10,3,2,-2,9,-10,9,10,1,-2,10,-4,8,-6,-3,-3,8,7,-1,9,-8,-7,-4,-2,6,1,10,2,3,-10,-2,1,8,-10,-9,-8,-9,-2,1,-10,-10,2,8,9,-1,-10,-1,-3,-1,7,-3,4,10,-4,4,10,5,-3,6,-6,2,-2,-9,1,9,9,-2,3,-3,-5,-3,10,-6,2,-6,1,-6,-2,-9,6,-2,9,10,-8,-8,-7,-7,-10,-9,-9,1,-4,4,-4,10,8,-7,-3,-8,7,3,9,-2,-7,9,7,-5,-9,-6,1,-4,-7,5,-5,3,10,-7,-8,-8,-9,10,-9,8,3,2,1,2,-5,10,-9,-4,-8,8,2,-10,2,-9,-4,-8,3,10,6,-2,8,-2,2,6,1,-6,7,-3,6,10,1,7,-10,7,-9,-6,8,4,6,-10,1,7,1,-8,6,-7,8,10,-10,-1,-4,6,4,2,9,6,-7,9,-7,-5,7,-9,-3,-2,-7,-2,1,-3,-9,9,-8,-9,8,-2,-6,-7,8,-9,-6,-6,5,4,-7,5,3,-3,8,5,-9,-2,-4,10,-4,5,-10,-3,-10,-5,3,4,-3,-6,-8,-9,-7,-1,-10,5,10,6,-2,4,-5,2,8,-3,-10,4,-7,4,-5,-7,8,1,-1,-5,-7,8,10,7,3,-9,-6], dtype = "int64")#candidate|5798|(672,)|const|int64
var_5799 = relay.var("var_5799", dtype = "float32", shape = (4, 60))#candidate|5799|(4, 60)|var|float32
const_5800 = relay.const([[-3.604571,-4.148528,6.439205,1.174403,-8.828276,9.371943,4.654245,-8.149984,-3.976303,1.962911,1.927367,-8.123422,4.844142,-8.718996,-8.118964,-7.603144,-3.356281,-7.476028,-5.402395,-0.327980,-3.414990,-4.599085,4.525399,1.143472,9.895667,-0.108745,-5.646392,2.259281,-9.373912,6.087847,-8.981946,-0.784325,0.729439,-7.981324,-1.879867,-3.362809,-4.305661,0.474384,-8.474413,6.840887,5.192195,-9.526439,-8.985456,3.064154,-4.580913,5.738646,-6.378017,1.894214,-0.476968,-4.688724,7.999269,9.426357,9.465005,6.687497,0.747906,-3.722236,2.986131,-3.603894,-0.617480,-5.237878,-1.977806,7.437622,5.245306,-3.716022,-0.634803,3.829573,-7.622312,1.440333,6.838395,8.879794,4.428846,8.772085,-4.275931,-9.816849,-2.564224,2.968056,-4.915919,9.669177,-7.054337,9.114862,-1.068361,-6.139254,7.284550,5.158283,-4.655803,5.979540,-1.776387,-5.856982,-5.969522,1.305850,-6.872627,-6.947328,-5.689909,-0.063163,7.780620,0.391472,-7.256056,-3.561226,-4.272264,-3.312389,-9.089481,-2.472781,6.695563,-6.795138]], dtype = "float64")#candidate|5800|(1, 104)|const|float64
var_5801 = relay.var("var_5801", dtype = "float64", shape = (72,))#candidate|5801|(72,)|var|float64
call_5797 = relay.TupleGetItem(func_1935_call(relay.reshape(const_5798.astype('int64'), [8, 6, 14]), relay.reshape(var_5799.astype('float32'), [240,]), relay.reshape(const_5800.astype('float64'), [104,]), relay.reshape(var_5801.astype('float64'), [72, 1]), ), 3)
call_5802 = relay.TupleGetItem(func_1940_call(relay.reshape(const_5798.astype('int64'), [8, 6, 14]), relay.reshape(var_5799.astype('float32'), [240,]), relay.reshape(const_5800.astype('float64'), [104,]), relay.reshape(var_5801.astype('float64'), [72, 1]), ), 3)
output = relay.Tuple([bop_5794,call_5797,const_5798,var_5799,const_5800,var_5801,])
output2 = relay.Tuple([bop_5794,call_5802,const_5798,var_5799,const_5800,var_5801,])
func_5804 = relay.Function([var_5793,var_5799,var_5801,], output)
mod['func_5804'] = func_5804
mod = relay.transform.InferType()(mod)
var_5805 = relay.var("var_5805", dtype = "float64", shape = (11, 14, 10))#candidate|5805|(11, 14, 10)|var|float64
var_5806 = relay.var("var_5806", dtype = "float32", shape = (4, 60))#candidate|5806|(4, 60)|var|float32
var_5807 = relay.var("var_5807", dtype = "float64", shape = (72,))#candidate|5807|(72,)|var|float64
output = func_5804(var_5805,var_5806,var_5807,)
func_5808 = relay.Function([var_5805,var_5806,var_5807,], output)
mutated_mod['func_5808'] = func_5808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5847 = relay.var("var_5847", dtype = "float32", shape = (3, 5, 1))#candidate|5847|(3, 5, 1)|var|float32
uop_5848 = relay.sigmoid(var_5847.astype('float32')) # shape=(3, 5, 1)
var_5857 = relay.var("var_5857", dtype = "float32", shape = (3, 5, 9))#candidate|5857|(3, 5, 9)|var|float32
bop_5858 = relay.bitwise_and(uop_5848.astype('int16'), var_5857.astype('int16')) # shape=(3, 5, 9)
output = bop_5858
output2 = bop_5858
func_5861 = relay.Function([var_5847,var_5857,], output)
mod['func_5861'] = func_5861
mod = relay.transform.InferType()(mod)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5861_call = mutated_mod.get_global_var('func_5861')
var_5863 = relay.var("var_5863", dtype = "float32", shape = (3, 5, 1))#candidate|5863|(3, 5, 1)|var|float32
var_5864 = relay.var("var_5864", dtype = "float32", shape = (3, 5, 9))#candidate|5864|(3, 5, 9)|var|float32
call_5862 = func_5861_call(var_5863,var_5864,)
output = call_5862
func_5865 = relay.Function([var_5863,var_5864,], output)
mutated_mod['func_5865'] = func_5865
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5993 = relay.const([[[1,-4,-5,4,5,-4,-9,-7,-5,-10],[-2,5,5,2,-1,3,-6,2,-1,-1],[-8,-7,5,-5,-4,-5,-5,-2,2,-4],[-10,-5,-4,-10,-5,-1,6,-9,-3,3],[-1,-6,7,-7,-3,2,-5,-2,5,-4],[-4,1,-7,3,9,9,-2,-4,-6,10],[1,-5,-10,-7,-10,3,-8,-6,-9,4],[2,-5,2,-7,-2,8,-10,10,-1,-3],[8,6,2,-2,10,-8,3,9,5,-2],[3,-8,4,-3,7,-7,-1,2,7,-6],[-3,-1,10,-10,8,-1,5,-3,1,3],[1,-2,4,-8,9,-10,-10,9,-3,-8],[2,-1,1,5,2,-10,9,-5,-6,-6],[9,-7,8,-3,-4,9,10,-4,-4,3]],[[-8,-8,4,10,8,-7,3,-8,-10,10],[-9,2,9,-10,-5,-8,7,10,9,3],[7,4,4,2,2,7,-3,1,-5,4],[8,-2,9,-8,3,8,1,-3,4,8],[7,7,4,-3,-1,-8,-10,3,6,10],[5,1,-9,-1,-10,-9,4,-9,4,-5],[9,-5,8,10,1,1,-7,-4,-7,-9],[3,5,4,6,-4,-4,-6,3,6,8],[-5,-5,-3,1,1,-8,10,4,5,-3],[-2,-3,-5,-4,4,-8,1,3,10,6],[6,10,5,-9,5,-1,-8,-7,3,-3],[1,5,-5,-6,4,10,5,-5,5,1],[7,-7,6,-7,-5,-5,-2,-10,1,-3],[7,-3,5,-3,6,-10,-7,8,-3,4]],[[3,-4,-2,-3,-10,5,10,-2,-10,5],[10,-6,4,-2,-9,5,-8,9,3,2],[-6,3,-7,-3,1,-10,5,9,10,-8],[-6,2,-4,-3,-1,-2,-1,7,9,4],[7,-2,10,2,1,-10,5,-2,-3,5],[9,4,-2,10,8,3,8,10,5,9],[-1,4,10,-6,10,-8,-9,-10,1,6],[2,7,-5,9,8,-7,-10,7,-6,5],[-4,-4,3,-8,2,6,-5,7,1,-1],[5,-9,10,6,-1,-3,-4,-2,1,-3],[-3,-10,-3,8,2,-2,9,3,-1,7],[-10,7,-7,8,8,-2,10,9,8,7],[9,8,-5,9,-10,6,-7,1,-3,-2],[2,-3,-8,8,-2,-6,8,-10,5,-7]],[[-10,-4,-9,10,7,2,-10,4,7,-3],[-8,-9,3,9,3,-6,10,-9,-6,-10],[5,-4,7,2,-9,3,4,-6,-5,8],[3,-10,-3,-4,10,-3,6,-1,-5,-6],[-7,-6,5,1,-6,-8,4,-4,9,-7],[-1,-5,8,-9,8,-1,-8,-10,-8,-1],[-2,5,-8,-5,6,5,2,4,5,-7],[3,-10,3,-4,-10,7,-5,-10,-1,8],[-4,-5,-5,10,-4,-5,-3,8,4,8],[8,-10,6,-3,-2,4,-8,-6,-10,2],[-3,1,-1,-3,2,1,-7,-10,-10,9],[6,1,6,6,4,-10,-5,5,9,-1],[9,8,4,8,2,5,5,-3,-3,-7],[-7,6,-7,7,8,8,3,-3,5,-10]],[[-9,7,1,4,-7,3,-7,7,9,-9],[-4,-4,2,-4,9,4,-9,3,-8,-5],[8,-10,-8,-9,1,-4,5,-3,-5,4],[1,1,10,9,1,-7,-4,3,4,-7],[-10,-1,10,1,-9,7,-4,9,2,-4],[-3,-3,-7,-9,8,7,8,2,10,-1],[-10,-2,-9,-10,10,-6,-6,2,-5,6],[6,1,1,-1,-9,-3,-3,5,5,-4],[3,8,9,5,-10,7,-4,1,4,-8],[6,-3,-6,2,-6,-6,6,-8,-3,-9],[4,10,-6,5,3,-4,7,-10,6,2],[-8,-10,-2,9,1,-2,-4,5,3,10],[5,7,-1,-5,-8,-10,-7,1,1,7],[-10,9,1,-5,-5,-4,-9,2,-9,1]],[[-4,-2,-3,10,-4,8,-8,-9,-10,-5],[9,5,2,2,-4,9,-3,-1,-5,-10],[10,5,6,8,6,3,5,-5,-5,10],[-9,-1,7,9,-3,-3,9,-2,1,1],[5,5,1,-1,-9,10,-8,-2,-1,9],[2,-8,9,7,1,-7,3,-10,-6,-5],[-10,2,-5,2,-7,-1,-4,-1,-2,3],[10,2,6,10,-3,-4,9,8,4,2],[-3,-10,4,10,-2,1,-4,5,-5,9],[-9,10,3,-4,9,6,-8,9,-10,10],[-1,-5,-4,-3,7,-8,7,6,7,4],[-3,10,-9,-5,-9,2,-6,4,-7,-2],[1,3,-9,7,-7,3,-3,3,-3,2],[1,-1,1,8,2,-4,-1,8,-4,-5]],[[-8,-2,3,-7,-2,-10,3,4,7,-1],[4,-10,2,3,5,-6,-10,7,4,2],[3,10,5,9,6,9,-5,4,-8,-3],[7,-9,-10,10,10,-9,-8,-6,-5,-5],[5,10,4,9,-3,9,4,6,-4,-7],[2,5,6,-3,10,-1,-3,-7,7,8],[-8,9,-5,-3,3,3,-5,5,2,2],[7,7,6,-4,-9,10,-1,9,-6,-5],[2,4,6,1,-9,-2,-8,-4,-4,-5],[3,2,6,10,-4,1,-2,-5,4,6],[1,-10,8,1,-2,-5,-6,9,-8,4],[-3,-10,-1,3,3,1,-9,2,2,-7],[4,9,1,-1,-8,-1,-1,-8,-7,8],[-10,3,7,-7,3,-5,-8,-6,-4,-9]],[[2,-5,-10,5,-6,7,-9,7,10,-7],[8,9,-8,-8,-1,-9,7,-6,-9,-6],[2,-10,6,9,9,-10,-9,6,5,2],[-1,9,-6,-6,-5,-7,6,10,-5,9],[-6,-5,-9,2,5,9,8,-3,-2,7],[-1,-4,4,-10,-2,6,-9,3,-2,-1],[-3,-2,-8,-3,-1,-8,9,-9,4,3],[-2,4,-10,1,-3,8,5,-7,4,-5],[-2,-9,-3,-3,2,4,7,-5,-6,8],[3,7,7,-2,4,5,-8,-7,5,-9],[10,-10,3,3,-4,-1,8,-4,4,5],[1,5,6,-10,6,9,3,2,-5,-7],[5,-3,-8,9,2,1,3,3,-10,2],[4,-1,-1,5,5,2,-4,4,-3,-5]],[[6,-8,-1,-10,-6,8,-6,-9,9,10],[9,-7,-8,-4,-5,-7,4,10,6,8],[-6,4,-3,-8,8,-8,1,-10,6,3],[-3,-2,6,2,-6,6,5,4,4,2],[-2,-10,6,4,-4,-5,5,-3,3,-3],[-8,-1,-8,10,-8,5,-3,-1,-5,-2],[1,-7,7,7,7,-1,10,7,8,1],[10,-4,-9,1,-1,2,-2,-10,8,1],[9,10,1,-9,-7,-4,4,-9,4,-6],[6,-7,-4,-7,6,10,7,5,9,8],[-2,-2,-2,-9,2,-3,3,7,9,-2],[2,-8,-3,-1,-7,-6,-3,5,-9,4],[-2,-2,-7,2,2,8,-7,-5,3,3],[-6,9,9,-5,-2,2,5,9,-4,7]],[[7,2,-6,-6,-4,7,8,-9,3,7],[-2,9,4,9,-9,4,4,1,4,6],[-6,7,-2,3,10,-1,9,-10,-6,-1],[-7,-10,-10,10,-8,-3,3,8,-8,-1],[1,1,-9,-2,-3,-1,-7,-1,4,2],[-10,-6,-9,-6,-7,5,8,9,10,4],[6,4,-8,2,-6,4,1,9,-6,7],[2,3,-10,9,6,3,-1,-5,2,1],[-2,-4,-8,-5,7,-10,-5,-9,7,-5],[3,3,5,-3,5,-4,10,10,-2,2],[6,-8,-7,6,-7,7,10,-2,-9,-3],[8,9,-7,5,1,-7,-3,8,4,-4],[-4,8,2,-1,6,5,-3,-1,-3,-8],[-8,-3,-1,-1,-4,5,5,-4,-5,9]]], dtype = "int16")#candidate|5993|(10, 14, 10)|const|int16
var_5994 = relay.var("var_5994", dtype = "int16", shape = (10, 14, 10))#candidate|5994|(10, 14, 10)|var|int16
bop_5995 = relay.multiply(const_5993.astype('int16'), relay.reshape(var_5994.astype('int16'), relay.shape_of(const_5993))) # shape=(10, 14, 10)
bop_6007 = relay.right_shift(var_5994.astype('int16'), relay.reshape(bop_5995.astype('int16'), relay.shape_of(var_5994))) # shape=(10, 14, 10)
func_5861_call = mod.get_global_var('func_5861')
func_5865_call = mutated_mod.get_global_var('func_5865')
var_6025 = relay.var("var_6025", dtype = "float32", shape = (15,))#candidate|6025|(15,)|var|float32
const_6026 = relay.const([-9.099298,1.984645,2.849583,8.601618,9.249453,8.210738,-4.630368,3.466121,-8.227577,1.744480,-9.814444,8.918134,-5.015079,-5.172464,-9.823750,-5.505155,-0.479863,7.238249,-4.133631,8.967603,6.479605,0.187779,1.064842,-3.516339,1.683336,-1.781254,-8.489658,-2.134444,7.556672,-7.973352,7.191717,-7.692932,-4.280016,-7.038144,-0.214357,-7.467628,-8.901772,2.357165,-0.448030,0.270285,4.321314,3.047691,6.614976,2.793528,4.237188,-3.203435,-3.299768,-8.494990,1.760595,-3.177405,-2.730565,4.408725,-5.298159,1.659210,0.854272,-4.789255,-4.999347,-0.926893,0.085785,-3.607508,-7.557943,-2.348257,3.718483,8.796636,3.690430,-8.686795,3.728517,-6.506033,-5.759882,-3.281194,8.603685,8.810158,7.601535,2.690804,2.692368,0.936125,5.188541,-6.910963,-2.239638,1.072760,4.128139,7.895941,0.697089,-8.794088,3.174149,3.967259,0.138828,0.637545,9.941297,-0.400929,-0.394594,-0.587297,6.883478,2.416232,-2.527771,8.096900,-7.264667,-3.070769,-2.311168,-0.381403,-8.952224,-9.321254,-3.193645,-6.890102,3.227447,-8.838256,-9.139405,9.489982,5.988725,5.186385,9.966484,-0.177614,9.205516,5.347011,6.747585,-3.706444,-9.879511,-2.978534,-1.249409,-1.009861,6.564790,8.416234,8.213143,3.234201,2.887207,-8.427335,0.796130,2.533036,-5.703264,-0.410875,-8.216554,2.441177,-8.797656,2.253502,-4.279529], dtype = "float32")#candidate|6026|(135,)|const|float32
call_6024 = func_5861_call(relay.reshape(var_6025.astype('float32'), [3, 5, 1]), relay.reshape(const_6026.astype('float32'), [3, 5, 9]), )
call_6027 = func_5861_call(relay.reshape(var_6025.astype('float32'), [3, 5, 1]), relay.reshape(const_6026.astype('float32'), [3, 5, 9]), )
output = relay.Tuple([bop_6007,call_6024,var_6025,const_6026,])
output2 = relay.Tuple([bop_6007,call_6027,var_6025,const_6026,])
func_6043 = relay.Function([var_5994,var_6025,], output)
mod['func_6043'] = func_6043
mod = relay.transform.InferType()(mod)
mutated_mod['func_6043'] = func_6043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6043_call = mutated_mod.get_global_var('func_6043')
var_6045 = relay.var("var_6045", dtype = "int16", shape = (10, 14, 10))#candidate|6045|(10, 14, 10)|var|int16
var_6046 = relay.var("var_6046", dtype = "float32", shape = (15,))#candidate|6046|(15,)|var|float32
call_6044 = func_6043_call(var_6045,var_6046,)
output = call_6044
func_6047 = relay.Function([var_6045,var_6046,], output)
mutated_mod['func_6047'] = func_6047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6425 = relay.var("var_6425", dtype = "uint64", shape = (5, 9, 1))#candidate|6425|(5, 9, 1)|var|uint64
var_6426 = relay.var("var_6426", dtype = "uint64", shape = (5, 9, 8))#candidate|6426|(5, 9, 8)|var|uint64
bop_6427 = relay.bitwise_or(var_6425.astype('uint64'), var_6426.astype('uint64')) # shape=(5, 9, 8)
func_931_call = mod.get_global_var('func_931')
func_935_call = mutated_mod.get_global_var('func_935')
const_6433 = relay.const([2.181034,-6.596366,-7.680293,-6.092371,3.091743,7.989977,-6.266631,-1.823988,-9.218180,-2.686710,-8.312264,9.816005,-9.482170,-1.657612,-0.516166,-9.512274,-7.098332,0.389160,-5.319660,-3.984022,-6.110329,3.534238,-8.848683,5.420822,-9.375337,9.407182,3.772197,7.135856,-5.644762,-7.725278,7.849419,-5.326901,3.846821,-6.500043,6.889354,6.650259,-0.301359,9.600544,-7.482109,-8.014106,-4.055668,-9.400706,-1.058519,3.086156,7.103222,3.102768,-8.063049,-1.410112,4.873005,5.852222,0.605467,3.707676,8.621316,-0.058559,9.590259,-1.594070,-7.549163,-0.517688,-5.850703,8.152639,0.657757,-3.563886,6.614540,1.673728,-4.489820,8.331530,9.142397,2.064138,7.060572,-7.960060,-7.595924,5.245458,3.671391,6.982082,2.646153,3.354122,-2.550072,5.939069,-4.650529,-9.617242,1.284305,-7.888966,-4.510145,-3.226514,-4.859665,8.885727,7.171713,0.667680,-4.763868,0.255152,-6.756552,-4.173109,-6.002866,-0.700428,-9.175151,6.402045,-2.150734,-4.494749,-4.829327,9.724839,0.231392,5.703680,7.597853,-0.942845], dtype = "float64")#candidate|6433|(104,)|const|float64
call_6432 = func_931_call(relay.reshape(const_6433.astype('float64'), [4, 13, 2]), relay.reshape(const_6433.astype('float64'), [4, 13, 2]), )
call_6434 = func_931_call(relay.reshape(const_6433.astype('float64'), [4, 13, 2]), relay.reshape(const_6433.astype('float64'), [4, 13, 2]), )
func_5804_call = mod.get_global_var('func_5804')
func_5808_call = mutated_mod.get_global_var('func_5808')
const_6442 = relay.const([8.958182,-8.451270,3.015661,9.641446,-5.696944,8.593121,-4.002671,7.721967,-7.612515,-6.089721,-6.458579,-9.025561,-4.319716,5.784751,7.417602,-1.441760,0.785977,4.979663,8.687662,-4.705822,0.037451,7.748212,-3.256816,-0.114550,-6.079737,1.052777,5.408363,-0.658795,6.188222,0.298826,9.599385,1.459371,-4.772561,7.366435,2.300219,7.212865,-9.343009,-5.563629,-6.140045,6.537108,-4.342124,7.092324,1.058182,2.935476,-9.729308,5.200262,-6.469933,-8.151182,0.520914,-2.798694,-3.143926,-4.218682,-3.983390,9.344219,5.023355,6.730506,-6.752367,5.323116,-7.796468,-1.200956,-8.013308,3.068910,-5.896936,4.562010,9.580350,8.050800,-0.197431,-8.830916,-9.435127,3.724461,5.952870,0.144007,5.580621,4.011924,3.058078,-8.107369,4.988310,-7.414831,-2.499718,2.933590,8.405709,0.579579,-8.148054,-3.887080,7.424671,-9.712768,4.632895,-9.925592,6.818434,-8.542784,7.289109,-8.946074,-1.754052,7.343753,-3.298862,3.981167,9.593385,0.700830,-5.012615,-7.163177,8.107697,-0.732132,3.077004,-4.248120,-1.215800,8.393674,2.070360,-4.292604,2.312419,-5.064913,0.300575,4.893433,-6.941691,-7.622903,2.861779,7.326388,-8.506231,5.360597,-9.926915,-8.178321,-2.172713,2.961008,4.866637,-8.434790,7.368854,-5.461528,-2.053844,7.496985,0.413370,3.507008,-5.238891,9.659880,1.189055,-1.838314,-1.936054,-3.460575,3.981426,5.620453,-3.497792,4.003657,-2.941551,-2.872947,6.701738,-7.312444,3.249430,4.486460,-8.127302,-6.564746,1.466062,2.260186,5.310108,3.430993,9.721523,5.181067,-2.240925,0.761178,4.214073,2.521281,6.763677,5.112770,7.782245,2.477179,8.558900,5.377486,-1.459576,8.989413,2.765845,-0.712080,0.497672,-4.644520,-8.952629,-5.187005,7.710513,0.717449,3.734110,3.338890,1.812498,-8.269471,3.316524,-4.167072,9.695056,0.278354,-9.644016,6.554288,-2.482829,3.603099,-5.623853,-3.878121,6.089044,-9.960291,-2.051437,4.897242,-9.498989,-5.107055,-6.509028,-0.870335,-4.928674,-3.158792,1.346973,-9.865918,7.726876,6.646032,-9.608081,5.033592,8.560146,-1.113443,9.408004,4.675022,-4.908648,5.382916,-5.310686,-6.733855,-9.420407,5.278662,-3.793375,4.961148,1.500811,0.406598,-6.373548,3.489450,9.114595,2.470350,-9.450530,-0.034374,-7.068570,5.488025,4.529032,-9.408316,-7.311607,-7.075231,3.308256,-0.099213,-0.699584,-3.951987,-3.750726,-0.490095,-8.909496,-5.863172,-6.146898,0.029317,9.636185,-7.316033,-7.295311,-3.891259,-7.077760,4.230295,-0.148115,0.520414,-1.742625,4.427359,1.318593,-4.810606,3.208288,-3.491694,5.758626,-5.654621,-6.766546,-6.635451,2.501858,4.852053,5.632330,-7.634762,-3.100274,-5.856372,4.790124,9.131087,3.966403,-3.426181,3.869069,-4.449891,-0.331959,0.109686,8.833704,1.142324,-3.245283,6.241559,-5.032043,1.144743,0.382683,2.166005,3.564924,0.036467,-6.915498,1.949471,4.296155,-7.582253,-5.307499,-9.809236,5.459349,5.714200,0.210265,4.785412,-6.733104,-7.861702,-3.353276,-6.527397,8.239967,-3.542538,-9.322337,6.603665,-1.642771,9.796312,6.173905,-5.650094,-8.013307,-8.531724,-1.994246,6.270133,-7.094822,-3.810439,2.182041,-6.633169,9.436237,-1.345771,-2.565521,9.562570,1.123554,0.149008,-0.092581,-5.925163,0.095703,-3.491173,-8.743581,-4.877322,-4.163107,-1.468743,-2.814195,-8.781475,1.539023,1.613446,-0.066643,-8.956940,2.278846,-5.384362,-3.811149,-1.211360,1.628041,0.016026,-6.736142,-1.326233,4.265108,-1.635398,2.546477,3.967603,3.559920,-9.447825,2.538761,-4.817979,-7.740138,-7.383278,8.493701,0.240535,-3.883285,-1.715662,-3.290083,9.524854,2.712620,3.107701,-9.724229,-5.653442,9.840085,7.369757,2.207929,-2.896460,-0.370676,-1.533844,4.546373,-2.294327,9.807002,9.281185,2.325505,6.206612,-5.653071,6.934366,9.085082,8.062040,-3.416118,0.975020,-8.652667,9.236983,-8.307203,-2.540930,6.781992,2.611572,2.050820,0.600916,3.210101,-4.798388,6.165059,-7.918769,0.098167,-4.459140,-4.172506,3.135280,2.132096,3.503012,0.582151,4.958654,-3.876273,8.396384,2.418423,-7.077478,8.661431,0.290598,-7.323911,8.154327,1.944607,9.262049,6.095738,-9.209875,-7.515940,-1.883780,5.924539,-5.836672,0.668865,0.760781,-2.964611,7.512662,-5.425389,3.465252,1.417150,-0.195612,-5.729381,-4.849804,1.328064,-6.714800,6.157399,9.680729,-9.503458,-2.874903,7.440043,6.081203,-7.194685,9.902420,0.574251,0.491349,5.289839,9.628524,-6.683680,9.880159,-2.322743,8.936290,-4.079617,-1.359177,-3.781930,-1.618039,-9.802096,-7.589288,8.016099,-9.037324,-1.475722,7.903650,9.671408,0.772005,-8.036205,9.045258,-1.038471,-9.570919,9.838423,3.087395,-5.218851,4.846058,3.032935,5.669797,8.202890,3.045352,7.184762,2.221276,3.725421,-8.309982,2.825273,-1.369203,-7.923944,0.745703,5.968545,-3.653745,-2.251747,8.278224,2.823666,-1.059326,-2.450457,-6.964374,-3.669351,-7.704886,-8.385522,-6.513668,0.178445,1.995504,6.040624,2.352074,0.924698,-4.218486,-0.744878,-9.861012,-0.816711,-6.228075,-0.332020,2.670013,2.200155,9.413812,-4.410628,5.615765,-9.425945,-7.355031,9.599099,4.751801,5.942572,7.070649,3.418955,4.904037,-7.580721,-0.890441,-0.378457,-1.148427,3.582260,5.501609,5.575293,6.687471,2.848451,9.709369,-9.254448,0.106286,0.388918,8.466865,-1.932296,-7.475193,-1.852422,-5.016448,-0.645383,-0.791507,-6.540086,-6.206331,2.331593,7.118679,7.443925,4.258715,4.598923,2.706189,9.327463,9.546048,6.383771,4.611085,-4.629755,-3.570326,-6.334069,5.517564,-1.219357,-9.129698,8.530205,-6.087614,-0.679680,-2.560941,-4.881231,-8.030109,-9.443222,-2.523706,-2.153432,-8.691343,7.858586,4.034048,6.217464,-0.695751,-6.147016,2.680848,-4.193604,-8.245402,-4.794929,2.767321,-9.422807,-6.779823,0.990651,-9.265693,-4.711017,9.345504,2.522645,5.883651,0.319981,-6.545536,-4.914459,5.390838,8.704759,-0.198319,7.466023,0.698308,0.148050,-1.709261,-5.773046,-4.102851,8.247674,-2.598882,8.124651,-4.861273,9.969206,-2.126194,-4.700898,-0.075906,-7.429645,4.618160,-6.895406,8.678343,2.689057,4.599283,4.100498,-9.428690,0.003155,4.940640,9.498236,8.783992,6.724432,-8.896793,6.614576,9.851131,6.801298,2.952747,4.062038,-8.574419,9.408229,-1.409908,0.594910,4.820674,7.393858,0.548629,-4.251076,0.265204,7.989422,-3.185586,1.476769,-8.203663,-4.585893,-6.207782,-6.866721,-5.255171,-9.133336,-8.172743,-1.532587,-2.896126,8.743002,-4.593008,-3.462490,3.514571,5.552269,6.833738,2.457296,-6.265352,4.238852,-8.034285,4.119418,6.197072,3.363380,1.041549,-0.366589,-6.136455,-6.036257,6.311635,-3.782661,-3.046870,-4.711775,-7.180245,9.609979,-8.858385,-1.697574,-4.059898,1.914899,3.608456,-3.704055,-1.904369,3.152078,-2.878013,0.952206,-4.336807,-4.348622,-4.296794,-9.249646,-8.932708,8.740971,4.047599,1.712273,4.134918,1.497203,-5.764797,5.648727,-1.079696,6.913949,-0.243228,3.838027,-8.741220,5.092790,-7.390571,-2.174850,4.501123,3.862022,4.304385,5.629202,-8.115109,3.868196,-9.814834,5.075301,0.652110,2.545316,-3.526545,7.444719,-2.442250,4.204901,-6.664430,4.295217,3.314798,-3.245365,-6.356007,5.695375,3.446928,1.160474,8.600334,-0.883024,4.706658,0.061841,-9.392522,-2.213157,8.253106,-1.800206,2.009752,-0.157128,-0.589696,5.304027,-8.896213,8.994634,-4.952173,0.277625,-4.675478,-0.601451,6.625735,2.788905,-1.364384,-2.587347,8.300871,-2.085887,-6.426150,8.556320,8.117852,1.474504,2.338140,9.804550,0.181195,7.675358,3.186539,0.172716,3.913098,-7.990939,0.970711,-5.072896,5.294880,1.740902,3.886716,6.069477,-6.399414,-0.802727,5.307964,2.273940,-7.011876,-9.797017,-2.259215,-3.218231,-2.371342,-2.849982,4.041242,-4.690416,5.404792,-5.977379,-8.036020,0.675387,0.622333,-5.994978,-6.072506,9.813867,5.295847,-5.447918,-6.034878,9.893558,4.903268,-3.595389,-4.747517,-7.342121,-2.657146,-8.156925,-7.677281,7.783380,6.955772,-8.526471,8.428121,-6.975178,-4.459324,0.467025,9.221266,9.332258,-5.936813,2.119991,5.431169,-1.248461,3.390775,-1.181376,-4.546094,6.440553,-1.640823,1.112871,6.129138,-8.088668,-0.988767,-7.773550,-5.677327,4.927618,5.499347,-1.597213,-9.257716,0.518812,0.143984,1.561277,9.591092,-8.603940,-0.179178,-8.739715,9.999417,0.015595,-3.309757,-6.053706,-5.778784,0.145597,-9.197061,-8.160910,-0.678973,-2.456780,5.417673,6.061259,-3.552088,-3.480990,-9.661591,5.074191,4.137077,1.538537,-4.095995,0.729825,3.891950,2.505789,-6.394087,-2.726621,3.416215,-0.800197,-3.744191,9.469137,1.147246,-0.323538,-2.387790,-4.347387,-6.483839,8.555983,0.107124,4.704392,8.502141,-8.121810,-4.306122,-9.373250,-9.965596,2.910014,2.254614,1.173162,-8.361440,-1.285254,0.734932,8.504107,-1.370580,0.745756,6.312213,1.240982,7.700343,-1.668966,-1.036070,8.344775,8.491709,-1.529120,2.369032,-4.350707,7.922547,0.401824,5.232383,-6.391799,7.842330,2.958852,1.002169,-9.995307,-7.869520,-4.963449,6.816800,0.053300,-4.572057,4.619718,-7.096007,-5.369043,-8.282128,-2.868663,-7.112014,-3.524451,-3.754550,-2.669726,-1.827780,-6.506258,2.546240,6.016704,-3.045886,1.884977,-2.099849,6.177761,-6.476565,-9.485388,2.385671,-6.693487,-0.144626,1.164598,-2.622565,-0.855170,-2.913633,-7.431467,0.418864,3.330806,-9.966242,8.630376,9.542122,6.627579,-5.384241,7.933389,5.733342,8.034353,-4.535918,-6.001516,-9.337491,9.190337,-3.443840,-2.741240,5.394254,7.752051,-7.913599,9.287831,2.094955,-1.745369,-2.840475,9.950531,4.495310,3.875919,-6.240729,0.144190,-7.863420,5.421461,-7.497570,3.817958,2.862845,6.353101,1.289968,-5.251749,-8.649135,-1.227807,-2.086354,-5.248461,-0.505689,3.234899,9.634755,1.781418,6.856002,-0.900884,-6.391501,4.721199,5.231311,4.878757,2.155121,4.137197,-0.546207,8.094177,-3.147051,7.270807,9.026808,4.994490,1.576694,8.037050,2.339829,-6.121270,5.811912,-3.344332,-6.629453,1.156041,9.433432,1.696698,-3.755864,-3.321869,-2.765259,8.016503,-5.418326,0.015951,9.069831,-2.847450,-1.137848,-3.262138,-2.979301,-5.623940,-2.887206,9.669009,0.226356,-8.232970,6.710110,-1.400485,-4.365777,6.493239,-0.844257,-2.331835,2.213433,-3.345259,5.337653,9.073435,6.093513,-8.435092,0.745303,9.896213,1.794827,-4.905252,-4.354603,-4.431392,-6.324168,0.550280,-5.120949,-3.719614,-7.510551,-0.546115,1.010104,-5.499933,7.297918,7.609428,-8.020961,6.217456,-2.042165,-5.025592,-4.743943,5.170308,-7.700520,2.604328,-4.572863,6.377723,2.535740,-8.289565,0.184378,7.972335,5.027276,-0.781178,-0.408305,5.166273,1.733623,9.692854,7.606396,0.954648,-3.496713,-0.885561,-5.552514,9.943916,0.709325,9.139217,-7.430082,-2.747310,0.926927,0.953633,-2.872237,-2.721564,-9.559435,-4.476452,-7.300006,-9.415456,-8.060054,9.165312,-8.377339,-9.009955,-9.357776,-7.145704,6.759642,-0.683779,4.129506,-9.068921,1.254009,-1.456590,-5.395466,8.731782,-1.801657,9.030203,-4.100535,7.781160,-0.746375,3.014466,5.176519,6.849248,-0.113596,0.610202,-7.783669,3.517326,-0.186538,3.604148,-8.179744,6.629361,-8.918794,-3.277050,5.302216,2.600497,9.217529,-4.189991,4.895689,5.066905,-8.232242,1.096503,-2.734854,-8.872554,-0.854116,-7.789620,-8.150644,2.972428,-9.388514,4.815453,-2.471397,6.064064,1.578705,-7.828919,-0.721030,-8.213596,0.315625,5.317617,4.372034,-6.962560,7.119834,-6.208660,3.515077,1.180357,2.247132,1.923559,3.308668,-5.299221,6.319688,7.591378,-9.697159,-6.734708,-8.521754,-4.924036,6.624275,1.497828,0.874782,-3.822994,-0.501908,-1.728676,-3.381565,0.600355,0.779594,6.333097,-6.469010,-9.310042,-1.358680,-7.534227,-2.163689,-0.515677,-5.491312,-3.251969,-6.061525,-3.037088,-2.908685,-7.902918,-0.269959,7.386560,5.018834,-0.728804,9.091852,2.788113,5.392729,-2.069647,-0.567256,1.780060,3.349561,-2.769910,-9.098102,-1.972777,2.461792,-3.565897,-0.238377,1.359017,-6.026154,9.746911,-6.779098,0.224916,8.108347,4.314440,4.334524,-6.266244,3.690208,-2.691021,2.949537,-3.986390,8.244713,-0.081070,-5.804683,-7.545726,-8.684574,1.834465,-4.478362,-5.875409,-6.121556,5.772258,2.676339,-9.059878,-3.637578,-2.661264,2.358280,-1.625458,5.141515,-2.664227,6.054801,-0.945342,9.348376,-3.966990,0.559334,3.585068,6.122160,8.584638,-1.343302,0.271313,-3.492331,-1.126088,-5.694848,-6.078563,5.294249,-6.107641,8.076079,-0.039421,-2.791259,-9.961396,-3.232524,1.872075,-3.357631,-8.786369,1.191716,8.807151,3.442378,9.353306,9.332643,-0.381343,7.091000,0.863790,2.154509,0.031642,-6.038775,1.334424,2.908712,-8.626502,8.875620,-0.305841,-2.873968,-7.013034,6.958138,-9.013674,-9.575893,7.364339,6.200444,-3.173769,2.255476,-6.403884,-8.858043,-7.012784,-7.636457,9.504529,7.717870,-1.658171,-9.234504,6.343122,6.196029,-7.957371,-6.394224,2.491907,-3.660701,8.186255,0.357515,7.319265,6.035461,7.522360,8.479035,-8.438546,-3.520444,-5.083910,8.281938,-4.148880,7.168198,-0.492463,-7.578510,0.074732,-5.464921,-8.204169,-2.556951,1.660334,5.454648,-7.787830,8.226501,0.387591,7.737570,-7.606889,-9.720418,8.121240,0.686961,0.435530,3.322376,-6.725586,6.609687,8.671508,6.763132,-3.614539,7.628328,7.728982,3.146403,-7.332666,-5.003945,3.201273,4.929534,3.596795,3.480499,2.570285,8.197935,-1.608295,-2.648123,4.872697,-8.920922,7.368230,-0.357933,-6.227690,4.738203,-3.113637,-2.949885,-4.404970,3.206657,-7.376547,2.839426,8.314220,-1.176035,9.343566,-7.155021,-5.496094,-4.598418,-5.461398,-4.670206,-6.436217,-9.062036,0.398308,2.226772,-2.474298,6.936333,1.592286,-8.248215,-9.133979,-8.245401,-7.422684,-3.155700,6.755007,-3.887021,1.618694,-7.845807,-9.113605,-5.063660,4.052159,-9.249770,-9.378029,1.576768,-7.170251,6.299810,-7.768719,-1.384996,-3.381894,8.250071,-2.756903,8.249194,-1.484726,3.424715,-7.812957,-1.961816,9.129241,-9.973821,1.584688,0.689184,4.053976,-3.101321,-0.779643,-8.875102,8.882702,-0.937018,8.220952,1.956096,-7.101982,2.302638,-4.749577,-2.710243,-1.403745,-6.929733,-1.975437,1.681090,-7.976042,6.515950,-7.125915,7.682161,5.136444,0.108643,1.952564,-0.382543,-7.856747,7.499659,-3.316042,-4.157194,-8.610038,-1.675152,6.669083,-3.805275,8.828457,-3.639680,-6.751419,9.267782,-6.392132,-4.798111,4.136722,3.474668,-9.193188,-8.426701,-7.939915,9.466922,6.150257,-6.252947,0.352841,-2.724899,-1.405887,2.943405,-8.290003,7.065237,4.433627,8.466957,-6.094207,-2.926384,0.134122,9.634624,-3.323767,-7.930404,-5.479073,-8.441934,6.122376,-0.595950,0.134970,-9.617190,-9.809652,-9.567140,-1.337235,-9.803729,-7.934748,3.258652,-5.761757,-2.910451,-3.836852,-8.376405,7.562566,-8.492696,-1.465042,-5.022973,-2.779829,3.610112,-7.414769,8.273969,4.155897,-0.711447,-2.121117,4.784748,-6.910637,0.209221,-7.718494,-9.651476,-0.011069,9.635311,5.588450,2.124788,-3.362420,0.651421,-8.853656,7.074394,-7.718673,-8.674475,-2.852777,7.307786,1.206703,8.637822,2.182993,5.330142,-2.210114,-4.976451,-6.263701,-5.308949,-9.137258,-7.327279,-7.137032,9.805104,3.365794,5.833224,7.349510,-5.329579,-9.253997,5.605812,0.531997,1.399700,0.820848,-1.609141,9.053345,-6.899492,-1.692360,7.861062,7.330183,1.204876,-9.969331,-9.710471,-6.447906,-5.013626,-5.235676,-8.682673,-1.665485,5.427344,6.409659,8.276432,-8.277914,-3.606950,-0.990049,7.081226,-4.937838,-7.086070,-3.142890,0.001238,-9.321703,1.406887,3.885767,-3.647154,3.293253,0.493622,3.913036,-3.092364,-9.405978,-1.455694], dtype = "float64")#candidate|6442|(1540,)|const|float64
var_6443 = relay.var("var_6443", dtype = "float32", shape = (120, 2))#candidate|6443|(120, 2)|var|float32
const_6444 = relay.const([-2.919469,-6.998872,-7.248843,7.434754,3.495415,4.078796,7.351082,4.689660,-4.788760,-4.394623,9.651938,3.309311,-3.351136,-1.880658,-4.354541,-8.733919,4.397640,-9.588556,-4.832910,2.369856,-7.473285,-4.495010,6.738515,6.009680,8.951903,2.209087,-7.926178,9.685686,0.372993,-3.660579,7.176217,-3.407174,9.825748,4.584169,-0.115286,6.220429,3.110248,-4.554011,-5.168944,-5.363651,5.310120,-3.575125,-8.145275,-5.333401,9.522743,5.660446,4.626916,-6.105684,-4.958146,-9.425667,-4.157204,-1.632283,5.006948,-0.423793,-2.936167,-4.746187,-0.667347,-1.944486,-8.464642,-1.346962,2.607632,-5.529886,1.801297,-8.949762,-9.207343,-5.034705,-3.750500,-2.585065,5.528423,5.890683,-3.537553,-9.747157], dtype = "float64")#candidate|6444|(72,)|const|float64
call_6441 = relay.TupleGetItem(func_5804_call(relay.reshape(const_6442.astype('float64'), [11, 14, 10]), relay.reshape(var_6443.astype('float32'), [4, 60]), relay.reshape(const_6444.astype('float64'), [72,]), ), 3)
call_6445 = relay.TupleGetItem(func_5808_call(relay.reshape(const_6442.astype('float64'), [11, 14, 10]), relay.reshape(var_6443.astype('float32'), [4, 60]), relay.reshape(const_6444.astype('float64'), [72,]), ), 3)
func_5507_call = mod.get_global_var('func_5507')
func_5509_call = mutated_mod.get_global_var('func_5509')
const_6448 = relay.const([6.856250,-8.384342,-9.450885,-4.235621,-1.583668,9.345237,-3.022279,5.693730,-0.276215,9.819856,0.660792,4.958021,-5.244885,-4.693933,8.537392,3.297533,-0.399848,-6.596828,-5.263373,-4.995433,9.096873,5.634419,-3.026081,-4.200064,9.445508,-9.464262,5.367885,-0.202797,3.996690,4.121464,7.633968,0.022037,8.568980,-4.451238,-7.274579,-8.682771,-1.883683,4.409590,-4.504325,1.086973,-6.721719,-3.188892,3.179249,9.240269,-2.593059,8.540913,7.015678,6.766614,2.824618,-8.366130,-4.414403,4.252227,-7.553900,0.119338,-7.838213,2.212947,-8.762874,-6.683787,-2.925962,-5.882356,0.907306,-5.830432,-1.600632,7.708927,3.833947,-5.524157,-4.122258,-3.196568,-8.249452,0.677532,-4.200733,1.708419,-4.587371,6.973571,6.566972,1.365594,8.683325,-8.711072,4.724954,1.458507,4.183851,8.495356,-9.956218,5.378580,5.921171,7.084683,9.649181,3.015697,2.037926,-3.575638,-3.286538,1.234406,-4.503384,-0.347685,6.796028,-3.283658,8.617928,-7.691402,-7.232101,-1.493328,-9.533993,6.166683,5.073961,7.440447,1.960911,9.745708,-8.537752,-8.749223,-9.796564,-9.610722,-7.821767,8.194920,-0.074678,1.279064,8.147709,4.233620,-2.978137,7.957835,9.080529,-4.728989,-8.201119,-9.210450,-5.009118,4.974469,7.169562,-8.060391,7.273058,0.260582,4.325929,-7.939460,9.913925,-9.498973,-0.307330,1.791812,-3.850578,8.067540,9.598976,9.432362,-6.887241,1.008069,6.515229,1.373570,5.096972,-2.827875,-7.359917,9.807671,-1.158226,9.075103,4.145690,-3.171791,-1.570074,-2.078576,-5.120440,4.019339,0.461071,-2.927508,-2.580662,1.091194,5.545204,-1.092110,-4.891878,5.263957,1.139008,9.198653,9.598604,-8.091516,1.334757,7.143398,0.697517,-9.237696,2.172287,8.238402,3.060002,1.799144,-2.915666,-1.111194,8.987901,-8.353982,-5.099400,2.285991,7.955925,0.786584,8.609550,-2.318244,2.956651,3.280589,-7.762396,-5.772364,2.753198,-1.365882,5.681151,-6.961597,-1.453421,4.257535,-7.947916,-2.550474,-3.198197,1.835339,-2.696837,-6.115100,-4.504651,4.387366,-4.261591,-2.564586,5.486453,-6.834971,9.457568,-9.388567,5.575483,-3.311341,-9.972915,7.511664,-4.903826,-3.146445,9.133845,-7.720466,-1.659390,-6.039288,0.640431,-2.967683,9.767111,1.595389,8.623694,-9.304310,0.311023,7.174582,5.655595,0.555785,6.808576,-7.800189,-0.614700,-9.973817,-8.235385,-3.990857,-5.304448,0.066557,8.698124,-9.190596,-1.774455,0.372156,-8.127095,0.125097,3.602764,7.053266,4.670467,3.832030,5.409342,-8.877820,-5.509899,6.409658,-5.321198,-9.856050,-7.217071,-5.563884,3.554944,-9.919694,-6.756109,8.016678,-4.315721,-8.033047,5.235917,-5.990571,-4.483591,-5.225696,7.382129,9.083943,-7.980394,2.956946,-6.479219,1.298635,2.881257,7.099863,-8.611383,2.048139,-0.299568,-6.545338,-5.271208,-0.567221,8.442123,3.690210,-4.004794,-3.575805,5.840633,4.659353,-4.747323,2.291148,6.853482,3.230635,-3.536263,-6.570663,2.705046,-4.319378,0.766098,-1.540485,5.323337,9.134253,-7.703171,6.528269,5.083463,1.055684,1.763723,6.427625,-3.133062,-5.131438,-8.633156,5.908492,1.027788,3.732267,-9.287752,-3.803787,7.324584,4.614956,0.698216,2.239174,-7.186604,-4.702149,-5.694953,-9.218570,4.336729,9.711169,2.707787,0.552140,-6.187413,-9.437702,-9.676130,-0.550243,-8.756401,3.631540,-9.865942,3.377267,3.867261,6.197692,5.698017,-9.198654,-2.000565,-6.003917,-6.915670,2.506719,-1.876804,8.038156,-7.442074,4.643111,-2.719455,-6.972049,8.402720,8.743593,-7.537112,-0.264935,-6.531459,-7.146545,-4.054007,-3.210340,-5.582664,4.042899,6.878418,4.350744,4.537767,7.297263,1.406894,-2.166530,0.580029,0.892553,-2.700074,7.643186,1.823154,-9.018215,3.885489,-7.431663,-5.089861,-5.714530,7.082373,7.909727,-1.149197,-7.204566,-3.938967,5.205116,-5.761403,6.372482,-4.733039,4.610830,-2.636164,-2.436230,-2.192904,4.779546,-9.182991,8.386495,4.066963,-8.454583,9.261368,0.908617,-8.139988,2.662807,-5.481633,3.669610,2.026845,-9.719276], dtype = "float64")#candidate|6448|(396,)|const|float64
call_6447 = func_5507_call(relay.reshape(const_6448.astype('float64'), [9, 11, 4]))
call_6449 = func_5507_call(relay.reshape(const_6448.astype('float64'), [9, 11, 4]))
uop_6457 = relay.log2(var_6443.astype('float64')) # shape=(120, 2)
func_5507_call = mod.get_global_var('func_5507')
func_5509_call = mutated_mod.get_global_var('func_5509')
call_6491 = func_5507_call(relay.reshape(call_6447.astype('float64'), [9, 11, 4]))
call_6492 = func_5507_call(relay.reshape(call_6447.astype('float64'), [9, 11, 4]))
var_6496 = relay.var("var_6496", dtype = "float64", shape = (396,))#candidate|6496|(396,)|var|float64
bop_6497 = relay.bitwise_xor(const_6448.astype('uint64'), relay.reshape(var_6496.astype('uint64'), relay.shape_of(const_6448))) # shape=(396,)
bop_6502 = relay.bitwise_or(call_6491.astype('uint16'), relay.reshape(const_6448.astype('uint16'), relay.shape_of(call_6491))) # shape=(9, 11, 4)
bop_6505 = relay.bitwise_or(call_6492.astype('uint16'), relay.reshape(const_6448.astype('uint16'), relay.shape_of(call_6492))) # shape=(9, 11, 4)
func_3130_call = mod.get_global_var('func_3130')
func_3135_call = mutated_mod.get_global_var('func_3135')
const_6517 = relay.const([7.491246,5.667617,5.461122,3.165416,-2.852555,5.728971,1.150977,-8.580916,-6.819352,0.629833,5.706642,3.244911,8.180363,0.644528,8.287241,5.507553,-5.311028,5.774494,-7.749884,-9.016396,-1.258469,3.635389,9.175759,2.841853,-2.901440,-7.616786,5.904422,-4.449050,0.263143,-7.132022,0.760810,9.024791,-6.122344,2.757331,4.236323,8.340138,6.735169,-4.854512,-4.384235,9.701692,-2.115138,-6.829337,9.630228,-8.122074,9.721273,6.185063,-3.248100,-3.845201,0.127286,-5.039438,1.967472,9.343995,-2.837657,8.241300,2.380169,7.492215,9.896323,2.460884,-7.683370,7.640179,-1.244767,-0.706334,-1.307784,9.501482,0.814073,-3.407451,1.790338,8.308694,6.228536,-2.081251,7.568923,-0.911949,-3.931751,3.789680,5.310989,-8.320117,-6.736440,7.318753,7.886573,-5.744752,-2.138405,-8.999175,-8.880065,8.324051,-0.028121,-3.975624,2.524043,-7.485491,3.217669,-9.380080,1.104620,-0.912264,0.973245,-4.261356,1.493713,1.747645,3.232780,7.402085,-2.359318,-2.315991,9.753201,-9.276882,7.602327,-1.154371,7.801023,-3.135511,0.615679,-7.124062,-9.455124,7.914590,1.400474,5.073967,-0.505265,8.825601,5.915818,-2.579253,-6.034826,0.106865,4.777433,-7.160528,-2.703254,9.375541,-2.749700,-6.998191,-5.977165,-5.429599,6.673974,5.553601,-0.988599,-5.935545,-7.828526,-1.332286,9.855275,-6.562063,0.543903,8.585041,5.145166,4.944913,-1.913993,-2.457517,-4.320195,2.237715,-6.427420,1.520627,1.603262,-2.531811,-2.862720,-9.668064,-0.721658,5.961559,-3.544746,7.974677,1.263564,8.890233,8.229610,3.937264,-5.914428,0.436768,5.678667,3.796388,-6.709093,-2.088476,0.097646,-2.489944,7.219492,7.854115,3.269121,-1.649349,-8.992867,-3.677319,6.330563,2.165998,-2.420634,4.446097,2.476652,-4.741628,-9.094612,0.178930,-1.779278,-6.253052,3.698267,2.477919,-1.799376,6.484657,6.676752,-7.527463,7.073577,-5.054073,-2.165088,5.903529,-8.728063,6.945969,-9.375359,-6.094799,2.174686,3.176159,5.444026,2.434446,-5.682564,-2.034028,-5.736437,-1.077397,-1.048343,-0.325947,-0.882836,-6.078743,7.929354,-3.589979,-0.528101,-5.949690,2.148441,-1.967640,-8.473507,-9.665929,8.239681,-0.594040,-7.282838,2.545121,9.503972,7.089047,-3.412845,3.071396,-6.854217,2.517177,-8.458019,-5.499150,5.523693,-8.951510,-9.783484,-7.612018,5.005903,3.131467,-7.819863,-6.626804,-2.774014,1.547851,-2.905149,8.231737,-3.566456,4.025807,-6.806638,-0.932832,8.473157,-7.950314,-5.312691,0.277523,9.722892,4.922939,8.062394,-3.173042,9.239390,-7.750837,-4.397358,-9.713903,9.885232,5.442434,3.414664,3.927613,5.046393,-2.067357,0.243468,3.674133,6.584380,-8.624361,8.537467,-6.362734,-1.757282,-9.623256,-7.533705,-7.995681,-6.566070,-8.387982,4.658650,-6.814132,4.161854,-3.372354,-6.438815,0.199488,-2.605044,9.919972,-3.628607,9.949380,-3.376359,8.766577,-4.849360,-7.084239,-5.420010,6.917042,3.370437,-4.831456,-8.241621,1.261123,-3.683934,-7.052495,-9.515000,-8.397803,-7.025567,4.503432,8.930217,8.803702,-9.911479,9.067342,-2.361058,6.877940,-9.638208,-0.133517,-3.188665,-5.658701,6.776003,-6.217954,-7.732521,-5.661542,-2.672546,0.418967,1.991933,5.984542,2.629370,-4.432643,7.062660,6.181249,0.611530,8.017111,5.325513,-1.467899,-4.743770,-0.614992,-7.059983,7.654555,-2.795770,-0.714231,-4.464871,-5.540691,-4.444201,1.131438,-5.000502,-7.333923,9.356343,7.904945,3.992286,2.616125,-5.532787,-0.529164,-4.741291,8.329508,-5.584162,-6.745656,-7.618334,-8.514825,9.578607,-3.296309,-6.438931,8.603961,-3.468395,-4.212682,7.828975,-6.600239,8.635629,-3.699858,-8.953462,2.029124,3.426834,5.422558,-6.181069,9.732455,-3.176427,4.791518,-3.812305,-4.879839,1.949636,-0.110894,-9.010113,9.954419,9.574137,4.013296,4.719333,-8.745964,3.045861,-0.038712,-8.670348,2.459754,-1.811753,7.432497,-6.585481,8.024505,2.141954,-9.361719,-3.118642,0.495041,3.936093,-4.721919,3.920603,2.793016,-9.759991,-9.981621,0.461847,8.103544,-7.610377,-3.068303,-3.211065,7.058649,9.181981,1.155072,4.232773,5.652340,-8.543002,2.842026,5.636623,-5.279587,0.063890,-2.457290,-4.616516,-5.194483,-0.529396,2.763830,-1.868849,-5.814547,-2.919429,-0.712966,2.188167,-9.160002,2.884552,3.270292,3.451830,-6.294111,9.035358,5.547936,2.830731,-2.252018,0.105812,-5.411313,-6.347448,0.692931,1.283769,-5.413502,-7.444371,-1.478006,8.907608,-9.211636,5.811452,6.469965,1.099154,-0.768140,-1.568471,-9.126282,1.895214,7.288493,-2.467469,-4.906029,-0.674903,-1.883162,-1.499960,-7.264735,-9.079737,-0.185052,-1.699197,-4.217356,-5.645131,-3.705292,-0.622349,-1.020059,6.349132,3.125118,7.560740,1.859732,5.298182,-9.979112,-8.169714,9.900961,8.268455,-7.338883,0.481493,7.908558,-7.216694,-2.268497,-6.820031,-7.215512,-8.570064,3.459522,2.544808,-4.658100,-7.660334,-7.550608,7.330795,-0.143186,8.732711,-1.303862,0.680258,2.588291,5.391677,-4.782773,-5.431719,-4.550465,8.028675,-6.400542,-7.154760,8.647412,4.708525,-2.798955,2.829145,6.479121,8.425962,3.871650,8.429038,-0.598617,-3.066714,1.687555,5.434661,0.798640,7.085161,-5.301865,-6.950014,0.091966,2.309829,1.204322,-7.063995,-8.062430,-7.106393,-7.687316,-9.467199,4.982187,-4.617759,5.431169,-7.831018,-9.451668,0.722963,6.601897,-7.648054,8.139049,-7.805594,-7.952079,-7.346898,8.826852,-4.571963,-6.261545,-0.615906,4.400635,-0.704695,7.210023,3.562693,0.488864,-6.846963,0.935481,5.915513,-7.264704,3.962752,-4.698517,0.324871,-6.548550,6.958766,-1.101783,-0.223566,-8.897760,4.524189,1.918520,0.454020,2.532753,-9.684756,-0.423930,0.814763,4.588913,3.173836,-3.957016,1.922326,-5.042244,-3.708047,2.786184,-6.502913,3.298205,1.026716,5.963668,6.430200,-7.739029,4.031667,5.599812,3.280676,4.134946,-5.775197,-9.460362,-8.209666,5.908170,8.651299,-0.432797,-8.850120,8.307721,-6.258960,1.052834,0.908104,2.659359,-3.910163,-7.011513,-9.579609,7.352334,6.631374,-2.455726,-8.262467,-2.342050,-4.768406,-8.925307,2.318052,-4.141949,-2.455444,0.918460,7.404551,-9.584295,-2.149949,-6.519415,-6.651849,0.273895,5.367087,2.407817,8.282308,5.443816,-5.450905,0.176437,-9.815991,-5.981599,9.056184,-9.806938,-3.928646,-9.711674,6.442649,3.531791,-6.113677,-8.437383,6.955064,-4.632643,0.957169,-2.805380,3.129159,5.884663,-2.591756,-9.062337,-9.209182,-1.536676,4.809137,2.455080,5.474179,-9.737621,6.610021,2.041521,-6.061025,-7.176531,-3.290983,-3.775321,-9.671511,7.970101,5.741781,-6.631129,-9.894291,-4.153994,8.340737,2.630096,5.606527,7.745226,-4.705154,3.221423,-3.399635,-2.421933,-8.702770,-6.307891,4.972342,0.673768,2.569391,-6.872804,7.004385,9.490640,-9.462504,1.209302,-0.635508,-4.027941,-3.780348,1.145711,6.983601,1.648594,-9.281958,-1.442057,1.011623,-6.221400,1.385864,-0.308338,-4.496297,-3.863896,-9.330761,-7.806271,-1.780903,8.210530,-9.124593,0.965969,2.686672,0.708710,-2.302244,3.006635,-0.810917,-6.501909,-6.818413,-8.060378,-0.249280,3.644961,-6.050025,9.152120,-3.519444,0.322658,5.036030,1.885088,5.172643,9.195187,-2.919659,0.084104,-3.954316,5.294904,6.200662,1.363008,-3.817638,-4.950668,-4.806038,2.929835,1.177074,5.894699,4.839382,6.950376,-0.018110,-6.024620,2.820770,5.477021,1.117264,-6.990793,-9.482386,-8.399745,-3.013868,9.202525,-5.719963,5.791494,-4.204593,-7.954331,1.018155,-6.963040,-4.833394,3.315390,1.543349,-6.609694,2.906190,3.974015,-9.157593,-2.361371,-1.621900,-8.261930,-0.924450,-5.917473,-4.150733,-4.457591], dtype = "float64")#candidate|6517|(750,)|const|float64
call_6516 = relay.TupleGetItem(func_3130_call(relay.reshape(const_6517.astype('float64'), [10, 15, 5]), relay.reshape(const_6517.astype('float64'), [10, 15, 5]), relay.reshape(const_6444.astype('float64'), [72,]), ), 5)
call_6518 = relay.TupleGetItem(func_3135_call(relay.reshape(const_6517.astype('float64'), [10, 15, 5]), relay.reshape(const_6517.astype('float64'), [10, 15, 5]), relay.reshape(const_6444.astype('float64'), [72,]), ), 5)
bop_6524 = relay.logical_xor(uop_6457.astype('uint32'), relay.reshape(call_6441.astype('uint32'), relay.shape_of(uop_6457))) # shape=(120, 2)
bop_6527 = relay.logical_xor(uop_6457.astype('uint32'), relay.reshape(call_6445.astype('uint32'), relay.shape_of(uop_6457))) # shape=(120, 2)
output = relay.Tuple([bop_6427,call_6432,const_6433,const_6442,const_6444,call_6447,bop_6497,bop_6502,call_6516,const_6517,bop_6524,])
output2 = relay.Tuple([bop_6427,call_6434,const_6433,const_6442,const_6444,call_6449,bop_6497,bop_6505,call_6518,const_6517,bop_6527,])
func_6528 = relay.Function([var_6425,var_6426,var_6443,var_6496,], output)
mod['func_6528'] = func_6528
mod = relay.transform.InferType()(mod)
var_6529 = relay.var("var_6529", dtype = "uint64", shape = (5, 9, 1))#candidate|6529|(5, 9, 1)|var|uint64
var_6530 = relay.var("var_6530", dtype = "uint64", shape = (5, 9, 8))#candidate|6530|(5, 9, 8)|var|uint64
var_6531 = relay.var("var_6531", dtype = "float32", shape = (120, 2))#candidate|6531|(120, 2)|var|float32
var_6532 = relay.var("var_6532", dtype = "float64", shape = (396,))#candidate|6532|(396,)|var|float64
output = func_6528(var_6529,var_6530,var_6531,var_6532,)
func_6533 = relay.Function([var_6529,var_6530,var_6531,var_6532,], output)
mutated_mod['func_6533'] = func_6533
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6698 = relay.var("var_6698", dtype = "float64", shape = (2, 15, 3))#candidate|6698|(2, 15, 3)|var|float64
uop_6699 = relay.erf(var_6698.astype('float64')) # shape=(2, 15, 3)
bop_6704 = relay.divide(uop_6699.astype('float64'), relay.reshape(var_6698.astype('float64'), relay.shape_of(uop_6699))) # shape=(2, 15, 3)
output = relay.Tuple([bop_6704,])
output2 = relay.Tuple([bop_6704,])
func_6708 = relay.Function([var_6698,], output)
mod['func_6708'] = func_6708
mod = relay.transform.InferType()(mod)
mutated_mod['func_6708'] = func_6708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6709 = relay.var("var_6709", dtype = "float64", shape = (2, 15, 3))#candidate|6709|(2, 15, 3)|var|float64
func_6708_call = mutated_mod.get_global_var('func_6708')
call_6710 = func_6708_call(var_6709)
output = call_6710
func_6711 = relay.Function([var_6709], output)
mutated_mod['func_6711'] = func_6711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6767 = relay.var("var_6767", dtype = "int8", shape = ())#candidate|6767|()|var|int8
var_6768 = relay.var("var_6768", dtype = "int8", shape = (3, 13, 9))#candidate|6768|(3, 13, 9)|var|int8
bop_6769 = relay.less(var_6767.astype('bool'), var_6768.astype('bool')) # shape=(3, 13, 9)
const_6772 = relay.const([[[False,True,True,False,False,False,True,True,True],[True,False,False,True,False,True,True,False,False],[True,False,False,True,False,True,False,True,True],[True,False,True,True,False,True,True,False,True],[True,True,True,False,False,True,True,True,True],[False,True,True,False,False,True,False,True,True],[True,True,False,False,False,False,False,False,False],[True,True,True,False,False,False,True,True,True],[False,False,False,True,False,True,True,True,True],[False,True,False,False,True,False,False,True,False],[True,True,False,True,False,True,False,True,False],[True,False,True,False,True,True,False,False,True],[False,True,False,True,False,False,False,False,True]],[[False,False,False,False,True,False,True,True,False],[False,True,True,False,False,False,True,False,True],[False,True,True,False,True,True,False,False,True],[False,False,True,True,False,True,False,True,True],[False,False,False,False,False,True,False,True,False],[False,False,False,True,True,True,False,True,False],[True,True,True,False,False,True,True,True,False],[True,True,True,False,True,True,False,False,True],[True,False,False,True,False,True,False,True,False],[True,True,True,False,True,False,True,True,False],[False,True,False,False,False,True,True,False,True],[False,False,True,False,True,True,False,True,True],[True,True,False,True,False,True,False,False,False]],[[True,True,False,True,False,True,True,False,True],[True,False,True,False,False,True,True,False,False],[False,True,True,True,False,False,True,False,True],[False,False,True,True,True,True,True,True,True],[False,False,True,True,True,True,False,True,False],[True,False,False,True,False,True,True,True,False],[True,False,False,False,True,False,False,False,False],[True,True,True,False,True,True,True,False,True],[True,False,False,True,True,True,True,False,True],[True,True,True,True,True,True,True,True,False],[True,True,False,True,False,True,False,False,False],[False,False,False,True,True,False,True,False,True],[False,True,False,False,False,True,True,True,False]]], dtype = "bool")#candidate|6772|(3, 13, 9)|const|bool
bop_6773 = relay.bitwise_and(bop_6769.astype('int64'), relay.reshape(const_6772.astype('int64'), relay.shape_of(bop_6769))) # shape=(3, 13, 9)
bop_6780 = relay.equal(var_6768.astype('bool'), relay.reshape(const_6772.astype('bool'), relay.shape_of(var_6768))) # shape=(3, 13, 9)
func_6708_call = mod.get_global_var('func_6708')
func_6711_call = mutated_mod.get_global_var('func_6711')
var_6786 = relay.var("var_6786", dtype = "float64", shape = (1, 90))#candidate|6786|(1, 90)|var|float64
call_6785 = relay.TupleGetItem(func_6708_call(relay.reshape(var_6786.astype('float64'), [2, 15, 3])), 0)
call_6787 = relay.TupleGetItem(func_6711_call(relay.reshape(var_6786.astype('float64'), [2, 15, 3])), 0)
output = relay.Tuple([bop_6773,bop_6780,call_6785,var_6786,])
output2 = relay.Tuple([bop_6773,bop_6780,call_6787,var_6786,])
func_6798 = relay.Function([var_6767,var_6768,var_6786,], output)
mod['func_6798'] = func_6798
mod = relay.transform.InferType()(mod)
var_6799 = relay.var("var_6799", dtype = "int8", shape = ())#candidate|6799|()|var|int8
var_6800 = relay.var("var_6800", dtype = "int8", shape = (3, 13, 9))#candidate|6800|(3, 13, 9)|var|int8
var_6801 = relay.var("var_6801", dtype = "float64", shape = (1, 90))#candidate|6801|(1, 90)|var|float64
output = func_6798(var_6799,var_6800,var_6801,)
func_6802 = relay.Function([var_6799,var_6800,var_6801,], output)
mutated_mod['func_6802'] = func_6802
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6806 = relay.const([[[-1,1,3,2,6,-9,2,-5],[5,3,-4,10,10,1,-3,7],[9,7,1,-10,-9,-6,-4,-6],[-3,-7,-8,9,3,1,10,2],[-9,3,-8,4,3,8,1,6],[-5,-2,-8,-2,-2,-8,4,-2],[-9,-10,8,-6,-6,-6,-8,-2],[5,-5,-7,-5,1,-1,-1,5],[-6,7,-1,-4,-7,3,-5,10],[10,-5,2,4,-1,-8,8,4],[-10,-1,-6,-7,7,10,-8,-2],[-6,3,-6,3,4,4,7,-9],[1,-2,-4,1,1,-5,-2,5],[-5,7,-7,-1,-4,-6,-2,-1],[-4,-9,-2,-2,-2,1,-6,-5]],[[9,2,-4,9,-7,10,10,2],[4,4,2,10,5,-1,10,-9],[7,6,-8,9,2,5,-5,-7],[10,7,-9,7,8,2,3,-8],[-7,-2,-1,-10,-4,-6,6,8],[-7,8,-9,10,7,9,7,10],[4,-1,-5,-8,10,8,7,1],[-8,-2,8,-8,7,-2,-5,-10],[-6,-1,-4,10,1,9,1,-4],[9,-7,7,1,-3,8,-7,4],[-1,-4,4,-8,-1,4,7,2],[1,4,-7,2,9,-5,-10,8],[3,-6,-6,-3,1,9,-5,-7],[-2,-6,7,-6,-2,3,-9,-1],[10,1,-2,-3,2,-5,2,-7]]], dtype = "uint8")#candidate|6806|(2, 15, 8)|const|uint8
const_6807 = relay.const([[[5,3,-9,-6,2,9,-9,5],[2,10,-3,10,-10,-9,-6,-8],[6,-5,-4,-6,-8,2,-9,-3],[7,9,-8,6,-7,2,-9,-4],[-6,10,8,8,-2,-3,-7,1],[2,6,1,9,-6,-1,3,-9],[-4,9,-6,10,-7,-8,1,-8],[1,4,-5,-2,-6,-5,-10,-8],[-3,6,5,-7,9,7,-7,3],[-9,2,10,5,8,-4,6,1],[-10,9,3,8,-3,1,9,10],[9,-10,-7,-4,6,-3,10,2],[-1,5,-8,7,7,-3,-4,-2],[8,-1,-6,-2,-2,5,-9,6],[-7,-7,4,-8,3,-7,6,-9]],[[3,1,-6,-4,-8,-4,3,8],[-1,-6,-10,-7,-6,10,-4,-6],[1,-6,10,7,8,-6,1,10],[-10,6,1,-5,-8,8,-5,10],[-2,5,8,-10,5,-7,10,8],[-6,-10,-8,1,-1,9,-3,-4],[-7,9,-2,10,-4,4,4,4],[6,6,-10,-1,8,-8,9,8],[-10,-1,-5,-2,8,5,-5,2],[4,5,-5,-6,8,-5,-6,5],[9,10,5,-5,9,-6,8,6],[-6,-7,-1,5,8,6,-3,2],[5,8,-6,-4,2,9,-8,3],[10,-6,-4,8,-2,-6,5,9],[-1,-1,-9,-2,-5,-10,-8,10]]], dtype = "uint8")#candidate|6807|(2, 15, 8)|const|uint8
bop_6808 = relay.left_shift(const_6806.astype('uint8'), relay.reshape(const_6807.astype('uint8'), relay.shape_of(const_6806))) # shape=(2, 15, 8)
func_3805_call = mod.get_global_var('func_3805')
func_3809_call = mutated_mod.get_global_var('func_3809')
const_6816 = relay.const(-4.632927, dtype = "float32")#candidate|6816|()|const|float32
const_6817 = relay.const([1.950731,-7.525227,9.690812,-7.851394,-8.211642,-7.758912,-0.764830,5.630235,-1.388645,5.563357,-5.260503,-3.928847,6.998776,-4.216197,-5.674914,0.306373,0.762622,9.261188,8.007577,-7.995733,7.635089,-8.487245,6.425312,9.064022,0.535468,-2.628404,7.561816,6.730805,7.971320,4.138737,-6.486373,2.244926,-6.399738,-5.809472,-5.086119,2.498084,6.274145,9.762499,-2.499038,-6.365034,2.883365,9.834708,-9.674295,-9.969603,5.657744,4.711372,-8.137657,8.156286,2.092352,0.245389,-2.435690,-9.413360,-9.096421,-9.186885,-6.514563,5.117608,-6.726759,-4.678453,7.880836,-8.050862,6.032549,6.053752,7.469445,-3.077973,-6.187684,-6.285426,1.294444,7.745105,1.187513,-8.463578,-9.650000,0.060941,-6.908722,6.193031,-6.420622,-0.083071,1.066485,-1.636555,-1.356649,-7.481297,-8.029635,2.118289,8.774282,9.468175,5.266489,-8.287188,7.830935,-2.180315,4.649289,-5.068904,6.785861,1.931598,-3.375471,6.274917,2.862135,0.772156,7.447428,8.406523,9.910757,6.450191,-1.870478,5.634597,9.505466,1.776158,3.552307,8.459973,1.890888,-2.085663,-6.728582,-8.994081,8.178587,9.258504,8.840134,3.650701,0.505032,2.840347,-0.059432,-4.965525,-0.590152,-1.511086,1.607568,-1.662448,5.079333,-7.779762,5.884168,5.051547,-4.842081,7.179067,0.600889,8.487546,5.233736,-6.469580,1.178316,2.495072,-2.526132,4.981620,2.162970,-9.502181,-4.668322,-8.958443,-4.565397,-1.449342,-0.677903,-6.046342,-0.230160,2.565799,-1.187562,3.002314,-8.118076,4.600756,1.959985,-1.020496,-8.951257,7.883813,6.588452,-7.820208,5.718017,-2.442753,-5.859503,3.256178,-3.873420,-0.447971,-2.265018,-2.517445,7.893384,7.856059,3.916310,3.874111,0.792508,-9.384843,1.314939,-5.534083,-3.016688,-3.150699,7.796744,4.122785,-7.141146,-6.032615,-2.640866,5.906136,-0.001608,-6.370736,-4.043748,9.723918,-3.247281,-9.724263,8.136170,-5.037753,-9.458107,-5.657850,-8.942863,7.010902,-2.122194,5.915839,2.039369,-1.275934,4.365676,2.710158,-8.569966,5.618014,-1.113303,-6.844715,-5.034646,8.169143,-7.375902,-2.634110,-4.621593,8.435184,1.649511,8.121834,-2.152933,-7.738170,-7.479048,4.047372,4.902327,4.356176,4.399385,9.934500,-1.837567,-2.281799,-0.836677,8.174238,-4.100521,2.955023,7.337418,-3.688018,-4.422982,3.356825,-8.702709,-9.587998,-4.313872,-4.318318,8.931717,8.588088,-0.642814,-9.279175,6.483794,1.662495,6.797149,6.023726,4.471395,-1.637346,8.715947,-0.220824,-4.397348,2.043819,-4.320824,-0.125544,3.775430,5.291060,8.305703,-5.627823,1.634952,1.831088,7.071921,3.595441,-5.729409,-2.515083,-4.268766,-7.307452,6.874901,9.910956,6.309028,-9.688537,0.622196,-2.618235,9.977066,4.665983,0.490115,2.260053,-2.626698,7.565419,-2.273719,-8.029860,9.965560,-4.719813,-8.811699,-2.482266,7.206327,-3.761900,7.844740,-9.358883,3.394129,6.189503,-8.162707,0.241978,-6.765027,4.520654,0.984755,9.686281,-9.860996,2.985080,4.000731,-8.623050,-1.107785,6.319439,-1.460904,5.783709,-3.413425,-3.836680,4.267079,3.660258,-5.734572,0.514591,-6.353041,-2.623927,-9.606748,1.602096,-1.476207,-3.965979,-8.106646,-2.883388,8.951262,-5.008329,-1.533505,-4.168508,3.056493,3.545559,1.922786,7.607645,5.692861,-1.694652,1.468721,8.812661,-3.328847,4.926298,-0.333854,9.600673,0.871253,8.596351,-6.866074,0.890884,8.087058,3.677477,2.737423,-8.007340,4.928640,-2.335219,-9.073364,-8.183627,-5.326792,5.943245,7.706487,-8.604574,-9.563211,-2.293837,-0.391348,-8.706167,3.684719,-2.061386,-4.457360,4.876464,5.542706,9.418619,-3.024982,-6.642278,3.236779,9.452671,-9.553685,0.620221,0.031481,4.564290,7.335216,6.102867,-4.476517,-1.451920,-8.499177,-9.138771,3.248830,6.781913,0.071548,-5.208970,4.718871,4.691557,-0.889203,-7.504298,-5.559556,8.892802,-8.734232,-9.027826,-3.224325,1.232903,4.262363,-7.415542,0.354875,-0.444361,-3.468333,2.203764,-7.009001,2.700169,0.667355,-8.978262,-0.594815,-6.184606,-0.126157,9.510759,2.842330,8.692250,-9.270380,6.515264,8.234307,-0.451853,7.532855,8.697302,-5.091710,-9.425646,-5.358191,8.564478,-2.668868,6.345269,2.608533,9.635048,-5.677326,1.827273,-7.384642,-8.749446,-0.246017,9.898460,5.647667,1.890878,-8.027448,6.668981,-6.117121,5.321105,-4.010422,0.554538,9.991977,-8.423527,8.769666,-8.367148,1.280850,5.236465,2.318999,3.750107,1.948949,-8.917754,-3.431905,-7.224642,-3.967072,5.786570,7.945102,-4.584606,9.848503,-6.290718,-1.108222,-8.493806,7.729827,1.213745,7.278268,8.899305,1.382022,-6.792790,-4.894673,-6.797432,-0.594778,8.019799,-8.377537,-8.673639,4.583688,-5.487419,9.002634,3.225946,-4.857522,7.875107,7.970193,-4.957960,-3.996688,-3.276698,-6.648350,1.575375,-7.530672,-4.320644,4.711493,-6.902082,1.492719,-3.678965,2.823961,6.028085,1.938368,5.927459,-2.075949,4.354097,-8.700961,6.466525,7.833840,8.368849,2.422139,-2.488286,-5.929727,4.180867,-2.691250,-7.681776,9.123517,8.206460,-6.468808,5.326025,3.115881,8.497720,-8.955103,-9.615445,-2.491590,9.704130,1.629267,-3.489681,-0.185786,2.286044,4.748427,4.852119,3.061089,2.925616,5.096963,-8.855834,-4.769223,3.739914,-4.156756,-7.037427,5.199998,0.965224,2.246050,2.481827,7.066244,-8.001737,-1.843180,-1.650723,2.670091,-5.293527,-4.259975,5.483934,-6.773523,-2.567348,-5.635041,8.337891,-2.099729,-2.725671,-9.608824,-0.970293,-5.094692,3.707480,-8.434212,-2.530331,0.290358,-0.413066,-9.156845,-8.068779,-0.194121,3.388195,0.981071,0.312530,8.857502,-2.784760,1.694779,-6.522378,1.783010,-3.744056,4.421069,7.249777,5.193939,-0.356005,2.250895,4.049534,8.397658,-7.910417,9.211650,3.987774,1.639990,1.970400,-5.310327,-7.489891,3.499941,7.767278,-7.003292,4.005586,-6.070022,6.257669,9.004818,-6.282020,6.509963,5.511230,-9.720024,-4.570453,-9.675976,-7.652435,8.619372,3.657858,1.911215,3.050602,9.799600,-4.799703,-1.365835,-2.868213,-4.159616,4.217013,4.002589,-4.587683,9.385980,-8.489493,-0.801138,-1.743013,6.236859,-9.523023,-6.215080,-2.641884,3.733422,2.073448,-2.454296,8.503373,-4.941339,3.514146,9.457475,1.653300,-6.638185,9.811601,-0.236918,-8.707375,3.389732,4.607960,-6.795445,2.853796,-3.317122,4.959836,-6.919736,9.433469,6.660848,9.684444,-7.637299,5.987913,-6.277081,-1.250170,-7.603514,-4.848574,3.053302,9.430919,-8.511050,7.184404,-2.218646,9.342344,7.765916,7.951751,7.583813,-1.584144,-4.129440,-5.631345,-8.853520,9.447824,2.351497,-8.401613,9.240773,-8.548658,-9.305121,-0.327643,5.263659,-3.337733,-7.641063,5.405512,-4.858308,-5.816386,-4.852760,4.761828,1.037382,4.713525,-4.865156,3.558983,-0.602677,7.302464,-9.266836,4.455675,-8.242120,-5.338229,2.314894,-5.844361,5.262101,-9.722219,-2.569363,-6.469343,3.538167,-5.528690,8.594210,2.399054,-6.167776,0.708904,7.703444,-2.441933,-2.655056,-8.235156,-2.164848,7.429610], dtype = "float32")#candidate|6817|(686,)|const|float32
call_6815 = relay.TupleGetItem(func_3805_call(relay.reshape(const_6816.astype('float32'), []), relay.reshape(const_6817.astype('float32'), [7, 7, 14]), relay.reshape(bop_6808.astype('float32'), [240,]), ), 0)
call_6818 = relay.TupleGetItem(func_3809_call(relay.reshape(const_6816.astype('float32'), []), relay.reshape(const_6817.astype('float32'), [7, 7, 14]), relay.reshape(bop_6808.astype('float32'), [240,]), ), 0)
func_3805_call = mod.get_global_var('func_3805')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_6826 = relay.TupleGetItem(func_3805_call(relay.reshape(const_6816.astype('float32'), []), relay.reshape(const_6817.astype('float32'), [7, 7, 14]), relay.reshape(bop_6808.astype('float32'), [240,]), ), 3)
call_6827 = relay.TupleGetItem(func_3809_call(relay.reshape(const_6816.astype('float32'), []), relay.reshape(const_6817.astype('float32'), [7, 7, 14]), relay.reshape(bop_6808.astype('float32'), [240,]), ), 3)
func_6528_call = mod.get_global_var('func_6528')
func_6533_call = mutated_mod.get_global_var('func_6533')
var_6829 = relay.var("var_6829", dtype = "uint64", shape = (45,))#candidate|6829|(45,)|var|uint64
var_6830 = relay.var("var_6830", dtype = "uint64", shape = (360,))#candidate|6830|(360,)|var|uint64
var_6831 = relay.var("var_6831", dtype = "float64", shape = (396, 1))#candidate|6831|(396, 1)|var|float64
call_6828 = relay.TupleGetItem(func_6528_call(relay.reshape(var_6829.astype('uint64'), [5, 9, 1]), relay.reshape(var_6830.astype('uint64'), [5, 9, 8]), relay.reshape(const_6806.astype('float32'), [120, 2]), relay.reshape(var_6831.astype('float64'), [396,]), ), 0)
call_6832 = relay.TupleGetItem(func_6533_call(relay.reshape(var_6829.astype('uint64'), [5, 9, 1]), relay.reshape(var_6830.astype('uint64'), [5, 9, 8]), relay.reshape(const_6806.astype('float32'), [120, 2]), relay.reshape(var_6831.astype('float64'), [396,]), ), 0)
output = relay.Tuple([bop_6808,call_6815,const_6816,const_6817,call_6826,call_6828,var_6829,var_6830,var_6831,])
output2 = relay.Tuple([bop_6808,call_6818,const_6816,const_6817,call_6827,call_6832,var_6829,var_6830,var_6831,])
func_6837 = relay.Function([var_6829,var_6830,var_6831,], output)
mod['func_6837'] = func_6837
mod = relay.transform.InferType()(mod)
var_6838 = relay.var("var_6838", dtype = "uint64", shape = (45,))#candidate|6838|(45,)|var|uint64
var_6839 = relay.var("var_6839", dtype = "uint64", shape = (360,))#candidate|6839|(360,)|var|uint64
var_6840 = relay.var("var_6840", dtype = "float64", shape = (396, 1))#candidate|6840|(396, 1)|var|float64
output = func_6837(var_6838,var_6839,var_6840,)
func_6841 = relay.Function([var_6838,var_6839,var_6840,], output)
mutated_mod['func_6841'] = func_6841
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7106 = relay.const([[[7.426760,-1.155493,-5.951621,2.464324,5.885260,2.429964,5.190528,-0.791811,2.384510,5.105965],[4.696785,-4.501977,-6.521849,-3.319049,-2.129569,6.907239,-2.639919,-6.872692,9.822824,-2.545717],[-9.273425,-8.240072,-4.524583,4.628149,-6.597092,0.792953,-1.936394,6.962095,-9.947555,6.252865],[9.111454,-3.845993,3.459541,6.440065,6.853724,8.165082,4.889885,0.854517,-2.794203,-5.985862],[4.057970,-0.289367,9.709915,-2.503684,3.481216,-1.501027,-8.355004,-3.158448,4.665193,8.761988],[-4.296535,-6.012212,-2.602633,9.614193,-9.578009,-6.625288,5.055352,2.447020,-3.967062,4.691822],[-4.278896,-4.940539,-1.021240,-2.326008,-2.719565,-9.146138,-1.430045,8.887656,-5.486434,6.712204],[-0.081586,6.767618,-2.645875,-8.224503,-5.095237,-2.581732,4.842436,-6.925152,5.357081,7.340889],[-6.066995,-4.577880,-5.525888,3.220189,2.134420,-6.083468,-2.704331,4.177746,-2.353639,2.489520],[3.623198,8.097419,1.122119,2.289234,-6.369598,-6.897692,-7.477084,9.087203,-6.377826,-0.886344],[2.537452,1.140866,-5.020107,-5.442080,-2.885899,3.333971,4.829603,-8.895847,-0.953543,-8.398538],[-1.597272,7.442511,7.479494,-1.791100,-2.501600,7.821950,6.807135,2.092515,-4.161045,-7.824734],[-7.514569,-7.021867,2.345261,-1.843294,-6.946771,-6.075659,1.016078,-8.984191,5.180837,2.952564],[9.512712,4.271138,0.576724,-3.450114,9.090872,5.878432,-9.406134,3.057973,-5.632567,-5.144570],[-1.608392,-0.509600,-2.693106,1.817494,3.591503,5.857821,8.417699,5.667719,-8.648247,-6.668363],[-4.525215,6.628195,-3.955895,-4.834550,-6.096535,1.866142,-4.956269,-5.825636,-5.803436,-0.682660]],[[-9.207505,-5.728517,-7.586153,4.353005,9.503763,-8.639941,6.021856,9.927423,6.377712,-0.765523],[-5.558272,-8.757200,5.914208,3.964696,-7.582440,6.155091,-1.358420,0.107459,1.256728,4.389425],[-1.020258,3.390832,8.110568,4.364333,-0.408639,-2.404549,-2.431916,3.911500,0.368924,4.990358],[-2.371925,5.683781,3.657662,-1.892043,4.455292,5.427268,5.371232,2.912734,2.436705,3.188963],[-1.906467,-4.795385,0.593993,4.374329,4.981758,-9.932331,5.651163,-8.351910,-6.633560,-8.348584],[-3.048062,-1.330164,-0.075367,-4.706317,-7.107453,2.609162,4.639020,6.632263,-9.331424,9.692653],[-3.250523,4.728366,7.298747,-7.092404,-5.280273,6.543107,-5.276911,8.646183,9.345181,6.641736],[3.384111,7.630364,-0.612262,9.531278,3.306641,-5.959879,1.078690,5.708664,2.860118,-6.825937],[-4.566520,-4.653744,7.461160,7.275004,8.009744,4.138793,-4.072031,4.547671,4.139373,6.427282],[-0.118556,-3.417871,5.784354,-5.693795,3.357452,5.037161,3.760872,5.934541,1.250449,9.518091],[4.206160,1.925475,9.097879,-1.949867,-3.980066,8.536217,-7.216244,-4.419041,-3.353281,-1.584449],[7.330374,7.534036,-4.810398,-5.757174,-9.834499,-1.824625,-0.938194,0.380239,4.297744,-5.460756],[4.184297,-8.750380,-3.961997,6.533862,4.151343,-2.843236,5.102700,5.014775,-8.542137,5.309174],[-9.796656,-2.484021,-5.194154,-3.096047,-1.353918,0.344884,4.518942,2.670032,-0.148850,-1.598494],[-4.210993,-7.150954,-7.067985,3.423749,6.868502,4.769334,8.076757,-3.041317,0.136286,2.774211],[-6.686803,4.866253,-5.659655,7.177817,-4.325645,-5.403131,-6.603231,-3.620623,0.281892,-3.599097]],[[4.541870,-8.192837,9.862180,-9.670810,3.601345,-7.149299,-3.085320,5.629161,-3.969753,6.225034],[-5.604618,-0.782421,-1.155986,-1.071263,-6.840829,5.461661,-3.467698,-1.777553,-8.542314,3.005192],[-7.260992,9.677958,6.213450,6.406171,9.231705,-9.778399,0.658355,1.242112,-5.583061,7.265690],[-9.296347,-7.534110,-6.589816,-7.577121,9.575260,-9.859464,-9.660745,-0.757991,3.778800,7.475759],[-4.155367,-3.818333,-0.062245,3.217464,8.105616,-4.540564,5.750757,2.383840,1.517269,3.562795],[8.419192,1.144875,9.463893,8.530070,6.893198,-9.502327,7.227783,0.768872,-7.256202,-9.099226],[1.360747,4.071922,0.082665,-6.948058,-7.019958,1.171732,-5.961515,2.479880,-2.861465,-5.774361],[-3.646765,0.970043,9.444239,4.182396,8.346047,-7.408060,-0.675479,-6.874018,-0.228199,4.256520],[-7.199538,-1.741642,2.174194,-3.674795,-8.212027,9.386466,2.102372,-7.690221,-9.185303,-9.791771],[3.147855,-7.388098,-7.761404,0.265078,-1.462052,-7.752183,9.072962,2.240136,-4.231958,-7.317765],[-0.034121,3.348267,-8.024332,-7.047046,-8.261975,6.006044,3.354250,2.599925,-9.088911,-8.953496],[8.339757,4.627477,0.141242,4.817315,-4.632871,2.311884,-8.367030,8.143386,-0.070542,0.147028],[-3.663710,5.528487,-7.922970,-6.904684,9.578436,4.592059,5.730423,-8.432980,8.802674,-2.272587],[8.548009,-2.193837,1.939423,2.077939,-4.357746,-8.122277,0.667407,-7.858225,-9.030696,-9.839226],[-8.618136,8.719723,-1.452438,-3.472994,2.074193,5.534438,-1.954318,-4.717640,6.253929,-5.813523],[-2.479545,4.953836,-3.759565,-1.824505,-0.289659,-6.519552,-5.037138,-3.389351,6.272137,0.110962]],[[6.181791,-0.922078,-1.289698,1.086100,-6.245200,8.177599,-1.931959,-8.538747,7.580052,-4.837830],[3.957582,-3.542894,-0.310726,-9.845956,1.111542,-6.710641,-8.581079,5.582893,-1.179753,1.989663],[-1.891070,6.060979,0.189873,3.204235,-4.916090,-2.673649,-9.737036,-1.807947,1.437072,8.679602],[-2.092690,5.257210,-2.065622,3.652862,-5.486456,4.357762,-5.066741,4.855956,-7.480451,-2.679118],[-3.858292,-0.969943,5.548153,8.567647,7.618745,0.745919,4.493855,-4.037301,0.797120,-6.916571],[-6.616948,-8.853652,-2.125538,-0.322168,-1.078375,-5.695027,9.320612,-9.776970,6.831511,4.533577],[-8.217199,-5.036033,-7.072202,9.646255,-1.272656,7.381014,0.567887,7.368632,6.266506,-9.882742],[-9.951096,5.560100,0.078644,-0.659323,1.817731,7.410441,8.048239,9.831086,-3.414769,8.273643],[-7.065209,-9.117744,9.445109,-3.783101,5.061964,-3.275051,6.657945,-7.827136,0.872059,4.297446],[-9.393938,-8.999094,-3.078366,1.583267,-2.975017,5.614820,3.270496,-2.741474,-3.167107,-3.000655],[9.473489,1.475510,-2.092972,5.999071,4.560741,-1.245862,7.004295,5.722949,1.058553,6.171171],[3.007965,-9.833580,-2.142999,9.774074,7.902452,-1.915770,6.149219,2.809602,1.894946,9.923804],[0.254864,2.577535,3.122725,-5.090738,9.367645,-1.444828,9.424185,-9.307496,-5.668270,-2.906478],[7.709514,-7.641266,-8.836569,-2.596161,1.895508,-1.496656,1.713597,4.083683,-9.786764,8.610493],[2.150604,9.292678,6.052686,-0.576789,2.755200,6.682092,-5.114586,9.648230,-5.990158,-1.140961],[-6.050383,-7.184938,-9.616698,-2.400638,-4.479827,6.757334,1.969700,-5.519485,-8.190267,-9.232169]],[[2.760189,-8.890344,-0.337231,-8.730736,0.394962,-6.084449,-1.128092,8.445341,-2.098497,4.089557],[-8.949704,9.273443,3.774873,-4.272210,-6.209905,-5.477697,-0.982555,3.667285,-7.199279,7.204965],[5.926903,1.166088,2.548185,-6.250861,-6.683310,-3.836157,-2.362412,4.407977,7.706915,4.129109],[-7.537124,0.218354,-1.060728,5.790689,-0.411663,-4.535295,-3.395812,0.797291,9.392747,-3.487200],[-5.869896,-8.877523,-3.612244,-1.402640,2.402001,4.371947,0.522983,-3.031852,-1.166225,9.160886],[3.166346,-9.262321,7.456959,1.267931,8.209860,7.595811,-2.304799,3.763759,3.884141,-5.865208],[6.021138,-6.361876,-1.792388,1.213410,8.056978,5.149812,-3.544902,-7.956024,-2.900122,-3.152646],[1.370724,3.664498,0.288934,-7.171046,-8.803386,5.096346,8.428796,0.245437,7.299092,-5.753026],[2.004844,9.416899,4.951955,8.987104,3.946943,1.333749,1.787989,-7.510591,8.796737,0.931587],[8.606263,-7.471847,8.823486,-0.343285,-4.676884,4.059314,-6.186687,9.029690,-4.283255,5.068281],[3.807975,7.774484,8.120293,6.025715,-3.806935,2.831401,-3.088927,-3.795706,4.482453,-3.641607],[3.374446,8.122986,-0.829629,9.657582,8.763045,-5.791019,-1.507085,-1.815611,0.336836,-5.878701],[-5.041255,9.994247,2.722470,-2.611266,-3.516938,-7.012659,-0.111110,1.107023,1.323557,-2.628249],[-7.554364,3.409350,-6.484423,-3.163296,1.563025,9.756451,-3.560504,-4.826607,3.675631,-0.679474],[6.907390,3.682927,-3.829251,-5.759743,-1.717835,0.065976,6.474431,1.862777,-1.039660,7.910752],[-1.737292,9.850996,2.899432,4.572010,4.109928,-4.250616,-5.833360,-5.584816,5.343023,-1.987260]],[[5.173205,-0.012489,-0.946125,-1.313898,4.403159,2.771814,3.541811,6.942527,-5.005315,3.058354],[-8.376076,3.866082,9.068546,-5.257041,-2.156735,-8.094071,-6.682363,6.493083,-6.171123,3.774922],[4.400476,-0.358393,9.191695,-4.129094,-6.227340,4.874633,8.285703,9.846880,2.110976,8.786610],[3.394169,2.532996,-2.404590,-0.184972,5.309760,0.298431,-4.864888,9.426445,2.608340,-0.795611],[1.999561,-4.793774,-8.358908,7.067325,9.504263,1.115676,6.441967,-6.255272,1.179985,-4.174590],[-0.507813,-6.620421,1.846861,7.900656,4.054921,-7.271682,5.338611,9.919792,3.112587,9.781039],[-7.493514,8.575765,-4.503941,0.838179,-2.834815,-7.355602,7.375818,-8.728172,-3.930500,2.633307],[3.809100,-3.757712,7.232455,-5.124501,-2.505280,0.931907,-4.152589,-0.956113,1.352409,6.115889],[-8.085263,-5.331904,-7.452113,-0.270532,-3.386022,-1.649732,-3.452958,1.526116,-1.357810,-6.183945],[3.957542,3.939782,-8.068458,-7.534659,-6.095657,6.644513,8.492832,-6.675316,-2.685894,-1.410801],[2.312386,-3.859569,7.832178,7.599973,5.575502,1.379699,3.218295,7.591330,-4.002378,2.328843],[3.928975,6.152917,4.905230,-9.329089,2.307372,-9.520530,8.776128,-1.033731,-1.315782,-3.539748],[9.568092,1.316161,5.879107,-2.662679,-9.195025,-9.911472,-3.147537,5.990720,2.245229,-8.300739],[-6.355405,1.998997,5.237900,3.524712,7.953240,-6.505683,7.742260,-6.862455,-5.667686,-1.392450],[-8.743703,-0.762764,0.166221,-3.264040,3.875914,9.907119,-1.397971,0.112345,-0.314069,6.204996],[-4.526435,-2.267771,4.020858,-2.483264,2.774260,9.510898,6.708507,-2.707812,0.961103,-2.207107]],[[9.911087,-4.237119,-0.705376,-7.089817,-2.020707,9.597796,5.781229,-6.696799,-2.033454,-1.198239],[-5.375848,4.060120,9.454764,-0.052514,4.833313,1.049496,-6.422285,-0.962992,6.169271,9.751187],[-7.235498,-2.700238,-1.205752,8.812058,-4.669875,-1.995177,3.910421,-6.355100,8.323348,4.388814],[6.667625,-9.322165,-0.190286,0.186647,2.404694,-6.656023,6.740765,1.084750,9.035724,-6.107279],[-1.202457,-2.777667,-2.434462,-2.034111,7.460874,-3.242262,-1.852812,-5.372008,6.789504,-9.683859],[-9.547508,8.498252,1.811768,9.777509,7.261727,-2.497690,-8.395837,3.216887,-7.236833,2.137278],[3.621244,-5.642564,-3.225259,-7.815961,-2.173989,-7.737474,9.861687,-1.145360,-2.322868,-1.479626],[9.525655,2.020481,4.170070,2.130130,-8.464898,-3.925953,-0.821559,3.242536,5.095506,2.119091],[-8.020462,0.739113,4.980688,-0.680109,6.569096,9.035860,-5.236396,5.081747,1.495633,5.271563],[3.813559,9.909752,-0.729414,-3.712435,-4.745349,-4.280649,1.264719,1.392885,2.010128,-7.790200],[-1.186533,-7.307960,-0.842452,-3.739728,-8.851279,0.272454,2.417733,3.080280,4.234082,-9.041547],[5.869399,-3.923332,-3.982204,3.846172,0.128288,-5.541015,5.184918,-4.299839,-4.280479,3.232150],[-2.321689,-9.764008,9.712079,-5.454492,6.818076,4.754794,2.273870,5.426911,6.205280,7.586822],[-6.675556,-5.315098,-2.853123,8.853784,0.019910,5.131466,6.892786,-6.141654,-5.476828,7.808108],[3.706990,-9.644327,-9.344823,-3.772534,1.095125,8.870789,5.461623,2.703917,-4.737402,8.581699],[-0.930920,-5.384976,-4.874738,-8.819769,3.125622,5.837456,-0.198675,9.408768,4.096676,-1.003216]],[[8.769306,8.522917,0.851510,0.390504,0.886953,-8.490541,2.167567,-6.630259,9.677201,-8.721739],[-0.752975,4.499623,-7.798169,-5.303834,-4.427061,-8.954134,-0.896890,-5.770224,-8.755048,8.528997],[-3.128139,5.583037,-1.285176,-6.896886,8.480618,-2.324830,-2.736269,-3.426848,-9.722912,-4.018226],[-0.465572,4.103406,-9.456721,-8.044217,7.617828,2.879440,1.115405,4.808672,-6.096510,7.371600],[7.736207,1.536144,5.780161,-1.815545,-1.530427,-6.231462,7.669834,1.416705,-9.966068,-4.785366],[-5.589426,9.878790,7.617799,8.942564,-3.634543,1.010582,6.006895,3.893007,-1.040017,-5.485538],[9.712660,4.304806,-3.760369,-9.579852,9.594214,-3.129860,-1.053540,9.852451,0.869114,4.507824],[-8.526609,8.774949,-9.732801,-4.630936,-7.321297,1.810376,-8.279403,-9.842249,-6.027481,1.128633],[7.459786,2.027002,8.779356,9.832180,9.618345,1.117005,4.288088,4.857422,7.415616,4.609620],[2.429685,1.863017,1.963534,-2.909350,8.486258,6.623807,-8.086971,-2.075309,-1.424363,-9.263870],[7.703613,2.734641,-8.935317,-6.288892,-8.432485,9.686296,-7.472124,7.996355,-3.916250,4.891565],[7.887596,-9.255759,5.618599,-7.791705,8.733383,-9.944953,-5.103052,4.978837,-8.901763,-4.675859],[5.310124,-9.977583,1.879118,-8.816385,-1.149045,5.090876,-7.906003,8.976505,-6.885478,8.520705],[-3.050021,-2.566025,1.958089,6.482736,6.836177,8.368822,1.552704,7.330949,8.867718,-3.066925],[8.666215,-6.301572,6.686514,-2.667615,1.660410,1.490793,3.355026,-8.418754,-3.762652,-8.590934],[8.058732,-2.580225,-9.976791,9.544389,8.721810,7.075234,2.516241,3.852487,7.304668,7.168566]],[[4.935190,-9.606731,-9.141999,-2.029658,-4.545959,4.289371,-8.125117,-6.705985,6.290214,-2.008112],[3.510074,3.211063,1.244359,3.460140,-5.578530,1.579822,-9.344918,-2.003634,-8.655401,6.551486],[-3.943097,3.634947,-3.007559,5.438741,0.725506,1.467804,2.060582,-5.270468,1.229754,5.297399],[-7.358529,5.478078,-4.707127,3.284526,-2.136909,3.674396,4.489734,3.712965,-7.172531,3.862188],[4.905628,-8.781500,-8.630180,9.656359,-2.301590,0.278542,-5.082208,2.597624,2.331943,2.243654],[6.047211,-0.688148,6.481160,2.198840,-9.147922,-3.402784,7.738881,-4.480567,2.712185,8.432880],[-1.450421,-8.310466,2.822035,9.461021,-8.704962,6.975752,8.768828,8.573829,5.543869,-6.610536],[3.989824,3.100223,5.731348,-3.482620,-8.464635,-2.472298,1.580739,8.431876,0.905074,9.793969],[6.975458,2.063327,-4.049821,-2.074345,5.225952,3.884315,8.971396,4.376489,-6.042376,2.313816],[7.573498,6.744201,-0.458018,-2.407411,5.658787,8.609217,-6.023811,0.615256,0.821363,-7.601476],[-0.158754,-8.386732,2.137773,-4.495100,1.938029,-1.298756,8.557582,5.005879,-9.383816,1.311306],[0.603452,-0.823288,-5.287686,-3.861445,6.374577,-7.534187,-2.153725,4.914477,5.516901,4.669220],[9.831177,4.182202,7.257481,-7.921262,-6.644251,6.490223,3.882522,2.390414,1.129478,7.419312],[2.915727,-3.302155,-8.190216,2.156748,5.365693,5.142484,-2.766693,-5.359613,4.960671,1.480095],[-1.291716,-0.347143,-9.900980,0.778288,7.136222,2.074725,8.302979,1.065284,9.108864,4.392611],[7.660289,-5.787894,7.815571,-2.843148,6.682889,8.599778,-1.741814,6.975918,5.411208,7.171198]]], dtype = "float64")#candidate|7106|(9, 16, 10)|const|float64
uop_7107 = relay.sinh(const_7106.astype('float64')) # shape=(9, 16, 10)
func_6528_call = mod.get_global_var('func_6528')
func_6533_call = mutated_mod.get_global_var('func_6533')
var_7113 = relay.var("var_7113", dtype = "uint64", shape = (15, 3))#candidate|7113|(15, 3)|var|uint64
var_7114 = relay.var("var_7114", dtype = "uint64", shape = (360,))#candidate|7114|(360,)|var|uint64
var_7115 = relay.var("var_7115", dtype = "float32", shape = (240,))#candidate|7115|(240,)|var|float32
var_7116 = relay.var("var_7116", dtype = "float64", shape = (396,))#candidate|7116|(396,)|var|float64
call_7112 = relay.TupleGetItem(func_6528_call(relay.reshape(var_7113.astype('uint64'), [5, 9, 1]), relay.reshape(var_7114.astype('uint64'), [5, 9, 8]), relay.reshape(var_7115.astype('float32'), [120, 2]), relay.reshape(var_7116.astype('float64'), [396,]), ), 10)
call_7117 = relay.TupleGetItem(func_6533_call(relay.reshape(var_7113.astype('uint64'), [5, 9, 1]), relay.reshape(var_7114.astype('uint64'), [5, 9, 8]), relay.reshape(var_7115.astype('float32'), [120, 2]), relay.reshape(var_7116.astype('float64'), [396,]), ), 10)
func_2889_call = mod.get_global_var('func_2889')
func_2893_call = mutated_mod.get_global_var('func_2893')
var_7123 = relay.var("var_7123", dtype = "uint16", shape = ())#candidate|7123|()|var|uint16
const_7124 = relay.const([2,10,1,-1,-4,9,-1,6,10,1,-7,-6,2,-8,-8,6,9,4,-9,-4,5,6,-2,-2,-6,-8,10,6,3,2,6,-3,-5,-4,-6,-7,10,7,-6,6,3,-6,2,-5,-5,8,7,6,-10,8,7,-7,9,-2,-2,-8,4,8,-8,-3,-3,4,-4,-4,9,10,-7,6,2,4,8,-1,-8,10,-3,6,-4,6,1,2,-1,-9,-3,6,-2,-9,2,5,-8,-3,8,7,-4,-9,2,-6,-8,-3,9,-6,8,1,5,10,-1,-6,-6,2,-5,-4,4,2,-4,-5,-4,4,-6,2,3,9,-6,-4,10,-4,-6,-4,8,-4,-2,-5,-10,10,4,-1,5,10,5,-6,7,-9,-10,-5,2,-1,10,3,-5,-10,-5,5,-1,1,-8,-10,-9,-1,-4,7,8,2,-6,-2,6,-1,2,-10,2,10,10,-8,-1,-10,-7,-2,-9,-7,-9,-7,2,5,5,-9,-7,-10,9,8,10,4,6,-4,-2,9,1,-6,5,7,5,10,2,-10,1,10,7,9,-2,8,6,-5,5,-8,-1,2,-8,9,-4,1,-7,7,7,-7,2,2,7,5,-9], dtype = "uint16")#candidate|7124|(225,)|const|uint16
var_7125 = relay.var("var_7125", dtype = "bool", shape = (420,))#candidate|7125|(420,)|var|bool
call_7122 = relay.TupleGetItem(func_2889_call(relay.reshape(var_7123.astype('uint16'), []), relay.reshape(const_7124.astype('uint16'), [15, 3, 5]), relay.reshape(var_7125.astype('bool'), [420,]), ), 1)
call_7126 = relay.TupleGetItem(func_2893_call(relay.reshape(var_7123.astype('uint16'), []), relay.reshape(const_7124.astype('uint16'), [15, 3, 5]), relay.reshape(var_7125.astype('bool'), [420,]), ), 1)
output = relay.Tuple([uop_7107,call_7112,var_7113,var_7114,var_7115,var_7116,call_7122,var_7123,const_7124,var_7125,])
output2 = relay.Tuple([uop_7107,call_7117,var_7113,var_7114,var_7115,var_7116,call_7126,var_7123,const_7124,var_7125,])
func_7139 = relay.Function([var_7113,var_7114,var_7115,var_7116,var_7123,var_7125,], output)
mod['func_7139'] = func_7139
mod = relay.transform.InferType()(mod)
var_7140 = relay.var("var_7140", dtype = "uint64", shape = (15, 3))#candidate|7140|(15, 3)|var|uint64
var_7141 = relay.var("var_7141", dtype = "uint64", shape = (360,))#candidate|7141|(360,)|var|uint64
var_7142 = relay.var("var_7142", dtype = "float32", shape = (240,))#candidate|7142|(240,)|var|float32
var_7143 = relay.var("var_7143", dtype = "float64", shape = (396,))#candidate|7143|(396,)|var|float64
var_7144 = relay.var("var_7144", dtype = "uint16", shape = ())#candidate|7144|()|var|uint16
var_7145 = relay.var("var_7145", dtype = "bool", shape = (420,))#candidate|7145|(420,)|var|bool
output = func_7139(var_7140,var_7141,var_7142,var_7143,var_7144,var_7145,)
func_7146 = relay.Function([var_7140,var_7141,var_7142,var_7143,var_7144,var_7145,], output)
mutated_mod['func_7146'] = func_7146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7599 = relay.var("var_7599", dtype = "bool", shape = ())#candidate|7599|()|var|bool
const_7600 = relay.const([[[False,False,False,True],[False,False,False,False],[False,False,False,False],[False,False,False,False],[True,False,True,True],[True,False,False,True]],[[False,False,False,True],[False,True,True,False],[True,True,True,False],[False,False,False,False],[False,False,False,True],[False,False,True,True]],[[True,True,True,False],[True,True,False,True],[True,False,True,True],[False,False,False,True],[False,True,True,False],[True,False,False,False]],[[False,False,True,True],[True,False,False,False],[True,True,False,False],[False,False,False,False],[True,True,True,True],[True,True,False,True]],[[True,False,True,False],[False,True,False,False],[False,True,True,True],[False,False,True,True],[True,True,False,False],[False,False,False,True]],[[True,True,False,False],[True,False,False,False],[False,True,False,False],[True,True,True,True],[False,False,False,False],[False,True,False,False]],[[False,False,False,False],[False,False,True,True],[True,True,True,False],[False,True,False,False],[True,True,True,False],[False,False,True,False]],[[False,True,True,True],[False,True,True,False],[True,True,True,True],[True,False,False,False],[False,True,True,False],[True,True,False,False]],[[False,True,False,False],[True,True,True,False],[False,False,True,False],[True,False,False,False],[True,True,True,False],[False,True,False,False]],[[False,True,False,True],[True,False,True,True],[False,True,False,True],[False,True,True,False],[True,False,False,False],[False,True,False,True]],[[False,True,True,False],[False,False,False,False],[True,False,False,False],[True,True,False,True],[True,False,False,True],[True,False,False,False]],[[False,False,False,True],[True,False,False,False],[True,False,False,True],[False,True,True,True],[True,True,False,False],[True,False,True,False]],[[False,False,True,True],[False,True,True,False],[False,True,True,True],[True,False,True,False],[False,False,True,False],[True,False,True,False]],[[False,True,True,True],[True,False,True,True],[False,False,False,False],[False,True,True,False],[False,False,True,True],[False,True,True,False]]], dtype = "bool")#candidate|7600|(14, 6, 4)|const|bool
bop_7601 = relay.logical_or(var_7599.astype('bool'), const_7600.astype('bool')) # shape=(14, 6, 4)
output = relay.Tuple([bop_7601,])
output2 = relay.Tuple([bop_7601,])
func_7610 = relay.Function([var_7599,], output)
mod['func_7610'] = func_7610
mod = relay.transform.InferType()(mod)
mutated_mod['func_7610'] = func_7610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7611 = relay.var("var_7611", dtype = "bool", shape = ())#candidate|7611|()|var|bool
func_7610_call = mutated_mod.get_global_var('func_7610')
call_7612 = func_7610_call(var_7611)
output = call_7612
func_7613 = relay.Function([var_7611], output)
mutated_mod['func_7613'] = func_7613
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7818 = relay.var("var_7818", dtype = "float64", shape = (16, 8, 1))#candidate|7818|(16, 8, 1)|var|float64
uop_7819 = relay.atan(var_7818.astype('float64')) # shape=(16, 8, 1)
func_5507_call = mod.get_global_var('func_5507')
func_5509_call = mutated_mod.get_global_var('func_5509')
var_7831 = relay.var("var_7831", dtype = "float64", shape = (396,))#candidate|7831|(396,)|var|float64
call_7830 = func_5507_call(relay.reshape(var_7831.astype('float64'), [9, 11, 4]))
call_7832 = func_5507_call(relay.reshape(var_7831.astype('float64'), [9, 11, 4]))
uop_7834 = relay.erf(var_7831.astype('float64')) # shape=(396,)
output = relay.Tuple([uop_7819,call_7830,uop_7834,])
output2 = relay.Tuple([uop_7819,call_7832,uop_7834,])
func_7842 = relay.Function([var_7818,var_7831,], output)
mod['func_7842'] = func_7842
mod = relay.transform.InferType()(mod)
mutated_mod['func_7842'] = func_7842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7842_call = mutated_mod.get_global_var('func_7842')
var_7844 = relay.var("var_7844", dtype = "float64", shape = (16, 8, 1))#candidate|7844|(16, 8, 1)|var|float64
var_7845 = relay.var("var_7845", dtype = "float64", shape = (396,))#candidate|7845|(396,)|var|float64
call_7843 = func_7842_call(var_7844,var_7845,)
output = call_7843
func_7846 = relay.Function([var_7844,var_7845,], output)
mutated_mod['func_7846'] = func_7846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8450 = relay.var("var_8450", dtype = "float64", shape = (5, 15, 1))#candidate|8450|(5, 15, 1)|var|float64
uop_8451 = relay.log(var_8450.astype('float64')) # shape=(5, 15, 1)
output = relay.Tuple([uop_8451,])
output2 = relay.Tuple([uop_8451,])
func_8453 = relay.Function([var_8450,], output)
mod['func_8453'] = func_8453
mod = relay.transform.InferType()(mod)
var_8454 = relay.var("var_8454", dtype = "float64", shape = (5, 15, 1))#candidate|8454|(5, 15, 1)|var|float64
output = func_8453(var_8454)
func_8455 = relay.Function([var_8454], output)
mutated_mod['func_8455'] = func_8455
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9080 = relay.const([[[2.963817,-2.343866,8.103256,6.469715],[9.003940,3.050425,-6.565964,2.453120],[4.729818,-6.046784,6.723309,2.108317],[-4.808751,5.538674,-0.081435,7.620671]],[[2.695071,9.240675,3.860921,-1.579146],[-5.337779,4.539113,-5.544732,-2.171618],[0.969284,-6.343661,9.852253,0.082203],[-2.350677,6.308110,7.244400,-5.330839]],[[-0.580609,6.320337,-1.560311,-0.694340],[6.084406,-6.588748,-8.068723,7.480061],[4.805370,-0.978610,6.241200,-7.993749],[-5.441883,-2.455621,-3.010782,0.108954]],[[1.439843,-9.252185,-3.577704,-1.976232],[-8.595848,9.831679,9.547288,4.079997],[4.392439,-6.246445,1.359611,-9.216770],[-9.207564,1.305164,2.802407,6.512003]],[[3.813513,-7.661025,-6.168452,3.754128],[9.767221,4.655294,-8.010140,-7.252999],[6.654204,-4.540781,9.250968,-0.313332],[-5.864253,7.236014,-4.532730,-4.491410]],[[-2.207804,-1.417821,0.896272,-5.899878],[-0.181168,-6.728796,-6.578125,-9.655718],[4.081990,-5.894302,7.946620,-8.193553],[-5.699680,5.534555,-0.198780,-7.913693]],[[3.102451,9.317965,-1.971594,4.676219],[5.579352,7.980288,-4.159102,0.791350],[2.986668,3.688046,6.015720,-6.739354],[3.918141,-2.307356,9.594970,-5.027719]],[[0.508128,8.446452,0.703998,2.501008],[-2.478743,-6.799565,-0.364845,-1.126851],[2.747524,7.250496,3.158124,-3.304224],[3.095747,-2.150167,3.296391,2.183263]],[[-1.966092,1.411795,-1.599092,4.608366],[9.618422,5.256777,7.460472,7.034228],[5.099635,6.373242,-2.449737,3.962256],[6.875939,-0.240622,6.741339,3.688824]],[[7.694375,7.109154,6.568951,-1.269404],[5.460833,7.419961,-3.654606,5.813375],[4.844001,-5.667730,7.601683,8.345051],[-1.744506,4.064164,-9.966143,0.560462]],[[7.740753,8.256238,3.509960,-8.269850],[4.978840,-6.946574,-8.285525,-6.800823],[-3.011533,-4.784166,-6.241157,-0.075668],[2.885728,-4.763215,3.395833,4.774873]],[[1.305636,0.404082,7.382909,3.033707],[8.089961,-0.551328,7.255213,7.771685],[8.957757,3.981022,-6.804589,-1.586778],[-8.908655,0.824984,3.614139,-3.197808]]], dtype = "float64")#candidate|9080|(12, 4, 4)|const|float64
var_9081 = relay.var("var_9081", dtype = "float64", shape = (12, 4, 4))#candidate|9081|(12, 4, 4)|var|float64
bop_9082 = relay.divide(const_9080.astype('float64'), relay.reshape(var_9081.astype('float64'), relay.shape_of(const_9080))) # shape=(12, 4, 4)
func_6837_call = mod.get_global_var('func_6837')
func_6841_call = mutated_mod.get_global_var('func_6841')
const_9087 = relay.const([[5,-3,3],[-8,2,-4],[-8,-3,4],[-2,-1,8],[10,4,-5],[-9,-10,-1],[-4,1,-4],[7,5,-6],[5,-10,9],[-2,-5,10],[-9,-4,-3],[3,4,5],[8,8,2],[-4,2,-3],[1,1,-4]], dtype = "uint64")#candidate|9087|(15, 3)|const|uint64
var_9088 = relay.var("var_9088", dtype = "uint64", shape = (360,))#candidate|9088|(360,)|var|uint64
const_9089 = relay.const([9.408641,-4.520882,6.576594,9.805118,-1.331284,-3.283080,9.033444,-0.445128,-3.127962,-7.532332,9.971552,7.673670,-2.957721,-9.978088,-8.135089,-8.527329,5.457868,0.292207,-7.220162,-8.201109,-4.836218,2.708293,-9.641121,-9.334619,8.754196,5.495275,3.055304,-4.360711,-3.108246,9.745436,5.153435,-6.983645,-8.349174,7.636133,-0.112369,1.093979,-0.105759,-8.116264,3.057312,4.685347,0.372547,8.009307,-3.542566,2.285887,-7.884548,3.289525,-2.187385,-8.703168,9.073749,7.736090,5.865035,-6.988263,9.132210,-9.205140,9.084441,-9.484521,-2.689115,4.028631,8.692431,6.550045,1.454757,2.484696,-3.063986,0.126481,3.336854,5.221552,7.439367,-7.762293,-5.211685,3.910141,6.878802,3.311077,4.763957,-9.732772,1.009292,-2.856057,-4.128175,-8.072108,-7.015198,-8.835801,-6.135616,-0.862386,1.246005,0.675092,-7.417831,5.950529,-2.218625,4.309464,2.845026,-0.956081,-0.046882,1.911690,4.893553,0.698426,6.304353,6.466418,-4.592900,-4.751348,2.390081,1.345448,-6.980090,2.725112,6.174281,6.124622,-4.926337,1.443484,-9.340528,4.685546,-8.061085,1.058030,-9.532373,-5.792441,5.071258,-1.831661,-9.922396,-0.690423,-6.613199,6.309017,-3.692437,-1.962222,-0.450547,5.114008,-2.600583,-8.846520,-4.404847,1.348831,2.987660,7.737391,-3.979883,5.664798,1.336828,6.445776,5.977266,-0.788937,5.703580,-6.432630,-5.655382,6.202769,-7.548767,-9.571277,5.056213,2.273712,9.152602,8.747232,-3.228789,-7.740958,-4.687761,5.515006,-1.588749,-6.618068,-8.546194,3.771668,-6.938523,4.416019,3.103031,4.093273,0.377614,0.474510,7.028667,-1.760676,5.548094,-2.741144,8.235760,9.244397,1.006154,9.649913,-2.192527,-1.995676,3.616293,1.916428,4.803218,-4.672349,4.253870,8.915140,-9.616565,-4.283988,-3.129081,-9.356653,-7.912899,1.831612,9.219288,3.925718,-2.070831,-6.050425,5.709707,-6.279345,1.261146,-9.722588,-6.673694,9.531088,5.796141,-2.631184,-9.131430,5.219666,-5.716341,-8.552380,-2.006506,3.619977,-6.031695,-6.725313,5.396895,-8.521882,2.780764,8.123979,8.861676,7.281751,-6.585943,-4.054519,-9.167903,4.903849,3.396096,-4.159268,4.327801,-7.047967,0.962465,1.463830,9.734845,2.256863,-7.701409,-5.981639,-5.025053,2.956358,5.786553,7.487348,3.295223,-1.216424,8.424337,-4.518805,-9.965922,-1.233562,-6.191466,-2.188932,2.526289,-4.660252,-9.489706,3.802607,-0.161603,3.227477,2.597134,0.478655,7.745746,4.628832,-8.334196,6.642965,-5.577362,4.136500,0.803887,-4.229405,3.294076,9.635077,2.336632,-3.042145,3.253009,7.532181,7.331898,1.715446,-8.944816,2.648079,3.266658,7.196590,-4.902975,-0.845366,-2.698066,-3.122792,5.844311,9.535613,3.796176,8.425630,7.618638,4.143123,5.469413,4.830128,5.387821,8.977171,7.329746,-5.683260,1.219276,2.161530,4.105829,6.112470,1.212136,7.575762,9.497296,5.664568,5.308098,9.896493,-3.821220,-3.445299,0.558521,-9.985713,-5.956770,-0.211244,7.054847,2.651052,1.294607,5.348617,4.841525,3.516422,4.162542,7.326045,9.484826,-1.700213,7.576465,5.254248,-6.156957,2.382169,-4.721940,-9.662645,3.190188,-5.601867,-5.236220,-4.307281,-6.969277,-7.293893,-6.533712,-2.401959,-2.540648,0.256228,6.243462,-5.584656,-0.341645,-6.744847,5.400319,-4.503797,-6.872327,-6.942871,1.757097,-2.267677,-5.476025,0.402833,-7.409326,7.189410,-3.357286,-0.349804,0.820085,5.589782,-5.420640,9.804770,-4.010593,3.604693,-7.291021,-1.787412,-9.109769,-9.970148,5.887505,3.484554,1.657646,0.878562,-6.552417,-5.508290,-8.415643,4.367163,3.113092,6.843329,3.300179,8.035768,-4.372416,7.265851,-3.873773,2.981418,7.577667,-1.219694,2.664017,4.136719,3.648209,-4.553593,3.471860,4.371171,-2.722244,4.674074,7.107397,3.971420,-7.559959,-3.202596,-5.183349,-0.950982,-4.932994,2.017585,-6.155297,4.154339,-3.627179,-9.936532,-3.556133,-3.389322,-2.952009,-8.741950,-4.247079,4.926956,-6.598461,-3.047572,9.384541,-5.474903,6.086856,-7.036461,-0.499985,8.256892], dtype = "float64")#candidate|9089|(396,)|const|float64
call_9086 = relay.TupleGetItem(func_6837_call(relay.reshape(const_9087.astype('uint64'), [45,]), relay.reshape(var_9088.astype('uint64'), [360,]), relay.reshape(const_9089.astype('float64'), [396, 1]), ), 1)
call_9090 = relay.TupleGetItem(func_6841_call(relay.reshape(const_9087.astype('uint64'), [45,]), relay.reshape(var_9088.astype('uint64'), [360,]), relay.reshape(const_9089.astype('float64'), [396, 1]), ), 1)
func_340_call = mod.get_global_var('func_340')
func_342_call = mutated_mod.get_global_var('func_342')
const_9097 = relay.const([[-9.541840],[6.613648],[-9.918567],[-8.456705],[5.953236],[-3.443017],[5.931911],[-3.705723],[2.336319],[-5.928186],[-5.490092],[-8.266028],[9.758101],[-1.824733],[-6.301303],[-8.581521],[-1.435306],[7.578801],[-9.081441],[9.467189],[5.318038],[7.177770],[-8.933182],[-5.113351],[8.757410],[1.627979],[-7.350382],[-1.488288],[-7.754043],[3.236769],[9.015456],[2.891149],[6.438257],[-9.192376],[-5.196356],[8.130448],[3.384049],[4.598787],[-4.035549],[4.753755],[-3.555913],[5.297250],[-9.766999],[0.804411],[7.753066],[-6.079577],[-7.408292],[-1.476059],[-2.029559],[-0.752600],[-6.079412],[-7.150257],[-4.800647],[7.450094],[-5.100873],[4.938844],[-0.417195],[5.339598],[-9.426946],[5.103868],[4.253852],[-9.125757],[3.997694],[4.478450],[-1.754875],[2.029197],[-4.901711],[-3.261641],[1.067364],[5.434732],[3.409170],[-0.234312]], dtype = "float64")#candidate|9097|(72, 1)|const|float64
call_9096 = func_340_call(relay.reshape(const_9097.astype('float64'), [6, 1, 12]))
call_9098 = func_340_call(relay.reshape(const_9097.astype('float64'), [6, 1, 12]))
uop_9100 = relay.sqrt(bop_9082.astype('float64')) # shape=(12, 4, 4)
func_5170_call = mod.get_global_var('func_5170')
func_5173_call = mutated_mod.get_global_var('func_5173')
const_9104 = relay.const([-2.588438,-4.831484,-9.504617,-6.494094,2.536623,6.347944,-7.920281,3.674320,7.038513,-7.399375,-5.539043,6.288958,5.602581,4.300556,4.130866,-5.297532,1.417771,0.313165,-7.398996,0.207427,5.519215,-5.702114,5.228497,5.756220,4.406312,-8.234541,-4.536507,-2.305625,4.984992,-1.837316,-1.265433,-6.311070,2.270278,1.975308,-4.558251,6.231628,5.093769,7.136866,-9.363470,-6.675215,-7.800844,9.846057,-6.189189,5.998090,-3.050115,-8.596463,-2.142670,-0.432638,0.788760,-0.631519,-9.656087,0.361050,8.721235,-1.043346,9.726884,7.976488,4.935014,-2.730953,-6.016671,3.945783,-2.676537,9.152630,6.622826,-0.029510,1.494422,-5.059951,6.990361,-2.074251,-3.733496,-5.909212,4.161437,-1.299488,-4.596273,-5.112699,-7.576692,7.888569,3.526439,9.418069,3.697135,9.694578,-8.659554,-1.638509,2.731470,-8.390488,-4.789229,-9.066968,0.194448,-7.506440,9.495806,-8.482199,0.308639,-5.339241,9.487761,0.447082,-4.779453,9.491850,-8.820418,-8.296656,-3.586638,9.478904,3.598411,-6.705731,-8.618453,-7.373979,3.210210,2.387862,1.322711,-2.705354,-3.072415,0.443792,-6.179783,6.522411,-1.282778,3.249566,7.066798,3.572015,-3.506021,0.889721,4.626806,-8.568498,-3.310788,1.120021,-0.538767,-6.843212,1.122271,2.495710,3.666396,-0.925222,-9.763859,-3.173516,-4.682900,-8.656328,-4.416946,-5.905745,5.724340,-3.777456,-3.802202,6.354530,0.822364,9.712841,2.731687,6.970678,-6.070721,8.160047,4.458463,-8.610247,9.977941,-8.723060,-6.189610,0.984448,5.511283,4.174731,9.034656,-5.315188,1.616902,9.560052,-8.854557,0.742191,-1.423630,6.703787,-3.867465,-7.731785,-0.331270,4.238086,9.114346,5.703724,6.719708,-6.085954,7.994845,9.209298,5.433090,-9.065311,3.301321,-1.956468,-6.115603,2.303406,8.271057,-5.640538,-1.520764,-1.099940,3.120388,8.906808,-2.942826,4.224291,-8.665133,-2.949164,-1.130340,-9.413061,-7.462183], dtype = "float32")#candidate|9104|(189,)|const|float32
const_9105 = relay.const([-10,-8,-10,-10,6,4,9,-10,-5,-3,6,-7,3,-5,-4,5,-5,3,-7,6,2,5,1,10,-8,10,-1,4,2,-4,-8,-10,-2,-8,4,4,3,1,-5,-7,-4,-8,4,10,3,-2,-4,6,3,-7,-10,-7,2,-7,9,-9,-1,-7,-1,2,-2,7,-5,2,-8,9,1,1,3,10,1,4,-10,-8,-9,-5,3,9,-6,9,1,4,-3,-5,2,-8,-9,-7,-5,-10,-5,7,8,7,-6,-9,-4,9,7,-4,3,4,-4,1,-5,-6,-7,-10,9,-10,-6,10,-10,-9,-4,6,5,-9,8,-10,2,-5,9,3,-5,-10,10,2,2,-8,4,-4,-1,-10,5,-6,-6,-6,-8,-2,2,5,6,3,-9,-2,5,2,1,9,-3,-2,5,5,-7,-8,9,-2,-1,2,-7,10,10,-10,-5,-6,-1,7,-6,-1,9,5,-1,4,-3,-1,-1,-4,5,4,10,-8,8,-9,10,-9,-9,1,-1,-3,1,7,-7,5,-3,-1,6,-8,-9,-1,8,1,6,1,-7,4,-10,-2,-1,8,3,-9,-1,5,5,-10,-8,2,3,1,-8,7,-5,-5,-5,2,-2,-9,9,4,10,7,-5,9,-2,7,7,-8,-5,3,-5,8,-6,-2,-10,9,10,-5,-4,-2,-9,6,5,2,-6,9,-8,1,-3,10,-9,3,-6,-6,-7,9,-9,1,1,-1,-8,10,-7,-1,6,-6,-10,-6,-1,9,3,1,-4,-6,-8,4,9,-2], dtype = "uint32")#candidate|9105|(288,)|const|uint32
call_9103 = relay.TupleGetItem(func_5170_call(relay.reshape(const_9104.astype('float32'), [7, 3, 9]), relay.reshape(const_9105.astype('uint32'), [288,]), ), 1)
call_9106 = relay.TupleGetItem(func_5173_call(relay.reshape(const_9104.astype('float32'), [7, 3, 9]), relay.reshape(const_9105.astype('uint32'), [288,]), ), 1)
func_2236_call = mod.get_global_var('func_2236')
func_2240_call = mutated_mod.get_global_var('func_2240')
call_9107 = relay.TupleGetItem(func_2236_call(relay.reshape(const_9105.astype('uint32'), [9, 4, 8]), relay.reshape(call_9103.astype('float32'), [240,]), ), 6)
call_9108 = relay.TupleGetItem(func_2240_call(relay.reshape(const_9105.astype('uint32'), [9, 4, 8]), relay.reshape(call_9103.astype('float32'), [240,]), ), 6)
func_4735_call = mod.get_global_var('func_4735')
func_4741_call = mutated_mod.get_global_var('func_4741')
var_9113 = relay.var("var_9113", dtype = "int8", shape = (2080,))#candidate|9113|(2080,)|var|int8
var_9114 = relay.var("var_9114", dtype = "float64", shape = (750,))#candidate|9114|(750,)|var|float64
call_9112 = relay.TupleGetItem(func_4735_call(relay.reshape(var_9113.astype('int8'), [13, 10, 16]), relay.reshape(var_9113.astype('int8'), [13, 10, 16]), relay.reshape(var_9114.astype('float64'), [750,]), relay.reshape(const_9097.astype('float64'), [72,]), ), 3)
call_9115 = relay.TupleGetItem(func_4741_call(relay.reshape(var_9113.astype('int8'), [13, 10, 16]), relay.reshape(var_9113.astype('int8'), [13, 10, 16]), relay.reshape(var_9114.astype('float64'), [750,]), relay.reshape(const_9097.astype('float64'), [72,]), ), 3)
output = relay.Tuple([call_9086,const_9087,var_9088,const_9089,call_9096,const_9097,uop_9100,call_9103,const_9104,const_9105,call_9107,call_9112,var_9113,var_9114,])
output2 = relay.Tuple([call_9090,const_9087,var_9088,const_9089,call_9098,const_9097,uop_9100,call_9106,const_9104,const_9105,call_9108,call_9115,var_9113,var_9114,])
func_9117 = relay.Function([var_9081,var_9088,var_9113,var_9114,], output)
mod['func_9117'] = func_9117
mod = relay.transform.InferType()(mod)
mutated_mod['func_9117'] = func_9117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9117_call = mutated_mod.get_global_var('func_9117')
var_9119 = relay.var("var_9119", dtype = "float64", shape = (12, 4, 4))#candidate|9119|(12, 4, 4)|var|float64
var_9120 = relay.var("var_9120", dtype = "uint64", shape = (360,))#candidate|9120|(360,)|var|uint64
var_9121 = relay.var("var_9121", dtype = "int8", shape = (2080,))#candidate|9121|(2080,)|var|int8
var_9122 = relay.var("var_9122", dtype = "float64", shape = (750,))#candidate|9122|(750,)|var|float64
call_9118 = func_9117_call(var_9119,var_9120,var_9121,var_9122,)
output = call_9118
func_9123 = relay.Function([var_9119,var_9120,var_9121,var_9122,], output)
mutated_mod['func_9123'] = func_9123
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9211 = relay.var("var_9211", dtype = "int8", shape = (12, 4, 8))#candidate|9211|(12, 4, 8)|var|int8
var_9212 = relay.var("var_9212", dtype = "int8", shape = (12, 4, 8))#candidate|9212|(12, 4, 8)|var|int8
bop_9213 = relay.subtract(var_9211.astype('int8'), relay.reshape(var_9212.astype('int8'), relay.shape_of(var_9211))) # shape=(12, 4, 8)
uop_9221 = relay.exp(var_9211.astype('float32')) # shape=(12, 4, 8)
output = relay.Tuple([bop_9213,uop_9221,])
output2 = relay.Tuple([bop_9213,uop_9221,])
func_9232 = relay.Function([var_9211,var_9212,], output)
mod['func_9232'] = func_9232
mod = relay.transform.InferType()(mod)
var_9233 = relay.var("var_9233", dtype = "int8", shape = (12, 4, 8))#candidate|9233|(12, 4, 8)|var|int8
var_9234 = relay.var("var_9234", dtype = "int8", shape = (12, 4, 8))#candidate|9234|(12, 4, 8)|var|int8
output = func_9232(var_9233,var_9234,)
func_9235 = relay.Function([var_9233,var_9234,], output)
mutated_mod['func_9235'] = func_9235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9416 = relay.var("var_9416", dtype = "float64", shape = (9, 6, 11))#candidate|9416|(9, 6, 11)|var|float64
uop_9417 = relay.log(var_9416.astype('float64')) # shape=(9, 6, 11)
output = uop_9417
output2 = uop_9417
func_9432 = relay.Function([var_9416,], output)
mod['func_9432'] = func_9432
mod = relay.transform.InferType()(mod)
mutated_mod['func_9432'] = func_9432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9433 = relay.var("var_9433", dtype = "float64", shape = (9, 6, 11))#candidate|9433|(9, 6, 11)|var|float64
func_9432_call = mutated_mod.get_global_var('func_9432')
call_9434 = func_9432_call(var_9433)
output = call_9434
func_9435 = relay.Function([var_9433], output)
mutated_mod['func_9435'] = func_9435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9451 = relay.var("var_9451", dtype = "uint8", shape = (4, 7, 7))#candidate|9451|(4, 7, 7)|var|uint8
var_9452 = relay.var("var_9452", dtype = "uint8", shape = (4, 7, 7))#candidate|9452|(4, 7, 7)|var|uint8
bop_9453 = relay.bitwise_xor(var_9451.astype('uint8'), relay.reshape(var_9452.astype('uint8'), relay.shape_of(var_9451))) # shape=(4, 7, 7)
uop_9460 = relay.sinh(var_9452.astype('float64')) # shape=(4, 7, 7)
output = relay.Tuple([bop_9453,uop_9460,])
output2 = relay.Tuple([bop_9453,uop_9460,])
func_9465 = relay.Function([var_9451,var_9452,], output)
mod['func_9465'] = func_9465
mod = relay.transform.InferType()(mod)
var_9466 = relay.var("var_9466", dtype = "uint8", shape = (4, 7, 7))#candidate|9466|(4, 7, 7)|var|uint8
var_9467 = relay.var("var_9467", dtype = "uint8", shape = (4, 7, 7))#candidate|9467|(4, 7, 7)|var|uint8
output = func_9465(var_9466,var_9467,)
func_9468 = relay.Function([var_9466,var_9467,], output)
mutated_mod['func_9468'] = func_9468
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9648 = relay.var("var_9648", dtype = "float32", shape = (16, 5, 2))#candidate|9648|(16, 5, 2)|var|float32
const_9649 = relay.const([[[7.326167,3.957584],[-8.804588,-2.252642],[-4.697370,-0.184216],[-7.015722,-9.270458],[-4.906043,-5.739321]],[[5.194540,-6.755458],[7.874163,4.448163],[-4.335181,-5.442802],[5.882900,-7.506234],[5.745403,6.503575]],[[-3.494259,1.046598],[-4.582060,5.386751],[-9.686814,9.164264],[-7.948294,-0.468872],[7.969657,-2.615543]],[[-8.957884,7.805175],[-4.304637,7.326547],[-7.580718,-0.246131],[0.177922,9.799604],[9.873328,-7.996264]],[[4.345346,-7.153688],[5.208001,6.975834],[-8.433702,-6.794952],[-1.900193,-2.187222],[0.572813,-5.995651]],[[2.847103,5.902974],[-3.620009,-8.315321],[1.258464,9.825482],[7.275826,8.642575],[-2.927452,4.875807]],[[-0.273893,7.404017],[4.011714,7.636759],[-3.935824,6.282653],[-2.265776,-3.422545],[8.975334,1.927340]],[[3.930707,0.250229],[-6.090039,-4.612723],[9.655652,2.071998],[9.317826,-2.010705],[-2.196680,-6.324778]],[[7.549335,-0.885414],[-5.247252,-0.495802],[-1.671099,-7.644570],[-7.514913,-8.748013],[-4.041097,3.973138]],[[-6.506933,0.645486],[-6.991664,-5.040557],[-6.265392,6.602644],[-6.203290,6.284097],[-0.882907,4.519585]],[[6.667551,-2.571247],[0.370638,-4.165717],[6.061091,-4.630042],[-1.064714,-6.985495],[4.930499,-7.015323]],[[0.598696,-3.495004],[1.223176,-8.254980],[8.799406,-9.282692],[8.157174,9.087990],[3.704836,9.755738]],[[3.494000,-7.851518],[0.474447,-2.095298],[-6.478837,-9.947010],[-5.853045,4.004181],[3.844365,1.934281]],[[2.979203,6.189644],[9.558501,-8.081609],[9.024202,8.520735],[6.094868,-8.540255],[-8.564695,0.135297]],[[9.762302,-2.800184],[-4.375543,-4.476905],[9.406683,8.743827],[8.322386,-8.630682],[3.704824,-3.271482]],[[-8.969551,5.141385],[1.018146,-2.174407],[7.648972,-6.096022],[-9.395747,-0.194719],[0.832504,-4.837702]]], dtype = "float32")#candidate|9649|(16, 5, 2)|const|float32
bop_9650 = relay.multiply(var_9648.astype('float32'), relay.reshape(const_9649.astype('float32'), relay.shape_of(var_9648))) # shape=(16, 5, 2)
func_9232_call = mod.get_global_var('func_9232')
func_9235_call = mutated_mod.get_global_var('func_9235')
var_9654 = relay.var("var_9654", dtype = "int8", shape = (48, 8))#candidate|9654|(48, 8)|var|int8
call_9653 = relay.TupleGetItem(func_9232_call(relay.reshape(var_9654.astype('int8'), [12, 4, 8]), relay.reshape(var_9654.astype('int8'), [12, 4, 8]), ), 0)
call_9655 = relay.TupleGetItem(func_9235_call(relay.reshape(var_9654.astype('int8'), [12, 4, 8]), relay.reshape(var_9654.astype('int8'), [12, 4, 8]), ), 0)
uop_9661 = relay.sinh(const_9649.astype('float32')) # shape=(16, 5, 2)
func_6708_call = mod.get_global_var('func_6708')
func_6711_call = mutated_mod.get_global_var('func_6711')
var_9665 = relay.var("var_9665", dtype = "float64", shape = (45, 2))#candidate|9665|(45, 2)|var|float64
call_9664 = relay.TupleGetItem(func_6708_call(relay.reshape(var_9665.astype('float64'), [2, 15, 3])), 0)
call_9666 = relay.TupleGetItem(func_6711_call(relay.reshape(var_9665.astype('float64'), [2, 15, 3])), 0)
output = relay.Tuple([bop_9650,call_9653,var_9654,uop_9661,call_9664,var_9665,])
output2 = relay.Tuple([bop_9650,call_9655,var_9654,uop_9661,call_9666,var_9665,])
func_9667 = relay.Function([var_9648,var_9654,var_9665,], output)
mod['func_9667'] = func_9667
mod = relay.transform.InferType()(mod)
mutated_mod['func_9667'] = func_9667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9667_call = mutated_mod.get_global_var('func_9667')
var_9669 = relay.var("var_9669", dtype = "float32", shape = (16, 5, 2))#candidate|9669|(16, 5, 2)|var|float32
var_9670 = relay.var("var_9670", dtype = "int8", shape = (48, 8))#candidate|9670|(48, 8)|var|int8
var_9671 = relay.var("var_9671", dtype = "float64", shape = (45, 2))#candidate|9671|(45, 2)|var|float64
call_9668 = func_9667_call(var_9669,var_9670,var_9671,)
output = call_9668
func_9672 = relay.Function([var_9669,var_9670,var_9671,], output)
mutated_mod['func_9672'] = func_9672
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9677 = relay.var("var_9677", dtype = "int64", shape = (10, 13, 16))#candidate|9677|(10, 13, 16)|var|int64
var_9678 = relay.var("var_9678", dtype = "int64", shape = (10, 13, 16))#candidate|9678|(10, 13, 16)|var|int64
bop_9679 = relay.greater_equal(var_9677.astype('bool'), relay.reshape(var_9678.astype('bool'), relay.shape_of(var_9677))) # shape=(10, 13, 16)
output = bop_9679
output2 = bop_9679
func_9689 = relay.Function([var_9677,var_9678,], output)
mod['func_9689'] = func_9689
mod = relay.transform.InferType()(mod)
var_9690 = relay.var("var_9690", dtype = "int64", shape = (10, 13, 16))#candidate|9690|(10, 13, 16)|var|int64
var_9691 = relay.var("var_9691", dtype = "int64", shape = (10, 13, 16))#candidate|9691|(10, 13, 16)|var|int64
output = func_9689(var_9690,var_9691,)
func_9692 = relay.Function([var_9690,var_9691,], output)
mutated_mod['func_9692'] = func_9692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9762 = relay.var("var_9762", dtype = "float32", shape = (2, 13, 2))#candidate|9762|(2, 13, 2)|var|float32
uop_9763 = relay.asin(var_9762.astype('float32')) # shape=(2, 13, 2)
output = uop_9763
output2 = uop_9763
func_9772 = relay.Function([var_9762,], output)
mod['func_9772'] = func_9772
mod = relay.transform.InferType()(mod)
mutated_mod['func_9772'] = func_9772
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9773 = relay.var("var_9773", dtype = "float32", shape = (2, 13, 2))#candidate|9773|(2, 13, 2)|var|float32
func_9772_call = mutated_mod.get_global_var('func_9772')
call_9774 = func_9772_call(var_9773)
output = call_9774
func_9775 = relay.Function([var_9773], output)
mutated_mod['func_9775'] = func_9775
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10567 = relay.var("var_10567", dtype = "float32", shape = (7, 13, 5))#candidate|10567|(7, 13, 5)|var|float32
var_10568 = relay.var("var_10568", dtype = "float32", shape = (7, 13, 5))#candidate|10568|(7, 13, 5)|var|float32
bop_10569 = relay.floor_divide(var_10567.astype('float32'), relay.reshape(var_10568.astype('float32'), relay.shape_of(var_10567))) # shape=(7, 13, 5)
output = bop_10569
output2 = bop_10569
func_10615 = relay.Function([var_10567,var_10568,], output)
mod['func_10615'] = func_10615
mod = relay.transform.InferType()(mod)
mutated_mod['func_10615'] = func_10615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10615_call = mutated_mod.get_global_var('func_10615')
var_10617 = relay.var("var_10617", dtype = "float32", shape = (7, 13, 5))#candidate|10617|(7, 13, 5)|var|float32
var_10618 = relay.var("var_10618", dtype = "float32", shape = (7, 13, 5))#candidate|10618|(7, 13, 5)|var|float32
call_10616 = func_10615_call(var_10617,var_10618,)
output = call_10616
func_10619 = relay.Function([var_10617,var_10618,], output)
mutated_mod['func_10619'] = func_10619
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10842 = relay.const([[[-1.891601,2.349304,-0.648351,-3.976825,-4.698682,5.887125,-2.295265,-9.428574,7.919059,8.938266,2.290079],[-3.454745,-0.632250,0.648724,-5.293803,1.957022,-9.262703,0.185639,-0.172730,1.761565,4.561474,-2.044724],[-7.733305,8.061200,6.941970,-9.895720,5.461443,5.551611,2.442696,3.002767,8.305934,5.022916,9.159116],[-6.108426,-9.187070,-2.205867,-5.919040,-0.039865,-1.137973,4.490776,-4.365864,-7.075783,-8.163466,0.861563]],[[-6.082578,-5.446077,4.209472,3.007078,-7.296484,-1.508772,1.557551,-0.172271,-6.298216,-8.909352,1.007019],[-1.112765,0.219747,6.097223,-0.461261,-2.836639,7.409048,-0.647797,-7.762635,0.015368,-2.821621,0.198345],[-4.111118,9.670986,-0.851514,5.761167,0.438626,-3.301888,1.121433,7.542814,-2.532926,-5.755031,-7.129682],[7.398616,4.107806,8.638032,-4.951412,7.493431,1.108986,6.214786,2.692205,1.006962,-4.993002,6.487686]],[[6.970628,7.866580,-0.300891,8.125704,8.158805,3.235487,7.086142,-1.542902,-4.671447,-1.164562,-6.628522],[1.595991,5.093045,8.678785,-5.018878,3.291793,9.215962,-9.853536,-2.354157,-9.566176,-2.068688,-3.521678],[-7.203428,2.766694,7.121031,-0.997943,-0.429486,1.327941,-2.084201,5.448298,1.723755,-1.092412,-1.502081],[8.981050,-4.041304,-6.756390,5.626441,-4.665140,1.239931,-7.776949,-8.883870,-8.920549,6.555409,-8.072228]],[[-7.762638,-2.002451,-6.406040,-3.017691,5.985359,5.260124,7.118133,-8.741965,0.646287,7.136053,8.609690],[7.543435,-7.816493,-3.126459,8.905070,-5.099754,-6.374372,6.936320,0.119783,2.661717,1.477001,2.186210],[-3.641555,-8.571628,-3.280303,-5.739695,9.227990,1.761675,-8.202190,5.899760,-5.037532,1.534516,5.294935],[0.976552,8.868109,6.081528,-0.452712,8.501551,8.050285,-4.206944,3.879676,2.340926,-8.935044,2.630742]],[[-5.476069,-3.568651,-6.849383,9.661644,-2.741389,-1.766735,-2.278349,5.685158,-6.116893,4.669288,-3.395561],[-5.430456,3.674675,-6.934199,-3.466997,-7.915539,5.944877,-4.562573,-0.893839,0.963826,-7.465793,-5.933691],[3.123470,5.574509,8.916525,8.882125,-2.964590,9.502960,8.437204,2.888269,0.777500,-1.213610,-1.005675],[-9.730562,1.030133,-3.413323,-3.140206,-8.159270,-1.488089,8.600035,-6.139751,0.929706,-0.723825,-6.239818]],[[-4.544876,-4.800722,9.706491,-3.509730,1.431413,8.232575,-4.036791,-0.162446,-8.249411,3.115575,7.975361],[-6.318060,1.723429,-5.813153,3.811389,-4.338700,4.223282,8.071823,6.498262,-5.196587,4.946514,3.898987],[5.700324,-6.781487,-5.087168,-5.103708,-3.629523,-1.280317,-3.135144,-0.071615,5.361298,-4.476298,3.215476],[-8.715789,3.748843,0.874463,-1.818465,2.245379,-0.588817,6.330709,5.260184,-2.442186,9.134228,1.395106]],[[-5.525202,8.959513,-3.777462,-4.646052,7.144796,3.424941,2.392569,1.668024,5.337482,-9.007917,-1.634450],[9.011662,7.054557,-4.090717,-3.117058,6.330969,9.828857,-7.532909,-0.989812,6.958212,1.366193,-8.459047],[8.885375,-4.640375,-8.383620,-1.177637,3.756345,-2.840937,-5.475845,6.117171,9.881412,2.732989,4.613750],[-3.109617,-2.864436,9.604585,-9.847807,-2.276690,-1.031941,8.511456,1.956384,5.131017,1.102904,-3.222535]]], dtype = "float64")#candidate|10842|(7, 4, 11)|const|float64
uop_10843 = relay.sqrt(const_10842.astype('float64')) # shape=(7, 4, 11)
output = relay.Tuple([uop_10843,])
output2 = relay.Tuple([uop_10843,])
func_10857 = relay.Function([], output)
mod['func_10857'] = func_10857
mod = relay.transform.InferType()(mod)
mutated_mod['func_10857'] = func_10857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10857_call = mutated_mod.get_global_var('func_10857')
call_10858 = func_10857_call()
output = call_10858
func_10859 = relay.Function([], output)
mutated_mod['func_10859'] = func_10859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10857_call = mod.get_global_var('func_10857')
func_10859_call = mutated_mod.get_global_var('func_10859')
call_10870 = relay.TupleGetItem(func_10857_call(), 0)
call_10871 = relay.TupleGetItem(func_10859_call(), 0)
func_4049_call = mod.get_global_var('func_4049')
func_4052_call = mutated_mod.get_global_var('func_4052')
var_10876 = relay.var("var_10876", dtype = "bool", shape = ())#candidate|10876|()|var|bool
call_10875 = relay.TupleGetItem(func_4049_call(relay.reshape(var_10876.astype('bool'), [])), 1)
call_10877 = relay.TupleGetItem(func_4052_call(relay.reshape(var_10876.astype('bool'), [])), 1)
output = relay.Tuple([call_10870,call_10875,var_10876,])
output2 = relay.Tuple([call_10871,call_10877,var_10876,])
func_10886 = relay.Function([var_10876,], output)
mod['func_10886'] = func_10886
mod = relay.transform.InferType()(mod)
var_10887 = relay.var("var_10887", dtype = "bool", shape = ())#candidate|10887|()|var|bool
output = func_10886(var_10887)
func_10888 = relay.Function([var_10887], output)
mutated_mod['func_10888'] = func_10888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10857_call = mod.get_global_var('func_10857')
func_10859_call = mutated_mod.get_global_var('func_10859')
call_10952 = relay.TupleGetItem(func_10857_call(), 0)
call_10953 = relay.TupleGetItem(func_10859_call(), 0)
func_4735_call = mod.get_global_var('func_4735')
func_4741_call = mutated_mod.get_global_var('func_4741')
const_10963 = relay.const([-10,4,8,3,3,-5,7,1,10,-7,4,10,-9,-3,1,-8,10,6,-7,5,-6,10,-8,1,8,2,5,-7,10,-3,-4,1,-4,2,-7,9,5,7,2,-5,9,-10,1,1,9,-4,4,7,-2,7,-5,-5,8,6,-1,10,-10,4,-10,-3,-8,2,-10,-2,-7,4,-7,-4,10,-7,-3,-2,-9,-2,-3,8,2,5,-8,-8,6,-8,-10,10,-4,-4,-5,-2,3,3,-1,-7,-10,6,-9,-4,-6,-2,7,-10,-8,-2,1,7,-9,9,-1,2,-1,7,5,-9,-6,-1,2,5,-6,-4,10,10,-2,-9,7,2,2,-10,-3,-9,-9,-3,2,2,7,-4,7,-6,4,2,9,-1,-5,1,1,8,-2,2,1,3,-10,-4,-4,-8,8,-2,-5,-9,6,-10,-9,9,-1,7,-3,-9,9,1,-2,2,8,8,-6,4,6,-1,4,8,10,-9,-8,-7,-10,10,7,3,-5,9,-7,-5,8,-9,5,10,-5,-8,7,-9,4,-10,-1,-6,-5,8,-7,4,9,8,1,9,8,8,-5,-4,-6,9,1,-2,10,6,-2,-3,-4,-7,2,10,5,9,4,-6,10,-6,1,-7,7,-10,-4,2,-7,-4,4,1,3,-9,5,-5,-3,6,-10,-6,-6,6,1,-9,-6,9,8,-1,-2,-6,-6,-2,4,4,2,-1,-6,10,6,10,-4,-3,-9,-1,-7,-9,-2,3,-10,-9,4,-1,-10,2,2,-9,-10,-7,9,1,-9,-8,-1,6,-7,-4,-7,-3,-7,3,8,-6,-6,-7,-4,-10,9,1,-10,-3,-4,-8,-3,-9,10,2,4,4,10,5,-2,-5,5,-2,5,-2,4,1,4,10,2,2,7,-7,9,-10,-7,5,5,8,5,-10,-1,8,2,1,-9,1,-1,2,-8,-3,1,8,-5,5,-8,1,-7,7,7,1,-1,10,1,-3,8,6,4,-3,-2,-1,5,-2,-10,-10,-8,-1,-5,2,6,-5,-9,-4,-6,-6,-7,-3,-10,5,-5,-7,7,-4,2,10,-9,-2,7,5,-5,6,-7,-4,-3,7,3,-2,5,-5,-2,-4,-2,-1,-4,-4,7,-1,-8,-1,4,-10,-3,7,10,4,-7,-3,7,-9,2,2,-5,6,-7,-8,-5,8,-3,-6,7,3,8,-6,-1,8,8,5,-10,-9,-7,10,7,2,2,-1,9,6,1,4,5,-7,9,-8,-2,8,6,-1,-5,-1,10,8,9,9,-6,-3,-3,5,4,-3,-2,4,-10,-1,8,3,-5,7,5,-5,7,1,10,-3,9,1,-6,9,1,-10,1,7,4,-1,10,-1,6,8,-8,-2,-7,-10,9,-9,-9,-9,2,-10,10,5,-7,-8,8,1,-6,-5,-6,-6,-4,7,-3,6,4,2,-9,-5,-5,1,6,-1,5,-7,-9,-7,-9,-8,3,-10,2,-3,10,7,-9,-9,10,-1,-6,-7,-1,-9,1,5,-1,-2,-6,4,-3,3,9,10,2,4,8,-4,-6,-1,8,2,10,4,3,4,-9,9,-9,-7,10,10,5,-9,6,-9,-6,4,8,-4,6,-6,-4,-2,6,5,-3,4,-10,-8,-2,1,-7,-6,2,6,9,-2,-7,-10,-6,-10,2,6,6,-8,-10,-8,3,1,-5,5,7,1,-2,10,5,-6,2,1,-5,-8,-8,-1,2,10,7,3,5,-1,-2,6,8,6,-5,2,6,4,-8,-8,-6,-8,-6,-10,-5,-7,-1,8,-4,-3,-1,-8,5,-2,-6,5,-1,-5,-6,-7,6,-1,6,8,4,-8,6,-4,9,-8,-8,-6,-6,5,8,6,-5,-2,-6,2,4,7,-7,3,-6,-10,-1,-5,-7,-2,2,10,-5,-8,-3,-3,10,6,-2,3,9,-4,10,-9,8,4,7,7,8,-3,6,7,7,-5,-4,6,-4,4,-10,2,4,9,-2,3,4,1,3,7,-5,8,-1,-3,-7,-8,9,6,-8,3,1,-9,4,-6,2,-7,-6,-4,-1,3,-3,-6,2,4,-5,1,-4,3,-2,5,2,9,-10,8,-2,-1,3,7,-9,7,-9,2,-9,-3,5,3,3,7,6,7,8,3,5,-9,1,8,6,-7,-6,6,-10,9,2,7,3,4,-1,-3,6,-3,-9,1,3,-10,8,-10,-6,2,-7,6,4,-1,8,5,5,-5,1,8,3,2,-6,10,3,10,4,2,-7,-4,9,8,-9,8,8,3,6,5,-10,-3,-8,7,-8,-9,-3,9,4,8,2,-3,-4,4,-2,1,3,-8,-7,-4,-5,-2,-7,2,8,-7,6,3,-6,9,5,3,3,10,6,7,-6,-10,9,6,-4,8,-5,-9,7,3,7,1,-9,2,-4,7,-7,4,-10,3,-7,3,3,5,9,3,5,-4,6,8,-4,-1,3,-8,10,-9,4,7,6,-7,-1,9,-6,-8,10,4,2,-6,5,-2,-5,9,4,7,9,3,4,-6,6,5,-10,9,-8,-9,-8,7,-1,-3,4,5,3,5,-9,-2,-3,-10,-9,8,-3,-10,7,4,-6,3,8,5,-5,1,-9,10,1,8,-8,-7,3,-9,7,-8,-2,-4,10,-4,-10,-2,9,5,-3,-9,-9,-1,-6,-3,-6,7,-6,10,10,3,-10,-1,9,10,8,3,8,10,-4,8,-5,-8,5,7,4,5,6,-7,-1,7,8,5,-3,1,-7,7,-1,-3,5,-4,-9,-6,-7,2,-2,7,8,-8,-6,-10,6,-7,2,-7,-1,9,10,-6,10,6,6,4,3,7,-8,6,-2,-5,4,-5,-1,-6,-2,9,-8,-4,6,8,-9,-3,-2,3,4,10,9,5,-10,2,-1,3,-6,6,6,-5,1,-4,-9,-6,-4,-2,-2,3,-6,-5,6,10,5,-7,-10,-6,2,-1,-8,3,5,-4,-10,10,-4,7,-3,5,1,-8,6,-1,5,-9,-10,4,-8,2,-9,-6,-7,4,-7,7,3,-10,-3,-5,-2,-3,9,-8,8,-4,2,2,4,9,-5,1,4,-6,10,-7,-8,-7,-6,3,-4,-2,9,-6,-10,-4,3,-4,7,-6,-3,-1,1,-9,10,-2,-9,1,-10,10,-5,-6,10,-7,-4,-5,-4,-10,-4,-2,9,9,10,-7,-8,-2,-3,-1,-2,1,-9,-3,-3,-8,9,1,7,9,1,-10,3,4,-10,-9,3,-8,-6,-7,-1,-4,-8,10,7,3,-5,1,-4,-2,-9,-9,-10,-9,8,-5,-3,-9,6,-8,-1,2,-3,4,7,-4,-8,3,1,-6,9,6,-10,5,-8,-10,-4,-5,-7,-6,4,3,4,1,9,2,7,-10,-5,-5,-7,-2,-7,-8,7,-9,4,4,-1,3,2,-5,-3,8,-1,-3,-7,-9,-5,9,1,-2,3,2,10,-3,1,3,-5,6,-3,-4,7,5,2,-3,-3,7,10,9,7,6,1,3,-2,4,9,6,-3,7,6,-6,2,6,-5,6,8,-9,1,7,-3,9,-8,8,-7,-7,-3,-3,-8,-1,-5,-6,-6,1,9,1,8,-3,-6,-10,-6,-7,1,7,10,-6,-4,-5,7,10,-4,9,-2,10,5,-10,-8,1,-8,3,-6,-10,-9,-1,-2,4,1,-10,6,-8,10,2,-6,7,3,9,-9,10,-5,-6,-1,3,-6,4,2,2,1,-2,-1,10,-1,3,-9,7,5,10,-8,7,-7,5,-2,-5,-5,9,-8,-9,-9,8,-7,-5,10,8,10,1,6,-9,3,3,-1,-3,3,-7,-6,4,9,8,5,-9,-5,2,-4,-2,-7,6,-7,-8,-3,-5,-7,4,8,-7,-10,-8,5,-8,3,10,5,9,-7,4,-9,8,-8,1,-6,9,-5,3,-8,-10,9,10,-6,-5,5,2,6,1,-2,-4,-3,4,-1,-7,-6,-8,5,-8,-9,3,-10,-10,-4,-4,3,5,-10,-3,6,10,5,8,7,2,-8,-4,1,-9,-4,3,1,-5,-9,-2,8,-10,1,2,3,-6,8,-1,3,-6,-3,6,7,4,10,4,9,1,-1,10,7,-6,5,8,7,6,-10,-3,4,4,7,-1,1,8,5,7,3,10,1,7,9,8,-6,8,-2,3,2,8,8,-7,-6,-6,6,-9,4,-4,1,-4,-7,-8,-9,-8,7,-6,6,7,-10,10,-8,4,9,7,-2,-9,-5,9,6,-7,-5,-7,8,2,-6,3,-3,8,-5,-4,-5,-7,7,-4,-3,-7,4,9,9,-10,-4,-9,-10,-1,-1,3,5,6,-5,-7,9,-9,8,-5,-9,-2,-7,-10,-9,1,5,5,3,-3,2,-1,4,6,-7,-10,7,9,-4,-9,1,2,4,-9,-1,-7,2,5,-7,-9,3,3,9,4,-3,8,-4,4,-10,-5,5,3,10,-5,-1,3,2,-4,8,-6,-2,6,5,-6,-3,7,2,7,-9,1,7,-4,8,1,7,-6,4,-6,2,-5,2,-10,3,8,-10,-2,3,-7,3,8,7,-8,5,-3,4,9,1,10,-9,-6,9,9,1,4,3,-1,-5,-5,-2,7,-6,4,8,-1,-2,9,4,-3,3,8,-9,-10,1,5,4,9,-8,9,-7,-2,-9,2,8,-10,-5,7,-1,-8,-2,4,-3,-6,-8,-7,-7,-5,10,2,5,9,10,3,2,-2,2,-10,2,6,-3,6,1,-6,1,1,10,5,7,-3,-7,3,4,-6,1,6,-6,4,6,-10,-10,4,-2,-3,-8,8,-3,7,-8,4,7,-3,-4,8,-9,-10,1,2,-4,-10,3,-8,-3,-6,7,10,1,7,-10,-9,5,-1,-3,8,10,-10,10,-3,-4,-3,8,7,5,-9,8,8,-7,-10,4,2,9,-8,1,-1,-10,-5,8,-10,-5,9,-6,9,-6,8,8,-5,-1,6,-6,-4,-1,-7,-1,1,-7,-9,7,-10,6,6,-7,1,-6,9,-3,-8,-4,-5,-3,2,7,5,-1,1,-3,1,8,8,-10,5,10,2,-10,10,3,3,3,-6,-3,2,-3,-5,-9,-6,8,4,5,-3,-1,8,4,4,1,2,8,-9,-10,-4,5,-6,1,2,-6,-1,-7,2,4,9,-7,-9,-8,6,3,7,-9,-5,-4,6,-4,-8,-8,2,-6,7,-5,-8,7,3,7,-9,2,9,-3,-8,2,5,6,-3,-2,10,9,2,-4,-5,2,7,10,-2,1,-9,5,6,-3,8,9,3,-5,-3,10,10,-4,8,5,8,-1,8,10,9,-2,1,6,1,-10,10,4,4,9,3,-5,9,-7,3,-2,5,1,7,-1,-7,-5,-3,-9,9,2,-3,5,2,-10,1,7,-7,-1,6,-5,5,3,2,-8,1,3,8,7,-1,-4,10,10,2,2,-5,4,-10,9,-9,1,8,6,-5,5,10,8,-3,-7,-2,-6,7,-7,4,-9,5,-5,-5,7,3,-5,3,5,4,2,3,2,-7,9,7,6,-7,6,-1,-1,7,9,1,-4,8], dtype = "int8")#candidate|10963|(2080,)|const|int8
var_10964 = relay.var("var_10964", dtype = "float64", shape = (5, 150))#candidate|10964|(5, 150)|var|float64
var_10965 = relay.var("var_10965", dtype = "float64", shape = (6, 12))#candidate|10965|(6, 12)|var|float64
call_10962 = relay.TupleGetItem(func_4735_call(relay.reshape(const_10963.astype('int8'), [13, 10, 16]), relay.reshape(const_10963.astype('int8'), [13, 10, 16]), relay.reshape(var_10964.astype('float64'), [750,]), relay.reshape(var_10965.astype('float64'), [72,]), ), 3)
call_10966 = relay.TupleGetItem(func_4741_call(relay.reshape(const_10963.astype('int8'), [13, 10, 16]), relay.reshape(const_10963.astype('int8'), [13, 10, 16]), relay.reshape(var_10964.astype('float64'), [750,]), relay.reshape(var_10965.astype('float64'), [72,]), ), 3)
output = relay.Tuple([call_10952,call_10962,const_10963,var_10964,var_10965,])
output2 = relay.Tuple([call_10953,call_10966,const_10963,var_10964,var_10965,])
func_10974 = relay.Function([var_10964,var_10965,], output)
mod['func_10974'] = func_10974
mod = relay.transform.InferType()(mod)
mutated_mod['func_10974'] = func_10974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10974_call = mutated_mod.get_global_var('func_10974')
var_10976 = relay.var("var_10976", dtype = "float64", shape = (5, 150))#candidate|10976|(5, 150)|var|float64
var_10977 = relay.var("var_10977", dtype = "float64", shape = (6, 12))#candidate|10977|(6, 12)|var|float64
call_10975 = func_10974_call(var_10976,var_10977,)
output = call_10975
func_10978 = relay.Function([var_10976,var_10977,], output)
mutated_mod['func_10978'] = func_10978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10857_call = mod.get_global_var('func_10857')
func_10859_call = mutated_mod.get_global_var('func_10859')
call_11010 = relay.TupleGetItem(func_10857_call(), 0)
call_11011 = relay.TupleGetItem(func_10859_call(), 0)
output = call_11010
output2 = call_11011
func_11012 = relay.Function([], output)
mod['func_11012'] = func_11012
mod = relay.transform.InferType()(mod)
mutated_mod['func_11012'] = func_11012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11012_call = mutated_mod.get_global_var('func_11012')
call_11013 = func_11012_call()
output = call_11013
func_11014 = relay.Function([], output)
mutated_mod['func_11014'] = func_11014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11012_call = mod.get_global_var('func_11012')
func_11014_call = mutated_mod.get_global_var('func_11014')
call_11028 = func_11012_call()
call_11029 = func_11012_call()
func_4049_call = mod.get_global_var('func_4049')
func_4052_call = mutated_mod.get_global_var('func_4052')
var_11031 = relay.var("var_11031", dtype = "bool", shape = ())#candidate|11031|()|var|bool
call_11030 = relay.TupleGetItem(func_4049_call(relay.reshape(var_11031.astype('bool'), [])), 0)
call_11032 = relay.TupleGetItem(func_4052_call(relay.reshape(var_11031.astype('bool'), [])), 0)
func_7842_call = mod.get_global_var('func_7842')
func_7846_call = mutated_mod.get_global_var('func_7846')
var_11052 = relay.var("var_11052", dtype = "float64", shape = (128,))#candidate|11052|(128,)|var|float64
const_11053 = relay.const([5.058684,-8.917097,-6.814326,9.396317,-6.031282,-0.106950,0.269036,-5.552391,2.856659,-9.404906,-4.283088,6.343651,3.305705,-1.119208,4.262558,7.387552,-6.617869,-0.159119,-2.639854,-7.809124,-8.446508,1.497658,2.986320,5.792280,8.600602,-2.896081,3.646170,-8.525348,-5.818431,2.086161,6.643066,-7.937395,0.570475,-0.771528,-1.507352,-3.020050,1.716671,-8.351451,4.833044,9.195342,6.790185,6.388025,-7.770996,-7.873722,-7.240747,-7.574552,-7.838536,3.428017,-8.289996,9.014660,-2.591654,2.052080,2.429012,9.332844,8.964066,7.051008,-2.639946,-9.240043,-0.557824,6.949412,-3.613896,-1.235322,0.862890,-8.659093,0.821008,-2.464140,-9.142806,-2.750114,-5.137698,-0.922004,-4.603762,-2.519235,-2.370200,4.950414,7.078434,-4.689860,7.928037,2.335983,-1.945806,-1.472718,4.299718,-2.738074,-4.152297,-1.749664,-5.182620,6.459870,-7.751395,9.373508,-1.549393,-2.001117,8.262983,8.237641,5.474916,4.358315,5.004210,-6.374807,4.008592,-6.751851,4.551765,-1.486181,6.609058,-0.275947,7.416760,5.578893,3.926760,-0.641781,-3.689058,2.106061,-9.870783,4.868151,-5.995576,-5.767255,-8.997282,6.894166,9.593545,9.297963,7.699330,6.526544,9.910894,-7.198699,-5.390090,-1.944433,9.815115,-7.172296,-6.279234,8.383870,0.696877,-5.167143,-5.484054,9.905782,3.204657,-9.306808,1.961158,-4.682073,-1.704184,5.717626,4.226570,9.799441,8.959305,-1.095644,-1.669554,-1.046565,2.585634,2.266906,-8.496508,-3.611808,-6.619870,2.749457,-7.325080,-5.908535,-0.874354,5.869730,4.448312,-7.546391,-6.432043,2.341259,-5.425648,2.280946,-1.793533,8.918163,6.764811,4.385617,8.079640,2.737542,-1.615455,-8.836374,1.804738,-2.491864,4.055245,6.895555,1.088824,-7.747021,-8.600265,9.040343,-4.140973,-4.757457,-0.203228,7.510698,-6.954036,1.586966,2.602051,7.023859,9.705258,6.239999,7.903525,5.019653,7.864042,-4.531904,6.635333,6.320254,5.461974,7.320862,1.305702,9.661698,-0.240075,-7.201252,-7.113275,-2.897057,0.108395,-7.697414,5.092573,7.544598,5.259352,-0.301982,1.964270,9.136161,4.363570,2.455860,3.299114,-9.323818,3.455629,4.594195,8.487974,-7.313106,-3.754196,5.406202,-4.663078,-9.722715,-9.004228,-3.223937,-9.057652,-4.765525,-3.316046,-8.253965,-1.476959,5.152556,5.081776,-4.543652,2.595729,3.383760,7.416786,3.860669,2.502345,-5.002785,-5.021566,-5.052518,-1.225490,6.829384,-0.797577,-3.042067,-9.031931,-1.435905,4.950598,-2.995768,3.431481,-5.238297,-9.518542,-3.692382,8.568433,-2.535598,6.513583,3.150548,5.090049,2.264203,-0.622283,8.955457,6.416172,6.995712,-1.551232,7.407207,4.264110,-1.248483,4.442480,-4.705739,9.528058,6.840807,2.581302,-9.338434,3.370142,-7.217693,-1.984463,-3.511799,7.396048,-0.917136,-0.462806,-1.634157,7.170930,2.107984,4.989788,6.630739,-6.513338,-3.011142,0.764401,8.397571,-3.250791,2.435815,8.047088,-3.506996,2.436593,-2.023952,7.415926,3.668237,8.888696,6.332994,-0.060233,-4.812275,3.550852,-7.410932,1.468743,3.601555,6.714362,-2.025274,8.093011,-9.022307,6.343404,-1.062100,9.971541,9.765481,-6.178521,0.695601,-4.224407,-1.718859,-7.414982,-1.544681,-9.050275,3.390653,-4.081326,-4.745702,6.381896,-6.092035,5.679817,1.809945,8.704648,4.124626,1.802383,-4.633195,-3.848730,-5.208567,-6.551217,9.128498,-7.678534,-0.187865,-0.761674,-7.853429,2.532910,0.854081,5.638496,2.438465,9.038474,4.479768,-3.057127,-2.115321,-3.841588,7.325434,-0.768148,3.741773,-3.144260,7.467385,-7.930746,-0.737541,3.774932,-5.505745,-2.909540,1.336709,-8.405319,-7.503792,-9.797074,-4.127303,1.282859,9.101923,-0.513914,9.646899,8.596756,7.135282,-3.237943,0.932378,2.980079,9.353957,-8.698922,-2.292964,3.919928,1.015321,7.328069,-2.299220,3.283713,-5.204990,-2.279203,-4.894558,7.078443,2.537643,5.879821,4.478076,-8.399621,-3.271053,1.842188,7.801421,-3.073158,-5.820477,-5.972271,-3.989200,4.349837,5.101752,-7.342006,7.936045,-8.058545,-0.067364], dtype = "float64")#candidate|11053|(396,)|const|float64
call_11051 = relay.TupleGetItem(func_7842_call(relay.reshape(var_11052.astype('float64'), [16, 8, 1]), relay.reshape(const_11053.astype('float64'), [396,]), ), 0)
call_11054 = relay.TupleGetItem(func_7846_call(relay.reshape(var_11052.astype('float64'), [16, 8, 1]), relay.reshape(const_11053.astype('float64'), [396,]), ), 0)
output = relay.Tuple([call_11028,call_11030,var_11031,call_11051,var_11052,const_11053,])
output2 = relay.Tuple([call_11029,call_11032,var_11031,call_11054,var_11052,const_11053,])
func_11056 = relay.Function([var_11031,var_11052,], output)
mod['func_11056'] = func_11056
mod = relay.transform.InferType()(mod)
var_11057 = relay.var("var_11057", dtype = "bool", shape = ())#candidate|11057|()|var|bool
var_11058 = relay.var("var_11058", dtype = "float64", shape = (128,))#candidate|11058|(128,)|var|float64
output = func_11056(var_11057,var_11058,)
func_11059 = relay.Function([var_11057,var_11058,], output)
mutated_mod['func_11059'] = func_11059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11012_call = mod.get_global_var('func_11012')
func_11014_call = mutated_mod.get_global_var('func_11014')
call_11129 = func_11012_call()
call_11130 = func_11012_call()
output = relay.Tuple([call_11129,])
output2 = relay.Tuple([call_11130,])
func_11138 = relay.Function([], output)
mod['func_11138'] = func_11138
mod = relay.transform.InferType()(mod)
mutated_mod['func_11138'] = func_11138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11138_call = mutated_mod.get_global_var('func_11138')
call_11139 = func_11138_call()
output = call_11139
func_11140 = relay.Function([], output)
mutated_mod['func_11140'] = func_11140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11217 = relay.var("var_11217", dtype = "float64", shape = (7, 15, 12))#candidate|11217|(7, 15, 12)|var|float64
uop_11218 = relay.rsqrt(var_11217.astype('float64')) # shape=(7, 15, 12)
uop_11220 = relay.atan(var_11217.astype('float64')) # shape=(7, 15, 12)
func_340_call = mod.get_global_var('func_340')
func_342_call = mutated_mod.get_global_var('func_342')
const_11224 = relay.const([8.699927,-4.982630,-4.801194,-9.408783,-9.832193,0.556653,-6.431856,-8.182214,9.232001,-5.186685,9.809739,-4.973100,0.840518,1.216678,-2.612520,7.225054,-5.375318,-0.508238,-8.733829,-8.980731,3.637915,-0.784790,2.417080,9.847900,0.242552,-3.773786,-7.564171,5.938109,4.269660,-3.597331,6.709400,5.481976,0.153799,8.365595,-3.526432,-2.012528,1.750425,6.586427,8.253115,-4.010914,-1.384408,4.140074,4.902694,6.809404,5.966245,-6.863900,4.776176,-5.488239,9.829252,-3.115622,3.875408,3.763932,1.784370,-4.572347,5.712113,5.919291,8.389711,-7.218241,2.121912,3.110172,4.095670,-7.163761,6.937575,7.145218,-7.879918,-9.143483,2.716752,-1.981576,-3.584012,6.735936,7.675621,-9.730633], dtype = "float64")#candidate|11224|(72,)|const|float64
call_11223 = func_340_call(relay.reshape(const_11224.astype('float64'), [6, 1, 12]))
call_11225 = func_340_call(relay.reshape(const_11224.astype('float64'), [6, 1, 12]))
output = relay.Tuple([uop_11218,uop_11220,call_11223,const_11224,])
output2 = relay.Tuple([uop_11218,uop_11220,call_11225,const_11224,])
func_11227 = relay.Function([var_11217,], output)
mod['func_11227'] = func_11227
mod = relay.transform.InferType()(mod)
var_11228 = relay.var("var_11228", dtype = "float64", shape = (7, 15, 12))#candidate|11228|(7, 15, 12)|var|float64
output = func_11227(var_11228)
func_11229 = relay.Function([var_11228], output)
mutated_mod['func_11229'] = func_11229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11012_call = mod.get_global_var('func_11012')
func_11014_call = mutated_mod.get_global_var('func_11014')
call_11316 = func_11012_call()
call_11317 = func_11012_call()
output = relay.Tuple([call_11316,])
output2 = relay.Tuple([call_11317,])
func_11326 = relay.Function([], output)
mod['func_11326'] = func_11326
mod = relay.transform.InferType()(mod)
mutated_mod['func_11326'] = func_11326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11326_call = mutated_mod.get_global_var('func_11326')
call_11327 = func_11326_call()
output = call_11327
func_11328 = relay.Function([], output)
mutated_mod['func_11328'] = func_11328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11354 = relay.var("var_11354", dtype = "float64", shape = (7, 6, 1))#candidate|11354|(7, 6, 1)|var|float64
var_11355 = relay.var("var_11355", dtype = "float64", shape = (7, 6, 11))#candidate|11355|(7, 6, 11)|var|float64
bop_11356 = relay.divide(var_11354.astype('float64'), var_11355.astype('float64')) # shape=(7, 6, 11)
bop_11359 = relay.floor_divide(var_11354.astype('float32'), bop_11356.astype('float32')) # shape=(7, 6, 11)
output = relay.Tuple([bop_11359,])
output2 = relay.Tuple([bop_11359,])
func_11371 = relay.Function([var_11354,var_11355,], output)
mod['func_11371'] = func_11371
mod = relay.transform.InferType()(mod)
var_11372 = relay.var("var_11372", dtype = "float64", shape = (7, 6, 1))#candidate|11372|(7, 6, 1)|var|float64
var_11373 = relay.var("var_11373", dtype = "float64", shape = (7, 6, 11))#candidate|11373|(7, 6, 11)|var|float64
output = func_11371(var_11372,var_11373,)
func_11374 = relay.Function([var_11372,var_11373,], output)
mutated_mod['func_11374'] = func_11374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11376 = relay.var("var_11376", dtype = "float64", shape = (13, 15, 12))#candidate|11376|(13, 15, 12)|var|float64
var_11377 = relay.var("var_11377", dtype = "float64", shape = (13, 15, 12))#candidate|11377|(13, 15, 12)|var|float64
bop_11378 = relay.multiply(var_11376.astype('float64'), relay.reshape(var_11377.astype('float64'), relay.shape_of(var_11376))) # shape=(13, 15, 12)
uop_11385 = relay.asin(bop_11378.astype('float32')) # shape=(13, 15, 12)
func_2889_call = mod.get_global_var('func_2889')
func_2893_call = mutated_mod.get_global_var('func_2893')
var_11397 = relay.var("var_11397", dtype = "uint16", shape = ())#candidate|11397|()|var|uint16
var_11398 = relay.var("var_11398", dtype = "uint16", shape = (225,))#candidate|11398|(225,)|var|uint16
var_11399 = relay.var("var_11399", dtype = "bool", shape = (1, 420))#candidate|11399|(1, 420)|var|bool
call_11396 = relay.TupleGetItem(func_2889_call(relay.reshape(var_11397.astype('uint16'), []), relay.reshape(var_11398.astype('uint16'), [15, 3, 5]), relay.reshape(var_11399.astype('bool'), [420,]), ), 1)
call_11400 = relay.TupleGetItem(func_2893_call(relay.reshape(var_11397.astype('uint16'), []), relay.reshape(var_11398.astype('uint16'), [15, 3, 5]), relay.reshape(var_11399.astype('bool'), [420,]), ), 1)
output = relay.Tuple([uop_11385,call_11396,var_11397,var_11398,var_11399,])
output2 = relay.Tuple([uop_11385,call_11400,var_11397,var_11398,var_11399,])
func_11402 = relay.Function([var_11376,var_11377,var_11397,var_11398,var_11399,], output)
mod['func_11402'] = func_11402
mod = relay.transform.InferType()(mod)
mutated_mod['func_11402'] = func_11402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11402_call = mutated_mod.get_global_var('func_11402')
var_11404 = relay.var("var_11404", dtype = "float64", shape = (13, 15, 12))#candidate|11404|(13, 15, 12)|var|float64
var_11405 = relay.var("var_11405", dtype = "float64", shape = (13, 15, 12))#candidate|11405|(13, 15, 12)|var|float64
var_11406 = relay.var("var_11406", dtype = "uint16", shape = ())#candidate|11406|()|var|uint16
var_11407 = relay.var("var_11407", dtype = "uint16", shape = (225,))#candidate|11407|(225,)|var|uint16
var_11408 = relay.var("var_11408", dtype = "bool", shape = (1, 420))#candidate|11408|(1, 420)|var|bool
call_11403 = func_11402_call(var_11404,var_11405,var_11406,var_11407,var_11408,)
output = call_11403
func_11409 = relay.Function([var_11404,var_11405,var_11406,var_11407,var_11408,], output)
mutated_mod['func_11409'] = func_11409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11012_call = mod.get_global_var('func_11012')
func_11014_call = mutated_mod.get_global_var('func_11014')
call_11436 = func_11012_call()
call_11437 = func_11012_call()
func_11227_call = mod.get_global_var('func_11227')
func_11229_call = mutated_mod.get_global_var('func_11229')
var_11441 = relay.var("var_11441", dtype = "float64", shape = (1260,))#candidate|11441|(1260,)|var|float64
call_11440 = relay.TupleGetItem(func_11227_call(relay.reshape(var_11441.astype('float64'), [7, 15, 12])), 3)
call_11442 = relay.TupleGetItem(func_11229_call(relay.reshape(var_11441.astype('float64'), [7, 15, 12])), 3)
var_11458 = relay.var("var_11458", dtype = "float64", shape = (72,))#candidate|11458|(72,)|var|float64
bop_11459 = relay.left_shift(call_11440.astype('int64'), relay.reshape(var_11458.astype('int64'), relay.shape_of(call_11440))) # shape=(72,)
bop_11462 = relay.left_shift(call_11442.astype('int64'), relay.reshape(var_11458.astype('int64'), relay.shape_of(call_11442))) # shape=(72,)
output = relay.Tuple([call_11436,var_11441,bop_11459,])
output2 = relay.Tuple([call_11437,var_11441,bop_11462,])
func_11467 = relay.Function([var_11441,var_11458,], output)
mod['func_11467'] = func_11467
mod = relay.transform.InferType()(mod)
mutated_mod['func_11467'] = func_11467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11467_call = mutated_mod.get_global_var('func_11467')
var_11469 = relay.var("var_11469", dtype = "float64", shape = (1260,))#candidate|11469|(1260,)|var|float64
var_11470 = relay.var("var_11470", dtype = "float64", shape = (72,))#candidate|11470|(72,)|var|float64
call_11468 = func_11467_call(var_11469,var_11470,)
output = call_11468
func_11471 = relay.Function([var_11469,var_11470,], output)
mutated_mod['func_11471'] = func_11471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11475 = relay.var("var_11475", dtype = "float64", shape = (16, 3, 8))#candidate|11475|(16, 3, 8)|var|float64
uop_11476 = relay.atanh(var_11475.astype('float64')) # shape=(16, 3, 8)
func_11467_call = mod.get_global_var('func_11467')
func_11471_call = mutated_mod.get_global_var('func_11471')
var_11488 = relay.var("var_11488", dtype = "float64", shape = (1260,))#candidate|11488|(1260,)|var|float64
var_11489 = relay.var("var_11489", dtype = "float64", shape = (72,))#candidate|11489|(72,)|var|float64
call_11487 = relay.TupleGetItem(func_11467_call(relay.reshape(var_11488.astype('float64'), [1260,]), relay.reshape(var_11489.astype('float64'), [72,]), ), 2)
call_11490 = relay.TupleGetItem(func_11471_call(relay.reshape(var_11488.astype('float64'), [1260,]), relay.reshape(var_11489.astype('float64'), [72,]), ), 2)
output = relay.Tuple([uop_11476,call_11487,var_11488,var_11489,])
output2 = relay.Tuple([uop_11476,call_11490,var_11488,var_11489,])
func_11491 = relay.Function([var_11475,var_11488,var_11489,], output)
mod['func_11491'] = func_11491
mod = relay.transform.InferType()(mod)
var_11492 = relay.var("var_11492", dtype = "float64", shape = (16, 3, 8))#candidate|11492|(16, 3, 8)|var|float64
var_11493 = relay.var("var_11493", dtype = "float64", shape = (1260,))#candidate|11493|(1260,)|var|float64
var_11494 = relay.var("var_11494", dtype = "float64", shape = (72,))#candidate|11494|(72,)|var|float64
output = func_11491(var_11492,var_11493,var_11494,)
func_11495 = relay.Function([var_11492,var_11493,var_11494,], output)
mutated_mod['func_11495'] = func_11495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11138_call = mod.get_global_var('func_11138')
func_11140_call = mutated_mod.get_global_var('func_11140')
call_11514 = relay.TupleGetItem(func_11138_call(), 0)
call_11515 = relay.TupleGetItem(func_11140_call(), 0)
output = relay.Tuple([call_11514,])
output2 = relay.Tuple([call_11515,])
func_11540 = relay.Function([], output)
mod['func_11540'] = func_11540
mod = relay.transform.InferType()(mod)
output = func_11540()
func_11541 = relay.Function([], output)
mutated_mod['func_11541'] = func_11541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11540_call = mod.get_global_var('func_11540')
func_11541_call = mutated_mod.get_global_var('func_11541')
call_11559 = relay.TupleGetItem(func_11540_call(), 0)
call_11560 = relay.TupleGetItem(func_11541_call(), 0)
func_3805_call = mod.get_global_var('func_3805')
func_3809_call = mutated_mod.get_global_var('func_3809')
const_11571 = relay.const(-0.128594, dtype = "float32")#candidate|11571|()|const|float32
const_11572 = relay.const([[7.925886,-4.239447],[-1.082742,0.994564],[-8.880276,-5.703912],[-8.052649,-4.815457],[5.291407,7.822296],[-9.478458,-0.298267],[-6.608797,0.978247],[5.298333,-4.131586],[9.082078,4.302273],[4.675205,3.174884],[-2.002515,1.568942],[-7.551922,-1.776431],[-7.732368,-0.710785],[-3.068042,8.824220],[-7.341931,6.694287],[3.988426,-8.084529],[-2.132137,6.326022],[-0.426742,1.302314],[-1.985844,3.842216],[1.872720,-5.421224],[6.065345,-8.592158],[3.069602,-7.876585],[-6.432232,7.599657],[4.824310,-7.891018],[7.987496,-9.378084],[-2.596769,0.323651],[-5.531329,3.862481],[-8.471411,2.535294],[-1.145043,3.272555],[7.490515,5.062974],[1.926211,-8.783261],[-3.950947,-6.821128],[-3.384184,-0.163782],[6.636988,1.262016],[-9.734017,1.967192],[-3.840536,6.793291],[-4.349297,-1.280902],[-4.047290,1.280616],[-4.049196,5.949849],[-1.626193,-2.442785],[-1.987319,3.133971],[-0.963461,6.333144],[3.066615,8.061090],[3.868796,-4.995197],[2.888222,1.924725],[-8.760305,8.520208],[-3.045522,5.283914],[8.858813,0.160030],[-7.544418,4.378061],[4.934160,-1.288553],[0.677101,-6.751832],[-8.801980,-3.563268],[3.604149,3.192006],[-4.365780,-8.377560],[3.399219,5.035236],[-6.493589,-8.627620],[7.835965,3.177361],[-0.077648,6.214943],[-0.339926,-5.357253],[-3.170555,-2.494109],[0.328874,1.706059],[6.112235,-0.906655],[5.619616,6.555197],[7.884976,6.053633],[7.811930,0.462521],[-4.967139,2.509781],[5.633574,1.478737],[-3.694196,0.484655],[6.415973,5.125430],[6.247290,-1.117452],[3.453169,-5.498564],[1.607221,6.976713],[-6.643443,2.793929],[3.239403,4.246579],[-0.143655,-3.173000],[5.144057,-3.557371],[-3.266574,3.833611],[-4.152170,-8.786535],[5.824180,-9.280210],[-8.369493,0.682956],[-5.252989,3.257411],[4.802595,-5.875915],[3.431409,-6.851448],[5.001283,-6.279045],[-4.329667,5.807470],[3.441750,-3.298679],[-2.932153,3.358784],[-1.456405,6.892560],[0.464504,-3.665745],[-9.852566,2.544414],[9.635275,-8.063155],[-5.684174,-3.536706],[-9.577809,0.027453],[1.103944,-7.316451],[-6.865783,6.625629],[-9.325218,-3.467340],[8.626481,-8.114999],[5.106945,-2.768034],[8.765788,6.828467],[9.701754,-9.887570],[0.722155,6.914312],[7.000901,-6.226668],[0.182955,-0.984854],[2.079723,-8.385734],[7.570311,-3.514649],[-9.141005,5.520759],[6.441417,6.486407],[-1.315341,-3.699637],[-9.548235,-5.747818],[5.716469,1.822779],[-3.708214,-1.196291],[-5.481602,0.851717],[5.014190,7.260060],[-7.216730,7.817454],[1.146962,-5.542980],[-3.743323,-0.911213],[-8.914901,-3.028160],[7.295372,-6.803322],[4.970313,0.045500],[7.912290,1.977419],[-4.328941,-2.010006],[3.805915,-0.434847],[4.496689,-6.031284],[9.508970,-7.572374],[7.290837,3.291100],[-9.401120,8.554505],[-3.500118,-6.114281],[8.100983,-9.690022],[-2.298137,-6.951264],[-2.495686,-5.100858],[0.431135,4.699823],[8.971805,-1.995766],[-9.163531,-3.163962],[4.989624,-8.874736],[-2.079291,-0.791690],[-5.885176,-1.703676],[7.379046,-5.251533],[9.448534,1.784461],[1.280657,-9.202345],[-7.130037,-4.853616],[-7.506384,-6.422579],[-5.396182,-2.002953],[8.042470,-8.337815],[5.492027,-6.460927],[1.203931,7.025191],[9.846232,8.251483],[7.586329,-2.275533],[-9.125752,2.800586],[0.211028,-0.365855],[-1.535565,-8.168866],[6.844746,-6.364672],[7.695769,-6.535219],[3.564362,-6.140563],[-3.623228,-7.495710],[2.794662,-2.316092],[4.424774,-7.658244],[2.497794,-4.599745],[9.681138,6.506840],[4.450711,-6.443987],[-3.377222,3.356200],[-9.380512,-7.090531],[8.012296,-3.075232],[9.396472,-3.799569],[-6.354164,6.231784],[1.993739,-2.761392],[9.410578,-0.991789],[9.523476,5.237324],[1.942328,4.274534],[-7.523649,-2.801306],[-5.864074,-7.424664],[5.408915,-1.849591],[-7.390732,3.618351],[3.186610,-5.406569],[8.894155,9.074320],[2.638932,-2.042494],[7.914508,-7.475119],[-6.553327,4.405686],[-6.112736,-2.173653],[-6.657808,7.391514],[8.388247,8.990943],[-3.148394,2.927685],[-3.476081,-6.007811],[1.672450,-5.637369],[3.241012,4.955018],[0.820042,-4.324904],[-2.422567,-3.005351],[-5.629893,5.404853],[-2.926807,-3.856649],[8.930684,3.660448],[9.610652,1.622729],[-4.518191,9.640807],[5.675309,4.042848],[-8.999978,-4.102614],[1.320833,0.974942],[-8.007528,3.946234],[4.689945,-8.296613],[3.240671,-2.596810],[6.008968,4.380283],[4.488911,5.083487],[8.231189,-1.310052],[3.008886,7.463315],[8.259492,-3.176086],[5.167152,-0.288458],[4.059500,8.007873],[-0.086998,8.434870],[-3.817069,-2.745282],[-0.912490,-7.722640],[-2.030635,4.186515],[7.523274,-6.458158],[1.488060,-4.131701],[-7.035029,-4.350579],[5.276911,-3.035006],[9.841192,-3.235843],[0.761084,-3.575582],[-9.092677,4.118443],[3.470529,-9.346905],[7.206774,7.374625],[3.451003,-0.125584],[-5.388228,-3.559188],[-0.338577,-8.301068],[-8.108416,2.139431],[3.318516,8.471256],[-5.772889,-5.446567],[2.819172,-9.340285],[-3.594431,-0.226816],[-7.874372,6.338362],[2.086018,-2.621341],[2.683604,5.155022],[9.291321,1.894266],[-4.455083,0.107160],[3.972870,-2.793481],[-8.700309,-2.861063],[-0.622335,8.617407],[8.028924,-6.087018],[-2.379548,-9.353479],[7.356124,8.681391],[1.362770,3.747794],[-3.158850,-0.290465],[-2.538104,-4.445968],[-6.804110,6.775631],[9.090944,5.205150],[-9.455305,6.450355],[-4.225173,-1.145895],[-2.936811,5.846318],[-4.987282,5.178129],[8.705353,-1.391473],[3.737038,-9.701432],[9.078769,-5.761117],[-7.639211,8.227946],[3.976929,7.663804],[9.219604,6.894432],[-7.028759,8.451269],[4.635808,6.261796],[-2.353082,6.329035],[-5.481056,9.336740],[4.750701,7.262285],[6.380227,-6.625902],[1.523157,9.580557],[2.128483,-0.809580],[6.757321,-9.849495],[4.131168,2.903853],[-4.651020,6.854273],[-4.768531,-7.120629],[-9.880630,-4.980489],[7.312249,4.822449],[-5.583222,2.933743],[6.505164,0.501948],[9.303333,-7.167253],[2.245824,-6.257946],[-3.606709,0.589253],[8.083720,-5.930984],[2.599269,8.435712],[-0.817067,3.637227],[5.213784,-6.103550],[3.255329,4.686301],[-8.513661,2.453267],[5.243587,2.948260],[5.847687,4.923823],[-1.004268,-5.577408],[-9.168328,-8.235636],[-7.697786,8.004890],[-1.199896,3.676653],[-1.715247,-1.914214],[-7.567793,-4.167276],[-2.902746,7.523335],[-5.403282,-7.799393],[-2.415951,-0.491878],[-1.189885,7.015799],[4.161531,9.413291],[0.645038,9.791810],[9.803378,-7.129368],[7.948356,-9.186121],[-0.084578,0.137820],[-7.471117,8.147952],[-5.492294,0.401370],[6.404553,-4.263158],[6.706313,-9.887957],[-0.354854,-3.596957],[-5.446453,6.059106],[-9.691618,6.659384],[4.590338,5.179786],[-6.561695,-0.215245],[4.283521,9.121902],[4.476541,8.057573],[2.183356,4.038202],[1.774207,-7.475307],[-5.781410,4.328271],[6.188778,9.889807],[9.932795,-2.191818],[5.616584,-8.724370],[-9.821719,9.304508],[8.286119,-8.274502],[0.077891,-1.671208],[-6.402658,-6.749179],[-4.017890,3.403267],[-2.439911,-6.960789],[0.887197,4.982722],[-6.628193,0.090342],[0.216216,-0.167140],[5.224559,-0.936753],[-4.976063,2.308843],[7.576956,7.064711],[7.952538,7.523152],[2.802401,8.611705],[-2.801054,1.307488],[1.508859,1.451119],[-0.034998,2.095577],[-2.488613,-6.602365],[8.409072,4.445951],[8.370464,-3.097571],[6.346488,-4.736605],[-4.195055,-4.812818],[-3.886622,8.777362],[-2.378894,-4.135837],[-5.934900,7.307477],[9.508499,4.025180],[1.367004,9.844790],[1.672480,-6.590135],[9.483112,5.633234],[-1.370661,-9.269385],[7.162256,-2.488500],[-4.450776,-8.619098],[0.429760,-7.337433]], dtype = "float32")#candidate|11572|(343, 2)|const|float32
const_11573 = relay.const([-8.282972,8.310317,-9.848403,2.278346,-3.211513,3.750792,-2.714402,9.407468,8.538707,9.017983,3.982787,-9.828323,3.755571,0.590797,-7.442987,-4.715803,-4.919716,-1.469214,1.902938,-1.864780,-5.372843,-2.137178,-0.221951,1.864537,-0.212521,8.729544,-6.623268,-3.804669,-8.488018,7.090647,-4.088204,-8.432566,8.035418,8.611694,-1.278788,4.041026,-4.851519,1.772370,4.159037,-1.578516,7.769179,8.101341,-7.243778,-3.424228,-6.752860,1.277810,3.160780,3.490593,5.798262,7.120395,-3.298474,-1.382151,-8.989216,2.610025,-2.058882,1.098960,-8.293296,-8.679714,-4.182369,8.308607,-4.890953,9.352222,-5.577690,-5.454432,-1.654192,6.894302,-0.222426,6.552605,7.880641,4.636786,-7.467911,-2.932396,4.320308,3.811688,0.801964,-0.847636,-8.016219,1.329718,-7.315068,-2.280161,4.050619,-6.639591,8.598166,-8.694327,-4.811612,1.391706,7.805371,5.921626,-5.550054,-5.226059,-6.198364,6.549226,7.397357,4.492892,-3.034469,-2.228300,-6.048517,-7.113449,-4.661839,-8.048034,-4.553252,0.990937,9.747096,-7.007147,-5.591497,2.296096,-5.588207,8.413312,1.981005,2.067766,-9.515730,0.681213,-1.774453,-3.472307,2.451536,-4.361622,-1.002533,0.932130,-7.123580,2.068573,-5.263565,0.881914,0.113574,-5.022597,-0.483711,8.445775,9.247077,8.668132,-3.878816,-4.662502,-5.233225,0.845035,2.812587,4.834003,-2.848363,-7.967234,8.085994,2.271849,-9.922745,-2.472195,-9.412975,3.439378,-0.858021,6.561390,-7.287632,-9.919713,-9.686706,-0.879380,-7.832253,-6.974258,-8.128401,-1.007685,-9.314918,2.770994,2.644517,2.992770,5.406686,-4.820226,7.560970,-9.141685,8.598681,3.723754,-0.751039,7.137680,0.333064,8.198198,-9.233443,9.024854,-8.502646,4.540991,-5.413254,5.825367,7.612063,-2.533434,3.772980,0.332074,2.868408,5.628048,-1.322227,7.528935,-6.547823,9.823608,-4.297806,2.682820,5.569239,-1.718885,-2.280376,9.126719,4.002942,-8.389466,-5.091509,-0.318638,-0.927633,9.528267,-4.256483,-7.962647,-5.600017,-7.945537,2.597252,5.144827,-6.476138,-0.739200,3.226767,4.314697,1.238847,6.549345,8.669943,-4.465114,8.053069,-7.702114,-9.654852,-3.244758,-8.358465,5.633125,8.907296,1.393552,-3.482046,-8.373213,8.945063,4.227670,9.521131,7.801635,-7.625675,2.749357,5.001607,9.890455,-9.168961,-6.756504,-3.446544,-1.207282,-6.785886,-5.626238,-9.207395,-0.451749,-7.341684,-0.879067,5.113598,-7.531031,9.986801,8.731833], dtype = "float32")#candidate|11573|(240,)|const|float32
call_11570 = relay.TupleGetItem(func_3805_call(relay.reshape(const_11571.astype('float32'), []), relay.reshape(const_11572.astype('float32'), [7, 7, 14]), relay.reshape(const_11573.astype('float32'), [240,]), ), 2)
call_11574 = relay.TupleGetItem(func_3809_call(relay.reshape(const_11571.astype('float32'), []), relay.reshape(const_11572.astype('float32'), [7, 7, 14]), relay.reshape(const_11573.astype('float32'), [240,]), ), 2)
func_7139_call = mod.get_global_var('func_7139')
func_7146_call = mutated_mod.get_global_var('func_7146')
const_11586 = relay.const([[1],[-9],[-7],[-1],[-6],[9],[2],[7],[5],[4],[-3],[-3],[-1],[-3],[-8],[-5],[6],[-1],[7],[-1],[9],[-4],[-3],[-8],[8],[2],[4],[6],[-8],[10],[-1],[-5],[10],[-1],[10],[-9],[-1],[7],[-6],[2],[-1],[-7],[-2],[10],[9]], dtype = "uint64")#candidate|11586|(45, 1)|const|uint64
const_11587 = relay.const([6,-10,-6,3,-2,-4,-9,-9,-7,1,7,-3,-9,10,3,-2,5,-5,-3,-6,5,10,-2,9,1,-9,5,9,5,6,5,8,7,1,-4,-7,-1,-2,-7,4,8,6,5,9,-5,9,2,9,3,-1,1,7,-4,-4,-8,9,-2,-1,-10,-7,7,6,5,9,7,6,-8,9,2,3,2,5,-6,-10,-9,3,5,5,7,10,4,4,-1,-5,6,2,-9,1,5,2,-8,-2,-6,-3,-1,-7,-10,-8,-5,3,-1,1,-2,-5,-4,3,-4,5,1,3,2,8,4,-5,9,10,3,-1,-4,3,3,-1,2,9,5,-7,3,-1,3,5,5,3,-7,-2,9,10,-3,1,7,3,3,9,5,-4,-7,10,4,-10,6,-3,-9,-8,-4,-10,-10,-2,-2,8,10,-8,1,-9,-1,-8,-10,5,6,4,4,-10,6,9,3,-7,-1,2,-3,7,-9,-5,7,-10,3,2,7,-4,-6,-1,10,1,-5,3,5,3,6,5,-6,-6,-9,8,2,9,5,-4,9,8,10,1,-3,9,2,5,-9,9,-9,3,9,9,3,-2,-1,-6,4,-6,4,10,-1,6,-6,-7,-1,6,2,5,1,8,10,4,-3,-4,-8,-3,-7,-9,3,8,8,-4,-9,6,6,1,7,-1,8,7,8,-6,-2,-10,3,-7,-3,-3,-9,4,10,1,-3,-10,-8,8,1,-4,3,6,-3,-8,5,9,-8,-1,-8,-8,7,-3,-4,-2,7,8,10,-5,-8,-7,4,-6,9,-1,-2,-8,-6,1,-2,-7,-8,8,-10,1,5,10,6,-2,-5,-3,-3,-3,4,2,-8,-6,5,-6,-6,-2,7,-2,8,-9,6,-8,-5,-9,7,-6,2,3,5,-2,-6,-5,4,7,9,5,-10,-6,5,5,-9,-9,4,-6,-1,1,3,-10,3,-9,5,-10], dtype = "uint64")#candidate|11587|(360,)|const|uint64
const_11588 = relay.const([-5.828999,8.700937,1.965236,2.071618,3.977991,-1.692639,8.225037,1.502322,2.784775,2.203794,-6.884569,-0.370752,-6.143559,9.274101,-6.134708,-8.835042,6.122171,5.823452,8.876200,5.825776,8.971088,8.464974,5.718333,-0.704001,-8.560344,2.688249,0.641523,9.134462,-8.557572,-7.723221,-1.303604,6.811047,-8.146579,-3.336145,0.018497,9.513722,-1.291132,9.632646,8.813910,-9.651116,-0.532799,-4.176599,-9.200562,7.843315,0.762818,4.442186,-1.802824,5.095732,8.165848,-3.928568,0.679251,-8.237165,3.716688,3.122987,6.988139,-3.266233,1.203929,-2.098085,-8.054586,-1.887669,4.607773,1.971034,1.364372,-5.930481,5.343641,6.658844,-8.816768,-1.824127,-9.157819,-0.307838,4.834159,7.339807,-5.325292,-4.225037,9.710097,-5.487308,3.268144,-7.894602,-0.280126,3.934579,0.808371,5.863700,-4.677455,9.272847,6.548156,5.214741,-7.277724,-7.044663,-8.990592,-7.224158,9.811076,-1.429637,-8.636211,3.788071,6.505263,-7.151742,-8.088248,7.001612,4.845055,0.875819,-5.103423,-2.778523,5.370889,0.151188,9.276604,6.770051,-7.103033,2.816573,-1.820376,-2.094483,-7.699411,-8.694472,-5.876738,2.655125,8.016283,-1.804598,9.049652,-0.993157,3.845116,-5.010899,3.538658,-1.771550,5.545983,6.240728,-6.675488,-8.924094,-4.543963,0.364476,-4.191033,4.888317,0.189051,4.836845,-5.525810,3.238367,-4.633385,-0.431076,7.505872,8.513943,8.277177,-5.746999,-4.643753,-2.020847,-9.409303,7.061544,-6.434678,-7.194972,9.902854,1.668996,8.890694,3.255439,-8.924464,-7.176172,-0.283789,8.380315,-4.737355,-0.130588,-4.703487,5.519275,-9.329399,4.693751,0.326266,6.551604,4.420079,-6.533484,2.553927,-3.040787,-6.215886,-3.917122,2.244071,-2.515187,6.203166,-2.086926,1.503331,-0.070260,1.492878,-3.337031,2.505108,6.415766,-4.921278,-1.980051,9.574864,-2.757097,6.616440,4.048802,-7.286497,-6.230965,-4.371534,7.812355,-7.734453,6.662196,6.099550,9.242438,4.557470,6.218536,-7.269071,-8.252721,4.596961,6.364535,2.107836,1.075531,-2.133351,8.717490,-5.945753,-2.411542,8.924803,-0.234761,-5.906044,4.490447,-9.563216,3.255218,-6.771193,0.641601,-5.963798,-0.347416,6.123055,2.795186,0.952363,-5.883975,3.080070,2.788569,-6.967354,3.393533,2.107447,0.757665,-8.362622,-9.434970,-7.599997,-5.188161,0.240037,-0.171376,-1.501367,-2.667931,-6.289929,5.983251,-7.124077,-0.579507,2.908915,5.513104,5.152386,-3.089385,1.935198,-8.699907,-6.956007,6.995416,-5.425788,-1.847094,9.923666,-1.487521,1.937059,-9.824623,-4.487301,2.798006,-1.177385,-5.117165,5.580241,6.625033,-5.755674,-6.941381,-7.952886,-5.922538,7.908191,6.741911,4.708383,-3.672297,-8.686865,-2.561758,-4.884108,-6.776781,-8.722828,-9.897555,8.871829,3.300146,6.752433,9.975873,9.366046,-5.007464,-1.184573,0.790077,-8.925394,1.506065,-6.974003,1.180046,9.369715,-9.113243,1.417305,1.121377,-1.128419,-0.456906,-7.565870,-8.131255,2.604582,-8.839620,-6.765963,8.701995,0.080790,2.450360,1.094285,-5.218079,-0.709782,-6.135915,8.746316,1.105703,-3.222831,-8.310444,3.916660,-4.763921,5.713554,-0.738495,7.040757,-6.204349,-1.319714,-1.792928,4.928849,-1.223435,5.539387,0.404584,-6.871348,5.177273,-3.360225,8.845931,-5.860705,-2.374096,-6.032553,7.183307,-4.018207,8.001583,-4.632906,-1.548921,-6.179557,6.528386,-4.406807,3.767362,5.527172,1.717512,-2.385941,4.953067,3.662049,-5.897576,0.646436,5.135015,-4.807905,-2.206919,-0.227275,-5.198331,-6.733296,4.604175,-3.186074,6.238122,5.850768,3.850709,-5.978641,-1.079530,-6.784486,1.461718,-8.684563,4.938113,6.645843,2.746416,2.973466,6.618531,-0.176852,-0.292500,3.297279,-6.595859,-3.054515,-5.909862,8.751128,-7.330524,8.974791,3.336242,-9.776947,-6.778484,-4.776454,-4.850438,5.653230,5.809346,-5.583412,-9.605944,-4.345343,-8.352989,-4.097496,1.025493,6.716905,6.844441,8.150561,-1.429295,-8.628047,-5.738427,3.242101,-2.296646,-9.046769,-5.742025,4.580023,-4.288942,6.307139,-6.392775], dtype = "float64")#candidate|11588|(396,)|const|float64
const_11589 = relay.const([[False,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,True,False,True,False],[True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False],[False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,False],[True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True],[False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True],[True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True],[True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True],[True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False],[False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,True,True,False],[True,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False]], dtype = "bool")#candidate|11589|(10, 42)|const|bool
call_11585 = relay.TupleGetItem(func_7139_call(relay.reshape(const_11586.astype('uint64'), [15, 3]), relay.reshape(const_11587.astype('uint64'), [360,]), relay.reshape(call_11570.astype('float32'), [240,]), relay.reshape(const_11588.astype('float64'), [396,]), relay.reshape(const_11571.astype('uint16'), []), relay.reshape(const_11589.astype('bool'), [420,]), ), 0)
call_11590 = relay.TupleGetItem(func_7146_call(relay.reshape(const_11586.astype('uint64'), [15, 3]), relay.reshape(const_11587.astype('uint64'), [360,]), relay.reshape(call_11570.astype('float32'), [240,]), relay.reshape(const_11588.astype('float64'), [396,]), relay.reshape(const_11571.astype('uint16'), []), relay.reshape(const_11589.astype('bool'), [420,]), ), 0)
func_7842_call = mod.get_global_var('func_7842')
func_7846_call = mutated_mod.get_global_var('func_7846')
var_11596 = relay.var("var_11596", dtype = "float64", shape = (128,))#candidate|11596|(128,)|var|float64
call_11595 = relay.TupleGetItem(func_7842_call(relay.reshape(var_11596.astype('float64'), [16, 8, 1]), relay.reshape(const_11588.astype('float64'), [396,]), ), 2)
call_11597 = relay.TupleGetItem(func_7846_call(relay.reshape(var_11596.astype('float64'), [16, 8, 1]), relay.reshape(const_11588.astype('float64'), [396,]), ), 2)
func_5017_call = mod.get_global_var('func_5017')
func_5022_call = mutated_mod.get_global_var('func_5022')
var_11610 = relay.var("var_11610", dtype = "float64", shape = (560,))#candidate|11610|(560,)|var|float64
const_11611 = relay.const([8,7,6,-8,-6,7,4,-2,-7,-9,-10,-3,-8,-6,-2,4,-9,-6,10,-9,4,2,9,-3,3,-9,2,-3,-6,3,-3,10,5,-4,9,-3,9,-3,9,5,7,4,-7,-2,-5,-3,-1,8,-8,-10,8,-1,1,7,7,-4,7,6,5,9,4,-10,-4,10,3,-10,-5,9,-5,8,10,10,9,1,5,-6,1,-1,-4,-10,3,9,-3,4,7,-1,3,4,9,-4,5,-3,-5,3,7,6,3,8,6,-3,-3,1,8,-5,-1,1,-10,2,9,5,-9,6,8,6,-5,8,5,-3,3,10,-9,-9,5,6,-9,10,4,9,-9,6,6,-1,1,6,3,7,-8,3,-10,-7,-10,6,-4,-5,-10,8,-3,8,4,10,-9,9,5,-1,3,-5,-7,-6,-8,6,2,-5,-3,-10,5,4,7,1,9,9,10,-4,7,-7,-3,-2,-5,9,-9,6,-1,8,-6,-9,1,-5,-4,-5,1,3,-5,8,-1,1,-7,4,5,-5,-10,-6,-4,1,1,6,-10,-7,-5,6,-3,-8,3,-10,3,-1,-2,6,-7,-4,5,-2,1,1,-4,4,5], dtype = "uint16")#candidate|11611|(225,)|const|uint16
call_11609 = relay.TupleGetItem(func_5017_call(relay.reshape(var_11610.astype('float64'), [16, 5, 7]), relay.reshape(const_11611.astype('uint16'), [225,]), relay.reshape(const_11589.astype('bool'), [420,]), ), 4)
call_11612 = relay.TupleGetItem(func_5022_call(relay.reshape(var_11610.astype('float64'), [16, 5, 7]), relay.reshape(const_11611.astype('uint16'), [225,]), relay.reshape(const_11589.astype('bool'), [420,]), ), 4)
func_4049_call = mod.get_global_var('func_4049')
func_4052_call = mutated_mod.get_global_var('func_4052')
call_11623 = relay.TupleGetItem(func_4049_call(relay.reshape(const_11571.astype('bool'), [])), 3)
call_11624 = relay.TupleGetItem(func_4052_call(relay.reshape(const_11571.astype('bool'), [])), 3)
uop_11629 = relay.sqrt(const_11611.astype('float32')) # shape=(225,)
func_4503_call = mod.get_global_var('func_4503')
func_4505_call = mutated_mod.get_global_var('func_4505')
const_11637 = relay.const([3.399428,6.157056,1.384141,-9.978123,-3.926560,-8.161953,1.860345,-8.842944,-4.510914,-8.789967,4.922709,0.530041,-1.931363,-3.588501,-8.668338,3.036757,-8.224829,5.075171,-6.100622,5.338644,-6.461373,5.447316,8.731045,-4.687554,-8.224565,7.221874,6.281288,7.943110,-4.942828,-2.096497,-7.330766,-7.754435,-8.757170,-3.649377,-9.050395,-7.699042,-0.304385,-2.602687,3.735457,8.104692,1.997495,-6.994022,0.010007,-5.220146,7.166130,4.734068,-3.842389,6.738427,6.714912,-6.514024,3.092266,-0.796452,-2.069065,-2.287004,6.968142,8.211162,-6.773474,-2.793324,7.610750,2.299737,5.923730,-9.164003,-6.165616,-5.727571,0.359181,6.331358,5.917047,-3.496498,-2.635022,-4.788720,-0.108636,-5.567234,7.537536,7.694260,5.261635,6.120270,9.863705,3.070962,9.948994,2.281349,-5.058614,-4.824622,-1.878945,6.742026,8.804873,-5.740117,1.433927,-1.198681,9.341841,0.916523,-1.376810,8.574389,-5.324747,1.937230,2.257655,-5.610103,-6.555002,9.759374,-7.665350,6.925756,-7.930075,6.823208,6.357693,-8.120800,0.959960,2.107833,0.868617,0.336174,7.089581,7.260105,7.473915,-9.435538,-5.527662,-3.769719,-3.110492,-7.058678,-1.904085,-1.007865,7.528488,-5.816008,-6.833990,-5.829401,1.697152,4.192937,1.441391,6.454884,5.720854,-8.724650,1.758149,-4.527892,-3.844465,9.150647,-1.812498,-3.977965,-5.175346,8.943581,6.744065,-9.931401,9.729277,1.184815,7.371207,-9.719745,7.292146,-3.350363,6.783670,-0.247044,-0.869160,-2.146580,-9.059738,-4.441772,-9.435810,0.719934,-7.597998,-6.211890,-0.304582,-8.753248,-9.724040,-3.774379,4.409752,-8.344915,8.907389,-4.012743,-3.360076,-0.600139,-8.880949,-3.313123,-5.526748,-8.521122,3.874600,2.669670,-4.941982,0.868735,-0.863308,-9.355559,5.711259,-6.178279,-2.858396,-2.481017,-8.321568,4.586861,9.451613,0.891083,9.655731,-6.548032,-5.146129,-1.518294,5.989678,2.493204,1.738240,5.091620,-9.519297,0.535411,5.365127,-5.963670,8.963636,-1.490546,0.543075,-1.206600,3.659628,2.061347,-9.543021,-1.403059,-1.657928,9.766484,-8.352228,-8.672867,0.141211,8.649365,1.746452,-2.200109,6.421711,9.347241,-4.839573,9.240771,9.080143,7.279252,5.610270,5.330751,0.697601,7.423887,-1.768877,-1.967147,-0.527238,-8.399818,5.435141,-6.705707,0.779943,2.708864,5.872443,2.461974,-5.342761,8.518984,-9.940100,9.251174,5.881895,0.873794,-4.184747,3.087747,6.442973,-4.602022,-6.675456,1.588186,-2.598619,3.272333,-8.632632,-3.911929,4.935461,-8.271302,4.171993,1.896771,-1.229957,-1.048155,2.715298,9.365298,4.341282,5.371163,-5.445264,9.711947,-2.444422,0.184104,5.741221,7.561023,1.924369,-4.092580,3.893962,4.699822,0.667341,-8.461959,-3.954630,4.252470,3.838743,0.924851,-7.642312,-6.667516,-0.150573,7.219292,-9.312283,-6.913927,-3.446349,-5.791100,2.655615,6.566581,6.021198,5.961610,-9.109335,4.408162,9.903404,9.235869,6.404960,-2.082920,4.298462,3.081060,-1.654101,2.711536,-3.797746,-4.401164,-9.311618,-6.646940,2.475305,1.146323,7.998832,4.888560,4.616675,-1.482058,8.292172,-1.601670,-4.562748,-9.548750,-7.269690,3.614492,0.225551,-5.395888,3.339331,7.423946,-4.603102,-7.739307,5.882441,-8.320153,3.451933,2.447556,-7.645208,9.602709,9.790508,2.937693,-8.589710,-3.049568,7.340022,7.803811,-4.774245,9.147927,5.145588,-4.127909,-7.026854,3.093521,7.370902,-2.900116,5.714078,-6.503546,4.084152,-6.224726,-9.216933,7.298475,4.875184,-9.021013,3.837860,-2.656489,-7.907333,4.151979,7.335000,-6.879855,3.319061,-2.178563,-5.101658,8.912398,6.455648,7.701451,-1.402355,5.470562,3.546500,0.298252,2.958828,2.977711,-2.482747,-9.949422,-1.106399,-8.417057,0.855771,-7.655431,4.840901,8.827646,7.262022,-8.404512,4.184816,8.133146,-5.086446,0.991087,-0.052801,2.834122,5.505750,-0.305805,-2.884540,2.958655,-6.185228,5.686968,8.295685,-6.771992,-8.893415,1.251946,-5.619309,-4.982138,5.708425,-6.682686,7.472204,0.345772,-5.950359,-5.838545,-9.723483,-2.518873,7.668203,2.162636,9.608685,1.892619,-2.423702,0.611204,9.326171,6.858324,-8.089183,-1.204507,3.943918,-1.787050,0.884334,-2.008109,3.375999,-2.346905,5.645663,1.172205,9.374699,-6.465237,8.207661,-8.616193,4.041919,-2.581368,-1.129889,8.455044,-9.851278,6.548132,-5.618219,6.283008,-3.651630,-6.893731,6.877883,-4.749951,-5.380067,1.440264,5.176016,-8.032488,8.550989,-9.321835,7.626352,-5.226863,0.936565,-1.739833,9.745862,3.578982,7.193000,9.575113,-8.064622,-4.109768,-2.658318,-6.424639], dtype = "float32")#candidate|11637|(450,)|const|float32
call_11636 = relay.TupleGetItem(func_4503_call(relay.reshape(const_11637.astype('float32'), [5, 10, 9])), 1)
call_11638 = relay.TupleGetItem(func_4505_call(relay.reshape(const_11637.astype('float32'), [5, 10, 9])), 1)
output = relay.Tuple([call_11559,call_11570,const_11571,const_11572,const_11573,call_11585,const_11586,const_11587,const_11588,const_11589,call_11595,var_11596,call_11609,var_11610,call_11623,uop_11629,call_11636,const_11637,])
output2 = relay.Tuple([call_11560,call_11574,const_11571,const_11572,const_11573,call_11590,const_11586,const_11587,const_11588,const_11589,call_11597,var_11596,call_11612,var_11610,call_11624,uop_11629,call_11638,const_11637,])
func_11649 = relay.Function([var_11596,var_11610,], output)
mod['func_11649'] = func_11649
mod = relay.transform.InferType()(mod)
var_11650 = relay.var("var_11650", dtype = "float64", shape = (128,))#candidate|11650|(128,)|var|float64
var_11651 = relay.var("var_11651", dtype = "float64", shape = (560,))#candidate|11651|(560,)|var|float64
output = func_11649(var_11650,var_11651,)
func_11652 = relay.Function([var_11650,var_11651,], output)
mutated_mod['func_11652'] = func_11652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11326_call = mod.get_global_var('func_11326')
func_11328_call = mutated_mod.get_global_var('func_11328')
call_11676 = relay.TupleGetItem(func_11326_call(), 0)
call_11677 = relay.TupleGetItem(func_11328_call(), 0)
output = relay.Tuple([call_11676,])
output2 = relay.Tuple([call_11677,])
func_11682 = relay.Function([], output)
mod['func_11682'] = func_11682
mod = relay.transform.InferType()(mod)
output = func_11682()
func_11683 = relay.Function([], output)
mutated_mod['func_11683'] = func_11683
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11703 = relay.var("var_11703", dtype = "int8", shape = (13, 8, 1))#candidate|11703|(13, 8, 1)|var|int8
var_11704 = relay.var("var_11704", dtype = "int8", shape = (13, 8, 12))#candidate|11704|(13, 8, 12)|var|int8
bop_11705 = relay.left_shift(var_11703.astype('int8'), var_11704.astype('int8')) # shape=(13, 8, 12)
uop_11710 = relay.acos(bop_11705.astype('float32')) # shape=(13, 8, 12)
bop_11712 = relay.right_shift(var_11703.astype('uint8'), var_11704.astype('uint8')) # shape=(13, 8, 12)
output = relay.Tuple([uop_11710,bop_11712,])
output2 = relay.Tuple([uop_11710,bop_11712,])
func_11721 = relay.Function([var_11703,var_11704,], output)
mod['func_11721'] = func_11721
mod = relay.transform.InferType()(mod)
var_11722 = relay.var("var_11722", dtype = "int8", shape = (13, 8, 1))#candidate|11722|(13, 8, 1)|var|int8
var_11723 = relay.var("var_11723", dtype = "int8", shape = (13, 8, 12))#candidate|11723|(13, 8, 12)|var|int8
output = func_11721(var_11722,var_11723,)
func_11724 = relay.Function([var_11722,var_11723,], output)
mutated_mod['func_11724'] = func_11724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11138_call = mod.get_global_var('func_11138')
func_11140_call = mutated_mod.get_global_var('func_11140')
call_11733 = relay.TupleGetItem(func_11138_call(), 0)
call_11734 = relay.TupleGetItem(func_11140_call(), 0)
func_11467_call = mod.get_global_var('func_11467')
func_11471_call = mutated_mod.get_global_var('func_11471')
const_11751 = relay.const([7.872542,7.478739,-2.243379,-7.960597,-7.186448,-1.693502,-3.486830,3.587543,4.376864,4.097326,-3.532399,-2.978998,0.659891,-9.707872,-4.238191,2.832056,4.712721,6.646163,9.628347,1.769406,2.957945,-8.997206,-2.878730,3.318074,1.985015,-3.392507,-9.203053,2.456672,-3.959664,-3.292169,7.340001,4.903523,-3.071657,-5.955245,-3.550803,3.374875,2.992595,6.841041,9.502888,8.727554,-6.561896,7.465167,-4.278504,-2.407684,-2.384627,0.402197,-7.919703,-4.463369,6.016808,4.271137,3.858778,-8.283371,-2.483616,-0.016541,-4.775078,-2.055698,-2.446754,1.537091,-0.991942,2.483576,4.027770,-0.665359,5.212014,-9.188122,1.450368,-4.282917,3.484993,-8.674292,1.210541,6.506206,-0.645430,-8.256463,0.068910,-3.774280,1.062560,-1.341779,-8.922113,-0.957933,-4.333020,3.640115,-0.489586,-5.442117,-3.629006,4.589906,9.887715,3.279218,-4.561881,-8.842960,2.694017,5.481680,2.162608,0.918354,-2.748583,4.642939,2.674633,9.030232,1.141606,6.652437,-0.174010,6.299174,0.118842,4.714204,-3.483165,-2.924806,-3.917345,-5.036373,1.952566,-0.260747,4.156055,-8.139262,-6.266993,8.404429,8.199989,4.096936,4.285033,-3.018369,8.564549,9.285131,4.043015,9.720814,2.736284,1.665488,-1.972161,4.747645,-0.460225,-3.430696,8.161350,-8.262839,-9.707063,-7.472678,-9.809164,-4.931476,-0.529498,5.093578,9.601560,-1.082528,-0.286889,-2.568386,7.672011,-5.743549,0.409220,-4.394463,-3.573191,-6.759491,-7.083257,6.159230,3.662928,-2.104337,3.622211,7.346913,-6.198011,8.015684,-0.645505,6.619651,5.594839,4.301238,-0.280487,8.364544,-3.051893,7.921105,-2.444984,2.596301,2.469478,-7.014538,1.776633,7.250366,6.491381,-9.741263,-8.744273,5.178219,8.363143,9.734611,-1.744870,3.017578,-0.989883,4.554559,9.511893,-0.111515,-9.954516,4.969202,-6.901153,8.645797,6.512036,6.091232,-2.960645,-2.520577,0.984388,9.279974,-2.916036,-4.280601,-3.901970,-0.674965,-3.044047,-8.656074,3.699079,-7.307091,-2.968756,3.148876,6.194655,-7.531637,5.820669,-2.213673,-6.543281,-1.994948,-5.783916,1.475733,-7.356490,-1.817076,-9.914517,7.187040,-1.849979,1.029797,9.418856,-6.645207,-2.082479,-1.524470,2.818374,-4.512094,0.720635,9.444996,-9.563336,-5.460409,-7.769543,0.048351,9.531300,-7.466584,2.399021,-9.370298,-3.637437,4.065063,0.483898,-5.329079,-6.420041,-7.809205,6.186376,4.070998,-0.223450,-4.459340,-4.965874,8.322199,-5.348267,0.721851,-7.840837,-0.870183,7.762571,9.743064,-9.784914,7.231616,-8.453756,-9.216815,8.500763,5.667888,9.316707,-4.313295,-3.630422,7.376476,6.775853,-6.327403,-8.542469,-1.707304,-5.373599,2.740520,5.018450,-8.532924,-7.175052,8.746212,-5.635881,-0.483601,-7.825587,-4.612130,-5.476844,0.193314,-9.767078,9.489722,3.722782,-4.961013,3.223174,-7.860422,4.122654,6.129160,5.576709,8.576075,5.952506,9.091761,2.088622,-2.712939,3.077245,6.340052,2.604672,-9.420526,8.116537,2.003614,-4.173636,1.652973,-5.146374,-3.549764,-8.771909,4.590804,9.151164,6.330048,-2.848905,-9.210614,-9.168205,-6.318082,8.287930,-2.236558,0.245878,0.937931,0.064219,3.530436,3.068255,4.934926,-4.229107,-6.909053,4.626511,-3.885275,0.126921,4.224597,-4.058506,-8.244176,-6.611615,-9.701629,-3.075161,-2.533784,8.228972,1.148089,2.334929,-6.427130,0.928590,5.625971,-5.582834,9.567303,-6.520879,4.508140,-7.158255,-8.980499,-6.679205,-4.701130,5.844771,-7.370035,5.280506,8.483608,-4.619683,-6.877226,-8.068944,-5.604770,7.640888,5.140700,-0.843176,-0.233305,-1.273046,-8.547428,-5.476248,3.201336,4.176921,-1.038322,1.676611,7.146321,7.034376,8.296542,5.587617,-0.483037,6.400333,-5.912887,8.826347,-2.310063,-1.669532,-1.164903,-6.077264,-0.608177,-4.886707,-0.085102,-1.308903,1.900523,5.507333,-3.669895,4.633150,3.314764,-6.482947,-5.155246,-1.634357,4.890867,4.109345,5.493655,0.022155,1.062096,-0.721578,9.029265,9.536529,-4.669505,1.468768,6.095666,-4.721626,-5.552215,4.504447,-6.807498,9.387618,-9.037083,2.516536,-7.891396,7.069013,-4.418699,8.948778,-4.163268,6.276711,3.160784,3.505782,5.658285,9.359215,-8.513789,-6.116280,9.288324,-8.720915,1.064444,5.388554,-6.156145,4.764978,0.530421,-0.253814,-8.727267,-9.185524,0.244086,-1.962794,2.762312,-1.255349,-7.904614,-3.446365,-3.535964,9.930924,1.362781,-8.505352,1.974866,-4.234969,-6.881224,0.900450,-3.679482,8.922873,3.671658,-1.593076,5.637389,9.573476,-4.646666,9.670662,-0.551700,-0.845393,-9.047229,-6.334894,-5.434698,-1.646947,1.115461,6.144066,2.622508,4.412679,3.348170,-4.416593,-4.851000,-1.788643,4.156168,-9.963236,0.907726,2.203948,9.033039,8.730177,0.167405,-0.832474,9.537303,-1.262278,-8.609438,-8.973937,-0.207972,0.557979,-8.405097,2.951005,1.613976,0.882792,-9.980533,-2.999626,-1.702075,1.442990,5.218077,3.669892,-0.144225,-7.459895,9.074191,-6.692688,3.486857,5.171125,2.726571,5.250683,-9.237729,6.775160,-5.479448,-2.938151,-9.076895,-1.177122,1.486047,-7.959512,6.760206,5.088184,4.056916,-1.854740,9.590902,-9.893846,-3.287426,2.502197,7.512380,3.268333,7.851052,-8.683281,-9.550594,6.434120,-5.489428,7.950604,-3.831421,1.405276,-3.375036,-2.714163,3.363650,-8.368283,4.014384,-9.277820,8.331441,-4.643219,1.041630,-0.605453,2.308058,5.044616,0.138928,2.036869,8.983964,-2.100655,5.554622,1.578219,9.146744,-1.638928,-0.106122,3.671496,7.436765,-7.313180,2.881055,-1.836289,-5.251701,-1.274478,-9.943121,-7.608909,-7.729978,1.253128,6.067183,-0.130617,-4.349781,1.908350,3.217590,-7.899864,-9.467666,0.333821,5.781930,-2.716217,-4.619554,-9.669518,3.782884,-9.583097,8.637869,1.649350,7.944584,9.494064,-4.195590,-8.676929,-8.781597,-4.750176,6.923978,-0.018743,6.337403,-5.994273,7.270849,-2.628422,1.561224,0.745202,-1.792144,-3.499072,-5.317666,-7.287234,-8.280506,5.085487,7.242106,-8.878681,9.645445,-2.931355,7.688788,-3.595286,3.092119,9.187362,-6.045316,5.630236,2.083661,-5.245933,1.522088,2.668282,1.381361,-1.722134,-4.070354,0.393326,6.462045,4.180520,-4.215103,-9.929543,-0.745853,8.603950,-1.346261,-2.537507,-4.930271,8.706970,9.774464,2.603655,7.588409,9.905908,-1.690150,-9.135687,-0.627965,4.670398,5.045522,-7.297311,3.270037,-3.831261,-0.235073,-4.972764,3.006049,2.852226,-0.552277,7.063359,-7.211694,9.773149,3.394196,0.945743,3.958253,1.703024,-4.658280,1.213452,3.673158,0.637749,-3.596421,-9.571698,4.498717,-2.508224,-3.358822,-7.579389,-7.383588,-1.885060,6.753766,-6.297136,-3.863000,3.148238,8.554827,-0.762486,6.181345,8.568450,7.787766,7.326512,2.296346,-5.975367,-9.843867,-4.131161,4.940702,-3.380280,-9.729015,3.986764,-7.788953,4.547441,9.041055,-2.728145,3.006264,-4.244607,0.127311,-4.261106,4.788400,1.824825,6.673367,0.393530,-0.253824,0.145739,-6.967857,0.049985,7.734333,-1.862608,-8.187121,2.736026,-6.962637,4.579794,-9.920863,-2.853695,-7.041652,2.449589,-0.368487,-8.252156,-3.996166,1.663175,8.772819,-2.302123,-4.771264,3.615857,7.473800,-7.850851,3.553049,-2.473522,5.630850,2.001276,-0.203088,6.552318,7.484371,2.936229,6.259389,-1.646140,9.146265,-0.044780,-6.183381,-7.098195,-8.281012,7.546673,-8.129536,3.968591,3.407019,-5.777992,2.944516,-6.858574,4.698474,9.225482,-6.911546,3.908448,-9.407938,2.562276,-2.611232,-7.609721,6.021980,-1.051131,0.540274,0.125600,-1.097117,-7.743414,-8.969535,9.985257,-8.037162,-1.790484,-2.944337,-6.106643,1.593602,9.122325,-1.869563,9.396267,-1.873802,9.135256,8.084812,-0.637747,-7.309724,-9.291617,4.955198,8.535894,-6.294536,-6.786304,2.655843,6.405427,2.961802,-2.084477,-4.027486,2.599790,6.173413,4.110878,3.095101,2.145284,-2.950425,-3.894144,1.725836,-9.677246,-9.032715,-7.964049,6.847544,-1.176102,6.084506,-5.827494,-4.257845,-2.842956,8.858958,9.410233,0.746734,-2.222609,-9.167124,4.911965,-7.861321,8.121736,-7.038733,4.510644,7.763888,-0.429477,-7.672978,-8.200942,-3.083296,0.985502,-4.554480,1.737905,0.350826,-0.918843,-8.756690,7.864365,1.903693,2.484850,-0.221671,5.229551,8.414420,-4.904121,6.871390,-4.959056,0.924195,7.590412,-7.628286,9.993319,-3.107777,9.059953,8.523425,-9.166851,8.219661,8.500908,-5.061438,6.444631,-4.431283,4.433996,7.991146,-9.169597,2.079525,-8.051782,-4.768988,6.478680,9.153461,5.762520,5.872653,9.714493,-7.527095,6.441902,-1.502780,-8.929566,-3.368989,-0.405295,4.943982,7.646249,-8.452914,1.295814,5.263508,9.282954,3.126045,-3.091633,-1.403665,-1.915499,-9.427868,2.904048,-1.585762,2.153844,-7.858639,-2.762652,-1.371496,-1.787274,-7.712002,6.621099,8.537457,-4.290131,-4.106913,4.175539,8.174729,3.544775,7.843887,-5.858087,-3.226589,9.352638,8.524621,-2.074442,0.549791,-4.869074,-3.833803,1.805727,-6.191095,6.019379,-1.722570,-2.042644,-6.580959,0.010407,-6.154871,6.675269,-1.989477,8.041251,3.038341,3.960463,5.636776,-0.567136,-1.335690,2.295805,3.665486,7.746035,5.313156,7.835304,9.110536,-5.355737,-4.470039,-3.064459,-5.844685,-4.366557,7.454319,-3.362367,9.960508,0.682256,-4.630127,9.022736,6.711610,-2.555332,-4.867331,-5.164095,-4.836449,3.971493,-7.876839,3.411294,-1.638335,-8.599156,-1.792559,-0.143087,6.090123,9.141809,-3.957978,-1.648485,1.837007,-6.361487,-2.740103,9.507868,8.007351,-1.546192,-0.585191,-5.407809,8.993618,-5.282091,1.744743,-6.723814,-6.938699,0.417238,-0.342084,-5.169251,-0.572668,3.473626,3.216643,8.499394,4.857446,6.707717,-0.254814,-3.553096,-9.479131,8.210874,6.263409,3.989500,5.475971,-6.792152,-4.548097,2.828435,-3.620741,3.571874,6.747782,-8.023012,-8.091011,-0.382835,-3.426126,5.566241,6.302808,-5.463400,-9.855585,0.427572,-6.217053,0.273677,-1.543095,2.082733,3.390167,9.710615,-6.777806,0.179036,8.015220,4.016728,2.958889,-1.824226,1.726760,2.396667,-8.892610,0.589738,7.072261,6.050904,0.383234,-3.840800,-9.367495,7.656629,9.805587,0.302806,-5.694884,-6.082195,0.295056,-2.283004,-7.164819,-9.357247,-7.457689,4.703980,-5.696835,-6.291083,-1.428755,-5.953531,-5.134253,0.473295,4.681869,-6.263969,6.427112,0.978091,1.649334,8.134982,1.342171,2.280002,3.993412,3.796889,4.145799,9.152353,-7.475270,-9.388261,1.936246,5.085662,2.377560,-5.920985,-1.908089,9.482891,0.370005,7.491970,2.276359,2.304937,-7.456752,-1.857966,-2.814452,8.258716,-8.798868,9.579436,5.806835,-1.092789,-9.746121,4.383942,-9.934226,-1.881423,1.297294,-0.561523,-9.369676,4.824246,0.081323,2.716338,6.381519,-7.242213,-5.387223,8.142229,-7.086293,-2.054537,-4.935127,-6.087316,6.777335,-0.541421,-6.529643,0.918002,-4.279909,4.822405,-6.436283,5.304071,7.146663,2.460787,3.194466,7.714125,-0.566019,-2.418807,0.262905,7.393952,-3.828917,5.586954,0.281278,8.220870,4.778792,6.641521,1.997047,8.128448,-9.785547,8.465778,9.003009,-1.353673,-4.317654,-5.514035,1.212370,-5.781941,-6.681179,-1.983703,-1.132493,4.885391,5.922749,-3.221235,-8.031988,6.105077,-6.852400,-5.411332,-4.902616,-8.314295,-9.674872,-9.611620,-4.504289,0.836647,5.294513,-5.483480,9.688529,4.859023,-4.547136,-7.232488,-1.716914,-7.154099,-3.390690,-9.420856,2.349151,7.522334,-2.370491,8.682893,1.881792,0.424468,-9.990758,-7.004780,5.770224,-3.988098,6.166967,-6.649543,4.406223,3.830124,-5.790434,-2.525070,-3.434413,9.711795,7.996517,8.193580,2.033286,6.916548,5.014533,0.250225,-4.054043,-8.898875,-2.983484,1.420974,3.763544,2.464296,-6.547641,6.947288,-4.629393,0.158187,5.762054,-9.838987,7.471285,5.821737,4.355384,-2.607595,-7.482417,-5.911174,2.321317,-2.667350,-7.625806,-1.215843,7.444246,7.191480,-5.715319,-4.544593,5.037927,-4.095630,-9.972658,2.399158,2.830300,2.183183,1.026787,-9.120452,0.195259,3.325948,9.580414,8.882245,-8.256164,-0.463788,1.186603,-0.289107,3.541438,-9.408278,-1.936381,5.254195,6.712366,-4.025265,-6.333344,3.981054,3.590314,0.874032,2.780757,-4.556695,8.107830,-3.681129,3.398097,-5.799699,-7.211082,-4.357282,-7.584059,-7.152892,9.836951,-9.124681,5.157583,0.260836,1.638992,6.084018,4.013825,-3.891907,-1.417915,-7.164252,7.501575,-8.083572,4.751134,7.046154,5.564819,7.612546,-4.445213,-1.302505,0.217478,-1.375709,2.481502,1.743492,2.029752,4.251403,3.191020,6.175289,-5.856509,-6.399068,5.592278,-4.832539,8.494707,8.598566,3.571420,1.963343,1.918180,1.669339,-2.762813,-1.752632,-8.549898,8.765770,4.363041,0.658048,2.958446,0.380719,3.003149,9.038485,9.978081,-4.109512,-4.641101,4.136460,9.420416,-8.253333,-8.257311,-2.634978,9.024201,-9.603696,-9.178714,-3.289879,1.720270,-7.593643,1.889659], dtype = "float64")#candidate|11751|(1260,)|const|float64
const_11752 = relay.const([[8.901848],[4.242820],[-1.715761],[-3.085427],[-1.739650],[-8.619813],[5.273814],[-0.803738],[-9.130511],[7.508627],[-0.075544],[-5.913252],[3.670895],[-9.594828],[3.936706],[-6.939014],[-6.795103],[7.212049],[-9.295039],[0.251033],[-4.688396],[-9.291844],[-9.462551],[-1.616874],[0.099157],[-8.631457],[3.860169],[-1.249221],[-3.249666],[2.077410],[1.459238],[1.379821],[8.737638],[-4.757978],[-4.694906],[-7.822453],[6.875594],[-7.306878],[1.450815],[-6.047039],[-9.630437],[-6.897934],[4.531129],[-0.969144],[5.151239],[9.744865],[-1.538083],[-3.690662],[-6.435251],[7.339880],[5.349356],[2.856008],[-2.152235],[-2.466413],[-5.380421],[-4.750872],[-1.632625],[4.365078],[9.961935],[7.307368],[3.311315],[5.172715],[2.804521],[3.972852],[2.030866],[7.728531],[-4.677034],[1.630563],[-8.139620],[-9.265438],[1.452450],[-5.356143]], dtype = "float64")#candidate|11752|(72, 1)|const|float64
call_11750 = relay.TupleGetItem(func_11467_call(relay.reshape(const_11751.astype('float64'), [1260,]), relay.reshape(const_11752.astype('float64'), [72,]), ), 1)
call_11753 = relay.TupleGetItem(func_11471_call(relay.reshape(const_11751.astype('float64'), [1260,]), relay.reshape(const_11752.astype('float64'), [72,]), ), 1)
func_2889_call = mod.get_global_var('func_2889')
func_2893_call = mutated_mod.get_global_var('func_2893')
const_11756 = relay.const(-8, dtype = "uint16")#candidate|11756|()|const|uint16
const_11757 = relay.const([8,9,1,9,-10,-7,-2,4,-9,10,9,-7,-6,-10,-6,4,-6,-7,5,-8,-2,9,-3,2,10,-1,9,1,-1,-10,9,2,-1,4,-6,-2,-9,-2,5,-6,6,-1,7,2,6,6,10,-3,-6,-6,1,-3,-8,-5,-9,-8,-8,1,5,-3,5,-8,-7,5,-10,-8,-6,1,3,7,-7,-6,5,10,1,3,-5,3,2,5,-9,-2,1,-1,1,6,-4,-5,-2,-1,10,-2,-4,5,3,9,3,8,-7,10,-6,6,-3,-3,7,9,-9,-10,-6,-1,9,2,1,7,7,-6,6,-7,4,-5,3,6,-4,4,-5,10,3,7,-10,-2,2,1,1,-10,-7,3,8,9,10,-2,8,-1,4,7,-2,10,-8,-5,-1,1,7,-8,-7,-9,-2,-4,-2,3,2,-9,-2,10,4,-6,-8,4,5,2,-1,-1,-1,3,-1,-9,-8,-7,1,-10,-1,-9,7,6,-5,4,-7,-9,1,2,-10,-2,3,-1,-9,9,-9,-8,-2,-8,3,5,8,-8,5,8,-3,6,-4,-10,7,-10,10,3,-4,-10,-5,-7,-6,2,5,9,-4,5,1,8,9], dtype = "uint16")#candidate|11757|(225,)|const|uint16
var_11758 = relay.var("var_11758", dtype = "bool", shape = (5, 84))#candidate|11758|(5, 84)|var|bool
call_11755 = relay.TupleGetItem(func_2889_call(relay.reshape(const_11756.astype('uint16'), []), relay.reshape(const_11757.astype('uint16'), [15, 3, 5]), relay.reshape(var_11758.astype('bool'), [420,]), ), 1)
call_11759 = relay.TupleGetItem(func_2893_call(relay.reshape(const_11756.astype('uint16'), []), relay.reshape(const_11757.astype('uint16'), [15, 3, 5]), relay.reshape(var_11758.astype('bool'), [420,]), ), 1)
output = relay.Tuple([call_11733,call_11750,const_11751,const_11752,call_11755,const_11756,const_11757,var_11758,])
output2 = relay.Tuple([call_11734,call_11753,const_11751,const_11752,call_11759,const_11756,const_11757,var_11758,])
func_11762 = relay.Function([var_11758,], output)
mod['func_11762'] = func_11762
mod = relay.transform.InferType()(mod)
var_11763 = relay.var("var_11763", dtype = "bool", shape = (5, 84))#candidate|11763|(5, 84)|var|bool
output = func_11762(var_11763)
func_11764 = relay.Function([var_11763], output)
mutated_mod['func_11764'] = func_11764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11138_call = mod.get_global_var('func_11138')
func_11140_call = mutated_mod.get_global_var('func_11140')
call_11782 = relay.TupleGetItem(func_11138_call(), 0)
call_11783 = relay.TupleGetItem(func_11140_call(), 0)
output = call_11782
output2 = call_11783
func_11789 = relay.Function([], output)
mod['func_11789'] = func_11789
mod = relay.transform.InferType()(mod)
mutated_mod['func_11789'] = func_11789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11789_call = mutated_mod.get_global_var('func_11789')
call_11790 = func_11789_call()
output = call_11790
func_11791 = relay.Function([], output)
mutated_mod['func_11791'] = func_11791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11012_call = mod.get_global_var('func_11012')
func_11014_call = mutated_mod.get_global_var('func_11014')
call_11798 = func_11012_call()
call_11799 = func_11012_call()
uop_11845 = relay.exp(call_11798.astype('float32')) # shape=(7, 4, 11)
uop_11847 = relay.exp(call_11799.astype('float32')) # shape=(7, 4, 11)
output = relay.Tuple([uop_11845,])
output2 = relay.Tuple([uop_11847,])
func_11854 = relay.Function([], output)
mod['func_11854'] = func_11854
mod = relay.transform.InferType()(mod)
output = func_11854()
func_11855 = relay.Function([], output)
mutated_mod['func_11855'] = func_11855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11682_call = mod.get_global_var('func_11682')
func_11683_call = mutated_mod.get_global_var('func_11683')
call_11870 = relay.TupleGetItem(func_11682_call(), 0)
call_11871 = relay.TupleGetItem(func_11683_call(), 0)
output = relay.Tuple([call_11870,])
output2 = relay.Tuple([call_11871,])
func_11876 = relay.Function([], output)
mod['func_11876'] = func_11876
mod = relay.transform.InferType()(mod)
output = func_11876()
func_11877 = relay.Function([], output)
mutated_mod['func_11877'] = func_11877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10857_call = mod.get_global_var('func_10857')
func_10859_call = mutated_mod.get_global_var('func_10859')
call_11900 = relay.TupleGetItem(func_10857_call(), 0)
call_11901 = relay.TupleGetItem(func_10859_call(), 0)
func_5861_call = mod.get_global_var('func_5861')
func_5865_call = mutated_mod.get_global_var('func_5865')
const_11916 = relay.const([[-2.092341],[6.910772],[3.632812],[-2.519540],[9.739230],[4.305894],[-2.494266],[3.548525],[9.666870],[-5.120026],[9.385320],[0.615676],[7.702148],[6.124971],[-4.782972]], dtype = "float32")#candidate|11916|(15, 1)|const|float32
var_11917 = relay.var("var_11917", dtype = "float32", shape = (135,))#candidate|11917|(135,)|var|float32
call_11915 = func_5861_call(relay.reshape(const_11916.astype('float32'), [3, 5, 1]), relay.reshape(var_11917.astype('float32'), [3, 5, 9]), )
call_11918 = func_5861_call(relay.reshape(const_11916.astype('float32'), [3, 5, 1]), relay.reshape(var_11917.astype('float32'), [3, 5, 9]), )
output = relay.Tuple([call_11900,call_11915,const_11916,var_11917,])
output2 = relay.Tuple([call_11901,call_11918,const_11916,var_11917,])
func_11926 = relay.Function([var_11917,], output)
mod['func_11926'] = func_11926
mod = relay.transform.InferType()(mod)
var_11927 = relay.var("var_11927", dtype = "float32", shape = (135,))#candidate|11927|(135,)|var|float32
output = func_11926(var_11927)
func_11928 = relay.Function([var_11927], output)
mutated_mod['func_11928'] = func_11928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11956 = relay.var("var_11956", dtype = "uint16", shape = ())#candidate|11956|()|var|uint16
const_11957 = relay.const([[[4,9,9,-1,9,-2,5,-3,5],[3,1,-5,-9,-4,-3,-4,6,-6],[9,9,-5,-8,-6,9,-4,7,4],[-6,5,4,10,4,-3,2,-8,-10],[2,3,-9,-1,-3,-2,-10,-1,-8],[-10,-5,6,-7,-10,7,-7,-7,9],[3,1,-10,-4,-1,5,10,-10,2]],[[-4,4,3,5,-2,-4,-10,-5,-2],[6,-5,-3,-8,8,9,-6,10,-1],[3,6,-8,-8,-5,9,-8,-7,4],[5,-4,-2,4,8,-7,-8,-4,-6],[3,3,9,-7,-7,-1,-4,-2,1],[1,-1,-1,9,1,-2,-8,-2,-4],[2,-9,-6,1,1,10,7,-9,-4]],[[9,8,7,-6,6,5,-1,1,-10],[-4,-9,-4,7,4,-2,-4,10,-10],[3,-5,5,9,8,8,7,9,-7],[6,-4,7,9,-8,5,-7,5,-7],[1,-10,6,-9,2,-8,8,-2,-6],[-2,-2,3,10,6,-1,10,1,-3],[8,7,-7,-8,10,-1,8,-9,-4]],[[8,4,1,-8,-9,9,-3,3,8],[6,-9,5,-3,5,-5,-6,-5,6],[-6,-5,1,-7,2,4,-2,-7,7],[2,6,3,6,-4,-10,5,5,2],[-5,-10,-9,-8,-7,3,-8,7,10],[-7,9,-5,4,-6,-1,2,-7,4],[1,8,-8,3,6,10,-9,-2,10]],[[9,9,-10,-6,-6,-9,1,-2,-7],[10,6,1,1,5,-10,1,1,-7],[-10,-5,7,7,-3,9,-9,3,4],[-3,4,8,-5,3,9,-8,4,5],[9,-1,9,4,8,5,-9,-7,-8],[-7,4,-10,-10,1,-2,-9,-6,-3],[10,-5,5,2,-10,-7,4,3,5]],[[-10,-10,1,5,10,10,-6,-1,1],[-3,-9,2,3,-1,-5,-8,1,3],[-9,-2,10,2,-2,-9,8,6,6],[3,-7,4,1,4,-9,4,7,-6],[-5,3,1,10,3,-5,7,8,4],[-5,-3,7,-8,-7,8,-2,-2,-2],[-4,-10,-2,5,5,-3,-5,-4,-9]],[[-8,3,-4,1,-5,8,5,10,10],[-2,-1,-8,4,7,2,10,-5,-9],[3,2,2,3,-1,-3,-7,5,2],[6,-9,-5,-9,2,7,2,1,7],[-3,1,7,6,-10,4,6,-7,3],[5,8,-7,-9,4,2,-3,4,-10],[9,5,-6,-1,-8,-7,-2,-4,-2]],[[-3,9,-2,1,-7,-1,-5,4,-2],[-10,-3,9,9,4,2,-4,6,-4],[-6,6,-9,-4,-9,-6,-1,2,-3],[5,6,7,5,3,-7,-2,2,-8],[-6,7,3,6,10,-7,3,-6,3],[-7,9,10,8,10,-9,-3,3,10],[-5,-7,6,-7,7,-10,-1,7,-6]],[[5,-8,-4,-3,1,8,9,10,6],[1,-7,-9,1,3,-7,6,2,6],[2,-4,-3,-6,4,2,2,-3,4],[-5,1,4,8,9,5,-8,5,1],[4,4,-3,-10,-10,3,7,2,7],[-8,-7,7,-4,-10,-6,-7,-10,10],[7,-10,5,2,1,-1,-9,5,6]],[[7,-6,-9,10,5,-6,5,5,10],[-9,3,6,2,1,-9,-9,8,-5],[-10,-2,-9,9,10,9,5,4,-10],[10,-6,-9,-1,-3,-6,6,5,8],[-4,8,-1,6,7,-4,10,10,6],[-1,2,5,-2,1,-7,-1,-5,7],[-8,-4,2,-5,-1,-8,-8,3,3]],[[-5,1,6,6,10,-8,1,-9,4],[-2,-8,8,9,5,6,-4,-6,-9],[-2,10,10,9,8,6,-3,-3,-1],[-7,6,4,1,-3,10,9,-8,-6],[-1,-10,4,10,-2,8,-1,4,8],[-7,6,8,-3,10,8,-2,10,7],[-7,1,8,-3,-6,-6,6,5,-5]],[[-8,10,4,3,-8,-7,8,1,-3],[1,-10,6,-3,-1,-2,1,-7,-7],[10,6,-4,-4,8,2,-6,9,1],[-2,-8,3,9,2,-5,-8,9,-5],[-8,-5,-6,-8,-1,-10,2,9,5],[10,5,4,10,-9,6,4,-4,-10],[8,-3,-5,-1,5,7,-1,-7,-8]],[[10,-1,-9,-2,-10,-1,-7,8,-8],[-2,-8,-7,8,1,-6,-4,-6,-3],[1,7,-2,-4,9,-8,5,-6,-9],[-7,2,-2,-6,3,3,-7,3,-8],[2,5,-5,8,5,2,-8,-10,-8],[1,1,6,-1,-10,6,-1,-1,-10],[9,4,-4,7,5,4,-4,-7,-10]],[[8,-7,8,-6,2,5,-4,1,-8],[4,7,-5,-5,6,3,-7,7,-1],[9,-4,-7,-4,3,8,-8,-9,6],[-6,4,-4,-9,-9,-7,3,-10,-7],[-8,-7,-6,-2,-9,-9,-6,5,8],[6,10,-6,-6,5,8,4,-4,-6],[-7,-5,1,1,-9,-7,8,6,9]]], dtype = "uint16")#candidate|11957|(14, 7, 9)|const|uint16
bop_11958 = relay.minimum(var_11956.astype('uint16'), const_11957.astype('uint16')) # shape=(14, 7, 9)
func_11491_call = mod.get_global_var('func_11491')
func_11495_call = mutated_mod.get_global_var('func_11495')
var_11972 = relay.var("var_11972", dtype = "float64", shape = (384,))#candidate|11972|(384,)|var|float64
const_11973 = relay.const([7.350558,-3.056263,8.963924,-0.474817,-4.829435,7.272298,-0.137754,6.008121,-9.241007,8.423172,-3.281401,-4.142087,3.488977,3.549402,-6.082018,-3.416925,7.904536,-4.340977,6.520282,6.054317,1.542389,2.638307,-3.002494,-9.003693,1.946796,7.699674,-1.109634,-5.467004,-9.983994,5.499812,-2.688287,-5.186734,-6.823128,-5.084447,-2.852178,3.010895,7.038156,0.148087,8.757598,-7.700621,2.722658,9.237871,4.125916,4.147743,7.622047,-7.576764,2.908189,2.197345,-0.631689,7.681209,6.690534,-8.913999,0.946743,-7.020315,2.777852,5.297658,7.098055,9.964783,-7.930354,-8.026100,9.186070,4.275256,8.418240,-6.595306,4.895768,-8.269306,-7.934200,9.783379,-6.317323,1.805554,-2.400342,7.912404,6.268591,-0.919531,6.805902,5.328191,-4.132576,6.717744,2.201718,8.606031,-0.220334,-3.112647,-5.981117,-9.398322,2.907967,4.410967,5.595043,7.913525,5.478174,-1.681854,-0.761897,2.488195,0.335813,6.140218,-3.502088,3.459873,-6.446207,1.810928,9.505469,-9.403706,4.089696,-3.439411,-6.471934,9.320761,3.355088,-0.147348,8.129720,-0.831010,3.629064,-2.861556,-7.267375,-0.403352,3.440304,-7.120149,7.582421,6.080664,-4.034601,5.754793,-3.530286,-2.389014,8.560295,5.793226,-5.218257,4.429067,9.151132,0.982065,8.809005,3.309075,2.861913,3.219117,-5.544588,-3.661492,-0.912464,3.368896,-7.978355,-5.968060,-2.545004,8.123675,-0.960355,-4.206018,-5.879701,1.983920,9.972488,-4.101981,-2.635342,-4.929262,-9.378417,5.888833,-8.141664,9.947999,-7.373930,-4.481316,-3.202199,1.405489,-7.168837,-8.443741,7.414997,-7.886261,-6.532961,-3.247607,-3.018761,1.391086,3.122700,4.850737,9.946887,-5.908845,3.636737,7.583597,-3.060307,-1.320790,-1.999228,4.193466,-0.876291,6.711690,-9.988001,-7.594650,-4.028903,-7.234773,-0.771733,0.852490,-0.142216,-9.259233,6.595806,9.721959,-4.175198,-3.050598,9.519765,8.314012,-0.129488,-0.279278,-5.615104,5.634754,2.457943,-6.459466,-3.854978,6.357771,2.033076,-1.681554,9.710165,2.266805,1.170101,9.478125,5.724333,-4.879329,5.937749,7.823122,8.367773,-9.929379,-7.949743,1.720706,-9.883481,2.495432,-4.359765,-5.811419,-6.246483,2.048980,-5.254652,-6.798181,5.814713,0.366495,6.007360,-1.533117,6.665693,5.698835,6.459855,-3.698743,-4.393239,-4.628102,7.230259,-6.720918,-1.623363,2.035619,-4.713989,-0.184027,1.281599,-2.770358,-4.798917,8.175957,4.869739,9.185506,3.882238,1.887198,-1.934663,-8.358124,-7.898839,3.918626,1.340122,0.271457,-6.137697,8.802114,5.160182,-4.556496,8.780176,-0.889304,9.759389,1.790155,9.834209,-6.791165,-8.833987,-2.545384,4.945166,2.237173,-4.769815,3.225651,8.144833,-8.733085,-1.701820,-5.459083,7.250501,0.984887,7.911592,5.853270,7.982085,-6.264266,5.343949,-5.829875,-4.793030,7.856835,2.944781,0.330237,5.148290,9.912270,-7.851408,7.937138,-4.114633,-9.086944,-1.468541,8.234793,4.889148,6.996152,-8.520894,-0.005301,-6.039668,1.763728,-7.872351,-8.249582,0.539478,5.350268,4.330338,1.008174,0.520374,8.053495,5.901105,9.037599,-9.008917,6.439902,8.159951,8.238844,2.705768,4.886116,3.304374,-1.273092,9.680110,9.164913,-2.369533,4.770999,-4.025136,3.576526,1.146922,8.192463,-8.008154,-5.503973,-6.575323,0.978825,-1.644754,8.045258,-1.660705,-7.804209,5.603764,-3.310409,-6.680127,-4.259194,4.509019,8.284550,-7.272210,-3.411415,5.770978,-2.163398,3.093555,-9.070562,-1.991673,6.930928,8.074891,9.895301,3.293586,-2.649232,3.754309,6.323403,6.028305,5.407725,8.290513,-4.495288,-7.629626,-0.234092,-6.712780,7.615454,-0.747820,2.222345,0.559537,-5.785218,-9.895058,-5.076134,1.258331,-6.491004,-4.312698,8.351255,-1.131643,2.357717,-4.985758,-9.037848,-2.290501,-4.959829,-0.506567,-3.332669,-9.226805,2.441411,6.364599,-0.667030,4.025883,7.206064,-0.064297,7.246135,-6.118547,4.035118,-6.347463,4.869412,8.617952,3.236734,0.895045,4.589860,-6.723885,1.108803,9.674174,2.765577,-0.504240,-4.803044,1.951471,8.346469,-8.538306,-5.077135,-3.997392,9.670004,4.568462,-2.024806,-9.624596,-5.787879,-1.784379,1.251438,2.939985,-0.285274,7.640729,-1.222757,-9.128578,8.791048,-9.954618,5.674050,3.316808,5.222684,2.194522,-0.454884,0.785946,-7.903339,-9.135195,2.425897,-3.373057,0.340271,4.055561,-8.579769,-2.447585,-9.986859,-6.064661,9.660294,7.231525,-7.145419,-5.105713,-8.303377,-7.644784,4.815169,-2.469112,-1.258777,-6.931965,7.610823,-4.520118,8.276544,8.366975,9.685710,4.727069,7.365954,6.822132,5.410014,-0.746557,-6.647923,0.002596,6.352356,-0.761952,-1.623319,-4.453942,-1.151455,-9.859958,5.240665,-8.020597,8.348511,5.555724,-3.258877,-0.509377,5.555619,4.815938,1.731113,2.225998,6.206435,4.592843,2.553124,2.282465,-1.750529,1.422402,0.233415,-7.912037,-3.675412,7.059130,9.493184,-5.519289,2.501661,-1.995973,-1.676546,2.507832,5.201740,-3.600722,-5.520401,2.260871,6.355477,-9.843312,-9.582200,4.522687,7.882210,9.293794,-8.732988,2.707119,5.994248,5.446670,5.665385,6.595089,3.427774,3.945574,5.110163,-6.848536,-6.776302,4.790584,1.457248,9.991475,-2.778913,2.771929,-1.986061,-6.211423,-0.826976,-6.064825,-1.264739,4.876835,5.236235,-8.730768,7.854307,9.449227,1.787705,-1.160427,5.029113,3.819205,-0.599052,-8.619297,5.958143,-7.045134,-2.494874,-8.141374,8.361193,-6.214710,-3.018295,4.465905,5.807698,4.879098,-5.849882,-3.066481,8.065107,9.563317,-2.199916,7.022246,-0.387486,-1.137072,-8.183739,0.491141,-5.237531,-7.469805,-9.113217,-9.334322,-8.915506,2.104359,6.162314,-0.178062,7.965390,-4.561157,1.591855,-0.385253,2.007542,2.238755,8.330163,8.274081,-5.294932,-8.323551,-8.529950,5.553786,7.046002,1.451147,-3.465610,3.586889,7.503703,3.004207,5.133774,-8.707809,-7.202564,-4.371954,-6.077999,1.838008,1.232444,-9.085350,-8.792996,-1.708342,-5.597207,-7.132126,2.553743,-9.957448,6.730840,-0.173462,6.763727,-8.088189,-1.458246,3.104287,-3.854651,1.179855,6.443914,5.155716,1.575732,7.984768,1.617026,-0.813972,5.918453,9.607156,6.712950,-2.435249,-3.229690,-2.696137,1.961912,-9.757638,0.442052,-9.927739,4.272325,-3.538090,5.658962,-0.190889,-7.409919,-6.777241,1.860560,-2.986022,7.280717,-6.477675,2.754100,-2.006062,-5.898711,9.527771,-2.841175,-7.020777,9.829670,5.986282,-0.147945,-2.747208,-5.721552,6.315442,-2.369827,-5.089280,-3.303296,-5.410806,-8.510864,-5.520927,1.114278,-3.800930,8.992683,5.180284,5.865120,-3.172562,-9.069109,-3.683906,7.299211,-5.684282,-3.718500,7.628376,5.566868,-8.216096,-8.628638,3.894588,-6.214131,8.095795,-5.484958,3.680304,7.076253,-9.817657,-8.902582,8.145724,-3.223710,2.927839,-3.109304,3.309176,-6.143953,0.180342,-3.236391,-7.483516,-1.992568,9.448487,-3.988936,9.875685,-0.401285,6.913535,-7.591543,-2.465512,8.553512,1.779471,-3.460102,6.395313,1.001426,0.673689,5.368193,-1.613124,6.452593,7.348457,-8.693191,-8.031935,-9.447401,3.653113,-9.364302,8.161163,-9.531683,0.737631,9.632091,6.158187,-2.526328,-2.526562,9.167379,8.845773,-4.235485,-9.966870,7.559323,3.589034,8.963801,5.019270,-1.085768,9.522864,9.889856,0.632619,1.676028,3.333627,5.887967,-9.618382,4.304866,-1.069809,-8.636042,-0.471194,9.610289,8.613979,5.998349,-7.939186,2.422317,-4.072000,-4.926255,4.745189,-9.007337,7.634440,-3.624218,-1.278151,-9.106530,-3.642986,-3.617134,-1.901491,-1.272901,-3.741611,-0.561912,-5.996729,-1.607291,8.853904,-1.205649,-5.214350,9.045203,6.615463,0.475329,1.886394,-5.477022,-8.292026,4.787603,-7.316021,-0.984617,4.362379,3.567496,-9.604369,-6.955267,-4.737604,-5.793428,1.292037,4.121300,-2.093932,6.930940,-1.762723,4.028906,-8.245429,7.311712,-8.255132,1.977825,3.587235,0.683933,-8.088778,6.378850,7.135741,9.640598,6.130434,6.115166,-9.432729,-4.479360,-6.342165,0.143402,-3.166983,0.666025,2.754020,-5.608071,0.584868,-1.008723,3.395378,-8.323038,-3.493129,7.182154,-9.480250,6.031082,0.787936,9.732839,0.855532,-7.508595,-2.444528,-0.743530,-1.267297,-2.837956,1.516941,7.126891,-7.852724,1.697800,-4.117397,-4.744049,5.923153,8.023095,6.142453,-1.340567,8.007248,-1.629052,-8.571365,7.182749,2.283017,-3.990823,0.671673,8.015659,7.884400,-6.211390,-9.310410,5.974247,-2.235596,-9.917205,7.791056,-7.531311,-0.224926,-4.036391,4.943398,0.343809,3.101990,7.677429,-7.469101,-7.814873,0.097822,1.484582,-2.290400,6.036099,8.200365,-1.493436,-5.802621,1.809826,-2.814836,5.041995,-0.317528,-1.227459,-7.296669,-2.654959,9.676856,4.981439,8.857075,-6.591568,3.351397,-5.146513,0.245956,9.788606,1.464353,-1.439736,6.186609,8.601742,9.716379,2.965524,-8.552928,-1.809416,5.255336,-6.187237,-9.468953,-4.181945,1.400158,-3.651576,0.704884,-5.340892,-1.732822,-1.454528,2.590284,8.801714,-6.980861,-4.080457,-9.394980,-1.358675,-5.141076,-6.359698,8.525960,-0.300830,7.633984,3.591697,2.300590,9.526375,6.852633,3.641242,-9.859588,6.678892,3.431442,7.688837,-5.522697,8.782805,-1.572648,0.969850,-7.345107,-2.684355,-4.250216,4.498768,-0.513978,4.381613,-0.212017,-4.762174,-9.576744,9.547788,6.397070,9.448702,-1.881053,4.487958,5.609571,-0.866801,-4.316033,5.713346,3.015079,-9.548915,-9.231984,8.106992,-0.492850,4.607345,5.506470,4.287254,2.377162,-2.789438,7.365551,-8.559271,-6.414325,8.931486,-6.385437,0.221222,9.025690,8.274849,7.192416,-2.335564,-9.332841,-6.444433,6.352463,-1.748735,7.384447,-3.754774,-2.789482,3.766415,-8.051955,-3.136987,6.005428,-9.480549,8.949586,-2.591470,-4.553769,7.615935,-0.696146,-4.384454,1.612666,-8.949217,1.768740,8.199332,-9.987737,-1.169671,6.377093,2.999513,-4.871903,8.323334,4.292901,-2.175191,7.008044,-7.797349,-6.035289,1.062011,5.770031,-0.433287,-6.574252,0.324646,-5.123155,5.660425,-2.369793,-4.937298,-6.765273,-4.506029,-2.564623,2.459408,-2.582872,0.028628,-9.416931,-1.346488,1.537959,-1.776246,7.669996,-4.552175,9.483027,1.373542,-5.331851,-0.036906,-9.488202,-7.179893,-7.245277,-7.223857,6.613192,1.811485,-6.174877,6.835189,-8.139336,2.856154,7.618337,9.177548,-8.386863,-2.140857,-8.767990,9.402482,-4.446209,8.133064,-2.634341,9.799166,-7.975211,9.277189,0.017816,-6.207129,9.239522,2.970402,0.177276,2.208752,3.933149,-8.735932,3.313755,-1.463800,5.985220,-1.818585,9.024229,6.755974,-4.383544,-0.923071,5.355924,6.182821,6.803004,-8.233298,4.587349,-1.860674,5.246245,-6.323961,-1.966779,-6.011414,0.161369,5.731389,4.374055,-2.562301,-5.080565,5.968858,0.840609,-8.282298,2.260851,8.468324,-4.442121,2.501760,-8.554987,-9.155958,0.328637,-6.872534,4.962961,1.271686,-9.382690,-5.419831,0.098372,-1.325216,-8.190321,0.463845,2.413238,-2.200307,-8.388775,-3.241610,-5.270478,3.185562,8.444166,-9.500880,-4.557850,9.476061,5.936117,7.386884,1.827503,7.255006,-6.767236,6.256945,0.681837,0.566353,-7.926475,-8.270260,1.460439,-3.413023,3.504276,7.996748,-6.628583,-0.897168,3.829364,-7.782291,3.824758,-8.675985,-9.818646,-5.941693,-2.499074,7.722368,4.117309,2.714818,-2.805801,2.163300,-4.415395,9.650734,-7.691831,-0.361858,9.251205,-4.874911,-7.110152,-7.313460,1.291058,-8.643791,-0.836792,-3.929153,7.097907,-2.938057,3.834055,7.692372,8.536091,-0.191436,-4.046259,6.775061,-3.293973,-5.782747,-6.071574,9.855575,8.431882,7.673215,-6.471759,8.124382,4.107394,2.846224,-6.817008,-2.744999,8.929577,0.455404,7.446557,1.882020,-4.498688,-8.512656,-5.446601,-9.763539,9.019044,4.633579,7.600025,4.186677,9.455247,4.091155,6.510697,6.387735,0.449713,-0.349715,5.802786,-6.008131,-2.613165,-7.453798,-8.596087,-3.944558,8.263868,7.906258,5.904997,3.328442,2.082780,-7.485508,7.927183,5.542516,-8.434828,7.952162,0.117323,7.847307,3.920638,-0.150944,6.112210,0.581507,1.303625,5.828640,-2.038062,8.616217,-8.759666,-0.203152,0.742990,-6.711722,-7.710974,7.865693,8.898835,7.543918,-5.554498,-5.816798,-0.624343,-6.640686,5.037255,-9.166357,0.336870,5.686277,4.677025,7.715650,-3.716719,-6.533973,9.465425,-4.232703,9.473600,0.283535,-3.646990,8.902553,-6.081520,-7.493836,7.677243,7.832254,-8.199001,-4.015635,-4.703694,-8.294261,8.732676,4.566513,-6.672194,5.462358,0.692861,6.383772,0.446546,0.695375,1.828874,2.897005,-4.180789,4.020920,3.563909,8.832722,1.550127,-4.027316,-7.322610,7.179689,-7.898009,-3.184218,-6.217459,3.878276,-3.703849,5.415983,-4.089929,6.330570,3.762065,0.294050,-0.087958,-7.013078,-4.555480,8.680555,2.029457,9.474641,1.087511,2.223570,5.235602,6.196696,8.583880,2.919251,3.024321,4.158532,9.700004,-0.619210], dtype = "float64")#candidate|11973|(1260,)|const|float64
const_11974 = relay.const([3.305405,-4.846712,-6.783690,-1.498577,-1.641464,8.129145,-1.797261,0.667793,0.249693,0.130445,9.516985,1.038954,3.699159,4.259767,-0.618102,-6.535608,3.028657,-2.052410,-2.832246,1.258648,0.291722,8.172326,-7.338524,1.149568,0.512082,-6.691387,4.542456,-0.316865,4.191474,0.609455,-2.733170,-1.109602,8.132305,3.413889,5.655345,-7.263164,9.965006,3.798974,-5.803442,6.054837,6.193817,5.289197,6.750155,-1.918768,7.255702,5.004292,9.378909,2.694275,-5.680249,5.976980,4.538440,-5.798810,1.328147,-5.024848,9.427956,9.991202,-2.144976,8.610309,-6.294937,-0.725099,-0.054924,-6.569291,9.347579,-2.913852,-5.175090,-5.203866,9.211369,2.192711,-8.504819,-2.780411,3.305804,-1.455245], dtype = "float64")#candidate|11974|(72,)|const|float64
call_11971 = relay.TupleGetItem(func_11491_call(relay.reshape(var_11972.astype('float64'), [16, 3, 8]), relay.reshape(const_11973.astype('float64'), [1260,]), relay.reshape(const_11974.astype('float64'), [72,]), ), 2)
call_11975 = relay.TupleGetItem(func_11495_call(relay.reshape(var_11972.astype('float64'), [16, 3, 8]), relay.reshape(const_11973.astype('float64'), [1260,]), relay.reshape(const_11974.astype('float64'), [72,]), ), 2)
var_11980 = relay.var("var_11980", dtype = "float64", shape = (1260,))#candidate|11980|(1260,)|var|float64
bop_11981 = relay.not_equal(call_11971.astype('bool'), relay.reshape(var_11980.astype('bool'), relay.shape_of(call_11971))) # shape=(1260,)
bop_11984 = relay.not_equal(call_11975.astype('bool'), relay.reshape(var_11980.astype('bool'), relay.shape_of(call_11975))) # shape=(1260,)
output = relay.Tuple([bop_11958,var_11972,const_11973,const_11974,bop_11981,])
output2 = relay.Tuple([bop_11958,var_11972,const_11973,const_11974,bop_11984,])
func_12000 = relay.Function([var_11956,var_11972,var_11980,], output)
mod['func_12000'] = func_12000
mod = relay.transform.InferType()(mod)
mutated_mod['func_12000'] = func_12000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12000_call = mutated_mod.get_global_var('func_12000')
var_12002 = relay.var("var_12002", dtype = "uint16", shape = ())#candidate|12002|()|var|uint16
var_12003 = relay.var("var_12003", dtype = "float64", shape = (384,))#candidate|12003|(384,)|var|float64
var_12004 = relay.var("var_12004", dtype = "float64", shape = (1260,))#candidate|12004|(1260,)|var|float64
call_12001 = func_12000_call(var_12002,var_12003,var_12004,)
output = call_12001
func_12005 = relay.Function([var_12002,var_12003,var_12004,], output)
mutated_mod['func_12005'] = func_12005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10857_call = mod.get_global_var('func_10857')
func_10859_call = mutated_mod.get_global_var('func_10859')
call_12059 = relay.TupleGetItem(func_10857_call(), 0)
call_12060 = relay.TupleGetItem(func_10859_call(), 0)
output = relay.Tuple([call_12059,])
output2 = relay.Tuple([call_12060,])
func_12068 = relay.Function([], output)
mod['func_12068'] = func_12068
mod = relay.transform.InferType()(mod)
mutated_mod['func_12068'] = func_12068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12068_call = mutated_mod.get_global_var('func_12068')
call_12069 = func_12068_call()
output = call_12069
func_12070 = relay.Function([], output)
mutated_mod['func_12070'] = func_12070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11540_call = mod.get_global_var('func_11540')
func_11541_call = mutated_mod.get_global_var('func_11541')
call_12103 = relay.TupleGetItem(func_11540_call(), 0)
call_12104 = relay.TupleGetItem(func_11541_call(), 0)
func_7610_call = mod.get_global_var('func_7610')
func_7613_call = mutated_mod.get_global_var('func_7613')
const_12112 = relay.const(True, dtype = "bool")#candidate|12112|()|const|bool
call_12111 = relay.TupleGetItem(func_7610_call(relay.reshape(const_12112.astype('bool'), [])), 0)
call_12113 = relay.TupleGetItem(func_7613_call(relay.reshape(const_12112.astype('bool'), [])), 0)
func_1935_call = mod.get_global_var('func_1935')
func_1940_call = mutated_mod.get_global_var('func_1940')
var_12116 = relay.var("var_12116", dtype = "int64", shape = (168, 4))#candidate|12116|(168, 4)|var|int64
const_12117 = relay.const([[-6.838120,-3.290680,-8.275182,4.330381,1.243572,-7.652597,-8.638315,9.319920,-7.462053,-8.540806,-8.198083,-5.393999,-3.558838,-0.875920,0.702960,8.831053,4.624775,5.272731,-9.784055,1.281329,-6.659399,0.465203,6.524253,-6.996059,6.977333,-1.513643,7.207406,3.573970,-2.365349,-6.807169,4.149024,-8.745990,-8.063590,-5.619233,-1.433487,-9.002910,9.976150,-2.183348,6.612492,-1.248258,2.568179,-8.332418,1.461677,-6.686822,1.460561,-0.685967,-0.443526,-9.543563,-3.536984,6.145709,-6.982270,5.966157,3.447429,-1.459770,-7.408712,-0.598945,-8.384965,5.365529,-8.400836,0.906503,-8.663223,-8.709754,-8.325261,8.535418,4.513854,-2.908022,9.592595,5.250995,8.578639,8.695338,-8.720679,5.670534,-3.662174,8.380852,5.833863,-3.928444,-5.914759,-8.384438,3.970778,8.711994,6.691075,-0.820704,0.681575,0.416521,-0.109680,6.821409,-7.676947,3.663470,3.985129,4.760963,5.843206,-2.810781,-9.873332,6.474499,1.366081,-1.029043,-2.849881,1.175328,-1.768493,-3.558330,5.564971,-6.561548,-2.402073,-7.219469,-6.231550,-9.677289,1.296916,4.104103,-8.374806,-6.178041,1.265438,-2.138991,8.838384,2.991604,-7.104073,-8.662480,2.726251,-8.666557,-0.405446,1.907778],[-4.489731,9.489565,0.931453,-3.630887,3.781428,1.255184,5.218240,-5.092440,9.885097,7.216914,7.638765,6.337903,-5.572918,-3.832594,-0.499134,9.193824,-2.009259,-3.398443,1.492107,4.546391,7.344969,0.483736,-0.521308,-5.295411,2.729569,1.000827,6.679295,-3.705240,-8.578669,7.147274,-7.502755,-7.434935,9.335940,-3.265993,4.689662,1.729609,-8.794461,1.040901,-8.827866,-0.695131,6.042541,-6.560283,-0.156329,-5.971510,1.471789,8.238919,-9.936975,-1.743394,0.729304,-4.511945,-4.937995,9.375847,-1.205835,8.166436,-8.390911,3.382420,-1.511564,2.041252,-1.542976,3.973749,7.434749,9.243278,-2.261728,2.318146,1.123154,-8.525840,6.711118,-4.107126,1.798660,-2.230894,-5.461965,3.738731,1.250279,8.827067,5.342359,5.509766,-2.724369,-4.754291,0.851644,-0.201202,-6.074512,-1.749759,-6.216383,1.838604,2.153634,-8.933691,9.550885,-9.377165,-0.711571,-2.361029,-7.721543,-2.476156,8.258616,-5.700078,-9.737957,5.996835,6.041431,-7.372528,-9.040204,8.159127,7.559495,4.718504,-4.934093,2.026870,-8.292860,-6.008064,8.857754,4.070885,8.453790,7.974772,-4.663909,-1.202556,5.762244,2.952914,0.752035,6.200155,-0.980423,4.060514,-0.161691,8.663896]], dtype = "float32")#candidate|12117|(2, 120)|const|float32
const_12118 = relay.const([-6.577635,9.019478,-6.522396,2.444544,2.841319,1.174453,-0.697731,-9.451928,8.835189,-7.855705,1.923895,-6.137979,-2.328675,-4.435212,6.126252,9.004930,-6.237333,-8.286768,3.850662,9.266305,7.751754,8.176021,5.404825,2.552075,9.572817,0.391453,-5.076076,-1.638965,6.971597,-9.059695,8.652228,0.551638,-7.408770,-6.139529,5.938928,-9.360091,-9.051409,2.296285,1.966165,5.598674,-3.355855,7.119837,-9.187817,-3.020689,-2.191017,6.097581,-7.120247,3.153152,-2.561358,-8.697706,1.242050,-2.247563,8.165395,-0.211975,0.328731,4.263559,-8.855476,-8.762512,6.689475,-9.786877,4.369290,4.700993,-3.015122,-5.164044,-6.929930,7.970945,3.085452,-5.837713,1.269342,8.585842,-9.287482,-7.270225,-6.375605,7.880440,0.212607,0.514758,1.150583,-4.090693,-3.619185,-8.985345,-4.083568,-3.818734,-3.978747,-5.081111,7.308434,-5.774039,-4.788461,-5.798033,1.694204,-2.834752,-8.566141,5.693101,-2.511287,9.823263,-7.643791,-0.013531,7.742266,-0.515660,1.342371,2.031001,-2.282765,-6.587290,9.425713,4.916015], dtype = "float64")#candidate|12118|(104,)|const|float64
var_12119 = relay.var("var_12119", dtype = "float64", shape = (72,))#candidate|12119|(72,)|var|float64
call_12115 = relay.TupleGetItem(func_1935_call(relay.reshape(var_12116.astype('int64'), [8, 6, 14]), relay.reshape(const_12117.astype('float32'), [240,]), relay.reshape(const_12118.astype('float64'), [104,]), relay.reshape(var_12119.astype('float64'), [72, 1]), ), 4)
call_12120 = relay.TupleGetItem(func_1940_call(relay.reshape(var_12116.astype('int64'), [8, 6, 14]), relay.reshape(const_12117.astype('float32'), [240,]), relay.reshape(const_12118.astype('float64'), [104,]), relay.reshape(var_12119.astype('float64'), [72, 1]), ), 4)
func_11721_call = mod.get_global_var('func_11721')
func_11724_call = mutated_mod.get_global_var('func_11724')
var_12122 = relay.var("var_12122", dtype = "int8", shape = (1248,))#candidate|12122|(1248,)|var|int8
call_12121 = relay.TupleGetItem(func_11721_call(relay.reshape(const_12118.astype('int8'), [13, 8, 1]), relay.reshape(var_12122.astype('int8'), [13, 8, 12]), ), 0)
call_12123 = relay.TupleGetItem(func_11724_call(relay.reshape(const_12118.astype('int8'), [13, 8, 1]), relay.reshape(var_12122.astype('int8'), [13, 8, 12]), ), 0)
bop_12125 = relay.add(var_12116.astype('float32'), const_12112.astype('float32')) # shape=(168, 4)
output = relay.Tuple([call_12103,call_12111,call_12115,const_12117,const_12118,var_12119,call_12121,var_12122,bop_12125,])
output2 = relay.Tuple([call_12104,call_12113,call_12120,const_12117,const_12118,var_12119,call_12123,var_12122,bop_12125,])
func_12138 = relay.Function([var_12116,var_12119,var_12122,], output)
mod['func_12138'] = func_12138
mod = relay.transform.InferType()(mod)
mutated_mod['func_12138'] = func_12138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12138_call = mutated_mod.get_global_var('func_12138')
var_12140 = relay.var("var_12140", dtype = "int64", shape = (168, 4))#candidate|12140|(168, 4)|var|int64
var_12141 = relay.var("var_12141", dtype = "float64", shape = (72,))#candidate|12141|(72,)|var|float64
var_12142 = relay.var("var_12142", dtype = "int8", shape = (1248,))#candidate|12142|(1248,)|var|int8
call_12139 = func_12138_call(var_12140,var_12141,var_12142,)
output = call_12139
func_12143 = relay.Function([var_12140,var_12141,var_12142,], output)
mutated_mod['func_12143'] = func_12143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11789_call = mod.get_global_var('func_11789')
func_11791_call = mutated_mod.get_global_var('func_11791')
call_12197 = func_11789_call()
call_12198 = func_11789_call()
output = relay.Tuple([call_12197,])
output2 = relay.Tuple([call_12198,])
func_12203 = relay.Function([], output)
mod['func_12203'] = func_12203
mod = relay.transform.InferType()(mod)
output = func_12203()
func_12204 = relay.Function([], output)
mutated_mod['func_12204'] = func_12204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11789_call = mod.get_global_var('func_11789')
func_11791_call = mutated_mod.get_global_var('func_11791')
call_12217 = func_11789_call()
call_12218 = func_11789_call()
output = relay.Tuple([call_12217,])
output2 = relay.Tuple([call_12218,])
func_12222 = relay.Function([], output)
mod['func_12222'] = func_12222
mod = relay.transform.InferType()(mod)
mutated_mod['func_12222'] = func_12222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12222_call = mutated_mod.get_global_var('func_12222')
call_12223 = func_12222_call()
output = call_12223
func_12224 = relay.Function([], output)
mutated_mod['func_12224'] = func_12224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12068_call = mod.get_global_var('func_12068')
func_12070_call = mutated_mod.get_global_var('func_12070')
call_12234 = relay.TupleGetItem(func_12068_call(), 0)
call_12235 = relay.TupleGetItem(func_12070_call(), 0)
func_11721_call = mod.get_global_var('func_11721')
func_11724_call = mutated_mod.get_global_var('func_11724')
const_12246 = relay.const([9,3,-9,3,-4,-7,-1,9,2,-1,3,2,1,-1,8,-1,-10,-4,7,-6,-8,-8,-1,-8,8,7,1,1,7,-7,1,-3,2,-9,-3,-2,9,-9,-10,-3,-8,-8,-10,-1,2,-2,-7,4,-2,-2,10,-5,7,9,-3,-6,3,-10,-2,1,-10,-8,10,10,-5,-9,8,1,-10,-3,-3,3,-2,2,-5,-9,-8,6,7,9,8,-6,-2,4,-9,4,-5,-1,-2,-8,-6,4,3,1,5,3,-8,2,10,-3,-10,-3,3,-9], dtype = "int8")#candidate|12246|(104,)|const|int8
const_12247 = relay.const([[6,-7,9,-10,-1,4,-9,8,-3,-1,-3,-6,3,-8,1,-3,3,-5,-7,-3,-5,-6,-1,6,7,-9,-6,-1,8,-10,-7,-5,3,3,6,10,-4,8,3,1,1,4,7,-8,5,4,-9,2,-3,-3,2,-2,2,-2,-4,-6,-3,4,-6,-4,10,-10,-9,2,9,10,-1,-8,2,9,-4,-3,-7,-6,-9,3,10,-2,-6,-2,-2,-6,5,-7,7,3,4,10,-2,4,9,-3,-1,-10,9,-3,2,-3,7,-4,-9,8,2,5,-6,-5,8,-4,1,7,-5,1,4,-4,8,-5,-6,10,-1,-2,-6,2,5,5,1,7,4,3,4,7,5,10,-7,1,-7,-4,10,-9,3,10,-5,10,-5,-7,8,2,10,-9,2,4,1,-4,-6,-5,-6,3,-1,3,3,6,6,9,2,2,5,5,3,-8,-10,-8,-7,-8,-5,6,-10,1,2,1,-7,-8,-8,10,-2,-2,1,-9,-2,-1,-9,-7,1,7,8,-7,-3,-7,10,4,-8,-4,-8,-9,1,7,9,1,2,5,-5,4,9,-9,-1,-1,-9,7,-10,-8,-8,-1,1,-9,7,4,6,2,-1,8,-5,-2,6,2,8,6,-8,-5,6,-3,-7,9,-5,3,-1,8,10,10,9,-3,-5,5,4,2,3,7,2,-5,6,-3,-9,-10,-10,6,-4,8,-5,-3,-4,-3,10,-9,7,-9,2,-7,-2,-1,-1,2,5,5,5,-1,2,-6,-5,7,10,2,-8,4,-9,-2,1,6,-8,-6,-8,1,-2,-4,-3,8,9,-7,10,-8,-6,9,-8,5,-5,-8,7,-3,-6,7,-2,-3,4,9,-3,5,7,9,7,1,5,5,9,-3,8,6,-3,-10,-1,5,4,-3,1,8,8,-2,-1,4,-6,6,-7,4,1,8,-1,-6,-2,9,3,-3,-1,3,-3,-3,-6,-7,-9,-4,4,-4,7,-1,-1,2,10,-4,-2,2,-5,-8,-1,-5,-5,5,-1,6,7,4,-8,1,-4,8,5,3,4,-3,8,7,5,3,-9,3,-6,5,3,-3,-4,-5,10,8,-1,9,7,3,8,-9,4,-6,-8,4,8,10,-10,-8,5,6,-7,5,3,-7,3,9,-7,-8,5,-6,-1,4,3,2,9,4,-3,9,9,8,-1,1,-1,3,-3,8,7,-7,-5,10,7,10,-7,7,-7,9,-1,8,-1,7,-9,-10,-8,-9,-6,-6,7,6,-7,9,7,5,-10,9,1,-7,-10,7,6,10,8,-8,4,-6,-6,-8,-5,-10,-4,-8,4,3,4,1,-9,3,-6,10,-4,2,3,10,3,-5,-8,9,-8,-5,6,6,6,-3,-10,-4,-1,-4,-8,-4,-6,-7,-2,6,3,-4,-7,4,-10,8,8,-6,-10,-5,5,-1,-8,5,7,2,5,6,-8,7,-7,-10,7,-6,-8,-9,-10,-6,-9,8,6,-5,-6,3,3,-2,5,7,-9,2,6,2,10,-4,-1,-8,-2,6,-5,-2,10,-1,9,10,-3,-7,2,4,-7,4,9,-3,-4,-1,-1,-7,8,-8,8,-6,10,1,-3,3,-3,8,-8,3,1,9,8,2,8,4,8,8,-3,10,-5,-6,2,10,-4,-10,-8,6,8,9,-10,1],[-3,7,-1,-10,2,3,-9,-1,-6,9,-3,8,-4,9,-2,-3,-1,-10,7,-9,7,10,4,10,-6,6,5,3,2,5,-4,2,-9,8,-4,5,-8,9,10,-4,8,6,-3,-5,2,-3,-8,-2,5,3,6,3,4,-7,-1,9,-10,-5,7,-8,-9,3,-3,-4,-4,2,-4,-7,-4,3,7,7,8,-10,3,3,-8,1,3,4,2,-9,-10,5,3,1,9,-7,1,3,7,10,-2,9,-6,-5,10,3,2,-5,-5,7,6,2,-3,-3,-10,-6,-2,10,-9,-6,-8,-8,-8,-9,9,8,2,-3,6,-5,-9,-3,-5,8,-7,-2,5,9,-1,6,-4,5,4,-1,4,-9,7,3,-4,-6,7,-7,-10,-4,5,-2,4,-3,3,-1,9,9,9,-8,5,3,3,-2,8,-5,8,2,-3,2,-8,-5,2,-3,-6,-3,6,-10,-8,4,-2,9,-6,-4,5,-7,1,-1,5,-4,-6,9,7,-3,-4,2,-7,6,3,2,-5,2,10,9,-9,4,1,7,3,-4,-8,10,7,-9,-5,-8,-10,8,-4,-5,9,-8,5,10,-9,2,1,3,10,-8,-4,7,7,-6,-2,5,2,-4,1,4,10,-7,10,9,-3,8,3,3,-3,-2,10,8,1,9,-8,1,-9,-9,8,10,4,1,3,9,1,-3,-1,2,-3,-5,2,-10,-2,-1,-6,-4,-10,8,-8,-1,10,-9,3,4,-2,10,3,-6,-9,-7,-9,5,-7,3,10,4,8,-1,-5,-10,2,-3,-9,1,-8,-3,1,-8,-1,-4,7,-10,-1,5,-6,5,4,-6,-8,1,7,-7,-1,9,-6,-10,-2,5,3,-1,6,8,7,10,-3,3,4,10,-5,-7,1,1,10,-9,7,-2,8,-2,6,-10,3,-8,-5,4,7,-10,-9,-4,-8,-1,-2,9,-3,-5,-3,7,-10,4,-3,-7,2,-9,-10,-1,5,-5,-5,5,3,6,-6,-3,7,-4,-10,1,2,-4,-4,-3,6,-3,2,8,9,3,-8,2,6,8,-10,-7,-10,5,5,-2,-5,2,5,3,8,9,-2,1,-8,-3,9,-9,8,-4,3,4,5,5,9,-5,-4,1,5,6,-5,10,-9,-3,-4,-2,7,2,3,1,5,-7,8,9,-3,5,-5,2,-5,-5,-3,5,-2,-9,4,6,-4,2,-4,7,7,-5,-8,-10,-1,-1,1,-2,3,-7,1,-10,-8,-9,3,-10,-8,7,-10,-1,2,-5,8,-6,-7,9,8,-5,2,-9,-9,-9,3,-5,3,-6,-7,-7,-6,-7,-6,3,8,2,-1,6,9,-7,3,7,-7,2,4,1,2,5,8,4,5,7,7,3,1,10,1,10,2,4,-1,6,-4,-5,-10,-8,7,2,-1,3,7,5,-3,-8,9,1,-4,7,-9,-10,-3,7,-6,-5,-3,8,-2,-8,8,-7,7,-8,6,-10,-6,-7,3,-9,10,5,-2,5,-3,-6,10,-9,3,7,3,-8,10,-9,9,1,2,5,6,-6,5,-4,-7,-10,-2,-2,6,3,-7,-8,-10,10,-4,6,4,-1,-5,-4,9,3,-2,-6,8,4,-4,4,3,8,8,7,7,3,-4,6,-10,5,-5,2,-2,1,-1,2]], dtype = "int8")#candidate|12247|(2, 624)|const|int8
call_12245 = relay.TupleGetItem(func_11721_call(relay.reshape(const_12246.astype('int8'), [13, 8, 1]), relay.reshape(const_12247.astype('int8'), [13, 8, 12]), ), 0)
call_12248 = relay.TupleGetItem(func_11724_call(relay.reshape(const_12246.astype('int8'), [13, 8, 1]), relay.reshape(const_12247.astype('int8'), [13, 8, 12]), ), 0)
output = relay.Tuple([call_12234,call_12245,const_12246,const_12247,])
output2 = relay.Tuple([call_12235,call_12248,const_12246,const_12247,])
func_12251 = relay.Function([], output)
mod['func_12251'] = func_12251
mod = relay.transform.InferType()(mod)
output = func_12251()
func_12252 = relay.Function([], output)
mutated_mod['func_12252'] = func_12252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11012_call = mod.get_global_var('func_11012')
func_11014_call = mutated_mod.get_global_var('func_11014')
call_12280 = func_11012_call()
call_12281 = func_11012_call()
func_11876_call = mod.get_global_var('func_11876')
func_11877_call = mutated_mod.get_global_var('func_11877')
call_12290 = relay.TupleGetItem(func_11876_call(), 0)
call_12291 = relay.TupleGetItem(func_11877_call(), 0)
output = relay.Tuple([call_12280,call_12290,])
output2 = relay.Tuple([call_12281,call_12291,])
func_12295 = relay.Function([], output)
mod['func_12295'] = func_12295
mod = relay.transform.InferType()(mod)
mutated_mod['func_12295'] = func_12295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12295_call = mutated_mod.get_global_var('func_12295')
call_12296 = func_12295_call()
output = call_12296
func_12297 = relay.Function([], output)
mutated_mod['func_12297'] = func_12297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11326_call = mod.get_global_var('func_11326')
func_11328_call = mutated_mod.get_global_var('func_11328')
call_12312 = relay.TupleGetItem(func_11326_call(), 0)
call_12313 = relay.TupleGetItem(func_11328_call(), 0)
output = call_12312
output2 = call_12313
func_12329 = relay.Function([], output)
mod['func_12329'] = func_12329
mod = relay.transform.InferType()(mod)
mutated_mod['func_12329'] = func_12329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12329_call = mutated_mod.get_global_var('func_12329')
call_12330 = func_12329_call()
output = call_12330
func_12331 = relay.Function([], output)
mutated_mod['func_12331'] = func_12331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11682_call = mod.get_global_var('func_11682')
func_11683_call = mutated_mod.get_global_var('func_11683')
call_12355 = relay.TupleGetItem(func_11682_call(), 0)
call_12356 = relay.TupleGetItem(func_11683_call(), 0)
output = call_12355
output2 = call_12356
func_12370 = relay.Function([], output)
mod['func_12370'] = func_12370
mod = relay.transform.InferType()(mod)
mutated_mod['func_12370'] = func_12370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12370_call = mutated_mod.get_global_var('func_12370')
call_12371 = func_12370_call()
output = call_12371
func_12372 = relay.Function([], output)
mutated_mod['func_12372'] = func_12372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12203_call = mod.get_global_var('func_12203')
func_12204_call = mutated_mod.get_global_var('func_12204')
call_12375 = relay.TupleGetItem(func_12203_call(), 0)
call_12376 = relay.TupleGetItem(func_12204_call(), 0)
output = relay.Tuple([call_12375,])
output2 = relay.Tuple([call_12376,])
func_12379 = relay.Function([], output)
mod['func_12379'] = func_12379
mod = relay.transform.InferType()(mod)
mutated_mod['func_12379'] = func_12379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12379_call = mutated_mod.get_global_var('func_12379')
call_12380 = func_12379_call()
output = call_12380
func_12381 = relay.Function([], output)
mutated_mod['func_12381'] = func_12381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12068_call = mod.get_global_var('func_12068')
func_12070_call = mutated_mod.get_global_var('func_12070')
call_12399 = relay.TupleGetItem(func_12068_call(), 0)
call_12400 = relay.TupleGetItem(func_12070_call(), 0)
func_5507_call = mod.get_global_var('func_5507')
func_5509_call = mutated_mod.get_global_var('func_5509')
const_12402 = relay.const([[-5.765589,2.843912,-5.730887,9.424078,-8.780912,-7.946943,6.471532,-0.842114,6.068275,-0.373691,-8.713688,-6.227754,-7.304749,9.914254,2.058432,-1.234985,-8.515247,4.677206,-0.424928,-5.330522,-6.068042,4.414983,-8.706313,-5.458872,7.781469,6.215884,6.580728,-1.196402,1.619780,-7.674750,3.698055,4.232734,4.710855,-3.265734,4.181397,-8.274292,5.089444,-1.657830,4.499349,9.560958,4.421789,-2.740010,-2.321213,-1.234748,-0.077572,-2.500599,-6.383546,7.077417,5.107284,6.302197,5.700749,-3.629956,2.214593,-8.364243,9.812174,9.174268,-3.771759,-6.076567,-7.890352,7.159022,0.917597,4.611008,9.020956,5.918965,-7.927928,6.990733,-6.787257,2.947539,-0.360324,-1.260619,9.702480,-8.704076,-3.034485,3.508516,-6.211066,2.185635,-0.547007,2.271881,-5.538064,-8.016498,3.957472,-8.938917,5.836387,5.315219,3.226729,-6.021954,-3.408740,-6.169476,6.582805,7.237637,-1.373825,5.339562,9.987818,-4.416730,-9.245837,0.119962,8.497098,7.330515,5.497251,-7.881479,4.151217,2.967680,-5.734920,-7.308021,2.894363,5.639818,-3.349733,4.481105,7.503187,5.706916,-6.215322,5.254034,-3.933177,3.759671,6.739125,-4.292101,-6.093734,-2.515488,-3.372383,-9.455899,8.029078,6.362998,-0.667975,7.221198,7.217997,0.819870,2.955719,0.036670,-4.565981,6.686642,-2.675437,-2.374189],[-4.429301,4.797621,0.622962,-8.774269,1.378402,-7.494814,-3.769058,9.911192,8.262937,-8.946399,5.600152,-1.961437,-6.199560,-0.967463,-6.169212,1.282391,8.556545,3.230662,-2.775373,6.003917,7.601051,1.222458,-7.507587,7.287784,-8.599002,-4.267244,3.439160,4.207572,8.681067,8.186970,-0.365074,-5.711246,6.829307,-9.557980,0.435712,-5.361147,5.598280,4.102891,-0.502632,2.681676,-3.397054,7.952193,6.896238,3.184375,-0.199716,-8.995606,2.808832,-7.055455,-7.289662,-4.289110,8.412053,-6.373381,-9.201120,-5.110453,4.630735,9.279950,6.319288,2.863112,1.556804,0.498912,8.186213,-9.634897,-0.899196,-1.982883,9.073413,1.974804,0.012946,-0.240309,9.500236,-8.808007,-2.023021,-2.650165,-2.655507,-5.855583,-5.686657,0.704936,7.354590,-1.072675,5.998258,-5.637186,5.695626,8.747249,-8.810331,-1.389008,-8.899839,-2.179632,4.199952,-0.079164,-2.073229,4.995720,2.175162,0.241492,4.746162,-1.477829,-0.663254,7.242173,-7.264461,-2.455660,-8.320797,-0.440778,6.569230,-5.755725,7.800664,0.223291,4.825686,-9.857945,0.697561,-0.547033,6.197617,7.228166,9.601720,0.103840,6.537970,-8.117923,5.036046,-1.115504,7.744333,6.243508,-8.611097,2.568099,7.049683,-8.810902,5.455343,9.975958,6.811699,-5.206222,-2.965259,0.338818,0.982506,4.974355,-6.201210,7.191342],[-4.587360,2.255912,0.005089,1.471829,-4.508664,-0.109598,-2.854032,2.232289,-9.590064,-4.137102,3.479701,9.192176,-1.369834,2.862790,-9.152561,-8.946473,9.456894,8.809781,-7.602065,-8.761495,-8.659637,-1.575498,-0.366348,0.494883,6.005435,6.221097,0.846527,0.353590,-8.561106,-1.461478,-0.170598,7.822911,-3.381226,-1.596009,9.354582,-2.869348,0.883083,-3.940990,-5.005370,6.084941,-3.849050,-2.479904,7.396125,2.235582,7.479600,-0.002657,-7.109820,9.681671,5.998420,-0.583024,-5.094622,-6.717479,1.080126,-8.654871,-6.373038,-0.642615,-6.100272,-7.482098,-7.399210,5.854979,-3.495681,1.844073,-0.062478,6.563714,4.670263,-1.817472,-8.611007,0.426367,-0.804138,8.071752,2.468366,1.309389,6.857375,3.145301,4.913222,4.743837,5.708158,-7.218727,2.522027,6.644182,9.778255,3.657669,-2.517854,-9.546886,-5.049771,-1.795011,8.342146,5.506377,7.602647,-2.081273,-4.492736,-9.707236,7.296454,3.401428,9.730722,3.732442,-2.632631,-3.838604,3.016743,4.858641,7.514915,-4.336195,6.684161,0.538169,-8.865711,7.228100,6.846123,-9.570914,3.529097,3.876744,-3.497220,1.392633,7.902786,-7.682771,-6.993571,-0.468529,9.355169,-9.955420,8.609718,2.451123,-0.427816,-3.951087,9.691549,-2.125607,-2.118410,1.538292,-0.423236,7.069577,-4.259191,-8.172163,-2.380330,-4.884323]], dtype = "float64")#candidate|12402|(3, 132)|const|float64
call_12401 = func_5507_call(relay.reshape(const_12402.astype('float64'), [9, 11, 4]))
call_12403 = func_5507_call(relay.reshape(const_12402.astype('float64'), [9, 11, 4]))
func_11227_call = mod.get_global_var('func_11227')
func_11229_call = mutated_mod.get_global_var('func_11229')
const_12410 = relay.const([4.720132,9.220503,3.448943,4.527423,-3.581949,-5.977716,0.090664,-7.187142,-6.699163,7.275140,-0.361768,8.194308,7.528795,-3.336846,0.431248,-9.056919,-1.148098,-0.227245,-1.887916,-6.152226,-0.133050,-8.066462,-7.468014,-8.264374,-6.387692,-7.721843,2.986976,6.870268,-3.423148,0.195633,5.604233,-4.103408,6.103101,8.016183,-9.535452,1.649288,1.390461,6.448562,-7.418698,-2.766888,8.379427,6.722954,-4.800870,6.545014,-5.188639,6.217506,-9.333033,7.553255,-7.907318,1.770312,5.516255,1.452728,-9.680655,-6.042246,-7.863951,-0.483650,6.075172,-9.878317,-8.229662,-4.917036,-3.930154,-3.255728,-6.729025,-1.682312,7.473787,6.728812,-8.542505,8.898714,1.767049,0.593330,-5.352153,-1.511898,1.030756,8.716060,-9.266924,-1.914992,4.393626,-4.128387,7.519939,-2.499371,-4.356552,6.571445,-0.272192,-4.242738,-8.155044,4.944992,6.252048,-2.195645,-7.963891,-1.197761,-2.803770,6.289235,6.970103,7.043678,6.295121,2.422139,0.441087,-8.954611,2.768841,-5.026881,3.242371,-2.022135,0.294154,5.770109,9.475317,-2.301021,4.084432,5.115679,6.555271,4.242037,4.511809,5.628622,0.004345,-8.706863,-0.481114,-9.567436,5.176776,-5.372380,0.815964,-8.491271,7.381082,-1.850032,1.616932,2.407275,-5.290139,5.521394,-5.146029,7.968771,-3.745152,-9.265988,-5.855484,-6.792170,-5.947865,-3.262500,9.932770,-4.732093,4.411140,2.343597,-7.270044,-0.855770,3.843155,-5.083356,-1.407050,3.414886,-5.868935,6.762484,-0.497890,-7.658491,-4.416704,-6.979298,1.071322,-2.945414,-2.023041,6.695238,-3.679861,4.789668,1.610780,1.492210,2.123029,4.661098,8.504927,-9.980670,-7.790149,-9.058936,9.947732,-8.391968,5.958176,-8.207031,-3.406302,-5.090478,4.869719,-0.972408,-3.026554,-8.844067,-9.662904,9.740994,-0.671659,5.984255,-2.534511,9.002627,0.078215,-4.303852,-7.462514,-0.970757,8.593339,7.274745,-0.513486,9.717072,-6.131390,4.034350,7.238929,-4.978950,-3.453061,2.120966,0.460947,6.738216,-7.066195,0.656568,-4.045101,-9.150734,-0.364940,-5.219408,7.049084,5.925596,1.374499,7.695189,5.236768,-5.862471,4.278415,-1.585784,-2.597604,4.895720,-2.998888,2.848025,-1.075840,-4.905673,4.005070,-5.683032,-2.517596,-8.233433,-6.564082,9.619765,5.015251,1.058520,5.906777,8.431745,1.008639,-8.618728,9.096794,-9.552674,2.191254,7.352896,8.118773,-4.380755,9.516692,7.969022,-9.314819,-0.120005,-9.354360,-8.760229,0.430109,2.361687,3.846154,-8.292747,1.895996,-4.219816,1.989882,-1.634142,1.164114,0.435709,6.675507,-6.433556,3.727549,-9.004036,2.854594,3.825450,-0.167319,4.231350,-2.352864,2.561029,9.040374,6.068230,0.009242,2.446343,-6.231946,8.233725,-3.258082,9.844279,-6.751306,1.787819,-5.021641,0.479644,-9.968747,-3.621285,-1.400628,-7.151381,-6.470873,0.669715,1.519513,-4.751804,3.872234,-6.939042,-6.253128,1.745439,7.719445,-0.150176,6.417226,-8.898339,-6.441101,-0.987477,-5.735988,-3.449466,-9.267414,-9.491330,1.157193,9.704935,7.983120,-5.380876,2.507496,-6.587018,-4.923154,4.237676,-9.243315,2.517495,-2.066391,-5.401778,7.650666,1.430091,-4.063970,6.710085,2.336193,-7.069515,-2.513945,-8.448823,-7.697614,-4.618681,8.331379,-2.786041,-1.842520,-9.187672,2.684344,1.929703,-3.641568,1.088164,8.784384,-7.231955,7.177265,2.251036,1.078713,-9.051105,-6.310039,-8.630245,-9.048304,-2.748893,1.055070,1.786744,2.500444,4.270193,-8.617095,-6.004260,2.812982,-6.396988,6.546485,4.475314,4.563470,-1.847602,-7.722104,0.621020,2.234837,8.765590,-2.001716,8.505375,-3.944947,7.388425,8.141054,-0.548379,-0.146429,-2.651117,-8.062487,-9.230392,9.904592,2.644394,-3.657084,-9.667217,-8.273828,-1.479470,-1.845998,-3.822269,-4.910906,6.808152,9.562741,-4.977094,-3.457053,8.264303,-4.185787,-6.517880,-2.119717,-1.090095,-1.835512,-5.878624,-9.958851,-3.778210,1.819506,2.089085,-6.759138,6.869235,-0.146947,-5.738850,-6.175735,8.119294,7.347946,-2.600345,-1.599337,-9.916628,0.709981,5.192108,3.706794,7.343187,1.527041,-4.135495,5.041063,9.248546,-2.101122,4.976690,-0.276894,9.713065,-6.284251,8.465635,-2.595669,-6.938230,0.457071,-6.823048,2.384419,0.701931,-5.427511,-1.824043,8.020333,-5.320369,5.173926,3.731956,-4.013660,-6.200003,-4.265908,6.593404,8.416021,7.733452,-2.895253,-8.345472,2.429964,-8.137816,9.751265,6.631280,-4.655853,-0.668958,2.452187,1.500760,7.152474,8.072601,-2.815354,-7.258217,-5.673418,-9.737634,6.130377,-3.102402,-1.138234,7.494233,7.632150,-5.037109,-3.544325,-2.867780,-9.007223,7.987538,9.699163,-6.844675,-3.546313,2.893598,-3.997834,9.191659,-8.530833,-2.024262,-5.851088,4.404469,-2.225980,8.076082,-2.212910,1.161652,-8.242840,-5.628570,4.438693,6.259988,-8.939502,-2.830758,-2.337488,-3.632973,3.109089,1.476611,-6.828812,0.853872,-6.288890,9.790957,-3.808212,-3.074738,-2.142971,-5.921255,9.334770,5.372806,2.632153,-1.189049,5.002755,-3.516499,3.898356,-2.293867,-7.030387,-8.845953,-8.417561,-1.733990,-4.137499,6.707813,6.062097,-1.365395,9.031058,-1.145261,7.117117,-2.391242,-5.501425,3.623184,-2.940099,1.024355,-8.229306,-8.841292,-1.017327,2.835874,0.985408,4.183385,7.272435,7.492996,7.632798,4.542497,-7.279259,6.155397,-7.680824,-6.406705,-6.451259,-2.677242,1.450796,3.046225,6.365202,3.061175,-4.639560,2.052112,-1.007157,-8.003756,0.574142,4.017215,-1.549352,-4.601182,2.513695,2.766136,-8.488591,-7.163842,-7.884061,1.511162,6.148892,-1.876783,3.496636,8.484002,-8.163470,6.423071,4.648810,5.955041,3.942718,-5.816870,-1.981836,-3.755334,6.332724,2.772372,1.037048,7.547580,8.047262,-9.603760,-0.506461,-2.907765,6.706543,-9.368882,-4.796584,-5.640307,0.393086,4.097825,9.722004,-7.565786,-5.894913,-9.935840,2.609325,-3.801591,-0.120075,9.838861,-3.497354,8.230449,-1.108175,-1.881258,-3.626392,-0.942776,-9.625806,1.035860,-6.971876,-7.356982,4.827847,-4.802773,4.053585,2.407994,9.697914,-2.614058,0.698292,2.624847,8.373505,-9.722713,1.785455,1.825864,-1.369771,0.268780,-5.718839,-8.883590,-3.385238,-7.099059,8.311074,8.318449,8.687858,8.070049,-9.088442,-8.163575,-2.373817,5.052425,3.899554,6.751999,4.337571,-4.869364,2.436648,-0.706492,3.764035,1.245520,-7.541459,3.765818,-1.738195,-4.635653,-0.773918,-6.549381,-3.760193,-7.473717,-5.863824,5.045918,-5.062910,7.268428,-2.946206,7.834002,7.477718,5.853911,-4.703176,7.440595,6.966588,8.459680,-2.585518,-7.490081,1.427354,-5.945575,8.736432,8.644766,-9.973720,1.516035,-1.581032,-6.323151,0.135583,-9.465498,4.525558,-3.324187,5.248283,-8.363184,2.208969,-9.661188,9.594677,-4.236071,4.952907,-7.709887,-5.460803,-4.459345,-0.901509,-9.642491,-5.200237,3.845623,-0.219039,-5.847962,7.290626,6.837223,-3.893104,4.439666,6.519989,-6.959674,-4.695028,-3.144000,-8.357473,8.112013,4.348298,-0.160647,-6.264694,3.211062,0.534456,9.811165,-3.693712,4.561100,-2.271702,-0.251061,-0.117369,-4.924391,1.597869,1.224556,-6.767463,0.158469,2.151643,3.257250,2.590003,-2.124571,3.478787,-5.591184,5.785846,-7.026560,-4.233485,1.015318,7.632583,1.544035,-3.689157,-9.123035,-6.754486,-4.411480,0.729503,3.231668,7.839054,8.118055,0.800348,-1.157183,4.709249,1.496467,-4.066191,-0.718361,-5.825970,-7.346066,-9.327411,1.347449,-0.962733,-7.264127,-9.992797,3.496750,-4.554786,-9.263513,-8.187192,-4.629515,1.454859,4.496572,-1.341597,7.809124,-9.829083,3.624683,-5.682365,4.357768,-1.047876,-1.701947,8.492879,-5.506483,-0.212661,-0.843976,-2.655710,-5.229711,-0.743067,8.410627,5.415784,7.692352,-9.822171,-6.470941,-7.903350,-0.016297,-1.459081,7.608362,-9.148404,5.360310,-8.180762,8.934829,-2.925689,-8.291897,5.693132,1.468990,-9.551462,-6.306360,3.748303,6.308881,-0.308493,-2.875755,-9.770859,3.049657,-1.095766,3.176727,-9.088375,6.136769,-6.051965,6.663535,2.032175,-5.239951,2.020934,-3.892550,8.413355,-6.515191,2.489936,-4.260276,-6.145361,-5.775276,-5.059174,8.844368,-0.264674,3.676900,-7.751919,9.268056,7.377265,5.727925,-4.276596,6.520659,5.193424,-5.295918,2.092220,-7.149505,-8.234966,-9.362331,-3.068714,3.684665,-9.386614,6.429219,1.452779,-9.016683,-9.853604,6.851019,3.053439,5.465532,6.452081,-5.865074,-0.330058,-9.682572,3.995463,-9.294081,5.324368,6.700014,-2.858017,-3.612681,3.492251,8.413889,7.028036,-8.652372,3.513602,0.263396,6.814646,4.103074,4.472786,-9.545113,-7.778460,-4.863665,-9.666885,4.944405,0.482658,-5.441585,-8.759903,-4.572706,2.753341,7.856228,-8.334502,2.197118,-1.604501,-9.102389,-0.926197,-9.286892,9.501560,-9.089257,-6.796542,-7.795082,-6.450569,-0.599722,-1.156265,-6.723277,-9.188276,1.108992,-6.014191,-8.200286,1.043048,-2.987642,-3.112232,1.902219,-5.415437,1.263256,9.155830,-2.814525,1.402217,1.875993,5.713242,8.848226,5.576320,4.516131,9.781382,-6.087202,-6.982726,-1.031154,6.521251,-3.194929,-9.706759,1.752791,7.380061,8.541662,-9.475943,8.581386,-0.028425,0.572261,4.727927,9.694041,7.856633,0.874190,3.329600,-9.395834,8.911386,-8.536950,-6.119159,-1.166345,0.228782,-6.328938,-3.952309,9.492043,-7.345885,-9.239357,2.787346,-0.369505,2.293681,-2.635533,-2.266280,1.108507,2.883690,0.072052,7.613874,-2.345020,3.459702,8.464794,-7.112860,-0.332927,6.199929,-4.636752,-2.278750,4.086900,-3.817850,-8.485286,-7.893271,0.295938,2.154214,-1.689762,-6.381914,3.963074,2.374549,0.482532,-1.348587,4.922773,-5.445802,-8.277600,-4.061794,-0.690656,-7.900453,5.729131,-1.705217,-3.947571,7.052635,7.034093,5.242362,1.393066,5.045875,-5.770228,-9.053918,0.373449,7.492932,-6.433624,-3.429869,2.550724,4.887315,4.726365,9.816287,-1.363741,-6.884041,-5.257307,-7.472861,4.992285,-8.811104,6.979837,8.021042,1.511412,1.811009,-0.275786,-8.139188,-5.903461,5.393544,2.021286,0.777981,7.999343,7.745262,-2.693844,-5.152540,5.886929,1.311710,3.321506,-7.599015,-3.208485,-0.069196,5.666526,-2.340724,8.504888,3.990627,-5.949428,-3.404291,2.136518,4.120517,8.036795,5.079983,-9.012126,-8.734834,3.469625,-0.319822,-4.968068,-6.585336,9.077912,9.563151,-0.841504,8.967709,8.387811,6.233981,-4.329573,-9.227247,-3.509654,-0.897179,3.876088,-9.203955,1.269946,-2.606671,-7.719040,4.070058,9.249771,-8.385503,-2.219432,-4.767090,3.250295,-9.752134,-5.123001,9.448062,-1.042387,6.456231,-6.848108,-3.458281,-8.391152,5.468931,8.110829,-6.105986,9.376305,7.951852,-9.047918,-4.997955,8.112958,8.458754,0.530992,-4.443685,2.990540,7.710935,7.630372,4.002788,-4.477340,-1.822250,-7.221949,-2.765609,9.315869,6.480591,0.287464,9.812204,-3.680996,-6.913482,-8.146151,4.420328,-1.426986,5.148973,-8.555779,7.527395,-8.969991,-6.786930,-0.520766,-0.553151,-7.268957,-5.505775,0.626104,-5.741835,-6.831155,-8.837484,7.085349,-9.603125,-3.441560,-3.828524,6.524562,-3.143764,7.759212,-9.748545,6.676293,-7.819974,-7.591051,-6.787186,-3.130990,7.072490,2.114142,0.677846,2.109724,8.437114,-1.730622,-4.129182,4.456597,6.505758,0.493554,0.020434,-1.048633,5.849024,-3.311555,5.877946,-6.014025,6.440856,-8.670834,7.815245,1.629156,6.886295,-8.041775,3.592330,-5.049424,-7.598893,-3.116964,6.692901,7.581102,9.911510,-3.483102,1.958665,2.379105,-4.236030,2.560952,5.643451,-8.408145,-9.075610,-1.113690,3.841554,-9.399706,-3.000344,5.598577,-7.443457,-5.680354,-6.638622,-3.554362,-4.534900,-7.054804,8.545305,-4.067583,-6.439160,0.493627,3.320402,-9.625921,7.119609,-3.713955,5.455870,2.297383,5.086853,4.170790,-5.975564,3.122804,3.448830,8.467931,8.683802,5.651956,9.228035,1.273537,-3.977479,7.893844,-6.501581,-5.792101,5.359398,5.520622,7.628810,-5.030272,-7.252017,-5.381235,8.684193,-4.823378,2.113449,6.902985,2.751745,9.065278,-1.667045,3.054287,9.238185,0.757974,0.958255,2.055746,4.350840,-7.737738,6.145726,-2.265061,-7.668827,4.254013,-2.130649,-6.892478,0.628391,-6.244848,-3.056828,0.727973,7.548941,-4.112818,9.006655,9.364812,4.253484,4.705645,8.900985,-5.308754,-5.124884,0.099066,-5.280043,-0.842924,-6.455418,4.016276,-8.408636,-8.453179,6.152142,-4.523515,-6.839410,-8.774561,4.362950,-0.390793,4.974936,3.681648,-2.388893,-5.835101,-3.279299,0.859285,9.130498,-3.052321,4.621497,0.575146,3.007154,5.109541,-1.001447,-4.510217,1.867537,-8.449366,8.153828,1.101924,-8.660372,-7.205079,-9.082072,4.668905,-1.503075,-3.506659,-8.600214,7.548583,7.460314,4.126377,-0.128324,-4.452857,-4.938048,-9.128002,-2.549298,-9.165236,1.610338,7.917676,-9.131762,-7.169103,-0.270606,-7.661565,-6.402913,3.012542,-0.247876,0.318688,-2.009320,6.488005,-8.497662,-2.153890], dtype = "float64")#candidate|12410|(1260,)|const|float64
call_12409 = relay.TupleGetItem(func_11227_call(relay.reshape(const_12410.astype('float64'), [7, 15, 12])), 3)
call_12411 = relay.TupleGetItem(func_11229_call(relay.reshape(const_12410.astype('float64'), [7, 15, 12])), 3)
func_12068_call = mod.get_global_var('func_12068')
func_12070_call = mutated_mod.get_global_var('func_12070')
call_12413 = relay.TupleGetItem(func_12068_call(), 0)
call_12414 = relay.TupleGetItem(func_12070_call(), 0)
func_2889_call = mod.get_global_var('func_2889')
func_2893_call = mutated_mod.get_global_var('func_2893')
var_12419 = relay.var("var_12419", dtype = "uint16", shape = ())#candidate|12419|()|var|uint16
var_12420 = relay.var("var_12420", dtype = "uint16", shape = (225,))#candidate|12420|(225,)|var|uint16
var_12421 = relay.var("var_12421", dtype = "bool", shape = (420,))#candidate|12421|(420,)|var|bool
call_12418 = relay.TupleGetItem(func_2889_call(relay.reshape(var_12419.astype('uint16'), []), relay.reshape(var_12420.astype('uint16'), [15, 3, 5]), relay.reshape(var_12421.astype('bool'), [420,]), ), 1)
call_12422 = relay.TupleGetItem(func_2893_call(relay.reshape(var_12419.astype('uint16'), []), relay.reshape(var_12420.astype('uint16'), [15, 3, 5]), relay.reshape(var_12421.astype('bool'), [420,]), ), 1)
func_11540_call = mod.get_global_var('func_11540')
func_11541_call = mutated_mod.get_global_var('func_11541')
call_12431 = relay.TupleGetItem(func_11540_call(), 0)
call_12432 = relay.TupleGetItem(func_11541_call(), 0)
bop_12435 = relay.greater_equal(call_12418.astype('bool'), relay.reshape(var_12421.astype('bool'), relay.shape_of(call_12418))) # shape=(2, 14, 15)
bop_12438 = relay.greater_equal(call_12422.astype('bool'), relay.reshape(var_12421.astype('bool'), relay.shape_of(call_12422))) # shape=(2, 14, 15)
func_3941_call = mod.get_global_var('func_3941')
func_3945_call = mutated_mod.get_global_var('func_3945')
const_12447 = relay.const([-1,-7,-5,1,5,-2,3,10,4,-4,-8,-4,1,10,-6,-1,1,5,-3,5,-4,-2,5,-1,-1,3,3,4,3,-1,-6,-7,-2,-7,1,-4,9,3,10,-4,1,2,-5,8,-10,-8,-1,5,9,10,-4,-8,2,6,7,5,-9,4,3,3,-10,8,-6,-7,-7,-9,-3,3,-10,9,2,7,-1,5,-4,-5,-9,-8,-8,-4,-3,-5,9,2,-8,9,5,1,-9,-9,-7,9,-9,-3,-3,-3,7,5,-5,-5,9,3,10,-9,-10,-5,-5,3,3,-1,10,-7,2,-4,10,-10,-5,-3,6,-5,-2,-3,7,1,1,-8,-7,-9,6,6,3,5,2,3,1,6,10,-2,-7,-7,-6,1,-2,2,4,-4,-7,-4,-8,-7,-5,-4,-2,2,-9,8,-3,-9,-9,-3,-9,9,9,-5,10,-5,2,-2,4,-4,2,-8,-2,2,-6,-6,5,2,-1,-8], dtype = "uint32")#candidate|12447|(180,)|const|uint32
var_12448 = relay.var("var_12448", dtype = "float64", shape = (104,))#candidate|12448|(104,)|var|float64
call_12446 = relay.TupleGetItem(func_3941_call(relay.reshape(const_12447.astype('uint32'), [15, 4, 3]), relay.reshape(var_12448.astype('float64'), [104,]), ), 0)
call_12449 = relay.TupleGetItem(func_3945_call(relay.reshape(const_12447.astype('uint32'), [15, 4, 3]), relay.reshape(var_12448.astype('float64'), [104,]), ), 0)
output = relay.Tuple([call_12399,call_12401,const_12402,call_12409,const_12410,call_12413,var_12419,var_12420,call_12431,bop_12435,call_12446,const_12447,var_12448,])
output2 = relay.Tuple([call_12400,call_12403,const_12402,call_12411,const_12410,call_12414,var_12419,var_12420,call_12432,bop_12438,call_12449,const_12447,var_12448,])
func_12450 = relay.Function([var_12419,var_12420,var_12421,var_12448,], output)
mod['func_12450'] = func_12450
mod = relay.transform.InferType()(mod)
var_12451 = relay.var("var_12451", dtype = "uint16", shape = ())#candidate|12451|()|var|uint16
var_12452 = relay.var("var_12452", dtype = "uint16", shape = (225,))#candidate|12452|(225,)|var|uint16
var_12453 = relay.var("var_12453", dtype = "bool", shape = (420,))#candidate|12453|(420,)|var|bool
var_12454 = relay.var("var_12454", dtype = "float64", shape = (104,))#candidate|12454|(104,)|var|float64
output = func_12450(var_12451,var_12452,var_12453,var_12454,)
func_12455 = relay.Function([var_12451,var_12452,var_12453,var_12454,], output)
mutated_mod['func_12455'] = func_12455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12474 = relay.var("var_12474", dtype = "uint16", shape = (4, 16, 3))#candidate|12474|(4, 16, 3)|var|uint16
const_12475 = relay.const([[[-1,6,6],[-1,3,-7],[5,-5,-2],[-4,-7,-3],[-10,9,2],[-3,-8,-8],[2,-1,1],[8,-2,8],[9,-8,-6],[7,-5,-1],[10,1,5],[-6,-9,4],[5,-5,-4],[10,-2,2],[-9,-6,-7],[-3,-3,9]],[[-6,-6,2],[-4,-1,3],[-1,-9,-3],[-4,9,-7],[9,3,6],[9,-7,-6],[7,3,10],[-3,10,5],[4,8,-9],[10,-4,-7],[5,2,-5],[10,-8,-9],[-10,1,-6],[-5,-4,-4],[7,1,6],[-4,6,-4]],[[4,-2,-6],[5,5,6],[-10,4,6],[-1,9,-8],[9,-8,10],[5,-4,8],[-2,-6,9],[-10,6,7],[1,7,-7],[7,-7,-1],[4,10,-7],[-10,3,7],[1,-1,3],[-1,3,6],[-10,-7,5],[3,6,-1]],[[-4,-3,8],[-9,7,-8],[-7,7,-4],[1,4,-3],[6,2,1],[-6,-6,-4],[-8,5,-4],[-8,-1,-2],[-7,-1,10],[2,1,-1],[-9,9,-7],[2,-7,-3],[-10,-9,-7],[10,-3,5],[-6,-3,-4],[9,-1,-1]]], dtype = "uint16")#candidate|12475|(4, 16, 3)|const|uint16
bop_12476 = relay.left_shift(var_12474.astype('uint16'), relay.reshape(const_12475.astype('uint16'), relay.shape_of(var_12474))) # shape=(4, 16, 3)
func_12329_call = mod.get_global_var('func_12329')
func_12331_call = mutated_mod.get_global_var('func_12331')
call_12480 = func_12329_call()
call_12481 = func_12329_call()
output = relay.Tuple([bop_12476,call_12480,])
output2 = relay.Tuple([bop_12476,call_12481,])
func_12484 = relay.Function([var_12474,], output)
mod['func_12484'] = func_12484
mod = relay.transform.InferType()(mod)
mutated_mod['func_12484'] = func_12484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12485 = relay.var("var_12485", dtype = "uint16", shape = (4, 16, 3))#candidate|12485|(4, 16, 3)|var|uint16
func_12484_call = mutated_mod.get_global_var('func_12484')
call_12486 = func_12484_call(var_12485)
output = call_12486
func_12487 = relay.Function([var_12485], output)
mutated_mod['func_12487'] = func_12487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12329_call = mod.get_global_var('func_12329')
func_12331_call = mutated_mod.get_global_var('func_12331')
call_12498 = func_12329_call()
call_12499 = func_12329_call()
output = call_12498
output2 = call_12499
func_12516 = relay.Function([], output)
mod['func_12516'] = func_12516
mod = relay.transform.InferType()(mod)
output = func_12516()
func_12517 = relay.Function([], output)
mutated_mod['func_12517'] = func_12517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11326_call = mod.get_global_var('func_11326')
func_11328_call = mutated_mod.get_global_var('func_11328')
call_12520 = relay.TupleGetItem(func_11326_call(), 0)
call_12521 = relay.TupleGetItem(func_11328_call(), 0)
func_9667_call = mod.get_global_var('func_9667')
func_9672_call = mutated_mod.get_global_var('func_9672')
var_12523 = relay.var("var_12523", dtype = "float32", shape = (160,))#candidate|12523|(160,)|var|float32
var_12524 = relay.var("var_12524", dtype = "int8", shape = (384,))#candidate|12524|(384,)|var|int8
const_12525 = relay.const([-2.377503,0.041013,-6.304834,-6.262267,-6.401836,6.034284,9.416992,5.206555,-4.511358,-2.198437,3.363774,-4.366437,-4.289369,-1.658750,0.751021,-0.786861,8.477731,-5.020976,-0.637666,9.788009,-8.473386,6.072485,1.376679,-1.070210,-0.745382,-0.518780,-1.194770,6.883155,-4.421235,-6.576179,6.526366,9.071790,8.901679,4.457157,8.772157,-7.329713,6.101696,5.014683,-4.391039,-6.653348,-5.181583,5.302314,1.960407,6.190081,-1.085253,6.593594,8.698270,-0.476495,4.012203,-9.969662,7.809374,-1.167977,2.487630,7.784660,8.616035,-7.198378,-1.466304,-7.171883,-8.716049,-7.986509,-9.423681,3.035264,-5.262031,-8.801760,3.635754,-0.370358,5.617685,6.299338,-9.558605,-3.225770,4.316078,-7.816135,-9.174471,3.399953,-9.517731,5.822710,-9.297476,-2.420005,1.943559,-3.616470,-5.342266,3.115704,3.550494,-4.717548,4.697346,6.177181,0.063748,-0.241834,-0.560839,-3.695292], dtype = "float64")#candidate|12525|(90,)|const|float64
call_12522 = relay.TupleGetItem(func_9667_call(relay.reshape(var_12523.astype('float32'), [16, 5, 2]), relay.reshape(var_12524.astype('int8'), [48, 8]), relay.reshape(const_12525.astype('float64'), [45, 2]), ), 4)
call_12526 = relay.TupleGetItem(func_9672_call(relay.reshape(var_12523.astype('float32'), [16, 5, 2]), relay.reshape(var_12524.astype('int8'), [48, 8]), relay.reshape(const_12525.astype('float64'), [45, 2]), ), 4)
func_6837_call = mod.get_global_var('func_6837')
func_6841_call = mutated_mod.get_global_var('func_6841')
var_12530 = relay.var("var_12530", dtype = "uint64", shape = (15, 3))#candidate|12530|(15, 3)|var|uint64
const_12531 = relay.const([-9,-8,-8,9,8,-2,-5,7,-5,5,6,4,-8,8,-2,4,10,2,6,9,-3,-6,-3,4,-3,-5,4,-5,-10,-10,8,6,7,-3,9,-8,2,-1,-9,6,5,1,3,-2,10,7,-10,-5,1,10,1,-6,-2,-9,1,-2,-9,6,8,-4,3,-8,4,-10,3,-9,-7,-1,-10,-1,8,-7,-6,-6,2,5,-1,8,8,10,-5,-8,-4,3,-9,-4,10,3,-8,-2,-1,6,2,7,2,-1,-6,1,-10,-3,9,-8,-3,-4,-2,-1,-5,-2,3,-7,7,-1,-9,-5,7,1,-7,4,10,1,6,4,1,8,-7,8,-5,1,9,4,-3,-3,-4,2,-7,-7,-7,6,-10,3,-1,3,7,-9,-7,-4,8,5,-4,-5,10,-6,4,6,-10,1,-7,7,-8,4,-9,-8,-8,6,-9,-7,-4,7,-6,-2,-1,8,-7,6,3,-3,-10,9,3,4,-10,-3,3,-2,3,7,-7,4,2,-1,9,9,-4,-9,-6,1,1,10,-3,5,6,-10,7,-7,1,5,-10,9,-3,-1,9,-4,-5,6,-7,-2,1,6,-5,8,-8,7,-5,4,-5,6,-8,-8,-9,8,3,8,5,3,-6,-7,-4,-4,3,9,-4,3,7,2,-6,-1,4,3,5,9,-7,-8,1,9,10,1,3,6,7,-8,-2,-2,-2,8,-10,-9,-3,9,-10,9,6,-6,6,-1,-1,6,9,10,4,9,4,3,8,3,-10,-8,4,7,7,5,-8,1,-10,1,8,-7,1,-2,-4,6,9,2,9,3,9,2,-8,7,6,1,-1,8,10,10,7,10,2,-9,-1,-7,-8,-8,-3,-6,4,-3,-6,6,3,2,5,-5,-3,-10,-7,-3,-7,3,7,-1,5,-7,-6,-10,2,-10,5,-4,2,-1,10,-5,-8,-8,-8,-7,4,-5,-10,3], dtype = "uint64")#candidate|12531|(360,)|const|uint64
const_12532 = relay.const([-2.268371,6.162321,2.888798,8.481909,-1.172796,-3.920261,2.000480,-6.051131,0.302273,-3.656785,-9.730235,7.296292,0.272885,9.260052,-8.314227,6.100310,-0.713852,8.880490,-0.052537,-9.820966,-4.661883,-6.746834,-1.160424,-8.440813,9.057655,2.552511,-9.924070,2.120768,7.375186,-0.518921,1.949903,3.799671,-0.959593,1.487793,9.190509,-0.754860,-3.017243,-3.777880,9.467122,-8.040105,0.875267,5.244906,0.975159,-1.343943,3.262579,-2.836060,-2.611448,6.788263,9.540102,1.231427,-7.074390,-0.350941,-0.076721,-8.314826,-9.574413,-9.572052,-7.989758,5.587114,1.859549,6.997392,-9.394229,7.236065,2.999392,2.708482,-0.297976,0.705059,-3.866273,3.538016,-1.771481,8.933051,7.629081,4.971880,2.168268,2.572230,-6.480236,2.949476,-8.771544,5.212797,1.854091,-9.677855,2.296954,3.622905,-5.715433,7.069369,-7.011890,9.933212,-1.551109,7.140718,3.958130,-3.423257,7.337561,-6.604612,6.494343,4.413287,-5.835697,-5.693453,-2.971657,-2.526638,-1.408262,0.668081,-5.189122,-7.510048,1.578640,-0.459700,-5.072506,-8.091926,-8.005634,-7.421676,-3.771323,0.857576,0.362979,7.852494,5.617083,-9.385066,3.774025,-5.361119,-1.755082,-6.015165,-6.643035,-6.681210,-4.463160,6.002638,3.561267,-5.165277,3.392062,5.137990,0.863016,-0.118596,-6.669370,-7.247438,1.224742,4.588272,-6.135078,6.073983,-7.537135,1.117405,8.458113,7.085844,-5.302215,-8.438371,2.119317,5.513379,-8.354080,0.384549,-2.818072,-3.330642,-9.647250,-8.095929,-5.277182,-3.555774,6.688621,4.751086,-2.228783,-2.034802,-5.374151,-7.799190,-4.331922,-1.686631,-7.675005,0.429920,0.749291,-7.648791,7.086000,-9.313664,-7.386137,-6.665031,3.445118,-9.535871,-2.260727,-2.011340,-6.697855,6.452340,-5.989923,2.079935,7.813618,-7.961469,8.886277,7.034382,9.791456,-8.344724,-1.804421,5.334758,-3.885761,2.978053,-8.123914,7.390883,-1.256680,1.843491,-6.308610,1.718718,4.285228,-0.429865,-2.635746,7.447160,-8.858302,-0.435580,-2.676023,-9.856583,7.503922,-1.906567,6.656995,-5.170411,-1.776463,0.723963,2.060627,-6.923475,-4.704872,1.239814,-3.203055,-6.128757,-1.548266,4.787479,-0.651299,7.847037,5.217095,-6.282242,6.739026,6.583855,-7.785112,-3.246254,6.542294,9.469245,5.753639,1.051292,2.881783,-6.981210,-8.737600,4.647380,9.235734,-2.221979,-2.472606,-8.101468,-1.690978,5.190683,-6.515085,-5.118984,-1.810136,5.943175,-3.216268,-9.147452,-8.237408,8.737953,-8.800569,5.716653,1.366521,3.853753,-1.175119,3.010678,1.875529,-7.337846,-7.010240,3.489122,-1.868478,-7.474428,7.192022,-9.614753,-3.948800,-7.864688,-2.061451,-2.707846,-3.657060,9.221477,6.120855,0.088158,7.718248,-9.893409,-3.512365,5.602241,-6.170456,4.087266,-3.356776,1.612852,5.188229,4.031322,-4.391610,6.688036,8.036893,0.599095,9.225587,7.102409,-2.890413,-9.948793,-4.885021,5.919860,3.017255,-5.928869,4.956144,-2.631187,-7.975930,-8.627075,-5.094245,8.291438,5.299110,-8.126117,1.484535,6.407649,-2.325756,-7.288847,3.671001,7.349405,-1.154641,-5.337988,-2.949269,-1.359164,5.460494,3.969197,-1.306830,8.375393,3.814719,-5.157437,-9.130230,3.854752,1.333694,3.304411,2.886338,9.696573,-3.097969,8.365162,2.822736,7.309773,9.471238,-5.541939,3.125138,7.610957,4.351136,7.002017,5.181317,-4.112046,-9.207252,-0.163964,1.138983,1.917175,7.105229,-2.564697,-8.931177,2.476420,-1.182339,2.867199,-6.039416,-4.024246,-3.197344,6.930979,-8.207426,-2.368249,2.704700,6.594233,6.213858,-6.340333,3.177996,9.333213,7.522201,7.069770,-3.257158,7.961218,0.240678,-1.823984,-9.317366,-2.478724,-7.009506,7.276986,0.390013,-9.810576,-2.929370,6.877435,6.543838,6.314059,-1.624385,-2.212764,-9.504735,2.485676,7.874438,9.158750,4.036249,8.983955,5.976397,1.219323,9.165445,5.606062,-5.664419,8.341879,7.753575,-0.569087,-9.199050,-2.864055,8.271942,-7.489805,1.246806,-4.510818,0.604931,-1.542192,-0.392056,2.452414,1.868436,4.183051,-5.942599,5.710282], dtype = "float64")#candidate|12532|(396,)|const|float64
call_12529 = relay.TupleGetItem(func_6837_call(relay.reshape(var_12530.astype('uint64'), [45,]), relay.reshape(const_12531.astype('uint64'), [360,]), relay.reshape(const_12532.astype('float64'), [396, 1]), ), 5)
call_12533 = relay.TupleGetItem(func_6841_call(relay.reshape(var_12530.astype('uint64'), [45,]), relay.reshape(const_12531.astype('uint64'), [360,]), relay.reshape(const_12532.astype('float64'), [396, 1]), ), 5)
func_6043_call = mod.get_global_var('func_6043')
func_6047_call = mutated_mod.get_global_var('func_6047')
var_12539 = relay.var("var_12539", dtype = "int16", shape = (700, 2))#candidate|12539|(700, 2)|var|int16
var_12540 = relay.var("var_12540", dtype = "float32", shape = (15, 1))#candidate|12540|(15, 1)|var|float32
call_12538 = relay.TupleGetItem(func_6043_call(relay.reshape(var_12539.astype('int16'), [10, 14, 10]), relay.reshape(var_12540.astype('float32'), [15,]), ), 1)
call_12541 = relay.TupleGetItem(func_6047_call(relay.reshape(var_12539.astype('int16'), [10, 14, 10]), relay.reshape(var_12540.astype('float32'), [15,]), ), 1)
func_12370_call = mod.get_global_var('func_12370')
func_12372_call = mutated_mod.get_global_var('func_12372')
call_12545 = func_12370_call()
call_12546 = func_12370_call()
func_6043_call = mod.get_global_var('func_6043')
func_6047_call = mutated_mod.get_global_var('func_6047')
call_12555 = relay.TupleGetItem(func_6043_call(relay.reshape(var_12539.astype('int16'), [10, 14, 10]), relay.reshape(var_12540.astype('float32'), [15,]), ), 0)
call_12556 = relay.TupleGetItem(func_6047_call(relay.reshape(var_12539.astype('int16'), [10, 14, 10]), relay.reshape(var_12540.astype('float32'), [15,]), ), 0)
output = relay.Tuple([call_12520,call_12522,var_12523,var_12524,const_12525,call_12529,var_12530,const_12531,const_12532,call_12538,var_12539,var_12540,call_12545,call_12555,])
output2 = relay.Tuple([call_12521,call_12526,var_12523,var_12524,const_12525,call_12533,var_12530,const_12531,const_12532,call_12541,var_12539,var_12540,call_12546,call_12556,])
func_12564 = relay.Function([var_12523,var_12524,var_12530,var_12539,var_12540,], output)
mod['func_12564'] = func_12564
mod = relay.transform.InferType()(mod)
mutated_mod['func_12564'] = func_12564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12564_call = mutated_mod.get_global_var('func_12564')
var_12566 = relay.var("var_12566", dtype = "float32", shape = (160,))#candidate|12566|(160,)|var|float32
var_12567 = relay.var("var_12567", dtype = "int8", shape = (384,))#candidate|12567|(384,)|var|int8
var_12568 = relay.var("var_12568", dtype = "uint64", shape = (15, 3))#candidate|12568|(15, 3)|var|uint64
var_12569 = relay.var("var_12569", dtype = "int16", shape = (700, 2))#candidate|12569|(700, 2)|var|int16
var_12570 = relay.var("var_12570", dtype = "float32", shape = (15, 1))#candidate|12570|(15, 1)|var|float32
call_12565 = func_12564_call(var_12566,var_12567,var_12568,var_12569,var_12570,)
output = call_12565
func_12571 = relay.Function([var_12566,var_12567,var_12568,var_12569,var_12570,], output)
mutated_mod['func_12571'] = func_12571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12295_call = mod.get_global_var('func_12295')
func_12297_call = mutated_mod.get_global_var('func_12297')
call_12578 = relay.TupleGetItem(func_12295_call(), 1)
call_12579 = relay.TupleGetItem(func_12297_call(), 1)
output = relay.Tuple([call_12578,])
output2 = relay.Tuple([call_12579,])
func_12596 = relay.Function([], output)
mod['func_12596'] = func_12596
mod = relay.transform.InferType()(mod)
mutated_mod['func_12596'] = func_12596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12596_call = mutated_mod.get_global_var('func_12596')
call_12597 = func_12596_call()
output = call_12597
func_12598 = relay.Function([], output)
mutated_mod['func_12598'] = func_12598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12295_call = mod.get_global_var('func_12295')
func_12297_call = mutated_mod.get_global_var('func_12297')
call_12607 = relay.TupleGetItem(func_12295_call(), 1)
call_12608 = relay.TupleGetItem(func_12297_call(), 1)
func_4128_call = mod.get_global_var('func_4128')
func_4131_call = mutated_mod.get_global_var('func_4131')
var_12610 = relay.var("var_12610", dtype = "uint16", shape = ())#candidate|12610|()|var|uint16
const_12611 = relay.const([[9,-2],[8,3],[-3,5],[-1,-10],[2,5],[-6,10],[-5,-6],[6,4],[5,-4],[-6,-8],[5,6],[2,-8],[-7,-8],[-7,-7],[-9,5],[8,-1],[-7,-6],[5,-1],[-9,6],[-3,8],[9,-5],[2,9],[6,9],[5,-6],[6,-7],[-8,-1],[7,8],[2,-2],[-2,7],[10,7],[10,-9],[-3,-7],[-9,-10],[-3,3],[10,10],[9,-3],[8,5],[6,5],[6,-2],[8,-10],[4,-3],[-2,-6],[8,-4],[-7,-10],[-9,-4],[-6,4],[10,-5],[-5,-7],[-6,5],[7,-2],[-9,-3],[-3,1],[5,8],[4,-5],[8,-5],[6,10]], dtype = "uint16")#candidate|12611|(56, 2)|const|uint16
call_12609 = relay.TupleGetItem(func_4128_call(relay.reshape(var_12610.astype('uint16'), []), relay.reshape(const_12611.astype('uint16'), [14, 8, 1]), ), 0)
call_12612 = relay.TupleGetItem(func_4131_call(relay.reshape(var_12610.astype('uint16'), []), relay.reshape(const_12611.astype('uint16'), [14, 8, 1]), ), 0)
func_11491_call = mod.get_global_var('func_11491')
func_11495_call = mutated_mod.get_global_var('func_11495')
var_12614 = relay.var("var_12614", dtype = "float64", shape = (384,))#candidate|12614|(384,)|var|float64
const_12615 = relay.const([3.901683,-0.690847,-6.136331,-8.702746,3.546174,1.991433,-5.310418,8.280329,-8.241052,-3.971992,3.664820,-6.052748,-8.741958,1.975947,-5.448500,2.931976,-0.171690,9.935731,6.569989,-6.196595,-7.126365,9.858744,7.358077,4.671529,5.372026,-6.339340,-7.278671,-1.754804,-5.983415,-0.209953,9.606998,-6.468772,-5.488236,-2.722002,7.786276,-4.181603,-4.771180,-3.910188,-5.577775,7.453596,-4.535479,-5.908712,-8.126642,2.326579,9.183836,-6.817844,7.333094,-8.646910,-5.918423,7.696834,0.262670,8.259382,9.986693,9.695269,1.001503,8.120888,1.229715,-5.053773,2.994125,-0.810545,-7.036163,4.984898,8.751635,5.432510,-9.118182,9.243264,-7.138730,0.315995,-1.449285,7.082297,-3.488995,9.250729,5.089043,5.184283,2.548561,8.988327,-0.188209,3.732182,-4.598429,3.584995,7.787816,4.418759,-6.333298,-1.126938,6.732601,-8.426746,-5.110359,7.232390,-0.910148,-1.060739,-4.086235,5.108185,-4.281580,-9.859988,9.618792,9.535530,-1.206947,-6.592117,-4.128454,-9.937540,-4.057200,0.932464,-7.830093,-7.152418,5.315285,4.057169,-3.741836,0.162773,9.423712,-6.213358,6.063076,-5.512241,-4.650306,-6.726335,3.465167,-1.191323,-3.834095,-9.617000,8.186805,7.855676,-6.287012,-4.310152,4.043715,6.256289,-8.853819,7.175389,-4.836547,8.329458,-6.710892,6.451236,-7.769134,6.542322,2.197205,-9.164494,0.060369,3.009249,-4.653468,-1.535086,9.204862,-3.677344,8.627187,-5.126358,4.494163,-8.690319,2.477256,7.847994,-8.222978,-4.099717,9.030491,-9.582111,-7.737050,-3.120471,8.294090,-9.681324,-7.073903,-3.097865,-5.222883,7.435299,5.371235,4.600996,6.862055,-8.654884,-8.622662,4.238062,3.995705,-3.143396,-0.139397,-3.469664,8.580181,-3.970765,-5.058845,-4.115240,7.049033,-6.071690,0.138833,-2.054218,6.229705,-8.323755,8.936643,7.606644,7.041629,3.733540,-5.571832,-6.915403,-2.039972,9.081033,9.975572,-4.481996,-1.395320,1.453714,-4.410168,-4.820123,0.981314,6.070813,7.494040,7.781141,-9.437226,-4.971478,0.935229,5.158803,4.689782,-5.538434,-1.042979,-8.011779,4.440666,-2.438765,0.245677,7.965067,-5.533010,7.229555,6.567143,-2.057247,5.703926,-9.646105,2.294219,2.457585,8.797894,-5.244061,-7.400630,-3.583314,-0.052576,1.765456,5.915066,-9.786634,-6.410096,8.666996,3.073702,0.208732,-6.530950,5.409690,3.351554,2.681155,-3.758574,-6.216536,-8.515227,-5.510464,-0.490556,-4.002517,6.485934,2.397065,-4.227260,5.269450,-3.197832,0.503062,0.384301,4.445943,9.464932,5.696094,-1.391698,-0.302694,-2.621369,4.944081,-1.836525,-4.931331,6.593674,7.305520,0.888587,7.834683,-9.296964,-9.972595,5.797549,-1.691309,-1.846382,-9.911184,-6.852193,4.164230,8.843382,6.894577,-5.304376,9.408297,8.004262,-4.252824,-9.602335,-0.451954,-3.396564,-8.533800,-0.139592,-6.920584,-1.550732,5.107144,7.112690,7.304951,-8.187847,-4.101897,-1.350638,-5.545325,2.086370,-9.252296,-1.052412,-0.987450,-8.575477,-4.231510,2.875136,6.727419,8.028148,-1.505190,-5.264558,8.190073,-4.566875,7.934997,-0.590796,-5.698677,-5.212966,4.376004,-0.900448,9.793866,-6.874558,3.201289,-9.163894,3.244884,-5.972423,-8.286025,7.107471,6.392292,-9.593722,-0.926708,-5.827495,-2.005079,-0.122585,4.895054,6.046835,9.547314,-7.126768,8.386949,4.236861,-3.408622,0.912288,-4.185473,-9.928985,-7.798227,6.440565,6.663506,-0.207628,-6.110460,0.209483,1.002295,7.522602,-2.075347,8.551541,-8.808205,-4.993181,-2.770706,-1.788833,-4.025577,-9.325156,0.372158,-2.671715,4.327260,-1.778213,3.650545,2.508050,-5.936149,8.180302,-5.955190,-3.076869,1.764139,3.662542,-4.088825,8.228422,7.551462,-3.572878,5.753181,0.477052,3.967143,-1.764185,-4.110185,2.565585,-6.015677,5.920879,1.193856,-2.475641,3.838192,3.032643,8.695933,-9.703846,-8.572618,6.292922,9.189593,7.653701,-1.168586,1.175794,5.613799,7.914894,1.662577,8.007370,-0.959020,-7.282935,3.074765,-0.690698,-8.697212,1.608111,2.331961,-3.353550,-7.190508,7.885235,0.077474,3.571442,3.751958,1.307879,8.270300,0.816825,-4.437773,0.021142,3.903120,-0.071724,3.793383,6.367568,-8.021451,8.700265,5.390832,2.358764,-5.311671,4.680137,7.397966,-6.663974,4.707107,-4.252873,2.749549,-7.519284,6.647069,-1.616339,-5.872539,1.393880,5.396137,2.736382,3.822932,-8.492159,1.489467,7.027283,-4.804014,-1.291798,-2.067259,4.948465,-6.304622,-1.412784,-7.681497,-5.399783,-8.446100,6.929510,2.397665,-0.614776,6.500111,-9.329098,8.773674,6.504590,8.721067,6.769493,-3.311161,-8.796620,-0.705706,7.480894,2.128493,-6.846205,8.011586,-6.159497,-0.349491,-7.290311,3.080909,4.625492,-6.972441,-6.342843,-1.196321,1.751068,-2.902757,7.319329,3.605749,6.854667,3.638328,-5.539712,0.298177,4.106036,-4.579062,5.789196,-0.115430,-4.604971,8.118842,-9.726474,-7.882015,-1.773884,6.414888,-2.658199,-1.430182,-0.084551,5.256020,1.275987,9.121099,-9.643267,-2.784054,8.150401,-3.672835,7.290947,-7.750951,4.487834,-1.606006,4.142688,-5.407208,-6.581918,1.600595,-1.220388,4.351642,7.916481,-2.048647,-9.021444,0.866860,2.236319,8.563395,9.528983,-9.369553,2.633957,-9.208979,8.798286,-4.038924,-1.236052,-6.485384,-4.815627,-9.005337,-0.550506,4.764414,4.308833,-7.608976,3.397331,3.224737,0.686828,7.256845,-0.603788,8.145819,-3.705000,4.343657,7.581682,1.793754,-3.840124,0.394917,-6.324024,1.167115,9.265168,-8.891585,-4.135255,9.631245,-7.292857,-2.550068,-3.719668,-5.934948,4.226400,1.289621,6.564165,-1.870491,-5.584606,-4.890038,-1.346706,-2.882889,7.091844,-2.528831,6.959155,4.938567,9.880722,-0.296318,2.775595,-1.814752,6.076914,2.674202,7.670067,-2.172623,0.366094,-4.754932,-0.236145,6.782737,-7.906061,3.069092,6.341584,6.691202,-4.742963,-4.487523,-3.191337,-2.452430,2.773095,-5.918757,5.838228,-6.387936,7.863935,2.534974,-7.134426,6.309346,-9.389454,-9.515384,4.288408,-2.307469,8.301523,4.372310,-8.420867,7.943788,4.327026,-7.520388,-1.727098,3.776210,1.918323,-2.423911,7.731227,-3.570789,-8.751022,0.668228,-9.196656,-4.294901,-0.282866,4.113324,7.202066,-6.057587,-7.829324,-7.216678,-2.383824,-5.052272,-6.496240,0.644163,-1.914610,8.892304,-6.986919,-5.605596,7.502796,-8.992879,-1.040623,-6.525733,4.756602,-1.066346,3.241170,-3.080825,-2.550158,3.464623,6.570177,-7.927362,3.981537,7.452272,-1.644818,-8.172500,-4.857713,-2.461305,9.010617,-2.736131,5.790454,-1.358583,7.814115,-1.251949,-0.361805,-8.982133,-9.595897,7.013533,1.583947,7.005783,7.992889,1.032845,1.602912,-7.385979,-6.706914,2.855366,-4.401914,-7.110459,-0.641024,0.375375,-8.299126,3.715890,2.386672,-3.113161,9.741033,-7.218756,-5.003732,-2.471128,4.074488,-4.531360,6.888674,-9.626044,1.638372,-6.782106,3.895139,-4.535976,1.288349,9.062586,7.284455,4.983792,9.864230,1.356962,8.298970,6.397304,-3.476680,-3.945410,6.355349,5.580350,2.185717,9.240071,-0.726120,3.399433,8.963774,-4.930285,-4.807695,0.075203,7.819620,9.772518,-1.841870,-4.313952,-3.033237,-1.311041,4.472170,6.214333,0.744100,2.124743,-3.093661,-5.771716,0.451427,-2.392069,-2.988219,-0.624538,-0.526737,3.970606,-8.601510,-7.634426,-2.836141,6.809406,-0.793789,7.201748,0.372132,3.523272,1.029140,6.241761,-3.757513,-4.627091,9.960505,8.034238,5.536934,-0.204069,-6.101296,-7.846003,0.863248,-4.370671,-6.671497,-3.678323,-7.017055,-3.398703,2.251258,4.222404,3.733015,-0.495684,-1.034929,8.319387,-8.765670,9.066897,-5.676774,-8.061056,6.598565,0.559972,-9.801670,6.967996,-2.662985,-1.438666,9.454255,6.661749,2.003632,1.865814,5.239145,2.841913,-2.871866,-1.223975,1.721796,6.250340,7.400186,-5.102306,-1.768779,4.789226,5.864050,-2.475868,0.087747,-9.357209,4.430607,-1.485094,-0.199150,7.105006,-3.558985,9.839928,-5.680682,6.014335,8.752305,5.385492,6.607864,-2.389044,-8.646343,-4.583900,9.567913,-4.124884,-7.994300,4.335720,4.983744,-2.181090,7.622135,4.507775,-8.294966,4.747222,-1.477525,5.575544,0.169688,3.536036,-6.151379,1.547427,-1.383087,-5.403461,-1.322527,5.888834,-1.521029,-7.123295,9.466740,1.517602,-6.499632,7.179220,6.583140,-0.901030,9.678226,-0.122006,3.865110,8.239663,-6.337015,0.050366,1.294663,-9.082458,-3.492177,8.901953,-4.954305,1.297540,-2.771185,7.832162,7.078258,-6.235165,2.734489,-8.869142,2.691865,-6.971669,6.737700,-2.297009,-1.241245,7.073607,7.209819,-2.935995,7.124112,-2.791142,8.997426,-4.126782,-7.547568,8.629523,6.002466,-4.057276,3.244065,-9.870148,-0.672067,2.238229,5.458937,6.735916,-9.464729,-2.777663,1.212418,5.469854,0.938773,0.548354,-9.695833,2.073244,-8.620438,-9.666101,6.781548,5.666898,-3.587001,-5.134046,8.326330,-9.594601,-1.765725,3.197323,-6.056906,-2.035497,-3.393810,5.669846,-6.442971,4.958328,-1.870362,-8.399051,-4.629107,-1.096665,-5.019184,4.011470,-6.668664,1.093918,-8.701968,8.429952,4.607346,-2.827600,3.397544,2.406389,4.127122,5.347156,-2.854044,7.966557,8.987964,8.950968,-0.545299,5.022936,2.725294,2.594739,6.641079,-1.464051,-5.602965,4.361093,-7.660223,6.137649,0.303194,4.037478,-6.705174,-9.558776,-4.777346,-0.441330,-8.774738,-9.678916,-0.947796,-8.087196,-6.363082,9.694445,4.371443,-3.968456,2.333192,8.242173,-9.505450,-9.652838,6.829107,-3.944251,1.480347,2.603907,-4.408202,4.199652,5.911920,5.312236,-6.770829,2.140345,8.859521,3.073580,2.842753,5.533421,2.355905,2.096116,-5.517884,1.446085,-7.535028,-9.384169,-4.464589,7.272392,5.951062,7.351630,8.459406,6.607959,-5.059962,6.954238,-4.094629,-2.344539,5.364578,-8.961228,0.766648,7.688999,-7.226979,3.303230,3.603300,8.415184,2.869144,-1.551964,4.124681,4.023327,-3.834369,7.305383,3.718646,-5.793971,4.758937,-2.593000,-8.567742,-5.844731,0.800396,1.370763,5.316972,1.949087,1.894813,3.179224,-3.128164,6.604316,-1.015577,9.776613,-2.375909,-6.324698,-5.906322,-8.630506,-3.112990,-8.742430,-4.452873,-9.372070,-6.465768,-6.841100,8.499499,-7.981703,-6.869911,-3.720349,-0.082522,-7.620820,1.847463,7.673970,-4.397449,4.941488,-3.692963,-5.517041,1.313747,-8.000451,5.820596,-6.137101,8.538966,-2.071417,-8.279982,-7.343734,-3.689370,7.549969,7.819978,1.575233,-6.055394,-8.186808,-7.491114,-6.108699,9.175156,8.669263,6.849110,2.105014,-1.742494,1.553584,-0.956350,-2.450434,-7.592254,-8.985413,-5.472830,5.532814,-3.381733,2.728379,3.215092,9.537806,2.544798,7.244135,-2.087606,0.496302,-3.637399,4.795714,-6.500152,2.302261,7.714155,-9.821772,3.224952,-8.629416,1.356843,4.264305,5.753128,3.047175,2.853198,-5.639145,1.629368,6.981228,-4.181431,-5.021550,-3.028022,1.798790,1.014551,1.664133,-8.894359,0.650226,0.120163,-2.741675,4.421704,7.515914,-0.388923,-9.503856,0.965397,2.478286,-0.651836,-7.210262,9.109266,-7.252367,1.976371,3.883020,2.164057,5.522420,6.779163,-7.376589,9.578056,-2.931529,8.363165,7.821456,-8.949030,-6.543867,-8.719549,7.526832,-8.819662,8.005114,4.002607,7.474758,4.774404,6.361928,-0.288700,0.878370,-6.310666,7.920200,-3.552375,-9.019603,1.540830,4.026328,-5.716182,3.360163,-7.099752,-5.073743,-0.227784,-0.229467,2.048891,-9.487865,8.939512,4.219985,4.523304,9.686378,-3.096329,-3.605214,-2.420464,1.113697,-7.296424,-8.298941,0.955100,-0.642747,-7.543229,4.997189,0.330391,-0.822196,6.233143,-4.565141,-1.365019,-4.889004,0.925570,2.387849,-2.401517,-1.191772,0.582363,2.381273,-5.933134,-6.946408,5.067685,-3.471000,-5.895597,9.919017,-6.593593,-3.009469,-7.552296,1.477687,-5.808170,1.385103,-9.279650,1.353065,-9.416151,-5.401350,3.163930,-0.369675,8.601913,4.226575,4.932877,4.990267,-2.448356,-6.019123,4.976849,-9.971040,-9.386653,-6.410584,-6.219508,9.089717,6.205114,2.672870,-4.679009,3.289486,-0.069941,3.143040,9.908230,1.706494,2.393490,-1.445085,-6.221544,-7.893707,6.660945,4.444734,-4.281412,-0.165784,-3.707710,-4.703084,8.035282,-4.478398,-2.283293,1.105720,1.904531,7.086710,7.351462,9.378051,9.834402,-9.844720,-7.151735,-2.267075,-4.116350,-2.275587,-6.578701,-3.962329,-3.467442,8.305129,-7.159272,8.393074,2.271345,-1.756344,-7.451686,-2.666637,6.383684,-3.238880,-8.921802,5.067648,-5.605929,-0.191082,-9.278754,-4.431348,1.496307,-7.744026,8.365240,3.274469,-5.751798,4.357514,9.938732,-4.246268,-9.511109,1.382413,9.899936,-1.091457,-9.725144,-6.845922,0.109226,-1.035698,-3.881577,-6.899064,-0.387202,6.885371,-1.379569,5.776464,-5.568847,-2.702989,0.284172,-0.891352,-2.212186,-9.308383,1.501540,-4.108436,5.023039,3.158578,1.465367,3.243552,-2.456374,-6.195629,0.815196,-2.758247,-9.113635,0.591197,-1.459532,-0.998676], dtype = "float64")#candidate|12615|(1260,)|const|float64
var_12616 = relay.var("var_12616", dtype = "float64", shape = (72, 1))#candidate|12616|(72, 1)|var|float64
call_12613 = relay.TupleGetItem(func_11491_call(relay.reshape(var_12614.astype('float64'), [16, 3, 8]), relay.reshape(const_12615.astype('float64'), [1260,]), relay.reshape(var_12616.astype('float64'), [72,]), ), 3)
call_12617 = relay.TupleGetItem(func_11495_call(relay.reshape(var_12614.astype('float64'), [16, 3, 8]), relay.reshape(const_12615.astype('float64'), [1260,]), relay.reshape(var_12616.astype('float64'), [72,]), ), 3)
var_12618 = relay.var("var_12618", dtype = "float64", shape = (72, 1))#candidate|12618|(72, 1)|var|float64
bop_12619 = relay.divide(var_12616.astype('float64'), relay.reshape(var_12618.astype('float64'), relay.shape_of(var_12616))) # shape=(72, 1)
output = relay.Tuple([call_12607,call_12609,var_12610,const_12611,call_12613,var_12614,const_12615,bop_12619,])
output2 = relay.Tuple([call_12608,call_12612,var_12610,const_12611,call_12617,var_12614,const_12615,bop_12619,])
F = relay.Function([var_12610,var_12614,var_12616,var_12618,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12610,var_12614,var_12616,var_12618,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_2889(%var_2843: uint16, %var_2844: Tensor[(15, 3, 5), uint16], %var_2856: Tensor[(420), bool]) -> (Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) {
  %0 = cast(%var_2843, dtype="uint16") /* ty=uint16 */;
  %1 = cast(%var_2844, dtype="uint16") /* ty=Tensor[(15, 3, 5), uint16] */;
  %2 = cast(%var_2843, dtype="bool") /* ty=bool */;
  %3 = cast(%var_2856, dtype="bool") /* ty=Tensor[(420), bool] */;
  %4 = reshape(%2, newshape=[]) /* ty=bool */;
  %5 = reshape(%3, newshape=[2, 14, 15]) /* ty=Tensor[(2, 14, 15), bool] */;
  %6 = @func_2509(%4, %5) /* ty=Tensor[(2, 14, 15), bool] */;
  %7 = cast(%var_2856, dtype="float32") /* ty=Tensor[(420), float32] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %11 = maximum(%9, %10) /* ty=Tensor[(2, 14, 15), float32] */;
  %12 = cast(%11, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
  %13 = bitwise_xor(%0, %1) /* ty=Tensor[(15, 3, 5), uint16] */;
  %14 = acosh(%12) /* ty=Tensor[(2, 14, 15), float32] */;
  (%13, %14)
}

def @main(%var_12610: uint16, %var_12614: Tensor[(384), float64], %var_12616: Tensor[(72, 1), float64], %var_12618: Tensor[(72, 1), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(14, 8, 1), bool], uint16, Tensor[(56, 2), uint16], Tensor[(72), float64], Tensor[(384), float64], Tensor[(1260), float64], Tensor[(72, ?), float64]) {
  %15 = @func_12295() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), float64]) */;
  %16 = cast(%var_12610, dtype="uint16") /* ty=uint16 */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(56, 2), uint16] */, dtype="uint16") /* ty=Tensor[(56, 2), uint16] */;
  %18 = reshape(%16, newshape=[]) /* ty=uint16 */;
  %19 = reshape(%17, newshape=[14, 8, 1]) /* ty=Tensor[(14, 8, 1), uint16] */;
  %20 = @func_4128(%18, %19) /* ty=(Tensor[(14, 8, 1), bool],) */;
  %21 = cast(%var_12614, dtype="float64") /* ty=Tensor[(384), float64] */;
  %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %23 = cast(%var_12616, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %24 = reshape(%21, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %25 = reshape(%22, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %26 = reshape(%23, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %27 = @func_11491(%24, %25, %26) /* ty=(Tensor[(16, 3, 8), float64], Tensor[(72), int64], Tensor[(1260), float64], Tensor[(72), float64]) */;
  %28 = cast(%var_12618, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %29 = shape_of(%var_12616, dtype="int32") /* ty=Tensor[(2), int32] */;
  %30 = cast(%var_12616, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %32 = %15.1;
  %33 = %20.0;
  %34 = %27.3;
  %35 = divide(%30, %31) /* ty=Tensor[(72, ?), float64] */;
  (%32, %33, %var_12610, meta[relay.Constant][0] /* ty=Tensor[(56, 2), uint16] */, %34, %var_12614, meta[relay.Constant][1] /* ty=Tensor[(1260), float64] */, %35)
}

def @func_1697(%var_1649: Tensor[(16, 5, 3), float32], %var_1657: Tensor[(104), float64], %var_1691: Tensor[(72), float64]) -> (Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) {
  %36 = cast(%var_1657, dtype="float64") /* ty=Tensor[(104), float64] */;
  %37 = cast(%var_1657, dtype="float64") /* ty=Tensor[(104), float64] */;
  %38 = reshape(%36, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %39 = reshape(%37, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %40 = cast(%var_1649, dtype="float32") /* ty=Tensor[(16, 5, 3), float32] */;
  %41 = sigmoid(%40) /* ty=Tensor[(16, 5, 3), float32] */;
  %42 = cast(%var_1649, dtype="int16") /* ty=Tensor[(16, 5, 3), int16] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%41, dtype="int16") /* ty=Tensor[(16, 5, 3), int16] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %46 = minimum(%44, %45) /* ty=Tensor[(16, 5, 3), int16] */;
  %47 = cast(%46, dtype="float32") /* ty=Tensor[(16, 5, 3), float32] */;
  %48 = atan(%47) /* ty=Tensor[(16, 5, 3), float32] */;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(16, 5, 3), float64] */;
  %50 = log2(%49) /* ty=Tensor[(16, 5, 3), float64] */;
  %51 = cast(%41, dtype="int8") /* ty=Tensor[(16, 5, 3), int8] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%50, dtype="int8") /* ty=Tensor[(16, 5, 3), int8] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %55 = cast(%var_1691, dtype="float64") /* ty=Tensor[(72), float64] */;
  %56 = reshape(%55, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %57 = @func_931(%38, %39) /* ty=Tensor[(4, 13, 2), float64] */;
  %58 = bitwise_xor(%53, %54) /* ty=Tensor[(16, 5, 3), int8] */;
  %59 = @func_340(%56) /* ty=Tensor[(6, ?, 12), int32] */;
  (%57, %var_1657, %58, %59, %var_1691)
}

def @func_12000(%var_11956: uint16, %var_11972: Tensor[(384), float64], %var_11980: Tensor[(1260), float64]) -> (Tensor[(14, 7, 9), uint16], Tensor[(384), float64], Tensor[(1260), float64], Tensor[(72), float64], Tensor[(1260), bool]) {
  %60 = cast(%var_11956, dtype="uint16") /* ty=uint16 */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 7, 9), uint16] */, dtype="uint16") /* ty=Tensor[(14, 7, 9), uint16] */;
  %62 = cast(%var_11972, dtype="float64") /* ty=Tensor[(384), float64] */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %65 = reshape(%62, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %66 = reshape(%63, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %67 = reshape(%64, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %68 = @func_11491(%65, %66, %67) /* ty=(Tensor[(16, 3, 8), float64], Tensor[(72), int64], Tensor[(1260), float64], Tensor[(72), float64]) */;
  %69 = %68.2;
  %70 = cast(%var_11980, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(1), int32] */;
  %72 = cast(%69, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?), bool] */;
  %74 = minimum(%60, %61) /* ty=Tensor[(14, 7, 9), uint16] */;
  %75 = not_equal(%72, %73) /* ty=Tensor[(1260), bool] */;
  (%74, %var_11972, meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, meta[relay.Constant][4] /* ty=Tensor[(72), float64] */, %75)
}

def @func_11227(%var_11217: Tensor[(7, 15, 12), float64]) -> (Tensor[(7, 15, 12), float64], Tensor[(7, 15, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) {
  %76 = cast(%var_11217, dtype="float64") /* ty=Tensor[(7, 15, 12), float64] */;
  %77 = cast(%var_11217, dtype="float64") /* ty=Tensor[(7, 15, 12), float64] */;
  %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %79 = reshape(%78, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %80 = rsqrt(%76) /* ty=Tensor[(7, 15, 12), float64] */;
  %81 = atan(%77) /* ty=Tensor[(7, 15, 12), float64] */;
  %82 = @func_340(%79) /* ty=Tensor[(6, ?, 12), int32] */;
  (%80, %81, %82, meta[relay.Constant][5] /* ty=Tensor[(72), float64] */)
}

def @func_2236(%var_2171: Tensor[(9, 4, 8), uint32], %var_2208: Tensor[(240), float32]) -> (Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) {
  %83 = cast(%var_2171, dtype="bool") /* ty=Tensor[(9, 4, 8), bool] */;
  %84 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(9, 4, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(9, 4, 8), uint32] */, dtype="bool") /* ty=Tensor[(9, 4, 8), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %88 = reshape(%87, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %89 = cast(meta[relay.Constant][8] /* ty=Tensor[(50, 2), float32] */, dtype="float32") /* ty=Tensor[(50, 2), float32] */;
  %90 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %91 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %92 = reshape(%89, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float32] */;
  %93 = reshape(%90, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
  %94 = reshape(%91, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
  %95 = @func_1012(%92, %93, %94) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(1, 104), float64], Tensor[(?, 72), int64], Tensor[(6, ?, 12), int32], Tensor[(6, ?, 12), int32], Tensor[(?, 10, 10), bool]) */;
  %96 = cast(%var_2208, dtype="float32") /* ty=Tensor[(240), float32] */;
  %97 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %98 = %95.4;
  %99 = cast(%98, dtype="float64") /* ty=Tensor[(6, ?, 12), float64] */;
  %100 = reshape(%96, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), float32] */;
  %101 = reshape(%97, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %102 = reshape(%99, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %103 = @func_1697(%100, %101, %102) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
  %104 = %103.0;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
  %106 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %107 = reshape(%105, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %108 = reshape(%106, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %109 = @func_931(%107, %108) /* ty=Tensor[(4, 13, 2), float64] */;
  %110 = cast(%109, dtype="bool") /* ty=Tensor[(4, 13, 2), bool] */;
  %111 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(1, 104), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %112 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 104), float64] */, dtype="bool") /* ty=Tensor[(1, 104), bool] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %114 = equal(%85, %86) /* ty=Tensor[(9, 4, 8), bool] */;
  %115 = @func_340(%88) /* ty=Tensor[(6, ?, 12), int32] */;
  %116 = less(%112, %113) /* ty=Tensor[(?, 104), bool] */;
  (%114, %115, meta[relay.Constant][7] /* ty=Tensor[(6, 12), float64] */, %98, meta[relay.Constant][8] /* ty=Tensor[(50, 2), float32] */, %104, %var_2208, %116)
}

def @func_6798(%var_6767: int8, %var_6768: Tensor[(3, 13, 9), int8], %var_6786: Tensor[(1, 90), float64]) -> (Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), bool], Tensor[(2, 15, 3), float64], Tensor[(1, 90), float64]) {
  %117 = cast(%var_6767, dtype="bool") /* ty=bool */;
  %118 = cast(%var_6768, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
  %119 = less(%117, %118) /* ty=Tensor[(3, 13, 9), bool] */;
  %120 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 13, 9), bool] */, dtype="int64") /* ty=Tensor[(3, 13, 9), int64] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%119, dtype="int64") /* ty=Tensor[(3, 13, 9), int64] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %124 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 13, 9), bool] */, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
  %125 = shape_of(%var_6768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%var_6768, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %128 = cast(%var_6786, dtype="float64") /* ty=Tensor[(1, 90), float64] */;
  %129 = reshape(%128, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %130 = @func_6708(%129) /* ty=(Tensor[(2, 15, 3), float64],) */;
  %131 = bitwise_and(%122, %123) /* ty=Tensor[(3, 13, 9), int64] */;
  %132 = equal(%126, %127) /* ty=Tensor[(3, 13, 9), bool] */;
  %133 = %130.0;
  (%131, %132, %133, %var_6786)
}

def @func_10974(%var_10964: Tensor[(5, 150), float64], %var_10965: Tensor[(6, 12), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(72), float64], Tensor[(2080), int8], Tensor[(5, 150), float64], Tensor[(6, 12), float64]) {
  %134 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %135 = cast(meta[relay.Constant][11] /* ty=Tensor[(2080), int8] */, dtype="int8") /* ty=Tensor[(2080), int8] */;
  %136 = cast(meta[relay.Constant][11] /* ty=Tensor[(2080), int8] */, dtype="int8") /* ty=Tensor[(2080), int8] */;
  %137 = cast(%var_10964, dtype="float64") /* ty=Tensor[(5, 150), float64] */;
  %138 = cast(%var_10965, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %139 = reshape(%135, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int8] */;
  %140 = reshape(%136, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int8] */;
  %141 = reshape(%137, newshape=[750]) /* ty=Tensor[(750), float64] */;
  %142 = reshape(%138, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %143 = @func_4735(%139, %140, %141, %142) /* ty=(Tensor[(13, 10, 16), bool], Tensor[(7, 11, 3), bool], Tensor[(750), float64], Tensor[(72), float64]) */;
  %144 = %134.0;
  %145 = %143.3;
  (%144, %145, meta[relay.Constant][11] /* ty=Tensor[(2080), int8] */, %var_10964, %var_10965)
}

def @func_6837(%var_6829: Tensor[(45), uint64], %var_6830: Tensor[(360), uint64], %var_6831: Tensor[(396, 1), float64]) -> (Tensor[(2, 15, 8), uint8], Tensor[(50, 2), float32], float32, Tensor[(686), float32], Tensor[(7, 7, 14), float64], Tensor[(5, 9, 8), uint64], Tensor[(45), uint64], Tensor[(360), uint64], Tensor[(396, 1), float64]) {
  %146 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 15, 8), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 8), uint8] */;
  %147 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(2, 15, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 15, 8), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 8), uint8] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %150 = cast(-4.63293f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %151 = cast(meta[relay.Constant][14] /* ty=Tensor[(686), float32] */, dtype="float32") /* ty=Tensor[(686), float32] */;
  %152 = left_shift(%148, %149) /* ty=Tensor[(2, 15, 8), uint8] */;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
  %154 = reshape(%150, newshape=[]) /* ty=float32 */;
  %155 = reshape(%151, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
  %156 = reshape(%153, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %157 = @func_3805(%154, %155, %156) /* ty=(Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) */;
  %158 = cast(-4.63293f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %159 = cast(meta[relay.Constant][14] /* ty=Tensor[(686), float32] */, dtype="float32") /* ty=Tensor[(686), float32] */;
  %160 = cast(%152, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
  %161 = reshape(%158, newshape=[]) /* ty=float32 */;
  %162 = reshape(%159, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
  %163 = reshape(%160, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %164 = @func_3805(%161, %162, %163) /* ty=(Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) */;
  %165 = cast(%var_6829, dtype="uint64") /* ty=Tensor[(45), uint64] */;
  %166 = cast(%var_6830, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %167 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 15, 8), uint8] */, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
  %168 = cast(%var_6831, dtype="float64") /* ty=Tensor[(396, 1), float64] */;
  %169 = reshape(%165, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), uint64] */;
  %170 = reshape(%166, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), uint64] */;
  %171 = reshape(%167, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
  %172 = reshape(%168, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %173 = @func_6528(%169, %170, %171, %172) /* ty=(Tensor[(5, 9, 8), uint64], Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(1540), float64], Tensor[(72), float64], Tensor[(9, 11, 4), float64], Tensor[(396), uint64], Tensor[(9, 11, 4), uint16], Tensor[(72), float64], Tensor[(750), float64], Tensor[(120, 2), uint32]) */;
  %174 = %157.0;
  %175 = %164.3;
  %176 = %173.0;
  (%152, %174, -4.63293f /* ty=float32 */, meta[relay.Constant][14] /* ty=Tensor[(686), float32] */, %175, %176, %var_6829, %var_6830, %var_6831)
}

def @func_11762(%var_11758: Tensor[(5, 84), bool]) -> (Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(1260), float64], Tensor[(72, 1), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(5, 84), bool]) {
  %177 = @func_11138() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %178 = cast(meta[relay.Constant][15] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %179 = cast(meta[relay.Constant][16] /* ty=Tensor[(72, 1), float64] */, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %180 = reshape(%178, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %181 = reshape(%179, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %182 = @func_11467(%180, %181) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(72), int64]) */;
  %183 = cast(meta[relay.Constant][17] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %184 = cast(meta[relay.Constant][18] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %185 = cast(%var_11758, dtype="bool") /* ty=Tensor[(5, 84), bool] */;
  %186 = reshape(%183, newshape=[]) /* ty=uint16 */;
  %187 = reshape(%184, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
  %188 = reshape(%185, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %189 = @func_2889(%186, %187, %188) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
  %190 = %177.0;
  %191 = %182.1;
  %192 = %189.1;
  (%190, %191, meta[relay.Constant][15] /* ty=Tensor[(1260), float64] */, meta[relay.Constant][16] /* ty=Tensor[(72, 1), float64] */, %192, meta[relay.Constant][17] /* ty=uint16 */, meta[relay.Constant][18] /* ty=Tensor[(225), uint16] */, %var_11758)
}

def @func_10886(%var_10876: bool) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 14, 15), bool], bool) {
  %193 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %194 = cast(%var_10876, dtype="bool") /* ty=bool */;
  %195 = reshape(%194, newshape=[]) /* ty=bool */;
  %196 = @func_4049(%195) /* ty=(Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) */;
  %197 = %193.0;
  %198 = %196.1;
  (%197, %198, %var_10876)
}

def @func_11682() -> (Tensor[(7, 4, 11), float64],) {
  %199 = @func_11326() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %200 = %199.0;
  (%200,)
}

def @func_931(%var_900: Tensor[(4, 13, 2), float64], %var_901: Tensor[(4, 13, 2), float64]) -> Tensor[(4, 13, 2), float64] {
  %201 = cast(%var_901, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
  %202 = shape_of(%var_900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%var_900, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%203, %204) /* ty=Tensor[(4, 13, 2), float64] */
}

def @func_12564(%var_12523: Tensor[(160), float32], %var_12524: Tensor[(384), int8], %var_12530: Tensor[(15, 3), uint64], %var_12539: Tensor[(700, 2), int16], %var_12540: Tensor[(15, 1), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 15, 3), float64], Tensor[(160), float32], Tensor[(384), int8], Tensor[(90), float64], Tensor[(5, 9, 8), uint64], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(3, 5, 9), int16], Tensor[(700, 2), int16], Tensor[(15, 1), float32], Tensor[(7, 4, 11), float64], Tensor[(10, 14, 10), int16]) {
  %205 = @func_11326() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %206 = cast(%var_12523, dtype="float32") /* ty=Tensor[(160), float32] */;
  %207 = cast(%var_12524, dtype="int8") /* ty=Tensor[(384), int8] */;
  %208 = cast(meta[relay.Constant][19] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %209 = reshape(%206, newshape=[16, 5, 2]) /* ty=Tensor[(16, 5, 2), float32] */;
  %210 = reshape(%207, newshape=[48, 8]) /* ty=Tensor[(48, 8), int8] */;
  %211 = reshape(%208, newshape=[45, 2]) /* ty=Tensor[(45, 2), float64] */;
  %212 = @func_9667(%209, %210, %211) /* ty=(Tensor[(16, 5, 2), float32], Tensor[(12, 4, 8), int8], Tensor[(48, 8), int8], Tensor[(16, 5, 2), float32], Tensor[(2, 15, 3), float64], Tensor[(45, 2), float64]) */;
  %213 = cast(%var_12530, dtype="uint64") /* ty=Tensor[(15, 3), uint64] */;
  %214 = cast(meta[relay.Constant][20] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %215 = cast(meta[relay.Constant][21] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %216 = reshape(%213, newshape=[45]) /* ty=Tensor[(45), uint64] */;
  %217 = reshape(%214, newshape=[360]) /* ty=Tensor[(360), uint64] */;
  %218 = reshape(%215, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %219 = @func_6837(%216, %217, %218) /* ty=(Tensor[(2, 15, 8), uint8], Tensor[(50, 2), float32], float32, Tensor[(686), float32], Tensor[(7, 7, 14), float64], Tensor[(5, 9, 8), uint64], Tensor[(45), uint64], Tensor[(360), uint64], Tensor[(396, 1), float64]) */;
  %220 = cast(%var_12539, dtype="int16") /* ty=Tensor[(700, 2), int16] */;
  %221 = cast(%var_12540, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
  %222 = reshape(%220, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), int16] */;
  %223 = reshape(%221, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %224 = @func_6043(%222, %223) /* ty=(Tensor[(10, 14, 10), int16], Tensor[(3, 5, 9), int16], Tensor[(15), float32], Tensor[(135), float32]) */;
  %225 = cast(%var_12539, dtype="int16") /* ty=Tensor[(700, 2), int16] */;
  %226 = cast(%var_12540, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
  %227 = reshape(%225, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), int16] */;
  %228 = reshape(%226, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %229 = @func_6043(%227, %228) /* ty=(Tensor[(10, 14, 10), int16], Tensor[(3, 5, 9), int16], Tensor[(15), float32], Tensor[(135), float32]) */;
  %230 = %205.0;
  %231 = %212.4;
  %232 = %219.5;
  %233 = %224.1;
  %234 = @func_12370() /* ty=Tensor[(7, 4, 11), float64] */;
  %235 = %229.0;
  (%230, %231, %var_12523, %var_12524, meta[relay.Constant][19] /* ty=Tensor[(90), float64] */, %232, %var_12530, meta[relay.Constant][20] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][21] /* ty=Tensor[(396), float64] */, %233, %var_12539, %var_12540, %234, %235)
}

def @func_9465(%var_9451: Tensor[(4, 7, 7), uint8], %var_9452: Tensor[(4, 7, 7), uint8]) -> (Tensor[(4, 7, 7), uint8], Tensor[(4, 7, 7), float64]) {
  %236 = cast(%var_9452, dtype="uint8") /* ty=Tensor[(4, 7, 7), uint8] */;
  %237 = shape_of(%var_9451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_9451, dtype="uint8") /* ty=Tensor[(4, 7, 7), uint8] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %240 = cast(%var_9452, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %241 = bitwise_xor(%238, %239) /* ty=Tensor[(4, 7, 7), uint8] */;
  %242 = sinh(%240) /* ty=Tensor[(4, 7, 7), float64] */;
  (%241, %242)
}

def @func_12203() -> (Tensor[(7, 4, 11), float64],) {
  %243 = @func_11789() /* ty=Tensor[(7, 4, 11), float64] */;
  (%243,)
}

def @func_11012() -> Tensor[(7, 4, 11), float64] {
  %244 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %244.0
}

def @func_11056(%var_11031: bool, %var_11052: Tensor[(128), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(12, 15, 16), float32], bool, Tensor[(16, 8, 1), float64], Tensor[(128), float64], Tensor[(396), float64]) {
  %245 = cast(%var_11031, dtype="bool") /* ty=bool */;
  %246 = reshape(%245, newshape=[]) /* ty=bool */;
  %247 = @func_4049(%246) /* ty=(Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) */;
  %248 = cast(%var_11052, dtype="float64") /* ty=Tensor[(128), float64] */;
  %249 = cast(meta[relay.Constant][22] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %250 = reshape(%248, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
  %251 = reshape(%249, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %252 = @func_7842(%250, %251) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(9, 11, 4), float64], Tensor[(396), float64]) */;
  %253 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  %254 = %247.0;
  %255 = %252.0;
  (%253, %254, %var_11031, %255, %var_11052, meta[relay.Constant][22] /* ty=Tensor[(396), float64] */)
}

def @func_2509(%var_2502: bool, %var_2503: Tensor[(2, 14, 15), bool]) -> Tensor[(2, 14, 15), bool] {
  %256 = cast(%var_2502, dtype="bool") /* ty=bool */;
  %257 = cast(%var_2503, dtype="bool") /* ty=Tensor[(2, 14, 15), bool] */;
  logical_or(%256, %257) /* ty=Tensor[(2, 14, 15), bool] */
}

def @func_1935(%var_1858: Tensor[(8, 6, 14), int64], %var_1869: Tensor[(240), float32], %var_1870: Tensor[(104), float64], %var_1871: Tensor[(72, 1), float64]) -> (Tensor[(8, 6, 14), bool], Tensor[(6, ?, 12), int32], Tensor[(240), float32], Tensor[(104), float64], Tensor[(8, 6, 14), bool], Tensor[(72, 1), float64], Tensor[(?, 10, 10), bool], Tensor[(100), float32]) {
  %258 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 6, 14), int64] */, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
  %259 = shape_of(%var_1858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%var_1858, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %262 = cast(%var_1869, dtype="float32") /* ty=Tensor[(240), float32] */;
  %263 = cast(%var_1870, dtype="float64") /* ty=Tensor[(104), float64] */;
  %264 = cast(%var_1871, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %265 = reshape(%262, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), float32] */;
  %266 = reshape(%263, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %267 = reshape(%264, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %268 = @func_1697(%265, %266, %267) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
  %269 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 6, 14), int64] */, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
  %270 = shape_of(%var_1858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_1858, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = cast(%var_1871, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %274 = cosh(%273) /* ty=Tensor[(72, 1), float64] */;
  %275 = cast(%274, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %276 = cast(meta[relay.Constant][24] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
  %277 = cast(%var_1870, dtype="float64") /* ty=Tensor[(104), float64] */;
  %278 = cast(%274, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %279 = reshape(%276, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float32] */;
  %280 = reshape(%277, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
  %281 = reshape(%278, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
  %282 = @func_1012(%279, %280, %281) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(1, 104), float64], Tensor[(?, 72), int64], Tensor[(6, ?, 12), int32], Tensor[(6, ?, 12), int32], Tensor[(?, 10, 10), bool]) */;
  %283 = less(%260, %261) /* ty=Tensor[(8, 6, 14), bool] */;
  %284 = %268.3;
  %285 = not_equal(%271, %272) /* ty=Tensor[(8, 6, 14), bool] */;
  %286 = sin(%275) /* ty=Tensor[(72, 1), float64] */;
  %287 = %282.5;
  (%283, %284, %var_1869, %var_1870, %285, %286, %287, meta[relay.Constant][24] /* ty=Tensor[(100), float32] */)
}

def @func_7610(%var_7599: bool) -> (Tensor[(14, 6, 4), bool],) {
  %288 = cast(%var_7599, dtype="bool") /* ty=bool */;
  %289 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 6, 4), bool] */, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
  %290 = logical_or(%288, %289) /* ty=Tensor[(14, 6, 4), bool] */;
  (%290,)
}

def @func_3941(%var_3928: Tensor[(15, 4, 3), uint32], %var_3938: Tensor[(104), float64]) -> (Tensor[(15, 4, 3), float32], Tensor[(4, 13, 2), float64], Tensor[(104), float64]) {
  %291 = cast(%var_3928, dtype="uint32") /* ty=Tensor[(15, 4, 3), uint32] */;
  %292 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(15, 4, 3), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 4, 3), uint32] */, dtype="uint32") /* ty=Tensor[(15, 4, 3), uint32] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %295 = multiply(%293, %294) /* ty=Tensor[(15, 4, 3), uint32] */;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
  %297 = cast(%var_3938, dtype="float64") /* ty=Tensor[(104), float64] */;
  %298 = cast(%var_3938, dtype="float64") /* ty=Tensor[(104), float64] */;
  %299 = reshape(%297, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %300 = reshape(%298, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %301 = log10(%296) /* ty=Tensor[(15, 4, 3), float32] */;
  %302 = @func_931(%299, %300) /* ty=Tensor[(4, 13, 2), float64] */;
  (%301, %302, %var_3938)
}

def @func_5861(%var_5847: Tensor[(3, 5, 1), float32], %var_5857: Tensor[(3, 5, 9), float32]) -> Tensor[(3, 5, 9), int16] {
  %303 = cast(%var_5847, dtype="float32") /* ty=Tensor[(3, 5, 1), float32] */;
  %304 = sigmoid(%303) /* ty=Tensor[(3, 5, 1), float32] */;
  %305 = cast(%304, dtype="int16") /* ty=Tensor[(3, 5, 1), int16] */;
  %306 = cast(%var_5857, dtype="int16") /* ty=Tensor[(3, 5, 9), int16] */;
  bitwise_and(%305, %306) /* ty=Tensor[(3, 5, 9), int16] */
}

def @func_9117(%var_9081: Tensor[(12, 4, 4), float64], %var_9088: Tensor[(360), uint64], %var_9113: Tensor[(2080), int8], %var_9114: Tensor[(750), float64]) -> (Tensor[(50, 2), float32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(6, ?, 12), int32], Tensor[(72, 1), float64], Tensor[(12, 4, 4), float64], Tensor[(240), float32], Tensor[(189), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(72), float64], Tensor[(2080), int8], Tensor[(750), float64]) {
  %307 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 3), uint64] */, dtype="uint64") /* ty=Tensor[(15, 3), uint64] */;
  %308 = cast(%var_9088, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %309 = cast(meta[relay.Constant][28] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %310 = reshape(%307, newshape=[45]) /* ty=Tensor[(45), uint64] */;
  %311 = reshape(%308, newshape=[360]) /* ty=Tensor[(360), uint64] */;
  %312 = reshape(%309, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %313 = @func_6837(%310, %311, %312) /* ty=(Tensor[(2, 15, 8), uint8], Tensor[(50, 2), float32], float32, Tensor[(686), float32], Tensor[(7, 7, 14), float64], Tensor[(5, 9, 8), uint64], Tensor[(45), uint64], Tensor[(360), uint64], Tensor[(396, 1), float64]) */;
  %314 = cast(meta[relay.Constant][29] /* ty=Tensor[(72, 1), float64] */, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %315 = reshape(%314, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %316 = cast(%var_9081, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %317 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(12, 4, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %320 = divide(%318, %319) /* ty=Tensor[(12, 4, 4), float64] */;
  %321 = cast(%320, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %322 = cast(meta[relay.Constant][31] /* ty=Tensor[(189), float32] */, dtype="float32") /* ty=Tensor[(189), float32] */;
  %323 = cast(meta[relay.Constant][32] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %324 = reshape(%322, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), float32] */;
  %325 = reshape(%323, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %326 = @func_5170(%324, %325) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(240), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(7, 3, 9), float32], Tensor[(4, 13, 2), float64]) */;
  %327 = cast(meta[relay.Constant][32] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %328 = %326.1;
  %329 = cast(%328, dtype="float32") /* ty=Tensor[(240), float32] */;
  %330 = reshape(%327, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), uint32] */;
  %331 = reshape(%329, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %332 = @func_2236(%330, %331) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */;
  %333 = cast(%var_9113, dtype="int8") /* ty=Tensor[(2080), int8] */;
  %334 = cast(%var_9113, dtype="int8") /* ty=Tensor[(2080), int8] */;
  %335 = cast(%var_9114, dtype="float64") /* ty=Tensor[(750), float64] */;
  %336 = cast(meta[relay.Constant][29] /* ty=Tensor[(72, 1), float64] */, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %337 = reshape(%333, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int8] */;
  %338 = reshape(%334, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int8] */;
  %339 = reshape(%335, newshape=[750]) /* ty=Tensor[(750), float64] */;
  %340 = reshape(%336, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %341 = @func_4735(%337, %338, %339, %340) /* ty=(Tensor[(13, 10, 16), bool], Tensor[(7, 11, 3), bool], Tensor[(750), float64], Tensor[(72), float64]) */;
  %342 = %313.1;
  %343 = @func_340(%315) /* ty=Tensor[(6, ?, 12), int32] */;
  %344 = sqrt(%321) /* ty=Tensor[(12, 4, 4), float64] */;
  %345 = %332.6;
  %346 = %341.3;
  (%342, meta[relay.Constant][27] /* ty=Tensor[(15, 3), uint64] */, %var_9088, meta[relay.Constant][28] /* ty=Tensor[(396), float64] */, %343, meta[relay.Constant][29] /* ty=Tensor[(72, 1), float64] */, %344, %328, meta[relay.Constant][31] /* ty=Tensor[(189), float32] */, meta[relay.Constant][32] /* ty=Tensor[(288), uint32] */, %345, %346, %var_9113, %var_9114)
}

def @func_11371(%var_11354: Tensor[(7, 6, 1), float64], %var_11355: Tensor[(7, 6, 11), float64]) -> (Tensor[(7, 6, 11), float32],) {
  %347 = cast(%var_11354, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
  %348 = cast(%var_11355, dtype="float64") /* ty=Tensor[(7, 6, 11), float64] */;
  %349 = divide(%347, %348) /* ty=Tensor[(7, 6, 11), float64] */;
  %350 = cast(%var_11354, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
  %351 = cast(%349, dtype="float32") /* ty=Tensor[(7, 6, 11), float32] */;
  %352 = floor_divide(%350, %351) /* ty=Tensor[(7, 6, 11), float32] */;
  (%352,)
}

def @func_3805(%var_3781: float32, %var_3782: Tensor[(7, 7, 14), float32], %var_3792: Tensor[(240), float32]) -> (Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) {
  %353 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 72), uint32] */, dtype="uint32") /* ty=Tensor[(4, 72), uint32] */;
  %354 = cast(%var_3792, dtype="float32") /* ty=Tensor[(240), float32] */;
  %355 = reshape(%353, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), uint32] */;
  %356 = reshape(%354, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %357 = @func_2236(%355, %356) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */;
  %358 = cast(%var_3781, dtype="float32") /* ty=float32 */;
  %359 = cast(%var_3782, dtype="float32") /* ty=Tensor[(7, 7, 14), float32] */;
  %360 = power(%358, %359) /* ty=Tensor[(7, 7, 14), float32] */;
  %361 = cast(%var_3782, dtype="float64") /* ty=Tensor[(7, 7, 14), float64] */;
  %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%360, dtype="float64") /* ty=Tensor[(7, 7, 14), float64] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %365 = %357.4;
  %366 = multiply(%363, %364) /* ty=Tensor[(7, 7, 14), float64] */;
  (%365, meta[relay.Constant][33] /* ty=Tensor[(4, 72), uint32] */, %var_3792, %366)
}

def @func_9772(%var_9762: Tensor[(2, 13, 2), float32]) -> Tensor[(2, 13, 2), float32] {
  %367 = cast(%var_9762, dtype="float32") /* ty=Tensor[(2, 13, 2), float32] */;
  asin(%367) /* ty=Tensor[(2, 13, 2), float32] */
}

def @func_6528(%var_6425: Tensor[(5, 9, 1), uint64], %var_6426: Tensor[(5, 9, 8), uint64], %var_6443: Tensor[(120, 2), float32], %var_6496: Tensor[(396), float64]) -> (Tensor[(5, 9, 8), uint64], Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(1540), float64], Tensor[(72), float64], Tensor[(9, 11, 4), float64], Tensor[(396), uint64], Tensor[(9, 11, 4), uint16], Tensor[(72), float64], Tensor[(750), float64], Tensor[(120, 2), uint32]) {
  %368 = cast(%var_6425, dtype="uint64") /* ty=Tensor[(5, 9, 1), uint64] */;
  %369 = cast(%var_6426, dtype="uint64") /* ty=Tensor[(5, 9, 8), uint64] */;
  %370 = cast(meta[relay.Constant][34] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %371 = cast(meta[relay.Constant][34] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %372 = reshape(%370, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %373 = reshape(%371, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %374 = cast(meta[relay.Constant][37] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %375 = reshape(%374, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float64] */;
  %376 = cast(%var_6496, dtype="uint64") /* ty=Tensor[(396), uint64] */;
  %377 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(396), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %378 = cast(meta[relay.Constant][37] /* ty=Tensor[(396), float64] */, dtype="uint64") /* ty=Tensor[(396), uint64] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %380 = @func_5507(%375) /* ty=Tensor[(9, 11, 4), float64] */;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(9, 11, 4), float64] */;
  %382 = reshape(%381, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float64] */;
  %383 = @func_5507(%382) /* ty=Tensor[(9, 11, 4), float64] */;
  %384 = cast(meta[relay.Constant][37] /* ty=Tensor[(396), float64] */, dtype="uint16") /* ty=Tensor[(396), uint16] */;
  %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%383, dtype="uint16") /* ty=Tensor[(9, 11, 4), uint16] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %388 = cast(meta[relay.Constant][38] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
  %389 = cast(meta[relay.Constant][38] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
  %390 = cast(meta[relay.Constant][36] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %391 = reshape(%388, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
  %392 = reshape(%389, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
  %393 = reshape(%390, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %394 = @func_3130(%391, %392, %393) /* ty=(Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) */;
  %395 = cast(%var_6443, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %396 = log2(%395) /* ty=Tensor[(120, 2), float64] */;
  %397 = cast(meta[relay.Constant][35] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %398 = cast(%var_6443, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %399 = cast(meta[relay.Constant][36] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %400 = reshape(%397, newshape=[11, 14, 10]) /* ty=Tensor[(11, 14, 10), float64] */;
  %401 = reshape(%398, newshape=[4, 60]) /* ty=Tensor[(4, 60), float32] */;
  %402 = reshape(%399, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %403 = @func_5804(%400, %401, %402) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(104), float64], Tensor[(672), int64], Tensor[(4, 60), float32], Tensor[(1, 104), float64], Tensor[(72), float64]) */;
  %404 = %403.3;
  %405 = cast(%404, dtype="uint32") /* ty=Tensor[(4, 60), uint32] */;
  %406 = shape_of(%396, dtype="int32") /* ty=Tensor[(2), int32] */;
  %407 = cast(%396, dtype="uint32") /* ty=Tensor[(120, 2), uint32] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %409 = bitwise_or(%368, %369) /* ty=Tensor[(5, 9, 8), uint64] */;
  %410 = @func_931(%372, %373) /* ty=Tensor[(4, 13, 2), float64] */;
  %411 = bitwise_xor(%378, %379) /* ty=Tensor[(396), uint64] */;
  %412 = bitwise_or(%386, %387) /* ty=Tensor[(9, 11, 4), uint16] */;
  %413 = %394.5;
  %414 = logical_xor(%407, %408) /* ty=Tensor[(120, 2), uint32] */;
  (%409, %410, meta[relay.Constant][34] /* ty=Tensor[(104), float64] */, meta[relay.Constant][35] /* ty=Tensor[(1540), float64] */, meta[relay.Constant][36] /* ty=Tensor[(72), float64] */, %380, %411, %412, %413, meta[relay.Constant][38] /* ty=Tensor[(750), float64] */, %414)
}

def @func_3913(%var_3901: Tensor[(750), float64], %var_3902: Tensor[(72), float64]) -> (Tensor[(7, 11, 3), bool], Tensor[(16, 5, 3), int8], Tensor[(750), float64], Tensor[(72), float64], Tensor[(7, 11, 3), bool]) {
  %415 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 11, 3), float64] */, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
  %416 = cast(0.737457f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %417 = cast(%var_3901, dtype="float64") /* ty=Tensor[(750), float64] */;
  %418 = cast(%var_3901, dtype="float64") /* ty=Tensor[(750), float64] */;
  %419 = cast(%var_3902, dtype="float64") /* ty=Tensor[(72), float64] */;
  %420 = reshape(%417, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
  %421 = reshape(%418, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
  %422 = reshape(%419, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %423 = @func_3130(%420, %421, %422) /* ty=(Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) */;
  %424 = cast(0.737457f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %425 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %426 = floor_divide(%424, %425) /* ty=Tensor[(7, 11, 3), float64] */;
  %427 = cast(%426, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %428 = atan(%427) /* ty=Tensor[(7, 11, 3), float32] */;
  %429 = cast(%426, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %433 = logical_or(%415, %416) /* ty=Tensor[(7, 11, 3), bool] */;
  %434 = %423.3;
  %435 = greater(%431, %432) /* ty=Tensor[(7, 11, 3), bool] */;
  (%433, %434, %var_3901, %var_3902, %435)
}

def @func_9232(%var_9211: Tensor[(12, 4, 8), int8], %var_9212: Tensor[(12, 4, 8), int8]) -> (Tensor[(12, 4, 8), int8], Tensor[(12, 4, 8), float32]) {
  %436 = cast(%var_9212, dtype="int8") /* ty=Tensor[(12, 4, 8), int8] */;
  %437 = shape_of(%var_9211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_9211, dtype="int8") /* ty=Tensor[(12, 4, 8), int8] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %440 = cast(%var_9211, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
  %441 = subtract(%438, %439) /* ty=Tensor[(12, 4, 8), int8] */;
  %442 = exp(%440) /* ty=Tensor[(12, 4, 8), float32] */;
  (%441, %442)
}

def @func_12370() -> Tensor[(7, 4, 11), float64] {
  %443 = @func_11682() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %443.0
}

def @func_12138(%var_12116: Tensor[(168, 4), int64], %var_12119: Tensor[(72), float64], %var_12122: Tensor[(1248), int8]) -> (Tensor[(7, 4, 11), float64], Tensor[(14, 6, 4), bool], Tensor[(8, 6, 14), bool], Tensor[(2, 120), float32], Tensor[(104), float64], Tensor[(72), float64], Tensor[(13, 8, 12), float32], Tensor[(1248), int8], Tensor[(168, 4), float32]) {
  %444 = @func_11540() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %445 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %446 = reshape(%445, newshape=[]) /* ty=bool */;
  %447 = @func_7610(%446) /* ty=(Tensor[(14, 6, 4), bool],) */;
  %448 = cast(%var_12116, dtype="int64") /* ty=Tensor[(168, 4), int64] */;
  %449 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %450 = cast(meta[relay.Constant][41] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %451 = cast(%var_12119, dtype="float64") /* ty=Tensor[(72), float64] */;
  %452 = reshape(%448, newshape=[8, 6, 14]) /* ty=Tensor[(8, 6, 14), int64] */;
  %453 = reshape(%449, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %454 = reshape(%450, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %455 = reshape(%451, newshape=[72, 1]) /* ty=Tensor[(72, 1), float64] */;
  %456 = @func_1935(%452, %453, %454, %455) /* ty=(Tensor[(8, 6, 14), bool], Tensor[(6, ?, 12), int32], Tensor[(240), float32], Tensor[(104), float64], Tensor[(8, 6, 14), bool], Tensor[(72, 1), float64], Tensor[(?, 10, 10), bool], Tensor[(100), float32]) */;
  %457 = cast(meta[relay.Constant][41] /* ty=Tensor[(104), float64] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %458 = cast(%var_12122, dtype="int8") /* ty=Tensor[(1248), int8] */;
  %459 = reshape(%457, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), int8] */;
  %460 = reshape(%458, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), int8] */;
  %461 = @func_11721(%459, %460) /* ty=(Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), uint8]) */;
  %462 = cast(%var_12116, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %463 = cast(True /* ty=bool */, dtype="float32") /* ty=float32 */;
  %464 = %444.0;
  %465 = %447.0;
  %466 = %456.4;
  %467 = %461.0;
  %468 = add(%462, %463) /* ty=Tensor[(168, 4), float32] */;
  (%464, %465, %466, meta[relay.Constant][40] /* ty=Tensor[(2, 120), float32] */, meta[relay.Constant][41] /* ty=Tensor[(104), float64] */, %var_12119, %467, %var_12122, %468)
}

def @func_11926(%var_11917: Tensor[(135), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(3, 5, 9), int16], Tensor[(15, 1), float32], Tensor[(135), float32]) {
  %469 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %470 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
  %471 = cast(%var_11917, dtype="float32") /* ty=Tensor[(135), float32] */;
  %472 = reshape(%470, newshape=[3, 5, 1]) /* ty=Tensor[(3, 5, 1), float32] */;
  %473 = reshape(%471, newshape=[3, 5, 9]) /* ty=Tensor[(3, 5, 9), float32] */;
  %474 = %469.0;
  %475 = @func_5861(%472, %473) /* ty=Tensor[(3, 5, 9), int16] */;
  (%474, %475, meta[relay.Constant][42] /* ty=Tensor[(15, 1), float32] */, %var_11917)
}

def @func_12329() -> Tensor[(7, 4, 11), float64] {
  %476 = @func_11326() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %476.0
}

def @func_11649(%var_11596: Tensor[(128), float64], %var_11610: Tensor[(560), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(240), float32], float32, Tensor[(343, 2), float32], Tensor[(240), float32], Tensor[(9, 16, 10), float64], Tensor[(45, 1), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(10, 42), bool], Tensor[(396), float64], Tensor[(128), float64], Tensor[(420), bool], Tensor[(560), float64], Tensor[(420, 1), bool], Tensor[(225), float32], Tensor[(14, 8, 1), bool], Tensor[(450), float32]) {
  %477 = @func_11540() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %478 = cast(-0.128594f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %479 = cast(meta[relay.Constant][43] /* ty=Tensor[(343, 2), float32] */, dtype="float32") /* ty=Tensor[(343, 2), float32] */;
  %480 = cast(meta[relay.Constant][44] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %481 = reshape(%478, newshape=[]) /* ty=float32 */;
  %482 = reshape(%479, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
  %483 = reshape(%480, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %484 = @func_3805(%481, %482, %483) /* ty=(Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) */;
  %485 = cast(meta[relay.Constant][45] /* ty=Tensor[(45, 1), uint64] */, dtype="uint64") /* ty=Tensor[(45, 1), uint64] */;
  %486 = cast(meta[relay.Constant][46] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %487 = %484.2;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(240), float32] */;
  %489 = cast(meta[relay.Constant][47] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %490 = cast(-0.128594f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
  %491 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 42), bool] */, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
  %492 = reshape(%485, newshape=[15, 3]) /* ty=Tensor[(15, 3), uint64] */;
  %493 = reshape(%486, newshape=[360]) /* ty=Tensor[(360), uint64] */;
  %494 = reshape(%488, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %495 = reshape(%489, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %496 = reshape(%490, newshape=[]) /* ty=uint16 */;
  %497 = reshape(%491, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %498 = @func_7139(%492, %493, %494, %495, %496, %497) /* ty=(Tensor[(9, 16, 10), float64], Tensor[(120, 2), uint32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(396), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) */;
  %499 = cast(%var_11596, dtype="float64") /* ty=Tensor[(128), float64] */;
  %500 = cast(meta[relay.Constant][47] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %501 = reshape(%499, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
  %502 = reshape(%500, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %503 = @func_7842(%501, %502) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(9, 11, 4), float64], Tensor[(396), float64]) */;
  %504 = cast(%var_11610, dtype="float64") /* ty=Tensor[(560), float64] */;
  %505 = cast(meta[relay.Constant][49] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %506 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 42), bool] */, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
  %507 = reshape(%504, newshape=[16, 5, 7]) /* ty=Tensor[(16, 5, 7), float64] */;
  %508 = reshape(%505, newshape=[225]) /* ty=Tensor[(225), uint16] */;
  %509 = reshape(%506, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %510 = @func_5017(%507, %508, %509) /* ty=(Tensor[(16, 5, 7), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) */;
  %511 = cast(-0.128594f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %512 = reshape(%511, newshape=[]) /* ty=bool */;
  %513 = @func_4049(%512) /* ty=(Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) */;
  %514 = cast(meta[relay.Constant][49] /* ty=Tensor[(225), uint16] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %515 = cast(meta[relay.Constant][50] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %516 = reshape(%515, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
  %517 = @func_4503(%516) /* ty=(Tensor[(5, 10, 9), float64], Tensor[(14, 8, 1), bool], uint16, Tensor[(1, 112), uint16]) */;
  %518 = %477.0;
  %519 = %498.0;
  %520 = %503.2;
  %521 = %510.4;
  %522 = %513.3;
  %523 = sqrt(%514) /* ty=Tensor[(225), float32] */;
  %524 = %517.1;
  (%518, %487, -0.128594f /* ty=float32 */, meta[relay.Constant][43] /* ty=Tensor[(343, 2), float32] */, meta[relay.Constant][44] /* ty=Tensor[(240), float32] */, %519, meta[relay.Constant][45] /* ty=Tensor[(45, 1), uint64] */, meta[relay.Constant][46] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][47] /* ty=Tensor[(396), float64] */, meta[relay.Constant][48] /* ty=Tensor[(10, 42), bool] */, %520, %var_11596, %521, %var_11610, %522, %523, %524, meta[relay.Constant][50] /* ty=Tensor[(450), float32] */)
}

def @func_11138() -> (Tensor[(7, 4, 11), float64],) {
  %525 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  (%525,)
}

def @func_11491(%var_11475: Tensor[(16, 3, 8), float64], %var_11488: Tensor[(1260), float64], %var_11489: Tensor[(72), float64]) -> (Tensor[(16, 3, 8), float64], Tensor[(72), int64], Tensor[(1260), float64], Tensor[(72), float64]) {
  %526 = cast(%var_11475, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  %527 = cast(%var_11488, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %528 = cast(%var_11489, dtype="float64") /* ty=Tensor[(72), float64] */;
  %529 = reshape(%527, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %530 = reshape(%528, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %531 = @func_11467(%529, %530) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(72), int64]) */;
  %532 = atanh(%526) /* ty=Tensor[(16, 3, 8), float64] */;
  %533 = %531.2;
  (%532, %533, %var_11488, %var_11489)
}

def @func_6043(%var_5994: Tensor[(10, 14, 10), int16], %var_6025: Tensor[(15), float32]) -> (Tensor[(10, 14, 10), int16], Tensor[(3, 5, 9), int16], Tensor[(15), float32], Tensor[(135), float32]) {
  %534 = cast(%var_5994, dtype="int16") /* ty=Tensor[(10, 14, 10), int16] */;
  %535 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(10, 14, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 14, 10), int16] */, dtype="int16") /* ty=Tensor[(10, 14, 10), int16] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %538 = multiply(%536, %537) /* ty=Tensor[(10, 14, 10), int16] */;
  %539 = cast(%538, dtype="int16") /* ty=Tensor[(10, 14, 10), int16] */;
  %540 = shape_of(%var_5994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%var_5994, dtype="int16") /* ty=Tensor[(10, 14, 10), int16] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %543 = cast(%var_6025, dtype="float32") /* ty=Tensor[(15), float32] */;
  %544 = cast(meta[relay.Constant][52] /* ty=Tensor[(135), float32] */, dtype="float32") /* ty=Tensor[(135), float32] */;
  %545 = reshape(%543, newshape=[3, 5, 1]) /* ty=Tensor[(3, 5, 1), float32] */;
  %546 = reshape(%544, newshape=[3, 5, 9]) /* ty=Tensor[(3, 5, 9), float32] */;
  %547 = right_shift(%541, %542) /* ty=Tensor[(10, 14, 10), int16] */;
  %548 = @func_5861(%545, %546) /* ty=Tensor[(3, 5, 9), int16] */;
  (%547, %548, %var_6025, meta[relay.Constant][52] /* ty=Tensor[(135), float32] */)
}

def @func_7139(%var_7113: Tensor[(15, 3), uint64], %var_7114: Tensor[(360), uint64], %var_7115: Tensor[(240), float32], %var_7116: Tensor[(396), float64], %var_7123: uint16, %var_7125: Tensor[(420), bool]) -> (Tensor[(9, 16, 10), float64], Tensor[(120, 2), uint32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(396), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) {
  %549 = cast(meta[relay.Constant][53] /* ty=Tensor[(9, 16, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 10), float64] */;
  %550 = cast(%var_7113, dtype="uint64") /* ty=Tensor[(15, 3), uint64] */;
  %551 = cast(%var_7114, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %552 = cast(%var_7115, dtype="float32") /* ty=Tensor[(240), float32] */;
  %553 = cast(%var_7116, dtype="float64") /* ty=Tensor[(396), float64] */;
  %554 = reshape(%550, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), uint64] */;
  %555 = reshape(%551, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), uint64] */;
  %556 = reshape(%552, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
  %557 = reshape(%553, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %558 = @func_6528(%554, %555, %556, %557) /* ty=(Tensor[(5, 9, 8), uint64], Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(1540), float64], Tensor[(72), float64], Tensor[(9, 11, 4), float64], Tensor[(396), uint64], Tensor[(9, 11, 4), uint16], Tensor[(72), float64], Tensor[(750), float64], Tensor[(120, 2), uint32]) */;
  %559 = cast(%var_7123, dtype="uint16") /* ty=uint16 */;
  %560 = cast(meta[relay.Constant][54] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %561 = cast(%var_7125, dtype="bool") /* ty=Tensor[(420), bool] */;
  %562 = reshape(%559, newshape=[]) /* ty=uint16 */;
  %563 = reshape(%560, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
  %564 = reshape(%561, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %565 = @func_2889(%562, %563, %564) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
  %566 = sinh(%549) /* ty=Tensor[(9, 16, 10), float64] */;
  %567 = %558.10;
  %568 = %565.1;
  (%566, %567, %var_7113, %var_7114, %var_7115, %var_7116, %568, %var_7123, meta[relay.Constant][54] /* ty=Tensor[(225), uint16] */, %var_7125)
}

def @func_9689(%var_9677: Tensor[(10, 13, 16), int64], %var_9678: Tensor[(10, 13, 16), int64]) -> Tensor[(10, 13, 16), bool] {
  %569 = cast(%var_9678, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %570 = shape_of(%var_9677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%var_9677, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%571, %572) /* ty=Tensor[(10, 13, 16), bool] */
}

def @func_12379() -> (Tensor[(7, 4, 11), float64],) {
  %573 = @func_12203() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %574 = %573.0;
  (%574,)
}

def @func_10615(%var_10567: Tensor[(7, 13, 5), float32], %var_10568: Tensor[(7, 13, 5), float32]) -> Tensor[(7, 13, 5), float32] {
  %575 = cast(%var_10568, dtype="float32") /* ty=Tensor[(7, 13, 5), float32] */;
  %576 = shape_of(%var_10567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%var_10567, dtype="float32") /* ty=Tensor[(7, 13, 5), float32] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%577, %578) /* ty=Tensor[(7, 13, 5), float32] */
}

def @func_11326() -> (Tensor[(7, 4, 11), float64],) {
  %579 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  (%579,)
}

def @func_11540() -> (Tensor[(7, 4, 11), float64],) {
  %580 = @func_11138() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %581 = %580.0;
  (%581,)
}

def @func_12484(%var_12474: Tensor[(4, 16, 3), uint16]) -> (Tensor[(4, 16, 3), uint16], Tensor[(7, 4, 11), float64]) {
  %582 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 16, 3), uint16] */, dtype="uint16") /* ty=Tensor[(4, 16, 3), uint16] */;
  %583 = shape_of(%var_12474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_12474, dtype="uint16") /* ty=Tensor[(4, 16, 3), uint16] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %586 = left_shift(%584, %585) /* ty=Tensor[(4, 16, 3), uint16] */;
  %587 = @func_12329() /* ty=Tensor[(7, 4, 11), float64] */;
  (%586, %587)
}

def @func_12596() -> (Tensor[(7, 4, 11), float64],) {
  %588 = @func_12295() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), float64]) */;
  %589 = %588.1;
  (%589,)
}

def @func_10857() -> (Tensor[(7, 4, 11), float64],) {
  %590 = cast(meta[relay.Constant][56] /* ty=Tensor[(7, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %591 = sqrt(%590) /* ty=Tensor[(7, 4, 11), float64] */;
  (%591,)
}

def @func_11721(%var_11703: Tensor[(13, 8, 1), int8], %var_11704: Tensor[(13, 8, 12), int8]) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), uint8]) {
  %592 = cast(%var_11703, dtype="int8") /* ty=Tensor[(13, 8, 1), int8] */;
  %593 = cast(%var_11704, dtype="int8") /* ty=Tensor[(13, 8, 12), int8] */;
  %594 = left_shift(%592, %593) /* ty=Tensor[(13, 8, 12), int8] */;
  %595 = cast(%594, dtype="float32") /* ty=Tensor[(13, 8, 12), float32] */;
  %596 = cast(%var_11703, dtype="uint8") /* ty=Tensor[(13, 8, 1), uint8] */;
  %597 = cast(%var_11704, dtype="uint8") /* ty=Tensor[(13, 8, 12), uint8] */;
  %598 = acos(%595) /* ty=Tensor[(13, 8, 12), float32] */;
  %599 = right_shift(%596, %597) /* ty=Tensor[(13, 8, 12), uint8] */;
  (%598, %599)
}

def @func_11876() -> (Tensor[(7, 4, 11), float64],) {
  %600 = @func_11682() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %601 = %600.0;
  (%601,)
}

def @func_5507(%var_5504: Tensor[(9, 11, 4), float64]) -> Tensor[(9, 11, 4), float64] {
  %602 = cast(%var_5504, dtype="float64") /* ty=Tensor[(9, 11, 4), float64] */;
  rsqrt(%602) /* ty=Tensor[(9, 11, 4), float64] */
}

def @func_11467(%var_11441: Tensor[(1260), float64], %var_11458: Tensor[(72), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(72), int64]) {
  %603 = cast(%var_11441, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %604 = reshape(%603, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %605 = @func_11227(%604) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(7, 15, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
  %606 = %605.3;
  %607 = cast(%var_11458, dtype="int64") /* ty=Tensor[(72), int64] */;
  %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(1), int32] */;
  %609 = cast(%606, dtype="int64") /* ty=Tensor[(72), int64] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?), int64] */;
  %611 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  %612 = left_shift(%609, %610) /* ty=Tensor[(72), int64] */;
  (%611, %var_11441, %612)
}

def @func_12222() -> (Tensor[(7, 4, 11), float64],) {
  %613 = @func_11789() /* ty=Tensor[(7, 4, 11), float64] */;
  (%613,)
}

def @func_3130(%var_3085: Tensor[(10, 15, 5), float64], %var_3086: Tensor[(10, 15, 5), float64], %var_3116: Tensor[(72), float64]) -> (Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) {
  %614 = cast(%var_3086, dtype="float64") /* ty=Tensor[(10, 15, 5), float64] */;
  %615 = shape_of(%var_3085, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_3085, dtype="float64") /* ty=Tensor[(10, 15, 5), float64] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %618 = cast(%var_3086, dtype="float64") /* ty=Tensor[(10, 15, 5), float64] */;
  %619 = cast(meta[relay.Constant][57] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %620 = cast(meta[relay.Constant][57] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %621 = reshape(%619, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %622 = reshape(%620, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %623 = @func_931(%621, %622) /* ty=Tensor[(4, 13, 2), float64] */;
  %624 = cast(meta[relay.Constant][57] /* ty=Tensor[(104), float64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%623, dtype="uint64") /* ty=Tensor[(4, 13, 2), uint64] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %628 = cast(meta[relay.Constant][58] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %629 = cast(meta[relay.Constant][57] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %630 = cast(%var_3116, dtype="float64") /* ty=Tensor[(72), float64] */;
  %631 = reshape(%628, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), float32] */;
  %632 = reshape(%629, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %633 = reshape(%630, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %634 = @func_1697(%631, %632, %633) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
  %635 = divide(%616, %617) /* ty=Tensor[(10, 15, 5), float64] */;
  %636 = atanh(%618) /* ty=Tensor[(10, 15, 5), float64] */;
  %637 = minimum(%626, %627) /* ty=Tensor[(4, 13, 2), uint64] */;
  %638 = %634.2;
  (%635, %636, %637, %638, meta[relay.Constant][58] /* ty=Tensor[(240), float32] */, %var_3116)
}

def @func_3406(%var_3379: Tensor[(9, 7, 11), uint8], %var_3380: Tensor[(9, 7, 11), uint8], %var_3391: Tensor[(72), float64]) -> (Tensor[(9, 7, 11), bool], Tensor[(72), float64], Tensor[(750), float64], Tensor[(72), float64], Tensor[(9, 7, 11), int8]) {
  %639 = cast(%var_3380, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %640 = shape_of(%var_3379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%var_3379, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %643 = cast(meta[relay.Constant][59] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
  %644 = cast(meta[relay.Constant][59] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
  %645 = cast(%var_3391, dtype="float64") /* ty=Tensor[(72), float64] */;
  %646 = reshape(%643, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
  %647 = reshape(%644, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
  %648 = reshape(%645, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %649 = @func_3130(%646, %647, %648) /* ty=(Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) */;
  %650 = cast(%var_3379, dtype="int8") /* ty=Tensor[(9, 7, 11), int8] */;
  %651 = shape_of(%var_3380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%var_3380, dtype="int8") /* ty=Tensor[(9, 7, 11), int8] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %654 = greater_equal(%641, %642) /* ty=Tensor[(9, 7, 11), bool] */;
  %655 = %649.5;
  %656 = maximum(%652, %653) /* ty=Tensor[(9, 7, 11), int8] */;
  (%654, %655, meta[relay.Constant][59] /* ty=Tensor[(750), float64] */, %var_3391, %656)
}

def @func_12295() -> (Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), float64]) {
  %657 = @func_11876() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %658 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  %659 = %657.0;
  (%658, %659)
}

def @func_5804(%var_5793: Tensor[(11, 14, 10), float64], %var_5799: Tensor[(4, 60), float32], %var_5801: Tensor[(72), float64]) -> (Tensor[(11, 14, 10), float64], Tensor[(104), float64], Tensor[(672), int64], Tensor[(4, 60), float32], Tensor[(1, 104), float64], Tensor[(72), float64]) {
  %660 = cast(%var_5793, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
  %661 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(11, 14, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 14, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %664 = cast(meta[relay.Constant][61] /* ty=Tensor[(672), int64] */, dtype="int64") /* ty=Tensor[(672), int64] */;
  %665 = cast(%var_5799, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %666 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %667 = cast(%var_5801, dtype="float64") /* ty=Tensor[(72), float64] */;
  %668 = reshape(%664, newshape=[8, 6, 14]) /* ty=Tensor[(8, 6, 14), int64] */;
  %669 = reshape(%665, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %670 = reshape(%666, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %671 = reshape(%667, newshape=[72, 1]) /* ty=Tensor[(72, 1), float64] */;
  %672 = @func_1935(%668, %669, %670, %671) /* ty=(Tensor[(8, 6, 14), bool], Tensor[(6, ?, 12), int32], Tensor[(240), float32], Tensor[(104), float64], Tensor[(8, 6, 14), bool], Tensor[(72, 1), float64], Tensor[(?, 10, 10), bool], Tensor[(100), float32]) */;
  %673 = floor_divide(%662, %663) /* ty=Tensor[(11, 14, 10), float64] */;
  %674 = %672.3;
  (%673, %674, meta[relay.Constant][61] /* ty=Tensor[(672), int64] */, %var_5799, meta[relay.Constant][62] /* ty=Tensor[(1, 104), float64] */, %var_5801)
}

def @func_4049(%var_4044: bool) -> (Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) {
  %675 = cast(meta[relay.Constant][63] /* ty=Tensor[(12, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %676 = tan(%675) /* ty=Tensor[(12, 15, 16), float32] */;
  %677 = cast(%676, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %678 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(12, 15, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(meta[relay.Constant][63] /* ty=Tensor[(12, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %681 = cast(%var_4044, dtype="bool") /* ty=bool */;
  %682 = cast(meta[relay.Constant][64] /* ty=Tensor[(420, 1), bool] */, dtype="bool") /* ty=Tensor[(420, 1), bool] */;
  %683 = reshape(%681, newshape=[]) /* ty=bool */;
  %684 = reshape(%682, newshape=[2, 14, 15]) /* ty=Tensor[(2, 14, 15), bool] */;
  %685 = divide(%679, %680) /* ty=Tensor[(12, 15, 16), float32] */;
  %686 = @func_2509(%683, %684) /* ty=Tensor[(2, 14, 15), bool] */;
  (%685, %686, %var_4044, meta[relay.Constant][64] /* ty=Tensor[(420, 1), bool] */)
}

def @func_9432(%var_9416: Tensor[(9, 6, 11), float64]) -> Tensor[(9, 6, 11), float64] {
  %687 = cast(%var_9416, dtype="float64") /* ty=Tensor[(9, 6, 11), float64] */;
  log(%687) /* ty=Tensor[(9, 6, 11), float64] */
}

def @func_9667(%var_9648: Tensor[(16, 5, 2), float32], %var_9654: Tensor[(48, 8), int8], %var_9665: Tensor[(45, 2), float64]) -> (Tensor[(16, 5, 2), float32], Tensor[(12, 4, 8), int8], Tensor[(48, 8), int8], Tensor[(16, 5, 2), float32], Tensor[(2, 15, 3), float64], Tensor[(45, 2), float64]) {
  %688 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %689 = shape_of(%var_9648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%var_9648, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %692 = cast(%var_9654, dtype="int8") /* ty=Tensor[(48, 8), int8] */;
  %693 = cast(%var_9654, dtype="int8") /* ty=Tensor[(48, 8), int8] */;
  %694 = reshape(%692, newshape=[12, 4, 8]) /* ty=Tensor[(12, 4, 8), int8] */;
  %695 = reshape(%693, newshape=[12, 4, 8]) /* ty=Tensor[(12, 4, 8), int8] */;
  %696 = @func_9232(%694, %695) /* ty=(Tensor[(12, 4, 8), int8], Tensor[(12, 4, 8), float32]) */;
  %697 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %698 = cast(%var_9665, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %699 = reshape(%698, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %700 = @func_6708(%699) /* ty=(Tensor[(2, 15, 3), float64],) */;
  %701 = multiply(%690, %691) /* ty=Tensor[(16, 5, 2), float32] */;
  %702 = %696.0;
  %703 = sinh(%697) /* ty=Tensor[(16, 5, 2), float32] */;
  %704 = %700.0;
  (%701, %702, %var_9654, %703, %704, %var_9665)
}

def @func_11854() -> (Tensor[(7, 4, 11), float32],) {
  %705 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
  %707 = exp(%706) /* ty=Tensor[(7, 4, 11), float32] */;
  (%707,)
}

def @func_6708(%var_6698: Tensor[(2, 15, 3), float64]) -> (Tensor[(2, 15, 3), float64],) {
  %708 = cast(%var_6698, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  %709 = erf(%708) /* ty=Tensor[(2, 15, 3), float64] */;
  %710 = cast(%var_6698, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  %711 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%709, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %714 = divide(%712, %713) /* ty=Tensor[(2, 15, 3), float64] */;
  (%714,)
}

def @func_4128(%var_4122: uint16, %var_4123: Tensor[(14, 8, 1), uint16]) -> (Tensor[(14, 8, 1), bool],) {
  %715 = cast(%var_4122, dtype="bool") /* ty=bool */;
  %716 = cast(%var_4123, dtype="bool") /* ty=Tensor[(14, 8, 1), bool] */;
  %717 = not_equal(%715, %716) /* ty=Tensor[(14, 8, 1), bool] */;
  (%717,)
}

def @func_7842(%var_7818: Tensor[(16, 8, 1), float64], %var_7831: Tensor[(396), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(9, 11, 4), float64], Tensor[(396), float64]) {
  %718 = cast(%var_7818, dtype="float64") /* ty=Tensor[(16, 8, 1), float64] */;
  %719 = cast(%var_7831, dtype="float64") /* ty=Tensor[(396), float64] */;
  %720 = reshape(%719, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float64] */;
  %721 = cast(%var_7831, dtype="float64") /* ty=Tensor[(396), float64] */;
  %722 = atan(%718) /* ty=Tensor[(16, 8, 1), float64] */;
  %723 = @func_5507(%720) /* ty=Tensor[(9, 11, 4), float64] */;
  %724 = erf(%721) /* ty=Tensor[(396), float64] */;
  (%722, %723, %724)
}

def @func_4735(%var_4696: Tensor[(13, 10, 16), int8], %var_4697: Tensor[(13, 10, 16), int8], %var_4703: Tensor[(750), float64], %var_4704: Tensor[(72), float64]) -> (Tensor[(13, 10, 16), bool], Tensor[(7, 11, 3), bool], Tensor[(750), float64], Tensor[(72), float64]) {
  %725 = cast(%var_4697, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %726 = shape_of(%var_4696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%var_4696, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %729 = cast(%var_4703, dtype="float64") /* ty=Tensor[(750), float64] */;
  %730 = cast(%var_4704, dtype="float64") /* ty=Tensor[(72), float64] */;
  %731 = reshape(%729, newshape=[750]) /* ty=Tensor[(750), float64] */;
  %732 = reshape(%730, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %733 = @func_3913(%731, %732) /* ty=(Tensor[(7, 11, 3), bool], Tensor[(16, 5, 3), int8], Tensor[(750), float64], Tensor[(72), float64], Tensor[(7, 11, 3), bool]) */;
  %734 = less(%727, %728) /* ty=Tensor[(13, 10, 16), bool] */;
  %735 = %733.0;
  (%734, %735, %var_4703, %var_4704)
}

def @func_5017(%var_4990: Tensor[(16, 5, 7), float64], %var_5006: Tensor[(225), uint16], %var_5007: Tensor[(420), bool]) -> (Tensor[(16, 5, 7), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) {
  %736 = cast(meta[relay.Constant][66] /* ty=Tensor[(16, 5, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 7), float64] */;
  %737 = shape_of(%var_4990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_4990, dtype="float64") /* ty=Tensor[(16, 5, 7), float64] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %740 = cast(meta[relay.Constant][67] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %741 = cast(%var_5006, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %742 = cast(%var_5007, dtype="bool") /* ty=Tensor[(420), bool] */;
  %743 = reshape(%740, newshape=[]) /* ty=uint16 */;
  %744 = reshape(%741, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
  %745 = reshape(%742, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %746 = @func_2889(%743, %744, %745) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
  %747 = divide(%738, %739) /* ty=Tensor[(16, 5, 7), float64] */;
  %748 = %746.1;
  (%747, %748, meta[relay.Constant][67] /* ty=uint16 */, %var_5006, %var_5007)
}

def @func_12068() -> (Tensor[(7, 4, 11), float64],) {
  %749 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %750 = %749.0;
  (%750,)
}

def @func_12251() -> (Tensor[(7, 4, 11), float64], Tensor[(13, 8, 12), float32], Tensor[(104), int8], Tensor[(2, 624), int8]) {
  %751 = @func_12068() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %752 = cast(meta[relay.Constant][68] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %753 = cast(meta[relay.Constant][69] /* ty=Tensor[(2, 624), int8] */, dtype="int8") /* ty=Tensor[(2, 624), int8] */;
  %754 = reshape(%752, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), int8] */;
  %755 = reshape(%753, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), int8] */;
  %756 = @func_11721(%754, %755) /* ty=(Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), uint8]) */;
  %757 = %751.0;
  %758 = %756.0;
  (%757, %758, meta[relay.Constant][68] /* ty=Tensor[(104), int8] */, meta[relay.Constant][69] /* ty=Tensor[(2, 624), int8] */)
}

def @func_8453(%var_8450: Tensor[(5, 15, 1), float64]) -> (Tensor[(5, 15, 1), float64],) {
  %759 = cast(%var_8450, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
  %760 = log(%759) /* ty=Tensor[(5, 15, 1), float64] */;
  (%760,)
}

def @func_12516() -> Tensor[(7, 4, 11), float64] {
  @func_12329() /* ty=Tensor[(7, 4, 11), float64] */
}

def @func_5170(%var_5130: Tensor[(7, 3, 9), float32], %var_5152: Tensor[(288), uint32]) -> (Tensor[(7, 3, 9), float32], Tensor[(240), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(7, 3, 9), float32], Tensor[(4, 13, 2), float64]) {
  %761 = cast(%var_5130, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %762 = cast(%var_5152, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %763 = cast(meta[relay.Constant][70] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %764 = reshape(%762, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), uint32] */;
  %765 = reshape(%763, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %766 = @func_2236(%764, %765) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */;
  %767 = cast(%var_5130, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %768 = cast(%var_5152, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %769 = %766.6;
  %770 = cast(%769, dtype="float32") /* ty=Tensor[(240), float32] */;
  %771 = reshape(%768, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), uint32] */;
  %772 = reshape(%770, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %773 = @func_2236(%771, %772) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */;
  %774 = log2(%761) /* ty=Tensor[(7, 3, 9), float32] */;
  %775 = cos(%767) /* ty=Tensor[(7, 3, 9), float32] */;
  %776 = %773.5;
  (%774, %769, %var_5152, meta[relay.Constant][70] /* ty=Tensor[(240), float32] */, %775, %776)
}

def @func_340(%var_327: Tensor[(6, 1, 12), float64]) -> Tensor[(6, ?, 12), int32] {
  %777 = cast(%var_327, dtype="float64") /* ty=Tensor[(6, 1, 12), float64] */;
  %778 = erf(%777) /* ty=Tensor[(6, 1, 12), float64] */;
  %779 = cast(%778, dtype="int32") /* ty=Tensor[(6, 1, 12), int32] */;
  %780 = shape_of(%var_327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_327, dtype="int32") /* ty=Tensor[(6, 1, 12), int32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%781, %782) /* ty=Tensor[(6, ?, 12), int32] */
}

def @func_11402(%var_11376: Tensor[(13, 15, 12), float64], %var_11377: Tensor[(13, 15, 12), float64], %var_11397: uint16, %var_11398: Tensor[(225), uint16], %var_11399: Tensor[(1, 420), bool]) -> (Tensor[(13, 15, 12), float32], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(1, 420), bool]) {
  %783 = cast(%var_11377, dtype="float64") /* ty=Tensor[(13, 15, 12), float64] */;
  %784 = shape_of(%var_11376, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%var_11376, dtype="float64") /* ty=Tensor[(13, 15, 12), float64] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %787 = multiply(%785, %786) /* ty=Tensor[(13, 15, 12), float64] */;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
  %789 = cast(%var_11397, dtype="uint16") /* ty=uint16 */;
  %790 = cast(%var_11398, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %791 = cast(%var_11399, dtype="bool") /* ty=Tensor[(1, 420), bool] */;
  %792 = reshape(%789, newshape=[]) /* ty=uint16 */;
  %793 = reshape(%790, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
  %794 = reshape(%791, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %795 = @func_2889(%792, %793, %794) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
  %796 = asin(%788) /* ty=Tensor[(13, 15, 12), float32] */;
  %797 = %795.1;
  (%796, %797, %var_11397, %var_11398, %var_11399)
}

def @func_5777(%var_5748: Tensor[(1, 7, 13), uint8], %var_5749: Tensor[(13, 7, 13), uint8]) -> Tensor[(13, 7, 13), float64] {
  %798 = cast(%var_5748, dtype="uint8") /* ty=Tensor[(1, 7, 13), uint8] */;
  %799 = cast(%var_5749, dtype="uint8") /* ty=Tensor[(13, 7, 13), uint8] */;
  %800 = bitwise_and(%798, %799) /* ty=Tensor[(13, 7, 13), uint8] */;
  %801 = cast(%800, dtype="float64") /* ty=Tensor[(13, 7, 13), float64] */;
  log2(%801) /* ty=Tensor[(13, 7, 13), float64] */
}

def @func_11789() -> Tensor[(7, 4, 11), float64] {
  %802 = @func_11138() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %802.0
}

def @func_4503(%var_4484: Tensor[(5, 10, 9), float32]) -> (Tensor[(5, 10, 9), float64], Tensor[(14, 8, 1), bool], uint16, Tensor[(1, 112), uint16]) {
  %803 = cast(%var_4484, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
  %804 = erf(%803) /* ty=Tensor[(5, 10, 9), float32] */;
  %805 = cast(%804, dtype="float64") /* ty=Tensor[(5, 10, 9), float64] */;
  %806 = cast(meta[relay.Constant][71] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %807 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 112), uint16] */, dtype="uint16") /* ty=Tensor[(1, 112), uint16] */;
  %808 = reshape(%806, newshape=[]) /* ty=uint16 */;
  %809 = reshape(%807, newshape=[14, 8, 1]) /* ty=Tensor[(14, 8, 1), uint16] */;
  %810 = @func_4128(%808, %809) /* ty=(Tensor[(14, 8, 1), bool],) */;
  %811 = cos(%805) /* ty=Tensor[(5, 10, 9), float64] */;
  %812 = %810.0;
  (%811, %812, meta[relay.Constant][71] /* ty=uint16 */, meta[relay.Constant][72] /* ty=Tensor[(1, 112), uint16] */)
}

def @func_1012(%var_951: Tensor[(1, 10, 10), float32], %var_968: Tensor[(1, 104), float64], %var_972: Tensor[(1, 72), float64]) -> (Tensor[(4, 13, 2), float64], Tensor[(1, 104), float64], Tensor[(?, 72), int64], Tensor[(6, ?, 12), int32], Tensor[(6, ?, 12), int32], Tensor[(?, 10, 10), bool]) {
  %813 = cast(%var_968, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %814 = cast(%var_968, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %815 = reshape(%813, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %816 = reshape(%814, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %817 = cast(%var_972, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %818 = reshape(%817, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %819 = @func_340(%818) /* ty=Tensor[(6, ?, 12), int32] */;
  %820 = cast(%819, dtype="int64") /* ty=Tensor[(6, ?, 12), int64] */;
  %821 = shape_of(%var_972, dtype="int32") /* ty=Tensor[(2), int32] */;
  %822 = cast(%var_972, dtype="int64") /* ty=Tensor[(1, 72), int64] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %824 = cast(%var_972, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %825 = reshape(%824, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %826 = cast(%var_972, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %827 = reshape(%826, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %828 = cast(%var_951, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %829 = tan(%828) /* ty=Tensor[(1, 10, 10), float32] */;
  %830 = cast(%829, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %831 = rsqrt(%830) /* ty=Tensor[(1, 10, 10), float32] */;
  %832 = cast(%var_951, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%831, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %836 = @func_931(%815, %816) /* ty=Tensor[(4, 13, 2), float64] */;
  %837 = maximum(%822, %823) /* ty=Tensor[(?, 72), int64] */;
  %838 = @func_340(%825) /* ty=Tensor[(6, ?, 12), int32] */;
  %839 = @func_340(%827) /* ty=Tensor[(6, ?, 12), int32] */;
  %840 = less(%834, %835) /* ty=Tensor[(?, 10, 10), bool] */;
  (%836, %var_968, %837, %838, %839, %840)
}

def @func_12450(%var_12419: uint16, %var_12420: Tensor[(225), uint16], %var_12421: Tensor[(420), bool], %var_12448: Tensor[(104), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(9, 11, 4), float64], Tensor[(3, 132), float64], Tensor[(72), float64], Tensor[(1260), float64], Tensor[(7, 4, 11), float64], uint16, Tensor[(225), uint16], Tensor[(7, 4, 11), float64], Tensor[(2, 14, 15), bool], Tensor[(15, 4, 3), float32], Tensor[(180), uint32], Tensor[(104), float64]) {
  %841 = @func_12068() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %842 = cast(meta[relay.Constant][73] /* ty=Tensor[(3, 132), float64] */, dtype="float64") /* ty=Tensor[(3, 132), float64] */;
  %843 = reshape(%842, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float64] */;
  %844 = cast(meta[relay.Constant][74] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %845 = reshape(%844, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %846 = @func_11227(%845) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(7, 15, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
  %847 = @func_12068() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %848 = @func_11540() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %849 = cast(%var_12419, dtype="uint16") /* ty=uint16 */;
  %850 = cast(%var_12420, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %851 = cast(%var_12421, dtype="bool") /* ty=Tensor[(420), bool] */;
  %852 = reshape(%849, newshape=[]) /* ty=uint16 */;
  %853 = reshape(%850, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
  %854 = reshape(%851, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %855 = @func_2889(%852, %853, %854) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
  %856 = %855.1;
  %857 = cast(%var_12421, dtype="bool") /* ty=Tensor[(420), bool] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(%856, dtype="bool") /* ty=Tensor[(2, 14, 15), bool] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %861 = cast(meta[relay.Constant][75] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %862 = cast(%var_12448, dtype="float64") /* ty=Tensor[(104), float64] */;
  %863 = reshape(%861, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), uint32] */;
  %864 = reshape(%862, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %865 = @func_3941(%863, %864) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(4, 13, 2), float64], Tensor[(104), float64]) */;
  %866 = %841.0;
  %867 = @func_5507(%843) /* ty=Tensor[(9, 11, 4), float64] */;
  %868 = %846.3;
  %869 = %847.0;
  %870 = %848.0;
  %871 = greater_equal(%859, %860) /* ty=Tensor[(2, 14, 15), bool] */;
  %872 = %865.0;
  (%866, %867, meta[relay.Constant][73] /* ty=Tensor[(3, 132), float64] */, %868, meta[relay.Constant][74] /* ty=Tensor[(1260), float64] */, %869, %var_12419, %var_12420, %870, %871, %872, meta[relay.Constant][75] /* ty=Tensor[(180), uint32] */, %var_12448)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6047(%var_6045: Tensor[(10, 14, 10), int16], %var_6046: Tensor[(15), float32]) -> (Tensor[(10, 14, 10), int16], Tensor[(3, 5, 9), int16], Tensor[(15), float32], Tensor[(135), float32]) {
  @func_6043(%var_6045, %var_6046) /* ty=(Tensor[(10, 14, 10), int16], Tensor[(3, 5, 9), int16], Tensor[(15), float32], Tensor[(135), float32]) */
}

def @func_4735(%var_4696: Tensor[(13, 10, 16), int8], %var_4697: Tensor[(13, 10, 16), int8], %var_4703: Tensor[(750), float64], %var_4704: Tensor[(72), float64]) -> (Tensor[(13, 10, 16), bool], Tensor[(7, 11, 3), bool], Tensor[(750), float64], Tensor[(72), float64]) {
  %0 = cast(%var_4697, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %1 = shape_of(%var_4696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_4696, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(%var_4703, dtype="float64") /* ty=Tensor[(750), float64] */;
  %5 = cast(%var_4704, dtype="float64") /* ty=Tensor[(72), float64] */;
  %6 = reshape(%4, newshape=[750]) /* ty=Tensor[(750), float64] */;
  %7 = reshape(%5, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %8 = @func_3913(%6, %7) /* ty=(Tensor[(7, 11, 3), bool], Tensor[(16, 5, 3), int8], Tensor[(750), float64], Tensor[(72), float64], Tensor[(7, 11, 3), bool]) */;
  %9 = less(%2, %3) /* ty=Tensor[(13, 10, 16), bool] */;
  %10 = %8.0;
  (%9, %10, %var_4703, %var_4704)
}

def @func_11791() -> Tensor[(7, 4, 11), float64] {
  @func_11789() /* ty=Tensor[(7, 4, 11), float64] */
}

def @func_4741(%var_4737: Tensor[(13, 10, 16), int8], %var_4738: Tensor[(13, 10, 16), int8], %var_4739: Tensor[(750), float64], %var_4740: Tensor[(72), float64]) -> (Tensor[(13, 10, 16), bool], Tensor[(7, 11, 3), bool], Tensor[(750), float64], Tensor[(72), float64]) {
  @func_4735(%var_4737, %var_4738, %var_4739, %var_4740) /* ty=(Tensor[(13, 10, 16), bool], Tensor[(7, 11, 3), bool], Tensor[(750), float64], Tensor[(72), float64]) */
}

def @func_11541() -> (Tensor[(7, 4, 11), float64],) {
  %13 = fn () -> (Tensor[(7, 4, 11), float64],) {
    %11 = @func_11138() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %12 = %11.0;
    (%12,)
  };
  %13() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_9692(%var_9690: Tensor[(10, 13, 16), int64], %var_9691: Tensor[(10, 13, 16), int64]) -> Tensor[(10, 13, 16), bool] {
  %18 = fn (%var_9677: Tensor[(10, 13, 16), int64], %var_9678: Tensor[(10, 13, 16), int64]) -> Tensor[(10, 13, 16), bool] {
    %14 = cast(%var_9678, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
    %15 = shape_of(%var_9677, dtype="int32") /* ty=Tensor[(3), int32] */;
    %16 = cast(%var_9677, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
    %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%16, %17) /* ty=Tensor[(10, 13, 16), bool] */
  };
  %18(%var_9690, %var_9691) /* ty=Tensor[(10, 13, 16), bool] */
}

def @func_11229(%var_11228: Tensor[(7, 15, 12), float64]) -> (Tensor[(7, 15, 12), float64], Tensor[(7, 15, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) {
  %26 = fn (%var_11217: Tensor[(7, 15, 12), float64]) -> (Tensor[(7, 15, 12), float64], Tensor[(7, 15, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) {
    %19 = cast(%var_11217, dtype="float64") /* ty=Tensor[(7, 15, 12), float64] */;
    %20 = cast(%var_11217, dtype="float64") /* ty=Tensor[(7, 15, 12), float64] */;
    %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %22 = reshape(%21, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
    %23 = rsqrt(%19) /* ty=Tensor[(7, 15, 12), float64] */;
    %24 = atan(%20) /* ty=Tensor[(7, 15, 12), float64] */;
    %25 = @func_340(%22) /* ty=Tensor[(6, ?, 12), int32] */;
    (%23, %24, %25, meta[relay.Constant][0] /* ty=Tensor[(72), float64] */)
  };
  %26(%var_11228) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(7, 15, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */
}

def @func_11328() -> (Tensor[(7, 4, 11), float64],) {
  @func_11326() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_12484(%var_12474: Tensor[(4, 16, 3), uint16]) -> (Tensor[(4, 16, 3), uint16], Tensor[(7, 4, 11), float64]) {
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 16, 3), uint16] */, dtype="uint16") /* ty=Tensor[(4, 16, 3), uint16] */;
  %28 = shape_of(%var_12474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%var_12474, dtype="uint16") /* ty=Tensor[(4, 16, 3), uint16] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %31 = left_shift(%29, %30) /* ty=Tensor[(4, 16, 3), uint16] */;
  %32 = @func_12329() /* ty=Tensor[(7, 4, 11), float64] */;
  (%31, %32)
}

def @func_12068() -> (Tensor[(7, 4, 11), float64],) {
  %33 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %34 = %33.0;
  (%34,)
}

def @func_5780(%var_5778: Tensor[(1, 7, 13), uint8], %var_5779: Tensor[(13, 7, 13), uint8]) -> Tensor[(13, 7, 13), float64] {
  %39 = fn (%var_5748: Tensor[(1, 7, 13), uint8], %var_5749: Tensor[(13, 7, 13), uint8]) -> Tensor[(13, 7, 13), float64] {
    %35 = cast(%var_5748, dtype="uint8") /* ty=Tensor[(1, 7, 13), uint8] */;
    %36 = cast(%var_5749, dtype="uint8") /* ty=Tensor[(13, 7, 13), uint8] */;
    %37 = bitwise_and(%35, %36) /* ty=Tensor[(13, 7, 13), uint8] */;
    %38 = cast(%37, dtype="float64") /* ty=Tensor[(13, 7, 13), float64] */;
    log2(%38) /* ty=Tensor[(13, 7, 13), float64] */
  };
  %39(%var_5778, %var_5779) /* ty=Tensor[(13, 7, 13), float64] */
}

def @func_5865(%var_5863: Tensor[(3, 5, 1), float32], %var_5864: Tensor[(3, 5, 9), float32]) -> Tensor[(3, 5, 9), int16] {
  @func_5861(%var_5863, %var_5864) /* ty=Tensor[(3, 5, 9), int16] */
}

def @func_4052(%var_4050: bool) -> (Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) {
  @func_4049(%var_4050) /* ty=(Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) */
}

def @func_12487(%var_12485: Tensor[(4, 16, 3), uint16]) -> (Tensor[(4, 16, 3), uint16], Tensor[(7, 4, 11), float64]) {
  @func_12484(%var_12485) /* ty=(Tensor[(4, 16, 3), uint16], Tensor[(7, 4, 11), float64]) */
}

def @func_9235(%var_9233: Tensor[(12, 4, 8), int8], %var_9234: Tensor[(12, 4, 8), int8]) -> (Tensor[(12, 4, 8), int8], Tensor[(12, 4, 8), float32]) {
  %47 = fn (%var_9211: Tensor[(12, 4, 8), int8], %var_9212: Tensor[(12, 4, 8), int8]) -> (Tensor[(12, 4, 8), int8], Tensor[(12, 4, 8), float32]) {
    %40 = cast(%var_9212, dtype="int8") /* ty=Tensor[(12, 4, 8), int8] */;
    %41 = shape_of(%var_9211, dtype="int32") /* ty=Tensor[(3), int32] */;
    %42 = cast(%var_9211, dtype="int8") /* ty=Tensor[(12, 4, 8), int8] */;
    %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %44 = cast(%var_9211, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
    %45 = subtract(%42, %43) /* ty=Tensor[(12, 4, 8), int8] */;
    %46 = exp(%44) /* ty=Tensor[(12, 4, 8), float32] */;
    (%45, %46)
  };
  %47(%var_9233, %var_9234) /* ty=(Tensor[(12, 4, 8), int8], Tensor[(12, 4, 8), float32]) */
}

def @func_10615(%var_10567: Tensor[(7, 13, 5), float32], %var_10568: Tensor[(7, 13, 5), float32]) -> Tensor[(7, 13, 5), float32] {
  %48 = cast(%var_10568, dtype="float32") /* ty=Tensor[(7, 13, 5), float32] */;
  %49 = shape_of(%var_10567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%var_10567, dtype="float32") /* ty=Tensor[(7, 13, 5), float32] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%50, %51) /* ty=Tensor[(7, 13, 5), float32] */
}

def @func_12224() -> (Tensor[(7, 4, 11), float64],) {
  @func_12222() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_12517() -> Tensor[(7, 4, 11), float64] {
  %52 = fn () -> Tensor[(7, 4, 11), float64] {
    @func_12329() /* ty=Tensor[(7, 4, 11), float64] */
  };
  %52() /* ty=Tensor[(7, 4, 11), float64] */
}

def @func_12222() -> (Tensor[(7, 4, 11), float64],) {
  %53 = @func_11789() /* ty=Tensor[(7, 4, 11), float64] */;
  (%53,)
}

def @main(%var_12610: uint16, %var_12614: Tensor[(384), float64], %var_12616: Tensor[(72, 1), float64], %var_12618: Tensor[(72, 1), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(14, 8, 1), bool], uint16, Tensor[(56, 2), uint16], Tensor[(72), float64], Tensor[(384), float64], Tensor[(1260), float64], Tensor[(72, ?), float64]) {
  %54 = @func_12297() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), float64]) */;
  %55 = cast(%var_12610, dtype="uint16") /* ty=uint16 */;
  %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(56, 2), uint16] */, dtype="uint16") /* ty=Tensor[(56, 2), uint16] */;
  %57 = reshape(%55, newshape=[]) /* ty=uint16 */;
  %58 = reshape(%56, newshape=[14, 8, 1]) /* ty=Tensor[(14, 8, 1), uint16] */;
  %59 = @func_4131(%57, %58) /* ty=(Tensor[(14, 8, 1), bool],) */;
  %60 = cast(%var_12614, dtype="float64") /* ty=Tensor[(384), float64] */;
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %62 = cast(%var_12616, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %63 = reshape(%60, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %64 = reshape(%61, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %65 = reshape(%62, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %66 = @func_11495(%63, %64, %65) /* ty=(Tensor[(16, 3, 8), float64], Tensor[(72), int64], Tensor[(1260), float64], Tensor[(72), float64]) */;
  %67 = cast(%var_12618, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %68 = shape_of(%var_12616, dtype="int32") /* ty=Tensor[(2), int32] */;
  %69 = cast(%var_12616, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %71 = %54.1;
  %72 = %59.0;
  %73 = %66.3;
  %74 = divide(%69, %70) /* ty=Tensor[(72, ?), float64] */;
  (%71, %72, %var_12610, meta[relay.Constant][2] /* ty=Tensor[(56, 2), uint16] */, %73, %var_12614, meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, %74)
}

def @func_6533(%var_6529: Tensor[(5, 9, 1), uint64], %var_6530: Tensor[(5, 9, 8), uint64], %var_6531: Tensor[(120, 2), float32], %var_6532: Tensor[(396), float64]) -> (Tensor[(5, 9, 8), uint64], Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(1540), float64], Tensor[(72), float64], Tensor[(9, 11, 4), float64], Tensor[(396), uint64], Tensor[(9, 11, 4), uint16], Tensor[(72), float64], Tensor[(750), float64], Tensor[(120, 2), uint32]) {
  %122 = fn (%var_6425: Tensor[(5, 9, 1), uint64], %var_6426: Tensor[(5, 9, 8), uint64], %var_6443: Tensor[(120, 2), float32], %var_6496: Tensor[(396), float64]) -> (Tensor[(5, 9, 8), uint64], Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(1540), float64], Tensor[(72), float64], Tensor[(9, 11, 4), float64], Tensor[(396), uint64], Tensor[(9, 11, 4), uint16], Tensor[(72), float64], Tensor[(750), float64], Tensor[(120, 2), uint32]) {
    %75 = cast(%var_6425, dtype="uint64") /* ty=Tensor[(5, 9, 1), uint64] */;
    %76 = cast(%var_6426, dtype="uint64") /* ty=Tensor[(5, 9, 8), uint64] */;
    %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %79 = reshape(%77, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
    %80 = reshape(%78, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
    %81 = cast(meta[relay.Constant][7] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %82 = reshape(%81, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float64] */;
    %83 = cast(%var_6496, dtype="uint64") /* ty=Tensor[(396), uint64] */;
    %84 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(396), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %85 = cast(meta[relay.Constant][7] /* ty=Tensor[(396), float64] */, dtype="uint64") /* ty=Tensor[(396), uint64] */;
    %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %87 = @func_5507(%82) /* ty=Tensor[(9, 11, 4), float64] */;
    %88 = cast(%87, dtype="float64") /* ty=Tensor[(9, 11, 4), float64] */;
    %89 = reshape(%88, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float64] */;
    %90 = @func_5507(%89) /* ty=Tensor[(9, 11, 4), float64] */;
    %91 = cast(meta[relay.Constant][7] /* ty=Tensor[(396), float64] */, dtype="uint16") /* ty=Tensor[(396), uint16] */;
    %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
    %93 = cast(%90, dtype="uint16") /* ty=Tensor[(9, 11, 4), uint16] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %95 = cast(meta[relay.Constant][8] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
    %96 = cast(meta[relay.Constant][8] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
    %97 = cast(meta[relay.Constant][6] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %98 = reshape(%95, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
    %99 = reshape(%96, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
    %100 = reshape(%97, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %101 = @func_3130(%98, %99, %100) /* ty=(Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) */;
    %102 = cast(%var_6443, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
    %103 = log2(%102) /* ty=Tensor[(120, 2), float64] */;
    %104 = cast(meta[relay.Constant][5] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %105 = cast(%var_6443, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
    %106 = cast(meta[relay.Constant][6] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %107 = reshape(%104, newshape=[11, 14, 10]) /* ty=Tensor[(11, 14, 10), float64] */;
    %108 = reshape(%105, newshape=[4, 60]) /* ty=Tensor[(4, 60), float32] */;
    %109 = reshape(%106, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %110 = @func_5804(%107, %108, %109) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(104), float64], Tensor[(672), int64], Tensor[(4, 60), float32], Tensor[(1, 104), float64], Tensor[(72), float64]) */;
    %111 = %110.3;
    %112 = cast(%111, dtype="uint32") /* ty=Tensor[(4, 60), uint32] */;
    %113 = shape_of(%103, dtype="int32") /* ty=Tensor[(2), int32] */;
    %114 = cast(%103, dtype="uint32") /* ty=Tensor[(120, 2), uint32] */;
    %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %116 = bitwise_or(%75, %76) /* ty=Tensor[(5, 9, 8), uint64] */;
    %117 = @func_931(%79, %80) /* ty=Tensor[(4, 13, 2), float64] */;
    %118 = bitwise_xor(%85, %86) /* ty=Tensor[(396), uint64] */;
    %119 = bitwise_or(%93, %94) /* ty=Tensor[(9, 11, 4), uint16] */;
    %120 = %101.5;
    %121 = logical_xor(%114, %115) /* ty=Tensor[(120, 2), uint32] */;
    (%116, %117, meta[relay.Constant][4] /* ty=Tensor[(104), float64] */, meta[relay.Constant][5] /* ty=Tensor[(1540), float64] */, meta[relay.Constant][6] /* ty=Tensor[(72), float64] */, %87, %118, %119, %120, meta[relay.Constant][8] /* ty=Tensor[(750), float64] */, %121)
  };
  %122(%var_6529, %var_6530, %var_6531, %var_6532) /* ty=(Tensor[(5, 9, 8), uint64], Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(1540), float64], Tensor[(72), float64], Tensor[(9, 11, 4), float64], Tensor[(396), uint64], Tensor[(9, 11, 4), uint16], Tensor[(72), float64], Tensor[(750), float64], Tensor[(120, 2), uint32]) */
}

def @func_11724(%var_11722: Tensor[(13, 8, 1), int8], %var_11723: Tensor[(13, 8, 12), int8]) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), uint8]) {
  %131 = fn (%var_11703: Tensor[(13, 8, 1), int8], %var_11704: Tensor[(13, 8, 12), int8]) -> (Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), uint8]) {
    %123 = cast(%var_11703, dtype="int8") /* ty=Tensor[(13, 8, 1), int8] */;
    %124 = cast(%var_11704, dtype="int8") /* ty=Tensor[(13, 8, 12), int8] */;
    %125 = left_shift(%123, %124) /* ty=Tensor[(13, 8, 12), int8] */;
    %126 = cast(%125, dtype="float32") /* ty=Tensor[(13, 8, 12), float32] */;
    %127 = cast(%var_11703, dtype="uint8") /* ty=Tensor[(13, 8, 1), uint8] */;
    %128 = cast(%var_11704, dtype="uint8") /* ty=Tensor[(13, 8, 12), uint8] */;
    %129 = acos(%126) /* ty=Tensor[(13, 8, 12), float32] */;
    %130 = right_shift(%127, %128) /* ty=Tensor[(13, 8, 12), uint8] */;
    (%129, %130)
  };
  %131(%var_11722, %var_11723) /* ty=(Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), uint8]) */
}

def @func_11140() -> (Tensor[(7, 4, 11), float64],) {
  @func_11138() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_11138() -> (Tensor[(7, 4, 11), float64],) {
  %132 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  (%132,)
}

def @func_4049(%var_4044: bool) -> (Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) {
  %133 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %134 = tan(%133) /* ty=Tensor[(12, 15, 16), float32] */;
  %135 = cast(%134, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %136 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(12, 15, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %139 = cast(%var_4044, dtype="bool") /* ty=bool */;
  %140 = cast(meta[relay.Constant][10] /* ty=Tensor[(420, 1), bool] */, dtype="bool") /* ty=Tensor[(420, 1), bool] */;
  %141 = reshape(%139, newshape=[]) /* ty=bool */;
  %142 = reshape(%140, newshape=[2, 14, 15]) /* ty=Tensor[(2, 14, 15), bool] */;
  %143 = divide(%137, %138) /* ty=Tensor[(12, 15, 16), float32] */;
  %144 = @func_2509(%141, %142) /* ty=Tensor[(2, 14, 15), bool] */;
  (%143, %144, %var_4044, meta[relay.Constant][10] /* ty=Tensor[(420, 1), bool] */)
}

def @func_12295() -> (Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), float64]) {
  %145 = @func_11876() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %146 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  %147 = %145.0;
  (%146, %147)
}

def @func_9667(%var_9648: Tensor[(16, 5, 2), float32], %var_9654: Tensor[(48, 8), int8], %var_9665: Tensor[(45, 2), float64]) -> (Tensor[(16, 5, 2), float32], Tensor[(12, 4, 8), int8], Tensor[(48, 8), int8], Tensor[(16, 5, 2), float32], Tensor[(2, 15, 3), float64], Tensor[(45, 2), float64]) {
  %148 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %149 = shape_of(%var_9648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_9648, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %152 = cast(%var_9654, dtype="int8") /* ty=Tensor[(48, 8), int8] */;
  %153 = cast(%var_9654, dtype="int8") /* ty=Tensor[(48, 8), int8] */;
  %154 = reshape(%152, newshape=[12, 4, 8]) /* ty=Tensor[(12, 4, 8), int8] */;
  %155 = reshape(%153, newshape=[12, 4, 8]) /* ty=Tensor[(12, 4, 8), int8] */;
  %156 = @func_9232(%154, %155) /* ty=(Tensor[(12, 4, 8), int8], Tensor[(12, 4, 8), float32]) */;
  %157 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %158 = cast(%var_9665, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %159 = reshape(%158, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
  %160 = @func_6708(%159) /* ty=(Tensor[(2, 15, 3), float64],) */;
  %161 = multiply(%150, %151) /* ty=Tensor[(16, 5, 2), float32] */;
  %162 = %156.0;
  %163 = sinh(%157) /* ty=Tensor[(16, 5, 2), float32] */;
  %164 = %160.0;
  (%161, %162, %var_9654, %163, %164, %var_9665)
}

def @func_12596() -> (Tensor[(7, 4, 11), float64],) {
  %165 = @func_12295() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), float64]) */;
  %166 = %165.1;
  (%166,)
}

def @func_12372() -> Tensor[(7, 4, 11), float64] {
  @func_12370() /* ty=Tensor[(7, 4, 11), float64] */
}

def @func_6711(%var_6709: Tensor[(2, 15, 3), float64]) -> (Tensor[(2, 15, 3), float64],) {
  @func_6708(%var_6709) /* ty=(Tensor[(2, 15, 3), float64],) */
}

def @func_7146(%var_7140: Tensor[(15, 3), uint64], %var_7141: Tensor[(360), uint64], %var_7142: Tensor[(240), float32], %var_7143: Tensor[(396), float64], %var_7144: uint16, %var_7145: Tensor[(420), bool]) -> (Tensor[(9, 16, 10), float64], Tensor[(120, 2), uint32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(396), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) {
  %187 = fn (%var_7113: Tensor[(15, 3), uint64], %var_7114: Tensor[(360), uint64], %var_7115: Tensor[(240), float32], %var_7116: Tensor[(396), float64], %var_7123: uint16, %var_7125: Tensor[(420), bool]) -> (Tensor[(9, 16, 10), float64], Tensor[(120, 2), uint32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(396), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) {
    %167 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 16, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 10), float64] */;
    %168 = cast(%var_7113, dtype="uint64") /* ty=Tensor[(15, 3), uint64] */;
    %169 = cast(%var_7114, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %170 = cast(%var_7115, dtype="float32") /* ty=Tensor[(240), float32] */;
    %171 = cast(%var_7116, dtype="float64") /* ty=Tensor[(396), float64] */;
    %172 = reshape(%168, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), uint64] */;
    %173 = reshape(%169, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), uint64] */;
    %174 = reshape(%170, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
    %175 = reshape(%171, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %176 = @func_6528(%172, %173, %174, %175) /* ty=(Tensor[(5, 9, 8), uint64], Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(1540), float64], Tensor[(72), float64], Tensor[(9, 11, 4), float64], Tensor[(396), uint64], Tensor[(9, 11, 4), uint16], Tensor[(72), float64], Tensor[(750), float64], Tensor[(120, 2), uint32]) */;
    %177 = cast(%var_7123, dtype="uint16") /* ty=uint16 */;
    %178 = cast(meta[relay.Constant][13] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
    %179 = cast(%var_7125, dtype="bool") /* ty=Tensor[(420), bool] */;
    %180 = reshape(%177, newshape=[]) /* ty=uint16 */;
    %181 = reshape(%178, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
    %182 = reshape(%179, newshape=[420]) /* ty=Tensor[(420), bool] */;
    %183 = @func_2889(%180, %181, %182) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
    %184 = sinh(%167) /* ty=Tensor[(9, 16, 10), float64] */;
    %185 = %176.10;
    %186 = %183.1;
    (%184, %185, %var_7113, %var_7114, %var_7115, %var_7116, %186, %var_7123, meta[relay.Constant][13] /* ty=Tensor[(225), uint16] */, %var_7125)
  };
  %187(%var_7140, %var_7141, %var_7142, %var_7143, %var_7144, %var_7145) /* ty=(Tensor[(9, 16, 10), float64], Tensor[(120, 2), uint32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(396), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) */
}

def @func_4505(%var_4504: Tensor[(5, 10, 9), float32]) -> (Tensor[(5, 10, 9), float64], Tensor[(14, 8, 1), bool], uint16, Tensor[(1, 112), uint16]) {
  %198 = fn (%var_4484: Tensor[(5, 10, 9), float32]) -> (Tensor[(5, 10, 9), float64], Tensor[(14, 8, 1), bool], uint16, Tensor[(1, 112), uint16]) {
    %188 = cast(%var_4484, dtype="float32") /* ty=Tensor[(5, 10, 9), float32] */;
    %189 = erf(%188) /* ty=Tensor[(5, 10, 9), float32] */;
    %190 = cast(%189, dtype="float64") /* ty=Tensor[(5, 10, 9), float64] */;
    %191 = cast(meta[relay.Constant][14] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %192 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 112), uint16] */, dtype="uint16") /* ty=Tensor[(1, 112), uint16] */;
    %193 = reshape(%191, newshape=[]) /* ty=uint16 */;
    %194 = reshape(%192, newshape=[14, 8, 1]) /* ty=Tensor[(14, 8, 1), uint16] */;
    %195 = @func_4128(%193, %194) /* ty=(Tensor[(14, 8, 1), bool],) */;
    %196 = cos(%190) /* ty=Tensor[(5, 10, 9), float64] */;
    %197 = %195.0;
    (%196, %197, meta[relay.Constant][14] /* ty=uint16 */, meta[relay.Constant][15] /* ty=Tensor[(1, 112), uint16] */)
  };
  %198(%var_4504) /* ty=(Tensor[(5, 10, 9), float64], Tensor[(14, 8, 1), bool], uint16, Tensor[(1, 112), uint16]) */
}

def @func_12598() -> (Tensor[(7, 4, 11), float64],) {
  @func_12596() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_12329() -> Tensor[(7, 4, 11), float64] {
  %199 = @func_11326() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %199.0
}

def @func_2893(%var_2890: uint16, %var_2891: Tensor[(15, 3, 5), uint16], %var_2892: Tensor[(420), bool]) -> (Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) {
  %215 = fn (%var_2843: uint16, %var_2844: Tensor[(15, 3, 5), uint16], %var_2856: Tensor[(420), bool]) -> (Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) {
    %200 = cast(%var_2843, dtype="uint16") /* ty=uint16 */;
    %201 = cast(%var_2844, dtype="uint16") /* ty=Tensor[(15, 3, 5), uint16] */;
    %202 = cast(%var_2843, dtype="bool") /* ty=bool */;
    %203 = cast(%var_2856, dtype="bool") /* ty=Tensor[(420), bool] */;
    %204 = reshape(%202, newshape=[]) /* ty=bool */;
    %205 = reshape(%203, newshape=[2, 14, 15]) /* ty=Tensor[(2, 14, 15), bool] */;
    %206 = @func_2509(%204, %205) /* ty=Tensor[(2, 14, 15), bool] */;
    %207 = cast(%var_2856, dtype="float32") /* ty=Tensor[(420), float32] */;
    %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(3), int32] */;
    %209 = cast(%206, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %211 = maximum(%209, %210) /* ty=Tensor[(2, 14, 15), float32] */;
    %212 = cast(%211, dtype="float32") /* ty=Tensor[(2, 14, 15), float32] */;
    %213 = bitwise_xor(%200, %201) /* ty=Tensor[(15, 3, 5), uint16] */;
    %214 = acosh(%212) /* ty=Tensor[(2, 14, 15), float32] */;
    (%213, %214)
  };
  %215(%var_2890, %var_2891, %var_2892) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */
}

def @func_7842(%var_7818: Tensor[(16, 8, 1), float64], %var_7831: Tensor[(396), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(9, 11, 4), float64], Tensor[(396), float64]) {
  %216 = cast(%var_7818, dtype="float64") /* ty=Tensor[(16, 8, 1), float64] */;
  %217 = cast(%var_7831, dtype="float64") /* ty=Tensor[(396), float64] */;
  %218 = reshape(%217, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float64] */;
  %219 = cast(%var_7831, dtype="float64") /* ty=Tensor[(396), float64] */;
  %220 = atan(%216) /* ty=Tensor[(16, 8, 1), float64] */;
  %221 = @func_5507(%218) /* ty=Tensor[(9, 11, 4), float64] */;
  %222 = erf(%219) /* ty=Tensor[(396), float64] */;
  (%220, %221, %222)
}

def @func_11928(%var_11927: Tensor[(135), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(3, 5, 9), int16], Tensor[(15, 1), float32], Tensor[(135), float32]) {
  %230 = fn (%var_11917: Tensor[(135), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(3, 5, 9), int16], Tensor[(15, 1), float32], Tensor[(135), float32]) {
    %223 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %224 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
    %225 = cast(%var_11917, dtype="float32") /* ty=Tensor[(135), float32] */;
    %226 = reshape(%224, newshape=[3, 5, 1]) /* ty=Tensor[(3, 5, 1), float32] */;
    %227 = reshape(%225, newshape=[3, 5, 9]) /* ty=Tensor[(3, 5, 9), float32] */;
    %228 = %223.0;
    %229 = @func_5861(%226, %227) /* ty=Tensor[(3, 5, 9), int16] */;
    (%228, %229, meta[relay.Constant][16] /* ty=Tensor[(15, 1), float32] */, %var_11917)
  };
  %230(%var_11927) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(3, 5, 9), int16], Tensor[(15, 1), float32], Tensor[(135), float32]) */
}

def @func_5017(%var_4990: Tensor[(16, 5, 7), float64], %var_5006: Tensor[(225), uint16], %var_5007: Tensor[(420), bool]) -> (Tensor[(16, 5, 7), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) {
  %231 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 5, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 7), float64] */;
  %232 = shape_of(%var_4990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%var_4990, dtype="float64") /* ty=Tensor[(16, 5, 7), float64] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %235 = cast(meta[relay.Constant][18] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %236 = cast(%var_5006, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %237 = cast(%var_5007, dtype="bool") /* ty=Tensor[(420), bool] */;
  %238 = reshape(%235, newshape=[]) /* ty=uint16 */;
  %239 = reshape(%236, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
  %240 = reshape(%237, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %241 = @func_2889(%238, %239, %240) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
  %242 = divide(%233, %234) /* ty=Tensor[(16, 5, 7), float64] */;
  %243 = %241.1;
  (%242, %243, meta[relay.Constant][18] /* ty=uint16 */, %var_5006, %var_5007)
}

def @func_12564(%var_12523: Tensor[(160), float32], %var_12524: Tensor[(384), int8], %var_12530: Tensor[(15, 3), uint64], %var_12539: Tensor[(700, 2), int16], %var_12540: Tensor[(15, 1), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 15, 3), float64], Tensor[(160), float32], Tensor[(384), int8], Tensor[(90), float64], Tensor[(5, 9, 8), uint64], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(3, 5, 9), int16], Tensor[(700, 2), int16], Tensor[(15, 1), float32], Tensor[(7, 4, 11), float64], Tensor[(10, 14, 10), int16]) {
  %244 = @func_11326() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %245 = cast(%var_12523, dtype="float32") /* ty=Tensor[(160), float32] */;
  %246 = cast(%var_12524, dtype="int8") /* ty=Tensor[(384), int8] */;
  %247 = cast(meta[relay.Constant][19] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %248 = reshape(%245, newshape=[16, 5, 2]) /* ty=Tensor[(16, 5, 2), float32] */;
  %249 = reshape(%246, newshape=[48, 8]) /* ty=Tensor[(48, 8), int8] */;
  %250 = reshape(%247, newshape=[45, 2]) /* ty=Tensor[(45, 2), float64] */;
  %251 = @func_9667(%248, %249, %250) /* ty=(Tensor[(16, 5, 2), float32], Tensor[(12, 4, 8), int8], Tensor[(48, 8), int8], Tensor[(16, 5, 2), float32], Tensor[(2, 15, 3), float64], Tensor[(45, 2), float64]) */;
  %252 = cast(%var_12530, dtype="uint64") /* ty=Tensor[(15, 3), uint64] */;
  %253 = cast(meta[relay.Constant][20] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %254 = cast(meta[relay.Constant][21] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %255 = reshape(%252, newshape=[45]) /* ty=Tensor[(45), uint64] */;
  %256 = reshape(%253, newshape=[360]) /* ty=Tensor[(360), uint64] */;
  %257 = reshape(%254, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %258 = @func_6837(%255, %256, %257) /* ty=(Tensor[(2, 15, 8), uint8], Tensor[(50, 2), float32], float32, Tensor[(686), float32], Tensor[(7, 7, 14), float64], Tensor[(5, 9, 8), uint64], Tensor[(45), uint64], Tensor[(360), uint64], Tensor[(396, 1), float64]) */;
  %259 = cast(%var_12539, dtype="int16") /* ty=Tensor[(700, 2), int16] */;
  %260 = cast(%var_12540, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
  %261 = reshape(%259, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), int16] */;
  %262 = reshape(%260, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %263 = @func_6043(%261, %262) /* ty=(Tensor[(10, 14, 10), int16], Tensor[(3, 5, 9), int16], Tensor[(15), float32], Tensor[(135), float32]) */;
  %264 = cast(%var_12539, dtype="int16") /* ty=Tensor[(700, 2), int16] */;
  %265 = cast(%var_12540, dtype="float32") /* ty=Tensor[(15, 1), float32] */;
  %266 = reshape(%264, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), int16] */;
  %267 = reshape(%265, newshape=[15]) /* ty=Tensor[(15), float32] */;
  %268 = @func_6043(%266, %267) /* ty=(Tensor[(10, 14, 10), int16], Tensor[(3, 5, 9), int16], Tensor[(15), float32], Tensor[(135), float32]) */;
  %269 = %244.0;
  %270 = %251.4;
  %271 = %258.5;
  %272 = %263.1;
  %273 = @func_12370() /* ty=Tensor[(7, 4, 11), float64] */;
  %274 = %268.0;
  (%269, %270, %var_12523, %var_12524, meta[relay.Constant][19] /* ty=Tensor[(90), float64] */, %271, %var_12530, meta[relay.Constant][20] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][21] /* ty=Tensor[(396), float64] */, %272, %var_12539, %var_12540, %273, %274)
}

def @func_10978(%var_10976: Tensor[(5, 150), float64], %var_10977: Tensor[(6, 12), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(72), float64], Tensor[(2080), int8], Tensor[(5, 150), float64], Tensor[(6, 12), float64]) {
  @func_10974(%var_10976, %var_10977) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(72), float64], Tensor[(2080), int8], Tensor[(5, 150), float64], Tensor[(6, 12), float64]) */
}

def @func_5861(%var_5847: Tensor[(3, 5, 1), float32], %var_5857: Tensor[(3, 5, 9), float32]) -> Tensor[(3, 5, 9), int16] {
  %275 = cast(%var_5847, dtype="float32") /* ty=Tensor[(3, 5, 1), float32] */;
  %276 = sigmoid(%275) /* ty=Tensor[(3, 5, 1), float32] */;
  %277 = cast(%276, dtype="int16") /* ty=Tensor[(3, 5, 1), int16] */;
  %278 = cast(%var_5857, dtype="int16") /* ty=Tensor[(3, 5, 9), int16] */;
  bitwise_and(%277, %278) /* ty=Tensor[(3, 5, 9), int16] */
}

def @func_10619(%var_10617: Tensor[(7, 13, 5), float32], %var_10618: Tensor[(7, 13, 5), float32]) -> Tensor[(7, 13, 5), float32] {
  @func_10615(%var_10617, %var_10618) /* ty=Tensor[(7, 13, 5), float32] */
}

def @func_11374(%var_11372: Tensor[(7, 6, 1), float64], %var_11373: Tensor[(7, 6, 11), float64]) -> (Tensor[(7, 6, 11), float32],) {
  %285 = fn (%var_11354: Tensor[(7, 6, 1), float64], %var_11355: Tensor[(7, 6, 11), float64]) -> (Tensor[(7, 6, 11), float32],) {
    %279 = cast(%var_11354, dtype="float64") /* ty=Tensor[(7, 6, 1), float64] */;
    %280 = cast(%var_11355, dtype="float64") /* ty=Tensor[(7, 6, 11), float64] */;
    %281 = divide(%279, %280) /* ty=Tensor[(7, 6, 11), float64] */;
    %282 = cast(%var_11354, dtype="float32") /* ty=Tensor[(7, 6, 1), float32] */;
    %283 = cast(%281, dtype="float32") /* ty=Tensor[(7, 6, 11), float32] */;
    %284 = floor_divide(%282, %283) /* ty=Tensor[(7, 6, 11), float32] */;
    (%284,)
  };
  %285(%var_11372, %var_11373) /* ty=(Tensor[(7, 6, 11), float32],) */
}

def @func_5509(%var_5508: Tensor[(9, 11, 4), float64]) -> Tensor[(9, 11, 4), float64] {
  %287 = fn (%var_5504: Tensor[(9, 11, 4), float64]) -> Tensor[(9, 11, 4), float64] {
    %286 = cast(%var_5504, dtype="float64") /* ty=Tensor[(9, 11, 4), float64] */;
    rsqrt(%286) /* ty=Tensor[(9, 11, 4), float64] */
  };
  %287(%var_5508) /* ty=Tensor[(9, 11, 4), float64] */
}

def @func_3945(%var_3943: Tensor[(15, 4, 3), uint32], %var_3944: Tensor[(104), float64]) -> (Tensor[(15, 4, 3), float32], Tensor[(4, 13, 2), float64], Tensor[(104), float64]) {
  @func_3941(%var_3943, %var_3944) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(4, 13, 2), float64], Tensor[(104), float64]) */
}

def @func_3130(%var_3085: Tensor[(10, 15, 5), float64], %var_3086: Tensor[(10, 15, 5), float64], %var_3116: Tensor[(72), float64]) -> (Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) {
  %288 = cast(%var_3086, dtype="float64") /* ty=Tensor[(10, 15, 5), float64] */;
  %289 = shape_of(%var_3085, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%var_3085, dtype="float64") /* ty=Tensor[(10, 15, 5), float64] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %292 = cast(%var_3086, dtype="float64") /* ty=Tensor[(10, 15, 5), float64] */;
  %293 = cast(meta[relay.Constant][22] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %294 = cast(meta[relay.Constant][22] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %295 = reshape(%293, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %296 = reshape(%294, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %297 = @func_931(%295, %296) /* ty=Tensor[(4, 13, 2), float64] */;
  %298 = cast(meta[relay.Constant][22] /* ty=Tensor[(104), float64] */, dtype="uint64") /* ty=Tensor[(104), uint64] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="uint64") /* ty=Tensor[(4, 13, 2), uint64] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %302 = cast(meta[relay.Constant][23] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %303 = cast(meta[relay.Constant][22] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %304 = cast(%var_3116, dtype="float64") /* ty=Tensor[(72), float64] */;
  %305 = reshape(%302, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), float32] */;
  %306 = reshape(%303, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %307 = reshape(%304, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %308 = @func_1697(%305, %306, %307) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
  %309 = divide(%290, %291) /* ty=Tensor[(10, 15, 5), float64] */;
  %310 = atanh(%292) /* ty=Tensor[(10, 15, 5), float64] */;
  %311 = minimum(%300, %301) /* ty=Tensor[(4, 13, 2), uint64] */;
  %312 = %308.2;
  (%309, %310, %311, %312, meta[relay.Constant][23] /* ty=Tensor[(240), float32] */, %var_3116)
}

def @func_11467(%var_11441: Tensor[(1260), float64], %var_11458: Tensor[(72), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(72), int64]) {
  %313 = cast(%var_11441, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %314 = reshape(%313, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %315 = @func_11227(%314) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(7, 15, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
  %316 = %315.3;
  %317 = cast(%var_11458, dtype="int64") /* ty=Tensor[(72), int64] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(1), int32] */;
  %319 = cast(%316, dtype="int64") /* ty=Tensor[(72), int64] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?), int64] */;
  %321 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  %322 = left_shift(%319, %320) /* ty=Tensor[(72), int64] */;
  (%321, %var_11441, %322)
}

def @func_11471(%var_11469: Tensor[(1260), float64], %var_11470: Tensor[(72), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(72), int64]) {
  @func_11467(%var_11469, %var_11470) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(72), int64]) */
}

def @func_11012() -> Tensor[(7, 4, 11), float64] {
  %323 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %323.0
}

def @func_931(%var_900: Tensor[(4, 13, 2), float64], %var_901: Tensor[(4, 13, 2), float64]) -> Tensor[(4, 13, 2), float64] {
  %324 = cast(%var_901, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
  %325 = shape_of(%var_900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%var_900, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%326, %327) /* ty=Tensor[(4, 13, 2), float64] */
}

def @func_2236(%var_2171: Tensor[(9, 4, 8), uint32], %var_2208: Tensor[(240), float32]) -> (Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) {
  %328 = cast(%var_2171, dtype="bool") /* ty=Tensor[(9, 4, 8), bool] */;
  %329 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(9, 4, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 4, 8), uint32] */, dtype="bool") /* ty=Tensor[(9, 4, 8), bool] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %332 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %333 = reshape(%332, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %334 = cast(meta[relay.Constant][26] /* ty=Tensor[(50, 2), float32] */, dtype="float32") /* ty=Tensor[(50, 2), float32] */;
  %335 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %336 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %337 = reshape(%334, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float32] */;
  %338 = reshape(%335, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
  %339 = reshape(%336, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
  %340 = @func_1012(%337, %338, %339) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(1, 104), float64], Tensor[(?, 72), int64], Tensor[(6, ?, 12), int32], Tensor[(6, ?, 12), int32], Tensor[(?, 10, 10), bool]) */;
  %341 = cast(%var_2208, dtype="float32") /* ty=Tensor[(240), float32] */;
  %342 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %343 = %340.4;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(6, ?, 12), float64] */;
  %345 = reshape(%341, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), float32] */;
  %346 = reshape(%342, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %347 = reshape(%344, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %348 = @func_1697(%345, %346, %347) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
  %349 = %348.0;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
  %351 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %352 = reshape(%350, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %353 = reshape(%351, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %354 = @func_931(%352, %353) /* ty=Tensor[(4, 13, 2), float64] */;
  %355 = cast(%354, dtype="bool") /* ty=Tensor[(4, 13, 2), bool] */;
  %356 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(1, 104), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %357 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 104), float64] */, dtype="bool") /* ty=Tensor[(1, 104), bool] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %359 = equal(%330, %331) /* ty=Tensor[(9, 4, 8), bool] */;
  %360 = @func_340(%333) /* ty=Tensor[(6, ?, 12), int32] */;
  %361 = less(%357, %358) /* ty=Tensor[(?, 104), bool] */;
  (%359, %360, meta[relay.Constant][25] /* ty=Tensor[(6, 12), float64] */, %343, meta[relay.Constant][26] /* ty=Tensor[(50, 2), float32] */, %349, %var_2208, %361)
}

def @func_12143(%var_12140: Tensor[(168, 4), int64], %var_12141: Tensor[(72), float64], %var_12142: Tensor[(1248), int8]) -> (Tensor[(7, 4, 11), float64], Tensor[(14, 6, 4), bool], Tensor[(8, 6, 14), bool], Tensor[(2, 120), float32], Tensor[(104), float64], Tensor[(72), float64], Tensor[(13, 8, 12), float32], Tensor[(1248), int8], Tensor[(168, 4), float32]) {
  @func_12138(%var_12140, %var_12141, %var_12142) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(14, 6, 4), bool], Tensor[(8, 6, 14), bool], Tensor[(2, 120), float32], Tensor[(104), float64], Tensor[(72), float64], Tensor[(13, 8, 12), float32], Tensor[(1248), int8], Tensor[(168, 4), float32]) */
}

def @func_7846(%var_7844: Tensor[(16, 8, 1), float64], %var_7845: Tensor[(396), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(9, 11, 4), float64], Tensor[(396), float64]) {
  @func_7842(%var_7844, %var_7845) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(9, 11, 4), float64], Tensor[(396), float64]) */
}

def @func_12379() -> (Tensor[(7, 4, 11), float64],) {
  %362 = @func_12203() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %363 = %362.0;
  (%363,)
}

def @func_12070() -> (Tensor[(7, 4, 11), float64],) {
  @func_12068() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_12455(%var_12451: uint16, %var_12452: Tensor[(225), uint16], %var_12453: Tensor[(420), bool], %var_12454: Tensor[(104), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(9, 11, 4), float64], Tensor[(3, 132), float64], Tensor[(72), float64], Tensor[(1260), float64], Tensor[(7, 4, 11), float64], uint16, Tensor[(225), uint16], Tensor[(7, 4, 11), float64], Tensor[(2, 14, 15), bool], Tensor[(15, 4, 3), float32], Tensor[(180), uint32], Tensor[(104), float64]) {
  %396 = fn (%var_12419: uint16, %var_12420: Tensor[(225), uint16], %var_12421: Tensor[(420), bool], %var_12448: Tensor[(104), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(9, 11, 4), float64], Tensor[(3, 132), float64], Tensor[(72), float64], Tensor[(1260), float64], Tensor[(7, 4, 11), float64], uint16, Tensor[(225), uint16], Tensor[(7, 4, 11), float64], Tensor[(2, 14, 15), bool], Tensor[(15, 4, 3), float32], Tensor[(180), uint32], Tensor[(104), float64]) {
    %364 = @func_12068() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %365 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 132), float64] */, dtype="float64") /* ty=Tensor[(3, 132), float64] */;
    %366 = reshape(%365, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float64] */;
    %367 = cast(meta[relay.Constant][29] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %368 = reshape(%367, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
    %369 = @func_11227(%368) /* ty=(Tensor[(7, 15, 12), float64], Tensor[(7, 15, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
    %370 = @func_12068() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %371 = @func_11540() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %372 = cast(%var_12419, dtype="uint16") /* ty=uint16 */;
    %373 = cast(%var_12420, dtype="uint16") /* ty=Tensor[(225), uint16] */;
    %374 = cast(%var_12421, dtype="bool") /* ty=Tensor[(420), bool] */;
    %375 = reshape(%372, newshape=[]) /* ty=uint16 */;
    %376 = reshape(%373, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
    %377 = reshape(%374, newshape=[420]) /* ty=Tensor[(420), bool] */;
    %378 = @func_2889(%375, %376, %377) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
    %379 = %378.1;
    %380 = cast(%var_12421, dtype="bool") /* ty=Tensor[(420), bool] */;
    %381 = shape_of(%379, dtype="int32") /* ty=Tensor[(3), int32] */;
    %382 = cast(%379, dtype="bool") /* ty=Tensor[(2, 14, 15), bool] */;
    %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %384 = cast(meta[relay.Constant][30] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
    %385 = cast(%var_12448, dtype="float64") /* ty=Tensor[(104), float64] */;
    %386 = reshape(%384, newshape=[15, 4, 3]) /* ty=Tensor[(15, 4, 3), uint32] */;
    %387 = reshape(%385, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %388 = @func_3941(%386, %387) /* ty=(Tensor[(15, 4, 3), float32], Tensor[(4, 13, 2), float64], Tensor[(104), float64]) */;
    %389 = %364.0;
    %390 = @func_5507(%366) /* ty=Tensor[(9, 11, 4), float64] */;
    %391 = %369.3;
    %392 = %370.0;
    %393 = %371.0;
    %394 = greater_equal(%382, %383) /* ty=Tensor[(2, 14, 15), bool] */;
    %395 = %388.0;
    (%389, %390, meta[relay.Constant][28] /* ty=Tensor[(3, 132), float64] */, %391, meta[relay.Constant][29] /* ty=Tensor[(1260), float64] */, %392, %var_12419, %var_12420, %393, %394, %395, meta[relay.Constant][30] /* ty=Tensor[(180), uint32] */, %var_12448)
  };
  %396(%var_12451, %var_12452, %var_12453, %var_12454) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(9, 11, 4), float64], Tensor[(3, 132), float64], Tensor[(72), float64], Tensor[(1260), float64], Tensor[(7, 4, 11), float64], uint16, Tensor[(225), uint16], Tensor[(7, 4, 11), float64], Tensor[(2, 14, 15), bool], Tensor[(15, 4, 3), float32], Tensor[(180), uint32], Tensor[(104), float64]) */
}

def @func_11495(%var_11492: Tensor[(16, 3, 8), float64], %var_11493: Tensor[(1260), float64], %var_11494: Tensor[(72), float64]) -> (Tensor[(16, 3, 8), float64], Tensor[(72), int64], Tensor[(1260), float64], Tensor[(72), float64]) {
  %405 = fn (%var_11475: Tensor[(16, 3, 8), float64], %var_11488: Tensor[(1260), float64], %var_11489: Tensor[(72), float64]) -> (Tensor[(16, 3, 8), float64], Tensor[(72), int64], Tensor[(1260), float64], Tensor[(72), float64]) {
    %397 = cast(%var_11475, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
    %398 = cast(%var_11488, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %399 = cast(%var_11489, dtype="float64") /* ty=Tensor[(72), float64] */;
    %400 = reshape(%398, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %401 = reshape(%399, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %402 = @func_11467(%400, %401) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(72), int64]) */;
    %403 = atanh(%397) /* ty=Tensor[(16, 3, 8), float64] */;
    %404 = %402.2;
    (%403, %404, %var_11488, %var_11489)
  };
  %405(%var_11492, %var_11493, %var_11494) /* ty=(Tensor[(16, 3, 8), float64], Tensor[(72), int64], Tensor[(1260), float64], Tensor[(72), float64]) */
}

def @func_7613(%var_7611: bool) -> (Tensor[(14, 6, 4), bool],) {
  @func_7610(%var_7611) /* ty=(Tensor[(14, 6, 4), bool],) */
}

def @func_11326() -> (Tensor[(7, 4, 11), float64],) {
  %406 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
  (%406,)
}

def @func_12138(%var_12116: Tensor[(168, 4), int64], %var_12119: Tensor[(72), float64], %var_12122: Tensor[(1248), int8]) -> (Tensor[(7, 4, 11), float64], Tensor[(14, 6, 4), bool], Tensor[(8, 6, 14), bool], Tensor[(2, 120), float32], Tensor[(104), float64], Tensor[(72), float64], Tensor[(13, 8, 12), float32], Tensor[(1248), int8], Tensor[(168, 4), float32]) {
  %407 = @func_11540() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %408 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %409 = reshape(%408, newshape=[]) /* ty=bool */;
  %410 = @func_7610(%409) /* ty=(Tensor[(14, 6, 4), bool],) */;
  %411 = cast(%var_12116, dtype="int64") /* ty=Tensor[(168, 4), int64] */;
  %412 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 120), float32] */, dtype="float32") /* ty=Tensor[(2, 120), float32] */;
  %413 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %414 = cast(%var_12119, dtype="float64") /* ty=Tensor[(72), float64] */;
  %415 = reshape(%411, newshape=[8, 6, 14]) /* ty=Tensor[(8, 6, 14), int64] */;
  %416 = reshape(%412, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %417 = reshape(%413, newshape=[104]) /* ty=Tensor[(104), float64] */;
  %418 = reshape(%414, newshape=[72, 1]) /* ty=Tensor[(72, 1), float64] */;
  %419 = @func_1935(%415, %416, %417, %418) /* ty=(Tensor[(8, 6, 14), bool], Tensor[(6, ?, 12), int32], Tensor[(240), float32], Tensor[(104), float64], Tensor[(8, 6, 14), bool], Tensor[(72, 1), float64], Tensor[(?, 10, 10), bool], Tensor[(100), float32]) */;
  %420 = cast(meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, dtype="int8") /* ty=Tensor[(104), int8] */;
  %421 = cast(%var_12122, dtype="int8") /* ty=Tensor[(1248), int8] */;
  %422 = reshape(%420, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), int8] */;
  %423 = reshape(%421, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), int8] */;
  %424 = @func_11721(%422, %423) /* ty=(Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), uint8]) */;
  %425 = cast(%var_12116, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %426 = cast(True /* ty=bool */, dtype="float32") /* ty=float32 */;
  %427 = %407.0;
  %428 = %410.0;
  %429 = %419.4;
  %430 = %424.0;
  %431 = add(%425, %426) /* ty=Tensor[(168, 4), float32] */;
  (%427, %428, %429, meta[relay.Constant][31] /* ty=Tensor[(2, 120), float32] */, meta[relay.Constant][32] /* ty=Tensor[(104), float64] */, %var_12119, %430, %var_12122, %431)
}

def @func_11789() -> Tensor[(7, 4, 11), float64] {
  %432 = @func_11138() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %432.0
}

def @func_11683() -> (Tensor[(7, 4, 11), float64],) {
  %435 = fn () -> (Tensor[(7, 4, 11), float64],) {
    %433 = @func_11326() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %434 = %433.0;
    (%434,)
  };
  %435() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_5173(%var_5171: Tensor[(7, 3, 9), float32], %var_5172: Tensor[(288), uint32]) -> (Tensor[(7, 3, 9), float32], Tensor[(240), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(7, 3, 9), float32], Tensor[(4, 13, 2), float64]) {
  %452 = fn (%var_5130: Tensor[(7, 3, 9), float32], %var_5152: Tensor[(288), uint32]) -> (Tensor[(7, 3, 9), float32], Tensor[(240), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(7, 3, 9), float32], Tensor[(4, 13, 2), float64]) {
    %436 = cast(%var_5130, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
    %437 = cast(%var_5152, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %438 = cast(meta[relay.Constant][33] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %439 = reshape(%437, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), uint32] */;
    %440 = reshape(%438, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %441 = @func_2236(%439, %440) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */;
    %442 = cast(%var_5130, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
    %443 = cast(%var_5152, dtype="uint32") /* ty=Tensor[(288), uint32] */;
    %444 = %441.6;
    %445 = cast(%444, dtype="float32") /* ty=Tensor[(240), float32] */;
    %446 = reshape(%443, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), uint32] */;
    %447 = reshape(%445, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %448 = @func_2236(%446, %447) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */;
    %449 = log2(%436) /* ty=Tensor[(7, 3, 9), float32] */;
    %450 = cos(%442) /* ty=Tensor[(7, 3, 9), float32] */;
    %451 = %448.5;
    (%449, %444, %var_5152, meta[relay.Constant][33] /* ty=Tensor[(240), float32] */, %450, %451)
  };
  %452(%var_5171, %var_5172) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(240), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(7, 3, 9), float32], Tensor[(4, 13, 2), float64]) */
}

def @func_12571(%var_12566: Tensor[(160), float32], %var_12567: Tensor[(384), int8], %var_12568: Tensor[(15, 3), uint64], %var_12569: Tensor[(700, 2), int16], %var_12570: Tensor[(15, 1), float32]) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 15, 3), float64], Tensor[(160), float32], Tensor[(384), int8], Tensor[(90), float64], Tensor[(5, 9, 8), uint64], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(3, 5, 9), int16], Tensor[(700, 2), int16], Tensor[(15, 1), float32], Tensor[(7, 4, 11), float64], Tensor[(10, 14, 10), int16]) {
  @func_12564(%var_12566, %var_12567, %var_12568, %var_12569, %var_12570) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(2, 15, 3), float64], Tensor[(160), float32], Tensor[(384), int8], Tensor[(90), float64], Tensor[(5, 9, 8), uint64], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(3, 5, 9), int16], Tensor[(700, 2), int16], Tensor[(15, 1), float32], Tensor[(7, 4, 11), float64], Tensor[(10, 14, 10), int16]) */
}

def @func_12331() -> Tensor[(7, 4, 11), float64] {
  @func_12329() /* ty=Tensor[(7, 4, 11), float64] */
}

def @func_9435(%var_9433: Tensor[(9, 6, 11), float64]) -> Tensor[(9, 6, 11), float64] {
  @func_9432(%var_9433) /* ty=Tensor[(9, 6, 11), float64] */
}

def @func_12297() -> (Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), float64]) {
  @func_12295() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(7, 4, 11), float64]) */
}

def @func_10974(%var_10964: Tensor[(5, 150), float64], %var_10965: Tensor[(6, 12), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(72), float64], Tensor[(2080), int8], Tensor[(5, 150), float64], Tensor[(6, 12), float64]) {
  %453 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %454 = cast(meta[relay.Constant][34] /* ty=Tensor[(2080), int8] */, dtype="int8") /* ty=Tensor[(2080), int8] */;
  %455 = cast(meta[relay.Constant][34] /* ty=Tensor[(2080), int8] */, dtype="int8") /* ty=Tensor[(2080), int8] */;
  %456 = cast(%var_10964, dtype="float64") /* ty=Tensor[(5, 150), float64] */;
  %457 = cast(%var_10965, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %458 = reshape(%454, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int8] */;
  %459 = reshape(%455, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int8] */;
  %460 = reshape(%456, newshape=[750]) /* ty=Tensor[(750), float64] */;
  %461 = reshape(%457, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %462 = @func_4735(%458, %459, %460, %461) /* ty=(Tensor[(13, 10, 16), bool], Tensor[(7, 11, 3), bool], Tensor[(750), float64], Tensor[(72), float64]) */;
  %463 = %453.0;
  %464 = %462.3;
  (%463, %464, meta[relay.Constant][34] /* ty=Tensor[(2080), int8] */, %var_10964, %var_10965)
}

def @func_935(%var_933: Tensor[(4, 13, 2), float64], %var_934: Tensor[(4, 13, 2), float64]) -> Tensor[(4, 13, 2), float64] {
  @func_931(%var_933, %var_934) /* ty=Tensor[(4, 13, 2), float64] */
}

def @func_6802(%var_6799: int8, %var_6800: Tensor[(3, 13, 9), int8], %var_6801: Tensor[(1, 90), float64]) -> (Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), bool], Tensor[(2, 15, 3), float64], Tensor[(1, 90), float64]) {
  %482 = fn (%var_6767: int8, %var_6768: Tensor[(3, 13, 9), int8], %var_6786: Tensor[(1, 90), float64]) -> (Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), bool], Tensor[(2, 15, 3), float64], Tensor[(1, 90), float64]) {
    %465 = cast(%var_6767, dtype="bool") /* ty=bool */;
    %466 = cast(%var_6768, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
    %467 = less(%465, %466) /* ty=Tensor[(3, 13, 9), bool] */;
    %468 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 13, 9), bool] */, dtype="int64") /* ty=Tensor[(3, 13, 9), int64] */;
    %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
    %470 = cast(%467, dtype="int64") /* ty=Tensor[(3, 13, 9), int64] */;
    %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %472 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 13, 9), bool] */, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
    %473 = shape_of(%var_6768, dtype="int32") /* ty=Tensor[(3), int32] */;
    %474 = cast(%var_6768, dtype="bool") /* ty=Tensor[(3, 13, 9), bool] */;
    %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %476 = cast(%var_6786, dtype="float64") /* ty=Tensor[(1, 90), float64] */;
    %477 = reshape(%476, newshape=[2, 15, 3]) /* ty=Tensor[(2, 15, 3), float64] */;
    %478 = @func_6708(%477) /* ty=(Tensor[(2, 15, 3), float64],) */;
    %479 = bitwise_and(%470, %471) /* ty=Tensor[(3, 13, 9), int64] */;
    %480 = equal(%474, %475) /* ty=Tensor[(3, 13, 9), bool] */;
    %481 = %478.0;
    (%479, %480, %481, %var_6786)
  };
  %482(%var_6799, %var_6800, %var_6801) /* ty=(Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), bool], Tensor[(2, 15, 3), float64], Tensor[(1, 90), float64]) */
}

def @func_3809(%var_3806: float32, %var_3807: Tensor[(7, 7, 14), float32], %var_3808: Tensor[(240), float32]) -> (Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) {
  %497 = fn (%var_3781: float32, %var_3782: Tensor[(7, 7, 14), float32], %var_3792: Tensor[(240), float32]) -> (Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) {
    %483 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 72), uint32] */, dtype="uint32") /* ty=Tensor[(4, 72), uint32] */;
    %484 = cast(%var_3792, dtype="float32") /* ty=Tensor[(240), float32] */;
    %485 = reshape(%483, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), uint32] */;
    %486 = reshape(%484, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %487 = @func_2236(%485, %486) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */;
    %488 = cast(%var_3781, dtype="float32") /* ty=float32 */;
    %489 = cast(%var_3782, dtype="float32") /* ty=Tensor[(7, 7, 14), float32] */;
    %490 = power(%488, %489) /* ty=Tensor[(7, 7, 14), float32] */;
    %491 = cast(%var_3782, dtype="float64") /* ty=Tensor[(7, 7, 14), float64] */;
    %492 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
    %493 = cast(%490, dtype="float64") /* ty=Tensor[(7, 7, 14), float64] */;
    %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %495 = %487.4;
    %496 = multiply(%493, %494) /* ty=Tensor[(7, 7, 14), float64] */;
    (%495, meta[relay.Constant][36] /* ty=Tensor[(4, 72), uint32] */, %var_3792, %496)
  };
  %497(%var_3806, %var_3807, %var_3808) /* ty=(Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) */
}

def @func_342(%var_341: Tensor[(6, 1, 12), float64]) -> Tensor[(6, ?, 12), int32] {
  %504 = fn (%var_327: Tensor[(6, 1, 12), float64]) -> Tensor[(6, ?, 12), int32] {
    %498 = cast(%var_327, dtype="float64") /* ty=Tensor[(6, 1, 12), float64] */;
    %499 = erf(%498) /* ty=Tensor[(6, 1, 12), float64] */;
    %500 = cast(%499, dtype="int32") /* ty=Tensor[(6, 1, 12), int32] */;
    %501 = shape_of(%var_327, dtype="int32") /* ty=Tensor[(3), int32] */;
    %502 = cast(%var_327, dtype="int32") /* ty=Tensor[(6, 1, 12), int32] */;
    %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    logical_xor(%502, %503) /* ty=Tensor[(6, ?, 12), int32] */
  };
  %504(%var_341) /* ty=Tensor[(6, ?, 12), int32] */
}

def @func_3410(%var_3407: Tensor[(9, 7, 11), uint8], %var_3408: Tensor[(9, 7, 11), uint8], %var_3409: Tensor[(72), float64]) -> (Tensor[(9, 7, 11), bool], Tensor[(72), float64], Tensor[(750), float64], Tensor[(72), float64], Tensor[(9, 7, 11), int8]) {
  %523 = fn (%var_3379: Tensor[(9, 7, 11), uint8], %var_3380: Tensor[(9, 7, 11), uint8], %var_3391: Tensor[(72), float64]) -> (Tensor[(9, 7, 11), bool], Tensor[(72), float64], Tensor[(750), float64], Tensor[(72), float64], Tensor[(9, 7, 11), int8]) {
    %505 = cast(%var_3380, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
    %506 = shape_of(%var_3379, dtype="int32") /* ty=Tensor[(3), int32] */;
    %507 = cast(%var_3379, dtype="bool") /* ty=Tensor[(9, 7, 11), bool] */;
    %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %509 = cast(meta[relay.Constant][37] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
    %510 = cast(meta[relay.Constant][37] /* ty=Tensor[(750), float64] */, dtype="float64") /* ty=Tensor[(750), float64] */;
    %511 = cast(%var_3391, dtype="float64") /* ty=Tensor[(72), float64] */;
    %512 = reshape(%509, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
    %513 = reshape(%510, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
    %514 = reshape(%511, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %515 = @func_3130(%512, %513, %514) /* ty=(Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) */;
    %516 = cast(%var_3379, dtype="int8") /* ty=Tensor[(9, 7, 11), int8] */;
    %517 = shape_of(%var_3380, dtype="int32") /* ty=Tensor[(3), int32] */;
    %518 = cast(%var_3380, dtype="int8") /* ty=Tensor[(9, 7, 11), int8] */;
    %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %520 = greater_equal(%507, %508) /* ty=Tensor[(9, 7, 11), bool] */;
    %521 = %515.5;
    %522 = maximum(%518, %519) /* ty=Tensor[(9, 7, 11), int8] */;
    (%520, %521, meta[relay.Constant][37] /* ty=Tensor[(750), float64] */, %var_3391, %522)
  };
  %523(%var_3407, %var_3408, %var_3409) /* ty=(Tensor[(9, 7, 11), bool], Tensor[(72), float64], Tensor[(750), float64], Tensor[(72), float64], Tensor[(9, 7, 11), int8]) */
}

def @func_3135(%var_3132: Tensor[(10, 15, 5), float64], %var_3133: Tensor[(10, 15, 5), float64], %var_3134: Tensor[(72), float64]) -> (Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) {
  @func_3130(%var_3132, %var_3133, %var_3134) /* ty=(Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) */
}

def @func_8455(%var_8454: Tensor[(5, 15, 1), float64]) -> (Tensor[(5, 15, 1), float64],) {
  %526 = fn (%var_8450: Tensor[(5, 15, 1), float64]) -> (Tensor[(5, 15, 1), float64],) {
    %524 = cast(%var_8450, dtype="float64") /* ty=Tensor[(5, 15, 1), float64] */;
    %525 = log(%524) /* ty=Tensor[(5, 15, 1), float64] */;
    (%525,)
  };
  %526(%var_8454) /* ty=(Tensor[(5, 15, 1), float64],) */
}

def @func_10859() -> (Tensor[(7, 4, 11), float64],) {
  @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_6841(%var_6838: Tensor[(45), uint64], %var_6839: Tensor[(360), uint64], %var_6840: Tensor[(396, 1), float64]) -> (Tensor[(2, 15, 8), uint8], Tensor[(50, 2), float32], float32, Tensor[(686), float32], Tensor[(7, 7, 14), float64], Tensor[(5, 9, 8), uint64], Tensor[(45), uint64], Tensor[(360), uint64], Tensor[(396, 1), float64]) {
  %558 = fn (%var_6829: Tensor[(45), uint64], %var_6830: Tensor[(360), uint64], %var_6831: Tensor[(396, 1), float64]) -> (Tensor[(2, 15, 8), uint8], Tensor[(50, 2), float32], float32, Tensor[(686), float32], Tensor[(7, 7, 14), float64], Tensor[(5, 9, 8), uint64], Tensor[(45), uint64], Tensor[(360), uint64], Tensor[(396, 1), float64]) {
    %527 = cast(meta[relay.Constant][39] /* ty=Tensor[(2, 15, 8), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 8), uint8] */;
    %528 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(2, 15, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %529 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 15, 8), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 8), uint8] */;
    %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %531 = cast(-4.63293f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %532 = cast(meta[relay.Constant][40] /* ty=Tensor[(686), float32] */, dtype="float32") /* ty=Tensor[(686), float32] */;
    %533 = left_shift(%529, %530) /* ty=Tensor[(2, 15, 8), uint8] */;
    %534 = cast(%533, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
    %535 = reshape(%531, newshape=[]) /* ty=float32 */;
    %536 = reshape(%532, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
    %537 = reshape(%534, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %538 = @func_3805(%535, %536, %537) /* ty=(Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) */;
    %539 = cast(-4.63293f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %540 = cast(meta[relay.Constant][40] /* ty=Tensor[(686), float32] */, dtype="float32") /* ty=Tensor[(686), float32] */;
    %541 = cast(%533, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
    %542 = reshape(%539, newshape=[]) /* ty=float32 */;
    %543 = reshape(%540, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
    %544 = reshape(%541, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %545 = @func_3805(%542, %543, %544) /* ty=(Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) */;
    %546 = cast(%var_6829, dtype="uint64") /* ty=Tensor[(45), uint64] */;
    %547 = cast(%var_6830, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %548 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 15, 8), uint8] */, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
    %549 = cast(%var_6831, dtype="float64") /* ty=Tensor[(396, 1), float64] */;
    %550 = reshape(%546, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), uint64] */;
    %551 = reshape(%547, newshape=[5, 9, 8]) /* ty=Tensor[(5, 9, 8), uint64] */;
    %552 = reshape(%548, newshape=[120, 2]) /* ty=Tensor[(120, 2), float32] */;
    %553 = reshape(%549, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %554 = @func_6528(%550, %551, %552, %553) /* ty=(Tensor[(5, 9, 8), uint64], Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(1540), float64], Tensor[(72), float64], Tensor[(9, 11, 4), float64], Tensor[(396), uint64], Tensor[(9, 11, 4), uint16], Tensor[(72), float64], Tensor[(750), float64], Tensor[(120, 2), uint32]) */;
    %555 = %538.0;
    %556 = %545.3;
    %557 = %554.0;
    (%533, %555, -4.63293f /* ty=float32 */, meta[relay.Constant][40] /* ty=Tensor[(686), float32] */, %556, %557, %var_6829, %var_6830, %var_6831)
  };
  %558(%var_6838, %var_6839, %var_6840) /* ty=(Tensor[(2, 15, 8), uint8], Tensor[(50, 2), float32], float32, Tensor[(686), float32], Tensor[(7, 7, 14), float64], Tensor[(5, 9, 8), uint64], Tensor[(45), uint64], Tensor[(360), uint64], Tensor[(396, 1), float64]) */
}

def @func_1012(%var_951: Tensor[(1, 10, 10), float32], %var_968: Tensor[(1, 104), float64], %var_972: Tensor[(1, 72), float64]) -> (Tensor[(4, 13, 2), float64], Tensor[(1, 104), float64], Tensor[(?, 72), int64], Tensor[(6, ?, 12), int32], Tensor[(6, ?, 12), int32], Tensor[(?, 10, 10), bool]) {
  %559 = cast(%var_968, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %560 = cast(%var_968, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
  %561 = reshape(%559, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %562 = reshape(%560, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %563 = cast(%var_972, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %564 = reshape(%563, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %565 = @func_340(%564) /* ty=Tensor[(6, ?, 12), int32] */;
  %566 = cast(%565, dtype="int64") /* ty=Tensor[(6, ?, 12), int64] */;
  %567 = shape_of(%var_972, dtype="int32") /* ty=Tensor[(2), int32] */;
  %568 = cast(%var_972, dtype="int64") /* ty=Tensor[(1, 72), int64] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %570 = cast(%var_972, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %571 = reshape(%570, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %572 = cast(%var_972, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %573 = reshape(%572, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %574 = cast(%var_951, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %575 = tan(%574) /* ty=Tensor[(1, 10, 10), float32] */;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %577 = rsqrt(%576) /* ty=Tensor[(1, 10, 10), float32] */;
  %578 = cast(%var_951, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %579 = shape_of(%577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%577, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %582 = @func_931(%561, %562) /* ty=Tensor[(4, 13, 2), float64] */;
  %583 = maximum(%568, %569) /* ty=Tensor[(?, 72), int64] */;
  %584 = @func_340(%571) /* ty=Tensor[(6, ?, 12), int32] */;
  %585 = @func_340(%573) /* ty=Tensor[(6, ?, 12), int32] */;
  %586 = less(%580, %581) /* ty=Tensor[(?, 10, 10), bool] */;
  (%582, %var_968, %583, %584, %585, %586)
}

def @func_6708(%var_6698: Tensor[(2, 15, 3), float64]) -> (Tensor[(2, 15, 3), float64],) {
  %587 = cast(%var_6698, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  %588 = erf(%587) /* ty=Tensor[(2, 15, 3), float64] */;
  %589 = cast(%var_6698, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%588, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %593 = divide(%591, %592) /* ty=Tensor[(2, 15, 3), float64] */;
  (%593,)
}

def @func_3916(%var_3914: Tensor[(750), float64], %var_3915: Tensor[(72), float64]) -> (Tensor[(7, 11, 3), bool], Tensor[(16, 5, 3), int8], Tensor[(750), float64], Tensor[(72), float64], Tensor[(7, 11, 3), bool]) {
  %615 = fn (%var_3901: Tensor[(750), float64], %var_3902: Tensor[(72), float64]) -> (Tensor[(7, 11, 3), bool], Tensor[(16, 5, 3), int8], Tensor[(750), float64], Tensor[(72), float64], Tensor[(7, 11, 3), bool]) {
    %594 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 11, 3), float64] */, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
    %595 = cast(0.737457f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %596 = cast(%var_3901, dtype="float64") /* ty=Tensor[(750), float64] */;
    %597 = cast(%var_3901, dtype="float64") /* ty=Tensor[(750), float64] */;
    %598 = cast(%var_3902, dtype="float64") /* ty=Tensor[(72), float64] */;
    %599 = reshape(%596, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
    %600 = reshape(%597, newshape=[10, 15, 5]) /* ty=Tensor[(10, 15, 5), float64] */;
    %601 = reshape(%598, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %602 = @func_3130(%599, %600, %601) /* ty=(Tensor[(10, 15, 5), float64], Tensor[(10, 15, 5), float64], Tensor[(4, 13, 2), uint64], Tensor[(16, 5, 3), int8], Tensor[(240), float32], Tensor[(72), float64]) */;
    %603 = cast(0.737457f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %604 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
    %605 = floor_divide(%603, %604) /* ty=Tensor[(7, 11, 3), float64] */;
    %606 = cast(%605, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
    %607 = atan(%606) /* ty=Tensor[(7, 11, 3), float32] */;
    %608 = cast(%605, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
    %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
    %610 = cast(%607, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
    %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %612 = logical_or(%594, %595) /* ty=Tensor[(7, 11, 3), bool] */;
    %613 = %602.3;
    %614 = greater(%610, %611) /* ty=Tensor[(7, 11, 3), bool] */;
    (%612, %613, %var_3901, %var_3902, %614)
  };
  %615(%var_3914, %var_3915) /* ty=(Tensor[(7, 11, 3), bool], Tensor[(16, 5, 3), int8], Tensor[(750), float64], Tensor[(72), float64], Tensor[(7, 11, 3), bool]) */
}

def @func_11059(%var_11057: bool, %var_11058: Tensor[(128), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(12, 15, 16), float32], bool, Tensor[(16, 8, 1), float64], Tensor[(128), float64], Tensor[(396), float64]) {
  %627 = fn (%var_11031: bool, %var_11052: Tensor[(128), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(12, 15, 16), float32], bool, Tensor[(16, 8, 1), float64], Tensor[(128), float64], Tensor[(396), float64]) {
    %616 = cast(%var_11031, dtype="bool") /* ty=bool */;
    %617 = reshape(%616, newshape=[]) /* ty=bool */;
    %618 = @func_4049(%617) /* ty=(Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) */;
    %619 = cast(%var_11052, dtype="float64") /* ty=Tensor[(128), float64] */;
    %620 = cast(meta[relay.Constant][42] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %621 = reshape(%619, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
    %622 = reshape(%620, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %623 = @func_7842(%621, %622) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(9, 11, 4), float64], Tensor[(396), float64]) */;
    %624 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
    %625 = %618.0;
    %626 = %623.0;
    (%624, %625, %var_11031, %626, %var_11052, meta[relay.Constant][42] /* ty=Tensor[(396), float64] */)
  };
  %627(%var_11057, %var_11058) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(12, 15, 16), float32], bool, Tensor[(16, 8, 1), float64], Tensor[(128), float64], Tensor[(396), float64]) */
}

def @func_11877() -> (Tensor[(7, 4, 11), float64],) {
  %630 = fn () -> (Tensor[(7, 4, 11), float64],) {
    %628 = @func_11682() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %629 = %628.0;
    (%629,)
  };
  %630() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_5022(%var_5019: Tensor[(16, 5, 7), float64], %var_5020: Tensor[(225), uint16], %var_5021: Tensor[(420), bool]) -> (Tensor[(16, 5, 7), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) {
  @func_5017(%var_5019, %var_5020, %var_5021) /* ty=(Tensor[(16, 5, 7), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) */
}

def @func_12381() -> (Tensor[(7, 4, 11), float64],) {
  @func_12379() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_9672(%var_9669: Tensor[(16, 5, 2), float32], %var_9670: Tensor[(48, 8), int8], %var_9671: Tensor[(45, 2), float64]) -> (Tensor[(16, 5, 2), float32], Tensor[(12, 4, 8), int8], Tensor[(48, 8), int8], Tensor[(16, 5, 2), float32], Tensor[(2, 15, 3), float64], Tensor[(45, 2), float64]) {
  @func_9667(%var_9669, %var_9670, %var_9671) /* ty=(Tensor[(16, 5, 2), float32], Tensor[(12, 4, 8), int8], Tensor[(48, 8), int8], Tensor[(16, 5, 2), float32], Tensor[(2, 15, 3), float64], Tensor[(45, 2), float64]) */
}

def @func_5808(%var_5805: Tensor[(11, 14, 10), float64], %var_5806: Tensor[(4, 60), float32], %var_5807: Tensor[(72), float64]) -> (Tensor[(11, 14, 10), float64], Tensor[(104), float64], Tensor[(672), int64], Tensor[(4, 60), float32], Tensor[(1, 104), float64], Tensor[(72), float64]) {
  %646 = fn (%var_5793: Tensor[(11, 14, 10), float64], %var_5799: Tensor[(4, 60), float32], %var_5801: Tensor[(72), float64]) -> (Tensor[(11, 14, 10), float64], Tensor[(104), float64], Tensor[(672), int64], Tensor[(4, 60), float32], Tensor[(1, 104), float64], Tensor[(72), float64]) {
    %631 = cast(%var_5793, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
    %632 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(11, 14, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %633 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 14, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
    %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %635 = cast(meta[relay.Constant][44] /* ty=Tensor[(672), int64] */, dtype="int64") /* ty=Tensor[(672), int64] */;
    %636 = cast(%var_5799, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
    %637 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 104), float64] */, dtype="float64") /* ty=Tensor[(1, 104), float64] */;
    %638 = cast(%var_5801, dtype="float64") /* ty=Tensor[(72), float64] */;
    %639 = reshape(%635, newshape=[8, 6, 14]) /* ty=Tensor[(8, 6, 14), int64] */;
    %640 = reshape(%636, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %641 = reshape(%637, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %642 = reshape(%638, newshape=[72, 1]) /* ty=Tensor[(72, 1), float64] */;
    %643 = @func_1935(%639, %640, %641, %642) /* ty=(Tensor[(8, 6, 14), bool], Tensor[(6, ?, 12), int32], Tensor[(240), float32], Tensor[(104), float64], Tensor[(8, 6, 14), bool], Tensor[(72, 1), float64], Tensor[(?, 10, 10), bool], Tensor[(100), float32]) */;
    %644 = floor_divide(%633, %634) /* ty=Tensor[(11, 14, 10), float64] */;
    %645 = %643.3;
    (%644, %645, meta[relay.Constant][44] /* ty=Tensor[(672), int64] */, %var_5799, meta[relay.Constant][45] /* ty=Tensor[(1, 104), float64] */, %var_5801)
  };
  %646(%var_5805, %var_5806, %var_5807) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(104), float64], Tensor[(672), int64], Tensor[(4, 60), float32], Tensor[(1, 104), float64], Tensor[(72), float64]) */
}

def @func_3941(%var_3928: Tensor[(15, 4, 3), uint32], %var_3938: Tensor[(104), float64]) -> (Tensor[(15, 4, 3), float32], Tensor[(4, 13, 2), float64], Tensor[(104), float64]) {
  %647 = cast(%var_3928, dtype="uint32") /* ty=Tensor[(15, 4, 3), uint32] */;
  %648 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(15, 4, 3), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 4, 3), uint32] */, dtype="uint32") /* ty=Tensor[(15, 4, 3), uint32] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %651 = multiply(%649, %650) /* ty=Tensor[(15, 4, 3), uint32] */;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(15, 4, 3), float32] */;
  %653 = cast(%var_3938, dtype="float64") /* ty=Tensor[(104), float64] */;
  %654 = cast(%var_3938, dtype="float64") /* ty=Tensor[(104), float64] */;
  %655 = reshape(%653, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %656 = reshape(%654, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %657 = log10(%652) /* ty=Tensor[(15, 4, 3), float32] */;
  %658 = @func_931(%655, %656) /* ty=Tensor[(4, 13, 2), float64] */;
  (%657, %658, %var_3938)
}

def @func_2509(%var_2502: bool, %var_2503: Tensor[(2, 14, 15), bool]) -> Tensor[(2, 14, 15), bool] {
  %659 = cast(%var_2502, dtype="bool") /* ty=bool */;
  %660 = cast(%var_2503, dtype="bool") /* ty=Tensor[(2, 14, 15), bool] */;
  logical_or(%659, %660) /* ty=Tensor[(2, 14, 15), bool] */
}

def @func_7610(%var_7599: bool) -> (Tensor[(14, 6, 4), bool],) {
  %661 = cast(%var_7599, dtype="bool") /* ty=bool */;
  %662 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 6, 4), bool] */, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
  %663 = logical_or(%661, %662) /* ty=Tensor[(14, 6, 4), bool] */;
  (%663,)
}

def @func_12000(%var_11956: uint16, %var_11972: Tensor[(384), float64], %var_11980: Tensor[(1260), float64]) -> (Tensor[(14, 7, 9), uint16], Tensor[(384), float64], Tensor[(1260), float64], Tensor[(72), float64], Tensor[(1260), bool]) {
  %664 = cast(%var_11956, dtype="uint16") /* ty=uint16 */;
  %665 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 7, 9), uint16] */, dtype="uint16") /* ty=Tensor[(14, 7, 9), uint16] */;
  %666 = cast(%var_11972, dtype="float64") /* ty=Tensor[(384), float64] */;
  %667 = cast(meta[relay.Constant][49] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %668 = cast(meta[relay.Constant][50] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %669 = reshape(%666, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %670 = reshape(%667, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %671 = reshape(%668, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %672 = @func_11491(%669, %670, %671) /* ty=(Tensor[(16, 3, 8), float64], Tensor[(72), int64], Tensor[(1260), float64], Tensor[(72), float64]) */;
  %673 = %672.2;
  %674 = cast(%var_11980, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(1), int32] */;
  %676 = cast(%673, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?), bool] */;
  %678 = minimum(%664, %665) /* ty=Tensor[(14, 7, 9), uint16] */;
  %679 = not_equal(%676, %677) /* ty=Tensor[(1260), bool] */;
  (%678, %var_11972, meta[relay.Constant][49] /* ty=Tensor[(1260), float64] */, meta[relay.Constant][50] /* ty=Tensor[(72), float64] */, %679)
}

def @func_11652(%var_11650: Tensor[(128), float64], %var_11651: Tensor[(560), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(240), float32], float32, Tensor[(343, 2), float32], Tensor[(240), float32], Tensor[(9, 16, 10), float64], Tensor[(45, 1), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(10, 42), bool], Tensor[(396), float64], Tensor[(128), float64], Tensor[(420), bool], Tensor[(560), float64], Tensor[(420, 1), bool], Tensor[(225), float32], Tensor[(14, 8, 1), bool], Tensor[(450), float32]) {
  %728 = fn (%var_11596: Tensor[(128), float64], %var_11610: Tensor[(560), float64]) -> (Tensor[(7, 4, 11), float64], Tensor[(240), float32], float32, Tensor[(343, 2), float32], Tensor[(240), float32], Tensor[(9, 16, 10), float64], Tensor[(45, 1), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(10, 42), bool], Tensor[(396), float64], Tensor[(128), float64], Tensor[(420), bool], Tensor[(560), float64], Tensor[(420, 1), bool], Tensor[(225), float32], Tensor[(14, 8, 1), bool], Tensor[(450), float32]) {
    %680 = @func_11540() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %681 = cast(-0.128594f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %682 = cast(meta[relay.Constant][51] /* ty=Tensor[(343, 2), float32] */, dtype="float32") /* ty=Tensor[(343, 2), float32] */;
    %683 = cast(meta[relay.Constant][52] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %684 = reshape(%681, newshape=[]) /* ty=float32 */;
    %685 = reshape(%682, newshape=[7, 7, 14]) /* ty=Tensor[(7, 7, 14), float32] */;
    %686 = reshape(%683, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %687 = @func_3805(%684, %685, %686) /* ty=(Tensor[(50, 2), float32], Tensor[(4, 72), uint32], Tensor[(240), float32], Tensor[(7, 7, 14), float64]) */;
    %688 = cast(meta[relay.Constant][53] /* ty=Tensor[(45, 1), uint64] */, dtype="uint64") /* ty=Tensor[(45, 1), uint64] */;
    %689 = cast(meta[relay.Constant][54] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %690 = %687.2;
    %691 = cast(%690, dtype="float32") /* ty=Tensor[(240), float32] */;
    %692 = cast(meta[relay.Constant][55] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %693 = cast(-0.128594f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
    %694 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 42), bool] */, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
    %695 = reshape(%688, newshape=[15, 3]) /* ty=Tensor[(15, 3), uint64] */;
    %696 = reshape(%689, newshape=[360]) /* ty=Tensor[(360), uint64] */;
    %697 = reshape(%691, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %698 = reshape(%692, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %699 = reshape(%693, newshape=[]) /* ty=uint16 */;
    %700 = reshape(%694, newshape=[420]) /* ty=Tensor[(420), bool] */;
    %701 = @func_7139(%695, %696, %697, %698, %699, %700) /* ty=(Tensor[(9, 16, 10), float64], Tensor[(120, 2), uint32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(240), float32], Tensor[(396), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) */;
    %702 = cast(%var_11596, dtype="float64") /* ty=Tensor[(128), float64] */;
    %703 = cast(meta[relay.Constant][55] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %704 = reshape(%702, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
    %705 = reshape(%703, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %706 = @func_7842(%704, %705) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(9, 11, 4), float64], Tensor[(396), float64]) */;
    %707 = cast(%var_11610, dtype="float64") /* ty=Tensor[(560), float64] */;
    %708 = cast(meta[relay.Constant][57] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
    %709 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 42), bool] */, dtype="bool") /* ty=Tensor[(10, 42), bool] */;
    %710 = reshape(%707, newshape=[16, 5, 7]) /* ty=Tensor[(16, 5, 7), float64] */;
    %711 = reshape(%708, newshape=[225]) /* ty=Tensor[(225), uint16] */;
    %712 = reshape(%709, newshape=[420]) /* ty=Tensor[(420), bool] */;
    %713 = @func_5017(%710, %711, %712) /* ty=(Tensor[(16, 5, 7), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(420), bool]) */;
    %714 = cast(-0.128594f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %715 = reshape(%714, newshape=[]) /* ty=bool */;
    %716 = @func_4049(%715) /* ty=(Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) */;
    %717 = cast(meta[relay.Constant][57] /* ty=Tensor[(225), uint16] */, dtype="float32") /* ty=Tensor[(225), float32] */;
    %718 = cast(meta[relay.Constant][58] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %719 = reshape(%718, newshape=[5, 10, 9]) /* ty=Tensor[(5, 10, 9), float32] */;
    %720 = @func_4503(%719) /* ty=(Tensor[(5, 10, 9), float64], Tensor[(14, 8, 1), bool], uint16, Tensor[(1, 112), uint16]) */;
    %721 = %680.0;
    %722 = %701.0;
    %723 = %706.2;
    %724 = %713.4;
    %725 = %716.3;
    %726 = sqrt(%717) /* ty=Tensor[(225), float32] */;
    %727 = %720.1;
    (%721, %690, -0.128594f /* ty=float32 */, meta[relay.Constant][51] /* ty=Tensor[(343, 2), float32] */, meta[relay.Constant][52] /* ty=Tensor[(240), float32] */, %722, meta[relay.Constant][53] /* ty=Tensor[(45, 1), uint64] */, meta[relay.Constant][54] /* ty=Tensor[(360), uint64] */, meta[relay.Constant][55] /* ty=Tensor[(396), float64] */, meta[relay.Constant][56] /* ty=Tensor[(10, 42), bool] */, %723, %var_11596, %724, %var_11610, %725, %726, %727, meta[relay.Constant][58] /* ty=Tensor[(450), float32] */)
  };
  %728(%var_11650, %var_11651) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(240), float32], float32, Tensor[(343, 2), float32], Tensor[(240), float32], Tensor[(9, 16, 10), float64], Tensor[(45, 1), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(10, 42), bool], Tensor[(396), float64], Tensor[(128), float64], Tensor[(420), bool], Tensor[(560), float64], Tensor[(420, 1), bool], Tensor[(225), float32], Tensor[(14, 8, 1), bool], Tensor[(450), float32]) */
}

def @func_11402(%var_11376: Tensor[(13, 15, 12), float64], %var_11377: Tensor[(13, 15, 12), float64], %var_11397: uint16, %var_11398: Tensor[(225), uint16], %var_11399: Tensor[(1, 420), bool]) -> (Tensor[(13, 15, 12), float32], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(1, 420), bool]) {
  %729 = cast(%var_11377, dtype="float64") /* ty=Tensor[(13, 15, 12), float64] */;
  %730 = shape_of(%var_11376, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%var_11376, dtype="float64") /* ty=Tensor[(13, 15, 12), float64] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %733 = multiply(%731, %732) /* ty=Tensor[(13, 15, 12), float64] */;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
  %735 = cast(%var_11397, dtype="uint16") /* ty=uint16 */;
  %736 = cast(%var_11398, dtype="uint16") /* ty=Tensor[(225), uint16] */;
  %737 = cast(%var_11399, dtype="bool") /* ty=Tensor[(1, 420), bool] */;
  %738 = reshape(%735, newshape=[]) /* ty=uint16 */;
  %739 = reshape(%736, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
  %740 = reshape(%737, newshape=[420]) /* ty=Tensor[(420), bool] */;
  %741 = @func_2889(%738, %739, %740) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
  %742 = asin(%734) /* ty=Tensor[(13, 15, 12), float32] */;
  %743 = %741.1;
  (%742, %743, %var_11397, %var_11398, %var_11399)
}

def @func_9772(%var_9762: Tensor[(2, 13, 2), float32]) -> Tensor[(2, 13, 2), float32] {
  %744 = cast(%var_9762, dtype="float32") /* ty=Tensor[(2, 13, 2), float32] */;
  asin(%744) /* ty=Tensor[(2, 13, 2), float32] */
}

def @func_1697(%var_1649: Tensor[(16, 5, 3), float32], %var_1657: Tensor[(104), float64], %var_1691: Tensor[(72), float64]) -> (Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) {
  %745 = cast(%var_1657, dtype="float64") /* ty=Tensor[(104), float64] */;
  %746 = cast(%var_1657, dtype="float64") /* ty=Tensor[(104), float64] */;
  %747 = reshape(%745, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %748 = reshape(%746, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float64] */;
  %749 = cast(%var_1649, dtype="float32") /* ty=Tensor[(16, 5, 3), float32] */;
  %750 = sigmoid(%749) /* ty=Tensor[(16, 5, 3), float32] */;
  %751 = cast(%var_1649, dtype="int16") /* ty=Tensor[(16, 5, 3), int16] */;
  %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%750, dtype="int16") /* ty=Tensor[(16, 5, 3), int16] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %755 = minimum(%753, %754) /* ty=Tensor[(16, 5, 3), int16] */;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(16, 5, 3), float32] */;
  %757 = atan(%756) /* ty=Tensor[(16, 5, 3), float32] */;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(16, 5, 3), float64] */;
  %759 = log2(%758) /* ty=Tensor[(16, 5, 3), float64] */;
  %760 = cast(%750, dtype="int8") /* ty=Tensor[(16, 5, 3), int8] */;
  %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%759, dtype="int8") /* ty=Tensor[(16, 5, 3), int8] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %764 = cast(%var_1691, dtype="float64") /* ty=Tensor[(72), float64] */;
  %765 = reshape(%764, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %766 = @func_931(%747, %748) /* ty=Tensor[(4, 13, 2), float64] */;
  %767 = bitwise_xor(%762, %763) /* ty=Tensor[(16, 5, 3), int8] */;
  %768 = @func_340(%765) /* ty=Tensor[(6, ?, 12), int32] */;
  (%766, %var_1657, %767, %768, %var_1691)
}

def @func_9123(%var_9119: Tensor[(12, 4, 4), float64], %var_9120: Tensor[(360), uint64], %var_9121: Tensor[(2080), int8], %var_9122: Tensor[(750), float64]) -> (Tensor[(50, 2), float32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(6, ?, 12), int32], Tensor[(72, 1), float64], Tensor[(12, 4, 4), float64], Tensor[(240), float32], Tensor[(189), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(72), float64], Tensor[(2080), int8], Tensor[(750), float64]) {
  @func_9117(%var_9119, %var_9120, %var_9121, %var_9122) /* ty=(Tensor[(50, 2), float32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(6, ?, 12), int32], Tensor[(72, 1), float64], Tensor[(12, 4, 4), float64], Tensor[(240), float32], Tensor[(189), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(72), float64], Tensor[(2080), int8], Tensor[(750), float64]) */
}

def @func_10857() -> (Tensor[(7, 4, 11), float64],) {
  %769 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 4, 11), float64] */;
  %770 = sqrt(%769) /* ty=Tensor[(7, 4, 11), float64] */;
  (%770,)
}

def @func_12370() -> Tensor[(7, 4, 11), float64] {
  %771 = @func_11682() /* ty=(Tensor[(7, 4, 11), float64],) */;
  %771.0
}

def @func_12204() -> (Tensor[(7, 4, 11), float64],) {
  %773 = fn () -> (Tensor[(7, 4, 11), float64],) {
    %772 = @func_11789() /* ty=Tensor[(7, 4, 11), float64] */;
    (%772,)
  };
  %773() /* ty=(Tensor[(7, 4, 11), float64],) */
}

def @func_11764(%var_11763: Tensor[(5, 84), bool]) -> (Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(1260), float64], Tensor[(72, 1), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(5, 84), bool]) {
  %790 = fn (%var_11758: Tensor[(5, 84), bool]) -> (Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(1260), float64], Tensor[(72, 1), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(5, 84), bool]) {
    %774 = @func_11138() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %775 = cast(meta[relay.Constant][60] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %776 = cast(meta[relay.Constant][61] /* ty=Tensor[(72, 1), float64] */, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
    %777 = reshape(%775, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %778 = reshape(%776, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %779 = @func_11467(%777, %778) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(72), int64]) */;
    %780 = cast(meta[relay.Constant][62] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %781 = cast(meta[relay.Constant][63] /* ty=Tensor[(225), uint16] */, dtype="uint16") /* ty=Tensor[(225), uint16] */;
    %782 = cast(%var_11758, dtype="bool") /* ty=Tensor[(5, 84), bool] */;
    %783 = reshape(%780, newshape=[]) /* ty=uint16 */;
    %784 = reshape(%781, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), uint16] */;
    %785 = reshape(%782, newshape=[420]) /* ty=Tensor[(420), bool] */;
    %786 = @func_2889(%783, %784, %785) /* ty=(Tensor[(15, 3, 5), uint16], Tensor[(2, 14, 15), float32]) */;
    %787 = %774.0;
    %788 = %779.1;
    %789 = %786.1;
    (%787, %788, meta[relay.Constant][60] /* ty=Tensor[(1260), float64] */, meta[relay.Constant][61] /* ty=Tensor[(72, 1), float64] */, %789, meta[relay.Constant][62] /* ty=uint16 */, meta[relay.Constant][63] /* ty=Tensor[(225), uint16] */, %var_11758)
  };
  %790(%var_11763) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(1260), float64], Tensor[(1260), float64], Tensor[(72, 1), float64], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(5, 84), bool]) */
}

def @func_11409(%var_11404: Tensor[(13, 15, 12), float64], %var_11405: Tensor[(13, 15, 12), float64], %var_11406: uint16, %var_11407: Tensor[(225), uint16], %var_11408: Tensor[(1, 420), bool]) -> (Tensor[(13, 15, 12), float32], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(1, 420), bool]) {
  @func_11402(%var_11404, %var_11405, %var_11406, %var_11407, %var_11408) /* ty=(Tensor[(13, 15, 12), float32], Tensor[(2, 14, 15), float32], uint16, Tensor[(225), uint16], Tensor[(1, 420), bool]) */
}

def @func_1702(%var_1699: Tensor[(16, 5, 3), float32], %var_1700: Tensor[(104), float64], %var_1701: Tensor[(72), float64]) -> (Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) {
  @func_1697(%var_1699, %var_1700, %var_1701) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */
}

def @func_4131(%var_4129: uint16, %var_4130: Tensor[(14, 8, 1), uint16]) -> (Tensor[(14, 8, 1), bool],) {
  %794 = fn (%var_4122: uint16, %var_4123: Tensor[(14, 8, 1), uint16]) -> (Tensor[(14, 8, 1), bool],) {
    %791 = cast(%var_4122, dtype="bool") /* ty=bool */;
    %792 = cast(%var_4123, dtype="bool") /* ty=Tensor[(14, 8, 1), bool] */;
    %793 = not_equal(%791, %792) /* ty=Tensor[(14, 8, 1), bool] */;
    (%793,)
  };
  %794(%var_4129, %var_4130) /* ty=(Tensor[(14, 8, 1), bool],) */
}

def @func_6043(%var_5994: Tensor[(10, 14, 10), int16], %var_6025: Tensor[(15), float32]) -> (Tensor[(10, 14, 10), int16], Tensor[(3, 5, 9), int16], Tensor[(15), float32], Tensor[(135), float32]) {
  %795 = cast(%var_5994, dtype="int16") /* ty=Tensor[(10, 14, 10), int16] */;
  %796 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(10, 14, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(meta[relay.Constant][64] /* ty=Tensor[(10, 14, 10), int16] */, dtype="int16") /* ty=Tensor[(10, 14, 10), int16] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %799 = multiply(%797, %798) /* ty=Tensor[(10, 14, 10), int16] */;
  %800 = cast(%799, dtype="int16") /* ty=Tensor[(10, 14, 10), int16] */;
  %801 = shape_of(%var_5994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%var_5994, dtype="int16") /* ty=Tensor[(10, 14, 10), int16] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %804 = cast(%var_6025, dtype="float32") /* ty=Tensor[(15), float32] */;
  %805 = cast(meta[relay.Constant][65] /* ty=Tensor[(135), float32] */, dtype="float32") /* ty=Tensor[(135), float32] */;
  %806 = reshape(%804, newshape=[3, 5, 1]) /* ty=Tensor[(3, 5, 1), float32] */;
  %807 = reshape(%805, newshape=[3, 5, 9]) /* ty=Tensor[(3, 5, 9), float32] */;
  %808 = right_shift(%802, %803) /* ty=Tensor[(10, 14, 10), int16] */;
  %809 = @func_5861(%806, %807) /* ty=Tensor[(3, 5, 9), int16] */;
  (%808, %809, %var_6025, meta[relay.Constant][65] /* ty=Tensor[(135), float32] */)
}

def @func_9117(%var_9081: Tensor[(12, 4, 4), float64], %var_9088: Tensor[(360), uint64], %var_9113: Tensor[(2080), int8], %var_9114: Tensor[(750), float64]) -> (Tensor[(50, 2), float32], Tensor[(15, 3), uint64], Tensor[(360), uint64], Tensor[(396), float64], Tensor[(6, ?, 12), int32], Tensor[(72, 1), float64], Tensor[(12, 4, 4), float64], Tensor[(240), float32], Tensor[(189), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(72), float64], Tensor[(2080), int8], Tensor[(750), float64]) {
  %810 = cast(meta[relay.Constant][66] /* ty=Tensor[(15, 3), uint64] */, dtype="uint64") /* ty=Tensor[(15, 3), uint64] */;
  %811 = cast(%var_9088, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %812 = cast(meta[relay.Constant][67] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %813 = reshape(%810, newshape=[45]) /* ty=Tensor[(45), uint64] */;
  %814 = reshape(%811, newshape=[360]) /* ty=Tensor[(360), uint64] */;
  %815 = reshape(%812, newshape=[396, 1]) /* ty=Tensor[(396, 1), float64] */;
  %816 = @func_6837(%813, %814, %815) /* ty=(Tensor[(2, 15, 8), uint8], Tensor[(50, 2), float32], float32, Tensor[(686), float32], Tensor[(7, 7, 14), float64], Tensor[(5, 9, 8), uint64], Tensor[(45), uint64], Tensor[(360), uint64], Tensor[(396, 1), float64]) */;
  %817 = cast(meta[relay.Constant][68] /* ty=Tensor[(72, 1), float64] */, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %818 = reshape(%817, newshape=[6, 1, 12]) /* ty=Tensor[(6, 1, 12), float64] */;
  %819 = cast(%var_9081, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %820 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(12, 4, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(meta[relay.Constant][69] /* ty=Tensor[(12, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %823 = divide(%821, %822) /* ty=Tensor[(12, 4, 4), float64] */;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(12, 4, 4), float64] */;
  %825 = cast(meta[relay.Constant][70] /* ty=Tensor[(189), float32] */, dtype="float32") /* ty=Tensor[(189), float32] */;
  %826 = cast(meta[relay.Constant][71] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %827 = reshape(%825, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), float32] */;
  %828 = reshape(%826, newshape=[288]) /* ty=Tensor[(288), uint32] */;
  %829 = @func_5170(%827, %828) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(240), float32], Tensor[(288), uint32], Tensor[(240), float32], Tensor[(7, 3, 9), float32], Tensor[(4, 13, 2), float64]) */;
  %830 = cast(meta[relay.Constant][71] /* ty=Tensor[(288), uint32] */, dtype="uint32") /* ty=Tensor[(288), uint32] */;
  %831 = %829.1;
  %832 = cast(%831, dtype="float32") /* ty=Tensor[(240), float32] */;
  %833 = reshape(%830, newshape=[9, 4, 8]) /* ty=Tensor[(9, 4, 8), uint32] */;
  %834 = reshape(%832, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %835 = @func_2236(%833, %834) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */;
  %836 = cast(%var_9113, dtype="int8") /* ty=Tensor[(2080), int8] */;
  %837 = cast(%var_9113, dtype="int8") /* ty=Tensor[(2080), int8] */;
  %838 = cast(%var_9114, dtype="float64") /* ty=Tensor[(750), float64] */;
  %839 = cast(meta[relay.Constant][68] /* ty=Tensor[(72, 1), float64] */, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %840 = reshape(%836, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int8] */;
  %841 = reshape(%837, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), int8] */;
  %842 = reshape(%838, newshape=[750]) /* ty=Tensor[(750), float64] */;
  %843 = reshape(%839, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %844 = @func_4735(%840, %841, %842, %843) /* ty=(Tensor[(13, 10, 16), bool], Tensor[(7, 11, 3), bool], Tensor[(750), float64], Tensor[(72), float64]) */;
  %845 = %816.1;
  %846 = @func_340(%818) /* ty=Tensor[(6, ?, 12), int32] */;
  %847 = sqrt(%824) /* ty=Tensor[(12, 4, 4), float64] */;
  %848 = %835.6;
  %849 = %844.3;
  (%845, meta[relay.Constant][66] /* ty=Tensor[(15, 3), uint64] */, %var_9088, meta[relay.Constant][67] /* ty=Tensor[(396), float64] */, %846, meta[relay.Constant][68] /* ty=Tensor[(72, 1), float64] */, %847, %831, meta[relay.Constant][70] /* ty=Tensor[(189), float32] */, meta[relay.Constant][71] /* ty=Tensor[(288), uint32] */, %848, %849, %var_9113, %var_9114)
}

def @func_9468(%var_9466: Tensor[(4, 7, 7), uint8], %var_9467: Tensor[(4, 7, 7), uint8]) -> (Tensor[(4, 7, 7), uint8], Tensor[(4, 7, 7), float64]) {
  %857 = fn (%var_9451: Tensor[(4, 7, 7), uint8], %var_9452: Tensor[(4, 7, 7), uint8]) -> (Tensor[(4, 7, 7), uint8], Tensor[(4, 7, 7), float64]) {
    %850 = cast(%var_9452, dtype="uint8") /* ty=Tensor[(4, 7, 7), uint8] */;
    %851 = shape_of(%var_9451, dtype="int32") /* ty=Tensor[(3), int32] */;
    %852 = cast(%var_9451, dtype="uint8") /* ty=Tensor[(4, 7, 7), uint8] */;
    %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %854 = cast(%var_9452, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
    %855 = bitwise_xor(%852, %853) /* ty=Tensor[(4, 7, 7), uint8] */;
    %856 = sinh(%854) /* ty=Tensor[(4, 7, 7), float64] */;
    (%855, %856)
  };
  %857(%var_9466, %var_9467) /* ty=(Tensor[(4, 7, 7), uint8], Tensor[(4, 7, 7), float64]) */
}

def @func_9432(%var_9416: Tensor[(9, 6, 11), float64]) -> Tensor[(9, 6, 11), float64] {
  %858 = cast(%var_9416, dtype="float64") /* ty=Tensor[(9, 6, 11), float64] */;
  log(%858) /* ty=Tensor[(9, 6, 11), float64] */
}

def @func_1017(%var_1014: Tensor[(1, 10, 10), float32], %var_1015: Tensor[(1, 104), float64], %var_1016: Tensor[(1, 72), float64]) -> (Tensor[(4, 13, 2), float64], Tensor[(1, 104), float64], Tensor[(?, 72), int64], Tensor[(6, ?, 12), int32], Tensor[(6, ?, 12), int32], Tensor[(?, 10, 10), bool]) {
  @func_1012(%var_1014, %var_1015, %var_1016) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(1, 104), float64], Tensor[(?, 72), int64], Tensor[(6, ?, 12), int32], Tensor[(6, ?, 12), int32], Tensor[(?, 10, 10), bool]) */
}

def @func_1940(%var_1936: Tensor[(8, 6, 14), int64], %var_1937: Tensor[(240), float32], %var_1938: Tensor[(104), float64], %var_1939: Tensor[(72, 1), float64]) -> (Tensor[(8, 6, 14), bool], Tensor[(6, ?, 12), int32], Tensor[(240), float32], Tensor[(104), float64], Tensor[(8, 6, 14), bool], Tensor[(72, 1), float64], Tensor[(?, 10, 10), bool], Tensor[(100), float32]) {
  %889 = fn (%var_1858: Tensor[(8, 6, 14), int64], %var_1869: Tensor[(240), float32], %var_1870: Tensor[(104), float64], %var_1871: Tensor[(72, 1), float64]) -> (Tensor[(8, 6, 14), bool], Tensor[(6, ?, 12), int32], Tensor[(240), float32], Tensor[(104), float64], Tensor[(8, 6, 14), bool], Tensor[(72, 1), float64], Tensor[(?, 10, 10), bool], Tensor[(100), float32]) {
    %859 = cast(meta[relay.Constant][72] /* ty=Tensor[(8, 6, 14), int64] */, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
    %860 = shape_of(%var_1858, dtype="int32") /* ty=Tensor[(3), int32] */;
    %861 = cast(%var_1858, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
    %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %863 = cast(%var_1869, dtype="float32") /* ty=Tensor[(240), float32] */;
    %864 = cast(%var_1870, dtype="float64") /* ty=Tensor[(104), float64] */;
    %865 = cast(%var_1871, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
    %866 = reshape(%863, newshape=[16, 5, 3]) /* ty=Tensor[(16, 5, 3), float32] */;
    %867 = reshape(%864, newshape=[104]) /* ty=Tensor[(104), float64] */;
    %868 = reshape(%865, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %869 = @func_1697(%866, %867, %868) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(104), float64], Tensor[(16, 5, 3), int8], Tensor[(6, ?, 12), int32], Tensor[(72), float64]) */;
    %870 = cast(meta[relay.Constant][72] /* ty=Tensor[(8, 6, 14), int64] */, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
    %871 = shape_of(%var_1858, dtype="int32") /* ty=Tensor[(3), int32] */;
    %872 = cast(%var_1858, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %874 = cast(%var_1871, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
    %875 = cosh(%874) /* ty=Tensor[(72, 1), float64] */;
    %876 = cast(%875, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
    %877 = cast(meta[relay.Constant][73] /* ty=Tensor[(100), float32] */, dtype="float32") /* ty=Tensor[(100), float32] */;
    %878 = cast(%var_1870, dtype="float64") /* ty=Tensor[(104), float64] */;
    %879 = cast(%875, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
    %880 = reshape(%877, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float32] */;
    %881 = reshape(%878, newshape=[1, 104]) /* ty=Tensor[(1, 104), float64] */;
    %882 = reshape(%879, newshape=[1, 72]) /* ty=Tensor[(1, 72), float64] */;
    %883 = @func_1012(%880, %881, %882) /* ty=(Tensor[(4, 13, 2), float64], Tensor[(1, 104), float64], Tensor[(?, 72), int64], Tensor[(6, ?, 12), int32], Tensor[(6, ?, 12), int32], Tensor[(?, 10, 10), bool]) */;
    %884 = less(%861, %862) /* ty=Tensor[(8, 6, 14), bool] */;
    %885 = %869.3;
    %886 = not_equal(%872, %873) /* ty=Tensor[(8, 6, 14), bool] */;
    %887 = sin(%876) /* ty=Tensor[(72, 1), float64] */;
    %888 = %883.5;
    (%884, %885, %var_1869, %var_1870, %886, %887, %888, meta[relay.Constant][73] /* ty=Tensor[(100), float32] */)
  };
  %889(%var_1936, %var_1937, %var_1938, %var_1939) /* ty=(Tensor[(8, 6, 14), bool], Tensor[(6, ?, 12), int32], Tensor[(240), float32], Tensor[(104), float64], Tensor[(8, 6, 14), bool], Tensor[(72, 1), float64], Tensor[(?, 10, 10), bool], Tensor[(100), float32]) */
}

def @func_10888(%var_10887: bool) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 14, 15), bool], bool) {
  %896 = fn (%var_10876: bool) -> (Tensor[(7, 4, 11), float64], Tensor[(2, 14, 15), bool], bool) {
    %890 = @func_10857() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %891 = cast(%var_10876, dtype="bool") /* ty=bool */;
    %892 = reshape(%891, newshape=[]) /* ty=bool */;
    %893 = @func_4049(%892) /* ty=(Tensor[(12, 15, 16), float32], Tensor[(2, 14, 15), bool], bool, Tensor[(420, 1), bool]) */;
    %894 = %890.0;
    %895 = %893.1;
    (%894, %895, %var_10876)
  };
  %896(%var_10887) /* ty=(Tensor[(7, 4, 11), float64], Tensor[(2, 14, 15), bool], bool) */
}

def @func_12005(%var_12002: uint16, %var_12003: Tensor[(384), float64], %var_12004: Tensor[(1260), float64]) -> (Tensor[(14, 7, 9), uint16], Tensor[(384), float64], Tensor[(1260), float64], Tensor[(72), float64], Tensor[(1260), bool]) {
  @func_12000(%var_12002, %var_12003, %var_12004) /* ty=(Tensor[(14, 7, 9), uint16], Tensor[(384), float64], Tensor[(1260), float64], Tensor[(72), float64], Tensor[(1260), bool]) */
}

def @func_2240(%var_2238: Tensor[(9, 4, 8), uint32], %var_2239: Tensor[(240), float32]) -> (Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) {
  @func_2236(%var_2238, %var_2239) /* ty=(Tensor[(9, 4, 8), bool], Tensor[(6, ?, 12), int32], Tensor[(6, 12), float64], Tensor[(6, ?, 12), int32], Tensor[(50, 2), float32], Tensor[(4, 13, 2), float64], Tensor[(240), float32], Tensor[(?, 104), bool]) */
}

def @func_11855() -> (Tensor[(7, 4, 11), float32],) {
  %900 = fn () -> (Tensor[(7, 4, 11), float32],) {
    %897 = @func_11012() /* ty=Tensor[(7, 4, 11), float64] */;
    %898 = cast(%897, dtype="float32") /* ty=Tensor[(7, 4, 11), float32] */;
    %899 = exp(%898) /* ty=Tensor[(7, 4, 11), float32] */;
    (%899,)
  };
  %900() /* ty=(Tensor[(7, 4, 11), float32],) */
}

def @func_9775(%var_9773: Tensor[(2, 13, 2), float32]) -> Tensor[(2, 13, 2), float32] {
  @func_9772(%var_9773) /* ty=Tensor[(2, 13, 2), float32] */
}

def @func_2513(%var_2511: bool, %var_2512: Tensor[(2, 14, 15), bool]) -> Tensor[(2, 14, 15), bool] {
  @func_2509(%var_2511, %var_2512) /* ty=Tensor[(2, 14, 15), bool] */
}

def @func_12252() -> (Tensor[(7, 4, 11), float64], Tensor[(13, 8, 12), float32], Tensor[(104), int8], Tensor[(2, 624), int8]) {
  %909 = fn () -> (Tensor[(7, 4, 11), float64], Tensor[(13, 8, 12), float32], Tensor[(104), int8], Tensor[(2, 624), int8]) {
    %901 = @func_12068() /* ty=(Tensor[(7, 4, 11), float64],) */;
    %902 = cast(meta[relay.Constant][74] /* ty=Tensor[(104), int8] */, dtype="int8") /* ty=Tensor[(104), int8] */;
    %903 = cast(meta[relay.Constant][75] /* ty=Tensor[(2, 624), int8] */, dtype="int8") /* ty=Tensor[(2, 624), int8] */;
    %904 = reshape(%902, newshape=[13, 8, 1]) /* ty=Tensor[(13, 8, 1), int8] */;
    %905 = reshape(%903, newshape=[13, 8, 12]) /* ty=Tensor[(13, 8, 12), int8] */;
    %906 = @func_11721(%904, %905) /* ty=(Tensor[(13, 8, 12), float32], Tensor[(13, 8, 12), uint8]) */;
    %907 = %901.0;
    %908 = %906.0;
    (%907, %908, meta[relay.Constant][74] /* ty=Tensor[(104), int8] */, meta[relay.Constant][75] /* ty=Tensor[(2, 624), int8] */)
  };
  %909() /* ty=(Tensor[(7, 4, 11), float64], Tensor[(13, 8, 12), float32], Tensor[(104), int8], Tensor[(2, 624), int8]) */
}

def @func_11014() -> Tensor[(7, 4, 11), float64] {
  @func_11012() /* ty=Tensor[(7, 4, 11), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_11108(%var_11084: Tensor[(5, 7, 4), uint32], %var_11085: Tensor[(5, 7, 4), uint32]) -> (Tensor[(5, 7, 4), float32],) {
  %0 = cast(%var_11085, dtype="uint32") /* ty=Tensor[(5, 7, 4), uint32] */;
  %1 = shape_of(%var_11084, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_11084, dtype="uint32") /* ty=Tensor[(5, 7, 4), uint32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %4 = bitwise_or(%2, %3) /* ty=Tensor[(5, 7, 4), uint32] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(5, 7, 4), float32] */;
  %6 = exp(%5) /* ty=Tensor[(5, 7, 4), float32] */;
  (%6,)
}

def @func_18892(%var_18856: Tensor[(3, 3, 5), float32], %var_18866: Tensor[(1, 1920), float32]) -> (Tensor[(3, 3, 5), float32], Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(1, 1920), float32], Tensor[(192), float32]) {
  %7 = cast(%var_18856, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
  %8 = @func_17388() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %9 = cast(%var_18866, dtype="float32") /* ty=Tensor[(1, 1920), float32] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %11 = reshape(%9, newshape=[8, 240]) /* ty=Tensor[(8, 240), float32] */;
  %12 = reshape(%10, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %13 = @func_16626(%11, %12) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(8, 240), float32], Tensor[(12, 6, 11), float64], Tensor[(4, 48), float32]) */;
  %14 = atan(%7) /* ty=Tensor[(3, 3, 5), float32] */;
  %15 = %8.0;
  %16 = %13.1;
  (%14, %15, %16, %var_18866, meta[relay.Constant][0] /* ty=Tensor[(192), float32] */)
}

def @func_13780() -> Tensor[(12, 6, 11), float64] {
  @func_13017() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_17345(%var_17340: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), uint16]) {
  %17 = @func_16288() /* ty=Tensor[(12, 6, 11), float64] */;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %19 = cast(%var_17340, dtype="uint16") /* ty=Tensor[(12, 6, 11), uint16] */;
  %20 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%17, dtype="uint16") /* ty=Tensor[(12, 6, 11), uint16] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %23 = rsqrt(%18) /* ty=Tensor[(12, 6, 11), float64] */;
  %24 = logical_xor(%21, %22) /* ty=Tensor[(12, 6, 11), uint16] */;
  (%23, %24)
}

def @func_19147(%var_19122: int32, %var_19123: Tensor[(1, 7, 9), int32]) -> (Tensor[(1, 7, 9), int32], Tensor[(12, 6, 11), float64]) {
  %25 = cast(%var_19122, dtype="int32") /* ty=int32 */;
  %26 = cast(%var_19123, dtype="int32") /* ty=Tensor[(1, 7, 9), int32] */;
  %27 = bitwise_or(%25, %26) /* ty=Tensor[(1, 7, 9), int32] */;
  %28 = @func_16695() /* ty=Tensor[(12, 6, 11), float64] */;
  (%27, %28)
}

def @func_14787(%var_14763: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32], Tensor[(12, 6, 11), float64]) {
  %29 = cast(%var_14763, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %30 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %31 = cosh(%29) /* ty=Tensor[(12, 16, 12), float32] */;
  %32 = %30.0;
  (%31, %32)
}

def @func_3544(%var_3512: uint8, %var_3513: Tensor[(11, 1, 7), uint8]) -> (Tensor[(11, 1, 7), bool], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  %33 = cast(%var_3512, dtype="bool") /* ty=bool */;
  %34 = cast(%var_3513, dtype="bool") /* ty=Tensor[(11, 1, 7), bool] */;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %37 = reshape(%35, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %38 = reshape(%36, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %39 = @func_1283(%37, %38) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %40 = less(%33, %34) /* ty=Tensor[(11, 1, 7), bool] */;
  %41 = %39.0;
  (%40, %41, meta[relay.Constant][1] /* ty=Tensor[(630), int8] */)
}

def @func_7809(%var_7788: Tensor[(7, 13, 3), float64]) -> (Tensor[(7, 13, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) {
  %42 = cast(%var_7788, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %44 = reshape(%43, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
  %45 = sin(%42) /* ty=Tensor[(7, 13, 3), float64] */;
  %46 = @func_4654(%44) /* ty=Tensor[(?, 11, 6), uint64] */;
  (%45, %46, meta[relay.Constant][2] /* ty=Tensor[(66), float32] */)
}

def @func_13081(%var_13025: Tensor[(13, 5, 15), float32]) -> (Tensor[(13, 5, 15), uint8], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(14, 3, 14), float64]) {
  %47 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %48 = %47.1;
  %49 = cast(%var_13025, dtype="uint8") /* ty=Tensor[(13, 5, 15), uint8] */;
  %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%48, dtype="uint8") /* ty=Tensor[(13, 5, 15), uint8] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(1920, 1), float32] */, dtype="float32") /* ty=Tensor[(1920, 1), float32] */;
  %54 = reshape(%53, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
  %55 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %56 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%48, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %59 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(588), uint16] */, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %61 = cast(meta[relay.Constant][5] /* ty=Tensor[(588), uint16] */, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %62 = reshape(%60, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), uint16] */;
  %63 = reshape(%61, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), uint16] */;
  %64 = @func_5414(%62, %63) /* ty=Tensor[(14, 3, 14), uint16] */;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(14, 3, 14), float64] */;
  %66 = add(%51, %52) /* ty=Tensor[(13, 5, 15), uint8] */;
  %67 = @func_5735(%54) /* ty=Tensor[(8, 16, 15), float64] */;
  %68 = power(%57, %58) /* ty=Tensor[(13, 5, 15), float32] */;
  %69 = rsqrt(%59) /* ty=Tensor[(13, 5, 15), float32] */;
  %70 = log(%65) /* ty=Tensor[(14, 3, 14), float64] */;
  (%66, %67, meta[relay.Constant][3] /* ty=Tensor[(1920, 1), float32] */, %68, %69, meta[relay.Constant][5] /* ty=Tensor[(588), uint16] */, %70)
}

def @func_18148() -> Tensor[(12, 6, 11), float64] {
  @func_16552() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_17914() -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) {
  %71 = @func_15088() /* ty=Tensor[(13, 5, 15), float32] */;
  %72 = cast(%71, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %73 = @func_15684() /* ty=Tensor[(13, 5, 15), float32] */;
  %74 = tan(%72) /* ty=Tensor[(13, 5, 15), float32] */;
  (%73, %74)
}

def @func_14990() -> (Tensor[(975), float32],) {
  %75 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %76 = %75.0;
  (%76,)
}

def @func_16502() -> (Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) {
  %77 = @func_15775() /* ty=(Tensor[(975), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32]) */;
  %78 = %77.2;
  %79 = @func_15908() /* ty=Tensor[(12, 6, 11), float64] */;
  (%78, %79)
}

def @func_15088() -> Tensor[(13, 5, 15), float32] {
  %80 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %80.3
}

def @func_14375(%var_14362: Tensor[(11, 13, 14), float32]) -> Tensor[(11, 13, 14), float32] {
  %81 = cast(%var_14362, dtype="float32") /* ty=Tensor[(11, 13, 14), float32] */;
  cosh(%81) /* ty=Tensor[(11, 13, 14), float32] */
}

def @func_18716(%var_18714: Tensor[(80, 2), int16]) -> (Tensor[(13, 5, 15), float32], Tensor[(5, 8, 4), int16], Tensor[(80, 2), int16]) {
  %82 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %83 = cast(%var_18714, dtype="int16") /* ty=Tensor[(80, 2), int16] */;
  %84 = reshape(%83, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int16] */;
  %85 = %82.0;
  %86 = @func_4470(%84) /* ty=Tensor[(5, 8, 4), int16] */;
  (%85, %86, %var_18714)
}

def @func_15754() -> (Tensor[(13, 5, 15), float32],) {
  %87 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %88 = %87.0;
  (%88,)
}

def @func_4470(%var_4458: Tensor[(5, 8, 4), int16]) -> Tensor[(5, 8, 4), int16] {
  %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 8, 4), int16] */, dtype="int16") /* ty=Tensor[(5, 8, 4), int16] */;
  %90 = shape_of(%var_4458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%var_4458, dtype="int16") /* ty=Tensor[(5, 8, 4), int16] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%91, %92) /* ty=Tensor[(5, 8, 4), int16] */
}

def @func_16719() -> Tensor[(13, 5, 15), float32] {
  %93 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %93.0
}

def @func_16667() -> (Tensor[(6, 15, 4), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  %94 = @func_16173() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %95 = cast(meta[relay.Constant][7] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %96 = cast(meta[relay.Constant][7] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %97 = reshape(%95, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %98 = reshape(%96, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %99 = @func_1283(%97, %98) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %100 = %94.0;
  %101 = %99.0;
  (%100, %101, meta[relay.Constant][7] /* ty=Tensor[(630), int8] */)
}

def @func_19363() -> Tensor[(13, 5, 15), float32] {
  @func_18119() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_15020(%var_15015: Tensor[(8), int64]) -> (Tensor[(12, 6, 11), float64], Tensor[(4, 13, 2), bool], Tensor[(8), int64]) {
  %102 = cast(%var_15015, dtype="int64") /* ty=Tensor[(8), int64] */;
  %103 = reshape(%102, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), int64] */;
  %104 = @func_7327(%103) /* ty=(Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) */;
  %105 = @func_14855() /* ty=Tensor[(12, 6, 11), float64] */;
  %106 = %104.0;
  (%105, %106, %var_15015)
}

def @func_16460() -> Tensor[(13, 5, 15), float32] {
  @func_16452() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_15203(%var_15181: Tensor[(84), int8], %var_15182: Tensor[(168), int8], %var_15195: Tensor[(192), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8], Tensor[(768), int8], Tensor[(192), float32]) {
  %107 = cast(%var_15181, dtype="int8") /* ty=Tensor[(84), int8] */;
  %108 = cast(%var_15182, dtype="int8") /* ty=Tensor[(168), int8] */;
  %109 = reshape(%107, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %110 = reshape(%108, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
  %111 = cast(%var_15195, dtype="float32") /* ty=Tensor[(192), float32] */;
  %112 = reshape(%111, newshape=[96, 2]) /* ty=Tensor[(96, 2), float32] */;
  %113 = @func_14506(%112) /* ty=(Tensor[(15, 4, 16), float64], Tensor[(768), int8], Tensor[(975), float32], Tensor[(96, 2), float64]) */;
  %114 = @func_15088() /* ty=Tensor[(13, 5, 15), float32] */;
  %115 = @func_4833(%109, %110) /* ty=Tensor[(2, 6, 14), int8] */;
  %116 = %113.1;
  (%114, %115, %var_15181, %var_15182, %116, %var_15195)
}

def @func_17449() -> (Tensor[(1440), int8],) {
  %117 = @func_16743() /* ty=(Tensor[(630), int8], Tensor[(1440), int8], Tensor[(720), int64]) */;
  %118 = %117.1;
  (%118,)
}

def @func_17686() -> Tensor[(12, 6, 11), float64] {
  @func_17071() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_19240(%var_19195: Tensor[(169, 10), float32], %var_19234: Tensor[(480), uint64], %var_19236: Tensor[(8), int64]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(14, 8, 3), float64], Tensor[(9, 7, 10), int8], Tensor[(169, 10), float32], Tensor[(169, 10), float32], Tensor[(168, 2), float64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 6, 11), float64], Tensor[(1440), int8], Tensor[(15, 2, 16), bool], Tensor[(480), uint64], Tensor[(22), bool], Tensor[(8), int64], Tensor[(6, 15, 4), float32]) {
  %119 = @func_17388() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %120 = cast(meta[relay.Constant][8] /* ty=Tensor[(168, 2), uint8] */, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %121 = cast(meta[relay.Constant][8] /* ty=Tensor[(168, 2), uint8] */, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %122 = reshape(%120, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
  %123 = reshape(%121, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
  %124 = @func_6191(%122, %123) /* ty=(Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) */;
  %125 = @func_17870() /* ty=(Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) */;
  %126 = cast(%var_19195, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
  %127 = reshape(%126, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
  %128 = @func_15510(%127) /* ty=(Tensor[(975), float32], Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(169, 10), float32]) */;
  %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(168, 2), uint8] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
  %130 = cast(meta[relay.Constant][9] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %131 = cast(meta[relay.Constant][10] /* ty=Tensor[(77), uint8] */, dtype="uint8") /* ty=Tensor[(77), uint8] */;
  %132 = reshape(%130, newshape=[]) /* ty=uint8 */;
  %133 = reshape(%131, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), uint8] */;
  %134 = @func_3544(%132, %133) /* ty=(Tensor[(11, 1, 7), bool], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %135 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %136 = @func_17449() /* ty=(Tensor[(1440), int8],) */;
  %137 = cast(%var_19234, dtype="uint64") /* ty=Tensor[(480), uint64] */;
  %138 = cast(meta[relay.Constant][9] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(22), bool] */, dtype="bool") /* ty=Tensor[(22), bool] */;
  %140 = cast(%var_19236, dtype="int64") /* ty=Tensor[(8), int64] */;
  %141 = reshape(%137, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint64] */;
  %142 = reshape(%138, newshape=[]) /* ty=bool */;
  %143 = reshape(%139, newshape=[22]) /* ty=Tensor[(22), bool] */;
  %144 = reshape(%140, newshape=[8]) /* ty=Tensor[(8), int64] */;
  %145 = @func_8857(%141, %142, %143, %144) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(8, 16, 15), float64], Tensor[(1920), float32], Tensor[(2, 11, 1), bool], bool, Tensor[(22), bool], Tensor[(10, 63), int8], Tensor[(8), int64]) */;
  %146 = @func_16173() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %147 = %119.0;
  %148 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
  %149 = @func_14855() /* ty=Tensor[(12, 6, 11), float64] */;
  %150 = %124.1;
  %151 = %125.0;
  %152 = %128.3;
  %153 = asin(%129) /* ty=Tensor[(168, 2), float64] */;
  %154 = %134.1;
  %155 = %135.0;
  %156 = %136.0;
  %157 = %145.0;
  %158 = %146.0;
  (%147, %148, %149, %150, %151, %152, %var_19195, %153, %154, meta[relay.Constant][9] /* ty=uint8 */, meta[relay.Constant][10] /* ty=Tensor[(77), uint8] */, %155, %156, %157, %var_19234, meta[relay.Constant][11] /* ty=Tensor[(22), bool] */, %var_19236, %158)
}

def @func_13624() -> (Tensor[(13, 5, 15), float32],) {
  %159 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %160 = %159.1;
  (%160,)
}

def @func_14341() -> (Tensor[(546), int64], Tensor[(7, 16, 3), bool], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(14, 8, 3), uint8], Tensor[(12, 6, 11), float64]) {
  %161 = @func_14061() /* ty=(Tensor[(15, 4, 16), float64], Tensor[(1690), float32], Tensor[(7, 6, 13), int64], Tensor[(546), int64], Tensor[(12, 6, 11), float64], Tensor[(16, 12, 6), bool], Tensor[(1152), int32], Tensor[(168), int8], Tensor[(8, 16, 15), float64]) */;
  %162 = cast(meta[relay.Constant][12] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %163 = cast(meta[relay.Constant][12] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %164 = cast(meta[relay.Constant][13] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %165 = reshape(%162, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int16] */;
  %166 = reshape(%163, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int16] */;
  %167 = reshape(%164, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %168 = @func_10565(%165, %166, %167) /* ty=(Tensor[(7, 16, 3), int16], Tensor[(7, 16, 3), bool], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(7, 16, 3), float32]) */;
  %169 = %168.1;
  %170 = cast(%169, dtype="uint8") /* ty=Tensor[(7, 16, 3), uint8] */;
  %171 = cast(meta[relay.Constant][12] /* ty=Tensor[(336), int16] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %172 = reshape(%170, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
  %173 = reshape(%171, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
  %174 = @func_6191(%172, %173) /* ty=(Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) */;
  %175 = %161.3;
  %176 = %174.0;
  %177 = @func_13780() /* ty=Tensor[(12, 6, 11), float64] */;
  (%175, %169, meta[relay.Constant][12] /* ty=Tensor[(336), int16] */, meta[relay.Constant][13] /* ty=Tensor[(400), uint8] */, %176, %177)
}

def @func_18368() -> (Tensor[(630), int8],) {
  %178 = @func_16743() /* ty=(Tensor[(630), int8], Tensor[(1440), int8], Tensor[(720), int64]) */;
  %179 = %178.0;
  (%179,)
}

def @func_18615() -> (Tensor[(1440), int8], Tensor[(6, 15, 4), float32]) {
  %180 = @func_17449() /* ty=(Tensor[(1440), int8],) */;
  %181 = @func_16173() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %182 = %180.0;
  %183 = %181.0;
  (%182, %183)
}

def @func_19423() -> (Tensor[(13, 5, 15), float64], Tensor[(12, 6, 11), float64]) {
  %184 = @func_19007() /* ty=(Tensor[(13, 5, 15), float64],) */;
  %185 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %186 = %184.0;
  %187 = %185.0;
  (%186, %187)
}

def @func_13470(%var_13424: Tensor[(280), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) {
  %188 = cast(%var_13424, dtype="float64") /* ty=Tensor[(280), float64] */;
  %189 = cast(%var_13424, dtype="float64") /* ty=Tensor[(280), float64] */;
  %190 = cast(meta[relay.Constant][14] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %191 = reshape(%188, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %192 = reshape(%189, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %193 = reshape(%190, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %194 = @func_2670(%191, %192, %193) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %195 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
  %196 = %194.3;
  (%195, %196, %var_13424, meta[relay.Constant][14] /* ty=Tensor[(400), uint8] */)
}

def @func_18492() -> Tensor[(13, 5, 15), float64] {
  %197 = @func_17365() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %198 = %197.0;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(13, 5, 15), float64] */;
  sigmoid(%199) /* ty=Tensor[(13, 5, 15), float64] */
}

def @func_8750(%var_8721: Tensor[(16, 12, 6), int32], %var_8722: Tensor[(16, 12, 6), int32], %var_8742: Tensor[(168), int8]) -> (Tensor[(16, 12, 6), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) {
  %200 = cast(%var_8722, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %201 = shape_of(%var_8721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%var_8721, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %204 = cast(meta[relay.Constant][15] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %205 = cast(%var_8742, dtype="int8") /* ty=Tensor[(168), int8] */;
  %206 = reshape(%204, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %207 = reshape(%205, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
  %208 = less(%202, %203) /* ty=Tensor[(16, 12, 6), bool] */;
  %209 = @func_4833(%206, %207) /* ty=Tensor[(2, 6, 14), int8] */;
  (%208, %209, meta[relay.Constant][15] /* ty=Tensor[(84), int8] */, %var_8742)
}

def @func_18925(%var_18906: Tensor[(768), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(13, 5, 15), float32]) {
  %210 = cast(%var_18906, dtype="int8") /* ty=Tensor[(768), int8] */;
  %211 = @func_16711() /* ty=Tensor[(13, 5, 15), float32] */;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %213 = reshape(%210, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), int8] */;
  %214 = reshape(%212, newshape=[975, 1]) /* ty=Tensor[(975, 1), float32] */;
  %215 = @func_2034(%213, %214) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */;
  %216 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %217 = %215.1;
  %218 = %216.0;
  (%211, %217, %var_18906, %218)
}

def @func_15287(%var_15267: Tensor[(169, 10), float32], %var_15272: Tensor[(169, 10), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(8, 16, 15), float64], Tensor[(169, 10), uint64], Tensor[(169, 10), float32]) {
  %219 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %220 = cast(meta[relay.Constant][16] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %221 = cast(meta[relay.Constant][17] /* ty=Tensor[(720), int64] */, dtype="int64") /* ty=Tensor[(720), int64] */;
  %222 = cast(meta[relay.Constant][18] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %223 = reshape(%220, newshape=[12, 10, 1]) /* ty=Tensor[(12, 10, 1), int64] */;
  %224 = reshape(%221, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), int64] */;
  %225 = reshape(%222, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %226 = @func_5136(%223, %224, %225) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */;
  %227 = cast(%var_15267, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
  %228 = reshape(%227, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %229 = @func_9294(%228) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */;
  %230 = cast(%var_15272, dtype="uint64") /* ty=Tensor[(169, 10), uint64] */;
  %231 = shape_of(%var_15267, dtype="int32") /* ty=Tensor[(2), int32] */;
  %232 = cast(%var_15267, dtype="uint64") /* ty=Tensor[(169, 10), uint64] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %234 = cast(%var_15272, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
  %235 = %219.0;
  %236 = %226.0;
  %237 = %229.1;
  %238 = right_shift(%232, %233) /* ty=Tensor[(169, 10), uint64] */;
  %239 = acos(%234) /* ty=Tensor[(169, 10), float32] */;
  (%235, %236, meta[relay.Constant][16] /* ty=Tensor[(120), int64] */, meta[relay.Constant][17] /* ty=Tensor[(720), int64] */, meta[relay.Constant][18] /* ty=Tensor[(1440), int8] */, %237, %238, %239)
}

def @func_19882() -> (Tensor[(12, 6, 11), float64],) {
  %240 = @func_16288() /* ty=Tensor[(12, 6, 11), float64] */;
  (%240,)
}

def @main(%var_20123: Tensor[(5, 6, 7), float64], %var_20124: Tensor[(5, 6, 7), float64]) -> Tensor[(5, 6, 7), bool] {
  %241 = cast(%var_20124, dtype="bool") /* ty=Tensor[(5, 6, 7), bool] */;
  %242 = shape_of(%var_20123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%var_20123, dtype="bool") /* ty=Tensor[(5, 6, 7), bool] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%243, %244) /* ty=Tensor[(5, 6, 7), bool] */
}

def @func_16173() -> (Tensor[(6, 15, 4), float32],) {
  %245 = @func_14560() /* ty=Tensor[(6, 15, 4), float32] */;
  (%245,)
}

def @func_15463() -> (Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
  %246 = @func_15123() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) */;
  %247 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %248 = %246.0;
  %249 = %247.0;
  (%248, %249)
}

def @func_14723(%var_14706: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), uint16], Tensor[(10, 5, 8), uint8], Tensor[(180, 1), uint8], Tensor[(280), float64]) {
  %250 = @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %251 = %250.0;
  %252 = cast(%var_14706, dtype="uint16") /* ty=Tensor[(12, 6, 11), uint16] */;
  %253 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%251, dtype="uint16") /* ty=Tensor[(12, 6, 11), uint16] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %256 = cast(meta[relay.Constant][19] /* ty=Tensor[(180, 1), uint8] */, dtype="uint8") /* ty=Tensor[(180, 1), uint8] */;
  %257 = cast(meta[relay.Constant][20] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %258 = reshape(%256, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), uint8] */;
  %259 = reshape(%257, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %260 = @func_7592(%258, %259) /* ty=(Tensor[(2, 9, 10), uint8], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(630), int8], Tensor[(280), float64]) */;
  %261 = minimum(%254, %255) /* ty=Tensor[(12, 6, 11), uint16] */;
  %262 = %260.1;
  (%261, %262, meta[relay.Constant][19] /* ty=Tensor[(180, 1), uint8] */, meta[relay.Constant][20] /* ty=Tensor[(280), float64] */)
}

def @func_17509() -> Tensor[(12, 6, 11), float64] {
  @func_17071() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_9294(%var_9242: Tensor[(13, 13, 10), float32]) -> (Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) {
  %263 = cast(%var_9242, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %264 = cast(meta[relay.Constant][21] /* ty=Tensor[(1920, 1), float32] */, dtype="float32") /* ty=Tensor[(1920, 1), float32] */;
  %265 = reshape(%264, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
  %266 = atanh(%263) /* ty=Tensor[(13, 13, 10), float32] */;
  %267 = @func_5735(%265) /* ty=Tensor[(8, 16, 15), float64] */;
  (%266, %267, meta[relay.Constant][21] /* ty=Tensor[(1920, 1), float32] */)
}

def @func_1128(%var_1123: Tensor[(10, 5, 8), uint8]) -> Tensor[(10, 5, 8), uint8] {
  %268 = cast(%var_1123, dtype="uint8") /* ty=Tensor[(10, 5, 8), uint8] */;
  %269 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(10, 5, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 5, 8), uint8] */, dtype="uint8") /* ty=Tensor[(10, 5, 8), uint8] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%270, %271) /* ty=Tensor[(10, 5, 8), uint8] */
}

def @func_10673(%var_10668: Tensor[(7, 6, 13), int64], %var_10669: Tensor[(7, 6, 13), int64]) -> (Tensor[(7, 6, 13), int64],) {
  %272 = cast(%var_10669, dtype="int64") /* ty=Tensor[(7, 6, 13), int64] */;
  %273 = shape_of(%var_10668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%var_10668, dtype="int64") /* ty=Tensor[(7, 6, 13), int64] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %276 = right_shift(%274, %275) /* ty=Tensor[(7, 6, 13), int64] */;
  (%276,)
}

def @func_18664() -> (Tensor[(13, 5, 15), float32], Tensor[(1690), float32], Tensor[(1690), float32], Tensor[(6, 8, 15), int16], Tensor[(720), int16]) {
  %277 = cast(meta[relay.Constant][23] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %278 = reshape(%277, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %279 = @func_18356(%278) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 13, 10), float32], Tensor[(1690), float32]) */;
  %280 = cast(meta[relay.Constant][24] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %281 = cast(meta[relay.Constant][24] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %282 = reshape(%280, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), int16] */;
  %283 = reshape(%281, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), int16] */;
  %284 = @func_17712(%282, %283) /* ty=(Tensor[(6, 8, 15), int16], Tensor[(13, 5, 15), float32]) */;
  %285 = @func_16711() /* ty=Tensor[(13, 5, 15), float32] */;
  %286 = %279.2;
  %287 = %284.0;
  (%285, %286, meta[relay.Constant][23] /* ty=Tensor[(1690), float32] */, %287, meta[relay.Constant][24] /* ty=Tensor[(720), int16] */)
}

def @func_16552() -> Tensor[(12, 6, 11), float64] {
  %288 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %288.0
}

def @func_17388() -> (Tensor[(13, 5, 15), float32],) {
  %289 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %290 = %289.0;
  (%290,)
}

def @func_19844() -> Tensor[(6, 15, 4), float32] {
  %291 = @func_17313() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) */;
  %291.2
}

def @func_16626(%var_16599: Tensor[(8, 240), float32], %var_16608: Tensor[(4, 48), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(8, 240), float32], Tensor[(12, 6, 11), float64], Tensor[(4, 48), float32]) {
  %292 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %293 = cast(%var_16599, dtype="float32") /* ty=Tensor[(8, 240), float32] */;
  %294 = reshape(%293, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
  %295 = cast(%var_16608, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %296 = %292.0;
  %297 = cast(%296, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %298 = reshape(%295, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %299 = reshape(%297, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %300 = @func_16383(%298, %299) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(3, 16, 4), float32], Tensor[(192), float32], Tensor[(975), float32]) */;
  %301 = @func_5735(%294) /* ty=Tensor[(8, 16, 15), float64] */;
  %302 = %300.0;
  (%296, %301, %var_16599, %302, %var_16608)
}

def @func_15908() -> Tensor[(12, 6, 11), float64] {
  @func_13017() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_13749() -> Tensor[(15, 4, 16), float64] {
  %303 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 4, 16), float64] */;
  %304 = atanh(%303) /* ty=Tensor[(15, 4, 16), float64] */;
  %305 = cast(%304, dtype="float64") /* ty=Tensor[(15, 4, 16), float64] */;
  sinh(%305) /* ty=Tensor[(15, 4, 16), float64] */
}

def @func_5414(%var_5407: Tensor[(14, 3, 14), uint16], %var_5408: Tensor[(14, 3, 14), uint16]) -> Tensor[(14, 3, 14), uint16] {
  %306 = cast(%var_5408, dtype="uint16") /* ty=Tensor[(14, 3, 14), uint16] */;
  %307 = shape_of(%var_5407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_5407, dtype="uint16") /* ty=Tensor[(14, 3, 14), uint16] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  maximum(%308, %309) /* ty=Tensor[(14, 3, 14), uint16] */
}

def @func_13360() -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
  %310 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %311 = cast(meta[relay.Constant][26] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %312 = reshape(%311, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %313 = @func_13081(%312) /* ty=(Tensor[(13, 5, 15), uint8], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(14, 3, 14), float64]) */;
  %314 = %310.0;
  %315 = %313.4;
  (%314, %315, meta[relay.Constant][26] /* ty=Tensor[(975), float32] */)
}

def @func_18434() -> (Tensor[(12, 6, 11), float64],) {
  %316 = @func_17870() /* ty=(Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) */;
  %317 = %316.1;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %319 = atanh(%318) /* ty=Tensor[(12, 6, 11), float64] */;
  (%319,)
}

def @func_15045() -> (Tensor[(12, 6, 11), float64],) {
  %320 = @func_13780() /* ty=Tensor[(12, 6, 11), float64] */;
  (%320,)
}

def @func_16895() -> (Tensor[(975), float32], Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) {
  %321 = @func_14990() /* ty=(Tensor[(975), float32],) */;
  %322 = %321.0;
  %323 = cast(%322, dtype="float32") /* ty=Tensor[(975), float32] */;
  %324 = reshape(%323, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %325 = @func_13081(%324) /* ty=(Tensor[(13, 5, 15), uint8], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(14, 3, 14), float64]) */;
  %326 = @func_16552() /* ty=Tensor[(12, 6, 11), float64] */;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %328 = %325.4;
  %329 = sinh(%327) /* ty=Tensor[(12, 6, 11), float64] */;
  (%322, %328, %329)
}

def @func_16123() -> Tensor[(12, 6, 11), float64] {
  @func_13017() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_15696() -> Tensor[(975), float32] {
  %330 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %330.2
}

def @func_19797() -> Tensor[(12, 6, 11), float64] {
  @func_16695() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_14926(%var_14901: Tensor[(1152), float64], %var_14916: Tensor[(768), int8], %var_14917: Tensor[(975), float32], %var_14923: Tensor[(4, 48), float32]) -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(5, 6, 1), float32], Tensor[(96, 20), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(975), float32], Tensor[(975), float32], Tensor[(4, 48), float32]) {
  %331 = cast(%var_14901, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %332 = cast(%var_14901, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %333 = reshape(%331, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %334 = reshape(%332, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %335 = @func_10161(%333, %334) /* ty=(Tensor[(6, 12, 16), float64],) */;
  %336 = cast(meta[relay.Constant][27] /* ty=Tensor[(96, 20), float32] */, dtype="float32") /* ty=Tensor[(96, 20), float32] */;
  %337 = reshape(%336, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %338 = @func_8904(%337) /* ty=(Tensor[(5, 6, 1), float32], Tensor[(8, 16, 15), float64], Tensor[(1920), float32]) */;
  %339 = cast(%var_14916, dtype="int8") /* ty=Tensor[(768), int8] */;
  %340 = cast(%var_14917, dtype="float32") /* ty=Tensor[(975), float32] */;
  %341 = reshape(%339, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), int8] */;
  %342 = reshape(%340, newshape=[975, 1]) /* ty=Tensor[(975, 1), float32] */;
  %343 = @func_2034(%341, %342) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */;
  %344 = cast(%var_14923, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %345 = %343.1;
  %346 = cast(%345, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %347 = reshape(%344, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
  %348 = reshape(%346, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %349 = @func_2115(%347, %348) /* ty=(Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) */;
  %350 = @func_13780() /* ty=Tensor[(12, 6, 11), float64] */;
  %351 = @func_14400() /* ty=Tensor[(12, 6, 11), float64] */;
  %352 = %335.0;
  %353 = %338.0;
  %354 = %349.3;
  (%350, %351, %352, %var_14901, %353, meta[relay.Constant][27] /* ty=Tensor[(96, 20), float32] */, %345, %var_14916, %var_14917, %354, %var_14923)
}

def @func_13940(%var_13925: Tensor[(16, 16, 15), float32]) -> Tensor[(16, 16, 15), float32] {
  %355 = cast(%var_13925, dtype="float32") /* ty=Tensor[(16, 16, 15), float32] */;
  atanh(%355) /* ty=Tensor[(16, 16, 15), float32] */
}

def @func_14151() -> (Tensor[(12, 6, 11), float64],) {
  %356 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
  (%356,)
}

def @func_16743() -> (Tensor[(630), int8], Tensor[(1440), int8], Tensor[(720), int64]) {
  %357 = @func_16667() /* ty=(Tensor[(6, 15, 4), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %358 = cast(meta[relay.Constant][28] /* ty=Tensor[(720), int64] */, dtype="int64") /* ty=Tensor[(720), int64] */;
  %359 = reshape(%358, newshape=[720, 1]) /* ty=Tensor[(720, 1), int64] */;
  %360 = @func_13527(%359) /* ty=(Tensor[(975), float32], Tensor[(4, 13, 2), bool], Tensor[(8, 1), int64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720, 1), int64], Tensor[(1440), int8]) */;
  %361 = %357.2;
  %362 = %360.9;
  (%361, %362, meta[relay.Constant][28] /* ty=Tensor[(720), int64] */)
}

def @func_15471() -> Tensor[(13, 5, 15), float32] {
  %363 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %363.0
}

def @func_4654(%var_4643: Tensor[(1, 11, 6), float32]) -> Tensor[(?, 11, 6), uint64] {
  %364 = cast(%var_4643, dtype="float32") /* ty=Tensor[(1, 11, 6), float32] */;
  %365 = acosh(%364) /* ty=Tensor[(1, 11, 6), float32] */;
  %366 = cast(%365, dtype="uint64") /* ty=Tensor[(1, 11, 6), uint64] */;
  %367 = shape_of(%var_4643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%var_4643, dtype="uint64") /* ty=Tensor[(1, 11, 6), uint64] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  minimum(%368, %369) /* ty=Tensor[(?, 11, 6), uint64] */
}

def @func_19746() -> Tensor[(12, 6, 11), float64] {
  %370 = @func_19423() /* ty=(Tensor[(13, 5, 15), float64], Tensor[(12, 6, 11), float64]) */;
  %370.1
}

def @func_15832(%var_15790: Tensor[(2, 14, 10), float32], %var_15791: Tensor[(2, 14, 10), float32], %var_15828: Tensor[(96, 2), float32]) -> (Tensor[(2, 14, 10), float32], Tensor[(13, 5, 15), float32], Tensor[(3, 5, 13), float32], Tensor[(195), float32], Tensor[(6, 12, 16), float64], Tensor[(96, 12), float64], Tensor[(768), int8], Tensor[(96, 2), float32]) {
  %371 = cast(%var_15791, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %372 = shape_of(%var_15790, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%var_15790, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %376 = cast(meta[relay.Constant][29] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
  %377 = reshape(%376, newshape=[3, 5, 13]) /* ty=Tensor[(3, 5, 13), float32] */;
  %378 = @func_15241(%377) /* ty=(Tensor[(3, 5, 13), float32],) */;
  %379 = cast(meta[relay.Constant][30] /* ty=Tensor[(96, 12), float64] */, dtype="float64") /* ty=Tensor[(96, 12), float64] */;
  %380 = cast(meta[relay.Constant][31] /* ty=Tensor[(768), int8] */, dtype="int8") /* ty=Tensor[(768), int8] */;
  %381 = %375.1;
  %382 = cast(%381, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %383 = cast(%var_15828, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %384 = reshape(%379, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
  %385 = reshape(%380, newshape=[768]) /* ty=Tensor[(768), int8] */;
  %386 = reshape(%382, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %387 = reshape(%383, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %388 = @func_14926(%384, %385, %386, %387) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(5, 6, 1), float32], Tensor[(96, 20), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(975), float32], Tensor[(975), float32], Tensor[(4, 48), float32]) */;
  %389 = power(%373, %374) /* ty=Tensor[(2, 14, 10), float32] */;
  %390 = %378.0;
  %391 = %388.2;
  (%389, %381, %390, meta[relay.Constant][29] /* ty=Tensor[(195), float32] */, %391, meta[relay.Constant][30] /* ty=Tensor[(96, 12), float64] */, meta[relay.Constant][31] /* ty=Tensor[(768), int8] */, %var_15828)
}

def @func_13718(%var_13664: Tensor[(975), float32], %var_13685: Tensor[(400), uint8], %var_13701: Tensor[(66), float32]) -> (Tensor[(975), int8], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(7, 16, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) {
  %392 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %393 = %392.2;
  %394 = cast(%var_13664, dtype="int8") /* ty=Tensor[(975), int8] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(1), int32] */;
  %396 = cast(%393, dtype="int8") /* ty=Tensor[(975), int8] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?), int8] */;
  %398 = cast(meta[relay.Constant][32] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %399 = cast(meta[relay.Constant][32] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %400 = cast(%var_13685, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %401 = reshape(%398, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int16] */;
  %402 = reshape(%399, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int16] */;
  %403 = reshape(%400, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %404 = @func_10565(%401, %402, %403) /* ty=(Tensor[(7, 16, 3), int16], Tensor[(7, 16, 3), bool], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(7, 16, 3), float32]) */;
  %405 = %404.1;
  %406 = cast(%405, dtype="float64") /* ty=Tensor[(7, 16, 3), float64] */;
  %407 = cast(%var_13701, dtype="float32") /* ty=Tensor[(66), float32] */;
  %408 = reshape(%407, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
  %409 = bitwise_or(%396, %397) /* ty=Tensor[(975), int8] */;
  %410 = sqrt(%406) /* ty=Tensor[(7, 16, 3), float64] */;
  %411 = @func_4654(%408) /* ty=Tensor[(?, 11, 6), uint64] */;
  (%409, meta[relay.Constant][32] /* ty=Tensor[(336), int16] */, %var_13685, %410, %411, %var_13701)
}

def @func_2115(%var_2091: Tensor[(3, 16, 4), float32], %var_2097: Tensor[(975), float32]) -> (Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) {
  %412 = cast(%var_2091, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
  %413 = cast(meta[relay.Constant][33] /* ty=Tensor[(768), int8] */, dtype="int8") /* ty=Tensor[(768), int8] */;
  %414 = cast(%var_2097, dtype="float32") /* ty=Tensor[(975), float32] */;
  %415 = reshape(%413, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), int8] */;
  %416 = reshape(%414, newshape=[975, 1]) /* ty=Tensor[(975, 1), float32] */;
  %417 = @func_2034(%415, %416) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */;
  %418 = asinh(%412) /* ty=Tensor[(3, 16, 4), float32] */;
  %419 = %417.4;
  (%418, %419, meta[relay.Constant][33] /* ty=Tensor[(768), int8] */, %var_2097)
}

def @func_15948() -> (Tensor[(6, 15, 4), float32],) {
  %420 = @func_14560() /* ty=Tensor[(6, 15, 4), float32] */;
  (%420,)
}

def @func_19448() -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32]) {
  %421 = @func_16502() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) */;
  %422 = @func_17071() /* ty=Tensor[(12, 6, 11), float64] */;
  %423 = %421.0;
  (%422, %423)
}

def @func_2363(%var_2357: bool, %var_2358: Tensor[(2, 11, 1), bool]) -> (Tensor[(2, 11, 1), bool],) {
  %424 = cast(%var_2357, dtype="bool") /* ty=bool */;
  %425 = cast(%var_2358, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %426 = logical_and(%424, %425) /* ty=Tensor[(2, 11, 1), bool] */;
  (%426,)
}

def @func_17095() -> (Tensor[(12, 6, 11), float64],) {
  %427 = @func_17071() /* ty=Tensor[(12, 6, 11), float64] */;
  (%427,)
}

def @func_16818(%var_16796: Tensor[(4, 180), int64], %var_16797: Tensor[(1440), int8], %var_16800: Tensor[(39, 5), float32], %var_16808: Tensor[(768), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(1440), int8], Tensor[(120), int64], Tensor[(4, 180), int64], Tensor[(1440), int8], Tensor[(3, 5, 13), float32], Tensor[(39, 5), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8]) {
  %428 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %429 = cast(meta[relay.Constant][34] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %430 = cast(%var_16796, dtype="int64") /* ty=Tensor[(4, 180), int64] */;
  %431 = cast(%var_16797, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %432 = reshape(%429, newshape=[12, 10, 1]) /* ty=Tensor[(12, 10, 1), int64] */;
  %433 = reshape(%430, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), int64] */;
  %434 = reshape(%431, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %435 = @func_5136(%432, %433, %434) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */;
  %436 = cast(%var_16800, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %437 = reshape(%436, newshape=[3, 5, 13]) /* ty=Tensor[(3, 5, 13), float32] */;
  %438 = @func_15241(%437) /* ty=(Tensor[(3, 5, 13), float32],) */;
  %439 = cast(%var_16808, dtype="int8") /* ty=Tensor[(768), int8] */;
  %440 = %428.1;
  %441 = cast(%440, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %442 = reshape(%439, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), int8] */;
  %443 = reshape(%441, newshape=[975, 1]) /* ty=Tensor[(975, 1), float32] */;
  %444 = @func_2034(%442, %443) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */;
  %445 = @func_16406() /* ty=Tensor[(13, 5, 15), float32] */;
  %446 = %435.2;
  %447 = %438.0;
  %448 = %444.6;
  (%445, %440, %446, meta[relay.Constant][34] /* ty=Tensor[(120), int64] */, %var_16796, %var_16797, %447, %var_16800, %448, %var_16808)
}

def @func_19718() -> (Tensor[(12, 6, 11), float64],) {
  %449 = @func_19448() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32]) */;
  %450 = %449.0;
  (%450,)
}

def @func_17666(%var_17659: Tensor[(588), uint16]) -> (Tensor[(336), int16], Tensor[(13, 5, 15), float32], Tensor[(975), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(6, 15, 4), float32]) {
  %451 = @func_14341() /* ty=(Tensor[(546), int64], Tensor[(7, 16, 3), bool], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(14, 8, 3), uint8], Tensor[(12, 6, 11), float64]) */;
  %452 = @func_14990() /* ty=(Tensor[(975), float32],) */;
  %453 = cast(%var_17659, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %454 = reshape(%453, newshape=[588]) /* ty=Tensor[(588), uint16] */;
  %455 = @func_17234(%454) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32], Tensor[(14, 3, 14), uint16], Tensor[(588), uint16], Tensor[(975), float32]) */;
  %456 = %451.2;
  %457 = @func_16406() /* ty=Tensor[(13, 5, 15), float32] */;
  %458 = %452.0;
  %459 = %455.2;
  %460 = @func_14560() /* ty=Tensor[(6, 15, 4), float32] */;
  (%456, %457, %458, %459, %var_17659, %460)
}

def @func_16695() -> Tensor[(12, 6, 11), float64] {
  @func_15908() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_14061() -> (Tensor[(15, 4, 16), float64], Tensor[(1690), float32], Tensor[(7, 6, 13), int64], Tensor[(546), int64], Tensor[(12, 6, 11), float64], Tensor[(16, 12, 6), bool], Tensor[(1152), int32], Tensor[(168), int8], Tensor[(8, 16, 15), float64]) {
  %461 = cast(meta[relay.Constant][36] /* ty=Tensor[(546), int64] */, dtype="int64") /* ty=Tensor[(546), int64] */;
  %462 = cast(meta[relay.Constant][36] /* ty=Tensor[(546), int64] */, dtype="int64") /* ty=Tensor[(546), int64] */;
  %463 = reshape(%461, newshape=[7, 6, 13]) /* ty=Tensor[(7, 6, 13), int64] */;
  %464 = reshape(%462, newshape=[7, 6, 13]) /* ty=Tensor[(7, 6, 13), int64] */;
  %465 = @func_10673(%463, %464) /* ty=(Tensor[(7, 6, 13), int64],) */;
  %466 = cast(meta[relay.Constant][37] /* ty=Tensor[(1152), int32] */, dtype="int32") /* ty=Tensor[(1152), int32] */;
  %467 = cast(meta[relay.Constant][37] /* ty=Tensor[(1152), int32] */, dtype="int32") /* ty=Tensor[(1152), int32] */;
  %468 = cast(meta[relay.Constant][38] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %469 = reshape(%466, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), int32] */;
  %470 = reshape(%467, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), int32] */;
  %471 = reshape(%468, newshape=[168]) /* ty=Tensor[(168), int8] */;
  %472 = @func_8750(%469, %470, %471) /* ty=(Tensor[(16, 12, 6), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) */;
  %473 = cast(meta[relay.Constant][35] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %474 = reshape(%473, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %475 = @func_9294(%474) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */;
  %476 = %475.1;
  %477 = cast(%476, dtype="float64") /* ty=Tensor[(8, 16, 15), float64] */;
  %478 = @func_13749() /* ty=Tensor[(15, 4, 16), float64] */;
  %479 = %465.0;
  %480 = @func_13780() /* ty=Tensor[(12, 6, 11), float64] */;
  %481 = %472.0;
  %482 = sin(%477) /* ty=Tensor[(8, 16, 15), float64] */;
  (%478, meta[relay.Constant][35] /* ty=Tensor[(1690), float32] */, %479, meta[relay.Constant][36] /* ty=Tensor[(546), int64] */, %480, %481, meta[relay.Constant][37] /* ty=Tensor[(1152), int32] */, meta[relay.Constant][38] /* ty=Tensor[(168), int8] */, %482)
}

def @func_17071() -> Tensor[(12, 6, 11), float64] {
  @func_16123() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_19690() -> Tensor[(13, 5, 15), float32] {
  @func_18119() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_7327(%var_7317: Tensor[(4, 1, 2), int64]) -> (Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) {
  %483 = cast(%var_7317, dtype="bool") /* ty=Tensor[(4, 1, 2), bool] */;
  %484 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 13, 2), int64] */, dtype="bool") /* ty=Tensor[(4, 13, 2), bool] */;
  %485 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 63), int8] */, dtype="int8") /* ty=Tensor[(10, 63), int8] */;
  %486 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 63), int8] */, dtype="int8") /* ty=Tensor[(10, 63), int8] */;
  %487 = reshape(%485, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %488 = reshape(%486, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %489 = @func_1283(%487, %488) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %490 = less(%483, %484) /* ty=Tensor[(4, 13, 2), bool] */;
  %491 = %489.0;
  (%490, %491, meta[relay.Constant][40] /* ty=Tensor[(10, 63), int8] */)
}

def @func_17365() -> (Tensor[(13, 5, 15), float32],) {
  %492 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %493 = %492.3;
  (%493,)
}

def @func_18356(%var_18325: Tensor[(1690), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 13, 10), float32], Tensor[(1690), float32]) {
  %494 = @func_16452() /* ty=Tensor[(13, 5, 15), float32] */;
  %495 = cast(%494, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %496 = cast(%var_18325, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %497 = reshape(%496, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %498 = @func_9294(%497) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */;
  %499 = acos(%495) /* ty=Tensor[(13, 5, 15), float32] */;
  %500 = %498.0;
  (%499, %500, %var_18325)
}

def @func_4833(%var_4815: Tensor[(1, 6, 14), int8], %var_4816: Tensor[(2, 6, 14), int8]) -> Tensor[(2, 6, 14), int8] {
  %501 = cast(%var_4815, dtype="int8") /* ty=Tensor[(1, 6, 14), int8] */;
  %502 = cast(%var_4816, dtype="int8") /* ty=Tensor[(2, 6, 14), int8] */;
  bitwise_and(%501, %502) /* ty=Tensor[(2, 6, 14), int8] */
}

def @func_11196(%var_11186: Tensor[(14, 10, 14), int8]) -> (Tensor[(14, 10, 14), bool],) {
  %503 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 10, 14), int8] */, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
  %504 = shape_of(%var_11186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_11186, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = less(%505, %506) /* ty=Tensor[(14, 10, 14), bool] */;
  (%507,)
}

def @func_13565() -> (Tensor[(13, 5, 15), float32],) {
  %508 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %509 = %508.1;
  (%509,)
}

def @func_14621(%var_14604: Tensor[(8, 144), float64], %var_14610: Tensor[(8, 144), float64]) -> (Tensor[(13, 5, 15), float32], Tensor[(8, 144), float64], Tensor[(6, 12, 16), float64]) {
  %510 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %511 = cast(%var_14610, dtype="float64") /* ty=Tensor[(8, 144), float64] */;
  %512 = shape_of(%var_14604, dtype="int32") /* ty=Tensor[(2), int32] */;
  %513 = cast(%var_14604, dtype="float64") /* ty=Tensor[(8, 144), float64] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %515 = cast(%var_14604, dtype="float64") /* ty=Tensor[(8, 144), float64] */;
  %516 = cast(%var_14604, dtype="float64") /* ty=Tensor[(8, 144), float64] */;
  %517 = reshape(%515, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %518 = reshape(%516, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %519 = @func_10161(%517, %518) /* ty=(Tensor[(6, 12, 16), float64],) */;
  %520 = %519.0;
  %521 = cast(%520, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %522 = %510.0;
  %523 = mod(%513, %514) /* ty=Tensor[(8, 144), float64] */;
  %524 = tan(%521) /* ty=Tensor[(6, 12, 16), float64] */;
  (%522, %523, %524)
}

def @func_15421(%var_15393: Tensor[(5, 28), uint32]) -> (Tensor[(13, 5, 15), uint16], Tensor[(5, 7, 4), float32], Tensor[(5, 28), float64]) {
  %525 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %526 = %525.1;
  %527 = cast(%526, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %528 = log(%527) /* ty=Tensor[(13, 5, 15), float32] */;
  %529 = cast(%528, dtype="uint16") /* ty=Tensor[(13, 5, 15), uint16] */;
  %530 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%526, dtype="uint16") /* ty=Tensor[(13, 5, 15), uint16] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %533 = cast(%var_15393, dtype="uint32") /* ty=Tensor[(5, 28), uint32] */;
  %534 = cast(%var_15393, dtype="uint32") /* ty=Tensor[(5, 28), uint32] */;
  %535 = reshape(%533, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %536 = reshape(%534, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %537 = @func_11108(%535, %536) /* ty=(Tensor[(5, 7, 4), float32],) */;
  %538 = cast(%var_15393, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %539 = minimum(%531, %532) /* ty=Tensor[(13, 5, 15), uint16] */;
  %540 = %537.0;
  %541 = acosh(%538) /* ty=Tensor[(5, 28), float64] */;
  (%539, %540, %541)
}

def @func_7434(%var_7420: Tensor[(12, 1, 16), uint16], %var_7421: Tensor[(12, 9, 16), uint16]) -> (Tensor[(12, 9, 16), bool],) {
  %542 = cast(%var_7420, dtype="bool") /* ty=Tensor[(12, 1, 16), bool] */;
  %543 = cast(%var_7421, dtype="bool") /* ty=Tensor[(12, 9, 16), bool] */;
  %544 = greater_equal(%542, %543) /* ty=Tensor[(12, 9, 16), bool] */;
  (%544,)
}

def @func_18964() -> Tensor[(975), float32] {
  %545 = @func_15463() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %545.1
}

def @func_15510(%var_15497: Tensor[(169, 10), float32]) -> (Tensor[(975), float32], Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(169, 10), float32]) {
  %546 = @func_14990() /* ty=(Tensor[(975), float32],) */;
  %547 = cast(%var_15497, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
  %548 = cast(%var_15497, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
  %549 = reshape(%547, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
  %550 = reshape(%548, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
  %551 = @func_15287(%549, %550) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(8, 16, 15), float64], Tensor[(169, 10), uint64], Tensor[(169, 10), float32]) */;
  %552 = %546.0;
  %553 = @func_14855() /* ty=Tensor[(12, 6, 11), float64] */;
  %554 = %551.0;
  (%552, %553, %554, %var_15497)
}

def @func_16288() -> Tensor[(12, 6, 11), float64] {
  @func_14400() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_16151() -> (Tensor[(13, 5, 15), float32],) {
  %555 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %556 = %555.0;
  (%556,)
}

def @func_2034(%var_2005: Tensor[(6, 8, 16), int8], %var_2010: Tensor[(975, 1), float32]) -> (Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) {
  %557 = cast(%var_2005, dtype="int8") /* ty=Tensor[(6, 8, 16), int8] */;
  %558 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(6, 8, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 8, 16), int8] */, dtype="int8") /* ty=Tensor[(6, 8, 16), int8] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %561 = cast(%var_2010, dtype="float32") /* ty=Tensor[(975, 1), float32] */;
  %562 = reshape(%561, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %563 = @func_1225(%562) /* ty=(Tensor[(13, 5, 15), float32],) */;
  %564 = cast(meta[relay.Constant][43] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %565 = reshape(%564, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint8] */;
  %566 = cast(%var_2005, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %567 = cast(%var_2010, dtype="float32") /* ty=Tensor[(975, 1), float32] */;
  %568 = reshape(%567, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %569 = @func_1225(%568) /* ty=(Tensor[(13, 5, 15), float32],) */;
  %570 = logical_xor(%559, %560) /* ty=Tensor[(6, 8, 16), int8] */;
  %571 = %563.0;
  %572 = @func_1128(%565) /* ty=Tensor[(10, 5, 8), uint8] */;
  %573 = atanh(%566) /* ty=Tensor[(6, 8, 16), float32] */;
  %574 = %569.0;
  (%570, %571, %var_2010, %572, meta[relay.Constant][43] /* ty=Tensor[(400), uint8] */, %573, %574)
}

def @func_15123() -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) {
  %575 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %576 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %577 = %575.0;
  %578 = %576.1;
  (%577, %578)
}

def @func_1283(%var_1275: Tensor[(9, 7, 10), int8], %var_1276: Tensor[(9, 7, 10), int8]) -> (Tensor[(9, 7, 10), int8],) {
  %579 = cast(%var_1276, dtype="int8") /* ty=Tensor[(9, 7, 10), int8] */;
  %580 = shape_of(%var_1275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%var_1275, dtype="int8") /* ty=Tensor[(9, 7, 10), int8] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %583 = subtract(%581, %582) /* ty=Tensor[(9, 7, 10), int8] */;
  (%583,)
}

def @func_5136(%var_5122: Tensor[(12, 10, 1), int64], %var_5123: Tensor[(12, 10, 6), int64], %var_5131: Tensor[(1440), int8]) -> (Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) {
  %584 = cast(%var_5122, dtype="int64") /* ty=Tensor[(12, 10, 1), int64] */;
  %585 = cast(%var_5123, dtype="int64") /* ty=Tensor[(12, 10, 6), int64] */;
  %586 = cast(%var_5122, dtype="int8") /* ty=Tensor[(12, 10, 1), int8] */;
  %587 = cast(%var_5131, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %588 = reshape(%586, newshape=[12, 1, 10]) /* ty=Tensor[(12, 1, 10), int8] */;
  %589 = reshape(%587, newshape=[12, 12, 10]) /* ty=Tensor[(12, 12, 10), int8] */;
  %590 = @func_2444(%588, %589) /* ty=(Tensor[(12, 12, 10), int8],) */;
  %591 = subtract(%584, %585) /* ty=Tensor[(12, 10, 6), int64] */;
  %592 = %590.0;
  (%591, %592, %var_5131)
}

def @func_13017() -> Tensor[(12, 6, 11), float64] {
  %593 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %593.0
}

def @func_17009() -> Tensor[(12, 6, 11), float64] {
  %594 = @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %595 = %594.0;
  %596 = cast(%595, dtype="float32") /* ty=Tensor[(12, 6, 11), float32] */;
  %597 = sigmoid(%596) /* ty=Tensor[(12, 6, 11), float32] */;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  erf(%598) /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_14452() -> (Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) {
  %599 = cast(meta[relay.Constant][44] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %600 = reshape(%599, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int16] */;
  %601 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %602 = @func_13485() /* ty=Tensor[(975), float32] */;
  %603 = @func_4470(%600) /* ty=Tensor[(5, 8, 4), int16] */;
  %604 = %601.0;
  (%602, %603, meta[relay.Constant][44] /* ty=Tensor[(160), int16] */, %604)
}

def @func_16025(%var_15989: Tensor[(10, 1690), bool], %var_16018: Tensor[(84), int8]) -> (Tensor[(168), int8], Tensor[(280), float64], Tensor[(280), float64], Tensor[(10, 1690), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8]) {
  %605 = @func_14061() /* ty=(Tensor[(15, 4, 16), float64], Tensor[(1690), float32], Tensor[(7, 6, 13), int64], Tensor[(546), int64], Tensor[(12, 6, 11), float64], Tensor[(16, 12, 6), bool], Tensor[(1152), int32], Tensor[(168), int8], Tensor[(8, 16, 15), float64]) */;
  %606 = cast(meta[relay.Constant][45] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %607 = reshape(%606, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %608 = @func_13470(%607) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) */;
  %609 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 1690), float32] */, dtype="float32") /* ty=Tensor[(1, 1690), float32] */;
  %610 = reshape(%609, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %611 = @func_9294(%610) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */;
  %612 = %611.0;
  %613 = cast(%612, dtype="bool") /* ty=Tensor[(13, 13, 10), bool] */;
  %614 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(1, 1690), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %615 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 1690), float32] */, dtype="bool") /* ty=Tensor[(1, 1690), bool] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %617 = less_equal(%615, %616) /* ty=Tensor[(?, 1690), bool] */;
  %618 = cast(%617, dtype="bool") /* ty=Tensor[(?, 1690), bool] */;
  %619 = cast(%var_15989, dtype="bool") /* ty=Tensor[(10, 1690), bool] */;
  %620 = cast(%var_16018, dtype="int8") /* ty=Tensor[(84), int8] */;
  %621 = %605.7;
  %622 = cast(%621, dtype="int8") /* ty=Tensor[(168), int8] */;
  %623 = reshape(%620, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %624 = reshape(%622, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
  %625 = %608.2;
  %626 = equal(%618, %619) /* ty=Tensor[(10, 1690), bool] */;
  %627 = @func_4833(%623, %624) /* ty=Tensor[(2, 6, 14), int8] */;
  (%621, %625, meta[relay.Constant][45] /* ty=Tensor[(280), float64] */, %626, %627, %var_16018)
}

def @func_16383(%var_16373: Tensor[(192), float32], %var_16374: Tensor[(975), float32]) -> (Tensor[(12, 6, 11), float64], Tensor[(3, 16, 4), float32], Tensor[(192), float32], Tensor[(975), float32]) {
  %628 = @func_15045() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %629 = cast(%var_16373, dtype="float32") /* ty=Tensor[(192), float32] */;
  %630 = cast(%var_16374, dtype="float32") /* ty=Tensor[(975), float32] */;
  %631 = reshape(%629, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
  %632 = reshape(%630, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %633 = @func_2115(%631, %632) /* ty=(Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) */;
  %634 = %628.0;
  %635 = %633.0;
  (%634, %635, %var_16373, %var_16374)
}

def @func_13527(%var_13522: Tensor[(720, 1), int64]) -> (Tensor[(975), float32], Tensor[(4, 13, 2), bool], Tensor[(8, 1), int64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720, 1), int64], Tensor[(1440), int8]) {
  %636 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %637 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 1), int64] */, dtype="int64") /* ty=Tensor[(8, 1), int64] */;
  %638 = reshape(%637, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), int64] */;
  %639 = @func_7327(%638) /* ty=(Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) */;
  %640 = cast(meta[relay.Constant][48] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %641 = cast(meta[relay.Constant][49] /* ty=Tensor[(77), uint8] */, dtype="uint8") /* ty=Tensor[(77), uint8] */;
  %642 = reshape(%640, newshape=[]) /* ty=uint8 */;
  %643 = reshape(%641, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), uint8] */;
  %644 = @func_3544(%642, %643) /* ty=(Tensor[(11, 1, 7), bool], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %645 = cast(meta[relay.Constant][50] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %646 = cast(%var_13522, dtype="int64") /* ty=Tensor[(720, 1), int64] */;
  %647 = cast(meta[relay.Constant][51] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %648 = reshape(%645, newshape=[12, 10, 1]) /* ty=Tensor[(12, 10, 1), int64] */;
  %649 = reshape(%646, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), int64] */;
  %650 = reshape(%647, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %651 = @func_5136(%648, %649, %650) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */;
  %652 = %636.2;
  %653 = %639.0;
  %654 = %644.1;
  %655 = %651.0;
  (%652, %653, meta[relay.Constant][47] /* ty=Tensor[(8, 1), int64] */, %654, meta[relay.Constant][48] /* ty=uint8 */, meta[relay.Constant][49] /* ty=Tensor[(77), uint8] */, %655, meta[relay.Constant][50] /* ty=Tensor[(120), int64] */, %var_13522, meta[relay.Constant][51] /* ty=Tensor[(1440), int8] */)
}

def @func_17313() -> (Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) {
  %656 = @func_14990() /* ty=(Tensor[(975), float32],) */;
  %657 = @func_15948() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %658 = @func_16695() /* ty=Tensor[(12, 6, 11), float64] */;
  %659 = %656.0;
  %660 = %657.0;
  (%658, %659, %660)
}

def @func_17741() -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64]) {
  %661 = @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %662 = %661.0;
  %663 = @func_16123() /* ty=Tensor[(12, 6, 11), float64] */;
  (%662, %663)
}

def @func_14855() -> Tensor[(12, 6, 11), float64] {
  %664 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %664.0
}

def @func_5735(%var_5697: Tensor[(8, 16, 15), float32]) -> Tensor[(8, 16, 15), float64] {
  %665 = cast(%var_5697, dtype="float32") /* ty=Tensor[(8, 16, 15), float32] */;
  %666 = log(%665) /* ty=Tensor[(8, 16, 15), float32] */;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(8, 16, 15), float64] */;
  %668 = shape_of(%var_5697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_5697, dtype="float64") /* ty=Tensor[(8, 16, 15), float64] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%669, %670) /* ty=Tensor[(8, 16, 15), float64] */
}

def @func_13485() -> Tensor[(975), float32] {
  %671 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %671.2
}

def @func_13915(%var_13861: bool, %var_13862: Tensor[(22), bool], %var_13865: Tensor[(273), float64], %var_13911: Tensor[(280), float64]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], bool, Tensor[(22), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64], Tensor[(1920), float32], Tensor[(40, 20), float64], Tensor[(24, 80), float32], Tensor[(2, 11, 6), bool], Tensor[(7, 13, 3), float64], Tensor[(2, 11, 66), uint8], Tensor[(400), uint8], Tensor[(280), float64]) {
  %672 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %673 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %674 = cast(%var_13865, dtype="float64") /* ty=Tensor[(273), float64] */;
  %675 = reshape(%674, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %676 = @func_7809(%675) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) */;
  %677 = cast(meta[relay.Constant][52] /* ty=Tensor[(40, 20), float64] */, dtype="float64") /* ty=Tensor[(40, 20), float64] */;
  %678 = cast(meta[relay.Constant][53] /* ty=Tensor[(24, 80), float32] */, dtype="float32") /* ty=Tensor[(24, 80), float32] */;
  %679 = reshape(%677, newshape=[10, 10, 8]) /* ty=Tensor[(10, 10, 8), float64] */;
  %680 = reshape(%678, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %681 = @func_11960(%679, %680) /* ty=(Tensor[(10, 10, 8), int32], Tensor[(5, 6, 1), float32], Tensor[(1920), float32]) */;
  %682 = cast(%var_13861, dtype="bool") /* ty=bool */;
  %683 = cast(%var_13862, dtype="bool") /* ty=Tensor[(22), bool] */;
  %684 = reshape(%682, newshape=[]) /* ty=bool */;
  %685 = reshape(%683, newshape=[2, 11, 1]) /* ty=Tensor[(2, 11, 1), bool] */;
  %686 = @func_2363(%684, %685) /* ty=(Tensor[(2, 11, 1), bool],) */;
  %687 = %686.0;
  %688 = cast(meta[relay.Constant][54] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %689 = reshape(%688, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
  %690 = @func_4654(%689) /* ty=Tensor[(?, 11, 6), uint64] */;
  %691 = cast(%687, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %692 = cast(%690, dtype="bool") /* ty=Tensor[(?, 11, 6), bool] */;
  %693 = cast(%var_13865, dtype="float64") /* ty=Tensor[(273), float64] */;
  %694 = reshape(%693, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %695 = @func_7809(%694) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) */;
  %696 = cast(meta[relay.Constant][54] /* ty=Tensor[(66), float32] */, dtype="uint8") /* ty=Tensor[(66), uint8] */;
  %697 = cast(%687, dtype="uint8") /* ty=Tensor[(2, 11, 1), uint8] */;
  %698 = cast(%var_13911, dtype="float64") /* ty=Tensor[(280), float64] */;
  %699 = reshape(%698, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %700 = @func_13470(%699) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) */;
  %701 = %672.0;
  %702 = %673.0;
  %703 = %676.0;
  %704 = %681.2;
  %705 = logical_and(%691, %692) /* ty=Tensor[(2, 11, 6), bool] */;
  %706 = %695.0;
  %707 = multiply(%696, %697) /* ty=Tensor[(2, 11, 66), uint8] */;
  %708 = %700.3;
  (%701, %702, %var_13861, %var_13862, %703, %var_13865, %704, meta[relay.Constant][52] /* ty=Tensor[(40, 20), float64] */, meta[relay.Constant][53] /* ty=Tensor[(24, 80), float32] */, %705, %706, %707, %708, %var_13911)
}

def @func_12987() -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
  %709 = cast(meta[relay.Constant][55] /* ty=Tensor[(12, 6, 11), float64] */, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %710 = cast(meta[relay.Constant][56] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %711 = reshape(%710, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %712 = @func_1225(%711) /* ty=(Tensor[(13, 5, 15), float32],) */;
  %713 = asin(%709) /* ty=Tensor[(12, 6, 11), float64] */;
  %714 = %712.0;
  (%713, %714, meta[relay.Constant][56] /* ty=Tensor[(975), float32] */)
}

def @func_18793(%var_18771: Tensor[(400), uint8]) -> (Tensor[(13, 5, 15), float32], Tensor[(280), float64], Tensor[(400), bool], Tensor[(12, 6, 11), float64]) {
  %715 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %716 = cast(meta[relay.Constant][57] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %717 = cast(meta[relay.Constant][57] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %718 = cast(%var_18771, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %719 = reshape(%716, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %720 = reshape(%717, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %721 = reshape(%718, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %722 = @func_2670(%719, %720, %721) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %723 = %722.2;
  %724 = cast(%var_18771, dtype="bool") /* ty=Tensor[(400), bool] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(1), int32] */;
  %726 = cast(%723, dtype="bool") /* ty=Tensor[(400), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?), bool] */;
  %728 = %715.3;
  %729 = logical_and(%726, %727) /* ty=Tensor[(400), bool] */;
  %730 = @func_18148() /* ty=Tensor[(12, 6, 11), float64] */;
  (%728, meta[relay.Constant][57] /* ty=Tensor[(280), float64] */, %729, %730)
}

def @func_14506(%var_14493: Tensor[(96, 2), float32]) -> (Tensor[(15, 4, 16), float64], Tensor[(768), int8], Tensor[(975), float32], Tensor[(96, 2), float64]) {
  %731 = @func_13749() /* ty=Tensor[(15, 4, 16), float64] */;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(15, 4, 16), float64] */;
  %733 = cast(%var_14493, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
  %734 = cast(meta[relay.Constant][58] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %735 = reshape(%733, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
  %736 = reshape(%734, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %737 = @func_2115(%735, %736) /* ty=(Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) */;
  %738 = cast(%var_14493, dtype="float64") /* ty=Tensor[(96, 2), float64] */;
  %739 = exp(%732) /* ty=Tensor[(15, 4, 16), float64] */;
  %740 = %737.2;
  %741 = acos(%738) /* ty=Tensor[(96, 2), float64] */;
  (%739, %740, meta[relay.Constant][58] /* ty=Tensor[(975), float32] */, %741)
}

def @func_7592(%var_7561: Tensor[(2, 9, 10), uint8], %var_7574: Tensor[(280), float64]) -> (Tensor[(2, 9, 10), uint8], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(630), int8], Tensor[(280), float64]) {
  %742 = cast(meta[relay.Constant][59] /* ty=Tensor[(2, 9, 10), uint8] */, dtype="uint8") /* ty=Tensor[(2, 9, 10), uint8] */;
  %743 = shape_of(%var_7561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%var_7561, dtype="uint8") /* ty=Tensor[(2, 9, 10), uint8] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %746 = cast(meta[relay.Constant][60] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %747 = reshape(%746, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint8] */;
  %748 = cast(%var_7574, dtype="float64") /* ty=Tensor[(280), float64] */;
  %749 = cast(%var_7574, dtype="float64") /* ty=Tensor[(280), float64] */;
  %750 = cast(meta[relay.Constant][60] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %751 = reshape(%748, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %752 = reshape(%749, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %753 = reshape(%750, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %754 = @func_2670(%751, %752, %753) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %755 = subtract(%744, %745) /* ty=Tensor[(2, 9, 10), uint8] */;
  %756 = @func_1128(%747) /* ty=Tensor[(10, 5, 8), uint8] */;
  %757 = %754.4;
  (%755, %756, meta[relay.Constant][60] /* ty=Tensor[(400), uint8] */, %757, %var_7574)
}

def @func_8857(%var_8829: Tensor[(15, 2, 16), uint64], %var_8842: bool, %var_8843: Tensor[(22), bool], %var_8852: Tensor[(8), int64]) -> (Tensor[(15, 2, 16), bool], Tensor[(8, 16, 15), float64], Tensor[(1920), float32], Tensor[(2, 11, 1), bool], bool, Tensor[(22), bool], Tensor[(10, 63), int8], Tensor[(8), int64]) {
  %758 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 2, 1), uint64] */, dtype="bool") /* ty=Tensor[(15, 2, 1), bool] */;
  %759 = cast(%var_8829, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %760 = cast(meta[relay.Constant][62] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %761 = reshape(%760, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
  %762 = cast(%var_8842, dtype="bool") /* ty=bool */;
  %763 = cast(%var_8843, dtype="bool") /* ty=Tensor[(22), bool] */;
  %764 = reshape(%762, newshape=[]) /* ty=bool */;
  %765 = reshape(%763, newshape=[2, 11, 1]) /* ty=Tensor[(2, 11, 1), bool] */;
  %766 = @func_2363(%764, %765) /* ty=(Tensor[(2, 11, 1), bool],) */;
  %767 = cast(%var_8852, dtype="int64") /* ty=Tensor[(8), int64] */;
  %768 = reshape(%767, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), int64] */;
  %769 = @func_7327(%768) /* ty=(Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) */;
  %770 = greater(%758, %759) /* ty=Tensor[(15, 2, 16), bool] */;
  %771 = @func_5735(%761) /* ty=Tensor[(8, 16, 15), float64] */;
  %772 = %766.0;
  %773 = %769.2;
  (%770, %771, meta[relay.Constant][62] /* ty=Tensor[(1920), float32] */, %772, %var_8842, %var_8843, %773, %var_8852)
}

def @func_15241(%var_15234: Tensor[(3, 5, 13), float32]) -> (Tensor[(3, 5, 13), float32],) {
  %774 = cast(%var_15234, dtype="float32") /* ty=Tensor[(3, 5, 13), float32] */;
  %775 = atanh(%774) /* ty=Tensor[(3, 5, 13), float32] */;
  (%775,)
}

def @func_15861(%var_15856: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), bool],) {
  %776 = @func_14400() /* ty=Tensor[(12, 6, 11), float64] */;
  %777 = cast(%var_15856, dtype="bool") /* ty=Tensor[(12, 6, 11), bool] */;
  %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%776, dtype="bool") /* ty=Tensor[(12, 6, 11), bool] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %781 = greater_equal(%779, %780) /* ty=Tensor[(12, 6, 11), bool] */;
  (%781,)
}

def @func_17426(%var_17403: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), uint16], Tensor[(1, 140), uint32], Tensor[(1440), int8], Tensor[(1690), float32]) {
  %782 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
  %783 = cast(%var_17403, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%782, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %787 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 140), uint32] */, dtype="uint32") /* ty=Tensor[(1, 140), uint32] */;
  %788 = reshape(%787, newshape=[5, 28]) /* ty=Tensor[(5, 28), uint32] */;
  %789 = @func_15421(%788) /* ty=(Tensor[(13, 5, 15), uint16], Tensor[(5, 7, 4), float32], Tensor[(5, 28), float64]) */;
  %790 = cast(meta[relay.Constant][64] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %791 = cast(meta[relay.Constant][64] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %792 = reshape(%790, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
  %793 = reshape(%791, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
  %794 = @func_15287(%792, %793) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(8, 16, 15), float64], Tensor[(169, 10), uint64], Tensor[(169, 10), float32]) */;
  %795 = floor_mod(%785, %786) /* ty=Tensor[(12, 6, 11), float64] */;
  %796 = %789.0;
  %797 = %794.4;
  (%795, %796, meta[relay.Constant][63] /* ty=Tensor[(1, 140), uint32] */, %797, meta[relay.Constant][64] /* ty=Tensor[(1690), float32] */)
}

def @func_14400() -> Tensor[(12, 6, 11), float64] {
  %798 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %798.0
}

def @func_19007() -> (Tensor[(13, 5, 15), float64],) {
  %799 = @func_17914() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) */;
  %800 = %799.0;
  %801 = cast(%800, dtype="float64") /* ty=Tensor[(13, 5, 15), float64] */;
  %802 = atanh(%801) /* ty=Tensor[(13, 5, 15), float64] */;
  (%802,)
}

def @func_2444(%var_2431: Tensor[(12, 1, 10), int8], %var_2432: Tensor[(12, 12, 10), int8]) -> (Tensor[(12, 12, 10), int8],) {
  %803 = cast(%var_2431, dtype="int8") /* ty=Tensor[(12, 1, 10), int8] */;
  %804 = cast(%var_2432, dtype="int8") /* ty=Tensor[(12, 12, 10), int8] */;
  %805 = add(%803, %804) /* ty=Tensor[(12, 12, 10), int8] */;
  (%805,)
}

def @func_10565(%var_10521: Tensor[(7, 16, 3), int16], %var_10522: Tensor[(7, 16, 3), int16], %var_10543: Tensor[(400), uint8]) -> (Tensor[(7, 16, 3), int16], Tensor[(7, 16, 3), bool], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(7, 16, 3), float32]) {
  %806 = cast(%var_10522, dtype="int16") /* ty=Tensor[(7, 16, 3), int16] */;
  %807 = shape_of(%var_10521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%var_10521, dtype="int16") /* ty=Tensor[(7, 16, 3), int16] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %810 = cast(meta[relay.Constant][65] /* ty=Tensor[(7, 16, 3), int16] */, dtype="bool") /* ty=Tensor[(7, 16, 3), bool] */;
  %811 = shape_of(%var_10522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(%var_10522, dtype="bool") /* ty=Tensor[(7, 16, 3), bool] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %814 = cast(%var_10543, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %815 = reshape(%814, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint8] */;
  %816 = cast(%var_10522, dtype="float32") /* ty=Tensor[(7, 16, 3), float32] */;
  %817 = logical_xor(%808, %809) /* ty=Tensor[(7, 16, 3), int16] */;
  %818 = equal(%812, %813) /* ty=Tensor[(7, 16, 3), bool] */;
  %819 = @func_1128(%815) /* ty=Tensor[(10, 5, 8), uint8] */;
  %820 = sin(%816) /* ty=Tensor[(7, 16, 3), float32] */;
  (%817, %818, %819, %var_10543, %820)
}

def @func_18006(%var_17937: Tensor[(975), float32], %var_17951: Tensor[(2, 80), int16]) -> (Tensor[(975), uint32], Tensor[(5, 8, 4), int16], Tensor[(2, 80), int16], Tensor[(975), float64], Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) {
  %821 = @func_15696() /* ty=Tensor[(975), float32] */;
  %822 = cast(%var_17937, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(1), int32] */;
  %824 = cast(%821, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %826 = cast(%var_17951, dtype="int16") /* ty=Tensor[(2, 80), int16] */;
  %827 = reshape(%826, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int16] */;
  %828 = cast(%821, dtype="float64") /* ty=Tensor[(975), float64] */;
  %829 = shape_of(%var_17937, dtype="int32") /* ty=Tensor[(1), int32] */;
  %830 = cast(%var_17937, dtype="float64") /* ty=Tensor[(975), float64] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?), float64] */;
  %832 = @func_14990() /* ty=(Tensor[(975), float32],) */;
  %833 = @func_16173() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %834 = %833.0;
  %835 = cast(%834, dtype="float32") /* ty=Tensor[(6, 15, 4), float32] */;
  %836 = bitwise_xor(%824, %825) /* ty=Tensor[(975), uint32] */;
  %837 = @func_4470(%827) /* ty=Tensor[(5, 8, 4), int16] */;
  %838 = floor_divide(%830, %831) /* ty=Tensor[(975), float64] */;
  %839 = @func_17509() /* ty=Tensor[(12, 6, 11), float64] */;
  %840 = %832.0;
  %841 = erf(%835) /* ty=Tensor[(6, 15, 4), float32] */;
  (%836, %837, %var_17951, %838, %839, %840, %841)
}

def @func_10161(%var_10153: Tensor[(6, 12, 16), float64], %var_10154: Tensor[(6, 12, 16), float64]) -> (Tensor[(6, 12, 16), float64],) {
  %842 = cast(%var_10154, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %843 = shape_of(%var_10153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%var_10153, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %846 = floor_mod(%844, %845) /* ty=Tensor[(6, 12, 16), float64] */;
  (%846,)
}

def @func_17712(%var_17696: Tensor[(6, 8, 15), int16], %var_17697: Tensor[(6, 8, 15), int16]) -> (Tensor[(6, 8, 15), int16], Tensor[(13, 5, 15), float32]) {
  %847 = cast(%var_17697, dtype="int16") /* ty=Tensor[(6, 8, 15), int16] */;
  %848 = shape_of(%var_17696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%var_17696, dtype="int16") /* ty=Tensor[(6, 8, 15), int16] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %851 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %852 = subtract(%849, %850) /* ty=Tensor[(6, 8, 15), int16] */;
  %853 = %851.0;
  (%852, %853)
}

def @func_15775() -> (Tensor[(975), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32]) {
  %854 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %855 = @func_15754() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %856 = %854.2;
  %857 = @func_14560() /* ty=Tensor[(6, 15, 4), float32] */;
  %858 = %855.0;
  (%856, %857, %858)
}

def @func_12009(%var_11975: Tensor[(4, 9, 13), float32]) -> (Tensor[(4, 9, 13), int8],) {
  %859 = cast(%var_11975, dtype="float32") /* ty=Tensor[(4, 9, 13), float32] */;
  %860 = log2(%859) /* ty=Tensor[(4, 9, 13), float32] */;
  %861 = cast(meta[relay.Constant][66] /* ty=Tensor[(4, 9, 13), float32] */, dtype="int8") /* ty=Tensor[(4, 9, 13), int8] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="int8") /* ty=Tensor[(4, 9, 13), int8] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %865 = right_shift(%863, %864) /* ty=Tensor[(4, 9, 13), int8] */;
  (%865,)
}

def @func_14560() -> Tensor[(6, 15, 4), float32] {
  %866 = cast(meta[relay.Constant][67] /* ty=Tensor[(6, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 4), float32] */;
  cosh(%866) /* ty=Tensor[(6, 15, 4), float32] */
}

def @func_6191(%var_6175: Tensor[(14, 8, 3), uint8], %var_6176: Tensor[(14, 8, 3), uint8]) -> (Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) {
  %867 = cast(%var_6176, dtype="uint8") /* ty=Tensor[(14, 8, 3), uint8] */;
  %868 = shape_of(%var_6175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%var_6175, dtype="uint8") /* ty=Tensor[(14, 8, 3), uint8] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %871 = cast(%var_6176, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
  %872 = add(%869, %870) /* ty=Tensor[(14, 8, 3), uint8] */;
  %873 = sigmoid(%871) /* ty=Tensor[(14, 8, 3), float64] */;
  (%872, %873)
}

def @func_2670(%var_2647: Tensor[(7, 10, 4), float64], %var_2648: Tensor[(7, 10, 4), float64], %var_2653: Tensor[(400), uint8]) -> (Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  %874 = cast(%var_2648, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
  %875 = shape_of(%var_2647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%var_2647, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %878 = cast(%var_2653, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %879 = reshape(%878, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint8] */;
  %880 = cast(meta[relay.Constant][68] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %881 = cast(meta[relay.Constant][68] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %882 = reshape(%880, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %883 = reshape(%881, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %884 = @func_1283(%882, %883) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %885 = mod(%876, %877) /* ty=Tensor[(7, 10, 4), float64] */;
  %886 = @func_1128(%879) /* ty=Tensor[(10, 5, 8), uint8] */;
  %887 = %884.0;
  (%885, %886, %var_2653, %887, meta[relay.Constant][68] /* ty=Tensor[(630), int8] */)
}

def @func_14169() -> (Tensor[(12, 6, 11), float64],) {
  %888 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
  (%888,)
}

def @func_15546(%var_15537: Tensor[(800), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(1920), float32], Tensor[(800), float64], Tensor[(1920), float32], Tensor[(12, 6, 11), float64]) {
  %889 = @func_15123() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) */;
  %890 = cast(%var_15537, dtype="float64") /* ty=Tensor[(800), float64] */;
  %891 = cast(meta[relay.Constant][69] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %892 = reshape(%890, newshape=[10, 10, 8]) /* ty=Tensor[(10, 10, 8), float64] */;
  %893 = reshape(%891, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %894 = @func_11960(%892, %893) /* ty=(Tensor[(10, 10, 8), int32], Tensor[(5, 6, 1), float32], Tensor[(1920), float32]) */;
  %895 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %896 = @func_14400() /* ty=Tensor[(12, 6, 11), float64] */;
  %897 = %889.1;
  %898 = %894.2;
  %899 = %895.0;
  (%896, %897, %898, %var_15537, meta[relay.Constant][69] /* ty=Tensor[(1920), float32] */, %899)
}

def @func_15684() -> Tensor[(13, 5, 15), float32] {
  %900 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %900.0
}

def @func_20064() -> (Tensor[(13, 5, 15), float32],) {
  %901 = @func_16452() /* ty=Tensor[(13, 5, 15), float32] */;
  (%901,)
}

def @func_16232(%var_16217: Tensor[(1, 630), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(975), float32], Tensor[(280), float64], Tensor[(280), float64], Tensor[(9, 7, 10), int8], Tensor[(1, 630), int8]) {
  %902 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %903 = cast(meta[relay.Constant][70] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %904 = reshape(%903, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %905 = @func_13470(%904) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) */;
  %906 = cast(%var_16217, dtype="int8") /* ty=Tensor[(1, 630), int8] */;
  %907 = cast(%var_16217, dtype="int8") /* ty=Tensor[(1, 630), int8] */;
  %908 = reshape(%906, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %909 = reshape(%907, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %910 = @func_1283(%908, %909) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %911 = %902.3;
  %912 = @func_13485() /* ty=Tensor[(975), float32] */;
  %913 = %905.2;
  %914 = %910.0;
  (%911, %912, %913, meta[relay.Constant][70] /* ty=Tensor[(280), float64] */, %914, %var_16217)
}

def @func_14286(%var_14263: Tensor[(84, 2), int8]) -> (Tensor[(12, 6, 11), float64], Tensor[(84), int8], Tensor[(84, 2), int8], Tensor[(15, 4, 16), float64], Tensor[(2, 6, 14), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  %915 = @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %916 = cast(meta[relay.Constant][71] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %917 = cast(%var_14263, dtype="int8") /* ty=Tensor[(84, 2), int8] */;
  %918 = reshape(%916, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %919 = reshape(%917, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
  %920 = @func_4833(%918, %919) /* ty=Tensor[(2, 6, 14), int8] */;
  %921 = cast(%920, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
  %922 = cast(meta[relay.Constant][72] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %923 = cast(meta[relay.Constant][72] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %924 = reshape(%922, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %925 = reshape(%923, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %926 = @func_1283(%924, %925) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %927 = %915.0;
  %928 = @func_13749() /* ty=Tensor[(15, 4, 16), float64] */;
  %929 = sinh(%921) /* ty=Tensor[(2, 6, 14), float32] */;
  %930 = %926.0;
  (%927, meta[relay.Constant][71] /* ty=Tensor[(84), int8] */, %var_14263, %928, %929, %930, meta[relay.Constant][72] /* ty=Tensor[(630), int8] */)
}

def @func_14687(%var_14683: Tensor[(468), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(4, 9, 13), int8], Tensor[(468), float32]) {
  %931 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %932 = cast(%var_14683, dtype="float32") /* ty=Tensor[(468), float32] */;
  %933 = reshape(%932, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), float32] */;
  %934 = @func_12009(%933) /* ty=(Tensor[(4, 9, 13), int8],) */;
  %935 = %931.0;
  %936 = %934.0;
  (%935, %936, %var_14683)
}

def @func_16406() -> Tensor[(13, 5, 15), float32] {
  %937 = @func_15754() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %937.0
}

def @func_16452() -> Tensor[(13, 5, 15), float32] {
  %938 = @func_15754() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %938.0
}

def @func_14241() -> (Tensor[(13, 5, 15), float32],) {
  %939 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %940 = %939.0;
  (%940,)
}

def @func_16711() -> Tensor[(13, 5, 15), float32] {
  @func_16406() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_19526(%var_19512: Tensor[(5, 15, 7), float32]) -> (Tensor[(5, 15, 7), float32], Tensor[(13, 5, 15), float32]) {
  %941 = cast(%var_19512, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
  %942 = erf(%941) /* ty=Tensor[(5, 15, 7), float32] */;
  %943 = @func_16711() /* ty=Tensor[(13, 5, 15), float32] */;
  (%942, %943)
}

def @func_20045(%var_19962: Tensor[(21, 4), int8], %var_19966: Tensor[(160), int16]) -> (Tensor[(13, 5, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(336), uint8], Tensor[(2, 6, 14), int8], Tensor[(21, 4), int8], Tensor[(168), int8], Tensor[(12, 6, 11), float64], Tensor[(160), int16], Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64], Tensor[(11, 13, 14), float32], Tensor[(2002), float32]) {
  %944 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %945 = cast(meta[relay.Constant][73] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %946 = cast(meta[relay.Constant][73] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %947 = reshape(%945, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
  %948 = reshape(%946, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
  %949 = @func_6191(%947, %948) /* ty=(Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) */;
  %950 = cast(%var_19962, dtype="int8") /* ty=Tensor[(21, 4), int8] */;
  %951 = cast(meta[relay.Constant][74] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %952 = reshape(%950, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %953 = reshape(%951, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
  %954 = %944.0;
  %955 = cast(%954, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %956 = cast(%var_19966, dtype="int16") /* ty=Tensor[(160), int16] */;
  %957 = reshape(%955, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %958 = reshape(%956, newshape=[2, 80]) /* ty=Tensor[(2, 80), int16] */;
  %959 = @func_18006(%957, %958) /* ty=(Tensor[(975), uint32], Tensor[(5, 8, 4), int16], Tensor[(2, 80), int16], Tensor[(975), float64], Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) */;
  %960 = cast(meta[relay.Constant][74] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %961 = reshape(%960, newshape=[84, 2]) /* ty=Tensor[(84, 2), int8] */;
  %962 = @func_14286(%961) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(84), int8], Tensor[(84, 2), int8], Tensor[(15, 4, 16), float64], Tensor[(2, 6, 14), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %963 = @func_17095() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %964 = cast(meta[relay.Constant][75] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %965 = reshape(%964, newshape=[11, 13, 14]) /* ty=Tensor[(11, 13, 14), float32] */;
  %966 = %949.1;
  %967 = @func_4833(%952, %953) /* ty=Tensor[(2, 6, 14), int8] */;
  %968 = %959.4;
  %969 = @func_16552() /* ty=Tensor[(12, 6, 11), float64] */;
  %970 = %962.5;
  %971 = %963.0;
  %972 = @func_14375(%965) /* ty=Tensor[(11, 13, 14), float32] */;
  (%954, %966, meta[relay.Constant][73] /* ty=Tensor[(336), uint8] */, %967, %var_19962, meta[relay.Constant][74] /* ty=Tensor[(168), int8] */, %968, %var_19966, %969, %970, %971, %972, meta[relay.Constant][75] /* ty=Tensor[(2002), float32] */)
}

def @func_18119() -> Tensor[(13, 5, 15), float32] {
  %973 = @func_16151() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %973.0
}

def @func_15323(%var_15305: Tensor[(8, 7, 8), uint16], %var_15306: Tensor[(8, 7, 8), uint16]) -> (Tensor[(8, 7, 8), uint16],) {
  %974 = cast(%var_15306, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
  %975 = shape_of(%var_15305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%var_15305, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %978 = left_shift(%976, %977) /* ty=Tensor[(8, 7, 8), uint16] */;
  (%978,)
}

def @func_11612(%var_11568: Tensor[(3, 4, 11), float32], %var_11569: Tensor[(3, 4, 11), float32], %var_11610: Tensor[(4, 100), uint8]) -> (Tensor[(3, 4, 11), float64], Tensor[(3, 4, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(4, 100), uint8]) {
  %979 = cast(%var_11569, dtype="float32") /* ty=Tensor[(3, 4, 11), float32] */;
  %980 = shape_of(%var_11568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%var_11568, dtype="float32") /* ty=Tensor[(3, 4, 11), float32] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %983 = power(%981, %982) /* ty=Tensor[(3, 4, 11), float32] */;
  %984 = cast(%983, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
  %985 = shape_of(%var_11569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%var_11569, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %988 = cast(%983, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
  %989 = cast(meta[relay.Constant][76] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %990 = cast(meta[relay.Constant][76] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %991 = cast(%var_11610, dtype="uint8") /* ty=Tensor[(4, 100), uint8] */;
  %992 = reshape(%989, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %993 = reshape(%990, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %994 = reshape(%991, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %995 = @func_2670(%992, %993, %994) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %996 = floor_mod(%986, %987) /* ty=Tensor[(3, 4, 11), float64] */;
  %997 = log2(%988) /* ty=Tensor[(3, 4, 11), float64] */;
  %998 = %995.3;
  (%996, %997, %998, meta[relay.Constant][76] /* ty=Tensor[(280), float64] */, %var_11610)
}

def @func_19065() -> Tensor[(13, 5, 15), float32] {
  %999 = @func_16151() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %999.0
}

def @func_11960(%var_11919: Tensor[(10, 10, 8), float64], %var_11955: Tensor[(1920), float32]) -> (Tensor[(10, 10, 8), int32], Tensor[(5, 6, 1), float32], Tensor[(1920), float32]) {
  %1000 = cast(%var_11919, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %1001 = sin(%1000) /* ty=Tensor[(10, 10, 8), float64] */;
  %1002 = cast(%var_11919, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %1003 = shape_of(%1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1004 = cast(%1001, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1006 = minimum(%1004, %1005) /* ty=Tensor[(10, 10, 8), float64] */;
  %1007 = cast(%var_11919, dtype="int32") /* ty=Tensor[(10, 10, 8), int32] */;
  %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%1006, dtype="int32") /* ty=Tensor[(10, 10, 8), int32] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1011 = cast(%var_11955, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %1012 = reshape(%1011, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %1013 = @func_8904(%1012) /* ty=(Tensor[(5, 6, 1), float32], Tensor[(8, 16, 15), float64], Tensor[(1920), float32]) */;
  %1014 = logical_xor(%1009, %1010) /* ty=Tensor[(10, 10, 8), int32] */;
  %1015 = %1013.0;
  (%1014, %1015, %var_11955)
}

def @func_17870() -> (Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) {
  %1016 = @func_16667() /* ty=(Tensor[(6, 15, 4), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %1017 = @func_15045() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %1018 = %1017.0;
  %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %1020 = %1016.1;
  %1021 = exp(%1019) /* ty=Tensor[(12, 6, 11), float64] */;
  (%1020, %1021)
}

def @func_19281() -> Tensor[(13, 5, 15), float32] {
  %1022 = @func_16151() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %1022.0
}

def @func_19669(%var_19603: Tensor[(768), int8], %var_19657: Tensor[(84), int8], %var_19658: Tensor[(168), int8]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(12, 6, 11), float64], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) {
  %1023 = @func_18434() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %1024 = cast(%var_19603, dtype="int8") /* ty=Tensor[(768), int8] */;
  %1025 = reshape(%1024, newshape=[768]) /* ty=Tensor[(768), int8] */;
  %1026 = @func_18925(%1025) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(13, 5, 15), float32]) */;
  %1027 = @func_17870() /* ty=(Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) */;
  %1028 = cast(%var_19657, dtype="int8") /* ty=Tensor[(84), int8] */;
  %1029 = cast(%var_19658, dtype="int8") /* ty=Tensor[(168), int8] */;
  %1030 = reshape(%1028, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %1031 = reshape(%1029, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
  %1032 = %1023.0;
  %1033 = @func_15684() /* ty=Tensor[(13, 5, 15), float32] */;
  %1034 = @func_16406() /* ty=Tensor[(13, 5, 15), float32] */;
  %1035 = %1026.1;
  %1036 = %1027.1;
  %1037 = @func_4833(%1030, %1031) /* ty=Tensor[(2, 6, 14), int8] */;
  (%1032, %1033, %1034, %1035, %var_19603, %1036, %1037, %var_19657, %var_19658)
}

def @func_8993(%var_8976: float32) -> Tensor[(2, 14, 16), bool] {
  %1038 = cast(%var_8976, dtype="bool") /* ty=bool */;
  %1039 = cast(meta[relay.Constant][77] /* ty=Tensor[(2, 14, 16), float32] */, dtype="bool") /* ty=Tensor[(2, 14, 16), bool] */;
  not_equal(%1038, %1039) /* ty=Tensor[(2, 14, 16), bool] */
}

def @func_8904(%var_8889: Tensor[(1920), float32]) -> (Tensor[(5, 6, 1), float32], Tensor[(8, 16, 15), float64], Tensor[(1920), float32]) {
  %1040 = cast(meta[relay.Constant][78] /* ty=Tensor[(5, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 6, 1), float32] */;
  %1041 = cast(%var_8889, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %1042 = reshape(%1041, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
  %1043 = asin(%1040) /* ty=Tensor[(5, 6, 1), float32] */;
  %1044 = @func_5735(%1042) /* ty=Tensor[(8, 16, 15), float64] */;
  (%1043, %1044, %var_8889)
}

def @func_17234(%var_17224: Tensor[(588), uint16]) -> (Tensor[(13, 5, 15), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32], Tensor[(14, 3, 14), uint16], Tensor[(588), uint16], Tensor[(975), float32]) {
  %1045 = @func_15948() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %1046 = cast(%var_17224, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %1047 = cast(%var_17224, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %1048 = reshape(%1046, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), uint16] */;
  %1049 = reshape(%1047, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), uint16] */;
  %1050 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %1051 = @func_15088() /* ty=Tensor[(13, 5, 15), float32] */;
  %1052 = %1045.0;
  %1053 = @func_16460() /* ty=Tensor[(13, 5, 15), float32] */;
  %1054 = @func_5414(%1048, %1049) /* ty=Tensor[(14, 3, 14), uint16] */;
  %1055 = %1050.0;
  (%1051, %1052, %1053, %1054, %var_17224, %1055)
}

def @func_1225(%var_1210: Tensor[(13, 5, 15), float32]) -> (Tensor[(13, 5, 15), float32],) {
  %1056 = cast(%var_1210, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %1057 = log2(%1056) /* ty=Tensor[(13, 5, 15), float32] */;
  (%1057,)
}

def @func_18509() -> (Tensor[(15, 4, 16), float64], Tensor[(5, 7, 4), float32], Tensor[(140), uint32]) {
  %1058 = cast(meta[relay.Constant][79] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1059 = reshape(%1058, newshape=[5, 28]) /* ty=Tensor[(5, 28), uint32] */;
  %1060 = @func_15421(%1059) /* ty=(Tensor[(13, 5, 15), uint16], Tensor[(5, 7, 4), float32], Tensor[(5, 28), float64]) */;
  %1061 = @func_13749() /* ty=Tensor[(15, 4, 16), float64] */;
  %1062 = %1060.1;
  (%1061, %1062, meta[relay.Constant][79] /* ty=Tensor[(140), uint32] */)
}

def @func_18291(%var_18225: Tensor[(120), int64], %var_18227: Tensor[(1440), int8], %var_18273: Tensor[(2, 200), uint8]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 12, 10), int8], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(400), uint8], Tensor[(2, 200), uint8], Tensor[(66), float32]) {
  %1063 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %1064 = cast(%var_18225, dtype="int64") /* ty=Tensor[(120), int64] */;
  %1065 = cast(meta[relay.Constant][80] /* ty=Tensor[(720), int64] */, dtype="int64") /* ty=Tensor[(720), int64] */;
  %1066 = cast(%var_18227, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %1067 = reshape(%1064, newshape=[12, 10, 1]) /* ty=Tensor[(12, 10, 1), int64] */;
  %1068 = reshape(%1065, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), int64] */;
  %1069 = reshape(%1066, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %1070 = @func_5136(%1067, %1068, %1069) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */;
  %1071 = %1063.0;
  %1072 = cast(%1071, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %1073 = cast(%var_18273, dtype="uint8") /* ty=Tensor[(2, 200), uint8] */;
  %1074 = cast(meta[relay.Constant][81] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %1075 = reshape(%1072, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %1076 = reshape(%1073, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %1077 = reshape(%1074, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %1078 = @func_13718(%1075, %1076, %1077) /* ty=(Tensor[(975), int8], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(7, 16, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) */;
  %1079 = %1070.1;
  %1080 = %1078.2;
  (%1071, %1079, %var_18225, meta[relay.Constant][80] /* ty=Tensor[(720), int64] */, %var_18227, %1080, %var_18273, meta[relay.Constant][81] /* ty=Tensor[(66), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10570(%var_10567: Tensor[(7, 16, 3), int16], %var_10568: Tensor[(7, 16, 3), int16], %var_10569: Tensor[(400), uint8]) -> (Tensor[(7, 16, 3), int16], Tensor[(7, 16, 3), bool], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(7, 16, 3), float32]) {
  @func_10565(%var_10567, %var_10568, %var_10569) /* ty=(Tensor[(7, 16, 3), int16], Tensor[(7, 16, 3), bool], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(7, 16, 3), float32]) */
}

def @func_16504() -> (Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) {
  @func_16502() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) */
}

def @func_19363() -> Tensor[(13, 5, 15), float32] {
  @func_18119() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_10676(%var_10674: Tensor[(7, 6, 13), int64], %var_10675: Tensor[(7, 6, 13), int64]) -> (Tensor[(7, 6, 13), int64],) {
  %5 = fn (%var_10668: Tensor[(7, 6, 13), int64], %var_10669: Tensor[(7, 6, 13), int64]) -> (Tensor[(7, 6, 13), int64],) {
    %0 = cast(%var_10669, dtype="int64") /* ty=Tensor[(7, 6, 13), int64] */;
    %1 = shape_of(%var_10668, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_10668, dtype="int64") /* ty=Tensor[(7, 6, 13), int64] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %4 = right_shift(%2, %3) /* ty=Tensor[(7, 6, 13), int64] */;
    (%4,)
  };
  %5(%var_10674, %var_10675) /* ty=(Tensor[(7, 6, 13), int64],) */
}

def @func_17916() -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) {
  @func_17914() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) */
}

def @func_13084(%var_13082: Tensor[(13, 5, 15), float32]) -> (Tensor[(13, 5, 15), uint8], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(14, 3, 14), float64]) {
  @func_13081(%var_13082) /* ty=(Tensor[(13, 5, 15), uint8], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(14, 3, 14), float64]) */
}

def @func_15685() -> Tensor[(13, 5, 15), float32] {
  %7 = fn () -> Tensor[(13, 5, 15), float32] {
    %6 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %6.0
  };
  %7() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_14151() -> (Tensor[(12, 6, 11), float64],) {
  %8 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
  (%8,)
}

def @func_18119() -> Tensor[(13, 5, 15), float32] {
  %9 = @func_16151() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %9.0
}

def @func_13915(%var_13861: bool, %var_13862: Tensor[(22), bool], %var_13865: Tensor[(273), float64], %var_13911: Tensor[(280), float64]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], bool, Tensor[(22), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64], Tensor[(1920), float32], Tensor[(40, 20), float64], Tensor[(24, 80), float32], Tensor[(2, 11, 6), bool], Tensor[(7, 13, 3), float64], Tensor[(2, 11, 66), uint8], Tensor[(400), uint8], Tensor[(280), float64]) {
  %10 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %11 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %12 = cast(%var_13865, dtype="float64") /* ty=Tensor[(273), float64] */;
  %13 = reshape(%12, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %14 = @func_7809(%13) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(40, 20), float64] */, dtype="float64") /* ty=Tensor[(40, 20), float64] */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(24, 80), float32] */, dtype="float32") /* ty=Tensor[(24, 80), float32] */;
  %17 = reshape(%15, newshape=[10, 10, 8]) /* ty=Tensor[(10, 10, 8), float64] */;
  %18 = reshape(%16, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %19 = @func_11960(%17, %18) /* ty=(Tensor[(10, 10, 8), int32], Tensor[(5, 6, 1), float32], Tensor[(1920), float32]) */;
  %20 = cast(%var_13861, dtype="bool") /* ty=bool */;
  %21 = cast(%var_13862, dtype="bool") /* ty=Tensor[(22), bool] */;
  %22 = reshape(%20, newshape=[]) /* ty=bool */;
  %23 = reshape(%21, newshape=[2, 11, 1]) /* ty=Tensor[(2, 11, 1), bool] */;
  %24 = @func_2363(%22, %23) /* ty=(Tensor[(2, 11, 1), bool],) */;
  %25 = %24.0;
  %26 = cast(meta[relay.Constant][2] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %27 = reshape(%26, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
  %28 = @func_4654(%27) /* ty=Tensor[(?, 11, 6), uint64] */;
  %29 = cast(%25, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %30 = cast(%28, dtype="bool") /* ty=Tensor[(?, 11, 6), bool] */;
  %31 = cast(%var_13865, dtype="float64") /* ty=Tensor[(273), float64] */;
  %32 = reshape(%31, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %33 = @func_7809(%32) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) */;
  %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(66), float32] */, dtype="uint8") /* ty=Tensor[(66), uint8] */;
  %35 = cast(%25, dtype="uint8") /* ty=Tensor[(2, 11, 1), uint8] */;
  %36 = cast(%var_13911, dtype="float64") /* ty=Tensor[(280), float64] */;
  %37 = reshape(%36, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %38 = @func_13470(%37) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) */;
  %39 = %10.0;
  %40 = %11.0;
  %41 = %14.0;
  %42 = %19.2;
  %43 = logical_and(%29, %30) /* ty=Tensor[(2, 11, 6), bool] */;
  %44 = %33.0;
  %45 = multiply(%34, %35) /* ty=Tensor[(2, 11, 66), uint8] */;
  %46 = %38.3;
  (%39, %40, %var_13861, %var_13862, %41, %var_13865, %42, meta[relay.Constant][0] /* ty=Tensor[(40, 20), float64] */, meta[relay.Constant][1] /* ty=Tensor[(24, 80), float32] */, %43, %44, %45, %46, %var_13911)
}

def @func_13530(%var_13528: Tensor[(720, 1), int64]) -> (Tensor[(975), float32], Tensor[(4, 13, 2), bool], Tensor[(8, 1), int64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720, 1), int64], Tensor[(1440), int8]) {
  @func_13527(%var_13528) /* ty=(Tensor[(975), float32], Tensor[(4, 13, 2), bool], Tensor[(8, 1), int64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720, 1), int64], Tensor[(1440), int8]) */
}

def @func_7596(%var_7594: Tensor[(2, 9, 10), uint8], %var_7595: Tensor[(280), float64]) -> (Tensor[(2, 9, 10), uint8], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(630), int8], Tensor[(280), float64]) {
  @func_7592(%var_7594, %var_7595) /* ty=(Tensor[(2, 9, 10), uint8], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(630), int8], Tensor[(280), float64]) */
}

def @func_14857() -> Tensor[(12, 6, 11), float64] {
  @func_14855() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_7329(%var_7328: Tensor[(4, 1, 2), int64]) -> (Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) {
  %56 = fn (%var_7317: Tensor[(4, 1, 2), int64]) -> (Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) {
    %47 = cast(%var_7317, dtype="bool") /* ty=Tensor[(4, 1, 2), bool] */;
    %48 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 13, 2), int64] */, dtype="bool") /* ty=Tensor[(4, 13, 2), bool] */;
    %49 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 63), int8] */, dtype="int8") /* ty=Tensor[(10, 63), int8] */;
    %50 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 63), int8] */, dtype="int8") /* ty=Tensor[(10, 63), int8] */;
    %51 = reshape(%49, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
    %52 = reshape(%50, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
    %53 = @func_1283(%51, %52) /* ty=(Tensor[(9, 7, 10), int8],) */;
    %54 = less(%47, %48) /* ty=Tensor[(4, 13, 2), bool] */;
    %55 = %53.0;
    (%54, %55, meta[relay.Constant][4] /* ty=Tensor[(10, 63), int8] */)
  };
  %56(%var_7328) /* ty=(Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) */
}

def @func_14689(%var_14688: Tensor[(468), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(4, 9, 13), int8], Tensor[(468), float32]) {
  %63 = fn (%var_14683: Tensor[(468), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(4, 9, 13), int8], Tensor[(468), float32]) {
    %57 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %58 = cast(%var_14683, dtype="float32") /* ty=Tensor[(468), float32] */;
    %59 = reshape(%58, newshape=[4, 9, 13]) /* ty=Tensor[(4, 9, 13), float32] */;
    %60 = @func_12009(%59) /* ty=(Tensor[(4, 9, 13), int8],) */;
    %61 = %57.0;
    %62 = %60.0;
    (%61, %62, %var_14683)
  };
  %63(%var_14688) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(4, 9, 13), int8], Tensor[(468), float32]) */
}

def @func_15207(%var_15204: Tensor[(84), int8], %var_15205: Tensor[(168), int8], %var_15206: Tensor[(192), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8], Tensor[(768), int8], Tensor[(192), float32]) {
  %74 = fn (%var_15181: Tensor[(84), int8], %var_15182: Tensor[(168), int8], %var_15195: Tensor[(192), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8], Tensor[(768), int8], Tensor[(192), float32]) {
    %64 = cast(%var_15181, dtype="int8") /* ty=Tensor[(84), int8] */;
    %65 = cast(%var_15182, dtype="int8") /* ty=Tensor[(168), int8] */;
    %66 = reshape(%64, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
    %67 = reshape(%65, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
    %68 = cast(%var_15195, dtype="float32") /* ty=Tensor[(192), float32] */;
    %69 = reshape(%68, newshape=[96, 2]) /* ty=Tensor[(96, 2), float32] */;
    %70 = @func_14506(%69) /* ty=(Tensor[(15, 4, 16), float64], Tensor[(768), int8], Tensor[(975), float32], Tensor[(96, 2), float64]) */;
    %71 = @func_15088() /* ty=Tensor[(13, 5, 15), float32] */;
    %72 = @func_4833(%66, %67) /* ty=Tensor[(2, 6, 14), int8] */;
    %73 = %70.1;
    (%71, %72, %var_15181, %var_15182, %73, %var_15195)
  };
  %74(%var_15204, %var_15205, %var_15206) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8], Tensor[(768), int8], Tensor[(192), float32]) */
}

def @func_4472(%var_4471: Tensor[(5, 8, 4), int16]) -> Tensor[(5, 8, 4), int16] {
  %79 = fn (%var_4458: Tensor[(5, 8, 4), int16]) -> Tensor[(5, 8, 4), int16] {
    %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 8, 4), int16] */, dtype="int16") /* ty=Tensor[(5, 8, 4), int16] */;
    %76 = shape_of(%var_4458, dtype="int32") /* ty=Tensor[(3), int32] */;
    %77 = cast(%var_4458, dtype="int16") /* ty=Tensor[(5, 8, 4), int16] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_and(%77, %78) /* ty=Tensor[(5, 8, 4), int16] */
  };
  %79(%var_4471) /* ty=Tensor[(5, 8, 4), int16] */
}

def @func_14560() -> Tensor[(6, 15, 4), float32] {
  %80 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 15, 4), float32] */;
  cosh(%80) /* ty=Tensor[(6, 15, 4), float32] */
}

def @func_15950() -> (Tensor[(6, 15, 4), float32],) {
  @func_15948() /* ty=(Tensor[(6, 15, 4), float32],) */
}

def @func_19282() -> Tensor[(13, 5, 15), float32] {
  %82 = fn () -> Tensor[(13, 5, 15), float32] {
    %81 = @func_16151() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %81.0
  };
  %82() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_17347(%var_17346: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), uint16]) {
  %91 = fn (%var_17340: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), uint16]) {
    %83 = @func_16288() /* ty=Tensor[(12, 6, 11), float64] */;
    %84 = cast(%83, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
    %85 = cast(%var_17340, dtype="uint16") /* ty=Tensor[(12, 6, 11), uint16] */;
    %86 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
    %87 = cast(%83, dtype="uint16") /* ty=Tensor[(12, 6, 11), uint16] */;
    %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %89 = rsqrt(%84) /* ty=Tensor[(12, 6, 11), float64] */;
    %90 = logical_xor(%87, %88) /* ty=Tensor[(12, 6, 11), uint16] */;
    (%89, %90)
  };
  %91(%var_17346) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), uint16]) */
}

def @func_5735(%var_5697: Tensor[(8, 16, 15), float32]) -> Tensor[(8, 16, 15), float64] {
  %92 = cast(%var_5697, dtype="float32") /* ty=Tensor[(8, 16, 15), float32] */;
  %93 = log(%92) /* ty=Tensor[(8, 16, 15), float32] */;
  %94 = cast(%93, dtype="float64") /* ty=Tensor[(8, 16, 15), float64] */;
  %95 = shape_of(%var_5697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%var_5697, dtype="float64") /* ty=Tensor[(8, 16, 15), float64] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%96, %97) /* ty=Tensor[(8, 16, 15), float64] */
}

def @func_16697() -> Tensor[(12, 6, 11), float64] {
  @func_16695() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_17390() -> (Tensor[(13, 5, 15), float32],) {
  @func_17388() /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_19425() -> (Tensor[(13, 5, 15), float64], Tensor[(12, 6, 11), float64]) {
  @func_19423() /* ty=(Tensor[(13, 5, 15), float64], Tensor[(12, 6, 11), float64]) */
}

def @func_16626(%var_16599: Tensor[(8, 240), float32], %var_16608: Tensor[(4, 48), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(8, 240), float32], Tensor[(12, 6, 11), float64], Tensor[(4, 48), float32]) {
  %98 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %99 = cast(%var_16599, dtype="float32") /* ty=Tensor[(8, 240), float32] */;
  %100 = reshape(%99, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
  %101 = cast(%var_16608, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %102 = %98.0;
  %103 = cast(%102, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %104 = reshape(%101, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %105 = reshape(%103, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %106 = @func_16383(%104, %105) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(3, 16, 4), float32], Tensor[(192), float32], Tensor[(975), float32]) */;
  %107 = @func_5735(%100) /* ty=Tensor[(8, 16, 15), float64] */;
  %108 = %106.0;
  (%102, %107, %var_16599, %108, %var_16608)
}

def @func_18896(%var_18894: Tensor[(3, 3, 5), float32], %var_18895: Tensor[(1, 1920), float32]) -> (Tensor[(3, 3, 5), float32], Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(1, 1920), float32], Tensor[(192), float32]) {
  @func_18892(%var_18894, %var_18895) /* ty=(Tensor[(3, 3, 5), float32], Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(1, 1920), float32], Tensor[(192), float32]) */
}

def @func_13723(%var_13720: Tensor[(975), float32], %var_13721: Tensor[(400), uint8], %var_13722: Tensor[(66), float32]) -> (Tensor[(975), int8], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(7, 16, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) {
  @func_13718(%var_13720, %var_13721, %var_13722) /* ty=(Tensor[(975), int8], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(7, 16, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) */
}

def @func_18793(%var_18771: Tensor[(400), uint8]) -> (Tensor[(13, 5, 15), float32], Tensor[(280), float64], Tensor[(400), bool], Tensor[(12, 6, 11), float64]) {
  %109 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %110 = cast(meta[relay.Constant][7] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %111 = cast(meta[relay.Constant][7] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %112 = cast(%var_18771, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %113 = reshape(%110, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %114 = reshape(%111, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %115 = reshape(%112, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %116 = @func_2670(%113, %114, %115) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %117 = %116.2;
  %118 = cast(%var_18771, dtype="bool") /* ty=Tensor[(400), bool] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(1), int32] */;
  %120 = cast(%117, dtype="bool") /* ty=Tensor[(400), bool] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?), bool] */;
  %122 = %109.3;
  %123 = logical_and(%120, %121) /* ty=Tensor[(400), bool] */;
  %124 = @func_18148() /* ty=Tensor[(12, 6, 11), float64] */;
  (%122, meta[relay.Constant][7] /* ty=Tensor[(280), float64] */, %123, %124)
}

def @func_17096() -> (Tensor[(12, 6, 11), float64],) {
  %126 = fn () -> (Tensor[(12, 6, 11), float64],) {
    %125 = @func_17071() /* ty=Tensor[(12, 6, 11), float64] */;
    (%125,)
  };
  %126() /* ty=(Tensor[(12, 6, 11), float64],) */
}

def @func_15327(%var_15325: Tensor[(8, 7, 8), uint16], %var_15326: Tensor[(8, 7, 8), uint16]) -> (Tensor[(8, 7, 8), uint16],) {
  @func_15323(%var_15325, %var_15326) /* ty=(Tensor[(8, 7, 8), uint16],) */
}

def @func_2367(%var_2365: bool, %var_2366: Tensor[(2, 11, 1), bool]) -> (Tensor[(2, 11, 1), bool],) {
  @func_2363(%var_2365, %var_2366) /* ty=(Tensor[(2, 11, 1), bool],) */
}

def @func_2034(%var_2005: Tensor[(6, 8, 16), int8], %var_2010: Tensor[(975, 1), float32]) -> (Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) {
  %127 = cast(%var_2005, dtype="int8") /* ty=Tensor[(6, 8, 16), int8] */;
  %128 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(6, 8, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 8, 16), int8] */, dtype="int8") /* ty=Tensor[(6, 8, 16), int8] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %131 = cast(%var_2010, dtype="float32") /* ty=Tensor[(975, 1), float32] */;
  %132 = reshape(%131, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %133 = @func_1225(%132) /* ty=(Tensor[(13, 5, 15), float32],) */;
  %134 = cast(meta[relay.Constant][9] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %135 = reshape(%134, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint8] */;
  %136 = cast(%var_2005, dtype="float32") /* ty=Tensor[(6, 8, 16), float32] */;
  %137 = cast(%var_2010, dtype="float32") /* ty=Tensor[(975, 1), float32] */;
  %138 = reshape(%137, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %139 = @func_1225(%138) /* ty=(Tensor[(13, 5, 15), float32],) */;
  %140 = logical_xor(%129, %130) /* ty=Tensor[(6, 8, 16), int8] */;
  %141 = %133.0;
  %142 = @func_1128(%135) /* ty=Tensor[(10, 5, 8), uint8] */;
  %143 = atanh(%136) /* ty=Tensor[(6, 8, 16), float32] */;
  %144 = %139.0;
  (%140, %141, %var_2010, %142, meta[relay.Constant][9] /* ty=Tensor[(400), uint8] */, %143, %144)
}

def @func_18006(%var_17937: Tensor[(975), float32], %var_17951: Tensor[(2, 80), int16]) -> (Tensor[(975), uint32], Tensor[(5, 8, 4), int16], Tensor[(2, 80), int16], Tensor[(975), float64], Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) {
  %145 = @func_15696() /* ty=Tensor[(975), float32] */;
  %146 = cast(%var_17937, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(1), int32] */;
  %148 = cast(%145, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %150 = cast(%var_17951, dtype="int16") /* ty=Tensor[(2, 80), int16] */;
  %151 = reshape(%150, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int16] */;
  %152 = cast(%145, dtype="float64") /* ty=Tensor[(975), float64] */;
  %153 = shape_of(%var_17937, dtype="int32") /* ty=Tensor[(1), int32] */;
  %154 = cast(%var_17937, dtype="float64") /* ty=Tensor[(975), float64] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?), float64] */;
  %156 = @func_14990() /* ty=(Tensor[(975), float32],) */;
  %157 = @func_16173() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %158 = %157.0;
  %159 = cast(%158, dtype="float32") /* ty=Tensor[(6, 15, 4), float32] */;
  %160 = bitwise_xor(%148, %149) /* ty=Tensor[(975), uint32] */;
  %161 = @func_4470(%151) /* ty=Tensor[(5, 8, 4), int16] */;
  %162 = floor_divide(%154, %155) /* ty=Tensor[(975), float64] */;
  %163 = @func_17509() /* ty=Tensor[(12, 6, 11), float64] */;
  %164 = %156.0;
  %165 = erf(%159) /* ty=Tensor[(6, 15, 4), float32] */;
  (%160, %161, %var_17951, %162, %163, %164, %165)
}

def @func_13017() -> Tensor[(12, 6, 11), float64] {
  %166 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %166.0
}

def @func_8862(%var_8858: Tensor[(15, 2, 16), uint64], %var_8859: bool, %var_8860: Tensor[(22), bool], %var_8861: Tensor[(8), int64]) -> (Tensor[(15, 2, 16), bool], Tensor[(8, 16, 15), float64], Tensor[(1920), float32], Tensor[(2, 11, 1), bool], bool, Tensor[(22), bool], Tensor[(10, 63), int8], Tensor[(8), int64]) {
  %183 = fn (%var_8829: Tensor[(15, 2, 16), uint64], %var_8842: bool, %var_8843: Tensor[(22), bool], %var_8852: Tensor[(8), int64]) -> (Tensor[(15, 2, 16), bool], Tensor[(8, 16, 15), float64], Tensor[(1920), float32], Tensor[(2, 11, 1), bool], bool, Tensor[(22), bool], Tensor[(10, 63), int8], Tensor[(8), int64]) {
    %167 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 2, 1), uint64] */, dtype="bool") /* ty=Tensor[(15, 2, 1), bool] */;
    %168 = cast(%var_8829, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
    %169 = cast(meta[relay.Constant][11] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %170 = reshape(%169, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
    %171 = cast(%var_8842, dtype="bool") /* ty=bool */;
    %172 = cast(%var_8843, dtype="bool") /* ty=Tensor[(22), bool] */;
    %173 = reshape(%171, newshape=[]) /* ty=bool */;
    %174 = reshape(%172, newshape=[2, 11, 1]) /* ty=Tensor[(2, 11, 1), bool] */;
    %175 = @func_2363(%173, %174) /* ty=(Tensor[(2, 11, 1), bool],) */;
    %176 = cast(%var_8852, dtype="int64") /* ty=Tensor[(8), int64] */;
    %177 = reshape(%176, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), int64] */;
    %178 = @func_7327(%177) /* ty=(Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) */;
    %179 = greater(%167, %168) /* ty=Tensor[(15, 2, 16), bool] */;
    %180 = @func_5735(%170) /* ty=Tensor[(8, 16, 15), float64] */;
    %181 = %175.0;
    %182 = %178.2;
    (%179, %180, meta[relay.Constant][11] /* ty=Tensor[(1920), float32] */, %181, %var_8842, %var_8843, %182, %var_8852)
  };
  %183(%var_8858, %var_8859, %var_8860, %var_8861) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(8, 16, 15), float64], Tensor[(1920), float32], Tensor[(2, 11, 1), bool], bool, Tensor[(22), bool], Tensor[(10, 63), int8], Tensor[(8), int64]) */
}

def @func_15696() -> Tensor[(975), float32] {
  %184 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %184.2
}

def @func_13081(%var_13025: Tensor[(13, 5, 15), float32]) -> (Tensor[(13, 5, 15), uint8], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(14, 3, 14), float64]) {
  %185 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %186 = %185.1;
  %187 = cast(%var_13025, dtype="uint8") /* ty=Tensor[(13, 5, 15), uint8] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%186, dtype="uint8") /* ty=Tensor[(13, 5, 15), uint8] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %191 = cast(meta[relay.Constant][12] /* ty=Tensor[(1920, 1), float32] */, dtype="float32") /* ty=Tensor[(1920, 1), float32] */;
  %192 = reshape(%191, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
  %193 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %194 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%186, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %197 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %198 = cast(meta[relay.Constant][14] /* ty=Tensor[(588), uint16] */, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %199 = cast(meta[relay.Constant][14] /* ty=Tensor[(588), uint16] */, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %200 = reshape(%198, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), uint16] */;
  %201 = reshape(%199, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), uint16] */;
  %202 = @func_5414(%200, %201) /* ty=Tensor[(14, 3, 14), uint16] */;
  %203 = cast(%202, dtype="float64") /* ty=Tensor[(14, 3, 14), float64] */;
  %204 = add(%189, %190) /* ty=Tensor[(13, 5, 15), uint8] */;
  %205 = @func_5735(%192) /* ty=Tensor[(8, 16, 15), float64] */;
  %206 = power(%195, %196) /* ty=Tensor[(13, 5, 15), float32] */;
  %207 = rsqrt(%197) /* ty=Tensor[(13, 5, 15), float32] */;
  %208 = log(%203) /* ty=Tensor[(14, 3, 14), float64] */;
  (%204, %205, meta[relay.Constant][12] /* ty=Tensor[(1920, 1), float32] */, %206, %207, meta[relay.Constant][14] /* ty=Tensor[(588), uint16] */, %208)
}

def @func_14242() -> (Tensor[(13, 5, 15), float32],) {
  %211 = fn () -> (Tensor[(13, 5, 15), float32],) {
    %209 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %210 = %209.0;
    (%210,)
  };
  %211() /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_7811(%var_7810: Tensor[(7, 13, 3), float64]) -> (Tensor[(7, 13, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) {
  %217 = fn (%var_7788: Tensor[(7, 13, 3), float64]) -> (Tensor[(7, 13, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) {
    %212 = cast(%var_7788, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
    %213 = cast(meta[relay.Constant][15] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %214 = reshape(%213, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
    %215 = sin(%212) /* ty=Tensor[(7, 13, 3), float64] */;
    %216 = @func_4654(%214) /* ty=Tensor[(?, 11, 6), uint64] */;
    (%215, %216, meta[relay.Constant][15] /* ty=Tensor[(66), float32] */)
  };
  %217(%var_7810) /* ty=(Tensor[(7, 13, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) */
}

def @func_18010(%var_18008: Tensor[(975), float32], %var_18009: Tensor[(2, 80), int16]) -> (Tensor[(975), uint32], Tensor[(5, 8, 4), int16], Tensor[(2, 80), int16], Tensor[(975), float64], Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) {
  @func_18006(%var_18008, %var_18009) /* ty=(Tensor[(975), uint32], Tensor[(5, 8, 4), int16], Tensor[(2, 80), int16], Tensor[(975), float64], Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) */
}

def @func_17688() -> Tensor[(12, 6, 11), float64] {
  @func_17686() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_15047() -> (Tensor[(12, 6, 11), float64],) {
  @func_15045() /* ty=(Tensor[(12, 6, 11), float64],) */
}

def @func_17450() -> (Tensor[(1440), int8],) {
  %220 = fn () -> (Tensor[(1440), int8],) {
    %218 = @func_16743() /* ty=(Tensor[(630), int8], Tensor[(1440), int8], Tensor[(720), int64]) */;
    %219 = %218.1;
    (%219,)
  };
  %220() /* ty=(Tensor[(1440), int8],) */
}

def @func_19673(%var_19670: Tensor[(768), int8], %var_19671: Tensor[(84), int8], %var_19672: Tensor[(168), int8]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(12, 6, 11), float64], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) {
  %236 = fn (%var_19603: Tensor[(768), int8], %var_19657: Tensor[(84), int8], %var_19658: Tensor[(168), int8]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(12, 6, 11), float64], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) {
    %221 = @func_18434() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %222 = cast(%var_19603, dtype="int8") /* ty=Tensor[(768), int8] */;
    %223 = reshape(%222, newshape=[768]) /* ty=Tensor[(768), int8] */;
    %224 = @func_18925(%223) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(13, 5, 15), float32]) */;
    %225 = @func_17870() /* ty=(Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) */;
    %226 = cast(%var_19657, dtype="int8") /* ty=Tensor[(84), int8] */;
    %227 = cast(%var_19658, dtype="int8") /* ty=Tensor[(168), int8] */;
    %228 = reshape(%226, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
    %229 = reshape(%227, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
    %230 = %221.0;
    %231 = @func_15684() /* ty=Tensor[(13, 5, 15), float32] */;
    %232 = @func_16406() /* ty=Tensor[(13, 5, 15), float32] */;
    %233 = %224.1;
    %234 = %225.1;
    %235 = @func_4833(%228, %229) /* ty=Tensor[(2, 6, 14), int8] */;
    (%230, %231, %232, %233, %var_19603, %234, %235, %var_19657, %var_19658)
  };
  %236(%var_19670, %var_19671, %var_19672) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(12, 6, 11), float64], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) */
}

def @func_15421(%var_15393: Tensor[(5, 28), uint32]) -> (Tensor[(13, 5, 15), uint16], Tensor[(5, 7, 4), float32], Tensor[(5, 28), float64]) {
  %237 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %238 = %237.1;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %240 = log(%239) /* ty=Tensor[(13, 5, 15), float32] */;
  %241 = cast(%240, dtype="uint16") /* ty=Tensor[(13, 5, 15), uint16] */;
  %242 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%238, dtype="uint16") /* ty=Tensor[(13, 5, 15), uint16] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %245 = cast(%var_15393, dtype="uint32") /* ty=Tensor[(5, 28), uint32] */;
  %246 = cast(%var_15393, dtype="uint32") /* ty=Tensor[(5, 28), uint32] */;
  %247 = reshape(%245, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %248 = reshape(%246, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %249 = @func_11108(%247, %248) /* ty=(Tensor[(5, 7, 4), float32],) */;
  %250 = cast(%var_15393, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %251 = minimum(%243, %244) /* ty=Tensor[(13, 5, 15), uint16] */;
  %252 = %249.0;
  %253 = acosh(%250) /* ty=Tensor[(5, 28), float64] */;
  (%251, %252, %253)
}

def @func_15090() -> Tensor[(13, 5, 15), float32] {
  @func_15088() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_13485() -> Tensor[(975), float32] {
  %254 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %254.2
}

def @func_19718() -> (Tensor[(12, 6, 11), float64],) {
  %255 = @func_19448() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32]) */;
  %256 = %255.0;
  (%256,)
}

def @func_16288() -> Tensor[(12, 6, 11), float64] {
  @func_14400() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_17237(%var_17235: Tensor[(588), uint16]) -> (Tensor[(13, 5, 15), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32], Tensor[(14, 3, 14), uint16], Tensor[(588), uint16], Tensor[(975), float32]) {
  @func_17234(%var_17235) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32], Tensor[(14, 3, 14), uint16], Tensor[(588), uint16], Tensor[(975), float32]) */
}

def @func_4837(%var_4835: Tensor[(1, 6, 14), int8], %var_4836: Tensor[(2, 6, 14), int8]) -> Tensor[(2, 6, 14), int8] {
  @func_4833(%var_4835, %var_4836) /* ty=Tensor[(2, 6, 14), int8] */
}

def @func_11960(%var_11919: Tensor[(10, 10, 8), float64], %var_11955: Tensor[(1920), float32]) -> (Tensor[(10, 10, 8), int32], Tensor[(5, 6, 1), float32], Tensor[(1920), float32]) {
  %257 = cast(%var_11919, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %258 = sin(%257) /* ty=Tensor[(10, 10, 8), float64] */;
  %259 = cast(%var_11919, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%258, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %263 = minimum(%261, %262) /* ty=Tensor[(10, 10, 8), float64] */;
  %264 = cast(%var_11919, dtype="int32") /* ty=Tensor[(10, 10, 8), int32] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%263, dtype="int32") /* ty=Tensor[(10, 10, 8), int32] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %268 = cast(%var_11955, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %269 = reshape(%268, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %270 = @func_8904(%269) /* ty=(Tensor[(5, 6, 1), float32], Tensor[(8, 16, 15), float64], Tensor[(1920), float32]) */;
  %271 = logical_xor(%266, %267) /* ty=Tensor[(10, 10, 8), int32] */;
  %272 = %270.0;
  (%271, %272, %var_11955)
}

def @func_15754() -> (Tensor[(13, 5, 15), float32],) {
  %273 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %274 = %273.0;
  (%274,)
}

def @func_5418(%var_5416: Tensor[(14, 3, 14), uint16], %var_5417: Tensor[(14, 3, 14), uint16]) -> Tensor[(14, 3, 14), uint16] {
  @func_5414(%var_5416, %var_5417) /* ty=Tensor[(14, 3, 14), uint16] */
}

def @func_2674(%var_2671: Tensor[(7, 10, 4), float64], %var_2672: Tensor[(7, 10, 4), float64], %var_2673: Tensor[(400), uint8]) -> (Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  %289 = fn (%var_2647: Tensor[(7, 10, 4), float64], %var_2648: Tensor[(7, 10, 4), float64], %var_2653: Tensor[(400), uint8]) -> (Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
    %275 = cast(%var_2648, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
    %276 = shape_of(%var_2647, dtype="int32") /* ty=Tensor[(3), int32] */;
    %277 = cast(%var_2647, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
    %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %279 = cast(%var_2653, dtype="uint8") /* ty=Tensor[(400), uint8] */;
    %280 = reshape(%279, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint8] */;
    %281 = cast(meta[relay.Constant][16] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
    %282 = cast(meta[relay.Constant][16] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
    %283 = reshape(%281, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
    %284 = reshape(%282, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
    %285 = @func_1283(%283, %284) /* ty=(Tensor[(9, 7, 10), int8],) */;
    %286 = mod(%277, %278) /* ty=Tensor[(7, 10, 4), float64] */;
    %287 = @func_1128(%280) /* ty=Tensor[(10, 5, 8), uint8] */;
    %288 = %285.0;
    (%286, %287, %var_2653, %288, meta[relay.Constant][16] /* ty=Tensor[(630), int8] */)
  };
  %289(%var_2671, %var_2672, %var_2673) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */
}

def @func_15548(%var_15547: Tensor[(800), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(1920), float32], Tensor[(800), float64], Tensor[(1920), float32], Tensor[(12, 6, 11), float64]) {
  %301 = fn (%var_15537: Tensor[(800), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(1920), float32], Tensor[(800), float64], Tensor[(1920), float32], Tensor[(12, 6, 11), float64]) {
    %290 = @func_15123() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) */;
    %291 = cast(%var_15537, dtype="float64") /* ty=Tensor[(800), float64] */;
    %292 = cast(meta[relay.Constant][17] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %293 = reshape(%291, newshape=[10, 10, 8]) /* ty=Tensor[(10, 10, 8), float64] */;
    %294 = reshape(%292, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
    %295 = @func_11960(%293, %294) /* ty=(Tensor[(10, 10, 8), int32], Tensor[(5, 6, 1), float32], Tensor[(1920), float32]) */;
    %296 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %297 = @func_14400() /* ty=Tensor[(12, 6, 11), float64] */;
    %298 = %290.1;
    %299 = %295.2;
    %300 = %296.0;
    (%297, %298, %299, %var_15537, meta[relay.Constant][17] /* ty=Tensor[(1920), float32] */, %300)
  };
  %301(%var_15547) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(1920), float32], Tensor[(800), float64], Tensor[(1920), float32], Tensor[(12, 6, 11), float64]) */
}

def @func_5414(%var_5407: Tensor[(14, 3, 14), uint16], %var_5408: Tensor[(14, 3, 14), uint16]) -> Tensor[(14, 3, 14), uint16] {
  %302 = cast(%var_5408, dtype="uint16") /* ty=Tensor[(14, 3, 14), uint16] */;
  %303 = shape_of(%var_5407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_5407, dtype="uint16") /* ty=Tensor[(14, 3, 14), uint16] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  maximum(%304, %305) /* ty=Tensor[(14, 3, 14), uint16] */
}

def @func_7592(%var_7561: Tensor[(2, 9, 10), uint8], %var_7574: Tensor[(280), float64]) -> (Tensor[(2, 9, 10), uint8], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(630), int8], Tensor[(280), float64]) {
  %306 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 9, 10), uint8] */, dtype="uint8") /* ty=Tensor[(2, 9, 10), uint8] */;
  %307 = shape_of(%var_7561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_7561, dtype="uint8") /* ty=Tensor[(2, 9, 10), uint8] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %310 = cast(meta[relay.Constant][19] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %311 = reshape(%310, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint8] */;
  %312 = cast(%var_7574, dtype="float64") /* ty=Tensor[(280), float64] */;
  %313 = cast(%var_7574, dtype="float64") /* ty=Tensor[(280), float64] */;
  %314 = cast(meta[relay.Constant][19] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %315 = reshape(%312, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %316 = reshape(%313, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
  %317 = reshape(%314, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %318 = @func_2670(%315, %316, %317) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %319 = subtract(%308, %309) /* ty=Tensor[(2, 9, 10), uint8] */;
  %320 = @func_1128(%311) /* ty=Tensor[(10, 5, 8), uint8] */;
  %321 = %318.4;
  (%319, %320, meta[relay.Constant][19] /* ty=Tensor[(400), uint8] */, %321, %var_7574)
}

def @func_14508(%var_14507: Tensor[(96, 2), float32]) -> (Tensor[(15, 4, 16), float64], Tensor[(768), int8], Tensor[(975), float32], Tensor[(96, 2), float64]) {
  %333 = fn (%var_14493: Tensor[(96, 2), float32]) -> (Tensor[(15, 4, 16), float64], Tensor[(768), int8], Tensor[(975), float32], Tensor[(96, 2), float64]) {
    %322 = @func_13749() /* ty=Tensor[(15, 4, 16), float64] */;
    %323 = cast(%322, dtype="float64") /* ty=Tensor[(15, 4, 16), float64] */;
    %324 = cast(%var_14493, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
    %325 = cast(meta[relay.Constant][20] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
    %326 = reshape(%324, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
    %327 = reshape(%325, newshape=[975]) /* ty=Tensor[(975), float32] */;
    %328 = @func_2115(%326, %327) /* ty=(Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) */;
    %329 = cast(%var_14493, dtype="float64") /* ty=Tensor[(96, 2), float64] */;
    %330 = exp(%323) /* ty=Tensor[(15, 4, 16), float64] */;
    %331 = %328.2;
    %332 = acos(%329) /* ty=Tensor[(96, 2), float64] */;
    (%330, %331, meta[relay.Constant][20] /* ty=Tensor[(975), float32] */, %332)
  };
  %333(%var_14507) /* ty=(Tensor[(15, 4, 16), float64], Tensor[(768), int8], Tensor[(975), float32], Tensor[(96, 2), float64]) */
}

def @func_14170() -> (Tensor[(12, 6, 11), float64],) {
  %335 = fn () -> (Tensor[(12, 6, 11), float64],) {
    %334 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
    (%334,)
  };
  %335() /* ty=(Tensor[(12, 6, 11), float64],) */
}

def @func_15910() -> Tensor[(12, 6, 11), float64] {
  @func_15908() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_7438(%var_7436: Tensor[(12, 1, 16), uint16], %var_7437: Tensor[(12, 9, 16), uint16]) -> (Tensor[(12, 9, 16), bool],) {
  @func_7434(%var_7436, %var_7437) /* ty=(Tensor[(12, 9, 16), bool],) */
}

def @func_17668(%var_17667: Tensor[(588), uint16]) -> (Tensor[(336), int16], Tensor[(13, 5, 15), float32], Tensor[(975), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(6, 15, 4), float32]) {
  %346 = fn (%var_17659: Tensor[(588), uint16]) -> (Tensor[(336), int16], Tensor[(13, 5, 15), float32], Tensor[(975), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(6, 15, 4), float32]) {
    %336 = @func_14341() /* ty=(Tensor[(546), int64], Tensor[(7, 16, 3), bool], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(14, 8, 3), uint8], Tensor[(12, 6, 11), float64]) */;
    %337 = @func_14990() /* ty=(Tensor[(975), float32],) */;
    %338 = cast(%var_17659, dtype="uint16") /* ty=Tensor[(588), uint16] */;
    %339 = reshape(%338, newshape=[588]) /* ty=Tensor[(588), uint16] */;
    %340 = @func_17234(%339) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32], Tensor[(14, 3, 14), uint16], Tensor[(588), uint16], Tensor[(975), float32]) */;
    %341 = %336.2;
    %342 = @func_16406() /* ty=Tensor[(13, 5, 15), float32] */;
    %343 = %337.0;
    %344 = %340.2;
    %345 = @func_14560() /* ty=Tensor[(6, 15, 4), float32] */;
    (%341, %342, %343, %344, %var_17659, %345)
  };
  %346(%var_17667) /* ty=(Tensor[(336), int16], Tensor[(13, 5, 15), float32], Tensor[(975), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(6, 15, 4), float32]) */
}

def @func_17071() -> Tensor[(12, 6, 11), float64] {
  @func_16123() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_14062() -> (Tensor[(15, 4, 16), float64], Tensor[(1690), float32], Tensor[(7, 6, 13), int64], Tensor[(546), int64], Tensor[(12, 6, 11), float64], Tensor[(16, 12, 6), bool], Tensor[(1152), int32], Tensor[(168), int8], Tensor[(8, 16, 15), float64]) {
  %369 = fn () -> (Tensor[(15, 4, 16), float64], Tensor[(1690), float32], Tensor[(7, 6, 13), int64], Tensor[(546), int64], Tensor[(12, 6, 11), float64], Tensor[(16, 12, 6), bool], Tensor[(1152), int32], Tensor[(168), int8], Tensor[(8, 16, 15), float64]) {
    %347 = cast(meta[relay.Constant][22] /* ty=Tensor[(546), int64] */, dtype="int64") /* ty=Tensor[(546), int64] */;
    %348 = cast(meta[relay.Constant][22] /* ty=Tensor[(546), int64] */, dtype="int64") /* ty=Tensor[(546), int64] */;
    %349 = reshape(%347, newshape=[7, 6, 13]) /* ty=Tensor[(7, 6, 13), int64] */;
    %350 = reshape(%348, newshape=[7, 6, 13]) /* ty=Tensor[(7, 6, 13), int64] */;
    %351 = @func_10673(%349, %350) /* ty=(Tensor[(7, 6, 13), int64],) */;
    %352 = cast(meta[relay.Constant][23] /* ty=Tensor[(1152), int32] */, dtype="int32") /* ty=Tensor[(1152), int32] */;
    %353 = cast(meta[relay.Constant][23] /* ty=Tensor[(1152), int32] */, dtype="int32") /* ty=Tensor[(1152), int32] */;
    %354 = cast(meta[relay.Constant][24] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %355 = reshape(%352, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), int32] */;
    %356 = reshape(%353, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), int32] */;
    %357 = reshape(%354, newshape=[168]) /* ty=Tensor[(168), int8] */;
    %358 = @func_8750(%355, %356, %357) /* ty=(Tensor[(16, 12, 6), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) */;
    %359 = cast(meta[relay.Constant][21] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
    %360 = reshape(%359, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
    %361 = @func_9294(%360) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */;
    %362 = %361.1;
    %363 = cast(%362, dtype="float64") /* ty=Tensor[(8, 16, 15), float64] */;
    %364 = @func_13749() /* ty=Tensor[(15, 4, 16), float64] */;
    %365 = %351.0;
    %366 = @func_13780() /* ty=Tensor[(12, 6, 11), float64] */;
    %367 = %358.0;
    %368 = sin(%363) /* ty=Tensor[(8, 16, 15), float64] */;
    (%364, meta[relay.Constant][21] /* ty=Tensor[(1690), float32] */, %365, meta[relay.Constant][22] /* ty=Tensor[(546), int64] */, %366, %367, meta[relay.Constant][23] /* ty=Tensor[(1152), int32] */, meta[relay.Constant][24] /* ty=Tensor[(168), int8] */, %368)
  };
  %369() /* ty=(Tensor[(15, 4, 16), float64], Tensor[(1690), float32], Tensor[(7, 6, 13), int64], Tensor[(546), int64], Tensor[(12, 6, 11), float64], Tensor[(16, 12, 6), bool], Tensor[(1152), int32], Tensor[(168), int8], Tensor[(8, 16, 15), float64]) */
}

def @func_13718(%var_13664: Tensor[(975), float32], %var_13685: Tensor[(400), uint8], %var_13701: Tensor[(66), float32]) -> (Tensor[(975), int8], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(7, 16, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) {
  %370 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %371 = %370.2;
  %372 = cast(%var_13664, dtype="int8") /* ty=Tensor[(975), int8] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(1), int32] */;
  %374 = cast(%371, dtype="int8") /* ty=Tensor[(975), int8] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?), int8] */;
  %376 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %377 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %378 = cast(%var_13685, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %379 = reshape(%376, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int16] */;
  %380 = reshape(%377, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int16] */;
  %381 = reshape(%378, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %382 = @func_10565(%379, %380, %381) /* ty=(Tensor[(7, 16, 3), int16], Tensor[(7, 16, 3), bool], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(7, 16, 3), float32]) */;
  %383 = %382.1;
  %384 = cast(%383, dtype="float64") /* ty=Tensor[(7, 16, 3), float64] */;
  %385 = cast(%var_13701, dtype="float32") /* ty=Tensor[(66), float32] */;
  %386 = reshape(%385, newshape=[1, 11, 6]) /* ty=Tensor[(1, 11, 6), float32] */;
  %387 = bitwise_or(%374, %375) /* ty=Tensor[(975), int8] */;
  %388 = sqrt(%384) /* ty=Tensor[(7, 16, 3), float64] */;
  %389 = @func_4654(%386) /* ty=Tensor[(?, 11, 6), uint64] */;
  (%387, meta[relay.Constant][25] /* ty=Tensor[(336), int16] */, %var_13685, %388, %389, %var_13701)
}

def @func_13626() -> (Tensor[(13, 5, 15), float32],) {
  @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_13624() -> (Tensor[(13, 5, 15), float32],) {
  %390 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %391 = %390.1;
  (%391,)
}

def @func_14153() -> (Tensor[(12, 6, 11), float64],) {
  @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */
}

def @func_16452() -> Tensor[(13, 5, 15), float32] {
  %392 = @func_15754() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %392.0
}

def @func_8995(%var_8994: float32) -> Tensor[(2, 14, 16), bool] {
  %395 = fn (%var_8976: float32) -> Tensor[(2, 14, 16), bool] {
    %393 = cast(%var_8976, dtype="bool") /* ty=bool */;
    %394 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 14, 16), float32] */, dtype="bool") /* ty=Tensor[(2, 14, 16), bool] */;
    not_equal(%393, %394) /* ty=Tensor[(2, 14, 16), bool] */
  };
  %395(%var_8994) /* ty=Tensor[(2, 14, 16), bool] */
}

def @func_8755(%var_8752: Tensor[(16, 12, 6), int32], %var_8753: Tensor[(16, 12, 6), int32], %var_8754: Tensor[(168), int8]) -> (Tensor[(16, 12, 6), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) {
  @func_8750(%var_8752, %var_8753, %var_8754) /* ty=(Tensor[(16, 12, 6), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) */
}

def @func_9294(%var_9242: Tensor[(13, 13, 10), float32]) -> (Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) {
  %396 = cast(%var_9242, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %397 = cast(meta[relay.Constant][27] /* ty=Tensor[(1920, 1), float32] */, dtype="float32") /* ty=Tensor[(1920, 1), float32] */;
  %398 = reshape(%397, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
  %399 = atanh(%396) /* ty=Tensor[(13, 13, 10), float32] */;
  %400 = @func_5735(%398) /* ty=Tensor[(8, 16, 15), float64] */;
  (%399, %400, meta[relay.Constant][27] /* ty=Tensor[(1920, 1), float32] */)
}

def @func_14725(%var_14724: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), uint16], Tensor[(10, 5, 8), uint8], Tensor[(180, 1), uint8], Tensor[(280), float64]) {
  %414 = fn (%var_14706: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), uint16], Tensor[(10, 5, 8), uint8], Tensor[(180, 1), uint8], Tensor[(280), float64]) {
    %401 = @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %402 = %401.0;
    %403 = cast(%var_14706, dtype="uint16") /* ty=Tensor[(12, 6, 11), uint16] */;
    %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
    %405 = cast(%402, dtype="uint16") /* ty=Tensor[(12, 6, 11), uint16] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %407 = cast(meta[relay.Constant][28] /* ty=Tensor[(180, 1), uint8] */, dtype="uint8") /* ty=Tensor[(180, 1), uint8] */;
    %408 = cast(meta[relay.Constant][29] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %409 = reshape(%407, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), uint8] */;
    %410 = reshape(%408, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %411 = @func_7592(%409, %410) /* ty=(Tensor[(2, 9, 10), uint8], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(630), int8], Tensor[(280), float64]) */;
    %412 = minimum(%405, %406) /* ty=Tensor[(12, 6, 11), uint16] */;
    %413 = %411.1;
    (%412, %413, meta[relay.Constant][28] /* ty=Tensor[(180, 1), uint8] */, meta[relay.Constant][29] /* ty=Tensor[(280), float64] */)
  };
  %414(%var_14724) /* ty=(Tensor[(12, 6, 11), uint16], Tensor[(10, 5, 8), uint8], Tensor[(180, 1), uint8], Tensor[(280), float64]) */
}

def @func_14452() -> (Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) {
  %415 = cast(meta[relay.Constant][30] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %416 = reshape(%415, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int16] */;
  %417 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %418 = @func_13485() /* ty=Tensor[(975), float32] */;
  %419 = @func_4470(%416) /* ty=Tensor[(5, 8, 4), int16] */;
  %420 = %417.0;
  (%418, %419, meta[relay.Constant][30] /* ty=Tensor[(160), int16] */, %420)
}

def @func_5738(%var_5736: Tensor[(8, 16, 15), float32]) -> Tensor[(8, 16, 15), float64] {
  @func_5735(%var_5736) /* ty=Tensor[(8, 16, 15), float64] */
}

def @func_15045() -> (Tensor[(12, 6, 11), float64],) {
  %421 = @func_13780() /* ty=Tensor[(12, 6, 11), float64] */;
  (%421,)
}

def @func_18892(%var_18856: Tensor[(3, 3, 5), float32], %var_18866: Tensor[(1, 1920), float32]) -> (Tensor[(3, 3, 5), float32], Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(1, 1920), float32], Tensor[(192), float32]) {
  %422 = cast(%var_18856, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
  %423 = @func_17388() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %424 = cast(%var_18866, dtype="float32") /* ty=Tensor[(1, 1920), float32] */;
  %425 = cast(meta[relay.Constant][31] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %426 = reshape(%424, newshape=[8, 240]) /* ty=Tensor[(8, 240), float32] */;
  %427 = reshape(%425, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %428 = @func_16626(%426, %427) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(8, 240), float32], Tensor[(12, 6, 11), float64], Tensor[(4, 48), float32]) */;
  %429 = atan(%422) /* ty=Tensor[(3, 3, 5), float32] */;
  %430 = %423.0;
  %431 = %428.1;
  (%429, %430, %431, %var_18866, meta[relay.Constant][31] /* ty=Tensor[(192), float32] */)
}

def @func_16124() -> Tensor[(12, 6, 11), float64] {
  %432 = fn () -> Tensor[(12, 6, 11), float64] {
    @func_13017() /* ty=Tensor[(12, 6, 11), float64] */
  };
  %432() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_7434(%var_7420: Tensor[(12, 1, 16), uint16], %var_7421: Tensor[(12, 9, 16), uint16]) -> (Tensor[(12, 9, 16), bool],) {
  %433 = cast(%var_7420, dtype="bool") /* ty=Tensor[(12, 1, 16), bool] */;
  %434 = cast(%var_7421, dtype="bool") /* ty=Tensor[(12, 9, 16), bool] */;
  %435 = greater_equal(%433, %434) /* ty=Tensor[(12, 9, 16), bool] */;
  (%435,)
}

def @func_15241(%var_15234: Tensor[(3, 5, 13), float32]) -> (Tensor[(3, 5, 13), float32],) {
  %436 = cast(%var_15234, dtype="float32") /* ty=Tensor[(3, 5, 13), float32] */;
  %437 = atanh(%436) /* ty=Tensor[(3, 5, 13), float32] */;
  (%437,)
}

def @func_19009() -> (Tensor[(13, 5, 15), float64],) {
  @func_19007() /* ty=(Tensor[(13, 5, 15), float64],) */
}

def @func_18356(%var_18325: Tensor[(1690), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 13, 10), float32], Tensor[(1690), float32]) {
  %438 = @func_16452() /* ty=Tensor[(13, 5, 15), float32] */;
  %439 = cast(%438, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %440 = cast(%var_18325, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %441 = reshape(%440, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %442 = @func_9294(%441) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */;
  %443 = acos(%439) /* ty=Tensor[(13, 5, 15), float32] */;
  %444 = %442.0;
  (%443, %444, %var_18325)
}

def @func_11616(%var_11613: Tensor[(3, 4, 11), float32], %var_11614: Tensor[(3, 4, 11), float32], %var_11615: Tensor[(4, 100), uint8]) -> (Tensor[(3, 4, 11), float64], Tensor[(3, 4, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(4, 100), uint8]) {
  %465 = fn (%var_11568: Tensor[(3, 4, 11), float32], %var_11569: Tensor[(3, 4, 11), float32], %var_11610: Tensor[(4, 100), uint8]) -> (Tensor[(3, 4, 11), float64], Tensor[(3, 4, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(4, 100), uint8]) {
    %445 = cast(%var_11569, dtype="float32") /* ty=Tensor[(3, 4, 11), float32] */;
    %446 = shape_of(%var_11568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %447 = cast(%var_11568, dtype="float32") /* ty=Tensor[(3, 4, 11), float32] */;
    %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %449 = power(%447, %448) /* ty=Tensor[(3, 4, 11), float32] */;
    %450 = cast(%449, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
    %451 = shape_of(%var_11569, dtype="int32") /* ty=Tensor[(3), int32] */;
    %452 = cast(%var_11569, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
    %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %454 = cast(%449, dtype="float64") /* ty=Tensor[(3, 4, 11), float64] */;
    %455 = cast(meta[relay.Constant][32] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %456 = cast(meta[relay.Constant][32] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %457 = cast(%var_11610, dtype="uint8") /* ty=Tensor[(4, 100), uint8] */;
    %458 = reshape(%455, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
    %459 = reshape(%456, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
    %460 = reshape(%457, newshape=[400]) /* ty=Tensor[(400), uint8] */;
    %461 = @func_2670(%458, %459, %460) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
    %462 = floor_mod(%452, %453) /* ty=Tensor[(3, 4, 11), float64] */;
    %463 = log2(%454) /* ty=Tensor[(3, 4, 11), float64] */;
    %464 = %461.3;
    (%462, %463, %464, meta[relay.Constant][32] /* ty=Tensor[(280), float64] */, %var_11610)
  };
  %465(%var_11613, %var_11614, %var_11615) /* ty=(Tensor[(3, 4, 11), float64], Tensor[(3, 4, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(4, 100), uint8]) */
}

def @func_15512(%var_15511: Tensor[(169, 10), float32]) -> (Tensor[(975), float32], Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(169, 10), float32]) {
  %475 = fn (%var_15497: Tensor[(169, 10), float32]) -> (Tensor[(975), float32], Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(169, 10), float32]) {
    %466 = @func_14990() /* ty=(Tensor[(975), float32],) */;
    %467 = cast(%var_15497, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
    %468 = cast(%var_15497, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
    %469 = reshape(%467, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
    %470 = reshape(%468, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
    %471 = @func_15287(%469, %470) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(8, 16, 15), float64], Tensor[(169, 10), uint64], Tensor[(169, 10), float32]) */;
    %472 = %466.0;
    %473 = @func_14855() /* ty=Tensor[(12, 6, 11), float64] */;
    %474 = %471.0;
    (%472, %473, %474, %var_15497)
  };
  %475(%var_15511) /* ty=(Tensor[(975), float32], Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(169, 10), float32]) */
}

def @func_2447(%var_2445: Tensor[(12, 1, 10), int8], %var_2446: Tensor[(12, 12, 10), int8]) -> (Tensor[(12, 12, 10), int8],) {
  %479 = fn (%var_2431: Tensor[(12, 1, 10), int8], %var_2432: Tensor[(12, 12, 10), int8]) -> (Tensor[(12, 12, 10), int8],) {
    %476 = cast(%var_2431, dtype="int8") /* ty=Tensor[(12, 1, 10), int8] */;
    %477 = cast(%var_2432, dtype="int8") /* ty=Tensor[(12, 12, 10), int8] */;
    %478 = add(%476, %477) /* ty=Tensor[(12, 12, 10), int8] */;
    (%478,)
  };
  %479(%var_2445, %var_2446) /* ty=(Tensor[(12, 12, 10), int8],) */
}

def @func_16669() -> (Tensor[(6, 15, 4), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  @func_16667() /* ty=(Tensor[(6, 15, 4), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */
}

def @func_20048(%var_20046: Tensor[(21, 4), int8], %var_20047: Tensor[(160), int16]) -> (Tensor[(13, 5, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(336), uint8], Tensor[(2, 6, 14), int8], Tensor[(21, 4), int8], Tensor[(168), int8], Tensor[(12, 6, 11), float64], Tensor[(160), int16], Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64], Tensor[(11, 13, 14), float32], Tensor[(2002), float32]) {
  %509 = fn (%var_19962: Tensor[(21, 4), int8], %var_19966: Tensor[(160), int16]) -> (Tensor[(13, 5, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(336), uint8], Tensor[(2, 6, 14), int8], Tensor[(21, 4), int8], Tensor[(168), int8], Tensor[(12, 6, 11), float64], Tensor[(160), int16], Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64], Tensor[(11, 13, 14), float32], Tensor[(2002), float32]) {
    %480 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %481 = cast(meta[relay.Constant][33] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
    %482 = cast(meta[relay.Constant][33] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
    %483 = reshape(%481, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
    %484 = reshape(%482, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
    %485 = @func_6191(%483, %484) /* ty=(Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) */;
    %486 = cast(%var_19962, dtype="int8") /* ty=Tensor[(21, 4), int8] */;
    %487 = cast(meta[relay.Constant][34] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %488 = reshape(%486, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
    %489 = reshape(%487, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
    %490 = %480.0;
    %491 = cast(%490, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
    %492 = cast(%var_19966, dtype="int16") /* ty=Tensor[(160), int16] */;
    %493 = reshape(%491, newshape=[975]) /* ty=Tensor[(975), float32] */;
    %494 = reshape(%492, newshape=[2, 80]) /* ty=Tensor[(2, 80), int16] */;
    %495 = @func_18006(%493, %494) /* ty=(Tensor[(975), uint32], Tensor[(5, 8, 4), int16], Tensor[(2, 80), int16], Tensor[(975), float64], Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) */;
    %496 = cast(meta[relay.Constant][34] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %497 = reshape(%496, newshape=[84, 2]) /* ty=Tensor[(84, 2), int8] */;
    %498 = @func_14286(%497) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(84), int8], Tensor[(84, 2), int8], Tensor[(15, 4, 16), float64], Tensor[(2, 6, 14), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
    %499 = @func_17095() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %500 = cast(meta[relay.Constant][35] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %501 = reshape(%500, newshape=[11, 13, 14]) /* ty=Tensor[(11, 13, 14), float32] */;
    %502 = %485.1;
    %503 = @func_4833(%488, %489) /* ty=Tensor[(2, 6, 14), int8] */;
    %504 = %495.4;
    %505 = @func_16552() /* ty=Tensor[(12, 6, 11), float64] */;
    %506 = %498.5;
    %507 = %499.0;
    %508 = @func_14375(%501) /* ty=Tensor[(11, 13, 14), float32] */;
    (%490, %502, meta[relay.Constant][33] /* ty=Tensor[(336), uint8] */, %503, %var_19962, meta[relay.Constant][34] /* ty=Tensor[(168), int8] */, %504, %var_19966, %505, %506, %507, %508, meta[relay.Constant][35] /* ty=Tensor[(2002), float32] */)
  };
  %509(%var_20046, %var_20047) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(14, 8, 3), float64], Tensor[(336), uint8], Tensor[(2, 6, 14), int8], Tensor[(21, 4), int8], Tensor[(168), int8], Tensor[(12, 6, 11), float64], Tensor[(160), int16], Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64], Tensor[(11, 13, 14), float32], Tensor[(2002), float32]) */
}

def @func_17388() -> (Tensor[(13, 5, 15), float32],) {
  %510 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %511 = %510.0;
  (%511,)
}

def @func_19244(%var_19241: Tensor[(169, 10), float32], %var_19242: Tensor[(480), uint64], %var_19243: Tensor[(8), int64]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(14, 8, 3), float64], Tensor[(9, 7, 10), int8], Tensor[(169, 10), float32], Tensor[(169, 10), float32], Tensor[(168, 2), float64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 6, 11), float64], Tensor[(1440), int8], Tensor[(15, 2, 16), bool], Tensor[(480), uint64], Tensor[(22), bool], Tensor[(8), int64], Tensor[(6, 15, 4), float32]) {
  %552 = fn (%var_19195: Tensor[(169, 10), float32], %var_19234: Tensor[(480), uint64], %var_19236: Tensor[(8), int64]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(14, 8, 3), float64], Tensor[(9, 7, 10), int8], Tensor[(169, 10), float32], Tensor[(169, 10), float32], Tensor[(168, 2), float64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 6, 11), float64], Tensor[(1440), int8], Tensor[(15, 2, 16), bool], Tensor[(480), uint64], Tensor[(22), bool], Tensor[(8), int64], Tensor[(6, 15, 4), float32]) {
    %512 = @func_17388() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %513 = cast(meta[relay.Constant][36] /* ty=Tensor[(168, 2), uint8] */, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
    %514 = cast(meta[relay.Constant][36] /* ty=Tensor[(168, 2), uint8] */, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
    %515 = reshape(%513, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
    %516 = reshape(%514, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
    %517 = @func_6191(%515, %516) /* ty=(Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) */;
    %518 = @func_17870() /* ty=(Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) */;
    %519 = cast(%var_19195, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
    %520 = reshape(%519, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
    %521 = @func_15510(%520) /* ty=(Tensor[(975), float32], Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(169, 10), float32]) */;
    %522 = cast(meta[relay.Constant][36] /* ty=Tensor[(168, 2), uint8] */, dtype="float64") /* ty=Tensor[(168, 2), float64] */;
    %523 = cast(meta[relay.Constant][37] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %524 = cast(meta[relay.Constant][38] /* ty=Tensor[(77), uint8] */, dtype="uint8") /* ty=Tensor[(77), uint8] */;
    %525 = reshape(%523, newshape=[]) /* ty=uint8 */;
    %526 = reshape(%524, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), uint8] */;
    %527 = @func_3544(%525, %526) /* ty=(Tensor[(11, 1, 7), bool], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
    %528 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %529 = @func_17449() /* ty=(Tensor[(1440), int8],) */;
    %530 = cast(%var_19234, dtype="uint64") /* ty=Tensor[(480), uint64] */;
    %531 = cast(meta[relay.Constant][37] /* ty=uint8 */, dtype="bool") /* ty=bool */;
    %532 = cast(meta[relay.Constant][39] /* ty=Tensor[(22), bool] */, dtype="bool") /* ty=Tensor[(22), bool] */;
    %533 = cast(%var_19236, dtype="int64") /* ty=Tensor[(8), int64] */;
    %534 = reshape(%530, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), uint64] */;
    %535 = reshape(%531, newshape=[]) /* ty=bool */;
    %536 = reshape(%532, newshape=[22]) /* ty=Tensor[(22), bool] */;
    %537 = reshape(%533, newshape=[8]) /* ty=Tensor[(8), int64] */;
    %538 = @func_8857(%534, %535, %536, %537) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(8, 16, 15), float64], Tensor[(1920), float32], Tensor[(2, 11, 1), bool], bool, Tensor[(22), bool], Tensor[(10, 63), int8], Tensor[(8), int64]) */;
    %539 = @func_16173() /* ty=(Tensor[(6, 15, 4), float32],) */;
    %540 = %512.0;
    %541 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
    %542 = @func_14855() /* ty=Tensor[(12, 6, 11), float64] */;
    %543 = %517.1;
    %544 = %518.0;
    %545 = %521.3;
    %546 = asin(%522) /* ty=Tensor[(168, 2), float64] */;
    %547 = %527.1;
    %548 = %528.0;
    %549 = %529.0;
    %550 = %538.0;
    %551 = %539.0;
    (%540, %541, %542, %543, %544, %545, %var_19195, %546, %547, meta[relay.Constant][37] /* ty=uint8 */, meta[relay.Constant][38] /* ty=Tensor[(77), uint8] */, %548, %549, %550, %var_19234, meta[relay.Constant][39] /* ty=Tensor[(22), bool] */, %var_19236, %551)
  };
  %552(%var_19241, %var_19242, %var_19243) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(14, 8, 3), float64], Tensor[(9, 7, 10), int8], Tensor[(169, 10), float32], Tensor[(169, 10), float32], Tensor[(168, 2), float64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 6, 11), float64], Tensor[(1440), int8], Tensor[(15, 2, 16), bool], Tensor[(480), uint64], Tensor[(22), bool], Tensor[(8), int64], Tensor[(6, 15, 4), float32]) */
}

def @func_18494() -> Tensor[(13, 5, 15), float64] {
  @func_18492() /* ty=Tensor[(13, 5, 15), float64] */
}

def @func_14401() -> Tensor[(12, 6, 11), float64] {
  %554 = fn () -> Tensor[(12, 6, 11), float64] {
    %553 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %553.0
  };
  %554() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_18666() -> (Tensor[(13, 5, 15), float32], Tensor[(1690), float32], Tensor[(1690), float32], Tensor[(6, 8, 15), int16], Tensor[(720), int16]) {
  @func_18664() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(1690), float32], Tensor[(1690), float32], Tensor[(6, 8, 15), int16], Tensor[(720), int16]) */
}

def @func_16712() -> Tensor[(13, 5, 15), float32] {
  %555 = fn () -> Tensor[(13, 5, 15), float32] {
    @func_16406() /* ty=Tensor[(13, 5, 15), float32] */
  };
  %555() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_18927(%var_18926: Tensor[(768), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(13, 5, 15), float32]) {
  %565 = fn (%var_18906: Tensor[(768), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(13, 5, 15), float32]) {
    %556 = cast(%var_18906, dtype="int8") /* ty=Tensor[(768), int8] */;
    %557 = @func_16711() /* ty=Tensor[(13, 5, 15), float32] */;
    %558 = cast(%557, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
    %559 = reshape(%556, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), int8] */;
    %560 = reshape(%558, newshape=[975, 1]) /* ty=Tensor[(975, 1), float32] */;
    %561 = @func_2034(%559, %560) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */;
    %562 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %563 = %561.1;
    %564 = %562.0;
    (%557, %563, %var_18906, %564)
  };
  %565(%var_18926) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(13, 5, 15), float32]) */
}

def @func_15863(%var_15862: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), bool],) {
  %572 = fn (%var_15856: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), bool],) {
    %566 = @func_14400() /* ty=Tensor[(12, 6, 11), float64] */;
    %567 = cast(%var_15856, dtype="bool") /* ty=Tensor[(12, 6, 11), bool] */;
    %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
    %569 = cast(%566, dtype="bool") /* ty=Tensor[(12, 6, 11), bool] */;
    %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %571 = greater_equal(%569, %570) /* ty=Tensor[(12, 6, 11), bool] */;
    (%571,)
  };
  %572(%var_15862) /* ty=(Tensor[(12, 6, 11), bool],) */
}

def @func_17073() -> Tensor[(12, 6, 11), float64] {
  @func_17071() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_16897() -> (Tensor[(975), float32], Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) {
  @func_16895() /* ty=(Tensor[(975), float32], Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) */
}

def @func_1286(%var_1284: Tensor[(9, 7, 10), int8], %var_1285: Tensor[(9, 7, 10), int8]) -> (Tensor[(9, 7, 10), int8],) {
  %578 = fn (%var_1275: Tensor[(9, 7, 10), int8], %var_1276: Tensor[(9, 7, 10), int8]) -> (Tensor[(9, 7, 10), int8],) {
    %573 = cast(%var_1276, dtype="int8") /* ty=Tensor[(9, 7, 10), int8] */;
    %574 = shape_of(%var_1275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %575 = cast(%var_1275, dtype="int8") /* ty=Tensor[(9, 7, 10), int8] */;
    %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %577 = subtract(%575, %576) /* ty=Tensor[(9, 7, 10), int8] */;
    (%577,)
  };
  %578(%var_1284, %var_1285) /* ty=(Tensor[(9, 7, 10), int8],) */
}

def @func_18295(%var_18292: Tensor[(120), int64], %var_18293: Tensor[(1440), int8], %var_18294: Tensor[(2, 200), uint8]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 12, 10), int8], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(400), uint8], Tensor[(2, 200), uint8], Tensor[(66), float32]) {
  %597 = fn (%var_18225: Tensor[(120), int64], %var_18227: Tensor[(1440), int8], %var_18273: Tensor[(2, 200), uint8]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 12, 10), int8], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(400), uint8], Tensor[(2, 200), uint8], Tensor[(66), float32]) {
    %579 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %580 = cast(%var_18225, dtype="int64") /* ty=Tensor[(120), int64] */;
    %581 = cast(meta[relay.Constant][40] /* ty=Tensor[(720), int64] */, dtype="int64") /* ty=Tensor[(720), int64] */;
    %582 = cast(%var_18227, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %583 = reshape(%580, newshape=[12, 10, 1]) /* ty=Tensor[(12, 10, 1), int64] */;
    %584 = reshape(%581, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), int64] */;
    %585 = reshape(%582, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
    %586 = @func_5136(%583, %584, %585) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */;
    %587 = %579.0;
    %588 = cast(%587, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
    %589 = cast(%var_18273, dtype="uint8") /* ty=Tensor[(2, 200), uint8] */;
    %590 = cast(meta[relay.Constant][41] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %591 = reshape(%588, newshape=[975]) /* ty=Tensor[(975), float32] */;
    %592 = reshape(%589, newshape=[400]) /* ty=Tensor[(400), uint8] */;
    %593 = reshape(%590, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %594 = @func_13718(%591, %592, %593) /* ty=(Tensor[(975), int8], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(7, 16, 3), float64], Tensor[(?, 11, 6), uint64], Tensor[(66), float32]) */;
    %595 = %586.1;
    %596 = %594.2;
    (%587, %595, %var_18225, meta[relay.Constant][40] /* ty=Tensor[(720), int64] */, %var_18227, %596, %var_18273, meta[relay.Constant][41] /* ty=Tensor[(66), float32] */)
  };
  %597(%var_18292, %var_18293, %var_18294) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 12, 10), int8], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(400), uint8], Tensor[(2, 200), uint8], Tensor[(66), float32]) */
}

def @func_10164(%var_10162: Tensor[(6, 12, 16), float64], %var_10163: Tensor[(6, 12, 16), float64]) -> (Tensor[(6, 12, 16), float64],) {
  %603 = fn (%var_10153: Tensor[(6, 12, 16), float64], %var_10154: Tensor[(6, 12, 16), float64]) -> (Tensor[(6, 12, 16), float64],) {
    %598 = cast(%var_10154, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
    %599 = shape_of(%var_10153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %600 = cast(%var_10153, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
    %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %602 = floor_mod(%600, %601) /* ty=Tensor[(6, 12, 16), float64] */;
    (%602,)
  };
  %603(%var_10162, %var_10163) /* ty=(Tensor[(6, 12, 16), float64],) */
}

def @func_13943(%var_13941: Tensor[(16, 16, 15), float32]) -> Tensor[(16, 16, 15), float32] {
  @func_13940(%var_13941) /* ty=Tensor[(16, 16, 15), float32] */
}

def @func_4656(%var_4655: Tensor[(1, 11, 6), float32]) -> Tensor[(?, 11, 6), uint64] {
  %610 = fn (%var_4643: Tensor[(1, 11, 6), float32]) -> Tensor[(?, 11, 6), uint64] {
    %604 = cast(%var_4643, dtype="float32") /* ty=Tensor[(1, 11, 6), float32] */;
    %605 = acosh(%604) /* ty=Tensor[(1, 11, 6), float32] */;
    %606 = cast(%605, dtype="uint64") /* ty=Tensor[(1, 11, 6), uint64] */;
    %607 = shape_of(%var_4643, dtype="int32") /* ty=Tensor[(3), int32] */;
    %608 = cast(%var_4643, dtype="uint64") /* ty=Tensor[(1, 11, 6), uint64] */;
    %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    minimum(%608, %609) /* ty=Tensor[(?, 11, 6), uint64] */
  };
  %610(%var_4655) /* ty=Tensor[(?, 11, 6), uint64] */
}

def @func_18359(%var_18357: Tensor[(1690), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 13, 10), float32], Tensor[(1690), float32]) {
  @func_18356(%var_18357) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 13, 10), float32], Tensor[(1690), float32]) */
}

def @func_15323(%var_15305: Tensor[(8, 7, 8), uint16], %var_15306: Tensor[(8, 7, 8), uint16]) -> (Tensor[(8, 7, 8), uint16],) {
  %611 = cast(%var_15306, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
  %612 = shape_of(%var_15305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%var_15305, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %615 = left_shift(%613, %614) /* ty=Tensor[(8, 7, 8), uint16] */;
  (%615,)
}

def @func_16174() -> (Tensor[(6, 15, 4), float32],) {
  %617 = fn () -> (Tensor[(6, 15, 4), float32],) {
    %616 = @func_14560() /* ty=Tensor[(6, 15, 4), float32] */;
    (%616,)
  };
  %617() /* ty=(Tensor[(6, 15, 4), float32],) */
}

def @func_18510() -> (Tensor[(15, 4, 16), float64], Tensor[(5, 7, 4), float32], Tensor[(140), uint32]) {
  %623 = fn () -> (Tensor[(15, 4, 16), float64], Tensor[(5, 7, 4), float32], Tensor[(140), uint32]) {
    %618 = cast(meta[relay.Constant][42] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %619 = reshape(%618, newshape=[5, 28]) /* ty=Tensor[(5, 28), uint32] */;
    %620 = @func_15421(%619) /* ty=(Tensor[(13, 5, 15), uint16], Tensor[(5, 7, 4), float32], Tensor[(5, 28), float64]) */;
    %621 = @func_13749() /* ty=Tensor[(15, 4, 16), float64] */;
    %622 = %620.1;
    (%621, %622, meta[relay.Constant][42] /* ty=Tensor[(140), uint32] */)
  };
  %623() /* ty=(Tensor[(15, 4, 16), float64], Tensor[(5, 7, 4), float32], Tensor[(140), uint32]) */
}

def @func_16029(%var_16027: Tensor[(10, 1690), bool], %var_16028: Tensor[(84), int8]) -> (Tensor[(168), int8], Tensor[(280), float64], Tensor[(280), float64], Tensor[(10, 1690), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8]) {
  @func_16025(%var_16027, %var_16028) /* ty=(Tensor[(168), int8], Tensor[(280), float64], Tensor[(280), float64], Tensor[(10, 1690), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8]) */
}

def @func_8906(%var_8905: Tensor[(1920), float32]) -> (Tensor[(5, 6, 1), float32], Tensor[(8, 16, 15), float64], Tensor[(1920), float32]) {
  %629 = fn (%var_8889: Tensor[(1920), float32]) -> (Tensor[(5, 6, 1), float32], Tensor[(8, 16, 15), float64], Tensor[(1920), float32]) {
    %624 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 6, 1), float32] */;
    %625 = cast(%var_8889, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %626 = reshape(%625, newshape=[8, 16, 15]) /* ty=Tensor[(8, 16, 15), float32] */;
    %627 = asin(%624) /* ty=Tensor[(5, 6, 1), float32] */;
    %628 = @func_5735(%626) /* ty=Tensor[(8, 16, 15), float64] */;
    (%627, %628, %var_8889)
  };
  %629(%var_8905) /* ty=(Tensor[(5, 6, 1), float32], Tensor[(8, 16, 15), float64], Tensor[(1920), float32]) */
}

def @func_15020(%var_15015: Tensor[(8), int64]) -> (Tensor[(12, 6, 11), float64], Tensor[(4, 13, 2), bool], Tensor[(8), int64]) {
  %630 = cast(%var_15015, dtype="int64") /* ty=Tensor[(8), int64] */;
  %631 = reshape(%630, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), int64] */;
  %632 = @func_7327(%631) /* ty=(Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) */;
  %633 = @func_14855() /* ty=Tensor[(12, 6, 11), float64] */;
  %634 = %632.0;
  (%633, %634, %var_15015)
}

def @func_14377(%var_14376: Tensor[(11, 13, 14), float32]) -> Tensor[(11, 13, 14), float32] {
  %636 = fn (%var_14362: Tensor[(11, 13, 14), float32]) -> Tensor[(11, 13, 14), float32] {
    %635 = cast(%var_14362, dtype="float32") /* ty=Tensor[(11, 13, 14), float32] */;
    cosh(%635) /* ty=Tensor[(11, 13, 14), float32] */
  };
  %636(%var_14376) /* ty=Tensor[(11, 13, 14), float32] */
}

def @func_12012(%var_12010: Tensor[(4, 9, 13), float32]) -> (Tensor[(4, 9, 13), int8],) {
  @func_12009(%var_12010) /* ty=(Tensor[(4, 9, 13), int8],) */
}

def @func_15244(%var_15242: Tensor[(3, 5, 13), float32]) -> (Tensor[(3, 5, 13), float32],) {
  @func_15241(%var_15242) /* ty=(Tensor[(3, 5, 13), float32],) */
}

def @func_16818(%var_16796: Tensor[(4, 180), int64], %var_16797: Tensor[(1440), int8], %var_16800: Tensor[(39, 5), float32], %var_16808: Tensor[(768), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(1440), int8], Tensor[(120), int64], Tensor[(4, 180), int64], Tensor[(1440), int8], Tensor[(3, 5, 13), float32], Tensor[(39, 5), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8]) {
  %637 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %638 = cast(meta[relay.Constant][44] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %639 = cast(%var_16796, dtype="int64") /* ty=Tensor[(4, 180), int64] */;
  %640 = cast(%var_16797, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %641 = reshape(%638, newshape=[12, 10, 1]) /* ty=Tensor[(12, 10, 1), int64] */;
  %642 = reshape(%639, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), int64] */;
  %643 = reshape(%640, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %644 = @func_5136(%641, %642, %643) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */;
  %645 = cast(%var_16800, dtype="float32") /* ty=Tensor[(39, 5), float32] */;
  %646 = reshape(%645, newshape=[3, 5, 13]) /* ty=Tensor[(3, 5, 13), float32] */;
  %647 = @func_15241(%646) /* ty=(Tensor[(3, 5, 13), float32],) */;
  %648 = cast(%var_16808, dtype="int8") /* ty=Tensor[(768), int8] */;
  %649 = %637.1;
  %650 = cast(%649, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %651 = reshape(%648, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), int8] */;
  %652 = reshape(%650, newshape=[975, 1]) /* ty=Tensor[(975, 1), float32] */;
  %653 = @func_2034(%651, %652) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */;
  %654 = @func_16406() /* ty=Tensor[(13, 5, 15), float32] */;
  %655 = %644.2;
  %656 = %647.0;
  %657 = %653.6;
  (%654, %649, %655, meta[relay.Constant][44] /* ty=Tensor[(120), int64] */, %var_16796, %var_16797, %656, %var_16800, %657, %var_16808)
}

def @func_14992() -> (Tensor[(975), float32],) {
  @func_14990() /* ty=(Tensor[(975), float32],) */
}

def @func_2038(%var_2036: Tensor[(6, 8, 16), int8], %var_2037: Tensor[(975, 1), float32]) -> (Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) {
  @func_2034(%var_2036, %var_2037) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */
}

def @func_17313() -> (Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) {
  %658 = @func_14990() /* ty=(Tensor[(975), float32],) */;
  %659 = @func_15948() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %660 = @func_16695() /* ty=Tensor[(12, 6, 11), float64] */;
  %661 = %658.0;
  %662 = %659.0;
  (%660, %661, %662)
}

def @func_14343() -> (Tensor[(546), int64], Tensor[(7, 16, 3), bool], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(14, 8, 3), uint8], Tensor[(12, 6, 11), float64]) {
  @func_14341() /* ty=(Tensor[(546), int64], Tensor[(7, 16, 3), bool], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(14, 8, 3), uint8], Tensor[(12, 6, 11), float64]) */
}

def @func_13472(%var_13471: Tensor[(280), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) {
  %672 = fn (%var_13424: Tensor[(280), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) {
    %663 = cast(%var_13424, dtype="float64") /* ty=Tensor[(280), float64] */;
    %664 = cast(%var_13424, dtype="float64") /* ty=Tensor[(280), float64] */;
    %665 = cast(meta[relay.Constant][45] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
    %666 = reshape(%663, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
    %667 = reshape(%664, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float64] */;
    %668 = reshape(%665, newshape=[400]) /* ty=Tensor[(400), uint8] */;
    %669 = @func_2670(%666, %667, %668) /* ty=(Tensor[(7, 10, 4), float64], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
    %670 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
    %671 = %669.3;
    (%670, %671, %var_13424, meta[relay.Constant][45] /* ty=Tensor[(400), uint8] */)
  };
  %672(%var_13471) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) */
}

def @func_16025(%var_15989: Tensor[(10, 1690), bool], %var_16018: Tensor[(84), int8]) -> (Tensor[(168), int8], Tensor[(280), float64], Tensor[(280), float64], Tensor[(10, 1690), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8]) {
  %673 = @func_14061() /* ty=(Tensor[(15, 4, 16), float64], Tensor[(1690), float32], Tensor[(7, 6, 13), int64], Tensor[(546), int64], Tensor[(12, 6, 11), float64], Tensor[(16, 12, 6), bool], Tensor[(1152), int32], Tensor[(168), int8], Tensor[(8, 16, 15), float64]) */;
  %674 = cast(meta[relay.Constant][46] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %675 = reshape(%674, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %676 = @func_13470(%675) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) */;
  %677 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 1690), float32] */, dtype="float32") /* ty=Tensor[(1, 1690), float32] */;
  %678 = reshape(%677, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %679 = @func_9294(%678) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */;
  %680 = %679.0;
  %681 = cast(%680, dtype="bool") /* ty=Tensor[(13, 13, 10), bool] */;
  %682 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(1, 1690), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %683 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 1690), float32] */, dtype="bool") /* ty=Tensor[(1, 1690), bool] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %685 = less_equal(%683, %684) /* ty=Tensor[(?, 1690), bool] */;
  %686 = cast(%685, dtype="bool") /* ty=Tensor[(?, 1690), bool] */;
  %687 = cast(%var_15989, dtype="bool") /* ty=Tensor[(10, 1690), bool] */;
  %688 = cast(%var_16018, dtype="int8") /* ty=Tensor[(84), int8] */;
  %689 = %673.7;
  %690 = cast(%689, dtype="int8") /* ty=Tensor[(168), int8] */;
  %691 = reshape(%688, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %692 = reshape(%690, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
  %693 = %676.2;
  %694 = equal(%686, %687) /* ty=Tensor[(10, 1690), bool] */;
  %695 = @func_4833(%691, %692) /* ty=Tensor[(2, 6, 14), int8] */;
  (%689, %693, meta[relay.Constant][46] /* ty=Tensor[(280), float64] */, %694, %695, %var_16018)
}

def @func_16895() -> (Tensor[(975), float32], Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) {
  %696 = @func_14990() /* ty=(Tensor[(975), float32],) */;
  %697 = %696.0;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(975), float32] */;
  %699 = reshape(%698, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %700 = @func_13081(%699) /* ty=(Tensor[(13, 5, 15), uint8], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(14, 3, 14), float64]) */;
  %701 = @func_16552() /* ty=Tensor[(12, 6, 11), float64] */;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %703 = %700.4;
  %704 = sinh(%702) /* ty=Tensor[(12, 6, 11), float64] */;
  (%697, %703, %704)
}

def @func_16667() -> (Tensor[(6, 15, 4), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  %705 = @func_16173() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %706 = cast(meta[relay.Constant][48] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %707 = cast(meta[relay.Constant][48] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %708 = reshape(%706, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %709 = reshape(%707, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %710 = @func_1283(%708, %709) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %711 = %705.0;
  %712 = %710.0;
  (%711, %712, meta[relay.Constant][48] /* ty=Tensor[(630), int8] */)
}

def @func_17429(%var_17427: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), uint16], Tensor[(1, 140), uint32], Tensor[(1440), int8], Tensor[(1690), float32]) {
  @func_17426(%var_17427) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), uint16], Tensor[(1, 140), uint32], Tensor[(1440), int8], Tensor[(1690), float32]) */
}

def @func_17742() -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64]) {
  %716 = fn () -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64]) {
    %713 = @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %714 = %713.0;
    %715 = @func_16123() /* ty=Tensor[(12, 6, 11), float64] */;
    (%714, %715)
  };
  %716() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64]) */
}

def @func_19448() -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32]) {
  %717 = @func_16502() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) */;
  %718 = @func_17071() /* ty=Tensor[(12, 6, 11), float64] */;
  %719 = %717.0;
  (%718, %719)
}

def @func_18719(%var_18717: Tensor[(80, 2), int16]) -> (Tensor[(13, 5, 15), float32], Tensor[(5, 8, 4), int16], Tensor[(80, 2), int16]) {
  @func_18716(%var_18717) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(5, 8, 4), int16], Tensor[(80, 2), int16]) */
}

def @func_17712(%var_17696: Tensor[(6, 8, 15), int16], %var_17697: Tensor[(6, 8, 15), int16]) -> (Tensor[(6, 8, 15), int16], Tensor[(13, 5, 15), float32]) {
  %720 = cast(%var_17697, dtype="int16") /* ty=Tensor[(6, 8, 15), int16] */;
  %721 = shape_of(%var_17696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%var_17696, dtype="int16") /* ty=Tensor[(6, 8, 15), int16] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %724 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %725 = subtract(%722, %723) /* ty=Tensor[(6, 8, 15), int16] */;
  %726 = %724.0;
  (%725, %726)
}

def @func_14855() -> Tensor[(12, 6, 11), float64] {
  %727 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %727.0
}

def @func_18965() -> Tensor[(975), float32] {
  %729 = fn () -> Tensor[(975), float32] {
    %728 = @func_15463() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
    %728.1
  };
  %729() /* ty=Tensor[(975), float32] */
}

def @func_14454() -> (Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) {
  @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */
}

def @func_16630(%var_16628: Tensor[(8, 240), float32], %var_16629: Tensor[(4, 48), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(8, 240), float32], Tensor[(12, 6, 11), float64], Tensor[(4, 48), float32]) {
  @func_16626(%var_16628, %var_16629) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(8, 16, 15), float64], Tensor[(8, 240), float32], Tensor[(12, 6, 11), float64], Tensor[(4, 48), float32]) */
}

def @func_19365() -> Tensor[(13, 5, 15), float32] {
  @func_19363() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_16502() -> (Tensor[(13, 5, 15), float32], Tensor[(12, 6, 11), float64]) {
  %730 = @func_15775() /* ty=(Tensor[(975), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32]) */;
  %731 = %730.2;
  %732 = @func_15908() /* ty=Tensor[(12, 6, 11), float64] */;
  (%731, %732)
}

def @func_16386(%var_16384: Tensor[(192), float32], %var_16385: Tensor[(975), float32]) -> (Tensor[(12, 6, 11), float64], Tensor[(3, 16, 4), float32], Tensor[(192), float32], Tensor[(975), float32]) {
  %741 = fn (%var_16373: Tensor[(192), float32], %var_16374: Tensor[(975), float32]) -> (Tensor[(12, 6, 11), float64], Tensor[(3, 16, 4), float32], Tensor[(192), float32], Tensor[(975), float32]) {
    %733 = @func_15045() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %734 = cast(%var_16373, dtype="float32") /* ty=Tensor[(192), float32] */;
    %735 = cast(%var_16374, dtype="float32") /* ty=Tensor[(975), float32] */;
    %736 = reshape(%734, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
    %737 = reshape(%735, newshape=[975]) /* ty=Tensor[(975), float32] */;
    %738 = @func_2115(%736, %737) /* ty=(Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) */;
    %739 = %733.0;
    %740 = %738.0;
    (%739, %740, %var_16373, %var_16374)
  };
  %741(%var_16384, %var_16385) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(3, 16, 4), float32], Tensor[(192), float32], Tensor[(975), float32]) */
}

def @func_16824(%var_16820: Tensor[(4, 180), int64], %var_16821: Tensor[(1440), int8], %var_16822: Tensor[(39, 5), float32], %var_16823: Tensor[(768), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(1440), int8], Tensor[(120), int64], Tensor[(4, 180), int64], Tensor[(1440), int8], Tensor[(3, 5, 13), float32], Tensor[(39, 5), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8]) {
  @func_16818(%var_16820, %var_16821, %var_16822, %var_16823) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(1440), int8], Tensor[(120), int64], Tensor[(4, 180), int64], Tensor[(1440), int8], Tensor[(3, 5, 13), float32], Tensor[(39, 5), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8]) */
}

def @func_9297(%var_9295: Tensor[(13, 13, 10), float32]) -> (Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) {
  @func_9294(%var_9295) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */
}

def @func_13751() -> Tensor[(15, 4, 16), float64] {
  @func_13749() /* ty=Tensor[(15, 4, 16), float64] */
}

def @func_17914() -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) {
  %742 = @func_15088() /* ty=Tensor[(13, 5, 15), float32] */;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %744 = @func_15684() /* ty=Tensor[(13, 5, 15), float32] */;
  %745 = tan(%743) /* ty=Tensor[(13, 5, 15), float32] */;
  (%744, %745)
}

def @func_15124() -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) {
  %750 = fn () -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) {
    %746 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %747 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
    %748 = %746.0;
    %749 = %747.1;
    (%748, %749)
  };
  %750() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) */
}

def @func_19423() -> (Tensor[(13, 5, 15), float64], Tensor[(12, 6, 11), float64]) {
  %751 = @func_19007() /* ty=(Tensor[(13, 5, 15), float64],) */;
  %752 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %753 = %751.0;
  %754 = %752.0;
  (%753, %754)
}

def @func_15424(%var_15422: Tensor[(5, 28), uint32]) -> (Tensor[(13, 5, 15), uint16], Tensor[(5, 7, 4), float32], Tensor[(5, 28), float64]) {
  @func_15421(%var_15422) /* ty=(Tensor[(13, 5, 15), uint16], Tensor[(5, 7, 4), float32], Tensor[(5, 28), float64]) */
}

def @func_15776() -> (Tensor[(975), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32]) {
  %760 = fn () -> (Tensor[(975), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32]) {
    %755 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
    %756 = @func_15754() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %757 = %755.2;
    %758 = @func_14560() /* ty=Tensor[(6, 15, 4), float32] */;
    %759 = %756.0;
    (%757, %758, %759)
  };
  %760() /* ty=(Tensor[(975), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32]) */
}

def @func_15698() -> Tensor[(975), float32] {
  @func_15696() /* ty=Tensor[(975), float32] */
}

def @func_19529(%var_19527: Tensor[(5, 15, 7), float32]) -> (Tensor[(5, 15, 7), float32], Tensor[(13, 5, 15), float32]) {
  @func_19526(%var_19527) /* ty=(Tensor[(5, 15, 7), float32], Tensor[(13, 5, 15), float32]) */
}

def @func_16554() -> Tensor[(12, 6, 11), float64] {
  @func_16552() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_17510() -> Tensor[(12, 6, 11), float64] {
  %761 = fn () -> Tensor[(12, 6, 11), float64] {
    @func_17071() /* ty=Tensor[(12, 6, 11), float64] */
  };
  %761() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_19007() -> (Tensor[(13, 5, 15), float64],) {
  %762 = @func_17914() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) */;
  %763 = %762.0;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(13, 5, 15), float64] */;
  %765 = atanh(%764) /* ty=Tensor[(13, 5, 15), float64] */;
  (%765,)
}

def @func_11198(%var_11197: Tensor[(14, 10, 14), int8]) -> (Tensor[(14, 10, 14), bool],) {
  %771 = fn (%var_11186: Tensor[(14, 10, 14), int8]) -> (Tensor[(14, 10, 14), bool],) {
    %766 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 10, 14), int8] */, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
    %767 = shape_of(%var_11186, dtype="int32") /* ty=Tensor[(3), int32] */;
    %768 = cast(%var_11186, dtype="bool") /* ty=Tensor[(14, 10, 14), bool] */;
    %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %770 = less(%768, %769) /* ty=Tensor[(14, 10, 14), bool] */;
    (%770,)
  };
  %771(%var_11197) /* ty=(Tensor[(14, 10, 14), bool],) */
}

def @func_20064() -> (Tensor[(13, 5, 15), float32],) {
  %772 = @func_16452() /* ty=Tensor[(13, 5, 15), float32] */;
  (%772,)
}

def @func_19746() -> Tensor[(12, 6, 11), float64] {
  %773 = @func_19423() /* ty=(Tensor[(13, 5, 15), float64], Tensor[(12, 6, 11), float64]) */;
  %773.1
}

def @func_17716(%var_17714: Tensor[(6, 8, 15), int16], %var_17715: Tensor[(6, 8, 15), int16]) -> (Tensor[(6, 8, 15), int16], Tensor[(13, 5, 15), float32]) {
  @func_17712(%var_17714, %var_17715) /* ty=(Tensor[(6, 8, 15), int16], Tensor[(13, 5, 15), float32]) */
}

def @func_11964(%var_11962: Tensor[(10, 10, 8), float64], %var_11963: Tensor[(1920), float32]) -> (Tensor[(10, 10, 8), int32], Tensor[(5, 6, 1), float32], Tensor[(1920), float32]) {
  @func_11960(%var_11962, %var_11963) /* ty=(Tensor[(10, 10, 8), int32], Tensor[(5, 6, 1), float32], Tensor[(1920), float32]) */
}

def @func_18148() -> Tensor[(12, 6, 11), float64] {
  @func_16552() /* ty=Tensor[(12, 6, 11), float64] */
}

def @main(%var_20123: Tensor[(5, 6, 7), float64], %var_20124: Tensor[(5, 6, 7), float64]) -> Tensor[(5, 6, 7), bool] {
  %774 = cast(%var_20124, dtype="bool") /* ty=Tensor[(5, 6, 7), bool] */;
  %775 = shape_of(%var_20123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_20123, dtype="bool") /* ty=Tensor[(5, 6, 7), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%776, %777) /* ty=Tensor[(5, 6, 7), bool] */
}

def @func_12988() -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
  %784 = fn () -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
    %778 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 6, 11), float64] */, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
    %779 = cast(meta[relay.Constant][51] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
    %780 = reshape(%779, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
    %781 = @func_1225(%780) /* ty=(Tensor[(13, 5, 15), float32],) */;
    %782 = asin(%778) /* ty=Tensor[(12, 6, 11), float64] */;
    %783 = %781.0;
    (%782, %783, meta[relay.Constant][51] /* ty=Tensor[(975), float32] */)
  };
  %784() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */
}

def @func_16407() -> Tensor[(13, 5, 15), float32] {
  %786 = fn () -> Tensor[(13, 5, 15), float32] {
    %785 = @func_15754() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %785.0
  };
  %786() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_16461() -> Tensor[(13, 5, 15), float32] {
  %787 = fn () -> Tensor[(13, 5, 15), float32] {
    @func_16452() /* ty=Tensor[(13, 5, 15), float32] */
  };
  %787() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_13362() -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
  @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */
}

def @func_16552() -> Tensor[(12, 6, 11), float64] {
  %788 = @func_14169() /* ty=(Tensor[(12, 6, 11), float64],) */;
  %788.0
}

def @func_15756() -> (Tensor[(13, 5, 15), float32],) {
  @func_15754() /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_17686() -> Tensor[(12, 6, 11), float64] {
  @func_17071() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_2363(%var_2357: bool, %var_2358: Tensor[(2, 11, 1), bool]) -> (Tensor[(2, 11, 1), bool],) {
  %789 = cast(%var_2357, dtype="bool") /* ty=bool */;
  %790 = cast(%var_2358, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %791 = logical_and(%789, %790) /* ty=Tensor[(2, 11, 1), bool] */;
  (%791,)
}

def @func_15463() -> (Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
  %792 = @func_15123() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32]) */;
  %793 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %794 = %792.0;
  %795 = %793.0;
  (%794, %795)
}

def @func_16235(%var_16233: Tensor[(1, 630), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(975), float32], Tensor[(280), float64], Tensor[(280), float64], Tensor[(9, 7, 10), int8], Tensor[(1, 630), int8]) {
  @func_16232(%var_16233) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(975), float32], Tensor[(280), float64], Tensor[(280), float64], Tensor[(9, 7, 10), int8], Tensor[(1, 630), int8]) */
}

def @func_19066() -> Tensor[(13, 5, 15), float32] {
  %797 = fn () -> Tensor[(13, 5, 15), float32] {
    %796 = @func_16151() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %796.0
  };
  %797() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_19720() -> (Tensor[(12, 6, 11), float64],) {
  @func_19718() /* ty=(Tensor[(12, 6, 11), float64],) */
}

def @func_18716(%var_18714: Tensor[(80, 2), int16]) -> (Tensor[(13, 5, 15), float32], Tensor[(5, 8, 4), int16], Tensor[(80, 2), int16]) {
  %798 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %799 = cast(%var_18714, dtype="int16") /* ty=Tensor[(80, 2), int16] */;
  %800 = reshape(%799, newshape=[5, 8, 4]) /* ty=Tensor[(5, 8, 4), int16] */;
  %801 = %798.0;
  %802 = @func_4470(%800) /* ty=Tensor[(5, 8, 4), int16] */;
  (%801, %802, %var_18714)
}

def @func_6194(%var_6192: Tensor[(14, 8, 3), uint8], %var_6193: Tensor[(14, 8, 3), uint8]) -> (Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) {
  %810 = fn (%var_6175: Tensor[(14, 8, 3), uint8], %var_6176: Tensor[(14, 8, 3), uint8]) -> (Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) {
    %803 = cast(%var_6176, dtype="uint8") /* ty=Tensor[(14, 8, 3), uint8] */;
    %804 = shape_of(%var_6175, dtype="int32") /* ty=Tensor[(3), int32] */;
    %805 = cast(%var_6175, dtype="uint8") /* ty=Tensor[(14, 8, 3), uint8] */;
    %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %807 = cast(%var_6176, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
    %808 = add(%805, %806) /* ty=Tensor[(14, 8, 3), uint8] */;
    %809 = sigmoid(%807) /* ty=Tensor[(14, 8, 3), float64] */;
    (%808, %809)
  };
  %810(%var_6192, %var_6193) /* ty=(Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) */
}

def @func_14621(%var_14604: Tensor[(8, 144), float64], %var_14610: Tensor[(8, 144), float64]) -> (Tensor[(13, 5, 15), float32], Tensor[(8, 144), float64], Tensor[(6, 12, 16), float64]) {
  %811 = @func_14241() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %812 = cast(%var_14610, dtype="float64") /* ty=Tensor[(8, 144), float64] */;
  %813 = shape_of(%var_14604, dtype="int32") /* ty=Tensor[(2), int32] */;
  %814 = cast(%var_14604, dtype="float64") /* ty=Tensor[(8, 144), float64] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %816 = cast(%var_14604, dtype="float64") /* ty=Tensor[(8, 144), float64] */;
  %817 = cast(%var_14604, dtype="float64") /* ty=Tensor[(8, 144), float64] */;
  %818 = reshape(%816, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %819 = reshape(%817, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %820 = @func_10161(%818, %819) /* ty=(Tensor[(6, 12, 16), float64],) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %823 = %811.0;
  %824 = mod(%814, %815) /* ty=Tensor[(8, 144), float64] */;
  %825 = tan(%822) /* ty=Tensor[(6, 12, 16), float64] */;
  (%823, %824, %825)
}

def @func_13567() -> (Tensor[(13, 5, 15), float32],) {
  @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_8750(%var_8721: Tensor[(16, 12, 6), int32], %var_8722: Tensor[(16, 12, 6), int32], %var_8742: Tensor[(168), int8]) -> (Tensor[(16, 12, 6), bool], Tensor[(2, 6, 14), int8], Tensor[(84), int8], Tensor[(168), int8]) {
  %826 = cast(%var_8722, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %827 = shape_of(%var_8721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%var_8721, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %830 = cast(meta[relay.Constant][52] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %831 = cast(%var_8742, dtype="int8") /* ty=Tensor[(168), int8] */;
  %832 = reshape(%830, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
  %833 = reshape(%831, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
  %834 = less(%828, %829) /* ty=Tensor[(16, 12, 6), bool] */;
  %835 = @func_4833(%832, %833) /* ty=Tensor[(2, 6, 14), int8] */;
  (%834, %835, meta[relay.Constant][52] /* ty=Tensor[(84), int8] */, %var_8742)
}

def @func_17871() -> (Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) {
  %842 = fn () -> (Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) {
    %836 = @func_16667() /* ty=(Tensor[(6, 15, 4), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
    %837 = @func_15045() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %838 = %837.0;
    %839 = cast(%838, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
    %840 = %836.1;
    %841 = exp(%839) /* ty=Tensor[(12, 6, 11), float64] */;
    (%840, %841)
  };
  %842() /* ty=(Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) */
}

def @func_11111(%var_11109: Tensor[(5, 7, 4), uint32], %var_11110: Tensor[(5, 7, 4), uint32]) -> (Tensor[(5, 7, 4), float32],) {
  %850 = fn (%var_11084: Tensor[(5, 7, 4), uint32], %var_11085: Tensor[(5, 7, 4), uint32]) -> (Tensor[(5, 7, 4), float32],) {
    %843 = cast(%var_11085, dtype="uint32") /* ty=Tensor[(5, 7, 4), uint32] */;
    %844 = shape_of(%var_11084, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(%var_11084, dtype="uint32") /* ty=Tensor[(5, 7, 4), uint32] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %847 = bitwise_or(%845, %846) /* ty=Tensor[(5, 7, 4), uint32] */;
    %848 = cast(%847, dtype="float32") /* ty=Tensor[(5, 7, 4), float32] */;
    %849 = exp(%848) /* ty=Tensor[(5, 7, 4), float32] */;
    (%849,)
  };
  %850(%var_11109, %var_11110) /* ty=(Tensor[(5, 7, 4), float32],) */
}

def @func_16232(%var_16217: Tensor[(1, 630), int8]) -> (Tensor[(13, 5, 15), float32], Tensor[(975), float32], Tensor[(280), float64], Tensor[(280), float64], Tensor[(9, 7, 10), int8], Tensor[(1, 630), int8]) {
  %851 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %852 = cast(meta[relay.Constant][53] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %853 = reshape(%852, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %854 = @func_13470(%853) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(9, 7, 10), int8], Tensor[(280), float64], Tensor[(400), uint8]) */;
  %855 = cast(%var_16217, dtype="int8") /* ty=Tensor[(1, 630), int8] */;
  %856 = cast(%var_16217, dtype="int8") /* ty=Tensor[(1, 630), int8] */;
  %857 = reshape(%855, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %858 = reshape(%856, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %859 = @func_1283(%857, %858) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %860 = %851.3;
  %861 = @func_13485() /* ty=Tensor[(975), float32] */;
  %862 = %854.2;
  %863 = %859.0;
  (%860, %861, %862, meta[relay.Constant][53] /* ty=Tensor[(280), float64] */, %863, %var_16217)
}

def @func_20066() -> (Tensor[(13, 5, 15), float32],) {
  @func_20064() /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_14926(%var_14901: Tensor[(1152), float64], %var_14916: Tensor[(768), int8], %var_14917: Tensor[(975), float32], %var_14923: Tensor[(4, 48), float32]) -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(5, 6, 1), float32], Tensor[(96, 20), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(975), float32], Tensor[(975), float32], Tensor[(4, 48), float32]) {
  %864 = cast(%var_14901, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %865 = cast(%var_14901, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %866 = reshape(%864, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %867 = reshape(%865, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %868 = @func_10161(%866, %867) /* ty=(Tensor[(6, 12, 16), float64],) */;
  %869 = cast(meta[relay.Constant][54] /* ty=Tensor[(96, 20), float32] */, dtype="float32") /* ty=Tensor[(96, 20), float32] */;
  %870 = reshape(%869, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %871 = @func_8904(%870) /* ty=(Tensor[(5, 6, 1), float32], Tensor[(8, 16, 15), float64], Tensor[(1920), float32]) */;
  %872 = cast(%var_14916, dtype="int8") /* ty=Tensor[(768), int8] */;
  %873 = cast(%var_14917, dtype="float32") /* ty=Tensor[(975), float32] */;
  %874 = reshape(%872, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), int8] */;
  %875 = reshape(%873, newshape=[975, 1]) /* ty=Tensor[(975, 1), float32] */;
  %876 = @func_2034(%874, %875) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */;
  %877 = cast(%var_14923, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %878 = %876.1;
  %879 = cast(%878, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %880 = reshape(%877, newshape=[3, 16, 4]) /* ty=Tensor[(3, 16, 4), float32] */;
  %881 = reshape(%879, newshape=[975]) /* ty=Tensor[(975), float32] */;
  %882 = @func_2115(%880, %881) /* ty=(Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) */;
  %883 = @func_13780() /* ty=Tensor[(12, 6, 11), float64] */;
  %884 = @func_14400() /* ty=Tensor[(12, 6, 11), float64] */;
  %885 = %868.0;
  %886 = %871.0;
  %887 = %882.3;
  (%883, %884, %885, %var_14901, %886, meta[relay.Constant][54] /* ty=Tensor[(96, 20), float32] */, %878, %var_14916, %var_14917, %887, %var_14923)
}

def @func_5140(%var_5137: Tensor[(12, 10, 1), int64], %var_5138: Tensor[(12, 10, 6), int64], %var_5139: Tensor[(1440), int8]) -> (Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) {
  %897 = fn (%var_5122: Tensor[(12, 10, 1), int64], %var_5123: Tensor[(12, 10, 6), int64], %var_5131: Tensor[(1440), int8]) -> (Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) {
    %888 = cast(%var_5122, dtype="int64") /* ty=Tensor[(12, 10, 1), int64] */;
    %889 = cast(%var_5123, dtype="int64") /* ty=Tensor[(12, 10, 6), int64] */;
    %890 = cast(%var_5122, dtype="int8") /* ty=Tensor[(12, 10, 1), int8] */;
    %891 = cast(%var_5131, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %892 = reshape(%890, newshape=[12, 1, 10]) /* ty=Tensor[(12, 1, 10), int8] */;
    %893 = reshape(%891, newshape=[12, 12, 10]) /* ty=Tensor[(12, 12, 10), int8] */;
    %894 = @func_2444(%892, %893) /* ty=(Tensor[(12, 12, 10), int8],) */;
    %895 = subtract(%888, %889) /* ty=Tensor[(12, 10, 6), int64] */;
    %896 = %894.0;
    (%895, %896, %var_5131)
  };
  %897(%var_5137, %var_5138, %var_5139) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */
}

def @func_19450() -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32]) {
  @func_19448() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32]) */
}

def @func_16290() -> Tensor[(12, 6, 11), float64] {
  @func_16288() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_15290(%var_15288: Tensor[(169, 10), float32], %var_15289: Tensor[(169, 10), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(8, 16, 15), float64], Tensor[(169, 10), uint64], Tensor[(169, 10), float32]) {
  %919 = fn (%var_15267: Tensor[(169, 10), float32], %var_15272: Tensor[(169, 10), float32]) -> (Tensor[(13, 5, 15), float32], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(8, 16, 15), float64], Tensor[(169, 10), uint64], Tensor[(169, 10), float32]) {
    %898 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %899 = cast(meta[relay.Constant][55] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
    %900 = cast(meta[relay.Constant][56] /* ty=Tensor[(720), int64] */, dtype="int64") /* ty=Tensor[(720), int64] */;
    %901 = cast(meta[relay.Constant][57] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %902 = reshape(%899, newshape=[12, 10, 1]) /* ty=Tensor[(12, 10, 1), int64] */;
    %903 = reshape(%900, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), int64] */;
    %904 = reshape(%901, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
    %905 = @func_5136(%902, %903, %904) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */;
    %906 = cast(%var_15267, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
    %907 = reshape(%906, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
    %908 = @func_9294(%907) /* ty=(Tensor[(13, 13, 10), float32], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32]) */;
    %909 = cast(%var_15272, dtype="uint64") /* ty=Tensor[(169, 10), uint64] */;
    %910 = shape_of(%var_15267, dtype="int32") /* ty=Tensor[(2), int32] */;
    %911 = cast(%var_15267, dtype="uint64") /* ty=Tensor[(169, 10), uint64] */;
    %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %913 = cast(%var_15272, dtype="float32") /* ty=Tensor[(169, 10), float32] */;
    %914 = %898.0;
    %915 = %905.0;
    %916 = %908.1;
    %917 = right_shift(%911, %912) /* ty=Tensor[(169, 10), uint64] */;
    %918 = acos(%913) /* ty=Tensor[(169, 10), float32] */;
    (%914, %915, meta[relay.Constant][55] /* ty=Tensor[(120), int64] */, meta[relay.Constant][56] /* ty=Tensor[(720), int64] */, meta[relay.Constant][57] /* ty=Tensor[(1440), int8] */, %916, %917, %918)
  };
  %919(%var_15288, %var_15289) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(8, 16, 15), float64], Tensor[(169, 10), uint64], Tensor[(169, 10), float32]) */
}

def @func_13921(%var_13917: bool, %var_13918: Tensor[(22), bool], %var_13919: Tensor[(273), float64], %var_13920: Tensor[(280), float64]) -> (Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], bool, Tensor[(22), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64], Tensor[(1920), float32], Tensor[(40, 20), float64], Tensor[(24, 80), float32], Tensor[(2, 11, 6), bool], Tensor[(7, 13, 3), float64], Tensor[(2, 11, 66), uint8], Tensor[(400), uint8], Tensor[(280), float64]) {
  @func_13915(%var_13917, %var_13918, %var_13919, %var_13920) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], bool, Tensor[(22), bool], Tensor[(7, 13, 3), float64], Tensor[(273), float64], Tensor[(1920), float32], Tensor[(40, 20), float64], Tensor[(24, 80), float32], Tensor[(2, 11, 6), bool], Tensor[(7, 13, 3), float64], Tensor[(2, 11, 66), uint8], Tensor[(400), uint8], Tensor[(280), float64]) */
}

def @func_16745() -> (Tensor[(630), int8], Tensor[(1440), int8], Tensor[(720), int64]) {
  @func_16743() /* ty=(Tensor[(630), int8], Tensor[(1440), int8], Tensor[(720), int64]) */
}

def @func_15023(%var_15021: Tensor[(8), int64]) -> (Tensor[(12, 6, 11), float64], Tensor[(4, 13, 2), bool], Tensor[(8), int64]) {
  @func_15020(%var_15021) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(4, 13, 2), bool], Tensor[(8), int64]) */
}

def @func_18616() -> (Tensor[(1440), int8], Tensor[(6, 15, 4), float32]) {
  %924 = fn () -> (Tensor[(1440), int8], Tensor[(6, 15, 4), float32]) {
    %920 = @func_17449() /* ty=(Tensor[(1440), int8],) */;
    %921 = @func_16173() /* ty=(Tensor[(6, 15, 4), float32],) */;
    %922 = %920.0;
    %923 = %921.0;
    (%922, %923)
  };
  %924() /* ty=(Tensor[(1440), int8], Tensor[(6, 15, 4), float32]) */
}

def @func_14932(%var_14928: Tensor[(1152), float64], %var_14929: Tensor[(768), int8], %var_14930: Tensor[(975), float32], %var_14931: Tensor[(4, 48), float32]) -> (Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(5, 6, 1), float32], Tensor[(96, 20), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(975), float32], Tensor[(975), float32], Tensor[(4, 48), float32]) {
  @func_14926(%var_14928, %var_14929, %var_14930, %var_14931) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(5, 6, 1), float32], Tensor[(96, 20), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(975), float32], Tensor[(975), float32], Tensor[(4, 48), float32]) */
}

def @func_1228(%var_1226: Tensor[(13, 5, 15), float32]) -> (Tensor[(13, 5, 15), float32],) {
  @func_1225(%var_1226) /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_18121() -> Tensor[(13, 5, 15), float32] {
  @func_18119() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_14625(%var_14623: Tensor[(8, 144), float64], %var_14624: Tensor[(8, 144), float64]) -> (Tensor[(13, 5, 15), float32], Tensor[(8, 144), float64], Tensor[(6, 12, 16), float64]) {
  @func_14621(%var_14623, %var_14624) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(8, 144), float64], Tensor[(6, 12, 16), float64]) */
}

def @func_17367() -> (Tensor[(13, 5, 15), float32],) {
  @func_17365() /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_18492() -> Tensor[(13, 5, 15), float64] {
  %925 = @func_17365() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %926 = %925.0;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(13, 5, 15), float64] */;
  sigmoid(%927) /* ty=Tensor[(13, 5, 15), float64] */
}

def @func_1130(%var_1129: Tensor[(10, 5, 8), uint8]) -> Tensor[(10, 5, 8), uint8] {
  %932 = fn (%var_1123: Tensor[(10, 5, 8), uint8]) -> Tensor[(10, 5, 8), uint8] {
    %928 = cast(%var_1123, dtype="uint8") /* ty=Tensor[(10, 5, 8), uint8] */;
    %929 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(10, 5, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %930 = cast(meta[relay.Constant][58] /* ty=Tensor[(10, 5, 8), uint8] */, dtype="uint8") /* ty=Tensor[(10, 5, 8), uint8] */;
    %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    multiply(%930, %931) /* ty=Tensor[(10, 5, 8), uint8] */
  };
  %932(%var_1129) /* ty=Tensor[(10, 5, 8), uint8] */
}

def @func_15908() -> Tensor[(12, 6, 11), float64] {
  @func_13017() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_19526(%var_19512: Tensor[(5, 15, 7), float32]) -> (Tensor[(5, 15, 7), float32], Tensor[(13, 5, 15), float32]) {
  %933 = cast(%var_19512, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
  %934 = erf(%933) /* ty=Tensor[(5, 15, 7), float32] */;
  %935 = @func_16711() /* ty=Tensor[(13, 5, 15), float32] */;
  (%934, %935)
}

def @func_19798() -> Tensor[(12, 6, 11), float64] {
  %936 = fn () -> Tensor[(12, 6, 11), float64] {
    @func_16695() /* ty=Tensor[(12, 6, 11), float64] */
  };
  %936() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_17315() -> (Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) {
  @func_17313() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) */
}

def @func_19883() -> (Tensor[(12, 6, 11), float64],) {
  %938 = fn () -> (Tensor[(12, 6, 11), float64],) {
    %937 = @func_16288() /* ty=Tensor[(12, 6, 11), float64] */;
    (%937,)
  };
  %938() /* ty=(Tensor[(12, 6, 11), float64],) */
}

def @func_4833(%var_4815: Tensor[(1, 6, 14), int8], %var_4816: Tensor[(2, 6, 14), int8]) -> Tensor[(2, 6, 14), int8] {
  %939 = cast(%var_4815, dtype="int8") /* ty=Tensor[(1, 6, 14), int8] */;
  %940 = cast(%var_4816, dtype="int8") /* ty=Tensor[(2, 6, 14), int8] */;
  bitwise_and(%939, %940) /* ty=Tensor[(2, 6, 14), int8] */
}

def @func_12009(%var_11975: Tensor[(4, 9, 13), float32]) -> (Tensor[(4, 9, 13), int8],) {
  %941 = cast(%var_11975, dtype="float32") /* ty=Tensor[(4, 9, 13), float32] */;
  %942 = log2(%941) /* ty=Tensor[(4, 9, 13), float32] */;
  %943 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 9, 13), float32] */, dtype="int8") /* ty=Tensor[(4, 9, 13), int8] */;
  %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%942, dtype="int8") /* ty=Tensor[(4, 9, 13), int8] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %947 = right_shift(%945, %946) /* ty=Tensor[(4, 9, 13), int8] */;
  (%947,)
}

def @func_1225(%var_1210: Tensor[(13, 5, 15), float32]) -> (Tensor[(13, 5, 15), float32],) {
  %948 = cast(%var_1210, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
  %949 = log2(%948) /* ty=Tensor[(13, 5, 15), float32] */;
  (%949,)
}

def @func_13019() -> Tensor[(12, 6, 11), float64] {
  @func_13017() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_13360() -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
  %950 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %951 = cast(meta[relay.Constant][60] /* ty=Tensor[(975), float32] */, dtype="float32") /* ty=Tensor[(975), float32] */;
  %952 = reshape(%951, newshape=[13, 5, 15]) /* ty=Tensor[(13, 5, 15), float32] */;
  %953 = @func_13081(%952) /* ty=(Tensor[(13, 5, 15), uint8], Tensor[(8, 16, 15), float64], Tensor[(1920, 1), float32], Tensor[(13, 5, 15), float32], Tensor[(13, 5, 15), float32], Tensor[(588), uint16], Tensor[(14, 3, 14), float64]) */;
  %954 = %950.0;
  %955 = %953.4;
  (%954, %955, meta[relay.Constant][60] /* ty=Tensor[(975), float32] */)
}

def @func_16695() -> Tensor[(12, 6, 11), float64] {
  @func_15908() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_18150() -> Tensor[(12, 6, 11), float64] {
  @func_18148() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_14562() -> Tensor[(6, 15, 4), float32] {
  @func_14560() /* ty=Tensor[(6, 15, 4), float32] */
}

def @func_3548(%var_3546: uint8, %var_3547: Tensor[(11, 1, 7), uint8]) -> (Tensor[(11, 1, 7), bool], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  @func_3544(%var_3546, %var_3547) /* ty=(Tensor[(11, 1, 7), bool], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */
}

def @func_14341() -> (Tensor[(546), int64], Tensor[(7, 16, 3), bool], Tensor[(336), int16], Tensor[(400), uint8], Tensor[(14, 8, 3), uint8], Tensor[(12, 6, 11), float64]) {
  %956 = @func_14061() /* ty=(Tensor[(15, 4, 16), float64], Tensor[(1690), float32], Tensor[(7, 6, 13), int64], Tensor[(546), int64], Tensor[(12, 6, 11), float64], Tensor[(16, 12, 6), bool], Tensor[(1152), int32], Tensor[(168), int8], Tensor[(8, 16, 15), float64]) */;
  %957 = cast(meta[relay.Constant][61] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %958 = cast(meta[relay.Constant][61] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %959 = cast(meta[relay.Constant][62] /* ty=Tensor[(400), uint8] */, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %960 = reshape(%957, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int16] */;
  %961 = reshape(%958, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int16] */;
  %962 = reshape(%959, newshape=[400]) /* ty=Tensor[(400), uint8] */;
  %963 = @func_10565(%960, %961, %962) /* ty=(Tensor[(7, 16, 3), int16], Tensor[(7, 16, 3), bool], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(7, 16, 3), float32]) */;
  %964 = %963.1;
  %965 = cast(%964, dtype="uint8") /* ty=Tensor[(7, 16, 3), uint8] */;
  %966 = cast(meta[relay.Constant][61] /* ty=Tensor[(336), int16] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %967 = reshape(%965, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
  %968 = reshape(%966, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), uint8] */;
  %969 = @func_6191(%967, %968) /* ty=(Tensor[(14, 8, 3), uint8], Tensor[(14, 8, 3), float64]) */;
  %970 = %956.3;
  %971 = %969.0;
  %972 = @func_13780() /* ty=Tensor[(12, 6, 11), float64] */;
  (%970, %964, meta[relay.Constant][61] /* ty=Tensor[(336), int16] */, meta[relay.Constant][62] /* ty=Tensor[(400), uint8] */, %971, %972)
}

def @func_14787(%var_14763: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32], Tensor[(12, 6, 11), float64]) {
  %973 = cast(%var_14763, dtype="float32") /* ty=Tensor[(12, 16, 12), float32] */;
  %974 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %975 = cosh(%973) /* ty=Tensor[(12, 16, 12), float32] */;
  %976 = %974.0;
  (%975, %976)
}

def @func_16743() -> (Tensor[(630), int8], Tensor[(1440), int8], Tensor[(720), int64]) {
  %977 = @func_16667() /* ty=(Tensor[(6, 15, 4), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %978 = cast(meta[relay.Constant][63] /* ty=Tensor[(720), int64] */, dtype="int64") /* ty=Tensor[(720), int64] */;
  %979 = reshape(%978, newshape=[720, 1]) /* ty=Tensor[(720, 1), int64] */;
  %980 = @func_13527(%979) /* ty=(Tensor[(975), float32], Tensor[(4, 13, 2), bool], Tensor[(8, 1), int64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720, 1), int64], Tensor[(1440), int8]) */;
  %981 = %977.2;
  %982 = %980.9;
  (%981, %982, meta[relay.Constant][63] /* ty=Tensor[(720), int64] */)
}

def @func_17365() -> (Tensor[(13, 5, 15), float32],) {
  %983 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %984 = %983.3;
  (%984,)
}

def @func_15948() -> (Tensor[(6, 15, 4), float32],) {
  %985 = @func_14560() /* ty=Tensor[(6, 15, 4), float32] */;
  (%985,)
}

def @func_15471() -> Tensor[(13, 5, 15), float32] {
  %986 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
  %986.0
}

def @func_2118(%var_2116: Tensor[(3, 16, 4), float32], %var_2117: Tensor[(975), float32]) -> (Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) {
  %995 = fn (%var_2091: Tensor[(3, 16, 4), float32], %var_2097: Tensor[(975), float32]) -> (Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) {
    %987 = cast(%var_2091, dtype="float32") /* ty=Tensor[(3, 16, 4), float32] */;
    %988 = cast(meta[relay.Constant][64] /* ty=Tensor[(768), int8] */, dtype="int8") /* ty=Tensor[(768), int8] */;
    %989 = cast(%var_2097, dtype="float32") /* ty=Tensor[(975), float32] */;
    %990 = reshape(%988, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), int8] */;
    %991 = reshape(%989, newshape=[975, 1]) /* ty=Tensor[(975, 1), float32] */;
    %992 = @func_2034(%990, %991) /* ty=(Tensor[(6, 8, 16), int8], Tensor[(13, 5, 15), float32], Tensor[(975, 1), float32], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(6, 8, 16), float32], Tensor[(13, 5, 15), float32]) */;
    %993 = asinh(%987) /* ty=Tensor[(3, 16, 4), float32] */;
    %994 = %992.4;
    (%993, %994, meta[relay.Constant][64] /* ty=Tensor[(768), int8] */, %var_2097)
  };
  %995(%var_2116, %var_2117) /* ty=(Tensor[(3, 16, 4), float32], Tensor[(400), uint8], Tensor[(768), int8], Tensor[(975), float32]) */
}

def @func_13565() -> (Tensor[(13, 5, 15), float32],) {
  %996 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %997 = %996.1;
  (%997,)
}

def @func_15088() -> Tensor[(13, 5, 15), float32] {
  %998 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %998.3
}

def @func_17234(%var_17224: Tensor[(588), uint16]) -> (Tensor[(13, 5, 15), float32], Tensor[(6, 15, 4), float32], Tensor[(13, 5, 15), float32], Tensor[(14, 3, 14), uint16], Tensor[(588), uint16], Tensor[(975), float32]) {
  %999 = @func_15948() /* ty=(Tensor[(6, 15, 4), float32],) */;
  %1000 = cast(%var_17224, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %1001 = cast(%var_17224, dtype="uint16") /* ty=Tensor[(588), uint16] */;
  %1002 = reshape(%1000, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), uint16] */;
  %1003 = reshape(%1001, newshape=[14, 3, 14]) /* ty=Tensor[(14, 3, 14), uint16] */;
  %1004 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %1005 = @func_15088() /* ty=Tensor[(13, 5, 15), float32] */;
  %1006 = %999.0;
  %1007 = @func_16460() /* ty=Tensor[(13, 5, 15), float32] */;
  %1008 = @func_5414(%1002, %1003) /* ty=Tensor[(14, 3, 14), uint16] */;
  %1009 = %1004.0;
  (%1005, %1006, %1007, %1008, %var_17224, %1009)
}

def @func_17010() -> Tensor[(12, 6, 11), float64] {
  %1015 = fn () -> Tensor[(12, 6, 11), float64] {
    %1010 = @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %1011 = %1010.0;
    %1012 = cast(%1011, dtype="float32") /* ty=Tensor[(12, 6, 11), float32] */;
    %1013 = sigmoid(%1012) /* ty=Tensor[(12, 6, 11), float32] */;
    %1014 = cast(%1013, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
    erf(%1014) /* ty=Tensor[(12, 6, 11), float64] */
  };
  %1015() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_18796(%var_18794: Tensor[(400), uint8]) -> (Tensor[(13, 5, 15), float32], Tensor[(280), float64], Tensor[(400), bool], Tensor[(12, 6, 11), float64]) {
  @func_18793(%var_18794) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(280), float64], Tensor[(400), bool], Tensor[(12, 6, 11), float64]) */
}

def @func_16152() -> (Tensor[(13, 5, 15), float32],) {
  %1018 = fn () -> (Tensor[(13, 5, 15), float32],) {
    %1016 = @func_13565() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %1017 = %1016.0;
    (%1017,)
  };
  %1018() /* ty=(Tensor[(13, 5, 15), float32],) */
}

def @func_19748() -> Tensor[(12, 6, 11), float64] {
  @func_19746() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_18369() -> (Tensor[(630), int8],) {
  %1021 = fn () -> (Tensor[(630), int8],) {
    %1019 = @func_16743() /* ty=(Tensor[(630), int8], Tensor[(1440), int8], Tensor[(720), int64]) */;
    %1020 = %1019.0;
    (%1020,)
  };
  %1021() /* ty=(Tensor[(630), int8],) */
}

def @func_18435() -> (Tensor[(12, 6, 11), float64],) {
  %1026 = fn () -> (Tensor[(12, 6, 11), float64],) {
    %1022 = @func_17870() /* ty=(Tensor[(9, 7, 10), int8], Tensor[(12, 6, 11), float64]) */;
    %1023 = %1022.1;
    %1024 = cast(%1023, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
    %1025 = atanh(%1024) /* ty=Tensor[(12, 6, 11), float64] */;
    (%1025,)
  };
  %1026() /* ty=(Tensor[(12, 6, 11), float64],) */
}

def @func_16454() -> Tensor[(13, 5, 15), float32] {
  @func_16452() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_19691() -> Tensor[(13, 5, 15), float32] {
  %1027 = fn () -> Tensor[(13, 5, 15), float32] {
    @func_18119() /* ty=Tensor[(13, 5, 15), float32] */
  };
  %1027() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_13781() -> Tensor[(12, 6, 11), float64] {
  %1028 = fn () -> Tensor[(12, 6, 11), float64] {
    @func_13017() /* ty=Tensor[(12, 6, 11), float64] */
  };
  %1028() /* ty=Tensor[(12, 6, 11), float64] */
}

def @func_15473() -> Tensor[(13, 5, 15), float32] {
  @func_15471() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_19845() -> Tensor[(6, 15, 4), float32] {
  %1030 = fn () -> Tensor[(6, 15, 4), float32] {
    %1029 = @func_17313() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(975), float32], Tensor[(6, 15, 4), float32]) */;
    %1029.2
  };
  %1030() /* ty=Tensor[(6, 15, 4), float32] */
}

def @func_19150(%var_19148: int32, %var_19149: Tensor[(1, 7, 9), int32]) -> (Tensor[(1, 7, 9), int32], Tensor[(12, 6, 11), float64]) {
  %1035 = fn (%var_19122: int32, %var_19123: Tensor[(1, 7, 9), int32]) -> (Tensor[(1, 7, 9), int32], Tensor[(12, 6, 11), float64]) {
    %1031 = cast(%var_19122, dtype="int32") /* ty=int32 */;
    %1032 = cast(%var_19123, dtype="int32") /* ty=Tensor[(1, 7, 9), int32] */;
    %1033 = bitwise_or(%1031, %1032) /* ty=Tensor[(1, 7, 9), int32] */;
    %1034 = @func_16695() /* ty=Tensor[(12, 6, 11), float64] */;
    (%1033, %1034)
  };
  %1035(%var_19148, %var_19149) /* ty=(Tensor[(1, 7, 9), int32], Tensor[(12, 6, 11), float64]) */
}

def @func_13527(%var_13522: Tensor[(720, 1), int64]) -> (Tensor[(975), float32], Tensor[(4, 13, 2), bool], Tensor[(8, 1), int64], Tensor[(9, 7, 10), int8], uint8, Tensor[(77), uint8], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720, 1), int64], Tensor[(1440), int8]) {
  %1036 = @func_12987() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
  %1037 = cast(meta[relay.Constant][65] /* ty=Tensor[(8, 1), int64] */, dtype="int64") /* ty=Tensor[(8, 1), int64] */;
  %1038 = reshape(%1037, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), int64] */;
  %1039 = @func_7327(%1038) /* ty=(Tensor[(4, 13, 2), bool], Tensor[(9, 7, 10), int8], Tensor[(10, 63), int8]) */;
  %1040 = cast(meta[relay.Constant][66] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1041 = cast(meta[relay.Constant][67] /* ty=Tensor[(77), uint8] */, dtype="uint8") /* ty=Tensor[(77), uint8] */;
  %1042 = reshape(%1040, newshape=[]) /* ty=uint8 */;
  %1043 = reshape(%1041, newshape=[11, 1, 7]) /* ty=Tensor[(11, 1, 7), uint8] */;
  %1044 = @func_3544(%1042, %1043) /* ty=(Tensor[(11, 1, 7), bool], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */;
  %1045 = cast(meta[relay.Constant][68] /* ty=Tensor[(120), int64] */, dtype="int64") /* ty=Tensor[(120), int64] */;
  %1046 = cast(%var_13522, dtype="int64") /* ty=Tensor[(720, 1), int64] */;
  %1047 = cast(meta[relay.Constant][69] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %1048 = reshape(%1045, newshape=[12, 10, 1]) /* ty=Tensor[(12, 10, 1), int64] */;
  %1049 = reshape(%1046, newshape=[12, 10, 6]) /* ty=Tensor[(12, 10, 6), int64] */;
  %1050 = reshape(%1047, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %1051 = @func_5136(%1048, %1049, %1050) /* ty=(Tensor[(12, 10, 6), int64], Tensor[(12, 12, 10), int8], Tensor[(1440), int8]) */;
  %1052 = %1036.2;
  %1053 = %1039.0;
  %1054 = %1044.1;
  %1055 = %1051.0;
  (%1052, %1053, meta[relay.Constant][65] /* ty=Tensor[(8, 1), int64] */, %1054, meta[relay.Constant][66] /* ty=uint8 */, meta[relay.Constant][67] /* ty=Tensor[(77), uint8] */, %1055, meta[relay.Constant][68] /* ty=Tensor[(120), int64] */, %var_13522, meta[relay.Constant][69] /* ty=Tensor[(1440), int8] */)
}

def @func_14288(%var_14287: Tensor[(84, 2), int8]) -> (Tensor[(12, 6, 11), float64], Tensor[(84), int8], Tensor[(84, 2), int8], Tensor[(15, 4, 16), float64], Tensor[(2, 6, 14), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  %1072 = fn (%var_14263: Tensor[(84, 2), int8]) -> (Tensor[(12, 6, 11), float64], Tensor[(84), int8], Tensor[(84, 2), int8], Tensor[(15, 4, 16), float64], Tensor[(2, 6, 14), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
    %1056 = @func_14151() /* ty=(Tensor[(12, 6, 11), float64],) */;
    %1057 = cast(meta[relay.Constant][70] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %1058 = cast(%var_14263, dtype="int8") /* ty=Tensor[(84, 2), int8] */;
    %1059 = reshape(%1057, newshape=[1, 6, 14]) /* ty=Tensor[(1, 6, 14), int8] */;
    %1060 = reshape(%1058, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), int8] */;
    %1061 = @func_4833(%1059, %1060) /* ty=Tensor[(2, 6, 14), int8] */;
    %1062 = cast(%1061, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
    %1063 = cast(meta[relay.Constant][71] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
    %1064 = cast(meta[relay.Constant][71] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
    %1065 = reshape(%1063, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
    %1066 = reshape(%1064, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
    %1067 = @func_1283(%1065, %1066) /* ty=(Tensor[(9, 7, 10), int8],) */;
    %1068 = %1056.0;
    %1069 = @func_13749() /* ty=Tensor[(15, 4, 16), float64] */;
    %1070 = sinh(%1062) /* ty=Tensor[(2, 6, 14), float32] */;
    %1071 = %1067.0;
    (%1068, meta[relay.Constant][70] /* ty=Tensor[(84), int8] */, %var_14263, %1069, %1070, %1071, meta[relay.Constant][71] /* ty=Tensor[(630), int8] */)
  };
  %1072(%var_14287) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(84), int8], Tensor[(84, 2), int8], Tensor[(15, 4, 16), float64], Tensor[(2, 6, 14), float32], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) */
}

def @func_15465() -> (Tensor[(13, 5, 15), float32], Tensor[(975), float32]) {
  @func_15463() /* ty=(Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */
}

def @func_13749() -> Tensor[(15, 4, 16), float64] {
  %1073 = cast(meta[relay.Constant][72] /* ty=Tensor[(15, 4, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 4, 16), float64] */;
  %1074 = atanh(%1073) /* ty=Tensor[(15, 4, 16), float64] */;
  %1075 = cast(%1074, dtype="float64") /* ty=Tensor[(15, 4, 16), float64] */;
  sinh(%1075) /* ty=Tensor[(15, 4, 16), float64] */
}

def @func_16720() -> Tensor[(13, 5, 15), float32] {
  %1077 = fn () -> Tensor[(13, 5, 15), float32] {
    %1076 = @func_13624() /* ty=(Tensor[(13, 5, 15), float32],) */;
    %1076.0
  };
  %1077() /* ty=Tensor[(13, 5, 15), float32] */
}

def @func_14790(%var_14788: Tensor[(12, 16, 12), float32]) -> (Tensor[(12, 16, 12), float32], Tensor[(12, 6, 11), float64]) {
  @func_14787(%var_14788) /* ty=(Tensor[(12, 16, 12), float32], Tensor[(12, 6, 11), float64]) */
}

def @func_10565(%var_10521: Tensor[(7, 16, 3), int16], %var_10522: Tensor[(7, 16, 3), int16], %var_10543: Tensor[(400), uint8]) -> (Tensor[(7, 16, 3), int16], Tensor[(7, 16, 3), bool], Tensor[(10, 5, 8), uint8], Tensor[(400), uint8], Tensor[(7, 16, 3), float32]) {
  %1078 = cast(%var_10522, dtype="int16") /* ty=Tensor[(7, 16, 3), int16] */;
  %1079 = shape_of(%var_10521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1080 = cast(%var_10521, dtype="int16") /* ty=Tensor[(7, 16, 3), int16] */;
  %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1082 = cast(meta[relay.Constant][73] /* ty=Tensor[(7, 16, 3), int16] */, dtype="bool") /* ty=Tensor[(7, 16, 3), bool] */;
  %1083 = shape_of(%var_10522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%var_10522, dtype="bool") /* ty=Tensor[(7, 16, 3), bool] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1086 = cast(%var_10543, dtype="uint8") /* ty=Tensor[(400), uint8] */;
  %1087 = reshape(%1086, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint8] */;
  %1088 = cast(%var_10522, dtype="float32") /* ty=Tensor[(7, 16, 3), float32] */;
  %1089 = logical_xor(%1080, %1081) /* ty=Tensor[(7, 16, 3), int16] */;
  %1090 = equal(%1084, %1085) /* ty=Tensor[(7, 16, 3), bool] */;
  %1091 = @func_1128(%1087) /* ty=Tensor[(10, 5, 8), uint8] */;
  %1092 = sin(%1088) /* ty=Tensor[(7, 16, 3), float32] */;
  (%1089, %1090, %1091, %var_10543, %1092)
}

def @func_13940(%var_13925: Tensor[(16, 16, 15), float32]) -> Tensor[(16, 16, 15), float32] {
  %1093 = cast(%var_13925, dtype="float32") /* ty=Tensor[(16, 16, 15), float32] */;
  atanh(%1093) /* ty=Tensor[(16, 16, 15), float32] */
}

def @func_13487() -> Tensor[(975), float32] {
  @func_13485() /* ty=Tensor[(975), float32] */
}

def @func_14990() -> (Tensor[(975), float32],) {
  %1094 = @func_14452() /* ty=(Tensor[(975), float32], Tensor[(5, 8, 4), int16], Tensor[(160), int16], Tensor[(13, 5, 15), float32]) */;
  %1095 = %1094.0;
  (%1095,)
}

def @func_18664() -> (Tensor[(13, 5, 15), float32], Tensor[(1690), float32], Tensor[(1690), float32], Tensor[(6, 8, 15), int16], Tensor[(720), int16]) {
  %1096 = cast(meta[relay.Constant][74] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %1097 = reshape(%1096, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %1098 = @func_18356(%1097) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(13, 13, 10), float32], Tensor[(1690), float32]) */;
  %1099 = cast(meta[relay.Constant][75] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %1100 = cast(meta[relay.Constant][75] /* ty=Tensor[(720), int16] */, dtype="int16") /* ty=Tensor[(720), int16] */;
  %1101 = reshape(%1099, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), int16] */;
  %1102 = reshape(%1100, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), int16] */;
  %1103 = @func_17712(%1101, %1102) /* ty=(Tensor[(6, 8, 15), int16], Tensor[(13, 5, 15), float32]) */;
  %1104 = @func_16711() /* ty=Tensor[(13, 5, 15), float32] */;
  %1105 = %1098.2;
  %1106 = %1103.0;
  (%1104, %1105, meta[relay.Constant][74] /* ty=Tensor[(1690), float32] */, %1106, meta[relay.Constant][75] /* ty=Tensor[(720), int16] */)
}

def @func_17426(%var_17403: Tensor[(12, 6, 11), float64]) -> (Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), uint16], Tensor[(1, 140), uint32], Tensor[(1440), int8], Tensor[(1690), float32]) {
  %1107 = @func_13017() /* ty=Tensor[(12, 6, 11), float64] */;
  %1108 = cast(%var_17403, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %1109 = shape_of(%1107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1110 = cast(%1107, dtype="float64") /* ty=Tensor[(12, 6, 11), float64] */;
  %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1112 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 140), uint32] */, dtype="uint32") /* ty=Tensor[(1, 140), uint32] */;
  %1113 = reshape(%1112, newshape=[5, 28]) /* ty=Tensor[(5, 28), uint32] */;
  %1114 = @func_15421(%1113) /* ty=(Tensor[(13, 5, 15), uint16], Tensor[(5, 7, 4), float32], Tensor[(5, 28), float64]) */;
  %1115 = cast(meta[relay.Constant][77] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %1116 = cast(meta[relay.Constant][77] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %1117 = reshape(%1115, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
  %1118 = reshape(%1116, newshape=[169, 10]) /* ty=Tensor[(169, 10), float32] */;
  %1119 = @func_15287(%1117, %1118) /* ty=(Tensor[(13, 5, 15), float32], Tensor[(12, 10, 6), int64], Tensor[(120), int64], Tensor[(720), int64], Tensor[(1440), int8], Tensor[(8, 16, 15), float64], Tensor[(169, 10), uint64], Tensor[(169, 10), float32]) */;
  %1120 = floor_mod(%1110, %1111) /* ty=Tensor[(12, 6, 11), float64] */;
  %1121 = %1114.0;
  %1122 = %1119.4;
  (%1120, %1121, meta[relay.Constant][76] /* ty=Tensor[(1, 140), uint32] */, %1122, meta[relay.Constant][77] /* ty=Tensor[(1690), float32] */)
}

def @func_3544(%var_3512: uint8, %var_3513: Tensor[(11, 1, 7), uint8]) -> (Tensor[(11, 1, 7), bool], Tensor[(9, 7, 10), int8], Tensor[(630), int8]) {
  %1123 = cast(%var_3512, dtype="bool") /* ty=bool */;
  %1124 = cast(%var_3513, dtype="bool") /* ty=Tensor[(11, 1, 7), bool] */;
  %1125 = cast(meta[relay.Constant][78] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %1126 = cast(meta[relay.Constant][78] /* ty=Tensor[(630), int8] */, dtype="int8") /* ty=Tensor[(630), int8] */;
  %1127 = reshape(%1125, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %1128 = reshape(%1126, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), int8] */;
  %1129 = @func_1283(%1127, %1128) /* ty=(Tensor[(9, 7, 10), int8],) */;
  %1130 = less(%1123, %1124) /* ty=Tensor[(11, 1, 7), bool] */;
  %1131 = %1129.0;
  (%1130, %1131, meta[relay.Constant][78] /* ty=Tensor[(630), int8] */)
}

def @func_15836(%var_15833: Tensor[(2, 14, 10), float32], %var_15834: Tensor[(2, 14, 10), float32], %var_15835: Tensor[(96, 2), float32]) -> (Tensor[(2, 14, 10), float32], Tensor[(13, 5, 15), float32], Tensor[(3, 5, 13), float32], Tensor[(195), float32], Tensor[(6, 12, 16), float64], Tensor[(96, 12), float64], Tensor[(768), int8], Tensor[(96, 2), float32]) {
  %1153 = fn (%var_15790: Tensor[(2, 14, 10), float32], %var_15791: Tensor[(2, 14, 10), float32], %var_15828: Tensor[(96, 2), float32]) -> (Tensor[(2, 14, 10), float32], Tensor[(13, 5, 15), float32], Tensor[(3, 5, 13), float32], Tensor[(195), float32], Tensor[(6, 12, 16), float64], Tensor[(96, 12), float64], Tensor[(768), int8], Tensor[(96, 2), float32]) {
    %1132 = cast(%var_15791, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
    %1133 = shape_of(%var_15790, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1134 = cast(%var_15790, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
    %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1136 = @func_13360() /* ty=(Tensor[(12, 6, 11), float64], Tensor[(13, 5, 15), float32], Tensor[(975), float32]) */;
    %1137 = cast(meta[relay.Constant][79] /* ty=Tensor[(195), float32] */, dtype="float32") /* ty=Tensor[(195), float32] */;
    %1138 = reshape(%1137, newshape=[3, 5, 13]) /* ty=Tensor[(3, 5, 13), float32] */;
    %1139 = @func_15241(%1138) /* ty=(Tensor[(3, 5, 13), float32],) */;
    %1140 = cast(meta[relay.Constant][80] /* ty=Tensor[(96, 12), float64] */, dtype="float64") /* ty=Tensor[(96, 12), float64] */;
    %1141 = cast(meta[relay.Constant][81] /* ty=Tensor[(768), int8] */, dtype="int8") /* ty=Tensor[(768), int8] */;
    %1142 = %1136.1;
    %1143 = cast(%1142, dtype="float32") /* ty=Tensor[(13, 5, 15), float32] */;
    %1144 = cast(%var_15828, dtype="float32") /* ty=Tensor[(96, 2), float32] */;
    %1145 = reshape(%1140, newshape=[1152]) /* ty=Tensor[(1152), float64] */;
    %1146 = reshape(%1141, newshape=[768]) /* ty=Tensor[(768), int8] */;
    %1147 = reshape(%1143, newshape=[975]) /* ty=Tensor[(975), float32] */;
    %1148 = reshape(%1144, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
    %1149 = @func_14926(%1145, %1146, %1147, %1148) /* ty=(Tensor[(12, 6, 11), float64], Tensor[(12, 6, 11), float64], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(5, 6, 1), float32], Tensor[(96, 20), float32], Tensor[(13, 5, 15), float32], Tensor[(768), int8], Tensor[(975), float32], Tensor[(975), float32], Tensor[(4, 48), float32]) */;
    %1150 = power(%1134, %1135) /* ty=Tensor[(2, 14, 10), float32] */;
    %1151 = %1139.0;
    %1152 = %1149.2;
    (%1150, %1142, %1151, meta[relay.Constant][79] /* ty=Tensor[(195), float32] */, %1152, meta[relay.Constant][80] /* ty=Tensor[(96, 12), float64] */, meta[relay.Constant][81] /* ty=Tensor[(768), int8] */, %var_15828)
  };
  %1153(%var_15833, %var_15834, %var_15835) /* ty=(Tensor[(2, 14, 10), float32], Tensor[(13, 5, 15), float32], Tensor[(3, 5, 13), float32], Tensor[(195), float32], Tensor[(6, 12, 16), float64], Tensor[(96, 12), float64], Tensor[(768), int8], Tensor[(96, 2), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen852/build/output.py:3334: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen852/build/output.py", line 3339, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(210) tvmgen_default_fused_cast_cast_reshape_equal_kernel0(signed char* __restrict__ T_equal, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) == ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_143 = relay.var("var_143", dtype = "float32", shape = (10, 13, 1))#candidate|143|(10, 13, 1)|var|float32
uop_144 = relay.tan(var_143.astype('float32')) # shape=(10, 13, 1)
uop_148 = relay.sigmoid(var_143.astype('float64')) # shape=(10, 13, 1)
uop_156 = relay.atanh(var_143.astype('float32')) # shape=(10, 13, 1)
uop_165 = relay.cos(var_143.astype('float64')) # shape=(10, 13, 1)
bop_168 = relay.less_equal(var_143.astype('bool'), relay.reshape(uop_144.astype('bool'), relay.shape_of(var_143))) # shape=(10, 13, 1)
uop_176 = relay.asinh(bop_168.astype('float64')) # shape=(10, 13, 1)
bop_178 = relay.multiply(uop_165.astype('uint64'), relay.reshape(bop_168.astype('uint64'), relay.shape_of(uop_165))) # shape=(10, 13, 1)
output = relay.Tuple([uop_148,uop_156,uop_176,bop_178,])
output2 = relay.Tuple([uop_148,uop_156,uop_176,bop_178,])
func_181 = relay.Function([var_143,], output)
mod['func_181'] = func_181
mod = relay.transform.InferType()(mod)
mutated_mod['func_181'] = func_181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_182 = relay.var("var_182", dtype = "float32", shape = (10, 13, 1))#candidate|182|(10, 13, 1)|var|float32
func_181_call = mutated_mod.get_global_var('func_181')
call_183 = func_181_call(var_182)
output = call_183
func_184 = relay.Function([var_182], output)
mutated_mod['func_184'] = func_184
mutated_mod = relay.transform.InferType()(mutated_mod)
var_555 = relay.var("var_555", dtype = "float64", shape = (9, 8, 4))#candidate|555|(9, 8, 4)|var|float64
uop_556 = relay.acosh(var_555.astype('float64')) # shape=(9, 8, 4)
var_558 = relay.var("var_558", dtype = "float64", shape = (9, 8, 4))#candidate|558|(9, 8, 4)|var|float64
bop_559 = relay.not_equal(uop_556.astype('bool'), relay.reshape(var_558.astype('bool'), relay.shape_of(uop_556))) # shape=(9, 8, 4)
func_181_call = mod.get_global_var('func_181')
func_184_call = mutated_mod.get_global_var('func_184')
const_593 = relay.const([[-1.994383,8.079487,-2.120748,-9.522198,7.818827,-2.943133,7.867562,0.986073,-0.996464,-6.973893],[9.749471,-1.461279,9.681834,-3.800444,1.899235,-7.016644,6.287731,6.459109,8.331745,-1.828785],[-2.043123,-4.685547,2.365359,6.617067,-1.249394,9.342574,3.398671,3.075736,7.881157,-9.030653],[-0.794651,6.647551,-3.686947,-4.450489,-0.217025,9.665395,6.881220,-1.789708,5.057180,2.109367],[-8.406877,4.061495,-0.878245,-5.996724,-1.377736,-0.957837,3.198562,-5.730824,-9.891175,-9.279893],[3.353215,-0.426220,9.343661,3.591653,-6.440997,-7.588745,-9.978955,-0.960222,-6.023408,-3.044458],[0.689988,-5.333935,-9.099743,2.263485,9.611025,8.236652,2.180700,8.078438,0.803411,0.330858],[3.263337,-4.433790,-1.299556,-1.728276,4.613728,8.629354,-2.514115,-4.176939,1.874496,7.598331],[9.151404,0.761100,-6.480922,2.234598,-1.727615,-5.197699,-6.889555,0.364748,6.875286,-7.199559],[-5.471786,-0.649558,0.344344,-8.854747,-8.930004,0.369174,-2.224360,-6.230859,3.365056,-6.427487],[-9.606630,-6.635587,6.441396,3.403297,6.582802,-6.895267,-9.343229,-0.097603,5.847608,-7.114829],[4.576374,1.747343,-0.752044,-6.774770,7.875614,7.992784,8.292835,-1.873890,3.496174,-5.443783],[4.959063,7.317196,7.478219,9.386136,-3.914426,-1.813825,8.603862,4.356163,1.030514,-2.186257]], dtype = "float32")#candidate|593|(13, 10)|const|float32
call_592 = relay.TupleGetItem(func_181_call(relay.reshape(const_593.astype('float32'), [10, 13, 1])), 2)
call_594 = relay.TupleGetItem(func_184_call(relay.reshape(const_593.astype('float32'), [10, 13, 1])), 2)
output = relay.Tuple([bop_559,call_592,const_593,])
output2 = relay.Tuple([bop_559,call_594,const_593,])
func_597 = relay.Function([var_555,var_558,], output)
mod['func_597'] = func_597
mod = relay.transform.InferType()(mod)
var_598 = relay.var("var_598", dtype = "float64", shape = (9, 8, 4))#candidate|598|(9, 8, 4)|var|float64
var_599 = relay.var("var_599", dtype = "float64", shape = (9, 8, 4))#candidate|599|(9, 8, 4)|var|float64
output = func_597(var_598,var_599,)
func_600 = relay.Function([var_598,var_599,], output)
mutated_mod['func_600'] = func_600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_778 = relay.var("var_778", dtype = "float64", shape = (8, 15, 15))#candidate|778|(8, 15, 15)|var|float64
uop_779 = relay.sqrt(var_778.astype('float64')) # shape=(8, 15, 15)
output = uop_779
output2 = uop_779
func_788 = relay.Function([var_778,], output)
mod['func_788'] = func_788
mod = relay.transform.InferType()(mod)
var_789 = relay.var("var_789", dtype = "float64", shape = (8, 15, 15))#candidate|789|(8, 15, 15)|var|float64
output = func_788(var_789)
func_790 = relay.Function([var_789], output)
mutated_mod['func_790'] = func_790
mutated_mod = relay.transform.InferType()(mutated_mod)
var_963 = relay.var("var_963", dtype = "float32", shape = (3, 14, 16))#candidate|963|(3, 14, 16)|var|float32
uop_964 = relay.cosh(var_963.astype('float32')) # shape=(3, 14, 16)
output = uop_964
output2 = uop_964
func_969 = relay.Function([var_963,], output)
mod['func_969'] = func_969
mod = relay.transform.InferType()(mod)
var_970 = relay.var("var_970", dtype = "float32", shape = (3, 14, 16))#candidate|970|(3, 14, 16)|var|float32
output = func_969(var_970)
func_971 = relay.Function([var_970], output)
mutated_mod['func_971'] = func_971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_991 = relay.var("var_991", dtype = "float64", shape = (6, 10, 3))#candidate|991|(6, 10, 3)|var|float64
uop_992 = relay.cosh(var_991.astype('float64')) # shape=(6, 10, 3)
output = relay.Tuple([uop_992,])
output2 = relay.Tuple([uop_992,])
func_1025 = relay.Function([var_991,], output)
mod['func_1025'] = func_1025
mod = relay.transform.InferType()(mod)
mutated_mod['func_1025'] = func_1025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1026 = relay.var("var_1026", dtype = "float64", shape = (6, 10, 3))#candidate|1026|(6, 10, 3)|var|float64
func_1025_call = mutated_mod.get_global_var('func_1025')
call_1027 = func_1025_call(var_1026)
output = call_1027
func_1028 = relay.Function([var_1026], output)
mutated_mod['func_1028'] = func_1028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1442 = relay.var("var_1442", dtype = "float64", shape = (13, 16, 15))#candidate|1442|(13, 16, 15)|var|float64
uop_1443 = relay.cos(var_1442.astype('float64')) # shape=(13, 16, 15)
output = relay.Tuple([uop_1443,])
output2 = relay.Tuple([uop_1443,])
func_1453 = relay.Function([var_1442,], output)
mod['func_1453'] = func_1453
mod = relay.transform.InferType()(mod)
mutated_mod['func_1453'] = func_1453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1454 = relay.var("var_1454", dtype = "float64", shape = (13, 16, 15))#candidate|1454|(13, 16, 15)|var|float64
func_1453_call = mutated_mod.get_global_var('func_1453')
call_1455 = func_1453_call(var_1454)
output = call_1455
func_1456 = relay.Function([var_1454], output)
mutated_mod['func_1456'] = func_1456
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1573 = relay.const([[[2],[2],[-5],[3],[-9],[-10]],[[-8],[-6],[5],[2],[9],[2]],[[8],[6],[-6],[2],[6],[-4]],[[-10],[-8],[8],[3],[-8],[8]],[[-2],[7],[-10],[3],[-10],[-7]],[[-10],[6],[10],[9],[-7],[-10]],[[-5],[-2],[-10],[6],[3],[-5]],[[4],[-2],[-7],[-1],[-8],[4]],[[-9],[10],[10],[-10],[3],[-9]],[[4],[-6],[1],[-9],[-1],[7]],[[2],[6],[-9],[1],[-3],[-1]],[[-3],[9],[-6],[-8],[6],[-7]],[[-7],[-1],[-9],[-6],[-8],[-4]],[[3],[4],[-6],[-1],[9],[6]],[[8],[6],[-10],[-10],[9],[-5]],[[10],[9],[4],[-7],[-9],[-2]]], dtype = "uint8")#candidate|1573|(16, 6, 1)|const|uint8
var_1574 = relay.var("var_1574", dtype = "uint8", shape = (16, 6, 14))#candidate|1574|(16, 6, 14)|var|uint8
bop_1575 = relay.equal(const_1573.astype('bool'), var_1574.astype('bool')) # shape=(16, 6, 14)
output = bop_1575
output2 = bop_1575
func_1582 = relay.Function([var_1574,], output)
mod['func_1582'] = func_1582
mod = relay.transform.InferType()(mod)
var_1583 = relay.var("var_1583", dtype = "uint8", shape = (16, 6, 14))#candidate|1583|(16, 6, 14)|var|uint8
output = func_1582(var_1583)
func_1584 = relay.Function([var_1583], output)
mutated_mod['func_1584'] = func_1584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1640 = relay.var("var_1640", dtype = "float32", shape = (10, 1, 8))#candidate|1640|(10, 1, 8)|var|float32
uop_1641 = relay.acos(var_1640.astype('float32')) # shape=(10, 1, 8)
func_969_call = mod.get_global_var('func_969')
func_971_call = mutated_mod.get_global_var('func_971')
var_1645 = relay.var("var_1645", dtype = "float32", shape = (672,))#candidate|1645|(672,)|var|float32
call_1644 = func_969_call(relay.reshape(var_1645.astype('float32'), [3, 14, 16]))
call_1646 = func_969_call(relay.reshape(var_1645.astype('float32'), [3, 14, 16]))
bop_1650 = relay.multiply(uop_1641.astype('float32'), relay.reshape(var_1640.astype('float32'), relay.shape_of(uop_1641))) # shape=(10, 1, 8)
output = relay.Tuple([call_1644,var_1645,bop_1650,])
output2 = relay.Tuple([call_1646,var_1645,bop_1650,])
func_1658 = relay.Function([var_1640,var_1645,], output)
mod['func_1658'] = func_1658
mod = relay.transform.InferType()(mod)
var_1659 = relay.var("var_1659", dtype = "float32", shape = (10, 1, 8))#candidate|1659|(10, 1, 8)|var|float32
var_1660 = relay.var("var_1660", dtype = "float32", shape = (672,))#candidate|1660|(672,)|var|float32
output = func_1658(var_1659,var_1660,)
func_1661 = relay.Function([var_1659,var_1660,], output)
mutated_mod['func_1661'] = func_1661
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1695 = relay.const([[[7,1,8,-7,2,6,-5,-10,-4,9,-7,-5],[-4,-9,-7,2,6,-5,3,-3,-3,4,7,-8],[-10,2,-5,-4,-1,8,3,3,5,6,-1,2],[7,3,-2,4,7,9,-3,1,-7,-2,-10,10],[5,5,4,-10,-5,-6,4,-1,5,3,5,2],[4,2,10,-9,-9,-9,-4,-3,-1,-8,-8,6]],[[-10,-9,-6,9,-6,-5,-5,1,1,-7,10,5],[-9,-8,3,10,6,10,-2,-3,-10,-5,5,8],[-6,10,-5,9,10,-2,-3,8,-2,1,-9,-2],[-5,3,3,-5,-8,-6,1,-8,-3,6,3,-7],[-4,8,-5,2,9,9,7,-2,-8,-10,4,-2],[8,-6,3,3,2,-1,-4,-6,-8,-5,-6,2]],[[7,-6,7,1,5,-6,9,-6,-3,-7,-9,1],[5,-2,5,8,3,-5,2,-8,1,5,-3,2],[-9,-6,1,6,3,10,2,-10,-2,9,-8,10],[1,1,10,2,10,8,5,-9,1,-6,7,-10],[-10,-2,-6,-10,-10,2,2,-9,-4,-6,-8,7],[4,4,9,10,-5,-8,3,-9,-6,-2,5,-5]]], dtype = "uint32")#candidate|1695|(3, 6, 12)|const|uint32
var_1696 = relay.var("var_1696", dtype = "uint32", shape = (3, 6, 12))#candidate|1696|(3, 6, 12)|var|uint32
bop_1697 = relay.logical_xor(const_1695.astype('uint32'), relay.reshape(var_1696.astype('uint32'), relay.shape_of(const_1695))) # shape=(3, 6, 12)
func_1658_call = mod.get_global_var('func_1658')
func_1661_call = mutated_mod.get_global_var('func_1661')
const_1704 = relay.const([6.078186,4.904260,3.341313,5.931693,-9.200617,6.771381,-4.493910,-7.216662,-5.901140,-1.252453,-0.232525,-7.228866,1.387294,4.397328,2.163960,-1.684897,-4.028282,3.920014,4.897092,2.734891,6.161975,-6.677259,-7.631627,5.629048,8.208983,1.653883,5.059788,7.177683,-2.288099,5.864340,5.058041,-7.653314,-3.724468,-1.063841,-6.802801,2.093719,-0.998696,3.062782,-4.298286,3.646153,1.279055,0.193666,-1.929238,4.879749,-8.897952,-0.184225,-0.324091,8.130114,-2.074119,-1.940587,-5.676203,9.934894,0.747014,2.805863,1.978777,-1.214119,4.142629,3.987693,-1.180264,-4.095592,-2.550890,-8.075399,6.430959,6.774561,9.306414,-2.560563,8.341205,-7.353613,-4.046831,7.731993,-8.547593,-4.881046,1.905079,8.770075,0.559320,-9.314961,-7.510200,-9.832857,7.461460,-8.276843], dtype = "float32")#candidate|1704|(80,)|const|float32
var_1705 = relay.var("var_1705", dtype = "float32", shape = (672,))#candidate|1705|(672,)|var|float32
call_1703 = relay.TupleGetItem(func_1658_call(relay.reshape(const_1704.astype('float32'), [10, 1, 8]), relay.reshape(var_1705.astype('float32'), [672,]), ), 1)
call_1706 = relay.TupleGetItem(func_1661_call(relay.reshape(const_1704.astype('float32'), [10, 1, 8]), relay.reshape(var_1705.astype('float32'), [672,]), ), 1)
output = relay.Tuple([bop_1697,call_1703,const_1704,var_1705,])
output2 = relay.Tuple([bop_1697,call_1706,const_1704,var_1705,])
func_1709 = relay.Function([var_1696,var_1705,], output)
mod['func_1709'] = func_1709
mod = relay.transform.InferType()(mod)
var_1710 = relay.var("var_1710", dtype = "uint32", shape = (3, 6, 12))#candidate|1710|(3, 6, 12)|var|uint32
var_1711 = relay.var("var_1711", dtype = "float32", shape = (672,))#candidate|1711|(672,)|var|float32
output = func_1709(var_1710,var_1711,)
func_1712 = relay.Function([var_1710,var_1711,], output)
mutated_mod['func_1712'] = func_1712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1798 = relay.var("var_1798", dtype = "int32", shape = ())#candidate|1798|()|var|int32
var_1799 = relay.var("var_1799", dtype = "int32", shape = (16, 10, 13))#candidate|1799|(16, 10, 13)|var|int32
bop_1800 = relay.less(var_1798.astype('bool'), var_1799.astype('bool')) # shape=(16, 10, 13)
output = relay.Tuple([bop_1800,])
output2 = relay.Tuple([bop_1800,])
func_1808 = relay.Function([var_1798,var_1799,], output)
mod['func_1808'] = func_1808
mod = relay.transform.InferType()(mod)
var_1809 = relay.var("var_1809", dtype = "int32", shape = ())#candidate|1809|()|var|int32
var_1810 = relay.var("var_1810", dtype = "int32", shape = (16, 10, 13))#candidate|1810|(16, 10, 13)|var|int32
output = func_1808(var_1809,var_1810,)
func_1811 = relay.Function([var_1809,var_1810,], output)
mutated_mod['func_1811'] = func_1811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2074 = relay.var("var_2074", dtype = "float32", shape = (11, 15, 13))#candidate|2074|(11, 15, 13)|var|float32
var_2075 = relay.var("var_2075", dtype = "float32", shape = (11, 15, 13))#candidate|2075|(11, 15, 13)|var|float32
bop_2076 = relay.floor_divide(var_2074.astype('float32'), relay.reshape(var_2075.astype('float32'), relay.shape_of(var_2074))) # shape=(11, 15, 13)
var_2084 = relay.var("var_2084", dtype = "float32", shape = (11, 15, 13))#candidate|2084|(11, 15, 13)|var|float32
bop_2085 = relay.greater(var_2075.astype('bool'), relay.reshape(var_2084.astype('bool'), relay.shape_of(var_2075))) # shape=(11, 15, 13)
func_1658_call = mod.get_global_var('func_1658')
func_1661_call = mutated_mod.get_global_var('func_1661')
const_2099 = relay.const([[-9.759510,7.075544],[9.887725,-7.811846],[1.481751,-2.600416],[-8.009996,3.503471],[-4.046373,5.979182],[3.654680,4.995941],[-9.477582,-1.985492],[-5.789154,-8.081905],[-0.921890,-0.546738],[-3.789475,-4.526751],[-0.569571,-3.865926],[4.394564,3.549583],[-0.896040,-3.914333],[-7.844397,-1.409498],[5.762709,7.404566],[-4.794552,-6.666881],[6.932965,-3.144692],[9.872830,-0.506734],[1.848575,-6.577264],[-3.133670,-3.752045],[-8.410243,-9.830870],[-3.852340,1.642657],[9.415200,7.960232],[1.431556,9.277197],[-2.541156,-8.557028],[-8.505683,0.163951],[-7.099978,-9.028059],[-7.715996,8.963223],[-8.046469,3.581115],[-0.263698,-4.409685],[-5.484290,0.066224],[5.586768,-9.988385],[5.945495,-6.194635],[1.651074,8.673107],[9.908905,-2.332204],[6.976253,6.158839],[7.673686,-0.785139],[2.326416,-8.932741],[4.331673,8.703162],[-9.219198,-4.946878]], dtype = "float32")#candidate|2099|(40, 2)|const|float32
const_2100 = relay.const([0.941606,-8.289914,-1.836568,-4.523181,-7.741304,4.300040,-0.811006,8.512806,-6.182935,3.471082,8.725491,7.096858,4.396298,1.166516,-9.306456,4.778511,-5.191781,-0.947052,8.938776,-4.646521,-3.733523,5.623539,0.066266,1.978198,-1.038530,7.515748,1.116092,5.294161,6.710232,8.654433,0.560706,4.432320,-9.604561,3.757853,-1.492212,3.790244,2.364808,3.008869,2.168925,6.872218,-2.494587,-3.797077,8.876130,-3.014636,-8.044105,-8.354147,-9.777632,3.990070,4.919315,-0.200038,-5.854972,9.008389,3.619325,0.629585,4.555771,-6.160931,6.196014,4.721653,3.570259,5.869746,-1.463834,1.884711,4.154402,5.374517,4.070649,-8.887166,-7.788564,-3.878061,9.933033,-6.759357,-6.806542,-8.470382,9.223230,-6.681841,6.586315,3.380922,8.468007,-7.199921,3.943418,1.304697,-1.682507,4.911399,3.568366,-3.297209,7.163086,5.985865,5.268166,5.598763,-0.050305,5.612559,-2.619462,0.720934,-1.350639,-6.744192,5.070006,-6.304927,-6.685948,-4.998197,1.192689,-1.411963,-0.561223,-9.949487,8.488504,-9.261899,3.525300,4.454806,-1.902824,4.199687,-0.079025,5.970714,-4.503036,1.080307,2.698167,-3.236512,-1.237438,3.889561,9.343781,9.181512,0.374156,-6.694748,9.711727,-7.672660,-7.737388,-4.736763,-4.054545,-5.566482,-9.793497,4.200295,-3.161320,-2.803237,-2.566577,7.583859,-2.619403,-5.737556,-9.974951,-7.223128,-2.993621,-7.993695,5.177787,9.709342,-9.676640,-1.324756,-8.291919,-6.725898,9.346855,2.169648,-7.850786,6.386584,1.534764,-5.730595,-8.538203,-8.924301,-1.193738,6.450553,3.449398,0.969541,2.143171,-1.057614,8.929168,-9.432614,-5.636544,-4.130007,-4.342331,6.846529,7.480744,3.711149,-6.604430,-8.691513,-6.417311,-8.272549,-8.973706,1.135449,4.036440,1.748479,-9.757036,-2.129097,-1.732177,2.798335,-4.639935,-0.360258,9.704793,-9.398178,5.826490,-9.979792,-8.682908,-1.162192,-9.082249,-2.370255,3.764145,-1.466752,2.104397,-1.821353,6.069493,-2.913714,-7.260671,3.198761,3.367423,-7.148781,-8.979444,-6.487495,7.046615,4.494025,6.963851,-8.630550,-7.671344,-9.244461,9.869331,6.419703,3.622353,-8.523045,-3.269989,1.950779,4.152282,0.093583,-5.107722,8.580293,-2.096714,2.186065,-2.912109,-0.551609,-4.514485,5.344399,-3.015402,-2.533769,-7.955159,0.840545,-7.360395,-9.374684,-6.150880,7.459402,-4.262870,5.006312,1.816265,-5.418163,-8.084252,-8.466822,4.424502,-7.824683,-0.975018,3.130236,1.828952,-4.729162,6.637410,-7.851268,-1.359407,-5.351855,-1.050517,4.310432,-6.614623,9.295633,-4.420101,4.222056,2.121327,1.837410,-5.024703,9.361036,-1.537664,9.818623,-3.987206,8.267208,4.241315,1.117448,7.821197,-2.900716,-3.250506,-5.641283,8.206384,7.964075,4.559568,1.696667,7.378018,-2.662131,-5.073208,-8.422903,6.396551,2.598069,8.584626,-3.802921,9.171676,3.962245,-1.669772,-6.524689,2.544848,9.988366,9.457477,1.493590,0.419847,-5.611476,0.796354,-3.588148,-2.413282,-7.317871,2.485344,5.965153,2.433077,-0.771791,-5.289294,1.478658,-1.917310,6.494788,9.208834,1.914844,-3.244992,-5.550136,-1.436158,-7.236561,-7.626719,-2.393201,9.021022,-3.116868,-1.160055,-1.042343,-1.176788,0.794095,-2.033411,-0.147796,4.373667,-5.770479,2.859354,5.474276,-9.930835,-5.696510,-0.927566,-8.520367,-6.388324,-1.228527,8.041712,-2.573808,4.022423,3.867121,-6.820271,9.497859,6.643956,3.063081,1.980778,-2.729693,-1.485950,-7.351316,9.507815,-4.796412,-5.959046,8.496952,7.060572,1.704764,3.341072,6.242190,-7.151414,9.002852,-3.689579,-1.295204,4.643274,8.052219,2.875838,0.612948,-8.521398,1.399574,-5.598267,4.356704,-5.313866,-7.654360,5.013606,7.104160,2.431014,0.996695,0.894554,8.252399,-9.036410,-7.822568,-3.363840,-0.526752,3.657514,6.192379,-1.742850,2.368248,6.888581,-3.363256,6.909381,-4.606524,-5.560960,5.083206,6.177806,7.225238,1.814770,-1.441810,7.334476,0.634039,-7.499696,-2.523749,2.365668,4.454662,-4.592751,0.225637,6.985557,-3.216688,0.120277,0.674689,-1.667449,-2.578437,-7.114680,7.415169,8.037623,-6.142163,-4.286787,3.262640,-9.568866,-7.533223,-2.622628,6.271374,-7.076848,-9.509892,0.552297,-7.133976,-1.867055,2.468943,8.813851,-9.624337,8.240882,-2.970174,6.764016,5.686377,-4.724123,-2.313231,7.393866,-8.658186,2.136370,5.520881,-3.674186,-1.167583,-8.400143,8.221704,0.885520,7.937361,-2.633177,-5.827162,3.117801,-4.906846,6.733442,-2.934807,-8.270939,-0.481715,1.495939,-0.307818,-5.284261,-1.468559,-8.155200,-6.685659,9.570834,2.072782,-5.324472,-7.364182,3.166302,3.982102,4.761353,-3.758162,5.744238,-0.195721,-6.385846,-1.112538,9.873162,-7.509345,7.119433,6.334523,-8.717366,-6.116999,-6.522567,-2.263096,6.377839,0.493694,2.743214,-5.664633,-7.826947,-6.103180,6.301863,1.930433,2.534590,0.528359,3.621067,-4.799650,0.657659,-4.773576,4.426963,8.876873,-2.533611,2.274098,-4.124915,-0.869258,-6.493415,-9.277500,-7.910933,4.238585,1.594483,-7.807326,5.454350,-4.820893,1.246531,8.357429,6.752246,-2.536813,5.428069,5.765441,4.490445,-0.432492,-7.223508,-6.167022,5.917494,5.599852,-2.524389,6.519307,-0.577399,-8.836465,-4.713165,-2.225507,-6.717918,5.685200,-2.179987,-6.872975,1.638764,-4.250759,0.011953,-9.515371,-2.414823,9.881582,3.895348,-6.250371,-5.153308,5.924412,-0.005024,-3.091594,-4.371097,-9.664262,-4.088775,7.197111,-8.122801,-8.558049,-2.718407,-0.538297,-7.470601,6.269374,-1.349119,6.284025,-6.782955,0.752793,-0.535656,7.664088,6.737176,5.310416,-3.732263,2.639035,-8.847329,-9.272691,-6.537056,1.138998,-1.625546,-6.004884,2.766530,7.761909,0.597089,-8.499023,-4.747156,-1.647907,-2.269160,-5.163563,-5.700964,5.369610,6.965989,7.506863,-2.265359,-6.398645,0.623690,2.487861,-8.654883,-6.028454,5.501985,2.435249,8.020001,5.305383,8.544152,-1.371597,-3.551710,2.869376,-7.915567,7.031610,9.471103,0.568214,3.802402,5.452335,-3.057140,3.552476,4.662821,0.321567,-8.341929,-2.983287,-4.994900,-4.876460,-8.293933,-3.037080,-6.049397,7.727941,5.253390,0.117877,7.911300,-3.260514,-6.447370,5.738660,-8.920221,-5.018755,5.965807,1.520166,-9.247781,-9.331993,3.679408,5.333194,1.850852,2.058732,5.236775,3.792754,-2.789072,-5.312748,0.128335,-2.462977,5.249803,-3.431782,0.196371,-5.733292,8.291284,-4.267631,-7.448352,3.181064,-6.299519,-7.039864,7.104760,-2.618705,-5.456096,-6.480757,-6.285506,3.083624,-4.978177,-5.756222,7.915487,7.585396,-4.456367,2.541695,3.554487,-6.961310,-0.740399,0.651830,-8.920747,7.878779,6.285607,-0.348809,-9.898011,2.423716,0.769075,-3.106696,-0.924702,-2.732522,8.270717,2.006464,-7.373764,-1.501219,5.361954,-6.946628,3.095367,-5.025109,3.029819,-4.925126,-5.152052,-1.954539,4.993920,4.446163,-3.388256,-8.501428], dtype = "float32")#candidate|2100|(672,)|const|float32
call_2098 = relay.TupleGetItem(func_1658_call(relay.reshape(const_2099.astype('float32'), [10, 1, 8]), relay.reshape(const_2100.astype('float32'), [672,]), ), 0)
call_2101 = relay.TupleGetItem(func_1661_call(relay.reshape(const_2099.astype('float32'), [10, 1, 8]), relay.reshape(const_2100.astype('float32'), [672,]), ), 0)
func_1808_call = mod.get_global_var('func_1808')
func_1811_call = mutated_mod.get_global_var('func_1811')
const_2120 = relay.const(-2, dtype = "int32")#candidate|2120|()|const|int32
const_2121 = relay.const([[-1,1,-2,-6,10,6,-10,-9,7,5,-8,-1,9,1,-10,-9,5,-4,-2,5],[-6,-9,2,-9,-3,10,-7,-2,-6,6,-7,7,-4,9,1,7,9,-4,-5,7],[-1,-1,-9,-9,-5,1,9,-6,-10,8,-2,-1,-4,-9,9,-6,6,-1,2,2],[-4,-3,-2,7,-5,3,1,-8,8,3,-5,10,-8,-6,2,10,-10,8,-2,-4],[-9,4,-3,-6,-10,-10,7,8,-4,8,4,-1,-2,8,3,1,-3,3,-7,-6],[-7,-4,10,-4,8,-10,1,-9,-10,7,1,7,-10,9,-9,-6,3,3,-4,10],[8,-6,-9,1,4,-3,3,8,-10,5,-3,-8,-1,-2,7,-8,-9,-5,9,-8],[-4,-9,-10,-4,-5,-2,8,-5,-10,-5,-8,-3,5,-7,-3,-9,-7,4,5,-10],[7,-7,1,-3,8,7,8,2,5,10,-4,5,-7,-1,-8,-3,4,-7,3,-5],[9,6,1,3,-7,5,3,-5,8,-5,10,9,-7,8,-10,10,4,-7,5,-2],[-4,-8,-5,-9,2,9,-1,5,-7,-9,-5,-6,-6,5,-4,8,3,7,10,3],[10,-3,2,-9,10,-8,9,-5,9,-10,8,-1,5,-1,3,-8,-7,4,-8,2],[10,-4,-6,-6,10,7,6,-3,5,-8,9,9,-9,-9,5,5,-5,-8,10,5],[-10,10,-10,8,6,-4,-2,-4,8,-7,7,10,-3,-3,2,2,10,-9,4,8],[3,-8,-4,5,-6,-5,-4,-2,-5,9,3,-1,-5,5,-10,-1,4,-8,-2,10],[-5,2,2,-6,1,4,9,8,8,3,-6,-10,6,1,-3,7,-8,7,4,-6],[-1,8,-8,1,-10,5,-9,-8,-5,2,-10,3,-9,-7,-4,-6,7,-2,-10,4],[-7,6,4,-10,5,-6,-2,-2,-9,-4,5,-7,-5,9,6,-3,-2,1,-5,6],[7,-4,1,2,8,-3,7,7,-3,-5,-2,1,9,2,5,5,-8,-10,8,8],[-9,9,3,8,-4,4,-3,-2,7,8,9,-5,-4,-5,9,8,-4,-4,5,-2],[6,5,-1,10,10,-1,1,6,-2,-8,2,-1,-3,3,8,6,-9,1,-7,-9],[1,6,5,9,-2,-10,-3,3,5,-1,-1,-7,10,-2,1,6,9,-5,-3,-4],[3,1,5,9,10,-5,1,-1,9,7,-3,1,-4,-10,3,4,-10,-10,-9,-6],[-3,9,-4,4,-6,-3,-6,2,-3,1,-8,1,-9,4,-4,-6,3,2,8,3],[8,2,4,-8,-8,-4,1,4,-8,10,9,10,3,-3,9,4,2,5,-2,3],[-1,6,-4,-4,9,6,-7,-3,-10,3,2,1,5,-10,-9,9,-1,2,5,8],[7,5,-2,-6,7,-4,-7,3,-2,-1,9,1,-4,7,-10,-5,-1,-2,-3,5],[-10,-8,-5,10,-5,8,-8,-4,-5,-2,-8,-1,1,9,-6,3,5,-4,2,8],[3,-1,-7,5,-8,7,8,-4,-5,-5,9,-6,1,7,-4,-3,2,-1,-3,-3],[5,-6,1,-4,-2,9,6,8,-7,-3,9,-7,-9,2,-5,2,6,-3,-9,5],[-5,-5,-10,-8,-7,8,-6,8,3,9,8,8,-1,-3,7,2,-2,4,-9,9],[-3,3,-3,-7,3,-4,9,-5,4,-1,-7,4,-9,1,1,3,10,7,6,-8],[2,-10,-6,1,4,-3,-4,-10,7,10,-5,4,-8,-7,-7,-3,-8,7,-7,-6],[-8,-4,7,-7,7,-2,10,-8,-9,1,1,-2,-7,5,-7,7,-1,10,-4,10],[-4,-6,10,-3,8,-2,9,9,3,2,-6,-5,-9,-3,-4,8,7,2,-5,-6],[-2,3,-2,-7,-6,-5,7,9,7,-1,-7,8,-1,3,9,3,8,1,8,-3],[7,7,9,10,-8,-8,-9,2,1,8,-5,-9,6,-10,-10,-1,4,10,3,-1],[8,9,8,-7,-7,8,7,4,1,-10,-1,-9,8,-8,9,6,-9,-5,6,-9],[-1,6,6,3,-6,-10,3,-1,9,2,9,5,2,-8,-6,-3,3,6,9,-9],[-10,3,-10,-4,4,-7,5,10,6,8,-2,-10,10,4,-3,6,4,9,-4,3],[3,8,5,-7,-7,-4,6,3,10,-7,2,10,-3,-10,-4,-2,2,-4,9,8],[6,4,-6,10,-8,-10,-2,-8,9,-1,-10,9,4,-1,-7,-8,10,7,-1,-3],[3,1,2,-10,7,6,-6,-9,10,-5,8,-10,-9,6,3,1,1,-1,1,-5],[-5,-4,-6,3,-3,-3,-4,-9,1,3,5,1,-5,-10,-8,-5,-6,3,-3,9],[7,-9,8,-5,3,4,3,-5,-10,7,2,8,-4,-1,1,5,4,10,1,-1],[-5,-2,10,9,2,7,-1,-3,8,-1,6,9,-9,-1,4,5,-9,-10,-4,-1],[6,-2,3,-9,1,-1,8,-6,9,-7,3,2,9,-3,10,3,1,2,-3,6],[3,-9,-7,7,-4,9,-8,-1,5,-2,-7,-1,-10,-2,-4,-7,6,-7,4,-9],[10,-8,-10,-5,-3,2,-4,8,-5,-9,7,-7,3,-5,10,7,-1,8,4,-8],[2,6,-10,2,-3,6,6,-4,-7,-7,-3,7,-9,-5,10,-7,3,10,8,-1],[-2,4,2,10,6,-6,-2,-3,8,4,-3,-2,-8,2,-4,-8,1,6,-9,3],[-4,6,-2,8,1,9,7,-2,4,1,-6,4,-1,9,7,-7,10,6,6,-1],[-8,-3,-2,9,9,-3,9,10,-10,-1,-10,-7,-4,10,8,9,2,2,4,-9],[1,8,3,-1,-7,-1,3,-7,2,-8,-1,-8,-6,-6,-4,-5,-10,7,9,6],[10,-2,7,9,7,2,4,-10,2,1,4,1,9,5,7,5,-1,2,6,-9],[-1,-2,3,-3,9,-1,4,-5,3,2,-3,7,3,4,-1,4,-4,-6,8,1],[7,-10,-7,3,-7,8,-1,-4,6,-4,10,10,-2,-10,8,-10,5,-6,-5,10],[4,-1,-5,-7,-4,-8,9,-8,-4,3,-10,-7,-3,7,1,-9,5,8,-9,-9],[-8,-7,4,-9,-6,8,-7,2,7,-9,5,1,-10,-10,-8,3,-5,-4,-8,7],[7,-9,-10,6,10,-6,-3,-5,-10,3,-5,3,-7,-10,9,-8,-3,-1,-9,2],[10,4,-7,-8,5,2,-6,-1,1,7,-9,4,-3,6,-2,3,6,-7,8,9],[-7,-5,-5,5,8,-6,8,-10,7,-6,4,-2,7,-5,-7,10,5,-8,-4,10],[6,10,6,-8,7,1,-1,4,-4,-5,-3,-8,2,3,-8,7,-9,-1,-6,5],[1,5,-8,-2,-9,-5,3,5,9,1,-10,-3,-5,1,3,7,1,6,2,-2],[-8,-3,10,8,5,9,8,-4,8,4,-3,-3,-2,4,10,5,2,-3,-6,-6],[-10,6,-8,-1,-10,-8,-8,7,-4,6,-6,-4,-8,5,-7,5,-5,-3,5,-9],[-1,-8,-10,8,8,7,-4,-4,-7,-8,-7,2,-6,-7,1,6,3,-10,10,6],[-4,2,4,-2,-3,7,-3,-4,-4,-2,6,-8,3,-3,-7,-1,-2,1,-6,-8],[3,-1,-4,7,-7,-4,6,-4,-9,-2,-4,7,3,-3,-1,10,-6,-2,7,10],[-8,-6,4,3,-7,-10,-9,6,-5,3,-9,1,3,8,3,-5,-10,-7,-1,10],[7,-8,8,-8,-4,-10,3,10,7,7,6,2,3,4,2,-3,-5,5,6,8],[-6,6,-2,-9,-4,10,10,-6,3,-8,-4,-6,-3,-2,-6,-10,-1,-4,-3,-3],[-9,7,-6,4,-4,6,3,-9,-3,-7,3,3,-6,-4,-2,-7,9,2,-8,-7],[-9,10,-3,10,10,-6,7,-5,-8,3,8,-1,-2,4,-9,2,-2,-2,1,-2],[1,4,-7,2,-9,-5,3,-4,1,4,-9,-10,1,7,-5,-3,-10,4,-7,5],[9,3,-8,-8,-6,-8,1,7,1,-1,4,-1,-2,-2,-1,-5,6,4,-6,2],[-7,9,10,9,10,8,-6,10,5,-5,10,-9,-7,-2,-7,6,-7,-1,3,-10],[10,8,-6,3,10,-8,-7,9,-1,-8,-5,2,3,1,-5,-8,-9,-2,5,-6],[5,-7,10,8,-7,10,5,6,-7,-4,9,9,8,-3,-9,8,-3,-6,-9,4],[3,9,-8,-5,-1,-1,-1,-8,-2,-10,2,-4,-2,-9,7,8,9,-1,10,6],[-7,4,7,-6,5,-1,5,3,6,-10,-7,-6,-4,7,-2,-7,-2,-6,-3,8],[-10,4,-4,3,-10,6,9,-6,-8,-1,8,9,1,6,8,1,-5,-3,3,-3],[-9,2,1,-5,1,-9,-5,6,4,9,10,-1,-6,-5,10,-4,7,9,4,-8],[7,3,-8,8,-4,7,9,-8,10,-6,3,9,7,-1,1,7,7,-2,2,-8],[-6,-8,-2,-10,4,-5,9,1,4,-9,1,3,-8,4,6,4,-8,-9,-3,-3],[6,-7,3,-10,-10,-2,-5,-1,-1,-2,-9,-10,-3,9,7,-6,-1,-7,1,-1],[-6,-3,9,5,9,6,-8,-6,3,-8,9,-3,-4,-5,10,7,-9,9,4,-8],[3,-4,-2,9,-6,-8,-8,-5,3,-1,-6,-7,9,-2,9,-10,6,3,-4,3],[-9,7,2,-4,-10,6,-3,10,10,-9,-2,3,-2,-3,-9,8,-7,-7,-5,-4],[6,-2,4,3,3,-2,8,2,2,-8,-4,-8,1,2,6,2,7,-1,5,-4],[5,-3,3,-4,-3,-5,9,9,-9,-6,6,-9,2,-5,-5,7,-7,2,8,-7],[8,-7,5,7,-7,-3,10,8,-3,3,2,-7,-10,10,-6,-8,-9,1,1,2],[-10,-2,6,-6,-1,-6,-7,-1,-3,-5,-8,-3,-8,-4,4,-6,10,7,-8,-2],[2,-1,10,-5,4,2,-3,-2,-1,9,-2,-2,-2,6,-3,-8,-6,-3,-4,-9],[-10,-4,-8,-5,1,-6,10,-5,6,4,-10,2,3,10,6,8,2,1,8,-9],[-10,4,-3,-4,-10,8,-1,4,8,3,-5,9,5,-7,4,4,1,5,6,-2],[-10,-4,1,-6,4,-2,-2,-8,1,-2,1,10,-5,-7,8,7,2,-8,-1,-1],[-4,4,5,5,-7,-10,4,-4,9,-9,-1,-3,-8,-5,3,-4,10,-5,9,-1],[-8,7,-3,10,-2,-6,-5,-7,10,-2,9,-2,-3,6,-8,10,-7,9,-10,1],[7,-7,6,5,-6,-9,-10,-8,7,-7,-2,-2,-8,1,1,9,9,2,10,3],[2,-2,4,-9,3,-7,-5,-6,-1,8,-6,10,5,-3,9,2,8,8,-4,-3],[1,4,1,8,6,4,4,-9,5,-3,-10,8,9,-9,10,-3,-6,-8,8,8],[3,6,-7,-6,7,-9,-4,-4,-2,7,-9,-5,-9,1,-1,1,-3,1,10,-4],[-7,-3,-1,-6,-1,7,5,-6,-8,-2,-8,-3,8,4,-1,6,-3,-1,-7,7]], dtype = "int32")#candidate|2121|(104, 20)|const|int32
call_2119 = relay.TupleGetItem(func_1808_call(relay.reshape(const_2120.astype('int32'), []), relay.reshape(const_2121.astype('int32'), [16, 10, 13]), ), 0)
call_2122 = relay.TupleGetItem(func_1811_call(relay.reshape(const_2120.astype('int32'), []), relay.reshape(const_2121.astype('int32'), [16, 10, 13]), ), 0)
uop_2127 = relay.asin(var_2074.astype('float32')) # shape=(11, 15, 13)
uop_2130 = relay.cos(uop_2127.astype('float32')) # shape=(11, 15, 13)
func_1582_call = mod.get_global_var('func_1582')
func_1584_call = mutated_mod.get_global_var('func_1584')
const_2135 = relay.const([4,3,6,-6,-8,-5,-4,-3,9,7,-8,8,-1,9,9,-5,-2,2,10,9,6,5,4,-6,5,4,6,-5,5,8,2,6,4,1,5,-3,1,-10,-6,-10,4,6,-6,-8,7,-4,1,-4,-9,8,5,6,7,-3,-4,6,8,7,-5,6,1,2,1,7,-10,-5,-6,3,7,-8,10,1,6,-4,5,2,10,-9,9,-3,1,-6,-1,10,-4,10,-4,3,-9,10,5,-9,7,5,4,-7,-8,-3,9,-6,4,8,-5,8,8,-9,2,-9,7,-7,4,7,-6,-10,4,9,-1,5,-7,-1,1,-9,9,-5,4,7,-7,-9,-5,-5,6,-6,-10,3,4,-4,6,-9,1,-1,-6,-2,-3,4,-1,-8,5,-4,-4,4,-2,2,-2,-3,5,-8,2,-5,-3,4,10,-3,-5,3,3,-7,6,5,2,-2,1,9,-2,-10,-3,-2,-4,1,-9,1,2,9,1,9,-1,10,3,-7,4,-3,-10,2,-8,-7,9,-1,8,-2,-3,10,-2,-9,-2,1,4,4,6,1,-1,1,6,3,-3,1,-4,1,5,-10,-6,2,-2,5,-4,-2,-3,-5,6,-3,2,4,-8,1,-6,-10,-1,-2,9,-3,-2,-8,-7,-3,2,3,-1,10,-3,-1,-2,-1,3,8,-1,-7,-5,9,9,-6,-10,-6,5,8,-5,-6,2,-1,-1,9,9,4,-2,-5,-6,5,-1,5,-5,5,6,10,-9,4,-10,-1,-10,3,9,-4,-3,9,10,-10,-10,6,6,-3,6,4,-2,-5,1,4,-9,3,9,-6,7,-3,-2,-3,4,-3,7,4,-6,2,10,7,6,1,-3,4,4,-9,6,-5,1,-9,-9,6,4,1,3,3,-10,-5,-1,5,6,-4,-5,1,8,2,4,1,5,-4,-1,-10,-1,-6,-3,10,2,-10,-2,4,-2,5,6,4,9,-2,4,3,-6,-8,7,-6,1,-7,8,2,8,6,5,-7,-7,-7,10,6,1,5,-1,1,9,-2,-9,-9,-2,-3,4,-3,9,-1,2,-5,1,-2,-10,-4,-1,8,-3,-9,9,-3,-3,5,6,1,3,-2,-5,-9,-9,6,9,2,-8,-8,6,-1,6,1,1,-4,1,1,2,2,2,3,-1,-5,7,-7,5,-2,-3,-6,6,-9,6,2,1,-1,-2,-8,9,-4,-9,9,-9,6,3,-4,-10,5,-6,-3,-3,-2,9,9,-3,6,4,-5,-6,2,-3,-10,3,10,-4,-4,9,3,-6,-6,5,-3,7,9,1,5,-2,-6,2,-2,-10,5,-4,5,-3,3,3,7,3,3,9,-7,-3,-6,10,-3,-6,-8,-9,2,-4,-9,10,6,2,-7,-9,4,7,7,7,8,8,-4,8,8,3,-10,-3,-6,8,-8,8,-9,9,4,3,9,-5,8,-1,5,4,-6,-4,4,6,8,-3,8,-2,7,-4,9,-9,3,5,-3,3,-10,2,8,-5,9,-5,1,1,5,4,5,2,5,-5,-10,8,5,3,5,2,-7,4,4,-6,3,2,-5,-5,4,1,-10,4,-8,-1,-7,8,7,4,9,10,-1,-9,7,-1,6,8,8,3,1,8,4,5,-7,-5,-8,8,7,10,-3,-6,-10,5,6,-3,-10,6,8,-9,10,-1,7,10,7,10,8,9,10,-5,3,-7,2,9,5,-4,2,-5,-7,4,4,5,10,9,9,-10,5,-5,1,6,-4,2,8,-4,2,-10,-2,6,9,5,1,-2,1,3,3,-7,-2,2,6,-6,6,3,-10,-3,6,9,-1,4,-10,5,8,10,-3,-9,-10,7,10,-7,1,-9,6,-4,1,-1,9,-4,-8,-7,9,-9,-3,-7,6,-3,-4,4,4,-10,-10,-6,7,-5,6,-5,2,-4,-10,-7,-8,5,-5,-3,9,-4,4,-5,1,5,4,10,6,10,-8,-4,7,8,8,-1,-5,-5,4,-10,-2,10,-7,-3,-8,-2,-1,-3,-8,10,-2,-5,5,-8,10,6,6,-1,8,-9,8,-3,8,5,4,-1,8,7,-6,4,6,-9,6,5,-1,-10,-6,7,-6,-9,8,9,6,9,1,-7,1,-9,-3,1,-1,-4,-2,10,-3,-8,-6,9,3,5,1,-2,7,1,8,-5,-3,-5,-2,-4,-1,-8,-3,1,4,1,10,-2,-7,-7,7,3,5,-6,2,-1,-6,1,5,5,-10,7,-4,-4,-1,5,7,7,-7,-6,-7,-1,6,-2,6,2,-6,5,-7,-10,-2,-8,6,-8,10,-3,2,10,7,-1,-1,-8,-2,-8,2,9,4,2,3,-4,-5,-10,2,7,3,-2,-2,3,1,-3,9,6,9,5,9,7,-6,-3,8,-8,9,-5,-10,3,8,-6,-1,-2,2,4,-9,-5,7,-5,-7,6,-5,-7,7,-10,-9,4,1,-10,-5,6,7,-1,1,-9,-3,6,-6,-4,-2,-8,1,1,-9,-6,-7,-10,-4,-1,1,3,7,-9,-2,-3,-7,5,4,9,9,10,8,2,-3,8,5,5,3,-4,-8,1,-10,5,-4,-9,-2,9,-9,5,-8,-5,6,-4,5,-6,-6,10,3,4,-10,8,-4,-3,2,6,-10,-2,10,-7,-5,-9,10,-9,-5,-8,-5,-6,-7,-1,-6,8,7,-2,7,3,-10,3,10,-3,-4,-9,-9,-6,-5,-5,6,-6,-5,-10,-8,6,-5,-10,-10,9,3,-3,-4,-9,7,-9,9,-6,4,9,-10,1,-4,10,3,-10,-1,9,3,4,3,-3,-1,-9,6,8,-2,3,2,-4,7,1,6,-3,9,-8,-3,5,1,-10,3,-5,8,3,-3,3,10,6,-4,-6,6,-5,5,2,5,3,9,5,7,-7,6,10,4,3,-7,-2,2,-2,9,-3,6,-4,-3,2,8,10,-9,-1,6,-2,-4,-6,2,-5,3,-7,3,4,10,-6,3,-4,6,-7,3,7,-6,6,-2,10,7,4,7,-8,2,-7,1,9,-7,4,-8,7,-6,1,-4,-5,8,-2,7,-4,-5,-6,-10,-8,3,-9,2,4,-1,-8,-8,9,-2,1,-3,8,5,6,3,4,-3,9,-3,5,-10,10,-8,3,9,1,8,2,5,9,-2,-4,-10,-2,7,-6,4,4,4,-4,-1,7,-4,3,6,9,-6,5,-7,-10,6,-1,1,-4,3,2,-3,-3,9,-10,9,5,2,3,6,-6,-9,-5,-2,-7,-7,1,9,8,-10,-5,8,4,9,-1,-1,9,4,2,3,3,10,1,-7,-7,9,-8,1,9,1,5,7,-4,10,-8,-5,4,-6,5,3,-2,4,-9,4,-5,8,-9,-5,-7,-10,9,-6,3,5,-5,1,-3,7,-2,-2,8,-8,-6,-1,-10,-5,-6,-10,-3,8,7,5,-4,6,5,-2,9,-1,5,-7,5,-3,-5,2,10,-5,-9,9,-3,1,2,-3,5,7,10,-4,7,5,-10,9,-7,9,3,1,-4,7,10,-10,-6,5,-10,-8,-6,-7,10,-8,-10,-4,8,10,10,1,-7,-6], dtype = "uint8")#candidate|2135|(1344,)|const|uint8
call_2134 = func_1582_call(relay.reshape(const_2135.astype('uint8'), [16, 6, 14]))
call_2136 = func_1582_call(relay.reshape(const_2135.astype('uint8'), [16, 6, 14]))
output = relay.Tuple([bop_2076,bop_2085,call_2098,const_2099,const_2100,call_2119,const_2120,const_2121,uop_2130,call_2134,const_2135,])
output2 = relay.Tuple([bop_2076,bop_2085,call_2101,const_2099,const_2100,call_2122,const_2120,const_2121,uop_2130,call_2136,const_2135,])
func_2138 = relay.Function([var_2074,var_2075,var_2084,], output)
mod['func_2138'] = func_2138
mod = relay.transform.InferType()(mod)
var_2139 = relay.var("var_2139", dtype = "float32", shape = (11, 15, 13))#candidate|2139|(11, 15, 13)|var|float32
var_2140 = relay.var("var_2140", dtype = "float32", shape = (11, 15, 13))#candidate|2140|(11, 15, 13)|var|float32
var_2141 = relay.var("var_2141", dtype = "float32", shape = (11, 15, 13))#candidate|2141|(11, 15, 13)|var|float32
output = func_2138(var_2139,var_2140,var_2141,)
func_2142 = relay.Function([var_2139,var_2140,var_2141,], output)
mutated_mod['func_2142'] = func_2142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2205 = relay.var("var_2205", dtype = "int32", shape = (7, 14, 9))#candidate|2205|(7, 14, 9)|var|int32
var_2206 = relay.var("var_2206", dtype = "int32", shape = (7, 14, 9))#candidate|2206|(7, 14, 9)|var|int32
bop_2207 = relay.left_shift(var_2205.astype('int32'), relay.reshape(var_2206.astype('int32'), relay.shape_of(var_2205))) # shape=(7, 14, 9)
uop_2221 = relay.sinh(var_2205.astype('float32')) # shape=(7, 14, 9)
func_788_call = mod.get_global_var('func_788')
func_790_call = mutated_mod.get_global_var('func_790')
var_2232 = relay.var("var_2232", dtype = "float64", shape = (1800,))#candidate|2232|(1800,)|var|float64
call_2231 = func_788_call(relay.reshape(var_2232.astype('float64'), [8, 15, 15]))
call_2233 = func_788_call(relay.reshape(var_2232.astype('float64'), [8, 15, 15]))
output = relay.Tuple([bop_2207,uop_2221,call_2231,var_2232,])
output2 = relay.Tuple([bop_2207,uop_2221,call_2233,var_2232,])
func_2244 = relay.Function([var_2205,var_2206,var_2232,], output)
mod['func_2244'] = func_2244
mod = relay.transform.InferType()(mod)
var_2245 = relay.var("var_2245", dtype = "int32", shape = (7, 14, 9))#candidate|2245|(7, 14, 9)|var|int32
var_2246 = relay.var("var_2246", dtype = "int32", shape = (7, 14, 9))#candidate|2246|(7, 14, 9)|var|int32
var_2247 = relay.var("var_2247", dtype = "float64", shape = (1800,))#candidate|2247|(1800,)|var|float64
output = func_2244(var_2245,var_2246,var_2247,)
func_2248 = relay.Function([var_2245,var_2246,var_2247,], output)
mutated_mod['func_2248'] = func_2248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2266 = relay.var("var_2266", dtype = "float32", shape = (4, 8, 7))#candidate|2266|(4, 8, 7)|var|float32
uop_2267 = relay.asinh(var_2266.astype('float32')) # shape=(4, 8, 7)
output = uop_2267
output2 = uop_2267
func_2272 = relay.Function([var_2266,], output)
mod['func_2272'] = func_2272
mod = relay.transform.InferType()(mod)
mutated_mod['func_2272'] = func_2272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2273 = relay.var("var_2273", dtype = "float32", shape = (4, 8, 7))#candidate|2273|(4, 8, 7)|var|float32
func_2272_call = mutated_mod.get_global_var('func_2272')
call_2274 = func_2272_call(var_2273)
output = call_2274
func_2275 = relay.Function([var_2273], output)
mutated_mod['func_2275'] = func_2275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2549 = relay.var("var_2549", dtype = "bool", shape = (4, 9, 2))#candidate|2549|(4, 9, 2)|var|bool
var_2550 = relay.var("var_2550", dtype = "bool", shape = (4, 9, 2))#candidate|2550|(4, 9, 2)|var|bool
bop_2551 = relay.logical_and(var_2549.astype('bool'), relay.reshape(var_2550.astype('bool'), relay.shape_of(var_2549))) # shape=(4, 9, 2)
func_1582_call = mod.get_global_var('func_1582')
func_1584_call = mutated_mod.get_global_var('func_1584')
var_2555 = relay.var("var_2555", dtype = "uint8", shape = (1344,))#candidate|2555|(1344,)|var|uint8
call_2554 = func_1582_call(relay.reshape(var_2555.astype('uint8'), [16, 6, 14]))
call_2556 = func_1582_call(relay.reshape(var_2555.astype('uint8'), [16, 6, 14]))
func_969_call = mod.get_global_var('func_969')
func_971_call = mutated_mod.get_global_var('func_971')
const_2563 = relay.const([-9.007305,1.634759,0.620924,-0.643750,-9.888444,-9.064306,-4.283973,0.080115,-5.173950,-4.718945,0.136059,5.899237,2.125642,2.067496,8.360262,5.671380,9.783854,4.151041,-5.933055,-6.891919,0.751984,9.027681,3.672878,-2.448080,3.495720,2.883719,1.926594,2.646560,4.256493,-4.876779,-8.002772,-5.176386,-1.715312,-9.216175,-7.905332,5.796640,-1.983389,6.970360,6.151536,3.865676,-6.305431,2.963834,4.458946,6.019895,-0.575815,3.405520,9.823041,-2.156599,4.024148,-6.269781,7.481224,-3.912527,-5.301780,6.690749,5.313073,8.677082,-8.506097,-9.123544,4.215041,-3.710003,7.535378,-1.773404,2.478734,-4.790681,-4.755549,-9.164326,3.112566,3.805998,-3.077428,3.364296,6.586181,-6.911639,-9.594145,7.867261,-3.178454,7.421113,9.704776,-9.940135,-5.861666,1.829925,9.391988,-9.029512,-6.076989,7.253316,-4.737027,5.604901,8.140186,6.641535,-6.239577,3.480514,-3.832851,-8.831799,9.643200,8.531995,3.042718,-8.373268,-8.881954,1.233026,-0.178860,-9.583437,-4.445042,-7.990089,2.649198,6.686071,-1.925708,-9.014115,7.288022,-2.800433,8.315268,-4.623973,-9.515052,5.584492,0.212408,-6.329352,8.252180,-9.758551,-8.358652,8.767633,8.322058,9.938679,-5.854867,-2.568925,-4.502773,-5.684210,-3.303577,-8.278245,9.432826,-8.381443,4.559805,-3.281819,0.419227,-2.671253,6.539129,6.587414,-0.213399,-9.523751,-0.606684,-7.481968,2.078563,-3.377668,3.251932,-8.967685,-4.983380,5.481820,6.794143,5.139544,-8.208502,-6.896905,3.533677,-2.893649,-1.351118,-6.358098,-5.996671,2.132489,2.768010,1.165690,5.070576,5.880642,-3.950314,2.499101,-4.951489,-5.213768,-2.125172,-3.969840,-9.370364,0.393697,7.534481,0.082674,-9.862125,2.429269,-6.013001,-5.199902,3.258757,-5.427607,-6.139247,6.034425,-0.482809,7.942342,5.000505,-7.116749,9.081888,-5.955158,-7.280285,-8.790171,2.649169,-6.897544,-2.399992,9.846761,8.423620,-8.120088,0.773610,-2.805011,9.935065,-1.052568,-1.569998,0.083833,-6.126894,-5.578924,8.233103,0.770819,3.921309,0.176875,-5.065097,9.505318,-4.879823,0.839777,4.342852,7.802948,0.154824,9.826167,-7.008598,2.180627,5.253748,6.370562,-9.901262,0.940690,1.413767,-1.188506,7.131064,8.995232,0.858494,5.075206,-6.955694,2.121852,-1.693263,8.640844,3.339042,3.794379,6.576221,-1.230880,2.315375,0.136555,-6.482953,-5.954566,3.137491,4.647059,-6.209174,0.753658,7.705751,-5.071605,-5.156555,-0.429984,0.142062,-5.135628,6.359288,-3.940848,-5.787500,0.880612,8.595137,-9.892804,6.210112,6.418412,-7.823469,-2.709843,-0.776602,5.854333,6.619193,-2.692979,7.519280,3.947776,2.785080,3.439583,1.114061,-0.441148,-9.473758,6.944799,-0.706402,1.877183,8.329773,-8.753340,-8.184502,-4.599008,-7.670592,-3.832371,1.228143,-9.227278,-2.306098,-5.185410,-8.406160,-2.562498,0.373014,-7.967105,1.181969,-2.330351,4.869419,-4.247648,-3.821704,0.690183,1.072425,-2.361396,8.450847,-1.057384,-7.441681,1.270170,9.797491,0.252560,5.940389,5.820864,0.581317,-4.661953,-7.428555,2.260264,4.823645,1.851622,-1.102460,-3.522831,-5.257605,3.002412,2.639901,4.968915,5.832528,-9.788176,-1.995608,4.798129,4.491159,1.758823,-9.437879,2.312803,9.741164,-6.848877,-9.939229,-2.038695,8.564696,-7.700802,-4.609528,-9.512318,-0.860874,9.196808,-7.640647,1.960451,-9.329296,5.811427,6.490622,-6.024919,-6.351339,-8.311305,9.320802,8.307481,4.850547,-6.724725,-1.273337,3.054987,1.289621,3.990670,7.549268,6.598745,6.659254,-7.629442,5.528051,-8.892328,0.455021,4.810773,2.598235,-8.419517,-0.998892,-6.387147,5.640860,2.150364,-9.391683,-4.163775,9.290873,9.335091,-0.358137,3.543463,9.978659,3.206709,3.706706,1.055411,-7.415417,1.355599,-9.043775,8.826954,0.890018,-7.824447,8.517993,6.326391,6.350575,-3.164952,-1.394304,7.707033,7.264681,-6.098816,5.127907,3.400654,5.112528,-4.638602,-7.659696,5.583904,1.740549,-8.586981,-9.407300,6.076808,-4.747713,-5.968433,-1.555006,-6.845579,-1.910200,-4.825833,1.405739,7.208256,-0.542723,-3.286565,8.842220,-4.227723,-9.816894,-2.494415,-1.226883,-2.738490,2.215729,9.928228,-0.844391,0.027284,-1.954467,5.533681,8.349715,4.828789,-2.434795,-5.224878,1.773768,-9.502793,6.860579,1.562545,6.634928,5.014549,-2.311994,-4.839897,-2.223824,2.861438,0.126209,-1.446090,-0.126461,-0.750401,-1.028337,-0.090560,7.447268,0.982938,8.062751,-3.268118,-7.876751,9.550124,-5.778786,2.212044,1.581771,3.452388,8.483943,6.558582,9.982780,4.549776,4.822239,-8.041507,-1.078366,3.630242,-2.829312,-6.043239,8.826943,3.420803,3.827975,3.991669,9.003036,0.437731,-1.139300,-2.812277,-4.718984,8.780570,-7.995891,-0.137285,9.598124,-2.829378,8.992689,-1.856286,2.450425,-6.399244,2.537022,9.026611,2.825667,9.643002,-1.291064,7.219532,2.488501,-5.738906,-6.750838,8.871149,-3.614301,8.009162,-6.383699,3.323469,6.806553,0.250689,3.345016,-6.543144,2.591277,-5.348409,8.262378,0.879944,1.585075,-4.196406,-7.816345,3.719320,-5.832416,2.738159,7.457592,-9.078807,-6.681713,7.692396,-5.340020,-8.704790,4.323131,5.481611,6.146741,-3.332999,-2.551742,-3.839586,-0.154998,-9.156241,5.970502,3.858909,-9.881550,7.046206,2.454845,-5.061245,-1.244828,-1.041861,8.687755,2.369298,-6.021280,3.896742,-5.613484,3.260309,-0.865610,4.484937,6.242859,-7.665938,-7.586947,2.338971,-8.331076,-6.364198,-1.147102,-4.671139,-4.053996,-7.187247,0.065475,-9.600178,-6.622729,-1.360223,4.506489,-5.329811,6.849085,-3.627348,-7.585461,4.961319,7.813064,-1.082422,-5.304375,0.169146,-9.613053,4.262255,-1.370868,6.854839,-9.023935,5.497144,-5.036604,-4.018079,-1.888901,4.531297,-1.357786,0.862506,-7.980017,-7.061848,-7.743831,-1.349574,3.938068,1.975628,0.234342,-1.794809,-0.441084,5.560571,8.210105,-7.008894,-6.872785,2.126955,1.250908,-7.801411,-2.688214,-7.413399,-8.885090,0.671947,2.645505,6.953753,5.040407,-8.738058,8.815893,-1.867000,2.334352,-4.402495,5.435582,4.687488,-8.967570,-5.108346,-0.207075,-8.418022,7.372626,-6.998251,-2.139488,4.618109,-6.470846,6.440344,9.310435,-5.085748,8.130464,-9.418063,-1.169273,9.676950,1.173386,5.278595,-0.997460,9.621823,3.559970,-4.072309,9.625362,-6.588994,5.283104,-5.856554,5.998516,-1.862134,6.374419,8.250609,-6.085068,0.574886,0.490301,8.500090,-5.609688,5.656196,-2.654786,1.412693,-5.809540,6.850913,3.668716,-4.628794,2.307501,2.880784,-6.475576,-7.307347,7.277425,-2.491764,7.750639,2.261690,-1.633722,2.885719,-8.150582,6.039185,-7.328788,4.262312,-9.699177,2.405288,-8.492459,-3.602207,8.429954,1.268254,-7.382880,3.302874,7.923351,2.806164,-0.251593,-7.495280,2.472004,8.701268,5.330502,-4.944490,-5.793531,8.341533,-8.329992,1.679219], dtype = "float32")#candidate|2563|(672,)|const|float32
call_2562 = func_969_call(relay.reshape(const_2563.astype('float32'), [3, 14, 16]))
call_2564 = func_969_call(relay.reshape(const_2563.astype('float32'), [3, 14, 16]))
func_1808_call = mod.get_global_var('func_1808')
func_1811_call = mutated_mod.get_global_var('func_1811')
var_2567 = relay.var("var_2567", dtype = "int32", shape = ())#candidate|2567|()|var|int32
var_2568 = relay.var("var_2568", dtype = "int32", shape = (2080,))#candidate|2568|(2080,)|var|int32
call_2566 = relay.TupleGetItem(func_1808_call(relay.reshape(var_2567.astype('int32'), []), relay.reshape(var_2568.astype('int32'), [16, 10, 13]), ), 0)
call_2569 = relay.TupleGetItem(func_1811_call(relay.reshape(var_2567.astype('int32'), []), relay.reshape(var_2568.astype('int32'), [16, 10, 13]), ), 0)
func_2138_call = mod.get_global_var('func_2138')
func_2142_call = mutated_mod.get_global_var('func_2142')
const_2578 = relay.const([2.270073,8.367035,-8.643253,6.612912,-7.298070,7.660715,9.984101,-3.676813,0.442004,1.452072,-7.902344,-8.169381,-9.631934,-5.523576,4.651233,8.915008,-3.085090,-9.272052,7.528892,-1.736636,5.937072,-9.933549,1.211014,-7.347237,1.020264,-0.703970,1.764399,-0.342404,-3.652869,6.069367,9.512018,-1.321088,6.229992,-3.409874,-7.675059,-6.939967,-9.236631,3.226304,-2.386250,2.644387,2.605493,4.693992,-2.169891,-4.058705,0.770187,-4.377242,0.362438,-3.693809,-7.597962,7.138175,9.471518,-8.989690,-9.996594,4.101803,-9.629749,1.627656,-2.233849,-2.481454,-3.320291,-4.629365,-9.680422,-0.953820,0.083728,-7.800014,5.360930,6.623276,-3.822590,-9.415726,1.848884,6.959559,-2.995007,0.328855,0.869603,3.654931,-1.809878,6.148153,9.026698,-9.286652,1.790554,-1.183541,-5.617356,9.574481,5.220578,-0.544160,-0.550215,-3.727394,-6.400709,5.949356,2.931204,4.273955,-4.204177,-9.189027,-0.755714,5.974319,-4.674484,-4.751383,2.893792,9.204812,3.785687,5.536847,6.232271,0.196927,0.555824,1.798264,9.279323,-9.936491,-9.684655,1.223672,-0.802972,-9.549554,-8.454061,3.368581,-6.450606,4.228642,-9.401366,7.280673,-1.315591,2.807758,-4.750312,8.144074,1.411645,0.193678,-1.034911,-6.527775,4.192207,8.132598,9.765648,1.252037,2.957427,-0.097621,9.271576,2.282773,-9.326803,8.689885,-2.672002,-8.877657,2.021112,7.138409,7.015562,-7.230446,-1.319260,-0.014742,-7.403529,0.158234,-1.143823,-2.615834,-5.745795,-0.788667,-1.050181,3.097816,-6.447313,5.668123,5.520131,0.598792,-3.841490,-0.441632,-7.159408,1.338858,-9.461922,-4.911529,-1.822138,2.225218,0.750113,9.764937,4.097532,-0.577622,-1.982996,5.204850,-6.665241,-9.500756,-7.781485,7.312992,-2.067020,-9.729528,0.549201,9.560864,1.919648,-0.318765,-2.738700,-0.965524,-0.532266,6.151232,-0.111108,8.210864,-5.771818,-0.809566,-9.526377,8.940453,-1.976730,7.076592,-3.670943,4.742572,9.557002,-7.171255,6.777753,-0.928398,4.106344,-6.780404,-8.052653,-3.457084,-9.853801,-1.556773,-2.800663,9.033685,4.466983,7.945519,5.667656,6.564263,-4.920361,1.636766,-6.947175,-6.831698,3.713799,-4.673867,-0.570477,-7.932183,5.491529,2.070095,-0.424818,-2.230272,5.020880,-8.323738,-2.232820,-5.774435,0.672565,-1.102831,6.184377,-8.219600,0.550374,-8.907398,4.689869,-4.073660,7.094216,5.026544,-4.557274,2.901592,0.867720,8.240699,1.911213,-0.929279,6.006814,5.200056,6.046918,2.959218,-9.071845,-7.591908,3.572524,-6.617003,-0.562378,-4.911627,1.450906,1.102590,4.553206,-2.848845,-2.228670,-2.001961,9.103108,-2.689248,7.415218,8.620856,2.890276,6.632466,6.202248,-8.967088,2.775715,-1.397264,-7.115920,4.276413,-3.475654,0.462950,1.947627,-0.655212,5.120222,1.502105,1.094254,-8.625951,9.631999,3.408665,9.987586,-7.064572,-3.183410,7.724069,-3.397954,8.558892,-2.015153,3.161687,-0.253446,-5.997783,-9.361790,-7.294460,-2.470757,0.942799,-5.106580,-5.959647,-0.398703,3.483584,-5.252138,5.162602,8.499122,6.206045,2.672762,6.308452,3.451300,9.198751,-3.983598,8.879549,-3.172235,-6.631944,6.343239,-2.474498,1.307783,-2.869727,-0.917245,2.390158,-1.875585,5.354992,3.668565,2.396744,-7.481162,4.163833,-3.356486,-7.603888,8.930994,-9.543863,8.341215,-1.897792,-2.012875,-1.433563,-5.940328,-8.061201,8.747549,9.156370,6.975259,3.192969,0.137347,-0.855971,8.748106,1.717867,0.833838,2.177877,-9.855908,0.719569,-4.649700,-6.110330,4.530502,-5.705627,-8.978029,-1.428636,-8.959987,-3.142315,-5.112364,-0.675249,6.247322,-2.193514,2.790327,2.129559,9.709410,-9.952662,6.623177,-3.434918,6.183954,6.867412,-6.654622,9.308475,5.296058,1.467337,-9.766560,3.532196,8.651837,-4.473664,7.742377,-2.150890,6.174023,-6.511693,8.534012,7.067688,1.410005,2.666940,-9.139179,1.232306,-3.438148,7.172908,-6.182917,-3.066056,-4.131536,-5.460106,-5.024820,-8.519047,0.818111,-1.932347,-2.774922,0.022520,-0.101066,1.357013,-0.050175,-5.550057,1.744217,9.033779,-9.205087,0.575781,1.626507,-5.035793,5.539239,2.703765,-4.209943,9.636865,8.558931,-3.264237,6.939926,0.907331,-3.263844,-9.818525,0.121379,7.871893,9.052328,3.166453,-6.780117,0.206069,-0.151813,-2.335998,-2.436410,0.014790,7.993104,-5.874756,-4.924645,-9.239039,8.987173,-8.672338,-3.901528,1.075392,9.828701,-5.693960,-8.123514,8.082308,-8.062640,0.717959,9.848471,9.044265,1.292080,-5.421971,1.134745,-7.005907,2.349265,9.057799,5.966410,-7.388478,5.924840,-7.794413,-3.242945,9.539462,-8.157635,3.117139,1.327729,-6.868723,-8.403592,-1.525986,8.110413,4.695370,-7.733298,-7.700996,7.743008,-3.176523,-9.708457,-2.542781,-6.058074,2.705525,5.508914,-7.240096,8.073641,5.153746,6.016053,9.283889,-1.736107,-5.157131,-9.827324,-8.134165,9.529768,-4.881456,-0.333871,-7.651338,-4.901451,9.612167,-4.614317,0.241096,-2.402680,-9.410976,-6.892549,-0.923938,-0.699422,2.376241,0.301601,-9.060675,-5.998642,-1.427601,8.829597,8.129677,4.131410,1.759202,0.593496,6.753335,2.033585,2.452208,-4.867988,2.351285,-2.977176,6.872323,-9.705985,-6.245638,-7.377721,3.729797,8.260592,-4.493069,6.027838,9.506426,-7.129208,-1.276104,-1.174794,8.448278,2.686988,4.778343,-6.654421,-5.863712,-6.999636,9.198741,6.850329,-5.474765,-0.583313,5.224290,0.833361,-8.545664,-0.260682,3.130459,-7.567436,6.634961,6.635376,-9.278982,9.851467,0.098680,3.385251,-0.335862,5.939749,-3.716392,9.719123,-5.248333,-9.009567,-7.567544,6.386836,2.739929,2.808873,-5.987148,5.710888,-3.186494,7.165232,-1.988001,-9.421278,3.927778,0.117224,7.790883,-9.146215,0.348556,-4.518741,8.526117,-4.195013,-1.584488,1.043227,-3.861707,0.207878,2.539555,-7.264374,3.014042,-9.028054,3.938813,-3.863969,2.336765,-7.025052,2.069324,-2.106231,-8.681573,7.040384,-7.580010,8.458990,5.930394,4.972485,2.239235,-4.461387,2.569156,-7.613287,6.408369,5.557498,4.816693,0.997467,3.775323,4.997632,-5.448960,-6.585066,9.122272,-0.352536,-7.752605,0.032536,6.534323,-8.143768,-1.086580,2.168668,-7.132716,-0.404602,-2.581601,-6.890043,-6.485002,-2.580018,5.100973,1.992484,-3.850062,7.530670,-0.837884,4.624714,2.004529,-2.148290,-3.569357,9.075601,-9.200572,-9.746477,0.933342,-8.412415,-1.447571,6.768999,0.695321,-7.756769,-0.719136,-8.718702,-7.659712,-0.483131,-0.213142,2.841469,7.640327,8.248952,8.870781,-2.237767,-5.406149,-6.431647,3.364125,-7.644195,-4.349217,7.038527,6.198770,9.448350,3.069211,0.007679,-2.682842,-2.920198,8.952274,-0.435198,2.400608,8.243684,2.703003,-4.097363,2.426500,-6.470959,2.148003,-0.599768,9.305172,-8.604315,-5.402972,-9.314277,-3.662198,-4.359393,-3.290438,-3.538797,9.414557,-1.437135,5.749051,-3.135552,1.062019,9.301169,-8.470800,5.548796,6.224090,-7.734692,6.688388,2.626435,1.489176,4.048960,-0.481004,5.476943,-9.236853,-5.756491,-6.526770,-8.507703,6.084067,-8.205066,-3.617509,-3.824116,4.666437,9.124296,5.802861,-1.969414,-2.653833,3.179299,-7.858710,-1.369956,-5.634837,-2.247357,9.042530,-3.729156,-7.192395,-3.569481,4.823038,6.029075,4.741819,8.593739,2.886392,1.593303,-9.580219,-5.787836,3.431433,7.290264,5.652272,-9.591327,-7.304765,-1.043634,6.950667,0.446995,0.225001,9.644064,5.506734,3.552186,3.950354,-1.671471,8.392568,-0.212838,-5.767061,-3.979196,0.584379,-2.418944,-7.842567,0.508881,-2.745564,-6.392970,7.191996,-8.214664,-4.613829,4.332526,5.385508,8.817342,-0.509097,3.108569,6.453248,-8.393434,0.813678,6.429552,8.086920,1.012534,6.487939,4.310740,-0.500491,-8.097920,-4.327403,-1.160147,4.222062,-5.673678,5.941104,-9.016582,-6.131002,6.527582,-0.143807,0.390518,7.399803,8.651598,-4.212532,8.941905,-6.251086,5.373665,3.171452,-8.682266,-6.407789,-3.618070,8.143787,-3.128949,-2.427854,0.680403,-6.192078,-1.877215,8.699729,6.965151,5.297448,-3.864698,-9.228544,-7.036008,5.977046,-4.101607,7.955828,6.288645,-8.927281,-0.939669,-2.992844,5.002778,-2.159239,-9.681015,3.382788,9.114764,5.647134,-7.239961,-5.088346,5.072563,-5.222293,9.889051,0.752801,-0.378288,-7.028482,-0.034740,-5.823903,-5.388537,2.767727,-5.899244,-8.990471,9.265880,-6.249929,2.980212,-1.704538,-8.053129,-9.738247,7.225965,0.592255,8.931762,-1.942313,-5.643300,4.277149,-6.839651,0.035633,8.549720,-9.038688,5.277061,0.147962,1.658864,-4.562009,-8.554773,7.957998,-4.237218,5.093633,6.133761,9.792886,-7.707952,-1.856007,2.146176,0.427315,5.964980,-3.034952,-3.031382,0.939222,9.914039,-6.247406,-7.599123,8.613737,-7.699479,0.440894,6.220793,1.550493,0.478040,-4.075421,3.401362,-0.294964,5.776763,-6.249459,-5.063524,-8.605538,7.806671,1.504041,-9.486483,-1.731689,7.188902,-0.246102,-4.393698,-1.019220,0.822788,-1.243256,-2.849886,5.577422,6.921023,-4.535301,2.803596,-9.410455,0.257029,5.976287,-3.647723,-5.730096,2.356564,-5.891875,-0.662977,8.047729,1.406878,-5.688193,-3.921611,-5.586471,9.945700,4.175792,7.179673,4.736957,6.648176,-7.007066,-0.037989,3.017920,-8.006468,7.617063,-8.118813,-8.519915,3.705961,-5.689855,8.932518,3.993071,9.472169,9.691840,-2.555856,2.236049,0.544447,-9.319205,-4.428197,2.200334,0.158546,0.541663,-8.397858,-0.110515,-9.296198,4.271723,6.663948,7.120006,-8.629778,5.065694,8.532073,-7.430861,-5.825192,3.814083,6.155090,5.334930,8.497266,-8.791374,0.543887,0.907633,9.681875,4.845558,-5.212238,7.556483,0.360946,7.067832,6.824309,-5.304069,-3.263266,-0.595921,-6.862909,5.416667,-4.747005,7.286766,-1.543821,-9.949763,-1.321915,-3.613727,-6.490704,5.630664,-3.120253,-0.212625,-5.261173,7.859092,-0.675337,-5.125538,-2.455474,2.605697,-3.718069,-7.678447,8.322822,-1.561186,-9.283956,-0.929476,3.924714,-8.382007,7.605379,7.266611,0.811257,-5.732245,7.639423,9.835758,-2.177896,-1.126925,2.945538,2.077357,2.630268,-0.938197,-7.520516,-0.746321,-9.668405,8.305295,-9.704513,-9.896158,-7.734851,1.731449,2.851222,9.752335,5.992237,-9.765488,-2.966561,-3.728683,-7.596653,7.667521,3.837334,-7.797457,-9.068864,2.759029,-9.944685,3.028082,9.939142,-6.494498,3.953045,-7.158019,-1.108038,5.222204,5.257555,-5.247080,7.302546,-1.089359,-2.945856,-8.121639,1.390638,7.278138,6.603562,-2.631664,6.193920,-1.161814,-8.090440,-7.006407,5.866643,4.442313,1.832327,-8.284176,6.313199,8.820975,1.109843,-2.590183,-5.431143,7.537183,-1.425252,-1.454131,-3.045025,-6.013096,1.956421,2.374822,2.280740,5.565248,9.484907,8.756414,5.641035,-8.665728,-6.443983,0.744130,-0.772908,4.605598,-0.234102,-2.756810,-3.302505,4.891274,9.606579,-9.964460,0.842868,6.169418,-8.555601,0.545534,-0.281060,-8.818230,-2.506228,7.432267,-3.329577,-5.124464,-6.192371,-4.088946,8.951358,-5.405096,-9.833222,9.485364,8.704142,-3.065686,6.015440,2.522825,7.122424,1.352933,6.129845,-0.245352,8.866874,-8.066394,-1.595417,-8.025270,-0.785266,-8.172273,3.696043,-1.557783,9.212677,-1.414384,-2.496990,-3.343322,-8.634304,0.710541,-8.099406,5.033610,-1.323148,8.521195,-0.949688,5.053039,-8.570449,-2.651609,7.718701,-1.822852,4.710141,-9.985510,-5.720439,-2.217236,-7.883129,-7.464812,4.441921,-5.992196,0.137023,-5.195796,2.407217,-3.477092,-0.062128,7.893294,1.950819,-5.523655,5.689519,-4.293011,4.332217,-0.878343,9.102190,-7.259636,-4.942294,-0.986819,-6.668862,-2.881927,-3.752037,1.651773,8.214683,9.618026,7.211218,6.991578,-2.939126,-5.295012,-9.253351,1.631356,-3.672752,2.464876,-1.841123,-0.086022,-9.084919,-7.545072,-4.538606,1.321769,-3.868875,-3.501911,-2.279122,-5.335768,-6.152938,-1.088934,7.627384,-4.368634,4.177218,6.674457,1.776351,-0.313149,-4.900828,0.762817,3.378096,-2.343034,8.618297,0.072575,-9.664556,-7.478413,-8.896380,-2.218176,-1.283722,0.760403,-9.209610,7.948380,9.361335,2.490288,-2.847499,-1.099345,-1.427581,2.040967,2.619238,0.742031,5.118637,-9.817720,5.766390,3.063788,1.155571,7.414254,2.554067,-6.038477,4.028264,-7.688210,-7.414402,8.480087,8.486446,-7.137719,9.573429,3.132360,4.430928,-8.713045,-6.519610,-6.520575,6.322995,7.130895,-4.850975,6.947246,0.160413,9.282078,-7.567668,-3.056725,7.564712,-4.474269,6.095437,9.930853,-7.532884,6.297098,-9.474685,-5.615667,6.391816,-5.462212,4.901887,9.598459,-6.184198,-7.902671,5.319619,-4.755748,8.629755,4.338558,-2.378950,6.333149,6.662094,8.322928,-3.830593,6.650921,8.614835,6.246018,2.216309,-7.603665,7.930259,-5.598272,9.475143,-0.335277,1.905172,1.866788,-5.981148,-5.664366,9.886048,1.026191,-0.533008,-7.345170,4.939417,-2.846789,-9.077238,-3.663447,-4.471343,8.569287,5.756522,-4.282330,3.152801,1.303632,8.863345,7.954634,1.201814,-3.403372,5.452639,-7.432686,7.813514,3.081122,4.415895,9.776259,-4.143579,6.231568,-0.409405,6.648389,-9.823986,-5.534094,-7.988986,-6.636076,-3.309353,6.553146,5.648265,-4.577571,0.981675,6.665482,2.291370,-3.289840,9.618969,-5.715312,2.621946,3.819137,-9.769710,9.397029,-3.370575,-9.411119,0.307027,-8.315454,9.451680,5.614500,5.892991,3.222947,2.702089,-6.259437,-2.703244,0.203211,-2.792417,0.068511,-2.223687,-7.437564,-3.911753,2.562550,-1.862225,7.353109,0.342090,-7.459848,1.855112,2.056730,5.653211,6.568439,-3.513642,-6.076565,7.353681,6.295386,-2.535737,-8.449150,2.795699,-4.060290,-2.321709,9.373486,-5.073164,-5.194771,-6.583079,1.614565,7.917944,4.875332,4.270928,1.889690,5.432173,-1.231867,-5.873821,-1.966257,-9.364646,7.518824,-9.860313,-4.836617,6.691161,-1.096054,0.417495,2.028147,-0.471873,-4.626015,-4.095946,4.982893,8.320277,-3.993168,-3.218608,1.558757,4.796207,5.713045,5.839400,8.998039,-3.241646,-0.877508,7.359789,1.064944,-5.849691,3.961159,2.521932,-8.882372,-5.102512,-0.523210,-6.909823,4.437046,-5.647787,8.619076,2.432297,-4.380741,0.190241,8.666387,1.429220,-5.132489,-5.414325,-1.663879,-9.807588,-0.644319,1.782421,-5.113660,-0.666921,-2.145145,-6.580889,1.172665,-6.485352,-2.418148,-5.382679,-1.166635,-2.676859,-5.091959,-3.592100,-2.253953,1.302128,5.149937,6.146071,-6.518586,6.674549,-1.123619,5.278721,7.738924,-0.130802,4.466777,8.342285,-2.028069,-4.711900,1.000684,1.124276,-4.206928,-2.807688,-8.907240,1.919364,-4.313649,9.945770,-6.014884,-4.199331,-0.829251,4.578976,8.938342,2.763467,-6.777521,-4.124818,-6.788388,6.231750,5.075545,-5.081583,5.461541,-1.751434,-2.263429,1.199490,-1.736986,2.328719,-8.139900,-4.343792,9.680796,1.500666,-9.359956,0.497927,8.220816,8.889334,3.584810,-8.373478,9.159418,-4.076207,-3.728533,-0.183602,7.444271,5.116455,6.645548,7.299970,6.130449,-5.170905,1.921897,-1.429907,8.776150,7.988570,1.057735,4.811640,-4.950854,4.793437,4.445097,-9.716438,0.352409,-3.049973,5.820126,0.098774,-7.684882,-3.498098,-3.100723,3.987893,-2.786170,-3.823181,-4.994192,-8.372142,3.996560,-9.410257,-5.096270,6.378695,-8.886343,-0.501997,8.803942,5.523419,5.006107,3.371348,-0.799174,2.996229,7.052331,7.466552,-3.798725,9.769774,4.372121,-9.401679,-1.946881,6.213463,-5.969338,-3.990599,8.825346,6.583259,-7.641157,-0.273837,9.162308,0.362078,7.492826,5.125128,6.035758,7.468695,-6.863131,-7.014980,8.621355,6.093812,6.854768,-0.455749,1.827037,1.928001,-3.564002,0.199828,-1.803887,2.400919,7.268925,6.588498,3.457828,8.611390,-1.700485,-2.674641,2.144671,3.170677,2.101071,2.247168,-0.682234,-3.578408,3.217899,-3.271402,2.063899,3.216974,-4.941871,7.840985,-4.819626,9.381271,-9.310492,-1.526228,-9.273449,-4.157220,7.742096,-2.745349,-0.715746,0.493049,-5.754994,8.488055,0.527517,-0.898627,7.741843,7.097703,-4.455079,9.983736,-3.107896,-3.873746,4.858183,-7.380105,8.365807,-6.787673,-8.962582,9.391947,-4.800083,-2.819273,1.813100,6.532134,-3.686511,-1.805154,-1.514513,1.418661,-0.288659,9.121382,-5.743803,-7.953888,-6.522665,9.869346,-0.974437,-3.447060,-5.488337,-7.454089,2.984270,-0.853132,-9.055163,4.464244,-6.644847,0.373223,-5.870361,8.588942,2.786840,-9.546079,-4.341878,-1.665993,-3.526555,1.219047,8.584110,4.991199,-1.826962,-1.591436,-6.581856,0.840071,-7.959431,1.082123,3.645187,2.507120,2.862758,-1.611580,6.297443,-0.468685,9.037334,-4.350612,-6.862267,-1.783777,-9.341871,3.089527,-7.740801,9.649312,-6.212706,9.973712,1.651862,-1.082621,5.692115,9.527641,1.443129,-3.379781,9.774951,4.093232,-6.532146,-5.037295,-9.388010,-7.357700,-7.586616,6.724894,-0.957199,-5.983016,8.299365,-1.690472,-4.763422,7.074979,-7.006175,-6.978748,9.436254,1.574457,1.113224,-1.911262,4.452836,-8.187891,-8.803283,-8.217691,5.240331,0.218678,5.888772,3.215664,9.478710,4.318273,-7.649818,6.641532,6.516123,-2.864911,3.271683,-5.261180,0.806620,-8.715726,-1.284086,-8.061076,-2.584014,-6.528965,-1.738713,3.891212,3.536776,7.331273,-0.724656,8.162777,8.176847,0.928478,-7.551878,9.070163,-6.301522,6.506782,8.971566,-9.617047,5.235675,8.076309,-7.672965,8.358496,-0.448039,-4.455337,-9.089995,-2.180087,3.282900,-6.514167,-8.486574,0.329589,9.109420,5.958505,-0.787761,-5.798511,7.352544,5.585391,-9.084475,0.212976,7.435746,-6.195082,0.896460,3.031370,-5.867428,-4.200784,-4.783475,8.771334,-9.865513,-4.358363,4.396365,7.171600,-0.191121,-3.016924,1.451408,4.492478,3.930151,-4.919680,8.611254,8.184442,5.720996,-8.234997,0.182708,-5.646248,-3.450891,5.295296,3.851425,-0.671850,4.046761,9.829277,-5.755341,-8.243545,-1.426020,-6.871983,-4.558032,2.170230,1.221286,0.202804,0.695233,4.171910,-8.757947,7.938984,0.707849,-4.766305,3.668860,6.468533,-1.913479,9.358039,1.924549,-8.306482,-2.016827,7.055098,0.954362,-5.577946,-9.104528,6.300874,-2.156043,0.916933,-6.608466,4.404542,3.207396,-0.473904,-9.471931,-2.036482,5.601271,8.361588,-8.341204,-3.646665,-2.976584,-4.819009,-8.497162,4.539600,5.768812,-8.900328,-3.656537,0.551042,-1.414709,-0.498877,4.953659,-0.921427,6.824762,-9.249149,7.653220,-7.241234,-5.860703,-7.224437,-5.303261,9.567905,-7.623857,5.681452,1.430379,-8.484785,-4.998273,-6.529055,0.152123,6.777036,4.939453,-6.300055,-6.453680,-3.444448,-7.395189,9.410560,-2.806241,-9.067520,-3.357522,-8.800860,-7.078996,5.090792,1.404565,-7.763671,6.884378,5.255915,-5.652288,3.778161,-0.984325,9.681441,-3.905907,0.728477,7.161911,-3.263803,-5.235530,-5.844862,4.768418,1.895329,8.713518,-6.635543,5.006832,1.767953,5.494736,-4.422564,-4.174059,-7.614693,-6.509598,-1.288461,5.465814,0.995538,7.635407,-6.833252,-2.290348,3.935134,-3.056651,-2.672500,1.278259,7.649417,-9.729684,9.293276,5.844210,7.486567,4.778987,3.526745,-1.694400,-1.647100,-2.448216,4.390222,2.170851,8.889299,-3.574250,1.996405,4.191069,-7.159435,1.997527,7.975679,-0.433719,-0.291326,-9.213161,-1.849557,3.511441,-1.408638,-6.039673,-7.485290,-9.490605,7.178763,9.908010,-8.582965,9.415537,-1.579180,-7.483688,1.305587,-4.774428,2.789278,2.433425,-5.843156,-5.635167,4.906028,-3.596392,-6.447244,2.916486,6.375320,1.579560,2.871943,-6.136914,7.512030,3.975599,1.564467,-0.494972,-9.697973,1.706987,-0.033593,0.342965,-6.531490,5.775012,-6.593840,-5.260497,8.794310,-7.285154,-0.662533,-6.152959,8.256049,-1.330678,-2.987761,8.531673,-7.446621,3.501934,2.671438,-3.227318,-2.218807,-7.168690,-3.845824,-5.347787,-1.389337,3.007172,8.156521,-0.082643,0.903658,-6.868813,-7.511774,1.722996,-2.116387,4.241240,1.619342,2.376370,-5.226596,1.434341,-9.691888,-3.046972,-7.698704,9.588479,-7.044357,-0.860171,-0.622531,9.607342,7.933032,3.279685,0.455550,2.108818,4.771876,-9.200535,-4.994515,-6.033142,2.987788,-4.208218,-8.081776,8.769394,2.487325,8.129818,-5.849850,-9.755443,9.884500,9.512030,5.316620,6.260411,7.223248,-1.680428,1.175674,-1.375700,0.241995,-5.014855,-9.036671,-4.294511,-6.925368,5.729182,-2.702460,-3.689709,-8.308879,-0.466504,-2.780501,-9.124090,6.102918,5.708108,1.392899,4.779181,-0.043821,8.864257,-1.498738,8.978193,8.374696,5.995029,-5.925459,7.412107,-0.274360,-3.541930,6.487349,-0.870105,9.247860,-9.357038,-0.125522,-6.913578,2.939146,4.828734,6.348562,-0.213405,-1.328457,0.067133,5.574090,0.579912,-1.888822,-4.775111,-8.740347,6.925393,1.339549,-9.229022,5.719142,-2.829554,-0.183583,-7.356959,-5.900823,-9.825921,4.473563,-1.703150,-2.910960,-4.044972,5.611822,3.420667,7.659285,-1.144183,-1.206688,-9.898160,9.204287,-2.272508,0.039721,1.126653,-0.699581,-2.843539,4.917359,-8.518633,-5.958080,9.532599,-5.382223,8.447846,7.465827,-9.334671,-1.652138,8.992916,8.471339,-6.650158,6.670058,1.350484,1.804034,2.035743,-0.039384,2.561273,-2.297352,-8.344734,6.342743,-9.070872,5.373098,-8.000741,-3.932418,9.903325,0.455962,-7.274749,-9.945245,-7.782464,2.783511,-9.595316,-3.411004,-7.374495,-4.780206,9.156628,-8.266874,-3.510942,-0.253804,1.871283,0.478711,-0.497664,-4.316328,4.179733,-4.094674,5.086375,6.246411,9.089970,7.422898,-6.785488,2.568360,0.464457,7.621722,1.852418,-8.252504,-4.400768,-2.937627,-8.252298,6.150069,3.058411,-3.409071,9.308001,-5.017870,7.482568,-3.607678,-4.574396,5.486095,1.861585,3.044507,-9.609766,-8.711866,6.246255,4.732135,4.007604,4.327976,5.951513,6.984665,6.213490,6.788741,3.711965,-2.572690,0.354980,1.483150,3.852666,-2.872925,-2.068937,-0.673881,4.847112,-1.426040,3.613237,8.698530,7.982607,5.948520,-1.796666,8.643515,6.640132,7.195056,0.146262,6.410772,-6.508045,-8.404526,-4.511847,-5.618716,-7.458365,3.545899], dtype = "float32")#candidate|2578|(2145,)|const|float32
call_2577 = relay.TupleGetItem(func_2138_call(relay.reshape(const_2578.astype('float32'), [11, 15, 13]), relay.reshape(const_2578.astype('float32'), [11, 15, 13]), relay.reshape(const_2578.astype('float32'), [11, 15, 13]), ), 3)
call_2579 = relay.TupleGetItem(func_2142_call(relay.reshape(const_2578.astype('float32'), [11, 15, 13]), relay.reshape(const_2578.astype('float32'), [11, 15, 13]), relay.reshape(const_2578.astype('float32'), [11, 15, 13]), ), 3)
func_1658_call = mod.get_global_var('func_1658')
func_1661_call = mutated_mod.get_global_var('func_1661')
call_2581 = relay.TupleGetItem(func_1658_call(relay.reshape(call_2577.astype('float32'), [10, 1, 8]), relay.reshape(call_2562.astype('float32'), [672,]), ), 2)
call_2582 = relay.TupleGetItem(func_1661_call(relay.reshape(call_2577.astype('float32'), [10, 1, 8]), relay.reshape(call_2562.astype('float32'), [672,]), ), 2)
output = relay.Tuple([bop_2551,call_2554,var_2555,call_2562,const_2563,call_2566,var_2567,var_2568,call_2577,const_2578,call_2581,])
output2 = relay.Tuple([bop_2551,call_2556,var_2555,call_2564,const_2563,call_2569,var_2567,var_2568,call_2579,const_2578,call_2582,])
func_2619 = relay.Function([var_2549,var_2550,var_2555,var_2567,var_2568,], output)
mod['func_2619'] = func_2619
mod = relay.transform.InferType()(mod)
var_2620 = relay.var("var_2620", dtype = "bool", shape = (4, 9, 2))#candidate|2620|(4, 9, 2)|var|bool
var_2621 = relay.var("var_2621", dtype = "bool", shape = (4, 9, 2))#candidate|2621|(4, 9, 2)|var|bool
var_2622 = relay.var("var_2622", dtype = "uint8", shape = (1344,))#candidate|2622|(1344,)|var|uint8
var_2623 = relay.var("var_2623", dtype = "int32", shape = ())#candidate|2623|()|var|int32
var_2624 = relay.var("var_2624", dtype = "int32", shape = (2080,))#candidate|2624|(2080,)|var|int32
output = func_2619(var_2620,var_2621,var_2622,var_2623,var_2624,)
func_2625 = relay.Function([var_2620,var_2621,var_2622,var_2623,var_2624,], output)
mutated_mod['func_2625'] = func_2625
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2631 = relay.var("var_2631", dtype = "float32", shape = (7, 14, 10))#candidate|2631|(7, 14, 10)|var|float32
uop_2632 = relay.sqrt(var_2631.astype('float32')) # shape=(7, 14, 10)
output = relay.Tuple([uop_2632,])
output2 = relay.Tuple([uop_2632,])
func_2634 = relay.Function([var_2631,], output)
mod['func_2634'] = func_2634
mod = relay.transform.InferType()(mod)
var_2635 = relay.var("var_2635", dtype = "float32", shape = (7, 14, 10))#candidate|2635|(7, 14, 10)|var|float32
output = func_2634(var_2635)
func_2636 = relay.Function([var_2635], output)
mutated_mod['func_2636'] = func_2636
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2746 = relay.var("var_2746", dtype = "uint16", shape = (1, 9, 2))#candidate|2746|(1, 9, 2)|var|uint16
const_2747 = relay.const([[[7,-1],[-5,-10],[6,-4],[-8,-6],[6,-10],[-10,10],[-9,-9],[-2,-8],[-8,-7]],[[-2,9],[3,-2],[6,3],[-4,9],[-7,3],[7,-5],[-2,8],[-4,2],[-4,-5]],[[6,9],[5,-4],[-4,2],[-5,9],[6,1],[-7,-9],[-3,-6],[-2,5],[10,10]],[[5,4],[-8,-3],[3,6],[-6,-9],[-7,-3],[-9,-9],[-3,9],[-8,9],[-2,5]],[[3,-4],[9,-8],[-9,7],[5,-6],[10,5],[10,5],[2,3],[8,5],[-7,-8]],[[1,3],[-2,5],[2,-4],[-7,-6],[-5,-6],[6,1],[9,-5],[-7,5],[10,-9]],[[10,-2],[7,3],[-4,-2],[-1,-6],[-8,-10],[6,-5],[2,-2],[-10,5],[-7,10]],[[-2,8],[3,7],[-8,10],[-3,-5],[8,4],[4,2],[-9,3],[3,-9],[-8,5]],[[7,-5],[6,-3],[8,9],[-9,-7],[1,6],[6,7],[3,-8],[-3,2],[4,6]],[[-5,-10],[6,10],[-4,-8],[-4,-4],[-2,-2],[7,5],[3,-3],[-9,7],[-8,8]]], dtype = "uint16")#candidate|2747|(10, 9, 2)|const|uint16
bop_2748 = relay.logical_xor(var_2746.astype('uint16'), const_2747.astype('uint16')) # shape=(10, 9, 2)
func_2619_call = mod.get_global_var('func_2619')
func_2625_call = mutated_mod.get_global_var('func_2625')
const_2753 = relay.const([True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False], dtype = "bool")#candidate|2753|(72,)|const|bool
const_2754 = relay.const([[-4,6,1,9],[4,-2,6,-9],[-4,-4,-3,-5],[10,4,1,-4],[9,7,6,2],[2,4,-6,7],[-5,9,9,4],[-3,-3,-2,-1],[7,-3,-4,4],[8,1,10,6],[-9,3,2,-7],[8,9,-7,3],[6,6,10,5],[-7,-4,4,-10],[8,3,1,-2],[10,-2,-2,10],[2,8,-3,2],[7,4,-9,-6],[-8,-4,9,-1],[-9,-7,-8,9],[-10,-4,9,-2],[3,10,2,8],[5,2,-9,-4],[-6,9,5,-5],[-4,9,-6,-2],[8,-2,9,4],[-3,-9,-9,-3],[3,2,10,4],[-8,-9,-3,5],[2,4,7,-7],[-6,3,1,-2],[-7,-2,-2,1],[9,-4,1,-6],[7,6,1,4],[-2,-3,-10,5],[1,-4,-6,-5],[-5,1,-10,-8],[-10,3,-8,9],[2,10,10,9],[7,-6,-10,-1],[-4,10,-1,3],[3,-3,2,10],[5,-8,-9,6],[-2,-8,5,-7],[2,-3,4,-4],[-3,-7,-10,-1],[-8,8,5,3],[6,10,-3,-10],[-4,9,10,-6],[-2,-10,-1,7],[-7,9,9,-1],[-5,6,-10,4],[9,4,7,-2],[3,3,-2,-5],[5,3,8,-9],[-7,-3,-9,-10],[8,-6,4,-8],[-2,2,3,-3],[3,-2,-9,6],[-6,-4,-3,3],[-8,10,9,-8],[-1,6,-8,-4],[-4,4,9,-1],[8,-10,-10,4],[-4,-2,4,-5],[-10,9,-10,1],[-1,-9,-4,5],[-6,2,-10,7],[-3,-6,-9,-2],[-1,-9,5,-3],[6,7,2,1],[-9,-7,-1,10],[1,9,-6,-1],[3,8,-1,-2],[-2,-6,-3,6],[1,-10,6,-8],[-7,-9,9,1],[-9,8,9,4],[1,10,8,-5],[-9,-5,6,-2],[-10,5,10,-1],[-5,6,1,7],[-1,-7,3,9],[-8,7,-8,6],[-1,-9,-8,-7],[-9,9,4,-3],[5,5,3,-9],[8,4,4,-6],[-10,-5,5,-3],[6,4,10,-6],[-9,-4,-5,-3],[9,-1,-7,10],[-1,-6,-9,-1],[-1,-7,-4,5],[-4,-4,-1,1],[4,5,-8,9],[-1,6,-3,7],[1,4,-8,7],[-9,-10,9,2],[-5,7,5,-3],[-10,-8,-3,7],[-10,-9,2,-2],[-8,1,6,-5],[2,4,-7,-4],[5,1,7,-4],[-1,-9,9,-1],[-4,6,-8,10],[-4,-7,-1,-1],[-5,6,10,-2],[3,3,-1,-8],[-9,-4,9,8],[8,6,8,-6],[10,6,-2,-1],[8,-6,8,-3],[-2,3,2,-5],[-9,-8,8,10],[7,-8,-4,5],[-2,-10,-7,-7],[-1,10,-4,-4],[10,9,-7,6],[7,-5,4,3],[-1,6,6,-8],[-8,2,5,-4],[-7,3,-6,-10],[-4,3,4,-3],[7,-4,-5,-1],[1,4,9,-3],[4,10,6,10],[4,-7,9,7],[9,2,4,-8],[9,4,-1,2],[-4,5,2,-1],[1,5,8,-8],[3,-5,-5,5],[7,10,8,-5],[-4,-2,6,-1],[3,-8,9,-10],[-8,-1,-7,7],[-6,2,-8,-6],[-5,-7,4,-1],[7,8,7,-10],[2,-8,-10,3],[-1,-1,9,-9],[8,9,-5,10],[10,-10,7,-10],[1,-10,-4,-8],[7,3,-7,-4],[10,8,4,9],[-8,-8,9,8],[9,-1,-2,-7],[-8,-8,-5,-9],[-8,2,7,-5],[-2,-3,-3,9],[2,7,10,-4],[-6,-3,-7,-6],[1,6,-1,6],[3,2,-4,-10],[-2,-10,-10,-9],[9,7,-6,10],[1,9,6,-5],[7,-9,-8,-5],[7,-3,10,-3],[-5,4,3,1],[1,-8,-5,7],[10,-1,4,-1],[1,-8,-9,9],[-3,-7,8,-4],[8,-5,-5,-5],[8,-5,3,-5],[-3,7,-6,-8],[-9,9,5,-6],[5,7,4,7],[9,-8,10,-9],[6,5,-10,5],[9,9,-7,-10],[6,4,-1,-4],[3,-3,5,5],[7,5,2,9],[2,-7,4,-3],[5,10,10,-6],[-8,-5,-2,4],[10,-7,7,-6],[-5,-10,-8,-9],[2,-9,-7,-5],[-4,8,1,-5],[1,-5,-9,9],[-2,3,2,7],[5,-6,10,7],[-10,-2,-9,3],[-9,10,9,-2],[-8,5,8,6],[7,-8,-1,-3],[-2,-5,-9,10],[-9,4,10,3],[2,8,9,5],[-5,-2,-8,9],[-9,-8,3,6],[8,1,7,-6],[1,9,7,7],[5,-8,6,2],[4,-2,9,10],[-10,-7,-5,6],[-6,-8,-6,-7],[-6,-5,-4,6],[8,6,7,-5],[7,6,5,-9],[-6,6,-4,5],[9,10,9,-3],[5,-2,-5,3],[-3,3,-10,10],[1,-8,-2,5],[-4,-7,3,10],[1,-4,3,6],[6,-3,-4,-2],[1,-2,-4,-4],[-3,3,-5,8],[9,10,-7,7],[10,2,4,-2],[4,10,10,8],[7,3,-8,-7],[1,8,-6,3],[-4,-1,-9,-3],[-7,-2,-7,2],[6,5,4,-1],[-9,-5,2,10],[-5,4,4,-6],[8,-7,10,8],[-7,-8,-5,8],[-7,-9,-2,-7],[-2,10,8,-8],[-6,3,6,-10],[6,-4,8,-7],[6,8,-8,5],[-5,7,-5,-2],[-2,6,8,-1],[-7,-7,8,2],[1,1,4,-9],[-5,4,3,-2],[3,-3,8,-7],[-2,10,2,5],[9,-3,6,-1],[2,10,3,10],[-1,-7,10,4],[2,-3,5,8],[-6,8,-6,-2],[6,4,5,5],[9,-7,-8,1],[2,-4,4,10],[6,-1,-8,-1],[-4,-2,-8,-6],[-9,-6,-3,-8],[-2,1,-8,-5],[10,-7,8,1],[-10,4,-9,5],[-3,-6,-9,-1],[-9,-9,7,1],[2,6,-5,-6],[3,3,10,2],[8,-10,-4,-9],[7,-2,-2,2],[1,3,-6,-1],[7,-10,1,-2],[2,7,5,9],[-4,6,3,9],[5,-10,-1,1],[6,-6,-5,-7],[10,-3,1,-9],[-4,-10,-3,3],[-1,3,5,-1],[-7,-7,5,3],[9,4,-9,-7],[-8,-2,-6,-2],[-1,8,-9,6],[-7,-2,8,-2],[1,-8,-9,-5],[-2,9,-5,6],[4,-1,-4,-2],[-1,-5,-10,-7],[3,3,-10,8],[-7,-3,-7,-8],[4,5,6,1],[2,6,5,2],[9,-9,-4,-5],[5,5,7,-5],[3,-1,9,-4],[-9,2,-4,-1],[10,3,10,-8],[8,-7,9,5],[3,-8,-7,-5],[5,-10,2,3],[5,7,-6,8],[-8,-8,-8,8],[-1,6,-9,6],[-8,4,-2,-3],[2,10,-7,-3],[-7,4,6,-9],[-8,-8,-5,2],[3,-5,-10,-1],[2,-2,2,-6],[8,4,-1,2],[-7,-8,-5,10],[-6,-4,-5,3],[-8,6,2,-9],[-3,-6,-8,-6],[1,9,-8,-5],[-4,-3,5,8],[-10,-3,8,5],[-7,-10,9,9],[-1,5,7,-4],[-10,2,2,7],[6,-6,-6,-8],[2,-7,3,3],[6,5,-8,6],[5,-3,10,3],[-2,10,2,10],[-5,8,-2,-4],[-7,-4,8,-4],[10,2,-7,-5],[5,-6,3,-4],[-2,-6,1,5],[-9,-4,-8,9],[-6,-7,-7,-4],[6,-3,8,9],[8,-8,-7,9],[-1,2,5,-7],[-4,4,5,-8],[-9,-1,-8,9],[-8,-7,10,-1],[-2,10,4,-8],[10,-2,1,-7],[10,-9,10,6],[-5,-5,10,-5],[10,-10,1,-5],[-2,-7,8,5],[-3,10,-2,-5],[9,1,-5,4]], dtype = "uint8")#candidate|2754|(336, 4)|const|uint8
var_2755 = relay.var("var_2755", dtype = "int32", shape = ())#candidate|2755|()|var|int32
const_2756 = relay.const([4,8,6,-3,4,-6,1,4,5,-2,-9,5,-9,2,-5,-8,1,-6,-9,-5,8,-7,-3,7,-2,1,1,3,10,-5,-2,-5,-8,-10,-9,-1,-8,5,1,1,4,7,9,-7,-5,5,7,2,10,-10,7,-5,-10,-6,4,-4,-1,-4,-1,1,-5,-5,6,-6,7,7,-9,-7,-5,-2,2,9,-9,4,-6,-5,-3,1,-8,-8,-7,9,7,5,-10,-1,2,-6,3,-10,4,7,-8,7,-9,8,-9,-10,-4,-6,-1,-9,-7,6,4,8,-3,-5,5,-4,-6,10,1,2,6,-2,-7,2,5,-5,-3,-4,7,-5,1,9,-4,-3,-1,-2,4,-2,4,-4,-1,7,1,-10,1,3,5,-1,2,-5,8,-8,1,3,5,4,8,9,3,8,-5,7,-2,8,-2,-7,-8,5,4,-7,-7,4,-2,-5,-2,-10,5,-6,4,2,-7,-8,-1,-6,-1,3,-4,5,2,1,-6,-3,-8,7,3,10,8,6,-1,6,5,-3,-8,5,2,-6,-8,-7,-7,10,6,9,8,-5,10,-4,-1,-4,-5,1,-6,4,-5,2,-9,-2,-2,9,8,10,5,3,-9,5,7,-3,-2,-8,-10,-8,1,-4,-3,-3,-6,9,7,7,8,-3,-7,-7,-3,-9,5,2,7,9,8,1,6,-5,-9,-2,4,1,10,-4,2,6,1,3,3,-10,-7,4,10,-8,-2,7,4,9,5,-6,7,4,9,5,-1,-2,-7,-2,8,5,10,9,-1,7,4,-3,-7,-10,-4,8,-2,-4,9,-4,-5,10,-5,9,-9,-10,-4,-3,-7,7,8,9,-6,-8,6,-5,-3,8,5,-3,-6,5,-5,-10,3,-6,-1,-2,-5,-5,4,-5,6,-6,1,-3,-10,6,1,10,3,7,-8,-2,-3,7,6,4,-3,3,10,10,4,-7,-4,-1,2,9,-8,4,-10,9,-1,10,-5,-8,8,-9,6,9,3,-4,-7,7,-6,9,10,-5,-4,6,7,6,-2,10,-1,7,-9,10,-6,3,6,9,3,10,9,7,-10,3,-10,-1,2,-6,8,8,3,-5,5,-8,10,-6,-3,-6,9,-6,-2,9,-4,-4,-1,6,6,-2,7,-1,-7,7,3,-3,-3,-9,-6,9,-3,4,-5,-7,-4,-2,-10,-8,-2,-9,8,-7,-2,4,-5,10,5,-4,-4,3,-2,9,-2,3,3,10,5,-2,4,-5,-2,8,10,-10,-5,-4,-2,2,-1,-7,-6,-8,2,6,-10,6,-9,-9,-6,-5,4,9,2,9,4,-8,10,-1,-7,-10,-9,1,3,-7,1,-10,-1,2,-10,-7,-4,5,2,-10,-3,8,-9,2,-8,-10,2,3,-1,-7,5,-3,10,7,-6,-2,7,2,10,-7,4,-9,-9,2,-7,-9,4,3,4,3,-5,8,7,-2,-4,5,-8,6,7,5,6,8,10,1,1,1,-1,2,8,4,2,-10,4,-6,-4,6,-9,-10,-8,-10,-7,7,-1,-7,-2,1,-2,4,6,6,-5,10,9,-2,10,-5,4,-8,-2,3,8,10,4,-4,8,-2,2,-6,1,7,-9,-10,-8,-7,3,-6,4,1,-4,10,-4,-2,4,9,-5,7,-3,-6,-7,-3,4,1,7,-8,6,-2,8,-1,3,8,-10,-1,-3,-4,-1,1,8,5,-6,6,-1,-4,-4,3,-7,-3,-7,-8,3,-1,10,-2,-5,-4,2,-5,-2,-1,-6,-2,-5,-7,-1,-3,8,-1,-9,7,-1,-7,4,-5,-2,1,-1,8,1,-10,-10,-9,8,-9,2,-1,8,6,-1,-8,-7,9,-3,-6,2,-7,1,-3,5,-6,-7,-1,-6,-6,-10,-9,3,-7,-7,-3,10,-5,5,2,7,10,-6,10,-10,10,-3,8,-9,4,-9,8,6,-10,9,-2,9,-4,-5,-8,1,4,9,9,7,7,-10,-7,8,7,1,-8,3,7,6,-4,7,10,10,-5,5,-4,9,-9,-1,8,10,-2,8,3,-7,3,-5,-2,-2,-3,-1,2,-10,-10,-9,-1,-6,2,-4,-10,-1,7,-3,10,-5,4,10,9,7,1,10,7,-6,-10,5,3,10,-10,6,2,-3,-1,-2,-4,-10,7,8,-3,-2,-5,2,10,6,9,-10,-7,-7,7,-7,-8,-6,8,-6,8,-6,4,-3,-2,-6,2,1,-8,-8,-8,8,3,-9,-9,3,-5,-2,-9,-3,3,3,5,7,-4,10,9,6,-1,-4,-9,10,8,-3,7,1,5,-7,9,6,6,-3,-6,-8,3,-9,-3,-8,-1,9,9,7,-3,6,8,-3,-10,3,7,-2,7,5,-10,-10,-6,-8,8,-8,-2,3,6,8,4,9,5,2,-5,-10,9,-6,9,-9,9,-8,-2,3,-8,-2,-2,-4,4,-7,-2,-2,6,-6,-1,-2,2,1,10,10,5,-2,2,-4,-1,-3,-7,-4,4,8,4,-4,-9,-10,1,8,-1,4,6,8,-10,-10,8,10,5,5,-9,8,8,-6,8,-6,6,-10,10,10,1,-7,-6,-10,6,-4,6,10,10,4,3,6,-2,10,8,-1,1,-7,4,10,5,-4,6,7,-1,-5,-3,-4,1,6,-5,8,5,-5,-7,1,-10,2,-9,3,2,-6,3,9,-7,3,3,10,-1,9,1,-9,-4,-9,2,3,-2,-10,-3,10,5,2,7,8,-8,-7,6,9,6,1,10,3,-6,-8,3,9,-3,6,4,9,10,10,-9,5,7,-5,-1,10,3,-6,-7,-4,7,-10,5,-2,5,-2,9,4,-3,-4,9,-2,5,1,-7,2,-7,5,-4,-9,-7,5,-8,3,-8,-6,2,-9,9,8,-7,10,-5,-7,1,5,-9,-3,9,-8,4,4,-3,-4,-5,10,5,5,4,6,-10,-3,-1,-5,4,-9,-9,-8,-8,-7,-7,6,-7,-9,-4,6,5,-2,6,1,5,2,-3,-6,-3,7,-10,-1,7,-7,4,-5,-1,-9,8,-10,-10,-7,-5,7,8,7,10,-4,-7,-7,4,-3,-1,-3,2,2,-10,-8,-1,-2,-10,8,8,-4,3,-7,3,4,-2,-5,-2,8,-7,6,1,9,-8,9,9,10,-5,10,7,-4,-1,-5,7,7,-10,-3,3,-2,9,7,-7,1,-6,-1,-5,3,-5,2,-10,5,-4,-10,-10,-7,4,-6,-3,-4,-8,-1,2,-8,10,1,1,-1,6,-1,4,5,4,-10,8,5,8,6,7,1,6,-1,-7,1,4,10,-1,-7,-6,-3,8,8,-1,-8,-2,8,-10,-4,-1,-2,8,4,-9,-8,5,-9,7,-9,-4,1,-7,-4,7,-5,7,-5,1,6,-8,5,6,-6,-3,-5,5,3,-4,8,8,-2,-1,10,6,-2,-2,8,2,3,1,10,-4,8,1,9,-1,6,8,4,4,8,4,6,-10,-9,8,8,4,8,-4,-9,-10,7,-1,-1,8,10,7,-7,-6,-9,8,4,5,-1,3,-2,-3,10,-1,-8,4,2,-6,8,7,-4,-7,9,4,-1,-10,-9,-3,6,2,4,3,-7,4,1,-5,6,-5,3,5,-6,8,-9,-4,6,10,-2,-3,4,-4,-7,-9,-10,10,-6,9,1,7,8,-4,9,-2,10,2,3,6,5,-4,2,8,8,-9,-5,-8,8,-7,7,8,5,1,7,7,-5,-7,-5,-4,-2,-2,9,-10,-2,-4,6,-8,3,8,-9,2,-8,-10,3,5,-8,4,7,-4,3,-9,1,10,9,6,3,-1,-6,-3,6,6,-5,1,8,-10,-5,-8,8,-2,5,4,-5,-10,-5,-2,1,5,2,-7,-1,-9,-5,3,-8,10,-3,3,7,-1,-8,-3,2,-6,-4,-5,9,-9,5,-8,7,6,2,1,5,-4,-6,-6,7,-5,7,5,-5,10,8,-3,-8,6,10,-3,-9,2,6,-6,-1,5,2,-4,6,-9,4,1,2,-5,-7,9,-5,-3,-8,5,3,-5,-10,4,-5,-2,6,2,-3,10,3,-7,-10,-9,-1,-8,-4,1,-4,-10,9,-7,-7,3,-5,-3,-6,-9,3,7,-4,-10,7,-2,4,9,6,-8,-4,7,8,10,-10,-10,-10,-7,-1,-1,-6,-1,-7,-6,8,-7,9,-4,6,2,-4,9,1,-6,-2,-3,4,-3,-6,-3,6,-7,-8,3,4,9,2,-1,3,7,8,6,-4,2,-9,-4,-9,-10,-1,-10,-2,2,7,7,5,-5,-4,5,-9,9,4,-3,-4,9,-7,10,-9,3,10,-4,-6,7,10,-7,1,-9,9,9,4,-1,-8,-2,5,-1,-7,-1,-5,-2,-2,-8,-7,9,8,3,5,-2,-7,2,-2,-9,9,2,8,-1,-7,3,-3,-1,-10,2,10,-10,10,9,6,-3,-7,9,10,-4,-8,-10,1,3,-8,9,-2,-5,3,-6,-1,4,-3,1,-4,2,-6,-4,-8,8,-5,-3,8,-9,1,9,-4,8,-5,-5,-6,10,1,-8,-4,-4,1,-6,-7,-9,-2,-8,1,-6,-7,-3,7,-4,9,5,8,2,9,10,3,-2,-8,-1,-8,-3,-9,-9,-2,-5,5,-4,-1,2,-2,-4,2,10,-10,-6,8,-5,-8,3,7,10,-8,-7,-3,-9,-1,-10,10,-4,-10,1,2,5,8,9,-6,7,5,2,-3,3,-3,1,-2,6,-5,-2,-2,-6,-4,6,-4,-3,9,7,6,9,2,7,-5,9,-1,-5,-7,1,-6,9,-2,-8,-8,4,-6,5,3,3,-6,-5,3,-8,-3,-10,-8,8,3,-10,5,-7,6,-9,6,6,6,7,-5,8,5,-6,10,2,4,-6,-7,9,9,-2,-10,6,-2,-5,-9,-5,-2,-7,7,-8,1,-1,9,2,6,2,4,3,-3,1,5,8,6,-2,5,5,3,6,6,9,-4,1,1,4,-4,9,10,9,-3,3,10,-5,6,5,1,-5,7,3,-9,5,1,-5,1,10,-6,1,-1,-8,-10,-8,-9,4,-8,-5,3,4,-3,-8,4,8,1,3,8,10,4,-6,2,8,-8,-10,-4,8,3,4,4,-7,-3,-10,4,8,-9,-1,-6,-2,6,7,6,9,-3,-5,7,3,-2,1,-2,-4,-7,1,-7,-10,-7,-5,4,10,-9,6,9,-5,2,-9,-7,7,-9,7,-3,1,6,3,-9,9,10,-3,-5,-1,4,-5,-2,-7,1,9,1,-8,-5,8,3,-4,-1,3,-3,4,4,-10,-2,-5,1,8,3,10,6,4,5,4,2,3,4,5,-9,-2,2,-3,-3,-4,9,-4,1,-6,-5,2,10,5,5,1,6,4,-1,10,9,10,-9,-3,-4,5,-9,-1,4,-2,7,-4,7,3,-4,3,9,1,10,6,-1,7,2,1,-3,7,-8,-3,9,-4,8,-6,3,-5,-1,8,4,4,-3,-3,7,6,-1,10,-4,-4,-2,-1,10,-7,-7,-3,-2,8,-3,10,1,7,7,-3,-4,5,-9,-10], dtype = "int32")#candidate|2756|(2080,)|const|int32
call_2752 = relay.TupleGetItem(func_2619_call(relay.reshape(const_2753.astype('bool'), [4, 9, 2]), relay.reshape(const_2753.astype('bool'), [4, 9, 2]), relay.reshape(const_2754.astype('uint8'), [1344,]), relay.reshape(var_2755.astype('int32'), []), relay.reshape(const_2756.astype('int32'), [2080,]), ), 1)
call_2757 = relay.TupleGetItem(func_2625_call(relay.reshape(const_2753.astype('bool'), [4, 9, 2]), relay.reshape(const_2753.astype('bool'), [4, 9, 2]), relay.reshape(const_2754.astype('uint8'), [1344,]), relay.reshape(var_2755.astype('int32'), []), relay.reshape(const_2756.astype('int32'), [2080,]), ), 1)
bop_2758 = relay.less_equal(const_2753.astype('bool'), var_2755.astype('bool')) # shape=(72,)
uop_2764 = relay.sigmoid(const_2754.astype('float32')) # shape=(336, 4)
output = relay.Tuple([bop_2748,call_2752,const_2756,bop_2758,uop_2764,])
output2 = relay.Tuple([bop_2748,call_2757,const_2756,bop_2758,uop_2764,])
func_2767 = relay.Function([var_2746,var_2755,], output)
mod['func_2767'] = func_2767
mod = relay.transform.InferType()(mod)
mutated_mod['func_2767'] = func_2767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2767_call = mutated_mod.get_global_var('func_2767')
var_2769 = relay.var("var_2769", dtype = "uint16", shape = (1, 9, 2))#candidate|2769|(1, 9, 2)|var|uint16
var_2770 = relay.var("var_2770", dtype = "int32", shape = ())#candidate|2770|()|var|int32
call_2768 = func_2767_call(var_2769,var_2770,)
output = call_2768
func_2771 = relay.Function([var_2769,var_2770,], output)
mutated_mod['func_2771'] = func_2771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3143 = relay.var("var_3143", dtype = "float64", shape = (15, 13, 4))#candidate|3143|(15, 13, 4)|var|float64
uop_3144 = relay.cosh(var_3143.astype('float64')) # shape=(15, 13, 4)
bop_3149 = relay.greater(uop_3144.astype('bool'), relay.reshape(var_3143.astype('bool'), relay.shape_of(uop_3144))) # shape=(15, 13, 4)
func_2138_call = mod.get_global_var('func_2138')
func_2142_call = mutated_mod.get_global_var('func_2142')
const_3155 = relay.const([-3.544045,-5.590342,-2.645988,8.687902,1.425458,-7.247538,-0.556924,6.062929,2.068883,3.932502,-0.542954,-8.851629,4.945104,4.469080,1.161164,0.096938,3.482866,2.746638,-0.720316,5.202249,-2.305365,-3.654052,4.861285,9.270828,4.960333,-2.978429,-9.212496,9.920234,0.826739,-3.254172,7.360722,-4.601100,9.075468,8.760766,-0.081361,2.410688,-0.670087,9.373628,-2.214956,-8.607826,7.725032,8.165219,2.850604,-0.584506,-4.559318,1.124864,-2.110600,-8.511598,-8.463460,3.497561,6.946915,9.528003,-3.880941,2.577305,9.369532,-7.388628,-2.968805,-0.426196,0.006186,-8.673911,7.949444,9.027551,-2.662951,-7.089188,0.759973,0.063242,-0.841897,-3.233109,-4.453294,5.600066,0.742934,-8.538655,-1.938654,9.862732,3.067446,7.860659,-4.133093,1.743325,-9.620816,4.264284,6.863852,-3.694266,9.410420,3.632414,4.600235,3.664283,-6.154897,-5.184494,-0.569805,-9.138114,-5.967366,-9.028430,2.150296,5.103713,0.148256,2.240618,7.144474,4.425894,3.588266,-0.332416,3.413935,6.587935,-1.313858,-3.647774,-5.847737,-4.735473,-3.614702,4.959270,-3.806574,-4.083945,6.832471,3.678630,3.598463,1.495710,9.943015,1.053883,0.046690,-9.823238,0.266602,-2.086097,-3.582022,-1.984417,1.864611,-2.287973,-6.986972,-9.960107,-6.056957,-5.163102,-9.603223,-5.752804,-1.802551,-0.819606,3.717337,2.521372,-5.736754,-3.063562,-4.970981,6.497312,-4.996721,-9.207314,-9.884384,-6.462676,-5.428041,1.164026,-9.217836,-8.640327,8.976989,-2.481226,3.365550,1.630648,9.189989,-2.153265,-7.554853,7.419751,5.734799,3.429314,-8.262189,1.456836,4.581052,3.043202,-8.506343,-3.318913,8.000107,-8.651197,-4.377400,-7.198874,6.334856,4.617113,-7.857414,-8.286747,-6.202421,-0.369640,5.796406,7.437491,-9.717061,-0.136887,-2.744719,-5.874219,4.544490,5.250272,1.204375,5.732959,-2.007256,-8.609230,-3.495323,4.446003,4.508610,0.028119,5.001261,1.861938,-9.513859,-2.447457,-2.023492,-0.991355,-2.968086,3.588949,5.059356,-4.728401,7.368622,-1.472503,-7.122422,0.963115,5.114427,-1.822839,4.539116,-0.609957,-0.725911,5.396094,-7.416581,-1.718946,2.032506,-6.664899,8.371420,-2.259727,4.003626,-9.189912,-3.338255,4.948363,-5.520449,-7.536303,0.003620,1.216637,-3.226310,-6.125076,-2.190259,5.265563,-9.875146,-8.293205,-4.822910,6.580245,-3.707948,4.018167,8.484127,-9.094238,5.648128,2.783312,-7.623504,-0.033019,4.133937,5.765354,0.451265,9.920503,-2.260304,3.673821,7.187442,-0.485386,-9.003261,-5.579628,2.501641,-7.472752,-7.147483,5.444855,-1.109132,8.894482,7.364551,-1.496332,4.651919,-9.592102,7.726201,-2.026080,-1.480810,-8.729797,6.484861,-7.122758,-6.231384,3.778329,9.752399,9.719961,-3.894335,6.506345,0.790556,-7.016043,-6.430257,-6.599078,8.884860,-7.567666,2.422063,-3.592074,8.917490,7.095622,2.002567,-0.030165,-0.466109,4.981521,-8.383762,-8.905852,-9.168165,-1.529026,1.590481,-0.022898,-8.809998,3.429426,-3.553665,-8.310246,-4.860698,4.024233,-9.645691,-1.229905,2.954836,5.359554,4.157016,9.026279,-5.867674,-6.084325,-3.744068,-9.476945,9.600978,-0.033534,-7.916037,1.283441,9.782689,-1.326267,0.538221,-3.324536,-8.524967,-8.241144,4.167768,0.438378,-6.880349,5.874171,7.421223,9.813770,3.359316,-3.561560,-0.334420,4.104840,-4.977248,0.919307,-5.637223,-7.205682,2.335575,-3.014094,-6.867186,-4.467582,9.226199,0.391204,-5.504816,4.127963,-0.322664,8.360246,-0.056545,-2.027568,-7.749217,-2.094247,8.326614,-7.996660,7.574375,2.039986,-5.313496,-1.208490,-3.856812,-3.303053,-3.241902,-8.704692,8.994897,8.492783,-0.023591,-9.719223,2.571132,-4.871224,5.756988,3.242216,0.179241,-9.095677,7.645167,-0.415143,-8.134057,-2.981550,-1.021187,-4.667196,-2.955522,6.099049,3.026939,4.798827,-9.530602,-1.681590,-7.688364,4.761553,-3.312038,-8.152014,-8.028005,1.669511,5.108889,-8.543268,1.472591,-4.454743,-6.459550,-6.343098,0.046905,5.674391,1.993066,-1.337571,0.042833,-0.324488,8.723465,9.178550,2.484836,5.769409,-4.405160,-1.953304,-6.613528,4.831835,7.796007,-9.975042,-0.380007,-1.654762,3.569594,1.112942,-0.644827,2.392444,-6.195101,-7.235827,4.063062,3.328402,8.981586,4.335284,-6.842695,-2.194249,8.892712,-2.295060,-8.393313,2.470772,3.813601,8.086133,-9.514046,-6.001594,7.210606,-2.922444,-6.492354,6.635227,-1.273889,4.113210,3.973006,-2.870871,-3.012573,-2.323621,8.099008,1.024025,2.235703,9.182151,9.088702,-5.765416,-5.420218,7.800849,-5.495960,-7.878715,-2.603369,6.119821,8.471089,-2.789436,3.906186,4.896854,-0.765454,5.122818,9.416487,-8.137657,-4.913926,7.018739,7.400427,4.433188,4.930710,-7.691694,5.812926,-5.789978,6.493042,1.056370,1.012800,-4.574424,9.843623,6.516434,-1.487528,8.646455,7.640167,3.956450,1.976066,-7.356368,-2.137562,-3.913797,6.892373,-2.239655,9.231786,8.033777,-9.580041,0.212239,5.819321,-6.230313,-0.221362,9.634205,8.726822,-7.450698,5.386943,2.395110,-3.245299,-0.016800,-8.491227,-3.517421,-0.920929,6.076033,4.492390,-0.426757,9.468304,-6.627293,-3.199902,1.294622,-7.707954,-8.938599,6.454510,2.107668,-8.691406,9.293833,5.648854,-1.885662,4.506229,-5.304253,-0.050624,7.349387,-8.159922,6.212053,9.295618,-6.233335,3.086325,-2.797379,-1.409816,-2.144207,3.408242,-5.615396,8.126531,-9.415407,-2.178257,-7.645267,2.600136,-6.016877,7.410310,-3.103391,3.076305,3.376263,8.608861,3.012195,3.395811,-3.214355,3.771863,2.434472,-2.004688,8.135062,2.921353,9.621234,0.590288,-6.706867,-0.704177,-6.428424,6.596118,-1.774666,2.910192,-1.657495,0.686380,3.516438,2.695742,9.887957,-4.478483,-9.215749,-6.966723,-8.569916,-7.953462,8.234527,6.638019,-3.102979,6.611547,7.261302,-1.290449,3.099860,6.432402,-4.389731,-5.604433,-8.801839,-7.364360,-0.339162,-8.800567,-1.909974,2.521283,3.551434,9.851958,0.098509,-9.862809,2.153350,-4.448069,-5.144766,1.862230,2.544087,3.197796,-0.469305,-7.176201,-4.139572,1.812396,0.840381,-6.651383,6.733633,-4.668613,-8.414440,-4.928257,8.674718,1.376214,-0.257891,-6.362175,-1.249330,0.483046,4.095092,3.217902,-6.374965,7.097185,6.854100,4.164390,5.764222,4.553097,-6.913055,-9.014670,-0.656634,-2.654163,-1.879944,-2.977435,-9.504441,-9.852764,-5.563298,8.618245,-4.092340,-4.919837,1.479604,7.750916,-7.847265,-2.811603,-7.313527,-5.496712,-5.857663,7.841553,-9.289857,6.033137,0.301615,-3.307938,0.130072,-8.589428,-4.368656,8.955116,-7.572544,3.264965,5.978916,-2.278142,-6.905110,5.035125,1.063402,9.281040,-4.180456,-5.049981,-1.508320,8.947896,-3.321289,-5.671888,4.632925,-2.903874,-8.588721,-9.778162,-2.166569,6.387894,6.005244,8.493751,3.703938,-4.822956,-3.429943,3.291216,-2.473681,-5.843913,-5.114342,9.956878,1.848592,-8.110473,7.709823,6.106471,7.428833,-4.970020,9.689650,6.024688,4.302823,3.090878,-1.042321,-3.374751,4.511537,9.721826,7.688342,0.874319,7.801186,-9.801948,-2.643987,-1.832177,-1.901010,7.090038,-1.373686,-1.696291,-3.876638,2.170065,-0.586999,7.737472,6.314706,-7.360192,-8.478563,2.588734,3.037461,-1.901437,2.375743,9.903619,-6.750805,-2.505680,1.209504,-7.845731,-7.602651,-1.830066,3.485378,-9.820396,-8.643249,-8.862102,7.764761,-6.357489,7.403381,-6.203724,9.606940,2.837256,-0.314284,2.804211,-9.413636,-9.832804,2.474703,-7.776700,-9.210945,2.566600,2.193832,3.565518,3.892619,5.216058,8.138418,-3.300739,2.990396,-5.768282,1.237079,7.590071,4.768318,-6.364219,-0.499056,6.189041,4.790165,6.492539,-1.148365,8.897056,1.227263,2.593511,4.119792,8.988429,2.100465,-1.510094,5.507908,-9.814822,9.980483,-5.836405,4.749905,3.191773,-6.129196,4.241581,7.664146,9.263265,3.263248,3.919073,-6.469494,7.543487,-5.518094,-8.860927,5.950300,-3.155196,5.573112,-7.098510,6.954472,2.923159,2.401827,-2.683145,-3.375604,7.558746,-6.307345,-1.542860,4.701390,-6.766967,9.626434,-5.718756,-3.494852,-9.350650,1.007469,-2.456135,-7.878130,-4.041458,4.086940,-3.108531,-4.655870,9.346123,9.918496,7.271499,-1.738806,-4.948526,-5.276636,-8.652098,-9.096735,-7.423947,-4.076655,-5.672645,7.948171,-0.574130,4.588794,-0.842689,-9.530510,0.416086,2.129631,-7.725593,-3.531486,7.044938,6.111715,7.324121,-4.717765,5.816941,8.680569,4.645363,6.783838,9.947632,7.341972,-1.509339,0.840733,6.027910,5.082416,-1.073660,-9.976892,-9.004295,-0.043745,3.387763,-6.966093,3.318932,-9.432393,-5.397929,-7.385742,7.169154,5.177067,7.293479,5.843025,9.846777,-2.323379,-9.095108,7.888515,2.301922,8.149521,8.923449,8.824219,9.151580,5.126300,1.125412,1.587433,4.936618,8.420749,5.200081,7.646716,3.261935,8.906478,2.619322,-1.823476,-6.021744,7.666822,1.095269,-0.212310,7.027664,-3.649516,4.571594,3.938829,-6.133184,9.522751,4.688631,-6.984748,-4.198177,-7.629716,2.685017,-3.242933,-2.379505,5.324841,1.285736,-3.194395,6.158569,1.649313,-5.302321,-6.662746,5.046662,7.017952,-3.738496,2.761664,6.805939,-8.556574,4.741214,-3.820346,1.446925,3.589181,1.975959,9.429312,7.408326,2.382074,7.775707,-3.465440,8.877413,3.767998,-7.172036,-0.890015,-9.463883,-1.681550,-4.977272,-9.280604,-8.025307,-0.337282,7.079371,-8.703960,-8.810210,9.187263,0.499313,1.713497,6.143223,8.723651,5.475010,9.210822,-9.758232,9.220263,-7.084746,-2.881864,-4.057151,-6.276202,-6.332004,-1.372413,-1.750795,-8.464979,4.656520,-7.415035,-4.607747,-4.723434,7.901026,-2.638789,3.220615,-3.822429,0.868182,-0.361738,8.292801,4.793177,-7.196082,7.420377,5.865340,-4.770660,6.073090,1.465413,-4.810937,0.050364,7.613335,-2.724424,-4.721188,-5.955903,8.037780,1.523428,1.336439,1.003015,-0.756339,-7.291058,-5.882776,-9.681049,9.249720,-9.232097,-4.978252,-2.211629,4.252928,-2.723585,5.843935,3.711663,-3.516057,-7.865619,2.971438,2.995954,-5.140690,-7.795716,-5.527763,-9.970306,-4.856224,-2.633344,-5.801409,8.494990,0.615707,0.099665,-3.030324,7.384320,6.182275,2.316094,7.047812,-5.689682,-3.150742,8.774060,-1.769671,8.471256,-2.907388,4.660664,-9.267773,-5.959715,-7.890696,-7.634194,-6.779643,7.098883,8.528702,-3.645707,4.693610,-0.823175,1.024658,7.433761,8.349633,1.722943,-9.134495,2.516435,4.469198,-4.974175,7.733386,-3.051080,-6.548486,-5.400884,-4.296604,1.860861,1.288327,-1.636401,3.899286,-5.487250,-8.700899,-4.860957,-1.521245,4.803428,6.069467,-2.456854,-7.770057,-7.816140,-0.747666,3.206613,4.884765,1.166536,-9.156496,-6.676637,8.897930,2.195960,-8.102032,-7.977753,9.558090,-6.012832,0.651370,8.417308,5.259993,-7.325808,-1.536890,0.481003,-8.978292,4.295172,-7.297648,-5.737326,-0.791450,5.751799,3.287170,-2.897577,3.958989,8.665892,8.725679,-2.672186,-6.090863,-6.186932,-5.786552,1.068689,-9.008320,-0.857247,-4.922046,-0.294869,-1.585470,2.347627,0.161960,-4.574272,-0.713511,9.756347,-7.624057,-8.278431,2.378390,-9.323993,-5.432935,-8.071525,-6.639605,8.882487,-0.458816,3.459357,8.156379,-7.405714,-6.755033,7.187343,2.495982,-6.260013,7.402004,-4.082729,-0.360348,-1.385766,-2.130422,8.275631,9.928085,8.527840,6.920419,-8.763947,5.646760,1.637199,1.103610,-1.153130,-6.328620,0.657862,-4.186387,-3.365850,-7.958314,0.124900,4.289853,0.557081,-4.022227,-7.347953,9.421509,-4.995572,-1.686226,5.360393,3.293350,-8.146494,-4.580629,5.185782,5.570747,4.971124,-7.603309,0.121211,-3.181027,6.098522,2.678163,-9.412225,-6.192992,-7.530568,-4.584302,2.189811,6.820067,5.419593,1.805151,-5.065945,-9.158853,-0.265935,2.622357,0.873359,-5.002759,-8.001065,-8.754875,-0.633922,6.108608,5.707093,-9.943813,2.000086,-3.034294,-5.774876,7.882763,6.907087,-5.858446,2.108857,9.263845,3.358754,5.093001,9.295157,-3.273636,-9.832047,-0.401683,-7.594441,-8.702371,0.816602,-0.618909,-3.052876,-7.496418,-0.323931,2.075681,-7.596707,-7.029715,-8.363597,9.788620,8.347068,-4.358329,-4.010468,-9.837245,9.004171,-7.854630,1.042077,-8.100589,7.518582,3.993099,-1.733553,2.877982,9.552995,-8.497617,9.678836,-0.754731,-1.287332,-4.462420,9.199585,3.917777,-0.644536,7.398674,-6.809097,9.130353,6.293170,7.124011,-5.217466,-0.581131,-6.266543,0.695012,8.859225,7.029859,-1.218260,-1.016618,-3.305141,5.075188,0.271311,-0.059952,-1.927978,5.604349,2.225442,2.128570,9.423322,4.084654,6.147644,1.806818,-0.255780,-0.503046,8.964620,4.681991,-3.866493,-8.038742,7.111471,9.609899,-0.933056,1.463051,-5.961967,6.750040,0.594826,1.155986,-4.003409,9.078311,2.479943,9.019526,-6.383227,-9.353283,7.007373,-9.171554,-7.733997,7.170714,5.047408,-5.094500,7.388572,0.744852,-9.683073,7.709499,-5.337578,-1.465138,-7.416025,-0.722045,-4.598445,3.952918,2.109831,-3.938085,-1.186897,-2.540535,2.264952,7.548906,6.833869,4.154364,3.016028,-5.656295,7.570098,-8.802941,-9.619755,-1.052803,4.280492,2.805496,2.939128,-7.156424,5.863989,0.075472,7.415028,4.108831,-6.865154,7.651326,-6.582718,8.947811,-2.347286,0.144931,-5.371937,1.108136,-0.335532,-4.361613,-8.796638,8.741670,5.003739,-4.755930,8.457842,7.319610,-1.338886,4.825146,-2.600488,-3.895294,-8.348262,-2.051290,6.252411,8.409807,-1.003170,-1.009937,-6.327694,-9.430100,-1.086993,1.320283,-7.626310,3.474819,8.678661,3.159221,2.260071,-2.116837,-1.937751,-2.997032,-5.528027,3.975447,9.970070,4.678614,3.693581,-0.883458,4.045353,6.638833,-7.507625,-2.306566,8.926830,-9.386912,-6.342803,4.753596,9.814472,-3.029622,8.593416,-2.837363,6.256283,-2.464937,4.787781,3.284826,-9.918113,-3.595763,1.162413,-5.996804,5.454810,-9.288668,7.677261,-8.394111,6.802780,-5.955313,-5.244574,-1.020343,9.717258,-5.172994,6.078272,8.576896,-4.369921,-3.973958,-8.246581,-9.670627,1.330667,5.914854,-3.404011,9.167428,0.434223,-6.345061,-3.819435,3.509605,-3.512547,-0.390955,6.620898,5.212338,-7.253280,-7.032862,5.686570,-8.426030,6.784736,8.303929,2.779181,4.435975,2.478620,-6.440891,-7.276547,6.345108,3.915130,-9.916659,4.485397,-3.061425,-2.015458,-1.175112,7.566874,-0.784064,1.259478,8.439624,6.062676,9.694275,-5.975132,-9.178740,6.282710,2.290214,-7.041717,-7.747988,-5.647657,3.939585,3.400592,-3.566160,-9.213044,9.160475,-7.789335,-9.328948,4.063074,-7.039653,8.025628,5.101588,-2.516211,0.208951,-6.801116,-9.870501,-3.196797,6.859108,-8.018373,-1.149962,7.466124,-7.774751,-9.027063,3.392296,-5.286933,-7.432178,-3.242235,-6.630702,-1.800340,4.026921,6.088201,9.288605,4.418917,3.911974,-5.076558,-0.472752,0.890479,-1.989164,2.647724,-8.416563,0.256526,0.739653,-2.525342,3.145301,2.795351,3.429152,-8.279923,-6.390903,-5.871551,1.321606,-6.781942,-1.403389,-3.115109,3.716956,-4.298993,9.699745,-1.666609,6.755234,8.534033,-2.386383,-4.250701,1.131412,-8.098830,-1.356387,-5.711964,-5.256299,-6.249682,-6.134867,6.962094,-2.298133,2.399584,2.107753,2.028997,-0.487458,0.175705,0.743716,5.121981,4.929203,7.040825,-2.183891,7.759817,-6.940153,0.249888,7.863158,-9.131406,-3.440685,4.133069,-4.781613,-5.880135,9.554454,4.973866,0.602707,-0.720050,-3.360739,5.129992,5.808340,5.264919,-7.904836,-1.384998,5.569741,7.404851,6.526034,-1.266193,3.700621,-8.600477,-2.174635,-9.847911,-2.672953,-8.721750,-0.560504,0.078958,6.595980,4.008520,1.336682,0.139191,-5.332942,-7.786045,2.568939,6.236311,-2.590593,-9.112990,4.942395,-8.188681,7.058273,3.854372,-4.705133,9.784056,2.550488,8.846372,-3.104116,-6.291089,-2.047920,-5.492227,2.001766,-8.231855,-1.464241,-5.844210,1.213590,3.450621,-8.864836,-2.107185,-7.008702,-1.263765,-6.413006,-0.440827,-6.959014,-9.937257,-9.272455,-3.518017,-4.307878,1.064091,7.958844,4.593662,-7.763900,0.016172,8.906415,-1.879014,3.201973,5.829672,-0.635576,5.042818,-6.318647,0.939805,-9.710912,-2.968407,8.851955,9.439473,-8.827395,3.154400,-4.933347,8.364466,1.171901,4.202514,-6.936186,-9.703182,-1.728280,1.435979,7.472300,8.245784,-5.419691,7.366104,9.668715,9.451489,7.820077,7.475542,7.448530,0.273695,-5.002242,-3.855074,0.441597,6.108578,-9.590889,9.857836,-0.940188,7.748115,-1.743074,-4.345813,-3.772096,1.900476,-2.715493,0.109110,4.581474,-6.137268,0.093212,-7.699283,-7.475408,-8.202021,-6.710134,-3.534950,6.460263,-1.102575,-0.209746,4.345321,-3.391499,-2.866969,0.129619,-3.358792,-1.196554,-1.793741,5.467736,7.698867,9.180823,-7.851530,1.081131,-7.205104,6.432718,-1.348869,3.209917,-2.697819,7.400139,-0.009898,-8.217287,4.733801,-5.004928,-7.042868,3.049528,2.517315,9.323743,-1.491412,-6.642941,3.658498,2.491700,-0.732755,-4.491527,-8.134088,9.063008,-7.097786,-0.800252,2.496831,-7.751271,-6.294834,7.668828,-5.818721,-3.160101,2.790004,4.857641,-5.384702,-5.950735,1.077253,1.096338,-6.391017,-6.608579,-4.808401,9.073614,7.529757,9.423343,0.445994,9.989594,1.131900,-6.368914,7.081047,-9.671410,7.324697,-8.564849,9.544115,-6.457571,-0.173551,-2.813597,9.085554,-6.211401,2.271831,3.316530,-0.323659,-3.714860,-9.838113,-8.391691,-2.217374,1.846989,-2.400835,-5.400052,1.859089,4.604866,-8.604352,-8.821989,3.342513,-1.448735,-9.671580,7.578128,7.654860,-9.029314,0.458628,4.833429,4.293846,3.136320,-1.377476,3.956849,-2.034651,2.160205,5.632992,4.513789,7.569859,1.423379,5.257017,-2.984771,2.652422,-1.325868,-9.256255,-7.832366,-1.971687,1.061738,-6.073048,-4.105242,4.790897,1.373693,6.125756,-8.622385,-2.908830,-8.976060,-4.131179,-3.659133,2.438523,-4.819681,-1.536349,-8.714204,-9.826439,2.344256,-0.720647,-4.596381,-7.276046,-9.886736,-4.436219,-2.563511,5.755888,-5.526816,8.626725,2.222935,3.564884,-6.477726,-7.296982,-2.701789,-8.625388,4.299289,3.318494,1.484734,7.340926,6.847396,-3.595881,9.452620,-2.305423,7.245054,-1.680472,-8.139730,8.778783,-3.010035,8.158025,-6.719251,-1.527690,6.444347,0.064852,5.686513,-8.165319,-7.089941,-2.649999,-6.309625,3.321420,1.724697,-0.184550,8.243550,-4.211224,-3.129353,-4.126689,-0.142758,-0.142238,-2.986526,-4.710031,5.414910,-5.460115,7.807122,7.686373,8.548458,5.362697,-1.209114,0.686547,0.868932,6.569309,0.321799,8.207822,3.473296,2.316535,4.546356,9.530273,5.878684,4.302591,9.391186,-1.603611,5.242999,8.644787,-4.303054,-0.297270,-4.610743,4.471477,7.342316,4.865614,-6.462769,0.921721,-5.730996,-5.405980,-6.836671,-0.152946,-5.363634,4.754887,5.472574,-6.020211,9.950966,2.425071,-3.945651,8.536627,3.067411,-6.240963,-2.724188,-6.267123,6.364738,-4.660895,-3.725538,3.885618,9.927013,-6.795558,6.664590,-1.572662,9.800949,-4.796460,-7.387860,-8.223442,4.622501,-2.156103,-6.482064,-9.912008,8.550221,7.929663,-8.828873,1.241841,1.459751,-3.464699,-7.295188,3.746002,-7.371361,2.577860,-3.146872,2.124800,4.284322,7.391289,-4.272113,0.579796,-7.226693,3.847079,9.229118,-3.052674,-6.693985,2.251308,-3.666170,2.574498,-8.829213,6.599207,-3.106524,-4.017786,-2.811923,1.473950,-4.654003,9.163989,6.796650,9.643944,2.449369,-0.925944,-5.400906,-8.952485,-9.319990,4.413123,-1.095793,1.144801,6.800901,-4.509408,6.317978,-7.392745,-5.352763,-2.338928,-3.444452,-6.067887,-3.069646,-0.679835,-0.907068,2.712841,-9.722127,-6.577580,1.259271,2.025591,9.725515,9.901505,6.115204,-3.615012,0.585922,1.294020,-6.178342,1.322099,-7.918453,0.300511,-9.940716,-6.058167,-1.381129,3.847406,-9.305336,-5.003926,6.894364,5.074570,-3.576396,-6.975552,-5.768165,7.449060,-6.904172,9.102240,-8.325836,1.319571,3.741170,9.510575,-0.465345,-5.943545,2.332637,3.594155,-0.613148,4.392430,-5.181508,-2.454146,-7.801498,-0.477802,-2.551194,4.257349,-9.221664,7.057013,-5.129092,4.556850,0.408563,-7.483768,8.736052,7.207642,-2.356011,-6.473550,2.505562,3.975378,-5.608418,-7.830360,-7.357797,-0.629170,-5.737411,-9.929895,-9.329954,-3.481640,1.375210,5.362872,-5.271513,-0.659625,3.026832,4.341707,3.903529,-8.551971,-9.459585,-5.251492,6.092294,-9.957300,-9.917836,-2.930936,-8.026530,3.244794,3.863415,-6.690145,6.114418,-7.633140,5.476007,8.922987,5.779992,1.010278,-1.096870,-5.139441,-8.661304,-7.467442,9.866263,9.104827,1.296090,-8.399991,3.999502,-4.077976,3.578485,-3.493974,-8.866848,-9.668340,1.468027,-3.919226,4.977036,6.886038,3.798265,8.683428,0.110760,-4.931886,7.504697,8.501581,-7.657298,8.490177,0.260458,-3.917561,-1.169105,1.235849,-5.413865,4.234594,-9.655400,5.668159,-6.527797,-4.641894,-9.125256,-3.923633,7.111771,-0.877423,0.003040,-4.338125,5.332547,6.612895,5.171042,-6.822689,-5.095989,0.775003,-3.295427,-1.241698,4.691620,-2.542694,1.506924,6.322762,5.064596,-1.368818,-0.233786,3.106433,-8.597325,0.263131,6.059541,9.423263,5.218875,-1.518335,-3.055962,3.587485,7.662808,8.315423,-0.834143,-3.552632,-8.462876,2.975791,8.560768,8.702192,1.569132,6.346599,-7.429234,-5.618736,4.882081,3.448985,0.049310,-8.653172,7.801588,6.869567,-3.131320,6.757837,6.321831,9.215155,8.331337,-2.971682,4.773070,3.522887,-2.400504,-3.853302,-7.893424,3.754307,-9.955136,-0.535881,3.325123,6.859222,4.849577,4.942816,9.209071,8.827199,3.444733,1.701489,0.809068,-5.063303,-2.435025,-7.341032,-5.051387,-6.532276,5.095906,-1.934625,4.600705,-1.618346,-5.312494,2.239101,5.355519,-9.977794,-5.483928,4.419098,-3.484552,2.014993,-0.720719,8.098971,-1.368204,4.421512,8.587736,-9.480377,-2.433846,7.340243,-4.514336,-4.493371,-6.588598,-9.313210,8.865633,-2.743459,3.124848,-8.756627,6.335962,1.606270,-4.263774,2.192143,-1.676948,-6.733570,9.003950,-9.316868,-9.340752], dtype = "float32")#candidate|3155|(2145,)|const|float32
call_3154 = relay.TupleGetItem(func_2138_call(relay.reshape(const_3155.astype('float32'), [11, 15, 13]), relay.reshape(const_3155.astype('float32'), [11, 15, 13]), relay.reshape(const_3155.astype('float32'), [11, 15, 13]), ), 10)
call_3156 = relay.TupleGetItem(func_2142_call(relay.reshape(const_3155.astype('float32'), [11, 15, 13]), relay.reshape(const_3155.astype('float32'), [11, 15, 13]), relay.reshape(const_3155.astype('float32'), [11, 15, 13]), ), 10)
func_1709_call = mod.get_global_var('func_1709')
func_1712_call = mutated_mod.get_global_var('func_1712')
const_3158 = relay.const([-9,3,-10,2,4,-5,6,1,-3,9,1,-10,-7,-6,2,4,-4,9,-10,6,-10,-10,-4,6,-6,-5,-7,6,9,10,9,7,1,-1,-7,-2,7,3,-4,9,4,-1,-8,-8,-8,2,-10,-3,5,1,-1,8,6,-1,2,2,-3,-8,-9,10,3,-5,1,6,-3,7,-10,2,-6,-6,-3,6,-3,-7,-1,2,-10,-8,6,-6,-1,-1,-8,6,-7,4,-3,6,-5,10,3,-9,-8,4,3,3,5,-4,8,-8,-4,-5,-5,5,-7,5,5,-10,2,-7,6,-8,3,-3,-4,7,5,7,6,-9,6,-10,-9,6,-6,8,-2,-4,-10,9,8,-6,-10,3,4,9,-6,-1,-1,8,-1,-1,3,-9,2,1,-5,-5,9,-3,9,-2,-10,2,1,1,6,-4,-9,4,-2,3,9,4,-7,-2,6,-3,-9,10,-5,-2,4,10,1,-7,10,-2,-10,-8,1,5,-1,8,3,2,10,9,-1,9,6,7,-6,4,5,-4,9,8,10,-4,3,-3,9,6,4,2,-1,-3,-7,-6,-8,-1,-2,8,4,-6], dtype = "uint32")#candidate|3158|(216,)|const|uint32
const_3159 = relay.const([5.500165,8.041599,-4.930873,-0.487727,-5.181080,3.378734,-9.457068,1.988687,0.110602,5.063559,-0.692293,9.339487,-6.246563,-8.840212,-5.836944,-0.940818,8.360097,8.292997,8.637361,0.097800,-5.248402,-4.322166,-6.380543,-7.172591,-3.134571,6.050836,-9.666043,0.557229,-7.815707,4.152116,8.964602,-2.392766,2.260428,-6.257601,-7.117488,-0.415199,1.820683,2.121724,-2.434689,7.597559,0.289634,7.467038,-4.747408,0.384217,3.930952,1.296072,-5.198969,1.971706,-3.086881,-2.996610,-1.012003,3.139185,5.094976,2.206681,-0.069694,-1.561698,-8.042471,-5.460687,-6.516455,8.885152,-1.290508,-8.768268,3.665325,-1.714947,-1.829661,-5.817937,-2.173598,-3.134569,-8.944936,1.491444,-0.992192,4.265993,-6.475505,8.624766,3.702294,-3.705766,-0.946415,-0.262201,-8.194351,8.058490,5.328977,1.837894,9.741147,2.738002,-8.082569,5.683828,-0.201886,8.395636,-6.993266,0.208410,2.374170,5.956060,4.387519,2.679655,-6.738095,-9.898010,-1.966352,1.142591,9.793389,-5.997229,-0.748145,-1.325638,-5.361302,8.040357,4.304837,-3.771841,-4.858779,-7.880135,2.726868,5.001230,-8.601049,3.713890,-1.673514,-4.673265,7.936066,9.411596,-0.112791,-2.025077,7.175838,6.698584,-1.215008,9.391530,3.523450,-6.059300,-4.674707,1.274996,1.868393,1.248248,1.327771,7.931840,-1.984375,-7.907022,2.807645,1.534693,-5.257784,8.319734,-4.776008,2.834037,-0.544512,-3.515011,-4.383571,1.215265,-5.383453,5.055372,-3.274897,-4.105755,0.762300,-2.166174,2.834775,2.859696,-6.796931,4.268456,3.519676,1.395245,-9.696113,-3.276358,8.302869,7.923851,1.473006,7.340828,8.946493,-8.515197,5.236905,3.666243,1.218096,-2.999767,0.306904,-8.208409,2.203984,-8.534493,-7.432233,-5.276970,-9.982878,8.622661,-2.267977,-2.893581,4.208254,-9.878457,7.680979,8.467270,-5.526751,-4.615817,7.300632,-1.779190,-9.580218,0.303897,-9.677919,-7.535398,2.672186,-7.683389,7.288647,5.223055,3.928200,1.025268,-2.436444,3.495442,-1.371963,-6.885924,0.447342,-3.368580,-6.340214,-5.733023,0.889979,6.836330,-5.656059,-8.322248,-1.636725,-2.785835,5.680287,-2.209390,7.451908,-7.504491,-6.032134,0.794028,-9.961747,3.402394,9.119613,2.354913,9.348920,6.026931,-8.643493,7.491744,-9.560999,-7.831372,4.626891,2.267184,0.703779,-9.038772,-9.699497,9.503175,-7.879480,8.062251,-4.551887,-9.767557,-8.257262,4.663204,-3.527315,4.516505,3.831801,-3.079904,5.978093,8.171834,-9.553530,-6.654599,1.950371,4.586484,-2.409505,-9.607429,6.039157,-9.535347,-5.424765,-0.670821,-3.507035,6.242214,0.847541,-4.251028,7.876258,8.604917,-0.244904,0.320575,3.156390,6.141522,7.627948,-4.895685,-4.646585,-4.732824,0.246246,4.294418,1.399836,4.343537,5.893916,9.596765,6.853976,-4.435114,-8.577649,2.534031,-4.980699,1.254317,-1.914725,-2.983357,4.140303,-4.590768,1.555397,-7.394262,-4.093028,3.208449,-3.727914,0.339876,-4.534463,8.912160,3.439165,-9.134332,0.164937,3.943369,-8.532659,-0.179673,2.807834,-8.471223,1.225949,5.427720,-7.677482,3.096810,5.183535,-4.873911,-7.569561,-1.726108,-3.490605,4.142846,-4.630774,-7.402136,-7.894500,-0.158807,3.328751,-7.976951,-9.539503,-5.629373,-0.776705,8.209628,-8.120362,5.662485,0.746146,-4.872370,7.069963,4.565765,3.749942,-5.703821,-3.646806,0.627013,3.238280,-0.573146,3.134308,-4.553721,-3.900378,0.450861,7.807435,8.153483,-9.715596,-7.485231,4.791522,4.420897,3.872450,-7.974854,1.787714,2.848596,5.769125,-6.576943,8.669613,7.423495,-5.062407,-7.942963,4.141480,-5.233542,-3.070189,3.570768,-8.715109,-6.666431,-7.852227,4.291174,-2.619709,-6.066100,6.397735,-1.845811,5.192928,-6.178593,-3.798829,8.681085,3.400959,0.205824,0.400490,0.148166,0.358173,2.262895,8.807832,7.020719,-4.251756,7.992795,-6.706776,-3.285663,6.505440,0.172954,9.840868,-9.778035,-1.377309,-9.673269,-5.324702,1.734609,6.789180,-2.336120,-1.389070,-8.976240,1.839138,-2.713568,6.797906,-3.400910,8.636901,-4.699429,-8.995358,3.456992,-3.030907,-1.405761,-0.580869,6.203980,2.539038,-1.149855,1.498743,-7.610040,-6.048636,1.501301,0.724512,4.730636,8.424185,4.404531,-1.970689,9.489083,6.930812,8.282457,4.617634,2.237771,-8.018623,-3.795990,2.030011,5.251828,4.231997,1.583933,-0.027951,-9.255826,3.304638,3.695951,-7.720804,-4.538357,3.416810,2.955236,-1.411655,9.030296,-7.665711,5.324277,-6.034099,-8.654642,6.459958,-1.033995,-7.816243,6.278014,-1.388631,7.058862,2.240477,-7.187825,0.894338,-2.553981,4.179067,3.851806,5.630404,5.945380,9.918482,-3.514584,9.304029,-0.901974,9.557710,7.578117,-8.075976,-2.566098,3.585451,-3.420928,6.553032,-9.736952,-4.653305,-9.891988,-6.284349,2.119262,1.493390,-6.487628,-8.871196,-8.179483,4.998887,-4.344791,-7.026844,3.637662,8.925707,8.630783,-2.120753,9.828417,4.807787,2.610071,7.623775,4.988875,-0.326173,-8.276486,-0.354004,-7.157944,-6.386994,0.555593,4.705462,-7.489109,5.316804,8.352986,-0.194988,-4.452918,5.072835,4.256951,5.638739,3.500702,8.926972,-5.932803,6.299154,0.476643,5.505462,-4.271335,9.946049,-1.996417,-7.509698,2.167265,-2.864830,-3.083865,1.725935,6.047414,-5.782610,-7.540131,-0.876962,1.413519,5.867718,6.653808,-1.691210,7.475987,0.272323,-0.869379,-1.856949,-5.535651,2.262851,-5.080233,-6.540747,5.880154,-8.348611,-3.729267,5.977479,-9.536473,-9.333756,8.947618,-6.884850,8.774973,-0.835948,5.464731,6.218178,-9.961059,8.268746,4.125681,-7.074589,-1.214277,-8.164706,6.063357,6.539585,-8.066899,6.220057,-2.462366,-4.601432,3.887154,2.716817,9.477265,-5.091564,0.578685,-4.334434,-3.801700,-7.776467,-1.085076,9.945998,-0.137523,8.213048,2.342593,-4.090844,-7.129765,0.581945,-0.434369,3.714312,7.321730,5.978741,6.858397,2.393310,-1.787352,-8.801765,-4.111619,-1.701696,-4.081675,5.445351,-6.138701,5.630536,-6.494014,2.436340,3.300506,5.881794,-1.775723,-1.424176,-5.171665,4.954009,3.982168,1.880679,-2.659941,-7.985044,-3.252761,-5.634103,1.470967,9.616997,-7.561841,-4.942243,7.090190,-5.950785,-2.617197,2.006068,-2.603985,3.904316,5.279572,5.854111,-0.771889,-3.141616,9.604148,-0.459295,3.521783,-6.001298,-1.665850,2.660230,-5.791403,0.590885,-0.420776,-0.438927,-7.817796,-3.891832,-3.069619,4.770803,3.383065,3.916185,-4.123114,-0.729212,-8.035232,2.601232,3.678967,-4.398283,-4.964111,4.619401,9.888068,8.270395,2.443900,5.967844,3.364423,4.132556,-1.111326,2.210693,-7.743797,-2.926265,-2.938181,2.052273,9.458072,-0.276128,0.948497,-5.048592,8.729221,-7.947666,-5.279003,-1.633153,-5.873344,-3.721197,9.335601,0.549069,5.681019,-2.625712,6.693719,-7.834299,2.677489,-1.326450,-6.688622,4.062253,-1.942340,-2.119439,4.291014,-4.518479,-7.195718], dtype = "float32")#candidate|3159|(672,)|const|float32
call_3157 = relay.TupleGetItem(func_1709_call(relay.reshape(const_3158.astype('uint32'), [3, 6, 12]), relay.reshape(const_3159.astype('float32'), [672,]), ), 2)
call_3160 = relay.TupleGetItem(func_1712_call(relay.reshape(const_3158.astype('uint32'), [3, 6, 12]), relay.reshape(const_3159.astype('float32'), [672,]), ), 2)
output = relay.Tuple([bop_3149,call_3154,const_3155,call_3157,const_3158,const_3159,])
output2 = relay.Tuple([bop_3149,call_3156,const_3155,call_3160,const_3158,const_3159,])
func_3163 = relay.Function([var_3143,], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
mutated_mod['func_3163'] = func_3163
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3164 = relay.var("var_3164", dtype = "float64", shape = (15, 13, 4))#candidate|3164|(15, 13, 4)|var|float64
func_3163_call = mutated_mod.get_global_var('func_3163')
call_3165 = func_3163_call(var_3164)
output = call_3165
func_3166 = relay.Function([var_3164], output)
mutated_mod['func_3166'] = func_3166
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3275 = relay.var("var_3275", dtype = "int16", shape = ())#candidate|3275|()|var|int16
const_3276 = relay.const([[[-7,1,7,10,-5,4,-2,-1,3,-7,-9,5,4,-7],[-7,3,9,3,-3,-8,9,-2,8,-3,5,5,8,10],[-4,-3,3,4,-1,9,-9,4,-10,-10,-10,-9,-1,-8],[4,5,6,-10,5,10,10,-9,10,-6,10,7,9,4],[10,-10,-2,4,-2,-7,-10,-2,8,-9,5,-9,3,4],[1,1,1,-8,6,-3,10,-5,8,-9,9,7,5,-8],[1,8,1,5,-9,-7,7,-3,-1,-7,8,-5,6,-2],[7,7,3,2,-5,5,10,-8,1,3,-2,9,6,8],[8,-3,3,5,-5,7,1,-1,4,-7,-3,-7,3,-6],[1,-3,5,6,-3,-3,5,6,1,-9,1,2,-8,-10],[4,-2,-9,8,10,-1,4,-1,3,8,-9,1,-3,-5],[-1,-4,8,-3,-2,10,-4,4,6,-10,-5,4,-3,5],[9,9,-2,6,10,8,10,-1,-10,6,-10,-4,5,10],[-7,6,-2,6,9,-3,-3,10,-8,10,5,3,-2,-2],[-9,5,-5,1,-5,1,-9,2,7,5,-4,-5,-1,-6],[-7,8,-1,1,-3,3,-9,3,-1,2,-8,5,-2,-10]],[[-9,5,-3,4,-7,9,-7,-9,9,6,6,9,-3,-3],[5,9,10,-3,-1,8,-4,-10,-1,9,3,-1,-1,3],[5,2,-1,-5,9,5,-7,-9,-10,-3,-10,-3,8,-1],[6,-7,-4,-2,-2,-6,-5,8,-4,2,-6,8,-7,-8],[-7,-6,-5,-6,1,-3,-5,3,-2,1,-8,1,-7,-1],[-2,-9,-9,3,-9,-2,7,3,-4,1,7,-3,4,-2],[-5,-5,-1,-7,1,-4,-9,1,2,7,2,4,-9,-6],[-3,3,-1,-4,-5,3,-10,-6,-5,-6,-5,-3,-10,-6],[-5,1,-1,7,-5,4,-1,3,6,-2,-10,-8,-9,10],[9,10,10,-4,-8,-1,-2,-10,-4,6,-6,-10,5,9],[-8,-7,9,-3,-9,-10,-7,-9,-7,-4,3,8,-6,-6],[-6,-9,8,-3,1,3,-2,8,-3,-10,7,-1,4,10],[10,3,2,10,7,-4,9,10,-2,5,-5,-6,-1,-3],[-6,6,-10,2,10,10,5,-6,3,8,-4,1,-7,2],[-3,2,-1,-7,-7,10,1,7,-4,-10,10,-2,-10,4],[9,-5,4,-6,-4,-3,-2,-8,-5,-10,-9,7,10,-2]],[[2,6,-3,-8,8,1,6,3,-10,-2,-8,-5,-3,-6],[2,1,-5,9,-10,6,-10,-10,-2,-6,-5,-7,-1,10],[5,-6,4,-4,8,7,-2,-6,2,1,-10,-8,5,8],[10,-9,1,-5,-5,-4,-4,-3,-7,-9,6,5,-4,10],[10,7,-3,-6,-4,-1,-2,3,9,-10,-6,5,8,-7],[5,-4,-3,-7,-7,-3,4,9,-3,1,10,-6,2,-8],[3,3,-3,3,7,-4,-2,5,-3,3,-9,-5,8,5],[7,2,-9,8,-3,-9,10,5,10,-2,-4,-8,1,-2],[-9,1,-2,-5,-2,-4,3,-5,7,-7,-10,2,3,-7],[-7,3,7,3,-1,-2,-9,-5,-4,-7,2,9,-2,6],[-5,10,-1,10,-1,9,9,-2,-2,3,9,6,-4,3],[-8,-3,-1,4,8,-2,-7,8,6,6,-8,3,-1,-1],[8,2,3,8,8,8,8,-6,2,-2,-5,8,9,3],[4,8,-7,7,-8,6,9,-4,3,-1,-4,-7,1,-4],[-7,-2,-10,3,3,-7,-5,6,4,-8,-10,6,-1,-4],[-8,-5,-5,8,-9,1,8,-10,-1,-4,6,6,4,1]],[[4,-10,-4,-7,-3,-4,-3,6,-5,4,-5,-2,4,-7],[9,6,3,-4,-2,-8,6,-1,9,2,-4,-3,-9,-9],[5,3,-6,-7,-6,8,4,7,9,10,-5,-5,9,5],[-3,10,10,1,-4,-7,-1,-2,-2,-6,-9,1,9,1],[4,-5,-2,-4,-10,-10,-5,-9,-1,-3,10,-6,-6,-10],[-6,10,-1,-6,1,5,7,8,-2,8,7,-8,1,-5],[4,-9,-10,-10,-7,2,-8,-9,-2,-9,-5,-8,8,-9],[-2,5,2,6,-6,-1,-3,-1,9,10,-9,6,5,6],[1,-2,8,9,-1,1,1,8,-4,7,-9,7,-3,3],[8,-1,3,-4,-1,2,-9,-9,5,-4,-8,-6,-9,8],[5,-2,-9,4,8,-2,10,-1,8,-1,1,4,8,8],[-3,9,-6,-5,-4,6,6,1,5,-6,5,-8,3,-6],[3,8,10,6,-8,4,9,-6,-9,2,2,-9,-5,1],[-8,-9,-3,-7,-6,-3,-5,8,7,8,10,2,-7,-9],[7,-10,-9,5,8,6,-8,-6,-6,-6,8,-10,3,-2],[-4,-3,-1,5,-2,3,-4,-3,10,7,4,10,7,-4]],[[-4,3,7,9,8,7,4,-9,-1,-3,2,6,3,-1],[7,-3,10,-1,1,-5,1,9,4,-6,-2,7,-8,3],[-10,-4,-8,10,-2,-6,-10,-1,5,-8,10,5,4,-6],[-6,8,3,-2,6,10,-4,10,-7,5,-9,-2,-1,-10],[10,9,-7,9,6,1,-7,1,-9,-5,10,-10,-5,9],[-1,10,9,7,-8,-5,2,-8,1,10,8,8,-5,8],[-3,5,10,-7,-7,-4,-1,-9,7,1,7,-7,5,7],[-4,-2,-4,10,4,-2,2,-6,-4,-5,4,-8,7,10],[-1,-2,1,-1,-10,-10,8,5,-7,2,-8,2,-5,5],[-10,-4,1,5,1,-9,-8,-5,-3,6,-5,-1,7,9],[8,6,8,-8,-7,2,-10,8,4,-4,-8,-4,1,8],[-1,-10,10,4,5,8,6,9,-5,-3,10,3,-8,-1],[-4,-6,5,-1,-3,4,6,1,3,7,-5,-6,-8,5],[6,6,6,-5,10,-5,-1,-3,10,-9,4,-1,-6,5],[6,1,-5,-3,9,-1,2,-3,4,1,2,7,8,4],[-4,10,-9,1,-8,-5,10,7,10,6,10,10,-9,-9]],[[-4,3,-3,6,-3,-6,-1,9,4,5,10,10,1,3],[4,9,4,-5,-6,-9,-10,-2,-3,-10,1,-1,-7,10],[-10,9,4,3,9,-6,-9,-6,9,9,10,-9,5,1],[-10,3,5,-5,10,-8,-5,6,1,-2,9,-2,-1,10],[-10,1,2,-1,5,-6,3,-6,10,2,-3,2,8,-2],[5,-8,-1,-7,4,-1,-6,-4,3,-7,3,4,8,9],[-10,-6,1,9,4,8,-6,6,6,-2,1,1,1,-9],[1,-4,1,5,-5,-5,-10,6,1,-7,2,-5,-9,7],[2,-8,8,-4,-3,10,-3,4,9,9,-1,-5,8,-8],[-6,8,2,1,-9,6,5,-9,-2,-2,-4,-9,1,-8],[5,5,-10,9,10,-10,6,10,-4,2,1,-5,6,10],[9,6,5,-3,-6,-6,4,-7,4,4,6,3,9,-2],[3,2,-9,6,-10,8,-3,4,10,10,9,-3,-9,2],[-6,10,-6,3,-1,-9,2,-10,-10,4,8,-6,-7,1],[7,3,8,5,8,-9,-1,-1,-6,7,7,-7,-7,-1],[-4,-2,6,4,-9,-7,-1,5,5,-4,-10,6,-4,2]],[[6,8,8,10,-5,9,7,10,-4,-1,-4,-7,-8,2],[6,5,-9,-3,-3,2,-9,-2,1,-6,9,-2,-2,7],[-2,2,-3,9,10,-1,-4,10,6,-2,4,-9,-5,5],[-10,7,-1,7,8,6,-7,-2,9,-8,4,1,-10,-2],[-3,-6,1,-2,-4,4,6,-1,-6,8,5,-2,8,8],[6,-4,-8,10,4,10,3,-2,-6,4,6,-9,7,-1],[-3,-2,-10,7,-7,-7,-9,10,1,-2,5,-10,9,-1],[9,1,10,2,-2,-7,-6,-1,-9,8,5,10,-8,-10],[-8,-5,-4,2,4,3,2,6,-2,10,9,5,10,3],[-4,6,7,-2,10,4,-7,-1,-7,-5,-3,2,5,-6],[-3,-2,6,-10,1,-4,5,6,-7,8,-3,4,-10,-8],[4,-9,-4,3,-10,1,-4,-6,-4,-10,1,-4,-1,-8],[5,-5,9,5,6,3,10,9,10,-4,10,-5,1,3],[8,-4,-9,-1,2,4,-3,-6,-1,-10,10,7,-7,1],[10,2,7,-10,-7,-7,-8,-7,-7,7,-7,3,10,-7],[10,6,2,-9,-6,-5,1,-1,4,1,10,3,2,5]]], dtype = "int16")#candidate|3276|(7, 16, 14)|const|int16
bop_3277 = relay.left_shift(var_3275.astype('int16'), const_3276.astype('int16')) # shape=(7, 16, 14)
uop_3281 = relay.log10(bop_3277.astype('float32')) # shape=(7, 16, 14)
var_3290 = relay.var("var_3290", dtype = "float32", shape = (7, 16, 14))#candidate|3290|(7, 16, 14)|var|float32
bop_3291 = relay.mod(uop_3281.astype('float32'), relay.reshape(var_3290.astype('float32'), relay.shape_of(uop_3281))) # shape=(7, 16, 14)
bop_3296 = relay.divide(uop_3281.astype('float32'), relay.reshape(bop_3291.astype('float32'), relay.shape_of(uop_3281))) # shape=(7, 16, 14)
func_1709_call = mod.get_global_var('func_1709')
func_1712_call = mutated_mod.get_global_var('func_1712')
var_3305 = relay.var("var_3305", dtype = "uint32", shape = (108, 2))#candidate|3305|(108, 2)|var|uint32
const_3306 = relay.const([[9.055024,-4.608586,5.823745,7.841369],[-0.902957,6.535258,-0.353968,-8.863012],[1.002949,-7.330195,3.804849,8.136633],[5.782827,8.756229,5.411307,-1.353370],[1.019117,-8.413457,5.636799,-9.027149],[-3.697301,3.888026,9.643788,8.515639],[-0.123902,4.202210,-6.511659,0.013083],[9.741413,7.610765,-5.330308,-3.951057],[-9.387192,-3.525481,-6.079874,7.891342],[9.234072,7.148945,7.867932,9.278784],[-8.392065,1.647079,-9.769808,-7.405783],[9.289413,-0.225178,-9.234922,0.726123],[6.086786,-3.341383,-7.564788,-3.844419],[-1.905672,3.384922,-9.948401,9.839877],[1.845057,-0.070805,8.802916,9.505717],[-7.275163,-5.554913,-8.736798,-9.010508],[3.914639,9.816189,-1.932236,5.979020],[0.382396,-6.037250,-6.750611,9.184387],[1.456774,4.351473,-5.999268,5.791565],[-9.576418,9.695504,-2.321811,-5.676399],[-1.967668,5.850636,0.226963,5.479611],[1.137426,-7.499028,3.001980,8.038258],[4.645661,6.025022,-7.419077,3.321412],[-9.395440,3.151521,-5.632277,4.884553],[-2.752910,4.789749,2.562908,-3.394762],[2.586169,-0.197117,-1.572200,5.597662],[-0.498183,-7.245327,7.047728,7.799428],[-5.596107,-4.285571,-5.797520,-8.754049],[7.984034,-0.131524,-5.100489,1.969893],[-4.155078,1.163213,-5.594825,-4.198793],[3.010705,3.509706,-2.867123,5.175069],[5.059124,5.463644,0.556788,-6.632241],[-1.232550,0.528935,-0.162657,-1.732314],[3.696312,7.517903,-6.232298,-1.690450],[-7.953686,-0.472258,1.998445,-6.039919],[-9.637857,-5.007448,5.912108,-4.250624],[-3.303453,-4.108359,-6.773675,4.781297],[-0.806518,0.306437,-3.691371,3.397153],[5.804996,-4.207117,8.411073,-7.944937],[-4.600383,3.575107,3.632423,3.659313],[6.306085,-4.977125,-7.460191,9.350458],[1.184119,1.697639,2.135644,-4.664946],[5.480789,1.839671,8.434160,-5.965228],[-7.371628,2.232524,4.646221,3.943654],[0.357673,-0.555677,8.661473,-2.059358],[8.589079,0.444008,-3.009120,4.228986],[-7.606375,-8.873845,-2.886598,6.643429],[-3.010762,0.700417,-0.964807,5.907676],[-4.482774,6.954534,4.872153,-7.973799],[-5.473851,4.738176,-2.271591,-0.702355],[7.917255,-0.198214,9.267180,7.312264],[0.699054,0.986392,9.583617,0.722530],[-1.223254,-2.773206,-7.618442,-8.666216],[-9.288792,-7.719488,1.365927,2.391374],[3.312160,-7.730859,1.403874,5.194520],[-8.472937,-7.503049,2.917471,-3.369881],[1.244054,8.162849,1.378347,-6.119358],[-5.495461,-5.179850,1.928355,-8.253866],[-2.567266,4.591704,-0.265273,-4.098450],[6.605567,2.937993,-9.178708,-6.710335],[-7.452480,3.477403,-6.401965,1.022928],[-8.655762,-1.420593,0.453642,1.371968],[0.903737,2.043720,7.139270,0.584804],[6.940247,6.678463,-6.871416,5.871651],[0.621396,-4.109737,-6.638992,-9.278175],[-0.426131,-1.085502,-7.852997,0.967541],[-9.412578,5.572795,-6.552414,-4.178896],[6.597924,2.488048,5.223874,-8.528131],[6.750824,-4.599720,-2.394791,0.409354],[3.927683,-8.975258,4.888318,-7.427987],[7.765353,1.036737,-0.352766,0.032811],[8.109839,0.802272,5.311466,3.004711],[-7.460657,-3.465741,9.973049,9.464114],[2.752205,-7.748831,2.343194,-0.906057],[-9.110047,-5.979752,1.474400,6.722925],[-7.396230,7.201155,-7.893423,1.257415],[4.807000,-6.510519,2.229049,8.254905],[1.228624,6.385509,-8.430078,8.241259],[9.780955,6.139376,1.941458,3.923466],[1.365951,7.599151,8.251615,7.875314],[-1.041461,7.704654,1.796694,-3.170062],[-9.872355,-8.497128,5.298303,-3.814590],[4.721410,2.153487,-1.874981,9.342192],[-6.451033,7.688304,4.650504,-9.988796],[-3.793290,7.017689,-2.313296,9.992473],[9.908546,-5.142075,5.896915,9.142036],[-0.153260,-7.480020,0.475173,4.076952],[-2.276057,0.206211,8.268108,-2.516577],[-0.474932,3.890633,3.380826,7.166566],[-6.954209,-5.779155,-5.745308,5.626482],[-9.635060,0.714129,4.555810,6.671205],[-3.086145,9.288210,-2.460223,1.920171],[7.048227,-0.103533,9.349283,7.764583],[7.789760,-9.560091,1.130231,-0.791156],[4.142271,0.414078,-2.506143,-1.646335],[5.466630,-6.746230,5.448814,-4.141185],[3.453194,-2.447505,3.463327,-9.677983],[9.715531,-9.192534,-2.351826,-8.137993],[3.369378,-6.915063,4.994077,-1.458464],[-0.932330,-2.530116,-2.370098,-6.230182],[0.476811,6.266662,-5.011042,3.253716],[-2.790756,-8.795857,2.118732,-1.013446],[-3.885188,-3.660387,7.677656,8.310551],[-9.340487,-7.887794,-0.744684,-5.069765],[0.223580,-0.160895,6.255401,2.289770],[-5.498075,4.980405,-3.836844,-7.444183],[-1.124290,-2.100117,8.911869,-4.744295],[-0.739788,-6.828750,6.395490,-9.314685],[-0.364953,6.187087,6.203931,6.329452],[-3.432268,7.988730,-2.795611,-0.366593],[-9.602614,5.535443,-0.948680,7.199060],[-6.292387,2.249267,-9.547011,-0.351275],[2.388132,5.531392,-0.416598,-4.455746],[0.030367,7.997814,6.583262,-6.593476],[1.643132,6.680573,3.794816,-5.710115],[-6.370063,-8.962345,7.372927,-6.445641],[-1.468247,9.215938,-7.431501,1.126567],[7.358682,-9.606718,-0.778840,1.789959],[-4.532861,0.849761,8.207223,9.799486],[-3.367752,0.076049,-7.412603,-0.404529],[9.413841,8.881046,0.337467,5.678234],[9.764638,6.152843,-4.899530,3.105615],[0.572106,3.336783,-2.371137,-9.510757],[-3.696526,1.231216,8.858364,1.159851],[4.714400,9.423483,8.497107,-7.535976],[-5.386950,3.840131,-4.406349,0.930555],[5.127664,-3.812053,6.677820,-5.776094],[-8.392812,-8.500525,8.406077,-7.834699],[-7.150689,0.499840,-5.928265,-1.785460],[6.452100,-1.420009,3.757557,0.040655],[-2.920017,-1.654789,0.368713,5.817512],[-3.346047,4.840595,9.663397,7.882456],[1.631333,1.343189,-5.664918,-9.555143],[6.888412,8.653632,-9.136145,-3.011995],[-7.494020,-7.067477,1.271431,-5.178042],[0.130601,-8.834734,3.716809,-7.908336],[-9.279837,8.245156,-1.943474,0.933166],[-9.882126,-2.083054,3.826493,5.950085],[8.746070,5.939240,6.593196,4.818811],[-3.241274,2.246645,7.955602,-3.604998],[5.016702,-4.586733,-1.784705,-9.645415],[-6.916432,4.244281,2.439690,6.619050],[8.062580,0.557728,-9.955379,2.307068],[-3.096112,2.165494,2.178033,-2.060978],[8.155071,-1.261843,-1.567147,-5.059529],[8.710611,-7.939728,-0.305626,1.279777],[4.463970,-4.622358,9.909975,-1.879288],[-2.713160,3.775872,5.511727,-6.413532],[-7.271180,-8.377493,2.713515,5.302768],[1.620629,8.073009,-5.783568,5.785643],[-1.715697,0.853555,7.397990,1.332246],[1.548141,6.931808,-0.521069,1.581142],[-3.731688,7.190429,-0.165475,-2.069014],[0.113143,8.145463,9.336320,7.968933],[-2.230331,9.113029,-5.899433,4.885079],[-6.766182,-4.393296,8.206390,4.681731],[-3.105148,5.722713,-0.440168,-3.657702],[-7.183113,4.096334,-5.015328,5.030824],[1.381556,-9.485477,7.652744,-5.984667],[2.750886,2.791758,-9.111740,-7.514966],[0.823289,-1.013773,-0.178443,6.721664],[-2.198495,-9.139562,3.097761,-0.004290],[-2.908135,-4.317469,-1.190061,2.092453],[-7.427812,-6.076057,-0.104542,9.200138],[2.453864,9.795466,-8.049829,-7.649125],[0.198024,7.828356,-8.111062,1.749123],[-9.619128,-8.700495,-6.157617,-9.612201],[-9.534343,-5.115125,-0.517152,1.887278]], dtype = "float32")#candidate|3306|(168, 4)|const|float32
call_3304 = relay.TupleGetItem(func_1709_call(relay.reshape(var_3305.astype('uint32'), [3, 6, 12]), relay.reshape(const_3306.astype('float32'), [672,]), ), 1)
call_3307 = relay.TupleGetItem(func_1712_call(relay.reshape(var_3305.astype('uint32'), [3, 6, 12]), relay.reshape(const_3306.astype('float32'), [672,]), ), 1)
bop_3309 = relay.greater(uop_3281.astype('bool'), relay.reshape(const_3276.astype('bool'), relay.shape_of(uop_3281))) # shape=(7, 16, 14)
uop_3313 = relay.log2(bop_3296.astype('float64')) # shape=(7, 16, 14)
func_788_call = mod.get_global_var('func_788')
func_790_call = mutated_mod.get_global_var('func_790')
const_3323 = relay.constdtype = "float64")#candidate|3323|(90, 20)|const|float64
call_3322 = func_788_call(relay.reshape(const_3323.astype('float64'), [8, 15, 15]))
call_3324 = func_788_call(relay.reshape(const_3323.astype('float64'), [8, 15, 15]))
uop_3336 = relay.atan(const_3323.astype('float32')) # shape=(90, 20)
uop_3338 = relay.asinh(uop_3336.astype('float64')) # shape=(90, 20)
bop_3344 = relay.mod(uop_3338.astype('float64'), relay.reshape(const_3323.astype('float64'), relay.shape_of(uop_3338))) # shape=(90, 20)
uop_3349 = relay.sigmoid(uop_3313.astype('float64')) # shape=(7, 16, 14)
func_3163_call = mod.get_global_var('func_3163')
func_3166_call = mutated_mod.get_global_var('func_3166')
const_3353 = relay.const([5.866464,2.705499,6.601078,0.729865,-9.609727,-8.012731,8.371406,-6.365125,-0.826911,-8.684673,-8.081792,-9.067991,3.127075,0.694066,7.186842,8.760060,6.158225,-6.816897,6.419328,3.473639,-7.269029,-5.521775,2.975379,1.956869,-8.661073,5.527456,0.197105,2.266480,5.594099,9.397339,-1.562633,7.555963,4.309561,-6.750184,5.218980,-0.442781,7.736666,0.759512,-1.385223,-3.519212,4.805932,5.437938,8.952922,2.435325,0.958179,8.964614,-5.463052,0.466012,-1.299907,-8.255659,7.554435,-5.145850,9.242961,2.415106,-0.386155,-2.052693,6.770219,6.104856,-5.201527,6.875070,5.434137,6.066014,-3.269130,-9.795697,-3.293035,-4.566841,4.496850,-5.501797,6.273746,-7.736384,9.321440,6.923339,-2.423543,3.423167,6.626970,-6.555328,9.684214,-4.228158,7.996050,1.530722,-6.959683,4.005072,-3.658601,-4.995763,-9.171136,8.348256,-3.511116,-1.361867,5.637960,4.560532,0.609852,-1.148325,-6.173157,-4.667862,1.676342,6.446593,1.473138,1.418172,0.668767,7.704773,1.501124,8.231251,9.342962,-2.620630,-5.613417,-7.671620,-9.777390,-4.683988,3.691105,-4.188103,-8.502657,-4.260707,-0.039313,3.470506,-8.035716,4.574040,-9.900379,0.378555,7.744237,-7.294324,5.558476,9.848218,2.689241,-7.786066,-2.581199,2.722536,4.518114,-2.737745,-9.698846,5.761391,4.296563,-3.770132,1.643917,4.639188,6.526046,-6.689740,-0.551495,-2.956872,-0.197373,8.921919,7.821044,7.260597,-4.146923,3.527798,-4.358000,7.762332,7.050552,0.711516,0.269816,4.178393,-7.126694,-3.034278,5.174297,8.493759,0.403938,-6.818774,6.568438,7.050945,-5.927841,-3.910139,7.031109,-0.313061,1.616358,-1.122697,-7.343010,-8.459599,7.999461,-7.516666,0.719824,-5.737654,-4.538763,-7.979021,8.725546,7.090983,-9.007493,-1.046550,-4.327496,-8.868628,-8.087531,-0.916088,0.963726,0.249556,6.275397,9.328708,2.521107,-5.442988,6.200724,-2.517477,-0.727468,-1.376274,5.454520,6.261256,6.619146,-0.387036,-7.020134,-8.679871,2.030301,-8.814410,4.246275,1.058485,-5.746601,-3.854787,-8.796327,-8.271227,7.826050,7.118704,1.027113,-0.429818,5.389283,-6.052813,7.957232,4.947917,-9.499992,-9.943191,2.233468,1.622363,2.925175,8.404090,-3.054809,-2.795480,-9.414434,-9.891426,-2.076789,-6.128343,1.136717,2.667976,-5.682810,6.729327,4.680134,-3.856388,-8.003245,-8.026916,-3.758768,7.560003,1.954444,-7.966246,-9.347665,8.140581,5.113753,-6.204392,-0.048072,7.544499,-5.223046,3.139680,-4.730914,-3.054039,3.870792,-0.339298,6.651286,-9.249730,-1.067296,-9.083828,-1.511367,1.112495,-5.422168,-4.569536,-9.052019,4.845749,7.455877,-8.918369,-7.735443,-8.286186,4.179396,7.906377,-7.809792,2.847097,-1.681266,7.659393,1.695634,-8.944290,-3.651733,-0.487496,7.882394,3.014439,-8.279756,-1.132736,8.486640,8.699086,-5.178831,2.505918,-3.062024,9.983278,-5.564497,5.710115,3.541592,4.357518,7.457940,-4.958474,6.042873,6.537115,0.887532,4.188117,-3.377895,7.553221,4.206811,0.064354,5.423400,4.663500,-8.474651,5.950538,-3.248610,7.449782,-9.447240,-7.804773,-2.848869,-5.363580,-9.182494,-7.270932,-1.995372,1.247078,-2.543253,9.963063,4.651481,0.668955,-1.414977,6.071336,-2.220811,-0.963870,1.333752,-9.173367,-7.920829,1.110030,-4.930742,0.064489,-8.559520,0.348136,5.056231,-7.719312,9.522722,-2.879297,3.381431,-7.298508,8.931131,-1.241792,-5.690724,-0.335823,7.045870,9.044886,2.777947,-2.347295,0.396861,-5.424693,4.329501,2.542628,-5.339589,-8.850988,8.950482,0.696023,7.559457,6.535607,7.404926,-9.043274,-5.820487,-4.824613,-9.721118,0.260638,-3.368083,-2.001536,-3.187104,-1.685841,-9.695899,-9.866422,-6.709790,-7.440407,-5.163261,1.727642,2.472465,-4.534375,3.897056,8.299063,-4.859448,8.715619,-3.920297,-1.275711,4.584904,6.400401,5.464069,3.644233,-4.759290,8.237069,-9.747261,-4.860423,-9.695271,8.817205,0.988096,4.254744,2.311939,2.198235,-1.524809,-4.447202,-2.172146,1.223638,-3.709295,3.154797,-7.611726,5.190895,6.174938,-8.732315,-6.117435,4.190743,-1.686943,1.319921,5.050636,3.313429,-1.985660,9.437360,-3.044518,-2.423676,-1.263120,4.845450,-6.910083,4.832624,-1.925417,4.413021,2.843428,-4.327569,1.168848,9.347044,-7.489637,3.688357,-7.763139,-0.047520,2.944253,5.183853,-6.175354,8.420028,1.920876,4.446856,-2.129236,9.960530,5.138233,-4.877169,3.715136,-9.814519,-2.446927,9.334585,-8.687975,4.607130,-2.027291,7.519348,6.164978,-9.459221,6.757031,-6.175473,-2.184678,9.408271,-8.310802,5.965107,4.150498,0.762880,3.138035,5.013708,-8.529868,3.361408,3.591402,-8.095923,0.966463,-9.635623,-3.108261,0.392412,-5.935960,-5.550137,-1.059043,-1.454642,9.493154,7.511021,-2.911998,8.474265,-4.189852,-8.959698,5.783413,-8.061972,4.855542,-5.112259,-9.462454,-9.384293,-2.559297,4.131432,-7.620118,9.849869,6.146355,-9.741370,0.920727,3.411185,7.964503,4.902334,-6.451074,0.911560,-2.674723,6.306189,1.883957,6.406399,-2.193858,-6.858076,0.177629,4.245446,3.280898,-5.393179,6.871988,-2.759134,9.885948,3.718334,8.434686,3.062578,-5.889339,-8.617958,8.564385,-9.115031,-1.591564,-4.311251,-5.234862,4.248544,-1.948389,-9.995785,2.920843,-5.266975,-3.332340,-6.331362,-0.667821,-1.930839,-0.446458,2.763591,-8.692723,0.006474,-1.063178,-2.087104,5.721576,-1.857320,-1.286724,5.247483,0.523448,-4.624188,-1.166159,-0.552731,2.031227,8.442523,6.337486,4.073962,-3.842267,3.997760,-3.053142,3.833783,0.047758,7.211093,-0.240266,8.882396,-5.191917,-1.507259,-8.783030,-2.446723,9.353391,0.841495,-3.064043,-9.188501,4.724241,2.251237,-7.027184,-7.128085,3.670079,7.323153,-6.926395,8.679088,-9.330812,5.708095,-3.246550,-4.119231,-0.127580,8.448572,-1.887633,1.416615,3.958824,-8.242659,-4.114635,9.879696,-2.178982,6.673011,0.968154,-1.216175,-3.674389,-2.804166,4.990857,-7.279939,-3.636111,-5.910318,-3.756520,-3.687922,-8.459557,9.412553,0.991440,-7.354624,7.885675,3.635927,6.540564,-2.498688,6.468944,-4.421814,-4.145018,-2.925333,-8.822447,7.072641,8.690865,-5.239724,-5.738243,-1.267099,-7.612268,-2.205585,-2.230989,-6.000071,0.434478,-9.339769,6.850077,8.822105,5.132297,-2.907434,-0.027721,-0.595420,-3.464600,6.517596,-3.160119,-4.530604,2.021411,-1.248328,-4.416171,9.215995,-4.609761,3.805274,-6.372400,3.387268,-4.721199,-6.069586,6.513704,-4.950818,6.725626,2.021392,8.177949,6.810490,-7.798474,0.104136,-9.294036,-3.930737,-2.718339,6.195617,-3.749436,-1.323136,-3.081829,5.568275,-2.183290,5.191489,0.635007,1.132576,3.641018,5.423901,8.851041,-7.468297,2.615365,-8.361088,-1.311223,9.017374,-7.992706,-3.293127,-9.078190,-9.434288,1.470132,-2.886913,-5.711042,-4.383221,-3.211088,9.335242,-5.404257,-6.128755,-4.645223,8.634139,-9.554122,8.548140,-4.005133,6.204894,5.934321,6.800593,-4.453350,-9.528037,-8.852289,-4.842335,-1.282906,-8.586531,1.180037,5.989157,2.383723,4.807427,0.618513,-3.478184,-5.839090,-2.390275,7.570668,-4.976693,5.443815,8.355228,1.115390,6.474655,1.659193,-7.737415,-1.661102,3.450004,-1.748503,3.049107,1.320403,-4.119906,5.110985,-4.332678,-8.513260,-5.110753,2.852324,2.596096,5.289551,-8.640492,-4.205243,-4.638246,-6.422450,-6.724452,-8.702902,-1.476400,1.340354,9.009173,3.174487,-1.904522,-7.062529,-2.059043,-2.191069,4.886874,-9.288590,-5.697019,-4.169704,9.658252,-1.271967,-7.804831,8.037452,9.914763,7.792259,6.167636,-3.932876,-0.867398,5.868948,-6.017431,3.786977,1.809574,7.326851,-3.903181,-4.651483,1.228960,-0.943999,7.182911,-9.333011,-7.037855,9.621432,7.370078,5.477568,2.505453,-5.938278,-4.523799,8.149921,6.848108,-8.189733,-2.543029,2.191341,6.706294,8.853104,8.968134,8.241491,4.120662,7.019324,-8.466106,3.975173,5.326204,5.074722,9.298868,-6.790552,-1.129909,-5.577593,2.571890,-8.544476,6.170443], dtype = "float64")#candidate|3353|(780,)|const|float64
call_3352 = relay.TupleGetItem(func_3163_call(relay.reshape(const_3353.astype('float64'), [15, 13, 4])), 2)
call_3354 = relay.TupleGetItem(func_3166_call(relay.reshape(const_3353.astype('float64'), [15, 13, 4])), 2)
output = relay.Tuple([call_3304,var_3305,const_3306,bop_3309,call_3322,bop_3344,uop_3349,call_3352,const_3353,])
output2 = relay.Tuple([call_3307,var_3305,const_3306,bop_3309,call_3324,bop_3344,uop_3349,call_3354,const_3353,])
func_3363 = relay.Function([var_3275,var_3290,var_3305,], output)
mod['func_3363'] = func_3363
mod = relay.transform.InferType()(mod)
mutated_mod['func_3363'] = func_3363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3363_call = mutated_mod.get_global_var('func_3363')
var_3365 = relay.var("var_3365", dtype = "int16", shape = ())#candidate|3365|()|var|int16
var_3366 = relay.var("var_3366", dtype = "float32", shape = (7, 16, 14))#candidate|3366|(7, 16, 14)|var|float32
var_3367 = relay.var("var_3367", dtype = "uint32", shape = (108, 2))#candidate|3367|(108, 2)|var|uint32
call_3364 = func_3363_call(var_3365,var_3366,var_3367,)
output = call_3364
func_3368 = relay.Function([var_3365,var_3366,var_3367,], output)
mutated_mod['func_3368'] = func_3368
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3490 = relay.const([[[4.933533,-5.817637,6.787610,9.154501,6.599547,0.290428,1.741708,-8.096581],[-8.235271,3.083875,-1.786047,-7.384064,3.456868,-0.071989,-2.370504,9.876769],[0.272100,-1.641691,0.055682,-1.240999,3.289988,0.467501,1.414172,0.727799],[-0.887331,2.476088,-0.835226,-2.137993,2.004762,8.571322,-8.597446,7.012745],[-9.522099,-2.963287,4.685905,-1.973686,-0.309364,-1.435839,5.728455,8.087369],[-6.447576,-3.495762,-1.804922,-0.038116,-8.786047,2.103719,-7.697082,-0.602788],[3.034262,-4.173259,-8.097273,9.692700,-9.742054,-7.251077,9.986831,-0.187987],[-0.038834,-9.011106,4.113204,-4.474740,-7.135307,-8.524537,-2.654125,5.862778],[2.053093,3.084067,0.449135,-9.939101,-1.549536,5.890219,1.403422,8.242944],[3.494452,-9.620272,-7.390313,-3.361613,3.279183,3.035204,4.136771,4.658702],[-0.562952,-1.540750,0.726612,-1.116199,9.618402,3.502895,5.575363,6.437162],[-4.595567,8.308744,-7.149772,4.572746,-0.501199,-5.315445,7.541623,-7.614427],[-2.835065,1.309955,8.519717,6.033920,-6.556593,8.988790,7.682008,-5.126332],[9.249651,-9.741106,2.192105,4.842464,-2.133111,3.435483,7.185743,9.189221]],[[3.009038,9.041436,-9.541055,3.303212,3.797109,-7.674071,2.111974,-7.987673],[-9.229192,6.250423,-0.616840,2.016186,-8.556349,-5.901312,-5.818763,4.566388],[4.307672,6.248957,5.383918,-5.015861,3.210955,6.366119,1.125565,7.396113],[-0.743009,7.532469,2.735268,7.187954,3.993464,1.266942,8.588880,8.686085],[9.089106,5.766731,-6.213832,9.411278,-6.004319,-5.226011,-3.594892,-2.775123],[-8.795901,8.619891,-8.994128,2.255830,5.378911,-8.911088,0.776645,3.145260],[-9.140057,5.229054,-0.472176,-1.365597,6.536708,-7.653491,4.020604,-7.894823],[-7.728171,3.409887,-7.529308,-3.105715,-0.996419,6.141558,8.336059,-6.001567],[9.050648,-1.077476,2.463455,-5.874815,3.026525,-3.323777,1.285320,7.779103],[1.193750,2.058177,4.678742,1.290510,-5.575479,-5.619060,1.789931,5.003209],[-1.748336,-3.292097,-9.260298,0.479170,5.078005,-0.381314,-9.397917,-5.776672],[1.233135,-2.794692,2.991906,-0.936822,-7.907862,4.842388,5.488128,-6.396164],[-4.000063,0.508728,2.666066,5.730829,2.789303,-2.317394,8.870314,6.823094],[-6.246150,6.577319,8.608922,2.133052,-7.431504,0.219564,3.787298,-5.688970]],[[-5.047556,-7.807178,-5.227376,-5.787039,-0.459986,2.594187,3.762815,-0.070228],[-8.635902,8.552755,0.736202,6.486774,-3.669163,5.334775,-6.355752,4.908390],[-7.113485,2.754270,4.349895,-3.052185,-1.208330,4.853674,-1.112294,6.629206],[-8.761377,-6.916694,5.110483,2.451800,-4.084551,9.783631,-3.290501,3.354075],[-9.779062,1.861016,-9.177660,7.802185,-8.653367,-9.736008,-9.790713,7.957370],[-2.733794,-2.879409,-0.428587,9.188924,4.798994,5.472896,-3.463130,-0.463404],[2.974911,-7.113564,1.486096,-1.583345,5.534286,-0.021567,-6.676253,-8.594631],[8.912555,-7.396824,-1.975468,-4.290565,-8.035255,-2.519857,-3.522496,-1.597264],[-7.985423,1.986943,-4.762967,2.578462,-8.066904,-5.053814,-2.313639,8.285070],[9.026461,1.645369,-7.236530,3.739777,8.843247,9.728947,-7.393096,-1.377062],[-1.032328,-5.341249,6.993203,-7.985850,8.618941,9.107032,8.550404,0.022519],[-3.227787,7.347903,-0.121694,-7.648355,-1.572475,8.229845,2.498006,7.413188],[1.258730,-7.449525,-9.835661,-9.409108,3.102855,3.566843,1.066417,-4.029339],[6.597819,-4.362441,-5.093903,2.014412,-4.412639,-2.596540,-6.267300,3.278404]],[[3.970348,1.989227,2.023520,-3.007213,6.462389,4.391396,-4.520342,-9.087555],[8.576511,-9.899081,0.593872,-1.721350,-7.872520,3.005982,4.786375,1.926805],[7.563381,-7.761374,-1.006501,6.531375,-2.388164,-1.787499,-9.575086,-2.836656],[3.638407,-3.568562,-9.545465,-5.312139,0.841354,-6.339422,1.931326,2.710622],[-1.162347,5.079998,-1.877276,-0.714393,3.137649,-8.345591,1.918336,-0.782987],[2.922451,-9.090975,1.959830,-1.799125,-2.555133,8.029984,-3.220145,-3.713588],[-3.590409,-2.266310,3.104957,0.980096,6.632985,-1.316986,-8.855240,-7.620504],[4.087349,-9.936602,5.318927,7.537608,5.685366,5.326666,-3.325853,-5.222339],[6.355505,0.436609,0.838915,-7.705312,-2.541781,6.653776,2.248029,-0.633386],[-4.905041,9.017746,-3.724106,-7.155616,-3.655536,4.533785,7.519100,5.687319],[-1.987462,8.493745,-6.815170,1.997127,1.523939,4.176142,-5.023356,1.540378],[-4.853685,-1.672399,-4.559573,-5.379821,1.234560,3.426830,0.382961,8.953341],[1.444908,9.055315,-1.982512,1.482226,-3.202743,-0.926735,-7.419755,7.822523],[4.287390,6.163465,-5.360680,-4.689505,-6.154982,1.081741,-8.511560,3.628291]],[[5.456266,6.868945,3.643631,4.416552,-7.860642,-4.669090,-0.179782,5.595200],[-3.604012,9.130172,2.351818,-8.993134,2.144747,1.073342,-9.794118,8.379468],[-4.793948,-3.716617,6.396317,9.917627,5.499570,0.227617,6.902333,0.754000],[1.651856,0.113860,-4.572743,-0.121196,4.438893,-5.965024,4.682835,7.194420],[-6.370569,0.745102,-3.306851,1.707366,2.458613,1.063893,-1.042430,-7.123524],[7.577028,-6.335009,2.985072,1.790793,-4.312952,-2.118501,7.406034,5.149708],[5.547701,-8.242617,9.492978,-9.447068,-4.409100,-3.437996,-8.844511,-5.125377],[-4.591354,-6.039102,-4.240285,-9.742508,7.464175,-9.223899,-0.733021,-7.813528],[-0.351222,2.089864,5.795053,-4.397621,1.026615,-1.279287,9.333260,6.610364],[6.146657,1.545616,5.741677,-7.710189,2.724369,-6.283960,2.443387,6.056410],[0.329369,9.035681,-9.476436,-8.288346,-8.267391,-0.095709,0.881328,5.665144],[6.087695,-1.511541,-2.921909,6.957117,1.589552,-1.405968,-7.984516,2.014035],[-4.200483,-2.248038,-9.511558,0.845330,6.826654,1.127608,7.517331,4.120439],[8.045125,-7.056189,9.888495,9.815164,5.736256,9.390976,-8.560618,2.495271]],[[2.067638,3.304167,-7.901769,2.882234,-4.357237,-8.484025,6.048952,-6.355882],[-2.583210,7.206544,-1.902799,-5.671504,-6.916842,-8.685580,-4.245791,3.121787],[9.274129,-1.893044,5.830694,-9.017779,-9.390460,-2.757691,-7.258149,-0.181904],[0.821711,-4.808251,5.570355,6.873880,-6.640812,-6.172484,0.170277,2.121674],[-4.491668,-5.840271,9.305050,-2.790744,6.273395,4.815305,2.691072,-6.306083],[2.851656,5.666021,-8.826917,-6.641040,-9.071620,3.135163,5.873727,-1.545380],[-6.664095,4.561112,0.437755,1.978057,-8.258968,4.569981,6.423852,-3.099238],[-3.760565,0.790751,-3.243067,-0.596789,-8.929760,-1.315768,-9.667597,8.929966],[9.388037,-3.443191,-7.613751,-8.006017,-3.006552,4.153148,4.815554,1.466097],[0.981931,-6.519610,-5.412164,-4.801634,0.644629,-6.946128,2.537205,-6.264712],[5.385734,-7.253709,2.234001,-4.172380,-2.270949,0.177771,-0.814099,6.900041],[5.413132,0.378399,-7.450531,-2.219342,8.499054,5.121547,-6.200292,0.706888],[-4.876419,-2.438843,-1.068496,-2.297528,-9.432353,4.362124,-0.916997,-4.944318],[-8.882135,8.168667,5.161037,-6.518676,1.402375,0.174302,-0.915529,2.229807]],[[-2.456408,-8.063447,-9.658450,9.829262,-3.703373,9.504005,-4.466016,-6.806218],[-4.876974,0.306482,1.556155,-1.189621,-4.348047,-6.018566,-0.594343,1.002899],[6.564840,-4.913812,-7.916144,-7.428330,-5.398960,4.119719,1.252740,8.877067],[-1.975658,3.626666,8.690480,-4.670353,-2.011753,-6.126004,-7.685190,6.557774],[7.537850,6.264854,-1.352250,-6.897122,-9.638476,2.358498,9.155761,1.931009],[1.169140,2.447629,-7.518672,-4.247701,-3.826301,7.071699,3.787491,0.122188],[-3.415417,-2.633611,-4.280517,4.686516,8.677768,3.334062,-4.906249,-7.256884],[9.434954,-9.612504,6.801672,-8.562191,0.732444,-9.049165,2.432151,1.586553],[-1.621010,-7.001849,-9.377136,0.512162,-2.328970,-4.016816,0.723782,-6.991499],[-8.395676,-5.760887,-8.903616,5.814595,6.227619,-3.026350,2.454214,-4.570050],[3.492267,6.050807,9.873145,9.271704,0.765026,-1.055789,-4.703722,1.581497],[5.508133,-2.947446,7.334248,5.086692,8.295846,0.553113,0.935839,6.739298],[-2.627668,-8.311994,7.061940,3.430083,3.042497,-3.777419,-0.854754,-5.983707],[5.466659,1.480475,-4.349984,4.222451,-2.747830,1.390609,0.473229,2.493880]],[[1.655409,0.350431,4.714855,2.128092,-5.699290,1.231130,5.516153,-0.401137],[-6.526966,4.257003,-0.807636,7.912434,2.017380,-5.580034,1.508473,-8.597839],[4.485811,3.784665,-6.942346,4.186475,-5.687136,-8.824543,-0.399062,9.659328],[-2.903616,5.267157,5.376763,-9.201122,7.773672,1.784834,-4.846651,7.197661],[5.126026,-1.860014,9.101503,-3.836331,-1.285728,-7.255239,3.093047,-2.469515],[-4.719103,-5.792005,-1.768347,4.777923,4.537233,-5.036908,-8.433768,1.557722],[-5.587497,-7.705875,0.333198,-8.853539,9.248093,-5.131275,-9.199454,-7.265561],[3.332085,-1.847572,9.951277,4.829779,1.021927,-1.979842,-6.537540,3.835828],[-9.775731,-2.203644,4.510947,3.332028,8.665110,1.484050,-7.585944,2.029339],[4.588875,3.991516,0.951530,3.002474,-7.262731,-2.054381,-7.127903,-5.718156],[0.605200,-6.482822,3.105397,3.358250,-0.930719,-5.741207,9.166996,-7.582756],[0.720437,2.051049,-5.548274,6.706312,4.268766,9.699534,-8.192395,-9.322047],[3.051354,-9.733463,-7.528685,7.632768,-5.142620,-2.318511,8.226920,-5.880319],[-2.095097,8.386786,7.300916,-4.064413,2.518535,-0.774382,3.467191,9.353919]],[[1.523482,9.119663,-4.464928,-4.204925,-8.699576,-0.209024,4.660010,-5.174371],[-7.081049,3.430244,3.424216,-2.698023,6.361414,-9.504314,9.292459,9.730248],[8.866848,8.255087,-8.455645,-6.753308,-8.744149,-8.416674,-6.450488,2.616657],[5.396919,-1.884873,-2.207008,4.075448,5.650767,-2.749673,9.791917,7.479034],[-8.015836,-3.633310,3.409261,7.475392,1.630589,9.621227,5.017714,1.697052],[1.655237,8.211219,-2.232133,-0.095665,-3.403053,0.582636,-0.646778,-4.231124],[4.524760,3.104179,8.026352,-4.639253,3.866417,-5.423047,-5.252345,6.028540],[7.808523,-7.978018,9.812233,4.885885,8.053095,7.693832,-4.976542,2.324162],[7.833167,-6.312398,8.262533,6.986598,-5.811082,7.907243,1.141150,5.983793],[0.135649,7.407349,-2.446789,-5.468166,7.681476,8.257987,5.403724,2.098455],[-9.309060,-6.379800,-9.961945,-4.156985,5.390460,7.919508,-0.627343,-0.251834],[-9.661312,-9.269358,-4.126926,0.841838,-0.108068,7.480432,1.944980,-5.553871],[-1.702239,8.455559,9.681648,-4.514810,-3.399986,7.426370,-6.937858,-5.918981],[5.130875,8.025570,-4.514214,3.567236,1.425239,-8.200943,1.190434,-4.657785]],[[1.904124,-2.780124,8.902030,-0.016833,5.750469,-8.471742,5.599223,-9.687946],[8.207040,-3.935510,-8.165546,6.662426,6.885223,-6.978557,-1.362992,-2.474585],[2.527513,-0.853386,7.010115,-6.851103,0.941609,-6.718856,2.965566,9.289825],[-1.977398,-3.302834,-9.039000,5.158856,-1.489247,-6.310077,-6.748178,-2.278984],[-2.525011,4.627619,2.466030,-8.606980,-2.168478,0.098822,0.080524,3.986439],[2.238121,7.112033,1.223837,1.881681,-1.932092,-6.426270,-2.984474,-6.567880],[-1.034894,3.939455,4.149812,-0.820340,-5.665635,-9.263005,-0.817223,-8.376125],[5.405577,6.027105,-9.286965,-2.583579,0.604203,7.365740,-5.703370,-9.730474],[2.693268,-3.178393,0.666439,3.115943,2.738133,8.674354,3.156500,5.934125],[8.009848,8.640111,4.227338,0.773774,-3.160734,-7.962367,-7.581907,2.105421],[-0.525184,7.412984,-7.504068,-0.499487,-8.233967,-8.445261,3.655149,-9.681290],[-2.147875,-3.662727,-2.906427,-4.462799,-1.998182,6.215881,9.167082,2.426008],[-7.990438,1.199400,5.813096,-7.649732,-7.890732,3.002763,-9.762134,-1.642156],[7.830396,-1.687059,-1.261964,-9.841955,-0.447368,-0.077194,0.310491,7.154119]],[[-4.874951,-4.806168,-8.816961,3.806259,3.017506,-0.527284,-9.567136,0.183901],[0.082675,4.422902,-7.902180,7.219833,8.288422,8.307598,0.025618,3.783135],[5.615022,1.463690,-0.242559,-9.173374,7.282299,-2.207653,-3.805601,4.003143],[4.485206,8.062623,-4.650379,-6.168013,-2.714773,-8.054850,1.705131,2.243148],[-9.361747,-7.863100,2.041916,-7.181316,-1.975426,5.275732,-3.871766,-1.239597],[0.471909,-9.100333,-1.462355,-8.506977,-7.711405,-5.490385,-2.408009,-1.254725],[-2.245647,7.884825,-6.024387,-4.848925,-1.336735,7.415729,-8.244772,4.752697],[3.006614,-8.675661,-0.562118,9.178444,5.035315,-0.452358,0.398939,-2.422082],[-2.758878,-6.992221,-1.217227,9.566704,-1.287213,9.478244,-9.677760,-5.921960],[-9.713353,-0.084609,2.426089,8.316873,8.818748,-1.072257,9.237147,8.973168],[1.312876,-4.794606,-7.742805,-8.753228,-7.482274,-9.122749,-1.328127,-4.904612],[8.210078,-1.820029,-6.930926,1.656452,0.919084,3.092275,5.669804,-2.838741],[-2.305334,-6.213526,-5.601336,4.698775,-1.803124,-1.513415,-6.177424,-7.078891],[7.944837,0.070610,-6.803249,3.546409,-1.097839,-9.827265,5.527508,-4.704335]],[[7.163668,3.875553,-6.028663,-5.631908,-3.204185,5.266057,-6.409969,-4.060943],[-7.028285,3.758036,-5.645883,8.416918,9.381323,-8.597696,-1.546068,-7.056137],[8.018911,-1.141956,-6.578378,5.738108,9.180049,-6.969065,-2.145154,1.979161],[-0.284512,3.066671,7.617973,9.125528,0.239252,-6.023398,1.827196,4.558212],[-2.292323,-6.527537,8.462146,1.180708,-3.093724,-8.569881,-0.052648,-6.278807],[-4.464106,1.277233,-6.894576,6.852819,5.991400,2.344610,-7.435996,7.745882],[-9.223946,-5.603586,5.540448,-6.721749,5.366664,-7.100752,-0.482451,-7.724358],[4.496913,0.864347,-0.481180,3.520347,-7.321979,-0.314550,2.246124,1.559408],[0.280214,1.154589,6.638665,1.959935,-5.314067,-7.265481,-8.396110,-4.480939],[-6.718585,3.870215,-7.174787,-0.833800,7.005407,1.228778,5.030729,0.691416],[-3.214341,7.158312,-8.514225,-0.555595,2.964875,-1.250048,9.411565,6.794934],[-8.925599,1.099183,5.527344,9.702391,-0.419288,1.142101,1.099505,0.482588],[-7.541720,6.029491,0.011087,3.316710,-1.931169,-0.623073,-6.416429,4.591967],[-9.895834,3.459858,0.208580,-6.890919,-1.808382,1.358604,-7.701848,1.521600]],[[1.725391,-2.838140,8.906845,5.084118,3.740046,8.092438,3.363496,-9.234651],[1.736767,0.404420,-8.271984,6.375624,-3.621110,-6.290146,2.127499,7.637396],[-7.916835,8.696793,7.148387,1.863043,-3.938203,4.150015,5.133754,6.258027],[5.889840,9.999905,-7.986340,-1.687894,7.498831,-9.714025,1.118531,-1.289312],[5.555279,1.473338,-8.248749,0.980659,4.214200,1.217576,-1.142106,-9.887342],[4.068023,6.047541,-1.413239,-5.053380,-2.081157,-1.473171,-0.342586,1.930285],[-0.345099,2.525002,3.632140,0.626156,9.507344,5.527789,4.921558,0.531019],[-0.244404,-8.655682,2.113306,-5.761938,3.080207,0.272794,3.332729,1.254032],[6.376045,4.637182,4.352489,9.317305,2.648578,-4.725820,-0.691212,1.447457],[-6.882160,1.521382,3.213420,8.878676,-0.469392,-5.758096,9.463491,8.006778],[-0.746068,0.562115,4.404210,-6.994554,-3.340811,4.289808,2.265622,0.622213],[3.986493,1.819597,-0.782519,9.724179,3.683862,2.813105,-7.360963,3.762310],[3.584548,-6.931468,6.727364,9.376502,-8.516186,6.786741,8.957946,9.824561],[1.818901,5.348747,-8.485013,6.379564,0.233443,-9.011352,9.955113,-2.122322]],[[4.385797,-8.342526,-0.312409,-0.199795,-4.356748,-7.177952,-3.205067,-2.153041],[-4.788156,8.504433,8.570174,-9.110463,0.266775,-2.097095,-2.164578,7.994558],[1.859388,-2.633118,5.564756,-8.646273,-5.337180,-0.067705,6.620100,0.442035],[-9.675929,-5.596987,4.738461,-5.336109,8.640077,3.173257,-6.074314,3.893485],[-0.684922,9.771964,-4.458796,-7.306012,-7.244091,1.694625,8.544051,2.913550],[-8.064934,6.890738,-8.801678,-0.831637,-9.394731,5.187091,3.779123,8.696821],[-9.281844,0.066726,-0.742140,-2.520592,-8.009332,-3.754933,-4.314188,-5.144610],[5.128600,-1.100135,6.016073,-7.484083,-4.811175,-8.226868,-5.147700,-3.762757],[-9.257930,-2.548917,9.165496,5.133023,-6.077434,0.505935,8.773515,3.917721],[-0.890120,-7.885130,3.523787,6.501483,-7.377988,1.060227,8.779608,-0.929814],[4.659051,0.115349,0.948022,3.385609,-6.801218,-3.615333,-4.954225,6.645819],[1.484087,-3.254714,-3.906789,-2.842990,-7.841304,1.374730,2.342482,5.920814],[-8.799020,3.392536,-1.451689,-5.354660,-1.228313,-6.470106,-0.613897,1.808145],[-0.499806,-7.085661,3.873478,5.285384,-4.063355,-6.985165,-2.110973,7.675590]],[[-7.347826,-7.873757,2.418960,9.429537,7.280371,-4.015614,0.284319,2.616373],[4.499019,-0.085657,0.670946,-3.692161,4.669759,8.773297,9.019048,-1.058936],[-7.746860,-0.253520,1.370744,1.302567,3.159495,3.815190,1.709707,-0.514079],[-1.139514,8.758759,2.627838,-6.050400,-0.384379,-8.812070,-7.960143,2.073380],[-7.517541,-5.917426,-7.480818,-2.461836,1.796891,-6.696879,5.155092,8.363424],[-1.233739,8.341946,2.945967,-3.256675,7.978773,0.490178,3.495454,-9.254415],[-6.636184,-0.627754,-9.524680,-9.141197,-5.933946,-1.806867,-0.956459,1.862384],[9.379365,-3.933633,-6.841487,-3.783804,6.682948,5.530823,3.594262,-5.308588],[-4.892377,-3.250452,-4.739396,-0.309468,7.834291,-3.533683,4.707263,-3.973744],[-3.428726,6.703158,1.211449,-3.306178,9.401508,-4.759400,-4.107237,-4.438992],[9.801527,0.328264,3.622174,-2.653698,2.400624,-4.826093,-2.919200,1.499333],[5.155748,-0.833865,-5.118722,-2.245481,-1.870916,-0.915843,1.853694,-3.126962],[7.929819,-2.056009,4.354642,-7.931422,2.596560,5.055725,7.621079,-6.442098],[1.294762,-2.991122,-2.784672,3.521747,1.593393,4.587050,-9.364069,8.182668]],[[4.564996,5.175939,-7.527112,1.897444,-3.773331,7.936134,1.579197,3.096961],[-0.714094,9.704958,-7.739983,-4.054920,-2.692795,-6.079661,1.190235,0.089900],[-7.641113,4.881643,-9.216868,-9.285551,-5.536574,-0.800870,-0.538642,-4.708702],[6.053526,5.453922,7.880535,4.903208,2.718845,-4.773033,0.159984,8.139119],[-4.379436,-0.818953,-4.577204,-9.294520,2.122758,-6.675945,-0.147985,-1.088114],[-3.756728,7.253086,5.482542,-3.999213,-7.390903,4.547916,-7.685359,0.560031],[-3.134850,8.047763,1.868177,2.158511,-5.253405,-3.147016,-1.855487,0.966497],[-3.493014,-9.698368,9.674742,-3.281222,-1.677959,-3.282903,-5.739932,9.053592],[7.968404,8.789623,-8.301079,0.546343,4.628080,5.736695,6.036187,-7.688978],[9.913728,6.819777,3.300016,0.204938,-4.592375,-9.299600,0.322337,5.759906],[-2.936915,2.662317,4.972814,-0.643358,-1.952311,-6.169097,-8.037242,7.235643],[-8.357556,-8.981091,-6.043328,8.973683,8.020063,-4.906015,4.071826,-5.477164],[-5.710942,5.133577,-0.588851,-1.528953,7.747632,-8.440274,-6.140130,-7.932995],[5.559222,-7.756789,-8.767587,-5.848941,-2.358405,-8.168851,-9.002180,1.675164]]], dtype = "float64")#candidate|3490|(16, 14, 8)|const|float64
uop_3491 = relay.log(const_3490.astype('float64')) # shape=(16, 14, 8)
output = relay.Tuple([uop_3491,])
output2 = relay.Tuple([uop_3491,])
func_3494 = relay.Function([], output)
mod['func_3494'] = func_3494
mod = relay.transform.InferType()(mod)
output = func_3494()
func_3495 = relay.Function([], output)
mutated_mod['func_3495'] = func_3495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_3519 = relay.TupleGetItem(func_3494_call(), 0)
call_3520 = relay.TupleGetItem(func_3495_call(), 0)
uop_3521 = relay.exp(call_3519.astype('float32')) # shape=(16, 14, 8)
uop_3523 = relay.exp(call_3520.astype('float32')) # shape=(16, 14, 8)
output = uop_3521
output2 = uop_3523
func_3525 = relay.Function([], output)
mod['func_3525'] = func_3525
mod = relay.transform.InferType()(mod)
output = func_3525()
func_3526 = relay.Function([], output)
mutated_mod['func_3526'] = func_3526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3531 = relay.var("var_3531", dtype = "float64", shape = (14, 4, 7))#candidate|3531|(14, 4, 7)|var|float64
var_3532 = relay.var("var_3532", dtype = "float64", shape = (14, 4, 7))#candidate|3532|(14, 4, 7)|var|float64
bop_3533 = relay.floor_mod(var_3531.astype('float64'), relay.reshape(var_3532.astype('float64'), relay.shape_of(var_3531))) # shape=(14, 4, 7)
uop_3540 = relay.asin(var_3532.astype('float32')) # shape=(14, 4, 7)
func_1808_call = mod.get_global_var('func_1808')
func_1811_call = mutated_mod.get_global_var('func_1811')
const_3544 = relay.const(-10, dtype = "int32")#candidate|3544|()|const|int32
var_3545 = relay.var("var_3545", dtype = "int32", shape = (2080,))#candidate|3545|(2080,)|var|int32
call_3543 = relay.TupleGetItem(func_1808_call(relay.reshape(const_3544.astype('int32'), []), relay.reshape(var_3545.astype('int32'), [16, 10, 13]), ), 0)
call_3546 = relay.TupleGetItem(func_1811_call(relay.reshape(const_3544.astype('int32'), []), relay.reshape(var_3545.astype('int32'), [16, 10, 13]), ), 0)
func_597_call = mod.get_global_var('func_597')
func_600_call = mutated_mod.get_global_var('func_600')
const_3548 = relay.const([7.973481,5.633828,-9.854553,5.689542,-3.596966,5.498602,3.721397,-1.512693,-5.280118,-0.763040,-0.858856,-3.824571,6.510218,8.159424,1.069045,5.927671,-5.249446,0.927434,0.687751,5.435753,0.394697,4.180533,-9.972439,1.413682,6.356973,-9.404036,-5.249473,-0.599191,-4.592267,-7.870692,-0.085441,-8.989500,-2.116287,1.522793,-5.572945,-0.250445,-7.006885,-0.125973,3.557906,6.770094,-9.748743,-2.884814,-7.105867,-3.940489,2.030415,8.147220,-2.064415,-6.325868,8.797974,-5.776226,-7.763002,7.528694,5.203668,-7.346724,1.208514,5.470893,8.054166,7.383517,-2.898708,3.554437,-8.746669,5.562851,-3.485907,-1.694647,5.893015,-7.295808,0.569691,-0.634876,7.473078,4.975715,-7.705428,-2.639818,4.085538,-9.287783,9.600697,9.438066,-0.903775,-5.799523,-3.747399,-7.366222,-7.843039,5.806964,-1.133620,-5.132199,-0.416061,6.927020,-0.330839,8.104478,4.438433,8.555880,1.544668,-2.820606,3.861745,-1.194628,8.463519,2.192394,3.291212,8.158668,3.672991,-0.719641,-4.652447,-4.508912,3.569032,-9.675577,1.565066,-3.683162,-9.534138,-7.914767,4.469108,8.531767,7.453987,-8.144910,1.971474,5.563042,3.600030,5.426746,3.059643,-3.476566,3.178543,5.224007,-9.862783,9.688729,-8.198586,-5.141381,-0.519305,7.600096,6.008924,8.145071,5.375279,2.425541,-6.609651,-0.330892,-4.855281,-4.348571,9.676923,8.856307,3.471555,-7.778841,-6.593988,-6.526534,-7.070521,0.235301,4.444344,9.050110,8.628234,-6.652130,8.331649,9.997712,8.368047,4.451153,0.041441,3.148982,9.804360,-4.574818,-2.105328,-1.227259,-7.389473,-2.937942,-1.026993,0.971275,-8.266336,2.828021,-7.592807,-4.149583,6.283394,9.327921,-0.369151,3.205770,-7.252175,9.451316,-3.928193,-6.548200,0.423811,6.890789,-8.621762,2.578547,-7.718688,-9.146616,7.573798,-7.753510,-9.234456,8.140200,-1.355843,-2.951704,6.057791,-5.084663,7.459676,-8.620305,8.296377,8.463471,-7.557441,4.746060,2.188666,-4.055245,-7.145798,0.732600,-5.169908,8.914538,-8.465114,7.341430,6.324351,8.956153,-3.041635,-7.282125,6.633794,0.469336,-4.090105,-4.288439,-5.244045,0.029290,-9.084205,8.723036,8.549285,9.960117,-3.414260,2.439140,-2.436771,6.619872,0.595749,7.329984,4.873930,-2.567075,9.368493,5.762894,3.674467,-7.967381,-5.200169,-4.028327,-0.937909,5.282639,1.888132,-7.782915,1.560949,-8.079179,9.106403,-5.793297,1.071859,7.808408,9.690658,-7.405269,4.976766,-4.754607,1.848256,6.601954,1.158411,-9.290994,-8.861072,-7.440277,-2.067725,-3.793364,-2.113845,-7.592577,3.718540,-4.228763,5.807543,-5.814958,4.965344,-2.142918,4.842633,-0.981216,-0.899775,1.237754,-5.038697,-6.888361,7.449248,-8.508744,2.566338,1.017865,-8.687809,-9.912362,-5.589153,-8.038578,7.866109,-8.571881,6.511690,2.090894,-9.764243,-4.277176,4.938863,7.346006,0.950354,-0.357161,6.474395,4.565401,-4.921094,2.052772,-5.418184,-2.426297], dtype = "float64")#candidate|3548|(288,)|const|float64
call_3547 = relay.TupleGetItem(func_597_call(relay.reshape(const_3548.astype('float64'), [9, 8, 4]), relay.reshape(const_3548.astype('float64'), [9, 8, 4]), ), 0)
call_3549 = relay.TupleGetItem(func_600_call(relay.reshape(const_3548.astype('float64'), [9, 8, 4]), relay.reshape(const_3548.astype('float64'), [9, 8, 4]), ), 0)
func_2244_call = mod.get_global_var('func_2244')
func_2248_call = mutated_mod.get_global_var('func_2248')
var_3552 = relay.var("var_3552", dtype = "int32", shape = (882,))#candidate|3552|(882,)|var|int32
var_3553 = relay.var("var_3553", dtype = "float64", shape = (1800,))#candidate|3553|(1800,)|var|float64
call_3551 = relay.TupleGetItem(func_2244_call(relay.reshape(var_3552.astype('int32'), [7, 14, 9]), relay.reshape(var_3552.astype('int32'), [7, 14, 9]), relay.reshape(var_3553.astype('float64'), [1800,]), ), 2)
call_3554 = relay.TupleGetItem(func_2248_call(relay.reshape(var_3552.astype('int32'), [7, 14, 9]), relay.reshape(var_3552.astype('int32'), [7, 14, 9]), relay.reshape(var_3553.astype('float64'), [1800,]), ), 2)
uop_3566 = relay.acos(uop_3540.astype('float64')) # shape=(14, 4, 7)
bop_3576 = relay.multiply(uop_3566.astype('uint64'), const_3544.astype('uint64')) # shape=(14, 4, 7)
output = relay.Tuple([bop_3533,call_3543,var_3545,call_3547,const_3548,call_3551,var_3552,var_3553,bop_3576,])
output2 = relay.Tuple([bop_3533,call_3546,var_3545,call_3549,const_3548,call_3554,var_3552,var_3553,bop_3576,])
func_3588 = relay.Function([var_3531,var_3532,var_3545,var_3552,var_3553,], output)
mod['func_3588'] = func_3588
mod = relay.transform.InferType()(mod)
mutated_mod['func_3588'] = func_3588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mutated_mod.get_global_var('func_3588')
var_3590 = relay.var("var_3590", dtype = "float64", shape = (14, 4, 7))#candidate|3590|(14, 4, 7)|var|float64
var_3591 = relay.var("var_3591", dtype = "float64", shape = (14, 4, 7))#candidate|3591|(14, 4, 7)|var|float64
var_3592 = relay.var("var_3592", dtype = "int32", shape = (2080,))#candidate|3592|(2080,)|var|int32
var_3593 = relay.var("var_3593", dtype = "int32", shape = (882,))#candidate|3593|(882,)|var|int32
var_3594 = relay.var("var_3594", dtype = "float64", shape = (1800,))#candidate|3594|(1800,)|var|float64
call_3589 = func_3588_call(var_3590,var_3591,var_3592,var_3593,var_3594,)
output = call_3589
func_3595 = relay.Function([var_3590,var_3591,var_3592,var_3593,var_3594,], output)
mutated_mod['func_3595'] = func_3595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_3640 = func_3525_call()
call_3641 = func_3525_call()
func_3588_call = mod.get_global_var('func_3588')
func_3595_call = mutated_mod.get_global_var('func_3595')
var_3677 = relay.var("var_3677", dtype = "float64", shape = (14, 28))#candidate|3677|(14, 28)|var|float64
var_3678 = relay.var("var_3678", dtype = "int32", shape = (104, 20))#candidate|3678|(104, 20)|var|int32
const_3679 = relay.const([7,1,2,4,-8,7,5,-2,9,5,4,2,4,10,-10,-3,3,-6,9,-6,-2,-1,-2,9,-7,-9,6,2,-7,-3,5,3,1,4,1,7,5,-10,2,-8,6,3,3,2,-10,-9,5,5,-3,-6,-1,10,10,2,-9,-3,10,-7,-1,-2,-5,8,-5,8,3,4,8,9,4,-1,2,8,-2,-4,5,6,1,2,8,-3,5,-7,3,-2,-7,-10,9,-2,2,-3,-6,-6,4,10,-7,5,4,6,7,-4,1,3,1,-8,-3,-9,2,5,-3,-8,-2,4,-4,-3,6,-5,-3,-6,6,-9,-7,-8,-4,-4,10,9,6,5,-4,1,8,-9,-4,7,-3,9,-5,-8,1,-3,-8,10,6,2,-6,1,8,-6,7,2,-10,-9,-1,-3,10,3,10,10,1,-5,-6,2,8,-6,-5,-2,-1,-9,7,5,10,5,-3,6,-10,4,9,10,6,-10,-6,6,-3,-2,-9,-8,-6,6,2,7,5,10,7,-1,7,4,6,-1,-8,-9,-9,-5,2,6,5,7,-5,4,-6,5,-8,7,2,1,2,-7,7,-7,3,-4,-9,10,8,5,1,-5,2,1,1,-4,-3,3,-2,2,6,-6,9,-10,-10,-8,5,-9,7,-1,-5,-3,-5,-10,-9,-4,8,-1,-8,3,5,10,-7,9,1,6,6,-4,-6,-9,7,-9,7,-4,-10,-4,8,-5,3,3,-5,-1,6,1,10,-6,-5,-5,-4,7,6,9,5,3,9,3,-2,-4,-10,10,-4,10,-1,4,-4,1,4,5,7,1,-3,9,-9,-8,7,10,6,5,-4,5,1,7,-10,-9,2,3,4,-3,-7,3,-8,-5,4,-4,-10,6,6,9,6,3,9,5,1,8,10,-10,-8,-5,-7,-1,-7,-8,-10,9,8,8,-9,1,-1,-8,2,-1,6,-3,2,-10,10,-2,-9,-10,6,-4,-1,6,4,2,1,6,-9,10,2,-2,10,-7,-6,3,5,8,-2,7,-6,4,4,5,-9,-7,-5,-5,3,-3,9,3,-3,9,5,3,-6,-9,9,4,-10,-10,9,9,7,5,8,-9,10,6,3,7,6,-2,1,-2,-8,-8,-8,-1,9,-3,5,-7,2,-2,-5,-6,6,-6,3,-10,2,8,-6,-9,6,-3,-5,-7,6,-2,10,-3,-6,-5,-9,-10,4,-3,8,7,-3,4,-1,-3,-2,-9,4,1,1,9,-3,-10,-6,9,-4,-7,-7,5,3,6,-6,10,-4,-8,-6,-4,-5,-8,-9,4,-3,2,-1,7,-8,9,-7,2,9,8,-8,-6,7,3,-3,1,5,8,-2,-9,-10,-4,9,-8,-5,-8,9,5,10,-3,-4,-8,10,4,3,-4,-4,-9,2,5,-6,-2,7,-2,-5,9,-1,-8,-5,7,-8,2,-9,6,2,1,-4,-2,10,9,1,5,-5,5,5,-9,-2,4,-3,3,4,3,8,-1,1,4,-6,-8,-1,-10,-4,9,9,7,6,7,-5,7,8,-10,8,3,-2,-4,3,-9,-2,-4,2,4,3,-7,2,2,2,8,-7,-5,-3,3,-4,4,-1,-8,2,-10,-3,-5,-10,4,-10,-3,5,-7,-6,4,-1,5,-7,-4,5,5,-2,3,-7,6,-9,-4,5,-5,-2,-1,7,6,1,2,5,-3,8,-8,3,2,-3,8,-10,8,-10,-4,7,1,-9,3,2,10,2,-5,-2,-6,-7,-2,5,-6,1,2,-7,7,5,9,-7,-7,7,-5,3,3,-6,-5,-6,-6,1,8,-2,-4,-6,6,10,-4,7,5,1,-10,-4,7,-7,9,-2,6,10,1,-10,1,10,8,-7,9,-2,4,-5,-8,-6,8,1,-4,-3,9,1,5,7,1,10,-1,-1,10,8,8,-2,3,-2,6,-1,-1,7,6,-1,8,-8,-6,6,5,-4,9,1,1,1,9,2,-8,5,-3,-10,-10,9,-7,3,-10,-7,5,5,1,1,1,1,-2,-3,7,-5,-4,-2,-1,5,2,-2,-9,-10,4,4,9,-5,4,-8,-3,-7,-9,-10,-3,-2,6,-1,3,-9,7,4,-9,-6,9,3,7,9,-8,-4,3,-8,-4,-5,-2,-7,8,-2,-2,-9,4,-3,9,-5,-2,-7,-9,-5,4,9,6,5,-7,2,-7,2,-10,-2,-8,7,-8,-6,-1,-9,5,-3,3,-7,-4,2,10,3,-9,-1,2,9,-4,6,-8,-2,-2,-5,10,-9,-3,-6,-5,2,-5,-2,-1,-6,6,2,-6,6,-7,7,3,4,7,8,10,-7,-3,4,10,2,-4,9,-9,2,-5,5,-2,-5,-10], dtype = "int32")#candidate|3679|(882,)|const|int32
var_3680 = relay.var("var_3680", dtype = "float64", shape = (1800,))#candidate|3680|(1800,)|var|float64
call_3676 = relay.TupleGetItem(func_3588_call(relay.reshape(var_3677.astype('float64'), [14, 4, 7]), relay.reshape(var_3677.astype('float64'), [14, 4, 7]), relay.reshape(var_3678.astype('int32'), [2080,]), relay.reshape(const_3679.astype('int32'), [882,]), relay.reshape(var_3680.astype('float64'), [1800,]), ), 3)
call_3681 = relay.TupleGetItem(func_3595_call(relay.reshape(var_3677.astype('float64'), [14, 4, 7]), relay.reshape(var_3677.astype('float64'), [14, 4, 7]), relay.reshape(var_3678.astype('int32'), [2080,]), relay.reshape(const_3679.astype('int32'), [882,]), relay.reshape(var_3680.astype('float64'), [1800,]), ), 3)
output = relay.Tuple([call_3640,call_3676,var_3677,var_3678,const_3679,var_3680,])
output2 = relay.Tuple([call_3641,call_3681,var_3677,var_3678,const_3679,var_3680,])
func_3682 = relay.Function([var_3677,var_3678,var_3680,], output)
mod['func_3682'] = func_3682
mod = relay.transform.InferType()(mod)
var_3683 = relay.var("var_3683", dtype = "float64", shape = (14, 28))#candidate|3683|(14, 28)|var|float64
var_3684 = relay.var("var_3684", dtype = "int32", shape = (104, 20))#candidate|3684|(104, 20)|var|int32
var_3685 = relay.var("var_3685", dtype = "float64", shape = (1800,))#candidate|3685|(1800,)|var|float64
output = func_3682(var_3683,var_3684,var_3685,)
func_3686 = relay.Function([var_3683,var_3684,var_3685,], output)
mutated_mod['func_3686'] = func_3686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_3716 = func_3525_call()
call_3717 = func_3525_call()
uop_3718 = relay.cosh(call_3716.astype('float64')) # shape=(16, 14, 8)
uop_3720 = relay.cosh(call_3717.astype('float64')) # shape=(16, 14, 8)
func_3588_call = mod.get_global_var('func_3588')
func_3595_call = mutated_mod.get_global_var('func_3595')
var_3729 = relay.var("var_3729", dtype = "float64", shape = (392,))#candidate|3729|(392,)|var|float64
const_3730 = relay.const([9,-2,1,-3,-10,1,-10,-5,-9,9,10,10,-8,-8,1,-8,3,1,9,8,8,3,6,-9,2,10,5,-10,1,7,-7,-2,-7,4,-8,3,4,2,-4,7,-10,-10,7,6,-7,-9,2,-5,-6,-2,3,-8,3,-7,10,5,-8,-7,-4,-2,9,-5,5,-7,1,3,7,9,1,7,7,-5,6,10,6,10,5,4,5,3,3,10,-9,-9,4,-4,-1,-9,-1,-6,-3,2,-2,-10,-10,-5,-10,4,-5,-10,1,1,4,-9,-9,4,5,-9,-4,6,-3,8,9,1,-7,2,-8,9,2,-9,-7,4,10,-9,-4,8,-7,1,10,-9,-4,4,3,-5,3,10,8,-2,-9,3,-7,1,9,1,3,-6,-10,-10,-2,-1,-3,-7,-7,9,3,9,7,5,1,5,7,-2,2,3,1,10,-7,4,9,9,-9,1,8,2,-5,5,10,10,-1,5,9,5,4,1,5,5,-6,-8,4,4,-8,-1,8,8,6,-3,-1,-2,-8,-8,3,-4,8,3,-1,1,-8,8,4,7,-1,7,-9,-7,-2,-9,-6,3,-7,8,-7,-9,-1,-1,5,5,8,-8,-10,3,7,6,7,9,-8,-3,-4,-10,-1,2,-10,-4,10,5,-6,-4,2,-8,9,-6,4,10,4,-5,-10,3,-3,-8,8,2,2,10,-6,-5,-8,2,10,2,-1,-1,5,2,-10,10,4,5,-10,1,5,-2,9,-7,-7,5,7,10,-1,-9,-3,-10,-2,2,-1,-1,3,1,7,-2,-6,-2,-4,-2,-5,7,-1,4,3,-7,-2,-1,2,-6,-10,1,7,9,-6,-8,4,-10,4,8,1,-2,-4,8,4,4,2,2,-9,-1,-1,-7,-4,-10,10,-6,5,-5,-10,6,-7,-10,6,-8,-2,-1,10,2,4,4,1,-6,-7,-7,4,-5,-2,9,8,2,-10,4,10,8,7,-1,-4,-5,7,-10,-5,-1,-1,-6,2,10,10,2,10,-5,1,-7,2,6,6,-10,4,-10,4,3,-4,7,-8,4,-10,7,3,-8,8,4,-3,-6,10,1,4,1,8,-1,-9,-4,-4,-2,-7,-3,6,10,6,4,4,9,9,7,7,4,5,-5,-1,7,7,4,1,-3,-1,-2,-4,4,-10,3,-1,3,6,-4,-7,6,2,9,3,-10,-1,-9,5,8,-6,-5,7,2,8,-2,-8,-10,8,6,3,8,-10,9,-2,-3,10,-5,5,-10,-5,9,1,-4,1,2,9,10,-9,-7,7,-9,-5,6,4,-5,8,-10,5,8,7,-2,4,-6,-2,-3,-2,-8,1,-8,-9,3,9,6,1,-10,6,5,-1,-2,-5,-3,-1,7,-2,6,10,-9,-3,10,9,-2,-9,6,9,4,4,2,-8,-7,4,2,-1,10,5,7,2,-10,6,5,-3,9,6,-5,10,5,-3,7,-9,9,-9,-8,8,1,4,-1,-5,-8,-4,7,5,6,-2,-4,-2,-5,-1,-1,2,5,8,-5,-8,5,-6,-6,6,-8,6,9,5,6,-8,-7,9,-8,-9,1,6,1,-10,-2,8,-5,2,-2,-10,2,-7,10,-2,4,-1,-1,3,-10,9,-9,2,3,10,10,8,-9,3,-3,-8,-8,-4,-8,9,9,-10,6,6,3,-7,-7,-6,-7,6,6,7,-4,1,7,10,1,-6,-9,6,-10,6,5,-2,3,-4,-3,-2,-1,9,-6,-4,6,-2,4,-10,1,2,9,10,-3,2,-5,-2,-1,6,9,-4,2,1,-6,-2,6,4,-5,9,7,3,10,-10,-6,8,-6,10,10,6,2,-4,-10,-4,-1,5,6,3,5,7,-10,9,-9,6,2,-7,9,-5,-10,-6,-3,2,-10,7,10,1,1,8,8,-1,-7,7,2,7,-10,-6,5,-6,4,-4,-9,6,2,-2,-7,5,1,-2,-3,-4,1,9,7,2,-9,6,9,10,6,-6,-4,9,-10,-6,-7,7,2,3,-1,1,-1,-10,10,6,3,-1,10,2,-10,-6,-1,-4,-10,2,-3,-3,-3,9,-4,-1,6,6,1,-9,-8,-7,-7,-2,9,-8,1,1,6,-7,-4,9,-10,5,1,-10,8,-8,10,3,7,6,-3,-2,-6,9,-7,9,1,7,-7,-5,-8,-1,4,-10,7,1,-2,9,1,-5,8,8,-7,5,3,2,-2,10,8,9,7,-5,2,-4,-6,5,-4,-3,-7,-8,8,-4,2,8,-5,5,-8,10,6,7,4,6,-3,2,9,2,7,-10,1,10,5,-7,-8,5,10,6,3,3,-10,8,4,-9,-8,-3,6,-5,9,-6,-1,-10,4,-7,9,1,-7,-1,10,4,-8,5,10,-7,-5,7,5,-9,5,-3,9,4,-6,-9,-6,2,-1,9,10,2,10,-1,9,5,-9,-10,6,-4,-10,7,-7,-1,-8,10,6,-3,-1,5,-6,4,1,-4,10,9,3,8,-7,-8,7,4,8,-4,-4,9,-9,7,-8,7,9,10,4,-1,4,9,-7,-9,-10,6,-9,-4,-1,-8,-2,-9,-3,-2,-6,9,2,3,10,-8,2,4,10,-10,9,-10,-3,1,-7,-2,-5,2,10,9,-7,2,-1,-3,-6,-4,10,-7,2,-8,10,9,-4,3,8,6,10,-7,6,-4,2,9,-1,-7,-2,-1,9,-8,-2,-5,-4,6,-10,-7,-2,9,8,-9,2,-3,3,9,-3,-2,-9,-5,-9,6,-3,-6,-3,-10,2,-1,7,1,5,1,8,-5,2,7,-1,3,-6,-1,-3,-10,-2,1,3,9,-1,-10,-6,3,4,-1,5,-3,4,-9,-8,-4,-8,-2,-5,2,3,-7,6,-7,2,-9,2,7,7,3,-5,-8,1,5,-10,4,-9,-2,-10,7,-5,-10,-8,2,-5,3,-3,-2,-10,10,3,3,4,-7,2,-10,-10,-5,9,6,-2,3,-9,-10,1,-8,4,6,-7,-6,-7,-8,-5,5,-2,-8,-9,10,6,-4,-9,-3,4,-3,-4,-3,-3,10,-6,4,6,-2,2,3,-3,-7,1,-7,3,7,-9,2,1,-4,7,-3,-7,-1,7,9,1,2,7,-7,9,2,4,2,6,-2,-3,7,2,-8,-2,-8,-4,6,-2,-4,9,-1,-9,-8,-10,-7,9,-10,4,9,7,-10,2,2,9,4,-3,-10,-7,-7,-1,9,-8,1,9,9,-9,-8,-5,4,-8,1,-3,-4,-1,9,-5,4,-7,7,-6,3,5,6,-4,3,9,3,-5,4,8,-10,10,-6,10,3,10,-9,7,-5,8,-3,2,-10,-5,-4,6,5,9,-2,-7,-5,1,3,1,-9,8,7,7,10,2,4,10,-5,-1,10,-2,-8,-8,10,-1,-10,10,2,5,-7,5,-4,-1,6,5,-3,-10,9,1,9,8,-4,5,6,-7,-6,6,-9,-10,-10,-2,4,-3,-2,-2,-10,-8,-9,-10,4,7,10,-3,-10,-4,8,5,-10,4,-5,-2,-9,9,7,2,-9,-3,-2,-7,-1,-5,9,-2,-8,-2,3,8,-6,9,-8,-7,9,5,-8,6,-3,10,-8,-4,9,1,-10,5,8,1,4,-5,10,4,4,7,10,-1,10,-7,1,-2,-9,-9,8,4,-10,4,-3,-9,-10,-4,6,9,1,4,3,5,2,10,-5,-3,-7,6,9,5,-2,10,-6,-3,-4,-9,4,1,-7,7,5,-9,-8,2,-8,7,-6,9,5,-9,2,7,3,3,9,1,1,8,-5,-9,7,-7,4,-5,10,7,3,8,-2,-5,3,6,-8,-5,5,7,1,-5,10,1,5,1,-2,5,10,-6,5,-6,8,-7,-5,-5,10,9,-3,9,-10,7,9,-5,-1,1,5,-1,1,6,-4,-2,2,-4,4,2,-4,-6,-10,-10,-4,-6,-10,-1,-5,-7,-7,-3,10,1,-1,-8,1,-5,-6,9,8,10,4,-1,6,10,-6,-2,10,-10,4,3,-3,6,5,-9,1,-3,1,-6,3,-10,-8,-5,6,9,-7,-7,1,8,-9,1,8,-6,9,6,7,10,10,4,-5,8,-7,10,8,-6,-9,-8,-10,-4,8,10,7,3,-7,5,-1,-2,8,6,2,-5,-6,5,-1,6,10,7,6,-7,6,-3,-5,-5,6,10,-1,8,10,-5,4,-10,-7,-4,-6,6,-4,-1,3,-1,5,-9,-6,8,-10,-7,-4,1,-6,4,9,-6,-10,-10,-10,4,-10,-6,9,2,-6,-6,-6,4,5,3,-8,6,5,1,-7,-3,-7,5,2,7,-6,8,1,5,-10,9,9,-7,1,10,-4,-7,3,-9,7,2,-1,5,-4,8,-1,3,-4,2,10,-3,4,-5,10,-1,10,-10,6,2,8,-4,-9,-6,-7,8,10,-2,-1,-3,-1,-10,8,1,-7,-3,-3,3,4,-4,-10,10,6,-6,7,10,4,8,-1,-7,1,5,-7,-7,10,3,6,9,5,10,7,-9,-1,-4,-5,-3,2,-10,6,1,-9,-3,-8,-8,10,-5,10,-7,-3,5,3,-6,-4,4,-4,-6,-9,-1,-5,-10,-8,1,10,-9,10,-1,-2,8,3,-7,-6,3,6,-2,2,-6,-8,-8,-7,-1,3,-10,9,2,-1,-3,4,2,-10,10,6,-4,-3,3,1,6,8,-10,5,10,-3,-3,-9,-6,1,2,-2,-4,-9,6,2,6,10,-6,-8,-3,1,7,-10,2,-8,1,-1,8,1,-9,-8,3,-1,-4,-7,-7,2,-2,-6,6,-9,6,1,9,10,4,-5,7,-6,-2,-8,3,4,4,10,-5,-6,-8,-5,-8,-6,-4,-9,-4,3,-8,-8,3,-6,3,-9,-4,9,4,2,-10,6,9,4,8,3,10,-9,-3,-2,-1,-5,9,-1,-8,9,-1,-4,8,-8,-7,4,-2,2,8,-2,-6,5,10,2,-9,8,4,2,9,-10,-1,-6,9,-8,2,5,-8,-7,8,-8,10,7,-7,-6,9,5,-4,10,-8,10,10,-10,-8,7,-6,-1,1,10,8,-8,-6,8,-5,3,9,-5,-9,-5,2,2,-7,6,-2,-9,2,9,2,8,-6,-3,2,-1,-3,-9,10,-4,-2,-8,5,-7,7,-7,-3,-6,-5,3,-7,10,5,-4,1,-4,8,-9,1,4,-2,-7,-7,6,-4,-1,7,10,3,7,-3,6,4,6,3,-5,2,-2,7,-1,8,3,-3,7,8,-9,6,-2,-3,8,-10,-3,-5,1,4,4,-2,-9,-9,-5,2,-7,1,1,-2,2,-3,6,9,-1,-7,-6,1,8,-2,6,6,4,-5,-3,-5,-8,-9,8,2,-2,-6,10,4,9,10,9,1,5,-8,2,1,-4,4,8,-3,5,-9,-7,4,6,-3,3,-10,-7,-5,2,9,-8,-7,-1,9,10,-2,10,4,1,2,-9,-2,-1,-7,5,-8,-1,3,5,-5,-9,-3,4,-4,-7,8,-9,4,9,2,7,1,4,9,6,-6], dtype = "int32")#candidate|3730|(2080,)|const|int32
var_3731 = relay.var("var_3731", dtype = "int32", shape = (882,))#candidate|3731|(882,)|var|int32
var_3732 = relay.var("var_3732", dtype = "float64", shape = (1800,))#candidate|3732|(1800,)|var|float64
call_3728 = relay.TupleGetItem(func_3588_call(relay.reshape(var_3729.astype('float64'), [14, 4, 7]), relay.reshape(var_3729.astype('float64'), [14, 4, 7]), relay.reshape(const_3730.astype('int32'), [2080,]), relay.reshape(var_3731.astype('int32'), [882,]), relay.reshape(var_3732.astype('float64'), [1800,]), ), 1)
call_3733 = relay.TupleGetItem(func_3595_call(relay.reshape(var_3729.astype('float64'), [14, 4, 7]), relay.reshape(var_3729.astype('float64'), [14, 4, 7]), relay.reshape(const_3730.astype('int32'), [2080,]), relay.reshape(var_3731.astype('int32'), [882,]), relay.reshape(var_3732.astype('float64'), [1800,]), ), 1)
output = relay.Tuple([uop_3718,call_3728,var_3729,const_3730,var_3731,var_3732,])
output2 = relay.Tuple([uop_3720,call_3733,var_3729,const_3730,var_3731,var_3732,])
func_3753 = relay.Function([var_3729,var_3731,var_3732,], output)
mod['func_3753'] = func_3753
mod = relay.transform.InferType()(mod)
var_3754 = relay.var("var_3754", dtype = "float64", shape = (392,))#candidate|3754|(392,)|var|float64
var_3755 = relay.var("var_3755", dtype = "int32", shape = (882,))#candidate|3755|(882,)|var|int32
var_3756 = relay.var("var_3756", dtype = "float64", shape = (1800,))#candidate|3756|(1800,)|var|float64
output = func_3753(var_3754,var_3755,var_3756,)
func_3757 = relay.Function([var_3754,var_3755,var_3756,], output)
mutated_mod['func_3757'] = func_3757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3801 = relay.var("var_3801", dtype = "float64", shape = ())#candidate|3801|()|var|float64
var_3802 = relay.var("var_3802", dtype = "float64", shape = (12, 16, 11))#candidate|3802|(12, 16, 11)|var|float64
bop_3803 = relay.subtract(var_3801.astype('float64'), var_3802.astype('float64')) # shape=(12, 16, 11)
output = relay.Tuple([bop_3803,])
output2 = relay.Tuple([bop_3803,])
func_3811 = relay.Function([var_3801,var_3802,], output)
mod['func_3811'] = func_3811
mod = relay.transform.InferType()(mod)
var_3812 = relay.var("var_3812", dtype = "float64", shape = ())#candidate|3812|()|var|float64
var_3813 = relay.var("var_3813", dtype = "float64", shape = (12, 16, 11))#candidate|3813|(12, 16, 11)|var|float64
output = func_3811(var_3812,var_3813,)
func_3814 = relay.Function([var_3812,var_3813,], output)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_3831 = relay.TupleGetItem(func_3494_call(), 0)
call_3832 = relay.TupleGetItem(func_3495_call(), 0)
output = relay.Tuple([call_3831,])
output2 = relay.Tuple([call_3832,])
func_3872 = relay.Function([], output)
mod['func_3872'] = func_3872
mod = relay.transform.InferType()(mod)
output = func_3872()
func_3873 = relay.Function([], output)
mutated_mod['func_3873'] = func_3873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_3904 = relay.TupleGetItem(func_3494_call(), 0)
call_3905 = relay.TupleGetItem(func_3495_call(), 0)
uop_3937 = relay.sin(call_3904.astype('float32')) # shape=(16, 14, 8)
uop_3939 = relay.sin(call_3905.astype('float32')) # shape=(16, 14, 8)
func_788_call = mod.get_global_var('func_788')
func_790_call = mutated_mod.get_global_var('func_790')
const_3946 = relay.const([0.337312,-0.837126,6.990450,6.806250,6.016133,5.418067,9.681287,-9.063718,6.319659,3.886290,3.474238,-1.859284,4.888583,-6.721087,-3.925292,1.301735,5.374714,2.743361,9.013599,-5.730446,-3.268631,-9.308833,3.566540,-5.652759,-9.501236,9.467331,-9.771322,-4.415305,-5.247477,-5.562325,0.237914,-8.235843,9.280587,6.109028,-2.516693,-2.035989,-5.689929,-1.257576,3.968723,-2.459132,7.752776,6.376410,5.757616,1.965912,-7.244455,-3.208565,4.996605,-0.432809,3.854802,5.694013,-4.555825,-5.061629,8.561544,-1.055573,-2.379018,-3.421679,-1.563882,2.279922,8.537552,3.025289,7.757934,8.566718,-8.408536,5.644134,-5.325677,-2.933804,-7.565744,6.798270,6.191981,7.606836,-9.246447,9.797989,1.078835,-4.055097,4.777882,0.408256,-9.101143,-4.571172,-8.146426,-6.691731,-4.621633,3.751124,7.079638,-3.941596,2.271812,-4.795993,7.863633,-8.353710,8.671659,-6.812179,1.676873,7.849543,-1.009529,-6.407053,2.619052,3.894516,5.868615,4.018213,5.199487,-8.443554,4.697421,-7.469135,-8.119004,6.728004,-1.321922,0.632307,8.882439,3.201737,-1.389546,0.199844,-2.715090,7.461728,9.921643,-5.357506,5.296734,7.922515,-3.779031,5.687365,1.903491,-9.848058,-0.719357,8.554635,-0.131784,-4.157673,-5.637665,-8.624334,-1.663433,3.510439,-2.226338,7.904344,-1.444746,-1.064129,-4.469594,3.393786,1.694321,6.988374,8.348619,9.905784,3.317845,-5.016404,1.820417,-8.834025,4.726497,-7.179346,-8.633605,1.997903,-9.853882,8.110472,6.404885,-6.225701,-4.397874,9.089193,-4.942514,1.029908,-7.287325,-2.591013,-8.240175,4.742238,-5.056830,-0.710422,1.922390,0.656661,1.428465,3.583023,9.389131,8.038378,8.589437,-6.360728,-1.307990,-4.214970,1.628163,-0.478135,9.326549,1.466429,9.365977,-6.792097,7.125091,8.763753,-5.022267,-7.059420,-1.502738,8.091929,-8.747981,-6.693252,4.756026,6.999678,6.730391,7.415397,8.656666,-4.136948,-9.675165,-7.226483,-2.492139,-9.048775,-9.384338,-3.166055,5.370970,-3.501164,7.181073,-8.889075,3.941646,-1.893029,7.012660,-0.801722,-3.356215,-0.996379,8.724163,4.413421,-9.748771,9.589194,-9.486288,2.581209,3.050388,4.218491,-2.717118,-6.115444,5.490254,-4.694793,-4.798941,0.419844,1.186590,3.716895,-9.327882,-0.319150,-8.090715,0.250206,-8.911892,-9.610837,3.498567,-5.127045,9.925116,6.808321,5.818015,-2.485130,-0.308182,1.059284,8.038279,8.016086,9.237485,-1.522910,3.467655,-0.921571,-8.964107,4.318830,-0.216553,-6.682086,-4.104919,-4.245630,2.556007,1.112346,-8.860171,-4.988855,9.884361,-9.917813,7.394460,5.140330,-3.514825,-7.172005,-0.940865,-6.359127,-2.782376,3.818405,6.745824,-2.557399,-5.501847,-9.916295,-0.158083,-3.326627,-2.777959,-5.386589,2.349335,-5.630255,8.810589,-2.792113,5.905482,-9.480895,0.462818,-0.406207,8.959291,-7.347143,5.169658,1.935467,7.834558,5.644448,-8.850909,6.401664,2.446172,8.932810,1.397185,4.443223,2.441563,-4.649064,8.018304,4.930111,1.242632,-4.756327,-1.464578,1.699580,7.284862,-7.660100,-3.139324,1.936356,5.385186,6.175092,-4.758994,0.760705,-5.223269,3.479886,2.142666,4.804429,-8.289647,7.450233,7.394031,-6.782254,3.453363,-4.918232,-1.253844,-6.226032,-6.394889,-6.604760,-9.455994,-9.333267,5.962053,-1.890128,-1.592002,-3.262114,5.496614,-0.125827,-4.998430,8.984429,9.239549,4.990614,1.582364,2.015535,0.021919,-7.838776,-6.917016,1.889446,-2.411575,-7.278968,3.603205,7.163450,-7.542370,8.114902,-5.441438,-7.968659,-4.070726,-0.939770,3.471940,9.736528,9.641853,-1.222731,7.891149,-5.552143,3.209878,-0.076344,2.657884,4.363234,1.657107,-5.280720,9.348045,5.334561,-2.718807,3.901630,-2.325033,5.720320,6.510963,2.585605,6.798300,-9.892894,-1.657588,3.827628,9.393420,3.355109,9.553531,-3.063517,-9.527923,-1.279171,0.927017,5.070615,-4.548234,-5.586896,-0.045723,-8.878752,9.654404,4.395021,-6.914190,0.697797,6.670008,-9.049276,-6.620632,-4.293557,2.211628,7.516201,-3.003905,-0.896545,7.391917,-1.909981,-3.852070,0.883209,-3.833165,6.478837,2.344922,-4.400438,0.217112,2.385861,7.602467,-4.139080,-6.419874,-1.575374,-6.139550,-2.448023,1.456639,-1.820851,3.581222,2.841746,-2.089059,-1.847098,2.700567,-8.555298,-7.110628,-6.266443,4.131906,-8.794979,-0.415447,2.150727,1.476747,9.858606,-4.237891,-6.914217,7.274135,0.701309,-9.500682,-1.225550,-6.546398,-8.163808,-5.765565,1.651351,3.858607,-5.079891,-8.683218,4.124010,6.207975,-0.407971,-6.781389,3.165893,-3.280053,8.967001,1.788467,-4.164413,-8.900082,-1.271417,6.070124,7.322395,0.464541,-5.149326,0.613779,8.101496,-6.739539,-3.104174,-7.853341,4.758673,7.210658,5.826841,-9.881381,-1.589602,-0.527571,4.385840,-0.765353,-1.923914,-7.625909,9.763766,-4.419587,-6.277924,-7.007891,2.716897,7.898984,4.499898,0.421459,3.037961,-3.972050,2.347791,-7.044581,-8.780740,6.440212,-6.473568,-1.127143,1.378249,-4.702088,9.990547,-4.161733,0.244016,1.706242,-0.634642,0.006603,-1.226511,-6.491789,-7.737994,2.500704,2.306516,6.694097,-4.338065,-7.967752,3.839266,-3.779867,8.732108,6.827960,-1.584645,-4.858496,-3.814696,-1.536432,7.865921,-0.502914,5.871768,0.129864,-2.207028,-6.078695,-4.941803,-7.224156,6.120540,-8.686773,9.603936,2.009537,8.282323,6.891766,2.302475,-1.312070,-8.054616,-9.663341,-9.914486,-3.751549,-0.061502,-5.021733,9.232401,-7.641026,8.391893,-4.568547,5.813865,-6.825062,8.280870,-9.452531,1.913098,6.496321,0.421310,8.967997,5.002464,-3.795980,-1.697107,-7.329070,5.317677,-4.582080,-0.928170,4.102323,-0.024147,-1.804346,7.572982,-5.512329,7.799735,-0.241454,6.197379,3.963477,-2.365458,-5.882055,-9.686718,-9.547632,-9.168306,-0.166157,9.764625,-5.593450,1.940961,2.076162,0.943617,2.146426,-2.628079,1.945956,4.824212,-6.917055,-3.779305,-2.847898,-0.327721,-1.709103,5.703859,2.992490,-2.678537,-2.961339,-8.210654,6.654667,6.939987,-2.874274,-2.796031,1.744066,-5.983280,3.806492,-0.433597,8.370301,2.389924,2.008774,-9.193076,0.702827,-9.834694,-6.571253,-3.937915,-4.569202,-3.255921,7.986389,-3.476005,-8.646580,-9.522530,0.320804,3.724929,6.714652,-0.047343,8.193176,8.573608,-1.984394,-8.759214,-7.886110,-4.175793,-0.180433,-3.194006,1.590760,-8.893170,5.479352,-6.007350,-1.781975,-5.207354,-2.104019,-1.285411,9.320780,-1.963604,-5.695036,0.328367,0.738479,8.273860,-9.678807,1.489407,8.111106,-6.401605,8.093313,1.129786,-8.170074,5.206175,2.446983,8.300686,-9.915962,-5.413027,-1.500389,8.236930,1.815361,-3.896142,-0.418140,1.607673,9.484621,2.375268,-2.686212,-2.147628,-2.350114,0.359914,-8.595404,-7.657718,7.559366,8.222055,-9.524166,3.805922,5.970080,-5.320354,-6.681959,8.809110,4.723330,-5.226041,-8.282686,-6.077001,-1.701123,-5.524078,-5.458425,1.799728,1.543090,-2.730236,-3.509727,6.143024,3.487444,7.102051,8.492965,6.714163,2.388333,3.226565,6.506920,-7.518976,5.296230,-3.474530,-7.106528,7.195592,-6.016667,8.687538,-1.291835,-6.250831,-3.491464,4.363632,1.725327,-3.746119,-5.518734,-6.660433,-9.532483,9.364312,2.206746,1.230917,-6.622566,0.115880,-4.931269,8.715543,5.500693,-1.531509,3.958199,6.239516,9.219175,-8.229135,8.731063,4.875190,3.772114,-9.604992,-7.539274,-2.832794,-0.128699,5.989360,6.159656,5.715244,-1.923230,-8.603403,2.260403,-6.801108,-0.203364,-6.803346,3.368460,8.800543,1.812195,3.347521,1.139826,-8.871127,2.831606,3.886405,-0.915199,3.519582,-5.260969,-7.848694,-4.425555,-5.630520,7.788090,-2.911832,-1.102382,-5.035099,5.939353,2.709638,3.303846,2.046074,7.267066,8.367245,4.155243,6.957552,2.868357,-5.675844,-5.943715,-4.043339,0.591510,9.190464,-3.635976,2.688856,3.336043,-9.119460,-9.920190,-6.107498,-4.387196,6.624995,-1.527248,-5.986149,2.216507,1.509647,2.826919,4.000588,7.499279,9.075345,-0.224110,9.587088,3.506234,9.235500,8.185204,-3.553315,5.689311,-9.362410,-6.304715,9.782168,8.286640,9.356736,-2.678789,0.846472,0.284730,7.276742,-7.048644,-7.401068,9.654839,8.317282,5.487807,-3.995641,-6.943935,-2.021117,3.802396,-2.441098,0.358005,-8.604500,-9.498212,9.857217,-4.496417,-1.388185,1.343271,-5.349164,-5.221020,-1.741265,2.225141,-0.395066,4.174584,-7.810419,3.091008,5.737391,1.186382,-0.606425,8.931366,4.566923,2.443940,-5.074017,-5.762799,7.346486,3.434153,-3.522073,-5.345210,-9.175514,-7.375632,8.721194,5.249060,-7.798902,-8.686719,-7.146101,-7.149853,3.105853,2.908053,-9.794809,-1.646257,-7.580617,9.417575,7.309439,-2.534116,3.943016,-0.256429,-2.841243,0.368186,-0.677274,2.703309,-8.202583,9.269491,7.723221,1.310628,-7.861281,8.138540,5.524458,-0.979176,2.313628,-5.900485,4.029546,4.406427,-1.112365,-7.253341,-5.441599,-2.431300,9.032858,-7.302391,-2.207986,-6.589521,1.417980,-1.437366,2.847142,0.739220,4.609694,4.118194,7.496453,-5.688272,-3.928103,-1.065582,-5.223131,0.573913,-9.666224,8.555724,4.275982,-2.995771,2.935024,-4.739358,9.675548,8.957959,3.618582,1.857455,3.571073,3.210138,-0.884003,-9.559999,-1.329216,-5.224749,9.464409,9.595918,7.702574,-5.469141,-2.618336,9.222605,-9.586880,-4.745011,-9.417836,-3.828721,3.156981,9.983425,-3.481884,5.251453,8.912589,3.455140,5.716974,3.978633,-1.623739,7.335763,-8.387504,-5.653993,-5.794550,1.871469,-0.992808,-7.891966,8.121432,6.300503,-2.203652,-1.390490,-8.006687,-1.388152,-2.505126,4.116626,1.466020,-1.410511,2.684210,2.503299,9.954530,-7.871528,-9.844616,-4.557986,-3.190072,3.572371,-7.763220,-4.135746,-5.626731,-8.382395,5.744006,3.726402,-2.729868,-9.185747,0.048499,8.413534,-2.655575,-7.677376,8.001024,-1.855534,0.034916,-5.596479,0.936982,-8.048556,6.228064,3.646374,-6.107367,-5.365705,-6.346786,3.786989,-5.641569,-6.817165,-0.199670,9.510262,1.596086,-7.491135,-6.419506,-8.659733,4.437568,5.825600,5.538998,4.755616,8.877634,1.491488,9.694701,8.365136,6.996107,-3.878087,6.513157,3.487555,-5.336781,3.284488,-7.329763,-4.096567,-7.541397,0.507911,-0.058064,-6.354742,-7.199900,5.985147,-9.853467,4.130433,8.425867,9.935037,3.141849,6.866671,-1.500398,-8.500736,1.171490,9.103741,-2.708074,5.262377,7.786223,1.481304,3.841174,7.296883,6.653342,-3.003117,8.502570,1.575836,-8.352009,-8.991580,5.347626,-7.703125,9.714849,5.371915,-1.715854,8.567010,-9.792224,8.441389,1.136703,0.312179,5.692239,5.307702,1.716028,0.522576,-5.730183,4.616534,0.340614,-7.985515,4.250643,-4.109732,-2.029813,2.049689,-5.662080,3.572517,-1.396859,2.984005,-7.890202,-0.673739,3.596577,8.162186,0.135162,-2.107879,-3.209198,7.469331,-8.387651,4.683545,2.507028,2.889195,2.113216,-8.388794,0.962819,1.930908,-1.177448,9.138699,-4.949015,1.682046,8.792668,-8.418703,-0.055118,7.514911,5.922645,-7.280902,-8.186406,9.439010,-1.356292,5.937104,3.179374,8.628866,-1.354646,4.542440,0.691749,-5.601241,-5.473488,0.257527,-7.033590,9.721386,0.424714,8.926479,9.868588,-9.639145,-7.756064,8.430769,-0.215324,7.883121,-1.748848,4.476125,-4.331743,-3.929452,-1.169424,8.458378,0.605883,7.202641,-7.416431,-3.841850,1.280335,9.823332,-2.686613,1.545334,9.948581,2.804084,1.697775,-6.415702,-1.152423,2.573453,-4.343447,3.624685,3.230172,-7.922719,4.911472,-3.873082,1.867717,-7.429370,-4.462895,4.577548,0.464452,7.215920,4.462411,-8.223658,9.029816,7.017757,-1.629434,0.898642,0.710462,-4.370795,-1.188795,9.499293,-5.919113,9.896858,4.556914,4.837928,8.249149,9.934362,-4.730625,-5.414864,7.416791,1.815285,-7.457676,-8.159391,-9.125442,4.640138,9.568965,9.402483,-0.808868,-5.742206,6.410400,-8.254993,4.527486,6.441341,2.554700,3.100603,7.015887,4.240607,4.303874,0.421817,-2.520569,-1.734727,8.567898,9.287279,-6.931784,0.800184,8.753529,-7.830900,-9.234252,-8.913070,1.617286,-9.688205,-0.531715,-8.824220,8.739753,-6.612595,-3.985466,7.455789,-9.157491,-4.604404,5.576958,-6.411202,5.725021,7.869944,-6.550437,-6.008102,2.170108,6.598308,-4.096437,0.605394,0.037474,3.683981,-1.768948,-7.734487,8.324166,8.040829,-8.869197,-5.017941,-6.707854,5.029369,8.011741,-9.439663,9.014824,3.911313,6.284617,2.542519,-2.657846,8.976779,-1.994252,0.422575,-1.441904,-3.295237,-2.438312,-6.155237,-0.692433,6.682480,4.669425,-5.319864,6.488911,-8.658295,-9.033168,-0.747230,-8.962578,2.457554,9.291050,8.478036,8.832258,-6.225571,-5.644921,-1.461931,6.056321,-3.432519,5.463348,4.966599,-1.112670,4.023283,4.192982,0.193793,1.403689,-2.593291,2.457762,-7.718473,3.640670,-2.193976,-5.448644,-9.694987,0.878143,-3.260789,4.937580,0.648825,-0.370523,-7.934985,-3.057913,3.517266,-0.173192,-9.509661,6.898451,-4.719142,-3.099786,-5.790212,4.003366,-8.498285,-5.221513,7.259757,-3.194562,8.198970,-3.297240,-2.466154,-4.178726,-2.037643,-9.234180,-9.955462,-3.661494,-9.135155,-2.757217,7.687444,-9.386646,-5.358504,-5.420498,-1.163222,-6.704268,6.381019,-8.976703,-5.907947,-1.126563,5.301804,5.520975,-9.457235,4.821417,-2.734390,-1.568554,9.815381,0.884434,6.301357,-2.121181,-3.618715,2.264503,2.990894,-9.790193,-3.481225,-9.987360,6.481029,-0.016360,1.983527,-9.632346,6.232183,1.265756,4.211107,-1.867617,7.693366,7.549998,4.253499,4.814747,-1.278381,-2.472593,-1.912937,-7.003967,6.098692,-0.457785,-3.191243,-5.915688,7.270003,7.396290,2.403210,8.458383,-1.047277,-0.271767,8.547886,-6.193497,4.193536,0.698398,7.609833,0.407883,-0.964876,-4.826874,6.964896,-7.151249,-4.950500,5.383876,7.971583,-3.648443,7.963177,5.384619,8.606414,-7.032798,3.714317,-2.952050,-0.026055,0.479266,4.188776,3.829429,-7.929940,8.210747,9.973498,-7.403182,7.466871,-7.257253,-2.158108,-9.353795,6.129053,-3.972267,-7.592645,-6.805989,9.427644,6.473129,1.097257,9.820336,-7.107341,-5.903970,4.705474,-7.657603,-9.501333,-4.052734,-4.009950,-4.174784,0.645311,-8.915898,8.552387,-4.258897,-2.793162,-8.074530,4.358307,-9.909496,-1.673423,4.572466,7.463520,3.044267,7.192013,-4.467006,-1.292756,1.001832,-8.457131,5.148021,-6.479001,-8.222820,3.444032,-7.423879,-6.138896,-1.222656,-4.927592,-9.906091,8.509677,8.551241,9.777051,-4.996510,-3.051122,-1.173625,-3.540483,-8.344841,5.829220,4.410516,6.628782,4.747156,-2.632614,3.808503,-0.530282,0.280362,8.135168,-7.307911,-1.295656,-2.453846,-9.747108,8.709850,-4.586064,-5.424710,-0.432477,-1.701853,1.409863,6.225854,2.553080,-5.480319,5.536497,3.323364,-0.006533,1.733789,-2.565027,8.317609,-6.090035,9.885098,4.558550,0.184147,-5.578792,4.152112,8.724348,2.917429,4.577044,-4.867439,4.501080,1.045490,1.651050,5.396189,-8.342101,2.466239,5.681839,1.825796,-2.616185,8.804388,-4.053637,-2.644170,1.477551,-8.880887,-6.164340,2.298471,-4.867523,7.304703,-3.933964,-0.275427,-4.119158,2.637491,-3.884284,-4.445480,0.818650,7.054686,-4.012017,-2.052559,-4.358678,0.681448,5.780238,-5.381017,8.479124,-0.129833,-5.933925,2.178351,-8.563981,3.432564,2.156541,3.110730,4.734935,8.079854,-0.335672,0.686191,-0.961049,1.079553,-2.578342,-9.690659,-4.475180,8.596052,6.576089,6.599697,7.378703,-3.417780,-3.580021,-8.627008,7.192566,1.888530,1.815399,-1.324021,6.297312,9.132768,8.300212,-9.249943,-1.537465,6.299908,-5.770178,3.181172,6.621826,-6.229127,1.457960,6.461899,-7.665755,9.590196,4.375228,-7.764335,3.125568,-6.022981,4.364240,-4.863131,-9.331969,9.669129,-5.451871,1.884742,-1.082174,6.981065,-9.288873,-5.071835,-8.261210,-6.503631,9.491220,-7.771791,-3.965570,-4.202111,1.397839,-2.717907,-8.395075,-1.604445,-1.592694,-9.741174,-1.099409,8.904837,-5.556710,5.847240,1.867911,-0.871566,-2.772824,6.383443,-1.601967,-1.849876,3.139171,7.773514,-5.053281,-5.567655,7.959802,-9.944565,7.373219,-1.380685,1.229035,-8.674819,1.971929,-5.726100,1.879542,2.313466,9.982731,-4.365361,-5.926703,-8.194735,1.888033,7.281006,2.965414,-7.475327,1.348313,-5.598640,5.152002,5.058155,2.911036,-6.178217,-5.478936,-9.554867,-5.250813,-8.364567,9.476396,0.345778,1.591524,4.741189,-8.900613,7.294019,1.940514,5.445031,-4.849398,3.191473,-7.465050,2.848479,7.505252,-1.351413,-5.762817,-8.510429,9.375886,-4.294737,7.420723,7.908008,-6.279727,5.880526,-2.808527,-7.016250,-5.953641,-0.777496,4.913660,6.796978,-2.447019,-7.435617,-7.519811,-2.349287,3.381698,-5.528811,-7.801493,-2.287886,5.985573,-6.387519,-4.105596,-8.964596,0.170615,1.844367,-7.622899,6.036606,-2.158638,1.083565,1.535830,-4.079336,2.057743,7.874155,-3.282316,-0.210212,4.927182,8.645638,3.759138,-0.054305,0.788062,4.293524,-9.456331,-3.122379,0.203530,9.364142,6.805687,2.121369,5.497509,-7.663563,-2.216171,9.763682,-4.121074,-6.918760,-3.855086,-0.577552,-2.948200,-0.907017,-6.342219,-6.375979,-1.471945,-2.491482,3.616941,-7.516295,-7.832167,3.718232,6.979109,5.191082,1.949741,2.809312,-6.597303,0.564364,-1.441543,-6.657402,-5.075310,-8.201376,-3.011943,-8.826588,-5.322883,-1.996347,-7.819257,2.054044,-5.803106,6.979723,-2.996199,-4.916241,-5.377598,-1.281161,7.026343,4.591832,9.548032,-0.850036,1.302441,5.106759,-3.008479,-8.451461,1.600676,-8.972403,-5.715506,-6.479621,5.989974,-8.306919,-8.699503,-9.797635,5.883606,-4.468789,6.194217,-0.969501,8.742872,-7.530776,-3.633321,-0.647841,-4.269442,9.433477,-7.797322,-3.432145,-7.337138,0.101387,2.233438,-7.829330,-0.044139,6.779699,-1.137150,-1.682744,3.486523,7.914140,7.441444,-2.577193,-9.447112,6.932616,6.005067,-2.629711,-1.356992,-6.443073,3.300251,-2.118294,2.184811,2.485229,0.043793,-7.605051,-1.145421,-2.637903,9.437364,-3.465176,3.514625,3.791349,7.870389,-0.033140,4.411341,6.881861,-8.929950,-0.116750,3.523051,1.095481,4.355416,2.893161,4.050439,-7.643408,-0.141254,-5.921374,-4.387185,-9.187496,-9.717135,2.086227,-7.835366,-0.852764,-3.085650,-0.261199,6.308463,-0.677568,8.924784,-6.576654,-3.161244,-5.865987,6.039493,-8.726854,-0.129273,3.879976,6.042481,-2.619028,7.663839,-2.904708,-4.309724,3.804943,-7.090234,-7.994943,-0.607747,-1.341171], dtype = "float64")#candidate|3946|(1800,)|const|float64
call_3945 = func_788_call(relay.reshape(const_3946.astype('float64'), [8, 15, 15]))
call_3947 = func_788_call(relay.reshape(const_3946.astype('float64'), [8, 15, 15]))
output = relay.Tuple([uop_3937,call_3945,const_3946,])
output2 = relay.Tuple([uop_3939,call_3947,const_3946,])
func_3948 = relay.Function([], output)
mod['func_3948'] = func_3948
mod = relay.transform.InferType()(mod)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mutated_mod.get_global_var('func_3948')
call_3949 = func_3948_call()
output = call_3949
func_3950 = relay.Function([], output)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_3953 = relay.TupleGetItem(func_3494_call(), 0)
call_3954 = relay.TupleGetItem(func_3495_call(), 0)
var_3959 = relay.var("var_3959", dtype = "float64", shape = (16, 14, 8))#candidate|3959|(16, 14, 8)|var|float64
bop_3960 = relay.bitwise_or(call_3953.astype('int64'), relay.reshape(var_3959.astype('int64'), relay.shape_of(call_3953))) # shape=(16, 14, 8)
bop_3963 = relay.bitwise_or(call_3954.astype('int64'), relay.reshape(var_3959.astype('int64'), relay.shape_of(call_3954))) # shape=(16, 14, 8)
output = relay.Tuple([bop_3960,])
output2 = relay.Tuple([bop_3963,])
func_3964 = relay.Function([var_3959,], output)
mod['func_3964'] = func_3964
mod = relay.transform.InferType()(mod)
mutated_mod['func_3964'] = func_3964
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3965 = relay.var("var_3965", dtype = "float64", shape = (16, 14, 8))#candidate|3965|(16, 14, 8)|var|float64
func_3964_call = mutated_mod.get_global_var('func_3964')
call_3966 = func_3964_call(var_3965)
output = call_3966
func_3967 = relay.Function([var_3965], output)
mutated_mod['func_3967'] = func_3967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_4039 = relay.TupleGetItem(func_3494_call(), 0)
call_4040 = relay.TupleGetItem(func_3495_call(), 0)
output = call_4039
output2 = call_4040
func_4045 = relay.Function([], output)
mod['func_4045'] = func_4045
mod = relay.transform.InferType()(mod)
output = func_4045()
func_4046 = relay.Function([], output)
mutated_mod['func_4046'] = func_4046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4045_call = mod.get_global_var('func_4045')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_4047 = func_4045_call()
call_4048 = func_4045_call()
output = relay.Tuple([call_4047,])
output2 = relay.Tuple([call_4048,])
func_4084 = relay.Function([], output)
mod['func_4084'] = func_4084
mod = relay.transform.InferType()(mod)
output = func_4084()
func_4085 = relay.Function([], output)
mutated_mod['func_4085'] = func_4085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_4123 = relay.TupleGetItem(func_3494_call(), 0)
call_4124 = relay.TupleGetItem(func_3495_call(), 0)
func_3682_call = mod.get_global_var('func_3682')
func_3686_call = mutated_mod.get_global_var('func_3686')
var_4133 = relay.var("var_4133", dtype = "float64", shape = (14, 28))#candidate|4133|(14, 28)|var|float64
var_4134 = relay.var("var_4134", dtype = "int32", shape = (2080,))#candidate|4134|(2080,)|var|int32
var_4135 = relay.var("var_4135", dtype = "float64", shape = (900, 2))#candidate|4135|(900, 2)|var|float64
call_4132 = relay.TupleGetItem(func_3682_call(relay.reshape(var_4133.astype('float64'), [14, 28]), relay.reshape(var_4134.astype('int32'), [104, 20]), relay.reshape(var_4135.astype('float64'), [1800,]), ), 4)
call_4136 = relay.TupleGetItem(func_3686_call(relay.reshape(var_4133.astype('float64'), [14, 28]), relay.reshape(var_4134.astype('int32'), [104, 20]), relay.reshape(var_4135.astype('float64'), [1800,]), ), 4)
output = relay.Tuple([call_4123,call_4132,var_4133,var_4134,var_4135,])
output2 = relay.Tuple([call_4124,call_4136,var_4133,var_4134,var_4135,])
func_4145 = relay.Function([var_4133,var_4134,var_4135,], output)
mod['func_4145'] = func_4145
mod = relay.transform.InferType()(mod)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4145_call = mutated_mod.get_global_var('func_4145')
var_4147 = relay.var("var_4147", dtype = "float64", shape = (14, 28))#candidate|4147|(14, 28)|var|float64
var_4148 = relay.var("var_4148", dtype = "int32", shape = (2080,))#candidate|4148|(2080,)|var|int32
var_4149 = relay.var("var_4149", dtype = "float64", shape = (900, 2))#candidate|4149|(900, 2)|var|float64
call_4146 = func_4145_call(var_4147,var_4148,var_4149,)
output = call_4146
func_4150 = relay.Function([var_4147,var_4148,var_4149,], output)
mutated_mod['func_4150'] = func_4150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_4169 = relay.TupleGetItem(func_3948_call(), 2)
call_4170 = relay.TupleGetItem(func_3950_call(), 2)
output = relay.Tuple([call_4169,])
output2 = relay.Tuple([call_4170,])
func_4182 = relay.Function([], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
output = func_4182()
func_4183 = relay.Function([], output)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4202 = relay.TupleGetItem(func_4084_call(), 0)
call_4203 = relay.TupleGetItem(func_4085_call(), 0)
func_2767_call = mod.get_global_var('func_2767')
func_2771_call = mutated_mod.get_global_var('func_2771')
var_4233 = relay.var("var_4233", dtype = "uint16", shape = (18,))#candidate|4233|(18,)|var|uint16
const_4234 = relay.const(7, dtype = "int32")#candidate|4234|()|const|int32
call_4232 = relay.TupleGetItem(func_2767_call(relay.reshape(var_4233.astype('uint16'), [1, 9, 2]), relay.reshape(const_4234.astype('int32'), []), ), 2)
call_4235 = relay.TupleGetItem(func_2771_call(relay.reshape(var_4233.astype('uint16'), [1, 9, 2]), relay.reshape(const_4234.astype('int32'), []), ), 2)
func_1025_call = mod.get_global_var('func_1025')
func_1028_call = mutated_mod.get_global_var('func_1028')
const_4247 = relay.const([-8.208107,-0.756607,4.081890,5.030745,-8.976754,-0.492634,-4.942311,-1.820734,-1.917628,1.076380,7.091184,5.536441,2.449686,3.744858,-0.397071,9.185409,6.303313,-8.190181,8.060225,-8.553323,-2.612340,-5.960236,0.484140,1.222018,2.654910,4.674673,8.317790,7.641379,3.284801,9.144573,0.053169,-4.653394,2.890475,3.693915,-5.040784,-8.727231,-2.960618,6.183560,2.211105,-5.395839,7.000727,8.807809,-4.930343,-6.137779,-7.257366,-5.808183,-2.251358,-3.468517,4.564498,-9.510512,-1.081396,-3.866272,-2.175308,-0.889673,2.905146,-8.972900,7.051596,2.050886,-5.935933,5.326186,0.752156,7.527446,-6.328338,4.139132,8.183002,4.174896,8.311536,1.325107,-5.674689,9.664471,-0.436709,-9.976407,-0.861778,4.701166,6.586889,4.826020,-6.593718,2.068080,-8.379824,2.825275,-6.610237,9.046234,-9.049853,1.198846,4.170441,-7.859428,-7.038261,3.751061,-8.006196,-6.279139,7.528907,1.412059,-7.366703,-3.357774,3.630941,-3.552922,-2.771324,0.254973,-7.175237,3.570125,-6.649114,9.013536,1.475844,0.451223,-2.150087,5.750383,5.320406,2.163716,5.467127,-4.655958,5.001100,3.158712,3.450621,2.663250,6.847975,1.150791,-5.886591,4.058887,3.510026,-5.930250,-1.289723,2.167925,-0.400367,9.594965,-6.423755,-5.493920,-2.851316,9.305202,5.957455,-3.528997,-6.498549,-7.789911,-7.868191,-9.776273,-6.431188,7.334298,-6.129092,-6.536340,-8.512885,1.999873,0.286260,-5.593259,8.093784,8.231023,-9.449917,7.084870,9.447822,-0.331436,1.987024,3.587756,9.673150,-0.932071,7.931297,-9.958875,-3.992565,-2.732101,5.198599,-4.902127,4.655800,6.834694,0.701619,-0.905914,-2.078460,-2.919566,6.876924,7.412158,0.676726,-5.720211,-1.332774,-5.746076,-8.291203,8.241442,5.413241,-4.659895,0.114245,1.044379,4.416855,-3.250875,-5.196629,5.169328], dtype = "float64")#candidate|4247|(180,)|const|float64
call_4246 = relay.TupleGetItem(func_1025_call(relay.reshape(const_4247.astype('float64'), [6, 10, 3])), 0)
call_4248 = relay.TupleGetItem(func_1028_call(relay.reshape(const_4247.astype('float64'), [6, 10, 3])), 0)
output = relay.Tuple([call_4202,call_4232,var_4233,const_4234,call_4246,const_4247,])
output2 = relay.Tuple([call_4203,call_4235,var_4233,const_4234,call_4248,const_4247,])
func_4257 = relay.Function([var_4233,], output)
mod['func_4257'] = func_4257
mod = relay.transform.InferType()(mod)
var_4258 = relay.var("var_4258", dtype = "uint16", shape = (18,))#candidate|4258|(18,)|var|uint16
output = func_4257(var_4258)
func_4259 = relay.Function([var_4258], output)
mutated_mod['func_4259'] = func_4259
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4341 = relay.var("var_4341", dtype = "int8", shape = (2, 15, 16))#candidate|4341|(2, 15, 16)|var|int8
var_4342 = relay.var("var_4342", dtype = "int8", shape = (2, 15, 16))#candidate|4342|(2, 15, 16)|var|int8
bop_4343 = relay.right_shift(var_4341.astype('int8'), relay.reshape(var_4342.astype('int8'), relay.shape_of(var_4341))) # shape=(2, 15, 16)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_4352 = relay.TupleGetItem(func_3948_call(), 1)
call_4353 = relay.TupleGetItem(func_3950_call(), 1)
output = relay.Tuple([bop_4343,call_4352,])
output2 = relay.Tuple([bop_4343,call_4353,])
func_4357 = relay.Function([var_4341,var_4342,], output)
mod['func_4357'] = func_4357
mod = relay.transform.InferType()(mod)
mutated_mod['func_4357'] = func_4357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4357_call = mutated_mod.get_global_var('func_4357')
var_4359 = relay.var("var_4359", dtype = "int8", shape = (2, 15, 16))#candidate|4359|(2, 15, 16)|var|int8
var_4360 = relay.var("var_4360", dtype = "int8", shape = (2, 15, 16))#candidate|4360|(2, 15, 16)|var|int8
call_4358 = func_4357_call(var_4359,var_4360,)
output = call_4358
func_4361 = relay.Function([var_4359,var_4360,], output)
mutated_mod['func_4361'] = func_4361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4414 = relay.var("var_4414", dtype = "float64", shape = (5, 7, 12))#candidate|4414|(5, 7, 12)|var|float64
uop_4415 = relay.atan(var_4414.astype('float64')) # shape=(5, 7, 12)
func_1709_call = mod.get_global_var('func_1709')
func_1712_call = mutated_mod.get_global_var('func_1712')
var_4418 = relay.var("var_4418", dtype = "uint32", shape = (216, 1))#candidate|4418|(216, 1)|var|uint32
const_4419 = relay.const([9.541044,-9.553383,9.984726,0.208563,-1.069466,5.167169,-3.889378,3.591359,0.171191,-5.722829,4.662118,4.946307,4.341389,1.085236,2.409444,5.001451,5.705719,-2.221801,6.246908,6.168017,-8.253710,6.767558,4.891874,-9.469182,9.824583,-4.815262,-0.877786,-4.136253,0.299435,-0.765330,8.364764,9.929359,4.439228,3.628609,-6.386814,7.281391,-8.623225,0.128897,1.920351,-0.711713,-3.317228,9.696133,8.678185,-2.794827,7.220628,7.104529,5.751413,-0.722975,5.530184,8.088585,-8.205415,-9.304462,-6.425469,3.874909,4.216829,-5.371331,-1.398884,-1.398389,-2.794922,-3.916204,-6.102896,-9.624027,-7.047073,-9.723168,-9.072157,8.712675,-9.669602,2.495116,4.529412,-5.642692,3.265696,-7.296917,-1.481291,4.808594,-1.627653,2.476508,0.112071,-8.641978,-3.158210,6.920340,-6.136816,8.610698,-9.387541,7.335900,3.263261,6.913061,3.927052,-4.222363,-9.438156,-2.520416,5.597560,9.756239,7.233030,6.610512,4.654942,-9.954190,9.920541,-0.424224,9.302147,-7.144973,-8.469287,6.412777,5.661202,2.063790,1.611885,-5.888278,0.700418,7.244871,8.204726,-4.742476,-7.197262,3.289748,2.028084,4.387613,4.523569,1.670220,7.880110,8.967919,5.289056,5.994613,-3.869802,0.765231,3.697111,-6.185471,8.208358,7.969986,-3.921277,-5.940723,3.660391,-9.525571,8.625893,-2.712741,-3.327916,8.100046,-1.389765,-2.528093,6.248991,2.081995,-5.672379,8.163730,-3.399476,4.017132,7.542547,-9.861146,-6.570544,-9.687109,7.995413,-9.318675,-9.946051,0.120173,-0.771948,-2.186216,5.112510,6.909745,1.515014,-3.413322,3.828697,-7.641559,2.775253,3.978149,2.612592,3.773044,-6.260376,-7.013426,0.899277,-2.006857,0.578521,4.162591,-1.794032,8.366644,-1.396468,9.987623,1.535921,-6.387626,6.846963,-8.869286,9.921644,4.339767,-1.338799,4.440463,7.235207,5.089376,-4.214275,7.135947,1.044971,-4.848064,-5.917901,-5.140087,-5.244256,-6.628942,-1.479916,-0.508022,-7.293594,-6.461279,-6.838732,7.311951,8.736566,-1.680259,8.844090,-3.239522,-3.179954,-6.424889,-0.301272,6.570975,-5.584836,-3.727995,-3.208420,-9.491833,-1.759236,4.966579,-3.667278,-5.850395,-0.307595,0.674890,1.738829,-2.744344,4.557111,-8.351422,4.089979,-9.370052,-1.803797,4.956501,4.061155,8.512659,-2.690165,-1.224117,2.201270,-2.761598,-0.764879,-2.708146,1.607735,2.843621,3.356260,-2.945229,3.926947,-4.255369,-4.330661,1.877447,-4.266256,2.382378,9.810785,3.891011,7.732629,-3.025548,-1.968118,0.764706,-1.788364,-0.677451,-7.086100,-3.772500,6.199115,3.544601,-7.531318,8.825473,-1.882071,7.101614,2.863969,-1.879731,-5.479310,-1.852207,4.752116,-5.902841,-7.721204,-7.780054,-4.169655,7.241972,6.576301,0.019156,7.866718,-2.721530,9.669411,2.812175,2.018116,0.122196,7.448424,-3.280637,6.723301,-1.636757,4.310800,7.995153,7.667232,6.860376,2.686824,0.802045,5.002565,-0.822398,2.884937,7.962977,-7.106872,9.681536,-3.544982,-0.151536,-6.153955,-6.074056,9.135240,5.033157,-3.369168,-3.757659,4.750396,-8.072153,3.974256,-4.505798,-2.579345,4.070770,-1.994874,-1.942285,-6.001375,9.706655,5.608150,-9.859789,0.499937,-7.731242,-9.573691,4.660188,-4.411890,9.184827,8.227308,-0.525102,1.675449,-5.650209,-9.453377,2.061538,5.106871,-6.380211,-2.630271,-1.691199,-5.330219,7.292704,1.616602,3.447731,-4.859884,1.858975,-1.843382,9.880190,-6.755388,1.345342,7.872205,0.563192,9.681180,9.402894,5.566781,9.213393,-3.528342,-6.228915,-8.184052,2.293210,-5.975163,-7.049295,9.615226,6.311641,2.870769,-1.847476,0.536676,9.524731,7.854976,-9.227830,-1.861453,3.352322,-0.204478,-4.428771,7.378295,9.596740,6.536445,-1.549160,8.421998,-6.658337,-8.486365,9.725082,-8.273016,2.428220,-5.833687,-4.220948,7.730276,5.757397,-7.225455,-4.013778,-2.726183,5.749419,6.182903,-3.703850,5.760238,6.838651,6.824875,5.284000,-8.822136,-3.075852,-6.958809,5.125476,-2.812442,1.513912,4.365995,-6.945740,6.029116,1.319417,3.388785,-9.676909,-7.626022,-6.722342,-3.860616,2.188794,-5.042705,1.332887,1.966992,8.383788,-7.022305,-4.225483,-7.514469,3.025103,-3.029950,6.729149,-8.222062,7.010690,4.059594,-3.734033,0.708821,-3.933012,9.616892,0.140956,4.101853,-6.728981,4.154223,7.883118,1.701725,-0.874510,0.334729,3.700817,9.776517,-9.524338,0.369989,-5.970391,-2.606251,-3.089565,0.669847,-3.483477,-1.916034,-9.186394,9.456037,-7.684910,-9.994851,4.491700,-0.348479,3.049844,4.970436,-7.509974,-7.593653,7.732236,-3.927667,6.298844,1.661927,-6.602907,-1.608775,-9.472106,-6.584847,2.322581,8.996632,-3.738464,8.571903,5.753044,7.633315,9.674771,-8.812586,-0.342789,5.136321,-7.541061,-8.302222,-2.016869,4.142621,-4.985139,7.497400,-9.542891,-2.925795,-8.485236,-3.861766,-5.858752,-0.339811,-1.790715,1.121213,9.202834,-8.506461,1.152778,-8.936495,2.028540,-3.611779,6.292451,6.458746,-7.155465,-8.134844,-8.166796,-4.912011,-4.105234,-5.413060,-6.055902,5.068918,-6.633937,2.509723,-1.846254,-2.132767,-3.942581,-8.214617,-7.903455,5.896257,5.866947,-6.377154,2.688516,8.699287,1.799796,-1.672016,6.498128,7.889757,4.713492,7.023486,-6.188370,2.620409,8.850354,-5.818948,-1.297220,-3.342113,9.880606,4.340690,-0.766548,-3.223728,-0.172900,5.051304,-6.337264,-5.069840,1.095499,-2.063129,2.814996,-3.632972,8.350763,-7.107119,8.361888,6.277554,6.627065,2.423692,7.800459,1.977039,-9.853616,6.649144,2.330385,-2.406949,-7.599364,-3.099199,-3.258512,-3.288027,0.933240,5.628215,3.257468,5.894969,2.699054,-6.653118,-4.053095,0.684926,-5.827829,-4.729719,-7.353998,1.904169,6.389377,-6.536116,-2.079325,4.371159,2.307979,-7.442843,1.817925,-3.043671,-4.292013,-4.734759,-7.283416,1.666896,-6.379465,5.853069,-2.411444,5.500009,-0.080261,-8.403608,-9.135701,8.085383,-7.342134,4.424511,4.549875,7.298505,-3.368881,8.705560,5.135314,-1.985284,-2.959779,-7.658222,-2.260352,-0.675549,7.033400,6.217223,-3.968610,3.230964,4.752645,-1.079046,-1.695281,-5.066114,6.721048,-2.501209,5.905191,1.770287,-0.867519,-2.564161,1.165128,8.146581,5.591366,6.684406,2.628087,4.136608,9.547973,-4.055213,5.961417,-2.221010,-0.121465,0.683704,2.043221,4.396849,-7.452237,-2.107760,-6.446800,-9.279470,6.183627,2.092258,-2.736851,6.808905,-0.776946,-2.233569,-5.402064,8.223665,6.254538,-5.596762,2.958933,-3.488849,-0.683623,8.203196,-5.708445,-7.991148,3.187009,9.451453,-9.380188,9.745635,-2.470670,-6.662584,7.069033,2.707046,-6.446197,8.027617,9.701548,3.357399,8.528409,-4.167739,-6.603082,1.335050,-3.928139,-6.138387,2.511315,7.224704,9.294673,-9.594392,8.785954,2.090433,-0.645464,3.898876,-5.540624,7.348806,-1.097762,1.479526,-1.893737,-5.034777,6.366618,-4.307489,3.520714], dtype = "float32")#candidate|4419|(672,)|const|float32
call_4417 = relay.TupleGetItem(func_1709_call(relay.reshape(var_4418.astype('uint32'), [3, 6, 12]), relay.reshape(const_4419.astype('float32'), [672,]), ), 2)
call_4420 = relay.TupleGetItem(func_1712_call(relay.reshape(var_4418.astype('uint32'), [3, 6, 12]), relay.reshape(const_4419.astype('float32'), [672,]), ), 2)
func_788_call = mod.get_global_var('func_788')
func_790_call = mutated_mod.get_global_var('func_790')
const_4422 = relay.const([[0.944578,-3.325079,7.002328,1.306234,5.942603,2.355129,6.666840,-2.444113,-7.532264,4.487090,5.167116,-9.233079,4.150953,0.921939,-6.871790,-3.173130,-1.214353,2.556991,-1.267325,2.667743,4.521707,1.322132,-4.608562,-1.578773,-5.836784,-7.475439,9.217816,8.145489,-6.706186,7.610867,6.534557,2.014968,-2.801140,1.864887,2.744793,1.250219,7.593690,-8.832203,-5.563337,-8.302644,-0.810694,-8.906671,1.856803,-8.484474,8.207996,-6.018937,5.278784,-5.114382,-1.940918,-8.490337,-9.091789,7.109163,2.933510,0.936017,-4.443389,-4.287322,4.364537,-2.312650,-7.580471,-4.938275,-3.980301,-9.226637,-8.790112,-2.960116,2.457691,4.922258,-5.283887,1.795101,-8.033337,9.091075,0.856236,6.639753,9.707551,0.512573,3.766874,8.563343,7.286025,0.852906,-2.583561,-5.435548,8.421029,0.263710,-0.390739,2.285218,7.740968,8.178140,-3.201341,8.406857,1.062281,-3.295609,4.166329,-3.968496,9.216354,-7.930594,4.067705,6.673117,-0.591663,-6.947569,-6.430805,8.623731,0.548829,-7.252574,-5.587419,1.041064,-2.486592,-3.770323,6.006175,-8.165028,-7.437231,-0.606431,-8.227142,-5.906392,-2.628054,9.138932,-5.567172,-2.454072,-0.623881,-3.273007,3.484496,-0.349278,7.573625,6.955174,3.145435,8.638660,-7.100167,-1.976226,-7.215987,-1.806277,5.012161,3.176603,-6.803869,9.211339,-5.873195,4.938281,9.807120,6.617786,-4.650362,7.269131,4.284119,-4.919195,-4.834537,-7.492017,3.316669,9.223548,-6.215758,1.073133,0.267571,5.688029,-1.653548,1.868404,-4.406068,-4.014732,2.028509,6.627429,-6.924596,-0.632528,-9.320449,5.599442,5.941167,-0.957921,7.399583,6.320764,4.829843,-6.372593,3.162206,1.713748,4.305174,3.526399,-0.542294,7.025132,-4.433210,9.143142,-9.848759,-7.987197,-6.565873,2.665189,-2.950624,-4.969221,-3.339122,8.422535,-7.227955,0.291881,-7.514866,-2.952460,5.180036,-2.465678,6.827947,-3.649724,-5.520000,-3.035687,-4.059538,4.141836,-3.549964,-8.017588,-5.550664,-8.378562,-7.214453,-8.811079,-6.391666,6.957961,-6.931078,7.726618,-0.494046,7.630753,7.062773,2.845332,-9.423739,-2.166306,-7.411938,2.387344,9.141475,8.015044,5.495598,-3.720236,-4.942544,-2.320919,5.810935,-4.845557,1.427672,8.141973,2.219750,-9.000770,9.615366,-7.671695,0.168747,-7.829503,-8.047052,5.272020,-3.710169,1.356890,6.948349,3.922058,-6.227955,-7.562095,-8.259215,-8.630087,-3.422302,4.404723,7.883488,3.440104,0.295729,9.377415,9.321505,8.520523,9.767925,-6.912726,-9.494030,2.521407,-6.590117,7.625034,7.994263,-7.377576,-6.335751,3.382455,-6.565604,9.864611,3.260964,0.344633,7.889168,-7.165416,7.430900,0.746109,-7.665473,-3.976315,1.710806,3.851680,1.291021,-1.255222,3.293752,-9.571207,4.172506,8.346578,-6.811064,6.654016,-6.126178,-5.029809,0.673487,8.239263,9.853291,-2.185983,6.645221,0.073494,0.733830,9.875424,-5.543276,-1.016053,6.554255,-8.524843,-3.356804,6.686538,4.994084,5.563839,4.664025,-0.487698,-3.015262,4.433986,8.597469,3.880617,8.744465,5.963156],[-3.017271,3.503921,-8.032383,3.023759,7.191112,7.864904,4.713243,7.117408,2.206180,6.780695,-7.711197,-6.660589,3.948225,1.146413,-4.662583,-4.351766,-6.201119,-8.328017,4.159260,-6.411876,-2.935920,6.921150,-1.596646,-8.314536,5.870697,5.416987,4.803244,8.125347,4.948449,7.415297,0.813116,-3.193666,1.645297,-7.269009,7.704307,6.252110,-6.571375,9.109628,-4.075486,1.639799,1.053686,0.481380,-2.223352,5.917487,8.116296,3.503221,3.002981,7.447669,-7.070790,3.672375,-1.139663,3.590351,-0.295644,8.533842,-7.903443,-5.567016,7.314044,-0.808889,-8.250936,-1.108456,-1.241909,-3.623625,8.795967,-7.289117,-5.875843,6.858071,4.676330,3.960906,9.280967,-2.905606,2.132575,0.788652,-3.923151,-0.875621,-5.626452,8.837201,-6.662048,-9.955998,4.949579,4.131550,-7.481025,-0.181238,3.370070,2.838017,-1.778589,0.481405,-5.458022,-7.007967,-4.166851,4.066516,2.817489,-5.556228,3.453099,-3.990823,1.140303,-2.231158,-0.988086,5.676909,-3.798067,5.020977,-8.308084,9.657398,7.192846,-5.032654,-4.926919,-1.647925,-8.940372,-1.748361,5.943037,-0.383363,-3.353347,7.166630,6.694573,8.245348,7.071650,-3.205621,7.525646,2.779807,5.854589,-5.771891,4.561694,-4.983101,8.420676,8.363295,4.404809,-0.593542,-5.570302,-6.153186,-9.286941,-3.988335,-0.475951,-8.605115,-9.469540,4.371355,5.110143,2.085836,-6.484676,-8.590943,-6.634073,6.990132,2.064718,-5.802683,4.181207,9.503125,-8.897525,5.200063,-5.467572,-2.375127,6.904688,-4.556770,8.657174,-3.300858,5.715075,-2.595656,-6.516657,6.227454,4.604477,-4.114684,5.165970,-5.803584,7.426239,-3.316817,3.009765,-5.589702,-6.585198,3.599289,-7.385263,-9.602140,-6.784665,-7.771987,-1.095632,-0.838839,3.244028,-4.786755,-2.837240,-4.160506,-5.482008,2.853421,6.099270,1.731312,1.522511,0.020777,-1.689934,2.218579,-4.377721,6.892270,-5.663576,-9.075368,-9.905247,-8.278525,-5.319413,-3.067818,5.344477,-1.440480,7.954384,6.793215,7.282232,0.415427,-6.705487,-4.342748,-2.663012,2.500244,-2.265301,-7.233204,-2.200835,0.054012,1.211098,5.326189,-8.429500,7.424894,4.625455,-7.534988,6.009980,-3.379231,-0.663284,4.260143,8.577043,7.170146,-3.426074,-2.198218,-1.086715,8.146659,-0.136070,7.931310,9.902236,-6.260909,4.660363,7.635527,-1.546911,-8.456305,-9.316699,2.811237,-0.454947,6.223176,-3.348127,1.567742,-1.970151,-4.140347,1.306165,2.154333,-8.849051,-1.044449,-1.795570,7.122457,4.458022,2.595765,4.170931,3.949150,-6.441493,-5.520752,7.321550,0.029959,0.038267,-2.749344,0.711161,8.036898,7.063777,1.158744,5.269933,1.047956,-0.968144,-9.580755,5.109501,9.821901,9.918617,0.047386,8.751421,-5.020222,-9.038538,-2.638944,-2.061808,-0.017218,6.402999,6.223746,-2.390769,2.895766,9.047188,-0.042362,-2.622770,-2.671240,4.904423,-3.979410,9.745560,1.064907,1.705653,4.996502,7.579873,5.038065,-8.149156,3.853672,7.696849,6.892798,6.097694,-8.941436,-6.501263,1.714292,-5.261205,-3.612340,-2.253918,2.245303],[1.802292,4.017269,-8.941911,9.401286,8.509572,9.633588,-3.940188,1.307009,-0.117015,7.668423,4.254493,7.163584,-5.164461,6.339175,9.006917,-6.330678,3.100698,-9.631747,-4.993536,-5.008505,-7.367797,6.243439,9.140243,-4.254970,-7.065115,-0.041742,-1.226367,9.253538,8.828467,1.378188,7.636599,-8.258223,9.557984,7.965466,-7.022611,5.014793,5.121537,8.782260,-1.484216,0.677837,3.153425,-9.698994,3.449666,-9.737243,-9.225454,8.801548,4.566358,-5.571115,-0.090782,9.590293,-2.209571,-9.935517,9.914948,-8.731596,1.239944,-1.165326,6.377290,1.444478,-3.248845,0.828270,5.356741,-7.224855,-2.241695,-9.170883,-1.200211,-8.655320,-3.714985,8.957738,-7.503437,4.356323,2.427038,4.602018,-1.567809,1.194450,-4.279768,5.528982,6.915575,2.001298,2.719756,5.450498,0.015853,-8.643117,-1.130715,7.182210,9.592733,-4.988157,-9.333356,3.006647,-5.595334,4.819384,5.292861,3.803027,-4.890091,7.225318,-8.152632,-2.625986,-5.332023,1.191222,-1.179845,4.207545,-7.534834,-7.581599,0.789752,6.037194,-6.524721,8.850961,-9.210396,-7.570701,5.544541,-0.685624,-5.391706,7.396715,6.957959,4.283957,2.499757,1.705363,3.412145,-0.737114,8.158891,-3.653730,-4.739026,2.384309,-2.180506,0.770640,0.888551,9.677067,-2.975369,-1.036387,-1.793214,3.931662,6.881259,9.131819,-0.107846,3.794632,4.197722,5.363389,9.486774,-4.367764,1.468434,3.799578,5.434325,-3.456944,1.464130,4.004241,9.548925,5.403213,7.695413,7.793311,-5.453695,6.528199,-4.411103,2.328588,-3.739033,-8.494263,-2.399438,-1.798217,-3.481644,3.061181,-9.530633,8.698106,-6.741035,-1.207005,5.664556,2.769949,-2.509495,-9.138985,-0.074407,1.501658,0.865912,-8.031156,4.460627,-6.545396,3.808828,-0.988370,-0.342093,7.485008,-9.755028,9.724331,6.783754,-4.498209,2.781786,3.744892,-7.327797,-2.490263,-8.225697,1.875365,-2.817513,6.429821,-4.845948,2.001048,-8.269580,2.195698,-8.840799,-5.527227,3.806865,8.067588,8.784878,-1.863736,4.420892,-3.501668,6.198935,-7.559481,4.699338,-0.367829,8.229328,-8.471322,-4.549379,-4.695074,-2.575135,6.030154,6.188043,3.984102,9.825018,5.434783,-4.527426,-0.654255,2.482361,4.045371,-1.801006,-7.227526,8.058311,8.169276,-0.338219,-1.044624,4.774544,6.474472,8.997082,8.320358,-0.045965,1.367750,-4.404347,0.499223,-8.084335,-6.436113,-6.029387,-8.354818,-6.423161,7.479676,-2.111762,4.179748,2.913225,-8.412808,4.641737,1.456112,-6.156866,7.162218,-6.615805,2.915014,1.755808,-0.966044,-2.305337,-6.732256,-5.616777,-7.749568,1.516106,-4.391393,-5.988070,5.266992,7.160944,0.860278,-9.485115,-7.129615,9.361062,6.956069,-1.626356,-6.548054,5.300174,1.561724,5.217471,-1.678145,4.683791,7.882445,4.690165,-8.467409,-1.724755,9.129956,-1.304957,8.188200,6.224902,-0.467456,-8.062594,-8.209304,3.393894,-7.007968,7.089214,-4.883939,0.771217,-1.692015,-3.518811,6.146329,7.844501,7.270403,4.041930,7.712766,-8.965897,-7.491365,3.958511,-1.554706,-6.404141,2.258193],[4.983812,-5.218452,5.749940,4.073196,5.091777,-3.792939,3.769528,-0.358883,6.086788,2.573994,-6.057706,-9.881704,7.907425,-9.990729,6.520139,7.641634,8.982015,-1.960557,1.558433,9.998656,-3.231935,5.994564,1.186591,-7.091396,5.508291,-6.183609,8.429468,9.231372,4.255033,-8.503841,8.205969,6.189497,-5.494624,-0.778543,-8.022523,-3.972696,5.431518,-9.786028,-0.527442,1.935098,5.735779,6.710667,5.180880,3.928003,-9.311393,0.596993,8.215071,2.745266,-1.167143,5.663023,1.289789,-1.591136,9.265758,2.722761,2.168140,-1.837440,1.878754,-9.637879,-4.028757,6.338392,3.757811,5.101121,-0.976037,-0.891922,-7.666175,6.775096,-6.582280,-3.040592,-9.562664,9.756748,3.514542,-3.684239,1.490958,6.795458,-3.845318,-6.240449,9.681309,1.446738,-1.924805,1.861820,3.668901,-4.747049,-4.604466,-3.826252,0.147607,-3.338741,6.462902,4.967051,8.736565,-4.984453,3.157738,-8.031294,-4.076741,-2.451849,0.515472,2.474119,-4.639243,-5.600600,5.483654,-7.139714,-9.203242,5.105404,7.690455,-1.528540,1.658739,1.571900,-1.301173,8.693277,6.993948,3.959039,2.394761,2.439571,1.887541,-0.820218,-4.915721,6.851509,-9.261962,-7.180133,5.141244,-7.126740,-1.835477,5.718804,3.837380,6.027202,2.991594,-6.824509,-5.958322,-4.633226,3.496373,-1.975935,5.728979,0.303079,-4.008971,-7.920312,-1.284562,-9.632597,-9.032820,8.986256,-4.432891,-1.262429,-0.555617,1.717875,-3.195465,-6.130966,-5.225007,-7.167374,-9.478698,7.296269,1.793526,-2.094642,3.691083,-7.087525,-6.325900,8.213647,0.965643,-3.175795,-8.628962,-5.631272,-2.146357,6.999763,8.370427,-1.115683,8.091272,-9.975040,7.351836,-8.854899,7.347305,-4.564162,8.273416,-7.428256,3.857479,-2.539024,-0.883457,0.284629,3.357442,-3.022525,-9.702115,-9.508417,-8.300361,-4.847279,2.299848,-6.046972,-4.538287,-6.209931,7.822830,-2.043152,-6.683518,-4.504110,1.671036,2.063182,-7.428577,0.329085,-5.200295,-4.406052,-8.335411,3.435986,-6.149371,-1.923365,-9.639480,-3.724144,2.090135,7.348790,9.004425,9.172759,6.282841,7.458345,-6.443124,-1.141908,-7.825687,4.115483,7.201310,-8.059883,0.969176,-6.788904,9.093469,6.185605,2.122320,-5.888002,-9.642281,2.164092,-4.068384,-0.020184,3.214779,-6.409648,2.028846,-3.574636,-1.909055,-4.155548,0.474589,0.885828,5.818374,-2.843571,7.212977,9.349817,-5.806880,0.978578,3.538083,7.007755,-8.144589,-2.987088,9.388056,0.446778,4.322321,4.042213,-2.066487,-9.149881,4.531013,0.112928,4.111715,5.849126,4.791090,1.987665,-5.888318,-7.823786,-9.041182,-6.801808,0.116343,1.234895,-5.446142,-4.297244,1.651269,-0.763100,3.238511,-4.026240,3.290672,-0.908850,-9.757631,9.461311,-9.959376,-3.497135,9.326402,-6.329961,-1.805167,3.640135,2.476095,3.896141,-3.408284,4.652298,4.202624,0.963968,1.835300,-2.954846,1.496335,-1.009708,3.763236,-2.162747,-5.752730,7.956727,-2.404707,6.713021,-7.309689,-8.137262,-8.004855,-5.332988,9.695182,-9.133426,0.223490,4.204806,5.247146,-6.847936],[-8.595206,9.532733,-6.617369,7.140599,5.345623,-7.699383,7.535370,5.197861,-1.661405,-2.166705,8.106710,2.427679,6.700904,1.259930,-5.173669,0.442081,-5.822223,7.515030,0.994536,3.078607,0.273934,2.459931,-6.424965,3.715354,-6.398278,0.474507,-6.680352,9.907481,0.957344,-1.127275,-8.968962,-4.391301,-7.100452,4.273177,-9.687526,0.725573,-1.435628,-9.352008,9.441859,-3.436492,0.659448,9.355918,-9.598190,4.607376,4.682534,2.526858,6.644817,-0.013956,-8.639150,-6.925670,-9.498958,-1.454813,-6.827984,5.755605,-1.528173,4.807206,9.784143,-8.088692,6.790913,6.264153,8.073938,7.438482,-1.327628,8.349636,7.004407,6.776453,5.601293,0.439988,6.357115,2.705171,-7.396199,3.681000,8.879644,9.705678,-8.198098,6.894880,3.700677,-2.521927,-5.306595,-4.587688,4.443729,1.189938,-8.368657,-7.358031,9.475452,9.894973,6.123724,-1.437591,-1.450357,6.027060,-6.769239,5.945667,3.166185,-9.170226,1.259115,-4.713913,-0.904320,3.948534,-1.287568,-1.947206,8.016332,8.116173,6.733327,8.296488,3.380056,-0.986298,9.099402,4.839953,9.463322,-3.670186,0.271633,-2.121973,-9.025058,-5.173952,6.563718,-8.066724,-5.598030,6.821054,2.616359,-4.169003,-7.264853,5.883486,-4.672878,-6.927994,-3.559406,-1.862439,9.795054,0.025616,-9.797807,-5.841406,7.528079,-1.078129,-3.133916,2.038737,-9.811123,-4.644220,-6.620283,-3.665903,4.252803,-4.132642,6.330775,1.363298,3.283700,-2.883044,-3.246341,-2.911061,8.498303,9.003543,-1.660489,-3.490496,-8.304664,9.327716,-7.763468,1.703594,0.854348,0.239690,-1.564054,8.817017,6.022723,8.873598,2.646825,2.369364,-4.065886,-9.991853,0.390059,3.486697,-5.792636,-5.434168,-1.922522,-7.307345,-3.737181,-1.300461,-6.138009,-3.920658,3.174604,5.724849,7.236093,-5.106954,7.418755,7.320538,9.706683,2.481690,3.423036,-9.960866,7.494090,5.111502,-1.726343,9.006053,-3.884943,-3.008158,8.865177,-3.322616,3.250109,7.139976,5.523875,7.786566,8.033893,-5.734870,1.884650,8.705226,4.021191,-3.305120,-5.349121,-6.121649,5.367661,8.752518,-9.411846,-2.222585,-7.400091,6.344791,-3.104322,-2.281217,6.422778,-1.081927,1.216724,0.822473,7.342225,-1.669081,4.331785,-8.284808,9.713968,-1.984529,0.909867,4.389654,-7.771598,9.051435,-2.582771,-0.229679,9.453293,-0.663692,-8.411286,2.172382,0.532115,-9.710235,8.716911,3.578668,-9.722754,-1.595637,-0.317850,6.028434,-8.290333,8.912751,-2.503777,-2.745826,2.010369,-0.264267,1.833605,8.134464,6.922003,3.989462,-1.502465,6.924465,-8.503969,-1.677927,-3.765314,4.948483,-0.716166,6.068506,9.543040,-3.156185,-4.826856,-6.078243,9.483833,-3.591710,9.677262,0.544993,-3.528605,-2.374124,-9.878324,-5.074858,-4.403891,-8.189263,-2.699941,5.917382,6.647982,-7.323291,-8.041856,3.901846,-1.419173,-2.619334,-4.097581,8.706375,1.701250,2.489232,-1.106452,-9.327598,-3.468380,-1.812024,-0.121782,-6.052135,4.938778,2.716071,6.034458,2.026468,-3.871554,-1.712847,6.763891,5.103444,4.355009,9.033195],[-9.757986,0.099081,-7.173896,-9.060990,6.261114,-0.211875,7.951670,5.543095,2.634952,7.088483,-7.538828,-4.696271,1.718846,-8.823875,-2.866877,5.286099,5.203118,4.746053,-0.430630,-8.418103,-5.222451,-8.365038,-7.648805,7.273535,5.016866,9.157319,-6.797836,0.554197,-9.845521,-0.355580,2.743058,1.957553,-2.601670,-1.669887,-6.115273,0.748600,-8.603596,3.794270,8.004038,-9.124445,3.529653,-5.154664,7.787288,6.017019,-8.417816,-2.981708,1.889682,-5.105201,3.440258,-0.494619,-4.204510,-2.466765,-0.272722,8.653133,-2.872579,-2.463824,-7.146780,7.918228,-4.632461,6.540002,2.388724,3.682023,1.351342,-1.303297,-7.637113,6.982990,-0.665845,7.433333,8.296350,-0.320083,-9.429830,3.800983,-6.611567,-6.057151,4.910174,3.361659,-4.378558,-4.772900,-1.123147,-3.016631,5.899689,3.519711,4.652658,-2.287901,-9.473058,2.032078,5.101390,4.830396,5.136538,6.412668,5.303631,9.472813,1.952239,1.973695,0.849316,-3.176972,9.655222,-6.537457,9.156976,0.808685,-6.259359,-9.259125,8.329180,9.277786,-4.209444,-9.478657,5.386544,7.539359,3.545096,-1.866773,-8.162731,4.856063,9.937454,-9.500232,2.111943,-3.739161,-7.888361,8.135890,-5.259655,6.995107,8.029664,-8.382838,3.831257,0.459042,-6.191743,5.066975,7.885316,7.565280,2.696901,8.831668,1.906884,-2.587803,-5.675965,-2.024697,-9.870330,3.258910,6.283781,-7.030062,8.888098,4.615525,7.722478,-4.487203,2.838633,0.762647,-4.910509,3.841138,-6.668225,7.088250,-9.103972,8.337302,8.089844,-1.051498,-6.220417,-7.852964,5.095581,-9.904015,-4.196355,7.743763,-3.263052,-3.828598,1.770239,-1.074718,0.295576,-3.648725,4.438991,-8.836521,6.360995,3.871012,4.631576,3.495801,9.192098,-2.265579,9.534388,-2.554772,-7.248775,-3.163691,-2.235955,-4.403052,-9.663344,2.854990,-2.015403,8.010510,1.019984,-6.113676,-9.562095,4.751172,0.948309,3.771911,9.903174,-5.568199,6.525929,8.792492,0.459604,6.902478,-1.380679,-6.010193,7.367629,-1.416670,-6.721363,1.850858,5.418160,1.520455,-4.679960,7.148517,-4.124029,-5.943870,-6.979490,1.958664,4.129762,3.055210,-1.063437,-2.390078,8.774612,-7.153577,3.310745,-3.560867,-5.226342,0.319105,4.372758,-6.782956,-2.200138,9.036171,-8.144036,5.430303,5.077332,0.054076,-1.331472,7.486069,3.818514,9.067628,-5.862225,7.094316,1.618566,3.800616,4.696051,-7.420625,-8.012624,-1.502183,6.312397,-3.952630,-4.719756,-3.513708,-7.504121,4.724454,3.710819,-0.793535,-2.752865,-8.136378,7.624840,-0.019583,8.500047,-5.431793,-5.717705,-4.442564,-5.433751,6.740928,-5.302575,8.798287,8.505089,-6.292285,-9.511877,-6.059593,-7.495861,-9.938174,0.729755,-2.847712,-2.130656,-6.069366,5.374406,-8.942521,-9.844743,4.256070,6.098914,1.231026,1.035019,6.971086,-9.923553,-0.843361,-5.791809,-9.090235,-6.015396,-0.164151,-0.233306,7.745117,2.608285,2.288870,1.903987,-3.378674,-0.742204,-7.601362,-4.500879,1.373642,9.093559,8.056577,-2.927250,9.656297,7.812389,0.511582,4.242296,7.833843]], dtype = "float64")#candidate|4422|(6, 300)|const|float64
call_4421 = func_788_call(relay.reshape(const_4422.astype('float64'), [8, 15, 15]))
call_4423 = func_788_call(relay.reshape(const_4422.astype('float64'), [8, 15, 15]))
bop_4427 = relay.bitwise_xor(const_4419.astype('int8'), var_4418.astype('int8')) # shape=(216, 672)
output = relay.Tuple([uop_4415,call_4417,call_4421,const_4422,bop_4427,])
output2 = relay.Tuple([uop_4415,call_4420,call_4423,const_4422,bop_4427,])
func_4431 = relay.Function([var_4414,var_4418,], output)
mod['func_4431'] = func_4431
mod = relay.transform.InferType()(mod)
mutated_mod['func_4431'] = func_4431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4431_call = mutated_mod.get_global_var('func_4431')
var_4433 = relay.var("var_4433", dtype = "float64", shape = (5, 7, 12))#candidate|4433|(5, 7, 12)|var|float64
var_4434 = relay.var("var_4434", dtype = "uint32", shape = (216, 1))#candidate|4434|(216, 1)|var|uint32
call_4432 = func_4431_call(var_4433,var_4434,)
output = call_4432
func_4435 = relay.Function([var_4433,var_4434,], output)
mutated_mod['func_4435'] = func_4435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mod.get_global_var('func_4182')
func_4183_call = mutated_mod.get_global_var('func_4183')
call_4471 = relay.TupleGetItem(func_4182_call(), 0)
call_4472 = relay.TupleGetItem(func_4183_call(), 0)
output = relay.Tuple([call_4471,])
output2 = relay.Tuple([call_4472,])
func_4491 = relay.Function([], output)
mod['func_4491'] = func_4491
mod = relay.transform.InferType()(mod)
output = func_4491()
func_4492 = relay.Function([], output)
mutated_mod['func_4492'] = func_4492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4493 = relay.TupleGetItem(func_4084_call(), 0)
call_4494 = relay.TupleGetItem(func_4085_call(), 0)
output = call_4493
output2 = call_4494
func_4499 = relay.Function([], output)
mod['func_4499'] = func_4499
mod = relay.transform.InferType()(mod)
mutated_mod['func_4499'] = func_4499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4499_call = mutated_mod.get_global_var('func_4499')
call_4500 = func_4499_call()
output = call_4500
func_4501 = relay.Function([], output)
mutated_mod['func_4501'] = func_4501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4530 = relay.TupleGetItem(func_4084_call(), 0)
call_4531 = relay.TupleGetItem(func_4085_call(), 0)
output = relay.Tuple([call_4530,])
output2 = relay.Tuple([call_4531,])
func_4532 = relay.Function([], output)
mod['func_4532'] = func_4532
mod = relay.transform.InferType()(mod)
output = func_4532()
func_4533 = relay.Function([], output)
mutated_mod['func_4533'] = func_4533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_4616 = relay.TupleGetItem(func_3948_call(), 2)
call_4617 = relay.TupleGetItem(func_3950_call(), 2)
output = relay.Tuple([call_4616,])
output2 = relay.Tuple([call_4617,])
func_4630 = relay.Function([], output)
mod['func_4630'] = func_4630
mod = relay.transform.InferType()(mod)
output = func_4630()
func_4631 = relay.Function([], output)
mutated_mod['func_4631'] = func_4631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_4640 = func_3525_call()
call_4641 = func_3525_call()
var_4650 = relay.var("var_4650", dtype = "float32", shape = (16, 14, 8))#candidate|4650|(16, 14, 8)|var|float32
bop_4651 = relay.greater(call_4640.astype('bool'), relay.reshape(var_4650.astype('bool'), relay.shape_of(call_4640))) # shape=(16, 14, 8)
bop_4654 = relay.greater(call_4641.astype('bool'), relay.reshape(var_4650.astype('bool'), relay.shape_of(call_4641))) # shape=(16, 14, 8)
func_1808_call = mod.get_global_var('func_1808')
func_1811_call = mutated_mod.get_global_var('func_1811')
var_4659 = relay.var("var_4659", dtype = "int32", shape = ())#candidate|4659|()|var|int32
var_4660 = relay.var("var_4660", dtype = "int32", shape = (2080,))#candidate|4660|(2080,)|var|int32
call_4658 = relay.TupleGetItem(func_1808_call(relay.reshape(var_4659.astype('int32'), []), relay.reshape(var_4660.astype('int32'), [16, 10, 13]), ), 0)
call_4661 = relay.TupleGetItem(func_1811_call(relay.reshape(var_4659.astype('int32'), []), relay.reshape(var_4660.astype('int32'), [16, 10, 13]), ), 0)
output = relay.Tuple([bop_4651,call_4658,var_4659,var_4660,])
output2 = relay.Tuple([bop_4654,call_4661,var_4659,var_4660,])
func_4667 = relay.Function([var_4650,var_4659,var_4660,], output)
mod['func_4667'] = func_4667
mod = relay.transform.InferType()(mod)
var_4668 = relay.var("var_4668", dtype = "float32", shape = (16, 14, 8))#candidate|4668|(16, 14, 8)|var|float32
var_4669 = relay.var("var_4669", dtype = "int32", shape = ())#candidate|4669|()|var|int32
var_4670 = relay.var("var_4670", dtype = "int32", shape = (2080,))#candidate|4670|(2080,)|var|int32
output = func_4667(var_4668,var_4669,var_4670,)
func_4671 = relay.Function([var_4668,var_4669,var_4670,], output)
mutated_mod['func_4671'] = func_4671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_4695 = relay.TupleGetItem(func_3494_call(), 0)
call_4696 = relay.TupleGetItem(func_3495_call(), 0)
output = relay.Tuple([call_4695,])
output2 = relay.Tuple([call_4696,])
func_4709 = relay.Function([], output)
mod['func_4709'] = func_4709
mod = relay.transform.InferType()(mod)
mutated_mod['func_4709'] = func_4709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4709_call = mutated_mod.get_global_var('func_4709')
call_4710 = func_4709_call()
output = call_4710
func_4711 = relay.Function([], output)
mutated_mod['func_4711'] = func_4711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4740 = relay.TupleGetItem(func_4084_call(), 0)
call_4741 = relay.TupleGetItem(func_4085_call(), 0)
output = call_4740
output2 = call_4741
func_4746 = relay.Function([], output)
mod['func_4746'] = func_4746
mod = relay.transform.InferType()(mod)
output = func_4746()
func_4747 = relay.Function([], output)
mutated_mod['func_4747'] = func_4747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mod.get_global_var('func_4182')
func_4183_call = mutated_mod.get_global_var('func_4183')
call_4748 = relay.TupleGetItem(func_4182_call(), 0)
call_4749 = relay.TupleGetItem(func_4183_call(), 0)
func_2272_call = mod.get_global_var('func_2272')
func_2275_call = mutated_mod.get_global_var('func_2275')
const_4759 = relay.const([8.473223,8.455349,6.132808,9.406568,8.072612,9.191243,0.584499,4.364595,7.445610,4.533259,-4.907344,4.849110,-1.569753,-8.450507,3.024823,-9.004352,-1.908929,-8.748935,-7.732002,-9.851378,7.345045,-4.015335,1.479945,-8.401687,-5.364053,0.080947,-9.968967,-8.699851,2.059818,-0.484115,-0.991595,-0.389764,-0.185660,-3.025234,-0.950864,0.598614,-7.126476,-4.876513,2.091431,3.809139,2.430391,-0.368633,6.167734,-9.481106,-6.321784,-5.656517,6.118491,4.186718,5.326455,1.451331,-7.563649,-8.757040,-0.916308,4.055207,1.360743,7.272530,1.369273,-3.818680,-7.175709,8.756960,3.113120,2.639126,-7.927092,8.393357,-2.502343,-4.258688,6.622680,-0.900669,0.768302,6.716691,-3.568124,8.821592,-8.017893,-6.618689,-9.865909,9.792676,3.513081,7.530068,-1.828699,-9.158127,8.092541,4.288297,8.708436,-9.559150,3.827378,0.058243,1.264891,9.162482,-3.759545,-0.235472,-8.609090,-1.928107,2.243970,9.024324,-1.113696,-6.073446,-2.177222,-7.673262,7.198374,0.227491,-8.451914,-6.626618,5.834814,-5.306429,-6.246875,1.009840,-7.296241,-8.804980,0.798172,7.488170,3.966952,7.660528,-2.309442,6.559776,-8.973848,-3.379664,3.751682,-9.201687,2.937126,-2.381679,-2.560474,-7.699498,-8.863405,-2.994833,-1.312260,1.854948,3.163580,-2.101195,8.699666,-8.325993,-5.528724,-5.907882,3.658890,-7.895183,7.724326,-6.564854,-2.534433,7.778339,-4.807130,-3.827123,5.891972,-5.824949,-5.575842,-2.870179,7.949914,-8.567993,-3.219384,8.910581,9.941428,-1.904049,6.288360,-3.311382,1.046891,-5.141973,7.298439,-6.849078,-5.680922,-2.567086,0.634326,-3.182647,3.755556,-4.058702,-3.367250,6.400646,-0.863553,-6.765273,9.855011,6.828946,-8.023119,-6.815865,9.848128,2.717332,0.774500,-6.994791,-1.102418,7.926108,1.711859,0.122987,-3.626208,-0.542757,-3.898808,-6.241083,0.341649,-5.288469,1.363725,-9.340052,-1.029513,-2.841152,2.428979,-7.864334,-8.237313,8.417329,-6.746259,9.642646,3.127393,0.977153,-3.094568,3.079681,6.006480,-5.891657,-8.733000,1.828534,-4.409063,5.687438,9.417808,9.601927,1.008640,2.391337,-2.269760,-2.212880,-2.908570,8.136357,5.869288,0.392589,7.733929,3.475735,-0.387939,-8.068848,3.272180,-6.675219,8.037249,-7.140882,-9.602562,-5.232944], dtype = "float32")#candidate|4759|(224,)|const|float32
call_4758 = func_2272_call(relay.reshape(const_4759.astype('float32'), [4, 8, 7]))
call_4760 = func_2272_call(relay.reshape(const_4759.astype('float32'), [4, 8, 7]))
output = relay.Tuple([call_4748,call_4758,const_4759,])
output2 = relay.Tuple([call_4749,call_4760,const_4759,])
func_4763 = relay.Function([], output)
mod['func_4763'] = func_4763
mod = relay.transform.InferType()(mod)
mutated_mod['func_4763'] = func_4763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4763_call = mutated_mod.get_global_var('func_4763')
call_4764 = func_4763_call()
output = call_4764
func_4765 = relay.Function([], output)
mutated_mod['func_4765'] = func_4765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mod.get_global_var('func_4182')
func_4183_call = mutated_mod.get_global_var('func_4183')
call_4847 = relay.TupleGetItem(func_4182_call(), 0)
call_4848 = relay.TupleGetItem(func_4183_call(), 0)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4851 = relay.TupleGetItem(func_4084_call(), 0)
call_4852 = relay.TupleGetItem(func_4085_call(), 0)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_4873 = relay.TupleGetItem(func_3494_call(), 0)
call_4874 = relay.TupleGetItem(func_3495_call(), 0)
uop_4878 = relay.acosh(call_4851.astype('float32')) # shape=(16, 14, 8)
uop_4880 = relay.acosh(call_4852.astype('float32')) # shape=(16, 14, 8)
bop_4885 = relay.logical_and(uop_4878.astype('bool'), relay.reshape(call_4873.astype('bool'), relay.shape_of(uop_4878))) # shape=(16, 14, 8)
bop_4888 = relay.logical_and(uop_4880.astype('bool'), relay.reshape(call_4874.astype('bool'), relay.shape_of(uop_4880))) # shape=(16, 14, 8)
output = relay.Tuple([call_4847,bop_4885,])
output2 = relay.Tuple([call_4848,bop_4888,])
func_4889 = relay.Function([], output)
mod['func_4889'] = func_4889
mod = relay.transform.InferType()(mod)
output = func_4889()
func_4890 = relay.Function([], output)
mutated_mod['func_4890'] = func_4890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4932 = relay.var("var_4932", dtype = "float64", shape = (2, 15, 16))#candidate|4932|(2, 15, 16)|var|float64
uop_4933 = relay.cosh(var_4932.astype('float64')) # shape=(2, 15, 16)
output = relay.Tuple([uop_4933,])
output2 = relay.Tuple([uop_4933,])
func_4938 = relay.Function([var_4932,], output)
mod['func_4938'] = func_4938
mod = relay.transform.InferType()(mod)
mutated_mod['func_4938'] = func_4938
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4939 = relay.var("var_4939", dtype = "float64", shape = (2, 15, 16))#candidate|4939|(2, 15, 16)|var|float64
func_4938_call = mutated_mod.get_global_var('func_4938')
call_4940 = func_4938_call(var_4939)
output = call_4940
func_4941 = relay.Function([var_4939], output)
mutated_mod['func_4941'] = func_4941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4953 = relay.TupleGetItem(func_4084_call(), 0)
call_4954 = relay.TupleGetItem(func_4085_call(), 0)
uop_4989 = relay.atanh(call_4953.astype('float32')) # shape=(16, 14, 8)
uop_4991 = relay.atanh(call_4954.astype('float32')) # shape=(16, 14, 8)
uop_4993 = relay.asin(call_4953.astype('float32')) # shape=(16, 14, 8)
uop_4995 = relay.asin(call_4954.astype('float32')) # shape=(16, 14, 8)
func_3588_call = mod.get_global_var('func_3588')
func_3595_call = mutated_mod.get_global_var('func_3595')
var_5000 = relay.var("var_5000", dtype = "float64", shape = (392,))#candidate|5000|(392,)|var|float64
var_5001 = relay.var("var_5001", dtype = "int32", shape = (2080,))#candidate|5001|(2080,)|var|int32
var_5002 = relay.var("var_5002", dtype = "int32", shape = (882,))#candidate|5002|(882,)|var|int32
var_5003 = relay.var("var_5003", dtype = "float64", shape = (1800,))#candidate|5003|(1800,)|var|float64
call_4999 = relay.TupleGetItem(func_3588_call(relay.reshape(var_5000.astype('float64'), [14, 4, 7]), relay.reshape(var_5000.astype('float64'), [14, 4, 7]), relay.reshape(var_5001.astype('int32'), [2080,]), relay.reshape(var_5002.astype('int32'), [882,]), relay.reshape(var_5003.astype('float64'), [1800,]), ), 5)
call_5004 = relay.TupleGetItem(func_3595_call(relay.reshape(var_5000.astype('float64'), [14, 4, 7]), relay.reshape(var_5000.astype('float64'), [14, 4, 7]), relay.reshape(var_5001.astype('int32'), [2080,]), relay.reshape(var_5002.astype('int32'), [882,]), relay.reshape(var_5003.astype('float64'), [1800,]), ), 5)
func_3811_call = mod.get_global_var('func_3811')
func_3814_call = mutated_mod.get_global_var('func_3814')
const_5006 = relay.const(-4.249145, dtype = "float64")#candidate|5006|()|const|float64
const_5007 = relay.const([5.839897,-7.231696,9.531181,-5.036081,1.610533,-1.612430,1.831903,-7.832650,2.392820,8.685145,8.567415,0.965280,-4.809300,0.113733,-3.000276,5.522513,6.541278,-2.158214,-8.834864,8.907535,2.171397,8.132124,-2.278918,0.227494,1.295654,9.871754,-6.092912,-2.826711,-2.291109,-6.562802,-4.278003,-2.213178,3.814422,0.759061,5.942301,3.719431,-6.361705,-7.948411,-1.409268,-7.563623,-8.293326,-4.976334,-6.666397,7.436006,1.481488,-6.139821,-4.549838,4.018761,6.908500,3.579697,8.066377,5.796675,3.216829,-8.561666,9.707986,-9.155965,-8.049682,-2.537399,0.193028,1.152462,8.013435,-7.613786,8.268394,-5.933693,-2.764037,3.343178,-0.680495,6.542573,-8.765302,-7.039334,-9.971625,0.124844,1.988343,-7.808925,-6.735911,7.001799,7.444533,4.905657,-7.788984,7.775642,1.125360,-1.952823,5.798264,-0.996804,-2.626412,5.644304,9.700330,4.745625,-3.466657,2.515582,-4.704095,-5.963383,-7.387539,-2.090784,0.846189,-2.095371,-0.954363,0.258797,-7.409489,-6.280997,-3.548015,-1.076133,-2.649285,-6.396817,8.531591,3.018399,6.012780,6.040260,4.226730,-4.709876,0.503210,-6.932616,9.734392,3.361553,0.447943,-8.027142,4.221096,4.074864,7.946726,-1.019978,1.112650,-0.250808,7.896519,-5.247173,0.152960,-4.075972,6.475576,-3.191448,-2.337029,6.551533,4.875080,4.920404,-9.348013,3.636485,-6.211294,-4.423554,4.181373,-9.845333,-3.895944,-4.454195,9.117007,-7.337643,5.724797,-1.529327,-3.957083,2.101651,4.261695,-8.069558,5.334087,2.088444,2.278178,5.107820,-0.058564,0.271059,-3.857995,-6.576499,-1.038300,2.479575,-4.253198,9.998906,5.775864,-2.406245,6.567556,-2.807333,-7.771486,8.967752,6.238247,2.780485,-5.141989,-3.904331,-3.115623,5.688849,9.403985,-9.814303,-9.448077,-5.382117,-4.640604,-0.101256,4.060508,-1.939415,8.679903,6.626999,-7.747177,-9.866592,3.225338,0.976116,-7.626275,4.365539,6.806517,4.383575,3.467072,6.947299,-3.485711,-2.719963,-6.664293,-5.968847,-8.478506,-6.472388,-5.762125,7.584621,8.295736,7.226672,3.474291,7.662039,-1.639057,-1.803560,-8.031792,8.106493,-3.866816,-9.635244,-0.001627,-3.086952,-1.371265,0.738490,8.559907,8.964735,3.831425,-1.456782,5.113488,-2.587331,-7.444035,0.932975,-9.928011,-6.342796,-1.317841,-8.325285,2.154065,5.973490,1.880196,-0.436313,-2.585235,-3.194287,-7.410630,-3.449609,-6.210837,8.800576,-1.671638,-3.169690,5.355023,1.638914,7.358072,-5.352155,-7.129652,7.594122,-1.974115,-7.538588,9.565768,-8.256850,-2.133007,0.161052,0.070871,4.449442,8.940315,5.786578,-7.495028,8.696965,-8.592488,-1.363728,2.109399,-8.743734,0.374808,-2.824053,6.350801,-3.799272,-4.732097,3.754032,-8.607318,8.333079,-0.370405,-9.261803,8.549797,-7.201267,6.518026,-9.955135,-5.261925,-4.922586,8.554461,-6.032293,-3.722249,-1.531436,-4.913409,-7.447348,4.944127,1.199887,-3.721567,-0.795638,9.512722,7.462950,-9.569302,7.647471,3.505659,-8.066019,4.465601,4.618953,-0.067992,-3.673595,5.195704,7.032073,-3.063988,-3.790364,0.949548,-4.374089,-2.147297,9.253576,2.914319,6.750513,4.390053,0.328307,6.576935,-6.816582,8.635275,-6.861539,5.337487,7.530861,-9.934610,8.778617,-2.353461,-6.880532,7.332458,8.013643,3.719076,6.670236,6.845408,2.208436,-3.953750,-4.590246,-8.091374,-2.927405,-2.168973,7.371533,-2.338170,-7.424871,-5.581216,6.935782,0.226797,-1.358012,1.010766,9.433439,-5.878151,1.764017,-9.402169,-0.416489,6.406130,-3.782638,-1.024078,-0.647038,-0.666445,-2.643188,-2.381886,7.296581,-5.667118,-0.731615,7.098939,-3.714910,-6.836477,-5.433831,3.904335,1.006998,-9.452175,8.380144,2.788273,4.183952,-7.250502,-2.446811,1.817325,-9.503083,0.947828,3.470935,-1.829891,-8.985962,-6.604019,2.736399,-9.905072,-9.212483,2.488921,4.127502,2.849911,-2.695273,-9.520511,-1.033787,-6.315722,-1.044266,3.561739,7.170975,6.566092,-7.687638,-2.829323,-2.756881,-3.164572,7.095704,-0.110708,-4.654367,7.888433,7.601609,9.952648,3.452079,2.331847,9.693741,-8.115686,-7.120109,8.118248,0.089216,7.229749,-4.072469,-5.383776,2.979416,-0.385380,-4.135243,-0.535707,-8.052431,-6.092212,-9.247876,3.436038,-5.207036,-1.656731,6.418648,-5.474634,4.951392,-8.711406,9.677157,-7.445710,7.821309,3.753808,-4.192062,-5.491573,8.991437,3.320128,-7.939356,-8.231543,-7.156955,4.071148,-9.898325,-1.155468,6.618545,5.649906,4.696158,4.063013,-7.117799,-7.017970,4.714506,9.456326,2.385901,-9.635000,4.805063,0.788228,5.578233,-6.361853,-0.091281,2.803645,9.679821,-5.824390,-4.798745,-1.247017,-3.526642,-3.282898,6.690107,8.832688,-3.508003,-4.421574,-7.716297,6.313098,-2.970519,4.236250,-2.559681,8.805242,2.328955,-4.932812,0.976390,-5.523296,1.091412,1.398662,6.215798,-3.233801,-4.479708,4.936856,-8.297929,-2.095293,-9.391639,6.542974,5.228777,0.833184,-1.893853,-7.832456,-3.415271,-8.270281,6.641260,-0.117167,-2.330922,-6.565184,3.387788,4.473308,-1.305462,-4.285225,8.650859,2.645458,-2.363403,6.922869,-7.439026,5.320256,-5.692529,5.671079,6.417433,-2.477544,-3.676943,5.750704,6.035806,3.740337,-7.420857,-4.050442,6.080027,-4.710029,-1.724722,-0.733463,-3.572237,1.468456,3.720484,-8.786871,-9.428024,-3.981740,-9.385241,-1.521912,-7.029772,6.114661,-1.224196,-9.724971,-1.990901,6.997013,-6.189296,8.992055,6.099025,-6.700598,4.734427,-0.359797,6.484858,-0.717709,-4.243633,0.435029,-1.654631,5.568538,7.641971,-1.423007,7.058471,-5.849314,-9.246492,-7.750463,1.276830,-6.989094,4.183528,-9.497473,-8.222523,-0.323347,-1.055766,4.441895,8.002818,6.056349,0.455717,-5.243825,9.176055,-6.449012,-6.937256,-8.607968,4.798505,5.988814,9.761351,-5.048970,-4.347760,-8.871546,-4.269136,-9.219804,-6.621019,-2.705472,8.485593,-0.893582,-1.345385,-0.754396,3.279849,-9.674304,-2.766221,-0.871757,2.176697,4.762249,1.863151,-1.531575,2.269381,6.875012,-6.612746,8.358007,-6.849245,8.073702,8.648150,-4.148328,-9.442805,3.398512,-4.471415,-8.947870,-3.618404,2.845864,7.288452,-8.537532,-7.184086,-3.766509,3.940084,2.662525,-4.618896,-8.242367,-2.272749,-3.066629,5.083324,1.205195,7.256619,-3.828807,5.649720,-9.373157,4.366236,-8.736702,-7.775260,8.157692,-6.123567,-9.884942,4.540732,-6.362171,1.165871,-2.474692,0.188770,-4.980258,7.863932,-9.475085,-0.970037,5.099823,5.817445,-5.605657,-7.262196,-3.285535,-0.048272,5.731360,6.313289,4.516748,2.865104,-9.111587,-1.633151,5.224951,7.291508,-4.251947,-7.499790,3.744995,9.577608,-4.027532,3.893737,4.422343,4.249564,6.787336,-4.044349,9.630631,-3.847621,-6.190461,-9.925796,-1.045664,-0.709528,0.893544,-9.485190,-4.019930,-4.565620,-7.935387,0.312516,0.384061,-1.489040,-5.223276,-5.056719,-3.960083,8.683670,7.231220,6.826847,4.192940,-2.226717,-2.388426,4.920016,2.240030,0.958685,-9.221406,4.139057,4.799494,-1.180938,-5.815275,1.706090,-8.242263,-9.127883,-8.803560,7.622021,8.152583,1.638735,2.910033,-0.115638,-3.921875,-6.390709,7.644465,3.835169,0.638217,-6.148769,-3.010212,1.213933,-7.506763,-9.854260,2.890756,-8.660188,7.527627,-5.085046,-1.150027,0.297117,4.276528,4.890581,3.039182,8.282327,9.128646,5.984372,-4.667465,-1.482511,-2.333535,4.909832,-7.699300,-5.876084,1.079275,-6.711568,8.778343,1.949270,9.021987,0.932674,9.834426,-1.743577,-3.881306,-1.900566,-7.519122,6.979660,1.803271,-9.588913,-1.317884,7.862784,8.883732,-1.358126,-1.410002,5.687637,-5.208804,-2.414649,-2.061839,-1.830445,-7.684414,5.023945,0.356712,3.349633,4.070731,3.842080,-8.948913,-4.111876,-6.734048,9.037138,-2.184263,7.060404,0.736296,-0.119339,-5.190644,5.902079,5.017360,6.483968,1.809225,9.578475,-1.759812,7.650316,0.688533,-5.385734,-7.389068,-8.325958,0.539932,7.965272,-2.547531,-5.399521,5.547993,9.210200,-9.631199,1.770805,-1.397624,-9.177999,4.035794,6.692609,9.721064,7.221176,0.408052,-1.551968,5.204237,-6.952402,6.281899,-9.364403,-6.816928,0.955838,-1.710485,-4.425570,3.086424,8.043545,-5.452422,-5.076608,-4.914716,2.529591,8.834091,-1.034418,-6.807346,-3.319309,4.886255,-8.890515,2.304075,-8.625271,-4.340676,-0.277055,-7.407238,1.636802,-2.317497,-1.644895,4.661578,1.569501,-0.100131,0.123677,-9.917815,-0.359510,-7.799594,7.215730,2.243523,5.412385,-5.080003,4.558295,4.607037,-5.483697,-5.206806,-8.294891,-9.017033,4.059797,-8.613546,0.057984,-8.727372,-9.621342,-5.725952,-9.702676,-2.543829,-1.434778,1.299293,5.223849,-9.963809,4.487986,-5.484415,-1.459596,7.945192,0.478092,-5.709350,-3.184668,6.367096,2.322949,-1.357883,7.857977,1.650686,8.310477,1.373667,1.756860,-7.679769,2.811565,-3.424608,-1.134558,6.276499,4.293712,-8.402692,-3.183045,9.541758,-8.223314,-2.289503,-4.052019,4.407823,-8.824768,-6.566784,-0.672582,-9.312320,0.975852,8.131347,-0.884896,-4.414896,-2.354822,9.791147,-5.621836,-8.490312,-4.829922,-1.860368,-8.073839,4.222548,-4.818518,-8.370619,-3.110523,-4.953797,0.414635,2.863713,-6.142453,-9.427842,7.574734,-9.910199,-3.692751,-2.958808,6.553661,5.997145,-9.016877,-9.931613,-5.085423,2.439326,-6.910440,-1.181855,3.377072,3.782631,2.531686,-4.217391,-1.608651,-4.166229,2.103700,8.715032,1.207454,-8.427308,1.432621,8.326717,2.772486,3.440446,-0.797542,0.263582,8.482002,-9.444202,-1.174998,7.864436,5.797364,3.843075,-7.989802,7.337080,5.400301,4.639035,-2.426135,-8.917217,3.905635,2.069889,-1.607086,4.797771,-0.270622,-0.365519,-7.182907,2.956270,-8.371366,-1.535435,4.617571,-0.372858,4.112097,-6.508405,-3.618233,3.813611,-9.361973,-3.578082,-0.806967,-4.224194,8.803311,4.897303,9.473066,0.562282,-5.932362,-2.955563,7.269803,-4.649290,5.569227,-9.330294,-1.229592,2.051103,2.304757,7.430448,-8.170507,-4.947263,-5.662689,1.353151,-1.249845,9.257540,6.263058,-2.337579,1.788002,2.270374,4.324046,-1.265408,-5.083883,-0.117604,9.155966,7.829003,-3.140094,2.090287,7.637230,-0.255879,4.089224,-4.909505,9.999222,7.711104,-9.966624,8.164012,7.910644,1.599964,-3.393423,1.894476,2.547780,2.253686,-1.879351,-2.222529,5.025191,1.314819,3.621969,8.328540,-9.879607,2.983651,-3.545377,9.935831,-8.363457,4.687642,-9.109911,6.878551,3.463466,4.940021,0.661629,5.540564,-8.369334,-5.080285,4.752617,3.564611,-2.287265,-7.778683,4.101008,-3.336013,-3.638566,-2.161809,-2.055093,-9.622100,-1.684734,2.671684,9.708850,8.988245,8.861571,0.802548,4.842877,9.174761,1.156919,-0.885361,3.389931,4.093619,-6.167487,-3.630672,7.330301,-1.968288,1.920969,3.761541,1.027224,-6.979387,-4.301022,1.759826,-8.145327,-6.958182,-0.323523,9.979467,3.136101,1.393928,-5.734594,2.693122,-3.967470,-3.129986,6.621227,-7.234339,-0.090415,-8.094198,6.597604,-8.831975,-2.615632,9.577045,-7.514776,-7.077915,8.412038,1.432948,3.816967,5.409458,5.461699,1.567744,-0.020529,7.425922,4.816815,6.207301,8.240114,-4.159754,-7.177076,-0.556164,-2.740362,6.269068,-7.586819,-9.317757,4.737462,3.021069,2.002876,6.367996,-0.863552,-9.954515,-6.695304,-9.072274,0.221008,7.909592,7.191846,-2.918839,-7.526248,8.289984,6.458616,8.236232,-0.503837,8.494009,3.591924,0.574359,6.649967,9.016198,5.475129,3.572151,4.858835,4.310320,-0.530649,-1.128026,6.831894,0.460426,4.870077,9.975532,0.820811,1.758802,6.447787,-3.755194,-3.480121,0.650899,-0.191162,5.128382,7.798258,-5.513678,-6.162058,2.186913,-7.344316,-9.649510,7.709475,8.077232,-2.844399,1.090101,2.264419,-0.977746,-6.358037,-3.410584,-4.223720,-4.716230,-6.584988,2.855073,8.644653,-6.119824,6.149882,-3.917986,-5.617610,7.407418,-7.460686,-4.245105,1.957606,-9.446444,-6.617832,-2.698876,-6.189607,3.055878,0.494473,8.665280,9.501659,-0.607853,6.855498,3.043670,9.610823,-3.414959,4.074443,1.793303,-0.237810,-9.159006,-7.345105,2.125651,0.557943,0.284861,-3.366544,-4.128819,-3.840460,-8.408966,0.566618,5.373606,7.642247,-0.411453,8.376631,4.122831,9.527390,-3.705151,-1.145551,-2.561631,-8.704972,-3.444365,8.367511,-5.073223,7.714072,4.437719,-1.330512,7.713877,-6.099979,6.298239,-2.163504,4.338567,-4.810321,7.278165,-4.962774,1.366514,-0.669440,6.303819,-9.976077,2.642072,-1.228666,-2.779692,-6.664486,-5.875375,0.383349,-4.812641,-4.757133,-4.644553,7.231296,0.510494,0.980739,3.834061,-0.789367,9.046273,-4.597778,2.061169,4.074952,-2.671718,8.001132,8.282789,-7.720166,-2.348623,0.914691,5.177977,0.563821,-9.060669,3.415856,-4.789166,-2.933511,-9.002480,-3.093100,-8.707121,6.781441,1.973653,1.214932,-0.997539,-1.208750,4.417446,8.302237,9.744786,9.148518,1.736985,2.780263,8.567270,-3.682984,-4.530528,4.144283,-4.111381,1.434545,8.365087,-8.904153,-7.287324,0.230632,8.361883,9.008794,3.630006,-8.202657,4.208176,-9.929960,-9.765083,9.942736,3.375160,0.140127,1.992121,-4.569589,2.443555,-6.840530,8.051375,9.832332,-7.579432,8.626781,-8.725477,1.918379,4.138210,-5.388059,-0.785172,1.535713,-5.248256,9.562312,0.976535,-0.477442,2.031118,0.944857,-5.233383,3.606397,9.771972,-5.835839,-1.360702,5.647828,6.911109,7.877959,6.867926,-5.651056,7.432138,-0.568005,6.343541,-4.198202,9.720527,1.233217,-8.275962,8.785119,-8.455494,1.128521,9.887495,-9.474646,-6.852621,-7.404116,-6.184097,3.147484,-4.629419,4.119339,3.214152,-6.877030,3.465946,-4.387379,-2.821254,7.607630,-7.002719,-1.572424,0.918592,-9.509985,-4.059096,-5.620513,0.791686,8.363825,7.303055,9.411074,-4.243913,3.567919,-8.798061,2.110020,0.188302,0.061997,-3.956051,3.204729,-3.440801,4.967044,-3.066045,-9.407603,-3.083762,-4.998923,-7.672368,-0.522090,5.330737,-7.679654,2.173856,6.233575,-8.775200,-3.427747,-4.318689,-7.153435,-8.161954,3.710078,8.208569,-1.032429,6.917834,1.928291,1.699922,-4.953808,-6.674270,-8.731494,1.384321,-3.828131,-0.032125,-3.679174,2.329696,7.715965,-4.107067,-7.939694,-6.303308,6.726492,7.187550,4.858589,-8.244764,-1.507341,-7.378154,7.253574,-0.566742,9.899304,-5.537225,2.328281,0.898866,7.558888,0.178869,4.070146,3.836787,-9.740345,-4.360457,7.139506,6.029372,2.121143,-2.527548,3.520887,-3.163941,9.081192,-2.487110,-8.987899,4.898348,-4.709010,-0.738117,2.291855,-3.548992,-9.209261,0.228696,-2.404964,7.341832,3.289545,-5.512283,-3.688592,1.923711,2.872418,-1.775221,3.958198,-6.285207,0.278315,-4.796709,-0.833428,-3.433406,1.575424,-2.477350,-0.968656,3.272859,0.166314,2.017298,-8.500918,7.200204,-4.101842,-3.689917,4.623580,0.314182,0.316049,3.856430,5.815717,-5.873207,-2.651418,-9.491976,9.508430,-2.705994,3.680586,-7.982987,-9.723148,9.956621,-7.246825,7.859188,-3.097325,-8.970255,-5.311704,6.476095,6.397669,-1.622591,-5.782962,-4.195207,-7.113412,-8.700138,-1.608701,0.687965,-2.031167,-6.849604,-8.660096,9.261317,-2.904594,-0.769172,1.267957,-4.524376,-2.807890,-0.661507,0.112847,-2.262549,4.581371,7.953322,0.830899,0.765991,-6.100489,-6.679408,7.380331,9.899243,1.752202,-7.646078,-8.309462,6.905692,9.679092,0.552931,5.883921,-4.857023,5.689410,-2.225133,-0.752322,-1.808887,7.064545,-8.962469,-0.837186,5.231326,3.138197,7.590313,-9.312314,-3.217035,-3.250089,4.100273,2.717301,4.429446,3.095869,-8.419414,3.457047,-0.815607,3.714917,5.393632,9.041749,-7.420715,-4.384093,-2.463449,-5.949981,-0.785396,-9.956990,-2.848597,1.988153,-0.015524,-9.072112,-0.483536,-9.806453,-5.299848,8.325307,1.852569,-0.996896,-1.103468,9.460604,-3.107820,9.814773,1.151195,-4.772248,-6.152942,5.878482,-0.940310,5.303829,7.318189,-5.911581,2.758168,1.892707,-8.788887,-3.329870,-6.091186,1.023630,-9.240741,1.667370,-1.661380,5.143956,8.590785,-2.710579,-2.351580,-3.419140,9.815361,-1.517401,4.629503,0.050506,4.896943,-1.544219,-4.932757,-6.291351,-8.862651,-5.233740,9.914945,5.597452,-2.677209,6.915756,7.134054,-9.297407,-0.960443,-1.321114,-1.158703,6.402051,3.122356,3.318752,4.531606,-9.910186,5.924812,-7.090617,8.369387,6.280420,3.245861,-8.936934,-9.342274,1.318736,6.467138,-5.609573,-3.215806,-2.466152,7.640520,0.350610,0.299238,6.339979,-6.546316,-3.944868,6.574156,0.233243,-0.784274,-3.705255,-9.342698,4.571793,7.305043,8.420906,9.688563,4.384127,8.237526,8.072960,9.703306,6.098050,-6.561646,7.454957,7.110429,4.246938,-4.462047,-3.553139,6.845798,9.998436,-7.294128,-5.386317,-5.519850,-3.289091,-4.399911,-0.167108,-9.780513,9.714082,6.411076,6.749129,4.305941,-1.724979,-4.841608,-8.389578,-4.424867,-1.454806,-7.306181,-3.831171,-7.566344,-5.160839,-6.279995,-4.981036,-1.013957,-2.307788,-0.488732,-3.105535,-1.769198,-4.582761,-9.233908,-4.287886,-9.369367,9.632242,-3.546980,7.286479,-2.999249,8.683114,-6.224005,-8.009673,-7.805666,2.672906,-3.934743,-4.012335,-1.294518,6.933561,-2.147605,-7.961867,-6.221542,0.278206,7.971445,7.878768,8.863816,4.146095,9.067368,-2.708713,-6.615400,-9.644883,-9.150335,7.370156,0.939629,7.812412,-4.004350,-6.329153,5.765278,9.483485,-2.760004,-3.416930,-9.997776,-1.421514,5.776742,5.729007,-7.107582,-7.727977,-7.446473,2.128122,-9.812396,7.856594,-8.351913,1.990029,-8.123730,7.578846,-5.947632,-5.687326,2.343729,-1.992095,4.737640,-0.633681,1.638359,-4.105094,-5.763073,-7.282495,-1.569011,2.855104,7.031219,-4.860139,-3.128732,0.238555,-5.475857,2.443135,-3.039333,-6.850709,3.561962,5.412972,-7.803367,-2.845873,3.672023,3.820553,5.355711,3.704218,-4.023493,-8.138346,5.938411,4.307693,8.394929,9.462611,-9.445032,3.793581,-5.397389,-9.061247,3.852517,6.804801,3.230482,-7.779558,5.884121,-2.082779,-5.928964,-6.965874,-1.920134,4.259638,-0.674923,6.625137,-1.875278,-3.950273,9.322484,5.318327,-2.153560,4.241534,-3.144632,-8.447521,0.857278,1.829593,0.968608,0.064968,6.186289,2.359753,3.164570,-1.664063,1.991288,-7.139829,9.321386,7.848245,-5.336309,-5.547065,6.360790,4.058146,7.836073,-8.708199,-3.460736,-7.972052,-6.192467,-0.278344,-4.054305,1.596807,3.598874,-4.483546,-9.155913,-5.396609,-4.927865,1.617032,8.763815,7.852452,4.261287,7.465628,5.873049,7.312634,4.936181,-7.592577,-0.533698,-8.941600,5.572321,-2.028317,-3.127180,2.745264,1.569184,-6.507340,8.742897,7.256481,0.015727,-9.221968,-3.101735,-5.219605,5.036253,4.329752,3.174679,-3.432420,-5.901255,-8.242582,2.472888,-2.677600,-5.405681,-8.830532,-1.656978,-8.457678,-0.932154,-0.105569,-2.979603,4.328117,9.574950,3.430573,-0.703374,-6.173021,-6.017166,5.789072,-3.037816,9.402451,3.657677,-2.521035,7.748149,3.332910,2.134889,5.059744,6.474457,-2.895492,8.076980,8.957082,1.841985,9.917190,-9.534037,8.326269,-6.422444,5.649552,-5.076474,1.953376,-8.596053,-4.327686,-5.641056,2.337911,-6.083084,9.498446,7.975515,1.924741,-7.080026,-7.571884,7.265052,2.383216,-6.317906,5.970671,-4.023907,1.886278,-3.224026,-0.789555,1.989712,-1.374441,1.958637,7.376466,-0.720290,1.386732,8.491349,2.685474,-3.170609,-7.392438,1.073576,9.600440,-2.494370,-2.314260,-7.818297,-5.588662,-5.648554,6.462037,-1.992623,-6.847167,5.866805,6.546902,5.240389,-3.404937,4.502209,6.438391,-5.123180,-3.856227,2.552332,8.447744,8.753003,8.110043,-7.447906,-5.621249,5.319963,3.379897,-1.797795,-8.754546,0.885515,6.424829,4.745884,4.073714,-0.123401,5.878920,-0.154143,5.200061,-5.076412,3.825274,-8.508678,7.656966,-8.406849,-1.294741,9.068099,1.501662,7.268524,5.018011,0.395090,2.593149,-4.857640,5.866183,0.740524,-5.089621,5.742369,5.668240,8.902425,1.889524,4.690986,9.589172,-1.209088,-6.058789,9.835216,3.212608,-6.124290,-3.527512,8.649587,-9.282266,2.196555,-8.276675,-2.794408,-2.641499,-7.763903,-5.691487,0.039064,-4.624794,-0.788743,-0.124278,-3.588677,-3.344029,-8.722160,1.153069,-9.023764,-3.302798,-4.442185,-6.050929,-4.863171,4.214257,-0.933485,2.448087,7.509222,-1.360376,-6.978702,3.803946,-0.837900,2.808034,8.403454,-5.714458,-8.104246,5.669792,5.382293,-4.349247,-3.441420,-7.745116,4.213421,-2.272329,1.978548,-6.072880,3.395500,-5.279926,8.556288,-2.578357,-1.784823,-8.759107,-9.729823,3.288612,0.759917,4.356874,6.029483,-3.253562,3.286926,0.570089,0.304644,-4.464753,-6.981764,-1.414376,5.437700,-1.004408,5.959277,-8.509551,-8.735856,5.156643,9.227647,3.129485,-9.441989,3.864389,-6.616800,-1.690760,-8.616788,4.860690,1.233291,-2.687998,-9.416381,-1.662014,4.024011,2.283349,4.171448,9.660921,-4.572668,3.809461,1.300732,-0.939256,-6.231070,7.887339,-7.762334,3.523285,2.865448,-5.426543,-4.885249,2.489712,2.712510,9.344740,-5.308383,-9.386389,5.623918,8.157871,-6.676716,-0.825018,6.990277,-9.548012,-6.868257,6.379300,9.717191,-2.541237,5.647413,-0.862711,-8.790024,2.628889,-6.042132,3.467489,7.862853,-0.966951,0.144762,-7.493784,5.194501,-1.130024,-7.505787,7.325189,3.104144,4.863526,3.832404,1.756061,5.889626,-7.555163,-6.941628,7.204183,0.728899,-8.935287,6.054777,7.805087,2.619410,-0.911731,1.140454,4.541324,2.941439,6.989179,-2.909538,7.977570,1.981425,-8.501186,5.242346,-8.222306,9.389016,8.791454,0.891817,4.581225,-6.239902,4.217595,6.043400,-5.320087,3.615918,-1.466909,5.263071,-7.207139,3.108110,-6.999109,-9.284743,9.000803], dtype = "float64")#candidate|5007|(2112,)|const|float64
call_5005 = relay.TupleGetItem(func_3811_call(relay.reshape(const_5006.astype('float64'), []), relay.reshape(const_5007.astype('float64'), [12, 16, 11]), ), 0)
call_5008 = relay.TupleGetItem(func_3814_call(relay.reshape(const_5006.astype('float64'), []), relay.reshape(const_5007.astype('float64'), [12, 16, 11]), ), 0)
uop_5009 = relay.sqrt(uop_4989.astype('float32')) # shape=(16, 14, 8)
uop_5011 = relay.sqrt(uop_4991.astype('float32')) # shape=(16, 14, 8)
output = relay.Tuple([uop_4993,call_4999,var_5000,var_5001,var_5002,var_5003,call_5005,const_5006,const_5007,uop_5009,])
output2 = relay.Tuple([uop_4995,call_5004,var_5000,var_5001,var_5002,var_5003,call_5008,const_5006,const_5007,uop_5011,])
func_5019 = relay.Function([var_5000,var_5001,var_5002,var_5003,], output)
mod['func_5019'] = func_5019
mod = relay.transform.InferType()(mod)
mutated_mod['func_5019'] = func_5019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5019_call = mutated_mod.get_global_var('func_5019')
var_5021 = relay.var("var_5021", dtype = "float64", shape = (392,))#candidate|5021|(392,)|var|float64
var_5022 = relay.var("var_5022", dtype = "int32", shape = (2080,))#candidate|5022|(2080,)|var|int32
var_5023 = relay.var("var_5023", dtype = "int32", shape = (882,))#candidate|5023|(882,)|var|int32
var_5024 = relay.var("var_5024", dtype = "float64", shape = (1800,))#candidate|5024|(1800,)|var|float64
call_5020 = func_5019_call(var_5021,var_5022,var_5023,var_5024,)
output = call_5020
func_5025 = relay.Function([var_5021,var_5022,var_5023,var_5024,], output)
mutated_mod['func_5025'] = func_5025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3872_call = mod.get_global_var('func_3872')
func_3873_call = mutated_mod.get_global_var('func_3873')
call_5030 = relay.TupleGetItem(func_3872_call(), 0)
call_5031 = relay.TupleGetItem(func_3873_call(), 0)
output = call_5030
output2 = call_5031
func_5032 = relay.Function([], output)
mod['func_5032'] = func_5032
mod = relay.transform.InferType()(mod)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5032_call = mutated_mod.get_global_var('func_5032')
call_5033 = func_5032_call()
output = call_5033
func_5034 = relay.Function([], output)
mutated_mod['func_5034'] = func_5034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_5087 = relay.TupleGetItem(func_4084_call(), 0)
call_5088 = relay.TupleGetItem(func_4085_call(), 0)
output = relay.Tuple([call_5087,])
output2 = relay.Tuple([call_5088,])
func_5095 = relay.Function([], output)
mod['func_5095'] = func_5095
mod = relay.transform.InferType()(mod)
output = func_5095()
func_5096 = relay.Function([], output)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4709_call = mod.get_global_var('func_4709')
func_4711_call = mutated_mod.get_global_var('func_4711')
call_5196 = relay.TupleGetItem(func_4709_call(), 0)
call_5197 = relay.TupleGetItem(func_4711_call(), 0)
func_969_call = mod.get_global_var('func_969')
func_971_call = mutated_mod.get_global_var('func_971')
var_5201 = relay.var("var_5201", dtype = "float32", shape = (8, 84))#candidate|5201|(8, 84)|var|float32
call_5200 = func_969_call(relay.reshape(var_5201.astype('float32'), [3, 14, 16]))
call_5202 = func_969_call(relay.reshape(var_5201.astype('float32'), [3, 14, 16]))
func_3811_call = mod.get_global_var('func_3811')
func_3814_call = mutated_mod.get_global_var('func_3814')
var_5204 = relay.var("var_5204", dtype = "float64", shape = ())#candidate|5204|()|var|float64
const_5205 = relay.const([4.323390,4.455778,-2.905768,0.879676,6.342211,1.703471,-5.251048,4.249584,7.397063,-1.600302,7.313079,1.745049,-1.533156,-3.668887,2.158772,-6.714456,6.652326,1.156570,-4.095128,0.421662,3.944611,-7.472695,-5.277848,0.634251,2.639492,8.233464,6.314861,0.963958,-8.758652,8.302474,-3.337541,-7.430583,7.611588,8.303839,-1.800433,1.089250,1.765250,-4.517403,8.727701,9.332447,7.747162,7.891133,-5.400669,-4.409108,-4.646424,-4.806246,1.494512,5.091504,1.169444,-3.629770,3.715140,1.661858,-3.733291,-9.232387,7.158147,-0.405133,-5.676375,4.482996,0.437394,-6.275876,7.161662,-6.227189,6.196993,7.139497,-7.748455,3.185440,6.416938,-6.663116,-6.913770,0.162077,8.875900,-5.719395,2.960244,-4.318029,5.039052,1.054880,0.254174,-2.852064,5.983586,6.212140,3.678684,2.069047,-8.844858,-5.637563,-3.528026,-6.866780,-5.842692,5.645611,7.689584,-8.447769,-4.874091,8.329158,8.783211,9.452306,-4.770312,-1.573813,2.526156,-4.376109,7.451501,-8.042968,7.052699,4.900255,5.196843,7.267094,-9.805995,1.756884,9.526399,7.851596,-6.850442,9.535582,3.211340,0.425270,8.300712,-1.733189,-8.519773,-1.563272,-4.578175,4.384350,1.928109,-9.838370,-2.855143,-4.757163,-0.472954,-4.724947,-6.365811,1.061107,0.392416,-1.551962,7.232825,-7.998552,1.211218,1.073945,-2.381912,6.824387,1.533419,-6.460603,-5.254267,-7.018512,-6.764428,8.242679,-5.267052,-9.365165,5.463368,1.433915,-5.712333,6.079662,-0.985874,8.506551,9.211076,-2.217503,-8.120511,6.496164,-5.542533,1.912662,-4.072233,6.076511,-4.475862,3.309040,6.440866,-5.413951,-3.314917,6.079530,-6.598617,0.461386,-0.134391,-7.100675,-0.352066,6.402253,0.665581,1.823693,2.345939,4.565943,6.680105,-1.104093,0.365759,-9.758971,-2.603392,-2.943023,-7.146929,-4.748494,-3.588682,6.243985,-8.526731,6.845940,5.322502,-2.534515,1.686993,-2.403151,-3.618500,0.847986,1.745198,5.481355,-0.312854,-6.365735,0.914699,8.124202,-3.644628,5.801811,6.491550,-4.747252,4.283255,0.038723,-4.778979,1.202044,-1.725682,-4.041487,-1.947079,1.966773,-1.933348,8.132854,1.795324,6.574579,6.968784,-4.728165,5.982701,-8.642169,1.686759,1.460210,0.739628,-4.982851,-4.420063,-3.436587,-3.342737,7.489160,2.653972,6.001615,2.897017,-3.876235,3.726873,5.765534,-3.074422,1.218662,0.170464,0.773995,-2.122991,8.558758,6.936593,0.333494,8.664845,-8.141284,-7.475346,7.444576,-7.280361,-0.152879,3.063752,-2.686640,3.309114,6.116444,-4.592712,-3.037633,4.427316,2.518531,8.305777,-2.770358,8.426294,4.897753,-8.652537,9.103932,6.283887,-4.100595,8.884394,-2.564101,8.345766,-8.848788,-5.221287,-3.240783,-1.947855,-8.630249,-9.876947,-5.572744,2.506349,2.129657,6.928988,-4.577350,5.106379,3.171709,7.037409,3.248873,1.702396,5.586434,-7.438934,7.868153,5.557786,-7.493579,7.951865,-6.402843,0.058870,-0.737722,-2.052206,2.329011,-0.526073,0.759637,-7.194856,-5.071056,-0.863504,5.194245,1.188024,0.014055,5.177654,-9.610254,-9.268757,6.905632,1.148132,-2.057846,2.849014,9.033044,-8.682739,8.195157,0.049437,9.094209,8.420259,8.503997,7.311840,-7.115544,-7.377777,7.391303,8.082638,-2.887730,3.084456,-6.248620,-9.037885,-9.975665,-1.731098,6.787576,4.331945,7.001401,-4.761311,6.135948,6.249659,-1.973040,-6.526276,5.595460,-4.976203,-2.655886,-9.600268,-3.633265,-3.612754,-9.353170,1.377930,7.197615,-0.253680,8.096986,2.212265,-1.260435,-9.904698,-6.660784,9.639025,-8.636984,-4.999386,5.477334,-1.085889,3.586733,-6.904340,2.524178,-0.023994,-7.175409,-1.537615,9.452978,-6.173064,-1.036072,-6.606938,2.005124,-2.695229,7.535838,3.683876,-9.045597,5.098228,-4.749334,5.237125,3.239243,-0.607433,-3.790003,0.066001,-9.584218,3.269533,0.095397,-1.255178,4.500982,-0.356830,7.030849,3.640895,5.688133,9.549658,-3.817864,-0.389448,-8.746261,6.140242,5.569443,-3.987578,-4.819280,-4.668876,1.043560,4.109536,-6.378579,-7.186157,1.189645,9.763390,-2.732985,-3.133986,3.928377,-7.508091,-8.420176,-7.760795,-2.519728,6.966975,-2.556818,-5.486505,-6.787565,2.985832,-5.235378,-9.163191,3.918354,-7.140809,7.941652,2.696653,4.881459,-3.688244,3.592183,7.789122,-6.451017,9.019168,1.139568,-9.668564,5.341569,-6.776876,1.422176,5.799071,-4.582696,-3.380970,-4.305610,-9.153060,4.593840,1.485447,8.178801,5.212072,-4.664813,-6.307001,-2.384216,9.656727,-6.407715,8.003517,8.374154,2.420765,0.421062,4.990161,0.692934,7.836028,-0.038373,0.868715,-4.722794,5.774124,7.500666,-9.680453,7.425465,1.287967,9.164134,9.406887,4.291125,-9.531477,8.114290,5.239584,1.135156,6.534036,1.143019,8.028372,8.705296,-6.597614,-1.339973,7.771086,0.694984,-2.808190,4.587659,7.657117,-1.429103,9.433583,9.160447,-0.732319,-4.705864,-3.542508,-5.872188,5.543390,6.064528,5.664581,-4.793228,6.714594,1.642395,-9.610965,2.702638,-9.144774,7.782805,0.803586,-2.258478,4.189222,-4.683961,-8.557652,5.264160,-8.927511,-6.942534,-8.458355,-6.654344,-4.124245,0.373938,6.299692,-4.607071,-8.482882,9.022708,-9.917926,6.972324,-8.176083,1.029720,2.584408,-2.826402,6.800301,7.341989,2.629241,8.431885,2.452777,-5.980424,-0.319618,-1.554512,-5.093471,-0.112929,5.719396,-6.931102,1.618579,3.450380,-2.736599,0.546450,-4.685037,-6.181144,-6.604516,4.409792,-1.055330,-5.007566,-0.310019,-5.140435,1.281744,0.069183,-2.593392,-1.022984,1.906931,-2.269149,-1.254594,-3.865119,-3.726455,-8.290127,-8.243418,2.325275,-3.999442,6.126860,-6.493268,1.822697,7.155811,8.768435,3.682978,8.442501,7.782389,-7.469090,6.870009,-8.065126,3.491106,6.969965,-9.474125,7.632794,-4.894993,7.016081,-6.789700,-2.571550,0.348370,6.077454,-9.990396,5.380913,4.018988,3.361513,-1.827316,-8.483633,-3.022561,-9.213606,-8.291906,1.668264,-1.462970,-7.949406,-8.699889,-0.461816,-7.463616,-4.451914,5.413429,-1.227966,6.030214,4.947748,4.879523,-6.040049,9.337158,-6.960382,-0.925743,4.619481,-4.738134,1.898325,-6.600792,-6.013153,2.731104,8.088988,-5.858679,8.355357,9.193774,-0.069143,3.849482,1.966705,2.636680,-8.298787,9.376099,-7.992124,3.660024,-9.856717,-5.771537,-2.463283,6.979927,-4.395898,3.782421,-1.523242,-6.516638,6.610214,6.156988,6.845643,-6.424544,-6.030502,5.325852,7.529960,-6.283224,-2.223775,-3.501688,-4.273106,9.706603,-5.525730,6.821161,4.786602,2.145118,2.229584,1.072323,8.990253,-2.407659,-6.157866,-9.339787,0.568617,4.563221,9.428683,-9.744375,-0.960727,-2.970801,5.943766,9.531254,-8.441982,3.570047,2.664891,-4.311761,1.035976,-5.754464,-3.383705,0.003688,7.004552,5.558745,7.308109,-8.239950,3.939668,-9.730834,-9.289798,-0.279083,-5.698206,-3.102392,-6.486020,-8.326891,-5.742931,2.395940,3.200181,-4.547490,-9.078861,-3.881086,3.635914,7.067900,2.814506,2.717509,2.146336,-7.324863,-9.916180,8.158413,3.611677,-2.335681,-5.892877,-3.088875,-4.812573,-9.000177,7.908425,-0.982172,6.637281,5.009074,0.603908,2.127081,-9.613492,-4.350487,-6.892747,-0.463497,6.839721,8.613871,-1.602652,-9.966175,-7.118787,6.583126,6.844370,3.141542,5.173105,0.335159,8.150881,9.813185,1.334055,-6.270003,1.713836,5.214406,0.365125,-0.416151,6.792696,1.350232,4.434995,1.537378,-1.988421,-3.146835,5.415776,7.385148,-1.091319,5.230855,-3.294269,8.211269,-1.355991,1.747822,-3.693192,6.037714,-4.770821,8.867613,-8.827402,-0.948403,4.008860,-1.239534,-9.856450,-4.394404,3.185516,-8.711080,6.187043,7.740851,1.907023,-7.886442,7.668624,2.268440,-2.332604,2.110821,5.509975,3.080887,-9.244717,1.899576,4.766527,4.758640,5.066581,7.936268,-3.245878,-4.970486,0.550111,4.844068,4.208820,-6.732855,5.142490,-3.653362,0.312940,-2.961657,0.100235,-2.597728,4.142935,2.806882,-0.576251,1.742475,-3.187520,-7.274926,-5.191352,-7.871565,-1.940898,3.304640,-2.660865,-2.985189,-5.518287,-5.798339,-4.441245,-8.472763,-9.090287,2.526756,-0.057258,4.803158,-1.668563,-2.755424,2.370220,-1.807490,5.094381,-6.917296,6.372680,8.139380,7.810562,-9.808218,0.788006,9.162734,-3.311360,-2.270638,8.757051,6.066892,6.132634,1.987085,-7.520697,-7.739789,7.819067,-7.184535,5.749702,-6.244253,2.432169,-1.406839,-5.580590,-3.519454,-0.774655,9.700092,4.248905,-1.589590,9.016211,4.393985,7.099125,5.010679,-1.841602,-4.855980,-2.067365,-8.971226,7.521798,-8.283119,-4.650452,-9.869245,0.238860,4.547933,1.353849,6.721964,4.619755,-9.929914,-9.508435,0.923720,2.043617,-6.903429,0.983860,1.524832,1.376245,-8.963269,6.709402,4.088674,-3.533721,0.016782,-0.326120,-3.351009,7.427447,-8.773274,5.197310,2.167401,2.237683,-4.733782,-8.689242,4.957083,1.956799,-6.503874,7.392754,6.730822,-4.513722,7.230693,5.586520,-3.426133,-6.830254,-5.873293,-3.081177,0.541841,0.196942,-1.899302,1.892955,7.026597,1.806317,3.874112,8.451601,0.865216,0.419840,-6.611831,-5.877039,-8.309766,-2.059897,-5.750959,-6.199679,-8.422299,3.499220,1.562315,8.849138,7.633505,-8.388191,5.389813,5.019077,0.077119,5.084396,9.559216,-1.132890,-7.310726,-7.687301,-3.319970,-8.562316,-0.142560,9.577992,8.309229,4.692347,-1.785511,3.654090,7.083218,-2.318340,-6.231850,6.321680,8.930773,8.940655,-5.556440,7.206006,-9.821547,5.785599,2.234526,-9.588128,3.893667,-5.404671,-6.402793,2.550222,-6.178389,-6.284614,1.432765,0.166825,-1.855583,4.079347,-0.461523,9.216248,-4.723736,-4.510289,7.477108,-8.072362,-1.867763,-7.939801,1.697495,-3.109546,1.064718,-7.642232,-2.438923,-3.776989,-0.857543,7.331023,-8.433806,9.224181,-5.052371,-0.080156,-9.986161,-3.384121,9.742106,1.191442,0.965246,2.666603,5.324394,2.182966,1.934379,-1.022717,2.246837,-8.800766,-7.542249,4.533833,0.732268,-9.634526,-1.301211,-2.452311,-6.617691,-6.686113,-0.286135,-7.626459,4.217197,4.107879,2.374392,-3.848079,-8.026185,-6.076887,-2.313339,5.975153,-7.274404,-4.411578,-9.968035,-4.004342,-9.757288,-7.593475,-8.616711,-7.310406,0.982435,-1.842352,0.847475,0.010909,-4.754206,-4.134816,9.253025,-3.144722,-1.913086,3.671953,-5.531872,4.920118,-2.612400,8.690821,-8.943863,6.962919,6.154093,7.993214,-0.025858,-7.758371,-0.815324,-3.976085,-9.393256,7.727314,6.696496,-5.773480,0.080938,-3.807824,7.886630,-2.988080,-5.788474,1.499273,-7.450928,-4.890971,-8.448162,6.269299,-4.785216,-7.399670,-6.956653,4.393308,-4.683387,3.481615,7.813402,-8.551455,0.360354,-2.092296,-8.203737,-6.486151,-0.063374,2.694984,2.300678,-0.579195,-0.799851,6.688387,-2.713350,-6.159938,-8.544434,-1.391315,-0.604428,-5.576321,-7.779574,8.025726,0.087979,9.120430,-3.161649,-2.906356,5.132689,3.259725,0.771786,-4.653721,8.465775,6.496234,3.172210,1.071450,-2.583789,1.536664,6.041987,7.219959,-4.244645,-5.099621,8.814382,6.570125,0.193218,8.245687,4.568418,0.794162,-3.576657,-7.661707,-2.552411,8.024865,1.899068,8.553262,8.961742,3.724732,7.425788,3.062550,-4.961609,9.035136,0.041064,4.274165,2.579026,-7.903966,2.960106,1.853450,-1.185801,-3.555512,2.153669,-5.632236,-7.444913,8.207408,-5.916520,-5.666656,3.456462,-1.509133,-9.003335,2.445901,-4.643864,-8.665760,-6.739308,-8.287953,-0.415338,-1.871190,-7.447769,7.085416,2.680904,7.797806,0.610190,-0.179665,0.175456,2.181793,-6.948360,7.985231,-6.256676,-7.427276,4.528824,-9.268117,1.916093,-7.446483,3.578919,-2.076027,-9.999198,-6.803182,-6.406095,-8.013265,-0.790054,8.716819,-2.926613,5.968708,-5.983785,8.044902,-3.398022,-9.606098,-8.674363,-9.220275,-9.384351,-0.040131,-7.157693,-3.637004,-6.553768,-8.248575,-0.929256,0.738217,5.953646,-3.651202,2.057046,4.510944,1.360534,7.364832,-3.268920,8.011129,4.351739,8.799948,0.590656,-0.213403,-0.081488,-4.329561,-6.358369,8.316839,-9.448898,-4.856214,9.308949,-7.008940,1.255100,2.768628,9.591826,-7.739425,-8.702121,-4.177174,4.949459,6.200811,5.533442,-2.207576,-3.196919,0.057775,1.863995,-5.830544,-2.559693,9.326075,-0.883247,4.331017,-6.364977,-1.976892,-0.800794,-9.635054,0.729014,2.928777,0.005812,2.487132,-1.958200,-5.817672,-1.359535,-7.985834,9.525474,-3.453407,-2.648961,3.537814,5.620201,-2.344696,-3.960413,4.469890,-4.866467,1.027831,-8.587678,6.588495,4.087203,8.604214,-3.794595,-1.145644,9.380708,-8.099223,6.094417,-5.857930,3.814108,-2.884306,4.354804,-7.748244,-4.097299,5.013034,-2.688512,0.906518,1.746709,0.850053,7.287116,3.538002,-5.915470,-6.756976,-6.786270,-5.504747,2.695380,4.831451,-7.160380,8.465259,4.876563,2.579650,2.591060,-9.082835,3.041904,1.138192,6.736143,-4.877780,-2.359961,3.599705,6.646224,-9.227127,-5.182021,-0.576337,5.515631,-3.039678,-9.664821,-3.655881,-3.377459,-0.274002,-0.582716,-1.086582,7.006471,8.062723,-8.427273,-2.359140,-5.489397,-2.145093,-7.889183,9.398967,-5.218596,4.646134,-4.612069,2.697132,-0.203398,-7.920139,9.831889,-2.158281,7.880822,-7.047716,2.895657,-5.400484,1.841956,-2.661950,2.884691,-6.561812,6.735476,-4.179245,6.798355,6.876646,-8.079333,0.878383,-2.148369,-5.742822,0.834514,8.002094,7.548830,9.519139,9.447272,-6.714273,0.528721,-9.006660,-0.865005,-9.159308,-3.341683,0.136075,-0.321468,-8.332743,4.758745,-7.574708,5.707374,4.081862,5.628797,-2.957958,-9.717643,7.724937,3.525950,8.470061,1.051905,7.036405,8.605815,-3.841148,7.094721,-0.527738,9.924873,-6.196938,1.894532,5.309040,-8.669308,8.760834,-9.378802,-7.523843,-8.323707,-3.851207,-0.541866,-7.590813,-2.478130,6.080756,9.230277,-0.849832,-7.424485,-8.574990,-6.257369,3.290736,7.087734,-8.670913,5.753830,4.851722,-7.386341,1.474089,4.360462,-2.555773,-8.337482,-6.133813,0.619401,-9.631792,4.864721,7.384306,-9.899939,-5.517043,7.606398,-7.767883,5.191504,4.116072,6.992253,-7.915831,-7.847475,-3.609472,-6.989880,-8.779541,-0.315677,-6.037438,6.278771,2.114056,-2.026416,2.749757,-7.026314,-6.372471,8.302270,4.509222,4.301635,-6.814587,-6.750149,-2.381492,4.995637,4.161688,-4.854964,7.407885,5.792124,2.005376,-4.932412,-0.088305,-0.270150,-6.245231,-9.968402,-4.073822,-1.250483,2.068147,-7.209440,3.460623,-5.621978,5.078023,-8.395526,2.287500,3.990642,5.444673,5.158208,1.253732,4.410298,-1.324108,4.863860,6.031759,0.104959,6.868097,-1.064767,5.332152,6.086939,2.235262,8.866543,5.997035,-8.398559,-3.679669,-7.954564,3.319975,3.749071,8.231205,7.015042,-6.283127,9.307560,-0.944132,2.990570,4.608672,-5.491831,-1.690378,1.899548,-4.045881,6.648110,4.935494,-7.651577,3.794463,-7.758383,3.861088,7.196940,-4.613498,7.338479,-2.292531,-3.076584,9.701165,7.784667,-3.607804,4.269004,-1.475863,0.024525,7.192224,-5.294140,-7.002511,1.278308,-9.038076,7.782015,-2.015712,3.574804,1.368349,-9.286347,-4.756530,5.743803,-2.350667,-4.661932,3.528773,-5.289503,1.698563,1.248018,-8.343599,3.064450,7.328415,8.244350,0.128532,-4.899342,7.339750,9.697110,-7.457826,-0.932686,-3.955303,3.603436,3.259376,-8.057877,9.676968,-4.664777,-0.873738,-1.787079,-5.200782,8.122808,5.494149,8.489753,-4.141404,-1.461009,6.984443,9.675292,4.038239,6.654231,6.367997,-5.829555,9.118226,-5.099845,-7.403461,3.224562,-6.631021,8.093052,-7.258208,-7.004985,9.153995,-2.868869,-3.665184,-1.516466,-4.359327,-2.896241,7.183526,-5.765752,8.388672,2.735455,-7.522962,-0.486746,5.192069,-4.457899,-8.959419,5.593039,8.313637,-1.604448,4.128285,-1.231728,-4.073242,3.658548,0.120231,-3.472079,-3.570027,-4.224685,-5.607750,-3.272123,-6.973361,-0.487849,3.805711,0.759753,6.606375,-1.041708,-6.474184,-1.788794,0.841589,1.467991,-2.609401,1.269537,9.688451,7.074017,0.647585,3.369384,-8.539512,-6.217901,8.116006,-2.881141,-6.508284,-5.605513,7.583309,5.725185,-6.660923,3.707287,4.072139,-5.312680,0.765496,-7.957124,8.462173,-2.226937,8.234008,5.451803,-3.219464,3.884819,0.741087,-7.691086,9.458871,6.704901,-5.178784,-7.672578,-0.057664,-8.388515,-7.722219,-1.721032,-4.513487,3.479436,6.905220,7.796890,-5.583244,-1.955905,-7.585871,6.919733,2.870361,4.494486,5.311440,3.885648,-6.350941,3.392855,-6.820743,-7.586198,6.055899,7.214404,0.753697,-7.855723,8.733816,2.375708,0.066281,5.644744,3.704015,-3.507201,-8.934505,-0.300888,9.620541,7.990285,0.950863,4.601463,3.305945,-5.754949,2.217049,4.978243,1.877756,-2.685226,7.354541,6.178402,-8.459052,2.172677,3.562998,-4.119838,-5.723097,3.162846,2.844007,-6.435214,0.946362,6.044193,9.955194,8.605265,4.024416,-7.856743,-8.993688,-2.062733,4.052784,3.180041,3.205828,-8.435368,-2.950140,-1.208440,-4.270843,-9.390556,7.569947,-4.682900,-8.255727,5.806866,7.379057,-7.340357,-0.583290,-3.759422,2.799025,-1.135678,7.596089,-6.875610,-1.074420,-9.890712,0.545455,-3.162691,-7.195924,7.799075,0.955218,5.065946,-0.133282,-5.378413,-4.867072,5.203845,-0.589405,-3.091990,-3.515768,7.931157,5.666128,9.710035,0.502551,8.804379,-2.084673,-2.297255,-9.455494,-3.145669,-0.196927,3.897346,3.634734,-7.360264,-6.641284,-6.590024,5.308661,-4.957124,2.669912,5.878212,0.642939,-4.582151,5.988656,3.468659,-2.362170,3.310910,-2.837939,1.909765,5.808020,-8.011302,6.395879,-0.815735,-3.620867,0.587019,-1.714700,-2.865755,-7.646037,4.149341,-4.209364,5.538414,-6.349752,0.110973,5.385876,-6.940297,-9.078227,-9.505420,0.794227,-3.875061,3.682674,3.022335,-7.903275,-2.485312,3.799238,-4.742969,-7.220186,-0.238549,-1.084989,-5.766939,9.168765,-9.564706,1.092257,5.432221,0.674841,-8.779232,3.482155,-0.191657,-7.784655,-3.563465,-3.989516,8.319956,-0.798082,6.545741,3.514427,-6.353860,9.184728,-3.989532,-7.136645,5.950469,9.931660,-9.099526,-2.553167,-1.857874,3.346406,-9.047843,5.838829,5.572943,8.007200,1.462953,-6.632509,2.380138,-3.762283,-4.933945,5.454236,1.724696,1.012964,-5.010028,-1.533490,-6.371308,4.118991,-7.792954,-5.528651,7.446686,-2.161959,-7.812591,-3.775608,-3.021921,7.639307,0.391968,8.030313,2.500019,3.764999,-1.697179,-3.977635,2.297569,8.287201,8.669392,2.079454,5.662846,9.555169,-9.416180,-4.954380,-9.834612,5.955779,-7.253671,-9.004875,-7.296391,5.133505,-4.315917,4.702188,-0.872708,4.043276,0.979155,-5.865019,-8.026155,-9.396628,0.309898,-2.592915,4.348326,-6.136129,-4.803091,5.401970,-3.171051,4.864572,7.409641,-5.864887,2.141671,2.529941,6.580270,4.937379,1.863721,-0.234889,-0.077089,-9.933531,0.555738,-7.882289,-9.566493,-0.970408,-9.859620,6.158294,-4.893318,8.535868,0.815106,-2.504946,-8.825882,-5.402107,-6.200894,5.642863,7.461233,-6.944963,-1.877096,-9.428051,-2.162979,5.910159,-2.815705,-3.655638,-0.220686,-8.489933,-9.309579,-7.450059,6.398677,-0.920426,-6.840243,-6.812847,-3.618800,-1.223130,8.750118,3.013754,8.393965,4.083687,5.502958,-6.817605,2.521052,9.801312,-4.802752,1.691726,-2.744586,0.009373,4.728890,3.409099,-9.264109,-3.891715,-3.364126,5.074603,-2.121091,-9.584641,7.673650,3.140916,4.101722,-3.980595,1.347678,6.954412,-6.814203,-8.955025,4.503715,3.208372,0.759031,0.211553,8.485010,6.916709,5.652782,3.344722,-4.768113,-7.930663,1.881412,4.834449,-0.334496,-9.069979,3.369722,-6.431280,-5.787064,-9.294436,7.832405,-1.042064,4.533945,-6.471141,5.587117,1.542379,-8.828024,6.629331,-2.157133,-2.581908,-4.014284,8.490496,2.779859,-2.514180,5.636077,7.603853,-6.065439,2.005434,1.948643,9.102714,8.784509,8.549721,-8.146388,5.002173,1.135440,5.572283,2.972824,-6.375298,-2.793542,-3.087189,5.533767,-6.441428,1.805595,3.709799,4.355185,8.482571,2.345000,-4.321748,-0.255977,7.226764,-4.644351,4.467836,1.174637,-6.448771,-4.256708,-3.596543,2.409430,1.673173,-2.916856,8.774523,2.426244,1.757201,4.944710,-8.084338,3.814928,-5.865836,-9.643104,1.997460,9.714501,9.795980,2.715064,2.013824,-0.098382,8.613879,-4.814324,-6.701674,-7.907973,-9.007894,-0.846517,1.769817,-9.782192,8.939558,9.233694,7.117266,-9.881377,-0.401080,-3.955461,-3.055829,-0.075117,5.594428,3.777674,4.847090,0.989015,4.955436,-6.091134,-7.398365,-6.547091,-9.737359,-5.632848,-8.979836,-9.024340,-6.369248,2.739931,-8.940722,8.118649,-2.829158,5.765406,-6.473292,8.525595,-0.922849,-2.509961,8.139807,-8.169637,-5.294788,8.122211,-3.992669,1.399501,-8.948950,4.627496,-8.724222,-4.092589,9.417541,-3.268815,0.848626,-7.735383,-8.029104,-5.797939,4.918543,8.783739,9.371883,7.310854,-9.579139,2.294204,7.683711,0.657086,0.282165,-8.787845,-9.201826,-9.509620,-3.186894,9.824918,8.610727,-7.756070,0.326972,-0.521076,-1.491981,-4.888162,-4.122439,3.114711,-4.979057,2.393983,7.821974,3.943324,8.410330,9.252955,-3.416218,-8.103169,-7.855899,-4.047862,-0.714642,-8.585480,-1.979168,4.652360,-8.459936,-8.741538,-3.106491,-3.921720,0.846710,7.612645,1.454470,7.824228,7.272224,3.254533,-3.074816,9.693081,-4.148743,-2.689691,-8.314706,1.744482,-7.259089,-9.215190,-8.928337,-9.404367,-3.135733,-8.608438,-1.961868,2.375143,9.642334,3.342292,-2.256500,-0.466693,7.257549,-0.399887,-0.057426,-2.759239,7.342852,7.080205,-9.144654,-9.094736,3.446299,-0.601270,-4.306984,-7.427988,9.467184,1.030463,-1.024039,-3.447656,-9.228235,-5.674590,0.228346,-3.174507,9.841478], dtype = "float64")#candidate|5205|(2112,)|const|float64
call_5203 = relay.TupleGetItem(func_3811_call(relay.reshape(var_5204.astype('float64'), []), relay.reshape(const_5205.astype('float64'), [12, 16, 11]), ), 0)
call_5206 = relay.TupleGetItem(func_3814_call(relay.reshape(var_5204.astype('float64'), []), relay.reshape(const_5205.astype('float64'), [12, 16, 11]), ), 0)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_5216 = func_3525_call()
call_5217 = func_3525_call()
const_5224 = relay.const([[[-0.763411,2.451766,-9.751113,5.540927,5.575306,-3.802763,-4.418613,-6.552787],[0.121835,5.055074,7.960261,7.245769,1.806692,3.172321,2.445793,-1.859324],[-3.613852,4.834647,8.666183,-7.031614,5.621613,5.237519,2.605391,4.391187],[-3.436605,6.518494,-7.834955,-4.612461,-0.125786,2.731608,-6.744225,6.139195],[6.107922,5.071328,8.325410,0.708762,-6.735474,-7.626875,-5.982582,-6.954642],[-2.744745,4.438810,9.738193,1.324439,9.830624,9.688435,-1.745944,-5.525504],[-2.257036,6.723103,7.741488,-2.048254,6.084774,0.829976,-2.333110,0.568116],[2.734577,-9.948396,-7.048482,-1.322074,-8.733440,1.344496,-5.803390,-9.599499],[5.297582,-7.734109,-5.227901,0.962975,-3.889782,-0.296574,-2.207089,1.630048],[-4.261232,-0.728348,7.647258,-4.894788,8.095383,2.792772,0.289211,-7.596691],[5.785769,3.928440,2.572589,3.522545,2.144947,8.199358,0.312128,4.655304],[-1.463268,-8.612545,9.814875,6.924327,-1.012224,-4.434462,-3.195889,3.634619],[-8.974457,6.014415,0.827460,7.067702,-5.861730,-8.496563,1.654954,5.563297],[-4.297458,-4.422070,-2.412604,-0.328880,-3.490536,-5.139589,0.498434,-4.761757]],[[-2.293380,2.749352,-6.063304,-3.665287,6.069555,7.205696,6.355498,-3.464625],[-5.628780,7.869444,-3.895381,-5.767565,-0.422562,3.567930,-9.460411,8.736370],[-0.992863,-3.400599,5.045061,8.191024,3.986251,-9.486378,-7.776490,-0.370284],[8.988409,5.972119,5.763345,-8.773469,8.515475,0.690573,9.800721,-9.968102],[-0.831969,-8.591915,-9.679870,-7.468771,-1.664487,-5.166025,-6.582828,-0.024700],[-2.301317,1.395437,6.374371,5.704701,-5.592359,-6.982969,-8.323659,3.671111],[2.284488,-6.326191,6.397388,3.971657,4.254628,-0.619876,9.993288,2.611166],[6.701269,7.823038,-6.138545,3.578375,-7.614860,-1.185818,-1.136907,6.044743],[-9.274898,3.450236,-2.579897,3.632074,-8.898729,3.789486,-3.766121,0.654366],[-5.921120,-2.419537,-6.047808,3.972285,3.995891,0.919600,3.036775,6.381152],[-6.329996,4.369205,-3.984350,1.525733,0.465701,-6.398567,7.216837,3.040948],[-2.547942,5.355321,3.166507,4.307644,-4.605174,-9.792920,4.677226,7.796951],[2.496797,6.207554,-3.676472,-0.006232,8.538241,7.844058,4.786347,-4.264667],[1.640338,-4.809241,-0.694116,7.985108,-0.645472,-9.876721,-5.950657,3.381496]],[[3.790333,6.843709,4.955230,4.637657,-1.026239,-0.180469,8.473967,0.655857],[-5.224940,8.123718,-0.028022,9.649526,-8.173487,-8.808433,-2.464236,-2.242380],[-6.556259,6.212453,-3.133631,1.655356,5.305997,-9.813856,-9.490071,8.905426],[1.543710,-6.452673,-7.005106,-5.082588,5.633213,1.146420,-2.865082,9.836101],[5.369262,4.253553,7.870498,-8.977641,-4.512390,9.216824,-1.058174,9.341231],[4.425548,5.480401,4.384700,1.381399,5.841460,-7.301685,-1.063953,-1.244721],[-9.511798,7.225271,-8.167781,3.813053,-2.057526,-6.333527,4.889042,-8.650480],[4.381436,-6.997094,1.583374,2.751012,-9.790047,3.962326,-8.905487,-8.704522],[8.994076,-4.838538,7.228983,-3.468278,0.680984,8.065345,-3.757514,2.907201],[1.223939,-4.404125,7.498897,0.479302,-7.875229,4.857264,9.330298,6.052059],[3.918494,-5.793620,1.516043,9.721177,7.982502,-8.223330,-6.364733,2.648917],[1.631223,0.608563,-0.936786,3.383063,6.897290,3.708964,-3.372048,0.871975],[-0.140876,1.240236,-3.070457,-7.282318,9.415110,9.066617,7.631801,4.090112],[-3.213241,9.108726,-2.066770,3.914998,0.140704,-4.960126,-1.369400,-7.334210]],[[8.615079,-3.845155,-2.044562,-4.385684,5.523723,7.181492,-3.384889,-3.009133],[5.142983,9.515819,-2.250913,5.647600,5.784768,4.194588,0.225309,8.042631],[1.444760,-8.980939,-2.961747,6.727959,-6.058748,-4.896686,-3.145128,-5.554630],[3.878077,4.935700,-7.012915,7.390013,-9.505229,8.781589,-5.402157,-1.276691],[6.022211,0.393220,8.743807,7.893432,-4.501892,7.256615,-8.379575,-0.811415],[0.620299,3.060927,4.741685,-2.491324,-2.706967,0.260153,-8.871562,-6.579892],[5.164258,7.753691,5.678823,-5.634202,5.450427,-0.357529,6.345328,9.218990],[-2.521954,4.006903,1.828358,4.679356,8.506918,7.171201,-3.334499,7.272529],[1.248549,7.435331,-5.613047,-3.603981,1.588007,3.563165,-0.249356,5.402245],[-6.935190,-8.620228,-0.024032,9.193188,-5.540555,9.174412,-0.725978,-5.196011],[-7.244291,-4.994899,-6.777283,-1.152202,1.203337,-0.832533,-4.774452,-1.606652],[-6.036815,-0.823445,-4.299889,6.072109,-3.202310,-6.275615,6.361003,8.040241],[-4.105139,-6.251885,-1.530356,-3.852398,7.609207,1.277890,-8.208648,-6.464151],[-3.203521,-8.985400,-2.321347,-8.697041,-8.265841,3.849472,9.470608,6.642310]],[[3.426468,-9.667867,-0.817919,6.695291,-9.992666,7.503881,6.012414,9.985162],[0.381108,-8.850135,4.875287,-0.133842,8.705358,-1.115650,-2.866386,-4.135161],[9.234892,-2.177329,0.030665,8.421315,-1.553578,7.343351,-1.665556,-2.652851],[-6.558038,3.875581,1.106939,0.274650,-2.120315,6.886397,-9.526607,-6.363993],[2.536376,1.304640,-0.991549,-5.918961,-5.402874,-0.337860,-0.432379,-0.178281],[-1.310394,4.468213,4.165902,-6.834256,-4.287069,6.652893,-5.593615,-6.177560],[-3.838186,-2.491863,3.605675,4.311328,-1.675257,-2.707903,-7.444037,8.952023],[5.946988,-4.065613,-9.065624,-9.777696,7.604350,2.510180,6.717712,8.023734],[0.036695,-6.504031,-1.084884,-8.639972,-0.987784,6.543690,6.915271,9.414939],[9.511775,-1.779817,-4.302937,-9.657241,-4.960128,0.398189,-8.666691,9.117861],[9.381214,-9.356953,4.500594,-4.731700,3.928847,6.547764,4.396510,6.385510],[-0.108481,-6.153526,-0.391312,-1.398961,-4.341678,-5.016503,-7.873810,-6.995487],[-5.371947,9.878674,-9.401217,2.635635,-4.315409,-1.659982,3.060744,-4.596860],[0.899406,-2.421596,-4.348102,-6.036849,2.685599,5.794057,-3.496140,3.954625]],[[-3.130488,1.556968,-9.362107,-7.378819,6.474267,-8.887585,8.922704,-5.027060],[2.623171,-0.506973,-6.926931,-6.246481,-9.175442,3.366717,-2.575399,3.159701],[-2.620260,8.568920,4.320214,5.618436,-3.970039,6.950569,-3.568593,1.961569],[-7.185482,4.503014,-7.502690,-0.718605,1.068837,-3.569079,-9.331108,-3.041671],[-5.311603,-1.533919,-9.269529,-2.085474,9.881331,-5.545454,0.257005,-4.731242],[8.998081,-1.583951,5.595980,-5.359480,6.489073,-2.406265,-6.361360,-1.897765],[-3.430827,-7.805411,-2.600248,-3.098153,-3.253827,4.193384,-2.643630,-1.098478],[-3.882565,1.242198,2.884259,-2.783970,-6.984133,3.226052,-0.056489,1.019445],[-0.797341,2.761458,-8.077880,-3.598220,-4.269284,8.386931,5.303779,-5.035100],[-5.250044,-2.831166,-1.019286,-3.187917,1.323284,4.109744,7.019986,4.103705],[7.581200,-6.751928,-7.259783,-6.721132,5.234984,1.751543,1.609726,-0.141536],[7.181075,-5.570501,4.555066,9.764864,-7.644619,-9.560471,8.979968,8.237245],[-4.770772,7.542860,-0.813617,6.179349,7.770887,3.125657,2.132311,-8.726758],[-8.777702,-9.161983,-4.545801,-0.900663,-5.609866,-5.967977,-3.321428,-4.065548]],[[-9.579913,6.744946,-2.547827,-5.803441,5.497058,-3.725662,7.793984,-1.608983],[4.944240,1.070345,-7.991954,-6.974033,1.534129,-7.754084,-5.594187,-5.522245],[-8.762582,-0.938141,5.930026,-9.250452,-2.314355,9.799594,-2.794748,5.401310],[-9.059864,8.727155,-2.862489,3.733812,-8.174847,-4.804608,7.906434,8.167307],[-2.281825,-7.096528,-3.934453,9.678552,4.247175,-6.141607,-2.385978,-8.372029],[0.801231,9.910031,1.336022,4.366851,-2.162754,7.090816,-1.956949,-4.490262],[-4.511812,-2.312542,5.876450,5.149946,-0.463668,-8.171982,7.046111,6.465533],[-6.322404,-4.608165,-1.034865,-2.859243,6.389853,-6.064253,-0.524828,5.587012],[2.802253,-9.883022,8.662634,4.178486,6.843663,-7.191881,-7.765472,3.677610],[-0.249123,2.133154,5.940410,3.908299,1.625533,3.612302,-7.634522,-2.491043],[-8.473324,1.630540,-2.153430,-2.564872,-6.340718,-3.951152,-3.586215,-1.949192],[5.018216,9.567667,1.238413,-1.878890,-6.134998,-0.886639,-2.397669,-4.595730],[8.147992,-7.564533,6.711472,-8.461076,4.559978,-4.234909,-7.886297,-9.995706],[-8.534084,1.776618,-6.068814,-5.908435,1.552835,-8.700125,2.369388,-1.878808]],[[-2.562337,-3.400005,3.054194,5.889495,6.542161,6.438949,-5.310365,-4.578088],[3.502488,-8.445808,2.978288,3.556371,-3.560736,-3.648709,-1.597589,-8.630319],[3.356962,-4.382132,9.518762,0.064577,-4.643381,0.587188,-4.290875,3.449225],[7.292701,8.454289,3.589840,5.623017,-6.005903,0.720724,-9.469589,0.892706],[9.935761,8.699745,-1.017631,5.031497,3.854540,4.808240,-8.745660,5.559620],[8.477024,-8.475823,5.254671,-0.705189,1.590178,7.173080,1.551894,6.867959],[-7.939098,-9.252176,1.939744,9.089842,-6.059480,-8.229275,-8.386449,-8.653398],[6.588044,-1.250859,-0.134412,-4.812086,-0.671576,2.897028,4.171402,-1.672112],[4.843195,-5.551523,3.224472,7.423863,-8.002225,-8.856402,-4.431851,-6.572334],[-0.372099,-0.401168,5.808862,-1.009536,-3.551433,-3.755221,1.236185,-3.682943],[5.896765,8.966204,-7.910350,-1.011808,8.916545,2.047376,5.184518,5.492009],[-0.592917,-6.292939,-5.475554,-0.438304,-1.068393,-5.375129,3.221985,7.345032],[8.132553,3.885297,9.378352,1.297783,4.141902,-0.756191,-5.370207,-0.355571],[-6.967303,7.871088,7.996344,6.597867,-5.830294,8.203658,-8.128843,-3.475248]],[[-4.764326,-9.645168,0.109937,-2.417046,-8.319117,6.455097,-6.753157,-1.004565],[-3.153608,0.604742,3.693455,3.928272,5.525674,5.349608,3.475138,4.297233],[-1.296268,-4.649694,6.529075,-3.781133,9.097221,3.678348,8.621829,-8.093448],[2.510424,2.902002,6.630261,-2.363033,-7.839204,-0.926082,9.538260,6.031749],[0.812111,6.553795,-6.109753,8.636359,1.498519,9.881708,-8.747524,-1.245749],[7.749610,-0.027309,-6.843642,6.747717,-2.933372,2.919873,-9.456476,4.224472],[-7.983825,-9.741676,-3.140808,-4.088911,-6.041446,-0.938333,-7.235806,-0.260250],[1.502877,-6.395779,1.290196,-2.962464,0.058679,5.007334,-3.760725,-8.447311],[1.820987,8.564483,-9.753820,4.437073,8.136875,2.817180,-6.078291,8.131873],[-3.144653,-8.520794,-7.466360,8.142051,-9.401423,1.903116,-1.605664,1.359141],[-7.573940,0.683016,-6.533490,-3.365215,1.164334,8.505575,1.116093,6.996861],[-6.528599,-6.310606,-8.848677,3.390054,-5.472393,6.267290,-1.842741,4.001253],[2.144403,0.940644,1.394628,2.378419,8.012836,8.672911,9.283367,-7.955004],[-1.763937,-2.699692,-2.991258,8.225745,-2.321010,5.171360,7.398913,-3.418860]],[[-9.495054,-7.400637,2.421169,-4.761557,2.881233,8.394472,-4.586963,-0.646735],[-8.953924,1.334116,-6.989162,-6.830015,0.033175,2.176532,-1.240772,5.323539],[1.942324,-3.160283,3.198242,4.503692,-4.742786,4.691554,-0.124162,4.540038],[2.883709,-4.237910,5.256650,-7.389518,-2.900559,2.108584,4.787647,0.407313],[9.141991,7.834607,-1.256871,3.494254,-7.865038,2.072799,-5.789135,1.095858],[0.372723,-8.737295,-1.123187,7.456299,-0.690362,7.576989,0.763303,7.601570],[2.554906,1.687803,5.703829,-0.073615,-9.680111,3.055434,8.608557,-2.115330],[-7.361949,0.675227,5.446357,4.334233,-3.503074,-1.504004,-2.781125,-9.462139],[-5.850832,3.889573,-1.737475,1.468884,-4.145043,6.624566,-7.891540,-2.719912],[-7.058241,8.084033,1.045987,-7.846598,-3.404889,8.183803,-7.750547,-0.032602],[-8.457938,-0.117296,4.250465,4.340344,-3.086522,9.236558,-3.125247,4.824431],[-2.641355,-7.235436,-1.895626,0.724530,8.717401,5.194078,-6.760174,0.894046],[1.925465,3.846648,2.876681,-3.529419,9.990064,-5.584390,-0.635947,6.951107],[8.774150,-5.372548,-4.972992,-0.293122,-2.425609,2.420939,6.419268,9.105103]],[[-3.249387,8.802543,0.305339,-0.280191,-7.600916,-3.123031,-6.426849,2.566519],[-6.504233,3.124256,9.406400,-6.385241,8.491779,-1.465261,-8.782808,-9.508259],[-1.073601,4.603341,6.868769,-1.165700,-4.964529,-7.568530,-0.377842,-3.222052],[5.003416,3.377134,0.908454,4.333126,8.234931,0.020326,4.447909,8.918543],[-1.556787,-0.113611,-0.964667,1.836419,9.529091,6.360870,5.018516,-0.325669],[-8.133041,2.738258,-7.371789,-2.053199,-6.302482,8.666545,5.671437,4.681981],[6.830068,-9.794496,-4.218932,9.754293,4.148765,-7.199622,-9.446429,-7.270305],[-0.329444,3.340730,-4.786430,7.764858,3.523234,-7.159191,2.117611,-2.625402],[6.857360,-0.625465,-8.824853,-5.005035,-7.137259,-2.223032,6.366877,9.544579],[-5.166099,-2.085673,8.842456,3.212123,9.881332,3.838011,5.891430,5.444661],[-0.642091,5.923728,8.719003,4.841687,-1.455809,6.909513,-8.342363,8.496489],[0.764318,4.282406,5.679607,2.584517,-2.705273,4.054405,6.358880,7.639410],[-0.524938,-5.653662,-8.402721,-8.099485,-6.914196,-1.476875,-7.150378,9.414290],[-0.033389,-5.031517,-5.707593,-2.580267,6.103477,-7.083811,-8.743536,-4.355347]],[[-1.546792,8.183172,-1.335277,0.858140,3.224150,6.634408,-4.467331,9.472847],[8.293076,-6.590793,5.861516,9.774531,5.258273,7.033482,2.143412,-2.203993],[6.459659,-6.519235,6.449626,-5.419594,9.252834,0.423045,-7.087972,-2.399394],[-5.531337,8.050959,7.457622,-8.746779,5.842850,8.061985,-0.884614,-1.837360],[3.081942,0.662283,3.016879,9.312342,-4.114925,-2.036657,8.299171,-7.067544],[8.271734,1.406783,-8.709585,8.652732,-3.430479,-7.143226,4.121906,-8.395687],[5.871545,4.052753,0.295558,-1.529939,2.835435,-0.141165,2.273495,5.160628],[0.503573,-4.179178,-6.968700,9.644732,-2.742079,9.872083,-5.224739,-2.631453],[-2.610176,-8.601229,-6.224808,0.988833,1.788342,-0.410915,-6.320063,-3.443191],[-5.294110,-0.125525,-8.552236,5.972679,9.701612,-4.673527,-7.646968,-5.996104],[1.164980,-0.766971,3.898253,5.104885,-7.546607,9.252258,1.986148,-9.275459],[-9.720179,9.271281,-7.934366,2.348872,9.793190,7.196744,-1.449638,-1.646871],[6.301715,2.473749,-1.178898,8.604735,-6.825077,-2.714734,-3.773856,-7.404089],[5.429383,-7.525436,-6.286108,5.133776,4.612034,-8.422822,-0.713003,3.201177]],[[9.318699,-4.394784,-1.090735,-2.286484,6.898723,-5.155108,0.669594,-3.210918],[-2.906990,-3.530862,5.443950,9.104981,2.043975,-6.783007,-9.222151,0.360527],[9.034973,-3.187600,9.558041,-1.129134,3.055010,2.247533,3.934321,1.004818],[-0.826271,2.063663,8.372159,-9.524103,-8.713096,9.338555,2.150070,-6.097534],[-4.977849,-4.742254,-8.267693,-5.274012,2.048919,-0.385798,-7.246328,8.428014],[-8.573087,-9.825736,4.604600,-7.364109,1.997489,-4.140745,-3.654547,8.571311],[7.403266,-3.172228,9.259635,9.381516,-6.785435,9.227813,4.296966,9.717545],[9.561387,-7.798088,9.565106,-7.171981,-4.835236,8.634980,-7.768039,4.895873],[-1.193091,5.263372,1.384999,-9.047172,-9.820306,-8.058820,-1.807660,8.800372],[2.838803,-0.988896,-4.803974,4.441644,-8.396898,0.242063,-3.312437,-8.395429],[4.688888,-6.850638,9.910322,-6.831072,-7.064324,8.138866,4.187926,8.514980],[-0.066682,3.038272,-6.703683,8.620427,4.052790,4.009078,-7.462696,-8.621706],[2.360770,-6.792472,8.171372,6.351872,0.638907,4.319083,8.933354,2.031604],[-9.635089,3.048342,0.127036,5.967808,8.838272,-6.854500,9.555445,7.659113]],[[8.077090,1.407578,0.430843,7.891463,9.222935,1.832106,9.309551,2.701652],[3.584858,-4.933027,4.418715,7.380764,1.096265,-9.444164,-0.263767,8.574517],[0.665230,-7.709035,5.297859,4.565545,-4.426060,-1.705745,1.041596,-1.912903],[-2.671046,-4.746087,-9.471770,-7.560339,7.453150,-2.955970,2.239451,-7.171946],[-9.562416,6.426251,-9.168863,8.450791,0.665140,-6.920703,9.384775,7.465934],[4.825305,5.162468,1.950129,4.591312,0.528152,-5.748873,-5.943714,2.496148],[1.367300,-2.351023,-7.495990,7.787809,5.290100,-2.893741,-0.050137,-7.448409],[0.288775,6.037127,-8.593202,-1.058720,0.571162,-8.639618,9.602497,-6.010088],[-3.152615,-1.897279,-7.583229,-8.469838,1.510804,-2.032717,-4.912401,8.711349],[7.495810,-5.150047,-5.354431,5.171001,7.493738,2.390683,7.870925,1.616413],[-7.115726,-9.899113,8.329330,7.496036,-3.315507,-6.950840,-8.070937,-9.950183],[4.154375,7.807231,4.269072,6.385010,-0.782708,6.787713,-1.665030,7.292037],[-0.270736,-0.581033,-1.864757,-9.996220,4.681495,4.666515,4.164747,3.648239],[-6.413046,-5.971230,8.165023,-8.454209,-0.210465,-8.241470,2.264275,6.893159]],[[9.187769,6.337490,9.681674,-5.466762,6.524389,5.029603,-4.326570,0.889367],[7.660145,-7.591859,8.171333,6.983125,6.927150,-8.826983,2.050306,-7.167343],[1.428877,5.297282,-0.636120,-3.764448,7.656924,-1.709847,-7.702684,1.408065],[3.026611,2.765179,-1.138626,-8.861735,-1.878501,-8.032667,-0.668994,-8.003384],[8.345873,5.785827,-7.637254,8.919457,4.635202,1.010867,6.923438,7.513831],[-0.518115,9.658559,3.308926,-5.409036,-6.865384,-8.304827,-3.325853,7.146714],[-6.789353,1.902953,-2.636090,-9.232060,-2.116614,7.272869,-3.704207,-7.201028],[6.789300,-8.119873,6.772380,-7.239792,3.201047,-6.385741,-6.178220,2.401125],[-4.694184,9.555454,2.701297,-6.063197,8.864719,0.522671,2.906662,-8.120271],[1.045860,3.215214,-6.978114,2.335043,-9.790758,4.672870,6.171107,2.015138],[9.728917,-0.040326,9.064216,-7.041477,-4.203172,-9.110459,3.748700,8.820713],[4.309602,7.141640,-5.561294,-8.343514,-1.567259,6.560794,-8.373776,-4.111395],[3.664676,7.739962,8.922765,0.195259,8.151463,1.669359,5.030435,-6.991905],[-7.510190,-0.484828,-6.526806,2.946909,-5.692605,-0.709390,-4.462907,-5.057006]],[[7.507922,-5.769978,0.035473,-6.979171,4.092483,0.261046,-9.410753,-0.497169],[5.566845,-4.015630,4.750978,-1.087527,-3.882553,-1.183037,3.985190,6.297117],[-3.796505,-3.099844,0.475401,7.352146,-7.781732,4.035611,-6.639046,9.176636],[-4.954057,3.601187,-2.920370,7.879196,-8.014089,9.202833,-8.654500,-7.861207],[-5.426956,-6.066935,7.703996,-1.857765,-6.226058,5.370254,7.058739,-1.580943],[-6.617988,9.428081,-4.473573,5.142875,1.939611,-1.595112,1.820348,-5.087019],[0.924920,-6.649993,-8.495636,3.079988,-3.966943,7.629799,0.004255,-1.169051],[5.385922,-7.507484,-0.086380,-9.420794,-7.980680,-6.988288,4.762113,5.357758],[4.291140,-9.969096,9.694075,7.508676,-7.165918,8.107153,-8.708314,8.317079],[-3.339766,5.955617,2.126282,-2.844914,9.595532,-3.347368,5.356751,7.053921],[2.794358,6.509751,0.442814,-8.048047,6.426273,-3.501195,0.302728,-7.702644],[1.049788,3.641180,7.053236,2.266770,-1.302043,-5.531146,6.757278,-6.970768],[1.008170,5.630172,-6.711287,-7.429565,-3.415018,-0.222186,-6.371191,2.380597],[-0.530122,-5.169018,-8.115275,-1.047209,1.480746,-3.785268,5.565104,4.040259]]], dtype = "float64")#candidate|5224|(16, 14, 8)|const|float64
bop_5225 = relay.less_equal(call_5196.astype('bool'), relay.reshape(const_5224.astype('bool'), relay.shape_of(call_5196))) # shape=(16, 14, 8)
bop_5228 = relay.less_equal(call_5197.astype('bool'), relay.reshape(const_5224.astype('bool'), relay.shape_of(call_5197))) # shape=(16, 14, 8)
func_1025_call = mod.get_global_var('func_1025')
func_1028_call = mutated_mod.get_global_var('func_1028')
var_5230 = relay.var("var_5230", dtype = "float64", shape = (180,))#candidate|5230|(180,)|var|float64
call_5229 = relay.TupleGetItem(func_1025_call(relay.reshape(var_5230.astype('float64'), [6, 10, 3])), 0)
call_5231 = relay.TupleGetItem(func_1028_call(relay.reshape(var_5230.astype('float64'), [6, 10, 3])), 0)
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_5241 = func_5032_call()
call_5242 = func_5032_call()
bop_5258 = relay.left_shift(call_5216.astype('int32'), var_5204.astype('int32')) # shape=(16, 14, 8)
bop_5261 = relay.left_shift(call_5217.astype('int32'), var_5204.astype('int32')) # shape=(16, 14, 8)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_5265 = relay.TupleGetItem(func_3494_call(), 0)
call_5266 = relay.TupleGetItem(func_3495_call(), 0)
func_4746_call = mod.get_global_var('func_4746')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_5275 = func_4746_call()
call_5276 = func_4746_call()
output = relay.Tuple([call_5200,var_5201,call_5203,const_5205,bop_5225,call_5229,var_5230,call_5241,bop_5258,call_5265,call_5275,])
output2 = relay.Tuple([call_5202,var_5201,call_5206,const_5205,bop_5228,call_5231,var_5230,call_5242,bop_5261,call_5266,call_5276,])
func_5278 = relay.Function([var_5201,var_5204,var_5230,], output)
mod['func_5278'] = func_5278
mod = relay.transform.InferType()(mod)
var_5279 = relay.var("var_5279", dtype = "float32", shape = (8, 84))#candidate|5279|(8, 84)|var|float32
var_5280 = relay.var("var_5280", dtype = "float64", shape = ())#candidate|5280|()|var|float64
var_5281 = relay.var("var_5281", dtype = "float64", shape = (180,))#candidate|5281|(180,)|var|float64
output = func_5278(var_5279,var_5280,var_5281,)
func_5282 = relay.Function([var_5279,var_5280,var_5281,], output)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mod.get_global_var('func_4182')
func_4183_call = mutated_mod.get_global_var('func_4183')
call_5297 = relay.TupleGetItem(func_4182_call(), 0)
call_5298 = relay.TupleGetItem(func_4183_call(), 0)
output = call_5297
output2 = call_5298
func_5301 = relay.Function([], output)
mod['func_5301'] = func_5301
mod = relay.transform.InferType()(mod)
mutated_mod['func_5301'] = func_5301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5301_call = mutated_mod.get_global_var('func_5301')
call_5302 = func_5301_call()
output = call_5302
func_5303 = relay.Function([], output)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_5321 = func_3525_call()
call_5322 = func_3525_call()
output = relay.Tuple([call_5321,])
output2 = relay.Tuple([call_5322,])
func_5339 = relay.Function([], output)
mod['func_5339'] = func_5339
mod = relay.transform.InferType()(mod)
mutated_mod['func_5339'] = func_5339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5339_call = mutated_mod.get_global_var('func_5339')
call_5340 = func_5339_call()
output = call_5340
func_5341 = relay.Function([], output)
mutated_mod['func_5341'] = func_5341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5344 = relay.var("var_5344", dtype = "int64", shape = (5, 1, 14))#candidate|5344|(5, 1, 14)|var|int64
var_5345 = relay.var("var_5345", dtype = "int64", shape = (5, 3, 14))#candidate|5345|(5, 3, 14)|var|int64
bop_5346 = relay.less_equal(var_5344.astype('bool'), var_5345.astype('bool')) # shape=(5, 3, 14)
func_788_call = mod.get_global_var('func_788')
func_790_call = mutated_mod.get_global_var('func_790')
var_5359 = relay.var("var_5359", dtype = "float64", shape = (6, 300))#candidate|5359|(6, 300)|var|float64
call_5358 = func_788_call(relay.reshape(var_5359.astype('float64'), [8, 15, 15]))
call_5360 = func_788_call(relay.reshape(var_5359.astype('float64'), [8, 15, 15]))
uop_5377 = relay.asin(var_5359.astype('float64')) # shape=(6, 300)
output = relay.Tuple([bop_5346,call_5358,uop_5377,])
output2 = relay.Tuple([bop_5346,call_5360,uop_5377,])
func_5388 = relay.Function([var_5344,var_5345,var_5359,], output)
mod['func_5388'] = func_5388
mod = relay.transform.InferType()(mod)
var_5389 = relay.var("var_5389", dtype = "int64", shape = (5, 1, 14))#candidate|5389|(5, 1, 14)|var|int64
var_5390 = relay.var("var_5390", dtype = "int64", shape = (5, 3, 14))#candidate|5390|(5, 3, 14)|var|int64
var_5391 = relay.var("var_5391", dtype = "float64", shape = (6, 300))#candidate|5391|(6, 300)|var|float64
output = func_5388(var_5389,var_5390,var_5391,)
func_5392 = relay.Function([var_5389,var_5390,var_5391,], output)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5467 = relay.var("var_5467", dtype = "float32", shape = (4, 6, 8))#candidate|5467|(4, 6, 8)|var|float32
uop_5468 = relay.atan(var_5467.astype('float32')) # shape=(4, 6, 8)
uop_5506 = relay.log(uop_5468.astype('float64')) # shape=(4, 6, 8)
output = uop_5506
output2 = uop_5506
func_5514 = relay.Function([var_5467,], output)
mod['func_5514'] = func_5514
mod = relay.transform.InferType()(mod)
mutated_mod['func_5514'] = func_5514
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5515 = relay.var("var_5515", dtype = "float32", shape = (4, 6, 8))#candidate|5515|(4, 6, 8)|var|float32
func_5514_call = mutated_mod.get_global_var('func_5514')
call_5516 = func_5514_call(var_5515)
output = call_5516
func_5517 = relay.Function([var_5515], output)
mutated_mod['func_5517'] = func_5517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5560 = relay.var("var_5560", dtype = "int32", shape = ())#candidate|5560|()|var|int32
var_5561 = relay.var("var_5561", dtype = "int32", shape = (9, 16, 3))#candidate|5561|(9, 16, 3)|var|int32
bop_5562 = relay.multiply(var_5560.astype('int32'), var_5561.astype('int32')) # shape=(9, 16, 3)
bop_5588 = relay.greater_equal(var_5561.astype('bool'), relay.reshape(bop_5562.astype('bool'), relay.shape_of(var_5561))) # shape=(9, 16, 3)
output = bop_5588
output2 = bop_5588
func_5591 = relay.Function([var_5560,var_5561,], output)
mod['func_5591'] = func_5591
mod = relay.transform.InferType()(mod)
var_5592 = relay.var("var_5592", dtype = "int32", shape = ())#candidate|5592|()|var|int32
var_5593 = relay.var("var_5593", dtype = "int32", shape = (9, 16, 3))#candidate|5593|(9, 16, 3)|var|int32
output = func_5591(var_5592,var_5593,)
func_5594 = relay.Function([var_5592,var_5593,], output)
mutated_mod['func_5594'] = func_5594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_5648 = relay.TupleGetItem(func_5095_call(), 0)
call_5649 = relay.TupleGetItem(func_5096_call(), 0)
func_1025_call = mod.get_global_var('func_1025')
func_1028_call = mutated_mod.get_global_var('func_1028')
var_5653 = relay.var("var_5653", dtype = "float64", shape = (180,))#candidate|5653|(180,)|var|float64
call_5652 = relay.TupleGetItem(func_1025_call(relay.reshape(var_5653.astype('float64'), [6, 10, 3])), 0)
call_5654 = relay.TupleGetItem(func_1028_call(relay.reshape(var_5653.astype('float64'), [6, 10, 3])), 0)
output = relay.Tuple([call_5648,call_5652,var_5653,])
output2 = relay.Tuple([call_5649,call_5654,var_5653,])
func_5655 = relay.Function([var_5653,], output)
mod['func_5655'] = func_5655
mod = relay.transform.InferType()(mod)
var_5656 = relay.var("var_5656", dtype = "float64", shape = (180,))#candidate|5656|(180,)|var|float64
output = func_5655(var_5656)
func_5657 = relay.Function([var_5656], output)
mutated_mod['func_5657'] = func_5657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4085_call = mutated_mod.get_global_var('func_4085')
call_5659 = relay.TupleGetItem(func_4084_call(), 0)
call_5660 = relay.TupleGetItem(func_4085_call(), 0)
output = call_5659
output2 = call_5660
func_5661 = relay.Function([], output)
mod['func_5661'] = func_5661
mod = relay.transform.InferType()(mod)
output = func_5661()
func_5662 = relay.Function([], output)
mutated_mod['func_5662'] = func_5662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_5703 = relay.TupleGetItem(func_5095_call(), 0)
call_5704 = relay.TupleGetItem(func_5096_call(), 0)
output = relay.Tuple([call_5703,])
output2 = relay.Tuple([call_5704,])
func_5752 = relay.Function([], output)
mod['func_5752'] = func_5752
mod = relay.transform.InferType()(mod)
mutated_mod['func_5752'] = func_5752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5752_call = mutated_mod.get_global_var('func_5752')
call_5753 = func_5752_call()
output = call_5753
func_5754 = relay.Function([], output)
mutated_mod['func_5754'] = func_5754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4763_call = mod.get_global_var('func_4763')
func_4765_call = mutated_mod.get_global_var('func_4765')
call_5764 = relay.TupleGetItem(func_4763_call(), 2)
call_5765 = relay.TupleGetItem(func_4765_call(), 2)
func_181_call = mod.get_global_var('func_181')
func_184_call = mutated_mod.get_global_var('func_184')
var_5772 = relay.var("var_5772", dtype = "float32", shape = (130,))#candidate|5772|(130,)|var|float32
call_5771 = relay.TupleGetItem(func_181_call(relay.reshape(var_5772.astype('float32'), [10, 13, 1])), 0)
call_5773 = relay.TupleGetItem(func_184_call(relay.reshape(var_5772.astype('float32'), [10, 13, 1])), 0)
output = relay.Tuple([call_5764,call_5771,var_5772,])
output2 = relay.Tuple([call_5765,call_5773,var_5772,])
func_5775 = relay.Function([var_5772,], output)
mod['func_5775'] = func_5775
mod = relay.transform.InferType()(mod)
var_5776 = relay.var("var_5776", dtype = "float32", shape = (130,))#candidate|5776|(130,)|var|float32
output = func_5775(var_5776)
func_5777 = relay.Function([var_5776], output)
mutated_mod['func_5777'] = func_5777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_5784 = relay.TupleGetItem(func_5095_call(), 0)
call_5785 = relay.TupleGetItem(func_5096_call(), 0)
output = call_5784
output2 = call_5785
func_5794 = relay.Function([], output)
mod['func_5794'] = func_5794
mod = relay.transform.InferType()(mod)
output = func_5794()
func_5795 = relay.Function([], output)
mutated_mod['func_5795'] = func_5795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4709_call = mod.get_global_var('func_4709')
func_4711_call = mutated_mod.get_global_var('func_4711')
call_5798 = relay.TupleGetItem(func_4709_call(), 0)
call_5799 = relay.TupleGetItem(func_4711_call(), 0)
output = relay.Tuple([call_5798,])
output2 = relay.Tuple([call_5799,])
func_5804 = relay.Function([], output)
mod['func_5804'] = func_5804
mod = relay.transform.InferType()(mod)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5804_call = mutated_mod.get_global_var('func_5804')
call_5805 = func_5804_call()
output = call_5805
func_5806 = relay.Function([], output)
mutated_mod['func_5806'] = func_5806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4746_call = mod.get_global_var('func_4746')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_5838 = func_4746_call()
call_5839 = func_4746_call()
output = relay.Tuple([call_5838,])
output2 = relay.Tuple([call_5839,])
func_5872 = relay.Function([], output)
mod['func_5872'] = func_5872
mod = relay.transform.InferType()(mod)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mutated_mod.get_global_var('func_5872')
call_5873 = func_5872_call()
output = call_5873
func_5874 = relay.Function([], output)
mutated_mod['func_5874'] = func_5874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mod.get_global_var('func_4889')
func_4890_call = mutated_mod.get_global_var('func_4890')
call_5878 = relay.TupleGetItem(func_4889_call(), 0)
call_5879 = relay.TupleGetItem(func_4890_call(), 0)
var_5888 = relay.var("var_5888", dtype = "float64", shape = (1800,))#candidate|5888|(1800,)|var|float64
bop_5889 = relay.floor_divide(call_5878.astype('float64'), relay.reshape(var_5888.astype('float64'), relay.shape_of(call_5878))) # shape=(1800,)
bop_5892 = relay.floor_divide(call_5879.astype('float64'), relay.reshape(var_5888.astype('float64'), relay.shape_of(call_5879))) # shape=(1800,)
func_4357_call = mod.get_global_var('func_4357')
func_4361_call = mutated_mod.get_global_var('func_4361')
var_5916 = relay.var("var_5916", dtype = "int8", shape = (480,))#candidate|5916|(480,)|var|int8
call_5915 = relay.TupleGetItem(func_4357_call(relay.reshape(var_5916.astype('int8'), [2, 15, 16]), relay.reshape(var_5916.astype('int8'), [2, 15, 16]), ), 0)
call_5917 = relay.TupleGetItem(func_4361_call(relay.reshape(var_5916.astype('int8'), [2, 15, 16]), relay.reshape(var_5916.astype('int8'), [2, 15, 16]), ), 0)
bop_5920 = relay.greater_equal(call_5915.astype('bool'), relay.reshape(var_5916.astype('bool'), relay.shape_of(call_5915))) # shape=(2, 15, 16)
bop_5923 = relay.greater_equal(call_5917.astype('bool'), relay.reshape(var_5916.astype('bool'), relay.shape_of(call_5917))) # shape=(2, 15, 16)
func_5804_call = mod.get_global_var('func_5804')
func_5806_call = mutated_mod.get_global_var('func_5806')
call_5930 = relay.TupleGetItem(func_5804_call(), 0)
call_5931 = relay.TupleGetItem(func_5806_call(), 0)
output = relay.Tuple([bop_5889,bop_5920,call_5930,])
output2 = relay.Tuple([bop_5892,bop_5923,call_5931,])
func_5939 = relay.Function([var_5888,var_5916,], output)
mod['func_5939'] = func_5939
mod = relay.transform.InferType()(mod)
var_5940 = relay.var("var_5940", dtype = "float64", shape = (1800,))#candidate|5940|(1800,)|var|float64
var_5941 = relay.var("var_5941", dtype = "int8", shape = (480,))#candidate|5941|(480,)|var|int8
output = func_5939(var_5940,var_5941,)
func_5942 = relay.Function([var_5940,var_5941,], output)
mutated_mod['func_5942'] = func_5942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5301_call = mod.get_global_var('func_5301')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_5953 = func_5301_call()
call_5954 = func_5301_call()
var_5978 = relay.var("var_5978", dtype = "float64", shape = (1800,))#candidate|5978|(1800,)|var|float64
bop_5979 = relay.bitwise_or(call_5953.astype('int8'), relay.reshape(var_5978.astype('int8'), relay.shape_of(call_5953))) # shape=(1800,)
bop_5982 = relay.bitwise_or(call_5954.astype('int8'), relay.reshape(var_5978.astype('int8'), relay.shape_of(call_5954))) # shape=(1800,)
bop_5983 = relay.floor_mod(bop_5979.astype('float64'), relay.reshape(var_5978.astype('float64'), relay.shape_of(bop_5979))) # shape=(1800,)
bop_5986 = relay.floor_mod(bop_5982.astype('float64'), relay.reshape(var_5978.astype('float64'), relay.shape_of(bop_5982))) # shape=(1800,)
output = bop_5983
output2 = bop_5986
func_5992 = relay.Function([var_5978,], output)
mod['func_5992'] = func_5992
mod = relay.transform.InferType()(mod)
mutated_mod['func_5992'] = func_5992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5993 = relay.var("var_5993", dtype = "float64", shape = (1800,))#candidate|5993|(1800,)|var|float64
func_5992_call = mutated_mod.get_global_var('func_5992')
call_5994 = func_5992_call(var_5993)
output = call_5994
func_5995 = relay.Function([var_5993], output)
mutated_mod['func_5995'] = func_5995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4499_call = mod.get_global_var('func_4499')
func_4501_call = mutated_mod.get_global_var('func_4501')
call_6004 = func_4499_call()
call_6005 = func_4499_call()
var_6027 = relay.var("var_6027", dtype = "float64", shape = (16, 14, 8))#candidate|6027|(16, 14, 8)|var|float64
bop_6028 = relay.power(call_6004.astype('float64'), relay.reshape(var_6027.astype('float64'), relay.shape_of(call_6004))) # shape=(16, 14, 8)
bop_6031 = relay.power(call_6005.astype('float64'), relay.reshape(var_6027.astype('float64'), relay.shape_of(call_6005))) # shape=(16, 14, 8)
output = bop_6028
output2 = bop_6031
func_6039 = relay.Function([var_6027,], output)
mod['func_6039'] = func_6039
mod = relay.transform.InferType()(mod)
mutated_mod['func_6039'] = func_6039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6040 = relay.var("var_6040", dtype = "float64", shape = (16, 14, 8))#candidate|6040|(16, 14, 8)|var|float64
func_6039_call = mutated_mod.get_global_var('func_6039')
call_6041 = func_6039_call(var_6040)
output = call_6041
func_6042 = relay.Function([var_6040], output)
mutated_mod['func_6042'] = func_6042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5794_call = mod.get_global_var('func_5794')
func_5795_call = mutated_mod.get_global_var('func_5795')
call_6047 = func_5794_call()
call_6048 = func_5794_call()
output = relay.Tuple([call_6047,])
output2 = relay.Tuple([call_6048,])
func_6058 = relay.Function([], output)
mod['func_6058'] = func_6058
mod = relay.transform.InferType()(mod)
mutated_mod['func_6058'] = func_6058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6058_call = mutated_mod.get_global_var('func_6058')
call_6059 = func_6058_call()
output = call_6059
func_6060 = relay.Function([], output)
mutated_mod['func_6060'] = func_6060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4045_call = mod.get_global_var('func_4045')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_6066 = func_4045_call()
call_6067 = func_4045_call()
func_969_call = mod.get_global_var('func_969')
func_971_call = mutated_mod.get_global_var('func_971')
var_6080 = relay.var("var_6080", dtype = "float32", shape = (672,))#candidate|6080|(672,)|var|float32
call_6079 = func_969_call(relay.reshape(var_6080.astype('float32'), [3, 14, 16]))
call_6081 = func_969_call(relay.reshape(var_6080.astype('float32'), [3, 14, 16]))
uop_6083 = relay.sigmoid(call_6066.astype('float32')) # shape=(16, 14, 8)
uop_6085 = relay.sigmoid(call_6067.astype('float32')) # shape=(16, 14, 8)
output = relay.Tuple([call_6079,var_6080,uop_6083,])
output2 = relay.Tuple([call_6081,var_6080,uop_6085,])
func_6094 = relay.Function([var_6080,], output)
mod['func_6094'] = func_6094
mod = relay.transform.InferType()(mod)
mutated_mod['func_6094'] = func_6094
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6095 = relay.var("var_6095", dtype = "float32", shape = (672,))#candidate|6095|(672,)|var|float32
func_6094_call = mutated_mod.get_global_var('func_6094')
call_6096 = func_6094_call(var_6095)
output = call_6096
func_6097 = relay.Function([var_6095], output)
mutated_mod['func_6097'] = func_6097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mod.get_global_var('func_4889')
func_4890_call = mutated_mod.get_global_var('func_4890')
call_6115 = relay.TupleGetItem(func_4889_call(), 1)
call_6116 = relay.TupleGetItem(func_4890_call(), 1)
func_1709_call = mod.get_global_var('func_1709')
func_1712_call = mutated_mod.get_global_var('func_1712')
const_6120 = relay.const([9,3,4,4,9,-4,3,-4,-1,-10,3,5,10,-2,-5,-3,10,-10,8,-4,7,-7,-8,-7,9,-3,-3,-10,8,9,-9,-8,2,1,-3,-8,-5,-3,6,-1,9,9,6,-7,1,8,2,-9,5,6,-7,8,-9,-6,-3,2,-2,-6,-2,1,-10,-3,4,-7,-2,-6,-7,-2,9,3,-4,6,8,4,-4,3,-5,-6,-8,7,8,-10,10,-5,-7,-1,-5,-9,-6,3,8,-5,2,-2,-8,10,-2,3,2,1,6,2,-8,6,-4,5,7,-4,1,9,7,-5,2,3,8,5,5,-7,8,6,-2,-3,10,10,-5,3,2,3,10,8,-9,1,-10,-6,4,10,4,7,-3,9,5,2,-2,1,-10,-9,2,2,10,2,-1,-10,-8,-10,3,2,3,-7,-6,6,-7,-4,7,-5,-3,1,-9,-8,-9,1,10,-1,-5,8,7,9,1,7,9,-6,-6,6,-9,6,3,-9,-9,5,-7,7,-1,9,10,-1,-5,1,4,-9,-10,-1,10,-7,8,-5,7,10,10,9,3,-9,6,10,-7,-5,3,1], dtype = "uint32")#candidate|6120|(216,)|const|uint32
const_6121 = relay.const([-2.235597,5.798111,-3.837585,-7.213384,-1.441836,-3.021073,0.892371,-5.088944,-4.109108,-5.324421,-1.738457,-8.654449,4.429245,-2.099584,-3.642873,8.540803,2.548982,5.444762,7.399461,-4.265328,-6.302610,-9.909929,0.553587,-5.473629,4.554788,-0.874936,-5.664265,-9.569404,-7.570076,-7.532985,-4.345135,2.624562,-2.092640,2.595582,0.488003,-5.596362,-4.389020,4.545491,8.297853,5.506251,-1.406039,-8.732399,-1.975279,-1.793545,2.441498,5.760620,-6.001991,-9.086922,-0.333496,3.008191,6.530833,8.257628,-0.331691,-3.202595,-1.457765,-4.881991,1.168296,9.281032,8.048401,-4.060890,-4.058737,0.407226,-4.829493,-2.330290,7.123499,-9.046250,7.714702,0.926739,-8.886650,8.651943,3.685300,-6.529325,-3.668393,5.520489,5.687775,-2.152037,9.131657,6.348093,7.543122,-8.169909,7.407437,-0.936793,-6.514905,-0.445735,0.703513,4.395365,3.299817,7.144902,5.770695,-0.577069,-9.365119,7.704466,-4.685157,7.467809,-1.423836,-5.373666,2.763820,-6.695613,-3.387017,-9.881664,-1.470805,3.413239,7.446233,5.932359,4.512908,-9.706237,-3.524551,5.332550,-5.007880,6.648648,8.977630,-6.897334,-6.031332,-5.212209,1.264383,-4.968970,7.551773,0.839836,-2.939114,7.011840,-4.308877,1.061722,9.711511,0.543096,3.025794,-0.650361,3.171411,5.644853,7.710593,-2.961601,7.980679,-3.297327,-1.053648,1.799998,-0.730333,-3.941927,-8.261631,-6.328187,8.602472,2.433341,-0.593773,2.346529,-9.737308,6.317522,-8.438310,-6.561514,-1.935997,-3.226699,2.974767,9.486694,3.715643,-0.682676,5.352738,5.639694,0.300100,4.875995,2.499104,9.763310,-9.416405,3.031098,-1.510839,-0.595246,4.236248,-8.012859,-6.417461,-0.457490,3.445248,-3.526117,7.960969,3.295384,-0.399791,-7.197501,8.873923,-1.336487,-7.609329,1.334142,7.338121,1.893883,-9.833673,0.303420,5.000189,-4.127640,6.694857,7.108950,8.162325,8.128750,-2.208741,2.160535,9.703276,9.247312,8.653181,-7.871172,-2.006525,7.344269,0.860753,9.260453,1.091542,-7.585756,-0.057480,6.255320,-6.437410,-1.390970,4.519726,5.068442,2.459559,-8.431789,7.918568,9.240230,7.624874,-1.149254,-3.695430,9.912330,-5.697521,-6.177498,-0.053884,-3.704808,-7.321756,6.763493,-1.091093,-4.770518,2.237488,-7.314822,4.286460,-7.129835,2.437250,-2.325213,-2.192933,8.224074,5.441036,-1.212721,1.635403,-0.220044,5.949546,1.028769,-5.622400,2.781017,7.868907,-4.358266,4.932880,3.345046,-8.145885,-2.523561,5.444404,3.934515,2.491947,-9.197365,-3.642817,-2.283108,-7.786209,5.317541,3.973678,-4.567287,-2.650469,-1.365376,0.650426,-7.134972,5.309612,6.687746,-5.446860,8.767640,-4.061891,2.692209,-0.800489,-0.257153,7.434095,-1.740619,-6.603224,6.663579,1.880693,-4.476907,6.300629,-1.257573,-1.151293,-3.465404,-2.878338,-2.864780,1.520556,9.361312,-5.367295,3.223511,7.008988,-7.029899,-5.035286,4.953529,0.454940,5.805090,-7.212856,8.123882,3.723520,-0.782849,5.596622,-2.983319,-3.289080,8.189056,1.736865,-7.800197,-1.459118,-8.670679,2.587760,-8.196903,6.007325,3.169730,-3.795296,-3.940972,-9.955511,2.045137,-2.623143,3.250765,-5.103597,3.887332,4.897925,-9.469615,-1.585469,-8.409580,-8.253040,3.165204,-8.853817,-1.816625,5.992176,-7.039053,6.916674,-2.321768,6.207848,-5.507576,-7.011292,8.555273,3.559213,5.552769,-9.427236,1.093414,-6.687662,1.285674,-7.015042,7.801690,-7.641465,0.336610,-4.933385,5.768611,8.131078,0.739486,2.371589,6.309778,-1.285003,9.361021,3.469891,-2.343627,1.082585,-8.265852,3.311408,8.224029,-3.322237,8.698612,-6.551307,-6.440251,-1.125998,6.338453,9.066094,-3.031770,3.351721,-6.144588,2.519380,5.117217,-0.400349,-4.378161,6.610515,-4.644393,-0.859172,-4.545958,-1.892051,4.360372,-4.987064,7.576592,6.016935,-1.705715,4.167767,5.419593,0.102716,6.168691,0.711637,4.505587,1.529159,-3.740319,8.243655,8.471068,2.930987,-1.283970,1.797818,2.047820,2.629236,-9.752847,4.238555,9.423901,-2.253042,-2.439244,-0.384188,-2.216908,0.547067,-7.829045,-8.997934,4.487971,-7.357436,3.907110,1.215336,-6.708155,-3.307700,5.523616,2.315873,-5.381041,5.354005,4.261401,-3.665913,9.007084,-6.832886,-4.842748,6.315938,-9.299228,5.236211,-1.687703,4.455189,-6.914531,2.630691,4.790649,-4.154306,-6.222540,-9.478338,-2.643629,5.983217,1.501046,3.175584,-3.996838,9.386932,-0.842931,5.308686,9.990945,6.034611,-9.540874,1.140140,7.285556,-5.847425,0.776105,6.236266,4.370298,8.912627,-5.585206,9.522822,-8.346465,-7.949549,8.367376,7.040132,-5.782849,-5.218712,7.937282,-4.956149,-6.446258,-6.962382,2.365600,9.515822,-0.872706,5.853264,8.753091,-7.887392,8.663627,-7.103273,-3.111723,8.369204,-6.197738,6.479110,7.711287,1.536734,-4.643289,8.373740,2.586100,7.236913,-3.037991,5.195626,6.975766,6.311781,-2.285316,6.185301,1.125286,4.536192,7.530867,5.462216,-2.280169,-8.430364,-7.721382,-2.231157,-7.961349,8.927209,1.592781,-7.250182,-3.683550,5.493288,8.649497,5.180778,-9.501901,-7.649438,-8.758503,-6.608332,-9.077758,3.540876,4.522612,4.220994,8.270195,-7.749934,7.280202,9.403900,-8.342480,-8.254987,-3.900773,-6.886297,-7.495175,-8.076648,-7.849270,2.257344,9.672358,6.052001,-5.415728,-0.454707,5.547304,-4.725301,3.346032,1.035223,6.945412,0.606364,6.190694,-8.021625,-8.383030,-8.676112,7.972526,-7.262064,3.722776,3.930414,-7.926265,3.849377,-6.851843,-9.956767,-7.526399,7.054191,2.874407,7.963224,-2.942303,-5.408521,-5.292076,7.695242,-6.886849,-0.307336,9.925241,0.062080,1.503949,-8.143569,2.018496,4.432004,-4.305866,2.264937,6.957026,-5.056290,-8.096685,-9.009760,-9.678036,-9.105926,1.911144,-8.843299,9.101358,-5.730291,-1.193370,-5.587045,6.099401,8.115796,6.816076,9.642341,6.406908,-9.657685,-3.635876,-1.270869,2.135484,5.977531,4.114086,9.090207,-9.816681,6.929886,-1.732315,-4.502189,5.965617,2.010420,-6.831061,1.351554,6.398683,6.128111,9.389550,-4.097230,-2.106309,8.994851,3.393781,-8.095922,6.140457,-6.153782,-5.487983,9.744307,5.378989,-7.458049,-7.491785,9.121697,2.860238,5.591756,8.972461,7.199821,-4.312677,1.819404,-6.691373,0.159883,-5.290828,1.116150,-2.700021,-2.756215,-5.732428,8.247745,2.184788,-8.048554,4.299556,8.299316,5.666708,-0.044391,8.538225,3.443003,-2.510000,9.199323,-4.187625,3.378839,-5.553831,-8.741829,-1.152697,9.848347,9.431382,-3.636481,8.756742,7.530901,9.738745,-3.433508,2.648913,-9.824327,-9.284339,-8.011978,-4.198218,3.399682,-5.532258,3.790025,8.870707,-3.579498,-9.284859,5.780305,-4.406708,-5.949222,5.297411,-5.617874,-4.974427,-7.500721,3.109216,-3.253123,-2.849799,-8.397516,8.528289,6.843543,-8.498490,2.550413,-2.335938,-5.305807,6.125661,-5.309684,-2.856447,-5.607414,0.686630], dtype = "float32")#candidate|6121|(672,)|const|float32
call_6119 = relay.TupleGetItem(func_1709_call(relay.reshape(const_6120.astype('uint32'), [3, 6, 12]), relay.reshape(const_6121.astype('float32'), [672,]), ), 0)
call_6122 = relay.TupleGetItem(func_1712_call(relay.reshape(const_6120.astype('uint32'), [3, 6, 12]), relay.reshape(const_6121.astype('float32'), [672,]), ), 0)
func_5278_call = mod.get_global_var('func_5278')
func_5282_call = mutated_mod.get_global_var('func_5282')
var_6128 = relay.var("var_6128", dtype = "float64", shape = ())#candidate|6128|()|var|float64
var_6129 = relay.var("var_6129", dtype = "float64", shape = (180,))#candidate|6129|(180,)|var|float64
call_6127 = relay.TupleGetItem(func_5278_call(relay.reshape(const_6121.astype('float32'), [8, 84]), relay.reshape(var_6128.astype('float64'), []), relay.reshape(var_6129.astype('float64'), [180,]), ), 4)
call_6130 = relay.TupleGetItem(func_5282_call(relay.reshape(const_6121.astype('float32'), [8, 84]), relay.reshape(var_6128.astype('float64'), []), relay.reshape(var_6129.astype('float64'), [180,]), ), 4)
func_3363_call = mod.get_global_var('func_3363')
func_3368_call = mutated_mod.get_global_var('func_3368')
var_6140 = relay.var("var_6140", dtype = "float32", shape = (1568,))#candidate|6140|(1568,)|var|float32
call_6139 = relay.TupleGetItem(func_3363_call(relay.reshape(var_6128.astype('int16'), []), relay.reshape(var_6140.astype('float32'), [7, 16, 14]), relay.reshape(call_6119.astype('uint32'), [108, 2]), ), 1)
call_6141 = relay.TupleGetItem(func_3368_call(relay.reshape(var_6128.astype('int16'), []), relay.reshape(var_6140.astype('float32'), [7, 16, 14]), relay.reshape(call_6119.astype('uint32'), [108, 2]), ), 1)
uop_6150 = relay.erf(var_6140.astype('float64')) # shape=(1568,)
output = relay.Tuple([call_6115,call_6119,const_6120,const_6121,call_6127,var_6128,var_6129,call_6139,uop_6150,])
output2 = relay.Tuple([call_6116,call_6122,const_6120,const_6121,call_6130,var_6128,var_6129,call_6141,uop_6150,])
func_6155 = relay.Function([var_6128,var_6129,var_6140,], output)
mod['func_6155'] = func_6155
mod = relay.transform.InferType()(mod)
mutated_mod['func_6155'] = func_6155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6155_call = mutated_mod.get_global_var('func_6155')
var_6157 = relay.var("var_6157", dtype = "float64", shape = ())#candidate|6157|()|var|float64
var_6158 = relay.var("var_6158", dtype = "float64", shape = (180,))#candidate|6158|(180,)|var|float64
var_6159 = relay.var("var_6159", dtype = "float32", shape = (1568,))#candidate|6159|(1568,)|var|float32
call_6156 = func_6155_call(var_6157,var_6158,var_6159,)
output = call_6156
func_6160 = relay.Function([var_6157,var_6158,var_6159,], output)
mutated_mod['func_6160'] = func_6160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5794_call = mod.get_global_var('func_5794')
func_5795_call = mutated_mod.get_global_var('func_5795')
call_6195 = func_5794_call()
call_6196 = func_5794_call()
func_2767_call = mod.get_global_var('func_2767')
func_2771_call = mutated_mod.get_global_var('func_2771')
var_6200 = relay.var("var_6200", dtype = "uint16", shape = (18,))#candidate|6200|(18,)|var|uint16
const_6201 = relay.const(1, dtype = "int32")#candidate|6201|()|const|int32
call_6199 = relay.TupleGetItem(func_2767_call(relay.reshape(var_6200.astype('uint16'), [1, 9, 2]), relay.reshape(const_6201.astype('int32'), []), ), 2)
call_6202 = relay.TupleGetItem(func_2771_call(relay.reshape(var_6200.astype('uint16'), [1, 9, 2]), relay.reshape(const_6201.astype('int32'), []), ), 2)
func_5278_call = mod.get_global_var('func_5278')
func_5282_call = mutated_mod.get_global_var('func_5282')
var_6205 = relay.var("var_6205", dtype = "float32", shape = (672,))#candidate|6205|(672,)|var|float32
const_6206 = relay.const([3.396226,-6.515567,-1.616419,0.441556,-1.221462,5.705502,5.369616,-8.064047,6.762488,-8.670744,7.889724,-5.492437,8.005564,2.901163,-0.854098,-8.567403,9.520985,7.163679,3.277086,2.327020,-2.223570,5.407786,-0.551435,-1.396376,2.238172,-6.884303,-4.919006,-2.788206,-8.833917,-8.046511,-5.268004,3.079421,3.691931,9.598822,6.387015,1.531669,1.736971,6.275444,-0.466616,5.031259,-7.429297,-3.967744,9.487166,8.465819,0.300906,-4.709232,-5.535757,1.860884,0.695309,-4.922800,-5.592949,-3.150965,2.192634,5.049527,-7.280505,7.454257,-6.509673,8.307736,-5.517725,-7.490788,-2.331397,5.857019,-1.380324,-0.399210,8.453217,-0.230307,-4.185918,-2.470542,-7.504450,8.654267,-2.324884,-9.293739,5.180452,-6.834980,-7.213534,9.019484,-3.105841,1.878099,7.523173,-7.703502,-6.577676,-3.598320,1.119699,-8.294667,1.920488,-7.138358,-3.547807,-8.315632,-1.887306,-4.222876,1.465962,8.100013,-7.002341,-4.338813,4.299426,4.018193,4.550921,-6.257488,-7.146044,4.712790,1.931438,4.139625,-7.515711,1.328342,7.867848,0.468472,6.083497,-0.893218,5.099749,7.882952,8.406855,-2.343869,9.543933,9.328790,-2.251421,6.532722,9.794357,8.053181,-3.809668,-5.762921,-3.892442,7.263581,9.679677,-6.685771,-7.417753,0.135829,-1.496480,1.635254,-0.943677,8.857212,3.224291,-4.379511,2.234412,-3.467103,-4.937763,3.526325,-0.931881,-0.755551,-3.856222,-2.257356,5.801410,-4.423620,8.966413,7.598645,2.994837,-8.984281,3.408098,5.174954,3.466495,-3.220384,-0.291065,-8.525124,-1.277412,-7.162413,1.053385,-6.150538,-3.182769,-1.977800,-2.018084,-3.150789,-6.093098,-5.227656,3.396777,7.286777,1.005653,8.483615,5.238640,-2.456665,-8.856446,9.373017,8.628810,-3.216242,-3.887128,7.669081,-5.617715,-2.711478,9.539864,-4.354496,-7.773888,6.795874], dtype = "float64")#candidate|6206|(180,)|const|float64
call_6204 = relay.TupleGetItem(func_5278_call(relay.reshape(var_6205.astype('float32'), [8, 84]), relay.reshape(const_6201.astype('float64'), []), relay.reshape(const_6206.astype('float64'), [180,]), ), 9)
call_6207 = relay.TupleGetItem(func_5282_call(relay.reshape(var_6205.astype('float32'), [8, 84]), relay.reshape(const_6201.astype('float64'), []), relay.reshape(const_6206.astype('float64'), [180,]), ), 9)
output = relay.Tuple([call_6195,call_6199,var_6200,const_6201,call_6204,var_6205,const_6206,])
output2 = relay.Tuple([call_6196,call_6202,var_6200,const_6201,call_6207,var_6205,const_6206,])
func_6235 = relay.Function([var_6200,var_6205,], output)
mod['func_6235'] = func_6235
mod = relay.transform.InferType()(mod)
var_6236 = relay.var("var_6236", dtype = "uint16", shape = (18,))#candidate|6236|(18,)|var|uint16
var_6237 = relay.var("var_6237", dtype = "float32", shape = (672,))#candidate|6237|(672,)|var|float32
output = func_6235(var_6236,var_6237,)
func_6238 = relay.Function([var_6236,var_6237,], output)
mutated_mod['func_6238'] = func_6238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_6291 = relay.TupleGetItem(func_3948_call(), 2)
call_6292 = relay.TupleGetItem(func_3950_call(), 2)
func_4145_call = mod.get_global_var('func_4145')
func_4150_call = mutated_mod.get_global_var('func_4150')
const_6306 = relay.const([-4.129276,3.710535,-8.258830,-0.684949,-9.483695,-8.132351,-3.985277,-0.300829,-7.906261,-0.168454,3.116043,3.352762,-8.479192,-1.289526,9.742058,-6.252942,9.512420,7.391248,2.180513,7.576397,-2.638070,7.479071,7.811619,1.780839,3.144816,-1.607712,-2.328725,-7.443465,-8.806929,-6.871433,9.530849,7.618376,-7.182237,-4.753437,-2.968169,-7.078778,7.557751,0.483942,5.084619,-2.030768,-8.024471,2.471847,3.450063,-7.924954,-6.356677,3.198400,3.877244,-5.025791,5.258905,9.664135,8.222627,-8.834241,-8.680305,9.184254,9.112644,-7.186149,-6.275371,-0.099241,6.625338,9.848153,5.908619,2.543282,2.390095,-7.226577,3.144123,3.345925,7.084460,7.632633,4.045333,8.857565,3.813509,1.670246,-2.469059,0.971346,-1.068933,7.249653,8.794595,-4.747650,9.456021,-1.238984,1.768711,3.042934,7.558001,-5.216006,0.334881,7.056381,2.122030,-9.881314,-3.898904,7.860968,-2.784665,-6.379372,-7.874942,-6.423729,-3.705683,-8.964158,-4.246697,-3.491373,-2.343961,0.415245,8.651692,-6.124842,3.759113,-0.781584,-2.486430,-8.936293,-6.401261,2.834171,4.647846,-5.660223,-8.275937,6.081988,-1.542024,-5.183214,-5.212973,-7.873760,8.977816,-2.169917,4.032314,-2.474275,8.513919,-2.809851,-4.642839,-1.911994,-4.538153,4.629803,7.601671,5.573525,-3.460098,-6.270472,0.502143,-6.076426,-4.357420,2.028129,8.840808,5.532513,-0.919662,6.722473,1.814574,8.525343,-4.232580,-9.065121,7.272296,-7.404918,-1.423345,3.694610,4.065765,-2.647456,-7.689482,-8.004908,5.281728,-3.760182,1.495055,-9.108084,9.797623,-7.968297,-0.972438,3.090610,3.597916,-2.259360,5.693200,9.318398,2.386988,-5.335161,-5.829470,-1.205818,-3.836094,8.455619,-5.110509,8.717766,4.222845,5.194024,-1.372451,-5.759796,-8.125789,4.775995,-6.958733,0.964266,-2.720333,0.706293,-8.329791,0.665060,3.821157,-9.000457,-9.628360,4.664912,-6.982749,-1.010029,-9.002534,-6.199384,8.604843,-8.969932,-5.264824,4.838115,3.824241,6.732846,-1.192681,-3.500206,-8.625266,7.524821,-7.441995,-5.221246,-1.703846,-9.937220,6.908667,9.528073,-3.568358,-1.726685,4.287010,-4.898464,8.917167,-1.230098,-2.176253,0.015211,-8.059654,0.665710,0.326949,4.998122,-1.718268,-1.540020,-8.724221,-3.435934,7.534094,8.270204,1.636013,2.035881,-6.022869,-2.791261,5.123433,1.651584,4.726037,-8.954349,-8.017003,-0.892854,1.267641,7.870204,-4.820660,3.972578,-1.681021,7.940762,-4.403634,-0.205467,-7.443518,8.757065,-9.325699,0.413669,0.472572,9.566310,8.751078,5.565766,-4.175188,-5.972538,-2.004124,1.275563,2.448049,-7.465996,1.114866,-2.860217,-6.604140,8.203498,-6.767411,-0.719017,9.522369,0.209171,6.613704,7.231418,7.312840,-6.621671,1.876401,3.216463,-6.391101,-3.121266,-5.728635,-7.979251,-7.275114,-0.792640,-1.311481,3.293568,-1.178841,4.081122,2.252230,2.490963,-4.121148,-1.845956,3.259750,-6.361513,-9.882703,-4.736528,2.971247,3.254485,-6.273553,-6.519152,-3.631102,-8.901782,7.520030,-8.727827,8.737864,8.506881,8.950671,0.190937,1.736337,3.595819,2.655304,1.255356,-9.139678,-6.337274,-6.397357,0.871858,-0.817141,6.261878,3.569858,-8.126540,0.748308,3.332780,-3.740704,-8.607921,-1.471232,4.251137,8.438686,5.410706,8.879380,-1.055861,-4.253127,-6.731582,-4.443012,-4.331271,8.325348,-9.306914,9.143834,5.535091,-4.953293,5.809420,4.816872,-2.075380,9.614466,-4.583093,-3.522795,-1.468249,4.221835,5.013279,-5.544167,2.195380,8.109602,1.631842,2.208575,-6.179073,-4.511864,3.473884,-7.142457,-8.366255,2.017811,-9.549564,9.519589,-4.959169,9.096089,-1.738990,-4.539013,6.034481,2.400599,-9.764855,5.498198,0.847186,-4.323798,-6.840156,-7.905224,9.738006,3.349057,1.152217,-7.614953,0.059758,-3.230685,-9.870532,-3.646549,-5.780652,-4.720114,-9.340059,7.933005,4.009533,-9.747500,-1.998819,-8.320383,-9.234777,1.919990,-9.395603,-5.470959,3.525822,-5.156989,7.410351,4.257136,-9.221684,-4.956170,3.789658], dtype = "float64")#candidate|6306|(392,)|const|float64
var_6307 = relay.var("var_6307", dtype = "int32", shape = (2080,))#candidate|6307|(2080,)|var|int32
call_6305 = relay.TupleGetItem(func_4145_call(relay.reshape(const_6306.astype('float64'), [14, 28]), relay.reshape(var_6307.astype('int32'), [2080,]), relay.reshape(call_6291.astype('float64'), [900, 2]), ), 0)
call_6308 = relay.TupleGetItem(func_4150_call(relay.reshape(const_6306.astype('float64'), [14, 28]), relay.reshape(var_6307.astype('int32'), [2080,]), relay.reshape(call_6291.astype('float64'), [900, 2]), ), 0)
func_1582_call = mod.get_global_var('func_1582')
func_1584_call = mutated_mod.get_global_var('func_1584')
var_6315 = relay.var("var_6315", dtype = "uint8", shape = (1344,))#candidate|6315|(1344,)|var|uint8
call_6314 = func_1582_call(relay.reshape(var_6315.astype('uint8'), [16, 6, 14]))
call_6316 = func_1582_call(relay.reshape(var_6315.astype('uint8'), [16, 6, 14]))
uop_6338 = relay.atan(call_6291.astype('float64')) # shape=(1800,)
uop_6340 = relay.atan(call_6292.astype('float64')) # shape=(1800,)
output = relay.Tuple([call_6305,const_6306,var_6307,call_6314,var_6315,uop_6338,])
output2 = relay.Tuple([call_6308,const_6306,var_6307,call_6316,var_6315,uop_6340,])
func_6343 = relay.Function([var_6307,var_6315,], output)
mod['func_6343'] = func_6343
mod = relay.transform.InferType()(mod)
mutated_mod['func_6343'] = func_6343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6343_call = mutated_mod.get_global_var('func_6343')
var_6345 = relay.var("var_6345", dtype = "int32", shape = (2080,))#candidate|6345|(2080,)|var|int32
var_6346 = relay.var("var_6346", dtype = "uint8", shape = (1344,))#candidate|6346|(1344,)|var|uint8
call_6344 = func_6343_call(var_6345,var_6346,)
output = call_6344
func_6347 = relay.Function([var_6345,var_6346,], output)
mutated_mod['func_6347'] = func_6347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6374 = relay.var("var_6374", dtype = "float32", shape = (13, 3, 2))#candidate|6374|(13, 3, 2)|var|float32
var_6375 = relay.var("var_6375", dtype = "float32", shape = (13, 3, 2))#candidate|6375|(13, 3, 2)|var|float32
bop_6376 = relay.divide(var_6374.astype('float32'), relay.reshape(var_6375.astype('float32'), relay.shape_of(var_6374))) # shape=(13, 3, 2)
uop_6386 = relay.cosh(bop_6376.astype('float64')) # shape=(13, 3, 2)
output = relay.Tuple([uop_6386,])
output2 = relay.Tuple([uop_6386,])
func_6388 = relay.Function([var_6374,var_6375,], output)
mod['func_6388'] = func_6388
mod = relay.transform.InferType()(mod)
var_6389 = relay.var("var_6389", dtype = "float32", shape = (13, 3, 2))#candidate|6389|(13, 3, 2)|var|float32
var_6390 = relay.var("var_6390", dtype = "float32", shape = (13, 3, 2))#candidate|6390|(13, 3, 2)|var|float32
output = func_6388(var_6389,var_6390,)
func_6391 = relay.Function([var_6389,var_6390,], output)
mutated_mod['func_6391'] = func_6391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4532_call = mod.get_global_var('func_4532')
func_4533_call = mutated_mod.get_global_var('func_4533')
call_6447 = relay.TupleGetItem(func_4532_call(), 0)
call_6448 = relay.TupleGetItem(func_4533_call(), 0)
output = relay.Tuple([call_6447,])
output2 = relay.Tuple([call_6448,])
func_6456 = relay.Function([], output)
mod['func_6456'] = func_6456
mod = relay.transform.InferType()(mod)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6456_call = mutated_mod.get_global_var('func_6456')
call_6457 = func_6456_call()
output = call_6457
func_6458 = relay.Function([], output)
mutated_mod['func_6458'] = func_6458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_6459 = func_3525_call()
call_6460 = func_3525_call()
output = relay.Tuple([call_6459,])
output2 = relay.Tuple([call_6460,])
func_6472 = relay.Function([], output)
mod['func_6472'] = func_6472
mod = relay.transform.InferType()(mod)
mutated_mod['func_6472'] = func_6472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6472_call = mutated_mod.get_global_var('func_6472')
call_6473 = func_6472_call()
output = call_6473
func_6474 = relay.Function([], output)
mutated_mod['func_6474'] = func_6474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4630_call = mod.get_global_var('func_4630')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_6557 = relay.TupleGetItem(func_4630_call(), 0)
call_6558 = relay.TupleGetItem(func_4631_call(), 0)
output = relay.Tuple([call_6557,])
output2 = relay.Tuple([call_6558,])
func_6559 = relay.Function([], output)
mod['func_6559'] = func_6559
mod = relay.transform.InferType()(mod)
mutated_mod['func_6559'] = func_6559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6559_call = mutated_mod.get_global_var('func_6559')
call_6560 = func_6559_call()
output = call_6560
func_6561 = relay.Function([], output)
mutated_mod['func_6561'] = func_6561
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6588 = relay.const([[[True,True,True,True,True,False,False,False,False,False,True,False,False],[True,True,True,False,True,True,True,False,False,False,True,False,True],[False,True,False,False,False,True,True,True,False,True,True,False,True],[True,False,False,True,False,True,False,True,True,False,False,False,False]],[[False,False,True,True,True,False,False,True,False,False,True,False,True],[True,True,False,False,False,True,False,False,False,True,True,True,False],[False,True,True,False,True,True,True,True,False,False,True,True,False],[True,True,True,True,True,False,False,True,False,False,True,True,False]],[[True,False,True,False,False,True,True,True,False,True,True,True,False],[True,True,True,False,True,False,False,False,False,True,True,False,False],[True,True,True,False,True,True,False,True,True,True,False,True,False],[False,False,True,True,False,True,True,True,True,False,True,True,True]],[[True,False,False,False,True,True,True,False,False,False,True,False,True],[True,True,False,False,False,False,False,True,False,False,False,True,True],[False,True,False,True,False,False,False,False,False,True,False,True,True],[False,True,True,False,True,False,False,True,False,False,True,False,True]],[[True,False,False,False,True,False,False,True,True,False,True,True,True],[True,False,True,False,False,True,False,True,True,True,True,True,False],[True,True,True,True,True,True,True,True,True,False,True,True,True],[False,False,True,False,True,False,False,False,True,False,True,True,True]],[[False,False,False,False,False,True,True,True,False,False,False,True,True],[False,True,False,True,True,True,True,False,True,False,False,True,False],[True,False,True,False,True,False,False,False,False,False,True,True,False],[False,False,False,True,True,False,True,False,False,False,True,True,False]],[[False,False,False,True,False,False,True,False,False,True,False,True,True],[False,True,False,True,True,False,True,False,False,True,False,True,True],[False,True,False,False,True,False,False,True,True,False,True,True,False],[False,False,False,True,True,False,False,True,False,False,False,True,False]],[[False,False,False,True,True,True,False,True,True,True,True,True,False],[True,True,False,False,False,False,False,False,True,True,True,True,False],[True,True,False,False,True,False,True,False,True,False,True,True,False],[False,False,True,True,True,False,False,True,False,False,True,False,True]],[[False,True,False,True,False,True,True,False,True,False,True,False,False],[False,True,True,False,True,True,False,False,False,True,True,True,False],[True,True,True,False,False,True,True,False,True,True,True,False,False],[True,False,True,True,True,True,False,False,True,True,False,False,False]],[[False,True,True,True,False,False,True,True,False,True,True,False,False],[False,True,True,False,True,False,False,False,False,True,False,False,False],[True,False,False,True,False,False,True,True,False,True,True,True,False],[False,False,True,False,False,True,True,False,True,True,False,False,True]],[[False,True,True,True,True,True,True,True,False,True,False,True,False],[False,False,True,True,True,True,True,False,True,False,False,True,False],[True,False,False,True,True,True,True,True,False,False,False,True,False],[False,False,False,False,False,False,False,True,True,True,True,False,False]],[[False,False,False,True,False,True,True,True,True,True,False,False,False],[False,False,False,True,False,False,True,False,False,True,False,True,False],[True,False,True,False,False,False,False,False,True,True,False,True,False],[True,False,False,True,False,False,True,False,True,False,False,False,False]],[[True,True,True,False,True,False,False,True,False,True,True,True,True],[False,False,True,True,False,False,True,False,True,True,False,True,True],[True,True,False,True,True,True,False,False,True,True,True,True,False],[True,False,True,False,False,False,False,True,True,False,False,True,False]],[[True,False,False,False,False,True,True,False,False,True,True,False,True],[False,False,False,True,False,False,False,False,False,False,False,True,True],[True,True,True,False,False,True,True,False,True,True,False,True,True],[False,False,False,True,True,False,True,False,True,True,False,True,True]]], dtype = "bool")#candidate|6588|(14, 4, 13)|const|bool
const_6589 = relay.const([[[True,True,True,True,True,True,False,True,True,True,False,True,True],[True,True,False,False,False,False,False,True,True,False,False,True,False],[True,True,True,True,False,True,False,True,False,True,False,False,True],[True,False,True,True,True,True,False,True,True,False,True,False,True]],[[False,False,True,False,False,True,True,False,False,True,True,False,True],[True,False,True,True,True,True,True,False,False,False,True,False,True],[True,True,False,True,False,True,True,False,True,False,True,False,False],[True,False,True,True,True,False,True,False,True,False,True,True,True]],[[True,True,False,False,True,True,True,True,False,True,False,False,True],[True,False,False,False,False,True,False,True,True,True,True,False,True],[False,True,True,True,False,False,True,False,False,False,False,True,True],[False,True,False,False,False,True,False,True,True,False,False,True,True]],[[True,False,False,False,False,True,True,True,False,True,True,True,True],[False,True,True,True,True,False,False,True,False,True,False,True,False],[False,True,False,True,True,False,False,True,False,False,False,True,True],[True,False,False,False,True,False,False,True,False,True,True,False,False]],[[True,True,False,False,True,False,False,False,False,True,False,False,False],[False,False,True,True,True,False,True,True,False,False,False,False,True],[False,True,False,False,True,False,False,False,False,True,False,False,True],[False,True,True,False,False,True,False,True,False,True,True,True,True]],[[True,False,True,False,True,True,True,False,True,True,False,True,True],[False,True,True,True,False,False,False,False,False,False,True,True,True],[False,False,False,True,True,False,True,False,False,True,True,True,True],[True,False,True,False,True,True,True,True,False,False,True,True,False]],[[True,True,True,False,True,True,True,True,True,False,True,False,True],[True,True,False,True,False,True,True,True,False,True,True,True,False],[True,True,True,False,True,False,False,True,True,True,False,False,False],[True,False,False,False,True,True,True,False,False,False,True,False,True]],[[True,True,False,True,True,False,False,False,False,False,False,False,True],[True,True,True,True,False,True,False,False,True,True,True,False,True],[False,False,True,False,False,False,True,False,True,False,False,False,False],[True,False,False,True,True,False,True,False,True,True,True,True,True]],[[False,True,False,True,False,False,True,True,False,True,False,True,False],[True,True,False,True,True,True,True,False,True,False,False,False,True],[True,True,False,True,False,True,False,False,False,False,True,True,False],[True,True,False,True,True,True,False,True,True,False,True,False,False]],[[False,True,False,False,False,True,True,False,False,True,True,False,True],[True,True,False,True,True,False,False,True,True,True,False,True,False],[True,True,True,False,True,True,True,True,True,True,True,False,True],[True,True,True,False,True,False,True,True,True,False,True,True,True]],[[False,False,True,False,True,True,True,False,True,True,False,False,False],[True,True,True,False,False,True,True,True,True,False,False,False,False],[True,False,True,True,True,False,True,False,False,False,True,True,True],[False,False,True,False,True,False,True,False,False,False,True,False,True]],[[False,False,True,False,False,True,False,False,False,True,False,True,False],[False,False,True,True,True,False,False,False,False,True,False,False,True],[True,False,True,True,True,True,True,True,False,False,False,False,False],[False,False,False,True,False,False,True,True,True,False,True,True,False]],[[False,False,True,False,False,False,False,True,True,True,False,False,False],[False,False,False,True,False,False,True,False,False,True,False,True,False],[False,False,False,True,False,False,False,True,False,False,True,False,True],[False,True,True,True,False,False,True,False,True,False,True,False,False]],[[True,True,True,False,True,True,False,True,False,True,True,False,False],[True,False,False,True,True,False,True,True,True,True,True,True,True],[False,True,False,False,True,True,True,False,False,False,True,False,False],[False,True,True,False,False,True,True,False,False,False,False,True,True]]], dtype = "bool")#candidate|6589|(14, 4, 13)|const|bool
bop_6590 = relay.logical_or(const_6588.astype('bool'), relay.reshape(const_6589.astype('bool'), relay.shape_of(const_6588))) # shape=(14, 4, 13)
uop_6600 = relay.asinh(bop_6590.astype('float32')) # shape=(14, 4, 13)
output = uop_6600
output2 = uop_6600
func_6606 = relay.Function([], output)
mod['func_6606'] = func_6606
mod = relay.transform.InferType()(mod)
output = func_6606()
func_6607 = relay.Function([], output)
mutated_mod['func_6607'] = func_6607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5661_call = mod.get_global_var('func_5661')
func_5662_call = mutated_mod.get_global_var('func_5662')
call_6655 = func_5661_call()
call_6656 = func_5661_call()
output = call_6655
output2 = call_6656
func_6665 = relay.Function([], output)
mod['func_6665'] = func_6665
mod = relay.transform.InferType()(mod)
mutated_mod['func_6665'] = func_6665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6665_call = mutated_mod.get_global_var('func_6665')
call_6666 = func_6665_call()
output = call_6666
func_6667 = relay.Function([], output)
mutated_mod['func_6667'] = func_6667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_6691 = relay.TupleGetItem(func_5872_call(), 0)
call_6692 = relay.TupleGetItem(func_5874_call(), 0)
func_5661_call = mod.get_global_var('func_5661')
func_5662_call = mutated_mod.get_global_var('func_5662')
call_6718 = func_5661_call()
call_6719 = func_5661_call()
func_6606_call = mod.get_global_var('func_6606')
func_6607_call = mutated_mod.get_global_var('func_6607')
call_6732 = func_6606_call()
call_6733 = func_6606_call()
func_4889_call = mod.get_global_var('func_4889')
func_4890_call = mutated_mod.get_global_var('func_4890')
call_6755 = relay.TupleGetItem(func_4889_call(), 1)
call_6756 = relay.TupleGetItem(func_4890_call(), 1)
bop_6758 = relay.logical_or(call_6718.astype('bool'), relay.reshape(call_6755.astype('bool'), relay.shape_of(call_6718))) # shape=(16, 14, 8)
bop_6761 = relay.logical_or(call_6719.astype('bool'), relay.reshape(call_6756.astype('bool'), relay.shape_of(call_6719))) # shape=(16, 14, 8)
output = relay.Tuple([call_6691,call_6732,bop_6758,])
output2 = relay.Tuple([call_6692,call_6733,bop_6761,])
func_6784 = relay.Function([], output)
mod['func_6784'] = func_6784
mod = relay.transform.InferType()(mod)
output = func_6784()
func_6785 = relay.Function([], output)
mutated_mod['func_6785'] = func_6785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mod.get_global_var('func_4889')
func_4890_call = mutated_mod.get_global_var('func_4890')
call_6833 = relay.TupleGetItem(func_4889_call(), 0)
call_6834 = relay.TupleGetItem(func_4890_call(), 0)
func_5514_call = mod.get_global_var('func_5514')
func_5517_call = mutated_mod.get_global_var('func_5517')
var_6836 = relay.var("var_6836", dtype = "float32", shape = (192,))#candidate|6836|(192,)|var|float32
call_6835 = func_5514_call(relay.reshape(var_6836.astype('float32'), [4, 6, 8]))
call_6837 = func_5514_call(relay.reshape(var_6836.astype('float32'), [4, 6, 8]))
func_1025_call = mod.get_global_var('func_1025')
func_1028_call = mutated_mod.get_global_var('func_1028')
const_6841 = relay.const([-5.579230,4.625725,2.521220,5.780899,8.205538,-6.376487,8.811975,-8.296340,9.753076,-4.600248,0.720288,3.733834,3.522200,-3.283383,1.246857,4.809938,-5.683008,1.468699,8.821318,-9.644687,8.674206,0.364059,-0.601331,4.208817,-1.252411,5.505695,-4.665081,-7.927871,-4.774212,2.533259,3.953143,-4.169159,5.258742,7.341457,-5.968941,1.374279,-7.494884,-2.091412,-8.341841,1.377004,2.503426,-0.369334,4.327864,-8.917335,7.858856,2.572296,-3.295174,-5.954173,3.040986,-9.895087,6.685189,3.928230,4.432793,8.972484,-2.401021,-8.252076,0.719603,2.378725,1.360832,6.096594,5.301996,3.854633,-6.011300,5.925218,-8.916122,7.415673,0.645533,4.977983,-9.795656,-5.967881,7.897211,-7.523063,-7.991003,4.295981,9.079483,-6.305777,7.929109,9.475865,-3.445452,-3.656707,-2.871186,-2.823832,-2.727033,-2.618235,-2.838568,0.658583,-5.722039,0.192975,-2.906296,-4.372932,3.552794,-8.749539,3.060956,-0.805621,8.853407,-5.987354,-4.291672,7.524605,-6.003463,4.170980,7.960228,1.509611,-1.663216,-9.842131,2.571812,9.516966,6.143411,-5.682657,6.532113,-2.575810,5.328765,-8.835191,-9.081382,-1.254424,-8.283946,3.200651,7.971263,5.710112,7.177656,-3.089191,-8.050083,8.669548,5.557021,-0.486842,-4.000112,8.103779,4.553315,7.312775,-6.780120,5.071198,4.496675,-8.979501,2.849441,5.639912,6.846636,6.581733,0.979683,8.904858,-6.118205,5.545866,5.884720,-2.125032,-5.839996,-5.400536,-6.418031,4.849465,-8.538095,-6.993346,4.562070,4.164349,2.449243,8.983597,9.526859,6.722452,-4.875304,0.647195,-1.238859,7.099900,0.364433,8.033973,6.333245,-5.303822,-7.816549,4.260853,-2.517484,-6.135034,2.062558,-4.474951,-9.023599,1.805503,-4.033515,-1.651140,-8.371029,3.512155,6.906221,3.893854,-2.752181,1.193123,-1.925277,-1.307982], dtype = "float64")#candidate|6841|(180,)|const|float64
call_6840 = relay.TupleGetItem(func_1025_call(relay.reshape(const_6841.astype('float64'), [6, 10, 3])), 0)
call_6842 = relay.TupleGetItem(func_1028_call(relay.reshape(const_6841.astype('float64'), [6, 10, 3])), 0)
output = relay.Tuple([call_6833,call_6835,var_6836,call_6840,const_6841,])
output2 = relay.Tuple([call_6834,call_6837,var_6836,call_6842,const_6841,])
func_6847 = relay.Function([var_6836,], output)
mod['func_6847'] = func_6847
mod = relay.transform.InferType()(mod)
mutated_mod['func_6847'] = func_6847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6848 = relay.var("var_6848", dtype = "float32", shape = (192,))#candidate|6848|(192,)|var|float32
func_6847_call = mutated_mod.get_global_var('func_6847')
call_6849 = func_6847_call(var_6848)
output = call_6849
func_6850 = relay.Function([var_6848], output)
mutated_mod['func_6850'] = func_6850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6875 = relay.var("var_6875", dtype = "float64", shape = (11, 6, 16))#candidate|6875|(11, 6, 16)|var|float64
uop_6876 = relay.log(var_6875.astype('float64')) # shape=(11, 6, 16)
func_4145_call = mod.get_global_var('func_4145')
func_4150_call = mutated_mod.get_global_var('func_4150')
var_6882 = relay.var("var_6882", dtype = "float64", shape = (392,))#candidate|6882|(392,)|var|float64
var_6883 = relay.var("var_6883", dtype = "int32", shape = (2080,))#candidate|6883|(2080,)|var|int32
const_6884 = relay.const([-9.426390,4.752139,-3.347971,4.454075,-4.718135,1.929275,7.719509,3.181829,4.147044,6.356430,-2.280642,-0.398384,-8.644348,9.532143,2.001956,7.628048,-3.292754,-6.885656,1.172306,-0.511283,3.497040,6.746786,1.403738,6.147865,5.439792,-2.289395,4.210027,4.637047,6.202360,1.131978,1.367955,-5.301525,-3.112647,6.415492,-1.572825,3.628538,6.936833,-1.917718,7.177564,8.591027,-0.520095,-3.268294,-9.460573,0.325620,0.061145,-4.331667,-9.504211,-7.830606,-0.073756,-9.188755,8.680114,-7.471092,-5.804539,8.740106,-0.640187,9.804443,8.352171,-6.674455,0.260388,3.148306,8.646937,8.484818,3.806660,-1.530807,3.740281,-9.392785,-5.250951,0.134728,-0.535651,-4.010695,0.393891,1.410458,-2.741130,-6.399888,-0.730386,-2.206149,-5.151904,4.406906,8.218127,1.059976,-6.528519,2.259519,-0.774195,-1.496130,4.579209,-8.005301,-5.002091,8.764963,6.452816,-0.506174,-1.400681,7.315725,-7.960593,-5.164093,-8.619497,1.730279,7.381119,2.609819,2.818934,-6.567986,8.972662,-8.663492,0.110335,-5.474059,8.481960,-6.629708,6.876665,-0.959395,-8.003750,4.958851,-7.689504,1.872377,8.723331,-9.978686,-7.198644,8.690840,8.981073,8.157687,-3.693594,3.103679,-0.288795,0.050136,-3.904962,-4.770221,-0.569268,5.923581,-5.549700,-6.986956,-0.757998,-2.207952,-5.163834,-6.449376,4.311183,-8.794078,6.779966,-3.100178,9.237989,2.530978,3.395170,-7.248831,6.684393,5.529499,-6.901141,3.984652,-4.191807,-9.714821,1.681249,-1.814184,-9.439141,-3.564007,-1.184580,-6.572628,-2.432430,2.354417,8.223488,6.232764,-1.860858,-9.128170,5.583078,7.025940,5.385302,-0.341053,-0.993701,-7.651029,8.366048,-7.802287,1.388266,2.336405,-8.613575,0.966861,-5.814930,-3.193163,8.147810,0.509721,-4.325914,-0.155903,-4.505156,-0.174007,6.485810,-2.962787,-7.818285,2.679170,7.728071,5.424388,9.206833,3.246165,-3.866585,-4.443823,-7.149962,-1.705191,-9.674608,-3.487422,2.770492,2.212414,7.987410,3.714069,-9.488855,7.698475,6.202376,9.677352,-7.200459,-4.263545,-9.259045,-3.629076,-6.988964,5.288542,-8.976371,-2.914821,6.650967,-9.399536,7.610492,-4.174936,-9.481054,1.281626,-8.584815,9.953078,8.726112,6.838747,-4.078620,-3.575109,-1.013320,-0.259734,9.474621,-9.321381,-6.064873,-2.189271,-1.145164,-6.700986,-0.975498,-7.277467,-8.016620,6.245778,9.390869,-6.139893,1.525985,6.821614,-6.501323,-0.817431,-3.668884,-5.903813,9.669535,-9.275272,3.868542,9.978064,-0.628224,6.423467,0.177173,-9.007498,0.485048,-1.970139,2.301330,4.626929,6.656673,6.002428,-0.237966,4.922337,-4.923060,-1.656090,-2.169241,-9.274421,7.370734,0.457608,-0.420956,-0.091178,-4.313869,-1.182486,-3.791786,-4.640237,1.776784,4.152138,7.291976,-5.972220,-1.156800,-1.560818,-1.614133,2.653532,-3.607909,-2.935803,-1.259326,-5.901763,7.018648,-3.583927,-9.251964,-4.141269,-2.956567,-1.633600,-2.955678,-9.993041,3.345802,3.183115,4.091300,2.454001,0.926294,-3.846826,-8.434047,0.536924,-8.617723,2.246615,-7.871394,-3.005537,3.636167,-9.213031,2.861419,-0.133973,2.481519,-7.166667,-4.245368,-2.976319,0.833118,9.366735,-3.779369,-4.716729,-9.137934,5.193666,6.118999,-5.377800,-9.902070,-9.260301,9.190504,-8.055636,-9.073448,3.435480,5.536617,-7.186262,-4.962917,-8.171002,-0.297528,1.639431,6.509202,8.272272,0.236099,3.597905,8.069218,4.071571,8.411647,9.754824,1.380018,-2.361299,4.583363,2.641056,3.374486,-8.602698,-1.520622,-2.972605,-8.298892,-3.517623,7.379215,-3.610322,3.308006,4.903244,0.663386,-4.074043,3.754724,0.835335,-9.697629,6.590641,5.416876,5.559148,0.182436,6.348617,-9.197919,4.338567,1.225416,-4.516895,-0.111972,1.864544,-7.769867,-8.054394,5.556861,-3.859898,-6.235190,7.325643,5.306007,-8.828402,-2.392722,0.810366,6.677315,9.361509,-5.084932,-6.472350,3.568320,-9.063465,0.699671,-2.234625,6.283109,-8.504691,-5.647242,0.268389,7.919006,-6.216891,4.018643,-3.683080,6.998406,8.445431,3.949191,-0.205272,-3.252967,-1.926030,9.631150,-6.837451,-0.700803,-9.202306,-4.014015,-6.217042,8.009449,4.997229,-8.810567,-7.908046,0.896585,3.109090,0.819170,-4.699264,8.983321,5.765526,7.871945,7.083898,1.523005,-6.045699,2.511056,1.126340,7.771353,0.216618,-7.353617,0.356453,2.368457,-7.107666,-6.276491,-1.805609,0.092683,-8.013194,3.607826,-2.837721,-8.492563,-9.263511,-1.453026,-3.230309,1.113510,7.143467,1.522992,9.949861,-8.067050,0.062957,-9.832576,-1.473364,-6.740583,-5.729832,-7.711409,-2.451003,5.126090,-9.123829,-2.993351,-2.644081,-3.562820,9.509123,-5.707402,-8.492138,-2.827415,-2.674672,-8.069625,-8.131438,9.422350,-5.316593,-4.770288,-1.661678,-2.990321,7.607958,-5.654983,-3.319973,4.134339,-1.162268,-5.223587,-2.232995,1.683214,-1.741131,1.759555,-0.953625,5.630166,-4.580802,8.375178,-1.997345,9.990845,-2.029256,4.743122,-5.326860,-9.660344,-4.887545,-7.632314,1.142488,0.460853,9.116626,-4.684244,-4.462157,-4.726306,2.359499,7.206494,0.689208,8.677926,-5.183184,-2.531200,-0.301165,-7.383765,-5.853463,9.743775,-1.153739,8.199370,-5.573208,2.325453,7.755350,7.086833,5.336336,-7.257398,-0.993905,-9.642596,-2.835827,6.437913,0.959529,-3.891450,-0.713700,4.346813,-6.794087,-5.911402,-3.499639,3.898200,-3.901273,4.604347,-0.130323,-3.297647,4.415702,1.377776,-8.909707,-3.757210,-0.114574,2.099008,6.272468,6.015572,6.194844,-1.403259,1.717801,7.630427,-0.181201,2.593396,2.535765,0.916607,-2.260782,-2.099862,-3.507685,-5.068975,3.155873,2.709836,-9.387177,7.957439,8.489853,-4.678868,9.897812,-6.673633,-0.409292,-0.201660,2.536286,-5.439429,1.849050,-9.568314,-7.911663,-0.410912,-8.962113,-3.267385,4.728183,-9.428703,0.656290,0.701030,2.685287,-5.340278,-5.606955,5.268914,2.347233,2.046637,-6.976199,-9.125257,4.997771,6.827434,-3.004030,-3.367192,7.428059,-6.217415,9.544833,9.012221,0.020120,-7.088142,7.663337,-7.684949,-2.185729,1.254317,3.235646,1.712947,-6.538090,0.599405,-5.755966,-7.696675,-3.223249,-4.914446,2.201716,-2.189485,0.705898,-3.132086,-0.304765,0.377141,-4.047359,-4.149175,-6.089167,-2.018994,-1.775385,-5.638864,-4.961200,-2.758485,2.021304,-3.519957,-7.827890,-9.303440,-1.302674,-1.073553,2.804731,2.254213,-3.211063,3.578683,1.448589,-5.949154,8.780999,-5.291282,3.913526,7.407547,2.326700,3.331674,-3.907898,5.445479,-1.932881,-9.975882,-0.163168,-1.150539,7.606065,0.586124,1.491508,-5.577711,-1.167952,-8.888565,5.397208,1.109537,-3.249750,-3.128408,-6.392520,8.224477,-7.676025,-9.311937,5.661707,2.544969,-5.322994,6.580184,-1.059082,7.659454,-7.056486,3.202215,9.911484,-3.426580,8.118107,-6.681720,-0.262045,0.856638,6.080060,5.509264,-5.305933,3.351460,-2.088105,-3.741850,-8.070194,0.119849,-2.817638,-8.498917,1.122898,1.936133,-7.060708,-1.262803,1.956826,3.666809,0.436405,8.298350,9.951404,2.726047,9.024563,2.709794,2.170245,-2.705267,8.624295,1.104198,7.988748,5.496374,-4.347035,-6.222439,6.109626,7.926492,8.069539,-3.081667,3.055142,-7.482986,-5.828978,8.778845,-4.688342,4.811359,-9.209160,2.063018,9.679666,6.294720,-8.545592,5.653295,1.711325,7.895550,8.214129,-8.870014,3.092527,0.514636,-3.721051,2.043407,-6.749891,-6.359991,0.786080,-7.497655,-3.090493,-3.372750,2.691580,2.878272,-0.100041,1.578926,-5.173665,1.591116,-9.633745,0.310890,2.594454,-6.699151,3.625219,-3.597303,-4.805827,7.731162,3.004005,6.474262,5.039614,5.804614,6.308837,0.452395,-6.603810,5.537534,9.279042,1.540025,3.608119,-2.472099,-8.679673,1.496404,8.728833,-2.921830,4.774435,-0.682696,-2.289073,-8.900352,-1.758051,5.416969,-8.272089,-0.613018,-7.878107,-0.411404,6.358934,-0.309097,-4.228461,-1.310130,9.871242,-9.779864,-5.873626,5.634522,-8.165923,0.571444,-9.888121,-7.030603,5.712530,-7.523745,-1.513444,-7.705481,-9.890710,-8.441869,-0.859952,-0.439879,0.674964,-7.440018,6.460254,-0.201278,-1.041509,5.737367,-1.940285,8.626184,-1.139678,9.743109,8.969220,-4.323685,1.068065,-6.385894,2.330148,4.445867,7.077873,-7.111366,3.132774,-8.044953,-2.756048,-2.844366,6.163894,2.875234,-0.460225,6.584557,-6.538878,2.542794,-5.584521,3.520326,-1.098506,-7.796901,3.151521,8.092736,0.940816,-4.982360,9.643729,-5.272479,-7.421078,-7.924484,0.725399,-7.788581,4.921040,7.369960,6.863806,3.441653,8.957415,4.995349,-9.276712,4.294434,4.110865,-8.775069,7.512706,2.399980,-8.952531,-5.880552,8.650158,5.508903,-8.653580,-6.434008,7.665525,2.657133,1.264484,6.543503,2.712179,2.822220,-1.770758,7.499312,3.440830,-1.376058,-5.319955,3.027047,2.270977,-6.255707,2.556179,-3.630188,-0.404918,9.097642,-6.501752,-1.437059,0.992773,-6.100696,3.281077,2.881366,2.606003,-7.313796,-3.813498,5.285601,-5.353224,1.673040,9.014709,-2.356173,-7.518303,0.207197,0.919875,-4.623346,-4.339292,-7.240085,2.789395,-6.069752,2.261208,-2.372095,-1.061474,-2.234013,-4.119877,-1.195618,5.906967,5.887903,-7.174044,-8.619836,-0.656030,-5.865636,-9.211743,-1.209209,7.266382,-0.414200,0.417865,-4.009349,-3.175966,-6.587101,7.256863,-8.377780,-9.285918,-3.802324,3.347484,-5.695914,5.014742,-4.789193,5.514878,8.042354,1.694234,-3.258781,6.636910,-9.889175,3.883828,-2.255547,7.712677,4.280947,-0.514526,-4.204519,-9.123074,-1.614485,4.871039,0.846446,2.470171,3.282710,-2.343958,-1.139168,6.546048,-1.119872,4.312261,7.224389,9.979202,-4.511935,-4.970299,7.037266,9.749768,-0.497128,-3.546890,-5.847556,5.913203,-9.541837,5.262724,5.118274,7.678825,9.052943,-3.900487,6.816299,6.137008,1.458269,-0.355125,-3.824733,-3.160974,3.463756,5.568225,2.928094,2.716142,-2.312120,-0.909534,6.579717,5.416080,-9.568062,0.199797,-2.396263,-2.798202,-9.598478,-5.898858,-9.211141,-7.221542,-6.498647,9.416260,-1.362203,5.360284,9.851621,-7.241383,-3.677190,9.273775,5.880761,-1.770228,5.755244,2.776903,-4.180162,6.865400,8.614541,-5.137456,3.897986,4.976387,-5.932492,-4.702183,-1.052455,9.894784,9.892079,8.548689,2.291942,-3.639636,-4.943046,1.467935,3.005552,-0.460810,-6.574971,-7.211764,-7.783145,2.444481,6.086580,2.550078,-8.837255,-5.262552,0.081126,-2.487893,5.370060,-8.794695,-4.585707,-2.107494,-4.055231,-3.593533,6.645994,-1.371458,-7.835299,0.402643,2.472431,8.717636,9.980869,9.277033,-6.912841,6.676275,-3.693792,9.764107,3.022834,5.181254,-7.823413,-3.510500,-6.261026,-1.675645,-0.790659,-7.659705,-8.913932,8.103250,9.737288,-2.318748,-6.224389,-0.170688,2.094346,-7.059943,4.087534,-3.309162,9.715447,-9.103727,6.181179,0.198966,-3.165264,-3.283944,1.995399,-3.642909,-5.720817,-4.619877,-7.681518,-6.786764,4.356476,1.411260,-5.294051,-1.404313,-4.723201,5.793939,2.520453,-3.404690,8.824342,-3.072410,-5.328435,6.450944,-9.962250,-6.804578,-0.149300,-1.932328,1.909513,9.184522,-5.584631,0.224492,-4.784528,-5.198289,3.422239,2.828397,2.744210,-1.738165,-0.943276,0.670974,5.409198,3.835533,-4.621577,4.848333,7.755238,8.095310,6.254907,0.017022,2.049968,6.933958,-5.093033,8.151155,6.178801,9.672186,-5.144214,-6.492807,-7.755724,0.917314,0.356917,-0.524571,7.537370,-7.569084,4.048385,-8.412723,-3.093234,9.893826,-5.801128,-7.739310,-5.589346,1.288004,-7.869561,7.766091,-2.926320,6.872416,6.355797,-9.291775,8.361834,5.058708,-3.803815,-8.006832,-1.796847,3.497627,-7.481187,-3.402302,-1.179827,6.474393,2.668100,8.448490,-9.801544,7.831959,3.791680,-7.996523,3.011559,9.703665,-8.148784,-3.069185,0.836695,3.933760,3.112449,6.835912,-1.540878,5.450222,6.696129,6.361492,5.382527,3.745124,-6.955506,-3.033605,-7.435524,-2.931345,4.985306,1.327588,-1.681848,-3.809534,-4.252722,5.543254,2.451931,-4.662519,-9.801560,-0.441142,-0.019655,-6.809128,1.390554,-7.917589,-5.469540,-9.174155,3.374932,-4.110790,3.572542,-8.997894,-3.216967,-6.011578,-6.977146,-7.408041,-1.740615,-8.187868,4.295286,3.624750,4.709750,-3.287888,-1.125603,7.399134,-5.612040,-3.448376,5.009993,8.101320,-4.041089,3.731187,-0.220154,9.487358,-4.715366,8.497950,-6.303663,-7.966155,2.784650,0.479082,-9.616064,6.788270,9.273996,-9.430139,-6.847692,-1.001309,2.029147,4.741787,-6.728098,-5.614923,5.469419,-7.443407,-8.684800,6.643146,5.701635,-5.455167,-9.423190,-5.778675,4.162426,-9.386985,-3.105702,-4.824792,-8.509022,1.911867,0.393296,4.427726,4.212885,-5.781504,-8.441840,4.634958,5.710850,6.433275,-6.487732,5.715105,-7.464732,1.022236,-1.779318,-5.295038,-4.596917,7.935602,9.369277,-1.065463,-1.516075,5.606247,-7.778947,-7.057123,-3.933142,3.765028,2.785237,-8.882698,-5.752901,-3.506032,0.882412,7.462136,-1.212122,6.851311,9.783687,9.334133,2.327006,0.121514,0.290343,6.786903,9.129109,-2.759208,2.489676,1.714031,2.628198,-1.677680,-2.915914,-3.984143,5.834081,6.550074,7.207108,-7.917404,6.617727,-3.753006,-9.730408,-6.269003,0.775559,-9.318069,4.894022,-5.182102,-3.671580,0.747041,2.227326,5.408994,-0.105413,2.912507,8.654775,-3.158010,6.751495,-2.993615,-8.340361,-8.718602,9.897419,-5.635375,-3.944441,0.149928,5.693839,3.231695,-3.843268,0.423232,6.548020,-0.729727,6.503648,4.619120,-3.016192,-1.890388,-9.567844,-0.413119,9.888406,-5.924337,1.457829,-2.553175,6.345729,5.482742,4.103138,-7.779338,-3.280119,6.477140,1.446668,-1.720798,-7.594169,-2.853492,4.251625,2.591918,9.242093,-8.439994,6.370977,4.241704,3.733362,2.758541,-5.855959,9.261979,-6.975204,-0.200214,-3.312650,7.344513,6.198386,0.007355,-1.838877,5.291566,7.960700,9.341010,1.760339,1.529352,6.132727,2.735306,-1.999192,-9.570537,7.032048,-8.283026,-2.661044,7.778767,0.794648,-6.013908,5.004053,0.169350,-8.431104,1.671399,0.091157,-7.204698,9.197822,-9.074900,-6.189942,1.275833,9.542071,2.797266,8.709413,4.082405,-2.202816,9.413223,-8.711689,-8.946831,6.211043,-4.239005,-9.181106,0.260283,-3.576089,0.340341,1.738367,-7.795324,-5.555356,-4.705629,-1.741905,-5.477703,0.478490,-0.105844,-3.439775,-3.767657,7.476085,-2.813068,4.444323,7.038679,-2.959240,9.129820,6.331790,-6.216441,6.405323,-6.941136,2.600227,-1.925306,-1.497759,-8.941412,3.050489,-3.297425,5.194207,-3.911844,-9.786177,-7.771210,-2.396508,-7.595957,5.992377,7.373747,6.748605,7.277360,-7.915907,-7.849298,-8.644654,7.613128,8.976301,-9.540791,1.005198,-3.725595,0.213997,-9.522774,-1.612902,5.807118,5.107037,-1.926206,-8.332965,3.332246,-7.647291,5.749412,-0.252607,-5.981129,-0.020088,-5.055997,-9.268551,-4.683464,7.258403,6.191734,5.245610,-5.685483,-4.908824,-2.165619,-0.753634,7.734166,8.460042,0.360043,-9.197516,0.619017,5.222810,-9.755591,-2.990249,8.206857,0.769283,1.965901,8.090775,5.186044,6.022937,7.366910,-3.872215,-7.212430,5.729834,2.754241,4.481529,5.835479,0.036775,-3.210795,-9.325993,0.046410,9.643997,-6.229480,-0.063283,-3.892038,4.711414,2.592202,-4.517838,3.111977,-7.516346,1.266534,-2.551300,-7.461173,-5.308231,1.289568,-7.458298,-6.922024,-1.144238,-5.515419,9.247785,-5.510032,-9.866322,-0.523216,0.056099,7.396661,-0.819495,2.734834,2.231194,-3.287383,4.483991,-9.345790,8.238451,9.622557,5.767778,-4.440490,-1.684094,-8.902874,3.282542,3.730900,-1.008130,-2.323549,-0.670964,9.080069,4.946725,8.633282,-4.151145,-2.037944,9.013654,6.123751,0.209796,8.749623,-2.301025,6.636620,-6.942956,-8.463720,9.423344,7.215955,-0.425967,4.325542,2.739033,-2.197637,-1.993163,4.674244,-2.615325,-9.821113,-8.439774,6.727695,4.588082,-9.085560,-7.242473,4.997337,4.152183,4.322275,5.979827,0.260000,0.839674,-6.481619,-8.259087,3.548127,-0.437975,4.312091,4.397611,4.355366,9.014355,-4.738228,-8.783164,6.040425,5.357158,-7.869855,3.225393,7.330848,9.187850,-8.758448,3.457496,5.245419,5.822727,-9.820391,0.262435,-5.639053,-1.227574,-2.080954,-3.024274,-5.667866,-3.556742,-9.672285,9.442445,7.883396,-2.026517,-1.461156,8.422726,0.290459,-4.696769,-2.548233,-1.801254,-3.857140,4.391439,2.486822,-9.171064,5.764746,-4.704467,-8.765655,2.825862,3.878450,7.502372,4.574630,2.925103,-1.034177,8.790709,3.129672,5.917985,-6.568639,2.556599,-2.260180,9.520940,-8.745410,4.291755,0.799762,-2.851348,-1.715977,7.771578,7.144659,3.658989,-1.475254,-6.362012,-2.518719,-6.830494,-9.079900,-1.379884,1.717304,1.522696,-3.307427,3.335528,5.392875,-3.092914,8.830955,-4.039502,-8.057928,-1.923556,-9.033194,-6.754275,-4.920783,8.640171,-2.488903,8.494550,8.445034,-2.839396,-4.721838,-8.651278,4.411426,5.625184,-4.941137,4.762108,4.927539,4.665461,-1.389088,-8.363622,-3.305789,-2.599083,-5.178271,1.675818,-7.352897,9.330526,8.948042,-7.701948,-4.378627,2.524089,0.369804,1.308053,8.752727,-1.026295,-8.526096,-3.549455,-6.562851,-7.273448,9.635493,5.534764,1.314826,-5.500845,-1.005339,4.448071,-5.921197,5.560458,-6.242461,4.292076,6.466748,9.233462,-1.805000,6.561855,-8.057629,8.147890,5.234634,2.722185,6.616158,1.006728,6.602982,-0.995942,8.744335,9.950536,-3.501693,9.542191,6.050329,-4.098390,8.354871,-6.681071,9.368788,6.966138,-5.085496,6.503640,-0.609710,7.556234,6.783655,1.605869,5.805847,-1.720119,6.669996,-3.087217,7.777317,7.233945,-3.192302,-3.896161,5.301476,-8.105525,8.722601,-9.297959,-1.487514,6.880728,4.855101,-7.367093,7.640611,3.943139,3.751166,9.326678,-1.706061,0.054318,8.371077,-1.197774,9.513535,-7.807468,-2.007590,-4.124831,1.695372,-6.323244,-0.005517,4.495902,-1.155372,9.099723,-4.828899,-9.982954,4.571557,6.586598,3.308314,9.296243,-2.981862,3.650812,-6.329471,3.245700,7.464339,0.652296,8.667839,-0.064693,7.416303,1.215939,-4.406619,-1.996629,1.216156,-0.059916,6.042842,4.556012,-4.876486,-3.229950,-0.401233,-7.547593,8.454835,0.778441,-7.818023,-6.806978,3.276069,-8.849911,3.362988,3.029050,-6.165102,-1.735769,-6.462651,-2.608448,-9.512388,7.317477,-9.022110,4.917086,2.531423,-4.099153,-3.269250,6.802010,-0.449677,8.959204,-5.098994,-8.996999,2.180693,-6.052593,-6.438528,-6.556965,9.084427,4.611726,9.684780], dtype = "float64")#candidate|6884|(1800,)|const|float64
call_6881 = relay.TupleGetItem(func_4145_call(relay.reshape(var_6882.astype('float64'), [14, 28]), relay.reshape(var_6883.astype('int32'), [2080,]), relay.reshape(const_6884.astype('float64'), [900, 2]), ), 2)
call_6885 = relay.TupleGetItem(func_4150_call(relay.reshape(var_6882.astype('float64'), [14, 28]), relay.reshape(var_6883.astype('int32'), [2080,]), relay.reshape(const_6884.astype('float64'), [900, 2]), ), 2)
uop_6914 = relay.erf(var_6875.astype('float64')) # shape=(11, 6, 16)
func_1709_call = mod.get_global_var('func_1709')
func_1712_call = mutated_mod.get_global_var('func_1712')
const_6920 = relay.const([-5,-2,9,-4,-9,3,8,-10,1,-1,2,1,8,2,2,-1,-2,-7,-3,7,9,7,3,4,-3,-7,10,-10,9,-4,-5,-9,7,9,-6,2,-8,5,-8,-7,3,-7,-3,-3,-1,3,-1,-5,10,-8,2,-2,-1,-2,-5,2,-3,2,6,-8,2,2,-6,4,1,-2,4,-3,-2,-5,-6,-6,-6,6,-6,8,8,1,-7,1,7,-2,9,7,4,8,-1,-8,-3,-10,9,-6,5,2,-4,-1,6,3,3,-5,-4,-5,-7,3,-9,10,-8,-6,6,7,9,-3,3,10,-4,3,8,-2,-2,9,-7,-1,7,-7,3,5,6,-9,-1,-7,4,4,7,-8,-2,-2,8,-3,-9,10,-6,6,-2,-3,1,-2,7,6,-6,4,-3,-9,8,-6,2,-10,10,2,-10,8,2,-8,-8,4,-1,3,5,-7,-4,1,-8,6,-9,-3,-3,2,-3,-6,-7,6,-3,3,1,-2,-2,10,-3,9,7,3,-3,5,5,8,4,-9,-4,-4,2,-9,8,-4,10,-5,3,4,2,1,-3,-9,-2,-5,-1,-1,-6,7], dtype = "uint32")#candidate|6920|(216,)|const|uint32
var_6921 = relay.var("var_6921", dtype = "float32", shape = (672,))#candidate|6921|(672,)|var|float32
call_6919 = relay.TupleGetItem(func_1709_call(relay.reshape(const_6920.astype('uint32'), [3, 6, 12]), relay.reshape(var_6921.astype('float32'), [672,]), ), 0)
call_6922 = relay.TupleGetItem(func_1712_call(relay.reshape(const_6920.astype('uint32'), [3, 6, 12]), relay.reshape(var_6921.astype('float32'), [672,]), ), 0)
func_1709_call = mod.get_global_var('func_1709')
func_1712_call = mutated_mod.get_global_var('func_1712')
call_6927 = relay.TupleGetItem(func_1709_call(relay.reshape(const_6920.astype('uint32'), [3, 6, 12]), relay.reshape(var_6921.astype('float32'), [672,]), ), 2)
call_6928 = relay.TupleGetItem(func_1712_call(relay.reshape(const_6920.astype('uint32'), [3, 6, 12]), relay.reshape(var_6921.astype('float32'), [672,]), ), 2)
func_3363_call = mod.get_global_var('func_3363')
func_3368_call = mutated_mod.get_global_var('func_3368')
var_6945 = relay.var("var_6945", dtype = "int16", shape = ())#candidate|6945|()|var|int16
const_6946 = relay.const([[2.620799,-1.504973,2.966825,8.430126],[0.275549,-8.545681,1.395866,-6.104338],[-6.572290,-6.831014,9.053401,1.905042],[-6.197609,1.846960,7.004919,3.698547],[-9.812366,7.048678,-3.144177,3.260776],[-1.556690,-5.505156,-5.837567,0.075908],[-1.135000,9.894798,-3.727220,6.163989],[-7.390702,-1.345201,-6.100272,-2.171990],[8.501974,-0.402059,-9.062990,1.000871],[-7.847888,-8.237278,-7.619958,4.996988],[3.463368,-5.276276,0.591328,-0.016390],[2.553636,5.455523,-3.474102,-5.721592],[0.633665,8.110576,-5.603161,-3.211841],[-2.719614,3.343730,-1.718597,2.906266],[8.552520,-7.820325,-8.222843,-1.266410],[9.681744,7.438593,0.028825,8.074493],[2.364681,-8.844585,4.247161,-1.738711],[4.330451,2.163912,-0.348996,-2.264302],[-3.505153,-4.834341,7.255684,-3.226733],[-2.568858,9.271687,2.449077,-3.817478],[6.053483,-2.791469,7.447787,2.923493],[-7.162450,2.621312,3.947743,8.775739],[-4.831992,-7.239878,-5.789271,-0.205455],[2.902989,1.750896,-7.349529,0.757449],[-7.651706,-5.714994,-8.129920,7.412136],[-6.562508,2.283030,-5.582182,-2.004638],[-9.661388,-5.322177,4.997890,8.762747],[-2.122749,-4.555921,-3.049844,1.947689],[2.147271,-1.302914,3.490140,1.390229],[-9.664023,6.009241,4.219092,3.851887],[8.189490,-2.851653,-9.979959,6.882668],[-0.007279,1.979198,9.247738,-1.379989],[5.966926,-9.029789,-2.101706,-9.980915],[-6.277313,8.569137,1.737506,2.624142],[-8.332073,-0.621740,2.813245,-1.019036],[0.639024,-8.988633,-5.540595,0.283739],[6.611132,-5.400876,9.396921,5.290998],[-0.822349,4.002843,2.696111,-8.788631],[5.413832,1.439490,-8.673909,-1.553064],[8.623533,-0.963438,1.840314,2.968263],[5.607723,-5.952228,0.047716,-8.001940],[-5.089899,0.467999,-7.419949,-1.752390],[-9.502225,-0.875465,5.917803,-3.686078],[6.339661,-5.439630,0.296799,-4.055335],[8.627555,7.351107,-1.023863,-2.604172],[-6.585144,-2.922921,-6.684592,-9.915749],[-4.484169,1.202123,9.935885,1.438355],[2.225400,-9.266087,7.753317,9.383760],[0.954054,1.535282,8.752477,3.269155],[-7.861410,-5.778413,-6.809207,2.778350],[-8.113767,-2.162629,9.774471,-9.771494],[5.049606,3.068565,5.151144,6.602847],[6.828269,-4.261635,-7.186274,-6.663145],[-5.355528,7.738031,8.530790,3.781861],[-0.847897,-6.985539,3.725805,-1.432678],[1.259088,-8.939146,-4.795630,5.739475],[-5.503853,-9.886768,6.914319,5.737452],[-7.193367,-5.868617,-8.223124,7.784006],[3.600876,-5.631467,-3.734826,7.938453],[-3.832946,1.519370,5.419204,-4.288905],[-3.928851,4.257625,-4.537238,6.830761],[4.937591,-2.225969,-0.803551,-0.133329],[2.315146,-4.439733,9.884803,5.463796],[3.953399,4.746028,-2.223268,8.153154],[-2.116409,-7.579200,6.494534,9.820794],[-3.908201,-2.144616,1.136635,-6.149655],[9.775644,8.157782,5.013148,-1.524704],[6.647431,5.442181,-2.941373,-2.710984],[8.460780,7.379989,4.177786,-1.820724],[-3.769239,-6.088306,2.761967,9.128421],[7.939355,-5.170082,2.440393,-6.621498],[-1.553376,-1.617378,-8.714705,6.048116],[-4.117794,-6.541860,-8.107520,3.819658],[-6.395410,-2.364758,-0.177897,-4.864269],[-4.188156,-1.500076,-5.374946,-1.839866],[9.174546,8.340441,-9.381644,4.411364],[3.481580,-3.940677,-2.540827,-4.869389],[7.918802,8.911097,-5.360870,4.961148],[-0.436113,7.646593,-2.808116,0.069366],[-6.512796,0.201131,2.889531,1.044173],[8.566696,-1.449210,1.665270,-2.465496],[-2.740910,0.238614,9.504782,3.708538],[-5.700723,-2.570882,5.674366,-7.110744],[-5.884795,-4.920044,9.465078,-6.104289],[4.605714,-2.434695,-2.263579,2.115223],[-8.142968,1.296292,7.041408,8.003877],[1.374848,8.634944,0.142696,4.562599],[1.293070,-2.865052,9.506051,0.642572],[9.781597,-8.095234,-4.277436,-3.634383],[-6.095020,3.944864,6.270957,9.994741],[-5.670484,4.854464,8.022457,-4.822225],[-2.489376,3.351207,5.997675,-0.584347],[-1.752078,-8.901269,-5.731233,-1.057643],[7.418569,-9.807125,-2.170501,2.124510],[-0.760691,7.021980,4.835759,4.145140],[-5.174483,-2.719147,6.161689,-8.271948],[1.181341,6.042199,-1.195922,-2.633521],[3.317277,-8.906604,-2.665875,-0.051842],[-6.112322,-5.974679,3.436205,6.577082],[-0.631011,-0.815090,-1.877166,-2.175757],[4.572062,9.537578,6.041880,4.797200],[-2.783306,-8.419098,-1.069607,-6.948900],[-5.802314,-1.719652,-0.962907,2.521409],[2.644749,-0.593940,6.289985,5.255888],[-9.997999,-2.958124,-3.217534,-3.599784],[5.436087,-3.817074,-1.595078,-1.080060],[2.119643,-1.766265,-7.206144,4.049133],[5.021657,1.211646,-1.185475,-1.990601],[3.260951,-8.395046,-8.135451,-9.852133],[4.604947,7.016169,1.542677,4.363626],[2.335469,-3.580581,4.261663,3.811602],[-5.932739,0.612073,-4.271185,5.626306],[-9.997627,3.744977,3.461226,-5.743428],[-5.539854,-4.655903,0.671733,0.591509],[3.647949,-7.885439,2.460502,-8.465091],[-2.746252,-2.271034,6.667182,-5.135033],[0.747997,-6.634831,-3.056012,8.768786],[7.770999,-0.406120,3.378318,2.020139],[-9.336213,-8.406029,4.002957,2.066988],[-8.642753,-2.799266,1.026405,-9.680988],[4.021313,0.510622,3.430251,-1.572667],[-8.564926,-4.246091,-1.397102,4.767017],[6.833294,-4.570964,-8.348822,8.159760],[5.554949,-9.607825,-1.171370,3.493710],[0.371375,2.519966,-1.112284,1.969402],[5.289113,-6.362568,5.662185,-3.608563],[6.293756,-4.093488,-2.402617,8.321139],[7.186669,-9.654255,-4.210038,1.702753],[4.112804,-2.568301,3.198066,-4.529539],[2.484687,-9.484591,-3.853040,-4.046422],[-2.731831,2.447925,-2.371652,-5.386805],[-2.255626,0.110876,7.850765,3.135880],[-9.187050,-6.248400,0.659533,-0.723832],[8.886165,-9.347245,5.136798,-9.221911],[3.641837,-1.136743,-9.657089,6.889427],[2.336648,6.434774,-6.330622,1.384475],[-6.823474,-8.206225,0.600450,9.955487],[1.754066,-6.919997,-8.918436,-9.709093],[9.884668,3.881090,-8.696699,-4.072378],[1.751496,-3.926955,-3.163368,-8.726034],[5.098965,2.813916,0.042665,6.831399],[-5.344382,9.467376,-5.722513,-2.740514],[-0.331687,3.220177,-0.585935,6.081680],[1.078407,5.649016,5.271911,4.391345],[-0.123550,8.868976,6.988407,6.724270],[7.168393,-6.049768,-0.688282,5.096115],[-5.384005,1.472388,-7.329005,-1.958680],[-7.463904,-9.713235,-9.621242,-0.094887],[-9.929977,-6.538416,1.318586,0.627300],[1.309321,-1.023544,-0.271308,-1.792375],[2.507759,1.536079,-2.639648,6.632352],[-9.374574,0.492770,9.524652,6.411709],[8.112798,4.296951,9.192311,1.727941],[-5.386369,2.811714,5.155444,2.032766],[4.503556,6.842802,2.723195,9.973977],[-2.075586,-0.442682,-5.528584,9.227032],[7.068299,-6.131934,2.610923,0.434512],[-8.434660,-6.946223,9.359876,-3.638132],[-7.091055,-0.171116,-3.291396,4.050416],[-6.641439,6.770550,-6.647978,7.639896],[5.332676,-4.903479,8.379662,1.965522],[-9.528297,-7.534841,9.826701,6.087487],[-6.010379,2.711448,6.971840,4.437460],[-9.913904,-5.304623,4.661424,6.129236],[-8.145195,8.978137,5.863942,9.915250],[-9.116639,0.782171,-2.814093,5.006003],[6.093860,5.005662,-0.593346,-8.492594],[1.601548,3.828485,-4.648758,-7.735935],[-2.715939,7.056036,-4.162938,-4.683379],[-0.840388,-7.576691,-4.603362,5.000470],[1.435765,-6.889438,8.309416,-5.044398],[6.755803,9.049900,-6.615228,-6.598588],[9.273997,6.637919,-8.419965,-0.691409],[5.771348,2.717323,-5.372242,1.775164],[-2.581512,6.297038,8.703384,-8.019248],[4.458790,-3.787953,4.117000,5.986592],[-3.051729,-4.675839,-3.175307,5.769851],[-7.811260,1.746327,2.536774,-5.158035],[-6.186187,8.275362,3.666157,-4.633954],[3.710524,5.278156,-0.501213,0.452427],[3.843691,9.969875,-3.954729,7.687457],[-3.645807,-8.044596,-1.831528,2.451849],[-8.724139,-1.826689,-4.214777,9.876887],[8.921257,6.985790,1.199617,4.097897],[-1.610264,-3.625201,2.485612,4.581212],[-3.582782,-7.479305,-0.166310,1.781776],[-2.295111,7.855209,-7.928169,5.777333],[2.415480,5.491376,6.397696,2.748243],[-7.811037,9.804684,9.301682,6.543784],[-4.991831,-5.622065,2.144507,2.388231],[0.061823,-5.082691,7.709076,-7.182947],[-7.247825,7.709380,-9.076209,-5.161458],[-7.906549,-5.262161,-1.943644,4.295490],[8.927132,-2.924183,0.745578,0.070757],[-1.948110,3.898263,8.310692,-9.743823],[1.552486,7.681707,-0.956637,-0.686542],[0.055936,-3.108852,-7.934946,-9.838591],[-5.059978,-5.236498,9.960605,-8.141066],[-8.906949,4.645889,0.861461,5.070789],[-5.419964,-1.890010,-4.841149,7.692610],[-5.331949,-0.451089,-7.135284,-6.690682],[2.884090,-8.428755,-9.246394,-3.471287],[-9.370509,-3.266811,3.360123,8.601678],[5.443551,-4.683634,-9.497605,7.064931],[1.921969,-2.997148,3.967423,-0.717752],[3.834043,8.265679,-2.168101,-4.974388],[9.248327,-4.033048,2.370300,-7.963349],[-8.257327,-0.380666,3.315257,9.559047],[3.850831,-4.187408,-8.834464,4.645849],[7.410132,-8.440557,-9.259949,2.613574],[9.940157,-1.986804,1.395291,3.216243],[4.419559,-9.396739,-2.673187,-3.348004],[7.372385,-8.309141,1.575903,-8.646810],[-9.258276,-4.242707,3.999789,-6.203489],[-3.140454,1.879628,-0.500359,4.212555],[1.386584,-1.347585,6.949733,3.956942],[5.527433,-7.136409,-0.120035,5.633597],[5.261545,7.351074,9.263816,-4.296112],[5.345988,4.303009,-3.263289,3.415774],[1.842022,2.876376,-7.106278,1.186737],[-4.093037,7.044778,-9.710861,2.724914],[-2.954840,6.559567,8.134422,1.784910],[0.951491,-1.777509,1.845165,1.272554],[2.887569,5.202274,-6.834402,6.886759],[7.992776,9.526848,7.554555,0.166510],[8.962043,-4.213852,-6.529806,8.266748],[-1.886852,-0.346325,-4.332223,-9.486275],[-8.555239,8.531357,7.468464,-7.240776],[6.545069,-1.801336,-6.761592,3.879239],[-2.596408,-4.777848,1.541814,6.298356],[0.870791,-0.074595,6.558407,5.229329],[-1.669487,-3.009368,2.894361,-7.343029],[-0.386925,-3.571492,9.482142,8.743779],[4.952153,-9.965483,9.264567,-8.823470],[5.717180,-7.188329,-3.419610,5.826003],[8.753654,-3.144138,-8.046923,9.011518],[6.715443,2.857965,5.050481,4.792752],[7.774810,-4.107904,5.957740,7.314588],[0.841747,2.950908,-9.898939,-3.995623],[0.333371,-6.600980,-6.350724,-9.984599],[7.460682,-5.093370,-6.585465,3.950772],[5.935190,7.982885,1.733191,-7.051399],[-6.434079,-7.197180,-8.055677,-1.540869],[8.504950,1.150086,4.750153,7.766311],[6.682705,0.081980,7.458240,8.458129],[-4.213871,9.646740,-8.527896,-0.019271],[-8.702829,7.539872,-1.157150,-9.297394],[-3.729915,8.060019,1.416405,5.288475],[-2.856850,7.866754,5.403930,-6.379895],[8.237166,2.361812,3.969859,-0.085899],[-6.607900,-0.159860,-1.125451,-5.792024],[-6.076933,-6.493018,4.936839,3.486413],[-8.475817,0.474495,7.902953,-3.732775],[-0.195510,-0.313381,2.140565,4.639718],[-7.325338,-2.888891,-0.871676,-2.975499],[-6.414127,-3.711088,-7.065375,1.004210],[-2.396225,-4.626044,0.808246,-1.566556],[1.173352,7.928649,-1.209532,-8.108107],[6.409853,1.965614,-7.178114,-0.632203],[-5.742789,-7.856933,-0.955740,8.945823],[-0.913008,7.099006,-8.810487,5.450051],[-7.231603,9.135356,8.743620,-5.895952],[-0.554793,-6.298332,5.537164,-6.490887],[-9.559665,-3.966173,-2.234395,8.575490],[8.035105,-0.079048,7.859196,9.011647],[8.787037,-7.759646,3.865643,3.191704],[-4.910537,-0.757810,-9.333386,8.595488],[1.065502,-1.181226,5.589585,-5.664428],[-8.609488,5.752411,4.659087,2.606739],[3.006665,4.287550,-0.285571,-0.814398],[8.906656,-8.467672,0.223132,-5.166336],[8.366393,8.574943,-7.661033,-4.658044],[-6.376258,-9.838162,-0.972268,-8.315136],[9.442587,-0.535089,-5.936387,-5.748290],[5.069898,-4.625549,-0.334210,7.334019],[3.724868,4.683453,9.599890,-1.619922],[6.612698,6.429601,-5.324761,8.062765],[3.208177,-6.382297,-3.688435,4.877080],[9.464343,6.256213,-5.295991,-2.567396],[1.396546,-8.039401,4.566506,-3.841323],[0.171618,-3.085094,-2.035697,-7.441785],[-8.299322,0.372262,9.667190,-3.995889],[-6.619307,1.167301,5.421176,-8.710031],[3.530070,7.514764,6.311888,3.382406],[7.735069,2.891198,3.847910,6.517090],[-9.422478,-9.546900,-4.833269,-3.563929],[-9.095107,5.194457,5.870636,-8.132556],[-3.536397,2.459791,-5.448028,4.198829],[5.472659,3.858517,-0.881957,-7.690355],[5.390971,-4.799478,2.864093,4.789416],[-6.533704,4.107617,-4.502110,-9.207213],[7.712837,0.971379,-5.419277,7.613120],[7.159477,-6.004113,-7.182917,-3.854215],[-4.557741,6.950593,8.651372,8.133324],[9.662810,-0.608256,3.099120,4.086099],[-3.697246,-9.183500,1.004396,-2.764799],[-5.793902,-3.530145,4.479140,-0.958791],[9.986015,-8.213554,-9.001763,2.131010],[-9.322915,-4.242983,-6.037642,1.332248],[-1.276774,-5.421887,4.281536,-7.451153],[6.690235,-7.925802,6.493692,-9.061600],[-7.680095,2.104639,4.396950,3.844342],[-0.151330,8.499457,3.387831,-9.318732],[-4.474523,0.936722,0.146579,5.629675],[-6.326727,-5.880538,-7.531380,-0.344471],[8.130683,-1.567959,-3.465169,-3.529932],[9.571476,-9.488846,-2.499508,-7.799317],[9.147270,3.581640,5.778791,0.807233],[-7.330673,4.996617,6.277793,-2.201802],[1.041438,8.022304,-9.796041,9.111107],[9.808974,-7.351525,-0.456279,-8.553977],[-0.333942,-0.004854,-0.260879,3.729384],[3.771299,0.665993,-7.455770,4.767489],[-8.433218,-7.712245,8.130085,-8.369847],[8.755564,-5.986107,6.519620,2.230723],[-9.604779,5.016388,8.401683,-2.335696],[5.971519,7.936948,2.056926,-4.578027],[8.344695,-3.330678,-8.622363,8.109751],[4.797065,2.920201,-9.288156,-0.921273],[-8.788790,3.752205,-9.464805,8.013177],[-1.306970,5.661006,4.603444,3.714224],[-0.377885,5.513028,0.088024,-7.632890],[5.649978,4.341330,-4.728741,-0.800693],[-7.768261,0.679430,5.106312,-5.336372],[1.150485,0.972888,1.338668,-7.860524],[-6.528712,-6.464498,-5.096388,-4.200785],[-4.475940,-2.614377,3.608115,-9.997468],[-9.631458,-9.151607,-5.480965,5.539590],[2.937000,-5.031580,-9.799353,-6.583726],[1.176386,-1.196240,-8.273866,4.659478],[-0.973746,0.628513,-0.810532,5.226628],[0.070097,6.952067,6.084120,-7.258629],[5.883612,0.235450,0.901381,1.240450],[1.584105,-3.689985,-6.923077,-3.060045],[0.953490,2.195040,4.817820,2.672654],[-5.378180,-5.008149,3.976471,-4.673827],[-8.653251,-7.357889,-1.795281,-7.546857],[1.723554,2.353224,-1.774606,3.181509],[8.203007,0.166627,3.598589,-4.251968],[9.684031,2.928979,4.192222,-3.485813],[-8.136878,0.674490,-8.356931,-5.099818],[-3.792371,1.664761,2.469027,5.054194],[4.385213,-9.800195,0.526875,6.177654],[9.881190,5.107164,-6.051671,-4.168825],[8.588987,2.988507,3.721741,6.946486],[5.778416,-5.626436,9.540465,-2.545370],[5.551483,-6.999204,4.474065,6.249223],[-8.536271,9.057906,-3.136843,7.815126],[2.421253,6.777156,-5.060334,-6.662315],[-9.083170,7.722728,-0.461679,-7.498710],[-8.048319,-9.433132,-5.484476,-4.644735],[1.637350,-9.270467,-8.733129,4.989524],[-4.273616,-0.067596,3.744034,8.435554],[-3.981755,-8.380259,-8.727988,-8.645959],[2.174360,-1.938531,-3.604387,-9.263852],[-7.810822,-0.333706,0.206977,-9.763775],[-3.546602,-0.666672,5.708439,6.368785],[-2.209375,7.133445,5.216993,2.581356],[-3.964458,-7.762568,0.338376,-8.279734],[2.525576,-4.987202,-1.885571,4.261882],[5.515515,9.610050,9.923397,-2.398682],[-3.400625,-4.825221,7.139050,-6.356890],[5.336584,9.812418,6.735717,-2.900013],[-8.133126,3.976675,6.307866,8.562334],[8.338988,5.156639,-1.509327,-6.506013],[9.447641,-4.403175,6.293488,7.706715],[0.473843,1.009628,-8.164710,-6.576467],[-6.520629,-8.417939,-4.805344,-8.240157],[-5.401595,-4.048580,-0.100068,6.581364],[4.185783,-6.211378,-9.512988,4.861638],[-9.049656,-3.165629,-4.814601,4.194991],[0.880419,-3.734440,-3.611035,3.610705],[-8.751353,4.462668,-5.005431,2.314239],[-0.673726,-1.179123,9.401930,-7.675384],[-2.900884,-0.814155,3.013643,8.237527],[1.332274,-5.299685,2.239722,-7.365091],[8.601984,-6.814800,-9.924295,8.854247],[1.434410,8.094613,9.889111,6.911041],[5.809083,-3.280838,0.541133,7.896683],[0.708339,-9.015080,8.451512,3.895443],[-8.049679,-5.795368,8.864337,8.095302],[-5.214045,1.270439,8.748176,2.618390],[-6.992876,3.093369,-1.154882,1.283101],[3.607080,-4.132413,-2.423998,5.132529],[3.923566,-7.550117,-2.884574,0.482782],[-5.726902,-8.006750,3.028616,-0.398136],[-7.675752,-8.480809,-4.830035,-8.091948],[7.018111,-7.333782,-2.411508,1.086588],[-8.995944,-0.634547,3.788016,0.099809],[-7.554050,8.450703,3.682064,-1.210007],[-6.979163,-3.841002,-3.706068,-7.911134],[6.446290,5.347024,-4.671843,2.521903]], dtype = "float32")#candidate|6946|(392, 4)|const|float32
call_6944 = relay.TupleGetItem(func_3363_call(relay.reshape(var_6945.astype('int16'), []), relay.reshape(const_6946.astype('float32'), [7, 16, 14]), relay.reshape(call_6919.astype('uint32'), [108, 2]), ), 3)
call_6947 = relay.TupleGetItem(func_3368_call(relay.reshape(var_6945.astype('int16'), []), relay.reshape(const_6946.astype('float32'), [7, 16, 14]), relay.reshape(call_6919.astype('uint32'), [108, 2]), ), 3)
func_4182_call = mod.get_global_var('func_4182')
func_4183_call = mutated_mod.get_global_var('func_4183')
call_6958 = relay.TupleGetItem(func_4182_call(), 0)
call_6959 = relay.TupleGetItem(func_4183_call(), 0)
output = relay.Tuple([uop_6876,call_6881,var_6882,var_6883,const_6884,uop_6914,call_6919,const_6920,var_6921,call_6927,call_6944,var_6945,const_6946,call_6958,])
output2 = relay.Tuple([uop_6876,call_6885,var_6882,var_6883,const_6884,uop_6914,call_6922,const_6920,var_6921,call_6928,call_6947,var_6945,const_6946,call_6959,])
func_6963 = relay.Function([var_6875,var_6882,var_6883,var_6921,var_6945,], output)
mod['func_6963'] = func_6963
mod = relay.transform.InferType()(mod)
var_6964 = relay.var("var_6964", dtype = "float64", shape = (11, 6, 16))#candidate|6964|(11, 6, 16)|var|float64
var_6965 = relay.var("var_6965", dtype = "float64", shape = (392,))#candidate|6965|(392,)|var|float64
var_6966 = relay.var("var_6966", dtype = "int32", shape = (2080,))#candidate|6966|(2080,)|var|int32
var_6967 = relay.var("var_6967", dtype = "float32", shape = (672,))#candidate|6967|(672,)|var|float32
var_6968 = relay.var("var_6968", dtype = "int16", shape = ())#candidate|6968|()|var|int16
output = func_6963(var_6964,var_6965,var_6966,var_6967,var_6968,)
func_6969 = relay.Function([var_6964,var_6965,var_6966,var_6967,var_6968,], output)
mutated_mod['func_6969'] = func_6969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6472_call = mod.get_global_var('func_6472')
func_6474_call = mutated_mod.get_global_var('func_6474')
call_7006 = relay.TupleGetItem(func_6472_call(), 0)
call_7007 = relay.TupleGetItem(func_6474_call(), 0)
func_4746_call = mod.get_global_var('func_4746')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_7016 = func_4746_call()
call_7017 = func_4746_call()
output = relay.Tuple([call_7006,call_7016,])
output2 = relay.Tuple([call_7007,call_7017,])
func_7028 = relay.Function([], output)
mod['func_7028'] = func_7028
mod = relay.transform.InferType()(mod)
output = func_7028()
func_7029 = relay.Function([], output)
mutated_mod['func_7029'] = func_7029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5752_call = mod.get_global_var('func_5752')
func_5754_call = mutated_mod.get_global_var('func_5754')
call_7033 = relay.TupleGetItem(func_5752_call(), 0)
call_7034 = relay.TupleGetItem(func_5754_call(), 0)
func_1582_call = mod.get_global_var('func_1582')
func_1584_call = mutated_mod.get_global_var('func_1584')
const_7044 = relay.const([-3,-7,1,3,7,-8,4,-6,-2,5,-2,-4,-4,-9,5,8,-2,-8,6,-4,7,-8,2,3,10,3,7,-6,-8,-5,-8,-8,-10,5,10,-7,-3,-9,8,1,9,10,1,8,3,-10,-8,3,-7,-2,-10,-5,5,-8,-7,8,2,4,4,-3,-5,7,-3,9,-9,-8,-1,9,-8,-8,-7,3,-4,5,8,4,2,7,10,-9,9,7,2,-8,5,7,2,-3,8,-4,-7,10,-8,9,4,-8,-3,5,-10,-8,-10,-9,5,-9,-2,-9,-1,-2,-7,10,7,4,-4,-7,-3,1,10,-6,-4,9,-1,-8,-9,-5,9,6,5,6,-1,6,-8,7,-7,-4,-1,-10,1,-7,6,5,-7,-3,-4,-4,4,9,6,-1,-3,5,-5,-8,-3,-5,9,6,4,10,10,3,1,7,1,10,10,10,10,-2,-7,4,10,1,1,1,3,-7,-7,-2,10,-2,7,6,4,-2,8,6,-8,-1,6,2,6,-6,2,1,7,-4,7,-4,9,-1,-4,2,-4,10,-5,-1,-2,3,-2,7,8,-8,3,-8,-7,-9,8,2,-6,-1,-7,-1,-1,4,-9,-5,-4,5,-4,-10,-4,4,2,-3,10,-1,-8,5,-7,5,2,6,-4,3,-4,10,2,7,10,4,3,7,6,-3,3,-2,7,-10,8,8,6,9,2,4,7,-3,1,-4,-2,-3,-4,-9,-4,-3,-2,-8,8,8,5,-3,-2,-5,-6,4,-7,-2,-4,3,2,4,-6,4,-10,-6,-8,9,5,3,-4,-1,5,-1,6,9,-1,-4,5,-9,-4,-4,-3,-2,-7,-2,-3,-2,-8,-7,9,4,9,5,8,1,-10,-4,-7,3,-3,-5,-10,5,9,2,-8,-8,-4,10,-8,2,7,-2,4,10,-2,4,-3,-10,10,10,8,-2,-2,2,7,-7,4,1,-5,-5,-8,-9,-7,3,10,-5,3,1,-4,-3,-9,-5,10,-10,9,-1,4,7,-10,-1,4,-9,5,-4,2,-8,-10,5,1,4,-1,-6,-7,-6,-1,-7,5,6,5,7,-7,-8,9,6,9,9,-9,4,-6,-2,9,6,3,-2,-1,-6,5,5,9,6,-5,7,10,7,2,-6,9,5,-3,-2,7,1,4,-7,-9,-1,8,8,9,-7,-5,2,-3,7,3,8,-9,-1,7,8,-1,-2,-8,8,-6,-6,5,8,-4,-6,6,6,-7,8,5,1,6,-4,6,10,4,-6,6,9,-8,-7,-10,-10,2,-10,6,4,9,-8,7,-10,6,1,9,-3,6,-3,-5,-5,3,-5,-9,2,-4,-6,10,3,1,9,-6,8,2,-10,4,-3,1,7,4,9,-2,2,-10,-8,-1,-2,1,10,-3,10,4,-6,1,6,-3,-5,9,-6,2,-1,-3,9,4,7,10,5,-9,10,4,-5,-10,-3,8,1,5,5,4,4,-3,-5,8,-8,1,-9,5,-4,-6,7,6,6,-9,-1,-4,1,8,2,-6,-5,10,1,-9,2,2,1,-5,-1,-7,7,9,-9,-4,3,3,6,-3,1,-2,7,-10,1,-5,-10,-5,4,-7,-3,5,-10,5,6,-2,7,-9,5,-3,5,-9,8,5,9,4,2,9,10,7,1,-2,-3,-5,10,-7,3,1,-1,5,8,-4,-1,-2,5,8,9,4,-10,-10,-6,5,-2,-3,5,-5,-9,1,9,4,3,2,1,5,5,-4,-2,-2,-7,9,5,3,10,8,7,5,-4,-3,-3,8,4,10,-1,2,9,10,-5,2,6,7,9,-5,-1,8,9,-3,-8,-8,-7,-6,2,-2,8,-2,-3,-10,-3,5,-7,7,9,-6,-4,7,-7,-10,1,-5,8,-5,-8,-1,-4,-4,-9,5,-2,-6,-7,2,6,-2,5,-5,-7,-4,-7,-6,3,-10,-5,-2,-7,-5,-1,-10,-10,3,-10,-8,1,1,-9,9,-1,4,-7,2,7,10,-6,-5,1,-2,10,-9,2,-1,1,2,-2,-7,-5,2,-8,-9,1,1,-4,6,-2,7,6,-6,-7,-10,-7,7,-6,1,9,8,-6,3,-1,3,3,1,7,8,-6,-4,-5,-4,-8,-5,-6,9,2,-1,-1,8,6,7,7,-9,4,-7,-2,10,-7,-9,5,-3,9,2,10,-8,-1,10,-10,10,-2,-3,-7,6,-7,7,2,1,-5,5,-4,2,8,3,10,-4,-2,9,-1,5,10,1,1,-5,-4,-2,5,-4,-7,-3,-2,-9,7,4,-3,-7,1,4,10,10,2,-4,7,10,-7,-1,1,3,-10,-5,6,-5,-9,-8,-10,3,-2,7,-7,3,1,10,6,9,10,8,-7,4,-1,5,1,-3,6,-2,10,-4,-9,-2,-8,10,8,-6,10,3,2,-5,7,-8,2,4,5,-1,-4,1,8,2,1,3,7,5,3,4,9,-10,2,-3,4,3,-8,2,8,-4,-3,8,-2,-1,4,2,7,-6,-8,8,-2,-1,-5,-10,8,-10,2,3,5,-10,1,-4,-6,9,-9,7,8,-4,3,-6,8,2,-5,6,8,9,-10,10,-5,-1,6,6,7,6,3,-9,-9,-5,-5,-6,-8,6,10,-5,5,-7,-5,-4,4,2,-4,-10,-3,7,5,5,-8,3,-7,3,4,4,5,-4,7,-6,-9,4,-1,-10,-2,-2,-5,10,-5,3,-3,1,-2,6,-10,-2,9,1,-7,-8,7,1,9,2,-4,-3,10,6,-6,-5,5,7,3,5,8,-1,7,5,-5,8,-1,-8,-3,-3,9,9,-5,-1,2,-10,-1,-5,3,4,8,9,3,10,-4,-8,1,8,-2,6,-4,6,7,6,3,10,-2,-9,-8,10,2,-6,5,-2,-4,-5,-7,8,2,6,1,-7,6,-7,-6,8,-7,4,-2,-3,5,7,-8,-7,-8,-6,-2,-4,-10,5,-10,-6,9,10,-6,-8,-10,-4,1,-9,-6,-9,-9,-7,4,6,4,2,2,5,-7,-1,-9,7,6,-10,-2,-9,2,1,7,-1,-1,-2,-4,-3,9,2,-8,-7,-7,-7,6,2,-1,5,2,8,-8,6,-9,-5,-4,-6,5,7,2,1,-1,7,7,1,-5,-1,-1,-5,8,9,-8,-4,-2,-5,4,-4,10,-8,-3,-6,-8,-3,6,9,9,-5,7,-10,-10,-5,2,1,1,8,-8,4,1,-5,5,-10,4,-1,-5,-9,-5,-9,-4,-10,-2,10,-3,6,-2,-1,-8,1,-6,-4,5,-4,-8,9,5,-8,8,-7,-4,2,-7,-5,4,7,-10,9,-2,8,-9,-5,-6,3,3,-4,-4,-5,9,-4,-7,3,1,5,-6,-5,-1,1,-5,1,6,-7,2,-1,-3,6,-7,-9,2,2,-8,4,1,-7,2,4,-3,-6,6,-8,4,1,4,10,8,5,-2,5,6,10,10,-6,7,-8,1,2,-9,-1,-6,10,-4,10,-5,1,-5,-3,-5,7,-1,4,8,-1,10,-3,-2,10,9,-6,-3,8,-6,-2,-10,-4,4,6,4,3,9,2,-9,9,-2,-10,2,4,1], dtype = "uint8")#candidate|7044|(1344,)|const|uint8
call_7043 = func_1582_call(relay.reshape(const_7044.astype('uint8'), [16, 6, 14]))
call_7045 = func_1582_call(relay.reshape(const_7044.astype('uint8'), [16, 6, 14]))
uop_7061 = relay.acos(call_7043.astype('float64')) # shape=(16, 6, 14)
uop_7063 = relay.acos(call_7045.astype('float64')) # shape=(16, 6, 14)
output = relay.Tuple([call_7033,const_7044,uop_7061,])
output2 = relay.Tuple([call_7034,const_7044,uop_7063,])
func_7071 = relay.Function([], output)
mod['func_7071'] = func_7071
mod = relay.transform.InferType()(mod)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7071_call = mutated_mod.get_global_var('func_7071')
call_7072 = func_7071_call()
output = call_7072
func_7073 = relay.Function([], output)
mutated_mod['func_7073'] = func_7073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4746_call = mod.get_global_var('func_4746')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_7159 = func_4746_call()
call_7160 = func_4746_call()
output = relay.Tuple([call_7159,])
output2 = relay.Tuple([call_7160,])
func_7161 = relay.Function([], output)
mod['func_7161'] = func_7161
mod = relay.transform.InferType()(mod)
output = func_7161()
func_7162 = relay.Function([], output)
mutated_mod['func_7162'] = func_7162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3872_call = mod.get_global_var('func_3872')
func_3873_call = mutated_mod.get_global_var('func_3873')
call_7186 = relay.TupleGetItem(func_3872_call(), 0)
call_7187 = relay.TupleGetItem(func_3873_call(), 0)
output = relay.Tuple([call_7186,])
output2 = relay.Tuple([call_7187,])
func_7189 = relay.Function([], output)
mod['func_7189'] = func_7189
mod = relay.transform.InferType()(mod)
mutated_mod['func_7189'] = func_7189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7189_call = mutated_mod.get_global_var('func_7189')
call_7190 = func_7189_call()
output = call_7190
func_7191 = relay.Function([], output)
mutated_mod['func_7191'] = func_7191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_7195 = func_3525_call()
call_7196 = func_3525_call()
func_3588_call = mod.get_global_var('func_3588')
func_3595_call = mutated_mod.get_global_var('func_3595')
var_7204 = relay.var("var_7204", dtype = "float64", shape = (392,))#candidate|7204|(392,)|var|float64
var_7205 = relay.var("var_7205", dtype = "int32", shape = (2080,))#candidate|7205|(2080,)|var|int32
const_7206 = relay.const([[-7],[-2],[-9],[7],[4],[6],[-2],[7],[-8],[-7],[8],[8],[10],[9],[-1],[2],[-1],[2],[3],[5],[7],[-3],[8],[2],[-9],[-6],[-3],[-5],[8],[-8],[-10],[-9],[-7],[2],[-10],[-9],[-10],[5],[-2],[-1],[6],[-6],[-6],[3],[4],[2],[-2],[-6],[4],[8],[4],[-9],[10],[2],[1],[-1],[-3],[-5],[9],[-2],[9],[-6],[7],[-7],[7],[-4],[-3],[-7],[7],[4],[-3],[4],[-3],[4],[8],[4],[9],[6],[9],[6],[-9],[9],[3],[4],[3],[7],[-5],[3],[-1],[2],[4],[7],[-4],[-9],[6],[-1],[6],[-8],[5],[-1],[2],[-6],[1],[6],[6],[-3],[4],[6],[-1],[-2],[-2],[4],[2],[9],[4],[6],[7],[4],[1],[2],[-8],[10],[3],[9],[-2],[-2],[4],[4],[-6],[3],[-10],[7],[-3],[7],[-8],[3],[-2],[-7],[10],[-10],[9],[-7],[-8],[8],[4],[5],[2],[-3],[-10],[9],[7],[-6],[-7],[-5],[-1],[9],[5],[-2],[7],[-8],[-3],[6],[2],[2],[-10],[-1],[-5],[8],[-10],[-6],[6],[-2],[3],[5],[-7],[-10],[-3],[-10],[6],[8],[-3],[2],[8],[7],[-3],[-10],[10],[1],[9],[3],[6],[-8],[10],[7],[-8],[-9],[-5],[-8],[-1],[10],[1],[2],[-3],[7],[8],[8],[5],[-4],[-4],[10],[-7],[4],[2],[-5],[-10],[-8],[7],[4],[-4],[2],[3],[5],[-7],[-3],[-1],[2],[6],[9],[7],[-4],[9],[8],[3],[-5],[-5],[8],[-10],[3],[1],[8],[-1],[-9],[6],[6],[2],[-2],[9],[8],[-4],[-10],[2],[6],[-10],[-1],[7],[4],[-2],[6],[10],[5],[9],[2],[1],[-1],[-3],[-3],[-10],[8],[10],[-10],[9],[-6],[6],[10],[3],[8],[3],[1],[8],[-9],[4],[5],[-3],[-3],[-2],[-1],[-8],[3],[8],[-1],[-1],[4],[-9],[-7],[8],[7],[2],[-5],[6],[-9],[2],[1],[-6],[5],[2],[-6],[7],[6],[-2],[10],[-1],[-3],[8],[7],[7],[-2],[5],[-10],[-2],[6],[2],[-4],[9],[-4],[2],[-2],[-10],[5],[2],[-4],[9],[9],[-1],[-6],[5],[-6],[3],[6],[1],[4],[4],[8],[10],[4],[7],[-2],[-3],[-2],[-9],[9],[2],[1],[-9],[-7],[6],[6],[7],[6],[9],[-1],[5],[7],[-4],[4],[9],[7],[1],[7],[4],[-2],[7],[-2],[4],[-2],[-7],[1],[6],[-2],[7],[6],[-1],[7],[1],[-4],[10],[-9],[4],[1],[-9],[-10],[8],[8],[9],[6],[8],[-2],[-5],[3],[-5],[-2],[4],[3],[-3],[3],[9],[-10],[-5],[3],[-10],[10],[1],[9],[10],[-1],[-10],[9],[-4],[-2],[-9],[1],[-10],[-5],[9],[9],[-6],[-7],[10],[2],[-9],[-3],[8],[3],[-8],[-1],[9],[3],[10],[4],[-5],[-9],[1],[-8],[2],[-9],[5],[-10],[-7],[6],[-7],[2],[-6],[-3],[4],[-6],[-10],[2],[10],[2],[-3],[5],[-6],[2],[-7],[1],[-5],[9],[-8],[10],[2],[5],[-2],[5],[8],[-6],[-10],[-9],[-5],[2],[-9],[-9],[5],[-8],[2],[7],[5],[-8],[-10],[10],[10],[-10],[-6],[-9],[-2],[-6],[-3],[5],[-3],[-3],[10],[-9],[-3],[-3],[9],[10],[9],[4],[-1],[-10],[-3],[3],[-9],[5],[3],[7],[7],[2],[6],[-10],[9],[6],[4],[-7],[2],[-7],[2],[-4],[2],[5],[7],[-1],[-1],[-4],[-10],[-1],[8],[9],[9],[6],[-1],[-10],[-5],[-8],[-6],[-2],[-6],[-9],[10],[3],[10],[9],[5],[-8],[3],[-8],[7],[9],[-4],[8],[-9],[-3],[7],[-3],[5],[-5],[4],[-3],[-1],[1],[-4],[-8],[9],[-4],[-6],[1],[5],[2],[7],[-9],[5],[-9],[9],[6],[-4],[-3],[8],[-1],[1],[-9],[8],[-2],[-5],[-6],[-4],[-7],[10],[-8],[8],[10],[2],[2],[7],[8],[9],[-4],[-7],[-1],[-3],[-5],[2],[5],[-9],[-1],[-6],[-9],[-4],[-8],[-4],[-8],[-4],[-1],[9],[3],[9],[-8],[-1],[-2],[-4],[7],[4],[8],[-7],[-9],[-5],[-6],[-9],[9],[-9],[7],[-4],[10],[8],[8],[-7],[-1],[1],[10],[-6],[-2],[8],[-7],[5],[3],[2],[-1],[-7],[-2],[4],[-4],[-4],[-1],[4],[4],[-4],[8],[-4],[-7],[3],[-2],[-1],[1],[-5],[2],[10],[-8],[3],[-9],[5],[-5],[-2],[1],[8],[-7],[-9],[7],[-4],[-10],[1],[6],[-10],[-6],[-8],[-9],[10],[1],[7],[-2],[-1],[9],[7],[-2],[4],[10],[7],[-7],[-2],[1],[-9],[2],[6],[-3],[-5],[-9],[3],[-6],[6],[1],[-3],[-5],[7],[-7],[-6],[7],[-1],[-5],[4],[8],[-3],[6],[7],[-4],[2],[-2],[6],[-5],[-1],[10],[-3],[3],[7],[8],[5],[1],[-5],[2],[10],[4],[3],[9],[5],[-2],[6],[-6],[-10],[2],[-6],[-1],[8],[-7],[-10],[6],[6],[2],[-8],[-9],[-4],[-1],[-5],[-1],[7],[-4],[-4],[6],[-8],[7],[-3],[-8],[1],[-8],[-10],[3],[-8],[-4],[3],[-7],[9],[-5],[-8],[-6],[-3],[4],[4],[-5],[-1],[-5],[8],[5],[-2],[8],[-4],[-6],[-6],[-7],[10],[-1],[-6],[9],[7],[6],[-6],[9],[1],[-9],[-10],[-8],[2],[9],[-3],[-2],[-8],[7],[10],[-4],[1],[4],[-3],[1],[-6],[-6],[-9],[-3],[6],[-9],[-6],[5],[-6],[10],[10],[2],[5],[9],[1],[-1],[10],[3],[2],[10],[-8],[9],[4],[10],[8],[-7],[-5],[10],[-6],[-10],[-8],[-2],[-8],[10],[3],[-8],[-3],[-6],[2],[-6],[-7],[9],[-1],[-2],[9],[-2],[2],[-7],[-2],[-2],[9],[5],[10],[-6],[7],[-5]], dtype = "int32")#candidate|7206|(882, 1)|const|int32
var_7207 = relay.var("var_7207", dtype = "float64", shape = (1800,))#candidate|7207|(1800,)|var|float64
call_7203 = relay.TupleGetItem(func_3588_call(relay.reshape(var_7204.astype('float64'), [14, 4, 7]), relay.reshape(var_7204.astype('float64'), [14, 4, 7]), relay.reshape(var_7205.astype('int32'), [2080,]), relay.reshape(const_7206.astype('int32'), [882,]), relay.reshape(var_7207.astype('float64'), [1800,]), ), 2)
call_7208 = relay.TupleGetItem(func_3595_call(relay.reshape(var_7204.astype('float64'), [14, 4, 7]), relay.reshape(var_7204.astype('float64'), [14, 4, 7]), relay.reshape(var_7205.astype('int32'), [2080,]), relay.reshape(const_7206.astype('int32'), [882,]), relay.reshape(var_7207.astype('float64'), [1800,]), ), 2)
output = relay.Tuple([call_7195,call_7203,var_7204,var_7205,const_7206,var_7207,])
output2 = relay.Tuple([call_7196,call_7208,var_7204,var_7205,const_7206,var_7207,])
func_7210 = relay.Function([var_7204,var_7205,var_7207,], output)
mod['func_7210'] = func_7210
mod = relay.transform.InferType()(mod)
var_7211 = relay.var("var_7211", dtype = "float64", shape = (392,))#candidate|7211|(392,)|var|float64
var_7212 = relay.var("var_7212", dtype = "int32", shape = (2080,))#candidate|7212|(2080,)|var|int32
var_7213 = relay.var("var_7213", dtype = "float64", shape = (1800,))#candidate|7213|(1800,)|var|float64
output = func_7210(var_7211,var_7212,var_7213,)
func_7214 = relay.Function([var_7211,var_7212,var_7213,], output)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4491_call = mod.get_global_var('func_4491')
func_4492_call = mutated_mod.get_global_var('func_4492')
call_7233 = relay.TupleGetItem(func_4491_call(), 0)
call_7234 = relay.TupleGetItem(func_4492_call(), 0)
output = relay.Tuple([call_7233,])
output2 = relay.Tuple([call_7234,])
func_7235 = relay.Function([], output)
mod['func_7235'] = func_7235
mod = relay.transform.InferType()(mod)
mutated_mod['func_7235'] = func_7235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7235_call = mutated_mod.get_global_var('func_7235')
call_7236 = func_7235_call()
output = call_7236
func_7237 = relay.Function([], output)
mutated_mod['func_7237'] = func_7237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5301_call = mod.get_global_var('func_5301')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_7240 = func_5301_call()
call_7241 = func_5301_call()
output = call_7240
output2 = call_7241
func_7242 = relay.Function([], output)
mod['func_7242'] = func_7242
mod = relay.transform.InferType()(mod)
mutated_mod['func_7242'] = func_7242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7242_call = mutated_mod.get_global_var('func_7242')
call_7243 = func_7242_call()
output = call_7243
func_7244 = relay.Function([], output)
mutated_mod['func_7244'] = func_7244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_7253 = func_5032_call()
call_7254 = func_5032_call()
func_5388_call = mod.get_global_var('func_5388')
func_5392_call = mutated_mod.get_global_var('func_5392')
const_7263 = relay.const([8,-6,-6,-2,-2,10,2,-10,-3,-7,-8,6,5,4,-5,-1,-5,-3,-7,10,2,7,3,-10,-2,3,-3,-5,-10,-4,-6,-8,-1,-1,-8,10,-10,3,-6,8,-9,9,1,-10,-3,-3,-1,-9,2,3,-1,-9,3,4,6,-9,-4,-6,-10,-5,-3,1,9,-6,-2,-2,-3,-5,4,6], dtype = "int64")#candidate|7263|(70,)|const|int64
const_7264 = relay.const([4,-3,4,9,8,6,-3,1,-8,10,9,-1,-2,4,-7,-4,6,-3,3,-10,3,-10,2,8,6,2,-5,-2,9,6,-4,-1,10,-3,-6,-3,8,7,-7,-2,5,10,8,-7,-7,5,5,-6,-9,-7,-1,-4,-6,-2,6,-5,7,-8,-7,-2,-8,-8,4,-8,-10,-8,7,-3,-2,3,-7,8,-4,-1,-3,-5,-1,-6,4,7,-8,8,-6,-8,4,-8,-10,6,-5,4,9,1,-2,-4,10,4,-6,-5,1,-1,-5,-5,5,8,6,10,-3,7,7,-4,5,-8,8,3,7,4,3,6,1,-8,5,-4,8,-4,5,5,-5,8,6,-5,-5,4,6,-8,3,-6,3,-7,-1,7,10,-5,4,-8,-5,3,2,10,7,-7,-3,7,10,8,-6,7,-6,8,-6,-8,1,-4,9,1,1,4,-8,1,-6,1,-3,-5,3,-9,-4,-1,-10,-8,-9,5,-6,6,-2,3,-6,-8,-5,10,-10,6,-7,7,-1,6,-5,-2,10,6,-6,9,-5,3,-2,7,-3,6,-1,-7,9,6], dtype = "int64")#candidate|7264|(210,)|const|int64
var_7265 = relay.var("var_7265", dtype = "float64", shape = (1800,))#candidate|7265|(1800,)|var|float64
call_7262 = relay.TupleGetItem(func_5388_call(relay.reshape(const_7263.astype('int64'), [5, 1, 14]), relay.reshape(const_7264.astype('int64'), [5, 3, 14]), relay.reshape(var_7265.astype('float64'), [6, 300]), ), 1)
call_7266 = relay.TupleGetItem(func_5392_call(relay.reshape(const_7263.astype('int64'), [5, 1, 14]), relay.reshape(const_7264.astype('int64'), [5, 3, 14]), relay.reshape(var_7265.astype('float64'), [6, 300]), ), 1)
uop_7282 = relay.acos(call_7262.astype('float32')) # shape=(8, 15, 15)
uop_7284 = relay.acos(call_7266.astype('float32')) # shape=(8, 15, 15)
func_3682_call = mod.get_global_var('func_3682')
func_3686_call = mutated_mod.get_global_var('func_3686')
const_7300 = relay.const([3.748082,-7.428906,9.422815,3.240687,9.517027,-2.324676,-1.431698,0.857467,8.747584,7.626925,-0.485972,-7.414205,8.361838,2.751037,3.676539,6.389570,-5.185143,2.555239,-6.476136,-4.769901,-1.682934,2.875014,-0.451128,-0.914652,-2.079676,-6.421003,-9.084950,7.421121,5.164683,-9.213532,-2.455306,4.145551,7.047597,0.275594,5.056892,-2.663659,-5.093592,-6.711945,-4.470422,-7.470661,7.807484,9.155600,-0.409660,3.436042,9.704802,-7.767729,0.546244,3.060900,-0.038330,-7.339179,-7.737838,6.915494,-8.213212,3.372077,8.912247,9.239123,9.130514,-2.049315,0.123371,8.803952,7.667311,0.644845,-4.668354,0.168471,9.074139,-1.342882,-7.806496,-8.176836,-8.812972,0.695531,-5.211832,-8.288535,-9.538032,1.907389,-4.247111,-2.066110,-1.486665,-9.044772,-6.207262,-9.418724,0.303072,-9.827399,-6.622100,2.263708,-4.397820,-9.074373,0.914886,-6.056963,7.318233,-8.356215,1.783224,2.839271,-2.815303,-9.106910,-5.098552,-2.239390,3.217416,5.656163,8.704701,-4.984234,-7.408632,-8.991963,4.431357,5.553070,-9.610772,-0.192449,-5.492956,-8.857273,4.923853,-9.950370,2.030317,-7.575055,3.855918,-6.121692,-6.870204,-8.714246,-8.231846,-2.066292,-0.432413,-5.552838,4.804303,-5.775433,2.865684,-7.364605,9.201489,-5.408613,0.136280,8.545717,-3.859311,-5.057838,7.560133,6.200343,6.397248,8.644473,2.340440,1.318999,0.051063,6.565067,-0.951627,9.816708,-2.009577,-1.286110,-5.922086,-5.926213,9.043096,5.147158,5.722439,-7.937687,8.203621,-0.139840,-7.961483,5.394373,4.305078,-4.882258,8.024742,2.218846,1.285755,1.813503,-1.607241,-2.929838,-2.660065,-4.851637,2.622964,0.807680,-6.200140,6.030614,6.200604,-9.629121,3.496906,-5.429931,9.107002,-2.119040,1.809118,-7.056925,6.396093,4.106367,3.689959,-2.811151,9.824396,1.879935,8.292122,-7.965097,8.508371,-2.346158,6.373112,6.682409,-7.024179,6.469502,-7.206681,5.612595,-6.365252,5.621950,-3.529853,-2.809961,2.103676,-2.597306,7.677980,7.350325,4.000757,1.168864,-4.884398,7.348538,0.644642,-5.516744,5.247819,2.542582,3.876540,2.808496,-8.993518,0.458249,4.396240,5.943897,-3.108225,4.654924,-5.346086,-6.840974,-7.759364,2.323643,-2.886380,7.197715,-2.096630,7.908043,5.142018,1.745541,5.456298,-8.121910,-3.151563,6.727158,-0.462900,9.787462,2.481171,-5.406573,6.995011,9.796373,2.550127,5.958758,-5.416388,2.858517,6.778052,3.855992,9.239263,1.196964,2.438597,-3.763347,-1.876577,-6.449046,8.864581,9.633016,0.486334,-3.976299,7.529284,-8.438666,2.014729,3.074210,-1.412951,7.711273,-3.097320,-0.655780,4.790164,-5.014783,-1.426977,2.555678,2.401485,-1.720547,-9.811149,7.206435,5.715489,1.825372,-5.816085,5.996604,8.202028,-9.213185,-8.155919,-3.130905,-5.762780,5.601095,5.024212,-9.690281,3.648315,4.991719,-2.879523,2.200782,-7.102335,-9.551574,0.296673,-2.232973,-7.439536,1.021930,3.726163,-9.932154,-4.954732,-7.714493,-6.788153,-0.830071,8.732861,5.832210,-2.655777,6.143937,3.754736,0.301373,-7.896443,-7.913346,2.110225,6.734877,0.633010,-5.694363,4.815729,6.893643,9.880903,7.151186,-8.429606,-2.852638,2.825329,8.218485,6.855207,3.646982,-3.446450,-6.253600,7.391439,-1.347597,8.292834,-9.767169,9.643531,5.545986,3.418895,-2.752539,2.265846,7.376915,-9.235244,-7.417880,9.878090,4.347445,0.431095,6.277633,2.400851,9.557199,-9.025622,7.069569,8.588026,0.197035,7.477048,-7.114766,-2.082361,1.027953,7.337992,9.369115,-7.920555,-9.307881,-0.092924,-0.498806,-7.124955,1.885847,-3.754360,-1.561586,9.804283,-1.783032,8.053188,0.125399,-0.050331,1.760443,-8.624246,6.490317,2.778622,-4.137815,2.986787,-5.536551,-5.166777,4.888103,-2.138459,3.318896,3.678771,1.636893,-9.449188,-3.929470,3.397482,-4.675612,-4.385550,-0.657405,-8.724878,-7.913957,-5.365400,6.998875,-8.930791,2.921733,-7.395515,-2.066980,-5.732041,3.487416,-5.182646,-9.069981,7.949036,-2.892638], dtype = "float64")#candidate|7300|(392,)|const|float64
var_7301 = relay.var("var_7301", dtype = "int32", shape = (2080,))#candidate|7301|(2080,)|var|int32
call_7299 = relay.TupleGetItem(func_3682_call(relay.reshape(const_7300.astype('float64'), [14, 28]), relay.reshape(var_7301.astype('int32'), [104, 20]), relay.reshape(var_7265.astype('float64'), [1800,]), ), 3)
call_7302 = relay.TupleGetItem(func_3686_call(relay.reshape(const_7300.astype('float64'), [14, 28]), relay.reshape(var_7301.astype('int32'), [104, 20]), relay.reshape(var_7265.astype('float64'), [1800,]), ), 3)
func_5661_call = mod.get_global_var('func_5661')
func_5662_call = mutated_mod.get_global_var('func_5662')
call_7308 = func_5661_call()
call_7309 = func_5661_call()
bop_7313 = relay.floor_divide(uop_7282.astype('float64'), relay.reshape(call_7262.astype('float64'), relay.shape_of(uop_7282))) # shape=(8, 15, 15)
bop_7316 = relay.floor_divide(uop_7284.astype('float64'), relay.reshape(call_7266.astype('float64'), relay.shape_of(uop_7284))) # shape=(8, 15, 15)
var_7318 = relay.var("var_7318", dtype = "float32", shape = (8, 15, 15))#candidate|7318|(8, 15, 15)|var|float32
bop_7319 = relay.power(uop_7282.astype('float32'), relay.reshape(var_7318.astype('float32'), relay.shape_of(uop_7282))) # shape=(8, 15, 15)
bop_7322 = relay.power(uop_7284.astype('float32'), relay.reshape(var_7318.astype('float32'), relay.shape_of(uop_7284))) # shape=(8, 15, 15)
bop_7328 = relay.maximum(bop_7313.astype('int32'), relay.reshape(call_7262.astype('int32'), relay.shape_of(bop_7313))) # shape=(8, 15, 15)
bop_7331 = relay.maximum(bop_7316.astype('int32'), relay.reshape(call_7266.astype('int32'), relay.shape_of(bop_7316))) # shape=(8, 15, 15)
output = relay.Tuple([call_7253,const_7263,const_7264,var_7265,call_7299,const_7300,var_7301,call_7308,bop_7319,bop_7328,])
output2 = relay.Tuple([call_7254,const_7263,const_7264,var_7265,call_7302,const_7300,var_7301,call_7309,bop_7322,bop_7331,])
func_7334 = relay.Function([var_7265,var_7301,var_7318,], output)
mod['func_7334'] = func_7334
mod = relay.transform.InferType()(mod)
mutated_mod['func_7334'] = func_7334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7334_call = mutated_mod.get_global_var('func_7334')
var_7336 = relay.var("var_7336", dtype = "float64", shape = (1800,))#candidate|7336|(1800,)|var|float64
var_7337 = relay.var("var_7337", dtype = "int32", shape = (2080,))#candidate|7337|(2080,)|var|int32
var_7338 = relay.var("var_7338", dtype = "float32", shape = (8, 15, 15))#candidate|7338|(8, 15, 15)|var|float32
call_7335 = func_7334_call(var_7336,var_7337,var_7338,)
output = call_7335
func_7339 = relay.Function([var_7336,var_7337,var_7338,], output)
mutated_mod['func_7339'] = func_7339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4532_call = mod.get_global_var('func_4532')
func_4533_call = mutated_mod.get_global_var('func_4533')
call_7359 = relay.TupleGetItem(func_4532_call(), 0)
call_7360 = relay.TupleGetItem(func_4533_call(), 0)
output = relay.Tuple([call_7359,])
output2 = relay.Tuple([call_7360,])
func_7363 = relay.Function([], output)
mod['func_7363'] = func_7363
mod = relay.transform.InferType()(mod)
mutated_mod['func_7363'] = func_7363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7363_call = mutated_mod.get_global_var('func_7363')
call_7364 = func_7363_call()
output = call_7364
func_7365 = relay.Function([], output)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_7386 = relay.TupleGetItem(func_3948_call(), 0)
call_7387 = relay.TupleGetItem(func_3950_call(), 0)
output = relay.Tuple([call_7386,])
output2 = relay.Tuple([call_7387,])
func_7389 = relay.Function([], output)
mod['func_7389'] = func_7389
mod = relay.transform.InferType()(mod)
mutated_mod['func_7389'] = func_7389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7389_call = mutated_mod.get_global_var('func_7389')
call_7390 = func_7389_call()
output = call_7390
func_7391 = relay.Function([], output)
mutated_mod['func_7391'] = func_7391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mod.get_global_var('func_4889')
func_4890_call = mutated_mod.get_global_var('func_4890')
call_7409 = relay.TupleGetItem(func_4889_call(), 1)
call_7410 = relay.TupleGetItem(func_4890_call(), 1)
output = call_7409
output2 = call_7410
func_7430 = relay.Function([], output)
mod['func_7430'] = func_7430
mod = relay.transform.InferType()(mod)
output = func_7430()
func_7431 = relay.Function([], output)
mutated_mod['func_7431'] = func_7431
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7442 = relay.var("var_7442", dtype = "float32", shape = (14, 9, 9))#candidate|7442|(14, 9, 9)|var|float32
const_7443 = relay.const([[[-9.578466,7.135917,-9.939613,1.589013,-0.970983,-5.360179,4.448591,-5.329889,-5.039256],[-2.194039,6.291235,-4.218635,5.498770,7.855934,-6.150469,-5.699186,-5.196527,5.863080],[-4.293290,7.998176,-7.472889,-8.981931,-5.162114,-4.395798,5.828658,3.594579,4.360215],[1.451095,8.150993,9.495204,-9.492190,-3.965840,8.205079,9.524270,-5.342440,-8.880521],[-5.243103,-9.409920,4.367763,4.846715,-7.084903,7.066665,-5.874187,-5.425905,-2.296300],[-1.118418,4.448185,7.543058,-3.166349,0.444097,1.817001,0.166399,-2.804733,-2.310921],[-6.233005,-8.372866,-6.898666,-3.711258,2.527507,-7.600527,-9.625764,-9.392890,8.948603],[-0.448269,-4.794158,-6.573330,5.211954,0.055565,9.012924,9.994406,-9.352046,-5.161836],[-8.788776,1.935183,-5.705886,3.582323,-5.107910,-0.591894,7.374622,-3.794817,-0.574552]],[[3.712797,-4.936043,1.011246,-3.367533,-5.907116,6.683017,3.765640,1.554781,6.706110],[-4.890359,5.991441,-2.824228,-4.330723,-5.305862,6.210172,5.203062,2.900476,0.014682],[1.994093,0.708422,-4.636359,7.628976,-1.595767,5.505480,-9.302372,-6.644212,-5.382800],[9.359548,-2.967057,1.217090,2.128429,-5.655670,5.780681,7.297649,2.548074,-3.419065],[2.785491,4.983363,-8.324117,9.958462,-3.165811,-4.491743,-5.066174,2.137308,-4.681209],[-9.947833,2.221865,-0.300547,3.340531,-0.635633,-4.978667,-7.572912,-6.593235,-8.383842],[-2.078308,5.662422,6.060180,-4.883778,1.902684,3.122123,-7.133113,5.438326,-6.672871],[-8.427025,-0.902932,7.024432,7.185894,-8.016017,8.097241,0.951558,0.439652,1.342040],[-4.492987,-6.263347,4.897180,9.351568,-5.134493,-6.626823,-7.753573,-2.352489,9.031980]],[[-6.407130,0.274638,-7.077147,9.644150,7.641323,-0.525155,5.800729,-0.666243,-6.236326],[1.849320,0.857886,8.780850,1.705365,9.576996,-3.277709,1.792843,9.189380,9.350970],[5.402693,1.392857,7.469544,1.783775,3.912516,8.883138,-9.931640,1.407601,-3.675166],[1.222807,1.237797,9.837069,6.994332,-4.781522,5.383482,-0.075841,-5.306777,3.145172],[5.323468,-1.812481,-8.822139,-8.252179,4.669564,5.366778,-3.181972,6.118136,1.990516],[5.424347,5.675210,8.628720,-0.577160,8.538259,-3.893877,-3.026733,-4.798674,-0.686776],[-6.102449,7.623747,-1.712181,6.085762,5.730108,-1.501416,6.412583,6.568600,8.249439],[-0.398933,-3.054442,-9.198051,-8.017663,-4.114626,-4.806379,-0.360175,6.409792,-9.079235],[-8.822164,8.675314,-6.238275,-2.594340,1.291901,-5.307673,-1.232220,-3.845277,-2.888813]],[[7.547677,-5.710320,0.193437,-5.380772,2.515283,4.463148,-3.725439,-0.761726,9.747264],[9.375456,-4.762340,0.309019,-4.613368,9.034506,-2.911823,1.492906,6.915768,4.116900],[-2.204791,-7.079557,-7.406971,3.550459,7.638166,-6.877729,-9.580810,-5.885047,-6.431480],[8.867467,5.215960,-0.157046,9.220036,-1.008305,7.228189,4.841099,4.753054,5.363512],[-9.557427,-0.637555,-9.196826,-5.171034,7.349051,-5.685858,1.456247,-3.280436,-9.444210],[-9.145073,-4.121926,-7.867538,3.123087,-2.347712,3.607353,-1.519092,-9.559248,2.413126],[8.692584,-2.210553,-8.128754,-6.587622,-4.737591,8.870562,2.302869,-6.204570,-9.587671],[0.710177,4.166347,-6.784672,-5.390048,-5.760491,-5.290116,9.627314,0.521289,-6.271678],[-8.295814,8.079473,3.403842,-0.357350,3.553313,-0.733433,7.546679,5.037667,7.990072]],[[-9.671176,-4.744012,1.743749,-3.006053,-2.452822,-5.037223,-0.666234,2.759112,7.242826],[-8.256426,-0.703400,1.229773,6.711106,-7.249873,2.614179,-4.760315,6.476372,-8.120271],[3.897126,-7.738967,-7.788494,-3.890011,4.174814,7.523881,-1.905977,-4.906087,1.215881],[-0.360365,3.988011,2.655296,-1.075896,-5.187690,-1.161533,-8.929053,4.785983,0.886693],[5.268087,-8.040594,6.049002,-3.191726,5.209907,-9.627861,-4.020054,8.589819,-6.114161],[-4.263279,9.790127,-8.795177,7.629577,8.042964,7.948119,-0.546242,4.154323,-4.681165],[-2.601939,-1.791495,7.713916,-3.932756,1.523320,8.833744,-3.997856,9.833718,-3.662573],[1.706081,-8.295309,2.903194,5.528690,4.976214,-2.887750,-8.401959,-1.417346,3.408142],[7.948521,8.316416,0.999304,-7.232610,-2.654241,6.475828,-2.311621,-6.213664,-2.906177]],[[-5.091651,9.691400,-4.227514,4.399728,0.902441,6.102117,-2.926305,-4.403750,-0.400666],[-5.797276,-1.958330,-2.228963,-8.113446,-9.311917,4.394695,-3.567558,6.953696,1.987964],[6.637428,-4.097501,-3.803949,8.397376,-9.616681,-5.017620,-7.181455,-3.936305,7.127692],[-9.122184,4.087550,-1.885188,2.683030,-6.041105,0.483419,-7.353827,9.914873,8.133286],[7.619188,-0.201465,-0.386853,-3.920156,8.554427,5.922901,0.223297,-7.329783,6.662389],[3.774820,3.508026,6.946352,-7.370978,-0.661964,-2.181493,9.068623,-9.572008,0.367343],[4.032093,0.679032,-9.224840,1.701139,3.859207,-0.801193,2.455614,0.885366,-7.758824],[2.803517,8.799742,-1.339141,9.501656,7.423538,3.284101,-0.220241,-8.249623,2.638120],[2.752980,-4.673769,0.326997,0.141184,-5.970126,6.435335,1.277296,1.990351,-1.574444]],[[-0.692346,-7.775785,-3.785158,-1.427063,-7.733098,-8.082217,-9.814411,-3.626510,-9.946235],[7.268740,-3.844858,9.180531,-9.405632,-8.315978,1.575527,7.877565,-4.331078,6.522533],[1.011086,-0.307882,-6.403207,-4.830571,-9.097590,6.016872,-1.974169,-2.043763,-4.731469],[-7.197137,-5.269159,5.040801,-8.598749,4.884470,-1.903796,3.991531,-6.620353,3.762812],[-0.941473,8.379975,-4.947231,-8.502337,-7.526504,-1.091657,-1.925235,4.537697,6.095202],[-2.332532,-6.303527,0.770024,-6.172069,-3.744070,-6.544209,0.498758,7.496070,8.057946],[4.099835,-3.580789,-8.099428,-3.744395,-1.825462,5.725838,-6.171938,5.750282,7.849688],[4.851061,2.534987,-0.614164,8.046142,-0.811600,7.122031,9.999985,6.767981,-4.162351],[-1.725966,-8.833114,-4.132623,-6.323540,6.505064,6.869704,-6.180854,-1.147714,7.336684]],[[8.950364,-2.443552,0.528923,5.600786,-4.615314,8.539868,-1.825202,-7.614921,-1.960674],[-5.126687,2.996879,-0.047751,-4.712128,-0.636705,-9.702308,-7.382313,-4.626356,1.946006],[-7.021299,-8.520603,-2.748411,5.063330,8.798954,3.607663,-5.927326,2.840850,-0.701195],[8.414776,-9.021462,9.604607,0.783256,0.030323,8.043181,2.010232,6.605452,-4.909022],[4.448919,8.168976,4.406313,-5.478206,-8.017574,-2.270859,7.277404,-3.796612,5.499583],[-4.351117,4.411531,-9.657188,4.568002,-3.890280,-5.897486,-8.918811,-3.815252,-0.019353],[-5.761610,6.473069,-3.840502,3.325526,3.885226,-6.440431,-7.453843,0.769419,-4.793326],[-0.258254,-1.061934,-0.054763,1.851159,-8.230423,-8.710248,-6.025173,-6.391751,-8.306961],[0.227430,-6.108206,5.968171,0.085061,-5.414760,1.817727,-0.058893,-8.539287,-4.966454]],[[8.008110,6.560769,6.991134,8.701545,-7.041149,4.804587,-0.197415,3.765967,-6.569738],[9.482915,-9.753828,-7.307026,-1.470958,1.961018,2.248482,-3.445919,2.141363,1.781116],[6.621089,-0.694227,-2.852760,-5.457170,-5.177193,7.567888,-3.715259,-8.929382,-4.011974],[-9.270594,-4.297576,8.909401,7.363903,-3.868785,1.748453,0.880860,-6.127905,5.834964],[-1.685214,-1.929808,7.026810,8.745091,-6.044895,-6.464441,-3.013910,-2.687552,-0.304951],[9.668290,3.271875,-6.701702,7.596556,6.964297,-3.750333,-1.263661,2.077011,9.276574],[-3.886647,-6.136321,6.610133,-7.370679,-3.813484,-9.660331,-2.931494,-1.112718,3.888211],[7.607583,6.807110,4.050498,9.177485,-8.395079,-8.884695,1.999591,-0.612329,2.938131],[-8.249961,8.026753,-3.297118,7.590524,0.947390,-0.187345,-5.252129,5.272935,4.711269]],[[1.295347,-8.104401,5.169495,-2.755294,-7.555628,-6.229968,-6.676638,1.062877,7.823743],[3.554651,-1.700976,0.560711,5.786674,-3.985587,6.771999,3.833993,-2.511426,-3.001263],[-5.157201,-9.350859,9.708434,7.322332,9.434887,6.541796,-9.422218,7.288856,-5.894263],[-8.873256,2.454647,-6.494363,-4.076294,8.943725,-9.814548,-0.337241,-7.003344,8.762896],[9.211550,8.143481,5.921643,-1.563699,7.654161,-5.204192,-5.568923,-5.204274,-6.516804],[-3.125786,-6.012772,4.927362,3.364085,-4.235126,3.410315,8.255319,-4.522664,1.578575],[9.431133,2.390613,-6.030714,-2.489036,-1.978854,-2.446851,-4.265948,4.681102,-2.628799],[7.885221,-5.372126,-9.209481,3.214565,2.084865,-2.819296,9.189037,-7.656643,9.818704],[-9.543818,1.932972,-6.595205,9.826129,-5.384702,1.710492,-2.827769,-4.584402,-6.392947]],[[-8.811627,-9.605228,3.747994,-8.768661,-8.114551,-0.347045,6.328034,-9.604747,8.972833],[-7.076556,6.254087,-9.781126,-2.116512,1.526224,0.751958,4.663832,6.572819,7.611134],[-2.076130,9.100714,-7.561507,-8.486502,-2.694867,-5.959450,6.345058,9.542584,9.935902],[-1.151197,-5.540754,-1.919755,6.287010,9.549400,7.592063,-5.853579,-1.726916,6.102212],[8.869113,3.316205,-2.624494,8.629918,-9.566678,-2.848697,-4.989663,4.734021,-3.590773],[5.139377,6.701918,-1.737869,3.823560,1.754601,-9.215959,7.853860,-3.213049,6.190423],[-2.613267,6.434831,8.288040,7.242270,-6.229577,-8.458661,-6.883369,-6.665863,-9.217300],[9.880275,7.449797,-0.803599,5.533549,0.818222,-6.463969,-6.114787,-6.145621,5.887988],[9.315584,3.295572,-9.258007,-9.062759,0.031548,-3.389472,9.066419,-5.324932,-9.005208]],[[-1.682196,-7.958623,-2.319637,-1.176556,3.861349,-2.980618,0.056033,7.435615,1.268022],[-7.859920,5.457906,-9.836096,-3.299837,3.070941,1.784578,8.066709,0.522098,6.084002],[-4.487308,-6.394141,-0.738847,-7.215412,-6.564444,7.375042,9.545920,8.328386,9.744657],[1.944681,6.116942,-5.297669,-2.834748,-1.008079,5.543404,1.920332,5.468934,-5.304059],[-1.441138,0.766184,-7.992373,-6.638242,7.959434,-3.229117,-9.073187,-2.555547,-5.174979],[-8.510359,-5.478530,-3.674895,-0.312112,8.127480,0.279524,-1.452360,-6.961065,-3.879501],[-9.118839,5.474042,-4.743688,-3.892364,5.756089,-7.114570,-0.920089,-6.163779,7.418361],[-2.286556,2.053356,-7.675080,6.887943,-6.485429,-3.029169,9.212448,-6.663522,-1.078354],[-0.078359,9.101673,8.393196,-4.464161,-9.212858,-1.645246,7.437530,7.771619,-5.850534]],[[-5.352195,-1.300042,-1.608548,1.855197,3.847803,-5.872564,2.303260,8.964265,-1.640003],[-8.283440,-3.592757,9.162200,2.835726,0.161880,0.467590,-1.829062,-3.924596,8.749901],[5.423048,-7.189296,-6.866599,5.497087,1.310750,-0.565060,5.888648,-5.886380,3.286816],[4.885045,5.616896,4.078378,-0.069986,-6.114890,9.021736,9.401964,-2.831299,4.294050],[-9.456587,-8.733051,7.692969,8.275906,-9.763326,-2.774975,-3.046963,-0.745264,7.152081],[-2.792046,4.328357,-9.298550,-4.404072,8.197024,5.453460,8.177243,9.583972,2.161888],[-6.479220,-2.904232,6.373914,-6.744696,-5.479972,8.345142,9.074462,9.184185,-1.666537],[6.826769,-2.220095,3.327936,9.968510,1.819273,3.400295,-1.080540,-3.687065,-0.986052],[1.839488,7.414907,5.236470,4.594183,-0.712427,2.309220,-5.029528,-6.309363,9.200439]],[[-3.415622,-7.656559,-7.281368,8.568548,-0.108837,9.339946,2.771964,9.547064,-7.318145],[1.114494,2.158828,-0.058945,-1.035109,5.578024,9.241632,-0.469647,-0.653601,-9.083217],[-4.051902,1.547421,6.545277,9.019472,8.006955,1.937105,9.682372,-4.394736,-8.574826],[0.905175,2.940979,7.799746,-6.802979,0.102874,1.574179,6.182483,0.931602,-2.149014],[3.052502,9.323430,-7.994758,-0.393522,1.207375,7.382362,7.279250,-0.354001,5.566783],[-4.334727,3.535881,-6.472207,4.658838,9.346220,-4.565264,2.569640,7.692475,5.674564],[5.343821,-8.356916,-5.191150,-9.447687,-3.074093,-7.573080,1.711542,7.518884,-1.125266],[9.552712,7.254212,-8.673212,-6.474616,0.285561,-9.169742,8.070054,-5.357194,-1.880767],[5.454330,8.150994,1.336332,-7.512203,-0.696266,-9.787520,0.679977,-8.555177,-4.112153]]], dtype = "float32")#candidate|7443|(14, 9, 9)|const|float32
bop_7444 = relay.less(var_7442.astype('bool'), relay.reshape(const_7443.astype('bool'), relay.shape_of(var_7442))) # shape=(14, 9, 9)
func_4257_call = mod.get_global_var('func_4257')
func_4259_call = mutated_mod.get_global_var('func_4259')
const_7449 = relay.const([1,1,-8,-10,8,10,-3,-4,1,-7,8,1,-3,-2,-10,2,-4,9], dtype = "uint16")#candidate|7449|(18,)|const|uint16
call_7448 = relay.TupleGetItem(func_4257_call(relay.reshape(const_7449.astype('uint16'), [18,])), 2)
call_7450 = relay.TupleGetItem(func_4259_call(relay.reshape(const_7449.astype('uint16'), [18,])), 2)
uop_7451 = relay.atan(var_7442.astype('float64')) # shape=(14, 9, 9)
output = relay.Tuple([bop_7444,call_7448,const_7449,uop_7451,])
output2 = relay.Tuple([bop_7444,call_7450,const_7449,uop_7451,])
func_7469 = relay.Function([var_7442,], output)
mod['func_7469'] = func_7469
mod = relay.transform.InferType()(mod)
mutated_mod['func_7469'] = func_7469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7470 = relay.var("var_7470", dtype = "float32", shape = (14, 9, 9))#candidate|7470|(14, 9, 9)|var|float32
func_7469_call = mutated_mod.get_global_var('func_7469')
call_7471 = func_7469_call(var_7470)
output = call_7471
func_7472 = relay.Function([var_7470], output)
mutated_mod['func_7472'] = func_7472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7363_call = mod.get_global_var('func_7363')
func_7365_call = mutated_mod.get_global_var('func_7365')
call_7480 = relay.TupleGetItem(func_7363_call(), 0)
call_7481 = relay.TupleGetItem(func_7365_call(), 0)
output = call_7480
output2 = call_7481
func_7482 = relay.Function([], output)
mod['func_7482'] = func_7482
mod = relay.transform.InferType()(mod)
output = func_7482()
func_7483 = relay.Function([], output)
mutated_mod['func_7483'] = func_7483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mod.get_global_var('func_6784')
func_6785_call = mutated_mod.get_global_var('func_6785')
call_7565 = relay.TupleGetItem(func_6784_call(), 2)
call_7566 = relay.TupleGetItem(func_6785_call(), 2)
func_5661_call = mod.get_global_var('func_5661')
func_5662_call = mutated_mod.get_global_var('func_5662')
call_7577 = func_5661_call()
call_7578 = func_5661_call()
output = relay.Tuple([call_7565,call_7577,])
output2 = relay.Tuple([call_7566,call_7578,])
func_7583 = relay.Function([], output)
mod['func_7583'] = func_7583
mod = relay.transform.InferType()(mod)
mutated_mod['func_7583'] = func_7583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7583_call = mutated_mod.get_global_var('func_7583')
call_7584 = func_7583_call()
output = call_7584
func_7585 = relay.Function([], output)
mutated_mod['func_7585'] = func_7585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6665_call = mod.get_global_var('func_6665')
func_6667_call = mutated_mod.get_global_var('func_6667')
call_7595 = func_6665_call()
call_7596 = func_6665_call()
func_7071_call = mod.get_global_var('func_7071')
func_7073_call = mutated_mod.get_global_var('func_7073')
call_7610 = relay.TupleGetItem(func_7071_call(), 0)
call_7611 = relay.TupleGetItem(func_7073_call(), 0)
func_4667_call = mod.get_global_var('func_4667')
func_4671_call = mutated_mod.get_global_var('func_4671')
var_7614 = relay.var("var_7614", dtype = "int32", shape = ())#candidate|7614|()|var|int32
const_7615 = relay.const([-8,-9,10,3,5,7,7,-1,-6,2,-9,-3,-4,7,2,6,-2,-1,2,-2,-4,-4,-9,-7,-5,10,-5,-3,4,1,-5,-5,3,1,-10,4,-10,-6,-5,-7,-1,6,-7,-6,-10,-6,5,-4,-9,-4,6,2,6,6,-10,-6,9,10,-1,-9,-3,-8,8,7,-6,6,-10,-9,-8,-2,9,1,7,6,-8,-1,-1,9,10,5,-10,-10,-9,9,-6,-6,-8,-7,-10,3,9,9,2,7,6,9,-5,8,-8,3,-7,-2,-8,8,-1,4,-6,10,-10,1,3,4,7,-1,-7,10,3,-9,-1,9,-9,-4,7,-2,-4,-5,-10,-2,10,-3,-8,-3,5,4,-8,-7,-7,3,-6,-10,-7,-5,1,6,-3,-10,-2,-5,-4,10,-1,10,-10,1,7,6,4,5,-1,9,-9,-6,-10,7,-10,-8,6,9,1,3,1,6,-1,1,1,7,-8,3,5,-4,9,-6,-9,2,-4,2,6,-1,6,-10,-3,-8,-1,-3,-1,9,-8,-6,9,9,-6,-1,8,9,3,2,8,8,-9,6,-7,-1,-2,-4,-8,8,-5,-6,10,-6,5,-10,-7,2,1,-7,5,-5,-8,9,3,2,6,-10,1,9,3,-9,-2,-8,1,1,-5,4,-3,-1,-10,-4,-1,3,10,10,-3,-6,1,8,-9,-9,-3,-8,-4,5,-4,-10,-5,6,7,9,-4,7,-8,7,-1,-10,7,-5,10,7,-10,6,-2,-9,8,-8,-4,8,-9,-7,-3,-7,8,-3,3,-2,-9,-6,-3,-9,-4,3,-4,-10,-6,-5,8,1,-5,4,-6,-9,-7,9,10,10,7,-4,4,3,-4,1,10,8,8,-3,10,-1,-7,-8,-10,-2,2,7,-1,8,-1,-7,-10,-8,9,-3,1,8,6,-6,-4,3,-6,4,5,5,2,6,-7,10,-4,-4,1,-5,-8,5,-9,2,1,3,9,-9,-7,2,-1,-9,7,2,-5,-7,7,-7,-10,-10,-6,-6,-8,-5,-2,-1,9,-8,3,-6,-6,-3,3,-9,-8,4,9,-8,-7,-4,-2,-3,-2,9,2,6,-6,-3,1,-4,9,5,-9,7,-8,6,5,-10,10,-4,5,-2,-3,4,7,2,-7,5,2,4,4,-9,-9,8,10,-4,6,-8,1,10,9,3,1,-3,-2,4,-9,5,-3,9,-6,8,9,8,9,7,2,-5,-9,-7,-7,7,3,4,-6,1,8,-2,7,-6,-8,6,4,-4,-10,-4,-3,5,-2,3,-3,-9,-4,-7,-1,-9,7,-10,5,-4,4,-5,8,4,-10,9,1,-6,9,8,-10,8,10,-10,1,-3,-1,-5,-10,-10,-3,-6,7,9,-7,7,-4,5,-4,-1,9,3,4,-1,-4,-5,-10,-1,-4,4,-9,-9,5,-7,10,-5,3,1,5,-4,-4,5,-9,-2,9,4,-8,-1,10,-3,5,9,5,9,-5,8,9,3,2,-3,-3,8,-2,6,6,-2,7,-3,3,-4,-3,8,-6,4,-8,10,3,-5,-7,-9,-10,8,-2,2,2,-4,10,1,-2,-3,-1,4,-1,1,9,4,8,-9,-2,-6,8,-9,3,-4,2,-7,-2,-9,9,-2,-1,-10,-8,-1,-9,-5,8,-5,2,6,-7,-9,4,-2,9,3,-2,-10,1,1,8,-7,9,-7,-1,7,6,7,-7,6,2,-7,-4,5,6,-5,3,3,6,-3,3,-5,9,2,10,3,7,6,-4,-5,8,-7,4,5,9,8,-1,2,4,7,2,-6,7,-8,-5,-5,7,-6,-3,-2,10,-6,-5,-10,-4,3,-6,-5,-10,-5,-10,-10,6,7,-6,4,2,-6,10,-4,-2,2,-7,-10,-10,2,9,6,-7,-5,-5,-8,8,-2,1,-5,-4,-10,4,7,-8,5,-10,-1,5,9,-4,4,4,-2,-3,-7,-6,7,-8,-5,3,2,-10,-10,10,4,10,-5,6,-7,-6,6,-3,9,7,-6,3,-4,4,7,-5,7,9,-10,-1,1,-3,-7,-10,-8,2,7,-5,-6,5,2,-2,-7,-2,5,-6,-3,3,-5,-8,-10,-6,-4,6,-9,-3,4,1,8,8,9,10,-3,9,6,1,-8,2,10,-1,-10,-10,-4,6,4,-7,-10,-2,2,10,-1,-5,-10,2,-7,-10,9,-3,-1,-9,5,-8,5,-5,-3,6,-8,6,9,9,-1,3,7,5,5,2,9,4,-2,-10,5,-1,-6,10,-5,1,6,-5,2,-2,3,-8,6,6,-10,-2,-10,-8,2,-4,-7,-10,-3,-7,-7,3,-2,2,-4,5,3,-8,2,1,-4,-10,2,-3,7,9,8,3,4,10,-6,-3,-4,-3,-9,-10,-1,-3,2,-7,5,-4,9,-2,7,-10,-7,-1,4,-7,10,5,10,6,3,5,-1,-10,8,-3,6,-7,8,5,-6,6,-2,9,10,-5,9,2,9,-10,6,2,-9,-4,-9,-1,-1,-10,8,4,5,3,-9,3,9,-5,-7,6,7,2,-8,2,-10,2,-4,-7,6,-4,-7,3,2,-10,6,-6,-3,-1,-3,-10,-7,-10,9,-1,-9,9,2,9,-9,-5,-4,-8,-9,-8,3,-3,10,-1,-3,3,-7,-8,-6,5,6,2,8,7,-8,10,-4,-2,-8,-3,-7,-5,-3,-5,9,-6,-9,5,8,-5,-8,10,9,6,8,2,-10,-2,-9,-1,9,5,8,5,3,-6,6,3,-9,7,-10,3,-6,-10,3,5,-3,-8,-10,8,-5,-4,-2,8,-6,1,6,4,10,-6,9,3,-2,2,-3,5,5,-1,-6,8,-6,8,4,3,-7,-5,2,6,-8,-4,-9,1,8,-10,-10,6,9,7,5,-7,1,-7,-9,-5,-1,10,-9,3,2,4,6,-10,-2,-10,7,7,9,-10,-7,9,-7,-10,-9,-6,8,3,-9,-9,-7,8,-4,3,3,6,-10,9,-2,-6,2,2,-1,2,-5,3,-9,8,-7,9,-8,-9,-9,-8,7,-4,5,9,-8,-7,1,6,10,5,9,-7,-10,5,-7,2,6,-5,3,-8,4,-5,5,6,5,5,5,1,10,-7,-9,-5,5,8,3,-1,3,-1,-5,-6,-8,6,-2,-1,3,3,6,-8,5,1,6,-4,-5,-9,-4,3,-7,9,4,-4,-7,10,3,4,-8,8,4,4,7,-2,-10,6,1,-7,-5,-3,-5,4,3,-8,3,-6,7,8,3,8,-2,3,10,-10,10,-5,-8,-5,-9,3,-10,-2,-7,3,-10,-5,3,-10,7,-8,-5,4,-4,-4,3,-6,4,-9,8,-3,1,3,-8,-9,-2,4,1,-1,-6,-9,-2,-9,5,-9,10,-3,2,6,-10,-6,3,-10,-7,-1,-7,1,9,8,-8,9,1,-8,10,4,1,2,2,-10,2,2,-4,-9,-5,-7,3,2,9,-8,5,7,-2,10,1,-2,1,-4,-9,8,-9,-6,2,-6,-7,10,-6,8,7,1,9,-3,-9,5,-10,-1,-9,-9,6,-4,10,7,-4,-6,-4,-1,2,1,-2,1,-1,-9,3,3,-5,-2,-2,3,-3,-9,5,8,-3,-1,7,-5,8,1,3,-9,-1,-7,10,-1,8,2,9,3,10,6,-9,8,-8,7,2,-2,-8,8,-9,-3,-10,-2,-4,10,2,5,-1,-9,3,10,5,-8,3,1,6,10,-10,6,1,1,-4,-7,9,-3,5,8,7,2,-4,3,8,8,10,-3,-2,4,-1,2,-8,-4,10,10,-8,9,-7,3,-8,3,-7,-6,-3,4,3,5,10,-6,-3,-8,-1,4,9,-1,-2,-4,-5,9,-3,3,8,-9,9,-1,-2,-5,5,-8,1,-3,6,-4,-6,-10,-6,6,10,4,-1,-4,-3,-5,-10,-5,4,6,3,-2,10,9,2,-10,3,2,9,6,-4,-2,-3,7,-3,7,10,-7,9,6,3,4,10,-9,-1,-2,-3,-1,-9,4,-3,2,-10,4,6,1,-8,5,-10,-6,7,-7,-2,9,-9,7,-3,5,-7,3,3,-3,8,6,2,10,-3,2,-7,9,5,8,-5,3,6,-5,1,-7,-6,6,8,-7,-1,6,-1,4,3,6,-8,1,-7,4,-2,7,-7,-6,-7,6,2,-7,-9,1,-4,-1,7,8,-8,-4,-5,-10,3,7,-9,-7,-5,5,5,9,4,6,1,7,-8,2,3,-4,-8,-6,4,-9,8,-4,-10,6,4,-7,-6,4,7,-7,-8,7,-4,2,-6,6,4,9,-4,8,-9,-2,-9,-8,4,7,8,9,-6,-9,-1,6,-6,9,-4,-9,4,-7,-10,9,2,-8,-1,4,6,-10,8,-4,5,-6,2,1,7,-7,2,-10,6,-7,-3,-6,4,-7,4,-5,-5,-9,6,-3,5,-9,7,-5,5,2,3,-8,4,7,9,8,-5,-2,-4,-6,-6,9,-4,8,4,-9,8,4,-7,9,-7,3,-3,-4,2,7,5,-3,8,-10,3,-1,-1,2,-10,-5,7,8,2,6,-4,-4,-7,-9,10,9,-1,4,-7,-9,7,-1,-1,-6,-3,-1,-7,7,1,1,7,5,-10,9,5,-2,3,1,-4,-9,3,-3,4,-6,-8,-6,-7,-3,2,-4,-4,-3,4,1,3,5,1,-6,-2,7,9,4,-6,3,-1,-7,7,-3,4,-9,5,2,-3,-8,1,4,-1,-6,-7,7,9,-4,1,-7,1,-1,1,-2,-4,-1,8,-4,6,-7,2,1,-9,-8,-2,5,-3,2,2,8,4,10,7,-10,8,3,3,-1,-3,-3,6,-10,8,2,-6,7,-2,-2,3,-1,1,-10,10,-9,2,7,1,8,-1,-1,-3,-7,-5,3,10,8,-7,-8,-10,1,-8,-2,10,-10,10,-6,-10,-7,1,-1,-5,-4,7,-1,-8,3,-5,-9,-6,-3,-10,1,-3,3,10,7,-4,8,-3,-10,-3,9,7,2,4,-10,-8,6,-9,7,4,-5,-3,10,3,-6,-5,6,-2,-7,-8,3,-10,-9,-8,10,-10,-2,7,-10,-4,-9,-3,2,5,-4,-8,1,5,-7,-8,-7,-4,-3,1,-3,4,-5,-7,4,8,-7,4,6,-9,4,-2,4,-2,-6,2,9,1,5,-2,-4,-5,-1,-10,-10,-10,4,7,-5,-7,-1,2,7,3,3,-8,-10,-7,-4,5,-6,6,6,-8,-2,2,5,1,-7,-1,4,9,-4,4,-3,-10,4,9,-1,1,-9,5,8,6,-2,8,-8,-1,-3,-10,4,7,8,-7,10,-2,-10,-5,-5,-4,7,5,8,10,1,-10,-10,10,-3,-6,-5,-4,-7,5,-9,1,2,-3,-3,4,1,-6,2,-10,5,8,6,6,10,-7,10,-6,5,-5,-2,-2,-4,7,-4,-1,-3,-8,-2,2,4,2,7,-8,-7,3,-1,-6,1,3,8,-4,-4,10,9,-7,-1,-8,-6,3,7,-5,-8,3,6,-5,-1,-7,-5,10,-9,6,-7,8,-9,7,4,-4,4,-2,-5,-7,9,-1], dtype = "int32")#candidate|7615|(2080,)|const|int32
call_7613 = relay.TupleGetItem(func_4667_call(relay.reshape(call_7610.astype('float32'), [16, 14, 8]), relay.reshape(var_7614.astype('int32'), []), relay.reshape(const_7615.astype('int32'), [2080,]), ), 2)
call_7616 = relay.TupleGetItem(func_4671_call(relay.reshape(call_7610.astype('float32'), [16, 14, 8]), relay.reshape(var_7614.astype('int32'), []), relay.reshape(const_7615.astype('int32'), [2080,]), ), 2)
output = relay.Tuple([call_7595,call_7610,call_7613,var_7614,const_7615,])
output2 = relay.Tuple([call_7596,call_7611,call_7616,var_7614,const_7615,])
func_7624 = relay.Function([var_7614,], output)
mod['func_7624'] = func_7624
mod = relay.transform.InferType()(mod)
var_7625 = relay.var("var_7625", dtype = "int32", shape = ())#candidate|7625|()|var|int32
output = func_7624(var_7625)
func_7626 = relay.Function([var_7625], output)
mutated_mod['func_7626'] = func_7626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_7661 = func_5032_call()
call_7662 = func_5032_call()
output = call_7661
output2 = call_7662
func_7666 = relay.Function([], output)
mod['func_7666'] = func_7666
mod = relay.transform.InferType()(mod)
output = func_7666()
func_7667 = relay.Function([], output)
mutated_mod['func_7667'] = func_7667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_7676 = relay.TupleGetItem(func_3494_call(), 0)
call_7677 = relay.TupleGetItem(func_3495_call(), 0)
output = relay.Tuple([call_7676,])
output2 = relay.Tuple([call_7677,])
func_7688 = relay.Function([], output)
mod['func_7688'] = func_7688
mod = relay.transform.InferType()(mod)
mutated_mod['func_7688'] = func_7688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7688_call = mutated_mod.get_global_var('func_7688')
call_7689 = func_7688_call()
output = call_7689
func_7690 = relay.Function([], output)
mutated_mod['func_7690'] = func_7690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6472_call = mod.get_global_var('func_6472')
func_6474_call = mutated_mod.get_global_var('func_6474')
call_7703 = relay.TupleGetItem(func_6472_call(), 0)
call_7704 = relay.TupleGetItem(func_6474_call(), 0)
func_4938_call = mod.get_global_var('func_4938')
func_4941_call = mutated_mod.get_global_var('func_4941')
var_7706 = relay.var("var_7706", dtype = "float64", shape = (480,))#candidate|7706|(480,)|var|float64
call_7705 = relay.TupleGetItem(func_4938_call(relay.reshape(var_7706.astype('float64'), [2, 15, 16])), 0)
call_7707 = relay.TupleGetItem(func_4941_call(relay.reshape(var_7706.astype('float64'), [2, 15, 16])), 0)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_7715 = relay.TupleGetItem(func_5872_call(), 0)
call_7716 = relay.TupleGetItem(func_5874_call(), 0)
func_4938_call = mod.get_global_var('func_4938')
func_4941_call = mutated_mod.get_global_var('func_4941')
call_7723 = relay.TupleGetItem(func_4938_call(relay.reshape(call_7705.astype('float64'), [2, 15, 16])), 0)
call_7724 = relay.TupleGetItem(func_4941_call(relay.reshape(call_7705.astype('float64'), [2, 15, 16])), 0)
output = relay.Tuple([call_7703,call_7705,var_7706,call_7715,call_7723,])
output2 = relay.Tuple([call_7704,call_7707,var_7706,call_7716,call_7724,])
func_7745 = relay.Function([var_7706,], output)
mod['func_7745'] = func_7745
mod = relay.transform.InferType()(mod)
mutated_mod['func_7745'] = func_7745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7746 = relay.var("var_7746", dtype = "float64", shape = (480,))#candidate|7746|(480,)|var|float64
func_7745_call = mutated_mod.get_global_var('func_7745')
call_7747 = func_7745_call(var_7746)
output = call_7747
func_7748 = relay.Function([var_7746], output)
mutated_mod['func_7748'] = func_7748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7235_call = mod.get_global_var('func_7235')
func_7237_call = mutated_mod.get_global_var('func_7237')
call_7855 = relay.TupleGetItem(func_7235_call(), 0)
call_7856 = relay.TupleGetItem(func_7237_call(), 0)
output = call_7855
output2 = call_7856
func_7859 = relay.Function([], output)
mod['func_7859'] = func_7859
mod = relay.transform.InferType()(mod)
mutated_mod['func_7859'] = func_7859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7859_call = mutated_mod.get_global_var('func_7859')
call_7860 = func_7859_call()
output = call_7860
func_7861 = relay.Function([], output)
mutated_mod['func_7861'] = func_7861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_7888 = relay.TupleGetItem(func_3948_call(), 2)
call_7889 = relay.TupleGetItem(func_3950_call(), 2)
output = call_7888
output2 = call_7889
func_7896 = relay.Function([], output)
mod['func_7896'] = func_7896
mod = relay.transform.InferType()(mod)
output = func_7896()
func_7897 = relay.Function([], output)
mutated_mod['func_7897'] = func_7897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6559_call = mod.get_global_var('func_6559')
func_6561_call = mutated_mod.get_global_var('func_6561')
call_7931 = relay.TupleGetItem(func_6559_call(), 0)
call_7932 = relay.TupleGetItem(func_6561_call(), 0)
func_4746_call = mod.get_global_var('func_4746')
func_4747_call = mutated_mod.get_global_var('func_4747')
call_7945 = func_4746_call()
call_7946 = func_4746_call()
func_6472_call = mod.get_global_var('func_6472')
func_6474_call = mutated_mod.get_global_var('func_6474')
call_7959 = relay.TupleGetItem(func_6472_call(), 0)
call_7960 = relay.TupleGetItem(func_6474_call(), 0)
output = relay.Tuple([call_7931,call_7945,call_7959,])
output2 = relay.Tuple([call_7932,call_7946,call_7960,])
func_7964 = relay.Function([], output)
mod['func_7964'] = func_7964
mod = relay.transform.InferType()(mod)
output = func_7964()
func_7965 = relay.Function([], output)
mutated_mod['func_7965'] = func_7965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_7966 = func_3525_call()
call_7967 = func_3525_call()
var_7976 = relay.var("var_7976", dtype = "float32", shape = (16, 14, 8))#candidate|7976|(16, 14, 8)|var|float32
bop_7977 = relay.multiply(call_7966.astype('int8'), relay.reshape(var_7976.astype('int8'), relay.shape_of(call_7966))) # shape=(16, 14, 8)
bop_7980 = relay.multiply(call_7967.astype('int8'), relay.reshape(var_7976.astype('int8'), relay.shape_of(call_7967))) # shape=(16, 14, 8)
func_6847_call = mod.get_global_var('func_6847')
func_6850_call = mutated_mod.get_global_var('func_6850')
const_7982 = relay.const([7.980303,-6.177281,-3.558878,-3.845232,-8.293107,-5.873004,-2.987411,7.500837,9.200402,-3.300192,1.320314,9.265477,-3.276136,-7.489805,-9.663096,-5.250605,-6.192855,0.162552,7.269433,-6.827970,0.947872,-1.302056,-0.535110,-6.548852,-1.249826,-2.624925,7.586147,1.419838,6.294740,4.338048,2.419831,2.938241,8.228626,-2.639252,-1.792502,-4.352887,-5.622277,-9.196497,-5.070321,-1.425109,8.765218,-4.645214,-9.573471,-5.323124,8.512282,6.398482,5.849989,-8.019237,4.032198,6.382277,-4.116070,0.363917,2.975621,6.439220,-8.006762,-7.939669,-8.040795,1.104193,-9.803828,-9.487249,7.751791,-9.103969,-6.273019,0.079370,-3.034218,-6.386225,-4.713176,0.290490,7.468220,-8.030331,-8.472385,1.905178,6.452443,0.368304,-1.649663,-8.559248,8.306635,4.988525,1.821406,-4.116915,5.366456,-5.678815,-3.329072,9.571871,8.985461,-3.860094,-1.032121,-8.433465,-2.696523,6.631612,-9.975425,-1.990138,1.676514,4.254536,5.232828,-5.927630,-3.324732,-7.422442,-0.283314,-5.462451,1.886367,5.986166,-7.197197,-7.648073,1.462953,-0.164017,0.040748,0.067438,-9.922382,3.861635,-7.908729,-2.202824,1.175937,-0.943416,9.970318,5.808860,4.702862,-4.986354,-4.752846,-1.334192,5.939348,8.458257,1.729340,3.975583,-8.896868,5.491390,-0.496962,4.541340,3.167552,8.074314,5.574956,2.256453,1.821406,-1.158416,-0.109237,1.868316,6.965140,-5.492187,1.200909,-4.600280,9.722827,5.987019,-4.583319,5.559378,-1.693389,-5.607281,2.236128,-8.583213,7.102862,-7.313808,5.578348,0.100814,9.349826,5.711800,6.031525,-7.999001,-0.504861,-3.539513,-9.719480,-5.892130,-0.035120,-2.796791,-4.487846,-0.694836,-6.482365,-1.897681,-5.350917,-0.557765,7.562294,0.689270,-9.279289,5.101575,6.372574,2.016328,5.281036,-0.352746,-9.698078,3.967060,3.808071,-0.289982,2.496535,1.748135,2.580205,4.232430,3.834579,9.456009,-6.046458,-8.189376,4.759922,0.802742,4.596784,-8.912281], dtype = "float32")#candidate|7982|(192,)|const|float32
call_7981 = relay.TupleGetItem(func_6847_call(relay.reshape(const_7982.astype('float32'), [192,])), 3)
call_7983 = relay.TupleGetItem(func_6850_call(relay.reshape(const_7982.astype('float32'), [192,])), 3)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_7988 = func_3525_call()
call_7989 = func_3525_call()
output = relay.Tuple([bop_7977,call_7981,const_7982,call_7988,])
output2 = relay.Tuple([bop_7980,call_7983,const_7982,call_7989,])
func_7996 = relay.Function([var_7976,], output)
mod['func_7996'] = func_7996
mod = relay.transform.InferType()(mod)
var_7997 = relay.var("var_7997", dtype = "float32", shape = (16, 14, 8))#candidate|7997|(16, 14, 8)|var|float32
output = func_7996(var_7997)
func_7998 = relay.Function([var_7997], output)
mutated_mod['func_7998'] = func_7998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7964_call = mod.get_global_var('func_7964')
func_7965_call = mutated_mod.get_global_var('func_7965')
call_8000 = relay.TupleGetItem(func_7964_call(), 0)
call_8001 = relay.TupleGetItem(func_7965_call(), 0)
output = call_8000
output2 = call_8001
func_8017 = relay.Function([], output)
mod['func_8017'] = func_8017
mod = relay.transform.InferType()(mod)
output = func_8017()
func_8018 = relay.Function([], output)
mutated_mod['func_8018'] = func_8018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7666_call = mod.get_global_var('func_7666')
func_7667_call = mutated_mod.get_global_var('func_7667')
call_8022 = func_7666_call()
call_8023 = func_7666_call()
var_8024 = relay.var("var_8024", dtype = "float64", shape = (16, 14, 8))#candidate|8024|(16, 14, 8)|var|float64
bop_8025 = relay.right_shift(call_8022.astype('uint64'), relay.reshape(var_8024.astype('uint64'), relay.shape_of(call_8022))) # shape=(16, 14, 8)
bop_8028 = relay.right_shift(call_8023.astype('uint64'), relay.reshape(var_8024.astype('uint64'), relay.shape_of(call_8023))) # shape=(16, 14, 8)
output = relay.Tuple([bop_8025,])
output2 = relay.Tuple([bop_8028,])
func_8042 = relay.Function([var_8024,], output)
mod['func_8042'] = func_8042
mod = relay.transform.InferType()(mod)
var_8043 = relay.var("var_8043", dtype = "float64", shape = (16, 14, 8))#candidate|8043|(16, 14, 8)|var|float64
output = func_8042(var_8043)
func_8044 = relay.Function([var_8043], output)
mutated_mod['func_8044'] = func_8044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7482_call = mod.get_global_var('func_7482')
func_7483_call = mutated_mod.get_global_var('func_7483')
call_8096 = func_7482_call()
call_8097 = func_7482_call()
output = call_8096
output2 = call_8097
func_8098 = relay.Function([], output)
mod['func_8098'] = func_8098
mod = relay.transform.InferType()(mod)
output = func_8098()
func_8099 = relay.Function([], output)
mutated_mod['func_8099'] = func_8099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5096_call = mutated_mod.get_global_var('func_5096')
call_8122 = relay.TupleGetItem(func_5095_call(), 0)
call_8123 = relay.TupleGetItem(func_5096_call(), 0)
output = call_8122
output2 = call_8123
func_8132 = relay.Function([], output)
mod['func_8132'] = func_8132
mod = relay.transform.InferType()(mod)
output = func_8132()
func_8133 = relay.Function([], output)
mutated_mod['func_8133'] = func_8133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7389_call = mod.get_global_var('func_7389')
func_7391_call = mutated_mod.get_global_var('func_7391')
call_8142 = relay.TupleGetItem(func_7389_call(), 0)
call_8143 = relay.TupleGetItem(func_7391_call(), 0)
output = relay.Tuple([call_8142,])
output2 = relay.Tuple([call_8143,])
func_8149 = relay.Function([], output)
mod['func_8149'] = func_8149
mod = relay.transform.InferType()(mod)
output = func_8149()
func_8150 = relay.Function([], output)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5804_call = mod.get_global_var('func_5804')
func_5806_call = mutated_mod.get_global_var('func_5806')
call_8200 = relay.TupleGetItem(func_5804_call(), 0)
call_8201 = relay.TupleGetItem(func_5806_call(), 0)
output = call_8200
output2 = call_8201
func_8209 = relay.Function([], output)
mod['func_8209'] = func_8209
mod = relay.transform.InferType()(mod)
output = func_8209()
func_8210 = relay.Function([], output)
mutated_mod['func_8210'] = func_8210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5032_call = mod.get_global_var('func_5032')
func_5034_call = mutated_mod.get_global_var('func_5034')
call_8221 = func_5032_call()
call_8222 = func_5032_call()
func_8017_call = mod.get_global_var('func_8017')
func_8018_call = mutated_mod.get_global_var('func_8018')
call_8223 = func_8017_call()
call_8224 = func_8017_call()
func_6388_call = mod.get_global_var('func_6388')
func_6391_call = mutated_mod.get_global_var('func_6391')
var_8240 = relay.var("var_8240", dtype = "float32", shape = (78,))#candidate|8240|(78,)|var|float32
call_8239 = relay.TupleGetItem(func_6388_call(relay.reshape(var_8240.astype('float32'), [13, 3, 2]), relay.reshape(var_8240.astype('float32'), [13, 3, 2]), ), 0)
call_8241 = relay.TupleGetItem(func_6391_call(relay.reshape(var_8240.astype('float32'), [13, 3, 2]), relay.reshape(var_8240.astype('float32'), [13, 3, 2]), ), 0)
func_7334_call = mod.get_global_var('func_7334')
func_7339_call = mutated_mod.get_global_var('func_7339')
const_8267 = relay.const([8,10,2,4,3,-2,-3,-9,2,-10,-1,-5,-1,-5,4,8,-10,3,-6,8,4,-4,-7,-3,-6,-1,9,8,-5,-8,-10,10,-5,-4,9,-2,9,1,-8,6,9,-3,-5,8,-3,-10,3,3,-4,-10,-8,-7,-8,-5,-5,2,-8,2,-7,5,9,3,5,9,-4,2,1,10,-10,-8,6,8,-9,9,-3,6,-10,-3,4,4,-10,9,-6,1,-2,10,10,-5,-10,-5,-1,-6,-7,-5,10,-6,-4,2,-3,-5,-1,-4,2,-10,-6,-5,5,7,10,-2,1,-1,-2,-8,-5,10,7,8,5,-2,-4,-9,8,-8,10,-1,7,-10,4,-6,9,4,3,-7,-10,1,-6,3,-6,4,-3,9,-6,1,-4,-10,6,-1,6,7,-7,-1,9,-8,-7,1,9,9,8,9,8,7,3,-1,7,6,6,-8,-3,10,-1,9,-10,9,-8,-9,6,-10,-3,-10,1,-6,-5,-2,1,2,2,3,-10,9,1,-6,-4,-7,-9,9,3,9,-10,-10,-2,4,-4,5,1,1,1,-10,4,-2,-4,-5,6,7,-4,6,9,-7,7,4,5,2,5,-1,-1,3,5,2,-3,-9,10,-2,-7,2,2,-4,3,5,7,-6,10,-4,9,-10,9,-1,7,5,-6,-8,5,7,7,6,9,-2,3,-6,4,-7,7,9,5,8,3,2,-9,5,-3,3,5,1,-3,-2,-6,9,9,9,-4,-5,-4,-4,-8,-2,10,-2,-1,10,-1,1,1,3,8,6,-9,-8,10,8,8,8,5,2,-3,10,-5,3,8,10,6,-7,-10,9,-6,-9,-7,2,-7,8,9,5,-8,3,-4,2,-10,-8,6,10,4,-6,-6,-5,-7,2,10,9,8,3,-5,-6,8,5,9,5,7,-4,-4,-6,1,-4,-7,-10,6,-7,-10,6,-4,1,-10,-7,-10,2,10,-2,7,-4,10,9,7,7,-8,-3,-7,6,-1,-4,5,-2,5,-6,3,-7,3,-8,-10,8,-1,-10,7,6,10,8,8,-2,5,3,9,-10,-6,5,-5,-3,5,-5,-3,10,-10,1,-8,1,1,1,6,4,-10,-7,3,-1,7,-1,-4,-6,-9,4,-9,1,9,-2,1,-6,-5,8,-2,6,-3,-10,10,-5,2,-4,-4,-3,-7,9,-10,-1,-7,5,-7,1,-10,1,6,6,-3,10,-7,2,5,2,-6,2,-1,3,8,10,-6,9,-4,3,-7,-7,-6,-8,10,-8,-2,-10,-7,-3,-8,4,-3,-9,10,-6,-2,3,4,1,-1,10,9,-10,-4,1,7,9,10,9,-7,9,10,9,1,-9,7,8,1,2,1,9,-1,-8,-4,3,3,-3,1,-8,2,-7,-7,4,-2,-3,-10,-3,-1,-3,9,10,-7,-7,-5,-5,2,-7,-6,9,7,-3,6,-9,-6,-4,10,6,-7,8,-8,10,-4,1,7,-9,3,1,-5,-6,5,-7,6,-2,6,8,4,6,-6,-9,-8,-7,-8,2,-1,8,10,10,-9,-2,6,-1,-7,-10,7,-6,-8,7,3,1,8,1,5,6,6,8,-8,-4,-7,8,6,8,6,1,-3,-3,-2,-8,8,10,4,7,9,6,10,10,5,1,3,1,4,6,-8,4,10,9,-4,-5,10,8,5,-7,4,-4,-7,3,-8,-9,5,2,9,-1,-10,5,10,-1,9,-7,-5,2,-5,5,-5,-10,10,-8,-5,-2,-9,-6,-10,4,-6,-6,2,-3,4,8,4,2,10,-5,-10,2,5,8,7,-7,-3,-4,-3,-1,6,-6,7,-4,-9,6,5,-9,-5,8,-9,3,-7,6,-5,-7,-6,9,3,4,4,1,5,-2,9,2,-4,-1,-3,3,5,7,2,-9,-3,7,1,9,-2,-6,-2,2,-5,-6,-1,4,-8,-1,1,7,1,1,6,9,2,10,4,-9,4,-7,6,-2,4,-7,1,9,10,5,-2,3,-10,10,-2,2,8,-10,3,-3,5,-2,-5,-10,2,2,-10,10,7,-3,-2,-6,6,-7,10,-6,9,5,8,1,-3,-4,8,-2,-7,-8,1,1,2,6,9,8,9,-4,-9,7,-7,-4,6,-4,4,-1,-3,-2,-2,6,-10,1,-8,-6,-1,-10,3,-7,-1,-1,-10,9,7,-10,-2,2,3,-3,10,9,-2,2,-2,-4,8,9,8,-3,1,-3,2,-9,1,-5,3,2,2,1,-1,-8,-10,6,4,2,5,-10,-5,1,3,4,-9,-1,8,-4,9,-9,8,9,-7,9,10,-6,-10,-8,-2,-9,9,-3,-6,-8,-8,5,2,-9,-7,-10,10,2,2,1,4,-6,-9,-10,5,-1,-6,-10,10,-9,10,6,7,7,7,3,7,-4,8,3,-3,6,-1,-10,-8,10,8,7,1,5,4,-1,9,1,-9,-1,-1,2,3,-2,10,-8,-7,4,-9,-8,-8,5,-2,7,1,4,2,3,-9,-6,-7,9,-7,2,5,10,8,-3,2,-2,7,-6,-5,4,-5,4,3,6,10,8,9,-1,3,-7,-3,7,-6,-8,-1,-4,-1,8,4,3,-5,1,9,3,3,5,1,-5,5,8,6,-2,-2,10,-6,2,-4,-7,3,4,-10,-4,-1,7,-4,3,7,-6,8,7,-9,-7,-1,7,-6,2,10,-6,6,-8,-8,-10,-6,6,-2,-10,-3,7,3,8,5,-5,3,-7,-7,-9,3,2,6,7,-4,-1,6,-8,2,-10,3,3,7,7,4,-10,5,-8,1,-1,4,1,9,-9,-3,-1,4,-4,-3,-6,-9,4,10,7,9,6,9,3,7,3,1,-8,-6,-8,5,8,2,-8,-5,-4,2,-10,-9,10,-7,6,5,-4,8,1,-8,9,-2,2,1,-4,8,-3,6,-1,-6,-10,-2,-3,-8,6,-5,10,2,-5,-10,6,-2,4,-2,-3,-3,9,-1,6,9,7,-4,1,9,-9,-6,6,3,8,-5,6,-7,-1,-7,10,-8,-2,-4,-10,-1,-1,-5,-5,-4,-4,7,7,4,4,5,-1,-1,-9,8,-7,10,5,6,2,4,-1,7,-5,-5,6,3,5,10,10,-3,6,6,9,-1,3,10,-6,-1,-9,2,-6,-1,-10,5,9,-6,3,8,5,4,5,-2,-10,4,9,5,10,6,-8,-1,-1,4,10,-8,1,4,8,9,-9,9,6,3,1,9,10,-6,4,9,-4,-10,10,1,10,-6,-10,8,9,5,1,-9,1,-4,-7,-10,9,-6,-3,-7,-6,1,7,5,1,6,-3,4,10,2,10,-8,3,10,-2,9,1,7,9,4,3,1,6,-3,-3,6,6,-4,10,7,2,-10,-3,-1,-1,2,8,10,-9,10,8,5,2,5,7,1,-7,4,-2,-2,-1,-4,8,-3,-9,-8,1,-2,-5,2,-10,-1,8,5,-10,2,3,-2,-2,-7,10,-9,-9,3,-8,3,-9,-3,10,8,6,1,6,10,8,10,-5,8,-9,-7,7,-5,6,5,9,-4,-3,-4,-6,-6,6,-2,-4,4,-3,-10,-2,-9,4,-2,9,-8,1,-9,10,1,3,8,6,-1,-4,-1,6,5,-4,-5,-3,5,-6,-10,4,-2,-7,-2,-2,-3,-4,3,4,3,6,-3,10,-2,-4,3,-6,-5,-7,7,2,8,-4,-9,10,6,-10,5,-7,-6,-1,-9,6,-1,2,2,8,9,10,8,-10,6,-1,1,9,-9,6,9,-3,-5,-8,9,7,-8,8,9,-10,9,7,1,7,8,9,7,10,9,9,6,5,-2,-1,10,-7,5,9,4,6,-1,-1,-9,10,-1,-5,4,-4,-1,-9,-6,-8,-2,7,-2,10,-1,2,2,-9,1,-3,-2,-3,-1,3,-1,-10,-9,1,-3,-5,-9,-4,6,-7,5,-2,-6,1,-7,7,-5,-1,6,-6,-10,-1,7,-4,-9,2,1,-5,8,6,-10,3,2,2,5,-6,10,-6,5,3,-8,-1,8,-8,2,2,-1,-1,-9,10,2,9,-5,2,2,5,-10,-3,-4,5,-8,-2,-3,9,-4,4,-7,10,7,-4,-7,2,-9,6,-7,1,-9,2,4,4,4,-5,-10,-3,-9,9,-7,-3,-8,-10,-1,10,-4,2,6,7,3,-1,9,3,2,-3,-2,7,-7,-5,-10,8,7,-1,7,5,1,4,-1,-9,-8,-3,-1,2,-1,-6,-2,-4,-8,4,-4,5,4,-7,-8,-7,1,9,-2,9,8,4,-4,10,5,7,-2,7,4,10,-2,-10,-9,-6,2,4,-3,-1,-7,6,3,-3,6,3,-6,3,2,-3,-6,9,4,-9,2,-3,1,10,5,-10,-5,-4,-6,3,2,-8,-6,-8,2,9,-5,2,-6,-9,10,-3,-4,8,-5,9,-8,8,4,2,1,-10,6,4,8,2,-7,-3,-1,1,1,-5,-9,-10,-9,8,6,8,-4,3,-10,-8,-9,7,3,7,-10,-2,5,1,-6,6,1,-5,8,4,2,-4,4,-10,1,-10,10,-9,6,1,-9,8,-10,-4,1,-8,-2,2,6,-5,-1,-10,-9,-10,-9,8,7,-9,-7,7,10,10,10,10,-8,-6,9,2,3,2,-2,-9,4,-5,-10,10,-8,2,4,7,-6,-1,-7,5,-4,3,7,2,-1,-6,-7,-10,7,-4,-5,-5,2,-8,-8,10,-9,-7,-4,-8,5,-5,-10,-9,7,10,-4,3,-10,6,1,9,10,6,4,-10,-10,3,-10,-9,-6,10,-3,-8,3,2,-4,6,8,8,8,10,3,-7,8,9,-6,-5,-4,-3,-1,-3,-7,-6,10,6,-2,-7,-2,7,2,-3,6,9,-3,7,9,-8,8,1,10,10,-6,8,-1,9,2,4,-1,8,-7,-7,-6,5,1,-5,-5,-4,2,-10,-6,6,10,5,-3,7,-1,-8,-1,2,9,4,2,7,-1,-7,-8,4,3,1,-6,7,3,4,-6,-6,6,1,10,-4,-6,8,3,4,-3,5,-1,9,-8,10,1,-3,7,-7,-3,-8,1,5,-7,-4,-1,-2,-1,-8,3,-5,3,-1,3,9,-8,-6,-10,5,-9,-10,7,-7,-4,-9,3,3,-3,10,4,-1,4,-3,10,4,4,4,-9,-10,-5,1,-3,6,1,-2,-5,7,-2,-6,8,-6,5,4,8,-6,-4,-3,-1,5,-4,7,1,9,-6,-8,4,-7,-3,-2,8,5,6,9,6,-9,10,-10,-2,4,5,-10,-7,9,-9,-10,10,9,3,3,-1,-8,8,1,10,-8,9,-3,7,6,-4,3,2,-9,-9,2,7,-10,-1,-7,-8,3,2,-6,9,-7,8,8,1,7,-2,-9,-3,5,1,3,6,-9,-6,-9,6,-10,3,6,-9,-3,4,-1,-2,10,-8,-5,1,-3,10,3,-8,-2,-3,7,3,-5,4,3,4,-1,6,-7,3,-3,-3,-1,-9,4,-3,-8,-2,5,-8,-4,-2,5,1,5], dtype = "int32")#candidate|8267|(2080,)|const|int32
call_8266 = relay.TupleGetItem(func_7334_call(relay.reshape(call_8223.astype('float64'), [1800,]), relay.reshape(const_8267.astype('int32'), [2080,]), relay.reshape(call_8223.astype('float32'), [8, 15, 15]), ), 7)
call_8268 = relay.TupleGetItem(func_7339_call(relay.reshape(call_8223.astype('float64'), [1800,]), relay.reshape(const_8267.astype('int32'), [2080,]), relay.reshape(call_8223.astype('float32'), [8, 15, 15]), ), 7)
func_1709_call = mod.get_global_var('func_1709')
func_1712_call = mutated_mod.get_global_var('func_1712')
const_8272 = relay.const([5,-7,-2,-3,9,10,-8,-3,10,-4,7,3,3,-7,7,6,-7,-10,-4,-7,-7,-8,-1,1,-2,-2,4,9,5,6,3,-5,-7,-9,-10,-5,-3,-3,3,6,2,6,-5,-5,2,4,3,4,-6,2,-9,-4,-9,-9,-4,10,4,4,-3,-10,10,10,3,5,9,9,4,2,-2,-6,9,6,3,3,-9,-3,-8,4,7,3,7,-3,5,2,10,8,3,-3,4,-4,-10,3,10,-9,7,4,-6,-2,-4,-10,4,4,-2,8,2,8,-9,-9,-10,-9,-4,10,-1,1,-9,-2,1,-2,10,8,2,-3,8,-1,2,-5,2,-6,-8,-8,10,-9,5,-3,-3,-6,-8,7,3,-4,7,-3,3,-4,6,7,2,-6,-9,-2,9,-7,-1,3,-2,10,6,-2,5,-1,8,9,-6,-8,6,-9,-10,-4,-3,-4,5,8,-9,2,6,7,5,-3,2,8,-3,-5,-5,3,-5,5,-3,1,1,8,-1,1,-2,7,-8,-2,-1,-4,-3,4,-4,-7,-2,-10,6,-10,4,4,-8,10,5,-6,8,-5,-7,-10], dtype = "uint32")#candidate|8272|(216,)|const|uint32
var_8273 = relay.var("var_8273", dtype = "float32", shape = (4, 168))#candidate|8273|(4, 168)|var|float32
call_8271 = relay.TupleGetItem(func_1709_call(relay.reshape(const_8272.astype('uint32'), [3, 6, 12]), relay.reshape(var_8273.astype('float32'), [672,]), ), 1)
call_8274 = relay.TupleGetItem(func_1712_call(relay.reshape(const_8272.astype('uint32'), [3, 6, 12]), relay.reshape(var_8273.astype('float32'), [672,]), ), 1)
const_8275 = relay.const([6,-8,7,-5,2,-3,-8,1,-4,5,-3,-2,-2,9,-6,3,9,10,-5,-2,-6,1,5,-3,4,-3,-4,7,8,6,-3,7,-10,-5,-1,-3,4,-2,7,-10,-7,9,-7,-9,-4,-10,-4,6,-1,1,2,10,-10,-6,10,-10,-10,6,5,4,-10,6,-9,-10,-5,-4,-6,4,-7,-3,-10,-1,1,-8,5,-8,6,1,-8,8,3,-2,-6,-5,9,-9,-2,-9,-2,-3,-9,-3,7,-2,6,-8,-4,8,-7,5,2,6,8,10,10,-6,4,-6,5,6,10,10,6,-5,10,10,-6,5,2,4,9,-3,-1,-8,6,8,9,1,-6,10,-6,8,-9,-8,10,-10,-3,-4,3,1,-7,5,-8,1,3,-10,2,-5,-2,-9,-6,-1,-6,-3,8,-6,6,-1,10,-10,3,-3,9,5,2,4,-7,-7,2,9,8,5,1,-2,-9,-5,4,7,-8,7,-10,-8,-5,-9,-6,9,6,-10,1,9,4,-2,3,-4,-4,1,-3,3,3,-5,2,5,-9,6,-6,-7,8,1,-9,-4,-7,8,-3,7,5,-5,7,5,-6,5,-6,2,-2,-7,9,7,-6,5,-8,-5,4,9,1,-7,-7,-9,-5,-8,6,-9,7,-9,10,2,6,-2,9,-4,-7,7,3,8,-7,-6,-2,-5,10,-5,10,10,-7,8,4,-6,3,5,-9,4,9,-8,5,-3,-1,-5,6,-9,-8,8,-9,2,-10,-7,-2,-9,-1,6,-2,10,9,-6,-1,-9,4,-10,4,4,-3,-6,-2,-7,-2,6,4,-9,1,8,-2,2,6,8,8,-5,3,-5,6,7,-7,-4,-8,3,-8,-3,10,8,-1,-6,-10,-9,2,-9,6,-8,8,-3,3,-8,-9,-3,10,4,10,10,3,-7,5,-5,2,5,3,8,4,-9,9,-3,-3,-10,-9,5,2,-6,7,-8,-5,3,-1,-4,-9,9,4,4,-10,-2,-5,-10,-10,3,-8,-8,-6,-10,2,-3,8,-8,5,-2,8,-4,3,-9,-10,2,-7,-2,-1,-9,8,-5,-3,9,-7,-3,-4,-8,-8,-2,1,-8,-4,1,-5,-2,2,9,4,-3,8,-6,10,-1,-2,9,-7,-2,-7,10,-3,7,2,1,6,7,-8,6,6,8,-2,-1,-4,-2,8,-5,4,6,-7,-10,-1,-7,-9,-8,-2,-2,3,-3,-10,8,-7,-1,-4,-7,-6,-4,-3,7,-5,6,1,-2,-5,1,-2,-3,1,-9,1,-8,2,-3,2,-8,4,4,4,-2,-3,-4,4,-3,9,2,10,6,-3,-9,-8,-1,1,-10,3,3,8,8,-5,9,-5,-6,2,-8,-1,-9,2,-3,-7,-7,6,-6,-9,8,-7,8,9,-8,-7,7,1,-9,8,-7,5,-7,6,-9,8,-9,-2,7,-2,-4,1,-7,7,-5,-5,2,-6,5,10,9,9,3,4,7,-4,4,-2,6,-6,4,5,5,5,-7,4,-3,1,-6,-5,-2,-4,2,1,7,3,1,9,1,-6,9,2,4,-9,10,-5,-10,-3,7,2,-1,7,-3,8,10,-4,-5,-2,-2,1,-4,-6,-7,9,-3,10,-6,-4,3,4,-5,6,-5,-8,1,8,-6,-10,-5,7,-9,-2,3,-5,9,2,10,-5,-6,1,-2,3,-5,-3,1,10,6,-7,7,7,-3,-9,9,-7,7,-2,-9,9,9,6,-1,-10,-8,5,-8,9,-3,4,10,-7,-9,8,-8,-4,6,-7,-6,-3,3,-8,-4,4,-5,9,8,-4,9,-5,-8,3,8,-2,-6,-9,-5,-2,5,-6,2,8,5,9,4,10,4,8,3,6,-5,10,5,-10,-6,3,-6,-2,-4,7,-6,2,2,1,9,7,-6,5,7,-2,-6,4,7,-2,-8,1,-6,3,-2,-3,6,5,5,3,-7,-6,1,4,-6,9,3,-8,-2,7,9,-2,-2,-7,9,10,7,9,-5,-8,-7,-5,-6,1,5,-1,-2,9,2,-10,6,-4,-5,10,6,-3,6,5,-4,-9,6,3,-5,-1,-8,5,-2,-6,-4,9,6,-2,1,-4,8,5,-5,4,-1,-6,-8,5,-10,7,1,5,-7,2,6,4,-1,-8,7,8,-8,9,5,-4,-6,2,-4,-7,-4,2,4,4,4,6,5,-1,10,9,-5,4,-1,-1,1,-9,-6,5,-6,7,-4,-1,-7,-3,2,2,-2,-1,1,1,9,-9,10,4,4,6,-2,-6,-9,4,1,-9,2,-10,-1,7,3,-4,9,-1,-7,10,5,-8,6,-8,-8,10,8,-5,10,-8,9,6,-7,-2,3,4,9,-2,4,2,6,3,3,-2,1,8,9,-1,-10,-3,-6,-10,-8,2,4,-3,-7,4,-6,4,6,9,-5,-4,-3,9,5,-6,4,5,1,10,-6,-9,3,-10,-7,-6,9,-9,-8,-4,10,6,-6,-3,2,-7,8,-1,-1,-9,9,-3,7,3,-10,8,4,7,-6,-1,6,7,5,-6,-8,-7,2,7,9,7,-4,-3,-1,-2,-3,-7,10,2,3,-2,-2,-10,-8,-4,-5,-8,7,9,4,-7,2,-3,-10,-10,2,4,10,10,10,-4,-4,6,-8,9,6,-8,-2,3,-7,-4,4,4,-3,3,-8,-8,1,-6,-9,-10,3,-5,8,-6,10,5,10,-9,4,8,-9,6,10,-1,-9,6,-9,-8,1,-2,-5,-7,6,10,8,-2,6,-8,-10,-7,-10,-2,8,-5,-3,9,6,5,-4,2,4,-10,1,-9,9,-1,-3,-9,4,-7,5,-7,4,4,10,1,-1,-6,-10,-5,-1,9,3,4,-4,-4,-6,9,-4,9,1,8,10,-4,9,1,-10,-5,-8,10,-9,-10,-7,7,2,-7,-4,2,-1,6,8,9,8,10,-2,-8,5,7,7,-3,-10,9,-7,9,9,-5,3,-6,-1,-6,5,5,-4,-1,-6,9,7,9,-2,2,-4,-10,-5,9,-3,1,1,-9,8,-7,6,-10,5,-9,-8,8,-9,2,-7,2,-5,9,8,-4,-7,1,-8,-8,-8,10,9,-1,-8,-2,1,-4,-6,-4,-10,1,9,1,-10,-10,8,-8,10,3,10,5,-1,10,4,4,-2,1,4,7,-3,-4,-7,-7,-2,8,-8,-5,-4,10,1,-1,-8,2,-6,-8,6,-1,-6,1,-9,-2,-2,9,4,-3,3,5,6,-5,-8,5,-5,-6,-5,9,-8,2,-7,-7,2,5,-3,9,2,4,-5,2,5,2,-7,-5,-1,-8,-2,1,-2,-9,9,-6,2,-8,1,8,10,-8,-1,5,-2,2,5,-7,-10,-3,4,9,-1,2,9,-8,10,-7,10,6,-2,-7,-2,5,3,-2,-7,-3,-9,10,7,-8,-5,9,-6,9,-3,-6,-1,6,1,10,-10,6,-10,-9,4,5,2,-5,10,10,-2,-10,-9,6,-6,-8,1,-6,-2,-9,10,-8,-7,3,-8,-3,-1,-3,9,10,8,-2,4,2,-10,-4,3,5,6,-9,2,7,5,4,1,-1,-4,10,8,-5,10,-9,3,7,3,-8,-10,-6,6,8,4,8,2,-5,9,9,9,-6,-5,4,9,-10,-8,3,-8,3,2,-1,1,-5,8,-2,3,3,-1,5,-8,10,-3,10,-3,7,-4,10,-8,8,6,-5,9,8,-5,-9,-7,-9,-1,-6,-3,2,3,5,-4,7,2,-10,10,-1,10,-7,1,9,-6,8,8,-9,9,-10,4,2,9,-8,-1,-3,-9,10,-8,-1,2,6,-7,-10,-6,9,8,-7,-5,-6,-4,-9,-9,2,-8,2,2,1,-10,8,-9,-7,10,6,10,6,-10,6,6,7,-3,-5,6,6,4,3,5,-2,5,-4,1,9,-7,-3,5,6,-10,2,-4,5,6,-3,9,6,5,-8,-10,-8,-4,-7,-2,4,3,-1,8,-4,3,3,-3,5,-9,-4,10,3,4,2,4,-1,5,1,-7,6,-4,-3,10,-5,-1,-9,3,-6,3,-5,5,3,8,-1,-10,-7,10,1,8,-10,-5,1,-10,-4,-6,-1,3,-8,7,-7,8,9,-6,7,-6,-6,-5,-10,-5,-9,3,9,-3,10,8,-5,3,-4,6,-4,8,5,6,-10,2,-1,1,-3,-7,-4,-10,1,5,-4,-7,-5,-10,-10,-10,9,-10,-6,-8,-5,4,10,-10,-9,6,-8,-6,10,5,-4,10,6,-2,3,3,-7,-7,5,9,2,1,-8,3,1,-8,3,-6,8,-1,-2,-8,5,7,3,-6,-1,5,2,-1,-5,9,7,-9,5,-5,-6,7,10,-3,-10,-8,-6,4,10,-2,-4,-5,6,5,3,10,5,-3,1,-8,7,-4,6,2,1,2,-6,-6,2,8,3,9,5,-3,-9,7,-6,8,9,9,-7,7,2,8,5,3,5,-6,-3,-9,1,-8,-9,10,-8,9,-1,-9,-8,-9,6,-10,4,-3,6,-7,10,-5,-2,6,-3,-5,1,-7,4,1,10,1,9,8,6,4,3,-4,2,6,4,10,-9,4,5,-3,7,8,8,1,3,9,-5,-2,-2,2,2,-3,9,4,3,10,1,-7,-1,-4,-6,-2,-5,-7,3,-7,1,5,9,5,-7,3,-2,1,-1,-10,8,-5,4,-2,-1,-3,-8,2,8,-9,-4,-6,-5,10,10,10,-9,10,6,4,10,-8,6,6,-9,10,9,10,3,-9,-7,10,3,3,4,5,-3,-2,6,4,5,1,-9,8,-10,-4,6,-6,6,8,-5,1,9,8,3,3,3,2,6,6,8,4,4,3,-9,7,6,-3,-3,-8,-10,-6,4,7,-9,5,-2,3,1,5,7,-4,-2,-5,6,5,6,-1,9,-2,10,6,-8,-8,-5,9,-7,-6,-7,-7,-6,-1,2,-7,-9,-9,-6,-10,6,-3,3,4,4,10,-10,-6,-9,-3,6,-2,-6,-3,8,9,1,4,6,5,-9,-1,2,-7,4,-2,9,5,-6,10,-4,-7,-4,1,10,-8,-1,-10,-6,-3,-9,3,2,-5,-8,2,7,7,2,-9,-5,3,-8,8,10,-6,-8,-8,7,-9,-10,7,10,-9,5,5,7,-4,1,-8,-3,1,-3,2,-4,-5,1,4,-9,2,-2,-1,-4,-3,7,5,8,-3,-7,-1,5,-5,-1,6,1,1,6,10,9,7,7,-5,-10,-5,3,-5,-5,5,-9,-5,2,4,10,-9,9,4,-10,8,9,-6,-1,-3,3,-2,10,3,-3,-1,2,3,-8,7,8,-9,-1,9,7,-8,-1,-3,6,-4,-4,4,-7,-9,-4,6,-4,-8,1,6,-1,-8,-5,-3,8,3,-4,-8,-4,9,-3,-9,-9,1,6,8,4,-8,-9,-3,2,-9,-1,-9,-3,-4,-3,-3,-9,2,2,3,-8,-6,-3,5,2,-4,-10,9,-1,-2,-7,-7,-7,-4,-1,-6,7,7,8,-7,-6,5,-4,-3,-9,-9,8,-5,-9,6,3,10,-2,1], dtype = "int32")#candidate|8275|(2080,)|const|int32
bop_8276 = relay.floor_divide(const_8267.astype('float64'), relay.reshape(const_8275.astype('float64'), relay.shape_of(const_8267))) # shape=(2080,)
func_7430_call = mod.get_global_var('func_7430')
func_7431_call = mutated_mod.get_global_var('func_7431')
call_8291 = func_7430_call()
call_8292 = func_7430_call()
func_5794_call = mod.get_global_var('func_5794')
func_5795_call = mutated_mod.get_global_var('func_5795')
call_8296 = func_5794_call()
call_8297 = func_5794_call()
output = relay.Tuple([call_8221,call_8223,call_8239,var_8240,call_8266,call_8271,const_8272,var_8273,bop_8276,call_8291,call_8296,])
output2 = relay.Tuple([call_8222,call_8224,call_8241,var_8240,call_8268,call_8274,const_8272,var_8273,bop_8276,call_8292,call_8297,])
func_8301 = relay.Function([var_8240,var_8273,], output)
mod['func_8301'] = func_8301
mod = relay.transform.InferType()(mod)
mutated_mod['func_8301'] = func_8301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8301_call = mutated_mod.get_global_var('func_8301')
var_8303 = relay.var("var_8303", dtype = "float32", shape = (78,))#candidate|8303|(78,)|var|float32
var_8304 = relay.var("var_8304", dtype = "float32", shape = (4, 168))#candidate|8304|(4, 168)|var|float32
call_8302 = func_8301_call(var_8303,var_8304,)
output = call_8302
func_8305 = relay.Function([var_8303,var_8304,], output)
mutated_mod['func_8305'] = func_8305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3494_call = mod.get_global_var('func_3494')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_8319 = relay.TupleGetItem(func_3494_call(), 0)
call_8320 = relay.TupleGetItem(func_3495_call(), 0)
output = call_8319
output2 = call_8320
func_8327 = relay.Function([], output)
mod['func_8327'] = func_8327
mod = relay.transform.InferType()(mod)
mutated_mod['func_8327'] = func_8327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8327_call = mutated_mod.get_global_var('func_8327')
call_8328 = func_8327_call()
output = call_8328
func_8329 = relay.Function([], output)
mutated_mod['func_8329'] = func_8329
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8369 = relay.var("var_8369", dtype = "int32", shape = (5, 14, 6))#candidate|8369|(5, 14, 6)|var|int32
var_8370 = relay.var("var_8370", dtype = "int32", shape = (5, 14, 6))#candidate|8370|(5, 14, 6)|var|int32
bop_8371 = relay.right_shift(var_8369.astype('int32'), relay.reshape(var_8370.astype('int32'), relay.shape_of(var_8369))) # shape=(5, 14, 6)
func_7482_call = mod.get_global_var('func_7482')
func_7483_call = mutated_mod.get_global_var('func_7483')
call_8376 = func_7482_call()
call_8377 = func_7482_call()
bop_8383 = relay.bitwise_or(var_8369.astype('int16'), relay.reshape(bop_8371.astype('int16'), relay.shape_of(var_8369))) # shape=(5, 14, 6)
output = relay.Tuple([call_8376,bop_8383,])
output2 = relay.Tuple([call_8377,bop_8383,])
func_8387 = relay.Function([var_8369,var_8370,], output)
mod['func_8387'] = func_8387
mod = relay.transform.InferType()(mod)
var_8388 = relay.var("var_8388", dtype = "int32", shape = (5, 14, 6))#candidate|8388|(5, 14, 6)|var|int32
var_8389 = relay.var("var_8389", dtype = "int32", shape = (5, 14, 6))#candidate|8389|(5, 14, 6)|var|int32
output = func_8387(var_8388,var_8389,)
func_8390 = relay.Function([var_8388,var_8389,], output)
mutated_mod['func_8390'] = func_8390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5661_call = mod.get_global_var('func_5661')
func_5662_call = mutated_mod.get_global_var('func_5662')
call_8477 = func_5661_call()
call_8478 = func_5661_call()
output = relay.Tuple([call_8477,])
output2 = relay.Tuple([call_8478,])
func_8489 = relay.Function([], output)
mod['func_8489'] = func_8489
mod = relay.transform.InferType()(mod)
mutated_mod['func_8489'] = func_8489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8489_call = mutated_mod.get_global_var('func_8489')
call_8490 = func_8489_call()
output = call_8490
func_8491 = relay.Function([], output)
mutated_mod['func_8491'] = func_8491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8209_call = mod.get_global_var('func_8209')
func_8210_call = mutated_mod.get_global_var('func_8210')
call_8492 = func_8209_call()
call_8493 = func_8209_call()
func_7964_call = mod.get_global_var('func_7964')
func_7965_call = mutated_mod.get_global_var('func_7965')
call_8495 = relay.TupleGetItem(func_7964_call(), 0)
call_8496 = relay.TupleGetItem(func_7965_call(), 0)
func_5591_call = mod.get_global_var('func_5591')
func_5594_call = mutated_mod.get_global_var('func_5594')
const_8523 = relay.const(-4, dtype = "int32")#candidate|8523|()|const|int32
const_8524 = relay.const([[9,3,-10,-2,-2,-6,-8,-2,4,6,-8,-1,-6,-3,-8,8,-6,3,1,9,-8,2,-9,-8,-10,2,1,-8,-4,1,-3,-9,-1,-5,8,10,6,-3,8,-1,-8,-6,-8,3,-5,-4,-7,-7,7,-3,-7,-2,6,-9,7,-3,-5,-3,1,-7,-2,7,5,-10,-8,-7,7,-8,-3,7,1,6,-7,10,-4,-6,-9,-8,9,-7,2,-1,-3,3,-10,-7,-8,-6,3,5,-3,6,8,-6,-3,-5,9,5,7,-8,-6,-7,-2,-1,10,-10,1,-7,-1,5,8,-6,-5,8,9,-2,-5,-9,-3,9,8,-8,-7,-7,8,10,-3,-6,9,2,-2,-3,3,-5,4,-2,5,-3,-3,-1,-6,10,9,-8,9,-6,-6,9,1,-6,8,-9,-7,5,7,-2,7,10,7,-8,-10,7,-3,5,-2,3,10,3,6,-7,6,-6,1,-2,-6,5,5,1,-10,-6,-7,4,-10,-5,7,-1,-1,-7,-3,-1,7,4,-7,2,1,-2,4,8,-3,2,6,2,-10,-10,-7,-3,-6,-8,4,-2,7,-5,-10,-7,-7,2,4,-9,-4,-9,-1,-9,1,-1,7,-10,-7,-5,10,-9,-1,-10,-4,9,-9,1,3,6,7,-9,-1,1,5,-7,6,-2,7,-3,-1,1,3,8,3,-9,1,7,10,2,-1,-10,4,-7,-4,-2,-3,4,6,-9,10,-1,10,5,-5,-5,7,-7,-9,-2,3,9,8,9,9,-4,9,-10,-5,-7,1,7,9,-8,8,-1,-5,-6,-8,-10,-4,8,2,-2,-2,-5,3,2,8,8,10,-7,-4,10,10,10,4,9,3,-1,2,-9,-2,5,-1,-7,4,5,-9,-9,3,-4,5,-3,7,-5,-3,-4,-3,4,1,4,5,3,-4,-4,-10,-6,-4,-3,-4,-9,-3,2,9,-10,9,-6,-5,10,-1,-8,3,-6,-2,7,9,5,-9,8,4,10,5,-10,5,10,6,-7,-10,5,5,-10,-10,-6,1,-6,-5,-10,4,-9,-2,5,4,7,8,-8,8,7,2,-6,9,-9,10,-3,9,-3,2,1,3,-2,1,-6,-9,-6,8,7,8,2,-5,-2,8,7,5,-5,-5,-1,-8,-7,10,9,7,-3,-2,-3]], dtype = "int32")#candidate|8524|(1, 432)|const|int32
call_8522 = func_5591_call(relay.reshape(const_8523.astype('int32'), []), relay.reshape(const_8524.astype('int32'), [9, 16, 3]), )
call_8525 = func_5591_call(relay.reshape(const_8523.astype('int32'), []), relay.reshape(const_8524.astype('int32'), [9, 16, 3]), )
func_3163_call = mod.get_global_var('func_3163')
func_3166_call = mutated_mod.get_global_var('func_3166')
var_8527 = relay.var("var_8527", dtype = "float64", shape = (780,))#candidate|8527|(780,)|var|float64
call_8526 = relay.TupleGetItem(func_3163_call(relay.reshape(var_8527.astype('float64'), [15, 13, 4])), 0)
call_8528 = relay.TupleGetItem(func_3166_call(relay.reshape(var_8527.astype('float64'), [15, 13, 4])), 0)
uop_8531 = relay.log2(var_8527.astype('float32')) # shape=(780,)
func_6155_call = mod.get_global_var('func_6155')
func_6160_call = mutated_mod.get_global_var('func_6160')
var_8535 = relay.var("var_8535", dtype = "float64", shape = (90, 2))#candidate|8535|(90, 2)|var|float64
const_8536 = relay.const([-0.543157,8.589290,9.350050,-4.525948,4.923845,-9.750706,-4.153100,-2.475560,-4.375496,5.270815,7.262403,2.054911,-0.850812,-8.413142,9.117493,-0.209085,8.877354,5.243213,-0.494688,-6.581870,-6.852838,7.524129,8.335237,5.492081,9.231007,7.971883,-4.019010,-5.914167,9.756465,-1.201280,-3.854640,9.581161,-3.687091,3.792422,-9.239335,-5.380869,-6.719652,0.418028,-6.408022,7.915758,3.087556,-3.177195,4.402102,-6.283411,3.918516,0.080592,8.539073,1.399913,-5.255887,-7.177324,4.550020,8.086338,1.043286,3.002795,0.261687,6.428577,9.786050,-7.242610,-7.639943,4.134053,-0.468100,8.034561,1.372890,3.455110,8.982099,-8.041741,5.859491,5.652410,-8.254182,-5.680790,3.843651,-0.935993,7.238630,-6.266027,-5.581053,-2.921239,-1.224343,-6.263996,-9.059043,8.328707,-0.089685,-6.434486,-9.400148,-4.866698,-9.332808,-7.123364,-5.439981,-3.656182,-5.383696,4.140693,7.159474,9.050723,5.568248,9.270532,5.994408,-8.316214,0.884013,9.048099,-1.708460,-8.199319,-6.392630,-0.212573,-1.943428,7.267379,6.600065,3.555528,-1.245144,2.062019,-4.340572,3.644633,8.212345,5.629058,3.327592,-9.445485,-0.473003,-7.073630,-6.907633,0.899265,-2.163238,6.102355,1.172974,-1.967156,3.318728,-6.647103,-9.422205,7.075851,2.557125,-9.338880,-7.991246,-6.959640,-0.262635,5.789359,7.188236,0.955061,7.842088,-2.764470,2.897970,-9.854733,-5.096052,-8.153045,5.984238,-3.653334,5.813445,6.789641,-1.056086,-1.490397,-4.574889,2.399119,5.808125,8.779424,1.696337,5.115098,-7.507943,2.054732,-5.333161,-7.991052,9.648854,-8.389973,9.999303,-5.598975,3.911712,-2.103903,1.020102,-9.525770,-5.613586,5.524153,5.041129,-8.912922,3.563034,-8.582576,-8.323376,5.737697,0.187069,-0.340711,3.125592,-8.708979,3.056885,-1.307021,-5.789339,0.048103,1.585839,-1.269993,-8.984318,-2.962141,-6.449620,6.911505,1.192134,0.883247,7.961344,-4.863384,-9.462756,6.246995,0.620177,-3.894271,-2.833767,7.729888,2.775326,-6.717006,-6.921714,4.044518,1.170477,0.713331,7.473314,-9.249171,-6.997367,2.352337,4.659443,5.567723,-0.990080,0.389385,6.379571,-3.591246,-1.936208,-6.123568,-7.952935,-9.921530,6.453403,-1.199480,-4.918475,0.889472,8.014242,5.177757,0.550005,-4.622474,9.306164,0.781169,-0.985453,5.812694,-0.597213,8.424912,8.078307,0.350162,-4.389451,5.453009,-1.766966,8.457980,3.800392,-7.033444,4.493140,-3.868767,-5.511204,-5.651463,-2.265860,-5.650985,8.286215,4.622460,5.198731,2.717801,-0.259588,-2.597375,2.260633,9.018295,-6.207981,-1.756505,-7.935907,-4.196922,-2.529304,9.963423,-1.033501,0.593096,1.341995,-2.804011,0.743256,-7.898449,-0.929127,-7.874013,0.145884,-0.072317,-2.310855,9.050360,-3.303373,7.391545,-8.885599,7.454411,-9.181970,1.041947,0.958536,-9.975506,7.330989,-7.008162,9.021936,-8.544248,-5.971205,3.485323,2.985835,8.662404,-7.345580,-6.300686,9.871692,-8.698252,-9.663167,-1.564529,6.739871,9.562730,1.684686,0.489329,-9.468853,3.918341,-8.901835,0.270354,-3.828215,1.235760,-3.805477,0.096583,0.556458,4.281461,9.600276,4.473957,7.320381,-0.807263,8.158690,3.912515,1.263218,-4.792790,3.400644,4.643839,6.443364,2.096458,-8.574712,7.859030,-6.920729,1.499111,-0.059993,-9.727600,0.017189,3.375988,-5.295527,7.759811,3.859948,-2.231436,9.012021,-4.689690,-8.424223,-5.189175,1.963255,2.640498,1.323573,6.554972,0.311804,9.628679,-2.662211,9.935174,9.048001,-6.666879,1.522313,-4.779119,-7.637160,5.943559,-6.702628,3.721327,2.578334,4.391216,-0.737598,9.437075,-8.137275,-2.306239,5.645689,-7.271344,-8.818744,6.079936,2.589692,1.685602,2.337760,-8.588369,-5.849212,3.685123,-4.054787,-8.053432,2.205050,0.704703,-9.354790,0.608880,3.405527,8.544589,-8.936389,6.505433,-6.013575,-7.089847,7.097292,5.367896,-4.857876,-3.339009,7.438567,3.010201,-0.158118,-7.789344,4.428586,-1.365315,1.245703,-9.031947,-4.799196,5.464389,-3.874344,-2.173008,4.917834,-0.941754,-9.110457,-3.094123,7.772613,7.744349,-5.422089,8.512438,5.373041,1.921704,5.632819,-3.220974,5.903566,-7.163261,3.363040,-4.486043,-9.611444,8.417117,2.806913,-3.219058,5.170539,-8.208991,2.855803,7.826167,0.706340,-3.986578,4.642587,-1.723689,-3.172672,-2.804719,-1.818268,-1.355233,1.178457,7.707078,-2.746463,-5.345978,0.999081,8.971024,-4.596160,3.371008,8.717420,-6.731106,6.889799,-6.422633,0.201169,8.233669,2.778124,-2.716873,2.580313,0.241044,0.139251,-7.087401,-4.377636,1.160823,-1.342373,-4.713589,-8.410567,-9.297497,7.848590,-6.274826,-3.832621,-7.669820,9.821631,-8.881118,0.132183,-0.402739,0.367940,7.148639,2.875102,-3.866841,-0.262981,7.835979,3.725275,-6.704229,-6.713460,1.117877,-6.284066,-2.112649,-7.357666,2.465131,-0.200238,-4.006024,-6.954722,7.068330,9.459995,0.526646,-9.108333,-8.677052,4.747701,8.194383,0.493538,-1.406534,-1.461071,-9.496096,4.262849,-7.259747,5.321638,-3.157585,7.600181,4.616231,8.525021,-0.639685,-9.786371,-6.376631,3.344720,7.473420,-6.157388,-6.603611,1.968288,-4.998387,-1.892546,-0.717931,5.393496,1.446911,0.737058,4.925310,-6.470083,-9.497914,9.134823,-9.225200,-4.352414,0.828064,1.918724,-5.672905,-5.439903,0.126575,4.291952,8.847511,-4.655963,8.378996,6.290448,3.117173,-3.742278,-0.277834,-2.691751,-2.643613,9.617826,2.462080,-8.274243,2.934095,-3.223337,8.391985,-7.201565,7.782447,-2.473238,-1.212271,1.618558,0.601713,-3.040207,4.976225,-0.186723,4.546329,-8.626234,-2.838680,-4.094596,2.167853,-8.794062,0.318908,4.781181,-4.900380,6.179809,-6.465505,-9.001363,4.100198,7.258971,3.905480,-1.758999,6.958184,8.976293,5.926105,7.566816,9.206811,-1.906692,3.613261,4.770889,7.660187,-2.810344,7.702998,7.726642,6.585706,-7.250921,-8.111185,-2.547572,0.481078,6.368337,3.453294,3.539374,-0.845382,5.047752,-4.479108,0.406262,-4.023610,0.831603,-8.185041,-6.206550,1.721653,-5.961911,3.591427,-9.089600,7.021395,-5.987058,-6.740431,3.396850,8.710063,-2.646200,7.757703,4.745356,-0.757602,9.916594,0.784948,-2.125354,-4.260109,-5.428712,3.405243,-4.655166,-5.046405,-0.363920,5.288440,5.774403,-7.283730,-6.545463,-2.713276,6.491858,-0.203765,4.617613,-4.682473,-9.193317,4.873773,2.456967,1.085449,7.631997,-7.874709,9.951310,1.156064,-6.577573,-7.664907,0.114222,-9.661091,0.742057,0.845821,-0.612810,6.374528,1.721573,3.060759,5.487032,-9.463638,-7.436914,-6.372633,-2.926812,-4.044145,-0.174904,9.654327,0.139783,-5.502436,-7.396571,-6.147413,-3.479112,-4.516615,-1.868700,-3.386106,-6.086003,-2.737332,2.906655,-0.385982,-2.105576,-3.845344,-4.101439,-5.583762,8.637451,-8.331059,-3.599706,-2.299742,-0.507788,-1.077692,-9.367291,7.696270,-4.485695,4.123171,-2.183422,9.812261,-7.031401,4.083608,-0.251995,9.448672,6.885525,6.876388,-1.631531,-3.478059,-6.123005,5.373779,9.909766,-1.348839,-2.257071,4.239528,9.409273,0.717276,-9.247591,-4.007283,-1.517045,-9.727441,-9.219685,3.490887,9.619660,9.034521,6.797171,-1.526780,5.785772,-9.394194,-8.919404,1.216321,-0.289995,4.452732,6.765259,5.794077,8.704728,2.010853,-0.068297,-8.995611,-3.719531,7.915913,-5.784531,-0.119775,-6.938895,5.244071,-1.549024,5.687965,5.673047,5.300332,-9.485510,-4.789700,-4.747144,2.120284,6.501152,-6.465763,-1.442445,4.777502,4.040204,-0.555738,-9.046447,-1.514441,-6.668244,6.018344,0.571615,9.500482,-3.636368,1.874917,1.827286,6.528688,6.004466,9.385720,2.933750,-0.276096,-4.349659,7.483535,4.431510,-8.133739,3.953030,0.154280,-6.601978,-4.925532,2.267742,-0.891582,5.479060,5.666109,3.116459,-3.347081,5.490800,-7.118522,8.753910,-3.099716,1.900353,4.889032,-8.490455,4.802149,1.257662,1.921827,-2.112147,2.055110,7.200367,-7.878527,0.442317,-8.100732,2.633846,1.704338,-5.959924,0.684388,-6.567254,-6.708103,-9.654702,6.578516,3.367534,-6.307733,-0.629025,7.349947,-0.178977,1.375400,-1.512146,-5.341739,-1.473088,7.090894,3.299961,-3.435720,6.242662,-5.143060,9.908625,9.366365,8.393661,-9.691706,8.058607,2.014045,9.667201,-9.493279,-1.322159,3.617189,-4.454135,7.828938,-7.635915,7.727136,-7.930367,5.092529,8.553198,3.893382,-6.994235,7.875825,2.249362,8.636687,5.064686,2.647168,-8.904711,-3.026160,5.465317,-5.394354,6.752665,3.169928,1.138059,3.088818,4.758386,5.080922,-8.104233,1.375272,-1.394155,-1.756489,-5.707867,9.571078,9.363478,5.794030,-4.830806,-8.190787,0.672538,4.878910,-6.747238,-6.624550,7.680065,8.764521,-2.292002,-8.916831,1.052189,-7.978493,-6.275883,-4.193152,8.522390,-3.650376,1.613623,5.044329,-3.685410,4.985776,-3.151147,-7.059910,-4.502625,4.175473,-9.030205,5.106768,2.353646,-6.949505,0.912873,4.302985,-9.341146,-2.713064,-4.792744,8.421596,7.574501,7.650197,-9.318635,2.623230,9.414886,3.351174,-8.342542,3.284864,-4.093152,9.555258,-1.474185,-3.023671,-7.092416,-8.019921,-6.753604,5.485508,-9.634659,6.159429,-4.192186,3.643101,-0.712901,-8.417272,9.941539,-2.254459,1.688209,-2.012622,-8.542385,-9.895257,3.294195,5.094729,-7.824085,9.576857,2.847047,6.868090,-3.920808,8.129751,3.255535,2.398611,5.930815,-8.106120,-0.343168,-9.433297,9.462457,0.990640,1.473209,7.380916,-9.851322,-4.349022,9.094686,5.676555,1.330038,-9.514116,-5.201027,5.547506,6.098551,-5.598709,-3.062816,-8.341703,-0.531916,6.910442,-6.776697,6.294822,8.286701,-4.720295,-7.903338,-9.450072,-9.058874,-7.029825,2.013725,-5.220243,-6.934103,-5.372133,6.141834,-1.971182,-4.986249,5.090639,-2.920523,9.308941,0.017421,3.173983,-4.008895,1.075846,-2.702267,0.026843,0.462325,1.004367,8.017088,9.022296,-7.880520,-0.982860,7.808434,-0.406323,-4.131664,4.363761,1.477523,0.238558,1.891395,3.037235,4.176539,5.377319,-4.280094,-5.224820,-8.068603,0.639344,5.403590,8.272383,9.665117,6.777994,-9.300059,4.806809,3.413664,0.049915,4.434443,-1.824158,1.809009,-3.218664,-9.980171,7.730706,-6.629105,-5.220386,-7.376831,-6.016632,5.725719,-3.689244,-5.333674,2.654156,-8.894370,-0.333876,9.765400,-6.537540,-0.355581,2.098231,0.327617,3.097484,7.605224,-3.535208,-5.659301,6.627511,-4.253552,8.291984,-9.729065,-1.488028,3.712620,-2.293208,5.560339,2.195371,2.240993,6.859619,-6.918933,-2.997452,-0.248858,3.844298,8.007366,-8.210623,-6.125072,8.190272,-7.908276,-9.184464,-1.993658,6.216342,6.141342,-0.081314,1.390931,-2.361705,-0.344310,4.005551,1.925157,2.999644,7.725349,-1.121942,9.652315,-1.862618,4.552824,2.981381,-0.802713,9.769342,-6.601760,-7.479787,6.654783,7.792986,-6.289497,-9.604138,2.194045,-6.967603,1.578916,5.688257,-8.564790,4.886443,-6.087468,-6.992319,7.903880,-2.624975,1.069854,3.850887,6.180261,-5.936261,4.321871,1.682217,6.847478,8.694897,-2.875663,8.484115,3.436185,-3.641659,-5.658355,-8.685657,6.714573,2.326947,9.595910,2.502154,7.198043,-4.397287,0.133019,9.506877,-3.152094,8.879766,6.396368,1.363555,3.054601,-7.003777,-8.567439,6.164654,-0.558092,-1.143725,7.780853,-2.587156,-1.563526,5.348720,5.357394,-2.141688,-2.349496,-6.411385,-1.251646,-9.449918,-4.207509,7.865865,5.282524,-5.805990,7.081867,3.220022,-4.413978,3.531875,9.800289,-3.816181,-5.508838,-3.429906,8.442163,-4.005243,-1.435324,5.234516,-0.226247,-8.959219,-9.665287,4.855992,9.925344,-1.985064,-2.575823,-1.499936,1.411350,-1.769189,5.115912,-3.180976,-4.960768,4.415014,7.413505,4.874837,2.286958,9.013328,-7.549325,-7.007620,2.589719,3.014076,-2.637174,6.832167,3.238859,0.021357,-8.404292,7.637627,8.289874,-1.961742,9.885900,-0.577330,9.668584,-5.657117,-6.883584,7.118447,-5.203184,1.223512,8.337048,-1.248278,4.592501,9.419662,7.541249,-0.029942,1.873948,4.174609,-3.086557,-3.672185,6.857546,6.724862,3.500318,0.008086,0.843166,-9.522374,-5.746368,1.551794,0.167071,9.585929,7.052397,1.761719,-6.625924,-9.073950,-5.717623,-8.545375,0.469423,4.746417,0.062558,-4.482391,9.357749,0.143027,4.723570,8.735800,3.140465,4.094703,-4.760648,-6.515709,0.826444,7.906231,9.245394,1.193949,0.613648,4.590204,-3.773784,-3.512161,-3.718949,3.769175,-3.772046,-6.844596,8.917848,4.663322,-8.195679,1.959818,-7.465711,8.659626,-3.064427,-7.337297,9.332455,-2.360953,-4.377410,-0.687918,-7.769752,-9.110907,-0.019808,0.456268,2.310727,-8.737756,-8.703671,1.801778,-0.197348,-0.431369,-6.510554,3.785720,-7.439773,2.594292,-9.017514,9.321004,3.562166,7.940979,2.850260,3.570712,7.063538,-7.190440,2.912411,-9.748173,0.260829,8.213993,-2.914821,8.639707,-1.713904,9.176884,-8.438932,-4.078278,-5.499477,-1.437579,-1.052130,-3.097888,9.971310,4.547795,1.625363,-2.030426,-1.829643,-5.611486,-3.160690,9.947431,-5.319426,5.864686,1.333459,-7.628502,-6.822056,0.785778,-5.954836,-1.279622,9.199219,4.654226,-9.173572,0.978957,3.688692,5.685251,3.757918,-9.916255,8.260020,8.583360,4.037228,-4.265295,-0.098332,-0.183013,-9.452925,-5.567940,-8.735713,-0.926432,7.505508,1.640380,9.899945,6.204848,9.797126,-5.611994,0.335704,-0.160289,5.180606,-4.587471,-1.134725,-9.808385,-9.836838,-5.923797,-9.321946,1.862902,-6.246015,-9.510183,2.497880,5.145154,-0.193200,0.057108,8.542442,-2.189194,-4.313576,-4.262959,-7.214092,2.849295,2.599137,4.071236,-4.644918,8.733499,-8.444941,-6.451570,8.118754,-9.415033,0.131617,-3.879993,8.335616,6.402825,9.741984,3.056724,9.026263,-2.841416,-7.469105,-6.404319,-1.192567,-3.748560,-3.183375,-1.142746,-1.582402,1.622486,-5.429279,-8.490472,-6.718055,-1.828915,2.697860,4.209417,-8.380412,2.704617,-6.937832,-7.165266,3.064282,1.000936,3.370946,-7.315248,-5.417669,-7.651782,1.782423,4.680323,-8.472292,4.293924,4.061934,-2.456646,1.595367,-8.469565,-3.177440,-6.314067,5.489431,3.465031,-5.131690,-7.747576,7.755144,6.367131,4.259666,-3.194631,-8.330925,5.054383,8.117045,-4.247699,5.272306,-7.443263,7.446009,-1.066850,-8.494438,0.038674,6.220460,7.974833,-7.833281,7.908046,4.094565,-9.098786,6.975482,2.542748,1.499512,7.254791,8.068503,-9.069713,0.452824,9.869351,-9.351939,-0.144280,5.886760,-9.638236,-9.477681,3.734494,-9.320717,-2.931604,-4.409187,-4.075381,1.384455,-0.244015,6.756530,8.319974,7.245561,-0.225201,4.827107,1.805625,-6.611554,9.202722,0.924859,7.196171,-5.561478,-0.069874,1.137839,-0.373954,-4.311123,2.653881,-1.369586,-6.394113,-3.535385,5.643000,2.474331,-8.115329,5.222394,7.845784,-2.547801,-7.418858,-2.744064,0.676788,7.948625,-2.608228,9.528855,4.773374,-0.267138,5.465025,-1.888385,-7.509361,-4.709003,9.693347,-4.593680,-5.753879,8.371354,1.996999,7.822830,-1.970360,5.027582,9.146517,-3.983034,-0.331344,-3.301909,7.334193,-4.611960,0.518200,-7.002990,-7.439878,0.986746,-1.408974,4.099955,-7.684406,-4.718502,8.181174,1.662363,-4.926510,6.274417,-0.290725,9.118315,-7.429142,9.604390,-5.863097,7.957100,3.765587,7.584160,5.768757,9.442648,-1.522059,-1.856918,1.242203,-2.272577,-8.101911,-1.699724,7.868662,-2.452528,-7.290933,7.252121,-4.317485,8.144514,8.295939,7.968888,-3.007119,-0.678262,-4.244714,-9.264001,-0.617738,-2.963983,2.873250,4.702677,-6.688682,-4.906525,-8.813352,0.216491,-3.240369,-9.768654,1.137913,6.198569,-6.968114,-0.604908,-4.339789,1.224626,0.412463,8.787634,-6.976869,-8.218958,0.681111,3.158560,-8.865003,-2.240747,-0.269461,2.714227,-2.692284,2.783870,-3.156864,0.333895,-6.373757,-3.830757,-6.192731,-9.781040,-3.965289,4.321105,-2.428414,1.583345,1.415379,8.909000,-1.383007,-5.589198,5.501451,-3.636675,5.915073,4.479386,-0.734367,-0.563252,4.913565,7.450165,6.547289,2.599473,-5.273959,-1.251142,-2.928588,1.372926,-9.259455,9.206863,7.555656,-7.620984,-7.682383], dtype = "float32")#candidate|8536|(1568,)|const|float32
call_8534 = relay.TupleGetItem(func_6155_call(relay.reshape(const_8523.astype('float64'), []), relay.reshape(var_8535.astype('float64'), [180,]), relay.reshape(const_8536.astype('float32'), [1568,]), ), 7)
call_8537 = relay.TupleGetItem(func_6160_call(relay.reshape(const_8523.astype('float64'), []), relay.reshape(var_8535.astype('float64'), [180,]), relay.reshape(const_8536.astype('float32'), [1568,]), ), 7)
output = relay.Tuple([call_8492,call_8495,call_8522,const_8523,const_8524,call_8526,uop_8531,call_8534,var_8535,const_8536,])
output2 = relay.Tuple([call_8493,call_8496,call_8525,const_8523,const_8524,call_8528,uop_8531,call_8537,var_8535,const_8536,])
func_8538 = relay.Function([var_8527,var_8535,], output)
mod['func_8538'] = func_8538
mod = relay.transform.InferType()(mod)
mutated_mod['func_8538'] = func_8538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8538_call = mutated_mod.get_global_var('func_8538')
var_8540 = relay.var("var_8540", dtype = "float64", shape = (780,))#candidate|8540|(780,)|var|float64
var_8541 = relay.var("var_8541", dtype = "float64", shape = (90, 2))#candidate|8541|(90, 2)|var|float64
call_8539 = func_8538_call(var_8540,var_8541,)
output = call_8539
func_8542 = relay.Function([var_8540,var_8541,], output)
mutated_mod['func_8542'] = func_8542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4491_call = mod.get_global_var('func_4491')
func_4492_call = mutated_mod.get_global_var('func_4492')
call_8549 = relay.TupleGetItem(func_4491_call(), 0)
call_8550 = relay.TupleGetItem(func_4492_call(), 0)
func_5804_call = mod.get_global_var('func_5804')
func_5806_call = mutated_mod.get_global_var('func_5806')
call_8554 = relay.TupleGetItem(func_5804_call(), 0)
call_8555 = relay.TupleGetItem(func_5806_call(), 0)
output = relay.Tuple([call_8549,call_8554,])
output2 = relay.Tuple([call_8550,call_8555,])
func_8556 = relay.Function([], output)
mod['func_8556'] = func_8556
mod = relay.transform.InferType()(mod)
mutated_mod['func_8556'] = func_8556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8556_call = mutated_mod.get_global_var('func_8556')
call_8557 = func_8556_call()
output = call_8557
func_8558 = relay.Function([], output)
mutated_mod['func_8558'] = func_8558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7896_call = mod.get_global_var('func_7896')
func_7897_call = mutated_mod.get_global_var('func_7897')
call_8566 = func_7896_call()
call_8567 = func_7896_call()
output = call_8566
output2 = call_8567
func_8575 = relay.Function([], output)
mod['func_8575'] = func_8575
mod = relay.transform.InferType()(mod)
output = func_8575()
func_8576 = relay.Function([], output)
mutated_mod['func_8576'] = func_8576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7583_call = mod.get_global_var('func_7583')
func_7585_call = mutated_mod.get_global_var('func_7585')
call_8577 = relay.TupleGetItem(func_7583_call(), 1)
call_8578 = relay.TupleGetItem(func_7585_call(), 1)
output = relay.Tuple([call_8577,])
output2 = relay.Tuple([call_8578,])
func_8589 = relay.Function([], output)
mod['func_8589'] = func_8589
mod = relay.transform.InferType()(mod)
output = func_8589()
func_8590 = relay.Function([], output)
mutated_mod['func_8590'] = func_8590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7028_call = mod.get_global_var('func_7028')
func_7029_call = mutated_mod.get_global_var('func_7029')
call_8616 = relay.TupleGetItem(func_7028_call(), 0)
call_8617 = relay.TupleGetItem(func_7029_call(), 0)
func_8042_call = mod.get_global_var('func_8042')
func_8044_call = mutated_mod.get_global_var('func_8044')
call_8625 = relay.TupleGetItem(func_8042_call(relay.reshape(call_8616.astype('float64'), [16, 14, 8])), 0)
call_8626 = relay.TupleGetItem(func_8044_call(relay.reshape(call_8616.astype('float64'), [16, 14, 8])), 0)
func_5992_call = mod.get_global_var('func_5992')
func_5995_call = mutated_mod.get_global_var('func_5995')
var_8628 = relay.var("var_8628", dtype = "float64", shape = (1800,))#candidate|8628|(1800,)|var|float64
call_8627 = func_5992_call(relay.reshape(var_8628.astype('float64'), [1800,]))
call_8629 = func_5992_call(relay.reshape(var_8628.astype('float64'), [1800,]))
func_7583_call = mod.get_global_var('func_7583')
func_7585_call = mutated_mod.get_global_var('func_7585')
call_8630 = relay.TupleGetItem(func_7583_call(), 0)
call_8631 = relay.TupleGetItem(func_7585_call(), 0)
output = relay.Tuple([call_8616,call_8625,call_8627,var_8628,call_8630,])
output2 = relay.Tuple([call_8617,call_8626,call_8629,var_8628,call_8631,])
func_8645 = relay.Function([var_8628,], output)
mod['func_8645'] = func_8645
mod = relay.transform.InferType()(mod)
var_8646 = relay.var("var_8646", dtype = "float64", shape = (1800,))#candidate|8646|(1800,)|var|float64
output = func_8645(var_8646)
func_8647 = relay.Function([var_8646], output)
mutated_mod['func_8647'] = func_8647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8699 = relay.var("var_8699", dtype = "float64", shape = (11, 12, 10))#candidate|8699|(11, 12, 10)|var|float64
uop_8700 = relay.tan(var_8699.astype('float64')) # shape=(11, 12, 10)
output = relay.Tuple([uop_8700,])
output2 = relay.Tuple([uop_8700,])
func_8704 = relay.Function([var_8699,], output)
mod['func_8704'] = func_8704
mod = relay.transform.InferType()(mod)
mutated_mod['func_8704'] = func_8704
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8705 = relay.var("var_8705", dtype = "float64", shape = (11, 12, 10))#candidate|8705|(11, 12, 10)|var|float64
func_8704_call = mutated_mod.get_global_var('func_8704')
call_8706 = func_8704_call(var_8705)
output = call_8706
func_8707 = relay.Function([var_8705], output)
mutated_mod['func_8707'] = func_8707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7666_call = mod.get_global_var('func_7666')
func_7667_call = mutated_mod.get_global_var('func_7667')
call_8723 = func_7666_call()
call_8724 = func_7666_call()
output = relay.Tuple([call_8723,])
output2 = relay.Tuple([call_8724,])
func_8733 = relay.Function([], output)
mod['func_8733'] = func_8733
mod = relay.transform.InferType()(mod)
output = func_8733()
func_8734 = relay.Function([], output)
mutated_mod['func_8734'] = func_8734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4763_call = mod.get_global_var('func_4763')
func_4765_call = mutated_mod.get_global_var('func_4765')
call_8797 = relay.TupleGetItem(func_4763_call(), 0)
call_8798 = relay.TupleGetItem(func_4765_call(), 0)
func_8387_call = mod.get_global_var('func_8387')
func_8390_call = mutated_mod.get_global_var('func_8390')
const_8808 = relay.const([-3,8,7,8,6,-4,-10,-8,2,-4,2,4,-5,4,-6,-3,-4,-8,-8,-2,4,-3,-4,3,-1,-3,-6,2,7,7,1,-4,-8,7,-1,-10,4,1,4,-4,-3,-1,5,2,-9,7,6,6,-6,-2,3,-3,-7,7,-10,-10,9,4,3,7,-3,-4,6,7,-7,10,-2,9,1,3,-6,-4,2,-10,-4,-9,-9,-9,4,-10,4,-1,5,8,-3,-9,3,5,-3,-2,-1,-5,-3,7,2,-8,-7,5,-8,-10,-3,1,4,3,10,4,6,2,-6,9,-6,6,-6,7,-3,5,8,4,-2,7,4,-5,-3,-2,-8,8,-7,-9,-5,-9,5,-6,9,-3,9,-5,3,5,-7,-6,-9,-8,9,1,6,-2,-3,-6,-8,-3,10,2,-8,-1,6,-9,-2,-3,-8,4,-6,7,-7,-4,-1,-4,7,-4,4,9,3,-7,6,-7,-8,-8,-1,8,5,1,-10,-7,-2,1,6,-8,-7,5,8,-6,7,3,-9,4,-2,10,-3,-7,7,10,8,-4,6,-6,5,1,8,-10,4,8,10,-7,4,7,-4,7,-7,-4,-2,7,6,7,-3,-8,-10,2,6,-4,-3,-4,-8,-8,-3,9,-5,-1,6,5,-7,-6,-1,9,-8,-10,4,10,6,-6,-10,-4,-3,8,-5,9,-7,-10,-5,-8,4,4,5,-7,-1,9,1,-8,10,-4,-10,8,-1,-8,7,-9,-5,8,-8,10,-9,-1,-4,-5,-7,-1,5,6,6,-2,9,6,4,-3,-9,2,-4,10,-3,2,3,9,-3,-4,9,3,-7,2,-5,4,8,3,2,-9,8,7,7,9,-2,-6,-1,9,-2,-9,-5,-10,-10,4,8,-9,5,8,-3,-9,-2,-8,-7,-10,7,3,-2,-5,-10,6,-2,-2,2,-8,-9,-2,3,-3,-6,-9,-2,-6,-9,-9,-10,5,-10,9,-9,7,-6,-8,-10,1,-5,10,5,2,-7,-3,5,-10,-6,-7,6,10,6,2,10,1,-4,-1,-4,-2,-3,9,2,-5,8,1,9,-7,1,8,-1,-5,7,-3,-10,-4,-10,4,-10,-10,2,-2,5,5,-7,7,1,4,-1,-1,-1,-5,7,5], dtype = "int32")#candidate|8808|(420,)|const|int32
call_8807 = relay.TupleGetItem(func_8387_call(relay.reshape(const_8808.astype('int32'), [5, 14, 6]), relay.reshape(const_8808.astype('int32'), [5, 14, 6]), ), 0)
call_8809 = relay.TupleGetItem(func_8390_call(relay.reshape(const_8808.astype('int32'), [5, 14, 6]), relay.reshape(const_8808.astype('int32'), [5, 14, 6]), ), 0)
output = relay.Tuple([call_8797,call_8807,const_8808,])
output2 = relay.Tuple([call_8798,call_8809,const_8808,])
func_8844 = relay.Function([], output)
mod['func_8844'] = func_8844
mod = relay.transform.InferType()(mod)
output = func_8844()
func_8845 = relay.Function([], output)
mutated_mod['func_8845'] = func_8845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_8868 = func_3525_call()
call_8869 = func_3525_call()
func_5339_call = mod.get_global_var('func_5339')
func_5341_call = mutated_mod.get_global_var('func_5341')
call_8875 = relay.TupleGetItem(func_5339_call(), 0)
call_8876 = relay.TupleGetItem(func_5341_call(), 0)
func_7583_call = mod.get_global_var('func_7583')
func_7585_call = mutated_mod.get_global_var('func_7585')
call_8879 = relay.TupleGetItem(func_7583_call(), 0)
call_8880 = relay.TupleGetItem(func_7585_call(), 0)
func_4709_call = mod.get_global_var('func_4709')
func_4711_call = mutated_mod.get_global_var('func_4711')
call_8891 = relay.TupleGetItem(func_4709_call(), 0)
call_8892 = relay.TupleGetItem(func_4711_call(), 0)
func_5775_call = mod.get_global_var('func_5775')
func_5777_call = mutated_mod.get_global_var('func_5777')
const_8902 = relay.const([[5.887806,8.684537,3.084642,-2.765318,1.568687,6.176350,-0.807855,-7.052421,9.291686,5.998456],[3.215916,-7.935712,2.220300,0.814601,-3.890895,4.755570,-9.020000,-5.580562,8.032400,5.105606],[-3.870949,5.002601,4.921638,-0.116878,-5.828347,-4.428786,-9.698963,9.768073,2.302724,6.369061],[7.316367,2.223689,8.771956,6.963672,-8.933114,8.891272,4.092524,5.756691,-2.289283,-5.030832],[6.143395,1.861169,3.261229,-6.883660,5.522276,2.022067,-3.761322,4.594540,-3.429901,-1.112105],[5.193719,-6.199403,-4.108059,-9.855964,5.360300,0.304425,8.574113,-7.681181,-1.903412,3.209871],[2.161468,-6.306601,-9.208624,1.495695,-7.979695,4.845009,-9.624488,-8.979800,-6.625212,6.852667],[1.279004,-5.194342,3.192780,-1.727259,7.393475,-1.433813,-1.133939,5.613266,-0.752786,1.164019],[-7.621495,-8.063201,-2.247069,-6.496278,0.201962,9.692220,-9.988680,-8.504952,-1.614201,5.257791],[-1.406207,-5.401856,-4.694819,6.944698,5.602522,4.429152,-9.605749,-7.321995,4.552166,2.726787],[-7.163468,2.422631,-2.710073,0.796250,-8.525344,3.820742,-9.305438,0.869813,5.152328,0.749395],[-4.873008,-0.952137,-8.787481,3.468876,6.329514,6.254975,3.477518,2.714883,-7.932518,3.208380],[0.632247,3.634514,-6.394616,9.203879,-6.821093,-3.129938,8.481626,5.920297,6.468952,4.765091]], dtype = "float32")#candidate|8902|(13, 10)|const|float32
call_8901 = relay.TupleGetItem(func_5775_call(relay.reshape(const_8902.astype('float32'), [130,])), 1)
call_8903 = relay.TupleGetItem(func_5777_call(relay.reshape(const_8902.astype('float32'), [130,])), 1)
output = relay.Tuple([call_8868,call_8875,call_8879,call_8891,call_8901,const_8902,])
output2 = relay.Tuple([call_8869,call_8876,call_8880,call_8892,call_8903,const_8902,])
func_8905 = relay.Function([], output)
mod['func_8905'] = func_8905
mod = relay.transform.InferType()(mod)
output = func_8905()
func_8906 = relay.Function([], output)
mutated_mod['func_8906'] = func_8906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6472_call = mod.get_global_var('func_6472')
func_6474_call = mutated_mod.get_global_var('func_6474')
call_8910 = relay.TupleGetItem(func_6472_call(), 0)
call_8911 = relay.TupleGetItem(func_6474_call(), 0)
output = relay.Tuple([call_8910,])
output2 = relay.Tuple([call_8911,])
func_8917 = relay.Function([], output)
mod['func_8917'] = func_8917
mod = relay.transform.InferType()(mod)
mutated_mod['func_8917'] = func_8917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8917_call = mutated_mod.get_global_var('func_8917')
call_8918 = func_8917_call()
output = call_8918
func_8919 = relay.Function([], output)
mutated_mod['func_8919'] = func_8919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8844_call = mod.get_global_var('func_8844')
func_8845_call = mutated_mod.get_global_var('func_8845')
call_8984 = relay.TupleGetItem(func_8844_call(), 2)
call_8985 = relay.TupleGetItem(func_8845_call(), 2)
func_3682_call = mod.get_global_var('func_3682')
func_3686_call = mutated_mod.get_global_var('func_3686')
var_8989 = relay.var("var_8989", dtype = "float64", shape = (392,))#candidate|8989|(392,)|var|float64
const_8990 = relay.const([5,1,-4,7,9,3,8,-3,10,8,2,4,8,3,-9,2,-4,2,-4,-1,-5,-3,6,8,5,1,7,-3,-3,10,3,-6,5,-4,-8,-1,1,-6,9,-2,9,4,-9,2,1,5,-5,2,10,-8,3,1,-3,-1,-10,-9,-6,-6,9,-6,1,-6,-2,-6,-6,-1,4,-3,9,-3,6,-10,4,7,8,-4,7,-5,10,-3,6,5,6,-10,1,5,-5,2,-3,-5,-4,-9,-10,-2,-6,7,9,-5,-10,-9,8,10,1,3,3,-4,-6,10,9,-8,-6,-8,-7,-9,8,9,4,-9,1,8,9,-1,-8,1,-4,2,-4,-5,5,-7,6,1,5,-4,2,-2,-5,-6,-7,-10,-7,-1,5,1,1,-5,6,-6,5,-1,1,8,10,9,-10,-6,-1,8,-4,8,-1,-4,-8,-1,-2,10,8,1,9,-5,9,7,-10,-8,8,-2,10,5,6,-10,8,4,-7,4,-5,8,10,-5,-2,5,-10,6,-10,-7,9,-7,-9,-3,-3,4,-3,3,-8,6,-1,8,5,-1,-7,5,6,-2,-2,1,1,-5,-8,2,7,5,-6,-1,-9,7,-1,-3,-4,-9,-2,-4,-6,1,-7,1,8,4,-9,4,7,5,6,4,4,8,4,1,1,5,5,-2,1,7,-2,9,4,9,5,4,7,-7,6,-2,-2,-4,4,-9,5,5,7,-7,2,-5,-7,6,2,6,3,-4,-4,3,-8,3,8,-9,5,-10,-1,-4,3,-4,-5,-3,-8,-3,-9,2,-9,-9,2,4,5,4,8,-6,-10,-7,1,-1,-1,3,3,5,8,-10,5,10,9,-8,6,9,-6,-8,8,-8,-6,-7,4,-2,8,-7,-8,-3,-2,4,-8,-3,9,3,-1,-6,-4,7,-5,-2,-10,7,5,5,-4,-7,-1,-7,2,-10,3,-9,7,4,-4,8,-5,-4,-7,-2,-9,1,9,-2,8,-3,6,-7,-5,-8,9,-3,-10,-7,-5,6,-5,-5,7,-7,-1,-7,10,1,-6,6,-4,-10,-7,1,-3,7,-6,-4,2,-7,10,10,-7,-7,10,8,4,10,2,-5,-2,5,-7,-2,-10,1,-2,-4,-4,4,6,-9,10,4,-5,-9,3,5,-4,-10,6,6,4,1,-3,-3,-8,1,-4,-4,-4,-5,8,9,-7,-6,-10,-2,-4,-4,9,4,-10,7,-10,2,-5,-4,-7,3,-2,8,3,8,-5,2,10,3,-3,-3,-5,-10,3,3,5,-5,-7,10,-7,5,1,-7,-5,2,-3,2,9,6,6,-4,-5,9,-2,-2,-9,10,-6,2,7,1,8,-8,7,-1,-5,-5,3,-4,5,3,-3,-4,2,-10,10,3,-7,7,6,9,2,-6,8,-10,-8,-6,8,1,8,10,-5,7,5,7,1,-5,-10,6,4,2,8,4,10,7,9,7,2,5,8,-9,10,2,6,7,-5,-2,6,9,1,3,5,3,6,3,2,4,7,-1,7,2,8,3,2,-2,-9,-3,7,-10,-6,6,8,-1,8,-7,-1,-7,5,-2,3,7,1,6,8,10,2,3,7,-4,-5,2,-10,-4,8,-9,2,-4,-10,10,8,-1,5,2,-5,9,-5,-5,-7,-9,6,7,-8,8,3,5,7,4,9,6,-10,5,3,2,8,6,-3,-2,3,-8,-10,-10,8,-1,-9,10,-9,9,-6,3,-4,10,1,8,-1,-2,1,10,-5,-6,-7,8,-3,7,7,5,-8,-9,-6,4,-5,-10,8,4,10,-2,8,10,-4,-3,8,2,-3,-6,-10,-6,-7,-9,-4,-10,5,-1,9,-6,-10,-6,7,6,-9,-6,-1,3,-9,-4,-5,9,-6,5,-2,10,2,-2,-4,-8,9,3,8,-9,-6,4,-7,5,3,-9,-3,-9,-7,-5,-9,3,8,-1,1,5,-5,1,4,-5,8,-4,-5,7,5,-2,-6,6,2,-10,7,10,-6,4,-9,-7,-5,7,5,1,-7,-6,-9,-4,-10,-3,4,1,-6,-2,-3,1,1,9,3,5,4,-2,-4,5,-3,-2,-2,8,7,-3,8,-10,2,-4,1,5,-3,-10,5,10,4,6,-5,5,6,-2,-4,5,4,-10,-1,10,-4,-10,4,7,-3,5,1,10,8,4,-6,7,-8,-5,-6,2,3,-10,-1,-6,-2,-2,1,-10,6,2,-1,-2,-7,-10,9,-4,-2,-3,1,-9,10,-6,5,-1,-10,-1,-1,-1,-7,3,3,-2,4,-7,-7,-10,8,-10,-3,-4,-2,-5,-7,3,-9,1,6,4,1,4,10,6,9,-10,7,-7,-8,-3,-9,8,3,-10,7,8,7,-7,-6,-4,-9,9,-10,-6,-7,3,5,5,-3,8,9,9,8,3,-10,-8,1,6,4,-10,-1,8,-4,-6,8,-8,-10,2,-6,-3,-2,-7,8,4,5,2,5,-4,5,-8,5,-9,-5,-6,-8,7,-10,2,-6,-10,10,-9,-6,-6,6,-3,9,10,4,5,3,-3,6,2,2,5,6,9,-10,2,-8,-6,8,1,2,-6,-7,9,-4,5,3,-10,-5,-2,3,-8,-10,7,2,9,-3,-2,-4,6,-2,-4,3,5,-4,-1,-2,9,7,1,4,-5,5,-1,-8,4,8,-6,-3,-8,-9,-3,8,-4,-8,6,5,10,1,-6,6,1,-10,-6,-8,-8,-1,-8,5,-6,9,2,5,1,-3,3,6,5,10,9,-4,-5,-9,8,8,-4,5,-8,-10,-4,-5,2,4,-9,9,-4,-4,9,-3,7,10,8,-9,-6,5,-4,1,-6,-5,9,5,-6,2,4,2,-9,-3,8,1,-3,-7,1,-2,5,1,1,7,5,-3,-7,10,-9,-10,9,2,2,-8,9,7,7,-8,-6,-8,-4,-1,7,-4,-8,-3,8,6,7,2,-6,-8,8,3,-10,-4,1,-5,9,-5,6,2,5,5,-4,6,3,-4,1,-5,-10,5,-8,-2,-10,6,8,9,7,-3,-10,-4,-6,-5,8,8,-3,-1,-3,-8,3,8,-1,3,2,1,-9,-6,5,-2,1,3,4,5,-1,2,-6,-5,1,4,-6,-7,2,-1,-5,10,-4,-10,-8,-10,7,-5,4,9,-8,1,10,10,-1,6,4,4,10,-8,10,-9,10,9,4,9,10,7,-10,-9,7,-9,-5,9,-8,8,-5,-4,-1,-8,2,6,-1,-2,-9,4,-8,7,7,-1,-2,-4,5,3,2,2,1,5,-2,-3,-8,5,1,3,7,-4,2,10,-5,-7,4,-10,-9,9,2,10,-10,-7,-8,-8,4,-8,9,8,-10,-10,4,1,6,5,-3,-7,-4,1,-7,-9,-10,-1,-2,2,2,6,1,1,9,-5,-1,-5,-9,6,-7,8,1,-6,-8,5,-10,8,-2,9,5,6,-6,-10,9,-2,-3,6,2,7,2,-10,4,-6,-8,-10,8,-8,8,3,6,-6,10,2,-5,1,-10,-4,10,-3,-4,9,8,10,7,-3,-9,-3,10,10,-4,-7,-2,1,10,10,6,7,9,9,-1,1,1,8,7,1,8,8,-8,2,2,1,3,3,5,10,-4,5,-4,9,10,-5,-5,-8,1,-2,-6,-2,-2,5,-4,-5,-7,-6,-5,4,-2,-4,1,1,-6,6,5,-2,-10,-4,1,5,-10,-9,-5,-10,4,-5,10,9,-8,-9,-1,-9,8,-9,5,-9,4,-9,2,5,5,-5,5,-10,-8,-5,-10,2,-10,-8,-5,-9,6,-10,-9,-6,-7,9,4,-5,8,3,-6,7,8,-2,-4,-5,-9,9,-2,-2,8,10,-3,-6,5,-1,8,1,-7,2,4,-10,-2,2,-7,-4,-8,-7,-9,1,6,-9,2,-10,-10,10,10,10,-10,10,9,-2,-8,7,6,3,10,4,-9,2,-9,-7,2,-2,10,-2,6,5,7,-1,-7,-4,-4,10,-5,5,5,-4,7,-1,-8,5,9,7,-9,-8,3,-5,10,-2,-10,-10,9,1,-10,3,7,3,8,-9,-2,-3,-9,-4,6,4,3,10,-8,7,5,-9,8,8,3,2,6,-2,4,2,2,-5,-9,-6,-7,-8,-3,-5,-8,6,10,-9,-3,-1,-5,-8,-10,3,-1,-10,-1,3,3,8,10,-3,4,-9,2,-6,5,-5,1,6,-8,10,-5,7,10,-9,9,-3,5,8,5,6,1,5,-1,2,1,1,7,-4,-1,-7,7,1,-5,-9,6,10,-1,7,-10,-3,5,5,-2,-6,1,3,-7,-8,-7,3,-6,-9,8,9,9,8,-8,3,-1,-2,4,8,4,-4,-7,-2,-1,-10,-1,6,-2,3,7,-9,4,-1,-9,-2,7,1,4,-8,8,-4,8,-8,-6,2,6,-2,-3,1,-1,2,-10,3,10,-8,9,7,4,10,8,-3,-1,5,7,-5,-10,6,4,5,-1,2,7,-9,-7,-2,1,9,2,8,-1,-10,4,2,-7,1,2,-10,-3,1,-10,-6,10,-4,9,-6,7,-3,1,-8,-4,8,2,-6,-9,-6,-2,9,-8,-6,7,9,-7,-6,2,9,-2,-4,7,1,1,-2,-2,6,-3,8,6,5,-4,2,-4,-3,-9,1,9,9,-9,-2,3,-2,-10,-8,10,10,4,-9,4,-5,9,9,7,-7,-1,1,6,-4,-6,3,-8,1,4,2,-1,10,-4,1,9,2,-6,-5,6,1,4,7,6,3,7,-7,-4,-2,6,-2,9,4,-6,-2,-10,2,4,5,-5,-9,6,3,-2,8,6,2,5,5,-9,-2,9,-5,3,-4,-10,5,8,6,2,-10,6,-8,-10,-2,1,9,10,-4,4,5,2,10,7,1,-1,-10,3,-10,4,-3,8,4,6,2,7,-5,-5,-8,-10,4,10,-10,3,-5,2,1,-9,-7,-4,-8,6,1,-10,-6,9,-4,3,9,4,2,-1,-5,7,-7,2,-3,9,-10,4,-9,-5,10,-7,-5,-5,6,-9,8,4,8,-1,2,6,10,9,10,4,-5,1,1,-6,-3,9,-10,7,9,-10,9,-5,5,10,-2,-7,5,-7,-5,-5,-8,10,-7,8,6,-7,4,-3,9,-4,8,-8,-1,-9,-9,-7,-9,7,-5,-4,-4,5,4,-7,-3,-4,4,4,-8,-4,-7,6,-9,4,9,-4,-8,1,8,6,10,-2,3,-10,7,10,6,-10,8,-10,1,-9,10,4,1,9,2,-6,7,10,3,-10,3,-5,-5,9,8,6,2,-5,-1,-4,6,-2,7,9,-1,8,-10,-6,-9,-10,2,4,7,7,-6,3,-1,6,-4,-8,3,-10,1,7,-10,7,-4,-6,-10,1,1,9,8,10,2,8,3,8,3,-6,-2,-4,3,9,2,1,-3,-7,-8,4,4,5,9,3,-7,-4,-3,-5,-8,-2,-4,6,-3,-10,-10,1,6,3,-7,9,7,-5,2,9,-4,-10,3,-8,1,-7,10,-6,4,-4,-8,-7,6,7,3,10,6,8], dtype = "int32")#candidate|8990|(2080,)|const|int32
var_8991 = relay.var("var_8991", dtype = "float64", shape = (1800,))#candidate|8991|(1800,)|var|float64
call_8988 = relay.TupleGetItem(func_3682_call(relay.reshape(var_8989.astype('float64'), [14, 28]), relay.reshape(const_8990.astype('int32'), [104, 20]), relay.reshape(var_8991.astype('float64'), [1800,]), ), 4)
call_8992 = relay.TupleGetItem(func_3686_call(relay.reshape(var_8989.astype('float64'), [14, 28]), relay.reshape(const_8990.astype('int32'), [104, 20]), relay.reshape(var_8991.astype('float64'), [1800,]), ), 4)
output = relay.Tuple([call_8984,call_8988,var_8989,const_8990,var_8991,])
output2 = relay.Tuple([call_8985,call_8992,var_8989,const_8990,var_8991,])
func_8993 = relay.Function([var_8989,var_8991,], output)
mod['func_8993'] = func_8993
mod = relay.transform.InferType()(mod)
var_8994 = relay.var("var_8994", dtype = "float64", shape = (392,))#candidate|8994|(392,)|var|float64
var_8995 = relay.var("var_8995", dtype = "float64", shape = (1800,))#candidate|8995|(1800,)|var|float64
output = func_8993(var_8994,var_8995,)
func_8996 = relay.Function([var_8994,var_8995,], output)
mutated_mod['func_8996'] = func_8996
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9068 = relay.const([[[-6.982072,7.107138,4.775786,8.870379,8.819601,5.179648,-8.294699,-7.362152,6.165246,-8.410789,1.769573,7.130576,5.977132,7.629932,7.804791],[7.741667,-0.489469,-6.041022,-1.418060,-3.579053,8.453586,-3.942966,4.649790,-7.795476,0.216870,-4.703990,4.784344,0.217976,0.011829,3.719035]],[[7.445312,-2.884028,1.887252,8.840903,3.161767,8.992264,9.847031,-8.256521,1.388786,7.445739,5.022300,2.990865,-2.336318,9.437047,6.138673],[-2.178471,9.733538,-3.367363,1.902476,2.005753,9.398647,-3.259912,-3.693147,9.375916,4.212372,2.147573,-9.406722,2.471720,5.107040,-6.611960]],[[5.827805,-9.645219,4.935496,8.174606,-1.593633,5.904249,9.507599,8.400855,-9.765439,9.817490,5.582470,-0.736152,6.649446,-8.020180,-5.663920],[8.928649,5.332901,2.775336,-2.134672,-8.896443,9.843313,-0.864430,0.142200,-6.525718,-1.787170,4.330622,-0.244413,1.755227,0.712103,9.996681]]], dtype = "float32")#candidate|9068|(3, 2, 15)|const|float32
uop_9069 = relay.log2(const_9068.astype('float32')) # shape=(3, 2, 15)
output = uop_9069
output2 = uop_9069
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

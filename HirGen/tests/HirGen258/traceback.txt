==========mod==========
#[version = "0.0.5"]
def @func_7583() -> (Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) {
  %0 = @func_6784() /* ty=(Tensor[(16, 14, 8), float64], Tensor[(14, 4, 13), float32], Tensor[(16, 14, 8), bool]) */;
  %1 = %0.2;
  %2 = @func_5661() /* ty=Tensor[(16, 14, 8), float64] */;
  (%1, %2)
}

def @func_1025(%var_991: Tensor[(6, 10, 3), float64]) -> (Tensor[(6, 10, 3), float64],) {
  %3 = cast(%var_991, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %4 = cosh(%3) /* ty=Tensor[(6, 10, 3), float64] */;
  (%4,)
}

def @func_1808(%var_1798: int32, %var_1799: Tensor[(16, 10, 13), int32]) -> (Tensor[(16, 10, 13), bool],) {
  %5 = cast(%var_1798, dtype="bool") /* ty=bool */;
  %6 = cast(%var_1799, dtype="bool") /* ty=Tensor[(16, 10, 13), bool] */;
  %7 = less(%5, %6) /* ty=Tensor[(16, 10, 13), bool] */;
  (%7,)
}

def @func_3163(%var_3143: Tensor[(15, 13, 4), float64]) -> (Tensor[(15, 13, 4), bool], Tensor[(1344), uint8], Tensor[(2145), float32], Tensor[(80), float32], Tensor[(216), uint32], Tensor[(672), float32]) {
  %8 = cast(%var_3143, dtype="float64") /* ty=Tensor[(15, 13, 4), float64] */;
  %9 = cosh(%8) /* ty=Tensor[(15, 13, 4), float64] */;
  %10 = cast(%var_3143, dtype="bool") /* ty=Tensor[(15, 13, 4), bool] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%9, dtype="bool") /* ty=Tensor[(15, 13, 4), bool] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %17 = reshape(%14, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %18 = reshape(%15, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %19 = reshape(%16, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %20 = @func_2138(%17, %18, %19) /* ty=(Tensor[(11, 15, 13), float32], Tensor[(11, 15, 13), bool], Tensor[(3, 14, 16), float32], Tensor[(40, 2), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(104, 20), int32], Tensor[(11, 15, 13), float32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8]) */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %23 = reshape(%21, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %24 = reshape(%22, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %25 = @func_1709(%23, %24) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %26 = greater(%12, %13) /* ty=Tensor[(15, 13, 4), bool] */;
  %27 = %20.10;
  %28 = %25.2;
  (%26, %27, meta[relay.Constant][0] /* ty=Tensor[(2145), float32] */, %28, meta[relay.Constant][1] /* ty=Tensor[(216), uint32] */, meta[relay.Constant][2] /* ty=Tensor[(672), float32] */)
}

def @func_5301() -> Tensor[(1800), float64] {
  %29 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
  %29.0
}

def @func_6784() -> (Tensor[(16, 14, 8), float64], Tensor[(14, 4, 13), float32], Tensor[(16, 14, 8), bool]) {
  %30 = @func_5872() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %31 = @func_5661() /* ty=Tensor[(16, 14, 8), float64] */;
  %32 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
  %33 = %32.1;
  %34 = cast(%33, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %35 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%31, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %38 = %30.0;
  %39 = @func_6606() /* ty=Tensor[(14, 4, 13), float32] */;
  %40 = logical_or(%36, %37) /* ty=Tensor[(16, 14, 8), bool] */;
  (%38, %39, %40)
}

def @func_4145(%var_4133: Tensor[(14, 28), float64], %var_4134: Tensor[(2080), int32], %var_4135: Tensor[(900, 2), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(882), int32], Tensor[(14, 28), float64], Tensor[(2080), int32], Tensor[(900, 2), float64]) {
  %41 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %42 = cast(%var_4133, dtype="float64") /* ty=Tensor[(14, 28), float64] */;
  %43 = cast(%var_4134, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %44 = cast(%var_4135, dtype="float64") /* ty=Tensor[(900, 2), float64] */;
  %45 = reshape(%42, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
  %46 = reshape(%43, newshape=[104, 20]) /* ty=Tensor[(104, 20), int32] */;
  %47 = reshape(%44, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %48 = @func_3682(%45, %46, %47) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) */;
  %49 = %41.0;
  %50 = %48.4;
  (%49, %50, %var_4133, %var_4134, %var_4135)
}

def @func_7161() -> (Tensor[(16, 14, 8), float64],) {
  %51 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
  (%51,)
}

def @func_8733() -> (Tensor[(16, 14, 8), float64],) {
  %52 = @func_7666() /* ty=Tensor[(16, 14, 8), float64] */;
  (%52,)
}

def @func_7189() -> (Tensor[(16, 14, 8), float64],) {
  %53 = @func_3872() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %54 = %53.0;
  (%54,)
}

def @func_6039(%var_6027: Tensor[(16, 14, 8), float64]) -> Tensor[(16, 14, 8), float64] {
  %55 = @func_4499() /* ty=Tensor[(16, 14, 8), float64] */;
  %56 = cast(%var_6027, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
  %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%55, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%58, %59) /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_7896() -> Tensor[(1800), float64] {
  %60 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %60.2
}

def @func_3494() -> (Tensor[(16, 14, 8), float64],) {
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
  %62 = log(%61) /* ty=Tensor[(16, 14, 8), float64] */;
  (%62,)
}

def @func_1709(%var_1696: Tensor[(3, 6, 12), uint32], %var_1705: Tensor[(672), float32]) -> (Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) {
  %63 = cast(%var_1696, dtype="uint32") /* ty=Tensor[(3, 6, 12), uint32] */;
  %64 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(3, 6, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 6, 12), uint32] */, dtype="uint32") /* ty=Tensor[(3, 6, 12), uint32] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %67 = cast(meta[relay.Constant][5] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %68 = cast(%var_1705, dtype="float32") /* ty=Tensor[(672), float32] */;
  %69 = reshape(%67, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
  %70 = reshape(%68, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %71 = @func_1658(%69, %70) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) */;
  %72 = logical_xor(%65, %66) /* ty=Tensor[(3, 6, 12), uint32] */;
  %73 = %71.1;
  (%72, %73, meta[relay.Constant][5] /* ty=Tensor[(80), float32] */, %var_1705)
}

def @func_7235() -> (Tensor[(1800), float64],) {
  %74 = @func_4491() /* ty=(Tensor[(1800), float64],) */;
  %75 = %74.0;
  (%75,)
}

def @func_7996(%var_7976: Tensor[(16, 14, 8), float32]) -> (Tensor[(16, 14, 8), int8], Tensor[(6, 10, 3), float64], Tensor[(192), float32], Tensor[(16, 14, 8), float32]) {
  %76 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  %77 = cast(%var_7976, dtype="int8") /* ty=Tensor[(16, 14, 8), int8] */;
  %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%76, dtype="int8") /* ty=Tensor[(16, 14, 8), int8] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %82 = reshape(%81, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %83 = @func_6847(%82) /* ty=(Tensor[(1800), float64], Tensor[(4, 6, 8), float64], Tensor[(192), float32], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) */;
  %84 = multiply(%79, %80) /* ty=Tensor[(16, 14, 8), int8] */;
  %85 = %83.3;
  %86 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  (%84, %85, meta[relay.Constant][6] /* ty=Tensor[(192), float32] */, %86)
}

def @func_7071() -> (Tensor[(16, 14, 8), float64], Tensor[(1344), uint8], Tensor[(16, 6, 14), float64]) {
  %87 = @func_5752() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %88 = cast(meta[relay.Constant][7] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %89 = reshape(%88, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint8] */;
  %90 = @func_1582(%89) /* ty=Tensor[(16, 6, 14), bool] */;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(16, 6, 14), float64] */;
  %92 = %87.0;
  %93 = acos(%91) /* ty=Tensor[(16, 6, 14), float64] */;
  (%92, meta[relay.Constant][7] /* ty=Tensor[(1344), uint8] */, %93)
}

def @func_6058() -> (Tensor[(16, 14, 8), float64],) {
  %94 = @func_5794() /* ty=Tensor[(16, 14, 8), float64] */;
  (%94,)
}

def @func_7482() -> Tensor[(16, 14, 8), float64] {
  %95 = @func_7363() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %95.0
}

def @func_5939(%var_5888: Tensor[(1800), float64], %var_5916: Tensor[(480), int8]) -> (Tensor[(1800), float64], Tensor[(2, 15, 16), bool], Tensor[(16, 14, 8), float64]) {
  %96 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
  %97 = %96.0;
  %98 = cast(%var_5888, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(1), int32] */;
  %100 = cast(%97, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?), float64] */;
  %102 = cast(%var_5916, dtype="int8") /* ty=Tensor[(480), int8] */;
  %103 = cast(%var_5916, dtype="int8") /* ty=Tensor[(480), int8] */;
  %104 = reshape(%102, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int8] */;
  %105 = reshape(%103, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int8] */;
  %106 = @func_4357(%104, %105) /* ty=(Tensor[(2, 15, 16), int8], Tensor[(8, 15, 15), float64]) */;
  %107 = %106.0;
  %108 = cast(%var_5916, dtype="bool") /* ty=Tensor[(480), bool] */;
  %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%107, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %112 = @func_5804() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %113 = floor_divide(%100, %101) /* ty=Tensor[(1800), float64] */;
  %114 = greater_equal(%110, %111) /* ty=Tensor[(2, 15, 16), bool] */;
  %115 = %112.0;
  (%113, %114, %115)
}

def @func_8538(%var_8527: Tensor[(780), float64], %var_8535: Tensor[(90, 2), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(1800), float64], Tensor[(9, 16, 3), bool], int32, Tensor[(1, 432), int32], Tensor[(15, 13, 4), bool], Tensor[(780), float32], Tensor[(108, 2), uint32], Tensor[(90, 2), float64], Tensor[(1568), float32]) {
  %116 = @func_7964() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float32]) */;
  %117 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %118 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 432), int32] */, dtype="int32") /* ty=Tensor[(1, 432), int32] */;
  %119 = reshape(%117, newshape=[]) /* ty=int32 */;
  %120 = reshape(%118, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), int32] */;
  %121 = cast(%var_8527, dtype="float64") /* ty=Tensor[(780), float64] */;
  %122 = reshape(%121, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), float64] */;
  %123 = @func_3163(%122) /* ty=(Tensor[(15, 13, 4), bool], Tensor[(1344), uint8], Tensor[(2145), float32], Tensor[(80), float32], Tensor[(216), uint32], Tensor[(672), float32]) */;
  %124 = cast(%var_8527, dtype="float32") /* ty=Tensor[(780), float32] */;
  %125 = cast(-4 /* ty=int32 */, dtype="float64") /* ty=float64 */;
  %126 = cast(%var_8535, dtype="float64") /* ty=Tensor[(90, 2), float64] */;
  %127 = cast(meta[relay.Constant][9] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %128 = reshape(%125, newshape=[]) /* ty=float64 */;
  %129 = reshape(%126, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %130 = reshape(%127, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %131 = @func_6155(%128, %129, %130) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(16, 14, 8), bool], float64, Tensor[(180), float64], Tensor[(108, 2), uint32], Tensor[(1568), float64]) */;
  %132 = @func_8209() /* ty=Tensor[(16, 14, 8), float64] */;
  %133 = %116.0;
  %134 = @func_5591(%119, %120) /* ty=Tensor[(9, 16, 3), bool] */;
  %135 = %123.0;
  %136 = log2(%124) /* ty=Tensor[(780), float32] */;
  %137 = %131.7;
  (%132, %133, %134, -4 /* ty=int32 */, meta[relay.Constant][8] /* ty=Tensor[(1, 432), int32] */, %135, %136, %137, %var_8535, meta[relay.Constant][9] /* ty=Tensor[(1568), float32] */)
}

def @func_4709() -> (Tensor[(16, 14, 8), float64],) {
  %138 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %139 = %138.0;
  (%139,)
}

def @func_6343(%var_6307: Tensor[(2080), int32], %var_6315: Tensor[(1344), uint8]) -> (Tensor[(16, 14, 8), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(1800), float64]) {
  %140 = cast(meta[relay.Constant][10] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %141 = cast(%var_6307, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %142 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %143 = %142.2;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %145 = reshape(%140, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
  %146 = reshape(%141, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %147 = reshape(%144, newshape=[900, 2]) /* ty=Tensor[(900, 2), float64] */;
  %148 = @func_4145(%145, %146, %147) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(882), int32], Tensor[(14, 28), float64], Tensor[(2080), int32], Tensor[(900, 2), float64]) */;
  %149 = cast(%var_6315, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %150 = reshape(%149, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint8] */;
  %151 = cast(%143, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %152 = %148.0;
  %153 = @func_1582(%150) /* ty=Tensor[(16, 6, 14), bool] */;
  %154 = atan(%151) /* ty=Tensor[(1800), float64] */;
  (%152, meta[relay.Constant][10] /* ty=Tensor[(392), float64] */, %var_6307, %153, %var_6315, %154)
}

def @func_8098() -> Tensor[(16, 14, 8), float64] {
  @func_7482() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_3948() -> (Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) {
  %155 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %156 = %155.0;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %158 = cast(meta[relay.Constant][11] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %159 = reshape(%158, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %160 = sin(%157) /* ty=Tensor[(16, 14, 8), float32] */;
  %161 = @func_788(%159) /* ty=Tensor[(8, 15, 15), float64] */;
  (%160, %161, meta[relay.Constant][11] /* ty=Tensor[(1800), float64] */)
}

def @func_6472() -> (Tensor[(16, 14, 8), float32],) {
  %162 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  (%162,)
}

def @func_5019(%var_5000: Tensor[(392), float64], %var_5001: Tensor[(2080), int32], %var_5002: Tensor[(882), int32], %var_5003: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(12, 16, 11), float64], float64, Tensor[(2112), float64], Tensor[(16, 14, 8), float32]) {
  %163 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %164 = %163.0;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %166 = cast(%var_5000, dtype="float64") /* ty=Tensor[(392), float64] */;
  %167 = cast(%var_5000, dtype="float64") /* ty=Tensor[(392), float64] */;
  %168 = cast(%var_5001, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %169 = cast(%var_5002, dtype="int32") /* ty=Tensor[(882), int32] */;
  %170 = cast(%var_5003, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %171 = reshape(%166, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %172 = reshape(%167, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %173 = reshape(%168, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %174 = reshape(%169, newshape=[882]) /* ty=Tensor[(882), int32] */;
  %175 = reshape(%170, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %176 = @func_3588(%171, %172, %173, %174, %175) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */;
  %177 = cast(-4.24915f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %178 = cast(meta[relay.Constant][12] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %179 = reshape(%177, newshape=[]) /* ty=float64 */;
  %180 = reshape(%178, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %181 = @func_3811(%179, %180) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %182 = cast(%164, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %183 = atanh(%182) /* ty=Tensor[(16, 14, 8), float32] */;
  %184 = cast(%183, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %185 = asin(%165) /* ty=Tensor[(16, 14, 8), float32] */;
  %186 = %176.5;
  %187 = %181.0;
  %188 = sqrt(%184) /* ty=Tensor[(16, 14, 8), float32] */;
  (%185, %186, %var_5000, %var_5001, %var_5002, %var_5003, %187, -4.24915f64 /* ty=float64 */, meta[relay.Constant][12] /* ty=Tensor[(2112), float64] */, %188)
}

def @func_4532() -> (Tensor[(16, 14, 8), float64],) {
  %189 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %190 = %189.0;
  (%190,)
}

def @func_1582(%var_1574: Tensor[(16, 6, 14), uint8]) -> Tensor[(16, 6, 14), bool] {
  %191 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 6, 1), uint8] */, dtype="bool") /* ty=Tensor[(16, 6, 1), bool] */;
  %192 = cast(%var_1574, dtype="bool") /* ty=Tensor[(16, 6, 14), bool] */;
  equal(%191, %192) /* ty=Tensor[(16, 6, 14), bool] */
}

def @func_8917() -> (Tensor[(16, 14, 8), float32],) {
  %193 = @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */;
  %194 = %193.0;
  (%194,)
}

def @func_8017() -> Tensor[(1800), float64] {
  %195 = @func_7964() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float32]) */;
  %195.0
}

def @func_3525() -> Tensor[(16, 14, 8), float32] {
  %196 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %197 = %196.0;
  %198 = cast(%197, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  exp(%198) /* ty=Tensor[(16, 14, 8), float32] */
}

def @func_8905() -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64], Tensor[(10, 13, 1), float64], Tensor[(13, 10), float32]) {
  %199 = @func_5339() /* ty=(Tensor[(16, 14, 8), float32],) */;
  %200 = @func_7583() /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) */;
  %201 = @func_4709() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %202 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 10), float32] */, dtype="float32") /* ty=Tensor[(13, 10), float32] */;
  %203 = reshape(%202, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %204 = @func_5775(%203) /* ty=(Tensor[(224), float32], Tensor[(10, 13, 1), float64], Tensor[(130), float32]) */;
  %205 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  %206 = %199.0;
  %207 = %200.0;
  %208 = %201.0;
  %209 = %204.1;
  (%205, %206, %207, %208, %209, meta[relay.Constant][14] /* ty=Tensor[(13, 10), float32] */)
}

def @func_6456() -> (Tensor[(16, 14, 8), float64],) {
  %210 = @func_4532() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %211 = %210.0;
  (%211,)
}

def @func_7666() -> Tensor[(16, 14, 8), float64] {
  @func_5032() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_8844() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(420), int32]) {
  %212 = @func_4763() /* ty=(Tensor[(1800), float64], Tensor[(4, 8, 7), float32], Tensor[(224), float32]) */;
  %213 = cast(meta[relay.Constant][15] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %214 = cast(meta[relay.Constant][15] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %215 = reshape(%213, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %216 = reshape(%214, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
  %217 = @func_8387(%215, %216) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(5, 14, 6), int16]) */;
  %218 = %212.0;
  %219 = %217.0;
  (%218, %219, meta[relay.Constant][15] /* ty=Tensor[(420), int32] */)
}

def @func_3363(%var_3275: int16, %var_3290: Tensor[(7, 16, 14), float32], %var_3305: Tensor[(108, 2), uint32]) -> (Tensor[(672), float32], Tensor[(108, 2), uint32], Tensor[(168, 4), float32], Tensor[(7, 16, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(90, 20), float64], Tensor[(7, 16, 14), float64], Tensor[(2145), float32], Tensor[(780), float64]) {
  %220 = cast(%var_3305, dtype="uint32") /* ty=Tensor[(108, 2), uint32] */;
  %221 = cast(meta[relay.Constant][16] /* ty=Tensor[(168, 4), float32] */, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %222 = reshape(%220, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %223 = reshape(%221, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %224 = @func_1709(%222, %223) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %225 = cast(%var_3275, dtype="int16") /* ty=int16 */;
  %226 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 16, 14), int16] */, dtype="int16") /* ty=Tensor[(7, 16, 14), int16] */;
  %227 = left_shift(%225, %226) /* ty=Tensor[(7, 16, 14), int16] */;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %229 = log10(%228) /* ty=Tensor[(7, 16, 14), float32] */;
  %230 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 16, 14), int16] */, dtype="bool") /* ty=Tensor[(7, 16, 14), bool] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%229, dtype="bool") /* ty=Tensor[(7, 16, 14), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %234 = cast(meta[relay.Constant][18] /* ty=Tensor[(90, 20), float64] */, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  %235 = reshape(%234, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %236 = cast(meta[relay.Constant][18] /* ty=Tensor[(90, 20), float64] */, dtype="float32") /* ty=Tensor[(90, 20), float32] */;
  %237 = atan(%236) /* ty=Tensor[(90, 20), float32] */;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  %239 = asinh(%238) /* ty=Tensor[(90, 20), float64] */;
  %240 = cast(meta[relay.Constant][18] /* ty=Tensor[(90, 20), float64] */, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(2), int32] */;
  %242 = cast(%239, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %244 = cast(%var_3290, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %245 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%229, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %248 = mod(%246, %247) /* ty=Tensor[(7, 16, 14), float32] */;
  %249 = cast(%248, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %250 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%229, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %253 = divide(%251, %252) /* ty=Tensor[(7, 16, 14), float32] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(7, 16, 14), float64] */;
  %255 = log2(%254) /* ty=Tensor[(7, 16, 14), float64] */;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(7, 16, 14), float64] */;
  %257 = cast(meta[relay.Constant][19] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %258 = reshape(%257, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), float64] */;
  %259 = @func_3163(%258) /* ty=(Tensor[(15, 13, 4), bool], Tensor[(1344), uint8], Tensor[(2145), float32], Tensor[(80), float32], Tensor[(216), uint32], Tensor[(672), float32]) */;
  %260 = %224.1;
  %261 = greater(%232, %233) /* ty=Tensor[(7, 16, 14), bool] */;
  %262 = @func_788(%235) /* ty=Tensor[(8, 15, 15), float64] */;
  %263 = mod(%242, %243) /* ty=Tensor[(90, 20), float64] */;
  %264 = sigmoid(%256) /* ty=Tensor[(7, 16, 14), float64] */;
  %265 = %259.2;
  (%260, %var_3305, meta[relay.Constant][16] /* ty=Tensor[(168, 4), float32] */, %261, %262, %263, %264, %265, meta[relay.Constant][19] /* ty=Tensor[(780), float64] */)
}

def @func_3682(%var_3677: Tensor[(14, 28), float64], %var_3678: Tensor[(104, 20), int32], %var_3680: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) {
  %266 = cast(%var_3677, dtype="float64") /* ty=Tensor[(14, 28), float64] */;
  %267 = cast(%var_3677, dtype="float64") /* ty=Tensor[(14, 28), float64] */;
  %268 = cast(%var_3678, dtype="int32") /* ty=Tensor[(104, 20), int32] */;
  %269 = cast(meta[relay.Constant][20] /* ty=Tensor[(882), int32] */, dtype="int32") /* ty=Tensor[(882), int32] */;
  %270 = cast(%var_3680, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %271 = reshape(%266, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %272 = reshape(%267, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %273 = reshape(%268, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %274 = reshape(%269, newshape=[882]) /* ty=Tensor[(882), int32] */;
  %275 = reshape(%270, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %276 = @func_3588(%271, %272, %273, %274, %275) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */;
  %277 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  %278 = %276.3;
  (%277, %278, %var_3677, %var_3678, meta[relay.Constant][20] /* ty=Tensor[(882), int32] */, %var_3680)
}

def @func_5804() -> (Tensor[(16, 14, 8), float64],) {
  %279 = @func_4709() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %280 = %279.0;
  (%280,)
}

def @func_8556() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64]) {
  %281 = @func_4491() /* ty=(Tensor[(1800), float64],) */;
  %282 = @func_5804() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %283 = %281.0;
  %284 = %282.0;
  (%283, %284)
}

def @func_8645(%var_8628: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), uint64], Tensor[(1800), float64], Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) {
  %285 = @func_7028() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float64]) */;
  %286 = %285.0;
  %287 = cast(%286, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
  %288 = reshape(%287, newshape=[16, 14, 8]) /* ty=Tensor[(16, 14, 8), float64] */;
  %289 = @func_8042(%288) /* ty=(Tensor[(16, 14, 8), uint64],) */;
  %290 = cast(%var_8628, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %291 = reshape(%290, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %292 = @func_7583() /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) */;
  %293 = %289.0;
  %294 = @func_5992(%291) /* ty=Tensor[(1800), float64] */;
  %295 = %292.0;
  (%286, %293, %294, %var_8628, %295)
}

def @func_4045() -> Tensor[(16, 14, 8), float64] {
  %296 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %296.0
}

def @func_8993(%var_8989: Tensor[(392), float64], %var_8991: Tensor[(1800), float64]) -> (Tensor[(420), int32], Tensor[(882), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(1800), float64]) {
  %297 = @func_8844() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(420), int32]) */;
  %298 = cast(%var_8989, dtype="float64") /* ty=Tensor[(392), float64] */;
  %299 = cast(meta[relay.Constant][21] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %300 = cast(%var_8991, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %301 = reshape(%298, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
  %302 = reshape(%299, newshape=[104, 20]) /* ty=Tensor[(104, 20), int32] */;
  %303 = reshape(%300, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %304 = @func_3682(%301, %302, %303) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) */;
  %305 = %297.2;
  %306 = %304.4;
  (%305, %306, %var_8989, meta[relay.Constant][21] /* ty=Tensor[(2080), int32] */, %var_8991)
}

def @func_7745(%var_7706: Tensor[(480), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(2, 15, 16), float64], Tensor[(480), float64], Tensor[(16, 14, 8), float64], Tensor[(2, 15, 16), float64]) {
  %307 = @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */;
  %308 = cast(%var_7706, dtype="float64") /* ty=Tensor[(480), float64] */;
  %309 = reshape(%308, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %310 = @func_4938(%309) /* ty=(Tensor[(2, 15, 16), float64],) */;
  %311 = @func_5872() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %312 = %310.0;
  %313 = cast(%312, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
  %314 = reshape(%313, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %315 = @func_4938(%314) /* ty=(Tensor[(2, 15, 16), float64],) */;
  %316 = %307.0;
  %317 = %311.0;
  %318 = %315.0;
  (%316, %312, %var_7706, %317, %318)
}

def @func_181(%var_143: Tensor[(10, 13, 1), float32]) -> (Tensor[(10, 13, 1), float64], Tensor[(10, 13, 1), float32], Tensor[(10, 13, ?), float64], Tensor[(10, 13, ?), uint64]) {
  %319 = cast(%var_143, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %320 = cast(%var_143, dtype="float32") /* ty=Tensor[(10, 13, 1), float32] */;
  %321 = cast(%var_143, dtype="float32") /* ty=Tensor[(10, 13, 1), float32] */;
  %322 = tan(%321) /* ty=Tensor[(10, 13, 1), float32] */;
  %323 = cast(%322, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %324 = shape_of(%var_143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%var_143, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %327 = less_equal(%325, %326) /* ty=Tensor[(10, 13, ?), bool] */;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(10, 13, ?), float64] */;
  %329 = cast(%var_143, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %330 = cos(%329) /* ty=Tensor[(10, 13, 1), float64] */;
  %331 = cast(%327, dtype="uint64") /* ty=Tensor[(10, 13, ?), uint64] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="uint64") /* ty=Tensor[(10, 13, 1), uint64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %335 = sigmoid(%319) /* ty=Tensor[(10, 13, 1), float64] */;
  %336 = atanh(%320) /* ty=Tensor[(10, 13, 1), float32] */;
  %337 = asinh(%328) /* ty=Tensor[(10, 13, ?), float64] */;
  %338 = multiply(%333, %334) /* ty=Tensor[(10, 13, ?), uint64] */;
  (%335, %336, %337, %338)
}

def @func_5992(%var_5978: Tensor[(1800), float64]) -> Tensor[(1800), float64] {
  %339 = @func_5301() /* ty=Tensor[(1800), float64] */;
  %340 = cast(%var_5978, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(1), int32] */;
  %342 = cast(%339, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?), int8] */;
  %344 = bitwise_or(%342, %343) /* ty=Tensor[(1800), int8] */;
  %345 = cast(%var_5978, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(1), int32] */;
  %347 = cast(%344, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?), float64] */;
  floor_mod(%347, %348) /* ty=Tensor[(1800), float64] */
}

def @func_6094(%var_6080: Tensor[(672), float32]) -> (Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 14, 8), float32]) {
  %349 = cast(%var_6080, dtype="float32") /* ty=Tensor[(672), float32] */;
  %350 = reshape(%349, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float32] */;
  %351 = @func_4045() /* ty=Tensor[(16, 14, 8), float64] */;
  %352 = cast(%351, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %353 = @func_969(%350) /* ty=Tensor[(3, 14, 16), float32] */;
  %354 = sigmoid(%352) /* ty=Tensor[(16, 14, 8), float32] */;
  (%353, %var_6080, %354)
}

def @func_8149() -> (Tensor[(16, 14, 8), float32],) {
  %355 = @func_7389() /* ty=(Tensor[(16, 14, 8), float32],) */;
  %356 = %355.0;
  (%356,)
}

def @func_7859() -> Tensor[(1800), float64] {
  %357 = @func_7235() /* ty=(Tensor[(1800), float64],) */;
  %357.0
}

def @func_8301(%var_8240: Tensor[(78), float32], %var_8273: Tensor[(4, 168), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(1800), float64], Tensor[(13, 3, 2), float64], Tensor[(78), float32], Tensor[(16, 14, 8), float64], Tensor[(672), float32], Tensor[(216), uint32], Tensor[(4, 168), float32], Tensor[(2080), float64], Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) {
  %358 = cast(%var_8240, dtype="float32") /* ty=Tensor[(78), float32] */;
  %359 = cast(%var_8240, dtype="float32") /* ty=Tensor[(78), float32] */;
  %360 = reshape(%358, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %361 = reshape(%359, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %362 = @func_6388(%360, %361) /* ty=(Tensor[(13, 3, 2), float64],) */;
  %363 = @func_8017() /* ty=Tensor[(1800), float64] */;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %365 = cast(meta[relay.Constant][22] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %366 = cast(%363, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %367 = reshape(%364, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %368 = reshape(%365, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %369 = reshape(%366, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float32] */;
  %370 = @func_7334(%367, %368, %369) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(70), int64], Tensor[(210), int64], Tensor[(1800), float64], Tensor[(104, 20), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 14, 8), float64], Tensor[(8, 15, 15), float32], Tensor[(8, 15, 15), int32]) */;
  %371 = cast(meta[relay.Constant][23] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %372 = cast(%var_8273, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %373 = reshape(%371, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %374 = reshape(%372, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %375 = @func_1709(%373, %374) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %376 = cast(meta[relay.Constant][24] /* ty=Tensor[(2080), int32] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %377 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %378 = cast(meta[relay.Constant][22] /* ty=Tensor[(2080), int32] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?), float64] */;
  %380 = @func_5032() /* ty=Tensor[(16, 14, 8), float64] */;
  %381 = %362.0;
  %382 = %370.7;
  %383 = %375.1;
  %384 = floor_divide(%378, %379) /* ty=Tensor[(2080), float64] */;
  %385 = @func_7430() /* ty=Tensor[(16, 14, 8), bool] */;
  %386 = @func_5794() /* ty=Tensor[(16, 14, 8), float64] */;
  (%380, %363, %381, %var_8240, %382, %383, meta[relay.Constant][23] /* ty=Tensor[(216), uint32] */, %var_8273, %384, %385, %386)
}

def @func_3753(%var_3729: Tensor[(392), float64], %var_3731: Tensor[(882), int32], %var_3732: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(16, 10, 13), bool], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882), int32], Tensor[(1800), float64]) {
  %387 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
  %389 = cast(%var_3729, dtype="float64") /* ty=Tensor[(392), float64] */;
  %390 = cast(%var_3729, dtype="float64") /* ty=Tensor[(392), float64] */;
  %391 = cast(meta[relay.Constant][25] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %392 = cast(%var_3731, dtype="int32") /* ty=Tensor[(882), int32] */;
  %393 = cast(%var_3732, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %394 = reshape(%389, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %395 = reshape(%390, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %396 = reshape(%391, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %397 = reshape(%392, newshape=[882]) /* ty=Tensor[(882), int32] */;
  %398 = reshape(%393, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %399 = @func_3588(%394, %395, %396, %397, %398) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */;
  %400 = cosh(%388) /* ty=Tensor[(16, 14, 8), float64] */;
  %401 = %399.1;
  (%400, %401, %var_3729, meta[relay.Constant][25] /* ty=Tensor[(2080), int32] */, %var_3731, %var_3732)
}

def @func_5339() -> (Tensor[(16, 14, 8), float32],) {
  %402 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  (%402,)
}

def @func_8209() -> Tensor[(16, 14, 8), float64] {
  %403 = @func_5804() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %403.0
}

def @func_8704(%var_8699: Tensor[(11, 12, 10), float64]) -> (Tensor[(11, 12, 10), float64],) {
  %404 = cast(%var_8699, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %405 = tan(%404) /* ty=Tensor[(11, 12, 10), float64] */;
  (%405,)
}

def @func_6559() -> (Tensor[(1800), float64],) {
  %406 = @func_4630() /* ty=(Tensor[(1800), float64],) */;
  %407 = %406.0;
  (%407,)
}

def @func_8575() -> Tensor[(1800), float64] {
  @func_7896() /* ty=Tensor[(1800), float64] */
}

def @func_2634(%var_2631: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
  %408 = cast(%var_2631, dtype="float32") /* ty=Tensor[(7, 14, 10), float32] */;
  %409 = sqrt(%408) /* ty=Tensor[(7, 14, 10), float32] */;
  (%409,)
}

def @func_4357(%var_4341: Tensor[(2, 15, 16), int8], %var_4342: Tensor[(2, 15, 16), int8]) -> (Tensor[(2, 15, 16), int8], Tensor[(8, 15, 15), float64]) {
  %410 = cast(%var_4342, dtype="int8") /* ty=Tensor[(2, 15, 16), int8] */;
  %411 = shape_of(%var_4341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%var_4341, dtype="int8") /* ty=Tensor[(2, 15, 16), int8] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %414 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %415 = right_shift(%412, %413) /* ty=Tensor[(2, 15, 16), int8] */;
  %416 = %414.1;
  (%415, %416)
}

def @func_5752() -> (Tensor[(16, 14, 8), float64],) {
  %417 = @func_5095() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %418 = %417.0;
  (%418,)
}

def @func_6388(%var_6374: Tensor[(13, 3, 2), float32], %var_6375: Tensor[(13, 3, 2), float32]) -> (Tensor[(13, 3, 2), float64],) {
  %419 = cast(%var_6375, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
  %420 = shape_of(%var_6374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%var_6374, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %423 = divide(%421, %422) /* ty=Tensor[(13, 3, 2), float32] */;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(13, 3, 2), float64] */;
  %425 = cosh(%424) /* ty=Tensor[(13, 3, 2), float64] */;
  (%425,)
}

def @func_1658(%var_1640: Tensor[(10, 1, 8), float32], %var_1645: Tensor[(672), float32]) -> (Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) {
  %426 = cast(%var_1645, dtype="float32") /* ty=Tensor[(672), float32] */;
  %427 = reshape(%426, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float32] */;
  %428 = cast(%var_1640, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
  %429 = acos(%428) /* ty=Tensor[(10, 1, 8), float32] */;
  %430 = cast(%var_1640, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %434 = @func_969(%427) /* ty=Tensor[(3, 14, 16), float32] */;
  %435 = multiply(%432, %433) /* ty=Tensor[(10, ?, 8), float32] */;
  (%434, %var_1645, %435)
}

def @func_5388(%var_5344: Tensor[(5, 1, 14), int64], %var_5345: Tensor[(5, 3, 14), int64], %var_5359: Tensor[(6, 300), float64]) -> (Tensor[(5, 3, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64]) {
  %436 = cast(%var_5344, dtype="bool") /* ty=Tensor[(5, 1, 14), bool] */;
  %437 = cast(%var_5345, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %438 = cast(%var_5359, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %439 = reshape(%438, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %440 = cast(%var_5359, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %441 = less_equal(%436, %437) /* ty=Tensor[(5, 3, 14), bool] */;
  %442 = @func_788(%439) /* ty=Tensor[(8, 15, 15), float64] */;
  %443 = asin(%440) /* ty=Tensor[(6, 300), float64] */;
  (%441, %442, %443)
}

def @func_3811(%var_3801: float64, %var_3802: Tensor[(12, 16, 11), float64]) -> (Tensor[(12, 16, 11), float64],) {
  %444 = cast(%var_3801, dtype="float64") /* ty=float64 */;
  %445 = cast(%var_3802, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %446 = subtract(%444, %445) /* ty=Tensor[(12, 16, 11), float64] */;
  (%446,)
}

def @func_5775(%var_5772: Tensor[(130), float32]) -> (Tensor[(224), float32], Tensor[(10, 13, 1), float64], Tensor[(130), float32]) {
  %447 = @func_4763() /* ty=(Tensor[(1800), float64], Tensor[(4, 8, 7), float32], Tensor[(224), float32]) */;
  %448 = cast(%var_5772, dtype="float32") /* ty=Tensor[(130), float32] */;
  %449 = reshape(%448, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float32] */;
  %450 = @func_181(%449) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(10, 13, 1), float32], Tensor[(10, 13, ?), float64], Tensor[(10, 13, ?), uint64]) */;
  %451 = %447.2;
  %452 = %450.0;
  (%451, %452, %var_5772)
}

def @func_5032() -> Tensor[(16, 14, 8), float64] {
  %453 = @func_3872() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %453.0
}

def @func_2244(%var_2205: Tensor[(7, 14, 9), int32], %var_2206: Tensor[(7, 14, 9), int32], %var_2232: Tensor[(1800), float64]) -> (Tensor[(7, 14, 9), int32], Tensor[(7, 14, 9), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) {
  %454 = cast(%var_2206, dtype="int32") /* ty=Tensor[(7, 14, 9), int32] */;
  %455 = shape_of(%var_2205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%var_2205, dtype="int32") /* ty=Tensor[(7, 14, 9), int32] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %458 = cast(%var_2205, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
  %459 = cast(%var_2232, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %460 = reshape(%459, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %461 = left_shift(%456, %457) /* ty=Tensor[(7, 14, 9), int32] */;
  %462 = sinh(%458) /* ty=Tensor[(7, 14, 9), float32] */;
  %463 = @func_788(%460) /* ty=Tensor[(8, 15, 15), float64] */;
  (%461, %462, %463, %var_2232)
}

def @func_4763() -> (Tensor[(1800), float64], Tensor[(4, 8, 7), float32], Tensor[(224), float32]) {
  %464 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
  %465 = cast(meta[relay.Constant][26] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %466 = reshape(%465, newshape=[4, 8, 7]) /* ty=Tensor[(4, 8, 7), float32] */;
  %467 = %464.0;
  %468 = @func_2272(%466) /* ty=Tensor[(4, 8, 7), float32] */;
  (%467, %468, meta[relay.Constant][26] /* ty=Tensor[(224), float32] */)
}

def @func_7242() -> Tensor[(1800), float64] {
  @func_5301() /* ty=Tensor[(1800), float64] */
}

def @func_2272(%var_2266: Tensor[(4, 8, 7), float32]) -> Tensor[(4, 8, 7), float32] {
  %469 = cast(%var_2266, dtype="float32") /* ty=Tensor[(4, 8, 7), float32] */;
  asinh(%469) /* ty=Tensor[(4, 8, 7), float32] */
}

def @func_5655(%var_5653: Tensor[(180), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
  %470 = @func_5095() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %471 = cast(%var_5653, dtype="float64") /* ty=Tensor[(180), float64] */;
  %472 = reshape(%471, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
  %473 = @func_1025(%472) /* ty=(Tensor[(6, 10, 3), float64],) */;
  %474 = %470.0;
  %475 = %473.0;
  (%474, %475, %var_5653)
}

def @func_4746() -> Tensor[(16, 14, 8), float64] {
  %476 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %476.0
}

def @func_7334(%var_7265: Tensor[(1800), float64], %var_7301: Tensor[(2080), int32], %var_7318: Tensor[(8, 15, 15), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(70), int64], Tensor[(210), int64], Tensor[(1800), float64], Tensor[(104, 20), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 14, 8), float64], Tensor[(8, 15, 15), float32], Tensor[(8, 15, 15), int32]) {
  %477 = cast(meta[relay.Constant][29] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %478 = cast(%var_7301, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %479 = cast(%var_7265, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %480 = reshape(%477, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
  %481 = reshape(%478, newshape=[104, 20]) /* ty=Tensor[(104, 20), int32] */;
  %482 = reshape(%479, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %483 = @func_3682(%480, %481, %482) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) */;
  %484 = cast(meta[relay.Constant][27] /* ty=Tensor[(70), int64] */, dtype="int64") /* ty=Tensor[(70), int64] */;
  %485 = cast(meta[relay.Constant][28] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %486 = cast(%var_7265, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %487 = reshape(%484, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), int64] */;
  %488 = reshape(%485, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int64] */;
  %489 = reshape(%486, newshape=[6, 300]) /* ty=Tensor[(6, 300), float64] */;
  %490 = @func_5388(%487, %488, %489) /* ty=(Tensor[(5, 3, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64]) */;
  %491 = %490.1;
  %492 = cast(%491, dtype="float32") /* ty=Tensor[(8, 15, 15), float32] */;
  %493 = acos(%492) /* ty=Tensor[(8, 15, 15), float32] */;
  %494 = cast(%var_7318, dtype="float32") /* ty=Tensor[(8, 15, 15), float32] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="float32") /* ty=Tensor[(8, 15, 15), float32] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %498 = cast(%491, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
  %499 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%493, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %502 = floor_divide(%500, %501) /* ty=Tensor[(8, 15, 15), float64] */;
  %503 = cast(%491, dtype="int32") /* ty=Tensor[(8, 15, 15), int32] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="int32") /* ty=Tensor[(8, 15, 15), int32] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %507 = @func_5032() /* ty=Tensor[(16, 14, 8), float64] */;
  %508 = %483.3;
  %509 = @func_5661() /* ty=Tensor[(16, 14, 8), float64] */;
  %510 = power(%496, %497) /* ty=Tensor[(8, 15, 15), float32] */;
  %511 = maximum(%505, %506) /* ty=Tensor[(8, 15, 15), int32] */;
  (%507, meta[relay.Constant][27] /* ty=Tensor[(70), int64] */, meta[relay.Constant][28] /* ty=Tensor[(210), int64] */, %var_7265, %508, meta[relay.Constant][29] /* ty=Tensor[(392), float64] */, %var_7301, %509, %510, %511)
}

def @func_4667(%var_4650: Tensor[(16, 14, 8), float32], %var_4659: int32, %var_4660: Tensor[(2080), int32]) -> (Tensor[(16, 14, 8), bool], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32]) {
  %512 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  %513 = cast(%var_4650, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %517 = cast(%var_4659, dtype="int32") /* ty=int32 */;
  %518 = cast(%var_4660, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %519 = reshape(%517, newshape=[]) /* ty=int32 */;
  %520 = reshape(%518, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), int32] */;
  %521 = @func_1808(%519, %520) /* ty=(Tensor[(16, 10, 13), bool],) */;
  %522 = greater(%515, %516) /* ty=Tensor[(16, 14, 8), bool] */;
  %523 = %521.0;
  (%522, %523, %var_4659, %var_4660)
}

def @func_7210(%var_7204: Tensor[(392), float64], %var_7205: Tensor[(2080), int32], %var_7207: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(2080), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882, 1), int32], Tensor[(1800), float64]) {
  %524 = cast(%var_7204, dtype="float64") /* ty=Tensor[(392), float64] */;
  %525 = cast(%var_7204, dtype="float64") /* ty=Tensor[(392), float64] */;
  %526 = cast(%var_7205, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %527 = cast(meta[relay.Constant][30] /* ty=Tensor[(882, 1), int32] */, dtype="int32") /* ty=Tensor[(882, 1), int32] */;
  %528 = cast(%var_7207, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %529 = reshape(%524, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %530 = reshape(%525, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %531 = reshape(%526, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %532 = reshape(%527, newshape=[882]) /* ty=Tensor[(882), int32] */;
  %533 = reshape(%528, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %534 = @func_3588(%529, %530, %531, %532, %533) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */;
  %535 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  %536 = %534.2;
  (%535, %536, %var_7204, %var_7205, meta[relay.Constant][30] /* ty=Tensor[(882, 1), int32] */, %var_7207)
}

def @func_8589() -> (Tensor[(16, 14, 8), float64],) {
  %537 = @func_7583() /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) */;
  %538 = %537.1;
  (%538,)
}

def @func_7469(%var_7442: Tensor[(14, 9, 9), float32]) -> (Tensor[(14, 9, 9), bool], Tensor[(18), uint16], Tensor[(18), uint16], Tensor[(14, 9, 9), float64]) {
  %539 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 9, 9), float32] */, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %540 = shape_of(%var_7442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%var_7442, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %543 = cast(meta[relay.Constant][32] /* ty=Tensor[(18), uint16] */, dtype="uint16") /* ty=Tensor[(18), uint16] */;
  %544 = reshape(%543, newshape=[18]) /* ty=Tensor[(18), uint16] */;
  %545 = @func_4257(%544) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(6, 10, 3), float64], Tensor[(180), float64]) */;
  %546 = cast(%var_7442, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %547 = less(%541, %542) /* ty=Tensor[(14, 9, 9), bool] */;
  %548 = %545.2;
  %549 = atan(%546) /* ty=Tensor[(14, 9, 9), float64] */;
  (%547, %548, meta[relay.Constant][32] /* ty=Tensor[(18), uint16] */, %549)
}

def @main() -> Tensor[(3, 2, 15), float32] {
  %550 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 15), float32] */;
  log2(%550) /* ty=Tensor[(3, 2, 15), float32] */
}

def @func_597(%var_555: Tensor[(9, 8, 4), float64], %var_558: Tensor[(9, 8, 4), float64]) -> (Tensor[(9, 8, 4), bool], Tensor[(10, 13, ?), float64], Tensor[(13, 10), float32]) {
  %551 = cast(%var_555, dtype="float64") /* ty=Tensor[(9, 8, 4), float64] */;
  %552 = acosh(%551) /* ty=Tensor[(9, 8, 4), float64] */;
  %553 = cast(%var_558, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
  %554 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%552, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %557 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 10), float32] */, dtype="float32") /* ty=Tensor[(13, 10), float32] */;
  %558 = reshape(%557, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float32] */;
  %559 = @func_181(%558) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(10, 13, 1), float32], Tensor[(10, 13, ?), float64], Tensor[(10, 13, ?), uint64]) */;
  %560 = not_equal(%555, %556) /* ty=Tensor[(9, 8, 4), bool] */;
  %561 = %559.2;
  (%560, %561, meta[relay.Constant][34] /* ty=Tensor[(13, 10), float32] */)
}

def @func_8489() -> (Tensor[(16, 14, 8), float64],) {
  %562 = @func_5661() /* ty=Tensor[(16, 14, 8), float64] */;
  (%562,)
}

def @func_5794() -> Tensor[(16, 14, 8), float64] {
  %563 = @func_5095() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %563.0
}

def @func_4257(%var_4233: Tensor[(18), uint16]) -> (Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
  %564 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %565 = cast(%var_4233, dtype="uint16") /* ty=Tensor[(18), uint16] */;
  %566 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %567 = reshape(%565, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), uint16] */;
  %568 = reshape(%566, newshape=[]) /* ty=int32 */;
  %569 = @func_2767(%567, %568) /* ty=(Tensor[(10, 9, 2), uint16], Tensor[(16, 6, 14), bool], Tensor[(2080), int32], Tensor[(72), bool], Tensor[(336, 4), float32]) */;
  %570 = cast(meta[relay.Constant][35] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %571 = reshape(%570, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
  %572 = @func_1025(%571) /* ty=(Tensor[(6, 10, 3), float64],) */;
  %573 = %564.0;
  %574 = %569.2;
  %575 = %572.0;
  (%573, %574, %var_4233, 7 /* ty=int32 */, %575, meta[relay.Constant][35] /* ty=Tensor[(180), float64] */)
}

def @func_6665() -> Tensor[(16, 14, 8), float64] {
  @func_5661() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_4431(%var_4414: Tensor[(5, 7, 12), float64], %var_4418: Tensor[(216, 1), uint32]) -> (Tensor[(5, 7, 12), float64], Tensor[(80), float32], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64], Tensor[(216, 672), int8]) {
  %576 = cast(%var_4414, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %577 = cast(%var_4418, dtype="uint32") /* ty=Tensor[(216, 1), uint32] */;
  %578 = cast(meta[relay.Constant][36] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %579 = reshape(%577, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %580 = reshape(%578, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %581 = @func_1709(%579, %580) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %582 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 300), float64] */, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %583 = reshape(%582, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %584 = cast(meta[relay.Constant][36] /* ty=Tensor[(672), float32] */, dtype="int8") /* ty=Tensor[(672), int8] */;
  %585 = cast(%var_4418, dtype="int8") /* ty=Tensor[(216, 1), int8] */;
  %586 = atan(%576) /* ty=Tensor[(5, 7, 12), float64] */;
  %587 = %581.2;
  %588 = @func_788(%583) /* ty=Tensor[(8, 15, 15), float64] */;
  %589 = bitwise_xor(%584, %585) /* ty=Tensor[(216, 672), int8] */;
  (%586, %587, %588, meta[relay.Constant][37] /* ty=Tensor[(6, 300), float64] */, %589)
}

def @func_6847(%var_6836: Tensor[(192), float32]) -> (Tensor[(1800), float64], Tensor[(4, 6, 8), float64], Tensor[(192), float32], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
  %590 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
  %591 = cast(%var_6836, dtype="float32") /* ty=Tensor[(192), float32] */;
  %592 = reshape(%591, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), float32] */;
  %593 = cast(meta[relay.Constant][38] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %594 = reshape(%593, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
  %595 = @func_1025(%594) /* ty=(Tensor[(6, 10, 3), float64],) */;
  %596 = %590.0;
  %597 = @func_5514(%592) /* ty=Tensor[(4, 6, 8), float64] */;
  %598 = %595.0;
  (%596, %597, %var_6836, %598, meta[relay.Constant][38] /* ty=Tensor[(180), float64] */)
}

def @func_7624(%var_7614: int32) -> (Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64], int32, int32, Tensor[(2080), int32]) {
  %599 = @func_7071() /* ty=(Tensor[(16, 14, 8), float64], Tensor[(1344), uint8], Tensor[(16, 6, 14), float64]) */;
  %600 = %599.0;
  %601 = cast(%600, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %602 = cast(%var_7614, dtype="int32") /* ty=int32 */;
  %603 = cast(meta[relay.Constant][39] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %604 = reshape(%601, newshape=[16, 14, 8]) /* ty=Tensor[(16, 14, 8), float32] */;
  %605 = reshape(%602, newshape=[]) /* ty=int32 */;
  %606 = reshape(%603, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %607 = @func_4667(%604, %605, %606) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32]) */;
  %608 = @func_6665() /* ty=Tensor[(16, 14, 8), float64] */;
  %609 = %607.2;
  (%608, %600, %609, %var_7614, meta[relay.Constant][39] /* ty=Tensor[(2080), int32] */)
}

def @func_7363() -> (Tensor[(16, 14, 8), float64],) {
  %610 = @func_4532() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %611 = %610.0;
  (%611,)
}

def @func_8042(%var_8024: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), uint64],) {
  %612 = @func_7666() /* ty=Tensor[(16, 14, 8), float64] */;
  %613 = cast(%var_8024, dtype="uint64") /* ty=Tensor[(16, 14, 8), uint64] */;
  %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%612, dtype="uint64") /* ty=Tensor[(16, 14, 8), uint64] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %617 = right_shift(%615, %616) /* ty=Tensor[(16, 14, 8), uint64] */;
  (%617,)
}

def @func_7430() -> Tensor[(16, 14, 8), bool] {
  %618 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
  %618.1
}

def @func_7688() -> (Tensor[(16, 14, 8), float64],) {
  %619 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %620 = %619.0;
  (%620,)
}

def @func_2138(%var_2074: Tensor[(11, 15, 13), float32], %var_2075: Tensor[(11, 15, 13), float32], %var_2084: Tensor[(11, 15, 13), float32]) -> (Tensor[(11, 15, 13), float32], Tensor[(11, 15, 13), bool], Tensor[(3, 14, 16), float32], Tensor[(40, 2), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(104, 20), int32], Tensor[(11, 15, 13), float32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8]) {
  %621 = cast(%var_2075, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
  %622 = shape_of(%var_2074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%var_2074, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %625 = cast(%var_2084, dtype="bool") /* ty=Tensor[(11, 15, 13), bool] */;
  %626 = shape_of(%var_2075, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%var_2075, dtype="bool") /* ty=Tensor[(11, 15, 13), bool] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %629 = cast(meta[relay.Constant][40] /* ty=Tensor[(40, 2), float32] */, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %630 = cast(meta[relay.Constant][41] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %631 = reshape(%629, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
  %632 = reshape(%630, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %633 = @func_1658(%631, %632) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) */;
  %634 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %635 = cast(meta[relay.Constant][42] /* ty=Tensor[(104, 20), int32] */, dtype="int32") /* ty=Tensor[(104, 20), int32] */;
  %636 = reshape(%634, newshape=[]) /* ty=int32 */;
  %637 = reshape(%635, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), int32] */;
  %638 = @func_1808(%636, %637) /* ty=(Tensor[(16, 10, 13), bool],) */;
  %639 = cast(%var_2074, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
  %640 = asin(%639) /* ty=Tensor[(11, 15, 13), float32] */;
  %641 = cast(%640, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
  %642 = cast(meta[relay.Constant][43] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %643 = reshape(%642, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint8] */;
  %644 = floor_divide(%623, %624) /* ty=Tensor[(11, 15, 13), float32] */;
  %645 = greater(%627, %628) /* ty=Tensor[(11, 15, 13), bool] */;
  %646 = %633.0;
  %647 = %638.0;
  %648 = cos(%641) /* ty=Tensor[(11, 15, 13), float32] */;
  %649 = @func_1582(%643) /* ty=Tensor[(16, 6, 14), bool] */;
  (%644, %645, %646, meta[relay.Constant][40] /* ty=Tensor[(40, 2), float32] */, meta[relay.Constant][41] /* ty=Tensor[(672), float32] */, %647, -2 /* ty=int32 */, meta[relay.Constant][42] /* ty=Tensor[(104, 20), int32] */, %648, %649, meta[relay.Constant][43] /* ty=Tensor[(1344), uint8] */)
}

def @func_7964() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float32]) {
  %650 = @func_6559() /* ty=(Tensor[(1800), float64],) */;
  %651 = @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */;
  %652 = %650.0;
  %653 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
  %654 = %651.0;
  (%652, %653, %654)
}

def @func_7389() -> (Tensor[(16, 14, 8), float32],) {
  %655 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %656 = %655.0;
  (%656,)
}

def @func_4491() -> (Tensor[(1800), float64],) {
  %657 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
  %658 = %657.0;
  (%658,)
}

def @func_2619(%var_2549: Tensor[(4, 9, 2), bool], %var_2550: Tensor[(4, 9, 2), bool], %var_2555: Tensor[(1344), uint8], %var_2567: int32, %var_2568: Tensor[(2080), int32]) -> (Tensor[(4, 9, 2), bool], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32], Tensor[(40, 2), float32], Tensor[(2145), float32], Tensor[(10, ?, 8), float32]) {
  %659 = cast(%var_2550, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
  %660 = shape_of(%var_2549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%var_2549, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %663 = cast(%var_2555, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %664 = reshape(%663, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint8] */;
  %665 = cast(meta[relay.Constant][44] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %666 = reshape(%665, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float32] */;
  %667 = cast(%var_2567, dtype="int32") /* ty=int32 */;
  %668 = cast(%var_2568, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %669 = reshape(%667, newshape=[]) /* ty=int32 */;
  %670 = reshape(%668, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), int32] */;
  %671 = @func_1808(%669, %670) /* ty=(Tensor[(16, 10, 13), bool],) */;
  %672 = cast(meta[relay.Constant][45] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %673 = cast(meta[relay.Constant][45] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %674 = cast(meta[relay.Constant][45] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %675 = reshape(%672, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %676 = reshape(%673, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %677 = reshape(%674, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %678 = @func_2138(%675, %676, %677) /* ty=(Tensor[(11, 15, 13), float32], Tensor[(11, 15, 13), bool], Tensor[(3, 14, 16), float32], Tensor[(40, 2), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(104, 20), int32], Tensor[(11, 15, 13), float32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8]) */;
  %679 = %678.3;
  %680 = cast(%679, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %681 = @func_969(%666) /* ty=Tensor[(3, 14, 16), float32] */;
  %682 = cast(%681, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
  %683 = reshape(%680, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
  %684 = reshape(%682, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %685 = @func_1658(%683, %684) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) */;
  %686 = logical_and(%661, %662) /* ty=Tensor[(4, 9, 2), bool] */;
  %687 = @func_1582(%664) /* ty=Tensor[(16, 6, 14), bool] */;
  %688 = %671.0;
  %689 = %685.2;
  (%686, %687, %var_2555, %681, meta[relay.Constant][44] /* ty=Tensor[(672), float32] */, %688, %var_2567, %var_2568, %679, meta[relay.Constant][45] /* ty=Tensor[(2145), float32] */, %689)
}

def @func_2767(%var_2746: Tensor[(1, 9, 2), uint16], %var_2755: int32) -> (Tensor[(10, 9, 2), uint16], Tensor[(16, 6, 14), bool], Tensor[(2080), int32], Tensor[(72), bool], Tensor[(336, 4), float32]) {
  %690 = cast(%var_2746, dtype="uint16") /* ty=Tensor[(1, 9, 2), uint16] */;
  %691 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 9, 2), uint16] */, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %692 = cast(meta[relay.Constant][47] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %693 = cast(meta[relay.Constant][47] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %694 = cast(meta[relay.Constant][48] /* ty=Tensor[(336, 4), uint8] */, dtype="uint8") /* ty=Tensor[(336, 4), uint8] */;
  %695 = cast(%var_2755, dtype="int32") /* ty=int32 */;
  %696 = cast(meta[relay.Constant][49] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %697 = reshape(%692, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), bool] */;
  %698 = reshape(%693, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), bool] */;
  %699 = reshape(%694, newshape=[1344]) /* ty=Tensor[(1344), uint8] */;
  %700 = reshape(%695, newshape=[]) /* ty=int32 */;
  %701 = reshape(%696, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %702 = @func_2619(%697, %698, %699, %700, %701) /* ty=(Tensor[(4, 9, 2), bool], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32], Tensor[(40, 2), float32], Tensor[(2145), float32], Tensor[(10, ?, 8), float32]) */;
  %703 = cast(meta[relay.Constant][47] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %704 = cast(%var_2755, dtype="bool") /* ty=bool */;
  %705 = cast(meta[relay.Constant][48] /* ty=Tensor[(336, 4), uint8] */, dtype="float32") /* ty=Tensor[(336, 4), float32] */;
  %706 = logical_xor(%690, %691) /* ty=Tensor[(10, 9, 2), uint16] */;
  %707 = %702.1;
  %708 = less_equal(%703, %704) /* ty=Tensor[(72), bool] */;
  %709 = sigmoid(%705) /* ty=Tensor[(336, 4), float32] */;
  (%706, %707, meta[relay.Constant][49] /* ty=Tensor[(2080), int32] */, %708, %709)
}

def @func_6155(%var_6128: float64, %var_6129: Tensor[(180), float64], %var_6140: Tensor[(1568), float32]) -> (Tensor[(16, 14, 8), bool], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(16, 14, 8), bool], float64, Tensor[(180), float64], Tensor[(108, 2), uint32], Tensor[(1568), float64]) {
  %710 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
  %711 = cast(meta[relay.Constant][50] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %712 = cast(meta[relay.Constant][51] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %713 = reshape(%711, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %714 = reshape(%712, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %715 = @func_1709(%713, %714) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %716 = cast(meta[relay.Constant][51] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %717 = cast(%var_6128, dtype="float64") /* ty=float64 */;
  %718 = cast(%var_6129, dtype="float64") /* ty=Tensor[(180), float64] */;
  %719 = reshape(%716, newshape=[8, 84]) /* ty=Tensor[(8, 84), float32] */;
  %720 = reshape(%717, newshape=[]) /* ty=float64 */;
  %721 = reshape(%718, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %722 = @func_5278(%719, %720, %721) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(8, 84), float32], Tensor[(12, 16, 11), float64], Tensor[(2112), float64], Tensor[(16, 14, 8), bool], Tensor[(6, 10, 3), float64], Tensor[(180), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), int32], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64]) */;
  %723 = cast(%var_6128, dtype="int16") /* ty=int16 */;
  %724 = cast(%var_6140, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %725 = %715.0;
  %726 = cast(%725, dtype="uint32") /* ty=Tensor[(3, 6, 12), uint32] */;
  %727 = reshape(%723, newshape=[]) /* ty=int16 */;
  %728 = reshape(%724, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %729 = reshape(%726, newshape=[108, 2]) /* ty=Tensor[(108, 2), uint32] */;
  %730 = @func_3363(%727, %728, %729) /* ty=(Tensor[(672), float32], Tensor[(108, 2), uint32], Tensor[(168, 4), float32], Tensor[(7, 16, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(90, 20), float64], Tensor[(7, 16, 14), float64], Tensor[(2145), float32], Tensor[(780), float64]) */;
  %731 = cast(%var_6140, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %732 = %710.1;
  %733 = %722.4;
  %734 = %730.1;
  %735 = erf(%731) /* ty=Tensor[(1568), float64] */;
  (%732, %725, meta[relay.Constant][50] /* ty=Tensor[(216), uint32] */, meta[relay.Constant][51] /* ty=Tensor[(672), float32] */, %733, %var_6128, %var_6129, %734, %735)
}

def @func_3588(%var_3531: Tensor[(14, 4, 7), float64], %var_3532: Tensor[(14, 4, 7), float64], %var_3545: Tensor[(2080), int32], %var_3552: Tensor[(882), int32], %var_3553: Tensor[(1800), float64]) -> (Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) {
  %736 = cast(%var_3532, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %737 = shape_of(%var_3531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_3531, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %740 = cast(-10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %741 = cast(%var_3545, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %742 = reshape(%740, newshape=[]) /* ty=int32 */;
  %743 = reshape(%741, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), int32] */;
  %744 = @func_1808(%742, %743) /* ty=(Tensor[(16, 10, 13), bool],) */;
  %745 = cast(meta[relay.Constant][52] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %746 = cast(meta[relay.Constant][52] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %747 = reshape(%745, newshape=[9, 8, 4]) /* ty=Tensor[(9, 8, 4), float64] */;
  %748 = reshape(%746, newshape=[9, 8, 4]) /* ty=Tensor[(9, 8, 4), float64] */;
  %749 = @func_597(%747, %748) /* ty=(Tensor[(9, 8, 4), bool], Tensor[(10, 13, ?), float64], Tensor[(13, 10), float32]) */;
  %750 = cast(%var_3552, dtype="int32") /* ty=Tensor[(882), int32] */;
  %751 = cast(%var_3552, dtype="int32") /* ty=Tensor[(882), int32] */;
  %752 = cast(%var_3553, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %753 = reshape(%750, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), int32] */;
  %754 = reshape(%751, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), int32] */;
  %755 = reshape(%752, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %756 = @func_2244(%753, %754, %755) /* ty=(Tensor[(7, 14, 9), int32], Tensor[(7, 14, 9), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %757 = cast(%var_3532, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %758 = asin(%757) /* ty=Tensor[(14, 4, 7), float32] */;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %760 = acos(%759) /* ty=Tensor[(14, 4, 7), float64] */;
  %761 = cast(%760, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %762 = cast(-10 /* ty=int32 */, dtype="uint64") /* ty=uint64 */;
  %763 = floor_mod(%738, %739) /* ty=Tensor[(14, 4, 7), float64] */;
  %764 = %744.0;
  %765 = %749.0;
  %766 = %756.2;
  %767 = multiply(%761, %762) /* ty=Tensor[(14, 4, 7), uint64] */;
  (%763, %764, %var_3545, %765, meta[relay.Constant][52] /* ty=Tensor[(288), float64] */, %766, %var_3552, %var_3553, %767)
}

def @func_788(%var_778: Tensor[(8, 15, 15), float64]) -> Tensor[(8, 15, 15), float64] {
  %768 = cast(%var_778, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
  sqrt(%768) /* ty=Tensor[(8, 15, 15), float64] */
}

def @func_7028() -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float64]) {
  %769 = @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */;
  %770 = %769.0;
  %771 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
  (%770, %771)
}

def @func_4182() -> (Tensor[(1800), float64],) {
  %772 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %773 = %772.2;
  (%773,)
}

def @func_3964(%var_3959: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), int64],) {
  %774 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %775 = %774.0;
  %776 = cast(%var_3959, dtype="int64") /* ty=Tensor[(16, 14, 8), int64] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%775, dtype="int64") /* ty=Tensor[(16, 14, 8), int64] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %780 = bitwise_or(%778, %779) /* ty=Tensor[(16, 14, 8), int64] */;
  (%780,)
}

def @func_8387(%var_8369: Tensor[(5, 14, 6), int32], %var_8370: Tensor[(5, 14, 6), int32]) -> (Tensor[(16, 14, 8), float64], Tensor[(5, 14, 6), int16]) {
  %781 = cast(%var_8370, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
  %782 = shape_of(%var_8369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%var_8369, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %785 = right_shift(%783, %784) /* ty=Tensor[(5, 14, 6), int32] */;
  %786 = cast(%785, dtype="int16") /* ty=Tensor[(5, 14, 6), int16] */;
  %787 = shape_of(%var_8369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%var_8369, dtype="int16") /* ty=Tensor[(5, 14, 6), int16] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %790 = @func_7482() /* ty=Tensor[(16, 14, 8), float64] */;
  %791 = bitwise_or(%788, %789) /* ty=Tensor[(5, 14, 6), int16] */;
  (%790, %791)
}

def @func_8327() -> Tensor[(16, 14, 8), float64] {
  %792 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %792.0
}

def @func_4938(%var_4932: Tensor[(2, 15, 16), float64]) -> (Tensor[(2, 15, 16), float64],) {
  %793 = cast(%var_4932, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
  %794 = cosh(%793) /* ty=Tensor[(2, 15, 16), float64] */;
  (%794,)
}

def @func_4084() -> (Tensor[(16, 14, 8), float64],) {
  %795 = @func_4045() /* ty=Tensor[(16, 14, 8), float64] */;
  (%795,)
}

def @func_5872() -> (Tensor[(16, 14, 8), float64],) {
  %796 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
  (%796,)
}

def @func_1453(%var_1442: Tensor[(13, 16, 15), float64]) -> (Tensor[(13, 16, 15), float64],) {
  %797 = cast(%var_1442, dtype="float64") /* ty=Tensor[(13, 16, 15), float64] */;
  %798 = cos(%797) /* ty=Tensor[(13, 16, 15), float64] */;
  (%798,)
}

def @func_5278(%var_5201: Tensor[(8, 84), float32], %var_5204: float64, %var_5230: Tensor[(180), float64]) -> (Tensor[(3, 14, 16), float32], Tensor[(8, 84), float32], Tensor[(12, 16, 11), float64], Tensor[(2112), float64], Tensor[(16, 14, 8), bool], Tensor[(6, 10, 3), float64], Tensor[(180), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), int32], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64]) {
  %799 = cast(%var_5201, dtype="float32") /* ty=Tensor[(8, 84), float32] */;
  %800 = reshape(%799, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float32] */;
  %801 = cast(%var_5204, dtype="float64") /* ty=float64 */;
  %802 = cast(meta[relay.Constant][53] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %803 = reshape(%801, newshape=[]) /* ty=float64 */;
  %804 = reshape(%802, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %805 = @func_3811(%803, %804) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %806 = @func_4709() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %807 = %806.0;
  %808 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 14, 8), float64] */, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %809 = shape_of(%807, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%807, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %812 = cast(%var_5230, dtype="float64") /* ty=Tensor[(180), float64] */;
  %813 = reshape(%812, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
  %814 = @func_1025(%813) /* ty=(Tensor[(6, 10, 3), float64],) */;
  %815 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  %816 = cast(%815, dtype="int32") /* ty=Tensor[(16, 14, 8), int32] */;
  %817 = cast(%var_5204, dtype="int32") /* ty=int32 */;
  %818 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %819 = @func_969(%800) /* ty=Tensor[(3, 14, 16), float32] */;
  %820 = %805.0;
  %821 = less_equal(%810, %811) /* ty=Tensor[(16, 14, 8), bool] */;
  %822 = %814.0;
  %823 = @func_5032() /* ty=Tensor[(16, 14, 8), float64] */;
  %824 = left_shift(%816, %817) /* ty=Tensor[(16, 14, 8), int32] */;
  %825 = %818.0;
  %826 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
  (%819, %var_5201, %820, meta[relay.Constant][53] /* ty=Tensor[(2112), float64] */, %821, %822, %var_5230, %823, %824, %825, %826)
}

def @func_4499() -> Tensor[(16, 14, 8), float64] {
  %827 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %827.0
}

def @func_4630() -> (Tensor[(1800), float64],) {
  %828 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %829 = %828.2;
  (%829,)
}

def @func_5514(%var_5467: Tensor[(4, 6, 8), float32]) -> Tensor[(4, 6, 8), float64] {
  %830 = cast(%var_5467, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  %831 = atan(%830) /* ty=Tensor[(4, 6, 8), float32] */;
  %832 = cast(%831, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
  log(%832) /* ty=Tensor[(4, 6, 8), float64] */
}

def @func_8132() -> Tensor[(16, 14, 8), float64] {
  %833 = @func_5095() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %833.0
}

def @func_3872() -> (Tensor[(16, 14, 8), float64],) {
  %834 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %835 = %834.0;
  (%835,)
}

def @func_6606() -> Tensor[(14, 4, 13), float32] {
  %836 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 4, 13), bool] */, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %837 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(14, 4, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 4, 13), bool] */, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %840 = logical_or(%838, %839) /* ty=Tensor[(14, 4, 13), bool] */;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(14, 4, 13), float32] */;
  asinh(%841) /* ty=Tensor[(14, 4, 13), float32] */
}

def @func_6235(%var_6200: Tensor[(18), uint16], %var_6205: Tensor[(672), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(16, 14, 8), float64], Tensor[(672), float32], Tensor[(180), float64]) {
  %842 = cast(%var_6200, dtype="uint16") /* ty=Tensor[(18), uint16] */;
  %843 = cast(1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %844 = reshape(%842, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), uint16] */;
  %845 = reshape(%843, newshape=[]) /* ty=int32 */;
  %846 = @func_2767(%844, %845) /* ty=(Tensor[(10, 9, 2), uint16], Tensor[(16, 6, 14), bool], Tensor[(2080), int32], Tensor[(72), bool], Tensor[(336, 4), float32]) */;
  %847 = cast(%var_6205, dtype="float32") /* ty=Tensor[(672), float32] */;
  %848 = cast(1 /* ty=int32 */, dtype="float64") /* ty=float64 */;
  %849 = cast(meta[relay.Constant][57] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %850 = reshape(%847, newshape=[8, 84]) /* ty=Tensor[(8, 84), float32] */;
  %851 = reshape(%848, newshape=[]) /* ty=float64 */;
  %852 = reshape(%849, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %853 = @func_5278(%850, %851, %852) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(8, 84), float32], Tensor[(12, 16, 11), float64], Tensor[(2112), float64], Tensor[(16, 14, 8), bool], Tensor[(6, 10, 3), float64], Tensor[(180), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), int32], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64]) */;
  %854 = @func_5794() /* ty=Tensor[(16, 14, 8), float64] */;
  %855 = %846.2;
  %856 = %853.9;
  (%854, %855, %var_6200, 1 /* ty=int32 */, %856, %var_6205, meta[relay.Constant][57] /* ty=Tensor[(180), float64] */)
}

def @func_5591(%var_5560: int32, %var_5561: Tensor[(9, 16, 3), int32]) -> Tensor[(9, 16, 3), bool] {
  %857 = cast(%var_5560, dtype="int32") /* ty=int32 */;
  %858 = cast(%var_5561, dtype="int32") /* ty=Tensor[(9, 16, 3), int32] */;
  %859 = multiply(%857, %858) /* ty=Tensor[(9, 16, 3), int32] */;
  %860 = cast(%859, dtype="bool") /* ty=Tensor[(9, 16, 3), bool] */;
  %861 = shape_of(%var_5561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%var_5561, dtype="bool") /* ty=Tensor[(9, 16, 3), bool] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%862, %863) /* ty=Tensor[(9, 16, 3), bool] */
}

def @func_4889() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) {
  %864 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
  %865 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %866 = %865.0;
  %867 = cast(%866, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %868 = acosh(%867) /* ty=Tensor[(16, 14, 8), float32] */;
  %869 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %870 = %869.0;
  %871 = cast(%870, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %872 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%868, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %875 = %864.0;
  %876 = logical_and(%873, %874) /* ty=Tensor[(16, 14, 8), bool] */;
  (%875, %876)
}

def @func_5661() -> Tensor[(16, 14, 8), float64] {
  %877 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %877.0
}

def @func_5095() -> (Tensor[(16, 14, 8), float64],) {
  %878 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %879 = %878.0;
  (%879,)
}

def @func_6963(%var_6875: Tensor[(11, 6, 16), float64], %var_6882: Tensor[(392), float64], %var_6883: Tensor[(2080), int32], %var_6921: Tensor[(672), float32], %var_6945: int16) -> (Tensor[(11, 6, 16), float64], Tensor[(14, 28), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(1800), float64], Tensor[(11, 6, 16), float64], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(7, 16, 14), bool], int16, Tensor[(392, 4), float32], Tensor[(1800), float64]) {
  %880 = cast(%var_6875, dtype="float64") /* ty=Tensor[(11, 6, 16), float64] */;
  %881 = cast(%var_6882, dtype="float64") /* ty=Tensor[(392), float64] */;
  %882 = cast(%var_6883, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %883 = cast(meta[relay.Constant][58] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %884 = reshape(%881, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
  %885 = reshape(%882, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %886 = reshape(%883, newshape=[900, 2]) /* ty=Tensor[(900, 2), float64] */;
  %887 = @func_4145(%884, %885, %886) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(882), int32], Tensor[(14, 28), float64], Tensor[(2080), int32], Tensor[(900, 2), float64]) */;
  %888 = cast(%var_6875, dtype="float64") /* ty=Tensor[(11, 6, 16), float64] */;
  %889 = cast(meta[relay.Constant][59] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %890 = cast(%var_6921, dtype="float32") /* ty=Tensor[(672), float32] */;
  %891 = reshape(%889, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %892 = reshape(%890, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %893 = @func_1709(%891, %892) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %894 = cast(meta[relay.Constant][59] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %895 = cast(%var_6921, dtype="float32") /* ty=Tensor[(672), float32] */;
  %896 = reshape(%894, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %897 = reshape(%895, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %898 = @func_1709(%896, %897) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %899 = cast(%var_6945, dtype="int16") /* ty=int16 */;
  %900 = cast(meta[relay.Constant][60] /* ty=Tensor[(392, 4), float32] */, dtype="float32") /* ty=Tensor[(392, 4), float32] */;
  %901 = %893.0;
  %902 = cast(%901, dtype="uint32") /* ty=Tensor[(3, 6, 12), uint32] */;
  %903 = reshape(%899, newshape=[]) /* ty=int16 */;
  %904 = reshape(%900, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %905 = reshape(%902, newshape=[108, 2]) /* ty=Tensor[(108, 2), uint32] */;
  %906 = @func_3363(%903, %904, %905) /* ty=(Tensor[(672), float32], Tensor[(108, 2), uint32], Tensor[(168, 4), float32], Tensor[(7, 16, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(90, 20), float64], Tensor[(7, 16, 14), float64], Tensor[(2145), float32], Tensor[(780), float64]) */;
  %907 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
  %908 = log(%880) /* ty=Tensor[(11, 6, 16), float64] */;
  %909 = %887.2;
  %910 = erf(%888) /* ty=Tensor[(11, 6, 16), float64] */;
  %911 = %898.2;
  %912 = %906.3;
  %913 = %907.0;
  (%908, %909, %var_6882, %var_6883, meta[relay.Constant][58] /* ty=Tensor[(1800), float64] */, %910, %901, meta[relay.Constant][59] /* ty=Tensor[(216), uint32] */, %var_6921, %911, %912, %var_6945, meta[relay.Constant][60] /* ty=Tensor[(392, 4), float32] */, %913)
}

def @func_969(%var_963: Tensor[(3, 14, 16), float32]) -> Tensor[(3, 14, 16), float32] {
  %914 = cast(%var_963, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
  cosh(%914) /* ty=Tensor[(3, 14, 16), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1025(%var_991: Tensor[(6, 10, 3), float64]) -> (Tensor[(6, 10, 3), float64],) {
  %0 = cast(%var_991, dtype="float64") /* ty=Tensor[(6, 10, 3), float64] */;
  %1 = cosh(%0) /* ty=Tensor[(6, 10, 3), float64] */;
  (%1,)
}

def @func_6785() -> (Tensor[(16, 14, 8), float64], Tensor[(14, 4, 13), float32], Tensor[(16, 14, 8), bool]) {
  %13 = fn () -> (Tensor[(16, 14, 8), float64], Tensor[(14, 4, 13), float32], Tensor[(16, 14, 8), bool]) {
    %2 = @func_5872() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %3 = @func_5661() /* ty=Tensor[(16, 14, 8), float64] */;
    %4 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
    %5 = %4.1;
    %6 = cast(%5, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
    %7 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
    %8 = cast(%3, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
    %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %10 = %2.0;
    %11 = @func_6606() /* ty=Tensor[(14, 4, 13), float32] */;
    %12 = logical_or(%8, %9) /* ty=Tensor[(16, 14, 8), bool] */;
    (%10, %11, %12)
  };
  %13() /* ty=(Tensor[(16, 14, 8), float64], Tensor[(14, 4, 13), float32], Tensor[(16, 14, 8), bool]) */
}

def @func_4711() -> (Tensor[(16, 14, 8), float64],) {
  @func_4709() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @main() -> Tensor[(3, 2, 15), float32] {
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 15), float32] */;
  log2(%14) /* ty=Tensor[(3, 2, 15), float32] */
}

def @func_4763() -> (Tensor[(1800), float64], Tensor[(4, 8, 7), float32], Tensor[(224), float32]) {
  %15 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %17 = reshape(%16, newshape=[4, 8, 7]) /* ty=Tensor[(4, 8, 7), float32] */;
  %18 = %15.0;
  %19 = @func_2272(%17) /* ty=Tensor[(4, 8, 7), float32] */;
  (%18, %19, meta[relay.Constant][1] /* ty=Tensor[(224), float32] */)
}

def @func_5995(%var_5993: Tensor[(1800), float64]) -> Tensor[(1800), float64] {
  @func_5992(%var_5993) /* ty=Tensor[(1800), float64] */
}

def @func_8390(%var_8388: Tensor[(5, 14, 6), int32], %var_8389: Tensor[(5, 14, 6), int32]) -> (Tensor[(16, 14, 8), float64], Tensor[(5, 14, 6), int16]) {
  %31 = fn (%var_8369: Tensor[(5, 14, 6), int32], %var_8370: Tensor[(5, 14, 6), int32]) -> (Tensor[(16, 14, 8), float64], Tensor[(5, 14, 6), int16]) {
    %20 = cast(%var_8370, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
    %21 = shape_of(%var_8369, dtype="int32") /* ty=Tensor[(3), int32] */;
    %22 = cast(%var_8369, dtype="int32") /* ty=Tensor[(5, 14, 6), int32] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %24 = right_shift(%22, %23) /* ty=Tensor[(5, 14, 6), int32] */;
    %25 = cast(%24, dtype="int16") /* ty=Tensor[(5, 14, 6), int16] */;
    %26 = shape_of(%var_8369, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%var_8369, dtype="int16") /* ty=Tensor[(5, 14, 6), int16] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %29 = @func_7482() /* ty=Tensor[(16, 14, 8), float64] */;
    %30 = bitwise_or(%27, %28) /* ty=Tensor[(5, 14, 6), int16] */;
    (%29, %30)
  };
  %31(%var_8388, %var_8389) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(5, 14, 6), int16]) */
}

def @func_4747() -> Tensor[(16, 14, 8), float64] {
  %33 = fn () -> Tensor[(16, 14, 8), float64] {
    %32 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %32.0
  };
  %33() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_7469(%var_7442: Tensor[(14, 9, 9), float32]) -> (Tensor[(14, 9, 9), bool], Tensor[(18), uint16], Tensor[(18), uint16], Tensor[(14, 9, 9), float64]) {
  %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 9, 9), float32] */, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %35 = shape_of(%var_7442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%var_7442, dtype="bool") /* ty=Tensor[(14, 9, 9), bool] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(18), uint16] */, dtype="uint16") /* ty=Tensor[(18), uint16] */;
  %39 = reshape(%38, newshape=[18]) /* ty=Tensor[(18), uint16] */;
  %40 = @func_4257(%39) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(6, 10, 3), float64], Tensor[(180), float64]) */;
  %41 = cast(%var_7442, dtype="float64") /* ty=Tensor[(14, 9, 9), float64] */;
  %42 = less(%36, %37) /* ty=Tensor[(14, 9, 9), bool] */;
  %43 = %40.2;
  %44 = atan(%41) /* ty=Tensor[(14, 9, 9), float64] */;
  (%42, %43, meta[relay.Constant][3] /* ty=Tensor[(18), uint16] */, %44)
}

def @func_3595(%var_3590: Tensor[(14, 4, 7), float64], %var_3591: Tensor[(14, 4, 7), float64], %var_3592: Tensor[(2080), int32], %var_3593: Tensor[(882), int32], %var_3594: Tensor[(1800), float64]) -> (Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) {
  @func_3588(%var_3590, %var_3591, %var_3592, %var_3593, %var_3594) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */
}

def @func_6847(%var_6836: Tensor[(192), float32]) -> (Tensor[(1800), float64], Tensor[(4, 6, 8), float64], Tensor[(192), float32], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
  %45 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
  %46 = cast(%var_6836, dtype="float32") /* ty=Tensor[(192), float32] */;
  %47 = reshape(%46, newshape=[4, 6, 8]) /* ty=Tensor[(4, 6, 8), float32] */;
  %48 = cast(meta[relay.Constant][4] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %49 = reshape(%48, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
  %50 = @func_1025(%49) /* ty=(Tensor[(6, 10, 3), float64],) */;
  %51 = %45.0;
  %52 = @func_5514(%47) /* ty=Tensor[(4, 6, 8), float64] */;
  %53 = %50.0;
  (%51, %52, %var_6836, %53, meta[relay.Constant][4] /* ty=Tensor[(180), float64] */)
}

def @func_8150() -> (Tensor[(16, 14, 8), float32],) {
  %56 = fn () -> (Tensor[(16, 14, 8), float32],) {
    %54 = @func_7389() /* ty=(Tensor[(16, 14, 8), float32],) */;
    %55 = %54.0;
    (%55,)
  };
  %56() /* ty=(Tensor[(16, 14, 8), float32],) */
}

def @func_7214(%var_7211: Tensor[(392), float64], %var_7212: Tensor[(2080), int32], %var_7213: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(2080), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882, 1), int32], Tensor[(1800), float64]) {
  %70 = fn (%var_7204: Tensor[(392), float64], %var_7205: Tensor[(2080), int32], %var_7207: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(2080), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882, 1), int32], Tensor[(1800), float64]) {
    %57 = cast(%var_7204, dtype="float64") /* ty=Tensor[(392), float64] */;
    %58 = cast(%var_7204, dtype="float64") /* ty=Tensor[(392), float64] */;
    %59 = cast(%var_7205, dtype="int32") /* ty=Tensor[(2080), int32] */;
    %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(882, 1), int32] */, dtype="int32") /* ty=Tensor[(882, 1), int32] */;
    %61 = cast(%var_7207, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %62 = reshape(%57, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
    %63 = reshape(%58, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
    %64 = reshape(%59, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
    %65 = reshape(%60, newshape=[882]) /* ty=Tensor[(882), int32] */;
    %66 = reshape(%61, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %67 = @func_3588(%62, %63, %64, %65, %66) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */;
    %68 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
    %69 = %67.2;
    (%68, %69, %var_7204, %var_7205, meta[relay.Constant][5] /* ty=Tensor[(882, 1), int32] */, %var_7207)
  };
  %70(%var_7211, %var_7212, %var_7213) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(2080), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882, 1), int32], Tensor[(1800), float64]) */
}

def @func_4631() -> (Tensor[(1800), float64],) {
  %73 = fn () -> (Tensor[(1800), float64],) {
    %71 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
    %72 = %71.2;
    (%72,)
  };
  %73() /* ty=(Tensor[(1800), float64],) */
}

def @func_4765() -> (Tensor[(1800), float64], Tensor[(4, 8, 7), float32], Tensor[(224), float32]) {
  @func_4763() /* ty=(Tensor[(1800), float64], Tensor[(4, 8, 7), float32], Tensor[(224), float32]) */
}

def @func_6097(%var_6095: Tensor[(672), float32]) -> (Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 14, 8), float32]) {
  @func_6094(%var_6095) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 14, 8), float32]) */
}

def @func_8327() -> Tensor[(16, 14, 8), float64] {
  %74 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %74.0
}

def @func_7237() -> (Tensor[(1800), float64],) {
  @func_7235() /* ty=(Tensor[(1800), float64],) */
}

def @func_5806() -> (Tensor[(16, 14, 8), float64],) {
  @func_5804() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_7073() -> (Tensor[(16, 14, 8), float64], Tensor[(1344), uint8], Tensor[(16, 6, 14), float64]) {
  @func_7071() /* ty=(Tensor[(16, 14, 8), float64], Tensor[(1344), uint8], Tensor[(16, 6, 14), float64]) */
}

def @func_6665() -> Tensor[(16, 14, 8), float64] {
  @func_5661() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_7626(%var_7625: int32) -> (Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64], int32, int32, Tensor[(2080), int32]) {
  %86 = fn (%var_7614: int32) -> (Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64], int32, int32, Tensor[(2080), int32]) {
    %75 = @func_7071() /* ty=(Tensor[(16, 14, 8), float64], Tensor[(1344), uint8], Tensor[(16, 6, 14), float64]) */;
    %76 = %75.0;
    %77 = cast(%76, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
    %78 = cast(%var_7614, dtype="int32") /* ty=int32 */;
    %79 = cast(meta[relay.Constant][6] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
    %80 = reshape(%77, newshape=[16, 14, 8]) /* ty=Tensor[(16, 14, 8), float32] */;
    %81 = reshape(%78, newshape=[]) /* ty=int32 */;
    %82 = reshape(%79, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
    %83 = @func_4667(%80, %81, %82) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32]) */;
    %84 = @func_6665() /* ty=Tensor[(16, 14, 8), float64] */;
    %85 = %83.2;
    (%84, %76, %85, %var_7614, meta[relay.Constant][6] /* ty=Tensor[(2080), int32] */)
  };
  %86(%var_7625) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64], int32, int32, Tensor[(2080), int32]) */
}

def @func_1456(%var_1454: Tensor[(13, 16, 15), float64]) -> (Tensor[(13, 16, 15), float64],) {
  @func_1453(%var_1454) /* ty=(Tensor[(13, 16, 15), float64],) */
}

def @func_7071() -> (Tensor[(16, 14, 8), float64], Tensor[(1344), uint8], Tensor[(16, 6, 14), float64]) {
  %87 = @func_5752() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %88 = cast(meta[relay.Constant][7] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %89 = reshape(%88, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint8] */;
  %90 = @func_1582(%89) /* ty=Tensor[(16, 6, 14), bool] */;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(16, 6, 14), float64] */;
  %92 = %87.0;
  %93 = acos(%91) /* ty=Tensor[(16, 6, 14), float64] */;
  (%92, meta[relay.Constant][7] /* ty=Tensor[(1344), uint8] */, %93)
}

def @func_7242() -> Tensor[(1800), float64] {
  @func_5301() /* ty=Tensor[(1800), float64] */
}

def @func_5795() -> Tensor[(16, 14, 8), float64] {
  %95 = fn () -> Tensor[(16, 14, 8), float64] {
    %94 = @func_5095() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %94.0
  };
  %95() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_3814(%var_3812: float64, %var_3813: Tensor[(12, 16, 11), float64]) -> (Tensor[(12, 16, 11), float64],) {
  %99 = fn (%var_3801: float64, %var_3802: Tensor[(12, 16, 11), float64]) -> (Tensor[(12, 16, 11), float64],) {
    %96 = cast(%var_3801, dtype="float64") /* ty=float64 */;
    %97 = cast(%var_3802, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
    %98 = subtract(%96, %97) /* ty=Tensor[(12, 16, 11), float64] */;
    (%98,)
  };
  %99(%var_3812, %var_3813) /* ty=(Tensor[(12, 16, 11), float64],) */
}

def @func_3948() -> (Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) {
  %100 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %101 = %100.0;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %104 = reshape(%103, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %105 = sin(%102) /* ty=Tensor[(16, 14, 8), float32] */;
  %106 = @func_788(%104) /* ty=Tensor[(8, 15, 15), float64] */;
  (%105, %106, meta[relay.Constant][8] /* ty=Tensor[(1800), float64] */)
}

def @func_5992(%var_5978: Tensor[(1800), float64]) -> Tensor[(1800), float64] {
  %107 = @func_5301() /* ty=Tensor[(1800), float64] */;
  %108 = cast(%var_5978, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(1), int32] */;
  %110 = cast(%107, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?), int8] */;
  %112 = bitwise_or(%110, %111) /* ty=Tensor[(1800), int8] */;
  %113 = cast(%var_5978, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(1), int32] */;
  %115 = cast(%112, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?), float64] */;
  floor_mod(%115, %116) /* ty=Tensor[(1800), float64] */
}

def @func_6094(%var_6080: Tensor[(672), float32]) -> (Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 14, 8), float32]) {
  %117 = cast(%var_6080, dtype="float32") /* ty=Tensor[(672), float32] */;
  %118 = reshape(%117, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float32] */;
  %119 = @func_4045() /* ty=Tensor[(16, 14, 8), float64] */;
  %120 = cast(%119, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %121 = @func_969(%118) /* ty=Tensor[(3, 14, 16), float32] */;
  %122 = sigmoid(%120) /* ty=Tensor[(16, 14, 8), float32] */;
  (%121, %var_6080, %122)
}

def @func_8329() -> Tensor[(16, 14, 8), float64] {
  @func_8327() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_2248(%var_2245: Tensor[(7, 14, 9), int32], %var_2246: Tensor[(7, 14, 9), int32], %var_2247: Tensor[(1800), float64]) -> (Tensor[(7, 14, 9), int32], Tensor[(7, 14, 9), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) {
  %133 = fn (%var_2205: Tensor[(7, 14, 9), int32], %var_2206: Tensor[(7, 14, 9), int32], %var_2232: Tensor[(1800), float64]) -> (Tensor[(7, 14, 9), int32], Tensor[(7, 14, 9), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) {
    %123 = cast(%var_2206, dtype="int32") /* ty=Tensor[(7, 14, 9), int32] */;
    %124 = shape_of(%var_2205, dtype="int32") /* ty=Tensor[(3), int32] */;
    %125 = cast(%var_2205, dtype="int32") /* ty=Tensor[(7, 14, 9), int32] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %127 = cast(%var_2205, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
    %128 = cast(%var_2232, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %129 = reshape(%128, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
    %130 = left_shift(%125, %126) /* ty=Tensor[(7, 14, 9), int32] */;
    %131 = sinh(%127) /* ty=Tensor[(7, 14, 9), float32] */;
    %132 = @func_788(%129) /* ty=Tensor[(8, 15, 15), float64] */;
    (%130, %131, %132, %var_2232)
  };
  %133(%var_2245, %var_2246, %var_2247) /* ty=(Tensor[(7, 14, 9), int32], Tensor[(7, 14, 9), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */
}

def @func_7998(%var_7997: Tensor[(16, 14, 8), float32]) -> (Tensor[(16, 14, 8), int8], Tensor[(6, 10, 3), float64], Tensor[(192), float32], Tensor[(16, 14, 8), float32]) {
  %145 = fn (%var_7976: Tensor[(16, 14, 8), float32]) -> (Tensor[(16, 14, 8), int8], Tensor[(6, 10, 3), float64], Tensor[(192), float32], Tensor[(16, 14, 8), float32]) {
    %134 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
    %135 = cast(%var_7976, dtype="int8") /* ty=Tensor[(16, 14, 8), int8] */;
    %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %137 = cast(%134, dtype="int8") /* ty=Tensor[(16, 14, 8), int8] */;
    %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %139 = cast(meta[relay.Constant][9] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %140 = reshape(%139, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %141 = @func_6847(%140) /* ty=(Tensor[(1800), float64], Tensor[(4, 6, 8), float64], Tensor[(192), float32], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) */;
    %142 = multiply(%137, %138) /* ty=Tensor[(16, 14, 8), int8] */;
    %143 = %141.3;
    %144 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
    (%142, %143, meta[relay.Constant][9] /* ty=Tensor[(192), float32] */, %144)
  };
  %145(%var_7997) /* ty=(Tensor[(16, 14, 8), int8], Tensor[(6, 10, 3), float64], Tensor[(192), float32], Tensor[(16, 14, 8), float32]) */
}

def @func_6058() -> (Tensor[(16, 14, 8), float64],) {
  %146 = @func_5794() /* ty=Tensor[(16, 14, 8), float64] */;
  (%146,)
}

def @func_6343(%var_6307: Tensor[(2080), int32], %var_6315: Tensor[(1344), uint8]) -> (Tensor[(16, 14, 8), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(1800), float64]) {
  %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %148 = cast(%var_6307, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %149 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %150 = %149.2;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %152 = reshape(%147, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
  %153 = reshape(%148, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %154 = reshape(%151, newshape=[900, 2]) /* ty=Tensor[(900, 2), float64] */;
  %155 = @func_4145(%152, %153, %154) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(882), int32], Tensor[(14, 28), float64], Tensor[(2080), int32], Tensor[(900, 2), float64]) */;
  %156 = cast(%var_6315, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
  %157 = reshape(%156, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint8] */;
  %158 = cast(%150, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %159 = %155.0;
  %160 = @func_1582(%157) /* ty=Tensor[(16, 6, 14), bool] */;
  %161 = atan(%158) /* ty=Tensor[(1800), float64] */;
  (%159, meta[relay.Constant][10] /* ty=Tensor[(392), float64] */, %var_6307, %160, %var_6315, %161)
}

def @func_4431(%var_4414: Tensor[(5, 7, 12), float64], %var_4418: Tensor[(216, 1), uint32]) -> (Tensor[(5, 7, 12), float64], Tensor[(80), float32], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64], Tensor[(216, 672), int8]) {
  %162 = cast(%var_4414, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %163 = cast(%var_4418, dtype="uint32") /* ty=Tensor[(216, 1), uint32] */;
  %164 = cast(meta[relay.Constant][11] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %165 = reshape(%163, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %166 = reshape(%164, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %167 = @func_1709(%165, %166) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %168 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 300), float64] */, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
  %169 = reshape(%168, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(672), float32] */, dtype="int8") /* ty=Tensor[(672), int8] */;
  %171 = cast(%var_4418, dtype="int8") /* ty=Tensor[(216, 1), int8] */;
  %172 = atan(%162) /* ty=Tensor[(5, 7, 12), float64] */;
  %173 = %167.2;
  %174 = @func_788(%169) /* ty=Tensor[(8, 15, 15), float64] */;
  %175 = bitwise_xor(%170, %171) /* ty=Tensor[(216, 672), int8] */;
  (%172, %173, %174, meta[relay.Constant][12] /* ty=Tensor[(6, 300), float64] */, %175)
}

def @func_8538(%var_8527: Tensor[(780), float64], %var_8535: Tensor[(90, 2), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(1800), float64], Tensor[(9, 16, 3), bool], int32, Tensor[(1, 432), int32], Tensor[(15, 13, 4), bool], Tensor[(780), float32], Tensor[(108, 2), uint32], Tensor[(90, 2), float64], Tensor[(1568), float32]) {
  %176 = @func_7964() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float32]) */;
  %177 = cast(-4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %178 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 432), int32] */, dtype="int32") /* ty=Tensor[(1, 432), int32] */;
  %179 = reshape(%177, newshape=[]) /* ty=int32 */;
  %180 = reshape(%178, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), int32] */;
  %181 = cast(%var_8527, dtype="float64") /* ty=Tensor[(780), float64] */;
  %182 = reshape(%181, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), float64] */;
  %183 = @func_3163(%182) /* ty=(Tensor[(15, 13, 4), bool], Tensor[(1344), uint8], Tensor[(2145), float32], Tensor[(80), float32], Tensor[(216), uint32], Tensor[(672), float32]) */;
  %184 = cast(%var_8527, dtype="float32") /* ty=Tensor[(780), float32] */;
  %185 = cast(-4 /* ty=int32 */, dtype="float64") /* ty=float64 */;
  %186 = cast(%var_8535, dtype="float64") /* ty=Tensor[(90, 2), float64] */;
  %187 = cast(meta[relay.Constant][14] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %188 = reshape(%185, newshape=[]) /* ty=float64 */;
  %189 = reshape(%186, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %190 = reshape(%187, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %191 = @func_6155(%188, %189, %190) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(16, 14, 8), bool], float64, Tensor[(180), float64], Tensor[(108, 2), uint32], Tensor[(1568), float64]) */;
  %192 = @func_8209() /* ty=Tensor[(16, 14, 8), float64] */;
  %193 = %176.0;
  %194 = @func_5591(%179, %180) /* ty=Tensor[(9, 16, 3), bool] */;
  %195 = %183.0;
  %196 = log2(%184) /* ty=Tensor[(780), float32] */;
  %197 = %191.7;
  (%192, %193, %194, -4 /* ty=int32 */, meta[relay.Constant][13] /* ty=Tensor[(1, 432), int32] */, %195, %196, %197, %var_8535, meta[relay.Constant][14] /* ty=Tensor[(1568), float32] */)
}

def @func_6559() -> (Tensor[(1800), float64],) {
  %198 = @func_4630() /* ty=(Tensor[(1800), float64],) */;
  %199 = %198.0;
  (%199,)
}

def @func_6561() -> (Tensor[(1800), float64],) {
  @func_6559() /* ty=(Tensor[(1800), float64],) */
}

def @func_7391() -> (Tensor[(16, 14, 8), float32],) {
  @func_7389() /* ty=(Tensor[(16, 14, 8), float32],) */
}

def @func_2275(%var_2273: Tensor[(4, 8, 7), float32]) -> Tensor[(4, 8, 7), float32] {
  @func_2272(%var_2273) /* ty=Tensor[(4, 8, 7), float32] */
}

def @func_1712(%var_1710: Tensor[(3, 6, 12), uint32], %var_1711: Tensor[(672), float32]) -> (Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) {
  %211 = fn (%var_1696: Tensor[(3, 6, 12), uint32], %var_1705: Tensor[(672), float32]) -> (Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) {
    %200 = cast(%var_1696, dtype="uint32") /* ty=Tensor[(3, 6, 12), uint32] */;
    %201 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(3, 6, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 6, 12), uint32] */, dtype="uint32") /* ty=Tensor[(3, 6, 12), uint32] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %205 = cast(%var_1705, dtype="float32") /* ty=Tensor[(672), float32] */;
    %206 = reshape(%204, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
    %207 = reshape(%205, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %208 = @func_1658(%206, %207) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) */;
    %209 = logical_xor(%202, %203) /* ty=Tensor[(3, 6, 12), uint32] */;
    %210 = %208.1;
    (%209, %210, meta[relay.Constant][16] /* ty=Tensor[(80), float32] */, %var_1705)
  };
  %211(%var_1710, %var_1711) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */
}

def @func_6474() -> (Tensor[(16, 14, 8), float32],) {
  @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */
}

def @func_6969(%var_6964: Tensor[(11, 6, 16), float64], %var_6965: Tensor[(392), float64], %var_6966: Tensor[(2080), int32], %var_6967: Tensor[(672), float32], %var_6968: int16) -> (Tensor[(11, 6, 16), float64], Tensor[(14, 28), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(1800), float64], Tensor[(11, 6, 16), float64], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(7, 16, 14), bool], int16, Tensor[(392, 4), float32], Tensor[(1800), float64]) {
  %246 = fn (%var_6875: Tensor[(11, 6, 16), float64], %var_6882: Tensor[(392), float64], %var_6883: Tensor[(2080), int32], %var_6921: Tensor[(672), float32], %var_6945: int16) -> (Tensor[(11, 6, 16), float64], Tensor[(14, 28), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(1800), float64], Tensor[(11, 6, 16), float64], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(7, 16, 14), bool], int16, Tensor[(392, 4), float32], Tensor[(1800), float64]) {
    %212 = cast(%var_6875, dtype="float64") /* ty=Tensor[(11, 6, 16), float64] */;
    %213 = cast(%var_6882, dtype="float64") /* ty=Tensor[(392), float64] */;
    %214 = cast(%var_6883, dtype="int32") /* ty=Tensor[(2080), int32] */;
    %215 = cast(meta[relay.Constant][17] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %216 = reshape(%213, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
    %217 = reshape(%214, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
    %218 = reshape(%215, newshape=[900, 2]) /* ty=Tensor[(900, 2), float64] */;
    %219 = @func_4145(%216, %217, %218) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(882), int32], Tensor[(14, 28), float64], Tensor[(2080), int32], Tensor[(900, 2), float64]) */;
    %220 = cast(%var_6875, dtype="float64") /* ty=Tensor[(11, 6, 16), float64] */;
    %221 = cast(meta[relay.Constant][18] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
    %222 = cast(%var_6921, dtype="float32") /* ty=Tensor[(672), float32] */;
    %223 = reshape(%221, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
    %224 = reshape(%222, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %225 = @func_1709(%223, %224) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
    %226 = cast(meta[relay.Constant][18] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
    %227 = cast(%var_6921, dtype="float32") /* ty=Tensor[(672), float32] */;
    %228 = reshape(%226, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
    %229 = reshape(%227, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %230 = @func_1709(%228, %229) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
    %231 = cast(%var_6945, dtype="int16") /* ty=int16 */;
    %232 = cast(meta[relay.Constant][19] /* ty=Tensor[(392, 4), float32] */, dtype="float32") /* ty=Tensor[(392, 4), float32] */;
    %233 = %225.0;
    %234 = cast(%233, dtype="uint32") /* ty=Tensor[(3, 6, 12), uint32] */;
    %235 = reshape(%231, newshape=[]) /* ty=int16 */;
    %236 = reshape(%232, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
    %237 = reshape(%234, newshape=[108, 2]) /* ty=Tensor[(108, 2), uint32] */;
    %238 = @func_3363(%235, %236, %237) /* ty=(Tensor[(672), float32], Tensor[(108, 2), uint32], Tensor[(168, 4), float32], Tensor[(7, 16, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(90, 20), float64], Tensor[(7, 16, 14), float64], Tensor[(2145), float32], Tensor[(780), float64]) */;
    %239 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
    %240 = log(%212) /* ty=Tensor[(11, 6, 16), float64] */;
    %241 = %219.2;
    %242 = erf(%220) /* ty=Tensor[(11, 6, 16), float64] */;
    %243 = %230.2;
    %244 = %238.3;
    %245 = %239.0;
    (%240, %241, %var_6882, %var_6883, meta[relay.Constant][17] /* ty=Tensor[(1800), float64] */, %242, %233, meta[relay.Constant][18] /* ty=Tensor[(216), uint32] */, %var_6921, %243, %244, %var_6945, meta[relay.Constant][19] /* ty=Tensor[(392, 4), float32] */, %245)
  };
  %246(%var_6964, %var_6965, %var_6966, %var_6967, %var_6968) /* ty=(Tensor[(11, 6, 16), float64], Tensor[(14, 28), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(1800), float64], Tensor[(11, 6, 16), float64], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(7, 16, 14), bool], int16, Tensor[(392, 4), float32], Tensor[(1800), float64]) */
}

def @func_8996(%var_8994: Tensor[(392), float64], %var_8995: Tensor[(1800), float64]) -> (Tensor[(420), int32], Tensor[(882), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(1800), float64]) {
  %257 = fn (%var_8989: Tensor[(392), float64], %var_8991: Tensor[(1800), float64]) -> (Tensor[(420), int32], Tensor[(882), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(1800), float64]) {
    %247 = @func_8844() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(420), int32]) */;
    %248 = cast(%var_8989, dtype="float64") /* ty=Tensor[(392), float64] */;
    %249 = cast(meta[relay.Constant][20] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
    %250 = cast(%var_8991, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %251 = reshape(%248, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
    %252 = reshape(%249, newshape=[104, 20]) /* ty=Tensor[(104, 20), int32] */;
    %253 = reshape(%250, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %254 = @func_3682(%251, %252, %253) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) */;
    %255 = %247.2;
    %256 = %254.4;
    (%255, %256, %var_8989, meta[relay.Constant][20] /* ty=Tensor[(2080), int32] */, %var_8991)
  };
  %257(%var_8994, %var_8995) /* ty=(Tensor[(420), int32], Tensor[(882), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(1800), float64]) */
}

def @func_7859() -> Tensor[(1800), float64] {
  %258 = @func_7235() /* ty=(Tensor[(1800), float64],) */;
  %258.0
}

def @func_3163(%var_3143: Tensor[(15, 13, 4), float64]) -> (Tensor[(15, 13, 4), bool], Tensor[(1344), uint8], Tensor[(2145), float32], Tensor[(80), float32], Tensor[(216), uint32], Tensor[(672), float32]) {
  %259 = cast(%var_3143, dtype="float64") /* ty=Tensor[(15, 13, 4), float64] */;
  %260 = cosh(%259) /* ty=Tensor[(15, 13, 4), float64] */;
  %261 = cast(%var_3143, dtype="bool") /* ty=Tensor[(15, 13, 4), bool] */;
  %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%260, dtype="bool") /* ty=Tensor[(15, 13, 4), bool] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %265 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %266 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %267 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %268 = reshape(%265, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %269 = reshape(%266, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %270 = reshape(%267, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
  %271 = @func_2138(%268, %269, %270) /* ty=(Tensor[(11, 15, 13), float32], Tensor[(11, 15, 13), bool], Tensor[(3, 14, 16), float32], Tensor[(40, 2), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(104, 20), int32], Tensor[(11, 15, 13), float32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8]) */;
  %272 = cast(meta[relay.Constant][22] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %273 = cast(meta[relay.Constant][23] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %274 = reshape(%272, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %275 = reshape(%273, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %276 = @func_1709(%274, %275) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %277 = greater(%263, %264) /* ty=Tensor[(15, 13, 4), bool] */;
  %278 = %271.10;
  %279 = %276.2;
  (%277, %278, meta[relay.Constant][21] /* ty=Tensor[(2145), float32] */, %279, meta[relay.Constant][22] /* ty=Tensor[(216), uint32] */, meta[relay.Constant][23] /* ty=Tensor[(672), float32] */)
}

def @func_8305(%var_8303: Tensor[(78), float32], %var_8304: Tensor[(4, 168), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(1800), float64], Tensor[(13, 3, 2), float64], Tensor[(78), float32], Tensor[(16, 14, 8), float64], Tensor[(672), float32], Tensor[(216), uint32], Tensor[(4, 168), float32], Tensor[(2080), float64], Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) {
  @func_8301(%var_8303, %var_8304) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(1800), float64], Tensor[(13, 3, 2), float64], Tensor[(78), float32], Tensor[(16, 14, 8), float64], Tensor[(672), float32], Tensor[(216), uint32], Tensor[(4, 168), float32], Tensor[(2080), float64], Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) */
}

def @func_3495() -> (Tensor[(16, 14, 8), float64],) {
  %282 = fn () -> (Tensor[(16, 14, 8), float64],) {
    %280 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
    %281 = log(%280) /* ty=Tensor[(16, 14, 8), float64] */;
    (%281,)
  };
  %282() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_5019(%var_5000: Tensor[(392), float64], %var_5001: Tensor[(2080), int32], %var_5002: Tensor[(882), int32], %var_5003: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(12, 16, 11), float64], float64, Tensor[(2112), float64], Tensor[(16, 14, 8), float32]) {
  %283 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %284 = %283.0;
  %285 = cast(%284, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %286 = cast(%var_5000, dtype="float64") /* ty=Tensor[(392), float64] */;
  %287 = cast(%var_5000, dtype="float64") /* ty=Tensor[(392), float64] */;
  %288 = cast(%var_5001, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %289 = cast(%var_5002, dtype="int32") /* ty=Tensor[(882), int32] */;
  %290 = cast(%var_5003, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %291 = reshape(%286, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %292 = reshape(%287, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
  %293 = reshape(%288, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %294 = reshape(%289, newshape=[882]) /* ty=Tensor[(882), int32] */;
  %295 = reshape(%290, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %296 = @func_3588(%291, %292, %293, %294, %295) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */;
  %297 = cast(-4.24915f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %298 = cast(meta[relay.Constant][25] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %299 = reshape(%297, newshape=[]) /* ty=float64 */;
  %300 = reshape(%298, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %301 = @func_3811(%299, %300) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %302 = cast(%284, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %303 = atanh(%302) /* ty=Tensor[(16, 14, 8), float32] */;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
  %305 = asin(%285) /* ty=Tensor[(16, 14, 8), float32] */;
  %306 = %296.5;
  %307 = %301.0;
  %308 = sqrt(%304) /* ty=Tensor[(16, 14, 8), float32] */;
  (%305, %306, %var_5000, %var_5001, %var_5002, %var_5003, %307, -4.24915f64 /* ty=float64 */, meta[relay.Constant][25] /* ty=Tensor[(2112), float64] */, %308)
}

def @func_8590() -> (Tensor[(16, 14, 8), float64],) {
  %311 = fn () -> (Tensor[(16, 14, 8), float64],) {
    %309 = @func_7583() /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) */;
    %310 = %309.1;
    (%310,)
  };
  %311() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_600(%var_598: Tensor[(9, 8, 4), float64], %var_599: Tensor[(9, 8, 4), float64]) -> (Tensor[(9, 8, 4), bool], Tensor[(10, 13, ?), float64], Tensor[(13, 10), float32]) {
  %323 = fn (%var_555: Tensor[(9, 8, 4), float64], %var_558: Tensor[(9, 8, 4), float64]) -> (Tensor[(9, 8, 4), bool], Tensor[(10, 13, ?), float64], Tensor[(13, 10), float32]) {
    %312 = cast(%var_555, dtype="float64") /* ty=Tensor[(9, 8, 4), float64] */;
    %313 = acosh(%312) /* ty=Tensor[(9, 8, 4), float64] */;
    %314 = cast(%var_558, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
    %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%313, dtype="bool") /* ty=Tensor[(9, 8, 4), bool] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %318 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 10), float32] */, dtype="float32") /* ty=Tensor[(13, 10), float32] */;
    %319 = reshape(%318, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float32] */;
    %320 = @func_181(%319) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(10, 13, 1), float32], Tensor[(10, 13, ?), float64], Tensor[(10, 13, ?), uint64]) */;
    %321 = not_equal(%316, %317) /* ty=Tensor[(9, 8, 4), bool] */;
    %322 = %320.2;
    (%321, %322, meta[relay.Constant][26] /* ty=Tensor[(13, 10), float32] */)
  };
  %323(%var_598, %var_599) /* ty=(Tensor[(9, 8, 4), bool], Tensor[(10, 13, ?), float64], Tensor[(13, 10), float32]) */
}

def @func_4709() -> (Tensor[(16, 14, 8), float64],) {
  %324 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %325 = %324.0;
  (%325,)
}

def @func_6607() -> Tensor[(14, 4, 13), float32] {
  %332 = fn () -> Tensor[(14, 4, 13), float32] {
    %326 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 4, 13), bool] */, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
    %327 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(14, 4, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %328 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 4, 13), bool] */, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
    %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %330 = logical_or(%328, %329) /* ty=Tensor[(14, 4, 13), bool] */;
    %331 = cast(%330, dtype="float32") /* ty=Tensor[(14, 4, 13), float32] */;
    asinh(%331) /* ty=Tensor[(14, 4, 13), float32] */
  };
  %332() /* ty=Tensor[(14, 4, 13), float32] */
}

def @func_6391(%var_6389: Tensor[(13, 3, 2), float32], %var_6390: Tensor[(13, 3, 2), float32]) -> (Tensor[(13, 3, 2), float64],) {
  %340 = fn (%var_6374: Tensor[(13, 3, 2), float32], %var_6375: Tensor[(13, 3, 2), float32]) -> (Tensor[(13, 3, 2), float64],) {
    %333 = cast(%var_6375, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
    %334 = shape_of(%var_6374, dtype="int32") /* ty=Tensor[(3), int32] */;
    %335 = cast(%var_6374, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
    %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %337 = divide(%335, %336) /* ty=Tensor[(13, 3, 2), float32] */;
    %338 = cast(%337, dtype="float64") /* ty=Tensor[(13, 3, 2), float64] */;
    %339 = cosh(%338) /* ty=Tensor[(13, 3, 2), float64] */;
    (%339,)
  };
  %340(%var_6389, %var_6390) /* ty=(Tensor[(13, 3, 2), float64],) */
}

def @func_6347(%var_6345: Tensor[(2080), int32], %var_6346: Tensor[(1344), uint8]) -> (Tensor[(16, 14, 8), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(1800), float64]) {
  @func_6343(%var_6345, %var_6346) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(1800), float64]) */
}

def @func_7029() -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float64]) {
  %344 = fn () -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float64]) {
    %341 = @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */;
    %342 = %341.0;
    %343 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
    (%342, %343)
  };
  %344() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float64]) */
}

def @func_4145(%var_4133: Tensor[(14, 28), float64], %var_4134: Tensor[(2080), int32], %var_4135: Tensor[(900, 2), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(882), int32], Tensor[(14, 28), float64], Tensor[(2080), int32], Tensor[(900, 2), float64]) {
  %345 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %346 = cast(%var_4133, dtype="float64") /* ty=Tensor[(14, 28), float64] */;
  %347 = cast(%var_4134, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %348 = cast(%var_4135, dtype="float64") /* ty=Tensor[(900, 2), float64] */;
  %349 = reshape(%346, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
  %350 = reshape(%347, newshape=[104, 20]) /* ty=Tensor[(104, 20), int32] */;
  %351 = reshape(%348, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %352 = @func_3682(%349, %350, %351) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) */;
  %353 = %345.0;
  %354 = %352.4;
  (%353, %354, %var_4133, %var_4134, %var_4135)
}

def @func_8558() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64]) {
  @func_8556() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64]) */
}

def @func_6667() -> Tensor[(16, 14, 8), float64] {
  @func_6665() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_5341() -> (Tensor[(16, 14, 8), float32],) {
  @func_5339() /* ty=(Tensor[(16, 14, 8), float32],) */
}

def @func_7667() -> Tensor[(16, 14, 8), float64] {
  %355 = fn () -> Tensor[(16, 14, 8), float64] {
    @func_5032() /* ty=Tensor[(16, 14, 8), float64] */
  };
  %355() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_7162() -> (Tensor[(16, 14, 8), float64],) {
  %357 = fn () -> (Tensor[(16, 14, 8), float64],) {
    %356 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
    (%356,)
  };
  %357() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_5025(%var_5021: Tensor[(392), float64], %var_5022: Tensor[(2080), int32], %var_5023: Tensor[(882), int32], %var_5024: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(12, 16, 11), float64], float64, Tensor[(2112), float64], Tensor[(16, 14, 8), float32]) {
  @func_5019(%var_5021, %var_5022, %var_5023, %var_5024) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(12, 16, 11), float64], float64, Tensor[(2112), float64], Tensor[(16, 14, 8), float32]) */
}

def @func_5662() -> Tensor[(16, 14, 8), float64] {
  %359 = fn () -> Tensor[(16, 14, 8), float64] {
    %358 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %358.0
  };
  %359() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_6042(%var_6040: Tensor[(16, 14, 8), float64]) -> Tensor[(16, 14, 8), float64] {
  @func_6039(%var_6040) /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_3873() -> (Tensor[(16, 14, 8), float64],) {
  %362 = fn () -> (Tensor[(16, 14, 8), float64],) {
    %360 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %361 = %360.0;
    (%361,)
  };
  %362() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_4361(%var_4359: Tensor[(2, 15, 16), int8], %var_4360: Tensor[(2, 15, 16), int8]) -> (Tensor[(2, 15, 16), int8], Tensor[(8, 15, 15), float64]) {
  @func_4357(%var_4359, %var_4360) /* ty=(Tensor[(2, 15, 16), int8], Tensor[(8, 15, 15), float64]) */
}

def @func_790(%var_789: Tensor[(8, 15, 15), float64]) -> Tensor[(8, 15, 15), float64] {
  %364 = fn (%var_778: Tensor[(8, 15, 15), float64]) -> Tensor[(8, 15, 15), float64] {
    %363 = cast(%var_778, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
    sqrt(%363) /* ty=Tensor[(8, 15, 15), float64] */
  };
  %364(%var_789) /* ty=Tensor[(8, 15, 15), float64] */
}

def @func_8576() -> Tensor[(1800), float64] {
  %365 = fn () -> Tensor[(1800), float64] {
    @func_7896() /* ty=Tensor[(1800), float64] */
  };
  %365() /* ty=Tensor[(1800), float64] */
}

def @func_5096() -> (Tensor[(16, 14, 8), float64],) {
  %368 = fn () -> (Tensor[(16, 14, 8), float64],) {
    %366 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %367 = %366.0;
    (%367,)
  };
  %368() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_2636(%var_2635: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
  %371 = fn (%var_2631: Tensor[(7, 14, 10), float32]) -> (Tensor[(7, 14, 10), float32],) {
    %369 = cast(%var_2631, dtype="float32") /* ty=Tensor[(7, 14, 10), float32] */;
    %370 = sqrt(%369) /* ty=Tensor[(7, 14, 10), float32] */;
    (%370,)
  };
  %371(%var_2635) /* ty=(Tensor[(7, 14, 10), float32],) */
}

def @func_8556() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64]) {
  %372 = @func_4491() /* ty=(Tensor[(1800), float64],) */;
  %373 = @func_5804() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %374 = %372.0;
  %375 = %373.0;
  (%374, %375)
}

def @func_4499() -> Tensor[(16, 14, 8), float64] {
  %376 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %376.0
}

def @func_3686(%var_3683: Tensor[(14, 28), float64], %var_3684: Tensor[(104, 20), int32], %var_3685: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) {
  %390 = fn (%var_3677: Tensor[(14, 28), float64], %var_3678: Tensor[(104, 20), int32], %var_3680: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) {
    %377 = cast(%var_3677, dtype="float64") /* ty=Tensor[(14, 28), float64] */;
    %378 = cast(%var_3677, dtype="float64") /* ty=Tensor[(14, 28), float64] */;
    %379 = cast(%var_3678, dtype="int32") /* ty=Tensor[(104, 20), int32] */;
    %380 = cast(meta[relay.Constant][29] /* ty=Tensor[(882), int32] */, dtype="int32") /* ty=Tensor[(882), int32] */;
    %381 = cast(%var_3680, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %382 = reshape(%377, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
    %383 = reshape(%378, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
    %384 = reshape(%379, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
    %385 = reshape(%380, newshape=[882]) /* ty=Tensor[(882), int32] */;
    %386 = reshape(%381, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %387 = @func_3588(%382, %383, %384, %385, %386) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */;
    %388 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
    %389 = %387.3;
    (%388, %389, %var_3677, %var_3678, meta[relay.Constant][29] /* ty=Tensor[(882), int32] */, %var_3680)
  };
  %390(%var_3683, %var_3684, %var_3685) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) */
}

def @func_8845() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(420), int32]) {
  %399 = fn () -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(420), int32]) {
    %391 = @func_4763() /* ty=(Tensor[(1800), float64], Tensor[(4, 8, 7), float32], Tensor[(224), float32]) */;
    %392 = cast(meta[relay.Constant][30] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
    %393 = cast(meta[relay.Constant][30] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
    %394 = reshape(%392, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
    %395 = reshape(%393, newshape=[5, 14, 6]) /* ty=Tensor[(5, 14, 6), int32] */;
    %396 = @func_8387(%394, %395) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(5, 14, 6), int16]) */;
    %397 = %391.0;
    %398 = %396.0;
    (%397, %398, meta[relay.Constant][30] /* ty=Tensor[(420), int32] */)
  };
  %399() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(420), int32]) */
}

def @func_8210() -> Tensor[(16, 14, 8), float64] {
  %401 = fn () -> Tensor[(16, 14, 8), float64] {
    %400 = @func_5804() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %400.0
  };
  %401() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_7339(%var_7336: Tensor[(1800), float64], %var_7337: Tensor[(2080), int32], %var_7338: Tensor[(8, 15, 15), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(70), int64], Tensor[(210), int64], Tensor[(1800), float64], Tensor[(104, 20), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 14, 8), float64], Tensor[(8, 15, 15), float32], Tensor[(8, 15, 15), int32]) {
  @func_7334(%var_7336, %var_7337, %var_7338) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(70), int64], Tensor[(210), int64], Tensor[(1800), float64], Tensor[(104, 20), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 14, 8), float64], Tensor[(8, 15, 15), float32], Tensor[(8, 15, 15), int32]) */
}

def @func_5754() -> (Tensor[(16, 14, 8), float64],) {
  @func_5752() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_6160(%var_6157: float64, %var_6158: Tensor[(180), float64], %var_6159: Tensor[(1568), float32]) -> (Tensor[(16, 14, 8), bool], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(16, 14, 8), bool], float64, Tensor[(180), float64], Tensor[(108, 2), uint32], Tensor[(1568), float64]) {
  @func_6155(%var_6157, %var_6158, %var_6159) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(16, 14, 8), bool], float64, Tensor[(180), float64], Tensor[(108, 2), uint32], Tensor[(1568), float64]) */
}

def @func_4501() -> Tensor[(16, 14, 8), float64] {
  @func_4499() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_8734() -> (Tensor[(16, 14, 8), float64],) {
  %403 = fn () -> (Tensor[(16, 14, 8), float64],) {
    %402 = @func_7666() /* ty=Tensor[(16, 14, 8), float64] */;
    (%402,)
  };
  %403() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_2771(%var_2769: Tensor[(1, 9, 2), uint16], %var_2770: int32) -> (Tensor[(10, 9, 2), uint16], Tensor[(16, 6, 14), bool], Tensor[(2080), int32], Tensor[(72), bool], Tensor[(336, 4), float32]) {
  @func_2767(%var_2769, %var_2770) /* ty=(Tensor[(10, 9, 2), uint16], Tensor[(16, 6, 14), bool], Tensor[(2080), int32], Tensor[(72), bool], Tensor[(336, 4), float32]) */
}

def @func_3757(%var_3754: Tensor[(392), float64], %var_3755: Tensor[(882), int32], %var_3756: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(16, 10, 13), bool], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882), int32], Tensor[(1800), float64]) {
  %419 = fn (%var_3729: Tensor[(392), float64], %var_3731: Tensor[(882), int32], %var_3732: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(16, 10, 13), bool], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882), int32], Tensor[(1800), float64]) {
    %404 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
    %405 = cast(%404, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
    %406 = cast(%var_3729, dtype="float64") /* ty=Tensor[(392), float64] */;
    %407 = cast(%var_3729, dtype="float64") /* ty=Tensor[(392), float64] */;
    %408 = cast(meta[relay.Constant][31] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
    %409 = cast(%var_3731, dtype="int32") /* ty=Tensor[(882), int32] */;
    %410 = cast(%var_3732, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %411 = reshape(%406, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
    %412 = reshape(%407, newshape=[14, 4, 7]) /* ty=Tensor[(14, 4, 7), float64] */;
    %413 = reshape(%408, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
    %414 = reshape(%409, newshape=[882]) /* ty=Tensor[(882), int32] */;
    %415 = reshape(%410, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %416 = @func_3588(%411, %412, %413, %414, %415) /* ty=(Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) */;
    %417 = cosh(%405) /* ty=Tensor[(16, 14, 8), float64] */;
    %418 = %416.1;
    (%417, %418, %var_3729, meta[relay.Constant][31] /* ty=Tensor[(2080), int32] */, %var_3731, %var_3732)
  };
  %419(%var_3754, %var_3755, %var_3756) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(16, 10, 13), bool], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(882), int32], Tensor[(1800), float64]) */
}

def @func_4357(%var_4341: Tensor[(2, 15, 16), int8], %var_4342: Tensor[(2, 15, 16), int8]) -> (Tensor[(2, 15, 16), int8], Tensor[(8, 15, 15), float64]) {
  %420 = cast(%var_4342, dtype="int8") /* ty=Tensor[(2, 15, 16), int8] */;
  %421 = shape_of(%var_4341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%var_4341, dtype="int8") /* ty=Tensor[(2, 15, 16), int8] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %424 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %425 = right_shift(%422, %423) /* ty=Tensor[(2, 15, 16), int8] */;
  %426 = %424.1;
  (%425, %426)
}

def @func_3950() -> (Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) {
  @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */
}

def @func_7748(%var_7746: Tensor[(480), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(2, 15, 16), float64], Tensor[(480), float64], Tensor[(16, 14, 8), float64], Tensor[(2, 15, 16), float64]) {
  @func_7745(%var_7746) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(2, 15, 16), float64], Tensor[(480), float64], Tensor[(16, 14, 8), float64], Tensor[(2, 15, 16), float64]) */
}

def @func_971(%var_970: Tensor[(3, 14, 16), float32]) -> Tensor[(3, 14, 16), float32] {
  %428 = fn (%var_963: Tensor[(3, 14, 16), float32]) -> Tensor[(3, 14, 16), float32] {
    %427 = cast(%var_963, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
    cosh(%427) /* ty=Tensor[(3, 14, 16), float32] */
  };
  %428(%var_970) /* ty=Tensor[(3, 14, 16), float32] */
}

def @func_6456() -> (Tensor[(16, 14, 8), float64],) {
  %429 = @func_4532() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %430 = %429.0;
  (%430,)
}

def @func_6458() -> (Tensor[(16, 14, 8), float64],) {
  @func_6456() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_7745(%var_7706: Tensor[(480), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(2, 15, 16), float64], Tensor[(480), float64], Tensor[(16, 14, 8), float64], Tensor[(2, 15, 16), float64]) {
  %431 = @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */;
  %432 = cast(%var_7706, dtype="float64") /* ty=Tensor[(480), float64] */;
  %433 = reshape(%432, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %434 = @func_4938(%433) /* ty=(Tensor[(2, 15, 16), float64],) */;
  %435 = @func_5872() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %436 = %434.0;
  %437 = cast(%436, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
  %438 = reshape(%437, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %439 = @func_4938(%438) /* ty=(Tensor[(2, 15, 16), float64],) */;
  %440 = %431.0;
  %441 = %435.0;
  %442 = %439.0;
  (%440, %436, %var_7706, %441, %442)
}

def @func_8917() -> (Tensor[(16, 14, 8), float32],) {
  %443 = @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */;
  %444 = %443.0;
  (%444,)
}

def @func_7897() -> Tensor[(1800), float64] {
  %446 = fn () -> Tensor[(1800), float64] {
    %445 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
    %445.2
  };
  %446() /* ty=Tensor[(1800), float64] */
}

def @func_2625(%var_2620: Tensor[(4, 9, 2), bool], %var_2621: Tensor[(4, 9, 2), bool], %var_2622: Tensor[(1344), uint8], %var_2623: int32, %var_2624: Tensor[(2080), int32]) -> (Tensor[(4, 9, 2), bool], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32], Tensor[(40, 2), float32], Tensor[(2145), float32], Tensor[(10, ?, 8), float32]) {
  %478 = fn (%var_2549: Tensor[(4, 9, 2), bool], %var_2550: Tensor[(4, 9, 2), bool], %var_2555: Tensor[(1344), uint8], %var_2567: int32, %var_2568: Tensor[(2080), int32]) -> (Tensor[(4, 9, 2), bool], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32], Tensor[(40, 2), float32], Tensor[(2145), float32], Tensor[(10, ?, 8), float32]) {
    %447 = cast(%var_2550, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
    %448 = shape_of(%var_2549, dtype="int32") /* ty=Tensor[(3), int32] */;
    %449 = cast(%var_2549, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
    %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %451 = cast(%var_2555, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
    %452 = reshape(%451, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint8] */;
    %453 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %454 = reshape(%453, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float32] */;
    %455 = cast(%var_2567, dtype="int32") /* ty=int32 */;
    %456 = cast(%var_2568, dtype="int32") /* ty=Tensor[(2080), int32] */;
    %457 = reshape(%455, newshape=[]) /* ty=int32 */;
    %458 = reshape(%456, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), int32] */;
    %459 = @func_1808(%457, %458) /* ty=(Tensor[(16, 10, 13), bool],) */;
    %460 = cast(meta[relay.Constant][33] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %461 = cast(meta[relay.Constant][33] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %462 = cast(meta[relay.Constant][33] /* ty=Tensor[(2145), float32] */, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %463 = reshape(%460, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
    %464 = reshape(%461, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
    %465 = reshape(%462, newshape=[11, 15, 13]) /* ty=Tensor[(11, 15, 13), float32] */;
    %466 = @func_2138(%463, %464, %465) /* ty=(Tensor[(11, 15, 13), float32], Tensor[(11, 15, 13), bool], Tensor[(3, 14, 16), float32], Tensor[(40, 2), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(104, 20), int32], Tensor[(11, 15, 13), float32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8]) */;
    %467 = %466.3;
    %468 = cast(%467, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
    %469 = @func_969(%454) /* ty=Tensor[(3, 14, 16), float32] */;
    %470 = cast(%469, dtype="float32") /* ty=Tensor[(3, 14, 16), float32] */;
    %471 = reshape(%468, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
    %472 = reshape(%470, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %473 = @func_1658(%471, %472) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) */;
    %474 = logical_and(%449, %450) /* ty=Tensor[(4, 9, 2), bool] */;
    %475 = @func_1582(%452) /* ty=Tensor[(16, 6, 14), bool] */;
    %476 = %459.0;
    %477 = %473.2;
    (%474, %475, %var_2555, %469, meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, %476, %var_2567, %var_2568, %467, meta[relay.Constant][33] /* ty=Tensor[(2145), float32] */, %477)
  };
  %478(%var_2620, %var_2621, %var_2622, %var_2623, %var_2624) /* ty=(Tensor[(4, 9, 2), bool], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32], Tensor[(40, 2), float32], Tensor[(2145), float32], Tensor[(10, ?, 8), float32]) */
}

def @func_6850(%var_6848: Tensor[(192), float32]) -> (Tensor[(1800), float64], Tensor[(4, 6, 8), float64], Tensor[(192), float32], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
  @func_6847(%var_6848) /* ty=(Tensor[(1800), float64], Tensor[(4, 6, 8), float64], Tensor[(192), float32], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) */
}

def @func_4435(%var_4433: Tensor[(5, 7, 12), float64], %var_4434: Tensor[(216, 1), uint32]) -> (Tensor[(5, 7, 12), float64], Tensor[(80), float32], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64], Tensor[(216, 672), int8]) {
  @func_4431(%var_4433, %var_4434) /* ty=(Tensor[(5, 7, 12), float64], Tensor[(80), float32], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64], Tensor[(216, 672), int8]) */
}

def @func_3526() -> Tensor[(16, 14, 8), float32] {
  %482 = fn () -> Tensor[(16, 14, 8), float32] {
    %479 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %480 = %479.0;
    %481 = cast(%480, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
    exp(%481) /* ty=Tensor[(16, 14, 8), float32] */
  };
  %482() /* ty=Tensor[(16, 14, 8), float32] */
}

def @func_181(%var_143: Tensor[(10, 13, 1), float32]) -> (Tensor[(10, 13, 1), float64], Tensor[(10, 13, 1), float32], Tensor[(10, 13, ?), float64], Tensor[(10, 13, ?), uint64]) {
  %483 = cast(%var_143, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %484 = cast(%var_143, dtype="float32") /* ty=Tensor[(10, 13, 1), float32] */;
  %485 = cast(%var_143, dtype="float32") /* ty=Tensor[(10, 13, 1), float32] */;
  %486 = tan(%485) /* ty=Tensor[(10, 13, 1), float32] */;
  %487 = cast(%486, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %488 = shape_of(%var_143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%var_143, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %491 = less_equal(%489, %490) /* ty=Tensor[(10, 13, ?), bool] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(10, 13, ?), float64] */;
  %493 = cast(%var_143, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %494 = cos(%493) /* ty=Tensor[(10, 13, 1), float64] */;
  %495 = cast(%491, dtype="uint64") /* ty=Tensor[(10, 13, ?), uint64] */;
  %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%494, dtype="uint64") /* ty=Tensor[(10, 13, 1), uint64] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %499 = sigmoid(%483) /* ty=Tensor[(10, 13, 1), float64] */;
  %500 = atanh(%484) /* ty=Tensor[(10, 13, 1), float32] */;
  %501 = asinh(%492) /* ty=Tensor[(10, 13, ?), float64] */;
  %502 = multiply(%497, %498) /* ty=Tensor[(10, 13, ?), uint64] */;
  (%499, %500, %501, %502)
}

def @func_5301() -> Tensor[(1800), float64] {
  %503 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
  %503.0
}

def @func_4938(%var_4932: Tensor[(2, 15, 16), float64]) -> (Tensor[(2, 15, 16), float64],) {
  %504 = cast(%var_4932, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
  %505 = cosh(%504) /* ty=Tensor[(2, 15, 16), float64] */;
  (%505,)
}

def @func_8491() -> (Tensor[(16, 14, 8), float64],) {
  @func_8489() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_8906() -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64], Tensor[(10, 13, 1), float64], Tensor[(13, 10), float32]) {
  %517 = fn () -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64], Tensor[(10, 13, 1), float64], Tensor[(13, 10), float32]) {
    %506 = @func_5339() /* ty=(Tensor[(16, 14, 8), float32],) */;
    %507 = @func_7583() /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) */;
    %508 = @func_4709() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %509 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 10), float32] */, dtype="float32") /* ty=Tensor[(13, 10), float32] */;
    %510 = reshape(%509, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %511 = @func_5775(%510) /* ty=(Tensor[(224), float32], Tensor[(10, 13, 1), float64], Tensor[(130), float32]) */;
    %512 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
    %513 = %506.0;
    %514 = %507.0;
    %515 = %508.0;
    %516 = %511.1;
    (%512, %513, %514, %515, %516, meta[relay.Constant][34] /* ty=Tensor[(13, 10), float32] */)
  };
  %517() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64], Tensor[(10, 13, 1), float64], Tensor[(13, 10), float32]) */
}

def @func_8133() -> Tensor[(16, 14, 8), float64] {
  %519 = fn () -> Tensor[(16, 14, 8), float64] {
    %518 = @func_5095() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %518.0
  };
  %519() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_5514(%var_5467: Tensor[(4, 6, 8), float32]) -> Tensor[(4, 6, 8), float64] {
  %520 = cast(%var_5467, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  %521 = atan(%520) /* ty=Tensor[(4, 6, 8), float32] */;
  %522 = cast(%521, dtype="float64") /* ty=Tensor[(4, 6, 8), float64] */;
  log(%522) /* ty=Tensor[(4, 6, 8), float64] */
}

def @func_7861() -> Tensor[(1800), float64] {
  @func_7859() /* ty=Tensor[(1800), float64] */
}

def @func_7235() -> (Tensor[(1800), float64],) {
  %523 = @func_4491() /* ty=(Tensor[(1800), float64],) */;
  %524 = %523.0;
  (%524,)
}

def @func_3588(%var_3531: Tensor[(14, 4, 7), float64], %var_3532: Tensor[(14, 4, 7), float64], %var_3545: Tensor[(2080), int32], %var_3552: Tensor[(882), int32], %var_3553: Tensor[(1800), float64]) -> (Tensor[(14, 4, 7), float64], Tensor[(16, 10, 13), bool], Tensor[(2080), int32], Tensor[(9, 8, 4), bool], Tensor[(288), float64], Tensor[(8, 15, 15), float64], Tensor[(882), int32], Tensor[(1800), float64], Tensor[(14, 4, 7), uint64]) {
  %525 = cast(%var_3532, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %526 = shape_of(%var_3531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%var_3531, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %529 = cast(-10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %530 = cast(%var_3545, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %531 = reshape(%529, newshape=[]) /* ty=int32 */;
  %532 = reshape(%530, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), int32] */;
  %533 = @func_1808(%531, %532) /* ty=(Tensor[(16, 10, 13), bool],) */;
  %534 = cast(meta[relay.Constant][35] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %535 = cast(meta[relay.Constant][35] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %536 = reshape(%534, newshape=[9, 8, 4]) /* ty=Tensor[(9, 8, 4), float64] */;
  %537 = reshape(%535, newshape=[9, 8, 4]) /* ty=Tensor[(9, 8, 4), float64] */;
  %538 = @func_597(%536, %537) /* ty=(Tensor[(9, 8, 4), bool], Tensor[(10, 13, ?), float64], Tensor[(13, 10), float32]) */;
  %539 = cast(%var_3552, dtype="int32") /* ty=Tensor[(882), int32] */;
  %540 = cast(%var_3552, dtype="int32") /* ty=Tensor[(882), int32] */;
  %541 = cast(%var_3553, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %542 = reshape(%539, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), int32] */;
  %543 = reshape(%540, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), int32] */;
  %544 = reshape(%541, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %545 = @func_2244(%542, %543, %544) /* ty=(Tensor[(7, 14, 9), int32], Tensor[(7, 14, 9), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %546 = cast(%var_3532, dtype="float32") /* ty=Tensor[(14, 4, 7), float32] */;
  %547 = asin(%546) /* ty=Tensor[(14, 4, 7), float32] */;
  %548 = cast(%547, dtype="float64") /* ty=Tensor[(14, 4, 7), float64] */;
  %549 = acos(%548) /* ty=Tensor[(14, 4, 7), float64] */;
  %550 = cast(%549, dtype="uint64") /* ty=Tensor[(14, 4, 7), uint64] */;
  %551 = cast(-10 /* ty=int32 */, dtype="uint64") /* ty=uint64 */;
  %552 = floor_mod(%527, %528) /* ty=Tensor[(14, 4, 7), float64] */;
  %553 = %533.0;
  %554 = %538.0;
  %555 = %545.2;
  %556 = multiply(%550, %551) /* ty=Tensor[(14, 4, 7), uint64] */;
  (%552, %553, %var_3545, %554, meta[relay.Constant][35] /* ty=Tensor[(288), float64] */, %555, %var_3552, %var_3553, %556)
}

def @func_2142(%var_2139: Tensor[(11, 15, 13), float32], %var_2140: Tensor[(11, 15, 13), float32], %var_2141: Tensor[(11, 15, 13), float32]) -> (Tensor[(11, 15, 13), float32], Tensor[(11, 15, 13), bool], Tensor[(3, 14, 16), float32], Tensor[(40, 2), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(104, 20), int32], Tensor[(11, 15, 13), float32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8]) {
  %586 = fn (%var_2074: Tensor[(11, 15, 13), float32], %var_2075: Tensor[(11, 15, 13), float32], %var_2084: Tensor[(11, 15, 13), float32]) -> (Tensor[(11, 15, 13), float32], Tensor[(11, 15, 13), bool], Tensor[(3, 14, 16), float32], Tensor[(40, 2), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(104, 20), int32], Tensor[(11, 15, 13), float32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8]) {
    %557 = cast(%var_2075, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
    %558 = shape_of(%var_2074, dtype="int32") /* ty=Tensor[(3), int32] */;
    %559 = cast(%var_2074, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %561 = cast(%var_2084, dtype="bool") /* ty=Tensor[(11, 15, 13), bool] */;
    %562 = shape_of(%var_2075, dtype="int32") /* ty=Tensor[(3), int32] */;
    %563 = cast(%var_2075, dtype="bool") /* ty=Tensor[(11, 15, 13), bool] */;
    %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %565 = cast(meta[relay.Constant][36] /* ty=Tensor[(40, 2), float32] */, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
    %566 = cast(meta[relay.Constant][37] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %567 = reshape(%565, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
    %568 = reshape(%566, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %569 = @func_1658(%567, %568) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) */;
    %570 = cast(-2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %571 = cast(meta[relay.Constant][38] /* ty=Tensor[(104, 20), int32] */, dtype="int32") /* ty=Tensor[(104, 20), int32] */;
    %572 = reshape(%570, newshape=[]) /* ty=int32 */;
    %573 = reshape(%571, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), int32] */;
    %574 = @func_1808(%572, %573) /* ty=(Tensor[(16, 10, 13), bool],) */;
    %575 = cast(%var_2074, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
    %576 = asin(%575) /* ty=Tensor[(11, 15, 13), float32] */;
    %577 = cast(%576, dtype="float32") /* ty=Tensor[(11, 15, 13), float32] */;
    %578 = cast(meta[relay.Constant][39] /* ty=Tensor[(1344), uint8] */, dtype="uint8") /* ty=Tensor[(1344), uint8] */;
    %579 = reshape(%578, newshape=[16, 6, 14]) /* ty=Tensor[(16, 6, 14), uint8] */;
    %580 = floor_divide(%559, %560) /* ty=Tensor[(11, 15, 13), float32] */;
    %581 = greater(%563, %564) /* ty=Tensor[(11, 15, 13), bool] */;
    %582 = %569.0;
    %583 = %574.0;
    %584 = cos(%577) /* ty=Tensor[(11, 15, 13), float32] */;
    %585 = @func_1582(%579) /* ty=Tensor[(16, 6, 14), bool] */;
    (%580, %581, %582, meta[relay.Constant][36] /* ty=Tensor[(40, 2), float32] */, meta[relay.Constant][37] /* ty=Tensor[(672), float32] */, %583, -2 /* ty=int32 */, meta[relay.Constant][38] /* ty=Tensor[(104, 20), int32] */, %584, %585, meta[relay.Constant][39] /* ty=Tensor[(1344), uint8] */)
  };
  %586(%var_2139, %var_2140, %var_2141) /* ty=(Tensor[(11, 15, 13), float32], Tensor[(11, 15, 13), bool], Tensor[(3, 14, 16), float32], Tensor[(40, 2), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(104, 20), int32], Tensor[(11, 15, 13), float32], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8]) */
}

def @func_6039(%var_6027: Tensor[(16, 14, 8), float64]) -> Tensor[(16, 14, 8), float64] {
  %587 = @func_4499() /* ty=Tensor[(16, 14, 8), float64] */;
  %588 = cast(%var_6027, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%587, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%590, %591) /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_3166(%var_3164: Tensor[(15, 13, 4), float64]) -> (Tensor[(15, 13, 4), bool], Tensor[(1344), uint8], Tensor[(2145), float32], Tensor[(80), float32], Tensor[(216), uint32], Tensor[(672), float32]) {
  @func_3163(%var_3164) /* ty=(Tensor[(15, 13, 4), bool], Tensor[(1344), uint8], Tensor[(2145), float32], Tensor[(80), float32], Tensor[(216), uint32], Tensor[(672), float32]) */
}

def @func_184(%var_182: Tensor[(10, 13, 1), float32]) -> (Tensor[(10, 13, 1), float64], Tensor[(10, 13, 1), float32], Tensor[(10, 13, ?), float64], Tensor[(10, 13, ?), uint64]) {
  @func_181(%var_182) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(10, 13, 1), float32], Tensor[(10, 13, ?), float64], Tensor[(10, 13, ?), uint64]) */
}

def @func_5657(%var_5656: Tensor[(180), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
  %598 = fn (%var_5653: Tensor[(180), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
    %592 = @func_5095() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %593 = cast(%var_5653, dtype="float64") /* ty=Tensor[(180), float64] */;
    %594 = reshape(%593, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
    %595 = @func_1025(%594) /* ty=(Tensor[(6, 10, 3), float64],) */;
    %596 = %592.0;
    %597 = %595.0;
    (%596, %597, %var_5653)
  };
  %598(%var_5656) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(6, 10, 3), float64], Tensor[(180), float64]) */
}

def @func_1453(%var_1442: Tensor[(13, 16, 15), float64]) -> (Tensor[(13, 16, 15), float64],) {
  %599 = cast(%var_1442, dtype="float64") /* ty=Tensor[(13, 16, 15), float64] */;
  %600 = cos(%599) /* ty=Tensor[(13, 16, 15), float64] */;
  (%600,)
}

def @func_5282(%var_5279: Tensor[(8, 84), float32], %var_5280: float64, %var_5281: Tensor[(180), float64]) -> (Tensor[(3, 14, 16), float32], Tensor[(8, 84), float32], Tensor[(12, 16, 11), float64], Tensor[(2112), float64], Tensor[(16, 14, 8), bool], Tensor[(6, 10, 3), float64], Tensor[(180), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), int32], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64]) {
  %629 = fn (%var_5201: Tensor[(8, 84), float32], %var_5204: float64, %var_5230: Tensor[(180), float64]) -> (Tensor[(3, 14, 16), float32], Tensor[(8, 84), float32], Tensor[(12, 16, 11), float64], Tensor[(2112), float64], Tensor[(16, 14, 8), bool], Tensor[(6, 10, 3), float64], Tensor[(180), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), int32], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64]) {
    %601 = cast(%var_5201, dtype="float32") /* ty=Tensor[(8, 84), float32] */;
    %602 = reshape(%601, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float32] */;
    %603 = cast(%var_5204, dtype="float64") /* ty=float64 */;
    %604 = cast(meta[relay.Constant][40] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %605 = reshape(%603, newshape=[]) /* ty=float64 */;
    %606 = reshape(%604, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %607 = @func_3811(%605, %606) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %608 = @func_4709() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %609 = %608.0;
    %610 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 14, 8), float64] */, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
    %611 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
    %612 = cast(%609, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
    %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %614 = cast(%var_5230, dtype="float64") /* ty=Tensor[(180), float64] */;
    %615 = reshape(%614, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
    %616 = @func_1025(%615) /* ty=(Tensor[(6, 10, 3), float64],) */;
    %617 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
    %618 = cast(%617, dtype="int32") /* ty=Tensor[(16, 14, 8), int32] */;
    %619 = cast(%var_5204, dtype="int32") /* ty=int32 */;
    %620 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %621 = @func_969(%602) /* ty=Tensor[(3, 14, 16), float32] */;
    %622 = %607.0;
    %623 = less_equal(%612, %613) /* ty=Tensor[(16, 14, 8), bool] */;
    %624 = %616.0;
    %625 = @func_5032() /* ty=Tensor[(16, 14, 8), float64] */;
    %626 = left_shift(%618, %619) /* ty=Tensor[(16, 14, 8), int32] */;
    %627 = %620.0;
    %628 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
    (%621, %var_5201, %622, meta[relay.Constant][40] /* ty=Tensor[(2112), float64] */, %623, %624, %var_5230, %625, %626, %627, %628)
  };
  %629(%var_5279, %var_5280, %var_5281) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(8, 84), float32], Tensor[(12, 16, 11), float64], Tensor[(2112), float64], Tensor[(16, 14, 8), bool], Tensor[(6, 10, 3), float64], Tensor[(180), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), int32], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64]) */
}

def @func_7431() -> Tensor[(16, 14, 8), bool] {
  %631 = fn () -> Tensor[(16, 14, 8), bool] {
    %630 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
    %630.1
  };
  %631() /* ty=Tensor[(16, 14, 8), bool] */
}

def @func_7690() -> (Tensor[(16, 14, 8), float64],) {
  @func_7688() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_8018() -> Tensor[(1800), float64] {
  %633 = fn () -> Tensor[(1800), float64] {
    %632 = @func_7964() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float32]) */;
    %632.0
  };
  %633() /* ty=Tensor[(1800), float64] */
}

def @func_8542(%var_8540: Tensor[(780), float64], %var_8541: Tensor[(90, 2), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(1800), float64], Tensor[(9, 16, 3), bool], int32, Tensor[(1, 432), int32], Tensor[(15, 13, 4), bool], Tensor[(780), float32], Tensor[(108, 2), uint32], Tensor[(90, 2), float64], Tensor[(1568), float32]) {
  @func_8538(%var_8540, %var_8541) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(1800), float64], Tensor[(9, 16, 3), bool], int32, Tensor[(1, 432), int32], Tensor[(15, 13, 4), bool], Tensor[(780), float32], Tensor[(108, 2), uint32], Tensor[(90, 2), float64], Tensor[(1568), float32]) */
}

def @func_7363() -> (Tensor[(16, 14, 8), float64],) {
  %634 = @func_4532() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %635 = %634.0;
  (%635,)
}

def @func_4046() -> Tensor[(16, 14, 8), float64] {
  %637 = fn () -> Tensor[(16, 14, 8), float64] {
    %636 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %636.0
  };
  %637() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_1661(%var_1659: Tensor[(10, 1, 8), float32], %var_1660: Tensor[(672), float32]) -> (Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) {
  %648 = fn (%var_1640: Tensor[(10, 1, 8), float32], %var_1645: Tensor[(672), float32]) -> (Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) {
    %638 = cast(%var_1645, dtype="float32") /* ty=Tensor[(672), float32] */;
    %639 = reshape(%638, newshape=[3, 14, 16]) /* ty=Tensor[(3, 14, 16), float32] */;
    %640 = cast(%var_1640, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
    %641 = acos(%640) /* ty=Tensor[(10, 1, 8), float32] */;
    %642 = cast(%var_1640, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
    %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
    %644 = cast(%641, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
    %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %646 = @func_969(%639) /* ty=Tensor[(3, 14, 16), float32] */;
    %647 = multiply(%644, %645) /* ty=Tensor[(10, ?, 8), float32] */;
    (%646, %var_1645, %647)
  };
  %648(%var_1659, %var_1660) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(10, ?, 8), float32]) */
}

def @func_4150(%var_4147: Tensor[(14, 28), float64], %var_4148: Tensor[(2080), int32], %var_4149: Tensor[(900, 2), float64]) -> (Tensor[(16, 14, 8), float64], Tensor[(882), int32], Tensor[(14, 28), float64], Tensor[(2080), int32], Tensor[(900, 2), float64]) {
  @func_4145(%var_4147, %var_4148, %var_4149) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(882), int32], Tensor[(14, 28), float64], Tensor[(2080), int32], Tensor[(900, 2), float64]) */
}

def @func_6238(%var_6236: Tensor[(18), uint16], %var_6237: Tensor[(672), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(16, 14, 8), float64], Tensor[(672), float32], Tensor[(180), float64]) {
  %664 = fn (%var_6200: Tensor[(18), uint16], %var_6205: Tensor[(672), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(16, 14, 8), float64], Tensor[(672), float32], Tensor[(180), float64]) {
    %649 = cast(%var_6200, dtype="uint16") /* ty=Tensor[(18), uint16] */;
    %650 = cast(1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %651 = reshape(%649, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), uint16] */;
    %652 = reshape(%650, newshape=[]) /* ty=int32 */;
    %653 = @func_2767(%651, %652) /* ty=(Tensor[(10, 9, 2), uint16], Tensor[(16, 6, 14), bool], Tensor[(2080), int32], Tensor[(72), bool], Tensor[(336, 4), float32]) */;
    %654 = cast(%var_6205, dtype="float32") /* ty=Tensor[(672), float32] */;
    %655 = cast(1 /* ty=int32 */, dtype="float64") /* ty=float64 */;
    %656 = cast(meta[relay.Constant][42] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %657 = reshape(%654, newshape=[8, 84]) /* ty=Tensor[(8, 84), float32] */;
    %658 = reshape(%655, newshape=[]) /* ty=float64 */;
    %659 = reshape(%656, newshape=[180]) /* ty=Tensor[(180), float64] */;
    %660 = @func_5278(%657, %658, %659) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(8, 84), float32], Tensor[(12, 16, 11), float64], Tensor[(2112), float64], Tensor[(16, 14, 8), bool], Tensor[(6, 10, 3), float64], Tensor[(180), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), int32], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64]) */;
    %661 = @func_5794() /* ty=Tensor[(16, 14, 8), float64] */;
    %662 = %653.2;
    %663 = %660.9;
    (%661, %662, %var_6200, 1 /* ty=int32 */, %663, %var_6205, meta[relay.Constant][42] /* ty=Tensor[(180), float64] */)
  };
  %664(%var_6236, %var_6237) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(16, 14, 8), float64], Tensor[(672), float32], Tensor[(180), float64]) */
}

def @func_6472() -> (Tensor[(16, 14, 8), float32],) {
  %665 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  (%665,)
}

def @func_7965() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float32]) {
  %671 = fn () -> (Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float32]) {
    %666 = @func_6559() /* ty=(Tensor[(1800), float64],) */;
    %667 = @func_6472() /* ty=(Tensor[(16, 14, 8), float32],) */;
    %668 = %666.0;
    %669 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
    %670 = %667.0;
    (%668, %669, %670)
  };
  %671() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float32]) */
}

def @func_8099() -> Tensor[(16, 14, 8), float64] {
  %672 = fn () -> Tensor[(16, 14, 8), float64] {
    @func_7482() /* ty=Tensor[(16, 14, 8), float64] */
  };
  %672() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_4259(%var_4258: Tensor[(18), uint16]) -> (Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
  %685 = fn (%var_4233: Tensor[(18), uint16]) -> (Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(6, 10, 3), float64], Tensor[(180), float64]) {
    %673 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %674 = cast(%var_4233, dtype="uint16") /* ty=Tensor[(18), uint16] */;
    %675 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %676 = reshape(%674, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), uint16] */;
    %677 = reshape(%675, newshape=[]) /* ty=int32 */;
    %678 = @func_2767(%676, %677) /* ty=(Tensor[(10, 9, 2), uint16], Tensor[(16, 6, 14), bool], Tensor[(2080), int32], Tensor[(72), bool], Tensor[(336, 4), float32]) */;
    %679 = cast(meta[relay.Constant][43] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %680 = reshape(%679, newshape=[6, 10, 3]) /* ty=Tensor[(6, 10, 3), float64] */;
    %681 = @func_1025(%680) /* ty=(Tensor[(6, 10, 3), float64],) */;
    %682 = %673.0;
    %683 = %678.2;
    %684 = %681.0;
    (%682, %683, %var_4233, 7 /* ty=int32 */, %684, meta[relay.Constant][43] /* ty=Tensor[(180), float64] */)
  };
  %685(%var_4258) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(2080), int32], Tensor[(18), uint16], int32, Tensor[(6, 10, 3), float64], Tensor[(180), float64]) */
}

def @func_3964(%var_3959: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), int64],) {
  %686 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %687 = %686.0;
  %688 = cast(%var_3959, dtype="int64") /* ty=Tensor[(16, 14, 8), int64] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="int64") /* ty=Tensor[(16, 14, 8), int64] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %692 = bitwise_or(%690, %691) /* ty=Tensor[(16, 14, 8), int64] */;
  (%692,)
}

def @func_4183() -> (Tensor[(1800), float64],) {
  %695 = fn () -> (Tensor[(1800), float64],) {
    %693 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
    %694 = %693.2;
    (%694,)
  };
  %695() /* ty=(Tensor[(1800), float64],) */
}

def @func_7688() -> (Tensor[(16, 14, 8), float64],) {
  %696 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %697 = %696.0;
  (%697,)
}

def @func_7585() -> (Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) {
  @func_7583() /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) */
}

def @func_5594(%var_5592: int32, %var_5593: Tensor[(9, 16, 3), int32]) -> Tensor[(9, 16, 3), bool] {
  %705 = fn (%var_5560: int32, %var_5561: Tensor[(9, 16, 3), int32]) -> Tensor[(9, 16, 3), bool] {
    %698 = cast(%var_5560, dtype="int32") /* ty=int32 */;
    %699 = cast(%var_5561, dtype="int32") /* ty=Tensor[(9, 16, 3), int32] */;
    %700 = multiply(%698, %699) /* ty=Tensor[(9, 16, 3), int32] */;
    %701 = cast(%700, dtype="bool") /* ty=Tensor[(9, 16, 3), bool] */;
    %702 = shape_of(%var_5561, dtype="int32") /* ty=Tensor[(3), int32] */;
    %703 = cast(%var_5561, dtype="bool") /* ty=Tensor[(9, 16, 3), bool] */;
    %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%703, %704) /* ty=Tensor[(9, 16, 3), bool] */
  };
  %705(%var_5592, %var_5593) /* ty=Tensor[(9, 16, 3), bool] */
}

def @func_5804() -> (Tensor[(16, 14, 8), float64],) {
  %706 = @func_4709() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %707 = %706.0;
  (%707,)
}

def @func_4890() -> (Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) {
  %721 = fn () -> (Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) {
    %708 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
    %709 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %710 = %709.0;
    %711 = cast(%710, dtype="float32") /* ty=Tensor[(16, 14, 8), float32] */;
    %712 = acosh(%711) /* ty=Tensor[(16, 14, 8), float32] */;
    %713 = @func_3494() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %714 = %713.0;
    %715 = cast(%714, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
    %716 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
    %717 = cast(%712, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
    %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %719 = %708.0;
    %720 = logical_and(%717, %718) /* ty=Tensor[(16, 14, 8), bool] */;
    (%719, %720)
  };
  %721() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */
}

def @func_5034() -> Tensor[(16, 14, 8), float64] {
  @func_5032() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_5777(%var_5776: Tensor[(130), float32]) -> (Tensor[(224), float32], Tensor[(10, 13, 1), float64], Tensor[(130), float32]) {
  %728 = fn (%var_5772: Tensor[(130), float32]) -> (Tensor[(224), float32], Tensor[(10, 13, 1), float64], Tensor[(130), float32]) {
    %722 = @func_4763() /* ty=(Tensor[(1800), float64], Tensor[(4, 8, 7), float32], Tensor[(224), float32]) */;
    %723 = cast(%var_5772, dtype="float32") /* ty=Tensor[(130), float32] */;
    %724 = reshape(%723, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float32] */;
    %725 = @func_181(%724) /* ty=(Tensor[(10, 13, 1), float64], Tensor[(10, 13, 1), float32], Tensor[(10, 13, ?), float64], Tensor[(10, 13, ?), uint64]) */;
    %726 = %722.2;
    %727 = %725.0;
    (%726, %727, %var_5772)
  };
  %728(%var_5776) /* ty=(Tensor[(224), float32], Tensor[(10, 13, 1), float64], Tensor[(130), float32]) */
}

def @func_3967(%var_3965: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), int64],) {
  @func_3964(%var_3965) /* ty=(Tensor[(16, 14, 8), int64],) */
}

def @func_6155(%var_6128: float64, %var_6129: Tensor[(180), float64], %var_6140: Tensor[(1568), float32]) -> (Tensor[(16, 14, 8), bool], Tensor[(3, 6, 12), uint32], Tensor[(216), uint32], Tensor[(672), float32], Tensor[(16, 14, 8), bool], float64, Tensor[(180), float64], Tensor[(108, 2), uint32], Tensor[(1568), float64]) {
  %729 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
  %730 = cast(meta[relay.Constant][44] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %731 = cast(meta[relay.Constant][45] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %732 = reshape(%730, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %733 = reshape(%731, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %734 = @func_1709(%732, %733) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %735 = cast(meta[relay.Constant][45] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %736 = cast(%var_6128, dtype="float64") /* ty=float64 */;
  %737 = cast(%var_6129, dtype="float64") /* ty=Tensor[(180), float64] */;
  %738 = reshape(%735, newshape=[8, 84]) /* ty=Tensor[(8, 84), float32] */;
  %739 = reshape(%736, newshape=[]) /* ty=float64 */;
  %740 = reshape(%737, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %741 = @func_5278(%738, %739, %740) /* ty=(Tensor[(3, 14, 16), float32], Tensor[(8, 84), float32], Tensor[(12, 16, 11), float64], Tensor[(2112), float64], Tensor[(16, 14, 8), bool], Tensor[(6, 10, 3), float64], Tensor[(180), float64], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), int32], Tensor[(16, 14, 8), float64], Tensor[(16, 14, 8), float64]) */;
  %742 = cast(%var_6128, dtype="int16") /* ty=int16 */;
  %743 = cast(%var_6140, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %744 = %734.0;
  %745 = cast(%744, dtype="uint32") /* ty=Tensor[(3, 6, 12), uint32] */;
  %746 = reshape(%742, newshape=[]) /* ty=int16 */;
  %747 = reshape(%743, newshape=[7, 16, 14]) /* ty=Tensor[(7, 16, 14), float32] */;
  %748 = reshape(%745, newshape=[108, 2]) /* ty=Tensor[(108, 2), uint32] */;
  %749 = @func_3363(%746, %747, %748) /* ty=(Tensor[(672), float32], Tensor[(108, 2), uint32], Tensor[(168, 4), float32], Tensor[(7, 16, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(90, 20), float64], Tensor[(7, 16, 14), float64], Tensor[(2145), float32], Tensor[(780), float64]) */;
  %750 = cast(%var_6140, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %751 = %729.1;
  %752 = %741.4;
  %753 = %749.1;
  %754 = erf(%750) /* ty=Tensor[(1568), float64] */;
  (%751, %744, meta[relay.Constant][44] /* ty=Tensor[(216), uint32] */, meta[relay.Constant][45] /* ty=Tensor[(672), float32] */, %752, %var_6128, %var_6129, %753, %754)
}

def @func_5517(%var_5515: Tensor[(4, 6, 8), float32]) -> Tensor[(4, 6, 8), float64] {
  @func_5514(%var_5515) /* ty=Tensor[(4, 6, 8), float64] */
}

def @func_7189() -> (Tensor[(16, 14, 8), float64],) {
  %755 = @func_3872() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %756 = %755.0;
  (%756,)
}

def @func_7389() -> (Tensor[(16, 14, 8), float32],) {
  %757 = @func_3948() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(8, 15, 15), float64], Tensor[(1800), float64]) */;
  %758 = %757.0;
  (%758,)
}

def @func_2272(%var_2266: Tensor[(4, 8, 7), float32]) -> Tensor[(4, 8, 7), float32] {
  %759 = cast(%var_2266, dtype="float32") /* ty=Tensor[(4, 8, 7), float32] */;
  asinh(%759) /* ty=Tensor[(4, 8, 7), float32] */
}

def @func_4085() -> (Tensor[(16, 14, 8), float64],) {
  %761 = fn () -> (Tensor[(16, 14, 8), float64],) {
    %760 = @func_4045() /* ty=Tensor[(16, 14, 8), float64] */;
    (%760,)
  };
  %761() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_7472(%var_7470: Tensor[(14, 9, 9), float32]) -> (Tensor[(14, 9, 9), bool], Tensor[(18), uint16], Tensor[(18), uint16], Tensor[(14, 9, 9), float64]) {
  @func_7469(%var_7470) /* ty=(Tensor[(14, 9, 9), bool], Tensor[(18), uint16], Tensor[(18), uint16], Tensor[(14, 9, 9), float64]) */
}

def @func_8489() -> (Tensor[(16, 14, 8), float64],) {
  %762 = @func_5661() /* ty=Tensor[(16, 14, 8), float64] */;
  (%762,)
}

def @func_7365() -> (Tensor[(16, 14, 8), float64],) {
  @func_7363() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_8647(%var_8646: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), uint64], Tensor[(1800), float64], Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) {
  %774 = fn (%var_8628: Tensor[(1800), float64]) -> (Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), uint64], Tensor[(1800), float64], Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) {
    %763 = @func_7028() /* ty=(Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), float64]) */;
    %764 = %763.0;
    %765 = cast(%764, dtype="float64") /* ty=Tensor[(16, 14, 8), float64] */;
    %766 = reshape(%765, newshape=[16, 14, 8]) /* ty=Tensor[(16, 14, 8), float64] */;
    %767 = @func_8042(%766) /* ty=(Tensor[(16, 14, 8), uint64],) */;
    %768 = cast(%var_8628, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %769 = reshape(%768, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %770 = @func_7583() /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) */;
    %771 = %767.0;
    %772 = @func_5992(%769) /* ty=Tensor[(1800), float64] */;
    %773 = %770.0;
    (%764, %771, %772, %var_8628, %773)
  };
  %774(%var_8646) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(16, 14, 8), uint64], Tensor[(1800), float64], Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */
}

def @func_4941(%var_4939: Tensor[(2, 15, 16), float64]) -> (Tensor[(2, 15, 16), float64],) {
  @func_4938(%var_4939) /* ty=(Tensor[(2, 15, 16), float64],) */
}

def @func_1584(%var_1583: Tensor[(16, 6, 14), uint8]) -> Tensor[(16, 6, 14), bool] {
  %777 = fn (%var_1574: Tensor[(16, 6, 14), uint8]) -> Tensor[(16, 6, 14), bool] {
    %775 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 6, 1), uint8] */, dtype="bool") /* ty=Tensor[(16, 6, 1), bool] */;
    %776 = cast(%var_1574, dtype="bool") /* ty=Tensor[(16, 6, 14), bool] */;
    equal(%775, %776) /* ty=Tensor[(16, 6, 14), bool] */
  };
  %777(%var_1583) /* ty=Tensor[(16, 6, 14), bool] */
}

def @func_8301(%var_8240: Tensor[(78), float32], %var_8273: Tensor[(4, 168), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(1800), float64], Tensor[(13, 3, 2), float64], Tensor[(78), float32], Tensor[(16, 14, 8), float64], Tensor[(672), float32], Tensor[(216), uint32], Tensor[(4, 168), float32], Tensor[(2080), float64], Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) {
  %778 = cast(%var_8240, dtype="float32") /* ty=Tensor[(78), float32] */;
  %779 = cast(%var_8240, dtype="float32") /* ty=Tensor[(78), float32] */;
  %780 = reshape(%778, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %781 = reshape(%779, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %782 = @func_6388(%780, %781) /* ty=(Tensor[(13, 3, 2), float64],) */;
  %783 = @func_8017() /* ty=Tensor[(1800), float64] */;
  %784 = cast(%783, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %785 = cast(meta[relay.Constant][47] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %786 = cast(%783, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %787 = reshape(%784, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %788 = reshape(%785, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %789 = reshape(%786, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float32] */;
  %790 = @func_7334(%787, %788, %789) /* ty=(Tensor[(16, 14, 8), float64], Tensor[(70), int64], Tensor[(210), int64], Tensor[(1800), float64], Tensor[(104, 20), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 14, 8), float64], Tensor[(8, 15, 15), float32], Tensor[(8, 15, 15), int32]) */;
  %791 = cast(meta[relay.Constant][48] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %792 = cast(%var_8273, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %793 = reshape(%791, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %794 = reshape(%792, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %795 = @func_1709(%793, %794) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %796 = cast(meta[relay.Constant][49] /* ty=Tensor[(2080), int32] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %797 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %798 = cast(meta[relay.Constant][47] /* ty=Tensor[(2080), int32] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?), float64] */;
  %800 = @func_5032() /* ty=Tensor[(16, 14, 8), float64] */;
  %801 = %782.0;
  %802 = %790.7;
  %803 = %795.1;
  %804 = floor_divide(%798, %799) /* ty=Tensor[(2080), float64] */;
  %805 = @func_7430() /* ty=Tensor[(16, 14, 8), bool] */;
  %806 = @func_5794() /* ty=Tensor[(16, 14, 8), float64] */;
  (%800, %783, %801, %var_8240, %802, %803, meta[relay.Constant][48] /* ty=Tensor[(216), uint32] */, %var_8273, %804, %805, %806)
}

def @func_8707(%var_8705: Tensor[(11, 12, 10), float64]) -> (Tensor[(11, 12, 10), float64],) {
  @func_8704(%var_8705) /* ty=(Tensor[(11, 12, 10), float64],) */
}

def @func_8919() -> (Tensor[(16, 14, 8), float32],) {
  @func_8917() /* ty=(Tensor[(16, 14, 8), float32],) */
}

def @func_5392(%var_5389: Tensor[(5, 1, 14), int64], %var_5390: Tensor[(5, 3, 14), int64], %var_5391: Tensor[(6, 300), float64]) -> (Tensor[(5, 3, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64]) {
  %815 = fn (%var_5344: Tensor[(5, 1, 14), int64], %var_5345: Tensor[(5, 3, 14), int64], %var_5359: Tensor[(6, 300), float64]) -> (Tensor[(5, 3, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64]) {
    %807 = cast(%var_5344, dtype="bool") /* ty=Tensor[(5, 1, 14), bool] */;
    %808 = cast(%var_5345, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
    %809 = cast(%var_5359, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
    %810 = reshape(%809, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
    %811 = cast(%var_5359, dtype="float64") /* ty=Tensor[(6, 300), float64] */;
    %812 = less_equal(%807, %808) /* ty=Tensor[(5, 3, 14), bool] */;
    %813 = @func_788(%810) /* ty=Tensor[(8, 15, 15), float64] */;
    %814 = asin(%811) /* ty=Tensor[(6, 300), float64] */;
    (%812, %813, %814)
  };
  %815(%var_5389, %var_5390, %var_5391) /* ty=(Tensor[(5, 3, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64]) */
}

def @func_1811(%var_1809: int32, %var_1810: Tensor[(16, 10, 13), int32]) -> (Tensor[(16, 10, 13), bool],) {
  %819 = fn (%var_1798: int32, %var_1799: Tensor[(16, 10, 13), int32]) -> (Tensor[(16, 10, 13), bool],) {
    %816 = cast(%var_1798, dtype="bool") /* ty=bool */;
    %817 = cast(%var_1799, dtype="bool") /* ty=Tensor[(16, 10, 13), bool] */;
    %818 = less(%816, %817) /* ty=Tensor[(16, 10, 13), bool] */;
    (%818,)
  };
  %819(%var_1809, %var_1810) /* ty=(Tensor[(16, 10, 13), bool],) */
}

def @func_5752() -> (Tensor[(16, 14, 8), float64],) {
  %820 = @func_5095() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %821 = %820.0;
  (%821,)
}

def @func_6060() -> (Tensor[(16, 14, 8), float64],) {
  @func_6058() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_4671(%var_4668: Tensor[(16, 14, 8), float32], %var_4669: int32, %var_4670: Tensor[(2080), int32]) -> (Tensor[(16, 14, 8), bool], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32]) {
  %834 = fn (%var_4650: Tensor[(16, 14, 8), float32], %var_4659: int32, %var_4660: Tensor[(2080), int32]) -> (Tensor[(16, 14, 8), bool], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32]) {
    %822 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
    %823 = cast(%var_4650, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
    %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
    %825 = cast(%822, dtype="bool") /* ty=Tensor[(16, 14, 8), bool] */;
    %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %827 = cast(%var_4659, dtype="int32") /* ty=int32 */;
    %828 = cast(%var_4660, dtype="int32") /* ty=Tensor[(2080), int32] */;
    %829 = reshape(%827, newshape=[]) /* ty=int32 */;
    %830 = reshape(%828, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), int32] */;
    %831 = @func_1808(%829, %830) /* ty=(Tensor[(16, 10, 13), bool],) */;
    %832 = greater(%825, %826) /* ty=Tensor[(16, 14, 8), bool] */;
    %833 = %831.0;
    (%832, %833, %var_4659, %var_4660)
  };
  %834(%var_4668, %var_4669, %var_4670) /* ty=(Tensor[(16, 14, 8), bool], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32]) */
}

def @func_7334(%var_7265: Tensor[(1800), float64], %var_7301: Tensor[(2080), int32], %var_7318: Tensor[(8, 15, 15), float32]) -> (Tensor[(16, 14, 8), float64], Tensor[(70), int64], Tensor[(210), int64], Tensor[(1800), float64], Tensor[(104, 20), int32], Tensor[(392), float64], Tensor[(2080), int32], Tensor[(16, 14, 8), float64], Tensor[(8, 15, 15), float32], Tensor[(8, 15, 15), int32]) {
  %835 = cast(meta[relay.Constant][52] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %836 = cast(%var_7301, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %837 = cast(%var_7265, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %838 = reshape(%835, newshape=[14, 28]) /* ty=Tensor[(14, 28), float64] */;
  %839 = reshape(%836, newshape=[104, 20]) /* ty=Tensor[(104, 20), int32] */;
  %840 = reshape(%837, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %841 = @func_3682(%838, %839, %840) /* ty=(Tensor[(16, 14, 8), float32], Tensor[(9, 8, 4), bool], Tensor[(14, 28), float64], Tensor[(104, 20), int32], Tensor[(882), int32], Tensor[(1800), float64]) */;
  %842 = cast(meta[relay.Constant][50] /* ty=Tensor[(70), int64] */, dtype="int64") /* ty=Tensor[(70), int64] */;
  %843 = cast(meta[relay.Constant][51] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %844 = cast(%var_7265, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %845 = reshape(%842, newshape=[5, 1, 14]) /* ty=Tensor[(5, 1, 14), int64] */;
  %846 = reshape(%843, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int64] */;
  %847 = reshape(%844, newshape=[6, 300]) /* ty=Tensor[(6, 300), float64] */;
  %848 = @func_5388(%845, %846, %847) /* ty=(Tensor[(5, 3, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(6, 300), float64]) */;
  %849 = %848.1;
  %850 = cast(%849, dtype="float32") /* ty=Tensor[(8, 15, 15), float32] */;
  %851 = acos(%850) /* ty=Tensor[(8, 15, 15), float32] */;
  %852 = cast(%var_7318, dtype="float32") /* ty=Tensor[(8, 15, 15), float32] */;
  %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %854 = cast(%851, dtype="float32") /* ty=Tensor[(8, 15, 15), float32] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %856 = cast(%849, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
  %857 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%851, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %860 = floor_divide(%858, %859) /* ty=Tensor[(8, 15, 15), float64] */;
  %861 = cast(%849, dtype="int32") /* ty=Tensor[(8, 15, 15), int32] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="int32") /* ty=Tensor[(8, 15, 15), int32] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %865 = @func_5032() /* ty=Tensor[(16, 14, 8), float64] */;
  %866 = %841.3;
  %867 = @func_5661() /* ty=Tensor[(16, 14, 8), float64] */;
  %868 = power(%854, %855) /* ty=Tensor[(8, 15, 15), float32] */;
  %869 = maximum(%863, %864) /* ty=Tensor[(8, 15, 15), int32] */;
  (%865, meta[relay.Constant][50] /* ty=Tensor[(70), int64] */, meta[relay.Constant][51] /* ty=Tensor[(210), int64] */, %var_7265, %866, meta[relay.Constant][52] /* ty=Tensor[(392), float64] */, %var_7301, %867, %868, %869)
}

def @func_7583() -> (Tensor[(16, 14, 8), bool], Tensor[(16, 14, 8), float64]) {
  %870 = @func_6784() /* ty=(Tensor[(16, 14, 8), float64], Tensor[(14, 4, 13), float32], Tensor[(16, 14, 8), bool]) */;
  %871 = %870.2;
  %872 = @func_5661() /* ty=Tensor[(16, 14, 8), float64] */;
  (%871, %872)
}

def @func_5872() -> (Tensor[(16, 14, 8), float64],) {
  %873 = @func_4746() /* ty=Tensor[(16, 14, 8), float64] */;
  (%873,)
}

def @func_5032() -> Tensor[(16, 14, 8), float64] {
  %874 = @func_3872() /* ty=(Tensor[(16, 14, 8), float64],) */;
  %874.0
}

def @func_5874() -> (Tensor[(16, 14, 8), float64],) {
  @func_5872() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_7191() -> (Tensor[(16, 14, 8), float64],) {
  @func_7189() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_3363(%var_3275: int16, %var_3290: Tensor[(7, 16, 14), float32], %var_3305: Tensor[(108, 2), uint32]) -> (Tensor[(672), float32], Tensor[(108, 2), uint32], Tensor[(168, 4), float32], Tensor[(7, 16, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(90, 20), float64], Tensor[(7, 16, 14), float64], Tensor[(2145), float32], Tensor[(780), float64]) {
  %875 = cast(%var_3305, dtype="uint32") /* ty=Tensor[(108, 2), uint32] */;
  %876 = cast(meta[relay.Constant][53] /* ty=Tensor[(168, 4), float32] */, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %877 = reshape(%875, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), uint32] */;
  %878 = reshape(%876, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %879 = @func_1709(%877, %878) /* ty=(Tensor[(3, 6, 12), uint32], Tensor[(672), float32], Tensor[(80), float32], Tensor[(672), float32]) */;
  %880 = cast(%var_3275, dtype="int16") /* ty=int16 */;
  %881 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 16, 14), int16] */, dtype="int16") /* ty=Tensor[(7, 16, 14), int16] */;
  %882 = left_shift(%880, %881) /* ty=Tensor[(7, 16, 14), int16] */;
  %883 = cast(%882, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %884 = log10(%883) /* ty=Tensor[(7, 16, 14), float32] */;
  %885 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 16, 14), int16] */, dtype="bool") /* ty=Tensor[(7, 16, 14), bool] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%884, dtype="bool") /* ty=Tensor[(7, 16, 14), bool] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %889 = cast(meta[relay.Constant][55] /* ty=Tensor[(90, 20), float64] */, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  %890 = reshape(%889, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %891 = cast(meta[relay.Constant][55] /* ty=Tensor[(90, 20), float64] */, dtype="float32") /* ty=Tensor[(90, 20), float32] */;
  %892 = atan(%891) /* ty=Tensor[(90, 20), float32] */;
  %893 = cast(%892, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  %894 = asinh(%893) /* ty=Tensor[(90, 20), float64] */;
  %895 = cast(meta[relay.Constant][55] /* ty=Tensor[(90, 20), float64] */, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(2), int32] */;
  %897 = cast(%894, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %899 = cast(%var_3290, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %900 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%884, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %903 = mod(%901, %902) /* ty=Tensor[(7, 16, 14), float32] */;
  %904 = cast(%903, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %905 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%884, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %908 = divide(%906, %907) /* ty=Tensor[(7, 16, 14), float32] */;
  %909 = cast(%908, dtype="float64") /* ty=Tensor[(7, 16, 14), float64] */;
  %910 = log2(%909) /* ty=Tensor[(7, 16, 14), float64] */;
  %911 = cast(%910, dtype="float64") /* ty=Tensor[(7, 16, 14), float64] */;
  %912 = cast(meta[relay.Constant][56] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %913 = reshape(%912, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), float64] */;
  %914 = @func_3163(%913) /* ty=(Tensor[(15, 13, 4), bool], Tensor[(1344), uint8], Tensor[(2145), float32], Tensor[(80), float32], Tensor[(216), uint32], Tensor[(672), float32]) */;
  %915 = %879.1;
  %916 = greater(%887, %888) /* ty=Tensor[(7, 16, 14), bool] */;
  %917 = @func_788(%890) /* ty=Tensor[(8, 15, 15), float64] */;
  %918 = mod(%897, %898) /* ty=Tensor[(90, 20), float64] */;
  %919 = sigmoid(%911) /* ty=Tensor[(7, 16, 14), float64] */;
  %920 = %914.2;
  (%915, %var_3305, meta[relay.Constant][53] /* ty=Tensor[(168, 4), float32] */, %916, %917, %918, %919, %920, meta[relay.Constant][56] /* ty=Tensor[(780), float64] */)
}

def @func_4492() -> (Tensor[(1800), float64],) {
  %923 = fn () -> (Tensor[(1800), float64],) {
    %921 = @func_4182() /* ty=(Tensor[(1800), float64],) */;
    %922 = %921.0;
    (%922,)
  };
  %923() /* ty=(Tensor[(1800), float64],) */
}

def @func_3368(%var_3365: int16, %var_3366: Tensor[(7, 16, 14), float32], %var_3367: Tensor[(108, 2), uint32]) -> (Tensor[(672), float32], Tensor[(108, 2), uint32], Tensor[(168, 4), float32], Tensor[(7, 16, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(90, 20), float64], Tensor[(7, 16, 14), float64], Tensor[(2145), float32], Tensor[(780), float64]) {
  @func_3363(%var_3365, %var_3366, %var_3367) /* ty=(Tensor[(672), float32], Tensor[(108, 2), uint32], Tensor[(168, 4), float32], Tensor[(7, 16, 14), bool], Tensor[(8, 15, 15), float64], Tensor[(90, 20), float64], Tensor[(7, 16, 14), float64], Tensor[(2145), float32], Tensor[(780), float64]) */
}

def @func_4533() -> (Tensor[(16, 14, 8), float64],) {
  %926 = fn () -> (Tensor[(16, 14, 8), float64],) {
    %924 = @func_4084() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %925 = %924.0;
    (%925,)
  };
  %926() /* ty=(Tensor[(16, 14, 8), float64],) */
}

def @func_7483() -> Tensor[(16, 14, 8), float64] {
  %928 = fn () -> Tensor[(16, 14, 8), float64] {
    %927 = @func_7363() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %927.0
  };
  %928() /* ty=Tensor[(16, 14, 8), float64] */
}

def @func_8044(%var_8043: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), uint64],) {
  %935 = fn (%var_8024: Tensor[(16, 14, 8), float64]) -> (Tensor[(16, 14, 8), uint64],) {
    %929 = @func_7666() /* ty=Tensor[(16, 14, 8), float64] */;
    %930 = cast(%var_8024, dtype="uint64") /* ty=Tensor[(16, 14, 8), uint64] */;
    %931 = shape_of(%929, dtype="int32") /* ty=Tensor[(3), int32] */;
    %932 = cast(%929, dtype="uint64") /* ty=Tensor[(16, 14, 8), uint64] */;
    %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %934 = right_shift(%932, %933) /* ty=Tensor[(16, 14, 8), uint64] */;
    (%934,)
  };
  %935(%var_8043) /* ty=(Tensor[(16, 14, 8), uint64],) */
}

def @func_1028(%var_1026: Tensor[(6, 10, 3), float64]) -> (Tensor[(6, 10, 3), float64],) {
  @func_1025(%var_1026) /* ty=(Tensor[(6, 10, 3), float64],) */
}

def @func_5303() -> Tensor[(1800), float64] {
  @func_5301() /* ty=Tensor[(1800), float64] */
}

def @func_7244() -> Tensor[(1800), float64] {
  @func_7242() /* ty=Tensor[(1800), float64] */
}

def @func_8704(%var_8699: Tensor[(11, 12, 10), float64]) -> (Tensor[(11, 12, 10), float64],) {
  %936 = cast(%var_8699, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %937 = tan(%936) /* ty=Tensor[(11, 12, 10), float64] */;
  (%937,)
}

def @func_5339() -> (Tensor[(16, 14, 8), float32],) {
  %938 = @func_3525() /* ty=Tensor[(16, 14, 8), float32] */;
  (%938,)
}

def @func_5942(%var_5940: Tensor[(1800), float64], %var_5941: Tensor[(480), int8]) -> (Tensor[(1800), float64], Tensor[(2, 15, 16), bool], Tensor[(16, 14, 8), float64]) {
  %959 = fn (%var_5888: Tensor[(1800), float64], %var_5916: Tensor[(480), int8]) -> (Tensor[(1800), float64], Tensor[(2, 15, 16), bool], Tensor[(16, 14, 8), float64]) {
    %939 = @func_4889() /* ty=(Tensor[(1800), float64], Tensor[(16, 14, 8), bool]) */;
    %940 = %939.0;
    %941 = cast(%var_5888, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(1), int32] */;
    %943 = cast(%940, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?), float64] */;
    %945 = cast(%var_5916, dtype="int8") /* ty=Tensor[(480), int8] */;
    %946 = cast(%var_5916, dtype="int8") /* ty=Tensor[(480), int8] */;
    %947 = reshape(%945, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int8] */;
    %948 = reshape(%946, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), int8] */;
    %949 = @func_4357(%947, %948) /* ty=(Tensor[(2, 15, 16), int8], Tensor[(8, 15, 15), float64]) */;
    %950 = %949.0;
    %951 = cast(%var_5916, dtype="bool") /* ty=Tensor[(480), bool] */;
    %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
    %953 = cast(%950, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
    %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %955 = @func_5804() /* ty=(Tensor[(16, 14, 8), float64],) */;
    %956 = floor_divide(%943, %944) /* ty=Tensor[(1800), float64] */;
    %957 = greater_equal(%953, %954) /* ty=Tensor[(2, 15, 16), bool] */;
    %958 = %955.0;
    (%956, %957, %958)
  };
  %959(%var_5940, %var_5941) /* ty=(Tensor[(1800), float64], Tensor[(2, 15, 16), bool], Tensor[(16, 14, 8), float64]) */
}

def @func_2767(%var_2746: Tensor[(1, 9, 2), uint16], %var_2755: int32) -> (Tensor[(10, 9, 2), uint16], Tensor[(16, 6, 14), bool], Tensor[(2080), int32], Tensor[(72), bool], Tensor[(336, 4), float32]) {
  %960 = cast(%var_2746, dtype="uint16") /* ty=Tensor[(1, 9, 2), uint16] */;
  %961 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 9, 2), uint16] */, dtype="uint16") /* ty=Tensor[(10, 9, 2), uint16] */;
  %962 = cast(meta[relay.Constant][58] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %963 = cast(meta[relay.Constant][58] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %964 = cast(meta[relay.Constant][59] /* ty=Tensor[(336, 4), uint8] */, dtype="uint8") /* ty=Tensor[(336, 4), uint8] */;
  %965 = cast(%var_2755, dtype="int32") /* ty=int32 */;
  %966 = cast(meta[relay.Constant][60] /* ty=Tensor[(2080), int32] */, dtype="int32") /* ty=Tensor[(2080), int32] */;
  %967 = reshape(%962, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), bool] */;
  %968 = reshape(%963, newshape=[4, 9, 2]) /* ty=Tensor[(4, 9, 2), bool] */;
  %969 = reshape(%964, newshape=[1344]) /* ty=Tensor[(1344), uint8] */;
  %970 = reshape(%965, newshape=[]) /* ty=int32 */;
  %971 = reshape(%966, newshape=[2080]) /* ty=Tensor[(2080), int32] */;
  %972 = @func_2619(%967, %968, %969, %970, %971) /* ty=(Tensor[(4, 9, 2), bool], Tensor[(16, 6, 14), bool], Tensor[(1344), uint8], Tensor[(3, 14, 16), float32], Tensor[(672), float32], Tensor[(16, 10, 13), bool], int32, Tensor[(2080), int32], Tensor[(40, 2), float32], Tensor[(2145), float32], Tensor[(10, ?, 8), float32]) */;
  %973 = cast(meta[relay.Constant][58] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %974 = cast(%var_2755, dtype="bool") /* ty=bool */;
  %975 = cast(meta[relay.Constant][59] /* ty=Tensor[(336, 4), uint8] */, dtype="float32") /* ty=Tensor[(336, 4), float32] */;
  %976 = logical_xor(%960, %961) /* ty=Tensor[(10, 9, 2), uint16] */;
  %977 = %972.1;
  %978 = less_equal(%973, %974) /* ty=Tensor[(72), bool] */;
  %979 = sigmoid(%975) /* ty=Tensor[(336, 4), float32] */;
  (%976, %977, meta[relay.Constant][60] /* ty=Tensor[(2080), int32] */, %978, %979)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen258/build/output.py:2510: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen258/build/output.py:2515: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen258/build/output.py:2529: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen258/build/output.py:2534: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen258/build/output.py:2539: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen258/build/output.py:2544: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> Tensor[(3, 2, 15), float32] {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 2, 15), float32] */, dtype="float32") /* GeneratedSource */ /* ty=Tensor[(3, 2, 15), float32] */;
  log2(%0) /* GeneratedSource */ /* ty=Tensor[(3, 2, 15), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

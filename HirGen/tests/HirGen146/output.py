import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_12 = relay.var("var_12", dtype = "float64", shape = (3, 2, 16))#candidate|12|(3, 2, 16)|var|float64
var_13 = relay.var("var_13", dtype = "float64", shape = (3, 2, 16))#candidate|13|(3, 2, 16)|var|float64
bop_14 = relay.minimum(var_12.astype('float64'), relay.reshape(var_13.astype('float64'), relay.shape_of(var_12))) # shape=(3, 2, 16)
output = bop_14
output2 = bop_14
func_21 = relay.Function([var_12,var_13,], output)
mod['func_21'] = func_21
mod = relay.transform.InferType()(mod)
var_22 = relay.var("var_22", dtype = "float64", shape = (3, 2, 16))#candidate|22|(3, 2, 16)|var|float64
var_23 = relay.var("var_23", dtype = "float64", shape = (3, 2, 16))#candidate|23|(3, 2, 16)|var|float64
output = func_21(var_22,var_23,)
func_24 = relay.Function([var_22,var_23,], output)
mutated_mod['func_24'] = func_24
mutated_mod = relay.transform.InferType()(mutated_mod)
const_26 = relay.const([[[-8,-7,8,3,8,-2,-10,10,1],[-10,8,8,1,-6,-10,6,-7,9]],[[1,-3,-9,7,-1,3,6,1,-3],[1,-8,-8,8,-8,-9,2,8,10]],[[-2,7,5,-3,5,-6,-1,-2,-5],[-1,4,-10,6,-4,9,2,-10,-3]],[[10,5,-8,-2,1,-1,-4,-1,-2],[3,3,2,1,3,4,-6,4,8]]], dtype = "int64")#candidate|26|(4, 2, 9)|const|int64
var_27 = relay.var("var_27", dtype = "int64", shape = (4, 2, 9))#candidate|27|(4, 2, 9)|var|int64
bop_28 = relay.add(const_26.astype('int64'), relay.reshape(var_27.astype('int64'), relay.shape_of(const_26))) # shape=(4, 2, 9)
output = relay.Tuple([bop_28,])
output2 = relay.Tuple([bop_28,])
func_33 = relay.Function([var_27,], output)
mod['func_33'] = func_33
mod = relay.transform.InferType()(mod)
var_34 = relay.var("var_34", dtype = "int64", shape = (4, 2, 9))#candidate|34|(4, 2, 9)|var|int64
output = func_33(var_34)
func_35 = relay.Function([var_34], output)
mutated_mod['func_35'] = func_35
mutated_mod = relay.transform.InferType()(mutated_mod)
var_127 = relay.var("var_127", dtype = "int8", shape = ())#candidate|127|()|var|int8
var_128 = relay.var("var_128", dtype = "int8", shape = (3, 16, 8))#candidate|128|(3, 16, 8)|var|int8
bop_129 = relay.right_shift(var_127.astype('int8'), var_128.astype('int8')) # shape=(3, 16, 8)
uop_140 = relay.erf(var_128.astype('float64')) # shape=(3, 16, 8)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
const_151 = relay.const([[-8,-10,10,-5,-7,3,-4,5,4,1,-2,7],[-2,-8,-4,-6,5,7,-9,8,-3,5,4,5],[10,7,1,-1,-6,-1,9,-5,3,-2,6,10],[1,-7,9,-4,-9,2,-4,3,4,-2,-1,-9],[-1,-9,-1,8,-8,6,10,6,-10,9,1,-3],[8,-10,-4,-7,10,-2,7,-2,7,-2,-1,-6]], dtype = "int64")#candidate|151|(6, 12)|const|int64
call_150 = relay.TupleGetItem(func_33_call(relay.reshape(const_151.astype('int64'), [4, 2, 9])), 0)
call_152 = relay.TupleGetItem(func_35_call(relay.reshape(const_151.astype('int64'), [4, 2, 9])), 0)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
call_154 = relay.TupleGetItem(func_33_call(relay.reshape(call_150.astype('int64'), [4, 2, 9])), 0)
call_155 = relay.TupleGetItem(func_35_call(relay.reshape(call_150.astype('int64'), [4, 2, 9])), 0)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
call_175 = relay.TupleGetItem(func_33_call(relay.reshape(call_150.astype('int64'), [4, 2, 9])), 0)
call_176 = relay.TupleGetItem(func_35_call(relay.reshape(call_150.astype('int64'), [4, 2, 9])), 0)
output = relay.Tuple([bop_129,uop_140,call_150,const_151,call_154,call_175,])
output2 = relay.Tuple([bop_129,uop_140,call_152,const_151,call_155,call_176,])
func_177 = relay.Function([var_127,var_128,], output)
mod['func_177'] = func_177
mod = relay.transform.InferType()(mod)
var_178 = relay.var("var_178", dtype = "int8", shape = ())#candidate|178|()|var|int8
var_179 = relay.var("var_179", dtype = "int8", shape = (3, 16, 8))#candidate|179|(3, 16, 8)|var|int8
output = func_177(var_178,var_179,)
func_180 = relay.Function([var_178,var_179,], output)
mutated_mod['func_180'] = func_180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_219 = relay.var("var_219", dtype = "float64", shape = (14, 8, 8))#candidate|219|(14, 8, 8)|var|float64
uop_220 = relay.cos(var_219.astype('float64')) # shape=(14, 8, 8)
func_21_call = mod.get_global_var('func_21')
func_24_call = mutated_mod.get_global_var('func_24')
const_223 = relay.const([9.044342,3.026485,6.090361,-1.932622,-9.648279,1.291685,0.326705,-1.103587,-2.746778,2.965583,-4.947457,3.318425,-9.777660,-3.469595,-2.364518,9.511242,-4.382566,9.326507,9.671987,9.948439,9.874350,0.147315,-5.166088,-7.342979,-5.390538,-9.120997,7.051660,9.425146,8.547059,9.654298,6.658113,0.786611,5.030374,8.322208,-0.856354,-2.161311,0.610978,-6.682482,2.453774,-1.325752,-4.630432,0.542723,-4.341449,-0.516119,-3.721847,1.525732,-0.446313,7.902919,9.967262,-0.415316,2.743703,4.568623,-8.648894,1.970396,0.123371,-1.001912,-7.072104,2.195560,-7.037324,-4.992135,6.941153,-0.838203,-1.486979,6.145276,5.930811,2.709204,-7.468240,8.021813,1.494498,-5.939329,2.249074,-0.680787,-1.598507,-9.799214,2.312401,0.622119,3.088514,-7.563034,-4.787103,2.344976,-2.866612,-6.470807,-1.753834,0.100738,-0.166445,-7.457980,-3.465319,6.625539,-5.986961,2.945803,-2.216127,-8.476421,4.963222,9.522018,-2.018352,8.056476], dtype = "float64")#candidate|223|(96,)|const|float64
call_222 = func_21_call(relay.reshape(const_223.astype('float64'), [3, 2, 16]), relay.reshape(const_223.astype('float64'), [3, 2, 16]), )
call_224 = func_21_call(relay.reshape(const_223.astype('float64'), [3, 2, 16]), relay.reshape(const_223.astype('float64'), [3, 2, 16]), )
func_177_call = mod.get_global_var('func_177')
func_180_call = mutated_mod.get_global_var('func_180')
var_227 = relay.var("var_227", dtype = "int8", shape = ())#candidate|227|()|var|int8
var_228 = relay.var("var_228", dtype = "int8", shape = (384,))#candidate|228|(384,)|var|int8
call_226 = relay.TupleGetItem(func_177_call(relay.reshape(var_227.astype('int8'), []), relay.reshape(var_228.astype('int8'), [3, 16, 8]), ), 2)
call_229 = relay.TupleGetItem(func_180_call(relay.reshape(var_227.astype('int8'), []), relay.reshape(var_228.astype('int8'), [3, 16, 8]), ), 2)
func_177_call = mod.get_global_var('func_177')
func_180_call = mutated_mod.get_global_var('func_180')
call_242 = relay.TupleGetItem(func_177_call(relay.reshape(var_227.astype('int8'), []), relay.reshape(var_228.astype('int8'), [3, 16, 8]), ), 1)
call_243 = relay.TupleGetItem(func_180_call(relay.reshape(var_227.astype('int8'), []), relay.reshape(var_228.astype('int8'), [3, 16, 8]), ), 1)
func_21_call = mod.get_global_var('func_21')
func_24_call = mutated_mod.get_global_var('func_24')
call_254 = func_21_call(relay.reshape(call_222.astype('float64'), [3, 2, 16]), relay.reshape(call_222.astype('float64'), [3, 2, 16]), )
call_255 = func_21_call(relay.reshape(call_222.astype('float64'), [3, 2, 16]), relay.reshape(call_222.astype('float64'), [3, 2, 16]), )
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
call_258 = relay.TupleGetItem(func_33_call(relay.reshape(call_226.astype('int64'), [4, 2, 9])), 0)
call_259 = relay.TupleGetItem(func_35_call(relay.reshape(call_226.astype('int64'), [4, 2, 9])), 0)
output = relay.Tuple([uop_220,call_222,const_223,call_226,var_227,var_228,call_242,call_254,call_258,])
output2 = relay.Tuple([uop_220,call_224,const_223,call_229,var_227,var_228,call_243,call_255,call_259,])
func_274 = relay.Function([var_219,var_227,var_228,], output)
mod['func_274'] = func_274
mod = relay.transform.InferType()(mod)
var_275 = relay.var("var_275", dtype = "float64", shape = (14, 8, 8))#candidate|275|(14, 8, 8)|var|float64
var_276 = relay.var("var_276", dtype = "int8", shape = ())#candidate|276|()|var|int8
var_277 = relay.var("var_277", dtype = "int8", shape = (384,))#candidate|277|(384,)|var|int8
output = func_274(var_275,var_276,var_277,)
func_278 = relay.Function([var_275,var_276,var_277,], output)
mutated_mod['func_278'] = func_278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_645 = relay.var("var_645", dtype = "float32", shape = (6, 10, 16))#candidate|645|(6, 10, 16)|var|float32
uop_646 = relay.acos(var_645.astype('float32')) # shape=(6, 10, 16)
bop_653 = relay.less_equal(var_645.astype('bool'), relay.reshape(uop_646.astype('bool'), relay.shape_of(var_645))) # shape=(6, 10, 16)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
var_670 = relay.var("var_670", dtype = "float64", shape = (896,))#candidate|670|(896,)|var|float64
var_671 = relay.var("var_671", dtype = "int8", shape = ())#candidate|671|()|var|int8
var_672 = relay.var("var_672", dtype = "int8", shape = (384,))#candidate|672|(384,)|var|int8
call_669 = relay.TupleGetItem(func_274_call(relay.reshape(var_670.astype('float64'), [14, 8, 8]), relay.reshape(var_671.astype('int8'), []), relay.reshape(var_672.astype('int8'), [384,]), ), 3)
call_673 = relay.TupleGetItem(func_278_call(relay.reshape(var_670.astype('float64'), [14, 8, 8]), relay.reshape(var_671.astype('int8'), []), relay.reshape(var_672.astype('int8'), [384,]), ), 3)
output = relay.Tuple([bop_653,call_669,var_670,var_671,var_672,])
output2 = relay.Tuple([bop_653,call_673,var_670,var_671,var_672,])
func_683 = relay.Function([var_645,var_670,var_671,var_672,], output)
mod['func_683'] = func_683
mod = relay.transform.InferType()(mod)
mutated_mod['func_683'] = func_683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_683_call = mutated_mod.get_global_var('func_683')
var_685 = relay.var("var_685", dtype = "float32", shape = (6, 10, 16))#candidate|685|(6, 10, 16)|var|float32
var_686 = relay.var("var_686", dtype = "float64", shape = (896,))#candidate|686|(896,)|var|float64
var_687 = relay.var("var_687", dtype = "int8", shape = ())#candidate|687|()|var|int8
var_688 = relay.var("var_688", dtype = "int8", shape = (384,))#candidate|688|(384,)|var|int8
call_684 = func_683_call(var_685,var_686,var_687,var_688,)
output = call_684
func_689 = relay.Function([var_685,var_686,var_687,var_688,], output)
mutated_mod['func_689'] = func_689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_710 = relay.var("var_710", dtype = "float32", shape = (15, 7, 1))#candidate|710|(15, 7, 1)|var|float32
uop_711 = relay.tan(var_710.astype('float32')) # shape=(15, 7, 1)
uop_713 = relay.exp(var_710.astype('float32')) # shape=(15, 7, 1)
uop_715 = relay.atan(uop_713.astype('float32')) # shape=(15, 7, 1)
bop_735 = relay.logical_or(uop_715.astype('bool'), relay.reshape(uop_711.astype('bool'), relay.shape_of(uop_715))) # shape=(15, 7, 1)
func_177_call = mod.get_global_var('func_177')
func_180_call = mutated_mod.get_global_var('func_180')
const_745 = relay.const(7, dtype = "int8")#candidate|745|()|const|int8
var_746 = relay.var("var_746", dtype = "int8", shape = (384,))#candidate|746|(384,)|var|int8
call_744 = relay.TupleGetItem(func_177_call(relay.reshape(const_745.astype('int8'), []), relay.reshape(var_746.astype('int8'), [3, 16, 8]), ), 3)
call_747 = relay.TupleGetItem(func_180_call(relay.reshape(const_745.astype('int8'), []), relay.reshape(var_746.astype('int8'), [3, 16, 8]), ), 3)
output = relay.Tuple([bop_735,call_744,const_745,var_746,])
output2 = relay.Tuple([bop_735,call_747,const_745,var_746,])
func_756 = relay.Function([var_710,var_746,], output)
mod['func_756'] = func_756
mod = relay.transform.InferType()(mod)
var_757 = relay.var("var_757", dtype = "float32", shape = (15, 7, 1))#candidate|757|(15, 7, 1)|var|float32
var_758 = relay.var("var_758", dtype = "int8", shape = (384,))#candidate|758|(384,)|var|int8
output = func_756(var_757,var_758,)
func_759 = relay.Function([var_757,var_758,], output)
mutated_mod['func_759'] = func_759
mutated_mod = relay.transform.InferType()(mutated_mod)
var_790 = relay.var("var_790", dtype = "float64", shape = (1, 5, 8))#candidate|790|(1, 5, 8)|var|float64
uop_791 = relay.tan(var_790.astype('float64')) # shape=(1, 5, 8)
uop_794 = relay.asin(uop_791.astype('float64')) # shape=(1, 5, 8)
bop_798 = relay.bitwise_or(uop_794.astype('int32'), relay.reshape(uop_791.astype('int32'), relay.shape_of(uop_794))) # shape=(1, 5, 8)
output = bop_798
output2 = bop_798
func_804 = relay.Function([var_790,], output)
mod['func_804'] = func_804
mod = relay.transform.InferType()(mod)
var_805 = relay.var("var_805", dtype = "float64", shape = (1, 5, 8))#candidate|805|(1, 5, 8)|var|float64
output = func_804(var_805)
func_806 = relay.Function([var_805], output)
mutated_mod['func_806'] = func_806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_905 = relay.var("var_905", dtype = "int64", shape = (13, 8, 11))#candidate|905|(13, 8, 11)|var|int64
const_906 = relay.const([[[5,10,1,-1,-10,-5,-5,-10,5,8,-2],[8,-4,-9,6,2,-5,-7,8,3,9,9],[-7,6,6,7,8,-10,-8,5,-4,7,1],[8,-4,-7,9,6,-7,-7,6,-3,-1,-1],[1,5,2,7,-8,3,5,2,8,-9,10],[-9,2,-3,6,4,-9,-5,2,6,-8,-1],[-1,-7,1,-3,2,9,6,6,7,9,10],[-9,-7,-4,4,-10,-8,-3,10,2,-9,-7]],[[3,7,5,6,-10,-10,9,-6,9,7,2],[6,7,-6,-9,1,6,1,-4,9,-1,-4],[4,3,-5,-1,-10,1,-5,6,-1,5,7],[-1,3,8,2,4,2,-1,10,6,-9,9],[-7,7,4,-5,9,5,-5,-6,4,5,1],[-5,-6,-1,1,10,-7,-3,-8,-3,4,9],[-10,8,-8,2,-7,-8,-1,9,-1,9,5],[-8,-10,-1,10,4,6,-3,-5,4,3,6]],[[-5,5,3,1,-4,2,-1,-10,3,-10,-6],[-5,-2,-4,5,9,2,-3,6,2,4,-7],[6,-5,-9,-8,-1,-9,-4,-8,-10,6,-8],[8,4,7,-5,4,-10,-10,5,8,-3,-9],[-8,5,-3,-2,3,-9,4,-6,10,10,-8],[-1,-10,-10,-3,-1,7,1,-8,-3,4,7],[-7,7,-2,5,9,2,-4,4,1,-10,-3],[8,-7,4,2,9,4,-7,5,6,-10,7]],[[9,1,9,8,-6,3,7,5,9,-9,2],[-1,7,-4,4,-1,3,4,-7,3,-9,7],[6,-5,5,-9,-9,-7,8,7,3,6,2],[-9,2,-4,-8,7,2,10,8,-8,10,7],[-9,9,-2,9,4,-7,-9,7,2,3,8],[5,1,-4,1,10,-4,3,3,-2,-1,1],[-7,-7,-2,7,4,-5,5,7,-1,-7,5],[10,5,2,10,6,-4,8,-5,-6,-9,3]],[[2,-2,-6,-5,1,8,-9,4,6,7,-4],[5,-2,-8,4,4,3,9,5,10,-1,-5],[-1,-8,-8,-6,-1,-4,2,3,5,-1,1],[10,4,-5,-8,-5,-7,5,-1,-10,10,5],[-7,-9,4,-3,-10,5,10,-10,10,9,-2],[5,-5,-4,-10,-6,-7,-9,5,-8,-2,-10],[4,-5,7,4,-8,1,-7,-8,-5,-1,-1],[3,-2,-2,5,9,2,-6,7,6,-2,-7]],[[-3,-3,9,-1,6,-6,-7,3,10,3,-5],[9,-10,7,4,-8,-9,5,7,-10,-10,-9],[5,-8,5,7,2,-2,-2,2,-3,3,3],[1,2,3,8,-8,6,-7,7,1,-9,2],[3,7,6,7,-8,9,2,1,-6,2,-4],[2,-1,3,-7,-3,-8,-4,10,4,-4,7],[7,-3,-6,-2,3,4,-9,6,-1,-4,-9],[5,-4,7,-4,-3,2,-1,-10,-1,-8,-7]],[[-3,1,-3,-4,5,-4,-10,6,-7,4,-6],[10,-9,9,7,6,-2,-5,-4,-7,-10,-10],[4,-4,-7,-10,5,-9,2,-4,5,-2,-7],[-1,-8,1,-1,-10,-9,4,5,8,-6,4],[6,-1,-6,-5,-8,5,5,5,9,1,-10],[-5,-10,2,-2,6,-2,9,7,-4,-10,-2],[7,3,3,-5,10,5,-6,8,3,6,-10],[-5,8,-4,10,-7,5,2,-5,-8,-8,-7]],[[-2,-2,8,10,4,-6,7,-3,10,-4,2],[-1,-5,-4,-4,7,7,-10,-9,4,8,-6],[-2,3,-2,4,-3,5,-8,2,1,7,-1],[2,7,-3,-5,-1,-1,8,-1,7,1,-3],[10,-10,-5,10,4,-5,-7,-6,-7,-1,1],[-2,-4,-6,1,-4,5,6,1,-5,8,-5],[-8,9,-8,-4,10,1,4,-10,7,10,6],[-3,1,-1,7,4,-7,-1,-3,-3,-2,8]],[[-2,-5,-2,2,-10,-6,-10,-10,5,4,-6],[6,-1,-2,-5,-1,1,-5,-10,3,-1,-2],[8,-10,5,4,9,1,-10,3,5,10,9],[-1,4,8,2,8,2,-2,2,-6,-5,2],[-10,-9,-8,-3,6,-5,-7,-8,3,-1,-6],[1,7,10,6,7,5,-3,7,-2,-9,5],[-10,-6,-1,-9,10,-4,9,10,5,1,3],[5,-9,3,5,-5,5,9,8,4,8,-4]],[[-3,2,4,-8,-5,-7,1,4,1,1,3],[-3,-10,9,-4,-4,-1,-5,-10,-10,-7,1],[8,-3,7,5,4,10,-5,-1,-4,-8,-1],[-10,7,6,-8,1,4,-6,-8,10,-1,5],[9,-6,10,2,8,-4,1,-8,-9,-4,3],[-4,5,2,-4,1,-10,10,1,-3,1,6],[7,10,3,1,-8,-8,10,-8,-4,10,5],[7,-4,-9,-8,-9,-6,-3,7,-8,8,5]],[[-5,-4,1,4,6,6,-2,6,-7,-4,-6],[-6,10,7,10,-8,4,-4,6,4,9,-3],[-2,-8,-6,4,1,4,-3,-1,-2,6,3],[-4,7,-10,-8,5,3,-1,-10,-10,4,-4],[6,2,8,-5,-7,7,-5,-10,3,-2,-3],[-5,9,-5,3,2,7,-5,-1,4,-9,3],[2,-8,-1,1,-5,-8,-6,-7,-2,-8,10],[-4,6,-10,2,9,-7,1,7,-1,-2,5]],[[1,7,-1,-4,8,4,7,9,5,5,4],[9,8,4,-10,8,-2,-5,-9,6,7,3],[3,-5,-7,10,6,3,-3,6,7,-5,8],[-2,10,-6,7,3,1,-8,-10,-2,-10,-4],[3,6,-3,-10,2,-10,9,9,7,-6,4],[7,-2,4,-3,5,-6,7,-2,2,9,6],[10,-6,1,-3,5,1,-8,-1,3,8,-9],[-1,-2,-6,-5,-2,10,-9,-1,-8,-4,-4]],[[-5,-5,1,10,-10,2,3,4,-10,2,6],[3,-6,4,1,4,4,-6,5,-6,6,7],[-4,7,9,4,-1,-1,-7,6,-4,3,2],[-5,-7,1,7,-3,1,6,9,3,8,-6],[-10,2,5,-4,-7,5,9,5,6,-8,-10],[-6,6,-9,-5,9,7,3,-7,10,-5,-5],[-3,-2,-10,5,-7,-9,10,9,-2,3,8],[-3,3,8,-10,-2,-7,1,5,9,5,-6]]], dtype = "int64")#candidate|906|(13, 8, 11)|const|int64
bop_907 = relay.greater_equal(var_905.astype('bool'), relay.reshape(const_906.astype('bool'), relay.shape_of(var_905))) # shape=(13, 8, 11)
const_910 = relay.const([[[False,False,False,True,False,False,False,False,False,True,False],[True,False,True,False,False,True,False,False,True,False,True],[False,False,True,False,True,True,True,True,True,True,True],[False,False,True,False,False,True,False,False,True,False,False],[False,False,False,True,False,False,False,True,True,True,True],[True,True,False,False,True,True,False,False,False,False,True],[True,False,True,True,True,True,False,True,True,True,True],[True,False,True,False,True,False,True,False,True,False,True]],[[False,True,False,True,True,True,False,True,False,True,True],[True,False,False,True,True,True,False,False,False,False,False],[False,False,True,False,True,True,False,False,True,False,True],[True,True,False,False,True,True,False,True,False,False,True],[True,True,False,False,True,False,True,True,True,True,True],[False,True,True,False,True,True,True,True,False,False,True],[False,True,False,True,True,True,True,True,True,False,False],[True,True,False,False,False,True,True,True,True,True,False]],[[False,True,False,True,False,True,True,True,False,True,False],[True,False,True,False,True,True,True,False,True,True,True],[True,True,True,True,False,False,False,True,False,False,True],[False,True,True,False,False,False,False,True,False,True,True],[False,False,False,True,True,False,False,False,True,False,True],[False,True,True,False,True,True,True,True,False,True,False],[True,True,False,False,False,True,False,True,False,False,True],[False,True,True,True,False,True,False,False,True,True,True]],[[False,True,False,True,False,True,True,False,True,True,True],[True,True,True,False,True,True,False,False,False,False,True],[True,True,True,True,False,True,False,True,False,False,False],[False,False,True,True,True,True,False,False,False,True,True],[False,True,True,True,True,True,True,False,False,True,True],[False,False,True,True,False,False,False,False,True,False,False],[False,False,False,True,False,False,True,False,False,True,True],[True,False,True,False,False,True,False,True,False,False,True]],[[False,False,True,False,False,True,True,False,False,True,False],[False,False,True,False,False,True,False,True,False,True,False],[True,True,False,False,False,True,True,False,False,True,False],[True,True,False,False,True,True,False,False,True,False,True],[False,True,True,True,True,False,False,True,False,True,False],[False,False,False,True,True,True,True,False,True,False,True],[False,True,False,True,True,True,False,False,False,True,True],[True,False,False,True,False,True,False,False,False,False,False]],[[False,False,True,True,True,True,True,False,False,True,True],[True,False,False,False,False,False,False,True,True,True,False],[False,False,False,True,False,False,True,True,False,False,True],[True,True,False,False,False,False,True,True,True,False,True],[False,False,False,False,False,True,False,True,True,False,True],[False,True,False,False,True,True,True,True,False,False,False],[False,True,True,True,False,False,False,False,False,False,False],[False,True,False,True,True,True,True,True,False,True,False]],[[False,True,True,True,False,False,True,True,True,False,False],[False,True,False,False,True,False,False,False,False,False,True],[False,False,False,True,True,True,True,False,True,False,True],[True,True,False,True,True,True,False,True,True,False,False],[True,True,True,True,True,True,True,False,False,True,False],[False,False,True,True,True,True,True,True,False,False,True],[False,True,False,True,False,True,False,False,True,True,True],[False,False,True,False,True,True,False,False,True,True,False]],[[False,False,False,True,True,True,True,True,False,False,True],[False,True,True,True,False,True,False,True,True,True,False],[False,True,True,True,True,False,False,False,False,False,True],[False,True,False,False,False,False,False,False,True,True,False],[False,False,False,True,True,True,False,False,True,False,True],[True,True,False,True,True,True,True,True,False,False,False],[False,False,True,False,False,True,True,True,True,True,False],[True,True,True,True,True,True,False,False,False,True,True]],[[False,False,True,True,False,False,True,False,True,False,False],[False,False,False,True,False,False,True,True,False,False,False],[True,True,False,False,False,False,False,True,True,False,False],[False,False,False,True,True,False,False,True,False,False,False],[False,True,False,False,False,True,False,True,False,True,False],[False,True,False,False,True,False,True,False,False,False,False],[False,True,True,False,True,True,False,True,True,False,False],[True,True,True,False,True,False,False,True,False,False,False]],[[True,False,False,True,False,False,True,False,False,True,True],[True,True,False,False,True,True,True,True,True,False,False],[False,True,False,False,True,True,True,False,True,False,False],[True,True,False,True,False,False,True,True,True,True,False],[True,True,True,False,True,False,False,True,True,False,False],[True,True,False,False,False,False,True,False,False,True,True],[True,False,True,True,False,False,True,True,False,False,False],[True,True,True,True,True,True,False,True,True,True,False]],[[True,True,False,True,True,False,False,False,True,True,False],[False,False,False,False,True,True,False,False,False,True,True],[True,True,False,False,True,True,False,True,False,True,False],[False,True,True,True,True,True,False,False,False,True,False],[False,True,False,False,False,False,False,True,True,True,False],[True,False,False,False,False,True,False,True,True,True,False],[True,False,True,False,False,True,False,True,False,True,True],[False,True,True,False,True,False,True,False,True,False,False]],[[True,False,False,False,True,False,True,False,False,False,False],[False,True,False,True,True,False,True,False,True,True,True],[False,True,False,False,False,True,True,False,True,False,True],[False,False,False,False,False,False,False,False,False,False,True],[False,False,True,False,True,True,True,True,True,True,False],[True,False,True,False,True,True,False,False,False,False,False],[False,False,False,False,False,True,False,True,False,True,True],[True,True,False,True,True,True,False,False,False,True,False]],[[True,False,False,False,False,False,True,False,False,True,False],[True,False,False,False,False,True,False,True,False,False,True],[True,True,False,False,True,False,False,False,True,True,False],[True,False,False,True,True,False,True,False,False,False,False],[True,False,True,False,True,False,True,True,True,False,False],[True,False,True,False,True,True,True,False,False,False,False],[False,True,True,True,False,False,True,True,False,False,True],[True,True,False,False,False,True,True,False,True,True,False]]], dtype = "bool")#candidate|910|(13, 8, 11)|const|bool
bop_911 = relay.logical_xor(bop_907.astype('uint16'), relay.reshape(const_910.astype('uint16'), relay.shape_of(bop_907))) # shape=(13, 8, 11)
func_756_call = mod.get_global_var('func_756')
func_759_call = mutated_mod.get_global_var('func_759')
const_917 = relay.const([[5.445248,-1.647091,5.454432,2.527380,3.143556],[3.198741,2.198204,3.729663,9.655950,-0.570081],[5.352041,-1.643936,2.218785,-0.229649,1.099403],[-7.104440,3.229223,5.214885,-2.599625,2.638727],[8.345316,-5.372095,-6.343956,8.264623,6.955150],[-6.346966,9.855943,7.346658,-1.038201,-3.791438],[9.649664,-6.707705,1.111518,1.069296,-0.115518],[-1.362447,-0.475799,-8.786252,-7.379239,-9.293740],[-4.016823,5.396558,0.090124,-6.233823,-8.120180],[1.368345,-9.453314,-1.494174,2.278089,6.558275],[0.195606,4.664992,4.795119,-7.473012,-2.557120],[1.854087,6.746773,-1.571850,9.910957,-6.667322],[0.647846,-2.776337,4.019181,9.321828,-0.393118],[8.622019,-4.481066,9.226841,-8.541268,-9.885546],[-6.960108,9.009205,-6.015696,2.151875,3.574283],[4.376000,2.404204,-3.843564,-6.671738,-0.776160],[-6.228113,-3.954426,-9.294244,-4.633327,1.067888],[7.770887,9.562057,8.860729,-7.596993,6.807300],[-4.104184,-4.158896,-0.794590,5.094595,1.903436],[-9.663665,2.122968,-6.500089,-2.862878,-0.823822],[9.349218,-3.979086,6.521753,-9.412490,-3.952285]], dtype = "float32")#candidate|917|(21, 5)|const|float32
const_918 = relay.const([[-4,3,3,-7,3,8,-3,10],[-2,-8,10,-1,2,8,3,-1],[10,1,3,-8,9,4,10,9],[-7,-6,9,-1,-3,-3,1,-3],[9,-4,5,1,-8,8,-8,-2],[6,-3,-7,-7,1,9,5,-3],[-10,-9,9,-1,-4,6,9,-9],[6,-9,-4,3,8,9,6,8],[-9,2,-6,6,3,-3,8,7],[-4,6,5,-5,-3,-6,6,-6],[-10,4,3,-7,-2,9,4,5],[-4,-8,-2,2,7,6,-2,10],[-3,10,-4,2,-7,7,7,-9],[-3,-8,10,-2,-7,-10,-3,3],[-5,-1,9,-7,4,-8,-8,-10],[6,7,1,10,-8,-9,3,6],[-2,-6,-10,-7,-9,-5,-4,9],[6,-3,-5,-5,7,3,-5,-5],[6,7,-8,-2,1,-5,6,-4],[-4,-9,4,-4,-9,9,6,10],[9,1,2,-6,3,-8,7,-3],[-9,-10,10,3,10,3,8,-1],[-3,-4,-6,-7,-2,-9,-7,2],[7,-8,-7,-6,3,-5,5,7],[6,2,-4,2,2,-8,6,-4],[1,7,2,-7,5,5,-7,7],[-6,7,5,-7,-1,-7,-5,9],[2,-6,-1,9,-4,-5,9,-4],[8,6,-1,2,7,10,-10,-10],[6,9,8,5,-4,-2,-2,-7],[-8,-6,5,-10,9,4,8,4],[-9,-1,-2,-10,-7,-9,-9,-1],[-7,-3,-7,5,-2,7,-3,5],[-3,1,-3,2,-3,10,5,-8],[-10,-5,3,-5,8,-8,1,5],[10,-9,-8,4,10,-3,7,7],[2,6,-3,4,-1,4,-4,7],[-6,-8,7,-8,-9,-2,-4,-6],[5,4,3,1,8,9,8,-7],[-2,1,-8,6,1,4,1,2],[3,5,-3,1,6,7,-6,10],[-9,7,9,-5,-5,6,10,-3],[-5,1,7,-1,-2,6,-3,5],[-7,-9,6,-9,-6,7,2,-1],[8,-4,1,-7,4,-10,10,-8],[8,3,5,6,-4,7,5,-4],[-9,-10,-6,5,10,8,9,-5],[5,-10,8,4,-9,2,1,8]], dtype = "int8")#candidate|918|(48, 8)|const|int8
call_916 = relay.TupleGetItem(func_756_call(relay.reshape(const_917.astype('float32'), [15, 7, 1]), relay.reshape(const_918.astype('int8'), [384,]), ), 1)
call_919 = relay.TupleGetItem(func_759_call(relay.reshape(const_917.astype('float32'), [15, 7, 1]), relay.reshape(const_918.astype('int8'), [384,]), ), 1)
func_21_call = mod.get_global_var('func_21')
func_24_call = mutated_mod.get_global_var('func_24')
var_923 = relay.var("var_923", dtype = "float64", shape = (96,))#candidate|923|(96,)|var|float64
call_922 = func_21_call(relay.reshape(var_923.astype('float64'), [3, 2, 16]), relay.reshape(var_923.astype('float64'), [3, 2, 16]), )
call_924 = func_21_call(relay.reshape(var_923.astype('float64'), [3, 2, 16]), relay.reshape(var_923.astype('float64'), [3, 2, 16]), )
output = relay.Tuple([bop_911,call_916,const_917,const_918,call_922,var_923,])
output2 = relay.Tuple([bop_911,call_919,const_917,const_918,call_924,var_923,])
func_927 = relay.Function([var_905,var_923,], output)
mod['func_927'] = func_927
mod = relay.transform.InferType()(mod)
var_928 = relay.var("var_928", dtype = "int64", shape = (13, 8, 11))#candidate|928|(13, 8, 11)|var|int64
var_929 = relay.var("var_929", dtype = "float64", shape = (96,))#candidate|929|(96,)|var|float64
output = func_927(var_928,var_929,)
func_930 = relay.Function([var_928,var_929,], output)
mutated_mod['func_930'] = func_930
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1019 = relay.var("var_1019", dtype = "float32", shape = (13, 16, 12))#candidate|1019|(13, 16, 12)|var|float32
uop_1020 = relay.sin(var_1019.astype('float32')) # shape=(13, 16, 12)
output = relay.Tuple([uop_1020,])
output2 = relay.Tuple([uop_1020,])
func_1028 = relay.Function([var_1019,], output)
mod['func_1028'] = func_1028
mod = relay.transform.InferType()(mod)
var_1029 = relay.var("var_1029", dtype = "float32", shape = (13, 16, 12))#candidate|1029|(13, 16, 12)|var|float32
output = func_1028(var_1029)
func_1030 = relay.Function([var_1029], output)
mutated_mod['func_1030'] = func_1030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1192 = relay.var("var_1192", dtype = "float64", shape = (6, 6, 16))#candidate|1192|(6, 6, 16)|var|float64
uop_1193 = relay.log(var_1192.astype('float64')) # shape=(6, 6, 16)
func_804_call = mod.get_global_var('func_804')
func_806_call = mutated_mod.get_global_var('func_806')
var_1205 = relay.var("var_1205", dtype = "float64", shape = (40,))#candidate|1205|(40,)|var|float64
call_1204 = func_804_call(relay.reshape(var_1205.astype('float64'), [1, 5, 8]))
call_1206 = func_804_call(relay.reshape(var_1205.astype('float64'), [1, 5, 8]))
var_1208 = relay.var("var_1208", dtype = "float64", shape = (6, 6, 16))#candidate|1208|(6, 6, 16)|var|float64
bop_1209 = relay.bitwise_or(uop_1193.astype('int8'), relay.reshape(var_1208.astype('int8'), relay.shape_of(uop_1193))) # shape=(6, 6, 16)
bop_1218 = relay.equal(uop_1193.astype('bool'), relay.reshape(bop_1209.astype('bool'), relay.shape_of(uop_1193))) # shape=(6, 6, 16)
func_1028_call = mod.get_global_var('func_1028')
func_1030_call = mutated_mod.get_global_var('func_1030')
var_1226 = relay.var("var_1226", dtype = "float32", shape = (2496,))#candidate|1226|(2496,)|var|float32
call_1225 = relay.TupleGetItem(func_1028_call(relay.reshape(var_1226.astype('float32'), [13, 16, 12])), 0)
call_1227 = relay.TupleGetItem(func_1030_call(relay.reshape(var_1226.astype('float32'), [13, 16, 12])), 0)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
var_1230 = relay.var("var_1230", dtype = "float64", shape = (896,))#candidate|1230|(896,)|var|float64
var_1231 = relay.var("var_1231", dtype = "int8", shape = ())#candidate|1231|()|var|int8
const_1232 = relay.const([5,-6,8,9,10,-1,-1,8,-1,-10,8,10,10,-2,-2,-8,-5,-6,-4,10,6,10,4,-3,-6,10,1,-1,5,3,10,-6,6,10,5,-3,-3,8,-10,4,6,-1,4,-7,-3,8,-2,10,6,-7,10,-4,2,2,-3,-9,10,7,1,-5,-6,2,7,7,4,6,3,-8,-2,-8,-7,-5,8,1,7,6,8,3,-1,-3,-4,6,-9,-4,-5,7,1,8,-3,3,-4,-3,-8,-2,-7,-2,3,10,-4,-2,-9,10,-8,-1,7,1,4,6,10,-9,-2,-8,10,-7,-2,-5,8,3,4,-9,10,2,5,6,-5,-4,7,-4,-2,3,-9,-5,6,5,3,-10,-5,7,-10,9,7,4,7,-2,8,5,8,6,-9,1,-4,-5,3,1,2,-1,-5,-4,5,-3,5,-4,-9,4,-1,10,-8,-8,-4,4,-1,6,2,-10,7,-3,1,-3,8,-8,4,6,-2,5,-5,3,-6,2,10,6,-5,-10,-6,7,-2,-5,-5,-10,-7,-3,4,6,7,-9,-10,-4,5,1,7,-7,7,9,3,8,-6,2,-9,1,8,2,-6,3,8,-7,6,-8,-4,-4,8,-8,-7,4,9,-3,-5,3,1,7,3,-6,7,-9,-3,-9,7,3,6,-9,3,9,6,3,1,-9,-3,-1,-1,1,-5,2,6,7,3,6,-9,3,-1,5,6,6,8,-8,-10,-10,-9,-9,8,-8,4,-6,-3,10,-7,5,8,-3,-1,-5,1,-5,10,7,2,10,1,8,-6,9,-3,7,8,-10,-2,-9,2,5,-8,1,-8,-5,-10,-5,3,-2,-10,10,10,8,-6,-4,9,-10,2,10,-6,-2,-9,-3,-3,-1,-3,-3,-2,4,6,-6,-9,-5,-2,2,-9,2,-1,2,-9,9,7,-4,2,9,-8,-4,-3,-10,5,3,-6,4,2,-3,1,5,-3,7,7,-3,10,3,-8,10,-5,-9,-8,8,9,2,-5,-7,8,-4,-9,1,4,-5], dtype = "int8")#candidate|1232|(384,)|const|int8
call_1229 = relay.TupleGetItem(func_274_call(relay.reshape(var_1230.astype('float64'), [14, 8, 8]), relay.reshape(var_1231.astype('int8'), []), relay.reshape(const_1232.astype('int8'), [384,]), ), 1)
call_1233 = relay.TupleGetItem(func_278_call(relay.reshape(var_1230.astype('float64'), [14, 8, 8]), relay.reshape(var_1231.astype('int8'), []), relay.reshape(const_1232.astype('int8'), [384,]), ), 1)
var_1250 = relay.var("var_1250", dtype = "int8", shape = (6, 6, 16))#candidate|1250|(6, 6, 16)|var|int8
bop_1251 = relay.maximum(bop_1209.astype('uint64'), relay.reshape(var_1250.astype('uint64'), relay.shape_of(bop_1209))) # shape=(6, 6, 16)
output = relay.Tuple([call_1204,var_1205,bop_1218,call_1225,var_1226,call_1229,var_1230,var_1231,const_1232,bop_1251,])
output2 = relay.Tuple([call_1206,var_1205,bop_1218,call_1227,var_1226,call_1233,var_1230,var_1231,const_1232,bop_1251,])
func_1256 = relay.Function([var_1192,var_1205,var_1208,var_1226,var_1230,var_1231,var_1250,], output)
mod['func_1256'] = func_1256
mod = relay.transform.InferType()(mod)
mutated_mod['func_1256'] = func_1256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1256_call = mutated_mod.get_global_var('func_1256')
var_1258 = relay.var("var_1258", dtype = "float64", shape = (6, 6, 16))#candidate|1258|(6, 6, 16)|var|float64
var_1259 = relay.var("var_1259", dtype = "float64", shape = (40,))#candidate|1259|(40,)|var|float64
var_1260 = relay.var("var_1260", dtype = "float64", shape = (6, 6, 16))#candidate|1260|(6, 6, 16)|var|float64
var_1261 = relay.var("var_1261", dtype = "float32", shape = (2496,))#candidate|1261|(2496,)|var|float32
var_1262 = relay.var("var_1262", dtype = "float64", shape = (896,))#candidate|1262|(896,)|var|float64
var_1263 = relay.var("var_1263", dtype = "int8", shape = ())#candidate|1263|()|var|int8
var_1264 = relay.var("var_1264", dtype = "int8", shape = (6, 6, 16))#candidate|1264|(6, 6, 16)|var|int8
call_1257 = func_1256_call(var_1258,var_1259,var_1260,var_1261,var_1262,var_1263,var_1264,)
output = call_1257
func_1265 = relay.Function([var_1258,var_1259,var_1260,var_1261,var_1262,var_1263,var_1264,], output)
mutated_mod['func_1265'] = func_1265
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1487 = relay.const(-4.319131, dtype = "float32")#candidate|1487|()|const|float32
const_1488 = relay.const([[[-3.995791,4.322597,-4.332703,-9.385031,-6.991092],[-9.669764,-2.680854,-4.974284,-3.540961,6.199072],[7.527137,4.932819,7.461147,9.794348,0.259082],[8.481912,-7.871781,9.064521,8.632569,-4.784915],[1.133103,-6.350501,0.794703,7.553000,-3.357037],[5.795454,-6.777977,-5.647948,6.096544,-6.780612],[-4.352872,7.645938,-7.506789,-6.757598,-6.169827],[-4.739239,7.508225,8.085027,7.344668,3.865949],[-3.876186,2.865326,8.872709,-9.168257,5.686762],[3.775624,8.823412,-7.042428,-1.875824,1.041127],[2.953741,-8.414201,5.753182,-3.762120,-6.627063],[-6.892403,-5.975509,5.486984,-6.920379,-6.609138],[-9.721813,0.394852,-9.443123,2.317039,-1.673611],[3.568715,-6.608719,3.424018,-4.296359,6.490487],[4.883941,9.385425,0.177466,8.420198,-6.003298]],[[-3.490728,8.346662,-7.227289,4.598977,-2.139263],[9.261515,-8.612671,5.954959,2.903969,6.186821],[-9.470971,-1.423701,-7.444706,-9.620212,6.499357],[7.089615,0.812877,-1.280364,1.831153,-6.912680],[2.827732,8.644929,7.181702,3.865305,-7.432487],[7.274205,1.599304,-4.124248,-3.997440,1.201443],[-0.008403,1.073269,-3.992520,9.664306,7.929668],[4.455887,9.184063,-3.179959,-7.812257,8.025463],[-3.809768,9.034570,9.949326,7.076767,1.889151],[3.907931,-1.913731,2.679086,-2.358161,-6.426750],[-2.589975,2.481147,-8.657329,4.907938,7.915717],[-8.406148,6.036616,-6.395847,2.276933,-0.169792],[-4.114290,-6.699686,-8.990474,7.240927,0.026440],[8.061926,-3.067350,3.622896,-3.193770,0.569944],[-2.485398,-3.802355,2.129240,-7.263052,-7.790946]],[[8.911786,-6.978397,5.641793,-4.869876,-1.390579],[-9.452040,9.484780,-8.212799,-4.592824,0.090519],[-6.969213,2.055241,-3.574564,2.318739,8.701039],[9.614842,4.464345,4.629288,7.166371,7.514501],[4.689202,7.814005,-0.661936,2.803124,-3.995675],[-0.605868,-9.426042,6.197480,3.735684,0.149469],[8.114579,1.830008,0.907999,3.292871,-2.908631],[-7.411795,1.883621,6.930766,9.870899,-1.300802],[7.652157,-1.090406,-9.513599,-8.976379,0.017753],[-1.229120,7.563301,8.089108,-6.610301,1.389138],[8.694553,-1.662821,1.261777,3.424883,6.335841],[-5.820970,-9.359800,-4.686685,1.959852,-9.950151],[8.235072,7.423863,6.774716,7.310633,7.894009],[-0.862530,-0.494292,9.452577,-4.793248,-1.922045],[-4.778591,6.657633,1.749988,2.250062,-5.736759]],[[0.204118,9.079425,-2.294964,6.525093,-2.917923],[-1.787827,-6.647011,-9.484783,-8.911959,-3.475435],[-1.713677,-5.590917,5.932445,3.764194,-6.265446],[3.722753,2.640247,-6.007388,4.500537,6.905856],[-9.678738,-8.207958,-2.383298,6.820028,-2.609317],[9.467912,-0.224186,-0.641454,-2.096966,2.066757],[0.940842,-8.798174,9.152252,2.653150,6.414198],[-4.779629,-4.235691,-2.908150,2.440855,-3.491597],[3.309596,-3.954747,1.583238,9.149630,4.394067],[-4.805065,5.587604,7.512695,2.041414,1.074418],[-5.587500,-0.461856,3.254057,1.773873,-6.820762],[-2.346630,-4.429437,-9.158746,9.434396,7.961867],[-5.033717,8.688993,-8.391510,-4.457649,7.370401],[-2.817330,5.458361,1.989811,6.184250,-7.140335],[-7.384932,9.430810,6.657763,-1.858077,-8.404039]],[[6.808657,9.048764,-6.980854,-7.979132,0.742271],[3.562663,2.537645,-6.505080,8.868710,6.158606],[-8.704109,-8.452137,-9.126462,8.565412,-4.510052],[-1.220107,-3.444237,-2.253553,-5.105214,8.069054],[1.531115,0.379226,0.681530,2.542972,-5.743167],[-6.608321,-8.794141,-7.311886,4.466169,9.716661],[9.806767,3.500845,4.938662,0.388595,-6.246237],[3.199366,2.862965,-3.506947,-8.913734,1.974020],[1.502602,2.390069,-4.751450,-9.396322,2.760727],[8.464256,-8.937916,-5.614624,-0.413360,7.500181],[-9.235018,-3.306610,4.235303,4.623151,-7.862189],[-7.729798,-4.630554,8.866083,-6.586665,-9.122169],[8.966338,-7.662731,2.165511,6.585089,-4.933524],[-9.573228,7.939114,-0.951923,-5.928841,7.340390],[-2.573029,-9.752595,4.532514,5.917896,3.952106]],[[-7.923171,8.371949,-5.122726,4.595752,4.066699],[-0.272018,3.417017,-2.969738,0.904169,8.684072],[-6.340840,-0.634855,-7.339723,-4.324429,8.209671],[-9.866972,9.378004,0.552048,-3.890065,1.604405],[-2.839183,3.980041,-2.486393,-4.621282,-6.482181],[-4.141490,4.050228,4.785765,-1.151484,-6.216982],[-1.969782,7.625327,-2.310798,6.560050,-1.898992],[-7.302995,3.680763,-6.954948,-8.314553,8.666329],[-2.542657,6.283675,-4.345606,9.604481,-8.074212],[4.009018,-9.513358,-2.500713,1.656871,8.620492],[8.663754,-3.635152,-6.762714,-1.712216,6.594180],[8.302329,1.448603,-2.770375,-9.634879,-5.411647],[3.017775,2.938442,5.497374,-4.600071,4.185473],[-1.572499,-0.053178,3.747177,3.436862,9.053225],[9.730418,-7.522988,4.273074,4.407132,-7.574789]],[[-7.984615,6.276827,-6.683576,-6.989335,0.319131],[-9.780997,-1.911647,-6.753907,0.696673,3.071815],[8.828095,-3.695946,6.089533,-5.525313,2.123798],[-6.662012,-5.507729,0.258175,-7.763918,1.663318],[5.558764,9.789944,-8.225712,-9.597242,9.072729],[-9.509601,-6.589092,-4.818104,-3.597764,-5.634815],[-2.922050,-8.404266,-0.729630,0.954168,4.363123],[-1.349882,-1.872691,-8.804911,-7.817914,6.798207],[-9.834534,-0.392205,-6.495479,-5.133129,0.338257],[-8.280891,8.684252,-7.550077,-3.166769,2.074982],[-6.405034,-2.789910,8.771918,-8.571286,9.513551],[-1.292471,8.165883,1.504749,7.239668,1.028756],[-5.944718,-8.545786,-3.443528,-3.164150,-7.409770],[-0.466836,0.457594,-6.925127,9.638258,-3.532513],[-8.179635,-6.528214,7.772070,2.326251,2.116106]],[[8.722369,-6.031927,8.894423,-9.721553,2.647662],[3.332294,-0.595387,-0.596701,-6.596124,4.474620],[6.957483,6.704392,9.676569,9.142902,3.068833],[6.996506,-9.442357,3.900332,-9.859168,0.691881],[-1.847836,0.638142,-5.249841,9.284242,2.068141],[3.117450,-9.188640,-4.234713,-4.675092,-6.219532],[-6.030268,-0.689346,5.614529,8.560526,-2.585966],[4.978149,5.748413,9.424797,9.865434,-9.535646],[9.200650,0.047514,-9.518857,4.784869,0.533027],[9.234436,-4.812394,-4.420646,1.386416,1.974031],[3.002359,-7.984199,-8.087822,-2.220380,3.944617],[-7.826310,-0.889864,-9.504858,-7.023482,0.225419],[-7.325095,9.414627,4.172865,-9.328514,7.061501],[-3.714884,7.139088,-8.695550,-3.323153,5.287780],[7.622236,-7.886009,0.725613,0.236157,-2.064524]],[[8.401667,5.980237,0.673777,-0.777745,3.282650],[-7.931573,-9.592435,-0.382740,0.580403,5.238295],[-2.047805,-6.091497,9.985078,-3.460399,3.427638],[5.583439,7.698841,-7.783763,4.183196,-5.876409],[-3.053888,-8.466803,-2.353375,6.138014,1.108276],[-0.551622,-8.737583,-0.132294,-7.083139,-5.511787],[-9.418422,-0.830205,-5.301743,-5.519756,-4.602146],[-0.805238,9.610064,2.579568,5.569462,3.898101],[-4.666409,4.558908,6.688288,-5.430324,-0.069986],[1.164147,-4.060789,-4.615197,-0.904885,5.183764],[0.381461,-7.656546,-3.218768,2.742154,-6.469499],[3.256707,-2.404681,8.727853,-4.600525,-5.498638],[-3.891526,2.132477,5.594064,9.310716,6.282582],[-3.409655,-3.557682,6.318806,4.032420,0.777556],[-0.942580,-0.055229,5.637364,-9.866951,2.052377]],[[-6.181901,-5.654384,-4.827685,5.633549,-9.995950],[-9.760826,2.660689,1.770191,-6.776529,1.342603],[-5.498315,-2.439060,3.404285,1.434069,4.218794],[-1.692705,-7.591605,-3.703954,-9.889910,3.572439],[-3.955183,-5.961814,-4.058330,-5.451380,-5.276444],[-6.218058,1.344087,3.718330,-1.083196,-1.005374],[2.740784,7.801175,-1.976078,-0.456114,8.149450],[8.222987,-6.239427,-4.907262,5.744736,1.490919],[-4.191957,-2.029108,-3.247683,-4.330455,-1.259477],[-1.224799,4.695029,-8.930995,4.730135,0.546489],[-3.677699,-1.089527,-1.206022,1.395768,-3.189346],[4.373189,3.141302,-5.765543,9.843042,-7.769574],[-8.147758,9.396297,1.489770,6.862528,-3.908738],[3.994900,8.144088,2.342418,-8.283323,5.504182],[3.666394,-1.243549,-4.020024,-4.725345,0.615286]],[[-6.484774,-0.507208,-0.469976,5.372662,-9.947067],[-1.018465,-0.356678,-0.788393,4.085831,-5.428560],[7.868620,2.231684,-1.889722,-8.930249,5.977410],[-1.870227,5.078298,2.985779,-5.640132,3.296620],[-9.836507,-3.471233,7.828554,0.815743,-0.361952],[1.693324,6.415335,4.898412,3.764978,8.309289],[7.572552,-0.372707,-3.747339,-0.929485,-9.086796],[6.575053,0.312073,3.497691,-4.140288,4.950971],[-1.962226,-5.578781,0.861087,-7.251015,-1.912335],[9.540540,4.841542,-4.712735,0.214604,-7.624442],[6.278080,5.765854,9.326044,4.122845,5.468624],[-8.325138,-8.568683,4.772013,-3.150346,-7.601176],[8.588971,9.605504,5.288648,-9.422796,-6.729527],[-0.701903,6.120769,1.369168,-4.381163,-0.981739],[2.768826,8.012524,-3.611672,-8.021161,-4.618696]],[[1.533987,-2.059702,-8.716053,-0.752457,0.361534],[4.999974,-5.788387,5.499020,-4.596584,4.705389],[0.714043,6.356908,-5.585946,7.941840,9.873262],[8.625137,-5.236621,2.563759,7.118999,0.767931],[-2.926183,-9.324874,3.449649,-2.504195,3.742950],[5.607399,1.142808,6.957522,-7.327964,-4.595957],[9.048522,-4.231977,8.627821,-0.728851,2.411042],[8.897805,4.288448,2.548675,3.018041,-8.438720],[6.802401,0.970551,-7.348623,-7.201199,-1.566060],[-9.775084,-3.333074,6.586412,-5.187872,-9.185898],[4.528161,-7.214681,3.190313,-7.546467,7.994755],[1.149834,-0.024068,1.709067,0.996823,8.342328],[-9.639213,3.279010,-8.764574,6.143738,4.043493],[-0.619763,0.430175,1.156502,-4.741746,-2.616566],[-6.930948,-5.541250,-4.436442,3.470497,5.150543]],[[2.335938,9.374673,-8.633144,5.938756,-2.100949],[3.412616,-2.112687,7.458405,1.282930,9.865937],[-5.054962,6.416488,-5.497352,-3.714885,-9.052081],[-5.856896,-4.615886,-4.032065,6.756370,-2.709140],[-5.337971,-7.091162,-6.280538,-9.834223,-4.511840],[9.068363,4.819758,9.361339,5.796470,-3.725528],[-6.332934,0.187296,-5.796372,6.869965,-8.320077],[5.617468,-4.190627,2.960029,-8.503645,-9.310521],[8.610313,2.062510,7.099840,-4.332083,-7.343471],[-5.334887,0.998023,6.507594,5.951318,1.106657],[-0.269127,8.136845,-6.233366,-4.142429,-8.321785],[0.029050,-1.324918,1.645496,-0.882893,-8.574518],[-4.430024,4.803263,7.546149,4.418818,3.899130],[-1.619184,9.059626,-3.675155,-5.366992,-1.537886],[-4.956378,-9.265710,-7.629061,-9.373716,0.361463]]], dtype = "float32")#candidate|1488|(13, 15, 5)|const|float32
bop_1489 = relay.divide(const_1487.astype('float32'), const_1488.astype('float32')) # shape=(13, 15, 5)
var_1496 = relay.var("var_1496", dtype = "float32", shape = (13, 15, 5))#candidate|1496|(13, 15, 5)|var|float32
bop_1497 = relay.left_shift(const_1488.astype('uint32'), relay.reshape(var_1496.astype('uint32'), relay.shape_of(const_1488))) # shape=(13, 15, 5)
uop_1505 = relay.rsqrt(bop_1489.astype('float32')) # shape=(13, 15, 5)
func_683_call = mod.get_global_var('func_683')
func_689_call = mutated_mod.get_global_var('func_689')
var_1514 = relay.var("var_1514", dtype = "float32", shape = (960,))#candidate|1514|(960,)|var|float32
var_1515 = relay.var("var_1515", dtype = "float64", shape = (896,))#candidate|1515|(896,)|var|float64
const_1516 = relay.const([9,-8,5,6,-2,-10,-8,-3,10,-8,-5,3,9,10,-10,-5,-10,-6,4,-2,-3,-3,1,6,2,-10,-4,-8,9,-6,-10,7,-7,4,7,6,-10,10,9,-3,-2,7,-6,-9,-4,1,8,-5,-3,6,4,-9,-3,6,-9,-2,-3,-8,-5,-1,4,6,-4,-8,-9,-6,-8,-9,-5,4,5,-8,-4,-7,-5,-9,-4,2,-5,2,5,-9,4,4,3,5,4,8,10,-9,4,4,5,4,6,-4,-6,4,10,-9,-3,-5,-8,5,6,2,3,10,2,8,1,-9,-6,7,10,-3,8,2,-8,-3,2,-8,1,-5,-3,-1,8,1,4,3,4,8,3,10,-8,10,8,7,6,-2,-6,5,-6,9,4,5,6,-2,5,2,4,-3,10,2,9,-6,9,-10,-8,5,9,-2,7,-5,7,-4,-9,-3,-7,4,-1,3,-2,4,-2,-1,-3,7,8,-2,9,-6,-5,7,8,-7,2,10,3,-3,5,5,9,-7,3,-2,5,3,10,1,-1,-6,8,-8,-10,-5,5,6,-3,-10,2,1,3,9,-3,-1,7,-9,3,-6,-6,-1,-3,4,-10,2,-10,1,-6,9,1,6,-7,-2,2,-7,-3,1,5,-1,4,9,8,-9,10,-4,8,-8,-4,-7,-10,-5,5,8,3,-7,7,-1,5,9,-8,6,-2,-2,5,-3,6,-8,3,-2,-9,3,4,9,4,5,-1,-7,-5,9,10,5,-9,-6,-2,1,5,5,6,9,2,-3,4,7,-8,-9,8,4,-8,-2,-9,2,-6,5,3,-3,9,9,5,3,2,-4,8,10,10,-6,6,3,5,6,-2,-2,-5,6,-6,-7,-3,-9,-1,-4,-10,8,-8,-7,-8,8,2,-3,-8,-8,8,-3,8,-1,-10,10,7,7,8,6,-7,-8,-4,-5,-9,-9,10,-1,3,-7,-7,4,-4,9,4,-2,10,9,2,-6,-9,-10,-6,-5,-3,3,-9,5,-7,9,-10,2,10,3], dtype = "int8")#candidate|1516|(384,)|const|int8
call_1513 = relay.TupleGetItem(func_683_call(relay.reshape(var_1514.astype('float32'), [6, 10, 16]), relay.reshape(var_1515.astype('float64'), [896,]), relay.reshape(const_1487.astype('int8'), []), relay.reshape(const_1516.astype('int8'), [384,]), ), 1)
call_1517 = relay.TupleGetItem(func_689_call(relay.reshape(var_1514.astype('float32'), [6, 10, 16]), relay.reshape(var_1515.astype('float64'), [896,]), relay.reshape(const_1487.astype('int8'), []), relay.reshape(const_1516.astype('int8'), [384,]), ), 1)
output = relay.Tuple([bop_1497,uop_1505,call_1513,var_1514,var_1515,const_1516,])
output2 = relay.Tuple([bop_1497,uop_1505,call_1517,var_1514,var_1515,const_1516,])
func_1525 = relay.Function([var_1496,var_1514,var_1515,], output)
mod['func_1525'] = func_1525
mod = relay.transform.InferType()(mod)
mutated_mod['func_1525'] = func_1525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1525_call = mutated_mod.get_global_var('func_1525')
var_1527 = relay.var("var_1527", dtype = "float32", shape = (13, 15, 5))#candidate|1527|(13, 15, 5)|var|float32
var_1528 = relay.var("var_1528", dtype = "float32", shape = (960,))#candidate|1528|(960,)|var|float32
var_1529 = relay.var("var_1529", dtype = "float64", shape = (896,))#candidate|1529|(896,)|var|float64
call_1526 = func_1525_call(var_1527,var_1528,var_1529,)
output = call_1526
func_1530 = relay.Function([var_1527,var_1528,var_1529,], output)
mutated_mod['func_1530'] = func_1530
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1855 = relay.const(False, dtype = "bool")#candidate|1855|()|const|bool
var_1856 = relay.var("var_1856", dtype = "bool", shape = (16, 9, 13))#candidate|1856|(16, 9, 13)|var|bool
bop_1857 = relay.logical_or(const_1855.astype('bool'), var_1856.astype('bool')) # shape=(16, 9, 13)
func_1256_call = mod.get_global_var('func_1256')
func_1265_call = mutated_mod.get_global_var('func_1265')
const_1874 = relay.const([2.112500,-4.159276,1.490798,9.248361,-2.207876,-1.907357,-9.214601,-4.845633,1.140223,7.618623,0.647211,-7.621174,6.837749,1.967780,7.138287,-9.464305,3.709264,-3.554273,-1.807717,6.159492,1.296533,-2.012165,-8.403506,9.335095,4.513435,0.579268,-0.694335,-3.631964,-7.529622,1.694118,-7.863399,-9.973694,-3.234304,9.992405,3.940909,0.420004,-1.946105,-2.868538,-0.385906,-3.101340,-2.181085,-4.724920,7.431883,-9.532047,-9.302692,3.262372,3.024212,4.013278,-6.025429,9.952500,3.037881,1.131714,-0.603942,-5.771898,4.294839,3.963969,9.345329,3.341121,-8.945651,-9.737690,3.029169,9.717743,7.726731,-7.822387,9.608983,4.534259,-3.616163,-9.035862,9.326049,1.423735,3.995745,-5.640507,-9.653535,6.644305,-2.653236,4.114860,-8.030663,-1.958549,1.960924,8.613826,-4.715609,-6.002428,5.208928,-2.006082,2.214850,-9.504922,-5.323332,5.374401,-0.513146,1.592448,-9.369693,-3.207874,7.523860,4.255432,6.029595,-5.939052,3.511428,-9.008555,2.722327,0.424402,-3.951204,-8.682434,0.402384,2.527893,-0.312247,-9.458132,1.551426,5.997335,3.887644,-4.896412,-7.718749,1.875076,9.010668,-5.709008,-2.064820,8.734919,8.956068,3.698997,-7.841049,-1.137960,1.948220,2.372069,5.415608,8.244508,1.352973,5.074527,-4.979259,-1.841285,-7.733976,7.284692,-6.114777,7.323595,-9.559264,-3.086408,8.606668,7.301421,3.843579,-5.140676,-1.155471,-1.599411,1.086852,5.879124,-2.844173,7.499980,-2.354191,3.809052,5.825490,1.250514,9.530914,-7.729884,-6.144356,7.264174,0.649471,7.609686,7.471806,0.316080,2.229962,3.585962,-3.118829,9.575340,9.514891,-7.776862,3.642877,-2.838007,1.983867,-2.340546,-1.829555,-1.423321,4.360225,5.916294,3.667449,1.985567,0.820584,-2.500982,1.392178,8.907693,-4.875113,6.762405,8.173014,-4.912219,1.185786,-5.624843,-3.254741,2.627424,-7.395637,-5.501576,1.594318,7.521141,-1.028185,4.937570,2.308194,-7.501991,-1.421023,3.946751,3.745125,-6.617599,-3.228281,8.856290,7.073567,-0.723536,4.848392,8.209944,-2.756190,-5.252104,-0.217389,-9.045169,-5.544221,4.921974,5.605469,-3.474475,-0.334650,6.017621,2.569350,6.860851,8.648197,6.568994,0.208781,5.962822,0.671078,-7.196984,8.578584,2.703008,-7.611659,-9.640786,6.704689,-7.936578,-5.458011,4.244224,-3.114158,-5.705498,-3.392254,1.322441,6.031034,-9.170987,-2.783960,-2.209548,5.846793,7.005934,2.002976,7.496344,-5.415102,-1.900980,0.979673,-1.651326,4.785995,6.924498,-5.116513,1.764259,-0.068262,-1.306480,-1.277748,-5.767027,-6.945751,9.869744,-2.864668,8.779683,7.714694,8.290115,7.423664,-4.181562,-2.990126,-9.233703,-8.607404,-5.601248,7.148595,9.123420,-9.823574,-6.525593,1.540807,-7.556971,-5.736896,-3.516676,7.481083,4.474126,-6.065395,0.620256,7.456872,7.634362,2.145955,-6.744828,4.640519,9.323149,-2.115068,-3.050641,4.328208,3.873651,-9.087963,5.116503,3.756970,-9.333629,4.037521,-5.826018,-5.760338,-5.819653,-6.487514,-3.851930,2.805870,7.818137,6.811268,3.085731,-5.806641,5.162260,8.417845,-3.209960,1.371195,-8.201220,3.349210,0.076076,-3.436714,4.128434,3.448549,-7.908891,7.086944,-6.853193,-6.650309,-5.916963,-3.714655,5.379493,-9.410765,-6.006105,4.994197,-7.584959,5.850399,-0.591351,-8.444232,-6.600390,5.425562,-6.334810,-1.825466,-2.152239,-1.572032,0.217319,-4.281020,-8.331563,3.674888,-0.392936,2.608248,9.650937,-8.869006,6.003997,9.081498,-4.049364,-6.042848,-5.916361,9.138196,9.514337,1.265302,-7.499113,-8.093304,-1.779798,3.409192,-1.106025,-3.420286,-2.224230,5.012043,2.200216,2.602884,3.553388,-0.273984,7.472643,-0.180428,9.435175,0.645546,3.957352,4.565282,8.257542,-6.102735,4.448116,0.742638,-8.311458,6.317860,-2.145260,1.525904,3.565643,3.078859,-3.390022,5.590422,2.091924,8.552420,-4.980739,-4.482090,-0.432477,0.752221,5.404163,2.658376,7.121602,8.815999,0.538869,-2.896694,-5.463188,2.322727,9.573421,2.691139,-4.584827,-9.471365,0.837394,-0.741615,9.183158,3.890413,9.426836,-6.930961,-0.271692,-3.202895,3.234658,-2.155072,-1.100775,-8.966919,-6.350404,-3.957683,-7.000121,-6.431928,0.832845,5.126041,-6.936205,-1.030961,1.606824,3.259981,-9.645354,-5.892212,-1.332532,-7.666276,-9.235477,-3.555824,-1.818669,0.165781,8.212954,-9.713952,8.056191,-1.915306,-8.407641,5.592736,1.177611,9.654597,-4.756345,9.814678,-2.186799,9.062219,-1.528170,-4.945072,-2.049119,-8.173298,9.106433,-9.034045,-5.899804,-3.727216,4.248804,0.120332,-3.205004,5.003848,-9.730227,2.247726,-0.688431,4.735869,6.716394,8.702333,-1.041484,5.061046,-9.248094,-2.692167,-3.237076,8.077870,-6.716887,0.211966,-9.264240,4.260149,6.349642,9.992209,3.876071,5.857326,-5.513447,-1.971739,-8.857326,-5.197080,5.153095,9.491263,-2.691081,-0.619650,8.679908,6.015200,-2.457662,-7.021522,-3.175240,0.711148,6.437018,-7.266396,8.536222,-1.993181,-8.859934,-1.927018,3.168946,-3.857656,-6.765616,-5.912602,-7.048531,6.883659,-4.272418,-4.222409,-0.892628,-5.965789,-4.105339,1.871717,1.020829,1.854484,8.643142,4.319346,-6.707977,-5.791788,-6.556213,-8.943523,-6.059826,6.788873,-6.874869,3.212325,3.088644,-7.767124,-4.391458,4.801613,6.008057,-1.557244,-2.459216,0.294328,8.074030,-0.961099,-8.000697,-8.732435,-4.796970,1.813538,0.799914,9.904579,-9.528855,9.980419,-2.378819,-7.528650,2.248763,-4.306177,-3.354075,-1.186732,9.504796,-3.866887,-3.744980,-3.459501,-2.256080,5.590170,0.740430,0.571848,-0.616765,-4.156103,7.273225,-7.794498,3.149153,1.148391,-6.670658,7.986293,-8.908005,4.457919,-8.008405,3.328637,8.876458,4.002463,-5.323737,-5.571016,1.412222,0.614817,5.482050,3.408686,-4.007427,-5.359368,0.342186,-8.193926,3.148481,-2.101858,0.595969,2.394867,-5.430668,8.201652,2.262074], dtype = "float64")#candidate|1874|(576,)|const|float64
const_1875 = relay.const([4.900998,-1.122174,5.281823,5.325086,2.732370,-5.049436,-0.469319,2.018371,2.511048,6.416985,0.053239,1.217603,-2.170631,-2.471495,0.906363,-7.112017,-8.863853,-8.165622,4.004189,6.621913,-8.953875,-3.072622,-9.197177,8.224553,-6.918068,-9.825587,-5.324491,9.321257,-3.251180,-2.693020,2.969372,-8.335041,2.486488,2.431257,7.469394,5.458706,-2.961029,-9.309185,2.677040,2.291100], dtype = "float64")#candidate|1875|(40,)|const|float64
const_1876 = relay.const([4.758816,-2.772894,-5.497538,-1.470577,2.683930,4.249932,-9.896485,7.275186,-5.924036,5.472188,-2.301079,-2.042589,6.326568,4.203545,3.052082,1.511954,-1.615420,-6.683093,1.373298,-3.068408,-9.674382,9.560362,-1.129914,-7.473915,4.645448,5.689448,-3.701911,2.015451,3.783618,-6.794549,2.627395,0.847729,8.068700,-3.282524,7.050228,3.058971,-0.686356,-5.622788,1.804418,5.488485,9.041419,0.520219,-6.502052,6.107188,4.573531,-7.836477,5.245281,6.568433,4.053939,1.362190,-0.464742,-0.171902,5.172819,7.267360,8.497565,1.933947,3.303446,-5.454638,3.073950,6.439410,9.601010,-0.343259,-0.015908,9.638408,6.291988,-6.831759,0.203517,8.914125,7.536112,-9.013955,9.745147,7.403210,-3.791246,5.023959,8.926387,-2.372439,-3.476589,3.218494,-5.428746,2.198459,1.824290,2.886947,-7.740794,-1.563663,5.185065,2.067956,-2.990106,-5.928315,-0.923756,2.443154,-0.339447,4.082798,-8.359375,1.080242,0.664346,-3.570342,-9.519000,-5.032619,-4.094493,3.614751,8.450046,8.536639,5.801104,-7.136149,7.663887,-5.581875,6.614599,-2.299996,-1.018500,6.621401,-2.467359,5.613987,8.930220,-0.165474,-0.327908,-0.799046,-3.316890,2.151567,0.897297,5.126904,6.874344,-9.525980,5.886256,-8.911587,4.243869,-6.758571,-3.846844,-5.932131,3.066173,6.364408,-8.169737,0.752441,7.076510,3.310852,-9.956412,7.551569,-9.009490,-2.009161,7.939418,7.386587,-9.137632,-3.351197,5.820610,0.288531,1.372235,-6.439960,-7.693436,-6.689750,0.067458,-0.900704,5.734549,2.632268,7.900546,4.226032,1.018634,4.170706,-3.061426,-5.515131,4.957671,-9.364938,-1.938970,-7.877607,-0.841146,4.983886,-7.391838,8.524431,5.938656,5.470535,8.483191,8.243121,-1.296981,-9.852911,4.817453,-6.935816,-3.250631,7.479096,-9.724114,0.426766,2.837918,-7.090431,-4.456554,9.456267,-7.737967,8.235677,4.912903,-6.030365,8.136540,6.524898,7.797914,0.782914,-3.730868,0.094491,1.880003,-5.147866,1.548701,-7.400595,-4.733727,9.622751,9.184412,-1.553754,-2.830888,-5.880063,-9.862859,-8.868282,6.764450,8.481789,-0.702229,-1.958897,-3.265039,-6.756014,0.212170,6.140988,-4.516624,9.204460,5.274703,3.477162,-5.341632,-0.689169,6.518668,2.330898,-3.899411,-2.458461,6.568575,-1.323951,0.663133,3.735335,-6.309928,1.882854,0.895857,-0.340586,-0.479978,-6.948585,5.647355,2.610817,4.014965,6.567143,-9.134031,1.085411,1.993930,0.984322,-5.887713,2.772056,4.054154,-0.999607,8.241102,-9.149035,-9.714653,4.599519,2.422017,-7.562871,9.002699,-1.667436,0.983155,1.059345,-0.080835,-6.453057,1.088200,8.440189,-6.406573,5.050014,-1.950646,2.362154,2.486322,-7.615928,-5.936343,3.634519,-9.959735,0.846073,3.391925,-8.816138,4.630329,3.934644,1.478888,8.157993,-9.404302,8.444916,-9.199157,9.059140,4.025778,-5.395831,-2.470946,0.539738,-0.099835,-0.453694,3.341334,6.777503,4.268555,4.421720,5.894493,-5.871974,-5.626078,-4.861394,7.417236,-1.233408,1.575517,-6.437692,-0.602014,-9.664180,-0.883145,5.125346,-7.538605,-6.743996,2.553929,-1.982733,-8.133577,-5.496945,-4.322177,-9.015953,-4.914096,1.704703,4.112577,8.712219,8.481165,-8.170958,-7.897010,-2.527052,-0.173974,2.038144,-5.136733,-8.986625,-2.529687,6.988101,2.599871,-4.720701,-3.641983,0.774332,3.713425,-3.426988,7.729045,-2.180943,-3.380565,-6.999973,6.788922,-7.937288,0.937930,4.469236,0.865492,-8.014170,-1.683681,-2.523053,-2.010826,-2.755686,-7.362203,0.010613,-6.514753,0.978938,-6.574033,2.259463,0.976686,8.202328,0.086905,6.594037,-0.254958,8.213484,-8.708366,2.928586,-7.262970,7.673227,-9.064320,-5.694789,-8.853575,6.121688,8.898993,4.782955,-9.212916,8.192735,2.749961,-4.631014,-0.375015,-0.528783,2.260553,-6.074230,3.863411,-5.104940,-6.425232,-7.747919,8.653166,8.600082,6.192809,1.454864,1.510002,7.696414,0.433843,-3.740674,7.423592,7.317357,9.244164,-8.195477,3.615249,-9.124782,2.563947,-6.577446,3.648784,3.838901,-8.396638,-4.784665,5.083609,-5.868037,-5.194992,8.286581,3.506821,-4.510485,-3.987140,-0.165249,-2.514603,4.967395,3.334301,-0.280433,2.346901,3.575191,-4.853307,3.588374,0.935487,8.671129,9.846216,-0.799544,0.266490,8.571659,5.323482,4.541786,-5.845754,-7.428870,-2.948771,-2.857998,-5.957368,-6.613982,-9.141914,0.662272,1.831667,6.028218,5.125394,-2.640298,-8.881227,-9.605313,2.210810,3.168792,-9.195077,3.383679,-0.846984,-4.171914,-9.538504,-3.213031,-5.934710,-7.522447,-1.959720,-8.229441,7.343848,-2.303475,-7.637684,-7.593696,-3.069459,-2.585105,9.497918,6.511015,5.425838,-2.853681,-6.664086,-9.657526,-7.869309,1.770635,-6.387673,-9.858348,-8.098867,-7.209537,9.906595,-5.826529,-0.578532,-6.300478,-6.843379,-3.433209,3.377615,3.020436,3.870148,2.091074,5.919647,-2.405670,-6.922875,4.526304,4.474445,-1.213041,-7.228785,-3.351728,9.324092,-3.456722,-8.648365,0.739688,-5.279670,-0.088469,7.434908,2.674420,-0.765521,-9.913608,6.496518,2.400132,2.118126,5.490637,-1.496209,5.663420,5.853533,9.577742,-3.457727,7.198434,-0.697300,-4.883623,0.760761,-7.649806,7.744797,9.346203,-2.429225,0.465291,-9.374458,-2.452998,-4.076537,-4.707375,0.337237,1.318718,-6.330572,-2.406483,-3.146017,-2.818357,5.005108,0.791349,-8.333842,7.976471,1.246606,-8.071594,8.162463,-1.912827,-5.879450,2.457688,0.388577,0.980500,-0.282830,-7.363141,-7.664380,-8.776481,1.556790,-7.055954,-6.586796,-7.435462,-9.185802,6.797733,0.691672,1.732029,-9.167364,-9.886748,-5.596344,-6.405037,3.206521,3.100146,5.865936,3.598665,-5.039891,-9.553742,8.115756,-4.810003,-4.160000,-4.017844,-0.085881,4.065218,-5.406125,-6.861780,-8.057337,5.857154,7.649717,4.520089,8.573744,1.455081,3.829783,-3.095321,-3.405632,-0.435082,0.111989,9.709477,5.479128,-1.450254,-9.225611,-8.951803,4.159490,-5.515187,-8.544937,-2.973881,8.812709,1.515035,8.983921,5.366432,3.673452,-3.388958,-4.704958,-2.041699,4.688087,-6.876090,6.969863,-9.924546,-3.973170,6.835966,-3.937078,-0.925043,4.946317,-4.692140,-9.499444,-1.092879,-7.341829,-3.448711,-4.349696,-5.828760,4.898626,0.604393,1.270622,-5.680162,3.148742,-8.976321,0.859182,8.449111,2.946224,8.571124,0.726837,8.879203,0.830833,5.226704,-2.167896,6.111311,-1.587578,-2.011313,-6.874186,0.965610,-9.347388,0.234910,8.000129,-0.087401,6.342437,-1.130556,3.974795,-8.530355,5.145679,8.542016,9.254897,0.844615,9.296557,4.814354,-5.921244,2.226440,-3.048249,-9.803737,0.518858,-9.640307,2.337595,-2.999812,-1.831472,6.087909,-0.058360,5.396615,4.629627,4.787307,-9.105498,-5.296595,6.159424,9.535955,-9.729726,4.157972,-6.502937,-2.240916,-2.182395,3.016698,2.412941,-2.727217,3.474223,9.450413,5.333185,1.434890,0.904350,-2.126386,-2.856057,8.389553,-4.182089,-2.128813,-5.786205,-0.099435,1.858473,-8.688334,-3.113098,-6.725310,-6.566276,-0.235770,-8.491868,-4.015279,0.784300,1.803667,-6.566581,-2.721872,0.114828,-6.273910,-7.435742,0.796952,-5.428132,-3.361085,-7.619884,-1.180821,4.450133,-6.396410,-7.127936,6.845596,-2.720845,3.603122,1.465072,6.594555,4.672999,5.352959,-1.204057,8.296976,-2.163578,5.207432,6.160077,1.124253,-4.441719,-3.131265,-7.771506,-4.733845,-9.598327,-1.824147,3.490262,8.618038,7.455119,-8.111584,7.593766,-7.264319,-6.323531,-1.634509,9.297303,-3.217676,-1.747477,-2.334399,-9.212983,1.346360,6.200611,8.803458,3.985828,2.451033,2.786381,-4.791336,5.255946,-3.013118,-6.364034,1.072933,-8.449943,8.540967,8.330734,-4.869380,-3.931340,-4.675615,1.082336,-2.505438,-4.351110,9.483487,-6.895238,-0.260226,-8.558735,6.372278,-1.859388,-3.717335,-1.605897,9.423971,9.661709,3.873891,1.398909,9.876549,7.540471,0.289346,3.090368,8.945201,-7.085674,-5.338564,-9.882597,3.211012,-0.575817,-7.096686,9.278024,-0.762876,5.583116,-5.205201,-8.982482,9.295880,9.119207,3.219364,3.113502,-3.091043,5.740743,-6.223850,-4.702887,-3.815310,9.409576,0.429578,-5.550838,3.175651,-6.711165,-5.298161,-6.604642,-3.518636,-6.801255,-5.533586,4.155096,6.755103,1.898145,-2.007615,9.012337,6.670812,5.892149,0.593641,-4.650174,1.014205,-5.273263,0.855398,9.463288,-8.250964,-6.829478,9.824760,-9.665828,-6.493263,-9.923377,0.320760,0.947386,-7.580895,-2.429970,-0.231155,4.332742,8.595976,4.183227,-6.249071,-2.683039,-2.934904,9.899030,-2.850241,-4.295299,-7.739339,-7.125273,-9.930615,-6.626509,-3.220689,-2.488452,3.168062,5.809374,6.935567,-8.896288,8.622132,-5.065021,1.990035,-2.731222,1.907458,-2.368045,1.354166,-9.682290,-3.770307,0.891427,8.246401,2.761790,6.423025,0.786518,7.195259,-3.270847,-8.951721,-8.913299,-7.092073,-1.096778,1.375385,1.778092,1.942263,-5.011217,-5.492577,-7.070138,1.257603,0.171543,-8.175040,9.326371,-7.675389,5.806896,-1.031630,-3.793144,-4.794257,6.089658,2.577629,-9.903370,-9.067252,-7.374931,-3.800402,-9.411066,-3.811675,-5.544406,-4.832793,-0.918865,4.265287,6.926927,8.657730,1.977372,-3.106213,5.913105,4.799446,-1.654648,-1.891787,9.193760,-4.468153,-7.747608,0.808301,8.281829,-4.970199,-2.413557,0.263660,1.553028,4.945286,-9.048269,1.081185,1.073938,-1.344022,-2.129459,-5.745834,6.087176,4.906305,5.799968,5.693468,-2.023292,-0.914756,3.393651,5.743045,-8.235265,2.948420,-8.330945,-3.620203,-3.463789,-9.632156,3.867513,-4.697567,2.027724,-8.592995,-9.898727,7.103803,9.890075,0.113850,-1.368407,0.064133,5.684863,3.799296,-0.380981,1.279889,-7.864504,4.057029,-9.460151,1.038158,-9.492329,-8.473482,9.293108,8.313386,4.804586,1.888889,8.528824,-6.590690,-7.797059,4.924877,1.638903,6.349995,-1.607234,5.628439,-5.978131,-2.810678,-9.752022,3.503130,-3.853714,-8.625719,8.078807,4.896585,-8.353295,5.857563,-4.475443,9.900120,8.122145,2.192185,-3.266696,-6.686404,1.961936,9.749775,7.463436,1.947231,4.734490,1.887823,-7.922640,-3.376415,-2.069308,6.076376,-7.124121,-0.420536,4.185842,6.308698,-1.033877,-0.335841,-1.294198,4.486335,-8.903156,0.725938,-6.750228,-3.739412,-2.308786,9.949141,-5.060415,3.031961,-2.081738,-4.133267,6.295341,6.878261,2.277567,-4.378608,8.078481,1.215165,-9.193090,4.874738,8.110936,8.774248,-9.343213,-3.346954,9.501769,8.207833,9.640636,5.343455,3.358473,-9.351561,-7.669185,-2.786663,-1.502972,3.017415,0.366230,4.842531,-8.483236,-5.319853,0.641819,2.822903,-8.447937,-2.413499,-6.478053,-8.912952,-0.199823,-5.114805,0.435439,-1.436653,-4.281226,1.167027,6.693909,-3.638205,4.716792,-4.902351,2.334084,-0.201272,6.654604,3.111792,-0.578267,2.675931,-9.913470,-1.593518,4.458502,4.648789,-7.114099,8.633780,0.383052,-6.373601,-3.661673,-9.005888,-0.333355,8.238496,4.354591,-5.285097,-7.418971,5.719637,0.166001,8.563259,-8.441791,6.261051,2.325655,-1.424515,-6.038412,8.407513,-6.600585,7.387252,-4.794699,-1.039505,5.899293,-6.667230,-0.823268,4.966224,1.310841,-3.665545,2.695585,-4.951410,-8.182072,-8.125577,4.571789,6.677620,4.447852,5.217516,8.846691,9.735507,-3.994088,5.308354,8.232746,-0.185839,3.735792,7.976519,-2.066775,0.397294,-4.211904,-7.644623,4.419911,9.522260,-4.553677,7.610404,-4.722646,-9.380180,-7.390969,-7.381182,-8.706188,-7.867461,9.222142,0.365377,6.482236,2.914512,-8.902205,-7.925277,1.684778,-2.314545,-9.326652,-7.132277,-3.114718,9.372559,-2.895079,8.012830,-1.803379,-4.536082,4.045781,-0.073156,-4.210399,-1.651915,7.160811,-2.099207,8.729434,-1.407179,-7.953327,-0.060273,7.675864,7.471703,6.742437,8.131898,-1.561989,-3.027608,2.081563,5.514409,-2.747045,-8.949016,-9.656521,-4.908272,0.823387,6.747888,3.870194,-7.431105,5.385116,-7.154626,-1.825311,-2.904006,6.018335,-0.344182,5.672941,-1.026737,-2.791796,2.130987,-9.490695,-3.742150,-2.320324,6.184174,5.952844,0.638989,-7.358460,-0.339055,4.041513,3.702841,7.680923,3.693436,8.720139,-0.060791,-7.962014,-5.027618,4.797689,-5.682803,-0.034042,-7.574341,2.292698,-3.208576,3.602843,6.567854,-1.406806,-0.727693,-2.956940,-4.612026,3.939397,2.007752,9.724380,-4.669014,-2.149663,-1.238782,6.032874,4.409695,-5.828728,-0.916597,-6.984527,-4.833877,-1.405800,-8.052971,-4.706772,0.634143,8.384106,9.426203,-9.384461,3.671826,-0.453989,-1.996566,-5.871349,0.582587,7.976973,3.921752,1.188871,-7.455331,-7.703935,-5.247019,-0.605891,-7.960392,0.978839,-4.037623,-1.364913,-4.217168,1.994962,-1.728680,-8.591497,2.033177,4.102663,0.359108,-7.777395,-8.417295,-6.471064,-9.562936,-6.075135,-7.710105,-3.125080,-8.978633,5.065771,-1.380706,6.391240,-6.430456,-2.291175,1.332437,-6.710390,-7.380007,9.437519,9.469430,8.046614,-7.916405,6.836687,2.490975,2.483752,-2.544474,7.925960,6.125426,0.114698,-6.657493,9.254413,5.246964,4.610250,1.570129,-0.522166,-1.834400,-1.625504,-4.746838,-9.401105,0.452465,5.391327,-4.952436,-2.457800,8.937583,9.553549,4.221791,3.604121,9.948189,-4.906842,1.480799,5.324418,8.623624,-1.864436,1.862899,7.516708,-9.597327,-7.017069,2.055091,3.274991,-0.479934,7.471733,1.210665,-4.208732,5.637975,0.918477,-5.460462,-0.907140,-8.717568,0.808810,3.953834,5.834603,9.600330,-5.804751,-6.230612,2.611635,4.466457,1.867395,7.145643,3.303942,-2.069892,-7.472116,6.699070,-2.299086,0.841067,-0.170932,3.228427,7.016092,3.285452,8.331754,0.837197,4.953428,3.897860,1.393364,-1.906178,3.672526,-5.474733,1.037781,8.176215,2.690237,3.607395,8.705008,1.482620,4.285018,4.077635,5.954451,6.662092,1.130863,1.454953,-3.293441,5.351781,-7.403968,0.806537,3.231989,-5.708525,9.105961,-9.326059,-1.649024,9.775369,8.331813,-7.373645,5.045566,4.495649,5.603135,-0.558236,-4.188481,7.468175,0.958455,0.653187,8.844442,0.371725,2.884010,-6.240332,-9.539651,-1.013623,-6.084093,-5.815560,-2.451829,-2.928019,-0.238000,9.343190,-7.354695,3.466603,2.084831,-2.138401,-8.494668,-9.595769,-1.942319,6.587907,-1.648460,-0.378919,8.617337,6.753010,-0.457159,2.555496,-7.104675,0.352548,3.586912,-2.910703,3.859871,-4.818923,-6.946826,-8.512047,1.416608,0.147420,0.910674,-8.056650,-4.027317,-6.027564,2.974013,5.401948,8.251963,-9.617452,-2.350373,5.021405,3.651193,7.293799,-7.515347,-2.980322,-2.496690,-2.770448,0.365376,-5.411657,-9.657260,-6.946166,-3.475354,4.882447,7.465488,-1.163091,-3.124235,5.871595,4.051436,3.906446,-3.529532,3.707294,-3.331167,-7.301588,-3.786557,0.639889,-9.512441,-9.188698,-7.754512,-3.277634,3.816678,0.564847,-0.022245,-9.055570,2.204069,-2.835388,4.299314,-6.401872,3.908553,-1.584416,8.031016,-3.009164,0.201562,-0.704028,-6.168649,0.480108,-3.309224,9.129013,-5.052568,-9.177180,7.443321,3.907924,4.141228,-8.310552,5.098380,-4.627450,0.152330,-8.767584,-0.050616,-1.867515,2.947418,-0.406866,-2.686645,-0.178493,0.015974,-9.896487,5.920962,-2.840248,-1.156731,7.345808,2.913758,-2.147406,-0.782733,2.342559,-5.643826,0.276504,-2.093384,6.669813,3.344094,8.803516,-7.697807,-2.550324,3.375781,-8.436929,2.301674,7.070078,-5.901397,7.414801,-8.480650,0.282965,-3.236514,-9.134782,-6.522039,6.203020,-8.126027,4.727443,8.369302,-8.479520,-7.062336,-4.595888,6.073556,-1.735008,9.064377,-1.868375,-8.252064,-0.211429,8.639383,8.159225,-1.442513,7.566746,8.689512,-0.636111,-9.348428,-5.655476,8.430880,8.291092,-5.637434,-5.276692,0.874475,-2.040794,-5.453515,1.990684,7.539636,-0.765155,1.157732,-4.518114,-3.981574,9.963902,-5.241700,7.818368,-1.407876,-0.347214,-6.240506,8.458314,5.795780,4.185149,-3.797443,6.398636,-3.779082,-6.088974,-1.507096,-8.562106,0.814299,4.818021,8.207651,9.515495,3.369707,2.496898,9.821845,-7.045171,-4.467547,-0.491224,-9.506365,-3.562120,8.436424,-1.151767,-9.611960,-9.203304,5.583133,1.442974,-5.858218,-7.797090,-1.339709,3.212371,-7.130221,-6.084013,-8.524615,-0.052145,4.099280,3.360835,0.109293,-7.383258,-6.726508,6.944155,-8.192696,2.069166,8.410075,9.750015,7.331936,6.801862,-3.108146,-8.543128,1.799321,6.467119,9.346248,0.621657,-2.121773,-4.235133,6.476545,-6.228598,-3.706273,-2.589369,-4.311186,2.592042,2.882488,9.255815,5.204646,-1.417765,-1.942942,4.219350,-0.123465,-0.093006,-1.146348,1.148916,-7.245625,6.497233,3.645913,0.495544,4.205069,9.160255,6.860008,-3.651938,-5.485882,8.865189,-8.435137,2.569995,-8.988677,-0.846266,-7.739301,-3.655897,4.192405,-6.186898,9.282076,-7.465152,-7.138062,2.926303,8.186763,-5.960018,-1.828349,-3.493837,-0.155268,3.109508,-1.292667,4.589109,-0.344114,0.404442,-5.027192,-3.153560,5.051917,-0.151218,5.517492,-6.772267,-9.221899,-7.466575,-6.266287,4.908193,-3.010205,8.104674,-9.854250,-5.036886,-4.792038,8.081921,8.583259,8.871604,-6.041280,-5.276308,3.033677,-5.230747,-0.703426,8.488462,-9.301402,0.869779,5.848029,7.266001,-0.475757,-7.031835,2.700222,8.597567,-3.620719,-6.057488,-0.284701,-3.748154,5.763585,6.403850,2.310384,-7.021546,-8.710012,4.389149,9.929401,4.050519,-4.502549,-2.966762,3.816632,-8.151380,-1.205628,6.869633,5.769868,0.194975,-4.353839,-4.176801,9.337522,9.132110,2.835209,9.492420,6.870435,-8.866372,6.823589,-2.348124,-4.249349,-9.219669,7.615942,5.726780,0.793150,9.145294,-3.530446,9.094206,-7.428189,9.616131,5.099065,-3.880145,6.666362,-5.877073,-2.802801,-7.934438,4.320169,9.412546,-0.447653,-3.706958,9.061048,3.664781,4.270173,0.618935,-2.165027,4.765308,-1.982003,-3.576395,-7.217568,-3.386853,0.379007,0.809730,1.651084,6.670354,-5.794562,8.863947,0.964927,6.850620,7.480371,5.809448,9.683444,-4.325063,-3.422059,4.980016,2.906733,5.795563,-1.631834,-2.445559,-8.849216,4.863326,3.370714,-4.436574,-0.367300,1.558310,8.792275,7.309768,-7.124994,-8.597115,-4.702054,5.256292,9.990886,8.977440,-3.967326,4.498177,4.101394,6.478681,7.638145,-0.326326,9.982046,1.236542,-5.454731,7.322183,-8.024405,5.546221,8.557535,0.851060,-1.251242,6.791824,-5.602579,1.036144,0.116440,-0.873768,-8.932969,-8.306258,-9.891504,-5.011221,-9.557213,6.566669,2.017295,-2.365484,-7.005754,1.265412,-3.300673,4.018611,6.076533,-3.162348,2.417638,0.540601,3.371644,4.971835,-1.802515,-1.808925,0.271276,0.725997,1.218766,4.806928,5.431900,-4.760327,9.260159,-1.315203,-0.690288,-9.838288,9.353165,3.749141,5.598127,2.536779,3.051739,2.231843,0.286229,1.072703,-8.660101,-8.878984,-7.924712,6.143358,-7.953036,-6.187685,-3.901071,-9.075699,7.325125,4.909455,-8.806430,-1.235164,-2.568415,-5.510208,-0.366459,-4.283844,7.419997,2.377095,1.897809,9.847973,-6.551371,-9.117654,-5.918473,2.582105,4.943062,9.840989,7.814843,8.560946,3.927613,8.701331,7.692458,-1.295746,7.256051,-2.484688,-3.360956,-3.963646,-7.558179,7.540762,-2.991588,-5.296168,5.434293,2.816377,0.826036,5.955244,6.954150,-4.433085,-3.334307,2.236124,-8.719975,0.075460,6.127479,-5.915391,-8.051774,9.013205,-4.457643,-9.874905,2.916416,-1.822495,-9.692326,2.026961,-3.379851,2.708988,-6.779100,-8.323016,-3.203288,6.761096,-9.388523,4.310392,5.470430,5.715096,-0.341742,-1.719716,8.027747,-1.189876,-6.186690,4.145665,-4.489256,4.126743,1.615446,8.131578,1.547568,-9.388778,-0.357029,0.713184,-5.668689,4.276434,-9.937724,-5.246455,-2.179134,-7.831539,-0.223773,-7.520379,-7.984148,0.627820,1.313092,7.348217,4.085377,-9.226832,-6.799022,3.159494,-4.248549,5.623464,-0.030304,6.790969,6.858026,0.816836,6.928661,-2.675093,-7.251052,-9.322286,-6.784349,-1.882415,7.657176,-1.955144,-4.014174,-9.106039,-5.240491,-1.010358,9.162205,-6.963392,3.216232,-8.192716,3.271907,-5.293338,-6.700111,0.904156,-8.851318,-9.683992,8.034431,5.942034,-5.805646,-8.566207,-4.997522,-9.083609,-8.234382,-5.710539,-2.325376,7.609246,9.049323,8.693984,-4.882374,-7.822348,9.152024,-7.796006,9.654791,-9.315976,2.394839,0.662761,5.304222,6.199192,-8.859565,8.639656,-7.043268,-3.843239,-1.507047,3.112090,-0.909719,-1.685589,-0.408528,-4.171501,-0.944421,9.807464,-1.576917,3.692827,-9.440448,8.736986,-4.298705,-7.246842,0.823529,-7.019424,-8.969244,-6.327900,-6.874340,-9.877785,6.813085,-9.146990,-8.815861,7.921446,-9.154465,-5.449055,4.316228,9.739861,7.031218,-8.302555,-6.955539,-2.707158,-0.299105,-1.633475,3.987126,0.809778,6.502411,7.065609,-2.967693,-6.549858,4.523967,3.049529,2.718612,8.484869,-3.229651,6.427995,-3.463794,-1.739077,2.608708,5.614019,1.607103,2.781258,8.702675,-8.039114,-0.023466,-4.988584,-8.070735,-6.142367,8.409513,-2.323825,-0.001917,-9.992804,2.765321,4.924909,7.266306,-2.922657,-4.980117,-9.451746,-4.616440,1.484424,1.102846,-0.250328,7.281599,0.253904,-0.714201,8.815031,-7.724016,-3.087819,-5.052906,-6.747128,-6.195315,-5.217839,-1.257055,-7.633220,-7.552018,7.579701,-0.956019,3.328340,6.552273,-1.022411,-0.122824,-8.902193,2.361861,-2.430760,-1.762393,-6.588897,3.750005,1.502750,3.437273,-4.050138,8.421100,3.418620,-4.969281,-4.321962,-1.662288,6.252303,-5.789182,9.648567,-5.236980,6.752316,-7.445129,-0.487026,-5.283163,7.175865,9.087920,3.523246,-2.040221,-7.964166,0.718636,-1.550850,7.137765,-0.942514,8.685320,-3.747788,-8.062036,-8.749366,0.467521,-2.429041,0.829685,0.811295,-4.251709,4.946086,0.799674,4.261762,-2.684530,-9.996677,3.385446,6.649240,-9.991287,9.258617,2.833740,9.704988,-5.574606,1.235844,-2.901991,-3.819730,7.070594,5.950703,-3.439302,-0.838141,-6.136298,-5.576659,3.068233,-2.035418,8.886769,-8.159982,2.070415,2.481583,-1.889217,3.308889,7.754423,8.576787,-9.218471,-3.196900,3.628678,7.063308,7.278574,4.457731,-8.614779,5.246801,8.872713,-0.001655,6.859409,-4.486072,-5.040568,-0.254188,-4.680521,5.256874,-9.409502,7.894771,-8.674861,2.687708,-7.026672,-8.883828,-0.087655,3.806179,-9.888278,8.524599,2.554093,3.788571,5.548250,-9.206955,1.936750,-1.976932,3.106085,1.021257,7.315791,1.534454,9.641520,-6.199933,7.622861,-8.779172,2.324416,-6.715142,0.716450,6.083897,7.747144,-2.797716,4.193862,5.796191,-0.689173,-2.721820,9.273353,-2.034654,8.701323,3.640292,-6.404069,-2.204587,0.224839,-9.647961,-3.062954,7.022947,9.912840,-3.396564,0.029239,3.551360,-7.577438,8.332950,-0.934810,6.234061,-1.871819,-0.741038,-5.602521,-0.926920,9.432698,-5.959058,-1.243742,-7.558577,-3.031508,-9.559349,-7.691886,8.530315,1.294860,-3.625436,-9.029678,-0.246100,-0.757718,5.005864,6.115591,-3.716321,9.047549,4.048351,3.851494,4.918053,-2.680258,8.329296,-4.195310,-8.961114,6.018212,7.104641,-4.910788,-1.374914,-7.046864,3.040059,2.001831,3.010685,-8.066102,9.850835,-4.360366,0.713486,-8.638084,5.413771,-8.239814,3.644049,-8.207546,2.651865,-0.712599,-6.742852,-2.718531,-5.305229,8.581599,-4.239269,-9.342937,3.336924,-4.720606,-9.217787,0.159472,7.585940,9.775645,2.211454,3.867071,-2.814732,-4.126353,3.474934,-4.805417,6.927043,3.994341,7.863464,6.473791,-1.299926,-4.065665,-8.208017,-9.289120,4.550334,-0.494758,0.065652,0.557181,8.498893,-4.440290,-9.675079,4.983848,9.412548,5.677827,-8.637280,4.835924,7.828829,0.789126,-8.714724,8.939442,9.566995,-6.320354,-0.805028,-3.685948,-8.252488,-0.890645,7.990608,-9.467449,-1.907020,-6.564605,-4.376162,4.659031,8.067988,1.634882,-4.647402,4.375982,7.483577,-0.693393,9.715088,4.854199,-0.986314,9.900588,5.851966,-5.957145,9.723518,5.231670,-9.031164,8.624997,4.689083,6.694710,-1.975341,-5.089474,3.307650,2.519684,5.469580,-8.516201,-2.778998,-6.766580,1.603155,0.234478,3.225437,-5.802607,9.185088,4.220456,-0.577702,-1.245706,3.349445,-8.747241,3.839346,2.260541,6.054371,-5.288324,2.152389,3.790390,3.235376,-1.574412,6.692880,5.998392,-0.352654,-8.015396,6.921979,7.920693,7.256793,8.248044,8.989120,5.259475,-7.130953,-2.863868,-1.777738,-4.423226,-5.996752,-1.635508,4.243724,-6.129842,-1.858933,9.851826,3.712936,-4.654491,-2.035486,-9.688430,8.627903,-6.769073,4.036048,6.634090,6.215887,-2.923638,-8.421008,5.983743,-0.350324,-6.378050,-2.068734,-2.646802,-4.835728,-5.165941,2.272906,8.206135,5.371502,-9.497074,-8.952267,-3.137343,-6.315005,-0.540692,-2.285871,-0.638426,1.163412,4.396841,-7.074225,-2.838265,6.156956,-4.123338,2.625786,1.143723,0.884331,8.650802,7.284596,1.797172,-7.588363,6.208897,-4.365745,6.948643,-4.144175,9.688599,7.864103,3.654305,8.602095,1.575078,2.620325,0.006888,-3.044102,3.575435,-4.843446,3.139381,-9.267448,0.071417,1.618897,-1.180672,-1.099660,-4.300372,9.832797,-7.479979,2.973976,6.879676,-7.625333,-7.038883,-0.478413,-0.621399,-8.648581,3.003350,-0.956777,6.734575,-0.761614,3.164203,-2.424119,-0.337809,-8.145799,-0.887534,-9.327457,-6.406977,-8.183655,0.632508,-2.920334,1.566860,-1.580396,6.647569,-6.202824,-3.685589,1.246435,5.039742,8.253781,1.145167,-8.655088,-7.388939,-6.936595,9.652827,7.017571,2.151527,-6.280400,-6.667498,8.867890,-5.463395,0.750945,-2.992460,-1.161941,-9.373173,3.714764,1.574620,2.637879,-6.219651,2.798910,-5.516048,5.295636,-3.349980,-2.573692,-8.560052,3.578874,6.003707,8.849094], dtype = "float32")#candidate|1876|(2496,)|const|float32
const_1877 = relay.const([3.231620,7.188689,-1.869804,-4.950017,-9.437709,-9.657421,-4.873500,-2.028682,-0.954114,-2.750156,4.472944,6.587787,-4.534570,-9.531653,-0.038953,7.092905,1.720968,7.050075,1.446534,-4.511526,5.217141,-5.926371,-5.242175,-8.420056,9.467579,3.170892,-3.121109,-5.211293,8.181814,-0.165355,-9.038591,-6.078627,2.067311,-0.028205,1.660501,-1.729955,5.144834,1.217946,-4.224959,-1.501409,-7.459588,-9.671057,-8.996450,5.319476,5.046174,-5.746262,6.050518,2.637307,-4.299233,8.863624,9.445843,-7.438340,-9.427852,-5.449993,4.320387,-5.915356,2.167779,3.540964,7.006894,5.626075,-6.416609,5.339823,-0.728351,-6.261834,-2.093112,0.005461,-0.921316,-6.021848,1.994513,7.279762,-4.538741,-0.707643,-5.893904,5.046463,-5.931849,-5.879931,-6.455181,-9.031636,8.353903,6.945481,-5.248388,0.386355,-3.144669,5.770133,-0.759246,8.539199,-4.622854,-4.575563,6.038138,5.675370,4.402824,-4.729132,0.893801,-2.031253,-2.854362,-3.803626,-5.987653,9.102673,7.129029,-9.342129,8.975784,-2.092345,1.342886,-8.163092,5.464212,-4.772047,2.342002,-1.382701,8.299906,8.668335,6.726889,-1.879988,8.127587,-3.613367,-2.431545,3.631009,-8.359912,-6.582955,-3.295535,-7.730229,-8.882226,-7.516283,-1.792361,-5.879503,-5.716814,8.726766,2.649919,3.942837,1.343386,8.098957,5.183710,5.067869,3.854944,9.283690,-4.712304,0.636145,8.940246,-0.657158,-0.464923,1.434966,6.244187,-0.073967,7.723517,2.443654,-4.539168,-1.279282,2.908257,9.318244,7.362081,1.246910,2.511421,-4.449032,-0.107149,-2.183833,3.279918,7.979616,-9.843575,2.026816,-9.240916,-2.174041,-3.580583,-0.789884,-4.051449,-6.631493,-9.805421,5.399464,-8.821582,-9.732444,-7.355028,1.976101,7.139889,-4.491604,9.413817,1.841934,6.149413,-7.104966,-1.736073,0.401860,-8.014194,9.101414,3.570025,-3.871125,-9.332692,1.416332,6.310125,3.437590,4.827993,-9.167699,6.503208,-3.266186,6.897891,-9.506246,1.909708,-7.627562,6.796833,4.000311,-8.873242,-1.991730,-1.719674,-7.814523,0.857912,-4.697906,8.928976,5.497789,-0.380807,9.616387,-4.453246,-3.631633,-3.634689,7.434880,-7.279810,-0.839024,1.043323,7.903891,-7.077596,3.453251,3.328026,9.937241,1.418371,-4.739384,-5.563752,0.109661,1.720696,4.949485,7.021443,-6.064092,1.472697,-5.169277,0.850497,-3.485660,3.976556,6.383035,-6.935425,-7.070498,2.918954,3.299053,-0.467070,-2.513855,-8.046343,4.063236,4.298126,9.912495,0.218851,0.678087,-3.964976,-0.105382,6.635980,-6.241772,-3.150426,1.256636,5.157972,-1.938077,-1.712105,-7.661981,-8.070351,-8.001103,1.530840,-7.448554,5.900197,2.033304,6.366751,-7.491220,-4.918158,-4.558754,0.136007,-7.132458,6.576519,-3.943743,-8.940589,-6.112283,4.647006,-9.956335,2.087519,8.267861,-2.085270,-0.462165,-7.539266,-7.182258,9.113063,-6.846906,9.289787,-5.611252,0.545302,-5.915208,2.754375,-7.677876,3.346515,8.419670,2.916221,4.147802,7.076170,3.588347,-7.454217,-9.111674,5.116853,-6.435893,-9.587818,6.510984,-5.627651,0.184140,-5.739767,-9.366588,-0.424799,-9.285141,-5.728616,1.547065,0.092553,9.641036,-3.402693,-3.677002,-3.619231,-1.534852,2.438098,-1.489755,6.657445,2.310494,3.861360,4.071120,0.460823,0.157617,-0.269000,4.084448,-0.516441,6.761022,2.277212,-8.449612,1.183307,-4.870353,-2.522138,-2.760683,-8.833773,8.436135,4.452923,8.960608,9.470432,-2.254864,4.769416,7.875004,-3.777023,-6.182026,-2.854057,-8.925933,-6.410626,-7.813657,5.966290,-9.397190,-9.477845,-6.492361,8.866635,-5.550807,-8.903255,-4.826687,2.983421,0.785669,-4.620660,9.535571,-8.131611,-5.092099,-4.777852,8.557277,5.713717,1.980440,-3.479970,2.900181,5.437901,-1.580500,-2.914291,8.852680,-1.802613,-2.405981,-3.868757,-1.709884,1.684882,1.858865,7.734070,3.050491,8.930314,9.110319,-7.016591,0.127452,-9.673002,-0.214817,-6.179105,-1.655245,-0.010611,1.801879,-8.454893,-8.034258,5.635214,3.644822,-0.081617,3.100796,5.613246,1.345087,-1.465796,5.872762,-1.970300,3.327772,0.505704,-3.729345,-6.431869,3.133837,8.571411,-9.781127,2.157376,2.466755,5.385993,1.283943,1.534096,-6.746708,3.066260,9.200584,8.969064,-3.775543,-5.612223,4.876623,8.721397,-9.991824,-0.581983,2.131977,-6.656880,3.845960,0.392957,1.318165,-7.045891,-2.875308,3.929359,1.033989,6.582435,-3.671939,-3.280226,-1.202166,-9.970055,-7.931968,-3.906049,-6.518887,8.151580,-0.484923,7.898901,9.506765,0.503443,4.113481,5.112054,-2.096037,3.485153,9.080053,-1.554691,9.753287,-9.613463,2.703525,0.635942,8.642936,4.774087,8.398049,1.497819,-8.071901,6.250566,-5.429184,1.996181,8.847743,9.275638,-6.516011,-1.735101,-8.662717,-1.644672,5.436195,0.051488,-0.768292,-6.088660,6.875992,-7.193651,0.644487,-3.032187,7.154178,-1.790126,-8.819524,7.842660,1.644420,-5.675268,-1.885277,2.764908,-2.283699,-8.831949,0.883599,-4.435291,5.207473,9.467824,-6.337658,-6.790696,3.031166,-8.743598,-2.661673,-0.261784,-1.055369,1.911010,0.121733,-9.578827,6.093580,-9.840797,-8.332866,-9.284598,-7.008874,-0.855992,3.166821,-3.862735,8.734147,-8.092320,-9.630084,9.060142,8.428397,1.798836,5.989257,-2.616290,-3.590261,3.725321,9.515337,-8.143373,1.421543,7.620063,5.925999,7.113994,-5.998884,-3.689092,1.638606,7.714656,-1.531145,8.554824,7.008530,4.156043,0.554910,-5.248134,-9.591350,-9.985752,9.669931,-4.521898,4.408899,9.956953,9.340810,-0.828372,7.959224,2.778939,-2.172841,4.502231,-4.870997,3.622869,3.428362,-5.681877,4.556072,-0.239011,-3.480046,7.109877,-8.022547,-3.939013,9.618254,-7.358890,-5.031514,-0.341284,9.480003,-0.361600,-9.105411,5.252769,5.254458,8.270258,-6.466159,1.986734,-4.802960,-3.624899,5.936446,-7.436343,1.923640,1.513123,-6.801943,-4.522065,6.301601,3.858003,-5.435174,-9.417127,9.947710,-0.799537,8.349327,-5.999809,5.025248,-9.464257,8.294840,5.977392,-1.004757,0.129426,-1.409827,-3.607604,-1.644392,-0.620773,-8.537366,8.576585,-3.092614,4.413284,2.151294,-5.712675,-4.225695,-2.324318,9.920495,-6.659619,-2.275085,4.961364,0.064073,5.802916,1.465848,-8.585924,-8.313318,2.788686,-6.752831,-3.354358,0.178707,-3.037386,8.813397,1.910925,-1.067799,-4.677794,9.697224,8.239193,3.121252,4.947566,-8.333539,-5.023579,7.739652,-8.382559,-9.895562,1.460075,9.283263,9.205595,-9.309710,5.286324,-1.022354,-9.994256,2.064115,-7.603776,-2.097474,-0.868911,-2.925272,4.548078,-6.863415,1.408220,-7.347702,-3.141606,-2.096677,-1.867711,6.522395,8.840533,-2.951315,2.905251,2.125178,-8.682343,4.613796,3.052345,-6.811214,7.457949,-4.586450,8.992520,-4.226663,-8.501718,-5.451874,3.906337,-1.557827,0.147359,-5.274597,9.179329,5.115769,7.927312,-6.215274,-3.463338,0.054360,5.840757,-8.614983,-9.767694,9.126635,8.431883,-6.734480,7.197718,3.335856,3.233247,4.837406,4.746222,-4.550055,-9.865426,6.515132,8.575024,-7.002462,-6.513366,-3.085728,0.403912,8.116102,8.373842,-0.912035,1.844769,1.266597,9.511509,5.026199,3.111160,-0.076857,-0.447514,-3.115173,-1.605467,-0.037998,2.629779,-4.418772,-9.430670,7.776067,2.098556,-8.020504,3.918484,1.923266,9.033349,-3.853633,-3.140619,-2.931060,-0.126259,3.359837,7.101736,-6.011491,-2.400753,-4.111622,-5.895495,-1.639034,6.772471,-2.921468,-9.961397,5.475023,-2.687706,2.938989,-7.351506,1.767484,-1.781128,-5.627989,6.901417,5.961877,1.711839,-2.545674,9.679389,9.355315,-1.905604,-9.350830,3.722398,-2.227347,0.593580,-3.281898,1.354230,-2.997586,-2.043185,7.355165,8.239843,2.643052,-1.722187,8.933521,-6.329373,-3.344515,-0.180016,-6.277407,7.066263,-2.199375,-6.906310,-2.489812,-9.477243,6.046656,3.007080,-8.323397,8.073937,7.657318,-8.704844,-5.877922,6.648074,1.972222,6.728163,1.065729,-6.099583,3.006432,7.558910,-0.463227,-4.707339,-3.828133,-9.369767,6.496072,0.648737,-4.983098,1.876122,-4.944483,0.432829,-3.629519,4.687678,1.312913,2.715448,-7.893156,8.590306,6.295074,9.645640,1.235836,-0.638110,0.299582,-2.174804,7.487427,-0.049603,-7.969910,1.119828,-4.558323,7.053360,-5.072462,-2.830124,2.912306,4.515191,-3.329069,-5.631060,8.914948,-8.478532,-6.198166,-5.512252,-7.720772,-8.219007,-3.225908,6.668415,-2.369402,6.526745,-4.711889,-8.546309,9.917905,-3.345118,-5.140435,9.007013,7.469828,-8.460192,-9.001031,-2.120459,-0.183435,-7.347299,-9.031702,7.873651,-1.623924,-1.158348,0.732910,-8.981479,-3.310734,-7.606955,5.671283,-5.105870,3.550118,3.564142,5.535337,-0.990795,-3.773230,2.253402,-7.989498,8.306808,9.036566,2.951725,-1.318894,4.569800,-9.319022,5.931985,1.697723,9.992720,2.554118,3.558253,-3.772615,-9.906797,-2.597589,3.201425,-0.754999,9.998875,-6.603397,-5.809179,-3.074752,-1.243753,0.901599,-9.211126,7.466411,1.074490,-6.950106,-9.761905,-9.768207,4.105616,-6.821947,-4.755341,-7.110141,-8.750654,-5.776813,3.538833,-2.562631,-1.735860,-2.928754,-7.296665,-3.221127,-7.227027,-0.773203,7.757322,5.043235,5.591086,8.637129,-4.058420,0.839047], dtype = "float64")#candidate|1877|(896,)|const|float64
call_1873 = relay.TupleGetItem(func_1256_call(relay.reshape(const_1874.astype('float64'), [6, 6, 16]), relay.reshape(const_1875.astype('float64'), [40,]), relay.reshape(const_1874.astype('float64'), [6, 6, 16]), relay.reshape(const_1876.astype('float32'), [2496,]), relay.reshape(const_1877.astype('float64'), [896,]), relay.reshape(const_1855.astype('int8'), []), relay.reshape(const_1874.astype('int8'), [6, 6, 16]), ), 4)
call_1878 = relay.TupleGetItem(func_1265_call(relay.reshape(const_1874.astype('float64'), [6, 6, 16]), relay.reshape(const_1875.astype('float64'), [40,]), relay.reshape(const_1874.astype('float64'), [6, 6, 16]), relay.reshape(const_1876.astype('float32'), [2496,]), relay.reshape(const_1877.astype('float64'), [896,]), relay.reshape(const_1855.astype('int8'), []), relay.reshape(const_1874.astype('int8'), [6, 6, 16]), ), 4)
func_1028_call = mod.get_global_var('func_1028')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_1881 = relay.TupleGetItem(func_1028_call(relay.reshape(const_1876.astype('float32'), [13, 16, 12])), 0)
call_1882 = relay.TupleGetItem(func_1030_call(relay.reshape(const_1876.astype('float32'), [13, 16, 12])), 0)
bop_1894 = relay.mod(call_1881.astype('float64'), relay.reshape(call_1873.astype('float64'), relay.shape_of(call_1881))) # shape=(13, 16, 12)
bop_1897 = relay.mod(call_1882.astype('float64'), relay.reshape(call_1878.astype('float64'), relay.shape_of(call_1882))) # shape=(13, 16, 12)
func_927_call = mod.get_global_var('func_927')
func_930_call = mutated_mod.get_global_var('func_930')
const_1899 = relay.const([[3,6,-3,5,-5,-1,2,-4,6,4,-1,-6,8,2,5,2,1,8,-9,9,-1,-2,-6,-7,-6,-8,6,10,8,-9,3,5,-3,8,-5,7,1,10,-6,10,9,-8,1,-8,1,6,-1,10,1,8,-4,3,-2,3,-1,9,2,-5,-7,-6,10,-4,10,-7,-9,8,-7,1,5,9,-8,5,8,-6,3,-3,1,-6,-1,-3,-7,6,-3,5,-4,3,-3,-3,-8,-5,-1,8,6,-5,8,-7,-1,8,1,-2,-8,-8,-1,3],[2,-4,6,6,-7,-7,3,9,7,5,-3,-5,-10,-3,4,4,-3,10,2,9,1,4,10,-5,1,6,-7,-4,-4,1,2,-3,-4,2,10,-5,9,-2,-1,5,9,7,-4,2,-9,-5,8,7,2,-10,-5,3,4,-1,4,-8,-9,8,9,9,-5,-10,4,-7,-1,9,1,7,1,2,-6,-8,-7,-8,8,-4,-4,8,-4,-4,-1,10,-7,7,5,-5,2,-5,2,7,3,-5,-8,6,-7,10,5,7,-6,-2,-6,3,-10,10],[4,-2,-1,-5,-1,4,1,-5,1,-8,8,8,-5,-3,1,-7,-1,3,7,10,7,7,5,4,-3,4,10,-7,-5,10,-4,-3,7,8,2,-3,1,8,-1,5,-5,-3,-1,2,1,-3,10,-3,-10,2,-8,-4,4,-6,-4,-8,9,6,4,-7,-9,-1,6,7,-4,9,-3,-2,5,-3,-10,-8,4,1,1,2,-10,-10,-8,4,5,5,-8,-8,-4,2,3,5,5,5,3,7,-10,-2,3,2,1,9,-4,-2,1,4,-7,1],[-4,7,4,3,-10,-4,-2,4,-4,3,-1,8,-1,6,-1,10,-5,-3,1,-3,-2,6,3,-5,5,7,-5,10,7,-5,-4,6,-2,-8,-6,5,-10,-9,-3,2,-6,-3,-3,-8,8,-1,-8,2,7,-4,3,-10,-10,-5,-5,2,5,-2,-10,-1,6,3,-8,-4,6,-7,-7,1,-5,-4,-5,-2,2,9,6,10,-1,-6,9,3,9,-4,6,-8,4,-1,-8,9,9,-2,7,9,-7,8,-6,-1,2,5,-3,-1,7,-5,-7,5],[-2,10,-2,-1,5,-7,2,-10,-5,6,-10,-6,9,9,8,1,-4,-1,-2,-5,2,10,2,-2,-4,7,-5,10,6,9,5,6,-3,-6,-9,-3,-5,-7,-4,-5,7,-4,-7,-6,4,-9,-7,10,1,-6,9,3,2,-2,-1,5,-1,2,-3,-2,-6,-8,5,-5,-4,-9,10,-10,6,-1,10,-8,-4,8,-1,-6,1,-1,2,3,7,-2,7,-1,3,-1,7,4,10,-1,-2,7,1,-10,-6,-10,6,-9,-3,6,-2,8,6,1],[4,6,-8,-9,-3,-1,-1,-1,4,-2,2,-2,-6,-4,-2,8,-4,4,-7,1,4,-10,-7,-4,3,-8,5,-1,-10,-5,7,-10,10,-5,9,-9,-1,7,-10,-9,-8,-1,-8,-6,-7,-3,-6,7,9,3,1,-10,-10,10,-10,4,7,3,-8,-4,-1,9,-3,5,10,9,-9,4,6,1,3,5,1,-5,-6,3,-7,-7,9,-2,10,-2,10,10,10,-3,-9,2,6,-10,-6,2,-5,4,10,7,-7,1,-5,-5,-4,-9,-9,-2],[10,-9,-5,2,1,8,-3,-3,1,10,-5,-2,-7,2,2,3,8,-10,3,4,9,-5,-4,5,-2,-3,3,-10,6,8,-5,-10,1,5,2,-9,-1,3,5,-3,4,8,3,10,7,5,-7,7,5,-5,3,-7,-10,-2,-8,-2,2,4,7,3,9,7,5,7,8,-6,-6,5,-3,9,-1,8,2,-9,3,2,-1,2,-5,-5,-1,-5,-6,-2,-9,-2,5,-6,-1,5,-6,-10,8,-5,10,-7,3,-9,6,9,4,6,1,-6],[6,8,8,2,-9,10,-7,2,1,-10,-5,-2,2,8,-9,-8,6,10,-6,-10,9,6,-7,7,-2,-4,-8,7,4,5,-10,2,-3,-9,-5,3,7,10,-10,1,-4,10,-1,3,-4,1,-3,9,-3,6,7,2,1,-9,8,4,7,3,-2,-5,5,10,7,6,10,-10,1,3,3,-4,4,-3,3,10,2,-2,1,7,-1,-10,4,8,-1,9,2,6,-1,-8,-7,-10,6,-6,-3,-5,-7,-7,-4,-8,5,10,1,3,5,6],[10,10,7,-10,-10,-5,1,-8,7,7,-3,9,-3,6,2,9,-8,-7,-7,-5,4,-4,2,-8,-9,-10,4,-6,10,4,-4,5,3,6,8,9,-1,-7,-8,-3,1,-9,3,-9,-9,-6,-7,-6,-2,2,-6,-2,-7,-10,-5,2,-6,-1,8,3,-3,4,-9,-2,-5,-3,-7,-7,-3,9,-10,3,2,7,4,-9,9,8,-4,-1,7,1,8,-8,5,-10,-8,4,-7,-2,-9,1,-2,7,1,6,-1,-4,3,1,-9,6,4,-9],[-9,3,10,7,4,10,2,-3,-3,4,-9,5,-4,7,-10,-10,-9,-8,-8,3,-1,-7,-10,-7,-7,10,-6,6,-7,9,-1,-8,-3,-9,3,4,6,-8,2,-1,8,5,-8,3,3,-5,-10,-3,9,-5,4,8,-1,-8,6,1,1,-8,-8,6,-3,-6,-4,-8,-10,9,4,-6,6,9,-3,5,-8,-3,-4,-8,10,1,-2,10,6,10,7,-7,1,-6,-8,-10,-4,3,-4,6,-6,9,-8,9,-8,-5,6,9,-8,2,4,10],[-5,-7,-7,-4,-9,-8,3,2,10,-6,9,-4,8,1,-9,1,8,-4,10,6,2,8,-5,5,-10,-2,6,-4,-5,8,7,-10,7,10,4,5,-1,-1,5,-4,9,-4,3,1,2,-1,-9,4,7,-1,9,6,1,10,5,3,-1,9,4,1,-9,4,5,4,-1,2,-3,2,6,-1,6,-5,10,1,5,-7,8,2,1,-5,1,2,6,7,6,4,-2,8,-4,4,-5,-6,6,4,6,-10,9,-10,-8,8,6,5,-3,-10]], dtype = "int64")#candidate|1899|(11, 104)|const|int64
var_1900 = relay.var("var_1900", dtype = "float64", shape = (96,))#candidate|1900|(96,)|var|float64
call_1898 = relay.TupleGetItem(func_927_call(relay.reshape(const_1899.astype('int64'), [13, 8, 11]), relay.reshape(var_1900.astype('float64'), [96,]), ), 3)
call_1901 = relay.TupleGetItem(func_930_call(relay.reshape(const_1899.astype('int64'), [13, 8, 11]), relay.reshape(var_1900.astype('float64'), [96,]), ), 3)
func_21_call = mod.get_global_var('func_21')
func_24_call = mutated_mod.get_global_var('func_24')
call_1902 = func_21_call(relay.reshape(var_1900.astype('float64'), [3, 2, 16]), relay.reshape(var_1900.astype('float64'), [3, 2, 16]), )
call_1903 = func_21_call(relay.reshape(var_1900.astype('float64'), [3, 2, 16]), relay.reshape(var_1900.astype('float64'), [3, 2, 16]), )
bop_1921 = relay.logical_and(bop_1857.astype('bool'), relay.reshape(var_1856.astype('bool'), relay.shape_of(bop_1857))) # shape=(16, 9, 13)
output = relay.Tuple([const_1874,const_1875,const_1876,const_1877,bop_1894,call_1898,const_1899,var_1900,call_1902,bop_1921,])
output2 = relay.Tuple([const_1874,const_1875,const_1876,const_1877,bop_1897,call_1901,const_1899,var_1900,call_1903,bop_1921,])
func_1924 = relay.Function([var_1856,var_1900,], output)
mod['func_1924'] = func_1924
mod = relay.transform.InferType()(mod)
mutated_mod['func_1924'] = func_1924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1924_call = mutated_mod.get_global_var('func_1924')
var_1926 = relay.var("var_1926", dtype = "bool", shape = (16, 9, 13))#candidate|1926|(16, 9, 13)|var|bool
var_1927 = relay.var("var_1927", dtype = "float64", shape = (96,))#candidate|1927|(96,)|var|float64
call_1925 = func_1924_call(var_1926,var_1927,)
output = call_1925
func_1928 = relay.Function([var_1926,var_1927,], output)
mutated_mod['func_1928'] = func_1928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1995 = relay.var("var_1995", dtype = "float32", shape = (5, 4, 2))#candidate|1995|(5, 4, 2)|var|float32
uop_1996 = relay.erf(var_1995.astype('float32')) # shape=(5, 4, 2)
output = relay.Tuple([uop_1996,])
output2 = relay.Tuple([uop_1996,])
func_1998 = relay.Function([var_1995,], output)
mod['func_1998'] = func_1998
mod = relay.transform.InferType()(mod)
var_1999 = relay.var("var_1999", dtype = "float32", shape = (5, 4, 2))#candidate|1999|(5, 4, 2)|var|float32
output = func_1998(var_1999)
func_2000 = relay.Function([var_1999], output)
mutated_mod['func_2000'] = func_2000
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2039 = relay.var("var_2039", dtype = "int32", shape = (7, 7, 2))#candidate|2039|(7, 7, 2)|var|int32
var_2040 = relay.var("var_2040", dtype = "int32", shape = (7, 7, 2))#candidate|2040|(7, 7, 2)|var|int32
bop_2041 = relay.maximum(var_2039.astype('int32'), relay.reshape(var_2040.astype('int32'), relay.shape_of(var_2039))) # shape=(7, 7, 2)
uop_2044 = relay.sigmoid(var_2040.astype('float64')) # shape=(7, 7, 2)
func_177_call = mod.get_global_var('func_177')
func_180_call = mutated_mod.get_global_var('func_180')
var_2051 = relay.var("var_2051", dtype = "int8", shape = ())#candidate|2051|()|var|int8
const_2052 = relay.const([5,-9,-1,6,-10,-5,7,-7,-9,3,-3,-2,-5,-10,-7,-4,-1,1,-1,9,-4,-8,-6,-10,-1,10,7,8,-7,2,-3,8,-3,-6,-4,6,3,-8,10,-6,4,-4,-8,-2,-1,10,-5,8,5,-2,2,8,-3,-4,6,-3,6,1,2,-10,2,-6,8,4,-1,4,-4,1,-9,-8,5,-7,-9,-6,4,3,-7,2,7,1,-2,-5,7,4,1,5,5,8,10,4,-1,9,-10,-5,7,-6,1,5,-7,8,-3,5,-2,-10,6,-6,5,-3,8,-3,-4,-6,-2,6,2,-9,-4,-10,5,9,-8,-6,-2,-7,9,-7,-10,-9,-4,2,-7,-8,5,-7,10,2,3,-8,-9,5,-6,2,-5,-8,7,4,3,7,2,6,2,-7,-8,-1,-3,-6,9,4,-10,-3,-4,-3,3,-3,-5,-6,-7,-3,-1,3,-1,10,8,3,6,-8,-7,5,10,4,7,4,4,-2,-2,-6,5,-2,-1,2,5,10,-1,-1,-3,8,-6,7,-10,4,3,4,9,10,4,-9,-1,10,-4,-7,-5,-8,-7,-2,3,8,9,1,-9,8,-4,-2,-6,9,3,-8,10,1,2,-4,-1,-10,-6,8,3,-1,-5,-1,5,-10,5,9,3,-3,-5,-9,-9,7,-1,3,1,10,-6,6,1,2,-5,3,10,2,-3,10,-9,9,1,3,-5,9,-3,5,-2,-2,-7,-6,3,2,10,-9,-10,10,-10,5,-7,-9,1,6,10,-2,-5,1,8,-3,5,9,10,-9,4,6,-8,2,8,3,-6,-2,-5,8,-8,4,-4,-1,2,-7,-3,10,7,-1,9,-2,2,9,-10,-3,-9,4,-7,2,-6,-8,3,10,-9,6,8,-7,3,-8,-3,1,-5,9,-1,-3,-9,6,8,-1,-9,-5,4,-9,-7,8,-7,4,-4,-8,-4,-2,2,5,5,7,3,-3,3,4,9,10,2,10,6,3,-8,3,2,-2,-3,3,10,-3,-5,4,10,10], dtype = "int8")#candidate|2052|(384,)|const|int8
call_2050 = relay.TupleGetItem(func_177_call(relay.reshape(var_2051.astype('int8'), []), relay.reshape(const_2052.astype('int8'), [3, 16, 8]), ), 1)
call_2053 = relay.TupleGetItem(func_180_call(relay.reshape(var_2051.astype('int8'), []), relay.reshape(const_2052.astype('int8'), [3, 16, 8]), ), 1)
output = relay.Tuple([bop_2041,uop_2044,call_2050,var_2051,const_2052,])
output2 = relay.Tuple([bop_2041,uop_2044,call_2053,var_2051,const_2052,])
func_2055 = relay.Function([var_2039,var_2040,var_2051,], output)
mod['func_2055'] = func_2055
mod = relay.transform.InferType()(mod)
mutated_mod['func_2055'] = func_2055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2055_call = mutated_mod.get_global_var('func_2055')
var_2057 = relay.var("var_2057", dtype = "int32", shape = (7, 7, 2))#candidate|2057|(7, 7, 2)|var|int32
var_2058 = relay.var("var_2058", dtype = "int32", shape = (7, 7, 2))#candidate|2058|(7, 7, 2)|var|int32
var_2059 = relay.var("var_2059", dtype = "int8", shape = ())#candidate|2059|()|var|int8
call_2056 = func_2055_call(var_2057,var_2058,var_2059,)
output = call_2056
func_2060 = relay.Function([var_2057,var_2058,var_2059,], output)
mutated_mod['func_2060'] = func_2060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2364 = relay.var("var_2364", dtype = "bool", shape = (15, 16, 4))#candidate|2364|(15, 16, 4)|var|bool
var_2365 = relay.var("var_2365", dtype = "bool", shape = (15, 16, 4))#candidate|2365|(15, 16, 4)|var|bool
bop_2366 = relay.logical_or(var_2364.astype('bool'), relay.reshape(var_2365.astype('bool'), relay.shape_of(var_2364))) # shape=(15, 16, 4)
bop_2374 = relay.greater(var_2365.astype('bool'), relay.reshape(bop_2366.astype('bool'), relay.shape_of(var_2365))) # shape=(15, 16, 4)
output = bop_2374
output2 = bop_2374
func_2388 = relay.Function([var_2364,var_2365,], output)
mod['func_2388'] = func_2388
mod = relay.transform.InferType()(mod)
var_2389 = relay.var("var_2389", dtype = "bool", shape = (15, 16, 4))#candidate|2389|(15, 16, 4)|var|bool
var_2390 = relay.var("var_2390", dtype = "bool", shape = (15, 16, 4))#candidate|2390|(15, 16, 4)|var|bool
output = func_2388(var_2389,var_2390,)
func_2391 = relay.Function([var_2389,var_2390,], output)
mutated_mod['func_2391'] = func_2391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2535 = relay.var("var_2535", dtype = "int64", shape = (3, 2, 12))#candidate|2535|(3, 2, 12)|var|int64
var_2536 = relay.var("var_2536", dtype = "int64", shape = (3, 2, 12))#candidate|2536|(3, 2, 12)|var|int64
bop_2537 = relay.minimum(var_2535.astype('int64'), relay.reshape(var_2536.astype('int64'), relay.shape_of(var_2535))) # shape=(3, 2, 12)
output = relay.Tuple([bop_2537,])
output2 = relay.Tuple([bop_2537,])
func_2551 = relay.Function([var_2535,var_2536,], output)
mod['func_2551'] = func_2551
mod = relay.transform.InferType()(mod)
var_2552 = relay.var("var_2552", dtype = "int64", shape = (3, 2, 12))#candidate|2552|(3, 2, 12)|var|int64
var_2553 = relay.var("var_2553", dtype = "int64", shape = (3, 2, 12))#candidate|2553|(3, 2, 12)|var|int64
output = func_2551(var_2552,var_2553,)
func_2554 = relay.Function([var_2552,var_2553,], output)
mutated_mod['func_2554'] = func_2554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3004 = relay.var("var_3004", dtype = "bool", shape = (8, 10, 14))#candidate|3004|(8, 10, 14)|var|bool
const_3005 = relay.const([[[False,False,False,False,False,True,True,True,True,False,True,False,True,True],[True,True,True,False,True,False,True,False,True,True,True,False,False,False],[True,True,False,True,True,False,True,True,True,True,True,False,True,False],[False,False,True,True,True,True,False,False,True,True,False,False,False,True],[False,False,True,True,True,True,True,True,True,False,False,True,True,True],[True,False,True,False,False,True,True,True,False,True,True,True,False,False],[False,False,True,False,True,True,False,False,False,True,True,False,True,False],[True,True,True,False,True,True,False,False,False,False,True,False,True,True],[True,False,True,True,False,False,False,True,True,False,False,False,True,True],[False,False,True,True,True,True,True,True,False,False,True,False,False,False]],[[False,True,True,True,True,False,True,False,True,True,True,False,True,True],[False,False,True,False,False,False,True,False,True,True,True,True,True,False],[True,True,False,True,False,False,True,False,False,False,False,True,True,True],[False,False,True,False,False,False,True,False,False,False,False,False,True,True],[True,False,True,True,True,False,False,False,False,True,False,False,True,False],[False,False,True,False,False,False,False,False,False,True,True,True,False,True],[True,True,True,False,False,False,True,True,False,False,True,False,True,True],[True,True,True,True,True,True,True,False,True,True,False,False,True,True],[True,True,True,False,False,False,False,False,False,False,False,True,False,True],[True,True,True,False,False,False,True,False,True,False,False,True,False,False]],[[True,True,False,False,False,True,False,False,True,False,True,True,False,True],[False,False,False,False,False,True,False,False,False,False,False,True,False,False],[False,False,True,True,True,True,True,True,False,True,False,True,False,True],[False,False,False,True,True,False,True,True,False,True,True,False,True,False],[True,False,False,False,False,True,True,False,False,True,True,False,False,True],[True,False,False,False,True,False,True,False,True,False,True,True,True,False],[True,True,False,False,True,True,False,True,False,False,True,True,True,True],[True,True,False,True,False,True,True,True,True,False,True,False,False,False],[True,True,False,False,False,True,True,True,False,True,True,False,True,False],[True,False,True,True,False,False,False,False,True,True,True,False,True,False]],[[True,True,False,False,False,False,True,True,True,False,False,True,True,True],[False,True,False,True,True,True,False,True,True,False,True,False,True,False],[True,False,False,False,True,False,False,False,True,True,True,False,True,True],[False,True,True,False,False,True,True,True,False,False,True,False,False,False],[False,False,True,True,False,True,True,False,False,False,False,True,True,True],[True,True,False,True,False,True,True,False,False,True,True,True,True,False],[True,True,True,True,True,False,True,False,True,False,False,True,False,False],[False,False,True,False,True,True,True,True,True,True,True,True,False,False],[False,True,True,True,False,False,True,False,False,False,False,True,False,False],[True,True,False,True,True,True,True,False,False,True,True,True,False,False]],[[True,False,False,True,True,True,True,True,True,False,True,True,False,True],[True,False,True,False,True,True,True,False,False,True,False,True,False,True],[False,False,True,True,False,False,True,True,True,False,False,True,False,False],[False,False,True,True,False,True,True,False,False,True,False,True,False,True],[False,False,False,False,False,False,False,False,False,True,True,True,True,True],[False,True,True,True,True,True,False,True,False,False,True,False,True,False],[True,True,True,True,True,True,False,True,True,False,True,True,True,False],[True,False,True,True,True,True,False,False,False,True,True,False,True,True],[False,False,True,False,True,False,True,False,True,True,True,True,True,False],[False,False,False,True,False,True,True,True,False,True,True,False,False,True]],[[False,True,False,True,True,True,True,False,True,False,False,False,False,True],[True,True,True,False,False,True,True,False,True,False,False,True,False,True],[False,False,False,False,False,False,True,True,True,False,False,False,True,False],[True,True,False,False,False,True,False,False,True,False,True,False,False,True],[True,False,False,True,True,True,False,True,True,True,False,True,False,False],[True,True,True,False,False,True,True,False,False,True,True,True,True,False],[True,False,True,True,False,True,False,True,False,False,False,False,False,True],[True,False,True,False,True,False,True,True,True,False,True,False,True,False],[True,True,False,True,True,True,False,True,True,False,True,True,True,True],[True,True,False,False,True,False,True,False,False,False,True,False,False,False]],[[False,True,True,True,False,True,False,True,True,False,True,False,True,False],[True,False,True,True,True,False,True,False,False,False,False,False,False,True],[False,False,True,False,False,False,False,False,False,False,False,True,True,True],[True,False,True,False,False,False,True,True,False,True,True,False,True,True],[True,False,False,True,False,True,False,False,False,False,True,False,False,True],[True,True,False,False,True,True,False,True,True,False,False,False,True,True],[False,False,False,True,False,False,True,True,False,True,True,False,True,False],[False,True,True,True,True,True,True,False,False,True,False,False,True,False],[False,False,False,False,True,False,False,True,True,True,False,True,False,False],[True,True,False,True,False,False,False,True,True,True,False,False,False,False]],[[False,False,False,False,False,False,False,True,True,False,True,False,True,True],[True,True,True,False,False,False,True,True,False,True,False,True,False,False],[True,False,False,True,False,True,True,True,True,False,False,False,False,True],[False,False,True,True,True,False,True,False,False,False,True,False,True,True],[False,True,False,True,False,False,True,False,True,False,True,True,False,False],[True,True,True,False,True,False,True,False,True,True,False,True,True,True],[False,True,True,False,False,True,True,False,True,False,True,True,True,False],[False,True,False,True,False,False,True,True,False,True,False,True,False,False],[True,True,False,True,False,True,True,True,False,False,True,True,True,False],[False,False,True,False,True,True,False,False,True,True,True,False,False,True]]], dtype = "bool")#candidate|3005|(8, 10, 14)|const|bool
bop_3006 = relay.logical_and(var_3004.astype('bool'), relay.reshape(const_3005.astype('bool'), relay.shape_of(var_3004))) # shape=(8, 10, 14)
func_21_call = mod.get_global_var('func_21')
func_24_call = mutated_mod.get_global_var('func_24')
var_3012 = relay.var("var_3012", dtype = "float64", shape = (96,))#candidate|3012|(96,)|var|float64
call_3011 = func_21_call(relay.reshape(var_3012.astype('float64'), [3, 2, 16]), relay.reshape(var_3012.astype('float64'), [3, 2, 16]), )
call_3013 = func_21_call(relay.reshape(var_3012.astype('float64'), [3, 2, 16]), relay.reshape(var_3012.astype('float64'), [3, 2, 16]), )
func_756_call = mod.get_global_var('func_756')
func_759_call = mutated_mod.get_global_var('func_759')
const_3022 = relay.const([7.505285,5.348648,-2.324437,-2.764278,7.928568,-4.945679,-5.730586,-9.719244,3.860213,1.186530,0.538233,6.685744,-8.327361,-5.144833,-9.288932,-9.393473,-4.471146,2.354181,-3.818545,7.962930,-5.254796,7.589500,-5.324987,-1.080269,0.124338,2.739166,-7.136803,-1.422102,-5.775653,0.038842,-6.888839,-9.144003,9.871406,7.713766,0.411688,4.961040,-6.734614,-6.962034,4.925735,1.918315,-7.891147,5.800504,2.377546,-7.706093,-7.510530,-7.348813,5.707272,-2.165503,-0.307128,9.163134,-6.189882,-3.153469,4.681792,3.006538,6.756477,0.501288,3.127601,-5.180452,-5.904155,-8.282332,-4.491645,7.113757,7.106050,2.255120,-4.239351,-6.023827,7.441080,5.036232,3.873897,9.095796,2.331636,1.262558,-9.930142,9.305649,-4.902628,9.422557,-8.126518,-6.079794,-7.902065,-9.410125,-4.079281,6.211275,5.062482,-0.717994,-2.452214,9.001359,-6.902765,-4.818869,-1.493608,5.135476,-0.277832,-8.716615,-5.853898,-6.018081,-1.526183,6.153481,4.579515,-8.466033,6.064573,-5.465219,4.331246,-7.995287,-0.750280,-8.747430,-2.801434], dtype = "float32")#candidate|3022|(105,)|const|float32
const_3023 = relay.const([[-6,-1,10,1],[3,-3,-1,-9],[-5,-6,2,-1],[-6,1,-6,2],[-7,6,6,-7],[3,4,-6,1],[-6,8,-4,10],[-1,-8,9,-8],[-3,-4,-2,-8],[1,-10,-4,8],[8,9,-8,-2],[9,-7,1,7],[-10,5,-1,8],[6,1,-1,-2],[-7,-10,2,-6],[-5,-1,6,2],[-8,9,-1,-1],[7,9,-1,6],[1,-4,2,-4],[-3,-5,3,-7],[6,10,3,8],[-5,7,-7,-5],[10,1,-9,1],[2,-3,5,7],[3,1,-1,5],[6,-2,-4,-1],[-6,8,-9,-7],[7,9,-9,-3],[4,-10,5,-10],[7,1,-9,-8],[7,10,7,1],[9,-3,-6,3],[-2,-6,-8,5],[-10,-7,-1,4],[10,-5,3,-8],[6,3,2,4],[8,-1,8,-2],[-6,-7,-1,-6],[7,8,9,-2],[-9,-9,-10,-5],[4,-5,-3,1],[3,8,-1,6],[10,-5,10,-6],[-4,-2,-1,-3],[4,-7,4,-8],[-8,-2,3,-4],[-2,3,-8,-2],[5,7,2,1],[9,-7,-6,3],[-3,2,4,10],[6,-9,2,7],[7,3,7,7],[2,10,-9,3],[-7,-2,10,7],[5,10,-7,-7],[4,-4,-6,6],[7,7,6,-9],[-6,6,-3,3],[8,5,2,-10],[2,7,6,-5],[7,8,3,-10],[10,-4,-8,-9],[10,-2,8,1],[7,-7,9,-8],[5,4,7,4],[10,8,-4,-6],[3,-7,1,10],[-3,-5,-10,-3],[-10,2,2,3],[-3,-2,10,-9],[10,-5,-3,-1],[3,-3,8,9],[-4,7,6,-8],[3,-5,-1,-7],[2,10,-8,-4],[-8,5,4,5],[-6,1,-2,-2],[-2,9,3,2],[7,-1,-4,5],[3,-9,-5,-2],[-7,-2,6,6],[-1,9,3,9],[5,7,6,-3],[-4,-5,-7,2],[4,2,10,-7],[-5,4,10,-9],[5,6,8,2],[2,-2,6,10],[8,1,-4,-10],[5,-8,-9,-1],[3,-6,7,-4],[7,5,-10,5],[-8,7,-3,10],[10,4,-5,4],[2,-10,9,-7],[9,-10,-6,-8]], dtype = "int8")#candidate|3023|(96, 4)|const|int8
call_3021 = relay.TupleGetItem(func_756_call(relay.reshape(const_3022.astype('float32'), [15, 7, 1]), relay.reshape(const_3023.astype('int8'), [384,]), ), 3)
call_3024 = relay.TupleGetItem(func_759_call(relay.reshape(const_3022.astype('float32'), [15, 7, 1]), relay.reshape(const_3023.astype('int8'), [384,]), ), 3)
func_1525_call = mod.get_global_var('func_1525')
func_1530_call = mutated_mod.get_global_var('func_1530')
var_3030 = relay.var("var_3030", dtype = "float32", shape = (975,))#candidate|3030|(975,)|var|float32
const_3031 = relay.const([-3.857785,-6.045454,-5.525122,0.796925,7.572761,-5.139619,6.117328,-9.797027,-6.491138,-0.295599,-4.166882,7.559771,0.601145,7.618092,2.972605,0.469428,-6.170805,4.026911,7.220615,-4.475800,-1.638328,-7.323727,1.120929,-9.487386,4.496105,-3.410235,-2.212122,-5.465649,-0.750044,3.945465,3.025014,9.270422,-2.902737,-3.273309,-3.966978,-9.123298,4.158735,-6.265107,-9.347450,3.988493,7.577902,2.801711,7.423803,6.096394,2.026526,9.282181,3.562435,-5.893348,8.657347,5.061632,3.723098,-2.121804,-7.571639,-5.923310,-6.151437,-9.475009,3.952442,2.451668,-7.202206,-4.909345,2.748753,-9.923357,6.898119,-1.210365,3.644386,-8.935245,-6.225150,-7.135017,9.976552,8.634669,-0.779920,2.332997,4.644182,-9.956813,-3.951467,8.300881,-4.930330,-7.068914,-3.113831,2.892973,5.907148,8.825582,-1.429318,-1.429807,-4.727851,8.142940,-6.025514,-7.403593,-5.154635,1.461673,9.631778,-2.471624,-9.004041,1.548998,-5.606512,-5.932284,-7.520263,3.314729,6.052872,-4.167717,0.049726,-9.144969,2.567678,5.112924,3.344202,-2.828519,4.939522,3.175969,4.990689,-8.709702,4.288938,1.977212,-9.483624,-3.975385,6.752138,8.563855,0.505862,-9.503630,-5.004940,-8.212722,-4.937980,1.572172,7.889600,9.698611,6.461291,-6.372953,-8.881223,9.750368,-5.598105,4.247152,-4.447805,-8.225436,-2.188710,-3.403060,-1.339333,6.084373,9.340316,-1.669433,2.932073,-1.639175,-3.063915,0.880453,-8.332661,1.050095,-6.088273,-5.888221,-0.221584,-3.487670,1.072558,0.527389,7.253425,-2.573722,3.347347,-6.804326,-2.056892,-1.631439,9.672981,-8.326539,-9.838155,5.138901,-3.043853,4.073517,-3.226537,4.032154,2.724954,-4.788915,1.064939,1.073756,2.785516,7.273149,-9.042562,-7.378450,9.745412,-6.473843,9.685886,7.361553,4.912269,-7.642684,-2.466112,-2.204852,-0.313842,2.776794,0.091064,4.521795,-2.763647,6.267906,-2.034231,-0.157543,-9.844902,2.197172,-4.529901,6.882290,5.562089,-1.411070,6.081255,8.835794,1.296448,-1.873179,-6.455806,6.394792,-1.641188,6.787228,7.051158,3.195899,-3.777120,5.024001,8.512381,5.204153,-9.547384,-4.447574,-2.696048,2.131184,-7.323658,-6.274786,0.582127,5.876447,-4.034248,-0.848695,2.493376,9.740480,-6.185310,-3.052250,0.181538,1.982827,8.180821,-6.867966,8.209436,2.350747,4.508526,-4.926363,-8.487234,-2.256745,5.195241,-5.186235,-3.647382,-6.367076,-0.729532,-7.758339,-7.694199,9.421718,-9.214530,6.094106,2.871393,9.196093,4.069842,-8.938776,-6.668831,-9.123272,9.674322,-7.953725,8.956563,1.300929,6.622525,8.664976,5.346244,-3.196644,-3.424978,9.207791,-8.877633,-9.215107,9.047201,7.493933,-6.154710,9.246908,-1.843651,1.941540,-7.043541,9.543825,8.075806,-5.251998,2.239837,-3.488728,-4.941347,-0.143288,-1.597235,-1.953728,8.604965,9.700048,-4.167105,7.764461,-5.859192,-2.981972,0.927346,3.864714,-3.882258,5.255241,-8.123695,-5.695387,-8.088635,9.531588,3.315783,-1.258272,-4.218074,-6.215950,-5.318627,7.906509,7.991225,6.820902,-0.551933,9.548388,-3.725236,-6.329493,-5.583854,-2.407483,0.738866,4.139139,2.202773,1.965558,-9.630059,-3.797978,-5.179969,4.743989,6.595313,-1.248019,2.922493,6.766370,2.141910,-4.575696,-9.123848,-7.842875,8.240666,-8.570295,7.704054,-8.436495,-9.710305,-7.825240,-6.613751,-6.761821,-6.969002,5.525007,-6.191777,-0.914829,6.589087,3.940753,4.268597,8.577346,5.455491,8.888578,-5.031697,-6.280122,6.257777,9.186520,3.873593,0.592067,-2.530219,9.441851,5.838472,-7.969969,6.731718,-9.901374,7.324250,0.853053,-1.805409,9.451412,-0.157337,7.543353,-4.773033,6.312057,-7.126961,-7.101600,-3.762634,5.861809,0.066837,-1.965548,2.814544,8.755583,-1.730198,7.420462,8.771967,6.562793,9.127720,1.541826,7.869475,9.281814,-8.066285,6.946440,8.690735,-9.407740,-4.413114,7.744180,-3.045867,4.895914,9.289308,0.396670,3.040051,-6.125984,3.764832,2.862883,1.082588,-7.421606,-3.590270,-3.442413,-8.712705,-1.629319,9.496413,-6.566930,-1.448550,-0.464992,-9.393523,-0.634343,3.823942,-8.913096,6.957820,7.449118,-8.564293,-1.654352,6.340034,4.239970,2.265165,9.208712,3.674391,-8.433052,6.993393,-0.145458,-7.475256,4.510607,4.513026,-3.584316,8.143333,7.391091,8.195995,-1.056194,-3.423524,-1.533630,5.279508,-5.495078,3.909391,-9.863129,-9.523135,6.710775,-6.383199,-5.351953,-3.229099,-6.399820,-1.811028,-3.832134,9.556577,2.936413,-2.008933,3.318789,0.376060,-5.936740,4.938240,0.139560,5.150577,-7.774957,8.041923,-8.878617,-5.566496,-5.492481,-1.414299,-9.175349,3.597505,-7.462078,-5.305475,-2.705549,3.206380,-9.848266,5.772661,-4.641929,-9.570383,-2.778871,0.244522,-0.372808,0.287870,2.505466,4.027704,1.103780,4.091198,-4.307733,-5.604196,2.547999,3.045080,-2.374559,1.999695,-8.592670,8.334331,1.914732,0.533509,-2.619530,-5.471191,-4.002008,-0.598703,9.759275,2.463711,1.182486,-4.781354,-4.371509,-7.339927,-1.636056,8.161616,-8.001263,-6.854449,-6.791537,0.193137,-6.458828,-5.560141,5.559547,0.355445,-5.350263,-3.213413,-4.804036,-4.647401,-4.775811,9.614903,-6.810323,0.413896,9.470217,-7.768890,6.638247,4.801588,-6.005472,1.835767,-1.879713,-3.680007,4.725280,-0.030900,5.927245,-7.899924,2.523386,-1.292307,2.224046,-8.935419,8.617831,-9.575530,-4.453172,4.058019,7.355448,-3.990675,6.881510,-2.832163,2.037193,-0.435215,1.007033,0.094727,-6.966364,-5.101385,4.876522,-7.776209,5.793046,-6.917102,-2.287006,-8.273627,-6.810929,2.593515,1.029254,-4.862778,-3.050849,4.209665,-5.577971,4.218177,9.658977,-7.201888,-9.735727,5.339954,1.689305,-3.155029,2.080774,8.436723,6.200209,6.081262,-0.198167,-9.334607,-9.063711,-5.699390,-6.343874,3.016133,1.755805,-7.561929,4.026628,3.575077,4.874000,-8.462682,6.956991,-4.984969,1.713782,9.510557,-4.705688,-4.469014,-6.669125,3.005318,-1.930599,-4.978815,-3.375369,-9.522910,-0.511124,-4.819620,7.828835,5.948418,-2.020454,9.935593,7.863852,0.101417,-3.026210,2.098450,-3.079280,4.115971,2.544431,-2.043124,9.281299,8.665640,-2.058029,4.542875,7.881596,-3.153293,4.230943,6.912036,6.652008,-8.761068,-9.005286,-4.458635,-8.054003,-5.266689,7.329872,3.431373,2.382960,-5.197606,-0.565761,0.527744,-9.246297,1.142450,4.875550,6.177333,8.545546,7.257208,6.844898,-8.150142,9.938200,1.893358,7.723396,3.991081,-9.594456,-9.308054,-9.136640,-1.362503,-5.284182,-0.694145,-4.934254,-8.458761,8.895866,6.031573,6.530489,-5.130298,-8.589618,0.947732,-6.809838,-6.826769,-0.858697,3.262068,-6.737552,-2.817162,9.021621,7.193391,-6.015393,4.183659,5.684221,-3.213171,-7.406894,9.345086,-4.633059,-9.416521,-1.257925,4.134675,6.702672,2.444849,-3.733584,-8.825550,-9.032502,1.821986,0.996665,-2.052521,-9.050244,2.018621,4.820450,3.748867,2.228719,-6.942223,0.265315,0.960020,-0.195200,-2.800123,-9.000258,-4.301215,-5.016596,8.515616,-3.542094,-1.450336,-6.063912,4.733255,3.825836,6.648784,-9.957988,-3.597591,-6.039058,-2.801428,-9.721895,7.038940,-5.411527,1.083661,-4.336174,-7.181105,-0.485979,8.813018,4.950731,-5.645360,5.617042,2.223410,6.673475,4.618394,4.687433,-3.968877,5.377782,-0.378359,9.264363,-4.032583,-7.357086,-6.090520,-3.789680,3.635580,-9.124643,-1.250911,-5.224515,2.677859,1.119439,2.645348,-9.647558,-5.875293,3.638132,1.503132,-6.148713,-0.217114,3.121212,4.301023,-3.393080,8.604858,-9.351311,3.758771,4.603108,-0.590838,4.920506,-4.065987,8.541939,1.751482,1.472863,5.230224,4.682453,0.651353,-1.459638,-9.932997,3.896802,0.202876,9.305982,-2.312826,2.252214,1.987897,-2.072675,-0.337869,-4.835591,0.391780,6.193481,1.178622,-7.167991,4.574298,5.549420,-6.915951,1.676229,-9.665443,-7.666452,4.051615,3.844612,-4.756535,-3.411711,6.008747,0.345324,5.554394,1.367043,2.139727,9.908708,-2.049729,-0.865669,1.214273,-3.701603,-6.337844,1.430407,-7.467699,-9.369319,-7.893248,2.079741,4.135852,-7.437811,6.726848,3.592908,-6.965979,3.269552,8.340671,0.511023,2.467605,-4.232436,-9.120078,-2.920876,-1.051643,1.340223,6.893476,-0.716692,8.655996,2.798011,-0.033764,5.173598,0.817272,7.333033,-0.302018,-8.239615,-2.334896,2.439712,-4.986024,6.580722,-0.193598,6.156412,7.637589,-5.439350,8.390300,-5.459148,-3.623421,-1.830096,-4.086724,-0.995195,-8.022932,2.241153,2.266352,0.608131,-0.197086,-0.406203,9.656619,-2.609217,6.580131,-4.760375,7.823702,-3.648360,-1.372005,2.900810,-1.456996,-2.415498,-8.846216,2.421371,-2.190078,4.302776,5.499037,-6.640155,-4.806171,-1.649913,1.507374,-1.970221,0.198734,7.331566,3.844155,-9.096872,-3.466398,-8.990630,-5.720885,8.847297,-9.826501,3.044219,-6.450077,-5.895773,5.021780,2.539106,1.714042,7.395617,-1.810264,6.635978,5.083100,-0.244770,-9.833935,7.970629,-7.387881,3.077615,8.882453,8.005310,-0.349880,-9.917837,-8.139851,6.538540,1.271690,-1.483913,9.492924,7.511514,8.995419,-3.425248,-9.326223,8.119868,-0.142952,7.451690,0.797966,-6.182743,0.296366,6.078346,-0.002432,2.606782,7.949550,2.265165,1.478217,-0.371177,-5.281226,-9.140904,-5.256447,-3.788511,5.138004,-2.314897,-1.816057,-2.361570,-1.909584,1.170082,-0.751003,-4.312782,-6.676741,-6.859930,1.764535,-4.269058,-7.770678,-0.047554,-7.874046,9.483752,4.233593,0.995372,-3.048914,7.302149,1.203026,8.437458,8.570349,-0.912681,-7.466311,-1.583639,2.148838,0.427661,2.751186,-0.445501,-9.604797,0.473163,0.605680,9.345502,4.977002,-0.565986,4.929544,-0.497538,-6.776884,-4.900930,-2.545321,-1.185186,-4.420441,1.412815,1.254900,9.406764,9.254822,0.514135,3.011363,5.079169,2.315600,-4.526132,7.664126,-9.600869], dtype = "float32")#candidate|3031|(960,)|const|float32
const_3032 = relay.const([7.587093,4.885474,3.217975,9.623311,-7.589140,-4.228638,-9.640719,-3.289162,5.991685,-5.327488,-1.654236,1.956414,2.152949,1.279599,8.353358,-9.544559,-1.603560,-9.099034,-2.704793,-3.226411,-4.800505,4.142457,6.948716,4.655962,0.384436,7.708333,-8.645726,0.078473,-4.441415,-0.528613,9.639229,-3.815800,-7.288056,5.069207,2.695781,5.946334,-3.318099,-4.736428,-7.333797,-4.085756,2.560543,3.391252,7.595071,1.757082,0.246263,2.478131,1.129876,-5.981252,-6.283470,-9.539694,-4.424926,9.824815,-3.669218,-8.181589,7.699504,-2.889469,-9.486141,-9.546460,1.435616,-2.005339,6.799016,4.660712,2.911628,-8.615876,9.160095,6.168762,-8.112294,-3.385629,-4.997023,-1.474853,-0.150929,-6.171516,-7.776227,-0.325986,4.227589,6.707360,-4.323412,8.786523,-8.089757,3.952731,-9.057129,2.842191,3.052689,-5.007697,-5.827929,-1.650087,0.311401,-7.036991,6.064273,1.700471,9.276091,-6.210971,7.642219,2.999974,6.470559,1.357283,-8.658247,9.263595,9.007861,0.808478,-3.702890,-8.901181,0.461477,7.185081,4.519598,7.414142,4.546023,-0.752710,0.284599,0.352749,-8.162127,-7.584378,5.568316,-5.457603,5.168613,2.428642,3.584479,-9.243848,-1.124983,-5.818053,-0.249903,-8.466172,4.444782,3.597372,-7.659636,7.372968,1.528220,0.083357,6.797200,4.939828,-8.222819,-3.089236,-1.775400,-3.603101,2.978082,-1.476290,-6.144167,3.918853,3.232258,-6.844514,7.725480,-4.348501,5.741468,-9.491898,-7.740731,-9.486696,-0.746639,-5.989192,4.714527,5.226021,9.655037,-8.163417,-6.280116,3.298961,-0.013637,1.455873,-4.290696,1.741840,-6.908314,-8.765844,8.592699,1.148536,-1.248707,5.893278,-2.146581,-6.527486,-2.825094,2.150726,-2.432864,6.980325,-3.021122,2.430460,-2.844848,-7.380940,-3.812311,4.456511,5.066944,3.956461,1.525155,7.103495,8.511299,6.508800,6.755436,-3.189220,-8.305148,-5.083719,-5.619772,4.357632,-3.477177,6.196126,-8.582384,2.072094,9.229765,8.050879,3.591012,-6.368215,-1.440010,-7.446246,-9.192613,-5.825847,-9.388194,2.102995,-5.879540,-0.251440,0.144358,8.852029,-8.372242,7.370986,2.088583,-7.901574,-8.418302,7.029929,0.149639,-1.042990,-8.454832,-0.170386,5.293816,5.899022,-0.033654,5.901272,-2.024750,3.495069,7.324583,-7.092908,-5.032553,2.209619,-1.045919,7.169704,-8.555373,5.583122,-7.902025,-1.568382,-3.861073,5.017413,4.724312,-6.822478,0.293163,-3.888602,-6.909494,7.383594,-6.856523,7.011985,3.120593,-5.289271,-0.648950,-0.451396,1.056445,4.078940,0.369178,-3.371274,3.565927,-6.096224,-3.863931,4.716183,2.890297,2.072968,9.052696,-8.129036,-4.585126,-5.171952,2.808880,1.509388,1.714537,-6.172791,-2.663349,6.668992,5.221156,-6.244349,1.049802,-5.988516,3.986280,-3.053657,3.528370,2.432660,6.242495,-2.592484,8.817618,4.787006,-6.646155,7.356261,-6.349672,-3.659301,-0.284014,1.827556,-9.991127,-1.914736,-0.209717,-7.244717,-7.064936,5.975257,-6.362330,-0.896611,2.437243,-8.785560,6.926529,-3.988924,8.407336,8.014101,-8.193496,1.487637,-9.258107,-8.659283,-7.026592,-9.491121,-5.184875,-0.735200,-6.905045,-3.405171,-1.808021,3.043432,-6.346697,0.027751,3.480805,0.386623,6.523359,-2.865532,2.060049,-8.390093,-1.040149,-5.123173,-0.573830,3.311356,1.706114,2.608949,-5.184371,7.473056,-1.006262,-3.754093,9.743690,1.736583,-5.229766,-2.457848,-4.619655,5.034826,-1.516283,-4.925392,-9.323108,4.481370,1.798191,6.313407,7.805771,4.287672,3.249215,9.877204,1.061337,-0.474317,0.301849,8.423554,3.819031,-6.840838,-3.528142,7.557886,-7.541623,-1.809515,2.912108,7.032853,-9.158338,-4.229692,1.333024,-3.019089,4.825517,-1.392201,-5.861325,-9.120905,2.854391,0.801383,0.650008,-8.628155,1.299960,-6.168866,2.206959,4.042768,-5.372957,0.205628,-7.261705,-0.140024,-3.138365,-0.524316,7.290599,7.809540,0.543026,-5.453300,6.882037,-6.182671,-4.165801,3.012127,-7.910010,4.216913,-7.758687,-9.896100,9.867147,-8.276957,-2.563662,-9.692794,-9.025958,-8.295960,-9.496278,-1.293012,7.816416,-8.726176,6.839775,0.783282,-7.390309,-3.341062,-3.589346,1.464644,-5.715478,3.034892,-4.002896,-4.203859,9.619616,-3.295613,7.232111,5.583769,3.970695,-6.413267,3.563929,9.863317,9.298543,5.255557,-8.345732,5.374896,-8.386949,9.917281,-5.462304,5.002055,-0.687453,2.473972,6.766798,6.093025,-9.795752,5.483274,8.541407,3.019705,0.683391,-8.065542,-0.907865,-4.112715,4.897011,3.220837,0.196985,5.618619,3.174554,1.664691,-2.012848,2.583928,3.536193,-4.430109,1.056147,3.094715,-8.753242,5.050942,9.520096,-9.277857,0.674852,-8.246854,-2.196237,9.605562,-2.676155,-4.275705,0.357026,2.636459,3.580260,7.661397,8.690471,7.375223,5.388484,-9.804553,-8.450662,6.757226,0.612369,-8.216028,5.648067,2.703389,-9.102429,-3.724038,2.511140,-4.369775,-9.231364,-2.992430,-0.456249,5.352237,-9.168955,-8.622069,-5.671505,-6.505922,6.101882,-0.889550,-2.776055,-6.790167,1.789663,-0.985226,-2.234564,6.360731,9.646280,6.546275,9.472569,6.596410,-8.497065,-6.279670,8.780319,-1.539147,2.699514,5.097344,-2.083689,6.397405,4.833061,3.207750,-2.431300,-3.936342,-0.007450,-4.388475,-8.834886,8.912139,0.129796,-0.209647,-0.019456,-4.695285,6.626528,-3.912032,2.231795,8.774618,1.447334,1.880146,-2.890841,1.448015,0.864787,-6.258556,7.362287,-3.178871,-2.561157,7.364634,-5.119737,-8.792195,-5.976358,9.724972,-9.793135,-2.935120,1.835646,-5.595919,0.106914,-7.194575,0.823159,-8.777475,-1.339434,4.385060,8.697473,-8.869049,-0.303479,6.815461,4.686443,5.747454,-3.356680,2.284099,8.431358,8.431416,-7.872489,5.180723,-4.105114,-3.615439,-9.603324,2.916758,3.311805,2.560949,0.979248,-3.061645,-2.940496,-7.101500,9.889229,-3.048715,2.005102,5.864378,-5.204217,9.583459,-1.384518,1.466977,-2.037349,8.550485,-6.948353,5.999574,9.541098,-1.589690,9.612803,-9.564554,1.369261,9.058436,-1.519215,-1.082132,2.567296,-0.783232,0.551317,9.098618,-9.326548,7.279236,4.954205,-4.035699,-8.472460,-3.854642,-5.749400,-5.017952,-0.998092,-7.057966,-0.547510,2.377441,3.682057,-8.338824,3.718487,-5.349962,-6.145980,5.123418,-2.003541,-0.930291,-3.307286,3.111946,-4.969563,-1.796709,3.413009,7.862358,9.579478,-8.553974,-3.206444,-0.031259,-2.850834,-7.410456,-7.158339,-1.329179,4.751307,-7.679002,-8.543413,-1.861536,0.154430,5.854206,-9.265203,1.388646,1.131900,-4.489959,-0.313862,1.689475,9.918798,7.998159,0.888261,-3.548325,-2.784029,1.998799,-7.863345,0.115913,-9.767553,9.720302,-4.175807,4.829538,-7.721327,8.016489,-0.749827,8.538750,-3.848358,6.044716,-5.608092,7.400892,-1.227768,7.159298,-5.085516,5.765713,6.053856,4.216495,1.173650,4.642422,-8.818777,-3.404295,-9.882321,-6.987184,-1.550277,-3.141504,-8.412208,2.506467,-4.418673,7.177646,-2.440370,-4.457362,2.916440,2.123854,-4.640893,-2.665927,0.109166,2.192746,-1.329296,0.198434,8.222467,-4.569156,7.610870,2.472882,-2.072489,-7.372226,9.893016,5.439823,5.947222,2.160589,4.446247,-4.599789,-0.906822,-0.808696,-5.399946,6.942543,-4.862329,0.101784,1.686909,8.054037,7.898273,-7.019450,-6.936035,-6.363149,-4.656831,8.818540,0.665526,2.376700,4.511213,8.759819,8.604613,-8.089177,-3.994765,6.412277,-7.696551,7.990315,-2.898386,-1.891437,9.163245,-9.050354,-1.205788,-9.953588,-2.717307,2.011349,2.431799,0.895111,2.178425,-9.270008,4.963878,1.158648,1.598057,0.077016,4.781291,-5.089872,-0.407526,-0.427897,2.252351,4.091933,-2.406625,6.964153,7.718100,-1.023005,-1.246526,-2.995965,-0.278608,4.669025,-3.797276,-0.163353,-7.183749,1.013590,6.126849,0.876855,-3.727895,-7.113581,7.252736,-9.327405,-5.613611,7.720395,-3.152819,-3.950253,-6.332456,-4.496652,7.072213,-2.192864,1.408995,-2.502612,0.163960,8.759065,-3.829568,6.608286,-0.381597,-4.688625,-8.373731,2.135085,7.805541,-5.227342,-5.747801,0.349881,7.753136,1.074562,8.897265,4.632756,-5.767722,-3.412670,6.309877,-3.480133,3.492640,-2.803658,6.091477,-6.210354,-4.509754,-0.904300,7.564119,-7.159690,2.234239,-9.870662,3.127748,0.998916,-4.040444,4.695188,0.550744,7.094314,-7.932133,8.596465,-2.098697,1.755413,-0.848288,0.323473,4.658028,-0.269799,1.490113,4.129827,-4.963844,-0.526834,-8.955575,-8.055357,-2.345880,-4.553153,-2.373620,-7.073737,-1.062684,9.872014,4.789082,-0.481333,-0.300870,4.379208,4.857020,-1.786675,1.262703,9.171411,-4.202403,-9.200082,7.766395,-7.161775,-7.012797,-3.511242,-6.067629,9.501990,-8.213619,-8.637851,-1.504295,4.147183,-0.685114,8.509930,-0.851824,8.986349,7.696082,9.751852,-4.112430,-5.951225,-9.867929,7.023118,-9.481574,-4.721841,7.425868,3.199310,-7.129833,2.065911,-3.946107,6.774984,1.278463,-8.597427,-5.200600,-3.185525,6.001134,9.221021,1.151238,-7.139682,3.455440,2.309528,4.970491,-4.802125,9.059525,-7.554785,-2.917742,-8.213274,-4.401463,-6.506817,7.039119,3.615171,8.760060,-9.425671,-1.277202,-6.043849,-0.529194,-8.613496,-0.874532,2.776367,-8.584782,-8.136510], dtype = "float64")#candidate|3032|(896,)|const|float64
call_3029 = relay.TupleGetItem(func_1525_call(relay.reshape(var_3030.astype('float32'), [13, 15, 5]), relay.reshape(const_3031.astype('float32'), [960,]), relay.reshape(const_3032.astype('float64'), [896,]), ), 0)
call_3033 = relay.TupleGetItem(func_1530_call(relay.reshape(var_3030.astype('float32'), [13, 15, 5]), relay.reshape(const_3031.astype('float32'), [960,]), relay.reshape(const_3032.astype('float64'), [896,]), ), 0)
uop_3036 = relay.asin(const_3032.astype('float64')) # shape=(896,)
uop_3048 = relay.asinh(uop_3036.astype('float64')) # shape=(896,)
uop_3056 = relay.atan(uop_3048.astype('float64')) # shape=(896,)
output = relay.Tuple([bop_3006,call_3011,var_3012,call_3021,const_3022,const_3023,call_3029,var_3030,const_3031,uop_3056,])
output2 = relay.Tuple([bop_3006,call_3013,var_3012,call_3024,const_3022,const_3023,call_3033,var_3030,const_3031,uop_3056,])
func_3059 = relay.Function([var_3004,var_3012,var_3030,], output)
mod['func_3059'] = func_3059
mod = relay.transform.InferType()(mod)
var_3060 = relay.var("var_3060", dtype = "bool", shape = (8, 10, 14))#candidate|3060|(8, 10, 14)|var|bool
var_3061 = relay.var("var_3061", dtype = "float64", shape = (96,))#candidate|3061|(96,)|var|float64
var_3062 = relay.var("var_3062", dtype = "float32", shape = (975,))#candidate|3062|(975,)|var|float32
output = func_3059(var_3060,var_3061,var_3062,)
func_3063 = relay.Function([var_3060,var_3061,var_3062,], output)
mutated_mod['func_3063'] = func_3063
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3193 = relay.var("var_3193", dtype = "float32", shape = (11, 8, 1))#candidate|3193|(11, 8, 1)|var|float32
uop_3194 = relay.log10(var_3193.astype('float32')) # shape=(11, 8, 1)
func_756_call = mod.get_global_var('func_756')
func_759_call = mutated_mod.get_global_var('func_759')
const_3201 = relay.const([[-0.381696],[1.224550],[6.385373],[-3.260316],[-5.727716],[2.440827],[3.352603],[8.925555],[-6.908288],[4.150385],[4.433371],[-7.524129],[8.132300],[-3.001501],[6.634413],[2.570737],[-2.353391],[2.167726],[-2.331180],[7.424729],[-1.760457],[0.567925],[3.343514],[0.042998],[-1.979465],[1.343592],[-8.486918],[-0.422641],[8.250953],[7.140481],[-6.616392],[-8.953173],[-2.338522],[-6.552195],[3.225222],[2.724456],[0.577579],[-5.113549],[6.357775],[-6.571435],[-6.601114],[1.307676],[-6.012890],[-8.449622],[0.744052],[-9.378330],[-7.757503],[-1.843631],[9.825557],[0.010795],[-6.156258],[-5.240235],[8.142894],[-0.941891],[-7.735159],[-5.422200],[-9.543704],[8.052748],[-7.252237],[5.916389],[-8.248861],[3.496672],[-0.905899],[5.552748],[-8.894917],[2.224103],[9.389565],[-6.848399],[-2.516213],[-6.304988],[-4.114456],[4.199959],[-3.720688],[7.503733],[-0.403525],[-5.007831],[-9.884320],[6.878649],[5.823325],[-5.511794],[2.492913],[-3.219597],[-5.497475],[-6.340861],[9.648007],[3.133298],[9.701752],[1.331752],[-6.904681],[-1.237391],[8.536314],[2.764598],[-1.698048],[-9.449103],[3.513512],[-4.949966],[-7.630086],[2.514483],[8.368704],[6.028355],[-7.780331],[-1.568299],[9.270570],[-8.230459],[-5.039410]], dtype = "float32")#candidate|3201|(105, 1)|const|float32
var_3202 = relay.var("var_3202", dtype = "int8", shape = (384,))#candidate|3202|(384,)|var|int8
call_3200 = relay.TupleGetItem(func_756_call(relay.reshape(const_3201.astype('float32'), [15, 7, 1]), relay.reshape(var_3202.astype('int8'), [384,]), ), 0)
call_3203 = relay.TupleGetItem(func_759_call(relay.reshape(const_3201.astype('float32'), [15, 7, 1]), relay.reshape(var_3202.astype('int8'), [384,]), ), 0)
bop_3205 = relay.not_equal(call_3200.astype('bool'), var_3202.astype('bool')) # shape=(15, 7, 384)
bop_3208 = relay.not_equal(call_3203.astype('bool'), var_3202.astype('bool')) # shape=(15, 7, 384)
output = relay.Tuple([uop_3194,const_3201,bop_3205,])
output2 = relay.Tuple([uop_3194,const_3201,bop_3208,])
func_3209 = relay.Function([var_3193,var_3202,], output)
mod['func_3209'] = func_3209
mod = relay.transform.InferType()(mod)
var_3210 = relay.var("var_3210", dtype = "float32", shape = (11, 8, 1))#candidate|3210|(11, 8, 1)|var|float32
var_3211 = relay.var("var_3211", dtype = "int8", shape = (384,))#candidate|3211|(384,)|var|int8
output = func_3209(var_3210,var_3211,)
func_3212 = relay.Function([var_3210,var_3211,], output)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3286 = relay.var("var_3286", dtype = "float32", shape = (2, 13, 13))#candidate|3286|(2, 13, 13)|var|float32
const_3287 = relay.const([[[-9.656776,0.606549,-9.028386,4.017117,4.284979,-1.831793,-9.313260,5.698207,-0.893647,7.729033,-2.476081,1.955068,1.448152],[7.472604,0.385256,7.767631,2.010803,-4.157357,-9.700618,-7.194514,-9.367756,2.141063,0.546884,-8.624530,-0.286477,4.111926],[6.644658,-0.930856,6.479835,1.439993,-4.525049,-6.351837,3.429372,6.715682,8.429502,-1.460828,0.716164,-3.407493,-3.635840],[-3.756079,-3.853997,-7.549176,-0.731540,-0.025822,-9.939042,-2.447787,-7.214223,-0.168138,6.998912,-0.684663,4.250244,1.840131],[-0.240692,-8.532546,-2.602884,0.302944,-0.109459,7.217982,-6.533480,-6.213388,2.943437,3.911014,-2.123355,9.323252,6.502851],[-9.111815,-1.068711,9.701319,3.179448,-0.024231,3.695499,-3.789132,7.779627,-2.009612,8.268662,-0.526435,-5.038997,-0.164583],[-8.675215,-2.431958,1.591946,-0.201109,-8.199252,-2.259895,1.121678,-1.019719,-4.539177,-2.380925,-7.573031,2.247771,-2.009974],[-8.764707,8.711735,2.086280,-7.159089,-5.435500,-5.803990,-3.425076,-9.822476,-9.513141,3.963947,-4.881608,5.681901,5.335636],[-0.966363,5.580933,-1.142632,5.071852,-9.367627,6.275873,-3.065159,9.860967,1.167736,-7.584517,-3.323217,0.130418,5.055769],[-5.072114,9.281454,-4.899570,-8.431617,-1.720932,6.189829,3.308494,-5.257178,-9.137172,-0.897074,0.807019,5.594056,1.393574],[-0.068475,4.581585,4.266262,-9.639877,7.100131,-7.961157,-7.578559,7.118503,-4.088646,4.392641,0.558947,8.486784,8.982999],[6.914877,-4.872057,3.696625,-4.491930,-6.644772,-3.405432,-7.581903,9.500671,3.864656,8.698151,4.491382,9.210509,-4.103694],[8.970506,-5.299279,-2.784414,0.932365,2.921549,8.276499,-2.841663,1.413607,-8.428164,-4.286360,-3.520016,2.416946,-5.436693]],[[0.868113,4.423013,1.080558,3.390805,-8.864334,4.129744,7.015335,-2.649921,-4.222601,-4.398397,7.965437,7.225399,3.531097],[0.091564,2.782589,6.445587,-1.469454,-3.105920,0.085407,1.788350,7.591156,-3.488586,7.763345,4.072528,8.540792,8.895696],[-2.424913,-4.938175,-0.302483,-7.732012,-6.756065,-8.280449,4.825278,-1.033709,3.799182,-2.134834,-9.383673,5.623048,4.730022],[-0.661908,-5.002385,3.450297,-0.124143,-9.154388,0.011959,6.724039,5.565676,-6.377151,-3.445035,1.323510,8.825531,1.503208],[-7.548047,3.780454,9.436283,-4.639372,-9.243220,9.522219,-8.704314,5.511949,-7.902870,7.765576,4.905391,-1.188430,-4.827902],[6.137742,6.560977,2.517784,9.661282,6.714009,-7.469959,-2.867543,4.691847,-0.897902,-1.210192,-4.228442,-1.753765,-4.036998],[7.227923,3.642799,-6.770746,9.607355,1.756532,-3.269252,-4.767212,-0.626037,4.460840,2.123740,-7.482691,-5.294186,1.519075],[7.348883,-1.964720,9.787050,1.182781,8.758422,3.156548,5.948921,-6.260842,9.654409,-5.184793,5.633432,2.561058,-5.595769],[-0.540665,-9.017866,7.177818,0.827043,0.338246,-4.157624,-1.737452,-6.052525,-0.066302,-9.479408,6.744529,9.217426,4.913140],[-8.985825,0.201080,-7.437546,1.394360,-6.613833,0.899591,1.604227,-5.118942,5.026671,0.002493,4.615980,2.703168,-3.448268],[6.551600,-7.387320,5.916588,9.190561,-4.459254,-2.291135,-8.468670,-3.734232,8.091699,-4.467349,7.988175,-6.776770,-3.242292],[4.532435,9.210746,-0.819530,9.480639,-4.092201,7.876292,-2.344628,1.348869,-9.905207,5.785963,8.266282,-0.005385,-5.103107],[2.483742,-9.742346,-7.059496,-8.473558,-1.786379,0.681595,4.160863,-4.284952,8.428583,-5.862254,5.089474,4.713133,-5.575274]]], dtype = "float32")#candidate|3287|(2, 13, 13)|const|float32
bop_3288 = relay.divide(var_3286.astype('float32'), relay.reshape(const_3287.astype('float32'), relay.shape_of(var_3286))) # shape=(2, 13, 13)
bop_3291 = relay.less(const_3287.astype('bool'), relay.reshape(var_3286.astype('bool'), relay.shape_of(const_3287))) # shape=(2, 13, 13)
uop_3307 = relay.cosh(bop_3291.astype('float64')) # shape=(2, 13, 13)
var_3310 = relay.var("var_3310", dtype = "float32", shape = (2, 13, 13))#candidate|3310|(2, 13, 13)|var|float32
bop_3311 = relay.minimum(const_3287.astype('uint64'), relay.reshape(var_3310.astype('uint64'), relay.shape_of(const_3287))) # shape=(2, 13, 13)
const_3325 = relay.const([[[6.872040,-0.786758,7.008797,2.750232,-7.508225,-5.910480,-3.448962,2.308193,3.344984,4.989603,-4.027644,0.583532,-1.339537],[-0.603410,6.234594,-2.873824,6.777031,3.754546,1.945701,-3.955023,9.242316,-6.085689,4.455157,2.222624,3.945769,6.483981],[4.991814,-8.973092,2.346310,6.441789,-4.550539,-3.270839,3.162076,-7.015625,-3.009626,-3.472403,2.306777,8.506853,-8.977094],[-4.418586,-2.162453,3.921543,-4.369654,6.249548,-3.698992,-5.486314,-5.410266,0.304429,-1.786172,-3.586331,-7.529580,-5.973890],[-3.889126,-8.912067,1.292113,-7.579216,-5.206468,8.806989,4.018862,-1.705189,1.434379,-7.122692,7.449515,9.868026,3.124485],[-5.641635,-8.179201,-2.750713,8.581576,1.139480,4.460128,-9.276599,-4.074224,-9.532156,-0.161643,0.546360,6.679971,8.056823],[0.509304,-7.605085,9.380741,-7.121303,-8.988569,-7.471796,1.445923,-2.453248,2.309527,-9.276991,-0.158675,7.513478,-9.353587],[-8.248290,-5.399336,-7.588378,0.044301,-6.868300,-4.017777,-5.949342,2.148990,-0.234097,2.461864,5.771426,0.941766,-0.640108],[-6.149489,-5.216440,-1.582769,-9.371238,-3.361983,9.697687,-6.425646,-5.245534,-0.867263,3.225151,5.686102,1.539626,-9.865984],[8.499243,-5.008393,1.940642,0.993851,9.054118,-7.084296,-9.008317,3.606683,-9.570369,-5.590056,-6.566084,-8.730904,-5.068104],[6.508630,-7.708962,7.685983,4.580687,1.157125,-0.192130,-0.372399,-6.087676,-8.915126,6.632321,-8.169837,0.444787,0.074595],[-2.331032,4.112316,6.026018,-6.648220,-8.886530,-8.509744,9.192765,-5.437727,-7.618861,-8.026531,3.306933,-0.753221,-6.625796],[3.937044,3.899738,8.679113,-5.093556,-9.939229,6.613842,0.186713,-6.279867,5.438753,5.643544,-4.103004,-3.983598,-4.580303]],[[3.350302,-0.037648,-8.858712,3.961179,-7.426733,5.037399,8.772447,9.371970,-6.791196,-0.139435,-9.787544,-7.859362,0.636693],[9.154238,3.789401,9.443513,-3.723320,-2.846061,9.489694,-6.608502,-8.987521,-2.405000,-6.487576,-8.117160,-4.032890,3.312565],[-7.007963,-4.829099,-4.320510,9.443678,-9.789333,-8.071315,4.221004,8.035690,-3.874364,-9.340082,6.864328,-1.986630,-4.137681],[-0.238322,0.168011,2.450061,0.783421,1.658567,-3.102134,-7.864523,-5.694776,7.023074,1.486517,-3.999081,9.971802,9.542745],[-2.466334,-3.504248,-8.272408,6.642116,-9.747546,-2.234795,9.074021,-1.765388,-3.612203,-8.909101,8.956883,-7.102280,-9.051910],[0.645871,-0.068836,-7.199750,-5.720815,4.445538,2.216937,6.783466,-9.574122,5.183959,4.182953,0.126104,-8.114803,-3.013801],[8.407448,1.800432,-9.174790,5.776552,3.855954,9.723551,-9.258273,-7.864395,4.515440,-5.550532,1.629037,4.583600,0.949471],[1.856503,-1.121324,6.931677,-9.722381,0.457423,7.636288,8.526865,-7.451339,8.010450,-0.206307,-0.872663,1.967114,2.618481],[8.315421,9.738898,7.853999,-7.007822,6.466214,8.814853,-2.111984,-9.285049,-6.250440,-7.245525,-3.878820,9.411867,-0.724060],[-3.514592,-0.410178,-9.453513,5.650150,-9.800286,-1.921302,-5.487517,7.022669,-3.167723,8.665754,9.902828,-1.790378,-6.655195],[7.178154,6.627322,-6.535283,9.899176,3.841569,-5.560492,-0.606742,6.269764,5.566082,-4.819119,-0.437937,0.071339,4.093388],[9.747447,-8.943041,-0.071537,2.456167,1.186682,8.428126,9.681318,2.087934,1.140547,-1.744877,-3.119450,7.582098,-8.410685],[8.444950,4.226161,5.704574,7.448395,-2.010236,5.428937,1.933884,5.169211,-8.926046,-4.368021,-7.039525,2.144765,-0.761004]]], dtype = "float64")#candidate|3325|(2, 13, 13)|const|float64
bop_3326 = relay.bitwise_xor(uop_3307.astype('uint8'), relay.reshape(const_3325.astype('uint8'), relay.shape_of(uop_3307))) # shape=(2, 13, 13)
output = relay.Tuple([bop_3288,bop_3311,bop_3326,])
output2 = relay.Tuple([bop_3288,bop_3311,bop_3326,])
func_3329 = relay.Function([var_3286,var_3310,], output)
mod['func_3329'] = func_3329
mod = relay.transform.InferType()(mod)
mutated_mod['func_3329'] = func_3329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3329_call = mutated_mod.get_global_var('func_3329')
var_3331 = relay.var("var_3331", dtype = "float32", shape = (2, 13, 13))#candidate|3331|(2, 13, 13)|var|float32
var_3332 = relay.var("var_3332", dtype = "float32", shape = (2, 13, 13))#candidate|3332|(2, 13, 13)|var|float32
call_3330 = func_3329_call(var_3331,var_3332,)
output = call_3330
func_3333 = relay.Function([var_3331,var_3332,], output)
mutated_mod['func_3333'] = func_3333
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3432 = relay.const([[[2.851210,-4.533185,-4.830286,6.874555,4.033877,8.899782,6.002433,-5.832780,-5.860379,-9.015896,-3.562447,-9.524887,-4.648835,4.376746],[-0.696505,6.836085,4.430267,-3.367329,-7.647534,3.563366,5.255943,-1.974475,8.966467,6.379765,-5.732221,-8.756362,-3.714042,3.983035],[-1.057980,-4.563979,-5.227673,-5.710923,8.828417,3.550324,2.051266,-4.968723,3.693042,3.047054,2.948093,-4.165329,-7.474914,-3.939752],[2.788437,3.110029,0.694546,7.116174,-9.640630,0.398326,-7.750998,7.397880,4.868944,-2.831425,-1.506568,-5.017688,-8.645077,8.152162],[5.697968,-0.812078,7.990469,-6.731932,0.187238,-5.718507,-2.265938,4.377485,-4.405287,-1.105241,-1.132567,7.627093,-7.878754,6.943926],[-8.472289,5.801701,-9.779180,9.844511,3.893093,-7.519655,6.814638,-6.045859,-2.007932,-3.880231,-7.910940,9.199621,-7.176868,2.328574],[-6.363210,6.695467,7.318770,-3.775716,-7.006130,-1.311143,-5.411237,-7.452313,2.527468,1.609081,3.089507,4.558171,-6.416621,-7.963922],[8.616419,2.792863,-7.480291,-4.114168,3.125561,-5.306978,-7.231756,1.201325,9.658236,-3.563468,8.797665,1.861707,-1.711905,-1.164439],[3.751222,7.530400,9.105540,-2.425971,2.800370,7.005245,7.652735,1.128311,-8.058980,-6.122189,-1.999265,1.290256,-6.351179,-9.857562],[9.414589,2.098013,-2.571242,6.313611,2.464281,7.986888,-6.710676,4.309000,-6.697261,-9.500402,-1.933924,7.293308,8.099119,-2.303196],[1.951244,-5.625347,6.866241,6.160810,-8.720081,7.192897,-3.136013,2.372100,-9.354814,-5.837432,0.604192,2.234937,-5.089626,-3.788624],[5.072207,4.271034,-2.322555,1.223516,-3.298032,8.273595,1.343093,-8.275028,5.176991,0.994611,3.709274,3.731601,-9.321293,-8.263297],[7.198568,-9.604833,3.348322,9.226100,-0.639999,3.851610,3.523184,6.385397,-8.952832,-6.727950,2.378102,6.854719,3.122539,4.288259],[3.211601,-2.928501,1.835850,-9.955021,3.846330,-9.286204,-9.319560,-3.457832,-3.748951,1.672807,5.407788,-0.684992,2.938879,4.595622]],[[-8.196613,-0.328102,-1.138761,-6.191538,2.625630,-8.534724,-0.917348,-9.726658,0.651502,-8.768822,1.287820,-5.057358,9.211050,7.926630],[-3.903629,-3.029785,-8.443794,-4.881722,3.891565,-0.551727,4.027089,2.392995,5.930091,1.804073,-2.502296,-4.380182,3.737926,5.367639],[6.936393,8.221148,6.948556,2.584768,-7.359392,0.730616,-4.933130,-0.111846,-9.711915,-8.447916,-3.913353,-0.612320,0.363627,-3.385572],[9.103627,-1.783208,-9.472414,-0.848913,3.349055,2.108978,-9.213661,3.326900,-2.264771,-2.264296,-5.904449,-7.178631,-5.115994,9.672999],[0.141851,-8.090851,3.368049,-3.706634,-1.694986,-1.872109,-6.719128,8.737768,-2.788138,3.755847,6.225488,8.907383,-6.277904,-8.586475],[8.359971,1.321981,3.876788,5.562158,-6.921456,-9.950044,3.769658,-0.397763,1.160088,-4.862633,-2.297629,-1.737013,7.727969,1.369829],[-6.904402,6.950656,-5.309513,-7.988864,-7.316927,-1.686849,8.427059,-6.625373,5.271474,-2.284924,-9.252894,-4.388977,7.110750,-8.402021],[4.780432,-4.192518,5.267510,0.790622,-0.925029,4.646122,4.529673,4.463590,8.462100,3.331088,-3.267446,0.313541,-6.807544,-5.166489],[-4.646364,4.066547,-6.500545,6.854185,1.844876,2.770669,5.570063,-6.559678,7.647512,5.138991,1.634558,1.512269,8.544550,8.895683],[1.937616,2.294529,-8.982414,3.847951,-3.239449,5.925295,6.911847,-5.198505,7.882574,1.723909,-0.861238,1.526929,-1.414431,-6.051264],[9.176715,0.678678,4.035381,9.899996,4.172192,-9.225024,9.169796,4.094044,4.549677,8.536648,6.741740,4.532295,-4.960346,9.522277],[9.118497,-4.272196,1.550956,3.254054,-0.794902,4.000238,1.241654,8.762086,1.361380,9.650914,-0.043226,9.406698,-2.074294,-5.210824],[-7.806596,6.418701,1.687752,-6.768483,0.026147,9.479544,-3.624670,-7.721388,-8.616374,1.619007,-0.196388,-2.548413,0.347359,-4.688246],[-9.203556,-5.827285,2.765736,2.776182,4.581540,4.181398,0.040439,-8.127479,5.367753,-9.091270,6.452768,6.942349,-1.098628,-6.183471]],[[-4.215430,2.137155,4.621524,8.281184,8.228695,1.681065,-7.759514,-6.461612,8.971739,-9.775571,5.965117,9.110263,-6.810121,-9.693258],[-8.973633,-8.590680,-1.409697,-9.717705,-3.289387,-2.833357,-0.126395,-6.148821,-9.768900,-5.114695,-8.689385,9.710988,5.641987,-6.962327],[5.840780,3.254357,4.047421,-4.300909,0.255478,-3.832003,-5.895996,-1.650300,-3.725821,-2.742229,4.680701,5.218606,2.713089,4.373837],[7.079718,-8.439792,-8.102106,-5.242340,4.043856,3.117183,6.152288,-8.488689,-4.391729,-5.838187,-0.792844,-6.202610,-8.767861,2.497040],[-1.529398,-6.168574,-4.040966,-7.857786,-7.458078,-9.671975,-9.070489,4.173717,5.477139,0.815890,-0.801400,0.853920,-7.034754,-8.549335],[1.662772,-8.979447,-0.269741,9.733939,5.810634,8.743305,-8.993959,-8.030544,-7.316526,2.807973,7.604493,4.520559,-5.759747,-7.737661],[-0.402453,1.716352,-8.603382,9.869995,8.016859,0.013147,1.551615,-9.542789,4.210532,-8.539950,-9.843610,3.234328,-3.929340,9.296782],[0.198365,-2.362992,-8.484343,0.854024,2.029814,9.204593,9.404164,-2.312328,-8.369149,7.873890,5.377915,9.264481,0.047069,7.732760],[9.069779,-3.119722,2.785511,7.700066,8.750511,-4.610515,9.587928,8.767425,8.031180,7.552973,-4.039779,3.686967,-4.275052,-7.175892],[1.439727,-0.483187,-4.504791,-2.198587,0.692084,-1.127228,-4.643309,4.563946,-6.817020,1.335403,-0.359732,6.207108,7.105131,-8.601137],[5.164525,6.549529,4.851681,-5.613587,-2.780062,4.686207,-2.466179,-9.873417,-9.167757,-1.755706,-8.509802,-1.325202,5.155251,-3.069364],[-5.354252,-7.785575,7.364111,6.246543,6.907064,-6.241262,-2.422792,5.067125,2.648805,5.548370,-2.851015,7.273131,5.470646,7.298703],[1.534760,5.061307,4.720522,-5.519076,0.417304,6.445771,8.070767,8.460797,6.337993,-9.608280,-8.977440,-8.032604,4.202598,-3.357301],[-0.649850,7.156016,3.518602,9.395306,0.415981,5.401609,1.056658,4.062667,-8.470739,-2.509771,-7.792035,3.246993,5.053145,3.780791]],[[4.191673,4.753606,9.892706,8.844818,-6.092270,2.361441,-4.603046,-0.659858,4.893096,-7.041172,-3.857215,8.162958,1.046961,-4.361307],[9.764905,-7.040434,9.691849,-9.265668,-1.561961,3.581461,-3.212922,-7.843689,2.736539,2.054430,0.506340,-8.142602,-5.154762,-3.661938],[-7.502894,-7.397862,-4.775288,-0.896535,7.720296,-3.714796,9.714178,-9.509393,7.576346,-8.535277,0.949061,3.826395,-6.451632,3.436950],[-9.299458,-0.484073,-0.862471,-3.432146,1.033982,-0.134969,4.169052,9.955019,-6.232124,-3.159736,-3.702205,-9.030387,-0.780312,-8.183807],[8.566274,-3.374128,5.722479,9.135946,1.347881,-1.867982,-5.373841,0.870093,-6.664246,-2.029766,-7.662039,-7.909109,-0.873229,4.009357],[-2.452762,4.041677,7.365350,0.476247,-2.122611,-3.374674,-9.426206,8.370953,5.457716,-3.922261,7.287941,-4.882238,-7.155339,-6.878030],[7.213348,5.801048,-2.986110,3.533003,-4.259563,-4.870772,0.785538,5.084209,-0.197043,4.744058,6.770652,1.436994,-8.747293,6.457383],[-3.077327,2.520551,9.666282,0.012975,6.215708,5.610856,-5.659259,8.847699,-1.460285,1.073483,0.729038,-7.621113,4.445214,4.600077],[6.078615,-8.115789,-8.632683,7.544777,-2.005091,1.365133,4.966755,-5.852386,9.872011,-9.219881,-3.998075,-5.707998,-4.401972,-0.780696],[-0.708440,5.451802,-9.983713,7.092075,-1.558125,-9.675988,4.224340,-8.824417,-0.962266,-4.973035,-0.244134,0.895755,0.879012,-3.146954],[-7.073212,1.256582,-3.307653,-2.408117,-0.810834,-2.890875,-9.370571,2.122750,-4.260627,6.482036,-2.850973,-6.334649,-3.042257,8.795801],[9.836784,6.764819,8.550826,-8.949167,8.436567,-0.858181,-4.939773,-1.696649,-6.005465,3.324894,-5.017004,0.438093,-7.999602,0.836465],[-7.969775,-1.882987,2.686894,6.559954,-5.249743,-0.760324,6.756249,5.762123,5.988176,-1.598431,-5.253733,3.133265,-8.428262,7.064285],[-8.560448,2.949580,-5.983610,4.523092,8.720351,-3.179930,-6.348929,-3.229950,0.573970,-9.624901,4.239678,-4.752786,-8.570264,-0.085719]],[[0.517548,4.169712,9.581625,-1.408062,9.016114,0.977339,-2.273126,-7.740334,-9.397806,-6.599951,0.065697,0.154960,-1.699460,-3.641553],[1.555479,8.768378,-0.031179,-9.054555,-1.404939,1.531520,-6.323361,-3.005847,-1.597585,-4.813867,0.657115,9.036172,8.025388,-5.914471],[-9.435025,-8.652975,5.869231,-8.363256,-3.445685,1.284785,6.461448,-0.928994,1.803480,2.394492,-7.593540,4.747746,-8.767591,-9.906293],[1.232142,8.828852,6.288395,9.789550,-7.486868,-6.410662,-4.991535,8.563736,5.109404,-3.597986,-4.939670,-1.567202,8.494657,4.007701],[-0.713504,1.409693,-7.897425,-8.326268,-1.812150,-6.529161,8.488177,6.777458,2.976940,-1.216278,6.920423,4.617731,-0.327160,-6.038197],[5.481531,4.903712,8.237935,1.486382,-5.993540,5.947971,1.651453,9.249747,-7.603324,9.238692,0.956911,-3.699307,-2.500558,-1.707695],[-8.580668,-7.577686,-2.697231,2.542756,-3.054293,3.861067,-6.541439,9.247623,9.508724,0.765332,6.334018,8.083902,-9.400866,7.188594],[3.180284,2.045423,-6.112533,-3.294438,0.163250,-1.671016,-3.276220,-3.741667,-4.235452,4.333620,-8.715362,-8.438072,2.846064,-9.845366],[8.371341,-7.404803,-7.014827,-0.484558,1.812340,7.961676,0.805667,-1.670279,-3.948127,-3.213397,-4.857131,-5.173598,-7.463461,-3.986736],[-0.725537,0.305398,8.905132,-4.789830,9.778036,-8.979044,8.207047,-6.501034,-3.878462,3.601409,4.207744,7.601779,8.726292,5.495077],[-8.147487,9.400938,-5.641081,3.553674,-4.214574,5.267304,-6.398591,-1.470009,-0.916125,-8.763172,3.841835,4.307069,-0.998358,-5.441071],[-2.294776,1.126198,8.866268,1.539175,-1.251735,0.019131,-5.076844,-1.121489,7.134312,4.459031,9.391872,-2.932564,1.075320,-0.055601],[-0.824999,4.521200,-7.039883,-1.232098,3.432003,1.226465,-8.490607,-9.028408,-1.157906,7.654592,6.118129,1.324266,7.645701,3.459101],[9.775413,-4.453744,-5.480287,-3.220382,-6.685960,-5.451696,-5.774574,3.342486,1.925681,1.803458,4.177721,2.280722,1.847110,0.357198]],[[-8.220740,3.852364,-2.121646,5.288939,5.838993,6.328523,-6.325130,5.975336,-5.296382,3.133976,-1.015252,3.253540,-3.663258,-4.635444],[0.585826,-6.090133,-1.277884,4.084424,4.593788,3.310150,-2.693729,-3.050002,8.795349,9.518164,7.967006,7.208152,4.871736,1.836164],[5.488816,-9.074887,1.663856,-3.101822,-6.887328,2.390127,-8.732069,9.496201,4.144393,-7.545251,6.985958,-5.282548,-2.982557,3.193182],[-1.615544,6.136924,-8.317474,-0.028339,-5.190864,-7.884759,-3.040210,-8.335008,-5.288893,7.540474,-7.128357,-6.591495,9.994038,-5.731875],[-6.189496,-6.507268,-2.961410,-9.489255,9.140372,-2.116229,5.340275,-8.433353,-9.785199,8.196568,-6.968199,9.372777,-0.129425,3.725562],[-8.468802,7.777652,7.718937,-0.633497,-8.246839,-7.377226,1.682690,9.511968,1.589028,5.438411,6.481050,1.335510,2.727349,-6.959940],[-4.712513,-6.553866,4.140487,-2.250559,2.386795,-7.970159,5.620286,1.183812,9.656254,-3.432406,-7.154189,8.041365,-0.760759,-3.061327],[0.045158,8.252552,-9.486234,-5.853254,2.627533,-1.099282,1.856973,-8.328618,6.256517,-0.170232,5.499559,-4.718872,-9.298410,1.009271],[-3.647385,-4.528894,-2.505635,3.129125,0.522963,-3.850731,-8.460454,7.967127,8.481664,6.036742,3.908551,3.341245,-9.922058,8.366081],[3.837152,5.100930,-1.463135,4.910535,8.989221,5.930085,8.815099,9.860672,-4.571395,1.975388,5.816587,-4.891099,-0.645391,3.773153],[6.595756,2.647439,7.926810,-4.098845,6.940310,-5.825998,5.338498,2.991995,0.612618,-4.985136,-5.223922,5.249661,-1.972868,-4.439271],[7.512440,3.655688,-3.492957,-2.980984,9.483361,4.845684,-1.002602,7.080605,6.754121,-8.084970,-6.153131,-0.379246,4.649990,-7.102963],[-0.632237,-1.444944,-9.646941,-5.049868,4.778330,-2.406173,-3.107031,1.931548,2.888387,-2.415470,8.621982,5.302896,5.799855,-3.810574],[0.405032,5.329368,-6.811314,7.340063,9.102932,4.916601,-3.408549,-2.381454,-6.676105,-0.821063,-4.343871,-1.027557,8.777106,7.482986]],[[-7.313892,0.069842,-9.019674,4.821045,6.452186,8.706767,-6.182528,1.366067,-5.601198,4.586114,2.427182,-8.188312,-0.921293,6.106972],[-8.853344,2.891012,3.772099,-9.794304,0.693418,-5.088445,4.063001,4.063521,-5.270711,-4.853774,-1.933263,0.786776,3.417016,-6.512594],[5.745353,-9.764505,-8.514856,-3.943261,-0.174165,-6.116610,-3.146980,-4.030876,-7.498274,2.433233,-8.591475,-1.416339,-4.233502,-5.515276],[4.236925,5.532418,1.504745,4.527064,0.964331,8.036270,-5.515852,4.795927,-7.118060,-4.584785,-8.791325,7.896252,-3.129985,5.119668],[-2.724008,-6.823130,-6.205458,-2.707943,0.991986,-3.309922,4.781753,6.033056,6.874548,-9.804031,-7.942804,-3.449036,-9.493937,-6.222226],[6.391598,6.112001,5.694170,-5.997046,-7.397394,6.598849,-5.765101,-3.199012,5.157375,1.394986,1.780575,-9.569604,7.884526,-4.706469],[2.459735,-9.447834,-5.524674,-6.582581,5.955481,-2.430527,9.776766,-7.586709,6.490490,7.549065,-4.221461,7.374789,-0.720719,0.451294],[-1.589021,7.127067,-8.499873,2.694095,-1.364374,0.485025,-1.103022,0.593713,8.991738,3.099369,-2.292545,-0.367525,6.806583,-9.119618],[8.458559,9.543300,7.267508,2.624943,-7.823493,1.794536,-1.874752,3.507513,-3.584496,-0.303165,-0.087226,-3.970257,-9.409914,5.014955],[-6.816044,0.013525,6.451782,0.021582,-6.028511,9.497895,3.059088,5.550875,1.282770,-5.030293,0.662881,0.922934,-3.102329,-1.052045],[-9.553277,1.749278,-0.954381,5.696372,9.457981,-4.479175,0.558581,1.441514,-4.120305,1.988260,2.660526,5.809940,-2.064096,-1.116831],[-0.819760,-9.691642,-1.507245,2.843463,-6.747748,-3.992083,-8.822140,0.711372,-1.990190,-6.977216,6.190867,-9.734929,-0.176820,5.775786],[0.281225,5.881922,2.799120,-5.645555,5.021765,-6.279625,-5.658927,-1.201629,7.111350,6.733218,-9.839098,9.140852,8.981039,-9.187912],[8.878093,-7.909884,8.738566,7.130931,5.693446,-5.009434,3.231794,8.502402,1.950208,-6.747348,5.865574,9.594669,-5.382848,-9.274702]],[[-2.929732,8.062999,-3.969963,-6.511163,1.661218,-9.156067,-7.527740,-8.616097,9.067528,8.996919,7.056486,-6.644180,1.139548,-5.708867],[-0.842892,9.285029,5.375258,-1.699370,1.768973,2.263120,-1.906104,7.712242,-4.073316,5.007433,2.872022,-9.633320,-1.590269,-6.035643],[-2.014877,3.065666,9.731535,-3.688399,2.824381,-6.129491,0.203338,-7.258161,-6.402831,-6.498756,8.120134,-3.726684,6.266505,5.042449],[0.029221,6.675788,-9.703762,-2.025260,-9.075489,-7.773944,-5.827133,-7.392369,-9.939675,7.636384,-1.775745,5.341639,8.231623,4.638396],[-1.221197,6.859213,-8.236418,-8.664513,8.423188,-2.185382,3.042402,-6.398896,7.234589,9.073798,5.188151,-4.495471,0.395756,7.914151],[-1.794370,4.406792,3.116789,-8.784708,3.751660,-0.044403,-9.688022,-0.689567,5.830010,9.369233,2.730581,-5.794182,8.438810,4.837317],[-3.986333,-4.854910,2.685228,8.238031,-9.484056,-1.464283,-4.312425,-8.137090,8.481360,-1.923119,8.639523,1.589721,9.368635,4.596484],[9.276295,7.977974,7.628653,-2.792809,9.894335,6.719230,7.182549,8.772618,-5.291174,-7.367480,1.106207,-2.794726,-2.666989,1.232824],[2.854716,7.934425,9.508248,-7.052373,-1.817894,7.188568,0.461500,4.367025,-1.776315,-8.525902,-3.915168,-9.823941,-1.558499,7.005174],[8.740204,-6.460308,7.759915,7.815484,-1.823684,-2.765741,-6.677655,-2.604340,-7.188354,-5.666422,-6.346215,-2.880803,-9.690316,-3.372599],[2.447347,5.052335,8.549261,-9.611793,4.274499,7.255851,3.154667,-1.658403,-2.408071,4.455997,-3.929423,4.318449,1.336607,-3.495948],[3.897589,-9.697215,-2.351312,0.741049,9.111610,-6.208153,7.894935,-8.828733,6.490228,-1.071781,3.164986,3.731498,4.832091,-1.974400],[-4.276628,-4.589425,-8.228910,-4.070999,0.939112,-1.839793,1.573574,0.774774,-5.394492,-0.307295,4.009673,3.151912,-8.636202,-5.710524],[-3.663081,-8.577681,3.114759,-6.119791,0.924436,-2.990774,-8.489778,0.317139,-6.268595,-0.919593,-8.501574,-6.623483,9.812360,-1.983941]],[[-1.910305,2.827481,-6.022757,0.105619,7.818947,8.284455,3.541788,9.463744,-4.566893,1.699518,7.882729,2.696600,-0.393186,1.490132],[-6.443443,-0.940959,1.396991,2.805711,7.394092,4.609104,-1.908248,-9.757054,3.619530,0.268857,-5.607198,-6.773279,-2.627520,-5.136005],[8.298821,-9.596843,7.242196,0.510374,-9.104720,-9.456486,1.800120,-8.709449,-7.552000,9.931178,-1.651977,0.458455,-5.151591,2.800122],[-2.798527,1.482172,1.153863,4.877281,-9.385521,5.110470,2.629928,3.736022,-7.185988,-0.835289,-9.918954,-6.086561,-3.399009,2.921413],[6.562933,6.503540,-9.064893,2.203124,-2.537188,0.116715,8.825151,2.402464,-6.121141,-2.955742,2.898286,-8.458351,-9.727865,-2.610564],[-3.832608,1.906875,-1.800806,7.894654,-7.060558,8.680892,3.381353,4.961951,6.397458,6.676115,9.444025,-8.498639,-1.891760,-4.074767],[7.238557,3.092640,9.377427,9.545661,0.081474,-3.620146,-1.722798,-1.348525,-1.002752,-2.824326,3.759641,-3.212683,9.624765,3.708316],[9.790485,8.902052,-3.907792,-6.706990,3.087545,-4.217890,3.762975,-6.970068,-7.338717,1.832031,3.633916,-1.261588,-9.377973,5.800852],[-4.132516,6.999318,4.238517,-2.143631,-1.707371,4.218146,7.139417,-8.832452,-9.081943,-9.627273,-4.062181,-2.736821,9.700362,-3.860983],[3.725661,-5.837317,-2.667726,9.504701,-3.624049,1.057706,-7.297701,-3.476103,-5.540301,-9.924746,-3.390585,1.199283,6.504305,-7.904658],[0.823646,-5.279001,-8.459450,-3.246129,-7.893407,-8.877300,6.281664,8.494118,-7.134646,7.188360,5.295892,-1.820869,-1.822585,-6.747356],[0.898195,2.500947,3.187334,7.782208,-9.646911,-9.853766,4.428218,1.591261,-5.811190,-1.463406,-1.262579,-7.117600,-2.842131,7.321760],[-0.348371,-9.683844,-0.294392,-9.016974,3.691193,-5.253237,9.038629,-5.564360,6.654832,-8.519346,9.268225,1.939724,-1.931688,4.349315],[-1.492155,-6.465745,-2.232156,-6.350657,-6.063891,-4.572232,-9.638542,1.710312,7.751196,-3.031867,6.975637,-3.663127,6.906659,-1.577931]],[[9.498651,-1.194702,6.665702,2.360880,4.157864,-3.027150,-8.410062,8.939971,4.516553,9.538503,1.353635,-7.437366,-6.909907,3.820597],[-6.171185,1.252602,2.744327,2.693258,-8.862486,-4.268998,-0.941944,3.058665,8.776050,4.030204,4.885611,4.914699,-5.732064,4.812185],[-5.210616,-7.360373,8.860168,4.301750,-1.521529,9.264953,9.982356,-5.381964,-4.235097,-3.312782,0.155050,6.670243,-9.489252,5.712587],[-7.766459,7.893209,1.607932,2.559902,-2.369720,6.291251,8.479729,4.391878,-0.242494,-4.271919,-3.259170,-0.600303,-9.307294,-4.883457],[-4.828393,2.427414,8.652465,2.268482,-0.872979,9.857226,0.029725,4.771486,3.363846,6.385111,5.957346,-0.076924,9.750881,6.801741],[-3.667520,-9.939003,6.787438,8.021360,1.835000,8.782082,7.430166,-3.474250,2.869650,6.729583,-3.281011,-0.337415,-1.618343,1.583407],[2.984830,0.480524,5.376330,-4.797976,6.187941,9.801044,-3.855865,7.114502,4.801517,5.609689,9.327260,7.417889,7.937515,8.866629],[-8.021950,4.048373,4.816687,-6.818917,8.305271,0.304784,-2.850181,5.171731,3.134471,9.311864,-8.117775,6.925487,8.128558,8.278520],[-4.225354,5.623182,-8.343102,-9.394388,3.849533,-4.008649,9.967483,-6.353404,-5.141985,2.545272,-0.666536,-9.277201,0.623775,-7.205740],[-1.376861,8.379193,7.799845,5.680552,-2.366079,8.743188,-4.266613,-3.061914,-0.748040,-0.345045,-3.509615,-2.558231,-3.825394,8.201324],[2.315581,-7.874027,4.810844,-0.858143,-8.019234,-4.589542,-1.032563,6.779620,9.755445,-0.171791,-8.495812,-0.264951,-1.415718,1.472045],[2.959977,-2.675178,-8.943143,-9.202742,1.494347,-5.776143,0.833122,-1.643814,2.666854,-6.903855,8.458985,-3.823810,7.131398,-7.852519],[4.222469,-0.648431,-0.446953,7.259015,-7.212268,-3.553100,2.380952,3.522925,-2.292177,-4.634396,7.384490,-5.772492,6.253000,-5.152860],[-5.703847,1.209098,-3.387952,-7.057799,-1.488633,-9.709080,-3.595767,-1.721146,3.776704,-6.253285,2.491400,3.612893,5.497406,2.071814]],[[-5.681733,-1.949574,-8.064331,8.285057,9.718338,7.911056,4.651288,-7.122035,3.881531,3.148542,7.987794,-9.724514,-2.716273,3.497353],[4.545719,1.769627,2.777762,-4.964477,0.276948,-8.877711,-7.824345,-0.626014,8.958214,4.679027,-3.041223,-6.407602,-3.240475,-9.646407],[-6.421765,-5.198230,8.210377,-2.787252,5.192491,-6.576495,-5.316621,-1.590210,2.725150,-5.485269,2.987129,2.304486,4.240062,2.802117],[-0.189334,-4.676025,-5.748723,-7.190843,-8.859903,-2.451636,-3.359437,-2.578940,4.992688,7.112353,-5.877487,-5.741955,7.548413,4.353864],[4.869047,-2.564216,-5.338172,-6.525989,9.533121,-3.982901,8.824128,-9.427157,-9.311742,-7.426653,4.223336,-1.983183,-9.430321,3.625877],[-6.343044,-9.013358,-8.567219,1.080281,5.722696,4.311198,-8.163615,8.329138,-3.249018,1.413768,-8.693521,-6.310860,2.977823,5.372203],[0.997981,9.020769,3.434821,6.308108,-9.554407,9.234757,2.683480,2.627525,-8.722511,3.024778,-7.412786,9.164556,8.435664,-9.370805],[-1.108876,-3.772034,-1.779691,7.177452,6.348638,7.780425,6.492352,4.304855,9.550299,0.918357,5.950002,-9.707337,1.437386,8.717729],[-6.213425,-6.568307,2.199349,-4.876981,-7.321387,-4.372422,6.646650,-8.165798,-6.991169,6.510281,-4.221685,8.513189,5.348130,2.876357],[-8.503939,3.660118,-7.580753,2.725284,-3.845472,0.139496,-8.253104,-2.247830,-9.532965,-5.371941,2.824363,-0.652449,-4.191775,9.301448],[-3.231142,2.837205,6.303587,4.203478,-8.636577,-3.622558,-7.126940,9.583665,1.051036,-5.094872,-2.944299,-5.124504,-8.636711,6.880966],[-7.601493,2.332238,2.275377,9.573326,4.862669,-9.084909,-3.837230,3.322282,8.967211,9.994609,-0.870603,-4.108094,-7.061882,-2.399468],[6.026968,-2.175920,8.168067,-9.272172,-0.922845,4.538213,-3.690304,2.116283,-4.313635,-3.824517,5.552033,-9.772516,9.420490,8.294390],[8.025496,6.757552,5.460369,0.142574,1.742691,-0.141247,3.690125,5.156223,8.005207,-9.590149,6.206576,3.874897,-4.426610,8.682744]],[[-2.395833,-2.953377,-3.269184,6.947478,1.432116,-4.596860,-8.257335,-2.510525,4.844646,-8.713529,-4.967875,-8.832714,2.720079,-3.978167],[-3.613167,8.598917,-3.181906,-9.044953,3.540096,7.551190,-5.333775,4.572897,-7.069455,3.888032,-1.441247,-7.237639,-9.253991,-2.334010],[9.284436,-5.125085,-1.564230,-3.891048,5.645379,-3.379918,-2.192944,7.155994,9.497840,-1.381816,-7.185092,0.327676,5.193362,0.009584],[5.134244,3.541023,-6.577474,-9.362646,5.865896,-4.663837,1.862287,-6.425626,-5.794061,8.226234,-4.187066,9.881963,3.803343,8.448232],[-5.751583,-0.657842,3.463415,-4.579446,7.603467,-3.235473,-0.294310,2.593921,5.376724,3.243240,6.624283,-0.154498,-1.595951,-2.455026],[-2.210502,-6.966137,-6.168655,-4.008157,-1.728652,-8.548584,5.213704,0.389418,1.679468,-2.613119,-7.443345,-7.349651,-9.315202,9.709721],[-0.694744,-9.331256,-6.125598,7.445890,3.006998,-4.110547,8.777102,-3.236686,5.551923,-8.271432,-6.744640,-6.974070,-2.238651,7.100438],[2.160465,-5.038938,-5.226569,-9.213896,7.726950,-8.615658,-1.514961,6.878346,1.537069,-0.448634,7.486555,4.628454,0.212896,-9.863774],[-5.328086,-8.017095,-7.435806,9.278335,5.862620,2.105891,9.422924,-6.775854,-8.401601,7.772645,2.237278,2.265153,-1.620464,-4.175104],[-0.948203,-0.053143,-1.933555,-0.244530,7.250808,-3.469969,6.110899,8.343695,4.045154,-1.695818,1.481199,8.205401,-7.339500,5.962599],[9.178877,-9.066423,-8.901872,-7.029680,-1.459491,-6.777925,-3.588940,-4.911417,-9.441031,-1.584872,8.548270,-4.357651,8.732354,9.393630],[-3.328884,-8.606016,7.696181,5.812444,2.754544,-0.653710,-4.601261,1.126472,6.187967,-7.987151,-8.444306,7.624191,-1.592730,-0.322771],[3.807514,7.082574,9.131882,5.766384,-5.274785,-6.594868,-0.050800,8.477705,6.283698,9.362783,2.955640,6.732326,8.312865,0.234496],[-7.559576,4.293920,-8.677676,4.945926,-7.051471,-0.748815,6.276111,2.729343,5.542367,-7.488808,7.830763,-2.997476,8.063725,-1.025055]],[[-1.471011,-3.953781,-2.701537,5.344410,-5.576092,-2.844395,7.810608,-8.673855,5.433574,9.100135,-4.884924,-2.445249,4.050651,-6.150816],[-3.842606,6.570118,6.983824,8.351225,9.949795,-3.521946,9.141894,6.848500,2.011301,2.315879,0.332564,9.659368,-7.414843,0.297702],[-1.313841,-9.206492,1.899121,-9.017204,-2.456509,-0.389159,-9.557004,5.758652,9.319044,-0.424343,-7.930916,7.701595,-9.914609,-9.395838],[-4.568446,7.096611,9.379600,3.454888,4.105414,3.899694,1.177970,-9.785713,-3.964330,5.316719,-9.821674,-7.484715,9.148351,-7.211582],[3.383403,-3.531425,-6.442594,-0.899780,-6.812964,-8.017173,9.480433,7.029301,8.657301,-8.876749,0.650361,6.976117,-0.227467,1.989352],[-4.483446,3.351101,-0.365417,4.252455,3.995886,-3.259857,-3.910292,-2.707881,9.124932,-1.459824,0.773502,-0.796159,1.790744,-9.302685],[-8.021779,7.987814,9.928079,-2.909967,4.354633,-6.279328,6.941518,-2.757776,-9.909862,-6.473086,-9.732765,-0.415824,1.672005,-6.952180],[5.822324,-9.477521,-9.228982,-9.903926,4.280465,7.562654,-3.577385,8.778561,0.750668,9.976070,-0.544333,7.840341,4.981905,-9.370594],[-0.216924,3.000958,1.442015,4.547789,5.813816,2.712932,-6.232205,6.798710,2.819602,8.872803,-0.158274,-0.862205,-6.572575,2.303126],[1.661882,-4.715213,0.721048,7.196600,-8.885253,-4.119872,-7.027381,-6.590702,8.859602,-4.163965,-8.052224,2.151937,-6.486306,-7.045323],[2.588836,-9.321351,8.464751,-5.852699,-5.958151,-8.912961,4.314168,1.206739,-6.774439,-5.403329,8.679235,-1.656943,-7.057035,3.303815],[8.660029,7.949715,9.830586,-4.460435,6.901949,3.655796,-0.301050,-3.856336,7.494433,-4.189436,6.614904,1.575438,6.118143,-3.653495],[3.748906,-8.352642,7.023358,8.105340,-5.549739,-8.430353,-3.231211,4.903603,1.435748,-9.100509,9.146263,-5.117534,-6.839271,-2.029496],[-3.097281,3.037461,-0.453392,-9.499151,-1.704339,-2.259556,6.002717,-1.453337,5.805328,5.967778,7.357234,9.347125,-1.211540,8.441911]],[[4.051087,-1.342700,-8.194946,3.367537,3.262675,9.711867,5.530667,-1.647226,-6.855086,-8.414107,7.295637,-1.583559,-8.002647,0.915438],[2.785708,0.923544,-3.495759,-0.001392,1.727576,0.660965,-2.893748,-8.701341,4.664014,-9.196582,8.469836,0.605569,-8.288607,6.667368],[9.740474,0.182526,4.457369,5.152678,-5.892892,4.643204,2.249785,3.637128,5.952521,6.270844,-7.073549,-4.010578,-0.884790,-5.222461],[5.872088,5.522382,9.406435,3.536348,4.326804,-3.511673,2.899535,-0.687111,0.263718,-3.288592,7.396793,8.530006,5.854192,-5.212469],[3.014442,4.073960,-4.000796,2.151835,4.767440,4.082316,3.960321,5.314476,0.985723,1.889492,7.898788,2.808001,4.548766,-3.544787],[-5.771208,-0.617218,-1.986741,-8.431013,4.398711,-3.529701,-1.311877,7.223685,1.411731,-4.380544,-0.923602,8.369451,4.488209,1.120373],[4.773361,-9.863502,-0.406671,7.889819,-5.392332,2.741849,1.941303,-4.722063,8.889972,8.124630,-9.956007,6.944284,3.448248,-4.959249],[6.889227,7.715774,-0.521445,-9.129977,8.540084,8.515020,0.524183,0.072681,-6.537195,8.031069,1.232470,-6.393107,-5.159368,9.061475],[2.238179,2.857441,3.440756,1.054922,-6.411024,-7.246931,-6.832474,9.982136,-3.616682,-3.002999,-4.222485,4.977781,8.673889,-1.787267],[9.910554,1.621484,6.390615,-8.988500,-4.559149,-6.166655,4.569218,-0.789020,-4.674403,-4.490612,-2.616425,8.265309,-0.336132,-6.684074],[5.368155,9.040684,-4.187446,4.105015,0.838820,-6.421186,5.069634,-7.918915,1.608915,-8.591266,-5.119474,0.380122,-9.120039,-2.089942],[5.964185,-1.812282,6.548261,9.945283,-8.395882,1.004493,-1.943292,7.075695,3.427639,5.681036,-3.733410,-8.673867,-4.193211,3.591092],[8.844865,0.356778,7.109507,4.548765,7.651251,-1.870262,4.630632,-5.814224,-7.682316,0.003366,7.340736,-1.514502,4.073396,6.088945],[-0.428618,-8.670605,-0.537683,-9.203817,6.706277,-8.006848,2.707659,-1.739493,-3.133314,-3.729205,8.768378,-5.949021,-5.617465,-2.733502]]], dtype = "float32")#candidate|3432|(14, 14, 14)|const|float32
uop_3433 = relay.asinh(const_3432.astype('float32')) # shape=(14, 14, 14)
const_3437 = relay.const([[[-6.917934,-5.044706,8.426930,0.546107,-9.653696,0.710695,4.016034,3.247882,2.912345,-2.886657,7.632046,-9.437742,5.609532,0.562361],[-1.406849,-8.000894,-9.304444,-6.164879,0.864930,5.542087,-2.339919,-1.955475,9.421125,-0.967306,-6.667959,9.900055,-4.678307,6.137312],[-0.179645,-9.980183,-9.655773,6.780363,0.041893,-8.158937,-4.576882,-9.472405,-3.528748,-5.076644,-4.013122,-4.684428,5.520991,-2.894891],[-2.970527,-9.656861,8.596811,2.798429,1.371385,-9.418892,5.707059,-6.843806,-1.581094,-4.313821,8.735192,-5.975134,6.337208,-4.540390],[-0.712208,0.535867,0.569138,9.585462,-1.426169,-8.848852,-4.057887,-9.818485,9.728948,7.198158,5.559876,3.398199,-0.381950,-0.344976],[-7.625639,-8.241232,-3.838151,9.004942,0.953270,-9.225639,-3.828142,-8.626805,4.115292,-3.557726,5.695870,-2.522297,4.292814,9.046943],[9.063302,4.222962,9.211704,-3.328465,1.516859,5.744886,1.523021,-7.660470,-0.044117,-0.273161,0.807605,-1.969068,-5.643539,6.941275],[-5.767514,5.783722,7.940816,-3.607453,-4.199753,-7.407897,-0.439511,4.492112,9.595866,2.064292,-1.146012,9.089748,-9.883564,-4.350045],[-5.413711,-8.848967,-7.136754,-5.008284,7.731615,-7.756814,2.223124,1.610714,-7.425442,5.012110,8.587850,7.380079,-8.571821,9.830397],[8.910479,5.386466,-7.207397,-0.210511,5.952782,-5.521031,2.977691,3.462298,2.169468,4.801332,3.516518,4.992846,2.476105,-2.177503],[3.536973,3.086813,5.463905,-8.073505,-6.526794,-7.466670,3.066919,-1.612086,-9.836409,5.218181,1.486376,4.013416,-3.102099,7.401769],[-6.112623,8.440306,2.415178,-8.224612,-5.311090,-9.619493,5.701889,-5.922303,2.212512,-0.011878,-2.093944,9.491890,-4.209028,-6.519506],[6.885447,-4.381439,2.816163,6.574378,-2.826455,5.752798,-7.500763,-3.005781,9.629652,-6.348094,3.226745,-9.349468,6.676354,1.184324],[-7.039573,-5.619050,2.107140,3.244167,-6.944993,-3.867419,-5.798464,4.789845,1.310602,3.959141,3.004754,-9.068715,-7.283045,-1.980500]],[[-4.242839,5.976078,-2.260907,1.544808,-5.370682,-6.406191,0.904903,-8.876432,3.168561,3.934651,4.384160,8.082780,-8.297479,2.292060],[-7.883460,-2.357477,-9.957769,1.700389,6.135257,-0.774557,-9.644483,0.023466,3.695745,6.782686,9.875942,-4.928889,1.971421,2.600978],[9.848380,-0.320129,3.660285,-4.192874,-2.304776,-3.003097,-4.443349,-6.740259,0.556103,4.841301,2.411877,3.246064,1.670956,4.524480],[9.678560,-6.369546,7.748284,-1.375811,-6.942317,-0.242728,8.577415,-0.243852,-9.039608,-3.769518,-4.826040,-0.563836,-7.209390,5.332172],[3.664317,4.787028,3.551112,2.801763,-7.177119,3.876088,1.259256,-4.910831,-3.135436,-5.415934,6.561749,4.223737,-9.581511,8.521649],[2.107269,-8.885672,2.931153,-9.491523,-7.130029,3.143138,9.944164,3.431609,8.780544,3.441635,-3.711260,-4.798638,-4.307284,-7.857105],[0.103902,-0.441635,-9.700165,-9.452140,-0.300313,-8.489814,-8.393328,6.459501,0.067709,-8.628968,-1.560362,-1.725248,-9.723731,-9.313621],[-6.725177,7.660033,-0.203807,0.957810,4.153731,-7.518965,-3.998627,-5.722494,7.485650,-8.830804,-5.197731,7.988610,8.836455,1.459655],[-4.168174,-7.956296,-5.781688,-3.501670,3.362151,8.473474,5.165120,-6.815376,8.725368,7.573722,5.262615,5.896836,-8.240923,-9.362223],[-7.752300,1.273677,-1.712600,-2.485794,-9.144566,7.155167,-6.323779,-0.454430,7.838486,4.239637,1.083824,2.325765,-5.494713,-5.672371],[7.318065,-7.716876,-6.690790,-6.478040,-4.808771,-6.937849,4.113619,-7.520942,-0.293395,-2.205933,-9.843582,-3.570542,-9.875490,-2.826379],[-1.893217,4.179781,4.609833,-1.390480,-0.659981,-9.829955,4.715244,1.857389,8.517315,-7.681639,-9.089982,8.050179,-3.536101,-2.540821],[6.658537,1.730932,3.814343,2.878551,2.757071,-3.024879,-5.513620,-6.157390,7.266971,-4.424328,9.840095,1.638409,2.476392,-6.174801],[-1.494807,-5.261381,8.888370,-6.518854,2.276478,-6.732375,6.873561,-7.083754,1.355546,8.272423,-3.958425,8.680178,-9.127488,9.746801]],[[8.177362,6.148853,-9.723718,8.421460,5.206334,-6.898357,3.775361,1.954474,2.614327,-8.826916,-2.009634,-5.623740,-3.904314,5.406163],[-3.373016,-2.028551,-4.447040,9.809928,-4.336846,2.624864,-6.026560,-7.454889,-3.525728,-5.977865,0.939324,-8.288910,-1.930152,-6.256786],[6.791251,4.781599,-2.621012,2.672175,3.147460,8.299653,-9.941224,-5.344910,-0.882989,-4.267515,-2.549386,-5.119535,-3.580070,-1.679989],[1.831800,7.204004,-8.837453,-2.031069,-4.390183,2.673532,0.775700,6.929452,2.368897,-9.899325,-1.121182,-0.990302,-7.429981,-6.491477],[-9.992687,3.513818,1.745622,-2.942094,-2.588823,-8.632913,-9.254627,-5.607026,-2.310875,0.231329,9.934930,3.034017,9.399207,0.770084],[9.125659,-8.978300,-2.486138,2.354044,-7.799041,8.865839,5.069469,0.418943,2.120920,9.043450,-1.959448,-8.392740,-4.311294,0.777225],[6.640270,3.100615,4.581931,-1.404442,-3.033639,3.426067,0.219695,3.296787,1.287971,6.013143,-9.738797,-0.163808,7.104793,2.673521],[4.039442,5.787774,1.815280,0.978669,-7.214599,-8.635219,7.731414,8.797490,-8.420523,6.619953,-9.144543,-3.615121,2.863723,3.639538],[3.363099,0.157149,2.360969,-7.777842,9.392702,7.095514,0.374652,-8.394284,-3.701315,-0.969792,-8.103708,-1.799946,-1.251865,-3.425607],[4.781883,-0.909177,-9.333280,5.409465,8.587977,-4.373242,0.706500,-1.533043,0.587754,-8.164923,5.907918,-8.966782,-4.527664,-2.188054],[1.424637,4.050261,-4.852210,-8.956853,3.213921,-0.791550,5.017200,0.432944,3.554042,3.689796,7.964890,-3.818894,-6.973223,-8.268641],[7.436262,2.550515,0.635811,3.817278,7.901627,-8.583997,-7.750058,4.010013,9.324862,-9.069390,-7.762469,3.060542,8.786270,-3.362498],[-4.964634,1.912234,3.774923,7.771368,1.506594,-3.656283,-4.037028,5.596494,-7.161687,-3.563366,8.042363,-6.583649,-4.403391,8.936940],[2.687739,-7.226659,0.933092,9.362529,-2.355055,1.252990,2.901608,-7.125267,3.713624,-2.204737,-4.109532,2.838341,-6.229337,-9.779654]],[[-5.993399,-3.540629,0.532840,7.022377,-6.179192,-6.350283,2.305739,-8.031735,5.028089,-0.055474,-8.242157,-1.843906,9.319372,7.431140],[6.548332,5.873043,4.921467,6.920186,-0.980407,7.004283,2.936088,3.839412,-6.955583,-4.802960,8.032785,-5.781295,4.305255,-4.494077],[-8.379073,-5.216623,8.910847,5.399175,-0.477365,-7.400641,-9.876907,4.607503,4.143723,-1.004121,8.502520,2.721253,-1.759111,-3.410826],[9.147390,-6.707298,-4.227304,5.366859,-0.693627,4.826158,-5.857857,5.769338,2.889021,-9.658702,-7.247195,-9.263628,9.123972,-4.257462],[8.795158,-0.388689,4.864972,7.531104,9.768301,-4.663572,7.665599,-8.562919,4.121016,-6.647627,9.408108,7.935216,-9.404362,0.919281],[4.499141,0.297074,-8.717088,7.703108,-2.816541,-9.627343,-2.901838,-9.154720,-7.729450,4.646810,-8.883121,-3.364908,-8.147405,9.308833],[-0.881839,4.977448,-0.501418,-8.881129,-5.658278,3.591461,-6.985749,-7.332380,-6.242763,0.164637,-2.507112,-0.042757,-1.972678,-0.658508],[-0.232489,1.678264,-0.936007,-1.488893,2.286855,8.046631,1.563929,0.290967,-0.136784,-1.323398,-9.842881,3.036565,-7.621355,8.304639],[9.620749,8.106406,-0.955666,-1.981582,2.960888,7.325327,2.011380,-6.042019,2.002185,5.940926,-1.315383,-6.716581,4.446120,1.957157],[0.087554,-5.853882,-2.564658,-7.270951,5.189222,2.980614,-0.212184,5.637516,9.467041,-7.705052,5.439855,7.910711,7.663743,-2.233107],[8.186374,-3.216667,1.039722,3.006652,-7.041789,-4.766351,-4.062470,0.546237,-1.305278,4.226466,-8.657606,7.232075,1.456548,5.270255],[-9.488721,8.065912,5.044074,8.030077,-7.269510,-0.337675,-9.057752,-5.224441,-3.070352,8.608643,7.461003,7.986459,-6.844537,8.955361],[3.215038,-1.066667,1.976355,1.118774,3.584968,5.257721,-0.436816,8.361299,-4.705355,6.110939,4.327413,2.799313,8.217251,-9.754363],[3.738258,4.117155,4.148179,6.945563,2.644523,4.179535,8.965886,9.362844,3.587898,-4.087780,-5.145079,-4.278512,2.134153,-2.534448]],[[-5.567991,-6.984568,2.555699,-5.542765,-8.438697,2.349567,7.251901,-7.440405,7.012377,-6.861116,-5.842107,-1.260063,-4.334161,-7.694134],[-2.627034,4.959114,-4.612891,5.712578,6.949338,-1.916383,6.566667,-4.001013,-5.228972,5.219675,-3.152216,-4.183459,-5.107789,7.812967],[-5.159824,-7.015060,6.072722,3.581538,-5.669043,5.959638,3.495991,3.779870,3.914247,9.992803,-1.264756,0.186151,-2.358031,-4.579700],[-5.147750,5.641203,0.581448,8.557953,6.439458,-5.700869,1.128932,-5.187704,2.868853,1.795157,0.623213,4.228915,8.841242,-2.711193],[-3.370359,5.709500,-6.155765,7.379502,-4.548307,-7.460724,-8.388976,1.177325,-8.357893,-1.535220,0.251088,-4.882110,-2.943445,9.770173],[-2.884325,6.007554,-0.658095,5.094527,4.928974,-2.750473,-5.633844,-7.677889,-5.568524,-4.171923,2.672313,-0.226305,0.759480,9.145280],[-9.510738,8.875967,-8.282449,-6.801403,8.136790,2.988058,-4.101125,9.522997,6.850391,8.108673,2.582727,-0.956295,-1.021375,-8.012761],[-2.417236,0.633826,-6.432357,2.884562,6.222435,8.707618,-1.795368,-9.826368,-8.933128,6.341947,3.652522,1.263256,-0.090586,5.233328],[8.173608,-2.334908,2.516403,-4.815267,2.775106,-2.818599,2.592474,4.892049,-5.484384,3.169284,0.967206,-2.783845,2.786363,-3.994624],[-9.653808,5.736688,3.332423,8.138894,2.260706,-0.191899,5.455849,-3.998525,-3.833112,-4.218877,7.306141,3.587936,-5.496650,9.436194],[-3.868622,-4.034536,3.008418,-1.903836,0.043158,8.922512,7.031019,7.794026,-2.013816,-1.480688,-9.336573,9.999102,-2.550190,-1.186149],[1.577837,-7.061336,5.496254,-8.712837,-9.661591,1.279646,-9.741247,9.742553,-0.107533,-1.396704,-9.954785,5.743550,-9.322974,-7.425278],[-4.776119,8.629309,-1.833331,8.130979,-2.263834,-9.604842,-9.437392,9.748164,-5.131160,-5.149795,1.797629,6.399660,2.114516,-5.042629],[9.812159,-5.122569,-8.275456,2.897474,-5.814495,-4.092308,-2.209461,9.427209,1.053745,6.041706,0.174064,-3.608685,9.663238,-5.845747]],[[5.260837,-3.056033,4.954829,-5.976185,-1.104487,-3.877049,-3.133344,-4.377279,8.759082,0.700945,-8.144776,-0.084228,-5.332706,-1.719667],[-1.726473,8.177536,-1.046049,2.602450,-7.245523,2.880471,5.182489,6.574612,-0.027693,0.610046,-6.676429,-6.309652,2.380770,-0.941233],[-5.376656,4.222758,-0.849116,-3.312482,-8.468771,-8.896581,0.613372,-8.844199,-6.508040,-4.010113,2.598043,-0.757013,-1.260913,-9.052557],[-9.078115,7.283077,8.752779,9.658489,1.760581,-9.328904,1.376245,9.303778,-4.077425,-3.419390,2.741556,-4.265087,-0.501216,-2.415366],[5.528842,-2.796056,-5.401691,-4.162362,5.653622,1.038413,3.397893,-6.900064,-8.918031,7.489609,9.839466,2.016913,-8.604037,0.918651],[9.121139,5.640828,-5.537827,-8.530712,-6.649681,1.369868,-2.033245,-1.374261,-3.117198,6.152433,-8.702822,-5.907786,-6.616892,4.884208],[7.333971,1.832664,-6.186334,8.755652,-3.259149,1.144883,1.913047,-7.649327,0.458344,9.149249,-4.495463,9.261381,-6.720549,-0.446653],[7.639941,2.728022,5.867062,3.417731,-0.994742,-7.032114,-1.179614,0.869928,-8.625531,-7.059993,-1.944219,-2.110540,-7.002166,-6.591949],[4.253010,9.654548,-0.109890,2.963364,5.746992,7.977142,5.215648,-0.755615,-8.581655,2.412490,-3.854022,-9.623755,-1.303703,9.570382],[-7.085257,7.529952,-8.696903,3.266739,9.601135,-6.951139,0.086638,-0.509095,-1.464780,2.506313,-4.464380,0.782395,-4.898463,-4.102650],[-1.254781,0.082299,0.246502,-3.013313,1.500855,-0.052600,-4.686285,6.864743,-3.846424,1.050875,-3.115990,1.174133,1.471951,6.408182],[0.334983,-3.215043,8.427950,-9.130339,-2.964084,3.797796,-1.533119,8.921727,-6.312523,2.578307,-2.690058,4.093619,7.676798,-1.616340],[-6.929408,-6.353919,2.326502,2.911424,-5.150212,9.158619,0.714343,-1.740761,-9.995785,-8.612889,-4.996241,2.726081,-9.016025,7.265621],[-9.003218,7.717899,-2.335379,-9.208910,-4.870198,-2.926588,9.805812,-3.975318,-2.338951,6.559069,-2.023084,-5.052356,7.165676,5.876458]],[[-4.742273,3.113331,-6.811623,2.037824,-0.516125,-5.816641,-8.491794,0.285063,-3.506487,-5.329639,-0.289786,9.811747,2.298674,7.869231],[-2.899315,6.524245,0.054485,0.403650,0.574710,-4.352933,-0.096000,-5.297971,-0.029750,-2.973924,0.514160,2.667326,-9.209753,-4.415477],[-7.277458,-8.951335,6.218393,-7.834309,-6.515630,-2.918255,-8.897266,0.241128,-9.436470,7.967792,9.778604,0.445861,-3.243169,-1.854540],[-3.930053,8.400169,-5.515059,9.794338,3.919114,2.243476,9.059250,6.437023,-1.378582,-0.039975,-4.510618,4.562312,5.697460,6.103126],[-3.371685,2.302029,-5.377007,8.855497,-1.192782,-0.318415,-5.280811,-4.985279,-2.318856,-8.203576,-1.375155,4.652226,-2.309855,1.340050],[5.039690,-8.766135,-9.142865,-3.750625,-6.904809,-6.045100,-2.893299,-9.948938,-4.551167,-6.561974,-3.995948,2.433620,4.760268,5.867120],[-9.052915,-4.971335,4.851721,0.913491,-3.771950,8.979903,8.425902,3.825716,-1.680291,9.429577,-9.345971,3.479593,-1.463718,-2.100803],[7.887544,4.671337,-9.796634,-6.037204,-4.436158,6.598577,8.683833,8.786256,-4.858117,0.393680,-5.167491,4.476217,-0.401341,4.076628],[-7.613827,3.943177,-9.417348,5.864452,-9.114541,-8.600517,7.879059,9.443621,-4.381159,8.452165,3.274145,-5.566637,3.589621,7.704850],[-1.677832,-6.556334,-3.486397,6.121506,1.479508,6.387569,-7.011308,-9.499714,9.573588,-5.399520,4.903095,2.034339,-3.773075,-1.159976],[5.414358,-2.482103,8.156387,-7.186635,-2.873709,-8.505884,-3.278452,7.186639,0.399539,-8.066398,8.153419,2.505109,2.415953,7.216870],[-8.406153,8.146210,7.835512,3.889905,2.808256,-1.882873,4.487815,2.406036,-8.744284,-9.946538,-4.035574,5.524730,-3.073840,-7.088258],[3.248291,6.591648,-1.479277,6.366513,-7.634412,-2.465264,2.229825,0.093669,2.121603,-2.834777,8.795759,6.094592,-9.719936,7.713645],[9.080546,-0.973554,-7.047635,-4.304091,-7.715884,-0.188898,7.698861,-7.493867,-3.437458,4.829387,-3.484365,3.743209,4.359967,-8.790533]],[[6.198505,-7.888830,8.282856,0.257238,-4.317793,-0.894739,-3.443881,-9.932984,0.629231,-0.791430,-9.035836,9.489188,7.214464,3.756661],[-5.725013,-8.693275,6.265106,-7.481643,2.358670,-1.277441,-6.614759,9.545386,-3.716634,-4.739632,-5.980204,6.602564,-5.694046,-4.265317],[0.712612,-3.843008,9.077706,-2.363021,8.203321,5.410507,-5.869580,7.375608,0.938031,0.414496,-3.790651,4.805531,-2.671731,4.879783],[-5.505371,8.816629,3.082141,3.509405,-6.888152,-7.482452,-1.860660,8.275181,6.586839,9.149178,9.313153,-4.366163,-6.440183,-6.616000],[-4.094706,-6.012397,0.397342,5.937755,8.590366,2.958163,-6.763410,-1.112006,-0.939812,4.012261,-8.689669,-3.821519,-1.476054,2.869167],[-5.256002,2.161213,5.898764,2.336140,0.720590,-5.323261,3.440879,1.783194,9.960606,7.672642,4.284854,0.974614,7.503824,1.616477],[2.362578,0.254697,-5.611256,-1.163240,-6.894098,3.157754,-1.879247,-3.582912,6.887494,0.467636,7.807605,-0.828463,-4.734199,-5.587442],[5.771348,7.504009,-4.294394,9.825314,0.799939,0.578365,2.820724,-6.682796,-4.450613,-4.281430,-2.105132,-8.404122,-9.171153,-6.889927],[-2.022331,-2.952817,-4.623365,-0.492841,-1.288615,8.397353,-9.788389,3.538778,4.345164,7.188958,6.730230,-9.526432,-2.580596,3.420419],[2.617664,9.418451,3.471327,-4.852596,8.729590,-9.623439,-7.428843,4.287770,-8.127506,-1.148507,-6.767674,4.494385,4.654970,4.687308],[-2.594069,-5.975308,-9.570353,-6.936552,-1.423289,6.435651,0.667444,5.217032,-7.131533,-7.438358,-2.790745,-1.719330,0.437615,-9.259946],[5.777541,-3.533628,-6.146136,-1.547688,-2.621367,-6.703140,9.288002,-9.960483,-7.008811,-5.543661,-0.112782,8.608428,6.126680,-5.653877],[-8.596786,-5.775764,-9.473991,8.039029,6.800181,-2.045825,-5.987483,-4.468442,-1.042335,7.308654,9.108319,2.024735,-4.819978,-9.818709],[3.492057,-8.854090,9.493281,7.900275,0.639276,-7.398558,-2.234415,-8.501570,-3.731409,-9.315154,9.199463,6.917471,6.812216,0.803374]],[[6.258056,-5.138151,-7.530505,-8.416472,2.664476,1.409972,7.669341,9.087796,-7.064153,-2.887592,9.085072,-1.628511,-8.768965,5.591287],[-8.983096,-3.190291,-9.272892,-9.982423,6.448054,-9.088652,6.170759,-0.324044,4.196493,-8.102754,1.494535,-3.633749,-2.996007,-0.184972],[-8.692749,-3.574131,-8.106603,4.650239,3.593193,4.539061,-4.145362,7.128056,2.629029,-6.340208,-4.031670,8.887779,-2.143836,-3.434049],[-8.237049,3.235944,-8.709798,9.660740,-6.572464,7.689196,4.872336,1.957509,-0.074869,2.240739,-2.744672,-7.492231,-0.476513,-4.560036],[-9.986339,8.543888,0.574907,6.443474,2.376657,-8.547253,1.463183,9.596759,-5.366896,2.660888,-5.024169,3.215399,-6.973540,3.837298],[6.479746,7.045614,-4.352791,-7.898590,-7.162520,8.984382,-2.509675,3.788621,0.843283,-4.489538,1.159207,-8.121225,-5.384531,-8.430595],[5.304417,-6.486796,-2.407224,-6.584769,-4.177926,-6.470148,1.509473,-5.021648,-8.992778,7.645408,1.776130,8.951535,9.796916,-4.478852],[7.200634,7.124017,-4.755263,7.371525,8.266318,1.558408,-3.755303,-4.035282,4.118485,-2.129087,0.584044,5.387238,7.255233,4.626529],[-4.813036,6.602731,9.810624,-5.342765,-1.929835,-8.717812,-3.454064,2.475679,6.814505,-3.271111,6.212066,-1.116085,-8.068712,1.405560],[0.278785,4.551880,-0.658226,7.457980,0.691204,2.107701,-3.381191,5.186605,4.589558,1.117100,1.913028,5.391437,-2.548354,9.661980],[5.408432,0.187265,6.175826,-1.132140,0.161616,5.794325,1.738494,-9.962876,-5.898608,-3.442863,-8.241555,3.075517,0.893505,-6.702999],[-3.345308,6.338992,-2.741526,-1.069707,2.794587,8.879040,6.946871,3.282693,2.023998,-4.496189,8.479639,2.028267,-3.102702,6.755522],[0.268835,-1.471430,2.118297,3.095526,-8.569229,-6.753223,-3.825037,-9.433064,-1.432777,4.222880,3.942215,-7.968110,-2.126063,-3.421620],[-0.453455,8.611686,-1.261955,4.017348,1.544707,0.663547,3.870940,3.123032,-1.940421,3.438365,9.984823,-2.027122,-7.843117,7.430408]],[[0.213435,8.173171,-6.379402,3.625116,-9.987113,-7.918101,-3.939116,1.591210,1.180482,2.086679,-3.810005,8.363548,0.814086,-6.097243],[-5.544400,1.473658,-1.569968,9.726873,0.390338,7.509116,1.361802,8.471744,6.427749,3.299739,6.344178,-0.821448,6.365749,0.198803],[-4.254895,-7.889333,1.872471,-1.138888,3.061090,-3.288513,-8.580115,-9.875646,-3.070942,3.186896,9.447813,-8.610944,-3.705494,-9.694223],[-3.053460,-1.645370,-1.650197,2.257731,-1.416661,2.849131,4.758773,-6.760313,3.775910,-3.210174,-6.461633,7.503381,-3.252719,-6.030856],[6.350434,8.192006,-7.595985,-6.578127,-9.789727,3.759876,1.619829,-0.710193,-8.339216,-4.885921,-8.858199,3.361226,8.745645,-2.642277],[9.890697,-7.444603,2.484739,-0.752405,7.367309,-2.726237,3.814650,9.591364,-0.990153,2.180925,-6.534861,-0.365832,-7.946393,-7.899014],[9.663619,-7.469520,7.489062,3.712566,-8.021051,2.100605,-0.274055,1.287553,3.203855,-6.734876,8.213434,-9.511193,2.115619,-3.318825],[7.699081,7.073242,6.840643,0.937233,-1.930838,3.312958,-8.511789,1.703289,6.137474,-1.180185,5.079206,-1.059989,2.344826,-2.665315],[-9.212408,-6.052976,1.569546,-0.907763,0.621301,-0.359608,-8.794291,-6.389712,-7.164072,0.461758,5.135660,-6.725858,-7.499701,0.500490],[2.908679,-3.813825,-7.713050,1.531523,0.954767,-0.668926,4.997960,-0.907821,-7.037727,1.748890,-0.069942,-1.694152,-4.446093,-2.832417],[-2.068470,-4.539669,-0.562061,4.870014,-3.393139,-1.352158,-3.557723,-3.916549,4.365526,8.441843,-9.119472,-5.948514,9.863258,-3.038305],[9.867564,-4.710787,-9.657952,-6.510634,2.130812,6.490644,-3.150690,1.223215,-5.788068,5.808986,0.883251,0.652043,9.147465,-5.924924],[3.623840,-6.607730,-9.005881,-7.128664,-7.600779,4.878918,-3.058357,3.635594,-5.616814,8.363005,-8.158001,3.342342,2.487308,9.690808],[-0.900108,4.274915,-6.562692,0.850264,-5.788908,0.280970,-4.429231,-6.725150,0.880032,2.360827,2.824741,-3.523783,3.353726,6.754609]],[[0.914578,3.626062,-2.194578,6.617842,3.210028,2.340192,-7.817983,-6.702422,1.138864,5.254768,-7.973748,1.800249,4.530833,7.830286],[6.827572,3.425080,-0.370822,-6.374524,8.378510,4.679575,-8.746133,-5.472021,-9.026027,4.837026,2.204819,-1.920543,-8.319289,4.100235],[-1.114421,-9.504819,8.982011,-8.052731,6.958190,5.162326,-2.603899,1.692703,7.997986,4.493167,-2.733963,-5.129342,3.087018,6.806381],[-8.049277,4.612862,9.835094,-3.398293,7.601379,-3.885448,6.227106,6.864239,4.614610,5.810571,-9.580983,-6.013924,7.963917,-0.922912],[9.768568,-2.086425,5.765041,-4.847599,-4.199498,3.099111,3.582099,-3.896887,1.888040,-8.036544,-4.019367,-4.781350,-0.750493,1.385088],[8.230846,-2.552489,2.494719,-5.346010,-4.018040,4.163090,6.035099,-8.173495,4.504675,7.109004,-5.950302,3.957422,0.909424,5.922104],[-7.142756,-4.861969,0.733807,-3.682823,8.252772,2.498222,-2.668153,-3.973112,9.734641,-5.685009,4.979341,-4.423686,-7.489597,-0.881953],[4.884299,4.187843,-9.203670,5.117269,2.318506,-4.278959,-4.428334,-5.102025,5.913992,-4.545204,-2.403150,1.547954,-2.379473,8.715796],[3.125546,9.348994,-0.975247,-9.681183,-4.897479,-2.146806,7.994376,-2.027773,-5.901314,-5.227137,-4.811715,-1.092955,-3.434585,-7.326844],[0.119410,6.330278,-0.586993,0.586232,0.901039,9.355386,8.742867,1.916874,2.009911,-5.044630,8.725449,2.190008,2.264793,-9.021632],[6.153318,8.319643,-8.946930,3.382200,7.227023,7.023998,-3.808890,-8.351119,-0.260853,-2.522962,3.618322,4.278587,-0.087736,-2.161186],[8.613250,2.845996,-5.274906,9.491697,2.475546,2.466883,-7.084584,9.239551,1.998765,-1.683693,-4.133684,6.534675,-4.005707,-5.495285],[1.770553,-6.069784,6.155541,3.095971,-9.735504,-3.029227,6.158563,-3.616222,0.239729,-8.837344,0.567780,-7.989248,-5.778496,-1.272053],[6.336141,7.435993,2.096447,2.008543,1.790561,-1.270470,2.427564,9.393735,-6.645708,-4.383324,6.029539,7.124009,-4.481041,-8.571526]],[[8.560464,6.602311,5.459810,-5.375505,-1.573794,3.484906,-2.957625,-9.252837,7.674897,7.362231,6.170607,5.122033,-1.586042,-7.880781],[-9.319182,5.421136,9.780117,-7.988100,5.492906,7.125645,-7.576137,9.684637,7.813670,0.903114,7.643655,-2.748180,-8.793943,-7.315705],[-2.830082,9.955227,4.791157,3.184284,5.764161,-5.802375,-5.801488,3.201400,-0.750210,1.645826,-1.312085,-9.245361,4.650073,-5.927035],[-7.418310,6.717356,5.585914,-3.169643,7.450274,3.920987,6.188413,-7.706298,-4.445579,2.451719,-6.592238,-4.789729,2.882150,6.403734],[0.143190,-3.399489,-6.241424,4.647147,8.404551,-2.986753,2.899989,4.087081,7.571749,-2.350824,3.711523,4.531183,-8.374327,-7.568783],[-6.639167,5.971118,-1.148997,-3.551125,3.143737,-8.004241,3.530301,9.473354,9.964061,1.520722,-2.387025,-1.639596,5.613468,-9.271084],[8.583621,7.411730,-8.847416,6.297591,8.091849,4.543637,9.834658,0.231269,-1.222767,3.552098,8.565786,9.183920,-1.156185,-1.897513],[2.612999,-4.647296,5.446156,-8.780894,-0.290342,-6.094289,5.584723,-0.389332,-6.816435,5.460585,-3.119616,-4.333198,-2.688343,-7.019372],[7.989367,-6.266691,8.327808,6.663638,2.642101,-9.200089,4.011517,8.207075,-6.166678,-7.329423,9.308289,2.687470,-3.339235,8.248237],[4.410741,-1.458545,-8.842264,6.626512,7.151016,9.776030,2.166536,-7.068645,-5.866392,3.808693,8.202766,8.213323,-4.133248,-3.165412],[-3.031026,6.114908,7.223370,-7.221025,-9.694528,6.840693,-6.895800,-5.082220,-8.045285,7.903883,-9.492988,1.967506,-6.667671,-6.712362],[-1.363734,0.559565,9.249896,-9.366284,-6.768916,-8.514088,1.479423,-3.217549,-3.511793,3.127639,5.133708,-9.836360,3.307612,8.640234],[-6.331347,-4.338463,3.151303,-7.966364,-4.281480,5.129124,9.415987,-4.657182,-6.761035,1.020353,2.150907,8.503441,2.735838,1.691515],[-6.747557,-9.909124,-1.323027,0.198597,-4.685485,-1.737423,-7.816590,-7.475654,-1.667589,-0.816232,2.559472,9.712361,-9.358422,-3.171218]],[[-0.651930,9.825284,-6.415351,-1.856260,-7.665844,-0.811499,8.878303,-7.331679,2.987565,1.535346,5.863366,-0.621465,9.544226,4.897814],[-5.329300,9.759469,2.379461,8.781101,-8.678839,7.787054,1.053305,-3.860009,-3.390376,4.704496,4.167349,2.690050,-9.233686,8.670283],[-7.318159,-5.597156,-1.648291,0.360385,-2.778141,-6.456430,-9.410854,4.950900,3.115339,-2.861750,-6.900773,8.676019,4.122294,-4.939698],[-0.940274,0.612007,8.370674,-4.267712,-2.930735,6.787883,-8.681522,7.190541,7.903943,7.247204,-8.092677,2.987919,2.611422,-2.566881],[7.495022,-7.133652,4.086053,-7.587487,1.622223,-9.238649,8.908773,-3.372436,2.774392,-5.577070,9.263164,-7.733555,-0.201633,-6.347393],[-9.195355,-6.499087,-7.758054,-0.350275,-9.781226,-3.091982,3.533317,7.449372,-1.748217,-0.345361,-0.905785,8.599228,-1.608687,6.371410],[6.739760,-5.599528,6.411500,2.257595,-5.650842,4.370086,1.333506,-3.326394,-7.528514,8.284624,-8.117518,9.248430,-0.999487,-2.200486],[-9.839887,6.292862,5.987498,4.589582,-9.145994,-7.846972,-1.282881,-6.000043,4.409366,-2.270728,-3.346633,0.147745,-4.659557,5.440093],[7.262148,2.494123,-3.710854,8.153948,3.414922,-3.918829,4.345170,-7.314707,-6.272198,4.700056,1.835987,3.379854,5.748513,-4.098420],[4.506427,7.418692,8.101695,-5.339591,8.403543,-3.808336,3.221686,8.965356,7.600413,-2.419958,-9.623071,-2.284124,-0.312991,1.974693],[-5.126614,0.150487,-8.052732,-5.951060,6.592522,5.874953,-4.044001,8.089067,-5.975583,-0.408500,-2.719646,8.725926,5.134433,8.036493],[7.517530,7.398478,-7.517193,-4.503649,0.270689,7.811026,4.542574,-2.744363,-5.701188,8.862982,-1.216190,-3.247478,4.412343,0.674072],[0.115530,-1.661678,6.507225,-1.400522,-5.085817,-4.790800,1.013463,-4.253930,-5.101227,-6.083540,8.059382,3.042369,-7.441988,-6.221399],[5.916931,-7.017188,-4.269862,-5.052634,-6.308373,-4.365031,5.997747,1.224975,-8.826201,8.253847,-9.601344,1.231744,-8.453093,3.582129]],[[-5.705903,-7.585852,3.221529,8.859546,1.426273,7.072556,-2.402764,-1.305382,9.804367,8.107414,5.498061,-0.277938,-9.709891,3.909479],[1.982725,0.942568,5.178156,7.855585,-2.836835,-4.202547,-7.139792,-3.128096,2.622827,-8.414459,-9.943592,-1.588430,3.155102,7.100780],[-4.720291,-3.872694,0.240964,-3.265467,3.816112,0.923004,-5.343214,5.739661,3.380491,2.509296,-1.979441,6.468483,5.615188,-6.387430],[4.390760,5.050398,4.972460,8.535816,8.439776,8.869534,7.166278,7.317663,-9.438267,1.110693,-3.788114,0.788489,-6.764474,0.316251],[-7.694068,-0.030129,0.369571,-6.208656,4.152122,6.886367,0.086422,2.699300,1.848622,-8.206351,2.668987,4.094399,-5.333164,-1.300608],[-5.542896,8.655584,-1.280145,-8.986987,6.174733,-3.359472,-7.431190,8.104684,-3.212698,-4.942190,8.652986,1.926593,-8.077853,-3.145437],[7.183760,-5.259341,-4.940174,0.261559,2.244882,-4.434454,-5.801628,-3.795414,-4.390012,-7.398408,-8.411447,-8.448666,3.990001,3.147571],[6.821473,-0.545791,-4.318371,-1.293643,-6.547647,5.057946,4.931409,-8.916211,-7.773446,-0.435537,4.113788,5.391935,7.080095,9.764969],[-0.616385,6.100818,5.987463,-0.473291,-6.390907,-0.100445,-5.417638,-8.943744,-7.101933,7.302629,3.245746,6.544756,-0.582201,4.326300],[2.062192,-1.408315,2.418238,4.082786,-3.055301,-7.672470,-8.859503,1.938357,2.932122,-2.658357,2.660393,-5.269780,0.397425,4.288807],[9.817644,3.643606,4.390248,-4.476815,2.861369,0.572263,9.298122,-1.566974,3.552548,5.824054,-9.486090,-1.394188,7.816355,-2.997272],[-1.058791,5.078574,-1.798770,-2.468781,-0.537787,-3.088622,-2.806713,8.309613,-9.057442,8.197507,-0.437552,-9.088351,-1.357304,-3.977452],[0.536646,-0.002438,-5.512821,0.084778,9.055748,-1.827817,-0.969117,7.267938,1.786377,3.136395,2.547986,9.430114,7.171263,-3.081748],[-1.336380,6.855225,1.008696,3.089908,3.676276,1.262161,2.746232,6.594411,-4.736811,-7.056958,8.023986,4.557094,9.831923,-1.469480]]], dtype = "float32")#candidate|3437|(14, 14, 14)|const|float32
bop_3438 = relay.right_shift(const_3432.astype('int64'), relay.reshape(const_3437.astype('int64'), relay.shape_of(const_3432))) # shape=(14, 14, 14)
output = relay.Tuple([uop_3433,bop_3438,])
output2 = relay.Tuple([uop_3433,bop_3438,])
func_3443 = relay.Function([], output)
mod['func_3443'] = func_3443
mod = relay.transform.InferType()(mod)
mutated_mod['func_3443'] = func_3443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3443_call = mutated_mod.get_global_var('func_3443')
call_3444 = func_3443_call()
output = call_3444
func_3445 = relay.Function([], output)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3443_call = mod.get_global_var('func_3443')
func_3445_call = mutated_mod.get_global_var('func_3445')
call_3453 = relay.TupleGetItem(func_3443_call(), 1)
call_3454 = relay.TupleGetItem(func_3445_call(), 1)
output = call_3453
output2 = call_3454
func_3455 = relay.Function([], output)
mod['func_3455'] = func_3455
mod = relay.transform.InferType()(mod)
mutated_mod['func_3455'] = func_3455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3455_call = mutated_mod.get_global_var('func_3455')
call_3456 = func_3455_call()
output = call_3456
func_3457 = relay.Function([], output)
mutated_mod['func_3457'] = func_3457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3455_call = mod.get_global_var('func_3455')
func_3457_call = mutated_mod.get_global_var('func_3457')
call_3460 = func_3455_call()
call_3461 = func_3455_call()
output = relay.Tuple([call_3460,])
output2 = relay.Tuple([call_3461,])
func_3469 = relay.Function([], output)
mod['func_3469'] = func_3469
mod = relay.transform.InferType()(mod)
output = func_3469()
func_3470 = relay.Function([], output)
mutated_mod['func_3470'] = func_3470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3455_call = mod.get_global_var('func_3455')
func_3457_call = mutated_mod.get_global_var('func_3457')
call_3524 = func_3455_call()
call_3525 = func_3455_call()
output = relay.Tuple([call_3524,])
output2 = relay.Tuple([call_3525,])
func_3532 = relay.Function([], output)
mod['func_3532'] = func_3532
mod = relay.transform.InferType()(mod)
mutated_mod['func_3532'] = func_3532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mutated_mod.get_global_var('func_3532')
call_3533 = func_3532_call()
output = call_3533
func_3534 = relay.Function([], output)
mutated_mod['func_3534'] = func_3534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3469_call = mod.get_global_var('func_3469')
func_3470_call = mutated_mod.get_global_var('func_3470')
call_3538 = relay.TupleGetItem(func_3469_call(), 0)
call_3539 = relay.TupleGetItem(func_3470_call(), 0)
func_3532_call = mod.get_global_var('func_3532')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_3542 = relay.TupleGetItem(func_3532_call(), 0)
call_3543 = relay.TupleGetItem(func_3534_call(), 0)
output = relay.Tuple([call_3538,call_3542,])
output2 = relay.Tuple([call_3539,call_3543,])
func_3544 = relay.Function([], output)
mod['func_3544'] = func_3544
mod = relay.transform.InferType()(mod)
output = func_3544()
func_3545 = relay.Function([], output)
mutated_mod['func_3545'] = func_3545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3443_call = mod.get_global_var('func_3443')
func_3445_call = mutated_mod.get_global_var('func_3445')
call_3563 = relay.TupleGetItem(func_3443_call(), 1)
call_3564 = relay.TupleGetItem(func_3445_call(), 1)
const_3571 = relay.const([[[9,3,9,-8,-3,2,-2,8,-6,4,10,9,4,-9],[2,-10,6,-1,-9,9,-2,9,9,-4,2,-4,-9,-8],[-8,1,-7,-1,6,-7,10,6,6,-6,3,-9,9,7],[8,-2,-10,-6,-5,9,8,-6,-1,-10,8,-3,-7,3],[-8,3,-6,2,-9,-5,5,8,2,-2,6,10,-10,-4],[5,-1,10,9,-1,5,1,-4,6,2,6,8,7,-6],[1,2,-7,-9,8,-4,10,7,-9,-10,3,-2,-7,10],[10,-1,-6,-9,7,-10,7,-2,-1,-10,1,5,3,4],[-2,4,-10,5,7,9,-3,8,2,6,-10,4,-6,7],[10,9,-6,6,-9,4,-6,-1,1,-8,9,6,10,-1],[1,-8,-1,-3,-4,-7,-1,-1,3,5,-1,-6,-6,-10],[-4,-5,-10,8,-1,-10,-1,6,-7,6,-8,5,3,-10],[6,5,10,5,-2,3,3,6,2,5,-10,-1,-1,10],[8,2,7,-1,7,10,8,-1,-1,-6,-3,-4,1,3]],[[-10,7,10,-1,9,7,10,3,3,3,-5,6,-10,-10],[4,7,4,-3,5,3,-7,-8,-8,-9,9,4,2,1],[-10,5,4,-9,7,-5,5,-6,10,1,9,10,1,3],[6,5,6,-2,-5,-3,3,7,-7,10,9,7,1,-9],[3,-8,-7,-7,-5,7,7,2,-7,-8,2,-10,-1,-2],[-6,7,-2,-8,-9,1,-3,-6,8,2,9,-8,10,-3],[-6,-5,5,-2,8,3,7,5,-4,-10,-9,8,4,8],[-5,-7,7,5,-6,6,-9,5,-4,-5,9,3,-10,7],[-6,-8,-7,3,-6,5,-5,8,-9,1,-1,-4,-4,2],[7,-5,-6,3,5,9,-4,3,-3,-7,-4,-8,5,-7],[8,-10,-9,-7,8,-10,7,6,4,-5,10,1,-8,-9],[2,1,-3,4,-8,9,-2,10,-8,5,6,1,9,10],[-5,-2,2,5,-6,9,2,1,7,-5,6,9,7,-9],[-3,8,7,5,5,7,10,9,-4,-8,-10,5,3,1]],[[3,-8,7,6,-8,-3,10,-8,6,4,6,8,-5,5],[7,7,3,6,-3,-6,-1,6,9,-6,1,-4,4,-6],[-6,-6,-6,1,-8,1,-7,-2,4,-4,4,-9,-1,-4],[6,1,-1,-3,10,6,8,9,2,8,3,-2,-1,10],[3,-7,3,9,5,-9,-5,-4,2,-2,7,4,-1,7],[-7,-6,-10,-9,10,-7,9,1,10,-9,-9,7,-1,5],[7,-6,8,3,4,3,2,-1,5,-7,7,7,6,-1],[-5,1,-10,-6,-10,8,-3,-9,10,-7,2,-10,-9,5],[3,4,-4,-1,1,-3,-8,-6,4,7,-5,-1,-8,8],[-7,5,-2,-7,-6,-1,8,10,8,7,1,-6,-8,-5],[-7,6,-9,6,-1,-8,-3,-6,6,5,1,-6,7,9],[10,-6,9,2,4,-7,-3,2,3,-7,3,3,-5,4],[-10,1,-7,6,8,1,-8,-7,-3,-8,-6,-5,6,-10],[-6,5,7,5,-3,-9,-3,-3,9,3,-8,8,6,2]],[[3,3,8,7,-5,1,-5,1,3,10,-3,-3,4,6],[9,1,1,3,-3,-9,5,10,-2,-10,2,-6,3,-7],[-5,6,-10,5,-1,5,1,4,-5,5,-3,4,-5,4],[2,-4,2,-10,-4,-4,-7,9,-2,-3,-7,-4,-3,10],[9,-5,-3,7,-8,-8,3,-5,10,8,7,8,-10,-6],[1,1,8,-10,-7,-6,5,7,-5,-10,-8,-8,-10,1],[-9,4,-3,-9,-3,3,7,6,5,-1,6,7,2,1],[2,-3,-8,-10,-4,-3,-9,8,8,-7,7,-5,-1,-9],[10,8,-1,-4,10,2,-4,-10,1,-6,-1,-2,-2,1],[9,-8,-9,10,9,-1,-7,-10,5,-3,-9,-5,-3,9],[4,-1,-10,-2,7,-1,6,-3,4,-6,-5,-7,-8,-7],[9,-8,-5,-6,10,-8,-9,-1,-2,10,2,-6,2,3],[4,-3,-5,-6,10,9,-7,4,5,-3,-2,4,-6,2],[2,10,-5,-10,1,-5,7,10,-1,2,-10,5,-5,-9]],[[-7,-10,6,6,-2,6,-4,6,-2,-5,-9,-1,1,4],[-2,10,-3,8,-10,-3,-3,-8,9,-10,8,-6,-4,9],[-2,5,5,-3,6,8,-10,-10,1,1,2,2,7,-9],[4,8,1,10,-9,-4,4,2,-4,-8,10,4,-1,4],[-2,-10,-2,-2,2,-1,-5,-7,-9,-5,-1,6,2,-5],[-6,-10,-1,7,-9,-6,-3,5,2,-8,-10,3,-6,7],[9,-9,-1,5,9,5,1,10,-8,1,-6,-2,10,2],[-4,-3,8,-10,-1,1,5,10,9,1,7,-9,10,1],[-7,-7,-1,6,2,-8,-10,-7,-7,2,-8,-3,-4,-8],[-6,-6,2,-5,-4,2,-6,-1,1,3,2,4,-10,-5],[-9,-1,-3,-7,-10,10,5,8,-4,10,-6,5,-10,-9],[6,-5,8,2,-2,-8,3,-4,2,10,2,3,-2,-7],[-9,-3,10,-2,5,-10,4,9,6,4,7,1,-1,-9],[-7,5,1,-3,-7,9,-10,9,7,-9,-1,-8,-6,-2]],[[-5,2,-7,10,-5,1,9,-4,-9,2,10,6,6,-2],[2,9,-4,1,-8,-1,3,6,10,-2,-4,-4,8,6],[1,-6,3,-2,8,10,4,10,-1,-9,6,-1,-6,5],[-2,-9,10,-8,3,-1,3,5,-3,5,1,9,5,-10],[-5,-4,5,-2,9,9,1,-2,-1,2,-4,-2,-2,4],[10,-8,-8,-2,8,-9,5,10,8,-10,9,-7,-10,-7],[9,-10,5,6,2,8,3,8,7,-3,8,-8,-9,1],[3,2,9,-2,1,8,7,5,5,-7,-1,-9,-8,-7],[1,6,6,-5,1,-7,-7,-10,-3,4,10,2,4,2],[10,10,-7,-7,-4,8,-2,-2,2,-1,8,-4,-7,-2],[2,6,3,-5,-10,-7,-5,-4,10,3,-7,-8,2,-5],[-10,1,-1,4,-10,-6,3,9,-8,2,8,-1,-4,1],[-3,-4,-3,5,-1,-8,9,-3,9,10,-4,7,-2,8],[9,9,-8,-5,7,5,-10,-10,8,3,5,5,6,1]],[[2,3,9,-3,6,-9,1,-2,6,-2,-3,-4,-6,8],[-10,-1,6,-4,-3,-3,-9,3,-4,-1,-5,9,-7,8],[1,-7,-3,-5,-10,6,-10,-4,1,8,-10,-8,-3,-7],[-9,6,-1,10,1,6,4,9,-3,2,-10,-9,-1,-9],[5,7,-1,1,7,-9,-7,-2,-9,3,-3,3,-5,-6],[-1,-3,1,10,4,-5,3,9,-10,-10,-1,-10,8,-10],[6,-1,10,-5,5,-4,-7,8,-4,-1,-8,-5,2,5],[-7,-4,10,-3,-9,-3,4,-1,-6,-2,-8,9,3,-4],[7,6,-4,-10,8,-7,2,1,-5,8,5,-4,-4,-6],[-6,2,2,9,10,4,-5,-5,9,2,10,7,-1,-6],[-5,9,-7,-7,1,-8,-7,9,1,8,1,6,-1,9],[-6,-4,9,2,-4,-6,-5,8,-7,6,2,-10,4,-6],[-10,7,-10,-7,-4,-7,-10,-5,-9,8,1,-4,6,6],[1,-6,-5,-7,4,5,4,6,5,6,-8,10,8,2]],[[9,7,2,-10,-6,3,10,-8,10,-6,-7,10,9,-5],[-5,3,7,-3,1,5,8,-9,-7,-1,-1,1,1,5],[3,-7,9,2,7,-4,-7,-10,-8,-3,4,-2,-3,4],[6,4,-9,8,10,-3,-5,9,-7,-7,6,10,8,-6],[4,-4,9,-2,6,8,9,-5,8,6,-1,-10,7,-8],[1,5,-5,-8,7,-7,-9,1,6,-2,-7,2,3,6],[4,-4,-9,-2,8,-1,1,9,10,-8,5,-3,-8,2],[-8,1,2,9,-2,6,-3,6,4,2,9,-2,-1,9],[-1,1,1,1,5,5,-3,1,9,-7,-7,6,-2,10],[-3,-1,2,-4,-3,-6,-7,10,-5,5,10,-6,-5,-1],[-1,8,-2,8,2,6,-1,8,5,-9,10,-4,-9,5],[1,1,-9,-7,10,4,9,1,-2,1,8,-8,5,-7],[10,-8,-2,-4,8,1,-7,3,-4,-10,-5,4,9,10],[-1,8,-2,6,-3,-4,-4,-2,1,8,10,-2,9,8]],[[5,3,8,-9,6,-4,-8,4,5,-2,1,-2,8,-8],[9,4,-6,1,-8,2,-8,5,-5,5,-2,6,6,6],[1,10,2,5,-3,-9,1,-3,10,-6,-6,4,-9,-3],[8,9,-5,-1,-7,4,7,8,-7,-8,10,3,-4,-6],[-9,7,2,9,7,4,-8,-3,-2,-2,4,7,3,-2],[8,1,-10,-5,4,-8,3,6,-10,4,-2,10,-6,9],[-6,-8,10,-2,-8,3,-10,-7,-4,-4,-4,4,-5,-1],[1,4,-3,-2,4,5,10,5,10,-2,-5,-9,-5,4],[-9,-4,-4,-8,3,-10,-3,-8,-3,-2,5,7,10,-10],[1,4,-8,2,7,7,-1,6,9,4,6,-5,10,2],[10,-3,-3,-2,-7,1,6,5,-6,-9,4,-9,1,-3],[5,-9,5,-5,10,9,4,5,-1,-7,-1,2,-2,-8],[-2,-4,-4,2,-6,8,-4,5,-1,8,-1,9,-3,-7],[-9,-10,6,9,-6,9,-8,7,-6,-8,3,10,-10,3]],[[-7,8,7,-10,9,-3,10,6,1,-10,6,-5,-3,-10],[-4,-4,-7,-9,-10,9,8,-6,-6,-8,6,3,3,10],[2,9,-2,7,7,6,-6,-1,-7,-5,-1,-7,9,8],[9,-10,-7,9,5,-1,-3,-2,-9,3,9,-6,-1,9],[4,-3,-5,-4,-5,-4,-8,-3,-1,9,-9,6,2,-8],[7,-4,5,2,2,4,10,6,-2,-8,-5,3,-3,1],[10,-8,-9,6,10,5,5,-9,-9,2,5,4,-10,5],[-5,9,-8,-2,1,-10,-9,5,6,10,1,7,-3,8],[-10,-7,1,-2,-6,5,-6,10,-2,9,9,3,1,-7],[-5,-8,-10,-1,2,10,-2,7,10,1,-2,-9,-10,-2],[4,-5,-6,5,-9,-7,-2,1,1,-1,-3,2,5,-8],[-4,5,-2,9,3,-6,-2,5,1,9,-4,-3,-5,4],[-6,6,-5,-10,-1,-6,4,-9,6,-10,10,9,2,-10],[-4,-10,9,10,6,2,10,-4,-2,1,-4,3,4,7]],[[3,-4,4,-9,9,6,1,3,-7,-8,-7,-5,3,7],[3,3,3,-2,1,-9,-1,6,-4,7,-3,10,-5,-10],[-6,-6,-1,2,-8,1,8,-10,7,-2,2,-2,-4,4],[9,10,3,4,-4,-9,5,-2,10,-1,-7,-7,4,-5],[-4,-10,6,-2,-5,-2,5,1,-1,-2,-6,-9,-9,3],[8,2,10,-8,-1,3,7,4,9,3,-10,-3,1,9],[-10,3,-2,-1,6,-7,8,-4,-7,8,-6,6,-5,2],[2,-5,-6,2,3,8,-3,-8,-7,7,-3,-8,5,6],[-4,5,2,10,-8,3,6,-1,-10,-3,3,1,-4,-4],[-4,8,-1,-5,2,-8,-8,10,-6,-6,-1,-3,8,10],[-2,8,5,3,-8,8,4,10,8,-9,-2,1,5,-8],[10,4,4,-8,-9,-6,1,-8,-9,10,-10,-4,-5,8],[10,10,5,2,7,10,-2,2,-8,10,-9,-7,-9,-1],[-5,-4,-6,7,-10,1,-10,1,7,5,4,-5,4,-9]],[[-2,-7,9,3,6,7,8,1,-10,10,-6,3,8,2],[-1,-7,3,-1,5,-10,-4,5,6,10,10,1,2,-7],[-3,6,-2,-6,-5,7,-9,-1,3,-6,3,5,3,1],[-10,-8,9,-7,-7,6,-8,-3,2,-1,-9,-6,-3,8],[-6,3,-7,-9,5,9,-8,5,10,4,-2,-6,4,-3],[-2,-2,10,-4,-6,-7,-10,-4,-1,-4,-7,-10,-3,-9],[-10,-3,5,-1,-9,-4,-10,8,7,-6,-1,7,9,4],[-8,1,5,-2,-9,7,-10,3,-2,-9,2,-7,-8,-10],[6,10,-9,3,7,8,10,4,-4,1,-9,-9,6,6],[2,2,4,-3,-5,10,-4,7,-2,4,-7,6,-5,-9],[-8,-6,2,10,10,-10,-10,8,-7,-7,-8,-6,8,-3],[4,-4,8,5,-8,6,8,4,6,-1,-10,3,1,-5],[1,10,9,-10,-3,-8,1,8,2,9,-7,5,1,5],[9,-1,-7,8,6,-4,-2,-2,8,4,4,-10,-4,-8]],[[2,8,-5,-2,1,-8,-7,-6,7,-1,7,-5,-9,-4],[7,-9,-7,-2,6,-5,-3,4,7,8,7,9,7,7],[-8,-8,-4,5,5,-6,-1,-10,5,-4,-3,8,-4,-5],[10,6,6,-4,2,-4,7,10,2,-2,-1,9,9,-5],[6,-1,-6,6,-2,2,10,-10,7,-2,-7,6,-1,3],[4,-2,-2,7,-1,-9,3,-6,1,-9,6,-7,-6,-3],[10,6,8,4,-10,-7,6,-3,-1,-2,-4,1,2,3],[3,-6,3,-8,-1,-10,-5,-3,5,10,4,-6,-4,-6],[-7,6,-4,6,6,8,-8,8,5,6,7,4,9,10],[9,8,5,-9,-6,-6,-10,-10,5,2,9,-8,4,-8],[3,6,3,1,10,9,-6,-10,1,5,-8,-4,6,5],[-5,5,-2,4,-7,-5,7,-2,-9,7,2,4,10,-7],[3,8,-5,-9,-4,-4,8,-7,-1,7,-1,8,10,-3],[3,7,-4,-3,8,7,5,-4,-9,9,9,-10,4,-6]],[[-1,3,1,-9,6,7,3,7,-5,2,-9,-6,9,-1],[-5,7,5,1,1,2,-3,3,-3,6,1,-4,1,1],[7,4,6,-7,1,-9,-7,2,-2,-7,-3,-4,1,7],[9,5,-9,-5,10,5,1,6,7,-9,-2,3,-7,2],[-5,3,6,-10,-9,-9,1,2,10,-10,-7,5,5,-5],[-6,-4,3,-7,-5,3,3,3,-3,-6,5,9,6,9],[3,6,10,-2,-7,-1,7,-8,-3,-6,8,-1,-9,4],[6,7,-9,3,-4,2,6,-6,7,-5,7,-9,3,-7],[-2,-8,-6,2,-9,-5,-9,-6,10,8,-8,-10,-4,9],[10,-8,6,-3,-10,-8,-7,3,9,1,-1,-7,-3,3],[7,-3,-7,9,8,6,6,-8,-6,-1,10,4,-10,-10],[9,10,-5,-1,5,-6,2,10,5,-3,7,-3,3,-8],[-10,7,2,-3,2,9,-6,8,-6,-7,6,-1,-1,10],[4,10,8,1,-7,-9,2,4,-5,-7,-3,-2,-2,2]]], dtype = "int64")#candidate|3571|(14, 14, 14)|const|int64
bop_3572 = relay.add(call_3563.astype('int32'), relay.reshape(const_3571.astype('int32'), relay.shape_of(call_3563))) # shape=(14, 14, 14)
bop_3575 = relay.add(call_3564.astype('int32'), relay.reshape(const_3571.astype('int32'), relay.shape_of(call_3564))) # shape=(14, 14, 14)
output = relay.Tuple([bop_3572,])
output2 = relay.Tuple([bop_3575,])
func_3582 = relay.Function([], output)
mod['func_3582'] = func_3582
mod = relay.transform.InferType()(mod)
output = func_3582()
func_3583 = relay.Function([], output)
mutated_mod['func_3583'] = func_3583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3469_call = mod.get_global_var('func_3469')
func_3470_call = mutated_mod.get_global_var('func_3470')
call_3737 = relay.TupleGetItem(func_3469_call(), 0)
call_3738 = relay.TupleGetItem(func_3470_call(), 0)
var_3747 = relay.var("var_3747", dtype = "int64", shape = (14, 14, 14))#candidate|3747|(14, 14, 14)|var|int64
bop_3748 = relay.maximum(call_3737.astype('uint64'), relay.reshape(var_3747.astype('uint64'), relay.shape_of(call_3737))) # shape=(14, 14, 14)
bop_3751 = relay.maximum(call_3738.astype('uint64'), relay.reshape(var_3747.astype('uint64'), relay.shape_of(call_3738))) # shape=(14, 14, 14)
var_3752 = relay.var("var_3752", dtype = "int64", shape = (14, 14, 14))#candidate|3752|(14, 14, 14)|var|int64
bop_3753 = relay.logical_and(call_3737.astype('bool'), relay.reshape(var_3752.astype('bool'), relay.shape_of(call_3737))) # shape=(14, 14, 14)
bop_3756 = relay.logical_and(call_3738.astype('bool'), relay.reshape(var_3752.astype('bool'), relay.shape_of(call_3738))) # shape=(14, 14, 14)
output = relay.Tuple([bop_3748,bop_3753,])
output2 = relay.Tuple([bop_3751,bop_3756,])
func_3760 = relay.Function([var_3747,var_3752,], output)
mod['func_3760'] = func_3760
mod = relay.transform.InferType()(mod)
var_3761 = relay.var("var_3761", dtype = "int64", shape = (14, 14, 14))#candidate|3761|(14, 14, 14)|var|int64
var_3762 = relay.var("var_3762", dtype = "int64", shape = (14, 14, 14))#candidate|3762|(14, 14, 14)|var|int64
output = func_3760(var_3761,var_3762,)
func_3763 = relay.Function([var_3761,var_3762,], output)
mutated_mod['func_3763'] = func_3763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3818 = relay.var("var_3818", dtype = "float32", shape = (12, 6, 8))#candidate|3818|(12, 6, 8)|var|float32
uop_3819 = relay.acos(var_3818.astype('float32')) # shape=(12, 6, 8)
func_33_call = mod.get_global_var('func_33')
func_35_call = mutated_mod.get_global_var('func_35')
const_3822 = relay.const([-8,3,-4,-6,5,-3,-8,1,4,6,3,-3,-1,-1,6,10,-2,-2,6,-5,-5,-1,-3,4,6,-5,3,1,1,-4,-7,10,9,-8,-1,5,-1,-10,1,-2,-5,-6,-9,2,-9,6,3,5,-10,-7,6,-7,-8,-3,-5,8,2,-6,-2,-10,5,7,1,-1,7,-2,-10,1,-9,9,-9,-2], dtype = "int64")#candidate|3822|(72,)|const|int64
call_3821 = relay.TupleGetItem(func_33_call(relay.reshape(const_3822.astype('int64'), [4, 2, 9])), 0)
call_3823 = relay.TupleGetItem(func_35_call(relay.reshape(const_3822.astype('int64'), [4, 2, 9])), 0)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3824 = relay.TupleGetItem(func_3582_call(), 0)
call_3825 = relay.TupleGetItem(func_3583_call(), 0)
output = relay.Tuple([uop_3819,call_3821,const_3822,call_3824,])
output2 = relay.Tuple([uop_3819,call_3823,const_3822,call_3825,])
func_3836 = relay.Function([var_3818,], output)
mod['func_3836'] = func_3836
mod = relay.transform.InferType()(mod)
var_3837 = relay.var("var_3837", dtype = "float32", shape = (12, 6, 8))#candidate|3837|(12, 6, 8)|var|float32
output = func_3836(var_3837)
func_3838 = relay.Function([var_3837], output)
mutated_mod['func_3838'] = func_3838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3544_call = mod.get_global_var('func_3544')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_3859 = relay.TupleGetItem(func_3544_call(), 0)
call_3860 = relay.TupleGetItem(func_3545_call(), 0)
const_3868 = relay.const([[[8,-2,6,10,9,-4,-5,-1,6,4,4,-3,7,-6],[-5,10,7,-4,2,-6,-3,-9,-5,3,-2,7,10,7],[-1,-4,-10,-10,6,1,7,1,10,-8,-4,6,9,4],[-3,-5,-3,-1,-5,1,-4,-1,10,10,-4,4,-1,-4],[4,-10,-8,-3,7,-6,-4,4,-9,-10,-9,-10,-3,10],[7,-4,3,-9,-10,2,6,-10,6,10,-10,-6,-5,3],[5,9,9,-2,-9,5,-5,9,-6,-4,4,8,6,-5],[4,-6,1,-10,3,7,5,3,9,-1,-2,5,-1,-2],[-1,-8,2,2,1,8,-6,-6,-4,-10,5,-8,-8,-5],[-8,-4,1,-3,-7,-10,7,-4,10,-3,-3,9,-6,-4],[-10,1,-3,8,-8,9,-6,-8,7,-7,4,-3,-4,-2],[9,-5,5,8,3,-4,-5,-10,3,3,10,9,1,-10],[6,5,9,4,-6,-4,6,-3,2,-1,9,-7,5,2],[7,1,3,-9,-6,6,7,2,-5,-6,6,4,-5,-4]],[[-6,-6,-6,8,-3,-10,4,-10,6,-4,-4,-10,2,-6],[4,7,6,-4,-2,-2,1,-1,-9,-6,2,-6,4,9],[-9,-1,4,-4,1,5,-10,8,10,-8,2,-6,6,3],[7,6,-6,10,4,2,-1,1,-5,-5,-8,-8,7,-7],[5,4,1,-9,-6,-6,-4,-8,-7,-6,-7,9,-4,-10],[-8,-7,-6,-6,-1,-3,-5,-7,-7,-4,3,-7,1,-8],[1,-9,4,4,4,-8,-5,2,-9,-9,-4,-1,4,-1],[-3,1,8,5,-3,3,-6,-2,1,-3,3,-7,8,7],[-7,5,9,4,-6,-7,-7,-6,-1,-8,-4,-3,4,7],[-9,1,5,5,-4,9,-9,8,-7,1,-5,-10,-9,-10],[-2,-6,-1,4,5,-10,-10,10,5,7,4,-2,6,-10],[7,-7,-6,8,2,-3,-5,7,-2,-7,4,-1,-2,7],[-6,-3,6,-10,5,-10,-3,-1,8,4,-4,6,-4,6],[9,2,-2,-6,6,-1,-5,-5,5,-7,-5,-10,-3,-9]],[[-3,-3,-8,-8,1,-9,10,-8,-10,-5,1,8,6,-7],[6,6,-8,-2,3,9,3,-8,9,-2,-9,3,-3,-5],[1,-8,7,6,10,-4,-9,-4,2,-7,-10,-9,6,-10],[-5,7,-9,2,-6,1,-8,8,7,-2,-6,1,8,6],[4,-4,-10,-6,6,5,6,-10,1,2,2,1,2,5],[-2,7,-8,6,4,7,9,3,-7,8,3,-10,-3,-4],[-10,7,1,-7,-7,-6,-6,2,-6,9,-10,-5,-8,-7],[-3,7,9,7,-2,-8,9,9,-1,-1,5,-2,8,7],[2,6,-4,-1,1,-2,4,1,8,-1,10,-5,1,-4],[-5,-4,5,-2,-4,-2,3,-7,6,10,-7,-2,-2,-6],[4,-1,-10,-6,6,-4,5,7,-9,-4,-4,10,7,2],[1,-4,7,6,10,-2,3,7,1,-5,10,-7,8,-8],[3,6,-6,-1,-6,2,-8,-2,-10,9,5,-4,-5,-9],[-10,8,5,-7,4,5,4,6,2,3,9,5,-5,-8]],[[10,1,-4,-5,-3,-1,-2,-9,-6,8,-4,-1,-2,6],[-7,-6,-4,9,8,-9,8,-7,10,5,-2,-5,-4,9],[5,3,-2,9,8,5,1,6,-8,10,-1,-4,-9,-7],[-7,1,6,4,-7,-5,10,-10,6,2,10,-1,-6,2],[-4,-10,-9,-3,-9,2,-9,-8,9,-1,5,-10,-3,6],[4,7,-10,8,-2,-4,-5,4,5,4,3,10,7,4],[1,-3,9,2,9,-1,-1,3,-3,-2,10,-4,-9,2],[6,-10,-6,-3,-3,6,-7,4,-2,-3,-3,-3,1,9],[-6,10,6,1,10,-9,-1,4,2,5,4,-8,5,1],[1,-7,-10,-8,-4,-10,-3,7,6,9,1,3,-3,2],[2,-3,-5,9,9,2,6,-10,-3,-2,-10,8,-6,9],[-9,9,-6,4,5,7,-1,-7,-2,-6,6,3,-1,-9],[1,-8,1,-4,10,-10,-1,8,7,1,-2,2,6,-4],[-8,4,3,2,9,-10,-5,-3,7,-10,-7,-2,7,7]],[[-3,10,5,5,-6,-1,4,-6,-4,-5,10,-5,-6,6],[-3,7,-5,9,1,-10,-10,5,-6,3,10,1,5,9],[-3,7,9,5,-2,-5,-8,-3,-8,6,-9,-2,-9,1],[8,-7,8,-10,1,10,-10,8,2,8,-2,-3,-3,2],[-9,8,-6,10,-3,10,4,7,6,3,1,-7,-8,-3],[-5,-5,-9,-2,9,6,2,8,-5,1,-2,-1,-6,5],[-7,4,-3,-8,1,-7,2,4,9,-2,-7,-10,-5,-4],[-7,2,-7,-10,5,-3,6,9,-3,-3,-7,1,-6,-6],[9,-2,9,2,10,6,-10,2,-1,5,7,10,-1,-1],[9,-7,-7,7,-3,-4,3,-8,3,6,-4,9,8,-7],[-8,7,-8,-8,-3,3,-3,9,-8,-6,9,-4,4,-4],[3,-3,-2,10,5,4,-10,4,-3,1,1,2,-1,1],[-10,-10,-6,3,3,5,1,6,8,7,4,-5,-7,-3],[3,-8,8,-7,-2,2,4,-1,-9,-8,-8,8,-5,5]],[[2,-2,3,-10,-7,5,7,-3,5,8,3,-10,-1,3],[1,-7,9,10,9,-2,6,6,-7,6,4,-7,-10,-10],[-5,-8,-4,-1,-6,6,10,-2,7,2,6,7,2,9],[-1,4,5,-2,8,-1,-4,-2,6,1,-3,-9,-10,2],[-10,-5,-1,5,-2,-4,-2,-9,-3,1,6,-3,6,1],[-8,-2,-4,-9,8,1,-3,-2,-2,-1,1,-6,-7,-7],[3,-3,-1,-9,-1,-9,4,-9,-7,-4,-2,-7,9,2],[-4,-1,9,6,-6,-4,-7,6,-7,8,5,-4,-7,2],[4,-3,4,-3,-5,-2,8,-8,3,6,-8,-3,-8,-2],[7,2,9,-10,-9,-6,4,7,-6,-6,-10,6,-9,-3],[-5,2,2,-3,-1,-5,-6,9,9,-1,-3,-3,-1,1],[9,7,-10,5,-4,4,-1,-8,-8,-6,-2,-5,6,-8],[-8,-7,4,10,-2,9,-3,-3,-9,-1,9,7,4,6],[9,-7,6,5,-5,-5,2,-4,6,1,-8,4,8,9]],[[-3,-2,-3,-9,-2,-9,9,-5,-10,8,-4,-1,1,-2],[-9,1,-7,4,3,-7,10,-1,1,-2,4,-7,8,3],[-5,8,-5,4,5,10,-3,-10,-4,-2,6,-6,-3,-1],[10,10,-10,-7,-1,-6,1,4,-6,5,-5,5,-10,-4],[-3,-5,2,10,6,-6,2,-5,10,7,6,-6,-10,6],[1,6,-6,10,-6,9,-2,3,7,-7,9,-2,7,-6],[8,-10,2,6,-4,-6,-9,-4,-10,-2,-5,3,-2,-9],[-3,-7,-6,2,10,-8,4,-5,-10,1,6,-6,-2,-4],[-4,-3,-9,7,-5,5,-5,-10,-8,-2,-3,-10,-6,-1],[5,-3,10,5,-8,5,1,9,-5,-5,-5,3,9,9],[8,-4,-7,2,-4,-7,9,-6,-3,6,-5,9,9,-7],[5,-4,6,-6,4,10,-4,2,10,4,4,-9,3,8],[2,-2,3,-10,3,-4,5,-7,-3,-4,7,-6,2,-10],[3,-8,-5,-2,6,1,-1,10,-1,6,-8,-6,-2,5]],[[-8,-8,-5,8,7,-10,3,6,-6,-9,-3,-10,-7,5],[-1,-3,7,9,-8,-2,8,-1,3,4,-4,-8,-10,-8],[-7,8,5,-6,-5,-2,2,1,6,-1,-1,-10,-10,2],[7,10,-4,3,-2,-10,1,-1,8,3,3,-4,-8,9],[-3,9,2,-5,10,8,4,-8,-1,-10,-10,-2,-4,9],[-1,10,-1,5,8,2,7,-9,-7,9,-7,-7,-9,-2],[-5,7,-9,-1,5,4,5,3,-3,4,1,-5,10,5],[-3,4,-8,-6,-7,-7,-1,10,-4,-6,7,-6,3,9],[5,5,-1,-6,10,-5,-6,-1,-3,3,-6,-6,-10,3],[6,-9,6,-9,-2,5,8,9,4,3,5,-7,-6,3],[-7,-1,8,4,-1,10,-9,-5,9,-10,-8,-2,-8,1],[4,-2,-4,-6,1,6,-4,-5,-3,1,-6,5,-6,4],[-8,10,3,-4,4,-9,9,-1,4,-7,8,-9,1,-8],[-2,2,9,3,5,9,7,-8,-5,-1,-5,-8,-8,-7]],[[2,7,10,-4,-5,-3,4,2,1,-10,-9,7,-1,8],[1,-10,3,-9,-9,1,1,4,5,-9,-6,-5,1,-10],[9,4,3,5,3,6,6,-8,1,-4,-10,5,5,-4],[3,1,-9,-2,-10,8,-8,9,-2,-2,-3,-1,3,-10],[7,-5,7,2,2,10,-10,9,-5,-3,7,1,-6,-4],[10,7,9,10,9,-4,6,5,6,-6,-2,9,-6,1],[5,-1,9,-4,10,-6,6,10,-6,7,-10,-3,2,4],[-2,-2,-10,4,2,10,2,3,-6,1,9,-3,1,-1],[-6,4,2,7,-2,-3,-8,8,-7,-9,7,4,-10,-5],[1,-7,-3,-6,-7,-4,1,5,10,-1,-6,9,-2,9],[8,-6,-10,-7,-4,-5,-4,-1,-8,-6,10,5,-10,9],[-7,-6,2,5,5,-4,-5,-9,2,5,6,6,1,-2],[-6,-4,1,8,-4,-5,5,7,10,8,-7,2,6,-9],[-9,-7,4,-8,1,-8,8,-3,5,-2,5,-7,-5,-6]],[[-6,8,-6,2,6,4,-7,10,6,-6,-3,-5,10,-1],[-2,-8,1,-8,10,-8,-2,-2,5,-2,-7,-3,9,-9],[4,6,8,-6,9,-6,6,5,-4,-6,-1,3,1,10],[-6,10,2,5,9,7,-9,-5,4,-4,-9,1,-1,9],[10,3,-2,-5,-9,2,-6,-4,-1,10,10,-8,-4,-10],[3,8,-1,-9,-4,-5,9,-2,8,9,-6,-7,-3,-7],[3,-6,9,10,-5,-10,5,5,-5,-8,3,-2,-6,-9],[-5,-10,6,-3,-9,2,3,-4,-9,2,-6,-9,-10,9],[-2,-7,-7,-3,2,-7,-10,5,-4,4,10,9,8,4],[-9,-4,-5,5,-7,-6,-6,-7,3,2,3,-1,3,6],[8,-9,-6,7,3,3,10,-6,2,5,-7,3,2,-10],[7,-4,9,1,6,7,10,9,9,8,-1,7,7,-8],[7,2,8,-7,1,2,-6,9,9,7,5,7,6,6],[5,2,3,-4,-2,-8,10,10,-9,3,-7,3,-6,10]],[[6,5,1,1,-3,-5,-7,8,2,-3,-9,8,9,-7],[-2,8,4,-9,-3,9,5,-1,-8,10,-6,-3,-1,10],[4,8,-6,-6,-10,-3,5,-6,-7,-3,-5,9,7,-6],[-4,-10,-4,4,5,-10,3,7,-7,-8,-10,-1,3,-8],[-1,1,-1,-4,1,6,-8,-8,-2,-10,-8,5,-1,-6],[-8,5,9,7,-8,4,10,3,6,10,-8,9,1,7],[2,-6,-8,-4,-8,-4,3,-4,-5,3,-2,-9,5,8],[2,8,9,-8,7,-3,-4,-9,-4,-2,-4,2,9,-4],[-9,-2,10,-9,-4,-5,9,-5,-6,10,9,-10,-6,-9],[-4,-1,7,-6,-5,-5,1,9,-9,-3,-9,4,-2,3],[5,-2,4,3,-7,8,5,-1,3,-6,-6,-7,9,-7],[4,-10,-1,-1,8,-6,-5,8,-8,-6,-1,-3,-3,-4],[-2,5,8,-8,-8,5,2,-2,6,7,-9,6,5,-6],[2,1,8,1,-3,-6,7,-8,3,-6,-8,-4,5,-6]],[[1,-9,2,8,-7,-10,7,1,7,5,-9,-10,3,3],[-6,-8,-3,-2,6,8,9,4,-2,-2,-6,1,-7,2],[7,-7,8,-1,-2,-7,3,4,1,-7,-4,-6,-5,8],[7,1,-7,6,4,6,2,-4,9,8,5,7,-6,4],[9,3,-9,-10,5,-2,5,2,-1,2,-4,2,-8,1],[-1,5,-6,-3,-7,3,-9,8,3,1,6,-6,8,10],[-8,-9,-7,-8,-5,9,-6,-3,-9,10,10,-10,7,-5],[-5,-10,-7,1,-5,6,-9,-3,9,-9,6,-2,3,3],[7,6,4,-4,-6,4,3,-1,-6,7,-2,-6,6,-5],[2,-8,7,-3,-9,-9,-4,-6,2,7,-4,5,-1,-4],[-3,-7,-6,-5,10,-3,7,-3,4,5,-9,-8,-1,8],[-6,-10,-3,3,1,-2,8,-9,9,3,3,1,-4,-4],[-4,6,7,8,-2,-9,10,3,9,2,-4,-1,-7,-1],[-3,-6,9,6,10,8,-6,-5,2,-4,-10,1,3,2]],[[-6,1,-8,-8,-2,7,-10,-4,-5,3,-6,10,-7,-9],[3,-8,-4,10,-7,1,3,-1,-4,-9,3,6,-3,5],[-7,8,-6,1,-7,-4,-9,4,-2,7,10,-4,-8,-2],[7,10,-2,4,-7,7,-5,-10,5,-8,-9,-4,-1,-1],[1,1,-1,-3,-1,2,-3,-2,2,-5,-6,-6,8,-3],[8,-7,9,8,8,4,10,7,-5,-4,-3,-1,-3,-5],[7,-9,3,-6,3,4,-7,3,2,-5,-1,1,-9,4],[-1,1,8,-5,-6,-5,4,4,-8,1,7,7,6,-3],[-2,4,-5,-3,7,-5,-8,-3,10,6,-4,-7,4,10],[-2,2,9,9,-3,6,10,-2,-2,1,-2,-9,5,-9],[10,8,2,7,-7,7,1,-7,-5,-7,4,10,-4,-2],[6,7,-1,-9,-4,6,5,1,-7,6,7,-10,3,7],[-10,8,10,-2,-2,-4,9,10,-3,9,9,-3,-1,7],[2,1,5,-10,5,-8,4,3,-3,-9,-4,-8,6,-9]],[[-4,-8,4,-10,9,4,1,10,5,9,8,4,-6,5],[4,6,-4,-4,-4,-5,-4,8,2,-1,3,7,-7,5],[5,-5,6,5,-6,6,5,4,4,-5,9,-5,5,8],[-5,7,-3,-9,4,8,-4,1,-10,9,8,-10,1,1],[-9,9,-2,-4,-9,-5,-6,2,-9,-9,9,-3,-3,3],[-10,1,-5,-3,-9,3,7,-8,3,5,4,-3,4,-9],[6,-3,8,6,-6,-10,4,-2,1,8,-1,-8,-6,9],[4,7,10,8,3,1,3,-6,-7,9,-8,2,9,8],[10,5,5,-3,3,-3,7,8,7,6,2,-2,4,2],[5,-1,7,-8,-10,-7,4,9,-6,-9,1,-7,-3,-5],[-4,-2,-9,3,-9,-6,3,1,-3,-7,9,4,-3,5],[1,-5,-9,5,10,-1,10,-7,3,10,-10,7,-5,9],[1,6,-6,-8,-7,-10,-2,7,10,-6,-2,9,5,1],[-8,-10,8,2,8,-8,4,4,-9,-9,-7,-2,-3,-2]]], dtype = "int64")#candidate|3868|(14, 14, 14)|const|int64
bop_3869 = relay.less_equal(call_3859.astype('bool'), relay.reshape(const_3868.astype('bool'), relay.shape_of(call_3859))) # shape=(14, 14, 14)
bop_3872 = relay.less_equal(call_3860.astype('bool'), relay.reshape(const_3868.astype('bool'), relay.shape_of(call_3860))) # shape=(14, 14, 14)
func_3329_call = mod.get_global_var('func_3329')
func_3333_call = mutated_mod.get_global_var('func_3333')
const_3881 = relay.const([-2.250414,9.914873,0.395004,7.846849,1.843322,4.107613,-0.131233,-0.518328,-5.435439,1.106524,-4.513452,9.549492,-5.144256,9.671720,-3.640533,-0.183169,9.442326,8.573765,-5.540019,7.460989,-9.748740,-1.683985,0.222371,-9.917264,-8.135753,5.962214,6.107407,8.341116,-7.911761,2.657816,-0.665554,-7.216306,-5.736751,-6.450551,-8.944341,-3.369021,4.518798,8.454920,7.992078,-0.113330,1.743905,-2.800435,3.680023,-1.812125,-0.721718,-1.710468,-2.435241,-9.388404,-3.357240,2.249998,6.704683,5.699982,-8.676046,1.221768,-8.084431,2.583586,-0.427890,9.374698,-2.795473,3.171230,4.646727,0.932677,-4.416261,-1.201849,-8.403884,-2.730312,7.782793,-8.946431,-9.218018,9.812431,-5.464101,0.486868,-2.977571,-4.165036,-6.342805,-8.199799,1.161885,7.047231,8.168911,9.002741,7.832798,1.293645,5.706872,9.588149,-8.723198,7.879375,3.949404,0.184745,7.703247,-0.254869,3.252996,2.459109,-2.821573,0.869039,0.926670,-2.593675,-2.951272,6.000288,8.779151,0.164696,-0.995788,-3.981962,5.671238,6.289978,9.816749,6.066134,-0.016965,-4.530589,6.496367,2.709322,-7.036731,-7.744308,1.454205,-5.874403,-6.897791,-6.990643,-3.011685,-0.473244,-1.489752,-1.072738,-2.677878,3.998788,5.377018,0.718163,5.484801,1.470190,-6.784818,-0.539125,0.925170,3.719464,-3.012022,-7.213859,-0.333635,9.813432,0.400204,7.729974,6.792972,-3.178418,-8.777462,5.780854,-9.524305,9.594527,-9.136587,5.747570,-3.152061,9.154790,-3.632584,-2.300971,2.363338,-6.015516,9.614183,-9.450388,-4.833353,1.915206,-0.914020,-4.472648,4.566101,-2.236446,5.949746,-5.102102,-4.499722,-6.567809,8.912946,8.749644,-8.456144,5.341529,3.655935,-0.516881,3.941270,-1.789320,0.467999,-3.627997,-6.725133,-5.130639,-8.709728,-7.078092,3.992021,-6.596372,5.933024,3.331177,5.213534,2.595124,-3.178901,-0.549309,-4.450459,9.936391,2.326347,-1.492710,-0.895069,4.975175,1.540875,9.920139,-5.752155,-3.309897,-4.951537,-0.968416,-2.272254,-6.988777,1.732740,-9.175583,-6.592793,2.335387,-5.994572,6.232806,9.963904,3.308166,-4.400945,0.993712,-1.567357,-9.504346,2.400313,-4.311704,2.010751,-3.272899,8.328770,-1.269122,-1.221301,7.252534,4.998381,-7.483727,1.929844,-2.464002,-7.632056,4.013072,2.314792,3.530505,-7.747799,-0.040413,5.960036,-1.889282,-5.281728,-4.535040,6.464379,1.337850,-4.919370,5.226342,7.876108,-9.685318,2.905254,3.000222,9.452839,4.827638,-4.288374,1.238400,-4.836010,6.778546,-6.713676,3.229567,4.241554,0.882146,-1.632350,-2.735291,-6.488205,-0.436793,-2.715458,-0.441559,-7.408208,1.795577,3.049550,-5.777955,-0.257577,-4.622664,3.829811,-0.766829,-4.886436,8.461467,-0.444786,2.436343,-2.556964,-0.326297,8.480691,-4.971846,-0.344891,-9.936782,3.161389,4.296866,-5.101978,-6.635513,-4.531310,0.091722,-6.701614,8.192843,-1.186534,2.222211,-6.341398,6.513487,-8.695273,-6.459336,7.508398,9.592689,8.928774,-0.218653,-0.663782,-0.100634,-8.005587,-4.290857,-0.813134,6.152407,-9.822667,6.390068,5.495187,-5.434899,-2.010939,-8.321528,5.490651,-0.281302,2.464714,0.103634,-5.540684,-6.844508,2.660016,5.473267,-4.940416,-0.368334,-4.808266,-3.475758,-0.710222,3.967722,5.741099,-4.619890,8.430529,5.696808,1.477121,5.948885,-1.468705,-0.379931,-1.290025,3.276755,4.071068,6.714971,6.091355,6.957611,-1.468287,2.992244,-4.136688,-1.800274,-7.129020,-7.485915], dtype = "float32")#candidate|3881|(338,)|const|float32
call_3880 = relay.TupleGetItem(func_3329_call(relay.reshape(const_3881.astype('float32'), [2, 13, 13]), relay.reshape(const_3881.astype('float32'), [2, 13, 13]), ), 0)
call_3882 = relay.TupleGetItem(func_3333_call(relay.reshape(const_3881.astype('float32'), [2, 13, 13]), relay.reshape(const_3881.astype('float32'), [2, 13, 13]), ), 0)
output = relay.Tuple([bop_3869,call_3880,const_3881,])
output2 = relay.Tuple([bop_3872,call_3882,const_3881,])
func_3885 = relay.Function([], output)
mod['func_3885'] = func_3885
mod = relay.transform.InferType()(mod)
mutated_mod['func_3885'] = func_3885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mutated_mod.get_global_var('func_3885')
call_3886 = func_3885_call()
output = call_3886
func_3887 = relay.Function([], output)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3469_call = mod.get_global_var('func_3469')
func_3470_call = mutated_mod.get_global_var('func_3470')
call_3888 = relay.TupleGetItem(func_3469_call(), 0)
call_3889 = relay.TupleGetItem(func_3470_call(), 0)
output = call_3888
output2 = call_3889
func_3890 = relay.Function([], output)
mod['func_3890'] = func_3890
mod = relay.transform.InferType()(mod)
output = func_3890()
func_3891 = relay.Function([], output)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3906 = relay.TupleGetItem(func_3582_call(), 0)
call_3907 = relay.TupleGetItem(func_3583_call(), 0)
output = relay.Tuple([call_3906,])
output2 = relay.Tuple([call_3907,])
func_3911 = relay.Function([], output)
mod['func_3911'] = func_3911
mod = relay.transform.InferType()(mod)
mutated_mod['func_3911'] = func_3911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3911_call = mutated_mod.get_global_var('func_3911')
call_3912 = func_3911_call()
output = call_3912
func_3913 = relay.Function([], output)
mutated_mod['func_3913'] = func_3913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3469_call = mod.get_global_var('func_3469')
func_3470_call = mutated_mod.get_global_var('func_3470')
call_4002 = relay.TupleGetItem(func_3469_call(), 0)
call_4003 = relay.TupleGetItem(func_3470_call(), 0)
func_683_call = mod.get_global_var('func_683')
func_689_call = mutated_mod.get_global_var('func_689')
var_4015 = relay.var("var_4015", dtype = "float32", shape = (10, 96))#candidate|4015|(10, 96)|var|float32
var_4016 = relay.var("var_4016", dtype = "float64", shape = (896,))#candidate|4016|(896,)|var|float64
var_4017 = relay.var("var_4017", dtype = "int8", shape = ())#candidate|4017|()|var|int8
const_4018 = relay.const([4,2,3,-7,-10,-1,7,2,6,8,-8,1,4,-10,-4,-6,-4,2,-8,2,-7,5,-5,-6,10,6,-7,-6,3,-9,3,-7,-6,6,-2,-9,1,3,-10,-9,-4,-2,4,-9,-6,-5,-6,7,3,-5,2,-4,-10,9,7,-2,-4,2,-2,4,1,-6,2,-8,-7,-2,9,-1,2,-8,-9,1,-5,-9,4,-5,-3,-2,4,-3,-3,1,-10,10,2,2,8,-5,4,10,-9,3,-5,10,4,-2,8,-8,6,10,-8,1,8,9,-2,-2,-3,3,-7,-7,6,-8,3,-1,-8,6,5,-1,3,-5,-6,-6,-1,7,3,10,3,2,-6,4,-7,-9,8,-5,8,6,8,-5,2,-6,-5,-4,6,6,-10,5,1,-10,-4,3,-7,-7,2,4,3,-9,-8,-9,-1,-6,3,10,7,-6,7,4,8,-10,5,-4,-6,9,8,-8,-10,1,8,-9,1,10,5,-3,5,-5,7,-1,4,9,-5,-2,3,-10,3,10,7,4,-1,-6,8,9,3,-2,-9,1,-8,-2,-4,-4,2,-3,-1,10,3,2,-9,1,-2,-9,4,8,-2,-4,1,-5,1,1,-6,6,6,3,1,-7,4,6,5,9,4,-4,-1,-9,1,-4,10,-6,-10,-2,-2,-3,-5,4,3,-7,-9,4,-10,-2,-1,-7,8,7,-4,-6,10,-3,-8,-6,2,-10,4,3,-4,-6,1,8,-1,-7,4,1,3,-10,3,-4,1,8,-7,-1,5,-8,1,6,-10,6,6,-9,-3,2,9,1,-9,5,-9,8,2,-10,1,6,9,-7,-9,-6,9,8,-5,8,-9,9,-9,-4,5,5,-2,-9,-3,9,-7,4,-4,-6,3,-2,-8,2,10,-6,2,2,2,-6,-10,-7,-10,4,5,-3,-7,3,-10,1,-3,-6,10,-10,1,-9,2,9,9,6,-5,-4,-7,-8,-4,-6,7,5,-10,-2,-2,2,-7,6,6,1,2,-6,4,4,2,-4,-4,8,3,-6], dtype = "int8")#candidate|4018|(384,)|const|int8
call_4014 = relay.TupleGetItem(func_683_call(relay.reshape(var_4015.astype('float32'), [6, 10, 16]), relay.reshape(var_4016.astype('float64'), [896,]), relay.reshape(var_4017.astype('int8'), []), relay.reshape(const_4018.astype('int8'), [384,]), ), 4)
call_4019 = relay.TupleGetItem(func_689_call(relay.reshape(var_4015.astype('float32'), [6, 10, 16]), relay.reshape(var_4016.astype('float64'), [896,]), relay.reshape(var_4017.astype('int8'), []), relay.reshape(const_4018.astype('int8'), [384,]), ), 4)
uop_4020 = relay.atan(call_4002.astype('float64')) # shape=(14, 14, 14)
uop_4022 = relay.atan(call_4003.astype('float64')) # shape=(14, 14, 14)
func_1028_call = mod.get_global_var('func_1028')
func_1030_call = mutated_mod.get_global_var('func_1030')
const_4033 = relay.const([6.011417,-4.795890,4.785606,2.097505,3.539229,1.622504,-6.793921,-2.129513,9.111440,-3.235648,3.329441,2.910317,-8.055576,-8.348313,-0.560389,-2.557625,2.058229,8.178614,0.670864,0.021459,9.794171,-7.779879,2.636723,5.071878,-4.286093,-8.376404,-4.363571,-5.643311,-8.221798,2.594300,8.524980,-1.310661,-2.361794,4.765515,-5.000240,-1.056849,9.482240,-8.857198,7.494273,2.441617,1.951403,3.958334,2.653203,-1.811917,-3.728204,5.500208,2.243157,-2.930805,9.280475,-1.730284,5.594564,4.886035,8.028322,1.710740,5.231026,-5.861645,-9.611149,0.560675,-0.291864,-3.541044,2.627266,-6.506053,5.754450,-2.656042,-4.708221,5.416187,6.348359,3.991557,-2.699285,0.521319,8.160665,-5.485014,1.828486,-8.497995,4.843897,-8.664127,-0.745482,-0.985691,2.887232,-8.349052,2.474297,8.894865,6.085440,4.275381,-0.288589,8.076654,9.978794,7.851108,0.218729,-7.855446,-7.099011,2.406783,6.879195,8.370560,-4.300229,-8.777320,6.831424,-9.915240,-4.191799,-1.063111,-2.435878,8.921097,1.981006,-0.034488,-1.824888,8.460930,5.420861,2.889840,-2.383429,-9.804943,-1.719742,-1.557689,-7.510745,-1.813801,3.720352,1.152273,7.171594,2.269502,-6.795914,1.386929,-8.320851,2.011895,-2.573008,-9.094340,7.041113,6.973293,6.293565,8.638365,4.196776,4.780156,-7.160907,-4.500063,4.902585,-8.307494,-7.261574,-1.093002,8.038521,-2.380597,-3.835011,-4.523105,8.717043,6.044754,-5.200429,1.073357,4.046659,-4.667924,7.828633,9.770097,-6.484412,-5.794967,7.113429,0.031785,5.333606,-3.084832,-0.015939,5.965962,0.583767,-4.393276,-5.066881,0.223629,-4.703888,4.097148,-5.557791,-2.140564,1.518734,8.329982,7.336115,9.415152,9.408589,-9.767759,-3.165839,7.099561,0.421604,8.724667,6.200002,6.558735,-8.686457,-5.157806,6.823848,8.374457,5.713695,4.520108,3.079205,8.837101,5.083321,-7.818536,-7.267232,2.800673,-1.669598,2.914914,4.391379,3.886303,1.816306,-2.087461,0.989058,9.985390,9.533419,0.206293,8.244408,4.474507,9.258567,1.042175,1.164334,7.799042,4.881012,-3.997563,0.326090,6.808210,3.744573,3.760835,3.274616,2.085413,0.774570,-5.117934,-1.999420,8.271630,2.157436,3.095191,0.218312,-8.934442,0.494870,8.972514,8.786996,8.305066,4.606411,3.544277,-7.227337,9.446979,7.627747,-3.097937,5.291487,5.287912,-0.988070,6.954213,8.990756,0.183460,-7.845820,3.818633,4.222512,-8.581416,7.060526,5.958336,0.574367,-2.100135,-6.696735,-5.233187,-3.165004,5.125335,-6.433285,4.403936,-2.132052,-5.820671,8.096309,-5.460117,-7.603390,1.856458,-3.463785,4.289468,6.769325,3.549204,5.817543,8.592871,5.256605,-1.920809,-4.825057,-9.833489,-6.963080,9.200180,-4.471287,-2.073753,5.156899,3.224449,3.343108,0.903089,-6.631360,-3.918372,-1.330184,3.414530,-9.463764,5.538233,7.445796,-3.085788,-2.057574,-6.126211,5.602295,9.144302,-6.454742,9.421241,-5.027415,4.375876,3.111681,-8.356009,6.809835,8.704624,9.643252,-4.739673,-8.193651,8.189430,4.301380,-6.353738,-2.846425,3.097618,-3.835024,-3.985117,1.096815,6.928276,-4.955640,-6.271839,6.434671,3.664402,-3.103984,-7.763922,-5.470720,6.755415,0.673231,4.788485,5.624176,-1.661730,1.177347,-1.399167,-4.391976,2.545340,9.908442,6.145148,2.587060,-6.749536,-4.220301,0.965147,-6.992792,-3.014010,-6.705846,3.700446,-4.663219,7.743603,7.066264,-4.750222,9.622007,-9.483181,5.169266,8.732447,-2.838753,-4.175937,-5.010878,-9.465505,-7.324004,-3.073066,-2.849750,7.263203,-0.664439,-0.289839,-1.259581,7.655579,-5.045656,6.573377,1.488292,-8.530255,-1.068438,5.127137,-6.013069,9.994934,-9.061087,0.459153,4.874540,-9.822844,0.690992,2.210561,6.152165,9.934088,-6.684356,-6.387201,-1.775055,-2.840425,0.670647,3.280741,4.243622,5.284831,1.742707,-1.469919,1.903536,-6.917496,2.436136,-4.077334,-3.824420,-4.268066,-9.555424,6.732708,6.773003,0.788268,7.017114,1.482969,0.092742,-5.965388,8.010287,-1.868098,0.454778,-6.864188,-5.782156,-4.644734,-3.953859,-7.916400,2.928409,1.058431,6.141391,9.710072,-0.785965,0.509127,8.061607,-0.625839,-4.801124,6.454762,2.392462,-2.600984,0.952774,-8.778114,8.425838,-2.978784,-2.199994,4.211115,6.325800,-5.206817,4.252572,0.259852,-0.045942,-7.508840,-3.040453,-6.085813,9.359546,-8.495024,0.921219,-4.429774,1.730015,0.054206,6.665828,2.434744,-5.262249,-1.215963,9.266502,-0.813693,5.944981,-8.258300,4.021067,5.305401,9.730117,7.481170,-2.496993,7.921373,-2.468434,-4.883211,8.413874,-4.552963,0.278627,-8.711710,2.520397,-2.293867,9.563207,-0.995878,-5.919992,6.574345,2.341788,-2.447364,-6.051328,7.176638,9.465232,-8.495464,9.729662,-6.081655,9.965122,4.357841,7.838822,7.008906,-6.438501,5.312658,6.421846,-8.325431,1.383883,8.362281,-6.147848,2.197908,-3.379064,6.174938,-1.874944,-8.531516,-4.073505,-8.649576,-7.951157,-5.116962,-6.828981,9.157021,-8.655141,-7.799994,-0.581869,7.621887,7.940121,-1.008387,4.405081,5.142985,5.041605,8.525706,-9.018735,-7.913149,-9.078013,4.258389,-5.392837,-6.789670,2.803233,9.759141,-9.353577,-1.982384,4.836449,6.714322,-9.727777,-8.885825,5.486933,8.691874,-7.339446,-6.673158,-0.529912,3.954383,-4.375067,4.398314,-5.517897,6.046674,-0.666480,-9.622354,0.060372,-4.687780,9.986689,6.359526,-2.399793,-1.008117,-1.993599,0.688628,-6.376514,-6.120675,1.482263,-5.305137,-4.420466,-8.389065,-6.275887,-3.538490,5.184183,9.023224,2.235733,9.636484,-5.560333,-9.392363,-4.809971,4.234948,-5.791738,2.509357,-1.781384,-9.441955,4.589819,1.840668,6.887115,5.108849,-4.057517,3.319246,-6.325368,7.747688,-3.126683,5.843653,-8.479038,-3.267228,-1.422837,-9.442319,7.069369,7.925664,0.457488,-8.171317,-1.117424,6.417603,5.752261,5.425550,2.279028,-7.558510,-7.162296,-5.078177,-2.265206,-2.324703,-1.268677,2.653908,4.187955,1.170618,0.463707,3.047710,6.648043,-5.639083,-9.230765,-8.524136,3.570989,2.789642,7.892165,-0.142355,-7.931981,-3.386593,0.485612,2.528905,6.914885,1.914332,-9.101106,-9.403205,-8.911399,-5.557976,-9.486024,-7.971965,9.903850,-0.996046,-2.417767,5.512192,1.148985,6.646377,3.255937,6.752062,4.212492,-8.841228,1.066264,-0.434663,7.531394,-7.181810,4.712529,5.125261,0.942764,3.376768,-6.206026,-7.748199,3.499342,-0.938612,-6.324284,6.561906,4.996135,-6.915566,-9.007952,-3.807283,1.980602,-2.694666,6.112646,-5.190097,4.717432,-8.364444,-9.754658,7.168707,4.144351,-6.008201,3.828837,0.879622,2.112200,2.551166,-2.815971,-2.766525,2.087253,0.337109,-4.047502,1.956028,5.942429,-3.297313,-5.822854,8.915366,0.669845,-2.918364,4.421764,7.780793,3.287837,4.005826,-3.967870,5.000599,-3.184688,7.472480,-6.278364,-2.303122,-0.188636,3.746461,-3.501920,-2.719309,5.824749,-1.516565,6.602157,5.909030,-3.768586,-6.048006,-7.548676,-4.021784,-2.880058,-0.251523,-2.808729,8.775006,1.664013,-1.114240,7.331127,8.945934,4.255786,-4.916196,-5.100776,7.868300,-4.297687,0.966965,2.530734,2.219031,9.577219,9.895487,-8.403170,9.317059,6.103974,4.020666,-4.769722,4.652204,-8.168688,-1.320866,-5.253008,2.844033,-8.379326,6.836501,9.247346,0.933307,-7.485318,-4.636672,3.511092,-1.077651,9.380461,-8.733068,9.720168,6.847540,1.640426,-3.862962,9.687539,-1.448924,-2.914850,-2.838992,-3.384981,3.359279,-8.095522,6.834627,4.190248,-8.866837,8.495255,-7.342322,5.481424,-6.802096,-3.397739,-8.744762,-0.174252,1.985667,-1.957298,-4.046008,9.315973,-8.137795,-1.325613,-8.987018,7.214557,-9.084826,7.848037,3.667471,3.469763,7.091270,-3.814727,3.550266,-3.480465,-9.228000,-5.560153,7.329223,-4.674974,9.942736,6.366765,-4.563476,0.373708,4.550224,6.375446,9.747820,-4.528262,-4.398256,-0.949076,3.739081,-5.893088,7.912713,0.187531,4.304813,-6.942888,-2.784058,-1.378920,8.938800,5.206625,-4.179700,6.238382,8.594904,-0.038073,4.175021,-4.812529,6.309207,-7.443461,4.098660,3.604146,7.755174,-7.460543,5.901246,-8.622780,-4.271908,1.424109,-7.647466,-2.270013,-7.170844,-2.298815,6.517413,-1.417225,2.504190,5.513104,-4.856404,8.998271,6.873631,7.463001,-9.542992,5.561060,-9.046797,0.795530,0.181531,-1.884025,-3.401327,9.119543,9.316759,-6.384770,-5.202345,-3.828583,-1.980640,-3.095091,3.946179,-4.995056,9.816476,-1.303535,-7.462927,9.108628,4.700448,1.474784,-7.993866,8.661155,4.398573,-6.548256,9.148899,-2.896374,1.745706,4.499011,2.434690,-3.656809,4.832877,-2.262154,6.022663,-9.970869,3.292307,-3.616107,-1.966336,-2.270221,-0.612918,-6.835089,6.230059,3.196638,2.394321,0.698686,0.497718,-9.340266,-8.203845,-8.878540,-1.511735,-4.373201,6.197528,7.363570,-1.242300,1.983631,-5.769430,-0.819864,-3.828038,-2.127404,7.968787,-3.555389,-0.685249,3.995175,2.232256,-3.056752,-7.737344,-4.535876,1.270932,-7.313363,2.875575,-5.650253,9.766258,2.548566,6.750943,1.356163,6.685181,9.082300,-8.698165,-6.888692,-0.511896,6.558984,6.697874,-5.138225,1.473146,-2.126528,-9.190847,2.078950,7.219428,-2.389337,-0.448362,7.582944,5.471044,3.970548,-0.005088,-4.368766,-5.185300,0.580013,7.652862,5.156116,-7.276292,7.613981,-5.248506,-7.799365,1.311607,-3.141562,5.141568,2.749842,-4.343255,-8.710227,-9.409315,-5.739479,0.665805,-9.707034,7.842381,1.905144,6.528272,1.103901,4.311164,2.257597,-9.618583,3.591489,-6.607224,-3.248476,4.304655,1.490598,0.985459,6.140634,8.410818,9.305625,0.902624,6.186993,8.968874,-5.247056,-6.094218,7.986531,-2.324303,-8.125377,2.295948,9.107710,-3.809243,-0.153050,-5.514317,-7.940105,7.086590,9.950887,-1.493588,9.771155,5.767967,6.235409,-6.840198,-9.536472,1.788041,8.156752,0.982021,9.714718,6.091795,-4.784037,8.582487,1.939191,-2.789076,0.213077,2.382554,9.033922,6.177060,2.841540,4.908234,-2.110439,-3.966117,-8.953712,-7.004218,7.447885,4.006811,-5.448658,-4.657549,-4.790561,-4.978760,-5.365640,-9.856869,-7.136842,-1.733044,4.802057,7.434954,-0.081294,5.740768,2.250831,-1.451069,6.009466,-9.493728,6.842545,-4.671677,-1.642184,4.227184,-2.264657,-2.513524,6.383286,-5.422860,-0.992667,-2.266998,-1.165788,2.251157,-3.691299,-5.844926,-1.214403,6.098681,-4.982329,4.323552,-6.504972,0.424343,-6.939794,2.481528,-5.186021,3.014836,3.702839,8.606537,3.912844,9.058478,-0.418270,-4.603606,7.140791,-8.040474,7.703000,-7.558251,3.571126,-6.802290,3.781772,7.958105,-7.770204,-3.135492,9.865518,4.284077,0.697236,-2.425704,-9.771809,-3.663137,-2.132928,8.632965,-9.870325,4.257900,0.159645,0.663927,3.933765,-0.478498,8.562288,7.445859,-2.964484,-1.366455,8.480256,-2.086927,8.872809,8.229568,9.418188,4.884459,-4.985725,6.967169,-5.597055,-4.269966,-6.383929,9.893645,-8.675846,-0.050105,5.685756,-9.217213,1.347407,2.861728,7.214121,-2.087572,0.527896,-7.966802,-6.138096,-2.476370,-3.252916,-8.365278,6.361554,9.824031,-9.135921,8.146695,-7.101735,-3.173194,-7.672995,-4.871971,4.598849,-1.896804,-4.273804,-5.509565,7.889907,8.992192,-2.773875,-6.146207,-6.172867,2.420850,9.368240,-0.474913,-0.733082,1.122357,-6.677772,-2.054507,-9.977004,7.129469,0.057904,4.491524,-1.453825,-5.235096,-0.070306,-5.437053,-3.649980,8.510671,-8.076117,7.838488,-5.484475,6.749237,-0.556224,-0.004397,9.999063,5.580403,-7.945285,9.484340,-4.803038,2.509599,-1.069660,0.964384,9.517815,-1.472112,-2.066931,-4.583589,-9.367632,-1.511840,1.462790,8.011936,-3.211157,0.069238,1.535594,1.648734,-4.013103,-7.135340,-6.856713,-6.238195,-8.855672,-2.870729,-5.283834,3.373694,-4.835345,-8.617983,5.816836,-0.804589,-4.535656,-2.350771,-8.448194,3.579175,-1.932210,7.259839,8.647190,-1.358420,-4.149483,6.551324,7.446764,0.350279,-3.351582,6.606973,0.345752,7.079742,5.149176,5.637244,4.186773,-2.561185,-0.353533,-0.214040,6.722002,8.530990,1.736693,4.977641,-5.773873,8.292624,-4.335552,-7.602756,-0.687577,7.148401,2.447899,-6.534950,-7.296107,-2.773075,-2.923717,-0.876152,0.421607,-0.383371,-2.952452,5.731318,-7.728619,7.336849,3.678072,3.441722,4.031566,9.911485,0.977248,5.502969,-7.562070,1.825950,8.804415,3.868502,2.429253,4.992192,1.596294,-0.327382,4.860475,-1.331799,0.602170,4.197464,-9.640646,4.725165,-9.586099,2.130810,-7.952542,0.068625,8.055044,-2.131954,-1.324056,-5.652862,-0.254535,-7.213012,2.243430,-5.276937,-6.062926,5.978513,-8.785217,-4.964964,-4.502937,-1.097994,-8.148426,-5.526394,-0.937697,7.671849,-1.932045,-4.365209,-7.275351,5.159708,3.494119,4.124525,3.918364,-0.258844,1.870001,-4.052681,7.014631,2.079508,-4.623845,3.699114,-6.167541,-4.420410,-0.774747,-0.337043,9.099300,-9.610015,9.899714,-7.909671,6.979441,7.232918,7.482254,-5.901557,-1.977665,7.226537,0.890156,8.542090,1.092450,-3.218009,-5.090459,-2.108223,-4.073910,-8.411065,-2.706764,-9.204893,4.447075,6.521536,1.956992,4.278502,4.741456,3.069668,9.552883,-4.513112,-3.610885,6.074774,5.982785,-8.744315,-4.615005,-2.094873,1.710593,-2.822262,-0.415787,7.342917,8.944217,9.582289,1.948423,7.239167,6.904192,8.338566,1.938352,-9.112362,6.145184,-2.013778,6.260884,-3.537844,-2.990499,7.195759,-7.590950,-0.449585,-3.419728,-6.133476,-4.596891,-6.562998,-9.077116,4.617847,-4.293328,-4.875845,-7.770694,-1.484329,6.953912,-5.868669,7.353756,-4.108546,3.628663,-0.540331,-1.423819,8.269207,-3.653488,-0.426415,-6.247470,-9.113417,0.094122,-8.322038,-1.343099,3.575851,7.995770,6.040714,-5.978625,1.525820,-8.046609,8.718505,-8.386082,-4.041420,-9.298547,5.814412,-8.987237,-1.701125,9.766039,-5.033035,6.894556,4.350570,9.509323,8.777065,2.214254,9.930033,-2.982676,-9.551950,-7.645446,-5.372101,-7.669953,4.834480,7.247186,-0.554167,-9.045998,-9.976512,6.328692,-0.159347,-9.457149,-8.742739,-0.859996,-2.616168,-7.639810,-5.420263,5.476292,2.487925,-3.308496,-3.210218,-1.570817,-7.866313,1.867002,-4.476366,6.740778,-0.057512,3.580018,5.868304,-5.787426,-5.289526,-2.954089,8.828001,3.613959,5.190881,7.925225,-1.954329,3.911045,-8.644043,0.277645,3.723518,-6.187556,6.159841,-8.698339,6.329249,-7.088658,2.095676,-9.796879,-5.728436,2.153772,-4.291783,1.466442,3.679271,7.122563,-8.835835,-9.445178,8.983999,8.228240,-4.253515,4.785658,-0.504567,-8.054291,0.892461,5.786330,-7.973637,0.911523,1.799458,6.686501,5.666771,5.310122,-4.055234,6.174585,-3.285378,-8.382135,-7.187317,-1.122187,1.496951,-3.285981,-0.378671,-1.585032,6.000995,0.301981,-8.321719,2.049438,6.171498,5.504206,-7.915537,-8.864340,4.415655,-1.879929,-6.731721,5.708590,2.458558,-1.847587,8.484676,-1.987632,9.172065,9.517849,2.947125,0.656533,3.141472,-5.837086,-3.621234,-5.355414,2.254769,4.489315,-8.329849,7.592393,2.142339,8.535417,-3.292990,9.359690,5.428264,8.165703,3.047769,6.348560,-7.375882,-8.107075,-0.041593,-3.679418,6.324840,-8.223202,-9.554672,8.184501,2.916856,-4.429028,5.880222,4.955691,0.909105,8.362090,-9.380380,2.365458,-2.493932,0.195809,9.815895,-5.381630,7.268339,-5.187916,-6.796961,3.576490,-7.742167,8.995269,0.196753,-0.645131,2.732105,4.703216,-8.873445,-9.316298,8.700323,-0.464979,-7.933615,8.341948,5.688646,7.771115,-8.324536,5.555136,5.730306,-4.448050,-6.951435,1.190565,-2.556240,3.443835,1.884222,6.205333,1.155628,2.405326,-4.860003,8.459999,-8.572297,7.507150,-0.709772,8.734666,2.950154,-8.020157,-6.107123,0.404106,4.826741,-2.408420,8.777825,2.636498,1.567451,-6.805561,2.662719,1.959665,-3.504196,-8.352565,6.895409,-9.498868,5.397287,-0.759135,-4.735214,-1.651933,-2.832021,6.271760,-2.887922,-8.084210,2.231163,5.443419,4.857869,5.289136,9.692412,-5.203013,4.131203,8.885795,7.166102,8.584241,-2.782148,8.311212,-2.097785,-7.447480,1.940669,-5.045146,7.034400,-5.929687,-5.045490,-9.959118,5.603936,-3.372783,-2.666036,-1.239311,-9.216506,7.135389,0.073672,1.024779,4.255689,3.320054,7.125941,-8.706107,2.858135,8.780793,-0.727778,-3.578099,-5.511498,-0.713122,-8.476877,-8.272751,-5.249769,7.019437,9.562027,6.836912,-2.063831,1.417249,-4.188336,-7.499330,-9.413858,8.018367,-5.308647,9.359346,0.835651,3.446472,-7.705551,-0.156718,3.137884,-2.935351,-6.193068,-9.692870,-9.586210,-3.987346,4.782672,3.083850,-0.969678,-6.180103,-6.408140,7.672024,6.709011,7.454259,7.571037,3.711700,-1.285108,8.697447,0.252486,3.381025,2.456892,1.895219,9.982466,3.049195,6.821247,-2.274804,3.427754,9.167946,-5.680246,-5.855187,-8.450839,-1.346080,0.836824,-1.296132,8.303561,1.383427,5.256531,9.956963,6.067443,7.054146,-9.527625,-0.728712,9.180623,0.179005,-4.566539,2.701135,9.957376,5.310851,1.596917,3.667558,-3.207910,-0.905405,9.760256,-9.363803,-7.198997,-3.027478,0.801196,-8.056566,-9.124723,-7.138649,4.713928,-2.177937,7.610225,9.845834,1.822518,-6.782060,1.193351,0.622403,-3.631461,5.825694,8.379040,-5.713620,-3.419832,-9.365706,-4.337038,-8.841078,-7.332327,-5.874388,-6.316220,2.878019,-6.493180,0.824958,-7.755740,8.851095,-7.947522,1.753814,-2.058620,-5.090095,-0.836870,5.244952,5.426938,-1.130581,-3.264216,-6.188962,-6.271456,-5.269404,4.542090,4.882244,5.865601,-7.076344,5.606037,0.232441,8.002748,8.689575,-1.924714,-9.940384,-8.552830,-6.803386,1.419001,5.749814,-7.717040,0.102716,-7.261867,7.378549,5.405990,0.257246,1.700087,-6.934286,6.241214,-7.513186,-4.420604,9.662641,7.836665,-7.607811,-3.760968,-9.910711,5.446167,-1.187215,-7.103288,8.238012,-0.070092,3.862431,-9.125458,-1.077692,2.140531,0.187522,-8.934445,-0.330698,-7.002624,-2.313760,-5.944982,3.214686,-5.586949,2.396652,2.613110,-7.049867,-6.889145,2.457277,9.143352,-0.506245,-5.519928,7.693318,-8.852185,-5.195961,-7.896327,-1.620731,-5.278485,-3.725070,2.306058,0.900612,3.401928,-7.955682,2.641538,-2.482354,-8.430188,8.962057,-6.710509,6.028072,-4.962660,-2.838432,-1.334943,-0.558162,-6.899341,-7.735057,-7.741066,4.938100,6.883755,8.071487,7.683439,-6.344666,-4.134265,5.270619,-1.705091,-8.225081,-4.384326,9.573215,1.593070,8.951923,-8.552850,7.497806,-9.555281,-3.962400,6.228013,-3.915163,1.181734,-1.582523,9.213269,8.611747,-1.480400,-3.958880,-3.390050,3.653198,3.860260,0.197600,-1.350265,7.196340,5.993711,3.757410,9.814343,-1.746450,-2.420169,9.787103,-0.996117,1.082318,-7.811466,1.534946,8.531703,-9.082929,-8.914440,-3.781516,-1.289949,3.148351,-1.640850,-9.467399,-7.365985,-0.704247,6.677391,-7.290698,-5.520940,-3.739409,-7.841602,3.448852,3.959006,-3.877911,-1.636313,-8.249734,-7.250834,-5.613103,-9.882192,8.559243,1.120868,4.782574,6.470123,-2.697735,4.925105,-1.892206,1.040562,7.843448,2.967882,-3.658178,1.354822,-1.725670,-0.169800,-5.708735,-3.153749,0.767941,3.901587,-4.275058,5.576741,2.822961,-4.132929,-8.340657,2.748440,-9.775984,2.619065,-6.380694,9.574011,1.581913,-6.587381,1.688615,7.123916,-6.520006,1.452076,5.096171,-0.507203,-0.817120,-8.527331,-8.241686,-7.273705,-8.153352,5.539987,-1.345197,2.771933,-2.331061,1.216704,-6.025170,-1.048223,-6.824854,-2.619583,-2.365205,-1.068821,1.873944,1.388070,-0.329441,-7.520703,-7.531854,-4.721287,-6.658655,-0.698109,1.107558,-4.556705,-8.752153,-0.884528,0.045016,-9.073255,9.080470,-6.681521,1.238378,-9.819475,3.280854,-6.292225,-4.677613,5.928738,-2.632176,0.132573,4.871997,-2.699167,6.060602,-3.969674,9.439370,-0.279689,3.058176,8.944526,5.931838,1.046679,-6.936598,-2.260649,-7.727578,0.242722,5.800201,-3.923422,0.242250,-5.660891,6.469914,1.653543,0.208588,-3.703405,-2.110636,7.632838,6.364264,-8.600511,-0.843936,9.600001,-6.186332,2.155152,8.480023,8.217064,-9.109219,2.425167,-8.194902,-6.362417,8.873059,9.282476,-0.042407,8.133082,8.741991,6.079413,-1.748056,-8.798056,-4.900103,-9.334831,9.123396,-4.323455,6.074829,6.226105,-0.265472,2.299004,-8.689249,0.801890,4.381774,3.155876,-2.513629,-0.362990,0.727123,-1.954984,-2.087098,9.820972,-5.737657,-3.970987,-0.789381,8.738423,8.496043,-3.695918,8.802443,5.712379,-5.377579,1.614920,3.699767,7.832282,-4.500186,-7.041601,-6.966687,-0.680579,0.746227,-0.651552,9.097052,-5.212509,-9.192386,-4.876438,-8.109421,-1.113004,-8.585734,-4.130305,8.944610,-8.024811,8.538744,-0.063978,8.797890,-5.930924,7.826157,-0.839932,-2.827241,-6.789232,2.217356,2.391822,-0.002140,-2.700545,7.212929,-4.980403,-4.953850,2.338453,-9.554490,5.911913,-3.750009,-6.575021,-3.167994,-8.712822,-3.687241,9.218556,-8.566926,8.328440,-3.976885,8.910713,-8.882765,-9.454324,3.525360,-6.547489,0.952213,6.084117,6.484726,-5.174260,-6.190382,2.615517,2.419492,-7.996445,0.712290,-6.628992,4.067036,0.431159,9.511959,-3.468470,9.077864,-9.235523,-2.018411,3.561571,-9.314513,3.453371,-4.844938,3.044997,3.143757,2.745667,9.107157,-3.464606,-7.230265,1.311011,6.153933,-7.987888,-7.051797,7.540702,-1.227733,9.980101,-9.052919,7.665462,6.896782,-9.281225,-5.989517,5.643373,8.989271,-3.230110,7.784982,-3.760806,7.576581,-1.551735,5.372700,-4.330043,-5.730455,-5.759147,-5.709783,0.748162,-9.570593,-9.695165,-0.724254,7.453763,3.543060,4.796155,2.906397,1.956850,-2.483853,-8.823142,7.897281,8.146043,-4.293010,3.033203,0.413329,-5.936962,-2.275641,-5.001004,-3.772599,4.000727,8.916814,2.086958,-5.063621,0.403230,-4.257000,-1.679317,-2.412744,5.738860,-2.928776,4.743814,6.901550,5.267174,-2.831446,-0.454023,9.971540,-1.777299,-0.651547,5.834994,-9.111404,0.149241,8.619413,-0.866825,5.635071,-7.261578,-1.876752,5.505851,-4.536622,-3.559910,-1.789117,7.126244,-0.291456,-7.072978,6.444996,5.410630,-1.801338,-5.516367,-2.427662,5.480686,-7.392692,7.362274,3.384670,9.543866,-3.883952,-6.958606,-3.455703,-3.673470,9.290991,-4.825180,1.961326,-8.745272,-9.980097,9.924486,-9.597741,4.974714,-8.582589,6.050132,2.350361,9.573850,-0.634750,4.013180,-6.078592,4.609306,-2.659740,-3.060796,1.508765,-6.438496,-0.508158,1.575427,-5.058676,8.494623,2.521684,3.442293,0.963570,-1.290327,-8.063919,4.344272,-3.182001,0.633479,-0.291985,-2.240177,-4.714469,5.397076,-7.217874,4.436222,4.746929,3.759512,-1.792923,-7.750306,-0.086121,3.606221,-6.501486,3.620592,-0.533861,5.818976,-1.716553,-5.992076,-5.511663,0.943060,-3.985817,-5.672951,-2.864945,1.427361,-9.792032,-9.269254,-2.715266,6.886966,-8.732869,3.579138,1.410761,8.988461,-4.769182,9.814757,-8.267736,5.576158,7.727244,-1.929476,-0.721143,-4.090151,2.629802,8.118113,4.546356,-2.270888,1.793042,-8.105612,8.352259,-7.829200,4.246287,-7.195792,1.496944,1.489814,3.636648,-9.312251,7.400891,-6.209153,6.001863,-5.430123,0.244673,2.396736,5.670781,2.429045,7.370731,-4.923500,6.856712,-3.297148,1.748631,-3.482245,-3.002226,-3.249547,1.957592,-8.235755,-4.779608,4.119576,-9.593423,-0.621384,-4.072878,-8.387085,0.634582,2.310782,2.028897,1.873456,2.746101,-5.169368,-9.954444,9.048440,1.692919,4.746180,-9.808435,6.166455,6.985360,-3.538624,-0.925873,8.737261,-5.014001,-1.526010,9.814597,-0.703092,4.086285,-2.176178,2.716297,-3.965356,8.425500,-2.891625,-3.520094,-0.260838,3.947673,-2.655599,5.983506,2.648503,-5.414280,-9.968685,-0.770215,-4.662144,9.359280,6.483627,-5.646291,8.290354,6.487678,4.397756,-2.943668,3.644007,3.164287,6.874712,-6.656899,-3.113744,-5.709954,-5.651397,2.408034,8.575805,4.074859,2.557108,-2.048551,1.224002,-5.368556,7.030556,5.209107,-5.241502,-1.097329,9.769315,-1.517285,4.155912,-6.830067,1.050716,-1.037112,-9.031513,-1.829299,2.902761,9.599679,-1.945159,-8.580217,-6.812267,1.162925,-3.517597,-7.619073,-5.446587,2.785340,5.203654,3.105854,7.477278,6.539368,7.672399,4.284081,-1.616509,0.178339,-2.550166,5.422382,4.416232,8.547080,-2.282459,-0.296335,-6.545464,2.498859,5.247302,1.503918,-4.787502,4.657367,-0.949342,6.655768,3.636461,8.732903,-6.188944,-7.071333,4.985784,3.210462,7.460285,-9.030505,9.773805,4.638029,-9.671250,9.823393,-4.989625,-2.660452,5.724268,0.911882,4.305189,-6.142976,8.868223,2.143461,-0.872812,9.649642,-1.674935,0.160598,6.431715,3.132584,4.212662,-1.540331,6.010557,-8.426015,-5.256022,0.949755,4.469182,7.249859,-3.910882,1.471125,6.063103,-9.596582,9.710181,1.859146,-0.153869,-7.939449,8.328908,0.252173,-1.599664,0.597947,-0.142117,-9.385340,-1.742648,-3.291078,-9.366774,8.502076,-6.278273,-1.577622,-9.069952,-7.353197,-2.898618,-2.203857,-3.210743,-6.708815,-7.512038,8.767687,-9.358285,-2.237684,-4.346361,8.683080,-2.250908,-4.130643,-9.823179,-6.050261,1.774199,5.781259,-2.215543,3.540629,-8.899971,9.595156,-1.170829,8.381338,-4.620338,4.757136,-1.514374,0.554875,-8.715084,-3.511868,-2.970060,1.981155,0.710035,0.834441,-4.697028,-3.536298,-4.944783,0.693720,9.473378,9.746140,-2.354194,-1.267765,4.453873,-4.852676,4.846887,-9.133767,4.324431,5.410508,9.401292,-2.542289,-3.926897,-1.947615,-1.961685,3.975244,-4.428818,0.221380,2.460199,8.510608,-5.866966,-5.952222,-3.974149,3.681060,-1.673057,7.755905,-0.728684], dtype = "float32")#candidate|4033|(2496,)|const|float32
call_4032 = relay.TupleGetItem(func_1028_call(relay.reshape(const_4033.astype('float32'), [13, 16, 12])), 0)
call_4034 = relay.TupleGetItem(func_1030_call(relay.reshape(const_4033.astype('float32'), [13, 16, 12])), 0)
func_3059_call = mod.get_global_var('func_3059')
func_3063_call = mutated_mod.get_global_var('func_3063')
var_4045 = relay.var("var_4045", dtype = "bool", shape = (560, 2))#candidate|4045|(560, 2)|var|bool
const_4046 = relay.const([[0.595444,-6.960288,-0.423969,-6.665505,1.147683,4.030616,-6.090308,-9.605027,0.820740,2.548579,-7.372233,-3.347672,7.491157,-1.372214,5.494329,4.505917,2.389340,9.915779,-5.186233,-7.619881,3.012020,-5.299904,8.619966,-0.201200],[-0.775472,8.019120,5.263958,-9.362214,8.890731,-2.947345,-4.181378,4.987433,-4.376507,3.350950,-7.906178,-5.418338,-4.423503,-3.592397,2.968921,-0.481515,-5.706323,-5.754738,2.002615,-3.608943,-9.573460,6.620302,3.182915,-0.637595],[6.232015,-6.994115,4.920283,-5.482757,-6.771728,-3.383253,4.286866,6.161950,-8.669499,3.824416,-7.144557,-5.736382,0.747301,6.093403,-6.655009,-1.090489,-7.119818,5.613970,8.179955,3.511436,-7.794261,3.935623,-3.591351,-6.577399],[-9.427101,-1.208220,4.314995,6.857973,-5.903721,4.484334,0.750874,-1.697081,7.939993,5.779405,2.029012,-5.949633,-2.171495,0.741748,-8.598744,0.228671,-2.446551,7.680883,-7.090876,-8.414336,-0.756028,5.773735,5.504403,5.667795]], dtype = "float64")#candidate|4046|(4, 24)|const|float64
var_4047 = relay.var("var_4047", dtype = "float32", shape = (975,))#candidate|4047|(975,)|var|float32
call_4044 = relay.TupleGetItem(func_3059_call(relay.reshape(var_4045.astype('bool'), [8, 10, 14]), relay.reshape(const_4046.astype('float64'), [96,]), relay.reshape(var_4047.astype('float32'), [975,]), ), 3)
call_4048 = relay.TupleGetItem(func_3063_call(relay.reshape(var_4045.astype('bool'), [8, 10, 14]), relay.reshape(const_4046.astype('float64'), [96,]), relay.reshape(var_4047.astype('float32'), [975,]), ), 3)
uop_4060 = relay.log10(uop_4020.astype('float32')) # shape=(14, 14, 14)
uop_4062 = relay.log10(uop_4022.astype('float32')) # shape=(14, 14, 14)
func_3836_call = mod.get_global_var('func_3836')
func_3838_call = mutated_mod.get_global_var('func_3838')
var_4068 = relay.var("var_4068", dtype = "float32", shape = (576,))#candidate|4068|(576,)|var|float32
call_4067 = relay.TupleGetItem(func_3836_call(relay.reshape(var_4068.astype('float32'), [12, 6, 8])), 2)
call_4069 = relay.TupleGetItem(func_3838_call(relay.reshape(var_4068.astype('float32'), [12, 6, 8])), 2)
func_3760_call = mod.get_global_var('func_3760')
func_3763_call = mutated_mod.get_global_var('func_3763')
call_4070 = relay.TupleGetItem(func_3760_call(relay.reshape(uop_4060.astype('int64'), [14, 14, 14]), relay.reshape(call_4002.astype('int64'), [14, 14, 14]), ), 1)
call_4071 = relay.TupleGetItem(func_3763_call(relay.reshape(uop_4060.astype('int64'), [14, 14, 14]), relay.reshape(call_4002.astype('int64'), [14, 14, 14]), ), 1)
func_3469_call = mod.get_global_var('func_3469')
func_3470_call = mutated_mod.get_global_var('func_3470')
call_4083 = relay.TupleGetItem(func_3469_call(), 0)
call_4084 = relay.TupleGetItem(func_3470_call(), 0)
bop_4090 = relay.minimum(uop_4060.astype('uint16'), relay.reshape(uop_4020.astype('uint16'), relay.shape_of(uop_4060))) # shape=(14, 14, 14)
bop_4093 = relay.minimum(uop_4062.astype('uint16'), relay.reshape(uop_4022.astype('uint16'), relay.shape_of(uop_4062))) # shape=(14, 14, 14)
output = relay.Tuple([call_4014,var_4015,var_4016,var_4017,const_4018,call_4032,const_4033,call_4044,var_4045,const_4046,var_4047,call_4067,var_4068,call_4070,call_4083,bop_4090,])
output2 = relay.Tuple([call_4019,var_4015,var_4016,var_4017,const_4018,call_4034,const_4033,call_4048,var_4045,const_4046,var_4047,call_4069,var_4068,call_4071,call_4084,bop_4093,])
func_4095 = relay.Function([var_4015,var_4016,var_4017,var_4045,var_4047,var_4068,], output)
mod['func_4095'] = func_4095
mod = relay.transform.InferType()(mod)
mutated_mod['func_4095'] = func_4095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4095_call = mutated_mod.get_global_var('func_4095')
var_4097 = relay.var("var_4097", dtype = "float32", shape = (10, 96))#candidate|4097|(10, 96)|var|float32
var_4098 = relay.var("var_4098", dtype = "float64", shape = (896,))#candidate|4098|(896,)|var|float64
var_4099 = relay.var("var_4099", dtype = "int8", shape = ())#candidate|4099|()|var|int8
var_4100 = relay.var("var_4100", dtype = "bool", shape = (560, 2))#candidate|4100|(560, 2)|var|bool
var_4101 = relay.var("var_4101", dtype = "float32", shape = (975,))#candidate|4101|(975,)|var|float32
var_4102 = relay.var("var_4102", dtype = "float32", shape = (576,))#candidate|4102|(576,)|var|float32
call_4096 = func_4095_call(var_4097,var_4098,var_4099,var_4100,var_4101,var_4102,)
output = call_4096
func_4103 = relay.Function([var_4097,var_4098,var_4099,var_4100,var_4101,var_4102,], output)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4110 = relay.var("var_4110", dtype = "float64", shape = (2, 8, 7))#candidate|4110|(2, 8, 7)|var|float64
var_4111 = relay.var("var_4111", dtype = "float64", shape = (2, 8, 7))#candidate|4111|(2, 8, 7)|var|float64
bop_4112 = relay.power(var_4110.astype('float64'), relay.reshape(var_4111.astype('float64'), relay.shape_of(var_4110))) # shape=(2, 8, 7)
func_683_call = mod.get_global_var('func_683')
func_689_call = mutated_mod.get_global_var('func_689')
var_4117 = relay.var("var_4117", dtype = "float32", shape = (960,))#candidate|4117|(960,)|var|float32
const_4118 = relay.const([4.548934,-0.170764,2.625824,-6.821715,5.031786,-8.761224,-1.038251,-0.785151,5.118802,-8.007366,-9.282520,6.789902,-0.226785,-1.589809,4.543208,-8.533493,-6.972092,5.816336,6.139495,1.025837,9.033777,1.266919,0.974252,-4.463562,3.699311,-5.653589,9.729338,-5.737591,3.791875,3.083398,5.669669,1.829232,6.257721,4.040417,4.662398,7.167281,-2.877706,-7.302099,-7.405423,4.696589,7.898136,4.377888,6.744236,-7.962403,-5.585811,4.811272,5.772157,9.845404,2.077798,3.878715,-7.359037,9.164051,2.592268,-5.895561,-5.306366,-6.397048,2.438181,3.850306,0.862460,0.597633,9.525293,4.469604,-8.544683,0.736912,7.434838,-6.412607,3.194005,2.237713,4.305491,-8.528026,2.403096,0.124620,4.044323,7.302926,5.779612,-1.847184,7.007880,7.938626,3.679360,-9.708165,-5.174201,-0.538752,-5.277577,-4.152405,1.509920,-8.493660,9.005483,2.164167,-1.086381,-3.386757,-6.779487,-7.467866,-9.239631,3.448228,7.582063,8.879036,-7.003182,5.051849,6.450824,-0.850728,7.483310,8.422184,-3.126914,8.198836,3.231534,-3.658059,-4.888034,8.001343,7.181358,-8.070943,-4.538850,-6.303747,2.337095,-4.673027,5.348149,1.804776,5.883505,-6.441183,-8.006399,-8.837467,7.267268,7.781425,0.126651,-0.893946,3.291155,0.608132,-6.728059,-0.279796,-2.358162,-3.863740,3.489385,-3.415662,-6.566107,-0.063793,-6.352384,-7.603214,-5.441836,0.382873,7.931686,-9.244170,1.528122,-9.091244,0.035374,6.298411,5.955639,0.245092,-0.621462,5.382859,-7.382357,3.528771,-0.140423,-2.317185,7.157911,3.774733,-3.337803,8.719122,6.105292,0.925018,-4.300016,-3.783366,7.754522,-5.276467,0.614847,-7.739681,4.024885,-3.860598,-4.373836,-4.493491,4.882922,-0.972422,7.834777,2.499769,7.216158,6.764393,4.280616,-9.429815,-5.422723,-6.505097,-1.391186,0.359016,-9.287832,-6.867160,1.077996,-5.176119,-4.590149,-9.870906,-7.647249,-1.156429,-7.738178,0.299588,-8.633297,-0.965251,-2.618927,-9.277730,-2.003893,2.039317,-1.788419,9.551662,-8.048631,-8.977528,-6.131807,6.401429,-8.421146,-1.060207,2.327526,-7.196300,8.381890,-3.720736,-9.388920,2.076299,1.040443,2.505856,-3.749852,1.130861,0.399631,5.186321,-6.558516,-1.505794,-9.064116,9.453357,0.017307,9.254684,7.639224,-7.408022,3.907802,-2.488437,-2.542799,-8.970718,-4.022175,-2.422658,9.708431,7.093343,-9.696057,-3.207286,-9.395610,-4.686243,2.738316,5.549051,-3.861969,-6.870573,5.471863,-4.114897,2.220285,-7.808428,-3.823839,3.357272,-7.539073,7.217017,-6.040782,5.432778,6.567339,-7.798521,-6.496084,1.546333,-0.342157,-1.789014,-7.660472,1.041900,5.864056,5.985156,-0.679105,5.033070,6.752682,1.408946,-5.593987,1.671844,6.227641,-6.450965,2.924739,-6.491282,-9.924139,4.005216,0.454366,-0.811514,-9.638030,-1.928651,-5.244043,5.446374,-0.669130,4.768570,3.729950,-9.233750,3.831526,-7.536225,0.069019,-5.958485,9.530295,-5.862760,-5.640693,0.211940,9.680735,-0.222164,0.214749,3.750004,-4.519635,-2.500579,2.796053,-7.004165,-7.202250,8.687744,8.472521,8.984073,3.382128,1.670661,-1.945475,-8.413241,-0.708008,9.312153,-7.926795,7.656635,0.567228,9.796845,9.835197,6.908772,-3.110326,5.745144,-1.456807,1.569426,-7.179806,-0.004797,5.261652,-5.837476,3.735805,-1.369558,2.920414,-6.417899,0.573529,1.348364,-6.776505,-8.658547,-4.284371,-3.293345,-8.729788,-9.555413,8.069756,0.203666,-9.177082,-0.998488,4.817430,4.003995,4.534858,-7.677216,8.695147,9.823696,-4.403571,9.822234,7.352288,-9.931975,0.213189,-9.314402,8.876919,9.104539,-7.020713,7.451595,-9.731909,-9.448346,-5.251645,7.565592,-6.777163,1.628568,-3.596581,0.674539,6.579936,-7.989748,5.236550,2.649011,-4.393200,-7.379775,-0.543214,4.165270,-7.393888,-6.920071,-3.292323,1.355909,-8.676984,7.215334,1.051778,-6.072119,-1.684037,1.583320,-5.019282,-0.629881,6.824347,1.986451,-7.990791,1.123857,-2.998836,-7.032112,4.376781,2.217950,-0.782558,-5.192475,-6.818070,-8.400793,5.802535,-8.988338,-4.743473,7.185835,8.630992,-7.900909,4.777185,-5.645754,2.237076,-2.715032,-4.925371,1.494125,-4.226429,-9.704414,-2.050271,-9.374771,-2.590840,7.790158,1.007548,5.606222,4.878473,8.848202,7.883926,-8.746297,-9.339323,1.572490,2.709523,8.300550,-8.618314,-7.394201,7.025267,0.951924,2.123636,-0.695091,5.202132,2.546988,0.707100,9.406158,-1.863216,-8.639625,-1.701822,-7.539166,-5.693261,5.288213,1.470078,8.742911,-1.438532,2.216695,-5.315820,9.852336,6.143506,-9.137037,2.034040,5.000356,-2.303712,-2.366724,9.684456,-2.525427,-1.211886,-7.770337,2.628514,-2.252470,-2.440451,5.896958,-1.424431,-0.152508,6.344205,-3.226020,-0.058015,-8.500707,2.230641,4.121905,3.500146,-9.148295,-7.782347,-5.165837,9.824973,7.654575,-1.594543,-4.044747,9.429619,-0.352001,6.974121,4.009562,-3.321195,-1.102817,-4.728109,-2.713664,4.644307,-4.941480,1.327497,1.579221,5.117243,2.098739,0.728260,-1.172211,-6.926693,6.439963,-4.836173,-8.738732,5.036873,-0.395658,-6.174546,9.683625,-8.604829,0.875101,-3.284590,-1.649118,-9.096660,2.294638,5.096446,-7.299410,-3.101143,3.386487,7.175079,5.229981,1.447606,-0.023457,-4.724450,5.209520,3.675707,8.625508,-0.574569,-3.589309,5.956759,-9.342236,1.633741,-0.782973,8.442160,-3.373018,1.818981,5.168643,-9.314337,4.032615,4.412513,3.175711,8.439394,9.489544,-2.817307,-6.954286,0.261404,-2.742990,-1.453910,0.381164,-8.722059,-6.301327,2.417407,-6.920985,4.338286,9.778453,4.075715,-3.701454,9.444004,-4.659023,2.572204,5.451474,6.059758,8.977161,-4.658944,8.817549,8.830596,0.098687,4.023857,-3.926351,6.243185,-1.589235,-3.563262,2.373393,-6.192875,4.658679,0.096408,-3.677521,-7.625615,-4.606917,-1.369176,6.352668,0.883511,6.182072,1.221375,8.772258,2.302064,2.163616,-2.633532,5.385517,-6.524907,-8.988519,9.842467,-1.038459,9.567104,-0.241685,0.854537,5.255963,-7.485366,9.732493,-0.557461,-6.327587,-7.549811,7.930859,8.973392,8.955836,2.501487,6.574607,9.834524,-9.831132,-8.954708,-5.137689,-8.058870,-3.032496,-7.561055,-6.015193,-5.804739,-9.878764,-4.438464,-7.280378,-8.397873,3.948947,1.058625,-6.012543,7.088298,3.894698,-8.012343,3.972755,3.866600,2.631694,9.695030,-7.466359,4.932697,1.839913,-9.867978,3.339229,2.946767,-3.578070,7.095184,0.055339,9.428121,-1.520075,8.446306,2.928794,4.330898,-7.326131,-6.817317,-5.512523,-5.898685,-0.148342,2.674088,3.155141,-5.749876,-7.391253,9.562373,-9.746657,-8.143877,-8.850972,-2.453365,9.957654,-1.304409,2.758319,-8.956442,-6.603938,9.194257,-6.594849,-6.930405,5.890571,7.251664,-8.371216,-8.793389,-1.021309,2.288722,-5.000880,-7.490396,6.169772,7.530544,8.150682,4.623373,-6.602147,-5.734010,8.535172,6.872168,-1.633549,-5.496753,1.480710,0.444442,-5.705054,-6.590639,7.178704,-2.107451,3.048707,1.419083,2.222617,7.710984,7.459762,-9.515983,-1.034712,5.719644,1.093910,-3.934914,-5.076183,-3.038453,-4.124425,5.077071,6.815141,7.401990,-9.304729,0.948889,7.768792,0.469436,0.471095,0.511136,3.749427,-3.380705,3.550157,7.056546,-1.841279,-5.059476,-5.699840,-9.115317,5.239263,9.513726,-2.864635,2.358388,3.664723,-5.277957,3.366870,-1.619960,7.302733,6.715608,6.634730,-9.044653,-4.389940,2.614962,6.875815,-3.875172,1.759962,-0.408637,-7.049552,8.917898,-8.035568,-4.096574,7.703016,5.003757,5.466197,1.268582,1.089453,9.389042,-6.245847,2.841141,-3.535984,-3.684932,9.683172,-2.368552,9.763805,6.134269,1.615384,4.513078,-7.532052,4.851505,3.684643,8.383199,8.440619,-1.304076,0.550874,4.405911,2.853801,9.680335,-3.308843,-7.945285,9.411621,3.456824,-6.166856,2.311445,2.971259,-3.465544,-3.137827,-5.548440,-7.145980,3.464273,-5.751377,-7.995417,1.012096,-9.680698,2.852126,1.154040,-9.824082,6.108060,3.695935,7.052976,-5.750941,7.029525,3.473223,-8.139991,-7.292535,1.621261,-0.577740,-3.056177,2.444612,6.799093,4.809337,4.142094,6.524407,-9.083917,-0.395128,-2.797490,-5.538706,5.617002,7.099252,7.171995,5.596750,-6.207937,-8.377892,5.111007,8.600773,-8.179751,5.297983,-7.724969,2.357649,3.510930,-5.020300,-7.869398,3.635947,6.816040,6.186937,-5.998063,4.420961,-9.359951,0.257186,-6.070739,-6.305440,-3.091749,-9.262029,-6.338590,7.734911,3.312439,1.493517,-3.265309,3.396516,9.029965,2.571646,-2.110031,-4.480872,-8.123293,-1.684214,-5.612349,-0.265310,1.598634,0.743504,-6.628593,0.741285,4.315626,5.650630,-7.068420,9.317022,0.231137,7.220138,9.712107,-0.257443,-6.755834,-0.143269,0.077222,6.903008,-9.650260,-7.598197,6.363743,-3.366728,2.945494,7.895762,3.370408,1.064337,2.183175,-3.938907,7.068971,-8.068288,9.252032,-6.883414,0.424648,9.233269,2.227917,-6.044903,-1.565640,1.661579,-9.344209,6.759252,8.866612,-4.451100,0.179525,6.731270,5.651897,-1.124390,8.723006,6.141100,-9.314760,-5.632365,6.533789,7.376791,1.749912,6.318814,8.203321,8.764668,3.924816,2.285097,-4.970459,1.474046,-5.791713,6.276198], dtype = "float64")#candidate|4118|(896,)|const|float64
const_4119 = relay.const(7, dtype = "int8")#candidate|4119|()|const|int8
const_4120 = relay.const([[-7,2,7,-3,8,-6,-4,2],[-10,1,4,3,7,9,3,3],[-2,-5,-8,-9,8,-1,-6,-4],[-9,-8,-6,-6,5,9,1,-8],[-6,-1,-1,1,10,6,6,-2],[4,-9,-3,5,10,-7,-7,3],[-10,-10,-7,-2,4,2,-9,4],[-6,-6,-7,8,9,8,10,1],[-6,-1,-3,-9,-3,6,5,7],[-10,10,-6,-5,-4,2,4,4],[-6,2,-9,8,-2,-4,-4,-8],[-4,4,-9,-6,1,8,1,5],[6,9,-8,9,-1,7,-4,2],[7,9,-6,-8,-4,2,8,-3],[5,-4,-10,1,6,9,-4,9],[8,7,4,8,-4,3,10,-10],[1,5,7,-3,5,4,-2,3],[2,1,-7,-5,-3,-5,-8,5],[-1,9,6,2,3,-3,8,2],[-5,-7,3,-3,2,-9,-5,10],[-5,-5,-2,-2,-10,7,-10,9],[5,6,-9,4,9,4,8,-1],[4,3,10,10,-2,-1,9,8],[5,1,4,-7,-1,-8,-6,1],[2,5,-9,3,3,6,3,3],[-7,-4,-2,-4,4,1,9,-10],[-5,-5,2,-8,2,-7,5,5],[-6,2,1,-10,-6,-5,-2,5],[9,-4,10,4,-5,8,-2,-3],[-3,-6,-1,-1,9,1,8,1],[-8,8,6,-9,-4,-2,-2,-5],[-1,9,-9,-8,-4,-2,-7,-4],[5,-4,-8,1,-1,-10,-9,6],[-8,-4,5,7,-3,6,9,8],[3,-4,-4,-3,-9,8,10,10],[10,4,7,9,-10,1,-6,-1],[10,10,-2,9,-7,-9,-10,2],[-2,7,10,9,-10,7,-9,5],[-6,3,9,7,-8,1,-7,10],[-1,-9,1,-9,10,7,6,1],[6,-10,-6,10,-5,-4,4,-2],[-8,-6,-10,-2,-2,-2,-10,2],[6,2,3,8,1,-2,7,-1],[-6,-6,3,7,-4,6,9,-1],[-2,-9,-2,-2,-10,-1,-8,-1],[-9,-1,4,8,6,-3,3,-1],[4,-9,8,3,-6,4,5,10],[-2,-8,10,4,1,-2,9,9]], dtype = "int8")#candidate|4120|(48, 8)|const|int8
call_4116 = relay.TupleGetItem(func_683_call(relay.reshape(var_4117.astype('float32'), [6, 10, 16]), relay.reshape(const_4118.astype('float64'), [896,]), relay.reshape(const_4119.astype('int8'), []), relay.reshape(const_4120.astype('int8'), [384,]), ), 0)
call_4121 = relay.TupleGetItem(func_689_call(relay.reshape(var_4117.astype('float32'), [6, 10, 16]), relay.reshape(const_4118.astype('float64'), [896,]), relay.reshape(const_4119.astype('int8'), []), relay.reshape(const_4120.astype('int8'), [384,]), ), 0)
output = relay.Tuple([bop_4112,call_4116,var_4117,const_4118,const_4119,const_4120,])
output2 = relay.Tuple([bop_4112,call_4121,var_4117,const_4118,const_4119,const_4120,])
func_4122 = relay.Function([var_4110,var_4111,var_4117,], output)
mod['func_4122'] = func_4122
mod = relay.transform.InferType()(mod)
var_4123 = relay.var("var_4123", dtype = "float64", shape = (2, 8, 7))#candidate|4123|(2, 8, 7)|var|float64
var_4124 = relay.var("var_4124", dtype = "float64", shape = (2, 8, 7))#candidate|4124|(2, 8, 7)|var|float64
var_4125 = relay.var("var_4125", dtype = "float32", shape = (960,))#candidate|4125|(960,)|var|float32
output = func_4122(var_4123,var_4124,var_4125,)
func_4126 = relay.Function([var_4123,var_4124,var_4125,], output)
mutated_mod['func_4126'] = func_4126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_4156 = relay.TupleGetItem(func_3532_call(), 0)
call_4157 = relay.TupleGetItem(func_3534_call(), 0)
var_4174 = relay.var("var_4174", dtype = "int64", shape = (14, 14, 14))#candidate|4174|(14, 14, 14)|var|int64
bop_4175 = relay.floor_divide(call_4156.astype('float32'), relay.reshape(var_4174.astype('float32'), relay.shape_of(call_4156))) # shape=(14, 14, 14)
bop_4178 = relay.floor_divide(call_4157.astype('float32'), relay.reshape(var_4174.astype('float32'), relay.shape_of(call_4157))) # shape=(14, 14, 14)
output = bop_4175
output2 = bop_4178
func_4184 = relay.Function([var_4174,], output)
mod['func_4184'] = func_4184
mod = relay.transform.InferType()(mod)
var_4185 = relay.var("var_4185", dtype = "int64", shape = (14, 14, 14))#candidate|4185|(14, 14, 14)|var|int64
output = func_4184(var_4185)
func_4186 = relay.Function([var_4185], output)
mutated_mod['func_4186'] = func_4186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_4188 = relay.TupleGetItem(func_3532_call(), 0)
call_4189 = relay.TupleGetItem(func_3534_call(), 0)
func_2388_call = mod.get_global_var('func_2388')
func_2391_call = mutated_mod.get_global_var('func_2391')
const_4199 = relay.const([[True,False,False,True,True,False,False,False],[True,True,False,False,False,True,False,True],[True,False,False,False,False,False,False,True],[False,False,True,False,False,False,False,True],[False,False,True,True,False,True,False,True],[False,False,False,True,True,False,False,False],[False,False,False,False,False,False,True,False],[True,False,True,True,True,True,True,True],[True,False,True,False,True,True,True,True],[True,True,False,False,True,False,False,True],[False,False,True,False,False,False,True,True],[True,False,True,False,True,False,True,False],[False,False,False,True,True,False,False,False],[True,True,False,True,True,False,False,False],[False,False,False,True,False,True,False,True],[True,True,True,False,True,True,True,True],[True,True,False,True,True,True,True,True],[False,False,False,True,False,False,True,True],[False,False,False,True,True,False,False,True],[False,False,True,True,True,False,True,False],[False,True,True,True,False,True,False,False],[True,False,False,True,True,True,False,True],[True,False,False,True,True,True,False,True],[True,True,False,False,False,True,False,False],[True,False,True,True,True,False,False,False],[False,False,True,True,True,False,True,True],[False,True,False,True,False,False,False,True],[True,True,True,True,False,False,True,True],[False,True,True,True,True,True,True,True],[True,False,True,False,False,False,True,True],[True,True,False,False,True,True,True,True],[False,True,False,False,True,False,False,True],[True,True,False,False,False,True,True,True],[True,False,True,False,False,True,True,False],[False,True,False,False,False,True,True,False],[False,True,True,True,True,True,False,False],[False,False,False,False,True,False,True,True],[False,False,True,True,True,False,True,False],[True,True,False,False,False,True,False,True],[False,True,False,False,False,True,False,False],[True,True,False,True,True,True,False,True],[False,True,False,True,True,True,True,False],[False,True,False,True,False,True,False,True],[False,False,True,True,True,True,True,True],[False,False,False,True,True,False,True,True],[True,True,True,False,True,False,False,True],[False,True,False,False,False,False,True,False],[True,False,True,False,False,True,True,False],[True,True,False,False,True,True,False,False],[False,True,False,True,True,True,True,True],[False,True,False,False,False,True,False,True],[False,False,True,False,True,True,False,False],[False,False,False,False,True,False,False,False],[True,True,True,True,False,False,False,False],[False,False,False,False,False,False,True,False],[False,False,False,True,True,False,True,False],[True,False,False,False,False,False,False,False],[True,False,True,True,False,True,True,False],[False,True,False,False,False,True,False,False],[False,False,False,True,False,True,True,True],[True,True,False,False,False,False,False,True],[False,True,True,True,False,False,True,False],[False,False,False,False,True,False,False,True],[False,False,True,True,False,False,False,True],[False,False,True,False,True,True,True,True],[False,False,False,True,True,False,True,True],[False,False,True,True,False,True,True,True],[False,False,False,False,False,False,True,False],[True,True,False,False,False,False,True,True],[False,False,False,True,False,True,False,False],[True,True,True,False,True,False,True,True],[False,True,True,True,True,False,True,False],[True,False,False,False,False,False,True,False],[False,True,False,False,False,False,False,False],[False,True,False,True,False,True,False,False],[False,True,True,True,True,True,False,True],[True,False,True,True,False,False,True,False],[True,True,False,True,False,False,True,False],[False,True,True,False,False,True,False,False],[False,False,False,True,True,False,False,False],[False,True,True,True,True,False,True,False],[False,False,False,False,False,True,False,False],[True,True,False,True,False,True,False,False],[True,False,True,False,False,False,False,False],[True,True,True,True,True,True,True,True],[True,True,True,True,True,True,False,False],[False,False,True,False,True,True,False,False],[True,False,False,True,False,False,False,True],[True,True,False,True,False,False,False,True],[True,False,True,False,True,True,False,False],[True,False,False,True,True,True,True,True],[True,False,False,True,False,False,False,False],[False,True,True,False,True,True,False,False],[True,True,True,True,False,True,True,True],[True,True,False,True,False,False,False,True],[False,False,False,False,True,True,False,True],[False,True,True,True,True,True,True,False],[False,False,True,False,False,False,False,True],[False,False,False,False,False,False,False,False],[True,False,True,False,True,True,True,True],[True,False,False,False,False,False,False,False],[False,False,True,False,False,True,False,False],[True,False,True,False,True,True,False,False],[True,True,False,True,True,True,False,False],[True,True,False,True,True,False,False,True],[False,True,False,True,False,False,True,True],[False,False,True,True,True,False,True,True],[True,True,False,False,False,False,False,False],[True,False,True,False,True,True,False,True],[False,False,False,False,False,False,False,False],[False,True,False,False,True,True,True,True],[True,True,True,True,True,False,True,True],[False,True,True,True,False,True,True,True],[True,True,True,True,True,True,False,False],[True,False,False,False,True,True,True,False],[False,True,False,True,True,True,False,True],[False,False,True,True,True,False,False,True],[True,True,False,True,True,False,True,False],[False,True,False,False,False,False,False,False],[True,False,True,False,False,False,True,False]], dtype = "bool")#candidate|4199|(120, 8)|const|bool
call_4198 = func_2388_call(relay.reshape(const_4199.astype('bool'), [15, 16, 4]), relay.reshape(const_4199.astype('bool'), [15, 16, 4]), )
call_4200 = func_2388_call(relay.reshape(const_4199.astype('bool'), [15, 16, 4]), relay.reshape(const_4199.astype('bool'), [15, 16, 4]), )
func_3890_call = mod.get_global_var('func_3890')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_4202 = func_3890_call()
call_4203 = func_3890_call()
output = relay.Tuple([call_4188,call_4198,const_4199,call_4202,])
output2 = relay.Tuple([call_4189,call_4200,const_4199,call_4203,])
func_4205 = relay.Function([], output)
mod['func_4205'] = func_4205
mod = relay.transform.InferType()(mod)
mutated_mod['func_4205'] = func_4205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mutated_mod.get_global_var('func_4205')
call_4206 = func_4205_call()
output = call_4206
func_4207 = relay.Function([], output)
mutated_mod['func_4207'] = func_4207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4208 = relay.var("var_4208", dtype = "float64", shape = (3, 9, 8))#candidate|4208|(3, 9, 8)|var|float64
const_4209 = relay.const([[[-9.868303,-9.314121,-5.573340,7.582952,-4.889971,-2.111561,9.751090,-5.269802],[-3.834237,8.539532,-0.550701,-3.028376,7.616203,7.897979,7.508634,0.300561],[0.711753,-7.941616,-6.081766,-1.509798,-2.370195,-3.935351,-5.119163,-8.689492],[-5.440547,2.264728,9.356723,-0.748920,-6.461779,4.576512,-1.937387,1.745793],[6.782754,8.068447,9.759997,-1.078198,-1.287948,-2.830843,6.289960,-0.803574],[-9.527822,2.076451,4.812821,-4.076887,6.319114,1.872509,0.427805,9.011572],[7.728660,-2.010736,-7.636602,-1.166172,3.940248,3.676685,-1.276428,-6.902363],[6.321192,-0.571390,0.649490,-5.489734,-2.090229,3.246609,-6.732310,-4.105285],[3.121490,-2.818924,-1.627137,7.985421,5.511181,-0.658470,-3.376696,3.528255]],[[-4.490370,-9.181349,-6.474675,-8.137150,-6.816194,-0.526467,-0.453932,-3.333951],[-7.333414,2.555415,-3.740141,-1.609509,6.821449,2.138320,-2.475292,9.770661],[-0.936042,-3.225301,-9.170556,7.715298,-5.538741,6.930021,6.650863,9.829563],[3.129252,-3.370362,6.168191,4.198100,1.664938,-3.758873,1.583915,8.283966],[2.408176,1.745847,-8.850463,-7.269840,-7.663199,-8.232866,-5.615361,5.986431],[-9.252175,3.770234,1.586454,1.691697,1.887512,-3.435447,7.001134,-5.597586],[5.157616,0.947613,-6.590673,3.245922,4.831089,-0.753274,5.062921,1.795689],[0.758235,9.738334,-9.408838,-2.699164,-6.617402,-4.548152,-0.495869,-4.878397],[-9.762950,9.713747,2.881204,-3.203822,-2.582204,-8.187160,-3.899319,-3.647357]],[[-1.305850,-3.963162,-0.394573,-0.851277,2.413787,-7.119112,3.698493,-4.236094],[-0.638218,6.340848,-8.883854,9.198942,-4.045804,-8.028286,0.590964,2.055005],[-9.685876,-2.375241,-2.120414,3.825685,-5.278048,3.223755,-1.918226,2.627774],[1.539063,-4.928652,-7.213275,3.856049,-6.071018,-7.589269,-2.388072,7.342217],[1.006789,3.605785,8.677708,-0.730663,-6.423986,0.440491,1.042068,-2.165233],[2.735943,-3.521759,-1.192216,2.164563,8.548964,-4.642063,2.437868,-0.824175],[-8.599591,-9.044745,-4.358067,1.056031,-7.774488,5.603152,7.898831,-9.041785],[-5.022314,3.943438,-9.180389,6.405837,-3.723938,1.254110,-8.540070,-7.332651],[2.794441,-6.967511,4.226762,7.766164,-6.262906,0.937903,-9.505005,9.964590]]], dtype = "float64")#candidate|4209|(3, 9, 8)|const|float64
bop_4210 = relay.floor_divide(var_4208.astype('float64'), relay.reshape(const_4209.astype('float64'), relay.shape_of(var_4208))) # shape=(3, 9, 8)
bop_4218 = relay.add(bop_4210.astype('int8'), relay.reshape(const_4209.astype('int8'), relay.shape_of(bop_4210))) # shape=(3, 9, 8)
output = relay.Tuple([bop_4218,])
output2 = relay.Tuple([bop_4218,])
func_4222 = relay.Function([var_4208,], output)
mod['func_4222'] = func_4222
mod = relay.transform.InferType()(mod)
mutated_mod['func_4222'] = func_4222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4223 = relay.var("var_4223", dtype = "float64", shape = (3, 9, 8))#candidate|4223|(3, 9, 8)|var|float64
func_4222_call = mutated_mod.get_global_var('func_4222')
call_4224 = func_4222_call(var_4223)
output = call_4224
func_4225 = relay.Function([var_4223], output)
mutated_mod['func_4225'] = func_4225
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4241 = relay.const([[[-9,1,9,-2,9,4,9,-9,-9,2,-2,2,-3]],[[9,6,-4,-4,6,-2,10,-8,9,10,-8,4,-4]],[[7,6,-4,-10,7,-5,10,-4,-10,6,-3,-5,3]]], dtype = "int64")#candidate|4241|(3, 1, 13)|const|int64
var_4242 = relay.var("var_4242", dtype = "int64", shape = (3, 9, 13))#candidate|4242|(3, 9, 13)|var|int64
bop_4243 = relay.right_shift(const_4241.astype('int64'), var_4242.astype('int64')) # shape=(3, 9, 13)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
const_4268 = relay.const([-1.351890,-7.268600,-1.100559,-0.409716,-2.551155,5.437190,-3.888107,-8.191630,-1.194497,2.254882,-5.006938,-8.570978,5.150022,-7.216236,-6.316563,-2.519518,8.407173,2.465630,1.638489,1.227202,9.382487,5.145681,-9.221202,4.215939,5.643887,2.681545,-1.843607,2.101383,-4.066927,-9.638988,-3.339075,4.367731,-2.176875,2.078815,-4.343902,1.818769,7.866523,-2.844400,-0.305891,-4.917864,-7.473977,-1.158868,5.201742,-0.050762,0.972526,-1.707669,2.264433,4.805261,-7.446310,-7.400465,3.758567,9.157841,-6.560985,-2.967559,2.857202,-8.408273,-3.177967,-2.473368,4.511704,2.779998,-8.784035,-4.803703,7.469887,0.595934,-5.165047,-2.739568,7.974506,3.074006,1.147105,-5.947933,-3.511905,-6.007118,9.227053,4.931758,-5.925035,0.111918,-8.163219,-9.399874,8.415360,-4.051494,3.082462,6.819088,-0.026930,-0.830604,-8.386440,-2.593110,-8.676478,9.745664,-5.601984,-0.591688,6.351145,5.401741,6.630674,0.104116,9.133864,-5.354611,7.273002,4.488206,-5.793366,4.066885,-4.336603,-5.930647,8.273009,9.249809,-3.638129,-8.380441,7.461502,7.123967,3.949939,-7.716579,-1.903983,-8.026837,-5.602030,1.257126,4.082179,-4.270654,3.499416,-0.653733,-6.184703,-6.801272,7.258258,1.940067,-7.220353,0.150086,3.433403,-3.037857,4.763752,3.312617,-2.944909,-4.792151,-5.291165,4.856140,9.645490,-4.435118,8.522172,-6.376868,2.881820,-8.785888,8.296339,4.863343,0.806607,-8.507523,-8.931239,-1.265874,3.481768,9.750694,8.499422,4.165631,-8.539914,9.465091,-5.273302,8.719287,6.383722,7.272504,9.041541,9.133919,-7.298169,5.029669,-9.427086,8.274591,2.741432,0.355802,7.561740,6.597995,-2.858906,-3.908762,7.027840,-6.307336,1.223324,7.860392,-2.742613,4.109349,-4.804785,-8.915020,-0.816332,-4.913523,-7.122626,4.770145,-4.175912,5.730828,3.517893,1.644501,2.098541,6.078334,9.958955,-8.186658,7.912754,-1.423313,-9.433033,-0.143463,-5.925546,-4.607902,-5.690204,0.525114,2.200733,5.835550,-9.479862,7.482158,-1.683345,-8.437344,3.181721,-7.681244,-0.907336,-0.604937,7.295096,5.594482,-7.098508,-2.441100,3.822244,0.878012,-8.493360,4.427047,-9.448361,5.641514,9.661055,-9.622068,-9.000351,-8.837209,-9.925749,2.027125,7.758040,1.827474,4.049858,5.124870,6.137951,6.804746,3.967310,-1.261618,0.290831,5.124806,9.827236,7.507894,-7.441190,-6.375729,-9.808390,-7.710019,3.741056,8.441614,1.051753,7.143663,-6.358709,-3.331046,-4.764952,7.885692,-2.150888,-5.171054,-4.766493,5.613347,7.364168,6.638859,-6.465272,-7.760315,-0.949955,-1.034066,-6.007822,-2.268159,-7.611022,-8.097267,-7.173443,-1.962447,-0.565406,-0.805181,-6.439732,0.138076,-7.843542,7.384351,-8.961348,-0.013053,-5.267893,-2.334819,-0.673624,8.228407,-3.413351,6.873694,7.791304,8.299625,9.614211,-3.247866,-0.686022,1.386933,9.102282,9.263968,-6.368929,-2.347004,-8.150673,0.182718,9.994193,9.992551,3.528780,-6.139498,-1.721591,-5.773846,-5.369880,9.544485,6.867548,3.460656,2.053320,-3.442727,-9.940491,-6.218359,-8.054842,6.644083,-0.126710,2.052152,-0.427741,-8.628462,0.273939,-2.573536,-1.741531,-6.953811,-2.222605,-6.400909,-0.894273,-4.887005,3.654054,8.901449,-1.087716,1.359109,3.229666,-0.153764,2.061071,-2.439970,-6.052077,-5.391148,-3.601481,-8.837889,-1.545056,6.757922,3.720959,1.456850,-5.035322,-9.221555,6.154439,-0.985980,-1.811140,-1.502096,2.644056,5.765754,7.161866,-7.906904,-9.839528,9.204884,5.802281,-9.932432,-4.257853,9.221047,-3.316154,0.153032,-1.867178,8.073278,1.837336,-3.028788,-5.512042,-6.559015,5.937445,-3.229660,0.158630,-8.429183,-5.040977,6.888061,-3.907451,8.212236,3.550941,-8.815463,-5.375639,-6.987141,-3.197582,7.688322,-4.311396,-2.573810,-3.624926,-3.622676,-1.278373,9.957897,2.299026,5.296449,5.595389,-4.856911,-5.415268,-0.937905,-4.034356,-6.246221,0.662251,-2.759955,7.080678,1.446776,4.341758,7.580532,-7.046169,-4.989537,2.494289,4.800106,-5.977422,8.094146,1.351961,-0.523628,2.179223,-6.943447,-2.274867,-8.896765,5.230238,6.004814,4.170142,7.891262,0.645998,1.559970,5.127076,-1.143379,6.670038,-0.824903,0.550596,-0.043388,4.334454,-6.755309,1.402553,5.030632,-5.527292,4.784680,4.273432,-0.357851,-7.615419,-1.491783,-2.201369,-9.848595,-3.387731,-5.613507,3.595395,-2.079133,5.230963,-1.519548,-0.568499,-5.864279,-2.055541,-4.596122,-4.626287,8.368549,4.774450,-2.630606,-2.367199,5.777982,-1.045319,-6.965064,-7.804559,-3.243662,9.142858,8.563796,3.951216,6.178087,2.980896,1.560665,-2.948404,9.394072,-3.883029,5.170429,-2.471469,-7.739143,5.635264,-4.903010,6.282089,9.026464,7.383148,-1.715436,-7.592126,-9.674587,-6.233259,6.031821,-3.164385,-0.860498,2.798035,1.799375,-1.257467,-7.912845,5.648747,3.690347,0.759319,2.416776,4.646653,3.345433,0.878685,-9.916399,-9.941937,-2.756192,-6.822399,4.387547,3.868410,3.603660,-7.583393,6.672165,-2.442698,9.837028,0.531897,-6.711730,-1.668044,7.573196,1.100245,5.266088,4.186214,1.124786,-3.625949,1.091804,6.640627,9.417126,-6.716323,2.818878,-3.242745,1.524049,-8.388167,-6.345280,0.295909,-3.376149,3.104737,-1.551824,-7.666153,-2.459427,6.654096,-8.127985,-0.654459,-8.938996,-3.945818,9.390056,-7.835130,-6.163877,-6.095386,-1.537086,-0.052108,0.601320,-8.579066,3.821756,6.566310,-2.153623,5.132444,0.192881,-0.524833,8.140914,-7.618581,2.044036,9.874754,9.397326,9.062893,8.280941,-9.385813,5.588158,5.551968,0.989223,2.959732,5.563680,-9.972212,-7.019049,-6.334207,3.500216,4.175372,-8.186749,7.927925,-1.650279,4.862496,-0.236317,-1.788054,-7.147248,-6.424072,-0.882116,9.955084,7.167224,9.340561,0.745398,0.211877,-9.718843,4.403291,7.937821,-2.136758,1.252921,0.248589,6.564216,-1.450707,0.854885,-6.296101,-4.521122,9.081125,1.696352,0.100649,1.439959,-1.839702,3.288308,-6.072104,-7.345618,6.145977,-9.864002,6.989964,-5.386465,2.949430,7.571530,-4.931251,-3.711959,8.287471,-2.493214,-4.629755,4.520980,0.219424,-7.227170,0.236424,-3.954175,9.544290,7.047764,-2.380962,-0.785159,-9.943579,5.456145,9.410122,-6.686607,-5.279952,1.613750,-6.323417,0.351363,-3.889552,2.494545,-5.374910,-2.960875,-5.984305,-6.174325,9.061656,9.223925,-7.876211,-5.254109,-7.852516,-0.317492,0.974193,8.360390,-3.320472,3.448059,-7.097572,-0.268553,-6.005743,-6.142689,8.382824,-0.796302,7.217888,-9.499563,-1.284134,8.141428,3.753485,2.364544,-7.893415,0.916263,7.000125,0.955122,0.200900,-4.127726,-6.457296,4.882853,-8.471081,-4.145203,4.652705,3.603857,-9.540255,-8.836046,9.744464,-7.189743,-1.933337,-4.457039,7.377106,3.782280,-8.202334,-5.047243,0.562772,-5.343988,4.692964,6.187091,7.567394,9.134994,-6.625481,4.992632,0.201842,1.291199,5.559967,-7.775027,9.342376,-9.535955,1.617054,-1.814006,-1.901809,-8.418837,8.531262,-6.138642,6.910161,-7.313363,9.686078,4.131654,-7.706599,-5.996830,-7.122341,-7.036983,-6.182058,8.324834,6.196894,-1.308938,-1.589661,-1.910249,2.391806,-0.070761,-2.869666,-9.826642,1.149685,-5.272154,-7.737612,6.222218,0.680110,-2.415363,-5.688843,-7.606821,3.002587,3.146286,8.891180,6.396057,-0.308862,3.366833,1.770641,-2.990494,3.652797,-2.445362,7.478850,3.422720,5.606045,3.385833,0.637852,5.640287,-0.475972,2.307243,-5.422307,-1.245071,-7.843054,9.618215,6.281651,-8.729683,5.714051,-0.476111,5.824605,7.104094,8.309562,-8.556169,-7.472952,3.960921,8.398614,9.737691,-1.083925,-5.407904,6.738317,-6.126862,-1.156781,-4.338637,4.616192,-8.481197,-0.775736,4.659417,-3.962624,-5.288115,1.654948,-9.819875,-2.016670,2.108862,7.891259,-2.402170,3.096737,-3.579526,4.159404,9.882887,1.234660,6.367546,-1.626861,-4.940431,2.521496,0.314073,-6.628911,9.343332,2.357380,1.294691,-7.702006,-1.914754,-1.471652,8.298824,8.255179,-2.957442,9.756900,-2.492238,-3.417209,-6.882913,1.003394,7.046042,9.473664,9.555294,4.621226,-1.513982,-8.687200,9.807884,1.080134,-0.191167,-7.009573,0.164569,2.970422,5.659557,-5.885888,8.805145,1.718699,-0.987953,9.602595,-3.292291,-8.135404,-3.057006,9.850181,-2.436834,4.033599,1.180999,1.572244,1.875997,-8.586199,5.861847,-9.216416,-2.614407,8.993362,4.758343,-2.033386,0.120584,-8.960337,6.371711,8.226854,-9.133072,1.156873,-8.440360,-2.832726,1.023263,-7.986547,-1.791126,7.887601,5.522148,7.653079,1.479182,-4.579727,-7.983370,-3.445969,-5.263837,8.165194,-1.680180,-0.240529,-4.534868,-0.064515,7.654393,-0.652828,-1.561672,-3.467968,-4.624805,-5.308021,-2.758949,-1.553835,9.626595,-1.790859,-2.795915,-9.717711,-7.512685,-2.341282,6.701944,-3.226469,9.808238,-7.353115,-9.128603,3.200172,-2.613354,-0.579607,-6.579144,-5.797159,-4.805779,0.238221,-3.016647,1.531058,-7.391773,4.240580,6.829661,-1.197974,-8.065328,-9.461202,-6.011213,2.349567,2.493776,5.804785,-9.401160,0.795945,-1.517044,-8.595364,-5.380642,-3.842213,9.126218,-7.413498,8.404196,5.262940,-2.252400,7.700827,-8.782600,8.240136,-9.086274], dtype = "float64")#candidate|4268|(896,)|const|float64
const_4269 = relay.const(4, dtype = "int8")#candidate|4269|()|const|int8
var_4270 = relay.var("var_4270", dtype = "int8", shape = (384,))#candidate|4270|(384,)|var|int8
call_4267 = relay.TupleGetItem(func_274_call(relay.reshape(const_4268.astype('float64'), [14, 8, 8]), relay.reshape(const_4269.astype('int8'), []), relay.reshape(var_4270.astype('int8'), [384,]), ), 0)
call_4271 = relay.TupleGetItem(func_278_call(relay.reshape(const_4268.astype('float64'), [14, 8, 8]), relay.reshape(const_4269.astype('int8'), []), relay.reshape(var_4270.astype('int8'), [384,]), ), 0)
output = relay.Tuple([bop_4243,call_4267,const_4268,const_4269,var_4270,])
output2 = relay.Tuple([bop_4243,call_4271,const_4268,const_4269,var_4270,])
func_4284 = relay.Function([var_4242,var_4270,], output)
mod['func_4284'] = func_4284
mod = relay.transform.InferType()(mod)
var_4285 = relay.var("var_4285", dtype = "int64", shape = (3, 9, 13))#candidate|4285|(3, 9, 13)|var|int64
var_4286 = relay.var("var_4286", dtype = "int8", shape = (384,))#candidate|4286|(384,)|var|int8
output = func_4284(var_4285,var_4286,)
func_4287 = relay.Function([var_4285,var_4286,], output)
mutated_mod['func_4287'] = func_4287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3532_call = mod.get_global_var('func_3532')
func_3534_call = mutated_mod.get_global_var('func_3534')
call_4362 = relay.TupleGetItem(func_3532_call(), 0)
call_4363 = relay.TupleGetItem(func_3534_call(), 0)
uop_4364 = relay.exp(call_4362.astype('float64')) # shape=(14, 14, 14)
uop_4366 = relay.exp(call_4363.astype('float64')) # shape=(14, 14, 14)
func_3059_call = mod.get_global_var('func_3059')
func_3063_call = mutated_mod.get_global_var('func_3063')
const_4371 = relay.const([True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True], dtype = "bool")#candidate|4371|(1120,)|const|bool
var_4372 = relay.var("var_4372", dtype = "float64", shape = (96,))#candidate|4372|(96,)|var|float64
const_4373 = relay.const([4.474742,-3.072169,6.521973,3.553592,-1.939566,-8.672443,3.784896,-7.517363,0.186432,8.532419,-4.229073,7.275540,6.477767,0.336173,-0.384595,0.250200,8.740087,-9.645550,-5.694456,6.108551,0.119710,-3.234330,-2.517310,5.902345,-7.695988,0.172923,-7.126507,9.139762,-4.618893,7.867574,-1.186207,-2.132201,-0.864474,-1.253680,8.382483,-3.539192,0.371548,5.485412,2.527273,-6.608756,8.098063,-8.254799,-2.527886,2.226421,7.274492,-4.607126,1.004569,9.700984,4.960356,-3.325522,6.800019,1.586201,2.165223,-9.300366,-6.214075,-1.610245,2.068091,0.773940,-5.097284,-0.640118,3.860216,6.055892,8.630703,2.077116,-1.101520,4.539769,-7.917530,0.128588,2.030287,-9.958894,-5.123041,4.671838,8.041688,8.846883,6.449716,5.053063,-2.648394,-8.127461,3.210621,7.371001,4.083633,-5.734734,4.952923,-4.413597,3.051578,-0.612031,1.237335,9.157042,7.232169,4.015457,-4.023383,6.253682,5.415736,6.904794,6.643389,7.249629,0.175942,-6.906032,6.823989,-6.262899,6.182885,-2.535850,-3.450941,-6.480714,-4.458360,6.050806,-1.335097,-7.417945,-7.737923,7.706864,-8.405587,-8.208829,-8.251538,-7.559313,6.555455,-7.703946,-9.088518,-8.147873,6.331497,-7.269853,-6.819518,-0.065110,-8.080411,-8.841600,-9.434513,2.270501,-1.571063,1.069673,-4.760554,-6.001853,-9.488223,1.763874,8.807079,6.986113,-1.558969,4.741258,5.842421,0.431136,-7.430455,-4.251704,3.326704,1.930372,-3.676024,-1.597533,-9.031775,-4.185623,-6.508070,9.038407,5.564439,-6.062498,-4.759922,-8.203764,0.966486,-3.337957,-0.396759,0.470845,-8.295322,5.764193,8.785510,8.656058,7.344462,-8.878303,5.208096,3.432595,-9.338715,-9.005288,0.449495,9.248732,6.844815,-4.441074,-5.843148,1.906593,-4.681506,0.618445,2.418410,-6.458858,1.066611,-0.340349,-9.970283,7.179659,0.725132,-0.966909,3.120566,7.659394,7.671201,-5.158320,3.868257,-0.548022,-7.932912,9.565926,-4.581923,-3.141841,-1.246371,0.035512,5.594409,-9.332310,-0.225060,6.946841,-6.540919,-2.174090,6.839311,6.198982,5.123069,-7.715880,-7.927319,2.296618,9.162606,-1.373683,-6.919085,9.367197,-3.778937,-2.520602,-3.613188,-4.101445,-5.706635,-3.471694,4.030012,5.651082,1.150695,4.271976,4.130927,-6.607593,-5.131967,0.866279,-0.536859,-1.893755,-8.137102,-1.415341,5.131854,8.319188,6.657410,6.362589,2.250293,8.492276,-1.599937,-3.178469,5.493672,6.336253,4.001001,-5.394803,4.544301,0.885243,4.795351,-7.414495,-4.241041,3.300009,4.320512,2.504532,2.834272,9.648213,2.180572,4.029837,-5.120369,-6.583471,6.073839,-1.118507,-2.317080,-3.416357,6.935025,-3.521552,-9.442252,5.805133,-8.096825,1.020998,-0.688286,5.223126,-9.688574,-2.460883,8.695599,6.093068,-7.088267,9.887561,6.540890,-4.949924,-2.455017,-7.480309,-5.263269,-8.325653,-5.170307,-6.843237,-7.173388,-7.675567,9.609415,-7.517508,-4.063611,5.888489,0.646421,3.824795,9.358722,8.935503,-9.852431,-6.711535,8.159269,2.175432,-0.222197,-0.036359,0.746579,-8.730762,-4.157258,-4.250265,-1.106495,6.060728,-1.754108,-4.957176,-1.931187,-0.053668,0.413029,-0.147272,8.022052,4.730124,9.602487,3.525940,-9.847603,3.397400,-2.587899,2.605079,-7.535187,-4.703230,0.445011,-1.884637,-3.675816,-5.577074,9.477544,-6.556506,-4.230739,7.165131,-6.387414,3.192923,-5.919344,6.910747,-4.370527,5.583911,0.573984,5.672457,-6.063693,-7.975696,-3.366294,-4.115794,6.496280,4.139561,-2.176194,-7.135225,2.794219,-4.740232,-9.715038,-7.849797,-8.464039,3.191588,4.886632,8.716675,-2.126762,-1.259580,-1.835985,8.748329,8.064245,-9.511857,8.595242,-3.647604,-4.123527,-2.046263,-8.779387,8.477731,-9.062227,-2.648451,9.575018,5.029844,-8.300562,9.144858,-9.161370,-4.980852,3.219715,-2.852332,2.764974,9.508143,9.560484,7.408170,-0.929138,-5.613913,3.371923,-0.979917,-9.930032,5.481057,2.047819,-2.087731,4.856881,2.703113,1.812903,0.506976,3.681504,-7.959698,-5.256464,-7.962195,-2.658647,4.073200,-1.935016,-5.460766,3.330343,6.652394,-2.265976,-1.766041,-3.849688,-1.406460,8.797027,3.444525,-4.257851,2.042860,2.933446,9.582681,4.692225,1.444624,-6.840083,-8.107136,9.671559,-1.398118,8.569116,9.870430,9.695462,8.157410,8.583094,9.665099,-2.750073,-3.443169,-7.120578,6.148989,-4.308154,7.888177,8.946282,-5.922189,7.341700,-8.395337,-8.375618,4.472387,-6.668988,-6.211873,5.041014,7.950708,6.944547,2.262532,-0.729811,1.948324,4.289914,4.078505,-2.096352,-5.701683,5.617107,0.473302,-2.153568,6.360635,3.726386,4.451318,8.253165,3.702991,-3.272765,-6.804616,3.321065,-8.850120,8.464429,0.758381,4.194513,1.255655,0.635497,-6.496474,8.035194,-4.663694,-3.435719,1.067699,-7.200451,-6.129638,6.047586,0.479590,-1.229683,-7.370171,-2.429579,9.997794,7.807983,-5.121521,4.787295,-4.446944,-5.951759,-2.192393,-3.576945,-7.008854,-5.433925,-6.395351,9.785620,-9.037578,2.085398,9.715871,4.832033,4.901830,-2.495297,8.322038,1.877273,-7.763731,-2.795822,-3.197192,0.749997,5.963124,1.868336,4.949744,-7.622882,-0.646670,-2.921513,1.762934,-3.864569,-1.328762,-0.653077,0.620316,-9.813904,6.116118,-4.376718,3.443237,-8.046277,6.734946,-9.366559,-9.675031,-2.488213,-0.290069,1.097614,-8.833639,5.274439,-6.243685,-8.654797,8.822113,0.920147,3.446559,-0.018609,8.629281,-1.690050,-7.779072,-4.891708,1.928477,0.219609,6.546216,8.237504,-8.152250,3.872744,-6.417783,-9.672794,-9.662804,-0.537033,3.009293,-2.884772,0.584070,2.215272,-4.658122,-5.048354,0.397687,2.168779,-1.321207,-1.097258,7.292030,9.374672,-9.767195,6.000509,-4.854175,-2.529919,-4.473946,-6.733534,8.744423,6.262078,5.798170,8.413344,0.371091,-5.114393,8.872024,7.071539,-7.807193,-8.865388,-4.506061,2.840912,3.042992,9.253180,-2.963047,6.909874,2.049468,9.117294,3.000586,8.366978,-4.979468,-6.067091,6.776352,-5.935790,4.698905,-1.044894,2.311579,-2.623008,9.776356,-1.519580,4.086124,-5.707485,8.800464,-0.114870,-9.405786,0.546376,1.976635,2.168541,4.607796,-6.307202,-6.015588,2.611176,-8.720930,9.577179,8.244090,5.218975,5.391375,3.429760,-2.329121,1.648249,-6.270750,7.237246,5.551333,-6.730320,-8.560438,2.323406,0.856600,-2.739680,-1.675593,2.222404,-2.829190,-0.804626,-1.251460,-1.678084,5.320641,-4.244187,-2.845159,1.319683,-9.244106,7.224779,-6.638670,7.347136,3.596606,5.686167,8.780986,8.879833,-4.809631,-7.721928,8.802952,1.820044,-2.234379,-0.751018,0.572425,-0.702752,8.135650,-0.370138,-8.349576,5.228427,-9.039204,5.280567,-1.324022,9.543344,0.943732,9.839688,-4.404621,4.612899,-7.088082,0.427354,-7.161647,1.986138,3.212825,2.087879,-4.706268,2.595652,-7.818408,-7.662504,2.677802,6.627098,8.358176,-8.840238,8.686449,4.295156,4.209464,5.765229,-1.268567,-4.407716,-4.043010,-2.535737,-1.500002,9.417794,-3.436641,1.897064,1.152678,-2.058961,-1.066226,-1.785669,0.973821,6.981867,8.063643,-7.125012,-3.758638,0.782066,-2.902580,1.159152,-7.922752,3.363753,-0.483551,-0.980110,6.307400,1.351938,9.947622,9.954004,5.726197,-0.014029,8.876337,-6.700565,1.751889,3.977916,8.979748,-5.705902,9.750016,2.208549,0.074097,-4.609626,-3.378151,-6.997939,4.886490,-7.373880,-3.744120,9.403834,0.738116,7.917587,-1.857983,6.965188,3.333042,1.499228,7.530103,4.809059,-0.665800,-5.515666,9.195354,7.116644,-2.858487,3.702065,-5.503671,2.018358,-7.660671,-3.936549,2.208489,2.185817,1.480040,1.976241,0.963365,7.515422,-0.263226,-5.853600,-6.692187,7.255748,-6.710909,-9.448590,7.545347,-0.193284,-9.761675,-3.016219,-6.401529,3.014425,-3.148259,8.941867,6.404269,-5.281072,-5.215257,2.089796,-2.698920,0.052398,7.565185,8.528517,5.387693,-8.483623,-4.730598,3.779575,-8.244879,-3.949561,-9.192888,-9.174947,3.565124,2.833417,-1.575682,-3.510539,4.155870,4.430408,1.778126,-8.944407,-7.616802,8.289990,4.550082,-3.239927,2.325487,7.585690,-4.160752,7.058998,-9.832830,8.040839,6.796436,2.510163,6.213572,6.812656,2.016775,-0.611567,-8.009858,-2.523112,-6.381890,-4.856260,8.777116,9.420673,8.944719,3.921487,-1.204792,-4.074514,1.429489,-4.876439,-1.750431,8.256232,8.390290,-2.699690,6.125168,-5.572234,9.836816,3.222605,-2.192788,-4.067140,7.750046,6.351835,-7.557609,5.799926,4.529255,-4.762351,4.244436,2.545804,9.687831,2.818273,-1.273797,2.634742,-1.958885,-7.761857,8.787447,-0.356982,7.529584,-1.157839,-6.779218,5.265239,-4.449335,4.664735,5.700669,-1.214345,-1.845878,-7.178857,8.617613,-5.901030,-8.090212,-6.836251,3.554669,7.950349,-0.250148,-4.154923,8.895355,-4.705652,-0.841549,-4.676826,-6.982065,-9.062075,-3.120379,4.565976,-9.722968,8.773767,2.075884,5.643854,-3.823914,0.487496,-2.816019,1.884570,7.854537,3.978155,-9.190541,2.004745,0.458374,8.612171,-5.084459,0.458295,0.754394,-4.831471,0.636507,4.199898,-8.741779,-6.267344,6.238561,-6.802708,-0.765870,-5.869502,4.501003,6.560250,2.179645,-7.371663,-1.813059,0.994095,-7.405009,-1.852325,3.706552,-9.524611,-3.739002,-9.815519,-4.851158,-1.501083,6.108933,9.830960,-3.731704,6.697647,-6.688267,-8.471296,8.556905,-4.867106,8.343076,3.321516,-3.083894,-1.808517,0.859571,-0.564081,0.453434,-4.337230,8.898868,-8.921712,-9.380360,-8.007496,0.243454,6.651406,-0.457897,2.349380,-0.267847,-5.863481,-9.260525,1.126935,0.299278,7.981980,-8.406369,1.735006,-9.935977,-2.571749,6.141495,8.451898,7.708667,-8.117369,-9.258794,2.430092,-6.443232,8.960211,-5.211284,-6.002182,2.467683,-4.678751,5.152668,0.325049,6.769443,3.107274,-3.112434,-3.295632,0.452778,9.357462,-2.960916,1.225860,-4.545493,3.834364,6.505763,8.619981,1.101458,6.795031,8.941660,-0.187651,-9.990100,-4.609519,-5.161034,-8.342367,5.561925,2.662463,-9.109780,-1.008245,-7.720989,2.667671], dtype = "float32")#candidate|4373|(975,)|const|float32
call_4370 = relay.TupleGetItem(func_3059_call(relay.reshape(const_4371.astype('bool'), [8, 10, 14]), relay.reshape(var_4372.astype('float64'), [96,]), relay.reshape(const_4373.astype('float32'), [975,]), ), 4)
call_4374 = relay.TupleGetItem(func_3063_call(relay.reshape(const_4371.astype('bool'), [8, 10, 14]), relay.reshape(var_4372.astype('float64'), [96,]), relay.reshape(const_4373.astype('float32'), [975,]), ), 4)
uop_4378 = relay.log2(call_4362.astype('float64')) # shape=(14, 14, 14)
uop_4380 = relay.log2(call_4363.astype('float64')) # shape=(14, 14, 14)
func_1924_call = mod.get_global_var('func_1924')
func_1928_call = mutated_mod.get_global_var('func_1928')
const_4385 = relay.const([[True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,False]], dtype = "bool")#candidate|4385|(1, 1872)|const|bool
call_4384 = relay.TupleGetItem(func_1924_call(relay.reshape(const_4385.astype('bool'), [16, 9, 13]), relay.reshape(var_4372.astype('float64'), [96,]), ), 9)
call_4386 = relay.TupleGetItem(func_1928_call(relay.reshape(const_4385.astype('bool'), [16, 9, 13]), relay.reshape(var_4372.astype('float64'), [96,]), ), 9)
output = relay.Tuple([uop_4364,call_4370,const_4371,var_4372,const_4373,uop_4378,call_4384,const_4385,])
output2 = relay.Tuple([uop_4366,call_4374,const_4371,var_4372,const_4373,uop_4380,call_4386,const_4385,])
func_4387 = relay.Function([var_4372,], output)
mod['func_4387'] = func_4387
mod = relay.transform.InferType()(mod)
mutated_mod['func_4387'] = func_4387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4388 = relay.var("var_4388", dtype = "float64", shape = (96,))#candidate|4388|(96,)|var|float64
func_4387_call = mutated_mod.get_global_var('func_4387')
call_4389 = func_4387_call(var_4388)
output = call_4389
func_4390 = relay.Function([var_4388], output)
mutated_mod['func_4390'] = func_4390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_4404 = relay.TupleGetItem(func_4205_call(), 3)
call_4405 = relay.TupleGetItem(func_4207_call(), 3)
uop_4426 = relay.sin(call_4404.astype('float32')) # shape=(14, 14, 14)
uop_4428 = relay.sin(call_4405.astype('float32')) # shape=(14, 14, 14)
bop_4435 = relay.logical_xor(uop_4426.astype('uint32'), relay.reshape(call_4404.astype('uint32'), relay.shape_of(uop_4426))) # shape=(14, 14, 14)
bop_4438 = relay.logical_xor(uop_4428.astype('uint32'), relay.reshape(call_4405.astype('uint32'), relay.shape_of(uop_4428))) # shape=(14, 14, 14)
output = relay.Tuple([bop_4435,])
output2 = relay.Tuple([bop_4438,])
func_4443 = relay.Function([], output)
mod['func_4443'] = func_4443
mod = relay.transform.InferType()(mod)
mutated_mod['func_4443'] = func_4443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4443_call = mutated_mod.get_global_var('func_4443')
call_4444 = func_4443_call()
output = call_4444
func_4445 = relay.Function([], output)
mutated_mod['func_4445'] = func_4445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3455_call = mod.get_global_var('func_3455')
func_3457_call = mutated_mod.get_global_var('func_3457')
call_4454 = func_3455_call()
call_4455 = func_3455_call()
uop_4458 = relay.cosh(call_4454.astype('float32')) # shape=(14, 14, 14)
uop_4460 = relay.cosh(call_4455.astype('float32')) # shape=(14, 14, 14)
uop_4466 = relay.atanh(uop_4458.astype('float64')) # shape=(14, 14, 14)
uop_4468 = relay.atanh(uop_4460.astype('float64')) # shape=(14, 14, 14)
uop_4471 = relay.sqrt(call_4454.astype('float64')) # shape=(14, 14, 14)
uop_4473 = relay.sqrt(call_4455.astype('float64')) # shape=(14, 14, 14)
output = relay.Tuple([uop_4466,uop_4471,])
output2 = relay.Tuple([uop_4468,uop_4473,])
func_4474 = relay.Function([], output)
mod['func_4474'] = func_4474
mod = relay.transform.InferType()(mod)
mutated_mod['func_4474'] = func_4474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4474_call = mutated_mod.get_global_var('func_4474')
call_4475 = func_4474_call()
output = call_4475
func_4476 = relay.Function([], output)
mutated_mod['func_4476'] = func_4476
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4521 = relay.var("var_4521", dtype = "float64", shape = ())#candidate|4521|()|var|float64
var_4522 = relay.var("var_4522", dtype = "float64", shape = (10, 14, 8))#candidate|4522|(10, 14, 8)|var|float64
bop_4523 = relay.mod(var_4521.astype('float64'), var_4522.astype('float64')) # shape=(10, 14, 8)
func_4222_call = mod.get_global_var('func_4222')
func_4225_call = mutated_mod.get_global_var('func_4225')
const_4547 = relay.const([-2.509738,9.297930,7.074417,0.931392,-5.604739,-8.485548,6.701388,-0.651093,6.829472,-5.607322,4.644488,-0.594214,7.887135,-6.423668,7.593157,2.861072,-4.696169,5.337697,0.778913,-1.873558,4.026732,4.780394,0.783742,-8.025872,9.330939,5.959859,-1.461638,6.483313,-1.974295,-5.129489,0.051330,4.826394,1.519772,5.829253,-9.698021,-7.055177,2.348709,-0.914176,1.031122,1.643168,0.938041,-6.474671,-7.375866,4.971797,1.808868,-0.538567,-8.618693,-5.297332,5.790588,-2.318872,2.622586,0.187117,9.229440,1.311089,0.799028,4.257383,3.985208,-7.855614,0.085970,-6.395685,-2.734723,4.060912,3.154066,-7.583292,-6.583149,-0.120914,4.175991,-6.142267,2.514376,-4.602429,-9.238446,3.868862,5.196899,4.943484,-2.808430,4.100834,7.774727,9.913771,-7.306867,6.817100,-5.021913,-7.881083,4.523992,-7.792085,-9.024356,0.974428,-6.313753,-1.161782,4.283663,-6.633112,8.685044,-9.693650,3.946513,0.165743,6.571917,-6.555209,-4.942770,0.583642,9.728528,-1.839491,-8.982510,-8.952691,2.872854,-5.357108,-5.081305,-1.997546,-2.039118,-2.764558,-2.476440,2.873065,-7.140553,4.514219,-2.172860,6.243681,2.182060,8.450073,8.399148,-0.353684,-1.927322,3.975058,-5.310110,7.027781,-9.889523,-8.294258,5.409830,-4.784950,6.511959,8.854509,0.999258,9.095104,-1.073366,-1.170268,-1.315926,-3.211608,-6.074592,1.010648,3.003563,8.000192,8.059095,-8.532613,-1.384418,-9.978104,4.281741,4.904484,-5.573895,1.428931,-7.744557,2.340119,-0.586076,9.720200,5.549164,8.601509,3.931463,6.050316,-4.911016,-7.551194,-7.247707,-2.912435,-2.466054,-5.945853,-4.652798,6.896483,-9.428028,8.218228,9.927473,4.812269,-2.363621,2.123298,1.061911,-7.576148,8.390916,-7.303457,9.729166,8.943837,9.689536,5.230244,4.120332,-6.770675,0.032990,-3.199622,-1.268637,3.760959,6.235064,9.425851,0.265393,-3.226952,-0.880420,1.034723,-0.838299,4.971906,-2.580817,6.311854,5.403916,7.216823,-6.675567,5.998824,2.817124,4.607202,-7.646863,-5.527888,-6.390915,-5.471205,0.832358,-4.223346,-5.882178,8.432851,-5.120860,-2.904432,-0.084906,-9.174312,1.954638,-1.743579,3.244153,9.070928,-1.930668,6.122537], dtype = "float64")#candidate|4547|(216,)|const|float64
call_4546 = relay.TupleGetItem(func_4222_call(relay.reshape(const_4547.astype('float64'), [3, 9, 8])), 0)
call_4548 = relay.TupleGetItem(func_4225_call(relay.reshape(const_4547.astype('float64'), [3, 9, 8])), 0)
output = relay.Tuple([bop_4523,call_4546,const_4547,])
output2 = relay.Tuple([bop_4523,call_4548,const_4547,])
func_4560 = relay.Function([var_4521,var_4522,], output)
mod['func_4560'] = func_4560
mod = relay.transform.InferType()(mod)
mutated_mod['func_4560'] = func_4560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4560_call = mutated_mod.get_global_var('func_4560')
var_4562 = relay.var("var_4562", dtype = "float64", shape = ())#candidate|4562|()|var|float64
var_4563 = relay.var("var_4563", dtype = "float64", shape = (10, 14, 8))#candidate|4563|(10, 14, 8)|var|float64
call_4561 = func_4560_call(var_4562,var_4563,)
output = call_4561
func_4564 = relay.Function([var_4562,var_4563,], output)
mutated_mod['func_4564'] = func_4564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3455_call = mod.get_global_var('func_3455')
func_3457_call = mutated_mod.get_global_var('func_3457')
call_4618 = func_3455_call()
call_4619 = func_3455_call()
func_177_call = mod.get_global_var('func_177')
func_180_call = mutated_mod.get_global_var('func_180')
const_4630 = relay.const(-4, dtype = "int8")#candidate|4630|()|const|int8
const_4631 = relay.const([4,8,5,2,1,-1,8,1,-6,-6,-2,-9,-4,7,1,-7,5,-4,9,8,-3,-7,8,-10,-6,5,9,-3,6,-2,9,1,-7,4,-10,-10,-3,3,6,8,-10,-9,8,1,-5,10,-4,-6,7,-9,-4,1,5,-9,-7,-2,-1,-7,5,2,3,-4,4,-10,-1,9,9,3,3,-6,8,-9,-8,-7,-6,-5,-10,10,10,-6,-10,-6,-4,-2,10,7,-5,-8,-5,-8,-3,-4,3,-6,3,-3,6,1,-8,-7,10,-8,-2,-7,-1,-2,1,7,9,6,7,4,-7,-5,7,-3,10,9,10,-1,-5,5,-10,-10,10,-2,5,2,2,-9,3,-5,5,-5,1,6,-10,2,5,-2,5,-2,1,-4,-3,-1,5,7,1,3,-9,-8,9,-10,1,1,-5,8,-9,8,-3,10,6,-8,-1,-9,-9,9,8,-4,1,-4,-10,-2,-5,3,-3,8,10,4,-6,-2,-1,-4,-10,7,6,8,6,-7,2,10,2,-5,-5,-4,4,-7,6,-6,-2,10,4,7,9,2,-3,9,2,8,4,8,9,-5,-7,-3,-3,10,-8,9,1,1,4,9,-1,-1,10,-3,5,4,-8,-4,8,8,10,-5,9,-5,5,8,1,-3,1,10,5,-9,-2,5,6,10,-1,5,3,4,3,4,-1,7,-4,-7,2,3,8,6,1,8,-10,-3,-4,-1,-9,1,3,-4,-6,7,7,-3,-7,-7,-4,-2,9,-9,2,-9,8,-3,-9,-9,7,4,5,-9,6,-1,-2,-7,8,-5,10,5,6,-9,4,2,4,-7,3,1,1,-2,-5,-5,8,5,-4,4,-8,-6,2,6,-6,-5,9,2,8,-7,4,-5,-4,10,3,-9,-8,-5,-5,-6,-6,-3,7,-8,-9,7,7,-6,6,-8,-2,2,-3,10,-10,2,7,4,1,8,-7,5,-9,-4,9,-6,10,-10,-4,3,-1,3,-10,-2,9,3,9,9,-9,4,6,8,5,8,-2,-5], dtype = "int8")#candidate|4631|(384,)|const|int8
call_4629 = relay.TupleGetItem(func_177_call(relay.reshape(const_4630.astype('int8'), []), relay.reshape(const_4631.astype('int8'), [3, 16, 8]), ), 5)
call_4632 = relay.TupleGetItem(func_180_call(relay.reshape(const_4630.astype('int8'), []), relay.reshape(const_4631.astype('int8'), [3, 16, 8]), ), 5)
output = relay.Tuple([call_4618,call_4629,const_4630,const_4631,])
output2 = relay.Tuple([call_4619,call_4632,const_4630,const_4631,])
func_4646 = relay.Function([], output)
mod['func_4646'] = func_4646
mod = relay.transform.InferType()(mod)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4646_call = mutated_mod.get_global_var('func_4646')
call_4647 = func_4646_call()
output = call_4647
func_4648 = relay.Function([], output)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4663 = relay.var("var_4663", dtype = "uint32", shape = (11, 9, 2))#candidate|4663|(11, 9, 2)|var|uint32
var_4664 = relay.var("var_4664", dtype = "uint32", shape = (11, 9, 2))#candidate|4664|(11, 9, 2)|var|uint32
bop_4665 = relay.greater_equal(var_4663.astype('bool'), relay.reshape(var_4664.astype('bool'), relay.shape_of(var_4663))) # shape=(11, 9, 2)
func_4122_call = mod.get_global_var('func_4122')
func_4126_call = mutated_mod.get_global_var('func_4126')
const_4670 = relay.const([-6.016846,-6.252819,-3.421669,-6.661000,-5.212205,-5.461889,2.302965,-4.951231,-9.874437,-0.204657,-7.251839,-7.538870,-4.377709,3.169490,2.932730,6.215835,2.690894,-6.547517,-6.571624,9.210130,-8.234467,3.874969,4.919147,-8.046286,7.922814,4.763828,4.694847,-4.488675,-4.299381,0.330788,8.165761,2.966485,-2.591460,-9.111210,5.043509,-6.670518,2.031563,8.147753,8.726446,-2.277368,2.619230,3.842602,7.379600,-0.130499,1.657595,0.868128,-2.057405,7.234244,2.159736,9.788937,-3.727418,-2.080706,8.691592,-9.399731,9.564693,-4.166465,-7.729092,8.667758,3.099542,-2.292391,-2.784032,2.473631,-2.144839,0.423074,-4.472140,-9.088840,-3.837761,-8.149332,7.171626,0.611201,-4.875061,1.182662,6.002296,-2.747763,-4.755186,0.322401,9.376009,-1.258579,5.239274,1.873243,-3.691171,-2.715946,-7.817290,2.301072,1.946118,4.739349,-7.089904,9.558303,2.816357,-8.641182,-3.305945,-0.614804,7.393784,3.313677,4.414547,-6.071659,7.554064,-2.801775,-2.825275,3.524274,-7.758271,8.396242,1.576313,-2.032752,-5.895469,-7.071209,-2.659901,-1.774333,0.560151,9.411368,-3.747163,1.136391], dtype = "float64")#candidate|4670|(112,)|const|float64
var_4671 = relay.var("var_4671", dtype = "float32", shape = (960,))#candidate|4671|(960,)|var|float32
call_4669 = relay.TupleGetItem(func_4122_call(relay.reshape(const_4670.astype('float64'), [2, 8, 7]), relay.reshape(const_4670.astype('float64'), [2, 8, 7]), relay.reshape(var_4671.astype('float32'), [960,]), ), 3)
call_4672 = relay.TupleGetItem(func_4126_call(relay.reshape(const_4670.astype('float64'), [2, 8, 7]), relay.reshape(const_4670.astype('float64'), [2, 8, 7]), relay.reshape(var_4671.astype('float32'), [960,]), ), 3)
uop_4673 = relay.atanh(bop_4665.astype('float32')) # shape=(11, 9, 2)
func_21_call = mod.get_global_var('func_21')
func_24_call = mutated_mod.get_global_var('func_24')
var_4698 = relay.var("var_4698", dtype = "float64", shape = (96,))#candidate|4698|(96,)|var|float64
call_4697 = func_21_call(relay.reshape(var_4698.astype('float64'), [3, 2, 16]), relay.reshape(var_4698.astype('float64'), [3, 2, 16]), )
call_4699 = func_21_call(relay.reshape(var_4698.astype('float64'), [3, 2, 16]), relay.reshape(var_4698.astype('float64'), [3, 2, 16]), )
bop_4702 = relay.logical_xor(uop_4673.astype('int16'), relay.reshape(bop_4665.astype('int16'), relay.shape_of(uop_4673))) # shape=(11, 9, 2)
bop_4726 = relay.left_shift(uop_4673.astype('int16'), relay.reshape(var_4664.astype('int16'), relay.shape_of(uop_4673))) # shape=(11, 9, 2)
output = relay.Tuple([call_4669,const_4670,var_4671,call_4697,var_4698,bop_4702,bop_4726,])
output2 = relay.Tuple([call_4672,const_4670,var_4671,call_4699,var_4698,bop_4702,bop_4726,])
func_4738 = relay.Function([var_4663,var_4664,var_4671,var_4698,], output)
mod['func_4738'] = func_4738
mod = relay.transform.InferType()(mod)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4738_call = mutated_mod.get_global_var('func_4738')
var_4740 = relay.var("var_4740", dtype = "uint32", shape = (11, 9, 2))#candidate|4740|(11, 9, 2)|var|uint32
var_4741 = relay.var("var_4741", dtype = "uint32", shape = (11, 9, 2))#candidate|4741|(11, 9, 2)|var|uint32
var_4742 = relay.var("var_4742", dtype = "float32", shape = (960,))#candidate|4742|(960,)|var|float32
var_4743 = relay.var("var_4743", dtype = "float64", shape = (96,))#candidate|4743|(96,)|var|float64
call_4739 = func_4738_call(var_4740,var_4741,var_4742,var_4743,)
output = call_4739
func_4744 = relay.Function([var_4740,var_4741,var_4742,var_4743,], output)
mutated_mod['func_4744'] = func_4744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4646_call = mod.get_global_var('func_4646')
func_4648_call = mutated_mod.get_global_var('func_4648')
call_4746 = relay.TupleGetItem(func_4646_call(), 2)
call_4747 = relay.TupleGetItem(func_4648_call(), 2)
output = relay.Tuple([call_4746,])
output2 = relay.Tuple([call_4747,])
func_4749 = relay.Function([], output)
mod['func_4749'] = func_4749
mod = relay.transform.InferType()(mod)
mutated_mod['func_4749'] = func_4749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4749_call = mutated_mod.get_global_var('func_4749')
call_4750 = func_4749_call()
output = call_4750
func_4751 = relay.Function([], output)
mutated_mod['func_4751'] = func_4751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_4801 = relay.TupleGetItem(func_3582_call(), 0)
call_4802 = relay.TupleGetItem(func_3583_call(), 0)
output = relay.Tuple([call_4801,])
output2 = relay.Tuple([call_4802,])
func_4820 = relay.Function([], output)
mod['func_4820'] = func_4820
mod = relay.transform.InferType()(mod)
mutated_mod['func_4820'] = func_4820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4820_call = mutated_mod.get_global_var('func_4820')
call_4821 = func_4820_call()
output = call_4821
func_4822 = relay.Function([], output)
mutated_mod['func_4822'] = func_4822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4443_call = mod.get_global_var('func_4443')
func_4445_call = mutated_mod.get_global_var('func_4445')
call_4847 = relay.TupleGetItem(func_4443_call(), 0)
call_4848 = relay.TupleGetItem(func_4445_call(), 0)
var_4851 = relay.var("var_4851", dtype = "uint32", shape = (14, 14, 14))#candidate|4851|(14, 14, 14)|var|uint32
bop_4852 = relay.subtract(call_4847.astype('uint8'), relay.reshape(var_4851.astype('uint8'), relay.shape_of(call_4847))) # shape=(14, 14, 14)
bop_4855 = relay.subtract(call_4848.astype('uint8'), relay.reshape(var_4851.astype('uint8'), relay.shape_of(call_4848))) # shape=(14, 14, 14)
output = relay.Tuple([bop_4852,])
output2 = relay.Tuple([bop_4855,])
func_4863 = relay.Function([var_4851,], output)
mod['func_4863'] = func_4863
mod = relay.transform.InferType()(mod)
mutated_mod['func_4863'] = func_4863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4864 = relay.var("var_4864", dtype = "uint32", shape = (14, 14, 14))#candidate|4864|(14, 14, 14)|var|uint32
func_4863_call = mutated_mod.get_global_var('func_4863')
call_4865 = func_4863_call(var_4864)
output = call_4865
func_4866 = relay.Function([var_4864], output)
mutated_mod['func_4866'] = func_4866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3890_call = mod.get_global_var('func_3890')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_4880 = func_3890_call()
call_4881 = func_3890_call()
func_3544_call = mod.get_global_var('func_3544')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_4882 = relay.TupleGetItem(func_3544_call(), 1)
call_4883 = relay.TupleGetItem(func_3545_call(), 1)
func_3760_call = mod.get_global_var('func_3760')
func_3763_call = mutated_mod.get_global_var('func_3763')
call_4899 = relay.TupleGetItem(func_3760_call(relay.reshape(call_4880.astype('int64'), [14, 14, 14]), relay.reshape(call_4882.astype('int64'), [14, 14, 14]), ), 1)
call_4900 = relay.TupleGetItem(func_3763_call(relay.reshape(call_4880.astype('int64'), [14, 14, 14]), relay.reshape(call_4882.astype('int64'), [14, 14, 14]), ), 1)
func_4646_call = mod.get_global_var('func_4646')
func_4648_call = mutated_mod.get_global_var('func_4648')
call_4902 = relay.TupleGetItem(func_4646_call(), 2)
call_4903 = relay.TupleGetItem(func_4648_call(), 2)
output = relay.Tuple([call_4880,call_4882,call_4899,call_4902,])
output2 = relay.Tuple([call_4881,call_4883,call_4900,call_4903,])
func_4934 = relay.Function([], output)
mod['func_4934'] = func_4934
mod = relay.transform.InferType()(mod)
output = func_4934()
func_4935 = relay.Function([], output)
mutated_mod['func_4935'] = func_4935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_4960 = relay.TupleGetItem(func_4205_call(), 3)
call_4961 = relay.TupleGetItem(func_4207_call(), 3)
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_4966 = relay.TupleGetItem(func_3885_call(), 2)
call_4967 = relay.TupleGetItem(func_3887_call(), 2)
var_4980 = relay.var("var_4980", dtype = "float32", shape = (338,))#candidate|4980|(338,)|var|float32
bop_4981 = relay.greater_equal(call_4966.astype('bool'), relay.reshape(var_4980.astype('bool'), relay.shape_of(call_4966))) # shape=(338,)
bop_4984 = relay.greater_equal(call_4967.astype('bool'), relay.reshape(var_4980.astype('bool'), relay.shape_of(call_4967))) # shape=(338,)
uop_4988 = relay.cos(bop_4981.astype('float64')) # shape=(338,)
uop_4990 = relay.cos(bop_4984.astype('float64')) # shape=(338,)
uop_4995 = relay.sinh(uop_4988.astype('float32')) # shape=(338,)
uop_4997 = relay.sinh(uop_4990.astype('float32')) # shape=(338,)
func_3582_call = mod.get_global_var('func_3582')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_5010 = relay.TupleGetItem(func_3582_call(), 0)
call_5011 = relay.TupleGetItem(func_3583_call(), 0)
func_3836_call = mod.get_global_var('func_3836')
func_3838_call = mutated_mod.get_global_var('func_3838')
const_5013 = relay.const([[2.995370,-3.883822,9.869050,-9.739368,5.065349,-9.759754,-1.068150,1.399553,-7.291623,-7.003945,0.602611,-2.666718,7.282322,9.013806,-1.148753,0.231897,3.087304,-5.292900,-2.660935,9.291933,7.278466,2.603537,-5.584525,2.312291,-8.678044,-5.695288,7.682274,-8.560527,-6.461801,-9.631920,6.108727,-0.458012,-0.729785,9.279796,2.812712,-1.260819,2.061294,-0.393432,-3.241475,-3.771974,4.596628,0.172997,-9.416158,0.937813,3.451073,3.176823,0.162700,-5.898470],[-7.452627,6.006924,-4.839563,-6.053515,8.058428,2.400137,-1.527374,-3.033999,9.532803,2.511268,-2.990228,-8.706103,-5.909798,-9.220527,-4.673999,3.049785,-4.196771,-9.488000,-7.802837,-9.368927,-6.630065,-6.582313,-0.197657,-8.726996,-2.057676,7.890289,1.869661,-8.728177,7.589796,6.557672,9.678125,-8.453649,6.185212,-0.016603,-0.795143,0.147764,1.442004,2.226686,4.861544,9.470734,8.627089,-1.763766,-5.600086,9.624757,8.540378,2.284433,0.456464,-8.288381],[6.535600,2.590482,-9.134893,-6.690500,-2.101250,4.858486,3.290238,4.787013,2.230491,5.712579,-4.223297,1.529831,-1.463614,9.964536,-8.753905,-6.494342,-1.772642,0.305233,2.571711,-4.555301,-5.225703,3.679816,-4.605152,-8.173355,-1.439113,-9.461194,-6.154703,-9.626867,-1.211748,5.967928,3.136605,-3.851537,3.841096,-4.409315,8.613914,-4.069350,-5.826560,-6.731668,-5.020112,-2.394555,-1.236949,6.494707,-9.666513,1.743561,6.954608,-1.497040,3.127124,0.347595],[-9.986399,2.484777,-9.323873,0.858327,8.468281,-5.190157,7.171496,-5.208575,8.791340,-1.684501,3.289261,-2.912900,-7.337603,6.411664,-0.215286,-6.237464,9.954710,-7.576530,9.377323,-7.371351,0.287595,-8.731725,-9.825180,8.894366,4.853885,5.064008,2.317601,5.857083,-0.400341,9.814823,9.227559,-6.757999,8.532736,9.164227,-5.274723,3.100246,-1.787409,-6.441555,-4.962621,-0.765802,-8.020145,-4.326868,2.384931,7.901878,9.005665,-4.151712,8.023550,0.462704],[-4.485951,8.252413,-6.313836,-0.536248,0.506940,1.705652,-6.012439,7.939048,-7.048491,1.334950,6.043932,0.669212,0.031712,-6.570164,-3.731322,-8.484417,-9.977976,-9.416422,-3.965081,8.733442,7.937386,-6.205651,-4.519765,-0.557875,9.185761,-1.347446,0.432558,2.165192,-1.681349,4.417611,0.396071,3.040317,7.132684,9.079983,-2.498498,4.129587,6.328160,-6.926058,3.993628,-3.936266,-3.755525,-2.654610,0.315026,-5.059916,5.577844,-6.246344,9.306138,-7.032479],[2.769520,6.203579,-2.554503,-0.553152,-8.244675,4.596421,1.279427,-5.329871,-1.390358,6.457468,2.758193,8.166443,8.533485,0.597859,2.785354,-7.785914,1.887485,2.051612,-6.106018,-4.926993,-9.881167,1.144717,4.312027,2.356993,-3.472298,7.647909,-6.779300,-0.980940,8.742703,8.067624,4.164089,6.193035,0.256822,-7.003641,-6.073644,-3.882076,-6.617630,9.514431,2.431258,7.505932,0.774256,5.727893,-0.042364,-0.857631,-0.185453,-9.002841,0.913317,-7.238184],[-4.820938,-0.512042,9.175428,7.994812,-1.823098,-9.082348,0.409245,4.619208,-2.271561,5.038634,-3.459697,-9.585522,3.089709,-4.851408,1.090539,0.161470,4.598626,-1.796675,-6.991164,-6.091502,-1.769717,-7.909566,7.620194,1.020684,5.910406,-9.022177,-0.762858,-5.428437,8.107922,-9.288596,2.919133,0.245323,4.216109,-2.771421,5.552862,9.124319,7.276258,-4.148583,9.689079,-2.076888,-4.556492,8.884426,-9.725145,-7.824729,-6.158169,-0.864762,-9.272667,5.850186],[7.443653,8.228178,-2.993681,0.903156,-2.017296,-0.099022,0.461835,-2.486096,9.208093,-8.139576,5.003610,-7.887843,4.757494,-4.834098,-9.484828,7.019543,8.565843,-3.500674,8.454626,9.882929,5.334238,-3.723452,-6.455859,-5.104991,-9.058015,0.222361,1.278265,7.385940,-9.592023,-0.170197,8.077732,7.414596,-5.257505,9.773210,4.571721,-2.166215,-9.035704,5.907805,5.672832,3.071848,-2.917084,-2.841262,-3.501477,-1.561573,2.960686,3.973363,-0.781203,0.220839],[-2.288418,9.117978,0.704307,8.363920,-0.775104,-1.913619,-3.895392,5.739910,0.153713,3.335085,8.703687,-7.306268,-0.353555,-7.093874,-7.490651,-9.724466,-8.045220,-7.150150,7.663200,8.750296,-2.323453,1.201370,8.521607,6.977607,-3.749396,-5.496982,-0.513474,-5.282825,-5.793544,-1.439944,-5.185024,-6.315530,-2.072197,-3.161482,-2.043773,0.419001,-7.786319,1.422321,7.609921,-9.825500,8.730026,8.912013,3.855946,6.478173,-8.851072,8.280819,-6.790671,9.181705],[-2.595257,-0.835859,-8.823507,-5.883956,-4.343823,-5.693908,-4.061186,-9.115680,-8.185121,-8.352470,9.378863,4.069689,4.780887,8.014182,-4.820050,-1.423274,-2.116135,4.276062,-0.815830,1.273783,-4.578552,-8.791126,-1.040120,-7.033600,-6.371191,2.936030,-7.723018,-1.519834,1.613199,1.335207,-4.160255,-2.351868,-8.951492,6.178013,6.539994,-1.979126,1.923681,9.962980,6.270907,-1.779282,-1.700873,5.615215,-9.201513,-9.843496,7.499136,-2.805370,1.770217,4.562309],[-1.802502,-3.465750,7.360230,3.049441,6.121870,7.146295,8.698922,-6.169834,3.519466,-1.587968,2.699864,4.386164,4.031543,2.039210,-1.259487,-8.281605,7.165123,7.247839,3.192432,2.411496,4.160471,7.390098,-5.823407,-7.851733,-3.437659,-3.439319,7.423380,-7.262539,2.437274,2.185486,-3.457525,-6.834585,-0.563385,1.290397,4.390226,-5.868969,4.762067,3.043166,8.611755,9.360775,-3.040705,-4.687089,9.159303,-5.056075,-4.424349,-5.903057,-0.257723,-9.764911],[-0.909959,-2.128935,8.314163,-6.041531,0.571267,-1.812478,5.512655,-8.939925,8.637093,7.061299,2.160667,3.435396,9.718904,5.683836,8.161484,-7.034504,1.699461,9.964661,2.505223,0.961018,5.536610,-8.137585,4.206700,-8.511226,2.965014,5.594442,-7.112085,-3.738815,-2.689711,8.356947,3.352966,-9.301569,-7.176392,6.054359,4.761462,-0.263153,5.324046,-9.191647,3.601880,0.092489,-5.253096,-5.704065,-7.670545,8.679240,-4.489316,-1.123387,-9.274910,-8.255949]], dtype = "float32")#candidate|5013|(12, 48)|const|float32
call_5012 = relay.TupleGetItem(func_3836_call(relay.reshape(const_5013.astype('float32'), [12, 6, 8])), 0)
call_5014 = relay.TupleGetItem(func_3838_call(relay.reshape(const_5013.astype('float32'), [12, 6, 8])), 0)
bop_5018 = relay.logical_and(uop_4995.astype('bool'), relay.reshape(bop_4981.astype('bool'), relay.shape_of(uop_4995))) # shape=(338,)
bop_5021 = relay.logical_and(uop_4997.astype('bool'), relay.reshape(bop_4984.astype('bool'), relay.shape_of(uop_4997))) # shape=(338,)
func_4560_call = mod.get_global_var('func_4560')
func_4564_call = mutated_mod.get_global_var('func_4564')
const_5023 = relay.const(2.948439, dtype = "float64")#candidate|5023|()|const|float64
const_5024 = relay.const([[1.217395,9.241359,7.596973,6.046190],[-9.311979,-0.936526,-5.420813,5.934159],[9.422952,9.061599,-2.253529,-0.396180],[2.208779,-2.302245,-7.639541,0.224790],[-8.729809,3.136847,-4.895242,-7.111444],[1.734721,4.898836,1.932726,-8.514890],[1.426388,3.629737,-6.339025,4.530891],[-8.206840,8.743517,8.967657,-7.672746],[8.391177,3.488671,-1.394879,-7.810139],[7.329942,8.904963,-8.424650,5.481855],[2.661777,4.086078,-3.330426,4.216224],[1.219886,8.924496,3.754752,-1.313081],[3.456303,2.198748,1.662477,-5.458992],[0.358852,4.373085,3.548812,1.533388],[6.614985,9.965642,-6.029565,-2.080979],[0.198720,-0.425021,6.333145,-4.625182],[-1.474510,-5.581147,7.679064,-7.754815],[-7.348931,5.133629,-3.373208,-2.158004],[5.354581,-3.724517,-5.070319,1.702458],[-9.483108,8.535382,-4.405783,5.851507],[3.697386,-0.887891,-2.957468,4.714488],[-2.901142,-1.760407,-4.581292,1.977401],[-7.712781,6.672924,-8.351882,4.727761],[-2.689498,4.628799,-2.449029,8.785298],[-5.566376,-3.914381,2.668576,-9.438217],[-9.268940,-9.307042,3.048951,0.211470],[7.613168,9.152994,9.208917,9.810445],[6.310695,3.024607,3.388464,0.207106],[-8.893642,-7.465807,6.420082,-5.315097],[8.309670,-1.803177,-2.026217,4.021140],[-7.454183,4.659101,4.978242,7.663179],[0.689091,-2.534599,-5.004992,0.962707],[6.416572,-8.664165,-8.937983,8.228902],[9.598026,-4.800927,8.567120,-3.503840],[-0.073837,4.081597,-3.454546,-8.343522],[2.326800,-5.720077,-9.583918,1.418412],[7.217026,0.090582,-7.462297,8.175089],[-9.538513,4.814595,0.071196,-4.900569],[3.044774,2.566431,-8.030193,-2.796881],[-9.342088,1.303839,-6.202304,5.187391],[-1.412908,6.007770,3.888487,0.919897],[-6.060600,4.358814,-2.065499,-6.147534],[1.493652,0.437720,1.810708,-5.023735],[-0.873666,2.804815,-3.533311,-4.596534],[5.736339,3.852155,-2.732091,-2.317117],[4.975635,1.228203,8.528781,4.847046],[3.665695,7.210656,-8.792510,8.086614],[1.013538,2.002622,3.235976,4.302630],[6.185313,7.413206,9.877415,2.829067],[6.277537,-1.277352,-0.671652,3.176766],[-5.417292,-2.396564,-0.314117,7.009158],[-2.604771,3.290204,-9.957465,-3.117631],[3.022326,5.015808,-2.173606,9.304540],[8.938918,-9.226097,-6.269269,-7.780542],[-7.334593,5.331148,-7.990600,3.971019],[-4.222669,-1.225948,4.660672,-6.522798],[-7.478804,9.765811,-1.799011,-8.088614],[-0.935469,0.355612,-9.882053,6.207441],[0.240183,-9.792896,0.531243,-5.537303],[-4.446156,-1.643795,-1.830968,7.845764],[-3.681417,4.426809,1.589945,2.296042],[-4.630961,-3.833044,-3.710124,-8.268835],[2.036410,0.131468,-5.408790,-5.776870],[-9.649215,-2.109454,6.986775,8.661434],[-1.776429,7.734622,-7.856585,0.560403],[0.966057,9.623863,0.087623,9.422737],[-8.283194,8.155548,7.448258,-2.367872],[-3.924966,-0.660443,-0.703350,1.049218],[-1.378804,-5.505908,8.490880,5.830788],[-3.993376,-2.176029,-8.080871,-3.574217],[-2.030677,2.044613,0.305486,1.753636],[-9.405364,0.939780,8.648208,3.374583],[9.044360,-6.730379,0.712236,-0.385686],[8.076853,4.028273,-4.883159,-8.509896],[7.196452,-5.031539,6.693723,-1.938519],[9.784692,-0.382104,1.964951,-7.514904],[-1.756462,6.973886,7.360325,1.391589],[4.427492,-5.628122,-2.751717,-8.577321],[2.990665,-3.173612,3.903624,-8.079556],[-4.115309,7.867575,3.713647,5.989137],[3.013861,1.001806,-6.867521,9.647445],[-2.830844,9.586611,-7.936703,-7.074673],[8.106712,2.998790,-0.326165,7.475690],[-9.259914,-2.858528,6.817308,2.553573],[-5.565262,5.978660,7.527739,-5.614219],[-7.039574,-4.580817,-1.153175,-4.354910],[4.568565,-8.841614,-5.296251,2.278889],[-3.110326,-3.970013,1.651152,-1.810072],[-1.586863,-2.242388,-3.842968,4.830630],[-6.628889,-8.596932,8.449812,-1.572174],[-8.975003,-7.844199,9.499502,3.390153],[6.125615,0.680673,-6.444550,-0.811898],[1.115067,-2.991061,-4.716812,-0.447187],[-3.464075,4.495309,-3.272684,-1.263198],[-7.278826,4.602682,-5.507293,5.717567],[-4.768981,-8.634339,9.813945,9.349870],[6.205721,-8.523142,-3.593079,8.832732],[1.959961,-2.662614,-3.544923,-7.920619],[4.213600,-9.044184,5.313135,3.074487],[-6.332251,-4.927824,-3.898305,-0.724409],[2.624263,8.723702,-9.183817,-1.738541],[5.750150,2.653363,-0.662835,-9.237518],[9.409836,9.395827,0.337929,-9.886444],[3.744455,6.341383,-2.790063,3.837218],[-7.475455,7.418080,4.676056,9.017653],[-5.230144,9.901540,-4.259625,-0.757028],[-7.529360,-7.602929,-4.183584,-7.371765],[3.753222,-9.420425,2.853385,-9.440202],[-8.621848,-3.032076,9.352666,2.313400],[-9.868802,-0.501022,-3.510972,-6.122973],[1.590091,-6.015436,8.030971,9.699970],[-6.532616,4.086700,1.177770,-8.758462],[4.471664,-9.293335,-7.636207,9.022607],[-8.499168,4.751981,-4.359859,5.242887],[3.632327,-4.859118,-0.072129,2.235131],[2.548398,4.231576,-7.458859,-0.001237],[-5.837115,3.015922,-5.328057,-1.615556],[-7.154288,-3.282225,3.916210,-8.622074],[1.411749,-5.780253,-9.853315,7.292604],[-5.380885,8.844650,-7.338482,-4.502512],[-8.706124,8.792449,-5.646495,6.918080],[4.455593,-8.793898,4.948991,8.430176],[6.013627,1.830485,-4.546784,5.429023],[1.617544,0.677590,-1.024553,-9.261507],[1.608404,-8.909688,7.875231,4.368087],[4.675796,-9.457262,-2.481087,7.651991],[2.595457,-0.503735,7.358612,-9.367314],[-9.117552,-0.174369,2.299666,7.294623],[-7.558697,0.473729,3.659892,4.889462],[-5.893490,2.672102,6.811592,-3.955089],[7.631355,-6.340363,-6.707286,8.194155],[0.951771,9.976481,7.016110,6.064806],[-0.132935,4.254028,2.084993,-5.858050],[-6.803890,8.954562,5.038434,-9.803415],[-3.159354,5.897650,2.457039,1.733001],[4.471561,-2.290931,6.502117,-4.811158],[-5.049672,0.941088,-2.234476,3.439072],[7.182739,6.507324,-1.849223,-8.452418],[-4.691950,1.019981,-2.512278,-2.952151],[4.514211,-3.795325,2.286733,2.090725],[0.108673,9.027758,-8.606804,-1.671507],[8.345862,-4.251061,-2.757150,-3.903514],[2.972770,-0.344656,-8.872870,3.261897],[1.842858,-2.660554,-0.201547,-9.199554],[-7.177778,-3.969326,-1.464235,8.193337],[-1.641106,2.120602,-7.782339,2.651225],[7.120966,3.823582,3.253981,-2.902811],[7.003686,4.469713,-0.863336,9.406824],[5.431883,4.800041,-8.097693,-1.634767],[6.668489,9.209386,9.362806,5.153784],[7.026440,9.547826,8.912380,0.157466],[-5.332610,-8.649791,6.447601,-1.591346],[9.135153,-9.822081,-9.874315,-0.582242],[5.820464,6.438160,0.757357,3.006626],[9.671999,2.989839,-0.861549,6.380400],[0.182947,8.422825,2.086200,1.704865],[-9.674860,2.155506,-7.744983,-0.521198],[5.021180,7.853979,-8.154740,4.465680],[1.112165,-1.803120,-5.903232,-5.257127],[6.467836,-3.245514,2.231778,-5.051485],[4.353189,-1.355201,2.565897,0.357871],[-3.187547,2.433349,-2.734816,1.904937],[1.294316,8.741233,2.873992,8.541908],[-7.649160,-6.323197,-0.972494,8.452811],[-6.447013,7.083032,-1.763643,-1.543593],[7.392203,3.483293,3.027122,9.411388],[-4.351326,-2.276791,8.559565,-3.605183],[0.583404,5.273459,5.393559,9.649014],[8.367391,-2.016823,-6.512124,-7.527207],[-7.691119,2.479429,-9.868305,1.733161],[9.221879,2.777705,9.715407,-8.595187],[-6.117483,-5.981813,-9.116054,5.006958],[9.216231,3.450762,-0.804400,2.592251],[7.186068,-4.999650,-8.723119,-2.539594],[9.749346,-4.701639,-7.940614,9.646455],[-7.062954,-7.844192,-4.159752,-1.312762],[1.152986,4.484061,-6.239582,2.706308],[4.679705,7.098678,8.141364,1.861063],[0.560059,5.057598,5.019494,-7.184306],[9.131274,-5.038044,-5.640422,7.971809],[9.992905,-4.326474,4.043913,6.226100],[1.684412,-5.582636,1.989827,-9.449797],[6.367862,-5.664442,-8.736620,2.298668],[7.175264,6.169481,-2.532629,-8.909114],[7.550648,5.864856,-2.881141,0.815321],[-9.287025,-1.764459,-1.876424,-5.223753],[-4.223136,-5.274960,-9.450626,-2.556286],[7.593419,5.545641,-6.387127,6.852015],[-6.880379,6.093476,-0.130735,5.242090],[-0.297368,-2.317485,-5.980523,3.936231],[8.803916,5.097862,6.954131,6.403708],[-9.985913,-0.908110,-0.824207,-9.294753],[7.317085,0.875589,2.235182,-1.232719],[-0.721242,-9.260867,7.413619,-7.728794],[9.659045,-8.567174,4.844141,4.460686],[6.326787,6.077184,-9.483089,-4.267048],[1.341912,4.415323,-6.315524,-9.431870],[-8.204927,6.215243,-6.412620,-7.848376],[-3.216865,-0.004659,-0.635234,8.761542],[-9.349045,-8.029448,-7.188767,-1.187872],[-3.945166,-6.835515,3.709490,-8.989532],[3.416317,3.902758,9.654697,7.029691],[8.675912,2.454044,-8.912468,8.544904],[9.817164,4.549650,-2.939647,9.927254],[3.577356,-9.764306,8.888456,-2.888690],[-9.047244,-4.319930,1.478518,5.061734],[-0.630301,-1.254690,6.762564,8.791392],[1.486324,2.353567,-0.757742,8.808178],[-2.112832,-0.276445,-4.304876,8.028058],[-3.661924,-0.478338,2.266001,-3.014266],[-7.708810,-0.651615,-5.454292,8.367492],[-0.907757,-3.643639,4.165762,-7.902167],[4.654040,1.138325,4.898242,-2.805464],[1.214103,8.895418,9.436776,-9.203381],[4.172694,1.102244,-5.663483,3.409372],[8.519999,1.890368,3.449547,7.915209],[-7.679055,-8.102002,9.055843,1.095886],[8.979475,2.854129,2.577469,2.366278],[9.102787,-5.295000,0.456838,-8.452528],[8.396813,3.531003,-1.235857,5.143919],[-1.186805,-7.470380,1.824160,-0.660115],[2.931165,7.483036,6.175570,4.131933],[2.953451,-2.457412,0.975406,-0.200185],[-7.645116,-5.100634,-4.809657,3.171465],[5.771606,-2.164891,6.041892,-5.892541],[-1.931487,6.224855,-5.923593,-5.193924],[1.967472,-6.158504,-3.959247,3.777165],[-8.159433,5.004419,-3.389636,8.178038],[-7.601310,-0.401895,-1.589933,-6.614288],[-2.934305,-3.388241,-8.570162,-3.493733],[5.943999,8.171917,7.411658,-9.383089],[-8.994936,-7.217451,-9.405525,-5.229806],[4.834595,6.306895,1.762175,2.216127],[2.535157,-1.922431,-8.440563,2.845324],[3.116642,3.309816,-8.146427,6.597258],[7.334925,6.151961,1.823089,6.514683],[-7.973907,8.427113,-9.415947,4.013625],[-7.160447,-5.745177,-8.439576,9.255230],[-1.345730,0.017788,-8.195745,4.628540],[-5.814064,-8.756929,-5.303175,5.998320],[-7.278812,5.296708,7.452554,-4.332611],[-4.491262,-4.481793,1.260403,9.293981],[4.259987,-4.765255,6.710853,8.835923],[-7.480350,3.494692,9.005673,2.329416],[0.385266,6.838493,1.249737,2.681204],[-7.666704,-3.959877,5.294660,0.005557],[-9.457443,-1.685895,3.317594,-1.384543],[3.860494,-6.852602,-5.534001,-2.758451],[-1.716067,-0.362230,-0.636870,-4.509337],[3.422202,-1.631219,-1.411010,2.997501],[0.793664,-5.221795,-0.180248,-8.956907],[-7.714003,-3.437504,-5.502578,6.855048],[-5.803091,-8.086372,4.786082,7.017912],[6.898237,7.221196,5.718577,2.935778],[-1.008981,5.535168,-9.983598,9.572558],[0.799022,8.712942,-3.320824,-1.159583],[-4.709358,9.877738,6.134070,-3.069042],[-0.760174,-7.305671,7.581462,-4.063751],[9.746450,-3.692219,4.417219,1.776624],[5.070147,-3.098542,9.875131,4.969724],[6.829307,3.559819,9.979987,-1.737195],[5.167974,-8.741791,-1.594857,-9.302442],[-8.504818,7.306258,-3.975226,-8.460246],[3.706646,-6.780323,-0.842302,-2.977182],[-7.259943,-5.395977,7.947123,-7.179962],[-9.278273,1.470504,7.383031,-5.843451],[-0.626022,-9.243874,-9.321938,2.975159],[5.548893,-1.093465,5.790150,-1.603940],[-5.957298,7.601350,2.805203,-0.662480],[-3.819740,-0.871453,-9.394557,-5.014867],[-5.404093,8.676452,3.120380,-1.783469],[-6.752608,-3.094771,8.211932,-4.665774],[-9.291251,2.763034,1.456107,7.205087],[-2.240427,5.769003,-5.534752,4.326360],[-6.242947,-6.809822,5.650009,8.176931],[3.227156,9.226981,-3.668831,9.530024],[-4.280964,-7.776676,-1.265473,1.830642],[4.320320,3.463894,-1.346718,-1.958932],[-6.295594,0.886687,2.146643,0.563741],[-1.829215,8.374115,-3.642450,4.202164]], dtype = "float64")#candidate|5024|(280, 4)|const|float64
call_5022 = relay.TupleGetItem(func_4560_call(relay.reshape(const_5023.astype('float64'), []), relay.reshape(const_5024.astype('float64'), [10, 14, 8]), ), 1)
call_5025 = relay.TupleGetItem(func_4564_call(relay.reshape(const_5023.astype('float64'), []), relay.reshape(const_5024.astype('float64'), [10, 14, 8]), ), 1)
var_5026 = relay.var("var_5026", dtype = "bool", shape = (338,))#candidate|5026|(338,)|var|bool
bop_5027 = relay.not_equal(bop_5018.astype('bool'), relay.reshape(var_5026.astype('bool'), relay.shape_of(bop_5018))) # shape=(338,)
bop_5030 = relay.not_equal(bop_5021.astype('bool'), relay.reshape(var_5026.astype('bool'), relay.shape_of(bop_5021))) # shape=(338,)
output = relay.Tuple([call_4960,call_5010,call_5012,const_5013,call_5022,const_5023,const_5024,bop_5027,])
output2 = relay.Tuple([call_4961,call_5011,call_5014,const_5013,call_5025,const_5023,const_5024,bop_5030,])
func_5039 = relay.Function([var_4980,var_5026,], output)
mod['func_5039'] = func_5039
mod = relay.transform.InferType()(mod)
mutated_mod['func_5039'] = func_5039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5039_call = mutated_mod.get_global_var('func_5039')
var_5041 = relay.var("var_5041", dtype = "float32", shape = (338,))#candidate|5041|(338,)|var|float32
var_5042 = relay.var("var_5042", dtype = "bool", shape = (338,))#candidate|5042|(338,)|var|bool
call_5040 = func_5039_call(var_5041,var_5042,)
output = call_5040
func_5043 = relay.Function([var_5041,var_5042,], output)
mutated_mod['func_5043'] = func_5043
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5119 = relay.const([[[-0.275913,-0.740683,-9.375006,0.014523,-1.257264,4.677315,-7.021773,3.270338,9.566826,-7.333821,9.379469,-9.573568],[4.030815,7.458194,2.313537,9.331098,5.216673,-0.069116,2.794397,-0.997994,5.857880,5.042716,9.857651,-3.652823],[-5.040798,6.702033,2.900582,9.417003,5.510963,-4.225811,8.127242,-9.461741,-3.694699,-0.529996,3.557639,9.907447],[-6.912777,-5.995441,6.919675,-9.904917,9.297483,0.775351,-2.897452,9.806846,-6.325384,-3.103886,-0.170523,-2.517389],[4.443521,-4.750980,-6.109103,-2.905101,0.320594,-4.766374,9.352067,-6.612401,-4.212675,4.758537,0.376439,-6.369190],[-2.530069,0.789659,-4.586609,2.941412,0.212174,-2.065765,4.113292,-9.453729,6.548090,6.501955,-0.053856,9.597004],[-8.000724,0.265459,-3.227558,9.541600,-9.328990,5.522711,-1.963129,1.021780,-3.673977,5.811955,-1.964389,-5.430017],[-2.892993,-5.793671,-1.820763,-3.776788,-8.016964,-6.532029,5.871984,0.230794,-4.955368,-2.612591,-7.267083,-5.989886],[5.058091,-1.484042,-8.311784,6.986671,0.680331,3.096394,-0.107980,-1.369118,3.141351,5.467679,-6.089823,-1.146956],[2.098231,7.633342,-3.796806,-1.888654,-4.451612,1.139857,-5.006865,8.087209,-7.809769,2.103866,-6.392955,3.211571],[-4.380208,2.176344,-0.863179,6.851255,-5.170179,2.929211,7.136985,6.801275,-4.876240,-4.887127,1.126817,-9.145740],[-7.279609,-4.286757,8.127755,-0.338119,-4.240801,-1.130859,5.418926,-7.136207,1.050629,9.296779,-6.861486,-5.435885],[4.801981,9.938689,-5.165888,9.887876,4.867344,-4.371459,7.621451,-7.672770,-2.099785,-7.653146,-1.510465,6.729590],[-9.172713,-3.874864,5.634771,-5.187422,7.236609,-3.574096,4.639715,-6.173309,6.949584,-4.323397,0.175122,6.884510],[2.582467,-0.387085,-8.324023,3.060206,-7.367853,2.360451,-8.422129,-2.018554,1.729605,-7.192465,-5.607135,1.884027],[1.436878,7.797773,-0.296102,-9.043849,-1.941982,-5.055247,-4.356434,-1.427829,5.407092,5.382329,2.464612,-2.715576]],[[-5.282343,6.573467,0.499055,-7.520137,-5.883743,-9.318775,-0.459945,1.424747,9.171703,-8.727679,1.303496,-0.485336],[-7.469574,1.311415,7.492769,2.580594,-6.682474,9.909480,7.403041,-3.019244,5.012241,5.770202,3.961407,-9.889524],[-3.334243,-8.462937,5.984725,-8.220582,-8.664001,0.248484,9.830812,8.603067,-2.886390,-0.824717,1.107011,2.337728],[3.547727,-8.591652,9.987050,1.463285,7.412264,-3.922079,-5.999689,5.867547,-2.365561,-1.542541,2.658233,9.951777],[-8.274541,3.176800,-5.061739,-9.220190,0.908214,-7.793727,-2.640632,-4.396138,4.059349,-1.626516,-5.875164,8.537383],[1.120673,-8.276898,3.092686,-1.660633,4.917798,3.634198,-2.173158,5.314271,7.162136,8.883005,9.265635,3.801035],[-2.942525,-1.094655,4.604194,3.469998,-7.515126,2.171486,0.133871,4.616486,-6.071326,-6.057666,0.796586,-3.632410],[2.286944,-9.466115,-2.029223,0.258760,7.879545,0.428133,8.164420,7.633221,-1.165942,-4.938493,-8.304779,2.331728],[-1.228246,-8.454178,0.535625,-1.915832,-9.971893,-9.886418,3.049355,4.975208,3.120986,8.647469,4.591880,-9.811851],[-8.688111,6.920948,3.954682,5.171326,-5.470829,3.833437,-4.790151,-6.993572,-6.358161,6.158141,-2.988972,-2.078517],[9.463000,2.774542,1.316237,8.546460,-0.966742,-5.381154,4.238969,4.609042,8.927451,1.978075,4.632977,-4.807652],[-5.189592,0.944118,-5.140453,2.723124,3.589753,-3.926274,-6.742294,-6.434660,-3.944677,-8.465653,-8.221607,2.437016],[-7.192050,-2.690458,-4.555842,7.786398,-9.453260,-3.757399,8.050346,0.987097,-6.812717,6.778977,4.657701,3.282178],[-6.363377,1.550351,3.043123,2.213070,3.381808,0.984068,-2.302921,8.686189,6.625051,-0.387647,5.407124,-4.861752],[1.979918,-5.022333,0.951185,1.031232,-1.384180,7.694390,4.714212,8.607341,-0.656763,8.783223,-9.277953,9.047200],[-1.122055,-8.473909,5.574186,0.548706,-6.572531,0.536904,7.139143,6.475722,4.421006,0.117195,8.297626,-8.550174]]], dtype = "float64")#candidate|5119|(2, 16, 12)|const|float64
var_5120 = relay.var("var_5120", dtype = "float64", shape = (2, 16, 12))#candidate|5120|(2, 16, 12)|var|float64
bop_5121 = relay.less_equal(const_5119.astype('bool'), relay.reshape(var_5120.astype('bool'), relay.shape_of(const_5119))) # shape=(2, 16, 12)
output = bop_5121
output2 = bop_5121
func_5131 = relay.Function([var_5120,], output)
mod['func_5131'] = func_5131
mod = relay.transform.InferType()(mod)
var_5132 = relay.var("var_5132", dtype = "float64", shape = (2, 16, 12))#candidate|5132|(2, 16, 12)|var|float64
output = func_5131(var_5132)
func_5133 = relay.Function([var_5132], output)
mutated_mod['func_5133'] = func_5133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_5146 = relay.TupleGetItem(func_4205_call(), 1)
call_5147 = relay.TupleGetItem(func_4207_call(), 1)
func_1256_call = mod.get_global_var('func_1256')
func_1265_call = mutated_mod.get_global_var('func_1265')
const_5156 = relay.const([[-2.011553,3.228726,-2.442892,1.077987,-8.336555,-4.610879,-9.686508,6.666226,3.548885,3.149058,6.928934,-7.715894,-1.255307,1.111082,-3.830264,9.368633],[6.639584,-5.474467,4.637731,0.213066,-6.570435,-0.290388,-0.960085,2.557552,9.479182,9.908356,-1.068795,7.130990,2.213955,-7.632518,-3.478452,-4.110544],[-0.595158,4.305998,5.379518,0.066111,9.103658,-4.764833,-7.987798,4.822343,0.357263,-8.504128,-7.622272,-1.267413,-5.322552,-5.307559,7.873355,-7.904266],[3.400563,3.224372,6.521929,-0.532781,5.343151,-7.320305,9.797530,4.188871,-0.557277,-1.418899,1.086795,-5.510018,9.731917,-8.783882,0.447790,1.452349],[7.087990,8.931747,8.578009,7.269573,8.778019,-1.716667,5.604942,4.045271,5.522943,5.476398,-1.980120,9.351575,-3.682358,-9.262820,-2.958378,-9.369078],[0.773210,-3.065948,5.546317,9.757139,3.143834,5.815985,5.886873,-7.870686,8.917178,-2.698409,7.440344,8.926216,0.460338,-8.616975,3.845100,1.565408],[-9.716806,-8.738387,6.170660,-1.602744,8.632899,-4.278152,-0.054942,-0.418253,-4.688183,-5.300335,-9.963697,8.933061,1.165077,5.599229,-9.510133,9.706714],[6.945896,-9.125141,2.395184,0.340767,9.682483,-4.556620,0.597768,7.516114,6.086883,4.894406,0.416520,3.331066,-7.510602,-1.948764,-1.132016,-4.732984],[9.221379,-7.615412,0.189115,1.304272,7.853631,2.725414,-9.764007,-8.216632,-9.428074,8.422315,-4.752232,-5.951487,-0.915073,8.467551,5.334842,-4.971060],[4.906683,8.780952,-0.523677,2.619719,-4.612316,-5.108780,6.660165,-5.464197,5.233736,2.924556,7.608318,-1.727297,-4.551231,-1.495756,5.370903,-3.453485],[3.849920,-0.761823,3.143129,-4.452620,-5.454894,-7.904006,9.864935,0.047605,3.780305,5.377491,-9.204825,-7.221543,5.496218,-8.039302,4.100349,1.494260],[8.942092,-8.658613,8.726934,-6.148072,-6.289989,6.459797,-9.207172,-8.299876,-2.978189,-8.588577,1.783908,1.429554,1.524529,-3.405206,0.114506,1.302813],[5.965175,8.594363,-7.420911,-1.919316,-4.889250,9.033420,-9.303621,-5.014331,9.972003,2.461899,2.215056,9.518661,6.106075,6.908762,-8.396927,3.595116],[7.565855,-8.031963,-3.470937,-5.625227,4.717065,8.037532,8.228418,-7.380405,-4.083815,7.042439,-7.789897,-4.348875,-4.270167,-2.187552,4.295191,-3.852472],[-2.965152,-3.608616,5.115792,-1.664734,-9.526732,-2.757346,1.027448,-0.290121,1.501362,-1.681622,8.730482,0.025916,-6.526524,-5.565374,3.788412,-1.490551],[1.603497,-2.154955,3.878902,9.908834,6.218770,3.502723,-7.566435,-1.738383,-6.631460,-0.486617,-1.853959,5.386724,6.350542,-9.293813,7.698839,9.186517],[2.584519,1.577524,-9.572174,1.402543,5.900716,-1.024719,-8.032397,4.634104,0.136761,-7.574735,4.723907,1.333765,9.569820,9.248725,-8.358975,-6.868048],[-5.457489,8.303637,-7.913069,-4.080063,9.941791,-8.317066,-3.480388,-4.747416,9.612413,4.288275,4.849045,4.235622,-4.039193,6.602238,6.460660,-9.575127],[2.879937,-3.106851,-0.871138,9.963735,-6.173156,-9.471863,8.673974,-3.542711,1.844292,9.051588,-6.459124,-8.653823,6.463063,-5.845581,7.477871,1.746534],[-4.923171,-4.114586,-6.496552,-0.938409,8.679642,2.539536,-3.750167,5.695412,0.694706,-7.256779,-8.772431,-8.856882,-0.540429,-8.510075,-5.979615,-4.493380],[-9.063903,8.251376,2.803438,0.443710,-4.260248,3.538773,-3.723800,5.840245,-2.542480,-6.675043,-9.459366,-4.181834,0.556486,-2.529513,-6.847755,-3.785295],[1.124627,-3.410104,4.314383,-5.550031,-1.278776,-9.567205,-5.684168,7.198218,2.440610,1.636102,-4.416996,-8.347089,8.082520,8.430557,-0.479646,-5.515085],[-8.270143,-7.684459,-9.660333,5.120506,-4.434658,4.348958,6.744880,2.891682,-7.667097,-5.621680,2.263680,-9.201626,8.739886,-3.160466,7.967964,-8.035411],[2.410900,-6.918137,8.241441,2.072930,1.590249,-6.922790,0.081165,-8.907726,5.041482,-6.399755,4.362081,3.988810,1.949826,-0.373649,-8.484328,-2.299568],[5.014332,1.279911,-8.596882,1.057023,6.563611,3.342704,1.659461,6.973429,-4.592202,7.721406,-8.867858,2.663499,0.340901,8.713950,-1.102056,8.729904],[-4.126418,-6.582016,9.242423,-1.067946,0.708583,8.356619,6.870528,6.416279,1.466133,-2.060238,4.586537,7.861821,6.300983,-7.626202,-1.938954,-3.964060],[-5.547806,6.907366,-8.315023,7.164354,7.709249,-6.265328,8.747009,5.442928,8.800215,-3.371838,0.322329,2.462422,-1.557594,-2.358268,4.741040,0.422378],[4.308040,-8.435983,7.408506,3.416329,-8.098118,4.623437,-3.422539,-0.693425,-8.385664,-6.526493,-5.600417,4.828828,-4.980253,3.697236,-3.908756,6.877336],[-6.899786,1.564701,3.136824,-1.523009,-0.669394,9.468401,-1.742158,-7.660441,3.552501,-2.117820,-5.889817,-8.463370,9.967229,3.149500,0.775477,1.614729],[-0.029775,9.027896,-7.180299,8.350602,0.468474,9.036890,7.171246,1.301956,-2.558640,-9.335922,3.719646,3.740084,4.276537,-2.976904,-0.208241,-5.051554],[-0.322612,-4.926986,1.668462,4.352358,5.662676,8.276480,5.173207,2.489115,-8.712417,-4.800464,-5.676873,9.933315,-1.754319,-5.751993,8.863313,4.605046],[-3.165629,-3.043247,-9.011837,8.087688,-7.869804,-7.749582,5.638378,-8.761485,4.512560,4.094290,-6.013484,4.969171,-2.035147,8.678059,-2.457583,3.909078],[0.954255,1.836538,7.975501,5.882366,0.326956,0.580475,2.595100,-8.370835,3.261296,-8.074424,-2.318255,-3.269971,-8.197954,4.208370,8.982836,1.890662],[-6.123012,-8.655774,3.249482,-9.083175,7.859460,1.099389,7.658327,8.068892,4.647209,-5.982756,-7.527501,-3.712950,4.308111,9.167344,-8.260906,8.678563],[6.878425,7.449757,4.648644,3.629335,8.945464,2.981692,8.188648,5.180079,-2.593625,-4.972894,4.897147,4.215152,-5.014627,1.175168,-9.810301,-4.959394],[-0.798400,-8.586930,1.401931,-1.590718,8.130011,6.038009,-2.155401,0.894495,-1.818536,7.208430,6.816436,-8.243192,-0.186335,-7.922289,-1.084776,-1.915994]], dtype = "float64")#candidate|5156|(36, 16)|const|float64
var_5157 = relay.var("var_5157", dtype = "float64", shape = (40,))#candidate|5157|(40,)|var|float64
const_5158 = relay.const([8.221398,8.871092,-7.575518,-5.640090,7.631040,-0.230210,-1.404513,0.337129,7.120979,9.870463,-5.972451,9.513328,2.479028,6.020253,4.332454,8.071755,8.064180,1.408926,-9.424947,9.640779,7.652875,-7.525434,-9.669648,5.814177,6.277324,-0.499139,-1.525740,3.694705,-2.317025,-1.383096,-9.197412,-0.059244,2.024085,4.069566,2.456382,8.212200,4.529371,-0.277816,-8.708866,8.778212,-6.259753,4.147539,5.467543,-3.888743,-8.485545,3.230583,-5.360239,-9.722977,-4.160194,-2.333365,-2.523007,-7.515766,5.699897,-6.831525,-9.386923,9.721123,7.556474,-5.790500,7.236480,-9.621772,9.205927,9.735276,3.526741,8.530515,6.558887,7.744892,-4.040834,2.270596,8.272504,1.168631,-8.682596,-7.393686,8.693225,-7.173121,-8.440416,-7.620566,4.678414,0.282322,6.400943,-2.642731,-4.989207,8.802829,0.495187,-8.369275,-0.906026,3.852240,3.263168,-8.732750,-7.437059,8.384369,2.358817,-0.201610,2.957371,8.119895,4.435726,-6.627126,1.637013,-0.299778,-5.221730,9.936508,-2.440538,9.492048,7.972227,-6.743996,4.665984,-0.825042,-7.215534,2.617871,-1.642304,-2.709404,-4.389305,-2.077739,-6.585240,-5.117778,1.266279,3.504974,-0.840764,8.418700,-9.360041,9.256554,-0.266754,-7.940638,7.838172,-7.094815,-2.327327,8.924922,2.100562,6.914142,-4.824812,3.788448,0.305565,9.629510,8.877990,5.363174,-4.364009,3.440026,-2.674043,8.565681,6.688000,-0.870711,1.133831,-3.296438,7.334040,-5.134276,-4.788746,9.081593,8.089971,7.331647,-5.573713,-8.767851,-2.061375,7.158471,-6.206621,-5.689810,-5.430239,2.177152,-1.256338,0.562613,8.466807,5.187299,9.633581,-9.311263,2.729780,9.518327,-9.726021,-1.711121,-7.739444,-8.774924,4.072989,-5.205353,7.701369,5.009855,-3.370093,4.375735,-3.553334,0.613384,1.979760,-0.201597,6.356385,-4.794637,-4.900987,-3.830127,-2.068542,2.687223,4.565356,-3.874514,0.560935,-2.307420,-0.836999,-2.247742,-5.113273,-3.239235,0.091974,-6.151901,-9.292772,-9.419807,-2.841747,0.191187,3.372252,-8.970003,8.996183,9.157869,-4.861093,-6.183787,7.335006,1.923409,-1.405793,-2.670052,7.429898,-2.620841,5.411300,-1.264656,-1.550320,9.858855,-5.940157,-1.216173,-3.959580,-0.323752,-9.894945,8.731124,5.508043,5.848734,-0.148475,0.581306,2.294230,2.295286,2.789834,-7.883899,-7.427791,3.752868,2.544839,-3.636753,-0.053325,-3.431720,4.622130,-5.896471,-8.751621,-6.629479,0.529774,-1.430919,4.507439,-6.175640,5.382041,-2.360071,-2.830260,-5.909569,-8.600379,6.621182,-4.420531,6.046469,0.585674,-8.818169,5.555897,-6.529156,2.411036,3.637963,-9.705965,8.575647,-5.939264,1.539914,3.796021,-4.355160,-4.236227,-4.795686,6.157133,-5.877410,-1.195268,1.201035,8.944392,-5.725883,-1.959824,-8.881304,9.639856,7.315011,1.690288,-7.490990,-0.426211,-5.470283,-3.343706,1.426858,-1.216446,-1.302725,0.275847,4.890929,8.997528,9.257783,2.409146,0.372113,5.954934,4.782117,6.964044,8.134478,-1.103337,9.902903,9.481054,6.165874,-0.042216,-1.237860,1.621613,2.152943,3.551446,-2.368631,-3.819686,-2.823289,-9.639842,-7.238263,5.821288,-1.110625,-0.474920,1.125613,-8.675702,0.449236,-9.544895,-1.604564,2.231775,0.316180,-5.314336,-1.285671,4.292784,-0.527260,-6.126278,1.579407,0.030550,3.187681,6.770062,3.631008,6.067124,1.651266,-4.795910,0.448418,9.129938,-9.530008,1.409988,-8.885089,4.153798,-6.017112,9.152741,-3.713495,0.714494,-4.117936,-3.812873,0.763154,9.561246,4.901038,-2.030258,7.721294,2.270165,-3.005030,-1.107248,1.468535,1.165695,4.583620,-6.701428,0.243041,-5.997720,-1.919747,1.008858,-4.775822,-8.297399,-9.189611,4.393424,-6.478066,-7.398932,5.450510,8.171554,-1.258668,-2.333516,-6.305803,0.255037,1.881693,9.675002,-7.999928,7.614091,1.594835,3.475397,-1.648109,-8.690850,9.764073,2.265586,6.270337,-5.788141,-6.288977,-2.354441,6.764036,-4.597237,0.151442,-8.974966,4.705444,-8.824743,-7.127275,-4.434864,-5.436591,3.433687,8.981725,-8.739661,-7.671455,7.655807,-3.963784,6.721719,4.007513,-4.692746,5.489767,3.519946,-9.815549,-0.536504,6.388086,4.070676,6.423858,1.694028,-9.715744,6.692399,-7.371585,0.691968,-9.077189,-9.496144,-3.437083,-4.218526,-8.903905,-8.776446,-1.020012,4.457183,-9.845115,3.793411,7.776705,-4.110646,0.418262,-6.598614,-6.506368,-7.601564,-8.415905,9.777530,0.408665,7.218663,6.540104,-1.382320,-6.481494,3.936434,-1.194963,-7.016249,0.636046,6.750302,-7.735907,5.594174,8.846117,-7.579051,-2.131123,3.681658,4.983444,0.361053,-1.549893,-0.420880,4.201220,8.616166,8.323552,-8.073936,1.597420,3.803579,5.608960,-8.143058,-5.679185,4.568854,-1.825672,-8.998814,7.375416,-4.503635,9.139636,-8.893286,-7.003270,-6.992110,1.512942,5.218910,1.920084,-3.328434,8.018827,6.811980,3.738894,-3.069269,8.095342,-1.633213,3.734962,4.907457,3.062494,7.680047,2.281476,1.484398,-3.091300,4.706161,6.758152,5.563357,9.936880,-8.210519,0.858575,-3.506416,8.463256,4.750345,-3.909313,0.837838,-9.696758,2.559055,6.166483,-2.930258,9.176759,0.817912,0.343620,1.276274,7.198996,-4.861539,4.605848,-6.018366,5.139497,0.265377,-9.512946,4.499386,6.412853,-0.159752,-3.864245,6.211027,8.559502,-8.560190,4.465499,3.029731,-0.875678,6.616083,-9.808430,-0.796435,0.851238,4.798512,2.293295,-9.706952,-9.481878,4.057258,2.876376,-9.892214,9.633114,7.573516,5.469670,0.726731,-9.441598,6.827022,-0.120335,-5.497671,1.723458,8.278031,9.141745,1.041312,0.888743,-9.114793,0.792081,0.380533,0.630486,9.999803,4.384816,-3.260468,4.429395,-9.106499,-3.407234,0.057822,2.806285,-7.530191,-9.648995,-8.342632,-1.400342,-3.400283,0.488957,-5.734726,5.565570,0.495107,-7.049158,-9.440596,3.245792,-3.541613,-7.464723,2.716656,-9.372180,-9.928450,-2.981874,-5.138298,5.178781,-5.375846,-5.106448,3.603342,1.622585,-4.284741,2.363386,9.454030,-4.388075,-1.574329,-0.655936,-3.154118,9.708886,8.631400,8.389798,-0.904455,2.745288,3.120140,0.224691,2.446762,-5.588041,-6.540625,-2.630960,-1.573354,4.044048,0.584985,1.247618,2.362344,-6.496483,-3.547934,-0.447743,-2.511235,1.107370,-7.824088,9.347649,8.016554,7.537982,3.796360,-9.101728,-7.454940,-8.366685,9.044903,6.572465,-3.999742,5.866710,4.495830,2.887916,2.465028,-4.211346,2.993423,0.185083,7.670066,-1.143739,2.153239,-3.096578,5.758185,1.513070,-6.680338,4.870282,9.121116,2.081003,-2.053487,-6.820801,-1.781812,7.730247,-2.917084,-7.404029,-5.162023,-2.342749,5.109885,2.041413,0.938152,1.315364,-1.924924,-2.235344,-7.379095,-7.903224,-0.385601,-1.929491,0.523746,-7.570233,6.035941,3.995750,-6.338843,4.922237,8.252669,-6.417475,3.315757,-8.078579,-8.992834,3.604832,9.092223,6.539376,0.082881,-3.329157,-7.615247,-0.437474,7.646782,1.929852,-7.101005,-7.105807,4.703500,-1.250881,-1.207054,-4.464438,-4.710681,7.637790,-1.317860,5.430171,4.806923,-7.003875,4.968780,5.483689,0.305089,-1.261869,2.718637,0.837400,3.483207,4.785327,-6.709574,-0.856931,-8.969420,-3.822515,-4.314604,-8.016137,5.830648,2.902803,3.036487,-5.048733,2.244690,-9.157638,0.113270,-5.556376,-0.653343,-2.625313,7.931475,9.138075,7.115351,-6.942981,2.146408,5.200514,-8.648099,4.082361,4.157471,-6.338902,-7.062912,0.937920,-2.792244,-4.259152,7.037659,1.285373,8.997465,-1.850572,6.016665,4.567307,0.207868,6.871773,6.307053,-9.250274,-9.673007,-5.270691,0.652457,-4.560523,6.133081,-7.296179,-9.390710,1.655578,-9.985832,-1.327064,1.299329,8.948869,-8.293199,-5.308558,5.739799,-1.915330,4.539626,2.017162,-3.294223,-1.392331,-3.145392,-5.681040,-9.482934,0.443749,-0.486579,-2.063733,6.363003,-6.612331,6.492421,2.827580,5.636412,-8.195048,-9.725434,-2.840947,-0.232565,-7.664341,6.102117,1.217083,3.072817,9.564505,-4.709290,9.065564,1.739531,6.242612,-9.797461,2.697694,-4.594082,-0.966727,8.124410,6.902831,0.608944,8.395572,-5.878459,-9.951300,8.295028,4.014267,-6.586411,1.321276,2.543586,-3.121198,5.829952,3.323293,7.251113,9.619400,-2.741070,-5.992805,-5.496402,6.551466,-5.077346,-6.918447,6.966244,3.674450,-4.481935,2.301145,1.982773,3.947459,6.378213,-0.292172,-3.040958,-3.742706,-1.544524,-0.274778,-5.971804,-1.614025,-1.972526,-7.716958,-1.559430,9.646067,-8.139404,-2.041332,-1.922738,-9.645094,5.671582,-1.486733,-2.258811,-5.909494,-9.182083,-2.596018,-0.157757,3.867628,5.760531,-1.692024,-6.898937,7.467445,-4.763763,-9.049028,7.702448,5.385383,-9.619033,9.137070,-1.784073,7.989678,-5.431955,1.535016,-8.019671,8.175234,-8.850402,-1.992910,8.412212,4.475513,4.377955,-4.840346,-8.817501,8.858768,-4.709934,-2.542785,4.302132,5.087277,3.700589,-0.736502,8.492606,4.062234,-0.810016,-7.088693,3.279379,3.896364,-5.380062,-7.994813,1.486897,3.991639,-6.693934,-7.501442,7.557971,8.037846,-5.319497,2.950876,-9.754084,7.044887,-7.593110,-5.199179,0.563129,-2.702383,-8.672516,5.312721,0.698861,4.791228,-5.524311,1.099636,3.358692,-4.175942,-4.694107,6.840724,-2.184736,8.919620,8.654066,0.671318,-3.043030,-2.792723,-5.003946,-8.919936,-2.907558,0.328379,-4.260855,-6.157192,7.638712,7.816605,-0.585111,-4.004990,-5.809069,6.767853,-6.475480,-8.803223,6.225102,5.009969,-6.299963,4.282647,6.556456,3.947811,5.984120,2.369840,-2.147860,-9.282283,8.020570,-3.465748,9.149227,8.093237,-5.435394,-0.841444,-8.134658,1.518918,0.015663,6.166332,7.488315,-0.527221,2.438831,9.266932,6.017727,-2.508882,1.603209,-3.719357,8.388118,-2.378886,9.686205,7.280046,-7.636969,3.497495,0.876572,-7.980754,8.870707,1.471398,-8.542139,0.723826,-1.177006,-5.730808,-3.433188,-7.964406,3.149557,1.651057,4.933056,-5.397879,1.268841,-9.022010,9.266757,2.753949,7.959315,8.896360,7.926701,3.133918,-3.776835,2.227219,-0.905137,-7.824477,-1.621894,2.533527,-1.476664,3.796829,0.766889,-3.715417,-8.376009,4.605952,-6.948651,1.231290,9.418439,-8.947436,8.545800,-5.878890,8.095059,7.673782,-6.590577,-4.666654,-9.119140,-2.917071,6.663239,-5.651944,-5.631327,8.150606,-5.354253,4.460078,-6.233486,-1.998438,5.773553,2.583947,8.825755,8.306534,3.471096,9.478449,6.110064,4.545739,-0.889537,3.023992,-5.139913,-0.832591,5.389874,-2.983305,8.068352,5.471275,-2.519414,0.978774,4.131198,1.287906,-4.487323,9.482426,6.085709,-8.256028,-2.675349,-4.301683,9.122800,-5.115966,-9.421685,-2.411505,0.185397,7.476520,-7.391371,6.031254,9.384063,2.105266,5.705600,9.070619,6.026428,5.024973,4.691576,-1.370057,-2.216831,-6.877476,-1.861989,-9.147653,-2.503902,6.654609,-7.254680,0.279074,7.879481,-8.768317,9.616578,1.054572,6.310124,-6.406113,6.743665,7.558157,4.080986,-4.896934,-3.987997,5.258695,-6.871067,-2.315126,-9.609124,-9.483912,-0.875784,-7.502842,2.559751,-8.501067,-0.771947,2.051269,-3.423004,2.145815,-1.055317,0.887153,-0.286643,-0.632743,3.195002,-0.851484,-2.853243,9.379187,6.137425,-3.380393,-8.522452,8.048493,0.605266,-5.329191,-6.064377,-8.899197,5.160934,1.459614,-5.334827,5.843928,-5.788161,5.103385,-9.577967,9.885053,4.821893,-0.195329,3.970985,-1.780297,8.879613,-7.778541,7.068790,-6.590315,-7.176924,-4.334412,0.223632,-9.101371,7.066152,-7.794006,-8.786192,3.437202,0.093994,6.520309,-7.369543,-0.568811,-6.769699,3.834857,9.311748,1.724873,8.638582,-7.924283,1.005290,2.851274,5.809056,-5.347911,7.676346,4.341635,-2.161544,6.873696,-0.575276,-3.457035,-4.584302,-5.291879,9.839588,6.923032,-7.922685,-6.189885,-6.668563,-5.133438,3.022734,-5.809493,9.205624,-0.503900,-4.199554,-3.467169,3.344042,-0.837684,-7.546077,9.194223,-0.181129,-6.671252,-0.050128,-5.528248,-6.100861,-9.357908,4.843832,8.510892,-6.392009,-3.979097,2.252652,-3.273142,8.986807,7.894743,6.711909,-4.082623,1.977451,-2.223265,1.655016,8.799028,-1.527563,6.328765,-6.863748,-3.852082,-8.313340,4.380035,9.461219,-2.613470,-1.974615,-1.854469,-5.032078,4.182321,1.152240,-2.689691,-2.480821,0.830590,5.124431,0.394554,2.486033,0.592417,-9.752457,0.928333,-9.434972,7.278494,6.968971,-0.113030,-8.975818,-8.225672,-5.636481,-2.840294,-6.154122,6.313028,-6.254722,7.282367,-7.255126,-0.148019,6.122317,-5.714990,4.162778,7.530029,2.310999,4.225286,5.968535,3.739367,-6.766958,3.285242,7.973076,-9.424977,7.457105,1.579422,-3.201285,-2.417316,-3.576195,1.177656,-5.942626,-5.253917,0.746566,5.550449,3.099045,-5.811881,-7.912586,-2.086847,-6.075657,-6.922931,-7.224581,4.530025,4.957857,2.677135,-7.768442,4.913294,2.656064,-1.224307,1.199926,7.359555,-2.131998,-5.089038,5.400145,0.217953,-9.509627,3.634545,0.617934,4.351384,9.169067,-7.399310,-4.480457,-9.479071,-8.749047,-8.043744,6.979609,-6.372222,5.747205,-3.824064,-7.777601,-2.032004,0.539614,4.528800,-6.154189,7.356230,2.190924,2.254845,-3.332812,7.033793,-8.980222,-0.837540,-5.629595,3.059534,-4.493824,-2.104299,5.757303,2.158532,8.738654,-0.917180,2.232420,4.388194,9.639182,-4.058237,-3.923580,-1.309682,8.876588,-9.149022,-5.098957,3.954358,-9.193969,5.098620,-6.056620,-0.679141,0.453878,9.306490,1.081258,-2.348479,9.877632,-2.633056,-8.719223,-7.163985,2.178212,7.334517,8.225768,-7.731214,1.039752,7.080901,-4.684390,2.710199,-9.499001,4.674393,1.893194,8.050099,-2.893316,-6.877726,-9.059154,7.317489,-0.517203,2.666466,3.500728,9.737220,2.993358,7.223520,-0.453358,-0.345051,9.162789,-0.775159,1.986370,-8.324722,2.803495,-6.792081,3.119036,-6.933078,3.603196,8.921634,8.613707,3.940899,-8.950366,5.425453,6.755045,5.205817,1.502930,7.616758,6.558995,-1.140982,-4.328605,0.241689,-7.553118,6.966908,9.786098,7.425357,4.807050,-6.218422,9.260059,4.527273,9.569920,5.680305,-4.124131,4.546396,-5.942271,3.006023,-4.785532,7.387958,-4.822065,-7.731809,0.162308,-1.666030,-8.834792,-5.726040,-9.901586,-2.908813,2.228618,-1.558137,-0.069997,4.726074,-8.554939,-7.015924,0.293758,3.012842,-4.758969,-3.456567,3.399619,7.172213,2.976452,2.048826,3.962072,8.134907,-8.627474,-8.748435,9.012953,4.687598,-7.280434,-2.274576,6.333669,7.197843,-5.133280,-2.582506,4.438184,8.780830,1.195797,-5.376920,3.092715,8.463737,-0.025937,-1.117768,-4.738694,8.754185,1.331266,-6.585185,9.517926,2.704328,6.030559,-9.362651,0.676212,3.974952,-2.131360,5.725238,6.778619,3.178913,-8.339812,8.204304,-1.928031,-1.752727,3.680036,-9.182202,-5.137825,-8.585337,4.278187,-8.434615,-4.700256,-8.233619,-4.446325,-9.638582,-0.330322,5.935514,-2.080700,8.352242,3.013415,-8.790725,9.186193,8.062690,-1.151897,3.485165,-9.492228,-6.681651,-4.084197,-4.692951,-4.653520,-4.712105,-7.305038,-3.731122,5.142154,2.934252,9.302722,7.510170,8.647699,-2.652408,-5.221938,1.887428,-0.174154,2.876703,-9.380601,0.114354,0.469937,-2.305314,9.254410,-3.513658,-6.550859,6.701184,0.305490,-4.011048,6.618474,4.356665,9.222379,8.208442,-6.323570,-4.796751,-4.113133,-9.538631,7.275877,1.951266,5.623512,3.069395,-3.500552,3.598027,2.490607,-5.624361,-6.302687,-9.220573,-5.907548,9.053535,1.719639,-9.975658,2.389848,6.803527,4.385904,7.934299,-4.113064,-5.491612,3.561465,-7.690215,-6.676637,-2.578260,-8.202058,-4.979750,-4.239153,-0.187825,3.836641,5.761052,1.221916,7.398057,3.712654,0.051215,-5.416462,-0.023316,6.448891,-6.318743,3.240435,-0.158619,-9.531936,3.118729,5.393053,-4.577423,-0.126025,3.816073,-9.187801,-6.996813,-4.104512,6.301955,0.170462,-6.348599,-6.321621,-5.256632,5.728944,-8.204106,9.590297,-9.361461,1.805906,1.390053,-1.451993,6.267422,-0.315817,3.616183,6.194785,5.566894,-6.347916,7.063846,-1.601133,5.029185,-7.378563,4.335560,2.361459,-2.935588,-6.558830,-6.721724,4.999915,4.627774,5.430017,-4.379152,2.650499,4.016911,6.308219,9.619439,1.885670,-3.757602,-1.725588,4.483070,0.225351,-6.452798,-8.495335,2.151809,-5.461653,6.547067,7.716047,-5.932742,8.037149,-6.066280,-1.395100,-5.563088,-5.283387,8.756903,5.204259,-1.930165,1.466447,-6.504149,1.469922,0.871212,4.439174,0.109179,-6.583107,8.721261,-9.123147,-1.810554,0.856577,-8.528220,0.379189,-0.667463,-9.529224,-5.903418,6.629327,0.225222,-1.720049,-1.243420,3.214093,-0.306606,7.386575,1.905740,6.012061,-6.889834,2.622792,1.816939,7.370885,1.332646,-4.899540,6.503665,-8.861085,2.135734,6.113732,-0.763728,0.408737,-7.305223,0.694827,-2.673972,0.139736,6.694449,2.924239,-9.502593,4.338441,4.931204,3.876453,7.592219,4.130233,-9.944108,5.205810,-7.881762,5.229161,6.894251,-1.377605,3.159592,8.438471,-9.912041,8.473210,8.917291,-3.683776,4.330320,3.040996,-1.579453,5.510961,3.071704,7.943397,2.053148,-5.121942,8.950383,0.634841,-2.130533,-1.771633,3.527078,8.677982,-7.306188,0.274714,8.341340,-8.244938,-1.593705,-5.265826,-6.832791,8.531290,-2.457400,3.404607,-6.485765,2.815692,9.657714,-8.986899,7.769245,2.521082,0.883345,1.613949,7.265235,-8.533928,2.221017,0.613777,3.658884,-2.658615,-0.816985,8.654477,-7.911772,9.380538,-7.460946,-3.686851,-7.387626,5.221852,4.304466,-4.536786,3.498444,-9.810317,-8.758153,-9.687515,-2.619390,6.741190,-0.418693,3.051677,9.128754,-1.380932,-9.239937,-2.621126,-6.024044,4.381083,-1.922245,-3.033757,-2.385322,9.913681,-7.135112,-5.766335,-8.805160,2.467311,5.762714,7.284224,-7.423781,-7.669959,-0.567161,2.912179,4.179229,-2.851167,-0.726358,5.944071,3.703750,7.074901,-2.575722,-2.638688,-1.633313,-0.645096,5.758795,-7.389179,6.093193,-4.391367,4.104431,9.781013,-4.339015,1.458624,-8.624104,-9.558617,3.196839,-0.214296,3.632473,-8.048918,-4.663584,6.475571,-7.477413,4.187656,5.657394,2.233437,4.259130,8.637180,3.528582,1.570810,9.995422,0.157111,2.005956,-8.600876,3.454615,-3.081400,5.401514,0.107138,-8.139093,-8.198143,-8.293491,-0.604478,-8.610437,-1.927039,-4.009641,4.634857,3.404463,-1.652453,-7.988813,3.874603,5.295966,-4.812515,-0.787132,-1.121445,-9.893355,-3.471694,1.893621,8.805714,-7.642693,9.714205,4.959752,-6.946444,0.003189,5.961744,1.336981,9.159552,5.920961,-1.594245,7.629540,-8.878784,4.716227,9.670827,0.829573,-4.716093,-7.185312,0.009881,-7.590707,-2.105236,-8.925526,-0.147186,-5.963318,8.383876,5.662175,1.950671,-3.340159,-7.604738,-2.908129,-9.633322,-2.905427,5.502999,-7.106002,-3.562492,-3.038248,2.260626,9.016241,4.178684,2.542205,8.635667,-6.842899,-4.669819,-4.944927,-9.039382,-5.806891,-6.227234,9.240519,9.458435,-2.895424,-8.659472,-6.939259,-5.542220,2.073321,2.558021,-7.570928,0.596798,-7.964763,0.713982,7.150932,6.667876,1.480054,-3.642672,-9.761021,-1.285491,-2.270199,4.355778,-9.981263,-1.406292,2.616874,7.840223,-3.072873,-4.789825,-7.221913,7.351802,8.415234,3.893960,-5.329947,1.071999,3.082203,-7.181708,6.510792,-3.365846,0.497731,7.820563,-3.518346,-2.414673,-4.996341,1.535359,-9.903014,-6.767601,-1.554671,-8.174168,3.228713,3.978679,-8.408909,-3.730086,7.168947,4.455853,8.785430,-2.385624,5.652582,-5.380160,1.137296,-6.156586,-2.952605,-8.444492,-3.676472,-4.266851,-3.410996,-8.788305,7.067691,-6.430656,3.055751,3.519259,6.076644,8.319273,-0.763854,-8.925102,6.564666,1.642376,3.114165,-0.181893,0.205733,5.298364,-3.248461,-9.109266,2.693157,9.703897,-7.889023,9.451186,-5.787234,0.369819,1.808281,-3.392888,-0.563245,-1.155777,9.138204,-0.634996,7.363976,0.528077,6.749583,7.869246,-2.096073,-0.951431,9.197572,-8.682789,-7.118725,-6.537544,5.577181,-9.061332,6.343393,0.563919,-2.584936,1.964529,-5.090195,3.914556,-9.496892,-5.783493,6.116576,4.406657,-0.152384,-6.020743,5.427635,-0.845570,-0.036349,1.007200,-2.176866,-6.313669,-8.215615,-9.029527,-2.484815,-9.934020,1.581003,-6.145912,5.629038,5.415882,8.207951,-2.236715,7.513374,-4.887839,-3.859090,4.192610,-8.869358,2.314563,1.309594,0.599431,6.812610,-3.523762,-6.008690,-8.451428,-3.780062,-9.218345,7.809717,7.877310,7.913295,-0.275398,9.271804,-0.762606,-2.556691,-0.560129,-5.491897,3.187794,5.255967,-5.548089,-5.281991,-5.255503,-6.012615,9.150437,6.307305,-4.638565,-5.064893,-7.152021,-7.867830,9.166760,-1.176755,-5.244347,-1.191467,1.622269,8.645282,0.998947,-7.963259,3.044331,-0.625457,-5.923304,8.753114,0.667957,-2.788976,2.196030,-7.846728,8.785831,-9.507370,0.320231,9.131522,-0.740333,-1.707227,8.308801,9.273687,-8.953733,0.264072,-7.308554,4.573404,-9.258070,4.408997,9.913905,-3.453455,9.248180,-4.533791,7.406392,0.773575,7.679627,-9.300546,-0.681866,1.587096,1.928735,8.243375,3.526342,9.061372,-9.446966,5.638679,7.505612,-8.645674,-3.469254,5.955046,4.129369,0.724141,2.898101,2.594104,-8.788252,-3.127747,4.016045,5.313597,-7.197659,-3.928807,2.842751,-3.635067,0.847159,7.185159,-0.128442,-1.781350,3.299196,-5.191031,8.330895,-1.774835,-8.879374,4.114161,2.468521,-5.847056,-5.127133,-5.718510,-6.078469,-7.030768,-7.106316,2.645147,-7.043677,-8.081189,3.008559,-8.490284,-9.760088,-1.399777,7.283609,-8.980669,-6.369364,8.526634,4.109046,2.131279,-1.678523,6.035761,0.158912,4.182455,-6.695248,-8.347065,-0.931481,-1.730803,0.148572,3.554783,0.181898,9.877509,-1.802501,-6.494217,1.252323,8.717874,2.071976,-6.450799,6.145618,-9.064624,2.877020,-0.227232,-2.643853,-4.153112,5.292606,-6.707523,1.239820,8.156046,-8.392960,0.005042,0.512694,-3.932233,5.211511,3.752574,-4.788784,9.517147,-9.400323,-4.387669,-1.056688,3.317286,-4.970837,-1.751313,2.852159,-6.251612,0.334427,0.671498,-5.661317,6.227769,-7.211511,3.560114,6.975039,-2.468052,-5.208028,-3.499382,9.744336,-1.210186,3.615769,1.352318,-5.083428,2.290431,3.566369,-0.712889,-2.272090,-3.869442,6.189632,3.780815,-0.840506,-8.667693,-0.829435,7.907142,-8.948620,-0.526658,7.336150,0.472997,4.841918,8.394892,8.307602,-1.075019,-5.063856,2.125639,-4.640147,-3.727431,-4.525306,1.281145,2.059868,4.168582,1.582306,9.191582,8.751766,-8.515314,9.141176,-1.620809,-8.949708,-2.212750,2.128389,-0.063881,8.475985,-3.872266,4.418671,-1.652246,-0.393955,6.244758,5.038786,-7.544594,0.273653,0.973341,5.746455,0.019208,0.118841,-3.509330,4.114837,-9.488755,4.155388,1.592551,0.615365,0.612607,0.104156,6.843177,9.400095,8.059440,-3.607144,-6.854623,-5.741547,4.243070,6.583931,-3.556700,-8.559083,7.074788,3.008863,4.712909,8.453068,6.644990,4.263626,9.226172,-7.853712,0.974819,-9.980265,-7.419470,7.598589,-3.453727,0.118937,-7.174600,5.886290,6.009011,-4.325278,0.181210,4.667837,-4.757950,5.283753,-4.905384,-9.018437,8.706440,3.553111,-4.836359,4.379949,3.987851,3.273827,6.691728,-6.891378,-1.142482,1.446242,-6.100780,-0.187952,0.915017,-4.575293,3.127499,4.193783,2.517836,9.488560,6.661707,-3.579288,5.417041,-8.391259,2.962104,-1.267081,5.965470,2.514682,-7.017698,-0.185429,-8.115658,2.171958,-8.413848,-9.454078,9.589367,5.148653,-6.008652,-7.427343,2.071985,-3.654927,8.665339,-4.588821,-1.065372,-5.846622,4.644886,-4.471983,9.972434,-4.251421,-9.608641,-7.961672,-5.188469,3.783426,0.916331,-9.041296,-4.176120,7.332517,9.026108,0.360717,-2.970684,3.388022,-4.102924,6.325179,1.791407,8.110033,-6.379174,-1.450844,4.497653,7.012075,9.344315,-9.104948,9.629563,3.402161,3.466372,-0.208871,-9.571094,-4.649893,-1.863623,-5.245067,4.691736,2.443454,4.938141,-3.060868,3.201171,-6.805627,6.733422,7.316127,-0.209012,-3.064286,9.264584,8.435860,-8.431819,-9.000126,9.976820,-6.193739,9.534924,-5.886290,8.431308,9.171995,5.871933,9.930757,-9.465114,3.810591,9.368225,0.956644,-5.937991,-9.070348,-1.576409,0.100254,-1.184284,-6.215069,-4.662710,-6.604913,4.252369,-4.058214,3.733814,5.870366,-4.461656,2.565141,-7.158809,-1.180576,3.662916,1.841553,-4.977744,-5.672306,0.367836,-6.385053,6.625663,9.683250,-8.477468,7.922706,-0.203788,-2.796243,8.251009,-3.278163,-3.883128,4.358554,-3.880375,5.675116,8.050677,6.227566,-2.838105,-7.694098,-9.252295,-2.298377,-3.357885,7.490370,-8.091899,9.225499,9.892427,-2.208181,6.475431,1.768595,-4.879456,-3.647779,-0.592255,-9.949063,8.090806,4.319561,9.179183,-9.003180,6.088434,-1.756199,4.195178,-9.158774,8.503234,-6.709031,-6.314269,-1.881739,-4.365859,-1.480667,-8.040901,7.471921,-8.753077,-8.994815,-1.499654,6.112057,-7.744021,-5.876031,7.502624,-2.530845,7.806185,4.237551,-6.610659,-8.868701,-2.667332,-6.967386,-6.425758,-0.628233,-9.812170,-9.964923,-0.924529,-8.057541,8.341077,-7.021283,2.569100,6.822100,-4.801125,-6.416866,7.708390,9.473735,-1.530097,-2.822079,-0.617863,5.631386,5.426579,4.392347,2.650296,-3.635932,-2.575920,2.158541,5.875859,-9.241824,-6.988076,9.394456,-9.566991,9.028012,-0.423724,2.719181,6.817613,9.348243,-3.378721,-0.499965,-2.014738,-1.666254,2.720709,7.582808,-4.795259,-8.872705,-3.942787,-3.867670,0.461239,4.354387,-0.312823,-3.533957,7.334177,-9.906144,-3.162725,7.671422,-7.239855,-5.318846,-4.421121,-7.897134,1.996544,3.047056,-8.472940,-1.672048,2.671148,3.191388,-5.231694], dtype = "float32")#candidate|5158|(2496,)|const|float32
const_5159 = relay.const([1.348774,-9.292722,7.005445,-3.690546,9.831361,7.896972,-4.705180,-1.754636,-3.000481,9.566491,-2.649541,1.822118,-7.921848,5.092084,3.175910,-4.732472,9.843109,-0.596586,7.074647,-7.405361,4.274283,-7.677256,-4.700379,9.552324,-2.742565,-1.357102,7.709841,-3.753731,6.638388,-2.509289,0.680090,-2.843041,8.185477,4.969461,2.314720,6.624566,0.171773,-6.320559,1.053389,-4.261307,9.654509,-2.198290,-6.898455,-6.762742,2.451394,4.037264,2.034624,2.946524,-3.138434,5.863681,-9.652358,-8.472109,9.181824,4.269871,-5.665408,-4.384061,-6.770233,-4.282084,3.882877,7.121448,2.139637,6.979107,-7.418851,-6.007042,6.722153,-8.490581,-6.092447,4.645516,-5.530456,-3.564996,0.227596,-2.899431,-0.773158,-8.016988,7.393466,-7.420995,-0.260950,-2.282881,-3.331951,0.826506,-6.687116,7.690154,-8.492483,-0.759199,8.224066,2.763997,4.686131,6.455704,8.501153,-7.830492,6.044322,0.154498,-7.344257,-9.120129,-3.386872,8.918809,8.891690,-0.371976,6.525144,-0.264749,7.022830,0.875326,8.384497,-8.241970,9.353386,-3.666962,4.461127,-9.971177,2.140730,-8.516114,1.032124,-0.767081,-2.413717,-2.638025,-6.283351,2.825003,4.957792,-3.421824,9.649056,6.205181,7.988231,0.450110,9.818352,9.843694,-6.093584,2.332580,3.276952,-4.346944,-7.475213,4.884348,-2.518565,-4.703255,-9.566967,-7.265132,-5.452594,-3.839857,3.849166,-9.908744,0.609358,9.072926,-3.752182,0.431579,4.521066,0.542507,0.146639,-4.647899,0.778111,8.254129,1.771164,9.162735,7.062579,-3.939180,9.110422,4.342102,-3.044735,-7.333727,3.063402,-2.993985,-1.162819,-0.960783,-1.322985,6.769929,-5.114815,6.979487,-9.944167,1.320403,-7.246272,7.219263,-1.117807,3.621600,1.510892,5.899700,8.512200,1.855361,-7.211809,6.796970,-1.845377,-5.041532,5.091357,4.239797,4.625750,1.745654,-3.326985,2.196104,-7.847863,1.874644,8.163565,-9.064962,-2.600068,-6.742271,-8.896601,0.890253,-7.250033,7.055793,-5.654177,5.561870,4.268327,1.627758,2.068880,-7.959911,4.939934,-0.259995,7.216443,-8.816218,-6.876252,-8.293709,-7.139483,-4.003690,2.177587,2.343568,-6.168321,1.132665,7.344826,6.382748,-8.965986,-4.597890,5.318159,-0.746401,-0.025003,-6.747422,7.306723,8.230456,-7.277117,-5.773366,1.432343,4.117117,-5.520631,8.574542,-0.718678,7.784053,-0.824642,-2.802620,-4.900252,-4.800128,8.290642,3.962316,7.756438,4.118610,-0.568481,-0.682156,7.365290,8.189550,-6.339684,9.932575,6.503765,2.196383,2.119806,8.585938,-5.551615,-1.109696,-7.323973,-6.268732,-5.298224,-6.246534,4.836243,-8.972624,-6.343750,0.788611,-3.770961,7.785944,2.350778,8.595803,0.472802,-4.736807,2.602166,1.063362,-9.219896,7.457950,9.286473,-2.776470,-3.548865,3.946054,-6.718169,-6.584490,-5.599742,9.132501,-4.940255,-6.230286,5.127349,-4.003048,4.715518,6.014384,0.124731,-3.743714,-3.505884,-7.939307,4.129236,4.331340,-1.095706,-2.125656,-7.601975,-5.001751,-6.042127,-5.259677,3.929363,-9.055016,-3.676368,-7.125415,0.805685,6.276533,4.694486,-1.248756,1.240216,0.377966,3.338411,-1.270950,6.544851,6.864882,7.722698,2.828222,-6.096918,6.391330,1.379899,-1.718306,-5.213615,-0.282031,3.164001,-2.257145,2.873532,-1.215098,5.424657,-3.953482,0.539474,1.184990,3.227492,5.145559,-9.841389,-0.353632,8.829592,-6.992218,-8.776270,5.350741,-9.066620,4.974626,7.336755,-5.139959,-3.628201,8.710639,-6.576625,4.149285,-0.556651,1.065102,6.236786,-8.563899,6.015999,0.371004,-2.022081,1.042939,-0.625246,-5.633831,2.626649,4.923295,1.004712,9.949409,9.757454,6.430007,-1.979744,-5.690121,-0.107398,-4.796493,-5.695517,-0.824497,-3.160112,5.096617,-8.373077,8.775975,-1.164424,1.430939,1.789245,-3.843033,0.068032,-2.045939,-4.134780,-3.999905,-3.982071,-4.623619,-1.473084,8.121376,4.536386,0.773679,-1.691087,0.277835,7.643808,-7.391561,2.641759,2.049829,-3.754269,-3.019238,5.332397,7.052935,8.259678,-1.599254,-8.852024,4.348369,-5.362839,4.206904,2.011617,8.315376,-9.659168,3.216323,-5.507244,-8.905802,5.383359,-6.961942,0.031097,-7.565976,0.898285,-2.069134,-6.008672,3.150335,2.666838,0.099205,4.820158,0.829211,-7.739643,-4.582241,-7.756026,8.792815,1.738470,-6.647440,1.482979,-4.516977,3.092396,0.183639,-0.156567,-7.456752,5.679256,-2.382061,-7.998895,-6.555750,-3.697302,-1.358463,-2.579301,-4.534178,1.513642,-8.796851,3.947801,6.645057,-2.929370,-9.886013,-6.994431,-3.789087,-4.033336,-7.262430,-4.362218,8.422720,3.045911,4.636666,1.805211,-6.883669,-9.823725,-5.549703,5.274267,-1.960407,-5.815215,-1.006006,7.435481,-9.129837,0.350299,1.933195,-7.637182,-0.014449,-9.670324,3.919999,-3.899981,-5.416378,-7.275579,-3.242564,-8.257861,0.095366,-1.471634,4.208947,-0.656547,7.950894,9.641642,-5.171942,-8.204085,7.175777,-3.981636,-4.641806,-3.105654,-5.106928,6.586914,-1.898450,0.785815,-7.804198,8.927117,-1.298490,-2.673007,0.460637,-4.947689,8.450176,6.882295,9.538300,2.950797,-8.719673,-3.213155,-0.071703,1.582189,1.241325,9.589218,-1.981358,-3.395234,-7.183263,4.162559,-3.384425,6.294391,-8.553527,-2.738134,2.364404,2.086112,-2.378208,-8.865463,-8.692370,2.957700,-1.875601,8.356960,-8.800730,1.862703,-6.119836,-1.515204,-5.627783,-2.080927,-5.940941,-9.377543,-8.384758,1.288505,2.757993,-9.745873,-9.782535,-9.283979,-3.513082,2.671047,4.560786,4.193548,1.861114,-4.386153,-9.190812,-6.927833,9.365786,-7.980270,5.153593,-7.648687,0.219021,-0.429334,1.682488,-0.007553,-1.905398,-8.997139,2.738513,-1.059483,6.170752,-6.579215,8.358443,3.893638,-4.828956,5.331872,7.350230,-7.205086,-2.560173,-2.797446,1.068064,9.163238,3.778614,3.534519,0.941783,6.151174,-5.879229,-6.176027,6.914293,9.804706,8.126893,8.483408,-4.708574,9.541623,-0.767213,-6.884546,9.696546,9.454155,4.534870,1.919817,-7.057830,-5.640540,-4.310481,9.238367,-4.469327,8.557433,4.802400,-1.558468,3.027158,-3.967560,-2.789013,9.103015,-9.182099,-7.767739,-8.495498,-4.867258,-1.728697,0.326701,-7.010461,-3.698824,4.291712,-0.932236,-0.863984,5.885824,7.561696,1.362156,-7.230118,4.992621,-1.096730,5.915945,5.991443,1.410109,-9.384882,-0.667846,1.777988,0.078108,5.409192,0.292752,-5.243331,2.400559,-0.068461,3.256573,7.130317,8.334966,-8.985870,-8.199334,7.848080,-3.006250,4.497468,-9.408881,4.804197,5.136960,6.541215,0.538577,3.497417,5.992977,5.855235,1.025675,7.221055,-5.993883,4.045572,3.041269,1.546007,-8.764905,6.320504,9.736587,-0.616808,9.780382,-1.644095,9.432730,1.571496,0.949040,-1.344428,5.408729,-5.511001,9.371444,3.319531,-2.634364,-7.862936,4.955815,4.607912,3.540554,8.397650,1.274997,5.426335,-0.280945,-9.784148,3.683993,-5.345912,-8.668477,0.545405,-6.187828,4.842830,3.204189,6.277229,1.469828,3.014620,-7.338537,4.655040,-8.915126,-9.322948,2.927366,1.384290,4.465108,0.759213,-7.452295,-0.118921,2.215163,6.620233,1.199637,3.655374,6.316521,0.087347,-1.342151,0.059741,3.453111,9.628591,-0.056207,-9.058265,-9.670933,-2.459738,-0.015401,1.572423,-1.171127,-3.027315,7.633246,-7.914698,-4.492984,-9.048366,-0.728024,-9.259279,8.625160,-9.152212,-4.163690,-6.135821,-2.517068,0.649439,5.584086,8.477608,3.317233,1.551202,6.498428,9.025386,-4.039257,-6.739228,0.111668,-6.414817,-0.422680,4.595796,1.371177,1.720052,-7.307940,-4.480798,2.987197,3.994980,8.472657,7.391716,-6.920364,4.988502,-6.035517,6.163940,-4.101970,2.553275,-7.628833,6.841250,-2.901126,1.098957,7.700497,-2.509479,0.756406,7.292415,-9.573076,-0.833386,0.204664,6.179648,0.544063,3.009302,5.374113,0.287702,2.688735,4.249955,1.688306,-0.324431,5.436626,-9.734500,-6.576260,1.540244,-4.442152,2.057157,4.956501,-7.698303,1.796934,-5.445912,-4.921318,-3.608312,-2.988961,6.215995,1.183320,-5.371153,-0.818120,1.376620,-0.437387,8.498509,-7.922558,-8.780805,-3.399034,3.934169,7.706664,-4.281930,0.307485,1.300120,-9.661026,5.135474,5.915051,-3.909302,-5.532036,-9.876581,9.431426,-1.332793,0.294994,7.741154,0.787558,8.630632,1.120436,-8.802147,2.066894,-9.688634,-5.322182,3.106330,-9.264592,6.459392,0.064026,3.426200,2.230813,9.207833,1.577580,-7.457799,5.690694,8.586257,5.689593,1.529464,9.866582,1.605536,1.038881,8.567454,-0.259933,0.120956,2.061888,-7.091124,-5.201960,6.714378,1.791627,-7.946528,7.830455,0.435822,8.844849,4.869388,-2.146307,-1.161560,1.428273,6.161385,-4.020136,-3.729809,-9.716605,-3.690466,-1.625657,-8.949868,-0.930683,-6.516602,-3.288646,-2.411047,-7.987253,-7.936698,-5.361766,-8.000176,6.487266,-9.054109,-6.976615,9.038786,8.732180,8.032017,5.584897,9.526378,-9.817405,0.674689,3.204993,-9.911672,-2.647987,0.424795,9.909280,-2.458769,5.567013,-9.154159,2.300153,-8.862058,-2.659091,-8.708202,9.972559,7.325347,5.644287,-6.430814,-7.718802,-9.704659,-9.665471,-9.928266,-8.737419,-5.887090,9.893815,7.427110,-2.943469,7.446028,-0.556719,-9.689869,-6.292499,5.094685], dtype = "float64")#candidate|5159|(896,)|const|float64
var_5160 = relay.var("var_5160", dtype = "int8", shape = ())#candidate|5160|()|var|int8
call_5155 = relay.TupleGetItem(func_1256_call(relay.reshape(const_5156.astype('float64'), [6, 6, 16]), relay.reshape(var_5157.astype('float64'), [40,]), relay.reshape(const_5156.astype('float64'), [6, 6, 16]), relay.reshape(const_5158.astype('float32'), [2496,]), relay.reshape(const_5159.astype('float64'), [896,]), relay.reshape(var_5160.astype('int8'), []), relay.reshape(const_5156.astype('int8'), [6, 6, 16]), ), 1)
call_5161 = relay.TupleGetItem(func_1265_call(relay.reshape(const_5156.astype('float64'), [6, 6, 16]), relay.reshape(var_5157.astype('float64'), [40,]), relay.reshape(const_5156.astype('float64'), [6, 6, 16]), relay.reshape(const_5158.astype('float32'), [2496,]), relay.reshape(const_5159.astype('float64'), [896,]), relay.reshape(var_5160.astype('int8'), []), relay.reshape(const_5156.astype('int8'), [6, 6, 16]), ), 1)
bop_5168 = relay.mod(const_5156.astype('float64'), var_5160.astype('float64')) # shape=(36, 16)
output = relay.Tuple([call_5146,call_5155,var_5157,const_5158,const_5159,bop_5168,])
output2 = relay.Tuple([call_5147,call_5161,var_5157,const_5158,const_5159,bop_5168,])
func_5171 = relay.Function([var_5157,var_5160,], output)
mod['func_5171'] = func_5171
mod = relay.transform.InferType()(mod)
var_5172 = relay.var("var_5172", dtype = "float64", shape = (40,))#candidate|5172|(40,)|var|float64
var_5173 = relay.var("var_5173", dtype = "int8", shape = ())#candidate|5173|()|var|int8
output = func_5171(var_5172,var_5173,)
func_5174 = relay.Function([var_5172,var_5173,], output)
mutated_mod['func_5174'] = func_5174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4474_call = mod.get_global_var('func_4474')
func_4476_call = mutated_mod.get_global_var('func_4476')
call_5202 = relay.TupleGetItem(func_4474_call(), 1)
call_5203 = relay.TupleGetItem(func_4476_call(), 1)
func_274_call = mod.get_global_var('func_274')
func_278_call = mutated_mod.get_global_var('func_278')
var_5205 = relay.var("var_5205", dtype = "float64", shape = (28, 32))#candidate|5205|(28, 32)|var|float64
var_5206 = relay.var("var_5206", dtype = "int8", shape = ())#candidate|5206|()|var|int8
var_5207 = relay.var("var_5207", dtype = "int8", shape = (384,))#candidate|5207|(384,)|var|int8
call_5204 = relay.TupleGetItem(func_274_call(relay.reshape(var_5205.astype('float64'), [14, 8, 8]), relay.reshape(var_5206.astype('int8'), []), relay.reshape(var_5207.astype('int8'), [384,]), ), 4)
call_5208 = relay.TupleGetItem(func_278_call(relay.reshape(var_5205.astype('float64'), [14, 8, 8]), relay.reshape(var_5206.astype('int8'), []), relay.reshape(var_5207.astype('int8'), [384,]), ), 4)
output = relay.Tuple([call_5202,call_5204,var_5205,var_5206,var_5207,])
output2 = relay.Tuple([call_5203,call_5208,var_5205,var_5206,var_5207,])
func_5211 = relay.Function([var_5205,var_5206,var_5207,], output)
mod['func_5211'] = func_5211
mod = relay.transform.InferType()(mod)
var_5212 = relay.var("var_5212", dtype = "float64", shape = (28, 32))#candidate|5212|(28, 32)|var|float64
var_5213 = relay.var("var_5213", dtype = "int8", shape = ())#candidate|5213|()|var|int8
var_5214 = relay.var("var_5214", dtype = "int8", shape = (384,))#candidate|5214|(384,)|var|int8
output = func_5211(var_5212,var_5213,var_5214,)
func_5215 = relay.Function([var_5212,var_5213,var_5214,], output)
mutated_mod['func_5215'] = func_5215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3885_call = mod.get_global_var('func_3885')
func_3887_call = mutated_mod.get_global_var('func_3887')
call_5265 = relay.TupleGetItem(func_3885_call(), 1)
call_5266 = relay.TupleGetItem(func_3887_call(), 1)
func_4443_call = mod.get_global_var('func_4443')
func_4445_call = mutated_mod.get_global_var('func_4445')
call_5269 = relay.TupleGetItem(func_4443_call(), 0)
call_5270 = relay.TupleGetItem(func_4445_call(), 0)
uop_5272 = relay.sqrt(call_5265.astype('float64')) # shape=(2, 13, 13)
uop_5274 = relay.sqrt(call_5266.astype('float64')) # shape=(2, 13, 13)
output = relay.Tuple([call_5269,uop_5272,])
output2 = relay.Tuple([call_5270,uop_5274,])
func_5280 = relay.Function([], output)
mod['func_5280'] = func_5280
mod = relay.transform.InferType()(mod)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5280_call = mutated_mod.get_global_var('func_5280')
call_5281 = func_5280_call()
output = call_5281
func_5282 = relay.Function([], output)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5293 = relay.var("var_5293", dtype = "int64", shape = (9, 14, 8))#candidate|5293|(9, 14, 8)|var|int64
var_5294 = relay.var("var_5294", dtype = "int64", shape = (9, 14, 8))#candidate|5294|(9, 14, 8)|var|int64
bop_5295 = relay.logical_xor(var_5293.astype('int64'), relay.reshape(var_5294.astype('int64'), relay.shape_of(var_5293))) # shape=(9, 14, 8)
output = relay.Tuple([bop_5295,])
output2 = relay.Tuple([bop_5295,])
func_5323 = relay.Function([var_5293,var_5294,], output)
mod['func_5323'] = func_5323
mod = relay.transform.InferType()(mod)
var_5324 = relay.var("var_5324", dtype = "int64", shape = (9, 14, 8))#candidate|5324|(9, 14, 8)|var|int64
var_5325 = relay.var("var_5325", dtype = "int64", shape = (9, 14, 8))#candidate|5325|(9, 14, 8)|var|int64
output = func_5323(var_5324,var_5325,)
func_5326 = relay.Function([var_5324,var_5325,], output)
mutated_mod['func_5326'] = func_5326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mod.get_global_var('func_4934')
func_4935_call = mutated_mod.get_global_var('func_4935')
call_5331 = relay.TupleGetItem(func_4934_call(), 0)
call_5332 = relay.TupleGetItem(func_4935_call(), 0)
var_5337 = relay.var("var_5337", dtype = "int64", shape = (14, 14, 14))#candidate|5337|(14, 14, 14)|var|int64
bop_5338 = relay.bitwise_or(call_5331.astype('int8'), relay.reshape(var_5337.astype('int8'), relay.shape_of(call_5331))) # shape=(14, 14, 14)
bop_5341 = relay.bitwise_or(call_5332.astype('int8'), relay.reshape(var_5337.astype('int8'), relay.shape_of(call_5332))) # shape=(14, 14, 14)
func_4122_call = mod.get_global_var('func_4122')
func_4126_call = mutated_mod.get_global_var('func_4126')
var_5346 = relay.var("var_5346", dtype = "float64", shape = (112,))#candidate|5346|(112,)|var|float64
var_5347 = relay.var("var_5347", dtype = "float32", shape = (960,))#candidate|5347|(960,)|var|float32
call_5345 = relay.TupleGetItem(func_4122_call(relay.reshape(var_5346.astype('float64'), [2, 8, 7]), relay.reshape(var_5346.astype('float64'), [2, 8, 7]), relay.reshape(var_5347.astype('float32'), [960,]), ), 1)
call_5348 = relay.TupleGetItem(func_4126_call(relay.reshape(var_5346.astype('float64'), [2, 8, 7]), relay.reshape(var_5346.astype('float64'), [2, 8, 7]), relay.reshape(var_5347.astype('float32'), [960,]), ), 1)
func_4560_call = mod.get_global_var('func_4560')
func_4564_call = mutated_mod.get_global_var('func_4564')
var_5364 = relay.var("var_5364", dtype = "float64", shape = ())#candidate|5364|()|var|float64
const_5365 = relay.const([2.442177,4.216570,-0.307341,-9.425487,4.717682,-1.700729,-5.184748,-3.033217,5.237866,1.596655,-2.495092,9.428145,5.448279,1.684015,3.575061,-5.062977,4.373498,5.041843,3.179706,-6.218283,5.191107,0.943402,5.025210,-4.557749,-6.124268,-0.769315,-9.300207,9.460673,-8.571720,-6.763234,-0.161511,-6.861208,-4.221947,7.837267,-6.990947,2.835772,5.250833,5.727129,-9.818795,2.824214,8.258380,0.121358,1.828629,-9.474318,2.374967,7.133211,6.788089,-7.931107,-5.301794,6.372811,9.006908,-5.850071,-9.225160,4.088095,-6.888962,4.331479,-8.617718,8.840135,5.505995,9.116837,-1.453065,1.177173,1.232584,-5.333315,5.866520,-2.008341,-4.058797,9.455258,-4.113272,8.899777,-8.482768,-7.126352,-4.485214,-6.577254,6.028821,-8.382325,3.610435,4.261938,4.473665,-2.676948,-1.046659,7.295288,6.472454,4.996393,2.322341,-7.773316,6.672628,5.993091,-8.626510,-2.928877,9.539945,-9.658590,-1.392324,2.575687,7.314167,-8.110160,-4.185030,-6.836584,6.603711,1.976159,-9.366214,-1.394175,5.278272,6.514480,2.912136,6.191990,3.716552,8.556100,-6.227892,9.632908,-5.306646,1.504441,-9.654422,8.929802,5.634199,-6.302160,-9.627088,9.055826,-1.647188,-8.996452,-1.891907,2.154459,6.978727,3.641438,2.954240,8.952258,7.957522,4.644348,-1.378597,4.230947,9.272082,2.463176,-7.618244,0.049988,-4.742874,-8.212145,-9.225640,-5.328474,2.950345,4.695933,-5.709352,-0.339460,8.262295,4.403915,-5.435312,1.042403,5.157601,-3.147297,3.348786,-6.572887,2.247431,4.598287,-1.647984,5.774023,1.193174,7.298496,0.581670,7.622695,2.132894,-4.854219,1.434884,2.638629,-3.935032,-0.230704,-4.113982,6.277920,-3.997510,3.561512,-7.077772,-9.189303,2.215707,-4.326598,2.517993,1.011016,-6.632205,7.395353,5.580975,-7.554106,-1.036272,4.694446,-8.279364,-7.049673,3.925926,7.758809,-3.729934,-8.980225,2.425444,-3.462679,-2.451785,2.933012,4.999534,4.547494,-0.865829,-5.337455,-9.830237,1.237494,1.990419,3.466769,9.908041,-3.488008,-9.148097,3.117211,1.864999,7.347476,3.875429,1.723139,0.715451,9.297208,-3.957773,-8.241974,6.009896,0.806466,2.909504,-5.930449,-2.326859,-7.389588,1.126150,-9.803460,6.919637,-7.264427,4.053791,9.780292,-4.295434,-0.011395,-5.558883,-6.668795,-3.785532,-8.437828,-4.018286,-8.806188,-9.514020,-8.443495,-2.357647,-7.080605,-5.659413,-4.302303,-1.798862,-0.546333,-8.359703,-4.902582,0.895171,-9.980256,-0.823793,8.004887,6.863633,9.244957,-0.920550,3.404393,9.714185,-7.273569,2.090083,6.850999,-0.398507,-0.992232,-8.126668,6.633159,6.673461,5.890744,5.074208,4.133945,-3.409025,-6.442028,-5.947005,4.084581,0.111607,9.664397,-3.814230,3.165888,-1.293284,5.836299,-1.678438,-7.779824,-5.325684,8.550755,-6.602834,4.614366,-5.340556,8.738928,7.658769,-9.146355,-6.539529,7.065224,-7.467406,7.696352,4.682508,7.472070,5.912391,6.164063,7.008296,8.411794,9.440141,-7.430156,-4.677210,-6.486463,-6.444695,7.052948,-9.597722,4.791085,1.620212,1.808494,3.273363,-5.144832,-8.166509,-7.379368,-5.427400,4.743542,-5.923388,5.585937,9.182550,0.363188,-8.575621,-4.112753,0.080846,5.834657,-3.395958,8.691979,2.897962,0.623581,-0.658769,7.588411,2.639031,-2.804037,-5.898252,1.355754,-4.280551,6.963788,7.269104,4.586531,4.406941,9.704887,-7.565079,9.891279,-6.678215,9.134352,5.559800,3.424520,-3.426051,-0.128272,-2.022228,-2.906995,-6.403254,7.502507,-3.208097,2.286755,-9.428607,6.191684,7.979460,-1.601278,1.471399,-2.575945,8.704201,-8.195666,-6.231981,-4.191685,-7.649883,7.075614,6.157630,-8.129126,3.590159,8.381886,-0.091788,-4.565544,-6.864784,1.997696,9.297118,-2.851828,3.816559,-3.708468,4.291616,-6.791019,9.806020,3.865591,7.866976,-4.695618,7.642382,-6.691712,8.151253,3.974450,5.196260,8.691700,3.645408,5.222724,-0.950198,-8.445342,8.565591,0.599174,-8.671618,0.493908,-0.432803,-7.154623,4.758696,0.897761,-6.743784,-7.492444,5.086922,-0.842448,8.445803,-4.735943,4.856323,-9.017657,0.736527,5.524847,-5.076323,0.358641,3.686836,-7.405993,-5.472394,6.662029,-8.617930,3.082561,8.081679,-1.079835,8.979194,5.652686,8.420555,1.999606,7.199015,-6.922367,8.332076,1.332304,-9.922052,-6.131752,4.556383,2.183793,0.583488,-0.241925,-5.764237,-8.561208,7.408625,-5.589975,2.697740,9.753154,-1.459922,-5.931915,-1.305808,-5.053713,4.747215,5.643506,-6.128036,-2.936065,0.787043,6.756587,-4.370611,-4.390304,1.931495,-6.513789,-3.130966,7.604767,-7.960351,7.161541,1.320102,4.000520,-3.102243,-3.263564,8.108578,-9.983672,4.657228,-8.305532,6.467373,1.236183,4.557974,5.603952,6.678045,-1.613477,-9.063384,-7.800807,-8.094475,-1.148798,5.189618,3.761828,-6.755746,9.690654,5.791866,2.011433,-7.838151,8.020725,-0.992912,-7.592102,-2.716552,6.251170,-7.232256,-8.516294,5.672908,4.209123,6.722515,3.336811,-1.262735,4.687232,-9.706197,1.467453,0.829032,-3.419590,8.697187,-5.981695,-6.788052,8.945193,5.979060,5.597268,-4.331770,4.469460,2.841285,6.648487,-2.919869,-8.833316,4.213929,2.966297,-7.236253,9.356197,-7.209264,8.640831,5.534147,5.595347,0.392783,-3.703050,1.227203,0.155335,-0.594550,5.200191,-7.749830,-9.228264,2.268010,-8.730262,7.812785,8.384395,5.661436,-1.913980,4.583395,-9.770161,-5.718902,4.419858,-6.108287,5.780817,6.004420,5.296759,-0.966133,-3.869282,-5.842200,1.010258,-3.348200,3.995616,-0.214344,-8.282163,-0.875055,-3.074975,7.202035,-7.287066,-8.939765,1.593383,-2.683187,9.927530,-8.428062,-0.348729,8.472921,-6.605172,7.676791,8.868789,-6.075247,6.174893,-1.214951,3.069314,3.946962,-8.973762,4.193341,-8.049695,-6.645915,-0.962798,0.577642,3.970058,1.148571,-7.429029,-0.513192,-2.594077,4.392162,3.471710,1.910222,-4.315306,-3.475529,-8.069828,-7.115043,-2.187354,0.804145,2.241492,3.767261,5.361878,-4.641867,0.287068,7.387158,8.827162,-9.202218,3.000438,-7.886310,-7.218707,-4.523729,-5.832823,0.682705,0.777993,-5.343027,5.150788,-6.978510,-8.477593,-4.750093,7.532490,0.780060,5.097680,1.031112,4.641961,-0.504371,-6.062080,-4.108030,4.993628,7.030203,-3.385218,6.300529,-9.919792,-7.503988,-3.420444,-6.632901,3.316962,5.582841,3.565110,5.043368,-0.248593,0.344912,-7.880064,3.734123,2.272861,-6.950534,-4.420302,-3.384095,4.712520,3.999676,2.021655,5.370833,5.720996,3.375611,9.272285,5.513751,-6.787741,0.279406,2.525044,-0.695883,8.592191,-4.665498,-7.532513,-0.201158,-8.302388,-1.487072,-9.327174,-3.735756,-7.176149,-7.357391,-4.024544,5.258978,-9.082988,0.761899,8.675229,8.407449,-2.651670,1.997195,-3.722570,5.805389,0.274573,-8.547724,5.576368,-4.002536,2.487204,-8.840338,-0.992764,-0.502781,-4.521939,-3.130671,-9.086102,-2.601446,-4.924707,2.991246,-0.594705,3.671989,-8.555480,2.887755,-0.718904,9.818854,-8.360501,2.986762,9.067408,-6.644944,9.406055,-9.927637,-3.194393,-8.262537,-6.850869,2.161883,-9.215068,-0.036501,-1.585360,4.220426,1.919379,-1.480900,-9.779628,0.484698,-8.897614,6.967987,-5.351824,9.486219,-3.118190,5.752251,8.428886,6.386423,2.015026,5.526833,0.634584,-4.464622,0.869326,4.092067,-0.287770,-5.738866,-9.705248,-9.607688,1.445801,7.086660,-8.444641,-9.800444,9.914772,3.269686,2.131647,-2.737974,2.725414,-7.268196,-4.162866,-6.513752,-3.308538,5.432998,-2.181581,0.629475,3.940341,-5.513503,-4.416760,2.372166,-8.833277,-4.026440,1.192753,5.301056,-3.267969,-5.793204,0.444792,5.903841,4.125886,-3.800496,7.807497,0.537646,-9.999758,-4.400369,-8.280399,-2.698600,-8.582767,-5.438753,2.887656,6.443375,3.828837,-7.315657,-0.441011,-5.980203,-8.156274,-8.574279,3.092187,-2.450511,4.157431,-3.532690,7.697434,-9.989153,5.157941,9.860186,-3.422084,-7.663328,-3.216381,-5.223191,2.668806,-4.569751,0.887343,0.183637,-7.288093,-3.588138,-7.017267,0.798149,0.028458,6.660074,1.544120,-5.861530,6.497726,5.486073,5.720533,2.844158,7.068110,4.255586,-6.308816,7.483406,-5.501352,-4.012053,-8.415796,-1.070278,7.867883,-0.573195,8.952152,3.072160,-9.002877,-8.981360,-8.855203,-9.455452,-3.837660,5.268494,-4.015637,4.147085,-1.784404,4.162717,-0.289058,7.526922,8.149514,-6.128746,-3.295020,-0.093595,-8.717526,-5.422038,-1.833781,-6.869923,-8.847069,0.560943,-4.995765,-2.702521,-9.603032,9.087195,0.154400,-2.585604,8.179796,7.676822,-0.672191,-8.160981,0.756595,-0.606455,9.931022,-5.495435,-9.175459,-6.489849,-1.903565,9.533878,-2.241158,5.787471,9.359296,-5.907732,-5.600845,-3.446947,1.991105,-3.534702,-3.716634,-5.603198,4.225366,6.841387,-7.030197,6.001304,-8.215837,1.818934,3.904698,4.869987,3.409613,9.497271,0.285764,-3.445516,-2.811550,4.064506,5.824576,-4.525124,-9.538043,-5.273329,5.924177,-0.263006,8.670962,-8.251424,-5.330465,7.172806,-3.395556,-1.021146,3.099434,-7.985291,0.624550,-6.282805,-2.131086,9.342662,-7.657401,5.005595,3.044302,-0.729047,-8.388411,-6.728947,-0.702447,-6.002063,-0.950369,-4.634592,9.730213,-4.940163,5.237180,-9.141805,3.703013,-1.641006,2.331668,-8.362215,2.322192,4.940511,1.976780,6.891371,-9.804274,-4.211368,-6.176098,-8.531234,-3.391951,-3.948433,3.195041,4.253365,-1.589518,-4.363553,9.477079,0.112159,8.251867,-2.614103,-8.142423,-1.005922,1.000978,2.766671,-5.461882,-9.976297,-1.603352,-1.462397,8.935803,6.077293,2.144768,7.805743,-7.482757,-1.566088,-1.359720,-6.345128,-6.465176,1.719998,-0.028117,7.579701,-3.034492,6.014726,-3.601609,-6.335054,3.062474,9.444727,2.198501,1.632540,4.902967,-1.200250,9.490099,-1.580396,8.774602,9.492068,5.519278,-4.214629,-6.133789,-7.581253,1.262207,-6.349606,-2.551413,-6.833839,3.839541,1.100246,5.633042,-5.177588,8.671043,-3.062448,-0.294484,-5.793117,-7.033606,1.577886,-0.837762,9.275409,-5.777671,-7.755118,0.299388,-3.627649,-2.101924,-5.521045,3.310420,-6.702039,8.664345,-3.084421,9.449139,6.151249,3.112731,-8.719055,0.547171,-6.817311,-7.893751,-4.537757,3.715285,-2.987614,5.204549,9.920168,4.540685,4.423838,-7.239623,-5.482533,-1.638438,9.325892,-9.591121,0.572340,8.395059,4.809402,-6.006795,1.996915,-8.806814,4.016666,-7.634151,7.682591,2.638196,7.840251,-5.339344,1.413102,2.588225,-0.346724,-4.384633,6.375260,9.374074,1.056102,9.793116,7.442767,-1.621128,8.663458,9.261406,-3.207696,8.994111,-4.500530,7.079888,-5.636786,-8.769801,-2.012855,-9.528149,-9.684232,-7.956469,4.793219,7.157123,-8.671041,5.296105,-0.447228,-1.174100,5.895923,-2.183440,0.544983,9.884214,4.061805,-4.880404,4.534910,1.988831,4.020042,0.750527,2.454935,2.636436,7.032275,2.027860,-5.069319,-3.341048,4.465493,8.433254,9.709538,-5.104176,8.684684,-4.509409,3.078913,-9.201616,-5.986838,3.021826,-4.183900,2.374866,-5.166752,-0.917881,-8.133467,-5.654916,9.044749,-7.769029,9.703126,8.808414,1.660693,5.113699,-0.771060,9.594168,3.452411,-1.649926,-6.771049,9.526584,8.761449,8.204559,0.963380,0.944833,3.672160,1.940810,0.351377,6.902849,-5.452047,3.123255,2.142131,2.255155,-7.177773,-9.633686,0.159597,5.526038,3.730046,-4.997243,-3.744343,-8.696496,1.165079,-2.694312,-3.662789,-4.942352,-0.500660,5.792693,-1.706527,4.159297,4.590501,0.983672,4.516270,0.095862], dtype = "float64")#candidate|5365|(1120,)|const|float64
call_5363 = relay.TupleGetItem(func_4560_call(relay.reshape(var_5364.astype('float64'), []), relay.reshape(const_5365.astype('float64'), [10, 14, 8]), ), 2)
call_5366 = relay.TupleGetItem(func_4564_call(relay.reshape(var_5364.astype('float64'), []), relay.reshape(const_5365.astype('float64'), [10, 14, 8]), ), 2)
uop_5367 = relay.rsqrt(var_5337.astype('float64')) # shape=(14, 14, 14)
bop_5369 = relay.logical_and(var_5347.astype('bool'), var_5364.astype('bool')) # shape=(960,)
output = relay.Tuple([bop_5338,call_5345,var_5346,call_5363,const_5365,uop_5367,bop_5369,])
output2 = relay.Tuple([bop_5341,call_5348,var_5346,call_5366,const_5365,uop_5367,bop_5369,])
func_5376 = relay.Function([var_5337,var_5346,var_5347,var_5364,], output)
mod['func_5376'] = func_5376
mod = relay.transform.InferType()(mod)
mutated_mod['func_5376'] = func_5376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5376_call = mutated_mod.get_global_var('func_5376')
var_5378 = relay.var("var_5378", dtype = "int64", shape = (14, 14, 14))#candidate|5378|(14, 14, 14)|var|int64
var_5379 = relay.var("var_5379", dtype = "float64", shape = (112,))#candidate|5379|(112,)|var|float64
var_5380 = relay.var("var_5380", dtype = "float32", shape = (960,))#candidate|5380|(960,)|var|float32
var_5381 = relay.var("var_5381", dtype = "float64", shape = ())#candidate|5381|()|var|float64
call_5377 = func_5376_call(var_5378,var_5379,var_5380,var_5381,)
output = call_5377
func_5382 = relay.Function([var_5378,var_5379,var_5380,var_5381,], output)
mutated_mod['func_5382'] = func_5382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4443_call = mod.get_global_var('func_4443')
func_4445_call = mutated_mod.get_global_var('func_4445')
call_5395 = relay.TupleGetItem(func_4443_call(), 0)
call_5396 = relay.TupleGetItem(func_4445_call(), 0)
func_4934_call = mod.get_global_var('func_4934')
func_4935_call = mutated_mod.get_global_var('func_4935')
call_5401 = relay.TupleGetItem(func_4934_call(), 3)
call_5402 = relay.TupleGetItem(func_4935_call(), 3)
func_4222_call = mod.get_global_var('func_4222')
func_4225_call = mutated_mod.get_global_var('func_4225')
const_5406 = relay.const([-7.935126,5.835707,-3.941407,-9.360809,6.063007,7.221698,8.776913,-2.222712,-0.322592,6.965059,-5.733450,7.985815,2.219137,1.848887,-4.387791,-1.404784,-4.406907,5.035267,-9.526134,5.426033,7.540009,-1.965315,2.784277,-6.257455,1.597558,-4.856329,-7.557559,-6.938872,-4.678507,-1.086528,-9.320484,8.763578,3.861324,-5.978460,-9.982640,6.914766,-5.431537,7.735670,-9.946631,5.806856,7.326795,-5.851893,9.118296,5.963076,-6.609412,-6.207114,8.376075,-3.883042,-0.660799,-1.123855,-9.855006,1.042119,7.847411,-4.023231,-4.914143,1.264618,-2.591783,9.419550,-0.886439,7.016539,-2.730394,-5.579932,-9.315001,-3.675650,4.506495,2.009562,-8.095244,-3.054424,8.870531,-7.904648,-6.028435,4.386954,8.798479,-6.507296,-5.584223,-7.642185,-6.896326,-4.028870,8.289588,6.930692,4.624303,-2.354737,7.751957,5.127991,-7.150879,-4.403545,6.967237,4.350711,-0.020943,-0.800534,1.394713,-1.080537,9.410787,-6.977181,6.873125,9.243370,6.113535,5.296114,-1.341961,8.149756,-1.612231,5.271132,-7.165254,-9.245010,9.982984,1.265954,5.669223,-5.902453,-7.902668,-2.544930,-9.869250,-4.415169,2.541483,4.862552,-9.080515,-4.865817,-6.448637,-0.405227,-2.714209,-9.647354,1.623539,7.684141,7.486701,-8.368573,-8.124642,5.057587,-5.817099,-7.886605,2.526662,-5.166533,9.494648,-3.288159,-7.750063,-4.648332,0.959529,-9.275612,-3.513777,-1.461489,4.261136,6.681476,6.277375,4.399941,-8.234667,4.431958,8.440586,2.143215,8.756476,-7.617728,-0.751347,-4.989288,0.921110,-6.474815,-7.337475,6.682881,3.484848,-6.330839,-3.546214,0.530375,2.100501,-3.198493,-2.681430,8.288282,-7.116870,2.801868,-5.794088,-3.280541,6.662165,0.862298,4.248965,1.485636,2.959196,1.997044,7.659091,-7.966761,-2.838816,9.069739,-2.732559,-0.869523,6.674024,9.111039,6.011547,4.068961,9.173624,2.644848,-6.658765,1.001226,-8.548337,6.423684,7.519635,-3.591981,-8.750314,-6.656032,7.805672,7.765938,2.085318,-2.263185,9.997258,7.558282,0.959043,4.082006,8.845282,5.170049,-1.650040,-3.266890,2.632292,7.134984,-0.114691,-5.518556,-2.262588,-7.859061,2.853485,-9.579089,3.717557,6.138674,-3.565691,-3.010843], dtype = "float64")#candidate|5406|(216,)|const|float64
call_5405 = relay.TupleGetItem(func_4222_call(relay.reshape(const_5406.astype('float64'), [3, 9, 8])), 0)
call_5407 = relay.TupleGetItem(func_4225_call(relay.reshape(const_5406.astype('float64'), [3, 9, 8])), 0)
output = relay.Tuple([call_5395,call_5401,call_5405,const_5406,])
output2 = relay.Tuple([call_5396,call_5402,call_5407,const_5406,])
func_5411 = relay.Function([], output)
mod['func_5411'] = func_5411
mod = relay.transform.InferType()(mod)
mutated_mod['func_5411'] = func_5411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mutated_mod.get_global_var('func_5411')
call_5412 = func_5411_call()
output = call_5412
func_5413 = relay.Function([], output)
mutated_mod['func_5413'] = func_5413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3890_call = mod.get_global_var('func_3890')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_5450 = func_3890_call()
call_5451 = func_3890_call()
func_1998_call = mod.get_global_var('func_1998')
func_2000_call = mutated_mod.get_global_var('func_2000')
const_5454 = relay.const([-1.878677,4.751132,-2.205176,5.022735,-0.823805,9.726908,2.972313,3.588460,-9.451094,8.322489,-8.887591,8.770508,-8.112415,7.357309,6.182205,-3.303497,-0.924300,-1.762833,-7.731667,6.155300,6.842391,8.961958,-3.809809,8.292031,4.103051,-7.207133,-1.907592,8.483675,-3.803195,-8.407089,-5.792327,5.539520,-0.535826,7.426971,-5.962524,1.472755,7.548660,-3.126109,8.449263,9.815962], dtype = "float32")#candidate|5454|(40,)|const|float32
call_5453 = relay.TupleGetItem(func_1998_call(relay.reshape(const_5454.astype('float32'), [5, 4, 2])), 0)
call_5455 = relay.TupleGetItem(func_2000_call(relay.reshape(const_5454.astype('float32'), [5, 4, 2])), 0)
output = relay.Tuple([call_5450,call_5453,const_5454,])
output2 = relay.Tuple([call_5451,call_5455,const_5454,])
func_5461 = relay.Function([], output)
mod['func_5461'] = func_5461
mod = relay.transform.InferType()(mod)
mutated_mod['func_5461'] = func_5461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5461_call = mutated_mod.get_global_var('func_5461')
call_5462 = func_5461_call()
output = call_5462
func_5463 = relay.Function([], output)
mutated_mod['func_5463'] = func_5463
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5499 = relay.const([[[2.937031,-8.212974,-1.994527,-6.540424,-3.675443,9.851132,5.953187,-4.595768,-2.263724,8.120938,-9.589554],[-0.532911,-7.850271,6.190451,-6.940681,-8.091476,4.526309,8.625810,8.596961,-4.043573,4.246640,-2.219815],[1.909610,-5.857826,5.302348,-1.417142,3.769251,-0.930356,-3.717666,-4.173906,-3.547830,6.430512,7.665427],[0.231938,-7.784914,9.667839,5.299097,-4.867275,-2.230589,-3.480190,3.606927,8.334769,7.609403,-8.670901],[2.678812,5.983022,-2.828837,3.988521,7.375181,-8.057324,-0.217516,5.348689,7.534912,-3.626158,3.344552],[9.436142,1.645162,0.439433,-2.666931,-6.192805,-3.561968,8.491563,-4.125387,2.692950,5.483800,3.368506],[3.776515,4.487231,4.643607,-0.312932,-5.959422,8.397996,-4.877788,4.541156,-9.389515,-6.050832,8.504729],[6.159302,-4.659517,1.916663,-0.128658,4.709256,8.058808,9.310421,-9.262902,9.003597,1.411336,-8.892186],[-0.388381,0.867678,8.004019,0.880164,0.140184,1.611880,0.358696,-5.096496,5.120437,4.377555,-0.391159],[3.277895,-9.725015,-2.890860,0.331716,9.267036,-1.498108,6.339551,-3.335150,-7.839247,3.264640,5.078657],[-2.600231,9.850446,4.517941,-5.308747,5.835383,-7.577100,6.576319,1.443806,9.461228,-2.698964,1.887753]],[[-7.458820,-9.338680,-5.474413,-6.181288,7.865208,3.918541,-8.518919,4.585883,-2.082139,9.499392,0.613087],[9.477248,4.078823,0.531107,-2.222914,4.156453,9.234912,5.858580,-1.973933,4.694028,-8.957953,-0.751306],[-0.936310,-9.572614,-7.410475,7.117077,-2.732906,-1.928100,-0.304792,6.129160,2.093007,7.910220,-3.020903],[-2.067131,-4.912473,-4.508515,-2.648569,6.046542,7.646047,6.741664,7.182742,5.256783,-7.023863,-8.151542],[8.463459,1.440567,-8.007054,8.497457,-9.573883,0.577723,-3.881935,4.392319,-5.264006,9.505976,-8.260462],[8.360970,7.634456,8.433027,2.925608,-2.231818,8.667582,4.570135,-1.096036,9.818764,-5.319123,6.699745],[-0.439029,8.184826,-9.278003,-3.321208,3.786500,-2.770144,-7.358384,-2.106208,9.748111,4.967035,0.564243],[7.400020,9.585777,-0.863626,0.729800,-9.193157,-2.010508,9.321560,-8.624220,-6.998678,3.696299,4.616063],[-4.821131,3.780896,-0.949544,7.750254,1.354693,-3.316373,6.613007,-4.230932,-9.765052,-1.148371,-8.895071],[3.019850,-0.750009,0.860037,7.704447,2.802778,-9.433805,8.141455,3.918370,-5.029298,5.787192,-9.534001],[1.266982,-7.403321,2.190472,5.953892,-3.946567,9.094509,-7.950961,-0.712972,8.559489,8.412827,0.601234]],[[-8.371034,6.366136,9.879702,6.062089,8.369426,8.270520,8.642777,6.516995,-8.217380,1.734549,-7.807657],[-0.679779,7.207391,-6.373372,-7.900512,-7.664231,3.147171,7.608772,-3.257408,-1.978096,-8.013159,4.892148],[-4.325413,-6.404092,-8.422429,-3.016993,4.970454,-1.006933,-7.715813,1.256761,-2.840567,-9.154005,-0.976220],[-9.057183,-7.115342,-5.635168,-2.268578,-2.316261,-8.616663,-8.177678,4.035994,6.929743,6.846483,2.509875],[7.174217,-8.239450,-6.144368,6.204531,3.392669,-1.687494,-5.278170,-4.020095,-6.151212,5.623492,2.974433],[-7.512758,3.783417,4.424676,7.872965,-7.259451,6.772316,-1.321966,4.752014,-7.835082,0.305441,3.076304],[-0.685478,9.933993,-7.806523,5.351169,-8.777417,-1.019560,-3.248954,-3.310969,1.683224,-1.252746,-3.341931],[-0.042696,-4.851999,-9.637869,5.699785,9.577687,7.849065,8.761939,1.369712,3.765239,-6.185567,6.300120],[9.628102,-6.682556,7.177818,2.498234,1.057869,8.283451,4.635366,1.808484,8.314144,-5.265569,5.354276],[2.281998,-6.068420,-8.263923,-4.421142,8.802929,-7.691208,-0.727353,-2.665006,9.860791,-0.363784,5.822698],[-9.379050,-8.999556,0.103083,-3.978062,-8.273251,-8.283888,-5.154594,0.183889,-3.989693,-0.198343,-2.575725]],[[-5.410819,-7.463397,-6.226958,2.927238,-0.478281,3.893230,5.215947,7.926369,8.376857,5.787328,6.968691],[4.980518,2.652469,0.844703,-5.758406,-4.850070,9.569351,-1.069422,5.304052,7.086374,8.975557,0.156972],[-9.010129,-8.004794,-4.539280,4.695453,5.094743,1.651340,-2.332554,-5.631456,-9.379685,-6.351036,0.290036],[-4.866359,-0.620972,8.511252,-2.870573,-2.782978,1.765984,-6.889816,4.940178,3.920853,-2.256891,1.120765],[-1.347225,9.885746,-5.651000,-9.940827,-5.611604,5.510797,-3.093355,-9.480075,9.580851,2.101876,8.805549],[-0.525318,0.076841,6.253441,-8.536501,0.484234,-2.855461,-2.605008,-1.287441,6.034581,5.975522,0.771292],[3.514994,-7.442819,-9.536020,6.280920,6.075269,-5.784750,-7.728499,7.647983,-2.075609,1.773734,1.857694],[-9.213129,-6.394844,9.453866,-0.253160,2.977364,-2.777630,-1.295901,-6.936526,0.122445,4.183467,-9.250324],[9.604708,9.592296,-4.660679,5.267745,-7.909707,1.589114,4.464162,-2.131902,9.181475,6.001276,7.951096],[5.065758,0.859949,6.051340,-1.468937,-8.783037,7.539592,-2.806358,-1.965081,-9.733417,5.732606,4.488011],[-5.774637,-8.073398,-5.848939,8.478613,6.524702,6.285057,8.695235,4.229730,-1.863632,-7.781035,0.454318]],[[-1.177545,-6.171737,-3.972552,-3.978965,-9.111437,3.245904,9.107912,-0.699650,2.657353,4.284441,-2.002184],[-5.621856,-7.405579,-1.836089,-1.565729,7.229461,7.578613,3.075228,8.810070,-1.466829,-8.240274,-8.796927],[9.874379,9.419509,-9.986596,6.466393,3.448345,4.699121,-6.486389,-0.823680,9.098503,9.257679,8.949585],[0.859192,1.702863,-6.826393,9.696780,6.301105,5.184719,-8.454425,8.688659,1.074895,1.428973,-3.717011],[-2.446007,-0.648328,3.281871,-1.636718,4.279669,7.907085,4.970464,-5.856934,6.975113,1.850930,-1.211876],[-5.885136,1.170066,2.043390,-7.281408,1.152339,-8.121240,3.851973,4.800806,4.563710,0.533772,1.256889],[-8.637007,3.002769,2.600257,1.179910,-5.935122,2.016354,0.394906,-8.187898,4.171219,-1.771935,-5.340733],[9.260797,4.149119,-4.709887,4.355660,-1.582907,1.997905,7.862038,-1.793889,3.369989,4.010996,9.073110],[8.474715,-0.494447,6.355818,-5.570230,-7.106491,7.317961,-5.248831,-4.282141,-6.801481,-5.855745,8.989472],[-9.380992,-4.065779,-8.526183,6.900027,-9.436856,-1.156578,8.240850,2.399044,6.052015,0.600317,4.012849],[-7.818156,7.925995,-2.612990,-9.757074,-2.834158,-5.287311,-2.275295,-4.391677,-9.622525,-2.190842,5.676252]],[[-1.007998,-0.614249,3.371298,-1.457287,3.640287,-3.682845,4.373984,-4.054149,-3.441933,0.241795,6.589404],[-8.457295,0.007568,-0.310870,6.216565,1.950567,-4.734764,7.224021,9.345164,8.801690,-2.226666,6.515409],[-1.377005,5.798383,-6.426878,2.348986,0.074203,6.793551,-7.908024,-0.513989,-2.470614,0.017790,6.241893],[-2.938251,4.293859,-2.586470,0.558830,5.539399,4.181486,7.190738,4.261808,-5.172324,-3.229172,7.440192],[0.144601,-3.351854,9.533464,5.178948,-7.607025,3.519391,8.316235,5.306159,-5.647158,-6.809193,2.300691],[8.766234,0.771660,3.336726,-3.092349,-4.480861,3.978473,1.183311,9.644961,0.193551,-8.722247,9.796133],[-8.434078,-2.835450,2.923925,1.834719,-1.613192,-4.107057,-8.659458,2.451392,-3.568163,-8.403419,-6.282450],[5.386822,-4.819153,4.751685,2.523101,-1.536225,2.876783,-4.571485,-0.343506,-0.116987,4.803144,-9.417044],[-2.202325,-1.523520,7.921088,-1.479446,-6.525348,7.343638,9.909840,1.828012,6.940549,-6.681105,-1.620806],[-9.832750,-8.675348,-0.848220,2.841678,0.105367,-8.159325,-4.164873,8.317505,-4.745682,-9.324845,-6.658419],[-6.040835,4.439046,-8.823117,0.549009,-7.865974,4.370412,-4.264973,-5.793404,-5.414730,8.969267,6.043626]],[[-7.154273,7.436454,-7.584349,1.859276,0.195878,-8.492980,0.693043,-6.012402,-7.877781,-4.390500,-4.272596],[7.066559,-1.726504,-7.585730,-5.864849,-6.802356,-5.678154,4.178938,8.794561,-4.873274,3.080634,5.621825],[6.839261,2.019619,4.711787,2.477903,-8.671916,-0.401158,-7.683780,-5.526234,9.940122,7.379820,-5.747818],[-7.033223,3.013811,-6.440208,-6.505292,-1.308254,-5.680890,8.583810,1.036076,2.839025,6.610890,6.824681],[-2.209057,-4.289668,-5.459932,-0.189847,2.647999,-9.630964,9.623356,8.642476,8.930326,7.789074,8.640973],[4.489617,9.232270,-6.584149,-4.604201,-2.282321,1.378860,-9.361524,-6.380082,4.928585,-9.380935,3.354340],[-6.379299,9.599506,-3.617189,6.003465,7.504892,-2.545601,7.217342,2.845159,-5.794467,2.623932,-8.513480],[0.631432,-5.046396,-6.635948,9.270932,-1.380837,-0.669230,6.457047,-9.901784,-3.604085,4.556408,-7.599135],[9.239465,-5.404610,8.678410,-0.282636,-0.153573,-6.569653,-3.717292,7.347372,-9.016381,2.376839,6.659529],[6.984581,-5.515529,6.140031,5.873716,-6.059898,2.185413,-6.400227,-4.562998,-4.838237,1.908279,3.668916],[-9.225224,4.249737,-4.776364,1.635726,0.465116,2.347610,6.853114,4.254088,-8.051546,9.611616,-5.697346]],[[-7.283665,-0.856613,4.416225,-0.709515,6.027799,5.833466,7.070784,-5.761253,1.614490,-4.516934,5.695713],[7.245505,-2.724447,-4.825416,0.540368,9.161849,-5.623878,6.300357,0.323164,-1.685385,-5.261861,5.960583],[-3.750699,-4.084099,1.757245,-6.458835,-4.387525,7.151972,-9.571386,6.433521,5.971707,3.280083,-3.581682],[5.823916,-4.419460,7.992004,-9.372115,6.860204,-9.397147,-6.305454,-6.048602,-5.276690,4.084406,0.327668],[4.368773,2.095443,0.756062,-5.160921,2.095734,-2.608473,-9.161489,-4.217144,-4.540538,5.680423,-5.003936],[1.666776,-2.767047,2.528807,7.306976,6.500198,8.687957,8.311483,-4.179915,0.562726,-3.310057,1.580319],[0.189241,1.057127,9.237250,-2.912396,-0.228403,-7.069473,6.420909,-2.276508,-4.016986,6.808504,8.156064],[7.345943,7.479800,7.997330,-6.069782,-7.119273,0.818795,1.752908,-9.876421,-1.293224,3.205318,6.581972],[-4.255533,-5.320106,-7.250265,0.985013,-3.989096,5.254310,9.138679,8.996721,1.588858,3.661236,6.412684],[-5.099938,-3.184955,4.648088,6.761901,-7.072332,-8.527646,2.049579,-0.018796,-1.733809,8.306871,-8.368353],[5.847395,-1.724850,4.420533,3.651051,-6.157174,-3.800617,-9.897021,8.384017,6.397496,9.086655,-9.263806]],[[-1.230063,0.581235,5.541184,-6.569597,5.520060,-0.920696,-2.707690,8.945609,-1.241273,8.931495,-4.112983],[-7.170351,-5.374062,9.580217,-9.787789,-7.426084,3.827183,6.592331,-9.487597,-2.495471,6.022098,5.592600],[9.237196,5.579917,-6.767557,-3.439069,-8.123811,-8.151630,-1.373210,4.006110,0.074119,6.223818,6.794551],[-7.024796,-9.615283,-7.132796,2.988979,-6.327127,-4.360245,-4.630474,-7.051990,-0.971415,-4.996828,3.997971],[-2.548173,1.141026,-9.327376,-0.840736,2.093058,7.036625,-0.831709,-1.791684,4.163926,-8.757640,-2.045690],[5.011889,7.786483,-3.300716,-1.023422,0.028805,-7.333885,3.329861,0.809297,-7.961930,-7.851773,2.964207],[0.458295,-1.161225,-0.988123,3.193160,0.391610,4.354473,-3.729707,-2.071779,-7.722099,7.307822,-6.934337],[9.377759,2.691745,6.038962,-2.373741,-6.601200,-7.508635,-5.890051,8.567478,9.601179,-4.884789,6.789043],[-2.826936,-2.482715,2.208477,4.861755,-4.999701,-0.822988,3.003737,5.259213,-2.367292,0.083150,-5.741813],[7.514461,5.831142,-9.267920,2.046106,-0.266185,-9.820230,-3.240258,1.527066,1.947089,6.238730,9.386237],[6.519710,-3.548977,-5.476090,-8.183002,1.915705,-1.963038,0.029319,0.935428,-1.224559,-5.549480,-9.004141]],[[6.304199,9.970371,1.449318,-8.741767,0.933983,5.044440,4.353375,1.389934,-3.201231,7.210851,-2.813857],[5.401167,9.094385,5.115693,-4.421639,8.964853,2.328502,4.395965,6.091592,4.035787,5.625303,-7.817801],[-7.840127,8.584601,-4.058169,2.611946,0.953590,-3.823449,9.009398,-5.080047,6.362370,4.725627,-7.236951],[2.703843,-3.374483,-3.416105,9.395942,-4.340452,6.200258,-4.345051,-1.316238,-6.091537,2.951302,-5.063913],[-5.239352,-7.582010,-3.388584,2.035625,-3.642696,-0.393162,8.541095,4.849317,4.499308,1.599639,7.609517],[9.793319,2.351458,2.620949,-5.202516,8.375930,-1.973537,0.917484,6.395118,-1.821641,4.118801,-3.440235],[5.190430,-6.679207,9.396358,6.246604,1.769516,-4.334510,-7.028173,2.995281,-5.271360,-6.845829,6.440235],[1.263466,-4.690344,-2.539756,7.435891,-3.577436,-3.287596,4.616374,-1.380804,-8.167211,3.380136,8.866407],[-7.883014,5.934365,8.705178,-5.440152,0.292440,-4.791249,1.085135,8.823938,0.892286,6.045593,-9.153338],[-2.201672,-6.320604,0.482723,0.019932,8.216935,0.948549,-4.725181,-4.780069,5.706459,9.808433,5.417974],[4.678024,7.711360,1.370794,-1.974874,5.572811,-1.727637,-7.205939,-9.816260,-9.035811,1.136125,-4.191593]],[[5.706450,-3.105137,-8.460931,-8.718284,-7.921665,-8.003329,-3.586154,9.458269,-0.888870,1.215005,-7.017307],[-4.324788,-0.649870,-7.552563,-9.063037,9.039021,-4.436121,2.771865,5.743466,-6.714174,6.821564,5.513534],[-7.526602,-2.191811,-7.611739,-9.582046,7.820744,7.639040,6.780555,-2.737119,-7.609013,6.696771,9.464604],[2.105675,-8.211887,7.912857,-9.520112,-5.059599,9.600722,8.642706,-6.771196,-9.213575,-7.892844,1.400298],[4.607661,-9.821498,-2.507937,-8.437462,-2.530647,-7.236113,-0.176003,-1.325311,5.097496,7.272034,6.181911],[-9.139990,-6.333318,-2.886658,-8.481713,0.839404,1.953020,3.817956,0.032476,2.046733,9.010244,9.593883],[3.337239,-2.154752,-7.576646,0.240735,6.452644,0.005926,-6.867944,-1.354550,-9.485363,7.997941,7.002459],[2.087536,-9.172919,-1.545781,-3.275671,9.280591,7.529767,-6.947620,-8.246815,-6.231968,0.394256,8.427632],[8.244299,-7.689523,7.276754,9.603398,-1.868928,-6.599314,3.588334,-2.950025,-3.879581,-3.238169,-8.384062],[1.446952,-9.297768,-2.538192,4.063934,-7.354964,0.115943,-6.191227,-9.117436,-9.593173,-1.319729,6.893833],[2.048125,-9.935685,-1.019931,-7.372986,0.078193,7.570250,3.460488,-6.209038,0.513057,1.677837,3.955587]],[[-1.605616,0.624511,0.447997,3.697437,9.868007,-6.670767,-5.058309,-4.767881,5.989305,-0.355206,-7.496240],[-6.579602,-3.098185,8.249869,8.974934,-9.392339,-5.076157,-0.390093,7.797101,-3.072887,-9.865075,-9.545588],[4.655222,8.213561,5.150938,6.432299,3.417141,-2.258960,-6.652567,9.383943,-1.876599,9.100817,0.039539],[-3.903057,5.923457,-4.809181,-8.118453,-6.779132,5.593625,-1.889886,0.076183,-6.455972,-8.668919,-6.957884],[-5.747275,-6.402914,1.625703,8.800615,2.093671,-5.748466,2.130456,-3.018628,3.921942,8.520496,5.987418],[7.896060,-2.045456,3.740615,-2.410513,0.899660,-6.144310,-8.506526,5.321756,-7.512373,8.924095,3.959619],[9.355231,-0.087737,-7.040843,-5.945032,-6.506283,-1.635651,0.446821,0.911181,9.020383,1.007050,-2.394201],[-3.562908,9.667804,-1.860789,0.502424,7.124183,5.839227,5.089897,-2.295104,1.225237,-7.325762,9.886309],[-1.090744,0.543601,0.468993,4.233383,-5.945124,8.275618,-3.873117,3.300576,3.946416,7.420157,-7.274983],[-6.694094,-6.893711,5.881026,3.778656,-0.514215,7.206640,6.772056,-7.396873,-3.071624,-9.014412,6.665148],[6.800938,-4.681762,1.289506,-1.512104,9.423569,-4.135986,-9.336600,-3.425748,-1.002422,8.521666,-1.021070]],[[-5.468438,3.887633,-7.996348,-3.109573,7.215751,-6.941094,-6.095882,7.951882,0.872283,7.853782,-3.819615],[-2.523860,0.172313,0.228860,-0.367904,-5.400821,9.383515,-6.634258,9.451206,5.162075,-2.052334,1.038143],[6.150450,5.040949,0.010352,5.787942,1.740280,-5.009429,-5.917466,8.139037,0.955832,-4.371436,-1.191182],[-8.534787,2.335705,-8.273650,7.398397,8.069684,-6.694461,-3.565815,7.449821,0.365241,4.417860,-2.326351],[4.394556,-4.848341,5.666681,2.481556,8.063986,5.861385,9.867523,7.994383,7.065183,-0.077186,2.661518],[3.435841,-2.259011,9.593475,-6.321139,9.991494,-0.412543,7.076203,-7.146166,0.920033,-9.159648,4.317037],[-6.338462,8.468977,9.760257,2.070998,-6.462066,2.307986,2.760679,-4.480619,-4.555961,0.820644,8.637476],[-1.023635,-1.728963,-6.850183,3.781630,-9.227496,-1.759078,0.668581,2.297682,-0.863692,-7.210998,-2.078985],[4.191167,8.197385,1.766738,-5.311308,3.933760,-0.788380,-9.144685,9.612288,-8.792355,7.366977,1.441868],[-9.291346,4.899008,-9.145288,9.014311,3.014846,2.931891,-7.757319,7.199732,3.512529,-3.987686,-0.479723],[-4.401287,-5.252514,-1.280523,7.693406,-2.933505,-3.187964,5.776786,7.469544,-9.833957,0.420851,-5.869678]],[[-3.512833,-8.481707,-8.163617,0.923272,2.851359,-4.618204,6.321345,4.466746,-2.116386,-0.623705,2.914643],[4.933196,-6.112786,2.524799,5.839929,-5.980658,1.601702,-1.472292,5.927129,0.936979,9.866137,-7.453365],[-4.079020,-2.268921,9.586419,6.653591,-7.959849,-0.627320,-7.964435,-3.623657,2.278548,9.227600,6.638780],[-7.399866,-7.497623,6.595774,-8.397809,-3.080484,3.355760,2.052614,4.976267,2.714884,-5.164565,6.267468],[3.537051,-3.390485,-5.919664,3.412443,1.759918,-8.509285,0.341087,-5.520652,1.636990,-1.812848,3.593784],[7.206383,8.385969,-0.413639,-2.498472,-6.610462,4.971768,-2.109607,0.226121,1.652245,-3.391170,-2.226170],[4.833974,3.791548,2.992238,6.979678,8.168271,8.086264,4.952640,-4.452881,3.120381,4.653175,-6.561679],[-3.309998,2.675758,-1.293031,2.399897,-8.797300,0.466041,6.275492,5.314160,9.028811,-3.702364,1.682343],[-0.806878,8.437174,2.091557,-3.608305,6.852173,5.297632,-4.004262,-3.223231,-4.110356,-5.079327,-5.464476],[-9.572551,-3.653459,-4.503732,-0.794408,-8.399569,-0.096623,8.847619,-1.435607,2.215544,-2.581738,7.727608],[-4.245320,1.348299,-4.730551,7.163970,1.867952,-6.159891,2.750394,-1.979361,4.722440,2.308376,4.608964]],[[1.299032,-2.200416,6.450183,9.126603,-7.788248,-2.495038,-7.271008,0.165893,7.459855,6.363101,6.823095],[-3.141673,-7.757204,-5.885451,2.475473,-0.727515,-4.501670,3.375309,-3.717958,-9.496539,4.039818,-0.589824],[1.778336,9.955987,-1.274903,-7.892649,5.423287,-2.438961,-9.503768,7.030643,-8.199891,-5.709165,1.962000],[-9.864014,-7.571078,-2.963148,8.506032,2.883611,-2.078768,1.216107,3.469926,-2.188091,-9.145982,6.793391],[-8.786083,9.437436,-0.609793,9.387369,6.408903,7.060053,-1.982935,0.783202,-6.100049,-9.811576,2.834151],[-0.806259,6.228375,-8.846462,1.653705,9.022845,-5.607953,-4.776628,-2.133154,-8.001474,5.410627,-7.926688],[7.062674,5.620122,-6.900639,8.822736,8.811201,7.963634,-8.597400,-8.123179,2.007255,3.875116,-2.186332],[-0.565414,4.230101,3.508902,6.090445,-2.727287,2.320449,-8.705074,6.769863,-4.933577,8.398198,-4.701236],[7.782654,5.311346,-0.029791,-8.791421,-5.611287,1.530938,-0.649225,-6.063546,-1.629914,-9.811089,-9.030574],[-9.332861,-9.866317,-6.456308,-1.770358,-4.942411,-9.386257,-3.560613,-5.880250,0.388695,7.935809,7.336913],[0.769936,2.748534,-6.928179,-0.440136,9.193933,3.731600,0.074552,7.269505,-1.861583,9.282286,-6.471747]],[[5.400559,-3.137409,2.857079,2.879109,2.103435,4.870080,4.334301,1.144831,-1.181503,-7.897284,-7.251040],[-7.014456,1.942286,3.632976,1.734304,-4.593078,8.543919,5.666193,-1.653662,9.746969,-0.127691,0.164088],[-4.727188,0.827974,4.773334,-0.582463,8.420656,5.908499,8.988197,4.570701,-2.342149,6.793657,-1.628395],[9.003306,-8.091511,1.771292,7.511345,-5.731669,6.249823,-9.465726,9.862045,-4.341633,4.013699,6.941885],[4.228876,2.104673,-7.868384,2.970718,-7.800867,5.754102,8.310429,4.255304,5.961208,-1.987373,4.807689],[1.807959,-2.885892,0.862677,-9.229901,-5.891418,9.790812,5.718139,6.210739,-6.100064,9.600413,-0.667416],[-3.014919,1.621614,5.410944,-5.984464,7.243394,2.583624,-1.480476,8.448532,2.331367,-6.257853,-2.826200],[-0.422935,-5.177252,8.060746,-2.694302,-2.416400,6.031811,5.281508,7.899316,4.707847,3.907306,-0.690135],[7.776736,-8.643522,-1.278386,2.493087,8.100799,-1.687352,-8.559127,3.580485,4.480152,-4.975908,-2.690699],[9.083983,5.659600,-9.465352,0.148142,-2.902372,-4.356591,0.473396,5.810577,5.110449,-6.980863,-9.473846],[5.956719,1.961419,9.212458,9.314801,4.840721,-2.245999,6.516547,-8.404648,8.909850,2.979998,5.792165]]], dtype = "float32")#candidate|5499|(16, 11, 11)|const|float32
var_5500 = relay.var("var_5500", dtype = "float32", shape = (16, 11, 11))#candidate|5500|(16, 11, 11)|var|float32
bop_5501 = relay.multiply(const_5499.astype('float32'), relay.reshape(var_5500.astype('float32'), relay.shape_of(const_5499))) # shape=(16, 11, 11)
uop_5508 = relay.asin(bop_5501.astype('float32')) # shape=(16, 11, 11)
output = uop_5508
output2 = uop_5508
func_5515 = relay.Function([var_5500,], output)
mod['func_5515'] = func_5515
mod = relay.transform.InferType()(mod)
mutated_mod['func_5515'] = func_5515
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5516 = relay.var("var_5516", dtype = "float32", shape = (16, 11, 11))#candidate|5516|(16, 11, 11)|var|float32
func_5515_call = mutated_mod.get_global_var('func_5515')
call_5517 = func_5515_call(var_5516)
output = call_5517
func_5518 = relay.Function([var_5516], output)
mutated_mod['func_5518'] = func_5518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3544_call = mod.get_global_var('func_3544')
func_3545_call = mutated_mod.get_global_var('func_3545')
call_5532 = relay.TupleGetItem(func_3544_call(), 0)
call_5533 = relay.TupleGetItem(func_3545_call(), 0)
func_1924_call = mod.get_global_var('func_1924')
func_1928_call = mutated_mod.get_global_var('func_1928')
const_5536 = relay.const([True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False], dtype = "bool")#candidate|5536|(1872,)|const|bool
var_5537 = relay.var("var_5537", dtype = "float64", shape = (96,))#candidate|5537|(96,)|var|float64
call_5535 = relay.TupleGetItem(func_1924_call(relay.reshape(const_5536.astype('bool'), [16, 9, 13]), relay.reshape(var_5537.astype('float64'), [96,]), ), 3)
call_5538 = relay.TupleGetItem(func_1928_call(relay.reshape(const_5536.astype('bool'), [16, 9, 13]), relay.reshape(var_5537.astype('float64'), [96,]), ), 3)
output = relay.Tuple([call_5532,call_5535,const_5536,var_5537,])
output2 = relay.Tuple([call_5533,call_5538,const_5536,var_5537,])
func_5544 = relay.Function([var_5537,], output)
mod['func_5544'] = func_5544
mod = relay.transform.InferType()(mod)
var_5545 = relay.var("var_5545", dtype = "float64", shape = (96,))#candidate|5545|(96,)|var|float64
output = func_5544(var_5545)
func_5546 = relay.Function([var_5545], output)
mutated_mod['func_5546'] = func_5546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3890_call = mod.get_global_var('func_3890')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_5556 = func_3890_call()
call_5557 = func_3890_call()
func_3911_call = mod.get_global_var('func_3911')
func_3913_call = mutated_mod.get_global_var('func_3913')
call_5558 = relay.TupleGetItem(func_3911_call(), 0)
call_5559 = relay.TupleGetItem(func_3913_call(), 0)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_5562 = relay.TupleGetItem(func_4205_call(), 1)
call_5563 = relay.TupleGetItem(func_4207_call(), 1)
output = relay.Tuple([call_5556,call_5558,call_5562,])
output2 = relay.Tuple([call_5557,call_5559,call_5563,])
func_5568 = relay.Function([], output)
mod['func_5568'] = func_5568
mod = relay.transform.InferType()(mod)
output = func_5568()
func_5569 = relay.Function([], output)
mutated_mod['func_5569'] = func_5569
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5597 = relay.var("var_5597", dtype = "float64", shape = (10, 3, 8))#candidate|5597|(10, 3, 8)|var|float64
uop_5598 = relay.log(var_5597.astype('float64')) # shape=(10, 3, 8)
uop_5601 = relay.exp(var_5597.astype('float32')) # shape=(10, 3, 8)
const_5606 = relay.const([[[-2.737053,0.809129,3.876255,1.275027,-2.668806,-6.638499,-9.104060,-9.565758],[-5.127796,-8.860394,-0.995101,1.740295,6.480569,6.268324,5.491586,-3.327119],[6.757982,-2.262104,-8.305395,1.827991,2.170201,7.691428,-3.022341,7.940775]],[[8.420056,-9.079119,-8.650478,-0.491590,3.866265,6.946653,-0.499902,-1.284365],[8.534262,-2.420374,-7.732043,-1.704044,0.183327,0.379019,1.500529,-1.199885],[-1.138462,6.133425,-5.997097,-9.654763,4.050893,8.205195,5.426178,9.293829]],[[-1.847098,-2.308389,1.737619,-4.621629,2.624693,-2.015784,-5.732874,9.678690],[7.897028,9.119070,-5.452804,6.568704,4.368542,2.596849,-4.327482,3.872265],[-1.828844,1.148304,-8.376946,-5.355411,3.335296,6.701033,-0.327143,-7.841328]],[[3.795126,6.633793,0.622068,9.891423,5.574606,8.292848,5.588137,-9.137378],[-4.679639,2.301537,6.094634,-4.182099,-1.754548,-6.000002,-9.388931,-5.529465],[4.995978,8.608149,-6.214567,9.324745,7.160643,0.804891,-5.405418,-5.701265]],[[8.358001,3.221030,-0.238026,8.732158,6.018317,7.652510,-2.651043,4.406785],[2.337335,-1.285231,5.902020,-6.517506,-9.963853,8.284086,0.144418,9.031459],[6.620545,-5.209542,9.422725,-1.524037,7.481866,-7.477794,6.219991,7.679943]],[[9.025274,-6.441590,-5.878559,5.145759,-9.070352,0.123797,4.799740,-6.934662],[5.775197,-1.410833,-8.993325,-5.313049,-5.224681,4.453751,-9.417454,-3.151287],[-7.245321,3.478967,8.207698,7.599354,0.552081,-6.875130,-1.551823,-8.945840]],[[5.777530,-1.356444,3.737359,0.802179,9.972439,-3.725677,-4.039377,4.450954],[4.530936,4.043773,-8.369156,1.446283,5.159166,-7.972672,-9.796388,7.954914],[8.189892,-6.776826,-8.179420,-5.474420,-7.736173,-8.818202,6.178082,-3.882898]],[[-3.961853,-6.842690,-5.012032,-3.310093,3.684993,9.409095,8.199619,9.280897],[-2.439846,-1.523504,5.765081,8.919728,8.187671,-8.264675,2.579316,7.272292],[-0.898707,-2.767699,5.397521,-7.857311,0.927701,3.985141,2.366565,8.184207]],[[-2.941627,-2.977982,-8.342717,1.267206,7.131992,9.917662,-6.253315,-5.051639],[-2.136415,-0.786913,-1.830814,-1.037381,-5.916405,-4.329983,-0.851168,-4.166932],[9.203290,-6.746132,-8.594308,9.520453,-3.372582,-1.446471,-6.885844,0.317508]],[[-6.953812,-4.280755,2.635650,-4.493077,-2.429903,7.872393,7.789836,7.682703],[-3.863810,-8.684169,-2.300873,3.088297,-0.974417,9.294960,-3.539244,4.041745],[-2.608726,7.358803,-5.199291,-5.883614,3.848933,7.487542,1.840187,2.160630]]], dtype = "float64")#candidate|5606|(10, 3, 8)|const|float64
bop_5607 = relay.multiply(var_5597.astype('uint8'), relay.reshape(const_5606.astype('uint8'), relay.shape_of(var_5597))) # shape=(10, 3, 8)
bop_5622 = relay.not_equal(var_5597.astype('bool'), relay.reshape(bop_5607.astype('bool'), relay.shape_of(var_5597))) # shape=(10, 3, 8)
bop_5625 = relay.right_shift(uop_5598.astype('int32'), relay.reshape(bop_5622.astype('int32'), relay.shape_of(uop_5598))) # shape=(10, 3, 8)
bop_5630 = relay.left_shift(bop_5622.astype('uint64'), relay.reshape(uop_5598.astype('uint64'), relay.shape_of(bop_5622))) # shape=(10, 3, 8)
uop_5633 = relay.cos(var_5597.astype('float64')) # shape=(10, 3, 8)
output = relay.Tuple([uop_5601,bop_5625,bop_5630,uop_5633,])
output2 = relay.Tuple([uop_5601,bop_5625,bop_5630,uop_5633,])
func_5641 = relay.Function([var_5597,], output)
mod['func_5641'] = func_5641
mod = relay.transform.InferType()(mod)
mutated_mod['func_5641'] = func_5641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5642 = relay.var("var_5642", dtype = "float64", shape = (10, 3, 8))#candidate|5642|(10, 3, 8)|var|float64
func_5641_call = mutated_mod.get_global_var('func_5641')
call_5643 = func_5641_call(var_5642)
output = call_5643
func_5644 = relay.Function([var_5642], output)
mutated_mod['func_5644'] = func_5644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4820_call = mod.get_global_var('func_4820')
func_4822_call = mutated_mod.get_global_var('func_4822')
call_5651 = relay.TupleGetItem(func_4820_call(), 0)
call_5652 = relay.TupleGetItem(func_4822_call(), 0)
var_5656 = relay.var("var_5656", dtype = "int32", shape = (14, 14, 14))#candidate|5656|(14, 14, 14)|var|int32
bop_5657 = relay.bitwise_xor(call_5651.astype('uint16'), relay.reshape(var_5656.astype('uint16'), relay.shape_of(call_5651))) # shape=(14, 14, 14)
bop_5660 = relay.bitwise_xor(call_5652.astype('uint16'), relay.reshape(var_5656.astype('uint16'), relay.shape_of(call_5652))) # shape=(14, 14, 14)
func_4222_call = mod.get_global_var('func_4222')
func_4225_call = mutated_mod.get_global_var('func_4225')
const_5674 = relay.const([6.149268,9.795466,-4.967617,-1.534110,-0.583189,9.200350,7.535999,-2.597877,9.460928,-5.895507,8.821489,-2.464828,-9.711687,-4.231075,5.366954,-2.550695,-2.480035,7.345056,-4.841755,-1.543421,2.860903,9.368558,8.841456,1.401841,-6.151996,2.280781,1.226927,3.766183,-2.965797,-0.387601,-5.025487,-9.631438,-5.138312,-8.058006,2.718640,3.798892,-2.123662,-8.150032,-9.354721,-9.870033,4.969080,-2.339503,5.089374,7.858236,2.538196,-1.271808,-6.898042,-7.696873,-9.767726,4.305576,-2.994930,-6.187981,-0.254845,-7.423056,2.723774,3.365965,-8.817112,4.265242,9.383312,-7.535438,-6.110079,3.756029,6.248354,0.456020,-7.982160,-3.053340,8.610566,9.396093,3.044595,-4.817471,1.419462,9.978862,0.255376,3.621098,8.022751,6.848716,-4.265726,4.125336,9.016284,-5.112604,8.167297,-8.029553,7.991287,-1.207606,1.774003,6.275775,-2.380610,-2.692952,-6.470515,6.772272,4.241491,4.798428,7.572813,-7.274873,-0.423606,-0.580525,7.230972,-8.399802,-0.795473,0.850238,-2.594443,-6.427651,0.772764,-6.364359,0.663477,-7.087618,4.277176,-6.526470,-4.159529,2.422629,6.999565,-2.122511,-1.538285,-9.765540,-1.126909,-5.921750,-6.250377,1.971180,9.213601,2.561401,6.589906,-0.584174,-7.255145,5.059386,6.423059,1.283756,-2.338270,0.814856,-6.227193,-0.992638,1.173194,2.044443,4.297377,3.095045,9.069564,4.480524,-6.731740,4.247850,9.159326,0.977252,0.850595,1.424104,6.584905,-5.786064,-9.665467,-8.085458,7.687646,-9.656278,-1.545075,0.045891,-2.605896,5.195508,-8.368340,1.017306,8.984665,-7.000677,7.643510,9.407024,-7.970133,1.066436,-7.637873,-6.164393,5.556737,-6.180898,8.791399,7.694551,2.042539,-3.264612,8.163218,4.960473,8.883354,6.736088,0.229330,6.893392,-3.041711,1.214445,-5.037618,-3.850915,-3.772798,3.490397,9.777967,1.360929,5.274588,-7.468386,-3.774968,-0.855614,-8.124280,-4.707154,-8.438043,1.292323,-1.785254,8.983489,8.501732,6.309020,-0.833161,1.166388,5.253422,-3.382666,-7.489970,-6.934997,-1.219138,-5.186088,-5.050874,2.303499,-5.502639,-8.039892,1.471595,6.482980,7.071331,-7.275967,-1.178944,6.416945,-4.276840,-8.670651,0.392879,7.549679], dtype = "float64")#candidate|5674|(216,)|const|float64
call_5673 = relay.TupleGetItem(func_4222_call(relay.reshape(const_5674.astype('float64'), [3, 9, 8])), 0)
call_5675 = relay.TupleGetItem(func_4225_call(relay.reshape(const_5674.astype('float64'), [3, 9, 8])), 0)
func_21_call = mod.get_global_var('func_21')
func_24_call = mutated_mod.get_global_var('func_24')
var_5687 = relay.var("var_5687", dtype = "float64", shape = (4, 24))#candidate|5687|(4, 24)|var|float64
call_5686 = func_21_call(relay.reshape(var_5687.astype('float64'), [3, 2, 16]), relay.reshape(var_5687.astype('float64'), [3, 2, 16]), )
call_5688 = func_21_call(relay.reshape(var_5687.astype('float64'), [3, 2, 16]), relay.reshape(var_5687.astype('float64'), [3, 2, 16]), )
output = relay.Tuple([bop_5657,call_5673,const_5674,call_5686,var_5687,])
output2 = relay.Tuple([bop_5660,call_5675,const_5674,call_5688,var_5687,])
func_5690 = relay.Function([var_5656,var_5687,], output)
mod['func_5690'] = func_5690
mod = relay.transform.InferType()(mod)
var_5691 = relay.var("var_5691", dtype = "int32", shape = (14, 14, 14))#candidate|5691|(14, 14, 14)|var|int32
var_5692 = relay.var("var_5692", dtype = "float64", shape = (4, 24))#candidate|5692|(4, 24)|var|float64
output = func_5690(var_5691,var_5692,)
func_5693 = relay.Function([var_5691,var_5692,], output)
mutated_mod['func_5693'] = func_5693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5695 = relay.var("var_5695", dtype = "int64", shape = ())#candidate|5695|()|var|int64
const_5696 = relay.const([[[10,-6,6,-6,-4,8,1,-1],[8,-3,-4,5,-2,-8,3,-6],[5,-1,-2,1,-9,10,-5,-9],[6,3,8,-7,-8,3,6,-8],[1,-2,-6,9,-4,-3,9,-1],[3,6,1,-4,-6,-2,-6,3],[-10,2,-8,9,-9,2,-6,4],[-8,-3,-4,9,3,4,4,9],[-2,9,-10,-3,-1,-9,-7,-6],[-3,-5,-5,-9,-6,10,-2,-3]],[[7,-6,10,-8,-6,8,9,-2],[3,1,2,8,5,-9,8,3],[3,4,3,-6,8,4,-8,-4],[-4,10,-7,3,8,-10,3,2],[3,1,8,4,-1,-5,-7,-9],[4,-6,-8,4,8,-2,7,8],[10,7,9,3,-2,-7,7,-1],[-5,-3,-3,-1,-1,5,-9,-2],[-4,-6,-10,1,9,-4,-5,-7],[-1,5,7,6,-9,10,4,6]],[[8,-9,2,4,-7,8,-3,-4],[5,-8,-5,2,7,-3,-1,9],[4,-10,7,8,4,7,10,4],[3,8,8,4,-2,-8,-10,2],[4,-8,10,6,1,1,-7,5],[-9,-7,-2,4,-10,7,-7,3],[3,-2,-7,-4,4,-8,-2,-10],[-7,-8,10,3,2,9,6,-3],[-3,-1,5,-9,-3,-1,-1,8],[8,6,-7,7,6,-1,9,-1]],[[-10,3,10,-8,10,-1,-10,8],[2,7,1,-1,1,-9,-7,-5],[7,-6,-1,-3,2,3,-1,-2],[-6,-6,-5,6,-8,-8,-9,4],[10,-4,-4,3,1,10,10,-8],[-10,-5,-9,1,-8,-4,4,5],[-8,7,4,-10,8,8,1,-4],[8,6,-10,7,-7,-7,9,-5],[8,10,1,-8,7,7,-10,9],[-10,-7,1,10,-5,9,6,-10]],[[7,8,-10,-9,2,5,8,-10],[-6,-1,-1,6,-8,7,-2,-10],[-8,7,5,-5,1,-9,-3,-7],[7,9,-9,-1,2,2,-8,-1],[1,4,-3,10,-10,-2,9,-5],[9,2,9,-6,-5,4,-1,2],[4,-7,-7,-2,-6,-2,-6,-1],[1,5,-9,10,1,9,-1,-3],[7,4,7,-2,2,9,-3,3],[4,-3,-8,10,8,-1,-10,-6]],[[4,-2,-7,5,-10,-7,5,-4],[-9,3,-9,9,2,-6,6,-1],[3,-3,-10,10,-1,3,-9,4],[-4,-9,1,2,-8,8,-2,6],[6,6,6,-6,-2,-4,5,-1],[8,-6,8,2,10,-9,3,-8],[5,-5,-9,-9,-1,4,-4,7],[-4,8,-2,-7,-4,-5,-4,-4],[-8,-9,9,1,-2,5,9,7],[-8,-7,-7,3,1,-6,2,3]],[[10,-10,-9,-10,4,-6,-9,8],[7,-10,-10,-8,2,7,6,5],[-1,7,-5,-2,2,6,10,-1],[-1,-5,-3,-3,7,-8,-1,10],[-9,3,-6,5,-2,1,6,1],[4,-8,9,1,-3,-10,5,8],[9,-10,-6,-2,7,-2,-7,8],[-9,6,8,-3,-8,7,2,-7],[-9,-3,3,5,9,1,-2,-7],[5,-10,-3,-6,-5,6,8,-8]]], dtype = "int64")#candidate|5696|(7, 10, 8)|const|int64
bop_5697 = relay.maximum(var_5695.astype('int64'), const_5696.astype('int64')) # shape=(7, 10, 8)
output = bop_5697
output2 = bop_5697
func_5704 = relay.Function([var_5695,], output)
mod['func_5704'] = func_5704
mod = relay.transform.InferType()(mod)
var_5705 = relay.var("var_5705", dtype = "int64", shape = ())#candidate|5705|()|var|int64
output = func_5704(var_5705)
func_5706 = relay.Function([var_5705], output)
mutated_mod['func_5706'] = func_5706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5726 = relay.var("var_5726", dtype = "float64", shape = (11, 15, 8))#candidate|5726|(11, 15, 8)|var|float64
uop_5727 = relay.sqrt(var_5726.astype('float64')) # shape=(11, 15, 8)
output = uop_5727
output2 = uop_5727
func_5729 = relay.Function([var_5726,], output)
mod['func_5729'] = func_5729
mod = relay.transform.InferType()(mod)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5730 = relay.var("var_5730", dtype = "float64", shape = (11, 15, 8))#candidate|5730|(11, 15, 8)|var|float64
func_5729_call = mutated_mod.get_global_var('func_5729')
call_5731 = func_5729_call(var_5730)
output = call_5731
func_5732 = relay.Function([var_5730], output)
mutated_mod['func_5732'] = func_5732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4474_call = mod.get_global_var('func_4474')
func_4476_call = mutated_mod.get_global_var('func_4476')
call_5737 = relay.TupleGetItem(func_4474_call(), 1)
call_5738 = relay.TupleGetItem(func_4476_call(), 1)
func_2388_call = mod.get_global_var('func_2388')
func_2391_call = mutated_mod.get_global_var('func_2391')
var_5753 = relay.var("var_5753", dtype = "bool", shape = (240, 4))#candidate|5753|(240, 4)|var|bool
call_5752 = func_2388_call(relay.reshape(var_5753.astype('bool'), [15, 16, 4]), relay.reshape(var_5753.astype('bool'), [15, 16, 4]), )
call_5754 = func_2388_call(relay.reshape(var_5753.astype('bool'), [15, 16, 4]), relay.reshape(var_5753.astype('bool'), [15, 16, 4]), )
output = relay.Tuple([call_5737,call_5752,var_5753,])
output2 = relay.Tuple([call_5738,call_5754,var_5753,])
func_5760 = relay.Function([var_5753,], output)
mod['func_5760'] = func_5760
mod = relay.transform.InferType()(mod)
var_5761 = relay.var("var_5761", dtype = "bool", shape = (240, 4))#candidate|5761|(240, 4)|var|bool
output = func_5760(var_5761)
func_5762 = relay.Function([var_5761], output)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5821 = relay.var("var_5821", dtype = "float32", shape = (16, 15, 5))#candidate|5821|(16, 15, 5)|var|float32
var_5822 = relay.var("var_5822", dtype = "float32", shape = (16, 15, 5))#candidate|5822|(16, 15, 5)|var|float32
bop_5823 = relay.power(var_5821.astype('float32'), relay.reshape(var_5822.astype('float32'), relay.shape_of(var_5821))) # shape=(16, 15, 5)
uop_5830 = relay.log2(var_5822.astype('float64')) # shape=(16, 15, 5)
func_5171_call = mod.get_global_var('func_5171')
func_5174_call = mutated_mod.get_global_var('func_5174')
var_5844 = relay.var("var_5844", dtype = "float64", shape = (40,))#candidate|5844|(40,)|var|float64
const_5845 = relay.const(8, dtype = "int8")#candidate|5845|()|const|int8
call_5843 = relay.TupleGetItem(func_5171_call(relay.reshape(var_5844.astype('float64'), [40,]), relay.reshape(const_5845.astype('int8'), []), ), 2)
call_5846 = relay.TupleGetItem(func_5174_call(relay.reshape(var_5844.astype('float64'), [40,]), relay.reshape(const_5845.astype('int8'), []), ), 2)
output = relay.Tuple([bop_5823,uop_5830,call_5843,var_5844,const_5845,])
output2 = relay.Tuple([bop_5823,uop_5830,call_5846,var_5844,const_5845,])
func_5858 = relay.Function([var_5821,var_5822,var_5844,], output)
mod['func_5858'] = func_5858
mod = relay.transform.InferType()(mod)
mutated_mod['func_5858'] = func_5858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5858_call = mutated_mod.get_global_var('func_5858')
var_5860 = relay.var("var_5860", dtype = "float32", shape = (16, 15, 5))#candidate|5860|(16, 15, 5)|var|float32
var_5861 = relay.var("var_5861", dtype = "float32", shape = (16, 15, 5))#candidate|5861|(16, 15, 5)|var|float32
var_5862 = relay.var("var_5862", dtype = "float64", shape = (40,))#candidate|5862|(40,)|var|float64
call_5859 = func_5858_call(var_5860,var_5861,var_5862,)
output = call_5859
func_5863 = relay.Function([var_5860,var_5861,var_5862,], output)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4207_call = mutated_mod.get_global_var('func_4207')
call_5889 = relay.TupleGetItem(func_4205_call(), 3)
call_5890 = relay.TupleGetItem(func_4207_call(), 3)
func_4284_call = mod.get_global_var('func_4284')
func_4287_call = mutated_mod.get_global_var('func_4287')
var_5894 = relay.var("var_5894", dtype = "int64", shape = (351,))#candidate|5894|(351,)|var|int64
var_5895 = relay.var("var_5895", dtype = "int8", shape = (6, 64))#candidate|5895|(6, 64)|var|int8
call_5893 = relay.TupleGetItem(func_4284_call(relay.reshape(var_5894.astype('int64'), [3, 9, 13]), relay.reshape(var_5895.astype('int8'), [384,]), ), 3)
call_5896 = relay.TupleGetItem(func_4287_call(relay.reshape(var_5894.astype('int64'), [3, 9, 13]), relay.reshape(var_5895.astype('int8'), [384,]), ), 3)
bop_5901 = relay.logical_or(var_5894.astype('bool'), call_5893.astype('bool')) # shape=(351,)
bop_5904 = relay.logical_or(var_5894.astype('bool'), call_5896.astype('bool')) # shape=(351,)
func_5544_call = mod.get_global_var('func_5544')
func_5546_call = mutated_mod.get_global_var('func_5546')
var_5907 = relay.var("var_5907", dtype = "float64", shape = (96,))#candidate|5907|(96,)|var|float64
call_5906 = relay.TupleGetItem(func_5544_call(relay.reshape(var_5907.astype('float64'), [96,])), 3)
call_5908 = relay.TupleGetItem(func_5546_call(relay.reshape(var_5907.astype('float64'), [96,])), 3)
output = relay.Tuple([call_5889,var_5895,bop_5901,call_5906,var_5907,])
output2 = relay.Tuple([call_5890,var_5895,bop_5904,call_5908,var_5907,])
func_5912 = relay.Function([var_5894,var_5895,var_5907,], output)
mod['func_5912'] = func_5912
mod = relay.transform.InferType()(mod)
mutated_mod['func_5912'] = func_5912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5912_call = mutated_mod.get_global_var('func_5912')
var_5914 = relay.var("var_5914", dtype = "int64", shape = (351,))#candidate|5914|(351,)|var|int64
var_5915 = relay.var("var_5915", dtype = "int8", shape = (6, 64))#candidate|5915|(6, 64)|var|int8
var_5916 = relay.var("var_5916", dtype = "float64", shape = (96,))#candidate|5916|(96,)|var|float64
call_5913 = func_5912_call(var_5914,var_5915,var_5916,)
output = call_5913
func_5917 = relay.Function([var_5914,var_5915,var_5916,], output)
mutated_mod['func_5917'] = func_5917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5924 = relay.var("var_5924", dtype = "float32", shape = (14, 13, 5))#candidate|5924|(14, 13, 5)|var|float32
uop_5925 = relay.rsqrt(var_5924.astype('float32')) # shape=(14, 13, 5)
output = uop_5925
output2 = uop_5925
F = relay.Function([var_5924,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5924,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3833() -> (Tensor[(5, 5, 13), float32],) {
  %0 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_9464(%var_9456: Tensor[(280, 8), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(280, 8), float32]) {
  %2 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %3 = cast(%var_9456, dtype="float32") /* ty=Tensor[(280, 8), float32] */;
  %4 = reshape(%3, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), float32] */;
  %5 = @func_4986(%4) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(10, 14, 16), float64]) */;
  %6 = %2.0;
  %7 = %5.1;
  (%6, %7, %var_9456)
}

def @func_8881() -> Tensor[(5, 5, 13), float32] {
  @func_5039() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_11091(%var_11073: Tensor[(13, 2, 13), float64]) -> (Tensor[(13, 2, 13), int64], Tensor[(5, 5, 13), float64]) {
  %8 = cast(%var_11073, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
  %9 = exp(%8) /* ty=Tensor[(13, 2, 13), float64] */;
  %10 = cast(%var_11073, dtype="int64") /* ty=Tensor[(13, 2, 13), int64] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%9, dtype="int64") /* ty=Tensor[(13, 2, 13), int64] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %14 = @func_8351() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %15 = subtract(%12, %13) /* ty=Tensor[(13, 2, 13), int64] */;
  %16 = %14.0;
  (%15, %16)
}

def @func_2956(%var_2935: Tensor[(5, 5, 13), float64], %var_2947: float32) -> (Tensor[(5, 5, 13), float64], float32, Tensor[(198), float32], Tensor[(7, 16, 6), float64]) {
  %17 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %18 = cast(%var_2935, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%17, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %22 = cast(%var_2947, dtype="float32") /* ty=float32 */;
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %24 = reshape(%22, newshape=[]) /* ty=float32 */;
  %25 = reshape(%23, newshape=[11, 3, 6]) /* ty=Tensor[(11, 3, 6), float32] */;
  %26 = @func_2865(%24, %25) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */;
  %27 = %26.1;
  %28 = cast(%27, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %29 = subtract(%20, %21) /* ty=Tensor[(5, 5, 13), float64] */;
  %30 = log2(%28) /* ty=Tensor[(7, 16, 6), float64] */;
  (%29, %var_2947, meta[relay.Constant][0] /* ty=Tensor[(198), float32] */, %30)
}

def @func_3046() -> (Tensor[(5, 5, 13), float64],) {
  %31 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %32 = %31.0;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %34 = exp(%33) /* ty=Tensor[(5, 5, 13), float64] */;
  (%34,)
}

def @func_9602() -> Tensor[(5, 5, 13), float32] {
  %35 = @func_9031() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64]) */;
  %35.0
}

def @func_7114() -> (Tensor[(5, 5, 13), float32],) {
  %36 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  (%36,)
}

def @func_10947() -> Tensor[(448), uint16] {
  @func_3963() /* ty=Tensor[(448), uint16] */
}

def @func_6055(%var_6009: Tensor[(5, 5, 13), float64]) -> (Tensor[(5, 5, 13), bool], Tensor[(3, 11, 12), float32], Tensor[(396), float32], Tensor[(5, 5, 13), float32]) {
  %37 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %38 = cast(%var_6009, dtype="bool") /* ty=Tensor[(5, 5, 13), bool] */;
  %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%37, dtype="bool") /* ty=Tensor[(5, 5, 13), bool] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %42 = cast(meta[relay.Constant][1] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %43 = reshape(%42, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
  %44 = @func_3712() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %45 = greater_equal(%40, %41) /* ty=Tensor[(5, 5, 13), bool] */;
  %46 = @func_3666(%43) /* ty=Tensor[(3, 11, 12), float32] */;
  %47 = %44.0;
  (%45, %46, meta[relay.Constant][1] /* ty=Tensor[(396), float32] */, %47)
}

def @func_4489(%var_4476: int32) -> (Tensor[(5, 5, 13), float64], int32, Tensor[(1, 243), int32], Tensor[(3, 9, 9), float32], Tensor[(2, 312), float32], Tensor[(624), float32]) {
  %48 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %49 = cast(%var_4476, dtype="int32") /* ty=int32 */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 243), int32] */, dtype="int32") /* ty=Tensor[(1, 243), int32] */;
  %51 = reshape(%49, newshape=[]) /* ty=int32 */;
  %52 = reshape(%50, newshape=[3, 9, 9]) /* ty=Tensor[(3, 9, 9), int32] */;
  %53 = @func_4133(%51, %52) /* ty=Tensor[(3, 9, 9), bool] */;
  %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 9, 9), bool] */, dtype="float32") /* ty=Tensor[(3, 9, 9), float32] */;
  %55 = shape_of(%53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%53, dtype="float32") /* ty=Tensor[(3, 9, 9), float32] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %58 = cast(meta[relay.Constant][4] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %59 = reshape(%58, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %60 = @func_2727(%59) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */;
  %61 = %48.0;
  %62 = mod(%56, %57) /* ty=Tensor[(3, 9, 9), float32] */;
  %63 = %60.1;
  (%61, %var_4476, meta[relay.Constant][2] /* ty=Tensor[(1, 243), int32] */, %62, %63, meta[relay.Constant][4] /* ty=Tensor[(624), float32] */)
}

def @func_9498() -> (Tensor[(5, 5, 13), float32], Tensor[(3, 16, 13), float32], Tensor[(264), int32], Tensor[(624), float64]) {
  %64 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %65 = cast(meta[relay.Constant][5] /* ty=Tensor[(264), int32] */, dtype="int32") /* ty=Tensor[(264), int32] */;
  %66 = cast(meta[relay.Constant][5] /* ty=Tensor[(264), int32] */, dtype="int32") /* ty=Tensor[(264), int32] */;
  %67 = cast(meta[relay.Constant][6] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %68 = reshape(%65, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), int32] */;
  %69 = reshape(%66, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), int32] */;
  %70 = reshape(%67, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %71 = @func_6905(%68, %69, %70) /* ty=(Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(2, 11, 12), float32]) */;
  %72 = cast(meta[relay.Constant][6] /* ty=Tensor[(624), float32] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %73 = %64.0;
  %74 = %71.0;
  %75 = cos(%72) /* ty=Tensor[(624), float64] */;
  (%73, %74, meta[relay.Constant][5] /* ty=Tensor[(264), int32] */, %75)
}

def @func_2535() -> (Tensor[(5, 5, 13), float64],) {
  %76 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  (%76,)
}

def @func_1659(%var_1622: Tensor[(1, 4, 6), uint16], %var_1642: Tensor[(2145), bool], %var_1646: Tensor[(448), uint16]) -> (Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) {
  %77 = cast(meta[relay.Constant][7] /* ty=Tensor[(143), bool] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %78 = cast(%var_1642, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %79 = reshape(%77, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), bool] */;
  %80 = reshape(%78, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %81 = @func_1204(%79, %80) /* ty=(Tensor[(15, 11, 13), bool],) */;
  %82 = cast(%var_1646, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %83 = reshape(%82, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %84 = cast(%var_1622, dtype="uint64") /* ty=Tensor[(1, 4, 6), uint64] */;
  %85 = cast(meta[relay.Constant][8] /* ty=uint16 */, dtype="uint64") /* ty=uint64 */;
  %86 = multiply(%84, %85) /* ty=Tensor[(1, 4, 6), uint64] */;
  %87 = cast(%86, dtype="uint32") /* ty=Tensor[(1, 4, 6), uint32] */;
  %88 = cast(meta[relay.Constant][8] /* ty=uint16 */, dtype="uint32") /* ty=uint32 */;
  %89 = cast(meta[relay.Constant][8] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %90 = cast(%var_1622, dtype="uint16") /* ty=Tensor[(1, 4, 6), uint16] */;
  %91 = minimum(%89, %90) /* ty=Tensor[(1, 4, 6), uint16] */;
  %92 = cast(%var_1622, dtype="int64") /* ty=Tensor[(1, 4, 6), int64] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="int64") /* ty=Tensor[(1, 4, 6), int64] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %96 = %81.0;
  %97 = @func_1320(%83) /* ty=Tensor[(8, 14, 4), uint16] */;
  %98 = logical_xor(%87, %88) /* ty=Tensor[(1, 4, 6), uint32] */;
  %99 = add(%94, %95) /* ty=Tensor[(?, 4, 6), int64] */;
  (%96, meta[relay.Constant][7] /* ty=Tensor[(143), bool] */, %var_1642, %97, %var_1646, %98, %99)
}

def @func_6295(%var_6286: Tensor[(624), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(3, 16, 13), float32]) {
  %100 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %101 = cast(%var_6286, dtype="float32") /* ty=Tensor[(624), float32] */;
  %102 = cast(%var_6286, dtype="float32") /* ty=Tensor[(624), float32] */;
  %103 = reshape(%101, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %104 = reshape(%102, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %105 = @func_2040(%103, %104) /* ty=(Tensor[(3, 16, 13), float32],) */;
  %106 = %105.0;
  %107 = cast(%106, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %108 = %100.0;
  %109 = atan(%107) /* ty=Tensor[(3, 16, 13), float32] */;
  (%108, %var_6286, %109)
}

def @func_11520() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  %110 = @func_10968() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %111 = @func_8661() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %112 = %110.0;
  %113 = %111.0;
  (%112, %113)
}

def @func_6475() -> (Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) {
  %114 = @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */;
  %115 = cast(meta[relay.Constant][9] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %116 = cast(meta[relay.Constant][9] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %117 = reshape(%115, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %118 = reshape(%116, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %119 = @func_900(%117, %118) /* ty=(Tensor[(13, 15, 5), int16],) */;
  %120 = %114.0;
  %121 = %119.0;
  (%120, %121, meta[relay.Constant][9] /* ty=Tensor[(975), int16] */)
}

def @func_2752() -> (Tensor[(5, 5, 13), float64],) {
  %122 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
  %123 = %122.0;
  (%123,)
}

def @func_5039() -> Tensor[(5, 5, 13), float32] {
  %124 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %124.0
}

def @func_1320(%var_1308: Tensor[(8, 14, 4), uint16]) -> Tensor[(8, 14, 4), uint16] {
  %125 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 14, 4), uint16] */, dtype="uint16") /* ty=Tensor[(8, 14, 4), uint16] */;
  %126 = shape_of(%var_1308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%var_1308, dtype="uint16") /* ty=Tensor[(8, 14, 4), uint16] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%127, %128) /* ty=Tensor[(8, 14, 4), uint16] */
}

def @func_7298() -> (Tensor[(5, 5, 13), float64],) {
  %129 = @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %130 = %129.0;
  (%130,)
}

def @func_3430(%var_3428: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %131 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %132 = %131.0;
  %133 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %134 = %133.0;
  %135 = cast(%134, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %136 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%132, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %139 = cast(%var_3428, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %140 = reshape(%139, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %141 = floor_divide(%137, %138) /* ty=Tensor[(5, 5, 13), float64] */;
  %142 = @func_1320(%140) /* ty=Tensor[(8, 14, 4), uint16] */;
  (%141, %142, %var_3428)
}

def @func_7415(%var_7409: Tensor[(16, 4, 3), float64]) -> (Tensor[(16, 4, 3), float64],) {
  %143 = cast(%var_7409, dtype="float64") /* ty=Tensor[(16, 4, 3), float64] */;
  %144 = exp(%143) /* ty=Tensor[(16, 4, 3), float64] */;
  (%144,)
}

def @func_8314() -> (Tensor[(5, 5, 13), float32], Tensor[(143), bool]) {
  %145 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %146 = %145.0;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(5, 5, 13), float32] */;
  %148 = reshape(%147, newshape=[5, 5, 13]) /* ty=Tensor[(5, 5, 13), float32] */;
  %149 = @func_4066(%148) /* ty=(Tensor[(5, 5, 13), uint32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool]) */;
  %150 = %149.4;
  (%146, %150)
}

def @func_9671() -> (Tensor[(5, 5, 13), float32],) {
  %151 = @func_5252() /* ty=Tensor[(5, 5, 13), float32] */;
  (%151,)
}

def @func_765(%var_759: uint8, %var_760: Tensor[(7, 16, 6), uint8]) -> Tensor[(7, 16, 6), uint8] {
  %152 = cast(%var_759, dtype="uint8") /* ty=uint8 */;
  %153 = cast(%var_760, dtype="uint8") /* ty=Tensor[(7, 16, 6), uint8] */;
  logical_xor(%152, %153) /* ty=Tensor[(7, 16, 6), uint8] */
}

def @func_3341() -> (Tensor[(5, 5, 13), float32],) {
  %154 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %155 = %154.0;
  (%155,)
}

def @func_11377() -> Tensor[(5, 5, 13), float32] {
  @func_6870() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_11032() -> Tensor[(5, 5, 13), float32] {
  %156 = @func_8184() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %156.0
}

def @func_2176(%var_2161: Tensor[(14, 12, 4), int16]) -> (Tensor[(14, 12, 4), bool],) {
  %157 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 12, 4), int16] */, dtype="bool") /* ty=Tensor[(14, 12, 4), bool] */;
  %158 = shape_of(%var_2161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%var_2161, dtype="bool") /* ty=Tensor[(14, 12, 4), bool] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %161 = greater(%159, %160) /* ty=Tensor[(14, 12, 4), bool] */;
  (%161,)
}

def @func_6870() -> Tensor[(5, 5, 13), float32] {
  %162 = @func_6412() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %162.0
}

def @func_6207(%var_6190: Tensor[(243), float32], %var_6199: Tensor[(4, 1), uint64], %var_6201: Tensor[(2, 2, 15), uint64]) -> (Tensor[(5, 5, 13), float32], Tensor[(243), bool], Tensor[(4, 1), uint64], Tensor[(2, 2, 15), bool]) {
  %163 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %164 = @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */;
  %165 = %164.3;
  %166 = cast(%var_6190, dtype="bool") /* ty=Tensor[(243), bool] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(1), int32] */;
  %168 = cast(%165, dtype="bool") /* ty=Tensor[(243), bool] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?), bool] */;
  %170 = cast(%var_6199, dtype="uint64") /* ty=Tensor[(4, 1), uint64] */;
  %171 = reshape(%170, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
  %172 = @func_5807(%171) /* ty=Tensor[(2, 2, 1), uint64] */;
  %173 = cast(%172, dtype="bool") /* ty=Tensor[(2, 2, 1), bool] */;
  %174 = cast(%var_6201, dtype="bool") /* ty=Tensor[(2, 2, 15), bool] */;
  %175 = %163.0;
  %176 = not_equal(%168, %169) /* ty=Tensor[(243), bool] */;
  %177 = less(%173, %174) /* ty=Tensor[(2, 2, 15), bool] */;
  (%175, %176, %var_6199, %177)
}

def @func_9690() -> Tensor[(5, 5, 13), float32] {
  %178 = @func_9335() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %178.0
}

def @func_8129() -> Tensor[(5, 5, 13), float32] {
  %179 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %179.1
}

def @func_9836() -> (Tensor[(6, 8, 12), bool], Tensor[(5, 5, 13), float32], Tensor[(448), uint16]) {
  %180 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 8, 12), float32] */, dtype="bool") /* ty=Tensor[(6, 8, 12), bool] */;
  %181 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(6, 8, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 8, 12), float32] */, dtype="bool") /* ty=Tensor[(6, 8, 12), bool] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %184 = @func_8090() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16]) */;
  %185 = @func_3634() /* ty=(Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %186 = less(%182, %183) /* ty=Tensor[(6, 8, 12), bool] */;
  %187 = %184.1;
  %188 = %185.2;
  (%186, %187, %188)
}

def @func_11555() -> (Tensor[(5, 5, 13), float32],) {
  %189 = @func_7114() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %190 = %189.0;
  (%190,)
}

def @func_5182() -> (Tensor[(5, 5, 13), float64],) {
  %191 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %192 = %191.0;
  (%192,)
}

def @func_2040(%var_2033: Tensor[(3, 16, 13), float32], %var_2034: Tensor[(3, 16, 13), float32]) -> (Tensor[(3, 16, 13), float32],) {
  %193 = cast(%var_2034, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %194 = shape_of(%var_2033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%var_2033, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %197 = maximum(%195, %196) /* ty=Tensor[(3, 16, 13), float32] */;
  (%197,)
}

def @func_4918(%var_4890: Tensor[(672), uint8], %var_4898: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(2912), int16], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(624), float32], int32, Tensor[(7, 9, 9), int8], Tensor[(567), int8], Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(448), uint16], Tensor[(672, 143), float32]) {
  %198 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %199 = @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */;
  %200 = @func_3341() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %201 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %202 = reshape(%201, newshape=[]) /* ty=int32 */;
  %203 = @func_4489(%202) /* ty=(Tensor[(5, 5, 13), float64], int32, Tensor[(1, 243), int32], Tensor[(3, 9, 9), float32], Tensor[(2, 312), float32], Tensor[(624), float32]) */;
  %204 = cast(meta[relay.Constant][14] /* ty=Tensor[(567), int8] */, dtype="int8") /* ty=Tensor[(567), int8] */;
  %205 = reshape(%204, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int8] */;
  %206 = cast(-5 /* ty=int32 */, dtype="uint8") /* ty=uint8 */;
  %207 = cast(%var_4898, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %208 = cast(meta[relay.Constant][15] /* ty=Tensor[(143), bool] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %209 = reshape(%206, newshape=[]) /* ty=uint8 */;
  %210 = reshape(%207, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %211 = reshape(%208, newshape=[13, 11]) /* ty=Tensor[(13, 11), bool] */;
  %212 = @func_1804(%209, %210, %211) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(13, 11), bool], Tensor[(2145), bool]) */;
  %213 = cast(%var_4890, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %214 = %203.5;
  %215 = cast(%214, dtype="float32") /* ty=Tensor[(624), float32] */;
  %216 = cast(%214, dtype="float32") /* ty=Tensor[(624), float32] */;
  %217 = reshape(%213, newshape=[672, 1]) /* ty=Tensor[(672, 1), uint8] */;
  %218 = reshape(%215, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %219 = reshape(%216, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %220 = @func_4585(%217, %218, %219) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(672, 1), uint8], Tensor[(624), float32], Tensor[(660), float64], Tensor[(2, 312), uint32], Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32]) */;
  %221 = %220.2;
  %222 = cast(meta[relay.Constant][15] /* ty=Tensor[(143), bool] */, dtype="float32") /* ty=Tensor[(143), float32] */;
  %223 = cast(%221, dtype="float32") /* ty=Tensor[(672, 1), float32] */;
  %224 = %198.0;
  %225 = %199.3;
  %226 = %200.0;
  %227 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
  %228 = @func_180(%205) /* ty=Tensor[(7, 9, 9), int8] */;
  %229 = %212.6;
  %230 = minimum(%222, %223) /* ty=Tensor[(672, 143), float32] */;
  (%224, %225, %226, %227, %214, -5 /* ty=int32 */, %228, meta[relay.Constant][14] /* ty=Tensor[(567), int8] */, %var_4890, %229, %var_4898, %230)
}

def @func_5807(%var_5797: Tensor[(2, 2, 1), uint64]) -> Tensor[(2, 2, 1), uint64] {
  %231 = cast(meta[relay.Constant][16] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %232 = cast(%var_5797, dtype="uint64") /* ty=Tensor[(2, 2, 1), uint64] */;
  bitwise_xor(%231, %232) /* ty=Tensor[(2, 2, 1), uint64] */
}

def @func_5788(%var_5736: Tensor[(8, 14, 16), uint64], %var_5737: Tensor[(8, 14, 16), uint64], %var_5750: uint8, %var_5751: Tensor[(168, 4), uint8]) -> (Tensor[(8, 14, 16), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(168, 4), uint8], Tensor[(672), uint8], Tensor[(448), uint64], Tensor[(2145), float64]) {
  %233 = cast(%var_5737, dtype="bool") /* ty=Tensor[(8, 14, 16), bool] */;
  %234 = shape_of(%var_5736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_5736, dtype="bool") /* ty=Tensor[(8, 14, 16), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = cast(%var_5750, dtype="uint8") /* ty=uint8 */;
  %238 = cast(%var_5751, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %239 = reshape(%237, newshape=[]) /* ty=uint8 */;
  %240 = reshape(%238, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint8] */;
  %241 = cast(meta[relay.Constant][17] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %242 = cast(meta[relay.Constant][17] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %243 = cast(meta[relay.Constant][18] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %244 = cast(%var_5750, dtype="uint8") /* ty=uint8 */;
  %245 = cast(%var_5751, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %246 = reshape(%241, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %247 = reshape(%242, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %248 = reshape(%243, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %249 = reshape(%244, newshape=[]) /* ty=uint8 */;
  %250 = reshape(%245, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %251 = @func_2130(%246, %247, %248, %249, %250) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %252 = cast(meta[relay.Constant][18] /* ty=Tensor[(2145), bool] */, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %253 = less_equal(%235, %236) /* ty=Tensor[(8, 14, 16), bool] */;
  %254 = @func_765(%239, %240) /* ty=Tensor[(7, 16, 6), uint8] */;
  %255 = %251.7;
  %256 = acosh(%252) /* ty=Tensor[(2145), float64] */;
  (%253, %254, %var_5750, %var_5751, %255, meta[relay.Constant][17] /* ty=Tensor[(448), uint64] */, %256)
}

def @func_3558(%var_3518: Tensor[(624, 1), float32], %var_3530: Tensor[(12, 11, 5), float64]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(624, 1), float32], Tensor[(12, 11, 5), int8], Tensor[(5, 5, 13), float64]) {
  %257 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %258 = cast(%var_3518, dtype="float32") /* ty=Tensor[(624, 1), float32] */;
  %259 = reshape(%258, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %260 = @func_2727(%259) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */;
  %261 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %262 = %261.0;
  %263 = cast(%var_3530, dtype="int8") /* ty=Tensor[(12, 11, 5), int8] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%262, dtype="int8") /* ty=Tensor[(12, 11, 5), int8] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %267 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %268 = %257.0;
  %269 = %260.1;
  %270 = left_shift(%265, %266) /* ty=Tensor[(12, 11, 5), int8] */;
  %271 = %267.0;
  (%268, %269, %var_3518, %270, %271)
}

def @func_3953(%var_3934: Tensor[(5, 5, 13), float64], %var_3943: Tensor[(24), uint16], %var_3944: Tensor[(2145), bool], %var_3945: Tensor[(4, 112), uint16], %var_3948: float32) -> (Tensor[(5, 5, 13), uint16], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(4, 112), uint16], Tensor[(975), int16], float32, Tensor[(1, 20), float32], Tensor[(975), int16]) {
  %272 = @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */;
  %273 = %272.6;
  %274 = cast(%var_3934, dtype="uint16") /* ty=Tensor[(5, 5, 13), uint16] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%273, dtype="uint16") /* ty=Tensor[(5, 5, 13), uint16] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %278 = cast(%var_3943, dtype="uint16") /* ty=Tensor[(24), uint16] */;
  %279 = cast(%var_3944, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %280 = cast(%var_3945, dtype="uint16") /* ty=Tensor[(4, 112), uint16] */;
  %281 = reshape(%278, newshape=[1, 4, 6]) /* ty=Tensor[(1, 4, 6), uint16] */;
  %282 = reshape(%279, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %283 = reshape(%280, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %284 = @func_1659(%281, %282, %283) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */;
  %285 = cast(%var_3948, dtype="float32") /* ty=float32 */;
  %286 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 20), float32] */, dtype="float32") /* ty=Tensor[(1, 20), float32] */;
  %287 = cast(meta[relay.Constant][20] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %288 = reshape(%285, newshape=[]) /* ty=float32 */;
  %289 = reshape(%286, newshape=[2, 1, 10]) /* ty=Tensor[(2, 1, 10), float32] */;
  %290 = reshape(%287, newshape=[975]) /* ty=Tensor[(975), int16] */;
  %291 = @func_3321(%288, %289, %290) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) */;
  %292 = right_shift(%276, %277) /* ty=Tensor[(5, 5, 13), uint16] */;
  %293 = %284.0;
  %294 = %291.3;
  (%292, %293, %var_3943, %var_3944, %var_3945, %294, %var_3948, meta[relay.Constant][19] /* ty=Tensor[(1, 20), float32] */, meta[relay.Constant][20] /* ty=Tensor[(975), int16] */)
}

def @func_7398() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %295 = @func_3902() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %296 = @func_5050() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %297 = %295.0;
  %298 = @func_5444() /* ty=Tensor[(5, 5, 13), float64] */;
  %299 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  %300 = %296.0;
  (%297, %298, %299, %300)
}

def @func_6573(%var_6554: Tensor[(11, 6, 9), float32]) -> (Tensor[(11, 6, 9), float32], Tensor[(5, 5, 13), float64]) {
  %301 = cast(%var_6554, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %302 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(11, 6, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 6, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %305 = @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %306 = mod(%303, %304) /* ty=Tensor[(11, 6, 9), float32] */;
  %307 = %305.0;
  (%306, %307)
}

def @func_6450() -> (Tensor[(5, 5, 13), float64],) {
  %308 = @func_6352() /* ty=Tensor[(5, 5, 13), float64] */;
  (%308,)
}

def @func_8019(%var_8006: Tensor[(8, 1), float32]) -> (Tensor[(8, ?), bool], Tensor[(5, 5, 13), float32]) {
  %309 = cast(%var_8006, dtype="bool") /* ty=Tensor[(8, 1), bool] */;
  %310 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(8, 1), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %311 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 1), float32] */, dtype="bool") /* ty=Tensor[(8, 1), bool] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %313 = greater_equal(%311, %312) /* ty=Tensor[(8, ?), bool] */;
  %314 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
  (%313, %314)
}

def @func_4228() -> Tensor[(5, 5, 13), float32] {
  @func_2905() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_4585(%var_4513: Tensor[(672, 1), uint8], %var_4525: Tensor[(624), float32], %var_4565: Tensor[(2, 312), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(672, 1), uint8], Tensor[(624), float32], Tensor[(660), float64], Tensor[(2, 312), uint32], Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32]) {
  %315 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %316 = cast(meta[relay.Constant][23] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %317 = cast(%var_4513, dtype="uint8") /* ty=Tensor[(672, 1), uint8] */;
  %318 = reshape(%316, newshape=[]) /* ty=uint8 */;
  %319 = reshape(%317, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %320 = @func_2808(%318, %319) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) */;
  %321 = cast(%var_4525, dtype="float32") /* ty=Tensor[(624), float32] */;
  %322 = cast(meta[relay.Constant][24] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %323 = reshape(%321, newshape=[624, 1]) /* ty=Tensor[(624, 1), float32] */;
  %324 = reshape(%322, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), float64] */;
  %325 = @func_3558(%323, %324) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(624, 1), float32], Tensor[(12, 11, 5), int8], Tensor[(5, 5, 13), float64]) */;
  %326 = %325.1;
  %327 = cast(meta[relay.Constant][23] /* ty=uint8 */, dtype="uint32") /* ty=uint32 */;
  %328 = cast(%326, dtype="uint32") /* ty=Tensor[(2, 312), uint32] */;
  %329 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %330 = cast(%326, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %331 = acosh(%330) /* ty=Tensor[(2, 312), float32] */;
  %332 = cast(%var_4565, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(2), int32] */;
  %334 = cast(%331, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %336 = mod(%334, %335) /* ty=Tensor[(2, 312), float32] */;
  %337 = cast(%336, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %338 = %315.0;
  %339 = %320.2;
  %340 = left_shift(%327, %328) /* ty=Tensor[(2, 312), uint32] */;
  %341 = %329.0;
  %342 = asin(%337) /* ty=Tensor[(2, 312), float32] */;
  (%338, %339, %var_4513, %var_4525, meta[relay.Constant][24] /* ty=Tensor[(660), float64] */, %340, %341, %342)
}

def @func_3750(%var_3731: Tensor[(448), uint16], %var_3737: Tensor[(2145), bool]) -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(5, 5, 13), float64]) {
  %343 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %344 = cast(%var_3731, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %345 = reshape(%344, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %346 = @func_3430(%345) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %347 = cast(meta[relay.Constant][25] /* ty=Tensor[(143), bool] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %348 = cast(%var_3737, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %349 = reshape(%347, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), bool] */;
  %350 = reshape(%348, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %351 = @func_1204(%349, %350) /* ty=(Tensor[(15, 11, 13), bool],) */;
  %352 = cast(%var_3731, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %353 = reshape(%352, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %354 = @func_3430(%353) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %355 = %343.0;
  %356 = %346.0;
  %357 = %351.0;
  %358 = %354.0;
  (%355, %356, %var_3731, %357, meta[relay.Constant][25] /* ty=Tensor[(143), bool] */, %var_3737, %358)
}

def @func_8558() -> Tensor[(5, 5, 13), float64] {
  %359 = @func_2776() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %359.0
}

def @func_6954(%var_6942: Tensor[(594), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32]) {
  %360 = cast(%var_6942, dtype="float32") /* ty=Tensor[(594), float32] */;
  %361 = reshape(%360, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %362 = @func_6573(%361) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(5, 5, 13), float64]) */;
  %363 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  %364 = %362.0;
  (%363, %364, %var_6942)
}

def @func_8661() -> (Tensor[(5, 5, 13), float32],) {
  %365 = @func_6870() /* ty=Tensor[(5, 5, 13), float32] */;
  (%365,)
}

def @func_1758() -> Tensor[(5, 5, 13), float64] {
  %366 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  rsqrt(%366) /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_6611(%var_6588: uint8) -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], uint8, Tensor[(168, 4), uint8]) {
  %367 = cast(%var_6588, dtype="uint8") /* ty=uint8 */;
  %368 = cast(meta[relay.Constant][27] /* ty=Tensor[(168, 4), uint8] */, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %369 = reshape(%367, newshape=[]) /* ty=uint8 */;
  %370 = reshape(%368, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %371 = @func_2808(%369, %370) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) */;
  %372 = @func_6352() /* ty=Tensor[(5, 5, 13), float64] */;
  %373 = %371.0;
  (%372, %373, %var_6588, meta[relay.Constant][27] /* ty=Tensor[(168, 4), uint8] */)
}

def @func_3496() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) {
  %374 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %375 = cast(meta[relay.Constant][28] /* ty=Tensor[(2912), int16] */, dtype="int16") /* ty=Tensor[(2912), int16] */;
  %376 = cast(meta[relay.Constant][28] /* ty=Tensor[(2912), int16] */, dtype="int16") /* ty=Tensor[(2912), int16] */;
  %377 = cast(4.19806f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %378 = cast(meta[relay.Constant][29] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %379 = reshape(%375, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), int16] */;
  %380 = reshape(%376, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), int16] */;
  %381 = reshape(%377, newshape=[]) /* ty=float32 */;
  %382 = reshape(%378, newshape=[198]) /* ty=Tensor[(198), float32] */;
  %383 = @func_3173(%379, %380, %381, %382) /* ty=(Tensor[(13, 14, 16), int16], Tensor[(672), uint8], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %384 = cast(meta[relay.Constant][30] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %385 = cast(meta[relay.Constant][30] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %386 = cast(meta[relay.Constant][31] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %387 = cast(4.19806f /* ty=float32 */, dtype="uint8") /* ty=uint8 */;
  %388 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %389 = reshape(%384, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %390 = reshape(%385, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %391 = reshape(%386, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %392 = reshape(%387, newshape=[]) /* ty=uint8 */;
  %393 = reshape(%388, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %394 = @func_2130(%389, %390, %391, %392, %393) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %395 = %374.0;
  %396 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %397 = %383.4;
  %398 = %394.1;
  (%395, %396, %397, meta[relay.Constant][28] /* ty=Tensor[(2912), int16] */, 4.19806f /* ty=float32 */, meta[relay.Constant][29] /* ty=Tensor[(198), float32] */, %398, meta[relay.Constant][30] /* ty=Tensor[(448), uint64] */, meta[relay.Constant][31] /* ty=Tensor[(2145), bool] */, meta[relay.Constant][32] /* ty=Tensor[(672), uint8] */)
}

def @func_7837(%var_7810: Tensor[(2, 3, 15), uint8], %var_7811: Tensor[(2, 3, 15), uint8]) -> (Tensor[(2, 3, 15), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %399 = cast(%var_7811, dtype="bool") /* ty=Tensor[(2, 3, 15), bool] */;
  %400 = shape_of(%var_7810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%var_7810, dtype="bool") /* ty=Tensor[(2, 3, 15), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %403 = cast(meta[relay.Constant][33] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %404 = reshape(%403, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %405 = greater_equal(%401, %402) /* ty=Tensor[(2, 3, 15), bool] */;
  %406 = @func_1320(%404) /* ty=Tensor[(8, 14, 4), uint16] */;
  (%405, %406, meta[relay.Constant][33] /* ty=Tensor[(448), uint16] */)
}

def @func_8940() -> Tensor[(5, 5, 13), float64] {
  %407 = @func_7298() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %407.0
}

def @func_2130(%var_2068: Tensor[(8, 7, 8), uint64], %var_2069: Tensor[(8, 7, 8), uint64], %var_2097: Tensor[(2145), bool], %var_2116: uint8, %var_2117: Tensor[(672), uint8]) -> (Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) {
  %408 = cast(%var_2069, dtype="uint64") /* ty=Tensor[(8, 7, 8), uint64] */;
  %409 = shape_of(%var_2068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_2068, dtype="uint64") /* ty=Tensor[(8, 7, 8), uint64] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %412 = right_shift(%410, %411) /* ty=Tensor[(8, 7, 8), uint64] */;
  %413 = cast(%412, dtype="bool") /* ty=Tensor[(8, 7, 8), bool] */;
  %414 = shape_of(%var_2069, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%var_2069, dtype="bool") /* ty=Tensor[(8, 7, 8), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %417 = logical_and(%415, %416) /* ty=Tensor[(8, 7, 8), bool] */;
  %418 = cast(%417, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
  %419 = reshape(%418, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %420 = @func_1917(%419) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %421 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 2), uint16] */, dtype="uint16") /* ty=Tensor[(12, 2), uint16] */;
  %422 = cast(%var_2097, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %423 = cast(%var_2068, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
  %424 = reshape(%421, newshape=[1, 4, 6]) /* ty=Tensor[(1, 4, 6), uint16] */;
  %425 = reshape(%422, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %426 = reshape(%423, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %427 = @func_1659(%424, %425, %426) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */;
  %428 = cast(%var_2116, dtype="uint8") /* ty=uint8 */;
  %429 = cast(%var_2117, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %430 = reshape(%428, newshape=[]) /* ty=uint8 */;
  %431 = reshape(%429, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint8] */;
  %432 = cast(%var_2069, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
  %433 = sqrt(%432) /* ty=Tensor[(8, 7, 8), float32] */;
  %434 = cast(%433, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
  %435 = atan(%434) /* ty=Tensor[(8, 7, 8), float32] */;
  %436 = cast(%412, dtype="int8") /* ty=Tensor[(8, 7, 8), int8] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="int8") /* ty=Tensor[(8, 7, 8), int8] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %440 = maximum(%438, %439) /* ty=Tensor[(8, 7, 8), int8] */;
  %441 = cast(%433, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %445 = %420.0;
  %446 = %427.4;
  %447 = @func_765(%430, %431) /* ty=Tensor[(7, 16, 6), uint8] */;
  %448 = floor_divide(%443, %444) /* ty=Tensor[(8, 7, 8), float32] */;
  (%417, %445, %446, meta[relay.Constant][34] /* ty=Tensor[(12, 2), uint16] */, %var_2097, %447, %var_2116, %var_2117, %448)
}

def @func_2808(%var_2803: uint8, %var_2804: Tensor[(672), uint8]) -> (Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) {
  %449 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %450 = cast(meta[relay.Constant][35] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %451 = cast(meta[relay.Constant][35] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %452 = cast(meta[relay.Constant][36] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %453 = cast(%var_2803, dtype="uint8") /* ty=uint8 */;
  %454 = cast(%var_2804, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %455 = reshape(%450, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %456 = reshape(%451, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %457 = reshape(%452, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %458 = reshape(%453, newshape=[]) /* ty=uint8 */;
  %459 = reshape(%454, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %460 = @func_2130(%455, %456, %457, %458, %459) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %461 = %449.0;
  %462 = %460.5;
  (%461, %462, meta[relay.Constant][35] /* ty=Tensor[(448), uint64] */, meta[relay.Constant][36] /* ty=Tensor[(2145), bool] */, %var_2803, %var_2804)
}

def @func_5252() -> Tensor[(5, 5, 13), float32] {
  @func_4382() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_2994() -> (Tensor[(5, 5, 13), float32],) {
  %463 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  (%463,)
}

def @func_2905() -> Tensor[(5, 5, 13), float32] {
  %464 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(5, 5, 13), float32] */;
  log2(%466) /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_4639() -> (Tensor[(5, 5, 13), float32],) {
  %467 = @func_3341() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %468 = %467.0;
  (%468,)
}

def @func_7468() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %469 = @func_6412() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %470 = @func_7398() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %471 = %469.0;
  %472 = %470.2;
  (%471, %472)
}

def @func_7055() -> (Tensor[(448), uint16],) {
  %473 = @func_3963() /* ty=Tensor[(448), uint16] */;
  (%473,)
}

def @func_2915() -> Tensor[(5, 5, 13), float32] {
  @func_2905() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_3386(%var_3349: Tensor[(12, 12, 8), bool], %var_3350: Tensor[(12, 12, 8), bool], %var_3361: Tensor[(448), uint16]) -> (Tensor[(12, 12, 8), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %474 = cast(%var_3350, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
  %475 = shape_of(%var_3349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%var_3349, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %478 = cast(%var_3361, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %479 = reshape(%478, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %480 = @func_1917(%479) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %481 = logical_and(%476, %477) /* ty=Tensor[(12, 12, 8), bool] */;
  %482 = %480.1;
  (%481, %482, %var_3361)
}

def @func_5444() -> Tensor[(5, 5, 13), float64] {
  @func_3774() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_10453(%var_10441: Tensor[(198), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], float32, Tensor[(198), float32], Tensor[(4, 1), uint64], Tensor[(243), float32], Tensor[(4), uint64], Tensor[(30, 2), uint64], Tensor[(7, 16, 6), int16]) {
  %483 = @func_8661() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %484 = @func_6412() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %485 = @func_10329() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %486 = cast(meta[relay.Constant][37] /* ty=Tensor[(243), float32] */, dtype="float32") /* ty=Tensor[(243), float32] */;
  %487 = cast(meta[relay.Constant][38] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %488 = cast(meta[relay.Constant][39] /* ty=Tensor[(30, 2), uint64] */, dtype="uint64") /* ty=Tensor[(30, 2), uint64] */;
  %489 = reshape(%486, newshape=[243]) /* ty=Tensor[(243), float32] */;
  %490 = reshape(%487, newshape=[4, 1]) /* ty=Tensor[(4, 1), uint64] */;
  %491 = reshape(%488, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint64] */;
  %492 = @func_6207(%489, %490, %491) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(243), bool], Tensor[(4, 1), uint64], Tensor[(2, 2, 15), bool]) */;
  %493 = cast(-4.84702f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %494 = cast(%var_10441, dtype="float32") /* ty=Tensor[(198), float32] */;
  %495 = reshape(%493, newshape=[]) /* ty=float32 */;
  %496 = reshape(%494, newshape=[11, 3, 6]) /* ty=Tensor[(11, 3, 6), float32] */;
  %497 = @func_2865(%495, %496) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */;
  %498 = %497.1;
  %499 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 16, 6), uint8] */, dtype="int16") /* ty=Tensor[(7, 16, 6), int16] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="int16") /* ty=Tensor[(7, 16, 6), int16] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %503 = %483.0;
  %504 = %484.0;
  %505 = %485.1;
  %506 = %492.2;
  %507 = bitwise_or(%501, %502) /* ty=Tensor[(7, 16, 6), int16] */;
  (%503, %504, %505, -4.84702f /* ty=float32 */, %var_10441, %506, meta[relay.Constant][37] /* ty=Tensor[(243), float32] */, meta[relay.Constant][38] /* ty=Tensor[(4), uint64] */, meta[relay.Constant][39] /* ty=Tensor[(30, 2), uint64] */, %507)
}

def @func_6265() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %508 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %509 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %510 = %508.0;
  %511 = %509.0;
  (%510, %511)
}

def @func_9367() -> Tensor[(5, 5, 13), float32] {
  %512 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %512.0
}

def @func_11811() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64]) {
  %513 = @func_10968() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %514 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %515 = %513.0;
  %516 = @func_8940() /* ty=Tensor[(5, 5, 13), float64] */;
  %517 = %514.0;
  (%515, %516, %517)
}

def @func_6433() -> Tensor[(5, 5, 13), bool] {
  %518 = @func_5182() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %519 = %518.0;
  %520 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 5, 13), float64] */, dtype="bool") /* ty=Tensor[(5, 5, 13), bool] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="bool") /* ty=Tensor[(5, 5, 13), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%522, %523) /* ty=Tensor[(5, 5, 13), bool] */
}

def @func_3173(%var_3140: Tensor[(13, 14, 16), int16], %var_3141: Tensor[(13, 14, 16), int16], %var_3146: float32, %var_3147: Tensor[(198), float32]) -> (Tensor[(13, 14, 16), int16], Tensor[(672), uint8], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %524 = cast(%var_3141, dtype="int16") /* ty=Tensor[(13, 14, 16), int16] */;
  %525 = shape_of(%var_3140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%var_3140, dtype="int16") /* ty=Tensor[(13, 14, 16), int16] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %528 = cast(%var_3146, dtype="float32") /* ty=float32 */;
  %529 = cast(%var_3147, dtype="float32") /* ty=Tensor[(198), float32] */;
  %530 = reshape(%528, newshape=[]) /* ty=float32 */;
  %531 = reshape(%529, newshape=[11, 3, 6]) /* ty=Tensor[(11, 3, 6), float32] */;
  %532 = @func_2865(%530, %531) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */;
  %533 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %534 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %535 = bitwise_xor(%526, %527) /* ty=Tensor[(13, 14, 16), int16] */;
  %536 = %532.2;
  %537 = %533.0;
  %538 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  %539 = %534.0;
  (%535, %536, %var_3146, %var_3147, %537, %538, %539)
}

def @func_2225(%var_2216: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %540 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %541 = cast(%var_2216, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %542 = reshape(%541, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %543 = @func_1917(%542) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %544 = %540.0;
  %545 = %543.1;
  (%544, %545, %var_2216)
}

def @func_1917(%var_1905: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %546 = cast(%var_1905, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %547 = reshape(%546, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %548 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %549 = @func_1320(%547) /* ty=Tensor[(8, 14, 4), uint16] */;
  (%548, %549, %var_1905)
}

def @func_7017() -> (Tensor[(5, 5, 13), float64],) {
  %550 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %551 = %550.0;
  (%551,)
}

def @func_4382() -> Tensor[(5, 5, 13), float32] {
  %552 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %552.0
}

def @func_11548() -> (Tensor[(5, 5, 13), float64],) {
  %553 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %554 = %553.0;
  (%554,)
}

def @func_7592(%var_7587: Tensor[(672), int16]) -> (Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(5, 5, 13), float32]) {
  %555 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %556 = cast(%var_7587, dtype="int16") /* ty=Tensor[(672), int16] */;
  %557 = reshape(%556, newshape=[14, 12, 4]) /* ty=Tensor[(14, 12, 4), int16] */;
  %558 = @func_2176(%557) /* ty=(Tensor[(14, 12, 4), bool],) */;
  %559 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %560 = %555.0;
  %561 = %558.0;
  %562 = %559.0;
  (%560, %561, %var_7587, %562)
}

def @func_4823() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) {
  %563 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %564 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
  %565 = @func_4382() /* ty=Tensor[(5, 5, 13), float32] */;
  %566 = %563.0;
  %567 = %564.1;
  (%565, %566, %567)
}

def @func_10012() -> (Tensor[(264), int32],) {
  %568 = @func_7213() /* ty=(Tensor[(16, 10, 6), float64], Tensor[(2, 11, 12), float32], Tensor[(264), int32], Tensor[(624), float32], Tensor[(5, 5, 13), float32]) */;
  %569 = %568.2;
  (%569,)
}

def @func_2060() -> (Tensor[(5, 5, 13), float64],) {
  %570 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  (%570,)
}

def @func_11208() -> (Tensor[(5, 5, 13), float32],) {
  %571 = @func_5039() /* ty=Tensor[(5, 5, 13), float32] */;
  (%571,)
}

def @func_4066(%var_4041: Tensor[(5, 5, 13), float32]) -> (Tensor[(5, 5, 13), uint32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool]) {
  %572 = @func_3902() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %573 = %572.0;
  %574 = cast(%var_4041, dtype="uint32") /* ty=Tensor[(5, 5, 13), uint32] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="uint32") /* ty=Tensor[(5, 5, 13), uint32] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %578 = cast(meta[relay.Constant][42] /* ty=Tensor[(672), int16] */, dtype="int16") /* ty=Tensor[(672), int16] */;
  %579 = reshape(%578, newshape=[14, 12, 4]) /* ty=Tensor[(14, 12, 4), int16] */;
  %580 = @func_2176(%579) /* ty=(Tensor[(14, 12, 4), bool],) */;
  %581 = cast(meta[relay.Constant][43] /* ty=Tensor[(143), bool] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %582 = cast(meta[relay.Constant][44] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %583 = reshape(%581, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), bool] */;
  %584 = reshape(%582, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %585 = @func_1204(%583, %584) /* ty=(Tensor[(15, 11, 13), bool],) */;
  %586 = left_shift(%576, %577) /* ty=Tensor[(5, 5, 13), uint32] */;
  %587 = %580.0;
  %588 = %585.0;
  (%586, %587, meta[relay.Constant][42] /* ty=Tensor[(672), int16] */, %588, meta[relay.Constant][43] /* ty=Tensor[(143), bool] */, meta[relay.Constant][44] /* ty=Tensor[(2145), bool] */)
}

def @func_11617() -> (Tensor[(5, 5, 13), float32],) {
  %589 = @func_9671() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %590 = %589.0;
  (%590,)
}

def @func_5227() -> Tensor[(448), uint16] {
  %591 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
  %591.2
}

def @func_9087() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %592 = @func_8032() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %593 = @func_9031() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64]) */;
  %594 = %592.0;
  %595 = %593.0;
  (%594, %595)
}

def @func_10251() -> Tensor[(5, 5, 13), float64] {
  %596 = @func_7017() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %596.0
}

def @func_11280() -> (Tensor[(5, 5, 13), float32], Tensor[(12, 2), uint16], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) {
  %597 = @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %598 = cast(meta[relay.Constant][45] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %599 = cast(meta[relay.Constant][45] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %600 = cast(meta[relay.Constant][46] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %601 = cast(meta[relay.Constant][47] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %602 = cast(meta[relay.Constant][48] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %603 = reshape(%598, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %604 = reshape(%599, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %605 = reshape(%600, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %606 = reshape(%601, newshape=[]) /* ty=uint8 */;
  %607 = reshape(%602, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %608 = @func_2130(%603, %604, %605, %606, %607) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %609 = %597.0;
  %610 = %608.3;
  (%609, %610, meta[relay.Constant][45] /* ty=Tensor[(448), uint64] */, meta[relay.Constant][46] /* ty=Tensor[(2145), bool] */, meta[relay.Constant][47] /* ty=uint8 */, meta[relay.Constant][48] /* ty=Tensor[(672), uint8] */)
}

def @func_7893(%var_7883: Tensor[(594, 1), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(11, 6, 9), float32], Tensor[(594, 1), float32]) {
  %611 = @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %612 = cast(%var_7883, dtype="float32") /* ty=Tensor[(594, 1), float32] */;
  %613 = reshape(%612, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %614 = @func_6573(%613) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(5, 5, 13), float64]) */;
  %615 = %611.0;
  %616 = %614.0;
  (%615, %616, %var_7883)
}

def @func_9005() -> (Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) {
  %617 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %618 = cast(meta[relay.Constant][49] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %619 = cast(meta[relay.Constant][49] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %620 = reshape(%618, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %621 = reshape(%619, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %622 = @func_900(%620, %621) /* ty=(Tensor[(13, 15, 5), int16],) */;
  %623 = %617.0;
  %624 = %622.0;
  (%623, %624, meta[relay.Constant][49] /* ty=Tensor[(975), int16] */)
}

def @func_6795(%var_6786: Tensor[(14, 5, 10), uint64]) -> Tensor[(14, 5, 10), bool] {
  %625 = cast(%var_6786, dtype="bool") /* ty=Tensor[(14, 5, 10), bool] */;
  %626 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(14, 5, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 5, 10), uint64] */, dtype="bool") /* ty=Tensor[(14, 5, 10), bool] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%627, %628) /* ty=Tensor[(14, 5, 10), bool] */
}

def @func_6227() -> Tensor[(5, 5, 13), float32] {
  %629 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %629.0
}

def @func_4086() -> (Tensor[(448), uint16],) {
  %630 = @func_3963() /* ty=Tensor[(448), uint16] */;
  (%630,)
}

def @func_6352() -> Tensor[(5, 5, 13), float64] {
  %631 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %631.0
}

def @func_6752(%var_6741: Tensor[(5, 5, 13), float32]) -> (Tensor[(5, 5, 13), uint64], Tensor[(5, 5, 13), float32]) {
  %632 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
  %633 = cast(%var_6741, dtype="uint64") /* ty=Tensor[(5, 5, 13), uint64] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="uint64") /* ty=Tensor[(5, 5, 13), uint64] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %637 = @func_4823() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) */;
  %638 = bitwise_or(%635, %636) /* ty=Tensor[(5, 5, 13), uint64] */;
  %639 = %637.0;
  (%638, %639)
}

def @func_6680() -> (Tensor[(5, 5, 13), float64],) {
  %640 = @func_5444() /* ty=Tensor[(5, 5, 13), float64] */;
  (%640,)
}

def @func_9031() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64]) {
  %641 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
  %642 = @func_8129() /* ty=Tensor[(5, 5, 13), float32] */;
  %643 = %641.0;
  (%642, %643)
}

def @func_11590() -> Tensor[(5, 5, 13), float32] {
  %644 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %644.0
}

def @func_8224(%var_8207: Tensor[(672), uint8], %var_8208: Tensor[(8, 56), uint16], %var_8214: Tensor[(8, 56), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(5, 5, 13), float64], Tensor[(8, 56), bool]) {
  %645 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %646 = cast(%var_8207, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %647 = cast(%var_8208, dtype="uint16") /* ty=Tensor[(8, 56), uint16] */;
  %648 = reshape(%646, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %649 = reshape(%647, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %650 = @func_4918(%648, %649) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(2912), int16], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(624), float32], int32, Tensor[(7, 9, 9), int8], Tensor[(567), int8], Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(448), uint16], Tensor[(672, 143), float32]) */;
  %651 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %652 = cast(%var_8214, dtype="bool") /* ty=Tensor[(8, 56), bool] */;
  %653 = shape_of(%var_8208, dtype="int32") /* ty=Tensor[(2), int32] */;
  %654 = cast(%var_8208, dtype="bool") /* ty=Tensor[(8, 56), bool] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %656 = %645.0;
  %657 = %650.0;
  %658 = %651.0;
  %659 = logical_or(%654, %655) /* ty=Tensor[(8, 56), bool] */;
  (%656, %657, %var_8207, %658, %659)
}

def @func_2494() -> (Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) {
  %660 = cast(meta[relay.Constant][53] /* ty=Tensor[(24), uint16] */, dtype="uint16") /* ty=Tensor[(24), uint16] */;
  %661 = cast(meta[relay.Constant][51] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %662 = cast(meta[relay.Constant][52] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %663 = reshape(%660, newshape=[1, 4, 6]) /* ty=Tensor[(1, 4, 6), uint16] */;
  %664 = reshape(%661, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %665 = reshape(%662, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %666 = @func_1659(%663, %664, %665) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */;
  %667 = %666.6;
  %668 = cast(meta[relay.Constant][53] /* ty=Tensor[(24), uint16] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="float32") /* ty=Tensor[(?, 4, 6), float32] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %672 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %673 = mod(%670, %671) /* ty=Tensor[(?, 4, 6), float32] */;
  (%672, meta[relay.Constant][51] /* ty=Tensor[(2145), bool] */, meta[relay.Constant][52] /* ty=Tensor[(448), uint16] */, %673)
}

def @func_3666(%var_3658: Tensor[(3, 11, 12), float32]) -> Tensor[(3, 11, 12), float32] {
  %674 = cast(%var_3658, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
  acos(%674) /* ty=Tensor[(3, 11, 12), float32] */
}

def @func_3265(%var_3244: Tensor[(13, 2, 9), float32]) -> (Tensor[(13, 2, 9), float32], Tensor[(5, 5, 13), float64]) {
  %675 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 2, 9), float32] */, dtype="float32") /* ty=Tensor[(13, 2, 9), float32] */;
  %676 = shape_of(%var_3244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_3244, dtype="float32") /* ty=Tensor[(13, 2, 9), float32] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %679 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %680 = floor_divide(%677, %678) /* ty=Tensor[(13, 2, 9), float32] */;
  %681 = %679.0;
  (%680, %681)
}

def @func_8090() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16]) {
  %682 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %683 = cast(meta[relay.Constant][55] /* ty=Tensor[(672), int16] */, dtype="int16") /* ty=Tensor[(672), int16] */;
  %684 = reshape(%683, newshape=[14, 12, 4]) /* ty=Tensor[(14, 12, 4), int16] */;
  %685 = @func_2176(%684) /* ty=(Tensor[(14, 12, 4), bool],) */;
  %686 = %682.0;
  %687 = @func_6390() /* ty=Tensor[(5, 5, 13), float32] */;
  %688 = %685.0;
  (%686, %687, %688, meta[relay.Constant][55] /* ty=Tensor[(672), int16] */)
}

def @func_9187() -> Tensor[(5, 5, 13), float64] {
  %689 = @func_5182() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %689.0
}

def @func_5990(%var_5972: Tensor[(448), uint16], %var_5975: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(1152), bool], Tensor[(448), uint8]) {
  %690 = @func_5083() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) */;
  %691 = cast(meta[relay.Constant][56] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %692 = cast(meta[relay.Constant][56] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %693 = cast(%var_5972, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %694 = reshape(%691, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), bool] */;
  %695 = reshape(%692, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), bool] */;
  %696 = reshape(%693, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %697 = @func_3386(%694, %695, %696) /* ty=(Tensor[(12, 12, 8), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %698 = cast(%var_5975, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %699 = shape_of(%var_5972, dtype="int32") /* ty=Tensor[(1), int32] */;
  %700 = cast(%var_5972, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %702 = %690.0;
  %703 = %697.1;
  %704 = logical_xor(%700, %701) /* ty=Tensor[(448), uint8] */;
  (%702, %703, meta[relay.Constant][56] /* ty=Tensor[(1152), bool] */, %704)
}

def @func_10329() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %705 = @func_5050() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %706 = %705.0;
  %707 = @func_6390() /* ty=Tensor[(5, 5, 13), float32] */;
  (%706, %707)
}

def @func_10820(%var_10773: Tensor[(975, 1), int16], %var_10782: Tensor[(1792, 1), uint64], %var_10783: uint8, %var_10790: Tensor[(2145), bool]) -> (Tensor[(5, 5, 13), float32], Tensor[(325), float32], Tensor[(10, 2), float32], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(448), uint16], Tensor[(975, 1), float32], Tensor[(1792, 2145), uint8]) {
  %708 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %709 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %710 = cast(%var_10773, dtype="int16") /* ty=Tensor[(975, 1), int16] */;
  %711 = %708.0;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(5, 5, 13), float32] */;
  %713 = reshape(%709, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %714 = reshape(%710, newshape=[975]) /* ty=Tensor[(975), int16] */;
  %715 = reshape(%712, newshape=[325]) /* ty=Tensor[(325), float32] */;
  %716 = @func_8645(%713, %714, %715) /* ty=(Tensor[(448), uint16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(15, 11, 13), bool], Tensor[(325), float32], Tensor[(11, 3, 6), float32]) */;
  %717 = cast(%var_10782, dtype="uint64") /* ty=Tensor[(1792, 1), uint64] */;
  %718 = cast(%var_10782, dtype="uint64") /* ty=Tensor[(1792, 1), uint64] */;
  %719 = cast(%var_10783, dtype="uint8") /* ty=uint8 */;
  %720 = cast(meta[relay.Constant][58] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %721 = reshape(%717, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), uint64] */;
  %722 = reshape(%718, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), uint64] */;
  %723 = reshape(%719, newshape=[]) /* ty=uint8 */;
  %724 = reshape(%720, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint8] */;
  %725 = @func_5788(%721, %722, %723, %724) /* ty=(Tensor[(8, 14, 16), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(168, 4), uint8], Tensor[(672), uint8], Tensor[(448), uint64], Tensor[(2145), float64]) */;
  %726 = cast(%711, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %727 = cast(meta[relay.Constant][59] /* ty=Tensor[(24), uint16] */, dtype="uint16") /* ty=Tensor[(24), uint16] */;
  %728 = cast(%var_10790, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %729 = cast(meta[relay.Constant][60] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %730 = cast(%var_10783, dtype="float32") /* ty=float32 */;
  %731 = reshape(%726, newshape=[5, 5, 13]) /* ty=Tensor[(5, 5, 13), float64] */;
  %732 = reshape(%727, newshape=[24]) /* ty=Tensor[(24), uint16] */;
  %733 = reshape(%728, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %734 = reshape(%729, newshape=[4, 112]) /* ty=Tensor[(4, 112), uint16] */;
  %735 = reshape(%730, newshape=[]) /* ty=float32 */;
  %736 = @func_3953(%731, %732, %733, %734, %735) /* ty=(Tensor[(5, 5, 13), uint16], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(4, 112), uint16], Tensor[(975), int16], float32, Tensor[(1, 20), float32], Tensor[(975), int16]) */;
  %737 = cast(%var_10773, dtype="float32") /* ty=Tensor[(975, 1), float32] */;
  %738 = cast(%var_10782, dtype="uint8") /* ty=Tensor[(1792, 1), uint8] */;
  %739 = cast(%var_10790, dtype="uint8") /* ty=Tensor[(2145), uint8] */;
  %740 = %716.5;
  %741 = %725.1;
  %742 = %736.1;
  %743 = atanh(%737) /* ty=Tensor[(975, 1), float32] */;
  %744 = multiply(%738, %739) /* ty=Tensor[(1792, 2145), uint8] */;
  (%711, %740, meta[relay.Constant][57] /* ty=Tensor[(10, 2), float32] */, %741, %var_10783, meta[relay.Constant][58] /* ty=Tensor[(672), uint8] */, %742, meta[relay.Constant][59] /* ty=Tensor[(24), uint16] */, meta[relay.Constant][60] /* ty=Tensor[(448), uint16] */, %743, %744)
}

def @func_11759() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %745 = @func_5083() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) */;
  %746 = %745.1;
  %747 = @func_11304() /* ty=Tensor[(5, 5, 13), float32] */;
  (%746, %747)
}

def @func_6861() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(2, 312), float32], Tensor[(624), uint16], Tensor[(5, 5, 13), bool], Tensor[(5, 5, 13), float64]) {
  %748 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %749 = @func_4823() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) */;
  %750 = cast(meta[relay.Constant][61] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %751 = reshape(%750, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %752 = @func_2727(%751) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */;
  %753 = cast(meta[relay.Constant][62] /* ty=Tensor[(624), float32] */, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %754 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(624), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %755 = cast(meta[relay.Constant][61] /* ty=Tensor[(624), float32] */, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %757 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %758 = %748.0;
  %759 = %749.0;
  %760 = %752.1;
  %761 = maximum(%755, %756) /* ty=Tensor[(624), uint16] */;
  %762 = @func_6433() /* ty=Tensor[(5, 5, 13), bool] */;
  %763 = %757.0;
  (%758, %759, %760, %761, %762, %763)
}

def @func_11772() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %764 = @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %765 = @func_8881() /* ty=Tensor[(5, 5, 13), float32] */;
  %766 = %764.1;
  (%765, %766)
}

def @func_11063(%var_11056: Tensor[(8, 78), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(8, 78), float32]) {
  %767 = @func_10218() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 160), float32]) */;
  %768 = cast(%var_11056, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
  %769 = reshape(%768, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %770 = @func_2727(%769) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */;
  %771 = @func_9930() /* ty=Tensor[(5, 5, 13), float32] */;
  %772 = %767.1;
  %773 = %770.3;
  (%771, %772, %773, %var_11056)
}

def @func_3712() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %774 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %775 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %776 = %774.0;
  %777 = %775.0;
  (%776, %777)
}

def @func_10759(%var_10741: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(448), uint16], Tensor[(448), uint16], Tensor[(2145), bool]) {
  %778 = @func_9671() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %779 = cast(%var_10741, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %780 = cast(meta[relay.Constant][63] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %781 = reshape(%779, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %782 = reshape(%780, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %783 = @func_3750(%781, %782) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(5, 5, 13), float64]) */;
  %784 = %778.0;
  %785 = %783.2;
  (%784, %785, %var_10741, meta[relay.Constant][63] /* ty=Tensor[(2145), bool] */)
}

def @func_4986(%var_4937: Tensor[(10, 14, 16), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(10, 14, 16), float64]) {
  %786 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %787 = cast(%var_4937, dtype="float32") /* ty=Tensor[(10, 14, 16), float32] */;
  %788 = sigmoid(%787) /* ty=Tensor[(10, 14, 16), float32] */;
  %789 = cast(%788, dtype="float64") /* ty=Tensor[(10, 14, 16), float64] */;
  %790 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
  %791 = %786.0;
  %792 = erf(%789) /* ty=Tensor[(10, 14, 16), float64] */;
  (%790, %791, %792)
}

def @func_180(%var_174: Tensor[(7, 9, 9), int8]) -> Tensor[(7, 9, 9), int8] {
  %793 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 9, 9), int8] */, dtype="int8") /* ty=Tensor[(7, 9, 9), int8] */;
  %794 = shape_of(%var_174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%var_174, dtype="int8") /* ty=Tensor[(7, 9, 9), int8] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%795, %796) /* ty=Tensor[(7, 9, 9), int8] */
}

def @func_10734() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  %797 = @func_8661() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %798 = @func_5444() /* ty=Tensor[(5, 5, 13), float64] */;
  %799 = %797.0;
  (%798, %799)
}

def @func_4296(%var_4266: Tensor[(7, 15, 11), int16], %var_4267: Tensor[(7, 15, 11), int16], %var_4279: Tensor[(20), float32], %var_4284: Tensor[(567), int8]) -> (Tensor[(7, 15, 11), bool], Tensor[(13, 15, 5), int16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) {
  %800 = cast(%var_4267, dtype="bool") /* ty=Tensor[(7, 15, 11), bool] */;
  %801 = shape_of(%var_4266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%var_4266, dtype="bool") /* ty=Tensor[(7, 15, 11), bool] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %804 = cast(-0.461705f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %805 = cast(%var_4279, dtype="float32") /* ty=Tensor[(20), float32] */;
  %806 = cast(meta[relay.Constant][65] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %807 = reshape(%804, newshape=[]) /* ty=float32 */;
  %808 = reshape(%805, newshape=[2, 1, 10]) /* ty=Tensor[(2, 1, 10), float32] */;
  %809 = reshape(%806, newshape=[975]) /* ty=Tensor[(975), int16] */;
  %810 = @func_3321(%807, %808, %809) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) */;
  %811 = cast(%var_4284, dtype="int8") /* ty=Tensor[(567), int8] */;
  %812 = reshape(%811, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int8] */;
  %813 = less_equal(%802, %803) /* ty=Tensor[(7, 15, 11), bool] */;
  %814 = %810.2;
  %815 = @func_180(%812) /* ty=Tensor[(7, 9, 9), int8] */;
  (%813, %814, -0.461705f /* ty=float32 */, %var_4279, meta[relay.Constant][65] /* ty=Tensor[(975), int16] */, %815, %var_4284)
}

def @func_9758(%var_9742: Tensor[(6, 12, 4), uint16], %var_9743: Tensor[(6, 12, 4), uint16]) -> (Tensor[(6, 12, 4), bool], Tensor[(6, 12, 4), int32]) {
  %816 = cast(%var_9743, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %817 = shape_of(%var_9742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%var_9742, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = cast(%var_9743, dtype="int32") /* ty=Tensor[(6, 12, 4), int32] */;
  %821 = shape_of(%var_9742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(%var_9742, dtype="int32") /* ty=Tensor[(6, 12, 4), int32] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %824 = less(%818, %819) /* ty=Tensor[(6, 12, 4), bool] */;
  %825 = maximum(%822, %823) /* ty=Tensor[(6, 12, 4), int32] */;
  (%824, %825)
}

def @func_9335() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %826 = @func_3341() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %827 = @func_7027() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %828 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
  %829 = %826.0;
  %830 = %827.0;
  (%828, %829, %830)
}

def @func_5083() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  %831 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %832 = @func_3902() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %833 = %831.0;
  %834 = %832.0;
  (%833, %834)
}

def @func_8785() -> (Tensor[(12, 11, 5), float64],) {
  %835 = @func_3634() /* ty=(Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %836 = %835.0;
  %837 = cast(%836, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %838 = exp(%837) /* ty=Tensor[(12, 11, 5), float64] */;
  (%838,)
}

def @func_9854() -> Tensor[(11, 6, 14), float64] {
  %839 = cast(meta[relay.Constant][66] /* ty=Tensor[(11, 6, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  acos(%839) /* ty=Tensor[(11, 6, 14), float64] */
}

def @func_10293() -> (Tensor[(5, 5, 13), float64],) {
  %840 = @func_5182() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %841 = %840.0;
  (%841,)
}

def @func_10218() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 160), float32]) {
  %842 = @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */;
  %843 = cast(meta[relay.Constant][67] /* ty=Tensor[(14, 160), float32] */, dtype="float32") /* ty=Tensor[(14, 160), float32] */;
  %844 = reshape(%843, newshape=[280, 8]) /* ty=Tensor[(280, 8), float32] */;
  %845 = @func_9464(%844) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(280, 8), float32]) */;
  %846 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %847 = %842.0;
  %848 = @func_4228() /* ty=Tensor[(5, 5, 13), float32] */;
  %849 = @func_9930() /* ty=Tensor[(5, 5, 13), float32] */;
  %850 = %845.0;
  (%846, %847, %848, %849, %850, meta[relay.Constant][67] /* ty=Tensor[(14, 160), float32] */)
}

def @func_9930() -> Tensor[(5, 5, 13), float32] {
  %851 = @func_9836() /* ty=(Tensor[(6, 8, 12), bool], Tensor[(5, 5, 13), float32], Tensor[(448), uint16]) */;
  %851.1
}

def @main(%var_11942: Tensor[(16, 4, 15), float64]) -> (Tensor[(11, 6, 14), float64], Tensor[(264), int32], Tensor[(6, 12, 4), int32], Tensor[(288), uint16], Tensor[(16, 4, 15), float32]) {
  %852 = @func_10012() /* ty=(Tensor[(264), int32],) */;
  %853 = cast(meta[relay.Constant][68] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %854 = cast(meta[relay.Constant][68] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %855 = reshape(%853, newshape=[6, 12, 4]) /* ty=Tensor[(6, 12, 4), uint16] */;
  %856 = reshape(%854, newshape=[6, 12, 4]) /* ty=Tensor[(6, 12, 4), uint16] */;
  %857 = @func_9758(%855, %856) /* ty=(Tensor[(6, 12, 4), bool], Tensor[(6, 12, 4), int32]) */;
  %858 = cast(%var_11942, dtype="float64") /* ty=Tensor[(16, 4, 15), float64] */;
  %859 = log2(%858) /* ty=Tensor[(16, 4, 15), float64] */;
  %860 = cast(%var_11942, dtype="float32") /* ty=Tensor[(16, 4, 15), float32] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%859, dtype="float32") /* ty=Tensor[(16, 4, 15), float32] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %864 = @func_9854() /* ty=Tensor[(11, 6, 14), float64] */;
  %865 = %852.0;
  %866 = %857.1;
  %867 = divide(%862, %863) /* ty=Tensor[(16, 4, 15), float32] */;
  (%864, %865, %866, meta[relay.Constant][68] /* ty=Tensor[(288), uint16] */, %867)
}

def @func_5330() -> (Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) {
  %868 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %869 = cast(-9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %870 = cast(meta[relay.Constant][69] /* ty=Tensor[(243), int32] */, dtype="int32") /* ty=Tensor[(243), int32] */;
  %871 = reshape(%869, newshape=[]) /* ty=int32 */;
  %872 = reshape(%870, newshape=[3, 9, 9]) /* ty=Tensor[(3, 9, 9), int32] */;
  %873 = cast(meta[relay.Constant][69] /* ty=Tensor[(243), int32] */, dtype="float32") /* ty=Tensor[(243), float32] */;
  %874 = %868.0;
  %875 = @func_4133(%871, %872) /* ty=Tensor[(3, 9, 9), bool] */;
  %876 = atanh(%873) /* ty=Tensor[(243), float32] */;
  (%874, %875, -9 /* ty=int32 */, %876)
}

def @func_3121() -> (Tensor[(12, 11, 5), float64],) {
  %877 = cast(meta[relay.Constant][70] /* ty=Tensor[(12, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %878 = sin(%877) /* ty=Tensor[(12, 11, 5), float64] */;
  (%878,)
}

def @func_9388() -> Tensor[(448), uint64] {
  %879 = @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */;
  %879.7
}

def @func_6905(%var_6883: Tensor[(2, 11, 12), int32], %var_6884: Tensor[(2, 11, 12), int32], %var_6895: Tensor[(624), float32]) -> (Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(2, 11, 12), float32]) {
  %880 = cast(%var_6895, dtype="float32") /* ty=Tensor[(624), float32] */;
  %881 = cast(%var_6895, dtype="float32") /* ty=Tensor[(624), float32] */;
  %882 = reshape(%880, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %883 = reshape(%881, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %884 = @func_2040(%882, %883) /* ty=(Tensor[(3, 16, 13), float32],) */;
  %885 = cast(%var_6884, dtype="int32") /* ty=Tensor[(2, 11, 12), int32] */;
  %886 = shape_of(%var_6883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%var_6883, dtype="int32") /* ty=Tensor[(2, 11, 12), int32] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %889 = bitwise_and(%887, %888) /* ty=Tensor[(2, 11, 12), int32] */;
  %890 = cast(%889, dtype="float32") /* ty=Tensor[(2, 11, 12), float32] */;
  %891 = shape_of(%var_6884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %892 = cast(%var_6884, dtype="float32") /* ty=Tensor[(2, 11, 12), float32] */;
  %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %894 = %884.0;
  %895 = power(%892, %893) /* ty=Tensor[(2, 11, 12), float32] */;
  (%894, %var_6895, %895)
}

def @func_9231() -> Tensor[(5, 5, 13), float32] {
  %896 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %896.0
}

def @func_7213() -> (Tensor[(16, 10, 6), float64], Tensor[(2, 11, 12), float32], Tensor[(264), int32], Tensor[(624), float32], Tensor[(5, 5, 13), float32]) {
  %897 = cast(meta[relay.Constant][71] /* ty=Tensor[(16, 10, 6), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %898 = cos(%897) /* ty=Tensor[(16, 10, 6), float64] */;
  %899 = cast(%898, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %900 = cast(meta[relay.Constant][72] /* ty=Tensor[(264), int32] */, dtype="int32") /* ty=Tensor[(264), int32] */;
  %901 = cast(meta[relay.Constant][72] /* ty=Tensor[(264), int32] */, dtype="int32") /* ty=Tensor[(264), int32] */;
  %902 = cast(meta[relay.Constant][73] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %903 = reshape(%900, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), int32] */;
  %904 = reshape(%901, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), int32] */;
  %905 = reshape(%902, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %906 = @func_6905(%903, %904, %905) /* ty=(Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(2, 11, 12), float32]) */;
  %907 = acos(%899) /* ty=Tensor[(16, 10, 6), float64] */;
  %908 = %906.2;
  %909 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
  (%907, %908, meta[relay.Constant][72] /* ty=Tensor[(264), int32] */, meta[relay.Constant][73] /* ty=Tensor[(624), float32] */, %909)
}

def @func_6412() -> (Tensor[(5, 5, 13), float32],) {
  %910 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  (%910,)
}

def @func_5689(%var_5656: Tensor[(448), uint16]) -> (Tensor[(448), float64], Tensor[(2145), bool]) {
  %911 = @func_4086() /* ty=(Tensor[(448), uint16],) */;
  %912 = %911.0;
  %913 = cast(%var_5656, dtype="float64") /* ty=Tensor[(448), float64] */;
  %914 = shape_of(%912, dtype="int32") /* ty=Tensor[(1), int32] */;
  %915 = cast(%912, dtype="float64") /* ty=Tensor[(448), float64] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?), float64] */;
  %917 = @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */;
  %918 = floor_divide(%915, %916) /* ty=Tensor[(448), float64] */;
  %919 = %917.8;
  (%918, %919)
}

def @func_7027() -> (Tensor[(5, 5, 13), float32],) {
  %920 = @func_4228() /* ty=Tensor[(5, 5, 13), float32] */;
  (%920,)
}

def @func_3634() -> (Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %921 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %922 = cast(meta[relay.Constant][74] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %923 = reshape(%922, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %924 = %921.0;
  %925 = @func_1320(%923) /* ty=Tensor[(8, 14, 4), uint16] */;
  (%924, %925, meta[relay.Constant][74] /* ty=Tensor[(448), uint16] */)
}

def @func_8351() -> (Tensor[(5, 5, 13), float64],) {
  %926 = @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %927 = %926.0;
  (%927,)
}

def @func_10914() -> (Tensor[(5, 5, 13), float64],) {
  %928 = @func_9005() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) */;
  %929 = %928.0;
  (%929,)
}

def @func_2865(%var_2825: float32, %var_2831: Tensor[(11, 3, 6), float32]) -> (Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) {
  %930 = cast(%var_2825, dtype="float32") /* ty=float32 */;
  %931 = cast(meta[relay.Constant][75] /* ty=Tensor[(11, 1, 6), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 6), float32] */;
  %932 = subtract(%930, %931) /* ty=Tensor[(11, 1, 6), float32] */;
  %933 = cast(%932, dtype="float32") /* ty=Tensor[(11, 1, 6), float32] */;
  %934 = cast(%var_2831, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
  %935 = cast(%var_2825, dtype="uint8") /* ty=uint8 */;
  %936 = cast(meta[relay.Constant][76] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %937 = reshape(%935, newshape=[]) /* ty=uint8 */;
  %938 = reshape(%936, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint8] */;
  %939 = cast(%932, dtype="bool") /* ty=Tensor[(11, 1, 6), bool] */;
  %940 = cast(%var_2831, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %941 = logical_or(%939, %940) /* ty=Tensor[(11, 3, 6), bool] */;
  %942 = cast(%941, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %943 = shape_of(%var_2831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%var_2831, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %946 = power(%933, %934) /* ty=Tensor[(11, 3, 6), float32] */;
  %947 = @func_765(%937, %938) /* ty=Tensor[(7, 16, 6), uint8] */;
  %948 = equal(%944, %945) /* ty=Tensor[(11, 3, 6), bool] */;
  (%946, %947, meta[relay.Constant][76] /* ty=Tensor[(672), uint8] */, %948)
}

def @func_3321(%var_3270: float32, %var_3271: Tensor[(2, 1, 10), float32], %var_3300: Tensor[(975), int16]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) {
  %949 = @func_2776() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %950 = cast(%var_3270, dtype="float32") /* ty=float32 */;
  %951 = cast(%var_3271, dtype="float32") /* ty=Tensor[(2, 1, 10), float32] */;
  %952 = minimum(%950, %951) /* ty=Tensor[(2, 1, 10), float32] */;
  %953 = cast(%952, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
  %954 = shape_of(%var_3271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%var_3271, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %957 = cast(%var_3300, dtype="int16") /* ty=Tensor[(975), int16] */;
  %958 = cast(%var_3300, dtype="int16") /* ty=Tensor[(975), int16] */;
  %959 = reshape(%957, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %960 = reshape(%958, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %961 = @func_900(%959, %960) /* ty=(Tensor[(13, 15, 5), int16],) */;
  %962 = cast(%var_3270, dtype="float32") /* ty=float32 */;
  %963 = cast(meta[relay.Constant][77] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %964 = reshape(%962, newshape=[]) /* ty=float32 */;
  %965 = reshape(%963, newshape=[11, 3, 6]) /* ty=Tensor[(11, 3, 6), float32] */;
  %966 = @func_2865(%964, %965) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */;
  %967 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %968 = %967.0;
  %969 = cast(%968, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %970 = cast(%var_3270, dtype="float32") /* ty=float32 */;
  %971 = reshape(%969, newshape=[5, 5, 13]) /* ty=Tensor[(5, 5, 13), float64] */;
  %972 = reshape(%970, newshape=[]) /* ty=float32 */;
  %973 = @func_2956(%971, %972) /* ty=(Tensor[(5, 5, 13), float64], float32, Tensor[(198), float32], Tensor[(7, 16, 6), float64]) */;
  %974 = %949.0;
  %975 = greater(%955, %956) /* ty=Tensor[(2, ?, 10), bool] */;
  %976 = %961.0;
  %977 = %966.0;
  %978 = %973.2;
  (%974, %975, %976, %var_3300, %977, meta[relay.Constant][77] /* ty=Tensor[(198), float32] */, %968, %978)
}

def @func_11938(%var_11888: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(448), uint16]) {
  %979 = cast(%var_11888, dtype="float32") /* ty=Tensor[(14, 3, 7), float32] */;
  %980 = cast(meta[relay.Constant][78] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %981 = reshape(%980, newshape=[594, 1]) /* ty=Tensor[(594, 1), float32] */;
  %982 = @func_7893(%981) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(11, 6, 9), float32], Tensor[(594, 1), float32]) */;
  %983 = cast(meta[relay.Constant][79] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %984 = cast(meta[relay.Constant][80] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %985 = cast(meta[relay.Constant][80] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %986 = reshape(%983, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %987 = reshape(%984, newshape=[8, 56]) /* ty=Tensor[(8, 56), uint16] */;
  %988 = reshape(%985, newshape=[8, 56]) /* ty=Tensor[(8, 56), uint16] */;
  %989 = @func_8224(%986, %987, %988) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(5, 5, 13), float64], Tensor[(8, 56), bool]) */;
  %990 = sqrt(%979) /* ty=Tensor[(14, 3, 7), float32] */;
  %991 = %982.1;
  %992 = %989.0;
  (%990, %991, meta[relay.Constant][78] /* ty=Tensor[(594), float32] */, %992, meta[relay.Constant][79] /* ty=Tensor[(672), uint8] */, meta[relay.Constant][80] /* ty=Tensor[(448), uint16] */)
}

def @func_3656() -> Tensor[(12, 11, 5), float64] {
  %993 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %993.0
}

def @func_8645(%var_8599: Tensor[(20), float32], %var_8600: Tensor[(975), int16], %var_8630: Tensor[(325), float32]) -> (Tensor[(448), uint16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(15, 11, 13), bool], Tensor[(325), float32], Tensor[(11, 3, 6), float32]) {
  %994 = cast(%var_8630, dtype="float32") /* ty=Tensor[(325), float32] */;
  %995 = reshape(%994, newshape=[5, 5, 13]) /* ty=Tensor[(5, 5, 13), float32] */;
  %996 = @func_4066(%995) /* ty=(Tensor[(5, 5, 13), uint32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool]) */;
  %997 = cast(4.9975f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %998 = cast(%var_8599, dtype="float32") /* ty=Tensor[(20), float32] */;
  %999 = cast(%var_8600, dtype="int16") /* ty=Tensor[(975), int16] */;
  %1000 = reshape(%997, newshape=[]) /* ty=float32 */;
  %1001 = reshape(%998, newshape=[2, 1, 10]) /* ty=Tensor[(2, 1, 10), float32] */;
  %1002 = reshape(%999, newshape=[975]) /* ty=Tensor[(975), int16] */;
  %1003 = @func_3321(%1000, %1001, %1002) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) */;
  %1004 = %1003.4;
  %1005 = cast(%1004, dtype="float64") /* ty=Tensor[(11, 3, 6), float64] */;
  %1006 = log10(%1005) /* ty=Tensor[(11, 3, 6), float64] */;
  %1007 = cast(%1006, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
  %1008 = @func_5227() /* ty=Tensor[(448), uint16] */;
  %1009 = %996.3;
  %1010 = cosh(%1007) /* ty=Tensor[(11, 3, 6), float32] */;
  (%1008, 4.9975f /* ty=float32 */, %var_8599, %var_8600, %1009, %var_8630, %1010)
}

def @func_9503() -> (Tensor[(?, 4, 6), float32],) {
  %1011 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
  %1012 = %1011.3;
  (%1012,)
}

def @func_2776() -> (Tensor[(5, 5, 13), float64],) {
  %1013 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1014 = %1013.0;
  (%1014,)
}

def @func_9861() -> Tensor[(5, 5, 13), float32] {
  %1015 = @func_3712() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1015.0
}

def @func_10968() -> (Tensor[(5, 5, 13), float64],) {
  %1016 = @func_10914() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1017 = %1016.0;
  (%1017,)
}

def @func_5914(%var_5845: Tensor[(2145), bool], %var_5898: Tensor[(1152), bool]) -> (Tensor[(12, 11, 5), float64], Tensor[(8, 7, 8), float32], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(448), float64], Tensor[(5, 5, 13), float32], Tensor[(448), uint16], Tensor[(2, 336), float64], Tensor[(8, 14, 4), uint16], Tensor[(1152), bool]) {
  %1018 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %1019 = cast(meta[relay.Constant][81] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %1020 = cast(meta[relay.Constant][81] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %1021 = cast(%var_5845, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1022 = cast(meta[relay.Constant][82] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1023 = cast(meta[relay.Constant][83] /* ty=Tensor[(2, 336), uint8] */, dtype="uint8") /* ty=Tensor[(2, 336), uint8] */;
  %1024 = reshape(%1019, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %1025 = reshape(%1020, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %1026 = reshape(%1021, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %1027 = reshape(%1022, newshape=[]) /* ty=uint8 */;
  %1028 = reshape(%1023, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %1029 = @func_2130(%1024, %1025, %1026, %1027, %1028) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %1030 = %1029.8;
  %1031 = cast(%1030, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
  %1032 = reshape(%1031, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1033 = @func_5689(%1032) /* ty=(Tensor[(448), float64], Tensor[(2145), bool]) */;
  %1034 = @func_3712() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1035 = cast(meta[relay.Constant][83] /* ty=Tensor[(2, 336), uint8] */, dtype="float64") /* ty=Tensor[(2, 336), float64] */;
  %1036 = cast(%var_5898, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %1037 = cast(%var_5898, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %1038 = @func_5227() /* ty=Tensor[(448), uint16] */;
  %1039 = cast(%1038, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1040 = reshape(%1036, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), bool] */;
  %1041 = reshape(%1037, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), bool] */;
  %1042 = reshape(%1039, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1043 = @func_3386(%1040, %1041, %1042) /* ty=(Tensor[(12, 12, 8), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %1044 = %1018.0;
  %1045 = %1033.0;
  %1046 = %1034.0;
  %1047 = log2(%1035) /* ty=Tensor[(2, 336), float64] */;
  %1048 = %1043.1;
  (%1044, %1030, meta[relay.Constant][81] /* ty=Tensor[(448), uint64] */, %var_5845, meta[relay.Constant][82] /* ty=uint8 */, %1045, %1046, %1038, %1047, %1048, %var_5898)
}

def @func_8258(%var_8230: Tensor[(10, 4, 2), float64], %var_8249: Tensor[(3, 198), float32]) -> (Tensor[(594), float32], Tensor[(3, 198), float32], Tensor[(10, 4, 2), uint16]) {
  %1049 = cast(%var_8249, dtype="float32") /* ty=Tensor[(3, 198), float32] */;
  %1050 = reshape(%1049, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %1051 = @func_6954(%1050) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32]) */;
  %1052 = cast(%var_8230, dtype="float32") /* ty=Tensor[(10, 4, 2), float32] */;
  %1053 = log(%1052) /* ty=Tensor[(10, 4, 2), float32] */;
  %1054 = cast(%var_8230, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %1055 = exp(%1054) /* ty=Tensor[(10, 4, 2), float64] */;
  %1056 = cast(%1055, dtype="uint16") /* ty=Tensor[(10, 4, 2), uint16] */;
  %1057 = shape_of(%1053, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1058 = cast(%1053, dtype="uint16") /* ty=Tensor[(10, 4, 2), uint16] */;
  %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1060 = %1051.2;
  %1061 = add(%1058, %1059) /* ty=Tensor[(10, 4, 2), uint16] */;
  (%1060, %var_8249, %1061)
}

def @func_10862(%var_10842: Tensor[(5, 2, 2), bool]) -> (Tensor[(5, 2, 2), bool],) {
  %1062 = cast(meta[relay.Constant][84] /* ty=Tensor[(5, 2, 2), bool] */, dtype="bool") /* ty=Tensor[(5, 2, 2), bool] */;
  %1063 = shape_of(%var_10842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(%var_10842, dtype="bool") /* ty=Tensor[(5, 2, 2), bool] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1066 = logical_and(%1064, %1065) /* ty=Tensor[(5, 2, 2), bool] */;
  (%1066,)
}

def @func_10672(%var_10642: Tensor[(672), int64]) -> (Tensor[(5, 5, 13), float64], Tensor[(6, 14, 8), bool], Tensor[(672), int64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2240), float32]) {
  %1067 = cast(%var_10642, dtype="int64") /* ty=Tensor[(672), int64] */;
  %1068 = reshape(%1067, newshape=[6, 14, 8]) /* ty=Tensor[(6, 14, 8), int64] */;
  %1069 = @func_6542(%1068) /* ty=(Tensor[(6, 14, 8), bool],) */;
  %1070 = cast(meta[relay.Constant][85] /* ty=Tensor[(2240), float32] */, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %1071 = reshape(%1070, newshape=[280, 8]) /* ty=Tensor[(280, 8), float32] */;
  %1072 = @func_9464(%1071) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(280, 8), float32]) */;
  %1073 = @func_6352() /* ty=Tensor[(5, 5, 13), float64] */;
  %1074 = %1069.0;
  %1075 = @func_8558() /* ty=Tensor[(5, 5, 13), float64] */;
  %1076 = %1072.0;
  (%1073, %1074, %var_10642, %1075, %1076, meta[relay.Constant][85] /* ty=Tensor[(2240), float32] */)
}

def @func_10078() -> (Tensor[(448), uint16], Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64]) {
  %1077 = cast(meta[relay.Constant][86] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1078 = reshape(%1077, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1079 = @func_6295(%1078) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(3, 16, 13), float32]) */;
  %1080 = @func_9005() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) */;
  %1081 = @func_7017() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1082 = @func_5227() /* ty=Tensor[(448), uint16] */;
  %1083 = %1079.0;
  %1084 = %1080.0;
  %1085 = %1081.0;
  (%1082, %1083, meta[relay.Constant][86] /* ty=Tensor[(624), float32] */, %1084, %1085)
}

def @func_10556() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  %1086 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1087 = @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1088 = %1086.0;
  %1089 = @func_10251() /* ty=Tensor[(5, 5, 13), float64] */;
  %1090 = %1087.1;
  (%1088, %1089, %1090)
}

def @func_5050() -> (Tensor[(5, 5, 13), float32],) {
  %1091 = @func_4823() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) */;
  %1092 = %1091.0;
  (%1092,)
}

def @func_900(%var_892: Tensor[(13, 15, 5), int16], %var_893: Tensor[(13, 15, 5), int16]) -> (Tensor[(13, 15, 5), int16],) {
  %1093 = cast(%var_893, dtype="int16") /* ty=Tensor[(13, 15, 5), int16] */;
  %1094 = shape_of(%var_892, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1095 = cast(%var_892, dtype="int16") /* ty=Tensor[(13, 15, 5), int16] */;
  %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1097 = bitwise_or(%1095, %1096) /* ty=Tensor[(13, 15, 5), int16] */;
  (%1097,)
}

def @func_11419() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %1098 = @func_10218() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 160), float32]) */;
  %1099 = @func_8090() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16]) */;
  %1100 = %1098.2;
  %1101 = %1099.1;
  (%1100, %1101)
}

def @func_7750(%var_7721: Tensor[(672, 1), uint8]) -> (Tensor[(5, 5, 13), float64], Tensor[(12, 11, 5), float64], Tensor[(1120, 2), float32], Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(1792), uint64], uint8, Tensor[(672, 1), uint8], Tensor[(12, 11, 5), int8], Tensor[(624), float32]) {
  %1102 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1103 = cast(meta[relay.Constant][87] /* ty=Tensor[(1120, 2), float32] */, dtype="float32") /* ty=Tensor[(1120, 2), float32] */;
  %1104 = reshape(%1103, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), float32] */;
  %1105 = @func_4986(%1104) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(10, 14, 16), float64]) */;
  %1106 = @func_7298() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1107 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1108 = cast(meta[relay.Constant][88] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %1109 = cast(meta[relay.Constant][88] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %1110 = cast(meta[relay.Constant][89] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1111 = cast(%var_7721, dtype="uint8") /* ty=Tensor[(672, 1), uint8] */;
  %1112 = reshape(%1108, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), uint64] */;
  %1113 = reshape(%1109, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), uint64] */;
  %1114 = reshape(%1110, newshape=[]) /* ty=uint8 */;
  %1115 = reshape(%1111, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint8] */;
  %1116 = @func_5788(%1112, %1113, %1114, %1115) /* ty=(Tensor[(8, 14, 16), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(168, 4), uint8], Tensor[(672), uint8], Tensor[(448), uint64], Tensor[(2145), float64]) */;
  %1117 = cast(meta[relay.Constant][90] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1118 = %1105.1;
  %1119 = cast(%1118, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %1120 = reshape(%1117, newshape=[624, 1]) /* ty=Tensor[(624, 1), float32] */;
  %1121 = reshape(%1119, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), float64] */;
  %1122 = @func_3558(%1120, %1121) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(624, 1), float32], Tensor[(12, 11, 5), int8], Tensor[(5, 5, 13), float64]) */;
  %1123 = %1102.0;
  %1124 = @func_3656() /* ty=Tensor[(12, 11, 5), float64] */;
  %1125 = %1106.0;
  %1126 = %1107.0;
  %1127 = %1116.1;
  %1128 = %1122.3;
  (%1123, %1118, meta[relay.Constant][87] /* ty=Tensor[(1120, 2), float32] */, %1124, %1125, %1126, %1127, meta[relay.Constant][88] /* ty=Tensor[(1792), uint64] */, meta[relay.Constant][89] /* ty=uint8 */, %var_7721, %1128, meta[relay.Constant][90] /* ty=Tensor[(624), float32] */)
}

def @func_1204(%var_1193: Tensor[(1, 11, 13), bool], %var_1194: Tensor[(15, 11, 13), bool]) -> (Tensor[(15, 11, 13), bool],) {
  %1129 = cast(%var_1193, dtype="bool") /* ty=Tensor[(1, 11, 13), bool] */;
  %1130 = cast(%var_1194, dtype="bool") /* ty=Tensor[(15, 11, 13), bool] */;
  %1131 = logical_or(%1129, %1130) /* ty=Tensor[(15, 11, 13), bool] */;
  (%1131,)
}

def @func_3963() -> Tensor[(448), uint16] {
  %1132 = @func_3634() /* ty=(Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %1132.2
}

def @func_3902() -> (Tensor[(5, 5, 13), float32],) {
  %1133 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %1134 = %1133.0;
  (%1134,)
}

def @func_7525(%var_7516: Tensor[(700), uint64]) -> (Tensor[(5, 5, 13), float64], Tensor[(14, 5, 10), bool], Tensor[(700), uint64]) {
  %1135 = @func_7298() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1136 = cast(%var_7516, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %1137 = reshape(%1136, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
  %1138 = %1135.0;
  %1139 = @func_6795(%1137) /* ty=Tensor[(14, 5, 10), bool] */;
  (%1138, %1139, %var_7516)
}

def @func_8184() -> (Tensor[(5, 5, 13), float32],) {
  %1140 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  (%1140,)
}

def @func_4133(%var_4108: int32, %var_4109: Tensor[(3, 9, 9), int32]) -> Tensor[(3, 9, 9), bool] {
  %1141 = cast(%var_4108, dtype="bool") /* ty=bool */;
  %1142 = cast(%var_4109, dtype="bool") /* ty=Tensor[(3, 9, 9), bool] */;
  less(%1141, %1142) /* ty=Tensor[(3, 9, 9), bool] */
}

def @func_7982(%var_7957: Tensor[(12, 11, 5), float64]) -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64], uint8) {
  %1143 = cast(%var_7957, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %1144 = cast(meta[relay.Constant][91] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1145 = reshape(%1144, newshape=[]) /* ty=uint8 */;
  %1146 = @func_6611(%1145) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], uint8, Tensor[(168, 4), uint8]) */;
  %1147 = rsqrt(%1143) /* ty=Tensor[(12, 11, 5), float64] */;
  %1148 = %1146.0;
  (%1147, %1148, meta[relay.Constant][91] /* ty=uint8 */)
}

def @func_6542(%var_6534: Tensor[(6, 14, 8), int64]) -> (Tensor[(6, 14, 8), bool],) {
  %1149 = cast(%var_6534, dtype="bool") /* ty=Tensor[(6, 14, 8), bool] */;
  %1150 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(6, 14, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1151 = cast(meta[relay.Constant][92] /* ty=Tensor[(6, 14, 8), int64] */, dtype="bool") /* ty=Tensor[(6, 14, 8), bool] */;
  %1152 = dyn.reshape(%1149, %1150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1153 = less(%1151, %1152) /* ty=Tensor[(6, 14, 8), bool] */;
  (%1153,)
}

def @func_8532() -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64]) {
  %1154 = @func_2776() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1155 = @func_3656() /* ty=Tensor[(12, 11, 5), float64] */;
  %1156 = %1154.0;
  (%1155, %1156)
}

def @func_11182() -> (Tensor[(5, 5, 13), float32],) {
  %1157 = @func_9335() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1158 = %1157.2;
  (%1158,)
}

def @func_3774() -> Tensor[(5, 5, 13), float64] {
  %1159 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1159.0
}

def @func_5515(%var_5505: Tensor[(672), uint8]) -> (Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(8, 14, 4), uint16], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(12, 11, 5), float64], Tensor[(624), float32], Tensor[(672), uint8], Tensor[(243), float32]) {
  %1160 = cast(meta[relay.Constant][93] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1161 = cast(meta[relay.Constant][93] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1162 = reshape(%1160, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %1163 = reshape(%1161, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %1164 = @func_2040(%1162, %1163) /* ty=(Tensor[(3, 16, 13), float32],) */;
  %1165 = cast(meta[relay.Constant][94] /* ty=Tensor[(24), uint16] */, dtype="uint16") /* ty=Tensor[(24), uint16] */;
  %1166 = cast(meta[relay.Constant][95] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1167 = cast(meta[relay.Constant][96] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1168 = reshape(%1165, newshape=[1, 4, 6]) /* ty=Tensor[(1, 4, 6), uint16] */;
  %1169 = reshape(%1166, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %1170 = reshape(%1167, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1171 = @func_1659(%1168, %1169, %1170) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */;
  %1172 = @func_3656() /* ty=Tensor[(12, 11, 5), float64] */;
  %1173 = cast(%1172, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %1174 = log(%1173) /* ty=Tensor[(12, 11, 5), float64] */;
  %1175 = cast(%1174, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %1176 = cast(%var_5505, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1177 = %1164.0;
  %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %1179 = cast(meta[relay.Constant][93] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1180 = reshape(%1176, newshape=[672, 1]) /* ty=Tensor[(672, 1), uint8] */;
  %1181 = reshape(%1178, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1182 = reshape(%1179, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %1183 = @func_4585(%1180, %1181, %1182) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(672, 1), uint8], Tensor[(624), float32], Tensor[(660), float64], Tensor[(2, 312), uint32], Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32]) */;
  %1184 = @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */;
  %1185 = %1171.3;
  %1186 = cos(%1175) /* ty=Tensor[(12, 11, 5), float64] */;
  %1187 = %1183.3;
  %1188 = %1184.3;
  (%1177, meta[relay.Constant][93] /* ty=Tensor[(624), float32] */, %1185, meta[relay.Constant][94] /* ty=Tensor[(24), uint16] */, meta[relay.Constant][95] /* ty=Tensor[(2145), bool] */, meta[relay.Constant][96] /* ty=Tensor[(448), uint16] */, %1186, %1187, %var_5505, %1188)
}

def @func_11705() -> (Tensor[(448), uint16],) {
  %1189 = @func_5227() /* ty=Tensor[(448), uint16] */;
  (%1189,)
}

def @func_9120(%var_9108: Tensor[(567), int8]) -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float32], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) {
  %1190 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %1191 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %1192 = cast(%var_9108, dtype="int8") /* ty=Tensor[(567), int8] */;
  %1193 = reshape(%1192, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int8] */;
  %1194 = %1190.0;
  %1195 = %1191.0;
  %1196 = @func_180(%1193) /* ty=Tensor[(7, 9, 9), int8] */;
  (%1194, %1195, %1196, %var_9108)
}

def @func_9970(%var_9933: Tensor[(4, 7, 4), int16], %var_9948: Tensor[(567), int8]) -> (Tensor[(4, 7, 4), int16], Tensor[(143), bool], Tensor[(7, 9, 9), int8], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(234), float32], Tensor[(567), float64], Tensor[(4, 7, 4), float64]) {
  %1197 = cast(meta[relay.Constant][97] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1198 = cast(%var_9933, dtype="int16") /* ty=Tensor[(4, 7, 4), int16] */;
  %1199 = @func_8314() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(143), bool]) */;
  %1200 = cast(%var_9948, dtype="int8") /* ty=Tensor[(567), int8] */;
  %1201 = reshape(%1200, newshape=[567]) /* ty=Tensor[(567), int8] */;
  %1202 = @func_9120(%1201) /* ty=(Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float32], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) */;
  %1203 = @func_7017() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1204 = cast(meta[relay.Constant][98] /* ty=Tensor[(234), float32] */, dtype="float32") /* ty=Tensor[(234), float32] */;
  %1205 = reshape(%1204, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float32] */;
  %1206 = @func_3265(%1205) /* ty=(Tensor[(13, 2, 9), float32], Tensor[(5, 5, 13), float64]) */;
  %1207 = cast(%var_9948, dtype="float64") /* ty=Tensor[(567), float64] */;
  %1208 = cast(%var_9933, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %1209 = right_shift(%1197, %1198) /* ty=Tensor[(4, 7, 4), int16] */;
  %1210 = %1199.1;
  %1211 = %1202.2;
  %1212 = %1203.0;
  %1213 = %1206.1;
  %1214 = cosh(%1207) /* ty=Tensor[(567), float64] */;
  %1215 = acosh(%1208) /* ty=Tensor[(4, 7, 4), float64] */;
  (%1209, %1210, %1211, %1212, %1213, meta[relay.Constant][98] /* ty=Tensor[(234), float32] */, %1214, %1215)
}

def @func_11304() -> Tensor[(5, 5, 13), float32] {
  %1216 = @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1216.1
}

def @func_8032() -> (Tensor[(5, 5, 13), float32],) {
  %1217 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %1218 = %1217.0;
  (%1218,)
}

def @func_1804(%var_1780: uint8, %var_1788: Tensor[(448), uint16], %var_1797: Tensor[(13, 11), bool]) -> (Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(13, 11), bool], Tensor[(2145), bool]) {
  %1219 = cast(%var_1780, dtype="uint8") /* ty=uint8 */;
  %1220 = cast(meta[relay.Constant][99] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1221 = reshape(%1219, newshape=[]) /* ty=uint8 */;
  %1222 = reshape(%1220, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint8] */;
  %1223 = cast(%var_1788, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1224 = reshape(%1223, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %1225 = cast(%var_1797, dtype="bool") /* ty=Tensor[(13, 11), bool] */;
  %1226 = cast(meta[relay.Constant][100] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1227 = reshape(%1225, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), bool] */;
  %1228 = reshape(%1226, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %1229 = @func_1204(%1227, %1228) /* ty=(Tensor[(15, 11, 13), bool],) */;
  %1230 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %1231 = @func_765(%1221, %1222) /* ty=Tensor[(7, 16, 6), uint8] */;
  %1232 = @func_1320(%1224) /* ty=Tensor[(8, 14, 4), uint16] */;
  %1233 = %1229.0;
  (%1230, %1231, %var_1780, meta[relay.Constant][99] /* ty=Tensor[(672), uint8] */, %1232, %var_1788, %1233, %var_1797, meta[relay.Constant][100] /* ty=Tensor[(2145), bool] */)
}

def @func_6390() -> Tensor[(5, 5, 13), float32] {
  @func_4382() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_2727(%var_2686: Tensor[(2, 312), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) {
  %1234 = cast(%var_2686, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %1235 = cast(%var_2686, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %1236 = reshape(%1234, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %1237 = reshape(%1235, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %1238 = @func_2040(%1236, %1237) /* ty=(Tensor[(3, 16, 13), float32],) */;
  %1239 = %1238.0;
  %1240 = cast(%1239, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
  %1241 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %1242 = rsqrt(%1240) /* ty=Tensor[(3, 16, 13), float64] */;
  %1243 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  (%1241, %var_2686, %1242, %1243)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5051() -> (Tensor[(5, 5, 13), float32],) {
  %2 = fn () -> (Tensor[(5, 5, 13), float32],) {
    %0 = @func_4823() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) */;
    %1 = %0.0;
    (%1,)
  };
  %2() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_4988(%var_4987: Tensor[(10, 14, 16), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(10, 14, 16), float64]) {
  %10 = fn (%var_4937: Tensor[(10, 14, 16), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(10, 14, 16), float64]) {
    %3 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
    %4 = cast(%var_4937, dtype="float32") /* ty=Tensor[(10, 14, 16), float32] */;
    %5 = sigmoid(%4) /* ty=Tensor[(10, 14, 16), float32] */;
    %6 = cast(%5, dtype="float64") /* ty=Tensor[(10, 14, 16), float64] */;
    %7 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
    %8 = %3.0;
    %9 = erf(%6) /* ty=Tensor[(10, 14, 16), float64] */;
    (%7, %8, %9)
  };
  %10(%var_4987) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(10, 14, 16), float64]) */
}

def @func_10558() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  @func_10556() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) */
}

def @func_2905() -> Tensor[(5, 5, 13), float32] {
  %11 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %12 = %11.0;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(5, 5, 13), float32] */;
  log2(%13) /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_8032() -> (Tensor[(5, 5, 13), float32],) {
  %14 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %15 = %14.0;
  (%15,)
}

def @func_10455(%var_10454: Tensor[(198), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], float32, Tensor[(198), float32], Tensor[(4, 1), uint64], Tensor[(243), float32], Tensor[(4), uint64], Tensor[(30, 2), uint64], Tensor[(7, 16, 6), int16]) {
  %41 = fn (%var_10441: Tensor[(198), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], float32, Tensor[(198), float32], Tensor[(4, 1), uint64], Tensor[(243), float32], Tensor[(4), uint64], Tensor[(30, 2), uint64], Tensor[(7, 16, 6), int16]) {
    %16 = @func_8661() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %17 = @func_6412() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %18 = @func_10329() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(243), float32] */, dtype="float32") /* ty=Tensor[(243), float32] */;
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
    %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(30, 2), uint64] */, dtype="uint64") /* ty=Tensor[(30, 2), uint64] */;
    %22 = reshape(%19, newshape=[243]) /* ty=Tensor[(243), float32] */;
    %23 = reshape(%20, newshape=[4, 1]) /* ty=Tensor[(4, 1), uint64] */;
    %24 = reshape(%21, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), uint64] */;
    %25 = @func_6207(%22, %23, %24) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(243), bool], Tensor[(4, 1), uint64], Tensor[(2, 2, 15), bool]) */;
    %26 = cast(-4.84702f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %27 = cast(%var_10441, dtype="float32") /* ty=Tensor[(198), float32] */;
    %28 = reshape(%26, newshape=[]) /* ty=float32 */;
    %29 = reshape(%27, newshape=[11, 3, 6]) /* ty=Tensor[(11, 3, 6), float32] */;
    %30 = @func_2865(%28, %29) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */;
    %31 = %30.1;
    %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 16, 6), uint8] */, dtype="int16") /* ty=Tensor[(7, 16, 6), int16] */;
    %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
    %34 = cast(%31, dtype="int16") /* ty=Tensor[(7, 16, 6), int16] */;
    %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %36 = %16.0;
    %37 = %17.0;
    %38 = %18.1;
    %39 = %25.2;
    %40 = bitwise_or(%34, %35) /* ty=Tensor[(7, 16, 6), int16] */;
    (%36, %37, %38, -4.84702f /* ty=float32 */, %var_10441, %39, meta[relay.Constant][0] /* ty=Tensor[(243), float32] */, meta[relay.Constant][1] /* ty=Tensor[(4), uint64] */, meta[relay.Constant][2] /* ty=Tensor[(30, 2), uint64] */, %40)
  };
  %41(%var_10454) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], float32, Tensor[(198), float32], Tensor[(4, 1), uint64], Tensor[(243), float32], Tensor[(4), uint64], Tensor[(30, 2), uint64], Tensor[(7, 16, 6), int16]) */
}

def @func_11706() -> (Tensor[(448), uint16],) {
  %43 = fn () -> (Tensor[(448), uint16],) {
    %42 = @func_5227() /* ty=Tensor[(448), uint16] */;
    (%42,)
  };
  %43() /* ty=(Tensor[(448), uint16],) */
}

def @func_1758() -> Tensor[(5, 5, 13), float64] {
  %44 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  rsqrt(%44) /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_8316() -> (Tensor[(5, 5, 13), float32], Tensor[(143), bool]) {
  @func_8314() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(143), bool]) */
}

def @func_2753() -> (Tensor[(5, 5, 13), float64],) {
  %47 = fn () -> (Tensor[(5, 5, 13), float64],) {
    %45 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
    %46 = %45.0;
    (%46,)
  };
  %47() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_9673() -> (Tensor[(5, 5, 13), float32],) {
  @func_9671() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_5252() -> Tensor[(5, 5, 13), float32] {
  @func_4382() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_7984(%var_7983: Tensor[(12, 11, 5), float64]) -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64], uint8) {
  %54 = fn (%var_7957: Tensor[(12, 11, 5), float64]) -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64], uint8) {
    %48 = cast(%var_7957, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
    %49 = cast(meta[relay.Constant][5] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %50 = reshape(%49, newshape=[]) /* ty=uint8 */;
    %51 = @func_6611(%50) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], uint8, Tensor[(168, 4), uint8]) */;
    %52 = rsqrt(%48) /* ty=Tensor[(12, 11, 5), float64] */;
    %53 = %51.0;
    (%52, %53, meta[relay.Constant][5] /* ty=uint8 */)
  };
  %54(%var_7983) /* ty=(Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64], uint8) */
}

def @func_5990(%var_5972: Tensor[(448), uint16], %var_5975: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(1152), bool], Tensor[(448), uint8]) {
  %55 = @func_5083() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) */;
  %56 = cast(meta[relay.Constant][6] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %57 = cast(meta[relay.Constant][6] /* ty=Tensor[(1152), bool] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %58 = cast(%var_5972, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %59 = reshape(%56, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), bool] */;
  %60 = reshape(%57, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), bool] */;
  %61 = reshape(%58, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %62 = @func_3386(%59, %60, %61) /* ty=(Tensor[(12, 12, 8), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %63 = cast(%var_5975, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %64 = shape_of(%var_5972, dtype="int32") /* ty=Tensor[(1), int32] */;
  %65 = cast(%var_5972, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %67 = %55.0;
  %68 = %62.1;
  %69 = logical_xor(%65, %66) /* ty=Tensor[(448), uint8] */;
  (%67, %68, meta[relay.Constant][6] /* ty=Tensor[(1152), bool] */, %69)
}

def @func_9863() -> Tensor[(5, 5, 13), float32] {
  @func_9861() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_3965() -> Tensor[(448), uint16] {
  @func_3963() /* ty=Tensor[(448), uint16] */
}

def @func_182(%var_181: Tensor[(7, 9, 9), int8]) -> Tensor[(7, 9, 9), int8] {
  %74 = fn (%var_174: Tensor[(7, 9, 9), int8]) -> Tensor[(7, 9, 9), int8] {
    %70 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 9, 9), int8] */, dtype="int8") /* ty=Tensor[(7, 9, 9), int8] */;
    %71 = shape_of(%var_174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %72 = cast(%var_174, dtype="int8") /* ty=Tensor[(7, 9, 9), int8] */;
    %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    left_shift(%72, %73) /* ty=Tensor[(7, 9, 9), int8] */
  };
  %74(%var_181) /* ty=Tensor[(7, 9, 9), int8] */
}

def @func_5918(%var_5916: Tensor[(2145), bool], %var_5917: Tensor[(1152), bool]) -> (Tensor[(12, 11, 5), float64], Tensor[(8, 7, 8), float32], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(448), float64], Tensor[(5, 5, 13), float32], Tensor[(448), uint16], Tensor[(2, 336), float64], Tensor[(8, 14, 4), uint16], Tensor[(1152), bool]) {
  @func_5914(%var_5916, %var_5917) /* ty=(Tensor[(12, 11, 5), float64], Tensor[(8, 7, 8), float32], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(448), float64], Tensor[(5, 5, 13), float32], Tensor[(448), uint16], Tensor[(2, 336), float64], Tensor[(8, 14, 4), uint16], Tensor[(1152), bool]) */
}

def @func_6862() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(2, 312), float32], Tensor[(624), uint16], Tensor[(5, 5, 13), bool], Tensor[(5, 5, 13), float64]) {
  %91 = fn () -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(2, 312), float32], Tensor[(624), uint16], Tensor[(5, 5, 13), bool], Tensor[(5, 5, 13), float64]) {
    %75 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %76 = @func_4823() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) */;
    %77 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %78 = reshape(%77, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
    %79 = @func_2727(%78) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */;
    %80 = cast(meta[relay.Constant][9] /* ty=Tensor[(624), float32] */, dtype="uint16") /* ty=Tensor[(624), uint16] */;
    %81 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(624), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %82 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), float32] */, dtype="uint16") /* ty=Tensor[(624), uint16] */;
    %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %84 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %85 = %75.0;
    %86 = %76.0;
    %87 = %79.1;
    %88 = maximum(%82, %83) /* ty=Tensor[(624), uint16] */;
    %89 = @func_6433() /* ty=Tensor[(5, 5, 13), bool] */;
    %90 = %84.0;
    (%85, %86, %87, %88, %89, %90)
  };
  %91() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(2, 312), float32], Tensor[(624), uint16], Tensor[(5, 5, 13), bool], Tensor[(5, 5, 13), float64]) */
}

def @func_9690() -> Tensor[(5, 5, 13), float32] {
  %92 = @func_9335() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %92.0
}

def @func_5807(%var_5797: Tensor[(2, 2, 1), uint64]) -> Tensor[(2, 2, 1), uint64] {
  %93 = cast(meta[relay.Constant][10] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %94 = cast(%var_5797, dtype="uint64") /* ty=Tensor[(2, 2, 1), uint64] */;
  bitwise_xor(%93, %94) /* ty=Tensor[(2, 2, 1), uint64] */
}

def @func_11182() -> (Tensor[(5, 5, 13), float32],) {
  %95 = @func_9335() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %96 = %95.2;
  (%96,)
}

def @func_10293() -> (Tensor[(5, 5, 13), float64],) {
  %97 = @func_5182() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %98 = %97.0;
  (%98,)
}

def @func_3634() -> (Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %99 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %100 = cast(meta[relay.Constant][11] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %101 = reshape(%100, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %102 = %99.0;
  %103 = @func_1320(%101) /* ty=Tensor[(8, 14, 4), uint16] */;
  (%102, %103, meta[relay.Constant][11] /* ty=Tensor[(448), uint16] */)
}

def @func_8558() -> Tensor[(5, 5, 13), float64] {
  %104 = @func_2776() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %104.0
}

def @func_10947() -> Tensor[(448), uint16] {
  @func_3963() /* ty=Tensor[(448), uint16] */
}

def @func_5332() -> (Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) {
  @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */
}

def @func_5229() -> Tensor[(448), uint16] {
  @func_5227() /* ty=Tensor[(448), uint16] */
}

def @func_7417(%var_7416: Tensor[(16, 4, 3), float64]) -> (Tensor[(16, 4, 3), float64],) {
  %107 = fn (%var_7409: Tensor[(16, 4, 3), float64]) -> (Tensor[(16, 4, 3), float64],) {
    %105 = cast(%var_7409, dtype="float64") /* ty=Tensor[(16, 4, 3), float64] */;
    %106 = exp(%105) /* ty=Tensor[(16, 4, 3), float64] */;
    (%106,)
  };
  %107(%var_7416) /* ty=(Tensor[(16, 4, 3), float64],) */
}

def @func_2907() -> Tensor[(5, 5, 13), float32] {
  @func_2905() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_3562(%var_3560: Tensor[(624, 1), float32], %var_3561: Tensor[(12, 11, 5), float64]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(624, 1), float32], Tensor[(12, 11, 5), int8], Tensor[(5, 5, 13), float64]) {
  @func_3558(%var_3560, %var_3561) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(624, 1), float32], Tensor[(12, 11, 5), int8], Tensor[(5, 5, 13), float64]) */
}

def @func_6211(%var_6208: Tensor[(243), float32], %var_6209: Tensor[(4, 1), uint64], %var_6210: Tensor[(2, 2, 15), uint64]) -> (Tensor[(5, 5, 13), float32], Tensor[(243), bool], Tensor[(4, 1), uint64], Tensor[(2, 2, 15), bool]) {
  %123 = fn (%var_6190: Tensor[(243), float32], %var_6199: Tensor[(4, 1), uint64], %var_6201: Tensor[(2, 2, 15), uint64]) -> (Tensor[(5, 5, 13), float32], Tensor[(243), bool], Tensor[(4, 1), uint64], Tensor[(2, 2, 15), bool]) {
    %108 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %109 = @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */;
    %110 = %109.3;
    %111 = cast(%var_6190, dtype="bool") /* ty=Tensor[(243), bool] */;
    %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(1), int32] */;
    %113 = cast(%110, dtype="bool") /* ty=Tensor[(243), bool] */;
    %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?), bool] */;
    %115 = cast(%var_6199, dtype="uint64") /* ty=Tensor[(4, 1), uint64] */;
    %116 = reshape(%115, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
    %117 = @func_5807(%116) /* ty=Tensor[(2, 2, 1), uint64] */;
    %118 = cast(%117, dtype="bool") /* ty=Tensor[(2, 2, 1), bool] */;
    %119 = cast(%var_6201, dtype="bool") /* ty=Tensor[(2, 2, 15), bool] */;
    %120 = %108.0;
    %121 = not_equal(%113, %114) /* ty=Tensor[(243), bool] */;
    %122 = less(%118, %119) /* ty=Tensor[(2, 2, 15), bool] */;
    (%120, %121, %var_6199, %122)
  };
  %123(%var_6208, %var_6209, %var_6210) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(243), bool], Tensor[(4, 1), uint64], Tensor[(2, 2, 15), bool]) */
}

def @func_1919(%var_1918: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %128 = fn (%var_1905: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
    %124 = cast(%var_1905, dtype="uint16") /* ty=Tensor[(448), uint16] */;
    %125 = reshape(%124, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
    %126 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
    %127 = @func_1320(%125) /* ty=Tensor[(8, 14, 4), uint16] */;
    (%126, %127, %var_1905)
  };
  %128(%var_1918) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */
}

def @func_6954(%var_6942: Tensor[(594), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32]) {
  %129 = cast(%var_6942, dtype="float32") /* ty=Tensor[(594), float32] */;
  %130 = reshape(%129, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %131 = @func_6573(%130) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(5, 5, 13), float64]) */;
  %132 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  %133 = %131.0;
  (%132, %133, %var_6942)
}

def @func_2994() -> (Tensor[(5, 5, 13), float32],) {
  %134 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  (%134,)
}

def @func_6870() -> Tensor[(5, 5, 13), float32] {
  %135 = @func_6412() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %135.0
}

def @func_8650(%var_8647: Tensor[(20), float32], %var_8648: Tensor[(975), int16], %var_8649: Tensor[(325), float32]) -> (Tensor[(448), uint16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(15, 11, 13), bool], Tensor[(325), float32], Tensor[(11, 3, 6), float32]) {
  @func_8645(%var_8647, %var_8648, %var_8649) /* ty=(Tensor[(448), uint16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(15, 11, 13), bool], Tensor[(325), float32], Tensor[(11, 3, 6), float32]) */
}

def @func_9758(%var_9742: Tensor[(6, 12, 4), uint16], %var_9743: Tensor[(6, 12, 4), uint16]) -> (Tensor[(6, 12, 4), bool], Tensor[(6, 12, 4), int32]) {
  %136 = cast(%var_9743, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %137 = shape_of(%var_9742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_9742, dtype="bool") /* ty=Tensor[(6, 12, 4), bool] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %140 = cast(%var_9743, dtype="int32") /* ty=Tensor[(6, 12, 4), int32] */;
  %141 = shape_of(%var_9742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%var_9742, dtype="int32") /* ty=Tensor[(6, 12, 4), int32] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %144 = less(%138, %139) /* ty=Tensor[(6, 12, 4), bool] */;
  %145 = maximum(%142, %143) /* ty=Tensor[(6, 12, 4), int32] */;
  (%144, %145)
}

def @func_5794(%var_5790: Tensor[(8, 14, 16), uint64], %var_5791: Tensor[(8, 14, 16), uint64], %var_5792: uint8, %var_5793: Tensor[(168, 4), uint8]) -> (Tensor[(8, 14, 16), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(168, 4), uint8], Tensor[(672), uint8], Tensor[(448), uint64], Tensor[(2145), float64]) {
  @func_5788(%var_5790, %var_5791, %var_5792, %var_5793) /* ty=(Tensor[(8, 14, 16), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(168, 4), uint8], Tensor[(672), uint8], Tensor[(448), uint64], Tensor[(2145), float64]) */
}

def @func_11761() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_11759() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_11591() -> Tensor[(5, 5, 13), float32] {
  %147 = fn () -> Tensor[(5, 5, 13), float32] {
    %146 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
    %146.0
  };
  %147() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_10761(%var_10760: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(448), uint16], Tensor[(448), uint16], Tensor[(2145), bool]) {
  %156 = fn (%var_10741: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(448), uint16], Tensor[(448), uint16], Tensor[(2145), bool]) {
    %148 = @func_9671() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %149 = cast(%var_10741, dtype="uint16") /* ty=Tensor[(448), uint16] */;
    %150 = cast(meta[relay.Constant][12] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %151 = reshape(%149, newshape=[448]) /* ty=Tensor[(448), uint16] */;
    %152 = reshape(%150, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
    %153 = @func_3750(%151, %152) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(5, 5, 13), float64]) */;
    %154 = %148.0;
    %155 = %153.2;
    (%154, %155, %var_10741, meta[relay.Constant][12] /* ty=Tensor[(2145), bool] */)
  };
  %156(%var_10760) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(448), uint16], Tensor[(448), uint16], Tensor[(2145), bool]) */
}

def @func_3496() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) {
  %157 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %158 = cast(meta[relay.Constant][13] /* ty=Tensor[(2912), int16] */, dtype="int16") /* ty=Tensor[(2912), int16] */;
  %159 = cast(meta[relay.Constant][13] /* ty=Tensor[(2912), int16] */, dtype="int16") /* ty=Tensor[(2912), int16] */;
  %160 = cast(4.19806f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %161 = cast(meta[relay.Constant][14] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %162 = reshape(%158, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), int16] */;
  %163 = reshape(%159, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), int16] */;
  %164 = reshape(%160, newshape=[]) /* ty=float32 */;
  %165 = reshape(%161, newshape=[198]) /* ty=Tensor[(198), float32] */;
  %166 = @func_3173(%162, %163, %164, %165) /* ty=(Tensor[(13, 14, 16), int16], Tensor[(672), uint8], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %167 = cast(meta[relay.Constant][15] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %168 = cast(meta[relay.Constant][15] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %169 = cast(meta[relay.Constant][16] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %170 = cast(4.19806f /* ty=float32 */, dtype="uint8") /* ty=uint8 */;
  %171 = cast(meta[relay.Constant][17] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %172 = reshape(%167, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %173 = reshape(%168, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %174 = reshape(%169, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %175 = reshape(%170, newshape=[]) /* ty=uint8 */;
  %176 = reshape(%171, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %177 = @func_2130(%172, %173, %174, %175, %176) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %178 = %157.0;
  %179 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %180 = %166.4;
  %181 = %177.1;
  (%178, %179, %180, meta[relay.Constant][13] /* ty=Tensor[(2912), int16] */, 4.19806f /* ty=float32 */, meta[relay.Constant][14] /* ty=Tensor[(198), float32] */, %181, meta[relay.Constant][15] /* ty=Tensor[(448), uint64] */, meta[relay.Constant][16] /* ty=Tensor[(2145), bool] */, meta[relay.Constant][17] /* ty=Tensor[(672), uint8] */)
}

def @func_2535() -> (Tensor[(5, 5, 13), float64],) {
  %182 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  (%182,)
}

def @func_2040(%var_2033: Tensor[(3, 16, 13), float32], %var_2034: Tensor[(3, 16, 13), float32]) -> (Tensor[(3, 16, 13), float32],) {
  %183 = cast(%var_2034, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %184 = shape_of(%var_2033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%var_2033, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %187 = maximum(%185, %186) /* ty=Tensor[(3, 16, 13), float32] */;
  (%187,)
}

def @func_6057(%var_6056: Tensor[(5, 5, 13), float64]) -> (Tensor[(5, 5, 13), bool], Tensor[(3, 11, 12), float32], Tensor[(396), float32], Tensor[(5, 5, 13), float32]) {
  %199 = fn (%var_6009: Tensor[(5, 5, 13), float64]) -> (Tensor[(5, 5, 13), bool], Tensor[(3, 11, 12), float32], Tensor[(396), float32], Tensor[(5, 5, 13), float32]) {
    %188 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
    %189 = cast(%var_6009, dtype="bool") /* ty=Tensor[(5, 5, 13), bool] */;
    %190 = shape_of(%188, dtype="int32") /* ty=Tensor[(3), int32] */;
    %191 = cast(%188, dtype="bool") /* ty=Tensor[(5, 5, 13), bool] */;
    %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %193 = cast(meta[relay.Constant][18] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %194 = reshape(%193, newshape=[3, 11, 12]) /* ty=Tensor[(3, 11, 12), float32] */;
    %195 = @func_3712() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
    %196 = greater_equal(%191, %192) /* ty=Tensor[(5, 5, 13), bool] */;
    %197 = @func_3666(%194) /* ty=Tensor[(3, 11, 12), float32] */;
    %198 = %195.0;
    (%196, %197, meta[relay.Constant][18] /* ty=Tensor[(396), float32] */, %198)
  };
  %199(%var_6056) /* ty=(Tensor[(5, 5, 13), bool], Tensor[(3, 11, 12), float32], Tensor[(396), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_5184() -> (Tensor[(5, 5, 13), float64],) {
  @func_5182() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_11555() -> (Tensor[(5, 5, 13), float32],) {
  %200 = @func_7114() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %201 = %200.0;
  (%201,)
}

def @func_11759() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %202 = @func_5083() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) */;
  %203 = %202.1;
  %204 = @func_11304() /* ty=Tensor[(5, 5, 13), float32] */;
  (%203, %204)
}

def @func_3902() -> (Tensor[(5, 5, 13), float32],) {
  %205 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %206 = %205.0;
  (%206,)
}

def @func_8185() -> (Tensor[(5, 5, 13), float32],) {
  %208 = fn () -> (Tensor[(5, 5, 13), float32],) {
    %207 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
    (%207,)
  };
  %208() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_6452() -> (Tensor[(5, 5, 13), float64],) {
  @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_10080() -> (Tensor[(448), uint16], Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64]) {
  @func_10078() /* ty=(Tensor[(448), uint16], Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64]) */
}

def @func_3959(%var_3954: Tensor[(5, 5, 13), float64], %var_3955: Tensor[(24), uint16], %var_3956: Tensor[(2145), bool], %var_3957: Tensor[(4, 112), uint16], %var_3958: float32) -> (Tensor[(5, 5, 13), uint16], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(4, 112), uint16], Tensor[(975), int16], float32, Tensor[(1, 20), float32], Tensor[(975), int16]) {
  %232 = fn (%var_3934: Tensor[(5, 5, 13), float64], %var_3943: Tensor[(24), uint16], %var_3944: Tensor[(2145), bool], %var_3945: Tensor[(4, 112), uint16], %var_3948: float32) -> (Tensor[(5, 5, 13), uint16], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(4, 112), uint16], Tensor[(975), int16], float32, Tensor[(1, 20), float32], Tensor[(975), int16]) {
    %209 = @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */;
    %210 = %209.6;
    %211 = cast(%var_3934, dtype="uint16") /* ty=Tensor[(5, 5, 13), uint16] */;
    %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(%210, dtype="uint16") /* ty=Tensor[(5, 5, 13), uint16] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %215 = cast(%var_3943, dtype="uint16") /* ty=Tensor[(24), uint16] */;
    %216 = cast(%var_3944, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %217 = cast(%var_3945, dtype="uint16") /* ty=Tensor[(4, 112), uint16] */;
    %218 = reshape(%215, newshape=[1, 4, 6]) /* ty=Tensor[(1, 4, 6), uint16] */;
    %219 = reshape(%216, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
    %220 = reshape(%217, newshape=[448]) /* ty=Tensor[(448), uint16] */;
    %221 = @func_1659(%218, %219, %220) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */;
    %222 = cast(%var_3948, dtype="float32") /* ty=float32 */;
    %223 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 20), float32] */, dtype="float32") /* ty=Tensor[(1, 20), float32] */;
    %224 = cast(meta[relay.Constant][20] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
    %225 = reshape(%222, newshape=[]) /* ty=float32 */;
    %226 = reshape(%223, newshape=[2, 1, 10]) /* ty=Tensor[(2, 1, 10), float32] */;
    %227 = reshape(%224, newshape=[975]) /* ty=Tensor[(975), int16] */;
    %228 = @func_3321(%225, %226, %227) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) */;
    %229 = right_shift(%213, %214) /* ty=Tensor[(5, 5, 13), uint16] */;
    %230 = %221.0;
    %231 = %228.3;
    (%229, %230, %var_3943, %var_3944, %var_3945, %231, %var_3948, meta[relay.Constant][19] /* ty=Tensor[(1, 20), float32] */, meta[relay.Constant][20] /* ty=Tensor[(975), int16] */)
  };
  %232(%var_3954, %var_3955, %var_3956, %var_3957, %var_3958) /* ty=(Tensor[(5, 5, 13), uint16], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(4, 112), uint16], Tensor[(975), int16], float32, Tensor[(1, 20), float32], Tensor[(975), int16]) */
}

def @func_11034() -> Tensor[(5, 5, 13), float32] {
  @func_11032() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_8314() -> (Tensor[(5, 5, 13), float32], Tensor[(143), bool]) {
  %233 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %234 = %233.0;
  %235 = cast(%234, dtype="float32") /* ty=Tensor[(5, 5, 13), float32] */;
  %236 = reshape(%235, newshape=[5, 5, 13]) /* ty=Tensor[(5, 5, 13), float32] */;
  %237 = @func_4066(%236) /* ty=(Tensor[(5, 5, 13), uint32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool]) */;
  %238 = %237.4;
  (%234, %238)
}

def @func_6450() -> (Tensor[(5, 5, 13), float64],) {
  %239 = @func_6352() /* ty=Tensor[(5, 5, 13), float64] */;
  (%239,)
}

def @func_4491(%var_4490: int32) -> (Tensor[(5, 5, 13), float64], int32, Tensor[(1, 243), int32], Tensor[(3, 9, 9), float32], Tensor[(2, 312), float32], Tensor[(624), float32]) {
  %256 = fn (%var_4476: int32) -> (Tensor[(5, 5, 13), float64], int32, Tensor[(1, 243), int32], Tensor[(3, 9, 9), float32], Tensor[(2, 312), float32], Tensor[(624), float32]) {
    %240 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %241 = cast(%var_4476, dtype="int32") /* ty=int32 */;
    %242 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 243), int32] */, dtype="int32") /* ty=Tensor[(1, 243), int32] */;
    %243 = reshape(%241, newshape=[]) /* ty=int32 */;
    %244 = reshape(%242, newshape=[3, 9, 9]) /* ty=Tensor[(3, 9, 9), int32] */;
    %245 = @func_4133(%243, %244) /* ty=Tensor[(3, 9, 9), bool] */;
    %246 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 9, 9), bool] */, dtype="float32") /* ty=Tensor[(3, 9, 9), float32] */;
    %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
    %248 = cast(%245, dtype="float32") /* ty=Tensor[(3, 9, 9), float32] */;
    %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %250 = cast(meta[relay.Constant][23] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %251 = reshape(%250, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
    %252 = @func_2727(%251) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */;
    %253 = %240.0;
    %254 = mod(%248, %249) /* ty=Tensor[(3, 9, 9), float32] */;
    %255 = %252.1;
    (%253, %var_4476, meta[relay.Constant][21] /* ty=Tensor[(1, 243), int32] */, %254, %255, meta[relay.Constant][23] /* ty=Tensor[(624), float32] */)
  };
  %256(%var_4490) /* ty=(Tensor[(5, 5, 13), float64], int32, Tensor[(1, 243), int32], Tensor[(3, 9, 9), float32], Tensor[(2, 312), float32], Tensor[(624), float32]) */
}

def @func_11209() -> (Tensor[(5, 5, 13), float32],) {
  %258 = fn () -> (Tensor[(5, 5, 13), float32],) {
    %257 = @func_5039() /* ty=Tensor[(5, 5, 13), float32] */;
    (%257,)
  };
  %258() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_6353() -> Tensor[(5, 5, 13), float64] {
  %260 = fn () -> Tensor[(5, 5, 13), float64] {
    %259 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %259.0
  };
  %260() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_5084() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  %265 = fn () -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
    %261 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %262 = @func_3902() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %263 = %261.0;
    %264 = %262.0;
    (%263, %264)
  };
  %265() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) */
}

def @func_11940(%var_11939: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(448), uint16]) {
  %280 = fn (%var_11888: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(448), uint16]) {
    %266 = cast(%var_11888, dtype="float32") /* ty=Tensor[(14, 3, 7), float32] */;
    %267 = cast(meta[relay.Constant][24] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %268 = reshape(%267, newshape=[594, 1]) /* ty=Tensor[(594, 1), float32] */;
    %269 = @func_7893(%268) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(11, 6, 9), float32], Tensor[(594, 1), float32]) */;
    %270 = cast(meta[relay.Constant][25] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %271 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
    %272 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
    %273 = reshape(%270, newshape=[672]) /* ty=Tensor[(672), uint8] */;
    %274 = reshape(%271, newshape=[8, 56]) /* ty=Tensor[(8, 56), uint16] */;
    %275 = reshape(%272, newshape=[8, 56]) /* ty=Tensor[(8, 56), uint16] */;
    %276 = @func_8224(%273, %274, %275) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(5, 5, 13), float64], Tensor[(8, 56), bool]) */;
    %277 = sqrt(%266) /* ty=Tensor[(14, 3, 7), float32] */;
    %278 = %269.1;
    %279 = %276.0;
    (%277, %278, meta[relay.Constant][24] /* ty=Tensor[(594), float32] */, %279, meta[relay.Constant][25] /* ty=Tensor[(672), uint8] */, meta[relay.Constant][26] /* ty=Tensor[(448), uint16] */)
  };
  %280(%var_11939) /* ty=(Tensor[(14, 3, 7), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(448), uint16]) */
}

def @func_11032() -> Tensor[(5, 5, 13), float32] {
  %281 = @func_8184() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %281.0
}

def @func_2044(%var_2042: Tensor[(3, 16, 13), float32], %var_2043: Tensor[(3, 16, 13), float32]) -> (Tensor[(3, 16, 13), float32],) {
  @func_2040(%var_2042, %var_2043) /* ty=(Tensor[(3, 16, 13), float32],) */
}

def @func_3432(%var_3431: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %294 = fn (%var_3428: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
    %282 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %283 = %282.0;
    %284 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %285 = %284.0;
    %286 = cast(%285, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
    %287 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
    %288 = cast(%283, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
    %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %290 = cast(%var_3428, dtype="uint16") /* ty=Tensor[(448), uint16] */;
    %291 = reshape(%290, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
    %292 = floor_divide(%288, %289) /* ty=Tensor[(5, 5, 13), float64] */;
    %293 = @func_1320(%291) /* ty=Tensor[(8, 14, 4), uint16] */;
    (%292, %293, %var_3428)
  };
  %294(%var_3431) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */
}

def @func_3173(%var_3140: Tensor[(13, 14, 16), int16], %var_3141: Tensor[(13, 14, 16), int16], %var_3146: float32, %var_3147: Tensor[(198), float32]) -> (Tensor[(13, 14, 16), int16], Tensor[(672), uint8], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %295 = cast(%var_3141, dtype="int16") /* ty=Tensor[(13, 14, 16), int16] */;
  %296 = shape_of(%var_3140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%var_3140, dtype="int16") /* ty=Tensor[(13, 14, 16), int16] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %299 = cast(%var_3146, dtype="float32") /* ty=float32 */;
  %300 = cast(%var_3147, dtype="float32") /* ty=Tensor[(198), float32] */;
  %301 = reshape(%299, newshape=[]) /* ty=float32 */;
  %302 = reshape(%300, newshape=[11, 3, 6]) /* ty=Tensor[(11, 3, 6), float32] */;
  %303 = @func_2865(%301, %302) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */;
  %304 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %305 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %306 = bitwise_xor(%297, %298) /* ty=Tensor[(13, 14, 16), int16] */;
  %307 = %303.2;
  %308 = %304.0;
  %309 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  %310 = %305.0;
  (%306, %307, %var_3146, %var_3147, %308, %309, %310)
}

def @func_6797(%var_6796: Tensor[(14, 5, 10), uint64]) -> Tensor[(14, 5, 10), bool] {
  %315 = fn (%var_6786: Tensor[(14, 5, 10), uint64]) -> Tensor[(14, 5, 10), bool] {
    %311 = cast(%var_6786, dtype="bool") /* ty=Tensor[(14, 5, 10), bool] */;
    %312 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(14, 5, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %313 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 5, 10), uint64] */, dtype="bool") /* ty=Tensor[(14, 5, 10), bool] */;
    %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%313, %314) /* ty=Tensor[(14, 5, 10), bool] */
  };
  %315(%var_6796) /* ty=Tensor[(14, 5, 10), bool] */
}

def @func_9367() -> Tensor[(5, 5, 13), float32] {
  %316 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %316.0
}

def @func_1320(%var_1308: Tensor[(8, 14, 4), uint16]) -> Tensor[(8, 14, 4), uint16] {
  %317 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 14, 4), uint16] */, dtype="uint16") /* ty=Tensor[(8, 14, 4), uint16] */;
  %318 = shape_of(%var_1308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%var_1308, dtype="uint16") /* ty=Tensor[(8, 14, 4), uint16] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%319, %320) /* ty=Tensor[(8, 14, 4), uint16] */
}

def @func_765(%var_759: uint8, %var_760: Tensor[(7, 16, 6), uint8]) -> Tensor[(7, 16, 6), uint8] {
  %321 = cast(%var_759, dtype="uint8") /* ty=uint8 */;
  %322 = cast(%var_760, dtype="uint8") /* ty=Tensor[(7, 16, 6), uint8] */;
  logical_xor(%321, %322) /* ty=Tensor[(7, 16, 6), uint8] */
}

def @func_4301(%var_4297: Tensor[(7, 15, 11), int16], %var_4298: Tensor[(7, 15, 11), int16], %var_4299: Tensor[(20), float32], %var_4300: Tensor[(567), int8]) -> (Tensor[(7, 15, 11), bool], Tensor[(13, 15, 5), int16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) {
  %339 = fn (%var_4266: Tensor[(7, 15, 11), int16], %var_4267: Tensor[(7, 15, 11), int16], %var_4279: Tensor[(20), float32], %var_4284: Tensor[(567), int8]) -> (Tensor[(7, 15, 11), bool], Tensor[(13, 15, 5), int16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) {
    %323 = cast(%var_4267, dtype="bool") /* ty=Tensor[(7, 15, 11), bool] */;
    %324 = shape_of(%var_4266, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%var_4266, dtype="bool") /* ty=Tensor[(7, 15, 11), bool] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %327 = cast(-0.461705f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %328 = cast(%var_4279, dtype="float32") /* ty=Tensor[(20), float32] */;
    %329 = cast(meta[relay.Constant][29] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
    %330 = reshape(%327, newshape=[]) /* ty=float32 */;
    %331 = reshape(%328, newshape=[2, 1, 10]) /* ty=Tensor[(2, 1, 10), float32] */;
    %332 = reshape(%329, newshape=[975]) /* ty=Tensor[(975), int16] */;
    %333 = @func_3321(%330, %331, %332) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) */;
    %334 = cast(%var_4284, dtype="int8") /* ty=Tensor[(567), int8] */;
    %335 = reshape(%334, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int8] */;
    %336 = less_equal(%325, %326) /* ty=Tensor[(7, 15, 11), bool] */;
    %337 = %333.2;
    %338 = @func_180(%335) /* ty=Tensor[(7, 9, 9), int8] */;
    (%336, %337, -0.461705f /* ty=float32 */, %var_4279, meta[relay.Constant][29] /* ty=Tensor[(975), int16] */, %338, %var_4284)
  };
  %339(%var_4297, %var_4298, %var_4299, %var_4300) /* ty=(Tensor[(7, 15, 11), bool], Tensor[(13, 15, 5), int16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) */
}

def @func_2811(%var_2809: uint8, %var_2810: Tensor[(672), uint8]) -> (Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) {
  %354 = fn (%var_2803: uint8, %var_2804: Tensor[(672), uint8]) -> (Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) {
    %340 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %341 = cast(meta[relay.Constant][30] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
    %342 = cast(meta[relay.Constant][30] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
    %343 = cast(meta[relay.Constant][31] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %344 = cast(%var_2803, dtype="uint8") /* ty=uint8 */;
    %345 = cast(%var_2804, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %346 = reshape(%341, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
    %347 = reshape(%342, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
    %348 = reshape(%343, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
    %349 = reshape(%344, newshape=[]) /* ty=uint8 */;
    %350 = reshape(%345, newshape=[672]) /* ty=Tensor[(672), uint8] */;
    %351 = @func_2130(%346, %347, %348, %349, %350) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
    %352 = %340.0;
    %353 = %351.5;
    (%352, %353, meta[relay.Constant][30] /* ty=Tensor[(448), uint64] */, meta[relay.Constant][31] /* ty=Tensor[(2145), bool] */, %var_2803, %var_2804)
  };
  %354(%var_2809, %var_2810) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) */
}

def @func_9033() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64]) {
  @func_9031() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64]) */
}

def @func_9504() -> (Tensor[(?, 4, 6), float32],) {
  %357 = fn () -> (Tensor[(?, 4, 6), float32],) {
    %355 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
    %356 = %355.3;
    (%356,)
  };
  %357() /* ty=(Tensor[(?, 4, 6), float32],) */
}

def @func_6295(%var_6286: Tensor[(624), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(3, 16, 13), float32]) {
  %358 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %359 = cast(%var_6286, dtype="float32") /* ty=Tensor[(624), float32] */;
  %360 = cast(%var_6286, dtype="float32") /* ty=Tensor[(624), float32] */;
  %361 = reshape(%359, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %362 = reshape(%360, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %363 = @func_2040(%361, %362) /* ty=(Tensor[(3, 16, 13), float32],) */;
  %364 = %363.0;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %366 = %358.0;
  %367 = atan(%365) /* ty=Tensor[(3, 16, 13), float32] */;
  (%366, %var_6286, %367)
}

def @func_6229() -> Tensor[(5, 5, 13), float32] {
  @func_6227() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_2225(%var_2216: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %368 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %369 = cast(%var_2216, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %370 = reshape(%369, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %371 = @func_1917(%370) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %372 = %368.0;
  %373 = %371.1;
  (%372, %373, %var_2216)
}

def @func_6957(%var_6955: Tensor[(594), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32]) {
  @func_6954(%var_6955) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32]) */
}

def @func_10820(%var_10773: Tensor[(975, 1), int16], %var_10782: Tensor[(1792, 1), uint64], %var_10783: uint8, %var_10790: Tensor[(2145), bool]) -> (Tensor[(5, 5, 13), float32], Tensor[(325), float32], Tensor[(10, 2), float32], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(448), uint16], Tensor[(975, 1), float32], Tensor[(1792, 2145), uint8]) {
  %374 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %375 = cast(meta[relay.Constant][32] /* ty=Tensor[(10, 2), float32] */, dtype="float32") /* ty=Tensor[(10, 2), float32] */;
  %376 = cast(%var_10773, dtype="int16") /* ty=Tensor[(975, 1), int16] */;
  %377 = %374.0;
  %378 = cast(%377, dtype="float32") /* ty=Tensor[(5, 5, 13), float32] */;
  %379 = reshape(%375, newshape=[20]) /* ty=Tensor[(20), float32] */;
  %380 = reshape(%376, newshape=[975]) /* ty=Tensor[(975), int16] */;
  %381 = reshape(%378, newshape=[325]) /* ty=Tensor[(325), float32] */;
  %382 = @func_8645(%379, %380, %381) /* ty=(Tensor[(448), uint16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(15, 11, 13), bool], Tensor[(325), float32], Tensor[(11, 3, 6), float32]) */;
  %383 = cast(%var_10782, dtype="uint64") /* ty=Tensor[(1792, 1), uint64] */;
  %384 = cast(%var_10782, dtype="uint64") /* ty=Tensor[(1792, 1), uint64] */;
  %385 = cast(%var_10783, dtype="uint8") /* ty=uint8 */;
  %386 = cast(meta[relay.Constant][33] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %387 = reshape(%383, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), uint64] */;
  %388 = reshape(%384, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), uint64] */;
  %389 = reshape(%385, newshape=[]) /* ty=uint8 */;
  %390 = reshape(%386, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint8] */;
  %391 = @func_5788(%387, %388, %389, %390) /* ty=(Tensor[(8, 14, 16), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(168, 4), uint8], Tensor[(672), uint8], Tensor[(448), uint64], Tensor[(2145), float64]) */;
  %392 = cast(%377, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %393 = cast(meta[relay.Constant][34] /* ty=Tensor[(24), uint16] */, dtype="uint16") /* ty=Tensor[(24), uint16] */;
  %394 = cast(%var_10790, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %395 = cast(meta[relay.Constant][35] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %396 = cast(%var_10783, dtype="float32") /* ty=float32 */;
  %397 = reshape(%392, newshape=[5, 5, 13]) /* ty=Tensor[(5, 5, 13), float64] */;
  %398 = reshape(%393, newshape=[24]) /* ty=Tensor[(24), uint16] */;
  %399 = reshape(%394, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %400 = reshape(%395, newshape=[4, 112]) /* ty=Tensor[(4, 112), uint16] */;
  %401 = reshape(%396, newshape=[]) /* ty=float32 */;
  %402 = @func_3953(%397, %398, %399, %400, %401) /* ty=(Tensor[(5, 5, 13), uint16], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(4, 112), uint16], Tensor[(975), int16], float32, Tensor[(1, 20), float32], Tensor[(975), int16]) */;
  %403 = cast(%var_10773, dtype="float32") /* ty=Tensor[(975, 1), float32] */;
  %404 = cast(%var_10782, dtype="uint8") /* ty=Tensor[(1792, 1), uint8] */;
  %405 = cast(%var_10790, dtype="uint8") /* ty=Tensor[(2145), uint8] */;
  %406 = %382.5;
  %407 = %391.1;
  %408 = %402.1;
  %409 = atanh(%403) /* ty=Tensor[(975, 1), float32] */;
  %410 = multiply(%404, %405) /* ty=Tensor[(1792, 2145), uint8] */;
  (%377, %406, meta[relay.Constant][32] /* ty=Tensor[(10, 2), float32] */, %407, %var_10783, meta[relay.Constant][33] /* ty=Tensor[(672), uint8] */, %408, meta[relay.Constant][34] /* ty=Tensor[(24), uint16] */, meta[relay.Constant][35] /* ty=Tensor[(448), uint16] */, %409, %410)
}

def @func_1207(%var_1205: Tensor[(1, 11, 13), bool], %var_1206: Tensor[(15, 11, 13), bool]) -> (Tensor[(15, 11, 13), bool],) {
  %414 = fn (%var_1193: Tensor[(1, 11, 13), bool], %var_1194: Tensor[(15, 11, 13), bool]) -> (Tensor[(15, 11, 13), bool],) {
    %411 = cast(%var_1193, dtype="bool") /* ty=Tensor[(1, 11, 13), bool] */;
    %412 = cast(%var_1194, dtype="bool") /* ty=Tensor[(15, 11, 13), bool] */;
    %413 = logical_or(%411, %412) /* ty=Tensor[(15, 11, 13), bool] */;
    (%413,)
  };
  %414(%var_1205, %var_1206) /* ty=(Tensor[(15, 11, 13), bool],) */
}

def @func_8258(%var_8230: Tensor[(10, 4, 2), float64], %var_8249: Tensor[(3, 198), float32]) -> (Tensor[(594), float32], Tensor[(3, 198), float32], Tensor[(10, 4, 2), uint16]) {
  %415 = cast(%var_8249, dtype="float32") /* ty=Tensor[(3, 198), float32] */;
  %416 = reshape(%415, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %417 = @func_6954(%416) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(11, 6, 9), float32], Tensor[(594), float32]) */;
  %418 = cast(%var_8230, dtype="float32") /* ty=Tensor[(10, 4, 2), float32] */;
  %419 = log(%418) /* ty=Tensor[(10, 4, 2), float32] */;
  %420 = cast(%var_8230, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %421 = exp(%420) /* ty=Tensor[(10, 4, 2), float64] */;
  %422 = cast(%421, dtype="uint16") /* ty=Tensor[(10, 4, 2), uint16] */;
  %423 = shape_of(%419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%419, dtype="uint16") /* ty=Tensor[(10, 4, 2), uint16] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %426 = %417.2;
  %427 = add(%424, %425) /* ty=Tensor[(10, 4, 2), uint16] */;
  (%426, %var_8249, %427)
}

def @func_9603() -> Tensor[(5, 5, 13), float32] {
  %429 = fn () -> Tensor[(5, 5, 13), float32] {
    %428 = @func_9031() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64]) */;
    %428.0
  };
  %429() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_9089() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_9087() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_10826(%var_10822: Tensor[(975, 1), int16], %var_10823: Tensor[(1792, 1), uint64], %var_10824: uint8, %var_10825: Tensor[(2145), bool]) -> (Tensor[(5, 5, 13), float32], Tensor[(325), float32], Tensor[(10, 2), float32], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(448), uint16], Tensor[(975, 1), float32], Tensor[(1792, 2145), uint8]) {
  @func_10820(%var_10822, %var_10823, %var_10824, %var_10825) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(325), float32], Tensor[(10, 2), float32], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(24), uint16], Tensor[(448), uint16], Tensor[(975, 1), float32], Tensor[(1792, 2145), uint8]) */
}

def @func_3776() -> Tensor[(5, 5, 13), float64] {
  @func_3774() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_8942() -> Tensor[(5, 5, 13), float64] {
  @func_8940() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_3712() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %430 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %431 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %432 = %430.0;
  %433 = %431.0;
  (%432, %433)
}

def @func_10220() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 160), float32]) {
  @func_10218() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 160), float32]) */
}

def @func_7018() -> (Tensor[(5, 5, 13), float64],) {
  %436 = fn () -> (Tensor[(5, 5, 13), float64],) {
    %434 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %435 = %434.0;
    (%435,)
  };
  %436() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_8645(%var_8599: Tensor[(20), float32], %var_8600: Tensor[(975), int16], %var_8630: Tensor[(325), float32]) -> (Tensor[(448), uint16], float32, Tensor[(20), float32], Tensor[(975), int16], Tensor[(15, 11, 13), bool], Tensor[(325), float32], Tensor[(11, 3, 6), float32]) {
  %437 = cast(%var_8630, dtype="float32") /* ty=Tensor[(325), float32] */;
  %438 = reshape(%437, newshape=[5, 5, 13]) /* ty=Tensor[(5, 5, 13), float32] */;
  %439 = @func_4066(%438) /* ty=(Tensor[(5, 5, 13), uint32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool]) */;
  %440 = cast(4.9975f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %441 = cast(%var_8599, dtype="float32") /* ty=Tensor[(20), float32] */;
  %442 = cast(%var_8600, dtype="int16") /* ty=Tensor[(975), int16] */;
  %443 = reshape(%440, newshape=[]) /* ty=float32 */;
  %444 = reshape(%441, newshape=[2, 1, 10]) /* ty=Tensor[(2, 1, 10), float32] */;
  %445 = reshape(%442, newshape=[975]) /* ty=Tensor[(975), int16] */;
  %446 = @func_3321(%443, %444, %445) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) */;
  %447 = %446.4;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(11, 3, 6), float64] */;
  %449 = log10(%448) /* ty=Tensor[(11, 3, 6), float64] */;
  %450 = cast(%449, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
  %451 = @func_5227() /* ty=Tensor[(448), uint16] */;
  %452 = %439.3;
  %453 = cosh(%450) /* ty=Tensor[(11, 3, 6), float32] */;
  (%451, 4.9975f /* ty=float32 */, %var_8599, %var_8600, %452, %var_8630, %453)
}

def @func_3265(%var_3244: Tensor[(13, 2, 9), float32]) -> (Tensor[(13, 2, 9), float32], Tensor[(5, 5, 13), float64]) {
  %454 = cast(meta[relay.Constant][36] /* ty=Tensor[(13, 2, 9), float32] */, dtype="float32") /* ty=Tensor[(13, 2, 9), float32] */;
  %455 = shape_of(%var_3244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%var_3244, dtype="float32") /* ty=Tensor[(13, 2, 9), float32] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %458 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %459 = floor_divide(%456, %457) /* ty=Tensor[(13, 2, 9), float32] */;
  %460 = %458.0;
  (%459, %460)
}

def @func_5691(%var_5690: Tensor[(448), uint16]) -> (Tensor[(448), float64], Tensor[(2145), bool]) {
  %470 = fn (%var_5656: Tensor[(448), uint16]) -> (Tensor[(448), float64], Tensor[(2145), bool]) {
    %461 = @func_4086() /* ty=(Tensor[(448), uint16],) */;
    %462 = %461.0;
    %463 = cast(%var_5656, dtype="float64") /* ty=Tensor[(448), float64] */;
    %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(1), int32] */;
    %465 = cast(%462, dtype="float64") /* ty=Tensor[(448), float64] */;
    %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?), float64] */;
    %467 = @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */;
    %468 = floor_divide(%465, %466) /* ty=Tensor[(448), float64] */;
    %469 = %467.8;
    (%468, %469)
  };
  %470(%var_5690) /* ty=(Tensor[(448), float64], Tensor[(2145), bool]) */
}

def @func_10916() -> (Tensor[(5, 5, 13), float64],) {
  @func_10914() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_5810(%var_5808: Tensor[(2, 2, 1), uint64]) -> Tensor[(2, 2, 1), uint64] {
  @func_5807(%var_5808) /* ty=Tensor[(2, 2, 1), uint64] */
}

def @func_7469() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %475 = fn () -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
    %471 = @func_6412() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %472 = @func_7398() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
    %473 = %471.0;
    %474 = %472.2;
    (%473, %474)
  };
  %475() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_1664(%var_1661: Tensor[(1, 4, 6), uint16], %var_1662: Tensor[(2145), bool], %var_1663: Tensor[(448), uint16]) -> (Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) {
  @func_1659(%var_1661, %var_1662, %var_1663) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */
}

def @func_8787() -> (Tensor[(12, 11, 5), float64],) {
  @func_8785() /* ty=(Tensor[(12, 11, 5), float64],) */
}

def @func_9466(%var_9465: Tensor[(280, 8), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(280, 8), float32]) {
  %482 = fn (%var_9456: Tensor[(280, 8), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(280, 8), float32]) {
    %476 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %477 = cast(%var_9456, dtype="float32") /* ty=Tensor[(280, 8), float32] */;
    %478 = reshape(%477, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), float32] */;
    %479 = @func_4986(%478) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(10, 14, 16), float64]) */;
    %480 = %476.0;
    %481 = %479.1;
    (%480, %481, %var_9456)
  };
  %482(%var_9465) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(280, 8), float32]) */
}

def @func_11066(%var_11064: Tensor[(8, 78), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(8, 78), float32]) {
  @func_11063(%var_11064) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(8, 78), float32]) */
}

def @func_7753(%var_7751: Tensor[(672, 1), uint8]) -> (Tensor[(5, 5, 13), float64], Tensor[(12, 11, 5), float64], Tensor[(1120, 2), float32], Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(1792), uint64], uint8, Tensor[(672, 1), uint8], Tensor[(12, 11, 5), int8], Tensor[(624), float32]) {
  @func_7750(%var_7751) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(12, 11, 5), float64], Tensor[(1120, 2), float32], Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(1792), uint64], uint8, Tensor[(672, 1), uint8], Tensor[(12, 11, 5), int8], Tensor[(624), float32]) */
}

def @func_6611(%var_6588: uint8) -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], uint8, Tensor[(168, 4), uint8]) {
  %483 = cast(%var_6588, dtype="uint8") /* ty=uint8 */;
  %484 = cast(meta[relay.Constant][37] /* ty=Tensor[(168, 4), uint8] */, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %485 = reshape(%483, newshape=[]) /* ty=uint8 */;
  %486 = reshape(%484, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %487 = @func_2808(%485, %486) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) */;
  %488 = @func_6352() /* ty=Tensor[(5, 5, 13), float64] */;
  %489 = %487.0;
  (%488, %489, %var_6588, meta[relay.Constant][37] /* ty=Tensor[(168, 4), uint8] */)
}

def @func_3774() -> Tensor[(5, 5, 13), float64] {
  %490 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %490.0
}

def @func_3121() -> (Tensor[(12, 11, 5), float64],) {
  %491 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %492 = sin(%491) /* ty=Tensor[(12, 11, 5), float64] */;
  (%492,)
}

def @func_7057() -> (Tensor[(448), uint16],) {
  @func_7055() /* ty=(Tensor[(448), uint16],) */
}

def @func_8533() -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64]) {
  %496 = fn () -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64]) {
    %493 = @func_2776() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %494 = @func_3656() /* ty=Tensor[(12, 11, 5), float64] */;
    %495 = %493.0;
    (%494, %495)
  };
  %496() /* ty=(Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64]) */
}

def @func_10329() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %497 = @func_5050() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %498 = %497.0;
  %499 = @func_6390() /* ty=Tensor[(5, 5, 13), float32] */;
  (%498, %499)
}

def @func_3834() -> (Tensor[(5, 5, 13), float32],) {
  %502 = fn () -> (Tensor[(5, 5, 13), float32],) {
    %500 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %501 = %500.0;
    (%501,)
  };
  %502() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_3047() -> (Tensor[(5, 5, 13), float64],) {
  %507 = fn () -> (Tensor[(5, 5, 13), float64],) {
    %503 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %504 = %503.0;
    %505 = cast(%504, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
    %506 = exp(%505) /* ty=Tensor[(5, 5, 13), float64] */;
    (%506,)
  };
  %507() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_11557() -> (Tensor[(5, 5, 13), float32],) {
  @func_11555() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_11812() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64]) {
  %513 = fn () -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64]) {
    %508 = @func_10968() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %509 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %510 = %508.0;
    %511 = @func_8940() /* ty=Tensor[(5, 5, 13), float64] */;
    %512 = %509.0;
    (%510, %511, %512)
  };
  %513() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64]) */
}

def @func_6227() -> Tensor[(5, 5, 13), float32] {
  %514 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %514.0
}

def @func_7527(%var_7526: Tensor[(700), uint64]) -> (Tensor[(5, 5, 13), float64], Tensor[(14, 5, 10), bool], Tensor[(700), uint64]) {
  %520 = fn (%var_7516: Tensor[(700), uint64]) -> (Tensor[(5, 5, 13), float64], Tensor[(14, 5, 10), bool], Tensor[(700), uint64]) {
    %515 = @func_7298() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %516 = cast(%var_7516, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %517 = reshape(%516, newshape=[14, 5, 10]) /* ty=Tensor[(14, 5, 10), uint64] */;
    %518 = %515.0;
    %519 = @func_6795(%517) /* ty=Tensor[(14, 5, 10), bool] */;
    (%518, %519, %var_7516)
  };
  %520(%var_7526) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(14, 5, 10), bool], Tensor[(700), uint64]) */
}

def @func_8262(%var_8260: Tensor[(10, 4, 2), float64], %var_8261: Tensor[(3, 198), float32]) -> (Tensor[(594), float32], Tensor[(3, 198), float32], Tensor[(10, 4, 2), uint16]) {
  @func_8258(%var_8260, %var_8261) /* ty=(Tensor[(594), float32], Tensor[(3, 198), float32], Tensor[(10, 4, 2), uint16]) */
}

def @func_10295() -> (Tensor[(5, 5, 13), float64],) {
  @func_10293() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_6872() -> Tensor[(5, 5, 13), float32] {
  @func_6870() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_4640() -> (Tensor[(5, 5, 13), float32],) {
  %523 = fn () -> (Tensor[(5, 5, 13), float32],) {
    %521 = @func_3341() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %522 = %521.0;
    (%522,)
  };
  %523() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_2136(%var_2131: Tensor[(8, 7, 8), uint64], %var_2132: Tensor[(8, 7, 8), uint64], %var_2133: Tensor[(2145), bool], %var_2134: uint8, %var_2135: Tensor[(672), uint8]) -> (Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) {
  %565 = fn (%var_2068: Tensor[(8, 7, 8), uint64], %var_2069: Tensor[(8, 7, 8), uint64], %var_2097: Tensor[(2145), bool], %var_2116: uint8, %var_2117: Tensor[(672), uint8]) -> (Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) {
    %524 = cast(%var_2069, dtype="uint64") /* ty=Tensor[(8, 7, 8), uint64] */;
    %525 = shape_of(%var_2068, dtype="int32") /* ty=Tensor[(3), int32] */;
    %526 = cast(%var_2068, dtype="uint64") /* ty=Tensor[(8, 7, 8), uint64] */;
    %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %528 = right_shift(%526, %527) /* ty=Tensor[(8, 7, 8), uint64] */;
    %529 = cast(%528, dtype="bool") /* ty=Tensor[(8, 7, 8), bool] */;
    %530 = shape_of(%var_2069, dtype="int32") /* ty=Tensor[(3), int32] */;
    %531 = cast(%var_2069, dtype="bool") /* ty=Tensor[(8, 7, 8), bool] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %533 = logical_and(%531, %532) /* ty=Tensor[(8, 7, 8), bool] */;
    %534 = cast(%533, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
    %535 = reshape(%534, newshape=[448]) /* ty=Tensor[(448), uint16] */;
    %536 = @func_1917(%535) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
    %537 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 2), uint16] */, dtype="uint16") /* ty=Tensor[(12, 2), uint16] */;
    %538 = cast(%var_2097, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %539 = cast(%var_2068, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
    %540 = reshape(%537, newshape=[1, 4, 6]) /* ty=Tensor[(1, 4, 6), uint16] */;
    %541 = reshape(%538, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
    %542 = reshape(%539, newshape=[448]) /* ty=Tensor[(448), uint16] */;
    %543 = @func_1659(%540, %541, %542) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */;
    %544 = cast(%var_2116, dtype="uint8") /* ty=uint8 */;
    %545 = cast(%var_2117, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %546 = reshape(%544, newshape=[]) /* ty=uint8 */;
    %547 = reshape(%545, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint8] */;
    %548 = cast(%var_2069, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
    %549 = sqrt(%548) /* ty=Tensor[(8, 7, 8), float32] */;
    %550 = cast(%549, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
    %551 = atan(%550) /* ty=Tensor[(8, 7, 8), float32] */;
    %552 = cast(%528, dtype="int8") /* ty=Tensor[(8, 7, 8), int8] */;
    %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
    %554 = cast(%551, dtype="int8") /* ty=Tensor[(8, 7, 8), int8] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %556 = maximum(%554, %555) /* ty=Tensor[(8, 7, 8), int8] */;
    %557 = cast(%549, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
    %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
    %559 = cast(%556, dtype="float32") /* ty=Tensor[(8, 7, 8), float32] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %561 = %536.0;
    %562 = %543.4;
    %563 = @func_765(%546, %547) /* ty=Tensor[(7, 16, 6), uint8] */;
    %564 = floor_divide(%559, %560) /* ty=Tensor[(8, 7, 8), float32] */;
    (%533, %561, %562, meta[relay.Constant][39] /* ty=Tensor[(12, 2), uint16] */, %var_2097, %563, %var_2116, %var_2117, %564)
  };
  %565(%var_2131, %var_2132, %var_2133, %var_2134, %var_2135) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */
}

def @func_7116() -> (Tensor[(5, 5, 13), float32],) {
  @func_7114() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_11617() -> (Tensor[(5, 5, 13), float32],) {
  %566 = @func_9671() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %567 = %566.0;
  (%567,)
}

def @func_10949() -> Tensor[(448), uint16] {
  @func_10947() /* ty=Tensor[(448), uint16] */
}

def @func_3321(%var_3270: float32, %var_3271: Tensor[(2, 1, 10), float32], %var_3300: Tensor[(975), int16]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) {
  %568 = @func_2776() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %569 = cast(%var_3270, dtype="float32") /* ty=float32 */;
  %570 = cast(%var_3271, dtype="float32") /* ty=Tensor[(2, 1, 10), float32] */;
  %571 = minimum(%569, %570) /* ty=Tensor[(2, 1, 10), float32] */;
  %572 = cast(%571, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
  %573 = shape_of(%var_3271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_3271, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %576 = cast(%var_3300, dtype="int16") /* ty=Tensor[(975), int16] */;
  %577 = cast(%var_3300, dtype="int16") /* ty=Tensor[(975), int16] */;
  %578 = reshape(%576, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %579 = reshape(%577, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %580 = @func_900(%578, %579) /* ty=(Tensor[(13, 15, 5), int16],) */;
  %581 = cast(%var_3270, dtype="float32") /* ty=float32 */;
  %582 = cast(meta[relay.Constant][40] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %583 = reshape(%581, newshape=[]) /* ty=float32 */;
  %584 = reshape(%582, newshape=[11, 3, 6]) /* ty=Tensor[(11, 3, 6), float32] */;
  %585 = @func_2865(%583, %584) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */;
  %586 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %587 = %586.0;
  %588 = cast(%587, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
  %589 = cast(%var_3270, dtype="float32") /* ty=float32 */;
  %590 = reshape(%588, newshape=[5, 5, 13]) /* ty=Tensor[(5, 5, 13), float64] */;
  %591 = reshape(%589, newshape=[]) /* ty=float32 */;
  %592 = @func_2956(%590, %591) /* ty=(Tensor[(5, 5, 13), float64], float32, Tensor[(198), float32], Tensor[(7, 16, 6), float64]) */;
  %593 = %568.0;
  %594 = greater(%574, %575) /* ty=Tensor[(2, ?, 10), bool] */;
  %595 = %580.0;
  %596 = %585.0;
  %597 = %592.2;
  (%593, %594, %595, %var_3300, %596, meta[relay.Constant][40] /* ty=Tensor[(198), float32] */, %587, %597)
}

def @func_3714() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_3712() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_11378() -> Tensor[(5, 5, 13), float32] {
  %598 = fn () -> Tensor[(5, 5, 13), float32] {
    @func_6870() /* ty=Tensor[(5, 5, 13), float32] */
  };
  %598() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_8661() -> (Tensor[(5, 5, 13), float32],) {
  %599 = @func_6870() /* ty=Tensor[(5, 5, 13), float32] */;
  (%599,)
}

def @func_11282() -> (Tensor[(5, 5, 13), float32], Tensor[(12, 2), uint16], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) {
  @func_11280() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 2), uint16], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) */
}

def @func_3123() -> (Tensor[(12, 11, 5), float64],) {
  @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */
}

def @func_5914(%var_5845: Tensor[(2145), bool], %var_5898: Tensor[(1152), bool]) -> (Tensor[(12, 11, 5), float64], Tensor[(8, 7, 8), float32], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(448), float64], Tensor[(5, 5, 13), float32], Tensor[(448), uint16], Tensor[(2, 336), float64], Tensor[(8, 14, 4), uint16], Tensor[(1152), bool]) {
  %600 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %601 = cast(meta[relay.Constant][41] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %602 = cast(meta[relay.Constant][41] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %603 = cast(%var_5845, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %604 = cast(meta[relay.Constant][42] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %605 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 336), uint8] */, dtype="uint8") /* ty=Tensor[(2, 336), uint8] */;
  %606 = reshape(%601, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %607 = reshape(%602, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %608 = reshape(%603, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %609 = reshape(%604, newshape=[]) /* ty=uint8 */;
  %610 = reshape(%605, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %611 = @func_2130(%606, %607, %608, %609, %610) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %612 = %611.8;
  %613 = cast(%612, dtype="uint16") /* ty=Tensor[(8, 7, 8), uint16] */;
  %614 = reshape(%613, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %615 = @func_5689(%614) /* ty=(Tensor[(448), float64], Tensor[(2145), bool]) */;
  %616 = @func_3712() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %617 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 336), uint8] */, dtype="float64") /* ty=Tensor[(2, 336), float64] */;
  %618 = cast(%var_5898, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %619 = cast(%var_5898, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %620 = @func_5227() /* ty=Tensor[(448), uint16] */;
  %621 = cast(%620, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %622 = reshape(%618, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), bool] */;
  %623 = reshape(%619, newshape=[12, 12, 8]) /* ty=Tensor[(12, 12, 8), bool] */;
  %624 = reshape(%621, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %625 = @func_3386(%622, %623, %624) /* ty=(Tensor[(12, 12, 8), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %626 = %600.0;
  %627 = %615.0;
  %628 = %616.0;
  %629 = log2(%617) /* ty=Tensor[(2, 336), float64] */;
  %630 = %625.1;
  (%626, %612, meta[relay.Constant][41] /* ty=Tensor[(448), uint64] */, %var_5845, meta[relay.Constant][42] /* ty=uint8 */, %627, %628, %620, %629, %630, %var_5898)
}

def @func_8663() -> (Tensor[(5, 5, 13), float32],) {
  @func_8661() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_3657() -> Tensor[(12, 11, 5), float64] {
  %632 = fn () -> Tensor[(12, 11, 5), float64] {
    %631 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
    %631.0
  };
  %632() /* ty=Tensor[(12, 11, 5), float64] */
}

def @func_11306() -> Tensor[(5, 5, 13), float32] {
  @func_11304() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_4087() -> (Tensor[(448), uint16],) {
  %634 = fn () -> (Tensor[(448), uint16],) {
    %633 = @func_3963() /* ty=Tensor[(448), uint16] */;
    (%633,)
  };
  %634() /* ty=(Tensor[(448), uint16],) */
}

def @func_2537() -> (Tensor[(5, 5, 13), float64],) {
  @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_4229() -> Tensor[(5, 5, 13), float32] {
  %635 = fn () -> Tensor[(5, 5, 13), float32] {
    @func_2905() /* ty=Tensor[(5, 5, 13), float32] */
  };
  %635() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_11619() -> (Tensor[(5, 5, 13), float32],) {
  @func_11617() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_769(%var_767: uint8, %var_768: Tensor[(7, 16, 6), uint8]) -> Tensor[(7, 16, 6), uint8] {
  @func_765(%var_767, %var_768) /* ty=Tensor[(7, 16, 6), uint8] */
}

def @func_10251() -> Tensor[(5, 5, 13), float64] {
  %636 = @func_7017() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %636.0
}

def @func_3754(%var_3752: Tensor[(448), uint16], %var_3753: Tensor[(2145), bool]) -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(5, 5, 13), float64]) {
  @func_3750(%var_3752, %var_3753) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(5, 5, 13), float64]) */
}

def @func_1804(%var_1780: uint8, %var_1788: Tensor[(448), uint16], %var_1797: Tensor[(13, 11), bool]) -> (Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(13, 11), bool], Tensor[(2145), bool]) {
  %637 = cast(%var_1780, dtype="uint8") /* ty=uint8 */;
  %638 = cast(meta[relay.Constant][44] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %639 = reshape(%637, newshape=[]) /* ty=uint8 */;
  %640 = reshape(%638, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint8] */;
  %641 = cast(%var_1788, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %642 = reshape(%641, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %643 = cast(%var_1797, dtype="bool") /* ty=Tensor[(13, 11), bool] */;
  %644 = cast(meta[relay.Constant][45] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %645 = reshape(%643, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), bool] */;
  %646 = reshape(%644, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %647 = @func_1204(%645, %646) /* ty=(Tensor[(15, 11, 13), bool],) */;
  %648 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %649 = @func_765(%639, %640) /* ty=Tensor[(7, 16, 6), uint8] */;
  %650 = @func_1320(%642) /* ty=Tensor[(8, 14, 4), uint16] */;
  %651 = %647.0;
  (%648, %649, %var_1780, meta[relay.Constant][44] /* ty=Tensor[(672), uint8] */, %650, %var_1788, %651, %var_1797, meta[relay.Constant][45] /* ty=Tensor[(2145), bool] */)
}

def @func_5254() -> Tensor[(5, 5, 13), float32] {
  @func_5252() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_2916() -> Tensor[(5, 5, 13), float32] {
  %652 = fn () -> Tensor[(5, 5, 13), float32] {
    @func_2905() /* ty=Tensor[(5, 5, 13), float32] */
  };
  %652() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_3666(%var_3658: Tensor[(3, 11, 12), float32]) -> Tensor[(3, 11, 12), float32] {
  %653 = cast(%var_3658, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
  acos(%653) /* ty=Tensor[(3, 11, 12), float32] */
}

def @func_3904() -> (Tensor[(5, 5, 13), float32],) {
  @func_3902() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_1323(%var_1321: Tensor[(8, 14, 4), uint16]) -> Tensor[(8, 14, 4), uint16] {
  @func_1320(%var_1321) /* ty=Tensor[(8, 14, 4), uint16] */
}

def @func_6575(%var_6574: Tensor[(11, 6, 9), float32]) -> (Tensor[(11, 6, 9), float32], Tensor[(5, 5, 13), float64]) {
  %661 = fn (%var_6554: Tensor[(11, 6, 9), float32]) -> (Tensor[(11, 6, 9), float32], Tensor[(5, 5, 13), float64]) {
    %654 = cast(%var_6554, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
    %655 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(11, 6, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %656 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 6, 9), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 9), float32] */;
    %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %658 = @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %659 = mod(%656, %657) /* ty=Tensor[(11, 6, 9), float32] */;
    %660 = %658.0;
    (%659, %660)
  };
  %661(%var_6574) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(5, 5, 13), float64]) */
}

def @func_2496() -> (Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) {
  @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */
}

def @func_2959(%var_2957: Tensor[(5, 5, 13), float64], %var_2958: float32) -> (Tensor[(5, 5, 13), float64], float32, Tensor[(198), float32], Tensor[(7, 16, 6), float64]) {
  %676 = fn (%var_2935: Tensor[(5, 5, 13), float64], %var_2947: float32) -> (Tensor[(5, 5, 13), float64], float32, Tensor[(198), float32], Tensor[(7, 16, 6), float64]) {
    %662 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
    %663 = cast(%var_2935, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
    %664 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
    %665 = cast(%662, dtype="float64") /* ty=Tensor[(5, 5, 13), float64] */;
    %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %667 = cast(%var_2947, dtype="float32") /* ty=float32 */;
    %668 = cast(meta[relay.Constant][47] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
    %669 = reshape(%667, newshape=[]) /* ty=float32 */;
    %670 = reshape(%668, newshape=[11, 3, 6]) /* ty=Tensor[(11, 3, 6), float32] */;
    %671 = @func_2865(%669, %670) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */;
    %672 = %671.1;
    %673 = cast(%672, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
    %674 = subtract(%665, %666) /* ty=Tensor[(5, 5, 13), float64] */;
    %675 = log2(%673) /* ty=Tensor[(7, 16, 6), float64] */;
    (%674, %var_2947, meta[relay.Constant][47] /* ty=Tensor[(198), float32] */, %675)
  };
  %676(%var_2957, %var_2958) /* ty=(Tensor[(5, 5, 13), float64], float32, Tensor[(198), float32], Tensor[(7, 16, 6), float64]) */
}

def @func_8034() -> (Tensor[(5, 5, 13), float32],) {
  @func_8032() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_4589(%var_4586: Tensor[(672, 1), uint8], %var_4587: Tensor[(624), float32], %var_4588: Tensor[(2, 312), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(672, 1), uint8], Tensor[(624), float32], Tensor[(660), float64], Tensor[(2, 312), uint32], Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32]) {
  %705 = fn (%var_4513: Tensor[(672, 1), uint8], %var_4525: Tensor[(624), float32], %var_4565: Tensor[(2, 312), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(672, 1), uint8], Tensor[(624), float32], Tensor[(660), float64], Tensor[(2, 312), uint32], Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32]) {
    %677 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %678 = cast(meta[relay.Constant][48] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %679 = cast(%var_4513, dtype="uint8") /* ty=Tensor[(672, 1), uint8] */;
    %680 = reshape(%678, newshape=[]) /* ty=uint8 */;
    %681 = reshape(%679, newshape=[672]) /* ty=Tensor[(672), uint8] */;
    %682 = @func_2808(%680, %681) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) */;
    %683 = cast(%var_4525, dtype="float32") /* ty=Tensor[(624), float32] */;
    %684 = cast(meta[relay.Constant][49] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
    %685 = reshape(%683, newshape=[624, 1]) /* ty=Tensor[(624, 1), float32] */;
    %686 = reshape(%684, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), float64] */;
    %687 = @func_3558(%685, %686) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(624, 1), float32], Tensor[(12, 11, 5), int8], Tensor[(5, 5, 13), float64]) */;
    %688 = %687.1;
    %689 = cast(meta[relay.Constant][48] /* ty=uint8 */, dtype="uint32") /* ty=uint32 */;
    %690 = cast(%688, dtype="uint32") /* ty=Tensor[(2, 312), uint32] */;
    %691 = @func_3046() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %692 = cast(%688, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
    %693 = acosh(%692) /* ty=Tensor[(2, 312), float32] */;
    %694 = cast(%var_4565, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
    %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(2), int32] */;
    %696 = cast(%693, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
    %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %698 = mod(%696, %697) /* ty=Tensor[(2, 312), float32] */;
    %699 = cast(%698, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
    %700 = %677.0;
    %701 = %682.2;
    %702 = left_shift(%689, %690) /* ty=Tensor[(2, 312), uint32] */;
    %703 = %691.0;
    %704 = asin(%699) /* ty=Tensor[(2, 312), float32] */;
    (%700, %701, %var_4513, %var_4525, meta[relay.Constant][49] /* ty=Tensor[(660), float64] */, %702, %703, %704)
  };
  %705(%var_4586, %var_4587, %var_4588) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(672, 1), uint8], Tensor[(624), float32], Tensor[(660), float64], Tensor[(2, 312), uint32], Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32]) */
}

def @func_11419() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %706 = @func_10218() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 160), float32]) */;
  %707 = @func_8090() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16]) */;
  %708 = %706.2;
  %709 = %707.1;
  (%708, %709)
}

def @func_2730(%var_2728: Tensor[(2, 312), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) {
  @func_2727(%var_2728) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */
}

def @func_8228(%var_8225: Tensor[(672), uint8], %var_8226: Tensor[(8, 56), uint16], %var_8227: Tensor[(8, 56), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(5, 5, 13), float64], Tensor[(8, 56), bool]) {
  %725 = fn (%var_8207: Tensor[(672), uint8], %var_8208: Tensor[(8, 56), uint16], %var_8214: Tensor[(8, 56), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(5, 5, 13), float64], Tensor[(8, 56), bool]) {
    %710 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %711 = cast(%var_8207, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %712 = cast(%var_8208, dtype="uint16") /* ty=Tensor[(8, 56), uint16] */;
    %713 = reshape(%711, newshape=[672]) /* ty=Tensor[(672), uint8] */;
    %714 = reshape(%712, newshape=[448]) /* ty=Tensor[(448), uint16] */;
    %715 = @func_4918(%713, %714) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(2912), int16], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(624), float32], int32, Tensor[(7, 9, 9), int8], Tensor[(567), int8], Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(448), uint16], Tensor[(672, 143), float32]) */;
    %716 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %717 = cast(%var_8214, dtype="bool") /* ty=Tensor[(8, 56), bool] */;
    %718 = shape_of(%var_8208, dtype="int32") /* ty=Tensor[(2), int32] */;
    %719 = cast(%var_8208, dtype="bool") /* ty=Tensor[(8, 56), bool] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %721 = %710.0;
    %722 = %715.0;
    %723 = %716.0;
    %724 = logical_or(%719, %720) /* ty=Tensor[(8, 56), bool] */;
    (%721, %722, %var_8207, %723, %724)
  };
  %725(%var_8225, %var_8226, %var_8227) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(672), uint8], Tensor[(5, 5, 13), float64], Tensor[(8, 56), bool]) */
}

def @func_5445() -> Tensor[(5, 5, 13), float64] {
  %726 = fn () -> Tensor[(5, 5, 13), float64] {
    @func_3774() /* ty=Tensor[(5, 5, 13), float64] */
  };
  %726() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_10078() -> (Tensor[(448), uint16], Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64]) {
  %727 = cast(meta[relay.Constant][50] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %728 = reshape(%727, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %729 = @func_6295(%728) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(3, 16, 13), float32]) */;
  %730 = @func_9005() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) */;
  %731 = @func_7017() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %732 = @func_5227() /* ty=Tensor[(448), uint16] */;
  %733 = %729.0;
  %734 = %730.0;
  %735 = %731.0;
  (%732, %733, meta[relay.Constant][50] /* ty=Tensor[(624), float32] */, %734, %735)
}

def @func_3390(%var_3387: Tensor[(12, 12, 8), bool], %var_3388: Tensor[(12, 12, 8), bool], %var_3389: Tensor[(448), uint16]) -> (Tensor[(12, 12, 8), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %745 = fn (%var_3349: Tensor[(12, 12, 8), bool], %var_3350: Tensor[(12, 12, 8), bool], %var_3361: Tensor[(448), uint16]) -> (Tensor[(12, 12, 8), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
    %736 = cast(%var_3350, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
    %737 = shape_of(%var_3349, dtype="int32") /* ty=Tensor[(3), int32] */;
    %738 = cast(%var_3349, dtype="bool") /* ty=Tensor[(12, 12, 8), bool] */;
    %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %740 = cast(%var_3361, dtype="uint16") /* ty=Tensor[(448), uint16] */;
    %741 = reshape(%740, newshape=[448]) /* ty=Tensor[(448), uint16] */;
    %742 = @func_1917(%741) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
    %743 = logical_and(%738, %739) /* ty=Tensor[(12, 12, 8), bool] */;
    %744 = %742.1;
    (%743, %744, %var_3361)
  };
  %745(%var_3387, %var_3388, %var_3389) /* ty=(Tensor[(12, 12, 8), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */
}

def @func_10969() -> (Tensor[(5, 5, 13), float64],) {
  %748 = fn () -> (Tensor[(5, 5, 13), float64],) {
    %746 = @func_10914() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %747 = %746.0;
    (%747,)
  };
  %748() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_6265() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %749 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %750 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %751 = %749.0;
  %752 = %750.0;
  (%751, %752)
}

def @func_9007() -> (Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) {
  @func_9005() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) */
}

def @func_11304() -> Tensor[(5, 5, 13), float32] {
  %753 = @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %753.1
}

def @func_8940() -> Tensor[(5, 5, 13), float64] {
  %754 = @func_7298() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %754.0
}

def @func_5330() -> (Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) {
  %755 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %756 = cast(-9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %757 = cast(meta[relay.Constant][51] /* ty=Tensor[(243), int32] */, dtype="int32") /* ty=Tensor[(243), int32] */;
  %758 = reshape(%756, newshape=[]) /* ty=int32 */;
  %759 = reshape(%757, newshape=[3, 9, 9]) /* ty=Tensor[(3, 9, 9), int32] */;
  %760 = cast(meta[relay.Constant][51] /* ty=Tensor[(243), int32] */, dtype="float32") /* ty=Tensor[(243), float32] */;
  %761 = %755.0;
  %762 = @func_4133(%758, %759) /* ty=Tensor[(3, 9, 9), bool] */;
  %763 = atanh(%760) /* ty=Tensor[(243), float32] */;
  (%761, %762, -9 /* ty=int32 */, %763)
}

def @func_9970(%var_9933: Tensor[(4, 7, 4), int16], %var_9948: Tensor[(567), int8]) -> (Tensor[(4, 7, 4), int16], Tensor[(143), bool], Tensor[(7, 9, 9), int8], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(234), float32], Tensor[(567), float64], Tensor[(4, 7, 4), float64]) {
  %764 = cast(meta[relay.Constant][52] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %765 = cast(%var_9933, dtype="int16") /* ty=Tensor[(4, 7, 4), int16] */;
  %766 = @func_8314() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(143), bool]) */;
  %767 = cast(%var_9948, dtype="int8") /* ty=Tensor[(567), int8] */;
  %768 = reshape(%767, newshape=[567]) /* ty=Tensor[(567), int8] */;
  %769 = @func_9120(%768) /* ty=(Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float32], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) */;
  %770 = @func_7017() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %771 = cast(meta[relay.Constant][53] /* ty=Tensor[(234), float32] */, dtype="float32") /* ty=Tensor[(234), float32] */;
  %772 = reshape(%771, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), float32] */;
  %773 = @func_3265(%772) /* ty=(Tensor[(13, 2, 9), float32], Tensor[(5, 5, 13), float64]) */;
  %774 = cast(%var_9948, dtype="float64") /* ty=Tensor[(567), float64] */;
  %775 = cast(%var_9933, dtype="float64") /* ty=Tensor[(4, 7, 4), float64] */;
  %776 = right_shift(%764, %765) /* ty=Tensor[(4, 7, 4), int16] */;
  %777 = %766.1;
  %778 = %769.2;
  %779 = %770.0;
  %780 = %773.1;
  %781 = cosh(%774) /* ty=Tensor[(567), float64] */;
  %782 = acosh(%775) /* ty=Tensor[(4, 7, 4), float64] */;
  (%776, %777, %778, %779, %780, meta[relay.Constant][53] /* ty=Tensor[(234), float32] */, %781, %782)
}

def @func_5040() -> Tensor[(5, 5, 13), float32] {
  %784 = fn () -> Tensor[(5, 5, 13), float32] {
    %783 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %783.0
  };
  %784() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_7055() -> (Tensor[(448), uint16],) {
  %785 = @func_3963() /* ty=Tensor[(448), uint16] */;
  (%785,)
}

def @func_4825() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) {
  @func_4823() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) */
}

def @func_7840(%var_7838: Tensor[(2, 3, 15), uint8], %var_7839: Tensor[(2, 3, 15), uint8]) -> (Tensor[(2, 3, 15), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  %794 = fn (%var_7810: Tensor[(2, 3, 15), uint8], %var_7811: Tensor[(2, 3, 15), uint8]) -> (Tensor[(2, 3, 15), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
    %786 = cast(%var_7811, dtype="bool") /* ty=Tensor[(2, 3, 15), bool] */;
    %787 = shape_of(%var_7810, dtype="int32") /* ty=Tensor[(3), int32] */;
    %788 = cast(%var_7810, dtype="bool") /* ty=Tensor[(2, 3, 15), bool] */;
    %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %790 = cast(meta[relay.Constant][54] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
    %791 = reshape(%790, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
    %792 = greater_equal(%788, %789) /* ty=Tensor[(2, 3, 15), bool] */;
    %793 = @func_1320(%791) /* ty=Tensor[(8, 14, 4), uint16] */;
    (%792, %793, meta[relay.Constant][54] /* ty=Tensor[(448), uint16] */)
  };
  %794(%var_7838, %var_7839) /* ty=(Tensor[(2, 3, 15), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */
}

def @func_9836() -> (Tensor[(6, 8, 12), bool], Tensor[(5, 5, 13), float32], Tensor[(448), uint16]) {
  %795 = cast(meta[relay.Constant][56] /* ty=Tensor[(6, 8, 12), float32] */, dtype="bool") /* ty=Tensor[(6, 8, 12), bool] */;
  %796 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(6, 8, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 8, 12), float32] */, dtype="bool") /* ty=Tensor[(6, 8, 12), bool] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %799 = @func_8090() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16]) */;
  %800 = @func_3634() /* ty=(Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %801 = less(%797, %798) /* ty=Tensor[(6, 8, 12), bool] */;
  %802 = %799.1;
  %803 = %800.2;
  (%801, %802, %803)
}

def @func_2778() -> (Tensor[(5, 5, 13), float64],) {
  @func_2776() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_9500() -> (Tensor[(5, 5, 13), float32], Tensor[(3, 16, 13), float32], Tensor[(264), int32], Tensor[(624), float64]) {
  @func_9498() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(3, 16, 13), float32], Tensor[(264), int32], Tensor[(624), float64]) */
}

def @func_9974(%var_9972: Tensor[(4, 7, 4), int16], %var_9973: Tensor[(567), int8]) -> (Tensor[(4, 7, 4), int16], Tensor[(143), bool], Tensor[(7, 9, 9), int8], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(234), float32], Tensor[(567), float64], Tensor[(4, 7, 4), float64]) {
  @func_9970(%var_9972, %var_9973) /* ty=(Tensor[(4, 7, 4), int16], Tensor[(143), bool], Tensor[(7, 9, 9), int8], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(234), float32], Tensor[(567), float64], Tensor[(4, 7, 4), float64]) */
}

def @func_6298(%var_6296: Tensor[(624), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(3, 16, 13), float32]) {
  @func_6295(%var_6296) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(624), float32], Tensor[(3, 16, 13), float32]) */
}

def @func_7300() -> (Tensor[(5, 5, 13), float64],) {
  @func_7298() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_6754(%var_6753: Tensor[(5, 5, 13), float32]) -> (Tensor[(5, 5, 13), uint64], Tensor[(5, 5, 13), float32]) {
  %812 = fn (%var_6741: Tensor[(5, 5, 13), float32]) -> (Tensor[(5, 5, 13), uint64], Tensor[(5, 5, 13), float32]) {
    %804 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
    %805 = cast(%var_6741, dtype="uint64") /* ty=Tensor[(5, 5, 13), uint64] */;
    %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
    %807 = cast(%804, dtype="uint64") /* ty=Tensor[(5, 5, 13), uint64] */;
    %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %809 = @func_4823() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) */;
    %810 = bitwise_or(%807, %808) /* ty=Tensor[(5, 5, 13), uint64] */;
    %811 = %809.0;
    (%810, %811)
  };
  %812(%var_6753) /* ty=(Tensor[(5, 5, 13), uint64], Tensor[(5, 5, 13), float32]) */
}

def @func_7592(%var_7587: Tensor[(672), int16]) -> (Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(5, 5, 13), float32]) {
  %813 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %814 = cast(%var_7587, dtype="int16") /* ty=Tensor[(672), int16] */;
  %815 = reshape(%814, newshape=[14, 12, 4]) /* ty=Tensor[(14, 12, 4), int16] */;
  %816 = @func_2176(%815) /* ty=(Tensor[(14, 12, 4), bool],) */;
  %817 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %818 = %813.0;
  %819 = %816.0;
  %820 = %817.0;
  (%818, %819, %var_7587, %820)
}

def @func_9335() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %821 = @func_3341() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %822 = @func_7027() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %823 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
  %824 = %821.0;
  %825 = %822.0;
  (%823, %824, %825)
}

def @func_9005() -> (Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) {
  %826 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %827 = cast(meta[relay.Constant][57] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %828 = cast(meta[relay.Constant][57] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %829 = reshape(%827, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %830 = reshape(%828, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
  %831 = @func_900(%829, %830) /* ty=(Tensor[(13, 15, 5), int16],) */;
  %832 = %826.0;
  %833 = %831.0;
  (%832, %833, meta[relay.Constant][57] /* ty=Tensor[(975), int16] */)
}

def @func_9232() -> Tensor[(5, 5, 13), float32] {
  %835 = fn () -> Tensor[(5, 5, 13), float32] {
    %834 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %834.0
  };
  %835() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_3636() -> (Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  @func_3634() /* ty=(Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */
}

def @func_9671() -> (Tensor[(5, 5, 13), float32],) {
  %836 = @func_5252() /* ty=Tensor[(5, 5, 13), float32] */;
  (%836,)
}

def @func_1809(%var_1806: uint8, %var_1807: Tensor[(448), uint16], %var_1808: Tensor[(13, 11), bool]) -> (Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(13, 11), bool], Tensor[(2145), bool]) {
  @func_1804(%var_1806, %var_1807, %var_1808) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(13, 11), bool], Tensor[(2145), bool]) */
}

def @func_6544(%var_6543: Tensor[(6, 14, 8), int64]) -> (Tensor[(6, 14, 8), bool],) {
  %842 = fn (%var_6534: Tensor[(6, 14, 8), int64]) -> (Tensor[(6, 14, 8), bool],) {
    %837 = cast(%var_6534, dtype="bool") /* ty=Tensor[(6, 14, 8), bool] */;
    %838 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(6, 14, 8), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 14, 8), int64] */, dtype="bool") /* ty=Tensor[(6, 14, 8), bool] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %841 = less(%839, %840) /* ty=Tensor[(6, 14, 8), bool] */;
    (%841,)
  };
  %842(%var_6543) /* ty=(Tensor[(6, 14, 8), bool],) */
}

def @func_1760() -> Tensor[(5, 5, 13), float64] {
  @func_1758() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_4383() -> Tensor[(5, 5, 13), float32] {
  %844 = fn () -> Tensor[(5, 5, 13), float32] {
    %843 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %843.0
  };
  %844() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_9931() -> Tensor[(5, 5, 13), float32] {
  %846 = fn () -> Tensor[(5, 5, 13), float32] {
    %845 = @func_9836() /* ty=(Tensor[(6, 8, 12), bool], Tensor[(5, 5, 13), float32], Tensor[(448), uint16]) */;
    %845.1
  };
  %846() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_9390() -> Tensor[(448), uint64] {
  @func_9388() /* ty=Tensor[(448), uint64] */
}

def @func_903(%var_901: Tensor[(13, 15, 5), int16], %var_902: Tensor[(13, 15, 5), int16]) -> (Tensor[(13, 15, 5), int16],) {
  %852 = fn (%var_892: Tensor[(13, 15, 5), int16], %var_893: Tensor[(13, 15, 5), int16]) -> (Tensor[(13, 15, 5), int16],) {
    %847 = cast(%var_893, dtype="int16") /* ty=Tensor[(13, 15, 5), int16] */;
    %848 = shape_of(%var_892, dtype="int32") /* ty=Tensor[(3), int32] */;
    %849 = cast(%var_892, dtype="int16") /* ty=Tensor[(13, 15, 5), int16] */;
    %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %851 = bitwise_or(%849, %850) /* ty=Tensor[(13, 15, 5), int16] */;
    (%851,)
  };
  %852(%var_901, %var_902) /* ty=(Tensor[(13, 15, 5), int16],) */
}

def @func_5788(%var_5736: Tensor[(8, 14, 16), uint64], %var_5737: Tensor[(8, 14, 16), uint64], %var_5750: uint8, %var_5751: Tensor[(168, 4), uint8]) -> (Tensor[(8, 14, 16), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(168, 4), uint8], Tensor[(672), uint8], Tensor[(448), uint64], Tensor[(2145), float64]) {
  %853 = cast(%var_5737, dtype="bool") /* ty=Tensor[(8, 14, 16), bool] */;
  %854 = shape_of(%var_5736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%var_5736, dtype="bool") /* ty=Tensor[(8, 14, 16), bool] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %857 = cast(%var_5750, dtype="uint8") /* ty=uint8 */;
  %858 = cast(%var_5751, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %859 = reshape(%857, newshape=[]) /* ty=uint8 */;
  %860 = reshape(%858, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint8] */;
  %861 = cast(meta[relay.Constant][59] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %862 = cast(meta[relay.Constant][59] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %863 = cast(meta[relay.Constant][60] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %864 = cast(%var_5750, dtype="uint8") /* ty=uint8 */;
  %865 = cast(%var_5751, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %866 = reshape(%861, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %867 = reshape(%862, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %868 = reshape(%863, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %869 = reshape(%864, newshape=[]) /* ty=uint8 */;
  %870 = reshape(%865, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %871 = @func_2130(%866, %867, %868, %869, %870) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %872 = cast(meta[relay.Constant][60] /* ty=Tensor[(2145), bool] */, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %873 = less_equal(%855, %856) /* ty=Tensor[(8, 14, 16), bool] */;
  %874 = @func_765(%859, %860) /* ty=Tensor[(7, 16, 6), uint8] */;
  %875 = %871.7;
  %876 = acosh(%872) /* ty=Tensor[(2145), float64] */;
  (%873, %874, %var_5750, %var_5751, %875, meta[relay.Constant][59] /* ty=Tensor[(448), uint64] */, %876)
}

def @func_7028() -> (Tensor[(5, 5, 13), float32],) {
  %878 = fn () -> (Tensor[(5, 5, 13), float32],) {
    %877 = @func_4228() /* ty=Tensor[(5, 5, 13), float32] */;
    (%877,)
  };
  %878() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_11063(%var_11056: Tensor[(8, 78), float32]) -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(8, 78), float32]) {
  %879 = @func_10218() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 160), float32]) */;
  %880 = cast(%var_11056, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
  %881 = reshape(%880, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %882 = @func_2727(%881) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */;
  %883 = @func_9930() /* ty=Tensor[(5, 5, 13), float32] */;
  %884 = %879.1;
  %885 = %882.3;
  (%883, %884, %885, %var_11056)
}

def @func_6680() -> (Tensor[(5, 5, 13), float64],) {
  %886 = @func_5444() /* ty=Tensor[(5, 5, 13), float64] */;
  (%886,)
}

def @main(%var_11942: Tensor[(16, 4, 15), float64]) -> (Tensor[(11, 6, 14), float64], Tensor[(264), int32], Tensor[(6, 12, 4), int32], Tensor[(288), uint16], Tensor[(16, 4, 15), float32]) {
  %887 = @func_10013() /* ty=(Tensor[(264), int32],) */;
  %888 = cast(meta[relay.Constant][61] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %889 = cast(meta[relay.Constant][61] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %890 = reshape(%888, newshape=[6, 12, 4]) /* ty=Tensor[(6, 12, 4), uint16] */;
  %891 = reshape(%889, newshape=[6, 12, 4]) /* ty=Tensor[(6, 12, 4), uint16] */;
  %892 = @func_9762(%890, %891) /* ty=(Tensor[(6, 12, 4), bool], Tensor[(6, 12, 4), int32]) */;
  %893 = cast(%var_11942, dtype="float64") /* ty=Tensor[(16, 4, 15), float64] */;
  %894 = log2(%893) /* ty=Tensor[(16, 4, 15), float64] */;
  %895 = cast(%var_11942, dtype="float32") /* ty=Tensor[(16, 4, 15), float32] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%894, dtype="float32") /* ty=Tensor[(16, 4, 15), float32] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %899 = @func_9854() /* ty=Tensor[(11, 6, 14), float64] */;
  %900 = %887.0;
  %901 = %892.1;
  %902 = divide(%897, %898) /* ty=Tensor[(16, 4, 15), float32] */;
  (%899, %900, %901, meta[relay.Constant][61] /* ty=Tensor[(288), uint16] */, %902)
}

def @func_3268(%var_3266: Tensor[(13, 2, 9), float32]) -> (Tensor[(13, 2, 9), float32], Tensor[(5, 5, 13), float64]) {
  @func_3265(%var_3266) /* ty=(Tensor[(13, 2, 9), float32], Tensor[(5, 5, 13), float64]) */
}

def @func_10013() -> (Tensor[(264), int32],) {
  %905 = fn () -> (Tensor[(264), int32],) {
    %903 = @func_7213() /* ty=(Tensor[(16, 10, 6), float64], Tensor[(2, 11, 12), float32], Tensor[(264), int32], Tensor[(624), float32], Tensor[(5, 5, 13), float32]) */;
    %904 = %903.2;
    (%904,)
  };
  %905() /* ty=(Tensor[(264), int32],) */
}

def @func_1659(%var_1622: Tensor[(1, 4, 6), uint16], %var_1642: Tensor[(2145), bool], %var_1646: Tensor[(448), uint16]) -> (Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) {
  %906 = cast(meta[relay.Constant][62] /* ty=Tensor[(143), bool] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %907 = cast(%var_1642, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %908 = reshape(%906, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), bool] */;
  %909 = reshape(%907, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %910 = @func_1204(%908, %909) /* ty=(Tensor[(15, 11, 13), bool],) */;
  %911 = cast(%var_1646, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %912 = reshape(%911, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), uint16] */;
  %913 = cast(%var_1622, dtype="uint64") /* ty=Tensor[(1, 4, 6), uint64] */;
  %914 = cast(meta[relay.Constant][63] /* ty=uint16 */, dtype="uint64") /* ty=uint64 */;
  %915 = multiply(%913, %914) /* ty=Tensor[(1, 4, 6), uint64] */;
  %916 = cast(%915, dtype="uint32") /* ty=Tensor[(1, 4, 6), uint32] */;
  %917 = cast(meta[relay.Constant][63] /* ty=uint16 */, dtype="uint32") /* ty=uint32 */;
  %918 = cast(meta[relay.Constant][63] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %919 = cast(%var_1622, dtype="uint16") /* ty=Tensor[(1, 4, 6), uint16] */;
  %920 = minimum(%918, %919) /* ty=Tensor[(1, 4, 6), uint16] */;
  %921 = cast(%var_1622, dtype="int64") /* ty=Tensor[(1, 4, 6), int64] */;
  %922 = shape_of(%920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %923 = cast(%920, dtype="int64") /* ty=Tensor[(1, 4, 6), int64] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %925 = %910.0;
  %926 = @func_1320(%912) /* ty=Tensor[(8, 14, 4), uint16] */;
  %927 = logical_xor(%916, %917) /* ty=Tensor[(1, 4, 6), uint32] */;
  %928 = add(%923, %924) /* ty=Tensor[(?, 4, 6), int64] */;
  (%925, meta[relay.Constant][62] /* ty=Tensor[(143), bool] */, %var_1642, %926, %var_1646, %927, %928)
}

def @func_3179(%var_3175: Tensor[(13, 14, 16), int16], %var_3176: Tensor[(13, 14, 16), int16], %var_3177: float32, %var_3178: Tensor[(198), float32]) -> (Tensor[(13, 14, 16), int16], Tensor[(672), uint8], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_3173(%var_3175, %var_3176, %var_3177, %var_3178) /* ty=(Tensor[(13, 14, 16), int16], Tensor[(672), uint8], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_7893(%var_7883: Tensor[(594, 1), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(11, 6, 9), float32], Tensor[(594, 1), float32]) {
  %929 = @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %930 = cast(%var_7883, dtype="float32") /* ty=Tensor[(594, 1), float32] */;
  %931 = reshape(%930, newshape=[11, 6, 9]) /* ty=Tensor[(11, 6, 9), float32] */;
  %932 = @func_6573(%931) /* ty=(Tensor[(11, 6, 9), float32], Tensor[(5, 5, 13), float64]) */;
  %933 = %929.0;
  %934 = %932.0;
  (%933, %934, %var_7883)
}

def @func_9087() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %935 = @func_8032() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %936 = @func_9031() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64]) */;
  %937 = %935.0;
  %938 = %936.0;
  (%937, %938)
}

def @func_3669(%var_3667: Tensor[(3, 11, 12), float32]) -> Tensor[(3, 11, 12), float32] {
  @func_3666(%var_3667) /* ty=Tensor[(3, 11, 12), float32] */
}

def @func_9855() -> Tensor[(11, 6, 14), float64] {
  %940 = fn () -> Tensor[(11, 6, 14), float64] {
    %939 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 6, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
    acos(%939) /* ty=Tensor[(11, 6, 14), float64] */
  };
  %940() /* ty=Tensor[(11, 6, 14), float64] */
}

def @func_10218() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 160), float32]) {
  %941 = @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */;
  %942 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 160), float32] */, dtype="float32") /* ty=Tensor[(14, 160), float32] */;
  %943 = reshape(%942, newshape=[280, 8]) /* ty=Tensor[(280, 8), float32] */;
  %944 = @func_9464(%943) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(280, 8), float32]) */;
  %945 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %946 = %941.0;
  %947 = @func_4228() /* ty=Tensor[(5, 5, 13), float32] */;
  %948 = @func_9930() /* ty=Tensor[(5, 5, 13), float32] */;
  %949 = %944.0;
  (%945, %946, %947, %948, %949, meta[relay.Constant][65] /* ty=Tensor[(14, 160), float32] */)
}

def @func_2727(%var_2686: Tensor[(2, 312), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) {
  %950 = cast(%var_2686, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %951 = cast(%var_2686, dtype="float32") /* ty=Tensor[(2, 312), float32] */;
  %952 = reshape(%950, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %953 = reshape(%951, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %954 = @func_2040(%952, %953) /* ty=(Tensor[(3, 16, 13), float32],) */;
  %955 = %954.0;
  %956 = cast(%955, dtype="float64") /* ty=Tensor[(3, 16, 13), float64] */;
  %957 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %958 = rsqrt(%956) /* ty=Tensor[(3, 16, 13), float64] */;
  %959 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  (%957, %var_2686, %958, %959)
}

def @func_8090() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16]) {
  %960 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %961 = cast(meta[relay.Constant][66] /* ty=Tensor[(672), int16] */, dtype="int16") /* ty=Tensor[(672), int16] */;
  %962 = reshape(%961, newshape=[14, 12, 4]) /* ty=Tensor[(14, 12, 4), int16] */;
  %963 = @func_2176(%962) /* ty=(Tensor[(14, 12, 4), bool],) */;
  %964 = %960.0;
  %965 = @func_6390() /* ty=Tensor[(5, 5, 13), float32] */;
  %966 = %963.0;
  (%964, %965, %966, meta[relay.Constant][66] /* ty=Tensor[(672), int16] */)
}

def @func_8785() -> (Tensor[(12, 11, 5), float64],) {
  %967 = @func_3634() /* ty=(Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %968 = %967.0;
  %969 = cast(%968, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %970 = exp(%969) /* ty=Tensor[(12, 11, 5), float64] */;
  (%970,)
}

def @func_8560() -> Tensor[(5, 5, 13), float64] {
  @func_8558() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_11772() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %971 = @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %972 = @func_8881() /* ty=Tensor[(5, 5, 13), float32] */;
  %973 = %971.1;
  (%972, %973)
}

def @func_9337() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_9335() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_10331() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_10329() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_2061() -> (Tensor[(5, 5, 13), float64],) {
  %975 = fn () -> (Tensor[(5, 5, 13), float64],) {
    %974 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
    (%974,)
  };
  %975() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_9498() -> (Tensor[(5, 5, 13), float32], Tensor[(3, 16, 13), float32], Tensor[(264), int32], Tensor[(624), float64]) {
  %976 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %977 = cast(meta[relay.Constant][67] /* ty=Tensor[(264), int32] */, dtype="int32") /* ty=Tensor[(264), int32] */;
  %978 = cast(meta[relay.Constant][67] /* ty=Tensor[(264), int32] */, dtype="int32") /* ty=Tensor[(264), int32] */;
  %979 = cast(meta[relay.Constant][68] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %980 = reshape(%977, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), int32] */;
  %981 = reshape(%978, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), int32] */;
  %982 = reshape(%979, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %983 = @func_6905(%980, %981, %982) /* ty=(Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(2, 11, 12), float32]) */;
  %984 = cast(meta[relay.Constant][68] /* ty=Tensor[(624), float32] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %985 = %976.0;
  %986 = %983.0;
  %987 = cos(%984) /* ty=Tensor[(624), float64] */;
  (%985, %986, meta[relay.Constant][67] /* ty=Tensor[(264), int32] */, %987)
}

def @func_6476() -> (Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) {
  %996 = fn () -> (Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) {
    %988 = @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */;
    %989 = cast(meta[relay.Constant][69] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
    %990 = cast(meta[relay.Constant][69] /* ty=Tensor[(975), int16] */, dtype="int16") /* ty=Tensor[(975), int16] */;
    %991 = reshape(%989, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
    %992 = reshape(%990, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), int16] */;
    %993 = @func_900(%991, %992) /* ty=(Tensor[(13, 15, 5), int16],) */;
    %994 = %988.0;
    %995 = %993.0;
    (%994, %995, meta[relay.Constant][69] /* ty=Tensor[(975), int16] */)
  };
  %996() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) */
}

def @func_4918(%var_4890: Tensor[(672), uint8], %var_4898: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(2912), int16], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(624), float32], int32, Tensor[(7, 9, 9), int8], Tensor[(567), int8], Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(448), uint16], Tensor[(672, 143), float32]) {
  %997 = @func_4639() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %998 = @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */;
  %999 = @func_3341() /* ty=(Tensor[(5, 5, 13), float32],) */;
  %1000 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1001 = reshape(%1000, newshape=[]) /* ty=int32 */;
  %1002 = @func_4489(%1001) /* ty=(Tensor[(5, 5, 13), float64], int32, Tensor[(1, 243), int32], Tensor[(3, 9, 9), float32], Tensor[(2, 312), float32], Tensor[(624), float32]) */;
  %1003 = cast(meta[relay.Constant][70] /* ty=Tensor[(567), int8] */, dtype="int8") /* ty=Tensor[(567), int8] */;
  %1004 = reshape(%1003, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int8] */;
  %1005 = cast(-5 /* ty=int32 */, dtype="uint8") /* ty=uint8 */;
  %1006 = cast(%var_4898, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1007 = cast(meta[relay.Constant][71] /* ty=Tensor[(143), bool] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %1008 = reshape(%1005, newshape=[]) /* ty=uint8 */;
  %1009 = reshape(%1006, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1010 = reshape(%1007, newshape=[13, 11]) /* ty=Tensor[(13, 11), bool] */;
  %1011 = @func_1804(%1008, %1009, %1010) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(13, 11), bool], Tensor[(2145), bool]) */;
  %1012 = cast(%var_4890, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1013 = %1002.5;
  %1014 = cast(%1013, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1015 = cast(%1013, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1016 = reshape(%1012, newshape=[672, 1]) /* ty=Tensor[(672, 1), uint8] */;
  %1017 = reshape(%1014, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1018 = reshape(%1015, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %1019 = @func_4585(%1016, %1017, %1018) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(672, 1), uint8], Tensor[(624), float32], Tensor[(660), float64], Tensor[(2, 312), uint32], Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32]) */;
  %1020 = %1019.2;
  %1021 = cast(meta[relay.Constant][71] /* ty=Tensor[(143), bool] */, dtype="float32") /* ty=Tensor[(143), float32] */;
  %1022 = cast(%1020, dtype="float32") /* ty=Tensor[(672, 1), float32] */;
  %1023 = %997.0;
  %1024 = %998.3;
  %1025 = %999.0;
  %1026 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
  %1027 = @func_180(%1004) /* ty=Tensor[(7, 9, 9), int8] */;
  %1028 = %1011.6;
  %1029 = minimum(%1021, %1022) /* ty=Tensor[(672, 143), float32] */;
  (%1023, %1024, %1025, %1026, %1013, -5 /* ty=int32 */, %1027, meta[relay.Constant][70] /* ty=Tensor[(567), int8] */, %var_4890, %1028, %var_4898, %1029)
}

def @func_3342() -> (Tensor[(5, 5, 13), float32],) {
  %1032 = fn () -> (Tensor[(5, 5, 13), float32],) {
    %1030 = @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %1031 = %1030.0;
    (%1031,)
  };
  %1032() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_8092() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16]) {
  @func_8090() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16]) */
}

def @func_10735() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  %1036 = fn () -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
    %1033 = @func_8661() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %1034 = @func_5444() /* ty=Tensor[(5, 5, 13), float64] */;
    %1035 = %1033.0;
    (%1034, %1035)
  };
  %1036() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) */
}

def @func_6434() -> Tensor[(5, 5, 13), bool] {
  %1043 = fn () -> Tensor[(5, 5, 13), bool] {
    %1037 = @func_5182() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %1038 = %1037.0;
    %1039 = cast(meta[relay.Constant][72] /* ty=Tensor[(5, 5, 13), float64] */, dtype="bool") /* ty=Tensor[(5, 5, 13), bool] */;
    %1040 = shape_of(%1038, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1041 = cast(%1038, dtype="bool") /* ty=Tensor[(5, 5, 13), bool] */;
    %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%1041, %1042) /* ty=Tensor[(5, 5, 13), bool] */
  };
  %1043() /* ty=Tensor[(5, 5, 13), bool] */
}

def @func_5227() -> Tensor[(448), uint16] {
  %1044 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
  %1044.2
}

def @func_3326(%var_3323: float32, %var_3324: Tensor[(2, 1, 10), float32], %var_3325: Tensor[(975), int16]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) {
  @func_3321(%var_3323, %var_3324, %var_3325) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, ?, 10), bool], Tensor[(13, 15, 5), int16], Tensor[(975), int16], Tensor[(11, 3, 6), float32], Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(198), float32]) */
}

def @func_4823() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(2145), bool]) {
  %1045 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1046 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
  %1047 = @func_4382() /* ty=Tensor[(5, 5, 13), float32] */;
  %1048 = %1045.0;
  %1049 = %1046.1;
  (%1047, %1048, %1049)
}

def @func_6614(%var_6612: uint8) -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], uint8, Tensor[(168, 4), uint8]) {
  @func_6611(%var_6612) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], uint8, Tensor[(168, 4), uint8]) */
}

def @func_4922(%var_4920: Tensor[(672), uint8], %var_4921: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float32], Tensor[(2912), int16], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(624), float32], int32, Tensor[(7, 9, 9), int8], Tensor[(567), int8], Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(448), uint16], Tensor[(672, 143), float32]) {
  @func_4918(%var_4920, %var_4921) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(2912), int16], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32], Tensor[(624), float32], int32, Tensor[(7, 9, 9), int8], Tensor[(567), int8], Tensor[(672), uint8], Tensor[(15, 11, 13), bool], Tensor[(448), uint16], Tensor[(672, 143), float32]) */
}

def @func_5182() -> (Tensor[(5, 5, 13), float64],) {
  %1050 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_3750(%var_3731: Tensor[(448), uint16], %var_3737: Tensor[(2145), bool]) -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(5, 5, 13), float64]) {
  %1052 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1053 = cast(%var_3731, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1054 = reshape(%1053, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1055 = @func_3430(%1054) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %1056 = cast(meta[relay.Constant][73] /* ty=Tensor[(143), bool] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %1057 = cast(%var_3737, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1058 = reshape(%1056, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), bool] */;
  %1059 = reshape(%1057, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %1060 = @func_1204(%1058, %1059) /* ty=(Tensor[(15, 11, 13), bool],) */;
  %1061 = cast(%var_3731, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1062 = reshape(%1061, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1063 = @func_3430(%1062) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %1064 = %1052.0;
  %1065 = %1055.0;
  %1066 = %1060.0;
  %1067 = %1063.0;
  (%1064, %1065, %var_3731, %1066, meta[relay.Constant][73] /* ty=Tensor[(143), bool] */, %var_3737, %1067)
}

def @func_11280() -> (Tensor[(5, 5, 13), float32], Tensor[(12, 2), uint16], Tensor[(448), uint64], Tensor[(2145), bool], uint8, Tensor[(672), uint8]) {
  %1068 = @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1069 = cast(meta[relay.Constant][74] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %1070 = cast(meta[relay.Constant][74] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %1071 = cast(meta[relay.Constant][75] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1072 = cast(meta[relay.Constant][76] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1073 = cast(meta[relay.Constant][77] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1074 = reshape(%1069, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %1075 = reshape(%1070, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), uint64] */;
  %1076 = reshape(%1071, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %1077 = reshape(%1072, newshape=[]) /* ty=uint8 */;
  %1078 = reshape(%1073, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %1079 = @func_2130(%1074, %1075, %1076, %1077, %1078) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(5, 5, 13), float64], Tensor[(448), uint16], Tensor[(12, 2), uint16], Tensor[(2145), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(672), uint8], Tensor[(8, 7, 8), float32]) */;
  %1080 = %1068.0;
  %1081 = %1079.3;
  (%1080, %1081, meta[relay.Constant][74] /* ty=Tensor[(448), uint64] */, meta[relay.Constant][75] /* ty=Tensor[(2145), bool] */, meta[relay.Constant][76] /* ty=uint8 */, meta[relay.Constant][77] /* ty=Tensor[(672), uint8] */)
}

def @func_7750(%var_7721: Tensor[(672, 1), uint8]) -> (Tensor[(5, 5, 13), float64], Tensor[(12, 11, 5), float64], Tensor[(1120, 2), float32], Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(7, 16, 6), uint8], Tensor[(1792), uint64], uint8, Tensor[(672, 1), uint8], Tensor[(12, 11, 5), int8], Tensor[(624), float32]) {
  %1082 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1083 = cast(meta[relay.Constant][78] /* ty=Tensor[(1120, 2), float32] */, dtype="float32") /* ty=Tensor[(1120, 2), float32] */;
  %1084 = reshape(%1083, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), float32] */;
  %1085 = @func_4986(%1084) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(10, 14, 16), float64]) */;
  %1086 = @func_7298() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1087 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1088 = cast(meta[relay.Constant][79] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %1089 = cast(meta[relay.Constant][79] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %1090 = cast(meta[relay.Constant][80] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1091 = cast(%var_7721, dtype="uint8") /* ty=Tensor[(672, 1), uint8] */;
  %1092 = reshape(%1088, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), uint64] */;
  %1093 = reshape(%1089, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), uint64] */;
  %1094 = reshape(%1090, newshape=[]) /* ty=uint8 */;
  %1095 = reshape(%1091, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint8] */;
  %1096 = @func_5788(%1092, %1093, %1094, %1095) /* ty=(Tensor[(8, 14, 16), bool], Tensor[(7, 16, 6), uint8], uint8, Tensor[(168, 4), uint8], Tensor[(672), uint8], Tensor[(448), uint64], Tensor[(2145), float64]) */;
  %1097 = cast(meta[relay.Constant][81] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1098 = %1085.1;
  %1099 = cast(%1098, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %1100 = reshape(%1097, newshape=[624, 1]) /* ty=Tensor[(624, 1), float32] */;
  %1101 = reshape(%1099, newshape=[12, 11, 5]) /* ty=Tensor[(12, 11, 5), float64] */;
  %1102 = @func_3558(%1100, %1101) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(624, 1), float32], Tensor[(12, 11, 5), int8], Tensor[(5, 5, 13), float64]) */;
  %1103 = %1082.0;
  %1104 = @func_3656() /* ty=Tensor[(12, 11, 5), float64] */;
  %1105 = %1086.0;
  %1106 = %1087.0;
  %1107 = %1096.1;
  %1108 = %1102.3;
  (%1103, %1098, meta[relay.Constant][78] /* ty=Tensor[(1120, 2), float32] */, %1104, %1105, %1106, %1107, meta[relay.Constant][79] /* ty=Tensor[(1792), uint64] */, meta[relay.Constant][80] /* ty=uint8 */, %var_7721, %1108, meta[relay.Constant][81] /* ty=Tensor[(624), float32] */)
}

def @func_2178(%var_2177: Tensor[(14, 12, 4), int16]) -> (Tensor[(14, 12, 4), bool],) {
  %1114 = fn (%var_2161: Tensor[(14, 12, 4), int16]) -> (Tensor[(14, 12, 4), bool],) {
    %1109 = cast(meta[relay.Constant][82] /* ty=Tensor[(14, 12, 4), int16] */, dtype="bool") /* ty=Tensor[(14, 12, 4), bool] */;
    %1110 = shape_of(%var_2161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1111 = cast(%var_2161, dtype="bool") /* ty=Tensor[(14, 12, 4), bool] */;
    %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1113 = greater(%1111, %1112) /* ty=Tensor[(14, 12, 4), bool] */;
    (%1113,)
  };
  %1114(%var_2177) /* ty=(Tensor[(14, 12, 4), bool],) */
}

def @func_5518(%var_5516: Tensor[(672), uint8]) -> (Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(8, 14, 4), uint16], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(12, 11, 5), float64], Tensor[(624), float32], Tensor[(672), uint8], Tensor[(243), float32]) {
  @func_5515(%var_5516) /* ty=(Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(8, 14, 4), uint16], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(12, 11, 5), float64], Tensor[(624), float32], Tensor[(672), uint8], Tensor[(243), float32]) */
}

def @func_5515(%var_5505: Tensor[(672), uint8]) -> (Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(8, 14, 4), uint16], Tensor[(24), uint16], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(12, 11, 5), float64], Tensor[(624), float32], Tensor[(672), uint8], Tensor[(243), float32]) {
  %1115 = cast(meta[relay.Constant][83] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1116 = cast(meta[relay.Constant][83] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1117 = reshape(%1115, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %1118 = reshape(%1116, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %1119 = @func_2040(%1117, %1118) /* ty=(Tensor[(3, 16, 13), float32],) */;
  %1120 = cast(meta[relay.Constant][84] /* ty=Tensor[(24), uint16] */, dtype="uint16") /* ty=Tensor[(24), uint16] */;
  %1121 = cast(meta[relay.Constant][85] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1122 = cast(meta[relay.Constant][86] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1123 = reshape(%1120, newshape=[1, 4, 6]) /* ty=Tensor[(1, 4, 6), uint16] */;
  %1124 = reshape(%1121, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %1125 = reshape(%1122, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1126 = @func_1659(%1123, %1124, %1125) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */;
  %1127 = @func_3656() /* ty=Tensor[(12, 11, 5), float64] */;
  %1128 = cast(%1127, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %1129 = log(%1128) /* ty=Tensor[(12, 11, 5), float64] */;
  %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(12, 11, 5), float64] */;
  %1131 = cast(%var_5505, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1132 = %1119.0;
  %1133 = cast(%1132, dtype="float32") /* ty=Tensor[(3, 16, 13), float32] */;
  %1134 = cast(meta[relay.Constant][83] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1135 = reshape(%1131, newshape=[672, 1]) /* ty=Tensor[(672, 1), uint8] */;
  %1136 = reshape(%1133, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1137 = reshape(%1134, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %1138 = @func_4585(%1135, %1136, %1137) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(672, 1), uint8], Tensor[(624), float32], Tensor[(660), float64], Tensor[(2, 312), uint32], Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32]) */;
  %1139 = @func_5330() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(3, 9, 9), bool], int32, Tensor[(243), float32]) */;
  %1140 = %1126.3;
  %1141 = cos(%1130) /* ty=Tensor[(12, 11, 5), float64] */;
  %1142 = %1138.3;
  %1143 = %1139.3;
  (%1132, meta[relay.Constant][83] /* ty=Tensor[(624), float32] */, %1140, meta[relay.Constant][84] /* ty=Tensor[(24), uint16] */, meta[relay.Constant][85] /* ty=Tensor[(2145), bool] */, meta[relay.Constant][86] /* ty=Tensor[(448), uint16] */, %1141, %1142, %var_5505, %1143)
}

def @func_7298() -> (Tensor[(5, 5, 13), float64],) {
  %1144 = @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1145 = %1144.0;
  (%1145,)
}

def @func_2776() -> (Tensor[(5, 5, 13), float64],) {
  %1146 = @func_2060() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1147 = %1146.0;
  (%1147,)
}

def @func_6413() -> (Tensor[(5, 5, 13), float32],) {
  %1149 = fn () -> (Tensor[(5, 5, 13), float32],) {
    %1148 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
    (%1148,)
  };
  %1149() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_2869(%var_2867: float32, %var_2868: Tensor[(11, 3, 6), float32]) -> (Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) {
  @func_2865(%var_2867, %var_2868) /* ty=(Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) */
}

def @func_7896(%var_7894: Tensor[(594, 1), float32]) -> (Tensor[(5, 5, 13), float64], Tensor[(11, 6, 9), float32], Tensor[(594, 1), float32]) {
  @func_7893(%var_7894) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(11, 6, 9), float32], Tensor[(594, 1), float32]) */
}

def @func_6910(%var_6907: Tensor[(2, 11, 12), int32], %var_6908: Tensor[(2, 11, 12), int32], %var_6909: Tensor[(624), float32]) -> (Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(2, 11, 12), float32]) {
  @func_6905(%var_6907, %var_6908, %var_6909) /* ty=(Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(2, 11, 12), float32]) */
}

def @func_2996() -> (Tensor[(5, 5, 13), float32],) {
  @func_2994() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_9369() -> Tensor[(5, 5, 13), float32] {
  @func_9367() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_10556() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  %1150 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1151 = @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1152 = %1150.0;
  %1153 = @func_10251() /* ty=Tensor[(5, 5, 13), float64] */;
  %1154 = %1151.1;
  (%1152, %1153, %1154)
}

def @func_11093(%var_11092: Tensor[(13, 2, 13), float64]) -> (Tensor[(13, 2, 13), int64], Tensor[(5, 5, 13), float64]) {
  %1164 = fn (%var_11073: Tensor[(13, 2, 13), float64]) -> (Tensor[(13, 2, 13), int64], Tensor[(5, 5, 13), float64]) {
    %1155 = cast(%var_11073, dtype="float64") /* ty=Tensor[(13, 2, 13), float64] */;
    %1156 = exp(%1155) /* ty=Tensor[(13, 2, 13), float64] */;
    %1157 = cast(%var_11073, dtype="int64") /* ty=Tensor[(13, 2, 13), int64] */;
    %1158 = shape_of(%1156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1159 = cast(%1156, dtype="int64") /* ty=Tensor[(13, 2, 13), int64] */;
    %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1161 = @func_8351() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %1162 = subtract(%1159, %1160) /* ty=Tensor[(13, 2, 13), int64] */;
    %1163 = %1161.0;
    (%1162, %1163)
  };
  %1164(%var_11092) /* ty=(Tensor[(13, 2, 13), int64], Tensor[(5, 5, 13), float64]) */
}

def @func_6391() -> Tensor[(5, 5, 13), float32] {
  %1165 = fn () -> Tensor[(5, 5, 13), float32] {
    @func_4382() /* ty=Tensor[(5, 5, 13), float32] */
  };
  %1165() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_8883() -> Tensor[(5, 5, 13), float32] {
  @func_8881() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_6682() -> (Tensor[(5, 5, 13), float64],) {
  @func_6680() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_4136(%var_4134: int32, %var_4135: Tensor[(3, 9, 9), int32]) -> Tensor[(3, 9, 9), bool] {
  %1168 = fn (%var_4108: int32, %var_4109: Tensor[(3, 9, 9), int32]) -> Tensor[(3, 9, 9), bool] {
    %1166 = cast(%var_4108, dtype="bool") /* ty=bool */;
    %1167 = cast(%var_4109, dtype="bool") /* ty=Tensor[(3, 9, 9), bool] */;
    less(%1166, %1167) /* ty=Tensor[(3, 9, 9), bool] */
  };
  %1168(%var_4134, %var_4135) /* ty=Tensor[(3, 9, 9), bool] */
}

def @func_10675(%var_10673: Tensor[(672), int64]) -> (Tensor[(5, 5, 13), float64], Tensor[(6, 14, 8), bool], Tensor[(672), int64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2240), float32]) {
  @func_10672(%var_10673) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(6, 14, 8), bool], Tensor[(672), int64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2240), float32]) */
}

def @func_10864(%var_10863: Tensor[(5, 2, 2), bool]) -> (Tensor[(5, 2, 2), bool],) {
  %1174 = fn (%var_10842: Tensor[(5, 2, 2), bool]) -> (Tensor[(5, 2, 2), bool],) {
    %1169 = cast(meta[relay.Constant][87] /* ty=Tensor[(5, 2, 2), bool] */, dtype="bool") /* ty=Tensor[(5, 2, 2), bool] */;
    %1170 = shape_of(%var_10842, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1171 = cast(%var_10842, dtype="bool") /* ty=Tensor[(5, 2, 2), bool] */;
    %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1173 = logical_and(%1171, %1172) /* ty=Tensor[(5, 2, 2), bool] */;
    (%1173,)
  };
  %1174(%var_10863) /* ty=(Tensor[(5, 2, 2), bool],) */
}

def @func_10253() -> Tensor[(5, 5, 13), float64] {
  @func_10251() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_10672(%var_10642: Tensor[(672), int64]) -> (Tensor[(5, 5, 13), float64], Tensor[(6, 14, 8), bool], Tensor[(672), int64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2240), float32]) {
  %1175 = cast(%var_10642, dtype="int64") /* ty=Tensor[(672), int64] */;
  %1176 = reshape(%1175, newshape=[6, 14, 8]) /* ty=Tensor[(6, 14, 8), int64] */;
  %1177 = @func_6542(%1176) /* ty=(Tensor[(6, 14, 8), bool],) */;
  %1178 = cast(meta[relay.Constant][88] /* ty=Tensor[(2240), float32] */, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %1179 = reshape(%1178, newshape=[280, 8]) /* ty=Tensor[(280, 8), float32] */;
  %1180 = @func_9464(%1179) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(12, 11, 5), float64], Tensor[(280, 8), float32]) */;
  %1181 = @func_6352() /* ty=Tensor[(5, 5, 13), float64] */;
  %1182 = %1177.0;
  %1183 = @func_8558() /* ty=Tensor[(5, 5, 13), float64] */;
  %1184 = %1180.0;
  (%1181, %1182, %var_10642, %1183, %1184, meta[relay.Constant][88] /* ty=Tensor[(2240), float32] */)
}

def @func_3963() -> Tensor[(448), uint16] {
  %1185 = @func_3634() /* ty=(Tensor[(12, 11, 5), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */;
  %1185.2
}

def @func_9122(%var_9121: Tensor[(567), int8]) -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float32], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) {
  %1193 = fn (%var_9108: Tensor[(567), int8]) -> (Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float32], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) {
    %1186 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
    %1187 = @func_3833() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %1188 = cast(%var_9108, dtype="int8") /* ty=Tensor[(567), int8] */;
    %1189 = reshape(%1188, newshape=[7, 9, 9]) /* ty=Tensor[(7, 9, 9), int8] */;
    %1190 = %1186.0;
    %1191 = %1187.0;
    %1192 = @func_180(%1189) /* ty=Tensor[(7, 9, 9), int8] */;
    (%1190, %1191, %1192, %var_9108)
  };
  %1193(%var_9121) /* ty=(Tensor[(12, 11, 5), float64], Tensor[(5, 5, 13), float32], Tensor[(7, 9, 9), int8], Tensor[(567), int8]) */
}

def @func_9762(%var_9760: Tensor[(6, 12, 4), uint16], %var_9761: Tensor[(6, 12, 4), uint16]) -> (Tensor[(6, 12, 4), bool], Tensor[(6, 12, 4), int32]) {
  @func_9758(%var_9760, %var_9761) /* ty=(Tensor[(6, 12, 4), bool], Tensor[(6, 12, 4), int32]) */
}

def @func_11521() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
  %1198 = fn () -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) {
    %1194 = @func_10968() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %1195 = @func_8661() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %1196 = %1194.0;
    %1197 = %1195.0;
    (%1196, %1197)
  };
  %1198() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32]) */
}

def @func_11421() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_11419() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_8881() -> Tensor[(5, 5, 13), float32] {
  @func_5039() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_9838() -> (Tensor[(6, 8, 12), bool], Tensor[(5, 5, 13), float32], Tensor[(448), uint16]) {
  @func_9836() /* ty=(Tensor[(6, 8, 12), bool], Tensor[(5, 5, 13), float32], Tensor[(448), uint16]) */
}

def @func_9031() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64]) {
  %1199 = @func_2494() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) */;
  %1200 = @func_8129() /* ty=Tensor[(5, 5, 13), float32] */;
  %1201 = %1199.0;
  (%1200, %1201)
}

def @func_11774() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_11772() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_2494() -> (Tensor[(5, 5, 13), float64], Tensor[(2145), bool], Tensor[(448), uint16], Tensor[(?, 4, 6), float32]) {
  %1202 = cast(meta[relay.Constant][91] /* ty=Tensor[(24), uint16] */, dtype="uint16") /* ty=Tensor[(24), uint16] */;
  %1203 = cast(meta[relay.Constant][89] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %1204 = cast(meta[relay.Constant][90] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1205 = reshape(%1202, newshape=[1, 4, 6]) /* ty=Tensor[(1, 4, 6), uint16] */;
  %1206 = reshape(%1203, newshape=[2145]) /* ty=Tensor[(2145), bool] */;
  %1207 = reshape(%1204, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1208 = @func_1659(%1205, %1206, %1207) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16], Tensor[(1, 4, 6), uint32], Tensor[(?, 4, 6), int64]) */;
  %1209 = %1208.6;
  %1210 = cast(meta[relay.Constant][91] /* ty=Tensor[(24), uint16] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1211 = shape_of(%1209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1212 = cast(%1209, dtype="float32") /* ty=Tensor[(?, 4, 6), float32] */;
  %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1214 = @func_1758() /* ty=Tensor[(5, 5, 13), float64] */;
  %1215 = mod(%1212, %1213) /* ty=Tensor[(?, 4, 6), float32] */;
  (%1214, meta[relay.Constant][89] /* ty=Tensor[(2145), bool] */, meta[relay.Constant][90] /* ty=Tensor[(448), uint16] */, %1215)
}

def @func_2228(%var_2226: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) {
  @func_2225(%var_2226) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(448), uint16]) */
}

def @func_7114() -> (Tensor[(5, 5, 13), float32],) {
  %1216 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
  (%1216,)
}

def @func_9861() -> Tensor[(5, 5, 13), float32] {
  %1217 = @func_3712() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
  %1217.0
}

def @func_7214() -> (Tensor[(16, 10, 6), float64], Tensor[(2, 11, 12), float32], Tensor[(264), int32], Tensor[(624), float32], Tensor[(5, 5, 13), float32]) {
  %1231 = fn () -> (Tensor[(16, 10, 6), float64], Tensor[(2, 11, 12), float32], Tensor[(264), int32], Tensor[(624), float32], Tensor[(5, 5, 13), float32]) {
    %1218 = cast(meta[relay.Constant][92] /* ty=Tensor[(16, 10, 6), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
    %1219 = cos(%1218) /* ty=Tensor[(16, 10, 6), float64] */;
    %1220 = cast(%1219, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
    %1221 = cast(meta[relay.Constant][93] /* ty=Tensor[(264), int32] */, dtype="int32") /* ty=Tensor[(264), int32] */;
    %1222 = cast(meta[relay.Constant][93] /* ty=Tensor[(264), int32] */, dtype="int32") /* ty=Tensor[(264), int32] */;
    %1223 = cast(meta[relay.Constant][94] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1224 = reshape(%1221, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), int32] */;
    %1225 = reshape(%1222, newshape=[2, 11, 12]) /* ty=Tensor[(2, 11, 12), int32] */;
    %1226 = reshape(%1223, newshape=[624]) /* ty=Tensor[(624), float32] */;
    %1227 = @func_6905(%1224, %1225, %1226) /* ty=(Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(2, 11, 12), float32]) */;
    %1228 = acos(%1220) /* ty=Tensor[(16, 10, 6), float64] */;
    %1229 = %1227.2;
    %1230 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
    (%1228, %1229, meta[relay.Constant][93] /* ty=Tensor[(264), int32] */, meta[relay.Constant][94] /* ty=Tensor[(624), float32] */, %1230)
  };
  %1231() /* ty=(Tensor[(16, 10, 6), float64], Tensor[(2, 11, 12), float32], Tensor[(264), int32], Tensor[(624), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_8021(%var_8020: Tensor[(8, 1), float32]) -> (Tensor[(8, ?), bool], Tensor[(5, 5, 13), float32]) {
  %1238 = fn (%var_8006: Tensor[(8, 1), float32]) -> (Tensor[(8, ?), bool], Tensor[(5, 5, 13), float32]) {
    %1232 = cast(%var_8006, dtype="bool") /* ty=Tensor[(8, 1), bool] */;
    %1233 = shape_of(meta[relay.Constant][95] /* ty=Tensor[(8, 1), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1234 = cast(meta[relay.Constant][95] /* ty=Tensor[(8, 1), float32] */, dtype="bool") /* ty=Tensor[(8, 1), bool] */;
    %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1236 = greater_equal(%1234, %1235) /* ty=Tensor[(8, ?), bool] */;
    %1237 = @func_2905() /* ty=Tensor[(5, 5, 13), float32] */;
    (%1236, %1237)
  };
  %1238(%var_8020) /* ty=(Tensor[(8, ?), bool], Tensor[(5, 5, 13), float32]) */
}

def @func_9388() -> Tensor[(448), uint64] {
  %1239 = @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */;
  %1239.7
}

def @func_3498() -> (Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) {
  @func_3496() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(2912), int16], float32, Tensor[(198), float32], Tensor[(5, 5, 13), float64], Tensor[(448), uint64], Tensor[(2145), bool], Tensor[(672), uint8]) */
}

def @func_7595(%var_7593: Tensor[(672), int16]) -> (Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(5, 5, 13), float32]) {
  @func_7592(%var_7593) /* ty=(Tensor[(5, 5, 13), float32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(5, 5, 13), float32]) */
}

def @func_2865(%var_2825: float32, %var_2831: Tensor[(11, 3, 6), float32]) -> (Tensor[(11, 3, 6), float32], Tensor[(7, 16, 6), uint8], Tensor[(672), uint8], Tensor[(11, 3, 6), bool]) {
  %1240 = cast(%var_2825, dtype="float32") /* ty=float32 */;
  %1241 = cast(meta[relay.Constant][96] /* ty=Tensor[(11, 1, 6), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 6), float32] */;
  %1242 = subtract(%1240, %1241) /* ty=Tensor[(11, 1, 6), float32] */;
  %1243 = cast(%1242, dtype="float32") /* ty=Tensor[(11, 1, 6), float32] */;
  %1244 = cast(%var_2831, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
  %1245 = cast(%var_2825, dtype="uint8") /* ty=uint8 */;
  %1246 = cast(meta[relay.Constant][97] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1247 = reshape(%1245, newshape=[]) /* ty=uint8 */;
  %1248 = reshape(%1246, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), uint8] */;
  %1249 = cast(%1242, dtype="bool") /* ty=Tensor[(11, 1, 6), bool] */;
  %1250 = cast(%var_2831, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %1251 = logical_or(%1249, %1250) /* ty=Tensor[(11, 3, 6), bool] */;
  %1252 = cast(%1251, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %1253 = shape_of(%var_2831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1254 = cast(%var_2831, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %1255 = dyn.reshape(%1252, %1253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1256 = power(%1243, %1244) /* ty=Tensor[(11, 3, 6), float32] */;
  %1257 = @func_765(%1247, %1248) /* ty=Tensor[(7, 16, 6), uint8] */;
  %1258 = equal(%1254, %1255) /* ty=Tensor[(11, 3, 6), bool] */;
  (%1256, %1257, meta[relay.Constant][97] /* ty=Tensor[(672), uint8] */, %1258)
}

def @func_5994(%var_5992: Tensor[(448), uint16], %var_5993: Tensor[(448), uint16]) -> (Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(1152), bool], Tensor[(448), uint8]) {
  @func_5990(%var_5992, %var_5993) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(8, 14, 4), uint16], Tensor[(1152), bool], Tensor[(448), uint8]) */
}

def @func_9692() -> Tensor[(5, 5, 13), float32] {
  @func_9690() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_11184() -> (Tensor[(5, 5, 13), float32],) {
  @func_11182() /* ty=(Tensor[(5, 5, 13), float32],) */
}

def @func_3558(%var_3518: Tensor[(624, 1), float32], %var_3530: Tensor[(12, 11, 5), float64]) -> (Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(624, 1), float32], Tensor[(12, 11, 5), int8], Tensor[(5, 5, 13), float64]) {
  %1259 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1260 = cast(%var_3518, dtype="float32") /* ty=Tensor[(624, 1), float32] */;
  %1261 = reshape(%1260, newshape=[2, 312]) /* ty=Tensor[(2, 312), float32] */;
  %1262 = @func_2727(%1261) /* ty=(Tensor[(5, 5, 13), float64], Tensor[(2, 312), float32], Tensor[(3, 16, 13), float64], Tensor[(5, 5, 13), float64]) */;
  %1263 = @func_3121() /* ty=(Tensor[(12, 11, 5), float64],) */;
  %1264 = %1263.0;
  %1265 = cast(%var_3530, dtype="int8") /* ty=Tensor[(12, 11, 5), int8] */;
  %1266 = shape_of(%1264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1267 = cast(%1264, dtype="int8") /* ty=Tensor[(12, 11, 5), int8] */;
  %1268 = dyn.reshape(%1265, %1266, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1269 = @func_2535() /* ty=(Tensor[(5, 5, 13), float64],) */;
  %1270 = %1259.0;
  %1271 = %1262.1;
  %1272 = left_shift(%1267, %1268) /* ty=Tensor[(12, 11, 5), int8] */;
  %1273 = %1269.0;
  (%1270, %1271, %var_3518, %1272, %1273)
}

def @func_8130() -> Tensor[(5, 5, 13), float32] {
  %1275 = fn () -> Tensor[(5, 5, 13), float32] {
    %1274 = @func_7468() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */;
    %1274.1
  };
  %1275() /* ty=Tensor[(5, 5, 13), float32] */
}

def @func_11549() -> (Tensor[(5, 5, 13), float64],) {
  %1278 = fn () -> (Tensor[(5, 5, 13), float64],) {
    %1276 = @func_2752() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %1277 = %1276.0;
    (%1277,)
  };
  %1278() /* ty=(Tensor[(5, 5, 13), float64],) */
}

def @func_9188() -> Tensor[(5, 5, 13), float64] {
  %1280 = fn () -> Tensor[(5, 5, 13), float64] {
    %1279 = @func_5182() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %1279.0
  };
  %1280() /* ty=Tensor[(5, 5, 13), float64] */
}

def @func_6267() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  @func_6265() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_7399() -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
  %1287 = fn () -> (Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) {
    %1281 = @func_3902() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %1282 = @func_5050() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %1283 = %1281.0;
    %1284 = @func_5444() /* ty=Tensor[(5, 5, 13), float64] */;
    %1285 = @func_2915() /* ty=Tensor[(5, 5, 13), float32] */;
    %1286 = %1282.0;
    (%1283, %1284, %1285, %1286)
  };
  %1287() /* ty=(Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float64], Tensor[(5, 5, 13), float32], Tensor[(5, 5, 13), float32]) */
}

def @func_10914() -> (Tensor[(5, 5, 13), float64],) {
  %1288 = @func_9005() /* ty=(Tensor[(5, 5, 13), float64], Tensor[(13, 15, 5), int16], Tensor[(975), int16]) */;
  %1289 = %1288.0;
  (%1289,)
}

def @func_6905(%var_6883: Tensor[(2, 11, 12), int32], %var_6884: Tensor[(2, 11, 12), int32], %var_6895: Tensor[(624), float32]) -> (Tensor[(3, 16, 13), float32], Tensor[(624), float32], Tensor[(2, 11, 12), float32]) {
  %1290 = cast(%var_6895, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1291 = cast(%var_6895, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1292 = reshape(%1290, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %1293 = reshape(%1291, newshape=[3, 16, 13]) /* ty=Tensor[(3, 16, 13), float32] */;
  %1294 = @func_2040(%1292, %1293) /* ty=(Tensor[(3, 16, 13), float32],) */;
  %1295 = cast(%var_6884, dtype="int32") /* ty=Tensor[(2, 11, 12), int32] */;
  %1296 = shape_of(%var_6883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1297 = cast(%var_6883, dtype="int32") /* ty=Tensor[(2, 11, 12), int32] */;
  %1298 = dyn.reshape(%1295, %1296, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1299 = bitwise_and(%1297, %1298) /* ty=Tensor[(2, 11, 12), int32] */;
  %1300 = cast(%1299, dtype="float32") /* ty=Tensor[(2, 11, 12), float32] */;
  %1301 = shape_of(%var_6884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1302 = cast(%var_6884, dtype="float32") /* ty=Tensor[(2, 11, 12), float32] */;
  %1303 = dyn.reshape(%1300, %1301, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1304 = %1294.0;
  %1305 = power(%1302, %1303) /* ty=Tensor[(2, 11, 12), float32] */;
  (%1304, %var_6895, %1305)
}

def @func_4068(%var_4067: Tensor[(5, 5, 13), float32]) -> (Tensor[(5, 5, 13), uint32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool]) {
  %1323 = fn (%var_4041: Tensor[(5, 5, 13), float32]) -> (Tensor[(5, 5, 13), uint32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool]) {
    %1306 = @func_3902() /* ty=(Tensor[(5, 5, 13), float32],) */;
    %1307 = %1306.0;
    %1308 = cast(%var_4041, dtype="uint32") /* ty=Tensor[(5, 5, 13), uint32] */;
    %1309 = shape_of(%1307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1310 = cast(%1307, dtype="uint32") /* ty=Tensor[(5, 5, 13), uint32] */;
    %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1312 = cast(meta[relay.Constant][98] /* ty=Tensor[(672), int16] */, dtype="int16") /* ty=Tensor[(672), int16] */;
    %1313 = reshape(%1312, newshape=[14, 12, 4]) /* ty=Tensor[(14, 12, 4), int16] */;
    %1314 = @func_2176(%1313) /* ty=(Tensor[(14, 12, 4), bool],) */;
    %1315 = cast(meta[relay.Constant][99] /* ty=Tensor[(143), bool] */, dtype="bool") /* ty=Tensor[(143), bool] */;
    %1316 = cast(meta[relay.Constant][100] /* ty=Tensor[(2145), bool] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %1317 = reshape(%1315, newshape=[1, 11, 13]) /* ty=Tensor[(1, 11, 13), bool] */;
    %1318 = reshape(%1316, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
    %1319 = @func_1204(%1317, %1318) /* ty=(Tensor[(15, 11, 13), bool],) */;
    %1320 = left_shift(%1310, %1311) /* ty=Tensor[(5, 5, 13), uint32] */;
    %1321 = %1314.0;
    %1322 = %1319.0;
    (%1320, %1321, meta[relay.Constant][98] /* ty=Tensor[(672), int16] */, %1322, meta[relay.Constant][99] /* ty=Tensor[(143), bool] */, meta[relay.Constant][100] /* ty=Tensor[(2145), bool] */)
  };
  %1323(%var_4067) /* ty=(Tensor[(5, 5, 13), uint32], Tensor[(14, 12, 4), bool], Tensor[(672), int16], Tensor[(15, 11, 13), bool], Tensor[(143), bool], Tensor[(2145), bool]) */
}

def @func_8352() -> (Tensor[(5, 5, 13), float64],) {
  %1326 = fn () -> (Tensor[(5, 5, 13), float64],) {
    %1324 = @func_6450() /* ty=(Tensor[(5, 5, 13), float64],) */;
    %1325 = %1324.0;
    (%1325,)
  };
  %1326() /* ty=(Tensor[(5, 5, 13), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

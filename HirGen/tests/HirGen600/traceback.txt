==========mod==========
#[version = "0.0.5"]
def @func_12138() -> Tensor[(126), uint64] {
  @func_7923() /* ty=Tensor[(126), uint64] */
}

def @func_9785(%var_9701: Tensor[(351), float32], %var_9702: Tensor[(162), float32], %var_9763: Tensor[(2100), uint16]) -> (Tensor[(264), float64], Tensor[(176), float64], Tensor[(351), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(5, 7, 7), float32], Tensor[(245), float32], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(2100), uint16], Tensor[(200), uint32], Tensor[(3, 11, 16), float32]) {
  %0 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %1 = %0.2;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(264), float64] */;
  %3 = cast(%var_9701, dtype="float32") /* ty=Tensor[(351), float32] */;
  %4 = cast(%var_9702, dtype="float32") /* ty=Tensor[(162), float32] */;
  %5 = reshape(%2, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %6 = reshape(%3, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %7 = reshape(%4, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %8 = @func_7233(%5, %6, %7) /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) */;
  %9 = cast(%var_9702, dtype="float32") /* ty=Tensor[(162), float32] */;
  %10 = reshape(%9, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %11 = @func_5893(%10) /* ty=(Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %13 = %8.0;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(176), float64] */;
  %15 = reshape(%12, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %16 = reshape(%14, newshape=[4, 44]) /* ty=Tensor[(4, 44), float64] */;
  %17 = @func_9477(%15, %16) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(4, 44), float64], Tensor[(3, 2), float32]) */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(245), float32] */, dtype="float32") /* ty=Tensor[(245), float32] */;
  %19 = reshape(%18, newshape=[5, 7, 7]) /* ty=Tensor[(5, 7, 7), float32] */;
  %20 = @func_4355(%19) /* ty=(Tensor[(5, 7, 7), float32],) */;
  %21 = @func_8472() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %22 = %11.4;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(1, 3, 2), float32] */;
  %24 = cast(%var_9763, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(200), uint32] */, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %26 = reshape(%23, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %27 = reshape(%24, newshape=[2100]) /* ty=Tensor[(2100), uint16] */;
  %28 = reshape(%25, newshape=[200]) /* ty=Tensor[(200), uint32] */;
  %29 = @func_6334(%26, %27, %28) /* ty=(Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(162), float32], Tensor[(1, 200), uint32], Tensor[(2100), uint16], Tensor[(200), uint32]) */;
  %30 = cast(meta[relay.Constant][3] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %32 = reshape(%30, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), int32] */;
  %33 = reshape(%31, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), int32] */;
  %34 = @func_6720(%32, %33) /* ty=Tensor[(3, 11, 16), int32] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %36 = sigmoid(%35) /* ty=Tensor[(3, 11, 16), float32] */;
  %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(528), int32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%36, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %41 = %17.1;
  %42 = %20.0;
  %43 = %21.0;
  %44 = %29.5;
  %45 = floor_mod(%39, %40) /* ty=Tensor[(3, 11, 16), float32] */;
  (%1, %13, %var_9701, %var_9702, %22, %41, meta[relay.Constant][0] /* ty=Tensor[(900), float32] */, %42, meta[relay.Constant][1] /* ty=Tensor[(245), float32] */, %43, %44, %var_9763, meta[relay.Constant][2] /* ty=Tensor[(200), uint32] */, %45)
}

def @func_5644() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), float64]) {
  %46 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %47 = %46.2;
  %48 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  (%47, %48)
}

def @func_9377(%var_9244: Tensor[(560), uint8], %var_9276: Tensor[(240), int16], %var_9347: Tensor[(351), float32], %var_9348: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), uint16], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(15, 4, 4), int16], Tensor[(240), int16], Tensor[(10, 3, 6), uint16], Tensor[(3584), float32], Tensor[(1680), float32], Tensor[(112), float64], Tensor[(9, 3, 6), float32], Tensor[(351), float32], Tensor[(162), float32], Tensor[(10, 3, 6), float64]) {
  %49 = @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %50 = cast(%var_9276, dtype="int16") /* ty=Tensor[(240), int16] */;
  %51 = cast(%var_9276, dtype="int16") /* ty=Tensor[(240), int16] */;
  %52 = reshape(%50, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), int16] */;
  %53 = reshape(%51, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), int16] */;
  %54 = @func_8320(%52, %53) /* ty=(Tensor[(15, 4, 4), int16], Tensor[(10, 3, 6), uint16]) */;
  %55 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %56 = reshape(%55, newshape=[15, 16, 7]) /* ty=Tensor[(15, 16, 7), float32] */;
  %57 = @func_7527(%56) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(5, 7, 8), float64], Tensor[(560, 1), uint8], Tensor[(2112), float64], Tensor[(10, 3, 6), float64], Tensor[(15, 16, 7), float64]) */;
  %58 = cast(%var_9244, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %59 = cast(meta[relay.Constant][4] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %60 = reshape(%58, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %61 = reshape(%59, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
  %62 = @func_7762(%60, %61) /* ty=(Tensor[(126), uint64], Tensor[(2, 1056), float64], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
  %63 = %62.2;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(112), float64] */;
  %65 = cast(%var_9347, dtype="float32") /* ty=Tensor[(351), float32] */;
  %66 = cast(%var_9348, dtype="float32") /* ty=Tensor[(162), float32] */;
  %67 = reshape(%65, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %68 = reshape(%66, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %69 = @func_5598(%67, %68) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
  %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %71 = reshape(%70, newshape=[15, 16, 7]) /* ty=Tensor[(15, 16, 7), float32] */;
  %72 = @func_7527(%71) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(5, 7, 8), float64], Tensor[(560, 1), uint8], Tensor[(2112), float64], Tensor[(10, 3, 6), float64], Tensor[(15, 16, 7), float64]) */;
  %73 = %49.0;
  %74 = %54.0;
  %75 = @func_6576() /* ty=Tensor[(10, 3, 6), uint16] */;
  %76 = %57.1;
  %77 = exp(%64) /* ty=Tensor[(112), float64] */;
  %78 = %69.3;
  %79 = %72.5;
  (%73, %var_9244, meta[relay.Constant][4] /* ty=Tensor[(2112), float64] */, %74, %var_9276, %75, %76, meta[relay.Constant][5] /* ty=Tensor[(1680), float32] */, %77, %78, %var_9347, %var_9348, %79)
}

def @func_6354() -> (Tensor[(126), uint64],) {
  %80 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %81 = %80.2;
  (%81,)
}

def @func_11240() -> (Tensor[(10, 3, 6), uint16],) {
  %82 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
  %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 3, 6), uint16] */, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %87 = multiply(%85, %86) /* ty=Tensor[(10, 3, 6), uint16] */;
  (%87,)
}

def @func_6656() -> Tensor[(10, 3, 6), uint16] {
  @func_6576() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_11596(%var_11557: Tensor[(6, 27), float32], %var_11588: Tensor[(5, 42), float64]) -> (Tensor[(264), float64], Tensor[(90), float32], Tensor[(6, 27), float32], Tensor[(5, 6, 7), uint8], Tensor[(5, 42), float64]) {
  %88 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %89 = cast(%var_11557, dtype="float32") /* ty=Tensor[(6, 27), float32] */;
  %90 = reshape(%89, newshape=[9, 3, 6]) /* ty=Tensor[(9, 3, 6), float32] */;
  %91 = @func_4487(%90) /* ty=(Tensor[(9, 3, 6), float32], Tensor[(3, 10, 3), float32], Tensor[(90), float32]) */;
  %92 = cast(%var_11588, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %93 = reshape(%92, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float64] */;
  %94 = %88.2;
  %95 = %91.2;
  %96 = @func_3170(%93) /* ty=Tensor[(5, 6, 7), uint8] */;
  (%94, %95, %var_11557, %96, %var_11588)
}

def @func_5893(%var_5872: Tensor[(162), float32]) -> (Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) {
  %97 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %98 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 117), float32] */, dtype="float32") /* ty=Tensor[(3, 117), float32] */;
  %99 = cast(%var_5872, dtype="float32") /* ty=Tensor[(162), float32] */;
  %100 = reshape(%98, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %101 = reshape(%99, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %102 = @func_5598(%100, %101) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %104 = reshape(%103, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
  %105 = @func_2388(%104) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
  %106 = %102.2;
  %107 = cast(%106, dtype="float32") /* ty=Tensor[(351), float32] */;
  %108 = reshape(%107, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %109 = cast(%106, dtype="float32") /* ty=Tensor[(351), float32] */;
  %110 = reshape(%109, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %111 = %97.1;
  %112 = %105.1;
  %113 = @func_4395(%108) /* ty=Tensor[(13, 9, 3), float32] */;
  %114 = @func_4395(%110) /* ty=Tensor[(13, 9, 3), float32] */;
  (%111, %106, meta[relay.Constant][7] /* ty=Tensor[(3, 117), float32] */, %var_5872, %112, meta[relay.Constant][8] /* ty=Tensor[(15, 6), float32] */, %113, %114)
}

def @func_11203() -> Tensor[(10, 3, 6), uint16] {
  %115 = @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %115.0
}

def @func_8764(%var_8740: Tensor[(2112), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(13, 9, 3), float32], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(162), float32]) {
  %116 = cast(meta[relay.Constant][9] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %117 = reshape(%116, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %118 = @func_5893(%117) /* ty=(Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) */;
  %119 = %118.7;
  %120 = cast(%119, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %121 = cast(meta[relay.Constant][10] /* ty=Tensor[(560), uint8] */, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %122 = cast(%var_8740, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %123 = reshape(%121, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %124 = reshape(%122, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
  %125 = @func_7762(%123, %124) /* ty=(Tensor[(126), uint64], Tensor[(2, 1056), float64], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
  %126 = cast(meta[relay.Constant][9] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %127 = reshape(%126, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %128 = @func_5893(%127) /* ty=(Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) */;
  %129 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %130 = log(%120) /* ty=Tensor[(13, 9, 3), float32] */;
  %131 = %125.2;
  %132 = %128.3;
  (%129, meta[relay.Constant][9] /* ty=Tensor[(162), float32] */, %130, %131, meta[relay.Constant][10] /* ty=Tensor[(560), uint8] */, %var_8740, %132)
}

def @func_10378() -> (Tensor[(210, 1), float64], Tensor[(10, 3, 6), uint64]) {
  %133 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
  %134 = cast(meta[relay.Constant][11] /* ty=Tensor[(210, 1), float64] */, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %135 = reshape(%134, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %136 = @func_7096(%135) /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) */;
  %137 = %136.0;
  %138 = cast(%137, dtype="uint64") /* ty=Tensor[(10, 3, 6), uint64] */;
  %139 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%133, dtype="uint64") /* ty=Tensor[(10, 3, 6), uint64] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %142 = left_shift(%140, %141) /* ty=Tensor[(10, 3, 6), uint64] */;
  (meta[relay.Constant][11] /* ty=Tensor[(210, 1), float64] */, %142)
}

def @func_12245() -> (Tensor[(10, 3, 6), uint16],) {
  %143 = @func_11502() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%143,)
}

def @func_12953() -> (Tensor[(176), float64],) {
  %144 = @func_10023() /* ty=Tensor[(176), float64] */;
  (%144,)
}

def @func_9169() -> Tensor[(126), uint64] {
  @func_6799() /* ty=Tensor[(126), uint64] */
}

def @func_12876() -> Tensor[(10, 3, 6), float32] {
  %145 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
  %146 = %145.0;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
  rsqrt(%147) /* ty=Tensor[(10, 3, 6), float32] */
}

def @func_8863() -> Tensor[(13, 8, 8), float32] {
  %148 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 8, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  cosh(%148) /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_10023() -> Tensor[(176), float64] {
  %149 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %150 = %149.0;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(176), float64] */;
  rsqrt(%151) /* ty=Tensor[(176), float64] */
}

def @func_7873() -> (Tensor[(126), uint64],) {
  %152 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %153 = %152.0;
  (%153,)
}

def @func_7527(%var_7453: Tensor[(15, 16, 7), float32]) -> (Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(5, 7, 8), float64], Tensor[(560, 1), uint8], Tensor[(2112), float64], Tensor[(10, 3, 6), float64], Tensor[(15, 16, 7), float64]) {
  %154 = cast(meta[relay.Constant][13] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %155 = reshape(%154, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %156 = @func_3605(%155) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %157 = cast(meta[relay.Constant][14] /* ty=Tensor[(560, 1), uint8] */, dtype="uint8") /* ty=Tensor[(560, 1), uint8] */;
  %158 = cast(meta[relay.Constant][15] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %159 = reshape(%157, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %160 = reshape(%158, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
  %161 = @func_5825(%159, %160) /* ty=(Tensor[(1, 3, 2), float32], Tensor[(5, 7, 8), float64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
  %162 = cast(%var_7453, dtype="float32") /* ty=Tensor[(15, 16, 7), float32] */;
  %163 = cos(%162) /* ty=Tensor[(15, 16, 7), float32] */;
  %164 = cast(%163, dtype="float64") /* ty=Tensor[(15, 16, 7), float64] */;
  %165 = sin(%164) /* ty=Tensor[(15, 16, 7), float64] */;
  %166 = cast(%var_7453, dtype="uint64") /* ty=Tensor[(15, 16, 7), uint64] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%165, dtype="uint64") /* ty=Tensor[(15, 16, 7), uint64] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %170 = right_shift(%168, %169) /* ty=Tensor[(15, 16, 7), uint64] */;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(15, 16, 7), float32] */;
  %172 = tan(%171) /* ty=Tensor[(15, 16, 7), float32] */;
  %173 = cast(%170, dtype="float64") /* ty=Tensor[(15, 16, 7), float64] */;
  %174 = shape_of(%172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%172, dtype="float64") /* ty=Tensor[(15, 16, 7), float64] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %177 = %156.0;
  %178 = %161.1;
  %179 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %180 = floor_divide(%175, %176) /* ty=Tensor[(15, 16, 7), float64] */;
  (%177, meta[relay.Constant][13] /* ty=Tensor[(3584), float32] */, %178, meta[relay.Constant][14] /* ty=Tensor[(560, 1), uint8] */, meta[relay.Constant][15] /* ty=Tensor[(2112), float64] */, %179, %180)
}

def @func_11324() -> (Tensor[(10, 3, 6), uint16],) {
  %181 = @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %182 = %181.0;
  (%182,)
}

def @func_3807(%var_3797: Tensor[(6, 4, 11), float64]) -> (Tensor[(6, 4, 11), float64],) {
  %183 = cast(%var_3797, dtype="float64") /* ty=Tensor[(6, 4, 11), float64] */;
  %184 = acos(%183) /* ty=Tensor[(6, 4, 11), float64] */;
  (%184,)
}

def @func_7418() -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) {
  %185 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %186 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %187 = %185.2;
  (%186, %187)
}

def @func_4355(%var_4344: Tensor[(5, 7, 7), float32]) -> (Tensor[(5, 7, 7), float32],) {
  %188 = cast(%var_4344, dtype="float32") /* ty=Tensor[(5, 7, 7), float32] */;
  %189 = erf(%188) /* ty=Tensor[(5, 7, 7), float32] */;
  (%189,)
}

def @func_9184(%var_9174: Tensor[(8, 3, 7), int32], %var_9175: Tensor[(8, 3, 7), int32]) -> (Tensor[(8, 3, 7), int32],) {
  %190 = cast(%var_9175, dtype="int32") /* ty=Tensor[(8, 3, 7), int32] */;
  %191 = shape_of(%var_9174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%var_9174, dtype="int32") /* ty=Tensor[(8, 3, 7), int32] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %194 = bitwise_or(%192, %193) /* ty=Tensor[(8, 3, 7), int32] */;
  (%194,)
}

def @func_4487(%var_4469: Tensor[(9, 3, 6), float32]) -> (Tensor[(9, 3, 6), float32], Tensor[(3, 10, 3), float32], Tensor[(90), float32]) {
  %195 = cast(%var_4469, dtype="float32") /* ty=Tensor[(9, 3, 6), float32] */;
  %196 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %197 = reshape(%196, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
  %198 = @func_2388(%197) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
  %199 = asin(%195) /* ty=Tensor[(9, 3, 6), float32] */;
  %200 = %198.0;
  (%199, %200, meta[relay.Constant][16] /* ty=Tensor[(90), float32] */)
}

def @func_3753(%var_3748: Tensor[(14, 1, 6), int8], %var_3749: Tensor[(14, 6, 6), int8]) -> Tensor[(14, 6, 6), int8] {
  %201 = cast(%var_3748, dtype="int8") /* ty=Tensor[(14, 1, 6), int8] */;
  %202 = cast(%var_3749, dtype="int8") /* ty=Tensor[(14, 6, 6), int8] */;
  minimum(%201, %202) /* ty=Tensor[(14, 6, 6), int8] */
}

def @func_5751(%var_5746: Tensor[(7, 8, 2), int8]) -> (Tensor[(7, 8, 2), bool],) {
  %203 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 8, 2), int8] */, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %204 = shape_of(%var_5746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%var_5746, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %207 = less(%205, %206) /* ty=Tensor[(7, 8, 2), bool] */;
  (%207,)
}

def @func_10076() -> Tensor[(176), float64] {
  %208 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %208.0
}

def @func_10980() -> (Tensor[(126), uint64], Tensor[(126), uint64]) {
  %209 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %210 = @func_7923() /* ty=Tensor[(126), uint64] */;
  %211 = %209.0;
  (%210, %211)
}

def @func_10534(%var_10520: Tensor[(126), uint64]) -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), bool]) {
  %212 = @func_10204() /* ty=(Tensor[(10, 3, 6), float64],) */;
  %213 = @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %214 = @func_7774() /* ty=(Tensor[(126), uint64],) */;
  %215 = %214.0;
  %216 = cast(%var_10520, dtype="bool") /* ty=Tensor[(126), bool] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(1), int32] */;
  %218 = cast(%215, dtype="bool") /* ty=Tensor[(126), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?), bool] */;
  %220 = %212.0;
  %221 = %213.0;
  %222 = logical_or(%218, %219) /* ty=Tensor[(126), bool] */;
  (%220, %221, %222)
}

def @func_12355(%var_12342: Tensor[(351), float32]) -> (Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(351), float32], Tensor[(10, 3, 6), float64]) {
  %223 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %224 = cast(%var_12342, dtype="float32") /* ty=Tensor[(351), float32] */;
  %225 = reshape(%224, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %226 = @func_5513(%225) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */;
  %227 = @func_10204() /* ty=(Tensor[(10, 3, 6), float64],) */;
  %228 = %223.0;
  %229 = %226.1;
  %230 = %227.0;
  (%228, %229, %var_12342, %230)
}

def @func_8472() -> (Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  %231 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %232 = cast(meta[relay.Constant][18] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %233 = reshape(%232, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
  %234 = @func_3807(%233) /* ty=(Tensor[(6, 4, 11), float64],) */;
  %235 = %231.2;
  %236 = %234.0;
  (%235, %236, meta[relay.Constant][18] /* ty=Tensor[(264), float64] */)
}

def @func_6182() -> Tensor[(10, 3, 6), float64] {
  @func_5442() /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_8534() -> (Tensor[(10, 3, 6), uint16],) {
  %237 = @func_7977() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%237,)
}

def @func_8188(%var_8180: Tensor[(264), float64], %var_8181: Tensor[(3, 117), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16], Tensor[(7, 8, 2), bool], Tensor[(112), int8], Tensor[(10, 3, 6), float64], Tensor[(264), float64], Tensor[(264), float64], Tensor[(3, 117), float32], Tensor[(162), float32]) {
  %238 = @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %239 = cast(meta[relay.Constant][19] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %240 = reshape(%239, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int8] */;
  %241 = @func_5751(%240) /* ty=(Tensor[(7, 8, 2), bool],) */;
  %242 = cast(%var_8180, dtype="float64") /* ty=Tensor[(264), float64] */;
  %243 = cast(%var_8181, dtype="float32") /* ty=Tensor[(3, 117), float32] */;
  %244 = cast(meta[relay.Constant][20] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %245 = cast(meta[relay.Constant][20] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %246 = reshape(%242, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %247 = reshape(%243, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %248 = reshape(%244, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %249 = reshape(%245, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %250 = @func_7576(%246, %247, %248, %249) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float64]) */;
  %251 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
  %252 = %238.0;
  %253 = %241.0;
  %254 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
  %255 = %250.2;
  (%251, %252, %253, meta[relay.Constant][19] /* ty=Tensor[(112), int8] */, %254, %255, %var_8180, %var_8181, meta[relay.Constant][20] /* ty=Tensor[(162), float32] */)
}

def @func_12018() -> (Tensor[(10, 3, 6), uint16],) {
  %256 = @func_7977() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%256,)
}

def @func_12389() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
  %257 = @func_12162() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %258 = %257.0;
  %259 = @func_11203() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%258, %259)
}

def @func_5215(%var_5123: Tensor[(15, 5, 12), float64], %var_5124: Tensor[(15, 5, 12), float64], %var_5185: Tensor[(48, 1), float64]) -> (Tensor[(15, 5, 12), float64], Tensor[(15, 5, 12), uint64], Tensor[(10, 1, 9), int8], Tensor[(10, ?, 9), bool], Tensor[(48), float64], Tensor[(3, 10, 3), float32], Tensor[(48, 176), int8], Tensor[(560), uint8]) {
  %260 = cast(%var_5124, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %261 = shape_of(%var_5123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%var_5123, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %264 = cast(%var_5123, dtype="uint64") /* ty=Tensor[(15, 5, 12), uint64] */;
  %265 = shape_of(%var_5124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%var_5124, dtype="uint64") /* ty=Tensor[(15, 5, 12), uint64] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %268 = cast(meta[relay.Constant][21] /* ty=Tensor[(90), int8] */, dtype="int8") /* ty=Tensor[(90), int8] */;
  %269 = reshape(%268, newshape=[10, 1, 9]) /* ty=Tensor[(10, 1, 9), int8] */;
  %270 = @func_3929(%269) /* ty=Tensor[(10, 1, 9), int8] */;
  %271 = cast(%270, dtype="int8") /* ty=Tensor[(10, 1, 9), int8] */;
  %272 = reshape(%271, newshape=[10, 1, 9]) /* ty=Tensor[(10, 1, 9), int8] */;
  %273 = cast(meta[relay.Constant][21] /* ty=Tensor[(90), int8] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %274 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%270, dtype="bool") /* ty=Tensor[(10, 1, 9), bool] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %277 = cast(%var_5185, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %278 = cast(meta[relay.Constant][22] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %279 = reshape(%277, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %280 = reshape(%278, newshape=[1, 176]) /* ty=Tensor[(1, 176), float64] */;
  %281 = @func_2294(%279, %280) /* ty=(Tensor[(14, 10, 3), float64], Tensor[(12, 16, 11), float64], Tensor[(48), float64], Tensor[(1, 176), float64]) */;
  %282 = greater_equal(%275, %276) /* ty=Tensor[(10, ?, 9), bool] */;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(10, ?, 9), float32] */;
  %284 = reshape(%283, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
  %285 = @func_2388(%284) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
  %286 = cast(meta[relay.Constant][22] /* ty=Tensor[(176), float64] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %287 = cast(%var_5185, dtype="int8") /* ty=Tensor[(48, 1), int8] */;
  %288 = cast(%var_5185, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %289 = cast(meta[relay.Constant][22] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %290 = reshape(%288, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %291 = reshape(%289, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %292 = @func_1458(%290, %291) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */;
  %293 = floor_mod(%262, %263) /* ty=Tensor[(15, 5, 12), float64] */;
  %294 = bitwise_xor(%266, %267) /* ty=Tensor[(15, 5, 12), uint64] */;
  %295 = @func_3929(%272) /* ty=Tensor[(10, 1, 9), int8] */;
  %296 = %281.2;
  %297 = %285.0;
  %298 = left_shift(%286, %287) /* ty=Tensor[(48, 176), int8] */;
  %299 = %292.6;
  (%293, %294, %295, %282, %296, %297, %298, %299)
}

def @func_8109() -> Tensor[(10, 3, 6), uint16] {
  @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_2896(%var_2844: Tensor[(12, 15, 5), float32], %var_2854: Tensor[(176), float64], %var_2861: Tensor[(6), float32]) -> (Tensor[(12, 15, 5), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(2, 3, 8), int64]) {
  %300 = cast(%var_2844, dtype="float32") /* ty=Tensor[(12, 15, 5), float32] */;
  %301 = cast(meta[relay.Constant][23] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %302 = cast(%var_2854, dtype="float64") /* ty=Tensor[(176), float64] */;
  %303 = reshape(%301, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %304 = reshape(%302, newshape=[1, 176]) /* ty=Tensor[(1, 176), float64] */;
  %305 = @func_2294(%303, %304) /* ty=(Tensor[(14, 10, 3), float64], Tensor[(12, 16, 11), float64], Tensor[(48), float64], Tensor[(1, 176), float64]) */;
  %306 = cast(%var_2861, dtype="float32") /* ty=Tensor[(6), float32] */;
  %307 = reshape(%306, newshape=[1, 3, 2]) /* ty=Tensor[(1, 3, 2), float32] */;
  %308 = @func_2170(%307) /* ty=(Tensor[(1, 3, 2), float32],) */;
  %309 = %305.2;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(48), float64] */;
  %311 = cast(%var_2854, dtype="float64") /* ty=Tensor[(176), float64] */;
  %312 = reshape(%310, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %313 = reshape(%311, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %314 = @func_1458(%312, %313) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */;
  %315 = sigmoid(%300) /* ty=Tensor[(12, 15, 5), float32] */;
  %316 = %308.0;
  %317 = %314.0;
  (%315, %309, meta[relay.Constant][23] /* ty=Tensor[(48), float64] */, %var_2854, %316, %var_2861, %317)
}

def @func_4612(%var_4571: Tensor[(15, 6), float32]) -> (Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) {
  %318 = cast(%var_4571, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %319 = reshape(%318, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
  %320 = @func_2388(%319) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
  %321 = cast(meta[relay.Constant][24] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %322 = reshape(%321, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float64] */;
  %323 = @func_710(%322) /* ty=(Tensor[(16, 2, 10), float64],) */;
  %324 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
  %325 = atan(%324) /* ty=Tensor[(12, 15, 16), float64] */;
  %326 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 15, 16), float64] */, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %327 = rsqrt(%326) /* ty=Tensor[(12, 15, 16), float32] */;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
  %329 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%325, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %332 = floor_mod(%330, %331) /* ty=Tensor[(12, 15, 16), float64] */;
  %333 = cast(%332, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
  %334 = %320.0;
  %335 = %323.0;
  %336 = erf(%333) /* ty=Tensor[(12, 15, 16), float64] */;
  (%334, %var_4571, %335, meta[relay.Constant][24] /* ty=Tensor[(320), float64] */, %336)
}

def @func_6334(%var_6299: Tensor[(6), float32], %var_6325: Tensor[(2100), uint16], %var_6326: Tensor[(200), uint32]) -> (Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(162), float32], Tensor[(1, 200), uint32], Tensor[(2100), uint16], Tensor[(200), uint32]) {
  %337 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %338 = cast(%var_6299, dtype="float32") /* ty=Tensor[(6), float32] */;
  %339 = reshape(%338, newshape=[1, 3, 2]) /* ty=Tensor[(1, 3, 2), float32] */;
  %340 = @func_2170(%339) /* ty=(Tensor[(1, 3, 2), float32],) */;
  %341 = cast(meta[relay.Constant][26] /* ty=Tensor[(117, 3), float32] */, dtype="float32") /* ty=Tensor[(117, 3), float32] */;
  %342 = cast(meta[relay.Constant][27] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %343 = reshape(%341, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %344 = reshape(%342, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %345 = @func_5598(%343, %344) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
  %346 = cast(%var_6325, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %347 = cast(%var_6325, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %348 = cast(%var_6326, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %349 = reshape(%346, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), uint16] */;
  %350 = reshape(%347, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), uint16] */;
  %351 = reshape(%348, newshape=[1, 200]) /* ty=Tensor[(1, 200), uint32] */;
  %352 = @func_5713(%349, %350, %351) /* ty=(Tensor[(6), float32], Tensor[(3, 30), float32], Tensor[(10, 3, 6), uint16], Tensor[(14, 15, 10), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64], Tensor[(5, 4, 10), uint32], Tensor[(1, 200), uint32]) */;
  %353 = %337.0;
  %354 = %340.0;
  %355 = %345.0;
  %356 = %352.7;
  (%353, %354, %var_6299, %355, meta[relay.Constant][26] /* ty=Tensor[(117, 3), float32] */, meta[relay.Constant][27] /* ty=Tensor[(162), float32] */, %356, %var_6325, %var_6326)
}

def @func_8097() -> (Tensor[(176), float64],) {
  %357 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %358 = %357.4;
  (%358,)
}

def @func_6393(%var_6366: Tensor[(320, 1), float64], %var_6369: Tensor[(126), uint64], %var_6370: Tensor[(12, 4), float64], %var_6388: Tensor[(1, 351), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(16, 2, 10), float64], Tensor[(320, 1), float64], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(12, 4), float64], Tensor[(176), float64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) {
  %359 = cast(%var_6366, dtype="float64") /* ty=Tensor[(320, 1), float64] */;
  %360 = reshape(%359, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float64] */;
  %361 = @func_710(%360) /* ty=(Tensor[(16, 2, 10), float64],) */;
  %362 = cast(%var_6369, dtype="uint64") /* ty=Tensor[(126), uint64] */;
  %363 = cast(%var_6369, dtype="uint64") /* ty=Tensor[(126), uint64] */;
  %364 = cast(%var_6370, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %365 = cast(meta[relay.Constant][28] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %366 = reshape(%362, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %367 = reshape(%363, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %368 = reshape(%364, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %369 = reshape(%365, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %370 = @func_4011(%366, %367, %368, %369) /* ty=(Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) */;
  %371 = cast(%var_6388, dtype="float32") /* ty=Tensor[(1, 351), float32] */;
  %372 = reshape(%371, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %373 = @func_5513(%372) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */;
  %374 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
  %375 = %361.0;
  %376 = %370.2;
  %377 = %373.1;
  (%374, %375, %var_6366, %376, %var_6369, %var_6370, meta[relay.Constant][28] /* ty=Tensor[(176), float64] */, %377, %var_6388)
}

def @func_6644(%var_6620: Tensor[(63, 2), uint64]) -> (Tensor[(176), float64], Tensor[(63, 2), uint64], Tensor[(2, 3, 8), bool]) {
  %378 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %379 = cast(%var_6620, dtype="uint64") /* ty=Tensor[(63, 2), uint64] */;
  %380 = cast(%var_6620, dtype="uint64") /* ty=Tensor[(63, 2), uint64] */;
  %381 = cast(meta[relay.Constant][29] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %382 = %378.0;
  %383 = cast(%382, dtype="float64") /* ty=Tensor[(176), float64] */;
  %384 = reshape(%379, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %385 = reshape(%380, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %386 = reshape(%381, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %387 = reshape(%383, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %388 = @func_4011(%384, %385, %386, %387) /* ty=(Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) */;
  %389 = %388.1;
  %390 = cast(meta[relay.Constant][29] /* ty=Tensor[(48), float64] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="bool") /* ty=Tensor[(2, 3, 8), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %394 = less_equal(%392, %393) /* ty=Tensor[(2, 3, 8), bool] */;
  (%382, %var_6620, %394)
}

def @func_10182(%var_10178: Tensor[(560), uint8]) -> (Tensor[(126), uint64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  %395 = cast(%var_10178, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %396 = cast(meta[relay.Constant][30] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %397 = reshape(%395, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %398 = reshape(%396, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
  %399 = @func_5825(%397, %398) /* ty=(Tensor[(1, 3, 2), float32], Tensor[(5, 7, 8), float64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
  %400 = @func_9169() /* ty=Tensor[(126), uint64] */;
  %401 = %399.2;
  (%400, %401, %var_10178, meta[relay.Constant][30] /* ty=Tensor[(2112), float64] */)
}

def @func_10439(%var_10413: Tensor[(10, 16, 1), int32], %var_10414: Tensor[(10, 16, 8), int32]) -> (Tensor[(10, 16, 8), bool], Tensor[(10, 3, 6), uint16]) {
  %402 = cast(%var_10413, dtype="bool") /* ty=Tensor[(10, 16, 1), bool] */;
  %403 = cast(%var_10414, dtype="bool") /* ty=Tensor[(10, 16, 8), bool] */;
  %404 = @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %405 = equal(%402, %403) /* ty=Tensor[(10, 16, 8), bool] */;
  %406 = %404.0;
  (%405, %406)
}

def @func_6252() -> (Tensor[(176), float64],) {
  %407 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %408 = %407.4;
  (%408,)
}

def @func_338(%var_235: Tensor[(10, 4, 14), uint8], %var_248: Tensor[(22, 96), float64]) -> (Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) {
  %409 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %410 = cast(meta[relay.Constant][32] /* ty=Tensor[(22, 96), float64] */, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
  %411 = reshape(%409, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %412 = reshape(%410, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %413 = @func_79(%411, %412) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %414 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %415 = %413.0;
  %416 = cast(%415, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %417 = reshape(%414, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %418 = reshape(%416, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %419 = @func_79(%417, %418) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %420 = cast(%var_248, dtype="float32") /* ty=Tensor[(22, 96), float32] */;
  %421 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(22, 96), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %422 = cast(meta[relay.Constant][32] /* ty=Tensor[(22, 96), float64] */, dtype="float32") /* ty=Tensor[(22, 96), float32] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %424 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %425 = cast(%var_248, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
  %426 = reshape(%424, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %427 = reshape(%425, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %428 = @func_79(%426, %427) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %429 = %428.0;
  %430 = cast(%429, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
  %431 = shape_of(%var_248, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(%var_248, dtype="bool") /* ty=Tensor[(22, 96), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %434 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 4, 14), uint8] */, dtype="uint8") /* ty=Tensor[(10, 4, 14), uint8] */;
  %435 = shape_of(%var_235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%var_235, dtype="uint8") /* ty=Tensor[(10, 4, 14), uint8] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %438 = subtract(%436, %437) /* ty=Tensor[(10, 4, 14), uint8] */;
  %439 = cast(%438, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
  %440 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 4, 14), uint8] */, dtype="int32") /* ty=Tensor[(10, 4, 14), int32] */;
  %441 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(10, 4, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 4, 14), uint8] */, dtype="int32") /* ty=Tensor[(10, 4, 14), int32] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %444 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %445 = mod(%422, %423) /* ty=Tensor[(22, 96), float32] */;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
  %447 = reshape(%444, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %448 = reshape(%446, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %449 = @func_79(%447, %448) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %450 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %451 = greater(%432, %433) /* ty=Tensor[(22, 96), bool] */;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
  %453 = reshape(%450, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %454 = reshape(%452, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %455 = @func_79(%453, %454) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %456 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %457 = %455.0;
  %458 = cast(%457, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %459 = reshape(%456, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %460 = reshape(%458, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %461 = @func_79(%459, %460) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %462 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %463 = %461.0;
  %464 = cast(%463, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %465 = reshape(%462, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %466 = reshape(%464, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %467 = @func_79(%465, %466) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %468 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %469 = cast(%451, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
  %470 = reshape(%468, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %471 = reshape(%469, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %472 = @func_79(%470, %471) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %473 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %474 = %419.0;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %476 = reshape(%473, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %477 = reshape(%475, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %478 = @func_79(%476, %477) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %479 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %480 = %478.0;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %482 = reshape(%479, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %483 = reshape(%481, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %484 = @func_79(%482, %483) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %485 = sinh(%439) /* ty=Tensor[(10, 4, 14), float32] */;
  %486 = left_shift(%442, %443) /* ty=Tensor[(10, 4, 14), int32] */;
  %487 = %449.0;
  %488 = %467.0;
  %489 = %472.0;
  %490 = %484.0;
  (%415, meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, %474, %445, %451, %485, %486, %487, %457, %463, %488, %489, %480, %490)
}

def @func_12569() -> (Tensor[(10, 3, 6), uint16], Tensor[(126), uint64], Tensor[(84), int8], Tensor[(14, 6, 6), uint32]) {
  %491 = @func_11152() /* ty=(Tensor[(126), uint64],) */;
  %492 = cast(meta[relay.Constant][35] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %493 = cast(meta[relay.Constant][36] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %494 = reshape(%492, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), int8] */;
  %495 = reshape(%493, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), int8] */;
  %496 = @func_3753(%494, %495) /* ty=Tensor[(14, 6, 6), int8] */;
  %497 = cast(meta[relay.Constant][36] /* ty=Tensor[(504), int8] */, dtype="uint32") /* ty=Tensor[(504), uint32] */;
  %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%496, dtype="uint32") /* ty=Tensor[(14, 6, 6), uint32] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %501 = @func_12428() /* ty=Tensor[(10, 3, 6), uint16] */;
  %502 = %491.0;
  %503 = bitwise_xor(%499, %500) /* ty=Tensor[(14, 6, 6), uint32] */;
  (%501, %502, meta[relay.Constant][35] /* ty=Tensor[(84), int8] */, %503)
}

def @func_11736(%var_11728: Tensor[(162), float32], %var_11732: Tensor[(2100), uint16]) -> (Tensor[(10, 3, 6), uint16], Tensor[(1, 3, 2), float32], Tensor[(351), float32], Tensor[(162), bool], Tensor[(2100), uint32]) {
  %504 = @func_11324() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %505 = cast(meta[relay.Constant][37] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %506 = cast(meta[relay.Constant][38] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %507 = cast(meta[relay.Constant][39] /* ty=Tensor[(2100), uint16] */, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %508 = reshape(%505, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %509 = reshape(%506, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %510 = reshape(%507, newshape=[2100]) /* ty=Tensor[(2100), uint16] */;
  %511 = @func_9785(%508, %509, %510) /* ty=(Tensor[(264), float64], Tensor[(176), float64], Tensor[(351), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(5, 7, 7), float32], Tensor[(245), float32], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(2100), uint16], Tensor[(200), uint32], Tensor[(3, 11, 16), float32]) */;
  %512 = cast(%var_11728, dtype="bool") /* ty=Tensor[(162), bool] */;
  %513 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(162), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %514 = cast(meta[relay.Constant][38] /* ty=Tensor[(162), float32] */, dtype="bool") /* ty=Tensor[(162), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?), bool] */;
  %516 = cast(%var_11732, dtype="uint32") /* ty=Tensor[(2100), uint32] */;
  %517 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(2100), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %518 = cast(meta[relay.Constant][39] /* ty=Tensor[(2100), uint16] */, dtype="uint32") /* ty=Tensor[(2100), uint32] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %520 = %504.0;
  %521 = %511.4;
  %522 = less(%514, %515) /* ty=Tensor[(162), bool] */;
  %523 = logical_xor(%518, %519) /* ty=Tensor[(2100), uint32] */;
  (%520, %521, meta[relay.Constant][37] /* ty=Tensor[(351), float32] */, %522, %523)
}

def @func_7687() -> (Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  %524 = cast(meta[relay.Constant][40] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %525 = reshape(%524, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
  %526 = @func_3807(%525) /* ty=(Tensor[(6, 4, 11), float64],) */;
  %527 = @func_6799() /* ty=Tensor[(126), uint64] */;
  %528 = %526.0;
  (%527, %528, meta[relay.Constant][40] /* ty=Tensor[(264), float64] */)
}

def @func_11939() -> Tensor[(10, 3, 6), uint16] {
  @func_9199() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_9045() -> (Tensor[(10, 3, 6), uint16],) {
  %529 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
  %530 = %529.1;
  (%530,)
}

def @func_8974(%var_8951: Tensor[(3, 3, 6), float64]) -> (Tensor[(3, 3, 6), float32],) {
  %531 = cast(%var_8951, dtype="float64") /* ty=Tensor[(3, 3, 6), float64] */;
  %532 = sigmoid(%531) /* ty=Tensor[(3, 3, 6), float64] */;
  %533 = cast(%532, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %534 = tan(%533) /* ty=Tensor[(3, 3, 6), float32] */;
  (%534,)
}

def @func_10298() -> (Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  %535 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
  %536 = @func_7774() /* ty=(Tensor[(126), uint64],) */;
  %537 = @func_10023() /* ty=Tensor[(176), float64] */;
  %538 = %535.1;
  %539 = %536.0;
  (%537, %538, %539)
}

def @func_10350() -> (Tensor[(126), uint64],) {
  %540 = @func_10298() /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) */;
  %541 = %540.2;
  (%541,)
}

def @func_5953(%var_5917: Tensor[(90), float32]) -> (Tensor[(126), uint64], Tensor[(16, 2, 10), float64], Tensor[(90), float32], Tensor[(10, 3, 6), float64], Tensor[(126), uint64], Tensor[(1, 48), float32]) {
  %542 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %543 = cast(%var_5917, dtype="float32") /* ty=Tensor[(90), float32] */;
  %544 = reshape(%543, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %545 = @func_4612(%544) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) */;
  %546 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %547 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %548 = %547.1;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %550 = %542.2;
  %551 = %545.2;
  %552 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %553 = %546.2;
  %554 = tan(%549) /* ty=Tensor[(1, 48), float32] */;
  (%550, %551, %var_5917, %552, %553, %554)
}

def @func_11910(%var_11892: Tensor[(8, 16, 4), int32], %var_11900: Tensor[(8, 16, 4), int32]) -> Tensor[(8, 16, 4), bool] {
  %555 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 16, 4), int32] */, dtype="int32") /* ty=Tensor[(8, 16, 4), int32] */;
  %556 = shape_of(%var_11892, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%var_11892, dtype="int32") /* ty=Tensor[(8, 16, 4), int32] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %559 = bitwise_and(%557, %558) /* ty=Tensor[(8, 16, 4), int32] */;
  %560 = cast(%var_11900, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%559, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%562, %563) /* ty=Tensor[(8, 16, 4), bool] */
}

def @func_12997() -> Tensor[(126), uint64] {
  @func_12138() /* ty=Tensor[(126), uint64] */
}

def @func_6720(%var_6711: Tensor[(3, 11, 16), int32], %var_6712: Tensor[(3, 11, 16), int32]) -> Tensor[(3, 11, 16), int32] {
  %564 = cast(%var_6712, dtype="int32") /* ty=Tensor[(3, 11, 16), int32] */;
  %565 = shape_of(%var_6711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%var_6711, dtype="int32") /* ty=Tensor[(3, 11, 16), int32] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%566, %567) /* ty=Tensor[(3, 11, 16), int32] */
}

def @func_9863() -> (Tensor[(126), uint64],) {
  %568 = @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */;
  %569 = %568.0;
  (%569,)
}

def @func_6983() -> (Tensor[(10, 3, 6), uint16],) {
  %570 = @func_5644() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), float64]) */;
  %571 = %570.0;
  (%571,)
}

def @func_710(%var_696: Tensor[(16, 2, 10), float64]) -> (Tensor[(16, 2, 10), float64],) {
  %572 = cast(%var_696, dtype="float64") /* ty=Tensor[(16, 2, 10), float64] */;
  %573 = asinh(%572) /* ty=Tensor[(16, 2, 10), float64] */;
  (%573,)
}

def @func_12162() -> (Tensor[(10, 3, 6), uint16],) {
  %574 = @func_12018() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %575 = %574.0;
  (%575,)
}

def @func_5335() -> (Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) {
  %576 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %577 = reshape(%576, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
  %578 = @func_2388(%577) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
  %579 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 3, 6), float64] */;
  %580 = log2(%579) /* ty=Tensor[(10, 3, 6), float64] */;
  %581 = cast(%580, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
  %582 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(10, 3, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 3, 6), float64] */, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %585 = %578.1;
  %586 = maximum(%583, %584) /* ty=Tensor[(10, 3, 6), uint16] */;
  (%585, meta[relay.Constant][42] /* ty=Tensor[(15, 6), float32] */, %586)
}

def @func_7923() -> Tensor[(126), uint64] {
  @func_6852() /* ty=Tensor[(126), uint64] */
}

def @func_12278() -> (Tensor[(126), uint64], Tensor[(10, 3, 6), uint16]) {
  %587 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %588 = %587.0;
  %589 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%588, %589)
}

def @func_3929(%var_3922: Tensor[(10, 1, 9), int8]) -> Tensor[(10, 1, 9), int8] {
  %590 = cast(meta[relay.Constant][44] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %591 = cast(%var_3922, dtype="int8") /* ty=Tensor[(10, 1, 9), int8] */;
  minimum(%590, %591) /* ty=Tensor[(10, 1, 9), int8] */
}

def @func_11159() -> (Tensor[(10, 3, 6), uint16],) {
  %592 = @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %593 = %592.0;
  (%593,)
}

def @func_2294(%var_2289: Tensor[(48), float64], %var_2290: Tensor[(1, 176), float64]) -> (Tensor[(14, 10, 3), float64], Tensor[(12, 16, 11), float64], Tensor[(48), float64], Tensor[(1, 176), float64]) {
  %594 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 3), float64] */;
  %595 = cast(%var_2289, dtype="float64") /* ty=Tensor[(48), float64] */;
  %596 = cast(%var_2290, dtype="float64") /* ty=Tensor[(1, 176), float64] */;
  %597 = reshape(%595, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %598 = reshape(%596, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %599 = @func_1458(%597, %598) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */;
  %600 = tan(%594) /* ty=Tensor[(14, 10, 3), float64] */;
  %601 = %599.1;
  (%600, %601, %var_2289, %var_2290)
}

def @func_6447(%var_6406: Tensor[(6, 8, 7), float32], %var_6426: Tensor[(6), float32], %var_6437: Tensor[(320), float64]) -> (Tensor[(6, 8, 7), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(6), float32], Tensor[(2100), uint16], Tensor[(50, 4), uint32], Tensor[(16, 2, 10), float64], Tensor[(320), float64]) {
  %602 = cast(%var_6406, dtype="float32") /* ty=Tensor[(6, 8, 7), float32] */;
  %603 = cast(%var_6426, dtype="float32") /* ty=Tensor[(6), float32] */;
  %604 = cast(meta[relay.Constant][46] /* ty=Tensor[(2100), uint16] */, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %605 = cast(meta[relay.Constant][47] /* ty=Tensor[(50, 4), uint32] */, dtype="uint32") /* ty=Tensor[(50, 4), uint32] */;
  %606 = reshape(%603, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %607 = reshape(%604, newshape=[2100]) /* ty=Tensor[(2100), uint16] */;
  %608 = reshape(%605, newshape=[200]) /* ty=Tensor[(200), uint32] */;
  %609 = @func_6334(%606, %607, %608) /* ty=(Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(162), float32], Tensor[(1, 200), uint32], Tensor[(2100), uint16], Tensor[(200), uint32]) */;
  %610 = cast(%var_6437, dtype="float64") /* ty=Tensor[(320), float64] */;
  %611 = reshape(%610, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float64] */;
  %612 = @func_710(%611) /* ty=(Tensor[(16, 2, 10), float64],) */;
  %613 = sqrt(%602) /* ty=Tensor[(6, 8, 7), float32] */;
  %614 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %615 = %609.4;
  %616 = %612.0;
  (%613, %614, %615, %var_6426, meta[relay.Constant][46] /* ty=Tensor[(2100), uint16] */, meta[relay.Constant][47] /* ty=Tensor[(50, 4), uint32] */, %616, %var_6437)
}

def @func_7059() -> (Tensor[(13, 4, 4), bool],) {
  %617 = cast(meta[relay.Constant][49] /* ty=Tensor[(13, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
  %618 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(13, 4, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %621 = greater(%619, %620) /* ty=Tensor[(13, 4, 4), bool] */;
  (%621,)
}

def @func_3778(%var_3771: Tensor[(5, 4, 10), uint32], %var_3772: Tensor[(5, 4, 10), uint32]) -> Tensor[(5, 4, 10), uint32] {
  %622 = cast(%var_3772, dtype="uint32") /* ty=Tensor[(5, 4, 10), uint32] */;
  %623 = shape_of(%var_3771, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_3771, dtype="uint32") /* ty=Tensor[(5, 4, 10), uint32] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%624, %625) /* ty=Tensor[(5, 4, 10), uint32] */
}

def @func_10595(%var_10588: Tensor[(264), float64], %var_10589: Tensor[(351), float32], %var_10590: Tensor[(162), float32]) -> (Tensor[(15, 6), float32], Tensor[(176), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float32]) {
  %626 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %627 = cast(%var_10588, dtype="float64") /* ty=Tensor[(264), float64] */;
  %628 = cast(%var_10589, dtype="float32") /* ty=Tensor[(351), float32] */;
  %629 = cast(%var_10590, dtype="float32") /* ty=Tensor[(162), float32] */;
  %630 = reshape(%627, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %631 = reshape(%628, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %632 = reshape(%629, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %633 = @func_7233(%630, %631, %632) /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) */;
  %634 = %626.1;
  %635 = %633.0;
  (%634, %635, %var_10588, %var_10589, %var_10590)
}

def @func_10794() -> (Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  %636 = @func_10468() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) */;
  %637 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %638 = %636.0;
  %639 = %637.0;
  (%638, %639)
}

def @func_7762(%var_7745: Tensor[(560), uint8], %var_7746: Tensor[(2112), float64]) -> (Tensor[(126), uint64], Tensor[(2, 1056), float64], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  %640 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %641 = cast(meta[relay.Constant][50] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %642 = cast(%var_7745, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %643 = cast(%var_7746, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %644 = reshape(%641, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), float64] */;
  %645 = reshape(%642, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %646 = reshape(%643, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), float64] */;
  %647 = @func_4692(%644, %645, %646) /* ty=(Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) */;
  %648 = cast(%var_7746, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %649 = sin(%648) /* ty=Tensor[(2112), float32] */;
  %650 = cast(%649, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %651 = %640.0;
  %652 = %647.0;
  %653 = atanh(%650) /* ty=Tensor[(2112), float64] */;
  (%651, %652, meta[relay.Constant][50] /* ty=Tensor[(112), float64] */, %var_7745, %653)
}

def @func_5713(%var_5648: Tensor[(14, 15, 10), uint16], %var_5649: Tensor[(14, 15, 10), uint16], %var_5708: Tensor[(1, 200), uint32]) -> (Tensor[(6), float32], Tensor[(3, 30), float32], Tensor[(10, 3, 6), uint16], Tensor[(14, 15, 10), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64], Tensor[(5, 4, 10), uint32], Tensor[(1, 200), uint32]) {
  %654 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 30), float32] */, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
  %655 = reshape(%654, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
  %656 = @func_2388(%655) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
  %657 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %658 = cast(%var_5649, dtype="uint16") /* ty=Tensor[(14, 15, 10), uint16] */;
  %659 = shape_of(%var_5648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_5648, dtype="uint16") /* ty=Tensor[(14, 15, 10), uint16] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %662 = subtract(%660, %661) /* ty=Tensor[(14, 15, 10), uint16] */;
  %663 = cast(%662, dtype="float64") /* ty=Tensor[(14, 15, 10), float64] */;
  %664 = acosh(%663) /* ty=Tensor[(14, 15, 10), float64] */;
  %665 = cast(%664, dtype="float64") /* ty=Tensor[(14, 15, 10), float64] */;
  %666 = cast(meta[relay.Constant][52] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %667 = reshape(%666, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float64] */;
  %668 = cast(%var_5708, dtype="uint32") /* ty=Tensor[(1, 200), uint32] */;
  %669 = cast(%var_5708, dtype="uint32") /* ty=Tensor[(1, 200), uint32] */;
  %670 = reshape(%668, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), uint32] */;
  %671 = reshape(%669, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), uint32] */;
  %672 = %656.2;
  %673 = %657.2;
  %674 = sin(%665) /* ty=Tensor[(14, 15, 10), float64] */;
  %675 = @func_3170(%667) /* ty=Tensor[(5, 6, 7), uint8] */;
  %676 = @func_3778(%670, %671) /* ty=Tensor[(5, 4, 10), uint32] */;
  (%672, meta[relay.Constant][51] /* ty=Tensor[(3, 30), float32] */, %673, %674, %675, meta[relay.Constant][52] /* ty=Tensor[(210), float64] */, %676, %var_5708)
}

def @func_10706(%var_10645: Tensor[(176), float64]) -> (Tensor[(13, 8, 8), float32], Tensor[(176), uint16], Tensor[(10, 3, 6), uint16], Tensor[(1, 3, 2), float32]) {
  %677 = @func_10468() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) */;
  %678 = %677.1;
  %679 = cast(%var_10645, dtype="uint16") /* ty=Tensor[(176), uint16] */;
  %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(1), int32] */;
  %681 = cast(%678, dtype="uint16") /* ty=Tensor[(176), uint16] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %683 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %684 = @func_8863() /* ty=Tensor[(13, 8, 8), float32] */;
  %685 = multiply(%681, %682) /* ty=Tensor[(176), uint16] */;
  %686 = @func_7977() /* ty=Tensor[(10, 3, 6), uint16] */;
  %687 = %683.0;
  (%684, %685, %686, %687)
}

def @func_2388(%var_2379: Tensor[(3, 10, 3), float32]) -> (Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) {
  %688 = cast(%var_2379, dtype="float32") /* ty=Tensor[(3, 10, 3), float32] */;
  %689 = cast(meta[relay.Constant][53] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %690 = reshape(%689, newshape=[1, 3, 2]) /* ty=Tensor[(1, 3, 2), float32] */;
  %691 = @func_2170(%690) /* ty=(Tensor[(1, 3, 2), float32],) */;
  %692 = sqrt(%688) /* ty=Tensor[(3, 10, 3), float32] */;
  %693 = %691.0;
  (%692, %693, meta[relay.Constant][53] /* ty=Tensor[(6), float32] */)
}

def @func_4011(%var_3998: Tensor[(9, 2, 7), uint64], %var_3999: Tensor[(9, 2, 7), uint64], %var_4004: Tensor[(1, 48), float64], %var_4005: Tensor[(176), float64]) -> (Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) {
  %694 = cast(%var_3999, dtype="uint64") /* ty=Tensor[(9, 2, 7), uint64] */;
  %695 = shape_of(%var_3998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%var_3998, dtype="uint64") /* ty=Tensor[(9, 2, 7), uint64] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %698 = cast(%var_4004, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %699 = cast(%var_4005, dtype="float64") /* ty=Tensor[(176), float64] */;
  %700 = reshape(%698, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %701 = reshape(%699, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %702 = @func_1458(%700, %701) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */;
  %703 = subtract(%696, %697) /* ty=Tensor[(9, 2, 7), uint64] */;
  %704 = %702.0;
  (%703, %704, %var_4004, %var_4005)
}

def @func_10848() -> (Tensor[(176), float64], Tensor[(13, 9, 3), float32]) {
  %705 = @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */;
  %706 = @func_10023() /* ty=Tensor[(176), float64] */;
  %707 = %705.1;
  (%706, %707)
}

def @func_4395(%var_4384: Tensor[(13, 9, 3), float32]) -> Tensor[(13, 9, 3), float32] {
  %708 = cast(%var_4384, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %709 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(13, 9, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%710, %711) /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_10468() -> (Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) {
  %712 = @func_8097() /* ty=(Tensor[(176), float64],) */;
  %713 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
  %714 = %712.0;
  (%713, %714)
}

def @func_13070() -> Tensor[(10, 3, 6), float32] {
  %715 = @func_8388() /* ty=(Tensor[(10, 3, 6), float32],) */;
  %715.0
}

def @func_5513(%var_5492: Tensor[(351), float32]) -> (Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) {
  %716 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %717 = cast(%var_5492, dtype="float32") /* ty=Tensor[(351), float32] */;
  %718 = reshape(%717, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %719 = %716.1;
  %720 = @func_4395(%718) /* ty=Tensor[(13, 9, 3), float32] */;
  (%719, %720, %var_5492)
}

def @func_6852() -> Tensor[(126), uint64] {
  %721 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %721.2
}

def @func_7977() -> Tensor[(10, 3, 6), uint16] {
  @func_6576() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_1458(%var_1421: Tensor[(2, 3, 8), float64], %var_1437: Tensor[(176), float64]) -> (Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) {
  %722 = cast(%var_1421, dtype="float64") /* ty=Tensor[(2, 3, 8), float64] */;
  %723 = acosh(%722) /* ty=Tensor[(2, 3, 8), float64] */;
  %724 = cast(%723, dtype="int64") /* ty=Tensor[(2, 3, 8), int64] */;
  %725 = shape_of(%var_1421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%var_1421, dtype="int64") /* ty=Tensor[(2, 3, 8), int64] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %728 = cast(%var_1437, dtype="float64") /* ty=Tensor[(176), float64] */;
  %729 = cast(meta[relay.Constant][55] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %730 = reshape(%728, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %731 = reshape(%729, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %732 = @func_79(%730, %731) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %733 = cast(%var_1437, dtype="float64") /* ty=Tensor[(176), float64] */;
  %734 = cast(meta[relay.Constant][55] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %735 = reshape(%733, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %736 = reshape(%734, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
  %737 = @func_79(%735, %736) /* ty=(Tensor[(12, 16, 11), float64],) */;
  %738 = cast(meta[relay.Constant][56] /* ty=Tensor[(560), uint8] */, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %739 = %737.0;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %741 = reshape(%738, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), uint8] */;
  %742 = reshape(%740, newshape=[22, 96]) /* ty=Tensor[(22, 96), float64] */;
  %743 = @func_338(%741, %742) /* ty=(Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) */;
  %744 = minimum(%726, %727) /* ty=Tensor[(2, 3, 8), int64] */;
  %745 = %732.0;
  %746 = %743.13;
  (%744, %745, %var_1437, meta[relay.Constant][55] /* ty=Tensor[(2112), float64] */, %739, %746, meta[relay.Constant][56] /* ty=Tensor[(560), uint8] */)
}

def @func_11815() -> Tensor[(126), uint64] {
  %747 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %747.0
}

def @func_12462() -> Tensor[(126), uint64] {
  %748 = @func_7873() /* ty=(Tensor[(126), uint64],) */;
  %748.0
}

def @func_9404(%var_9396: Tensor[(13, 9, 7), float64]) -> Tensor[(13, 9, 7), float64] {
  %749 = cast(%var_9396, dtype="float64") /* ty=Tensor[(13, 9, 7), float64] */;
  sinh(%749) /* ty=Tensor[(13, 9, 7), float64] */
}

def @func_6691() -> (Tensor[(126), uint64],) {
  %750 = @func_6354() /* ty=(Tensor[(126), uint64],) */;
  %751 = %750.0;
  (%751,)
}

def @func_10728() -> (Tensor[(126), uint64],) {
  %752 = @func_7873() /* ty=(Tensor[(126), uint64],) */;
  %753 = %752.0;
  (%753,)
}

def @func_11698() -> Tensor[(126), uint64] {
  %754 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %754.0
}

def @func_7233(%var_7203: Tensor[(264), float64], %var_7206: Tensor[(351), float32], %var_7207: Tensor[(162), float32]) -> (Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) {
  %755 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %756 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
  %757 = cast(%756, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
  %758 = cast(%var_7203, dtype="float64") /* ty=Tensor[(264), float64] */;
  %759 = reshape(%758, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
  %760 = @func_3807(%759) /* ty=(Tensor[(6, 4, 11), float64],) */;
  %761 = cast(%var_7206, dtype="float32") /* ty=Tensor[(351), float32] */;
  %762 = cast(%var_7207, dtype="float32") /* ty=Tensor[(162), float32] */;
  %763 = reshape(%761, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %764 = reshape(%762, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %765 = @func_5598(%763, %764) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
  %766 = %755.0;
  %767 = sin(%757) /* ty=Tensor[(10, 3, 6), float32] */;
  %768 = %760.0;
  %769 = %765.1;
  (%766, %767, %768, %var_7203, %769, %var_7206, %var_7207)
}

def @func_7576(%var_7549: Tensor[(264), float64], %var_7550: Tensor[(351), float32], %var_7551: Tensor[(162), float32], %var_7559: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float64]) {
  %770 = cast(%var_7549, dtype="float64") /* ty=Tensor[(264), float64] */;
  %771 = cast(%var_7550, dtype="float32") /* ty=Tensor[(351), float32] */;
  %772 = cast(%var_7551, dtype="float32") /* ty=Tensor[(162), float32] */;
  %773 = reshape(%770, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %774 = reshape(%771, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %775 = reshape(%772, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %776 = @func_7233(%773, %774, %775) /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) */;
  %777 = cast(%var_7551, dtype="float32") /* ty=Tensor[(162), float32] */;
  %778 = acos(%777) /* ty=Tensor[(162), float32] */;
  %779 = cast(%var_7559, dtype="float64") /* ty=Tensor[(162), float64] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(1), int32] */;
  %781 = cast(%778, dtype="float64") /* ty=Tensor[(162), float64] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?), float64] */;
  %783 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %784 = %776.2;
  %785 = divide(%781, %782) /* ty=Tensor[(162), float64] */;
  (%783, %784, %var_7549, %var_7550, %785)
}

def @func_12428() -> Tensor[(10, 3, 6), uint16] {
  @func_11939() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_5825(%var_5815: Tensor[(560), uint8], %var_5816: Tensor[(2112), float64]) -> (Tensor[(1, 3, 2), float32], Tensor[(5, 7, 8), float64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  %786 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %787 = cast(meta[relay.Constant][57] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %788 = cast(%var_5815, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %789 = cast(%var_5816, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %790 = reshape(%787, newshape=[5, 7, 8]) /* ty=Tensor[(5, 7, 8), float64] */;
  %791 = reshape(%788, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %792 = reshape(%789, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
  %793 = @func_5070(%790, %791, %792) /* ty=(Tensor[(5, 7, 8), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
  %794 = %786.0;
  %795 = %793.0;
  (%794, %795, meta[relay.Constant][57] /* ty=Tensor[(280), float64] */, %var_5815, %var_5816)
}

def @func_5070(%var_5046: Tensor[(5, 7, 8), float64], %var_5056: Tensor[(560), uint8], %var_5057: Tensor[(2112), float64]) -> (Tensor[(5, 7, 8), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  %796 = cast(%var_5046, dtype="float64") /* ty=Tensor[(5, 7, 8), float64] */;
  %797 = cast(%var_5056, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %798 = cast(%var_5057, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %799 = reshape(%797, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), uint8] */;
  %800 = reshape(%798, newshape=[22, 96]) /* ty=Tensor[(22, 96), float64] */;
  %801 = @func_338(%799, %800) /* ty=(Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) */;
  %802 = sqrt(%796) /* ty=Tensor[(5, 7, 8), float64] */;
  %803 = %801.11;
  (%802, %803, %var_5056, %var_5057)
}

def @func_3605(%var_3580: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
  %804 = cast(%var_3580, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %805 = sqrt(%804) /* ty=Tensor[(14, 16, 16), float32] */;
  (%805,)
}

def @func_12090(%var_12066: Tensor[(560), uint8], %var_12083: Tensor[(160), int32], %var_12084: Tensor[(1280), int32], %var_12087: Tensor[(1, 900), float32]) -> (Tensor[(10, 3, 6), uint16], Tensor[(2112), float64], Tensor[(560), uint8], Tensor[(10, 3, 6), uint16], Tensor[(160), int32], Tensor[(1280), int32], Tensor[(900), float32], Tensor[(1, 900), float32], Tensor[(176), float64]) {
  %806 = @func_11240() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %807 = cast(%var_12066, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %808 = reshape(%807, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %809 = @func_10182(%808) /* ty=(Tensor[(126), uint64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
  %810 = cast(%var_12083, dtype="int32") /* ty=Tensor[(160), int32] */;
  %811 = cast(%var_12084, dtype="int32") /* ty=Tensor[(1280), int32] */;
  %812 = reshape(%810, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), int32] */;
  %813 = reshape(%811, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int32] */;
  %814 = @func_10439(%812, %813) /* ty=(Tensor[(10, 16, 8), bool], Tensor[(10, 3, 6), uint16]) */;
  %815 = cast(%var_12087, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
  %816 = cast(meta[relay.Constant][58] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %817 = reshape(%815, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %818 = reshape(%816, newshape=[4, 44]) /* ty=Tensor[(4, 44), float64] */;
  %819 = @func_9477(%817, %818) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(4, 44), float64], Tensor[(3, 2), float32]) */;
  %820 = %806.0;
  %821 = %809.3;
  %822 = %814.1;
  %823 = %819.2;
  (%820, %821, %var_12066, %822, %var_12083, %var_12084, %823, %var_12087, meta[relay.Constant][58] /* ty=Tensor[(176), float64] */)
}

def @func_8210() -> (Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) {
  %824 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %825 = @func_8109() /* ty=Tensor[(10, 3, 6), uint16] */;
  %826 = %824.0;
  (%825, %826)
}

def @func_10204() -> (Tensor[(10, 3, 6), float64],) {
  %827 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
  %828 = %827.0;
  (%828,)
}

def @func_12320() -> Tensor[(10, 3, 6), float32] {
  %829 = @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
  acos(%831) /* ty=Tensor[(10, 3, 6), float32] */
}

def @func_8628(%var_8614: Tensor[(180), uint16]) -> (Tensor[(13, 9, 3), float32], Tensor[(10, 3, 6), uint64], Tensor[(180), uint16]) {
  %832 = @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */;
  %833 = cast(%var_8614, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %834 = reshape(%833, newshape=[10, 3, 6]) /* ty=Tensor[(10, 3, 6), uint16] */;
  %835 = @func_6929(%834) /* ty=(Tensor[(10, 3, 6), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %836 = %832.1;
  %837 = %835.0;
  (%836, %837, %var_8614)
}

def @func_5442() -> Tensor[(10, 3, 6), float64] {
  %838 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %839 = %838.2;
  %840 = cast(%839, dtype="float64") /* ty=Tensor[(10, 3, 6), float64] */;
  erf(%840) /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_6576() -> Tensor[(10, 3, 6), uint16] {
  %841 = @func_5644() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), float64]) */;
  %841.0
}

def @func_11478() -> (Tensor[(126), uint64],) {
  %842 = @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */;
  %843 = %842.0;
  (%843,)
}

def @func_3170(%var_3158: Tensor[(5, 6, 7), float64]) -> Tensor[(5, 6, 7), uint8] {
  %844 = cast(%var_3158, dtype="float64") /* ty=Tensor[(5, 6, 7), float64] */;
  %845 = sin(%844) /* ty=Tensor[(5, 6, 7), float64] */;
  %846 = cast(%var_3158, dtype="uint8") /* ty=Tensor[(5, 6, 7), uint8] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%845, dtype="uint8") /* ty=Tensor[(5, 6, 7), uint8] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%848, %849) /* ty=Tensor[(5, 6, 7), uint8] */
}

def @func_9845(%var_9823: Tensor[(560), uint8], %var_9839: Tensor[(210), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(16, 7, 560), uint32], Tensor[(4, 28), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) {
  %850 = @func_8472() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %851 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %852 = cast(%var_9823, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %853 = cast(meta[relay.Constant][60] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %854 = reshape(%851, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), float64] */;
  %855 = reshape(%852, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %856 = reshape(%853, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), float64] */;
  %857 = @func_4692(%854, %855, %856) /* ty=(Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) */;
  %858 = cast(%var_9839, dtype="float64") /* ty=Tensor[(210), float64] */;
  %859 = reshape(%858, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float64] */;
  %860 = @func_8109() /* ty=Tensor[(10, 3, 6), uint16] */;
  %861 = %850.1;
  %862 = %857.1;
  %863 = @func_3170(%859) /* ty=Tensor[(5, 6, 7), uint8] */;
  (%860, %861, %862, meta[relay.Constant][59] /* ty=Tensor[(4, 28), float64] */, %var_9823, meta[relay.Constant][60] /* ty=Tensor[(2112), float64] */, %863, %var_9839)
}

def @func_11045() -> (Tensor[(10, 3, 6), uint16],) {
  %864 = @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %865 = %864.0;
  (%865,)
}

def @func_11539() -> Tensor[(13, 8, 8), float32] {
  @func_8863() /* ty=Tensor[(13, 8, 8), float32] */
}

def @main(%var_13130: Tensor[(16, 7, 9), float64], %var_13151: Tensor[(16, 7, 9), float64]) -> (Tensor[(16, 7, 9), bool], Tensor[(16, 7, 9), float32]) {
  %866 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %867 = shape_of(%var_13130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %868 = cast(%var_13130, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %870 = add(%868, %869) /* ty=Tensor[(16, 7, 9), float64] */;
  %871 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 7, 9), float64] */, dtype="bool") /* ty=Tensor[(16, 7, 9), bool] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%870, dtype="bool") /* ty=Tensor[(16, 7, 9), bool] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %875 = cast(%var_13151, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %876 = shape_of(%var_13130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%var_13130, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %879 = greater(%873, %874) /* ty=Tensor[(16, 7, 9), bool] */;
  %880 = floor_mod(%877, %878) /* ty=Tensor[(16, 7, 9), float32] */;
  (%879, %880)
}

def @func_79(%var_73: Tensor[(1, 16, 11), float64], %var_74: Tensor[(12, 16, 11), float64]) -> (Tensor[(12, 16, 11), float64],) {
  %881 = cast(%var_73, dtype="float64") /* ty=Tensor[(1, 16, 11), float64] */;
  %882 = cast(%var_74, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %883 = divide(%881, %882) /* ty=Tensor[(12, 16, 11), float64] */;
  (%883,)
}

def @func_12518() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
  %884 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %885 = @func_11240() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %886 = %884.2;
  %887 = %885.0;
  (%886, %887)
}

def @func_12853(%var_12848: Tensor[(10, 3, 6), uint16]) -> Tensor[(10, 3, 6), int8] {
  %888 = @func_11502() /* ty=Tensor[(10, 3, 6), uint16] */;
  %889 = cast(%var_12848, dtype="int8") /* ty=Tensor[(10, 3, 6), int8] */;
  %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%888, dtype="int8") /* ty=Tensor[(10, 3, 6), int8] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%891, %892) /* ty=Tensor[(10, 3, 6), int8] */
}

def @func_12454() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
  %893 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
  %894 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
  %895 = @func_8109() /* ty=Tensor[(10, 3, 6), uint16] */;
  %896 = %893.1;
  (%894, %895, %896)
}

def @func_8116() -> (Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) {
  %897 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 351), float32] */, dtype="float32") /* ty=Tensor[(1, 351), float32] */;
  %898 = reshape(%897, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %899 = @func_6799() /* ty=Tensor[(126), uint64] */;
  %900 = @func_4395(%898) /* ty=Tensor[(13, 9, 3), float32] */;
  (%899, %900, meta[relay.Constant][62] /* ty=Tensor[(1, 351), float32] */)
}

def @func_8320(%var_8302: Tensor[(15, 4, 4), int16], %var_8303: Tensor[(15, 4, 4), int16]) -> (Tensor[(15, 4, 4), int16], Tensor[(10, 3, 6), uint16]) {
  %901 = cast(%var_8303, dtype="int16") /* ty=Tensor[(15, 4, 4), int16] */;
  %902 = shape_of(%var_8302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_8302, dtype="int16") /* ty=Tensor[(15, 4, 4), int16] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %905 = logical_xor(%903, %904) /* ty=Tensor[(15, 4, 4), int16] */;
  %906 = @func_7977() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%905, %906)
}

def @func_11836() -> Tensor[(10, 3, 6), uint16] {
  %907 = @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %907.0
}

def @func_7080(%var_7062: Tensor[(8, 2, 2), float32], %var_7067: Tensor[(90), int8]) -> (Tensor[(8, 2, 2), float32], Tensor[(10, 1, 9), int8], Tensor[(90), int8]) {
  %908 = cast(%var_7062, dtype="float32") /* ty=Tensor[(8, 2, 2), float32] */;
  %909 = cast(%var_7067, dtype="int8") /* ty=Tensor[(90), int8] */;
  %910 = reshape(%909, newshape=[10, 1, 9]) /* ty=Tensor[(10, 1, 9), int8] */;
  %911 = acos(%908) /* ty=Tensor[(8, 2, 2), float32] */;
  %912 = @func_3929(%910) /* ty=Tensor[(10, 1, 9), int8] */;
  (%911, %912, %var_7067)
}

def @func_11502() -> Tensor[(10, 3, 6), uint16] {
  %913 = @func_11159() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %913.0
}

def @func_10909() -> Tensor[(10, 3, 6), float64] {
  %914 = @func_10204() /* ty=(Tensor[(10, 3, 6), float64],) */;
  %914.0
}

def @func_9477(%var_9460: Tensor[(900), float32], %var_9461: Tensor[(4, 44), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(4, 44), float64], Tensor[(3, 2), float32]) {
  %915 = cast(%var_9460, dtype="float32") /* ty=Tensor[(900), float32] */;
  %916 = cast(%var_9461, dtype="float64") /* ty=Tensor[(4, 44), float64] */;
  %917 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 2), float32] */;
  %918 = reshape(%915, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float32] */;
  %919 = reshape(%916, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %920 = reshape(%917, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %921 = @func_2896(%918, %919, %920) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(2, 3, 8), int64]) */;
  %922 = @func_6763() /* ty=Tensor[(10, 3, 6), float64] */;
  %923 = %921.6;
  (%922, %923, %var_9460, %var_9461, meta[relay.Constant][63] /* ty=Tensor[(3, 2), float32] */)
}

def @func_8692(%var_8673: Tensor[(3584), float32]) -> (Tensor[(176), float64], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(10, 3, 6), float64], Tensor[(126), uint64]) {
  %924 = @func_8097() /* ty=(Tensor[(176), float64],) */;
  %925 = cast(%var_8673, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %926 = reshape(%925, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %927 = @func_3605(%926) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %928 = @func_7774() /* ty=(Tensor[(126), uint64],) */;
  %929 = %924.0;
  %930 = %927.0;
  %931 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %932 = %928.0;
  (%929, %930, %var_8673, %931, %932)
}

def @func_9674(%var_9550: Tensor[(16, 15, 14), int8], %var_9551: Tensor[(16, 15, 14), int8], %var_9568: Tensor[(28, 4), float64], %var_9644: Tensor[(2112), float64], %var_9659: Tensor[(240), int16]) -> (Tensor[(16, 15, 14), bool], Tensor[(28, 4), float64], Tensor[(560), uint8], Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(2112), float32], Tensor[(15, 4, 4), int16], Tensor[(240), int16]) {
  %933 = cast(%var_9551, dtype="bool") /* ty=Tensor[(16, 15, 14), bool] */;
  %934 = shape_of(%var_9550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%var_9550, dtype="bool") /* ty=Tensor[(16, 15, 14), bool] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %937 = cast(meta[relay.Constant][65] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %938 = reshape(%937, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %939 = @func_5513(%938) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */;
  %940 = cast(%var_9568, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %941 = cast(meta[relay.Constant][64] /* ty=Tensor[(560), uint8] */, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %942 = cast(meta[relay.Constant][66] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %943 = reshape(%940, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), float64] */;
  %944 = reshape(%941, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %945 = reshape(%942, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), float64] */;
  %946 = @func_4692(%943, %944, %945) /* ty=(Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) */;
  %947 = %946.2;
  %948 = cast(%947, dtype="uint8") /* ty=Tensor[(12, 16, 11), uint8] */;
  %949 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(2112), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %950 = cast(meta[relay.Constant][66] /* ty=Tensor[(2112), float64] */, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %952 = right_shift(%950, %951) /* ty=Tensor[(2112), uint8] */;
  %953 = cast(%952, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %954 = asinh(%953) /* ty=Tensor[(2112), float64] */;
  %955 = cast(%954, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %956 = asin(%955) /* ty=Tensor[(2112), float64] */;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %958 = log(%957) /* ty=Tensor[(2112), float64] */;
  %959 = cast(%var_9644, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %960 = shape_of(%958, dtype="int32") /* ty=Tensor[(1), int32] */;
  %961 = cast(%958, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %963 = subtract(%961, %962) /* ty=Tensor[(2112), uint8] */;
  %964 = cast(%963, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %965 = shape_of(%952, dtype="int32") /* ty=Tensor[(1), int32] */;
  %966 = cast(%952, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?), float32] */;
  %968 = cast(%var_9659, dtype="int16") /* ty=Tensor[(240), int16] */;
  %969 = cast(%var_9659, dtype="int16") /* ty=Tensor[(240), int16] */;
  %970 = reshape(%968, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), int16] */;
  %971 = reshape(%969, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), int16] */;
  %972 = @func_8320(%970, %971) /* ty=(Tensor[(15, 4, 4), int16], Tensor[(10, 3, 6), uint16]) */;
  %973 = not_equal(%935, %936) /* ty=Tensor[(16, 15, 14), bool] */;
  %974 = @func_6763() /* ty=Tensor[(10, 3, 6), float64] */;
  %975 = %939.0;
  %976 = floor_mod(%966, %967) /* ty=Tensor[(2112), float32] */;
  %977 = %972.0;
  (%973, %var_9568, meta[relay.Constant][64] /* ty=Tensor[(560), uint8] */, %974, %975, meta[relay.Constant][65] /* ty=Tensor[(351), float32] */, %976, %977, %var_9659)
}

def @func_10223() -> (Tensor[(10, 3, 6), float64], Tensor[(126), uint64]) {
  %978 = @func_6354() /* ty=(Tensor[(126), uint64],) */;
  %979 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
  %980 = %978.0;
  (%979, %980)
}

def @func_8817(%var_8793: Tensor[(90), float32], %var_8806: Tensor[(2112), float64]) -> (Tensor[(10, 3, 6), float32], Tensor[(320), float64], Tensor[(90), float32], Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(2112), float64], Tensor[(10, 1, 9), int8]) {
  %981 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %982 = cast(%981, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
  %983 = cast(%var_8793, dtype="float32") /* ty=Tensor[(90), float32] */;
  %984 = reshape(%983, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %985 = @func_4612(%984) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) */;
  %986 = cast(%var_8806, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %987 = reshape(%986, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
  %988 = @func_8764(%987) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(13, 9, 3), float32], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(162), float32]) */;
  %989 = cast(%var_8793, dtype="int8") /* ty=Tensor[(90), int8] */;
  %990 = reshape(%989, newshape=[10, 1, 9]) /* ty=Tensor[(10, 1, 9), int8] */;
  %991 = acosh(%982) /* ty=Tensor[(10, 3, 6), float32] */;
  %992 = %985.3;
  %993 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %994 = %988.6;
  %995 = @func_3929(%990) /* ty=Tensor[(10, 1, 9), int8] */;
  (%991, %992, %var_8793, %993, %994, %var_8806, %995)
}

def @func_2170(%var_2166: Tensor[(1, 3, 2), float32]) -> (Tensor[(1, 3, 2), float32],) {
  %996 = cast(%var_2166, dtype="float32") /* ty=Tensor[(1, 3, 2), float32] */;
  %997 = asinh(%996) /* ty=Tensor[(1, 3, 2), float32] */;
  (%997,)
}

def @func_7096(%var_7093: Tensor[(210), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) {
  %998 = cast(%var_7093, dtype="float64") /* ty=Tensor[(210), float64] */;
  %999 = reshape(%998, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float64] */;
  %1000 = @func_6576() /* ty=Tensor[(10, 3, 6), uint16] */;
  %1001 = @func_3170(%999) /* ty=Tensor[(5, 6, 7), uint8] */;
  (%1000, %1001, %var_7093)
}

def @func_5598(%var_5580: Tensor[(351), float32], %var_5587: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) {
  %1002 = cast(%var_5580, dtype="float32") /* ty=Tensor[(351), float32] */;
  %1003 = reshape(%1002, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %1004 = @func_5513(%1003) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */;
  %1005 = cast(%var_5587, dtype="float32") /* ty=Tensor[(162), float32] */;
  %1006 = reshape(%1005, newshape=[9, 3, 6]) /* ty=Tensor[(9, 3, 6), float32] */;
  %1007 = @func_4487(%1006) /* ty=(Tensor[(9, 3, 6), float32], Tensor[(3, 10, 3), float32], Tensor[(90), float32]) */;
  %1008 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %1009 = %1004.0;
  %1010 = %1007.0;
  (%1008, %1009, %var_5580, %1010, %var_5587)
}

def @func_8388() -> (Tensor[(10, 3, 6), float32],) {
  %1011 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
  %1012 = cast(%1011, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
  %1013 = asinh(%1012) /* ty=Tensor[(10, 3, 6), float32] */;
  (%1013,)
}

def @func_11607() -> (Tensor[(10, 3, 6), uint16],) {
  %1014 = @func_11502() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%1014,)
}

def @func_12664(%var_12578: Tensor[(9, 11, 13), float32], %var_12623: Tensor[(351), float32], %var_12650: Tensor[(504), int8]) -> (Tensor[(9, 11, 13), float32], Tensor[(126), uint64], Tensor[(351), float32], Tensor[(14, 6, 6), int8], Tensor[(84), int8], Tensor[(504), int8]) {
  %1015 = cast(%var_12578, dtype="float32") /* ty=Tensor[(9, 11, 13), float32] */;
  %1016 = cast(%var_12623, dtype="float32") /* ty=Tensor[(351), float32] */;
  %1017 = reshape(%1016, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %1018 = @func_12355(%1017) /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(351), float32], Tensor[(10, 3, 6), float64]) */;
  %1019 = cast(meta[relay.Constant][67] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %1020 = cast(%var_12650, dtype="int8") /* ty=Tensor[(504), int8] */;
  %1021 = reshape(%1019, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), int8] */;
  %1022 = reshape(%1020, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), int8] */;
  %1023 = cos(%1015) /* ty=Tensor[(9, 11, 13), float32] */;
  %1024 = %1018.0;
  %1025 = @func_3753(%1021, %1022) /* ty=Tensor[(14, 6, 6), int8] */;
  (%1023, %1024, %var_12623, %1025, meta[relay.Constant][67] /* ty=Tensor[(84), int8] */, %var_12650)
}

def @func_6929(%var_6883: Tensor[(10, 3, 6), uint16]) -> (Tensor[(10, 3, 6), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  %1026 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
  %1027 = cast(%var_6883, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
  %1028 = shape_of(%1026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1029 = cast(%1026, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1031 = bitwise_xor(%1029, %1030) /* ty=Tensor[(10, 3, 6), uint16] */;
  %1032 = cast(%1026, dtype="uint64") /* ty=Tensor[(10, 3, 6), uint64] */;
  %1033 = shape_of(%1031, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%1031, dtype="uint64") /* ty=Tensor[(10, 3, 6), uint64] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1036 = cast(meta[relay.Constant][68] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1037 = reshape(%1036, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
  %1038 = @func_3807(%1037) /* ty=(Tensor[(6, 4, 11), float64],) */;
  %1039 = right_shift(%1034, %1035) /* ty=Tensor[(10, 3, 6), uint64] */;
  %1040 = %1038.0;
  (%1039, %1040, meta[relay.Constant][68] /* ty=Tensor[(264), float64] */)
}

def @func_9199() -> Tensor[(10, 3, 6), uint16] {
  %1041 = @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %1041.0
}

def @func_6799() -> Tensor[(126), uint64] {
  %1042 = @func_6354() /* ty=(Tensor[(126), uint64],) */;
  %1042.0
}

def @func_5426() -> (Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) {
  %1043 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %1044 = cast(meta[relay.Constant][69] /* ty=Tensor[(126), uint64] */, dtype="uint64") /* ty=Tensor[(126), uint64] */;
  %1045 = cast(meta[relay.Constant][69] /* ty=Tensor[(126), uint64] */, dtype="uint64") /* ty=Tensor[(126), uint64] */;
  %1046 = cast(meta[relay.Constant][70] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1047 = cast(meta[relay.Constant][71] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %1048 = reshape(%1044, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %1049 = reshape(%1045, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %1050 = reshape(%1046, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %1051 = reshape(%1047, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %1052 = @func_4011(%1048, %1049, %1050, %1051) /* ty=(Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) */;
  %1053 = %1043.1;
  %1054 = %1052.2;
  (%1053, %1054, meta[relay.Constant][69] /* ty=Tensor[(126), uint64] */, meta[relay.Constant][70] /* ty=Tensor[(48), float64] */, meta[relay.Constant][71] /* ty=Tensor[(176), float64] */)
}

def @func_7774() -> (Tensor[(126), uint64],) {
  %1055 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %1056 = %1055.0;
  (%1056,)
}

def @func_6537(%var_6471: Tensor[(15, 6), float32], %var_6481: Tensor[(900), float64], %var_6523: Tensor[(200), uint32], %var_6526: Tensor[(5, 48), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(48, 176), int8], Tensor[(900), float64], Tensor[(5, 4, 10), uint32], Tensor[(200), uint32], Tensor[(5, 48), bool]) {
  %1057 = cast(%var_6471, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %1058 = reshape(%1057, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %1059 = @func_4612(%1058) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) */;
  %1060 = cast(%var_6481, dtype="float64") /* ty=Tensor[(900), float64] */;
  %1061 = cast(%var_6481, dtype="float64") /* ty=Tensor[(900), float64] */;
  %1062 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %1063 = reshape(%1060, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float64] */;
  %1064 = reshape(%1061, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float64] */;
  %1065 = reshape(%1062, newshape=[48, 1]) /* ty=Tensor[(48, 1), float64] */;
  %1066 = @func_5215(%1063, %1064, %1065) /* ty=(Tensor[(15, 5, 12), float64], Tensor[(15, 5, 12), uint64], Tensor[(10, 1, 9), int8], Tensor[(10, ?, 9), bool], Tensor[(48), float64], Tensor[(3, 10, 3), float32], Tensor[(48, 176), int8], Tensor[(560), uint8]) */;
  %1067 = cast(%var_6523, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %1068 = cast(%var_6523, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %1069 = reshape(%1067, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), uint32] */;
  %1070 = reshape(%1068, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), uint32] */;
  %1071 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 48), float64] */, dtype="bool") /* ty=Tensor[(1, 48), bool] */;
  %1072 = cast(%var_6526, dtype="bool") /* ty=Tensor[(5, 48), bool] */;
  %1073 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %1074 = %1059.0;
  %1075 = %1066.6;
  %1076 = @func_3778(%1069, %1070) /* ty=Tensor[(5, 4, 10), uint32] */;
  %1077 = equal(%1071, %1072) /* ty=Tensor[(5, 48), bool] */;
  (%1073, %1074, %var_6471, %1075, %var_6481, %1076, %var_6523, %1077)
}

def @func_12788(%var_12783: Tensor[(54), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(3, 3, 6), float32], Tensor[(54), float64]) {
  %1078 = @func_12518() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) */;
  %1079 = cast(%var_12783, dtype="float64") /* ty=Tensor[(54), float64] */;
  %1080 = reshape(%1079, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), float64] */;
  %1081 = @func_8974(%1080) /* ty=(Tensor[(3, 3, 6), float32],) */;
  %1082 = %1078.0;
  %1083 = %1081.0;
  (%1082, %1083, %var_12783)
}

def @func_6763() -> Tensor[(10, 3, 6), float64] {
  @func_5442() /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_10051() -> (Tensor[(126), uint64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  %1084 = @func_6354() /* ty=(Tensor[(126), uint64],) */;
  %1085 = @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %1086 = @func_9863() /* ty=(Tensor[(126), uint64],) */;
  %1087 = %1084.0;
  %1088 = %1085.0;
  %1089 = %1086.0;
  (%1087, %1088, %1089)
}

def @func_11152() -> (Tensor[(126), uint64],) {
  %1090 = @func_7774() /* ty=(Tensor[(126), uint64],) */;
  %1091 = %1090.0;
  (%1091,)
}

def @func_9156(%var_9137: Tensor[(351), float32], %var_9138: Tensor[(162), float32]) -> (Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(351), bool]) {
  %1092 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %1093 = cast(%var_9137, dtype="float32") /* ty=Tensor[(351), float32] */;
  %1094 = cast(%var_9138, dtype="float32") /* ty=Tensor[(162), float32] */;
  %1095 = reshape(%1093, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %1096 = reshape(%1094, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %1097 = @func_5598(%1095, %1096) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
  %1098 = %1097.2;
  %1099 = cast(%var_9137, dtype="bool") /* ty=Tensor[(351), bool] */;
  %1100 = shape_of(%1098, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1101 = cast(%1098, dtype="bool") /* ty=Tensor[(351), bool] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1103 = %1092.0;
  %1104 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
  %1105 = not_equal(%1101, %1102) /* ty=Tensor[(351), bool] */;
  (%1103, %1104, %var_9138, %1105)
}

def @func_4692(%var_4638: Tensor[(16, 7, 1), float64], %var_4653: Tensor[(560), uint8], %var_4654: Tensor[(2, 1056), float64]) -> (Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) {
  %1106 = cast(-7.85244f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1107 = cast(%var_4638, dtype="float64") /* ty=Tensor[(16, 7, 1), float64] */;
  %1108 = power(%1106, %1107) /* ty=Tensor[(16, 7, 1), float64] */;
  %1109 = cast(%var_4653, dtype="uint32") /* ty=Tensor[(560), uint32] */;
  %1110 = cast(%1108, dtype="uint32") /* ty=Tensor[(16, 7, 1), uint32] */;
  %1111 = cast(%var_4653, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %1112 = cast(%var_4654, dtype="float64") /* ty=Tensor[(2, 1056), float64] */;
  %1113 = reshape(%1111, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), uint8] */;
  %1114 = reshape(%1112, newshape=[22, 96]) /* ty=Tensor[(22, 96), float64] */;
  %1115 = @func_338(%1113, %1114) /* ty=(Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) */;
  %1116 = %1115.7;
  %1117 = cast(%1116, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
  %1118 = bitwise_xor(%1109, %1110) /* ty=Tensor[(16, 7, 560), uint32] */;
  %1119 = asin(%1117) /* ty=Tensor[(12, 16, 11), float32] */;
  (%var_4654, %1118, %1119)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11152() -> (Tensor[(126), uint64],) {
  %0 = @func_7774() /* ty=(Tensor[(126), uint64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_11205() -> Tensor[(10, 3, 6), uint16] {
  @func_11203() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_11047() -> (Tensor[(10, 3, 6), uint16],) {
  @func_11045() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_6657() -> Tensor[(10, 3, 6), uint16] {
  %2 = fn () -> Tensor[(10, 3, 6), uint16] {
    @func_6576() /* ty=Tensor[(10, 3, 6), uint16] */
  };
  %2() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_3781(%var_3779: Tensor[(5, 4, 10), uint32], %var_3780: Tensor[(5, 4, 10), uint32]) -> Tensor[(5, 4, 10), uint32] {
  %7 = fn (%var_3771: Tensor[(5, 4, 10), uint32], %var_3772: Tensor[(5, 4, 10), uint32]) -> Tensor[(5, 4, 10), uint32] {
    %3 = cast(%var_3772, dtype="uint32") /* ty=Tensor[(5, 4, 10), uint32] */;
    %4 = shape_of(%var_3771, dtype="int32") /* ty=Tensor[(3), int32] */;
    %5 = cast(%var_3771, dtype="uint32") /* ty=Tensor[(5, 4, 10), uint32] */;
    %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_and(%5, %6) /* ty=Tensor[(5, 4, 10), uint32] */
  };
  %7(%var_3779, %var_3780) /* ty=Tensor[(5, 4, 10), uint32] */
}

def @func_10205() -> (Tensor[(10, 3, 6), float64],) {
  %10 = fn () -> (Tensor[(10, 3, 6), float64],) {
    %8 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
    %9 = %8.0;
    (%9,)
  };
  %10() /* ty=(Tensor[(10, 3, 6), float64],) */
}

def @func_5426() -> (Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) {
  %11 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(126), uint64] */, dtype="uint64") /* ty=Tensor[(126), uint64] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(126), uint64] */, dtype="uint64") /* ty=Tensor[(126), uint64] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %16 = reshape(%12, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %17 = reshape(%13, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %18 = reshape(%14, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %19 = reshape(%15, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %20 = @func_4011(%16, %17, %18, %19) /* ty=(Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) */;
  %21 = %11.1;
  %22 = %20.2;
  (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(126), uint64] */, meta[relay.Constant][1] /* ty=Tensor[(48), float64] */, meta[relay.Constant][2] /* ty=Tensor[(176), float64] */)
}

def @func_9169() -> Tensor[(126), uint64] {
  @func_6799() /* ty=Tensor[(126), uint64] */
}

def @func_11161() -> (Tensor[(10, 3, 6), uint16],) {
  @func_11159() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_11539() -> Tensor[(13, 8, 8), float32] {
  @func_8863() /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_11600(%var_11598: Tensor[(6, 27), float32], %var_11599: Tensor[(5, 42), float64]) -> (Tensor[(264), float64], Tensor[(90), float32], Tensor[(6, 27), float32], Tensor[(5, 6, 7), uint8], Tensor[(5, 42), float64]) {
  @func_11596(%var_11598, %var_11599) /* ty=(Tensor[(264), float64], Tensor[(90), float32], Tensor[(6, 27), float32], Tensor[(5, 6, 7), uint8], Tensor[(5, 42), float64]) */
}

def @func_8472() -> (Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  %23 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %24 = cast(meta[relay.Constant][3] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %25 = reshape(%24, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
  %26 = @func_3807(%25) /* ty=(Tensor[(6, 4, 11), float64],) */;
  %27 = %23.2;
  %28 = %26.0;
  (%27, %28, meta[relay.Constant][3] /* ty=Tensor[(264), float64] */)
}

def @func_11596(%var_11557: Tensor[(6, 27), float32], %var_11588: Tensor[(5, 42), float64]) -> (Tensor[(264), float64], Tensor[(90), float32], Tensor[(6, 27), float32], Tensor[(5, 6, 7), uint8], Tensor[(5, 42), float64]) {
  %29 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %30 = cast(%var_11557, dtype="float32") /* ty=Tensor[(6, 27), float32] */;
  %31 = reshape(%30, newshape=[9, 3, 6]) /* ty=Tensor[(9, 3, 6), float32] */;
  %32 = @func_4487(%31) /* ty=(Tensor[(9, 3, 6), float32], Tensor[(3, 10, 3), float32], Tensor[(90), float32]) */;
  %33 = cast(%var_11588, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %34 = reshape(%33, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float64] */;
  %35 = %29.2;
  %36 = %32.2;
  %37 = @func_3170(%34) /* ty=Tensor[(5, 6, 7), uint8] */;
  (%35, %36, %var_11557, %37, %var_11588)
}

def @func_1461(%var_1459: Tensor[(2, 3, 8), float64], %var_1460: Tensor[(176), float64]) -> (Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) {
  %63 = fn (%var_1421: Tensor[(2, 3, 8), float64], %var_1437: Tensor[(176), float64]) -> (Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) {
    %38 = cast(%var_1421, dtype="float64") /* ty=Tensor[(2, 3, 8), float64] */;
    %39 = acosh(%38) /* ty=Tensor[(2, 3, 8), float64] */;
    %40 = cast(%39, dtype="int64") /* ty=Tensor[(2, 3, 8), int64] */;
    %41 = shape_of(%var_1421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %42 = cast(%var_1421, dtype="int64") /* ty=Tensor[(2, 3, 8), int64] */;
    %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %44 = cast(%var_1437, dtype="float64") /* ty=Tensor[(176), float64] */;
    %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %46 = reshape(%44, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %47 = reshape(%45, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %48 = @func_79(%46, %47) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %49 = cast(%var_1437, dtype="float64") /* ty=Tensor[(176), float64] */;
    %50 = cast(meta[relay.Constant][4] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %51 = reshape(%49, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %52 = reshape(%50, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %53 = @func_79(%51, %52) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %54 = cast(meta[relay.Constant][5] /* ty=Tensor[(560), uint8] */, dtype="uint8") /* ty=Tensor[(560), uint8] */;
    %55 = %53.0;
    %56 = cast(%55, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
    %57 = reshape(%54, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), uint8] */;
    %58 = reshape(%56, newshape=[22, 96]) /* ty=Tensor[(22, 96), float64] */;
    %59 = @func_338(%57, %58) /* ty=(Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) */;
    %60 = minimum(%42, %43) /* ty=Tensor[(2, 3, 8), int64] */;
    %61 = %48.0;
    %62 = %59.13;
    (%60, %61, %var_1437, meta[relay.Constant][4] /* ty=Tensor[(2112), float64] */, %55, %62, meta[relay.Constant][5] /* ty=Tensor[(560), uint8] */)
  };
  %63(%var_1459, %var_1460) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */
}

def @func_8110() -> Tensor[(10, 3, 6), uint16] {
  %64 = fn () -> Tensor[(10, 3, 6), uint16] {
    @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */
  };
  %64() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_11838() -> Tensor[(10, 3, 6), uint16] {
  @func_11836() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_5337() -> (Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) {
  @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */
}

def @func_12246() -> (Tensor[(10, 3, 6), uint16],) {
  %66 = fn () -> (Tensor[(10, 3, 6), uint16],) {
    %65 = @func_11502() /* ty=Tensor[(10, 3, 6), uint16] */;
    (%65,)
  };
  %66() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_11740(%var_11738: Tensor[(162), float32], %var_11739: Tensor[(2100), uint16]) -> (Tensor[(10, 3, 6), uint16], Tensor[(1, 3, 2), float32], Tensor[(351), float32], Tensor[(162), bool], Tensor[(2100), uint32]) {
  @func_11736(%var_11738, %var_11739) /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(1, 3, 2), float32], Tensor[(351), float32], Tensor[(162), bool], Tensor[(2100), uint32]) */
}

def @func_11241() -> (Tensor[(10, 3, 6), uint16],) {
  %73 = fn () -> (Tensor[(10, 3, 6), uint16],) {
    %67 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
    %68 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 3, 6), uint16] */, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
    %69 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
    %70 = cast(%67, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
    %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %72 = multiply(%70, %71) /* ty=Tensor[(10, 3, 6), uint16] */;
    (%72,)
  };
  %73() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_79(%var_73: Tensor[(1, 16, 11), float64], %var_74: Tensor[(12, 16, 11), float64]) -> (Tensor[(12, 16, 11), float64],) {
  %74 = cast(%var_73, dtype="float64") /* ty=Tensor[(1, 16, 11), float64] */;
  %75 = cast(%var_74, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
  %76 = divide(%74, %75) /* ty=Tensor[(12, 16, 11), float64] */;
  (%76,)
}

def @func_10469() -> (Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) {
  %80 = fn () -> (Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) {
    %77 = @func_8097() /* ty=(Tensor[(176), float64],) */;
    %78 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
    %79 = %77.0;
    (%78, %79)
  };
  %80() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) */
}

def @func_12429() -> Tensor[(10, 3, 6), uint16] {
  %81 = fn () -> Tensor[(10, 3, 6), uint16] {
    @func_11939() /* ty=Tensor[(10, 3, 6), uint16] */
  };
  %81() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_5754(%var_5752: Tensor[(7, 8, 2), int8]) -> (Tensor[(7, 8, 2), bool],) {
  @func_5751(%var_5752) /* ty=(Tensor[(7, 8, 2), bool],) */
}

def @func_7765(%var_7763: Tensor[(560), uint8], %var_7764: Tensor[(2112), float64]) -> (Tensor[(126), uint64], Tensor[(2, 1056), float64], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  %96 = fn (%var_7745: Tensor[(560), uint8], %var_7746: Tensor[(2112), float64]) -> (Tensor[(126), uint64], Tensor[(2, 1056), float64], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
    %82 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
    %83 = cast(meta[relay.Constant][7] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %84 = cast(%var_7745, dtype="uint8") /* ty=Tensor[(560), uint8] */;
    %85 = cast(%var_7746, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %86 = reshape(%83, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), float64] */;
    %87 = reshape(%84, newshape=[560]) /* ty=Tensor[(560), uint8] */;
    %88 = reshape(%85, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), float64] */;
    %89 = @func_4692(%86, %87, %88) /* ty=(Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) */;
    %90 = cast(%var_7746, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %91 = sin(%90) /* ty=Tensor[(2112), float32] */;
    %92 = cast(%91, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %93 = %82.0;
    %94 = %89.0;
    %95 = atanh(%92) /* ty=Tensor[(2112), float64] */;
    (%93, %94, meta[relay.Constant][7] /* ty=Tensor[(112), float64] */, %var_7745, %95)
  };
  %96(%var_7763, %var_7764) /* ty=(Tensor[(126), uint64], Tensor[(2, 1056), float64], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */
}

def @func_6647(%var_6645: Tensor[(63, 2), uint64]) -> (Tensor[(176), float64], Tensor[(63, 2), uint64], Tensor[(2, 3, 8), bool]) {
  @func_6644(%var_6645) /* ty=(Tensor[(176), float64], Tensor[(63, 2), uint64], Tensor[(2, 3, 8), bool]) */
}

def @func_3810(%var_3808: Tensor[(6, 4, 11), float64]) -> (Tensor[(6, 4, 11), float64],) {
  @func_3807(%var_3808) /* ty=(Tensor[(6, 4, 11), float64],) */
}

def @func_7084(%var_7082: Tensor[(8, 2, 2), float32], %var_7083: Tensor[(90), int8]) -> (Tensor[(8, 2, 2), float32], Tensor[(10, 1, 9), int8], Tensor[(90), int8]) {
  @func_7080(%var_7082, %var_7083) /* ty=(Tensor[(8, 2, 2), float32], Tensor[(10, 1, 9), int8], Tensor[(90), int8]) */
}

def @func_9407(%var_9405: Tensor[(13, 9, 7), float64]) -> Tensor[(13, 9, 7), float64] {
  @func_9404(%var_9405) /* ty=Tensor[(13, 9, 7), float64] */
}

def @func_8766(%var_8765: Tensor[(2112), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(13, 9, 3), float32], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(162), float32]) {
  %114 = fn (%var_8740: Tensor[(2112), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(13, 9, 3), float32], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(162), float32]) {
    %97 = cast(meta[relay.Constant][8] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
    %98 = reshape(%97, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %99 = @func_5893(%98) /* ty=(Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) */;
    %100 = %99.7;
    %101 = cast(%100, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
    %102 = cast(meta[relay.Constant][9] /* ty=Tensor[(560), uint8] */, dtype="uint8") /* ty=Tensor[(560), uint8] */;
    %103 = cast(%var_8740, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %104 = reshape(%102, newshape=[560]) /* ty=Tensor[(560), uint8] */;
    %105 = reshape(%103, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
    %106 = @func_7762(%104, %105) /* ty=(Tensor[(126), uint64], Tensor[(2, 1056), float64], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
    %107 = cast(meta[relay.Constant][8] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
    %108 = reshape(%107, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %109 = @func_5893(%108) /* ty=(Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) */;
    %110 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    %111 = log(%101) /* ty=Tensor[(13, 9, 3), float32] */;
    %112 = %106.2;
    %113 = %109.3;
    (%110, meta[relay.Constant][8] /* ty=Tensor[(162), float32] */, %111, %112, meta[relay.Constant][9] /* ty=Tensor[(560), uint8] */, %var_8740, %113)
  };
  %114(%var_8765) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(13, 9, 3), float32], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(162), float32]) */
}

def @func_8692(%var_8673: Tensor[(3584), float32]) -> (Tensor[(176), float64], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(10, 3, 6), float64], Tensor[(126), uint64]) {
  %115 = @func_8097() /* ty=(Tensor[(176), float64],) */;
  %116 = cast(%var_8673, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %117 = reshape(%116, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %118 = @func_3605(%117) /* ty=(Tensor[(14, 16, 16), float32],) */;
  %119 = @func_7774() /* ty=(Tensor[(126), uint64],) */;
  %120 = %115.0;
  %121 = %118.0;
  %122 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %123 = %119.0;
  (%120, %121, %var_8673, %122, %123)
}

def @func_10185(%var_10183: Tensor[(560), uint8]) -> (Tensor[(126), uint64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  @func_10182(%var_10183) /* ty=(Tensor[(126), uint64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */
}

def @func_11324() -> (Tensor[(10, 3, 6), uint16],) {
  %124 = @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %125 = %124.0;
  (%125,)
}

def @func_11503() -> Tensor[(10, 3, 6), uint16] {
  %127 = fn () -> Tensor[(10, 3, 6), uint16] {
    %126 = @func_11159() /* ty=(Tensor[(10, 3, 6), uint16],) */;
    %126.0
  };
  %127() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_8323(%var_8321: Tensor[(15, 4, 4), int16], %var_8322: Tensor[(15, 4, 4), int16]) -> (Tensor[(15, 4, 4), int16], Tensor[(10, 3, 6), uint16]) {
  %134 = fn (%var_8302: Tensor[(15, 4, 4), int16], %var_8303: Tensor[(15, 4, 4), int16]) -> (Tensor[(15, 4, 4), int16], Tensor[(10, 3, 6), uint16]) {
    %128 = cast(%var_8303, dtype="int16") /* ty=Tensor[(15, 4, 4), int16] */;
    %129 = shape_of(%var_8302, dtype="int32") /* ty=Tensor[(3), int32] */;
    %130 = cast(%var_8302, dtype="int16") /* ty=Tensor[(15, 4, 4), int16] */;
    %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %132 = logical_xor(%130, %131) /* ty=Tensor[(15, 4, 4), int16] */;
    %133 = @func_7977() /* ty=Tensor[(10, 3, 6), uint16] */;
    (%132, %133)
  };
  %134(%var_8321, %var_8322) /* ty=(Tensor[(15, 4, 4), int16], Tensor[(10, 3, 6), uint16]) */
}

def @func_5751(%var_5746: Tensor[(7, 8, 2), int8]) -> (Tensor[(7, 8, 2), bool],) {
  %135 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 8, 2), int8] */, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %136 = shape_of(%var_5746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%var_5746, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %139 = less(%137, %138) /* ty=Tensor[(7, 8, 2), bool] */;
  (%139,)
}

def @func_2390(%var_2389: Tensor[(3, 10, 3), float32]) -> (Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) {
  %146 = fn (%var_2379: Tensor[(3, 10, 3), float32]) -> (Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) {
    %140 = cast(%var_2379, dtype="float32") /* ty=Tensor[(3, 10, 3), float32] */;
    %141 = cast(meta[relay.Constant][11] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
    %142 = reshape(%141, newshape=[1, 3, 2]) /* ty=Tensor[(1, 3, 2), float32] */;
    %143 = @func_2170(%142) /* ty=(Tensor[(1, 3, 2), float32],) */;
    %144 = sqrt(%140) /* ty=Tensor[(3, 10, 3), float32] */;
    %145 = %143.0;
    (%144, %145, meta[relay.Constant][11] /* ty=Tensor[(6), float32] */)
  };
  %146(%var_2389) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */
}

def @func_10380() -> (Tensor[(210, 1), float64], Tensor[(10, 3, 6), uint64]) {
  @func_10378() /* ty=(Tensor[(210, 1), float64], Tensor[(10, 3, 6), uint64]) */
}

def @func_4357(%var_4356: Tensor[(5, 7, 7), float32]) -> (Tensor[(5, 7, 7), float32],) {
  %149 = fn (%var_4344: Tensor[(5, 7, 7), float32]) -> (Tensor[(5, 7, 7), float32],) {
    %147 = cast(%var_4344, dtype="float32") /* ty=Tensor[(5, 7, 7), float32] */;
    %148 = erf(%147) /* ty=Tensor[(5, 7, 7), float32] */;
    (%148,)
  };
  %149(%var_4356) /* ty=(Tensor[(5, 7, 7), float32],) */
}

def @func_8695(%var_8693: Tensor[(3584), float32]) -> (Tensor[(176), float64], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(10, 3, 6), float64], Tensor[(126), uint64]) {
  @func_8692(%var_8693) /* ty=(Tensor[(176), float64], Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(10, 3, 6), float64], Tensor[(126), uint64]) */
}

def @func_8118() -> (Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) {
  @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */
}

def @func_12358(%var_12356: Tensor[(351), float32]) -> (Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(351), float32], Tensor[(10, 3, 6), float64]) {
  @func_12355(%var_12356) /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(351), float32], Tensor[(10, 3, 6), float64]) */
}

def @func_8974(%var_8951: Tensor[(3, 3, 6), float64]) -> (Tensor[(3, 3, 6), float32],) {
  %150 = cast(%var_8951, dtype="float64") /* ty=Tensor[(3, 3, 6), float64] */;
  %151 = sigmoid(%150) /* ty=Tensor[(3, 3, 6), float64] */;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %153 = tan(%152) /* ty=Tensor[(3, 3, 6), float32] */;
  (%153,)
}

def @func_10729() -> (Tensor[(126), uint64],) {
  %156 = fn () -> (Tensor[(126), uint64],) {
    %154 = @func_7873() /* ty=(Tensor[(126), uint64],) */;
    %155 = %154.0;
    (%155,)
  };
  %156() /* ty=(Tensor[(126), uint64],) */
}

def @func_12855(%var_12854: Tensor[(10, 3, 6), uint16]) -> Tensor[(10, 3, 6), int8] {
  %162 = fn (%var_12848: Tensor[(10, 3, 6), uint16]) -> Tensor[(10, 3, 6), int8] {
    %157 = @func_11502() /* ty=Tensor[(10, 3, 6), uint16] */;
    %158 = cast(%var_12848, dtype="int8") /* ty=Tensor[(10, 3, 6), int8] */;
    %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%157, dtype="int8") /* ty=Tensor[(10, 3, 6), int8] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    subtract(%160, %161) /* ty=Tensor[(10, 3, 6), int8] */
  };
  %162(%var_12854) /* ty=Tensor[(10, 3, 6), int8] */
}

def @func_5515(%var_5514: Tensor[(351), float32]) -> (Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) {
  %168 = fn (%var_5492: Tensor[(351), float32]) -> (Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) {
    %163 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
    %164 = cast(%var_5492, dtype="float32") /* ty=Tensor[(351), float32] */;
    %165 = reshape(%164, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
    %166 = %163.1;
    %167 = @func_4395(%165) /* ty=Tensor[(13, 9, 3), float32] */;
    (%166, %167, %var_5492)
  };
  %168(%var_5514) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */
}

def @func_8191(%var_8189: Tensor[(264), float64], %var_8190: Tensor[(3, 117), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16], Tensor[(7, 8, 2), bool], Tensor[(112), int8], Tensor[(10, 3, 6), float64], Tensor[(264), float64], Tensor[(264), float64], Tensor[(3, 117), float32], Tensor[(162), float32]) {
  %187 = fn (%var_8180: Tensor[(264), float64], %var_8181: Tensor[(3, 117), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16], Tensor[(7, 8, 2), bool], Tensor[(112), int8], Tensor[(10, 3, 6), float64], Tensor[(264), float64], Tensor[(264), float64], Tensor[(3, 117), float32], Tensor[(162), float32]) {
    %169 = @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */;
    %170 = cast(meta[relay.Constant][12] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
    %171 = reshape(%170, newshape=[7, 8, 2]) /* ty=Tensor[(7, 8, 2), int8] */;
    %172 = @func_5751(%171) /* ty=(Tensor[(7, 8, 2), bool],) */;
    %173 = cast(%var_8180, dtype="float64") /* ty=Tensor[(264), float64] */;
    %174 = cast(%var_8181, dtype="float32") /* ty=Tensor[(3, 117), float32] */;
    %175 = cast(meta[relay.Constant][13] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
    %176 = cast(meta[relay.Constant][13] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
    %177 = reshape(%173, newshape=[264]) /* ty=Tensor[(264), float64] */;
    %178 = reshape(%174, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %179 = reshape(%175, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %180 = reshape(%176, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %181 = @func_7576(%177, %178, %179, %180) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float64]) */;
    %182 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
    %183 = %169.0;
    %184 = %172.0;
    %185 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
    %186 = %181.2;
    (%182, %183, %184, meta[relay.Constant][12] /* ty=Tensor[(112), int8] */, %185, %186, %var_8180, %var_8181, meta[relay.Constant][13] /* ty=Tensor[(162), float32] */)
  };
  %187(%var_8189, %var_8190) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16], Tensor[(7, 8, 2), bool], Tensor[(112), int8], Tensor[(10, 3, 6), float64], Tensor[(264), float64], Tensor[(264), float64], Tensor[(3, 117), float32], Tensor[(162), float32]) */
}

def @func_2173(%var_2171: Tensor[(1, 3, 2), float32]) -> (Tensor[(1, 3, 2), float32],) {
  @func_2170(%var_2171) /* ty=(Tensor[(1, 3, 2), float32],) */
}

def @func_6537(%var_6471: Tensor[(15, 6), float32], %var_6481: Tensor[(900), float64], %var_6523: Tensor[(200), uint32], %var_6526: Tensor[(5, 48), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(48, 176), int8], Tensor[(900), float64], Tensor[(5, 4, 10), uint32], Tensor[(200), uint32], Tensor[(5, 48), bool]) {
  %188 = cast(%var_6471, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %189 = reshape(%188, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %190 = @func_4612(%189) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) */;
  %191 = cast(%var_6481, dtype="float64") /* ty=Tensor[(900), float64] */;
  %192 = cast(%var_6481, dtype="float64") /* ty=Tensor[(900), float64] */;
  %193 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %194 = reshape(%191, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float64] */;
  %195 = reshape(%192, newshape=[15, 5, 12]) /* ty=Tensor[(15, 5, 12), float64] */;
  %196 = reshape(%193, newshape=[48, 1]) /* ty=Tensor[(48, 1), float64] */;
  %197 = @func_5215(%194, %195, %196) /* ty=(Tensor[(15, 5, 12), float64], Tensor[(15, 5, 12), uint64], Tensor[(10, 1, 9), int8], Tensor[(10, ?, 9), bool], Tensor[(48), float64], Tensor[(3, 10, 3), float32], Tensor[(48, 176), int8], Tensor[(560), uint8]) */;
  %198 = cast(%var_6523, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %199 = cast(%var_6523, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %200 = reshape(%198, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), uint32] */;
  %201 = reshape(%199, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), uint32] */;
  %202 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 48), float64] */, dtype="bool") /* ty=Tensor[(1, 48), bool] */;
  %203 = cast(%var_6526, dtype="bool") /* ty=Tensor[(5, 48), bool] */;
  %204 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %205 = %190.0;
  %206 = %197.6;
  %207 = @func_3778(%200, %201) /* ty=Tensor[(5, 4, 10), uint32] */;
  %208 = equal(%202, %203) /* ty=Tensor[(5, 48), bool] */;
  (%204, %205, %var_6471, %206, %var_6481, %207, %var_6523, %208)
}

def @func_6800() -> Tensor[(126), uint64] {
  %210 = fn () -> Tensor[(126), uint64] {
    %209 = @func_6354() /* ty=(Tensor[(126), uint64],) */;
    %209.0
  };
  %210() /* ty=Tensor[(126), uint64] */
}

def @func_11609() -> (Tensor[(10, 3, 6), uint16],) {
  @func_11607() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_12999() -> Tensor[(126), uint64] {
  @func_12997() /* ty=Tensor[(126), uint64] */
}

def @func_2170(%var_2166: Tensor[(1, 3, 2), float32]) -> (Tensor[(1, 3, 2), float32],) {
  %211 = cast(%var_2166, dtype="float32") /* ty=Tensor[(1, 3, 2), float32] */;
  %212 = asinh(%211) /* ty=Tensor[(1, 3, 2), float32] */;
  (%212,)
}

def @func_6182() -> Tensor[(10, 3, 6), float64] {
  @func_5442() /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_4017(%var_4013: Tensor[(9, 2, 7), uint64], %var_4014: Tensor[(9, 2, 7), uint64], %var_4015: Tensor[(1, 48), float64], %var_4016: Tensor[(176), float64]) -> (Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) {
  @func_4011(%var_4013, %var_4014, %var_4015, %var_4016) /* ty=(Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) */
}

def @func_2297(%var_2295: Tensor[(48), float64], %var_2296: Tensor[(1, 176), float64]) -> (Tensor[(14, 10, 3), float64], Tensor[(12, 16, 11), float64], Tensor[(48), float64], Tensor[(1, 176), float64]) {
  %221 = fn (%var_2289: Tensor[(48), float64], %var_2290: Tensor[(1, 176), float64]) -> (Tensor[(14, 10, 3), float64], Tensor[(12, 16, 11), float64], Tensor[(48), float64], Tensor[(1, 176), float64]) {
    %213 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 3), float64] */;
    %214 = cast(%var_2289, dtype="float64") /* ty=Tensor[(48), float64] */;
    %215 = cast(%var_2290, dtype="float64") /* ty=Tensor[(1, 176), float64] */;
    %216 = reshape(%214, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
    %217 = reshape(%215, newshape=[176]) /* ty=Tensor[(176), float64] */;
    %218 = @func_1458(%216, %217) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */;
    %219 = tan(%213) /* ty=Tensor[(14, 10, 3), float64] */;
    %220 = %218.1;
    (%219, %220, %var_2289, %var_2290)
  };
  %221(%var_2295, %var_2296) /* ty=(Tensor[(14, 10, 3), float64], Tensor[(12, 16, 11), float64], Tensor[(48), float64], Tensor[(1, 176), float64]) */
}

def @func_7061() -> (Tensor[(13, 4, 4), bool],) {
  @func_7059() /* ty=(Tensor[(13, 4, 4), bool],) */
}

def @func_7080(%var_7062: Tensor[(8, 2, 2), float32], %var_7067: Tensor[(90), int8]) -> (Tensor[(8, 2, 2), float32], Tensor[(10, 1, 9), int8], Tensor[(90), int8]) {
  %222 = cast(%var_7062, dtype="float32") /* ty=Tensor[(8, 2, 2), float32] */;
  %223 = cast(%var_7067, dtype="int8") /* ty=Tensor[(90), int8] */;
  %224 = reshape(%223, newshape=[10, 1, 9]) /* ty=Tensor[(10, 1, 9), int8] */;
  %225 = acos(%222) /* ty=Tensor[(8, 2, 2), float32] */;
  %226 = @func_3929(%224) /* ty=Tensor[(10, 1, 9), int8] */;
  (%225, %226, %var_7067)
}

def @func_12019() -> (Tensor[(10, 3, 6), uint16],) {
  %228 = fn () -> (Tensor[(10, 3, 6), uint16],) {
    %227 = @func_7977() /* ty=Tensor[(10, 3, 6), uint16] */;
    (%227,)
  };
  %228() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_6356() -> (Tensor[(126), uint64],) {
  @func_6354() /* ty=(Tensor[(126), uint64],) */
}

def @func_6723(%var_6721: Tensor[(3, 11, 16), int32], %var_6722: Tensor[(3, 11, 16), int32]) -> Tensor[(3, 11, 16), int32] {
  %233 = fn (%var_6711: Tensor[(3, 11, 16), int32], %var_6712: Tensor[(3, 11, 16), int32]) -> Tensor[(3, 11, 16), int32] {
    %229 = cast(%var_6712, dtype="int32") /* ty=Tensor[(3, 11, 16), int32] */;
    %230 = shape_of(%var_6711, dtype="int32") /* ty=Tensor[(3), int32] */;
    %231 = cast(%var_6711, dtype="int32") /* ty=Tensor[(3, 11, 16), int32] */;
    %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    minimum(%231, %232) /* ty=Tensor[(3, 11, 16), int32] */
  };
  %233(%var_6721, %var_6722) /* ty=Tensor[(3, 11, 16), int32] */
}

def @func_12877() -> Tensor[(10, 3, 6), float32] {
  %237 = fn () -> Tensor[(10, 3, 6), float32] {
    %234 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
    %235 = %234.0;
    %236 = cast(%235, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
    rsqrt(%236) /* ty=Tensor[(10, 3, 6), float32] */
  };
  %237() /* ty=Tensor[(10, 3, 6), float32] */
}

def @func_10600(%var_10597: Tensor[(264), float64], %var_10598: Tensor[(351), float32], %var_10599: Tensor[(162), float32]) -> (Tensor[(15, 6), float32], Tensor[(176), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float32]) {
  @func_10595(%var_10597, %var_10598, %var_10599) /* ty=(Tensor[(15, 6), float32], Tensor[(176), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float32]) */
}

def @func_7774() -> (Tensor[(126), uint64],) {
  %238 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %239 = %238.0;
  (%239,)
}

def @func_9849(%var_9847: Tensor[(560), uint8], %var_9848: Tensor[(210), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(16, 7, 560), uint32], Tensor[(4, 28), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) {
  @func_9845(%var_9847, %var_9848) /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(16, 7, 560), uint32], Tensor[(4, 28), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) */
}

def @func_4395(%var_4384: Tensor[(13, 9, 3), float32]) -> Tensor[(13, 9, 3), float32] {
  %240 = cast(%var_4384, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %241 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(13, 9, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%242, %243) /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_7059() -> (Tensor[(13, 4, 4), bool],) {
  %244 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
  %245 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 4, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(13, 4, 4), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = greater(%246, %247) /* ty=Tensor[(13, 4, 4), bool] */;
  (%248,)
}

def @func_6691() -> (Tensor[(126), uint64],) {
  %249 = @func_6354() /* ty=(Tensor[(126), uint64],) */;
  %250 = %249.0;
  (%250,)
}

def @func_7776() -> (Tensor[(126), uint64],) {
  @func_7774() /* ty=(Tensor[(126), uint64],) */
}

def @func_11698() -> Tensor[(126), uint64] {
  %251 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %251.0
}

def @func_3807(%var_3797: Tensor[(6, 4, 11), float64]) -> (Tensor[(6, 4, 11), float64],) {
  %252 = cast(%var_3797, dtype="float64") /* ty=Tensor[(6, 4, 11), float64] */;
  %253 = acos(%252) /* ty=Tensor[(6, 4, 11), float64] */;
  (%253,)
}

def @func_8389() -> (Tensor[(10, 3, 6), float32],) {
  %257 = fn () -> (Tensor[(10, 3, 6), float32],) {
    %254 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
    %255 = cast(%254, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
    %256 = asinh(%255) /* ty=Tensor[(10, 3, 6), float32] */;
    (%256,)
  };
  %257() /* ty=(Tensor[(10, 3, 6), float32],) */
}

def @func_6765() -> Tensor[(10, 3, 6), float64] {
  @func_6763() /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_10442(%var_10440: Tensor[(10, 16, 1), int32], %var_10441: Tensor[(10, 16, 8), int32]) -> (Tensor[(10, 16, 8), bool], Tensor[(10, 3, 6), uint16]) {
  %263 = fn (%var_10413: Tensor[(10, 16, 1), int32], %var_10414: Tensor[(10, 16, 8), int32]) -> (Tensor[(10, 16, 8), bool], Tensor[(10, 3, 6), uint16]) {
    %258 = cast(%var_10413, dtype="bool") /* ty=Tensor[(10, 16, 1), bool] */;
    %259 = cast(%var_10414, dtype="bool") /* ty=Tensor[(10, 16, 8), bool] */;
    %260 = @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */;
    %261 = equal(%258, %259) /* ty=Tensor[(10, 16, 8), bool] */;
    %262 = %260.0;
    (%261, %262)
  };
  %263(%var_10440, %var_10441) /* ty=(Tensor[(10, 16, 8), bool], Tensor[(10, 3, 6), uint16]) */
}

def @func_7529(%var_7528: Tensor[(15, 16, 7), float32]) -> (Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(5, 7, 8), float64], Tensor[(560, 1), uint8], Tensor[(2112), float64], Tensor[(10, 3, 6), float64], Tensor[(15, 16, 7), float64]) {
  %291 = fn (%var_7453: Tensor[(15, 16, 7), float32]) -> (Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(5, 7, 8), float64], Tensor[(560, 1), uint8], Tensor[(2112), float64], Tensor[(10, 3, 6), float64], Tensor[(15, 16, 7), float64]) {
    %264 = cast(meta[relay.Constant][19] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
    %265 = reshape(%264, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
    %266 = @func_3605(%265) /* ty=(Tensor[(14, 16, 16), float32],) */;
    %267 = cast(meta[relay.Constant][20] /* ty=Tensor[(560, 1), uint8] */, dtype="uint8") /* ty=Tensor[(560, 1), uint8] */;
    %268 = cast(meta[relay.Constant][21] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %269 = reshape(%267, newshape=[560]) /* ty=Tensor[(560), uint8] */;
    %270 = reshape(%268, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
    %271 = @func_5825(%269, %270) /* ty=(Tensor[(1, 3, 2), float32], Tensor[(5, 7, 8), float64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
    %272 = cast(%var_7453, dtype="float32") /* ty=Tensor[(15, 16, 7), float32] */;
    %273 = cos(%272) /* ty=Tensor[(15, 16, 7), float32] */;
    %274 = cast(%273, dtype="float64") /* ty=Tensor[(15, 16, 7), float64] */;
    %275 = sin(%274) /* ty=Tensor[(15, 16, 7), float64] */;
    %276 = cast(%var_7453, dtype="uint64") /* ty=Tensor[(15, 16, 7), uint64] */;
    %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %278 = cast(%275, dtype="uint64") /* ty=Tensor[(15, 16, 7), uint64] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %280 = right_shift(%278, %279) /* ty=Tensor[(15, 16, 7), uint64] */;
    %281 = cast(%280, dtype="float32") /* ty=Tensor[(15, 16, 7), float32] */;
    %282 = tan(%281) /* ty=Tensor[(15, 16, 7), float32] */;
    %283 = cast(%280, dtype="float64") /* ty=Tensor[(15, 16, 7), float64] */;
    %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
    %285 = cast(%282, dtype="float64") /* ty=Tensor[(15, 16, 7), float64] */;
    %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %287 = %266.0;
    %288 = %271.1;
    %289 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    %290 = floor_divide(%285, %286) /* ty=Tensor[(15, 16, 7), float64] */;
    (%287, meta[relay.Constant][19] /* ty=Tensor[(3584), float32] */, %288, meta[relay.Constant][20] /* ty=Tensor[(560, 1), uint8] */, meta[relay.Constant][21] /* ty=Tensor[(2112), float64] */, %289, %290)
  };
  %291(%var_7528) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(5, 7, 8), float64], Tensor[(560, 1), uint8], Tensor[(2112), float64], Tensor[(10, 3, 6), float64], Tensor[(15, 16, 7), float64]) */
}

def @func_11203() -> Tensor[(10, 3, 6), uint16] {
  %292 = @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %292.0
}

def @func_9045() -> (Tensor[(10, 3, 6), uint16],) {
  %293 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
  %294 = %293.1;
  (%294,)
}

def @func_12162() -> (Tensor[(10, 3, 6), uint16],) {
  %295 = @func_12018() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %296 = %295.0;
  (%296,)
}

def @func_12389() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
  %297 = @func_12162() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %298 = %297.0;
  %299 = @func_11203() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%298, %299)
}

def @func_7923() -> Tensor[(126), uint64] {
  @func_6852() /* ty=Tensor[(126), uint64] */
}

def @func_9863() -> (Tensor[(126), uint64],) {
  %300 = @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */;
  %301 = %300.0;
  (%301,)
}

def @func_3756(%var_3754: Tensor[(14, 1, 6), int8], %var_3755: Tensor[(14, 6, 6), int8]) -> Tensor[(14, 6, 6), int8] {
  %304 = fn (%var_3748: Tensor[(14, 1, 6), int8], %var_3749: Tensor[(14, 6, 6), int8]) -> Tensor[(14, 6, 6), int8] {
    %302 = cast(%var_3748, dtype="int8") /* ty=Tensor[(14, 1, 6), int8] */;
    %303 = cast(%var_3749, dtype="int8") /* ty=Tensor[(14, 6, 6), int8] */;
    minimum(%302, %303) /* ty=Tensor[(14, 6, 6), int8] */
  };
  %304(%var_3754, %var_3755) /* ty=Tensor[(14, 6, 6), int8] */
}

def @func_8116() -> (Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) {
  %305 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 351), float32] */, dtype="float32") /* ty=Tensor[(1, 351), float32] */;
  %306 = reshape(%305, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %307 = @func_6799() /* ty=Tensor[(126), uint64] */;
  %308 = @func_4395(%306) /* ty=Tensor[(13, 9, 3), float32] */;
  (%307, %308, meta[relay.Constant][22] /* ty=Tensor[(1, 351), float32] */)
}

def @func_5955(%var_5954: Tensor[(90), float32]) -> (Tensor[(126), uint64], Tensor[(16, 2, 10), float64], Tensor[(90), float32], Tensor[(10, 3, 6), float64], Tensor[(126), uint64], Tensor[(1, 48), float32]) {
  %322 = fn (%var_5917: Tensor[(90), float32]) -> (Tensor[(126), uint64], Tensor[(16, 2, 10), float64], Tensor[(90), float32], Tensor[(10, 3, 6), float64], Tensor[(126), uint64], Tensor[(1, 48), float32]) {
    %309 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
    %310 = cast(%var_5917, dtype="float32") /* ty=Tensor[(90), float32] */;
    %311 = reshape(%310, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
    %312 = @func_4612(%311) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) */;
    %313 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
    %314 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
    %315 = %314.1;
    %316 = cast(%315, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
    %317 = %309.2;
    %318 = %312.2;
    %319 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    %320 = %313.2;
    %321 = tan(%316) /* ty=Tensor[(1, 48), float32] */;
    (%317, %318, %var_5917, %319, %320, %321)
  };
  %322(%var_5954) /* ty=(Tensor[(126), uint64], Tensor[(16, 2, 10), float64], Tensor[(90), float32], Tensor[(10, 3, 6), float64], Tensor[(126), uint64], Tensor[(1, 48), float32]) */
}

def @func_13070() -> Tensor[(10, 3, 6), float32] {
  %323 = @func_8388() /* ty=(Tensor[(10, 3, 6), float32],) */;
  %323.0
}

def @func_9674(%var_9550: Tensor[(16, 15, 14), int8], %var_9551: Tensor[(16, 15, 14), int8], %var_9568: Tensor[(28, 4), float64], %var_9644: Tensor[(2112), float64], %var_9659: Tensor[(240), int16]) -> (Tensor[(16, 15, 14), bool], Tensor[(28, 4), float64], Tensor[(560), uint8], Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(2112), float32], Tensor[(15, 4, 4), int16], Tensor[(240), int16]) {
  %324 = cast(%var_9551, dtype="bool") /* ty=Tensor[(16, 15, 14), bool] */;
  %325 = shape_of(%var_9550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%var_9550, dtype="bool") /* ty=Tensor[(16, 15, 14), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = cast(meta[relay.Constant][24] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %329 = reshape(%328, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %330 = @func_5513(%329) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */;
  %331 = cast(%var_9568, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %332 = cast(meta[relay.Constant][23] /* ty=Tensor[(560), uint8] */, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %333 = cast(meta[relay.Constant][25] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %334 = reshape(%331, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), float64] */;
  %335 = reshape(%332, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %336 = reshape(%333, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), float64] */;
  %337 = @func_4692(%334, %335, %336) /* ty=(Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) */;
  %338 = %337.2;
  %339 = cast(%338, dtype="uint8") /* ty=Tensor[(12, 16, 11), uint8] */;
  %340 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(2112), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %341 = cast(meta[relay.Constant][25] /* ty=Tensor[(2112), float64] */, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %343 = right_shift(%341, %342) /* ty=Tensor[(2112), uint8] */;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %345 = asinh(%344) /* ty=Tensor[(2112), float64] */;
  %346 = cast(%345, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %347 = asin(%346) /* ty=Tensor[(2112), float64] */;
  %348 = cast(%347, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %349 = log(%348) /* ty=Tensor[(2112), float64] */;
  %350 = cast(%var_9644, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %351 = shape_of(%349, dtype="int32") /* ty=Tensor[(1), int32] */;
  %352 = cast(%349, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %354 = subtract(%352, %353) /* ty=Tensor[(2112), uint8] */;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %356 = shape_of(%343, dtype="int32") /* ty=Tensor[(1), int32] */;
  %357 = cast(%343, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?), float32] */;
  %359 = cast(%var_9659, dtype="int16") /* ty=Tensor[(240), int16] */;
  %360 = cast(%var_9659, dtype="int16") /* ty=Tensor[(240), int16] */;
  %361 = reshape(%359, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), int16] */;
  %362 = reshape(%360, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), int16] */;
  %363 = @func_8320(%361, %362) /* ty=(Tensor[(15, 4, 4), int16], Tensor[(10, 3, 6), uint16]) */;
  %364 = not_equal(%326, %327) /* ty=Tensor[(16, 15, 14), bool] */;
  %365 = @func_6763() /* ty=Tensor[(10, 3, 6), float64] */;
  %366 = %330.0;
  %367 = floor_mod(%357, %358) /* ty=Tensor[(2112), float32] */;
  %368 = %363.0;
  (%364, %var_9568, meta[relay.Constant][23] /* ty=Tensor[(560), uint8] */, %365, %366, meta[relay.Constant][24] /* ty=Tensor[(351), float32] */, %367, %368, %var_9659)
}

def @func_7925() -> Tensor[(126), uint64] {
  @func_7923() /* ty=Tensor[(126), uint64] */
}

def @func_12322() -> Tensor[(10, 3, 6), float32] {
  @func_12320() /* ty=Tensor[(10, 3, 6), float32] */
}

def @func_9201() -> Tensor[(10, 3, 6), uint16] {
  @func_9199() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_83(%var_81: Tensor[(1, 16, 11), float64], %var_82: Tensor[(12, 16, 11), float64]) -> (Tensor[(12, 16, 11), float64],) {
  @func_79(%var_81, %var_82) /* ty=(Tensor[(12, 16, 11), float64],) */
}

def @func_6852() -> Tensor[(126), uint64] {
  %369 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %369.2
}

def @func_7419() -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) {
  %373 = fn () -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) {
    %370 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
    %371 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    %372 = %370.2;
    (%371, %372)
  };
  %373() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */
}

def @func_710(%var_696: Tensor[(16, 2, 10), float64]) -> (Tensor[(16, 2, 10), float64],) {
  %374 = cast(%var_696, dtype="float64") /* ty=Tensor[(16, 2, 10), float64] */;
  %375 = asinh(%374) /* ty=Tensor[(16, 2, 10), float64] */;
  (%375,)
}

def @func_9404(%var_9396: Tensor[(13, 9, 7), float64]) -> Tensor[(13, 9, 7), float64] {
  %376 = cast(%var_9396, dtype="float64") /* ty=Tensor[(13, 9, 7), float64] */;
  sinh(%376) /* ty=Tensor[(13, 9, 7), float64] */
}

def @func_5717(%var_5714: Tensor[(14, 15, 10), uint16], %var_5715: Tensor[(14, 15, 10), uint16], %var_5716: Tensor[(1, 200), uint32]) -> (Tensor[(6), float32], Tensor[(3, 30), float32], Tensor[(10, 3, 6), uint16], Tensor[(14, 15, 10), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64], Tensor[(5, 4, 10), uint32], Tensor[(1, 200), uint32]) {
  %400 = fn (%var_5648: Tensor[(14, 15, 10), uint16], %var_5649: Tensor[(14, 15, 10), uint16], %var_5708: Tensor[(1, 200), uint32]) -> (Tensor[(6), float32], Tensor[(3, 30), float32], Tensor[(10, 3, 6), uint16], Tensor[(14, 15, 10), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64], Tensor[(5, 4, 10), uint32], Tensor[(1, 200), uint32]) {
    %377 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 30), float32] */, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
    %378 = reshape(%377, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
    %379 = @func_2388(%378) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
    %380 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
    %381 = cast(%var_5649, dtype="uint16") /* ty=Tensor[(14, 15, 10), uint16] */;
    %382 = shape_of(%var_5648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %383 = cast(%var_5648, dtype="uint16") /* ty=Tensor[(14, 15, 10), uint16] */;
    %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %385 = subtract(%383, %384) /* ty=Tensor[(14, 15, 10), uint16] */;
    %386 = cast(%385, dtype="float64") /* ty=Tensor[(14, 15, 10), float64] */;
    %387 = acosh(%386) /* ty=Tensor[(14, 15, 10), float64] */;
    %388 = cast(%387, dtype="float64") /* ty=Tensor[(14, 15, 10), float64] */;
    %389 = cast(meta[relay.Constant][27] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %390 = reshape(%389, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float64] */;
    %391 = cast(%var_5708, dtype="uint32") /* ty=Tensor[(1, 200), uint32] */;
    %392 = cast(%var_5708, dtype="uint32") /* ty=Tensor[(1, 200), uint32] */;
    %393 = reshape(%391, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), uint32] */;
    %394 = reshape(%392, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), uint32] */;
    %395 = %379.2;
    %396 = %380.2;
    %397 = sin(%388) /* ty=Tensor[(14, 15, 10), float64] */;
    %398 = @func_3170(%390) /* ty=Tensor[(5, 6, 7), uint8] */;
    %399 = @func_3778(%393, %394) /* ty=Tensor[(5, 4, 10), uint32] */;
    (%395, meta[relay.Constant][26] /* ty=Tensor[(3, 30), float32] */, %396, %397, %398, meta[relay.Constant][27] /* ty=Tensor[(210), float64] */, %399, %var_5708)
  };
  %400(%var_5714, %var_5715, %var_5716) /* ty=(Tensor[(6), float32], Tensor[(3, 30), float32], Tensor[(10, 3, 6), uint16], Tensor[(14, 15, 10), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64], Tensor[(5, 4, 10), uint32], Tensor[(1, 200), uint32]) */
}

def @func_11159() -> (Tensor[(10, 3, 6), uint16],) {
  %401 = @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %402 = %401.0;
  (%402,)
}

def @func_11816() -> Tensor[(126), uint64] {
  %404 = fn () -> Tensor[(126), uint64] {
    %403 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
    %403.0
  };
  %404() /* ty=Tensor[(126), uint64] */
}

def @func_5645() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), float64]) {
  %408 = fn () -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), float64]) {
    %405 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
    %406 = %405.2;
    %407 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    (%406, %407)
  };
  %408() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), float64]) */
}

def @func_10298() -> (Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  %409 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
  %410 = @func_7774() /* ty=(Tensor[(126), uint64],) */;
  %411 = @func_10023() /* ty=Tensor[(176), float64] */;
  %412 = %409.1;
  %413 = %410.0;
  (%411, %412, %413)
}

def @func_12463() -> Tensor[(126), uint64] {
  %415 = fn () -> Tensor[(126), uint64] {
    %414 = @func_7873() /* ty=(Tensor[(126), uint64],) */;
    %414.0
  };
  %415() /* ty=Tensor[(126), uint64] */
}

def @func_10981() -> (Tensor[(126), uint64], Tensor[(126), uint64]) {
  %419 = fn () -> (Tensor[(126), uint64], Tensor[(126), uint64]) {
    %416 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
    %417 = @func_7923() /* ty=Tensor[(126), uint64] */;
    %418 = %416.0;
    (%417, %418)
  };
  %419() /* ty=(Tensor[(126), uint64], Tensor[(126), uint64]) */
}

def @func_12668(%var_12665: Tensor[(9, 11, 13), float32], %var_12666: Tensor[(351), float32], %var_12667: Tensor[(504), int8]) -> (Tensor[(9, 11, 13), float32], Tensor[(126), uint64], Tensor[(351), float32], Tensor[(14, 6, 6), int8], Tensor[(84), int8], Tensor[(504), int8]) {
  %431 = fn (%var_12578: Tensor[(9, 11, 13), float32], %var_12623: Tensor[(351), float32], %var_12650: Tensor[(504), int8]) -> (Tensor[(9, 11, 13), float32], Tensor[(126), uint64], Tensor[(351), float32], Tensor[(14, 6, 6), int8], Tensor[(84), int8], Tensor[(504), int8]) {
    %420 = cast(%var_12578, dtype="float32") /* ty=Tensor[(9, 11, 13), float32] */;
    %421 = cast(%var_12623, dtype="float32") /* ty=Tensor[(351), float32] */;
    %422 = reshape(%421, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %423 = @func_12355(%422) /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(351), float32], Tensor[(10, 3, 6), float64]) */;
    %424 = cast(meta[relay.Constant][28] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
    %425 = cast(%var_12650, dtype="int8") /* ty=Tensor[(504), int8] */;
    %426 = reshape(%424, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), int8] */;
    %427 = reshape(%425, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), int8] */;
    %428 = cos(%420) /* ty=Tensor[(9, 11, 13), float32] */;
    %429 = %423.0;
    %430 = @func_3753(%426, %427) /* ty=Tensor[(14, 6, 6), int8] */;
    (%428, %429, %var_12623, %430, meta[relay.Constant][28] /* ty=Tensor[(84), int8] */, %var_12650)
  };
  %431(%var_12665, %var_12666, %var_12667) /* ty=(Tensor[(9, 11, 13), float32], Tensor[(126), uint64], Tensor[(351), float32], Tensor[(14, 6, 6), int8], Tensor[(84), int8], Tensor[(504), int8]) */
}

def @func_6693() -> (Tensor[(126), uint64],) {
  @func_6691() /* ty=(Tensor[(126), uint64],) */
}

def @func_9159(%var_9157: Tensor[(351), float32], %var_9158: Tensor[(162), float32]) -> (Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(351), bool]) {
  %446 = fn (%var_9137: Tensor[(351), float32], %var_9138: Tensor[(162), float32]) -> (Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(351), bool]) {
    %432 = @func_6252() /* ty=(Tensor[(176), float64],) */;
    %433 = cast(%var_9137, dtype="float32") /* ty=Tensor[(351), float32] */;
    %434 = cast(%var_9138, dtype="float32") /* ty=Tensor[(162), float32] */;
    %435 = reshape(%433, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %436 = reshape(%434, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %437 = @func_5598(%435, %436) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
    %438 = %437.2;
    %439 = cast(%var_9137, dtype="bool") /* ty=Tensor[(351), bool] */;
    %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(1), int32] */;
    %441 = cast(%438, dtype="bool") /* ty=Tensor[(351), bool] */;
    %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?), bool] */;
    %443 = %432.0;
    %444 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
    %445 = not_equal(%441, %442) /* ty=Tensor[(351), bool] */;
    (%443, %444, %var_9138, %445)
  };
  %446(%var_9157, %var_9158) /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(351), bool]) */
}

def @func_10536(%var_10535: Tensor[(126), uint64]) -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), bool]) {
  %458 = fn (%var_10520: Tensor[(126), uint64]) -> (Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), bool]) {
    %447 = @func_10204() /* ty=(Tensor[(10, 3, 6), float64],) */;
    %448 = @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */;
    %449 = @func_7774() /* ty=(Tensor[(126), uint64],) */;
    %450 = %449.0;
    %451 = cast(%var_10520, dtype="bool") /* ty=Tensor[(126), bool] */;
    %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(1), int32] */;
    %453 = cast(%450, dtype="bool") /* ty=Tensor[(126), bool] */;
    %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?), bool] */;
    %455 = %447.0;
    %456 = %448.0;
    %457 = logical_or(%453, %454) /* ty=Tensor[(126), bool] */;
    (%455, %456, %457)
  };
  %458(%var_10535) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), bool]) */
}

def @func_11913(%var_11911: Tensor[(8, 16, 4), int32], %var_11912: Tensor[(8, 16, 4), int32]) -> Tensor[(8, 16, 4), bool] {
  %468 = fn (%var_11892: Tensor[(8, 16, 4), int32], %var_11900: Tensor[(8, 16, 4), int32]) -> Tensor[(8, 16, 4), bool] {
    %459 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 16, 4), int32] */, dtype="int32") /* ty=Tensor[(8, 16, 4), int32] */;
    %460 = shape_of(%var_11892, dtype="int32") /* ty=Tensor[(3), int32] */;
    %461 = cast(%var_11892, dtype="int32") /* ty=Tensor[(8, 16, 4), int32] */;
    %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %463 = bitwise_and(%461, %462) /* ty=Tensor[(8, 16, 4), int32] */;
    %464 = cast(%var_11900, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
    %465 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
    %466 = cast(%463, dtype="bool") /* ty=Tensor[(8, 16, 4), bool] */;
    %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%466, %467) /* ty=Tensor[(8, 16, 4), bool] */
  };
  %468(%var_11911, %var_11912) /* ty=Tensor[(8, 16, 4), bool] */
}

def @func_8534() -> (Tensor[(10, 3, 6), uint16],) {
  %469 = @func_7977() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%469,)
}

def @func_8211() -> (Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) {
  %473 = fn () -> (Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) {
    %470 = @func_6252() /* ty=(Tensor[(176), float64],) */;
    %471 = @func_8109() /* ty=Tensor[(10, 3, 6), uint16] */;
    %472 = %470.0;
    (%471, %472)
  };
  %473() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) */
}

def @main(%var_13130: Tensor[(16, 7, 9), float64], %var_13151: Tensor[(16, 7, 9), float64]) -> (Tensor[(16, 7, 9), bool], Tensor[(16, 7, 9), float32]) {
  %474 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %475 = shape_of(%var_13130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%var_13130, dtype="float64") /* ty=Tensor[(16, 7, 9), float64] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %478 = add(%476, %477) /* ty=Tensor[(16, 7, 9), float64] */;
  %479 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 7, 9), float64] */, dtype="bool") /* ty=Tensor[(16, 7, 9), bool] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="bool") /* ty=Tensor[(16, 7, 9), bool] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %483 = cast(%var_13151, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %484 = shape_of(%var_13130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%var_13130, dtype="float32") /* ty=Tensor[(16, 7, 9), float32] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %487 = greater(%481, %482) /* ty=Tensor[(16, 7, 9), bool] */;
  %488 = floor_mod(%485, %486) /* ty=Tensor[(16, 7, 9), float32] */;
  (%487, %488)
}

def @func_13072() -> Tensor[(10, 3, 6), float32] {
  @func_13070() /* ty=Tensor[(10, 3, 6), float32] */
}

def @func_11045() -> (Tensor[(10, 3, 6), uint16],) {
  %489 = @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %490 = %489.0;
  (%490,)
}

def @func_12095(%var_12091: Tensor[(560), uint8], %var_12092: Tensor[(160), int32], %var_12093: Tensor[(1280), int32], %var_12094: Tensor[(1, 900), float32]) -> (Tensor[(10, 3, 6), uint16], Tensor[(2112), float64], Tensor[(560), uint8], Tensor[(10, 3, 6), uint16], Tensor[(160), int32], Tensor[(1280), int32], Tensor[(900), float32], Tensor[(1, 900), float32], Tensor[(176), float64]) {
  %509 = fn (%var_12066: Tensor[(560), uint8], %var_12083: Tensor[(160), int32], %var_12084: Tensor[(1280), int32], %var_12087: Tensor[(1, 900), float32]) -> (Tensor[(10, 3, 6), uint16], Tensor[(2112), float64], Tensor[(560), uint8], Tensor[(10, 3, 6), uint16], Tensor[(160), int32], Tensor[(1280), int32], Tensor[(900), float32], Tensor[(1, 900), float32], Tensor[(176), float64]) {
    %491 = @func_11240() /* ty=(Tensor[(10, 3, 6), uint16],) */;
    %492 = cast(%var_12066, dtype="uint8") /* ty=Tensor[(560), uint8] */;
    %493 = reshape(%492, newshape=[560]) /* ty=Tensor[(560), uint8] */;
    %494 = @func_10182(%493) /* ty=(Tensor[(126), uint64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
    %495 = cast(%var_12083, dtype="int32") /* ty=Tensor[(160), int32] */;
    %496 = cast(%var_12084, dtype="int32") /* ty=Tensor[(1280), int32] */;
    %497 = reshape(%495, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), int32] */;
    %498 = reshape(%496, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), int32] */;
    %499 = @func_10439(%497, %498) /* ty=(Tensor[(10, 16, 8), bool], Tensor[(10, 3, 6), uint16]) */;
    %500 = cast(%var_12087, dtype="float32") /* ty=Tensor[(1, 900), float32] */;
    %501 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %502 = reshape(%500, newshape=[900]) /* ty=Tensor[(900), float32] */;
    %503 = reshape(%501, newshape=[4, 44]) /* ty=Tensor[(4, 44), float64] */;
    %504 = @func_9477(%502, %503) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(4, 44), float64], Tensor[(3, 2), float32]) */;
    %505 = %491.0;
    %506 = %494.3;
    %507 = %499.1;
    %508 = %504.2;
    (%505, %506, %var_12066, %507, %var_12083, %var_12084, %508, %var_12087, meta[relay.Constant][31] /* ty=Tensor[(176), float64] */)
  };
  %509(%var_12091, %var_12092, %var_12093, %var_12094) /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(2112), float64], Tensor[(560), uint8], Tensor[(10, 3, 6), uint16], Tensor[(160), int32], Tensor[(1280), int32], Tensor[(900), float32], Tensor[(1, 900), float32], Tensor[(176), float64]) */
}

def @func_12569() -> (Tensor[(10, 3, 6), uint16], Tensor[(126), uint64], Tensor[(84), int8], Tensor[(14, 6, 6), uint32]) {
  %510 = @func_11152() /* ty=(Tensor[(126), uint64],) */;
  %511 = cast(meta[relay.Constant][32] /* ty=Tensor[(84), int8] */, dtype="int8") /* ty=Tensor[(84), int8] */;
  %512 = cast(meta[relay.Constant][33] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %513 = reshape(%511, newshape=[14, 1, 6]) /* ty=Tensor[(14, 1, 6), int8] */;
  %514 = reshape(%512, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), int8] */;
  %515 = @func_3753(%513, %514) /* ty=Tensor[(14, 6, 6), int8] */;
  %516 = cast(meta[relay.Constant][33] /* ty=Tensor[(504), int8] */, dtype="uint32") /* ty=Tensor[(504), uint32] */;
  %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%515, dtype="uint32") /* ty=Tensor[(14, 6, 6), uint32] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %520 = @func_12428() /* ty=Tensor[(10, 3, 6), uint16] */;
  %521 = %510.0;
  %522 = bitwise_xor(%518, %519) /* ty=Tensor[(14, 6, 6), uint32] */;
  (%520, %521, meta[relay.Constant][32] /* ty=Tensor[(84), int8] */, %522)
}

def @func_9845(%var_9823: Tensor[(560), uint8], %var_9839: Tensor[(210), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(16, 7, 560), uint32], Tensor[(4, 28), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) {
  %523 = @func_8472() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %524 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %525 = cast(%var_9823, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %526 = cast(meta[relay.Constant][35] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %527 = reshape(%524, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), float64] */;
  %528 = reshape(%525, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %529 = reshape(%526, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), float64] */;
  %530 = @func_4692(%527, %528, %529) /* ty=(Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) */;
  %531 = cast(%var_9839, dtype="float64") /* ty=Tensor[(210), float64] */;
  %532 = reshape(%531, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float64] */;
  %533 = @func_8109() /* ty=Tensor[(10, 3, 6), uint16] */;
  %534 = %523.1;
  %535 = %530.1;
  %536 = @func_3170(%532) /* ty=Tensor[(5, 6, 7), uint8] */;
  (%533, %534, %535, meta[relay.Constant][34] /* ty=Tensor[(4, 28), float64] */, %var_9823, meta[relay.Constant][35] /* ty=Tensor[(2112), float64] */, %536, %var_9839)
}

def @func_9477(%var_9460: Tensor[(900), float32], %var_9461: Tensor[(4, 44), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(4, 44), float64], Tensor[(3, 2), float32]) {
  %537 = cast(%var_9460, dtype="float32") /* ty=Tensor[(900), float32] */;
  %538 = cast(%var_9461, dtype="float64") /* ty=Tensor[(4, 44), float64] */;
  %539 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 2), float32] */;
  %540 = reshape(%537, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float32] */;
  %541 = reshape(%538, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %542 = reshape(%539, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %543 = @func_2896(%540, %541, %542) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(2, 3, 8), int64]) */;
  %544 = @func_6763() /* ty=Tensor[(10, 3, 6), float64] */;
  %545 = %543.6;
  (%544, %545, %var_9460, %var_9461, meta[relay.Constant][36] /* ty=Tensor[(3, 2), float32] */)
}

def @func_8865() -> Tensor[(13, 8, 8), float32] {
  @func_8863() /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_11700() -> Tensor[(126), uint64] {
  @func_11698() /* ty=Tensor[(126), uint64] */
}

def @func_5075(%var_5072: Tensor[(5, 7, 8), float64], %var_5073: Tensor[(560), uint8], %var_5074: Tensor[(2112), float64]) -> (Tensor[(5, 7, 8), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  @func_5070(%var_5072, %var_5073, %var_5074) /* ty=(Tensor[(5, 7, 8), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */
}

def @func_10351() -> (Tensor[(126), uint64],) {
  %548 = fn () -> (Tensor[(126), uint64],) {
    %546 = @func_10298() /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) */;
    %547 = %546.2;
    (%547,)
  };
  %548() /* ty=(Tensor[(126), uint64],) */
}

def @func_6983() -> (Tensor[(10, 3, 6), uint16],) {
  %549 = @func_5644() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), float64]) */;
  %550 = %549.0;
  (%550,)
}

def @func_7978() -> Tensor[(10, 3, 6), uint16] {
  %551 = fn () -> Tensor[(10, 3, 6), uint16] {
    @func_6576() /* ty=Tensor[(10, 3, 6), uint16] */
  };
  %551() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_10053() -> (Tensor[(126), uint64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  @func_10051() /* ty=(Tensor[(126), uint64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) */
}

def @func_9171() -> Tensor[(126), uint64] {
  @func_9169() /* ty=Tensor[(126), uint64] */
}

def @func_9199() -> Tensor[(10, 3, 6), uint16] {
  %552 = @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %552.0
}

def @func_11541() -> Tensor[(13, 8, 8), float32] {
  @func_11539() /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_7096(%var_7093: Tensor[(210), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) {
  %553 = cast(%var_7093, dtype="float64") /* ty=Tensor[(210), float64] */;
  %554 = reshape(%553, newshape=[5, 6, 7]) /* ty=Tensor[(5, 6, 7), float64] */;
  %555 = @func_6576() /* ty=Tensor[(10, 3, 6), uint16] */;
  %556 = @func_3170(%554) /* ty=Tensor[(5, 6, 7), uint8] */;
  (%555, %556, %var_7093)
}

def @func_7688() -> (Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  %562 = fn () -> (Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
    %557 = cast(meta[relay.Constant][37] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
    %558 = reshape(%557, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
    %559 = @func_3807(%558) /* ty=(Tensor[(6, 4, 11), float64],) */;
    %560 = @func_6799() /* ty=Tensor[(126), uint64] */;
    %561 = %559.0;
    (%560, %561, meta[relay.Constant][37] /* ty=Tensor[(264), float64] */)
  };
  %562() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */
}

def @func_8863() -> Tensor[(13, 8, 8), float32] {
  %563 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 8, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  cosh(%563) /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_12280() -> (Tensor[(126), uint64], Tensor[(10, 3, 6), uint16]) {
  @func_12278() /* ty=(Tensor[(126), uint64], Tensor[(10, 3, 6), uint16]) */
}

def @func_11479() -> (Tensor[(126), uint64],) {
  %566 = fn () -> (Tensor[(126), uint64],) {
    %564 = @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */;
    %565 = %564.0;
    (%565,)
  };
  %566() /* ty=(Tensor[(126), uint64],) */
}

def @func_9790(%var_9787: Tensor[(351), float32], %var_9788: Tensor[(162), float32], %var_9789: Tensor[(2100), uint16]) -> (Tensor[(264), float64], Tensor[(176), float64], Tensor[(351), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(5, 7, 7), float32], Tensor[(245), float32], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(2100), uint16], Tensor[(200), uint32], Tensor[(3, 11, 16), float32]) {
  @func_9785(%var_9787, %var_9788, %var_9789) /* ty=(Tensor[(264), float64], Tensor[(176), float64], Tensor[(351), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(5, 7, 7), float32], Tensor[(245), float32], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(2100), uint16], Tensor[(200), uint32], Tensor[(3, 11, 16), float32]) */
}

def @func_4614(%var_4613: Tensor[(15, 6), float32]) -> (Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) {
  %586 = fn (%var_4571: Tensor[(15, 6), float32]) -> (Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) {
    %567 = cast(%var_4571, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
    %568 = reshape(%567, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
    %569 = @func_2388(%568) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
    %570 = cast(meta[relay.Constant][39] /* ty=Tensor[(320), float64] */, dtype="float64") /* ty=Tensor[(320), float64] */;
    %571 = reshape(%570, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float64] */;
    %572 = @func_710(%571) /* ty=(Tensor[(16, 2, 10), float64],) */;
    %573 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
    %574 = atan(%573) /* ty=Tensor[(12, 15, 16), float64] */;
    %575 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 15, 16), float64] */, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
    %576 = rsqrt(%575) /* ty=Tensor[(12, 15, 16), float32] */;
    %577 = cast(%576, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
    %578 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %579 = cast(%574, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
    %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %581 = floor_mod(%579, %580) /* ty=Tensor[(12, 15, 16), float64] */;
    %582 = cast(%581, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
    %583 = %569.0;
    %584 = %572.0;
    %585 = erf(%582) /* ty=Tensor[(12, 15, 16), float64] */;
    (%583, %var_4571, %584, meta[relay.Constant][39] /* ty=Tensor[(320), float64] */, %585)
  };
  %586(%var_4613) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) */
}

def @func_10224() -> (Tensor[(10, 3, 6), float64], Tensor[(126), uint64]) {
  %590 = fn () -> (Tensor[(10, 3, 6), float64], Tensor[(126), uint64]) {
    %587 = @func_6354() /* ty=(Tensor[(126), uint64],) */;
    %588 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
    %589 = %587.0;
    (%588, %589)
  };
  %590() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(126), uint64]) */
}

def @func_5220(%var_5217: Tensor[(15, 5, 12), float64], %var_5218: Tensor[(15, 5, 12), float64], %var_5219: Tensor[(48, 1), float64]) -> (Tensor[(15, 5, 12), float64], Tensor[(15, 5, 12), uint64], Tensor[(10, 1, 9), int8], Tensor[(10, ?, 9), bool], Tensor[(48), float64], Tensor[(3, 10, 3), float32], Tensor[(48, 176), int8], Tensor[(560), uint8]) {
  @func_5215(%var_5217, %var_5218, %var_5219) /* ty=(Tensor[(15, 5, 12), float64], Tensor[(15, 5, 12), uint64], Tensor[(10, 1, 9), int8], Tensor[(10, ?, 9), bool], Tensor[(48), float64], Tensor[(3, 10, 3), float32], Tensor[(48, 176), int8], Tensor[(560), uint8]) */
}

def @func_8536() -> (Tensor[(10, 3, 6), uint16],) {
  @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_5443() -> Tensor[(10, 3, 6), float64] {
  %594 = fn () -> Tensor[(10, 3, 6), float64] {
    %591 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
    %592 = %591.2;
    %593 = cast(%592, dtype="float64") /* ty=Tensor[(10, 3, 6), float64] */;
    erf(%593) /* ty=Tensor[(10, 3, 6), float64] */
  };
  %594() /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_6452(%var_6449: Tensor[(6, 8, 7), float32], %var_6450: Tensor[(6), float32], %var_6451: Tensor[(320), float64]) -> (Tensor[(6, 8, 7), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(6), float32], Tensor[(2100), uint16], Tensor[(50, 4), uint32], Tensor[(16, 2, 10), float64], Tensor[(320), float64]) {
  @func_6447(%var_6449, %var_6450, %var_6451) /* ty=(Tensor[(6, 8, 7), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(6), float32], Tensor[(2100), uint16], Tensor[(50, 4), uint32], Tensor[(16, 2, 10), float64], Tensor[(320), float64]) */
}

def @func_10051() -> (Tensor[(126), uint64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  %595 = @func_6354() /* ty=(Tensor[(126), uint64],) */;
  %596 = @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %597 = @func_9863() /* ty=(Tensor[(126), uint64],) */;
  %598 = %595.0;
  %599 = %596.0;
  %600 = %597.0;
  (%598, %599, %600)
}

def @func_7099(%var_7097: Tensor[(210), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) {
  @func_7096(%var_7097) /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) */
}

def @func_12997() -> Tensor[(126), uint64] {
  @func_12138() /* ty=Tensor[(126), uint64] */
}

def @func_12355(%var_12342: Tensor[(351), float32]) -> (Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(351), float32], Tensor[(10, 3, 6), float64]) {
  %601 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %602 = cast(%var_12342, dtype="float32") /* ty=Tensor[(351), float32] */;
  %603 = reshape(%602, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %604 = @func_5513(%603) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */;
  %605 = @func_10204() /* ty=(Tensor[(10, 3, 6), float64],) */;
  %606 = %601.0;
  %607 = %604.1;
  %608 = %605.0;
  (%606, %607, %var_12342, %608)
}

def @func_12278() -> (Tensor[(126), uint64], Tensor[(10, 3, 6), uint16]) {
  %609 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %610 = %609.0;
  %611 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%610, %611)
}

def @func_6644(%var_6620: Tensor[(63, 2), uint64]) -> (Tensor[(176), float64], Tensor[(63, 2), uint64], Tensor[(2, 3, 8), bool]) {
  %612 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %613 = cast(%var_6620, dtype="uint64") /* ty=Tensor[(63, 2), uint64] */;
  %614 = cast(%var_6620, dtype="uint64") /* ty=Tensor[(63, 2), uint64] */;
  %615 = cast(meta[relay.Constant][41] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %616 = %612.0;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(176), float64] */;
  %618 = reshape(%613, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %619 = reshape(%614, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
  %620 = reshape(%615, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %621 = reshape(%617, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %622 = @func_4011(%618, %619, %620, %621) /* ty=(Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) */;
  %623 = %622.1;
  %624 = cast(meta[relay.Constant][41] /* ty=Tensor[(48), float64] */, dtype="bool") /* ty=Tensor[(48), bool] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%623, dtype="bool") /* ty=Tensor[(2, 3, 8), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %628 = less_equal(%626, %627) /* ty=Tensor[(2, 3, 8), bool] */;
  (%616, %var_6620, %628)
}

def @func_10708(%var_10707: Tensor[(176), float64]) -> (Tensor[(13, 8, 8), float32], Tensor[(176), uint16], Tensor[(10, 3, 6), uint16], Tensor[(1, 3, 2), float32]) {
  %640 = fn (%var_10645: Tensor[(176), float64]) -> (Tensor[(13, 8, 8), float32], Tensor[(176), uint16], Tensor[(10, 3, 6), uint16], Tensor[(1, 3, 2), float32]) {
    %629 = @func_10468() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) */;
    %630 = %629.1;
    %631 = cast(%var_10645, dtype="uint16") /* ty=Tensor[(176), uint16] */;
    %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(1), int32] */;
    %633 = cast(%630, dtype="uint16") /* ty=Tensor[(176), uint16] */;
    %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %635 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
    %636 = @func_8863() /* ty=Tensor[(13, 8, 8), float32] */;
    %637 = multiply(%633, %634) /* ty=Tensor[(176), uint16] */;
    %638 = @func_7977() /* ty=Tensor[(10, 3, 6), uint16] */;
    %639 = %635.0;
    (%636, %637, %638, %639)
  };
  %640(%var_10707) /* ty=(Tensor[(13, 8, 8), float32], Tensor[(176), uint16], Tensor[(10, 3, 6), uint16], Tensor[(1, 3, 2), float32]) */
}

def @func_5428() -> (Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) {
  @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */
}

def @func_6577() -> Tensor[(10, 3, 6), uint16] {
  %642 = fn () -> Tensor[(10, 3, 6), uint16] {
    %641 = @func_5644() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), float64]) */;
    %641.0
  };
  %642() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_5070(%var_5046: Tensor[(5, 7, 8), float64], %var_5056: Tensor[(560), uint8], %var_5057: Tensor[(2112), float64]) -> (Tensor[(5, 7, 8), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  %643 = cast(%var_5046, dtype="float64") /* ty=Tensor[(5, 7, 8), float64] */;
  %644 = cast(%var_5056, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %645 = cast(%var_5057, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %646 = reshape(%644, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), uint8] */;
  %647 = reshape(%645, newshape=[22, 96]) /* ty=Tensor[(22, 96), float64] */;
  %648 = @func_338(%646, %647) /* ty=(Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) */;
  %649 = sqrt(%643) /* ty=Tensor[(5, 7, 8), float64] */;
  %650 = %648.11;
  (%649, %650, %var_5056, %var_5057)
}

def @func_6985() -> (Tensor[(10, 3, 6), uint16],) {
  @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_9377(%var_9244: Tensor[(560), uint8], %var_9276: Tensor[(240), int16], %var_9347: Tensor[(351), float32], %var_9348: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), uint16], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(15, 4, 4), int16], Tensor[(240), int16], Tensor[(10, 3, 6), uint16], Tensor[(3584), float32], Tensor[(1680), float32], Tensor[(112), float64], Tensor[(9, 3, 6), float32], Tensor[(351), float32], Tensor[(162), float32], Tensor[(10, 3, 6), float64]) {
  %651 = @func_6983() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %652 = cast(%var_9276, dtype="int16") /* ty=Tensor[(240), int16] */;
  %653 = cast(%var_9276, dtype="int16") /* ty=Tensor[(240), int16] */;
  %654 = reshape(%652, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), int16] */;
  %655 = reshape(%653, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), int16] */;
  %656 = @func_8320(%654, %655) /* ty=(Tensor[(15, 4, 4), int16], Tensor[(10, 3, 6), uint16]) */;
  %657 = cast(meta[relay.Constant][43] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %658 = reshape(%657, newshape=[15, 16, 7]) /* ty=Tensor[(15, 16, 7), float32] */;
  %659 = @func_7527(%658) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(5, 7, 8), float64], Tensor[(560, 1), uint8], Tensor[(2112), float64], Tensor[(10, 3, 6), float64], Tensor[(15, 16, 7), float64]) */;
  %660 = cast(%var_9244, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %661 = cast(meta[relay.Constant][42] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %662 = reshape(%660, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %663 = reshape(%661, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
  %664 = @func_7762(%662, %663) /* ty=(Tensor[(126), uint64], Tensor[(2, 1056), float64], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
  %665 = %664.2;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(112), float64] */;
  %667 = cast(%var_9347, dtype="float32") /* ty=Tensor[(351), float32] */;
  %668 = cast(%var_9348, dtype="float32") /* ty=Tensor[(162), float32] */;
  %669 = reshape(%667, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %670 = reshape(%668, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %671 = @func_5598(%669, %670) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
  %672 = cast(meta[relay.Constant][43] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %673 = reshape(%672, newshape=[15, 16, 7]) /* ty=Tensor[(15, 16, 7), float32] */;
  %674 = @func_7527(%673) /* ty=(Tensor[(14, 16, 16), float32], Tensor[(3584), float32], Tensor[(5, 7, 8), float64], Tensor[(560, 1), uint8], Tensor[(2112), float64], Tensor[(10, 3, 6), float64], Tensor[(15, 16, 7), float64]) */;
  %675 = %651.0;
  %676 = %656.0;
  %677 = @func_6576() /* ty=Tensor[(10, 3, 6), uint16] */;
  %678 = %659.1;
  %679 = exp(%666) /* ty=Tensor[(112), float64] */;
  %680 = %671.3;
  %681 = %674.5;
  (%675, %var_9244, meta[relay.Constant][42] /* ty=Tensor[(2112), float64] */, %676, %var_9276, %677, %678, meta[relay.Constant][43] /* ty=Tensor[(1680), float32] */, %679, %680, %var_9347, %var_9348, %681)
}

def @func_3931(%var_3930: Tensor[(10, 1, 9), int8]) -> Tensor[(10, 1, 9), int8] {
  %684 = fn (%var_3922: Tensor[(10, 1, 9), int8]) -> Tensor[(10, 1, 9), int8] {
    %682 = cast(meta[relay.Constant][44] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %683 = cast(%var_3922, dtype="int8") /* ty=Tensor[(10, 1, 9), int8] */;
    minimum(%682, %683) /* ty=Tensor[(10, 1, 9), int8] */
  };
  %684(%var_3930) /* ty=Tensor[(10, 1, 9), int8] */
}

def @func_2900(%var_2897: Tensor[(12, 15, 5), float32], %var_2898: Tensor[(176), float64], %var_2899: Tensor[(6), float32]) -> (Tensor[(12, 15, 5), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(2, 3, 8), int64]) {
  %703 = fn (%var_2844: Tensor[(12, 15, 5), float32], %var_2854: Tensor[(176), float64], %var_2861: Tensor[(6), float32]) -> (Tensor[(12, 15, 5), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(2, 3, 8), int64]) {
    %685 = cast(%var_2844, dtype="float32") /* ty=Tensor[(12, 15, 5), float32] */;
    %686 = cast(meta[relay.Constant][45] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %687 = cast(%var_2854, dtype="float64") /* ty=Tensor[(176), float64] */;
    %688 = reshape(%686, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %689 = reshape(%687, newshape=[1, 176]) /* ty=Tensor[(1, 176), float64] */;
    %690 = @func_2294(%688, %689) /* ty=(Tensor[(14, 10, 3), float64], Tensor[(12, 16, 11), float64], Tensor[(48), float64], Tensor[(1, 176), float64]) */;
    %691 = cast(%var_2861, dtype="float32") /* ty=Tensor[(6), float32] */;
    %692 = reshape(%691, newshape=[1, 3, 2]) /* ty=Tensor[(1, 3, 2), float32] */;
    %693 = @func_2170(%692) /* ty=(Tensor[(1, 3, 2), float32],) */;
    %694 = %690.2;
    %695 = cast(%694, dtype="float64") /* ty=Tensor[(48), float64] */;
    %696 = cast(%var_2854, dtype="float64") /* ty=Tensor[(176), float64] */;
    %697 = reshape(%695, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
    %698 = reshape(%696, newshape=[176]) /* ty=Tensor[(176), float64] */;
    %699 = @func_1458(%697, %698) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */;
    %700 = sigmoid(%685) /* ty=Tensor[(12, 15, 5), float32] */;
    %701 = %693.0;
    %702 = %699.0;
    (%700, %694, meta[relay.Constant][45] /* ty=Tensor[(48), float64] */, %var_2854, %701, %var_2861, %702)
  };
  %703(%var_2897, %var_2898, %var_2899) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(2, 3, 8), int64]) */
}

def @func_5828(%var_5826: Tensor[(560), uint8], %var_5827: Tensor[(2112), float64]) -> (Tensor[(1, 3, 2), float32], Tensor[(5, 7, 8), float64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  %714 = fn (%var_5815: Tensor[(560), uint8], %var_5816: Tensor[(2112), float64]) -> (Tensor[(1, 3, 2), float32], Tensor[(5, 7, 8), float64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
    %704 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
    %705 = cast(meta[relay.Constant][46] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %706 = cast(%var_5815, dtype="uint8") /* ty=Tensor[(560), uint8] */;
    %707 = cast(%var_5816, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %708 = reshape(%705, newshape=[5, 7, 8]) /* ty=Tensor[(5, 7, 8), float64] */;
    %709 = reshape(%706, newshape=[560]) /* ty=Tensor[(560), uint8] */;
    %710 = reshape(%707, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
    %711 = @func_5070(%708, %709, %710) /* ty=(Tensor[(5, 7, 8), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
    %712 = %704.0;
    %713 = %711.0;
    (%712, %713, meta[relay.Constant][46] /* ty=Tensor[(280), float64] */, %var_5815, %var_5816)
  };
  %714(%var_5826, %var_5827) /* ty=(Tensor[(1, 3, 2), float32], Tensor[(5, 7, 8), float64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */
}

def @func_11836() -> Tensor[(10, 3, 6), uint16] {
  %715 = @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %715.0
}

def @func_5335() -> (Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) {
  %716 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %717 = reshape(%716, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
  %718 = @func_2388(%717) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
  %719 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 3, 6), float64] */;
  %720 = log2(%719) /* ty=Tensor[(10, 3, 6), float64] */;
  %721 = cast(%720, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
  %722 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(10, 3, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 3, 6), float64] */, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %725 = %718.1;
  %726 = maximum(%723, %724) /* ty=Tensor[(10, 3, 6), uint16] */;
  (%725, meta[relay.Constant][47] /* ty=Tensor[(15, 6), float32] */, %726)
}

def @func_6447(%var_6406: Tensor[(6, 8, 7), float32], %var_6426: Tensor[(6), float32], %var_6437: Tensor[(320), float64]) -> (Tensor[(6, 8, 7), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(6), float32], Tensor[(2100), uint16], Tensor[(50, 4), uint32], Tensor[(16, 2, 10), float64], Tensor[(320), float64]) {
  %727 = cast(%var_6406, dtype="float32") /* ty=Tensor[(6, 8, 7), float32] */;
  %728 = cast(%var_6426, dtype="float32") /* ty=Tensor[(6), float32] */;
  %729 = cast(meta[relay.Constant][49] /* ty=Tensor[(2100), uint16] */, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %730 = cast(meta[relay.Constant][50] /* ty=Tensor[(50, 4), uint32] */, dtype="uint32") /* ty=Tensor[(50, 4), uint32] */;
  %731 = reshape(%728, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %732 = reshape(%729, newshape=[2100]) /* ty=Tensor[(2100), uint16] */;
  %733 = reshape(%730, newshape=[200]) /* ty=Tensor[(200), uint32] */;
  %734 = @func_6334(%731, %732, %733) /* ty=(Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(162), float32], Tensor[(1, 200), uint32], Tensor[(2100), uint16], Tensor[(200), uint32]) */;
  %735 = cast(%var_6437, dtype="float64") /* ty=Tensor[(320), float64] */;
  %736 = reshape(%735, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float64] */;
  %737 = @func_710(%736) /* ty=(Tensor[(16, 2, 10), float64],) */;
  %738 = sqrt(%727) /* ty=Tensor[(6, 8, 7), float32] */;
  %739 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
  %740 = %734.4;
  %741 = %737.0;
  (%738, %739, %740, %var_6426, meta[relay.Constant][49] /* ty=Tensor[(2100), uint16] */, meta[relay.Constant][50] /* ty=Tensor[(50, 4), uint32] */, %741, %var_6437)
}

def @func_9187(%var_9185: Tensor[(8, 3, 7), int32], %var_9186: Tensor[(8, 3, 7), int32]) -> (Tensor[(8, 3, 7), int32],) {
  %747 = fn (%var_9174: Tensor[(8, 3, 7), int32], %var_9175: Tensor[(8, 3, 7), int32]) -> (Tensor[(8, 3, 7), int32],) {
    %742 = cast(%var_9175, dtype="int32") /* ty=Tensor[(8, 3, 7), int32] */;
    %743 = shape_of(%var_9174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %744 = cast(%var_9174, dtype="int32") /* ty=Tensor[(8, 3, 7), int32] */;
    %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %746 = bitwise_or(%744, %745) /* ty=Tensor[(8, 3, 7), int32] */;
    (%746,)
  };
  %747(%var_9185, %var_9186) /* ty=(Tensor[(8, 3, 7), int32],) */
}

def @func_10850() -> (Tensor[(176), float64], Tensor[(13, 9, 3), float32]) {
  @func_10848() /* ty=(Tensor[(176), float64], Tensor[(13, 9, 3), float32]) */
}

def @func_12571() -> (Tensor[(10, 3, 6), uint16], Tensor[(126), uint64], Tensor[(84), int8], Tensor[(14, 6, 6), uint32]) {
  @func_12569() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(126), uint64], Tensor[(84), int8], Tensor[(14, 6, 6), uint32]) */
}

def @func_11736(%var_11728: Tensor[(162), float32], %var_11732: Tensor[(2100), uint16]) -> (Tensor[(10, 3, 6), uint16], Tensor[(1, 3, 2), float32], Tensor[(351), float32], Tensor[(162), bool], Tensor[(2100), uint32]) {
  %748 = @func_11324() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %749 = cast(meta[relay.Constant][51] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %750 = cast(meta[relay.Constant][52] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
  %751 = cast(meta[relay.Constant][53] /* ty=Tensor[(2100), uint16] */, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %752 = reshape(%749, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %753 = reshape(%750, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %754 = reshape(%751, newshape=[2100]) /* ty=Tensor[(2100), uint16] */;
  %755 = @func_9785(%752, %753, %754) /* ty=(Tensor[(264), float64], Tensor[(176), float64], Tensor[(351), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(5, 7, 7), float32], Tensor[(245), float32], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(2100), uint16], Tensor[(200), uint32], Tensor[(3, 11, 16), float32]) */;
  %756 = cast(%var_11728, dtype="bool") /* ty=Tensor[(162), bool] */;
  %757 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(162), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %758 = cast(meta[relay.Constant][52] /* ty=Tensor[(162), float32] */, dtype="bool") /* ty=Tensor[(162), bool] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?), bool] */;
  %760 = cast(%var_11732, dtype="uint32") /* ty=Tensor[(2100), uint32] */;
  %761 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(2100), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %762 = cast(meta[relay.Constant][53] /* ty=Tensor[(2100), uint16] */, dtype="uint32") /* ty=Tensor[(2100), uint32] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %764 = %748.0;
  %765 = %755.4;
  %766 = less(%758, %759) /* ty=Tensor[(162), bool] */;
  %767 = logical_xor(%762, %763) /* ty=Tensor[(2100), uint32] */;
  (%764, %765, meta[relay.Constant][51] /* ty=Tensor[(351), float32] */, %766, %767)
}

def @func_12519() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
  %772 = fn () -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
    %768 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
    %769 = @func_11240() /* ty=(Tensor[(10, 3, 6), uint16],) */;
    %770 = %768.2;
    %771 = %769.0;
    (%770, %771)
  };
  %772() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) */
}

def @func_8474() -> (Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  @func_8472() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */
}

def @func_11607() -> (Tensor[(10, 3, 6), uint16],) {
  %773 = @func_11502() /* ty=Tensor[(10, 3, 6), uint16] */;
  (%773,)
}

def @func_8820(%var_8818: Tensor[(90), float32], %var_8819: Tensor[(2112), float64]) -> (Tensor[(10, 3, 6), float32], Tensor[(320), float64], Tensor[(90), float32], Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(2112), float64], Tensor[(10, 1, 9), int8]) {
  %789 = fn (%var_8793: Tensor[(90), float32], %var_8806: Tensor[(2112), float64]) -> (Tensor[(10, 3, 6), float32], Tensor[(320), float64], Tensor[(90), float32], Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(2112), float64], Tensor[(10, 1, 9), int8]) {
    %774 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    %775 = cast(%774, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
    %776 = cast(%var_8793, dtype="float32") /* ty=Tensor[(90), float32] */;
    %777 = reshape(%776, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
    %778 = @func_4612(%777) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(16, 2, 10), float64], Tensor[(320), float64], Tensor[(12, 15, 16), float64]) */;
    %779 = cast(%var_8806, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %780 = reshape(%779, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
    %781 = @func_8764(%780) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(13, 9, 3), float32], Tensor[(112), float64], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(162), float32]) */;
    %782 = cast(%var_8793, dtype="int8") /* ty=Tensor[(90), int8] */;
    %783 = reshape(%782, newshape=[10, 1, 9]) /* ty=Tensor[(10, 1, 9), int8] */;
    %784 = acosh(%775) /* ty=Tensor[(10, 3, 6), float32] */;
    %785 = %778.3;
    %786 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    %787 = %781.6;
    %788 = @func_3929(%783) /* ty=Tensor[(10, 1, 9), int8] */;
    (%784, %785, %var_8793, %786, %787, %var_8806, %788)
  };
  %789(%var_8818, %var_8819) /* ty=(Tensor[(10, 3, 6), float32], Tensor[(320), float64], Tensor[(90), float32], Tensor[(10, 3, 6), float64], Tensor[(162), float32], Tensor[(2112), float64], Tensor[(10, 1, 9), int8]) */
}

def @func_6253() -> (Tensor[(176), float64],) {
  %792 = fn () -> (Tensor[(176), float64],) {
    %790 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
    %791 = %790.4;
    (%791,)
  };
  %792() /* ty=(Tensor[(176), float64],) */
}

def @func_12164() -> (Tensor[(10, 3, 6), uint16],) {
  @func_12162() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_11326() -> (Tensor[(10, 3, 6), uint16],) {
  @func_11324() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_6543(%var_6539: Tensor[(15, 6), float32], %var_6540: Tensor[(900), float64], %var_6541: Tensor[(200), uint32], %var_6542: Tensor[(5, 48), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(48, 176), int8], Tensor[(900), float64], Tensor[(5, 4, 10), uint32], Tensor[(200), uint32], Tensor[(5, 48), bool]) {
  @func_6537(%var_6539, %var_6540, %var_6541, %var_6542) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(3, 10, 3), float32], Tensor[(15, 6), float32], Tensor[(48, 176), int8], Tensor[(900), float64], Tensor[(5, 4, 10), uint32], Tensor[(200), uint32], Tensor[(5, 48), bool]) */
}

def @func_9383(%var_9379: Tensor[(560), uint8], %var_9380: Tensor[(240), int16], %var_9381: Tensor[(351), float32], %var_9382: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), uint16], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(15, 4, 4), int16], Tensor[(240), int16], Tensor[(10, 3, 6), uint16], Tensor[(3584), float32], Tensor[(1680), float32], Tensor[(112), float64], Tensor[(9, 3, 6), float32], Tensor[(351), float32], Tensor[(162), float32], Tensor[(10, 3, 6), float64]) {
  @func_9377(%var_9379, %var_9380, %var_9381, %var_9382) /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(560), uint8], Tensor[(2112), float64], Tensor[(15, 4, 4), int16], Tensor[(240), int16], Tensor[(10, 3, 6), uint16], Tensor[(3584), float32], Tensor[(1680), float32], Tensor[(112), float64], Tensor[(9, 3, 6), float32], Tensor[(351), float32], Tensor[(162), float32], Tensor[(10, 3, 6), float64]) */
}

def @func_5601(%var_5599: Tensor[(351), float32], %var_5600: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) {
  %802 = fn (%var_5580: Tensor[(351), float32], %var_5587: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) {
    %793 = cast(%var_5580, dtype="float32") /* ty=Tensor[(351), float32] */;
    %794 = reshape(%793, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %795 = @func_5513(%794) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */;
    %796 = cast(%var_5587, dtype="float32") /* ty=Tensor[(162), float32] */;
    %797 = reshape(%796, newshape=[9, 3, 6]) /* ty=Tensor[(9, 3, 6), float32] */;
    %798 = @func_4487(%797) /* ty=(Tensor[(9, 3, 6), float32], Tensor[(3, 10, 3), float32], Tensor[(90), float32]) */;
    %799 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    %800 = %795.0;
    %801 = %798.0;
    (%799, %800, %var_5580, %801, %var_5587)
  };
  %802(%var_5599, %var_5600) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */
}

def @func_3607(%var_3606: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
  %805 = fn (%var_3580: Tensor[(14, 16, 16), float32]) -> (Tensor[(14, 16, 16), float32],) {
    %803 = cast(%var_3580, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
    %804 = sqrt(%803) /* ty=Tensor[(14, 16, 16), float32] */;
    (%804,)
  };
  %805(%var_3606) /* ty=(Tensor[(14, 16, 16), float32],) */
}

def @func_8630(%var_8629: Tensor[(180), uint16]) -> (Tensor[(13, 9, 3), float32], Tensor[(10, 3, 6), uint64], Tensor[(180), uint16]) {
  %812 = fn (%var_8614: Tensor[(180), uint16]) -> (Tensor[(13, 9, 3), float32], Tensor[(10, 3, 6), uint64], Tensor[(180), uint16]) {
    %806 = @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */;
    %807 = cast(%var_8614, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %808 = reshape(%807, newshape=[10, 3, 6]) /* ty=Tensor[(10, 3, 6), uint16] */;
    %809 = @func_6929(%808) /* ty=(Tensor[(10, 3, 6), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
    %810 = %806.1;
    %811 = %809.0;
    (%810, %811, %var_8614)
  };
  %812(%var_8629) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(10, 3, 6), uint64], Tensor[(180), uint16]) */
}

def @func_9681(%var_9676: Tensor[(16, 15, 14), int8], %var_9677: Tensor[(16, 15, 14), int8], %var_9678: Tensor[(28, 4), float64], %var_9679: Tensor[(2112), float64], %var_9680: Tensor[(240), int16]) -> (Tensor[(16, 15, 14), bool], Tensor[(28, 4), float64], Tensor[(560), uint8], Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(2112), float32], Tensor[(15, 4, 4), int16], Tensor[(240), int16]) {
  @func_9674(%var_9676, %var_9677, %var_9678, %var_9679, %var_9680) /* ty=(Tensor[(16, 15, 14), bool], Tensor[(28, 4), float64], Tensor[(560), uint8], Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(2112), float32], Tensor[(15, 4, 4), int16], Tensor[(240), int16]) */
}

def @func_4489(%var_4488: Tensor[(9, 3, 6), float32]) -> (Tensor[(9, 3, 6), float32], Tensor[(3, 10, 3), float32], Tensor[(90), float32]) {
  %819 = fn (%var_4469: Tensor[(9, 3, 6), float32]) -> (Tensor[(9, 3, 6), float32], Tensor[(3, 10, 3), float32], Tensor[(90), float32]) {
    %813 = cast(%var_4469, dtype="float32") /* ty=Tensor[(9, 3, 6), float32] */;
    %814 = cast(meta[relay.Constant][54] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %815 = reshape(%814, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
    %816 = @func_2388(%815) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
    %817 = asin(%813) /* ty=Tensor[(9, 3, 6), float32] */;
    %818 = %816.0;
    (%817, %818, meta[relay.Constant][54] /* ty=Tensor[(90), float32] */)
  };
  %819(%var_4488) /* ty=(Tensor[(9, 3, 6), float32], Tensor[(3, 10, 3), float32], Tensor[(90), float32]) */
}

def @func_713(%var_711: Tensor[(16, 2, 10), float64]) -> (Tensor[(16, 2, 10), float64],) {
  @func_710(%var_711) /* ty=(Tensor[(16, 2, 10), float64],) */
}

def @func_6338(%var_6335: Tensor[(6), float32], %var_6336: Tensor[(2100), uint16], %var_6337: Tensor[(200), uint32]) -> (Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(162), float32], Tensor[(1, 200), uint32], Tensor[(2100), uint16], Tensor[(200), uint32]) {
  %840 = fn (%var_6299: Tensor[(6), float32], %var_6325: Tensor[(2100), uint16], %var_6326: Tensor[(200), uint32]) -> (Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(162), float32], Tensor[(1, 200), uint32], Tensor[(2100), uint16], Tensor[(200), uint32]) {
    %820 = @func_6252() /* ty=(Tensor[(176), float64],) */;
    %821 = cast(%var_6299, dtype="float32") /* ty=Tensor[(6), float32] */;
    %822 = reshape(%821, newshape=[1, 3, 2]) /* ty=Tensor[(1, 3, 2), float32] */;
    %823 = @func_2170(%822) /* ty=(Tensor[(1, 3, 2), float32],) */;
    %824 = cast(meta[relay.Constant][55] /* ty=Tensor[(117, 3), float32] */, dtype="float32") /* ty=Tensor[(117, 3), float32] */;
    %825 = cast(meta[relay.Constant][56] /* ty=Tensor[(162), float32] */, dtype="float32") /* ty=Tensor[(162), float32] */;
    %826 = reshape(%824, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %827 = reshape(%825, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %828 = @func_5598(%826, %827) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
    %829 = cast(%var_6325, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
    %830 = cast(%var_6325, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
    %831 = cast(%var_6326, dtype="uint32") /* ty=Tensor[(200), uint32] */;
    %832 = reshape(%829, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), uint16] */;
    %833 = reshape(%830, newshape=[14, 15, 10]) /* ty=Tensor[(14, 15, 10), uint16] */;
    %834 = reshape(%831, newshape=[1, 200]) /* ty=Tensor[(1, 200), uint32] */;
    %835 = @func_5713(%832, %833, %834) /* ty=(Tensor[(6), float32], Tensor[(3, 30), float32], Tensor[(10, 3, 6), uint16], Tensor[(14, 15, 10), float64], Tensor[(5, 6, 7), uint8], Tensor[(210), float64], Tensor[(5, 4, 10), uint32], Tensor[(1, 200), uint32]) */;
    %836 = %820.0;
    %837 = %823.0;
    %838 = %828.0;
    %839 = %835.7;
    (%836, %837, %var_6299, %838, meta[relay.Constant][55] /* ty=Tensor[(117, 3), float32] */, meta[relay.Constant][56] /* ty=Tensor[(162), float32] */, %839, %var_6325, %var_6326)
  };
  %840(%var_6335, %var_6336, %var_6337) /* ty=(Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(162), float32], Tensor[(1, 200), uint32], Tensor[(2100), uint16], Tensor[(200), uint32]) */
}

def @func_9865() -> (Tensor[(126), uint64],) {
  @func_9863() /* ty=(Tensor[(126), uint64],) */
}

def @func_11940() -> Tensor[(10, 3, 6), uint16] {
  %841 = fn () -> Tensor[(10, 3, 6), uint16] {
    @func_9199() /* ty=Tensor[(10, 3, 6), uint16] */
  };
  %841() /* ty=Tensor[(10, 3, 6), uint16] */
}

def @func_11154() -> (Tensor[(126), uint64],) {
  @func_11152() /* ty=(Tensor[(126), uint64],) */
}

def @func_10796() -> (Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  @func_10794() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) */
}

def @func_12391() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
  @func_12389() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) */
}

def @func_8977(%var_8975: Tensor[(3, 3, 6), float64]) -> (Tensor[(3, 3, 6), float32],) {
  @func_8974(%var_8975) /* ty=(Tensor[(3, 3, 6), float32],) */
}

def @func_5895(%var_5894: Tensor[(162), float32]) -> (Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) {
  %860 = fn (%var_5872: Tensor[(162), float32]) -> (Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) {
    %842 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
    %843 = cast(meta[relay.Constant][57] /* ty=Tensor[(3, 117), float32] */, dtype="float32") /* ty=Tensor[(3, 117), float32] */;
    %844 = cast(%var_5872, dtype="float32") /* ty=Tensor[(162), float32] */;
    %845 = reshape(%843, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %846 = reshape(%844, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %847 = @func_5598(%845, %846) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
    %848 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
    %849 = reshape(%848, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
    %850 = @func_2388(%849) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
    %851 = %847.2;
    %852 = cast(%851, dtype="float32") /* ty=Tensor[(351), float32] */;
    %853 = reshape(%852, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
    %854 = cast(%851, dtype="float32") /* ty=Tensor[(351), float32] */;
    %855 = reshape(%854, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
    %856 = %842.1;
    %857 = %850.1;
    %858 = @func_4395(%853) /* ty=Tensor[(13, 9, 3), float32] */;
    %859 = @func_4395(%855) /* ty=Tensor[(13, 9, 3), float32] */;
    (%856, %851, meta[relay.Constant][57] /* ty=Tensor[(3, 117), float32] */, %var_5872, %857, meta[relay.Constant][58] /* ty=Tensor[(15, 6), float32] */, %858, %859)
  };
  %860(%var_5894) /* ty=(Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) */
}

def @func_12790(%var_12789: Tensor[(54), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(3, 3, 6), float32], Tensor[(54), float64]) {
  %867 = fn (%var_12783: Tensor[(54), float64]) -> (Tensor[(10, 3, 6), uint16], Tensor[(3, 3, 6), float32], Tensor[(54), float64]) {
    %861 = @func_12518() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) */;
    %862 = cast(%var_12783, dtype="float64") /* ty=Tensor[(54), float64] */;
    %863 = reshape(%862, newshape=[3, 3, 6]) /* ty=Tensor[(3, 3, 6), float64] */;
    %864 = @func_8974(%863) /* ty=(Tensor[(3, 3, 6), float32],) */;
    %865 = %861.0;
    %866 = %864.0;
    (%865, %866, %var_12783)
  };
  %867(%var_12789) /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(3, 3, 6), float32], Tensor[(54), float64]) */
}

def @func_10794() -> (Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  %868 = @func_10468() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(176), float64]) */;
  %869 = @func_6691() /* ty=(Tensor[(126), uint64],) */;
  %870 = %868.0;
  %871 = %869.0;
  (%870, %871)
}

def @func_6184() -> Tensor[(10, 3, 6), float64] {
  @func_6182() /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_7875() -> (Tensor[(126), uint64],) {
  @func_7873() /* ty=(Tensor[(126), uint64],) */
}

def @func_6354() -> (Tensor[(126), uint64],) {
  %872 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
  %873 = %872.2;
  (%873,)
}

def @func_6854() -> Tensor[(126), uint64] {
  @func_6852() /* ty=Tensor[(126), uint64] */
}

def @func_10911() -> Tensor[(10, 3, 6), float64] {
  @func_10909() /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_4696(%var_4693: Tensor[(16, 7, 1), float64], %var_4694: Tensor[(560), uint8], %var_4695: Tensor[(2, 1056), float64]) -> (Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) {
  %888 = fn (%var_4638: Tensor[(16, 7, 1), float64], %var_4653: Tensor[(560), uint8], %var_4654: Tensor[(2, 1056), float64]) -> (Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) {
    %874 = cast(-7.85244f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %875 = cast(%var_4638, dtype="float64") /* ty=Tensor[(16, 7, 1), float64] */;
    %876 = power(%874, %875) /* ty=Tensor[(16, 7, 1), float64] */;
    %877 = cast(%var_4653, dtype="uint32") /* ty=Tensor[(560), uint32] */;
    %878 = cast(%876, dtype="uint32") /* ty=Tensor[(16, 7, 1), uint32] */;
    %879 = cast(%var_4653, dtype="uint8") /* ty=Tensor[(560), uint8] */;
    %880 = cast(%var_4654, dtype="float64") /* ty=Tensor[(2, 1056), float64] */;
    %881 = reshape(%879, newshape=[10, 4, 14]) /* ty=Tensor[(10, 4, 14), uint8] */;
    %882 = reshape(%880, newshape=[22, 96]) /* ty=Tensor[(22, 96), float64] */;
    %883 = @func_338(%881, %882) /* ty=(Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) */;
    %884 = %883.7;
    %885 = cast(%884, dtype="float32") /* ty=Tensor[(12, 16, 11), float32] */;
    %886 = bitwise_xor(%877, %878) /* ty=Tensor[(16, 7, 560), uint32] */;
    %887 = asin(%885) /* ty=Tensor[(12, 16, 11), float32] */;
    (%var_4654, %886, %887)
  };
  %888(%var_4693, %var_4694, %var_4695) /* ty=(Tensor[(2, 1056), float64], Tensor[(16, 7, 560), uint32], Tensor[(12, 16, 11), float32]) */
}

def @func_10076() -> Tensor[(176), float64] {
  %889 = @func_6252() /* ty=(Tensor[(176), float64],) */;
  %889.0
}

def @func_7873() -> (Tensor[(126), uint64],) {
  %890 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %891 = %890.0;
  (%891,)
}

def @func_4398(%var_4396: Tensor[(13, 9, 3), float32]) -> Tensor[(13, 9, 3), float32] {
  @func_4395(%var_4396) /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_8098() -> (Tensor[(176), float64],) {
  %894 = fn () -> (Tensor[(176), float64],) {
    %892 = @func_5426() /* ty=(Tensor[(15, 6), float32], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(48), float64], Tensor[(176), float64]) */;
    %893 = %892.4;
    (%893,)
  };
  %894() /* ty=(Tensor[(176), float64],) */
}

def @func_10848() -> (Tensor[(176), float64], Tensor[(13, 9, 3), float32]) {
  %895 = @func_8116() /* ty=(Tensor[(126), uint64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */;
  %896 = @func_10023() /* ty=Tensor[(176), float64] */;
  %897 = %895.1;
  (%896, %897)
}

def @func_7237(%var_7234: Tensor[(264), float64], %var_7235: Tensor[(351), float32], %var_7236: Tensor[(162), float32]) -> (Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) {
  %913 = fn (%var_7203: Tensor[(264), float64], %var_7206: Tensor[(351), float32], %var_7207: Tensor[(162), float32]) -> (Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) {
    %898 = @func_6252() /* ty=(Tensor[(176), float64],) */;
    %899 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
    %900 = cast(%899, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
    %901 = cast(%var_7203, dtype="float64") /* ty=Tensor[(264), float64] */;
    %902 = reshape(%901, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
    %903 = @func_3807(%902) /* ty=(Tensor[(6, 4, 11), float64],) */;
    %904 = cast(%var_7206, dtype="float32") /* ty=Tensor[(351), float32] */;
    %905 = cast(%var_7207, dtype="float32") /* ty=Tensor[(162), float32] */;
    %906 = reshape(%904, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %907 = reshape(%905, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %908 = @func_5598(%906, %907) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(9, 3, 6), float32], Tensor[(162), float32]) */;
    %909 = %898.0;
    %910 = sin(%900) /* ty=Tensor[(10, 3, 6), float32] */;
    %911 = %903.0;
    %912 = %908.1;
    (%909, %910, %911, %var_7203, %912, %var_7206, %var_7207)
  };
  %913(%var_7234, %var_7235, %var_7236) /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) */
}

def @func_3172(%var_3171: Tensor[(5, 6, 7), float64]) -> Tensor[(5, 6, 7), uint8] {
  %920 = fn (%var_3158: Tensor[(5, 6, 7), float64]) -> Tensor[(5, 6, 7), uint8] {
    %914 = cast(%var_3158, dtype="float64") /* ty=Tensor[(5, 6, 7), float64] */;
    %915 = sin(%914) /* ty=Tensor[(5, 6, 7), float64] */;
    %916 = cast(%var_3158, dtype="uint8") /* ty=Tensor[(5, 6, 7), uint8] */;
    %917 = shape_of(%915, dtype="int32") /* ty=Tensor[(3), int32] */;
    %918 = cast(%915, dtype="uint8") /* ty=Tensor[(5, 6, 7), uint8] */;
    %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    minimum(%918, %919) /* ty=Tensor[(5, 6, 7), uint8] */
  };
  %920(%var_3171) /* ty=Tensor[(5, 6, 7), uint8] */
}

def @func_4011(%var_3998: Tensor[(9, 2, 7), uint64], %var_3999: Tensor[(9, 2, 7), uint64], %var_4004: Tensor[(1, 48), float64], %var_4005: Tensor[(176), float64]) -> (Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) {
  %921 = cast(%var_3999, dtype="uint64") /* ty=Tensor[(9, 2, 7), uint64] */;
  %922 = shape_of(%var_3998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %923 = cast(%var_3998, dtype="uint64") /* ty=Tensor[(9, 2, 7), uint64] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %925 = cast(%var_4004, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %926 = cast(%var_4005, dtype="float64") /* ty=Tensor[(176), float64] */;
  %927 = reshape(%925, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %928 = reshape(%926, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %929 = @func_1458(%927, %928) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */;
  %930 = subtract(%923, %924) /* ty=Tensor[(9, 2, 7), uint64] */;
  %931 = %929.0;
  (%930, %931, %var_4004, %var_4005)
}

def @func_6931(%var_6930: Tensor[(10, 3, 6), uint16]) -> (Tensor[(10, 3, 6), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  %947 = fn (%var_6883: Tensor[(10, 3, 6), uint16]) -> (Tensor[(10, 3, 6), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
    %932 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
    %933 = cast(%var_6883, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
    %934 = shape_of(%932, dtype="int32") /* ty=Tensor[(3), int32] */;
    %935 = cast(%932, dtype="uint16") /* ty=Tensor[(10, 3, 6), uint16] */;
    %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %937 = bitwise_xor(%935, %936) /* ty=Tensor[(10, 3, 6), uint16] */;
    %938 = cast(%932, dtype="uint64") /* ty=Tensor[(10, 3, 6), uint64] */;
    %939 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
    %940 = cast(%937, dtype="uint64") /* ty=Tensor[(10, 3, 6), uint64] */;
    %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %942 = cast(meta[relay.Constant][59] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
    %943 = reshape(%942, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
    %944 = @func_3807(%943) /* ty=(Tensor[(6, 4, 11), float64],) */;
    %945 = right_shift(%940, %941) /* ty=Tensor[(10, 3, 6), uint64] */;
    %946 = %944.0;
    (%945, %946, meta[relay.Constant][59] /* ty=Tensor[(264), float64] */)
  };
  %947(%var_6930) /* ty=(Tensor[(10, 3, 6), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */
}

def @func_10078() -> Tensor[(176), float64] {
  @func_10076() /* ty=Tensor[(176), float64] */
}

def @func_10300() -> (Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) {
  @func_10298() /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), uint16], Tensor[(126), uint64]) */
}

def @func_341(%var_339: Tensor[(10, 4, 14), uint8], %var_340: Tensor[(22, 96), float64]) -> (Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) {
  %1030 = fn (%var_235: Tensor[(10, 4, 14), uint8], %var_248: Tensor[(22, 96), float64]) -> (Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) {
    %948 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %949 = cast(meta[relay.Constant][61] /* ty=Tensor[(22, 96), float64] */, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
    %950 = reshape(%948, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %951 = reshape(%949, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %952 = @func_79(%950, %951) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %953 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %954 = %952.0;
    %955 = cast(%954, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
    %956 = reshape(%953, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %957 = reshape(%955, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %958 = @func_79(%956, %957) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %959 = cast(%var_248, dtype="float32") /* ty=Tensor[(22, 96), float32] */;
    %960 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(22, 96), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %961 = cast(meta[relay.Constant][61] /* ty=Tensor[(22, 96), float64] */, dtype="float32") /* ty=Tensor[(22, 96), float32] */;
    %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %963 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %964 = cast(%var_248, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
    %965 = reshape(%963, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %966 = reshape(%964, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %967 = @func_79(%965, %966) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %968 = %967.0;
    %969 = cast(%968, dtype="bool") /* ty=Tensor[(12, 16, 11), bool] */;
    %970 = shape_of(%var_248, dtype="int32") /* ty=Tensor[(2), int32] */;
    %971 = cast(%var_248, dtype="bool") /* ty=Tensor[(22, 96), bool] */;
    %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %973 = cast(meta[relay.Constant][62] /* ty=Tensor[(10, 4, 14), uint8] */, dtype="uint8") /* ty=Tensor[(10, 4, 14), uint8] */;
    %974 = shape_of(%var_235, dtype="int32") /* ty=Tensor[(3), int32] */;
    %975 = cast(%var_235, dtype="uint8") /* ty=Tensor[(10, 4, 14), uint8] */;
    %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %977 = subtract(%975, %976) /* ty=Tensor[(10, 4, 14), uint8] */;
    %978 = cast(%977, dtype="float32") /* ty=Tensor[(10, 4, 14), float32] */;
    %979 = cast(meta[relay.Constant][63] /* ty=Tensor[(10, 4, 14), uint8] */, dtype="int32") /* ty=Tensor[(10, 4, 14), int32] */;
    %980 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(10, 4, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %981 = cast(meta[relay.Constant][62] /* ty=Tensor[(10, 4, 14), uint8] */, dtype="int32") /* ty=Tensor[(10, 4, 14), int32] */;
    %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %983 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %984 = mod(%961, %962) /* ty=Tensor[(22, 96), float32] */;
    %985 = cast(%984, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
    %986 = reshape(%983, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %987 = reshape(%985, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %988 = @func_79(%986, %987) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %989 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %990 = greater(%971, %972) /* ty=Tensor[(22, 96), bool] */;
    %991 = cast(%990, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
    %992 = reshape(%989, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %993 = reshape(%991, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %994 = @func_79(%992, %993) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %995 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %996 = %994.0;
    %997 = cast(%996, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
    %998 = reshape(%995, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %999 = reshape(%997, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %1000 = @func_79(%998, %999) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %1001 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %1002 = %1000.0;
    %1003 = cast(%1002, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
    %1004 = reshape(%1001, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %1005 = reshape(%1003, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %1006 = @func_79(%1004, %1005) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %1007 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %1008 = cast(%990, dtype="float64") /* ty=Tensor[(22, 96), float64] */;
    %1009 = reshape(%1007, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %1010 = reshape(%1008, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %1011 = @func_79(%1009, %1010) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %1012 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %1013 = %958.0;
    %1014 = cast(%1013, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
    %1015 = reshape(%1012, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %1016 = reshape(%1014, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %1017 = @func_79(%1015, %1016) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %1018 = cast(meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %1019 = %1017.0;
    %1020 = cast(%1019, dtype="float64") /* ty=Tensor[(12, 16, 11), float64] */;
    %1021 = reshape(%1018, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %1022 = reshape(%1020, newshape=[12, 16, 11]) /* ty=Tensor[(12, 16, 11), float64] */;
    %1023 = @func_79(%1021, %1022) /* ty=(Tensor[(12, 16, 11), float64],) */;
    %1024 = sinh(%978) /* ty=Tensor[(10, 4, 14), float32] */;
    %1025 = left_shift(%981, %982) /* ty=Tensor[(10, 4, 14), int32] */;
    %1026 = %988.0;
    %1027 = %1006.0;
    %1028 = %1011.0;
    %1029 = %1023.0;
    (%954, meta[relay.Constant][60] /* ty=Tensor[(176), float64] */, %1013, %984, %990, %1024, %1025, %1026, %996, %1002, %1027, %1028, %1019, %1029)
  };
  %1030(%var_339, %var_340) /* ty=(Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(12, 16, 11), float64], Tensor[(22, 96), float32], Tensor[(22, 96), bool], Tensor[(10, 4, 14), float32], Tensor[(10, 4, 14), int32], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64]) */
}

def @func_6763() -> Tensor[(10, 3, 6), float64] {
  @func_5442() /* ty=Tensor[(10, 3, 6), float64] */
}

def @func_9785(%var_9701: Tensor[(351), float32], %var_9702: Tensor[(162), float32], %var_9763: Tensor[(2100), uint16]) -> (Tensor[(264), float64], Tensor[(176), float64], Tensor[(351), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(5, 7, 7), float32], Tensor[(245), float32], Tensor[(10, 3, 6), uint16], Tensor[(162), float32], Tensor[(2100), uint16], Tensor[(200), uint32], Tensor[(3, 11, 16), float32]) {
  %1031 = @func_7687() /* ty=(Tensor[(126), uint64], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %1032 = %1031.2;
  %1033 = cast(%1032, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1034 = cast(%var_9701, dtype="float32") /* ty=Tensor[(351), float32] */;
  %1035 = cast(%var_9702, dtype="float32") /* ty=Tensor[(162), float32] */;
  %1036 = reshape(%1033, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %1037 = reshape(%1034, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %1038 = reshape(%1035, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %1039 = @func_7233(%1036, %1037, %1038) /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) */;
  %1040 = cast(%var_9702, dtype="float32") /* ty=Tensor[(162), float32] */;
  %1041 = reshape(%1040, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %1042 = @func_5893(%1041) /* ty=(Tensor[(1, 48), float64], Tensor[(351), float32], Tensor[(3, 117), float32], Tensor[(162), float32], Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32]) */;
  %1043 = cast(meta[relay.Constant][64] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %1044 = %1039.0;
  %1045 = cast(%1044, dtype="float64") /* ty=Tensor[(176), float64] */;
  %1046 = reshape(%1043, newshape=[900]) /* ty=Tensor[(900), float32] */;
  %1047 = reshape(%1045, newshape=[4, 44]) /* ty=Tensor[(4, 44), float64] */;
  %1048 = @func_9477(%1046, %1047) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(4, 44), float64], Tensor[(3, 2), float32]) */;
  %1049 = cast(meta[relay.Constant][65] /* ty=Tensor[(245), float32] */, dtype="float32") /* ty=Tensor[(245), float32] */;
  %1050 = reshape(%1049, newshape=[5, 7, 7]) /* ty=Tensor[(5, 7, 7), float32] */;
  %1051 = @func_4355(%1050) /* ty=(Tensor[(5, 7, 7), float32],) */;
  %1052 = @func_8472() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %1053 = %1042.4;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(1, 3, 2), float32] */;
  %1055 = cast(%var_9763, dtype="uint16") /* ty=Tensor[(2100), uint16] */;
  %1056 = cast(meta[relay.Constant][66] /* ty=Tensor[(200), uint32] */, dtype="uint32") /* ty=Tensor[(200), uint32] */;
  %1057 = reshape(%1054, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %1058 = reshape(%1055, newshape=[2100]) /* ty=Tensor[(2100), uint16] */;
  %1059 = reshape(%1056, newshape=[200]) /* ty=Tensor[(200), uint32] */;
  %1060 = @func_6334(%1057, %1058, %1059) /* ty=(Tensor[(176), float64], Tensor[(1, 3, 2), float32], Tensor[(6), float32], Tensor[(10, 3, 6), float64], Tensor[(117, 3), float32], Tensor[(162), float32], Tensor[(1, 200), uint32], Tensor[(2100), uint16], Tensor[(200), uint32]) */;
  %1061 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %1062 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), int32] */, dtype="int32") /* ty=Tensor[(528), int32] */;
  %1063 = reshape(%1061, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), int32] */;
  %1064 = reshape(%1062, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), int32] */;
  %1065 = @func_6720(%1063, %1064) /* ty=Tensor[(3, 11, 16), int32] */;
  %1066 = cast(%1065, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %1067 = sigmoid(%1066) /* ty=Tensor[(3, 11, 16), float32] */;
  %1068 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), int32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1069 = shape_of(%1067, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1070 = cast(%1067, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %1071 = dyn.reshape(%1068, %1069, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1072 = %1048.1;
  %1073 = %1051.0;
  %1074 = %1052.0;
  %1075 = %1060.5;
  %1076 = floor_mod(%1070, %1071) /* ty=Tensor[(3, 11, 16), float32] */;
  (%1032, %1044, %var_9701, %var_9702, %1053, %1072, meta[relay.Constant][64] /* ty=Tensor[(900), float32] */, %1073, meta[relay.Constant][65] /* ty=Tensor[(245), float32] */, %1074, %1075, %var_9763, meta[relay.Constant][66] /* ty=Tensor[(200), uint32] */, %1076)
}

def @func_5215(%var_5123: Tensor[(15, 5, 12), float64], %var_5124: Tensor[(15, 5, 12), float64], %var_5185: Tensor[(48, 1), float64]) -> (Tensor[(15, 5, 12), float64], Tensor[(15, 5, 12), uint64], Tensor[(10, 1, 9), int8], Tensor[(10, ?, 9), bool], Tensor[(48), float64], Tensor[(3, 10, 3), float32], Tensor[(48, 176), int8], Tensor[(560), uint8]) {
  %1077 = cast(%var_5124, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %1078 = shape_of(%var_5123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1079 = cast(%var_5123, dtype="float64") /* ty=Tensor[(15, 5, 12), float64] */;
  %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1081 = cast(%var_5123, dtype="uint64") /* ty=Tensor[(15, 5, 12), uint64] */;
  %1082 = shape_of(%var_5124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1083 = cast(%var_5124, dtype="uint64") /* ty=Tensor[(15, 5, 12), uint64] */;
  %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1085 = cast(meta[relay.Constant][68] /* ty=Tensor[(90), int8] */, dtype="int8") /* ty=Tensor[(90), int8] */;
  %1086 = reshape(%1085, newshape=[10, 1, 9]) /* ty=Tensor[(10, 1, 9), int8] */;
  %1087 = @func_3929(%1086) /* ty=Tensor[(10, 1, 9), int8] */;
  %1088 = cast(%1087, dtype="int8") /* ty=Tensor[(10, 1, 9), int8] */;
  %1089 = reshape(%1088, newshape=[10, 1, 9]) /* ty=Tensor[(10, 1, 9), int8] */;
  %1090 = cast(meta[relay.Constant][68] /* ty=Tensor[(90), int8] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %1091 = shape_of(%1087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1092 = cast(%1087, dtype="bool") /* ty=Tensor[(10, 1, 9), bool] */;
  %1093 = dyn.reshape(%1090, %1091, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1094 = cast(%var_5185, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %1095 = cast(meta[relay.Constant][69] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %1096 = reshape(%1094, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1097 = reshape(%1095, newshape=[1, 176]) /* ty=Tensor[(1, 176), float64] */;
  %1098 = @func_2294(%1096, %1097) /* ty=(Tensor[(14, 10, 3), float64], Tensor[(12, 16, 11), float64], Tensor[(48), float64], Tensor[(1, 176), float64]) */;
  %1099 = greater_equal(%1092, %1093) /* ty=Tensor[(10, ?, 9), bool] */;
  %1100 = cast(%1099, dtype="float32") /* ty=Tensor[(10, ?, 9), float32] */;
  %1101 = reshape(%1100, newshape=[3, 10, 3]) /* ty=Tensor[(3, 10, 3), float32] */;
  %1102 = @func_2388(%1101) /* ty=(Tensor[(3, 10, 3), float32], Tensor[(1, 3, 2), float32], Tensor[(6), float32]) */;
  %1103 = cast(meta[relay.Constant][69] /* ty=Tensor[(176), float64] */, dtype="int8") /* ty=Tensor[(176), int8] */;
  %1104 = cast(%var_5185, dtype="int8") /* ty=Tensor[(48, 1), int8] */;
  %1105 = cast(%var_5185, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %1106 = cast(meta[relay.Constant][69] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %1107 = reshape(%1105, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %1108 = reshape(%1106, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %1109 = @func_1458(%1107, %1108) /* ty=(Tensor[(2, 3, 8), int64], Tensor[(12, 16, 11), float64], Tensor[(176), float64], Tensor[(2112), float64], Tensor[(12, 16, 11), float64], Tensor[(12, 16, 11), float64], Tensor[(560), uint8]) */;
  %1110 = floor_mod(%1079, %1080) /* ty=Tensor[(15, 5, 12), float64] */;
  %1111 = bitwise_xor(%1083, %1084) /* ty=Tensor[(15, 5, 12), uint64] */;
  %1112 = @func_3929(%1089) /* ty=Tensor[(10, 1, 9), int8] */;
  %1113 = %1098.2;
  %1114 = %1102.0;
  %1115 = left_shift(%1103, %1104) /* ty=Tensor[(48, 176), int8] */;
  %1116 = %1109.6;
  (%1110, %1111, %1112, %1099, %1113, %1114, %1115, %1116)
}

def @func_10378() -> (Tensor[(210, 1), float64], Tensor[(10, 3, 6), uint64]) {
  %1117 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
  %1118 = cast(meta[relay.Constant][70] /* ty=Tensor[(210, 1), float64] */, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1119 = reshape(%1118, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1120 = @func_7096(%1119) /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(5, 6, 7), uint8], Tensor[(210), float64]) */;
  %1121 = %1120.0;
  %1122 = cast(%1121, dtype="uint64") /* ty=Tensor[(10, 3, 6), uint64] */;
  %1123 = shape_of(%1117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%1117, dtype="uint64") /* ty=Tensor[(10, 3, 6), uint64] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1126 = left_shift(%1124, %1125) /* ty=Tensor[(10, 3, 6), uint64] */;
  (meta[relay.Constant][70] /* ty=Tensor[(210, 1), float64] */, %1126)
}

def @func_9481(%var_9479: Tensor[(900), float32], %var_9480: Tensor[(4, 44), float64]) -> (Tensor[(10, 3, 6), float64], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(4, 44), float64], Tensor[(3, 2), float32]) {
  @func_9477(%var_9479, %var_9480) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(2, 3, 8), int64], Tensor[(900), float32], Tensor[(4, 44), float64], Tensor[(3, 2), float32]) */
}

def @func_6398(%var_6394: Tensor[(320, 1), float64], %var_6395: Tensor[(126), uint64], %var_6396: Tensor[(12, 4), float64], %var_6397: Tensor[(1, 351), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(16, 2, 10), float64], Tensor[(320, 1), float64], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(12, 4), float64], Tensor[(176), float64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) {
  %1146 = fn (%var_6366: Tensor[(320, 1), float64], %var_6369: Tensor[(126), uint64], %var_6370: Tensor[(12, 4), float64], %var_6388: Tensor[(1, 351), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(16, 2, 10), float64], Tensor[(320, 1), float64], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(12, 4), float64], Tensor[(176), float64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) {
    %1127 = cast(%var_6366, dtype="float64") /* ty=Tensor[(320, 1), float64] */;
    %1128 = reshape(%1127, newshape=[16, 2, 10]) /* ty=Tensor[(16, 2, 10), float64] */;
    %1129 = @func_710(%1128) /* ty=(Tensor[(16, 2, 10), float64],) */;
    %1130 = cast(%var_6369, dtype="uint64") /* ty=Tensor[(126), uint64] */;
    %1131 = cast(%var_6369, dtype="uint64") /* ty=Tensor[(126), uint64] */;
    %1132 = cast(%var_6370, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
    %1133 = cast(meta[relay.Constant][71] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %1134 = reshape(%1130, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
    %1135 = reshape(%1131, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), uint64] */;
    %1136 = reshape(%1132, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
    %1137 = reshape(%1133, newshape=[176]) /* ty=Tensor[(176), float64] */;
    %1138 = @func_4011(%1134, %1135, %1136, %1137) /* ty=(Tensor[(9, 2, 7), uint64], Tensor[(2, 3, 8), int64], Tensor[(1, 48), float64], Tensor[(176), float64]) */;
    %1139 = cast(%var_6388, dtype="float32") /* ty=Tensor[(1, 351), float32] */;
    %1140 = reshape(%1139, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %1141 = @func_5513(%1140) /* ty=(Tensor[(15, 6), float32], Tensor[(13, 9, 3), float32], Tensor[(351), float32]) */;
    %1142 = @func_6182() /* ty=Tensor[(10, 3, 6), float64] */;
    %1143 = %1129.0;
    %1144 = %1138.2;
    %1145 = %1141.1;
    (%1142, %1143, %var_6366, %1144, %var_6369, %var_6370, meta[relay.Constant][71] /* ty=Tensor[(176), float64] */, %1145, %var_6388)
  };
  %1146(%var_6394, %var_6395, %var_6396, %var_6397) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(16, 2, 10), float64], Tensor[(320, 1), float64], Tensor[(1, 48), float64], Tensor[(126), uint64], Tensor[(12, 4), float64], Tensor[(176), float64], Tensor[(13, 9, 3), float32], Tensor[(1, 351), float32]) */
}

def @func_12139() -> Tensor[(126), uint64] {
  %1147 = fn () -> Tensor[(126), uint64] {
    @func_7923() /* ty=Tensor[(126), uint64] */
  };
  %1147() /* ty=Tensor[(126), uint64] */
}

def @func_12320() -> Tensor[(10, 3, 6), float32] {
  %1148 = @func_8534() /* ty=(Tensor[(10, 3, 6), uint16],) */;
  %1149 = %1148.0;
  %1150 = cast(%1149, dtype="float32") /* ty=Tensor[(10, 3, 6), float32] */;
  acos(%1150) /* ty=Tensor[(10, 3, 6), float32] */
}

def @func_10182(%var_10178: Tensor[(560), uint8]) -> (Tensor[(126), uint64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) {
  %1151 = cast(%var_10178, dtype="uint8") /* ty=Tensor[(560), uint8] */;
  %1152 = cast(meta[relay.Constant][72] /* ty=Tensor[(2112), float64] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %1153 = reshape(%1151, newshape=[560]) /* ty=Tensor[(560), uint8] */;
  %1154 = reshape(%1152, newshape=[2112]) /* ty=Tensor[(2112), float64] */;
  %1155 = @func_5825(%1153, %1154) /* ty=(Tensor[(1, 3, 2), float32], Tensor[(5, 7, 8), float64], Tensor[(280), float64], Tensor[(560), uint8], Tensor[(2112), float64]) */;
  %1156 = @func_9169() /* ty=Tensor[(126), uint64] */;
  %1157 = %1155.2;
  (%1156, %1157, %var_10178, meta[relay.Constant][72] /* ty=Tensor[(2112), float64] */)
}

def @func_10909() -> Tensor[(10, 3, 6), float64] {
  %1158 = @func_10204() /* ty=(Tensor[(10, 3, 6), float64],) */;
  %1158.0
}

def @func_7581(%var_7577: Tensor[(264), float64], %var_7578: Tensor[(351), float32], %var_7579: Tensor[(162), float32], %var_7580: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float64]) {
  %1175 = fn (%var_7549: Tensor[(264), float64], %var_7550: Tensor[(351), float32], %var_7551: Tensor[(162), float32], %var_7559: Tensor[(162), float32]) -> (Tensor[(10, 3, 6), float64], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float64]) {
    %1159 = cast(%var_7549, dtype="float64") /* ty=Tensor[(264), float64] */;
    %1160 = cast(%var_7550, dtype="float32") /* ty=Tensor[(351), float32] */;
    %1161 = cast(%var_7551, dtype="float32") /* ty=Tensor[(162), float32] */;
    %1162 = reshape(%1159, newshape=[264]) /* ty=Tensor[(264), float64] */;
    %1163 = reshape(%1160, newshape=[351]) /* ty=Tensor[(351), float32] */;
    %1164 = reshape(%1161, newshape=[162]) /* ty=Tensor[(162), float32] */;
    %1165 = @func_7233(%1162, %1163, %1164) /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) */;
    %1166 = cast(%var_7551, dtype="float32") /* ty=Tensor[(162), float32] */;
    %1167 = acos(%1166) /* ty=Tensor[(162), float32] */;
    %1168 = cast(%var_7559, dtype="float64") /* ty=Tensor[(162), float64] */;
    %1169 = shape_of(%1167, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1170 = cast(%1167, dtype="float64") /* ty=Tensor[(162), float64] */;
    %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1172 = @func_5442() /* ty=Tensor[(10, 3, 6), float64] */;
    %1173 = %1165.2;
    %1174 = divide(%1170, %1171) /* ty=Tensor[(162), float64] */;
    (%1172, %1173, %var_7549, %var_7550, %1174)
  };
  %1175(%var_7577, %var_7578, %var_7579, %var_7580) /* ty=(Tensor[(10, 3, 6), float64], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float64]) */
}

def @func_9047() -> (Tensor[(10, 3, 6), uint16],) {
  @func_9045() /* ty=(Tensor[(10, 3, 6), uint16],) */
}

def @func_12954() -> (Tensor[(176), float64],) {
  %1177 = fn () -> (Tensor[(176), float64],) {
    %1176 = @func_10023() /* ty=Tensor[(176), float64] */;
    (%1176,)
  };
  %1177() /* ty=(Tensor[(176), float64],) */
}

def @func_10595(%var_10588: Tensor[(264), float64], %var_10589: Tensor[(351), float32], %var_10590: Tensor[(162), float32]) -> (Tensor[(15, 6), float32], Tensor[(176), float64], Tensor[(264), float64], Tensor[(351), float32], Tensor[(162), float32]) {
  %1178 = @func_5335() /* ty=(Tensor[(1, 3, 2), float32], Tensor[(15, 6), float32], Tensor[(10, 3, 6), uint16]) */;
  %1179 = cast(%var_10588, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1180 = cast(%var_10589, dtype="float32") /* ty=Tensor[(351), float32] */;
  %1181 = cast(%var_10590, dtype="float32") /* ty=Tensor[(162), float32] */;
  %1182 = reshape(%1179, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %1183 = reshape(%1180, newshape=[351]) /* ty=Tensor[(351), float32] */;
  %1184 = reshape(%1181, newshape=[162]) /* ty=Tensor[(162), float32] */;
  %1185 = @func_7233(%1182, %1183, %1184) /* ty=(Tensor[(176), float64], Tensor[(10, 3, 6), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(15, 6), float32], Tensor[(351), float32], Tensor[(162), float32]) */;
  %1186 = %1178.1;
  %1187 = %1185.0;
  (%1186, %1187, %var_10588, %var_10589, %var_10590)
}

def @func_12455() -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
  %1192 = fn () -> (Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) {
    %1188 = @func_7418() /* ty=(Tensor[(10, 3, 6), float64], Tensor[(10, 3, 6), uint16]) */;
    %1189 = @func_6656() /* ty=Tensor[(10, 3, 6), uint16] */;
    %1190 = @func_8109() /* ty=Tensor[(10, 3, 6), uint16] */;
    %1191 = %1188.1;
    (%1189, %1190, %1191)
  };
  %1192() /* ty=(Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16], Tensor[(10, 3, 6), uint16]) */
}

def @func_10024() -> Tensor[(176), float64] {
  %1196 = fn () -> Tensor[(176), float64] {
    %1193 = @func_6252() /* ty=(Tensor[(176), float64],) */;
    %1194 = %1193.0;
    %1195 = cast(%1194, dtype="float64") /* ty=Tensor[(176), float64] */;
    rsqrt(%1195) /* ty=Tensor[(176), float64] */
  };
  %1196() /* ty=Tensor[(176), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen600/build/output.py:3144: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen600/build/output.py", line 3149, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1008) tvmgen_default_fused_add_cast_greater_kernel0(signed char* __restrict__ T_greater, signed char* __restrict__ placeholder, double* __restrict__ placeholder1, double* __restrict__ placeholder2) {
  T_greater[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) < ((bool)(placeholder1[(((int)threadIdx.x))] + placeholder2[(((int)threadIdx.x))]))));
}

extern "C" __global__ void __launch_bounds__(1008) tvmgen_default_fused_cast_cast_reshape_floor_mod_kernel0(float* __restrict__ T_floor_mod, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_floor_mod[(((int)threadIdx.x))] = (((float)placeholder[(((int)threadIdx.x))]) - (floorf((((float)placeholder[(((int)threadIdx.x))]) / ((float)placeholder1[(((int)threadIdx.x))]))) * ((float)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_5449() -> (Tensor[(9, 4, 14), uint32],) {
  %0 = @func_4568() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %1 = %0.1;
  (%1,)
}

def @func_5573(%var_5557: Tensor[(2080), float64], %var_5558: Tensor[(90), float64]) -> (Tensor[(13, 16, 9), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90), float64]) {
  %2 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %3 = cast(%var_5557, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %4 = cast(%var_5558, dtype="float64") /* ty=Tensor[(90), float64] */;
  %5 = cast(%var_5557, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %6 = reshape(%3, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %7 = reshape(%4, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %8 = reshape(%5, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %9 = @func_1982(%6, %7, %8) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
  %10 = %2.1;
  %11 = %9.1;
  (%10, %11, %var_5557, %var_5558)
}

def @func_9109() -> Tensor[(13, 16, 9), float64] {
  %12 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %12.0
}

def @func_6807() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %13 = @func_6567() /* ty=Tensor[(9, 4, 14), float64] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 4, 14), float64] */, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%13, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %18 = maximum(%16, %17) /* ty=Tensor[(9, 4, 14), float32] */;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 4, 14), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %20 = shape_of(%18, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%18, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %23 = floor_mod(%21, %22) /* ty=Tensor[(9, 4, 14), float64] */;
  %24 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%23, %24)
}

def @func_10144() -> Tensor[(9, 4, 14), uint32] {
  %25 = @func_4568() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %25.1
}

def @func_9727() -> Tensor[(13, 16, 9), float64] {
  %26 = @func_4931() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) */;
  %26.0
}

def @func_10059(%var_10026: Tensor[(660), uint32], %var_10030: Tensor[(144), float64]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(660), uint32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64]) {
  %27 = @func_8067() /* ty=(Tensor[(176), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) */;
  %28 = cast(%var_10026, dtype="uint32") /* ty=Tensor[(660), uint32] */;
  %29 = reshape(%28, newshape=[660]) /* ty=Tensor[(660), uint32] */;
  %30 = @func_9248(%29) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(15, 11, 4), float32], Tensor[(44, 1), uint32], Tensor[(660), uint32]) */;
  %31 = cast(%var_10030, dtype="float64") /* ty=Tensor[(144), float64] */;
  %32 = reshape(%31, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %33 = @func_211(%32) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %34 = %27.2;
  %35 = %30.0;
  %36 = %33.2;
  %37 = @func_4991() /* ty=Tensor[(9, 4, 14), float64] */;
  (%34, %35, %var_10026, %36, %var_10030, %37)
}

def @func_1982(%var_1940: Tensor[(13, 16, 10), float64], %var_1974: Tensor[(90), float64], %var_1976: Tensor[(13, 16, 10), float64]) -> (Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) {
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %39 = reshape(%38, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %40 = @func_211(%39) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %41 = cast(%var_1974, dtype="float64") /* ty=Tensor[(90), float64] */;
  %42 = reshape(%41, newshape=[9, 10, 1]) /* ty=Tensor[(9, 10, 1), float64] */;
  %43 = cast(%var_1940, dtype="float64") /* ty=Tensor[(13, 16, 10), float64] */;
  %44 = sigmoid(%43) /* ty=Tensor[(13, 16, 10), float64] */;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(13, 16, 10), float64] */;
  %46 = log2(%45) /* ty=Tensor[(13, 16, 10), float64] */;
  %47 = cast(%var_1976, dtype="bool") /* ty=Tensor[(13, 16, 10), bool] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%46, dtype="bool") /* ty=Tensor[(13, 16, 10), bool] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %51 = %40.0;
  %52 = @func_940(%42) /* ty=Tensor[(9, 10, ?), int64] */;
  %53 = less_equal(%49, %50) /* ty=Tensor[(13, 16, 10), bool] */;
  (%51, meta[relay.Constant][1] /* ty=Tensor[(144), float64] */, %52, %var_1974, %53)
}

def @func_1914(%var_1894: Tensor[(2, 6, 11), float64]) -> Tensor[(2, 6, 11), float64] {
  %54 = cast(%var_1894, dtype="float64") /* ty=Tensor[(2, 6, 11), float64] */;
  log(%54) /* ty=Tensor[(2, 6, 11), float64] */
}

def @func_4237() -> Tensor[(13, 16, 9), float64] {
  %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 16, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
  log(%55) /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_11825() -> (Tensor[(9, 4, 14), uint32],) {
  %56 = @func_9892() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %57 = %56.0;
  (%57,)
}

def @func_4731(%var_4725: Tensor[(15, 10, 6), float64]) -> (Tensor[(15, 10, 6), float64], Tensor[(9, 4, 14), float64]) {
  %58 = cast(%var_4725, dtype="float64") /* ty=Tensor[(15, 10, 6), float64] */;
  %59 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %60 = sigmoid(%58) /* ty=Tensor[(15, 10, 6), float64] */;
  %61 = %59.0;
  (%60, %61)
}

def @func_7313() -> (Tensor[(9, 4, 14), float64],) {
  %62 = @func_6460() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %63 = %62.0;
  (%63,)
}

def @func_10554() -> Tensor[(?, 9, 2), bool] {
  %64 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %64.3
}

def @func_4270() -> (Tensor[(9, 4, 14), float32],) {
  %65 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %66 = cast(%65, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %67 = atanh(%66) /* ty=Tensor[(9, 4, 14), float32] */;
  (%67,)
}

def @func_11158(%var_11137: Tensor[(4, 520), float64], %var_11138: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(4, 520), float64], Tensor[(90), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %68 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %69 = @func_7579() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %70 = cast(%var_11137, dtype="float64") /* ty=Tensor[(4, 520), float64] */;
  %71 = cast(%var_11138, dtype="float64") /* ty=Tensor[(90), float64] */;
  %72 = reshape(%70, newshape=[2080]) /* ty=Tensor[(2080), float64] */;
  %73 = reshape(%71, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %74 = @func_5573(%72, %73) /* ty=(Tensor[(13, 16, 9), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90), float64]) */;
  %75 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %76 = %68.0;
  %77 = %69.0;
  %78 = %74.2;
  %79 = @func_10144() /* ty=Tensor[(9, 4, 14), uint32] */;
  %80 = %75.0;
  (%76, %77, %78, %var_11137, %var_11138, %79, %80)
}

def @func_12330(%var_12299: Tensor[(13, 7, 10), float64], %var_12319: Tensor[(18), float32]) -> (Tensor[(18), float32], Tensor[(18), float32], Tensor[(13, 7, 10), float32]) {
  %81 = cast(%var_12319, dtype="float32") /* ty=Tensor[(18), float32] */;
  %82 = reshape(%81, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %83 = @func_5722(%82) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(18), float64]) */;
  %84 = cast(%var_12299, dtype="float64") /* ty=Tensor[(13, 7, 10), float64] */;
  %85 = acosh(%84) /* ty=Tensor[(13, 7, 10), float64] */;
  %86 = cast(%var_12299, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %90 = %83.1;
  %91 = add(%88, %89) /* ty=Tensor[(13, 7, 10), float32] */;
  (%90, %var_12319, %91)
}

def @func_2245(%var_2234: Tensor[(11, 8, 2), float64]) -> (Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) {
  %92 = cast(%var_2234, dtype="float64") /* ty=Tensor[(11, 8, 2), float64] */;
  %93 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %94 = cast(meta[relay.Constant][3] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %95 = reshape(%93, newshape=[]) /* ty=bool */;
  %96 = reshape(%94, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %97 = @func_1260(%95, %96) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %98 = cosh(%92) /* ty=Tensor[(11, 8, 2), float64] */;
  %99 = %97.0;
  (%98, %99, False /* ty=bool */, meta[relay.Constant][3] /* ty=Tensor[(336), bool] */)
}

def @func_7996() -> (Tensor[(13, 16, 9), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64]) {
  %100 = @func_7732() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %101 = %100.0;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(13, 16, 9), float32] */;
  %103 = cast(%101, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
  %104 = @func_4991() /* ty=Tensor[(9, 4, 14), float64] */;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %106 = atan(%102) /* ty=Tensor[(13, 16, 9), float32] */;
  %107 = sqrt(%103) /* ty=Tensor[(13, 16, 9), float64] */;
  %108 = exp(%105) /* ty=Tensor[(9, 4, 14), float64] */;
  (%106, %107, %108)
}

def @func_12435() -> (Tensor[(9, 4, 14), float32],) {
  %109 = @func_8156() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float32]) */;
  %110 = %109.1;
  (%110,)
}

def @func_5128() -> Tensor[(9, 4, 14), uint32] {
  %111 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %111.0
}

def @func_5402() -> Tensor[(13, 16, 9), float64] {
  %112 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %112.1
}

def @func_13231() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float32]) {
  %113 = @func_10785() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %114 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %115 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
  %116 = %113.0;
  %117 = %114.0;
  (%115, %116, %117)
}

def @func_7292(%var_7279: Tensor[(6, 11, 14), uint32]) -> Tensor[(6, 11, 14), float64] {
  %118 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 11, 14), uint32] */, dtype="bool") /* ty=Tensor[(6, 11, 14), bool] */;
  %119 = shape_of(%var_7279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_7279, dtype="bool") /* ty=Tensor[(6, 11, 14), bool] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %122 = not_equal(%120, %121) /* ty=Tensor[(6, 11, 14), bool] */;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(6, 11, 14), float64] */;
  sin(%123) /* ty=Tensor[(6, 11, 14), float64] */
}

def @func_10493() -> (Tensor[(9, 4, 14), float64],) {
  %124 = @func_6460() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %125 = %124.0;
  (%125,)
}

def @func_6423() -> (Tensor[(13, 16, 9), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(16, 2, 15), bool]) {
  %126 = cast(meta[relay.Constant][5] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %127 = reshape(%126, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %128 = @func_107(%127) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %129 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %130 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
  %131 = %128.0;
  %132 = %129.1;
  (%130, %131, meta[relay.Constant][5] /* ty=Tensor[(18), float32] */, %132)
}

def @func_11284(%var_11205: Tensor[(90), float64], %var_11255: Tensor[(13, 16, 9), float64], %var_11270: Tensor[(9, 10, 13), int64]) -> (Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(14, 10, 13), float64], Tensor[(1820), int64], Tensor[(13, 16, 9), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 10, 13), int16]) {
  %133 = cast(meta[relay.Constant][6] /* ty=Tensor[(1820), int64] */, dtype="int64") /* ty=Tensor[(1820), int64] */;
  %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(1820), int64] */, dtype="int64") /* ty=Tensor[(1820), int64] */;
  %135 = reshape(%133, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), int64] */;
  %136 = reshape(%134, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), int64] */;
  %137 = @func_8633(%135, %136) /* ty=(Tensor[(14, 10, 13), bool], Tensor[(14, 10, 13), bool], Tensor[(33, 4), float64], bool, Tensor[(480), float64], Tensor[(9, 4, 14), uint32], Tensor[(14, 10, 13), float64]) */;
  %138 = @func_11055() /* ty=Tensor[(13, 16, 9), float64] */;
  %139 = cast(%var_11255, dtype="float32") /* ty=Tensor[(13, 16, 9), float32] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="float32") /* ty=Tensor[(13, 16, 9), float32] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %143 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %144 = cast(%var_11205, dtype="float64") /* ty=Tensor[(90), float64] */;
  %145 = reshape(%144, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %146 = @func_6308(%145) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64]) */;
  %147 = %146.1;
  %148 = cast(%147, dtype="int16") /* ty=Tensor[(9, 10, ?), int16] */;
  %149 = cast(%var_11270, dtype="int16") /* ty=Tensor[(9, 10, 13), int16] */;
  %150 = @func_6179() /* ty=Tensor[(9, 4, 14), float64] */;
  %151 = %137.6;
  %152 = divide(%141, %142) /* ty=Tensor[(13, 16, 9), float32] */;
  %153 = %143.0;
  %154 = bitwise_xor(%148, %149) /* ty=Tensor[(9, 10, 13), int16] */;
  (%150, %var_11205, %151, meta[relay.Constant][6] /* ty=Tensor[(1820), int64] */, %152, %153, %154)
}

def @func_12289(%var_12278: Tensor[(3, 10, 12), bool], %var_12279: Tensor[(3, 10, 12), bool]) -> (Tensor[(3, 10, 12), bool],) {
  %155 = cast(%var_12279, dtype="bool") /* ty=Tensor[(3, 10, 12), bool] */;
  %156 = shape_of(%var_12278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%var_12278, dtype="bool") /* ty=Tensor[(3, 10, 12), bool] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %159 = logical_and(%157, %158) /* ty=Tensor[(3, 10, 12), bool] */;
  (%159,)
}

def @func_6036() -> (Tensor[(9, 4, 14), float64],) {
  %160 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %161 = %160.0;
  (%161,)
}

def @func_12885(%var_12843: Tensor[(90), float64], %var_12844: Tensor[(1872), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(1820), int64], Tensor[(90), float64], Tensor[(1872), float64], Tensor[(1170), int64]) {
  %162 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %163 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %164 = cast(%var_12843, dtype="float64") /* ty=Tensor[(90), float64] */;
  %165 = cast(%var_12844, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %166 = cast(meta[relay.Constant][7] /* ty=Tensor[(1170), int64] */, dtype="int64") /* ty=Tensor[(1170), int64] */;
  %167 = reshape(%164, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %168 = reshape(%165, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %169 = reshape(%166, newshape=[9, 10, 13]) /* ty=Tensor[(9, 10, 13), int64] */;
  %170 = @func_11284(%167, %168, %169) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(14, 10, 13), float64], Tensor[(1820), int64], Tensor[(13, 16, 9), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 10, 13), int16]) */;
  %171 = %162.0;
  %172 = %163.0;
  %173 = @func_10865() /* ty=Tensor[(9, 4, 14), uint32] */;
  %174 = %170.3;
  (%171, %172, %173, %174, %var_12843, %var_12844, meta[relay.Constant][7] /* ty=Tensor[(1170), int64] */)
}

def @func_9228() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %175 = @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %176 = @func_8067() /* ty=(Tensor[(176), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) */;
  %177 = %175.1;
  %178 = %176.1;
  (%177, %178)
}

def @func_107(%var_74: Tensor[(1, 9, 2), float32]) -> (Tensor[(?, 9, 2), bool],) {
  %179 = cast(%var_74, dtype="float32") /* ty=Tensor[(1, 9, 2), float32] */;
  %180 = sinh(%179) /* ty=Tensor[(1, 9, 2), float32] */;
  %181 = cast(%180, dtype="bool") /* ty=Tensor[(1, 9, 2), bool] */;
  %182 = shape_of(%var_74, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%var_74, dtype="bool") /* ty=Tensor[(1, 9, 2), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %185 = logical_or(%183, %184) /* ty=Tensor[(?, 9, 2), bool] */;
  (%185,)
}

def @func_4698(%var_4620: Tensor[(13, 13, 15), int16], %var_4637: Tensor[(432), int32], %var_4638: Tensor[(480), float64], %var_4645: Tensor[(144), float64]) -> (Tensor[(13, 13, 15), int16], Tensor[(432), int32], Tensor[(480), float64], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), float64], Tensor[(2, 5, 5), bool], Tensor[(5, 10), float64]) {
  %186 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 1, 15), int16] */, dtype="int16") /* ty=Tensor[(13, 1, 15), int16] */;
  %187 = cast(%var_4620, dtype="int16") /* ty=Tensor[(13, 13, 15), int16] */;
  %188 = cast(%var_4645, dtype="float64") /* ty=Tensor[(144), float64] */;
  %189 = reshape(%188, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %190 = @func_211(%189) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %191 = cast(%var_4637, dtype="int32") /* ty=Tensor[(432), int32] */;
  %192 = cast(%var_4638, dtype="float64") /* ty=Tensor[(480), float64] */;
  %193 = reshape(%191, newshape=[432]) /* ty=Tensor[(432), int32] */;
  %194 = reshape(%192, newshape=[4, 120]) /* ty=Tensor[(4, 120), float64] */;
  %195 = @func_4352(%193, %194) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(336), bool], int32, Tensor[(432), int32], Tensor[(192), int8], Tensor[(16, 2, 15), bool], Tensor[(4, 120), float64], Tensor[(3, 12, 4), float64]) */;
  %196 = %195.0;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %198 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 10), float64] */;
  %199 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 10), float64] */;
  %200 = reshape(%198, newshape=[2, 5, 5]) /* ty=Tensor[(2, 5, 5), float64] */;
  %201 = reshape(%199, newshape=[2, 5, 5]) /* ty=Tensor[(2, 5, 5), float64] */;
  %202 = @func_2265(%200, %201) /* ty=(Tensor[(2, 5, 5), bool],) */;
  %203 = minimum(%186, %187) /* ty=Tensor[(13, 13, 15), int16] */;
  %204 = %190.2;
  %205 = sin(%197) /* ty=Tensor[(9, 4, 14), float32] */;
  %206 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %207 = %202.0;
  (%203, %var_4637, %var_4638, %204, %var_4645, %205, %206, %207, meta[relay.Constant][9] /* ty=Tensor[(5, 10), float64] */)
}

def @func_5604() -> (Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
  %208 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %209 = cast(meta[relay.Constant][10] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %210 = reshape(%209, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %211 = @func_107(%210) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %212 = %208.2;
  %213 = %211.0;
  (%212, %213, meta[relay.Constant][10] /* ty=Tensor[(18), float32] */)
}

def @func_9892() -> (Tensor[(9, 4, 14), uint32],) {
  %214 = @func_7095() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %215 = %214.0;
  (%215,)
}

def @func_9007(%var_9001: Tensor[(13, 11, 8), uint16], %var_9002: Tensor[(13, 11, 8), uint16]) -> Tensor[(13, 11, 8), uint16] {
  %216 = cast(%var_9002, dtype="uint16") /* ty=Tensor[(13, 11, 8), uint16] */;
  %217 = shape_of(%var_9001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%var_9001, dtype="uint16") /* ty=Tensor[(13, 11, 8), uint16] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  minimum(%218, %219) /* ty=Tensor[(13, 11, 8), uint16] */
}

def @func_4352(%var_4331: Tensor[(432), int32], %var_4337: Tensor[(4, 120), float64]) -> (Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(336), bool], int32, Tensor[(432), int32], Tensor[(192), int8], Tensor[(16, 2, 15), bool], Tensor[(4, 120), float64], Tensor[(3, 12, 4), float64]) {
  %220 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %221 = cast(meta[relay.Constant][11] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %222 = reshape(%221, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %223 = @func_211(%222) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %224 = %223.2;
  %225 = cast(%224, dtype="float32") /* ty=Tensor[(18), float32] */;
  %226 = reshape(%225, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %227 = @func_107(%226) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %228 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %229 = cast(%var_4331, dtype="int32") /* ty=Tensor[(432), int32] */;
  %230 = cast(meta[relay.Constant][12] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %231 = cast(meta[relay.Constant][11] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %232 = reshape(%228, newshape=[]) /* ty=int32 */;
  %233 = reshape(%229, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int32] */;
  %234 = reshape(%230, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %235 = reshape(%231, newshape=[8, 18]) /* ty=Tensor[(8, 18), float64] */;
  %236 = @func_3701(%232, %233, %234, %235) /* ty=(Tensor[(9, 12, 4), int32], Tensor[(13, 16, 10), bool], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(16, 2, 15), bool], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 12, 4), bool], Tensor[(16, 2, 15), bool], Tensor[(?, 9, 2), bool], Tensor[(8, 18), float64]) */;
  %237 = cast(%var_4337, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %238 = reshape(%237, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %239 = cast(7 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %240 = %236.6;
  %241 = cast(%240, dtype="bool") /* ty=Tensor[(336), bool] */;
  %242 = reshape(%239, newshape=[]) /* ty=bool */;
  %243 = reshape(%241, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %244 = @func_1260(%242, %243) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %245 = %220.0;
  %246 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %247 = %227.0;
  %248 = @func_1457(%238) /* ty=Tensor[(16, 2, 15), bool] */;
  %249 = %244.1;
  (%245, %224, meta[relay.Constant][11] /* ty=Tensor[(144), float64] */, %246, %247, %240, 7 /* ty=int32 */, %var_4331, meta[relay.Constant][12] /* ty=Tensor[(192), int8] */, %248, %var_4337, %249)
}

def @func_12267(%var_12259: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(9, 4, 14), uint32]) {
  %250 = @func_8456() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %251 = cast(%var_12259, dtype="float32") /* ty=Tensor[(18), float32] */;
  %252 = reshape(%251, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %253 = @func_6964(%252) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(18), float32]) */;
  %254 = %250.0;
  %255 = %253.0;
  %256 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%254, %255, %var_12259, %256)
}

def @func_12521(%var_12503: Tensor[(2, 13, 15), uint16]) -> (Tensor[(2, 13, 15), uint16], Tensor[(2, 13, 15), float32], Tensor[(9, 4, 14), float64]) {
  %257 = cast(%var_12503, dtype="uint16") /* ty=Tensor[(2, 13, 15), uint16] */;
  %258 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(2, 13, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 13, 15), uint16] */, dtype="uint16") /* ty=Tensor[(2, 13, 15), uint16] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %261 = cast(%var_12503, dtype="float32") /* ty=Tensor[(2, 13, 15), float32] */;
  %262 = @func_7579() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %263 = maximum(%259, %260) /* ty=Tensor[(2, 13, 15), uint16] */;
  %264 = log10(%261) /* ty=Tensor[(2, 13, 15), float32] */;
  %265 = %262.0;
  (%263, %264, %265)
}

def @func_12960() -> Tensor[(9, 4, 14), uint32] {
  %266 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %266.1
}

def @func_8649() -> Tensor[(9, 4, 14), float64] {
  @func_4052() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_9407() -> (Tensor[(9, 4, 14), float64], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64]) {
  %267 = cast(meta[relay.Constant][14] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %268 = reshape(%267, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %269 = @func_6924(%268) /* ty=(Tensor[(13, 16, 9), uint64],) */;
  %270 = @func_5604() /* ty=(Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %271 = @func_9057() /* ty=Tensor[(9, 4, 14), float64] */;
  %272 = %269.0;
  %273 = %270.1;
  %274 = @func_9169() /* ty=Tensor[(9, 4, 14), float64] */;
  (%271, %272, meta[relay.Constant][14] /* ty=Tensor[(1872), float64] */, %273, %274)
}

def @func_4814() -> (Tensor[(9, 4, 14), uint32],) {
  %275 = @func_4568() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %276 = %275.1;
  (%276,)
}

def @func_7787() -> (Tensor[(9, 4, 14), uint32],) {
  %277 = @func_7425() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(?, 9, 2), float64]) */;
  %278 = %277.1;
  (%278,)
}

def @func_8803(%var_8735: Tensor[(11, 12, 8), float64], %var_8768: Tensor[(2080), float64], %var_8769: Tensor[(6, 3), float32], %var_8770: Tensor[(432), int32], %var_8772: Tensor[(2535), int16]) -> (Tensor[(9, 4, 14), uint32], Tensor[(90), float64], Tensor[(2080), float64], Tensor[(6, 3), float32], Tensor[(432), int32], Tensor[(4, 120), float64], Tensor[(2535), int16], Tensor[(?, 9, 2), bool], Tensor[(11, 12, 8), uint32]) {
  %279 = @func_8532() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %280 = %279.1;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %282 = cast(%var_8768, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %283 = cast(%var_8769, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %284 = cast(%var_8770, dtype="int32") /* ty=Tensor[(432), int32] */;
  %285 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 120), float64] */, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %286 = cast(%var_8772, dtype="int16") /* ty=Tensor[(2535), int16] */;
  %287 = reshape(%281, newshape=[9, 4, 14]) /* ty=Tensor[(9, 4, 14), float64] */;
  %288 = reshape(%282, newshape=[2080]) /* ty=Tensor[(2080), float64] */;
  %289 = reshape(%283, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %290 = reshape(%284, newshape=[432]) /* ty=Tensor[(432), int32] */;
  %291 = reshape(%285, newshape=[2, 240]) /* ty=Tensor[(2, 240), float64] */;
  %292 = reshape(%286, newshape=[2535]) /* ty=Tensor[(2535), int16] */;
  %293 = @func_6259(%287, %288, %289, %290, %291, %292) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(176), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 5, 5), bool], Tensor[(432), int32], Tensor[(2, 240), float64], Tensor[(2, 72), float64], Tensor[(2535), uint8], Tensor[(13, 16, 10), float32], Tensor[(13, 16, 9), float64]) */;
  %294 = cast(%var_8769, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %295 = reshape(%294, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %296 = @func_107(%295) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %297 = cast(%var_8735, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %298 = tan(%297) /* ty=Tensor[(11, 12, 8), float64] */;
  %299 = cast(%var_8735, dtype="uint32") /* ty=Tensor[(11, 12, 8), uint32] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%298, dtype="uint32") /* ty=Tensor[(11, 12, 8), uint32] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %303 = %293.4;
  %304 = %296.0;
  %305 = maximum(%301, %302) /* ty=Tensor[(11, 12, 8), uint32] */;
  (%280, %303, %var_8768, %var_8769, %var_8770, meta[relay.Constant][15] /* ty=Tensor[(4, 120), float64] */, %var_8772, %304, %305)
}

def @func_4418() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %306 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %307 = %306.0;
  %308 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %309 = %308.0;
  %310 = cast(%309, dtype="uint32") /* ty=Tensor[(9, 4, 14), uint32] */;
  %311 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%307, dtype="uint32") /* ty=Tensor[(9, 4, 14), uint32] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %314 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %315 = right_shift(%312, %313) /* ty=Tensor[(9, 4, 14), uint32] */;
  (%314, %315)
}

def @func_11421() -> (Tensor[(9, 4, 14), float32],) {
  %316 = @func_7313() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %317 = %316.0;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %319 = acosh(%318) /* ty=Tensor[(9, 4, 14), float32] */;
  (%319,)
}

def @func_4170(%var_4141: bool, %var_4149: Tensor[(480), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(144), float64], bool, Tensor[(336), bool], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(2, 6, 11), float64], Tensor[(3, 12, 4), float64], Tensor[(33, 4), float64], bool, Tensor[(176), float64]) {
  %320 = cast(%var_4141, dtype="bool") /* ty=bool */;
  %321 = cast(meta[relay.Constant][16] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %322 = reshape(%320, newshape=[]) /* ty=bool */;
  %323 = reshape(%321, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %324 = @func_1260(%322, %323) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %325 = cast(%var_4149, dtype="float64") /* ty=Tensor[(480), float64] */;
  %326 = reshape(%325, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %327 = cast(meta[relay.Constant][17] /* ty=Tensor[(33, 4), float64] */, dtype="float64") /* ty=Tensor[(33, 4), float64] */;
  %328 = reshape(%327, newshape=[2, 6, 11]) /* ty=Tensor[(2, 6, 11), float64] */;
  %329 = cast(%var_4141, dtype="bool") /* ty=bool */;
  %330 = cast(meta[relay.Constant][16] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %331 = reshape(%329, newshape=[]) /* ty=bool */;
  %332 = reshape(%330, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %333 = @func_1260(%331, %332) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %334 = cast(meta[relay.Constant][17] /* ty=Tensor[(33, 4), float64] */, dtype="float64") /* ty=Tensor[(33, 4), float64] */;
  %335 = cast(meta[relay.Constant][18] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %336 = reshape(%335, newshape=[11, 8, 2]) /* ty=Tensor[(11, 8, 2), float64] */;
  %337 = @func_2245(%336) /* ty=(Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) */;
  %338 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %339 = %324.2;
  %340 = @func_1457(%326) /* ty=Tensor[(16, 2, 15), bool] */;
  %341 = @func_1914(%328) /* ty=Tensor[(2, 6, 11), float64] */;
  %342 = %333.3;
  %343 = exp(%334) /* ty=Tensor[(33, 4), float64] */;
  %344 = %337.2;
  (%338, %339, %var_4141, meta[relay.Constant][16] /* ty=Tensor[(336), bool] */, %340, %var_4149, %341, %342, %343, %344, meta[relay.Constant][18] /* ty=Tensor[(176), float64] */)
}

def @func_7464() -> Tensor[(9, 4, 14), float64] {
  %345 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %345.0
}

def @func_6179() -> Tensor[(9, 4, 14), float64] {
  %346 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %346.0
}

def @func_9314() -> (Tensor[(?, 9, 2), bool],) {
  %347 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %348 = %347.3;
  (%348,)
}

def @func_5376(%var_5329: Tensor[(16, 15, 4), float64], %var_5360: int32, %var_5361: Tensor[(432), int32], %var_5362: Tensor[(96, 2), int8]) -> (Tensor[(16, 15, 4), int64], Tensor[(8, 18), float64], int32, Tensor[(432), int32], Tensor[(96, 2), int8], Tensor[(4, 36), float64]) {
  %349 = cast(%var_5329, dtype="float64") /* ty=Tensor[(16, 15, 4), float64] */;
  %350 = acosh(%349) /* ty=Tensor[(16, 15, 4), float64] */;
  %351 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 15, 4), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 4), bool] */;
  %352 = shape_of(%350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%350, dtype="bool") /* ty=Tensor[(16, 15, 4), bool] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %355 = greater(%353, %354) /* ty=Tensor[(16, 15, 4), bool] */;
  %356 = cast(%355, dtype="int64") /* ty=Tensor[(16, 15, 4), int64] */;
  %357 = shape_of(%var_5329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%var_5329, dtype="int64") /* ty=Tensor[(16, 15, 4), int64] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %360 = cast(%var_5360, dtype="int32") /* ty=int32 */;
  %361 = cast(%var_5361, dtype="int32") /* ty=Tensor[(432), int32] */;
  %362 = cast(%var_5362, dtype="int8") /* ty=Tensor[(96, 2), int8] */;
  %363 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %364 = reshape(%360, newshape=[]) /* ty=int32 */;
  %365 = reshape(%361, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int32] */;
  %366 = reshape(%362, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %367 = reshape(%363, newshape=[8, 18]) /* ty=Tensor[(8, 18), float64] */;
  %368 = @func_3701(%364, %365, %366, %367) /* ty=(Tensor[(9, 12, 4), int32], Tensor[(13, 16, 10), bool], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(16, 2, 15), bool], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 12, 4), bool], Tensor[(16, 2, 15), bool], Tensor[(?, 9, 2), bool], Tensor[(8, 18), float64]) */;
  %369 = bitwise_and(%358, %359) /* ty=Tensor[(16, 15, 4), int64] */;
  %370 = %368.10;
  (%369, %370, %var_5360, %var_5361, %var_5362, meta[relay.Constant][20] /* ty=Tensor[(4, 36), float64] */)
}

def @func_12606() -> (Tensor[(13, 16, 9), float32],) {
  %371 = @func_7996() /* ty=(Tensor[(13, 16, 9), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64]) */;
  %372 = %371.0;
  (%372,)
}

def @func_885(%var_869: Tensor[(2, 10, 13), float32]) -> (Tensor[(2, 10, 13), float32],) {
  %373 = cast(%var_869, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %374 = exp(%373) /* ty=Tensor[(2, 10, 13), float32] */;
  (%374,)
}

def @func_6128() -> (Tensor[(9, 4, 14), float64],) {
  %375 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %376 = %375.0;
  (%376,)
}

def @func_12692() -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool]) {
  %377 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %378 = @func_12365() /* ty=(Tensor[(?, 9, 2), bool],) */;
  %379 = %377.0;
  %380 = %378.0;
  (%379, %380)
}

def @func_12952() -> (Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), uint32], Tensor[(14, 8, 9), bool], Tensor[(112), int16], Tensor[(1008), int16]) {
  %381 = @func_11421() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %382 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %383 = cast(meta[relay.Constant][21] /* ty=Tensor[(112), int16] */, dtype="int16") /* ty=Tensor[(112), int16] */;
  %384 = cast(meta[relay.Constant][22] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %385 = cast(meta[relay.Constant][22] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %386 = reshape(%383, newshape=[14, 8, 1]) /* ty=Tensor[(14, 8, 1), int16] */;
  %387 = reshape(%384, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), int16] */;
  %388 = reshape(%385, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), int16] */;
  %389 = @func_5765(%386, %387, %388) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(14, 8, 9), uint8]) */;
  %390 = %381.0;
  %391 = %382.0;
  %392 = %389.0;
  (%390, %391, %392, meta[relay.Constant][21] /* ty=Tensor[(112), int16] */, meta[relay.Constant][22] /* ty=Tensor[(1008), int16] */)
}

def @func_7553(%var_7521: Tensor[(8, 288), bool]) -> (Tensor[(9, 4, 14), float64], Tensor[(2, 10, 13), float32], Tensor[(8, 288), bool], Tensor[(9, 4, 14), float64]) {
  %393 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %394 = %393.0;
  %395 = cast(%394, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %396 = cast(%var_7521, dtype="bool") /* ty=Tensor[(8, 288), bool] */;
  %397 = cast(%var_7521, dtype="bool") /* ty=Tensor[(8, 288), bool] */;
  %398 = cast(%var_7521, dtype="bool") /* ty=Tensor[(8, 288), bool] */;
  %399 = reshape(%396, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
  %400 = reshape(%397, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
  %401 = reshape(%398, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
  %402 = @func_1309(%399, %400, %401) /* ty=(Tensor[(9, 16, 16), bool], Tensor[(2, 10, 13), float32], Tensor[(1, 260), float32], Tensor[(9, 16, 16), int64]) */;
  %403 = sinh(%395) /* ty=Tensor[(9, 4, 14), float64] */;
  %404 = %402.1;
  %405 = @func_6832() /* ty=Tensor[(9, 4, 14), float64] */;
  (%403, %404, %var_7521, %405)
}

def @func_211(%var_187: Tensor[(3, 12, 4), float64]) -> (Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
  %406 = cast(%var_187, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %407 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(3, 12, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %410 = cast(meta[relay.Constant][24] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %411 = reshape(%410, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %412 = @func_107(%411) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %413 = subtract(%408, %409) /* ty=Tensor[(3, 12, 4), float64] */;
  %414 = %412.0;
  (%413, %414, meta[relay.Constant][24] /* ty=Tensor[(18), float32] */)
}

def @func_4512() -> (Tensor[(9, 4, 14), float64],) {
  %415 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  (%415,)
}

def @func_13170(%var_13146: Tensor[(224), bool]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64], Tensor[(7, 16, 2), bool], Tensor[(224), bool]) {
  %416 = @func_11760() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90, 1), float64], Tensor[(9, 4, 14), uint32]) */;
  %417 = cast(%var_13146, dtype="bool") /* ty=Tensor[(224), bool] */;
  %418 = reshape(%417, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), bool] */;
  %419 = %416.4;
  %420 = @func_6482() /* ty=Tensor[(9, 4, 14), float64] */;
  %421 = @func_4454(%418) /* ty=Tensor[(7, 16, 2), bool] */;
  (%419, %420, %421, %var_13146)
}

def @func_4991() -> Tensor[(9, 4, 14), float64] {
  %422 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %423 = %422.0;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  log10(%424) /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_8633(%var_8589: Tensor[(14, 10, 13), int64], %var_8590: Tensor[(14, 10, 13), int64]) -> (Tensor[(14, 10, 13), bool], Tensor[(14, 10, 13), bool], Tensor[(33, 4), float64], bool, Tensor[(480), float64], Tensor[(9, 4, 14), uint32], Tensor[(14, 10, 13), float64]) {
  %425 = cast(%var_8590, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %426 = shape_of(%var_8589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%var_8589, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %429 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 10, 13), int64] */, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %430 = shape_of(%var_8590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_8590, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %433 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %434 = cast(meta[relay.Constant][26] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %435 = reshape(%433, newshape=[]) /* ty=bool */;
  %436 = reshape(%434, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %437 = @func_4170(%435, %436) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(144), float64], bool, Tensor[(336), bool], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(2, 6, 11), float64], Tensor[(3, 12, 4), float64], Tensor[(33, 4), float64], bool, Tensor[(176), float64]) */;
  %438 = cast(%var_8589, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %439 = less(%427, %428) /* ty=Tensor[(14, 10, 13), bool] */;
  %440 = not_equal(%431, %432) /* ty=Tensor[(14, 10, 13), bool] */;
  %441 = %437.8;
  %442 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
  %443 = acosh(%438) /* ty=Tensor[(14, 10, 13), float64] */;
  (%439, %440, %441, False /* ty=bool */, meta[relay.Constant][26] /* ty=Tensor[(480), float64] */, %442, %443)
}

def @func_6504() -> (Tensor[(176), float64],) {
  %444 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %445 = %444.2;
  (%445,)
}

def @func_7095() -> (Tensor[(9, 4, 14), uint32],) {
  %446 = @func_6689() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %447 = %446.0;
  (%447,)
}

def @func_1260(%var_1231: bool, %var_1232: Tensor[(2, 12, 14), bool]) -> (Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) {
  %448 = cast(%var_1231, dtype="bool") /* ty=bool */;
  %449 = cast(%var_1232, dtype="bool") /* ty=Tensor[(2, 12, 14), bool] */;
  %450 = cast(meta[relay.Constant][27] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %451 = reshape(%450, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %452 = @func_211(%451) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %453 = %452.0;
  %454 = cast(%453, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %455 = reshape(%454, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %456 = @func_211(%455) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %457 = logical_or(%448, %449) /* ty=Tensor[(2, 12, 14), bool] */;
  %458 = %456.0;
  (%457, %453, meta[relay.Constant][27] /* ty=Tensor[(144), float64] */, %458)
}

def @func_7043(%var_7030: Tensor[(2, 9, 2), bool]) -> (Tensor[(2, 9, 2), bool],) {
  %459 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %460 = %459.3;
  %461 = cast(%460, dtype="bool") /* ty=Tensor[(?, 9, 2), bool] */;
  %462 = cast(%var_7030, dtype="bool") /* ty=Tensor[(2, 9, 2), bool] */;
  %463 = equal(%461, %462) /* ty=Tensor[(2, 9, 2), bool] */;
  (%463,)
}

def @func_12417() -> Tensor[(9, 4, 14), float64] {
  %464 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %464.0
}

def @func_5826() -> Tensor[(9, 4, 14), float64] {
  %465 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %465.0
}

def @func_8067() -> (Tensor[(176), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) {
  %466 = @func_6504() /* ty=(Tensor[(176), float64],) */;
  %467 = @func_7006() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %468 = @func_5477() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64]) */;
  %469 = %466.0;
  %470 = %467.0;
  %471 = @func_5788() /* ty=Tensor[(9, 4, 14), uint32] */;
  %472 = %468.1;
  (%469, %470, %471, %472)
}

def @func_6924(%var_6915: Tensor[(13, 16, 9), float64]) -> (Tensor[(13, 16, 9), uint64],) {
  %473 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %474 = %473.0;
  %475 = cast(%var_6915, dtype="uint64") /* ty=Tensor[(13, 16, 9), uint64] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%474, dtype="uint64") /* ty=Tensor[(13, 16, 9), uint64] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %479 = right_shift(%477, %478) /* ty=Tensor[(13, 16, 9), uint64] */;
  (%479,)
}

def @func_2214(%var_2149: Tensor[(4, 4, 12), int8], %var_2208: Tensor[(336), bool]) -> (Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(4, 4, 12), int16], Tensor[(3, 12, 4), float64], Tensor[(336), bool]) {
  %480 = cast(meta[relay.Constant][28] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %481 = reshape(%480, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %482 = cast(meta[relay.Constant][29] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %483 = cast(%var_2149, dtype="int8") /* ty=Tensor[(4, 4, 12), int8] */;
  %484 = minimum(%482, %483) /* ty=Tensor[(4, 4, 12), int8] */;
  %485 = cast(%484, dtype="uint8") /* ty=Tensor[(4, 4, 12), uint8] */;
  %486 = cast(meta[relay.Constant][29] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %487 = left_shift(%485, %486) /* ty=Tensor[(4, 4, 12), uint8] */;
  %488 = cast(%484, dtype="int16") /* ty=Tensor[(4, 4, 12), int16] */;
  %489 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%487, dtype="int16") /* ty=Tensor[(4, 4, 12), int16] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %492 = cast(meta[relay.Constant][29] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %493 = cast(%var_2208, dtype="bool") /* ty=Tensor[(336), bool] */;
  %494 = reshape(%492, newshape=[]) /* ty=bool */;
  %495 = reshape(%493, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %496 = @func_1260(%494, %495) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %497 = @func_1457(%481) /* ty=Tensor[(16, 2, 15), bool] */;
  %498 = bitwise_and(%490, %491) /* ty=Tensor[(4, 4, 12), int16] */;
  %499 = %496.1;
  (%497, meta[relay.Constant][28] /* ty=Tensor[(480), float64] */, %498, %499, %var_2208)
}

def @func_5184() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %500 = @func_4931() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) */;
  %501 = %500.1;
  %502 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%501, %502)
}

def @func_940(%var_914: Tensor[(9, 10, 1), float64]) -> Tensor[(9, 10, ?), int64] {
  %503 = cast(%var_914, dtype="float64") /* ty=Tensor[(9, 10, 1), float64] */;
  %504 = sigmoid(%503) /* ty=Tensor[(9, 10, 1), float64] */;
  %505 = cast(%504, dtype="float32") /* ty=Tensor[(9, 10, 1), float32] */;
  %506 = shape_of(%var_914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%var_914, dtype="float32") /* ty=Tensor[(9, 10, 1), float32] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %509 = floor_mod(%507, %508) /* ty=Tensor[(9, 10, ?), float32] */;
  %510 = cast(%509, dtype="int64") /* ty=Tensor[(9, 10, ?), int64] */;
  %511 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%504, dtype="int64") /* ty=Tensor[(9, 10, 1), int64] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  right_shift(%512, %513) /* ty=Tensor[(9, 10, ?), int64] */
}

def @func_9847() -> (Tensor[(9, 4, 14), float64],) {
  %514 = @func_7313() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %515 = %514.0;
  (%515,)
}

def @func_7216() -> (Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
  %516 = cast(meta[relay.Constant][30] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %517 = reshape(%516, newshape=[15, 10, 6]) /* ty=Tensor[(15, 10, 6), float64] */;
  %518 = @func_4731(%517) /* ty=(Tensor[(15, 10, 6), float64], Tensor[(9, 4, 14), float64]) */;
  %519 = @func_5910() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %520 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
  %521 = @func_4237() /* ty=Tensor[(13, 16, 9), float64] */;
  %522 = %518.1;
  %523 = %519.0;
  %524 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
  (%520, %521, %522, meta[relay.Constant][30] /* ty=Tensor[(900), float64] */, %523, %524)
}

def @func_11733() -> (Tensor[(9, 4, 14), float64],) {
  %525 = @func_6179() /* ty=Tensor[(9, 4, 14), float64] */;
  (%525,)
}

def @func_5662() -> (Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) {
  %526 = @func_5604() /* ty=(Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %527 = cast(meta[relay.Constant][31] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %528 = reshape(%527, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %529 = @func_5604() /* ty=(Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %530 = %526.0;
  %531 = @func_1457(%528) /* ty=Tensor[(16, 2, 15), bool] */;
  %532 = %529.1;
  (%530, %531, meta[relay.Constant][31] /* ty=Tensor[(480), float64] */, %532)
}

def @func_6832() -> Tensor[(9, 4, 14), float64] {
  %533 = @func_5477() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64]) */;
  %533.2
}

def @func_11782() -> (Tensor[(176), float64],) {
  %534 = @func_6504() /* ty=(Tensor[(176), float64],) */;
  %535 = %534.0;
  (%535,)
}

def @func_5878(%var_5855: Tensor[(1008), int16]) -> (Tensor[(90), float64], Tensor[(1, 1872), float64], Tensor[(14, 8, 9), uint8], Tensor[(112), int16], Tensor[(1008), int16], Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float32]) {
  %536 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 1872), float64] */, dtype="float64") /* ty=Tensor[(1, 1872), float64] */;
  %537 = reshape(%536, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %538 = @func_5273(%537) /* ty=(Tensor[(13, 16, 9), bool], Tensor[(144), float64], Tensor[(1040, 2), float64], Tensor[(90), float64]) */;
  %539 = cast(meta[relay.Constant][33] /* ty=Tensor[(112), int16] */, dtype="int16") /* ty=Tensor[(112), int16] */;
  %540 = cast(%var_5855, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %541 = cast(%var_5855, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %542 = reshape(%539, newshape=[14, 8, 1]) /* ty=Tensor[(14, 8, 1), int16] */;
  %543 = reshape(%540, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), int16] */;
  %544 = reshape(%541, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), int16] */;
  %545 = @func_5765(%542, %543, %544) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(14, 8, 9), uint8]) */;
  %546 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %547 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 4, 14), float64] */, dtype="uint8") /* ty=Tensor[(9, 4, 14), uint8] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="uint8") /* ty=Tensor[(9, 4, 14), uint8] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %551 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %552 = %538.3;
  %553 = %545.1;
  %554 = left_shift(%549, %550) /* ty=Tensor[(9, 4, 14), uint8] */;
  %555 = %551.0;
  (%552, meta[relay.Constant][32] /* ty=Tensor[(1, 1872), float64] */, %553, meta[relay.Constant][33] /* ty=Tensor[(112), int16] */, %var_5855, %554, %555)
}

def @func_8982() -> Tensor[(9, 4, 14), uint32] {
  %556 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %556.0
}

def @func_8156() -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float32]) {
  %557 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %558 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %559 = %558.0;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %561 = %557.0;
  %562 = atan(%560) /* ty=Tensor[(9, 4, 14), float32] */;
  (%561, %562)
}

def @func_5158() -> (Tensor[(9, 4, 14), float64],) {
  %563 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %564 = %563.0;
  (%564,)
}

def @func_9248(%var_9242: Tensor[(660), uint32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(15, 11, 4), float32], Tensor[(44, 1), uint32], Tensor[(660), uint32]) {
  %565 = cast(meta[relay.Constant][35] /* ty=Tensor[(44, 1), uint32] */, dtype="uint32") /* ty=Tensor[(44, 1), uint32] */;
  %566 = cast(%var_9242, dtype="uint32") /* ty=Tensor[(660), uint32] */;
  %567 = reshape(%565, newshape=[1, 11, 4]) /* ty=Tensor[(1, 11, 4), uint32] */;
  %568 = reshape(%566, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), uint32] */;
  %569 = @func_8708(%567, %568) /* ty=(Tensor[(15, 11, 4), int32], Tensor[(1, 11, 4), float64], Tensor[(15, 11, 4), float32]) */;
  %570 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
  %571 = %569.2;
  (%570, %571, meta[relay.Constant][35] /* ty=Tensor[(44, 1), uint32] */, %var_9242)
}

def @func_3701(%var_3634: int32, %var_3635: Tensor[(9, 12, 4), int32], %var_3667: Tensor[(192), int8], %var_3699: Tensor[(8, 18), float64]) -> (Tensor[(9, 12, 4), int32], Tensor[(13, 16, 10), bool], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(16, 2, 15), bool], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 12, 4), bool], Tensor[(16, 2, 15), bool], Tensor[(?, 9, 2), bool], Tensor[(8, 18), float64]) {
  %572 = cast(%var_3634, dtype="int32") /* ty=int32 */;
  %573 = cast(%var_3635, dtype="int32") /* ty=Tensor[(9, 12, 4), int32] */;
  %574 = cast(meta[relay.Constant][36] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %575 = cast(meta[relay.Constant][37] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %576 = cast(meta[relay.Constant][36] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %577 = reshape(%574, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %578 = reshape(%575, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %579 = reshape(%576, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %580 = @func_1982(%577, %578, %579) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
  %581 = cast(%var_3667, dtype="int8") /* ty=Tensor[(192), int8] */;
  %582 = cast(meta[relay.Constant][38] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %583 = reshape(%581, newshape=[4, 4, 12]) /* ty=Tensor[(4, 4, 12), int8] */;
  %584 = reshape(%582, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %585 = @func_2214(%583, %584) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(4, 4, 12), int16], Tensor[(3, 12, 4), float64], Tensor[(336), bool]) */;
  %586 = cast(%var_3634, dtype="float64") /* ty=float64 */;
  %587 = cast(%var_3635, dtype="float64") /* ty=Tensor[(9, 12, 4), float64] */;
  %588 = power(%586, %587) /* ty=Tensor[(9, 12, 4), float64] */;
  %589 = cast(%588, dtype="bool") /* ty=Tensor[(9, 12, 4), bool] */;
  %590 = cast(%var_3634, dtype="bool") /* ty=bool */;
  %591 = %585.0;
  %592 = cast(%591, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %593 = reshape(%592, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %594 = cast(%var_3699, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
  %595 = reshape(%594, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %596 = @func_211(%595) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %597 = add(%572, %573) /* ty=Tensor[(9, 12, 4), int32] */;
  %598 = %580.4;
  %599 = less(%589, %590) /* ty=Tensor[(9, 12, 4), bool] */;
  %600 = @func_1457(%593) /* ty=Tensor[(16, 2, 15), bool] */;
  %601 = %596.1;
  (%597, %598, meta[relay.Constant][36] /* ty=Tensor[(2080), float64] */, meta[relay.Constant][37] /* ty=Tensor[(90), float64] */, %591, %var_3667, meta[relay.Constant][38] /* ty=Tensor[(336), bool] */, %599, %600, %601, %var_3699)
}

def @func_6616() -> Tensor[(9, 4, 14), uint32] {
  @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_5722(%var_5687: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(18), float64]) {
  %602 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %603 = cast(%var_5687, dtype="float32") /* ty=Tensor[(18), float32] */;
  %604 = reshape(%603, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %605 = @func_4757(%604) /* ty=(Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) */;
  %606 = cast(%var_5687, dtype="float64") /* ty=Tensor[(18), float64] */;
  %607 = %602.0;
  %608 = %605.2;
  %609 = rsqrt(%606) /* ty=Tensor[(18), float64] */;
  (%607, %608, %609)
}

def @func_5436() -> (Tensor[(9, 4, 14), uint32],) {
  %610 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %611 = %610.0;
  (%611,)
}

def @func_6482() -> Tensor[(9, 4, 14), float64] {
  %612 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %612.0
}

def @func_12031() -> (Tensor[(13, 16, 9), float32],) {
  %613 = @func_7996() /* ty=(Tensor[(13, 16, 9), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64]) */;
  %614 = %613.0;
  (%614,)
}

def @func_9593() -> (Tensor[(9, 4, 14), uint32],) {
  %615 = @func_7095() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %616 = %615.0;
  (%616,)
}

def @func_4568() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %617 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %618 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %619 = %617.1;
  %620 = %618.1;
  (%619, %620)
}

def @func_6259(%var_6189: Tensor[(9, 4, 14), float64], %var_6201: Tensor[(2080), float64], %var_6226: Tensor[(18), float32], %var_6240: Tensor[(432), int32], %var_6241: Tensor[(2, 240), float64], %var_6244: Tensor[(2535), int16]) -> (Tensor[(9, 4, 14), float32], Tensor[(176), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 5, 5), bool], Tensor[(432), int32], Tensor[(2, 240), float64], Tensor[(2, 72), float64], Tensor[(2535), uint8], Tensor[(13, 16, 10), float32], Tensor[(13, 16, 9), float64]) {
  %621 = @func_6128() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %622 = %621.0;
  %623 = cast(%var_6189, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %627 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %628 = cast(%var_6226, dtype="float32") /* ty=Tensor[(18), float32] */;
  %629 = reshape(%628, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %630 = @func_4757(%629) /* ty=(Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) */;
  %631 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %632 = cast(meta[relay.Constant][40] /* ty=Tensor[(2535), int16] */, dtype="int16") /* ty=Tensor[(2535), int16] */;
  %633 = cast(%var_6240, dtype="int32") /* ty=Tensor[(432), int32] */;
  %634 = cast(%var_6241, dtype="float64") /* ty=Tensor[(2, 240), float64] */;
  %635 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 72), float64] */, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %636 = reshape(%632, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), int16] */;
  %637 = reshape(%633, newshape=[432]) /* ty=Tensor[(432), int32] */;
  %638 = reshape(%634, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %639 = reshape(%635, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %640 = @func_4698(%636, %637, %638, %639) /* ty=(Tensor[(13, 13, 15), int16], Tensor[(432), int32], Tensor[(480), float64], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), float64], Tensor[(2, 5, 5), bool], Tensor[(5, 10), float64]) */;
  %641 = cast(%var_6244, dtype="uint8") /* ty=Tensor[(2535), uint8] */;
  %642 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(2535), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %643 = cast(meta[relay.Constant][40] /* ty=Tensor[(2535), int16] */, dtype="uint8") /* ty=Tensor[(2535), uint8] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %645 = cast(%var_6201, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %646 = cast(meta[relay.Constant][39] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %647 = cast(%var_6201, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %648 = reshape(%645, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %649 = reshape(%646, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %650 = reshape(%647, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %651 = @func_1982(%648, %649, %650) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
  %652 = %651.4;
  %653 = cast(%652, dtype="float32") /* ty=Tensor[(13, 16, 10), float32] */;
  %654 = rsqrt(%653) /* ty=Tensor[(13, 16, 10), float32] */;
  %655 = cast(%654, dtype="float32") /* ty=Tensor[(13, 16, 10), float32] */;
  %656 = power(%625, %626) /* ty=Tensor[(9, 4, 14), float32] */;
  %657 = %627.0;
  %658 = @func_6179() /* ty=Tensor[(9, 4, 14), float64] */;
  %659 = %630.1;
  %660 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
  %661 = %631.0;
  %662 = %640.7;
  %663 = left_shift(%643, %644) /* ty=Tensor[(2535), uint8] */;
  %664 = sinh(%655) /* ty=Tensor[(13, 16, 10), float32] */;
  %665 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
  (%656, %657, %658, %var_6201, meta[relay.Constant][39] /* ty=Tensor[(90), float64] */, %659, %var_6226, %660, %661, %662, %var_6240, %var_6241, meta[relay.Constant][41] /* ty=Tensor[(2, 72), float64] */, %663, %664, %665)
}

def @func_4052() -> Tensor[(9, 4, 14), float64] {
  %666 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 4, 14), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  tan(%666) /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_9785(%var_9761: Tensor[(9, 4, 14), float64]) -> (Tensor[(90), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), bool]) {
  %667 = @func_6482() /* ty=Tensor[(9, 4, 14), float64] */;
  %668 = cast(%var_9761, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %672 = cast(meta[relay.Constant][43] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %673 = reshape(%672, newshape=[9, 10, 1]) /* ty=Tensor[(9, 10, 1), float64] */;
  %674 = @func_940(%673) /* ty=Tensor[(9, 10, ?), int64] */;
  %675 = cast(%674, dtype="float32") /* ty=Tensor[(9, 10, ?), float32] */;
  %676 = atanh(%675) /* ty=Tensor[(9, 10, ?), float32] */;
  %677 = cast(%674, dtype="bool") /* ty=Tensor[(9, 10, ?), bool] */;
  %678 = shape_of(%676, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%676, dtype="bool") /* ty=Tensor[(9, 10, ?), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = divide(%670, %671) /* ty=Tensor[(9, 4, 14), float64] */;
  %682 = @func_9169() /* ty=Tensor[(9, 4, 14), float64] */;
  %683 = equal(%679, %680) /* ty=Tensor[(9, 10, ?), bool] */;
  (meta[relay.Constant][43] /* ty=Tensor[(90), float64] */, %681, %682, %683)
}

def @main(%var_13294: Tensor[(3, 13, 14), float32], %var_13332: Tensor[(3, 13, 14), float32], %var_13344: Tensor[(3, 13, 14), float64]) -> (Tensor[(9, 4, 14), uint32], Tensor[(3, 13, 14), float32], Tensor[(3, 13, 14), bool]) {
  %684 = @func_13072() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %685 = cast(%var_13294, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %686 = sinh(%685) /* ty=Tensor[(3, 13, 14), float32] */;
  %687 = cast(%var_13294, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %688 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%686, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %691 = less(%689, %690) /* ty=Tensor[(3, 13, 14), bool] */;
  %692 = cast(%691, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %693 = atan(%692) /* ty=Tensor[(3, 13, 14), float32] */;
  %694 = cast(%var_13332, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%693, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %698 = cast(%691, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %699 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%693, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %702 = logical_or(%700, %701) /* ty=Tensor[(3, 13, 14), bool] */;
  %703 = cast(%702, dtype="float64") /* ty=Tensor[(3, 13, 14), float64] */;
  %704 = exp(%703) /* ty=Tensor[(3, 13, 14), float64] */;
  %705 = cast(%var_13344, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %709 = %684.0;
  %710 = floor_mod(%696, %697) /* ty=Tensor[(3, 13, 14), float32] */;
  %711 = not_equal(%707, %708) /* ty=Tensor[(3, 13, 14), bool] */;
  (%709, %710, %711)
}

def @func_12627() -> (Tensor[(16, 2, 15), bool],) {
  %712 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %713 = %712.1;
  (%713,)
}

def @func_6460() -> (Tensor[(9, 4, 14), float64],) {
  %714 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %715 = %714.0;
  (%715,)
}

def @func_8335() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) {
  %716 = @func_6689() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %717 = %716.0;
  %718 = @func_6832() /* ty=Tensor[(9, 4, 14), float64] */;
  (%717, %718)
}

def @func_11364(%var_11338: Tensor[(468, 4), float64], %var_11339: Tensor[(18), float32]) -> (Tensor[(900), float64], Tensor[(9, 4, 14), uint32], Tensor[(468, 4), float64], Tensor[(18), float32], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
  %719 = @func_7216() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %720 = cast(%var_11338, dtype="float64") /* ty=Tensor[(468, 4), float64] */;
  %721 = cast(%var_11338, dtype="uint64") /* ty=Tensor[(468, 4), uint64] */;
  %722 = cast(%var_11339, dtype="float32") /* ty=Tensor[(18), float32] */;
  %723 = reshape(%720, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
  %724 = reshape(%721, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), uint64] */;
  %725 = reshape(%722, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %726 = @func_10274(%723, %724, %725) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(1872), float64], Tensor[(176), float64], Tensor[(13, 16, 9), uint64], Tensor[(176), float64], Tensor[(9, 4, 14), float32], Tensor[(18), float32]) */;
  %727 = @func_6423() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(16, 2, 15), bool]) */;
  %728 = %727.1;
  %729 = cast(%728, dtype="float32") /* ty=Tensor[(?, 9, 2), float32] */;
  %730 = reshape(%729, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %731 = @func_6964(%730) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(18), float32]) */;
  %732 = %719.3;
  %733 = %726.0;
  %734 = %731.1;
  (%732, %733, %var_11338, %var_11339, %728, %734)
}

def @func_10274(%var_10193: Tensor[(1872), float64], %var_10226: Tensor[(13, 16, 9), uint64], %var_10252: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(1872), float64], Tensor[(176), float64], Tensor[(13, 16, 9), uint64], Tensor[(176), float64], Tensor[(9, 4, 14), float32], Tensor[(18), float32]) {
  %735 = @func_5449() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %736 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %737 = cast(%var_10193, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %738 = reshape(%737, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %739 = @func_6924(%738) /* ty=(Tensor[(13, 16, 9), uint64],) */;
  %740 = %739.0;
  %741 = cast(%var_10226, dtype="uint64") /* ty=Tensor[(13, 16, 9), uint64] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%740, dtype="uint64") /* ty=Tensor[(13, 16, 9), uint64] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %745 = @func_6504() /* ty=(Tensor[(176), float64],) */;
  %746 = cast(%var_10252, dtype="float32") /* ty=Tensor[(18), float32] */;
  %747 = reshape(%746, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %748 = @func_5722(%747) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(18), float64]) */;
  %749 = %735.0;
  %750 = %736.2;
  %751 = bitwise_or(%743, %744) /* ty=Tensor[(13, 16, 9), uint64] */;
  %752 = %745.0;
  %753 = %748.0;
  (%749, %var_10193, %750, %751, %752, %753, %var_10252)
}

def @func_8863(%var_8821: Tensor[(9, 4, 14), uint32], %var_8842: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(90), float64], Tensor[(9, 4, 14), uint32], Tensor[(2080), float64], Tensor[(1, 1872), float64], Tensor[(1008), int16]) {
  %754 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
  %755 = cast(%var_8821, dtype="uint8") /* ty=Tensor[(9, 4, 14), uint8] */;
  %756 = shape_of(%754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(%754, dtype="uint8") /* ty=Tensor[(9, 4, 14), uint8] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %759 = cast(meta[relay.Constant][44] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %760 = cast(%var_8842, dtype="float64") /* ty=Tensor[(90), float64] */;
  %761 = cast(meta[relay.Constant][44] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %762 = reshape(%759, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %763 = reshape(%760, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %764 = reshape(%761, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %765 = @func_1982(%762, %763, %764) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
  %766 = cast(meta[relay.Constant][44] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %767 = cast(meta[relay.Constant][45] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %768 = reshape(%767, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
  %769 = @func_5878(%768) /* ty=(Tensor[(90), float64], Tensor[(1, 1872), float64], Tensor[(14, 8, 9), uint8], Tensor[(112), int16], Tensor[(1008), int16], Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float32]) */;
  %770 = bitwise_or(%757, %758) /* ty=Tensor[(9, 4, 14), uint8] */;
  %771 = @func_4991() /* ty=Tensor[(9, 4, 14), float64] */;
  %772 = %765.3;
  %773 = @func_5122() /* ty=Tensor[(9, 4, 14), uint32] */;
  %774 = erf(%766) /* ty=Tensor[(2080), float64] */;
  %775 = %769.1;
  (%770, %771, %772, %var_8842, %773, %774, %775, meta[relay.Constant][45] /* ty=Tensor[(1008), int16] */)
}

def @func_6689() -> (Tensor[(9, 4, 14), uint32],) {
  %776 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %777 = %776.0;
  (%777,)
}

def @func_10865() -> Tensor[(9, 4, 14), uint32] {
  %778 = @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %778.0
}

def @func_11055() -> Tensor[(13, 16, 9), float64] {
  @func_9727() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_11934(%var_11916: Tensor[(336), bool]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(3, 12, 4), float64], bool, Tensor[(336), bool], Tensor[(13, 16, 9), float64]) {
  %779 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %780 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %781 = cast(%var_11916, dtype="bool") /* ty=Tensor[(336), bool] */;
  %782 = reshape(%780, newshape=[]) /* ty=bool */;
  %783 = reshape(%781, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %784 = @func_1260(%782, %783) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %785 = @func_5910() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %786 = @func_7464() /* ty=Tensor[(9, 4, 14), float64] */;
  %787 = %779.0;
  %788 = %784.1;
  %789 = %785.0;
  (%786, %787, %788, True /* ty=bool */, %var_11916, %789)
}

def @func_11542(%var_11531: Tensor[(7, 6, 6), int16], %var_11532: Tensor[(7, 6, 6), int16], %var_11539: Tensor[(1872), float64]) -> (Tensor[(7, 6, 6), int16], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64]) {
  %790 = cast(%var_11532, dtype="int16") /* ty=Tensor[(7, 6, 6), int16] */;
  %791 = shape_of(%var_11531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%var_11531, dtype="int16") /* ty=Tensor[(7, 6, 6), int16] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %794 = cast(%var_11539, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %795 = reshape(%794, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %796 = @func_6924(%795) /* ty=(Tensor[(13, 16, 9), uint64],) */;
  %797 = left_shift(%792, %793) /* ty=Tensor[(7, 6, 6), int16] */;
  %798 = %796.0;
  (%797, %798, %var_11539)
}

def @func_9830(%var_9824: Tensor[(3, 2, 5), float32]) -> (Tensor[(3, 2, 5), float32], Tensor[(9, 4, 14), float64]) {
  %799 = cast(%var_9824, dtype="float32") /* ty=Tensor[(3, 2, 5), float32] */;
  %800 = @func_9407() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64]) */;
  %801 = erf(%799) /* ty=Tensor[(3, 2, 5), float32] */;
  %802 = %800.0;
  (%801, %802)
}

def @func_10961(%var_10927: Tensor[(144), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 9, 2), bool], Tensor[(36), bool]) {
  %803 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %804 = cast(%var_10927, dtype="float64") /* ty=Tensor[(144), float64] */;
  %805 = reshape(%804, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %806 = @func_211(%805) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %807 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %808 = @func_7425() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(?, 9, 2), float64]) */;
  %809 = cast(meta[relay.Constant][46] /* ty=Tensor[(36), bool] */, dtype="bool") /* ty=Tensor[(36), bool] */;
  %810 = reshape(%809, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
  %811 = @func_7043(%810) /* ty=(Tensor[(2, 9, 2), bool],) */;
  %812 = %803.0;
  %813 = %806.1;
  %814 = %807.0;
  %815 = %808.0;
  %816 = %811.0;
  (%812, %813, %var_10927, %814, %815, %816, meta[relay.Constant][46] /* ty=Tensor[(36), bool] */)
}

def @func_11679() -> Tensor[(9, 4, 14), uint32] {
  %817 = @func_7787() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %817.0
}

def @func_5477() -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64]) {
  %818 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %819 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %820 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
  %821 = %818.0;
  %822 = %819.0;
  (%820, %821, %822)
}

def @func_11760() -> (Tensor[(9, 4, 14), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90, 1), float64], Tensor[(9, 4, 14), uint32]) {
  %823 = @func_9847() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %824 = cast(meta[relay.Constant][47] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %825 = cast(meta[relay.Constant][48] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %826 = reshape(%824, newshape=[2080]) /* ty=Tensor[(2080), float64] */;
  %827 = reshape(%825, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %828 = @func_5573(%826, %827) /* ty=(Tensor[(13, 16, 9), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90), float64]) */;
  %829 = @func_8456() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %830 = %823.0;
  %831 = %828.1;
  %832 = %829.0;
  (%830, %831, meta[relay.Constant][47] /* ty=Tensor[(2080), float64] */, meta[relay.Constant][48] /* ty=Tensor[(90, 1), float64] */, %832)
}

def @func_1457(%var_1428: Tensor[(16, 2, 15), float64]) -> Tensor[(16, 2, 15), bool] {
  %833 = cast(%var_1428, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %834 = cos(%833) /* ty=Tensor[(16, 2, 15), float64] */;
  %835 = cast(%var_1428, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%834, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%837, %838) /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_9607() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %839 = @func_7464() /* ty=Tensor[(9, 4, 14), float64] */;
  %840 = @func_8982() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%839, %840)
}

def @func_9331() -> (Tensor[(9, 4, 14), uint32],) {
  %841 = @func_8456() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %842 = %841.0;
  (%842,)
}

def @func_10684() -> (Tensor[(9, 4, 14), float64],) {
  %843 = @func_10493() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %844 = %843.0;
  (%844,)
}

def @func_12472(%var_12470: Tensor[(30), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64], Tensor[(30), float32]) {
  %845 = @func_8156() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float32]) */;
  %846 = cast(%var_12470, dtype="float32") /* ty=Tensor[(30), float32] */;
  %847 = reshape(%846, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float32] */;
  %848 = @func_9830(%847) /* ty=(Tensor[(3, 2, 5), float32], Tensor[(9, 4, 14), float64]) */;
  %849 = %845.1;
  %850 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
  %851 = %848.1;
  (%849, %850, %851, %var_12470)
}

def @func_13072() -> (Tensor[(9, 4, 14), uint32],) {
  %852 = @func_9228() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %853 = %852.0;
  (%853,)
}

def @func_7006() -> (Tensor[(9, 4, 14), uint32],) {
  %854 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %855 = %854.0;
  (%855,)
}

def @func_5765(%var_5727: Tensor[(14, 8, 1), int16], %var_5728: Tensor[(14, 8, 9), int16], %var_5758: Tensor[(14, 8, 9), int16]) -> (Tensor[(14, 8, 9), bool], Tensor[(14, 8, 9), uint8]) {
  %856 = cast(%var_5728, dtype="float32") /* ty=Tensor[(14, 8, 9), float32] */;
  %857 = log2(%856) /* ty=Tensor[(14, 8, 9), float32] */;
  %858 = cast(%var_5727, dtype="int16") /* ty=Tensor[(14, 8, 1), int16] */;
  %859 = cast(%var_5728, dtype="int16") /* ty=Tensor[(14, 8, 9), int16] */;
  %860 = bitwise_and(%858, %859) /* ty=Tensor[(14, 8, 9), int16] */;
  %861 = cast(%860, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %862 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%857, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %865 = cast(%var_5758, dtype="uint8") /* ty=Tensor[(14, 8, 9), uint8] */;
  %866 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%860, dtype="uint8") /* ty=Tensor[(14, 8, 9), uint8] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %869 = not_equal(%863, %864) /* ty=Tensor[(14, 8, 9), bool] */;
  %870 = bitwise_xor(%867, %868) /* ty=Tensor[(14, 8, 9), uint8] */;
  (%869, %870)
}

def @func_6567() -> Tensor[(9, 4, 14), float64] {
  @func_5826() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_5303() -> (Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) {
  %871 = cast(meta[relay.Constant][49] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %872 = reshape(%871, newshape=[11, 8, 2]) /* ty=Tensor[(11, 8, 2), float64] */;
  %873 = @func_2245(%872) /* ty=(Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) */;
  %874 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
  %875 = %873.1;
  (%874, %875, meta[relay.Constant][49] /* ty=Tensor[(176), float64] */)
}

def @func_5910() -> (Tensor[(13, 16, 9), float64],) {
  %876 = @func_4887() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %877 = %876.0;
  (%877,)
}

def @func_12365() -> (Tensor[(?, 9, 2), bool],) {
  %878 = @func_9314() /* ty=(Tensor[(?, 9, 2), bool],) */;
  %879 = %878.0;
  (%879,)
}

def @func_10885(%var_10877: uint32, %var_10878: Tensor[(3, 8, 6), uint32]) -> (Tensor[(3, 8, 6), bool],) {
  %880 = cast(%var_10877, dtype="bool") /* ty=bool */;
  %881 = cast(%var_10878, dtype="bool") /* ty=Tensor[(3, 8, 6), bool] */;
  %882 = greater(%880, %881) /* ty=Tensor[(3, 8, 6), bool] */;
  (%882,)
}

def @func_5122() -> Tensor[(9, 4, 14), uint32] {
  %883 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %883.0
}

def @func_4454(%var_4445: Tensor[(7, 16, 2), bool]) -> Tensor[(7, 16, 2), bool] {
  %884 = cast(%var_4445, dtype="bool") /* ty=Tensor[(7, 16, 2), bool] */;
  %885 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(7, 16, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 16, 2), bool] */, dtype="bool") /* ty=Tensor[(7, 16, 2), bool] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%886, %887) /* ty=Tensor[(7, 16, 2), bool] */
}

def @func_4960() -> Tensor[(9, 4, 14), uint32] {
  %888 = @func_4931() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) */;
  %888.1
}

def @func_8250() -> Tensor[(9, 4, 14), uint32] {
  %889 = @func_5449() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %889.0
}

def @func_9057() -> Tensor[(9, 4, 14), float64] {
  %890 = @func_6128() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %890.0
}

def @func_8214() -> Tensor[(9, 4, 14), uint32] {
  %891 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %891.1
}

def @func_1309(%var_1272: Tensor[(9, 16, 16), bool], %var_1273: Tensor[(9, 16, 16), bool], %var_1295: Tensor[(9, 16, 16), bool]) -> (Tensor[(9, 16, 16), bool], Tensor[(2, 10, 13), float32], Tensor[(1, 260), float32], Tensor[(9, 16, 16), int64]) {
  %892 = cast(%var_1273, dtype="bool") /* ty=Tensor[(9, 16, 16), bool] */;
  %893 = shape_of(%var_1272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %894 = cast(%var_1272, dtype="bool") /* ty=Tensor[(9, 16, 16), bool] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %896 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 260), float32] */, dtype="float32") /* ty=Tensor[(1, 260), float32] */;
  %897 = reshape(%896, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
  %898 = @func_885(%897) /* ty=(Tensor[(2, 10, 13), float32],) */;
  %899 = cast(%var_1295, dtype="int64") /* ty=Tensor[(9, 16, 16), int64] */;
  %900 = shape_of(%var_1273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%var_1273, dtype="int64") /* ty=Tensor[(9, 16, 16), int64] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %903 = logical_and(%894, %895) /* ty=Tensor[(9, 16, 16), bool] */;
  %904 = %898.0;
  %905 = bitwise_xor(%901, %902) /* ty=Tensor[(9, 16, 16), int64] */;
  (%903, %904, meta[relay.Constant][51] /* ty=Tensor[(1, 260), float32] */, %905)
}

def @func_9741() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %906 = @func_8532() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %907 = @func_8982() /* ty=Tensor[(9, 4, 14), uint32] */;
  %908 = %906.1;
  (%907, %908)
}

def @func_9535(%var_9526: Tensor[(480), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64], Tensor[(432), int32], Tensor[(480), float64]) {
  %909 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %910 = cast(meta[relay.Constant][52] /* ty=Tensor[(432), int32] */, dtype="int32") /* ty=Tensor[(432), int32] */;
  %911 = cast(%var_9526, dtype="float64") /* ty=Tensor[(480), float64] */;
  %912 = reshape(%910, newshape=[432]) /* ty=Tensor[(432), int32] */;
  %913 = reshape(%911, newshape=[4, 120]) /* ty=Tensor[(4, 120), float64] */;
  %914 = @func_4352(%912, %913) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(336), bool], int32, Tensor[(432), int32], Tensor[(192), int8], Tensor[(16, 2, 15), bool], Tensor[(4, 120), float64], Tensor[(3, 12, 4), float64]) */;
  %915 = @func_9057() /* ty=Tensor[(9, 4, 14), float64] */;
  %916 = %909.3;
  %917 = %914.3;
  (%915, %916, %917, meta[relay.Constant][52] /* ty=Tensor[(432), int32] */, %var_9526)
}

def @func_4887() -> (Tensor[(13, 16, 9), float64],) {
  %918 = @func_4237() /* ty=Tensor[(13, 16, 9), float64] */;
  (%918,)
}

def @func_6104(%var_6085: Tensor[(176), float64]) -> (Tensor[(9, 4, 14), uint32], Tensor[(336), bool], Tensor[(176), float64], Tensor[(9, 4, 14), float32]) {
  %919 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %920 = cast(%var_6085, dtype="float64") /* ty=Tensor[(176), float64] */;
  %921 = reshape(%920, newshape=[11, 8, 2]) /* ty=Tensor[(11, 8, 2), float64] */;
  %922 = @func_2245(%921) /* ty=(Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) */;
  %923 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %924 = %919.0;
  %925 = %922.3;
  %926 = %923.0;
  (%924, %925, %var_6085, %926)
}

def @func_9169() -> Tensor[(9, 4, 14), float64] {
  %927 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %927.0
}

def @func_7425() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(?, 9, 2), float64]) {
  %928 = @func_6689() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %929 = @func_5449() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %930 = cast(meta[relay.Constant][53] /* ty=Tensor[(6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %931 = reshape(%930, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %932 = @func_107(%931) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %933 = %932.0;
  %934 = cast(meta[relay.Constant][53] /* ty=Tensor[(6, 3), float32] */, dtype="int64") /* ty=Tensor[(6, 3), int64] */;
  %935 = shape_of(%933, dtype="int32") /* ty=Tensor[(3), int32] */;
  %936 = cast(%933, dtype="int64") /* ty=Tensor[(?, 9, 2), int64] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %938 = maximum(%936, %937) /* ty=Tensor[(?, 9, 2), int64] */;
  %939 = cast(%938, dtype="float64") /* ty=Tensor[(?, 9, 2), float64] */;
  %940 = shape_of(%933, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%933, dtype="float64") /* ty=Tensor[(?, 9, 2), float64] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %943 = %928.0;
  %944 = %929.0;
  %945 = divide(%941, %942) /* ty=Tensor[(?, 9, 2), float64] */;
  (%943, %944, %945)
}

def @func_8456() -> (Tensor[(9, 4, 14), uint32],) {
  %946 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%946,)
}

def @func_5273(%var_5241: Tensor[(13, 16, 9), float64]) -> (Tensor[(13, 16, 9), bool], Tensor[(144), float64], Tensor[(1040, 2), float64], Tensor[(90), float64]) {
  %947 = @func_4887() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %948 = %947.0;
  %949 = cast(%var_5241, dtype="bool") /* ty=Tensor[(13, 16, 9), bool] */;
  %950 = shape_of(%948, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%948, dtype="bool") /* ty=Tensor[(13, 16, 9), bool] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %953 = cast(meta[relay.Constant][54] /* ty=Tensor[(1040, 2), float64] */, dtype="float64") /* ty=Tensor[(1040, 2), float64] */;
  %954 = cast(meta[relay.Constant][55] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %955 = cast(meta[relay.Constant][54] /* ty=Tensor[(1040, 2), float64] */, dtype="float64") /* ty=Tensor[(1040, 2), float64] */;
  %956 = reshape(%953, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %957 = reshape(%954, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %958 = reshape(%955, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %959 = @func_1982(%956, %957, %958) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
  %960 = less_equal(%951, %952) /* ty=Tensor[(13, 16, 9), bool] */;
  %961 = %959.1;
  (%960, %961, meta[relay.Constant][54] /* ty=Tensor[(1040, 2), float64] */, meta[relay.Constant][55] /* ty=Tensor[(90), float64] */)
}

def @func_5788() -> Tensor[(9, 4, 14), uint32] {
  @func_5122() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_8974() -> (Tensor[(9, 4, 14), uint32],) {
  %962 = @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %963 = %962.1;
  (%963,)
}

def @func_8904(%var_8893: Tensor[(2304), bool]) -> (Tensor[(480), float64], Tensor[(2, 10, 13), float32], Tensor[(2304), bool]) {
  %964 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %965 = cast(%var_8893, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %966 = cast(%var_8893, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %967 = cast(%var_8893, dtype="bool") /* ty=Tensor[(2304), bool] */;
  %968 = reshape(%965, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
  %969 = reshape(%966, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
  %970 = reshape(%967, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
  %971 = @func_1309(%968, %969, %970) /* ty=(Tensor[(9, 16, 16), bool], Tensor[(2, 10, 13), float32], Tensor[(1, 260), float32], Tensor[(9, 16, 16), int64]) */;
  %972 = %964.2;
  %973 = %971.1;
  (%972, %973, %var_8893)
}

def @func_6575() -> Tensor[(13, 16, 9), float64] {
  @func_5402() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_8532() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %974 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %975 = %974.0;
  %976 = @func_5788() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%975, %976)
}

def @func_6308(%var_6304: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64]) {
  %977 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %978 = cast(%var_6304, dtype="float64") /* ty=Tensor[(90), float64] */;
  %979 = reshape(%978, newshape=[9, 10, 1]) /* ty=Tensor[(9, 10, 1), float64] */;
  %980 = %977.0;
  %981 = @func_940(%979) /* ty=Tensor[(9, 10, ?), int64] */;
  (%980, %981, %var_6304)
}

def @func_4757(%var_4748: Tensor[(18), float32]) -> (Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) {
  %982 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 15, 6), float64] */;
  %983 = cast(%var_4748, dtype="float32") /* ty=Tensor[(18), float32] */;
  %984 = reshape(%983, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %985 = @func_107(%984) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %986 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %987 = sigmoid(%982) /* ty=Tensor[(10, 15, 6), float64] */;
  %988 = %985.0;
  %989 = %986.0;
  (%987, %988, %var_4748, %989)
}

def @func_11115(%var_11085: Tensor[(15, 15, 10), float32], %var_11111: Tensor[(1872), float64], %var_11112: Tensor[(18), float32]) -> (Tensor[(15, 15, 10), float32], Tensor[(9, 4, 14), float64], Tensor[(1872), float64], Tensor[(1872), float64], Tensor[(18), float32]) {
  %990 = cast(%var_11085, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %991 = cast(%var_11111, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %992 = cast(%var_11111, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %993 = cast(%var_11112, dtype="float32") /* ty=Tensor[(18), float32] */;
  %994 = reshape(%991, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
  %995 = reshape(%992, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), uint64] */;
  %996 = reshape(%993, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %997 = @func_10274(%994, %995, %996) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(1872), float64], Tensor[(176), float64], Tensor[(13, 16, 9), uint64], Tensor[(176), float64], Tensor[(9, 4, 14), float32], Tensor[(18), float32]) */;
  %998 = tan(%990) /* ty=Tensor[(15, 15, 10), float32] */;
  %999 = @func_5826() /* ty=Tensor[(9, 4, 14), float64] */;
  %1000 = %997.1;
  (%998, %999, %1000, %var_11111, %var_11112)
}

def @func_9568() -> (Tensor[(9, 4, 14), float32], Tensor[(13, 16, 9), float64]) {
  %1001 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %1002 = @func_7216() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %1003 = %1001.0;
  %1004 = %1002.4;
  (%1003, %1004)
}

def @func_7732() -> (Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
  %1005 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %1006 = %1005.0;
  %1007 = cast(%1006, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
  %1008 = @func_4887() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %1009 = exp(%1007) /* ty=Tensor[(13, 16, 9), float64] */;
  %1010 = %1008.0;
  (%1009, %1010)
}

def @func_10361(%var_10327: Tensor[(192), int8], %var_10328: Tensor[(336), bool]) -> (Tensor[(13, 16, 9), float64], Tensor[(15, 10, 6), float64], Tensor[(900), float64], Tensor[(4, 4, 12), int16], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %1011 = cast(meta[relay.Constant][57] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %1012 = reshape(%1011, newshape=[15, 10, 6]) /* ty=Tensor[(15, 10, 6), float64] */;
  %1013 = @func_4731(%1012) /* ty=(Tensor[(15, 10, 6), float64], Tensor[(9, 4, 14), float64]) */;
  %1014 = cast(%var_10327, dtype="int8") /* ty=Tensor[(192), int8] */;
  %1015 = cast(%var_10328, dtype="bool") /* ty=Tensor[(336), bool] */;
  %1016 = reshape(%1014, newshape=[4, 4, 12]) /* ty=Tensor[(4, 4, 12), int8] */;
  %1017 = reshape(%1015, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %1018 = @func_2214(%1016, %1017) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(4, 4, 12), int16], Tensor[(3, 12, 4), float64], Tensor[(336), bool]) */;
  %1019 = @func_9741() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %1020 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
  %1021 = %1013.0;
  %1022 = %1018.2;
  %1023 = @func_6482() /* ty=Tensor[(9, 4, 14), float64] */;
  %1024 = %1019.0;
  (%1020, %1021, meta[relay.Constant][57] /* ty=Tensor[(900), float64] */, %1022, %var_10327, %var_10328, %1023, %1024)
}

def @func_5016() -> (Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
  %1025 = @func_4237() /* ty=Tensor[(13, 16, 9), float64] */;
  %1026 = cast(%1025, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
  %1027 = erf(%1026) /* ty=Tensor[(13, 16, 9), float64] */;
  %1028 = @func_4237() /* ty=Tensor[(13, 16, 9), float64] */;
  (%1027, %1028)
}

def @func_6964(%var_6952: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(18), float32]) {
  %1029 = cast(%var_6952, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1030 = reshape(%1029, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %1031 = @func_4757(%1030) /* ty=(Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) */;
  %1032 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
  %1033 = %1031.2;
  (%1032, %1033, %var_6952)
}

def @func_13050() -> Tensor[(13, 16, 9), float64] {
  %1034 = @func_7732() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %1034.1
}

def @func_4931() -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) {
  %1035 = @func_4887() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %1036 = @func_4568() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %1037 = %1035.0;
  %1038 = %1036.1;
  (%1037, %1038)
}

def @func_2265(%var_2259: Tensor[(2, 5, 5), float64], %var_2260: Tensor[(2, 5, 5), float64]) -> (Tensor[(2, 5, 5), bool],) {
  %1039 = cast(%var_2260, dtype="bool") /* ty=Tensor[(2, 5, 5), bool] */;
  %1040 = shape_of(%var_2259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%var_2259, dtype="bool") /* ty=Tensor[(2, 5, 5), bool] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1043 = greater_equal(%1041, %1042) /* ty=Tensor[(2, 5, 5), bool] */;
  (%1043,)
}

def @func_8708(%var_8694: Tensor[(1, 11, 4), uint32], %var_8695: Tensor[(15, 11, 4), uint32]) -> (Tensor[(15, 11, 4), int32], Tensor[(1, 11, 4), float64], Tensor[(15, 11, 4), float32]) {
  %1044 = cast(%var_8694, dtype="bool") /* ty=Tensor[(1, 11, 4), bool] */;
  %1045 = cast(%var_8695, dtype="bool") /* ty=Tensor[(15, 11, 4), bool] */;
  %1046 = greater(%1044, %1045) /* ty=Tensor[(15, 11, 4), bool] */;
  %1047 = cast(%1046, dtype="int32") /* ty=Tensor[(15, 11, 4), int32] */;
  %1048 = cast(%var_8694, dtype="int32") /* ty=Tensor[(1, 11, 4), int32] */;
  %1049 = cast(%var_8694, dtype="float64") /* ty=Tensor[(1, 11, 4), float64] */;
  %1050 = cast(%1046, dtype="float32") /* ty=Tensor[(15, 11, 4), float32] */;
  %1051 = bitwise_xor(%1047, %1048) /* ty=Tensor[(15, 11, 4), int32] */;
  %1052 = sigmoid(%1049) /* ty=Tensor[(1, 11, 4), float64] */;
  %1053 = log2(%1050) /* ty=Tensor[(15, 11, 4), float32] */;
  (%1051, %1052, %1053)
}

def @func_9277() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %1054 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %1055 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %1056 = %1054.0;
  %1057 = %1055.0;
  (%1056, %1057)
}

def @func_10785() -> (Tensor[(9, 4, 14), uint32],) {
  %1058 = @func_7216() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %1059 = %1058.0;
  (%1059,)
}

def @func_7579() -> (Tensor[(9, 4, 14), float64],) {
  %1060 = @func_6832() /* ty=Tensor[(9, 4, 14), float64] */;
  (%1060,)
}

def @func_12212(%var_12207: Tensor[(2, 6, 16), float64]) -> (Tensor[(2, 6, 16), float64],) {
  %1061 = cast(%var_12207, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
  %1062 = cosh(%1061) /* ty=Tensor[(2, 6, 16), float64] */;
  (%1062,)
}

def @func_13036() -> (Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64]) {
  %1063 = @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %1064 = @func_5910() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %1065 = %1063.1;
  %1066 = %1064.0;
  (%1065, %1066)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12524(%var_12522: Tensor[(2, 13, 15), uint16]) -> (Tensor[(2, 13, 15), uint16], Tensor[(2, 13, 15), float32], Tensor[(9, 4, 14), float64]) {
  @func_12521(%var_12522) /* ty=(Tensor[(2, 13, 15), uint16], Tensor[(2, 13, 15), float32], Tensor[(9, 4, 14), float64]) */
}

def @func_11934(%var_11916: Tensor[(336), bool]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(3, 12, 4), float64], bool, Tensor[(336), bool], Tensor[(13, 16, 9), float64]) {
  %0 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %1 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %2 = cast(%var_11916, dtype="bool") /* ty=Tensor[(336), bool] */;
  %3 = reshape(%1, newshape=[]) /* ty=bool */;
  %4 = reshape(%2, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %5 = @func_1260(%3, %4) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %6 = @func_5910() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %7 = @func_7464() /* ty=Tensor[(9, 4, 14), float64] */;
  %8 = %0.0;
  %9 = %5.1;
  %10 = %6.0;
  (%7, %8, %9, True /* ty=bool */, %var_11916, %10)
}

def @func_5826() -> Tensor[(9, 4, 14), float64] {
  %11 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %11.0
}

def @func_6568() -> Tensor[(9, 4, 14), float64] {
  %12 = fn () -> Tensor[(9, 4, 14), float64] {
    @func_5826() /* ty=Tensor[(9, 4, 14), float64] */
  };
  %12() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_8809(%var_8804: Tensor[(11, 12, 8), float64], %var_8805: Tensor[(2080), float64], %var_8806: Tensor[(6, 3), float32], %var_8807: Tensor[(432), int32], %var_8808: Tensor[(2535), int16]) -> (Tensor[(9, 4, 14), uint32], Tensor[(90), float64], Tensor[(2080), float64], Tensor[(6, 3), float32], Tensor[(432), int32], Tensor[(4, 120), float64], Tensor[(2535), int16], Tensor[(?, 9, 2), bool], Tensor[(11, 12, 8), uint32]) {
  %40 = fn (%var_8735: Tensor[(11, 12, 8), float64], %var_8768: Tensor[(2080), float64], %var_8769: Tensor[(6, 3), float32], %var_8770: Tensor[(432), int32], %var_8772: Tensor[(2535), int16]) -> (Tensor[(9, 4, 14), uint32], Tensor[(90), float64], Tensor[(2080), float64], Tensor[(6, 3), float32], Tensor[(432), int32], Tensor[(4, 120), float64], Tensor[(2535), int16], Tensor[(?, 9, 2), bool], Tensor[(11, 12, 8), uint32]) {
    %13 = @func_8532() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
    %14 = %13.1;
    %15 = cast(%14, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
    %16 = cast(%var_8768, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %17 = cast(%var_8769, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
    %18 = cast(%var_8770, dtype="int32") /* ty=Tensor[(432), int32] */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 120), float64] */, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
    %20 = cast(%var_8772, dtype="int16") /* ty=Tensor[(2535), int16] */;
    %21 = reshape(%15, newshape=[9, 4, 14]) /* ty=Tensor[(9, 4, 14), float64] */;
    %22 = reshape(%16, newshape=[2080]) /* ty=Tensor[(2080), float64] */;
    %23 = reshape(%17, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %24 = reshape(%18, newshape=[432]) /* ty=Tensor[(432), int32] */;
    %25 = reshape(%19, newshape=[2, 240]) /* ty=Tensor[(2, 240), float64] */;
    %26 = reshape(%20, newshape=[2535]) /* ty=Tensor[(2535), int16] */;
    %27 = @func_6259(%21, %22, %23, %24, %25, %26) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(176), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 5, 5), bool], Tensor[(432), int32], Tensor[(2, 240), float64], Tensor[(2, 72), float64], Tensor[(2535), uint8], Tensor[(13, 16, 10), float32], Tensor[(13, 16, 9), float64]) */;
    %28 = cast(%var_8769, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
    %29 = reshape(%28, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
    %30 = @func_107(%29) /* ty=(Tensor[(?, 9, 2), bool],) */;
    %31 = cast(%var_8735, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %32 = tan(%31) /* ty=Tensor[(11, 12, 8), float64] */;
    %33 = cast(%var_8735, dtype="uint32") /* ty=Tensor[(11, 12, 8), uint32] */;
    %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
    %35 = cast(%32, dtype="uint32") /* ty=Tensor[(11, 12, 8), uint32] */;
    %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %37 = %27.4;
    %38 = %30.0;
    %39 = maximum(%35, %36) /* ty=Tensor[(11, 12, 8), uint32] */;
    (%14, %37, %var_8768, %var_8769, %var_8770, meta[relay.Constant][0] /* ty=Tensor[(4, 120), float64] */, %var_8772, %38, %39)
  };
  %40(%var_8804, %var_8805, %var_8806, %var_8807, %var_8808) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(90), float64], Tensor[(2080), float64], Tensor[(6, 3), float32], Tensor[(432), int32], Tensor[(4, 120), float64], Tensor[(2535), int16], Tensor[(?, 9, 2), bool], Tensor[(11, 12, 8), uint32]) */
}

def @func_7045(%var_7044: Tensor[(2, 9, 2), bool]) -> (Tensor[(2, 9, 2), bool],) {
  %46 = fn (%var_7030: Tensor[(2, 9, 2), bool]) -> (Tensor[(2, 9, 2), bool],) {
    %41 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
    %42 = %41.3;
    %43 = cast(%42, dtype="bool") /* ty=Tensor[(?, 9, 2), bool] */;
    %44 = cast(%var_7030, dtype="bool") /* ty=Tensor[(2, 9, 2), bool] */;
    %45 = equal(%43, %44) /* ty=Tensor[(2, 9, 2), bool] */;
    (%45,)
  };
  %46(%var_7044) /* ty=(Tensor[(2, 9, 2), bool],) */
}

def @func_4170(%var_4141: bool, %var_4149: Tensor[(480), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(144), float64], bool, Tensor[(336), bool], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(2, 6, 11), float64], Tensor[(3, 12, 4), float64], Tensor[(33, 4), float64], bool, Tensor[(176), float64]) {
  %47 = cast(%var_4141, dtype="bool") /* ty=bool */;
  %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %49 = reshape(%47, newshape=[]) /* ty=bool */;
  %50 = reshape(%48, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %51 = @func_1260(%49, %50) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %52 = cast(%var_4149, dtype="float64") /* ty=Tensor[(480), float64] */;
  %53 = reshape(%52, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(33, 4), float64] */, dtype="float64") /* ty=Tensor[(33, 4), float64] */;
  %55 = reshape(%54, newshape=[2, 6, 11]) /* ty=Tensor[(2, 6, 11), float64] */;
  %56 = cast(%var_4141, dtype="bool") /* ty=bool */;
  %57 = cast(meta[relay.Constant][1] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %58 = reshape(%56, newshape=[]) /* ty=bool */;
  %59 = reshape(%57, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %60 = @func_1260(%58, %59) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(33, 4), float64] */, dtype="float64") /* ty=Tensor[(33, 4), float64] */;
  %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %63 = reshape(%62, newshape=[11, 8, 2]) /* ty=Tensor[(11, 8, 2), float64] */;
  %64 = @func_2245(%63) /* ty=(Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) */;
  %65 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %66 = %51.2;
  %67 = @func_1457(%53) /* ty=Tensor[(16, 2, 15), bool] */;
  %68 = @func_1914(%55) /* ty=Tensor[(2, 6, 11), float64] */;
  %69 = %60.3;
  %70 = exp(%61) /* ty=Tensor[(33, 4), float64] */;
  %71 = %64.2;
  (%65, %66, %var_4141, meta[relay.Constant][1] /* ty=Tensor[(336), bool] */, %67, %var_4149, %68, %69, %70, %71, meta[relay.Constant][3] /* ty=Tensor[(176), float64] */)
}

def @func_8637(%var_8635: Tensor[(14, 10, 13), int64], %var_8636: Tensor[(14, 10, 13), int64]) -> (Tensor[(14, 10, 13), bool], Tensor[(14, 10, 13), bool], Tensor[(33, 4), float64], bool, Tensor[(480), float64], Tensor[(9, 4, 14), uint32], Tensor[(14, 10, 13), float64]) {
  @func_8633(%var_8635, %var_8636) /* ty=(Tensor[(14, 10, 13), bool], Tensor[(14, 10, 13), bool], Tensor[(33, 4), float64], bool, Tensor[(480), float64], Tensor[(9, 4, 14), uint32], Tensor[(14, 10, 13), float64]) */
}

def @func_9741() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %72 = @func_8532() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %73 = @func_8982() /* ty=Tensor[(9, 4, 14), uint32] */;
  %74 = %72.1;
  (%73, %74)
}

def @func_9609() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  @func_9607() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */
}

def @func_5769(%var_5766: Tensor[(14, 8, 1), int16], %var_5767: Tensor[(14, 8, 9), int16], %var_5768: Tensor[(14, 8, 9), int16]) -> (Tensor[(14, 8, 9), bool], Tensor[(14, 8, 9), uint8]) {
  %90 = fn (%var_5727: Tensor[(14, 8, 1), int16], %var_5728: Tensor[(14, 8, 9), int16], %var_5758: Tensor[(14, 8, 9), int16]) -> (Tensor[(14, 8, 9), bool], Tensor[(14, 8, 9), uint8]) {
    %75 = cast(%var_5728, dtype="float32") /* ty=Tensor[(14, 8, 9), float32] */;
    %76 = log2(%75) /* ty=Tensor[(14, 8, 9), float32] */;
    %77 = cast(%var_5727, dtype="int16") /* ty=Tensor[(14, 8, 1), int16] */;
    %78 = cast(%var_5728, dtype="int16") /* ty=Tensor[(14, 8, 9), int16] */;
    %79 = bitwise_and(%77, %78) /* ty=Tensor[(14, 8, 9), int16] */;
    %80 = cast(%79, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
    %81 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
    %82 = cast(%76, dtype="bool") /* ty=Tensor[(14, 8, 9), bool] */;
    %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %84 = cast(%var_5758, dtype="uint8") /* ty=Tensor[(14, 8, 9), uint8] */;
    %85 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
    %86 = cast(%79, dtype="uint8") /* ty=Tensor[(14, 8, 9), uint8] */;
    %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %88 = not_equal(%82, %83) /* ty=Tensor[(14, 8, 9), bool] */;
    %89 = bitwise_xor(%86, %87) /* ty=Tensor[(14, 8, 9), uint8] */;
    (%88, %89)
  };
  %90(%var_5766, %var_5767, %var_5768) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(14, 8, 9), uint8]) */
}

def @func_6266(%var_6260: Tensor[(9, 4, 14), float64], %var_6261: Tensor[(2080), float64], %var_6262: Tensor[(18), float32], %var_6263: Tensor[(432), int32], %var_6264: Tensor[(2, 240), float64], %var_6265: Tensor[(2535), int16]) -> (Tensor[(9, 4, 14), float32], Tensor[(176), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 5, 5), bool], Tensor[(432), int32], Tensor[(2, 240), float64], Tensor[(2, 72), float64], Tensor[(2535), uint8], Tensor[(13, 16, 10), float32], Tensor[(13, 16, 9), float64]) {
  %136 = fn (%var_6189: Tensor[(9, 4, 14), float64], %var_6201: Tensor[(2080), float64], %var_6226: Tensor[(18), float32], %var_6240: Tensor[(432), int32], %var_6241: Tensor[(2, 240), float64], %var_6244: Tensor[(2535), int16]) -> (Tensor[(9, 4, 14), float32], Tensor[(176), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 5, 5), bool], Tensor[(432), int32], Tensor[(2, 240), float64], Tensor[(2, 72), float64], Tensor[(2535), uint8], Tensor[(13, 16, 10), float32], Tensor[(13, 16, 9), float64]) {
    %91 = @func_6128() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %92 = %91.0;
    %93 = cast(%var_6189, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
    %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(3), int32] */;
    %95 = cast(%92, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
    %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %97 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
    %98 = cast(%var_6226, dtype="float32") /* ty=Tensor[(18), float32] */;
    %99 = reshape(%98, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %100 = @func_4757(%99) /* ty=(Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) */;
    %101 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %102 = cast(meta[relay.Constant][5] /* ty=Tensor[(2535), int16] */, dtype="int16") /* ty=Tensor[(2535), int16] */;
    %103 = cast(%var_6240, dtype="int32") /* ty=Tensor[(432), int32] */;
    %104 = cast(%var_6241, dtype="float64") /* ty=Tensor[(2, 240), float64] */;
    %105 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 72), float64] */, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
    %106 = reshape(%102, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), int16] */;
    %107 = reshape(%103, newshape=[432]) /* ty=Tensor[(432), int32] */;
    %108 = reshape(%104, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %109 = reshape(%105, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %110 = @func_4698(%106, %107, %108, %109) /* ty=(Tensor[(13, 13, 15), int16], Tensor[(432), int32], Tensor[(480), float64], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), float64], Tensor[(2, 5, 5), bool], Tensor[(5, 10), float64]) */;
    %111 = cast(%var_6244, dtype="uint8") /* ty=Tensor[(2535), uint8] */;
    %112 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(2535), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %113 = cast(meta[relay.Constant][5] /* ty=Tensor[(2535), int16] */, dtype="uint8") /* ty=Tensor[(2535), uint8] */;
    %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %115 = cast(%var_6201, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %116 = cast(meta[relay.Constant][4] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %117 = cast(%var_6201, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %118 = reshape(%115, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %119 = reshape(%116, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %120 = reshape(%117, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %121 = @func_1982(%118, %119, %120) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
    %122 = %121.4;
    %123 = cast(%122, dtype="float32") /* ty=Tensor[(13, 16, 10), float32] */;
    %124 = rsqrt(%123) /* ty=Tensor[(13, 16, 10), float32] */;
    %125 = cast(%124, dtype="float32") /* ty=Tensor[(13, 16, 10), float32] */;
    %126 = power(%95, %96) /* ty=Tensor[(9, 4, 14), float32] */;
    %127 = %97.0;
    %128 = @func_6179() /* ty=Tensor[(9, 4, 14), float64] */;
    %129 = %100.1;
    %130 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
    %131 = %101.0;
    %132 = %110.7;
    %133 = left_shift(%113, %114) /* ty=Tensor[(2535), uint8] */;
    %134 = sinh(%125) /* ty=Tensor[(13, 16, 10), float32] */;
    %135 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
    (%126, %127, %128, %var_6201, meta[relay.Constant][4] /* ty=Tensor[(90), float64] */, %129, %var_6226, %130, %131, %132, %var_6240, %var_6241, meta[relay.Constant][6] /* ty=Tensor[(2, 72), float64] */, %133, %134, %135)
  };
  %136(%var_6260, %var_6261, %var_6262, %var_6263, %var_6264, %var_6265) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(176), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 5, 5), bool], Tensor[(432), int32], Tensor[(2, 240), float64], Tensor[(2, 72), float64], Tensor[(2535), uint8], Tensor[(13, 16, 10), float32], Tensor[(13, 16, 9), float64]) */
}

def @func_6924(%var_6915: Tensor[(13, 16, 9), float64]) -> (Tensor[(13, 16, 9), uint64],) {
  %137 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %138 = %137.0;
  %139 = cast(%var_6915, dtype="uint64") /* ty=Tensor[(13, 16, 9), uint64] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="uint64") /* ty=Tensor[(13, 16, 9), uint64] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %143 = right_shift(%141, %142) /* ty=Tensor[(13, 16, 9), uint64] */;
  (%143,)
}

def @func_12436() -> (Tensor[(9, 4, 14), float32],) {
  %146 = fn () -> (Tensor[(9, 4, 14), float32],) {
    %144 = @func_8156() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float32]) */;
    %145 = %144.1;
    (%145,)
  };
  %146() /* ty=(Tensor[(9, 4, 14), float32],) */
}

def @func_8337() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) {
  @func_8335() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) */
}

def @func_9569() -> (Tensor[(9, 4, 14), float32], Tensor[(13, 16, 9), float64]) {
  %151 = fn () -> (Tensor[(9, 4, 14), float32], Tensor[(13, 16, 9), float64]) {
    %147 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
    %148 = @func_7216() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
    %149 = %147.0;
    %150 = %148.4;
    (%149, %150)
  };
  %151() /* ty=(Tensor[(9, 4, 14), float32], Tensor[(13, 16, 9), float64]) */
}

def @func_6423() -> (Tensor[(13, 16, 9), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(16, 2, 15), bool]) {
  %152 = cast(meta[relay.Constant][7] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %153 = reshape(%152, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %154 = @func_107(%153) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %155 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %156 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
  %157 = %154.0;
  %158 = %155.1;
  (%156, %157, meta[relay.Constant][7] /* ty=Tensor[(18), float32] */, %158)
}

def @func_9743() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  @func_9741() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */
}

def @func_6179() -> Tensor[(9, 4, 14), float64] {
  %159 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %159.0
}

def @func_3706(%var_3702: int32, %var_3703: Tensor[(9, 12, 4), int32], %var_3704: Tensor[(192), int8], %var_3705: Tensor[(8, 18), float64]) -> (Tensor[(9, 12, 4), int32], Tensor[(13, 16, 10), bool], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(16, 2, 15), bool], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 12, 4), bool], Tensor[(16, 2, 15), bool], Tensor[(?, 9, 2), bool], Tensor[(8, 18), float64]) {
  %190 = fn (%var_3634: int32, %var_3635: Tensor[(9, 12, 4), int32], %var_3667: Tensor[(192), int8], %var_3699: Tensor[(8, 18), float64]) -> (Tensor[(9, 12, 4), int32], Tensor[(13, 16, 10), bool], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(16, 2, 15), bool], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 12, 4), bool], Tensor[(16, 2, 15), bool], Tensor[(?, 9, 2), bool], Tensor[(8, 18), float64]) {
    %160 = cast(%var_3634, dtype="int32") /* ty=int32 */;
    %161 = cast(%var_3635, dtype="int32") /* ty=Tensor[(9, 12, 4), int32] */;
    %162 = cast(meta[relay.Constant][8] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %163 = cast(meta[relay.Constant][9] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %164 = cast(meta[relay.Constant][8] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %165 = reshape(%162, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %166 = reshape(%163, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %167 = reshape(%164, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %168 = @func_1982(%165, %166, %167) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
    %169 = cast(%var_3667, dtype="int8") /* ty=Tensor[(192), int8] */;
    %170 = cast(meta[relay.Constant][10] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
    %171 = reshape(%169, newshape=[4, 4, 12]) /* ty=Tensor[(4, 4, 12), int8] */;
    %172 = reshape(%170, newshape=[336]) /* ty=Tensor[(336), bool] */;
    %173 = @func_2214(%171, %172) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(4, 4, 12), int16], Tensor[(3, 12, 4), float64], Tensor[(336), bool]) */;
    %174 = cast(%var_3634, dtype="float64") /* ty=float64 */;
    %175 = cast(%var_3635, dtype="float64") /* ty=Tensor[(9, 12, 4), float64] */;
    %176 = power(%174, %175) /* ty=Tensor[(9, 12, 4), float64] */;
    %177 = cast(%176, dtype="bool") /* ty=Tensor[(9, 12, 4), bool] */;
    %178 = cast(%var_3634, dtype="bool") /* ty=bool */;
    %179 = %173.0;
    %180 = cast(%179, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
    %181 = reshape(%180, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
    %182 = cast(%var_3699, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
    %183 = reshape(%182, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
    %184 = @func_211(%183) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
    %185 = add(%160, %161) /* ty=Tensor[(9, 12, 4), int32] */;
    %186 = %168.4;
    %187 = less(%177, %178) /* ty=Tensor[(9, 12, 4), bool] */;
    %188 = @func_1457(%181) /* ty=Tensor[(16, 2, 15), bool] */;
    %189 = %184.1;
    (%185, %186, meta[relay.Constant][8] /* ty=Tensor[(2080), float64] */, meta[relay.Constant][9] /* ty=Tensor[(90), float64] */, %179, %var_3667, meta[relay.Constant][10] /* ty=Tensor[(336), bool] */, %187, %188, %189, %var_3699)
  };
  %190(%var_3702, %var_3703, %var_3704, %var_3705) /* ty=(Tensor[(9, 12, 4), int32], Tensor[(13, 16, 10), bool], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(16, 2, 15), bool], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 12, 4), bool], Tensor[(16, 2, 15), bool], Tensor[(?, 9, 2), bool], Tensor[(8, 18), float64]) */
}

def @func_4961() -> Tensor[(9, 4, 14), uint32] {
  %192 = fn () -> Tensor[(9, 4, 14), uint32] {
    %191 = @func_4931() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) */;
    %191.1
  };
  %192() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_6037() -> (Tensor[(9, 4, 14), float64],) {
  %195 = fn () -> (Tensor[(9, 4, 14), float64],) {
    %193 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %194 = %193.0;
    (%194,)
  };
  %195() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_9250(%var_9249: Tensor[(660), uint32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(15, 11, 4), float32], Tensor[(44, 1), uint32], Tensor[(660), uint32]) {
  %203 = fn (%var_9242: Tensor[(660), uint32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(15, 11, 4), float32], Tensor[(44, 1), uint32], Tensor[(660), uint32]) {
    %196 = cast(meta[relay.Constant][11] /* ty=Tensor[(44, 1), uint32] */, dtype="uint32") /* ty=Tensor[(44, 1), uint32] */;
    %197 = cast(%var_9242, dtype="uint32") /* ty=Tensor[(660), uint32] */;
    %198 = reshape(%196, newshape=[1, 11, 4]) /* ty=Tensor[(1, 11, 4), uint32] */;
    %199 = reshape(%197, newshape=[15, 11, 4]) /* ty=Tensor[(15, 11, 4), uint32] */;
    %200 = @func_8708(%198, %199) /* ty=(Tensor[(15, 11, 4), int32], Tensor[(1, 11, 4), float64], Tensor[(15, 11, 4), float32]) */;
    %201 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
    %202 = %200.2;
    (%201, %202, meta[relay.Constant][11] /* ty=Tensor[(44, 1), uint32] */, %var_9242)
  };
  %203(%var_9249) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(15, 11, 4), float32], Tensor[(44, 1), uint32], Tensor[(660), uint32]) */
}

def @func_11119(%var_11116: Tensor[(15, 15, 10), float32], %var_11117: Tensor[(1872), float64], %var_11118: Tensor[(18), float32]) -> (Tensor[(15, 15, 10), float32], Tensor[(9, 4, 14), float64], Tensor[(1872), float64], Tensor[(1872), float64], Tensor[(18), float32]) {
  %215 = fn (%var_11085: Tensor[(15, 15, 10), float32], %var_11111: Tensor[(1872), float64], %var_11112: Tensor[(18), float32]) -> (Tensor[(15, 15, 10), float32], Tensor[(9, 4, 14), float64], Tensor[(1872), float64], Tensor[(1872), float64], Tensor[(18), float32]) {
    %204 = cast(%var_11085, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
    %205 = cast(%var_11111, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %206 = cast(%var_11111, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
    %207 = cast(%var_11112, dtype="float32") /* ty=Tensor[(18), float32] */;
    %208 = reshape(%205, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
    %209 = reshape(%206, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), uint64] */;
    %210 = reshape(%207, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %211 = @func_10274(%208, %209, %210) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(1872), float64], Tensor[(176), float64], Tensor[(13, 16, 9), uint64], Tensor[(176), float64], Tensor[(9, 4, 14), float32], Tensor[(18), float32]) */;
    %212 = tan(%204) /* ty=Tensor[(15, 15, 10), float32] */;
    %213 = @func_5826() /* ty=Tensor[(9, 4, 14), float64] */;
    %214 = %211.1;
    (%212, %213, %214, %var_11111, %var_11112)
  };
  %215(%var_11116, %var_11117, %var_11118) /* ty=(Tensor[(15, 15, 10), float32], Tensor[(9, 4, 14), float64], Tensor[(1872), float64], Tensor[(1872), float64], Tensor[(18), float32]) */
}

def @func_10889(%var_10887: uint32, %var_10888: Tensor[(3, 8, 6), uint32]) -> (Tensor[(3, 8, 6), bool],) {
  @func_10885(%var_10887, %var_10888) /* ty=(Tensor[(3, 8, 6), bool],) */
}

def @func_4888() -> (Tensor[(13, 16, 9), float64],) {
  %217 = fn () -> (Tensor[(13, 16, 9), float64],) {
    %216 = @func_4237() /* ty=Tensor[(13, 16, 9), float64] */;
    (%216,)
  };
  %217() /* ty=(Tensor[(13, 16, 9), float64],) */
}

def @func_2245(%var_2234: Tensor[(11, 8, 2), float64]) -> (Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) {
  %218 = cast(%var_2234, dtype="float64") /* ty=Tensor[(11, 8, 2), float64] */;
  %219 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %220 = cast(meta[relay.Constant][12] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %221 = reshape(%219, newshape=[]) /* ty=bool */;
  %222 = reshape(%220, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %223 = @func_1260(%221, %222) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %224 = cosh(%218) /* ty=Tensor[(11, 8, 2), float64] */;
  %225 = %223.0;
  (%224, %225, False /* ty=bool */, meta[relay.Constant][12] /* ty=Tensor[(336), bool] */)
}

def @func_4816() -> (Tensor[(9, 4, 14), uint32],) {
  @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_5878(%var_5855: Tensor[(1008), int16]) -> (Tensor[(90), float64], Tensor[(1, 1872), float64], Tensor[(14, 8, 9), uint8], Tensor[(112), int16], Tensor[(1008), int16], Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float32]) {
  %226 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 1872), float64] */, dtype="float64") /* ty=Tensor[(1, 1872), float64] */;
  %227 = reshape(%226, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %228 = @func_5273(%227) /* ty=(Tensor[(13, 16, 9), bool], Tensor[(144), float64], Tensor[(1040, 2), float64], Tensor[(90), float64]) */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(112), int16] */, dtype="int16") /* ty=Tensor[(112), int16] */;
  %230 = cast(%var_5855, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %231 = cast(%var_5855, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %232 = reshape(%229, newshape=[14, 8, 1]) /* ty=Tensor[(14, 8, 1), int16] */;
  %233 = reshape(%230, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), int16] */;
  %234 = reshape(%231, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), int16] */;
  %235 = @func_5765(%232, %233, %234) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(14, 8, 9), uint8]) */;
  %236 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %237 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 4, 14), float64] */, dtype="uint8") /* ty=Tensor[(9, 4, 14), uint8] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%236, dtype="uint8") /* ty=Tensor[(9, 4, 14), uint8] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %241 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %242 = %228.3;
  %243 = %235.1;
  %244 = left_shift(%239, %240) /* ty=Tensor[(9, 4, 14), uint8] */;
  %245 = %241.0;
  (%242, meta[relay.Constant][13] /* ty=Tensor[(1, 1872), float64] */, %243, meta[relay.Constant][14] /* ty=Tensor[(112), int16] */, %var_5855, %244, %245)
}

def @func_11162(%var_11160: Tensor[(4, 520), float64], %var_11161: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(4, 520), float64], Tensor[(90), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  @func_11158(%var_11160, %var_11161) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(4, 520), float64], Tensor[(90), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */
}

def @func_4733(%var_4732: Tensor[(15, 10, 6), float64]) -> (Tensor[(15, 10, 6), float64], Tensor[(9, 4, 14), float64]) {
  %250 = fn (%var_4725: Tensor[(15, 10, 6), float64]) -> (Tensor[(15, 10, 6), float64], Tensor[(9, 4, 14), float64]) {
    %246 = cast(%var_4725, dtype="float64") /* ty=Tensor[(15, 10, 6), float64] */;
    %247 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %248 = sigmoid(%246) /* ty=Tensor[(15, 10, 6), float64] */;
    %249 = %247.0;
    (%248, %249)
  };
  %250(%var_4732) /* ty=(Tensor[(15, 10, 6), float64], Tensor[(9, 4, 14), float64]) */
}

def @func_11680() -> Tensor[(9, 4, 14), uint32] {
  %252 = fn () -> Tensor[(9, 4, 14), uint32] {
    %251 = @func_7787() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %251.0
  };
  %252() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_11937(%var_11935: Tensor[(336), bool]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(3, 12, 4), float64], bool, Tensor[(336), bool], Tensor[(13, 16, 9), float64]) {
  @func_11934(%var_11935) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(3, 12, 4), float64], bool, Tensor[(336), bool], Tensor[(13, 16, 9), float64]) */
}

def @func_10274(%var_10193: Tensor[(1872), float64], %var_10226: Tensor[(13, 16, 9), uint64], %var_10252: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(1872), float64], Tensor[(176), float64], Tensor[(13, 16, 9), uint64], Tensor[(176), float64], Tensor[(9, 4, 14), float32], Tensor[(18), float32]) {
  %253 = @func_5449() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %254 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %255 = cast(%var_10193, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %256 = reshape(%255, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %257 = @func_6924(%256) /* ty=(Tensor[(13, 16, 9), uint64],) */;
  %258 = %257.0;
  %259 = cast(%var_10226, dtype="uint64") /* ty=Tensor[(13, 16, 9), uint64] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%258, dtype="uint64") /* ty=Tensor[(13, 16, 9), uint64] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %263 = @func_6504() /* ty=(Tensor[(176), float64],) */;
  %264 = cast(%var_10252, dtype="float32") /* ty=Tensor[(18), float32] */;
  %265 = reshape(%264, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %266 = @func_5722(%265) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(18), float64]) */;
  %267 = %253.0;
  %268 = %254.2;
  %269 = bitwise_or(%261, %262) /* ty=Tensor[(13, 16, 9), uint64] */;
  %270 = %263.0;
  %271 = %266.0;
  (%267, %var_10193, %268, %269, %270, %271, %var_10252)
}

def @func_7788() -> (Tensor[(9, 4, 14), uint32],) {
  %274 = fn () -> (Tensor[(9, 4, 14), uint32],) {
    %272 = @func_7425() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(?, 9, 2), float64]) */;
    %273 = %272.1;
    (%273,)
  };
  %274() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_9849() -> (Tensor[(9, 4, 14), float64],) {
  @func_9847() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_12418() -> Tensor[(9, 4, 14), float64] {
  %276 = fn () -> Tensor[(9, 4, 14), float64] {
    %275 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
    %275.0
  };
  %276() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_5662() -> (Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) {
  %277 = @func_5604() /* ty=(Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %278 = cast(meta[relay.Constant][16] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %279 = reshape(%278, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %280 = @func_5604() /* ty=(Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %281 = %277.0;
  %282 = @func_1457(%279) /* ty=Tensor[(16, 2, 15), bool] */;
  %283 = %280.1;
  (%281, %282, meta[relay.Constant][16] /* ty=Tensor[(480), float64] */, %283)
}

def @func_4993() -> Tensor[(9, 4, 14), float64] {
  @func_4991() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_5479() -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64]) {
  @func_5477() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64]) */
}

def @func_7097() -> (Tensor[(9, 4, 14), uint32],) {
  @func_7095() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_9059() -> Tensor[(9, 4, 14), float64] {
  @func_9057() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_9279() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  @func_9277() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */
}

def @func_4760(%var_4758: Tensor[(18), float32]) -> (Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) {
  @func_4757(%var_4758) /* ty=(Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) */
}

def @func_8215() -> Tensor[(9, 4, 14), uint32] {
  %285 = fn () -> Tensor[(9, 4, 14), uint32] {
    %284 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
    %284.1
  };
  %285() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_9230() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  @func_9228() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */
}

def @func_11783() -> (Tensor[(176), float64],) {
  %288 = fn () -> (Tensor[(176), float64],) {
    %286 = @func_6504() /* ty=(Tensor[(176), float64],) */;
    %287 = %286.0;
    (%287,)
  };
  %288() /* ty=(Tensor[(176), float64],) */
}

def @func_11825() -> (Tensor[(9, 4, 14), uint32],) {
  %289 = @func_9892() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %290 = %289.0;
  (%290,)
}

def @func_5664() -> (Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) {
  @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */
}

def @func_8974() -> (Tensor[(9, 4, 14), uint32],) {
  %291 = @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %292 = %291.1;
  (%292,)
}

def @func_11547(%var_11544: Tensor[(7, 6, 6), int16], %var_11545: Tensor[(7, 6, 6), int16], %var_11546: Tensor[(1872), float64]) -> (Tensor[(7, 6, 6), int16], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64]) {
  @func_11542(%var_11544, %var_11545, %var_11546) /* ty=(Tensor[(7, 6, 6), int16], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64]) */
}

def @func_4237() -> Tensor[(13, 16, 9), float64] {
  %293 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 16, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
  log(%293) /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_4352(%var_4331: Tensor[(432), int32], %var_4337: Tensor[(4, 120), float64]) -> (Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(336), bool], int32, Tensor[(432), int32], Tensor[(192), int8], Tensor[(16, 2, 15), bool], Tensor[(4, 120), float64], Tensor[(3, 12, 4), float64]) {
  %294 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %295 = cast(meta[relay.Constant][18] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %296 = reshape(%295, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %297 = @func_211(%296) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %298 = %297.2;
  %299 = cast(%298, dtype="float32") /* ty=Tensor[(18), float32] */;
  %300 = reshape(%299, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %301 = @func_107(%300) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %302 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %303 = cast(%var_4331, dtype="int32") /* ty=Tensor[(432), int32] */;
  %304 = cast(meta[relay.Constant][19] /* ty=Tensor[(192), int8] */, dtype="int8") /* ty=Tensor[(192), int8] */;
  %305 = cast(meta[relay.Constant][18] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %306 = reshape(%302, newshape=[]) /* ty=int32 */;
  %307 = reshape(%303, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int32] */;
  %308 = reshape(%304, newshape=[192]) /* ty=Tensor[(192), int8] */;
  %309 = reshape(%305, newshape=[8, 18]) /* ty=Tensor[(8, 18), float64] */;
  %310 = @func_3701(%306, %307, %308, %309) /* ty=(Tensor[(9, 12, 4), int32], Tensor[(13, 16, 10), bool], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(16, 2, 15), bool], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 12, 4), bool], Tensor[(16, 2, 15), bool], Tensor[(?, 9, 2), bool], Tensor[(8, 18), float64]) */;
  %311 = cast(%var_4337, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %312 = reshape(%311, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %313 = cast(7 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %314 = %310.6;
  %315 = cast(%314, dtype="bool") /* ty=Tensor[(336), bool] */;
  %316 = reshape(%313, newshape=[]) /* ty=bool */;
  %317 = reshape(%315, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %318 = @func_1260(%316, %317) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %319 = %294.0;
  %320 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %321 = %301.0;
  %322 = @func_1457(%312) /* ty=Tensor[(16, 2, 15), bool] */;
  %323 = %318.1;
  (%319, %298, meta[relay.Constant][18] /* ty=Tensor[(144), float64] */, %320, %321, %314, 7 /* ty=int32 */, %var_4331, meta[relay.Constant][19] /* ty=Tensor[(192), int8] */, %322, %var_4337, %323)
}

def @func_6577() -> Tensor[(13, 16, 9), float64] {
  @func_6575() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_12692() -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool]) {
  %324 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %325 = @func_12365() /* ty=(Tensor[(?, 9, 2), bool],) */;
  %326 = %324.0;
  %327 = %325.0;
  (%326, %327)
}

def @func_888(%var_886: Tensor[(2, 10, 13), float32]) -> (Tensor[(2, 10, 13), float32],) {
  @func_885(%var_886) /* ty=(Tensor[(2, 10, 13), float32],) */
}

def @func_5828() -> Tensor[(9, 4, 14), float64] {
  @func_5826() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_5722(%var_5687: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(18), float64]) {
  %328 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %329 = cast(%var_5687, dtype="float32") /* ty=Tensor[(18), float32] */;
  %330 = reshape(%329, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %331 = @func_4757(%330) /* ty=(Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) */;
  %332 = cast(%var_5687, dtype="float64") /* ty=Tensor[(18), float64] */;
  %333 = %328.0;
  %334 = %331.2;
  %335 = rsqrt(%332) /* ty=Tensor[(18), float64] */;
  (%333, %334, %335)
}

def @func_2248(%var_2246: Tensor[(11, 8, 2), float64]) -> (Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) {
  @func_2245(%var_2246) /* ty=(Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) */
}

def @func_10279(%var_10276: Tensor[(1872), float64], %var_10277: Tensor[(13, 16, 9), uint64], %var_10278: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(1872), float64], Tensor[(176), float64], Tensor[(13, 16, 9), uint64], Tensor[(176), float64], Tensor[(9, 4, 14), float32], Tensor[(18), float32]) {
  @func_10274(%var_10276, %var_10277, %var_10278) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(1872), float64], Tensor[(176), float64], Tensor[(13, 16, 9), uint64], Tensor[(176), float64], Tensor[(9, 4, 14), float32], Tensor[(18), float32]) */
}

def @func_10144() -> Tensor[(9, 4, 14), uint32] {
  %336 = @func_4568() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %336.1
}

def @func_10554() -> Tensor[(?, 9, 2), bool] {
  %337 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %337.3
}

def @func_9785(%var_9761: Tensor[(9, 4, 14), float64]) -> (Tensor[(90), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), bool]) {
  %338 = @func_6482() /* ty=Tensor[(9, 4, 14), float64] */;
  %339 = cast(%var_9761, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %343 = cast(meta[relay.Constant][20] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %344 = reshape(%343, newshape=[9, 10, 1]) /* ty=Tensor[(9, 10, 1), float64] */;
  %345 = @func_940(%344) /* ty=Tensor[(9, 10, ?), int64] */;
  %346 = cast(%345, dtype="float32") /* ty=Tensor[(9, 10, ?), float32] */;
  %347 = atanh(%346) /* ty=Tensor[(9, 10, ?), float32] */;
  %348 = cast(%345, dtype="bool") /* ty=Tensor[(9, 10, ?), bool] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="bool") /* ty=Tensor[(9, 10, ?), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %352 = divide(%341, %342) /* ty=Tensor[(9, 4, 14), float64] */;
  %353 = @func_9169() /* ty=Tensor[(9, 4, 14), float64] */;
  %354 = equal(%350, %351) /* ty=Tensor[(9, 10, ?), bool] */;
  (meta[relay.Constant][20] /* ty=Tensor[(90), float64] */, %352, %353, %354)
}

def @func_9607() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %355 = @func_7464() /* ty=Tensor[(9, 4, 14), float64] */;
  %356 = @func_8982() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%355, %356)
}

def @func_9847() -> (Tensor[(9, 4, 14), float64],) {
  %357 = @func_7313() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %358 = %357.0;
  (%358,)
}

def @func_11055() -> Tensor[(13, 16, 9), float64] {
  @func_9727() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_11734() -> (Tensor[(9, 4, 14), float64],) {
  %360 = fn () -> (Tensor[(9, 4, 14), float64],) {
    %359 = @func_6179() /* ty=Tensor[(9, 4, 14), float64] */;
    (%359,)
  };
  %360() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_6106(%var_6105: Tensor[(176), float64]) -> (Tensor[(9, 4, 14), uint32], Tensor[(336), bool], Tensor[(176), float64], Tensor[(9, 4, 14), float32]) {
  %369 = fn (%var_6085: Tensor[(176), float64]) -> (Tensor[(9, 4, 14), uint32], Tensor[(336), bool], Tensor[(176), float64], Tensor[(9, 4, 14), float32]) {
    %361 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %362 = cast(%var_6085, dtype="float64") /* ty=Tensor[(176), float64] */;
    %363 = reshape(%362, newshape=[11, 8, 2]) /* ty=Tensor[(11, 8, 2), float64] */;
    %364 = @func_2245(%363) /* ty=(Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) */;
    %365 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
    %366 = %361.0;
    %367 = %364.3;
    %368 = %365.0;
    (%366, %367, %var_6085, %368)
  };
  %369(%var_6105) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(336), bool], Tensor[(176), float64], Tensor[(9, 4, 14), float32]) */
}

def @func_4513() -> (Tensor[(9, 4, 14), float64],) {
  %371 = fn () -> (Tensor[(9, 4, 14), float64],) {
    %370 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
    (%370,)
  };
  %371() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_1914(%var_1894: Tensor[(2, 6, 11), float64]) -> Tensor[(2, 6, 11), float64] {
  %372 = cast(%var_1894, dtype="float64") /* ty=Tensor[(2, 6, 11), float64] */;
  log(%372) /* ty=Tensor[(2, 6, 11), float64] */
}

def @func_6966(%var_6965: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(18), float32]) {
  %378 = fn (%var_6952: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(18), float32]) {
    %373 = cast(%var_6952, dtype="float32") /* ty=Tensor[(18), float32] */;
    %374 = reshape(%373, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %375 = @func_4757(%374) /* ty=(Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) */;
    %376 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
    %377 = %375.2;
    (%376, %377, %var_6952)
  };
  %378(%var_6965) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(18), float32]) */
}

def @func_6506() -> (Tensor[(176), float64],) {
  @func_6504() /* ty=(Tensor[(176), float64],) */
}

def @func_10063(%var_10061: Tensor[(660), uint32], %var_10062: Tensor[(144), float64]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(660), uint32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64]) {
  @func_10059(%var_10061, %var_10062) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(660), uint32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64]) */
}

def @func_13052() -> Tensor[(13, 16, 9), float64] {
  @func_13050() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_10686() -> (Tensor[(9, 4, 14), float64],) {
  @func_10684() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_10495() -> (Tensor[(9, 4, 14), float64],) {
  @func_10493() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_13074() -> (Tensor[(9, 4, 14), uint32],) {
  @func_13072() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_9830(%var_9824: Tensor[(3, 2, 5), float32]) -> (Tensor[(3, 2, 5), float32], Tensor[(9, 4, 14), float64]) {
  %379 = cast(%var_9824, dtype="float32") /* ty=Tensor[(3, 2, 5), float32] */;
  %380 = @func_9407() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64]) */;
  %381 = erf(%379) /* ty=Tensor[(3, 2, 5), float32] */;
  %382 = %380.0;
  (%381, %382)
}

def @func_12292(%var_12290: Tensor[(3, 10, 12), bool], %var_12291: Tensor[(3, 10, 12), bool]) -> (Tensor[(3, 10, 12), bool],) {
  %388 = fn (%var_12278: Tensor[(3, 10, 12), bool], %var_12279: Tensor[(3, 10, 12), bool]) -> (Tensor[(3, 10, 12), bool],) {
    %383 = cast(%var_12279, dtype="bool") /* ty=Tensor[(3, 10, 12), bool] */;
    %384 = shape_of(%var_12278, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%var_12278, dtype="bool") /* ty=Tensor[(3, 10, 12), bool] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %387 = logical_and(%385, %386) /* ty=Tensor[(3, 10, 12), bool] */;
    (%387,)
  };
  %388(%var_12290, %var_12291) /* ty=(Tensor[(3, 10, 12), bool],) */
}

def @func_6310(%var_6309: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64]) {
  %394 = fn (%var_6304: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64]) {
    %389 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %390 = cast(%var_6304, dtype="float64") /* ty=Tensor[(90), float64] */;
    %391 = reshape(%390, newshape=[9, 10, 1]) /* ty=Tensor[(9, 10, 1), float64] */;
    %392 = %389.0;
    %393 = @func_940(%391) /* ty=Tensor[(9, 10, ?), int64] */;
    (%392, %393, %var_6304)
  };
  %394(%var_6309) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64]) */
}

def @func_12475(%var_12473: Tensor[(30), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64], Tensor[(30), float32]) {
  @func_12472(%var_12473) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64], Tensor[(30), float32]) */
}

def @func_6832() -> Tensor[(9, 4, 14), float64] {
  %395 = @func_5477() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64]) */;
  %395.2
}

def @func_8984() -> Tensor[(9, 4, 14), uint32] {
  @func_8982() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_11158(%var_11137: Tensor[(4, 520), float64], %var_11138: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64], Tensor[(2080), float64], Tensor[(4, 520), float64], Tensor[(90), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %396 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %397 = @func_7579() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %398 = cast(%var_11137, dtype="float64") /* ty=Tensor[(4, 520), float64] */;
  %399 = cast(%var_11138, dtype="float64") /* ty=Tensor[(90), float64] */;
  %400 = reshape(%398, newshape=[2080]) /* ty=Tensor[(2080), float64] */;
  %401 = reshape(%399, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %402 = @func_5573(%400, %401) /* ty=(Tensor[(13, 16, 9), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90), float64]) */;
  %403 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %404 = %396.0;
  %405 = %397.0;
  %406 = %402.2;
  %407 = @func_10144() /* ty=Tensor[(9, 4, 14), uint32] */;
  %408 = %403.0;
  (%404, %405, %406, %var_11137, %var_11138, %407, %408)
}

def @func_9332() -> (Tensor[(9, 4, 14), uint32],) {
  %411 = fn () -> (Tensor[(9, 4, 14), uint32],) {
    %409 = @func_8456() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %410 = %409.0;
    (%410,)
  };
  %411() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_12472(%var_12470: Tensor[(30), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64], Tensor[(30), float32]) {
  %412 = @func_8156() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float32]) */;
  %413 = cast(%var_12470, dtype="float32") /* ty=Tensor[(30), float32] */;
  %414 = reshape(%413, newshape=[3, 2, 5]) /* ty=Tensor[(3, 2, 5), float32] */;
  %415 = @func_9830(%414) /* ty=(Tensor[(3, 2, 5), float32], Tensor[(9, 4, 14), float64]) */;
  %416 = %412.1;
  %417 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
  %418 = %415.1;
  (%416, %417, %418, %var_12470)
}

def @func_6181() -> Tensor[(9, 4, 14), float64] {
  @func_6179() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_9171() -> Tensor[(9, 4, 14), float64] {
  @func_9169() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_11289(%var_11286: Tensor[(90), float64], %var_11287: Tensor[(13, 16, 9), float64], %var_11288: Tensor[(9, 10, 13), int64]) -> (Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(14, 10, 13), float64], Tensor[(1820), int64], Tensor[(13, 16, 9), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 10, 13), int16]) {
  @func_11284(%var_11286, %var_11287, %var_11288) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(14, 10, 13), float64], Tensor[(1820), int64], Tensor[(13, 16, 9), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 10, 13), int16]) */
}

def @func_5576(%var_5574: Tensor[(2080), float64], %var_5575: Tensor[(90), float64]) -> (Tensor[(13, 16, 9), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90), float64]) {
  %429 = fn (%var_5557: Tensor[(2080), float64], %var_5558: Tensor[(90), float64]) -> (Tensor[(13, 16, 9), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90), float64]) {
    %419 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
    %420 = cast(%var_5557, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %421 = cast(%var_5558, dtype="float64") /* ty=Tensor[(90), float64] */;
    %422 = cast(%var_5557, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %423 = reshape(%420, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %424 = reshape(%421, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %425 = reshape(%422, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %426 = @func_1982(%423, %424, %425) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
    %427 = %419.1;
    %428 = %426.1;
    (%427, %428, %var_5557, %var_5558)
  };
  %429(%var_5574, %var_5575) /* ty=(Tensor[(13, 16, 9), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90), float64]) */
}

def @func_6927(%var_6925: Tensor[(13, 16, 9), float64]) -> (Tensor[(13, 16, 9), uint64],) {
  @func_6924(%var_6925) /* ty=(Tensor[(13, 16, 9), uint64],) */
}

def @func_5450() -> (Tensor[(9, 4, 14), uint32],) {
  %432 = fn () -> (Tensor[(9, 4, 14), uint32],) {
    %430 = @func_4568() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
    %431 = %430.1;
    (%431,)
  };
  %432() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_1987(%var_1984: Tensor[(13, 16, 10), float64], %var_1985: Tensor[(90), float64], %var_1986: Tensor[(13, 16, 10), float64]) -> (Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) {
  @func_1982(%var_1984, %var_1985, %var_1986) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */
}

def @func_885(%var_869: Tensor[(2, 10, 13), float32]) -> (Tensor[(2, 10, 13), float32],) {
  %433 = cast(%var_869, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %434 = exp(%433) /* ty=Tensor[(2, 10, 13), float32] */;
  (%434,)
}

def @func_5159() -> (Tensor[(9, 4, 14), float64],) {
  %437 = fn () -> (Tensor[(9, 4, 14), float64],) {
    %435 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %436 = %435.0;
    (%436,)
  };
  %437() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_5017() -> (Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
  %442 = fn () -> (Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
    %438 = @func_4237() /* ty=Tensor[(13, 16, 9), float64] */;
    %439 = cast(%438, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
    %440 = erf(%439) /* ty=Tensor[(13, 16, 9), float64] */;
    %441 = @func_4237() /* ty=Tensor[(13, 16, 9), float64] */;
    (%440, %441)
  };
  %442() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */
}

def @func_9228() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %443 = @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %444 = @func_8067() /* ty=(Tensor[(176), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) */;
  %445 = %443.1;
  %446 = %444.1;
  (%445, %446)
}

def @func_9277() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %447 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %448 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %449 = %447.0;
  %450 = %448.0;
  (%449, %450)
}

def @func_4053() -> Tensor[(9, 4, 14), float64] {
  %452 = fn () -> Tensor[(9, 4, 14), float64] {
    %451 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 4, 14), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
    tan(%451) /* ty=Tensor[(9, 4, 14), float64] */
  };
  %452() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_10963(%var_10962: Tensor[(144), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 9, 2), bool], Tensor[(36), bool]) {
  %467 = fn (%var_10927: Tensor[(144), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 9, 2), bool], Tensor[(36), bool]) {
    %453 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %454 = cast(%var_10927, dtype="float64") /* ty=Tensor[(144), float64] */;
    %455 = reshape(%454, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
    %456 = @func_211(%455) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
    %457 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
    %458 = @func_7425() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(?, 9, 2), float64]) */;
    %459 = cast(meta[relay.Constant][22] /* ty=Tensor[(36), bool] */, dtype="bool") /* ty=Tensor[(36), bool] */;
    %460 = reshape(%459, newshape=[2, 9, 2]) /* ty=Tensor[(2, 9, 2), bool] */;
    %461 = @func_7043(%460) /* ty=(Tensor[(2, 9, 2), bool],) */;
    %462 = %453.0;
    %463 = %456.1;
    %464 = %457.0;
    %465 = %458.0;
    %466 = %461.0;
    (%462, %463, %var_10927, %464, %465, %466, meta[relay.Constant][22] /* ty=Tensor[(36), bool] */)
  };
  %467(%var_10962) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(2, 9, 2), bool], Tensor[(36), bool]) */
}

def @func_7007() -> (Tensor[(9, 4, 14), uint32],) {
  %470 = fn () -> (Tensor[(9, 4, 14), uint32],) {
    %468 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %469 = %468.0;
    (%469,)
  };
  %470() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_5186() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */
}

def @func_4239() -> Tensor[(13, 16, 9), float64] {
  @func_4237() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_5404() -> Tensor[(13, 16, 9), float64] {
  @func_5402() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_10493() -> (Tensor[(9, 4, 14), float64],) {
  %471 = @func_6460() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %472 = %471.0;
  (%472,)
}

def @func_11367(%var_11365: Tensor[(468, 4), float64], %var_11366: Tensor[(18), float32]) -> (Tensor[(900), float64], Tensor[(9, 4, 14), uint32], Tensor[(468, 4), float64], Tensor[(18), float32], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
  %489 = fn (%var_11338: Tensor[(468, 4), float64], %var_11339: Tensor[(18), float32]) -> (Tensor[(900), float64], Tensor[(9, 4, 14), uint32], Tensor[(468, 4), float64], Tensor[(18), float32], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
    %473 = @func_7216() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
    %474 = cast(%var_11338, dtype="float64") /* ty=Tensor[(468, 4), float64] */;
    %475 = cast(%var_11338, dtype="uint64") /* ty=Tensor[(468, 4), uint64] */;
    %476 = cast(%var_11339, dtype="float32") /* ty=Tensor[(18), float32] */;
    %477 = reshape(%474, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
    %478 = reshape(%475, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), uint64] */;
    %479 = reshape(%476, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %480 = @func_10274(%477, %478, %479) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(1872), float64], Tensor[(176), float64], Tensor[(13, 16, 9), uint64], Tensor[(176), float64], Tensor[(9, 4, 14), float32], Tensor[(18), float32]) */;
    %481 = @func_6423() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(16, 2, 15), bool]) */;
    %482 = %481.1;
    %483 = cast(%482, dtype="float32") /* ty=Tensor[(?, 9, 2), float32] */;
    %484 = reshape(%483, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %485 = @func_6964(%484) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(18), float32]) */;
    %486 = %473.3;
    %487 = %480.0;
    %488 = %485.1;
    (%486, %487, %var_11338, %var_11339, %482, %488)
  };
  %489(%var_11365, %var_11366) /* ty=(Tensor[(900), float64], Tensor[(9, 4, 14), uint32], Tensor[(468, 4), float64], Tensor[(18), float32], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */
}

def @func_6129() -> (Tensor[(9, 4, 14), float64],) {
  %492 = fn () -> (Tensor[(9, 4, 14), float64],) {
    %490 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %491 = %490.0;
    (%491,)
  };
  %492() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_8633(%var_8589: Tensor[(14, 10, 13), int64], %var_8590: Tensor[(14, 10, 13), int64]) -> (Tensor[(14, 10, 13), bool], Tensor[(14, 10, 13), bool], Tensor[(33, 4), float64], bool, Tensor[(480), float64], Tensor[(9, 4, 14), uint32], Tensor[(14, 10, 13), float64]) {
  %493 = cast(%var_8590, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %494 = shape_of(%var_8589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%var_8589, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %497 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 10, 13), int64] */, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %498 = shape_of(%var_8590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%var_8590, dtype="bool") /* ty=Tensor[(14, 10, 13), bool] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %501 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %502 = cast(meta[relay.Constant][24] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %503 = reshape(%501, newshape=[]) /* ty=bool */;
  %504 = reshape(%502, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %505 = @func_4170(%503, %504) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(144), float64], bool, Tensor[(336), bool], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(2, 6, 11), float64], Tensor[(3, 12, 4), float64], Tensor[(33, 4), float64], bool, Tensor[(176), float64]) */;
  %506 = cast(%var_8589, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %507 = less(%495, %496) /* ty=Tensor[(14, 10, 13), bool] */;
  %508 = not_equal(%499, %500) /* ty=Tensor[(14, 10, 13), bool] */;
  %509 = %505.8;
  %510 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
  %511 = acosh(%506) /* ty=Tensor[(14, 10, 13), float64] */;
  (%507, %508, %509, False /* ty=bool */, meta[relay.Constant][24] /* ty=Tensor[(480), float64] */, %510, %511)
}

def @func_10364(%var_10362: Tensor[(192), int8], %var_10363: Tensor[(336), bool]) -> (Tensor[(13, 16, 9), float64], Tensor[(15, 10, 6), float64], Tensor[(900), float64], Tensor[(4, 4, 12), int16], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %526 = fn (%var_10327: Tensor[(192), int8], %var_10328: Tensor[(336), bool]) -> (Tensor[(13, 16, 9), float64], Tensor[(15, 10, 6), float64], Tensor[(900), float64], Tensor[(4, 4, 12), int16], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
    %512 = cast(meta[relay.Constant][25] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
    %513 = reshape(%512, newshape=[15, 10, 6]) /* ty=Tensor[(15, 10, 6), float64] */;
    %514 = @func_4731(%513) /* ty=(Tensor[(15, 10, 6), float64], Tensor[(9, 4, 14), float64]) */;
    %515 = cast(%var_10327, dtype="int8") /* ty=Tensor[(192), int8] */;
    %516 = cast(%var_10328, dtype="bool") /* ty=Tensor[(336), bool] */;
    %517 = reshape(%515, newshape=[4, 4, 12]) /* ty=Tensor[(4, 4, 12), int8] */;
    %518 = reshape(%516, newshape=[336]) /* ty=Tensor[(336), bool] */;
    %519 = @func_2214(%517, %518) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(4, 4, 12), int16], Tensor[(3, 12, 4), float64], Tensor[(336), bool]) */;
    %520 = @func_9741() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
    %521 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
    %522 = %514.0;
    %523 = %519.2;
    %524 = @func_6482() /* ty=Tensor[(9, 4, 14), float64] */;
    %525 = %520.0;
    (%521, %522, meta[relay.Constant][25] /* ty=Tensor[(900), float64] */, %523, %var_10327, %var_10328, %524, %525)
  };
  %526(%var_10362, %var_10363) /* ty=(Tensor[(13, 16, 9), float64], Tensor[(15, 10, 6), float64], Tensor[(900), float64], Tensor[(4, 4, 12), int16], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */
}

def @func_10684() -> (Tensor[(9, 4, 14), float64],) {
  %527 = @func_10493() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %528 = %527.0;
  (%528,)
}

def @func_12885(%var_12843: Tensor[(90), float64], %var_12844: Tensor[(1872), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(1820), int64], Tensor[(90), float64], Tensor[(1872), float64], Tensor[(1170), int64]) {
  %529 = @func_6036() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %530 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %531 = cast(%var_12843, dtype="float64") /* ty=Tensor[(90), float64] */;
  %532 = cast(%var_12844, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %533 = cast(meta[relay.Constant][26] /* ty=Tensor[(1170), int64] */, dtype="int64") /* ty=Tensor[(1170), int64] */;
  %534 = reshape(%531, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %535 = reshape(%532, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %536 = reshape(%533, newshape=[9, 10, 13]) /* ty=Tensor[(9, 10, 13), int64] */;
  %537 = @func_11284(%534, %535, %536) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(14, 10, 13), float64], Tensor[(1820), int64], Tensor[(13, 16, 9), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 10, 13), int16]) */;
  %538 = %529.0;
  %539 = %530.0;
  %540 = @func_10865() /* ty=Tensor[(9, 4, 14), uint32] */;
  %541 = %537.3;
  (%538, %539, %540, %541, %var_12843, %var_12844, meta[relay.Constant][26] /* ty=Tensor[(1170), int64] */)
}

def @func_5604() -> (Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
  %542 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %543 = cast(meta[relay.Constant][27] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
  %544 = reshape(%543, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %545 = @func_107(%544) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %546 = %542.2;
  %547 = %545.0;
  (%546, %547, meta[relay.Constant][27] /* ty=Tensor[(18), float32] */)
}

def @func_1260(%var_1231: bool, %var_1232: Tensor[(2, 12, 14), bool]) -> (Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) {
  %548 = cast(%var_1231, dtype="bool") /* ty=bool */;
  %549 = cast(%var_1232, dtype="bool") /* ty=Tensor[(2, 12, 14), bool] */;
  %550 = cast(meta[relay.Constant][28] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %551 = reshape(%550, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %552 = @func_211(%551) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %553 = %552.0;
  %554 = cast(%553, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
  %555 = reshape(%554, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %556 = @func_211(%555) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %557 = logical_or(%548, %549) /* ty=Tensor[(2, 12, 14), bool] */;
  %558 = %556.0;
  (%557, %553, meta[relay.Constant][28] /* ty=Tensor[(144), float64] */, %558)
}

def @func_13072() -> (Tensor[(9, 4, 14), uint32],) {
  %559 = @func_9228() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %560 = %559.0;
  (%560,)
}

def @func_12367() -> (Tensor[(?, 9, 2), bool],) {
  @func_12365() /* ty=(Tensor[(?, 9, 2), bool],) */
}

def @func_7425() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(?, 9, 2), float64]) {
  %561 = @func_6689() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %562 = @func_5449() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %563 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 3), float32] */;
  %564 = reshape(%563, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %565 = @func_107(%564) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %566 = %565.0;
  %567 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 3), float32] */, dtype="int64") /* ty=Tensor[(6, 3), int64] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="int64") /* ty=Tensor[(?, 9, 2), int64] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %571 = maximum(%569, %570) /* ty=Tensor[(?, 9, 2), int64] */;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(?, 9, 2), float64] */;
  %573 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%566, dtype="float64") /* ty=Tensor[(?, 9, 2), float64] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %576 = %561.0;
  %577 = %562.0;
  %578 = divide(%574, %575) /* ty=Tensor[(?, 9, 2), float64] */;
  (%576, %577, %578)
}

def @func_1457(%var_1428: Tensor[(16, 2, 15), float64]) -> Tensor[(16, 2, 15), bool] {
  %579 = cast(%var_1428, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %580 = cos(%579) /* ty=Tensor[(16, 2, 15), float64] */;
  %581 = cast(%var_1428, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%580, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%583, %584) /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_6834() -> Tensor[(9, 4, 14), float64] {
  @func_6832() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_11057() -> Tensor[(13, 16, 9), float64] {
  @func_11055() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_6504() -> (Tensor[(176), float64],) {
  %585 = @func_5303() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */;
  %586 = %585.2;
  (%586,)
}

def @func_1313(%var_1310: Tensor[(9, 16, 16), bool], %var_1311: Tensor[(9, 16, 16), bool], %var_1312: Tensor[(9, 16, 16), bool]) -> (Tensor[(9, 16, 16), bool], Tensor[(2, 10, 13), float32], Tensor[(1, 260), float32], Tensor[(9, 16, 16), int64]) {
  %601 = fn (%var_1272: Tensor[(9, 16, 16), bool], %var_1273: Tensor[(9, 16, 16), bool], %var_1295: Tensor[(9, 16, 16), bool]) -> (Tensor[(9, 16, 16), bool], Tensor[(2, 10, 13), float32], Tensor[(1, 260), float32], Tensor[(9, 16, 16), int64]) {
    %587 = cast(%var_1273, dtype="bool") /* ty=Tensor[(9, 16, 16), bool] */;
    %588 = shape_of(%var_1272, dtype="int32") /* ty=Tensor[(3), int32] */;
    %589 = cast(%var_1272, dtype="bool") /* ty=Tensor[(9, 16, 16), bool] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %591 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 260), float32] */, dtype="float32") /* ty=Tensor[(1, 260), float32] */;
    %592 = reshape(%591, newshape=[2, 10, 13]) /* ty=Tensor[(2, 10, 13), float32] */;
    %593 = @func_885(%592) /* ty=(Tensor[(2, 10, 13), float32],) */;
    %594 = cast(%var_1295, dtype="int64") /* ty=Tensor[(9, 16, 16), int64] */;
    %595 = shape_of(%var_1273, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%var_1273, dtype="int64") /* ty=Tensor[(9, 16, 16), int64] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %598 = logical_and(%589, %590) /* ty=Tensor[(9, 16, 16), bool] */;
    %599 = %593.0;
    %600 = bitwise_xor(%596, %597) /* ty=Tensor[(9, 16, 16), int64] */;
    (%598, %599, meta[relay.Constant][30] /* ty=Tensor[(1, 260), float32] */, %600)
  };
  %601(%var_1310, %var_1311, %var_1312) /* ty=(Tensor[(9, 16, 16), bool], Tensor[(2, 10, 13), float32], Tensor[(1, 260), float32], Tensor[(9, 16, 16), int64]) */
}

def @func_8157() -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float32]) {
  %608 = fn () -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float32]) {
    %602 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
    %603 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %604 = %603.0;
    %605 = cast(%604, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
    %606 = %602.0;
    %607 = atan(%605) /* ty=Tensor[(9, 4, 14), float32] */;
    (%606, %607)
  };
  %608() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float32]) */
}

def @func_7581() -> (Tensor[(9, 4, 14), float64],) {
  @func_7579() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_9110() -> Tensor[(13, 16, 9), float64] {
  %610 = fn () -> Tensor[(13, 16, 9), float64] {
    %609 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
    %609.0
  };
  %610() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_7217() -> (Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
  %620 = fn () -> (Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
    %611 = cast(meta[relay.Constant][31] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
    %612 = reshape(%611, newshape=[15, 10, 6]) /* ty=Tensor[(15, 10, 6), float64] */;
    %613 = @func_4731(%612) /* ty=(Tensor[(15, 10, 6), float64], Tensor[(9, 4, 14), float64]) */;
    %614 = @func_5910() /* ty=(Tensor[(13, 16, 9), float64],) */;
    %615 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
    %616 = @func_4237() /* ty=Tensor[(13, 16, 9), float64] */;
    %617 = %613.1;
    %618 = %614.0;
    %619 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
    (%615, %616, %617, meta[relay.Constant][31] /* ty=Tensor[(900), float64] */, %618, %619)
  };
  %620() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */
}

def @func_8976() -> (Tensor[(9, 4, 14), uint32],) {
  @func_8974() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_1460(%var_1458: Tensor[(16, 2, 15), float64]) -> Tensor[(16, 2, 15), bool] {
  @func_1457(%var_1458) /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_2214(%var_2149: Tensor[(4, 4, 12), int8], %var_2208: Tensor[(336), bool]) -> (Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(4, 4, 12), int16], Tensor[(3, 12, 4), float64], Tensor[(336), bool]) {
  %621 = cast(meta[relay.Constant][32] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %622 = reshape(%621, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), float64] */;
  %623 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %624 = cast(%var_2149, dtype="int8") /* ty=Tensor[(4, 4, 12), int8] */;
  %625 = minimum(%623, %624) /* ty=Tensor[(4, 4, 12), int8] */;
  %626 = cast(%625, dtype="uint8") /* ty=Tensor[(4, 4, 12), uint8] */;
  %627 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %628 = left_shift(%626, %627) /* ty=Tensor[(4, 4, 12), uint8] */;
  %629 = cast(%625, dtype="int16") /* ty=Tensor[(4, 4, 12), int16] */;
  %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%628, dtype="int16") /* ty=Tensor[(4, 4, 12), int16] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %633 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %634 = cast(%var_2208, dtype="bool") /* ty=Tensor[(336), bool] */;
  %635 = reshape(%633, newshape=[]) /* ty=bool */;
  %636 = reshape(%634, newshape=[2, 12, 14]) /* ty=Tensor[(2, 12, 14), bool] */;
  %637 = @func_1260(%635, %636) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */;
  %638 = @func_1457(%622) /* ty=Tensor[(16, 2, 15), bool] */;
  %639 = bitwise_and(%631, %632) /* ty=Tensor[(4, 4, 12), int16] */;
  %640 = %637.1;
  (%638, meta[relay.Constant][32] /* ty=Tensor[(480), float64] */, %639, %640, %var_2208)
}

def @func_8068() -> (Tensor[(176), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) {
  %648 = fn () -> (Tensor[(176), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) {
    %641 = @func_6504() /* ty=(Tensor[(176), float64],) */;
    %642 = @func_7006() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %643 = @func_5477() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64]) */;
    %644 = %641.0;
    %645 = %642.0;
    %646 = @func_5788() /* ty=Tensor[(9, 4, 14), uint32] */;
    %647 = %643.1;
    (%644, %645, %646, %647)
  };
  %648() /* ty=(Tensor[(176), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) */
}

def @func_7555(%var_7554: Tensor[(8, 288), bool]) -> (Tensor[(9, 4, 14), float64], Tensor[(2, 10, 13), float32], Tensor[(8, 288), bool], Tensor[(9, 4, 14), float64]) {
  %662 = fn (%var_7521: Tensor[(8, 288), bool]) -> (Tensor[(9, 4, 14), float64], Tensor[(2, 10, 13), float32], Tensor[(8, 288), bool], Tensor[(9, 4, 14), float64]) {
    %649 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %650 = %649.0;
    %651 = cast(%650, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
    %652 = cast(%var_7521, dtype="bool") /* ty=Tensor[(8, 288), bool] */;
    %653 = cast(%var_7521, dtype="bool") /* ty=Tensor[(8, 288), bool] */;
    %654 = cast(%var_7521, dtype="bool") /* ty=Tensor[(8, 288), bool] */;
    %655 = reshape(%652, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
    %656 = reshape(%653, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
    %657 = reshape(%654, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
    %658 = @func_1309(%655, %656, %657) /* ty=(Tensor[(9, 16, 16), bool], Tensor[(2, 10, 13), float32], Tensor[(1, 260), float32], Tensor[(9, 16, 16), int64]) */;
    %659 = sinh(%651) /* ty=Tensor[(9, 4, 14), float64] */;
    %660 = %658.1;
    %661 = @func_6832() /* ty=Tensor[(9, 4, 14), float64] */;
    (%659, %660, %var_7521, %661)
  };
  %662(%var_7554) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(2, 10, 13), float32], Tensor[(8, 288), bool], Tensor[(9, 4, 14), float64]) */
}

def @func_9788(%var_9786: Tensor[(9, 4, 14), float64]) -> (Tensor[(90), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), bool]) {
  @func_9785(%var_9786) /* ty=(Tensor[(90), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), bool]) */
}

def @func_1917(%var_1915: Tensor[(2, 6, 11), float64]) -> Tensor[(2, 6, 11), float64] {
  @func_1914(%var_1915) /* ty=Tensor[(2, 6, 11), float64] */
}

def @func_7997() -> (Tensor[(13, 16, 9), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64]) {
  %672 = fn () -> (Tensor[(13, 16, 9), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64]) {
    %663 = @func_7732() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
    %664 = %663.0;
    %665 = cast(%664, dtype="float32") /* ty=Tensor[(13, 16, 9), float32] */;
    %666 = cast(%664, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
    %667 = @func_4991() /* ty=Tensor[(9, 4, 14), float64] */;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
    %669 = atan(%665) /* ty=Tensor[(13, 16, 9), float32] */;
    %670 = sqrt(%666) /* ty=Tensor[(13, 16, 9), float64] */;
    %671 = exp(%668) /* ty=Tensor[(9, 4, 14), float64] */;
    (%669, %670, %671)
  };
  %672() /* ty=(Tensor[(13, 16, 9), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64]) */
}

def @func_5184() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %673 = @func_4931() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) */;
  %674 = %673.1;
  %675 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%674, %675)
}

def @func_9833(%var_9831: Tensor[(3, 2, 5), float32]) -> (Tensor[(3, 2, 5), float32], Tensor[(9, 4, 14), float64]) {
  @func_9830(%var_9831) /* ty=(Tensor[(3, 2, 5), float32], Tensor[(9, 4, 14), float64]) */
}

def @func_11421() -> (Tensor[(9, 4, 14), float32],) {
  %676 = @func_7313() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %677 = %676.0;
  %678 = cast(%677, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %679 = acosh(%678) /* ty=Tensor[(9, 4, 14), float32] */;
  (%679,)
}

def @func_4272() -> (Tensor[(9, 4, 14), float32],) {
  @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */
}

def @func_12334(%var_12332: Tensor[(13, 7, 10), float64], %var_12333: Tensor[(18), float32]) -> (Tensor[(18), float32], Tensor[(18), float32], Tensor[(13, 7, 10), float32]) {
  @func_12330(%var_12332, %var_12333) /* ty=(Tensor[(18), float32], Tensor[(18), float32], Tensor[(13, 7, 10), float32]) */
}

def @func_11542(%var_11531: Tensor[(7, 6, 6), int16], %var_11532: Tensor[(7, 6, 6), int16], %var_11539: Tensor[(1872), float64]) -> (Tensor[(7, 6, 6), int16], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64]) {
  %680 = cast(%var_11532, dtype="int16") /* ty=Tensor[(7, 6, 6), int16] */;
  %681 = shape_of(%var_11531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%var_11531, dtype="int16") /* ty=Tensor[(7, 6, 6), int16] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %684 = cast(%var_11539, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %685 = reshape(%684, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
  %686 = @func_6924(%685) /* ty=(Tensor[(13, 16, 9), uint64],) */;
  %687 = left_shift(%682, %683) /* ty=Tensor[(7, 6, 6), int16] */;
  %688 = %686.0;
  (%687, %688, %var_11539)
}

def @func_12521(%var_12503: Tensor[(2, 13, 15), uint16]) -> (Tensor[(2, 13, 15), uint16], Tensor[(2, 13, 15), float32], Tensor[(9, 4, 14), float64]) {
  %689 = cast(%var_12503, dtype="uint16") /* ty=Tensor[(2, 13, 15), uint16] */;
  %690 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(2, 13, 15), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 13, 15), uint16] */, dtype="uint16") /* ty=Tensor[(2, 13, 15), uint16] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %693 = cast(%var_12503, dtype="float32") /* ty=Tensor[(2, 13, 15), float32] */;
  %694 = @func_7579() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %695 = maximum(%691, %692) /* ty=Tensor[(2, 13, 15), uint16] */;
  %696 = log10(%693) /* ty=Tensor[(2, 13, 15), float32] */;
  %697 = %694.0;
  (%695, %696, %697)
}

def @func_12954() -> (Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), uint32], Tensor[(14, 8, 9), bool], Tensor[(112), int16], Tensor[(1008), int16]) {
  @func_12952() /* ty=(Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), uint32], Tensor[(14, 8, 9), bool], Tensor[(112), int16], Tensor[(1008), int16]) */
}

def @func_4814() -> (Tensor[(9, 4, 14), uint32],) {
  %698 = @func_4568() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %699 = %698.1;
  (%699,)
}

def @func_9893() -> (Tensor[(9, 4, 14), uint32],) {
  %702 = fn () -> (Tensor[(9, 4, 14), uint32],) {
    %700 = @func_7095() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %701 = %700.0;
    (%701,)
  };
  %702() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_942(%var_941: Tensor[(9, 10, 1), float64]) -> Tensor[(9, 10, ?), int64] {
  %714 = fn (%var_914: Tensor[(9, 10, 1), float64]) -> Tensor[(9, 10, ?), int64] {
    %703 = cast(%var_914, dtype="float64") /* ty=Tensor[(9, 10, 1), float64] */;
    %704 = sigmoid(%703) /* ty=Tensor[(9, 10, 1), float64] */;
    %705 = cast(%704, dtype="float32") /* ty=Tensor[(9, 10, 1), float32] */;
    %706 = shape_of(%var_914, dtype="int32") /* ty=Tensor[(3), int32] */;
    %707 = cast(%var_914, dtype="float32") /* ty=Tensor[(9, 10, 1), float32] */;
    %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %709 = floor_mod(%707, %708) /* ty=Tensor[(9, 10, ?), float32] */;
    %710 = cast(%709, dtype="int64") /* ty=Tensor[(9, 10, ?), int64] */;
    %711 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
    %712 = cast(%704, dtype="int64") /* ty=Tensor[(9, 10, 1), int64] */;
    %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    right_shift(%712, %713) /* ty=Tensor[(9, 10, ?), int64] */
  };
  %714(%var_941) /* ty=Tensor[(9, 10, ?), int64] */
}

def @func_5436() -> (Tensor[(9, 4, 14), uint32],) {
  %715 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %716 = %715.0;
  (%716,)
}

def @func_8708(%var_8694: Tensor[(1, 11, 4), uint32], %var_8695: Tensor[(15, 11, 4), uint32]) -> (Tensor[(15, 11, 4), int32], Tensor[(1, 11, 4), float64], Tensor[(15, 11, 4), float32]) {
  %717 = cast(%var_8694, dtype="bool") /* ty=Tensor[(1, 11, 4), bool] */;
  %718 = cast(%var_8695, dtype="bool") /* ty=Tensor[(15, 11, 4), bool] */;
  %719 = greater(%717, %718) /* ty=Tensor[(15, 11, 4), bool] */;
  %720 = cast(%719, dtype="int32") /* ty=Tensor[(15, 11, 4), int32] */;
  %721 = cast(%var_8694, dtype="int32") /* ty=Tensor[(1, 11, 4), int32] */;
  %722 = cast(%var_8694, dtype="float64") /* ty=Tensor[(1, 11, 4), float64] */;
  %723 = cast(%719, dtype="float32") /* ty=Tensor[(15, 11, 4), float32] */;
  %724 = bitwise_xor(%720, %721) /* ty=Tensor[(15, 11, 4), int32] */;
  %725 = sigmoid(%722) /* ty=Tensor[(1, 11, 4), float64] */;
  %726 = log2(%723) /* ty=Tensor[(15, 11, 4), float32] */;
  (%724, %725, %726)
}

def @func_5725(%var_5723: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(18), float64]) {
  @func_5722(%var_5723) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(18), float64]) */
}

def @func_8866(%var_8864: Tensor[(9, 4, 14), uint32], %var_8865: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(90), float64], Tensor[(9, 4, 14), uint32], Tensor[(2080), float64], Tensor[(1, 1872), float64], Tensor[(1008), int16]) {
  %749 = fn (%var_8821: Tensor[(9, 4, 14), uint32], %var_8842: Tensor[(90), float64]) -> (Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(90), float64], Tensor[(9, 4, 14), uint32], Tensor[(2080), float64], Tensor[(1, 1872), float64], Tensor[(1008), int16]) {
    %727 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
    %728 = cast(%var_8821, dtype="uint8") /* ty=Tensor[(9, 4, 14), uint8] */;
    %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
    %730 = cast(%727, dtype="uint8") /* ty=Tensor[(9, 4, 14), uint8] */;
    %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %732 = cast(meta[relay.Constant][35] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %733 = cast(%var_8842, dtype="float64") /* ty=Tensor[(90), float64] */;
    %734 = cast(meta[relay.Constant][35] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %735 = reshape(%732, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %736 = reshape(%733, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %737 = reshape(%734, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %738 = @func_1982(%735, %736, %737) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
    %739 = cast(meta[relay.Constant][35] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %740 = cast(meta[relay.Constant][36] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
    %741 = reshape(%740, newshape=[1008]) /* ty=Tensor[(1008), int16] */;
    %742 = @func_5878(%741) /* ty=(Tensor[(90), float64], Tensor[(1, 1872), float64], Tensor[(14, 8, 9), uint8], Tensor[(112), int16], Tensor[(1008), int16], Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float32]) */;
    %743 = bitwise_or(%730, %731) /* ty=Tensor[(9, 4, 14), uint8] */;
    %744 = @func_4991() /* ty=Tensor[(9, 4, 14), float64] */;
    %745 = %738.3;
    %746 = @func_5122() /* ty=Tensor[(9, 4, 14), uint32] */;
    %747 = erf(%739) /* ty=Tensor[(2080), float64] */;
    %748 = %742.1;
    (%743, %744, %745, %var_8842, %746, %747, %748, meta[relay.Constant][36] /* ty=Tensor[(1008), int16] */)
  };
  %749(%var_8864, %var_8865) /* ty=(Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(90), float64], Tensor[(9, 4, 14), uint32], Tensor[(2080), float64], Tensor[(1, 1872), float64], Tensor[(1008), int16]) */
}

def @func_9010(%var_9008: Tensor[(13, 11, 8), uint16], %var_9009: Tensor[(13, 11, 8), uint16]) -> Tensor[(13, 11, 8), uint16] {
  %754 = fn (%var_9001: Tensor[(13, 11, 8), uint16], %var_9002: Tensor[(13, 11, 8), uint16]) -> Tensor[(13, 11, 8), uint16] {
    %750 = cast(%var_9002, dtype="uint16") /* ty=Tensor[(13, 11, 8), uint16] */;
    %751 = shape_of(%var_9001, dtype="int32") /* ty=Tensor[(3), int32] */;
    %752 = cast(%var_9001, dtype="uint16") /* ty=Tensor[(13, 11, 8), uint16] */;
    %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    minimum(%752, %753) /* ty=Tensor[(13, 11, 8), uint16] */
  };
  %754(%var_9008, %var_9009) /* ty=Tensor[(13, 11, 8), uint16] */
}

def @func_13172(%var_13171: Tensor[(224), bool]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64], Tensor[(7, 16, 2), bool], Tensor[(224), bool]) {
  %761 = fn (%var_13146: Tensor[(224), bool]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64], Tensor[(7, 16, 2), bool], Tensor[(224), bool]) {
    %755 = @func_11760() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90, 1), float64], Tensor[(9, 4, 14), uint32]) */;
    %756 = cast(%var_13146, dtype="bool") /* ty=Tensor[(224), bool] */;
    %757 = reshape(%756, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), bool] */;
    %758 = %755.4;
    %759 = @func_6482() /* ty=Tensor[(9, 4, 14), float64] */;
    %760 = @func_4454(%757) /* ty=Tensor[(7, 16, 2), bool] */;
    (%758, %759, %760, %var_13146)
  };
  %761(%var_13171) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64], Tensor[(7, 16, 2), bool], Tensor[(224), bool]) */
}

def @func_10556() -> Tensor[(?, 9, 2), bool] {
  @func_10554() /* ty=Tensor[(?, 9, 2), bool] */
}

def @func_9169() -> Tensor[(9, 4, 14), float64] {
  %762 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %762.0
}

def @func_2269(%var_2267: Tensor[(2, 5, 5), float64], %var_2268: Tensor[(2, 5, 5), float64]) -> (Tensor[(2, 5, 5), bool],) {
  @func_2265(%var_2267, %var_2268) /* ty=(Tensor[(2, 5, 5), bool],) */
}

def @func_8982() -> Tensor[(9, 4, 14), uint32] {
  %763 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %763.0
}

def @func_12269(%var_12268: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(9, 4, 14), uint32]) {
  %771 = fn (%var_12259: Tensor[(18), float32]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(9, 4, 14), uint32]) {
    %764 = @func_8456() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %765 = cast(%var_12259, dtype="float32") /* ty=Tensor[(18), float32] */;
    %766 = reshape(%765, newshape=[18]) /* ty=Tensor[(18), float32] */;
    %767 = @func_6964(%766) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(18), float32]) */;
    %768 = %764.0;
    %769 = %767.0;
    %770 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
    (%768, %769, %var_12259, %770)
  };
  %771(%var_12268) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(18), float32], Tensor[(9, 4, 14), uint32]) */
}

def @func_1982(%var_1940: Tensor[(13, 16, 10), float64], %var_1974: Tensor[(90), float64], %var_1976: Tensor[(13, 16, 10), float64]) -> (Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) {
  %772 = cast(meta[relay.Constant][37] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %773 = reshape(%772, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %774 = @func_211(%773) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %775 = cast(%var_1974, dtype="float64") /* ty=Tensor[(90), float64] */;
  %776 = reshape(%775, newshape=[9, 10, 1]) /* ty=Tensor[(9, 10, 1), float64] */;
  %777 = cast(%var_1940, dtype="float64") /* ty=Tensor[(13, 16, 10), float64] */;
  %778 = sigmoid(%777) /* ty=Tensor[(13, 16, 10), float64] */;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(13, 16, 10), float64] */;
  %780 = log2(%779) /* ty=Tensor[(13, 16, 10), float64] */;
  %781 = cast(%var_1976, dtype="bool") /* ty=Tensor[(13, 16, 10), bool] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%780, dtype="bool") /* ty=Tensor[(13, 16, 10), bool] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %785 = %774.0;
  %786 = @func_940(%776) /* ty=Tensor[(9, 10, ?), int64] */;
  %787 = less_equal(%783, %784) /* ty=Tensor[(13, 16, 10), bool] */;
  (%785, meta[relay.Constant][37] /* ty=Tensor[(144), float64] */, %786, %var_1974, %787)
}

def @func_5911() -> (Tensor[(13, 16, 9), float64],) {
  %790 = fn () -> (Tensor[(13, 16, 9), float64],) {
    %788 = @func_4887() /* ty=(Tensor[(13, 16, 9), float64],) */;
    %789 = %788.0;
    (%789,)
  };
  %790() /* ty=(Tensor[(13, 16, 9), float64],) */
}

def @func_6575() -> Tensor[(13, 16, 9), float64] {
  @func_5402() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_8906(%var_8905: Tensor[(2304), bool]) -> (Tensor[(480), float64], Tensor[(2, 10, 13), float32], Tensor[(2304), bool]) {
  %801 = fn (%var_8893: Tensor[(2304), bool]) -> (Tensor[(480), float64], Tensor[(2, 10, 13), float32], Tensor[(2304), bool]) {
    %791 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
    %792 = cast(%var_8893, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %793 = cast(%var_8893, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %794 = cast(%var_8893, dtype="bool") /* ty=Tensor[(2304), bool] */;
    %795 = reshape(%792, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
    %796 = reshape(%793, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
    %797 = reshape(%794, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), bool] */;
    %798 = @func_1309(%795, %796, %797) /* ty=(Tensor[(9, 16, 16), bool], Tensor[(2, 10, 13), float32], Tensor[(1, 260), float32], Tensor[(9, 16, 16), int64]) */;
    %799 = %791.2;
    %800 = %798.1;
    (%799, %800, %var_8893)
  };
  %801(%var_8905) /* ty=(Tensor[(480), float64], Tensor[(2, 10, 13), float32], Tensor[(2304), bool]) */
}

def @func_5402() -> Tensor[(13, 16, 9), float64] {
  %802 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %802.1
}

def @func_11827() -> (Tensor[(9, 4, 14), uint32],) {
  @func_11825() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_12365() -> (Tensor[(?, 9, 2), bool],) {
  %803 = @func_9314() /* ty=(Tensor[(?, 9, 2), bool],) */;
  %804 = %803.0;
  (%804,)
}

def @func_12694() -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool]) {
  @func_12692() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool]) */
}

def @func_12960() -> Tensor[(9, 4, 14), uint32] {
  %805 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %805.1
}

def @func_12330(%var_12299: Tensor[(13, 7, 10), float64], %var_12319: Tensor[(18), float32]) -> (Tensor[(18), float32], Tensor[(18), float32], Tensor[(13, 7, 10), float32]) {
  %806 = cast(%var_12319, dtype="float32") /* ty=Tensor[(18), float32] */;
  %807 = reshape(%806, newshape=[18]) /* ty=Tensor[(18), float32] */;
  %808 = @func_5722(%807) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(18), float64]) */;
  %809 = cast(%var_12299, dtype="float64") /* ty=Tensor[(13, 7, 10), float64] */;
  %810 = acosh(%809) /* ty=Tensor[(13, 7, 10), float64] */;
  %811 = cast(%var_12299, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="float32") /* ty=Tensor[(13, 7, 10), float32] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %815 = %808.1;
  %816 = add(%813, %814) /* ty=Tensor[(13, 7, 10), float32] */;
  (%815, %var_12319, %816)
}

def @func_11284(%var_11205: Tensor[(90), float64], %var_11255: Tensor[(13, 16, 9), float64], %var_11270: Tensor[(9, 10, 13), int64]) -> (Tensor[(9, 4, 14), float64], Tensor[(90), float64], Tensor[(14, 10, 13), float64], Tensor[(1820), int64], Tensor[(13, 16, 9), float32], Tensor[(9, 4, 14), uint32], Tensor[(9, 10, 13), int16]) {
  %817 = cast(meta[relay.Constant][38] /* ty=Tensor[(1820), int64] */, dtype="int64") /* ty=Tensor[(1820), int64] */;
  %818 = cast(meta[relay.Constant][38] /* ty=Tensor[(1820), int64] */, dtype="int64") /* ty=Tensor[(1820), int64] */;
  %819 = reshape(%817, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), int64] */;
  %820 = reshape(%818, newshape=[14, 10, 13]) /* ty=Tensor[(14, 10, 13), int64] */;
  %821 = @func_8633(%819, %820) /* ty=(Tensor[(14, 10, 13), bool], Tensor[(14, 10, 13), bool], Tensor[(33, 4), float64], bool, Tensor[(480), float64], Tensor[(9, 4, 14), uint32], Tensor[(14, 10, 13), float64]) */;
  %822 = @func_11055() /* ty=Tensor[(13, 16, 9), float64] */;
  %823 = cast(%var_11255, dtype="float32") /* ty=Tensor[(13, 16, 9), float32] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="float32") /* ty=Tensor[(13, 16, 9), float32] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %827 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %828 = cast(%var_11205, dtype="float64") /* ty=Tensor[(90), float64] */;
  %829 = reshape(%828, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %830 = @func_6308(%829) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64]) */;
  %831 = %830.1;
  %832 = cast(%831, dtype="int16") /* ty=Tensor[(9, 10, ?), int16] */;
  %833 = cast(%var_11270, dtype="int16") /* ty=Tensor[(9, 10, 13), int16] */;
  %834 = @func_6179() /* ty=Tensor[(9, 4, 14), float64] */;
  %835 = %821.6;
  %836 = divide(%825, %826) /* ty=Tensor[(13, 16, 9), float32] */;
  %837 = %827.0;
  %838 = bitwise_xor(%832, %833) /* ty=Tensor[(9, 10, 13), int16] */;
  (%834, %var_11205, %835, meta[relay.Constant][38] /* ty=Tensor[(1820), int64] */, %836, %837, %838)
}

def @func_8649() -> Tensor[(9, 4, 14), float64] {
  @func_4052() /* ty=Tensor[(9, 4, 14), float64] */
}

def @main(%var_13294: Tensor[(3, 13, 14), float32], %var_13332: Tensor[(3, 13, 14), float32], %var_13344: Tensor[(3, 13, 14), float64]) -> (Tensor[(9, 4, 14), uint32], Tensor[(3, 13, 14), float32], Tensor[(3, 13, 14), bool]) {
  %839 = @func_13074() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %840 = cast(%var_13294, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %841 = sinh(%840) /* ty=Tensor[(3, 13, 14), float32] */;
  %842 = cast(%var_13294, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%841, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %846 = less(%844, %845) /* ty=Tensor[(3, 13, 14), bool] */;
  %847 = cast(%846, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %848 = atan(%847) /* ty=Tensor[(3, 13, 14), float32] */;
  %849 = cast(%var_13332, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %853 = cast(%846, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %854 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%848, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %857 = logical_or(%855, %856) /* ty=Tensor[(3, 13, 14), bool] */;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(3, 13, 14), float64] */;
  %859 = exp(%858) /* ty=Tensor[(3, 13, 14), float64] */;
  %860 = cast(%var_13344, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%859, dtype="bool") /* ty=Tensor[(3, 13, 14), bool] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %864 = %839.0;
  %865 = floor_mod(%851, %852) /* ty=Tensor[(3, 13, 14), float32] */;
  %866 = not_equal(%862, %863) /* ty=Tensor[(3, 13, 14), bool] */;
  (%864, %865, %866)
}

def @func_7295(%var_7293: Tensor[(6, 11, 14), uint32]) -> Tensor[(6, 11, 14), float64] {
  @func_7292(%var_7293) /* ty=Tensor[(6, 11, 14), float64] */
}

def @func_2218(%var_2216: Tensor[(4, 4, 12), int8], %var_2217: Tensor[(336), bool]) -> (Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(4, 4, 12), int16], Tensor[(3, 12, 4), float64], Tensor[(336), bool]) {
  @func_2214(%var_2216, %var_2217) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(4, 4, 12), int16], Tensor[(3, 12, 4), float64], Tensor[(336), bool]) */
}

def @func_5381(%var_5377: Tensor[(16, 15, 4), float64], %var_5378: int32, %var_5379: Tensor[(432), int32], %var_5380: Tensor[(96, 2), int8]) -> (Tensor[(16, 15, 4), int64], Tensor[(8, 18), float64], int32, Tensor[(432), int32], Tensor[(96, 2), int8], Tensor[(4, 36), float64]) {
  %889 = fn (%var_5329: Tensor[(16, 15, 4), float64], %var_5360: int32, %var_5361: Tensor[(432), int32], %var_5362: Tensor[(96, 2), int8]) -> (Tensor[(16, 15, 4), int64], Tensor[(8, 18), float64], int32, Tensor[(432), int32], Tensor[(96, 2), int8], Tensor[(4, 36), float64]) {
    %867 = cast(%var_5329, dtype="float64") /* ty=Tensor[(16, 15, 4), float64] */;
    %868 = acosh(%867) /* ty=Tensor[(16, 15, 4), float64] */;
    %869 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 15, 4), float64] */, dtype="bool") /* ty=Tensor[(16, 15, 4), bool] */;
    %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(%868, dtype="bool") /* ty=Tensor[(16, 15, 4), bool] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %873 = greater(%871, %872) /* ty=Tensor[(16, 15, 4), bool] */;
    %874 = cast(%873, dtype="int64") /* ty=Tensor[(16, 15, 4), int64] */;
    %875 = shape_of(%var_5329, dtype="int32") /* ty=Tensor[(3), int32] */;
    %876 = cast(%var_5329, dtype="int64") /* ty=Tensor[(16, 15, 4), int64] */;
    %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %878 = cast(%var_5360, dtype="int32") /* ty=int32 */;
    %879 = cast(%var_5361, dtype="int32") /* ty=Tensor[(432), int32] */;
    %880 = cast(%var_5362, dtype="int8") /* ty=Tensor[(96, 2), int8] */;
    %881 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %882 = reshape(%878, newshape=[]) /* ty=int32 */;
    %883 = reshape(%879, newshape=[9, 12, 4]) /* ty=Tensor[(9, 12, 4), int32] */;
    %884 = reshape(%880, newshape=[192]) /* ty=Tensor[(192), int8] */;
    %885 = reshape(%881, newshape=[8, 18]) /* ty=Tensor[(8, 18), float64] */;
    %886 = @func_3701(%882, %883, %884, %885) /* ty=(Tensor[(9, 12, 4), int32], Tensor[(13, 16, 10), bool], Tensor[(2080), float64], Tensor[(90), float64], Tensor[(16, 2, 15), bool], Tensor[(192), int8], Tensor[(336), bool], Tensor[(9, 12, 4), bool], Tensor[(16, 2, 15), bool], Tensor[(?, 9, 2), bool], Tensor[(8, 18), float64]) */;
    %887 = bitwise_and(%876, %877) /* ty=Tensor[(16, 15, 4), int64] */;
    %888 = %886.10;
    (%887, %888, %var_5360, %var_5361, %var_5362, meta[relay.Constant][40] /* ty=Tensor[(4, 36), float64] */)
  };
  %889(%var_5377, %var_5378, %var_5379, %var_5380) /* ty=(Tensor[(16, 15, 4), int64], Tensor[(8, 18), float64], int32, Tensor[(432), int32], Tensor[(96, 2), int8], Tensor[(4, 36), float64]) */
}

def @func_4418() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %890 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %891 = %890.0;
  %892 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %893 = %892.0;
  %894 = cast(%893, dtype="uint32") /* ty=Tensor[(9, 4, 14), uint32] */;
  %895 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%891, dtype="uint32") /* ty=Tensor[(9, 4, 14), uint32] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %898 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %899 = right_shift(%896, %897) /* ty=Tensor[(9, 4, 14), uint32] */;
  (%898, %899)
}

def @func_8534() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  @func_8532() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */
}

def @func_8712(%var_8710: Tensor[(1, 11, 4), uint32], %var_8711: Tensor[(15, 11, 4), uint32]) -> (Tensor[(15, 11, 4), int32], Tensor[(1, 11, 4), float64], Tensor[(15, 11, 4), float32]) {
  @func_8708(%var_8710, %var_8711) /* ty=(Tensor[(15, 11, 4), int32], Tensor[(1, 11, 4), float64], Tensor[(15, 11, 4), float32]) */
}

def @func_12629() -> (Tensor[(16, 2, 15), bool],) {
  @func_12627() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_11423() -> (Tensor[(9, 4, 14), float32],) {
  @func_11421() /* ty=(Tensor[(9, 4, 14), float32],) */
}

def @func_13036() -> (Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64]) {
  %900 = @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %901 = @func_5910() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %902 = %900.1;
  %903 = %901.0;
  (%902, %903)
}

def @func_4933() -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) {
  @func_4931() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) */
}

def @func_4420() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */
}

def @func_7292(%var_7279: Tensor[(6, 11, 14), uint32]) -> Tensor[(6, 11, 14), float64] {
  %904 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 11, 14), uint32] */, dtype="bool") /* ty=Tensor[(6, 11, 14), bool] */;
  %905 = shape_of(%var_7279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%var_7279, dtype="bool") /* ty=Tensor[(6, 11, 14), bool] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %908 = not_equal(%906, %907) /* ty=Tensor[(6, 11, 14), bool] */;
  %909 = cast(%908, dtype="float64") /* ty=Tensor[(6, 11, 14), float64] */;
  sin(%909) /* ty=Tensor[(6, 11, 14), float64] */
}

def @func_109(%var_108: Tensor[(1, 9, 2), float32]) -> (Tensor[(?, 9, 2), bool],) {
  %917 = fn (%var_74: Tensor[(1, 9, 2), float32]) -> (Tensor[(?, 9, 2), bool],) {
    %910 = cast(%var_74, dtype="float32") /* ty=Tensor[(1, 9, 2), float32] */;
    %911 = sinh(%910) /* ty=Tensor[(1, 9, 2), float32] */;
    %912 = cast(%911, dtype="bool") /* ty=Tensor[(1, 9, 2), bool] */;
    %913 = shape_of(%var_74, dtype="int32") /* ty=Tensor[(3), int32] */;
    %914 = cast(%var_74, dtype="bool") /* ty=Tensor[(1, 9, 2), bool] */;
    %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %916 = logical_or(%914, %915) /* ty=Tensor[(?, 9, 2), bool] */;
    (%916,)
  };
  %917(%var_108) /* ty=(Tensor[(?, 9, 2), bool],) */
}

def @func_5123() -> Tensor[(9, 4, 14), uint32] {
  %919 = fn () -> Tensor[(9, 4, 14), uint32] {
    %918 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %918.0
  };
  %919() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_4569() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
  %924 = fn () -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) {
    %920 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
    %921 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
    %922 = %920.1;
    %923 = %921.1;
    (%922, %923)
  };
  %924() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */
}

def @func_8251() -> Tensor[(9, 4, 14), uint32] {
  %926 = fn () -> Tensor[(9, 4, 14), uint32] {
    %925 = @func_5449() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %925.0
  };
  %926() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_9315() -> (Tensor[(?, 9, 2), bool],) {
  %929 = fn () -> (Tensor[(?, 9, 2), bool],) {
    %927 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
    %928 = %927.3;
    (%928,)
  };
  %929() /* ty=(Tensor[(?, 9, 2), bool],) */
}

def @func_7095() -> (Tensor[(9, 4, 14), uint32],) {
  %930 = @func_6689() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %931 = %930.0;
  (%931,)
}

def @func_13050() -> Tensor[(13, 16, 9), float64] {
  %932 = @func_7732() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
  %932.1
}

def @func_13232() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float32]) {
  %938 = fn () -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float32]) {
    %933 = @func_10785() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %934 = @func_4270() /* ty=(Tensor[(9, 4, 14), float32],) */;
    %935 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
    %936 = %933.0;
    %937 = %934.0;
    (%935, %936, %937)
  };
  %938() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float32]) */
}

def @func_9593() -> (Tensor[(9, 4, 14), uint32],) {
  %939 = @func_7095() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %940 = %939.0;
  (%940,)
}

def @func_1264(%var_1262: bool, %var_1263: Tensor[(2, 12, 14), bool]) -> (Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) {
  @func_1260(%var_1262, %var_1263) /* ty=(Tensor[(2, 12, 14), bool], Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(3, 12, 4), float64]) */
}

def @func_7314() -> (Tensor[(9, 4, 14), float64],) {
  %943 = fn () -> (Tensor[(9, 4, 14), float64],) {
    %941 = @func_6460() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %942 = %941.0;
    (%942,)
  };
  %943() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_9057() -> Tensor[(9, 4, 14), float64] {
  %944 = @func_6128() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %944.0
}

def @func_12608() -> (Tensor[(13, 16, 9), float32],) {
  @func_12606() /* ty=(Tensor[(13, 16, 9), float32],) */
}

def @func_7579() -> (Tensor[(9, 4, 14), float64],) {
  %945 = @func_6832() /* ty=Tensor[(9, 4, 14), float64] */;
  (%945,)
}

def @func_213(%var_212: Tensor[(3, 12, 4), float64]) -> (Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
  %955 = fn (%var_187: Tensor[(3, 12, 4), float64]) -> (Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
    %946 = cast(%var_187, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
    %947 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(3, 12, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %948 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 4), float64] */;
    %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %950 = cast(meta[relay.Constant][43] /* ty=Tensor[(18), float32] */, dtype="float32") /* ty=Tensor[(18), float32] */;
    %951 = reshape(%950, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
    %952 = @func_107(%951) /* ty=(Tensor[(?, 9, 2), bool],) */;
    %953 = subtract(%948, %949) /* ty=Tensor[(3, 12, 4), float64] */;
    %954 = %952.0;
    (%953, %954, meta[relay.Constant][43] /* ty=Tensor[(18), float32] */)
  };
  %955(%var_212) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */
}

def @func_10786() -> (Tensor[(9, 4, 14), uint32],) {
  %958 = fn () -> (Tensor[(9, 4, 14), uint32],) {
    %956 = @func_7216() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(900), float64], Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
    %957 = %956.0;
    (%957,)
  };
  %958() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_10866() -> Tensor[(9, 4, 14), uint32] {
  %960 = fn () -> Tensor[(9, 4, 14), uint32] {
    %959 = @func_5184() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
    %959.0
  };
  %960() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_10885(%var_10877: uint32, %var_10878: Tensor[(3, 8, 6), uint32]) -> (Tensor[(3, 8, 6), bool],) {
  %961 = cast(%var_10877, dtype="bool") /* ty=bool */;
  %962 = cast(%var_10878, dtype="bool") /* ty=Tensor[(3, 8, 6), bool] */;
  %963 = greater(%961, %962) /* ty=Tensor[(3, 8, 6), bool] */;
  (%963,)
}

def @func_12627() -> (Tensor[(16, 2, 15), bool],) {
  %964 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
  %965 = %964.1;
  (%965,)
}

def @func_12889(%var_12887: Tensor[(90), float64], %var_12888: Tensor[(1872), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(1820), int64], Tensor[(90), float64], Tensor[(1872), float64], Tensor[(1170), int64]) {
  @func_12885(%var_12887, %var_12888) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(1820), int64], Tensor[(90), float64], Tensor[(1872), float64], Tensor[(1170), int64]) */
}

def @func_2265(%var_2259: Tensor[(2, 5, 5), float64], %var_2260: Tensor[(2, 5, 5), float64]) -> (Tensor[(2, 5, 5), bool],) {
  %966 = cast(%var_2260, dtype="bool") /* ty=Tensor[(2, 5, 5), bool] */;
  %967 = shape_of(%var_2259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %968 = cast(%var_2259, dtype="bool") /* ty=Tensor[(2, 5, 5), bool] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %970 = greater_equal(%968, %969) /* ty=Tensor[(2, 5, 5), bool] */;
  (%970,)
}

def @func_9727() -> Tensor[(13, 16, 9), float64] {
  %971 = @func_4931() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) */;
  %971.0
}

def @func_6425() -> (Tensor[(13, 16, 9), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(16, 2, 15), bool]) {
  @func_6423() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_10146() -> Tensor[(9, 4, 14), uint32] {
  @func_10144() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_12214(%var_12213: Tensor[(2, 6, 16), float64]) -> (Tensor[(2, 6, 16), float64],) {
  %974 = fn (%var_12207: Tensor[(2, 6, 16), float64]) -> (Tensor[(2, 6, 16), float64],) {
    %972 = cast(%var_12207, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
    %973 = cosh(%972) /* ty=Tensor[(2, 6, 16), float64] */;
    (%973,)
  };
  %974(%var_12213) /* ty=(Tensor[(2, 6, 16), float64],) */
}

def @func_12606() -> (Tensor[(13, 16, 9), float32],) {
  %975 = @func_7996() /* ty=(Tensor[(13, 16, 9), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64]) */;
  %976 = %975.0;
  (%976,)
}

def @func_12952() -> (Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), uint32], Tensor[(14, 8, 9), bool], Tensor[(112), int16], Tensor[(1008), int16]) {
  %977 = @func_11421() /* ty=(Tensor[(9, 4, 14), float32],) */;
  %978 = @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %979 = cast(meta[relay.Constant][44] /* ty=Tensor[(112), int16] */, dtype="int16") /* ty=Tensor[(112), int16] */;
  %980 = cast(meta[relay.Constant][45] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %981 = cast(meta[relay.Constant][45] /* ty=Tensor[(1008), int16] */, dtype="int16") /* ty=Tensor[(1008), int16] */;
  %982 = reshape(%979, newshape=[14, 8, 1]) /* ty=Tensor[(14, 8, 1), int16] */;
  %983 = reshape(%980, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), int16] */;
  %984 = reshape(%981, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), int16] */;
  %985 = @func_5765(%982, %983, %984) /* ty=(Tensor[(14, 8, 9), bool], Tensor[(14, 8, 9), uint8]) */;
  %986 = %977.0;
  %987 = %978.0;
  %988 = %985.0;
  (%986, %987, %988, meta[relay.Constant][44] /* ty=Tensor[(112), int16] */, meta[relay.Constant][45] /* ty=Tensor[(1008), int16] */)
}

def @func_13038() -> (Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64]) {
  @func_13036() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(13, 16, 9), float64]) */
}

def @func_4174(%var_4172: bool, %var_4173: Tensor[(480), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(144), float64], bool, Tensor[(336), bool], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(2, 6, 11), float64], Tensor[(3, 12, 4), float64], Tensor[(33, 4), float64], bool, Tensor[(176), float64]) {
  @func_4170(%var_4172, %var_4173) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(144), float64], bool, Tensor[(336), bool], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(2, 6, 11), float64], Tensor[(3, 12, 4), float64], Tensor[(33, 4), float64], bool, Tensor[(176), float64]) */
}

def @func_5129() -> Tensor[(9, 4, 14), uint32] {
  %990 = fn () -> Tensor[(9, 4, 14), uint32] {
    %989 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %989.0
  };
  %990() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_9408() -> (Tensor[(9, 4, 14), float64], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64]) {
  %999 = fn () -> (Tensor[(9, 4, 14), float64], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64]) {
    %991 = cast(meta[relay.Constant][46] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %992 = reshape(%991, newshape=[13, 16, 9]) /* ty=Tensor[(13, 16, 9), float64] */;
    %993 = @func_6924(%992) /* ty=(Tensor[(13, 16, 9), uint64],) */;
    %994 = @func_5604() /* ty=(Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
    %995 = @func_9057() /* ty=Tensor[(9, 4, 14), float64] */;
    %996 = %993.0;
    %997 = %994.1;
    %998 = @func_9169() /* ty=Tensor[(9, 4, 14), float64] */;
    (%995, %996, meta[relay.Constant][46] /* ty=Tensor[(1872), float64] */, %997, %998)
  };
  %999() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(13, 16, 9), uint64], Tensor[(1872), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64]) */
}

def @func_6808() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %1012 = fn () -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
    %1000 = @func_6567() /* ty=Tensor[(9, 4, 14), float64] */;
    %1001 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 4, 14), float64] */, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
    %1002 = shape_of(%1000, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1003 = cast(%1000, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
    %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1005 = maximum(%1003, %1004) /* ty=Tensor[(9, 4, 14), float32] */;
    %1006 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 4, 14), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
    %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1008 = cast(%1005, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
    %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1010 = floor_mod(%1008, %1009) /* ty=Tensor[(9, 4, 14), float64] */;
    %1011 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
    (%1010, %1011)
  };
  %1012() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */
}

def @func_4270() -> (Tensor[(9, 4, 14), float32],) {
  %1013 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
  %1014 = cast(%1013, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %1015 = atanh(%1014) /* ty=Tensor[(9, 4, 14), float32] */;
  (%1015,)
}

def @func_10059(%var_10026: Tensor[(660), uint32], %var_10030: Tensor[(144), float64]) -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(660), uint32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64]) {
  %1016 = @func_8067() /* ty=(Tensor[(176), float64], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) */;
  %1017 = cast(%var_10026, dtype="uint32") /* ty=Tensor[(660), uint32] */;
  %1018 = reshape(%1017, newshape=[660]) /* ty=Tensor[(660), uint32] */;
  %1019 = @func_9248(%1018) /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(15, 11, 4), float32], Tensor[(44, 1), uint32], Tensor[(660), uint32]) */;
  %1020 = cast(%var_10030, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1021 = reshape(%1020, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
  %1022 = @func_211(%1021) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
  %1023 = %1016.2;
  %1024 = %1019.0;
  %1025 = %1022.2;
  %1026 = @func_4991() /* ty=Tensor[(9, 4, 14), float64] */;
  (%1023, %1024, %var_10026, %1025, %var_10030, %1026)
}

def @func_7465() -> Tensor[(9, 4, 14), float64] {
  %1028 = fn () -> Tensor[(9, 4, 14), float64] {
    %1027 = @func_6807() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
    %1027.0
  };
  %1028() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_5304() -> (Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) {
  %1034 = fn () -> (Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) {
    %1029 = cast(meta[relay.Constant][48] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
    %1030 = reshape(%1029, newshape=[11, 8, 2]) /* ty=Tensor[(11, 8, 2), float64] */;
    %1031 = @func_2245(%1030) /* ty=(Tensor[(11, 8, 2), float64], Tensor[(2, 12, 14), bool], bool, Tensor[(336), bool]) */;
    %1032 = @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */;
    %1033 = %1031.1;
    (%1032, %1033, meta[relay.Constant][48] /* ty=Tensor[(176), float64] */)
  };
  %1034() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(2, 12, 14), bool], Tensor[(176), float64]) */
}

def @func_5477() -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), float64]) {
  %1035 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %1036 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %1037 = @func_5402() /* ty=Tensor[(13, 16, 9), float64] */;
  %1038 = %1035.0;
  %1039 = %1036.0;
  (%1037, %1038, %1039)
}

def @func_6461() -> (Tensor[(9, 4, 14), float64],) {
  %1042 = fn () -> (Tensor[(9, 4, 14), float64],) {
    %1040 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %1041 = %1040.0;
    (%1041,)
  };
  %1042() /* ty=(Tensor[(9, 4, 14), float64],) */
}

def @func_6690() -> (Tensor[(9, 4, 14), uint32],) {
  %1045 = fn () -> (Tensor[(9, 4, 14), uint32],) {
    %1043 = @func_4814() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %1044 = %1043.0;
    (%1044,)
  };
  %1045() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_4356(%var_4354: Tensor[(432), int32], %var_4355: Tensor[(4, 120), float64]) -> (Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(336), bool], int32, Tensor[(432), int32], Tensor[(192), int8], Tensor[(16, 2, 15), bool], Tensor[(4, 120), float64], Tensor[(3, 12, 4), float64]) {
  @func_4352(%var_4354, %var_4355) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(336), bool], int32, Tensor[(432), int32], Tensor[(192), int8], Tensor[(16, 2, 15), bool], Tensor[(4, 120), float64], Tensor[(3, 12, 4), float64]) */
}

def @func_5438() -> (Tensor[(9, 4, 14), uint32],) {
  @func_5436() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_8651() -> Tensor[(9, 4, 14), float64] {
  @func_8649() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_7733() -> (Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
  %1052 = fn () -> (Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) {
    %1046 = @func_5016() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */;
    %1047 = %1046.0;
    %1048 = cast(%1047, dtype="float64") /* ty=Tensor[(13, 16, 9), float64] */;
    %1049 = @func_4887() /* ty=(Tensor[(13, 16, 9), float64],) */;
    %1050 = exp(%1048) /* ty=Tensor[(13, 16, 9), float64] */;
    %1051 = %1049.0;
    (%1050, %1051)
  };
  %1052() /* ty=(Tensor[(13, 16, 9), float64], Tensor[(13, 16, 9), float64]) */
}

def @func_11761() -> (Tensor[(9, 4, 14), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90, 1), float64], Tensor[(9, 4, 14), uint32]) {
  %1063 = fn () -> (Tensor[(9, 4, 14), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90, 1), float64], Tensor[(9, 4, 14), uint32]) {
    %1053 = @func_9847() /* ty=(Tensor[(9, 4, 14), float64],) */;
    %1054 = cast(meta[relay.Constant][49] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %1055 = cast(meta[relay.Constant][50] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
    %1056 = reshape(%1054, newshape=[2080]) /* ty=Tensor[(2080), float64] */;
    %1057 = reshape(%1055, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %1058 = @func_5573(%1056, %1057) /* ty=(Tensor[(13, 16, 9), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90), float64]) */;
    %1059 = @func_8456() /* ty=(Tensor[(9, 4, 14), uint32],) */;
    %1060 = %1053.0;
    %1061 = %1058.1;
    %1062 = %1059.0;
    (%1060, %1061, meta[relay.Constant][49] /* ty=Tensor[(2080), float64] */, meta[relay.Constant][50] /* ty=Tensor[(90, 1), float64] */, %1062)
  };
  %1063() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(144), float64], Tensor[(2080), float64], Tensor[(90, 1), float64], Tensor[(9, 4, 14), uint32]) */
}

def @func_8335() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), float64]) {
  %1064 = @func_6689() /* ty=(Tensor[(9, 4, 14), uint32],) */;
  %1065 = %1064.0;
  %1066 = @func_6832() /* ty=Tensor[(9, 4, 14), float64] */;
  (%1065, %1066)
}

def @func_4757(%var_4748: Tensor[(18), float32]) -> (Tensor[(10, 15, 6), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32], Tensor[(9, 4, 14), float64]) {
  %1067 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 15, 6), float64] */;
  %1068 = cast(%var_4748, dtype="float32") /* ty=Tensor[(18), float32] */;
  %1069 = reshape(%1068, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %1070 = @func_107(%1069) /* ty=(Tensor[(?, 9, 2), bool],) */;
  %1071 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %1072 = sigmoid(%1067) /* ty=Tensor[(10, 15, 6), float64] */;
  %1073 = %1070.0;
  %1074 = %1071.0;
  (%1072, %1073, %var_4748, %1074)
}

def @func_8457() -> (Tensor[(9, 4, 14), uint32],) {
  %1076 = fn () -> (Tensor[(9, 4, 14), uint32],) {
    %1075 = @func_4960() /* ty=Tensor[(9, 4, 14), uint32] */;
    (%1075,)
  };
  %1076() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_4931() -> (Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), uint32]) {
  %1077 = @func_4887() /* ty=(Tensor[(13, 16, 9), float64],) */;
  %1078 = @func_4568() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32]) */;
  %1079 = %1077.0;
  %1080 = %1078.1;
  (%1079, %1080)
}

def @func_5606() -> (Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) {
  @func_5604() /* ty=(Tensor[(176), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */
}

def @func_4456(%var_4455: Tensor[(7, 16, 2), bool]) -> Tensor[(7, 16, 2), bool] {
  %1085 = fn (%var_4445: Tensor[(7, 16, 2), bool]) -> Tensor[(7, 16, 2), bool] {
    %1081 = cast(%var_4445, dtype="bool") /* ty=Tensor[(7, 16, 2), bool] */;
    %1082 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(7, 16, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1083 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 16, 2), bool] */, dtype="bool") /* ty=Tensor[(7, 16, 2), bool] */;
    %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%1083, %1084) /* ty=Tensor[(7, 16, 2), bool] */
  };
  %1085(%var_4455) /* ty=Tensor[(7, 16, 2), bool] */
}

def @func_4703(%var_4699: Tensor[(13, 13, 15), int16], %var_4700: Tensor[(432), int32], %var_4701: Tensor[(480), float64], %var_4702: Tensor[(144), float64]) -> (Tensor[(13, 13, 15), int16], Tensor[(432), int32], Tensor[(480), float64], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), float64], Tensor[(2, 5, 5), bool], Tensor[(5, 10), float64]) {
  %1108 = fn (%var_4620: Tensor[(13, 13, 15), int16], %var_4637: Tensor[(432), int32], %var_4638: Tensor[(480), float64], %var_4645: Tensor[(144), float64]) -> (Tensor[(13, 13, 15), int16], Tensor[(432), int32], Tensor[(480), float64], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), float64], Tensor[(2, 5, 5), bool], Tensor[(5, 10), float64]) {
    %1086 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 1, 15), int16] */, dtype="int16") /* ty=Tensor[(13, 1, 15), int16] */;
    %1087 = cast(%var_4620, dtype="int16") /* ty=Tensor[(13, 13, 15), int16] */;
    %1088 = cast(%var_4645, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1089 = reshape(%1088, newshape=[3, 12, 4]) /* ty=Tensor[(3, 12, 4), float64] */;
    %1090 = @func_211(%1089) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(?, 9, 2), bool], Tensor[(18), float32]) */;
    %1091 = cast(%var_4637, dtype="int32") /* ty=Tensor[(432), int32] */;
    %1092 = cast(%var_4638, dtype="float64") /* ty=Tensor[(480), float64] */;
    %1093 = reshape(%1091, newshape=[432]) /* ty=Tensor[(432), int32] */;
    %1094 = reshape(%1092, newshape=[4, 120]) /* ty=Tensor[(4, 120), float64] */;
    %1095 = @func_4352(%1093, %1094) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(336), bool], int32, Tensor[(432), int32], Tensor[(192), int8], Tensor[(16, 2, 15), bool], Tensor[(4, 120), float64], Tensor[(3, 12, 4), float64]) */;
    %1096 = %1095.0;
    %1097 = cast(%1096, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
    %1098 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 10), float64] */;
    %1099 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 10), float64] */;
    %1100 = reshape(%1098, newshape=[2, 5, 5]) /* ty=Tensor[(2, 5, 5), float64] */;
    %1101 = reshape(%1099, newshape=[2, 5, 5]) /* ty=Tensor[(2, 5, 5), float64] */;
    %1102 = @func_2265(%1100, %1101) /* ty=(Tensor[(2, 5, 5), bool],) */;
    %1103 = minimum(%1086, %1087) /* ty=Tensor[(13, 13, 15), int16] */;
    %1104 = %1090.2;
    %1105 = sin(%1097) /* ty=Tensor[(9, 4, 14), float32] */;
    %1106 = @func_4052() /* ty=Tensor[(9, 4, 14), float64] */;
    %1107 = %1102.0;
    (%1103, %var_4637, %var_4638, %1104, %var_4645, %1105, %1106, %1107, meta[relay.Constant][54] /* ty=Tensor[(5, 10), float64] */)
  };
  %1108(%var_4699, %var_4700, %var_4701, %var_4702) /* ty=(Tensor[(13, 13, 15), int16], Tensor[(432), int32], Tensor[(480), float64], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float32], Tensor[(9, 4, 14), float64], Tensor[(2, 5, 5), bool], Tensor[(5, 10), float64]) */
}

def @func_5881(%var_5879: Tensor[(1008), int16]) -> (Tensor[(90), float64], Tensor[(1, 1872), float64], Tensor[(14, 8, 9), uint8], Tensor[(112), int16], Tensor[(1008), int16], Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float32]) {
  @func_5878(%var_5879) /* ty=(Tensor[(90), float64], Tensor[(1, 1872), float64], Tensor[(14, 8, 9), uint8], Tensor[(112), int16], Tensor[(1008), int16], Tensor[(9, 4, 14), uint8], Tensor[(9, 4, 14), float32]) */
}

def @func_6484() -> Tensor[(9, 4, 14), float64] {
  @func_6482() /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_6617() -> Tensor[(9, 4, 14), uint32] {
  %1109 = fn () -> Tensor[(9, 4, 14), uint32] {
    @func_5128() /* ty=Tensor[(9, 4, 14), uint32] */
  };
  %1109() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_8532() -> (Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) {
  %1110 = @func_4512() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %1111 = %1110.0;
  %1112 = @func_5788() /* ty=Tensor[(9, 4, 14), uint32] */;
  (%1111, %1112)
}

def @func_5789() -> Tensor[(9, 4, 14), uint32] {
  %1113 = fn () -> Tensor[(9, 4, 14), uint32] {
    @func_5122() /* ty=Tensor[(9, 4, 14), uint32] */
  };
  %1113() /* ty=Tensor[(9, 4, 14), uint32] */
}

def @func_4991() -> Tensor[(9, 4, 14), float64] {
  %1114 = @func_4418() /* ty=(Tensor[(9, 4, 14), float64], Tensor[(9, 4, 14), uint32]) */;
  %1115 = %1114.0;
  %1116 = cast(%1115, dtype="float64") /* ty=Tensor[(9, 4, 14), float64] */;
  log10(%1116) /* ty=Tensor[(9, 4, 14), float64] */
}

def @func_6482() -> Tensor[(9, 4, 14), float64] {
  %1117 = @func_5158() /* ty=(Tensor[(9, 4, 14), float64],) */;
  %1117.0
}

def @func_7427() -> (Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(?, 9, 2), float64]) {
  @func_7425() /* ty=(Tensor[(9, 4, 14), uint32], Tensor[(9, 4, 14), uint32], Tensor[(?, 9, 2), float64]) */
}

def @func_12032() -> (Tensor[(13, 16, 9), float32],) {
  %1120 = fn () -> (Tensor[(13, 16, 9), float32],) {
    %1118 = @func_7996() /* ty=(Tensor[(13, 16, 9), float32], Tensor[(13, 16, 9), float64], Tensor[(9, 4, 14), float64]) */;
    %1119 = %1118.0;
    (%1119,)
  };
  %1120() /* ty=(Tensor[(13, 16, 9), float32],) */
}

def @func_9729() -> Tensor[(13, 16, 9), float64] {
  @func_9727() /* ty=Tensor[(13, 16, 9), float64] */
}

def @func_5275(%var_5274: Tensor[(13, 16, 9), float64]) -> (Tensor[(13, 16, 9), bool], Tensor[(144), float64], Tensor[(1040, 2), float64], Tensor[(90), float64]) {
  %1136 = fn (%var_5241: Tensor[(13, 16, 9), float64]) -> (Tensor[(13, 16, 9), bool], Tensor[(144), float64], Tensor[(1040, 2), float64], Tensor[(90), float64]) {
    %1121 = @func_4887() /* ty=(Tensor[(13, 16, 9), float64],) */;
    %1122 = %1121.0;
    %1123 = cast(%var_5241, dtype="bool") /* ty=Tensor[(13, 16, 9), bool] */;
    %1124 = shape_of(%1122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1125 = cast(%1122, dtype="bool") /* ty=Tensor[(13, 16, 9), bool] */;
    %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1127 = cast(meta[relay.Constant][55] /* ty=Tensor[(1040, 2), float64] */, dtype="float64") /* ty=Tensor[(1040, 2), float64] */;
    %1128 = cast(meta[relay.Constant][56] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %1129 = cast(meta[relay.Constant][55] /* ty=Tensor[(1040, 2), float64] */, dtype="float64") /* ty=Tensor[(1040, 2), float64] */;
    %1130 = reshape(%1127, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %1131 = reshape(%1128, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %1132 = reshape(%1129, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %1133 = @func_1982(%1130, %1131, %1132) /* ty=(Tensor[(3, 12, 4), float64], Tensor[(144), float64], Tensor[(9, 10, ?), int64], Tensor[(90), float64], Tensor[(13, 16, 10), bool]) */;
    %1134 = less_equal(%1125, %1126) /* ty=Tensor[(13, 16, 9), bool] */;
    %1135 = %1133.1;
    (%1134, %1135, meta[relay.Constant][55] /* ty=Tensor[(1040, 2), float64] */, meta[relay.Constant][56] /* ty=Tensor[(90), float64] */)
  };
  %1136(%var_5274) /* ty=(Tensor[(13, 16, 9), bool], Tensor[(144), float64], Tensor[(1040, 2), float64], Tensor[(90), float64]) */
}

def @func_9537(%var_9536: Tensor[(480), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64], Tensor[(432), int32], Tensor[(480), float64]) {
  %1146 = fn (%var_9526: Tensor[(480), float64]) -> (Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64], Tensor[(432), int32], Tensor[(480), float64]) {
    %1137 = @func_5662() /* ty=(Tensor[(176), float64], Tensor[(16, 2, 15), bool], Tensor[(480), float64], Tensor[(?, 9, 2), bool]) */;
    %1138 = cast(meta[relay.Constant][57] /* ty=Tensor[(432), int32] */, dtype="int32") /* ty=Tensor[(432), int32] */;
    %1139 = cast(%var_9526, dtype="float64") /* ty=Tensor[(480), float64] */;
    %1140 = reshape(%1138, newshape=[432]) /* ty=Tensor[(432), int32] */;
    %1141 = reshape(%1139, newshape=[4, 120]) /* ty=Tensor[(4, 120), float64] */;
    %1142 = @func_4352(%1140, %1141) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(18), float32], Tensor[(144), float64], Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(336), bool], int32, Tensor[(432), int32], Tensor[(192), int8], Tensor[(16, 2, 15), bool], Tensor[(4, 120), float64], Tensor[(3, 12, 4), float64]) */;
    %1143 = @func_9057() /* ty=Tensor[(9, 4, 14), float64] */;
    %1144 = %1137.3;
    %1145 = %1142.3;
    (%1143, %1144, %1145, meta[relay.Constant][57] /* ty=Tensor[(432), int32] */, %var_9526)
  };
  %1146(%var_9536) /* ty=(Tensor[(9, 4, 14), float64], Tensor[(?, 9, 2), bool], Tensor[(9, 4, 14), float64], Tensor[(432), int32], Tensor[(480), float64]) */
}

def @func_9595() -> (Tensor[(9, 4, 14), uint32],) {
  @func_9593() /* ty=(Tensor[(9, 4, 14), uint32],) */
}

def @func_12962() -> Tensor[(9, 4, 14), uint32] {
  @func_12960() /* ty=Tensor[(9, 4, 14), uint32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

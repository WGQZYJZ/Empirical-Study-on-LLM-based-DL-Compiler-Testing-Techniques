==========mod==========
#[version = "0.0.5"]
def @func_11964() -> Tensor[(12, 84), int64] {
  %0 = @func_11566() /* ty=(Tensor[(12, 84), int64],) */;
  %0.0
}

def @func_8091(%var_8085: Tensor[(720), uint8]) -> (Tensor[(14, 14, 12), float64], Tensor[(286), float64], Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint8], Tensor[(720), uint8]) {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 14, 12), float64] */, dtype="float64") /* ty=Tensor[(14, 14, 12), float64] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %3 = reshape(%2, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %4 = @func_7439(%3) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) */;
  %5 = %4.6;
  %6 = cast(%5, dtype="float64") /* ty=Tensor[(286), float64] */;
  %7 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(286), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(286), float32] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?), float64] */;
  %10 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %11 = cast(%var_8085, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %12 = cast(%var_8085, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %13 = cast(%var_8085, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %14 = reshape(%11, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %15 = reshape(%12, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %16 = reshape(%13, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %17 = @func_6533(%14, %15, %16) /* ty=(Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) */;
  %18 = asinh(%1) /* ty=Tensor[(14, 14, 12), float64] */;
  %19 = subtract(%8, %9) /* ty=Tensor[(286), float64] */;
  %20 = %10.3;
  %21 = %17.0;
  (%18, %19, %20, %21, %var_8085)
}

def @func_11081() -> Tensor[(9, 8, ?), bool] {
  @func_10145() /* ty=Tensor[(9, 8, ?), bool] */
}

def @func_156(%var_145: Tensor[(9, 7, 8), bool]) -> (Tensor[(9, 7, 8), bool],) {
  %22 = cast(%var_145, dtype="bool") /* ty=Tensor[(9, 7, 8), bool] */;
  %23 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(9, 7, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(9, 7, 8), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = logical_and(%24, %25) /* ty=Tensor[(9, 7, 8), bool] */;
  (%26,)
}

def @func_10531() -> (Tensor[(96), float64],) {
  %27 = @func_10383() /* ty=(Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(96), float64]) */;
  %28 = %27.2;
  (%28,)
}

def @func_8622() -> (Tensor[(10, 11, 4), float32], Tensor[(12, 84), float32]) {
  %29 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %30 = @func_8038() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */;
  %31 = %30.1;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 84), int64] */, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(2), int32] */;
  %34 = cast(%31, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %36 = %29.0;
  %37 = floor_mod(%34, %35) /* ty=Tensor[(12, 84), float32] */;
  (%36, %37)
}

def @func_11631(%var_11625: Tensor[(512, 10), int64]) -> (Tensor[(16, 5, 11), float64], float32, Tensor[(512, 10), uint64]) {
  %38 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %39 = cast(-8.86395f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %40 = reshape(%39, newshape=[]) /* ty=float32 */;
  %41 = @func_6582(%40) /* ty=(Tensor[(10, 11, 4), float32], float32, Tensor[(126), float32], Tensor[(2, 12, 4), float32], Tensor[(2, 16, 16), bool], Tensor[(512, 1), int64]) */;
  %42 = %41.5;
  %43 = cast(%42, dtype="uint64") /* ty=Tensor[(512, 1), uint64] */;
  %44 = cast(%var_11625, dtype="uint64") /* ty=Tensor[(512, 10), uint64] */;
  %45 = %38.0;
  %46 = logical_xor(%43, %44) /* ty=Tensor[(512, 10), uint64] */;
  (%45, -8.86395f /* ty=float32 */, %46)
}

def @func_6821(%var_6796: Tensor[(12, 84), int64]) -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), uint8]) {
  %47 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %48 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %49 = %48.1;
  %50 = cast(%var_6796, dtype="uint8") /* ty=Tensor[(12, 84), uint8] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(2), int32] */;
  %52 = cast(%49, dtype="uint8") /* ty=Tensor[(12, 84), uint8] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %54 = %47.0;
  %55 = bitwise_xor(%52, %53) /* ty=Tensor[(12, 84), uint8] */;
  (%54, %55)
}

def @func_6318() -> (Tensor[(16, 5, 11), float64],) {
  %56 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %57 = %56.0;
  (%57,)
}

def @func_9876(%var_9867: Tensor[(286), float32], %var_9868: Tensor[(1040), uint32], %var_9869: int8, %var_9871: Tensor[(270), float32], %var_9872: Tensor[(1008), int64]) -> (Tensor[(16, 5, 11), float32], Tensor[(13, 11, 2), float32], Tensor[(286), float32], Tensor[(1040), uint32], int8, Tensor[(112), int8], Tensor[(270), float32], Tensor[(1008), int64]) {
  %58 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %59 = cast(%var_9867, dtype="float32") /* ty=Tensor[(286), float32] */;
  %60 = cast(%var_9868, dtype="uint32") /* ty=Tensor[(1040), uint32] */;
  %61 = cast(%var_9869, dtype="int8") /* ty=int8 */;
  %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %63 = cast(%var_9871, dtype="float32") /* ty=Tensor[(270), float32] */;
  %64 = cast(%var_9872, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %65 = reshape(%59, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %66 = reshape(%60, newshape=[1040, 1]) /* ty=Tensor[(1040, 1), uint32] */;
  %67 = reshape(%61, newshape=[]) /* ty=int8 */;
  %68 = reshape(%62, newshape=[112]) /* ty=Tensor[(112), int8] */;
  %69 = reshape(%63, newshape=[30, 9]) /* ty=Tensor[(30, 9), float32] */;
  %70 = reshape(%64, newshape=[504, 2]) /* ty=Tensor[(504, 2), int64] */;
  %71 = @func_7633(%65, %66, %67, %68, %69, %70) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(13, 11, 2), float32], Tensor[(5, 16, 13), uint32], Tensor[(1040, 1), uint32], Tensor[(286), float32], Tensor[(2, 12, 4), int32], int8, Tensor[(112), int8], Tensor[(30, 9), float32], Tensor[(504, 2), int64]) */;
  %72 = %58.2;
  %73 = %71.1;
  (%72, %73, %var_9867, %var_9868, %var_9869, meta[relay.Constant][4] /* ty=Tensor[(112), int8] */, %var_9871, %var_9872)
}

def @func_8639() -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) {
  %74 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %75 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  %76 = %74.1;
  (%75, %76)
}

def @func_6983(%var_6977: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), bool],) {
  %77 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  %78 = cast(%var_6977, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%77, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %82 = greater_equal(%80, %81) /* ty=Tensor[(16, 5, 11), bool] */;
  (%82,)
}

def @func_9354() -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) {
  %83 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
  %84 = %83.1;
  %85 = @func_8389() /* ty=Tensor[(16, 5, 11), float64] */;
  (%84, %85)
}

def @func_4425(%var_4409: Tensor[(14, 6, 12), int64], %var_4410: Tensor[(14, 6, 12), int64]) -> (Tensor[(14, 6, 12), int64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
  %86 = cast(%var_4410, dtype="int64") /* ty=Tensor[(14, 6, 12), int64] */;
  %87 = shape_of(%var_4409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%var_4409, dtype="int64") /* ty=Tensor[(14, 6, 12), int64] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %91 = reshape(%90, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %92 = @func_156(%91) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %93 = subtract(%88, %89) /* ty=Tensor[(14, 6, 12), int64] */;
  %94 = %92.0;
  (%93, %94, meta[relay.Constant][5] /* ty=Tensor[(504), bool] */)
}

def @func_4198(%var_4112: Tensor[(2, 8, 6), float64], %var_4113: Tensor[(2, 8, 6), float64], %var_4140: Tensor[(5, 88), float64]) -> (Tensor[(10, 11, 4), float64], Tensor[(5, 88), float64], Tensor[(2, 8, 6), float32], Tensor[(2, 8, 6), bool]) {
  %95 = cast(%var_4140, dtype="float64") /* ty=Tensor[(5, 88), float64] */;
  %96 = reshape(%95, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float64] */;
  %97 = @func_1322(%96) /* ty=(Tensor[(10, 11, 4), float64],) */;
  %98 = cast(%var_4112, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
  %99 = cosh(%98) /* ty=Tensor[(2, 8, 6), float64] */;
  %100 = cast(%var_4113, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
  %101 = shape_of(%var_4112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%var_4112, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %104 = add(%102, %103) /* ty=Tensor[(2, 8, 6), float64] */;
  %105 = cast(%104, dtype="int16") /* ty=Tensor[(2, 8, 6), int16] */;
  %106 = shape_of(%var_4112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%var_4112, dtype="int16") /* ty=Tensor[(2, 8, 6), int16] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %109 = bitwise_and(%107, %108) /* ty=Tensor[(2, 8, 6), int16] */;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
  %111 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%99, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %114 = cast(%var_4113, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
  %115 = acos(%114) /* ty=Tensor[(2, 8, 6), float32] */;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
  %117 = acosh(%116) /* ty=Tensor[(2, 8, 6), float32] */;
  %118 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 8, 6), float32] */, dtype="bool") /* ty=Tensor[(2, 8, 6), bool] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="bool") /* ty=Tensor[(2, 8, 6), bool] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %122 = %97.0;
  %123 = floor_divide(%112, %113) /* ty=Tensor[(2, 8, 6), float32] */;
  %124 = greater_equal(%120, %121) /* ty=Tensor[(2, 8, 6), bool] */;
  (%122, %var_4140, %123, %124)
}

def @func_5698(%var_5675: float32, %var_5676: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64]) {
  %125 = cast(%var_5675, dtype="bool") /* ty=bool */;
  %126 = cast(%var_5676, dtype="bool") /* ty=Tensor[(9, 1, 14), bool] */;
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %128 = cast(meta[relay.Constant][7] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %129 = reshape(%127, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %130 = reshape(%128, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %131 = @func_4288(%129, %130) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */;
  %132 = greater_equal(%125, %126) /* ty=Tensor[(9, 1, 14), bool] */;
  %133 = %131.1;
  (%132, %133, meta[relay.Constant][7] /* ty=Tensor[(96), float64] */)
}

def @func_7163(%var_7156: Tensor[(4, 24), float64]) -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64], Tensor[(4, 24), float64]) {
  %134 = @func_6726() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %135 = %134.0;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %137 = cast(%var_7156, dtype="float64") /* ty=Tensor[(4, 24), float64] */;
  %138 = reshape(%136, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float64] */;
  %139 = reshape(%137, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %140 = @func_6647(%138, %139) /* ty=(Tensor[(16, 5, 11), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64], Tensor[(16, 5, 11), float64]) */;
  %141 = %140.3;
  (%135, %141, %var_7156)
}

def @func_10539() -> Tensor[(504), bool] {
  %142 = @func_7672() /* ty=(Tensor[(504), bool],) */;
  %142.0
}

def @func_6533(%var_6510: Tensor[(16, 3, 15), uint8], %var_6511: Tensor[(16, 3, 15), uint8], %var_6523: Tensor[(16, 3, 15), uint8]) -> (Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) {
  %143 = cast(%var_6511, dtype="uint8") /* ty=Tensor[(16, 3, 15), uint8] */;
  %144 = shape_of(%var_6510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%var_6510, dtype="uint8") /* ty=Tensor[(16, 3, 15), uint8] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %147 = cast(%var_6523, dtype="uint16") /* ty=Tensor[(16, 3, 15), uint16] */;
  %148 = shape_of(%var_6511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%var_6511, dtype="uint16") /* ty=Tensor[(16, 3, 15), uint16] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %151 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %152 = left_shift(%145, %146) /* ty=Tensor[(16, 3, 15), uint8] */;
  %153 = right_shift(%149, %150) /* ty=Tensor[(16, 3, 15), uint16] */;
  %154 = %151.0;
  (%152, %153, %154)
}

def @func_5734(%var_5725: Tensor[(5, 16, 13), uint32], %var_5726: Tensor[(5, 16, 13), uint32]) -> Tensor[(5, 16, 13), uint32] {
  %155 = cast(%var_5726, dtype="uint32") /* ty=Tensor[(5, 16, 13), uint32] */;
  %156 = shape_of(%var_5725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%var_5725, dtype="uint32") /* ty=Tensor[(5, 16, 13), uint32] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%157, %158) /* ty=Tensor[(5, 16, 13), uint32] */
}

def @func_6766(%var_6757: Tensor[(270), float32]) -> (Tensor[(16, 5, 11), float32], Tensor[(14, 6, 12), int64], Tensor[(270), float32]) {
  %159 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %160 = cast(%var_6757, dtype="float32") /* ty=Tensor[(270), float32] */;
  %161 = reshape(%160, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %162 = @func_6433(%161) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) */;
  %163 = %159.2;
  %164 = %162.0;
  (%163, %164, %var_6757)
}

def @func_9178() -> (Tensor[(10, 11, 4), float32], Tensor[(9, 8, ?), bool], Tensor[(72), float64]) {
  %165 = @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %166 = cast(meta[relay.Constant][8] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %167 = cast(meta[relay.Constant][8] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %168 = reshape(%166, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float64] */;
  %169 = reshape(%167, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float64] */;
  %170 = @func_6125(%168, %169) /* ty=(Tensor[(9, 8, ?), bool],) */;
  %171 = %165.0;
  %172 = %170.0;
  (%171, %172, meta[relay.Constant][8] /* ty=Tensor[(72), float64] */)
}

def @func_876(%var_867: Tensor[(13, 11, 2), float32]) -> (Tensor[(13, 11, 2), float32],) {
  %173 = cast(%var_867, dtype="float32") /* ty=Tensor[(13, 11, 2), float32] */;
  %174 = log10(%173) /* ty=Tensor[(13, 11, 2), float32] */;
  (%174,)
}

def @func_11566() -> (Tensor[(12, 84), int64],) {
  %175 = @func_11442() /* ty=(Tensor[(12, 84), int64],) */;
  %176 = %175.0;
  (%176,)
}

def @func_8216() -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) {
  %177 = @func_6971() /* ty=Tensor[(16, 5, 11), float64] */;
  %178 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  (%177, %178)
}

def @func_6294() -> (Tensor[(10, 11, 4), float32],) {
  %179 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %180 = %179.1;
  %181 = cast(%180, dtype="float32") /* ty=Tensor[(10, 11, 4), float32] */;
  %182 = exp(%181) /* ty=Tensor[(10, 11, 4), float32] */;
  (%182,)
}

def @func_6647(%var_6611: Tensor[(16, 5, 11), float64], %var_6625: Tensor[(96), float64]) -> (Tensor[(16, 5, 11), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64], Tensor[(16, 5, 11), float64]) {
  %183 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %184 = %183.0;
  %185 = cast(%var_6611, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %187 = cast(%184, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %189 = cast(%var_6625, dtype="float64") /* ty=Tensor[(96), float64] */;
  %190 = cast(%var_6625, dtype="float64") /* ty=Tensor[(96), float64] */;
  %191 = reshape(%189, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %192 = reshape(%190, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %193 = @func_4288(%191, %192) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */;
  %194 = cast(%184, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %195 = asinh(%194) /* ty=Tensor[(16, 5, 11), float32] */;
  %196 = cast(%195, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %197 = equal(%187, %188) /* ty=Tensor[(16, 5, 11), bool] */;
  %198 = %193.1;
  %199 = sqrt(%196) /* ty=Tensor[(16, 5, 11), float64] */;
  (%197, %198, %var_6625, %199)
}

def @func_8038() -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) {
  %200 = @func_8015() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %201 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %202 = %200.0;
  %203 = %201.1;
  (%202, %203)
}

def @func_12006() -> (Tensor[(14, 6, 12), int64], Tensor[(16, 5, 11), bool]) {
  %204 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %205 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  %206 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 5, 11), float64] */, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%205, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %210 = %204.0;
  %211 = logical_and(%208, %209) /* ty=Tensor[(16, 5, 11), bool] */;
  (%210, %211)
}

def @func_9782() -> (Tensor[(9, 8, ?), bool],) {
  %212 = @func_9178() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(9, 8, ?), bool], Tensor[(72), float64]) */;
  %213 = %212.1;
  (%213,)
}

def @func_11065(%var_11043: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), uint16], Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), bool]) {
  %214 = @func_10557() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %215 = %214.0;
  %216 = cast(%var_11043, dtype="uint16") /* ty=Tensor[(16, 5, 11), uint16] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="uint16") /* ty=Tensor[(16, 5, 11), uint16] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %220 = cast(meta[relay.Constant][10] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
  %221 = cast(meta[relay.Constant][11] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %222 = reshape(%220, newshape=[13, 11]) /* ty=Tensor[(13, 11), float64] */;
  %223 = reshape(%221, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %224 = @func_7837(%222, %223) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(143), float32], Tensor[(2, 300), float32], Tensor[(13, 11), float64], Tensor[(504), bool]) */;
  %225 = cast(meta[relay.Constant][12] /* ty=Tensor[(143), float64] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %226 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(143), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %227 = cast(meta[relay.Constant][10] /* ty=Tensor[(143), float64] */, dtype="bool") /* ty=Tensor[(143), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?), bool] */;
  %229 = minimum(%218, %219) /* ty=Tensor[(16, 5, 11), uint16] */;
  %230 = %224.4;
  %231 = logical_or(%227, %228) /* ty=Tensor[(143), bool] */;
  (%229, %230, meta[relay.Constant][11] /* ty=Tensor[(504), bool] */, %231)
}

def @func_6375() -> (Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) {
  %232 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 84), int64] */, dtype="int64") /* ty=Tensor[(12, 84), int64] */;
  %233 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 84), int64] */, dtype="int64") /* ty=Tensor[(12, 84), int64] */;
  %234 = reshape(%232, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), int64] */;
  %235 = reshape(%233, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), int64] */;
  %236 = @func_4425(%234, %235) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %237 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %238 = %237.0;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %240 = %236.0;
  %241 = cosh(%239) /* ty=Tensor[(16, 5, 11), float32] */;
  (%240, meta[relay.Constant][13] /* ty=Tensor[(12, 84), int64] */, %241)
}

def @func_6971() -> Tensor[(16, 5, 11), float64] {
  %242 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %242.0
}

def @func_8521() -> (Tensor[(16, 5, 11), float64],) {
  %243 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  (%243,)
}

def @func_10145() -> Tensor[(9, 8, ?), bool] {
  %244 = @func_9782() /* ty=(Tensor[(9, 8, ?), bool],) */;
  %244.0
}

def @func_11311() -> (Tensor[(9, 8, ?), bool], Tensor[(16, 5, 11), float64], Tensor[(1078), float64], Tensor[(16, 5, 11), float64]) {
  %245 = @func_9782() /* ty=(Tensor[(9, 8, ?), bool],) */;
  %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(1078), float64] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
  %247 = reshape(%246, newshape=[7, 14, 11]) /* ty=Tensor[(7, 14, 11), float64] */;
  %248 = @func_10006(%247) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(7, 14, 11), float64]) */;
  %249 = %245.0;
  %250 = %248.0;
  %251 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  (%249, %250, meta[relay.Constant][14] /* ty=Tensor[(1078), float64] */, %251)
}

def @func_10644() -> (Tensor[(3, 14, 9), float64], Tensor[(16, 5, 11), float64]) {
  %252 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 9), float64] */;
  %253 = @func_8521() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %254 = log(%252) /* ty=Tensor[(3, 14, 9), float64] */;
  %255 = %253.0;
  (%254, %255)
}

def @func_8389() -> Tensor[(16, 5, 11), float64] {
  %256 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %256.0
}

def @func_8813(%var_8805: Tensor[(8, 8, 13), float32]) -> (Tensor[(8, 8, 13), float32], Tensor[(16, 5, 11), float64]) {
  %257 = cast(%var_8805, dtype="float32") /* ty=Tensor[(8, 8, 13), float32] */;
  %258 = sigmoid(%257) /* ty=Tensor[(8, 8, 13), float32] */;
  %259 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  (%258, %259)
}

def @func_10621() -> Tensor[(16, 5, 11), float64] {
  %260 = @func_8038() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */;
  %260.0
}

def @func_11842(%var_11805: Tensor[(12, 84), int64]) -> (Tensor[(12, 84), bool], Tensor[(16, 5, 11), float64]) {
  %261 = @func_11442() /* ty=(Tensor[(12, 84), int64],) */;
  %262 = %261.0;
  %263 = cast(%var_11805, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(2), int32] */;
  %265 = cast(%262, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %267 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %268 = logical_and(%265, %266) /* ty=Tensor[(12, 84), bool] */;
  %269 = %267.0;
  (%268, %269)
}

def @func_11910() -> (Tensor[(16, 5, 11), float64], Tensor[(504), bool], Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(1008, 1), int64]) {
  %270 = @func_11296() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %271 = %270.0;
  %272 = cast(%271, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %273 = @func_10085() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */;
  %274 = @func_7964() /* ty=(Tensor[(504), bool],) */;
  %275 = cast(meta[relay.Constant][16] /* ty=Tensor[(1008, 1), int64] */, dtype="int64") /* ty=Tensor[(1008, 1), int64] */;
  %276 = reshape(%275, newshape=[12, 84]) /* ty=Tensor[(12, 84), int64] */;
  %277 = @func_11842(%276) /* ty=(Tensor[(12, 84), bool], Tensor[(16, 5, 11), float64]) */;
  %278 = tan(%272) /* ty=Tensor[(16, 5, 11), float64] */;
  %279 = %273.1;
  %280 = %274.0;
  %281 = %277.1;
  (%278, %279, %280, %281, meta[relay.Constant][16] /* ty=Tensor[(1008, 1), int64] */)
}

def @func_7302(%var_7224: int8, %var_7225: Tensor[(7, 2, 8), int8], %var_7248: Tensor[(270), float32], %var_7256: Tensor[(1008), int64]) -> (Tensor[(7, 2, 8), int8], Tensor[(16, 5, 11), bool], Tensor[(880), float64], Tensor[(10, 11, 4), int8], Tensor[(440), float32], Tensor[(10, 3, 9), uint64], Tensor[(270), float32], Tensor[(96), float64], Tensor[(16, 5, 11), float64], Tensor[(1008), int64], Tensor[(2, 12, 4), int32], Tensor[(10, 3, 9), uint64]) {
  %282 = cast(%var_7224, dtype="int8") /* ty=int8 */;
  %283 = cast(%var_7225, dtype="int8") /* ty=Tensor[(7, 2, 8), int8] */;
  %284 = cast(meta[relay.Constant][17] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
  %285 = reshape(%284, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float64] */;
  %286 = @func_6983(%285) /* ty=(Tensor[(16, 5, 11), bool],) */;
  %287 = cast(meta[relay.Constant][18] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
  %288 = reshape(%287, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float32] */;
  %289 = @func_7124(%288) /* ty=(Tensor[(10, 11, 4), int8], Tensor[(4, 128), bool]) */;
  %290 = cast(%var_7248, dtype="float32") /* ty=Tensor[(270), float32] */;
  %291 = reshape(%290, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %292 = @func_6433(%291) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) */;
  %293 = cast(%var_7256, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %294 = reshape(%293, newshape=[12, 84]) /* ty=Tensor[(12, 84), int64] */;
  %295 = @func_6821(%294) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), uint8]) */;
  %296 = cast(meta[relay.Constant][19] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %297 = cast(meta[relay.Constant][19] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %298 = reshape(%296, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %299 = reshape(%297, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %300 = @func_4288(%298, %299) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */;
  %301 = %300.0;
  %302 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 12, 4), float64] */, dtype="int32") /* ty=Tensor[(2, 12, 4), int32] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="int32") /* ty=Tensor[(2, 12, 4), int32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %306 = cast(%var_7248, dtype="float32") /* ty=Tensor[(270), float32] */;
  %307 = reshape(%306, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %308 = @func_6433(%307) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) */;
  %309 = maximum(%282, %283) /* ty=Tensor[(7, 2, 8), int8] */;
  %310 = %286.0;
  %311 = %289.0;
  %312 = %292.1;
  %313 = %295.0;
  %314 = bitwise_xor(%304, %305) /* ty=Tensor[(2, 12, 4), int32] */;
  %315 = %308.1;
  (%309, %310, meta[relay.Constant][17] /* ty=Tensor[(880), float64] */, %311, meta[relay.Constant][18] /* ty=Tensor[(440), float32] */, %312, %var_7248, meta[relay.Constant][19] /* ty=Tensor[(96), float64] */, %313, %var_7256, %314, %315)
}

def @func_1322(%var_1312: Tensor[(10, 11, 4), float64]) -> (Tensor[(10, 11, 4), float64],) {
  %316 = cast(%var_1312, dtype="float64") /* ty=Tensor[(10, 11, 4), float64] */;
  %317 = erf(%316) /* ty=Tensor[(10, 11, 4), float64] */;
  (%317,)
}

def @func_4248(%var_4243: Tensor[(45, 2), float64]) -> (Tensor[(14, 11, 15), bool], Tensor[(9, 5, 2), float64], Tensor[(45, 2), float64]) {
  %318 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %319 = asinh(%318) /* ty=Tensor[(14, 11, 15), float64] */;
  %320 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 11, 15), float64] */, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %324 = cast(%var_4243, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %325 = reshape(%324, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float64] */;
  %326 = @func_3138(%325) /* ty=(Tensor[(9, 5, 2), float64],) */;
  %327 = less(%322, %323) /* ty=Tensor[(14, 11, 15), bool] */;
  %328 = %326.0;
  (%327, %328, %var_4243)
}

def @func_6026(%var_6005: Tensor[(2, 16, 16), int64], %var_6006: Tensor[(2, 16, 16), int64]) -> Tensor[(2, 16, 16), bool] {
  %329 = cast(%var_6006, dtype="bool") /* ty=Tensor[(2, 16, 16), bool] */;
  %330 = shape_of(%var_6005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_6005, dtype="bool") /* ty=Tensor[(2, 16, 16), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%331, %332) /* ty=Tensor[(2, 16, 16), bool] */
}

def @func_8130(%var_8125: Tensor[(16, 16, 16), float32]) -> (Tensor[(16, 16, 16), float32],) {
  %333 = cast(%var_8125, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
  %334 = sqrt(%333) /* ty=Tensor[(16, 16, 16), float32] */;
  (%334,)
}

def @func_8252() -> (Tensor[(504), bool], Tensor[(16, 5, 11), float64]) {
  %335 = @func_7672() /* ty=(Tensor[(504), bool],) */;
  %336 = @func_6726() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %337 = %335.0;
  %338 = %336.0;
  (%337, %338)
}

def @func_7124(%var_7057: Tensor[(10, 11, 4), float32]) -> (Tensor[(10, 11, 4), int8], Tensor[(4, 128), bool]) {
  %339 = @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */;
  %340 = %339.0;
  %341 = cast(%var_7057, dtype="int8") /* ty=Tensor[(10, 11, 4), int8] */;
  %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%340, dtype="int8") /* ty=Tensor[(10, 11, 4), int8] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %345 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 128), int64] */, dtype="int64") /* ty=Tensor[(4, 128), int64] */;
  %346 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 128), int64] */, dtype="int64") /* ty=Tensor[(4, 128), int64] */;
  %347 = reshape(%345, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %348 = reshape(%346, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %349 = @func_6026(%347, %348) /* ty=Tensor[(2, 16, 16), bool] */;
  %350 = cast(%349, dtype="bool") /* ty=Tensor[(2, 16, 16), bool] */;
  %351 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(4, 128), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %352 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 128), int64] */, dtype="bool") /* ty=Tensor[(4, 128), bool] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %354 = logical_xor(%343, %344) /* ty=Tensor[(10, 11, 4), int8] */;
  %355 = greater(%352, %353) /* ty=Tensor[(4, 128), bool] */;
  (%354, %355)
}

def @func_8881(%var_8870: Tensor[(2, 11, 6), float32]) -> (Tensor[(2, 11, 6), float32],) {
  %356 = cast(%var_8870, dtype="float32") /* ty=Tensor[(2, 11, 6), float32] */;
  %357 = log(%356) /* ty=Tensor[(2, 11, 6), float32] */;
  (%357,)
}

def @func_9044() -> (Tensor[(10, 11, 4), float64],) {
  %358 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %359 = %358.1;
  (%359,)
}

def @func_6433(%var_6420: Tensor[(10, 3, 9), float32]) -> (Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) {
  %360 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %361 = cast(%var_6420, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
  %362 = atanh(%361) /* ty=Tensor[(10, 3, 9), float32] */;
  %363 = cast(%var_6420, dtype="uint64") /* ty=Tensor[(10, 3, 9), uint64] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%362, dtype="uint64") /* ty=Tensor[(10, 3, 9), uint64] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %367 = %360.0;
  %368 = bitwise_or(%365, %366) /* ty=Tensor[(10, 3, 9), uint64] */;
  (%367, %368)
}

def @func_7170() -> Tensor[(16, 5, 11), float64] {
  %369 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %369.0
}

def @func_5337(%var_5304: Tensor[(5, 10, 12), float32], %var_5310: Tensor[(143), float64], %var_5335: Tensor[(504), bool]) -> (Tensor[(5, 10, 12), float32], Tensor[(11, 13, 1), float64], Tensor[(143), float32], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
  %370 = cast(%var_5304, dtype="float32") /* ty=Tensor[(5, 10, 12), float32] */;
  %371 = cast(%var_5310, dtype="float64") /* ty=Tensor[(143), float64] */;
  %372 = reshape(%371, newshape=[11, 13, 1]) /* ty=Tensor[(11, 13, 1), float64] */;
  %373 = @func_3401(%372) /* ty=(Tensor[(11, 13, 1), float64],) */;
  %374 = cast(%var_5310, dtype="float32") /* ty=Tensor[(143), float32] */;
  %375 = cast(%var_5335, dtype="bool") /* ty=Tensor[(504), bool] */;
  %376 = reshape(%375, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %377 = @func_156(%376) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %378 = acosh(%370) /* ty=Tensor[(5, 10, 12), float32] */;
  %379 = %373.0;
  %380 = log2(%374) /* ty=Tensor[(143), float32] */;
  %381 = %377.0;
  (%378, %379, %380, %381, %var_5335)
}

def @func_10006(%var_9960: Tensor[(7, 14, 11), float64]) -> (Tensor[(16, 5, 11), float64], Tensor[(7, 14, 11), float64]) {
  %382 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 14, 11), float64] */, dtype="bool") /* ty=Tensor[(7, 14, 11), bool] */;
  %383 = shape_of(%var_9960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_9960, dtype="bool") /* ty=Tensor[(7, 14, 11), bool] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %386 = not_equal(%384, %385) /* ty=Tensor[(7, 14, 11), bool] */;
  %387 = cast(%var_9960, dtype="float32") /* ty=Tensor[(7, 14, 11), float32] */;
  %388 = atan(%387) /* ty=Tensor[(7, 14, 11), float32] */;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(7, 14, 11), float64] */;
  %390 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%386, dtype="float64") /* ty=Tensor[(7, 14, 11), float64] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %393 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  %394 = divide(%391, %392) /* ty=Tensor[(7, 14, 11), float64] */;
  (%393, %394)
}

def @func_9310() -> (Tensor[(504), bool],) {
  %395 = @func_6463() /* ty=(Tensor[(504), bool],) */;
  %396 = %395.0;
  (%396,)
}

def @func_9635(%var_9622: Tensor[(720), uint8]) -> (Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint16], Tensor[(720), uint8]) {
  %397 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %398 = cast(%var_9622, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %399 = cast(%var_9622, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %400 = cast(%var_9622, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %401 = reshape(%398, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %402 = reshape(%399, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %403 = reshape(%400, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %404 = @func_6533(%401, %402, %403) /* ty=(Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) */;
  %405 = %397.0;
  %406 = %404.1;
  (%405, %406, %var_9622)
}

def @func_5168(%var_5147: uint8, %var_5148: Tensor[(6, 9, 7), uint8]) -> Tensor[(6, 9, 7), uint8] {
  %407 = cast(%var_5147, dtype="uint8") /* ty=uint8 */;
  %408 = cast(%var_5148, dtype="uint8") /* ty=Tensor[(6, 9, 7), uint8] */;
  bitwise_or(%407, %408) /* ty=Tensor[(6, 9, 7), uint8] */
}

def @func_6859(%var_6849: Tensor[(2, 48), float64]) -> (Tensor[(10, 11, 4), float32], Tensor[(2, 12, 4), float64], Tensor[(2, 48), float64], Tensor[(16, 5, 11), float64]) {
  %409 = @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %410 = cast(%var_6849, dtype="float64") /* ty=Tensor[(2, 48), float64] */;
  %411 = cast(%var_6849, dtype="float64") /* ty=Tensor[(2, 48), float64] */;
  %412 = reshape(%410, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %413 = reshape(%411, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %414 = @func_4288(%412, %413) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */;
  %415 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %416 = %409.0;
  %417 = %414.0;
  %418 = %415.0;
  (%416, %417, %var_6849, %418)
}

def @func_6507() -> Tensor[(16, 5, 11), float64] {
  %419 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %419.3
}

def @func_9661() -> (Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), float64]) {
  %420 = @func_7672() /* ty=(Tensor[(504), bool],) */;
  %421 = cast(meta[relay.Constant][24] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
  %422 = %420.0;
  %423 = cast(%422, dtype="bool") /* ty=Tensor[(504), bool] */;
  %424 = reshape(%421, newshape=[13, 11]) /* ty=Tensor[(13, 11), float64] */;
  %425 = reshape(%423, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %426 = @func_7837(%424, %425) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(143), float32], Tensor[(2, 300), float32], Tensor[(13, 11), float64], Tensor[(504), bool]) */;
  %427 = %426.4;
  (%422, %427, meta[relay.Constant][24] /* ty=Tensor[(143), float64] */)
}

def @func_3401(%var_3391: Tensor[(11, 13, 1), float64]) -> (Tensor[(11, 13, 1), float64],) {
  %428 = cast(%var_3391, dtype="float64") /* ty=Tensor[(11, 13, 1), float64] */;
  %429 = rsqrt(%428) /* ty=Tensor[(11, 13, 1), float64] */;
  (%429,)
}

def @func_11716(%var_11712: Tensor[(60, 12), uint8]) -> (Tensor[(504), bool], Tensor[(720), uint8], Tensor[(60, 12), uint8]) {
  %430 = cast(%var_11712, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %431 = reshape(%430, newshape=[720]) /* ty=Tensor[(720), uint8] */;
  %432 = @func_9635(%431) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint16], Tensor[(720), uint8]) */;
  %433 = @func_11459() /* ty=Tensor[(504), bool] */;
  %434 = %432.2;
  (%433, %434, %var_11712)
}

def @func_8015() -> (Tensor[(16, 5, 11), float64],) {
  %435 = @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */;
  %436 = %435.1;
  (%436,)
}

def @func_8665() -> (Tensor[(16, 5, 11), float64],) {
  %437 = @func_8357() /* ty=Tensor[(16, 5, 11), float64] */;
  (%437,)
}

def @func_9817() -> (Tensor[(16, 5, 11), float32],) {
  %438 = @func_6971() /* ty=Tensor[(16, 5, 11), float64] */;
  %439 = cast(%438, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %440 = rsqrt(%439) /* ty=Tensor[(16, 5, 11), float32] */;
  (%440,)
}

def @func_9733(%var_9708: Tensor[(4096), float32]) -> (Tensor[(12, 84), int64], Tensor[(504), bool], Tensor[(16, 16, 16), float32], Tensor[(4096), float64]) {
  %441 = @func_8639() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */;
  %442 = @func_9661() /* ty=(Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), float64]) */;
  %443 = cast(%var_9708, dtype="float32") /* ty=Tensor[(4096), float32] */;
  %444 = reshape(%443, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), float32] */;
  %445 = @func_8130(%444) /* ty=(Tensor[(16, 16, 16), float32],) */;
  %446 = cast(%var_9708, dtype="float64") /* ty=Tensor[(4096), float64] */;
  %447 = %441.1;
  %448 = %442.0;
  %449 = %445.0;
  %450 = sin(%446) /* ty=Tensor[(4096), float64] */;
  (%447, %448, %449, %450)
}

def @func_9909() -> (Tensor[(16, 5, 11), float64],) {
  %451 = @func_8357() /* ty=Tensor[(16, 5, 11), float64] */;
  (%451,)
}

def @func_6385() -> (Tensor[(10, 11, 4), float32],) {
  %452 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %453 = %452.0;
  (%453,)
}

def @func_6193() -> (Tensor[(16, 5, 11), float64],) {
  %454 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %455 = atanh(%454) /* ty=Tensor[(16, 5, 11), float64] */;
  (%455,)
}

def @func_10085() -> (Tensor[(10, 11, 4), float32], Tensor[(504), bool]) {
  %456 = @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %457 = %456.0;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(10, 11, 4), float32] */;
  %459 = @func_7964() /* ty=(Tensor[(504), bool],) */;
  %460 = sqrt(%458) /* ty=Tensor[(10, 11, 4), float32] */;
  %461 = %459.0;
  (%460, %461)
}

def @func_6842() -> (Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) {
  %462 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %463 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %464 = %462.0;
  %465 = %463.3;
  (%464, %465)
}

def @func_10767(%var_10759: Tensor[(12, 84), float32]) -> Tensor[(12, 84), bool] {
  %466 = @func_8622() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(12, 84), float32]) */;
  %467 = %466.1;
  %468 = cast(%var_10759, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(2), int32] */;
  %470 = cast(%467, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%470, %471) /* ty=Tensor[(12, 84), bool] */
}

def @func_11269() -> (Tensor[(832), float32], Tensor[(16, 5, 11), bool], Tensor[(16, 5, 11), float64]) {
  %472 = cast(meta[relay.Constant][26] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %473 = reshape(%472, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), float32] */;
  %474 = @func_8813(%473) /* ty=(Tensor[(8, 8, 13), float32], Tensor[(16, 5, 11), float64]) */;
  %475 = %474.1;
  %476 = cast(%475, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %477 = acosh(%476) /* ty=Tensor[(16, 5, 11), float64] */;
  %478 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
  %479 = %478.0;
  %480 = cast(%479, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %481 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%477, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %484 = less(%482, %483) /* ty=Tensor[(16, 5, 11), bool] */;
  %485 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  (meta[relay.Constant][26] /* ty=Tensor[(832), float32] */, %484, %485)
}

def @func_11459() -> Tensor[(504), bool] {
  @func_10539() /* ty=Tensor[(504), bool] */
}

def @func_11372() -> (Tensor[(16, 5, 11), float64],) {
  %486 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %487 = %486.0;
  (%487,)
}

def @func_10972() -> Tensor[(16, 5, 11), float64] {
  @func_6507() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_5638(%var_5634: Tensor[(2, 6, 2), bool]) -> Tensor[(2, 6, 2), bool] {
  %488 = cast(%var_5634, dtype="bool") /* ty=Tensor[(2, 6, 2), bool] */;
  %489 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(2, 6, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 6, 2), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 2), bool] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%490, %491) /* ty=Tensor[(2, 6, 2), bool] */
}

def @func_7439(%var_7431: Tensor[(286), float32]) -> (Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) {
  %492 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %493 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %494 = cast(meta[relay.Constant][28] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %495 = reshape(%494, newshape=[12, 84]) /* ty=Tensor[(12, 84), int64] */;
  %496 = @func_6821(%495) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), uint8]) */;
  %497 = %496.1;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(12, 84), float64] */;
  %499 = acosh(%498) /* ty=Tensor[(12, 84), float64] */;
  %500 = cast(%497, dtype="float64") /* ty=Tensor[(12, 84), float64] */;
  %501 = atan(%500) /* ty=Tensor[(12, 84), float64] */;
  %502 = cast(meta[relay.Constant][28] /* ty=Tensor[(1008), int64] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(2), int32] */;
  %504 = cast(%501, dtype="int8") /* ty=Tensor[(12, 84), int8] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %506 = bitwise_or(%504, %505) /* ty=Tensor[(12, 84), int8] */;
  %507 = cast(%506, dtype="uint16") /* ty=Tensor[(12, 84), uint16] */;
  %508 = shape_of(%501, dtype="int32") /* ty=Tensor[(2), int32] */;
  %509 = cast(%501, dtype="uint16") /* ty=Tensor[(12, 84), uint16] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %511 = logical_xor(%509, %510) /* ty=Tensor[(12, 84), uint16] */;
  %512 = cast(%511, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %513 = shape_of(%499, dtype="int32") /* ty=Tensor[(2), int32] */;
  %514 = cast(%499, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %516 = cast(%499, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %517 = asin(%516) /* ty=Tensor[(12, 84), float32] */;
  %518 = cast(%501, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %519 = asinh(%518) /* ty=Tensor[(12, 84), float32] */;
  %520 = cast(%519, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %521 = shape_of(%517, dtype="int32") /* ty=Tensor[(2), int32] */;
  %522 = cast(%517, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %524 = cast(%var_7431, dtype="float32") /* ty=Tensor[(286), float32] */;
  %525 = reshape(%524, newshape=[13, 11, 2]) /* ty=Tensor[(13, 11, 2), float32] */;
  %526 = @func_876(%525) /* ty=(Tensor[(13, 11, 2), float32],) */;
  %527 = %492.0;
  %528 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  %529 = %493.1;
  %530 = greater(%514, %515) /* ty=Tensor[(12, 84), bool] */;
  %531 = greater_equal(%522, %523) /* ty=Tensor[(12, 84), bool] */;
  %532 = %526.0;
  (%527, %528, %529, %530, %531, %532, %var_7431)
}

def @func_10183(%var_10162: Tensor[(4, 14, 5), float64]) -> Tensor[(4, 14, 5), uint8] {
  %533 = cast(%var_10162, dtype="float64") /* ty=Tensor[(4, 14, 5), float64] */;
  %534 = asin(%533) /* ty=Tensor[(4, 14, 5), float64] */;
  %535 = cast(%534, dtype="uint8") /* ty=Tensor[(4, 14, 5), uint8] */;
  %536 = shape_of(%var_10162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%var_10162, dtype="uint8") /* ty=Tensor[(4, 14, 5), uint8] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%537, %538) /* ty=Tensor[(4, 14, 5), uint8] */
}

def @func_7672() -> (Tensor[(504), bool],) {
  %539 = @func_6463() /* ty=(Tensor[(504), bool],) */;
  %540 = %539.0;
  (%540,)
}

def @func_7798() -> (Tensor[(16, 5, 11), float64], Tensor[(286), float32], Tensor[(286), float32], Tensor[(286), float32], Tensor[(16, 5, 11), float64], Tensor[(2, 6, 2), bool], Tensor[(1, 24), bool], Tensor[(10, 11, 4), float32]) {
  %541 = cast(meta[relay.Constant][29] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %542 = reshape(%541, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %543 = @func_7439(%542) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) */;
  %544 = cast(meta[relay.Constant][29] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %545 = reshape(%544, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %546 = @func_7439(%545) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) */;
  %547 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %548 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 24), bool] */, dtype="bool") /* ty=Tensor[(1, 24), bool] */;
  %549 = reshape(%548, newshape=[2, 6, 2]) /* ty=Tensor[(2, 6, 2), bool] */;
  %550 = @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */;
  %551 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  %552 = %543.6;
  %553 = %546.6;
  %554 = %547.0;
  %555 = @func_5638(%549) /* ty=Tensor[(2, 6, 2), bool] */;
  %556 = %550.0;
  (%551, %552, meta[relay.Constant][29] /* ty=Tensor[(286), float32] */, %553, %554, %555, meta[relay.Constant][30] /* ty=Tensor[(1, 24), bool] */, %556)
}

def @func_11781() -> (Tensor[(16, 5, 11), float64],) {
  %557 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
  %558 = %557.0;
  %559 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%558, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %563 = power(%561, %562) /* ty=Tensor[(16, 5, 11), float64] */;
  (%563,)
}

def @func_7929() -> Tensor[(16, 5, 11), float32] {
  %564 = @func_6971() /* ty=Tensor[(16, 5, 11), float64] */;
  %565 = cast(%564, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  atan(%565) /* ty=Tensor[(16, 5, 11), float32] */
}

def @main(%var_12028: Tensor[(60, 12), uint8], %var_12058: Tensor[(60, 12), uint8]) -> (Tensor[(96), float64], Tensor[(16, 3, 15), uint8], Tensor[(60, 12), int8], Tensor[(60, 12), uint8]) {
  %566 = @func_10531() /* ty=(Tensor[(96), float64],) */;
  %567 = cast(%var_12028, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %568 = cast(%var_12028, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %569 = cast(%var_12028, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %570 = reshape(%567, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %571 = reshape(%568, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %572 = reshape(%569, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %573 = @func_6533(%570, %571, %572) /* ty=(Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) */;
  %574 = cast(%var_12058, dtype="int8") /* ty=Tensor[(60, 12), int8] */;
  %575 = shape_of(%var_12028, dtype="int32") /* ty=Tensor[(2), int32] */;
  %576 = cast(%var_12028, dtype="int8") /* ty=Tensor[(60, 12), int8] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %578 = cast(%var_12028, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %579 = atanh(%578) /* ty=Tensor[(60, 12), float32] */;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %581 = cosh(%580) /* ty=Tensor[(60, 12), float32] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %583 = log2(%582) /* ty=Tensor[(60, 12), float32] */;
  %584 = cast(%579, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(2), int32] */;
  %586 = cast(%583, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %588 = %566.0;
  %589 = %573.0;
  %590 = bitwise_or(%576, %577) /* ty=Tensor[(60, 12), int8] */;
  %591 = right_shift(%586, %587) /* ty=Tensor[(60, 12), uint8] */;
  (%588, %589, %590, %591)
}

def @func_2157(%var_2137: float32, %var_2138: Tensor[(11, 12, 13), float32]) -> Tensor[(11, 12, 13), bool] {
  %592 = cast(%var_2137, dtype="bool") /* ty=bool */;
  %593 = cast(%var_2138, dtype="bool") /* ty=Tensor[(11, 12, 13), bool] */;
  greater_equal(%592, %593) /* ty=Tensor[(11, 12, 13), bool] */
}

def @func_10239() -> Tensor[(10, 11, 4), float32] {
  %594 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %594.0
}

def @func_7964() -> (Tensor[(504), bool],) {
  %595 = @func_6463() /* ty=(Tensor[(504), bool],) */;
  %596 = %595.0;
  (%596,)
}

def @func_11394() -> Tensor[(16, 5, 11), float32] {
  @func_7929() /* ty=Tensor[(16, 5, 11), float32] */
}

def @func_10729() -> (Tensor[(16, 5, 11), float32],) {
  %597 = @func_10621() /* ty=Tensor[(16, 5, 11), float64] */;
  %598 = cast(%597, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %599 = sinh(%598) /* ty=Tensor[(16, 5, 11), float32] */;
  (%599,)
}

def @func_6463() -> (Tensor[(504), bool],) {
  %600 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %601 = %600.5;
  (%601,)
}

def @func_10661() -> (Tensor[(16, 5, 11), float32],) {
  %602 = @func_9817() /* ty=(Tensor[(16, 5, 11), float32],) */;
  %603 = %602.0;
  (%603,)
}

def @func_6125(%var_6119: Tensor[(9, 8, 1), float64], %var_6120: Tensor[(9, 8, 1), float64]) -> (Tensor[(9, 8, ?), bool],) {
  %604 = cast(%var_6120, dtype="bool") /* ty=Tensor[(9, 8, 1), bool] */;
  %605 = shape_of(%var_6119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%var_6119, dtype="bool") /* ty=Tensor[(9, 8, 1), bool] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %608 = greater_equal(%606, %607) /* ty=Tensor[(9, 8, ?), bool] */;
  (%608,)
}

def @func_10557() -> (Tensor[(16, 5, 11), float64],) {
  %609 = @func_8855() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %610 = %609.0;
  (%610,)
}

def @func_11933(%var_11922: Tensor[(8, 13, 13), float64], %var_11923: Tensor[(8, 13, 13), float64]) -> (Tensor[(8, 13, 13), float64],) {
  %611 = cast(%var_11923, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
  %612 = shape_of(%var_11922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%var_11922, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %615 = power(%613, %614) /* ty=Tensor[(8, 13, 13), float64] */;
  (%615,)
}

def @func_8448(%var_8430: Tensor[(270), float32]) -> (Tensor[(504), bool], Tensor[(2, 16, 16), bool], Tensor[(512), int64], Tensor[(10, 3, 9), uint64], int8, Tensor[(112), int8], Tensor[(270), float32], Tensor[(1008), int64], Tensor[(14, 6, 12), int64], Tensor[(16, 5, 11), float32]) {
  %616 = @func_6463() /* ty=(Tensor[(504), bool],) */;
  %617 = cast(meta[relay.Constant][32] /* ty=Tensor[(512), int64] */, dtype="int64") /* ty=Tensor[(512), int64] */;
  %618 = cast(meta[relay.Constant][32] /* ty=Tensor[(512), int64] */, dtype="int64") /* ty=Tensor[(512), int64] */;
  %619 = reshape(%617, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %620 = reshape(%618, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %621 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %622 = cast(meta[relay.Constant][34] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %623 = cast(%var_8430, dtype="float32") /* ty=Tensor[(270), float32] */;
  %624 = cast(meta[relay.Constant][35] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %625 = reshape(%621, newshape=[]) /* ty=int8 */;
  %626 = reshape(%622, newshape=[7, 2, 8]) /* ty=Tensor[(7, 2, 8), int8] */;
  %627 = reshape(%623, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %628 = reshape(%624, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
  %629 = @func_7302(%625, %626, %627, %628) /* ty=(Tensor[(7, 2, 8), int8], Tensor[(16, 5, 11), bool], Tensor[(880), float64], Tensor[(10, 11, 4), int8], Tensor[(440), float32], Tensor[(10, 3, 9), uint64], Tensor[(270), float32], Tensor[(96), float64], Tensor[(16, 5, 11), float64], Tensor[(1008), int64], Tensor[(2, 12, 4), int32], Tensor[(10, 3, 9), uint64]) */;
  %630 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %631 = %616.0;
  %632 = @func_6026(%619, %620) /* ty=Tensor[(2, 16, 16), bool] */;
  %633 = %629.5;
  %634 = %630.0;
  %635 = @func_7929() /* ty=Tensor[(16, 5, 11), float32] */;
  (%631, %632, meta[relay.Constant][32] /* ty=Tensor[(512), int64] */, %633, meta[relay.Constant][33] /* ty=int8 */, meta[relay.Constant][34] /* ty=Tensor[(112), int8] */, %var_8430, meta[relay.Constant][35] /* ty=Tensor[(1008), int64] */, %634, %635)
}

def @func_7837(%var_7833: Tensor[(13, 11), float64], %var_7834: Tensor[(504), bool]) -> (Tensor[(10, 11, 4), float32], Tensor[(143), float32], Tensor[(2, 300), float32], Tensor[(13, 11), float64], Tensor[(504), bool]) {
  %636 = @func_7798() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(286), float32], Tensor[(286), float32], Tensor[(286), float32], Tensor[(16, 5, 11), float64], Tensor[(2, 6, 2), bool], Tensor[(1, 24), bool], Tensor[(10, 11, 4), float32]) */;
  %637 = %636.7;
  %638 = cast(%637, dtype="float32") /* ty=Tensor[(10, 11, 4), float32] */;
  %639 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 300), float32] */, dtype="float32") /* ty=Tensor[(2, 300), float32] */;
  %640 = cast(%var_7833, dtype="float64") /* ty=Tensor[(13, 11), float64] */;
  %641 = cast(%var_7834, dtype="bool") /* ty=Tensor[(504), bool] */;
  %642 = reshape(%639, newshape=[5, 10, 12]) /* ty=Tensor[(5, 10, 12), float32] */;
  %643 = reshape(%640, newshape=[143]) /* ty=Tensor[(143), float64] */;
  %644 = reshape(%641, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %645 = @func_5337(%642, %643, %644) /* ty=(Tensor[(5, 10, 12), float32], Tensor[(11, 13, 1), float64], Tensor[(143), float32], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %646 = acosh(%638) /* ty=Tensor[(10, 11, 4), float32] */;
  %647 = %645.2;
  (%646, %647, meta[relay.Constant][36] /* ty=Tensor[(2, 300), float32] */, %var_7833, %var_7834)
}

def @func_8357() -> Tensor[(16, 5, 11), float64] {
  %648 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
  %648.1
}

def @func_1783(%var_1744: int32, %var_1745: Tensor[(5, 16, 16), int32], %var_1775: Tensor[(5, 16, 16), int32], %var_1781: Tensor[(440), float64]) -> (Tensor[(9, 7, 8), bool], Tensor[(252, 2), bool], Tensor[(5, 16, 16), bool], Tensor[(5, 16, 16), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64]) {
  %649 = cast(meta[relay.Constant][37] /* ty=Tensor[(252, 2), bool] */, dtype="bool") /* ty=Tensor[(252, 2), bool] */;
  %650 = reshape(%649, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %651 = @func_156(%650) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %652 = cast(%var_1745, dtype="bool") /* ty=Tensor[(5, 16, 16), bool] */;
  %653 = cast(%var_1744, dtype="bool") /* ty=bool */;
  %654 = cast(%var_1744, dtype="int32") /* ty=int32 */;
  %655 = cast(%var_1745, dtype="int32") /* ty=Tensor[(5, 16, 16), int32] */;
  %656 = bitwise_xor(%654, %655) /* ty=Tensor[(5, 16, 16), int32] */;
  %657 = cast(%var_1775, dtype="float64") /* ty=Tensor[(5, 16, 16), float64] */;
  %658 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%656, dtype="float64") /* ty=Tensor[(5, 16, 16), float64] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %661 = cast(%var_1781, dtype="float64") /* ty=Tensor[(440), float64] */;
  %662 = reshape(%661, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float64] */;
  %663 = @func_1322(%662) /* ty=(Tensor[(10, 11, 4), float64],) */;
  %664 = %651.0;
  %665 = less_equal(%652, %653) /* ty=Tensor[(5, 16, 16), bool] */;
  %666 = mod(%659, %660) /* ty=Tensor[(5, 16, 16), float64] */;
  %667 = %663.0;
  (%664, meta[relay.Constant][37] /* ty=Tensor[(252, 2), bool] */, %665, %666, %667, %var_1781)
}

def @func_4288(%var_4270: Tensor[(2, 12, 4), float64], %var_4279: Tensor[(2, 12, 4), float64]) -> (Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) {
  %668 = cast(%var_4270, dtype="float64") /* ty=Tensor[(2, 12, 4), float64] */;
  %669 = cast(%var_4279, dtype="int32") /* ty=Tensor[(2, 12, 4), int32] */;
  %670 = shape_of(%var_4270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%var_4270, dtype="int32") /* ty=Tensor[(2, 12, 4), int32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %673 = erf(%668) /* ty=Tensor[(2, 12, 4), float64] */;
  %674 = bitwise_or(%671, %672) /* ty=Tensor[(2, 12, 4), int32] */;
  (%673, %674)
}

def @func_9589(%var_9580: Tensor[(1, 880), float64], %var_9581: Tensor[(8, 12), float64]) -> (Tensor[(504), bool], Tensor[(16, 5, 11), bool], Tensor[(1, 880), float64], Tensor[(8, 12), float64]) {
  %675 = @func_7964() /* ty=(Tensor[(504), bool],) */;
  %676 = cast(%var_9580, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
  %677 = cast(%var_9581, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
  %678 = reshape(%676, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float64] */;
  %679 = reshape(%677, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %680 = @func_6647(%678, %679) /* ty=(Tensor[(16, 5, 11), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64], Tensor[(16, 5, 11), float64]) */;
  %681 = %675.0;
  %682 = %680.0;
  (%681, %682, %var_9580, %var_9581)
}

def @func_6233() -> (Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
  %683 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %684 = cast(meta[relay.Constant][38] /* ty=Tensor[(440), float64] */, dtype="float64") /* ty=Tensor[(440), float64] */;
  %685 = reshape(%684, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float64] */;
  %686 = @func_1322(%685) /* ty=(Tensor[(10, 11, 4), float64],) */;
  %687 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %688 = cast(meta[relay.Constant][39] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %689 = reshape(%688, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %690 = @func_156(%689) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %691 = %683.0;
  %692 = %686.0;
  %693 = %687.0;
  %694 = %690.0;
  (%691, %692, meta[relay.Constant][38] /* ty=Tensor[(440), float64] */, %693, %694, meta[relay.Constant][39] /* ty=Tensor[(504), bool] */)
}

def @func_8855() -> (Tensor[(16, 5, 11), float64],) {
  %695 = @func_8389() /* ty=Tensor[(16, 5, 11), float64] */;
  (%695,)
}

def @func_10409() -> (Tensor[(16, 5, 11), float32],) {
  %696 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %697 = %696.0;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %699 = log(%698) /* ty=Tensor[(16, 5, 11), float32] */;
  (%699,)
}

def @func_6726() -> (Tensor[(16, 5, 11), float64],) {
  %700 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %702 = asin(%701) /* ty=Tensor[(16, 5, 11), float64] */;
  (%702,)
}

def @func_7544(%var_7533: Tensor[(7, 4, 4), float32], %var_7542: Tensor[(24), bool]) -> (Tensor[(7, 4, 4), float32], Tensor[(2, 6, 2), bool], Tensor[(24), bool]) {
  %703 = cast(%var_7533, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %704 = cast(%var_7542, dtype="bool") /* ty=Tensor[(24), bool] */;
  %705 = reshape(%704, newshape=[2, 6, 2]) /* ty=Tensor[(2, 6, 2), bool] */;
  %706 = sqrt(%703) /* ty=Tensor[(7, 4, 4), float32] */;
  %707 = @func_5638(%705) /* ty=Tensor[(2, 6, 2), bool] */;
  (%706, %707, %var_7542)
}

def @func_8902() -> Tensor[(12, 84), int64] {
  %708 = @func_8639() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */;
  %708.1
}

def @func_6582(%var_6560: float32) -> (Tensor[(10, 11, 4), float32], float32, Tensor[(126), float32], Tensor[(2, 12, 4), float32], Tensor[(2, 16, 16), bool], Tensor[(512, 1), int64]) {
  %709 = @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %710 = cast(%var_6560, dtype="float32") /* ty=float32 */;
  %711 = cast(meta[relay.Constant][40] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %712 = reshape(%710, newshape=[]) /* ty=float32 */;
  %713 = reshape(%711, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %714 = @func_5698(%712, %713) /* ty=(Tensor[(9, 1, 14), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64]) */;
  %715 = %714.1;
  %716 = cast(%715, dtype="float32") /* ty=Tensor[(2, 12, 4), float32] */;
  %717 = cast(meta[relay.Constant][41] /* ty=Tensor[(512, 1), int64] */, dtype="int64") /* ty=Tensor[(512, 1), int64] */;
  %718 = cast(meta[relay.Constant][41] /* ty=Tensor[(512, 1), int64] */, dtype="int64") /* ty=Tensor[(512, 1), int64] */;
  %719 = reshape(%717, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %720 = reshape(%718, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %721 = %709.0;
  %722 = asin(%716) /* ty=Tensor[(2, 12, 4), float32] */;
  %723 = @func_6026(%719, %720) /* ty=Tensor[(2, 16, 16), bool] */;
  (%721, %var_6560, meta[relay.Constant][40] /* ty=Tensor[(126), float32] */, %722, %723, meta[relay.Constant][41] /* ty=Tensor[(512, 1), int64] */)
}

def @func_8308(%var_8279: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), bool], Tensor[(16, 5, 11), float64], Tensor[(9, 5, 2), float64], Tensor[(90, 1), float64]) {
  %724 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  %725 = cast(%var_8279, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%724, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %729 = cast(meta[relay.Constant][42] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %730 = reshape(%729, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float64] */;
  %731 = @func_3138(%730) /* ty=(Tensor[(9, 5, 2), float64],) */;
  %732 = logical_or(%727, %728) /* ty=Tensor[(16, 5, 11), bool] */;
  %733 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  %734 = %731.0;
  (%732, %733, %734, meta[relay.Constant][42] /* ty=Tensor[(90, 1), float64] */)
}

def @func_11296() -> (Tensor[(16, 5, 11), float64],) {
  %735 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
  %736 = %735.0;
  (%736,)
}

def @func_10897() -> (Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float32]) {
  %737 = @func_10409() /* ty=(Tensor[(16, 5, 11), float32],) */;
  %738 = %737.0;
  %739 = cast(%738, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %740 = @func_10085() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */;
  %741 = acos(%739) /* ty=Tensor[(16, 5, 11), float64] */;
  %742 = %740.0;
  (%741, %742)
}

def @func_11018() -> Tensor[(10, 11, 4), float32] {
  %743 = @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */;
  %743.0
}

def @func_8653() -> (Tensor[(16, 5, 11), float64], Tensor[(9, 5, 2), float64], Tensor[(1, 90), float64]) {
  %744 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 90), float64] */, dtype="float64") /* ty=Tensor[(1, 90), float64] */;
  %745 = reshape(%744, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float64] */;
  %746 = @func_3138(%745) /* ty=(Tensor[(9, 5, 2), float64],) */;
  %747 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  %748 = %746.0;
  (%747, %748, meta[relay.Constant][43] /* ty=Tensor[(1, 90), float64] */)
}

def @func_8939(%var_8908: Tensor[(6, 12, 8), float32], %var_8909: Tensor[(6, 12, 8), float32]) -> (Tensor[(6, 12, 8), float32],) {
  %749 = cast(%var_8909, dtype="float32") /* ty=Tensor[(6, 12, 8), float32] */;
  %750 = shape_of(%var_8908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%var_8908, dtype="float32") /* ty=Tensor[(6, 12, 8), float32] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %753 = divide(%751, %752) /* ty=Tensor[(6, 12, 8), float32] */;
  (%753,)
}

def @func_11442() -> (Tensor[(12, 84), int64],) {
  %754 = @func_8902() /* ty=Tensor[(12, 84), int64] */;
  (%754,)
}

def @func_11477() -> (Tensor[(504), bool], Tensor[(10, 11, 4), float64]) {
  %755 = @func_10085() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */;
  %756 = %755.1;
  %757 = @func_10255() /* ty=Tensor[(10, 11, 4), float64] */;
  (%756, %757)
}

def @func_10383() -> (Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(96), float64]) {
  %758 = @func_10085() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */;
  %759 = cast(meta[relay.Constant][44] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %760 = reshape(%759, newshape=[4, 24]) /* ty=Tensor[(4, 24), float64] */;
  %761 = @func_7163(%760) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64], Tensor[(4, 24), float64]) */;
  %762 = %758.1;
  %763 = %761.1;
  (%762, %763, meta[relay.Constant][44] /* ty=Tensor[(96), float64] */)
}

def @func_8997(%var_8957: Tensor[(16, 5, 11), float64], %var_8974: Tensor[(2, 252), bool]) -> (Tensor[(16, 5, 11), float32], Tensor[(9, 7, 8), bool], Tensor[(2, 252), bool]) {
  %764 = @func_8855() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %765 = %764.0;
  %766 = cast(%var_8957, dtype="int8") /* ty=Tensor[(16, 5, 11), int8] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%765, dtype="int8") /* ty=Tensor[(16, 5, 11), int8] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %770 = maximum(%768, %769) /* ty=Tensor[(16, 5, 11), int8] */;
  %771 = cast(%770, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %772 = cast(%var_8974, dtype="bool") /* ty=Tensor[(2, 252), bool] */;
  %773 = reshape(%772, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %774 = @func_156(%773) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %775 = erf(%771) /* ty=Tensor[(16, 5, 11), float32] */;
  %776 = %774.0;
  (%775, %776, %var_8974)
}

def @func_2123(%var_2095: Tensor[(7, 7, 14), bool], %var_2096: Tensor[(7, 7, 14), bool], %var_2114: int32, %var_2115: Tensor[(320, 4), int32]) -> (Tensor[(10, 11, 4), float64], Tensor[(5, 88), float64], Tensor[(7, 7, 14), float32], Tensor[(440), float64], int32, Tensor[(320, 4), int32]) {
  %777 = cast(meta[relay.Constant][45] /* ty=Tensor[(5, 88), float64] */, dtype="float64") /* ty=Tensor[(5, 88), float64] */;
  %778 = reshape(%777, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float64] */;
  %779 = @func_1322(%778) /* ty=(Tensor[(10, 11, 4), float64],) */;
  %780 = cast(%var_2096, dtype="bool") /* ty=Tensor[(7, 7, 14), bool] */;
  %781 = shape_of(%var_2095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%var_2095, dtype="bool") /* ty=Tensor[(7, 7, 14), bool] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %784 = logical_or(%782, %783) /* ty=Tensor[(7, 7, 14), bool] */;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(7, 7, 14), float32] */;
  %786 = sqrt(%785) /* ty=Tensor[(7, 7, 14), float32] */;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(7, 7, 14), float32] */;
  %788 = cast(%var_2114, dtype="int32") /* ty=int32 */;
  %789 = cast(%var_2115, dtype="int32") /* ty=Tensor[(320, 4), int32] */;
  %790 = cast(%var_2115, dtype="int32") /* ty=Tensor[(320, 4), int32] */;
  %791 = cast(meta[relay.Constant][45] /* ty=Tensor[(5, 88), float64] */, dtype="float64") /* ty=Tensor[(5, 88), float64] */;
  %792 = reshape(%788, newshape=[]) /* ty=int32 */;
  %793 = reshape(%789, newshape=[5, 16, 16]) /* ty=Tensor[(5, 16, 16), int32] */;
  %794 = reshape(%790, newshape=[5, 16, 16]) /* ty=Tensor[(5, 16, 16), int32] */;
  %795 = reshape(%791, newshape=[440]) /* ty=Tensor[(440), float64] */;
  %796 = @func_1783(%792, %793, %794, %795) /* ty=(Tensor[(9, 7, 8), bool], Tensor[(252, 2), bool], Tensor[(5, 16, 16), bool], Tensor[(5, 16, 16), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64]) */;
  %797 = %779.0;
  %798 = log2(%787) /* ty=Tensor[(7, 7, 14), float32] */;
  %799 = %796.5;
  (%797, meta[relay.Constant][45] /* ty=Tensor[(5, 88), float64] */, %798, %799, %var_2114, %var_2115)
}

def @func_3138(%var_3130: Tensor[(9, 5, 2), float64]) -> (Tensor[(9, 5, 2), float64],) {
  %800 = cast(%var_3130, dtype="float64") /* ty=Tensor[(9, 5, 2), float64] */;
  %801 = acos(%800) /* ty=Tensor[(9, 5, 2), float64] */;
  (%801,)
}

def @func_7633(%var_7599: Tensor[(286), float32], %var_7608: Tensor[(1040, 1), uint32], %var_7624: int8, %var_7625: Tensor[(112), int8], %var_7626: Tensor[(30, 9), float32], %var_7627: Tensor[(504, 2), int64]) -> (Tensor[(16, 5, 11), float64], Tensor[(13, 11, 2), float32], Tensor[(5, 16, 13), uint32], Tensor[(1040, 1), uint32], Tensor[(286), float32], Tensor[(2, 12, 4), int32], int8, Tensor[(112), int8], Tensor[(30, 9), float32], Tensor[(504, 2), int64]) {
  %802 = @func_6726() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %803 = cast(%var_7599, dtype="float32") /* ty=Tensor[(286), float32] */;
  %804 = reshape(%803, newshape=[13, 11, 2]) /* ty=Tensor[(13, 11, 2), float32] */;
  %805 = @func_876(%804) /* ty=(Tensor[(13, 11, 2), float32],) */;
  %806 = cast(%var_7608, dtype="uint32") /* ty=Tensor[(1040, 1), uint32] */;
  %807 = cast(%var_7608, dtype="uint32") /* ty=Tensor[(1040, 1), uint32] */;
  %808 = reshape(%806, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), uint32] */;
  %809 = reshape(%807, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), uint32] */;
  %810 = cast(%var_7599, dtype="float32") /* ty=Tensor[(286), float32] */;
  %811 = cast(%var_7624, dtype="int8") /* ty=int8 */;
  %812 = cast(%var_7625, dtype="int8") /* ty=Tensor[(112), int8] */;
  %813 = cast(%var_7626, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
  %814 = cast(%var_7627, dtype="int64") /* ty=Tensor[(504, 2), int64] */;
  %815 = reshape(%811, newshape=[]) /* ty=int8 */;
  %816 = reshape(%812, newshape=[7, 2, 8]) /* ty=Tensor[(7, 2, 8), int8] */;
  %817 = reshape(%813, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %818 = reshape(%814, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
  %819 = @func_7302(%815, %816, %817, %818) /* ty=(Tensor[(7, 2, 8), int8], Tensor[(16, 5, 11), bool], Tensor[(880), float64], Tensor[(10, 11, 4), int8], Tensor[(440), float32], Tensor[(10, 3, 9), uint64], Tensor[(270), float32], Tensor[(96), float64], Tensor[(16, 5, 11), float64], Tensor[(1008), int64], Tensor[(2, 12, 4), int32], Tensor[(10, 3, 9), uint64]) */;
  %820 = %802.0;
  %821 = %805.0;
  %822 = @func_5734(%808, %809) /* ty=Tensor[(5, 16, 13), uint32] */;
  %823 = rsqrt(%810) /* ty=Tensor[(286), float32] */;
  %824 = %819.10;
  (%820, %821, %822, %var_7608, %823, %824, %var_7624, %var_7625, %var_7626, %var_7627)
}

def @func_9212() -> Tensor[(16, 5, 11), float64] {
  %825 = @func_8015() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %825.0
}

def @func_10481() -> Tensor[(16, 5, 11), float64] {
  @func_8389() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_10255() -> Tensor[(10, 11, 4), float64] {
  %826 = @func_9044() /* ty=(Tensor[(10, 11, 4), float64],) */;
  %826.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10531() -> (Tensor[(96), float64],) {
  %0 = @func_10383() /* ty=(Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(96), float64]) */;
  %1 = %0.2;
  (%1,)
}

def @func_10533() -> (Tensor[(96), float64],) {
  @func_10531() /* ty=(Tensor[(96), float64],) */
}

def @func_9662() -> (Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), float64]) {
  %10 = fn () -> (Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), float64]) {
    %2 = @func_7672() /* ty=(Tensor[(504), bool],) */;
    %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
    %4 = %2.0;
    %5 = cast(%4, dtype="bool") /* ty=Tensor[(504), bool] */;
    %6 = reshape(%3, newshape=[13, 11]) /* ty=Tensor[(13, 11), float64] */;
    %7 = reshape(%5, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %8 = @func_7837(%6, %7) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(143), float32], Tensor[(2, 300), float32], Tensor[(13, 11), float64], Tensor[(504), bool]) */;
    %9 = %8.4;
    (%4, %9, meta[relay.Constant][0] /* ty=Tensor[(143), float64] */)
  };
  %10() /* ty=(Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), float64]) */
}

def @func_7170() -> Tensor[(16, 5, 11), float64] {
  %11 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %11.0
}

def @func_7966() -> (Tensor[(504), bool],) {
  @func_7964() /* ty=(Tensor[(504), bool],) */
}

def @func_11443() -> (Tensor[(12, 84), int64],) {
  %13 = fn () -> (Tensor[(12, 84), int64],) {
    %12 = @func_8902() /* ty=Tensor[(12, 84), int64] */;
    (%12,)
  };
  %13() /* ty=(Tensor[(12, 84), int64],) */
}

def @func_11631(%var_11625: Tensor[(512, 10), int64]) -> (Tensor[(16, 5, 11), float64], float32, Tensor[(512, 10), uint64]) {
  %14 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %15 = cast(-8.86395f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %16 = reshape(%15, newshape=[]) /* ty=float32 */;
  %17 = @func_6582(%16) /* ty=(Tensor[(10, 11, 4), float32], float32, Tensor[(126), float32], Tensor[(2, 12, 4), float32], Tensor[(2, 16, 16), bool], Tensor[(512, 1), int64]) */;
  %18 = %17.5;
  %19 = cast(%18, dtype="uint64") /* ty=Tensor[(512, 1), uint64] */;
  %20 = cast(%var_11625, dtype="uint64") /* ty=Tensor[(512, 10), uint64] */;
  %21 = %14.0;
  %22 = logical_xor(%19, %20) /* ty=Tensor[(512, 10), uint64] */;
  (%21, -8.86395f /* ty=float32 */, %22)
}

def @func_11845(%var_11843: Tensor[(12, 84), int64]) -> (Tensor[(12, 84), bool], Tensor[(16, 5, 11), float64]) {
  @func_11842(%var_11843) /* ty=(Tensor[(12, 84), bool], Tensor[(16, 5, 11), float64]) */
}

def @func_8653() -> (Tensor[(16, 5, 11), float64], Tensor[(9, 5, 2), float64], Tensor[(1, 90), float64]) {
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 90), float64] */, dtype="float64") /* ty=Tensor[(1, 90), float64] */;
  %24 = reshape(%23, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float64] */;
  %25 = @func_3138(%24) /* ty=(Tensor[(9, 5, 2), float64],) */;
  %26 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  %27 = %25.0;
  (%26, %27, meta[relay.Constant][1] /* ty=Tensor[(1, 90), float64] */)
}

def @main(%var_12028: Tensor[(60, 12), uint8], %var_12058: Tensor[(60, 12), uint8]) -> (Tensor[(96), float64], Tensor[(16, 3, 15), uint8], Tensor[(60, 12), int8], Tensor[(60, 12), uint8]) {
  %28 = @func_10533() /* ty=(Tensor[(96), float64],) */;
  %29 = cast(%var_12028, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %30 = cast(%var_12028, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %31 = cast(%var_12028, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %32 = reshape(%29, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %33 = reshape(%30, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %34 = reshape(%31, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %35 = @func_6537(%32, %33, %34) /* ty=(Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) */;
  %36 = cast(%var_12058, dtype="int8") /* ty=Tensor[(60, 12), int8] */;
  %37 = shape_of(%var_12028, dtype="int32") /* ty=Tensor[(2), int32] */;
  %38 = cast(%var_12028, dtype="int8") /* ty=Tensor[(60, 12), int8] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %40 = cast(%var_12028, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %41 = atanh(%40) /* ty=Tensor[(60, 12), float32] */;
  %42 = cast(%41, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %43 = cosh(%42) /* ty=Tensor[(60, 12), float32] */;
  %44 = cast(%43, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %45 = log2(%44) /* ty=Tensor[(60, 12), float32] */;
  %46 = cast(%41, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(2), int32] */;
  %48 = cast(%45, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %50 = %28.0;
  %51 = %35.0;
  %52 = bitwise_or(%38, %39) /* ty=Tensor[(60, 12), int8] */;
  %53 = right_shift(%48, %49) /* ty=Tensor[(60, 12), uint8] */;
  (%50, %51, %52, %53)
}

def @func_6234() -> (Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
  %66 = fn () -> (Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
    %54 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(440), float64] */, dtype="float64") /* ty=Tensor[(440), float64] */;
    %56 = reshape(%55, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float64] */;
    %57 = @func_1322(%56) /* ty=(Tensor[(10, 11, 4), float64],) */;
    %58 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %59 = cast(meta[relay.Constant][3] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %60 = reshape(%59, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
    %61 = @func_156(%60) /* ty=(Tensor[(9, 7, 8), bool],) */;
    %62 = %54.0;
    %63 = %57.0;
    %64 = %58.0;
    %65 = %61.0;
    (%62, %63, meta[relay.Constant][2] /* ty=Tensor[(440), float64] */, %64, %65, meta[relay.Constant][3] /* ty=Tensor[(504), bool] */)
  };
  %66() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */
}

def @func_9178() -> (Tensor[(10, 11, 4), float32], Tensor[(9, 8, ?), bool], Tensor[(72), float64]) {
  %67 = @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %68 = cast(meta[relay.Constant][4] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %70 = reshape(%68, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float64] */;
  %71 = reshape(%69, newshape=[9, 8, 1]) /* ty=Tensor[(9, 8, 1), float64] */;
  %72 = @func_6125(%70, %71) /* ty=(Tensor[(9, 8, ?), bool],) */;
  %73 = %67.0;
  %74 = %72.0;
  (%73, %74, meta[relay.Constant][4] /* ty=Tensor[(72), float64] */)
}

def @func_1783(%var_1744: int32, %var_1745: Tensor[(5, 16, 16), int32], %var_1775: Tensor[(5, 16, 16), int32], %var_1781: Tensor[(440), float64]) -> (Tensor[(9, 7, 8), bool], Tensor[(252, 2), bool], Tensor[(5, 16, 16), bool], Tensor[(5, 16, 16), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64]) {
  %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(252, 2), bool] */, dtype="bool") /* ty=Tensor[(252, 2), bool] */;
  %76 = reshape(%75, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %77 = @func_156(%76) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %78 = cast(%var_1745, dtype="bool") /* ty=Tensor[(5, 16, 16), bool] */;
  %79 = cast(%var_1744, dtype="bool") /* ty=bool */;
  %80 = cast(%var_1744, dtype="int32") /* ty=int32 */;
  %81 = cast(%var_1745, dtype="int32") /* ty=Tensor[(5, 16, 16), int32] */;
  %82 = bitwise_xor(%80, %81) /* ty=Tensor[(5, 16, 16), int32] */;
  %83 = cast(%var_1775, dtype="float64") /* ty=Tensor[(5, 16, 16), float64] */;
  %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%82, dtype="float64") /* ty=Tensor[(5, 16, 16), float64] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %87 = cast(%var_1781, dtype="float64") /* ty=Tensor[(440), float64] */;
  %88 = reshape(%87, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float64] */;
  %89 = @func_1322(%88) /* ty=(Tensor[(10, 11, 4), float64],) */;
  %90 = %77.0;
  %91 = less_equal(%78, %79) /* ty=Tensor[(5, 16, 16), bool] */;
  %92 = mod(%85, %86) /* ty=Tensor[(5, 16, 16), float64] */;
  %93 = %89.0;
  (%90, meta[relay.Constant][5] /* ty=Tensor[(252, 2), bool] */, %91, %92, %93, %var_1781)
}

def @func_8094(%var_8092: Tensor[(720), uint8]) -> (Tensor[(14, 14, 12), float64], Tensor[(286), float64], Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint8], Tensor[(720), uint8]) {
  @func_8091(%var_8092) /* ty=(Tensor[(14, 14, 12), float64], Tensor[(286), float64], Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint8], Tensor[(720), uint8]) */
}

def @func_6728() -> (Tensor[(16, 5, 11), float64],) {
  @func_6726() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_7548(%var_7546: Tensor[(7, 4, 4), float32], %var_7547: Tensor[(24), bool]) -> (Tensor[(7, 4, 4), float32], Tensor[(2, 6, 2), bool], Tensor[(24), bool]) {
  @func_7544(%var_7546, %var_7547) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(2, 6, 2), bool], Tensor[(24), bool]) */
}

def @func_10557() -> (Tensor[(16, 5, 11), float64],) {
  %94 = @func_8855() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %95 = %94.0;
  (%95,)
}

def @func_11912() -> (Tensor[(16, 5, 11), float64], Tensor[(504), bool], Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(1008, 1), int64]) {
  @func_11910() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(504), bool], Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(1008, 1), int64]) */
}

def @func_9882(%var_9877: Tensor[(286), float32], %var_9878: Tensor[(1040), uint32], %var_9879: int8, %var_9880: Tensor[(270), float32], %var_9881: Tensor[(1008), int64]) -> (Tensor[(16, 5, 11), float32], Tensor[(13, 11, 2), float32], Tensor[(286), float32], Tensor[(1040), uint32], int8, Tensor[(112), int8], Tensor[(270), float32], Tensor[(1008), int64]) {
  %112 = fn (%var_9867: Tensor[(286), float32], %var_9868: Tensor[(1040), uint32], %var_9869: int8, %var_9871: Tensor[(270), float32], %var_9872: Tensor[(1008), int64]) -> (Tensor[(16, 5, 11), float32], Tensor[(13, 11, 2), float32], Tensor[(286), float32], Tensor[(1040), uint32], int8, Tensor[(112), int8], Tensor[(270), float32], Tensor[(1008), int64]) {
    %96 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
    %97 = cast(%var_9867, dtype="float32") /* ty=Tensor[(286), float32] */;
    %98 = cast(%var_9868, dtype="uint32") /* ty=Tensor[(1040), uint32] */;
    %99 = cast(%var_9869, dtype="int8") /* ty=int8 */;
    %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
    %101 = cast(%var_9871, dtype="float32") /* ty=Tensor[(270), float32] */;
    %102 = cast(%var_9872, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %103 = reshape(%97, newshape=[286]) /* ty=Tensor[(286), float32] */;
    %104 = reshape(%98, newshape=[1040, 1]) /* ty=Tensor[(1040, 1), uint32] */;
    %105 = reshape(%99, newshape=[]) /* ty=int8 */;
    %106 = reshape(%100, newshape=[112]) /* ty=Tensor[(112), int8] */;
    %107 = reshape(%101, newshape=[30, 9]) /* ty=Tensor[(30, 9), float32] */;
    %108 = reshape(%102, newshape=[504, 2]) /* ty=Tensor[(504, 2), int64] */;
    %109 = @func_7633(%103, %104, %105, %106, %107, %108) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(13, 11, 2), float32], Tensor[(5, 16, 13), uint32], Tensor[(1040, 1), uint32], Tensor[(286), float32], Tensor[(2, 12, 4), int32], int8, Tensor[(112), int8], Tensor[(30, 9), float32], Tensor[(504, 2), int64]) */;
    %110 = %96.2;
    %111 = %109.1;
    (%110, %111, %var_9867, %var_9868, %var_9869, meta[relay.Constant][6] /* ty=Tensor[(112), int8] */, %var_9871, %var_9872)
  };
  %112(%var_9877, %var_9878, %var_9879, %var_9880, %var_9881) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(13, 11, 2), float32], Tensor[(286), float32], Tensor[(1040), uint32], int8, Tensor[(112), int8], Tensor[(270), float32], Tensor[(1008), int64]) */
}

def @func_8640() -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) {
  %116 = fn () -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) {
    %113 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
    %114 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
    %115 = %113.1;
    (%114, %115)
  };
  %116() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */
}

def @func_7307(%var_7303: int8, %var_7304: Tensor[(7, 2, 8), int8], %var_7305: Tensor[(270), float32], %var_7306: Tensor[(1008), int64]) -> (Tensor[(7, 2, 8), int8], Tensor[(16, 5, 11), bool], Tensor[(880), float64], Tensor[(10, 11, 4), int8], Tensor[(440), float32], Tensor[(10, 3, 9), uint64], Tensor[(270), float32], Tensor[(96), float64], Tensor[(16, 5, 11), float64], Tensor[(1008), int64], Tensor[(2, 12, 4), int32], Tensor[(10, 3, 9), uint64]) {
  %151 = fn (%var_7224: int8, %var_7225: Tensor[(7, 2, 8), int8], %var_7248: Tensor[(270), float32], %var_7256: Tensor[(1008), int64]) -> (Tensor[(7, 2, 8), int8], Tensor[(16, 5, 11), bool], Tensor[(880), float64], Tensor[(10, 11, 4), int8], Tensor[(440), float32], Tensor[(10, 3, 9), uint64], Tensor[(270), float32], Tensor[(96), float64], Tensor[(16, 5, 11), float64], Tensor[(1008), int64], Tensor[(2, 12, 4), int32], Tensor[(10, 3, 9), uint64]) {
    %117 = cast(%var_7224, dtype="int8") /* ty=int8 */;
    %118 = cast(%var_7225, dtype="int8") /* ty=Tensor[(7, 2, 8), int8] */;
    %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
    %120 = reshape(%119, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float64] */;
    %121 = @func_6983(%120) /* ty=(Tensor[(16, 5, 11), bool],) */;
    %122 = cast(meta[relay.Constant][8] /* ty=Tensor[(440), float32] */, dtype="float32") /* ty=Tensor[(440), float32] */;
    %123 = reshape(%122, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float32] */;
    %124 = @func_7124(%123) /* ty=(Tensor[(10, 11, 4), int8], Tensor[(4, 128), bool]) */;
    %125 = cast(%var_7248, dtype="float32") /* ty=Tensor[(270), float32] */;
    %126 = reshape(%125, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
    %127 = @func_6433(%126) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) */;
    %128 = cast(%var_7256, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %129 = reshape(%128, newshape=[12, 84]) /* ty=Tensor[(12, 84), int64] */;
    %130 = @func_6821(%129) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), uint8]) */;
    %131 = cast(meta[relay.Constant][9] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %132 = cast(meta[relay.Constant][9] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %133 = reshape(%131, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
    %134 = reshape(%132, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
    %135 = @func_4288(%133, %134) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */;
    %136 = %135.0;
    %137 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 12, 4), float64] */, dtype="int32") /* ty=Tensor[(2, 12, 4), int32] */;
    %138 = shape_of(%136, dtype="int32") /* ty=Tensor[(3), int32] */;
    %139 = cast(%136, dtype="int32") /* ty=Tensor[(2, 12, 4), int32] */;
    %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %141 = cast(%var_7248, dtype="float32") /* ty=Tensor[(270), float32] */;
    %142 = reshape(%141, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
    %143 = @func_6433(%142) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) */;
    %144 = maximum(%117, %118) /* ty=Tensor[(7, 2, 8), int8] */;
    %145 = %121.0;
    %146 = %124.0;
    %147 = %127.1;
    %148 = %130.0;
    %149 = bitwise_xor(%139, %140) /* ty=Tensor[(2, 12, 4), int32] */;
    %150 = %143.1;
    (%144, %145, meta[relay.Constant][7] /* ty=Tensor[(880), float64] */, %146, meta[relay.Constant][8] /* ty=Tensor[(440), float32] */, %147, %var_7248, meta[relay.Constant][9] /* ty=Tensor[(96), float64] */, %148, %var_7256, %149, %150)
  };
  %151(%var_7303, %var_7304, %var_7305, %var_7306) /* ty=(Tensor[(7, 2, 8), int8], Tensor[(16, 5, 11), bool], Tensor[(880), float64], Tensor[(10, 11, 4), int8], Tensor[(440), float32], Tensor[(10, 3, 9), uint64], Tensor[(270), float32], Tensor[(96), float64], Tensor[(16, 5, 11), float64], Tensor[(1008), int64], Tensor[(2, 12, 4), int32], Tensor[(10, 3, 9), uint64]) */
}

def @func_8357() -> Tensor[(16, 5, 11), float64] {
  %152 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
  %152.1
}

def @func_11782() -> (Tensor[(16, 5, 11), float64],) {
  %160 = fn () -> (Tensor[(16, 5, 11), float64],) {
    %153 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
    %154 = %153.0;
    %155 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
    %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(3), int32] */;
    %157 = cast(%154, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
    %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %159 = power(%157, %158) /* ty=Tensor[(16, 5, 11), float64] */;
    (%159,)
  };
  %160() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_3403(%var_3402: Tensor[(11, 13, 1), float64]) -> (Tensor[(11, 13, 1), float64],) {
  %163 = fn (%var_3391: Tensor[(11, 13, 1), float64]) -> (Tensor[(11, 13, 1), float64],) {
    %161 = cast(%var_3391, dtype="float64") /* ty=Tensor[(11, 13, 1), float64] */;
    %162 = rsqrt(%161) /* ty=Tensor[(11, 13, 1), float64] */;
    (%162,)
  };
  %163(%var_3402) /* ty=(Tensor[(11, 13, 1), float64],) */
}

def @func_8939(%var_8908: Tensor[(6, 12, 8), float32], %var_8909: Tensor[(6, 12, 8), float32]) -> (Tensor[(6, 12, 8), float32],) {
  %164 = cast(%var_8909, dtype="float32") /* ty=Tensor[(6, 12, 8), float32] */;
  %165 = shape_of(%var_8908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%var_8908, dtype="float32") /* ty=Tensor[(6, 12, 8), float32] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %168 = divide(%166, %167) /* ty=Tensor[(6, 12, 8), float32] */;
  (%168,)
}

def @func_11018() -> Tensor[(10, 11, 4), float32] {
  %169 = @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */;
  %169.0
}

def @func_7165(%var_7164: Tensor[(4, 24), float64]) -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64], Tensor[(4, 24), float64]) {
  %178 = fn (%var_7156: Tensor[(4, 24), float64]) -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64], Tensor[(4, 24), float64]) {
    %170 = @func_6726() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %171 = %170.0;
    %172 = cast(%171, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
    %173 = cast(%var_7156, dtype="float64") /* ty=Tensor[(4, 24), float64] */;
    %174 = reshape(%172, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float64] */;
    %175 = reshape(%173, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %176 = @func_6647(%174, %175) /* ty=(Tensor[(16, 5, 11), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64], Tensor[(16, 5, 11), float64]) */;
    %177 = %176.3;
    (%171, %177, %var_7156)
  };
  %178(%var_7164) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64], Tensor[(4, 24), float64]) */
}

def @func_3140(%var_3139: Tensor[(9, 5, 2), float64]) -> (Tensor[(9, 5, 2), float64],) {
  %181 = fn (%var_3130: Tensor[(9, 5, 2), float64]) -> (Tensor[(9, 5, 2), float64],) {
    %179 = cast(%var_3130, dtype="float64") /* ty=Tensor[(9, 5, 2), float64] */;
    %180 = acos(%179) /* ty=Tensor[(9, 5, 2), float64] */;
    (%180,)
  };
  %181(%var_3139) /* ty=(Tensor[(9, 5, 2), float64],) */
}

def @func_6507() -> Tensor[(16, 5, 11), float64] {
  %182 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %182.3
}

def @func_7442(%var_7440: Tensor[(286), float32]) -> (Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) {
  @func_7439(%var_7440) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) */
}

def @func_9733(%var_9708: Tensor[(4096), float32]) -> (Tensor[(12, 84), int64], Tensor[(504), bool], Tensor[(16, 16, 16), float32], Tensor[(4096), float64]) {
  %183 = @func_8639() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */;
  %184 = @func_9661() /* ty=(Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), float64]) */;
  %185 = cast(%var_9708, dtype="float32") /* ty=Tensor[(4096), float32] */;
  %186 = reshape(%185, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), float32] */;
  %187 = @func_8130(%186) /* ty=(Tensor[(16, 16, 16), float32],) */;
  %188 = cast(%var_9708, dtype="float64") /* ty=Tensor[(4096), float64] */;
  %189 = %183.1;
  %190 = %184.0;
  %191 = %187.0;
  %192 = sin(%188) /* ty=Tensor[(4096), float64] */;
  (%189, %190, %191, %192)
}

def @func_10622() -> Tensor[(16, 5, 11), float64] {
  %194 = fn () -> Tensor[(16, 5, 11), float64] {
    %193 = @func_8038() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */;
    %193.0
  };
  %194() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_8039() -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) {
  %199 = fn () -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) {
    %195 = @func_8015() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %196 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
    %197 = %195.0;
    %198 = %196.1;
    (%197, %198)
  };
  %199() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */
}

def @func_2157(%var_2137: float32, %var_2138: Tensor[(11, 12, 13), float32]) -> Tensor[(11, 12, 13), bool] {
  %200 = cast(%var_2137, dtype="bool") /* ty=bool */;
  %201 = cast(%var_2138, dtype="bool") /* ty=Tensor[(11, 12, 13), bool] */;
  greater_equal(%200, %201) /* ty=Tensor[(11, 12, 13), bool] */
}

def @func_8451(%var_8449: Tensor[(270), float32]) -> (Tensor[(504), bool], Tensor[(2, 16, 16), bool], Tensor[(512), int64], Tensor[(10, 3, 9), uint64], int8, Tensor[(112), int8], Tensor[(270), float32], Tensor[(1008), int64], Tensor[(14, 6, 12), int64], Tensor[(16, 5, 11), float32]) {
  @func_8448(%var_8449) /* ty=(Tensor[(504), bool], Tensor[(2, 16, 16), bool], Tensor[(512), int64], Tensor[(10, 3, 9), uint64], int8, Tensor[(112), int8], Tensor[(270), float32], Tensor[(1008), int64], Tensor[(14, 6, 12), int64], Tensor[(16, 5, 11), float32]) */
}

def @func_11718(%var_11717: Tensor[(60, 12), uint8]) -> (Tensor[(504), bool], Tensor[(720), uint8], Tensor[(60, 12), uint8]) {
  %207 = fn (%var_11712: Tensor[(60, 12), uint8]) -> (Tensor[(504), bool], Tensor[(720), uint8], Tensor[(60, 12), uint8]) {
    %202 = cast(%var_11712, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
    %203 = reshape(%202, newshape=[720]) /* ty=Tensor[(720), uint8] */;
    %204 = @func_9635(%203) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint16], Tensor[(720), uint8]) */;
    %205 = @func_11459() /* ty=Tensor[(504), bool] */;
    %206 = %204.2;
    (%205, %206, %var_11712)
  };
  %207(%var_11717) /* ty=(Tensor[(504), bool], Tensor[(720), uint8], Tensor[(60, 12), uint8]) */
}

def @func_7127(%var_7125: Tensor[(10, 11, 4), float32]) -> (Tensor[(10, 11, 4), int8], Tensor[(4, 128), bool]) {
  @func_7124(%var_7125) /* ty=(Tensor[(10, 11, 4), int8], Tensor[(4, 128), bool]) */
}

def @func_4425(%var_4409: Tensor[(14, 6, 12), int64], %var_4410: Tensor[(14, 6, 12), int64]) -> (Tensor[(14, 6, 12), int64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
  %208 = cast(%var_4410, dtype="int64") /* ty=Tensor[(14, 6, 12), int64] */;
  %209 = shape_of(%var_4409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%var_4409, dtype="int64") /* ty=Tensor[(14, 6, 12), int64] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %212 = cast(meta[relay.Constant][12] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %213 = reshape(%212, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %214 = @func_156(%213) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %215 = subtract(%210, %211) /* ty=Tensor[(14, 6, 12), int64] */;
  %216 = %214.0;
  (%215, %216, meta[relay.Constant][12] /* ty=Tensor[(504), bool] */)
}

def @func_9214() -> Tensor[(16, 5, 11), float64] {
  @func_9212() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_5172(%var_5170: uint8, %var_5171: Tensor[(6, 9, 7), uint8]) -> Tensor[(6, 9, 7), uint8] {
  @func_5168(%var_5170, %var_5171) /* ty=Tensor[(6, 9, 7), uint8] */
}

def @func_8902() -> Tensor[(12, 84), int64] {
  %217 = @func_8639() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */;
  %217.1
}

def @func_5738(%var_5736: Tensor[(5, 16, 13), uint32], %var_5737: Tensor[(5, 16, 13), uint32]) -> Tensor[(5, 16, 13), uint32] {
  @func_5734(%var_5736, %var_5737) /* ty=Tensor[(5, 16, 13), uint32] */
}

def @func_8391() -> Tensor[(16, 5, 11), float64] {
  @func_8389() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_11966() -> Tensor[(12, 84), int64] {
  @func_11964() /* ty=Tensor[(12, 84), int64] */
}

def @func_7837(%var_7833: Tensor[(13, 11), float64], %var_7834: Tensor[(504), bool]) -> (Tensor[(10, 11, 4), float32], Tensor[(143), float32], Tensor[(2, 300), float32], Tensor[(13, 11), float64], Tensor[(504), bool]) {
  %218 = @func_7798() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(286), float32], Tensor[(286), float32], Tensor[(286), float32], Tensor[(16, 5, 11), float64], Tensor[(2, 6, 2), bool], Tensor[(1, 24), bool], Tensor[(10, 11, 4), float32]) */;
  %219 = %218.7;
  %220 = cast(%219, dtype="float32") /* ty=Tensor[(10, 11, 4), float32] */;
  %221 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 300), float32] */, dtype="float32") /* ty=Tensor[(2, 300), float32] */;
  %222 = cast(%var_7833, dtype="float64") /* ty=Tensor[(13, 11), float64] */;
  %223 = cast(%var_7834, dtype="bool") /* ty=Tensor[(504), bool] */;
  %224 = reshape(%221, newshape=[5, 10, 12]) /* ty=Tensor[(5, 10, 12), float32] */;
  %225 = reshape(%222, newshape=[143]) /* ty=Tensor[(143), float64] */;
  %226 = reshape(%223, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %227 = @func_5337(%224, %225, %226) /* ty=(Tensor[(5, 10, 12), float32], Tensor[(11, 13, 1), float64], Tensor[(143), float32], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %228 = acosh(%220) /* ty=Tensor[(10, 11, 4), float32] */;
  %229 = %227.2;
  (%228, %229, meta[relay.Constant][13] /* ty=Tensor[(2, 300), float32] */, %var_7833, %var_7834)
}

def @func_9592(%var_9590: Tensor[(1, 880), float64], %var_9591: Tensor[(8, 12), float64]) -> (Tensor[(504), bool], Tensor[(16, 5, 11), bool], Tensor[(1, 880), float64], Tensor[(8, 12), float64]) {
  %238 = fn (%var_9580: Tensor[(1, 880), float64], %var_9581: Tensor[(8, 12), float64]) -> (Tensor[(504), bool], Tensor[(16, 5, 11), bool], Tensor[(1, 880), float64], Tensor[(8, 12), float64]) {
    %230 = @func_7964() /* ty=(Tensor[(504), bool],) */;
    %231 = cast(%var_9580, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
    %232 = cast(%var_9581, dtype="float64") /* ty=Tensor[(8, 12), float64] */;
    %233 = reshape(%231, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float64] */;
    %234 = reshape(%232, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %235 = @func_6647(%233, %234) /* ty=(Tensor[(16, 5, 11), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64], Tensor[(16, 5, 11), float64]) */;
    %236 = %230.0;
    %237 = %235.0;
    (%236, %237, %var_9580, %var_9581)
  };
  %238(%var_9590, %var_9591) /* ty=(Tensor[(504), bool], Tensor[(16, 5, 11), bool], Tensor[(1, 880), float64], Tensor[(8, 12), float64]) */
}

def @func_11083() -> Tensor[(9, 8, ?), bool] {
  @func_11081() /* ty=Tensor[(9, 8, ?), bool] */
}

def @func_5734(%var_5725: Tensor[(5, 16, 13), uint32], %var_5726: Tensor[(5, 16, 13), uint32]) -> Tensor[(5, 16, 13), uint32] {
  %239 = cast(%var_5726, dtype="uint32") /* ty=Tensor[(5, 16, 13), uint32] */;
  %240 = shape_of(%var_5725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%var_5725, dtype="uint32") /* ty=Tensor[(5, 16, 13), uint32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%241, %242) /* ty=Tensor[(5, 16, 13), uint32] */
}

def @func_1322(%var_1312: Tensor[(10, 11, 4), float64]) -> (Tensor[(10, 11, 4), float64],) {
  %243 = cast(%var_1312, dtype="float64") /* ty=Tensor[(10, 11, 4), float64] */;
  %244 = erf(%243) /* ty=Tensor[(10, 11, 4), float64] */;
  (%244,)
}

def @func_6376() -> (Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) {
  %255 = fn () -> (Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) {
    %245 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 84), int64] */, dtype="int64") /* ty=Tensor[(12, 84), int64] */;
    %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 84), int64] */, dtype="int64") /* ty=Tensor[(12, 84), int64] */;
    %247 = reshape(%245, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), int64] */;
    %248 = reshape(%246, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), int64] */;
    %249 = @func_4425(%247, %248) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
    %250 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %251 = %250.0;
    %252 = cast(%251, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
    %253 = %249.0;
    %254 = cosh(%252) /* ty=Tensor[(16, 5, 11), float32] */;
    (%253, meta[relay.Constant][14] /* ty=Tensor[(12, 84), int64] */, %254)
  };
  %255() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */
}

def @func_8815(%var_8814: Tensor[(8, 8, 13), float32]) -> (Tensor[(8, 8, 13), float32], Tensor[(16, 5, 11), float64]) {
  %259 = fn (%var_8805: Tensor[(8, 8, 13), float32]) -> (Tensor[(8, 8, 13), float32], Tensor[(16, 5, 11), float64]) {
    %256 = cast(%var_8805, dtype="float32") /* ty=Tensor[(8, 8, 13), float32] */;
    %257 = sigmoid(%256) /* ty=Tensor[(8, 8, 13), float32] */;
    %258 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
    (%257, %258)
  };
  %259(%var_8814) /* ty=(Tensor[(8, 8, 13), float32], Tensor[(16, 5, 11), float64]) */
}

def @func_11081() -> Tensor[(9, 8, ?), bool] {
  @func_10145() /* ty=Tensor[(9, 8, ?), bool] */
}

def @func_8091(%var_8085: Tensor[(720), uint8]) -> (Tensor[(14, 14, 12), float64], Tensor[(286), float64], Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint8], Tensor[(720), uint8]) {
  %260 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 14, 12), float64] */, dtype="float64") /* ty=Tensor[(14, 14, 12), float64] */;
  %261 = cast(meta[relay.Constant][16] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %262 = reshape(%261, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %263 = @func_7439(%262) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) */;
  %264 = %263.6;
  %265 = cast(%264, dtype="float64") /* ty=Tensor[(286), float64] */;
  %266 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(286), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %267 = cast(meta[relay.Constant][16] /* ty=Tensor[(286), float32] */, dtype="float64") /* ty=Tensor[(286), float64] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?), float64] */;
  %269 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %270 = cast(%var_8085, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %271 = cast(%var_8085, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %272 = cast(%var_8085, dtype="uint8") /* ty=Tensor[(720), uint8] */;
  %273 = reshape(%270, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %274 = reshape(%271, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %275 = reshape(%272, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
  %276 = @func_6533(%273, %274, %275) /* ty=(Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) */;
  %277 = asinh(%260) /* ty=Tensor[(14, 14, 12), float64] */;
  %278 = subtract(%267, %268) /* ty=Tensor[(286), float64] */;
  %279 = %269.3;
  %280 = %276.0;
  (%277, %278, %279, %280, %var_8085)
}

def @func_8218() -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) {
  @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */
}

def @func_11374() -> (Tensor[(16, 5, 11), float64],) {
  @func_11372() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_6318() -> (Tensor[(16, 5, 11), float64],) {
  %281 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %282 = %281.0;
  (%282,)
}

def @func_5337(%var_5304: Tensor[(5, 10, 12), float32], %var_5310: Tensor[(143), float64], %var_5335: Tensor[(504), bool]) -> (Tensor[(5, 10, 12), float32], Tensor[(11, 13, 1), float64], Tensor[(143), float32], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
  %283 = cast(%var_5304, dtype="float32") /* ty=Tensor[(5, 10, 12), float32] */;
  %284 = cast(%var_5310, dtype="float64") /* ty=Tensor[(143), float64] */;
  %285 = reshape(%284, newshape=[11, 13, 1]) /* ty=Tensor[(11, 13, 1), float64] */;
  %286 = @func_3401(%285) /* ty=(Tensor[(11, 13, 1), float64],) */;
  %287 = cast(%var_5310, dtype="float32") /* ty=Tensor[(143), float32] */;
  %288 = cast(%var_5335, dtype="bool") /* ty=Tensor[(504), bool] */;
  %289 = reshape(%288, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %290 = @func_156(%289) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %291 = acosh(%283) /* ty=Tensor[(5, 10, 12), float32] */;
  %292 = %286.0;
  %293 = log2(%287) /* ty=Tensor[(143), float32] */;
  %294 = %290.0;
  (%291, %292, %293, %294, %var_5335)
}

def @func_6296() -> (Tensor[(10, 11, 4), float32],) {
  @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */
}

def @func_11568() -> (Tensor[(12, 84), int64],) {
  @func_11566() /* ty=(Tensor[(12, 84), int64],) */
}

def @func_6859(%var_6849: Tensor[(2, 48), float64]) -> (Tensor[(10, 11, 4), float32], Tensor[(2, 12, 4), float64], Tensor[(2, 48), float64], Tensor[(16, 5, 11), float64]) {
  %295 = @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %296 = cast(%var_6849, dtype="float64") /* ty=Tensor[(2, 48), float64] */;
  %297 = cast(%var_6849, dtype="float64") /* ty=Tensor[(2, 48), float64] */;
  %298 = reshape(%296, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %299 = reshape(%297, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
  %300 = @func_4288(%298, %299) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */;
  %301 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %302 = %295.0;
  %303 = %300.0;
  %304 = %301.0;
  (%302, %303, %var_6849, %304)
}

def @func_6464() -> (Tensor[(504), bool],) {
  %307 = fn () -> (Tensor[(504), bool],) {
    %305 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
    %306 = %305.5;
    (%306,)
  };
  %307() /* ty=(Tensor[(504), bool],) */
}

def @func_11910() -> (Tensor[(16, 5, 11), float64], Tensor[(504), bool], Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(1008, 1), int64]) {
  %308 = @func_11296() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %309 = %308.0;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %311 = @func_10085() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */;
  %312 = @func_7964() /* ty=(Tensor[(504), bool],) */;
  %313 = cast(meta[relay.Constant][17] /* ty=Tensor[(1008, 1), int64] */, dtype="int64") /* ty=Tensor[(1008, 1), int64] */;
  %314 = reshape(%313, newshape=[12, 84]) /* ty=Tensor[(12, 84), int64] */;
  %315 = @func_11842(%314) /* ty=(Tensor[(12, 84), bool], Tensor[(16, 5, 11), float64]) */;
  %316 = tan(%310) /* ty=Tensor[(16, 5, 11), float64] */;
  %317 = %311.1;
  %318 = %312.0;
  %319 = %315.1;
  (%316, %317, %318, %319, meta[relay.Constant][17] /* ty=Tensor[(1008, 1), int64] */)
}

def @func_2128(%var_2124: Tensor[(7, 7, 14), bool], %var_2125: Tensor[(7, 7, 14), bool], %var_2126: int32, %var_2127: Tensor[(320, 4), int32]) -> (Tensor[(10, 11, 4), float64], Tensor[(5, 88), float64], Tensor[(7, 7, 14), float32], Tensor[(440), float64], int32, Tensor[(320, 4), int32]) {
  %343 = fn (%var_2095: Tensor[(7, 7, 14), bool], %var_2096: Tensor[(7, 7, 14), bool], %var_2114: int32, %var_2115: Tensor[(320, 4), int32]) -> (Tensor[(10, 11, 4), float64], Tensor[(5, 88), float64], Tensor[(7, 7, 14), float32], Tensor[(440), float64], int32, Tensor[(320, 4), int32]) {
    %320 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 88), float64] */, dtype="float64") /* ty=Tensor[(5, 88), float64] */;
    %321 = reshape(%320, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float64] */;
    %322 = @func_1322(%321) /* ty=(Tensor[(10, 11, 4), float64],) */;
    %323 = cast(%var_2096, dtype="bool") /* ty=Tensor[(7, 7, 14), bool] */;
    %324 = shape_of(%var_2095, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%var_2095, dtype="bool") /* ty=Tensor[(7, 7, 14), bool] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %327 = logical_or(%325, %326) /* ty=Tensor[(7, 7, 14), bool] */;
    %328 = cast(%327, dtype="float32") /* ty=Tensor[(7, 7, 14), float32] */;
    %329 = sqrt(%328) /* ty=Tensor[(7, 7, 14), float32] */;
    %330 = cast(%329, dtype="float32") /* ty=Tensor[(7, 7, 14), float32] */;
    %331 = cast(%var_2114, dtype="int32") /* ty=int32 */;
    %332 = cast(%var_2115, dtype="int32") /* ty=Tensor[(320, 4), int32] */;
    %333 = cast(%var_2115, dtype="int32") /* ty=Tensor[(320, 4), int32] */;
    %334 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 88), float64] */, dtype="float64") /* ty=Tensor[(5, 88), float64] */;
    %335 = reshape(%331, newshape=[]) /* ty=int32 */;
    %336 = reshape(%332, newshape=[5, 16, 16]) /* ty=Tensor[(5, 16, 16), int32] */;
    %337 = reshape(%333, newshape=[5, 16, 16]) /* ty=Tensor[(5, 16, 16), int32] */;
    %338 = reshape(%334, newshape=[440]) /* ty=Tensor[(440), float64] */;
    %339 = @func_1783(%335, %336, %337, %338) /* ty=(Tensor[(9, 7, 8), bool], Tensor[(252, 2), bool], Tensor[(5, 16, 16), bool], Tensor[(5, 16, 16), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64]) */;
    %340 = %322.0;
    %341 = log2(%330) /* ty=Tensor[(7, 7, 14), float32] */;
    %342 = %339.5;
    (%340, meta[relay.Constant][18] /* ty=Tensor[(5, 88), float64] */, %341, %342, %var_2114, %var_2115)
  };
  %343(%var_2124, %var_2125, %var_2126, %var_2127) /* ty=(Tensor[(10, 11, 4), float64], Tensor[(5, 88), float64], Tensor[(7, 7, 14), float32], Tensor[(440), float64], int32, Tensor[(320, 4), int32]) */
}

def @func_10481() -> Tensor[(16, 5, 11), float64] {
  @func_8389() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_6972() -> Tensor[(16, 5, 11), float64] {
  %345 = fn () -> Tensor[(16, 5, 11), float64] {
    %344 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %344.0
  };
  %345() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_9212() -> Tensor[(16, 5, 11), float64] {
  %346 = @func_8015() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %346.0
}

def @func_10086() -> (Tensor[(10, 11, 4), float32], Tensor[(504), bool]) {
  %353 = fn () -> (Tensor[(10, 11, 4), float32], Tensor[(504), bool]) {
    %347 = @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */;
    %348 = %347.0;
    %349 = cast(%348, dtype="float32") /* ty=Tensor[(10, 11, 4), float32] */;
    %350 = @func_7964() /* ty=(Tensor[(504), bool],) */;
    %351 = sqrt(%349) /* ty=Tensor[(10, 11, 4), float32] */;
    %352 = %350.0;
    (%351, %352)
  };
  %353() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */
}

def @func_6537(%var_6534: Tensor[(16, 3, 15), uint8], %var_6535: Tensor[(16, 3, 15), uint8], %var_6536: Tensor[(16, 3, 15), uint8]) -> (Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) {
  %366 = fn (%var_6510: Tensor[(16, 3, 15), uint8], %var_6511: Tensor[(16, 3, 15), uint8], %var_6523: Tensor[(16, 3, 15), uint8]) -> (Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) {
    %354 = cast(%var_6511, dtype="uint8") /* ty=Tensor[(16, 3, 15), uint8] */;
    %355 = shape_of(%var_6510, dtype="int32") /* ty=Tensor[(3), int32] */;
    %356 = cast(%var_6510, dtype="uint8") /* ty=Tensor[(16, 3, 15), uint8] */;
    %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %358 = cast(%var_6523, dtype="uint16") /* ty=Tensor[(16, 3, 15), uint16] */;
    %359 = shape_of(%var_6511, dtype="int32") /* ty=Tensor[(3), int32] */;
    %360 = cast(%var_6511, dtype="uint16") /* ty=Tensor[(16, 3, 15), uint16] */;
    %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %362 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %363 = left_shift(%356, %357) /* ty=Tensor[(16, 3, 15), uint8] */;
    %364 = right_shift(%360, %361) /* ty=Tensor[(16, 3, 15), uint16] */;
    %365 = %362.0;
    (%363, %364, %365)
  };
  %366(%var_6534, %var_6535, %var_6536) /* ty=(Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) */
}

def @func_10241() -> Tensor[(10, 11, 4), float32] {
  @func_10239() /* ty=Tensor[(10, 11, 4), float32] */
}

def @func_7439(%var_7431: Tensor[(286), float32]) -> (Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) {
  %367 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %368 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %369 = cast(meta[relay.Constant][19] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %370 = reshape(%369, newshape=[12, 84]) /* ty=Tensor[(12, 84), int64] */;
  %371 = @func_6821(%370) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), uint8]) */;
  %372 = %371.1;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(12, 84), float64] */;
  %374 = acosh(%373) /* ty=Tensor[(12, 84), float64] */;
  %375 = cast(%372, dtype="float64") /* ty=Tensor[(12, 84), float64] */;
  %376 = atan(%375) /* ty=Tensor[(12, 84), float64] */;
  %377 = cast(meta[relay.Constant][19] /* ty=Tensor[(1008), int64] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %378 = shape_of(%376, dtype="int32") /* ty=Tensor[(2), int32] */;
  %379 = cast(%376, dtype="int8") /* ty=Tensor[(12, 84), int8] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %381 = bitwise_or(%379, %380) /* ty=Tensor[(12, 84), int8] */;
  %382 = cast(%381, dtype="uint16") /* ty=Tensor[(12, 84), uint16] */;
  %383 = shape_of(%376, dtype="int32") /* ty=Tensor[(2), int32] */;
  %384 = cast(%376, dtype="uint16") /* ty=Tensor[(12, 84), uint16] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %386 = logical_xor(%384, %385) /* ty=Tensor[(12, 84), uint16] */;
  %387 = cast(%386, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %388 = shape_of(%374, dtype="int32") /* ty=Tensor[(2), int32] */;
  %389 = cast(%374, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %391 = cast(%374, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %392 = asin(%391) /* ty=Tensor[(12, 84), float32] */;
  %393 = cast(%376, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %394 = asinh(%393) /* ty=Tensor[(12, 84), float32] */;
  %395 = cast(%394, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %396 = shape_of(%392, dtype="int32") /* ty=Tensor[(2), int32] */;
  %397 = cast(%392, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %399 = cast(%var_7431, dtype="float32") /* ty=Tensor[(286), float32] */;
  %400 = reshape(%399, newshape=[13, 11, 2]) /* ty=Tensor[(13, 11, 2), float32] */;
  %401 = @func_876(%400) /* ty=(Tensor[(13, 11, 2), float32],) */;
  %402 = %367.0;
  %403 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  %404 = %368.1;
  %405 = greater(%389, %390) /* ty=Tensor[(12, 84), bool] */;
  %406 = greater_equal(%397, %398) /* ty=Tensor[(12, 84), bool] */;
  %407 = %401.0;
  (%402, %403, %404, %405, %406, %407, %var_7431)
}

def @func_4202(%var_4199: Tensor[(2, 8, 6), float64], %var_4200: Tensor[(2, 8, 6), float64], %var_4201: Tensor[(5, 88), float64]) -> (Tensor[(10, 11, 4), float64], Tensor[(5, 88), float64], Tensor[(2, 8, 6), float32], Tensor[(2, 8, 6), bool]) {
  %438 = fn (%var_4112: Tensor[(2, 8, 6), float64], %var_4113: Tensor[(2, 8, 6), float64], %var_4140: Tensor[(5, 88), float64]) -> (Tensor[(10, 11, 4), float64], Tensor[(5, 88), float64], Tensor[(2, 8, 6), float32], Tensor[(2, 8, 6), bool]) {
    %408 = cast(%var_4140, dtype="float64") /* ty=Tensor[(5, 88), float64] */;
    %409 = reshape(%408, newshape=[10, 11, 4]) /* ty=Tensor[(10, 11, 4), float64] */;
    %410 = @func_1322(%409) /* ty=(Tensor[(10, 11, 4), float64],) */;
    %411 = cast(%var_4112, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
    %412 = cosh(%411) /* ty=Tensor[(2, 8, 6), float64] */;
    %413 = cast(%var_4113, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
    %414 = shape_of(%var_4112, dtype="int32") /* ty=Tensor[(3), int32] */;
    %415 = cast(%var_4112, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
    %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %417 = add(%415, %416) /* ty=Tensor[(2, 8, 6), float64] */;
    %418 = cast(%417, dtype="int16") /* ty=Tensor[(2, 8, 6), int16] */;
    %419 = shape_of(%var_4112, dtype="int32") /* ty=Tensor[(3), int32] */;
    %420 = cast(%var_4112, dtype="int16") /* ty=Tensor[(2, 8, 6), int16] */;
    %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %422 = bitwise_and(%420, %421) /* ty=Tensor[(2, 8, 6), int16] */;
    %423 = cast(%422, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
    %424 = shape_of(%412, dtype="int32") /* ty=Tensor[(3), int32] */;
    %425 = cast(%412, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
    %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %427 = cast(%var_4113, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
    %428 = acos(%427) /* ty=Tensor[(2, 8, 6), float32] */;
    %429 = cast(%428, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
    %430 = acosh(%429) /* ty=Tensor[(2, 8, 6), float32] */;
    %431 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 8, 6), float32] */, dtype="bool") /* ty=Tensor[(2, 8, 6), bool] */;
    %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%430, dtype="bool") /* ty=Tensor[(2, 8, 6), bool] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %435 = %410.0;
    %436 = floor_divide(%425, %426) /* ty=Tensor[(2, 8, 6), float32] */;
    %437 = greater_equal(%433, %434) /* ty=Tensor[(2, 8, 6), bool] */;
    (%435, %var_4140, %436, %437)
  };
  %438(%var_4199, %var_4200, %var_4201) /* ty=(Tensor[(10, 11, 4), float64], Tensor[(5, 88), float64], Tensor[(2, 8, 6), float32], Tensor[(2, 8, 6), bool]) */
}

def @func_9784() -> (Tensor[(9, 8, ?), bool],) {
  @func_9782() /* ty=(Tensor[(9, 8, ?), bool],) */
}

def @func_10662() -> (Tensor[(16, 5, 11), float32],) {
  %441 = fn () -> (Tensor[(16, 5, 11), float32],) {
    %439 = @func_9817() /* ty=(Tensor[(16, 5, 11), float32],) */;
    %440 = %439.0;
    (%440,)
  };
  %441() /* ty=(Tensor[(16, 5, 11), float32],) */
}

def @func_10008(%var_10007: Tensor[(7, 14, 11), float64]) -> (Tensor[(16, 5, 11), float64], Tensor[(7, 14, 11), float64]) {
  %455 = fn (%var_9960: Tensor[(7, 14, 11), float64]) -> (Tensor[(16, 5, 11), float64], Tensor[(7, 14, 11), float64]) {
    %442 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 14, 11), float64] */, dtype="bool") /* ty=Tensor[(7, 14, 11), bool] */;
    %443 = shape_of(%var_9960, dtype="int32") /* ty=Tensor[(3), int32] */;
    %444 = cast(%var_9960, dtype="bool") /* ty=Tensor[(7, 14, 11), bool] */;
    %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %446 = not_equal(%444, %445) /* ty=Tensor[(7, 14, 11), bool] */;
    %447 = cast(%var_9960, dtype="float32") /* ty=Tensor[(7, 14, 11), float32] */;
    %448 = atan(%447) /* ty=Tensor[(7, 14, 11), float32] */;
    %449 = cast(%448, dtype="float64") /* ty=Tensor[(7, 14, 11), float64] */;
    %450 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
    %451 = cast(%446, dtype="float64") /* ty=Tensor[(7, 14, 11), float64] */;
    %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %453 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
    %454 = divide(%451, %452) /* ty=Tensor[(7, 14, 11), float64] */;
    (%453, %454)
  };
  %455(%var_10007) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(7, 14, 11), float64]) */
}

def @func_6584(%var_6583: float32) -> (Tensor[(10, 11, 4), float32], float32, Tensor[(126), float32], Tensor[(2, 12, 4), float32], Tensor[(2, 16, 16), bool], Tensor[(512, 1), int64]) {
  %471 = fn (%var_6560: float32) -> (Tensor[(10, 11, 4), float32], float32, Tensor[(126), float32], Tensor[(2, 12, 4), float32], Tensor[(2, 16, 16), bool], Tensor[(512, 1), int64]) {
    %456 = @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */;
    %457 = cast(%var_6560, dtype="float32") /* ty=float32 */;
    %458 = cast(meta[relay.Constant][22] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %459 = reshape(%457, newshape=[]) /* ty=float32 */;
    %460 = reshape(%458, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
    %461 = @func_5698(%459, %460) /* ty=(Tensor[(9, 1, 14), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64]) */;
    %462 = %461.1;
    %463 = cast(%462, dtype="float32") /* ty=Tensor[(2, 12, 4), float32] */;
    %464 = cast(meta[relay.Constant][23] /* ty=Tensor[(512, 1), int64] */, dtype="int64") /* ty=Tensor[(512, 1), int64] */;
    %465 = cast(meta[relay.Constant][23] /* ty=Tensor[(512, 1), int64] */, dtype="int64") /* ty=Tensor[(512, 1), int64] */;
    %466 = reshape(%464, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
    %467 = reshape(%465, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
    %468 = %456.0;
    %469 = asin(%463) /* ty=Tensor[(2, 12, 4), float32] */;
    %470 = @func_6026(%466, %467) /* ty=Tensor[(2, 16, 16), bool] */;
    (%468, %var_6560, meta[relay.Constant][22] /* ty=Tensor[(126), float32] */, %469, %470, meta[relay.Constant][23] /* ty=Tensor[(512, 1), int64] */)
  };
  %471(%var_6583) /* ty=(Tensor[(10, 11, 4), float32], float32, Tensor[(126), float32], Tensor[(2, 12, 4), float32], Tensor[(2, 16, 16), bool], Tensor[(512, 1), int64]) */
}

def @func_11067(%var_11066: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), uint16], Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), bool]) {
  %490 = fn (%var_11043: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), uint16], Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), bool]) {
    %472 = @func_10557() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %473 = %472.0;
    %474 = cast(%var_11043, dtype="uint16") /* ty=Tensor[(16, 5, 11), uint16] */;
    %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(%473, dtype="uint16") /* ty=Tensor[(16, 5, 11), uint16] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %478 = cast(meta[relay.Constant][24] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
    %479 = cast(meta[relay.Constant][25] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %480 = reshape(%478, newshape=[13, 11]) /* ty=Tensor[(13, 11), float64] */;
    %481 = reshape(%479, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %482 = @func_7837(%480, %481) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(143), float32], Tensor[(2, 300), float32], Tensor[(13, 11), float64], Tensor[(504), bool]) */;
    %483 = cast(meta[relay.Constant][26] /* ty=Tensor[(143), float64] */, dtype="bool") /* ty=Tensor[(143), bool] */;
    %484 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(143), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %485 = cast(meta[relay.Constant][24] /* ty=Tensor[(143), float64] */, dtype="bool") /* ty=Tensor[(143), bool] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?), bool] */;
    %487 = minimum(%476, %477) /* ty=Tensor[(16, 5, 11), uint16] */;
    %488 = %482.4;
    %489 = logical_or(%485, %486) /* ty=Tensor[(143), bool] */;
    (%487, %488, meta[relay.Constant][25] /* ty=Tensor[(504), bool] */, %489)
  };
  %490(%var_11066) /* ty=(Tensor[(16, 5, 11), uint16], Tensor[(504), bool], Tensor[(504), bool], Tensor[(143), bool]) */
}

def @func_6195() -> (Tensor[(16, 5, 11), float64],) {
  @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_10186(%var_10184: Tensor[(4, 14, 5), float64]) -> Tensor[(4, 14, 5), uint8] {
  @func_10183(%var_10184) /* ty=Tensor[(4, 14, 5), uint8] */
}

def @func_11937(%var_11935: Tensor[(8, 13, 13), float64], %var_11936: Tensor[(8, 13, 13), float64]) -> (Tensor[(8, 13, 13), float64],) {
  @func_11933(%var_11935, %var_11936) /* ty=(Tensor[(8, 13, 13), float64],) */
}

def @func_10770(%var_10768: Tensor[(12, 84), float32]) -> Tensor[(12, 84), bool] {
  @func_10767(%var_10768) /* ty=Tensor[(12, 84), bool] */
}

def @func_12006() -> (Tensor[(14, 6, 12), int64], Tensor[(16, 5, 11), bool]) {
  %491 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %492 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  %493 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 5, 11), float64] */, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%492, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %497 = %491.0;
  %498 = logical_and(%495, %496) /* ty=Tensor[(16, 5, 11), bool] */;
  (%497, %498)
}

def @func_8904() -> Tensor[(12, 84), int64] {
  @func_8902() /* ty=Tensor[(12, 84), int64] */
}

def @func_7124(%var_7057: Tensor[(10, 11, 4), float32]) -> (Tensor[(10, 11, 4), int8], Tensor[(4, 128), bool]) {
  %499 = @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */;
  %500 = %499.0;
  %501 = cast(%var_7057, dtype="int8") /* ty=Tensor[(10, 11, 4), int8] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="int8") /* ty=Tensor[(10, 11, 4), int8] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %505 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 128), int64] */, dtype="int64") /* ty=Tensor[(4, 128), int64] */;
  %506 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 128), int64] */, dtype="int64") /* ty=Tensor[(4, 128), int64] */;
  %507 = reshape(%505, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %508 = reshape(%506, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %509 = @func_6026(%507, %508) /* ty=Tensor[(2, 16, 16), bool] */;
  %510 = cast(%509, dtype="bool") /* ty=Tensor[(2, 16, 16), bool] */;
  %511 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(4, 128), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %512 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 128), int64] */, dtype="bool") /* ty=Tensor[(4, 128), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %514 = logical_xor(%503, %504) /* ty=Tensor[(10, 11, 4), int8] */;
  %515 = greater(%512, %513) /* ty=Tensor[(4, 128), bool] */;
  (%514, %515)
}

def @func_8655() -> (Tensor[(16, 5, 11), float64], Tensor[(9, 5, 2), float64], Tensor[(1, 90), float64]) {
  @func_8653() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(9, 5, 2), float64], Tensor[(1, 90), float64]) */
}

def @func_10767(%var_10759: Tensor[(12, 84), float32]) -> Tensor[(12, 84), bool] {
  %516 = @func_8622() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(12, 84), float32]) */;
  %517 = %516.1;
  %518 = cast(%var_10759, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(2), int32] */;
  %520 = cast(%517, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  less_equal(%520, %521) /* ty=Tensor[(12, 84), bool] */
}

def @func_11372() -> (Tensor[(16, 5, 11), float64],) {
  %522 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %523 = %522.0;
  (%523,)
}

def @func_4429(%var_4427: Tensor[(14, 6, 12), int64], %var_4428: Tensor[(14, 6, 12), int64]) -> (Tensor[(14, 6, 12), int64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
  @func_4425(%var_4427, %var_4428) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */
}

def @func_2161(%var_2159: float32, %var_2160: Tensor[(11, 12, 13), float32]) -> Tensor[(11, 12, 13), bool] {
  @func_2157(%var_2159, %var_2160) /* ty=Tensor[(11, 12, 13), bool] */
}

def @func_6844() -> (Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) {
  @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */
}

def @func_5342(%var_5339: Tensor[(5, 10, 12), float32], %var_5340: Tensor[(143), float64], %var_5341: Tensor[(504), bool]) -> (Tensor[(5, 10, 12), float32], Tensor[(11, 13, 1), float64], Tensor[(143), float32], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) {
  @func_5337(%var_5339, %var_5340, %var_5341) /* ty=(Tensor[(5, 10, 12), float32], Tensor[(11, 13, 1), float64], Tensor[(143), float32], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */
}

def @func_11566() -> (Tensor[(12, 84), int64],) {
  %524 = @func_11442() /* ty=(Tensor[(12, 84), int64],) */;
  %525 = %524.0;
  (%525,)
}

def @func_10646() -> (Tensor[(3, 14, 9), float64], Tensor[(16, 5, 11), float64]) {
  @func_10644() /* ty=(Tensor[(3, 14, 9), float64], Tensor[(16, 5, 11), float64]) */
}

def @func_8857() -> (Tensor[(16, 5, 11), float64],) {
  @func_8855() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_10146() -> Tensor[(9, 8, ?), bool] {
  %527 = fn () -> Tensor[(9, 8, ?), bool] {
    %526 = @func_9782() /* ty=(Tensor[(9, 8, ?), bool],) */;
    %526.0
  };
  %527() /* ty=Tensor[(9, 8, ?), bool] */
}

def @func_1789(%var_1785: int32, %var_1786: Tensor[(5, 16, 16), int32], %var_1787: Tensor[(5, 16, 16), int32], %var_1788: Tensor[(440), float64]) -> (Tensor[(9, 7, 8), bool], Tensor[(252, 2), bool], Tensor[(5, 16, 16), bool], Tensor[(5, 16, 16), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64]) {
  @func_1783(%var_1785, %var_1786, %var_1787, %var_1788) /* ty=(Tensor[(9, 7, 8), bool], Tensor[(252, 2), bool], Tensor[(5, 16, 16), bool], Tensor[(5, 16, 16), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64]) */
}

def @func_8389() -> Tensor[(16, 5, 11), float64] {
  %528 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %528.0
}

def @func_1325(%var_1323: Tensor[(10, 11, 4), float64]) -> (Tensor[(10, 11, 4), float64],) {
  @func_1322(%var_1323) /* ty=(Tensor[(10, 11, 4), float64],) */
}

def @func_7964() -> (Tensor[(504), bool],) {
  %529 = @func_6463() /* ty=(Tensor[(504), bool],) */;
  %530 = %529.0;
  (%530,)
}

def @func_12008() -> (Tensor[(14, 6, 12), int64], Tensor[(16, 5, 11), bool]) {
  @func_12006() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(16, 5, 11), bool]) */
}

def @func_10183(%var_10162: Tensor[(4, 14, 5), float64]) -> Tensor[(4, 14, 5), uint8] {
  %531 = cast(%var_10162, dtype="float64") /* ty=Tensor[(4, 14, 5), float64] */;
  %532 = asin(%531) /* ty=Tensor[(4, 14, 5), float64] */;
  %533 = cast(%532, dtype="uint8") /* ty=Tensor[(4, 14, 5), uint8] */;
  %534 = shape_of(%var_10162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%var_10162, dtype="uint8") /* ty=Tensor[(4, 14, 5), uint8] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%535, %536) /* ty=Tensor[(4, 14, 5), uint8] */
}

def @func_5640(%var_5639: Tensor[(2, 6, 2), bool]) -> Tensor[(2, 6, 2), bool] {
  %541 = fn (%var_5634: Tensor[(2, 6, 2), bool]) -> Tensor[(2, 6, 2), bool] {
    %537 = cast(%var_5634, dtype="bool") /* ty=Tensor[(2, 6, 2), bool] */;
    %538 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(2, 6, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %539 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 6, 2), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 2), bool] */;
    %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%539, %540) /* ty=Tensor[(2, 6, 2), bool] */
  };
  %541(%var_5639) /* ty=Tensor[(2, 6, 2), bool] */
}

def @func_4251(%var_4249: Tensor[(45, 2), float64]) -> (Tensor[(14, 11, 15), bool], Tensor[(9, 5, 2), float64], Tensor[(45, 2), float64]) {
  @func_4248(%var_4249) /* ty=(Tensor[(14, 11, 15), bool], Tensor[(9, 5, 2), float64], Tensor[(45, 2), float64]) */
}

def @func_9001(%var_8999: Tensor[(16, 5, 11), float64], %var_9000: Tensor[(2, 252), bool]) -> (Tensor[(16, 5, 11), float32], Tensor[(9, 7, 8), bool], Tensor[(2, 252), bool]) {
  @func_8997(%var_8999, %var_9000) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(9, 7, 8), bool], Tensor[(2, 252), bool]) */
}

def @func_6985(%var_6984: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), bool],) {
  %548 = fn (%var_6977: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), bool],) {
    %542 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
    %543 = cast(%var_6977, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
    %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
    %545 = cast(%542, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
    %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %547 = greater_equal(%545, %546) /* ty=Tensor[(16, 5, 11), bool] */;
    (%547,)
  };
  %548(%var_6984) /* ty=(Tensor[(16, 5, 11), bool],) */
}

def @func_11396() -> Tensor[(16, 5, 11), float32] {
  @func_11394() /* ty=Tensor[(16, 5, 11), float32] */
}

def @func_6823(%var_6822: Tensor[(12, 84), int64]) -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), uint8]) {
  %558 = fn (%var_6796: Tensor[(12, 84), int64]) -> (Tensor[(16, 5, 11), float64], Tensor[(12, 84), uint8]) {
    %549 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %550 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
    %551 = %550.1;
    %552 = cast(%var_6796, dtype="uint8") /* ty=Tensor[(12, 84), uint8] */;
    %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(2), int32] */;
    %554 = cast(%551, dtype="uint8") /* ty=Tensor[(12, 84), uint8] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %556 = %549.0;
    %557 = bitwise_xor(%554, %555) /* ty=Tensor[(12, 84), uint8] */;
    (%556, %557)
  };
  %558(%var_6822) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), uint8]) */
}

def @func_6726() -> (Tensor[(16, 5, 11), float64],) {
  %559 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %561 = asin(%560) /* ty=Tensor[(16, 5, 11), float64] */;
  (%561,)
}

def @func_9818() -> (Tensor[(16, 5, 11), float32],) {
  %565 = fn () -> (Tensor[(16, 5, 11), float32],) {
    %562 = @func_6971() /* ty=Tensor[(16, 5, 11), float64] */;
    %563 = cast(%562, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
    %564 = rsqrt(%563) /* ty=Tensor[(16, 5, 11), float32] */;
    (%564,)
  };
  %565() /* ty=(Tensor[(16, 5, 11), float32],) */
}

def @func_7544(%var_7533: Tensor[(7, 4, 4), float32], %var_7542: Tensor[(24), bool]) -> (Tensor[(7, 4, 4), float32], Tensor[(2, 6, 2), bool], Tensor[(24), bool]) {
  %566 = cast(%var_7533, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %567 = cast(%var_7542, dtype="bool") /* ty=Tensor[(24), bool] */;
  %568 = reshape(%567, newshape=[2, 6, 2]) /* ty=Tensor[(2, 6, 2), bool] */;
  %569 = sqrt(%566) /* ty=Tensor[(7, 4, 4), float32] */;
  %570 = @func_5638(%568) /* ty=Tensor[(2, 6, 2), bool] */;
  (%569, %570, %var_7542)
}

def @func_9782() -> (Tensor[(9, 8, ?), bool],) {
  %571 = @func_9178() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(9, 8, ?), bool], Tensor[(72), float64]) */;
  %572 = %571.1;
  (%572,)
}

def @func_8359() -> Tensor[(16, 5, 11), float64] {
  @func_8357() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_8623() -> (Tensor[(10, 11, 4), float32], Tensor[(12, 84), float32]) {
  %582 = fn () -> (Tensor[(10, 11, 4), float32], Tensor[(12, 84), float32]) {
    %573 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
    %574 = @func_8038() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64]) */;
    %575 = %574.1;
    %576 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 84), int64] */, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
    %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(2), int32] */;
    %578 = cast(%575, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %580 = %573.0;
    %581 = floor_mod(%578, %579) /* ty=Tensor[(12, 84), float32] */;
    (%580, %581)
  };
  %582() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(12, 84), float32]) */
}

def @func_7930() -> Tensor[(16, 5, 11), float32] {
  %585 = fn () -> Tensor[(16, 5, 11), float32] {
    %583 = @func_6971() /* ty=Tensor[(16, 5, 11), float64] */;
    %584 = cast(%583, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
    atan(%584) /* ty=Tensor[(16, 5, 11), float32] */
  };
  %585() /* ty=Tensor[(16, 5, 11), float32] */
}

def @func_8883(%var_8882: Tensor[(2, 11, 6), float32]) -> (Tensor[(2, 11, 6), float32],) {
  %588 = fn (%var_8870: Tensor[(2, 11, 6), float32]) -> (Tensor[(2, 11, 6), float32],) {
    %586 = cast(%var_8870, dtype="float32") /* ty=Tensor[(2, 11, 6), float32] */;
    %587 = log(%586) /* ty=Tensor[(2, 11, 6), float32] */;
    (%587,)
  };
  %588(%var_8882) /* ty=(Tensor[(2, 11, 6), float32],) */
}

def @func_11270() -> (Tensor[(832), float32], Tensor[(16, 5, 11), bool], Tensor[(16, 5, 11), float64]) {
  %603 = fn () -> (Tensor[(832), float32], Tensor[(16, 5, 11), bool], Tensor[(16, 5, 11), float64]) {
    %589 = cast(meta[relay.Constant][31] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %590 = reshape(%589, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), float32] */;
    %591 = @func_8813(%590) /* ty=(Tensor[(8, 8, 13), float32], Tensor[(16, 5, 11), float64]) */;
    %592 = %591.1;
    %593 = cast(%592, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
    %594 = acosh(%593) /* ty=Tensor[(16, 5, 11), float64] */;
    %595 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
    %596 = %595.0;
    %597 = cast(%596, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
    %598 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%594, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %601 = less(%599, %600) /* ty=Tensor[(16, 5, 11), bool] */;
    %602 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
    (meta[relay.Constant][31] /* ty=Tensor[(832), float32] */, %601, %602)
  };
  %603() /* ty=(Tensor[(832), float32], Tensor[(16, 5, 11), bool], Tensor[(16, 5, 11), float64]) */
}

def @func_6509() -> Tensor[(16, 5, 11), float64] {
  @func_6507() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_8522() -> (Tensor[(16, 5, 11), float64],) {
  %605 = fn () -> (Tensor[(16, 5, 11), float64],) {
    %604 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
    (%604,)
  };
  %605() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_9637(%var_9636: Tensor[(720), uint8]) -> (Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint16], Tensor[(720), uint8]) {
  %616 = fn (%var_9622: Tensor[(720), uint8]) -> (Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint16], Tensor[(720), uint8]) {
    %606 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %607 = cast(%var_9622, dtype="uint8") /* ty=Tensor[(720), uint8] */;
    %608 = cast(%var_9622, dtype="uint8") /* ty=Tensor[(720), uint8] */;
    %609 = cast(%var_9622, dtype="uint8") /* ty=Tensor[(720), uint8] */;
    %610 = reshape(%607, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
    %611 = reshape(%608, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
    %612 = reshape(%609, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), uint8] */;
    %613 = @func_6533(%610, %611, %612) /* ty=(Tensor[(16, 3, 15), uint8], Tensor[(16, 3, 15), uint16], Tensor[(16, 5, 11), float64]) */;
    %614 = %606.0;
    %615 = %613.1;
    (%614, %615, %var_9622)
  };
  %616(%var_9636) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 3, 15), uint16], Tensor[(720), uint8]) */
}

def @func_11634(%var_11632: Tensor[(512, 10), int64]) -> (Tensor[(16, 5, 11), float64], float32, Tensor[(512, 10), uint64]) {
  @func_11631(%var_11632) /* ty=(Tensor[(16, 5, 11), float64], float32, Tensor[(512, 10), uint64]) */
}

def @func_11964() -> Tensor[(12, 84), int64] {
  %617 = @func_11566() /* ty=(Tensor[(12, 84), int64],) */;
  %617.0
}

def @func_8130(%var_8125: Tensor[(16, 16, 16), float32]) -> (Tensor[(16, 16, 16), float32],) {
  %618 = cast(%var_8125, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
  %619 = sqrt(%618) /* ty=Tensor[(16, 16, 16), float32] */;
  (%619,)
}

def @func_159(%var_157: Tensor[(9, 7, 8), bool]) -> (Tensor[(9, 7, 8), bool],) {
  @func_156(%var_157) /* ty=(Tensor[(9, 7, 8), bool],) */
}

def @func_6768(%var_6767: Tensor[(270), float32]) -> (Tensor[(16, 5, 11), float32], Tensor[(14, 6, 12), int64], Tensor[(270), float32]) {
  %626 = fn (%var_6757: Tensor[(270), float32]) -> (Tensor[(16, 5, 11), float32], Tensor[(14, 6, 12), int64], Tensor[(270), float32]) {
    %620 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
    %621 = cast(%var_6757, dtype="float32") /* ty=Tensor[(270), float32] */;
    %622 = reshape(%621, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
    %623 = @func_6433(%622) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) */;
    %624 = %620.2;
    %625 = %623.0;
    (%624, %625, %var_6757)
  };
  %626(%var_6767) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(14, 6, 12), int64], Tensor[(270), float32]) */
}

def @func_11460() -> Tensor[(504), bool] {
  %627 = fn () -> Tensor[(504), bool] {
    @func_10539() /* ty=Tensor[(504), bool] */
  };
  %627() /* ty=Tensor[(504), bool] */
}

def @func_6862(%var_6860: Tensor[(2, 48), float64]) -> (Tensor[(10, 11, 4), float32], Tensor[(2, 12, 4), float64], Tensor[(2, 48), float64], Tensor[(16, 5, 11), float64]) {
  @func_6859(%var_6860) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(2, 12, 4), float64], Tensor[(2, 48), float64], Tensor[(16, 5, 11), float64]) */
}

def @func_10410() -> (Tensor[(16, 5, 11), float32],) {
  %632 = fn () -> (Tensor[(16, 5, 11), float32],) {
    %628 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %629 = %628.0;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
    %631 = log(%630) /* ty=Tensor[(16, 5, 11), float32] */;
    (%631,)
  };
  %632() /* ty=(Tensor[(16, 5, 11), float32],) */
}

def @func_11842(%var_11805: Tensor[(12, 84), int64]) -> (Tensor[(12, 84), bool], Tensor[(16, 5, 11), float64]) {
  %633 = @func_11442() /* ty=(Tensor[(12, 84), int64],) */;
  %634 = %633.0;
  %635 = cast(%var_11805, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %636 = shape_of(%634, dtype="int32") /* ty=Tensor[(2), int32] */;
  %637 = cast(%634, dtype="bool") /* ty=Tensor[(12, 84), bool] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %639 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %640 = logical_and(%637, %638) /* ty=Tensor[(12, 84), bool] */;
  %641 = %639.0;
  (%640, %641)
}

def @func_6320() -> (Tensor[(16, 5, 11), float64],) {
  @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_7172() -> Tensor[(16, 5, 11), float64] {
  @func_7170() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_8667() -> (Tensor[(16, 5, 11), float64],) {
  @func_8665() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_10383() -> (Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(96), float64]) {
  %642 = @func_10085() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */;
  %643 = cast(meta[relay.Constant][32] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %644 = reshape(%643, newshape=[4, 24]) /* ty=Tensor[(4, 24), float64] */;
  %645 = @func_7163(%644) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64], Tensor[(4, 24), float64]) */;
  %646 = %642.1;
  %647 = %645.1;
  (%646, %647, meta[relay.Constant][32] /* ty=Tensor[(96), float64] */)
}

def @func_10973() -> Tensor[(16, 5, 11), float64] {
  %648 = fn () -> Tensor[(16, 5, 11), float64] {
    @func_6507() /* ty=Tensor[(16, 5, 11), float64] */
  };
  %648() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_6650(%var_6648: Tensor[(16, 5, 11), float64], %var_6649: Tensor[(96), float64]) -> (Tensor[(16, 5, 11), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64], Tensor[(16, 5, 11), float64]) {
  %666 = fn (%var_6611: Tensor[(16, 5, 11), float64], %var_6625: Tensor[(96), float64]) -> (Tensor[(16, 5, 11), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64], Tensor[(16, 5, 11), float64]) {
    %649 = @func_6318() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %650 = %649.0;
    %651 = cast(%var_6611, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
    %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(3), int32] */;
    %653 = cast(%650, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
    %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %655 = cast(%var_6625, dtype="float64") /* ty=Tensor[(96), float64] */;
    %656 = cast(%var_6625, dtype="float64") /* ty=Tensor[(96), float64] */;
    %657 = reshape(%655, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
    %658 = reshape(%656, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
    %659 = @func_4288(%657, %658) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */;
    %660 = cast(%650, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
    %661 = asinh(%660) /* ty=Tensor[(16, 5, 11), float32] */;
    %662 = cast(%661, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
    %663 = equal(%653, %654) /* ty=Tensor[(16, 5, 11), bool] */;
    %664 = %659.1;
    %665 = sqrt(%662) /* ty=Tensor[(16, 5, 11), float64] */;
    (%663, %664, %var_6625, %665)
  };
  %666(%var_6648, %var_6649) /* ty=(Tensor[(16, 5, 11), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64], Tensor[(16, 5, 11), float64]) */
}

def @func_8016() -> (Tensor[(16, 5, 11), float64],) {
  %669 = fn () -> (Tensor[(16, 5, 11), float64],) {
    %667 = @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */;
    %668 = %667.1;
    (%668,)
  };
  %669() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_10559() -> (Tensor[(16, 5, 11), float64],) {
  @func_10557() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_10730() -> (Tensor[(16, 5, 11), float32],) {
  %673 = fn () -> (Tensor[(16, 5, 11), float32],) {
    %670 = @func_10621() /* ty=Tensor[(16, 5, 11), float64] */;
    %671 = cast(%670, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
    %672 = sinh(%671) /* ty=Tensor[(16, 5, 11), float32] */;
    (%672,)
  };
  %673() /* ty=(Tensor[(16, 5, 11), float32],) */
}

def @func_4288(%var_4270: Tensor[(2, 12, 4), float64], %var_4279: Tensor[(2, 12, 4), float64]) -> (Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) {
  %674 = cast(%var_4270, dtype="float64") /* ty=Tensor[(2, 12, 4), float64] */;
  %675 = cast(%var_4279, dtype="int32") /* ty=Tensor[(2, 12, 4), int32] */;
  %676 = shape_of(%var_4270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_4270, dtype="int32") /* ty=Tensor[(2, 12, 4), int32] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %679 = erf(%674) /* ty=Tensor[(2, 12, 4), float64] */;
  %680 = bitwise_or(%677, %678) /* ty=Tensor[(2, 12, 4), int32] */;
  (%679, %680)
}

def @func_11312() -> (Tensor[(9, 8, ?), bool], Tensor[(16, 5, 11), float64], Tensor[(1078), float64], Tensor[(16, 5, 11), float64]) {
  %688 = fn () -> (Tensor[(9, 8, ?), bool], Tensor[(16, 5, 11), float64], Tensor[(1078), float64], Tensor[(16, 5, 11), float64]) {
    %681 = @func_9782() /* ty=(Tensor[(9, 8, ?), bool],) */;
    %682 = cast(meta[relay.Constant][33] /* ty=Tensor[(1078), float64] */, dtype="float64") /* ty=Tensor[(1078), float64] */;
    %683 = reshape(%682, newshape=[7, 14, 11]) /* ty=Tensor[(7, 14, 11), float64] */;
    %684 = @func_10006(%683) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(7, 14, 11), float64]) */;
    %685 = %681.0;
    %686 = %684.0;
    %687 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
    (%685, %686, meta[relay.Constant][33] /* ty=Tensor[(1078), float64] */, %687)
  };
  %688() /* ty=(Tensor[(9, 8, ?), bool], Tensor[(16, 5, 11), float64], Tensor[(1078), float64], Tensor[(16, 5, 11), float64]) */
}

def @func_11933(%var_11922: Tensor[(8, 13, 13), float64], %var_11923: Tensor[(8, 13, 13), float64]) -> (Tensor[(8, 13, 13), float64],) {
  %689 = cast(%var_11923, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
  %690 = shape_of(%var_11922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%var_11922, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %693 = power(%691, %692) /* ty=Tensor[(8, 13, 13), float64] */;
  (%693,)
}

def @func_6387() -> (Tensor[(10, 11, 4), float32],) {
  @func_6385() /* ty=(Tensor[(10, 11, 4), float32],) */
}

def @func_6029(%var_6027: Tensor[(2, 16, 16), int64], %var_6028: Tensor[(2, 16, 16), int64]) -> Tensor[(2, 16, 16), bool] {
  %698 = fn (%var_6005: Tensor[(2, 16, 16), int64], %var_6006: Tensor[(2, 16, 16), int64]) -> Tensor[(2, 16, 16), bool] {
    %694 = cast(%var_6006, dtype="bool") /* ty=Tensor[(2, 16, 16), bool] */;
    %695 = shape_of(%var_6005, dtype="int32") /* ty=Tensor[(3), int32] */;
    %696 = cast(%var_6005, dtype="bool") /* ty=Tensor[(2, 16, 16), bool] */;
    %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%696, %697) /* ty=Tensor[(2, 16, 16), bool] */
  };
  %698(%var_6027, %var_6028) /* ty=Tensor[(2, 16, 16), bool] */
}

def @func_6294() -> (Tensor[(10, 11, 4), float32],) {
  %699 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %700 = %699.1;
  %701 = cast(%700, dtype="float32") /* ty=Tensor[(10, 11, 4), float32] */;
  %702 = exp(%701) /* ty=Tensor[(10, 11, 4), float32] */;
  (%702,)
}

def @func_7799() -> (Tensor[(16, 5, 11), float64], Tensor[(286), float32], Tensor[(286), float32], Tensor[(286), float32], Tensor[(16, 5, 11), float64], Tensor[(2, 6, 2), bool], Tensor[(1, 24), bool], Tensor[(10, 11, 4), float32]) {
  %719 = fn () -> (Tensor[(16, 5, 11), float64], Tensor[(286), float32], Tensor[(286), float32], Tensor[(286), float32], Tensor[(16, 5, 11), float64], Tensor[(2, 6, 2), bool], Tensor[(1, 24), bool], Tensor[(10, 11, 4), float32]) {
    %703 = cast(meta[relay.Constant][34] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
    %704 = reshape(%703, newshape=[286]) /* ty=Tensor[(286), float32] */;
    %705 = @func_7439(%704) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) */;
    %706 = cast(meta[relay.Constant][34] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
    %707 = reshape(%706, newshape=[286]) /* ty=Tensor[(286), float32] */;
    %708 = @func_7439(%707) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64], Tensor[(12, 84), int64], Tensor[(12, 84), bool], Tensor[(12, 84), bool], Tensor[(13, 11, 2), float32], Tensor[(286), float32]) */;
    %709 = @func_6193() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %710 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 24), bool] */, dtype="bool") /* ty=Tensor[(1, 24), bool] */;
    %711 = reshape(%710, newshape=[2, 6, 2]) /* ty=Tensor[(2, 6, 2), bool] */;
    %712 = @func_6842() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) */;
    %713 = @func_6507() /* ty=Tensor[(16, 5, 11), float64] */;
    %714 = %705.6;
    %715 = %708.6;
    %716 = %709.0;
    %717 = @func_5638(%711) /* ty=Tensor[(2, 6, 2), bool] */;
    %718 = %712.0;
    (%713, %714, meta[relay.Constant][34] /* ty=Tensor[(286), float32] */, %715, %716, %717, meta[relay.Constant][35] /* ty=Tensor[(1, 24), bool] */, %718)
  };
  %719() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(286), float32], Tensor[(286), float32], Tensor[(286), float32], Tensor[(16, 5, 11), float64], Tensor[(2, 6, 2), bool], Tensor[(1, 24), bool], Tensor[(10, 11, 4), float32]) */
}

def @func_8216() -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) {
  %720 = @func_6971() /* ty=Tensor[(16, 5, 11), float64] */;
  %721 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
  (%720, %721)
}

def @func_11394() -> Tensor[(16, 5, 11), float32] {
  @func_7929() /* ty=Tensor[(16, 5, 11), float32] */
}

def @func_7841(%var_7839: Tensor[(13, 11), float64], %var_7840: Tensor[(504), bool]) -> (Tensor[(10, 11, 4), float32], Tensor[(143), float32], Tensor[(2, 300), float32], Tensor[(13, 11), float64], Tensor[(504), bool]) {
  @func_7837(%var_7839, %var_7840) /* ty=(Tensor[(10, 11, 4), float32], Tensor[(143), float32], Tensor[(2, 300), float32], Tensor[(13, 11), float64], Tensor[(504), bool]) */
}

def @func_6842() -> (Tensor[(10, 11, 4), float32], Tensor[(16, 5, 11), float64]) {
  %722 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %723 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
  %724 = %722.0;
  %725 = %723.3;
  (%724, %725)
}

def @func_8253() -> (Tensor[(504), bool], Tensor[(16, 5, 11), float64]) {
  %730 = fn () -> (Tensor[(504), bool], Tensor[(16, 5, 11), float64]) {
    %726 = @func_7672() /* ty=(Tensor[(504), bool],) */;
    %727 = @func_6726() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %728 = %726.0;
    %729 = %727.0;
    (%728, %729)
  };
  %730() /* ty=(Tensor[(504), bool], Tensor[(16, 5, 11), float64]) */
}

def @func_10257() -> Tensor[(10, 11, 4), float64] {
  @func_10255() /* ty=Tensor[(10, 11, 4), float64] */
}

def @func_10483() -> Tensor[(16, 5, 11), float64] {
  @func_10481() /* ty=Tensor[(16, 5, 11), float64] */
}

def @func_11478() -> (Tensor[(504), bool], Tensor[(10, 11, 4), float64]) {
  %734 = fn () -> (Tensor[(504), bool], Tensor[(10, 11, 4), float64]) {
    %731 = @func_10085() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */;
    %732 = %731.1;
    %733 = @func_10255() /* ty=Tensor[(10, 11, 4), float64] */;
    (%732, %733)
  };
  %734() /* ty=(Tensor[(504), bool], Tensor[(10, 11, 4), float64]) */
}

def @func_8665() -> (Tensor[(16, 5, 11), float64],) {
  %735 = @func_8357() /* ty=Tensor[(16, 5, 11), float64] */;
  (%735,)
}

def @func_8448(%var_8430: Tensor[(270), float32]) -> (Tensor[(504), bool], Tensor[(2, 16, 16), bool], Tensor[(512), int64], Tensor[(10, 3, 9), uint64], int8, Tensor[(112), int8], Tensor[(270), float32], Tensor[(1008), int64], Tensor[(14, 6, 12), int64], Tensor[(16, 5, 11), float32]) {
  %736 = @func_6463() /* ty=(Tensor[(504), bool],) */;
  %737 = cast(meta[relay.Constant][36] /* ty=Tensor[(512), int64] */, dtype="int64") /* ty=Tensor[(512), int64] */;
  %738 = cast(meta[relay.Constant][36] /* ty=Tensor[(512), int64] */, dtype="int64") /* ty=Tensor[(512), int64] */;
  %739 = reshape(%737, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %740 = reshape(%738, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int64] */;
  %741 = cast(meta[relay.Constant][37] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %742 = cast(meta[relay.Constant][38] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %743 = cast(%var_8430, dtype="float32") /* ty=Tensor[(270), float32] */;
  %744 = cast(meta[relay.Constant][39] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %745 = reshape(%741, newshape=[]) /* ty=int8 */;
  %746 = reshape(%742, newshape=[7, 2, 8]) /* ty=Tensor[(7, 2, 8), int8] */;
  %747 = reshape(%743, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %748 = reshape(%744, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
  %749 = @func_7302(%745, %746, %747, %748) /* ty=(Tensor[(7, 2, 8), int8], Tensor[(16, 5, 11), bool], Tensor[(880), float64], Tensor[(10, 11, 4), int8], Tensor[(440), float32], Tensor[(10, 3, 9), uint64], Tensor[(270), float32], Tensor[(96), float64], Tensor[(16, 5, 11), float64], Tensor[(1008), int64], Tensor[(2, 12, 4), int32], Tensor[(10, 3, 9), uint64]) */;
  %750 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
  %751 = %736.0;
  %752 = @func_6026(%739, %740) /* ty=Tensor[(2, 16, 16), bool] */;
  %753 = %749.5;
  %754 = %750.0;
  %755 = @func_7929() /* ty=Tensor[(16, 5, 11), float32] */;
  (%751, %752, meta[relay.Constant][36] /* ty=Tensor[(512), int64] */, %753, meta[relay.Constant][37] /* ty=int8 */, meta[relay.Constant][38] /* ty=Tensor[(112), int8] */, %var_8430, meta[relay.Constant][39] /* ty=Tensor[(1008), int64] */, %754, %755)
}

def @func_156(%var_145: Tensor[(9, 7, 8), bool]) -> (Tensor[(9, 7, 8), bool],) {
  %756 = cast(%var_145, dtype="bool") /* ty=Tensor[(9, 7, 8), bool] */;
  %757 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(9, 7, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 7, 8), bool] */, dtype="bool") /* ty=Tensor[(9, 7, 8), bool] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %760 = logical_and(%758, %759) /* ty=Tensor[(9, 7, 8), bool] */;
  (%760,)
}

def @func_6385() -> (Tensor[(10, 11, 4), float32],) {
  %761 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %762 = %761.0;
  (%762,)
}

def @func_6125(%var_6119: Tensor[(9, 8, 1), float64], %var_6120: Tensor[(9, 8, 1), float64]) -> (Tensor[(9, 8, ?), bool],) {
  %763 = cast(%var_6120, dtype="bool") /* ty=Tensor[(9, 8, 1), bool] */;
  %764 = shape_of(%var_6119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%var_6119, dtype="bool") /* ty=Tensor[(9, 8, 1), bool] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %767 = greater_equal(%765, %766) /* ty=Tensor[(9, 8, ?), bool] */;
  (%767,)
}

def @func_9180() -> (Tensor[(10, 11, 4), float32], Tensor[(9, 8, ?), bool], Tensor[(72), float64]) {
  @func_9178() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(9, 8, ?), bool], Tensor[(72), float64]) */
}

def @func_10644() -> (Tensor[(3, 14, 9), float64], Tensor[(16, 5, 11), float64]) {
  %768 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 14, 9), float64] */;
  %769 = @func_8521() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %770 = log(%768) /* ty=Tensor[(3, 14, 9), float64] */;
  %771 = %769.0;
  (%770, %771)
}

def @func_9354() -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) {
  %772 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
  %773 = %772.1;
  %774 = @func_8389() /* ty=Tensor[(16, 5, 11), float64] */;
  (%773, %774)
}

def @func_10898() -> (Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float32]) {
  %781 = fn () -> (Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float32]) {
    %775 = @func_10409() /* ty=(Tensor[(16, 5, 11), float32],) */;
    %776 = %775.0;
    %777 = cast(%776, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
    %778 = @func_10085() /* ty=(Tensor[(10, 11, 4), float32], Tensor[(504), bool]) */;
    %779 = acos(%777) /* ty=Tensor[(16, 5, 11), float64] */;
    %780 = %778.0;
    (%779, %780)
  };
  %781() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float32]) */
}

def @func_9356() -> (Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) {
  @func_9354() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */
}

def @func_8997(%var_8957: Tensor[(16, 5, 11), float64], %var_8974: Tensor[(2, 252), bool]) -> (Tensor[(16, 5, 11), float32], Tensor[(9, 7, 8), bool], Tensor[(2, 252), bool]) {
  %782 = @func_8855() /* ty=(Tensor[(16, 5, 11), float64],) */;
  %783 = %782.0;
  %784 = cast(%var_8957, dtype="int8") /* ty=Tensor[(16, 5, 11), int8] */;
  %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%783, dtype="int8") /* ty=Tensor[(16, 5, 11), int8] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %788 = maximum(%786, %787) /* ty=Tensor[(16, 5, 11), int8] */;
  %789 = cast(%788, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %790 = cast(%var_8974, dtype="bool") /* ty=Tensor[(2, 252), bool] */;
  %791 = reshape(%790, newshape=[9, 7, 8]) /* ty=Tensor[(9, 7, 8), bool] */;
  %792 = @func_156(%791) /* ty=(Tensor[(9, 7, 8), bool],) */;
  %793 = erf(%789) /* ty=Tensor[(16, 5, 11), float32] */;
  %794 = %792.0;
  (%793, %794, %var_8974)
}

def @func_4292(%var_4290: Tensor[(2, 12, 4), float64], %var_4291: Tensor[(2, 12, 4), float64]) -> (Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) {
  @func_4288(%var_4290, %var_4291) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */
}

def @func_8133(%var_8131: Tensor[(16, 16, 16), float32]) -> (Tensor[(16, 16, 16), float32],) {
  @func_8130(%var_8131) /* ty=(Tensor[(16, 16, 16), float32],) */
}

def @func_8310(%var_8309: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), bool], Tensor[(16, 5, 11), float64], Tensor[(9, 5, 2), float64], Tensor[(90, 1), float64]) {
  %806 = fn (%var_8279: Tensor[(16, 5, 11), float64]) -> (Tensor[(16, 5, 11), bool], Tensor[(16, 5, 11), float64], Tensor[(9, 5, 2), float64], Tensor[(90, 1), float64]) {
    %795 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
    %796 = cast(%var_8279, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
    %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
    %798 = cast(%795, dtype="bool") /* ty=Tensor[(16, 5, 11), bool] */;
    %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %800 = cast(meta[relay.Constant][42] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
    %801 = reshape(%800, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float64] */;
    %802 = @func_3138(%801) /* ty=(Tensor[(9, 5, 2), float64],) */;
    %803 = logical_or(%798, %799) /* ty=Tensor[(16, 5, 11), bool] */;
    %804 = @func_7170() /* ty=Tensor[(16, 5, 11), float64] */;
    %805 = %802.0;
    (%803, %804, %805, meta[relay.Constant][42] /* ty=Tensor[(90, 1), float64] */)
  };
  %806(%var_8309) /* ty=(Tensor[(16, 5, 11), bool], Tensor[(16, 5, 11), float64], Tensor[(9, 5, 2), float64], Tensor[(90, 1), float64]) */
}

def @func_5701(%var_5699: float32, %var_5700: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64]) {
  %816 = fn (%var_5675: float32, %var_5676: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64]) {
    %807 = cast(%var_5675, dtype="bool") /* ty=bool */;
    %808 = cast(%var_5676, dtype="bool") /* ty=Tensor[(9, 1, 14), bool] */;
    %809 = cast(meta[relay.Constant][43] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %810 = cast(meta[relay.Constant][43] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
    %811 = reshape(%809, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
    %812 = reshape(%810, newshape=[2, 12, 4]) /* ty=Tensor[(2, 12, 4), float64] */;
    %813 = @func_4288(%811, %812) /* ty=(Tensor[(2, 12, 4), float64], Tensor[(2, 12, 4), int32]) */;
    %814 = greater_equal(%807, %808) /* ty=Tensor[(9, 1, 14), bool] */;
    %815 = %813.1;
    (%814, %815, meta[relay.Constant][43] /* ty=Tensor[(96), float64] */)
  };
  %816(%var_5699, %var_5700) /* ty=(Tensor[(9, 1, 14), bool], Tensor[(2, 12, 4), int32], Tensor[(96), float64]) */
}

def @func_9045() -> (Tensor[(10, 11, 4), float64],) {
  %819 = fn () -> (Tensor[(10, 11, 4), float64],) {
    %817 = @func_6233() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(10, 11, 4), float64], Tensor[(440), float64], Tensor[(16, 5, 11), float64], Tensor[(9, 7, 8), bool], Tensor[(504), bool]) */;
    %818 = %817.1;
    (%818,)
  };
  %819() /* ty=(Tensor[(10, 11, 4), float64],) */
}

def @func_9911() -> (Tensor[(16, 5, 11), float64],) {
  @func_9909() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_11297() -> (Tensor[(16, 5, 11), float64],) {
  %822 = fn () -> (Tensor[(16, 5, 11), float64],) {
    %820 = @func_8216() /* ty=(Tensor[(16, 5, 11), float64], Tensor[(16, 5, 11), float64]) */;
    %821 = %820.0;
    (%821,)
  };
  %822() /* ty=(Tensor[(16, 5, 11), float64],) */
}

def @func_9909() -> (Tensor[(16, 5, 11), float64],) {
  %823 = @func_8357() /* ty=Tensor[(16, 5, 11), float64] */;
  (%823,)
}

def @func_10385() -> (Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(96), float64]) {
  @func_10383() /* ty=(Tensor[(504), bool], Tensor[(16, 5, 11), float64], Tensor[(96), float64]) */
}

def @func_6435(%var_6434: Tensor[(10, 3, 9), float32]) -> (Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) {
  %833 = fn (%var_6420: Tensor[(10, 3, 9), float32]) -> (Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) {
    %824 = @func_6375() /* ty=(Tensor[(14, 6, 12), int64], Tensor[(12, 84), int64], Tensor[(16, 5, 11), float32]) */;
    %825 = cast(%var_6420, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
    %826 = atanh(%825) /* ty=Tensor[(10, 3, 9), float32] */;
    %827 = cast(%var_6420, dtype="uint64") /* ty=Tensor[(10, 3, 9), uint64] */;
    %828 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
    %829 = cast(%826, dtype="uint64") /* ty=Tensor[(10, 3, 9), uint64] */;
    %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %831 = %824.0;
    %832 = bitwise_or(%829, %830) /* ty=Tensor[(10, 3, 9), uint64] */;
    (%831, %832)
  };
  %833(%var_6434) /* ty=(Tensor[(14, 6, 12), int64], Tensor[(10, 3, 9), uint64]) */
}

def @func_7673() -> (Tensor[(504), bool],) {
  %836 = fn () -> (Tensor[(504), bool],) {
    %834 = @func_6463() /* ty=(Tensor[(504), bool],) */;
    %835 = %834.0;
    (%835,)
  };
  %836() /* ty=(Tensor[(504), bool],) */
}

def @func_4248(%var_4243: Tensor[(45, 2), float64]) -> (Tensor[(14, 11, 15), bool], Tensor[(9, 5, 2), float64], Tensor[(45, 2), float64]) {
  %837 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %838 = asinh(%837) /* ty=Tensor[(14, 11, 15), float64] */;
  %839 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 11, 15), float64] */, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%838, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %843 = cast(%var_4243, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %844 = reshape(%843, newshape=[9, 5, 2]) /* ty=Tensor[(9, 5, 2), float64] */;
  %845 = @func_3138(%844) /* ty=(Tensor[(9, 5, 2), float64],) */;
  %846 = less(%841, %842) /* ty=Tensor[(14, 11, 15), bool] */;
  %847 = %845.0;
  (%846, %847, %var_4243)
}

def @func_8943(%var_8941: Tensor[(6, 12, 8), float32], %var_8942: Tensor[(6, 12, 8), float32]) -> (Tensor[(6, 12, 8), float32],) {
  @func_8939(%var_8941, %var_8942) /* ty=(Tensor[(6, 12, 8), float32],) */
}

def @func_10540() -> Tensor[(504), bool] {
  %849 = fn () -> Tensor[(504), bool] {
    %848 = @func_7672() /* ty=(Tensor[(504), bool],) */;
    %848.0
  };
  %849() /* ty=Tensor[(504), bool] */
}

def @func_11020() -> Tensor[(10, 11, 4), float32] {
  @func_11018() /* ty=Tensor[(10, 11, 4), float32] */
}

def @func_10255() -> Tensor[(10, 11, 4), float64] {
  %850 = @func_9044() /* ty=(Tensor[(10, 11, 4), float64],) */;
  %850.0
}

def @func_6129(%var_6127: Tensor[(9, 8, 1), float64], %var_6128: Tensor[(9, 8, 1), float64]) -> (Tensor[(9, 8, ?), bool],) {
  @func_6125(%var_6127, %var_6128) /* ty=(Tensor[(9, 8, ?), bool],) */
}

def @func_9736(%var_9734: Tensor[(4096), float32]) -> (Tensor[(12, 84), int64], Tensor[(504), bool], Tensor[(16, 16, 16), float32], Tensor[(4096), float64]) {
  @func_9733(%var_9734) /* ty=(Tensor[(12, 84), int64], Tensor[(504), bool], Tensor[(16, 16, 16), float32], Tensor[(4096), float64]) */
}

def @func_6193() -> (Tensor[(16, 5, 11), float64],) {
  %851 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %852 = atanh(%851) /* ty=Tensor[(16, 5, 11), float64] */;
  (%852,)
}

def @func_7640(%var_7634: Tensor[(286), float32], %var_7635: Tensor[(1040, 1), uint32], %var_7636: int8, %var_7637: Tensor[(112), int8], %var_7638: Tensor[(30, 9), float32], %var_7639: Tensor[(504, 2), int64]) -> (Tensor[(16, 5, 11), float64], Tensor[(13, 11, 2), float32], Tensor[(5, 16, 13), uint32], Tensor[(1040, 1), uint32], Tensor[(286), float32], Tensor[(2, 12, 4), int32], int8, Tensor[(112), int8], Tensor[(30, 9), float32], Tensor[(504, 2), int64]) {
  %876 = fn (%var_7599: Tensor[(286), float32], %var_7608: Tensor[(1040, 1), uint32], %var_7624: int8, %var_7625: Tensor[(112), int8], %var_7626: Tensor[(30, 9), float32], %var_7627: Tensor[(504, 2), int64]) -> (Tensor[(16, 5, 11), float64], Tensor[(13, 11, 2), float32], Tensor[(5, 16, 13), uint32], Tensor[(1040, 1), uint32], Tensor[(286), float32], Tensor[(2, 12, 4), int32], int8, Tensor[(112), int8], Tensor[(30, 9), float32], Tensor[(504, 2), int64]) {
    %853 = @func_6726() /* ty=(Tensor[(16, 5, 11), float64],) */;
    %854 = cast(%var_7599, dtype="float32") /* ty=Tensor[(286), float32] */;
    %855 = reshape(%854, newshape=[13, 11, 2]) /* ty=Tensor[(13, 11, 2), float32] */;
    %856 = @func_876(%855) /* ty=(Tensor[(13, 11, 2), float32],) */;
    %857 = cast(%var_7608, dtype="uint32") /* ty=Tensor[(1040, 1), uint32] */;
    %858 = cast(%var_7608, dtype="uint32") /* ty=Tensor[(1040, 1), uint32] */;
    %859 = reshape(%857, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), uint32] */;
    %860 = reshape(%858, newshape=[5, 16, 13]) /* ty=Tensor[(5, 16, 13), uint32] */;
    %861 = cast(%var_7599, dtype="float32") /* ty=Tensor[(286), float32] */;
    %862 = cast(%var_7624, dtype="int8") /* ty=int8 */;
    %863 = cast(%var_7625, dtype="int8") /* ty=Tensor[(112), int8] */;
    %864 = cast(%var_7626, dtype="float32") /* ty=Tensor[(30, 9), float32] */;
    %865 = cast(%var_7627, dtype="int64") /* ty=Tensor[(504, 2), int64] */;
    %866 = reshape(%862, newshape=[]) /* ty=int8 */;
    %867 = reshape(%863, newshape=[7, 2, 8]) /* ty=Tensor[(7, 2, 8), int8] */;
    %868 = reshape(%864, newshape=[270]) /* ty=Tensor[(270), float32] */;
    %869 = reshape(%865, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
    %870 = @func_7302(%866, %867, %868, %869) /* ty=(Tensor[(7, 2, 8), int8], Tensor[(16, 5, 11), bool], Tensor[(880), float64], Tensor[(10, 11, 4), int8], Tensor[(440), float32], Tensor[(10, 3, 9), uint64], Tensor[(270), float32], Tensor[(96), float64], Tensor[(16, 5, 11), float64], Tensor[(1008), int64], Tensor[(2, 12, 4), int32], Tensor[(10, 3, 9), uint64]) */;
    %871 = %853.0;
    %872 = %856.0;
    %873 = @func_5734(%859, %860) /* ty=Tensor[(5, 16, 13), uint32] */;
    %874 = rsqrt(%861) /* ty=Tensor[(286), float32] */;
    %875 = %870.10;
    (%871, %872, %873, %var_7608, %874, %875, %var_7624, %var_7625, %var_7626, %var_7627)
  };
  %876(%var_7634, %var_7635, %var_7636, %var_7637, %var_7638, %var_7639) /* ty=(Tensor[(16, 5, 11), float64], Tensor[(13, 11, 2), float32], Tensor[(5, 16, 13), uint32], Tensor[(1040, 1), uint32], Tensor[(286), float32], Tensor[(2, 12, 4), int32], int8, Tensor[(112), int8], Tensor[(30, 9), float32], Tensor[(504, 2), int64]) */
}

def @func_8855() -> (Tensor[(16, 5, 11), float64],) {
  %877 = @func_8389() /* ty=Tensor[(16, 5, 11), float64] */;
  (%877,)
}

def @func_9311() -> (Tensor[(504), bool],) {
  %880 = fn () -> (Tensor[(504), bool],) {
    %878 = @func_6463() /* ty=(Tensor[(504), bool],) */;
    %879 = %878.0;
    (%879,)
  };
  %880() /* ty=(Tensor[(504), bool],) */
}

def @func_878(%var_877: Tensor[(13, 11, 2), float32]) -> (Tensor[(13, 11, 2), float32],) {
  %883 = fn (%var_867: Tensor[(13, 11, 2), float32]) -> (Tensor[(13, 11, 2), float32],) {
    %881 = cast(%var_867, dtype="float32") /* ty=Tensor[(13, 11, 2), float32] */;
    %882 = log10(%881) /* ty=Tensor[(13, 11, 2), float32] */;
    (%882,)
  };
  %883(%var_877) /* ty=(Tensor[(13, 11, 2), float32],) */
}

def @func_10239() -> Tensor[(10, 11, 4), float32] {
  %884 = @func_6294() /* ty=(Tensor[(10, 11, 4), float32],) */;
  %884.0
}

def @func_5168(%var_5147: uint8, %var_5148: Tensor[(6, 9, 7), uint8]) -> Tensor[(6, 9, 7), uint8] {
  %885 = cast(%var_5147, dtype="uint8") /* ty=uint8 */;
  %886 = cast(%var_5148, dtype="uint8") /* ty=Tensor[(6, 9, 7), uint8] */;
  bitwise_or(%885, %886) /* ty=Tensor[(6, 9, 7), uint8] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.
